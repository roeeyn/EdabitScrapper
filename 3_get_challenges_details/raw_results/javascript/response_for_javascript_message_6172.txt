a["{\"msg\":\"result\",\"id\":\"1833\",\"result\":{\"_id\":\"MregZPPJWSxhXtrNB\",\"author\":\"Miguel Carvalho\",\"authorId\":\"8Z3dkvWBqtrMEE48N\",\"code\":\"function findAndRemove(obj) {\\n\\t\\n}\",\"difficulty\":2.640449438202247,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"jF8fW79pLDuh79WMn\",\"instructions\":\"The insurance guy calls. They were about to pay you all that fortune you've been anxiously waiting for, but they detected further irregularities; the list of stolen items is misformatted and appears to contain other entries that don't belong there. Find and remove them.\\n\\nYou receive an object with nested objects with `strings` as values. Convert their values to `number` and return an object without the entries that evaluate to `NaN`.\\n\\n### Examples\\n```\\nfindAndRemove({\\n    bedroom: {\\n      slippers: \\\"10000\\\",\\n      piano: \\\"550\\\",\\n      call: \\\"vet\\\",\\n      travel: \\\"world\\\",\\n    },\\n  }) ➞ {\\n    bedroom: {\\n      slippers: 10000,\\n      piano: 5500,\\n    },\\n  }\\n```\\n\\n```\\n findAndRemove({\\n    kitchen: {\\n      [\\\"gold spoons\\\"]: \\\"900\\\",\\n      piano: \\\"550\\\",\\n      notes: \\\"ga0r76ba22g4e\\\",\\n    },\\n    cellar: {\\n      reminder: \\\"dog\\\",\\n      bottle: \\\"750\\\",\\n    },\\n  }) ➞ {\\n    kitchen: {\\n      [\\\"gold spoons\\\"]: 900,\\n      piano: 550,\\n    },\\n    cellar: {\\n      bottle: 750,\\n    },\\n  }\\n```\\n\\n### Notes\\n- The type of `NaN` is actually `number`.\\n- If you have suggestions on how to present or further test this challenge please leave a comment.\\n- This series is part of a [collection that focuses on objects](https://edabit.com/collection/6NzWEMSwrSw4fnKkL). If you are interested in following the breath-taking narrative skills of yours truly or just do some object focused challenges (the challenges are ordered in ascending difficulty order), you can more easily [do that here](https://edabit.com/collection/6NzWEMSwrSw4fnKkL).\",\"isFree\":false,\"isHidden\":false,\"lab\":\"const random = Math.random()\\nconst randomString = Test.randomToken()\\nconst obj = {\\n    bedroom: {\\n      slippers: \\\"10000\\\",\\n      piano: String(random),\\n      call: \\\"vet\\\",\\n      travel: \\\"world\\\",\\n    },\\n  }\\nconst obj2 = {\\n    \\tkitchen: {\\n\\t\\t\\t\\t[\\\"gold spoons\\\"]: \\\"900\\\",\\n\\t\\t\\t\\tpiano: \\\"550\\\",\\n\\t\\t\\t\\tnotes: randomString,\\n    \\t},\\n\\t\\t\\tcellar: {\\n\\t\\t\\t\\treminder: \\\"dog\\\",\\n\\t\\t\\t\\tbottle: \\\"750\\\",\\n    },\\n  }\\nconst obj3 = {attic: { node: \\\"js\\\", },};\\nconst obj4 = {\\n    bedroom: {\\n      slippers: \\\"10000\\\",\\n      pen: \\\"570\\\",\\n      call: \\\"v0g89t7t\\\",\\n      travel: \\\"wo1a3d5d\\\",\\n    },\\n  }\\nconst obj5 = {\\n    bedroom: {\\n      guitar: \\\"900000\\\",\\n      pen: \\\"570\\\",\\n      call: `${randomString} ${random * 100000}`,\\n      travel: \\\"wo245t61d\\\",\\n    },\\n  }\\n\\nTest.assertSimilar(findAndRemove(obj5), {\\n    bedroom: {\\n      guitar: 900000,\\n      pen: 570,\\n    },\\n  })\\nTest.assertSimilar(findAndRemove(obj4), {\\n    bedroom: {\\n      slippers: 10000,\\n      pen: 570,\\n    },\\n  })\\nTest.assertSimilar(findAndRemove(obj3), {attic: {}})\\nTest.assertSimilar(findAndRemove(obj2), {\\n    kitchen: {\\n      [\\\"gold spoons\\\"]: 900,\\n      piano: 550,\\n    },\\n    cellar: {\\n      bottle: 750,\\n    },\\n  })\\nTest.assertSimilar(findAndRemove(obj), {\\n    bedroom: {\\n      slippers: 10000,\\n      piano: random,\\n    },\\n  })\",\"language\":\"javascript\",\"quality\":4.642857142857143,\"stats\":{\"completed\":{\"ratings\":[3,3,3,3,3,3,2,1,0,3,3,3,2,3,2,3,2,4,3,4,3,3,2,3,1,3,3,4,1,3,3,1,1,1,3,5,1,3,4,4,4,4,3,3,2,5,2,3,2,2,2,2,4,2,2,3,0,0,4,4,2,4,4,3,2,0,3,2,4,1,3,1,3,3,4,3,2,3,3,3,4,2,2,2,2,3,4,3,2],\"quality\":[5,4,2,5,5,5,5,5,5,4,5,5,5,5],\"rators\":[\"8Z3dkvWBqtrMEE48N\",\"XrN688tKMi8qqsNFK\",\"yjtdwc2AC4jA2RWtn\",\"QRv96jmNaYsWkxQEG\",\"YLTZRjM78Wi9J9Re4\",\"qvNk7pHSveLu3jqWw\",\"oBCStgAyNK7z8C4WA\",\"RKKuw76K7sRBMouKq\",\"vGKxRcDYDsXzTQuEQ\",\"5NGxHLcQ8Af2RJ4TN\",\"YEjnBpgNjDLhnf4H7\",\"GqgcckGKYuyLTDFoq\",\"BjJhatTBaTWm3ZhCt\",\"KcpfY4XZ7fNamyLd3\",\"j5avLbAd2FtsHBdSg\",\"vuDP7uD5oSmHL7zYd\",\"RiCggsa6Hhj3aKAX6\",\"mER4kEsRRxwbFgPRC\",\"acHSYL6uQAgpgFMjp\",\"JiZcwyzryD7Qrq9xN\",\"buX4mCQhtXCfBjeno\",\"PGCDJpQMN8Sjn9Gm6\",\"LtTpCzF8kt6Rdth4X\",\"gLt9Nzpe4oqDx6i2e\",\"z8R4K9Cd7PNuh256A\",\"FciF5cPyYvAE6unqR\",\"PH32cNxBjrK4a28sn\",\"6vfjruFp8ZpRSi3AT\",\"mHT2bJb5SByfJ8yKS\",\"Qk4uDbyowgDx35RuT\",\"mDWNyaaQ9hvPCRzSd\",\"WKGHoGpSEcEcAxmTE\",\"MT26yxj3YX95DsyLj\",\"CNc6rmwhbxkxEhHAp\",\"xQ7uLC6QTtEyKENv9\",\"BZ582kfiaTEm8q5w3\",\"3W33KnSNJsxcpaGK3\",\"3ZgDpRTLPjTNkgrhs\",\"6ye6R2yWzcScSmzMb\",\"WERc8adGSsPMPuNwu\",\"7vY54tTfdPnFf54hC\",\"Xk2g4CNFAnYcvxiSr\",\"Rbr9NCY88MnAeCXka\",\"JjXgk86saCzC2mNub\",\"iyNqxcRq2za3p2D2c\",\"9ToxdXBnATpLmNx2E\",\"M4vq8ATaS9Jg5X7iP\",\"FJsvM5yqKuK9yMk9P\",\"aBZbbqCZCJAmKY2pa\",\"qLv6iMQAGkgFv5qki\",\"QmLbe7LJLAoqdgQXZ\",\"Ryrcp76vts2YwHLpu\",\"AasGs8AeX9Lcb9xJn\",\"jemTNShfp6ymAs3pj\",\"8BJyXvRWcrvN3nttS\",\"ucaDnFgvkB5hp5srb\",\"ahAe7pcyjYGzcDRm4\",\"KpHrC7WPEojnzgEtz\",\"hvdKAwFwoKQxemmre\",\"nHj7SC5cnmkTApbgY\",\"MbGB3qGw2EC55yKT8\",\"oDtGiNqDMHmhHE3J8\",\"coZrmigyvbBqw3S4s\",\"STipuJs6kBvPqqsSE\",\"s678Wirfor5uYL5T6\",\"8op7s67jE2nYdo4js\",\"h4jFmtbFn92eA4649\",\"SdEQsNapyg24YATuh\",\"XuGmzP4JktJv3P3Ku\",\"vE5jmzjqZtafA7rbA\",\"2ZRsXKpD5Kdi8C4iF\",\"wrJ38mm6asrr9sCYo\",\"en7JTZ8xWqv2YHhz4\",\"eWoi3eexfQ2iaapBA\",\"WnogMFYXoyvmBmGkm\",\"CBRx8seBYyYKqvMi3\",\"NpAjngKpPXGwYjSyC\",\"TeDmPmsYWuKeBCWeG\",\"C8yR2sSnDkr8XfAjb\",\"QGjY3hgPYPMmMjc7j\",\"MHqLgQyxcg9Q7tFTg\",\"8spkaoEHNxmRzyjTh\",\"RbBEqArJC6CJ3SqkL\",\"ThaiAKWWDw2W4QfJh\",\"T42ZXmmk9HsxTq3nL\",\"oHX2Y5pPWyz5ib5Jm\",\"ctjHYddBN5dLSFtL2\",\"6rbtL9oHWGGckDBfu\",\"Wmpd7mDp6F2utoqFh\",\"sHnfwDzKzmeApjTv8\",\"8ENJFKi8TnQ9Ei7Jw\",\"Y45skkww4B2iNKjoc\",\"ecEBGmi9dPBxyxfYz\",\"ZWawapiBdJQT6WPiY\",\"F9i3rC3YpdnEpqvYg\",\"7bn7dz4D58vngBKBL\",\"xCpLpG5ofmvm2YiyH\",\"h4F99EoR6nue7yWzu\"],\"total\":108},\"flags\":0},\"summary\":\"The insurance guy calls. They were about to pay you all that fortune you've been anxiously waiting for, but they detected further irregularities; the list of stolen items is misformatted and appears to contain other entries that don't belong there. Find and remove them.\\n\\nYou receive an object with nested objects with strings as values. Convert their values to\",\"tags\":[\"objects\",\"arrays\",\"loops\"],\"timestamp\":{\"$date\":1604528367756},\"title\":\"Burglary Series (23): Find and Remove\",\"family\":[{\"_id\":\"MregZPPJWSxhXtrNB\",\"language\":\"javascript\"},{\"_id\":\"WxkFoXTLYiAq57uDq\",\"language\":\"python3\"}]}}"]