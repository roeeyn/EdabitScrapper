a["{\"msg\":\"result\",\"id\":\"643\",\"result\":{\"_id\":\"QtEsWc3qmxWReBNmK\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"function formatMath(expr) {\\n\\t\\n}\",\"difficulty\":1.434,\"familyId\":\"KkPRknkSS7dn3vQWE\",\"instructions\":\"Given a simple *math expression* as a string, neatly format it *as an equation*.\\n\\n### Examples\\n```\\nformatMath(\\\"3 + 4\\\") ➞ \\\"3 + 4 = 7\\\"\\n\\nformatMath(\\\"3 - 2\\\") ➞ \\\"3 - 2 = 1\\\"\\n\\nformatMath(\\\"4 x 5\\\") ➞ \\\"4 x 5 = 20\\\"\\n\\nformatMath(\\\"6 / 3\\\") ➞ \\\"6 / 3 = 2\\\"\\n```\\n\\n### Notes\\n- You will need to deal with **addition**, **subtraction**, **multiplication** and **division**.\\n- Division will have **whole number** answers (and will obviously **not** involve 0).\",\"isHidden\":false,\"lab\":\"Test.assertEquals(formatMath(\\\"3 + 4\\\"), \\\"3 + 4 = 7\\\")\\nTest.assertEquals(formatMath(\\\"3 - 2\\\"), \\\"3 - 2 = 1\\\")\\nTest.assertEquals(formatMath(\\\"4 x 5\\\"), \\\"4 x 5 = 20\\\")\\nTest.assertEquals(formatMath(\\\"6 / 3\\\"), \\\"6 / 3 = 2\\\")\\nTest.assertEquals(formatMath(\\\"9 / 3\\\"), \\\"9 / 3 = 3\\\")\\nTest.assertEquals(formatMath(\\\"21 / 3\\\"), \\\"21 / 3 = 7\\\")\\nTest.assertEquals(formatMath(\\\"24 / 3\\\"), \\\"24 / 3 = 8\\\")\\nTest.assertEquals(formatMath(\\\"80 / 8\\\"), \\\"80 / 8 = 10\\\")\\nTest.assertEquals(formatMath(\\\"60 / 30\\\"), \\\"60 / 30 = 2\\\")\\nTest.assertEquals(formatMath(\\\"44 - 11\\\"), \\\"44 - 11 = 33\\\")\\nTest.assertEquals(formatMath(\\\"48 + 35\\\"), \\\"48 + 35 = 83\\\")\\nTest.assertEquals(formatMath(\\\"8 + 5\\\"), \\\"8 + 5 = 13\\\")\\nTest.assertEquals(formatMath(\\\"46 - 11\\\"), \\\"46 - 11 = 35\\\")\\nTest.assertEquals(formatMath(\\\"23 x 46\\\"), \\\"23 x 46 = 1058\\\")\\nTest.assertEquals(formatMath(\\\"11 + 1\\\"), \\\"11 + 1 = 12\\\")\\nTest.assertEquals(formatMath(\\\"29 - 21\\\"), \\\"29 - 21 = 8\\\")\\nTest.assertEquals(formatMath(\\\"24 x 26\\\"), \\\"24 x 26 = 624\\\")\\nTest.assertEquals(formatMath(\\\"47 + 8\\\"), \\\"47 + 8 = 55\\\")\\nTest.assertEquals(formatMath(\\\"42 - 48\\\"), \\\"42 - 48 = -6\\\")\\nTest.assertEquals(formatMath(\\\"33 x 44\\\"), \\\"33 x 44 = 1452\\\")\\nTest.assertEquals(formatMath(\\\"26 + 3\\\"), \\\"26 + 3 = 29\\\")\\nTest.assertEquals(formatMath(\\\"32 + 17\\\"), \\\"32 + 17 = 49\\\")\\nTest.assertEquals(formatMath(\\\"3 x 26\\\"), \\\"3 x 26 = 78\\\")\\nTest.assertEquals(formatMath(\\\"12 x 25\\\"), \\\"12 x 25 = 300\\\")\\nTest.assertEquals(formatMath(\\\"43 + 31\\\"), \\\"43 + 31 = 74\\\")\\nTest.assertEquals(formatMath(\\\"28 + 27\\\"), \\\"28 + 27 = 55\\\")\\nTest.assertEquals(formatMath(\\\"24 - 11\\\"), \\\"24 - 11 = 13\\\")\\nTest.assertEquals(formatMath(\\\"20 x 50\\\"), \\\"20 x 50 = 1000\\\")\\nTest.assertEquals(formatMath(\\\"36 - 30\\\"), \\\"36 - 30 = 6\\\")\\nTest.assertEquals(formatMath(\\\"34 x 48\\\"), \\\"34 x 48 = 1632\\\")\\nTest.assertEquals(formatMath(\\\"26 + 8\\\"), \\\"26 + 8 = 34\\\")\\nTest.assertEquals(formatMath(\\\"25 - 44\\\"), \\\"25 - 44 = -19\\\")\\nTest.assertEquals(formatMath(\\\"24 x 25\\\"), \\\"24 x 25 = 600\\\")\\nTest.assertEquals(formatMath(\\\"40 x 17\\\"), \\\"40 x 17 = 680\\\")\\nTest.assertEquals(formatMath(\\\"44 - 7\\\"), \\\"44 - 7 = 37\\\")\\nTest.assertEquals(formatMath(\\\"37 x 41\\\"), \\\"37 x 41 = 1517\\\")\\nTest.assertEquals(formatMath(\\\"15 - 1\\\"), \\\"15 - 1 = 14\\\")\\nTest.assertEquals(formatMath(\\\"16 x 4\\\"), \\\"16 x 4 = 64\\\")\\nTest.assertEquals(formatMath(\\\"13 x 43\\\"), \\\"13 x 43 = 559\\\")\\nTest.assertEquals(formatMath(\\\"7 x 11\\\"), \\\"7 x 11 = 77\\\")\\nTest.assertEquals(formatMath(\\\"12 - 25\\\"), \\\"12 - 25 = -13\\\")\\nTest.assertEquals(formatMath(\\\"37 + 6\\\"), \\\"37 + 6 = 43\\\")\\nTest.assertEquals(formatMath(\\\"32 x 46\\\"), \\\"32 x 46 = 1472\\\")\\nTest.assertEquals(formatMath(\\\"31 x 5\\\"), \\\"31 x 5 = 155\\\")\\nTest.assertEquals(formatMath(\\\"17 - 37\\\"), \\\"17 - 37 = -20\\\")\\nTest.assertEquals(formatMath(\\\"31 + 36\\\"), \\\"31 + 36 = 67\\\")\\nTest.assertEquals(formatMath(\\\"17 x 34\\\"), \\\"17 x 34 = 578\\\")\\nTest.assertEquals(formatMath(\\\"24 - 3\\\"), \\\"24 - 3 = 21\\\")\\nTest.assertEquals(formatMath(\\\"48 + 33\\\"), \\\"48 + 33 = 81\\\")\\nTest.assertEquals(formatMath(\\\"19 + 1\\\"), \\\"19 + 1 = 20\\\")\\nTest.assertEquals(formatMath(\\\"45 + 1\\\"), \\\"45 + 1 = 46\\\")\\nTest.assertEquals(formatMath(\\\"34 + 24\\\"), \\\"34 + 24 = 58\\\")\\nTest.assertEquals(formatMath(\\\"32 + 41\\\"), \\\"32 + 41 = 73\\\")\\nTest.assertEquals(formatMath(\\\"1 - 21\\\"), \\\"1 - 21 = -20\\\")\\nTest.assertEquals(formatMath(\\\"40 x 8\\\"), \\\"40 x 8 = 320\\\")\\nTest.assertEquals(formatMath(\\\"4 - 16\\\"), \\\"4 - 16 = -12\\\")\\nTest.assertEquals(formatMath(\\\"30 - 43\\\"), \\\"30 - 43 = -13\\\")\\nTest.assertEquals(formatMath(\\\"26 + 49\\\"), \\\"26 + 49 = 75\\\")\\nTest.assertEquals(formatMath(\\\"24 x 38\\\"), \\\"24 x 38 = 912\\\")\",\"language\":\"javascript\",\"summary\":\"Given a simple math expression as a string, neatly format it as an equation.\\n\\nExamples\\nformatMath(\\\"3 + 4\\\") ➞ \\\"3 + 4 = 7\\\"\\n\\nformatMath(\\\"3 - 2\\\") ➞ \\\"3 - 2 = 1\\\"\\n\\nformatMath(\\\"4 x 5\\\") ➞ \\\"4 x 5 = 20\\\"\\n\\nformatMath(\\\"6 / 3\\\") ➞ \\\"6 / 3 = 2\\\"\\n\\nNotes\\nYou will need to deal with addition, subtraction, multiplication and division.\\nDivision will have whole number answers (and will\",\"tags\":[\"strings\",\"formatting\",\"math\"],\"timestamp\":{\"$date\":1582150846165},\"title\":\"Neatly Formatted Math\",\"stats\":{\"completed\":{\"total\":579,\"ratings\":[1,1,1,1,1,0,0,0,1,1,0,2,1,3,1,0,1,1,1,1,0,3,0,0,0,0,1,2,0,1,1,1,2,2,1,3,0,1,1,2,1,1,1,0,1,0,0,2,1,1,1,1,1,1,0,1,2,1,1,1,0,1,0,1,1,1,1,1,2,2,2,2,1,1,1,1,1,1,0,0,2,2,2,2,1,1,2,1,1,2,2,2,0,2,2,0,1,3,2,1,2,1,2,3,0,3,2,0,1,2,2,1,1,0,2,2,1,2,1,0,0,0,3,1,4,1,2,1,1,1,1,1,2,2,2,2,1,1,2,2,0,1,1,1,1,1,1,1,3,3,0,3,2,2,2,2,2,0,2,2,1,1,1,1,2,2,0,1,2,1,2,2,1,2,1,1,2,1,1,1,2,1,1,2,2,2,0,2,2,2,2,2,2,1,2,2,3,3,2,2,2,2,0,2,2,1,1,1,1,2,2,2,1,2,2,3,1,2,2,1,2,2,2,2,1,1,1,0,2,0,2,1,1,2,1,2,3,1,1,2,2,1,0,2,1,1,2,2,2,2,2,1,2,2,2,1,0,1,1,1,1,1,2,2,1,2,1,1,2,1,1,2,1,1,2,2,2,2,1,2,2,2,2,2,2,0,2,2,0,3,2,2,2,2,1,2,2,2,2,1,2,1,1,2,0,2,1,0,1,3,2,2,2,2,3,2,2,2,1,2,1,2,0,2,2,0,2,2,2,1,2,2,2,2,2,2,5,0,2,2,1,0,2,0,0,2,2,0,1,1,2,1,0,1,2,1,1,2,1,2,1,1,2,2,2,2,2,2,2,0,2,2,2,2,3,2,1,1,0,2,1,2,2,2,2,1,2,1,2,2,2,3,2,2,1,2,2,2,1,2,5,0,1,2,1,1,0,2,1,2,2,1,1,3,1,0,2,1,2,0,1,2,0,2,1,1,1,0,3,2,2,2,1,1,2,2,1,0,2,2,1,2,2,1,1,2,2,3,1,0,1,2,1,2,2,1,0,2,1,1,1,2,1,2,2,1,2,2,1,2,5,2,1,1,2,2,2,1,1,1,2,0,1,1,1,2,1,2,1,1,2,2,0,2,1,2,1,2,2,1],\"rators\":[\"eANW47mfA359Y6JyP\",\"cp3X8hk8yNME7qoD9\",\"yjtdwc2AC4jA2RWtn\",\"mHT2bJb5SByfJ8yKS\",\"SNiJRRosrmSWssLj4\",\"KBPfSXe3yyJE6ymqA\",\"Jkqins59gm9Qv6oLZ\",\"zTZtM9jRsu8eXie6s\",\"YReEuyfgCrf9xEhYT\",\"mPmBpafQLPiRtKX4i\",\"8fhCYZxcaHXrwLgKK\",\"DPpSwhhiuF4Y9YR2i\",\"RE4Mm9T6Q9uygAxGS\",\"5Zq3aGdvh4LHBvnJL\",\"R35tqE5etfTYTfmGr\",\"n5wubRfh6zh8QRymN\",\"9yyiMyP3eJMNGpxxx\",\"6BpBQnSGhzgvhXrEy\",\"zd9FLSzsGz3evKafy\",\"d9LBRxvADNBB5QJMB\",\"g5noFWaoRtZNcEEAW\",\"TxqAnQJoWbb5Hjm9g\",\"8PAT8QPq5KYvX7Ldw\",\"s5zzhdSQFAa9PbYur\",\"JuGJgYuj4eHc5xdaz\",\"yaL57wdXmgAZTvKfX\",\"2innwjWqxJHo4eRGh\",\"c5tCpGKsqmJbQdaqi\",\"Gx86XCxuuupkicp2r\",\"QnPD4Sv6W4LHc2Qng\",\"7wtuhPesfhcYsfZaZ\",\"DHwbkbzYNpmkSFT7u\",\"HnSPiK5mFBv6oyFGR\",\"BhgKmMW4NAexgFnT8\",\"DcGoe9pQoaKZqAzA3\",\"EjPLq3QSJdGQFJdgW\",\"9HZbxzkzgz4CvePtv\",\"CZAymi5hrfbojN3ta\",\"3aZvfgr2H2WF8Yog2\",\"QvWTpCtw3ynb4ZPgv\",\"osER8G7bRZwgkS3g6\",\"9XnGoq9Tv6ut3zTtH\",\"cJwiiiX7qwSvgtmk8\",\"6BMN6L8mphvBQkxwT\",\"dBb6aHEGddvYffa35\",\"CJBPyyfyaEeEo63sb\",\"7YAiLjJb9aGiS4mmx\",\"pBPeMTaRmdFWQezW3\",\"Y9Nz9yafaibz54W4o\",\"rehehi2Tr2mwaEoJE\",\"QhGdovYnRkhmNRidN\",\"R4HEwztbBverzumPG\",\"dDFJpK4pXCsQYuHmc\",\"8BFSTCnoe2QggN64c\",\"AasGs8AeX9Lcb9xJn\",\"g4NCSxxHqHCGMpWwT\",\"hNDm8vRoqJcyXPTqY\",\"6gPHMpkEP8JuHxzpd\",\"2CvHJcA9aXt9pvZwA\",\"gGETo2x9dY5TsWc2b\",\"TnuoWoyf2htLu5Lrm\",\"427wjjp453HFTG4Xx\",\"XwdBzGAR6kY7Tvb9Z\",\"hdEyGDD22xgkLZ2Pb\",\"7xdgiBtCRNC6jZ6gT\",\"xMxdp5oCxmeuYxhpa\",\"Zhp5DNAzeuu2TLfK7\",\"HwZx7c3QFWmt5x4oE\",\"zgoq9MhrL2h75DAMA\",\"jcPZ5ySXseCB7Ec3x\",\"3aD4qe2ht5ewZ75wX\",\"CJnuSjyCBMTbTiibD\",\"KQuCg5Rw6r8XGu4it\",\"AXcnPX68zdMiLNSmu\",\"SNt23Ei5dSNtfpEMd\",\"SnxnwvJRWHbQ7BRH9\",\"QvsNvuhzcqaBENP7t\",\"X5TMRv7TBf7zELSXF\",\"K8b7yBkmnmskg2Ecc\",\"YER6iBcpJCuhgrYDN\",\"7gwHkuyvWWTXnR7Xh\",\"FMhGQDbfwWYQKGYeZ\",\"yq3MrJoHHMPNCu55C\",\"WrRie8MDw5QHgjT6r\",\"v2LttcvNp4d3QgHJu\",\"9Mx6SNtsS82T5hiK5\",\"DJwW3Ku2QhtZ6ELM6\",\"FJsvM5yqKuK9yMk9P\",\"TuKsHWrGXYnkrf3hZ\",\"WSd2Nu46WpNTDT477\",\"q9BzXDtYdTAANjqMJ\",\"k5TGxBtLi9BXxeChT\",\"KCBbqo2jn6S3ft4fM\",\"ZZ3JYmkR4dNtCwviD\",\"pi76g3eRpnKrhee2a\",\"oGtMzuAJrnFwiMhdf\",\"Ctya2wbXp2mQRWsit\",\"en7aFDSggTxYCoxxo\",\"rh4LvxCXebYE93kSK\",\"8HKAiTMrqW2H4vz4Z\",\"52bJXsJRSgXpmpJ8c\",\"vnccH7cqmHKMg8QCL\",\"Ynw596LiAeaYq29os\",\"ihTSN4G98CHRmZqra\",\"7KSZzWdPgwR8t3nmX\",\"fcZ64pqgwi2SA8eLh\",\"YgwmioKoRrA43sfm7\",\"ZmDJ47dz8mL5Mvg3j\",\"xsDyJstYoBZRS8pJH\",\"QRpA4vqSAiYLpj89J\",\"waRNvpN3Hro4rj3bC\",\"S9woruGSS4gN7Eb2C\",\"DSJ8m2k2yk5QtQaMT\",\"eQXwk5zGckM8tCWYH\",\"EWn8w8P3nNh7knatY\",\"EAuL56kpyLytw4RcR\",\"Nhtn8MYNgdz4jQe94\",\"gMxZgLYmdg99MX8eK\",\"aPwbFGyNhDHK9Ee8T\",\"ZKyCvxArdB2eaLXpr\",\"tuTQhfZC5izTmXEgR\",\"MRyxodBpHe3Azn5Mp\",\"vtHbevf2tHqe6mRxX\",\"7zaesBAtg6PLMtfGw\",\"eaQybp8Ncjji3dk9J\",\"9Pzg45NEiRXhLtLh3\",\"cecRRLKKu5R62D5xE\",\"yFGcFfNsHt2Z4G5a9\",\"xKoMMhNyqWdbomgdJ\",\"scBSd6NJup7edDSGK\",\"Y5H6Lp7Qou9XGptHH\",\"9966k46pdpGeFjKSF\",\"k8rMJnaejG3dX4ute\",\"ggZDZgMYviHgcw9X9\",\"BSkoT6o2GweZkqXbc\",\"XkPEb97Tnnvvf5fAY\",\"Po3v3dHCk6wYGKMwi\",\"ZXRMRAJNP6eseLdbR\",\"mDb4eoc9XX942Atc5\",\"RQwuHHy4rBgaQCLte\",\"N7P4AnS8nzK4oupHv\",\"65dbBZynphj53nXqA\",\"szQg8dxKNNre3v3Jk\",\"DERjomKNTJx6NxZjP\",\"eomLS3wh6tQPN8jtH\",\"Q9KQomTTPBsrkAL6c\",\"CSfZHi2XRxa4rpGTL\",\"Y7xPTPKpNAEiM2jkH\",\"Pfau42bJyRNy2eq6L\",\"jqbm8L6895JgAtZ6H\",\"39JiAZzrxpBGFib5o\",\"2gsZANKKoKo3AHHNu\",\"Qy9iR759KepTnfxjW\",\"ZtniSFrgec4oj6Pxm\",\"PECSSfxCiPpLGe24r\",\"RbEZ6hkeqMreLkEja\",\"YXqaqjujocvg2gX4k\",\"GWB8sgtkJrck6sQtS\",\"Nt9u7P7CEXCkdT5iX\",\"8veBLxPsxYEuCPv2Z\",\"YbWfoQnxHi8v52GD5\",\"CdXigydGTBLgA577m\",\"awK73Qku8BcNGQ4Mm\",\"mp3XhZRERXChRD8XN\",\"t8A6szsMgp55egDTR\",\"vn6nR36mdfY8z2zKx\",\"GCsLzWAhLvniQqR3J\",\"PjHvd2Q7GNZMeamtJ\",\"dzXvHRjRhYMyFCaii\",\"FGKTv3MTqvcYyQWfh\",\"oyB4Wr4EeZnoDaa8B\",\"TCDdv9Yjs9DppbHzm\",\"vGvHLL5N6De2JawYi\",\"vKch2w3b4keMd84jj\",\"7xsuW8jrD5TXvc7pT\",\"Kg6M7abNC8WvtvtG3\",\"eb9yKB7S8Sa6k9nsH\",\"PTo9qt93YqGvL8fCa\",\"hT8T426rinDzZytaC\",\"ysP8aP7MHds4vkEcM\",\"LreCskdE4MTjTyhAM\",\"7ZgPmxrKL5Ko8T5xL\",\"qmav3P9ejc4stWseP\",\"DzEw5zi3tAjgpRB4q\",\"HyxHzhmjpYXKSXDJw\",\"QHiEYtz3tX3s9nETo\",\"dKEpqsNT6HHoLfttp\",\"e3RMQNoaEYQ97RWpN\",\"tAF9Gf6PiGogbZuWs\",\"dWSd8Nccp6qqee8vW\",\"K8c6kufLHBeSQYb7b\",\"zfJhwLaZDh5iMYoAb\",\"BEgCPCwrCx4LPgp6z\",\"RqdNx4KYAToQp5sFx\",\"639dcNXwna5uYfwPx\",\"vzGzRkLe4WGS9zMSz\",\"Y7WeWzgDHnBavuCwe\",\"4TuceAZ8oTDzsjhir\",\"uAS9uKs8KQmp8uhqn\",\"fCJ4KDks3Q3cb79E7\",\"z5ebtimXwFFJdYxoa\",\"SAdSH6MHWXPitMiCJ\",\"uQv7QZAuumybtcskq\",\"PCn4YuMrkTmdgSRLh\",\"EPk68RBbi3stLcssZ\",\"4LYMCc6NTEprZARbJ\",\"RqnvM77EkZZD9W2Q3\",\"ptWyD6Q5wuivyDsLR\",\"k9njD7wdBcztowjuZ\",\"dHZqT6h4JMwk5fPC8\",\"cEEJxcjswaYfpCLZh\",\"kDuH45yzb6PDtwhi6\",\"Rrb84KWhN5tjhMGMA\",\"HyKRY7xroLjYKF7PH\",\"BdnE4RS5puoxo92mA\",\"yK7zzK2aGJwuWKHRL\",\"ncxv2Z5EvzW2j4NT7\",\"2YhAusRfgKKo6gYRa\",\"Q95PGpxQNkpsz69Pd\",\"JsRTAwWK7Nikj4sKA\",\"Ji84eQR54xeqRYceZ\",\"Wj7pXLPYSkQ7AEcnP\",\"Wnom3NDu29r6odkah\",\"iapvMBwWivxXaybye\",\"mf8xW5DhPjfXaCEsQ\",\"qrDiseLiCpsPF2KBE\",\"fRzheK6GzMrmHQ4Kf\",\"5NGxHLcQ8Af2RJ4TN\",\"K54ipu2Y5pZfPngmk\",\"GiKgHGrHpyXDDEpwH\",\"EYAHWarHxubW8AXgF\",\"a777e8chPvJkY3tKa\",\"E3fkFzNeAGctuvqA2\",\"CwxNzLkbdtBSZRtax\",\"Xk2g4CNFAnYcvxiSr\",\"Gc2bmsof5vD2Hsgqv\",\"Jj7Zjg3o3zSj9TacE\",\"oqk9h22KHEStfpAhp\",\"XYk4G7RdRXw3bbfjA\",\"dNqjHnaTsgqBFDxTC\",\"Xu7HzCBFMBQSjhcLG\",\"nbqPCvnqdGxPjstXT\",\"YtGYxpMxbrHLFK8nq\",\"G2wwuLBf5WET8MMYA\",\"j2ugW5ihGv67sfh4e\",\"fS74N4FXqcPpmxAaE\",\"YS2vn4mFRcHprdtWC\",\"NySgAuwdWHnwrXS5k\",\"Z9MJFFkQRXWwJJafu\",\"6oNkXuuDRBTFvpr8y\",\"EufkHMbcMbW6eR3Ca\",\"ArwvyxiePfjKngKcp\",\"qaR8DnWrTk8Mus5Q2\",\"733qgZ7ZSSSrzbXGw\",\"Akq3fQcPRgPrWfsye\",\"uXhqhqGc8kpBBw8Tk\",\"SDtZFL5NzAoCPofXk\",\"mzxzJqrNwEQQBA9wz\",\"2ZFoLTxcCARhwc8xX\",\"KcpfY4XZ7fNamyLd3\",\"Lzj3w7QjdzikynsGG\",\"Jwoe6heepP8r77Doj\",\"igpBmc8eNLxrj9QHo\",\"PPEKePC4MF5FrW8cs\",\"a7LBurCmz5n6gECbv\",\"ipiC2qPhKZWsAouJf\",\"mLKy6YSNJ2MyXuaq2\",\"NWMrbsAibxgBaGKQo\",\"QDYpRvKEb4mtaDDgn\",\"ThaiAKWWDw2W4QfJh\",\"BjJhatTBaTWm3ZhCt\",\"RJPfs7qxCL3hP97Lv\",\"inbiBEY2tizFwkN84\",\"GB3NHPPMge2CshbY6\",\"f6uGKbmMdBYCjrMBh\",\"LCn6qz2GoMr5577Rd\",\"Ya3eHgs8x3unZRLpb\",\"sHnfwDzKzmeApjTv8\",\"XfirkadGrKABrZSBw\",\"sAhNjH3HZ9tSSSKTX\",\"uDL732cxhJPfvnyn5\",\"v3Ks8dHbSuhxFskZH\",\"GovJdALyZMga74WeE\",\"zw7g7T8wE5R5CBhXr\",\"FzugdMN8j3xoCoEBn\",\"GGQDpkXJGa2eLMnKT\",\"zNN2fW2pJGpTxBgzx\",\"aFMst9xdc5NbYP8E9\",\"bgXh9zHmvfovW4GDs\",\"eNdxN376u6gM4qdXF\",\"pwyhscztjwdnwPkte\",\"9LDTSLezN3xk4hpAx\",\"8mb6Jz4JgTJX8ugAB\",\"sBcsrC5paZm9nxjot\",\"M4vq8ATaS9Jg5X7iP\",\"hoWp2saDeDkMk5De2\",\"ij9YRJvZz6WbqcGXS\",\"FioqXbWFJxdCop35Z\",\"Es4eX2stRpyoXeC7f\",\"WKkWj5KoNysLpZ2hJ\",\"XscFaD4g2aLhjk6oS\",\"RJs9HvrPhGkPoorL7\",\"hGdKgFgA9CxFSk8bz\",\"DXKGcepy6JjezbF5k\",\"Cdd5jEMyptz8T7xGW\",\"CH53jGETBeJTummf3\",\"vAh63eGRwkuJtoP8v\",\"8w3vs8RGjmq4mf7h9\",\"3h5dGS6W8akioYnWD\",\"MdNjMi3vPSmWWjja5\",\"JGBCMpnbbi5ztuFoX\",\"rJGzFvBGYxdukwt8X\",\"edaKYaap6ugMKpRT8\",\"svpXWhsSLLzYR8Rz4\",\"fuKrbHrj9KMJS9HX8\",\"PMtk6T2F9eK95g23d\",\"XKi8iZXBCHCaebSHh\",\"4nFXeGakoCjm5GXYa\",\"buX4mCQhtXCfBjeno\",\"jnyub52Fi79drGvow\",\"pGW9kHz8vpZnPGBWu\",\"34bE6mric984YYLZQ\",\"jkumHyXfMkhGcPgqC\",\"p5ZshR8zhTqmdhKDc\",\"u9cRf5kvtpRB5ffB3\",\"3AoqMu5gB99yjbKNY\",\"2d7ToTiuvHtd6WnGx\",\"sn9HmYyS3FStbca3b\",\"ub8rqqsdqowCrcxPi\",\"FEhpEv9JhSsqqfACv\",\"uigAJ9KT5muMWTDis\",\"wDJWimhTL95Efenbn\",\"QRv96jmNaYsWkxQEG\",\"2tCCFm5iefjrRSaxv\",\"evTTY9hwrtogaNxXn\",\"dihnR2wb8sn4isuvA\",\"moe6ztrsNzFymC3A7\",\"ckMvGF5TAyCwcxJBm\",\"xfxkLoQsbZBonmBGp\",\"EoNHgbWsF6ZQF4eYr\",\"PGCDJpQMN8Sjn9Gm6\",\"cCPrEfTcM4mqscd9A\",\"TPrfNreYTj6pQQBh7\",\"noZDgMMXkcPCLN8Ye\",\"wrxHLcdBEri4cyK6W\",\"HFuNFZpdKCddzbuqc\",\"r7mZLgpQWzRiGddL5\",\"KcFLFK5GqrC89bxZL\",\"ttuGK7od8simjgmCJ\",\"i5QeAsrM4m6hzPTku\",\"E2hpke7mHxAWsw5t9\",\"C9LKGu2g5hSijvDzA\",\"2zKQWLmEBw8FBs4ZL\",\"DT44RfRiPRbpqoXWB\",\"oDnPTXrzYF4snDPXY\",\"s9qcJASB9WKPWaQzi\",\"fzHwF2zdGs9m9q6FK\",\"DaBQKtm4xSgrxqTYF\",\"uhamgmdpjpYQBj8vZ\",\"gGc2gQxf6JJepn9ma\",\"8Z3dkvWBqtrMEE48N\",\"nXToJ5kpsRfi4nyw2\",\"8N9tvpEaLrbrzj47L\",\"4ntYzGHHBgqf58udP\",\"zAMR5yM6wpzfE3a4S\",\"7gZKfvwaeqsGKXMEN\",\"7kENXQQ8ABiPGfBRD\",\"yrLBMbni8KDsC5K44\",\"AFfw7cGg83uYk2Miy\",\"4G4Gev8LHRYEkWHBw\",\"pLpcDC3EYx2DDQSdt\",\"mwg8jvMHHmQiQRrbr\",\"DFdJagsHqWRzH4XZb\",\"6kz7jjJS8W4tikYQT\",\"aEm3Wvj2rFYRL8Lrb\",\"DMKGmgv3dXruCSjXi\",\"3WtHp4MBzciz4AE8M\",\"2nCWnTXnmawovwdv9\",\"SY9Euc4kQfRgetXTd\",\"iCr5TEH8Xm3qRBnXW\",\"LRxyZwXywbwzt255M\",\"tPtz279rzBX8kCWMr\",\"rrkEbZtHE6xZiamyu\",\"mE2WrTtBBq4zuLdWp\",\"MbbySGQmkzbjg373M\",\"3pb8q4K4jv6jta45d\",\"kp2ZbCewZJAbfd7xv\",\"3eRfYkTEsuSEXHX2a\",\"it4R7mNQ7MTvJkLDm\",\"tseyDEv9zaHBMvLL3\",\"v2w9GN4jHP2fgYdeE\",\"JW5J6sdJHAmDmfWnE\",\"R9uaMzX2Y4ND8Cosm\",\"jtzNdgDCzsekkdpxA\",\"Kntd2rSgWYWp8r4sP\",\"j4JYXWLmkTDH6iqHr\",\"Wiui6EEuNHdRy56FR\",\"RtPhDuwmvWNHiBxmG\",\"qvNk7pHSveLu3jqWw\",\"75NY7vqimaATzRdAX\",\"z6rWbk4FWtqs7qHvm\",\"PH32cNxBjrK4a28sn\",\"M64stqj7weSsExsNo\",\"qWR7eXxBiNee22A5u\",\"nxycxLNEN4PXDotSh\",\"aarsZPCAfm59DiJEZ\",\"NchnDcEmsLTeFZ4FH\",\"pdGuqmMyeN4wZaWwv\",\"rpa7MXFzcXNWwbNiM\",\"eGmzRsSATFsE2wjJa\",\"CNc6rmwhbxkxEhHAp\",\"WbXHZDxj5femhG7x2\",\"YLTZRjM78Wi9J9Re4\",\"e9Cknxbx6o7Nb6REs\",\"XAX32dz2EByd3qAK2\",\"pGh7WykiPe26fHJYv\",\"DDokdbBKxv49M445o\",\"vewKwcMeGuk3p3MsN\",\"jLSZdBseR2kfjt8dL\",\"4Xv87xmdSnpYhi8hz\",\"jd9sRTnsyeKpPggba\",\"QpBEndbkq6opq4DBN\",\"NczXsSrYNX6nDWhjF\",\"yCeddtASCT5NFPJTP\",\"BdvdJYwHZr7JpkHsn\",\"mtnjnMWbijDjGrRrj\",\"kuCQeknZkt7vmwsJZ\",\"8BJyXvRWcrvN3nttS\",\"s6potBNc4hhYdAdJe\",\"Kt6oGAfrymXmAnn2d\",\"g9FkBtZma56o6zLFJ\",\"DjPJY8kRgXbehNyGH\",\"H46gRHmkdz2CRrGH9\",\"vGKxRcDYDsXzTQuEQ\",\"Qi3ZTiut4tWJPHibz\",\"WBBN35jGBzzHWeLn5\",\"YmMgWhzhHhQLmGGgH\",\"daD4PtrAmXk4Q9jG7\",\"RbXkPwrmSowEJ7Jk4\",\"m3hDrjgTwir8Ldwhu\",\"2Ni3PzJAc5fAhqBkb\",\"xAfaHANrS8Zs2475d\",\"jyCByAZwu576xDwEL\",\"PLAW6hHCDwfFyi5yx\",\"vic9SZ9qqj9WhRkbd\",\"pWJWQDhqzDSmfaFam\",\"WSLPmXqJzRjtYkuwf\",\"daZ2w88gv7Kaw5KLn\",\"EXbD3ZjgP9oaoFLYw\",\"Yp7uvStL97cC9fKkY\",\"bBRzXPk7u95YuDWEL\",\"zJTXDTdbwnopRazGo\",\"nzAbdaGbJwgvkkEYj\",\"bjn5DTzzaWCP5BDgX\",\"srJ34BaybkQh3qRkM\",\"c7uBxu2rgY77H5d79\",\"cosoYtzKo6pKgrTJZ\",\"nyh73Tr6GhqAat78g\",\"E6DBfkTgHuPsDWdG8\",\"sNcDN3s3rH9wcNg5n\",\"m6qKkBY4aPWziyJTj\",\"3Gf7ikLijfoxabiPY\",\"PLkegh7jJLoeCPgTS\",\"azAzSkvJd7eyXY9x9\",\"MLj5EZFi87oKbePn3\",\"Zp93Tit7CTRdkCMqp\",\"4wR64Jaibcom7tbYf\",\"XzMxsyYj2ZeZ6Jmis\",\"bHX48t6EJJ2tntqjn\",\"ZtTwZM9pQ2sAzhnMR\",\"AeZfR5dt45GYsMt8L\",\"mpLFbFKjY6u3nsDMv\",\"CCkHqRq5tcYmW2dsT\",\"MvW4Kqnf3ee9QBGR9\",\"jpSy4qhuDNwPk9mrf\",\"j5FSQCayX3By73CCw\",\"nBJve5CzG6WAw7WFQ\",\"LoXuMSHf5859u4m6a\",\"gXAv2R45dNKYQ7S2K\",\"8EJ4j2fcfjTJ7Zrzu\",\"J7d397iB5GuWRAMfg\",\"2Qk2mFu9HBFzrB24i\",\"cgCQDs9i7yChKeAjE\",\"LwD3CyYSiBfg3mA4r\",\"wJTDDTE3TrmSXKP4d\",\"n4Y5EEGCjmrK99yrt\",\"8s5Bdrn7RTga7DL6x\",\"sfj3i3eEAfZa3f9kg\",\"ApqWTmEEkTCsDou48\",\"ZK6YmYMsfwXYtaZ9P\",\"hhWiQDgAJA2m3MhDA\",\"K45zPJxsABuA3WSyj\",\"k6QB6fzbj4LsWktRL\",\"STipuJs6kBvPqqsSE\",\"ruzwBPphPDRgLXdnP\",\"oDtGiNqDMHmhHE3J8\",\"QjGNkRM3Xc78yShJN\",\"hyx8iH2z3QySmyRKT\",\"erQgJKaHaETRcqs4x\",\"NGvCPuMiAP3xrRLfB\",\"hCfruGWxw7v64teEr\",\"JFiiZhAZTNQSvjzdp\",\"ceMycDhXzsRojnr9F\",\"N3CNtWZz4ovJfH9Aw\",\"49XFttjKo2QhEWT3R\",\"RoGGD5cpHb4ftdLDv\",\"sN2JyFeJCwfwwHPwF\",\"wo4cpen33NYFHNca7\",\"gXTAie79kiw28tx5u\",\"jicWFrNKadYuLhqxh\",\"ZKuwzkssrSsDGNPr5\",\"uxKGACwmZ6FNZsMwE\",\"x2Cz7S8rCKJqCE3Xe\",\"Fk47SQxbHEJRw4u76\",\"jyoLggHk8xQKZuoQC\",\"MaHyKMEDdtLMQeJ4b\",\"bfYmA3LMvhSrK59cn\",\"sMcFMPkMJC4Kh6ymj\",\"YfHnTYr4sD69ZACS2\",\"ZcJm2kuqJnN3CXFaR\",\"HCfkcKnPs9mrJojdG\",\"AMpQSjKsRqhCDyS2j\",\"rPsSEYqwmttMPEuvo\",\"pPpmP7xeJzGgK362R\",\"z47JaNrQMgvuPx5HE\",\"WpNHMgfjZE8aNN2MP\",\"d8JhF9zfpexkRnCea\",\"nw3rZ4ap8trEDtPRX\",\"FGEeCTorXbX3WvjFW\",\"koWGjiCmozmgwhYsb\",\"4WYjScmBWK9eXRzvd\",\"QJoHpT8fkmJ5j4hk4\",\"gf4xrfguK6KiEF9yi\",\"6vdn7gegY7xXxYCbe\",\"3rQ3fN5SM2eGHmTi5\",\"QGjY3hgPYPMmMjc7j\",\"CHvzhtXnv8HTbPQ56\",\"dJHn6JExYGvFp6yrj\",\"qAEumdjLRx2AGAmzw\",\"SCY9Qyb83vz8ePBrZ\",\"FY7atTfxaahfAHtJv\",\"psdbt2PkjPv4qTwtr\",\"LPZ2QKCoB8q6rG25c\",\"8JJHJfbYpxvDiPpBn\"],\"quality\":[5,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"quality\":4.918367346938775,\"family\":[{\"_id\":\"f3PjyCf3fQriwXp9q\",\"language\":\"cpp\"},{\"_id\":\"QtEsWc3qmxWReBNmK\",\"language\":\"javascript\"},{\"_id\":\"eFknZnmrbHvkhR57i\",\"language\":\"php\"},{\"_id\":\"3f2qF2CgM32zvQTwa\",\"language\":\"python3\"},{\"_id\":\"eTRGLAYroC2Y6qeYi\",\"language\":\"ruby\"}]}}"]