a["{\"msg\":\"result\",\"id\":\"1099\",\"result\":{\"_id\":\"uts8XsD5zGHdHr32u\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"function toSnakeCase(str) {\\n\\t\\n}\\n\\nfunction toCamelCase(str) {\\n\\t\\n}\",\"difficulty\":1.7699530516431925,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"rJeHMN6JMpfhyZGiy\",\"instructions\":\"Create two functions `toCamelCase()` and `toSnakeCase()` that each take a single string and convert it into either camelCase or snake_case. If you're not sure what these terms mean, check the **Resources** tab above.\\n\\n### Examples\\n```\\ntoCamelCase(\\\"hello_edabit\\\") ➞ \\\"helloEdabit\\\"\\n\\ntoSnakeCase(\\\"helloEdabit\\\") ➞ \\\"hello_edabit\\\"\\n\\ntoCamelCase(\\\"is_modal_open\\\") ➞ \\\"isModalOpen\\\"\\n\\ntoSnakeCase(\\\"getColor\\\") ➞ \\\"get_color\\\"\\n```\\n\\n### Notes\\nTest input will always be appropriately formatted as either camelCase or snake_case, depending on the function being called.\",\"lab\":\"// camelCase to snake_case tests\\nTest.assertEquals(toSnakeCase(\\\"edabit\\\"), \\\"edabit\\\");\\nTest.assertEquals(toSnakeCase(\\\"helloEdabit\\\"), \\\"hello_edabit\\\");\\nTest.assertEquals(toSnakeCase(\\\"isModalOpen\\\"), \\\"is_modal_open\\\");\\nTest.assertEquals(toSnakeCase(\\\"getBackgroundColor\\\"), \\\"get_background_color\\\");\\nTest.assertEquals(toSnakeCase(\\\"isLoading\\\"), \\\"is_loading\\\");\\nTest.assertEquals(toSnakeCase(\\\"x\\\"), \\\"x\\\");\\n\\n// snake_case to camelCase tests\\nTest.assertEquals(toCamelCase(\\\"edabit\\\"), \\\"edabit\\\");\\nTest.assertEquals(toCamelCase(\\\"hello_edabit\\\"), \\\"helloEdabit\\\");\\nTest.assertEquals(toCamelCase(\\\"is_modal_open\\\"), \\\"isModalOpen\\\");\\nTest.assertEquals(toCamelCase(\\\"get_background_color\\\"), \\\"getBackgroundColor\\\");\\nTest.assertEquals(toCamelCase(\\\"is_loading\\\"), \\\"isLoading\\\");\\nTest.assertEquals(toCamelCase(\\\"x\\\"), \\\"x\\\");\",\"language\":\"javascript\",\"summary\":\"Create two functions toCamelCase() and toSnakeCase() that each take a single string and convert it into either camelCase or snake_case. If you're not sure what these terms mean, check the Resources tab above.\\n\\nExamples\\ntoCamelCase(\\\"hello_edabit\\\") ➞ \\\"helloEdabit\\\"\\n\\ntoSnakeCase(\\\"helloEdabit\\\") ➞ \\\"hello_edabit\\\"\\n\\ntoCamelCase(\\\"ismodalopen\\\") ➞ \\\"isModalOpen\\\"\\n\\ntoSnakeCa\",\"tags\":[\"algorithms\",\"regex\",\"formatting\",\"strings\"],\"timestamp\":{\"$date\":1539765784312},\"title\":\"camelCase  ⇄  snake_case\",\"stats\":{\"completed\":{\"total\":232,\"ratings\":[1,1,1,1,1,1,1,1,1,1,2,2,1,1,3,1,1,1,2,1,1,1,2,3,1,1,2,2,2,2,2,2,1,0,2,2,1,2,2,1,2,2,2,2,2,2,1,2,2,3,2,3,2,1,1,1,1,2,2,2,2,2,3,1,2,1,3,2,1,1,1,1,2,3,2,2,2,1,2,1,1,2,1,2,2,2,1,0,1,3,3,2,2,2,2,1,2,3,2,2,2,1,2,3,2,2,2,2,1,2,2,3,2,2,2,2,1,0,0,2,2,3,0,2,2,2,2,2,1,0,2,2,2,3,2,2,2,2,2,2,2,2,2,2,2,3,3,1,1,1,1,2,1,1,2,0,1,2,3,2,2,2,2,2,2,2,1,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,2,3,2,3,2,1,5,2,2,2,2,2,3,2,2,2,2,1,2,2,3,2,2,5,1,1,2],\"rators\":[\"BkPgkDQGHm66X4Qai\",\"CX5honsxBcB63L6Ft\",\"65dbBZynphj53nXqA\",\"g5noFWaoRtZNcEEAW\",\"HQuhas4KXrETxYk9o\",\"wh6JQg9o8CMRSgYET\",\"hr9rERhkPtGbbgqdT\",\"npnmEmdBBFyA5kCqr\",\"FGEeCTorXbX3WvjFW\",\"KyTQmJfxxdrWS9Dpz\",\"zfgR6b7HPbEKprwfC\",\"mf8xW5DhPjfXaCEsQ\",\"PdQpuYnPgHqDmfNHx\",\"NvwYW7DGL92mR6ZC9\",\"MhPeMuiZ9WZaveh3D\",\"ggj8NF9hiYrJfLqGn\",\"ZTYXPkgL9E4vXWKev\",\"6ir9H6TvDxyGL4kvG\",\"2tCCFm5iefjrRSaxv\",\"jof69WcnftfNoD2f3\",\"jWXdurfxtiaCq64sz\",\"rAEpKp4errjbDCnuA\",\"AjvZ4h696CxhKuptb\",\"SjY6a2v6jMjGraDKz\",\"B8tButws783qnALkn\",\"KpXzNmd3gyz2Mwka5\",\"Xk2g4CNFAnYcvxiSr\",\"TzA2B5NYnbpJDxL2y\",\"NbbzNgur9E2NkCs4k\",\"AgQburWndXwEhgomM\",\"yHjpDrX6o6RLzAfYb\",\"SDtZFL5NzAoCPofXk\",\"FnKaqsKZiNvWcyryx\",\"e7DzFWvYfc45T53Hb\",\"7gZKfvwaeqsGKXMEN\",\"HQNez8eDfq9Mv5vkR\",\"hy63rX7K3hEfyp8B4\",\"XHngE5iScvztMpnR2\",\"N7KL9CQQTuxyLwxQN\",\"6RyYrRxmGb5R9spWi\",\"mNMQvcxKSSvqqMYCH\",\"mfjoiKdHNmtpSW6zu\",\"XcHCqYmeoqxDsoucx\",\"6BpBQnSGhzgvhXrEy\",\"bvLy65YJA5Ky4aJcA\",\"G7bdEb5gSLLR59Fvn\",\"f2WHsJ6qZimgyJ6Ci\",\"ak5aPiT6QWpmbnPzD\",\"PaHAGkmRMF6oAgzYC\",\"eq9dWq4Q6bPCG4AsA\",\"d2PuPtTWQac8SexuC\",\"CcJ4ZDGpXzfsDuLDK\",\"M9SGo5qL7pypgErFC\",\"B33uaC9LuZ2e56fne\",\"27CbQy6BcxBvHpvsP\",\"rD5mrgtyfeD3PZoYN\",\"pXtv3PjRH28xHJq5n\",\"3gfowGkgiMFEngrHs\",\"d3zKMRAjK86NW9PHW\",\"i5bG6SKQwELTkrdkD\",\"xazeYndpYNBn7oo3Y\",\"Zpm57jPNNBSsZmJTs\",\"x9gN5FHswMPZpXuRK\",\"RYCGMx3ZMxB9nZkcq\",\"gGETo2x9dY5TsWc2b\",\"zgoq9MhrL2h75DAMA\",\"pQhhQMqXTKLEALMit\",\"Jwoe6heepP8r77Doj\",\"bbbpNxM3hgGMCqMn8\",\"kYJupSpPXAe6SSFbR\",\"njCTzJzPNPcJAaFHr\",\"g4K6nM72TtXLKog5x\",\"wnMWQfZR86FGTb9n2\",\"5NLzmYwx5z8qZ7Bar\",\"Nd7Bnx9zF57gn3vLp\",\"WcJLHTiGQ3PjEQaGh\",\"2innwjWqxJHo4eRGh\",\"4pagg6vw2Cjepv7tN\",\"oFckF5bB5dGBQKneS\",\"PYQra6b5cQdLD64cd\",\"wcjknenWdPRhrRScv\",\"KPDPaGaJ4jGtRusF2\",\"KzMMvGnXcWGTmRE7F\",\"K8retouBZnftajjFi\",\"bjn5DTzzaWCP5BDgX\",\"CJnuSjyCBMTbTiibD\",\"n5wubRfh6zh8QRymN\",\"EWn8w8P3nNh7knatY\",\"eomLS3wh6tQPN8jtH\",\"uhP3Z8KkPxySxn2n7\",\"dDFJpK4pXCsQYuHmc\",\"S7R7voZRxnWjCn8pi\",\"cTasoJQG2iA6FvuK4\",\"tQwDooQpBeuprEcRK\",\"fmLzKJTPWvtGRAaAN\",\"RE4Mm9T6Q9uygAxGS\",\"uwYEh4Bt7JCEfRYbe\",\"3u7mhwNxuummKkYts\",\"9AdMR4uBsHxRcd86Q\",\"5GWkiNRN6xMuRu7Dg\",\"rTRvHndHZKKRkb9w5\",\"vKch2w3b4keMd84jj\",\"f9gsQxwrJGBhyF5FF\",\"FJsvM5yqKuK9yMk9P\",\"iERYTAAJo3rBJ8Rok\",\"E3fyZ23p26CcvHvuR\",\"Akq3fQcPRgPrWfsye\",\"Q9KQomTTPBsrkAL6c\",\"zw7g7T8wE5R5CBhXr\",\"R4JQmeA6cYyfXbmLF\",\"XKi8iZXBCHCaebSHh\",\"yjtdwc2AC4jA2RWtn\",\"XYEaiiYP79duAqwEM\",\"5Zq3aGdvh4LHBvnJL\",\"66gXXy97s3jxAeS9q\",\"gSpcNJ8znvGGfWsQH\",\"AasGs8AeX9Lcb9xJn\",\"etTJkfzBMjXkCi4LD\",\"3awyiorYPgCqqP7Sr\",\"6gPHMpkEP8JuHxzpd\",\"DHwbkbzYNpmkSFT7u\",\"628AnsXabnYcT9gwx\",\"hr3kdJKthGFr5jRQB\",\"jqbm8L6895JgAtZ6H\",\"H3yM3F3mukfdq9fit\",\"Y9Nz9yafaibz54W4o\",\"BdvdJYwHZr7JpkHsn\",\"sbme4fRJjjBjYXRbY\",\"ih2aGaqkMaagTgyL2\",\"2CvHJcA9aXt9pvZwA\",\"KTakzmYd7Xa8zfAMk\",\"bQfngMgCwDe7nagfF\",\"zTZtM9jRsu8eXie6s\",\"QhnPiCKfFuaHLL8iL\",\"8BFSTCnoe2QggN64c\",\"5YCX58nhHT8oRCHyy\",\"xrd6iWv7yctTWfzkJ\",\"2NJuDfSqdrF8kHHni\",\"QEhgdaBYvvTH4GpoN\",\"5PmsJ8jPhBkaMx7xP\",\"XnwL5cur8wx8sy3CK\",\"pi76g3eRpnKrhee2a\",\"YER6iBcpJCuhgrYDN\",\"Nv5a34gxg5yvLKRW8\",\"v2AzBqD64zLiRD9bP\",\"Pvh4WeZvw496QpmQp\",\"cp3X8hk8yNME7qoD9\",\"z5ebtimXwFFJdYxoa\",\"vtHbevf2tHqe6mRxX\",\"2ZFoLTxcCARhwc8xX\",\"p5ZshR8zhTqmdhKDc\",\"Y5H6Lp7Qou9XGptHH\",\"EoNHgbWsF6ZQF4eYr\",\"Q75jsoXjhTXJRrw8z\",\"mHT2bJb5SByfJ8yKS\",\"bX6tpTCjwoi6XMMbK\",\"a777e8chPvJkY3tKa\",\"QRv96jmNaYsWkxQEG\",\"eQXwk5zGckM8tCWYH\",\"Lzj3w7QjdzikynsGG\",\"mwDdQwbZN6tXwAbBA\",\"buX4mCQhtXCfBjeno\",\"6kz7jjJS8W4tikYQT\",\"Ji84eQR54xeqRYceZ\",\"C9LKGu2g5hSijvDzA\",\"r7mZLgpQWzRiGddL5\",\"9ADYC3ogYkE5JdjTn\",\"Dn5QN5F7y54y4kzp9\",\"4ntYzGHHBgqf58udP\",\"nAmJEX7BkHLd9LsG2\",\"pLpcDC3EYx2DDQSdt\",\"8raviPK67KKxzQWcF\",\"ZcqshY58sGEEvgeaq\",\"PGCDJpQMN8Sjn9Gm6\",\"XAGJuJRsgxZNiAN9C\",\"Po3v3dHCk6wYGKMwi\",\"2zKQWLmEBw8FBs4ZL\",\"tAF9Gf6PiGogbZuWs\",\"7wtuhPesfhcYsfZaZ\",\"ub52xTj7z724T8ggS\",\"t9FFAu6ML9xuEtMsN\",\"s7Qqx4Jnuq85iB7Lw\",\"aEm3Wvj2rFYRL8Lrb\",\"kp2ZbCewZJAbfd7xv\",\"JsRTAwWK7Nikj4sKA\",\"v2w9GN4jHP2fgYdeE\",\"ttuGK7od8simjgmCJ\",\"zvhWpHAEk7YgxXaQd\",\"vAh63eGRwkuJtoP8v\",\"CNc6rmwhbxkxEhHAp\",\"Ya3eHgs8x3unZRLpb\",\"STipuJs6kBvPqqsSE\",\"ZTTJprKDvFqKGew7c\",\"g4NCSxxHqHCGMpWwT\",\"AFfw7cGg83uYk2Miy\",\"Yp7uvStL97cC9fKkY\",\"XzMxsyYj2ZeZ6Jmis\",\"evTTY9hwrtogaNxXn\",\"nyh73Tr6GhqAat78g\",\"3Gf7ikLijfoxabiPY\",\"pyTiS5yeELy4F9ZnJ\",\"JuGJgYuj4eHc5xdaz\",\"CH53jGETBeJTummf3\",\"DPi9QGLctq2y76KuE\",\"u9cRf5kvtpRB5ffB3\",\"s678Wirfor5uYL5T6\",\"xn7uGNKeAwPEkP9oA\",\"J7d397iB5GuWRAMfg\",\"srJ34BaybkQh3qRkM\",\"nkH3HfJXLMNcBMM79\",\"e9Cknxbx6o7Nb6REs\",\"R9uaMzX2Y4ND8Cosm\",\"fagfwZYYKokt5swAu\",\"2Qk2mFu9HBFzrB24i\",\"YSmLyP3eRhcFjJPzg\",\"hyx8iH2z3QySmyRKT\",\"NGvCPuMiAP3xrRLfB\",\"M4vq8ATaS9Jg5X7iP\",\"oDtGiNqDMHmhHE3J8\",\"9HZbxzkzgz4CvePtv\",\"8BJyXvRWcrvN3nttS\",\"nBJve5CzG6WAw7WFQ\",\"gXTAie79kiw28tx5u\",\"jyoLggHk8xQKZuoQC\",\"bfYmA3LMvhSrK59cn\",\"LwD3CyYSiBfg3mA4r\",\"LPZ2QKCoB8q6rG25c\"],\"quality\":[5,5,3,5,4,3,5,5,5,3,5,5,5,3,5,5,5,5,5,5,5,5,5]},\"tests\":{\"score\":0,\"voters\":[\"BkPgkDQGHm66X4Qai\"]},\"instructions\":{\"score\":9.950000000000001,\"voters\":[\"BkPgkDQGHm66X4Qai\",\"iMgXdDCgeaSRogeN3\",\"LfR9Bopm57BMNNnkp\"]},\"flags\":0},\"isHidden\":false,\"quality\":4.608695652173913,\"family\":[{\"_id\":\"mEEsMKznTCq25PWvD\",\"language\":\"cpp\"},{\"_id\":\"RBqvKrYLxtM57G5FQ\",\"language\":\"csharp\"},{\"_id\":\"HjvecTb3aFMjJ59sB\",\"language\":\"java\"},{\"_id\":\"uts8XsD5zGHdHr32u\",\"language\":\"javascript\"},{\"_id\":\"tMiJJkuAFDfsdmdZK\",\"language\":\"python3\"},{\"_id\":\"wyekSPQ6XgGefuiiy\",\"language\":\"ruby\"},{\"_id\":\"mcFMfwEQscSTZTHsT\",\"language\":\"swift\"}]}}"]