a["{\"msg\":\"result\",\"id\":\"2080\",\"result\":{\"_id\":\"knZ2M5xC6XijT7M8w\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"function combo(arr, n) {\\n\\t\\n}\",\"difficulty\":2.9166666666666665,\"familyId\":\"9viC4Q4Q4fXkWb4pZ\",\"instructions\":\"Create a function that returns all **combinations of size n** from an array. Sort the array in ascending lexicographical order.\\n\\n### Examples\\n```\\ncombo([1, 2, 3, 4], 1) ➞ [[1], [2], [3], [4]]\\n\\ncombo([1, 2, 3, 4], 2) ➞ [[1, 2], [1, 3], [1, 4], [2, 3], [2, 4], [3, 4]]\\n\\ncombo([1, 2, 3, 4], 5) ➞ []\\n\\ncombo([1, 2, 3, 4], 0) ➞ [[]]\\n```\\n\\n### Notes\\n- Lexicographical order: Compare the first element: `[1, 2]` will be before `[2, 4]`. If both share the same first element, compare the second element: `[1, 2]` is before `[1, 3]`, etc.\\n- Return an empty array `[]` if `n` exceeds the length of the array.\\n- Return  `[[]]` if `n` is `0` (see example #4). (Since there is only one combination of length 0: an empty array).\",\"lab\":\"Test.assertSimilar(combo([1, 2, 3, 4], 2), [[1, 2], [1, 3], [1, 4], [2, 3], [2, 4], [3, 4]])\\nTest.assertSimilar(combo([1, 2, 3, 4], 3), [[1, 2, 3], [1, 2, 4], [1, 3, 4], [2, 3, 4]])\\nTest.assertSimilar(combo([1, 2, 3, 4], 1), [[1], [2], [3], [4]])\\nTest.assertSimilar(combo([1, 2, 3, 4], 5), [])\\nTest.assertSimilar(combo([1, 2, 3, 4], 0), [[]])\\nTest.assertSimilar(combo(['a', 'b', 'c'], 0), [[]])\\nTest.assertSimilar(combo(['a', 'b', 'c'], 4), [])\\nTest.assertSimilar(combo(['a', 'b', 'c'], 1), [['a'], ['b'], ['c']])\\nTest.assertSimilar(combo(['a', 'b', 'c'], 2), [['a', 'b'], ['a', 'c'], ['b', 'c']])\\nTest.assertSimilar(combo(['a', 'b', 'c'], 3), [['a', 'b', 'c']])\",\"language\":\"javascript\",\"summary\":\"Create a function that returns all combinations of size n from an array. Sort the array in ascending lexicographical order.\\n\\nExamples\\ncombo([1, 2, 3, 4], 1) ➞ [[1], [2], [3], [4]]\\n\\ncombo([1, 2, 3, 4], 2) ➞ [[1, 2], [1, 3], [1, 4], [2, 3], [2, 4], [3, 4]]\\n\\ncombo([1, 2, 3, 4], 5) ➞ []\\n\\ncombo([1, 2, 3, 4], 0) ➞ [[]]\\n\\nNotes\\nLexicographical order: Compare the first\",\"tags\":[\"arrays\",\"language_fundamentals\"],\"timestamp\":{\"$date\":1554180821620},\"title\":\"Generate N-Size Combinations from an Array\",\"stats\":{\"completed\":{\"total\":28,\"ratings\":[1,1,1,1,1,1,1,1,1,1,5,3,2,5,5,3,3,5,3,4,5,4,4,3,4,3,3,4,4,4,3,2,4,4,3,3],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"65dbBZynphj53nXqA\",\"SDtZFL5NzAoCPofXk\",\"bbbpNxM3hgGMCqMn8\",\"wo5GXKs36Mx5rSNit\",\"eomLS3wh6tQPN8jtH\",\"8xuMMGF7fyQWL2fKH\",\"rTRvHndHZKKRkb9w5\",\"n5wubRfh6zh8QRymN\",\"yjtdwc2AC4jA2RWtn\",\"AasGs8AeX9Lcb9xJn\",\"DYzTRfAmusMcuoMya\",\"mHT2bJb5SByfJ8yKS\",\"5Zq3aGdvh4LHBvnJL\",\"2NJuDfSqdrF8kHHni\",\"LYtGKTAZkNWeqpNun\",\"cRpaCxYRmGcN3Nsoj\",\"YER6iBcpJCuhgrYDN\",\"JGBCMpnbbi5ztuFoX\",\"a777e8chPvJkY3tKa\",\"aEm3Wvj2rFYRL8Lrb\",\"pGh7WykiPe26fHJYv\",\"buX4mCQhtXCfBjeno\",\"srJ34BaybkQh3qRkM\",\"M4vq8ATaS9Jg5X7iP\",\"AFfw7cGg83uYk2Miy\"],\"quality\":[]},\"tests\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":-9.65,\"rators\":[\"mNMQvcxKSSvqqMYCH\"],\"voters\":[\"yGsMwA8MmrHvk4AWz\",\"cuHdomTzkAnbBfqPm\",\"hLDqymoYFZuvgXeKC\",\"2Qjob9BXsjXtdqj9P\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":0,\"family\":[{\"_id\":\"GAjMQdvodyjSBqfCQ\",\"language\":\"cpp\"},{\"_id\":\"knZ2M5xC6XijT7M8w\",\"language\":\"javascript\"},{\"_id\":\"hD8vgeNkjXy5trX6h\",\"language\":\"python3\"},{\"_id\":\"AHebE2JofXB4XzN2E\",\"language\":\"ruby\"}]}}"]