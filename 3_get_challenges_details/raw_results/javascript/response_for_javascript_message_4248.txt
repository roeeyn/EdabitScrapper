a["{\"msg\":\"result\",\"id\":\"879\",\"result\":{\"_id\":\"rRdMJ5nasKk9dogm5\",\"author\":\"Isaac Pak\",\"authorId\":\"yaL57wdXmgAZTvKfX\",\"code\":\"const REGEXP = /(\\\\w+)/g\",\"difficulty\":1.6055045871559632,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"RoAANa83MX9wdTKwb\",\"instructions\":\"You've just webscraped a web page and stored it in a string.  In the string there is a bullet list of states that voted for President Trump's impeachment:\\n\\n```\\nconst str = `\\n* Texas = no\\n* California = yes\\n* Florida = yes\\n* Michigan = no\\n`\\n```\\n\\nAdd a **positive lookahead**  assertion so a regex match would output the states that voted **yes**\\n\\n### Notes\\n- You **must** use a **positive lookahead** assertion (check the **Resources** tab for info).\\n- This is fake data and used only for educational purposes.\",\"isHidden\":false,\"lab\":\"const validate = (REGEXP) => {\\n\\t if(!/\\\\(\\\\?\\\\=/.test(String(REGEXP))) return () => \\\"need lookahead assertion\\\"\\n\\t return function testReg(str) {\\n\\t\\t return str.match(REGEXP)\\n\\t }\\n} \\nconst str = `\\n* Texas = no \\n* California = yes  \\n* Florida = yes \\n* Michigan = no \\n`\\n\\nconst testStr = validate(REGEXP) \\n\\nTest.assertNotEquals(testStr(str), \\\"need lookahead assertion\\\", \\\"You need to use a lookahead in your expressions.\\\")\\nTest.assertSimilar(testStr(str), ['California', 'Florida'])\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,1,0,0,1,1,1,1,2,3,2,2,0,1,2,1,3,2,2,1,2,2,1,2,2,2,2,0,2,2,2,0,2,2,3,1,2,2,1,1,1,0,2,2,2,2,5,2,2,2,1,2,2,2,2,0,1,2,0,1,2,3,2,0,3,2,2,2,3,1,0,1,2,2,2,2,0,2,1,2,1,2,2,1,1,0,2,1,2,2,2,2,1,2,2,2,2,1,2,2,1,2,0,2],\"rators\":[\"yaL57wdXmgAZTvKfX\",\"n5wubRfh6zh8QRymN\",\"5Zq3aGdvh4LHBvnJL\",\"yjtdwc2AC4jA2RWtn\",\"zsNp9fk9BGDBiHr4G\",\"mHT2bJb5SByfJ8yKS\",\"zgoq9MhrL2h75DAMA\",\"k5TGxBtLi9BXxeChT\",\"eANW47mfA359Y6JyP\",\"pi76g3eRpnKrhee2a\",\"FJsvM5yqKuK9yMk9P\",\"Y9Nz9yafaibz54W4o\",\"xfxkLoQsbZBonmBGp\",\"QEhgdaBYvvTH4GpoN\",\"6BpBQnSGhzgvhXrEy\",\"7JCLyrrY6JYGpocac\",\"g5noFWaoRtZNcEEAW\",\"AasGs8AeX9Lcb9xJn\",\"RE4Mm9T6Q9uygAxGS\",\"cJwiiiX7qwSvgtmk8\",\"2CvHJcA9aXt9pvZwA\",\"YER6iBcpJCuhgrYDN\",\"C34Y779CoL5NLTpsg\",\"EWn8w8P3nNh7knatY\",\"EjPLq3QSJdGQFJdgW\",\"SNiJRRosrmSWssLj4\",\"9Pzg45NEiRXhLtLh3\",\"Nv5a34gxg5yvLKRW8\",\"v2AzBqD64zLiRD9bP\",\"jYXFFTnuWFNo72Rc5\",\"vtHbevf2tHqe6mRxX\",\"dDFJpK4pXCsQYuHmc\",\"d9LBRxvADNBB5QJMB\",\"eomLS3wh6tQPN8jtH\",\"a777e8chPvJkY3tKa\",\"ipiC2qPhKZWsAouJf\",\"65dbBZynphj53nXqA\",\"zW5JY78HhFCrSPEeE\",\"eNdxN376u6gM4qdXF\",\"vn6nR36mdfY8z2zKx\",\"Q75jsoXjhTXJRrw8z\",\"zw7g7T8wE5R5CBhXr\",\"tAF9Gf6PiGogbZuWs\",\"TNo7w28xev2B5YWkF\",\"rdF6thfrJ4ZHeXMg5\",\"7wtuhPesfhcYsfZaZ\",\"ZcqshY58sGEEvgeaq\",\"eFjGhq7C7bBKXjT6X\",\"ij9YRJvZz6WbqcGXS\",\"C9LKGu2g5hSijvDzA\",\"aEm3Wvj2rFYRL8Lrb\",\"buX4mCQhtXCfBjeno\",\"8raviPK67KKxzQWcF\",\"JGBCMpnbbi5ztuFoX\",\"SWbaoFPBAeu6g376j\",\"Qm9fMjEa3EqAfjeKv\",\"moe6ztrsNzFymC3A7\",\"pLpcDC3EYx2DDQSdt\",\"jED84My7PjSKANQsX\",\"nkH3HfJXLMNcBMM79\",\"7gZKfvwaeqsGKXMEN\",\"ZcmrtSpqFnCBEK5YE\",\"e9Cknxbx6o7Nb6REs\",\"Po3v3dHCk6wYGKMwi\",\"2tCCFm5iefjrRSaxv\",\"Ya3eHgs8x3unZRLpb\",\"4ntYzGHHBgqf58udP\",\"evTTY9hwrtogaNxXn\",\"kp2ZbCewZJAbfd7xv\",\"s7Qqx4Jnuq85iB7Lw\",\"QRv96jmNaYsWkxQEG\",\"Akq3fQcPRgPrWfsye\",\"N3CNtWZz4ovJfH9Aw\",\"g4NCSxxHqHCGMpWwT\",\"CNc6rmwhbxkxEhHAp\",\"9SrwsygZbwzGbYZSK\",\"BdvdJYwHZr7JpkHsn\",\"2QifjAQzAEqqnk86G\",\"pER3Z29q2fkQdcxTw\",\"8kC69AiRv6XA3xnyD\",\"2QziknsznNeMPRh3g\",\"SY9Euc4kQfRgetXTd\",\"wbzQwextPpnNBR7cG\",\"M4vq8ATaS9Jg5X7iP\",\"vewKwcMeGuk3p3MsN\",\"NchnDcEmsLTeFZ4FH\",\"vqD6ERedxEyXyT3Sx\",\"Yp7uvStL97cC9fKkY\",\"CyFfrFHjA7sLQohY9\",\"KxTMbSBrKmbBRyA4J\",\"3Gf7ikLijfoxabiPY\",\"zd9FLSzsGz3evKafy\",\"yxh6CjdHCfkhJszj6\",\"Yfggc4Hr3fmtG4dsS\",\"RtPhDuwmvWNHiBxmG\",\"AFfw7cGg83uYk2Miy\",\"u9cRf5kvtpRB5ffB3\",\"2Qk2mFu9HBFzrB24i\",\"GsrjAqoAdLATJH9qD\",\"wJTDDTE3TrmSXKP4d\",\"jemTNShfp6ymAs3pj\",\"oDtGiNqDMHmhHE3J8\",\"NGvCPuMiAP3xrRLfB\",\"YQdHYk5JsyjDyvkma\",\"s4iT787Tvvhrivkar\",\"LwD3CyYSiBfg3mA4r\",\"9HZbxzkzgz4CvePtv\",\"nBJve5CzG6WAw7WFQ\",\"gXTAie79kiw28tx5u\",\"HCfkcKnPs9mrJojdG\",\"TtrXnGzi9MyhLvWiz\",\"bfYmA3LMvhSrK59cn\",\"8BJyXvRWcrvN3nttS\",\"jicWFrNKadYuLhqxh\",\"z47JaNrQMgvuPx5HE\",\"nC4sPB69yYuTSks9T\",\"QGjY3hgPYPMmMjc7j\",\"uxKGACwmZ6FNZsMwE\",\"jkkKzNT77bMStXhpW\",\"rMc3LPajSgm68hNfC\",\"LPZ2QKCoB8q6rG25c\",\"CHvzhtXnv8HTbPQ56\",\"DPpSwhhiuF4Y9YR2i\"],\"total\":129,\"quality\":[5,5,1,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5]},\"flags\":0},\"summary\":\"You've just webscraped a web page and stored it in a string.  In the string there is a bullet list of states that voted for President Trump's impeachment:\\n\\nconst str = `\\nTexas = no\\nCalifornia = yes\\nFlorida = yes\\nMichigan = no\\n`\\n\\nAdd a positive lookahead  assertion so a regex match would output the states that voted yes\\n\\nNotes\\nYou must use a positive lookahead\",\"tags\":[\"language_fundamentals\",\"regex\",\"strings\"],\"timestamp\":{\"$date\":1580753573325},\"title\":\"RegEx: Boundary Assertions IV\",\"quality\":4.7368421052631575,\"family\":[{\"_id\":\"rRdMJ5nasKk9dogm5\",\"language\":\"javascript\"},{\"_id\":\"2PMS2CcnQQw487hDg\",\"language\":\"python3\"}]}}"]