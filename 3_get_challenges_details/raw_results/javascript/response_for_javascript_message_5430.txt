a["{\"msg\":\"result\",\"id\":\"1465\",\"result\":{\"_id\":\"roCH4n2xnBjLoXfjv\",\"author\":\"Ruud Peter Boelens\",\"authorId\":\"Akq3fQcPRgPrWfsye\",\"code\":\"function remap(value, low1, high1, low2, high2) {\\n\\t\\n}\",\"difficulty\":2.1707317073170733,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"nWgfDb5stFx8nXcM2\",\"instructions\":\"Create a function similar to Processing's \\\"map\\\" function (check the **Resources** tab), in which a value and its range is taken and remapped to a new range.\\n\\nThe function takes 5 numbers:\\n- Value: `value`\\n- Range: `low1` and `high1`\\n- Range: `low2` and `high2`\\n\\n### Examples\\n```\\nremap(7, 2, 12, 0, 100) ➞ 50\\n\\nremap(17, 5, 55, 100, 30) ➞ 83.2\\n\\nremap(50, 1, 51, 0, 100) ➞ 98\\n```\\n\\n### Notes\\n- Test input will always be numbers.\\n- If the input range is `0`, return `0`.\",\"lab\":\"Test.assertEquals(remap(7, 2, 12, 0, 100), 50)\\nTest.assertEquals(remap(17, 5, 55, 100, 30), 83.2)\\nTest.assertEquals(remap(2.5, 2, 3, -80, 80), 0)\\nTest.assertEquals(remap(50, 1, 51, 0, 100), 98)\\nTest.assertEquals(remap(0, 0, 0, 0, 0), 0, 'The input range is 0.')\\nTest.assertEquals(remap(20, 10, 50, 50, 10), 40)\\nTest.assertEquals(remap(0, 5, -20, 60, 1000), 248)\\nTest.assertEquals(remap(17, 17, 17, 519, 1085), 0, 'The input range is 0.')\",\"language\":\"javascript\",\"summary\":\"Create a function similar to Processing's \\\"map\\\" function (check the Resources tab), in which a value and its range is taken and remapped to a new range.\\n\\nThe function takes 5 numbers:\\nValue: value\\nRange: low1 and high1\\nRange: low2 and high2\\n\\nExamples\\nremap(7, 2, 12, 0, 100) ➞ 50\\n\\nremap(17, 5, 55, 100, 30) ➞ 83.2\\n\\nremap(50, 1, 51, 0, 100) ➞ 98\\n\\nNotes\\nTest input\",\"tags\":[\"algorithms\",\"math\",\"numbers\"],\"timestamp\":{\"$date\":1558830189841},\"title\":\"Re-Map a Number from One Range to Another\",\"stats\":{\"completed\":{\"total\":38,\"ratings\":[2,2,2,2,2,2,2,2,2,2,2,2,3,2,2,2,3,2,3,2,3,0,3,3,1,3,2,3,2,1,3,2,4,1,1,3,3,3,2,3,0],\"rators\":[\"Akq3fQcPRgPrWfsye\",\"65dbBZynphj53nXqA\",\"dgwRvPi62zKghWiHb\",\"n5wubRfh6zh8QRymN\",\"54Ka62KytXRsrLPhZ\",\"zgoq9MhrL2h75DAMA\",\"EWn8w8P3nNh7knatY\",\"yjtdwc2AC4jA2RWtn\",\"AasGs8AeX9Lcb9xJn\",\"XKi8iZXBCHCaebSHh\",\"5Zq3aGdvh4LHBvnJL\",\"DHwbkbzYNpmkSFT7u\",\"trzgWDwEaa33KyPvJ\",\"6BpBQnSGhzgvhXrEy\",\"cRpaCxYRmGcN3Nsoj\",\"qJZsi5rhRnWA38FbA\",\"rfsQxYTnovxYJ4s7Q\",\"FJsvM5yqKuK9yMk9P\",\"2innwjWqxJHo4eRGh\",\"YSb9gNuH9PEYS8QwW\",\"RE4Mm9T6Q9uygAxGS\",\"mHT2bJb5SByfJ8yKS\",\"ZcqshY58sGEEvgeaq\",\"aEm3Wvj2rFYRL8Lrb\",\"aDrjGTkZWi3ZSMFc7\",\"tPtz279rzBX8kCWMr\",\"QRv96jmNaYsWkxQEG\",\"4Xv87xmdSnpYhi8hz\",\"BdvdJYwHZr7JpkHsn\",\"xmeMey2MWpLZX4Hbo\",\"CNc6rmwhbxkxEhHAp\",\"8BJyXvRWcrvN3nttS\",\"LCn6qz2GoMr5577Rd\",\"wJTDDTE3TrmSXKP4d\",\"srJ34BaybkQh3qRkM\",\"AFfw7cGg83uYk2Miy\",\"oDtGiNqDMHmhHE3J8\",\"CHvzhtXnv8HTbPQ56\"],\"quality\":[4,4,5,1,4,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"isHidden\":false,\"quality\":4,\"family\":[{\"_id\":\"roCH4n2xnBjLoXfjv\",\"language\":\"javascript\"},{\"_id\":\"CsvdwQvNe8hYomcwB\",\"language\":\"python3\"},{\"_id\":\"xWecwiRcxjRMg8viW\",\"language\":\"ruby\"}]}}"]