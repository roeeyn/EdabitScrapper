a["{\"msg\":\"result\",\"id\":\"1431\",\"result\":{\"_id\":\"RTGusMtBRRdE5ivEP\",\"author\":\"Werdna\",\"authorId\":\"buX4mCQhtXCfBjeno\",\"code\":\"function isRepeated(strn) {\\n\\t\\n}\",\"difficulty\":2.1538461538461537,\"familyId\":\"gtyrJQgtqnxwfS87N\",\"instructions\":\"This challenge concerns strings such as:\\n\\n```\\n\\\"repeatedrepeatedrepeated\\\"\\n```\\n\\n... that are obtained by repeating a smaller string, which in this case is the string `\\\"repeated\\\"`.\\n\\nOn a related note, since the string above is made of 3 repetitions, one way to produce this string is via the code ` \\\"repeated\\\".repeat(3)`.\\n\\nWrite a function that, given a string, either:\\n- Returns `false` if the string isn't made by repeating a smaller string or ...\\n- Returns **the number of repetitions** if the string repeats a smaller string.\\n\\n### Examples\\n```\\nisRepeated(\\\"repeatedrepeatedrepeated\\\") ➞ 3\\n\\nisRepeated(\\\"overintellectualizations\\\") ➞ False\\n\\nisRepeated(\\\"nononononononononononono\\\") ➞ 12\\n\\nisRepeated(\\\"moremoremoremoremoremore\\\") ➞ 6\\n\\nisRepeated(\\\",,,,,,,,,,,,,,,,,,,,,,,,\\\") ➞ 24\\n```\\n\\n### Notes\\nTo keep things a little simpler, all strings in the tests will have length exactly 24, just as in all the examples above. In particular, the answers will always be divisors of 24.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertEquals(isRepeated(\\\"repeated\\\".repeat(3)), 3)\\nTest.assertEquals(isRepeated(\\\"repeat\\\".repeat(4)), 4)\\nTest.assertEquals(isRepeated(\\\"no\\\".repeat(12)), 12)\\nTest.assertEquals(isRepeated(\\\"more\\\".repeat(6)), 6)\\nTest.assertEquals(isRepeated(\\\"puns\\\".repeat(6)), 6) \\nTest.assertEquals(isRepeated(\\\",\\\".repeat(24)), 24)\\nTest.assertEquals(isRepeated(\\\"please\\\".repeat(4)), 4)\\nTest.assertEquals(isRepeated(\\\"stop\\\".repeat(6)), 6)\\nTest.assertEquals(isRepeated(\\\"now\\\".repeat(8)), 8)\\nTest.assertEquals(isRepeated(\\\"overintellectualizations\\\"), false)\\nTest.assertEquals(isRepeated(\\\"intercomprehensibilities\\\"), false)\\nTest.assertEquals(isRepeated(\\\"microspectrophotometries\\\"), false)\\nTest.assertEquals(isRepeated(\\\"accomplished\\\".repeat(2)), 2)\\n\\n// Original Python challenge from Luis Pereira\",\"language\":\"javascript\",\"quality\":4.5,\"summary\":\"This challenge concerns strings such as:\\n\\n\\\"repeatedrepeatedrepeated\\\"\\n\\n... that are obtained by repeating a smaller string, which in this case is the string \\\"repeated\\\".\\n\\nOn a related note, since the string above is made of 3 repetitions, one way to produce this string is via the code  \\\"repeated\\\".repeat(3).\\n\\nWrite a function that, given a string, either:\\nReturns\",\"tags\":[\"strings\",\"language_fundamentals\",\"numbers\"],\"timestamp\":{\"$date\":1608425274816},\"title\":\"\ud83d\udca5repeatedrepeatedrepeated\ud83d\udca5\",\"stats\":{\"completed\":{\"total\":52,\"ratings\":[2,2,2,2,2,1,2,0,0,2,2,0,2,2,1,2,2,2,2,2,4,2,2,2,2,2,1,2,3,2,1,2,2,2,2,3,3,3,3,3,3,3,2,3,3,3,3,2,2,3,2,5],\"quality\":[5,3,5,5],\"rators\":[\"buX4mCQhtXCfBjeno\",\"4CBtKQQ2Btz4frrd7\",\"N3CNtWZz4ovJfH9Aw\",\"g4NCSxxHqHCGMpWwT\",\"DPi9QGLctq2y76KuE\",\"RtPhDuwmvWNHiBxmG\",\"zw7g7T8wE5R5CBhXr\",\"Ya3eHgs8x3unZRLpb\",\"oyB4Wr4EeZnoDaa8B\",\"yjtdwc2AC4jA2RWtn\",\"2Ni3PzJAc5fAhqBkb\",\"kp2ZbCewZJAbfd7xv\",\"J7d397iB5GuWRAMfg\",\"m6qKkBY4aPWziyJTj\",\"mHT2bJb5SByfJ8yKS\",\"8BJyXvRWcrvN3nttS\",\"Yp7uvStL97cC9fKkY\",\"u9cRf5kvtpRB5ffB3\",\"AFfw7cGg83uYk2Miy\",\"CNc6rmwhbxkxEhHAp\",\"nkH3HfJXLMNcBMM79\",\"QRv96jmNaYsWkxQEG\",\"2Qk2mFu9HBFzrB24i\",\"JsRTAwWK7Nikj4sKA\",\"s678Wirfor5uYL5T6\",\"oDnPTXrzYF4snDPXY\",\"w3giEnhBSYTbrE7d3\",\"QvEXmSEo3ANp3yPyH\",\"hyx8iH2z3QySmyRKT\",\"RE4Mm9T6Q9uygAxGS\",\"6BpBQnSGhzgvhXrEy\",\"65dbBZynphj53nXqA\",\"NGvCPuMiAP3xrRLfB\",\"PytNZK9mNiRiZxPrm\",\"MaREKxmRcmQkHPAGp\",\"kPagE5DiHQX69s5Ro\",\"LCn6qz2GoMr5577Rd\",\"fHeDEpQHm6sKGjKL7\",\"AYXYjF6qywpePBgTJ\",\"hCfruGWxw7v64teEr\",\"8s5Bdrn7RTga7DL6x\",\"vjtyhrDRedRhLz8yP\",\"nWND4LmgZTftyB8sN\",\"oDtGiNqDMHmhHE3J8\",\"Xk2g4CNFAnYcvxiSr\",\"49XFttjKo2QhEWT3R\",\"3JL2FYn6xC2vwgkg4\",\"STipuJs6kBvPqqsSE\",\"tAF9Gf6PiGogbZuWs\",\"ZcJm2kuqJnN3CXFaR\",\"jyoLggHk8xQKZuoQC\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"RTGusMtBRRdE5ivEP\",\"language\":\"javascript\"},{\"_id\":\"6rztMMwkt6ijzqcF6\",\"language\":\"python3\"},{\"_id\":\"tHM8zLQFM3kdt5uM8\",\"language\":\"ruby\"}]}}"]