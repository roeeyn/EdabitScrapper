a["{\"msg\":\"result\",\"id\":\"927\",\"result\":{\"_id\":\"B4kaykgTDQxdi32FW\",\"author\":\"Isaac Pak\",\"authorId\":\"yaL57wdXmgAZTvKfX\",\"code\":\"const REGEXP = /* Write you oexpression here */g\",\"difficulty\":1.632183908045977,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"Z88vyN2pbQiHZ3y68\",\"instructions\":\"You can think of character classes as characters with special meaning. They are recognized as special when you place the `\\\\` before the character.\\n\\nHere are a list of the characters classes in JavaScript:\\n\\n```\\n., \\\\cX, \\\\d, \\\\D, \\\\f, \\\\n, \\\\r, \\\\s, \\\\S, \\\\t, \\\\v, \\\\w, \\\\W, \\\\0, \\\\xhh, \\\\uhhhh, \\\\uhhhhh, [\\\\b]\\n```\\n\\nGiven the below string, write a **regex** that will find all  **open compound words** starting with the word **best** and the second word begins with the letter **b**.\\n\\n```\\n\\\"best buy best car best friend best-boy bestguest best dressed best bet best man best deal best boyfriend\\\"\\n```\\n\\n### Notes\\n- Open compound words are words with spaces in them.\\n- Check the **Resources** tab for details on character classes if you're stuck.\",\"isHidden\":false,\"lab\":\"const str = \\\"best buy best car best friend best-boy bestguest best dressed best bet best man best deal best boyfriend\\\"\\n\\nconst validate = (REGEXP) => {\\n\\t if(!/\\\\\\\\s/.test(String(REGEXP))) return () => \\\"required\\\"\\n\\t return function testReg(str) {\\n\\t\\t return str.match(REGEXP)\\n\\t }\\n}\\n\\nconst testExp = validate(REGEXP)\\n\\nTest.assertNotEquals(testExp(str), \\\"required\\\", \\\"You are required to use a \\\\\\\\s character class in your expression.\\\")\\nTest.assertSimilar(testExp(str), ['best buy', 'best bet', 'best boyfriend'])\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,0,0,1,1,2,0,2,1,0,1,3,1,1,2,1,1,1,0,1,2,0,1,0,1,0,1,3,2,2,2,2,2,1,2,1,3,2,1,1,1,0,0,2,2,3,1,1,2,1,2,2,3,1,0,1,1,1,0,2,1,2,2,1,2,4,2,1,2,1,2,1,1,1,2,0,2,2,2,2,1,2,1,1,1,1,2,1,2,2,1,0,2,0,1,2,3,3,2,2,1,2,2,1,3,3,3,4,2,2,4,2,4,3,3,2,2,2,2,2,2,2,2,0,1,0,2,2,2,0,2,2,3,2,2,2,2,1,2,1,2,2,0,2,0,2,4,3,3,3,2,2,3,1,1,2,1,2,1,5,2,2,1,2,2,2,2,0,2,0],\"rators\":[\"n5wubRfh6zh8QRymN\",\"yjtdwc2AC4jA2RWtn\",\"3xtJYwxrWmw63ibfF\",\"mHT2bJb5SByfJ8yKS\",\"g5noFWaoRtZNcEEAW\",\"yaL57wdXmgAZTvKfX\",\"4p2sARSZNNnKqjAT6\",\"RE4Mm9T6Q9uygAxGS\",\"eANW47mfA359Y6JyP\",\"PAzNgJF54C2mYPkR9\",\"AWegZBYQWoTbxdE3D\",\"k5TGxBtLi9BXxeChT\",\"YER6iBcpJCuhgrYDN\",\"jv8oko39MjmwzCMWZ\",\"Y9Nz9yafaibz54W4o\",\"QEhgdaBYvvTH4GpoN\",\"pi76g3eRpnKrhee2a\",\"jcPZ5ySXseCB7Ec3x\",\"QnPD4Sv6W4LHc2Qng\",\"GzqvGJ6NL8ojCHXFM\",\"RBXL7hWNk6fvmypxM\",\"AasGs8AeX9Lcb9xJn\",\"g4NCSxxHqHCGMpWwT\",\"6BpBQnSGhzgvhXrEy\",\"2CvHJcA9aXt9pvZwA\",\"5Zq3aGdvh4LHBvnJL\",\"L8tsNu6FWDG8fT9Be\",\"pWJWQDhqzDSmfaFam\",\"zTZtM9jRsu8eXie6s\",\"hQJZAKtGhbvtiHRn8\",\"yFGcFfNsHt2Z4G5a9\",\"v29setSFeRBff2vRQ\",\"gGETo2x9dY5TsWc2b\",\"EjPLq3QSJdGQFJdgW\",\"c9sDr9KTB6ZATof4b\",\"2qZhQb7FiDtaThXE9\",\"jTEYLAgPszjdEYgu2\",\"7JCLyrrY6JYGpocac\",\"5NGxHLcQ8Af2RJ4TN\",\"Nv5a34gxg5yvLKRW8\",\"9XnGoq9Tv6ut3zTtH\",\"dDFJpK4pXCsQYuHmc\",\"Jh6CRJvdAgy58WbG2\",\"2sLmHo7G2irSyrDB7\",\"9Pzg45NEiRXhLtLh3\",\"EGMDcfyfqqMZsN5pu\",\"XbxjsbvyP8Tns2MCk\",\"SNiJRRosrmSWssLj4\",\"aPX8qCXL6TmfpRfgy\",\"jqbm8L6895JgAtZ6H\",\"RqnvM77EkZZD9W2Q3\",\"Ynw596LiAeaYq29os\",\"SNt23Ei5dSNtfpEMd\",\"FJsvM5yqKuK9yMk9P\",\"2innwjWqxJHo4eRGh\",\"zgoq9MhrL2h75DAMA\",\"P4jeiN4MnamFDkGNo\",\"zd9FLSzsGz3evKafy\",\"JLzfmQ5x4weTZKhLt\",\"TiqnGGfTYcXZengMZ\",\"Yv3E8FjiXr8od4dPG\",\"EWn8w8P3nNh7knatY\",\"7v6STTHww6oQAmb6y\",\"ZtniSFrgec4oj6Pxm\",\"wMQ6L7szw5pQDJmAr\",\"vtHbevf2tHqe6mRxX\",\"v2AzBqD64zLiRD9bP\",\"9HZbxzkzgz4CvePtv\",\"eTzbu6t7YpD3mK3PY\",\"PTo9qt93YqGvL8fCa\",\"DPpSwhhiuF4Y9YR2i\",\"Po3v3dHCk6wYGKMwi\",\"tuTQhfZC5izTmXEgR\",\"eomLS3wh6tQPN8jtH\",\"eQXwk5zGckM8tCWYH\",\"DERjomKNTJx6NxZjP\",\"szQg8dxKNNre3v3Jk\",\"YLqdr7bYjwew2KM4N\",\"Gc2bmsof5vD2Hsgqv\",\"7wtuhPesfhcYsfZaZ\",\"a777e8chPvJkY3tKa\",\"65dbBZynphj53nXqA\",\"YSmLyP3eRhcFjJPzg\",\"2oNCBeLCQ974DKvb8\",\"tAF9Gf6PiGogbZuWs\",\"A9dfqpKocKsJi3icP\",\"dNqjHnaTsgqBFDxTC\",\"2ZFoLTxcCARhwc8xX\",\"EufkHMbcMbW6eR3Ca\",\"kDuH45yzb6PDtwhi6\",\"Q9KQomTTPBsrkAL6c\",\"sAhNjH3HZ9tSSSKTX\",\"zw7g7T8wE5R5CBhXr\",\"vn6nR36mdfY8z2zKx\",\"uDL732cxhJPfvnyn5\",\"f6uGKbmMdBYCjrMBh\",\"4Xw3w2DhMJdSYXeL5\",\"TNo7w28xev2B5YWkF\",\"kBbZWS57ZTpAmFH7f\",\"eNdxN376u6gM4qdXF\",\"NyEuKq9KTwSk65vkj\",\"W8rKt3G8akpBRvqrG\",\"Q75jsoXjhTXJRrw8z\",\"RgKSx64watn4KhMSo\",\"7TCejEn8wYHWwp4q5\",\"c7reLQxWPKzhRKkTJ\",\"RMC9S536doypLrmRF\",\"b7bp2WS3SMuvWfnfd\",\"d2zx45HMCLAdKddkc\",\"hEBNbCFMPWp5sP7cu\",\"RP8Rvh533chuY87SL\",\"ssGi9j9iw6FcK2ZrN\",\"DwvvpvwBp6QoJ9kpe\",\"JwPdia9yTW7ZEWviM\",\"zW5JY78HhFCrSPEeE\",\"Es4eX2stRpyoXeC7f\",\"ij9YRJvZz6WbqcGXS\",\"eFjGhq7C7bBKXjT6X\",\"8raviPK67KKxzQWcF\",\"buX4mCQhtXCfBjeno\",\"2zKQWLmEBw8FBs4ZL\",\"eoepTq5ES5tfgY9XT\",\"moe6ztrsNzFymC3A7\",\"aEm3Wvj2rFYRL8Lrb\",\"nkH3HfJXLMNcBMM79\",\"SWbaoFPBAeu6g376j\",\"4gb4tvaSCs9u2z3ZA\",\"PGCDJpQMN8Sjn9Gm6\",\"jED84My7PjSKANQsX\",\"e9Cknxbx6o7Nb6REs\",\"7gZKfvwaeqsGKXMEN\",\"ZcmrtSpqFnCBEK5YE\",\"pLpcDC3EYx2DDQSdt\",\"2tCCFm5iefjrRSaxv\",\"Ya3eHgs8x3unZRLpb\",\"evTTY9hwrtogaNxXn\",\"nyh73Tr6GhqAat78g\",\"kp2ZbCewZJAbfd7xv\",\"s7Qqx4Jnuq85iB7Lw\",\"jkumHyXfMkhGcPgqC\",\"AFfw7cGg83uYk2Miy\",\"CNc6rmwhbxkxEhHAp\",\"ZcqshY58sGEEvgeaq\",\"9SrwsygZbwzGbYZSK\",\"BdvdJYwHZr7JpkHsn\",\"8kC69AiRv6XA3xnyD\",\"6wcsoqgMKfZ7xjSgn\",\"vGKxRcDYDsXzTQuEQ\",\"Yp7uvStL97cC9fKkY\",\"vewKwcMeGuk3p3MsN\",\"wbzQwextPpnNBR7cG\",\"Akq3fQcPRgPrWfsye\",\"pdGuqmMyeN4wZaWwv\",\"NchnDcEmsLTeFZ4FH\",\"2Ni3PzJAc5fAhqBkb\",\"3Gf7ikLijfoxabiPY\",\"yxh6CjdHCfkhJszj6\",\"m6qKkBY4aPWziyJTj\",\"nDCNsJvKvsAS5F8PS\",\"N3CNtWZz4ovJfH9Aw\",\"PpjkedaBWzKxCDh9f\",\"gLEE96pDYxRJwo6Dd\",\"bfMNNQrMnF3T5Zxmt\",\"MfKf3kqAgBke4cBZF\",\"srJ34BaybkQh3qRkM\",\"JfukPqeX8tXM5iAoo\",\"vaZbYkXpah2iKQroE\",\"qmcY6XXCL86TiWRMQ\",\"AHmr69B7uDfn4oo4N\",\"TaKKij2njqWSzmLs4\",\"5SaqzTPQgpv2Q4ytH\",\"u9cRf5kvtpRB5ffB3\",\"J7d397iB5GuWRAMfg\",\"2Qk2mFu9HBFzrB24i\",\"pPpmP7xeJzGgK362R\",\"wJTDDTE3TrmSXKP4d\",\"jemTNShfp6ymAs3pj\",\"oDtGiNqDMHmhHE3J8\",\"mpLFbFKjY6u3nsDMv\",\"NGvCPuMiAP3xrRLfB\",\"LwD3CyYSiBfg3mA4r\",\"nBJve5CzG6WAw7WFQ\",\"gXTAie79kiw28tx5u\",\"HCfkcKnPs9mrJojdG\",\"jyoLggHk8xQKZuoQC\",\"TtrXnGzi9MyhLvWiz\",\"8BJyXvRWcrvN3nttS\",\"bfYmA3LMvhSrK59cn\",\"z47JaNrQMgvuPx5HE\",\"nC4sPB69yYuTSks9T\",\"QGjY3hgPYPMmMjc7j\",\"jkkKzNT77bMStXhpW\",\"rMc3LPajSgm68hNfC\",\"uxKGACwmZ6FNZsMwE\",\"sN2JyFeJCwfwwHPwF\"],\"total\":225,\"quality\":[5,3,4,5,5,5,5,5,5,5,5,5,5,5,5,3,1,4,1,5,2,4,5,5,4,5]},\"flags\":0},\"summary\":\"You can think of character classes as characters with special meaning. They are recognized as special when you place the \\\\ before the character.\\n\\nHere are a list of the characters classes in JavaScript:\\n\\n., \\\\cX, \\\\d, \\\\D, \\\\f, \\\\n, \\\\r, \\\\s, \\\\S, \\\\t, \\\\v, \\\\w, \\\\W, \\\\0, \\\\xhh, \\\\uhhhh, \\\\uhhhhh, [\\\\b]\\n\\nGiven the below string, write a regex that will find all  open compound w\",\"tags\":[\"regex\",\"formatting\"],\"timestamp\":{\"$date\":1581616519723},\"title\":\"RegEx: Character Classes X \u2060- \\\\s\",\"quality\":4.269230769230769,\"family\":[{\"_id\":\"B4kaykgTDQxdi32FW\",\"language\":\"javascript\"},{\"_id\":\"u9rnDxsJRDdvRmFai\",\"language\":\"python3\"}]}}"]