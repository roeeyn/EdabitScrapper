a["{\"msg\":\"result\",\"id\":\"1410\",\"result\":{\"_id\":\"nbLgTS3tCHTJcQfA5\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"function halveCount(a, b) {\\n\\t// recursive code here\\n}\",\"difficulty\":2.1454545454545455,\"familyId\":\"wEZMuB35LYb8jwmDM\",\"instructions\":\"Given two integers `a` and `b`, return how many times `a` can be halved while still being greater than `b`.\\n\\n\\n### Examples\\n```\\nhalveCount(4666, 544) ➞ 3\\n// (4666 -> 2333 -> 1166.5 -> 583.25)\\n\\nhalveCount(466, 54) ➞ 3\\n// (466 -> 233 -> 116.5 -> 58.25)\\n\\nhalveCount(1324, 98) ➞ 3\\n// (1324 -> 662 -> 331 -> 165.5)\\n\\nhalveCount(624, 8) ➞ 6\\n// (624 -> 312 -> 156 -> 78 -> 39 -> 19.5 -> 9.75)\\n\\nhalveCount(1000, 3) ➞ 8\\n// (1000 -> 500 -> 250 -> 125 -> 62.5 -> 31.25 -> 15.625 -> 7.8125 -> 3.90625)\\n```\\n\\n### Notes\\n- Integer `a` will always be (at least) greater than the _twice_ of `b`.\\n- You are expected to solve this challenge via a **recursive** approach.\\n- A **collection** of challenges in _recursion_ can be found via this [link]\\n(https://edabit.com/collection/YJH4pAyqDbhLc4STc).\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"const isRecursive = f => (`${f}`.match(RegExp(`${f.name}`,'gm'))||[]).length > +(/function/.test(f))\\nTest.assertNotEquals(isRecursive(halveCount), false, \\\"Recursion is required!\\\")\\n\\nlet [actualParam, expectedParam] = [\\n  [\\n    [4666, 544], [466, 54], [8, 2], [1891, 4], [1756, 14], [7764, 2], [1118, 47], [161, 79], [8573, 35], [4123, 1],\\n    [1348, 60], [7549, 31], [4469, 5], [1123, 98], [8197, 85], [1199, 56], [8845, 4], [606, 67], [3375, 6], [7085, 10],\\n    [299, 5], [1208, 82], [3635, 73], [2382, 3], [320, 80]\\n  ],\\n  [3, 3, 1, 8, 6, 11, 4, 1, 7, 12, 4, 7, 9, 3, 6, 4, 11, 3, 9, 9, 5, 3, 5, 9, 1]\\n]\\nfor (let i in actualParam) Test.assertEquals(halveCount(...actualParam[i]), expectedParam[i])\",\"language\":\"javascript\",\"quality\":5,\"summary\":\"Given two integers a and b, return how many times a can be halved while still being greater than b.\\n\\nExamples\\nhalveCount(4666, 544) ➞ 3\\n// (4666 -> 2333 -> 1166.5 -> 583.25)\\n\\nhalveCount(466, 54) ➞ 3\\n// (466 -> 233 -> 116.5 -> 58.25)\\n\\nhalveCount(1324, 98) ➞ 3\\n// (1324 -> 662 -> 331 -> 165.5)\\n\\nhalveCount(624, 8) ➞ 6\\n// (624 -> 312 -> 156 -> 78 -> 39 -> 19.5 -> 9\",\"tags\":[\"recursion\",\"numbers\"],\"timestamp\":{\"$date\":1604588931962},\"title\":\"Recursion: Halve and Halve Again\",\"stats\":{\"completed\":{\"total\":56,\"ratings\":[3,3,3,3,3,3,1,0,3,4,1,2,2,2,2,1,2,3,3,2,5,4,1,2,1,2,2,2,2,3,1,2,1,3,3,0,3,2,3,1,3,3,2,2,2,1,2,3,2,0,0,2,0,2,5],\"quality\":[5,5,5,5],\"rators\":[\"a777e8chPvJkY3tKa\",\"fECdwynR7aZZTmDno\",\"yjtdwc2AC4jA2RWtn\",\"buX4mCQhtXCfBjeno\",\"s727ceBTdQzeNvxRk\",\"oBCStgAyNK7z8C4WA\",\"4XxJxQkB5mNTLY2qk\",\"2cbTKYSPwFJBoEtay\",\"YPNbhQxe8jHobXqB4\",\"mHT2bJb5SByfJ8yKS\",\"CNc6rmwhbxkxEhHAp\",\"Yp7uvStL97cC9fKkY\",\"u9cRf5kvtpRB5ffB3\",\"azAzSkvJd7eyXY9x9\",\"cyHWbRK7EZGXQHGjS\",\"8BJyXvRWcrvN3nttS\",\"5arrLL58Gqa3idWdz\",\"dekmZDGwFdyhCe2a3\",\"j78JN6FhMmgBKQ5Me\",\"BTdKRxKHXHDDD4934\",\"bX6tpTCjwoi6XMMbK\",\"5NGxHLcQ8Af2RJ4TN\",\"ZTTJprKDvFqKGew7c\",\"DPi9QGLctq2y76KuE\",\"krZ6nT623MZFty7tB\",\"RDesnxbcnyHKT6AW8\",\"QRv96jmNaYsWkxQEG\",\"mDWNyaaQ9hvPCRzSd\",\"n7Gv4B8mZBjykB2gA\",\"2Qk2mFu9HBFzrB24i\",\"M4vq8ATaS9Jg5X7iP\",\"FiK2ruyH8KeHLAgoA\",\"s678Wirfor5uYL5T6\",\"NGvCPuMiAP3xrRLfB\",\"PH32cNxBjrK4a28sn\",\"TtrXnGzi9MyhLvWiz\",\"RE4Mm9T6Q9uygAxGS\",\"E3fkFzNeAGctuvqA2\",\"pi76g3eRpnKrhee2a\",\"zACQzkEpgkohp7Psw\",\"AFfw7cGg83uYk2Miy\",\"qJTbsuToGEtaYnGxn\",\"oS8RbMKnP2RQyKh2A\",\"gSrqu8MsZMFSxxWAZ\",\"i8rND7EkbgsSwaLRh\",\"oDtGiNqDMHmhHE3J8\",\"Ya3eHgs8x3unZRLpb\",\"46SBqYjYrHQhMzp2Y\",\"8FDr3RAEEoBM65b2W\",\"CHvzhtXnv8HTbPQ56\",\"j2Kz8Yxd3d3ZTxHfj\",\"aPsG2ycnSqR2jKdrJ\",\"z5ebtimXwFFJdYxoa\",\"jyoLggHk8xQKZuoQC\"]},\"flags\":0},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"aL3SuicAGjAwgqY2d\",\"language\":\"java\"},{\"_id\":\"nbLgTS3tCHTJcQfA5\",\"language\":\"javascript\"},{\"_id\":\"htpi99zeTsvjWNujz\",\"language\":\"python3\"}]}}"]