a["{\"msg\":\"result\",\"id\":\"1375\",\"result\":{\"_id\":\"iaySFYs3oTQDboeqd\",\"author\":\"Raka Raka\",\"authorId\":\"AXcnPX68zdMiLNSmu\",\"code\":\"function sumOfSlices(arr) {\\n\\t\\n}\",\"difficulty\":2.1323529411764706,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"qNybxkKPYSvgyeduB\",\"instructions\":\"Create a function that takes an array as an argument and return an array of the sum of each of its slices. An array's slices are groups of consecutive values that add up to a maximum of 100. No slice's total sum should exceed 100. However, if a single integer equals or exceeds 100, return the integer as well.\\n\\n### Examples\\n```\\nsumOfSlices([10, 29, 13, 14, 15, 16, 17, 31, 20, 10, 29, 13, 14, 15, 16, 17, 31, 20, 100])\\n➞ [97, 78, 87, 68, 100]\\n\\n// First slice: [10, 29, 13, 14, 15, 16]\\n// 10 + 29 + 13 + 14 + 15 + 16 = 97\\n// The next value could not be included in this slice because\\n// the total would exceed 100.\\n\\n// Second slice: [17, 31, 20, 10]\\n// 17 + 31 + 20 + 10 = 78\\n// The next value could not be included in this slice because\\n// the total would exceed 100.\\n\\n// And so on ...\\n```\\n\\n```\\nsumOfSlices([58, 3, 38, 99, 10]) ➞ [99, 99, 10]\\n\\nsumOfSlices([13]) ➞ [13]\\n```\\n\\n### Notes\\nDo not sort the array.\",\"isHidden\":false,\"lab\":\"Test.assertSimilar(sumOfSlices([10, 29, 13, 14, 15, 16, 17, 31, 20, 10, 29, 13, 14, 15, 16, 17, 31, 20, 100]), [97, 78, 87, 68, 100])\\nTest.assertSimilar(sumOfSlices([58,3,\\t38,\\t99,\\t10]), [99, 99, 10])\\nTest.assertSimilar(sumOfSlices([13]), [13])\\nTest.assertSimilar(sumOfSlices([62, 40, 33, 23, 44, 20, 30, 46, 12, 48, 16, 71, 80, 51, 37, 42, 68, 35, 19, 41, 100, 3, 33, 37, 26, 65, 17, 44, 14, 35]), [62, 96, 94, 58, 64, 71, 80, 88, 42, 68, 95, 100, 99, 82, 93])\\nTest.assertSimilar(sumOfSlices([30, 15, 75,\\t47]), [45, 75, 47])\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,0,0,0,1,1,3,3,1,2,1,3,0,2,2,2,0,2,2,2,1,1,4,2,3,2,3,2,2,2,2,3,1,3,2,2,2,2,1,2,1,2,0,2,2,2,3,2,2,0,1,2,3,2,2,3,3,2,2,3,2,2,1,2,2,2,4,2,4,2,3,0,3,3,1,2,1,3,3,3,3,2,3,3,2,5,2,2,3,2,2,3,3,3,4,1,2,2,2,2,1,0,3,2,5,3,3,1,4,2,3,4,3,2,3,3,2,2,2,2,2,4,2,0,2,2,5,3,3,3,2,3],\"rators\":[\"Df7GtT2JwMxJGASvW\",\"yjtdwc2AC4jA2RWtn\",\"n5wubRfh6zh8QRymN\",\"AasGs8AeX9Lcb9xJn\",\"gb26JhevBvo8ry77T\",\"BdvdJYwHZr7JpkHsn\",\"zgoq9MhrL2h75DAMA\",\"TR5dtGvYhgSJCCppD\",\"Q9KQomTTPBsrkAL6c\",\"6BpBQnSGhzgvhXrEy\",\"SDtZFL5NzAoCPofXk\",\"WdxWWwuM5PcZbTgxY\",\"bzm5WayBjwad5jhdR\",\"65dbBZynphj53nXqA\",\"RE4Mm9T6Q9uygAxGS\",\"628AnsXabnYcT9gwx\",\"bKPvJHLQ3ovQLt9MJ\",\"FJsvM5yqKuK9yMk9P\",\"2innwjWqxJHo4eRGh\",\"f9gsQxwrJGBhyF5FF\",\"CJnuSjyCBMTbTiibD\",\"6gPHMpkEP8JuHxzpd\",\"pd8dm7sWLW9cY6dYW\",\"zTZtM9jRsu8eXie6s\",\"AXcnPX68zdMiLNSmu\",\"pi76g3eRpnKrhee2a\",\"EWn8w8P3nNh7knatY\",\"YER6iBcpJCuhgrYDN\",\"EjPLq3QSJdGQFJdgW\",\"bX6tpTCjwoi6XMMbK\",\"Z9MJFFkQRXWwJJafu\",\"cp3X8hk8yNME7qoD9\",\"QMq9dcvgpyNK6RAze\",\"vtHbevf2tHqe6mRxX\",\"2ZFoLTxcCARhwc8xX\",\"eQXwk5zGckM8tCWYH\",\"Es4eX2stRpyoXeC7f\",\"mHT2bJb5SByfJ8yKS\",\"sW78rbapvsS3AnuJe\",\"X67qAYJvDuBh3xzEf\",\"Nua6T3dBurBy3Qfg9\",\"ZcqshY58sGEEvgeaq\",\"Nb6LYPoQP6KJZt8mz\",\"nAmJEX7BkHLd9LsG2\",\"E2hpke7mHxAWsw5t9\",\"7gZKfvwaeqsGKXMEN\",\"z5ebtimXwFFJdYxoa\",\"pLpcDC3EYx2DDQSdt\",\"3oinK6sSmonEMGZrn\",\"jAZ7sn4xWiakZwod3\",\"nWyjCYB2gjWYLsm39\",\"fMqXimJLsPiuhT8A8\",\"bhgqAtzmz4zqwPJrR\",\"yuLxi2qBJvMnwgdgJ\",\"5nHtgdY8F2FbAMawq\",\"Byvac9x4By28v9zca\",\"9odLqf9SrW5nx78GL\",\"vC4EgNj2acMMT4JpX\",\"aEm3Wvj2rFYRL8Lrb\",\"xMxdp5oCxmeuYxhpa\",\"7bitgnAbP96MfyqjD\",\"Cq4jiaTiWkDTDhLey\",\"snKerK6Kiak48vy3w\",\"fsu2mN9mhSP75mpj5\",\"4Xv87xmdSnpYhi8hz\",\"Xk2g4CNFAnYcvxiSr\",\"rC7kdm3SsSX9udEQk\",\"PGCDJpQMN8Sjn9Gm6\",\"iBRujTrbgAAaCPSkg\",\"2GqHbu7h7ajqtqkXv\",\"BjJhatTBaTWm3ZhCt\",\"p6qLK4qS2dnFzDA7k\",\"HDbAqFKwbcLD2y5NY\",\"sNcDN3s3rH9wcNg5n\",\"xqpSZP6E9PzXAAoLQ\",\"nXToJ5kpsRfi4nyw2\",\"jkumHyXfMkhGcPgqC\",\"vic9SZ9qqj9WhRkbd\",\"8s5Bdrn7RTga7DL6x\",\"ttuGK7od8simjgmCJ\",\"tAF9Gf6PiGogbZuWs\",\"ZTTJprKDvFqKGew7c\",\"6FkDN5CoKe4Qbg9jt\",\"PH32cNxBjrK4a28sn\",\"kp2ZbCewZJAbfd7xv\",\"eGmzRsSATFsE2wjJa\",\"4RsakkyRXyYGwFxEa\",\"vaeo6jm6pfLBZt3mL\",\"MT26yxj3YX95DsyLj\",\"iDtDLdEPj4wEjhTij\",\"jrcbewyoTtSbEraFS\",\"9ktuueBqfKEfoz3CP\",\"dGugwhA6uwwjPGAa5\",\"H46gRHmkdz2CRrGH9\",\"QRv96jmNaYsWkxQEG\",\"acHSYL6uQAgpgFMjp\",\"y6CXH4vDBokGZCbMc\",\"r7mZLgpQWzRiGddL5\",\"CNc6rmwhbxkxEhHAp\",\"LtTpCzF8kt6Rdth4X\",\"KcpfY4XZ7fNamyLd3\",\"Zpm7hHyfu8jo2mxcu\",\"4jM32RhDGbWLeEBMW\",\"zw7g7T8wE5R5CBhXr\",\"g4NCSxxHqHCGMpWwT\",\"qWR7eXxBiNee22A5u\",\"9dAB9yF2rukm22EnA\",\"u9cRf5kvtpRB5ffB3\",\"zza5WjC8QrHcoDZBF\",\"DPi9QGLctq2y76KuE\",\"6vfjruFp8ZpRSi3AT\",\"ftXLsTaA7yHmhuEsY\",\"xn7uGNKeAwPEkP9oA\",\"Ydxyh6tL8TKS89feD\",\"nWND4LmgZTftyB8sN\",\"M4vq8ATaS9Jg5X7iP\",\"ZcJm2kuqJnN3CXFaR\",\"wJTDDTE3TrmSXKP4d\",\"Jf2CJyrjenaqixHcB\",\"NGvCPuMiAP3xrRLfB\",\"Ya3eHgs8x3unZRLpb\",\"oDtGiNqDMHmhHE3J8\",\"mdv6r687hYHFziB89\",\"QvEXmSEo3ANp3yPyH\",\"Yp7uvStL97cC9fKkY\",\"nkH3HfJXLMNcBMM79\",\"jyoLggHk8xQKZuoQC\",\"xMLCsZbeTFRpnXeZe\",\"TtrXnGzi9MyhLvWiz\",\"ERKhKvZtbX7cXNRBP\",\"zoSGvhHbsBykZTuDc\",\"P7ZPWo8E4yN3bWozD\"],\"total\":158,\"quality\":[5,5,3,5,4,4,5,4,5,5,5,5,5,5,5,5,5,5]},\"flags\":0},\"summary\":\"Create a function that takes an array as an argument and return an array of the sum of each of its slices. An array's slices are groups of consecutive values that add up to a maximum of 100. No slice's total sum should exceed 100. However, if a single integer equals or exceeds 100, return the integer as well.\\n\\nExamples\\nsumOfSlices([10, 29, 13, 14, 15, 16, 17,\",\"tags\":[\"algorithms\",\"arrays\",\"loops\"],\"timestamp\":{\"$date\":1576655203639},\"title\":\"Sum of Slices of an Array (Part 1)\",\"quality\":4.722222222222222,\"family\":[{\"_id\":\"AGdr7pieRAZvtNCa6\",\"language\":\"cpp\"},{\"_id\":\"iaySFYs3oTQDboeqd\",\"language\":\"javascript\"},{\"_id\":\"qKBfL9pQBaqXvKTfW\",\"language\":\"python3\"},{\"_id\":\"QgXdTyPR5bvzBMQsc\",\"language\":\"ruby\"}]}}"]