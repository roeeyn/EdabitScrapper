a["{\"msg\":\"result\",\"id\":\"1835\",\"result\":{\"_id\":\"8wqJTmobdGWuQKFmy\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"function isPalindromePossible(str) {\\n\\t\\n}\",\"difficulty\":2.6455696202531644,\"familyId\":\"9Q6DJZcMjh65rtEih\",\"instructions\":\"Given a word, create a function which returns whether or not it's possible to **create a palindrome** by *rearranging the letters in the word*.\\n\\n### Examples\\n```\\nisPalindromePossible(\\\"rearcac\\\") ➞ true\\n// You can make \\\"racecar\\\"\\n\\nisPalindromePossible(\\\"suhbeusheff\\\") ➞ true\\n// You can make \\\"sfuehbheufs\\\" (not a real word but still a palindrome)\\n\\nisPalindromePossible(\\\"palindrome\\\") ➞ false\\n// It's impossible\\n```\\n\\n### Notes\\n- Trivially, words which are already palindromes return `true`.\\n- Words are given in all *lowercase*.\",\"isHidden\":false,\"lab\":\"Test.assertEquals(isPalindromePossible(\\\"rearcac\\\"), true)\\nTest.assertEquals(isPalindromePossible(\\\"suhbeusheff\\\"), true)\\nTest.assertEquals(isPalindromePossible(\\\"palindrome\\\"), false)\\nTest.assertEquals(isPalindromePossible(\\\"yagnx\\\"), false)\\nTest.assertEquals(isPalindromePossible(\\\"zgzqxljjp\\\"), false)\\nTest.assertEquals(isPalindromePossible(\\\"tgmqkpdhnhatoco\\\"), false)\\nTest.assertEquals(isPalindromePossible(\\\"akyka\\\"), true)\\nTest.assertEquals(isPalindromePossible(\\\"kjyyrftnbsbq\\\"), false)\\nTest.assertEquals(isPalindromePossible(\\\"jynmynqhcy\\\"), false)\\nTest.assertEquals(isPalindromePossible(\\\"hfe\\\"), false)\\nTest.assertEquals(isPalindromePossible(\\\"noon\\\"), true)\\nTest.assertEquals(isPalindromePossible(\\\"azmkallbanpu\\\"), false)\\nTest.assertEquals(isPalindromePossible(\\\"drrede\\\"), true)\\nTest.assertEquals(isPalindromePossible(\\\"xmhwcocldjdnqvv\\\"), false)\\nTest.assertEquals(isPalindromePossible(\\\"reparpe\\\"), true)\\nTest.assertEquals(isPalindromePossible(\\\"jnavz\\\"), false)\\nTest.assertEquals(isPalindromePossible(\\\"orort\\\"), true)\\nTest.assertEquals(isPalindromePossible(\\\"mel\\\"), false)\\nTest.assertEquals(isPalindromePossible(\\\"jdxknf\\\"), false)\\nTest.assertEquals(isPalindromePossible(\\\"qo\\\"), false)\\nTest.assertEquals(isPalindromePossible(\\\"neett\\\"), true)\\nTest.assertEquals(isPalindromePossible(\\\"wow\\\"), true)\\nTest.assertEquals(isPalindromePossible(\\\"avkkiaapiusuapspiip\\\"), true)\\nTest.assertEquals(isPalindromePossible(\\\"aann\\\"), true)\\nTest.assertEquals(isPalindromePossible(\\\"iivcc\\\"), true)\\nTest.assertEquals(isPalindromePossible(\\\"akyka\\\"), true)\\nTest.assertEquals(isPalindromePossible(\\\"eelvl\\\"), true)\\nTest.assertEquals(isPalindromePossible(\\\"damam\\\"), true)\\nTest.assertEquals(isPalindromePossible(\\\"mmo\\\"), true)\\nTest.assertEquals(isPalindromePossible(\\\"ge\\\"), false)\\nTest.assertEquals(isPalindromePossible(\\\"arrad\\\"), true)\\nTest.assertEquals(isPalindromePossible(\\\"bq\\\"), false)\\nTest.assertEquals(isPalindromePossible(\\\"djufyllynldw\\\"), false)\\nTest.assertEquals(isPalindromePossible(\\\"reparpe\\\"), true)\\nTest.assertEquals(isPalindromePossible(\\\"ttraoor\\\"), true)\\nTest.assertEquals(isPalindromePossible(\\\"orort\\\"), true)\\nTest.assertEquals(isPalindromePossible(\\\"asgas\\\"), true)\\nTest.assertEquals(isPalindromePossible(\\\"t\\\"), true)\\nTest.assertEquals(isPalindromePossible(\\\"tstsa\\\"), true)\\nTest.assertEquals(isPalindromePossible(\\\"neett\\\"), true)\\nTest.assertEquals(isPalindromePossible(\\\"wndnwrkpkihup\\\"), false)\",\"language\":\"javascript\",\"summary\":\"Given a word, create a function which returns whether or not it's possible to create a palindrome by rearranging the letters in the word.\\n\\nExamples\\nisPalindromePossible(\\\"rearcac\\\") ➞ true\\n// You can make \\\"racecar\\\"\\n\\nisPalindromePossible(\\\"suhbeusheff\\\") ➞ true\\n// You can make \\\"sfuehbheufs\\\" (not a real word but still a palindrome)\\n\\nisPalindromePossible(\\\"palindrome\\\"\",\"tags\":[\"algorithms\",\"strings\",\"validation\"],\"timestamp\":{\"$date\":1580689137639},\"title\":\"Palindromic Anagrams\",\"stats\":{\"completed\":{\"total\":97,\"ratings\":[3,3,3,3,3,2,2,1,1,2,3,3,2,3,2,1,3,2,3,3,3,2,3,3,0,2,3,3,3,4,1,4,2,4,4,3,2,5,4,3,4,0,3,4,3,2,4,3,1,3,0,3,3,4,3,2,2,3,3,4,3,2,3,2,3,2,3,0,4,2,3,2,2,4,3,2,2,3,4],\"rators\":[\"5Zq3aGdvh4LHBvnJL\",\"cRpaCxYRmGcN3Nsoj\",\"yjtdwc2AC4jA2RWtn\",\"5NGxHLcQ8Af2RJ4TN\",\"n5wubRfh6zh8QRymN\",\"p2woPCQKXuWJCwffJ\",\"6BpBQnSGhzgvhXrEy\",\"SxqAEMaYcE9Ps9eh6\",\"Y9Nz9yafaibz54W4o\",\"pi76g3eRpnKrhee2a\",\"bd6heHDAYjjhs4hzc\",\"dBb6aHEGddvYffa35\",\"FGEeCTorXbX3WvjFW\",\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"dJEYJN9Aw2GHtXtqM\",\"dXXrCKPcCmFFYZp44\",\"YDpy4qzereZArAuKx\",\"oyB4Wr4EeZnoDaa8B\",\"AnahAy6RmvegPhmbh\",\"AasGs8AeX9Lcb9xJn\",\"E3qTTy7ZJqFyok6a3\",\"8raviPK67KKxzQWcF\",\"FJsvM5yqKuK9yMk9P\",\"JGBCMpnbbi5ztuFoX\",\"ZAv2odePquDi3pn9g\",\"TXRGTNLZAWDhHjP9P\",\"N82kEBvpFE5FjbHrk\",\"8BJyXvRWcrvN3nttS\",\"YtGYxpMxbrHLFK8nq\",\"mHT2bJb5SByfJ8yKS\",\"aEm3Wvj2rFYRL8Lrb\",\"9Q7xsgcNqhhjs4TR8\",\"Xk2g4CNFAnYcvxiSr\",\"3AZvaNxeQaYaxbDPm\",\"ZcqshY58sGEEvgeaq\",\"h4jFmtbFn92eA4649\",\"fMqXimJLsPiuhT8A8\",\"CJBPyyfyaEeEo63sb\",\"rC7kdm3SsSX9udEQk\",\"vt88eKvFz6ES8sbrD\",\"Nb6LYPoQP6KJZt8mz\",\"Ac6u9uxPiFD5D8tfr\",\"QMq9dcvgpyNK6RAze\",\"4Xv87xmdSnpYhi8hz\",\"QRv96jmNaYsWkxQEG\",\"HJDj7Kh7T62kKHrN4\",\"2GqHbu7h7ajqtqkXv\",\"kp2ZbCewZJAbfd7xv\",\"q9vSxiaByRaNeYxJh\",\"65dbBZynphj53nXqA\",\"LtTpCzF8kt6Rdth4X\",\"ZcJm2kuqJnN3CXFaR\",\"hf4j58METWajduNSE\",\"RFqRp2Bou8KXupQkt\",\"bX6tpTCjwoi6XMMbK\",\"8HZPcvfYetgFDkkig\",\"pGh7WykiPe26fHJYv\",\"Po3v3dHCk6wYGKMwi\",\"4XxJxQkB5mNTLY2qk\",\"aHZm9tzs76uH4sHSc\",\"M4vq8ATaS9Jg5X7iP\",\"RKKuw76K7sRBMouKq\",\"acHSYL6uQAgpgFMjp\",\"dz4stAGxFGawPRfob\",\"CNc6rmwhbxkxEhHAp\",\"ZTTJprKDvFqKGew7c\",\"zza5WjC8QrHcoDZBF\",\"zMCXYFZSsviDCvjnY\",\"DPi9QGLctq2y76KuE\",\"hcm8sL8mNJTSfTdgE\",\"NGvCPuMiAP3xrRLfB\",\"aAFajcygMskKDBPsH\",\"nWND4LmgZTftyB8sN\",\"hvTAyFPy4pJHdrYJX\",\"s678Wirfor5uYL5T6\",\"PH32cNxBjrK4a28sn\",\"tAF9Gf6PiGogbZuWs\",\"RMpwqdCRrdBiGQhPT\",\"ShrXg4RHgnyFjzJ8w\",\"xsDyJstYoBZRS8pJH\",\"cTP9Ne3BiKSGTKowG\",\"Hcyqetei9TKHGbLG9\",\"oDtGiNqDMHmhHE3J8\",\"gSrqu8MsZMFSxxWAZ\",\"RE4Mm9T6Q9uygAxGS\",\"P8bXFR4cHwFia9rNM\",\"pMxDFFGrSfHCQAW2k\"],\"quality\":[5,4,5,4,5,5,5,5,5,4,5,5,3,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"quality\":4.642857142857143,\"family\":[{\"_id\":\"iJpPHkrQ5FxeXZyNN\",\"language\":\"cpp\"},{\"_id\":\"a242aPZGmmx8xhiuy\",\"language\":\"java\"},{\"_id\":\"8wqJTmobdGWuQKFmy\",\"language\":\"javascript\"},{\"_id\":\"eyJ4mN6RpyiRTvSob\",\"language\":\"python3\"},{\"_id\":\"yDzdgoqQJyDzHBDBd\",\"language\":\"ruby\"}]}}"]