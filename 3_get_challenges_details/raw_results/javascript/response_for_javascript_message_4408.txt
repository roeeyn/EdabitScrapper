a["{\"msg\":\"result\",\"id\":\"958\",\"result\":{\"_id\":\"yjJbyjGkXxTrhe9as\",\"author\":\"BijogFc24\",\"authorId\":\"Nb6LYPoQP6KJZt8mz\",\"code\":\"function isFloatingCharacter(num){\\n\\t\\n}\",\"difficulty\":1.6470588235294117,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"zr2mGtivgtiZXjoFZ\",\"instructions\":\"Create a regular expression  to check whether the given string is a valid floating numeric character or not.\\n\\n### Examples\\n```\\nisFloatingCharacter(\\\"12.12\\\") ➞ true\\n\\nisFloatingCharacter(\\\"12.\\\") ➞ false\\n\\nisFloatingCharacter(\\\".1\\\") ➞ true\\n\\nisFloatingCharacter(\\\"-.1\\\") ➞ true\\n\\nisFloatingCharacter(\\\"abc\\\") ➞ false\\n```\\n\\n### Notes\\n- All inputs are strings.\\n- Think about `RegExp.prototype.test()`.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertEquals(isFloatingCharacter(\\\"-12.12\\\"), true)\\nTest.assertEquals(isFloatingCharacter(\\\"-.12\\\"), true)\\nTest.assertEquals(isFloatingCharacter(\\\"0.12\\\"), true)\\nTest.assertEquals(isFloatingCharacter(\\\".122332\\\"), true)\\nTest.assertEquals(isFloatingCharacter(\\\"av0.12\\\"), false)\\nTest.assertEquals(isFloatingCharacter(\\\"-.\\\"), false)\\nTest.assertEquals(isFloatingCharacter(\\\"+\\\"), false)\\nTest.assertEquals(isFloatingCharacter(\\\"12\\\"), false)\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,1,1,1,2,1,1,1,2,1,1,3,1,2,2,2,2,2,2,2,3,2,1,0,2,0,2,2,1,1,2,2,2,2,2,2,1,2,2,2,3,2,2,2,2,2,2,2,2,0,2,2,2,1,2,2,0,3,2,2,2,1,0,2,0,0,2,2,2,2,0,2,0,2,2,2,1,2,1,3,1,2,2,3,2,3,5,2,0,1,2,3,1,2,0,2,2,2],\"rators\":[\"jnyub52Fi79drGvow\",\"tAF9Gf6PiGogbZuWs\",\"AasGs8AeX9Lcb9xJn\",\"edaKYaap6ugMKpRT8\",\"a777e8chPvJkY3tKa\",\"cp3X8hk8yNME7qoD9\",\"S6n5P7pGiEu2mQuFD\",\"76tdRmvLbHsyLa48z\",\"noZDgMMXkcPCLN8Ye\",\"BSkoT6o2GweZkqXbc\",\"9qoWqLcHGiDX429rE\",\"oyB4Wr4EeZnoDaa8B\",\"XfirkadGrKABrZSBw\",\"uDL732cxhJPfvnyn5\",\"p5ZshR8zhTqmdhKDc\",\"SNiJRRosrmSWssLj4\",\"RE4Mm9T6Q9uygAxGS\",\"ij9YRJvZz6WbqcGXS\",\"7wtuhPesfhcYsfZaZ\",\"ZY6Jn6noDuGa2hnE4\",\"vtHbevf2tHqe6mRxX\",\"jcPZ5ySXseCB7Ec3x\",\"PAzNgJF54C2mYPkR9\",\"svpXWhsSLLzYR8Rz4\",\"yjtdwc2AC4jA2RWtn\",\"733qgZ7ZSSSrzbXGw\",\"mHT2bJb5SByfJ8yKS\",\"FJsvM5yqKuK9yMk9P\",\"n5wubRfh6zh8QRymN\",\"buX4mCQhtXCfBjeno\",\"sAhNjH3HZ9tSSSKTX\",\"eFjGhq7C7bBKXjT6X\",\"eQXwk5zGckM8tCWYH\",\"65dbBZynphj53nXqA\",\"NA4sbhSihgWJCQ5in\",\"QRv96jmNaYsWkxQEG\",\"C9LKGu2g5hSijvDzA\",\"8raviPK67KKxzQWcF\",\"ZcqshY58sGEEvgeaq\",\"RmunzvFFe4SpktG85\",\"FGEeCTorXbX3WvjFW\",\"r7mZLgpQWzRiGddL5\",\"2zKQWLmEBw8FBs4ZL\",\"vRsovmMfvfvnR5miw\",\"Ya3eHgs8x3unZRLpb\",\"SWbaoFPBAeu6g376j\",\"Sfb5RNdmiKSDyqyp4\",\"PGCDJpQMN8Sjn9Gm6\",\"ixabGTE2JSw9QLbJS\",\"4gb4tvaSCs9u2z3ZA\",\"pLpcDC3EYx2DDQSdt\",\"7gZKfvwaeqsGKXMEN\",\"ttuGK7od8simjgmCJ\",\"4ntYzGHHBgqf58udP\",\"2tCCFm5iefjrRSaxv\",\"Po3v3dHCk6wYGKMwi\",\"kp2ZbCewZJAbfd7xv\",\"evTTY9hwrtogaNxXn\",\"s7Qqx4Jnuq85iB7Lw\",\"XAGJuJRsgxZNiAN9C\",\"aEm3Wvj2rFYRL8Lrb\",\"AFfw7cGg83uYk2Miy\",\"ZTTJprKDvFqKGew7c\",\"g4NCSxxHqHCGMpWwT\",\"CH53jGETBeJTummf3\",\"CNc6rmwhbxkxEhHAp\",\"N3CNtWZz4ovJfH9Aw\",\"BdvdJYwHZr7JpkHsn\",\"zw7g7T8wE5R5CBhXr\",\"SY9Euc4kQfRgetXTd\",\"Akq3fQcPRgPrWfsye\",\"vewKwcMeGuk3p3MsN\",\"jLSZdBseR2kfjt8dL\",\"pdGuqmMyeN4wZaWwv\",\"NchnDcEmsLTeFZ4FH\",\"Yp7uvStL97cC9fKkY\",\"WSLPmXqJzRjtYkuwf\",\"Es4eX2stRpyoXeC7f\",\"R9uaMzX2Y4ND8Cosm\",\"nxrLyr5bLoia9FMZS\",\"3Gf7ikLijfoxabiPY\",\"c3ixxp9yXLsvFuJdj\",\"m6qKkBY4aPWziyJTj\",\"2Ni3PzJAc5fAhqBkb\",\"mDWNyaaQ9hvPCRzSd\",\"u9cRf5kvtpRB5ffB3\",\"srJ34BaybkQh3qRkM\",\"J7d397iB5GuWRAMfg\",\"YSmLyP3eRhcFjJPzg\",\"M4vq8ATaS9Jg5X7iP\",\"2Qk2mFu9HBFzrB24i\",\"npp5hesJrst6ghKSM\",\"PLAW6hHCDwfFyi5yx\",\"wJTDDTE3TrmSXKP4d\",\"QAZ5DGaWWYhku4BNz\",\"oDtGiNqDMHmhHE3J8\",\"LwD3CyYSiBfg3mA4r\",\"7gqNBXuWuyQMghKcn\",\"NGvCPuMiAP3xrRLfB\",\"9HZbxzkzgz4CvePtv\",\"pi76g3eRpnKrhee2a\",\"8BJyXvRWcrvN3nttS\",\"nBJve5CzG6WAw7WFQ\",\"Fk47SQxbHEJRw4u76\",\"jyoLggHk8xQKZuoQC\",\"NJCmkbH5e7qbtZYhd\",\"u36krMJQA9trq8tGQ\",\"jicWFrNKadYuLhqxh\",\"z47JaNrQMgvuPx5HE\",\"eomLS3wh6tQPN8jtH\",\"bfYmA3LMvhSrK59cn\",\"mpLFbFKjY6u3nsDMv\",\"CHvzhtXnv8HTbPQ56\",\"DfdkfQh8ctd2BaaRY\",\"PTo9qt93YqGvL8fCa\",\"LPZ2QKCoB8q6rG25c\"],\"total\":124,\"quality\":[5,3,3,5,5,5,5,5,5,5,5,5,5,5,1,4,5,4,4]},\"flags\":0},\"summary\":\"Create a regular expression  to check whether the given string is a valid floating numeric character or not.\\n\\nExamples\\nisFloatingCharacter(\\\"12.12\\\") ➞ true\\n\\nisFloatingCharacter(\\\"12.\\\") ➞ false\\n\\nisFloatingCharacter(\\\".1\\\") ➞ true\\n\\nisFloatingCharacter(\\\"-.1\\\") ➞ true\\n\\nisFloatingCharacter(\\\"abc\\\") ➞ false\\n\\nNotes\\nAll inputs are strings.\\nThink about RegExp.prototype.test()\",\"tags\":[\"regex\",\"strings\",\"logic\",\"validation\"],\"timestamp\":{\"$date\":1590922225259},\"title\":\"Is it a Valid Floating Numeric Character?\",\"quality\":4.421052631578948,\"family\":[{\"_id\":\"yjJbyjGkXxTrhe9as\",\"language\":\"javascript\"},{\"_id\":\"p8tqXx7eiRk78g8zS\",\"language\":\"python3\"}]}}"]