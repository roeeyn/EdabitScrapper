a["{\"msg\":\"result\",\"id\":\"240\",\"result\":{\"_id\":\"8uJeSJ4fkmFJzs4eS\",\"author\":\"werdna\",\"authorId\":\"buX4mCQhtXCfBjeno\",\"code\":\"function notShare(arr1, arr2) {\\n  for (let i of arr1) {\\n    for (let j of arr2) {\\n      ifi (=== j) return false;\\n    }\\n  }\\n  return true;\\n}\",\"difficulty\":0.7658536585365854,\"familyId\":\"D4h5T3Rs65N7oenev\",\"instructions\":\"Check the principles of minimalist code in the [intro to the first challenge] (https://edabit.com/challenge/2XLjgZhmACph76Pkr).\\n\\nIn the **Code** tab you will find a code that has a missplaced character in order to pass the tests. However, your goal is to submit a function as **minimalist** as possible. \\n\\nWrite a function that returns the boolean `true` if the given arrays **do not share** any numbers, and `false` otherwise.\\n\\n\\n### Notes\\nThis challenge is translated from Alessandro Manicone's Python's  \\\"Minimal Series\\\".  The following are his comments and link to the series:\\n\\n- This is an open series: there isn't a definite list of features for the challenges. Please, do not hesitate to leave your **suggestions** in the **Comments**.\\n- _**Readability**_ is indeed a subjective concept. **Let's discuss it!** Feel free to leave your opinion in the **Comments**.\\n- You can find all the exercises in this series [over here].\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertEquals(notShare([1, 2, 3], [4, 5, 6]), true)\\nTest.assertEquals(notShare([1, 2, 3], [3, 4, 5]), false)\\nTest.assertEquals(notShare([3, 3, 3], [4, 5, 6]), true)\\nTest.assertEquals(notShare([3, 3, 3], [1, 2, 3]), false)\\nTest.assertEquals(notShare([1, 2, 3, 4, 5, 6], [7]), true)\\nTest.assertEquals(notShare([1, 2, 3, 4, 5, 6], [6]), false)\\nTest.assertEquals(notShare([1], [2, 3, 4, 5, 6, 7]), true)\\nTest.assertEquals(notShare([1], [1, 2, 3, 4, 5, 6]), false)\\n\\n// Author: Alessandro Manicone\",\"language\":\"javascript\",\"quality\":4.688679245283019,\"summary\":\"Check the principles of minimalist code in the [intro to the first challenge] (https://edabit.com/challenge/2XLjgZhmACph76Pkr).\\n\\nIn the Code tab you will find a code that has a missplaced character in order to pass the tests. However, your goal is to submit a function as minimalist as possible.\\n\\nWrite a function that returns the boolean true if the given array\",\"tags\":[\"logic\",\"language_fundamentals\",\"conditions\",\"validation\"],\"timestamp\":{\"$date\":1606761056533},\"title\":\"Minimal V:\",\"stats\":{\"completed\":{\"total\":325,\"ratings\":[1,1,1,1,1,0,0,2,1,1,0,0,1,0,1,0,0,2,0,0,0,0,0,1,0,0,1,2,0,0,0,1,0,1,1,2,0,1,2,1,0,0,0,1,0,1,0,0,0,2,1,0,0,2,1,0,0,0,1,0,0,4,0,5,0,0,1,0,0,0,1,2,1,0,1,1,0,0,1,1,1,0,0,1,0,1,1,1,0,1,0,1,0,0,0,2,2,1,1,0,0,0,1,1,1,2,0,2,0,0,0,0,3,0,1,3,0,1,1,1,0,2,0,2,0,0,0,0,1,0,2,1,0,1,2,0,0,0,2,3,0,1,0,3,0,1,1,1,1,0,1,2,0,1,0,3,1,1,0,2,0,5,1,0,1,0,1,0,0,1,0,0,0,0,2,1,2,0,2,0,1,0,1,4,1,0,1,1,2,0,0,0,0,0,0,0,0,1,2,1,1,1,2,2,2],\"quality\":[5,5,5,5,5,5,4,5,5,4,5,5,5,4,5,5,5,3,5,5,5,3,5,5,5,4,5,5,5,5,5,5,4,5,5,4,5,5,5,5,5,2,5,5,4,1,5,4,5,5,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,4,5,5,5,5,5,5,5,5,4,4,4,5,4,3,4,5,5,5,4,4,5,5,5,5,5,5,5,5,4,5],\"rators\":[\"buX4mCQhtXCfBjeno\",\"3Gf7ikLijfoxabiPY\",\"u9cRf5kvtpRB5ffB3\",\"mHT2bJb5SByfJ8yKS\",\"KCap4G7GTPHnb6776\",\"nyh73Tr6GhqAat78g\",\"HRpELhvG59jPywCdH\",\"CNc6rmwhbxkxEhHAp\",\"J7d397iB5GuWRAMfg\",\"erQgJKaHaETRcqs4x\",\"QRv96jmNaYsWkxQEG\",\"PAzNgJF54C2mYPkR9\",\"2EoJDDhg7WdD8iJZP\",\"g4NCSxxHqHCGMpWwT\",\"3h5dGS6W8akioYnWD\",\"fe3gsFT3MbZ4azEC9\",\"AeZfR5dt45GYsMt8L\",\"RQwuHHy4rBgaQCLte\",\"m6qKkBY4aPWziyJTj\",\"jC8XAv6SQJGXkZ8oz\",\"4p9YDAqRmfhD7K9QM\",\"AuP338j5HKG4wiv9b\",\"LaktpjwhdMigC6A7F\",\"jpSy4qhuDNwPk9mrf\",\"SiR98aWxX6hTm5msE\",\"vz9k2u33P5GRmpz3X\",\"AFfw7cGg83uYk2Miy\",\"jmKPGxuB2hRtE8egx\",\"bHX48t6EJJ2tntqjn\",\"z5ebtimXwFFJdYxoa\",\"ShtRdhZHB39PjxS6W\",\"hm6aqmxfvMqf7bBme\",\"izM9gb8ry58wPtkzr\",\"Es4eX2stRpyoXeC7f\",\"evTTY9hwrtogaNxXn\",\"Jq5dzhgoy94oHJS46\",\"Wn9o3ayeKNWw3PaBA\",\"ku7n6BTS3JnDoiMk5\",\"nzAbdaGbJwgvkkEYj\",\"4m6v52nNxmx952G9n\",\"n5wubRfh6zh8QRymN\",\"pYyeQodjN4GT8qJP7\",\"cGxRQ4ixcaysJxeDW\",\"k5TGxBtLi9BXxeChT\",\"RtPhDuwmvWNHiBxmG\",\"NMtZRhYkqMjpqbEPY\",\"PE6M74QBtNJBenymR\",\"JzzNCzWjcGrqDdAd5\",\"3seaXDFeNRAh4iRWd\",\"32WrNwgzGLDp2ZSaY\",\"djkYtYekv6sJteZq2\",\"cp3X8hk8yNME7qoD9\",\"oyB4Wr4EeZnoDaa8B\",\"DodFjYfr7RfC27DLe\",\"RE4Mm9T6Q9uygAxGS\",\"yZJhbcWnafckQgNwX\",\"odELiWKpbNjnvAr7G\",\"PGCDJpQMN8Sjn9Gm6\",\"4qdpW2kHHSM7n9PPn\",\"65dbBZynphj53nXqA\",\"e9Cknxbx6o7Nb6REs\",\"9qoWqLcHGiDX429rE\",\"yEPgHfj9zbFoMtcQY\",\"jcPZ5ySXseCB7Ec3x\",\"yjtdwc2AC4jA2RWtn\",\"Yp7uvStL97cC9fKkY\",\"x2Cz7S8rCKJqCE3Xe\",\"xrqK8P7zH83wjo3L4\",\"EFWjRqLKKD73RJ4WP\",\"TNj4uBxejkEcXTQM3\",\"iyXreJLEM7jv3kJAT\",\"F3d288xKTC7sjKNxf\",\"SNiJRRosrmSWssLj4\",\"jLSZdBseR2kfjt8dL\",\"auNHQHxNeyRqDAxMh\",\"jyCByAZwu576xDwEL\",\"umE8dRTGWzrZFp755\",\"r8RzZmvabrMutvEdC\",\"NioGGZL9KCn5Ln96t\",\"DemqSup6R5CLZGB47\",\"iwXkFggJBK79FqZrK\",\"xGYqxnbCsz3QZzAkT\",\"6avCXqJJsMJirWszG\",\"TbF469ztf66Qc6xcK\",\"EP7dJPo4ZZGRMEAwt\",\"9HZbxzkzgz4CvePtv\",\"djpMD2mX9tkhE6dke\",\"PZjYu8wqze6JcvLSs\",\"PAnur8xLTthNL3epT\",\"DJBpGN29eBt6fjEQy\",\"Pi53aqnddGXueB8NT\",\"rbGgJKx6mbjxpthok\",\"rdxS5kznGfHLTJHRM\",\"ujAw9Wt6d7BwWPX8r\",\"iedTHhE9CqZFALQ5q\",\"vpaSkRZ9nnqexJNZH\",\"G2adR82hT39DirngW\",\"GT254DgQbCB3yLTi6\",\"yegBqnWAr7wSCDKJE\",\"dRT6LAbCrT5FBDJhi\",\"Ya3eHgs8x3unZRLpb\",\"dcZQNWbMiLADbhq74\",\"ZbCe33WjBENKWLNZ7\",\"LYX3jtDNKkgEuQzDr\",\"Bq6RWMAQA7F6GenkS\",\"YcfpdJnKvvGB9tP7r\",\"2Qk2mFu9HBFzrB24i\",\"7gZKfvwaeqsGKXMEN\",\"Nb6LYPoQP6KJZt8mz\",\"7kENXQQ8ABiPGfBRD\",\"szQg8dxKNNre3v3Jk\",\"K45zPJxsABuA3WSyj\",\"cZTQyQmGkX9kFhm32\",\"8GRynZxMrEz6KQzdy\",\"FJsvM5yqKuK9yMk9P\",\"78eLnAAJGgKdb7a4L\",\"tHhLyPmKbzmebHLG2\",\"7CAxmMHXpk4df4wur\",\"YYQqYFspostj7mpFZ\",\"8EJ4j2fcfjTJ7Zrzu\",\"dfSWg8CDDMJyY8RHk\",\"qnSrE8yBxC2Mzd3K8\",\"7q8oBsCHwn48Ppnrq\",\"WttLjbHSTbbcMBdBe\",\"3WtHp4MBzciz4AE8M\",\"jyAo9ygsQJRNn9qJr\",\"75R4MdzQ8M9xAKRgD\",\"srJ34BaybkQh3qRkM\",\"ttuGK7od8simjgmCJ\",\"DPi9QGLctq2y76KuE\",\"aW8X7thZENhjsy7He\",\"XrqNzJ2FRG8HnGiR6\",\"hS87RxsJ7F3kjapbD\",\"EPYNM4FhyoPoT2ah9\",\"o5vwZSj8H7Wngp9oZ\",\"hKAzYXSoEkuyeTG7r\",\"S54A5ALTzFqHBBH2F\",\"nwStpxiB43SrCT2ZN\",\"v2w9GN4jHP2fgYdeE\",\"zw7g7T8wE5R5CBhXr\",\"LvBYSaHtLuGLXryvP\",\"oB74SK9pYyuDTTEEp\",\"3yCzgcgthd7hKeH2r\",\"jnyub52Fi79drGvow\",\"ngBjauTWXBQrWnLHZ\",\"FfmGS98wmEF8XN6Ev\",\"x38JQtfymaWGhH2s9\",\"oF6TNdvfqZfppqSgK\",\"gHdufZ3Bjm8BQ2PYL\",\"njjZpAoSfaTRruAYn\",\"xMgimoQt8kaSY8oNW\",\"tseyDEv9zaHBMvLL3\",\"xkgEAkfFQLrcisM69\",\"wrYbAWtExDAxurbwB\",\"2Ni3PzJAc5fAhqBkb\",\"MLozTdL5Ld3r2LWq7\",\"krYm4tDix6dKg6oWu\",\"4wR64Jaibcom7tbYf\",\"6BpBQnSGhzgvhXrEy\",\"Tz6J73FvF3XRXiiKf\",\"M4vq8ATaS9Jg5X7iP\",\"qFJpEDM2Ep6v4tqPz\",\"2tCCFm5iefjrRSaxv\",\"cgCQDs9i7yChKeAjE\",\"gR2vYDNPKhAcxa2yk\",\"Eboa2WpmPMFhLAudw\",\"vGKxRcDYDsXzTQuEQ\",\"zJTXDTdbwnopRazGo\",\"pHp9XWwL6QBTRSWPY\",\"XEsokh2vJHkJvnnKv\",\"6BFP6MA58afErnoKC\",\"hT8T426rinDzZytaC\",\"oHdG7SwynM74BtGCe\",\"k6QB6fzbj4LsWktRL\",\"y7cA6fhZXkprGzY9L\",\"PLAW6hHCDwfFyi5yx\",\"QgynNjKvNCQG2o3qF\",\"Po3v3dHCk6wYGKMwi\",\"rbPEA2TFQw837Hmqg\",\"gDGbpENBYzvzDmg5n\",\"Sfb5RNdmiKSDyqyp4\",\"WmMGyYcBiZMybZGxy\",\"aLKHc5k4sM3GijhmE\",\"pPpmP7xeJzGgK362R\",\"pdGuqmMyeN4wZaWwv\",\"z5GXzFD9Wwgnm9Kxf\",\"ZNYXpzJhiCbLkPCJw\",\"HjP75DWvMXBqcxwfv\",\"mpLFbFKjY6u3nsDMv\",\"mcPJaijagxzbA5HpH\",\"jkumHyXfMkhGcPgqC\",\"tAF9Gf6PiGogbZuWs\",\"mPkqZuX6Ls59K4P6D\",\"aWNggJDngk9DhC4Sg\",\"s2Y76rR2h2fPKibsK\",\"ENgmkQyp3EYdPcWuN\",\"GwLzzrCFdYfQXhAWN\",\"eQXwk5zGckM8tCWYH\",\"6oNkXuuDRBTFvpr8y\",\"w8geFfsnhEfLPjBCq\",\"y2cf8jaBdN5nBdXpa\",\"KjJwyeydcj7KsCCfb\",\"98499DDQYDLiQSxkK\",\"aGDwPibzJ4oM5tq47\",\"aEm3Wvj2rFYRL8Lrb\",\"pi76g3eRpnKrhee2a\",\"2a56F4KyQHRgTubPL\",\"KypQdzThzogKXwkXE\",\"yrNXWzfpHS4YKR2q3\",\"zd9FLSzsGz3evKafy\",\"9ciW3hoQ6JPWmL7c5\",\"DsR6PaQxDb6oZz5D7\",\"gFEpzrgWhzCZHeifj\",\"AasGs8AeX9Lcb9xJn\",\"Ef3McfqD44hj4Est9\",\"86kMtj2c6DG7paeqg\",\"QHiEYtz3tX3s9nETo\",\"5nhmyqLy8M2Yn2HMR\",\"HCfkcKnPs9mrJojdG\",\"tmB8Xatt4AstQSWWv\",\"JW5J6sdJHAmDmfWnE\",\"8op7s67jE2nYdo4js\",\"vmad5Pz6mu3CRt22J\",\"Cx5pSYgnMXKoyWbnr\",\"WnQ7d78TT7yuyjupo\",\"sN2JyFeJCwfwwHPwF\",\"jyoLggHk8xQKZuoQC\",\"69H7D5m2bhePg7YKz\",\"CJBPyyfyaEeEo63sb\",\"SpzAprfWq9EYZcjqa\",\"2ptN2mhjFwFcHyPZd\",\"vdrDCxMWpqCY3yxfj\",\"7DXJ3mvKMHHqBLt92\",\"NLYHTNm4qcJYtd8QZ\",\"7wtuhPesfhcYsfZaZ\",\"4fjSgcqhQQZM2ZFRP\",\"XRRZ5kd8PvAQYtA4s\",\"2TLngGdowbHujqTBa\",\"gKhGony2qmzMdKBHv\",\"8BJyXvRWcrvN3nttS\",\"jE4ci5yYHPKZTrrbf\",\"A4RvvaomEhygXPZmr\",\"jSKbvkb6T6sNsjYYE\",\"kqd3cgnP2yBTj5pSv\",\"Q6gEE9dG8ERy2Xu3c\",\"KDP4Tsb5gYbR85pju\",\"8PWe4RLFk3MRvbn68\",\"BYumRuo2WgiTHMDQ5\",\"QJqntLLpkx72XhQEz\",\"aZNjGyAd82zbPzWuv\",\"iXdTEAhC346WsRk4G\",\"H3yM3F3mukfdq9fit\",\"ddK4zymKDYAikiMzc\",\"RahovDytzL2Q3fAYP\",\"66xmfovMsobJQkRa7\",\"k8rMJnaejG3dX4ute\",\"Zp93Tit7CTRdkCMqp\",\"nC4sPB69yYuTSks9T\",\"4XECdehgfPLTQ5sHA\",\"34bE6mric984YYLZQ\",\"sMcFMPkMJC4Kh6ymj\",\"WpNHMgfjZE8aNN2MP\",\"h74gGMHaxayjJsJhL\",\"JnYehNpm7BvefLuee\",\"LwMkkzjH68KS2CyGe\",\"75NY7vqimaATzRdAX\",\"8FJxEKP2qpm76E9Zd\",\"F3mffDfGmCrgAXoYf\",\"nr6NdAwpgMJcL2Wue\",\"3LiSLdtN58n46NEqg\",\"wuKfeXFuTNpgEyEs2\",\"PC3pLs36zNzpRDSuE\",\"qjd7Y3B7nNxdx5PgM\",\"fccfTyHBaoFGEaKxh\",\"LPZ2QKCoB8q6rG25c\",\"EsYKpvPGPnYN4jfTm\",\"4WYjScmBWK9eXRzvd\",\"NiSowTQGDddKPtsPQ\",\"rpNNPWzdFCc9TzKMz\",\"ZuuRPZRW4r3Bp2fSS\",\"CHvzhtXnv8HTbPQ56\",\"pGv3nd6THyJQADf22\",\"4wytphJdxKnnuQYCM\",\"T6Rm8mREPMZSftzrC\",\"vpoTHSqFwCb5jmST9\",\"6QsPkeKgRW26X7dXu\",\"8n7AaMNvWgEEFHFy6\",\"mER4kEsRRxwbFgPRC\",\"qgtso8jfXRD52Th7C\",\"rNyJC3iG3Ypq77ukv\",\"QfmeLsicXT49NGouo\",\"NJCmkbH5e7qbtZYhd\",\"t4ci2PC2wYh53kENW\",\"iTDZTaTYMy9P8Qqiz\",\"ySNimfwMcCFvEjkN7\",\"TWhcGs8Tpt3Gua5Wi\",\"YcCLwitFMAEJSnxAW\",\"ihTSN4G98CHRmZqra\",\"z47JaNrQMgvuPx5HE\",\"vWGmQrnpm2geDHF5T\",\"NJuBx55XXbaAjaiwX\",\"prripzcApLp7q4hkr\",\"6vdn7gegY7xXxYCbe\",\"kAfXgLMWe4WH8gY6Z\",\"9JPCL9dtKwDERRXDZ\",\"6ua6w8vYDMAHGyD9q\"]},\"flags\":0},\"editorId\":\"buX4mCQhtXCfBjeno\",\"family\":[{\"_id\":\"8uJeSJ4fkmFJzs4eS\",\"language\":\"javascript\"},{\"_id\":\"JQHEYvFJPv4eSAjox\",\"language\":\"python3\"}]}}"]