a["{\"msg\":\"result\",\"id\":\"227\",\"result\":{\"_id\":\"9CP2euje5gAT6zzE6\",\"author\":\"Werdna\",\"authorId\":\"buX4mCQhtXCfBjeno\",\"code\":\"function sumCubes(n) {\\n\\t\\n}\",\"difficulty\":0.7524752475247525,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"QZAtgwH7nJy4ZSDuA\",\"instructions\":\"Create a function that takes a positive integer `n`, and returns the sum of all the cubed values from 1 to `n`.\\n\\nFor example, if `n` is 3:\\n\\n```\\nsumCubes(3) ➞ 36\\n1 ** 3 + 2 ** 3 + 3 ** 3 = 36\\n```\\n\\n### Examples\\n```\\nsumCubes(7) ➞ 784\\n\\nsumCubes(8) ➞ 1296\\n\\nsumCubes(9) ➞ 2025\\n```\\n\\n### Notes\\nInput `n` will be a positive integer.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertEquals(sumCubes(1), 1)\\nTest.assertEquals(sumCubes(2), 9)\\nTest.assertEquals(sumCubes(3), 36)\\nTest.assertEquals(sumCubes(4), 100)\\nTest.assertEquals(sumCubes(5), 225)\\nTest.assertEquals(sumCubes(6), 441)\\nTest.assertEquals(sumCubes(7), 784)\\nTest.assertEquals(sumCubes(8), 1296)\\nTest.assertEquals(sumCubes(9), 2025)\\nTest.assertEquals(sumCubes(10), 3025)\\nTest.assertEquals(sumCubes(123), 58155876)\\nTest.assertEquals(sumCubes(125), 62015625)\\nTest.assertEquals(sumCubes(133), 79405921)\\nTest.assertEquals(sumCubes(167), 196784784)\\nTest.assertEquals(sumCubes(188), 315630756)\\nTest.assertEquals(sumCubes(199), 396010000)\\nTest.assertEquals(sumCubes(200), 404010000)\\nTest.assertEquals(sumCubes(300), 2038522500)\\nTest.assertEquals(sumCubes(400), 6432040000)\\nTest.assertEquals(sumCubes(500), 15687562500)\\nTest.assertEquals(sumCubes(12345), 5807306426319225)\",\"language\":\"javascript\",\"quality\":4.529411764705882,\"stats\":{\"completed\":{\"ratings\":[0,0,0,0,0,0,0,2,0,1,0,2,2,1,0,0,0,1,0,0,0,1,3,0,0,0,0,0,0,0,0,1,3,2,1,2,0,0,1,1,1,0,0,0,0,1,1,1,0,0,2,0,1,0,0,0,1,0,1,0,1,0,0,1,0,0,0,3,0,0,1,0,3,1,0,2,1,0,1,1,0,0,1,1,2,0,1,3,1,1,0,0,0,1,1,1,1,0,3,1,1,0,0,1,1,2,2,1,1,2,0,0,3,1,0,1,0,0,2,2,0,0,0,1,0,1,0,0,0,2,0,1,1,1,0,1,0,0,1,2,0,1,1,3,2,0,2,1,0,2,0,0,2,1,0,1,5,0,0,1,0,0,0,1,0,1,0,0,0,1,1,2,0,0,1,2,2,0,1,1,1,2,0,1,0,1,0,0,0,0,1,1,1,0,2,1,1,0,1,0,5,2],\"quality\":[5,1,5,5,4,5,4,5,5,5,4,5,5,5,3,5,5,5,5,4,5,5,5,5,5,5,5,5,4,5,1,5,5,5,5,5,5,5,5,5,1,5,1,5,5,3,4,2,4,4,5,5,5,5,5,5,5,5,5,5,5,2,5,5,5,5,5,5,5,5,5,5,4,5,5,5,4,5,2,5,5,5,5,5,4],\"rators\":[\"buX4mCQhtXCfBjeno\",\"ngQehnjBq6tx7ov5C\",\"szQg8dxKNNre3v3Jk\",\"Yp7uvStL97cC9fKkY\",\"JQ5eGsciqj3CJ7Zuy\",\"PAzNgJF54C2mYPkR9\",\"NctoyuTNc2YnM6DGf\",\"nnHcd6c3f5R7H3zkn\",\"aWNggJDngk9DhC4Sg\",\"tAF9Gf6PiGogbZuWs\",\"eQXwk5zGckM8tCWYH\",\"jyCByAZwu576xDwEL\",\"oDtGiNqDMHmhHE3J8\",\"yjtdwc2AC4jA2RWtn\",\"RtPhDuwmvWNHiBxmG\",\"9qoWqLcHGiDX429rE\",\"srJ34BaybkQh3qRkM\",\"p9kuG5xFvctkadZJo\",\"vGKxRcDYDsXzTQuEQ\",\"jcPZ5ySXseCB7Ec3x\",\"QRv96jmNaYsWkxQEG\",\"jnyub52Fi79drGvow\",\"kDNwLNhZEuWwMBizv\",\"QgynNjKvNCQG2o3qF\",\"WY4P43N828dqTmBST\",\"mpLFbFKjY6u3nsDMv\",\"e7B9rEShxyAv2PRhs\",\"DPi9QGLctq2y76KuE\",\"ACCFtQJzwpbmpaBT5\",\"DLai9DxpZN6p5TPRX\",\"bsuPhLMpdxrXWAaS2\",\"65dbBZynphj53nXqA\",\"SNiJRRosrmSWssLj4\",\"BerC5ZFJm2Dz7TLXb\",\"mCFEc75f636yz2ZQd\",\"LLvfhTx3LjDYknDb2\",\"Tz6J73FvF3XRXiiKf\",\"mER4kEsRRxwbFgPRC\",\"2Qk2mFu9HBFzrB24i\",\"Ya3eHgs8x3unZRLpb\",\"u9cRf5kvtpRB5ffB3\",\"JzzNCzWjcGrqDdAd5\",\"J7d397iB5GuWRAMfg\",\"aLKHc5k4sM3GijhmE\",\"x2Cz7S8rCKJqCE3Xe\",\"k8rMJnaejG3dX4ute\",\"FRN2W8RYpJ6GPhgRy\",\"cXaojnX4FS2XbDeMy\",\"vxWHytXdMHsoyv9Gr\",\"AFfw7cGg83uYk2Miy\",\"CNc6rmwhbxkxEhHAp\",\"RE4Mm9T6Q9uygAxGS\",\"Eboa2WpmPMFhLAudw\",\"iqtpazNSCBNgDvQFa\",\"s2Y76rR2h2fPKibsK\",\"z5ebtimXwFFJdYxoa\",\"7q8oBsCHwn48Ppnrq\",\"FGEeCTorXbX3WvjFW\",\"evTTY9hwrtogaNxXn\",\"69H7D5m2bhePg7YKz\",\"6BpBQnSGhzgvhXrEy\",\"xrqK8P7zH83wjo3L4\",\"sN2JyFeJCwfwwHPwF\",\"NJCmkbH5e7qbtZYhd\",\"RQwuHHy4rBgaQCLte\",\"PLAW6hHCDwfFyi5yx\",\"c3ixxp9yXLsvFuJdj\",\"zNN2fW2pJGpTxBgzx\",\"hwdJZXT3sgEK9uo2s\",\"9HZbxzkzgz4CvePtv\",\"QGjY3hgPYPMmMjc7j\",\"cp3X8hk8yNME7qoD9\",\"rbPEA2TFQw837Hmqg\",\"aGDwPibzJ4oM5tq47\",\"ZK6YmYMsfwXYtaZ9P\",\"dLXJqQ879kYhpYS6Z\",\"Wpn95NqWxncQrwNgz\",\"p4jTy5rXHWfYvwuDX\",\"z5GXzFD9Wwgnm9Kxf\",\"w8geFfsnhEfLPjBCq\",\"aEm3Wvj2rFYRL8Lrb\",\"BxAuYhv4MPPfrNoMd\",\"7kENXQQ8ABiPGfBRD\",\"pi76g3eRpnKrhee2a\",\"GwLzzrCFdYfQXhAWN\",\"6oNkXuuDRBTFvpr8y\",\"y2cf8jaBdN5nBdXpa\",\"XrqNzJ2FRG8HnGiR6\",\"z47JaNrQMgvuPx5HE\",\"QAZ5DGaWWYhku4BNz\",\"vKch2w3b4keMd84jj\",\"CdXigydGTBLgA577m\",\"vEapufGjE49e5JSch\",\"98499DDQYDLiQSxkK\",\"bZzLXQJWdfxgxxQ5E\",\"zrk4J9JseJSk5i7nG\",\"pPpmP7xeJzGgK362R\",\"F5X9tBsRJ2E3zSJxw\",\"zJTXDTdbwnopRazGo\",\"ihTSN4G98CHRmZqra\",\"zw7g7T8wE5R5CBhXr\",\"JZQyDRhYyEti528yy\",\"HduWrqt8YcQ2B5PWu\",\"zuozmoTvd437vjSaj\",\"ZqjP4M6dzu32To33K\",\"aPX8qCXL6TmfpRfgy\",\"BdvdJYwHZr7JpkHsn\",\"hT8T426rinDzZytaC\",\"qhQC7ZufFzksaaBNj\",\"MATsqGvdZgvQ4JwCo\",\"rMc3LPajSgm68hNfC\",\"59BCjgcayeLttJkSL\",\"LJoLLideh5Aw93oSx\",\"zd9FLSzsGz3evKafy\",\"Es4eX2stRpyoXeC7f\",\"Swb2jDnZjviDXsQvB\",\"xSi6aaX49apRqMm32\",\"2QNs5hQaDgo792ztf\",\"6BFP6MA58afErnoKC\",\"nQheqP5nvof4bPeNX\",\"PMtk6T2F9eK95g23d\",\"e9Cknxbx6o7Nb6REs\",\"rADGEpx5CQwnEgxjL\",\"ahxmaYtSDuZmhrMBZ\",\"q75AiydeYYwRS5pAH\",\"yd4FbQA9M5L57cTou\",\"S2X3bKWQYJGPF8uKc\",\"qFJpEDM2Ep6v4tqPz\",\"AXcnPX68zdMiLNSmu\",\"RhRWSzM7MKeQ2WLMx\",\"QHiEYtz3tX3s9nETo\",\"mcPJaijagxzbA5HpH\",\"jLSZdBseR2kfjt8dL\",\"dmwoHPqNbu3XA4qgs\",\"CJBPyyfyaEeEo63sb\",\"JW5J6sdJHAmDmfWnE\",\"F4JPXKWNJpPjuCFAn\",\"dQd664XYR6QKHFvHW\",\"sscsfdj4ygKcjH8PG\",\"FEhpEv9JhSsqqfACv\",\"3h5dGS6W8akioYnWD\",\"3wDBcexoNzHqJKqNc\",\"N3CNtWZz4ovJfH9Aw\",\"AxZpaHuZptKWTQj8y\",\"iPXQGtaJjR8k4jWQm\",\"bhMPAqozxTGdmfrG2\",\"Xj6R2zqhgumffQCAN\",\"FGYBMbExbwHLD2Wdn\",\"2a56F4KyQHRgTubPL\",\"j5FSQCayX3By73CCw\",\"3WtHp4MBzciz4AE8M\",\"Ef3McfqD44hj4Est9\",\"vB88fCn7Ke9osRdZx\",\"qvCppNAZjAkNdBSu6\",\"P2vAyWNH3wjoP5tXc\",\"7WjCXut2oYSTqiXu8\",\"M4vq8ATaS9Jg5X7iP\",\"MLozTdL5Ld3r2LWq7\",\"ZNYXpzJhiCbLkPCJw\",\"7gZKfvwaeqsGKXMEN\",\"2tCCFm5iefjrRSaxv\",\"5nhmyqLy8M2Yn2HMR\",\"rhhGJj3s9pMzzfpan\",\"GxABy7LkQ5YRmqowE\",\"o5vwZSj8H7Wngp9oZ\",\"C9LKGu2g5hSijvDzA\",\"gFEpzrgWhzCZHeifj\",\"JnYehNpm7BvefLuee\",\"66xmfovMsobJQkRa7\",\"pdGuqmMyeN4wZaWwv\",\"AasGs8AeX9Lcb9xJn\",\"LPdouuyWXCqvfDd65\",\"jtzNdgDCzsekkdpxA\",\"HCfkcKnPs9mrJojdG\",\"ceMycDhXzsRojnr9F\",\"86kMtj2c6DG7paeqg\",\"uqiofJFPnWtuuynf6\",\"8op7s67jE2nYdo4js\",\"8BJyXvRWcrvN3nttS\",\"7wtuhPesfhcYsfZaZ\",\"mHT2bJb5SByfJ8yKS\",\"TWhcGs8Tpt3Gua5Wi\",\"gt9zhJjDZE5MraxoF\",\"tmB8Xatt4AstQSWWv\",\"etKaPYBW5AfmY5zxe\",\"vmad5Pz6mu3CRt22J\",\"STipuJs6kBvPqqsSE\",\"Cx5pSYgnMXKoyWbnr\",\"tseyDEv9zaHBMvLL3\",\"EsYKpvPGPnYN4jfTm\",\"jyoLggHk8xQKZuoQC\",\"2ptN2mhjFwFcHyPZd\",\"2cq2HYsJJEcPWuqdz\",\"oyB4Wr4EeZnoDaa8B\",\"g4NCSxxHqHCGMpWwT\",\"4fjSgcqhQQZM2ZFRP\",\"2TLngGdowbHujqTBa\",\"XRRZ5kd8PvAQYtA4s\",\"GiQCH5nvo5A2pnREZ\",\"jE4ci5yYHPKZTrrbf\",\"9bn9ggGFwwFYPzn72\",\"BghXDk97iRM34suMN\",\"SpzAprfWq9EYZcjqa\",\"jSKbvkb6T6sNsjYYE\",\"kqd3cgnP2yBTj5pSv\",\"bfYmA3LMvhSrK59cn\",\"gKhGony2qmzMdKBHv\",\"PXAcsKkssS2yLyDv2\",\"N2wnZXkhDH86mgjQ8\",\"Q6gEE9dG8ERy2Xu3c\",\"fPRe6kTeGM3yWGfY6\",\"8PWe4RLFk3MRvbn68\",\"QJqntLLpkx72XhQEz\",\"KDP4Tsb5gYbR85pju\",\"Zk7zYsonf4TQ6d27R\",\"F3mffDfGmCrgAXoYf\",\"34bE6mric984YYLZQ\",\"K45zPJxsABuA3WSyj\",\"kzKScgma9NnX6YwAs\",\"bX6tpTCjwoi6XMMbK\",\"vic9SZ9qqj9WhRkbd\",\"aZNjGyAd82zbPzWuv\",\"rZkKqZkCbya8tkbJL\",\"ZxCzuFDW83E6Lr26b\",\"njjZpAoSfaTRruAYn\",\"oKv6ZfnDaegFJrxZG\",\"3M7Yxz4dk24DnuzNs\",\"FJsvM5yqKuK9yMk9P\",\"CpMpjRLLJfaLqRf8a\",\"ddK4zymKDYAikiMzc\",\"djpMD2mX9tkhE6dke\",\"H3yM3F3mukfdq9fit\",\"Zp93Tit7CTRdkCMqp\",\"sMcFMPkMJC4Kh6ymj\",\"WpNHMgfjZE8aNN2MP\",\"Akq3fQcPRgPrWfsye\",\"h74gGMHaxayjJsJhL\",\"8FJxEKP2qpm76E9Zd\",\"5LDvZHCDJqePeBrCg\",\"nC4sPB69yYuTSks9T\",\"QKaNJmXgBMsTmig6S\",\"3LiSLdtN58n46NEqg\",\"4JAhviei328GyTfWm\",\"koWGjiCmozmgwhYsb\",\"v2w9GN4jHP2fgYdeE\",\"qjd7Y3B7nNxdx5PgM\",\"oF6TNdvfqZfppqSgK\",\"LPZ2QKCoB8q6rG25c\",\"fccfTyHBaoFGEaKxh\",\"dXT6y8AyktczWQsFp\",\"eKHQ5g8uEdoBgdafr\",\"Erbux72p3mqafJswc\",\"CHvzhtXnv8HTbPQ56\",\"iTDZTaTYMy9P8Qqiz\",\"opcrDAS4AgXqrJXnb\",\"4WYjScmBWK9eXRzvd\",\"ZuuRPZRW4r3Bp2fSS\",\"rpNNPWzdFCc9TzKMz\",\"pGv3nd6THyJQADf22\",\"75NY7vqimaATzRdAX\",\"vpoTHSqFwCb5jmST9\",\"T6Rm8mREPMZSftzrC\",\"QfmeLsicXT49NGouo\",\"NJuBx55XXbaAjaiwX\",\"YcCLwitFMAEJSnxAW\",\"4wR64Jaibcom7tbYf\",\"sLq6ibptA4TPEdq36\",\"ey7weiXtrrTWSnjtJ\",\"t4ci2PC2wYh53kENW\",\"ySNimfwMcCFvEjkN7\",\"DPpSwhhiuF4Y9YR2i\",\"Ya9pKG9rkWi4eZaG7\",\"5QN8R22z43SrwoHDz\",\"xsDyJstYoBZRS8pJH\",\"vWGmQrnpm2geDHF5T\",\"ttfeEwhaXwRfDjjsA\",\"prripzcApLp7q4hkr\",\"6vdn7gegY7xXxYCbe\",\"9JPCL9dtKwDERRXDZ\",\"kAfXgLMWe4WH8gY6Z\",\"T9hLYwWDaaEArn8sW\",\"6ua6w8vYDMAHGyD9q\"],\"total\":300},\"flags\":0},\"summary\":\"Create a function that takes a positive integer n, and returns the sum of all the cubed values from 1 to n.\\n\\nFor example, if n is 3:\\n\\nsumCubes(3) ➞ 36\\n1 * 3 + 2 * 3 + 3 ** 3 = 36\\n\\nExamples\\nsumCubes(7) ➞ 784\\n\\nsumCubes(8) ➞ 1296\\n\\nsumCubes(9) ➞ 2025\\n\\nNotes\\nInput n will be a positive integer.\",\"tags\":[\"numbers\",\"math\",\"language_fundamentals\",\"algorithms\"],\"timestamp\":{\"$date\":1615576938441},\"title\":\"Sum of Cubes\",\"family\":[{\"_id\":\"6a5QwRP8mHuD7jdGr\",\"language\":\"cpp\"},{\"_id\":\"9CP2euje5gAT6zzE6\",\"language\":\"javascript\"},{\"_id\":\"i3KYE7y6r2z28JFfE\",\"language\":\"php\"},{\"_id\":\"3XYv6RZbrbaoTWJ4H\",\"language\":\"python3\"},{\"_id\":\"vDdMbJBmfHDuPxKjh\",\"language\":\"ruby\"}]}}"]