a["{\"msg\":\"result\",\"id\":\"902\",\"result\":{\"_id\":\"jdYxyKyppvogyhBJ6\",\"archived\":false,\"author\":\"Jasperr\",\"authorId\":\"xxmeopX7HggJJsvYB\",\"code\":\"function pointsInCircle(points, centerX, centerY, radius) {\\n\\t\\n}\",\"difficulty\":1.6134453781512605,\"familyId\":\"jPJsJjthzyuc9MYSJ\",\"instructions\":\"Count the total number of coordinates on a two-dimensional grid that are inside a given circle. The function has four parameters: the points (provided as a list of objects), the circle's center x coordinate, the circle's center y coordinate, and the circle's radius. For example:\\n\\n### Examples\\n```\\npointsInCircle([\\n  { x: 0, y: 0 },\\n  { x: 1, y: 1 },\\n  { x: 0, y: 5 },\\n  { x: 10, y: 10 }\\n], 0, 0, 5) ➞ 2\\n```\\n\\n### Notes\\nOnly count the coordinates that are _in_ the circle, not the ones that are on the border.\",\"lab\":\"Test.assertEquals(pointsInCircle([{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 5}, {x: 10, y: 10}], 0, 0, 5), 2)\\nTest.assertEquals(pointsInCircle([{x: 9, y: 6}, {x: 9, y: 3}, {x: 4, y: 8}, {x: 3, y: 10}, {x: 1, y: 6}], 0, 0, 7.5), 1)\\nTest.assertEquals(pointsInCircle([{x: 8, y: 8}, {x: 8, y: 6}, {x: 4, y: 7}], 0, 0, 1), 0)\\nTest.assertEquals(pointsInCircle([{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 5}, {x: 10, y: 10}], 50, 50, 40), 0)\\nTest.assertEquals(pointsInCircle([{x: 10, y: 10}, {x: 33, y: 54}, {x: 7, y: 98}, {x: 516, y: 85}], 23, 94, 100), 3)\\nTest.assertEquals(pointsInCircle([{x: 6, y: 3}, {x: 1, y: 4}, {x: 1, y: 9}, {x: 4, y: 9}, {x: 9, y: 3}, {x: 10, y: 8}, {x: 2, y: 2}, {x: 4, y: 3}, {x: 4, y: 4}, {x: 1, y: 2}, {x: 8, y: 9}, {x: 6, y: 10}, {x: 10, y: 6}, {x: 8, y: 8}, {x: 2, y: 1}, {x: 7, y: 4}, {x: 6, y: 1}, {x: 8, y: 1}, {x: 8, y: 5}, {x: 2, y: 1}, {x: 10, y: 5}, {x: 6, y: 5}, {x: 8, y: 3}, {x: 7, y: 8}, {x: 1, y: 6}, {x: 8, y: 7}, {x: 4, y: 10}, {x: 6, y: 5}, {x: 4, y: 5}, {x: 1, y: 10}, {x: 4, y: 4}, {x: 6, y: 8}, {x: 2, y: 8}, {x: 2, y: 8}, {x: 1, y: 10}, {x: 3, y: 2}, {x: 5, y: 7}, {x: 10, y: 2}, {x: 9, y: 8}, {x: 4, y: 3}, {x: 9, y: 5}, {x: 6, y: 3}, {x: 1, y: 3}, {x: 5, y: 10}, {x: 2, y: 7}, {x: 10, y: 6}, {x: 8, y: 4}, {x: 9, y: 9}, {x: 1, y: 8}, {x: 1, y: 3}, {x: 2, y: 2}, {x: 10, y: 1}, {x: 5, y: 6}, {x: 10, y: 5}, {x: 8, y: 5}, {x: 9, y: 10}, {x: 1, y: 4}, {x: 5, y: 6}, {x: 6, y: 5}, {x: 2, y: 2}, {x: 10, y: 10}, {x: 6, y: 7}, {x: 2, y: 1}, {x: 4, y: 4}, {x: 8, y: 4}, {x: 6, y: 10}, {x: 6, y: 7}, {x: 3, y: 5}, {x: 9, y: 1}, {x: 1, y: 7}, {x: 2, y: 9}, {x: 7, y: 4}, {x: 9, y: 5}, {x: 7, y: 6}, {x: 9, y: 6}, {x: 3, y: 1}, {x: 2, y: 9}, {x: 7, y: 1}, {x: 3, y: 7}, {x: 6, y: 5}, {x: 8, y: 8}, {x: 7, y: 5}, {x: 6, y: 4}, {x: 6, y: 5}, {x: 7, y: 2}, {x: 7, y: 10}, {x: 7, y: 1}, {x: 3, y: 1}, {x: 9, y: 10}, {x: 6, y: 7}, {x: 5, y: 9}, {x: 2, y: 6}, {x: 10, y: 1}, {x: 9, y: 1}, {x: 7, y: 3}, {x: 3, y: 1}, {x: 7, y: 9}, {x: 2, y: 5}, {x: 1, y: 9}, {x: 8, y: 8}], 0, 0, 7.5), 34)\\nTest.assertEquals(pointsInCircle([{x: 16, y: 98}, {x: 48, y: 5}, {x: 66, y: 18}, {x: 87, y: 8}, {x: 37, y: 94}, {x: 69, y: 49}, {x: 85, y: 37}, {x: 61, y: 63}, {x: 19, y: 4}, {x: 81, y: 3}, {x: 90, y: 30}, {x: 35, y: 65}, {x: 30, y: 92}, {x: 72, y: 38}, {x: 67, y: 4}, {x: 41, y: 70}, {x: 93, y: 92}, {x: 43, y: 17}, {x: 22, y: 12}, {x: 5, y: 58}, {x: 27, y: 73}, {x: 42, y: 70}, {x: 40, y: 61}, {x: 75, y: 99}, {x: 41, y: 79}, {x: 98, y: 99}, {x: 20, y: 64}, {x: 2, y: 74}, {x: 69, y: 44}, {x: 39, y: 58}, {x: 6, y: 11}, {x: 51, y: 34}, {x: 32, y: 19}, {x: 50, y: 12}, {x: 16, y: 91}, {x: 1, y: 99}, {x: 13, y: 60}, {x: 16, y: 64}, {x: 34, y: 25}, {x: 41, y: 68}, {x: 61, y: 57}, {x: 61, y: 17}, {x: 47, y: 17}, {x: 10, y: 63}, {x: 40, y: 76}, {x: 82, y: 93}, {x: 54, y: 14}, {x: 6, y: 28}, {x: 21, y: 69}, {x: 76, y: 79}, {x: 37, y: 5}, {x: 85, y: 73}, {x: 24, y: 72}, {x: 36, y: 75}, {x: 72, y: 4}, {x: 71, y: 80}, {x: 37, y: 13}, {x: 62, y: 83}, {x: 45, y: 43}, {x: 95, y: 67}, {x: 6, y: 12}, {x: 79, y: 27}, {x: 1, y: 12}, {x: 19, y: 51}, {x: 94, y: 27}, {x: 29, y: 34}, {x: 21, y: 43}, {x: 8, y: 81}, {x: 98, y: 65}, {x: 63, y: 82}, {x: 45, y: 38}, {x: 70, y: 19}, {x: 61, y: 30}, {x: 47, y: 86}, {x: 52, y: 41}, {x: 89, y: 16}, {x: 28, y: 75}, {x: 21, y: 98}, {x: 54, y: 68}, {x: 80, y: 46}, {x: 82, y: 71}, {x: 36, y: 91}, {x: 76, y: 20}, {x: 33, y: 81}, {x: 56, y: 57}, {x: 6, y: 47}, {x: 85, y: 62}, {x: 83, y: 67}, {x: 98, y: 66}, {x: 92, y: 54}, {x: 70, y: 88}, {x: 42, y: 38}, {x: 66, y: 100}, {x: 92, y: 22}, {x: 77, y: 36}, {x: 90, y: 57}, {x: 48, y: 39}, {x: 49, y: 97}, {x: 12, y: 66}, {x: 30, y: 85}], 0, 0, 50), 16)\",\"language\":\"javascript\",\"summary\":\"Count the amount of coordinates on a two-dimensional grid that are inside a given circle. The function has four arguments: the points, the circle's center x, y and the circle's radius. For example:\\n\\nExamples\\npointsInCircle([\\n  { x: 0, y: 0 },\\n  { x: 1, y: 1 },\\n  { x: 0, y: 5 },\\n  { x: 10, y: 10 }\\n], 0, 0, 5) ➞ 2\\n\\nNotes\\nOnly count the coordinates that are in th\",\"tags\":[\"math\",\"arrays\"],\"timestamp\":{\"$date\":1488566908313},\"title\":\"Count the Points in a Circle\",\"stats\":{\"completed\":{\"total\":246,\"ratings\":[1,1,1,1,1,1,2,1,1,2,2,2,1,2,3,2,1,2,1,1,1,2,1,1,2,1,1,1,1,1,1,3,1,0,1,1,1,1,1,1,0,2,1,2,1,2,1,0,2,0,2,1,2,2,0,1,2,1,1,2,1,0,1,1,3,2,4,0,1,1,0,1,2,1,1,3,2,2,1,2,1,2,1,1,2,2,2,2,4,1,1,2,1,2,2,1,2,0,2,2,2,1,5,2,2,2,2,2,2,2,2,1,1,3,1,2,2,1,2,2,1,2,1,1,1,2,2,1,2,1,2,2,2,1,2,1,5,2,2,2,1,2,1,2,2,2,3,2,1,1,2,1,2,2,1,2,2,2,2,1,4,0,2,1,2,3,0,2,2,2,1,2,2,0,2,2,2,2,1,1,2,2,2,0,2,2,1,2,2,2,1,2,2,3,1,1,3,2,3,1,2,3,2,2,2,2,2,2,0,1,2,2,2,3,1,3,0,2,2,0,2,1,2,2,2,2,2,2,1,2,2,1,2,2,2,2,2,2],\"rators\":[\"xxmeopX7HggJJsvYB\",\"ZZA6JdLEBxHGozyWP\",\"65dbBZynphj53nXqA\",\"6QR2QdW689ihtHjan\",\"2eAwdyT6n7og5EzdW\",\"t9urqYbuDRKijLTdy\",\"hi7Hvtq2mJfkXEGF2\",\"mhANbsuQbhuZoCdw7\",\"MJodRpziHHB8SwZ99\",\"oSKuxjH2N6emtz4GY\",\"xeE5KMTcmNLMqLqg4\",\"xhztefZrh299JXeiM\",\"GLYBQ9z39osxSutRX\",\"7WSz54KxZzrywKCie\",\"9sFck4LMhD4qCJfQe\",\"fuZ2QahBemEprjvrK\",\"PRFWbXbqvWxBrZr23\",\"qGjMp6JsW2yxFJ5w8\",\"Qe2f3rDBsKX7ES3LA\",\"AP4BGx6PTGEZvDXRC\",\"PADbPTWHgi7KKhH7Q\",\"g6Dzf7W6dezLYeW8i\",\"LDc8cMrTShPkzyEXd\",\"hD8btcBqRLPYJJSum\",\"Nqayy73BLmsx8Epa8\",\"6fJpRpAgiWD5zX9qB\",\"78GGtabNSgpJ4Xz8v\",\"dhhxep2jikG5pkKsA\",\"JzcuZQNK6GD4B4pwB\",\"TwtgrBTHiCnkP584n\",\"dAe4nADmGE2yjASLr\",\"sQTaZGCCsE7BNQzyG\",\"BxsBtPj2p2zrbCBFR\",\"LFyr77zcFYs9fJHcj\",\"XYtjfdJwA5RWs5G2D\",\"XHngE5iScvztMpnR2\",\"AgQburWndXwEhgomM\",\"3yYC3kjZ6PGuLAKKj\",\"igP2tpkeAHiT8PWsr\",\"tcr6kdtWephfSa8bc\",\"KDdxq4jfx6H5bwyPq\",\"EXL3wKm6B3BgdaRn3\",\"wRRvJjGKbpX2gvoJg\",\"XfeFMWFjkXXB6pD7s\",\"BQKA7XC2ZL6ZpCHNf\",\"AHuPZEaTZJE2gwhWY\",\"rToezGeiciwwEkYNd\",\"eYaxKg5Tg2Nj5QGSL\",\"8R9GdggbMGmfqjpJi\",\"Sct5m4DrJTeY95nZb\",\"2eG4rwnM7dQcXDGbm\",\"9wvm62EwDTz2Gum5t\",\"7pPPRpL8FhEJat8KF\",\"AhC88RpTjJ8kETcWh\",\"eZbCrJJPXQo9RNgE3\",\"gguKJ5gCLvwHpqj75\",\"WXcNYYxFgNzjEj6bM\",\"eufCk6FoPNr7cmYdy\",\"CdfRdeo2affeoRqE2\",\"FGEeCTorXbX3WvjFW\",\"NbsMkYuSFa8LsnZtT\",\"paFeX6ZCjMD5wsbLp\",\"thEsZ7N6X8qfZMbcv\",\"RNKWjAHrXt9AiMc3g\",\"o5unhNGDunoN8zgk3\",\"Y8zD7oXK6jJSr4Gnu\",\"eLQMac37xk5AixBTa\",\"F7iZc3vpy7d9ALD6D\",\"nnFK8rFQHfkQ2AK4Z\",\"QxftMeGjeydjE8SHC\",\"fMbZnKta63wqpPsqN\",\"FEz6RxMHwcpXRthDc\",\"ggj8NF9hiYrJfLqGn\",\"W4ShLSeh7NEjPihNY\",\"kmM6uKh4SnutNDReM\",\"uhrxTu3Rdjz8nYA9n\",\"88zW5YpRhug9iffEr\",\"khzfFceSLf4vmCBX3\",\"jWXdurfxtiaCq64sz\",\"5vQpwFAtCqEsXeHhe\",\"3Hr7odFaLvzbALrJx\",\"Euhr5S6HctxxLhGbD\",\"MmpisT9nmzPJDQuRC\",\"cuQSsGutnSkLjJpNJ\",\"enuhRD8zZn4QDNTc4\",\"SjY6a2v6jMjGraDKz\",\"2hPmJA2nnG3JT8c5N\",\"wh6JQg9o8CMRSgYET\",\"HQuhas4KXrETxYk9o\",\"g5noFWaoRtZNcEEAW\",\"6ir9H6TvDxyGL4kvG\",\"KpXzNmd3gyz2Mwka5\",\"AjvZ4h696CxhKuptb\",\"B8tButws783qnALkn\",\"PKJWzgQKwneuaS3Ap\",\"PaHAGkmRMF6oAgzYC\",\"HQNez8eDfq9Mv5vkR\",\"TzA2B5NYnbpJDxL2y\",\"2eXRxTkbcN3gFJBnX\",\"7gZKfvwaeqsGKXMEN\",\"SDtZFL5NzAoCPofXk\",\"hy63rX7K3hEfyp8B4\",\"N7KL9CQQTuxyLwxQN\",\"8WnRWJbE8o5CLPz2J\",\"mNMQvcxKSSvqqMYCH\",\"6BpBQnSGhzgvhXrEy\",\"ak5aPiT6QWpmbnPzD\",\"G7bdEb5gSLLR59Fvn\",\"f2WHsJ6qZimgyJ6Ci\",\"mf8xW5DhPjfXaCEsQ\",\"Jh6sPsgj8yHy95joL\",\"d2PuPtTWQac8SexuC\",\"M9SGo5qL7pypgErFC\",\"pXtv3PjRH28xHJq5n\",\"qqPkSyFbmCNGDc2c4\",\"zgoq9MhrL2h75DAMA\",\"xazeYndpYNBn7oo3Y\",\"gGETo2x9dY5TsWc2b\",\"yftXWPRQYWDH9KPoA\",\"bbbpNxM3hgGMCqMn8\",\"zkoL4nyqaMk8oyjGh\",\"iXKbjvSNBobRTciGA\",\"oERDdk8GeuQMDdNCK\",\"epQGqxtyKN5zYJFWP\",\"SYEuojZtP6yLXryHv\",\"g4K6nM72TtXLKog5x\",\"J67hC7LSEYS5JwhPj\",\"WcJLHTiGQ3PjEQaGh\",\"Nd7Bnx9zF57gn3vLp\",\"oFckF5bB5dGBQKneS\",\"EjPLq3QSJdGQFJdgW\",\"wcjknenWdPRhrRScv\",\"e8ftyJ6nKRtZDwGWJ\",\"K8retouBZnftajjFi\",\"KPDPaGaJ4jGtRusF2\",\"SfdDzsZSwmLudopjk\",\"4pagg6vw2Cjepv7tN\",\"RE4Mm9T6Q9uygAxGS\",\"n5wubRfh6zh8QRymN\",\"EWn8w8P3nNh7knatY\",\"2WkWxAEetbCzddQzK\",\"9AdMR4uBsHxRcd86Q\",\"uhP3Z8KkPxySxn2n7\",\"S7R7voZRxnWjCn8pi\",\"cTasoJQG2iA6FvuK4\",\"CDMRRwcZ3h4NJ5tww\",\"N7P4AnS8nzK4oupHv\",\"dgwRvPi62zKghWiHb\",\"3u7mhwNxuummKkYts\",\"eomLS3wh6tQPN8jtH\",\"5GWkiNRN6xMuRu7Dg\",\"rTRvHndHZKKRkb9w5\",\"vKch2w3b4keMd84jj\",\"J6DZ4ePyc3evuLine\",\"XKi8iZXBCHCaebSHh\",\"Q9KQomTTPBsrkAL6c\",\"538PKNyqMiCwLWYWK\",\"zw7g7T8wE5R5CBhXr\",\"yjtdwc2AC4jA2RWtn\",\"5Zq3aGdvh4LHBvnJL\",\"66gXXy97s3jxAeS9q\",\"bKPvJHLQ3ovQLt9MJ\",\"R4JQmeA6cYyfXbmLF\",\"2DfWvsPT8TPPNbQpt\",\"AasGs8AeX9Lcb9xJn\",\"gSpcNJ8znvGGfWsQH\",\"qL2Qi6HDBJaSog262\",\"3awyiorYPgCqqP7Sr\",\"Akq3fQcPRgPrWfsye\",\"DHwbkbzYNpmkSFT7u\",\"mHT2bJb5SByfJ8yKS\",\"tPtz279rzBX8kCWMr\",\"BGQqaYbqYqmTo5Ehs\",\"BdvdJYwHZr7JpkHsn\",\"gzTs5oFrfZwh3Kfze\",\"WdxWWwuM5PcZbTgxY\",\"zd9FLSzsGz3evKafy\",\"SNiJRRosrmSWssLj4\",\"ih2aGaqkMaagTgyL2\",\"9gEWz76H8KmhN4yJj\",\"2CvHJcA9aXt9pvZwA\",\"8BFSTCnoe2QggN64c\",\"sutzxu4yTueBKE9Qp\",\"5YCX58nhHT8oRCHyy\",\"EoNHgbWsF6ZQF4eYr\",\"mHaHudYExvi45DSRf\",\"3aZvfgr2H2WF8Yog2\",\"pi76g3eRpnKrhee2a\",\"k5TGxBtLi9BXxeChT\",\"YER6iBcpJCuhgrYDN\",\"7JCLyrrY6JYGpocac\",\"FJsvM5yqKuK9yMk9P\",\"a777e8chPvJkY3tKa\",\"ipiC2qPhKZWsAouJf\",\"2ZFoLTxcCARhwc8xX\",\"z5ebtimXwFFJdYxoa\",\"ij9YRJvZz6WbqcGXS\",\"Wv9v7fHb8umujfg2j\",\"nkH3HfJXLMNcBMM79\",\"2innwjWqxJHo4eRGh\",\"2zKQWLmEBw8FBs4ZL\",\"4ntYzGHHBgqf58udP\",\"Fhwnime223hGiaHaA\",\"tAF9Gf6PiGogbZuWs\",\"Po3v3dHCk6wYGKMwi\",\"aEm3Wvj2rFYRL8Lrb\",\"QRv96jmNaYsWkxQEG\",\"Nb6LYPoQP6KJZt8mz\",\"evTTY9hwrtogaNxXn\",\"kp2ZbCewZJAbfd7xv\",\"sj8yRK9uzJ5LLZABJ\",\"Xk2g4CNFAnYcvxiSr\",\"g4NCSxxHqHCGMpWwT\",\"CNc6rmwhbxkxEhHAp\",\"jLSZdBseR2kfjt8dL\",\"Yp7uvStL97cC9fKkY\",\"3Gf7ikLijfoxabiPY\",\"LCn6qz2GoMr5577Rd\",\"m6qKkBY4aPWziyJTj\",\"7tspwQ8kKXvsR9gdh\",\"u9cRf5kvtpRB5ffB3\",\"Ya3eHgs8x3unZRLpb\",\"wJTDDTE3TrmSXKP4d\",\"733qgZ7ZSSSrzbXGw\",\"srJ34BaybkQh3qRkM\",\"nBJve5CzG6WAw7WFQ\",\"gXTAie79kiw28tx5u\",\"AFfw7cGg83uYk2Miy\",\"mpLFbFKjY6u3nsDMv\",\"bfYmA3LMvhSrK59cn\",\"9XnGoq9Tv6ut3zTtH\",\"z47JaNrQMgvuPx5HE\",\"rPsSEYqwmttMPEuvo\",\"46SBqYjYrHQhMzp2Y\",\"uxKGACwmZ6FNZsMwE\",\"HCfkcKnPs9mrJojdG\",\"LPZ2QKCoB8q6rG25c\",\"oDtGiNqDMHmhHE3J8\",\"5QN8R22z43SrwoHDz\"],\"quality\":[3,5,5,4,5]},\"complaints\":{\"total\":6,\"reasons\":[[\"bug\"],[\"bug\"],[\"confusing\"],[\"confusing\"],[\"confusing\"],[\"confusing\"]],\"skippers\":[\"xxmeopX7HggJJsvYB\",\"Rk5FPddyQFkx5yGoL\",\"RMWRc8mAcbvMzm65z\",\"owSQMk8tuJwdGCtrk\",\"8R5QMqvgP6vK4w3GA\",\"j7TmBPsNDH8hJx6uk\",\"yF2yyeA4CMSgQaxur\"]},\"instructions\":{\"score\":-18.25,\"voters\":[\"QaneRr2JNbhj6FTB9\",\"PKJWzgQKwneuaS3Ap\",\"RrJDdNZAKAggwGCXg\",\"eq6bWgNCAXLkFj4tx\",\"kRJztEDJwdsGP9P4z\"]},\"tests\":{\"score\":-11.1,\"voters\":[\"PKJWzgQKwneuaS3Ap\"]},\"flags\":1},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.4,\"family\":[{\"_id\":\"jdYxyKyppvogyhBJ6\",\"language\":\"javascript\"},{\"_id\":\"A9iPfSEZ9fCrPQSwC\",\"language\":\"python3\"},{\"_id\":\"cYzoQuvxE4f3KHaQ6\",\"language\":\"ruby\"}]}}"]