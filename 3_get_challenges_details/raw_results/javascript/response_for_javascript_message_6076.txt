a["{\"msg\":\"result\",\"id\":\"1785\",\"result\":{\"_id\":\"PYXbvQh9W3c9i72xx\",\"author\":\"Pustur\",\"authorId\":\"65dbBZynphj53nXqA\",\"code\":\"function vendingMachine(products, money, productNumber) {\\n\\t\\n}\",\"difficulty\":2.5551020408163265,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"fifMBbQ6gZheCcSyP\",\"instructions\":\"Your task is to create a function that simulates a vending machine.\\n\\nGiven an amount of `money` (in cents **¢** to make it simpler) and a `productNumber`, the vending machine should output the correct product name and give back the correct amount of change.\\n\\nThe coins used for the change are the following: `[500, 200, 100, 50, 20, 10]`\\n\\nThe return value is an object with 2 properties:\\n\\n- `product`: the product name that the user selected.\\n- `change`: an array of coins (can be empty, must be sorted in descending order).\\n\\n### Examples\\n```\\nvendingMachine(products, 200, 7) ➞ { product: \\\"Crackers\\\", change: [ 50, 20, 10 ] }\\n\\nvendingMachine(products, 500, 0) ➞ \\\"Enter a valid product number\\\"\\n\\nvendingMachine(products, 90, 1) ➞ \\\"Not enough money for this product\\\"\\n```\\n\\n### Notes\\n- The products are fixed and you can find them in the **Tests** tab.\\n- If `productNumber` is invalid (out of range) you should return the *string*: \\\"Enter a valid product number\\\".\\n- If `money` is not enough to buy a certain product you should return the *string*: \\\"Not enough money for this product\\\".\\n- If there's no change, return an empty array as the `change`.\",\"lab\":\"// Products available\\nconst products = [\\n  { number: 1, price: 100, name: 'Orange juice' },\\n  { number: 2, price: 200, name: 'Soda' },\\n  { number: 3, price: 150, name: 'Chocolate snack' },\\n  { number: 4, price: 250, name: 'Cookies' },\\n  { number: 5, price: 180, name: 'Gummy bears' },\\n  { number: 6, price: 500, name: 'Condoms' },\\n  { number: 7, price: 120, name: 'Crackers' },\\n  { number: 8, price: 220, name: 'Potato chips' },\\n  { number: 9, price: 80,  name: 'Small snack' },\\n];\\n\\n// Tests\\nTest.assertSimilar(vendingMachine(products, 500, 8), { product: 'Potato chips', change: [ 200, 50, 20, 10 ] });\\nTest.assertSimilar(vendingMachine(products, 500, 1), { product: 'Orange juice', change: [ 200, 200 ] });\\nTest.assertSimilar(vendingMachine(products, 200, 7), { product: 'Crackers', change: [ 50, 20, 10 ] });\\nTest.assertSimilar(vendingMachine(products, 100, 9), { product: 'Small snack', change: [ 20 ] });\\nTest.assertSimilar(vendingMachine(products, 1000, 6), { product: 'Condoms', change: [ 500 ] });\\nTest.assertSimilar(vendingMachine(products, 250, 4), { product: 'Cookies', change: [] });\\nTest.assertEquals(vendingMachine(products, 500, 0), 'Enter a valid product number');\\nTest.assertEquals(vendingMachine(products, 90, 1), 'Not enough money for this product');\\nTest.assertEquals(vendingMachine(products, 0, 0), 'Enter a valid product number');\",\"language\":\"javascript\",\"summary\":\"Your task is to create a function that simulates a vending machine.\\n\\nGiven an amount of money (in cents ¢ to make it simpler) and a productNumber, the vending machine should output the correct product name and give back the correct amount of change.\\n\\nThe coins used for the change are the following: [500, 200, 100, 50, 20, 10]\\n\\nThe return value is an object wit\",\"tags\":[\"arrays\",\"objects\",\"recursion\",\"loops\",\"interview\"],\"timestamp\":{\"$date\":1532134174945},\"title\":\"Vending Machine\",\"stats\":{\"completed\":{\"total\":280,\"ratings\":[2,2,2,2,2,2,2,2,2,2,2,1,2,3,1,2,2,3,3,1,2,2,1,2,3,2,2,2,1,2,2,2,1,3,2,3,2,3,3,3,2,2,3,0,3,3,4,3,2,3,1,3,4,2,3,3,2,3,3,3,0,3,2,2,2,3,2,3,2,3,3,2,2,3,3,3,2,3,3,4,3,3,2,2,3,3,2,2,4,1,3,2,3,1,3,2,3,3,3,3,4,3,2,3,3,4,4,4,3,3,2,4,0,2,1,3,2,3,3,2,3,2,4,3,4,4,2,2,4,3,2,1,4,1,0,4,2,2,2,1,3,2,3,3,2,3,3,3,4,2,3,2,2,4,3,3,3,3,4,2,2,3,5,4,3,2,2,4,3,2,4,2,3,2,2,4,3,0,4,2,3,2,3,3,4,3,1,3,3,1,2,3,4,2,1,3,3,2,3,0,3,3,3,2,3,3,5,3,3,2,4,3,2,4,2,3,3,2,2,3,4,2,2,1,2,2,1,4,4,1,4,3,2,2,3,4,4,3,3,3,3,3,1,1,3],\"rators\":[\"65dbBZynphj53nXqA\",\"FGEeCTorXbX3WvjFW\",\"gFq43udKKWvbupP8v\",\"XHngE5iScvztMpnR2\",\"mYjrPtziMQ4koSmYx\",\"ZZA6JdLEBxHGozyWP\",\"RNKWjAHrXt9AiMc3g\",\"xSFGYcLPYZCfWx88j\",\"tuyDaJzFy78jxvhCY\",\"FCNrB3bZzMD3q3Pe6\",\"gGjvvvevpFyDjEaQz\",\"TjWGnQbnTo8wccDrR\",\"yHHyhjt3WFoSR4jzN\",\"thEsZ7N6X8qfZMbcv\",\"HQuhas4KXrETxYk9o\",\"yHjpDrX6o6RLzAfYb\",\"SDtZFL5NzAoCPofXk\",\"d6r5S6hRQ2SJyPj3u\",\"XcHCqYmeoqxDsoucx\",\"ak5aPiT6QWpmbnPzD\",\"crpgyry7fwiZqkRsB\",\"7uKGHAbKjqTYdsmzj\",\"Jh6sPsgj8yHy95joL\",\"G7bdEb5gSLLR59Fvn\",\"Gsy7tjKKv62tbhLAr\",\"gsNrqAHNwLe5sEGfK\",\"dbSk7oiF8nfL4fGNZ\",\"8yoCjo93Hbggkeor9\",\"cxnifiEMb4ybRsgth\",\"iXKbjvSNBobRTciGA\",\"88x7G5vWFi3tZ5bn6\",\"wcjknenWdPRhrRScv\",\"cqaYfwbyE7TByjoqf\",\"BGfdMP555CegvzLus\",\"h4jFmtbFn92eA4649\",\"8xuMMGF7fyQWL2fKH\",\"Akq3fQcPRgPrWfsye\",\"PXunySGzuuc9Njydq\",\"b2LcXZ4nyWj8xpio2\",\"BTDyduiRYDSm5LyeD\",\"NYMbGbY57sRdhWSmf\",\"n5wubRfh6zh8QRymN\",\"CJnuSjyCBMTbTiibD\",\"EjPLq3QSJdGQFJdgW\",\"h8oHrjSdw2iwKYWpk\",\"gyB5wJihaSZCWKTCB\",\"EWn8w8P3nNh7knatY\",\"yjtdwc2AC4jA2RWtn\",\"5Zq3aGdvh4LHBvnJL\",\"eQdnBfe8riy82SNrK\",\"AasGs8AeX9Lcb9xJn\",\"DHwbkbzYNpmkSFT7u\",\"jqbm8L6895JgAtZ6H\",\"FHzvDACEZuAjRwL7v\",\"Gx9obhqfXPqYuC6Jd\",\"TvsWr5xYBWLmNSp6m\",\"FJsvM5yqKuK9yMk9P\",\"6BpBQnSGhzgvhXrEy\",\"6hAG5HctNqfLmK9ke\",\"mC9rTkiisLuHphFLH\",\"nGmLgqNsb7F3JdKmE\",\"Czph6ZM3JY2t9f2jD\",\"wQ25xzXqh4y3A8NBB\",\"JGBCMpnbbi5ztuFoX\",\"4bECT3r3cvCf3Spiv\",\"a777e8chPvJkY3tKa\",\"QozwRCt9hwyqeFB5i\",\"Es4eX2stRpyoXeC7f\",\"Rrb84KWhN5tjhMGMA\",\"JEfySjWfnyCpGAz6Z\",\"fwNHz9es6Mpzidc6M\",\"uigAJ9KT5muMWTDis\",\"5wWMqPaquGWz8SfQN\",\"skWWMief8Fi5RDJQZ\",\"sZ2eCa6pF6EN9PMmd\",\"4deyTem4Z3zgPLEv7\",\"dzSfaxKjksW83ipMk\",\"mHT2bJb5SByfJ8yKS\",\"veKWMS3ACmRWTjiLK\",\"aEm3Wvj2rFYRL8Lrb\",\"eFjGhq7C7bBKXjT6X\",\"c7uBxu2rgY77H5d79\",\"ttuGK7od8simjgmCJ\",\"Ek9PiwGewEGH6fcqz\",\"4Xv87xmdSnpYhi8hz\",\"jAB3aWnAqfpkehBqt\",\"kp2ZbCewZJAbfd7xv\",\"8s7EByT9ahbL6geNM\",\"kDufst8ZjrnoZax6P\",\"iDtDLdEPj4wEjhTij\",\"ybKXno4BJHrTbteGd\",\"dGugwhA6uwwjPGAa5\",\"iRWkFFriwxk5oAbDg\",\"hyx8iH2z3QySmyRKT\",\"pctW2DbX9NkGHoJWR\",\"M4vq8ATaS9Jg5X7iP\",\"6rMJ36PhSA6hKNeuC\",\"YPNbhQxe8jHobXqB4\",\"JuGJgYuj4eHc5xdaz\",\"qJTbsuToGEtaYnGxn\",\"vGKxRcDYDsXzTQuEQ\",\"aL9tAKvQDmPQwEhs3\",\"ZLYBfAascpgGofCPk\",\"CNc6rmwhbxkxEhHAp\",\"e9Cknxbx6o7Nb6REs\",\"wJTDDTE3TrmSXKP4d\",\"Ya3eHgs8x3unZRLpb\",\"8BJyXvRWcrvN3nttS\",\"AQSqD9oNv2uPfxZCR\",\"jemTNShfp6ymAs3pj\",\"oyB4Wr4EeZnoDaa8B\",\"yN3JmXhDHn2arWtr4\",\"kDRnukZut6Ka3zYfD\",\"TtrXnGzi9MyhLvWiz\",\"PPFmWzDiefzfekdcg\",\"s678Wirfor5uYL5T6\",\"ZTTJprKDvFqKGew7c\",\"Q6Z6pCzTYPLACwhj7\",\"jd2zmXboRJXbBsGdS\",\"649LDDhSKfmkPANRM\",\"vSPc7MGK5Poy8tSFp\",\"2CmFjvKifQtFwQq3R\",\"sHDcTJTsrxM3QnJij\",\"fJcWDZ4BD95hxgYFj\",\"xsDyJstYoBZRS8pJH\",\"DYXgNcw6Q8APRBKBR\",\"z5GXzFD9Wwgnm9Kxf\",\"jnRyhmiJeWHsqQYPh\",\"AvSqExzydkffeChJo\",\"RKKuw76K7sRBMouKq\",\"Kujn4WghBYxeRS9fs\",\"FKX989iurikcrr3zp\",\"va6WiXpvqoWg9Rhxp\",\"DDcnJucTJfub4vG9W\",\"iwbKfEqkoKaSZPuoT\",\"3Ry7DQLyLTrHMJKcu\",\"5nhmyqLy8M2Yn2HMR\",\"ShrXg4RHgnyFjzJ8w\",\"8WkLJXEzTDcg6c5Q5\",\"8SYDBRtkZuW3pdPtG\",\"WXH62RudYwuox8cNR\",\"fDhXeLoaQ9k6PXdSc\",\"QvEXmSEo3ANp3yPyH\",\"2SrnihpstXNKcekq7\",\"pd8dm7sWLW9cY6dYW\",\"9FD9oeiSqKPmK4ofc\",\"BkvzWZGdAeQttAMgy\",\"9gEWz76H8KmhN4yJj\",\"oH7uJsBnZv9b2mHMS\",\"KLHm8jegX5ESy4Ky2\",\"DToPSbMgnnzezSrrH\",\"BSAt2cnG4BwShiKc8\",\"FxZLpxHxJoZkZYdhW\",\"fN8LDFt6D2YTdYY6r\",\"vE5RDYKMwwoARS7Hu\",\"w93Q2XNPaSgxcfPka\",\"tAF9Gf6PiGogbZuWs\",\"hSdLkGCjqBc68JLnG\",\"Q4EL6M4E5sNQRG3sf\",\"SBBML7a39LmSyCyCX\",\"MW4gsgPJfaMEMyXPy\",\"CwBBXa8awfz8ePtwe\",\"rkk9SpEPAeFjEzjgK\",\"qvNk7pHSveLu3jqWw\",\"bC9LkKYMeH2cwigfy\",\"hvdKAwFwoKQxemmre\",\"GqXjHuGSAeuWhcBLJ\",\"dndKoBs5kZLYfkyow\",\"HYk5sqEqMeCoDAAAT\",\"SFjf6aoTJkSdJM7TD\",\"zgbAHjgAiWrETtRWJ\",\"zACQzkEpgkohp7Psw\",\"dDJg3ZwX9c3CsfZNR\",\"rhkJAaSJiZJKppdCc\",\"5oJ4oLan2nCFcPRBT\",\"ELGptLo5ccFEb6YZq\",\"d43guTbMuJQsDH4EK\",\"m4MLpE2z3gvQ7Hjso\",\"PK3QC2QpCz96AyrEY\",\"AMpQSjKsRqhCDyS2j\",\"Dd4MibaSEPy7br7fE\",\"QP26bMsAeKw7kKntH\",\"ej3T7GKpTZErYycE5\",\"u3T8WRFHARaBz7fZb\",\"zew9WyC4okpiBpHm9\",\"6Fggne7WfAxHdFqyH\",\"Hcyqetei9TKHGbLG9\",\"zet67gz7vASEWraoG\",\"oDtGiNqDMHmhHE3J8\",\"xG6ezoC9E2cJ7cPZf\",\"DRjizBEb8gyEKNqxW\",\"QiqcdQfduXjgGu57R\",\"m7LWuTTNaPQFvYtAx\",\"GsrjAqoAdLATJH9qD\",\"nceW5rvJha5KoyEed\",\"d7wadWmrw79nCMdCW\",\"bcANcsYiJ47dwh4ja\",\"qWZLE2s7aRDQsnZ4p\",\"dga8bA3cRwnoQjZuX\",\"LXKvttZpjJqNiZbea\",\"fbHvB6daxz45fbABo\",\"cTP9Ne3BiKSGTKowG\",\"d8JhF9zfpexkRnCea\",\"RE4Mm9T6Q9uygAxGS\",\"qQ2wtf7SQyJHj7KKp\",\"GjB5NPneH9zZHKkCd\",\"eE6p5gaENokRKMTao\",\"EB4kpFJhW23QfYZqu\",\"6wrcwkYQDCTnNMbq8\",\"Df3MfQDnbbxGHqThM\",\"ucbpgmh2LprzFMsj8\",\"Spwk7GP4hPyF76fDb\",\"SdNMJZ2mPpD934HHM\",\"MhfgjZr6pKq2xYrFR\",\"Z9jhP3WeN7jSf4aFs\",\"HZN6tMzWkNJjm4vyy\",\"hAADquTjtbRpNudHE\",\"P8bXFR4cHwFia9rNM\",\"EJXaAcika2bAcRAta\",\"xTjngWnFNWn4jJw7N\",\"44b4uio5c8xfBBwP5\",\"W3iKFwcuYkEf52psm\",\"LrcMEPYSk5Mfcrf25\",\"8deYTWWNwomcsj46f\",\"5m8bFwNcrMcu4zWHQ\",\"64KvwkCTaEh7c6K8W\",\"uR9uGPvqBgCH6n5CR\",\"MBHjmbgyc4o84znCH\",\"kkoFzTnkhC8cwgQ5s\",\"gGowiEZShX3htfwTW\",\"46SBqYjYrHQhMzp2Y\",\"sN2JyFeJCwfwwHPwF\",\"YfWyvMhdY3xcGrK5R\",\"3tdawZy6uoZKym4Hn\",\"59dfcrmNKbzcedwJS\",\"LwD3CyYSiBfg3mA4r\",\"Stc6aZz9Pku7BuhjW\",\"9SwYyvJQJBqdKiJG5\",\"bX6tpTCjwoi6XMMbK\",\"JmEZmcBLLwCFdHZEh\",\"ahAe7pcyjYGzcDRm4\",\"FWJASZTuiRgeA9YN4\",\"8xaTLiFGg4mfPbhwG\",\"bcvatMcaeE77Yx8bn\",\"JTvD2pxDKyj38LTxj\",\"ACvRjy8YfbZN9Bo5r\",\"R6xKfvMpMLQ4jfB8A\",\"YXSszexbtswBGchZA\",\"GnscAvB3cswLvRQ6Y\",\"5QFAiep6RrWgJEbJZ\",\"uNpadiPzKLJSiE5AX\",\"hNEhHd8qodq4P3h2g\",\"WN92h3roRPcMkMnNm\"],\"quality\":[5,5,5,5,4,4,5,5,5,5,5,3,5,4,5,5,4,4]},\"tests\":{\"score\":0,\"voters\":[\"65dbBZynphj53nXqA\"]},\"instructions\":{\"score\":-14.3,\"voters\":[\"65dbBZynphj53nXqA\",\"yjffWxryA6SN4hddD\",\"tXzqHX2abH7KJQqKg\"]},\"flags\":0},\"isHidden\":false,\"quality\":4.611111111111111,\"family\":[{\"_id\":\"PYXbvQh9W3c9i72xx\",\"language\":\"javascript\"},{\"_id\":\"dKLJ4uvssAJwRDtCo\",\"language\":\"python3\"}]}}"]