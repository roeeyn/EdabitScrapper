a["{\"msg\":\"result\",\"id\":\"1222\",\"result\":{\"_id\":\"3hgkBd68EyYQF9YxG\",\"author\":\"meesie1\",\"authorId\":\"FNBB7APikaxR3DtvN\",\"code\":\"function calculateDamage(yourType, opponentType, attack, defense){\\n\\t\\n}\",\"difficulty\":2.0434782608695654,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"iZ8BfuyR6wnEfzcj2\",\"instructions\":\"It's a Pokemon battle! Your task is to calculate the damage that a particular move would do using the following formula (not the actual one from the game):\\n\\n```\\ndamage = 50 * (attack / defense) * effectiveness\\n```\\n\\n- attack = your attack power\\n- defense = the opponent's defense\\n- effectiveness = the effectiveness of the attack based on the matchup (see explanation below)\\n\\nEffectiveness:\\n\\nAttacks can be super effective, neutral, or not very effective depending on the matchup. For example, water would be super effective against fire, but not very effective against grass.\\n\\n- Super effective: 2x damage\\n- Neutral: 1x damage\\n- Not very effective: 0.5x damage\\n\\nTo prevent this challenge from being tedious, you'll only be dealing with four types: fire, water, grass, and electric. Here is the effectiveness of each matchup:\\n\\n- fire > grass\\n- fire < water\\n- fire = electric\\n- water < grass\\n- water < electric\\n- grass = electric\\n\\nThe function you must implement takes in:\\n\\n- your type\\n- the opponent's type\\n- your attack power\\n- the opponent's defense\\n\\n### Examples\\n```\\ncalculateDamage(\\\"fire\\\", \\\"water\\\", 100, 100) ➞ 25\\n\\ncalculateDamage(\\\"grass\\\", \\\"fire\\\", 35, 5) ➞ 175\\n\\ncalculateDamage(\\\"electric\\\", \\\"fire\\\", 100, 100) ➞ 50\\n```\\n\\n### Notes\\nAny type against itself is not very effective. Also, assume that the relationships between different types are symmetric (if A is super effective against B, then B is not very effective against A).\",\"isHidden\":false,\"lab\":\"Test.assertEquals(calculateDamage(\\\"fire\\\", \\\"water\\\", 100, 100), 25)\\nTest.assertEquals(calculateDamage(\\\"grass\\\", \\\"water\\\", 100, 100), 100)\\nTest.assertEquals(calculateDamage(\\\"electric\\\", \\\"fire\\\", 100, 100), 50)\\nTest.assertEquals(calculateDamage(\\\"grass\\\", \\\"electric\\\", 57, 19), 150)\\nTest.assertEquals(calculateDamage(\\\"grass\\\", \\\"water\\\", 40, 40), 100)\\nTest.assertEquals(calculateDamage(\\\"grass\\\", \\\"fire\\\", 35, 5), 175)\\nTest.assertEquals(calculateDamage(\\\"fire\\\", \\\"electric\\\", 10, 2), 250)\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,2,0,1,2,0,3,2,2,2,1,1,2,2,0,2,2,0,3,2,1,3,4,3,1,2,2,1,2,2,2,2,1,2,2,2,3,2,2,1,1,2,0,2,1,2,2,3,2,1,2,3,5,2,0,3,2,3,3,3,3,3,2,3,2,1,3,1,1,2,2,3,2,2,3,2,3,1,2,2,4,3,3,5,1,3,3],\"rators\":[\"FNBB7APikaxR3DtvN\",\"5Zq3aGdvh4LHBvnJL\",\"n5wubRfh6zh8QRymN\",\"yjtdwc2AC4jA2RWtn\",\"6BpBQnSGhzgvhXrEy\",\"rSJGLYSXMuu3RWjun\",\"RE4Mm9T6Q9uygAxGS\",\"FJsvM5yqKuK9yMk9P\",\"vtHbevf2tHqe6mRxX\",\"AasGs8AeX9Lcb9xJn\",\"pi76g3eRpnKrhee2a\",\"nCvWGvGzn2Rrjm4BD\",\"9XnGoq9Tv6ut3zTtH\",\"GCsLzWAhLvniQqR3J\",\"cp3X8hk8yNME7qoD9\",\"2ZFoLTxcCARhwc8xX\",\"65dbBZynphj53nXqA\",\"zw7g7T8wE5R5CBhXr\",\"ZW6QdvP3BxwKr4Y9E\",\"z5ebtimXwFFJdYxoa\",\"mHT2bJb5SByfJ8yKS\",\"u6bK5uu4fynDEKuun\",\"EPkSaWoZ77tPNjs36\",\"ZcqshY58sGEEvgeaq\",\"nkH3HfJXLMNcBMM79\",\"7gZKfvwaeqsGKXMEN\",\"pLpcDC3EYx2DDQSdt\",\"u9cRf5kvtpRB5ffB3\",\"3pb8q4K4jv6jta45d\",\"PGCDJpQMN8Sjn9Gm6\",\"nhWLv6D8eZJ5ggKKX\",\"nAmJEX7BkHLd9LsG2\",\"aEm3Wvj2rFYRL8Lrb\",\"2zKQWLmEBw8FBs4ZL\",\"v2w9GN4jHP2fgYdeE\",\"Yzh7zNiyG7LM9vnAj\",\"kp2ZbCewZJAbfd7xv\",\"gqyveiDrZdwBLdkAq\",\"4fiWpdPMsXkC8nJK4\",\"zTymdQWoQPcAwKDYr\",\"3eXYEKA5XqoKjCNH2\",\"Mgs9j4pNYeGKG2d92\",\"E2hpke7mHxAWsw5t9\",\"Ya3eHgs8x3unZRLpb\",\"BdvdJYwHZr7JpkHsn\",\"CNc6rmwhbxkxEhHAp\",\"g4NCSxxHqHCGMpWwT\",\"Gc2bmsof5vD2Hsgqv\",\"AFfw7cGg83uYk2Miy\",\"NWxAhzhmRzuZetq2n\",\"Yp7uvStL97cC9fKkY\",\"evTTY9hwrtogaNxXn\",\"csgxwerMgZXe2wLqh\",\"3Gf7ikLijfoxabiPY\",\"QRv96jmNaYsWkxQEG\",\"NGvCPuMiAP3xrRLfB\",\"nBJve5CzG6WAw7WFQ\",\"gXTAie79kiw28tx5u\",\"aAFajcygMskKDBPsH\",\"jyoLggHk8xQKZuoQC\",\"fj5rs7esoMvJxtXRu\",\"fd6dw7u2M62FKXvFC\",\"kYmKE9caX2i6iRBcP\",\"wcd6236wYeEb99Yof\",\"5nhmyqLy8M2Yn2HMR\",\"DPi9QGLctq2y76KuE\",\"CLsovGp7aCDJrfXoz\",\"RoGGD5cpHb4ftdLDv\",\"oDtGiNqDMHmhHE3J8\",\"n4Y5EEGCjmrK99yrt\",\"8BJyXvRWcrvN3nttS\",\"QuQA6XbCGe6soexaJ\",\"GpqPxePMyP6mB8bpD\",\"chzgiWZQt3ZHevcPD\",\"v2GZZgHjSA3jiuaP8\",\"SCY9Qyb83vz8ePBrZ\",\"uxKGACwmZ6FNZsMwE\",\"LwD3CyYSiBfg3mA4r\",\"jnyub52Fi79drGvow\",\"FfT8pmBnMrgZ5h3NT\",\"3WtHp4MBzciz4AE8M\",\"vMjeWiraDcJJJypo8\",\"LTcTsLLoYkAMWW8TP\",\"SBZkkRJBLcN8q7guG\",\"Lq3n2ooEB3o8u8hLd\",\"PT5pu7kJsgp9TDNGv\",\"pbHgAu8FW97YSvskE\",\"iqmPb9JuJDgTFeR8Q\",\"ThaiAKWWDw2W4QfJh\",\"HsCoAbZ2Kajk9qyie\",\"7Gx4Grdo5nEmz3DBw\",\"8xaTLiFGg4mfPbhwG\",\"333pxZkR95ZMfXzXc\",\"juZt5W2shNAjnBzE2\"],\"total\":103,\"quality\":[5,4,5,3,5,5,5]},\"flags\":0},\"summary\":\"It's a Pokemon battle! Your task is to calculate the damage that a particular move would do using the following formula (not the actual one from the game):\\n\\ndamage = 50 * (attack / defense) * effectiveness\\n\\nattack = your attack power\\ndefense = the opponent's defense\\neffectiveness = the effectiveness of the attack based on the matchup (see explanation below)\\n\\nE\",\"tags\":[\"conditions\",\"math\",\"logic\",\"games\"],\"timestamp\":{\"$date\":1580135236667},\"title\":\"Pokemon Damage Calculator\",\"quality\":4.571428571428571,\"family\":[{\"_id\":\"3hgkBd68EyYQF9YxG\",\"language\":\"javascript\"},{\"_id\":\"pzQXHMqizBmaLDCHc\",\"language\":\"python3\"},{\"_id\":\"w3K2JzhBhDp63r9Yi\",\"language\":\"ruby\"}]}}"]