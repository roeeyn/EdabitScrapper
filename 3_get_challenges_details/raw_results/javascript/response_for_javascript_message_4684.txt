a["{\"msg\":\"result\",\"id\":\"1095\",\"result\":{\"_id\":\"zk8Xrof2x55u9FBJ5\",\"author\":\"0osh4d0wo0\",\"authorId\":\"XHngE5iScvztMpnR2\",\"code\":\"function createSquare(length) {\\n\\t\\n}\",\"difficulty\":1.7607361963190185,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"DSQ24FuXvFixEyHZp\",\"instructions\":\"Create a function that takes a number and returns a string like square.\\n\\n### Examples\\n```\\ncreateSquare(-1) ➞ \\\"\\\"\\n\\ncreateSquare(0) ➞ \\\"\\\"\\n\\ncreateSquare(1) ➞ \\\"#\\\"\\n\\ncreateSquare(2) ➞ \\\"##\\\\n##\\\"\\n\\ncreateSquare(3) ➞ \\\"###\\\\n# #\\\\n###\\\"\\n\\ncreateSquare(4) ➞ \\\"####\\\\n#  #\\\\n#  #\\\\n####\\\"\\n\\n```\\n\\n```\\n\\\"####\\n#  #\\n#  #\\n####\\\"\\n```\\n\\n### Notes\\nSquare width <= 16383\",\"lab\":\"Test.assertEquals(createSquare(-1), \\\"\\\");\\nTest.assertEquals(createSquare(0), \\\"\\\");\\nTest.assertEquals(createSquare(null), \\\"\\\");\\nTest.assertEquals(createSquare(1), \\\"#\\\");\\nTest.assertEquals(createSquare(2), \\\"##\\\\n##\\\");\\nTest.assertEquals(createSquare(3), \\\"###\\\\n# #\\\\n###\\\");\\nTest.assertEquals(createSquare(4), \\\"####\\\\n#  #\\\\n#  #\\\\n####\\\");\\nTest.assertEquals(createSquare(10), \\\"##########\\\\n#        #\\\\n#        #\\\\n#        #\\\\n#        #\\\\n#        #\\\\n#        #\\\\n#        #\\\\n#        #\\\\n##########\\\");\\nTest.assertEquals(createSquare(20), \\\"####################\\\\n#                  #\\\\n#                  #\\\\n#                  #\\\\n#                  #\\\\n#                  #\\\\n#                  #\\\\n#                  #\\\\n#                  #\\\\n#                  #\\\\n#                  #\\\\n#                  #\\\\n#                  #\\\\n#                  #\\\\n#                  #\\\\n#                  #\\\\n#                  #\\\\n#                  #\\\\n#                  #\\\\n####################\\\");\\nTest.assertEquals(createSquare(12), \\\"############\\\\n#          #\\\\n#          #\\\\n#          #\\\\n#          #\\\\n#          #\\\\n#          #\\\\n#          #\\\\n#          #\\\\n#          #\\\\n#          #\\\\n############\\\");\\nTest.assertEquals(createSquare(50), \\\"##################################################\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n#                                                #\\\\n##################################################\\\");\\nTest.assertEquals(createSquare(30), \\\"##############################\\\\n#                            #\\\\n#                            #\\\\n#                            #\\\\n#                            #\\\\n#                            #\\\\n#                            #\\\\n#                            #\\\\n#                            #\\\\n#                            #\\\\n#                            #\\\\n#                            #\\\\n#                            #\\\\n#                            #\\\\n#                            #\\\\n#                            #\\\\n#                            #\\\\n#                            #\\\\n#                            #\\\\n#                            #\\\\n#                            #\\\\n#                            #\\\\n#                            #\\\\n#                            #\\\\n#                            #\\\\n#                            #\\\\n#                            #\\\\n#                            #\\\\n#                            #\\\\n##############################\\\");\\nTest.assertEquals(createSquare(21), \\\"#####################\\\\n#                   #\\\\n#                   #\\\\n#                   #\\\\n#                   #\\\\n#                   #\\\\n#                   #\\\\n#                   #\\\\n#                   #\\\\n#                   #\\\\n#                   #\\\\n#                   #\\\\n#                   #\\\\n#                   #\\\\n#                   #\\\\n#                   #\\\\n#                   #\\\\n#                   #\\\\n#                   #\\\\n#                   #\\\\n#####################\\\");\\nTest.assertEquals(createSquare(33), \\\"#################################\\\\n#                               #\\\\n#                               #\\\\n#                               #\\\\n#                               #\\\\n#                               #\\\\n#                               #\\\\n#                               #\\\\n#                               #\\\\n#                               #\\\\n#                               #\\\\n#                               #\\\\n#                               #\\\\n#                               #\\\\n#                               #\\\\n#                               #\\\\n#                               #\\\\n#                               #\\\\n#                               #\\\\n#                               #\\\\n#                               #\\\\n#                               #\\\\n#                               #\\\\n#                               #\\\\n#                               #\\\\n#                               #\\\\n#                               #\\\\n#                               #\\\\n#                               #\\\\n#                               #\\\\n#                               #\\\\n#                               #\\\\n#################################\\\");\\nTest.assertEquals(createSquare(80), \\\"################################################################################\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n#                                                                              #\\\\n################################################################################\\\");\\nTest.assertEquals(getLength(createSquare(8000)), 64007999);\\nTest.assertEquals(getLength(createSquare(4025)), 16204649);\\nTest.assertEquals(getLength(createSquare(3018)), 9111341);\\nTest.assertEquals(getLength(createSquare(2020)), 4082419);\\nTest.assertEquals(getLength(createSquare(9856)), 97150591);\\nTest.assertEquals(getLength(createSquare(7542)), 56889305);\\nTest.assertEquals(getLength(createSquare(12540)), 157264139);\\nTest.assertEquals(getLength(createSquare(13021)), 169559461);\\nTest.assertEquals(getLength(createSquare(16200)), 262456199);\\nTest.assertEquals(getLength(createSquare(16383)), 268419071);\\nTest.assertEquals(getLength(createSquare(10235)), 104765459);\\nTest.assertEquals(getLength(createSquare(15465)), 239181689);\\n\\nfunction getLength(string){\\n  if (typeof(string) != \\\"string\\\"){\\n    return 0;\\n  } else {\\n    return string.length;\\n  }\\n}\",\"language\":\"javascript\",\"summary\":\"Create a function that takes a number and returns a string like square.\\n\\nExamples\\ncreateSquare(-1) ➞ \\\"\\\"\\n\\ncreateSquare(0) ➞ \\\"\\\"\\n\\ncreateSquare(1) ➞ \\\"#\\\"\\n\\ncreateSquare(2) ➞ \\\"##\\\\n##\\\"\\n\\ncreateSquare(3) ➞ \\\"###\\\\n# #\\\\n###\\\"\\n\\ncreateSquare(4) ➞ \\\"####\\\\n#  #\\\\n#  #\\\\n####\\\"\\n\\n\\\"\\n\\n####\\\"\\n\\nNotes\\nSquare width <= 16383\",\"tags\":[\"strings\",\"formatting\"],\"timestamp\":{\"$date\":1533549064200},\"title\":\"String Like Square\",\"stats\":{\"completed\":{\"total\":164,\"ratings\":[0,0,0,0,0,0,0,0,0,0,2,0,3,2,0,2,1,1,5,0,3,2,1,3,1,2,2,2,0,1,2,2,2,1,1,2,1,2,3,2,2,2,2,1,1,2,2,2,1,2,2,3,2,1,1,2,2,2,2,3,2,0,1,1,3,5,1,1,2,2,2,2,1,2,1,1,2,1,2,2,3,3,2,2,2,2,2,2,1,2,3,1,3,2,3,2,3,2,2,1,3,2,1,2,0,5,3,0,0,2,2,2,2,0,1,2,2,1,3,3,2,2,2,2,2,2,1,1,2,3,1,3,2,2,2,1,2,2,2,2,2,2,2,0,2,2,2,3,2,2,2,3,3,2,2,2,2,5,2,1,0,3,2],\"rators\":[\"XHngE5iScvztMpnR2\",\"65dbBZynphj53nXqA\",\"MPbyptpcffPaKxMA2\",\"Euhr5S6HctxxLhGbD\",\"ce2b5tF8Na9x8nXfn\",\"LYm3mTiW2oHzLznj6\",\"YAzwLNgqc9JpybGzh\",\"khzfFceSLf4vmCBX3\",\"yd2yFMK8CDZ9ewEHS\",\"2eXRxTkbcN3gFJBnX\",\"FERYksMyZvmR4g6kH\",\"Xm98eewuSh7Qoz6Qm\",\"ggj8NF9hiYrJfLqGn\",\"kmM6uKh4SnutNDReM\",\"mfyPouF5dzaPZfMZK\",\"AgQburWndXwEhgomM\",\"88zW5YpRhug9iffEr\",\"qQwgxBijwJ85M5zSi\",\"jWXdurfxtiaCq64sz\",\"hi7Hvtq2mJfkXEGF2\",\"ZZA6JdLEBxHGozyWP\",\"3Hr7odFaLvzbALrJx\",\"f2WHsJ6qZimgyJ6Ci\",\"6ovgziFoNLKcQ5Ap8\",\"RaTncQbvwrCMxaaSB\",\"9ceudyjiXLuCtkunE\",\"uXRecNQvJmcierSxo\",\"FGEeCTorXbX3WvjFW\",\"EnaR9sWntSXGbKGZn\",\"thEsZ7N6X8qfZMbcv\",\"HWdhCoAC5YH78SqFA\",\"kKytYWxQM6ajk5ysB\",\"MmpisT9nmzPJDQuRC\",\"enuhRD8zZn4QDNTc4\",\"SjY6a2v6jMjGraDKz\",\"hr9rERhkPtGbbgqdT\",\"Y8zD7oXK6jJSr4Gnu\",\"HQuhas4KXrETxYk9o\",\"g5noFWaoRtZNcEEAW\",\"CX5honsxBcB63L6Ft\",\"gb2Fr2NWvg5SJNjqj\",\"6ir9H6TvDxyGL4kvG\",\"o5unhNGDunoN8zgk3\",\"AjvZ4h696CxhKuptb\",\"KpXzNmd3gyz2Mwka5\",\"yHjpDrX6o6RLzAfYb\",\"FnKaqsKZiNvWcyryx\",\"TzA2B5NYnbpJDxL2y\",\"SDtZFL5NzAoCPofXk\",\"8WnRWJbE8o5CLPz2J\",\"N7KL9CQQTuxyLwxQN\",\"hy63rX7K3hEfyp8B4\",\"iBv4YcmvMGFoXgXTN\",\"eXaGygfSMr2DBT2Y8\",\"G7bdEb5gSLLR59Fvn\",\"XcHCqYmeoqxDsoucx\",\"4erQYN2mguZgyg4tt\",\"ak5aPiT6QWpmbnPzD\",\"Jh6sPsgj8yHy95joL\",\"x9gN5FHswMPZpXuRK\",\"pXtv3PjRH28xHJq5n\",\"zgoq9MhrL2h75DAMA\",\"qqPkSyFbmCNGDc2c4\",\"xazeYndpYNBn7oo3Y\",\"yftXWPRQYWDH9KPoA\",\"bbbpNxM3hgGMCqMn8\",\"g4K6nM72TtXLKog5x\",\"SYEuojZtP6yLXryHv\",\"2innwjWqxJHo4eRGh\",\"KzMMvGnXcWGTmRE7F\",\"WcJLHTiGQ3PjEQaGh\",\"Nd7Bnx9zF57gn3vLp\",\"EjPLq3QSJdGQFJdgW\",\"wcjknenWdPRhrRScv\",\"KPDPaGaJ4jGtRusF2\",\"bjn5DTzzaWCP5BDgX\",\"4pagg6vw2Cjepv7tN\",\"EWn8w8P3nNh7knatY\",\"RE4Mm9T6Q9uygAxGS\",\"n5wubRfh6zh8QRymN\",\"S7R7voZRxnWjCn8pi\",\"uhP3Z8KkPxySxn2n7\",\"CDMRRwcZ3h4NJ5tww\",\"fmLzKJTPWvtGRAaAN\",\"cTasoJQG2iA6FvuK4\",\"CJnuSjyCBMTbTiibD\",\"vKch2w3b4keMd84jj\",\"eomLS3wh6tQPN8jtH\",\"5GWkiNRN6xMuRu7Dg\",\"rTRvHndHZKKRkb9w5\",\"FJsvM5yqKuK9yMk9P\",\"E3fyZ23p26CcvHvuR\",\"7gZKfvwaeqsGKXMEN\",\"Q9KQomTTPBsrkAL6c\",\"Akq3fQcPRgPrWfsye\",\"zw7g7T8wE5R5CBhXr\",\"e8ftyJ6nKRtZDwGWJ\",\"yjtdwc2AC4jA2RWtn\",\"R4JQmeA6cYyfXbmLF\",\"5Zq3aGdvh4LHBvnJL\",\"6BpBQnSGhzgvhXrEy\",\"gSpcNJ8znvGGfWsQH\",\"AasGs8AeX9Lcb9xJn\",\"3awyiorYPgCqqP7Sr\",\"DHwbkbzYNpmkSFT7u\",\"fh6Y92DDQn5oFoyt5\",\"EoNHgbWsF6ZQF4eYr\",\"BdvdJYwHZr7JpkHsn\",\"cRpaCxYRmGcN3Nsoj\",\"2CvHJcA9aXt9pvZwA\",\"sbme4fRJjjBjYXRbY\",\"ih2aGaqkMaagTgyL2\",\"8BFSTCnoe2QggN64c\",\"PytNZK9mNiRiZxPrm\",\"5YCX58nhHT8oRCHyy\",\"mHT2bJb5SByfJ8yKS\",\"zTZtM9jRsu8eXie6s\",\"pi76g3eRpnKrhee2a\",\"YER6iBcpJCuhgrYDN\",\"vtHbevf2tHqe6mRxX\",\"2ZFoLTxcCARhwc8xX\",\"eQXwk5zGckM8tCWYH\",\"E6DBfkTgHuPsDWdG8\",\"a777e8chPvJkY3tKa\",\"Nua6T3dBurBy3Qfg9\",\"buX4mCQhtXCfBjeno\",\"q6jQE5ohhrxtucMJf\",\"nkH3HfJXLMNcBMM79\",\"pLpcDC3EYx2DDQSdt\",\"QRv96jmNaYsWkxQEG\",\"cLeS8SHn9h3hLTpvF\",\"r7mZLgpQWzRiGddL5\",\"7wtuhPesfhcYsfZaZ\",\"ij9YRJvZz6WbqcGXS\",\"Po3v3dHCk6wYGKMwi\",\"aEm3Wvj2rFYRL8Lrb\",\"Ya3eHgs8x3unZRLpb\",\"2tCCFm5iefjrRSaxv\",\"kp2ZbCewZJAbfd7xv\",\"Nb6LYPoQP6KJZt8mz\",\"CNc6rmwhbxkxEhHAp\",\"g4NCSxxHqHCGMpWwT\",\"HAGQxRBLa2Aozqrch\",\"tAF9Gf6PiGogbZuWs\",\"AFfw7cGg83uYk2Miy\",\"Yp7uvStL97cC9fKkY\",\"nDCNsJvKvsAS5F8PS\",\"3Gf7ikLijfoxabiPY\",\"M4vq8ATaS9Jg5X7iP\",\"u9cRf5kvtpRB5ffB3\",\"2Qk2mFu9HBFzrB24i\",\"npp5hesJrst6ghKSM\",\"J7d397iB5GuWRAMfg\",\"srJ34BaybkQh3qRkM\",\"8BJyXvRWcrvN3nttS\",\"STipuJs6kBvPqqsSE\",\"oDtGiNqDMHmhHE3J8\",\"nBJve5CzG6WAw7WFQ\",\"gXTAie79kiw28tx5u\",\"jyoLggHk8xQKZuoQC\",\"HpfaNWBYpnsQRAPQn\",\"bfYmA3LMvhSrK59cn\",\"K45zPJxsABuA3WSyj\",\"LwD3CyYSiBfg3mA4r\",\"LPZ2QKCoB8q6rG25c\"],\"quality\":[3,5,5,5,5,4,5,5,5,5,5]},\"tests\":{\"score\":-6.9,\"voters\":[\"XHngE5iScvztMpnR2\",\"YidXFQ8GDeKoP8Eto\",\"EnaR9sWntSXGbKGZn\"]},\"instructions\":{\"score\":-14.350000000000001,\"voters\":[\"XHngE5iScvztMpnR2\",\"MmXaEWtQ4dK7XkYzp\",\"nJvLS9XDG8cE7hXNF\",\"vWL85dThfgWxggXEe\",\"43zsGihE3EeW39aAZ\",\"ndCzpFcQMNsjrFw2y\",\"YqR7dicXoLdHsuRgp\",\"HBncRrBK2t3xM7bRb\",\"S6nh9PcEXRdbMLsFa\",\"Shxo3njA9eX3iRbA8\",\"gc83XDJEavPCDGRiu\",\"AxtMTm4MXZj7j5TMF\",\"ZBH5CmHTs5HpKd6fx\",\"PW268rN65goR5ocxb\",\"qEK352uQp8ByfYRGd\",\"LhG6hMpi2Fn9z3n4n\",\"thEsZ7N6X8qfZMbcv\",\"qqPkSyFbmCNGDc2c4\",\"gGETo2x9dY5TsWc2b\"]},\"flags\":0},\"isHidden\":false,\"quality\":4.7272727272727275,\"family\":[{\"_id\":\"zk8Xrof2x55u9FBJ5\",\"language\":\"javascript\"},{\"_id\":\"vuSXW3iEnEQNZXjAP\",\"language\":\"python3\"},{\"_id\":\"8s8HkExsqBR9xgEKn\",\"language\":\"ruby\"}]}}"]