a["{\"msg\":\"result\",\"id\":\"1347\",\"result\":{\"_id\":\"zptHytXMgKcAjr4TH\",\"author\":\"tejaakula2010\",\"authorId\":\"QNnRGeEwhJHDsdvFd\",\"code\":\"function direction(arr) {\\n\\t\\n}\",\"difficulty\":2.1237113402061856,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"wYm2EeGFHZsugwGiP\",\"instructions\":\"You will be given an array of string `\\\"east\\\"` formatted differently every time. Create a function that returns `\\\"west\\\"` wherever there is `\\\"east\\\"`. Format the string according to the input. Check the examples below to better understand the question.\\n\\n### Examples\\n```\\ndirection([\\\"east\\\", \\\"EAST\\\", \\\"eastEAST\\\"]) ➞ [\\\"west\\\", \\\"WEST\\\", \\\"westWEST\\\"]\\n\\ndirection([\\\"eAsT EaSt\\\", \\\"EaSt eAsT\\\"]) ➞ [\\\"wEsT WeSt\\\", \\\"WeSt wEsT\\\"]\\n\\ndirection([\\\"east EAST\\\", \\\"e a s t\\\", \\\"E A S T\\\"]) ➞ [\\\"west WEST\\\", \\\"w e s t\\\", \\\"W E S T\\\"]\\n```\\n\\n### Notes\\nThe input will only be `\\\"east\\\"` in different formats.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertSimilar(direction([\\\"east\\\", \\\"EAST\\\", \\\"eastEAST\\\"]), [\\\"west\\\", \\\"WEST\\\", \\\"westWEST\\\"])\\nTest.assertSimilar(direction([\\\"eAsT EaSt\\\", \\\"EaSt eAsT\\\"]) , [\\\"wEsT WeSt\\\", \\\"WeSt wEsT\\\"])\\nTest.assertSimilar(direction([\\\"east EAST\\\", \\\"e a s t\\\", \\\"E A S T\\\"]), [\\\"west WEST\\\", \\\"w e s t\\\", \\\"W E S T\\\"])\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[3,3,3,3,3,3,1,1,2,3,2,3,1,3,0,2,2,3,2,0,2,3,2,2,1,3,1,3,2,2,1,0,3,2,1,2,2,0,3,2,0,3,3,0,2,2,2,3,3,3,2,2,0,2,3,2,2,2,2,0,2,2,2,1,2,3,2,3,2,2,2,2,3,2,2,3,3,2,0,2,2,3,3,2,3,1,1,2,3,3,3,2,3,5,3,4,3],\"rators\":[\"QNnRGeEwhJHDsdvFd\",\"yjtdwc2AC4jA2RWtn\",\"aEm3Wvj2rFYRL8Lrb\",\"rC7kdm3SsSX9udEQk\",\"kp2ZbCewZJAbfd7xv\",\"mHT2bJb5SByfJ8yKS\",\"DMKGmgv3dXruCSjXi\",\"hcm8sL8mNJTSfTdgE\",\"dk2aGfRcWM4ybXLaP\",\"yuLxi2qBJvMnwgdgJ\",\"65dbBZynphj53nXqA\",\"RE4Mm9T6Q9uygAxGS\",\"FJsvM5yqKuK9yMk9P\",\"r7mZLgpQWzRiGddL5\",\"n5wubRfh6zh8QRymN\",\"zNN2fW2pJGpTxBgzx\",\"Nb6LYPoQP6KJZt8mz\",\"vewKwcMeGuk3p3MsN\",\"vt88eKvFz6ES8sbrD\",\"bYSFPCS8hHE6pCbRg\",\"buX4mCQhtXCfBjeno\",\"JsRTAwWK7Nikj4sKA\",\"8raviPK67KKxzQWcF\",\"vn6nR36mdfY8z2zKx\",\"s7Qqx4Jnuq85iB7Lw\",\"QRv96jmNaYsWkxQEG\",\"4Xv87xmdSnpYhi8hz\",\"BdvdJYwHZr7JpkHsn\",\"8BJyXvRWcrvN3nttS\",\"CNc6rmwhbxkxEhHAp\",\"JX3z5Mx8p4KN8GLud\",\"dGugwhA6uwwjPGAa5\",\"ct42f2gGpMXSd9hXM\",\"yCeddtASCT5NFPJTP\",\"pGh7WykiPe26fHJYv\",\"ThGTEw4SiMApKtxik\",\"E6DBfkTgHuPsDWdG8\",\"4jM32RhDGbWLeEBMW\",\"PNaLsSGwFfxXmrsG9\",\"g4NCSxxHqHCGMpWwT\",\"tfYpJ66Lq7Y432Nzq\",\"8s5Bdrn7RTga7DL6x\",\"FGEeCTorXbX3WvjFW\",\"477x24BHagvCWeCsS\",\"tAF9Gf6PiGogbZuWs\",\"PGCDJpQMN8Sjn9Gm6\",\"zw7g7T8wE5R5CBhXr\",\"Akq3fQcPRgPrWfsye\",\"Po3v3dHCk6wYGKMwi\",\"9oPfGpc74rAstazB6\",\"e9Cknxbx6o7Nb6REs\",\"xMxdp5oCxmeuYxhpa\",\"K9aHdd5ReP4JJwNKA\",\"Ryodq598CxEMM2ZFW\",\"4XxJxQkB5mNTLY2qk\",\"5NGxHLcQ8Af2RJ4TN\",\"EAuL56kpyLytw4RcR\",\"rS25dFKwhb6Honnue\",\"bX6tpTCjwoi6XMMbK\",\"QAZ5DGaWWYhku4BNz\",\"N82kEBvpFE5FjbHrk\",\"6wcsoqgMKfZ7xjSgn\",\"mwg8jvMHHmQiQRrbr\",\"2ZabBuAKvgS9qTSM7\",\"WdLW2YLhL2kmSqKgK\",\"u9cRf5kvtpRB5ffB3\",\"XrN688tKMi8qqsNFK\",\"XtZfZuXwcaivjtS3T\",\"6P9KgzXeJtZ6ejQcu\",\"cyHWbRK7EZGXQHGjS\",\"hMgwdeNZwDutAFutj\",\"eKSJgCaiy4ReJWXTg\",\"MT26yxj3YX95DsyLj\",\"DHwbkbzYNpmkSFT7u\",\"RKKuw76K7sRBMouKq\",\"4p2sARSZNNnKqjAT6\",\"DPi9QGLctq2y76KuE\",\"PTo9qt93YqGvL8fCa\",\"ouabBNowvhzMnMKqa\",\"PytNZK9mNiRiZxPrm\",\"xges5rijESfvNfJ7w\",\"2Pzpsip3QjfZLWCbq\",\"jd9sRTnsyeKpPggba\",\"RtPhDuwmvWNHiBxmG\",\"wJTDDTE3TrmSXKP4d\",\"Xk2g4CNFAnYcvxiSr\",\"srJ34BaybkQh3qRkM\",\"oyB4Wr4EeZnoDaa8B\",\"qSgnv4aebmDaxrX8H\",\"HyKRY7xroLjYKF7PH\",\"Yp7uvStL97cC9fKkY\",\"c7uBxu2rgY77H5d79\",\"GsrjAqoAdLATJH9qD\",\"k6QB6fzbj4LsWktRL\",\"vuceuxE9fNajx6Z3A\",\"QjGNkRM3Xc78yShJN\",\"hCfruGWxw7v64teEr\",\"s9qcJASB9WKPWaQzi\",\"rSJGLYSXMuu3RWjun\",\"sN2JyFeJCwfwwHPwF\",\"iJC8PmpzSyTnEDqw5\",\"Ns6hPB6u4f8LYGHRe\",\"2P5vWxdr4qQiRxdPN\",\"5hHf2e9zimbmxMqqF\",\"pi76g3eRpnKrhee2a\",\"ZcJm2kuqJnN3CXFaR\",\"r7T4cQH4N8ipY4cgi\",\"Ya3eHgs8x3unZRLpb\",\"mDWNyaaQ9hvPCRzSd\",\"FioqXbWFJxdCop35Z\",\"aavYnYfTkbjzaAByg\",\"gt9zhJjDZE5MraxoF\",\"szQg8dxKNNre3v3Jk\",\"zYuvB2g7gTSyqJSBw\",\"M4vq8ATaS9Jg5X7iP\",\"NGvCPuMiAP3xrRLfB\",\"oDtGiNqDMHmhHE3J8\",\"49XFttjKo2QhEWT3R\",\"wo4cpen33NYFHNca7\",\"PH32cNxBjrK4a28sn\",\"AasGs8AeX9Lcb9xJn\",\"kbZaXCJaXJ7rMovhx\",\"k8rMJnaejG3dX4ute\",\"FhZGsyN5RRAx7KjpF\",\"J7d397iB5GuWRAMfg\",\"Hq8v7ffCKdgbErDxt\",\"nkH3HfJXLMNcBMM79\",\"34bE6mric984YYLZQ\",\"sZ2eCa6pF6EN9PMmd\",\"H3yM3F3mukfdq9fit\",\"NJCmkbH5e7qbtZYhd\",\"Ha6HqPDL75brqRNnL\",\"Q7Yxda7dqKeYPs2Db\",\"erzAf7RDcqN3aSg5t\",\"jyoLggHk8xQKZuoQC\",\"ThaiAKWWDw2W4QfJh\",\"eomLS3wh6tQPN8jtH\",\"RqnvM77EkZZD9W2Q3\"],\"total\":147,\"quality\":[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,4,5,5,5,5,3,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,4,5,5]},\"flags\":0},\"summary\":\"You will be given an array of string \\\"east\\\" formatted differently every time. Create a function that returns \\\"west\\\" wherever there is \\\"east\\\". Format the string according to the input. Check the examples below to better understabd the question.\\n\\nExamples\\ndirection([\\\"east\\\", \\\"EAST\\\", \\\"eastEAST\\\"]) ➞ [\\\"west\\\", \\\"WEST\\\", \\\"westWEST\\\"]\\n\\ndirection([\\\"eAsT EaSt\\\", \\\"EaSt eAsT\\\"]\",\"tags\":[\"arrays\",\"strings\",\"regex\",\"formatting\"],\"timestamp\":{\"$date\":1595233879029},\"title\":\"East or West\",\"quality\":4.869565217391305,\"family\":[{\"_id\":\"NnG9WnAaMpG9fNbiK\",\"language\":\"cpp\"},{\"_id\":\"zptHytXMgKcAjr4TH\",\"language\":\"javascript\"},{\"_id\":\"39utPCHvtWqt5vaz9\",\"language\":\"python3\"},{\"_id\":\"78vJWxxkS57zqivLH\",\"language\":\"ruby\"}]}}"]