a["{\"msg\":\"result\",\"id\":\"2005\",\"result\":{\"_id\":\"7ytmgtAXGAccwpvJN\",\"author\":\"er0s\",\"authorId\":\"5Zq3aGdvh4LHBvnJL\",\"code\":\"const prices = {\\n\\tStrawberries: \\\"$1.50\\\", Banana: \\\"$0.50\\\", Mango: \\\"$2.50\\\",\\n\\tBlueberries: \\\"$1.00\\\", Raspberries: \\\"$1.00\\\", Apple: \\\"$1.75\\\",\\n\\tPineapple: \\\"$3.50\\\"\\n}\\n\\nclass Smoothie {\\n\\t\\n}\",\"difficulty\":2.8205128205128207,\"familyId\":\"XW3PtBF4JBKNtkZbe\",\"instructions\":\"Create a class `Smoothie` and do the following:\\n- Create a constructor property called `ingredients`.\\n- Create a `getCost` method which calculates the total cost of the *ingredients used* to make the smoothie.\\n- Create a `getPrice` method which returns the number from `getCost` **plus** the number from `getCost` multiplied by **1.5**. Round to **two decimal places**.\\n- Create a `getName` method which gets the ingredients and puts them in **alphabetical order** into a nice descriptive sentence. If there are multiple ingredients, add the word *\\\"Fusion\\\"* to the end but otherwise, add *\\\"Smoothie\\\"*. Remember to change **\\\"-berries\\\"** to **\\\"-berry\\\"**. See the examples below.\\n\\nIngredient | Price\\n--- | ---\\nStrawberries | $1.50\\nBanana | $0.50\\nMango | $2.50\\nBlueberries | $1.00\\nRaspberries | $1.00\\nApple | $1.75\\nPineapple | $3.50\\n\\n### Examples\\n```\\ns1 = new Smoothie([\\\"Banana\\\"])\\n\\ns1.ingredients ➞ [\\\"Banana\\\"]\\n\\ns1.getCost() ➞ \\\"$0.50\\\"\\n\\ns1.getPrice() ➞ \\\"$1.25\\\"\\n\\ns1.getName() ➞ \\\"Banana Smoothie\\\"\\n```\\n```\\ns2 = Smoothie([\\\"Raspberries\\\", \\\"Strawberries\\\", \\\"Blueberries\\\"])\\n\\ns2.ingredients ➞ [\\\"Raspberries\\\", \\\"Strawberries\\\", \\\"Blueberries\\\"]\\n\\ns2.getCost() ➞ \\\"$3.50\\\"\\n\\ns2.getPrice() ➞ \\\"$8.75\\\"\\n\\ns2.getName() ➞ \\\"Blueberry Raspberry Strawberry Fusion\\\"\\n```\\n\\n### Notes\\nFeel free to check out the **Resources** tab for a refresher on classes.\",\"isHidden\":false,\"lab\":\"let s1 = new Smoothie([\\\"Banana\\\"]),\\n\\t\\ts2 = new Smoothie([\\\"Raspberries\\\", \\\"Strawberries\\\", \\\"Blueberries\\\"]),\\n\\t\\ts3 = new Smoothie([\\\"Mango\\\", \\\"Apple\\\", \\\"Pineapple\\\"]),\\n\\t\\ts4 = new Smoothie([\\\"Pineapple\\\", \\\"Strawberries\\\", \\\"Blueberries\\\", \\\"Mango\\\"]),\\n\\t\\ts5 = new Smoothie([\\\"Blueberries\\\"])\\n\\nTest.assertSimilar(s1.ingredients, [\\\"Banana\\\"])\\nTest.assertEquals(s1.getCost(), \\\"$0.50\\\")\\nTest.assertEquals(s1.getPrice(), \\\"$1.25\\\")\\nTest.assertEquals(s1.getName(), \\\"Banana Smoothie\\\")\\nTest.assertSimilar(s2.ingredients, [\\\"Raspberries\\\", \\\"Strawberries\\\", \\\"Blueberries\\\"])\\nTest.assertEquals(s2.getCost(), \\\"$3.50\\\")\\nTest.assertEquals(s2.getPrice(), \\\"$8.75\\\")\\nTest.assertEquals(s2.getName(), \\\"Blueberry Raspberry Strawberry Fusion\\\")\\nTest.assertSimilar(s3.ingredients, [\\\"Mango\\\", \\\"Apple\\\", \\\"Pineapple\\\"])\\nTest.assertEquals(s3.getCost(), \\\"$7.75\\\")\\nTest.assertEquals(s3.getPrice(), \\\"$19.38\\\")\\nTest.assertEquals(s3.getName(), \\\"Apple Mango Pineapple Fusion\\\")\\nTest.assertSimilar(s4.ingredients, [\\\"Pineapple\\\", \\\"Strawberries\\\", \\\"Blueberries\\\", \\\"Mango\\\"])\\nTest.assertEquals(s4.getCost(), \\\"$8.50\\\")\\nTest.assertEquals(s4.getPrice(), \\\"$21.25\\\")\\nTest.assertEquals(s4.getName(), \\\"Blueberry Mango Pineapple Strawberry Fusion\\\")\\nTest.assertSimilar(s5.ingredients, [\\\"Blueberries\\\"])\\nTest.assertEquals(s5.getCost(), \\\"$1.00\\\")\\nTest.assertEquals(s5.getPrice(), \\\"$2.50\\\")\\nTest.assertEquals(s5.getName(), \\\"Blueberry Smoothie\\\")\\n\\n// made by @Joshua Señoron\",\"language\":\"javascript\",\"summary\":\"Create a class Smoothie and do the following:\\nCreate a constructor property called ingredients.\\nCreate a getCost method which calculates the total cost of the ingredients used to make the smoothie.\\nCreate a getPrice method which returns the number from getCost plus the number from getCost multiplied by 1.5. Round to two decimal places.\\nCreate a getName method\",\"tags\":[\"classes\",\"formatting\",\"objects\",\"data_structures\"],\"timestamp\":{\"$date\":1582906384797},\"title\":\"Fruit Smoothie\",\"stats\":{\"completed\":{\"total\":108,\"ratings\":[3,3,3,3,3,0,3,2,4,2,3,2,3,2,2,4,2,2,3,3,2,4,4,3,2,3,3,3,1,2,1,4,2,2,3,2,4,4,4,3,3,4,4,3,3,4,2,1,2,0,2,4,4,2,3,4,3,5,3,2,3,4,4,2,3,2,2,4,3,4,4,2,4,4,3,1,3,2],\"rators\":[\"5Zq3aGdvh4LHBvnJL\",\"CJnuSjyCBMTbTiibD\",\"yjtdwc2AC4jA2RWtn\",\"enmqcTwbG9CDNJPe9\",\"n5wubRfh6zh8QRymN\",\"Y9Nz9yafaibz54W4o\",\"eFjGhq7C7bBKXjT6X\",\"FJsvM5yqKuK9yMk9P\",\"SxqAEMaYcE9Ps9eh6\",\"Ehrta9env9HXyrGbW\",\"9Pzg45NEiRXhLtLh3\",\"RQwuHHy4rBgaQCLte\",\"Po3v3dHCk6wYGKMwi\",\"ze5uQfR4tkjbR96ei\",\"GZGvYkdHBssXCdrae\",\"N9ZcXYAnjP6fhWFpe\",\"A9r2jcHimgFhmi9C2\",\"6BpBQnSGhzgvhXrEy\",\"ZXRMRAJNP6eseLdbR\",\"NRYNuaQhH6Hife3nf\",\"jYXFFTnuWFNo72Rc5\",\"a7LBurCmz5n6gECbv\",\"HwZx7c3QFWmt5x4oE\",\"rehehi2Tr2mwaEoJE\",\"GCsLzWAhLvniQqR3J\",\"eb9yKB7S8Sa6k9nsH\",\"ZtniSFrgec4oj6Pxm\",\"eQBADoRXTAiG9YcpK\",\"nBo2LLuSMeEgd5f6G\",\"faYyw7jGsSeaMeYYd\",\"8YJp93zsQWop6af4o\",\"rJGzFvBGYxdukwt8X\",\"bK2jZcwjCS3WnKHs8\",\"LHW7fTAJMR5wHhm8c\",\"zMCXYFZSsviDCvjnY\",\"vutMBd5mTWxNRzNs3\",\"M4vq8ATaS9Jg5X7iP\",\"a777e8chPvJkY3tKa\",\"RmefsGMjMeudxdv5t\",\"5wWMqPaquGWz8SfQN\",\"s9qcJASB9WKPWaQzi\",\"XtZfZuXwcaivjtS3T\",\"E2hpke7mHxAWsw5t9\",\"mHT2bJb5SByfJ8yKS\",\"h4jFmtbFn92eA4649\",\"sNcDN3s3rH9wcNg5n\",\"gvKWJDu9G8wtrGH6e\",\"kp2ZbCewZJAbfd7xv\",\"rC7kdm3SsSX9udEQk\",\"8ckG2gipYtieiDY4z\",\"z8R4K9Cd7PNuh256A\",\"aEm3Wvj2rFYRL8Lrb\",\"BuGWvGZGiJELoMy5G\",\"mDWNyaaQ9hvPCRzSd\",\"65dbBZynphj53nXqA\",\"daD4PtrAmXk4Q9jG7\",\"buX4mCQhtXCfBjeno\",\"j5FSQCayX3By73CCw\",\"gMGRYgjBu3oDs2S4f\",\"XcgeFavjBhRjRmCyP\",\"YLTZRjM78Wi9J9Re4\",\"Jva2cxpZC95fYp9nG\",\"eqEJPqfuDzt8xJRyr\",\"c7uBxu2rgY77H5d79\",\"BjJhatTBaTWm3ZhCt\",\"vGKxRcDYDsXzTQuEQ\",\"Ek9PiwGewEGH6fcqz\",\"XkY8o5T6kmRjeRmMH\",\"nLXwBBGP4qdjNh8oz\",\"7hXDHFcBp6ytxjA5f\",\"uP9SRKxpG4GjKkKq5\",\"ffB8T76Ye9ygL6QZZ\",\"PH32cNxBjrK4a28sn\",\"cosoYtzKo6pKgrTJZ\",\"DNxSie8o54gzdirzQ\",\"7QzAAH7CqPjK5Ecjs\",\"QRv96jmNaYsWkxQEG\",\"zFh6R9fdkELysdjv6\",\"T3pq3KMs6RwCCtm3z\",\"eMuCpJ2spXWkJjWNz\",\"HTAm62DZytAEFgSnu\",\"wJTDDTE3TrmSXKP4d\",\"nZL6qRwiWXHmhZWEE\",\"ax6vpPEaXjhRqqpHf\",\"YYQFYiL3YjigkzhYM\",\"TtrXnGzi9MyhLvWiz\",\"rLEWycXmuBppSCaKx\",\"8BJyXvRWcrvN3nttS\",\"vFBkjBa9oK9y4Pv6j\",\"Afnps7TJQuS9sipMb\",\"oDtGiNqDMHmhHE3J8\",\"w4uwcPc6SGDS4XEGM\",\"yr822PZmmiDDenxpB\",\"rGpPd6PvpzLaqps4g\",\"D5Zw8cg3N8FDCe5Dk\"],\"quality\":[5,5,5,5,5,5,5,5,5,5,5,5,2,5,5,5,5,3,5,5,5,3]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":1},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":4.681818181818182,\"family\":[{\"_id\":\"rYKtzcuCQ9FQ9t9pH\",\"language\":\"csharp\"},{\"_id\":\"7ytmgtAXGAccwpvJN\",\"language\":\"javascript\"},{\"_id\":\"yuPWwSbCGPm2KzSzx\",\"language\":\"python3\"}]}}"]