a["{\"msg\":\"result\",\"id\":\"777\",\"result\":{\"_id\":\"M9KuMowrYvH24Jwio\",\"author\":\"Werdna\",\"authorId\":\"buX4mCQhtXCfBjeno\",\"code\":\"const scores = {\\\"A\\\": 100, \\\"B\\\": 14, \\\"C\\\": 9, \\\"D\\\": 28, \\\"E\\\": 145, \\\"F\\\": 12, \\\"G\\\": 3,\\n\\\"H\\\": 10, \\\"I\\\": 200, \\\"J\\\": 100, \\\"K\\\": 114, \\\"L\\\": 100, \\\"M\\\": 25,\\n\\\"N\\\": 450, \\\"O\\\": 80, \\\"P\\\": 2, \\\"Q\\\": 12, \\\"R\\\": 400, \\\"S\\\": 113, \\\"T\\\": 405,\\n\\\"U\\\": 11, \\\"V\\\": 10, \\\"W\\\": 10, \\\"X\\\": 3, \\\"Y\\\": 210, \\\"Z\\\": 23};\\n\\nfunction nameScore(name) {\\n\\t\\n}\",\"difficulty\":1.5172413793103448,\"familyId\":\"AZdFmqrmmpFiMgQuL\",\"instructions\":\"Create a function that takes a string of `name` and checks how much good is the given name. A preloaded dictionary of alphabet `scores` is available in the **Code** tab. Add up the letters of your name to get the total score.\\n\\n```\\nconst scores = {\\\"A\\\": 100, \\\"B\\\": 14, \\\"C\\\": 9, \\\"D\\\": 28, \\\"E\\\": 145, \\\"F\\\": 12, \\\"G\\\": 3,\\n\\\"H\\\": 10, \\\"I\\\": 200, \\\"J\\\": 100, \\\"K\\\": 114, \\\"L\\\": 100, \\\"M\\\": 25,\\n\\\"N\\\": 450, \\\"O\\\": 80, \\\"P\\\": 2, \\\"Q\\\": 12, \\\"R\\\": 400, \\\"S\\\": 113,\\n\\\"T\\\": 405, \\\"U\\\": 11, \\\"V\\\": 10, \\\"W\\\": 10, \\\"X\\\": 3, \\\"Y\\\": 210, \\\"Z\\\": 23}\\n```\\n\\nReturn your result as per the following rules:\\n\\n```\\nscore <= 60:   \\\"NOT TOO GOOD\\\"\\n\\n61 <= score <= 300:  \\\"PRETTY GOOD\\\"\\n\\n301 <= score <= 599:  \\\"VERY GOOD\\\"\\n\\nscore >= 600:  \\\"THE BEST\\\"\\n```\\n\\n### Examples\\n```\\nnameScore(\\\"MUBASHIR\\\") ➞ \\\"THE BEST\\\"\\n\\nnameScore(\\\"YOU\\\") ➞ \\\"VERY GOOD\\\"\\n\\nnameScore(\\\"MATT\\\") ➞ \\\"THE BEST\\\"\\n\\nnameScore(\\\"PUBG\\\") ➞ \\\"NOT TOO GOOD\\\"\\n```\\n\\n### Notes\\nN/A\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertEquals(nameScore('MUBASHIR'), \\\"THE BEST\\\")\\nTest.assertEquals(nameScore('MATT'), \\\"THE BEST\\\")\\nTest.assertEquals(nameScore('PAKISTAN'), \\\"THE BEST\\\")\\nTest.assertEquals(nameScore('AIRFORCE'), \\\"THE BEST\\\")\\nTest.assertEquals(nameScore('GUV'), 'NOT TOO GOOD')\\nTest.assertEquals(nameScore('PUBG'),\\\"NOT TOO GOOD\\\")\\nTest.assertEquals(nameScore('ME'), \\\"PRETTY GOOD\\\")\\nTest.assertEquals(nameScore('BOB'),\\\"PRETTY GOOD\\\")\\nTest.assertEquals(nameScore('JLJ'), 'PRETTY GOOD')\\nTest.assertEquals(nameScore('YOU'), 'VERY GOOD')\\nTest.assertEquals(nameScore('FABIO'),\\\"VERY GOOD\\\")\\nTest.assertEquals(nameScore('ROBBY'), 'THE BEST')\\nTest.assertEquals(nameScore('BILL GATES'), \\\"THE BEST\\\")\\n// Author: Mubashir\",\"language\":\"javascript\",\"quality\":4.571428571428571,\"summary\":\"Create a function that takes a string of name and checks how much good is the given name. A preloaded dictionary of alphabet scores is available in the Code tab. Add up the letters of your name to get the total score.\\n\\nconst scores = {\\\"A\\\": 100, \\\"B\\\": 14, \\\"C\\\": 9, \\\"D\\\": 28, \\\"E\\\": 145, \\\"F\\\": 12, \\\"G\\\": 3,\\n\\\"H\\\": 10, \\\"I\\\": 200, \\\"J\\\": 100, \\\"K\\\": 114, \\\"L\\\": 100, \\\"M\\\": 25,\\n\\\"N\\\": 4\",\"tags\":[\"strings\",\"validation\",\"interview\",\"language_fundamentals\",\"objects\"],\"timestamp\":{\"$date\":1610507915032},\"title\":\"How Good is Your Name?\",\"stats\":{\"completed\":{\"total\":345,\"ratings\":[1,1,1,1,1,1,1,1,2,1,2,1,1,0,1,1,2,2,1,0,1,1,1,2,1,2,2,0,1,1,2,1,1,1,0,1,3,2,1,1,0,0,2,1,1,1,1,1,1,2,0,0,1,2,2,1,1,2,1,1,2,2,1,1,1,1,2,1,2,2,2,3,1,2,1,2,1,2,2,0,2,2,2,2,2,2,2,2,2,1,1,0,2,2,2,1,1,0,0,1,0,2,2,2,2,1,2,2,2,1,5,1,2,2,3,2,1,3,2,2,2,1,1,2,2,1,2,2,1,2,2,3,2,0,2,1,2,0,2,1,2,2,1,1,1,1,2,2,2,2,2,2,3,1,2,1,2,1,2,3,5,2,2,2,2,2,2,1,1,1,0,2,2,2,2,2,1,2,2,2,1,2,2,0,2,1,2,2,2,1,2,2,2,1,2,1,2,2,0,1,2,2,0,2,2,2,1,2,2,2,0,2,2,1,2,2,2,1,1,4,3,2,2,2,0,0,0,2,3,2,0,2],\"quality\":[5,5,5,5,5,5,4,5,4,5,5,4,5,5,5,5,4,5,5,4,4,3,5,3,5,4,3,5,5,5,5,4,5,4,5,5,5,5,4,5,3,5,5,5,5,5,5,5,5,5,5,5,5,5,4,2,5,5,5,5,5,5,5,5,1,5,5,5,3,5,5,5,4,3,5,5,2,5,3,5,5,5,4,4,5,5,4,5,5,5,5],\"rators\":[\"buX4mCQhtXCfBjeno\",\"j5FSQCayX3By73CCw\",\"jpuzj75uGsmzqEEhj\",\"QRv96jmNaYsWkxQEG\",\"yjtdwc2AC4jA2RWtn\",\"YtGYxpMxbrHLFK8nq\",\"AFfw7cGg83uYk2Miy\",\"CNc6rmwhbxkxEhHAp\",\"g4NCSxxHqHCGMpWwT\",\"QGjY3hgPYPMmMjc7j\",\"m6qKkBY4aPWziyJTj\",\"u9cRf5kvtpRB5ffB3\",\"YfWyvMhdY3xcGrK5R\",\"mHT2bJb5SByfJ8yKS\",\"eANW47mfA359Y6JyP\",\"2Qk2mFu9HBFzrB24i\",\"E6DBfkTgHuPsDWdG8\",\"Y7xPTPKpNAEiM2jkH\",\"J7d397iB5GuWRAMfg\",\"STipuJs6kBvPqqsSE\",\"Ya3eHgs8x3unZRLpb\",\"srJ34BaybkQh3qRkM\",\"zJTXDTdbwnopRazGo\",\"RE4Mm9T6Q9uygAxGS\",\"Rrb84KWhN5tjhMGMA\",\"6BpBQnSGhzgvhXrEy\",\"FGEeCTorXbX3WvjFW\",\"PTo9qt93YqGvL8fCa\",\"oyB4Wr4EeZnoDaa8B\",\"gR2vYDNPKhAcxa2yk\",\"YMYtNJvfTkuGnNwpX\",\"E3fkFzNeAGctuvqA2\",\"e9Cknxbx6o7Nb6REs\",\"4wR64Jaibcom7tbYf\",\"HTAm62DZytAEFgSnu\",\"zgoq9MhrL2h75DAMA\",\"3WtHp4MBzciz4AE8M\",\"evTTY9hwrtogaNxXn\",\"8cKdk8KsXtjKjpWB6\",\"8EJ4j2fcfjTJ7Zrzu\",\"mER4kEsRRxwbFgPRC\",\"XujK3rHd3JcM9TLJy\",\"oDtGiNqDMHmhHE3J8\",\"gWroXYjpmi8ZDWREX\",\"55gtTByNL5GiTZKZ6\",\"ApqWTmEEkTCsDou48\",\"YKCx8gSnNYzPikLBe\",\"7gZKfvwaeqsGKXMEN\",\"AQSqD9oNv2uPfxZCR\",\"erQgJKaHaETRcqs4x\",\"TtrXnGzi9MyhLvWiz\",\"PGCDJpQMN8Sjn9Gm6\",\"jyCByAZwu576xDwEL\",\"k6QB6fzbj4LsWktRL\",\"K45zPJxsABuA3WSyj\",\"3FCFMzpdTmjt6dTTG\",\"3zQJbLdCGoqCAwyMF\",\"XAX32dz2EByd3qAK2\",\"XGngZST3B7zpotX9b\",\"CRDJ8RyFD29vcNoX6\",\"SNiJRRosrmSWssLj4\",\"ThKRnrQ3c9wDYiAq7\",\"sN2JyFeJCwfwwHPwF\",\"yWSGujxphYSsL63Zq\",\"GsrjAqoAdLATJH9qD\",\"jpSy4qhuDNwPk9mrf\",\"Yp7uvStL97cC9fKkY\",\"NphGYXzB4CDM9Ruoi\",\"jnyub52Fi79drGvow\",\"HTwftxnxgvwHyxosa\",\"jkumHyXfMkhGcPgqC\",\"oF6TNdvfqZfppqSgK\",\"utCCXtDeKHoEugcP9\",\"QDYpRvKEb4mtaDDgn\",\"vGKxRcDYDsXzTQuEQ\",\"kp2ZbCewZJAbfd7xv\",\"9HZbxzkzgz4CvePtv\",\"jLSZdBseR2kfjt8dL\",\"QAZ5DGaWWYhku4BNz\",\"LCn6qz2GoMr5577Rd\",\"x2Cz7S8rCKJqCE3Xe\",\"Es4eX2stRpyoXeC7f\",\"nyh73Tr6GhqAat78g\",\"ruzwBPphPDRgLXdnP\",\"65dbBZynphj53nXqA\",\"ub8rqqsdqowCrcxPi\",\"tAF9Gf6PiGogbZuWs\",\"a777e8chPvJkY3tKa\",\"zw7g7T8wE5R5CBhXr\",\"5Sb4ifkf4XmQysfuX\",\"jepgvYecfZXTsK5CN\",\"Y2oPt55wtbhKwPkJj\",\"64yvwYCz3PbSsdyK8\",\"hAfyuDGMdFJLChrnq\",\"Ff8MY3dXq8LKchj6z\",\"Znd9Y54FCBzJCDQtA\",\"MdreTegWjrimTgfNg\",\"BcwWBme9tvcj7pcyt\",\"3AhB6y3Rn5nDE7cxw\",\"Xk2g4CNFAnYcvxiSr\",\"5NGxHLcQ8Af2RJ4TN\",\"sHnfwDzKzmeApjTv8\",\"CJBPyyfyaEeEo63sb\",\"K54ipu2Y5pZfPngmk\",\"vKch2w3b4keMd84jj\",\"wJTDDTE3TrmSXKP4d\",\"cp3X8hk8yNME7qoD9\",\"QHiEYtz3tX3s9nETo\",\"CH53jGETBeJTummf3\",\"ZYsoknoZd6pipEwEj\",\"pfrrDHTycvf45cGZw\",\"8BJyXvRWcrvN3nttS\",\"tpdvoQJuyoawJYoJB\",\"66ATvf7cnqGAk69yP\",\"uoCCAmRky8jq29DQK\",\"4LSPpkbjTgRwRRzji\",\"dbzpPbTf22hq98Lq6\",\"pBPeMTaRmdFWQezW3\",\"eGmzRsSATFsE2wjJa\",\"xFxiPMktEDaX5BYZu\",\"LwD3CyYSiBfg3mA4r\",\"8hAdd9ZBMRYWo8Ang\",\"5Zd43rQDxiFb2R2aq\",\"NnF4qpFcxApB3r3He\",\"pBTMLpm9X2Lx9eZup\",\"R9uaMzX2Y4ND8Cosm\",\"bP7GrZ8kCnimCwckZ\",\"F6XGbhXXnTNbGd62m\",\"edKhAPiKS2XgsxXzg\",\"JtZ9sRj9RKtKF5i92\",\"jjdAh4DvpF7jtJDpZ\",\"szQg8dxKNNre3v3Jk\",\"qoDKzkcNfPQ8sT9ja\",\"Nv5a34gxg5yvLKRW8\",\"Lyu3BknDHQGiGbmCo\",\"mQKX8Pmq3gbY9nYfo\",\"KfXAKP6L4TX6hjLQE\",\"zFh6R9fdkELysdjv6\",\"CdXigydGTBLgA577m\",\"ftXLsTaA7yHmhuEsY\",\"Po3v3dHCk6wYGKMwi\",\"ZK6YmYMsfwXYtaZ9P\",\"GM2X83qnuLXTHe5zA\",\"j2Kz8Yxd3d3ZTxHfj\",\"uwn4ZD7yyLBwYZNDq\",\"ojiEx2Rk3qp6F9mZK\",\"o8F8jLRGk5eu6m6do\",\"xHWTJXocLFcztFvYK\",\"6bdrbeWGHM65ybcCm\",\"PQwq7zYfFiHXDXkWa\",\"HyKRY7xroLjYKF7PH\",\"ng2bgc2rEnmvif6PF\",\"ahAe7pcyjYGzcDRm4\",\"bX6tpTCjwoi6XMMbK\",\"yuLxi2qBJvMnwgdgJ\",\"WRax3ebxd7NXxC5iC\",\"s5X8mATh8qEby9rSL\",\"NnLqBBE4wqK4zbQZh\",\"EDa4Z23J8PQudqh7L\",\"vRmdwfqsSh9o4t8JX\",\"phpQMWpxuxevnf9vQ\",\"BRpRTWxYNLmRfWQrq\",\"JZdzRFHSd6X8YaYmx\",\"2DYzTdQreCcWA7XRx\",\"6ZZMTGnmdC4MzBvNY\",\"BJcnwSNnMJdqTm6qi\",\"eKDr4QwpzMwJ6QvCx\",\"FioqXbWFJxdCop35Z\",\"RQwuHHy4rBgaQCLte\",\"p6qLK4qS2dnFzDA7k\",\"cosoYtzKo6pKgrTJZ\",\"FJsvM5yqKuK9yMk9P\",\"hCfruGWxw7v64teEr\",\"CJnuSjyCBMTbTiibD\",\"N7fwDd5JRDsuX7EKa\",\"sNcDN3s3rH9wcNg5n\",\"zB9oRLanCQxEYcY8S\",\"m7qjPsYGgFewLzNTE\",\"e7DzFWvYfc45T53Hb\",\"QjGNkRM3Xc78yShJN\",\"6cEbhKC8zdse4cCTZ\",\"8s5Bdrn7RTga7DL6x\",\"pi76g3eRpnKrhee2a\",\"9n32JkRkbjW4CghjE\",\"pWJWQDhqzDSmfaFam\",\"mpLFbFKjY6u3nsDMv\",\"xges5rijESfvNfJ7w\",\"ckMvGF5TAyCwcxJBm\",\"TaaqkbvxXAKXs95TG\",\"KR4Cr8Wj3ScKyajsJ\",\"zYuvB2g7gTSyqJSBw\",\"NHq3n46HbcHTkxTc4\",\"hyx8iH2z3QySmyRKT\",\"7csRLd5Sx3Ew8bbFz\",\"PLAW6hHCDwfFyi5yx\",\"nBJve5CzG6WAw7WFQ\",\"eomLS3wh6tQPN8jtH\",\"2FjL6Bed3qqWPZCHP\",\"fxr3ZSRturCprSCfa\",\"XkPEb97Tnnvvf5fAY\",\"7wtuhPesfhcYsfZaZ\",\"FYf42wB9aJkwRmZQG\",\"BdnE4RS5puoxo92mA\",\"HEbsKZbvTdrc7ZTpf\",\"N3CNtWZz4ovJfH9Aw\",\"NchnDcEmsLTeFZ4FH\",\"AasGs8AeX9Lcb9xJn\",\"nDTHANRi2X4jmZk6M\",\"2QifjAQzAEqqnk86G\",\"ixabGTE2JSw9QLbJS\",\"jd9sRTnsyeKpPggba\",\"humjB7vSoFLpkqxfs\",\"vAh63eGRwkuJtoP8v\",\"M4vq8ATaS9Jg5X7iP\",\"JFiiZhAZTNQSvjzdp\",\"NGvCPuMiAP3xrRLfB\",\"SCYNpjgtLCE9rKpYB\",\"JW5J6sdJHAmDmfWnE\",\"ax6vpPEaXjhRqqpHf\",\"49XFttjKo2QhEWT3R\",\"EJkPf6CgQjAaXBFQZ\",\"SDtZFL5NzAoCPofXk\",\"QguFWo84zgF3c8BGr\",\"nWND4LmgZTftyB8sN\",\"hvTAyFPy4pJHdrYJX\",\"R35tqE5etfTYTfmGr\",\"xfxkLoQsbZBonmBGp\",\"vEFs82JACx6q53sqg\",\"rpNNPWzdFCc9TzKMz\",\"vEapufGjE49e5JSch\",\"xhrJ9BGQFaMJCEG6F\",\"wo4cpen33NYFHNca7\",\"JN3g4nL6ygAzHKEpY\",\"TqskPfKJsic9iMysJ\",\"CkJuZd3437AdSvnsL\",\"QrJduwhbYQguk8Rne\",\"8Z3dkvWBqtrMEE48N\",\"YSmLyP3eRhcFjJPzg\",\"8phiNfdiGv9nLD9wZ\",\"2ptN2mhjFwFcHyPZd\",\"gXTAie79kiw28tx5u\",\"PsccWumihMv4fv3ri\",\"wYzFdJPw8aXEY9dZM\",\"ZszXiwrziF8L8ayQH\",\"ZKuwzkssrSsDGNPr5\",\"fH7e9XCGH62dQmxxg\",\"jyoLggHk8xQKZuoQC\",\"uxKGACwmZ6FNZsMwE\",\"csXjXMhiQfbCQ9L7b\",\"fPRe6kTeGM3yWGfY6\",\"mnyrXvdFpDG4iZS75\",\"mdv6r687hYHFziB89\",\"o5vwZSj8H7Wngp9oZ\",\"H3yM3F3mukfdq9fit\",\"AMpQSjKsRqhCDyS2j\",\"bfYmA3LMvhSrK59cn\",\"Kt6oGAfrymXmAnn2d\",\"Q7Yxda7dqKeYPs2Db\",\"nPyJSLMRSKKgTa3az\",\"NJCmkbH5e7qbtZYhd\",\"34bE6mric984YYLZQ\",\"JQmDW76Yumvun5ZgF\",\"eoHq9tFSSZYSEn4oa\",\"9SEvR5mBRBi27QooN\",\"76rZ57Yc5w8KcuR4S\",\"2SySQimZvs4e7aDSR\",\"9XnGoq9Tv6ut3zTtH\",\"sMcFMPkMJC4Kh6ymj\",\"bCCMDbiNpXGK5Jw8z\",\"WnogMFYXoyvmBmGkm\",\"6LLvHxbnD684u43vQ\",\"rPsSEYqwmttMPEuvo\",\"z8R4K9Cd7PNuh256A\",\"nw3rZ4ap8trEDtPRX\",\"z47JaNrQMgvuPx5HE\",\"3j8So9ABR6EM5HgSu\",\"HCfkcKnPs9mrJojdG\",\"NQZFmMtKMhFcKM3ST\",\"NpAjngKpPXGwYjSyC\",\"PvBMYGisrSEQhs9ep\",\"9qJwfSnwqzDYYRqTP\",\"hffYCQJ33e9ehtzLq\",\"6vdn7gegY7xXxYCbe\",\"pPpmP7xeJzGgK362R\",\"aEm3Wvj2rFYRL8Lrb\",\"Tj3xmzvzWREXCPpGx\",\"msKa94h5a948j2hm3\",\"4WYjScmBWK9eXRzvd\",\"CHvzhtXnv8HTbPQ56\",\"4etJysxWgy9xu8Jww\",\"KgXbAKjxfY8AvuFW4\",\"ThaiAKWWDw2W4QfJh\",\"5FWeZaz4PwgYgdkh4\",\"jkkKzNT77bMStXhpW\",\"vdrDCxMWpqCY3yxfj\",\"82pWqpMMBd2timN25\",\"gf4xrfguK6KiEF9yi\",\"LPZ2QKCoB8q6rG25c\",\"DCdRG6NjPA6isiyox\",\"sj8yRK9uzJ5LLZABJ\",\"6rbtL9oHWGGckDBfu\",\"ZQXGn77ghzRxNR3Ji\",\"2ii9gqgmh7a4RdeSt\",\"GnscAvB3cswLvRQ6Y\",\"moBFzKLDXuHTBecKE\",\"brboBNGJv6LTLrjzE\",\"9yJfopR3omjyzwbE7\",\"QuQA6XbCGe6soexaJ\",\"Kn5jGPkzjMTaFTCxH\",\"osvF3botnzFZmDomz\",\"hhxGqjnz3MFGjyPMP\",\"8RDJMy5JBxMAwmF6f\",\"qAEumdjLRx2AGAmzw\",\"YXSszexbtswBGchZA\",\"Mc6jrJLswgZGYBqzZ\",\"NBug9g9eYdctFReqt\",\"sgjcbfroKXPSSDob8\",\"GRyC4YedF54tTnD7o\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"M9KuMowrYvH24Jwio\",\"language\":\"javascript\"},{\"_id\":\"yRxAeYFMgykFjjmCz\",\"language\":\"python3\"},{\"_id\":\"WmmSKRFw49xFjLes7\",\"language\":\"ruby\"}]}}"]