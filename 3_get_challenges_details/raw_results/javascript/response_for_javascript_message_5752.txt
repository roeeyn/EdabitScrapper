a["{\"msg\":\"result\",\"id\":\"1621\",\"result\":{\"_id\":\"rnRot4rRofudkE72s\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"function deadlyVirus(persons, n) {\\n\\t\\n}\",\"difficulty\":2.3333333333333335,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"D9YoGiBfttyWzgQ6Z\",\"instructions\":\"**Mubashir** needs your help to identify the spread of a deadly virus. He can provide you with the following parameters:\\n\\n- A two-dimensional array `persons`, containing **affected persons 'V'** and **unaffected persons 'P'**.\\n- Number of hours `n`, each infected person is spreading the virus to one person _up, down, left and right_ **each hour**.\\n\\nYour function should return the updated array containing affected and unaffected persons after `n` hours.\\n\\n### Examples\\n```\\npersons = [\\n  [\\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"],\\n  [\\\"V\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"],\\n  [\\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"],\\n  [\\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"],\\n  [\\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"]\\n]\\n\\n\\ndeadlyVirus(persons, 0) ➞ [\\n  [\\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"],\\n  [\\\"V\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"],\\n  [\\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"],\\n  [\\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"],\\n  [\\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"]\\n]\\n\\ndeadlyVirus(persons, 1) ➞ [\\n  [\\\"V\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"],\\n  [\\\"V\\\", \\\"V\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"],\\n  [\\\"V\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"],\\n  [\\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"],\\n  [\\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"]\\n]\\n\\ndeadlyVirus(persons, 2) ➞ [\\n  [\\\"V\\\", \\\"V\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"],\\n  [\\\"V\\\", \\\"V\\\", \\\"V\\\", \\\"P\\\", \\\"P\\\"],\\n  [\\\"V\\\", \\\"V\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"],\\n  [\\\"V\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"],\\n  [\\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"]\\n]\\n```\\n\\n### Notes\\nN/A\",\"isFree\":false,\"isHidden\":false,\"lab\":\"var persons=[\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"V\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"]\\n],n=0,\\nanswer=[\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"V\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"]\\n]\\n\\nTest.assertSimilar(deadlyVirus(persons, n), answer)\\n\\npersons=[\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"V\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"]\\n],n=1,\\nanswer=[\\n[\\\"V\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"V\\\",\\\"V\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"V\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"]\\n]\\n\\nTest.assertSimilar(deadlyVirus(persons, n), answer)\\n\\npersons=[\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"V\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"]\\n],n=2,\\nanswer=[\\n[\\\"V\\\",\\\"V\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"V\\\",\\\"V\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"V\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"]\\n]\\n\\nTest.assertSimilar(deadlyVirus(persons, n), answer)\\n\\npersons=[\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"V\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"]\\n],n=1,\\nanswer=[\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"V\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"V\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"]\\n]\\n\\nTest.assertSimilar(deadlyVirus(persons, n), answer)\\n\\npersons=[\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"V\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"]\\n],n=2,\\nanswer=[\\n[\\\"P\\\",\\\"P\\\",\\\"V\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"P\\\"],\\n[\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\"],\\n[\\\"P\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"V\\\",\\\"P\\\",\\\"P\\\"]\\n]\\n\\nTest.assertSimilar(deadlyVirus(persons, n), answer)\\n\\npersons=[\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"V\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"]\\n],n=3,\\nanswer=[\\n[\\\"P\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"P\\\"],\\n[\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\"],\\n[\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\"],\\n[\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\"],\\n[\\\"P\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"P\\\"]\\n]\\n\\nTest.assertSimilar(deadlyVirus(persons, n), answer)\\n\\npersons=[\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"V\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"]\\n],n=4,\\nanswer=[\\n[\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\"],\\n[\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\"],\\n[\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\"],\\n[\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\"],\\n[\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\"]\\n]\\n\\nTest.assertSimilar(deadlyVirus(persons, n), answer)\\n\\n// Mubashir\",\"language\":\"javascript\",\"quality\":0,\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,1,2,2,3,3,2,4,2,3,3],\"quality\":[],\"rators\":[\"T6iBEE2jp7f7iEF2P\",\"CNc6rmwhbxkxEhHAp\",\"yjtdwc2AC4jA2RWtn\",\"SYEuojZtP6yLXryHv\",\"sRt2L9qxPZZHG2YbP\",\"ftXLsTaA7yHmhuEsY\",\"FJsvM5yqKuK9yMk9P\",\"M4vq8ATaS9Jg5X7iP\",\"oDtGiNqDMHmhHE3J8\",\"DPi9QGLctq2y76KuE\"],\"total\":10},\"flags\":0},\"summary\":\"Mubashir needs your help to identify the spread of a deadly virus. He can provide you with the following parameters:\\n\\nA two-dimensional array persons, containing affected persons 'V' and unaffected persons 'P'.\\nNumber of hours n, each infected person is spreading the virus to one person up, down, left and right each hour.\\n\\nYour function should return the updat\",\"tags\":[\"algorithms\",\"arrays\",\"logic\",\"language_fundamentals\"],\"timestamp\":{\"$date\":1611811281340},\"title\":\"Deadly Virus\",\"family\":[{\"_id\":\"ofMXdekBtY6pq3Pin\",\"language\":\"cpp\"},{\"_id\":\"rnRot4rRofudkE72s\",\"language\":\"javascript\"},{\"_id\":\"sARz4TDdxCuqK6pja\",\"language\":\"python3\"},{\"_id\":\"RJgXMDFpmDCYkSY3Z\",\"language\":\"ruby\"}]}}"]