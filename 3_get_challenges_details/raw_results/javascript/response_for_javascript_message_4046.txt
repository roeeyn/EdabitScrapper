a["{\"msg\":\"result\",\"id\":\"780\",\"result\":{\"_id\":\"Qt2F2qW9ZMMMqrrNT\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"function wormLength(worm) {\\n\\t\\n}\",\"difficulty\":1.5108695652173914,\"familyId\":\"g4rRFr27u44gT7CQr\",\"instructions\":\"Given a string `worm` create a function that takes the length of the worm and converts it into millimeters. Each `-` represents one centimeter.\\n\\n### Examples\\n```\\nwormLength(\\\"----------\\\") ➞ \\\"100 mm.\\\"\\n\\nwormLength(\\\"\\\") ➞ \\\"invalid\\\"\\n\\nwormLength(\\\"---_-___---_\\\") ➞ \\\"invalid\\\"\\n```\\n\\n### Notes\\nReturn `\\\"invalid\\\"` if an empty string is given or if the string has characters other than `-`.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertEquals(wormLength(\\\"----------\\\"), \\\"100 mm.\\\")\\nTest.assertEquals(wormLength(\\\"\\\"), \\\"invalid\\\")\\nTest.assertEquals(wormLength(\\\"---_-___---_\\\"), \\\"invalid\\\")\\nTest.assertEquals(wormLength(\\\"------\\\"), \\\"60 mm.\\\")\\nTest.assertEquals(wormLength(\\\"iwheguawhpvpaiehpiuwwega\\\"), \\\"invalid\\\")\\nTest.assertEquals(wormLength(\\\"QWERTYUIOPASDFGHJKL\\\"), \\\"invalid\\\")\\nTest.assertEquals(wormLength(\\\"------------\\\"), \\\"120 mm.\\\")\",\"language\":\"javascript\",\"quality\":4.583333333333333,\"summary\":\"Given a string worm create a function that takes the length of the worm and converts it into millimeters. Each - represents one centimeter.\\n\\nExamples\\nwormLength(\\\"----------\\\") ➞ \\\"100 mm.\\\"\\n\\nwormLength(\\\"\\\") ➞ \\\"invalid\\\"\\n\\nwormLength(\\\"----_---\\\") ➞ \\\"invalid\\\"\\n\\nNotes\\nReturn \\\"invalid\\\" if an empty string is given or if the string has characters other than -.\",\"tags\":[\"strings\"],\"timestamp\":{\"$date\":1603048310901},\"title\":\"Length of Worm\",\"stats\":{\"completed\":{\"total\":115,\"ratings\":[1,1,1,1,1,2,5,3,3,0,3,0,0,0,2,2,2,2,1,0,1,2,1,0,2,2,2,2,2,2,2,2,2,2,2,3,0,2,1,2,2,0,0,2,1,2,2,2,1,1,1,2,2,2,2,2,2,2,5,1,1,2,0,1,2,1,2,1,0,1,2,2,2,0,2,2,2,1,1,1,0,2,1,0,2,2,2,0,2,1,2,1],\"quality\":[5,5,3,5,5,5,3,5,5,5,5,5,1,5,4,4,5,5,5,5,5,5,5,5],\"rators\":[\"eNxNmrKCEShbLR9mA\",\"8BJyXvRWcrvN3nttS\",\"4ae47BqG3ikcgwSjC\",\"QWtB4pcpgzc8wvZr3\",\"yjtdwc2AC4jA2RWtn\",\"bX6tpTCjwoi6XMMbK\",\"zw7g7T8wE5R5CBhXr\",\"QRv96jmNaYsWkxQEG\",\"g4NCSxxHqHCGMpWwT\",\"r7mZLgpQWzRiGddL5\",\"u9cRf5kvtpRB5ffB3\",\"jLSZdBseR2kfjt8dL\",\"evTTY9hwrtogaNxXn\",\"qWR7eXxBiNee22A5u\",\"pdGuqmMyeN4wZaWwv\",\"pWJWQDhqzDSmfaFam\",\"Gc2bmsof5vD2Hsgqv\",\"65dbBZynphj53nXqA\",\"ttuGK7od8simjgmCJ\",\"E6DBfkTgHuPsDWdG8\",\"nzAbdaGbJwgvkkEYj\",\"AFfw7cGg83uYk2Miy\",\"buX4mCQhtXCfBjeno\",\"RE4Mm9T6Q9uygAxGS\",\"CH53jGETBeJTummf3\",\"Ya3eHgs8x3unZRLpb\",\"Yp7uvStL97cC9fKkY\",\"a777e8chPvJkY3tKa\",\"oE8rNagYonFzFvKH5\",\"mHT2bJb5SByfJ8yKS\",\"jkumHyXfMkhGcPgqC\",\"CNc6rmwhbxkxEhHAp\",\"Es4eX2stRpyoXeC7f\",\"SY9Euc4kQfRgetXTd\",\"kp2ZbCewZJAbfd7xv\",\"9oPfGpc74rAstazB6\",\"nkH3HfJXLMNcBMM79\",\"gavnf7iyvHYMX9TZR\",\"3Gf7ikLijfoxabiPY\",\"srJ34BaybkQh3qRkM\",\"Nb6LYPoQP6KJZt8mz\",\"RtPhDuwmvWNHiBxmG\",\"m6qKkBY4aPWziyJTj\",\"J7d397iB5GuWRAMfg\",\"JsRTAwWK7Nikj4sKA\",\"npp5hesJrst6ghKSM\",\"pPpmP7xeJzGgK362R\",\"cgCQDs9i7yChKeAjE\",\"tAF9Gf6PiGogbZuWs\",\"PAnur8xLTthNL3epT\",\"eomLS3wh6tQPN8jtH\",\"wJTDDTE3TrmSXKP4d\",\"XujK3rHd3JcM9TLJy\",\"vGKxRcDYDsXzTQuEQ\",\"oDtGiNqDMHmhHE3J8\",\"6BpBQnSGhzgvhXrEy\",\"2Qk2mFu9HBFzrB24i\",\"Po3v3dHCk6wYGKMwi\",\"jnyub52Fi79drGvow\",\"hyx8iH2z3QySmyRKT\",\"LwD3CyYSiBfg3mA4r\",\"N3CNtWZz4ovJfH9Aw\",\"AasGs8AeX9Lcb9xJn\",\"NGvCPuMiAP3xrRLfB\",\"TtrXnGzi9MyhLvWiz\",\"SNiJRRosrmSWssLj4\",\"kw9vvJuyKNeDSaiMp\",\"9HZbxzkzgz4CvePtv\",\"FGEeCTorXbX3WvjFW\",\"n4Y5EEGCjmrK99yrt\",\"PTo9qt93YqGvL8fCa\",\"nBJve5CzG6WAw7WFQ\",\"mpLFbFKjY6u3nsDMv\",\"FJsvM5yqKuK9yMk9P\",\"STipuJs6kBvPqqsSE\",\"pi76g3eRpnKrhee2a\",\"gXTAie79kiw28tx5u\",\"jyoLggHk8xQKZuoQC\",\"koWGjiCmozmgwhYsb\",\"bfYmA3LMvhSrK59cn\",\"7wtuhPesfhcYsfZaZ\",\"9XnGoq9Tv6ut3zTtH\",\"sMcFMPkMJC4Kh6ymj\",\"oyB4Wr4EeZnoDaa8B\",\"jicWFrNKadYuLhqxh\",\"z47JaNrQMgvuPx5HE\",\"rPsSEYqwmttMPEuvo\",\"BdnE4RS5puoxo92mA\",\"uxKGACwmZ6FNZsMwE\",\"HCfkcKnPs9mrJojdG\",\"ZKuwzkssrSsDGNPr5\",\"3WtHp4MBzciz4AE8M\",\"sN2JyFeJCwfwwHPwF\",\"inbiBEY2tizFwkN84\",\"sHnfwDzKzmeApjTv8\",\"ZcqshY58sGEEvgeaq\",\"aEm3Wvj2rFYRL8Lrb\",\"4WYjScmBWK9eXRzvd\",\"x2Cz7S8rCKJqCE3Xe\",\"gf4xrfguK6KiEF9yi\",\"NJCmkbH5e7qbtZYhd\",\"T28tMWM3x3fKmDnqF\",\"CHvzhtXnv8HTbPQ56\",\"zJTXDTdbwnopRazGo\",\"LPZ2QKCoB8q6rG25c\",\"8s5Bdrn7RTga7DL6x\",\"qAEumdjLRx2AGAmzw\",\"QGjY3hgPYPMmMjc7j\",\"FY7atTfxaahfAHtJv\",\"DPpSwhhiuF4Y9YR2i\",\"z5ebtimXwFFJdYxoa\"]},\"flags\":0},\"family\":[{\"_id\":\"Qs75Qjvw4TWiBDyh2\",\"language\":\"cpp\"},{\"_id\":\"5aGCby28ZfsSZr4cH\",\"language\":\"java\"},{\"_id\":\"Qt2F2qW9ZMMMqrrNT\",\"language\":\"javascript\"},{\"_id\":\"6LwzPRc6LrauEgr7H\",\"language\":\"python3\"},{\"_id\":\"qub7ErYAJH35t5FiM\",\"language\":\"ruby\"}]}}"]