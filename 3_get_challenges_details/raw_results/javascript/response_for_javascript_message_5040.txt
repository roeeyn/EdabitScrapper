a["{\"msg\":\"result\",\"id\":\"1272\",\"result\":{\"_id\":\"fWkrdJb6EJrHsP7Sm\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"function charAtPos(r, s) {\\n  \\n}\",\"difficulty\":2.0789473684210527,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"yjBXH2yyyK7xhSKxh\",\"instructions\":\"Create a function that returns the characters from an array or string `r` on odd or even positions, depending on the specifier `s`. The specifier will be **\\\"odd\\\"** for items on *odd positions* (1, 3, 5, ...) and **\\\"even\\\"** for items on *even positions* (2, 4, 6, ...).\\n\\n### Examples\\n```\\ncharAtPos([2, 4, 6, 8, 10], \\\"even\\\") ➞ [4, 8]\\n// 4 & 8 occupy the 2nd & 4th positions\\n\\ncharAtPos(\\\"EDABIT\\\", \\\"odd\\\") ➞ \\\"EAI\\\"\\n// \\\"E\\\", \\\"A\\\" and \\\"I\\\" occupy the 1st, 3rd and 5th positions\\n\\ncharAtPos([\\\"A\\\", \\\"R\\\", \\\"B\\\", \\\"I\\\", \\\"T\\\", \\\"R\\\", \\\"A\\\", \\\"R\\\", \\\"I\\\", \\\"L\\\", \\\"Y\\\"], \\\"odd\\\") ➞ [\\\"A\\\", \\\"B\\\", \\\"T\\\", \\\"A\\\", \\\"I\\\", \\\"Y\\\"]\\n```\\n\\n### Notes\\n- Arrays are zero-indexed, so, index+1 = position or position-1 = index.\\n- There will not be an empty string or an empty array.\\n- A slightly different version of this challenge can be [found here] (https://edabit.com/challenge/WZMZEQoaNuhXovauT).\\n- A recursive version of this challenge can be [found here](https://edabit.com/challenge/Fby397fv37HCNHZy8).\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertSimilar(charAtPos([2,4,6,8,10],\\\"even\\\"), [4,8])\\nTest.assertSimilar(charAtPos([1,2,3,4,5,6,7,8,9,10],\\\"odd\\\"), [1,3,5,7,9])\\nTest.assertEquals(charAtPos(\\\"EDABIT\\\",\\\"even\\\"), \\\"DBT\\\")\\nTest.assertEquals(charAtPos(\\\"EDABIT\\\",\\\"odd\\\"),  \\\"EAI\\\")\\nTest.assertEquals(charAtPos(\\\"QWERTYUIOP\\\",\\\"even\\\"), \\\"WRYIP\\\")\\nTest.assertEquals(charAtPos(\\\"POIUYTREWQ\\\",\\\"odd\\\"), \\\"PIYRW\\\")\\nTest.assertEquals(charAtPos(\\\"ASDFGHJKLZ\\\",\\\"odd\\\"), \\\"ADGJL\\\")\\nTest.assertEquals(charAtPos(\\\"ASDFGHJKLZ\\\",\\\"even\\\"), \\\"SFHKZ\\\")\\nTest.assertSimilar(charAtPos([\\\"!\\\",\\\"@\\\",\\\"#\\\",\\\"$\\\",\\\"%\\\",\\\"^\\\",\\\"&\\\",\\\"*\\\",\\\"(\\\",\\\")\\\"],\\\"odd\\\"), [\\\"!\\\",\\\"#\\\",\\\"%\\\",\\\"&\\\",\\\"(\\\"])\\nTest.assertSimilar(charAtPos([\\\")\\\",\\\"(\\\",\\\"*\\\",\\\"&\\\",\\\"^\\\",\\\"%\\\",\\\"$\\\",\\\"#\\\",\\\"@\\\",\\\"!\\\"],\\\"odd\\\"), [\\\")\\\",\\\"*\\\",\\\"^\\\",\\\"$\\\",\\\"@\\\"])\\nTest.assertSimilar(charAtPos([\\\"A\\\",\\\"R\\\",\\\"B\\\",\\\"I\\\",\\\"T\\\",\\\"R\\\",\\\"A\\\",\\\"R\\\",\\\"I\\\",\\\"L\\\",\\\"Y\\\"],\\\"odd\\\"), [\\\"A\\\",\\\"B\\\",\\\"T\\\",\\\"A\\\",\\\"I\\\",\\\"Y\\\"])\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,1,3,2,1,2,3,0,3,2,2,0,2,3,1,3,3,4,0,3,2,1,2,2,1,3,1,2,1,2,2,0,2,3,2,3,3,1,2,3,2,2,1,2,3,3,2,2,2,2,1,3,1,1,1,3,2,2,0,3,3,2,4,3,0,2,3,1,2,0,3,3,3,1,3,1,3,1,4,2,3,2,2,2,3,2,3,3,2,1,1,2,2,3,3,3,2,3,1,2,2,0,3,3,2,3,2,2,2,1,3,2,2,3,1,2,3,2,0,3,1,2,2,3,2,2,1,2,4,2,3,2,3,1,1,1,3,2,3,0,3,3,3,2,1,5,3],\"rators\":[\"mHT2bJb5SByfJ8yKS\",\"yjtdwc2AC4jA2RWtn\",\"RBhhb86zS4yvpRgXq\",\"65dbBZynphj53nXqA\",\"n5wubRfh6zh8QRymN\",\"QDYpRvKEb4mtaDDgn\",\"vGyhvTxKo4oAjrfav\",\"yuLxi2qBJvMnwgdgJ\",\"a777e8chPvJkY3tKa\",\"RQwuHHy4rBgaQCLte\",\"GJMDLcqB498dLie9L\",\"cp3X8hk8yNME7qoD9\",\"FGEeCTorXbX3WvjFW\",\"BjJhatTBaTWm3ZhCt\",\"iJC8PmpzSyTnEDqw5\",\"jnyub52Fi79drGvow\",\"7kENXQQ8ABiPGfBRD\",\"427wjjp453HFTG4Xx\",\"5PE9kL9KTC7ceQPoJ\",\"kp2ZbCewZJAbfd7xv\",\"buX4mCQhtXCfBjeno\",\"aEm3Wvj2rFYRL8Lrb\",\"FJsvM5yqKuK9yMk9P\",\"QRv96jmNaYsWkxQEG\",\"E2hpke7mHxAWsw5t9\",\"N7fwDd5JRDsuX7EKa\",\"3t4kHWEnccLqjJMxu\",\"sNcDN3s3rH9wcNg5n\",\"BedTuZQcg7mCmqjMK\",\"fMqXimJLsPiuhT8A8\",\"gTSRXuh6Kj3ZAKAat\",\"qPpQfR5KyDb5Y3EFf\",\"N4t9oMe7YRkGActXT\",\"dgKxbP99h2ELwrGsr\",\"bgYyBtF8asT6NP5WM\",\"eoepTq5ES5tfgY9XT\",\"8BJyXvRWcrvN3nttS\",\"o7LFNBScxLWD5pfav\",\"RE4Mm9T6Q9uygAxGS\",\"SQWoo5SZuDgTAxyXv\",\"iHaSQP2bhfL7ByBJB\",\"zGQq35aTzLva6ChmE\",\"tseyDEv9zaHBMvLL3\",\"s9qcJASB9WKPWaQzi\",\"iTRPKCqWFgfzDpSa3\",\"bX6tpTCjwoi6XMMbK\",\"noaBx5QyY6pTS5bja\",\"NchnDcEmsLTeFZ4FH\",\"jkumHyXfMkhGcPgqC\",\"8s5Bdrn7RTga7DL6x\",\"cZ53kyxrHgv3F2eDt\",\"eQXwk5zGckM8tCWYH\",\"vic9SZ9qqj9WhRkbd\",\"PXiLcoA5dSMnajP2g\",\"BbSZKcLyfgaDFpceJ\",\"H46gRHmkdz2CRrGH9\",\"z8R4K9Cd7PNuh256A\",\"C9LKGu2g5hSijvDzA\",\"t6dbNFYqfjFfxC6Se\",\"r7mZLgpQWzRiGddL5\",\"szQg8dxKNNre3v3Jk\",\"8Z3dkvWBqtrMEE48N\",\"nWND4LmgZTftyB8sN\",\"3WtHp4MBzciz4AE8M\",\"BSkoT6o2GweZkqXbc\",\"FniksaBZMvKrAmGPX\",\"FiK2ruyH8KeHLAgoA\",\"hNEhHd8qodq4P3h2g\",\"bRGGFe9s3LjxCfrbm\",\"TPrfNreYTj6pQQBh7\",\"dk2aGfRcWM4ybXLaP\",\"YtGYxpMxbrHLFK8nq\",\"Xk2g4CNFAnYcvxiSr\",\"2Wbrt2tRoxMJGZusF\",\"z5ebtimXwFFJdYxoa\",\"apyi6oXgmDnnq7qw9\",\"7EAi8v9ek9ejWstbD\",\"pd8dm7sWLW9cY6dYW\",\"BuGWvGZGiJELoMy5G\",\"FioqXbWFJxdCop35Z\",\"4xdSc245S8vAvgDK9\",\"xFxiPMktEDaX5BYZu\",\"GRyC4YedF54tTnD7o\",\"2Pzpsip3QjfZLWCbq\",\"veKWMS3ACmRWTjiLK\",\"tAF9Gf6PiGogbZuWs\",\"MT26yxj3YX95DsyLj\",\"4Xv87xmdSnpYhi8hz\",\"qvNk7pHSveLu3jqWw\",\"Po3v3dHCk6wYGKMwi\",\"KN2FGHjEBYtHr9iQf\",\"Wi4wPWoue6Yr3Fz4r\",\"rC7kdm3SsSX9udEQk\",\"7gZKfvwaeqsGKXMEN\",\"pLpcDC3EYx2DDQSdt\",\"Nb6LYPoQP6KJZt8mz\",\"ixabGTE2JSw9QLbJS\",\"jaooQkwdysgrCcCcf\",\"4RsakkyRXyYGwFxEa\",\"YXqaqjujocvg2gX4k\",\"kRvw5sGF6vG3Hweww\",\"PH5f9zBqR28snYoZf\",\"c5sHaHfc6o6KshvP5\",\"9Eaf6Bnk3rLGsSgtH\",\"RzmXx77rzobF7Gtsj\",\"2fT4tYyqFonDMxyw2\",\"ZTTJprKDvFqKGew7c\",\"Jwoe6heepP8r77Doj\",\"i3kndQfrF2RowSqc4\",\"ccHAPAfdET3cnyPaG\",\"y6CXH4vDBokGZCbMc\",\"CNc6rmwhbxkxEhHAp\",\"DjChaA6HXG2vBe4fK\",\"BdvdJYwHZr7JpkHsn\",\"ct42f2gGpMXSd9hXM\",\"acHSYL6uQAgpgFMjp\",\"JX3z5Mx8p4KN8GLud\",\"dGugwhA6uwwjPGAa5\",\"omn98QP6uBd923Azp\",\"yCeddtASCT5NFPJTP\",\"ZcJm2kuqJnN3CXFaR\",\"zw7g7T8wE5R5CBhXr\",\"sySmCuRJCCi2dtLLM\",\"WdLW2YLhL2kmSqKgK\",\"4XxJxQkB5mNTLY2qk\",\"PGCDJpQMN8Sjn9Gm6\",\"g4NCSxxHqHCGMpWwT\",\"9dAB9yF2rukm22EnA\",\"qWR7eXxBiNee22A5u\",\"HmQu5Cd2KivaXhaR7\",\"Fv8MSJTMX2J7j8Chm\",\"M4vq8ATaS9Jg5X7iP\",\"vqD6ERedxEyXyT3Sx\",\"7iJbwKmKpQa3HKe8m\",\"c7uBxu2rgY77H5d79\",\"i49enk79wAajcgi7a\",\"5voy2ycWXEyTkFZi5\",\"E6DBfkTgHuPsDWdG8\",\"9ktuueBqfKEfoz3CP\",\"sHnfwDzKzmeApjTv8\",\"u9cRf5kvtpRB5ffB3\",\"zd9FLSzsGz3evKafy\",\"eEZ8zeWX8b3SWs84P\",\"toW47xyvsnbnMZMQz\",\"c4FsZDmbSzi7KZW43\",\"f3RAbWvE6uESq7KE5\",\"PTo9qt93YqGvL8fCa\",\"MX7s7bjsvySLFKoP7\",\"WZpRr9xcXqCrqiFx8\",\"RtPhDuwmvWNHiBxmG\",\"srJ34BaybkQh3qRkM\",\"QAZ5DGaWWYhku4BNz\",\"k6QB6fzbj4LsWktRL\",\"wJTDDTE3TrmSXKP4d\",\"CH53jGETBeJTummf3\",\"pi76g3eRpnKrhee2a\",\"QvEXmSEo3ANp3yPyH\",\"QjGNkRM3Xc78yShJN\",\"ZRue7dxL7tPbtSrsp\",\"2P5vWxdr4qQiRxdPN\",\"WnogMFYXoyvmBmGkm\",\"aavYnYfTkbjzaAByg\",\"7Ryf8g6QSmBBfSZAZ\",\"Ya3eHgs8x3unZRLpb\",\"J7d397iB5GuWRAMfg\",\"AasGs8AeX9Lcb9xJn\",\"NGvCPuMiAP3xrRLfB\",\"hvTAyFPy4pJHdrYJX\",\"oDtGiNqDMHmhHE3J8\",\"2Qk2mFu9HBFzrB24i\",\"sN2JyFeJCwfwwHPwF\",\"49XFttjKo2QhEWT3R\",\"wo4cpen33NYFHNca7\",\"AFfw7cGg83uYk2Miy\",\"PH32cNxBjrK4a28sn\",\"rpNNPWzdFCc9TzKMz\",\"pdsiGN5LX8wu9R9sD\",\"RoGGD5cpHb4ftdLDv\",\"SCYNpjgtLCE9rKpYB\",\"BdnE4RS5puoxo92mA\",\"jyoLggHk8xQKZuoQC\",\"QuQA6XbCGe6soexaJ\"],\"total\":191,\"quality\":[4,3,5,5,4,5,4,5,5,5,5,5,5,5,5,2,5,5,5,5,5,5,4,5,5,5,5,4,5,5,4,5,5,5,5]},\"flags\":0},\"summary\":\"Create a function that returns the characters from an array or string r on odd or even positions, depending on the specifier s. The specifier will be \\\"odd\\\" for items on odd positions (1, 3, 5, ...) and \\\"even\\\" for items on even positions (2, 4, 6, ...).\\n\\nExamples\\ncharAtPos([2, 4, 6, 8, 10], \\\"even\\\") ➞ [4, 8]\\n// 4 & 8 occupy the 2nd & 4th positions\\n\\ncharAtPos(\\\"ED\",\"tags\":[\"arrays\",\"functional_programming\",\"validation\"],\"timestamp\":{\"$date\":1594674149471},\"title\":\"Oddly or Evenly Positioned\",\"quality\":4.685714285714286,\"family\":[{\"_id\":\"THuuakBitThtL6rmq\",\"language\":\"java\"},{\"_id\":\"fWkrdJb6EJrHsP7Sm\",\"language\":\"javascript\"},{\"_id\":\"vLaSKySKmozHb4vqr\",\"language\":\"php\"},{\"_id\":\"KQe5w8AdSLbweW8ck\",\"language\":\"python3\"},{\"_id\":\"yDJGyFFgYWFGPzcE9\",\"language\":\"ruby\"}]}}"]