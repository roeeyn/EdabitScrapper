a["{\"msg\":\"result\",\"id\":\"1651\",\"result\":{\"_id\":\"BbXHMKZLPmRdmzucf\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"function selfDescriptive(n) {\\n\\t\\n}\",\"difficulty\":2.303030303030303,\"familyId\":\"iCMMjZTSAwWqXHBuR\",\"instructions\":\"The number `10213223` is self-descriptive. Count the number of zeros, ones, twos, and threes that are contained in this number and you have 1 zero, 2 ones, 3 twos, 2 threes, but that is a replica of the number itself `10|21|32|23`.\\n\\nWrite a function that returns `true` if its argument is a self-descriptive number, `false` if not.\\n\\n### Examples\\n```\\nselfDescriptive(22) ➞ true\\n\\nselfDescriptive(3999) ➞ false\\n\\nselfDescriptive(31331419) ➞ true\\n\\nselfDescriptive(21321316) ➞ false\\n\\nselfDescriptive(4132232416171) ➞ false\\n\\nselfDescriptive(31331819) ➞ true\\n```\\n\\n### Notes\\n- Since the number's descriptors are always in pairs, any self-descriptive number must have an even number of digits.\\n- The largest self-descriptive number possible is reportedly `71322723161814151019` (see **Resources** tab).\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertEquals(selfDescriptive(10313317), true)\\nTest.assertEquals(selfDescriptive(41322324151819), true)\\nTest.assertEquals(selfDescriptive(3133141), false)\\nTest.assertEquals(selfDescriptive(22), true)\\nTest.assertEquals(selfDescriptive(2), false)\\nTest.assertEquals(selfDescriptive(21322313), false)\\nTest.assertEquals(selfDescriptive(201314), false)\\n//Test.assertEquals(selfDescriptive(613223141526171819), true)\",\"language\":\"javascript\",\"quality\":0,\"summary\":\"The number 10213223 is self-descriptive. Count the number of zeros, ones, twos, and threes that are contained in this number and you have 1 zero, 2 ones, 3 twos, 2 threes, but that is a replica of the number itself 10|21|32|23.\\n\\nWrite a function that returns true if its argument is a self-descriptive number, false if not.\\n\\nExamples\\nselfDescriptive(22) ➞ true\",\"tags\":[\"loops\",\"numbers\",\"validation\"],\"timestamp\":{\"$date\":1607778326703},\"title\":\"Self-Descriptive Numbers\",\"stats\":{\"completed\":{\"total\":28,\"ratings\":[2,2,2,2,2,0,3,3,3,1,0,3,2,2,3,2,5,2,3,1,1,3,3,3,1,3,3,2,2,3,3,3,3],\"quality\":[],\"rators\":[\"g4NCSxxHqHCGMpWwT\",\"Yp7uvStL97cC9fKkY\",\"Xk2g4CNFAnYcvxiSr\",\"bX6tpTCjwoi6XMMbK\",\"vic9SZ9qqj9WhRkbd\",\"f3RAbWvE6uESq7KE5\",\"rcTxMiqGiX7waNPiH\",\"Jjwy2466zqQGdo86n\",\"YNRmWt6mWy8ZfCJrC\",\"zwucnipfuduTpMAae\",\"mHT2bJb5SByfJ8yKS\",\"8BJyXvRWcrvN3nttS\",\"DPi9QGLctq2y76KuE\",\"QRv96jmNaYsWkxQEG\",\"yjtdwc2AC4jA2RWtn\",\"CNc6rmwhbxkxEhHAp\",\"kp2ZbCewZJAbfd7xv\",\"u9cRf5kvtpRB5ffB3\",\"6hWtwGLAFmpiRGx9h\",\"BdnE4RS5puoxo92mA\",\"xaXC3t2FRsXnoM2md\",\"NGvCPuMiAP3xrRLfB\",\"JXiuekLJw7P7yJK3j\",\"RE4Mm9T6Q9uygAxGS\",\"AFfw7cGg83uYk2Miy\",\"YSmLyP3eRhcFjJPzg\",\"oDtGiNqDMHmhHE3J8\",\"P2vAyWNH3wjoP5tXc\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"x62cQbuaXbDxW7FQ4\",\"language\":\"cpp\"},{\"_id\":\"BbXHMKZLPmRdmzucf\",\"language\":\"javascript\"},{\"_id\":\"8wkZkoTzEx7yayWTZ\",\"language\":\"python3\"},{\"_id\":\"GjoArcFHQ2YQ2ihxK\",\"language\":\"ruby\"}]}}"]