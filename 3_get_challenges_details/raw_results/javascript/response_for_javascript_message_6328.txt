a["{\"msg\":\"result\",\"id\":\"1909\",\"result\":{\"_id\":\"9KMYT5u9sww3MSzNt\",\"author\":\"Harith\",\"authorId\":\"Ynw596LiAeaYq29os\",\"code\":\"function cropHydrated(field) {\\n\\t\\n}\",\"difficulty\":2.7142857142857144,\"editorId\":\"Ynw596LiAeaYq29os\",\"familyId\":\"9xbGDFGennaYsQzRu\",\"instructions\":\"You're given a 2D array / matrix of a crop field. Each crop needs to be hydrated. Each water source hydrates the 8 tiles around it. With `\\\"w\\\"` representing a water source, and `\\\"c\\\"` representing a crop, is every crop hydrated?\\n\\n### Examples\\n```\\ncropHydrated([\\n  [ \\\"w\\\", \\\"c\\\" ],\\n  [ \\\"w\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\" ]\\n]) ➞ true\\n\\ncropHydrated([\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\" ]\\n]) ➞ false\\n// There isn\\\"t even a water source.\\n\\ncropHydrated([\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"w\\\", \\\"c\\\", \\\"c\\\" ]\\n]) ➞ false\\n```\\n\\n### Notes\\n`\\\"w\\\"` on its own should return `true`, and `\\\"c\\\"` on its own should return `false`.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertEquals(cropHydrated([\\n  [ \\\"w\\\", \\\"w\\\" ],\\n  [ \\\"w\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"w\\\" ],\\n  [ \\\"c\\\", \\\"w\\\" ]\\n]), true)\\n\\nTest.assertEquals(cropHydrated([\\n  [ \\\"c\\\", \\\"w\\\", \\\"w\\\", \\\"w\\\", \\\"c\\\" ],\\n  [ \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"c\\\" ]\\n]), true)\\n\\nTest.assertEquals(cropHydrated([\\n  [ \\\"c\\\", \\\"w\\\" ]\\n]), true)\\n\\nTest.assertEquals(cropHydrated([\\n  [ \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"c\\\" ]\\n]), true)\\n\\nTest.assertEquals(cropHydrated([\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"w\\\", \\\"w\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"w\\\", \\\"w\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"w\\\", \\\"c\\\" ]\\n]), true)\\n\\nTest.assertEquals(cropHydrated([\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"w\\\", \\\"w\\\", \\\"c\\\" ]\\n]), true)\\n\\nTest.assertEquals(cropHydrated([\\n  [ \\\"c\\\", \\\"w\\\", \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"c\\\" ]\\n]), true)\\n\\nTest.assertEquals(cropHydrated([\\n  [ \\\"c\\\", \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"w\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\" ],\\n  [ \\\"c\\\", \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"w\\\" ]\\n]), true)\\n\\nTest.assertEquals(cropHydrated([\\n  [ \\\"c\\\" ],\\n  [ \\\"w\\\" ],\\n  [ \\\"c\\\" ],\\n  [ \\\"c\\\" ],\\n  [ \\\"w\\\" ],\\n  [ \\\"c\\\" ]\\n]), true)\\n\\nTest.assertEquals(cropHydrated([\\n  [ \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"w\\\", \\\"c\\\", \\\"w\\\", \\\"w\\\", \\\"c\\\", \\\"w\\\" ],\\n  [ \\\"w\\\", \\\"w\\\", \\\"c\\\", \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ]\\n]), true)\\n\\n\\nTest.assertEquals(cropHydrated([\\n  [ \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"c\\\", \\\"w\\\" ]\\n]), false)\\n\\nTest.assertEquals(cropHydrated([\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"c\\\", \\\"w\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"c\\\", \\\"w\\\", \\\"c\\\" ],\\n  [ \\\"w\\\", \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\" ]\\n]), false)\\n\\nTest.assertEquals(cropHydrated([\\n  [ \\\"c\\\", \\\"w\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"w\\\", \\\"w\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"w\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"w\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\" ]\\n]), false)\\n\\nTest.assertEquals(cropHydrated([\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"w\\\", \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ]\\n]), false)\\n\\nTest.assertEquals(cropHydrated([\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"c\\\" ],\\n  [ \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"w\\\", \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"w\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"c\\\", \\\"w\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ]\\n]), false)\\n\\nTest.assertEquals(cropHydrated([\\n  [ \\\"c\\\", \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"w\\\", \\\"w\\\", \\\"c\\\" ],\\n  [ \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ]\\n]), false)\\n\\nTest.assertEquals(cropHydrated([\\n  [ \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"c\\\", \\\"w\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"w\\\", \\\"c\\\", \\\"w\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"w\\\", \\\"w\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"c\\\" ]\\n]), false)\\n\\nTest.assertEquals(cropHydrated([\\n  [ \\\"c\\\", \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"w\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"c\\\" ]\\n]), false)\\n\\nTest.assertEquals(cropHydrated([\\n  [ \\\"w\\\", \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"w\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"c\\\" ]\\n]), false)\\n\\nTest.assertEquals(cropHydrated([\\n  [ \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\" ],\\n  [ \\\"c\\\", \\\"w\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"w\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\" ]\\n]), false)\\n\\n// By Harith Shah\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,3,2,2,3,4,3,4,4,3,2,3,2,2,3,4,2,1,3,2,4,4,4,4,5,4,1,2,2,1],\"rators\":[\"Ynw596LiAeaYq29os\",\"5Zq3aGdvh4LHBvnJL\",\"yjtdwc2AC4jA2RWtn\",\"n5wubRfh6zh8QRymN\",\"EjPLq3QSJdGQFJdgW\",\"FJsvM5yqKuK9yMk9P\",\"EWn8w8P3nNh7knatY\",\"MqNQMijb6ckT2gXQf\",\"JGBCMpnbbi5ztuFoX\",\"2innwjWqxJHo4eRGh\",\"pd8dm7sWLW9cY6dYW\",\"nBo2LLuSMeEgd5f6G\",\"sBcsrC5paZm9nxjot\",\"QMq9dcvgpyNK6RAze\",\"FKMPCJDxvG3Rtf3JE\",\"5YvGxXo8GKRSvPHRA\",\"mHT2bJb5SByfJ8yKS\",\"zMCXYFZSsviDCvjnY\",\"eFjGhq7C7bBKXjT6X\",\"aEm3Wvj2rFYRL8Lrb\",\"4xdSc245S8vAvgDK9\",\"xFxiPMktEDaX5BYZu\",\"M4vq8ATaS9Jg5X7iP\",\"tAF9Gf6PiGogbZuWs\",\"Es4eX2stRpyoXeC7f\",\"mDWNyaaQ9hvPCRzSd\",\"6vfjruFp8ZpRSi3AT\",\"LXBcbYdjpSCE6cNRc\",\"C8yR2sSnDkr8XfAjb\",\"ezbzeAJnyxoQsfvqP\",\"yeQbEQZywYudHKjpE\"],\"total\":37,\"quality\":[5]},\"flags\":0},\"summary\":\"You're given a 2D array / matrix of a crop field. Each crop needs to be hydrated. Each water source hydrates the 8 tiles around it. With \\\"w\\\" representing a water source, and \\\"c\\\" representing a crop, is every crop hydrated?\\n\\nExamples\\ncropHydrated([\\n  [ \\\"w\\\", \\\"c\\\" ],\\n  [ \\\"w\\\", \\\"c\\\" ],\\n  [ \\\"c\\\", \\\"c\\\" ]\\n]) ➞ true\\n\\ncropHydrated([\\n  [ \\\"c\\\", \\\"c\\\", \\\"c\\\" ]\\n]) ➞ false\\n// There i\",\"tags\":[\"arrays\",\"conditions\",\"loops\",\"strings\",\"validation\"],\"timestamp\":{\"$date\":1582383305765},\"title\":\"Crop Fields\",\"quality\":5,\"family\":[{\"_id\":\"bjSNqiz8rg7QhNC6C\",\"language\":\"cpp\"},{\"_id\":\"9KMYT5u9sww3MSzNt\",\"language\":\"javascript\"},{\"_id\":\"FmowTJecDKQMRqsHS\",\"language\":\"python3\"},{\"_id\":\"mficK9FqiZuWQRpRc\",\"language\":\"ruby\"}]}}"]