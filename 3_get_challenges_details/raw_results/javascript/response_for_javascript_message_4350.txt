a["{\"msg\":\"result\",\"id\":\"930\",\"result\":{\"_id\":\"q5N9n3ZjKq5Fn2hzg\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"function indexFilter(idx, str) {\\n\\t\\n}\",\"difficulty\":1.6352941176470588,\"familyId\":\"QkYu6DniT9k7KWoT6\",\"instructions\":\"Create a function that takes two inputs: `idx` (an array of integers) and `str` (a string). The function should return another string with the letters of `str` at each index in `idx` in order.\\n\\n### Examples\\n```\\nindexFilter([7, -1, 5, 1], \\\"She is the love of my love\\\") ➞ \\\"tesh\\\"\\n\\nindexFilter([4, -7, -13, -11, -2, 0], \\\"Relax and stay calm to avoid failures\\\") ➞ \\\"xavier\\\"\\n\\nindexFilter([9, -9, 2, 27, 36, 6, 5, 13, -1, 2, 0, 30, 2], \\\"That's life, I've got you under my skin\\\") ➞ \\\"frank sinatra\\\"\\n```\\n\\n### Notes\\n- Indexes may not be in order or may be negative (see examples).\\n- The output string must always be lowercase, but the input `str` may not be (as in the above examples).\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"let [actualParam, expectedParam] = [\\n  [\\n    [[7, -1, 5, 1], \\\"She is the love of my love\\\",],\\n    [[4, -7, -13, -11, -2, 0], \\\"Relax and stay calm to avoid failures\\\",],\\n    [[2, 3, 8, 11], \\\"Autumn in New York\\\", ],\\n    [[0, 1, 5, 7, 4, 2], \\\"Cry me a river\\\",],\\n    [[9, -9, 2, 27, 36, 6, 5, 13, -1, 2, 0, 30, 2], \\\"That's life, I've got you under my skin\\\",],\\n    [[-1, 8, 8, 3], \\\"Dream a Little Dream of Me\\\",],\\n  ],\\n  [\\n    \\\"tesh\\\",\\n    \\\"xavier\\\",\\n    \\\"tune\\\",\\n    \\\"creamy\\\",\\n    \\\"frank sinatra\\\",\\n    \\\"ella\\\",\\n  ]\\n]\\nfor (let i in actualParam) Test.assertEquals(indexFilter(actualParam[i][0], actualParam[i][1]), expectedParam[i])\",\"language\":\"javascript\",\"quality\":4.615384615384615,\"summary\":\"Create a function that takes two inputs: idx (an array of integers) and str (a string). The function should return another string with the letters of str at each index in idx in order.\\n\\nExamples\\nindexFilter([7, -1, 5, 1], \\\"She is the love of my love\\\") ➞ \\\"tesh\\\"\\n\\nindexFilter([4, -7, -13, -11, -2, 0], \\\"Relax and stay calm to avoid failures\\\") ➞ \\\"xavier\\\"\\n\\nindexFilt\",\"tags\":[\"arrays\",\"strings\"],\"timestamp\":{\"$date\":1603247100797},\"title\":\"Index Filtering\",\"stats\":{\"completed\":{\"total\":110,\"ratings\":[1,1,1,1,1,1,1,2,1,1,0,2,1,1,2,0,1,1,2,3,1,1,2,2,1,2,3,2,2,1,5,0,2,2,2,2,1,2,1,2,2,2,1,2,2,2,2,2,1,2,2,2,1,3,0,2,2,2,2,2,3,2,2,1,2,2,1,0,5,2,1,2,1,2,1,1,2,2,2,2,2,2,0,2,1],\"quality\":[5,5,5,3,5,5,3,5,5,3,5,5,3,5,5,5,4,5,5,5,5,4,5,5,5,5],\"rators\":[\"a777e8chPvJkY3tKa\",\"65dbBZynphj53nXqA\",\"srJ34BaybkQh3qRkM\",\"nzAbdaGbJwgvkkEYj\",\"SDtZFL5NzAoCPofXk\",\"QRv96jmNaYsWkxQEG\",\"evTTY9hwrtogaNxXn\",\"r7mZLgpQWzRiGddL5\",\"AFfw7cGg83uYk2Miy\",\"9g26yFXWeDDxEAECX\",\"g4NCSxxHqHCGMpWwT\",\"JW5J6sdJHAmDmfWnE\",\"BjJhatTBaTWm3ZhCt\",\"3WtHp4MBzciz4AE8M\",\"kWBs4L68ixKQtvPcp\",\"Akq3fQcPRgPrWfsye\",\"yjtdwc2AC4jA2RWtn\",\"xzZQDmPgjhkorhA5n\",\"RE4Mm9T6Q9uygAxGS\",\"m5PJ8gaunk72typ4A\",\"vKch2w3b4keMd84jj\",\"5unWrvqG7XxEwB4pX\",\"mHT2bJb5SByfJ8yKS\",\"u9cRf5kvtpRB5ffB3\",\"TjwyRbkPanQTP7AYs\",\"9oPfGpc74rAstazB6\",\"8BJyXvRWcrvN3nttS\",\"Ya3eHgs8x3unZRLpb\",\"Po3v3dHCk6wYGKMwi\",\"azAzSkvJd7eyXY9x9\",\"buX4mCQhtXCfBjeno\",\"zw7g7T8wE5R5CBhXr\",\"qWR7eXxBiNee22A5u\",\"STipuJs6kBvPqqsSE\",\"eoepTq5ES5tfgY9XT\",\"pWJWQDhqzDSmfaFam\",\"SY9Euc4kQfRgetXTd\",\"oyB4Wr4EeZnoDaa8B\",\"75NY7vqimaATzRdAX\",\"pdGuqmMyeN4wZaWwv\",\"FGEeCTorXbX3WvjFW\",\"nkH3HfJXLMNcBMM79\",\"jLSZdBseR2kfjt8dL\",\"z5ebtimXwFFJdYxoa\",\"vGKxRcDYDsXzTQuEQ\",\"Yp7uvStL97cC9fKkY\",\"CNc6rmwhbxkxEhHAp\",\"vtHbevf2tHqe6mRxX\",\"kp2ZbCewZJAbfd7xv\",\"omn98QP6uBd923Azp\",\"YmMgWhzhHhQLmGGgH\",\"jd9sRTnsyeKpPggba\",\"2Ni3PzJAc5fAhqBkb\",\"Es4eX2stRpyoXeC7f\",\"jkumHyXfMkhGcPgqC\",\"ttuGK7od8simjgmCJ\",\"3Gf7ikLijfoxabiPY\",\"vewKwcMeGuk3p3MsN\",\"CH53jGETBeJTummf3\",\"Nb6LYPoQP6KJZt8mz\",\"m6qKkBY4aPWziyJTj\",\"DPi9QGLctq2y76KuE\",\"5hHf2e9zimbmxMqqF\",\"c7uBxu2rgY77H5d79\",\"s49G5h6964S2KoS64\",\"2Qk2mFu9HBFzrB24i\",\"YSmLyP3eRhcFjJPzg\",\"J7d397iB5GuWRAMfg\",\"M4vq8ATaS9Jg5X7iP\",\"PTo9qt93YqGvL8fCa\",\"bgxXnAai58Ypqqq5Z\",\"pPpmP7xeJzGgK362R\",\"eomLS3wh6tQPN8jtH\",\"ftXLsTaA7yHmhuEsY\",\"wJTDDTE3TrmSXKP4d\",\"bX6tpTCjwoi6XMMbK\",\"oDtGiNqDMHmhHE3J8\",\"R9uaMzX2Y4ND8Cosm\",\"AasGs8AeX9Lcb9xJn\",\"NGvCPuMiAP3xrRLfB\",\"N3CNtWZz4ovJfH9Aw\",\"kw9vvJuyKNeDSaiMp\",\"pi76g3eRpnKrhee2a\",\"pdsiGN5LX8wu9R9sD\",\"nBJve5CzG6WAw7WFQ\",\"gXTAie79kiw28tx5u\",\"n4Y5EEGCjmrK99yrt\",\"LwD3CyYSiBfg3mA4r\",\"Kt6oGAfrymXmAnn2d\",\"jyoLggHk8xQKZuoQC\",\"tAF9Gf6PiGogbZuWs\",\"SCYNpjgtLCE9rKpYB\",\"mpLFbFKjY6u3nsDMv\",\"bfYmA3LMvhSrK59cn\",\"hsgucX8NGc7kwnehg\",\"BdnE4RS5puoxo92mA\",\"jicWFrNKadYuLhqxh\",\"z47JaNrQMgvuPx5HE\",\"9HZbxzkzgz4CvePtv\",\"7wtuhPesfhcYsfZaZ\",\"zJTXDTdbwnopRazGo\",\"LPZ2QKCoB8q6rG25c\",\"uxKGACwmZ6FNZsMwE\",\"CHvzhtXnv8HTbPQ56\",\"jnyub52Fi79drGvow\",\"sN2JyFeJCwfwwHPwF\"]},\"flags\":0},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"Y7cwWdPPbrkLXDtA6\",\"language\":\"cpp\"},{\"_id\":\"WrHfLyMXCMuGjxf2s\",\"language\":\"java\"},{\"_id\":\"q5N9n3ZjKq5Fn2hzg\",\"language\":\"javascript\"},{\"_id\":\"XrQnBBLaGRkXZuM8n\",\"language\":\"python3\"},{\"_id\":\"czhcLLwktc57NNDQj\",\"language\":\"ruby\"}]}}"]