a["{\"msg\":\"result\",\"id\":\"2012\",\"result\":{\"_id\":\"K8ydJQoJTq7yEJyk2\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"function canTraverse(x) {\\n\\t\\n}\",\"difficulty\":2.8333333333333335,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"yHua55oaFxLnJrkyi\",\"instructions\":\"In **Block Dude**, the main character can climb boxes, but only if they are stacked in a particular way so that he is able to climb them one at a time. More specifically, **he can only climb UP or DOWN one box at a time**.\\n\\nLet `1`s represent the boxes, and `0` represent the background. Write a function that returns `true` if block dude **can travel from the left side to the right side of the screen** given his constraints.\\n\\nFor example, the sample layout below should return `true`.\\n\\n```\\n[\\n  [0, 0, 0, 0, X, 0, 0, 0, 0],\\n  [0, 0, 0, X, 1, X, X, 0, 0],\\n  [0, X, X, 1, 1, 1, 1, X, 0],\\n  [X, 1, 1, 1, 1, 1, 1, 1, X]\\n]\\n```\\n\\nSince block dude can travel across these boxes (note: X's are just to show walking path and are **not** part of the actual input). On the other hand:\\n\\n```\\n[\\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\\n  [0, 0, 0, 1, 1, 0, 0, 0, 0],\\n  [0, X, X, 1, 1, 1, 1, 0, 0],\\n  [X, 1, 1, 1, 1, 1, 1, 1, 0]\\n]\\n```\\n\\nShould return `false`, since block dude is stuck at column 3, being unable to climb 2 boxes at once.\\n\\n### Examples\\n```\\ncanTraverse([\\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\\n  [0, 0, 0, 1, 0, 0, 0, 0, 0],\\n  [0, 0, 1, 1, 0, 0, 1, 0, 0],\\n  [0, 1, 1, 1, 1, 1, 1, 1, 0]\\n]) ➞ false\\n\\n// Block dude can't jump down 2 blocks.\\n\\ncanTraverse([\\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\\n  [0, 0, 0, 1, 0, 0, 0, 0, 1],\\n  [0, 0, 1, 1, 1, 0, 1, 1, 1],\\n  [0, 1, 1, 1, 1, 1, 1, 1, 1]\\n]) ➞ true\\n\\n// Note: Sometimes the exit is at the top!\\n\\ncanTraverse([\\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\\n  [0, 0, 0, 1, 0, 0, 0, 0, 0],\\n  [0, 0, 1, 1, 1, 1, 1, 0, 0],\\n  [0, 1, 1, 1, 1, 1, 1, 1, 0]\\n]) ➞ true\\n\\ncanTraverse([\\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\\n  [0, 0, 0, 1, 0, 0, 0, 0, 0],\\n  [0, 1, 1, 1, 1, 1, 1, 0, 0],\\n  [0, 1, 1, 1, 1, 1, 1, 1, 0]\\n]) ➞ false\\n\\n// Block dude can't climb 2 blocks.\\n```\\n\\n### Notes\\nCheck the **Resources** tab for a link to play block dude.\",\"lab\":\"Test.assertEquals(canTraverse([\\n\\t[0, 0, 0, 0, 0, 0, 0, 0, 0], \\n\\t[0, 0, 0, 1, 0, 0, 0, 0, 0], \\n\\t[0, 0, 1, 1, 0, 0, 1, 0, 0], \\n\\t[0, 1, 1, 1, 1, 1, 1, 1, 0]\\n]), false)\\n\\nTest.assertEquals(canTraverse([\\n\\t[0, 0, 0, 0, 0, 0, 0, 0, 0], \\n\\t[0, 0, 0, 1, 0, 0, 0, 0, 0], \\n\\t[0, 0, 1, 1, 1, 0, 1, 0, 0], \\n\\t[0, 1, 1, 1, 1, 1, 1, 1, 0]\\n]), true)\\n\\nTest.assertEquals(canTraverse([\\n\\t[0, 0, 0, 0, 0, 0, 0, 0, 0], \\n\\t[0, 0, 0, 1, 0, 0, 0, 0, 0], \\n\\t[0, 0, 1, 1, 1, 1, 1, 0, 0], \\n\\t[0, 1, 1, 1, 1, 1, 1, 1, 0]\\n]), true)\\n\\nTest.assertEquals(canTraverse([\\n\\t[0, 0, 0, 0, 0, 0, 0, 0, 0], \\n\\t[0, 0, 0, 1, 0, 0, 0, 0, 0], \\n\\t[0, 1, 1, 1, 1, 1, 1, 0, 0], \\n\\t[0, 1, 1, 1, 1, 1, 1, 1, 0]\\n]), false)\\n\\nTest.assertEquals(canTraverse([\\n\\t[0, 0, 0, 0, 0, 0, 0, 0, 0], \\n\\t[0, 0, 0, 1, 1, 0, 0, 0, 0], \\n\\t[0, 0, 1, 1, 1, 1, 1, 0, 0], \\n\\t[0, 1, 1, 1, 1, 1, 1, 1, 0]\\n]), true)\\n\\nTest.assertEquals(canTraverse([\\n\\t[0, 0, 0, 0, 0, 0, 0, 0, 0], \\n\\t[0, 0, 0, 0, 0, 0, 0, 0, 0], \\n\\t[0, 0, 1, 0, 0, 0, 1, 0, 0], \\n\\t[0, 1, 1, 1, 0, 1, 1, 1, 0]\\n]), true)\\n\\nTest.assertEquals(canTraverse([\\n\\t[0, 0, 0, 0, 0, 0, 0, 0, 0], \\n\\t[0, 0, 0, 0, 0, 0, 0, 0, 0], \\n\\t[0, 0, 0, 0, 0, 0, 0, 0, 0], \\n\\t[0, 1, 1, 1, 0, 1, 1, 1, 0]\\n]), true)\\n\\nTest.assertEquals(canTraverse([\\n\\t[0, 0, 0, 0, 0, 0, 0, 0, 0], \\n\\t[0, 0, 0, 1, 0, 0, 0, 0, 1], \\n\\t[0, 0, 1, 1, 1, 0, 1, 1, 1], \\n\\t[0, 1, 1, 1, 1, 1, 1, 1, 1]\\n]), true)\\n\\nTest.assertEquals(canTraverse([\\n\\t[0, 0, 0, 0, 0, 0, 0, 0, 0], \\n\\t[0, 0, 0, 1, 0, 0, 0, 0, 1], \\n\\t[0, 0, 1, 1, 1, 0, 1, 0, 1], \\n\\t[0, 1, 1, 1, 1, 1, 1, 1, 1]\\n]), false)\",\"language\":\"javascript\",\"summary\":\"In Block Dude, the main character can climb boxes, but only if they are stacked in a particular way so that he is able to climb them one at a time. More specifically, he can only climb UP or DOWN one box at a time.\\n\\nLet 1s represent the boxes, and 0 represent the background. Write a function that returns true if block dude can travel from the left side to the\",\"tags\":[\"arrays\",\"games\",\"higher_order_functions\",\"validation\"],\"timestamp\":{\"$date\":1554526122634},\"title\":\"Block Dude\",\"stats\":{\"completed\":{\"total\":36,\"ratings\":[3,3,3,3,3,3,3,3,3,3,3,1,2,2,4,2,4,3,3,2,5,3,3,4,2,4,4,5,5,0,2,3,2,4,1,3,3,1,1,2,3,3],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"65dbBZynphj53nXqA\",\"bbbpNxM3hgGMCqMn8\",\"SDtZFL5NzAoCPofXk\",\"n5wubRfh6zh8QRymN\",\"8xuMMGF7fyQWL2fKH\",\"rSJGLYSXMuu3RWjun\",\"GCxj7RJCeWYNxj8oQ\",\"yjtdwc2AC4jA2RWtn\",\"5Zq3aGdvh4LHBvnJL\",\"mHT2bJb5SByfJ8yKS\",\"FJsvM5yqKuK9yMk9P\",\"Ze7zDiPzkmd8yaszr\",\"AasGs8AeX9Lcb9xJn\",\"xTzmQ5FQFmwa5qiMm\",\"cRpaCxYRmGcN3Nsoj\",\"JGBCMpnbbi5ztuFoX\",\"ZXRMRAJNP6eseLdbR\",\"ZtniSFrgec4oj6Pxm\",\"7txFzDQ43vJ7qCY88\",\"h4jFmtbFn92eA4649\",\"fvhLKJ4EJTuPBSQLD\",\"dNqjHnaTsgqBFDxTC\",\"QRgsT3QvF3D3DfQoK\",\"cb38b7i2QkxAAbZh6\",\"zN2JsQE3qPn6AtKs7\",\"kKEdtoo4zb5jCgYno\",\"M4vq8ATaS9Jg5X7iP\",\"aEm3Wvj2rFYRL8Lrb\",\"39NX4c3viuDCBoWMF\",\"pGh7WykiPe26fHJYv\",\"kp2ZbCewZJAbfd7xv\",\"mDWNyaaQ9hvPCRzSd\",\"Po3v3dHCk6wYGKMwi\",\"oDtGiNqDMHmhHE3J8\",\"RE4Mm9T6Q9uygAxGS\"],\"quality\":[5,5,5]},\"tests\":{\"score\":0,\"voters\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"voters\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"isHidden\":false,\"quality\":5,\"family\":[{\"_id\":\"K8ydJQoJTq7yEJyk2\",\"language\":\"javascript\"},{\"_id\":\"cvsGAmtHJBNDJFBpB\",\"language\":\"python3\"},{\"_id\":\"946axfHGhku9vYWC2\",\"language\":\"ruby\"}]}}"]