a["{\"msg\":\"result\",\"id\":\"2325\",\"result\":{\"_id\":\"CP5zy4iLZzNy2KFcN\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"function canEnterCave(x) {\\n\\t\\n}\",\"difficulty\":3.789473684210526,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"EwvZNdqBhi5mZkeKo\",\"instructions\":\"You are playing a video game. Your screen can be represented as a 2D array, where `0`s represent **walkeable areas** and `1`s represent **unwalkeable areas**. You are currently searching for the entrance to a cave that is located on the right side of the screen. Your character starts anywhere in the leftmost column.\\n\\nCreate a function that determines if you can enter the cave. You can only move left, right, up, or down (not allowed to move diagonally).\\n\\nTo illustrate:\\n```\\n[\\n  [0, 0, 1, 1, 1, 0, 0, 0],\\n  [0, 0, 0, 0, 1, 0, 0, 0],\\n  [0, 0, 1, 0, 0, 0, 0, 0],\\n  [0, 0, 1, 1, 1, 1, 1, 0]\\n]\\n```\\nYou found the entrance! Function should output `true`.\\n\\n```\\n[\\n  [0, 0, 0, 1, 0, 0, 0, 0],\\n  [0, 0, 0, 1, 1, 0, 0, 0],\\n  [0, 0, 0, 0, 1, 1, 0, 0],\\n  [0, 0, 0, 1, 1, 1, 1, 0]\\n]\\n```\\nNope, keep looking. Function should output `false`.\\n\\n### Examples\\n```\\ncanEnterCave([\\n  [0, 1, 1, 1, 0, 1, 1, 0],\\n  [0, 0, 1, 1, 0, 0, 0, 0],\\n  [0, 0, 0, 0, 1, 1, 1, 0],\\n  [0, 1, 1, 1, 1, 1, 1, 0]\\n]) ➞ false\\n\\n// You cannot walk diagonally!\\n\\n\\ncanEnterCave([\\n  [0, 1, 1, 1, 0, 1, 1, 0],\\n  [0, 0, 1, 1, 0, 0, 0, 0],\\n  [1, 0, 0, 0, 0, 1, 0, 0],\\n  [1, 1, 1, 1, 1, 1, 1, 0]\\n]) ➞ true\\n\\n\\ncanEnterCave([\\n  [0, 1, 1, 1, 1, 1, 1, 0],\\n  [0, 0, 0, 0, 1, 0, 0, 0],\\n  [0, 0, 1, 1, 1, 1, 1, 0],\\n  [0, 1, 1, 0, 0, 1, 1, 0]\\n]) ➞ false\\n```\\n\\n### Notes\\n- You are seeing the game screen from a birds-eye view.\\n- Another way of thinking about it: You can enter the cave if you can move from the **left** side of the screen to the **right** side by only walking up, down or right.\\n- The entrance is not necessarily the first square, you may have to search for it in the left hand column.\",\"lab\":\"Test.assertEquals(canEnterCave([\\n[0, 0, 1, 1, 1, 0, 0, 0], \\n[0, 0, 0, 0, 1, 0, 0, 0], \\n[0, 0, 1, 0, 0, 0, 0, 0], \\n[0, 0, 1, 1, 1, 1, 1, 0]\\n]), true)\\n\\nTest.assertEquals(canEnterCave([\\n[0, 0, 0, 1, 0, 0, 0, 0], \\n[0, 0, 0, 1, 1, 0, 0, 0], \\n[0, 0, 0, 0, 1, 1, 0, 0], \\n[0, 0, 0, 1, 1, 1, 1, 0]\\n]), false)\\n\\nTest.assertEquals(canEnterCave([\\n[0, 1, 1, 1, 0, 1, 1, 0], \\n[0, 0, 1, 1, 0, 0, 0, 0], \\n[0, 0, 0, 0, 0, 1, 0, 0], \\n[0, 1, 1, 1, 1, 1, 1, 0]\\n]), true)\\n\\nTest.assertEquals(canEnterCave([\\n[0, 1, 1, 1, 0, 1, 1, 0], \\n[0, 0, 1, 1, 0, 0, 0, 0], \\n[0, 0, 0, 1, 0, 1, 0, 0], \\n[0, 1, 1, 1, 1, 1, 1, 0]\\n]), false)\\n\\nTest.assertEquals(canEnterCave([\\n[0, 1, 1, 1, 0, 1, 1, 0], \\n[0, 0, 1, 1, 0, 0, 0, 0], \\n[0, 0, 0, 0, 1, 1, 1, 0], \\n[0, 1, 1, 1, 1, 1, 1, 0]\\n]), false)\\n\\nTest.assertEquals(canEnterCave([\\n[0, 1, 1, 1, 1, 1, 1, 0], \\n[0, 0, 0, 0, 0, 0, 0, 0], \\n[0, 0, 0, 0, 0, 1, 1, 0], \\n[0, 1, 1, 0, 0, 1, 1, 0]\\n]), true)\\n\\nTest.assertEquals(canEnterCave([\\n[0, 1, 1, 1, 1, 1, 1, 0], \\n[0, 0, 0, 0, 1, 0, 0, 0], \\n[0, 0, 1, 1, 1, 1, 1, 0], \\n[0, 1, 1, 0, 0, 1, 1, 0]\\n]), false)\\n\\nTest.assertEquals(canEnterCave([\\n[0, 1, 1, 1, 1, 1, 1, 0], \\n[0, 1, 0, 0, 1, 0, 0, 0], \\n[0, 0, 1, 0, 1, 1, 1, 0], \\n[0, 1, 1, 0, 0, 1, 1, 0]\\n]), false)\\n\\nTest.assertEquals(canEnterCave([\\n[0, 1, 1, 1, 1, 1, 1, 1], \\n[0, 0, 0, 0, 1, 0, 0, 1], \\n[0, 0, 1, 0, 1, 0, 0, 0], \\n[0, 1, 1, 0, 0, 0, 1, 0]\\n]), true)\\n\\nTest.assertEquals(canEnterCave([\\n[1, 0, 0, 0, 0, 0, 1, 0, 0], \\n[1, 0, 1, 1, 1, 0, 1, 0, 1], \\n[1, 0, 1, 0, 0, 0, 1, 0, 1], \\n[1, 0, 1, 0, 1, 1, 1, 0, 1],\\n[0, 0, 1, 0, 0, 0, 0, 0, 1]\\n]), true)\",\"language\":\"javascript\",\"summary\":\"You are playing a video game. Your screen can be represented as a 2D array, where 0s represent walkeable areas and 1s represent unwalkeable areas. You are currently searching for the entrance to a cave that is located on the right side of the screen. Your character starts anywhere in the leftmost column.\\n\\nCreate a function that determines if you can enter the\",\"tags\":[\"arrays\",\"games\",\"functional_programming\"],\"timestamp\":{\"$date\":1554517991033},\"title\":\"Can You Enter the Cave?\",\"stats\":{\"completed\":{\"total\":35,\"ratings\":[5,5,5,5,5,5,5,5,5,5,4,2,3,5,3,5,2,1,5,3,3,0,4,3,3,4,5,4,5,2,5,3,4,5,2,2,2,5],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"65dbBZynphj53nXqA\",\"SDtZFL5NzAoCPofXk\",\"bbbpNxM3hgGMCqMn8\",\"Fa69Gq8FX5jretBtz\",\"LTD7KCHFuXrmTWpQ4\",\"8xuMMGF7fyQWL2fKH\",\"7swio9FFT8jEJXubj\",\"7WPf9TjQcYuJnEo4T\",\"n5wubRfh6zh8QRymN\",\"yjtdwc2AC4jA2RWtn\",\"mHT2bJb5SByfJ8yKS\",\"BBP9BE5mKHRzaRpJr\",\"cRpaCxYRmGcN3Nsoj\",\"CwxNzLkbdtBSZRtax\",\"QvFn4NkLSGB2unE7L\",\"ZXRMRAJNP6eseLdbR\",\"7TXyMDHFYjna3dyPb\",\"eFjGhq7C7bBKXjT6X\",\"jnyub52Fi79drGvow\",\"zMCXYFZSsviDCvjnY\",\"JGBCMpnbbi5ztuFoX\",\"x5Lr3XtLph7kpWN8y\",\"aEm3Wvj2rFYRL8Lrb\",\"bXaGdBM8FBLHf7N6Y\",\"va3fDAQm4sqSMoy3R\",\"Es4eX2stRpyoXeC7f\",\"mDWNyaaQ9hvPCRzSd\",\"qPqmhXzgTMmaFRy87\",\"jemTNShfp6ymAs3pj\",\"eHcgvkTGsH7ZziqBo\",\"J5MgLszeGgtciW56n\",\"Rp5TXZtS834L8eWjQ\"],\"quality\":[5,5,4,5]},\"tests\":{\"score\":0,\"voters\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"voters\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"isHidden\":false,\"quality\":4.75,\"family\":[{\"_id\":\"BHoKBE6igXihQ6Jan\",\"language\":\"cpp\"},{\"_id\":\"CP5zy4iLZzNy2KFcN\",\"language\":\"javascript\"},{\"_id\":\"LM5d2b6YG5vXuYiME\",\"language\":\"python3\"},{\"_id\":\"KHn9sxBCvtLJqPrAq\",\"language\":\"ruby\"}]}}"]