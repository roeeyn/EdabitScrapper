a["{\"msg\":\"result\",\"id\":\"2282\",\"result\":{\"_id\":\"kWrkGRDRyCdCbX8Yx\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"function modulo(x, y) {\\n\\t// Your recursive solution here.\\n\\treturn modulo(x, y)\\n}\",\"difficulty\":3.619047619047619,\"familyId\":\"jvnpy2RskoCPg6FYy\",\"instructions\":\"The **modulo operation** can also be done by **repetitive subtraction or addition**. In this challenge, you're going to create a function that mimics such an operation and returns the modulo of the two given numbers by **recursively** subtracting or adding them.\\n\\n### Examples\\n```\\nmodulo(100, 25) ➞ 0\\n\\nmodulo(-51, -4) ➞ -3\\n\\nmodulo(3, 9) ➞ 3\\n\\nmodulo(-21, 5) ➞ -1\\n\\nmodulo(1024, 7) ➞ 2\\n\\nmodulo(273, -6) ➞ 3\\n```\\n\\n### Notes\\n- There will be no **zero-values** for the *modulo divisor*.\\n- You're expected to solve this challenge using a **recursive approach**.\\n- You can read on more topics about recursion (see **Resources** tab) if you aren't familiar with it yet or haven't fully assumed the concept behind it before taking up this challenge.\\n- If you think recursion is fun, you can find a collection of those challenges [here](https://edabit.com/collection/YJH4pAyqDbhLc4STc).\",\"isHidden\":false,\"lab\":\"const recursive = f => (`${f}`.match(RegExp(`${f.name}`,'gm'))||[]).length > +(/function/.test(f))\\nTest.assertEquals(recursive(modulo), true)\\nTest.assertNotEquals(recursive(modulo), false, \\\"Recursion is required!\\\")\\n\\nlet [numVector, resVector] = [[\\n  [100, 25], [-51, -4], [3, 9], [-21, 5], [1024, 7], [273, -6]],\\n  [0, -3, 3, -1, 2, 3]]\\nfor (let i in numVector) Test.assertEquals(modulo(...numVector[i]), resVector[i])\",\"language\":\"javascript\",\"summary\":\"The modulo operation can also be done by repetitive subtraction or addition. In this challenge, you're going to create a function that mimics such an operation and returns the modulo of the two given numbers by recursively subtracting or adding them.\\n\\nExamples\\nmodulo(100, 25) ➞ 0\\n\\nmodulo(-51, -4) ➞ -3\\n\\nmodulo(3, 9) ➞ 3\\n\\nmodulo(-21, 5) ➞ -1\\n\\nmodulo(1024, 7) ➞ 2\",\"tags\":[\"recursion\",\"math\"],\"timestamp\":{\"$date\":1595352955420},\"title\":\"Recursion: Modulo by Subtraction\",\"stats\":{\"completed\":{\"total\":19,\"ratings\":[5,5,5,5,5,5,0,1,2,5,4,1,4,3,3,4,1,3,5,5,5],\"rators\":[\"a777e8chPvJkY3tKa\",\"aEm3Wvj2rFYRL8Lrb\",\"yjtdwc2AC4jA2RWtn\",\"QRv96jmNaYsWkxQEG\",\"va3fDAQm4sqSMoy3R\",\"buX4mCQhtXCfBjeno\",\"DHGZgTxTdCZ2syhac\",\"DPi9QGLctq2y76KuE\",\"ndcR2eNcBWCDYco5B\",\"c7uBxu2rgY77H5d79\",\"s678Wirfor5uYL5T6\",\"PH32cNxBjrK4a28sn\",\"M4vq8ATaS9Jg5X7iP\",\"tAF9Gf6PiGogbZuWs\",\"8BJyXvRWcrvN3nttS\",\"Z9jhP3WeN7jSf4aFs\"],\"quality\":[]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"a777e8chPvJkY3tKa\",\"quality\":0,\"family\":[{\"_id\":\"kWrkGRDRyCdCbX8Yx\",\"language\":\"javascript\"},{\"_id\":\"PCtTk9RRPPKXCxnAx\",\"language\":\"python3\"}]}}"]