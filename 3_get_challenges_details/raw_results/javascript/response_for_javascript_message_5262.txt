a["{\"msg\":\"result\",\"id\":\"1381\",\"result\":{\"_id\":\"SZnDZpQeBwhGXMBPW\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"function alternatePosNeg(arr) {\\n\\t\\n}\",\"difficulty\":2.134020618556701,\"familyId\":\"6264vW8SQG5XFFXEm\",\"instructions\":\"Create a function which validates whether a given array **alternates** between *positive* and *negative* numbers.\\n\\n### Examples\\n```\\nalternatePosNeg([3, -2, 5, -5, 2, -8]) ➞ true\\n\\nalternatePosNeg([-6, 1, -1, 4, -3]) ➞ true\\n\\nalternatePosNeg([4, 4, -2, 3, -6, 10]) ➞ false\\n```\\n\\n### Notes\\n - Lists can be of any length.\\n - It doesn't matter if an array begins/ends with a positive or negative, as long as it alternates.\\n- If an array contains 0, return `false` (as it is neither positive nor negative).\",\"isHidden\":false,\"lab\":\"Test.assertEquals(alternatePosNeg([3, -2, 5, -5, 2, -8]), true)\\nTest.assertEquals(alternatePosNeg([-6, 1, -1, 4, -3]), true)\\nTest.assertEquals(alternatePosNeg([4, 4, -2, 3, -6, 10]), false)\\nTest.assertEquals(alternatePosNeg([34, 49, 33, 17, -47]), false)\\nTest.assertEquals(alternatePosNeg([22]), true)\\nTest.assertEquals(alternatePosNeg([41, 11, 37, -30, -29, 39, -45, 15, -41, 7]), false)\\nTest.assertEquals(alternatePosNeg([3, -7, 15, 18]), false)\\nTest.assertEquals(alternatePosNeg([40]), true)\\nTest.assertEquals(alternatePosNeg([40, 27, -44, -13, -31]), false)\\nTest.assertEquals(alternatePosNeg([40, 50, -7, 45, -7]), false)\\nTest.assertEquals(alternatePosNeg([-23, -16, -9, -15, 16]), false)\\nTest.assertEquals(alternatePosNeg([0, 0, 0, 0]), false)\\nTest.assertEquals(alternatePosNeg([50, 28, -5, 25, -14, -2, 20, 26, -32]), false)\\nTest.assertEquals(alternatePosNeg([24, -10]), true)\\nTest.assertEquals(alternatePosNeg([-2, 4, 16, -15, 24, 2]), false)\\nTest.assertEquals(alternatePosNeg([19, -12, -37, 44, -43, 44, 47]), false)\\nTest.assertEquals(alternatePosNeg([-21, 42, -11, 27, -16, 36, 37]), false)\\nTest.assertEquals(alternatePosNeg([30]), true)\\nTest.assertEquals(alternatePosNeg([3, -7, 15, -18]), true)\\nTest.assertEquals(alternatePosNeg([9, -4, 8, -16]), true)\\nTest.assertEquals(alternatePosNeg([3, -7, 15, -18, 0]), false)\\nTest.assertEquals(alternatePosNeg([0]), false)\\nTest.assertEquals(alternatePosNeg([0, 2, -5, 8, -12]), false)\",\"language\":\"javascript\",\"summary\":\"Create a function which validates whether a given array alternates between positive and negative numbers.\\n\\nExamples\\nalternatePosNeg([3, -2, 5, -5, 2, -8]) ➞ true\\n\\nalternatePosNeg([-6, 1, -1, 4, -3]) ➞ true\\n\\nalternatePosNeg([4, 4, -2, 3, -6, 10]) ➞ false\\n\\nNotes\\n Lists can be of any length.\\n It doesn't matter if an array begins/ends with a positive or negative,\",\"tags\":[\"arrays\",\"numbers\",\"loops\",\"validation\"],\"timestamp\":{\"$date\":1590090202776},\"title\":\"Positives and Negatives\",\"stats\":{\"completed\":{\"total\":122,\"ratings\":[2,2,2,2,2,2,2,0,1,2,0,2,2,3,2,2,2,2,2,1,2,2,2,2,2,3,2,2,1,1,2,2,2,3,3,3,3,3,2,3,3,3,1,3,1,2,2,2,3,2,2,1,2,2,1,3,1,3,3,0,2,3,3,3,2,3,3,3,1,1,0,4,3,4,2,3,2,3,3,1,2,2,2,2,1,1,3,2,3,5,1,3,3,2,1,2,3],\"rators\":[\"vtHbevf2tHqe6mRxX\",\"FGEeCTorXbX3WvjFW\",\"yuLxi2qBJvMnwgdgJ\",\"yjtdwc2AC4jA2RWtn\",\"AasGs8AeX9Lcb9xJn\",\"zw7g7T8wE5R5CBhXr\",\"z5ebtimXwFFJdYxoa\",\"65dbBZynphj53nXqA\",\"RE4Mm9T6Q9uygAxGS\",\"2innwjWqxJHo4eRGh\",\"eQXwk5zGckM8tCWYH\",\"uAS9uKs8KQmp8uhqn\",\"GCsLzWAhLvniQqR3J\",\"FJsvM5yqKuK9yMk9P\",\"QRv96jmNaYsWkxQEG\",\"mHT2bJb5SByfJ8yKS\",\"a777e8chPvJkY3tKa\",\"6BpBQnSGhzgvhXrEy\",\"Nua6T3dBurBy3Qfg9\",\"buX4mCQhtXCfBjeno\",\"xTKRBwoFP3mvzPWzr\",\"noaBx5QyY6pTS5bja\",\"9gpR6bgaFWcBHi52Q\",\"E2hpke7mHxAWsw5t9\",\"ASsfbyG6AwkhqRZSB\",\"MW4gsgPJfaMEMyXPy\",\"acHSYL6uQAgpgFMjp\",\"kJ9RgqiqhMKd3FkcT\",\"BjJhatTBaTWm3ZhCt\",\"yrLBMbni8KDsC5K44\",\"szQg8dxKNNre3v3Jk\",\"aRCwEM8hnYEoHiSiY\",\"jkumHyXfMkhGcPgqC\",\"MmtFmL29LfYYY6rtQ\",\"FiK2ruyH8KeHLAgoA\",\"bX6tpTCjwoi6XMMbK\",\"aEm3Wvj2rFYRL8Lrb\",\"n5wubRfh6zh8QRymN\",\"MT26yxj3YX95DsyLj\",\"pd8dm7sWLW9cY6dYW\",\"fS74N4FXqcPpmxAaE\",\"r7mZLgpQWzRiGddL5\",\"C9LKGu2g5hSijvDzA\",\"ZcqshY58sGEEvgeaq\",\"fMqXimJLsPiuhT8A8\",\"HQzAmqhJ4Eh2k8p8p\",\"3t4kHWEnccLqjJMxu\",\"eoepTq5ES5tfgY9XT\",\"NchnDcEmsLTeFZ4FH\",\"iJC8PmpzSyTnEDqw5\",\"dk4ocPsWCg3WN4Pja\",\"FioqXbWFJxdCop35Z\",\"8Z3dkvWBqtrMEE48N\",\"3WtHp4MBzciz4AE8M\",\"t6dbNFYqfjFfxC6Se\",\"xn7uGNKeAwPEkP9oA\",\"oDnPTXrzYF4snDPXY\",\"Xk2g4CNFAnYcvxiSr\",\"8BJyXvRWcrvN3nttS\",\"veKWMS3ACmRWTjiLK\",\"8raviPK67KKxzQWcF\",\"YtGYxpMxbrHLFK8nq\",\"p5ZshR8zhTqmdhKDc\",\"4Xv87xmdSnpYhi8hz\",\"kp2ZbCewZJAbfd7xv\",\"i3kndQfrF2RowSqc4\",\"4RsakkyRXyYGwFxEa\",\"tAF9Gf6PiGogbZuWs\",\"CNc6rmwhbxkxEhHAp\",\"8s5Bdrn7RTga7DL6x\",\"BdvdJYwHZr7JpkHsn\",\"DjChaA6HXG2vBe4fK\",\"dGugwhA6uwwjPGAa5\",\"JGBCMpnbbi5ztuFoX\",\"ct42f2gGpMXSd9hXM\",\"omn98QP6uBd923Azp\",\"pGh7WykiPe26fHJYv\",\"H46gRHmkdz2CRrGH9\",\"J38sCJqTS96XwwAWE\",\"9dAB9yF2rukm22EnA\",\"Qi3ZTiut4tWJPHibz\",\"2NJuDfSqdrF8kHHni\",\"g4NCSxxHqHCGMpWwT\",\"PLkegh7jJLoeCPgTS\",\"i49enk79wAajcgi7a\",\"5hHf2e9zimbmxMqqF\",\"DPi9QGLctq2y76KuE\",\"6vfjruFp8ZpRSi3AT\",\"srJ34BaybkQh3qRkM\",\"M4vq8ATaS9Jg5X7iP\",\"2Qk2mFu9HBFzrB24i\",\"CH53jGETBeJTummf3\",\"jemTNShfp6ymAs3pj\",\"J7d397iB5GuWRAMfg\",\"wJTDDTE3TrmSXKP4d\",\"zEt6FvmkSPSHvCyGF\",\"NGvCPuMiAP3xrRLfB\",\"Ya3eHgs8x3unZRLpb\",\"Jf2CJyrjenaqixHcB\",\"oDtGiNqDMHmhHE3J8\",\"STipuJs6kBvPqqsSE\",\"P8bXFR4cHwFia9rNM\",\"7nmBK4Gsg3uNFAsbP\",\"sN2JyFeJCwfwwHPwF\",\"Yp7uvStL97cC9fKkY\",\"h9CbFMHNNw7PTDQbt\",\"nkH3HfJXLMNcBMM79\",\"PytNZK9mNiRiZxPrm\",\"jyoLggHk8xQKZuoQC\",\"C8yR2sSnDkr8XfAjb\",\"ERKhKvZtbX7cXNRBP\",\"zoSGvhHbsBykZTuDc\",\"ecEBGmi9dPBxyxfYz\",\"WnogMFYXoyvmBmGkm\",\"KiBCzD2NaCGEbdfNF\",\"ThaiAKWWDw2W4QfJh\"],\"quality\":[5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,4,5,5,4,4,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":4.833333333333333,\"family\":[{\"_id\":\"niNu9f22zboTn3wea\",\"language\":\"cpp\"},{\"_id\":\"hYq8J8HJM3pwCFKiZ\",\"language\":\"java\"},{\"_id\":\"SZnDZpQeBwhGXMBPW\",\"language\":\"javascript\"},{\"_id\":\"HaxQfQTEpo7BFE5rz\",\"language\":\"python3\"},{\"_id\":\"kMbMjarbCvkBYGNdS\",\"language\":\"ruby\"}]}}"]