a["{\"msg\":\"result\",\"id\":\"2320\",\"result\":{\"_id\":\"2sH6c6oyRn3K6DWiF\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"function isConsecutive(s) {\\n\\t// recursive code in here\\n}\",\"difficulty\":3.769230769230769,\"familyId\":\"gjMAWi679jnXKTPyi\",\"instructions\":\"Write a function that will return `true` if a given string (divided and grouped into a size) will contain a set of **consecutive** numbers (regardless of orientation: whether **ascending** or **descending**), otherwise, return `false`.\\n\\n### Examples\\n```\\nisConsecutive(\\\"121314151617\\\") ➞ true\\n// Contains a set of consecutive ascending numbers\\n// if grouped into 2's : 12, 13, 14, 15, 16, 17\\n\\nisConsecutive(\\\"123124125\\\") ➞ true\\n// Contains a set of consecutive ascending numbers\\n// if grouped into 3's : 123, 124, 125\\n\\nisConsecutive(\\\"32332432536\\\") ➞ false\\n// Regardless of the grouping size, the numbers can't be consecutive.\\n\\nisConsecutive(\\\"326325324323\\\") ➞ true\\n// Contains a set of consecutive descending numbers\\n// if grouped into 3's : 326, 325, 324, 323\\n\\nisConsecutive(\\\"667666\\\") ➞ true\\n// Consecutive descending numbers: 667 and 666.\\n\\nisConsecutive(\\\"999897959493\\\") ➞ false\\n```\\n\\n### Notes\\n- A **number** can consist of any number of digits, so long as the numbers are **adjacent** to each other, and the string has **at least two** of them.\\n- An **iterative** version of this challenge can be found via this [link](https://edabit.com/challenge/3kqmmTPHjB67ieK3t).\\n- A **collection** of challenges in **recursion** can be found via this [link](https://edabit.com/collection/YJH4pAyqDbhLc4STc).\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"const isRecursive = src => (`${src}`.match(RegExp(`${src.name}`, 'gm')) || []).length > +(/function/.test(src))\\nTest.assertNotEquals(isRecursive(isConsecutive), false, \\\"Recursion is required!\\\")\\n\\nlet [actualParam, expected] = [\\n  [\\n    \\\"121314151617\\\", \\\"123124125\\\", \\\"667666\\\", \\\"23242526\\\", \\\"444445\\\", \\\"1234567\\\", \\\"123412351236\\\",\\n    \\\"57585960616263\\\", \\\"500001500002500003\\\", \\\"919920921\\\", \\\"12341235123612371238\\\", \\\"326325324323\\\",\\n    \\\"54321\\\", \\\"56555453\\\", \\\"32332432536\\\", \\\"2324256\\\", \\\"1235\\\", \\\"121316\\\", \\\"12131213\\\", \\\"90090190290\\\",\\n    \\\"35236237238\\\", \\\"999897959493\\\", \\\"171615141312119\\\", \\\"1716171819181920\\\", \\\"273274273274\\\"\\n  ], [\\n    true, true, true, true, true, true, true, true, true, true, true, true, true, true,\\n    false, false, false, false, false, false, false, false, false, false, false\\n  ]\\n]\\nfor (let i in actualParam) Test.assertEquals(isConsecutive(actualParam[i]), expected[i])\",\"language\":\"javascript\",\"quality\":0,\"summary\":\"Write a function that will return true if a given string (divided and grouped into a size) will contain a set of consecutive numbers (regardless of orientation: whether ascending or descending), otherwise, return false.\\n\\nExamples\\nisConsecutive(\\\"121314151617\\\") ➞ true\\n// Contains a set of consecutive ascending numbers\\n// if grouped into 2's : 12, 13, 14, 15, 16,\",\"tags\":[\"recursion\",\"sorting\",\"strings\",\"numbers\",\"validation\"],\"timestamp\":{\"$date\":1605233929212},\"title\":\"Recursion: Consecutive Number Series\",\"stats\":{\"completed\":{\"total\":11,\"ratings\":[5,5,5,5,5,5,2,5,1,4,3,1,3],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"aEm3Wvj2rFYRL8Lrb\",\"buX4mCQhtXCfBjeno\",\"Ek9PiwGewEGH6fcqz\",\"kp2ZbCewZJAbfd7xv\",\"GeRAweYm8sv27eMxg\",\"yjtdwc2AC4jA2RWtn\",\"PH32cNxBjrK4a28sn\"]},\"flags\":0},\"family\":[{\"_id\":\"aBm55e7eoE8zYkgo5\",\"language\":\"java\"},{\"_id\":\"2sH6c6oyRn3K6DWiF\",\"language\":\"javascript\"},{\"_id\":\"Ym27MyQQMRWGvEGeP\",\"language\":\"python3\"}]}}"]