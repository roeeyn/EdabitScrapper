a["{\"msg\":\"result\",\"id\":\"1895\",\"result\":{\"_id\":\"9Wvy5ogsYeXjyzMxo\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"function count(box) {\\n\\t\\n}\",\"difficulty\":2.6984126984126986,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"aXEL8Yyw3tN4DdgKT\",\"instructions\":\"Write a function that returns the number of **distinct items** inside a box. Do **not** count items outside the box.\\n\\nThere are four boundaries for a box and those boundaries start with a \\\"#\\\" and end with a \\\"#\\\". Look for horizontal and vertical consecutive hashes.\\n\\n### Examples\\n```\\ncount([\\n  \\\"??????\\\",\\n  \\\"?####?\\\",\\n  \\\"?#&!#?\\\",\\n  \\\"@#^Z#?\\\",\\n  \\\"$####?\\\"\\n]) ➞ 4\\n\\ncount([\\n  \\\"??????\\\",\\n  \\\"?####?\\\",\\n  \\\"?#ZZ#?\\\",\\n  \\\"@#ZZ#?\\\",\\n  \\\"$####?\\\",\\n  \\\"AAAAAA\\\"\\n]) ➞ 1\\n\\ncount([\\n  \\\"AAAAA\\\",\\n  \\\"AAA##\\\",\\n  \\\"AAA##\\\",\\n  \\\"AAAAA\\\",\\n  \\\"AAAAA\\\"\\n]) ➞ 0\\n```\\n\\n### Notes\\nReturn `0` if the box is empty or too small to fit anything.\",\"lab\":\"Test.assertEquals(count(\\n[\\\"??????\\\",\\n\\\"?####?\\\",\\n\\\"?#&!#?\\\",\\n\\\"@#^Z#?\\\",\\n\\\"$####?\\\"]), 4)\\n\\nTest.assertEquals(count(\\n[\\\"??????\\\",\\n\\\"?####?\\\",\\n\\\"?#ZZ#?\\\",\\n\\\"@#ZZ#?\\\",\\n\\\"$####?\\\", \\n\\\"AAAAAA\\\"]), 1)\\n\\nTest.assertEquals(count(\\n[\\\"??????\\\",\\n\\\"?####?\\\",\\n\\\"?#  #?\\\",\\n\\\"@#  #?\\\",\\n\\\"$####?\\\", \\n\\\"AAAAAA\\\"]), 0)\\n\\nTest.assertEquals(count(\\n[\\\"??????Z\\\",\\n\\\"Z?####?V\\\",\\n\\\"$?#  #?X\\\",\\n\\\"$@#BA#?P\\\",\\n\\\"$T####?T\\\", \\n\\\"ZAAAAAAT\\\"]), 2)\\n\\nTest.assertEquals(count(\\n[\\\"??????Z\\\",\\n\\\"Z?####?V\\\",\\n\\\"$?#BB#?X\\\",\\n\\\"$@#BA#?P\\\",\\n\\\"$T####?T\\\", \\n\\\"ZAAAAAAT\\\"]), 2)\\n\\nTest.assertEquals(count(\\n[\\\"!!Z\\\",\\n\\\"###\\\",\\n\\\"#B#\\\",\\n\\\"#B#\\\",\\n\\\"###\\\"]), 1)\\n\\nTest.assertEquals(count(\\n[\\\"!!Z\\\",\\n\\\"###\\\",\\n\\\"#B#\\\",\\n\\\"# #\\\",\\n\\\"###\\\"]), 1)\\n\\nTest.assertEquals(count(\\n[\\\"AAAAA\\\",\\n\\\"AAA##\\\",\\n\\\"AAA##\\\",\\n\\\"AAAAA\\\",\\n\\\"AAAAA\\\"]), 0)\\n\\nTest.assertEquals(count(\\n[\\\"AAAAAAA\\\",\\n\\\"AAA###A\\\",\\n\\\"AAA#!#A\\\",\\n\\\"AAA###A\\\",\\n\\\"AAAAAAA\\\"]), 1)\\n\\nTest.assertEquals(count(\\n[\\\"#AAAAAABC\\\",\\n\\\"AAA#####C\\\",\\n\\\"ZAA#!%@#C\\\",\\n\\\"AAA#####C\\\",\\n\\\"#AAAAAABC\\\"]), 3)\",\"language\":\"javascript\",\"summary\":\"Write a function that returns the number of distinct items inside a box. Do not count items outside the box.\\n\\nExamples\\ncount([\\n  \\\"??????\\\",\\n  \\\"?####?\\\",\\n  \\\"?#&!#?\\\",\\n  \\\"@#^Z#?\\\",\\n  \\\"$####?\\\"\\n]) ➞ 4\\n\\ncount([\\n  \\\"??????\\\",\\n  \\\"?####?\\\",\\n  \\\"?#ZZ#?\\\",\\n  \\\"@#ZZ#?\\\",\\n  \\\"$####?\\\",\\n  \\\"AAAAAA\\\"\\n]) ➞ 1\\n\\ncount([\\n  \\\"AAAAA\\\",\\n  \\\"AAA##\\\",\\n  \\\"AAA##\\\",\\n  \\\"AAAAA\\\",\\n  \\\"AAAAA\\\"\\n]) ➞ 0\\n\\nNotes\\nRetur\",\"tags\":[\"strings\",\"formatting\",\"regex\"],\"timestamp\":{\"$date\":1555531574576},\"title\":\"Inside, not Outside a Box\",\"stats\":{\"completed\":{\"total\":63,\"ratings\":[2,2,2,2,2,2,2,2,2,2,2,3,3,3,4,3,3,4,0,3,2,2,2,1,2,3,3,3,3,3,4,1,3,3,3,4,2,2,2,4,3,2,4,3,3,5,2,4,3,4,2,3,4,3,4,0,4,3,4,3,2,4,1],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"65dbBZynphj53nXqA\",\"SDtZFL5NzAoCPofXk\",\"n5wubRfh6zh8QRymN\",\"CJnuSjyCBMTbTiibD\",\"EjPLq3QSJdGQFJdgW\",\"yjtdwc2AC4jA2RWtn\",\"eomLS3wh6tQPN8jtH\",\"Qa3vzE4H2GeAHmEcQ\",\"h4jFmtbFn92eA4649\",\"EWn8w8P3nNh7knatY\",\"wQErYzMNpNfp37s5N\",\"AasGs8AeX9Lcb9xJn\",\"2innwjWqxJHo4eRGh\",\"EAuL56kpyLytw4RcR\",\"pi76g3eRpnKrhee2a\",\"a777e8chPvJkY3tKa\",\"sBcsrC5paZm9nxjot\",\"E6DBfkTgHuPsDWdG8\",\"QRv96jmNaYsWkxQEG\",\"FJsvM5yqKuK9yMk9P\",\"eFjGhq7C7bBKXjT6X\",\"aEm3Wvj2rFYRL8Lrb\",\"NchnDcEmsLTeFZ4FH\",\"mHT2bJb5SByfJ8yKS\",\"hcm8sL8mNJTSfTdgE\",\"Xk2g4CNFAnYcvxiSr\",\"73AGQGmFwje6sAupk\",\"GJMDLcqB498dLie9L\",\"vic9SZ9qqj9WhRkbd\",\"MW4gsgPJfaMEMyXPy\",\"kp2ZbCewZJAbfd7xv\",\"sQZaiAd85P3REppKe\",\"DFYgDzybjj9k9mCH9\",\"BpiAkZfs6sXRMdArb\",\"rC7kdm3SsSX9udEQk\",\"dgKxbP99h2ELwrGsr\",\"vt88eKvFz6ES8sbrD\",\"qvNk7pHSveLu3jqWw\",\"vewKwcMeGuk3p3MsN\",\"LojZZnLB8pD8d9JkA\",\"ttuGK7od8simjgmCJ\",\"Ac6u9uxPiFD5D8tfr\",\"tAF9Gf6PiGogbZuWs\",\"Jd6KY7BxEJKbvZHen\",\"Akq3fQcPRgPrWfsye\",\"XtZfZuXwcaivjtS3T\",\"PytNZK9mNiRiZxPrm\",\"6P9KgzXeJtZ6ejQcu\",\"mDWNyaaQ9hvPCRzSd\",\"oSj9fRJCwWWXTakth\",\"M4vq8ATaS9Jg5X7iP\",\"QvEXmSEo3ANp3yPyH\",\"8BJyXvRWcrvN3nttS\",\"oDtGiNqDMHmhHE3J8\",\"s678Wirfor5uYL5T6\",\"RE4Mm9T6Q9uygAxGS\",\"FGEeCTorXbX3WvjFW\",\"ThaiAKWWDw2W4QfJh\",\"zkfmaM9szkjNBAKhX\"],\"quality\":[3,5,5,5,3,4]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":1},\"isHidden\":false,\"quality\":4.166666666666667,\"family\":[{\"_id\":\"9Wvy5ogsYeXjyzMxo\",\"language\":\"javascript\"},{\"_id\":\"5FTMMxKmkQtuY9KBP\",\"language\":\"python3\"},{\"_id\":\"XvCXDvmskKpxNQZdN\",\"language\":\"ruby\"}]}}"]