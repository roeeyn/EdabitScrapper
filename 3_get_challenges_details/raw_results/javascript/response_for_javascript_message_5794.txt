a["{\"msg\":\"result\",\"id\":\"1645\",\"result\":{\"_id\":\"qEAaAxNa9v2WZMrEv\",\"author\":\"BijogFc24\",\"authorId\":\"Nb6LYPoQP6KJZt8mz\",\"code\":\"function binaryText(n){\\n\\t \\n}\\n\\t\",\"difficulty\":2.3,\"familyId\":\"JdDnjwj6DzzKEn3y2\",\"instructions\":\"Create a function that takes a binary string and returns the text. The eight bits on the binary string represent 1 character on the ASCII table. For further info, check out the resource tab.\\n\\n### Examples\\n```\\nbinaryText(\\\"01101110011011110110010001100101\\\") ➞ \\\"node\\\"\\n\\nbinaryText('0111001001100101011000010110001101110100') ➞ \\\"react\\\"\\n\\nbinaryText(\\\"011100000111100101110100011010000110111101101110\\\") ➞ \\\"python\\\"\\n```\\n\\n### Notes\\nInputs are all valid strings.\",\"isHidden\":false,\"lab\":\"Test.assertEquals(binaryText(\\\"01110100011110010111000001100101011100110110001101110010011010010111000001110100\\\"), \\\"typescript\\\")\\nTest.assertEquals(binaryText(\\\"01101110011011110110010001100101\\\"), \\\"node\\\")\\nTest.assertEquals(binaryText(\\\"0111001001100101011000010110001101110100\\\"), \\\"react\\\")\\nTest.assertEquals(binaryText(\\\"01101010011000010111011001100001\\\"), \\\"java\\\")\\nTest.assertEquals(binaryText(\\\"011010110110111101110100011011000110100101101110\\\"), \\\"kotlin\\\")\\nTest.assertEquals(binaryText(\\\"011100000111100101110100011010000110111101101110\\\"), \\\"python\\\")\\nTest.assertEquals(binaryText(\\\"01101000011000010111001101101011011001010110110001101100\\\"), \\\"haskell\\\")\",\"language\":\"javascript\",\"summary\":\"Create a function that takes a binary string and returns the text. The eight bits on the binary string represent 1 character on the ASCII table. For further info, check out the resource tab.\\n\\nExamples\\nbinaryText(\\\"01101110011011110110010001100101\\\") ➞ \\\"node\\\"\\n\\nbinaryText('0111001001100101011000010110001101110100') ➞ \\\"react\\\"\\n\\nbinaryText(\\\"01110000011110010111010001\",\"tags\":[\"strings\",\"language_fundamentals\"],\"timestamp\":{\"$date\":1591582570854},\"title\":\"Binary To Text\",\"stats\":{\"completed\":{\"total\":42,\"ratings\":[3,3,3,3,3,4,3,2,4,3,1,0,1,1,4,1,2,2,3,1,0,2,2,2,3,2,2,3,1,3,3,3,2,2,3,2,3,1,3,3],\"rators\":[\"Nb6LYPoQP6KJZt8mz\",\"rrkEbZtHE6xZiamyu\",\"zMCXYFZSsviDCvjnY\",\"wcd6236wYeEb99Yof\",\"PxPMLSwuH3zjjAkvX\",\"hcm8sL8mNJTSfTdgE\",\"yjtdwc2AC4jA2RWtn\",\"n5wubRfh6zh8QRymN\",\"h4jFmtbFn92eA4649\",\"XoFbsoXwxd8EikKhE\",\"PTo9qt93YqGvL8fCa\",\"faYyw7jGsSeaMeYYd\",\"fjBB8rBHeCeMGELvW\",\"bX6tpTCjwoi6XMMbK\",\"Po3v3dHCk6wYGKMwi\",\"FJsvM5yqKuK9yMk9P\",\"mHT2bJb5SByfJ8yKS\",\"AasGs8AeX9Lcb9xJn\",\"RE4Mm9T6Q9uygAxGS\",\"SgnfjQGSp53DLKbmP\",\"65dbBZynphj53nXqA\",\"8raviPK67KKxzQWcF\",\"buX4mCQhtXCfBjeno\",\"aEm3Wvj2rFYRL8Lrb\",\"4Xv87xmdSnpYhi8hz\",\"p5ZshR8zhTqmdhKDc\",\"QRv96jmNaYsWkxQEG\",\"CNc6rmwhbxkxEhHAp\",\"Yp7uvStL97cC9fKkY\",\"e9Cknxbx6o7Nb6REs\",\"DPi9QGLctq2y76KuE\",\"u9cRf5kvtpRB5ffB3\",\"M4vq8ATaS9Jg5X7iP\",\"2Qk2mFu9HBFzrB24i\",\"8BJyXvRWcrvN3nttS\",\"STipuJs6kBvPqqsSE\",\"j5FSQCayX3By73CCw\",\"NGvCPuMiAP3xrRLfB\",\"mdv6r687hYHFziB89\",\"oDtGiNqDMHmhHE3J8\",\"Ya3eHgs8x3unZRLpb\"],\"quality\":[5,3,5,3,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"quality\":4.333333333333333,\"family\":[{\"_id\":\"pYgfrxqT9BjzcraFb\",\"language\":\"cpp\"},{\"_id\":\"qEAaAxNa9v2WZMrEv\",\"language\":\"javascript\"},{\"_id\":\"AGgQTPNy6G5cxz4KK\",\"language\":\"python3\"},{\"_id\":\"8cP2tBMsZ5oFyrJnF\",\"language\":\"ruby\"}]}}"]