a["{\"msg\":\"result\",\"id\":\"1213\",\"result\":{\"_id\":\"CNimjGSPT7xmPJuvY\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"function shiftToLeft(x, y) {\\n\\t// recursive code here\\n}\",\"difficulty\":2.034188034188034,\"familyId\":\"XFQD7n28AuFNqAuYp\",\"instructions\":\"The **left shift** operation is similar to **multiplication by powers of two**, thus, the process is _repetitive_ and can be done _recursively_.\\n\\nSample calculation using the left shift operator (` << `):\\n```\\n10 << 3 = 10 * 2^3 = 10 * 8 = 80\\n-32 << 2 = -32 * 2^2 = -32 * 4 = -128\\n5 << 2 = 5 * 2^2 = 5 * 4 = 20\\n```\\n\\nWrite a **recursive** function that **mimics** (without the use of **<<**) the left shift operator and returns the result from the two given integers.\\n\\n### Examples\\n```\\nshiftToLeft(5, 2) ➞ 20\\n\\nshiftToLeft(10, 3) ➞ 80\\n\\nshiftToLeft(-32, 2) ➞ -128\\n\\nshiftToLeft(-6, 5) ➞ -192\\n\\nshiftToLeft(12, 4) ➞ 192\\n\\nshiftToLeft(46, 6) ➞ 2944\\n```\\n\\n### Notes\\n- There will be no negative values for the second parameter `y`.\\n- This challenge is more like recreating of the **left shift** operation, thus, **the use of the operator directly** is **prohibited**.\\n- You are expected to solve this challenge via **recursion**.\\n- An **iterative** version of this challenge can be found via this [link](https://edabit.com/challenge/pB6CF3rFBi8ykJ3Br).\\n- A **collection** of challenges in recursion can be found via this [link] (https://edabit.com/collection/Yx78jEBrKppHBNsoQ).\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"const opCheck = f => !`${f}`.match(RegExp('<<', 'gm'))\\nconst recursive = f => (`${f}`.match(RegExp(`${f.name}`,'gm'))||[]).length > +(/function/.test(f))\\n\\nTest.assertNotEquals(opCheck(shiftToLeft), false,\\n    \\\"The use of left shift operator (<<) is prohibited!\\\")\\nTest.assertNotEquals(recursive(shiftToLeft), false, \\\"Recursion is required!\\\")\\n\\nlet [numVector, resVector] = [\\n  [[5, 2], [10, 3], [-32, 2], [-6, 5], [12, 4], [46, 6], [57, 0], [79, 1]],\\n  [20, 80, -128, -192, 192, 2944, 57, 158]\\n]\\nfor (let i in numVector) Test.assertEquals(shiftToLeft(...numVector[i]), resVector[i])\",\"language\":\"javascript\",\"quality\":4.764705882352941,\"summary\":\"The left shift operation is similar to multiplication by powers of two, thus, the process is repetitive and can be done recursively.\\n\\nSample calculation using the left shift operator ( << ):\\n10 << 3 = 10 * 2^3 = 10 * 8 = 80\\n-32 << 2 = -32 * 2^2 = -32 * 4 = -128\\n5 << 2 = 5 * 2^2 = 5 * 4 = 20\\n\\nWrite a recursive function that mimics (without the use of <<) the le\",\"tags\":[\"recursion\",\"bit_operations\",\"numbers\"],\"timestamp\":{\"$date\":1603127124917},\"title\":\"Recursion: Left Shift by Powers of Two\",\"stats\":{\"completed\":{\"total\":173,\"ratings\":[2,2,2,2,2,2,4,0,0,0,2,1,0,2,2,2,0,3,2,2,3,2,2,0,1,2,2,2,2,5,3,2,3,4,3,1,2,3,0,3,2,2,2,2,3,3,1,2,2,0,2,2,1,3,1,3,2,3,3,2,2,2,0,2,1,3,3,4,2,3,2,3,2,1,2,0,2,3,1,2,3,3,3,3,3,2,1,2,1,3,1,2,3,3,3,4,0,5,1,1,2,2,2,2,2,1,3,2,1,2,1,3,3,0,3,1,3],\"quality\":[5,5,5,5,5,3,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,2,5,4,5,5,5,4,5,5,4,3,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5],\"rators\":[\"a777e8chPvJkY3tKa\",\"buX4mCQhtXCfBjeno\",\"QRv96jmNaYsWkxQEG\",\"g4NCSxxHqHCGMpWwT\",\"yjtdwc2AC4jA2RWtn\",\"evTTY9hwrtogaNxXn\",\"Yp7uvStL97cC9fKkY\",\"Fbe84X5BDHsqSHe7K\",\"DjChaA6HXG2vBe4fK\",\"eNxNmrKCEShbLR9mA\",\"j2ugW5ihGv67sfh4e\",\"zw7g7T8wE5R5CBhXr\",\"Es4eX2stRpyoXeC7f\",\"bBRzXPk7u95YuDWEL\",\"azAzSkvJd7eyXY9x9\",\"bX6tpTCjwoi6XMMbK\",\"L8tsNu6FWDG8fT9Be\",\"sNcDN3s3rH9wcNg5n\",\"CNc6rmwhbxkxEhHAp\",\"nyh73Tr6GhqAat78g\",\"JGBCMpnbbi5ztuFoX\",\"B7BmAn8YR9rnSX68F\",\"2Ni3PzJAc5fAhqBkb\",\"mHT2bJb5SByfJ8yKS\",\"e2dawvnnRZFvSakaB\",\"8BJyXvRWcrvN3nttS\",\"KG5kJoP68PaZCASxF\",\"PtE8bppQN22TdcpLy\",\"5NGxHLcQ8Af2RJ4TN\",\"EJXaAcika2bAcRAta\",\"yrFSQsHycpsLCDxcm\",\"YPNbhQxe8jHobXqB4\",\"kLzg3YXMNZB5N7Pss\",\"Abrf28F4W6WcFwBD8\",\"R9CvsfEZWGuHDKM28\",\"qSgnv4aebmDaxrX8H\",\"c7uBxu2rgY77H5d79\",\"umE8dRTGWzrZFp755\",\"4p2sARSZNNnKqjAT6\",\"a2v8nGe7Kv52syKem\",\"5nHtgdY8F2FbAMawq\",\"H3q76En4bsaZpbPeS\",\"HTAm62DZytAEFgSnu\",\"qeFAzzrvoEZBD2mfc\",\"8s5Bdrn7RTga7DL6x\",\"5unWrvqG7XxEwB4pX\",\"cgfDEGKJdk3LgrPDp\",\"YS2vn4mFRcHprdtWC\",\"36aiLHJ7QLbYH5gKK\",\"pupo5TnehimMbLzgR\",\"WdxkMzYwyF5xaT2bu\",\"G2Tp8KQzq4TQp2JfJ\",\"2ZFoLTxcCARhwc8xX\",\"uZAZAytp3jtkCxDSy\",\"5mZ2QfmceSQktkXFi\",\"QAZ5DGaWWYhku4BNz\",\"P6Nj8vL3bcTZFD2Xz\",\"jCWNL3dnX8a3Yr9TH\",\"sAhNjH3HZ9tSSSKTX\",\"2DRGDspdFT7ed6Q9H\",\"2Qk2mFu9HBFzrB24i\",\"b4P6bc2W99cA4zbZ7\",\"vqtjq3q5BwgrTDKZB\",\"Zkff5RAXB5cgQpsau\",\"5rmqSjwK8b6a5SWHn\",\"JguR89pycKo3xCSzH\",\"RKKuw76K7sRBMouKq\",\"3m9Fypfw53xpMd8wE\",\"6HYDdhczPxNMaXfgk\",\"wqL5X9qoTcnxrnHHS\",\"Xk2g4CNFAnYcvxiSr\",\"rSJGLYSXMuu3RWjun\",\"PH32cNxBjrK4a28sn\",\"AFfw7cGg83uYk2Miy\",\"YfWyvMhdY3xcGrK5R\",\"aioxCetPBzb6SxoW9\",\"qzzyGD7fCCDjX25za\",\"8hXYu8tLp52JQCWPS\",\"LHfgG9iT4T2obfD9x\",\"zza5WjC8QrHcoDZBF\",\"2CqBcgQQRoWBatLsW\",\"DgJo4MgZS9HLZLGKt\",\"dxFtJBqPxFSsh44Em\",\"wJTDDTE3TrmSXKP4d\",\"RDesnxbcnyHKT6AW8\",\"SYEuojZtP6yLXryHv\",\"u9cRf5kvtpRB5ffB3\",\"RtPhDuwmvWNHiBxmG\",\"hNEhHd8qodq4P3h2g\",\"p6qLK4qS2dnFzDA7k\",\"sqgCuS8wPNJPwFRi9\",\"Kntd2rSgWYWp8r4sP\",\"HyKRY7xroLjYKF7PH\",\"sRt2L9qxPZZHG2YbP\",\"EkaHge5WaoGpiCxpx\",\"mPFCAi263j4iM9EqW\",\"ekQh3jzgGLsEMbKo3\",\"YyESroSSoSAzgmJbM\",\"sHDcTJTsrxM3QnJij\",\"M4vq8ATaS9Jg5X7iP\",\"xGnWBtvzqkRD6yQju\",\"QjGNkRM3Xc78yShJN\",\"QvEXmSEo3ANp3yPyH\",\"d7JAGB9g43TPprkMD\",\"pi76g3eRpnKrhee2a\",\"J9LNQ2TgTy3h7zczG\",\"Khh8RvgiZqz8TEDZy\",\"bbhoBP2xk5W65FqZW\",\"ZcJm2kuqJnN3CXFaR\",\"4cKKSptLkHrnmGv3E\",\"Ya3eHgs8x3unZRLpb\",\"NAQukW9ahwQyjPkBD\",\"9XnGoq9Tv6ut3zTtH\",\"AasGs8AeX9Lcb9xJn\",\"YH6EDnQZDtoMLK9kj\",\"mGe2woKS3fACnycH4\",\"AXP8i5pzJX65a4zsk\",\"xges5rijESfvNfJ7w\",\"BEq2obR9C34YiXLud\",\"oDtGiNqDMHmhHE3J8\",\"YBPfpZAs3NagjssvE\",\"SDtZFL5NzAoCPofXk\",\"RE4Mm9T6Q9uygAxGS\",\"49XFttjKo2QhEWT3R\",\"Zrkohir67KkYgbvF4\",\"wo4cpen33NYFHNca7\",\"PGCDJpQMN8Sjn9Gm6\",\"5nhmyqLy8M2Yn2HMR\",\"ahAe7pcyjYGzcDRm4\",\"GiQCH5nvo5A2pnREZ\",\"tAF9Gf6PiGogbZuWs\",\"c8cX5Qbnp2nJwf2Tw\",\"MJ4Wd6fGDDBm3tzcg\",\"LcSKLPteyzXoHzvfH\",\"y5uMDAvJtqCy9acpX\",\"RoGGD5cpHb4ftdLDv\",\"ispfRNLRWmTdmCkzc\",\"AMpQSjKsRqhCDyS2j\",\"ZqqeirvNx5o4jKfyn\",\"tfW5vzQsC3GJyvjgX\",\"34bE6mric984YYLZQ\",\"gXp6pJgv4NrkdJ7ry\",\"rqeF88eXmoKSr4HeK\",\"jyoLggHk8xQKZuoQC\",\"nMxZsNQ6btmmevxfj\",\"TzFjr3Zv9Kfdd7awX\",\"6uvMgGxwu7j8zvcsQ\",\"JsKb5pYAAabvMnJ68\",\"oS8RbMKnP2RQyKh2A\",\"gSrqu8MsZMFSxxWAZ\",\"z5QR6HAxPer9JP27c\",\"i8rND7EkbgsSwaLRh\",\"g4KQmB9AfsuCTxNyp\",\"46SBqYjYrHQhMzp2Y\",\"CHvzhtXnv8HTbPQ56\",\"Jzoqbyj7sZbxLdErz\",\"Ewm5oQkY6ofmyE6RZ\",\"LNyYx6p7pNCqzMuhb\",\"TiQSh5Xt3BpxMeW4W\",\"aPsG2ycnSqR2jKdrJ\",\"GkjcKp3uErEMhTJ2k\",\"5QFAiep6RrWgJEbJZ\",\"iqmPb9JuJDgTFeR8Q\"]},\"flags\":0},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"whdNuCbR69fpLhbBv\",\"language\":\"java\"},{\"_id\":\"CNimjGSPT7xmPJuvY\",\"language\":\"javascript\"},{\"_id\":\"g3BokS6KZgyYT8Hjm\",\"language\":\"python3\"}]}}"]