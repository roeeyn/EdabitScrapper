a["{\"msg\":\"result\",\"id\":\"1083\",\"result\":{\"_id\":\"NENuEMyxCoPzxwq5D\",\"author\":\"zatoichi49\",\"authorId\":\"tAF9Gf6PiGogbZuWs\",\"code\":\"function golfScore(course, result) {\\n\\t\\n}\",\"difficulty\":1.7481481481481482,\"familyId\":\"w48Axur3otjkr424Q\",\"instructions\":\"A standard-sized golf course has 18 holes. Each hole is given a *par*, which is the expected number of strokes (hits) that a good player would use to complete a hole. Golf also uses different terms for a player being over/under par for a particular hole:\\n\\n- \\\"eagle\\\" = 2 under par (-2)\\n- \\\"birdie\\\" = 1 under par (-1)\\n- \\\"bogey\\\" = 1 over par (+1)\\n- \\\"double-bogey\\\" = 2 over par (+2)\\n\\nExample scores:\\n\\n- \\\"birdie\\\" on a par 3 hole = 2\\n- \\\"eagle\\\" on a par 5 hole = 3\\n- \\\"par\\\" on a par 3 hole = 3\\n- \\\"bogey\\\" on a par 4 hole = 5\\n\\nGiven an array of pars for an 18-hole golf course, and another array containing the player result for each hole, return the **total score** for the round of golf.\\n\\n### Example\\n```\\ncourse = [4, 4, 5, 3, 4, 4, 3, 5, 5, 3, 5, 4, 4, 4, 4, 3, 4, 4]\\n\\nresult = [\\\"eagle\\\", \\\"bogey\\\", \\\"par\\\", \\\"bogey\\\", \\\"double-bogey\\\", \\\"birdie\\\", \\\"bogey\\\", \\\"par\\\", \\\"birdie\\\", \\\"par\\\", \\\"par\\\", \\\"par\\\", \\\"par\\\", \\\"par\\\", \\\"bogey\\\", \\\"eagle\\\", \\\"bogey\\\", \\\"par\\\"]\\n\\nscore = 2+5+5+4+6+3+4+5+4+3+5+4+4+4+5+1+5+4 = 73\\n```\\n\\n### Notes\\nFor this challenge, there will be no *holes-in-one*, *albatrosses* (-3), or anything worse than a double-bogey.\",\"lab\":\"Test.assertEquals(golfScore([4, 4, 4, 4, 5, 3, 3, 4, 3, 5, 4, 4, 3, 4, 5, 4, 4, 5], ['double-bogey', 'par', 'par', 'double-bogey', 'eagle', 'par', 'bogey', 'birdie', 'birdie', 'bogey', 'par', 'birdie', 'par', 'par', 'par', 'par', 'bogey', 'par']), 74)\\nTest.assertEquals(golfScore([5, 4, 4, 4, 4, 4, 5, 4, 3, 3, 4, 5, 3, 4, 4, 3, 5, 4], ['par', 'bogey', 'birdie', 'bogey', 'par', 'birdie', 'par', 'bogey', 'eagle', 'par', 'par', 'birdie', 'par', 'eagle', 'double-bogey', 'birdie', 'par', 'birdie']), 68)\\nTest.assertEquals(golfScore([4, 3, 4, 4, 5, 4, 5, 4, 4, 4, 3, 5, 4, 4, 3, 4, 3, 5], ['bogey', 'par', 'birdie', 'par', 'par', 'birdie', 'bogey', 'par', 'par', 'double-bogey', 'par', 'double-bogey', 'par', 'eagle', 'par', 'par', 'par', 'par']), 74)\\nTest.assertEquals(golfScore([4, 5, 4, 4, 4, 5, 5, 3, 4, 5, 4, 3, 4, 3, 3, 4, 4, 4], ['par', 'par', 'eagle', 'bogey', 'birdie', 'par', 'par', 'par', 'birdie', 'eagle', 'bogey', 'bogey', 'par', 'par', 'par', 'par', 'birdie', 'bogey']), 69)\\nTest.assertEquals(golfScore([5, 5, 3, 5, 4, 4, 3, 4, 4, 4, 3, 3, 4, 4, 4, 5, 4, 4], ['birdie', 'par', 'par', 'par', 'bogey', 'bogey', 'bogey', 'double-bogey', 'par', 'par', 'par', 'par', 'eagle', 'par', 'double-bogey', 'par', 'birdie', 'par']), 75)\\nTest.assertEquals(golfScore([4, 4, 4, 4, 5, 3, 4, 4, 3, 5, 3, 4, 5, 3, 4, 5, 4, 4], ['eagle', 'par', 'birdie', 'par', 'par', 'par', 'bogey', 'birdie', 'par', 'bogey', 'birdie', 'double-bogey', 'par', 'par', 'par', 'par', 'par', 'par']), 71)\\nTest.assertEquals(golfScore([4, 5, 4, 4, 4, 4, 3, 5, 4, 3, 5, 5, 4, 3, 3, 4, 4, 4], ['par', 'par', 'bogey', 'birdie', 'birdie', 'par', 'par', 'par', 'par', 'bogey', 'par', 'par', 'birdie', 'par', 'birdie', 'bogey', 'birdie', 'double-bogey']), 72)\\nTest.assertEquals(golfScore([4, 5, 3, 4, 4, 4, 4, 3, 4, 5, 4, 5, 4, 4, 4, 3, 5, 3], ['double-bogey', 'birdie', 'eagle', 'par', 'par', 'birdie', 'par', 'par', 'double-bogey', 'par', 'par', 'par', 'birdie', 'par', 'bogey', 'par', 'birdie', 'par']), 71)\\nTest.assertEquals(golfScore([5, 5, 4, 5, 3, 4, 3, 4, 5, 3, 4, 4, 4, 4, 4, 4, 3, 4], ['par', 'par', 'eagle', 'bogey', 'bogey', 'par', 'birdie', 'par', 'par', 'par', 'par', 'birdie', 'birdie', 'eagle', 'par', 'birdie', 'par', 'birdie']), 65)\\nTest.assertEquals(golfScore([5, 3, 4, 4, 4, 4, 5, 3, 4, 4, 4, 3, 4, 5, 4, 5, 4, 3], ['bogey', 'eagle', 'par', 'eagle', 'bogey', 'birdie', 'par', 'par', 'birdie', 'birdie', 'eagle', 'birdie', 'par', 'double-bogey', 'par', 'bogey', 'bogey', 'par']), 68)\\nTest.assertEquals(golfScore([5, 4, 4, 3, 5, 4, 4, 4, 4, 5, 4, 3, 4, 3, 4, 5, 4, 3], ['birdie', 'par', 'par', 'par', 'par', 'par', 'par', 'eagle', 'birdie', 'par', 'bogey', 'birdie', 'bogey', 'birdie', 'par', 'par', 'birdie', 'par']), 67)\\nTest.assertEquals(golfScore([4, 4, 4, 3, 4, 4, 4, 5, 4, 3, 4, 3, 5, 3, 4, 5, 4, 5], ['double-bogey', 'par', 'bogey', 'birdie', 'par', 'par', 'birdie', 'par', 'par', 'par', 'par', 'par', 'bogey', 'par', 'par', 'birdie', 'birdie', 'par']), 72)\\nTest.assertEquals(golfScore([4, 3, 4, 4, 3, 5, 4, 4, 5, 3, 4, 3, 5, 4, 4, 4, 5, 4], ['par', 'eagle', 'bogey', 'par', 'birdie', 'bogey', 'par', 'par', 'birdie', 'par', 'par', 'double-bogey', 'par', 'bogey', 'bogey', 'double-bogey', 'par', 'bogey']), 77)\\nTest.assertEquals(golfScore([3, 4, 5, 3, 4, 5, 3, 5, 4, 4, 4, 4, 4, 3, 5, 4, 4, 4], ['double-bogey', 'par', 'par', 'par', 'bogey', 'par', 'par', 'par', 'par', 'birdie', 'par', 'eagle', 'eagle', 'bogey', 'par', 'birdie', 'bogey', 'double-bogey']), 73)\\nTest.assertEquals(golfScore([3, 4, 5, 4, 4, 3, 5, 4, 4, 4, 4, 4, 5, 3, 5, 3, 4, 4], ['double-bogey', 'par', 'par', 'par', 'par', 'birdie', 'par', 'bogey', 'bogey', 'par', 'par', 'birdie', 'par', 'par', 'par', 'par', 'birdie', 'bogey']), 74)\\nTest.assertEquals(golfScore([5, 3, 4, 3, 4, 5, 4, 4, 4, 4, 4, 3, 4, 5, 5, 4, 3, 4], ['par', 'double-bogey', 'par', 'birdie', 'eagle', 'eagle', 'birdie', 'birdie', 'eagle', 'par', 'par', 'par', 'par', 'par', 'eagle', 'birdie', 'bogey', 'bogey']), 64)\\nTest.assertEquals(golfScore([5, 4, 4, 3, 4, 5, 4, 3, 3, 4, 4, 4, 4, 5, 3, 5, 4, 4], ['bogey', 'birdie', 'birdie', 'par', 'eagle', 'par', 'birdie', 'par', 'par', 'eagle', 'par', 'bogey', 'par', 'par', 'par', 'eagle', 'par', 'par']), 65)\\nTest.assertEquals(golfScore([4, 4, 4, 4, 5, 3, 5, 4, 4, 4, 3, 3, 3, 5, 4, 5, 4, 4], ['par', 'par', 'par', 'eagle', 'birdie', 'birdie', 'bogey', 'eagle', 'bogey', 'eagle', 'par', 'birdie', 'bogey', 'bogey', 'par', 'bogey', 'par', 'par']), 68)\\nTest.assertEquals(golfScore([4, 5, 5, 3, 3, 4, 5, 3, 5, 4, 3, 4, 4, 4, 4, 4, 4, 4], ['par', 'bogey', 'par', 'par', 'bogey', 'par', 'birdie', 'birdie', 'eagle', 'bogey', 'par', 'par', 'par', 'eagle', 'bogey', 'double-bogey', 'par', 'eagle']), 70)\\nTest.assertEquals(golfScore([4, 5, 3, 4, 4, 4, 5, 5, 4, 4, 4, 3, 4, 4, 3, 5, 3, 4], ['par', 'birdie', 'par', 'birdie', 'eagle', 'birdie', 'par', 'par', 'par', 'par', 'par', 'birdie', 'par', 'double-bogey', 'par', 'birdie', 'bogey', 'eagle']), 66)\",\"language\":\"javascript\",\"summary\":\"A standard-sized golf course has 18 holes. Each hole is given a par, which is the expected number of strokes (hits) that a good player would use to complete a hole. Golf also uses different terms for a player being over/under par for a particular hole:\\n\\n\\\"eagle\\\" = 2 under par (-2)\\n\\\"birdie\\\" = 1 under par (-1)\\n\\\"bogey\\\" = 1 over par (+1)\\n\\\"double-bogey\\\" = 2 over par\",\"tags\":[\"arrays\",\"conditions\",\"language_fundamentals\"],\"timestamp\":{\"$date\":1562608158682},\"title\":\"What's My Golf Score?\",\"stats\":{\"completed\":{\"total\":149,\"ratings\":[2,2,2,2,2,1,1,0,2,2,3,0,2,2,2,2,2,2,0,1,1,2,0,2,1,2,1,1,1,2,2,0,2,1,2,2,0,2,2,0,3,2,0,2,5,1,1,1,3,2,2,2,2,2,2,0,2,2,2,2,2,2,3,2,2,0,2,2,2,2,2,2,0,2,2,2,1,2,2,2,2,2,0,2,3,2,2,2,2,3,2,2,2,2,2,2,2,2,0,1,2,0,2,0,2,3,2,1,2,2,2,2,2,2,3,2,2,2,3,2,2,2,2,2,2,2,5,1,0,2,2,2,2,2,1],\"rators\":[\"n5wubRfh6zh8QRymN\",\"uHiWaYZKT5iCJtLr4\",\"2WsZ5Q86ejroqdNw2\",\"EWn8w8P3nNh7knatY\",\"RE4Mm9T6Q9uygAxGS\",\"eomLS3wh6tQPN8jtH\",\"SDtZFL5NzAoCPofXk\",\"65dbBZynphj53nXqA\",\"CJnuSjyCBMTbTiibD\",\"zgoq9MhrL2h75DAMA\",\"tQwDooQpBeuprEcRK\",\"EjPLq3QSJdGQFJdgW\",\"iERYTAAJo3rBJ8Rok\",\"Jh6sPsgj8yHy95joL\",\"FJsvM5yqKuK9yMk9P\",\"HrJtdRbvHHNh7tMMo\",\"E3fyZ23p26CcvHvuR\",\"wcjknenWdPRhrRScv\",\"Akq3fQcPRgPrWfsye\",\"Q9KQomTTPBsrkAL6c\",\"GpqPxePMyP6mB8bpD\",\"LrF8rMBdkJoZPJP5L\",\"XKi8iZXBCHCaebSHh\",\"7gZKfvwaeqsGKXMEN\",\"oWyEYmHAKDPxEK6Jw\",\"csRoCgJx5NBJzW8pX\",\"9AdMR4uBsHxRcd86Q\",\"2DfWvsPT8TPPNbQpt\",\"TSw2bnMa3sKLH2uiA\",\"FiK2ruyH8KeHLAgoA\",\"arYfZZakzSHEnsu4i\",\"dgwRvPi62zKghWiHb\",\"gyB5wJihaSZCWKTCB\",\"6BpBQnSGhzgvhXrEy\",\"zw7g7T8wE5R5CBhXr\",\"538PKNyqMiCwLWYWK\",\"hi4T9cRdY7T37Dbuy\",\"R4JQmeA6cYyfXbmLF\",\"L9XxCiDxYJGcMQvxF\",\"e8ftyJ6nKRtZDwGWJ\",\"5Zq3aGdvh4LHBvnJL\",\"yjtdwc2AC4jA2RWtn\",\"rZfbfxCJbYsvhgKcn\",\"bKPvJHLQ3ovQLt9MJ\",\"66gXXy97s3jxAeS9q\",\"dqWKb5RvGAXWJjZdQ\",\"gSpcNJ8znvGGfWsQH\",\"AasGs8AeX9Lcb9xJn\",\"6QEhBfzWmuYwm34zz\",\"3awyiorYPgCqqP7Sr\",\"DHwbkbzYNpmkSFT7u\",\"mHT2bJb5SByfJ8yKS\",\"PJu3WcTpfRrvHfQiS\",\"qJZsi5rhRnWA38FbA\",\"oFckF5bB5dGBQKneS\",\"8cLT8Roj8qzeKBCTC\",\"vThHLd8MLkmyJHox9\",\"BdvdJYwHZr7JpkHsn\",\"z6QfbuG6TXE7GKynQ\",\"sbme4fRJjjBjYXRbY\",\"9gEWz76H8KmhN4yJj\",\"ih2aGaqkMaagTgyL2\",\"2CvHJcA9aXt9pvZwA\",\"2innwjWqxJHo4eRGh\",\"8Z3dkvWBqtrMEE48N\",\"zd9FLSzsGz3evKafy\",\"8BFSTCnoe2QggN64c\",\"XAs2B9AdEgSHPACPj\",\"ySAhhKgWGazPsBYsE\",\"5YCX58nhHT8oRCHyy\",\"g5noFWaoRtZNcEEAW\",\"pi76g3eRpnKrhee2a\",\"uAS9uKs8KQmp8uhqn\",\"k5TGxBtLi9BXxeChT\",\"YER6iBcpJCuhgrYDN\",\"M7kpJSXFx67HhrTaZ\",\"tuTQhfZC5izTmXEgR\",\"cp3X8hk8yNME7qoD9\",\"Kc3SDafimwpZWrATJ\",\"2ZFoLTxcCARhwc8xX\",\"tAF9Gf6PiGogbZuWs\",\"u5rSSBDXZCkbQXTZm\",\"a777e8chPvJkY3tKa\",\"eFjGhq7C7bBKXjT6X\",\"Wv9v7fHb8umujfg2j\",\"ij9YRJvZz6WbqcGXS\",\"buX4mCQhtXCfBjeno\",\"r7mZLgpQWzRiGddL5\",\"C9LKGu2g5hSijvDzA\",\"ub8rqqsdqowCrcxPi\",\"pLpcDC3EYx2DDQSdt\",\"nAmJEX7BkHLd9LsG2\",\"PGCDJpQMN8Sjn9Gm6\",\"QRv96jmNaYsWkxQEG\",\"oZJyqjsBxEHmtS9SL\",\"3pb8q4K4jv6jta45d\",\"Po3v3dHCk6wYGKMwi\",\"7wtuhPesfhcYsfZaZ\",\"moe6ztrsNzFymC3A7\",\"2tCCFm5iefjrRSaxv\",\"kp2ZbCewZJAbfd7xv\",\"evTTY9hwrtogaNxXn\",\"aEm3Wvj2rFYRL8Lrb\",\"Ya3eHgs8x3unZRLpb\",\"u9cRf5kvtpRB5ffB3\",\"CNc6rmwhbxkxEhHAp\",\"g4NCSxxHqHCGMpWwT\",\"AFfw7cGg83uYk2Miy\",\"JZ5mQXCKxaFjrnGtq\",\"Gc2bmsof5vD2Hsgqv\",\"DDokdbBKxv49M445o\",\"oE8rNagYonFzFvKH5\",\"jLSZdBseR2kfjt8dL\",\"7iJbwKmKpQa3HKe8m\",\"Yp7uvStL97cC9fKkY\",\"vewKwcMeGuk3p3MsN\",\"nkH3HfJXLMNcBMM79\",\"e9Cknxbx6o7Nb6REs\",\"MukKAG9j2y873SWtG\",\"eKSJgCaiy4ReJWXTg\",\"3Gf7ikLijfoxabiPY\",\"DPi9QGLctq2y76KuE\",\"YSmLyP3eRhcFjJPzg\",\"2Qk2mFu9HBFzrB24i\",\"srJ34BaybkQh3qRkM\",\"M4vq8ATaS9Jg5X7iP\",\"mDWNyaaQ9hvPCRzSd\",\"NGvCPuMiAP3xrRLfB\",\"8BJyXvRWcrvN3nttS\",\"jkumHyXfMkhGcPgqC\",\"coP7BcmwP2EuyfqBq\",\"oDtGiNqDMHmhHE3J8\",\"nBJve5CzG6WAw7WFQ\",\"gXTAie79kiw28tx5u\",\"z5ebtimXwFFJdYxoa\",\"n4Y5EEGCjmrK99yrt\",\"jyoLggHk8xQKZuoQC\",\"bfYmA3LMvhSrK59cn\",\"sN2JyFeJCwfwwHPwF\",\"LwD3CyYSiBfg3mA4r\",\"mpLFbFKjY6u3nsDMv\",\"3rQ3fN5SM2eGHmTi5\",\"pd8WivFXYZBAGbZm4\",\"LPZ2QKCoB8q6rG25c\",\"5QN8R22z43SrwoHDz\"],\"quality\":[4,5,3,5,5,5,5,3,5,5,5,3,4,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.466666666666667,\"family\":[{\"_id\":\"eYZJpApDcuy8X76Yk\",\"language\":\"cpp\"},{\"_id\":\"NENuEMyxCoPzxwq5D\",\"language\":\"javascript\"},{\"_id\":\"wZzZ9NtugwsnQEQeM\",\"language\":\"python3\"},{\"_id\":\"BDMYwMvw7fp2RtqQj\",\"language\":\"ruby\"}]}}"]