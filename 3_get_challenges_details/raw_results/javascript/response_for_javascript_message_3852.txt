a["{\"msg\":\"result\",\"id\":\"680\",\"result\":{\"_id\":\"zCkag8556FAjJ6W4L\",\"author\":\"Ruud Peter Boelens\",\"authorId\":\"Akq3fQcPRgPrWfsye\",\"code\":\"// The function is at the test tab, you only need to provide\\n// the Regex variable:\\n\\nconst rx = \",\"difficulty\":1.4524714828897338,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"q47XeA849b3mLQeo8\",\"instructions\":\"Your job is to make a \\\"Twitter link\\\" regular expression `rx`. This RegEx searches a tweet to find the **@handle** and the **#handle**.\\n\\n- The function is already written in the **Tests** tab, so you only need to provide the RegEx variable in the **Code** tab.\\n- Only return the **@** and **#** handles.\\n\\n### Examples\\n```\\ntweet(\\\"Visit us at @edabit\\\") ➞ \\\"@edabit\\\"\\n\\ntweet(\\\"Follow @JavaScript\\\") ➞ \\\"@JavaScript\\\"\\n\\ntweet(\\\"#Honesty is the best @policy!!\\\") ➞ \\\"#Honesty @policy\\\"\\n```\\n\\n### Notes\\nMake sure the RegEx doesn't return `.` `,` `!` `?`, etc.\",\"isHidden\":false,\"lab\":\"const tweet = str => str.match(rx).join` `;\\n\\n[\\n[ 'Visit us at @edabit', '@edabit' ],\\n[ 'This is #definitely, the @second test', '#definitely @second' ],\\n[ '#Finally, a test!', '#Finally' ],\\n[ '#Paris is the capital of #France.', '#Paris #France' ],\\n[ 'The @committee consists of #eminent #jurists.',\\n  '@committee #eminent #jurists'],\\n[ '#Honesty is the best @policy!!', '#Honesty @policy' ],\\n[ '@RonaldRoss was awarded the Nobel Prize for his work on the transmission of #malaria.',\\n  '@RonaldRoss #malaria'],\\n[ 'Follow @JavaScript', '@JavaScript' ]]\\n\\t.forEach(x => Test.assertEquals(tweet(x[0]), x[1]));\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,2,2,1,3,0,0,1,2,2,1,2,1,1,2,2,1,1,2,1,0,2,1,2,2,2,1,0,0,2,0,2,0,1,2,1,2,3,0,3,1,0,1,1,2,1,2,1,0,0,2,2,1,2,2,2,2,1,1,0,2,1,1,2,1,2,1,2,0,0,1,2,1,2,2,2,1,1,2,3,1,2,3,1,2,2,1,2,2,0,2,0,1,1,1,0,1,0,2,2,2,2,0,2,2,2,1,2,0,2,3,0,2,2,1,1,2,2,2,1,2,1,3,1,2,1,1,1,0,2,2,2,1,2,2,2,1,2,2,1,2,1,1,2,0,3,0,2,2,2,0,1,2,2,2,2,2,2,2,2,2,2,1,2,1,1,2,2,0,2,2,2,2,1,2,2,1,2,2,1,2,2,2,1,1,0,2,5,0,2,2,1,2,1,1,1,2,2,2,2,2,1,0,2,0,2,1,0,1,1,1,1,1,2,3,0,1,0,1,2,2,0,2,1,2,2,1,1,2,5,2,0,2,2,2,1,0,1,2,2,2,2,1,1,1,2,1,1,2,0,1,2,1,2,0,2,2,2],\"rators\":[\"Akq3fQcPRgPrWfsye\",\"FJsvM5yqKuK9yMk9P\",\"Y9Nz9yafaibz54W4o\",\"5Zq3aGdvh4LHBvnJL\",\"7k59BcMjggHituTbt\",\"n5wubRfh6zh8QRymN\",\"yjtdwc2AC4jA2RWtn\",\"BdvdJYwHZr7JpkHsn\",\"AasGs8AeX9Lcb9xJn\",\"sbme4fRJjjBjYXRbY\",\"z6QfbuG6TXE7GKynQ\",\"jqbm8L6895JgAtZ6H\",\"n5Z5LFzfFxyQDuk5N\",\"65dbBZynphj53nXqA\",\"EWn8w8P3nNh7knatY\",\"RE4Mm9T6Q9uygAxGS\",\"2innwjWqxJHo4eRGh\",\"zgoq9MhrL2h75DAMA\",\"zd9FLSzsGz3evKafy\",\"ih2aGaqkMaagTgyL2\",\"wcjknenWdPRhrRScv\",\"EjPLq3QSJdGQFJdgW\",\"9gEWz76H8KmhN4yJj\",\"6BpBQnSGhzgvhXrEy\",\"2CvHJcA9aXt9pvZwA\",\"zTZtM9jRsu8eXie6s\",\"H3yM3F3mukfdq9fit\",\"Jh6sPsgj8yHy95joL\",\"xfxkLoQsbZBonmBGp\",\"CJnuSjyCBMTbTiibD\",\"cp3X8hk8yNME7qoD9\",\"Jd6KY7BxEJKbvZHen\",\"dDFJpK4pXCsQYuHmc\",\"3K9yDMNkwanR9NWh3\",\"REWERn3LH8vj9AnLh\",\"yaL57wdXmgAZTvKfX\",\"zAMR5yM6wpzfE3a4S\",\"8BFSTCnoe2QggN64c\",\"SDtZFL5NzAoCPofXk\",\"bKPvJHLQ3ovQLt9MJ\",\"mHaHudYExvi45DSRf\",\"aPX8qCXL6TmfpRfgy\",\"6gPHMpkEP8JuHxzpd\",\"ygNnCnmzZfy3r2m6w\",\"g5noFWaoRtZNcEEAW\",\"ePrQatjrpPQKpmwFf\",\"9XnGoq9Tv6ut3zTtH\",\"grdgbva88QijFMPkn\",\"EAuL56kpyLytw4RcR\",\"SjY6a2v6jMjGraDKz\",\"SMKpDGz4jYPge9xsA\",\"fnpRjpCRMANcg2x6r\",\"2QZR3NW2LfGYTqeFH\",\"ZRT8WaD6TLu3jkD33\",\"GB3NHPPMge2CshbY6\",\"EoNHgbWsF6ZQF4eYr\",\"Pwt5LQa5iBr4FuEji\",\"sutzxu4yTueBKE9Qp\",\"Q9KQomTTPBsrkAL6c\",\"Dcb3sKxHdiXwdwhXq\",\"5YCX58nhHT8oRCHyy\",\"R35tqE5etfTYTfmGr\",\"Yx2w57JbzY92Q4DFP\",\"wjc4iejpErBhxWwHo\",\"YER6iBcpJCuhgrYDN\",\"RyAFEHBBXcHpAf8Qv\",\"xMxdp5oCxmeuYxhpa\",\"p2woPCQKXuWJCwffJ\",\"QRoAN6gdwipTo7fwD\",\"4TuceAZ8oTDzsjhir\",\"Wjv7wmdnX6GYApKrC\",\"yFGcFfNsHt2Z4G5a9\",\"yKWmmti8QHJzrFPmB\",\"Xk2g4CNFAnYcvxiSr\",\"KcpfY4XZ7fNamyLd3\",\"jEX9u5TeA2wsHph9W\",\"gGETo2x9dY5TsWc2b\",\"zsNp9fk9BGDBiHr4G\",\"mfjoiKdHNmtpSW6zu\",\"RqnvM77EkZZD9W2Q3\",\"QEhgdaBYvvTH4GpoN\",\"M7kpJSXFx67HhrTaZ\",\"pi76g3eRpnKrhee2a\",\"mHT2bJb5SByfJ8yKS\",\"7JCLyrrY6JYGpocac\",\"SNiJRRosrmSWssLj4\",\"k5TGxBtLi9BXxeChT\",\"XKi8iZXBCHCaebSHh\",\"9Pzg45NEiRXhLtLh3\",\"eANW47mfA359Y6JyP\",\"P4jeiN4MnamFDkGNo\",\"Nv5a34gxg5yvLKRW8\",\"jcPZ5ySXseCB7Ec3x\",\"TiqnGGfTYcXZengMZ\",\"vtHbevf2tHqe6mRxX\",\"zcDDFdkQvaAr2WipD\",\"v2AzBqD64zLiRD9bP\",\"vKch2w3b4keMd84jj\",\"ZtniSFrgec4oj6Pxm\",\"Y5H6Lp7Qou9XGptHH\",\"eQXwk5zGckM8tCWYH\",\"dhNprHzrpYYfsNSNt\",\"Po3v3dHCk6wYGKMwi\",\"PytNZK9mNiRiZxPrm\",\"DPpSwhhiuF4Y9YR2i\",\"uAS9uKs8KQmp8uhqn\",\"YLqdr7bYjwew2KM4N\",\"szQg8dxKNNre3v3Jk\",\"EPeA837HC2cXj3PEy\",\"eomLS3wh6tQPN8jtH\",\"ZXRMRAJNP6eseLdbR\",\"mf8xW5DhPjfXaCEsQ\",\"LreCskdE4MTjTyhAM\",\"7wtuhPesfhcYsfZaZ\",\"vn6nR36mdfY8z2zKx\",\"a777e8chPvJkY3tKa\",\"4bECT3r3cvCf3Spiv\",\"9HZbxzkzgz4CvePtv\",\"yK7zzK2aGJwuWKHRL\",\"gzTs5oFrfZwh3Kfze\",\"dNqjHnaTsgqBFDxTC\",\"tAF9Gf6PiGogbZuWs\",\"2ZFoLTxcCARhwc8xX\",\"ipiC2qPhKZWsAouJf\",\"QDYpRvKEb4mtaDDgn\",\"kDuH45yzb6PDtwhi6\",\"733qgZ7ZSSSrzbXGw\",\"a7LBurCmz5n6gECbv\",\"zw7g7T8wE5R5CBhXr\",\"sAhNjH3HZ9tSSSKTX\",\"TNo7w28xev2B5YWkF\",\"SY9Euc4kQfRgetXTd\",\"Q75jsoXjhTXJRrw8z\",\"XfirkadGrKABrZSBw\",\"Bcn7THBq3BiZANSyN\",\"er5HvLSjtwaYKoZ2F\",\"PTo9qt93YqGvL8fCa\",\"uDL732cxhJPfvnyn5\",\"ij9YRJvZz6WbqcGXS\",\"svpXWhsSLLzYR8Rz4\",\"vAh63eGRwkuJtoP8v\",\"nkH3HfJXLMNcBMM79\",\"edaKYaap6ugMKpRT8\",\"p5ZshR8zhTqmdhKDc\",\"4nFXeGakoCjm5GXYa\",\"Wv9v7fHb8umujfg2j\",\"moe6ztrsNzFymC3A7\",\"eFjGhq7C7bBKXjT6X\",\"QRv96jmNaYsWkxQEG\",\"2d7ToTiuvHtd6WnGx\",\"mLKy6YSNJ2MyXuaq2\",\"mzhB3LXoJ2EGyqr3n\",\"CH53jGETBeJTummf3\",\"uigAJ9KT5muMWTDis\",\"8raviPK67KKxzQWcF\",\"Sfb5RNdmiKSDyqyp4\",\"2tCCFm5iefjrRSaxv\",\"jkumHyXfMkhGcPgqC\",\"PGCDJpQMN8Sjn9Gm6\",\"C9LKGu2g5hSijvDzA\",\"evTTY9hwrtogaNxXn\",\"jnyub52Fi79drGvow\",\"Ya3eHgs8x3unZRLpb\",\"pLpcDC3EYx2DDQSdt\",\"umE8dRTGWzrZFp755\",\"SNt23Ei5dSNtfpEMd\",\"4ntYzGHHBgqf58udP\",\"oyB4Wr4EeZnoDaa8B\",\"KcFLFK5GqrC89bxZL\",\"SWbaoFPBAeu6g376j\",\"FGEeCTorXbX3WvjFW\",\"7gZKfvwaeqsGKXMEN\",\"DaBQKtm4xSgrxqTYF\",\"aEm3Wvj2rFYRL8Lrb\",\"vewKwcMeGuk3p3MsN\",\"2zKQWLmEBw8FBs4ZL\",\"ttuGK7od8simjgmCJ\",\"LCn6qz2GoMr5577Rd\",\"kp2ZbCewZJAbfd7xv\",\"qJTbsuToGEtaYnGxn\",\"3WtHp4MBzciz4AE8M\",\"mE2WrTtBBq4zuLdWp\",\"MbbySGQmkzbjg373M\",\"s7Qqx4Jnuq85iB7Lw\",\"Kntd2rSgWYWp8r4sP\",\"XkPEb97Tnnvvf5fAY\",\"B7bdDjP5AmpLJHKBS\",\"j4JYXWLmkTDH6iqHr\",\"PH32cNxBjrK4a28sn\",\"4Xv87xmdSnpYhi8hz\",\"AFfw7cGg83uYk2Miy\",\"RtPhDuwmvWNHiBxmG\",\"qWR7eXxBiNee22A5u\",\"YmMgWhzhHhQLmGGgH\",\"pdGuqmMyeN4wZaWwv\",\"CNc6rmwhbxkxEhHAp\",\"g4NCSxxHqHCGMpWwT\",\"pGh7WykiPe26fHJYv\",\"hyx8iH2z3QySmyRKT\",\"QpBEndbkq6opq4DBN\",\"WdLW2YLhL2kmSqKgK\",\"rrkEbZtHE6xZiamyu\",\"vGKxRcDYDsXzTQuEQ\",\"2Ni3PzJAc5fAhqBkb\",\"Yp7uvStL97cC9fKkY\",\"pWJWQDhqzDSmfaFam\",\"Bx68gx6euL4i9BS6D\",\"bBRzXPk7u95YuDWEL\",\"WSLPmXqJzRjtYkuwf\",\"omn98QP6uBd923Azp\",\"R9uaMzX2Y4ND8Cosm\",\"hNWWRyG2Y3kyC8jHY\",\"Es4eX2stRpyoXeC7f\",\"YSmLyP3eRhcFjJPzg\",\"3Gf7ikLijfoxabiPY\",\"m6qKkBY4aPWziyJTj\",\"zJTXDTdbwnopRazGo\",\"bjn5DTzzaWCP5BDgX\",\"6P9KgzXeJtZ6ejQcu\",\"rcTxMiqGiX7waNPiH\",\"YLTZRjM78Wi9J9Re4\",\"s678Wirfor5uYL5T6\",\"nzAbdaGbJwgvkkEYj\",\"ZtTwZM9pQ2sAzhnMR\",\"QAZ5DGaWWYhku4BNz\",\"J7d397iB5GuWRAMfg\",\"u9cRf5kvtpRB5ffB3\",\"2Qk2mFu9HBFzrB24i\",\"kETR48v7gF3navX86\",\"srJ34BaybkQh3qRkM\",\"ZW9T9KftoyC3rFGQP\",\"wJTDDTE3TrmSXKP4d\",\"K45zPJxsABuA3WSyj\",\"npp5hesJrst6ghKSM\",\"exiy4CeGedb9MkrZW\",\"LwD3CyYSiBfg3mA4r\",\"rbPEA2TFQw837Hmqg\",\"oDtGiNqDMHmhHE3J8\",\"vRsovmMfvfvnR5miw\",\"8s5Bdrn7RTga7DL6x\",\"XN9XtnyDZBdat7umv\",\"QjGNkRM3Xc78yShJN\",\"E6DBfkTgHuPsDWdG8\",\"nBJve5CzG6WAw7WFQ\",\"sfj3i3eEAfZa3f9kg\",\"mpLFbFKjY6u3nsDMv\",\"xehCaMff3csnHgJnb\",\"M4vq8ATaS9Jg5X7iP\",\"NGvCPuMiAP3xrRLfB\",\"JFiiZhAZTNQSvjzdp\",\"E3fkFzNeAGctuvqA2\",\"RoGGD5cpHb4ftdLDv\",\"sNcDN3s3rH9wcNg5n\",\"ruzwBPphPDRgLXdnP\",\"N3CNtWZz4ovJfH9Aw\",\"wo4cpen33NYFHNca7\",\"hCfruGWxw7v64teEr\",\"ffB8T76Ye9ygL6QZZ\",\"7DXJ3mvKMHHqBLt92\",\"sN2JyFeJCwfwwHPwF\",\"ZKuwzkssrSsDGNPr5\",\"jyoLggHk8xQKZuoQC\",\"Fk47SQxbHEJRw4u76\",\"ZpLfGJzcKXzNhytAc\",\"jicWFrNKadYuLhqxh\",\"uxKGACwmZ6FNZsMwE\",\"x2Cz7S8rCKJqCE3Xe\",\"bfYmA3LMvhSrK59cn\",\"g5txYGWqRNSrS7MED\",\"bzm5WayBjwad5jhdR\",\"QGjY3hgPYPMmMjc7j\",\"34bE6mric984YYLZQ\",\"j5FSQCayX3By73CCw\",\"HCfkcKnPs9mrJojdG\",\"rPsSEYqwmttMPEuvo\",\"6GQgzpntvbXKudzx2\",\"AMpQSjKsRqhCDyS2j\",\"NJCmkbH5e7qbtZYhd\",\"WpNHMgfjZE8aNN2MP\",\"ThaiAKWWDw2W4QfJh\",\"jzdjJtfQiCYmiyvzh\",\"CHvzhtXnv8HTbPQ56\",\"DfdkfQh8ctd2BaaRY\",\"pPpmP7xeJzGgK362R\",\"RWadiFi5Qv5679JfC\",\"rWGWqSYe2crXpPMiP\",\"qAEumdjLRx2AGAmzw\",\"civm87zzWtTWsuLyM\",\"psdbt2PkjPv4qTwtr\",\"8JJHJfbYpxvDiPpBn\"],\"total\":301,\"quality\":[5,3,5,5,3,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,4,5,5,5,3,5,4,4]},\"flags\":0},\"summary\":\"Your job is to make a \\\"Twitter link\\\" regular expression rx. This RegEx searches a tweet to find the @handle and the #handle.\\n\\nThe function is already written in the Tests tab, so you only need to provide the RegEx variable in the Code tab.\\nOnly return the @ and # handles.\\n\\nExamples\\ntweet(\\\"Visit us at @edabit\\\") ➞ \\\"@edabit\\\"\\n\\ntweet(\\\"Follow @JavaScript\\\") ➞ \\\"@JavaS\",\"tags\":[\"regex\",\"formatting\"],\"timestamp\":{\"$date\":1577322401285},\"title\":\"Twitter Link Finder\",\"quality\":4.6875,\"family\":[{\"_id\":\"zCkag8556FAjJ6W4L\",\"language\":\"javascript\"},{\"_id\":\"AqcGgqbMFhSqn44Qx\",\"language\":\"python3\"},{\"_id\":\"DfBfBmchSQ8HAsXQT\",\"language\":\"ruby\"}]}}"]