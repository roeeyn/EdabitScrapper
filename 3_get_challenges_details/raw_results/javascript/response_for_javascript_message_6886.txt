a["{\"msg\":\"result\",\"id\":\"2186\",\"result\":{\"_id\":\"5B5bqA9pFwCobWXMH\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"function getSubsets(arr, num) {\\n\\t\\n}\",\"difficulty\":3.2972972972972974,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"g9DubpDpKgzqdcBRF\",\"instructions\":\"Create a function that returns all subarrays in an array that sum to a particular value. Return the subarrays in the following order:\\n\\n1. First by **ascending length**.\\n2. Second by comparing element-by-element, starting from the leftmost one. Put the array with the **smaller** element first in the pairwise comparison.\\n\\nThe following example will illustrate:\\n```\\ngetSubsets([-3, -2, -1, 0, 1, 2, 3], 2)\\n[ // All the subsets below sum to 2.\\n  [2],\\n  [-1, 3],\\n  [0, 2], // Same length: -1 < 0, so [-1, 3] goes before [0, 2]\\n  [-3, 2, 3],\\n  [-2, 1, 3],\\n  [-1, 0, 3],\\n  [-1, 1, 2],\\n  [-3, 0, 2, 3],\\n  [-2, -1, 2, 3],\\n  [-2, 0, 1, 3], // Same length + same first element: -1 < 0, so [-2, -1, 2, 3] goes before [-2, 0, 1, 3]\\n  [-1, 0, 1, 2],\\n  [-3, -1, 1, 2, 3],\\n  [-2, -1, 0, 2, 3],\\n  [-3, -1, 0, 1, 2, 3]\\n]\\n```\\n\\n### Examples\\n```\\ngetSubsets([-1, 0, 1, 2], 2) ➞ [[2], [0, 2], [-1, 1, 2], [-1, 0, 1, 2]]\\n\\ngetSubsets([-1, 0, 1, 2], 3) ➞ [[1, 2], [0, 1, 2]]\\n\\ngetSubsets([1, 2, 3, 4], 5) ➞ [[1, 4], [2, 3]]\\n\\ngetSubsets([-1, 0, 1, 2], 4) ➞ []\\n```\\n\\n### Notes\\n- Arrays will have unique numbers.\\n- Return an empty array if there does not a exist a subset whose numbers sum to that value (see fourth example).\",\"lab\":\"Test.assertSimilar(getSubsets([-1, 0, 1, 2], 2), [[2], [0, 2], [-1, 1, 2], [-1, 0, 1, 2]])\\nTest.assertSimilar(getSubsets([-1, 0, 1, 2], 3), [[1, 2], [0, 1, 2]])\\nTest.assertSimilar(getSubsets([1, 2, 3, 4], 5), [[1, 4], [2, 3]])\\nTest.assertSimilar(getSubsets([-1, 0, 1, 2], 4), [])\\nTest.assertSimilar(getSubsets([1, 2, 3, 4, 5, 6], 6), [[6], [1, 5], [2, 4], [1, 2, 3]])\\nTest.assertSimilar(getSubsets([-3, -2, -1, 0, 1, 2, 3], 2),\\n[[2], \\n[-1, 3], \\n[0, 2], \\n[-3, 2, 3], \\n[-2, 1, 3], \\n[-1, 0, 3],\\n[-1, 1, 2], \\n[-3, 0, 2, 3], \\n[-2, -1, 2, 3], \\n[-2, 0, 1, 3], \\n[-1, 0, 1, 2], \\n[-3, -1, 1, 2, 3], \\n[-2, -1, 0, 2, 3], \\n[-3, -1, 0, 1, 2, 3]])\",\"language\":\"javascript\",\"summary\":\"Create a function that returns all subarrays in an array that sum to a particular value. Return the subarrays in the following order:\\n\\nFirst by ascending length.\\nSecond by comparing element-by-element, starting from the leftmost one. Put the array with the smaller element first in the pairwise comparison.\\n\\nThe following example will illustrate:\\ngetSubsets([-3,\",\"tags\":[\"arrays\",\"higher_order_functions\",\"sorting\"],\"timestamp\":{\"$date\":1553820577073},\"title\":\"All Subsets that Add to a Value\",\"stats\":{\"completed\":{\"total\":69,\"ratings\":[4,4,4,4,4,4,4,4,4,4,3,4,2,0,5,5,3,2,4,2,2,5,0,0,4,3,2,3,0,2,5,4,4,5,3,5,2,0,4,4,4,0,4,3,3,5,5,5,5,2,3,0,5,4,4,5,0,5,5,5,3,4,3,3,3,0,5,0,5,5,5,4,2,3],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"ak5aPiT6QWpmbnPzD\",\"65dbBZynphj53nXqA\",\"SDtZFL5NzAoCPofXk\",\"6cF2nrD29Nn2AeKP7\",\"X9gzW6TkvYB4rbrx7\",\"8xuMMGF7fyQWL2fKH\",\"n5wubRfh6zh8QRymN\",\"yjtdwc2AC4jA2RWtn\",\"rSJGLYSXMuu3RWjun\",\"dzgwAAiPFY5jLKvHs\",\"2YEYFDWxAZtqzBpJX\",\"mHT2bJb5SByfJ8yKS\",\"BBP9BE5mKHRzaRpJr\",\"mPGkQErhbN8rqbxaE\",\"AasGs8AeX9Lcb9xJn\",\"aSAfdzR4ZoBK2Rief\",\"YLiQ2gKYetNjpEG7B\",\"cRpaCxYRmGcN3Nsoj\",\"MpNkytd7e4Ghx25ii\",\"cCrirxZEzgAwQt2T9\",\"XjuaFaxajTTRdwD9e\",\"YER6iBcpJCuhgrYDN\",\"2NJuDfSqdrF8kHHni\",\"qJZsi5rhRnWA38FbA\",\"KZpjBTFm49P6nburM\",\"yQtGE2egvwYnNQSFc\",\"u5d63NujAhP97RXex\",\"knxCMCGP3rAkiatRo\",\"sutzxu4yTueBKE9Qp\",\"dPM2Rk2iMkznyXNEt\",\"u37upKZSmCKTQvQqX\",\"gp5W4r3E3azeaHDWJ\",\"4oMMJgWCJ3rzgovGq\",\"FJz752tBZgKEFv5dp\",\"CLaYRpYZ6WerqEYns\",\"ZXRMRAJNP6eseLdbR\",\"dRLHomguvjwAji7xX\",\"BdoEJSMKi3EfwSyoK\",\"kJtxKboy7Si2AE6G8\",\"p4p2AAFLnJDBzoA3p\",\"zMCXYFZSsviDCvjnY\",\"MNDLmXZmFMf8ASL2L\",\"7TXyMDHFYjna3dyPb\",\"EdMYkEJhcR45bsSZx\",\"aEm3Wvj2rFYRL8Lrb\",\"2innwjWqxJHo4eRGh\",\"h4jFmtbFn92eA4649\",\"8BJyXvRWcrvN3nttS\",\"eQXwk5zGckM8tCWYH\",\"4Xv87xmdSnpYhi8hz\",\"va3fDAQm4sqSMoy3R\",\"f6K5wzQW2fzYvgE98\",\"sYJKcRHeWxTBoAdaL\",\"mDWNyaaQ9hvPCRzSd\",\"4RsakkyRXyYGwFxEa\",\"QjGNkRM3Xc78yShJN\",\"PH32cNxBjrK4a28sn\",\"tAF9Gf6PiGogbZuWs\",\"QvEXmSEo3ANp3yPyH\",\"TMh5jo2XCMdz8pFsJ\",\"LkNj9NkS4kS9Th6Re\",\"bXaGdBM8FBLHf7N6Y\",\"P8bXFR4cHwFia9rNM\",\"J5MgLszeGgtciW56n\",\"B25AGtzqixmAZSJDg\"],\"quality\":[5]},\"tests\":{\"score\":0,\"voters\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"voters\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"isHidden\":false,\"quality\":5,\"family\":[{\"_id\":\"hTQCFxFSgxAy7Hmdq\",\"language\":\"cpp\"},{\"_id\":\"5B5bqA9pFwCobWXMH\",\"language\":\"javascript\"},{\"_id\":\"FnyAGdwgcH4whynjR\",\"language\":\"python3\"},{\"_id\":\"pap7oBaXpX77ySCsn\",\"language\":\"ruby\"}]}}"]