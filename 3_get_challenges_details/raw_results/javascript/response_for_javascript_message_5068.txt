a["{\"msg\":\"result\",\"id\":\"1286\",\"result\":{\"_id\":\"aeHGWC6M44KhLCRBt\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"function isPalindrome(wrd) {\\n\\t// your recursive solution here\\n}\",\"difficulty\":2.0701754385964914,\"familyId\":\"QgccuSCKEa7pdAB7m\",\"instructions\":\"Create a **recursive** function that determines whether a word is a **palindrome** or not.\\n\\n### Examples\\n```\\nisPalindrome(\\\"madam\\\") ➞ true\\n\\nisPalindrome(\\\"adieu\\\") ➞ false\\n\\nisPalindrome(\\\"rotor\\\") ➞ true\\n```\\n\\n### Notes\\n- All inputs are in lowercase.\\n- You are expected to solve this challenge via **recursion**.\\n- You can check on the **Resources** tab for more details about *recursion*.\\n- If you think recursion is fun, a collection of those challenges can be found in [here](https://edabit.com/collection/YJH4pAyqDbhLc4STc).\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"const recursive = f => (`${f}`.match(RegExp(`${f.name}`,'gm'))||[]).length > +(/function/.test(f))\\nTest.assertNotEquals(recursive(isPalindrome), false, \\\"Recursion is required!\\\")\\n\\nlet [strVector, resVector] = [\\n  [\\\"rascal\\\", \\\"racecar\\\", \\\"madam\\\", \\\"adieu\\\", \\\"radar\\\", \\\"rotor\\\", \\\"abacus\\\", \\\"rotator\\\", \\\"scholars\\\"],\\n  [false, true, true, false, true, true, false, true, false]\\n]\\nfor (let i in strVector) Test.assertEquals(isPalindrome(strVector[i]), resVector[i])\",\"language\":\"javascript\",\"quality\":4.674418604651163,\"summary\":\"Create a recursive function that determines whether a word is a palindrome or not.\\n\\nExamples\\nisPalindrome(\\\"madam\\\") ➞ true\\n\\nisPalindrome(\\\"adieu\\\") ➞ false\\n\\nisPalindrome(\\\"rotor\\\") ➞ true\\n\\nNotes\\nAll inputs are in lowercase.\\nYou are expected to solve this challenge via recursion.\\nYou can check on the Resources tab for more details about recursion.\\nIf you think recur\",\"tags\":[\"recursion\",\"strings\",\"validation\"],\"timestamp\":{\"$date\":1602270349450},\"title\":\"Recursion: Palindrome Word\",\"stats\":{\"completed\":{\"total\":168,\"ratings\":[3,3,3,3,3,3,1,2,0,3,0,3,2,2,1,2,2,0,2,0,2,3,2,2,3,2,1,2,3,0,3,1,2,3,2,3,2,0,3,3,1,2,2,0,2,2,3,2,3,2,1,2,2,2,2,1,3,3,2,2,0,2,2,3,3,2,2,3,2,0,3,3,3,2,3,2,3,2,2,2,2,3,2,1,2,0,2,1,4,3,3,1,2,3,2,2,3,2,2,3,2,5,0,2,3,2,0,3,3,1,5,2,2,0],\"quality\":[5,4,5,5,4,5,5,5,3,5,4,5,3,5,5,5,4,5,3,5,4,5,5,5,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4],\"rators\":[\"a777e8chPvJkY3tKa\",\"yjtdwc2AC4jA2RWtn\",\"tAF9Gf6PiGogbZuWs\",\"DjChaA6HXG2vBe4fK\",\"buX4mCQhtXCfBjeno\",\"QRv96jmNaYsWkxQEG\",\"Es4eX2stRpyoXeC7f\",\"mHT2bJb5SByfJ8yKS\",\"ZmYLYYM7ytn8QywBu\",\"vic9SZ9qqj9WhRkbd\",\"vKch2w3b4keMd84jj\",\"eTy3sERJnfAxQ8mTB\",\"zw7g7T8wE5R5CBhXr\",\"Ya3eHgs8x3unZRLpb\",\"g4NCSxxHqHCGMpWwT\",\"uxCKp6j9NKkBKfJKs\",\"XB7fB6SRML67sDDoX\",\"WdLW2YLhL2kmSqKgK\",\"k66z8NfCwxStFg2qz\",\"HB5aLGh3LCH8oYZ9z\",\"FJsvM5yqKuK9yMk9P\",\"CNc6rmwhbxkxEhHAp\",\"f3RAbWvE6uESq7KE5\",\"QAZ5DGaWWYhku4BNz\",\"bX6tpTCjwoi6XMMbK\",\"M4vq8ATaS9Jg5X7iP\",\"eqEJPqfuDzt8xJRyr\",\"PTo9qt93YqGvL8fCa\",\"REwjhANYpZvCgXt2b\",\"Yp7uvStL97cC9fKkY\",\"XrN688tKMi8qqsNFK\",\"4XxJxQkB5mNTLY2qk\",\"MSMNx6ntGd3gPrB85\",\"sYJKcRHeWxTBoAdaL\",\"c7uBxu2rgY77H5d79\",\"9uaYS8fz4rEtNtGFg\",\"5NGxHLcQ8Af2RJ4TN\",\"e9Cknxbx6o7Nb6REs\",\"u9cRf5kvtpRB5ffB3\",\"ScDZaeW8T6bbrr6BR\",\"mNissLwJsQpQincaG\",\"kp2ZbCewZJAbfd7xv\",\"5nHtgdY8F2FbAMawq\",\"kJ9RgqiqhMKd3FkcT\",\"xfxkLoQsbZBonmBGp\",\"BWJLeBieEioW3GyEq\",\"ZKQNFwJENXcjJvBfy\",\"ro4W36ttXuSLWfvnx\",\"r4Pvmzy48TyAj6dZE\",\"azAzSkvJd7eyXY9x9\",\"Akq3fQcPRgPrWfsye\",\"cyHWbRK7EZGXQHGjS\",\"x3WsGCnE38anLjJqh\",\"sAhNjH3HZ9tSSSKTX\",\"qsLEoaAocSXa2e6K6\",\"RRFsDNRaKW6h9tF3Y\",\"BMp3yjCJXr4fLDcJr\",\"bBRzXPk7u95YuDWEL\",\"YS2vn4mFRcHprdtWC\",\"SYEuojZtP6yLXryHv\",\"2ZFoLTxcCARhwc8xX\",\"umE8dRTGWzrZFp755\",\"NchnDcEmsLTeFZ4FH\",\"SxqAEMaYcE9Ps9eh6\",\"4CBtKQQ2Btz4frrd7\",\"4p2sARSZNNnKqjAT6\",\"ouabBNowvhzMnMKqa\",\"P6Nj8vL3bcTZFD2Xz\",\"2DRGDspdFT7ed6Q9H\",\"jCWNL3dnX8a3Yr9TH\",\"h66ASG9Y5xbMrzdjY\",\"CCkHqRq5tcYmW2dsT\",\"dheHmL5krtNFqAdE9\",\"kSxSz3ZxdQuPYTxWD\",\"Zkff5RAXB5cgQpsau\",\"wbsPpDQDPogCf9Szr\",\"8Zj3RzqTX5QP9FvXA\",\"5rmqSjwK8b6a5SWHn\",\"54EhcxpKr4vqvFvr8\",\"acHSYL6uQAgpgFMjp\",\"RKKuw76K7sRBMouKq\",\"DPi9QGLctq2y76KuE\",\"Po3v3dHCk6wYGKMwi\",\"ZTTJprKDvFqKGew7c\",\"n5wubRfh6zh8QRymN\",\"YfWyvMhdY3xcGrK5R\",\"LHfgG9iT4T2obfD9x\",\"zza5WjC8QrHcoDZBF\",\"pPBiBqmiMYYX5BAcC\",\"vewKwcMeGuk3p3MsN\",\"Xk2g4CNFAnYcvxiSr\",\"RtPhDuwmvWNHiBxmG\",\"jd9sRTnsyeKpPggba\",\"uX2GqqniwWMuKKhX9\",\"hNEhHd8qodq4P3h2g\",\"k8rMJnaejG3dX4ute\",\"ekQh3jzgGLsEMbKo3\",\"eQXwk5zGckM8tCWYH\",\"6bdrbeWGHM65ybcCm\",\"EkaHge5WaoGpiCxpx\",\"WERc8adGSsPMPuNwu\",\"GsrjAqoAdLATJH9qD\",\"hBTjor576YHqaFWrj\",\"dFZCxDLE69x3nH3DC\",\"HXwnJvQfHYTWcujEz\",\"oyB4Wr4EeZnoDaa8B\",\"pi76g3eRpnKrhee2a\",\"Z4Ew9mRpYuM3aqo9C\",\"QjGNkRM3Xc78yShJN\",\"2Qk2mFu9HBFzrB24i\",\"FioqXbWFJxdCop35Z\",\"mfdAK3AxsrRZa3WDd\",\"jemTNShfp6ymAs3pj\",\"ALXK6iwsiiTYNnCit\",\"9vgvXZadhaxy25CGH\",\"ZcJm2kuqJnN3CXFaR\",\"8s5Bdrn7RTga7DL6x\",\"NGvCPuMiAP3xrRLfB\",\"FiK2ruyH8KeHLAgoA\",\"FGEeCTorXbX3WvjFW\",\"fBqQjriC4QEtFNxFe\",\"RE4Mm9T6Q9uygAxGS\",\"oDtGiNqDMHmhHE3J8\",\"zMCXYFZSsviDCvjnY\",\"vGKxRcDYDsXzTQuEQ\",\"65dbBZynphj53nXqA\",\"vjtyhrDRedRhLz8yP\",\"wKn7Rc8y2GiDZzXkC\",\"srJ34BaybkQh3qRkM\",\"ky2qSHSSP6MYhLdky\",\"PH32cNxBjrK4a28sn\",\"49XFttjKo2QhEWT3R\",\"DyPcN985tAEHpiaRp\",\"rpNNPWzdFCc9TzKMz\",\"PPFmWzDiefzfekdcg\",\"ssRWEAjvdtfxkvH4S\",\"zizuvWMKMYCqA7ToN\",\"RoGGD5cpHb4ftdLDv\",\"nkH3HfJXLMNcBMM79\",\"jyoLggHk8xQKZuoQC\",\"j2Kz8Yxd3d3ZTxHfj\",\"oS8RbMKnP2RQyKh2A\",\"W3iKFwcuYkEf52psm\",\"46SBqYjYrHQhMzp2Y\",\"CHvzhtXnv8HTbPQ56\",\"HsCoAbZ2Kajk9qyie\",\"z5ebtimXwFFJdYxoa\",\"a7gfP5NtWSNsXaBsd\",\"Z9jhP3WeN7jSf4aFs\",\"3xbbchcPcLGgmicQL\",\"xKhtaFxT3nuznbt6H\",\"6YLFog9SjERA7JnEd\"]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"Ly8iQqDfaouRLgKNb\",\"language\":\"java\"},{\"_id\":\"aeHGWC6M44KhLCRBt\",\"language\":\"javascript\"},{\"_id\":\"NpJMkLRfApRCK7Js6\",\"language\":\"python3\"}]}}"]