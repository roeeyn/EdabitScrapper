a["{\"msg\":\"result\",\"id\":\"2224\",\"result\":{\"_id\":\"iDzRZJNrnT7JryKEF\",\"author\":\"Ruud Peter Boelens\",\"authorId\":\"Akq3fQcPRgPrWfsye\",\"code\":\"function knightsJump(square) {\\n\\t\\n}\",\"difficulty\":3.4375,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"2Ba3QQ48jioFvNuXT\",\"instructions\":\"Knights can jump across the board.\\n\\n![Knights in Chess](https://edabit-challenges.s3.amazonaws.com/Rb9v.gif)\\n\\nCreate a function that takes a square where a knight jumps from as a `string` and returns all the possible squares the knight can land on as a `string`. Ignore capturing and further Chess rules. Be aware of the sides of the board. Knights don't go over the edge, obviously.\\n\\n### Examples\\n```\\nknightsJump(\\\"F4\\\") ➞ \\\"E2,G2,D3,H3,D5,H5,E6,G6\\\"\\n\\nknightsJump(\\\"A1\\\") ➞ \\\"C2,B3\\\"\\n\\nknightsJump(\\\"E2\\\") ➞ \\\"C1,G1,C3,G3,D4,F4\\\"\\n```\\n\\n### Notes\\n- The input is always a valid square on the board.\\n- The order of the return string is 1 ➞ 8, A ➞ H.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"[['A1', \\\"C2,B3\\\"], \\n['H1', \\\"F2,G3\\\"], \\n['F4', \\\"E2,G2,D3,H3,D5,H5,E6,G6\\\"], \\n['E5', \\\"D3,F3,C4,G4,C6,G6,D7,F7\\\"], \\n['A7', \\\"B5,C6,C8\\\"], \\n['B4', \\\"A2,C2,D3,D5,A6,C6\\\"], \\n['F3', \\\"E1,G1,D2,H2,D4,H4,E5,G5\\\"], \\n['C8', \\\"B6,D6,A7,E7\\\"], \\n['E4', \\\"D2,F2,C3,G3,C5,G5,D6,F6\\\"], \\n['G1', \\\"E2,F3,H3\\\"], \\n['G7', \\\"F5,H5,E6,E8\\\"], \\n['F3', \\\"E1,G1,D2,H2,D4,H4,E5,G5\\\"], \\n['C8', \\\"B6,D6,A7,E7\\\"], \\n['B6', \\\"A4,C4,D5,D7,A8,C8\\\"], \\n['E2', \\\"C1,G1,C3,G3,D4,F4\\\"], \\n['H5', \\\"G3,F4,F6,G7\\\"], \\n['D1', \\\"B2,F2,C3,E3\\\"], \\n['G1', \\\"E2,F3,H3\\\"]]\\n.forEach(c => Test.assertEquals(knightsJump(c[0]), c[1]));\",\"language\":\"javascript\",\"quality\":0,\"stats\":{\"completed\":{\"ratings\":[4,4,4,4,4,4,5,1,2,1,5,5,3,3,2,4],\"quality\":[],\"rators\":[\"Akq3fQcPRgPrWfsye\",\"bX6tpTCjwoi6XMMbK\",\"vic9SZ9qqj9WhRkbd\",\"ymkXtTnosytBeaGsY\",\"yjtdwc2AC4jA2RWtn\",\"Xk2g4CNFAnYcvxiSr\",\"tAF9Gf6PiGogbZuWs\",\"DPi9QGLctq2y76KuE\",\"vG53vYGTfNimnsjza\",\"J5MgLszeGgtciW56n\",\"qwSayeQLWs9b65hgd\"],\"total\":15},\"flags\":0},\"summary\":\"Knights can jump across the board.\\n\\nKnights in Chess\\n\\nCreate a function that takes a square where a knight jumps from as a string and returns all the possible squares the knight can land on as a string. Ignore capturing and further Chess rules. Be aware of the sides of the board. Knights don't go over the edge, obviously.\\n\\nExamples\\nknightsJump(\\\"F4\\\") ➞ \\\"E2,G2,D\",\"tags\":[\"algorithms\",\"arrays\",\"logic\",\"games\"],\"timestamp\":{\"$date\":1606560854381},\"title\":\"Knights Jump\",\"family\":[{\"_id\":\"5mHo8v3tX48yY6x2H\",\"language\":\"cpp\"},{\"_id\":\"iDzRZJNrnT7JryKEF\",\"language\":\"javascript\"},{\"_id\":\"mm2fm6ynbR7HQQm9z\",\"language\":\"python3\"},{\"_id\":\"G55TLKfSSQ9FNZPwk\",\"language\":\"ruby\"}]}}"]