a["{\"msg\":\"result\",\"id\":\"2084\",\"result\":{\"_id\":\"ud5Y2arFXo7SHLvnX\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"function bemirp(n) {\\n\\t\\n}\",\"difficulty\":2.9166666666666665,\"familyId\":\"A3ekd8cWm4SR9uRPC\",\"instructions\":\"A prime number is a number whose only proper (non-self) divisor is 1 (example 13).\\n\\nAn emirp (prime spelled backwards) is a non-palindromic prime which, when its digits are reversed, makes *another* prime. E.g. 13 is a prime, and so is 31. Both are therefore emirps.\\n\\nA bemirp is a prime which is an emirp (makes another prime with its digits reversed), but additionally, makes another prime when flipped upside down (see note). The upside-down version is also an emirp, which makes a group of 4 primes. Bemirps consist only of digits 0, 1, 6, 8, and 9.\\n\\nTo illustrate: 11061811, reversed = 11816011, upside-down = 11091811, upside-down reversed = 11819011. All four are primes.\\n\\nCreate a function that takes a number and returns `\\\"B\\\"` if it’s a bemirp, `\\\"E\\\"` if it's a (non-bemirp) emirp, `\\\"P\\\"` if it's a (non-emirp) prime, or `\\\"C\\\"` (composite / non-prime).\\n\\n### Examples\\n```\\nbemirp(101) ➞ \\\"P\\\"\\n\\nbemirp(1011) ➞ \\\"C\\\"\\n\\nbemirp(1069) ➞ \\\"E\\\"\\n\\nbemirp(1061) ➞ \\\"B\\\"\\n```\\n\\n### Notes\\n6 upside-down is 9 and vice-versa. 0, 1, and 8 are unchanged when flipped. The remaining five digits are unflippable.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertEquals(bemirp(101), 'P')\\nTest.assertEquals(bemirp(1011), 'C')\\nTest.assertEquals(bemirp(1069), 'E')\\nTest.assertEquals(bemirp(1061), 'B')\\nTest.assertEquals(bemirp(198101), 'C')\\nTest.assertEquals(bemirp(1009), 'E')\\nTest.assertEquals(bemirp(10091), 'B')\\nTest.assertEquals(bemirp(18616061), 'B')\\nTest.assertEquals(bemirp(10909), 'E')\\nTest.assertEquals(bemirp(16069), 'P')\",\"language\":\"javascript\",\"quality\":0,\"summary\":\"A prime number is a number whose only proper (non-self) divisor is 1 (example 13).\\n\\nAn emirp (prime spelled backwards) is a non-palindromic prime which, when its digits are reversed, makes another prime. E.g. 13 is a prime, and so is 31. Both are therefore emirps.\\n\\nA bemirp is a prime which is an emirp (makes another prime with its digits reversed), but additi\",\"tags\":[\"conditions\",\"math\",\"numbers\"],\"timestamp\":{\"$date\":1606310639246},\"title\":\"I Put My Prime Down, Flip It and Reverse It\",\"stats\":{\"completed\":{\"total\":9,\"ratings\":[3,3,3,3,3,4,3,0,2,3,4,4],\"quality\":[],\"rators\":[\"i49enk79wAajcgi7a\",\"mHT2bJb5SByfJ8yKS\",\"h4jFmtbFn92eA4649\",\"yjtdwc2AC4jA2RWtn\",\"CNc6rmwhbxkxEhHAp\",\"QRv96jmNaYsWkxQEG\",\"buX4mCQhtXCfBjeno\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"eCTZKnXAp8nvF9i5h\",\"language\":\"cpp\"},{\"_id\":\"iGBFfnTswZzw9yHqc\",\"language\":\"csharp\"},{\"_id\":\"ud5Y2arFXo7SHLvnX\",\"language\":\"javascript\"},{\"_id\":\"c9i3mdjuwwzMF3Por\",\"language\":\"python3\"},{\"_id\":\"iXxDYCs5kkdwhkokM\",\"language\":\"ruby\"},{\"_id\":\"46K2Abh8C6Fdwyrpy\",\"language\":\"swift\"}]}}"]