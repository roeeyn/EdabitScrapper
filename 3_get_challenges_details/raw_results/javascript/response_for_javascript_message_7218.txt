a["{\"msg\":\"result\",\"id\":\"2350\",\"result\":{\"_id\":\"GigpsoatHLXPXrCXS\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"function fullCycle(arr) {\\n\\t\\n}\",\"difficulty\":3.9166666666666665,\"familyId\":\"4sBsccvBYJu8gbtex\",\"instructions\":\"Say you want to traverse an array of integers starting at the first item and using each value as a pointer of what item to visit next. For example, you would traverse the array `[1, 4, 3, 0, 2]` in the following manner:\\n\\n![List](https://edabit-challenges.s3.amazonaws.com/gAbF8Rs.png)\\n\\nBecause you visit every item once and go back to the starting point, the array `[1, 4, 3, 0, 2]` is a \\\"full cycle\\\".\\n\\nCreate a function that returns `true` if the input array is a full cycle, or `false` otherwise.\\n\\n### Examples\\n```\\nfullCycle([1, 4, 3, 0, 2]) ➞ true\\n\\nfullCycle([1, 4, 0, 3, 2]) ➞ false\\n\\nfullCycle([5, 3, 4, 2, 0, 1]) ➞ true\\n```\\n\\n### Notes\\nTest arrays won't include any negative integers.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertEquals(fullCycle([0, 1]), false)\\nTest.assertEquals(fullCycle([1, 0]), true)\\nTest.assertEquals(fullCycle([2, 1, 0]), false)\\nTest.assertEquals(fullCycle([2, 0, 1]), true)\\nTest.assertEquals(fullCycle([1, 1, 2]), false)\\nTest.assertEquals(fullCycle([1, 2, 0, 3]), false)\\nTest.assertEquals(fullCycle([1, 4, 0, 0, 2]), false)\\nTest.assertEquals(fullCycle([3, 0, 4, 2]), false)\\nTest.assertEquals(fullCycle([3, 2, 0, 1]), true)\\nTest.assertEquals(fullCycle([3, 2, 0, 1, 3]), false)\\nTest.assertEquals(fullCycle([4, 1, 2, 3, 0]), false)\\nTest.assertEquals(fullCycle([2, 0, 4, 1, 3]), true)\\nTest.assertEquals(fullCycle([1, 3, 4, 0, 5, 2]), false)\\nTest.assertEquals(fullCycle([1, 5, 4, 2, 0, 3]), true)\\nTest.assertEquals(fullCycle([1, 5, 4, 2, 0, 3, 6]), false)\\nTest.assertEquals(fullCycle([2, 4, 6, 3, 1, 6, 0, 5]), false)\\nTest.assertEquals(fullCycle([6, 8, 3, 0, 2, 7, 4, 1, 5]), false)\\nTest.assertEquals(fullCycle([2, 8, 5, 9, 1, 3, 7, 4, 0, 6]), true)\\nTest.assertEquals(fullCycle([2, 17, 7, 19, 18, 9, 5, 15, 16, 8, 11, 6, 14, 4, 3, 13, 0, 12, 1, 10]), true)\\nTest.assertEquals(fullCycle([21, 18, 19, 14, 8, 0, 9, 2, 1, 3, 7, 4, 5, 10, 13, 12, 6, 17, 11, 15, 20, 16]), false)\\n// MyName\",\"language\":\"javascript\",\"quality\":0,\"summary\":\"Say you want to traverse an array of integers starting at the first item and using each value as a pointer of what item to visit next. For example, you would traverse the array [1, 4, 3, 0, 2] in the following manner:\\n\\nList\\n\\nBecause you visit every item once and go back to the starting point, the array [1, 4, 3, 0, 2] is a \\\"full cycle\\\".\\n\\nCreate a function that\",\"tags\":[\"algorithms\",\"validation\"],\"timestamp\":{\"$date\":1612178881616},\"title\":\"Is This a Full Cycle?\",\"stats\":{\"completed\":{\"total\":9,\"ratings\":[4,4,4,4,4,4,4,5,1,4,5,4],\"quality\":[],\"rators\":[\"bXaGdBM8FBLHf7N6Y\",\"mDWNyaaQ9hvPCRzSd\",\"zza5WjC8QrHcoDZBF\",\"yjtdwc2AC4jA2RWtn\",\"DPi9QGLctq2y76KuE\",\"8BJyXvRWcrvN3nttS\",\"P8bXFR4cHwFia9rNM\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"Mp2prCwnqpe43WMmD\",\"language\":\"cpp\"},{\"_id\":\"GigpsoatHLXPXrCXS\",\"language\":\"javascript\"},{\"_id\":\"zeuvB4YRvu47w8e8f\",\"language\":\"python3\"},{\"_id\":\"Pws8FXzKfboRC7Lyz\",\"language\":\"ruby\"}]}}"]