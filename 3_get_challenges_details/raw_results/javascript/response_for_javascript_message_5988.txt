a["{\"msg\":\"result\",\"id\":\"1741\",\"result\":{\"_id\":\"84jqLSWr288Wqx5eH\",\"author\":\"er0s\",\"authorId\":\"5Zq3aGdvh4LHBvnJL\",\"code\":\"function digitaldrome(n) {\\n\\t\\n}\",\"difficulty\":2.372093023255814,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"md8xzKDwpC2yMKPsY\",\"instructions\":\"In this challenge, you have to establish if the digits of a given number form a sequence (ascending or descending).\\n\\nGiven an integer `n`, implement a function that returns a string:\\n\\n- `\\\"Metadrome\\\"` if the digits of `n` form an **ascending** sequence **without repeating digits**.\\n- `\\\"Plaindrome\\\"` if the digits of `n` form an **ascending** sequence with **repeating digits**.\\n- `\\\"Katadrome\\\"` if the digits of `n` form a **descending** sequence **without repeating digits**.\\n- `\\\"Nialpdrome\\\"` if the digits of `n` form a **descending** sequence with **repeating digits**.\\n- `\\\"Repdrome\\\"` if `n` contains a **single repeating digit**.\\n- `\\\"Nondrome\\\"` if none of the above conditions is true.\\n\\n### Examples\\n```\\ndigitaldrome(1357) ➞ \\\"Metadrome\\\"\\n// Ascending sequence without repeating digits\\n\\ndigitaldrome(12344) ➞ \\\"Plaindrome\\\"\\n// Ascending sequence with repeating digits\\n\\ndigitaldrome(7531) ➞ \\\"Katadrome\\\"\\n// Descending sequence without repeating digits\\n\\ndigitaldrome(9874441) ➞ \\\"Nialpdrome\\\"\\n// Descending sequence with  repeating digits\\n\\ndigitaldrome(666) ➞ \\\"Repdrome\\\"\\n// There's only a single repeating digit\\n\\ndigitaldrome(1985) ➞ \\\"Nondrome\\\"\\n// This is not a sequence\\n```\\n\\n### Notes\\n- Any given `n` will be a positive integer.\\n- The word _\\\"drome\\\"_ comes from the Greek suffix for \\\"run\\\", while _\\\"kata\\\"_ and _\\\"meta\\\"_ are the prefixes for \\\"down\\\" (or \\\"into\\\") and \\\"after\\\" (or \\\"through\\\").\",\"isHidden\":false,\"lab\":\"Test.assertEquals(digitaldrome(1357), \\\"Metadrome\\\", \\\"Example #1\\\");\\nTest.assertEquals(digitaldrome(12344), \\\"Plaindrome\\\", \\\"Example #2\\\");\\nTest.assertEquals(digitaldrome(7531), \\\"Katadrome\\\", \\\"Example #3\\\");\\nTest.assertEquals(digitaldrome(9874441), \\\"Nialpdrome\\\", \\\"Example #4\\\");\\nTest.assertEquals(digitaldrome(666), \\\"Repdrome\\\", \\\"Example #5\\\");\\nTest.assertEquals(digitaldrome(1985), \\\"Nondrome\\\", \\\"Example #6\\\");\\nTest.assertEquals(digitaldrome(33333), \\\"Repdrome\\\");\\nTest.assertEquals(digitaldrome(1), \\\"Repdrome\\\");\\nTest.assertEquals(digitaldrome(4899), \\\"Plaindrome\\\");\\nTest.assertEquals(digitaldrome(7521), \\\"Katadrome\\\");\\nTest.assertEquals(digitaldrome(23), \\\"Metadrome\\\");\\nTest.assertEquals(digitaldrome(2340), \\\"Nondrome\\\");\\nTest.assertEquals(digitaldrome(1000000), \\\"Nialpdrome\\\");\\nTest.assertEquals(digitaldrome(269), \\\"Metadrome\\\");\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,4,2,2,3,2,2,2,2,2,2,2,3,2,4,2,3,2,3,2,3,3,2,3,3,3,3,3,0,3,2,3,3,3,2,3,3,3,3],\"rators\":[\"5Zq3aGdvh4LHBvnJL\",\"n5wubRfh6zh8QRymN\",\"6BpBQnSGhzgvhXrEy\",\"FJsvM5yqKuK9yMk9P\",\"zgoq9MhrL2h75DAMA\",\"Y9Nz9yafaibz54W4o\",\"AasGs8AeX9Lcb9xJn\",\"yjtdwc2AC4jA2RWtn\",\"6HKCHX83br3mKYzA2\",\"byrKwHgawbFgyAcgo\",\"65dbBZynphj53nXqA\",\"3WMMfGv5S5B6CS6NQ\",\"jqbm8L6895JgAtZ6H\",\"RWadiFi5Qv5679JfC\",\"RE4Mm9T6Q9uygAxGS\",\"mHT2bJb5SByfJ8yKS\",\"2NJuDfSqdrF8kHHni\",\"EWn8w8P3nNh7knatY\",\"wo4cpen33NYFHNca7\",\"YER6iBcpJCuhgrYDN\",\"a777e8chPvJkY3tKa\",\"vn6nR36mdfY8z2zKx\",\"M7kpJSXFx67HhrTaZ\",\"Es4eX2stRpyoXeC7f\",\"kA67Tpb9xNW7dSfXe\",\"r7mZLgpQWzRiGddL5\",\"xn7uGNKeAwPEkP9oA\",\"uaqF6yZ7r7rvq4Rb6\",\"buX4mCQhtXCfBjeno\",\"aEm3Wvj2rFYRL8Lrb\",\"CNc6rmwhbxkxEhHAp\",\"u9cRf5kvtpRB5ffB3\",\"srJ34BaybkQh3qRkM\",\"8BJyXvRWcrvN3nttS\",\"NGvCPuMiAP3xrRLfB\",\"BdnE4RS5puoxo92mA\",\"PPFmWzDiefzfekdcg\",\"tAF9Gf6PiGogbZuWs\",\"AFfw7cGg83uYk2Miy\",\"oDtGiNqDMHmhHE3J8\"],\"total\":42,\"quality\":[3,5]},\"flags\":0},\"summary\":\"In this challenge, you have to establish if the digits of a given number form a sequence (ascending or descending).\\n\\nGiven an integer n, implement a function that returns a string:\\n\\n\\\"Metadrome\\\" if the digits of n form an ascending sequence without repeating digits.\\n\\\"Plaindrome\\\" if the digits of n form an ascending sequence with repeating digits.\\n\\\"Katadrome\\\" if\",\"tags\":[\"numbers\",\"sorting\",\"conditions\",\"validation\"],\"timestamp\":{\"$date\":1576241449235},\"title\":\"Digitaldrome\",\"quality\":4,\"family\":[{\"_id\":\"rRXLv6aWdsGevJ888\",\"language\":\"cpp\"},{\"_id\":\"84jqLSWr288Wqx5eH\",\"language\":\"javascript\"},{\"_id\":\"P8YXBzJNysQAi8ePr\",\"language\":\"python3\"},{\"_id\":\"MtyqRdgzx9RjHTTww\",\"language\":\"ruby\"}]}}"]