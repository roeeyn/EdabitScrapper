a["{\"msg\":\"result\",\"id\":\"1168\",\"result\":{\"_id\":\"uroPr8CNouxobtShi\",\"author\":\"BijogFc24\",\"authorId\":\"Nb6LYPoQP6KJZt8mz\",\"code\":\"// Use Bitwise Operator (% operator disallowed)\\nfunction isOdd(number) {\\n\\t\\n}\\n\\n\\n// Use Regular Expression (% operator disallowed)\\nfunction isEven(number) {\\n\\t\\n}\",\"difficulty\":1.9885057471264367,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"Jyei5ywBKwz2NXSsS\",\"instructions\":\"Create two functions:\\n\\n1. The first is `isOdd()` to check if a given number is odd using **bitwise operator**.\\n2. The second is `isEven()` to check if a given input is even using **regular expressions**.\\n\\nUse of  `%` operator is disallowed.\\n\\n### Examples\\n```\\nisOdd(3) ➞ \\\"Yes\\\"\\n// Use Bitwise Operator\\n\\nisOdd(58) ➞ \\\"No\\\"\\n// Use Bitwise Operator\\n\\nisEven(\\\"0\\\") ➞ \\\"Yes\\\"\\n// Use Regular Expression\\n\\nisEven(\\\"-99\\\") ➞ \\\"No\\\"\\n// Use Regular Expression\\n```\\n\\n### Notes\\n- Input will only be integers (positive/negative/zero).\\n- For the second function, input will be numbers in string.\\n- For more info on regular expressions, check the **Resources** tab.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertEquals(isOdd(-7), \\\"Yes\\\")\\nTest.assertEquals(isOdd(-5), \\\"Yes\\\")\\nTest.assertEquals(isOdd(17), \\\"Yes\\\")\\nTest.assertEquals(isOdd(-6), \\\"No\\\")\\nTest.assertEquals(isOdd(0), \\\"No\\\")\\nTest.assertEquals(isEven(\\\"-7\\\"), \\\"No\\\")\\nTest.assertEquals(isEven(\\\"111\\\"), \\\"No\\\")\\nTest.assertEquals(isEven(\\\"0\\\"), \\\"Yes\\\")\\nTest.assertEquals(isEven(\\\"-12\\\"), \\\"Yes\\\")\\nTest.assertEquals(isEven(\\\"40\\\"), \\\"Yes\\\")\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,2,2,3,3,1,1,1,2,3,3,1,2,3,3,0,2,3,2,2,2,1,1,2,1,1,3,2,3,2,2,3,3,2,2,0,2,3,1,3,2,3,0,3,3,2,0,2,2,1,2,2,0,2,3,2,3,1,1,2,1,3,2,2,2,2,0,2,1,1,4,1,0,2,3,2,0,4,3,1,3,1,2,2,1,3,3,3,3,2,3,2,2,1,1,2,2,1,1,2,2,0,0,0,1,2,3,2,2,0,3,3,3,2,2,1,2,3,2,3,3,2,2,3,2,3,3,3,2,3,2,1,3,1,2,1,2,2,3,3,3,2,2,3,2,1,0,2,2,2,3,3,2,3,1,2,3,0,5,1,3,1,2,5,0,2,2,3,2],\"rators\":[\"tAF9Gf6PiGogbZuWs\",\"jnyub52Fi79drGvow\",\"oyB4Wr4EeZnoDaa8B\",\"Xk2g4CNFAnYcvxiSr\",\"RE4Mm9T6Q9uygAxGS\",\"yjtdwc2AC4jA2RWtn\",\"FJsvM5yqKuK9yMk9P\",\"AasGs8AeX9Lcb9xJn\",\"n5wubRfh6zh8QRymN\",\"JTk9wB6o6aQDqfkS6\",\"a777e8chPvJkY3tKa\",\"hcm8sL8mNJTSfTdgE\",\"NchnDcEmsLTeFZ4FH\",\"3WtHp4MBzciz4AE8M\",\"ZGw8dkWLvvwEh5Qpv\",\"sNcDN3s3rH9wcNg5n\",\"rHTjybaGzJ9YvgaXK\",\"aRCwEM8hnYEoHiSiY\",\"FGEeCTorXbX3WvjFW\",\"Fhwnime223hGiaHaA\",\"65dbBZynphj53nXqA\",\"ttuGK7od8simjgmCJ\",\"aEm3Wvj2rFYRL8Lrb\",\"r7mZLgpQWzRiGddL5\",\"iJC8PmpzSyTnEDqw5\",\"BedTuZQcg7mCmqjMK\",\"kp2ZbCewZJAbfd7xv\",\"jkumHyXfMkhGcPgqC\",\"bX6tpTCjwoi6XMMbK\",\"C9LKGu2g5hSijvDzA\",\"mHT2bJb5SByfJ8yKS\",\"CJBPyyfyaEeEo63sb\",\"MEZNjeGd7APtvA3SL\",\"4gb4tvaSCs9u2z3ZA\",\"FioqXbWFJxdCop35Z\",\"K2ntBEwvnks86BpW6\",\"veKWMS3ACmRWTjiLK\",\"s9qcJASB9WKPWaQzi\",\"rSJGLYSXMuu3RWjun\",\"7gZKfvwaeqsGKXMEN\",\"QRv96jmNaYsWkxQEG\",\"oDnPTXrzYF4snDPXY\",\"Po3v3dHCk6wYGKMwi\",\"buX4mCQhtXCfBjeno\",\"ZcmrtSpqFnCBEK5YE\",\"s7Qqx4Jnuq85iB7Lw\",\"vSPc7MGK5Poy8tSFp\",\"RkWxtC9EdPNiQ9sTC\",\"RKKuw76K7sRBMouKq\",\"Jwoe6heepP8r77Doj\",\"g9FkBtZma56o6zLFJ\",\"4Xv87xmdSnpYhi8hz\",\"ZTTJprKDvFqKGew7c\",\"QAZ5DGaWWYhku4BNz\",\"2sLmHo7G2irSyrDB7\",\"z5GXzFD9Wwgnm9Kxf\",\"t68Z8QoDjbsL4m73h\",\"Yu5Kc5oSL2D2rwA5o\",\"CNc6rmwhbxkxEhHAp\",\"ZcJm2kuqJnN3CXFaR\",\"DjChaA6HXG2vBe4fK\",\"YLQvAg6oPCFMSzGm8\",\"BdvdJYwHZr7JpkHsn\",\"8YKbBKsSqc64TmyWp\",\"vpxFLfnMm9xnhjZrr\",\"3QGyYQ9iSqLFgGM8j\",\"inmjjfsii2M4CMf34\",\"CH53jGETBeJTummf3\",\"Tu22KsScr9mykuy8N\",\"kA67Tpb9xNW7dSfXe\",\"5yvKyWSJfhuJu8KFg\",\"M4vq8ATaS9Jg5X7iP\",\"xMxdp5oCxmeuYxhpa\",\"g4NCSxxHqHCGMpWwT\",\"e9Cknxbx6o7Nb6REs\",\"4XxJxQkB5mNTLY2qk\",\"zw7g7T8wE5R5CBhXr\",\"2ZabBuAKvgS9qTSM7\",\"J38sCJqTS96XwwAWE\",\"Kk3jdrvAbPENkw5Ft\",\"eSewzYmhWeS4HWutm\",\"ttajk69ZA47egmks5\",\"McP4CZekwiTpoYqq6\",\"gf2rHbWhB4SxZ57cv\",\"vGKxRcDYDsXzTQuEQ\",\"f3RAbWvE6uESq7KE5\",\"6wcsoqgMKfZ7xjSgn\",\"WdLW2YLhL2kmSqKgK\",\"75NY7vqimaATzRdAX\",\"4p2sARSZNNnKqjAT6\",\"XB7fB6SRML67sDDoX\",\"f52uK7D6PGGdzjtdZ\",\"Es4eX2stRpyoXeC7f\",\"WBBN35jGBzzHWeLn5\",\"yK7zzK2aGJwuWKHRL\",\"G2Tp8KQzq4TQp2JfJ\",\"Sm955HCbs4tSPQeJW\",\"hFtPRTy5nwHG3mdGT\",\"XrN688tKMi8qqsNFK\",\"REwjhANYpZvCgXt2b\",\"mwg8jvMHHmQiQRrbr\",\"T69pCLmCJfqL5PRSP\",\"oFYzzMeNDJNq8rXWm\",\"wzsQExQ77eRqYt5ym\",\"vmTj4abpqWCBzaqpM\",\"DMNKJpQmmSLrNMqad\",\"mK4obsnYRwLno5v9u\",\"umE8dRTGWzrZFp755\",\"2e4Rom2DKp6QrdG2s\",\"PH32cNxBjrK4a28sn\",\"sYJKcRHeWxTBoAdaL\",\"iWGRAvStRr95HHW3o\",\"hCfruGWxw7v64teEr\",\"Akq3fQcPRgPrWfsye\",\"sqn4t3yxBjmvaJpfL\",\"HjoBrJZbhtB2GLBQT\",\"FJhT7FN96ZNApRmh3\",\"tfYpJ66Lq7Y432Nzq\",\"Qy9iR759KepTnfxjW\",\"qSgnv4aebmDaxrX8H\",\"Lts22EbB5q962NkrD\",\"5unWrvqG7XxEwB4pX\",\"qzzyGD7fCCDjX25za\",\"5nHtgdY8F2FbAMawq\",\"BTdKRxKHXHDDD4934\",\"guBtXXMEXLAKbjsgp\",\"DcnmRtccqyvjmRSzp\",\"r4Pvmzy48TyAj6dZE\",\"pesXNGYRRQpBw7fiF\",\"6P9KgzXeJtZ6ejQcu\",\"J37TGp7bSCuZgvaZz\",\"sAhNjH3HZ9tSSSKTX\",\"4CBtKQQ2Btz4frrd7\",\"azAzSkvJd7eyXY9x9\",\"2ZFoLTxcCARhwc8xX\",\"gt72ofBStqvphGX6j\",\"csgxwerMgZXe2wLqh\",\"p6qLK4qS2dnFzDA7k\",\"NtLvQMsFtWC3tsfFo\",\"PTo9qt93YqGvL8fCa\",\"5rmqSjwK8b6a5SWHn\",\"ysn3AgBScxnZsFztg\",\"c7uBxu2rgY77H5d79\",\"Q24KjtTFydCAkmXbd\",\"irD7jrxvu9Ssx7MqS\",\"J7d397iB5GuWRAMfg\",\"c5crLk8t5GBYaoFfM\",\"s678Wirfor5uYL5T6\",\"QEhgdaBYvvTH4GpoN\",\"RtPhDuwmvWNHiBxmG\",\"u9cRf5kvtpRB5ffB3\",\"7YPQhLqK3NEJunYfF\",\"GxiKdXPCMtmHRrPiQ\",\"EkaHge5WaoGpiCxpx\",\"sHDcTJTsrxM3QnJij\",\"CHnfy8B53PtSaWC9j\",\"8SYDBRtkZuW3pdPtG\",\"k8rMJnaejG3dX4ute\",\"XGngZST3B7zpotX9b\",\"pgNKBN8Cm4EQFgt85\",\"pdbsJevrpSGkFp4fW\",\"AJwBauGHyrbqgDYce\",\"gxQz4P68ttmcxDCRW\",\"Z6SApA73eBBBnqfDo\",\"8qsBmGejbFJfmjZYW\",\"k6QB6fzbj4LsWktRL\",\"SjY6a2v6jMjGraDKz\",\"LFSASkxgw9hr3KqmC\",\"d7JAGB9g43TPprkMD\",\"PtpZzTyCnfqM2X7cL\",\"GsrjAqoAdLATJH9qD\",\"HmtXD44defcxRdQap\",\"QjGNkRM3Xc78yShJN\",\"npp5hesJrst6ghKSM\",\"Gaw7yBLGZfgeopK5Q\",\"yuLxi2qBJvMnwgdgJ\",\"snxRJ2YLF8FFWnd69\",\"uhamgmdpjpYQBj8vZ\",\"qBt8jfTT3uAX34BmQ\",\"7kENXQQ8ABiPGfBRD\",\"LuoLQY9WTienq8Z6a\",\"ZyC4qiskbcF2EwYHH\",\"N2WFuggGBdyapHFFd\",\"foytX6kH9wiSYqLtT\",\"QZ8WZKddHRrTGqGen\",\"pi76g3eRpnKrhee2a\",\"LwwQoT3e8c7MqZ9Kn\",\"5JNZwCNGe5eg3rwJB\",\"xAr5TwayLpCH2TNE9\",\"fF6dLjPvWb9feuTHj\",\"3tCE6mggxxwbukfYy\",\"hLzARL4bkRWvwPASM\",\"GM2X83qnuLXTHe5zA\",\"zza5WjC8QrHcoDZBF\",\"Yp7uvStL97cC9fKkY\",\"inbiBEY2tizFwkN84\",\"phpQMWpxuxevnf9vQ\",\"KZwXBsAy7DxvtvvNT\",\"Y5vkJECFNSxbzRotT\",\"HAjpsCyuHdq3MtRYr\",\"szQg8dxKNNre3v3Jk\",\"mcPJaijagxzbA5HpH\",\"LMzryxcPprKrbWGLq\",\"Ya3eHgs8x3unZRLpb\",\"wr43cyJ4B4vwLu9rR\",\"KcpfY4XZ7fNamyLd3\",\"2TsNhkQj4Y6WYxpio\",\"MW4gsgPJfaMEMyXPy\",\"EczSoyDKLrMXeuQuH\",\"qn4kFmuJu8etFWYAW\",\"8s5Bdrn7RTga7DL6x\",\"RnY25enEBE8T9P5GS\",\"PsccWumihMv4fv3ri\",\"9XnGoq9Tv6ut3zTtH\",\"sZ2eCa6pF6EN9PMmd\",\"ajypJ5nzT42i2CLnz\",\"649LDDhSKfmkPANRM\",\"oDtGiNqDMHmhHE3J8\",\"NGvCPuMiAP3xrRLfB\",\"2Qk2mFu9HBFzrB24i\",\"49XFttjKo2QhEWT3R\",\"wo4cpen33NYFHNca7\",\"7RGE5cTr7QbXQKanZ\",\"DJj5CEgZKQ5MyLYsA\",\"gXTAie79kiw28tx5u\",\"5nhmyqLy8M2Yn2HMR\",\"RoGGD5cpHb4ftdLDv\",\"iqmPb9JuJDgTFeR8Q\",\"34bE6mric984YYLZQ\",\"dGrFWf3d5h4QihP4A\",\"av9jN3SbNRM7Xe2qw\",\"bvmfHMCYFQxsf5EKG\",\"EJXaAcika2bAcRAta\",\"jicWFrNKadYuLhqxh\",\"p5ZshR8zhTqmdhKDc\",\"AMpQSjKsRqhCDyS2j\",\"xDYwLGCvEcqzLWMcg\",\"ZKuwzkssrSsDGNPr5\",\"Btsi6Fkg5fbwsyqDd\",\"Hcyqetei9TKHGbLG9\",\"QiqcdQfduXjgGu57R\",\"Swb2jDnZjviDXsQvB\",\"rqeF88eXmoKSr4HeK\",\"8BJyXvRWcrvN3nttS\",\"AFfw7cGg83uYk2Miy\",\"erzAf7RDcqN3aSg5t\",\"jyoLggHk8xQKZuoQC\",\"HpfaNWBYpnsQRAPQn\",\"ThaiAKWWDw2W4QfJh\",\"eEEoxM9RMLP3pEmth\",\"uxKGACwmZ6FNZsMwE\",\"GGQDpkXJGa2eLMnKT\",\"CHvzhtXnv8HTbPQ56\",\"RWadiFi5Qv5679JfC\",\"mpLFbFKjY6u3nsDMv\",\"dagtoSdDAar2zTbRK\",\"FY7atTfxaahfAHtJv\"],\"total\":280,\"quality\":[4,5,3,5,2,2,5,5,5,5,4,5,4,5,5,4,5,5,5,5,3,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,5,5,5,3,5,5,1,3,5,3,3,5,5,5,5,5,5,5,4,5,5,3,4,5,5,5,4,5,5,5,5,5,5,4,5,5,5,5,5,3,5,5,5,3,5,5,5,5]},\"flags\":0},\"summary\":\"Create two functions:\\n\\nThe first is isOdd() to check if a given number is odd using bitwise operator.\\nThe second is isEven() to check if a given input is even using regular expressions.\\n\\nUse of  % operator is disallowed.\\n\\nExamples\\nisOdd(3) ➞ \\\"Yes\\\"\\n// Use Bitwise Operator\\n\\nisOdd(58) ➞ \\\"No\\\"\\n// Use Bitwise Operator\\n\\nisEven(\\\"0\\\") ➞ \\\"Yes\\\"\\n// Use Regular Expression\",\"tags\":[\"conditions\",\"regex\",\"bit_operations\",\"validation\"],\"timestamp\":{\"$date\":1590981607086},\"title\":\"Bitwise Operator to Check Odd, Regular Expression to Check Even\",\"quality\":4.511363636363637,\"family\":[{\"_id\":\"jfeWP9tjtwNeRu4WG\",\"language\":\"java\"},{\"_id\":\"uroPr8CNouxobtShi\",\"language\":\"javascript\"},{\"_id\":\"QEL3QAY9ZhSkZcEih\",\"language\":\"python3\"},{\"_id\":\"rkijqgGRcgbtD9Enb\",\"language\":\"ruby\"}]}}"]