a["{\"msg\":\"result\",\"id\":\"1242\",\"result\":{\"_id\":\"CstPAznqLdPSPYyAC\",\"author\":\"Isaac Pak\",\"authorId\":\"yaL57wdXmgAZTvKfX\",\"code\":\"let errorLog = {}\\n\\nlet promise = new Promise((resolve, reject) => {\\n    throw new Error('Something failed');\\n})\",\"difficulty\":2.058139534883721,\"editorId\":\"yaL57wdXmgAZTvKfX\",\"familyId\":\"sZe4YAN5PTBPNvHX8\",\"instructions\":\"We handle **resolve** callbacks with **then**, but what about **reject** callbacks?  We have a **catch** function that we can use to handle **errors** or **rejected** promises.   It is generally a good idea to have an error handler at the end of your promises.\\n\\n### Challenge\\n- Write an error handler for the provided promise. Re-assign `errorLog` to the error inside your error handler.  \\n- The error handler must be added to the original promise.  So you can't do \\n```promise.catch(/error handling/)```.  See the **Comments** for more details.\\n\\n### Notes\\nCheck the **Resources** tab for more info on promises.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"function promiseState(p) {\\n  const t = {};\\n  return Promise.race([p, t]).then(v => (v === t)? \\\"pending\\\" : \\\"fulfilled\\\", () => \\\"rejected\\\");\\n}\\n\\nTest.assertSimilar(errorLog, {}, \\\"You are only allowed to reassign 'errorLog' inside of the 'catch' method.\\\")\\npromiseState(promise).then(state => Test.assertEquals(state, \\\"pending\\\", \\\"ignore this test\\\"))\\npromise.then(x => Test.assertEquals(x.message, \\\"Something failed\\\"))\\npromise.then(x => Test.assertEquals(errorLog.message, \\\"Something failed\\\"))\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,2,2,1,3,3,3,0,1,1,2,3,3,2,3,1,2,0,2,0,2,3,2,3,0,3,2,3,3,3,1,0,1,3,3,1,2,2,3,2,3,3,0,2,2,1,3,2,2,1,0,3,2,3,3,3,3,3,3,0,2,3,2,2,3,4,2,2,2,2,1,3,3,2,2,1,0,3,2,3,3],\"rators\":[\"yaL57wdXmgAZTvKfX\",\"yjtdwc2AC4jA2RWtn\",\"s5zzhdSQFAa9PbYur\",\"KcpfY4XZ7fNamyLd3\",\"yFGcFfNsHt2Z4G5a9\",\"CJBPyyfyaEeEo63sb\",\"6BpBQnSGhzgvhXrEy\",\"AvEiDZKLHCEQ6n9Ma\",\"pi76g3eRpnKrhee2a\",\"GCsLzWAhLvniQqR3J\",\"yuLxi2qBJvMnwgdgJ\",\"dKEpqsNT6HHoLfttp\",\"ZtniSFrgec4oj6Pxm\",\"SxqAEMaYcE9Ps9eh6\",\"EWn8w8P3nNh7knatY\",\"NRYNuaQhH6Hife3nf\",\"QAZ5DGaWWYhku4BNz\",\"a7LBurCmz5n6gECbv\",\"zW5JY78HhFCrSPEeE\",\"3TAFGjvMoTsxb5AH6\",\"54Ka62KytXRsrLPhZ\",\"FJsvM5yqKuK9yMk9P\",\"N82kEBvpFE5FjbHrk\",\"fngeyb3ggLPHgMSpz\",\"fMqXimJLsPiuhT8A8\",\"AasGs8AeX9Lcb9xJn\",\"78wgs8isnZAzjD8mm\",\"WZtccgHDu6QmNHmsD\",\"rJGzFvBGYxdukwt8X\",\"FEhpEv9JhSsqqfACv\",\"qo2YSd4qofFsxmpNa\",\"M4vq8ATaS9Jg5X7iP\",\"jd9sRTnsyeKpPggba\",\"H34EGCuDFft9pToZp\",\"MEZNjeGd7APtvA3SL\",\"mHT2bJb5SByfJ8yKS\",\"F939uec2dYtYyNYy8\",\"aFMst9xdc5NbYP8E9\",\"8s5Bdrn7RTga7DL6x\",\"65dbBZynphj53nXqA\",\"csXjXMhiQfbCQ9L7b\",\"jkumHyXfMkhGcPgqC\",\"FiK2ruyH8KeHLAgoA\",\"GgBMSnNz532pT23Ed\",\"RQwuHHy4rBgaQCLte\",\"ygfKhQMWxTZMkLvsC\",\"7kENXQQ8ABiPGfBRD\",\"aEm3Wvj2rFYRL8Lrb\",\"n5wubRfh6zh8QRymN\",\"NczXsSrYNX6nDWhjF\",\"hNEhHd8qodq4P3h2g\",\"34bE6mric984YYLZQ\",\"Kk3jdrvAbPENkw5Ft\",\"7gZKfvwaeqsGKXMEN\",\"wBeghLKGGfX44nMZe\",\"gt9zhJjDZE5MraxoF\",\"Ky9kyimSpzixfFfkq\",\"PGCDJpQMN8Sjn9Gm6\",\"qJTbsuToGEtaYnGxn\",\"G5jpRM9Sn6NJiELRF\",\"CNc6rmwhbxkxEhHAp\",\"BdvdJYwHZr7JpkHsn\",\"2QziknsznNeMPRh3g\",\"g4NCSxxHqHCGMpWwT\",\"zw7g7T8wE5R5CBhXr\",\"otsLxtdL6RdguCJ2f\",\"sNcDN3s3rH9wcNg5n\",\"i49enk79wAajcgi7a\",\"vGKxRcDYDsXzTQuEQ\",\"eD63zchjA6Sn5qeud\",\"e9Cknxbx6o7Nb6REs\",\"9QhoadfJpbCZkoyMX\",\"rmMrWxMDFpoiPK6nf\",\"j5FSQCayX3By73CCw\",\"HnoDeuYM8h3PkXtSz\",\"e2AzEy4BAetcHNjKF\",\"5r3bmtq97ozEwHrmr\",\"atqnWsznTPuPfARfm\",\"vr5tDPvPwG5rq2fHE\",\"32BP5pGjkAM278JhZ\",\"wJTDDTE3TrmSXKP4d\",\"oDtGiNqDMHmhHE3J8\",\"bX6tpTCjwoi6XMMbK\",\"PH32cNxBjrK4a28sn\",\"ozuGZFqxhWMeaQTBt\",\"J7d397iB5GuWRAMfg\",\"AMpQSjKsRqhCDyS2j\",\"9XnGoq9Tv6ut3zTtH\",\"3jkZkED29kaXmRohH\",\"2v6kmccZDRPbPNDyf\",\"9qJwfSnwqzDYYRqTP\",\"QGjY3hgPYPMmMjc7j\",\"ThaiAKWWDw2W4QfJh\",\"nr6NdAwpgMJcL2Wue\"],\"total\":106,\"quality\":[5,2,3,5,5,3,5,5,4,3,3,1,5]},\"flags\":0},\"summary\":\"We handle resolve callbacks with then, but what about reject callbacks?  We have a catch function that we can use to handle errors or rejected promises.   It is generally a good idea to have an error handler at the end of your promises.\\n\\nChallenge\\nWrite an error handler for the provided promise. Re-assign errorLog to the error inside your error handler.\\nThe er\",\"tags\":[\"functional_programming\"],\"timestamp\":{\"$date\":1581702376527},\"title\":\"Promises VI: Catch\",\"quality\":3.769230769230769,\"family\":[{\"_id\":\"CstPAznqLdPSPYyAC\",\"language\":\"javascript\"}]}}"]