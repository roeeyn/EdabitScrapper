a["{\"msg\":\"result\",\"id\":\"1840\",\"result\":{\"_id\":\"rRXRZvkq6uK98uEWv\",\"author\":\"er0s\",\"authorId\":\"5Zq3aGdvh4LHBvnJL\",\"code\":\"Math.avg = function(arr, prec) {\\n\\t// Arithmetic\\n}\\n\\nMath.qAvg = function(arr, prec) {\\n\\t// Quadratic\\n}\\n\\nMath.hAvg = function(arr, prec) {\\n\\t// Harmonic\\n}\\n\\nMath.gAvg = function(arr, prec) {\\n\\t// Geometric\\n}\",\"difficulty\":2.6481481481481484,\"editorId\":\"5Zq3aGdvh4LHBvnJL\",\"familyId\":\"aw6idWzoYosb4N53S\",\"instructions\":\"In this exercise the goal is to extend the `Math()` object adding four methods for calculate different types of averages.\\n\\n- **Arithmetic Mean:** The division of the sum of the numbers by the quantity of numbers.\\n  - avg of \\\\[A, B, C] ➞ (A + B + C) / 3\\n- **Quadratic Mean:** Also called _Root Mean Square_, is the square root of the arithmetic mean of the squared numbers.\\n  - qAvg of \\\\[A, B, C]  ➞  ²√ ( (A² + B² + C²) / 3 )\\n- **Harmonic Mean:** is the [reciprocal](https://en.wikipedia.org/wiki/Multiplicative_inverse) of the arithmetic mean of the numbers reciprocals.\\n  - hAvg of \\\\[A, B, C]  ➞  ( (A⁻¹ + B⁻¹ + C⁻¹) / 3 )⁻¹\\n- **Geometric Mean:** is the [_n-th_ root](https://en.wikipedia.org/wiki/Nth_root) of the product of the numbers, where _n_ is the quantity of numbers.\\n  - gAvg of \\\\[A, B, C] ➞   ³√ (A \\\\* B \\\\* C)\\n\\nFor each average type build a function that, given a required parameter (the array containing the numbers) and an optional one (the precision, or number of floating digits to return) returns the result as a number.\\n\\n### Examples\\n```\\nMath.avg([3, 5, 7])➞ 5\\n//Precision is an optional parameter.\\n// (3 + 5 + 7) / 3 = 15 / 3 = 5\\n\\nMath.qAvg([3, 5, 7], 1) ➞ 5.3\\n// ²√ ( (3² + 5² + 7²) / 3 ) = ²√ (83 / 3) = 5.3\\n\\nMath.hAvg([3, 5, 7], 1) ➞ 4.4\\n// Precision is required only for the final result.\\n// (3⁻¹ + 5⁻¹ + 7⁻¹) / 3 )⁻¹ = (0.676... / 3)⁻¹ = 4.4\\n\\nMath.gAvg([3, 5, 7], 1) ➞ 4.7\\n// ³√ (3 * 5 * 7) = ³√ 105 = 4.7\\n```\\n\\n### Notes\\n- Pay attention to cumulative rounding errors! Precision is required only if the parameter is indicated and only for the final result.\\n- All given arrays are valid ones containing positive numbers greater than zero, either integers or float.\\n- **REVISION NOTE**: [Implementing a method for to get the _n_-th root of a number](https://stackoverflow.com/questions/7308627/javascript-calculate-the-nth-root-of-a-number) can lead to rounding imprecisions if you use a combination of exponential and logarithm instead of a direct formula. Thanks to **@Pustur** and **@xAlien95**, see the **Comments** tab for more info. After the update, some old solution could fail the last test for the geometric average.\",\"lab\":\"Test.assertEquals(Math.avg([3, 5, 7]), 5, \\\"Example #1\\\")\\nTest.assertEquals(Math.qAvg([3, 5, 7], 1), 5.3, \\\"Example #2\\\")\\nTest.assertEquals(Math.hAvg([3, 5, 7], 1), 4.4, \\\"Example #3\\\")\\nTest.assertEquals(Math.gAvg([3, 5, 7], 1), 4.7, \\\"Example #4\\\")\\nTest.assertEquals(Math.avg([1, 4, 4]), 3)\\nTest.assertEquals(Math.qAvg([1, 4, 4], 3), 3.317)\\nTest.assertEquals(Math.hAvg([1, 4, 4], 5), 2)\\nTest.assertEquals(Math.gAvg([1, 4, 4], 7), 2.5198421)\\nTest.assertEquals(Math.avg([0.11, 0.22, 0.33], 1), 0.2)\\nTest.assertEquals(Math.qAvg([0.11, 0.22, 0.33], 6), 0.237627)\\nTest.assertEquals(Math.hAvg([0.11, 0.22, 0.33], 4), 0.18)\\nTest.assertEquals(Math.gAvg([0.11, 0.22, 0.33], 2), 0.2)\\nTest.assertEquals(Math.avg([1, 23, 456, 7890]), 2092.5)\\nTest.assertEquals(Math.qAvg([1, 23, 456, 7890]), 3951.599865877111)\\nTest.assertEquals(Math.hAvg([1, 23, 456, 7890]), 3.8248304676450755)\\nTest.assertEquals(Math.gAvg([1, 23, 456, 7890]), 95.37672823128207)\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,3,2,3,3,4,4,3,2,4,2,2,2,4,1,1,2,2,2,5,2,0,2,4,3,4,4,2,4,2,3,2,3,3,2,3,2,2,4,4,3,2,2,4,1,4,1,3,3,4],\"rators\":[\"5Zq3aGdvh4LHBvnJL\",\"65dbBZynphj53nXqA\",\"yjtdwc2AC4jA2RWtn\",\"EWn8w8P3nNh7knatY\",\"AasGs8AeX9Lcb9xJn\",\"dcHcCiNWyCXgSqLTm\",\"mHT2bJb5SByfJ8yKS\",\"cRpaCxYRmGcN3Nsoj\",\"THoTJTpHE2D4TGWAJ\",\"n5wubRfh6zh8QRymN\",\"SxqAEMaYcE9Ps9eh6\",\"rfsQxYTnovxYJ4s7Q\",\"YER6iBcpJCuhgrYDN\",\"2d6fufcQy4F3awkF3\",\"GCsLzWAhLvniQqR3J\",\"nBo2LLuSMeEgd5f6G\",\"zMCXYFZSsviDCvjnY\",\"faYyw7jGsSeaMeYYd\",\"dXXrCKPcCmFFYZp44\",\"FKMPCJDxvG3Rtf3JE\",\"h4jFmtbFn92eA4649\",\"5NGxHLcQ8Af2RJ4TN\",\"BWeuRgsWB7tbf3WFC\",\"KDS2NeCGRv4jMMEuz\",\"9qQEDELhzg58uSvjg\",\"a777e8chPvJkY3tKa\",\"ZcqshY58sGEEvgeaq\",\"4xdSc245S8vAvgDK9\",\"rJGzFvBGYxdukwt8X\",\"CJBPyyfyaEeEo63sb\",\"zQjEANHq9coZnajmc\",\"eoepTq5ES5tfgY9XT\",\"aEm3Wvj2rFYRL8Lrb\",\"rC7kdm3SsSX9udEQk\",\"xn7uGNKeAwPEkP9oA\",\"FJsvM5yqKuK9yMk9P\",\"QozwRCt9hwyqeFB5i\",\"buX4mCQhtXCfBjeno\",\"kp2ZbCewZJAbfd7xv\",\"Es4eX2stRpyoXeC7f\",\"vGKxRcDYDsXzTQuEQ\",\"4XxJxQkB5mNTLY2qk\",\"RKKuw76K7sRBMouKq\",\"Po3v3dHCk6wYGKMwi\",\"CNc6rmwhbxkxEhHAp\",\"QRv96jmNaYsWkxQEG\",\"wJTDDTE3TrmSXKP4d\",\"s678Wirfor5uYL5T6\",\"ceMycDhXzsRojnr9F\",\"sZ2eCa6pF6EN9PMmd\",\"rSJGLYSXMuu3RWjun\",\"Xk2g4CNFAnYcvxiSr\",\"nkH3HfJXLMNcBMM79\",\"PTo9qt93YqGvL8fCa\",\"8BJyXvRWcrvN3nttS\",\"oDtGiNqDMHmhHE3J8\"],\"total\":59,\"quality\":[5,5,3,5,4,5,4]},\"flags\":0},\"subscribers\":[\"5Zq3aGdvh4LHBvnJL\"],\"summary\":\"In this exercise the goal is to extend the Math() object adding four methods for calculate different types of averages.\\n\\nArithmetic Mean: The division of the sum of the numbers by the quantity of numbers.\\n  avg of \\\\[A, B, C] ➞ (A + B + C) / 3\\nQuadratic Mean: Also called Root Mean Square, is the square root of the arithmetic mean of the squared numbers.\\n  qAvg\",\"tags\":[\"language_fundamentals\",\"math\",\"numbers\"],\"timestamp\":{\"$date\":1570571219088},\"title\":\"Averages Methods: Extending the Math Object\",\"isHidden\":false,\"quality\":4.428571428571429,\"family\":[{\"_id\":\"rRXRZvkq6uK98uEWv\",\"language\":\"javascript\"}]}}"]