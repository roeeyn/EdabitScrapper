a["{\"msg\":\"result\",\"id\":\"888\",\"result\":{\"_id\":\"dPAzqLybypQdJKkKm\",\"author\":\"zatoichi49\",\"authorId\":\"tAF9Gf6PiGogbZuWs\",\"code\":\"function progressBar(bar, progress) {\\n\\t\\n}\",\"difficulty\":1.6056338028169015,\"familyId\":\"CFiycz9SSshYhhHs2\",\"instructions\":\"Given a *character* and a *value* between 0 and 100, return a string that represents a simple progress bar.\\n\\n- The value represents a percentage.\\n- The bar should begin and end with \\\"|\\\"\\n- Repeat the character to fill the bar, with each character equivalent to 10%\\n- Use spaces to pad the bar to a length of 10 characters.\\n- A single space comes after the bar, then a message with the % of completion (e.g. \\\"Progress: 60%\\\")\\n- If the value is 100, the message should be \\\"Completed!\\\".\\n\\n### Examples\\n```\\nprogressBar(\\\"#\\\", 0) ➞ \\\"|          | Progress: 0%\\\"\\n\\nprogressBar(\\\"=\\\", 40) ➞ \\\"|====      | Progress: 40%\\\"\\n\\nprogressBar(\\\"#\\\", 60) ➞ \\\"|######    | Progress: 60%\\\"\\n\\nprogressBar(\\\">\\\", 100) ➞ \\\"|>>>>>>>>>>| Completed!\\\"\\n```\\n\\n### Notes\\nN/A\",\"lab\":\"Test.assertEquals(progressBar(\\\"=\\\", 10), \\\"|=         | Progress: 10%\\\")\\nTest.assertEquals(progressBar(\\\"#\\\", 90), \\\"|######### | Progress: 90%\\\")\\nTest.assertEquals(progressBar(\\\"*\\\", 100), \\\"|**********| Completed!\\\")\\nTest.assertEquals(progressBar(\\\"#\\\", 50), \\\"|#####     | Progress: 50%\\\")\\nTest.assertEquals(progressBar(\\\"*\\\", 60), \\\"|******    | Progress: 60%\\\")\\nTest.assertEquals(progressBar(\\\"#\\\", 100), \\\"|##########| Completed!\\\")\\nTest.assertEquals(progressBar(\\\"*\\\", 60), \\\"|******    | Progress: 60%\\\")\\nTest.assertEquals(progressBar(\\\"=\\\", 30), \\\"|===       | Progress: 30%\\\")\\nTest.assertEquals(progressBar(\\\">\\\", 70), \\\"|>>>>>>>   | Progress: 70%\\\")\\nTest.assertEquals(progressBar(\\\"=\\\", 40), \\\"|====      | Progress: 40%\\\")\\nTest.assertEquals(progressBar(\\\">\\\", 20), \\\"|>>        | Progress: 20%\\\")\\nTest.assertEquals(progressBar(\\\"*\\\", 0), \\\"|          | Progress: 0%\\\")\\nTest.assertEquals(progressBar(\\\"=\\\", 60), \\\"|======    | Progress: 60%\\\")\\nTest.assertEquals(progressBar(\\\">\\\", 90), \\\"|>>>>>>>>> | Progress: 90%\\\")\\nTest.assertEquals(progressBar(\\\"*\\\", 80), \\\"|********  | Progress: 80%\\\")\\nTest.assertEquals(progressBar(\\\"#\\\", 20), \\\"|##        | Progress: 20%\\\")\\nTest.assertEquals(progressBar(\\\"*\\\", 30), \\\"|***       | Progress: 30%\\\")\\nTest.assertEquals(progressBar(\\\"=\\\", 70), \\\"|=======   | Progress: 70%\\\")\\nTest.assertEquals(progressBar(\\\"=\\\", 0), \\\"|          | Progress: 0%\\\")\\nTest.assertEquals(progressBar(\\\">\\\", 100), \\\"|>>>>>>>>>>| Completed!\\\")\",\"language\":\"javascript\",\"summary\":\"Given a character and a value between 0 and 100, return a string that represents a simple progress bar.\\n\\nThe value represents a percentage.\\nThe bar should begin and end with \\\"|\\\"\\nRepeat the character to fill the bar, with each character equivalent to 10%\\nUse spaces to pad the bar to a length of 10 characters.\\nA single space comes after the bar, then a message w\",\"tags\":[\"strings\",\"formatting\"],\"timestamp\":{\"$date\":1564686890523},\"title\":\"ASCII Charts (Part 1: Progress Bar)\",\"stats\":{\"completed\":{\"total\":241,\"ratings\":[1,1,1,1,1,1,1,1,1,2,1,2,1,2,2,2,2,2,2,2,2,1,1,1,0,3,2,2,1,0,1,0,1,2,2,1,1,2,2,2,2,2,2,1,2,2,0,2,5,1,2,0,2,2,1,2,2,0,0,0,1,1,2,1,2,2,2,2,2,2,2,1,2,2,2,0,2,2,2,2,2,2,2,1,1,1,2,2,1,3,1,2,2,0,2,1,2,1,3,3,0,0,2,2,1,1,1,2,1,1,2,2,2,0,2,2,2,2,0,1,2,0,2,1,2,1,1,2,1,2,2,2,2,3,3,2,1,2,3,1,3,2,2,2,1,2,2,0,2,3,2,2,2,2,0,3,2,2,2,2,0,2,1,2,2,1,2,2,0,2,0,2,1,2,2,2,2,3,2,2,1,1,2,2,1,0,2,3,1,2,0,2,2,2,2,2,2,2,5,2,1,1,2,2,2,2,2,2,1,2,2,0,2],\"rators\":[\"ZzwR8m8Q6Gozo9ofz\",\"n5wubRfh6zh8QRymN\",\"cCdL6pT5y2LH7fPWN\",\"L9XxCiDxYJGcMQvxF\",\"EjPLq3QSJdGQFJdgW\",\"wcRpnBcwEJCs88aHq\",\"XKi8iZXBCHCaebSHh\",\"EAuL56kpyLytw4RcR\",\"bKPvJHLQ3ovQLt9MJ\",\"65dbBZynphj53nXqA\",\"SF5NBvK7GY5Y7wpN9\",\"aqzWajZcBZtTiyTqK\",\"EWn8w8P3nNh7knatY\",\"AdbF9DPcEAAQQWCoc\",\"Y9Nz9yafaibz54W4o\",\"7gZKfvwaeqsGKXMEN\",\"Q9KQomTTPBsrkAL6c\",\"zgoq9MhrL2h75DAMA\",\"arYfZZakzSHEnsu4i\",\"wcjknenWdPRhrRScv\",\"538PKNyqMiCwLWYWK\",\"E3fyZ23p26CcvHvuR\",\"RE4Mm9T6Q9uygAxGS\",\"CJnuSjyCBMTbTiibD\",\"Zp93Tit7CTRdkCMqp\",\"aPX8qCXL6TmfpRfgy\",\"zw7g7T8wE5R5CBhXr\",\"J4Jip9mHpcFCvRiHM\",\"jcPZ5ySXseCB7Ec3x\",\"6BpBQnSGhzgvhXrEy\",\"jmKPGxuB2hRtE8egx\",\"fmLzKJTPWvtGRAaAN\",\"2DfWvsPT8TPPNbQpt\",\"csRoCgJx5NBJzW8pX\",\"zNN2fW2pJGpTxBgzx\",\"Akq3fQcPRgPrWfsye\",\"2innwjWqxJHo4eRGh\",\"FHzvDACEZuAjRwL7v\",\"Jwu3i2k565y77L4aK\",\"rMa8q8fB7xyTN5R2e\",\"FiK2ruyH8KeHLAgoA\",\"R4JQmeA6cYyfXbmLF\",\"LrF8rMBdkJoZPJP5L\",\"e8ftyJ6nKRtZDwGWJ\",\"gGETo2x9dY5TsWc2b\",\"dDFJpK4pXCsQYuHmc\",\"5Zq3aGdvh4LHBvnJL\",\"bZaYG295rSDvoMYZk\",\"HrJtdRbvHHNh7tMMo\",\"yjtdwc2AC4jA2RWtn\",\"66gXXy97s3jxAeS9q\",\"QpJEX3iAL8o6acCgM\",\"SDtZFL5NzAoCPofXk\",\"h4jFmtbFn92eA4649\",\"ydEdzuCCZt4yny9Rq\",\"FJsvM5yqKuK9yMk9P\",\"Y7xPTPKpNAEiM2jkH\",\"8brYFmvvJy6iyohvS\",\"nArWysFb9Jgma7js7\",\"D5mmNN34xQFyXTM37\",\"6QEhBfzWmuYwm34zz\",\"oERDdk8GeuQMDdNCK\",\"SNiJRRosrmSWssLj4\",\"gGnDsJz5hr2t9MKCF\",\"3awyiorYPgCqqP7Sr\",\"2WkWxAEetbCzddQzK\",\"6gPHMpkEP8JuHxzpd\",\"FJQH9eyzX84d9Fdmf\",\"sbme4fRJjjBjYXRbY\",\"7Nz3GAqN3SMgSiyTT\",\"DHwbkbzYNpmkSFT7u\",\"nRht5DZA6YcH2kAo6\",\"zTZtM9jRsu8eXie6s\",\"BGQqaYbqYqmTo5Ehs\",\"qJZsi5rhRnWA38FbA\",\"oFckF5bB5dGBQKneS\",\"Sy3jJSEbCoF52qpHy\",\"2tCCFm5iefjrRSaxv\",\"z6QfbuG6TXE7GKynQ\",\"gzTs5oFrfZwh3Kfze\",\"BdvdJYwHZr7JpkHsn\",\"2CvHJcA9aXt9pvZwA\",\"zd9FLSzsGz3evKafy\",\"8BFSTCnoe2QggN64c\",\"m4vwHoRAybAhCmFu7\",\"xfxkLoQsbZBonmBGp\",\"XRRZ5kd8PvAQYtA4s\",\"WdxWWwuM5PcZbTgxY\",\"Jh6sPsgj8yHy95joL\",\"ih2aGaqkMaagTgyL2\",\"zDq6QPXr4arNm7iDW\",\"bzm5WayBjwad5jhdR\",\"DyunorHmNEeBgSGqs\",\"fMqXimJLsPiuhT8A8\",\"mHaHudYExvi45DSRf\",\"9gEWz76H8KmhN4yJj\",\"cp3X8hk8yNME7qoD9\",\"TTSFzTyGpi5eckkHZ\",\"3aZvfgr2H2WF8Yog2\",\"tQQxZtZsmYFFjFyma\",\"ygNnCnmzZfy3r2m6w\",\"g5noFWaoRtZNcEEAW\",\"zAMR5yM6wpzfE3a4S\",\"sutzxu4yTueBKE9Qp\",\"5YCX58nhHT8oRCHyy\",\"yaL57wdXmgAZTvKfX\",\"Pwt5LQa5iBr4FuEji\",\"zsNp9fk9BGDBiHr4G\",\"igDaLtrJoa2vrgtG6\",\"6moJkKrzP4iA3drnm\",\"mHT2bJb5SByfJ8yKS\",\"pi76g3eRpnKrhee2a\",\"k5TGxBtLi9BXxeChT\",\"7JCLyrrY6JYGpocac\",\"cJwiiiX7qwSvgtmk8\",\"eANW47mfA359Y6JyP\",\"tyNrtjfTi56j5Hw9b\",\"YER6iBcpJCuhgrYDN\",\"wmQjmzF9SNyCJcx6t\",\"9XnGoq9Tv6ut3zTtH\",\"E6DBfkTgHuPsDWdG8\",\"9Pzg45NEiRXhLtLh3\",\"tuTQhfZC5izTmXEgR\",\"d9LBRxvADNBB5QJMB\",\"CvjWNHy65tvGKQfeP\",\"uAS9uKs8KQmp8uhqn\",\"C9maxbn2ad6edFNho\",\"Pvh4WeZvw496QpmQp\",\"vtHbevf2tHqe6mRxX\",\"r6FtLwiu6SpgnJJzw\",\"HHLi7u8RdCaM2NQyy\",\"vWhgrr5oem8WtKdxm\",\"eomLS3wh6tQPN8jtH\",\"a7LBurCmz5n6gECbv\",\"a777e8chPvJkY3tKa\",\"Xt6cPpGb3RwuBC5jF\",\"ipiC2qPhKZWsAouJf\",\"2ZFoLTxcCARhwc8xX\",\"4KDAtZjKtimzfqgrc\",\"tAF9Gf6PiGogbZuWs\",\"Lzj3w7QjdzikynsGG\",\"4TuceAZ8oTDzsjhir\",\"p5ZshR8zhTqmdhKDc\",\"7wtuhPesfhcYsfZaZ\",\"5wQ2LQsx88nYidWZW\",\"Es4eX2stRpyoXeC7f\",\"BSkoT6o2GweZkqXbc\",\"bZxmwxYzarqa4kvE5\",\"QRv96jmNaYsWkxQEG\",\"Wv9v7fHb8umujfg2j\",\"buX4mCQhtXCfBjeno\",\"inbiBEY2tizFwkN84\",\"uigAJ9KT5muMWTDis\",\"ij9YRJvZz6WbqcGXS\",\"EoNHgbWsF6ZQF4eYr\",\"eQXwk5zGckM8tCWYH\",\"Yzh7zNiyG7LM9vnAj\",\"r7mZLgpQWzRiGddL5\",\"C9LKGu2g5hSijvDzA\",\"nkH3HfJXLMNcBMM79\",\"PGCDJpQMN8Sjn9Gm6\",\"BdnE4RS5puoxo92mA\",\"6kz7jjJS8W4tikYQT\",\"4ntYzGHHBgqf58udP\",\"Po3v3dHCk6wYGKMwi\",\"pLpcDC3EYx2DDQSdt\",\"aEm3Wvj2rFYRL8Lrb\",\"mfYrBKwDr4hXSFuuN\",\"AFfw7cGg83uYk2Miy\",\"evTTY9hwrtogaNxXn\",\"bX6tpTCjwoi6XMMbK\",\"kp2ZbCewZJAbfd7xv\",\"jkumHyXfMkhGcPgqC\",\"ttuGK7od8simjgmCJ\",\"CNc6rmwhbxkxEhHAp\",\"g4NCSxxHqHCGMpWwT\",\"JZ5mQXCKxaFjrnGtq\",\"DDokdbBKxv49M445o\",\"SY9Euc4kQfRgetXTd\",\"jLSZdBseR2kfjt8dL\",\"pdGuqmMyeN4wZaWwv\",\"vewKwcMeGuk3p3MsN\",\"vGKxRcDYDsXzTQuEQ\",\"Yp7uvStL97cC9fKkY\",\"STipuJs6kBvPqqsSE\",\"CH53jGETBeJTummf3\",\"2Ni3PzJAc5fAhqBkb\",\"gavnf7iyvHYMX9TZR\",\"u9cRf5kvtpRB5ffB3\",\"3Gf7ikLijfoxabiPY\",\"nDCNsJvKvsAS5F8PS\",\"srJ34BaybkQh3qRkM\",\"RtPhDuwmvWNHiBxmG\",\"m6qKkBY4aPWziyJTj\",\"2Qk2mFu9HBFzrB24i\",\"LCn6qz2GoMr5577Rd\",\"tD54KD2ysHSoXXyLj\",\"npp5hesJrst6ghKSM\",\"pPpmP7xeJzGgK362R\",\"cgCQDs9i7yChKeAjE\",\"gR2vYDNPKhAcxa2yk\",\"wJTDDTE3TrmSXKP4d\",\"YSmLyP3eRhcFjJPzg\",\"M4vq8ATaS9Jg5X7iP\",\"oDtGiNqDMHmhHE3J8\",\"NGvCPuMiAP3xrRLfB\",\"LwD3CyYSiBfg3mA4r\",\"9HZbxzkzgz4CvePtv\",\"5Sb4ifkf4XmQysfuX\",\"PaNqsjWjXFbj5sZKR\",\"8BJyXvRWcrvN3nttS\",\"nBJve5CzG6WAw7WFQ\",\"gXTAie79kiw28tx5u\",\"jyoLggHk8xQKZuoQC\",\"mpLFbFKjY6u3nsDMv\",\"bfYmA3LMvhSrK59cn\",\"sMcFMPkMJC4Kh6ymj\",\"rPsSEYqwmttMPEuvo\",\"oyB4Wr4EeZnoDaa8B\",\"jicWFrNKadYuLhqxh\",\"z47JaNrQMgvuPx5HE\",\"PTo9qt93YqGvL8fCa\",\"koWGjiCmozmgwhYsb\",\"sN2JyFeJCwfwwHPwF\",\"uxKGACwmZ6FNZsMwE\",\"HCfkcKnPs9mrJojdG\",\"CHvzhtXnv8HTbPQ56\",\"LPZ2QKCoB8q6rG25c\"],\"quality\":[3,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.809523809523809,\"family\":[{\"_id\":\"MPu9CwBpMZry5qMf7\",\"language\":\"cpp\"},{\"_id\":\"dPAzqLybypQdJKkKm\",\"language\":\"javascript\"},{\"_id\":\"hwTRPKBat82XmcJWk\",\"language\":\"python3\"},{\"_id\":\"C87AnxTQrrtjGMSwv\",\"language\":\"ruby\"}]}}"]