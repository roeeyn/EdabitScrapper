a["{\"msg\":\"result\",\"id\":\"1930\",\"result\":{\"_id\":\"xP34EkkKFGQc6ZGwg\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"function coinsDiv(arr) {\\n\\t\\n}\",\"difficulty\":2.730769230769231,\"familyId\":\"ZExuxkBq6wnMKieMj\",\"instructions\":\"Given an array of coins, father needs to distribute them amongst his three children. Write a function to determine if the coins can be distributed equally or not. Return `true` if each son receives the same amount of money,  otherwise return `false`.\\n\\n```\\n[1, 2, 3, 2, 2, 2, 3] ➞ true\\n```\\n\\n- Amount to be distributed to each child = `(1+2+3+2+4+3)/3 => 15/3 => 5`\\n- Possible set of coin to be distributed to children = `[(1,2,2),(2,3),(2,3)]`\\n\\n```\\n[5, 3, 10, 1, 2] ➞ false\\n```\\n\\n- Amount to be distributed to each child = `(5+3+10+1+2)/3 => 21/3 => 7`\\n- But there are no combination such that each child get equal value which is 7.\\n\\n### Examples\\n```\\ncoinsDiv([1, 2, 3, 2, 2, 2, 3]) ➞ true\\n\\ncoinsDiv([5, 3, 10, 1, 2]) ➞ false\\n\\ncoinsDiv([2, 4, 3, 2, 4, 9, 7, 8, 6, 9]) ➞ true\\n```\\n\\n### Notes\\n- Inputs will be an array of positive integers only.\\n- Coin can be any positive value.\",\"lab\":\"Test.assertEquals(coinsDiv([1, 1, 1]), true)\\nTest.assertEquals(coinsDiv([80, 78, 79, 65, 61]), false)\\nTest.assertEquals(coinsDiv([1, 1, 1]), true)\\nTest.assertEquals(coinsDiv([80, 78, 79, 65, 61]), false)\\nTest.assertEquals(coinsDiv([1, 2, 3, 2, 2, 2, 3]), true)\\nTest.assertEquals(coinsDiv([5, 3, 10, 1, 2]), false)\\nTest.assertEquals(coinsDiv([2, 4, 3, 2, 4, 9, 7, 8, 6, 9]), true)\\nTest.assertEquals(coinsDiv([4, 7, 6, 8, 2, 1, 2]), true)\\nTest.assertEquals(coinsDiv([3, 6, 2, 2, 2, 2, 1, 3, 2, 1, 3]), true)\\nTest.assertEquals(coinsDiv([11, 9, 3, 22, 6, 2, 4, 10, 1]), false)\\nTest.assertEquals(coinsDiv([13, 6, 12, 23, 2, 8, 15, 31, 16]), false)\\nTest.assertEquals(coinsDiv([4, 14, 12, 21, 3, 1, 18, 5]), true)\\nTest.assertEquals(coinsDiv([10, 5, 20, 27, 17, 4, 3, 15, 0, 25]), true)\\nTest.assertEquals(coinsDiv([7, 3, 3, 4, 5, 4, 1, 1, 1, 1, 1, 8, 7, 3, 3, 4, 5, 4, 1, 1, 1, 1, 1, 8]), true)\\nTest.assertEquals(coinsDiv([1, 13, 10, 6, 24, 16, 22, 4]), false)\\nTest.assertEquals(coinsDiv([9]), false)\\nTest.assertEquals(coinsDiv([246, 96, 129, 220, 203, 75, 200, 77, 114, 91]), false)\\nTest.assertEquals(coinsDiv([3, 2, 2, 5, 9, 3, 3]), true)\",\"language\":\"javascript\",\"summary\":\"Given an array of coins, father needs to distribute them amongst his three children. Write a function to determine if the coins can be distributed equally or not. Return true if each son receives the same amount of money,  otherwise return false.\\n\\n[1, 2, 3, 2, 2, 2, 3] ➞ true\\n\\nAmount to be distributed to each child = (1+2+3+2+4+3)/3 => 15/3 => 5\\nPossible set o\",\"tags\":[\"loops\",\"arrays\",\"logic\",\"validation\"],\"timestamp\":{\"$date\":1570743677110},\"title\":\"Coin Trouble\",\"stats\":{\"completed\":{\"total\":19,\"ratings\":[2,2,2,2,2,2,2,2,2,2,4,4,5,4,4,4,2,3,0,4,0,1,4,4,4,4],\"rators\":[\"BkPgkDQGHm66X4Qai\",\"yjtdwc2AC4jA2RWtn\",\"AasGs8AeX9Lcb9xJn\",\"65dbBZynphj53nXqA\",\"4aj4SEaSv44oA8j7K\",\"2NJuDfSqdrF8kHHni\",\"2innwjWqxJHo4eRGh\",\"wQ25xzXqh4y3A8NBB\",\"Kc3SDafimwpZWrATJ\",\"h4jFmtbFn92eA4649\",\"aEm3Wvj2rFYRL8Lrb\",\"ixabGTE2JSw9QLbJS\",\"WdgtZfWFz7WfwveXR\",\"naPADSK6YTP4KmmH9\",\"FjoXxJn6JT2Bv9w8Y\",\"ct42f2gGpMXSd9hXM\",\"DPi9QGLctq2y76KuE\"],\"quality\":[]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":0,\"family\":[{\"_id\":\"E4MGaMxB9zGdSDdne\",\"language\":\"cpp\"},{\"_id\":\"xP34EkkKFGQc6ZGwg\",\"language\":\"javascript\"},{\"_id\":\"LanWAvTtQetP5xyDu\",\"language\":\"python3\"},{\"_id\":\"usea8Qyn6g5QaxAyR\",\"language\":\"ruby\"}]}}"]