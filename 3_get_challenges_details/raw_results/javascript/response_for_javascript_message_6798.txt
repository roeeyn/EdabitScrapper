a["{\"msg\":\"result\",\"id\":\"2142\",\"result\":{\"_id\":\"rgEiYWCq6Z3J7RNwq\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"function getVowelSubstrings(str) {\\n\\t\\n}\\n\\nfunction getConsonantSubstrings(str) {\\n\\t\\n}\",\"difficulty\":2.9833333333333334,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"pafeGjgnMBipGQsxc\",\"instructions\":\"Write two functions:\\n\\n1. One to retrieve all **unique** substrings that **start** and **end** with a **vowel**. \\n2. One to retrieve all **unique** substrings that **start** and **end** with a **consonant**.\\n\\nThe resulting array should be sorted in lexicographic ascending order (same order as a dictionary). \\n\\n### Examples\\n```\\ngetVowelSubstrings(\\\"apple\\\")\\n➞ [\\\"a\\\", \\\"apple\\\", \\\"e\\\"]\\n\\ngetVowelSubstrings(\\\"hmm\\\") ➞ []\\n\\ngetConsonantSubstrings(\\\"aviation\\\")\\n➞ [\\\"n\\\", \\\"t\\\", \\\"tion\\\", \\\"v\\\", \\\"viat\\\", \\\"viation\\\"]\\n\\ngetConsonantSubstrings(\\\"motor\\\")\\n➞ [\\\"m\\\", \\\"mot\\\", \\\"motor\\\", \\\"r\\\", \\\"t\\\", \\\"tor\\\"]\\n```\\n\\n### Notes\\n- Remember the output array should have **unique** values.\\n- The word itself counts as a potential substring.\\n- Exclude the empty string when outputting the array.\",\"lab\":\"Test.assertSimilar(getVowelSubstrings(\\\"apple\\\"), [\\\"a\\\", \\\"apple\\\", \\\"e\\\"])\\nTest.assertSimilar(getVowelSubstrings(\\\"carrot\\\"), [\\\"a\\\", \\\"arro\\\", \\\"o\\\"])\\nTest.assertSimilar(getVowelSubstrings(\\\"aviation\\\"), [\\\"a\\\", \\\"ati\\\", \\\"atio\\\", \\\"avi\\\", \\\"avia\\\", \\\"aviati\\\", \\\"aviatio\\\", \\\"i\\\", \\\"ia\\\", \\\"iati\\\", \\\"iatio\\\", \\\"io\\\", \\\"o\\\"])\\nTest.assertSimilar(getVowelSubstrings(\\\"motor\\\"), [\\\"o\\\", \\\"oto\\\"])\\nTest.assertSimilar(getVowelSubstrings(\\\"rhyme\\\"), [\\\"e\\\"])\\nTest.assertSimilar(getVowelSubstrings(\\\"hmm\\\"), [])\\n\\nTest.assertSimilar(getConsonantSubstrings(\\\"apple\\\"), [\\\"l\\\", \\\"p\\\", \\\"pl\\\", \\\"pp\\\", \\\"ppl\\\"])\\nTest.assertSimilar(getConsonantSubstrings(\\\"carrot\\\"), [\\\"c\\\", \\\"car\\\", \\\"carr\\\", \\\"carrot\\\", \\\"r\\\", \\\"rot\\\", \\\"rr\\\", \\\"rrot\\\", \\\"t\\\"])\\nTest.assertSimilar(getConsonantSubstrings(\\\"aviation\\\"), [\\\"n\\\", \\\"t\\\", \\\"tion\\\", \\\"v\\\", \\\"viat\\\", \\\"viation\\\"])\\nTest.assertSimilar(getConsonantSubstrings(\\\"motor\\\"), [\\\"m\\\", \\\"mot\\\", \\\"motor\\\", \\\"r\\\", \\\"t\\\", \\\"tor\\\"])\\nTest.assertSimilar(getConsonantSubstrings(\\\"rhyme\\\"), [\\\"h\\\", \\\"hy\\\", \\\"hym\\\", \\\"m\\\", \\\"r\\\", \\\"rh\\\", \\\"rhy\\\", \\\"rhym\\\", \\\"y\\\", \\\"ym\\\"])\\nTest.assertSimilar(getConsonantSubstrings(\\\"hmm\\\"), [\\\"h\\\", \\\"hm\\\", \\\"hmm\\\", \\\"m\\\", \\\"mm\\\"])\",\"language\":\"javascript\",\"summary\":\"Write two functions:\\n\\nOne to retrieve all unique substrings that start and end with a vowel.\\nOne to retrieve all unique substrings that start and end with a consonant.\\n\\nThe resulting array should be sorted in lexicographic ascending order (same order as a dictionary).\\n\\nExamples\\ngetVowelSubstrings(\\\"apple\\\")\\n➞ [\\\"a\\\", \\\"apple\\\", \\\"e\\\"]\\n\\ngetVowelSubstrings(\\\"hmm\\\") ➞ []\",\"tags\":[\"strings\",\"loops\"],\"timestamp\":{\"$date\":1555984803217},\"title\":\"Substring Consonant-Vowel Groups\",\"stats\":{\"completed\":{\"total\":59,\"ratings\":[3,3,3,3,3,3,3,3,3,3,3,5,0,2,3,3,3,3,2,3,3,4,3,2,4,5,5,2,4,3,2,3,2,2,5,2,5,3,2,2,5,2,4,2,3,5,5,3,3,3,2,0,5,2,1,5,0,3,4,2],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"65dbBZynphj53nXqA\",\"JXb2TpuretfMdHMvb\",\"4r64YQWjZL6F3E2bY\",\"SDtZFL5NzAoCPofXk\",\"n5wubRfh6zh8QRymN\",\"yjtdwc2AC4jA2RWtn\",\"AasGs8AeX9Lcb9xJn\",\"5Zq3aGdvh4LHBvnJL\",\"cRpaCxYRmGcN3Nsoj\",\"sBcsrC5paZm9nxjot\",\"aEm3Wvj2rFYRL8Lrb\",\"JGBCMpnbbi5ztuFoX\",\"DPi9QGLctq2y76KuE\",\"RMpwqdCRrdBiGQhPT\",\"ZcJm2kuqJnN3CXFaR\",\"8BJyXvRWcrvN3nttS\",\"SdEQsNapyg24YATuh\",\"48DKfbSnoovp7nkWi\",\"wewkHJ4KNFT9k7ro5\",\"xsDyJstYoBZRS8pJH\",\"GSwEb9XDwYfYNA6vr\",\"CkDHNskK69CCXtjkb\",\"nEypsvWk363f3G5Je\",\"5P8vcFpTrFzRK4Sx4\",\"JrAdSGJS22WmW8oq3\",\"9emJeB8kxDNgjvqZd\",\"vFBkjBa9oK9y4Pv6j\",\"8SYDBRtkZuW3pdPtG\",\"J8CRTQ5xMNYbHcvLc\",\"AaQPxA2APZgKgtyiN\",\"EJXaAcika2bAcRAta\",\"NovTowtfjFr724zE7\",\"fAW6jLEfnhm28d2uS\",\"nGpZQuyRgaFA34EHp\",\"xPQyXayQtzWAhiMng\",\"aMc9NJ928GmJRB7oS\",\"c8iCgqHd3rBffwcvn\",\"NwPCDbFATdvXuxnxJ\",\"TddjTMQps5KW9erZC\",\"6nndghb4bv2Rj3Bmp\",\"J5MgLszeGgtciW56n\",\"eMoM9khxzSWin2nFa\",\"Z9jhP3WeN7jSf4aFs\",\"gf4xrfguK6KiEF9yi\",\"yr822PZmmiDDenxpB\",\"iqFK2iwAnpkdE68Bj\",\"4DHim7zxxPS6xTp8f\",\"NHDQvoqy9gkqMuhTH\",\"buX4mCQhtXCfBjeno\",\"6ixfX5gbXeqiqSD6v\"],\"quality\":[]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"isHidden\":false,\"quality\":0,\"family\":[{\"_id\":\"Dc7ojN3ryZACMfgng\",\"language\":\"cpp\"},{\"_id\":\"rgEiYWCq6Z3J7RNwq\",\"language\":\"javascript\"},{\"_id\":\"BcjsjPPmPEMQwB86Y\",\"language\":\"python3\"},{\"_id\":\"2PHF5gebnXyRPuvhf\",\"language\":\"ruby\"}]}}"]