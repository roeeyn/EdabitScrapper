a["{\"msg\":\"result\",\"id\":\"1235\",\"result\":{\"_id\":\"bZJLPjJL4BuyeeB6j\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"function camelCasing(str) {\\n\\t\\n}\",\"difficulty\":2.0538461538461537,\"familyId\":\"HkEeX9dco2XiN28xF\",\"instructions\":\"Using Camel Case (or camelCase) is where the first word is in lower case, and all words after it have their first letter capitalised. Note that there are no spaces in between words!\\n\\nCreate a function that takes a string and returns it back in camelCase.\\n\\n### Examples\\n```\\ncamelCasing(\\\"Hello World\\\") ➞ \\\"helloWorld\\\"\\n\\ncamelCasing(\\\"snake_case\\\") ➞ \\\"snakeCase\\\"\\n\\ncamelCasing(\\\"low high_HIGH\\\") ➞ \\\"lowHighHigh\\\"\\n```\\n\\n### Notes\\n- You need to remove all spaces and underscores.\\n- There will be no numbers in inputs.\",\"isHidden\":false,\"lab\":\"Test.assertEquals(camelCasing(\\\"Hello World\\\"), \\\"helloWorld\\\")\\nTest.assertEquals(camelCasing(\\\"snake_case\\\"), \\\"snakeCase\\\")\\nTest.assertEquals(camelCasing(\\\"low high_HIGH\\\"), \\\"lowHighHigh\\\")\\nTest.assertEquals(camelCasing(\\\"unEcEsSARilY_loNG_vArIablE_NaME\\\"), \\\"unecessarilyLongVariableName\\\")\\nTest.assertEquals(camelCasing(\\\"camel casing\\\"), \\\"camelCasing\\\")\",\"language\":\"javascript\",\"summary\":\"Using Camel Case (or camelCase) is where the first word is in lower case, and all words after it have their first letter capitalised. Note that there are no spaces in between words!\\n\\nCreate a function that takes a string and returns it back in camelCase.\\n\\nExamples\\ncamelCasing(\\\"Hello World\\\") ➞ \\\"helloWorld\\\"\\n\\ncamelCasing(\\\"snake_case\\\") ➞ \\\"snakeCase\\\"\\n\\ncamelCasing(\\\"\",\"tags\":[\"strings\",\"formatting\"],\"timestamp\":{\"$date\":1580337142710},\"title\":\"Changing a String into camelCase\",\"stats\":{\"completed\":{\"total\":176,\"ratings\":[2,2,2,2,2,1,1,1,2,2,2,2,2,0,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,3,2,2,3,3,2,0,3,3,2,0,0,1,2,2,3,3,1,3,3,2,3,3,3,2,1,3,3,2,2,1,3,2,2,2,3,2,3,2,3,3,3,1,3,2,2,2,3,1,3,3,2,2,3,2,2,2,1,3,1,2,2,3,2,3,0,0,1,3,2,2,2,3,0,2,2,3,1,3,3,3,1,3,3,2,1,0,0,3,3,3,2,1,2,5,0,3,2,3,2],\"rators\":[\"5Zq3aGdvh4LHBvnJL\",\"yjtdwc2AC4jA2RWtn\",\"n5wubRfh6zh8QRymN\",\"DKJGG9JpX8iJ7P9TC\",\"6BpBQnSGhzgvhXrEy\",\"RE4Mm9T6Q9uygAxGS\",\"Y9Nz9yafaibz54W4o\",\"Yx2w57JbzY92Q4DFP\",\"FJsvM5yqKuK9yMk9P\",\"mHT2bJb5SByfJ8yKS\",\"QnPD4Sv6W4LHc2Qng\",\"AasGs8AeX9Lcb9xJn\",\"g5noFWaoRtZNcEEAW\",\"n8THK6HNGMSrkkwdP\",\"eANW47mfA359Y6JyP\",\"zTZtM9jRsu8eXie6s\",\"vtHbevf2tHqe6mRxX\",\"E3qTTy7ZJqFyok6a3\",\"pi76g3eRpnKrhee2a\",\"EWn8w8P3nNh7knatY\",\"Y5H6Lp7Qou9XGptHH\",\"YER6iBcpJCuhgrYDN\",\"jYXFFTnuWFNo72Rc5\",\"eomLS3wh6tQPN8jtH\",\"E6DBfkTgHuPsDWdG8\",\"rkqkpcPmdfhP9sSPe\",\"GCsLzWAhLvniQqR3J\",\"FGEeCTorXbX3WvjFW\",\"HyxHzhmjpYXKSXDJw\",\"6ZtxahXALBHoLp2T4\",\"BSkoT6o2GweZkqXbc\",\"EAuL56kpyLytw4RcR\",\"Xk2g4CNFAnYcvxiSr\",\"7JCLyrrY6JYGpocac\",\"g8FoJejyZNJdL9yNw\",\"yuLxi2qBJvMnwgdgJ\",\"Po3v3dHCk6wYGKMwi\",\"SAdSH6MHWXPitMiCJ\",\"oyB4Wr4EeZnoDaa8B\",\"qfNfcHcD2sEyjgKQD\",\"dKEpqsNT6HHoLfttp\",\"ZtniSFrgec4oj6Pxm\",\"PAzNgJF54C2mYPkR9\",\"5NGxHLcQ8Af2RJ4TN\",\"PTo9qt93YqGvL8fCa\",\"CdXigydGTBLgA577m\",\"dP6Hqxfg3BYQ7xwYz\",\"LreCskdE4MTjTyhAM\",\"Kg6M7abNC8WvtvtG3\",\"QC8hPEzoaGh3BtvGH\",\"h4jFmtbFn92eA4649\",\"Wnom3NDu29r6odkah\",\"ncxv2Z5EvzW2j4NT7\",\"pd8dm7sWLW9cY6dYW\",\"Ehrta9env9HXyrGbW\",\"SxqAEMaYcE9Ps9eh6\",\"a777e8chPvJkY3tKa\",\"ZXRMRAJNP6eseLdbR\",\"8BFSTCnoe2QggN64c\",\"z5ebtimXwFFJdYxoa\",\"5ibYDhiazv3svJHiJ\",\"NRMxPrgBRYMKYF9Li\",\"RBfCFQ5QwCN3kAG8j\",\"faYyw7jGsSeaMeYYd\",\"tuTQhfZC5izTmXEgR\",\"Es4eX2stRpyoXeC7f\",\"2ZFoLTxcCARhwc8xX\",\"vn6nR36mdfY8z2zKx\",\"Ya3eHgs8x3unZRLpb\",\"W5DHrpTxRq7WWcbDt\",\"zNN2fW2pJGpTxBgzx\",\"Fhwnime223hGiaHaA\",\"r7mZLgpQWzRiGddL5\",\"E2hpke7mHxAWsw5t9\",\"bX6tpTCjwoi6XMMbK\",\"aRCwEM8hnYEoHiSiY\",\"NgbpvfNh88yfJvYJD\",\"C9LKGu2g5hSijvDzA\",\"buX4mCQhtXCfBjeno\",\"65dbBZynphj53nXqA\",\"aEm3Wvj2rFYRL8Lrb\",\"FioqXbWFJxdCop35Z\",\"QRv96jmNaYsWkxQEG\",\"tAF9Gf6PiGogbZuWs\",\"ixabGTE2JSw9QLbJS\",\"NchnDcEmsLTeFZ4FH\",\"hR4xXL3zwbr2LRx5C\",\"YXqaqjujocvg2gX4k\",\"NMzYn8ATCpGWdDEPh\",\"Jwoe6heepP8r77Doj\",\"AFfw7cGg83uYk2Miy\",\"CNc6rmwhbxkxEhHAp\",\"BdvdJYwHZr7JpkHsn\",\"pGh7WykiPe26fHJYv\",\"zw7g7T8wE5R5CBhXr\",\"omn98QP6uBd923Azp\",\"g4NCSxxHqHCGMpWwT\",\"dGugwhA6uwwjPGAa5\",\"2ZabBuAKvgS9qTSM7\",\"9dAB9yF2rukm22EnA\",\"ct42f2gGpMXSd9hXM\",\"qWR7eXxBiNee22A5u\",\"Akq3fQcPRgPrWfsye\",\"S5ZJy8yeYqWbeidB8\",\"i49enk79wAajcgi7a\",\"e9Cknxbx6o7Nb6REs\",\"sHnfwDzKzmeApjTv8\",\"f3RAbWvE6uESq7KE5\",\"BjJhatTBaTWm3ZhCt\",\"6J6g5TwWz67cN7Zy6\",\"SYEuojZtP6yLXryHv\",\"kJ9RgqiqhMKd3FkcT\",\"CH53jGETBeJTummf3\",\"5hHf2e9zimbmxMqqF\",\"MT26yxj3YX95DsyLj\",\"vewKwcMeGuk3p3MsN\",\"K7GEquLLxrj4HT8Sd\",\"H46gRHmkdz2CRrGH9\",\"mDWNyaaQ9hvPCRzSd\",\"Qi3ZTiut4tWJPHibz\",\"srJ34BaybkQh3qRkM\",\"Kntd2rSgWYWp8r4sP\",\"RtPhDuwmvWNHiBxmG\",\"k6QB6fzbj4LsWktRL\",\"wJTDDTE3TrmSXKP4d\",\"oDnPTXrzYF4snDPXY\",\"u9cRf5kvtpRB5ffB3\",\"QvEXmSEo3ANp3yPyH\",\"QjGNkRM3Xc78yShJN\",\"8s5Bdrn7RTga7DL6x\",\"ZcJm2kuqJnN3CXFaR\",\"nWND4LmgZTftyB8sN\",\"2P5vWxdr4qQiRxdPN\",\"J7d397iB5GuWRAMfg\",\"GM2X83qnuLXTHe5zA\",\"NGvCPuMiAP3xrRLfB\",\"oDtGiNqDMHmhHE3J8\",\"2QifjAQzAEqqnk86G\",\"2Qk2mFu9HBFzrB24i\",\"sN2JyFeJCwfwwHPwF\",\"49XFttjKo2QhEWT3R\",\"cosoYtzKo6pKgrTJZ\",\"wo4cpen33NYFHNca7\",\"Yp7uvStL97cC9fKkY\",\"9gEWz76H8KmhN4yJj\",\"PH32cNxBjrK4a28sn\",\"hCfruGWxw7v64teEr\",\"RoGGD5cpHb4ftdLDv\",\"QLYBQhf2YBoAxY9pD\",\"nkH3HfJXLMNcBMM79\",\"WnogMFYXoyvmBmGkm\",\"n4Y5EEGCjmrK99yrt\",\"jyoLggHk8xQKZuoQC\",\"xsDyJstYoBZRS8pJH\",\"k8rMJnaejG3dX4ute\",\"c7uBxu2rgY77H5d79\",\"9Pzg45NEiRXhLtLh3\",\"QGjY3hgPYPMmMjc7j\"],\"quality\":[5,5,3,5,4,5,3,4,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"quality\":4.757575757575758,\"family\":[{\"_id\":\"tbRXYy4xXFR6dkTcX\",\"language\":\"cpp\"},{\"_id\":\"bZJLPjJL4BuyeeB6j\",\"language\":\"javascript\"},{\"_id\":\"djLTSAc6h4bt6ehWu\",\"language\":\"python3\"},{\"_id\":\"Qp2rTbvNNGgDd7KsW\",\"language\":\"ruby\"}]}}"]