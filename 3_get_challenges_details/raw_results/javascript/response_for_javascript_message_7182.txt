a["{\"msg\":\"result\",\"id\":\"2330\",\"result\":{\"_id\":\"7oPc7xNv4WaYGFamS\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"function trifidCipher(key, period, message) {\\n\\t\\n}\",\"difficulty\":3.8181818181818183,\"editorId\":\"T6iBEE2jp7f7iEF2P\",\"familyId\":\"CjZBQ8oi9ndMyPESm\",\"instructions\":\"In **Trifid Cipher**, encoding is done by using a table to fractionate each plaintext letter into a trigram, mixes the constituents of the trigrams, and then applies the table in reverse to turn these mixed trigrams into ciphertext letters.\\n\\nCreate a function that takes three arguments; a 27 letter `key`, a break `period`, and a string containing the `message` to be encoded.\\n\\nThere are some variations on the rules of encipherment. One version of the cipher rules are outlined below:\\n\\n```\\nkey = \\\"EPSDUCVWYM+ZLKXNBTFGORIJHAQ\\\"\\nperiod = 5\\nmessage = \\\"DEFENDTHEEASTWALLOFTHECASTLE+\\\"\\n\\ntrifidCipher(key, period, message) ➞ \\\"SUEFECPHSEGYYJIXIMFOFOCEJLBSP\\\"\\n```\\n\\nStep 1 : Devide the key is in the form of three squares:\\n\\n```\\nSquare 1   Square 2   Square 3   \\n\\n  1 2 3      1 2 3      1 2 3    \\n1 E P S    1 M + Z    1 F G O    \\n2 D U C    2 L K X    2 R I J    \\n3 V W Y    3 N B T    3 H A Q  \\n```\\n\\nStep 2 : Locate the plaintext letters in the squares above, D is in square 1, row 2, column 1, so **D** becomes **121**. \\nSimilarly, **E** becomes **111** and so on. \\n\\nWrite down the numbers corresponding to each letter vertically:\\n\\n```\\nD E F E N D T H E E A S T W A L L O F T H E C A S T L E +\\n1 1 3 1 2 1 2 3 1 1 3 1 2 1 3 2 2 3 3 2 3 1 1 3 1 2 2 1 2\\n2 1 1 1 3 2 3 3 1 1 3 1 3 3 3 2 2 1 1 3 3 1 2 3 1 3 2 1 1\\n1 1 1 1 1 1 3 1 1 1 2 3 3 2 2 1 1 3 1 3 1 1 3 2 3 3 1 1 2\\n```\\n\\nStep 3 : At the moment, it is still a substitution cipher and fairly easy to break. Now, you have to use **period**, which is usually a number between 5 - 20.\\n\\n```\\nD E F E N  D T H E E  A S T W A  L L O F T  H E C A S  T L E +\\n1 1 3 1 2  1 2 3 1 1  3 1 2 1 3  2 2 3 3 2  3 1 1 3 1  2 2 1 2\\n2 1 1 1 3  2 3 3 1 1  3 1 3 3 3  2 2 1 1 3  3 1 2 3 1  3 2 1 1 \\n1 1 1 1 1  1 3 1 1 1  2 3 3 2 2  1 1 3 1 3  1 1 3 2 3  3 1 1 2\\n```\\nStep 4 : Group the numbers and read off the numbers in each group horizontally, and do the substitution back to the letters using the original key-squares.\\n\\n```\\n113 122 111 311 111  123 112 331 113 111  312 133 133 323 322\\nS   U   E   F   E    C   P   H   S   E    G   Y   Y   J   I   \\n\\n223 322 211 311 313  311 313 123 111 323   221 232 113 112\\nX   I   M   F   O    F   O   C   E   J     L   B   S   P\\n```\\nStep 5: Return the final result:\\n```\\neMessage = \\\"SUEFECPHSEGYYJIXIMFOFOCEJLBSP\\\"\\n```\\nSee below examples for more understanding:\\n\\n### Examples\\n```\\nkey=\\\"EPSDUCVWYM+ZLKXNBTFGORIJHAQ\\\"\\n\\ntrifidCipher(key, 5, \\\"DEFENDTHEEASTWALLOFTHECASTLE+\\\") ➞ \\\"SUEFECPHSEGYYJIXIMFOFOCEJLBSP\\\"\\n\\ntrifidCipher(key, 15, \\\"MUBASHIR\\\") ➞ \\\"+OHTW+XD\\\"\\n\\ntrifidCipher(key, 6, \\\"ABCDEFG\\\") ➞ \\\"RSAMXEG\\\"\\n```\\n\\n### Notes\\n- The key, data, and output will all contain exclusively valid uppercase letters and a plus sign(+) as the 27th letter. \\n- Keys will always be a complete 27-letter alphabet with no repeats, and periods will always be positive integers.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"let key1=\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZ+\\\"\\nTest.assertEquals(trifidCipher(key1, 8, \\\"MUBASHIR\\\"), \\\"PGEAIUJR\\\")\\nTest.assertEquals(trifidCipher(key1, 9, \\\"AIRFORCE+MUBASHIR\\\"), \\\"BECIOFI+XPGEAIUJR\\\")\\nTest.assertEquals(trifidCipher(key1, 5, \\\"HELLO+WORLD\\\"), \\\"BOJN+ZOOH+D\\\")\\nTest.assertEquals(trifidCipher(key1, 7, \\\"HELLO+AGAIN\\\"), \\\"BOHBTRYAPVH\\\")\\nTest.assertEquals(trifidCipher(key1, 3, \\\"TOP+SECRET\\\"), \\\"WFPYTTDHZT\\\")\\n\\nlet key2=\\\"EPSDUCVWYM+ZLKXNBTFGORIJHAQ\\\"\\nTest.assertEquals(trifidCipher(key2, 15, \\\"MUBASHIR\\\"), \\\"+OHTW+XD\\\")\\nTest.assertEquals(trifidCipher(key2, 9, \\\"MUBASHIRHASSAN\\\"), \\\"+OQCOXUNMFJSJR\\\")\\nTest.assertEquals(trifidCipher(key2, 11, \\\"PAKISTAN\\\"), \\\"WGRIYIXR\\\")\\nTest.assertEquals(trifidCipher(key2, 5, \\\"DEFENDTHEEASTWALLOFTHECASTLE+\\\"), \\\"SUEFECPHSEGYYJIXIMFOFOCEJLBSP\\\")\\nTest.assertEquals(trifidCipher(key2, 6, \\\"ABCDEFG\\\"), \\\"RSAMXEG\\\")\\nTest.assertEquals(trifidCipher(key2, 7, \\\"ABCDEFG\\\"), \\\"RSQLPNP\\\")\",\"language\":\"javascript\",\"quality\":0,\"stats\":{\"completed\":{\"ratings\":[5,5,5,5,5,1,5,1,2,3,5],\"quality\":[],\"rators\":[\"T6iBEE2jp7f7iEF2P\",\"7XD8yqDQXa5n2znYx\",\"yjtdwc2AC4jA2RWtn\",\"vSPc7MGK5Poy8tSFp\",\"vCCpviKdmM3rrq8R2\",\"8BJyXvRWcrvN3nttS\"],\"total\":8},\"flags\":0},\"summary\":\"In Trifid Cipher, encoding is done by using a table to fractionate each plaintext letter into a trigram, mixes the constituents of the trigrams, and then applies the table in reverse to turn these mixed trigrams into ciphertext letters.\\n\\nCreate a function that takes three arguments; a 27 letter key, a break period, and a string containing the message to be enc\",\"tags\":[\"cryptography\",\"logic\",\"strings\",\"algorithms\",\"numbers\"],\"timestamp\":{\"$date\":1608965144162},\"title\":\"Trifid Cipher\",\"family\":[{\"_id\":\"29NHBirovmcSZsjR9\",\"language\":\"cpp\"},{\"_id\":\"7oPc7xNv4WaYGFamS\",\"language\":\"javascript\"},{\"_id\":\"y9m4td5SnnZFwCFdB\",\"language\":\"python3\"},{\"_id\":\"tfr73LepCKnWZ5xeP\",\"language\":\"ruby\"}]}}"]