a["{\"msg\":\"result\",\"id\":\"2118\",\"result\":{\"_id\":\"XYDCXdCn6bqaT6SJm\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"function strongPassword(password) {\\n\\t\\n}\",\"difficulty\":2.9473684210526314,\"familyId\":\"kvea7rdsbPjtjrqTF\",\"instructions\":\"Create a function that determines the minimum number of characters needed to make a strong password.\\n\\nA password is considered _strong_ if it satisfies the following criteria:\\n\\n- Its length is at least 6.\\n- It contains at least one digit.\\n- It contains at least one lowercase English character.\\n- It contains at least one uppercase English character.\\n- It contains at least one special character: `!@#$%^&*()-+`\\n\\nTypes of characters in a form you can paste into your solution:\\n\\n```\\nconst numbers = \\\"0123456789\\\"\\nconst lower = \\\"abcdefghijklmnopqrstuvwxyz\\\"\\nconst upper = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\\\"\\nconst special = \\\"!@#$%^&*()-+\\\"\\n```\\n\\n### Examples\\n```\\nstrongPassword(“Ed1”) ➞ 3\\n\\nstrongPassword(“#Edabit”) ➞ 1\\n\\nstrongPassword(\\\"W1llth!spass?\\\") ➞ 0\\n```\\n\\n### Notes\\nTry solving this without RegEx.\",\"lab\":\"Test.assertEquals(strongPassword(\\\"#Edabit\\\"), 1)\\nTest.assertEquals(strongPassword(\\\"Cr3ateAStr0ng1\\\"), 1)\\nTest.assertEquals(strongPassword(\\\"CreateAStrongOne\\\"), 2)\\nTest.assertEquals(strongPassword(\\\"willthispass\\\"), 3)\\nTest.assertEquals(strongPassword(\\\"w1llth!spass?\\\"), 1)\\nTest.assertEquals(strongPassword(\\\"W1llth!spass?\\\"), 0)\\nTest.assertEquals(strongPassword(\\\"1sth!\\\"), 1)\\nTest.assertEquals(strongPassword(\\\"sth!\\\"), 2)\\nTest.assertEquals(strongPassword(\\\"bd\\\"), 4)\\nTest.assertEquals(strongPassword(\\\"d\\\"), 5)\\nTest.assertEquals(strongPassword(\\\"[?\\\"), 4)\",\"language\":\"javascript\",\"summary\":\"Create a function that determines the minimum number of characters needed to make a strong password.\\n\\nA password is considered strong if it satisfies the following criteria:\\n\\nIts length is at least 6.\\nIt contains at least one digit.\\nIt contains at least one lowercase English character.\\nIt contains at least one uppercase English character.\\nIt contains at least\",\"tags\":[\"validation\",\"strings\"],\"timestamp\":{\"$date\":1570879848074},\"title\":\"Strong Password\",\"stats\":{\"completed\":{\"total\":39,\"ratings\":[5,5,5,5,5,2,2,3,1,2,0,3,5,5,1,3,0,1,2,3,3,2,3,3,3,3,4,4,4,2,4,2,2,3,2,4,3,3],\"rators\":[\"yjtdwc2AC4jA2RWtn\",\"65dbBZynphj53nXqA\",\"5Zq3aGdvh4LHBvnJL\",\"id6jhbmGLXJ6n96MP\",\"7Nz3GAqN3SMgSiyTT\",\"BBP9BE5mKHRzaRpJr\",\"mHT2bJb5SByfJ8yKS\",\"bzm5WayBjwad5jhdR\",\"gwMfQ48FLgLgC276P\",\"w3bahQJn9xsYG78JY\",\"GQxiAt4SJTG8wCdo7\",\"3xTP5LHEMpQWB4knW\",\"iGCyzBZ9rxC5cdWME\",\"cRpaCxYRmGcN3Nsoj\",\"YGxdtMwcxMvB5kL2C\",\"wo4cpen33NYFHNca7\",\"dPM2Rk2iMkznyXNEt\",\"Y9Nz9yafaibz54W4o\",\"JGBCMpnbbi5ztuFoX\",\"a777e8chPvJkY3tKa\",\"p2woPCQKXuWJCwffJ\",\"3pdgguqZgNDSAJSGm\",\"8raviPK67KKxzQWcF\",\"M4vq8ATaS9Jg5X7iP\",\"kZCzJJeomrwZAbZLZ\",\"SWbaoFPBAeu6g376j\",\"mCQrzp9uoc2kfC4Wq\",\"iJC8PmpzSyTnEDqw5\",\"gt72ofBStqvphGX6j\",\"aEm3Wvj2rFYRL8Lrb\",\"Nb6LYPoQP6KJZt8mz\",\"pGh7WykiPe26fHJYv\",\"mDWNyaaQ9hvPCRzSd\",\"oDtGiNqDMHmhHE3J8\",\"8BJyXvRWcrvN3nttS\"],\"quality\":[5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":5,\"family\":[{\"_id\":\"cMMYEBAx2kMSDvX86\",\"language\":\"cpp\"},{\"_id\":\"hj5YbZ7u7cAWzEvCB\",\"language\":\"java\"},{\"_id\":\"XYDCXdCn6bqaT6SJm\",\"language\":\"javascript\"},{\"_id\":\"QNvtMEBzxz5DvyXTe\",\"language\":\"python3\"},{\"_id\":\"4aJbEcjF8FFn4Gu2a\",\"language\":\"ruby\"}]}}"]