a["{\"msg\":\"result\",\"id\":\"2083\",\"result\":{\"_id\":\"ygedmjLgJ9RmzQnjd\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"function engToNums(s) {\\n\\t\\n}\",\"difficulty\":2.9166666666666665,\"familyId\":\"mANbAR9byA8Ga5M88\",\"instructions\":\"This is a companion to yanni's [previous challenge](https://edabit.com/challenge/PFH9yEZXSbAngQm7T).\\n\\nGiven an English description of an integer in the range **0 to 999**, devise a function that returns the integer in numeric form.\\n\\n### Examples\\n```\\nengToNums(\\\"four\\\") ➞  4\\n\\nengToNums(\\\"forty\\\") ➞ 40\\n\\nengToNums(\\\"six hundred\\\") ➞ 600\\n\\nengToNums(\\\"one hundred fifteen\\\") ➞ 115\\n\\nengToNums(\\\"seven hundred sixty seven\\\") ➞ 767\\n```\\n\\n### Notes\\n- No hyphens are used in test cases (\\\"twenty three\\\" not \\\"twenty-three\\\").\\n- The word \\\"and\\\" is not used: \\\"one hundred three\\\" not \\\"one hundred and three\\\".\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertEquals(engToNums(\\\"one\\\"), 1)\\nTest.assertEquals(engToNums(\\\"ninety\\\"), 90)\\nTest.assertEquals(engToNums(\\\"one hundred ten\\\"), 110)\\nTest.assertEquals(engToNums(\\\"sixty two\\\"), 62)\\nTest.assertEquals(engToNums(\\\"four hundred thirty\\\"), 430)\\nTest.assertEquals(engToNums(\\\"zero\\\"), 0)\\nTest.assertEquals(engToNums(\\\"four hundred fifty six\\\"), 456)\\nTest.assertEquals(engToNums(\\\"six hundred nine\\\"), 609)\\nTest.assertEquals(engToNums(\\\"seven hundred\\\"), 700)\\nTest.assertEquals(engToNums(\\\"thirty seven\\\"), 37)\\nTest.assertEquals(engToNums(\\\"nine hundred ninety nine\\\"), 999)\\nTest.assertEquals(engToNums(\\\"three hundred twelve\\\"), 312)\\nTest.assertEquals(engToNums(\\\"eighteen\\\"), 18)\\nTest.assertEquals(engToNums(\\\"five hundred eleven\\\"), 511)\",\"language\":\"javascript\",\"quality\":0,\"summary\":\"This is a companion to yanni's previous challenge.\\n\\nGiven an English description of an integer in the range 0 to 999, devise a function that returns the integer in numeric form.\\n\\nExamples\\nengToNums(\\\"four\\\") ➞  4\\n\\nengToNums(\\\"forty\\\") ➞ 40\\n\\nengToNums(\\\"six hundred\\\") ➞ 600\\n\\nengToNums(\\\"one hundred fifteen\\\") ➞ 115\\n\\nengToNums(\\\"seven hundred sixty seven\\\") ➞ 767\\n\\nNotes\\nN\",\"tags\":[\"conditions\",\"numbers\",\"strings\"],\"timestamp\":{\"$date\":1606220449183},\"title\":\"English to Numbers\",\"stats\":{\"completed\":{\"total\":9,\"ratings\":[3,3,3,3,3,0,3,2,4,4,3,4],\"quality\":[],\"rators\":[\"yjtdwc2AC4jA2RWtn\",\"Akq3fQcPRgPrWfsye\",\"CNc6rmwhbxkxEhHAp\",\"mDWNyaaQ9hvPCRzSd\",\"buX4mCQhtXCfBjeno\",\"DPi9QGLctq2y76KuE\",\"oDtGiNqDMHmhHE3J8\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"BJGBgJLLdcTnfyDm5\",\"language\":\"cpp\"},{\"_id\":\"ygedmjLgJ9RmzQnjd\",\"language\":\"javascript\"},{\"_id\":\"9cuQrhEMwiESfKznk\",\"language\":\"python3\"},{\"_id\":\"DvKvQx5rpAGoJchH5\",\"language\":\"ruby\"}]}}"]