a["{\"msg\":\"result\",\"id\":\"2316\",\"result\":{\"_id\":\"Pb6JrAEsFbizx7Ssz\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"function compress(chars) {\\n\\t\\n}\\n\\t\",\"difficulty\":3.736842105263158,\"familyId\":\"KTeMez2rh4JyoLgBj\",\"instructions\":\"The function is given an array of characters. Compress the array into a string using the following rules. For each group of consecutively repeating characters:\\n- If the number of repeating characters is one, append the string with only this character.\\n- If the number `n` of repeating characters `x` is greater than one, append the string with `\\\"x\\\" + n`.\\n\\n### Examples\\n```\\ncompress([\\\"t\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"s\\\", \\\"s\\\", \\\"s\\\", \\\"h\\\"]) ➞ \\\"te14s3h\\\"\\n\\ncompress([\\\"a\\\", \\\"a\\\", \\\"b\\\", \\\"b\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\"]) ➞ \\\"a2b2c3\\\"\\n\\ncompress([\\\"a\\\"]) ➞ \\\"a\\\"\\n\\ncompress([\\\"a\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\"]) ➞ \\\"ab12\\\"\\n\\ncompress([\\\"a\\\", \\\"a\\\", \\\"a\\\", \\\"b\\\", \\\"b\\\", \\\"a\\\", \\\"a\\\"]) ➞ \\\"a3b2a2\\\"\\n```\\n\\n### Notes\\n - A **recursive** version of this challenge can be found via this [link](https://edabit.com/challenge/hNCyj6c5B6FmG3KGE)\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"let [actualParam, expectedParam] = [\\n  [\\n    [\\\"a\\\", \\\"a\\\", \\\"b\\\", \\\"b\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\"], [\\\"a\\\"], [\\\"a\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\"], \\n    [\\\"a\\\", \\\"a\\\", \\\"a\\\", \\\"b\\\", \\\"b\\\", \\\"a\\\", \\\"a\\\"], [\\\"t\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"s\\\", \\\"s\\\", \\\"s\\\", \\\"h\\\"]\\n  ],\\n  [\\\"a2b2c3\\\", \\\"a\\\", \\\"ab12\\\", \\\"a3b2a2\\\", \\\"te14s3h\\\"]\\n]\\nfor (let i in actualParam) Test.assertEquals(compress(actualParam[i]), expectedParam[i])\\nfor (let i = 0; i < 20; i++) {\\n  let [actual, expected] = [Array(), Array()]\\n  for (let k = 0; k < Math.random() * 200 + 1; k++) {\\n    let [c, n] = [String.fromCharCode(97 + k % 26), Math.round(Math.random() * 200 + 1)]\\n    actual = [...actual, c.repeat(n)]\\n    expected = [...expected, n > 1 ? c + n : c]\\n  }\\n  Test.assertEquals(compress(actual), expected.join(''))\\n}\",\"language\":\"javascript\",\"quality\":0,\"summary\":\"The function is given an array of characters. Compress the array into a string using the following rules. For each group of consecutively repeating characters:\\nIf the number of repeating characters is one, append the string with only this character.\\nIf the number n of repeating characters x is greater than one, append the string with \\\"x\\\" + n.\\n\\nExamples\\ncompres\",\"tags\":[\"arrays\",\"control_flow\",\"language_fundamentals\",\"strings\"],\"timestamp\":{\"$date\":1610190142356},\"title\":\"String Compression from Character Array\",\"stats\":{\"completed\":{\"total\":17,\"ratings\":[5,5,5,5,5,4,3,5,5,0,3,4,2,5,4,1,4,2,4],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"QRv96jmNaYsWkxQEG\",\"buX4mCQhtXCfBjeno\",\"hcm8sL8mNJTSfTdgE\",\"yjtdwc2AC4jA2RWtn\",\"DPi9QGLctq2y76KuE\",\"PH32cNxBjrK4a28sn\",\"Yp7uvStL97cC9fKkY\",\"tAF9Gf6PiGogbZuWs\",\"8BJyXvRWcrvN3nttS\",\"pi76g3eRpnKrhee2a\",\"z6rWbk4FWtqs7qHvm\",\"DM93pPFbWXYMtBeMZ\",\"p6qLK4qS2dnFzDA7k\"]},\"flags\":0},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"CsTELuWcqFAQYhwpY\",\"language\":\"java\"},{\"_id\":\"Pb6JrAEsFbizx7Ssz\",\"language\":\"javascript\"},{\"_id\":\"gEJwv2KgysoG9vaDh\",\"language\":\"php\"},{\"_id\":\"6RHxTTndfASnPyp8Z\",\"language\":\"python3\"},{\"_id\":\"QXPeCxsrNfxSuCxcc\",\"language\":\"ruby\"}]}}"]