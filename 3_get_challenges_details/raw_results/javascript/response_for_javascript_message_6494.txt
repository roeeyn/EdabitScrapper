a["{\"msg\":\"result\",\"id\":\"1992\",\"result\":{\"_id\":\"D4KLn64XNGdrxR63Z\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"function canForm(arr) {\\n\\t\\n}\",\"difficulty\":2.806451612903226,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"NeafCndpczsex8oor\",\"instructions\":\"Write a function that returns `true` if all the strings in an array can be formed by using only the characters from the longest string.\\n\\n### Examples\\n```\\ncanForm([\\\"mast\\\", \\\"manifest\\\", \\\"met\\\", \\\"fan\\\"]) ➞ true\\n\\ncanForm([\\\"may\\\", \\\"master\\\", \\\"same\\\", \\\"reams\\\"]) ➞ false\\n\\ncanForm([\\\"may\\\", \\\"same\\\", \\\"reams\\\", \\\"mastery\\\"]) ➞ true\\n```\\n\\n### Notes\\nThere will only be one unique longest string.\",\"lab\":\"Test.assertEquals(canForm([\\\"mast\\\", \\\"manifest\\\", \\\"met\\\", \\\"fan\\\"]), true)\\nTest.assertEquals(canForm([\\\"may\\\", \\\"master\\\", \\\"same\\\", \\\"reams\\\"]), false)\\nTest.assertEquals(canForm([\\\"may\\\", \\\"same\\\", \\\"reams\\\", \\\"mastery\\\"]), true)\\nTest.assertEquals(canForm([\\\"kerfuffle\\\", \\\"fluke\\\", \\\"fluff\\\", \\\"ruffle\\\", ]), true)\\nTest.assertEquals(canForm([\\\"monument\\\", \\\"momento\\\", \\\"moment\\\", \\\"tome\\\"]), false)\\nTest.assertEquals(canForm([\\\"shape\\\", \\\"shapers\\\", \\\"raps\\\", \\\"saps\\\"]), true)\",\"language\":\"javascript\",\"summary\":\"Write a function that returns true if all the strings in an array can be formed by using only the characters from the longest string.\\n\\nExamples\\ncanForm([\\\"mast\\\", \\\"manifest\\\", \\\"met\\\", \\\"fan\\\"]) ➞ true\\n\\ncanForm([\\\"may\\\", \\\"master\\\", \\\"same\\\", \\\"reams\\\"]) ➞ false\\n\\ncanForm([\\\"may\\\", \\\"same\\\", \\\"reams\\\", \\\"mastery\\\"]) ➞ true\\n\\nNotes\\nThere will only be one unique longest string.\",\"tags\":[\"strings\",\"validation\"],\"timestamp\":{\"$date\":1555276226282},\"title\":\"Letters Formed from the Longest Word\",\"stats\":{\"completed\":{\"total\":56,\"ratings\":[2,2,2,2,2,2,2,2,2,2,2,1,3,2,3,2,3,3,3,3,4,2,3,3,3,3,3,4,4,4,0,3,4,4,4,3,4,5,4,4,4,2,2,3,4,2,4,2,3,2,4,3,4,1,3,3,0,2,3,3,4,3],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"65dbBZynphj53nXqA\",\"SDtZFL5NzAoCPofXk\",\"2NJuDfSqdrF8kHHni\",\"Nu5Qkt74dbKak22wj\",\"8xuMMGF7fyQWL2fKH\",\"SgE5Dnm3f8eSBdDCg\",\"EjPLq3QSJdGQFJdgW\",\"GCxj7RJCeWYNxj8oQ\",\"Hz8mnq7xFJZKLymTh\",\"n5wubRfh6zh8QRymN\",\"eomLS3wh6tQPN8jtH\",\"yjtdwc2AC4jA2RWtn\",\"EWn8w8P3nNh7knatY\",\"5Zq3aGdvh4LHBvnJL\",\"AasGs8AeX9Lcb9xJn\",\"4ZbBZvFxLkoKudpu3\",\"o9Bj4dXiHwtDMTcLc\",\"TwkhhgvBsmD7Csyb3\",\"Ckc74dZkKss9B2FX4\",\"3QmTLSKrXrH4B5DMF\",\"ydEdzuCCZt4yny9Rq\",\"FJsvM5yqKuK9yMk9P\",\"bwgbiAD79Tpqjod9P\",\"gGnDsJz5hr2t9MKCF\",\"eQdnBfe8riy82SNrK\",\"h4jFmtbFn92eA4649\",\"XKi8iZXBCHCaebSHh\",\"ARFcrXjGbjBKcJyEA\",\"TYZm2SmEHhipiJ8BS\",\"LLEEXou4uTN8WCsSo\",\"vewKwcMeGuk3p3MsN\",\"cRpaCxYRmGcN3Nsoj\",\"dPM2Rk2iMkznyXNEt\",\"mF4TfPQQMzbuN7XLg\",\"Es4eX2stRpyoXeC7f\",\"sBcsrC5paZm9nxjot\",\"gt72ofBStqvphGX6j\",\"aEm3Wvj2rFYRL8Lrb\",\"8raviPK67KKxzQWcF\",\"pd8dm7sWLW9cY6dYW\",\"PytNZK9mNiRiZxPrm\",\"zNN2fW2pJGpTxBgzx\",\"buX4mCQhtXCfBjeno\",\"bXaGdBM8FBLHf7N6Y\",\"pGh7WykiPe26fHJYv\",\"M4vq8ATaS9Jg5X7iP\",\"c7uBxu2rgY77H5d79\",\"DPi9QGLctq2y76KuE\",\"QvEXmSEo3ANp3yPyH\",\"WnogMFYXoyvmBmGkm\",\"P8bXFR4cHwFia9rNM\",\"oDtGiNqDMHmhHE3J8\",\"8BJyXvRWcrvN3nttS\",\"RE4Mm9T6Q9uygAxGS\"],\"quality\":[5,4]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"isHidden\":false,\"quality\":4.5,\"family\":[{\"_id\":\"D4KLn64XNGdrxR63Z\",\"language\":\"javascript\"},{\"_id\":\"zeHgBRuYyxp9TFry4\",\"language\":\"python3\"},{\"_id\":\"YJ4DTssuGpdEQhpYc\",\"language\":\"ruby\"}]}}"]