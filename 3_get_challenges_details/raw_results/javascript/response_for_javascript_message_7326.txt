a["{\"msg\":\"result\",\"id\":\"2403\",\"result\":{\"_id\":\"sQ6KnsgJjiniZ32yd\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"function blockPushing(arr, n) {\\n\\t\\n}\",\"difficulty\":4.428571428571429,\"familyId\":\"HhZCdCYpaEPQFGxqq\",\"instructions\":\"Create a function which returns the state of a board after `n` moves. There are different types of blocks on the board, which are represented as strings.\\n\\n* `>` is a pusher which moves right every turn, and pushes a block to the right if it occupies the same space as it.\\n* `'#'` is a block which can be pushed by the pusher. If a block is pushed onto another block, then the other block also joins the push chain!\\n* `'-'` is an empty space, which a block can be pushed into.\\n\\nNote that the pusher can push any number of blocks at a time, but is always stopped if the push chain hits the end of the list.\\n\\n### Examples\\n```\\nblockPushing(['-', '>', '#', '-', '#', '-', '-', '-'], 1) ➞ ['-', '-', '>', '#', '#', '-', '-', '-']\\n\\nblockPushing(['>', '#', '-', '#', '-', '-', '#'], 10) ➞ ['-', '-', '-', '>', '#', '#', '#']\\n\\nblockPushing(['>', '-', '>', '#', '-', '-', '#', '-'], 2) ➞ ['-', '-', '>', '-', '>', '#', '#', '-']\\n\\nblockPushing(['>', '>', '>', '-'], 3) ➞ ['-', '>', '>', '>']\\n```\\n\\n### Notes\\n* There may be more than one pusher at a time on the board.\\n* Pushers are solid blocks, so a push chain of pushers should also stop when hitting the end of the list.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertSimilar(blockPushing(['-', '>', '#', '-', '#', '-', '-', '-'], 1), ['-', '-', '>', '#', '#', '-', '-', '-'])\\nTest.assertSimilar(blockPushing(['>', '#', '-', '#', '-', '-', '#'], 10), ['-', '-', '-', '>', '#', '#', '#'])\\nTest.assertSimilar(blockPushing(['>', '-', '>', '#', '-', '-', '#', '-'], 2), ['-', '-', '>', '-', '>', '#', '#', '-'])\\nTest.assertSimilar(blockPushing(['>', '>', '>'], 3), ['>', '>', '>'])\\nTest.assertSimilar(blockPushing(['>'], 4), ['>'])\\nTest.assertSimilar(blockPushing(['-'], 2), ['-'])\\nTest.assertSimilar(blockPushing(['#'], 10), ['#'])\\nTest.assertSimilar(blockPushing(['#', '-', '#', '#'], 53), ['#', '-', '#', '#'])\\nTest.assertSimilar(blockPushing(['#', '-', '-', '>', '-', '-'], 3), ['#', '-', '-', '-', '-', '>'])\\nTest.assertSimilar(blockPushing(['#', '>', '#', '-', '-', '>', '>', '-', '#', '-', '-'], 2), ['#', '-', '-', '>', '#', '-', '-', '>', '>', '#', '-'])\\n//Joshua Señoron\",\"language\":\"javascript\",\"quality\":0,\"summary\":\"Create a function which returns the state of a board after n moves. There are different types of blocks on the board, which are represented as strings.\\n\\n> is a pusher which moves right every turn, and pushes a block to the right if it occupies the same space as it.\\n'#' is a block which can be pushed by the pusher. If a block is pushed onto another block, then\",\"tags\":[\"arrays\",\"games\",\"loops\"],\"timestamp\":{\"$date\":1614141176098},\"title\":\"Block Pusher\",\"stats\":{\"completed\":{\"total\":4,\"ratings\":[5,5,5,5,5,5,1],\"quality\":[],\"rators\":[\"mDWNyaaQ9hvPCRzSd\",\"yjtdwc2AC4jA2RWtn\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"7sHgDZJZCAg4tvCJa\",\"language\":\"cpp\"},{\"_id\":\"sQ6KnsgJjiniZ32yd\",\"language\":\"javascript\"},{\"_id\":\"25c8MJwZCoA65brmA\",\"language\":\"python3\"},{\"_id\":\"TXY4qxwYkHXHNzFk5\",\"language\":\"ruby\"}]}}"]