a["{\"msg\":\"result\",\"id\":\"1343\",\"result\":{\"_id\":\"S5nPFF44x7JceXPBn\",\"archived\":false,\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"function isValidIP(str) {\\n\\t\\n}\",\"difficulty\":2.1222707423580784,\"familyId\":\"eikCf83tZGeiGjok5\",\"instructions\":\"Create a function that takes a string (IPv4 address in standard dot-decimal format) and returns `true` if the IP is valid or `false` if it's not. For information on IPv4 formatting, please refer to the resources in the **Resources** tab.\\n\\n### Examples\\n```\\nisValidIP(\\\"1.2.3.4\\\") ➞ true\\n\\nisValidIP(\\\"1.2.3\\\") ➞ false\\n\\nisValidIP(\\\"1.2.3.4.5\\\") ➞ false\\n\\nisValidIP(\\\"123.45.67.89\\\") ➞ true\\n\\nisValidIP(\\\"123.456.78.90\\\") ➞ false\\n\\nisValidIP(\\\"123.045.067.089\\\") ➞ false\\n```\\n\\n### Notes\\n- IPv6 addresses are not valid.\\n- Leading zeros are not valid (`\\\"123.045.067.089\\\"` should return `false`).\\n- You can expect a single string for every test case.\\n- Numbers may only be between 1 and 255.\\n- The last digit may not be zero, but any other might.\",\"lab\":\"Test.assertEquals(isValidIP(\\\"12.255.56.1\\\"), true, \\\"This is a valid IPv4\\\");\\nTest.assertEquals(isValidIP(\\\"1.2.3.4\\\"), true, \\\"This is a valid IPv4\\\");\\nTest.assertEquals(isValidIP(\\\"1.2.3\\\"), false, \\\"IPv4 contain exactly four octets.\\\");\\nTest.assertEquals(isValidIP(\\\"1.2.3.4.5\\\"), false, \\\"IPv4 contain exactly four octets.\\\");\\nTest.assertEquals(isValidIP(\\\"123.45.67.89\\\"), true, \\\"This is a valid IPv4\\\");\\nTest.assertEquals(isValidIP(\\\"123.456.78.90\\\"), false, \\\"Each octet must be a decimal value between 0 and 255.\\\");\\nTest.assertEquals(isValidIP(\\\"123.045.067.089\\\"), false, \\\"Each octet must be a decimal value between 0 and 255.\\\");\\nTest.assertEquals(isValidIP(\\\"\\\"), false, \\\"An empty string is invalid.\\\");\\nTest.assertEquals(isValidIP(\\\"abc.def.ghi.jkl\\\"), false, \\\"This is not in dot decimal format.\\\");\\nTest.assertEquals(isValidIP(\\\"123.456.789.0\\\"), false, \\\"Each octet must be a decimal value between 0 and 255.\\\");\\nTest.assertEquals(isValidIP(\\\"12.34.56\\\"), false, \\\"IPv4 contain exactly four octets.\\\");\\nTest.assertEquals(isValidIP(\\\"12.34.56 .1\\\"), false, \\\"Check for spaces.\\\");\\nTest.assertEquals(isValidIP(\\\"12.34.56.-1\\\"), false, \\\"Check for invalid characters.\\\");\\nTest.assertEquals(isValidIP(\\\"123.045.067.089\\\"), false, \\\"Each octet must be a decimal value between 0 and 255.\\\");\\nTest.assertEquals(isValidIP(\\\"192.168.1.1\\\"), true, \\\"This is a valid IPv4\\\");\\nTest.assertEquals(isValidIP(\\\"192.168.1.1  \\\"), false, \\\"IPs with trailing spaces are invalid.\\\");\\nTest.assertEquals(isValidIP(\\\"  192.168.1.1\\\"), false, \\\"IPs with leading spaces are invalid.\\\");\\nTest.assertEquals(isValidIP(\\\"0.232.47.227\\\"), true, \\\"This is a valid IPv4\\\");\\nTest.assertEquals(isValidIP(\\\"1e0.1e0.1e0.1e0\\\"), false, \\\"Each octet must be a decimal value between 0 and 255.\\\");\",\"language\":\"javascript\",\"summary\":\"Create a function that takes a string (IPv4 address in standard dot-decimal format) and returns true if the IP is valid or false if it's not. For information on IPv4 formatting, please refer to the resources in the Resources tab.\\n\\nExamples\\nisValidIP(\\\"1.2.3.4\\\") ➞ true\\n\\nisValidIP(\\\"1.2.3\\\") ➞ false\\n\\nisValidIP(\\\"1.2.3.4.5\\\") ➞ false\\n\\nisValidIP(\\\"123.45.67.89\\\") ➞ true\",\"tags\":[\"validation\",\"algorithms\",\"regex\",\"strings\"],\"timestamp\":{\"$date\":1495251574851},\"title\":\"IPv4 Validation\",\"stats\":{\"completed\":{\"total\":241,\"ratings\":[2,2,2,2,2,1,1,1,1,2,1,2,2,1,3,2,3,2,1,2,1,1,2,3,2,1,2,2,2,2,0,1,1,1,0,2,1,2,1,2,2,1,2,2,2,3,2,3,0,2,2,2,1,2,2,2,1,2,2,2,3,2,1,1,3,2,2,1,1,2,2,2,3,2,2,2,2,3,2,2,2,2,2,2,3,3,3,0,2,3,3,3,1,3,2,2,1,2,2,3,2,2,2,3,2,4,3,4,2,3,0,3,1,3,3,2,4,3,3,4,3,3,2,1,3,3,0,2,2,3,2,3,3,0,2,3,2,2,2,2,2,3,2,2,3,3,3,3,3,2,3,3,2,2,0,2,1,0,3,2,3,3,3,1,3,2,3,0,2,2,2,3,3,2,1,3,2,2,2,4,2,2,2,2,2,2,3,0,2,3,2,2,3,3,3,1,3,3,3,0,3,3,3,3,2,3,3,0,2,3,3,3,4,2,3,1,2,1,3,3,2,3,3,3,3,3,1,1,3],\"rators\":[\"BkPgkDQGHm66X4Qai\",\"65dbBZynphj53nXqA\",\"hi7Hvtq2mJfkXEGF2\",\"Qag2Zd53ozufb4KRK\",\"LDc8cMrTShPkzyEXd\",\"7cH59Lm7odtfQ23gv\",\"dAe4nADmGE2yjASLr\",\"oDh6zcQhv7iuLxYj3\",\"JzcuZQNK6GD4B4pwB\",\"TwtgrBTHiCnkP584n\",\"W3s5joDdNgqFB3cMo\",\"sQTaZGCCsE7BNQzyG\",\"C8HNEStupvpdKTkH8\",\"2Qff5QnahxxwNmr99\",\"RW2wFPbMQniZWPmw4\",\"XHngE5iScvztMpnR2\",\"AgQburWndXwEhgomM\",\"XYtjfdJwA5RWs5G2D\",\"3yYC3kjZ6PGuLAKKj\",\"aFRJuqwnonjERJLv5\",\"9XyvvpCM98oGfa8Yq\",\"KDdxq4jfx6H5bwyPq\",\"EmFLYeEemJLb5xtZq\",\"wRRvJjGKbpX2gvoJg\",\"wQitjzGMLiAx99Ai6\",\"MCo3TNupzAeaYLRHW\",\"sKbdieEA6MicSnqem\",\"vfyxvy8r2knT8ijxB\",\"Hz8mnq7xFJZKLymTh\",\"3YRAthvRqQ2rWZYW7\",\"AHuPZEaTZJE2gwhWY\",\"dR6ussAnMb5WYYHcr\",\"c5FoJ26xo6Jer46Cv\",\"7pPPRpL8FhEJat8KF\",\"AhC88RpTjJ8kETcWh\",\"GiWEB8bDSqRWrKouW\",\"NbsMkYuSFa8LsnZtT\",\"thEsZ7N6X8qfZMbcv\",\"hr9rERhkPtGbbgqdT\",\"Y8zD7oXK6jJSr4Gnu\",\"uY6BzLR6Fph8KPwMW\",\"tuyDaJzFy78jxvhCY\",\"KyTQmJfxxdrWS9Dpz\",\"8CdxcXWm7J6GDiWD2\",\"RNKWjAHrXt9AiMc3g\",\"ggj8NF9hiYrJfLqGn\",\"cuQSsGutnSkLjJpNJ\",\"MmpisT9nmzPJDQuRC\",\"enuhRD8zZn4QDNTc4\",\"HQuhas4KXrETxYk9o\",\"g5noFWaoRtZNcEEAW\",\"6ir9H6TvDxyGL4kvG\",\"SjY6a2v6jMjGraDKz\",\"m6KK2hYS6fj8EasEe\",\"hy63rX7K3hEfyp8B4\",\"SDtZFL5NzAoCPofXk\",\"XcHCqYmeoqxDsoucx\",\"ak5aPiT6QWpmbnPzD\",\"G7bdEb5gSLLR59Fvn\",\"Jh6sPsgj8yHy95joL\",\"Gsy7tjKKv62tbhLAr\",\"i5bG6SKQwELTkrdkD\",\"bbbpNxM3hgGMCqMn8\",\"ZTYXPkgL9E4vXWKev\",\"d2PuPtTWQac8SexuC\",\"zgoq9MhrL2h75DAMA\",\"J67hC7LSEYS5JwhPj\",\"mNMQvcxKSSvqqMYCH\",\"Nd7Bnx9zF57gn3vLp\",\"WcJLHTiGQ3PjEQaGh\",\"oFckF5bB5dGBQKneS\",\"wcjknenWdPRhrRScv\",\"EjPLq3QSJdGQFJdgW\",\"KPDPaGaJ4jGtRusF2\",\"K8retouBZnftajjFi\",\"uhP3Z8KkPxySxn2n7\",\"S7R7voZRxnWjCn8pi\",\"EWn8w8P3nNh7knatY\",\"n5wubRfh6zh8QRymN\",\"cTasoJQG2iA6FvuK4\",\"fmLzKJTPWvtGRAaAN\",\"eomLS3wh6tQPN8jtH\",\"5itTt9b8C3dP6iPYL\",\"AQXXAotS3rzqQWQju\",\"M3z4ZPgywPqX9eoS4\",\"vKch2w3b4keMd84jj\",\"54Ka62KytXRsrLPhZ\",\"8xuMMGF7fyQWL2fKH\",\"eD3AXdL4FnGtfMjEM\",\"CwBBXa8awfz8ePtwe\",\"av9jN3SbNRM7Xe2qw\",\"4fWjvhaWSB89EtbEZ\",\"AF9SHN7C6DTsF5D2c\",\"3G8K9xWwXK5PeKDor\",\"JJYTwKJ5G47eH2nWZ\",\"HhLGvPRCyHeforjRk\",\"QfetYm4rg8hY5q2fp\",\"PL8ekDapv6DP8tvar\",\"y6WnxpwryenyfWHST\",\"ssRWEAjvdtfxkvH4S\",\"5zAstL4cjD3iBzkxA\",\"hKopMLjT4jpPWhMxS\",\"bjn5DTzzaWCP5BDgX\",\"6LpB6HcF7nGQeLogA\",\"DCKKWQr7BBXZ5RdK2\",\"qBaLGrm952ii9K23M\",\"fJxTxm9e5XHcfNSmr\",\"FiK2ruyH8KeHLAgoA\",\"oyhN9BvY8vKQ7MhN7\",\"FJsvM5yqKuK9yMk9P\",\"ehcK7TA5ve8yY8ijp\",\"jZSKG6ChPwRAMKnQT\",\"bNFi9NhvF22bsNJx3\",\"5xR7BatsJ4HNBt49E\",\"AJFQanaKnhsudmLkm\",\"KAwnrRNbgiZ2uAr8v\",\"LXMAqmBgTZzxTfL8L\",\"Ryz7CPhtoypRiGmP5\",\"CJnuSjyCBMTbTiibD\",\"rSJGLYSXMuu3RWjun\",\"EAuL56kpyLytw4RcR\",\"A4mmt7tHtf2TSHRBX\",\"jECsJQHhBEDpMWYJc\",\"XKi8iZXBCHCaebSHh\",\"yHv52XEyYQ9ZuAZcq\",\"iERYTAAJo3rBJ8Rok\",\"i2PEobbjQJv59z6HS\",\"SF5NBvK7GY5Y7wpN9\",\"pq832LSNzNzXWTBey\",\"m22dQPP3yKRpZq9hc\",\"BCAern4EKkoTuR9nb\",\"byrKwHgawbFgyAcgo\",\"Q9KQomTTPBsrkAL6c\",\"icki6Q3zoj4mXkgFj\",\"y9Y4rEvxma4JjxWTD\",\"Jwoe6heepP8r77Doj\",\"24ukaQfhyc8ERqnyK\",\"Xo8T9TLvZhMjLhJBN\",\"wTN95bZvXHLD8XXx6\",\"nArWysFb9Jgma7js7\",\"MAYWFNKxwJCTFrbB2\",\"hTGFW3DLQFKsGcLqF\",\"JAe93nc5vNewSckSB\",\"XSowcGMedgyp37Hts\",\"6r4ZvThWsHsyfzK3e\",\"etTJkfzBMjXkCi4LD\",\"h8oHrjSdw2iwKYWpk\",\"JQbwMGLunh7rWeXgX\",\"o4DDdS4PtR5vQa9bF\",\"yjtdwc2AC4jA2RWtn\",\"R4JQmeA6cYyfXbmLF\",\"5Zq3aGdvh4LHBvnJL\",\"Jwu3i2k565y77L4aK\",\"zw7g7T8wE5R5CBhXr\",\"MrweHYHDwwPjC2is5\",\"AasGs8AeX9Lcb9xJn\",\"RE4Mm9T6Q9uygAxGS\",\"csRoCgJx5NBJzW8pX\",\"RJs9HvrPhGkPoorL7\",\"mHT2bJb5SByfJ8yKS\",\"HrPgEHxQxom64ojNZ\",\"3awyiorYPgCqqP7Sr\",\"vewKwcMeGuk3p3MsN\",\"DHwbkbzYNpmkSFT7u\",\"nRht5DZA6YcH2kAo6\",\"uKv6ghxAFuZ5Rb3tD\",\"J45LRB5Zfvynst62D\",\"7k59BcMjggHituTbt\",\"6BpBQnSGhzgvhXrEy\",\"jqbm8L6895JgAtZ6H\",\"apyi6oXgmDnnq7qw9\",\"BdvdJYwHZr7JpkHsn\",\"H3yM3F3mukfdq9fit\",\"z6QfbuG6TXE7GKynQ\",\"cRpaCxYRmGcN3Nsoj\",\"yQtGE2egvwYnNQSFc\",\"Jd6KY7BxEJKbvZHen\",\"dPM2Rk2iMkznyXNEt\",\"QEhgdaBYvvTH4GpoN\",\"Nv5a34gxg5yvLKRW8\",\"YGxdtMwcxMvB5kL2C\",\"yuLxi2qBJvMnwgdgJ\",\"tyNrtjfTi56j5Hw9b\",\"iR6r38R2nRMrvvk6m\",\"Ehrta9env9HXyrGbW\",\"YER6iBcpJCuhgrYDN\",\"HHLi7u8RdCaM2NQyy\",\"yK7zzK2aGJwuWKHRL\",\"a777e8chPvJkY3tKa\",\"mf8xW5DhPjfXaCEsQ\",\"jYXFFTnuWFNo72Rc5\",\"Q75jsoXjhTXJRrw8z\",\"2ZFoLTxcCARhwc8xX\",\"E6DBfkTgHuPsDWdG8\",\"Es4eX2stRpyoXeC7f\",\"MtSGMTysiWHmv4CRE\",\"Nb6LYPoQP6KJZt8mz\",\"eoepTq5ES5tfgY9XT\",\"sZ2eCa6pF6EN9PMmd\",\"aEm3Wvj2rFYRL8Lrb\",\"QRv96jmNaYsWkxQEG\",\"8raviPK67KKxzQWcF\",\"c7uBxu2rgY77H5d79\",\"XqjMsKvfRRbo7qLCd\",\"mDWNyaaQ9hvPCRzSd\",\"tAF9Gf6PiGogbZuWs\",\"buX4mCQhtXCfBjeno\",\"s7Qqx4Jnuq85iB7Lw\",\"ZcqshY58sGEEvgeaq\",\"r7mZLgpQWzRiGddL5\",\"CNc6rmwhbxkxEhHAp\",\"M4vq8ATaS9Jg5X7iP\",\"zBsoTJbK8bqLGxnBc\",\"pGh7WykiPe26fHJYv\",\"bXaGdBM8FBLHf7N6Y\",\"vGKxRcDYDsXzTQuEQ\",\"qWR7eXxBiNee22A5u\",\"g4NCSxxHqHCGMpWwT\",\"xn7uGNKeAwPEkP9oA\",\"2Qk2mFu9HBFzrB24i\",\"RtPhDuwmvWNHiBxmG\",\"Y42BDNy2eiTYNuMJp\",\"Xk2g4CNFAnYcvxiSr\",\"wJTDDTE3TrmSXKP4d\",\"hvTAyFPy4pJHdrYJX\",\"Ya3eHgs8x3unZRLpb\",\"PPFmWzDiefzfekdcg\",\"Fk47SQxbHEJRw4u76\",\"8BJyXvRWcrvN3nttS\",\"oDtGiNqDMHmhHE3J8\",\"ThaiAKWWDw2W4QfJh\",\"bkFXdnCocKsCqoWit\",\"BdnE4RS5puoxo92mA\",\"RqnvM77EkZZD9W2Q3\"],\"quality\":[4,3,5,5,5,5,5,5,4]},\"complaints\":{\"total\":3,\"reasons\":[[\"confusing\",\"bad_resources\"],[\"bad_resources\"],[\"spam\"]],\"skippers\":[\"BkPgkDQGHm66X4Qai\",\"AiDr6vLkHgvryxhmN\",\"LbZGbvHbiNGf9EDef\",\"mSqwKf7KQijDAFrvi\"]},\"instructions\":{\"score\":-0.55,\"voters\":[\"ixv6Lu4Esnwv7FyCr\"]},\"tests\":{\"score\":0.9,\"voters\":[\"ciJ6MQ4rjBSS8tgGm\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.555555555555555,\"family\":[{\"_id\":\"vk3NibPRqsR2RquTM\",\"language\":\"cpp\"},{\"_id\":\"BNKRr4N2oFZQfrTY3\",\"language\":\"csharp\"},{\"_id\":\"kHLmnk3RhekGKe7fP\",\"language\":\"java\"},{\"_id\":\"S5nPFF44x7JceXPBn\",\"language\":\"javascript\"},{\"_id\":\"THCzM2cv7Wu5M34eu\",\"language\":\"php\"},{\"_id\":\"E8TSTy4R5eWEkkaKf\",\"language\":\"python3\"},{\"_id\":\"H5fRQBZwD8kYviS8E\",\"language\":\"ruby\"},{\"_id\":\"pXuNFANTvvWAmrrea\",\"language\":\"swift\"}]}}"]