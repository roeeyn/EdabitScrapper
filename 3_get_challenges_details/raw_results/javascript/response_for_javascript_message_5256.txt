a["{\"msg\":\"result\",\"id\":\"1378\",\"result\":{\"_id\":\"kr6rM8pvePADHG9Ez\",\"author\":\"BijogFc24\",\"authorId\":\"Nb6LYPoQP6KJZt8mz\",\"code\":\"class Node {\\n  constructor(data) {\\n    this.data = data;\\n    this.right = null;\\n    this.left = null;\\n  }\\n}\\n\\nclass BST {\\n  constructor() {\\n    this.root = null;\\n  }\\n  insert(element) {\\n    const node = new Node(element);\\n    if (!this.root) {\\n      this.root = node;\\n    } else {\\n      this.insertNode(this.root, node);\\n    }\\n  }\\n  insertNode(node, newNode) {\\n    if (node.data > newNode.data) {\\n      if (!node.left) {\\n        node.left = newNode;\\n      } else {\\n        this.insertNode(node.left, newNode);\\n      }\\n    } else {\\n      if (!node.right) {\\n        node.right = newNode;\\n      } else {\\n        this.insertNode(node.right, newNode);\\n      }\\n    }\\n  }\\n\\t// Start\\n  minimum() {\\n   \\n  }\\n  maximum() {\\n    \\n  }\\n\\t// End\\n}\",\"difficulty\":2.1333333333333333,\"familyId\":\"WH65Yof7fvcYFtrhs\",\"instructions\":\"Given a **Binary Search Tree** (BST) implementation, complete the minimum, and maximum  function which is present in the BST class. Here you have to  find the max value, min value of the **whole tree**.\\n\\n### Examples\\n```\\ndata = [10, 4 , 20 , 1 , 5]\\n\\nmaximum()  ➞ 20\\n      10\\n      /   \\\\\\n    4    20\\n  /  \\\\\\n1    5\\n\\ndata = [100, 70, 200, 34, 80, 300]\\n\\nminimum() ➞ 34\\n\\n       100\\n       /    \\\\\\n    70    200\\n  /    \\\\          \\\\\\n34   80      300\\n```\\n\\n### Notes\\nMaximum and Minimum value of the whole tree.\",\"isHidden\":false,\"lab\":\"// Special Thanks to Shreeansh for test cases and data.\\n\\nconst b = new BST()\\nb.insert(100)\\nb.insert(200)\\nb.insert(70)\\nb.insert(34)\\nb.insert(80)\\nb.insert(85)\\nb.insert(85)\\nb.insert(111)\\nTest.assertEquals(b.minimum(), 34)\\nTest.assertEquals(b.maximum(), 200)\\n\\nconst b1 = new BST()\\nb1.insert(1)\\nTest.assertEquals(b1.maximum(), 1)\\nTest.assertEquals(b1.minimum(), 1)\\n\\nconst b2 = new BST()\\nb2.insert(100)\\nb2.insert(25)\\nb2.insert(22)\\nb2.insert(75)\\nb2.insert(122)\\nb2.insert(111)\\nb2.insert(112)\\nb2.insert(55)\\nTest.assertEquals(b2.maximum(), 122)\\nTest.assertEquals(b2.minimum(), 22)\",\"language\":\"javascript\",\"summary\":\"Given a Binary Search Tree (BST) implementation, complete the minimum, and maximum  function which is present in the BST class. Here you have to  find the max value, min value of the whole tree.\\n\\nExamples\\ndata = [10, 4 , 20 , 1 , 5]\\n\\nmaximum()  ➞ 20\\n      10\\n      /   \\\\\\n    4    20\\n  /  \\\\\\n1    5\\n\\ndata = [100, 70, 200, 34, 80, 300]\\n\\nminimum() ➞ 34\\n\\n       100\",\"tags\":[\"data_structures\",\"arrays\",\"language_fundamentals\"],\"timestamp\":{\"$date\":1598946160878},\"title\":\"Minimum and Maximum Value in BST\",\"stats\":{\"completed\":{\"total\":42,\"ratings\":[2,2,2,2,2,4,2,0,3,3,3,1,3,1,0,3,3,0,2,3,1,2,3,5,0,2,3,2,0,5],\"rators\":[\"LtTpCzF8kt6Rdth4X\",\"aEm3Wvj2rFYRL8Lrb\",\"yjtdwc2AC4jA2RWtn\",\"65dbBZynphj53nXqA\",\"BdvdJYwHZr7JpkHsn\",\"nphNJCcuiQKh8bNHq\",\"7fKtpcRD5aS8smNiv\",\"hFtPRTy5nwHG3mdGT\",\"CNc6rmwhbxkxEhHAp\",\"zw7g7T8wE5R5CBhXr\",\"e9Cknxbx6o7Nb6REs\",\"c7uBxu2rgY77H5d79\",\"g4NCSxxHqHCGMpWwT\",\"vGKxRcDYDsXzTQuEQ\",\"mDWNyaaQ9hvPCRzSd\",\"hNEhHd8qodq4P3h2g\",\"Po3v3dHCk6wYGKMwi\",\"FJsvM5yqKuK9yMk9P\",\"jd9sRTnsyeKpPggba\",\"fdPA8eWHjvDGGowsw\",\"QRv96jmNaYsWkxQEG\",\"M4vq8ATaS9Jg5X7iP\",\"oGNGzrEnvesWeLP9j\",\"PH32cNxBjrK4a28sn\",\"Ya3eHgs8x3unZRLpb\",\"AMpQSjKsRqhCDyS2j\",\"nkH3HfJXLMNcBMM79\",\"LNCb5rksJLJ43L4Nw\",\"jyoLggHk8xQKZuoQC\"],\"quality\":[5,5,4,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":4.75,\"family\":[{\"_id\":\"kr6rM8pvePADHG9Ez\",\"language\":\"javascript\"},{\"_id\":\"CEyp3FZD5zsaqSwoy\",\"language\":\"python3\"}]}}"]