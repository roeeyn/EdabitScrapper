a["{\"msg\":\"result\",\"id\":\"1602\",\"result\":{\"_id\":\"QdiAZBBr59u5PXJaM\",\"author\":\"BijogFc24\",\"authorId\":\"Nb6LYPoQP6KJZt8mz\",\"code\":\"function filterArray(arr1, arr2){\\n\\t\\n}\",\"difficulty\":2.276595744680851,\"editorId\":\"Nb6LYPoQP6KJZt8mz\",\"familyId\":\"dd7855QJqFwbYvwnM\",\"instructions\":\"Create a function that takes two parameters:\\n\\n1. An array with items ranging from numbers and strings.\\n2. An array with items ranging from numbers, strings and and anonymous function.\\n\\nThe function should return only the items from the first array that satisfies the anonymous function present in the second array.\\n\\n### Detail\\n```\\n#filterArray([1, 2, 3, 4], [100, (num) => num % 2 === 0]) ➞ [2, 4]\\n\\n# 2 and 4 from [1, 2, 3, 4] satisifies  anonymous function in the second array.\\n# (num) => num % 2 === 0          2 % 2 === 0 and 4 % 2 === 0\\n# 1 and 3 do not satisfy (num) => num % 2 === 0\\n```\\n\\n### Examples\\n```\\n filterArray([1, 2, 3, 4], [1, 2, (num) => num % 2 === 0]) ➞ [2 , 4]\\n\\n filterArray([1, 2, 3, 4, 5], [1, 2, (num) => num % 2 === 1,\\\"eon\\\",\\\"epoch\\\"]) ➞ [1, 3, 5]\\n\\n filterArray([\\\"apple\\\", \\\"kiwi\\\"], [2, (txt) => txt.indexOf(\\\"a\\\") > -1]) ➞ [\\\"apple\\\"]\\n```\\n\\n### Notes\\n- Inputs are always two arrays.\\n- There is always only one anonymous function in the second array that needs to be checked with the item in the first array.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertSimilar(filterArray([1,2,3,4,5],[1,2, (num) => num % 2 === 1]),[1, 3, 5])\\nTest.assertSimilar(filterArray([1,2,3,4,5],[(num) => num % 2 === 1],\\\"\\\"),[1, 3, 5]) \\nTest.assertSimilar(filterArray([\\\"apple\\\",\\\"kiwi\\\",\\\"grape\\\"],[2,(txt) => txt.indexOf(\\\"a\\\")>-1],12),[\\\"apple\\\",\\\"grape\\\"]) \\nTest.assertSimilar(filterArray([\\\"nepal\\\",\\\"radar\\\",\\\"madam\\\",\\\"civic\\\"],[(txt) => txt === [...txt].reverse().join(\\\"\\\")]),[\\\"radar\\\",\\\"madam\\\",\\\"civic\\\"])\\nTest.assertSimilar(filterArray([\\\"balkot\\\",\\\"naxal\\\",\\\"dalu\\\",\\\"gwarko\\\"],[1,2, (txt) => txt.length > 4,\\\"a\\\",\\\"b\\\"]),[\\\"balkot\\\",\\\"naxal\\\",\\\"gwarko\\\"])\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[3,3,3,3,3,3,5,2,0,1,5,4,2,3,3,4,0,2,0,1,2,2,2,2,1,2,3,2,1,2,1,3,2,3,2,1,2,2,3,1,2,3,3,2,3,2,3],\"rators\":[\"jnyub52Fi79drGvow\",\"vDFqGTv65smRqx6PY\",\"oM5uLqsaNZu9taNXh\",\"JHfvYEJTE4Nap9cGd\",\"yjtdwc2AC4jA2RWtn\",\"vLokYGP62ysoHuk68\",\"Nb6LYPoQP6KJZt8mz\",\"sBcsrC5paZm9nxjot\",\"eFjGhq7C7bBKXjT6X\",\"dbk9NQ2tuYdEa6BCY\",\"M4vq8ATaS9Jg5X7iP\",\"rHRHzFD28gQA6ESKW\",\"mHT2bJb5SByfJ8yKS\",\"h4jFmtbFn92eA4649\",\"nBo2LLuSMeEgd5f6G\",\"MW4gsgPJfaMEMyXPy\",\"woXMfTGC3zhhQNB9Y\",\"NchnDcEmsLTeFZ4FH\",\"aEm3Wvj2rFYRL8Lrb\",\"vic9SZ9qqj9WhRkbd\",\"n5wubRfh6zh8QRymN\",\"FJsvM5yqKuK9yMk9P\",\"nkGLFenhWR8neryo4\",\"QRv96jmNaYsWkxQEG\",\"65dbBZynphj53nXqA\",\"E2hpke7mHxAWsw5t9\",\"buX4mCQhtXCfBjeno\",\"RE4Mm9T6Q9uygAxGS\",\"bXaGdBM8FBLHf7N6Y\",\"YmMgWhzhHhQLmGGgH\",\"rNAtHTutzkDkhATPu\",\"CNc6rmwhbxkxEhHAp\",\"AeGoKjpCRNZB4SnYJ\",\"s49G5h6964S2KoS64\",\"e9Cknxbx6o7Nb6REs\",\"c7uBxu2rgY77H5d79\",\"g4NCSxxHqHCGMpWwT\",\"u9cRf5kvtpRB5ffB3\",\"oKKPaXEjAtqqZSrhg\",\"NGvCPuMiAP3xrRLfB\",\"8BJyXvRWcrvN3nttS\",\"J7d397iB5GuWRAMfg\",\"oDtGiNqDMHmhHE3J8\",\"gSrqu8MsZMFSxxWAZ\",\"Ya3eHgs8x3unZRLpb\"],\"total\":45,\"quality\":[5,5,5]},\"flags\":0},\"summary\":\"Create a function that takes two parameters:\\n\\nAn array with items ranging from numbers and strings.\\nAn array with items ranging from numbers, strings and and anonymous function.\\n\\nThe function should return only the items from the first array that satisfies the anonymous function present in the second array.\\n\\nDetail\\n#filterArray([1, 2, 3, 4], [100, (num) => num\",\"tags\":[\"arrays\",\"language_fundamentals\"],\"timestamp\":{\"$date\":1591873083756},\"title\":\"Filter Items from an Array\",\"quality\":5,\"family\":[{\"_id\":\"QdiAZBBr59u5PXJaM\",\"language\":\"javascript\"}]}}"]