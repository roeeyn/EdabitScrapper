a["{\"msg\":\"result\",\"id\":\"1796\",\"result\":{\"_id\":\"62BAcgsNSdwYmE9ty\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"function nearestVowel(s) {\\n\\t\\n}\",\"difficulty\":2.5859375,\"familyId\":\"WGPdq9yi9GQBNL8HM\",\"instructions\":\"Given a letter, created a function which returns the nearest vowel to the letter. If two vowels are equidistant to the given letter, return the *earlier* vowel.\\n\\n### Examples\\n```\\nnearestVowel(\\\"b\\\") ➞ \\\"a\\\"\\n\\nnearestVowel(\\\"s\\\") ➞ \\\"u\\\"\\n\\nnearestVowel(\\\"c\\\") ➞ \\\"a\\\"\\n\\nnearestVowel(\\\"i\\\") ➞ \\\"i\\\"\\n```\\n\\n### Notes\\n- All letters will be given in lowercase.\\n- There will be no alphabet wrapping involved, meaning the closest vowel to \\\"z\\\" should return \\\"u\\\", not \\\"a\\\".\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertEquals(nearestVowel(\\\"a\\\"), \\\"a\\\")\\nTest.assertEquals(nearestVowel(\\\"b\\\"), \\\"a\\\")\\nTest.assertEquals(nearestVowel(\\\"c\\\"), \\\"a\\\")\\nTest.assertEquals(nearestVowel(\\\"d\\\"), \\\"e\\\")\\nTest.assertEquals(nearestVowel(\\\"e\\\"), \\\"e\\\")\\nTest.assertEquals(nearestVowel(\\\"f\\\"), \\\"e\\\")\\nTest.assertEquals(nearestVowel(\\\"g\\\"), \\\"e\\\")\\nTest.assertEquals(nearestVowel(\\\"h\\\"), \\\"i\\\")\\nTest.assertEquals(nearestVowel(\\\"i\\\"), \\\"i\\\")\\nTest.assertEquals(nearestVowel(\\\"j\\\"), \\\"i\\\")\\nTest.assertEquals(nearestVowel(\\\"k\\\"), \\\"i\\\")\\nTest.assertEquals(nearestVowel(\\\"l\\\"), \\\"i\\\")\\nTest.assertEquals(nearestVowel(\\\"m\\\"), \\\"o\\\")\\nTest.assertEquals(nearestVowel(\\\"n\\\"), \\\"o\\\")\\nTest.assertEquals(nearestVowel(\\\"o\\\"), \\\"o\\\")\\nTest.assertEquals(nearestVowel(\\\"p\\\"), \\\"o\\\")\\nTest.assertEquals(nearestVowel(\\\"q\\\"), \\\"o\\\")\\nTest.assertEquals(nearestVowel(\\\"r\\\"), \\\"o\\\")\\nTest.assertEquals(nearestVowel(\\\"s\\\"), \\\"u\\\")\\nTest.assertEquals(nearestVowel(\\\"t\\\"), \\\"u\\\")\\nTest.assertEquals(nearestVowel(\\\"u\\\"), \\\"u\\\")\\nTest.assertEquals(nearestVowel(\\\"v\\\"), \\\"u\\\")\\nTest.assertEquals(nearestVowel(\\\"w\\\"), \\\"u\\\")\\nTest.assertEquals(nearestVowel(\\\"x\\\"), \\\"u\\\")\\nTest.assertEquals(nearestVowel(\\\"y\\\"), \\\"u\\\")\\nTest.assertEquals(nearestVowel(\\\"z\\\"), \\\"u\\\")\",\"language\":\"javascript\",\"quality\":4.933333333333334,\"summary\":\"Given a letter, created a function which returns the nearest vowel to the letter. If two vowels are equidistant to the given letter, return the earlier vowel.\\n\\nExamples\\nnearestVowel(\\\"b\\\") ➞ \\\"a\\\"\\n\\nnearestVowel(\\\"s\\\") ➞ \\\"u\\\"\\n\\nnearestVowel(\\\"c\\\") ➞ \\\"a\\\"\\n\\nnearestVowel(\\\"i\\\") ➞ \\\"i\\\"\\n\\nNotes\\nAll letters will be given in lowercase.\\nThere will be no alphabet wrapping involved, me\",\"tags\":[\"strings\",\"loops\"],\"timestamp\":{\"$date\":1605680508717},\"title\":\"Nearest Vowel\",\"stats\":{\"completed\":{\"total\":148,\"ratings\":[2,2,2,2,2,1,3,3,1,3,3,3,3,3,3,4,4,3,2,2,1,3,2,3,2,4,2,4,3,3,3,3,1,2,2,5,2,3,4,2,3,3,3,4,0,4,3,4,0,2,3,3,2,1,3,0,4,3,1,2,4,2,3,4,0,1,0,3,2,3,2,4,3,0,2,3,4,3,3,3,2,1,2,3,2,4,2,3,3,4,2,4,3,3,3,3,1,2,2,0,5,4,3,2,4,2,3,2,2,2,2,2,2,5,2,3,4,3,2,3,4,4,4,3,2,2,2,2],\"quality\":[5,5,4,5,5,5,5,5,5,5,5,5,5,5,5],\"rators\":[\"CNc6rmwhbxkxEhHAp\",\"y69gi2Cj5TQT9jA8S\",\"h66ASG9Y5xbMrzdjY\",\"yjtdwc2AC4jA2RWtn\",\"u9cRf5kvtpRB5ffB3\",\"bX6tpTCjwoi6XMMbK\",\"buX4mCQhtXCfBjeno\",\"tzbFXm6DehdaTvnB4\",\"8BJyXvRWcrvN3nttS\",\"DPi9QGLctq2y76KuE\",\"dxFtJBqPxFSsh44Em\",\"5nobdQ3rdKYTeP38x\",\"DjChaA6HXG2vBe4fK\",\"THoTJTpHE2D4TGWAJ\",\"pd8dm7sWLW9cY6dYW\",\"c7XZZFTf7zJpLbS4S\",\"5nHtgdY8F2FbAMawq\",\"9tEc3z5oTAqqEhmrQ\",\"ssyvipEhkmrwTJQjQ\",\"vGKxRcDYDsXzTQuEQ\",\"FbR45R9mdJnd7bwTT\",\"yQtGE2egvwYnNQSFc\",\"5Qk2e936hqEgyLiFZ\",\"ped54A2xYmQLxtAe3\",\"M4vq8ATaS9Jg5X7iP\",\"6N66hKt2KcR4HoSKQ\",\"e6p5J9wNFcrSpykf3\",\"WApeGxoWZS57yFtq7\",\"vr5tDPvPwG5rq2fHE\",\"KiDaBehAYTqLDFSfC\",\"YjMhPeissyeNDvBda\",\"FFd6r4rzAYYWRPFEr\",\"sf5QEdW3YQAnE4f6d\",\"MT26yxj3YX95DsyLj\",\"WttLjbHSTbbcMBdBe\",\"kyYNFw6CjWmBFMxqX\",\"5AcL3WPdxB7ur55tc\",\"ktvM7edmp4C2e9NF8\",\"9qjfv7J2ESJb6kPPn\",\"mJQCpZFGfzcmaw8un\",\"LtTpCzF8kt6Rdth4X\",\"XAGJuJRsgxZNiAN9C\",\"MWpECxhdkZFpR8RDe\",\"i49enk79wAajcgi7a\",\"XujK3rHd3JcM9TLJy\",\"nuh2CsWWonTp2CpDK\",\"ZbF9PBGj82sWNniFs\",\"PHmaRSDAgsn5YRHWB\",\"649LDDhSKfmkPANRM\",\"3MX2gPLE2DK2Dd7MW\",\"9RRWK3LQgEv4XzTW4\",\"DgJo4MgZS9HLZLGKt\",\"8Z3dkvWBqtrMEE48N\",\"QRv96jmNaYsWkxQEG\",\"a7PDPr6dAhGNgj2xC\",\"iyNqxcRq2za3p2D2c\",\"FJsvM5yqKuK9yMk9P\",\"srJ34BaybkQh3qRkM\",\"PH32cNxBjrK4a28sn\",\"RKKuw76K7sRBMouKq\",\"QGjY3hgPYPMmMjc7j\",\"s678Wirfor5uYL5T6\",\"r47Cs3y2F8exomjD2\",\"rpnhMdtcR9LHHbQSd\",\"ShrXg4RHgnyFjzJ8w\",\"h4jFmtbFn92eA4649\",\"E6DBfkTgHuPsDWdG8\",\"kqJ5bxst5QGn7QnMC\",\"hcm8sL8mNJTSfTdgE\",\"xsDyJstYoBZRS8pJH\",\"5nhmyqLy8M2Yn2HMR\",\"RpjwqmH277e2hopvE\",\"nWND4LmgZTftyB8sN\",\"tAF9Gf6PiGogbZuWs\",\"QvEXmSEo3ANp3yPyH\",\"8SYDBRtkZuW3pdPtG\",\"K3rq9dFGsQz8nZCz5\",\"jTZwWycebKZTNBzhe\",\"rhkJAaSJiZJKppdCc\",\"HbBjC9qfSN4tLJQEy\",\"fkGMyDoYs7PkxZy2G\",\"CvRkspyTCpau2HjKh\",\"YMYtNJvfTkuGnNwpX\",\"sN2JyFeJCwfwwHPwF\",\"RnY25enEBE8T9P5GS\",\"Dd4MibaSEPy7br7fE\",\"Z9jhP3WeN7jSf4aFs\",\"GB3NHPPMge2CshbY6\",\"oDtGiNqDMHmhHE3J8\",\"GvtS8LqWpcAYz3RmN\",\"d8JhF9zfpexkRnCea\",\"t6HhtYMHNjq4nQRxm\",\"E3fkFzNeAGctuvqA2\",\"xBkbJTBSrTp4mZ5uJ\",\"MBrsmFjB3xfouRCpK\",\"BHTi8ri5odToNFMEJ\",\"Cdsa4dHcP6havsNhp\",\"5Kdm6F5Dq3wnQeYTn\",\"yJYi27qL7WsSYj4qv\",\"rSJGLYSXMuu3RWjun\",\"2LHgGFKtZJKDjMxCy\",\"Hcyqetei9TKHGbLG9\",\"AFfw7cGg83uYk2Miy\",\"QiqcdQfduXjgGu57R\",\"GsrjAqoAdLATJH9qD\",\"eCQMCGr55PXiv4H7M\",\"qWZLE2s7aRDQsnZ4p\",\"RE4Mm9T6Q9uygAxGS\",\"eE6p5gaENokRKMTao\",\"EJXaAcika2bAcRAta\",\"JrAdSGJS22WmW8oq3\",\"vbr7kAzCRQpd4ijTf\",\"qPA5JcrjhoaCsaomz\",\"o9Bj4dXiHwtDMTcLc\",\"CjePLYBmyBaDWJXDv\",\"CRQerefxJPdfyxLBP\",\"MBHjmbgyc4o84znCH\",\"64KvwkCTaEh7c6K8W\",\"ndhMZ3srhYQovdpaF\",\"z5GXzFD9Wwgnm9Kxf\",\"aX7aynnzwRBQ9KuJM\",\"EtzC7Q75Wh3pwzyd3\",\"fdg5HGbcX2LegRwgp\",\"GGprTwrkjuccmrQRg\",\"scmTLdntXARWMZ459\",\"T42ZXmmk9HsxTq3nL\",\"3hPnZ4MsEn7Qm9NGH\",\"LwD3CyYSiBfg3mA4r\",\"z5ebtimXwFFJdYxoa\",\"tZHRu7znfs5s8fgT4\",\"ycyZySXZ8fZhJEwSi\",\"TtrXnGzi9MyhLvWiz\",\"7FwugBmSFcokLgezm\",\"Akq3fQcPRgPrWfsye\",\"p6FT6eKaA2dfjLawH\",\"gj87yXyoJxhoQLetq\",\"5tdiYrknCv8tdDmRH\",\"ZTPsRP5rcrcdrjQCK\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"xGRM2qF2YYmBFCxJ5\",\"language\":\"cpp\"},{\"_id\":\"62BAcgsNSdwYmE9ty\",\"language\":\"javascript\"},{\"_id\":\"ZJGBGyZRNrbNtXJok\",\"language\":\"python3\"},{\"_id\":\"TRM2bWoARYrh9rZu3\",\"language\":\"ruby\"}]}}"]