a["{\"msg\":\"result\",\"id\":\"2185\",\"result\":{\"_id\":\"E8WcotHKRGfYodchW\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"function sum(arr) {\\n\\t\\n}\",\"difficulty\":3.2962962962962963,\"familyId\":\"2bibZsQFfN6HBic9Z\",\"instructions\":\"Write a function that takes an array of strings of arbitrary dimensionality (`[]`, `[][]`, `[][][]`, etc.) and returns the sum of every separate number in each string in the array.\\n\\n### Examples\\n```\\nsum([\\\"1\\\", \\\"five\\\", \\\"2wenty\\\", \\\"thr33\\\"]) ➞ 36\\n\\nsum([[\\\"1X2\\\", \\\"t3n\\\"],[\\\"1024\\\", \\\"5\\\", \\\"64\\\"]]) ➞ 1099\\n\\nsum([[[\\\"1\\\"], \\\"10v3\\\"], [\\\"738h\\\"], [[\\\"s0\\\"], [\\\"1mu4ch3\\\"],\\\"-1s0\\\"]]) ➞ 759\\n```\\n\\n### Notes\\n- Numbers in strings can be negative, but will all be base-10 integers.\\n- Negative numbers may directly follow another number.\\n- The hyphen or minus character (\\\"-\\\") does not only occur in numbers.\\n- Arrays may be ragged or empty.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"let [actualParam, expectedParam] = [\\n  [\\n    [\\\"1\\\", \\\"five\\\", \\\"2wenty-one\\\", \\\"thr33\\\"],\\n    [[\\\"1X2\\\", \\\"t3n\\\"],[\\\"1024\\\", \\\"5\\\", \\\"64\\\"]],\\n    [[[\\\"1\\\"], \\\"10v3\\\"], [\\\"738h\\\"], [[\\\"s0\\\"], [\\\"1mu4ch3\\\"],\\\"-1s0\\\"]],\\n    [[[\\\"0\\\", \\\"0x2\\\", \\\"z3r1\\\"],[\\\"1\\\", \\\"55a46\\\"]],[[\\\"1\\\", \\\"0b2\\\", \\\"4\\\"],[\\\"0x5fp-2\\\", \\\"nine\\\", \\\"09\\\"],[\\\"4\\\", \\\"4\\\", \\\"4\\\"]],[[\\\"03\\\"]], []],\\n    [[[[[[[[[[[[[[[[\\\"-1\\\", \\\"1\\\"], [\\\"3\\\"], [\\\"\\\"], []]]]]]]]]]]]]]]],\\n    [[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]],\\n    [[[[[[\\\"-32-64\\\", \\\"a-zA-Z\\\"], [\\\"01-1\\\"]]]]]]\\n  ],\\n  [36, 1099, 759, 142, 3, 0, -96]\\n]\\nfor (let i in actualParam) Test.assertEquals(sum(actualParam[i]), expectedParam[i])\",\"language\":\"javascript\",\"quality\":4.548387096774194,\"summary\":\"Write a function that takes an array of strings of arbitrary dimensionality (], [, [], etc.) and returns the sum of every separate number in each string in the array.\\n\\nExamples\\nsum([\\\"1\\\", \\\"five\\\", \\\"2wenty\\\", \\\"thr33\\\"]) ➞ 36\\n\\nsum([[\\\"1X2\\\", \\\"t3n\\\"],[\\\"1024\\\", \\\"5\\\", \\\"64\\\"]]) ➞ 1099\\n\\nsum([[[\\\"1\\\"], \\\"10v3\\\"], [\\\"738h\\\"], [[\\\"s0\\\"], [\\\"1mu4ch3\\\"],\\\"-1s0\\\"]]) ➞ 759\\n\\nNotes\\nNumbers in stri\",\"tags\":[\"language_fundamentals\",\"objects\",\"arrays\"],\"timestamp\":{\"$date\":1606962081495},\"title\":\"Deep Arithmetic\",\"stats\":{\"completed\":{\"total\":116,\"ratings\":[4,4,4,4,4,3,4,2,3,0,0,4,5,5,3,2,4,2,3,1,3,2,2,5,5,4,3,3,3,3,0,5,3,1,3,4,5,5,3,3,2,5,2,2,1,5,3,3,5,2,2,2,5,5,0,4,5,4,5,3,0,3,4,3,2,3,2,5,5,3,4,3,3,4,5,5,5,5,5,2,5],\"quality\":[5,5,5,5,5,2,4,5,5,5,5,5,3,5,5,3,4,3,5,5,5,5,4,5,5,5,5,4,5,4,5],\"rators\":[\"a777e8chPvJkY3tKa\",\"YLTZRjM78Wi9J9Re4\",\"vGKxRcDYDsXzTQuEQ\",\"tAF9Gf6PiGogbZuWs\",\"h4jFmtbFn92eA4649\",\"xt64Dx2FGjsh7u8Dr\",\"mDWNyaaQ9hvPCRzSd\",\"q2tzvkrLASvSjkek9\",\"vs2YgQCQiajoCmAmN\",\"pWJWQDhqzDSmfaFam\",\"4RsakkyRXyYGwFxEa\",\"8SYDBRtkZuW3pdPtG\",\"u9cRf5kvtpRB5ffB3\",\"o8r9BXnZe5EmHpmSX\",\"Nc5xA9fWMpsMYqtdM\",\"kp2ZbCewZJAbfd7xv\",\"YGoEo3M5Q93BzxBqX\",\"acW2dpf7gu2LhMwvC\",\"hEXangjLgGS4rymgC\",\"rwtyaL4ZnkgFSf2ze\",\"mWWQdkt4NK8EfwDBw\",\"gtBF3yn9sRLeniLFf\",\"7niNmk3GSMEAa9QJJ\",\"xoR3u8pfR3vWbrte3\",\"XfMxfiF4T6icZCszb\",\"3ZgDpRTLPjTNkgrhs\",\"K45zPJxsABuA3WSyj\",\"HcSc9vKz3eAwGTmQM\",\"xT7wiPhZYeGgxwNvK\",\"QvEXmSEo3ANp3yPyH\",\"SjY6a2v6jMjGraDKz\",\"uD8dqmSFgnQbvgguZ\",\"dwwY8KuJNHuLqpggG\",\"qQeLW3djaFSwXN5qn\",\"uooLGyCRhQwxDRTTz\",\"SYEuojZtP6yLXryHv\",\"nn7MBcR7HCiwP9nMy\",\"QRv96jmNaYsWkxQEG\",\"oyB4Wr4EeZnoDaa8B\",\"FjJqEQpg5XZdKGnLo\",\"XcL8zqSMRAxi6vioX\",\"hcm8sL8mNJTSfTdgE\",\"yMEiw5i4w3j7i5cEf\",\"mxdbPp2YB8JntMLin\",\"QjGNkRM3Xc78yShJN\",\"tS2creh6gfkmGoNm7\",\"2NGSwAJk9NHt3toCo\",\"QJM5KcENEwS24NDs7\",\"buX4mCQhtXCfBjeno\",\"Kk3jdrvAbPENkw5Ft\",\"wAo6PX7DQb9nuQ9DL\",\"pi76g3eRpnKrhee2a\",\"3jS6bCbbBbgAjiw9f\",\"SGhPxX5bHGL8zZqtt\",\"2sLmHo7G2irSyrDB7\",\"WznKtKrCp9BxvBAfg\",\"5NGxHLcQ8Af2RJ4TN\",\"Nv5a34gxg5yvLKRW8\",\"LwwQoT3e8c7MqZ9Kn\",\"uwn4ZD7yyLBwYZNDq\",\"4AYkndmbAXAromAJD\",\"eS7MmS6rGw4DZgJ53\",\"Rf3Erc4mHpYGkYYCJ\",\"c8qtrDgBAsTfBAD3S\",\"FJsvM5yqKuK9yMk9P\",\"wxzjJkY8xqTbvq2a9\",\"LNoPXwizSmkrBgkEN\",\"zSMTbkYkDFb3uomDQ\",\"bX6tpTCjwoi6XMMbK\",\"cRpaCxYRmGcN3Nsoj\",\"GxiKdXPCMtmHRrPiQ\",\"PFgDHfSxajZ2nNfrH\",\"DpGAjQJnGDnqx3tg5\",\"wJTDDTE3TrmSXKP4d\",\"72KhBjeYReekXqb4Y\",\"JSeCrzsvuMPCpygCb\",\"ZgdejAm3u2Q6tFpfg\",\"yjtdwc2AC4jA2RWtn\",\"AasGs8AeX9Lcb9xJn\",\"xfxkLoQsbZBonmBGp\",\"P46nurmHxGzA8CLY5\",\"wR8gHDv7qnLtikX9M\",\"9XnGoq9Tv6ut3zTtH\",\"sfj3i3eEAfZa3f9kg\",\"zQ8zBaxHqenjENnsR\",\"79zo3HCwjizB6FxS9\",\"DJYEXTBnfjabx689z\",\"edMP2Y8T3HW89J4KN\",\"DPi9QGLctq2y76KuE\",\"wo4cpen33NYFHNca7\",\"PH32cNxBjrK4a28sn\",\"dpDFNsknxvEYi5YkA\",\"pXyib7Mn7MngrYCKv\",\"TDevs6afPp2EzycDL\",\"ZTTJprKDvFqKGew7c\",\"ax6vpPEaXjhRqqpHf\",\"vSaDkyeZtiTJASBiS\",\"coTsXQZW59EjCAB9d\",\"yHd3HyZwSMozqhR6P\",\"eMAWKgZGE4NSpd3Cj\",\"DM93pPFbWXYMtBeMZ\",\"AmyxE23H2ywWbSXNG\",\"Spwk7GP4hPyF76fDb\",\"TosxLnhR6M8qngnZm\",\"jkkKzNT77bMStXhpW\",\"J5MgLszeGgtciW56n\",\"Wnj8K7tbRwBPXGsHw\"]},\"flags\":0},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"Zg5gHdtBMx2knzrdE\",\"language\":\"java\"},{\"_id\":\"E8WcotHKRGfYodchW\",\"language\":\"javascript\"},{\"_id\":\"FgAsxMCaEzvKhnuAH\",\"language\":\"python3\"}]}}"]