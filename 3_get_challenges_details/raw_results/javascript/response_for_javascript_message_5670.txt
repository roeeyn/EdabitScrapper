a["{\"msg\":\"result\",\"id\":\"1584\",\"result\":{\"_id\":\"9se2zfxxSrLPKpyH9\",\"author\":\"Pustur\",\"authorId\":\"65dbBZynphj53nXqA\",\"code\":\"function samplesFromCurve(samples, curve) {\\n\\t\\n}\",\"difficulty\":2.26,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"AeWrCRbnZR9ERDSSA\",\"instructions\":\"Create a function that given a type of `curve` will generate an array containing a `samples` amount of numbers calculated from said `curve`.\\n\\nIt's easier to see with a visual representation:\\n\\n![graph of the 3 curves](https://edabit-challenges.s3.amazonaws.com/sample_points_from_a_curve.png)\\n\\nIf `samples = 3` and `curve = \\\"pow\\\"`, we would sample 3 points along the **x axis** `[0, 0.5, 1]` and figure out the value of `y`, in the case of the `pow` curve the values are `[0, 0.25, 1]`.\\n\\n### Examples\\n```\\nsamplesFromCurve(3, \\\"linear\\\") ➞ [0, 0.5, 1]\\n\\nsamplesFromCurve(3, \\\"pow\\\") ➞ [0, 0.25, 1]\\n\\nsamplesFromCurve(3, \\\"sqrt\\\") ➞ [0, 0.71, 1]\\n\\nsamplesFromCurve(5, \\\"linear\\\") ➞ [0, 0.25, 0.5, 0.75, 1]\\n```\\n\\n### Notes\\n- The available curves are `linear`, `pow`, `sqrt` as shown in the picture.\\n- All values returned must have a **maximum of 2 decimals** to avoid floating point problems in the tests.\\n- All values returned must be between `0` and `1` (inclusive).\\n- The `samples` parameter will always be ≥ `2`.\\n- The samples are **evenly distributed** along the **x axis**.\",\"lab\":\"// Linear\\nTest.assertSimilar(samplesFromCurve(2, 'linear'), [0, 1])\\nTest.assertSimilar(samplesFromCurve(3, 'linear'), [0, 0.5, 1])\\nTest.assertSimilar(samplesFromCurve(11, 'linear'), [0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1])\\n\\n// Pow\\nTest.assertSimilar(samplesFromCurve(4, 'pow'), [0, 0.11, 0.44, 1])\\nTest.assertSimilar(samplesFromCurve(5, 'pow'), [0, 0.06, 0.25, 0.56, 1])\\nTest.assertSimilar(samplesFromCurve(11, 'pow'), [0, 0.01, 0.04, 0.09, 0.16, 0.25, 0.36, 0.49, 0.64, 0.81, 1])\\n\\n// Sqrt\\nTest.assertSimilar(samplesFromCurve(6, 'sqrt'), [0, 0.45, 0.63, 0.77, 0.89, 1])\\nTest.assertSimilar(samplesFromCurve(7, 'sqrt'), [0, 0.41, 0.58, 0.71, 0.82, 0.91, 1])\\nTest.assertSimilar(samplesFromCurve(11, 'sqrt'), [0, 0.32, 0.45, 0.55, 0.63, 0.71, 0.77, 0.84, 0.89, 0.95, 1])\",\"language\":\"javascript\",\"summary\":\"Create a function that given a type of curve will generate an array containing a samples amount of numbers calculated from said curve.\\n\\nIt's easier to see with a visual representation:\\n\\ngraph of the 3 curves\\n\\nIf samples = 3 and curve = \\\"pow\\\", we would sample 3 points along the x axis [0, 0.5, 1] and figure out the value of y, in the case of the pow curve the v\",\"tags\":[\"algebra\",\"arrays\",\"math\"],\"timestamp\":{\"$date\":1555369993138},\"title\":\"Sample Points from a Curve\",\"stats\":{\"completed\":{\"total\":45,\"ratings\":[2,2,2,2,2,2,2,2,2,2,1,3,2,2,2,2,3,2,3,1,3,2,2,3,3,3,3,2,0,2,3,3,1,2,3,3,2,0,3,2,3,3,1,2,3,3,3,2,3,4],\"rators\":[\"65dbBZynphj53nXqA\",\"SDtZFL5NzAoCPofXk\",\"wcjknenWdPRhrRScv\",\"2NJuDfSqdrF8kHHni\",\"n5wubRfh6zh8QRymN\",\"dgwRvPi62zKghWiHb\",\"uhP3Z8KkPxySxn2n7\",\"HhLGvPRCyHeforjRk\",\"EjPLq3QSJdGQFJdgW\",\"EWn8w8P3nNh7knatY\",\"rSJGLYSXMuu3RWjun\",\"R5iq8CcAMQpq5irrX\",\"zgoq9MhrL2h75DAMA\",\"yjtdwc2AC4jA2RWtn\",\"jJ9njGvHZaHTsqAJs\",\"6BpBQnSGhzgvhXrEy\",\"AasGs8AeX9Lcb9xJn\",\"5Zq3aGdvh4LHBvnJL\",\"mHT2bJb5SByfJ8yKS\",\"DHwbkbzYNpmkSFT7u\",\"XKi8iZXBCHCaebSHh\",\"FJsvM5yqKuK9yMk9P\",\"hB8Er9xKambEA8Hv9\",\"cRpaCxYRmGcN3Nsoj\",\"JGBCMpnbbi5ztuFoX\",\"SWbaoFPBAeu6g376j\",\"xMLCsZbeTFRpnXeZe\",\"kkhDR58mjXEg66cZp\",\"oqk9h22KHEStfpAhp\",\"a777e8chPvJkY3tKa\",\"LCn6qz2GoMr5577Rd\",\"RE4Mm9T6Q9uygAxGS\",\"buX4mCQhtXCfBjeno\",\"aEm3Wvj2rFYRL8Lrb\",\"4Xv87xmdSnpYhi8hz\",\"kp2ZbCewZJAbfd7xv\",\"tAF9Gf6PiGogbZuWs\",\"BdvdJYwHZr7JpkHsn\",\"QRv96jmNaYsWkxQEG\",\"Yp7uvStL97cC9fKkY\",\"e9Cknxbx6o7Nb6REs\",\"wJTDDTE3TrmSXKP4d\",\"nSKbufQk6v2rKC2SL\",\"oDtGiNqDMHmhHE3J8\"],\"quality\":[5,4,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"isHidden\":false,\"quality\":4.666666666666667,\"family\":[{\"_id\":\"9se2zfxxSrLPKpyH9\",\"language\":\"javascript\"},{\"_id\":\"YifX9gJwnu5MS9brs\",\"language\":\"python3\"},{\"_id\":\"gu4KEhMazwBZgfhWk\",\"language\":\"ruby\"}]}}"]