a["{\"msg\":\"result\",\"id\":\"1823\",\"result\":{\"_id\":\"5hsyLC2Ntgoqn2wAy\",\"author\":\"zatoichi49\",\"authorId\":\"tAF9Gf6PiGogbZuWs\",\"code\":\"function findAllDigits(nums) {\\n\\t\\n}\",\"difficulty\":2.6392694063926943,\"familyId\":\"9xGnndu4Jaq3Zmn8E\",\"instructions\":\"Taking each four digit number of an array in turn, return the **number** that you are on when all of the digits 0-9 have been discovered. If not all of the digits can be found, return `\\\"Missing digits!\\\"`.\\n\\n### Examples\\n```\\nfindAllDigits([5175, 4538, 2926, 5057, 6401, 4376, 2280, 6137, 8798, 9083]) ➞ 5057\\n// digits found:  517-  4-38  29-6  -0\\n\\nfindAllDigits([5719, 7218, 3989, 8161, 2676, 3847, 6896, 3370, 2363, 1381]) ➞ 3370\\n// digits found:  5719  -2-8  3---  --6-  ----  --4-  ----  ---0\\n\\nfindAllDigits([4883, 3876, 7769, 9846, 9546, 9634, 9696, 2832, 6822, 6868]) ➞ \\\"Missing digits!\\\"\\n// digits found:  48-3  --76  ---9  ----  -5--  ----  ----  2---\\n// 0 and 1 are missing\\n```\\n\\n### Notes\\nThe digits can be discovered in *any* order.\",\"isHidden\":false,\"lab\":\"Test.assertEquals(findAllDigits([3129, 7689, 7449, 4389, 5855, 9670, 9245, 1291, 7367, 1810]), 9670)\\nTest.assertEquals(findAllDigits([2758, 3737, 3349, 5118, 7004, 6106, 8868, 6687, 2510, 8911]), 6106)\\nTest.assertEquals(findAllDigits([5343, 6743, 2922, 2423, 7050, 5116, 3992, 2707, 2435, 5251]), \\\"Missing digits!\\\")\\nTest.assertEquals(findAllDigits([4169, 4511, 1498, 6945, 7959, 2666, 7872, 3217, 5408, 8662]), 5408)\\nTest.assertEquals(findAllDigits([7985, 7130, 4625, 7392, 4933, 7163, 7130, 2145, 1596, 6188]), 4625)\\nTest.assertEquals(findAllDigits([4823, 1049, 9555, 9466, 2191, 9316, 1105, 4489, 8318, 7081]), 7081)\\nTest.assertEquals(findAllDigits([9827, 4405, 6317, 6086, 8091, 7800, 8365, 2544, 3402, 7248]), 6317)\\nTest.assertEquals(findAllDigits([2227, 7262, 9322, 8967, 4807, 8708, 3317, 6543, 9522, 7106]), 6543)\\nTest.assertEquals(findAllDigits([8452, 7326, 6786, 1893, 6546, 8714, 6699, 1361, 4891, 9797]), \\\"Missing digits!\\\")\\nTest.assertEquals(findAllDigits([2627, 1146, 3964, 6280, 9759, 6188, 8917, 9375, 4012, 4217]), 9759)\\nTest.assertEquals(findAllDigits([1291, 6903, 5887, 8914, 3906, 1465, 8452, 4909, 4143, 6921]), 8914)\\nTest.assertEquals(findAllDigits([7433, 8245, 9603, 1446, 8158, 8756, 5066, 4996, 5233, 2856]), 1446)\\nTest.assertEquals(findAllDigits([4661, 1207, 8411, 2010, 2092, 2441, 7885, 3810, 7433, 2034]), 3810)\\nTest.assertEquals(findAllDigits([9429, 6519, 3795, 7924, 3042, 3425, 1371, 7194, 7680, 9007]), 7680)\\nTest.assertEquals(findAllDigits([6621, 9480, 8239, 4542, 9772, 5108, 6872, 5057, 9477, 3602]), 9772)\\nTest.assertEquals(findAllDigits([9701, 3828, 7183, 2727, 5212, 6721, 5413, 2351, 4237, 8207]), 5413)\\nTest.assertEquals(findAllDigits([3914, 9923, 8187, 1657, 4271, 9538, 3759, 4543, 3438, 1943]), \\\"Missing digits!\\\")\\nTest.assertEquals(findAllDigits([6572, 3752, 9661, 7017, 8139, 2596, 3054, 2730, 1350, 2483]), 3054)\\nTest.assertEquals(findAllDigits([2102, 4519, 4229, 8347, 2019, 7342, 7181, 8977, 1339, 9988]), \\\"Missing digits!\\\")\\nTest.assertEquals(findAllDigits([4467, 2849, 5706, 7330, 9488, 2529, 8837, 2256, 3975, 7311]), 7311)\",\"language\":\"javascript\",\"summary\":\"Taking each number of an array in turn, return the number that you are on when all of the digits 0-9 have been discovered. If not all of the digits can be found, return \\\"Missing digits!\\\".\\n\\nExamples\\nfindAllDigits([5175, 4538, 2926, 5057, 6401, 4376, 2280, 6137, 8798, 9083]) ➞ 5057\\n// digits found:  517-  4-38  29-6  -0\\n\\nfindAllDigits([5719, 7218, 3989, 8161, 26\",\"tags\":[\"arrays\",\"numbers\"],\"timestamp\":{\"$date\":1577644617746},\"title\":\"Find All Digits\",\"stats\":{\"completed\":{\"total\":266,\"ratings\":[3,3,3,3,3,3,4,0,1,1,2,3,0,2,3,2,3,2,2,3,3,3,3,3,2,4,3,3,2,4,2,1,1,4,3,0,3,2,4,2,3,3,4,2,3,4,3,3,4,2,1,1,1,2,3,3,3,3,2,2,4,3,3,3,4,2,4,2,1,4,3,2,2,2,2,0,2,2,2,2,3,1,3,3,3,4,2,4,2,2,3,3,4,4,3,3,3,2,4,3,3,1,3,2,2,3,4,2,2,4,2,3,3,3,1,2,2,4,3,2,3,2,2,3,2,2,3,3,1,3,3,3,3,3,2,2,1,2,2,4,4,2,4,2,4,3,2,2,2,3,3,4,2,0,4,3,4,2,1,1,3,4,2,4,3,1,4,2,4,3,2,4,2,3,4,4,3,3,1,2,4,2,3,3,4,3,4,2,2,2,1,3,2,4,1,4,2,3,3,4,4,2,3,4,2,3,2,4,3,1,2,1,4,3,3,3,5,4,1],\"rators\":[\"fnpRjpCRMANcg2x6r\",\"avx225AcMX6ANSNW9\",\"5Zq3aGdvh4LHBvnJL\",\"yjtdwc2AC4jA2RWtn\",\"n5wubRfh6zh8QRymN\",\"XjuaFaxajTTRdwD9e\",\"YER6iBcpJCuhgrYDN\",\"AXcnPX68zdMiLNSmu\",\"AasGs8AeX9Lcb9xJn\",\"frrtYBJaRni78g74E\",\"54Ka62KytXRsrLPhZ\",\"EWn8w8P3nNh7knatY\",\"2innwjWqxJHo4eRGh\",\"65dbBZynphj53nXqA\",\"6BpBQnSGhzgvhXrEy\",\"Wmq8QjysTQYskk4m7\",\"Y9Nz9yafaibz54W4o\",\"xAN6J7WQpzJhL7m7e\",\"uAS9uKs8KQmp8uhqn\",\"eS876Rkwf2y38nt4a\",\"ZtniSFrgec4oj6Pxm\",\"FJsvM5yqKuK9yMk9P\",\"GCsLzWAhLvniQqR3J\",\"StRSyqrwpBY3NskSp\",\"QC8hPEzoaGh3BtvGH\",\"Kc3SDafimwpZWrATJ\",\"eCrowGCxBkubXJJNQ\",\"hcm8sL8mNJTSfTdgE\",\"rJGzFvBGYxdukwt8X\",\"sjFEBjHunCPmgSefK\",\"yuLxi2qBJvMnwgdgJ\",\"wNJ2zWu4dZT3MmGWC\",\"z5ebtimXwFFJdYxoa\",\"Sy3jJSEbCoF52qpHy\",\"8YJp93zsQWop6af4o\",\"KcpfY4XZ7fNamyLd3\",\"p2woPCQKXuWJCwffJ\",\"3JSKE56FSBxj6ZCY7\",\"oyB4Wr4EeZnoDaa8B\",\"E2FQMK84de6FtP6S9\",\"Jwoe6heepP8r77Doj\",\"faYyw7jGsSeaMeYYd\",\"2ZFoLTxcCARhwc8xX\",\"Es4eX2stRpyoXeC7f\",\"B9JotDuRiTBY8rvLh\",\"FiK2ruyH8KeHLAgoA\",\"nBo2LLuSMeEgd5f6G\",\"u5P98qtcBi9L8M7hf\",\"pd8dm7sWLW9cY6dYW\",\"v9aR523WHPwdQyhwK\",\"cnmj8mAbLcMnKaqLS\",\"px2rrjMNTudtQGibv\",\"m2qbXnFK4rtW6jJFF\",\"BdnE4RS5puoxo92mA\",\"5Y96nx3z5eYgyXdbr\",\"ou59JYLGm3Mt26556\",\"gcDFToxCfADndinE5\",\"LtPtR5gff872KLRxM\",\"dGfyZu4FPBXqpu9QN\",\"z9ttnCQD2jZTq56Ki\",\"sBcsrC5paZm9nxjot\",\"uSgBS9sdzAbysXh6c\",\"dXXrCKPcCmFFYZp44\",\"zMCXYFZSsviDCvjnY\",\"JGBCMpnbbi5ztuFoX\",\"5ibYDhiazv3svJHiJ\",\"FKMPCJDxvG3Rtf3JE\",\"fYcjpFnh2c3sGsraG\",\"DFYgDzybjj9k9mCH9\",\"ByXaraYa5tzFG8Gmj\",\"h4jFmtbFn92eA4649\",\"GrkcYEqxC8wx7R8Sy\",\"K27G73TduM3YCh9id\",\"LwqqprQjQG2WTStga\",\"WApeGxoWZS57yFtq7\",\"KDS2NeCGRv4jMMEuz\",\"GpcbYAnLNnqsy4iJf\",\"agimPsfKv6ag8mCwW\",\"8raviPK67KKxzQWcF\",\"di7Nw8SSYibFt8L7c\",\"75MZjJQdxm9uExWHP\",\"Zw57Tjv4AQA2PadgF\",\"7TXyMDHFYjna3dyPb\",\"dPM2Rk2iMkznyXNEt\",\"FHBBZM5DMQi5ZjAxw\",\"XoFbsoXwxd8EikKhE\",\"Fdy6m2CZkzbsPTQYF\",\"a8ZhCFx7FcQHfEggd\",\"a777e8chPvJkY3tKa\",\"Cm4JrWudbgMB85Axn\",\"MT26yxj3YX95DsyLj\",\"NxG2NCG4XdxYgaH6b\",\"J7BextcXMDCs5Fw5B\",\"3WtHp4MBzciz4AE8M\",\"aqzWajZcBZtTiyTqK\",\"uigAJ9KT5muMWTDis\",\"QMq9dcvgpyNK6RAze\",\"vACxc7j8T8vmGiHBk\",\"vvcHkhRtqMXgLYRCb\",\"cCrirxZEzgAwQt2T9\",\"XtZfZuXwcaivjtS3T\",\"dbk9NQ2tuYdEa6BCY\",\"ttuGK7od8simjgmCJ\",\"mHT2bJb5SByfJ8yKS\",\"eFjGhq7C7bBKXjT6X\",\"hNEhHd8qodq4P3h2g\",\"NchnDcEmsLTeFZ4FH\",\"Su3vDnttRBpxeyDen\",\"M4vq8ATaS9Jg5X7iP\",\"aEm3Wvj2rFYRL8Lrb\",\"vic9SZ9qqj9WhRkbd\",\"pELRzG2dasSFHdRFe\",\"Xk2g4CNFAnYcvxiSr\",\"BbSZKcLyfgaDFpceJ\",\"CMPqZzRxXA7RrXGzt\",\"RDf6GPtAQEzxGuyPX\",\"sNcDN3s3rH9wcNg5n\",\"rC7kdm3SsSX9udEQk\",\"EAoDdZBWGzecod2ZM\",\"SNt23Ei5dSNtfpEMd\",\"BuGWvGZGiJELoMy5G\",\"kp2ZbCewZJAbfd7xv\",\"CJBPyyfyaEeEo63sb\",\"zNN2fW2pJGpTxBgzx\",\"wo4cpen33NYFHNca7\",\"BpiAkZfs6sXRMdArb\",\"SXAKKFagansJbFgWm\",\"ga3rd4gqez8qJ2NTY\",\"bX6tpTCjwoi6XMMbK\",\"QGjY3hgPYPMmMjc7j\",\"CG5LLfRkyqdYaankG\",\"Po3v3dHCk6wYGKMwi\",\"mD4R9HhrbN8jkMXbC\",\"CeG7HoyDtx7b5N2g7\",\"J23oXY2JDG9kohG8L\",\"4Xv87xmdSnpYhi8hz\",\"hhSKYujojYnHiKFy7\",\"BjJhatTBaTWm3ZhCt\",\"QwYn9aGpRgXCnAHJv\",\"D8E3v3AkHCbXNpvNv\",\"xn7uGNKeAwPEkP9oA\",\"rSJGLYSXMuu3RWjun\",\"qvNk7pHSveLu3jqWw\",\"KG5kJoP68PaZCASxF\",\"dz4stAGxFGawPRfob\",\"tAF9Gf6PiGogbZuWs\",\"buX4mCQhtXCfBjeno\",\"GmQpgGTQeFJbPqGxJ\",\"XAWBNSr4F45iGdNRn\",\"QpRA8tjg8YTxwHWrN\",\"6zsau8WHFof3wBGRy\",\"SmZoPhzLybN2dWwvm\",\"5ETJzzAbWHw9GkWCn\",\"4RsakkyRXyYGwFxEa\",\"QRv96jmNaYsWkxQEG\",\"YLuJ7h27mr2GMcMt6\",\"DWDRyWp4f2ph7FtxA\",\"YQ39kq5kadqqttyyc\",\"6whLhSSADkDKmaN9s\",\"Ac6u9uxPiFD5D8tfr\",\"ZTTJprKDvFqKGew7c\",\"6Wib7DwCQJDQFDvTQ\",\"6FkDN5CoKe4Qbg9jt\",\"LtTpCzF8kt6Rdth4X\",\"nphNJCcuiQKh8bNHq\",\"YXqaqjujocvg2gX4k\",\"wmHtyqytYWoA8voo6\",\"iDtDLdEPj4wEjhTij\",\"5tc7fC5onrQgj3hs5\",\"ZcJm2kuqJnN3CXFaR\",\"dGugwhA6uwwjPGAa5\",\"Kk3jdrvAbPENkw5Ft\",\"acHSYL6uQAgpgFMjp\",\"Cq4jiaTiWkDTDhLey\",\"Tu22KsScr9mykuy8N\",\"YT9gaaNDJ3o9Lo5im\",\"bMAQfgDGbrLNxxhD3\",\"EBTrwJbNx8XkRnmNc\",\"sYJKcRHeWxTBoAdaL\",\"mwg8jvMHHmQiQRrbr\",\"EjYWHaWnYBaKn2xpi\",\"vp66QYPswG9iu64p3\",\"snFaY4RgJcFPFQ8bu\",\"RXB2wsYstqX3anzjk\",\"H9CAbcfhGpZAqnNTb\",\"RKKuw76K7sRBMouKq\",\"ct42f2gGpMXSd9hXM\",\"9dAB9yF2rukm22EnA\",\"bTXKg7WFmPJcEsdab\",\"oBCStgAyNK7z8C4WA\",\"8Z3dkvWBqtrMEE48N\",\"h66ASG9Y5xbMrzdjY\",\"BTdKRxKHXHDDD4934\",\"u9cRf5kvtpRB5ffB3\",\"4XxJxQkB5mNTLY2qk\",\"kgRZjkKjTDkGHccvH\",\"THoTJTpHE2D4TGWAJ\",\"kSxSz3ZxdQuPYTxWD\",\"yn4JFfQ36Ad4v6CAE\",\"DjChaA6HXG2vBe4fK\",\"s8cQG38GLohCxfwkA\",\"DPi9QGLctq2y76KuE\",\"pWJWQDhqzDSmfaFam\",\"6DSdGxu5TeDtua7Fw\",\"CNc6rmwhbxkxEhHAp\",\"pRNciwMe3oy9w28s9\",\"vewKwcMeGuk3p3MsN\",\"GsrjAqoAdLATJH9qD\",\"AJwBauGHyrbqgDYce\",\"2NGSwAJk9NHt3toCo\",\"iyNqxcRq2za3p2D2c\",\"8SYDBRtkZuW3pdPtG\",\"xAvbBxkEPDzPK6hWs\",\"JXpPsfBXeeiB3gwbY\",\"ZRue7dxL7tPbtSrsp\",\"QvEXmSEo3ANp3yPyH\",\"wJTDDTE3TrmSXKP4d\",\"Ryrcp76vts2YwHLpu\",\"LQ7YpRY7er6qMj7ke\",\"s678Wirfor5uYL5T6\",\"ceMycDhXzsRojnr9F\",\"d9TugDNK8fMrTXDEq\",\"sZ2eCa6pF6EN9PMmd\",\"E6DBfkTgHuPsDWdG8\",\"AQSqD9oNv2uPfxZCR\",\"K54ipu2Y5pZfPngmk\",\"nWND4LmgZTftyB8sN\",\"sLWHghjrTMkm3gW6y\",\"BMCau6eTd5zb338LR\",\"yeuXDHFA6QBLtZWFD\",\"2Qk2mFu9HBFzrB24i\",\"NGvCPuMiAP3xrRLfB\",\"n6hcpQjSNA7HLXaZT\",\"t4pmsdEQ5WHB4KnNe\",\"TtrXnGzi9MyhLvWiz\",\"nkH3HfJXLMNcBMM79\",\"ShrXg4RHgnyFjzJ8w\",\"qKgehQ7fQrm4BR9Yh\",\"AFfw7cGg83uYk2Miy\",\"oDtGiNqDMHmhHE3J8\",\"PH32cNxBjrK4a28sn\",\"RE4Mm9T6Q9uygAxGS\",\"Z9jhP3WeN7jSf4aFs\",\"jnyub52Fi79drGvow\",\"zkfmaM9szkjNBAKhX\"],\"quality\":[5,4,4,5,5,5,5,5,5,5,4,2,5,5,2,5,5,5,5,5,5,5,5,4,5,3,4,5,4,5,4]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":1},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":4.516129032258065,\"family\":[{\"_id\":\"LhmeYSBb6XKiAxnEN\",\"language\":\"cpp\"},{\"_id\":\"5hsyLC2Ntgoqn2wAy\",\"language\":\"javascript\"},{\"_id\":\"rPnq2ugsM7zsWr3Pf\",\"language\":\"python3\"},{\"_id\":\"YwRZwHu2cFFqqMigN\",\"language\":\"ruby\"}]}}"]