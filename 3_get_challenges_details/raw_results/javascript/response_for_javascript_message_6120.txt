a["{\"msg\":\"result\",\"id\":\"1807\",\"result\":{\"_id\":\"zi2Mvb2GZi3r34JKv\",\"author\":\"bangyen\",\"authorId\":\"yv7c4H2jimSKHEjtG\",\"code\":\"function funcSort(arr) {\\n\\t\\n}\",\"difficulty\":2.6153846153846154,\"familyId\":\"9SpSh7hywSDr4gHhK\",\"instructions\":\"Create a function that takes a list of functions and sorts them in ascending order based on how many calls are needed for them to return a non-function.\\n\\n### Examples\\n```js\\nf1 = _ => \\\"hello\\\"\\n// f1() ➞ \\\"hello\\\"\\n\\nf2 = _ => _ => \\\"edabit\\\"\\n// f2()() ➞ \\\"edabit\\\"\\n\\nf3 = _ => _ => _ => \\\"user\\\"\\n// f3()()() ➞ \\\"user\\\"\\n\\nfuncSort([f2, f3, f1]) ➞ [f1, f2, f3]\\n// [f2, f3, f1] ➞ [2, 3, 1] ➞ [1, 2, 3] ➞ [f1, f2, f3]\\n\\nfuncSort([f1, f2, f3]) ➞ [f1, f2, f3]\\n// [f1, f2, f3] ➞ [1, 2, 3] ➞ [1, 2, 3] ➞ [f1, f2, f3]\\n\\nfuncSort([f2, \\\"func\\\"]) ➞ [\\\"func\\\", f2]\\n// [f2, \\\"func\\\"] ➞ [2, 0] ➞ [0, 2] ➞ [\\\"func\\\", f2]\\n```\\n\\n### Notes\\n- Treat non-functions as needing zero calls.\\n- Every function will be called with empty parameters.\\n- Every function will need to be called at least once.\\n- The potentially returned values include `Number`s, `Boolean`s, and `String`s, among others.\",\"isHidden\":false,\"lab\":\"// example functions\\nf1 = _ => \\\"hello\\\"\\nf2 = _ => _ => \\\"edabit\\\"\\nf3 = _ => _ => _ => \\\"user\\\"\\n\\n// examples\\nTest.assertSimilar(funcSort([f2, f3, f1]), [f1, f2, f3], 'Example 1')\\nTest.assertSimilar(funcSort([f2, 'func']), ['func', f2], 'Example 2')\\n\\n// create functions f5 to f14 to be used in tests\\nrand = max => Math.floor(Math.random() * max)\\n\\nfor (k = 5; k < 15; k++) {\\n\\tr = ['\\\"func\\\"', '0', 'null', '[]', '{}', 'true', '1.0'][rand(6)]\\n\\teval('f' + k.toString() + ' = ' + '_ => '.repeat(k) + r)\\n}\\n\\n// create 12 random tests\\nfor (k = 0; k < 12; k++) {\\n\\tr = [\\\"'func'\\\", '0', 'null', '[]', '{}', 'true', '1.0'][rand(6)]\\n\\tg = n => 'f' + n.toString()\\n\\tl = [...Array(5 + rand(5)).keys()].map(k => 5 + rand(10))\\n\\tsl = [...l].sort((x,y) => x - y)\\n\\tlf = '[' + l.map(k => g(k)).toString().replace('f5', r) + ']'\\n\\tslf = '[' + sl.map(k => g(k)).toString().replace('f5', r) + ']'\\n\\n\\teval('Test.assertSimilar(funcSort(' + lf + '), ' +\\n\\t\\tslf + ', \\\"List: ' + lf + '\\\")')\\n}\",\"language\":\"javascript\",\"summary\":\"Create a function that takes a list of functions and sorts them in ascending order based on how many calls are needed for them to return a non-function.\\n\\nExamples\\nf1 = _ => \\\"hello\\\"\\n// f1() ➞ \\\"hello\\\"\\n\\nf2 = _ => _ => \\\"edabit\\\"\\n// f2()() ➞ \\\"edabit\\\"\\n\\nf3 = _ => _ => _ => \\\"user\\\"\\n// f3()()() ➞ \\\"user\\\"\\n\\nfuncSort([f2, f3, f1]) ➞ [f1, f2, f3]\\n// [f2, f3, f1] ➞ [2, 3, 1] ➞\",\"tags\":[\"closures\",\"higher_order_functions\",\"functional_programming\"],\"timestamp\":{\"$date\":1592018045814},\"title\":\"Sort by Number of Calls\",\"stats\":{\"completed\":{\"total\":133,\"ratings\":[2,2,2,2,2,1,3,2,1,3,0,3,3,4,3,4,3,3,3,3,3,3,3,4,3,1,4,2,2,5,2,1,2,3,4,3,2,2,0,3,2,3,2,3,2,3,3,2,3,1,2,4,3,4,3,3,2,2,3,2,3,2,2,2,3,4,3,2,3,3,3,1,4,3,3,3,3,4,4,2,3,2,3,2,2,0,5,3,3,2,3],\"rators\":[\"yv7c4H2jimSKHEjtG\",\"FJsvM5yqKuK9yMk9P\",\"mHT2bJb5SByfJ8yKS\",\"yjtdwc2AC4jA2RWtn\",\"Nb6LYPoQP6KJZt8mz\",\"h4jFmtbFn92eA4649\",\"GCsLzWAhLvniQqR3J\",\"RE4Mm9T6Q9uygAxGS\",\"L4FSbw6pjC7gtTFHu\",\"8raviPK67KKxzQWcF\",\"eFjGhq7C7bBKXjT6X\",\"n5wubRfh6zh8QRymN\",\"65dbBZynphj53nXqA\",\"p5ZshR8zhTqmdhKDc\",\"KKjSDhCuL7BRJT6b8\",\"hcm8sL8mNJTSfTdgE\",\"vt88eKvFz6ES8sbrD\",\"qvNk7pHSveLu3jqWw\",\"veKWMS3ACmRWTjiLK\",\"MNx3FXnfRXa5NHZBb\",\"aEm3Wvj2rFYRL8Lrb\",\"4Xv87xmdSnpYhi8hz\",\"QRoAN6gdwipTo7fwD\",\"nphNJCcuiQKh8bNHq\",\"ffB8T76Ye9ygL6QZZ\",\"YT9gaaNDJ3o9Lo5im\",\"kp2ZbCewZJAbfd7xv\",\"ZcJm2kuqJnN3CXFaR\",\"acHSYL6uQAgpgFMjp\",\"qJTbsuToGEtaYnGxn\",\"ccHAPAfdET3cnyPaG\",\"Tu22KsScr9mykuy8N\",\"sYJKcRHeWxTBoAdaL\",\"Xk2g4CNFAnYcvxiSr\",\"ybKXno4BJHrTbteGd\",\"bXaGdBM8FBLHf7N6Y\",\"va3fDAQm4sqSMoy3R\",\"uAbDBtcAWQx58mTiE\",\"c7uBxu2rgY77H5d79\",\"p5SfvBhzZXiYyoYx2\",\"THoTJTpHE2D4TGWAJ\",\"bHnhWtTzxPopvmyv2\",\"CCkHqRq5tcYmW2dsT\",\"yq3MrJoHHMPNCu55C\",\"MKQsH4dxSYj7s3YdN\",\"Nc5xA9fWMpsMYqtdM\",\"hNEhHd8qodq4P3h2g\",\"C98MJMWFQpMEsdfLp\",\"CNc6rmwhbxkxEhHAp\",\"cF8nvyGwfFKE5b2iy\",\"pWJWQDhqzDSmfaFam\",\"Po3v3dHCk6wYGKMwi\",\"T3Mx9HW3L9iyL6ii7\",\"zGouicTLf9nkLJzJs\",\"NchnDcEmsLTeFZ4FH\",\"kfT6u78hDJGcog9rn\",\"P3yuu5gsZZiGonYgo\",\"PGCDJpQMN8Sjn9Gm6\",\"dnM8xCWcmRzrEavm3\",\"RtfMuQN8AGyYvpY7p\",\"SjY6a2v6jMjGraDKz\",\"SYEuojZtP6yLXryHv\",\"Xa72Ltxaz3B8Xqzqg\",\"ped54A2xYmQLxtAe3\",\"LhR88detJY6HjrqeN\",\"tano2ymW2nHXWYB6J\",\"YgRDB9ZSLZ7AobTJk\",\"zvqXKeGRDH5dKJgv5\",\"KcpfY4XZ7fNamyLd3\",\"H7eLWZ3jFqjZAk6Ws\",\"mYzC7tCwKLbMJELsa\",\"imZmhnoo3Hd9Qc8sx\",\"ZTTJprKDvFqKGew7c\",\"8SYDBRtkZuW3pdPtG\",\"xMxrziDLvH5ZfCFPZ\",\"QjGNkRM3Xc78yShJN\",\"W9vw6B8MJy6HApeCt\",\"kWobGYgZWJxN6ZddF\",\"cJ55nM8ybCDmGEZyB\",\"wbsPpDQDPogCf9Szr\",\"s678Wirfor5uYL5T6\",\"3KfDpWtKBSYTutpyA\",\"wKPzgoYJTQMwSBSKo\",\"z7xcWEeY7H2RDGQnn\",\"EHjMfCfpRvnzZWRfb\",\"9vgvXZadhaxy25CGH\",\"ZNMvfJQLJEiroGqtu\",\"CXaDDoXfcEEmdLQh4\",\"AasGs8AeX9Lcb9xJn\",\"An7vdxqr8eqhRJcwR\",\"cRpaCxYRmGcN3Nsoj\",\"AYJSiAbgMoiSKxoc2\",\"JDLtv8kNLjkf7hNSY\",\"hCfruGWxw7v64teEr\",\"Ef3McfqD44hj4Est9\",\"hvTAyFPy4pJHdrYJX\",\"6kqD895tz6BJXo9CM\",\"M4vq8ATaS9Jg5X7iP\",\"g9MWzWQFLNXZFrETw\",\"wo4cpen33NYFHNca7\",\"6SyAr8bCYdpueFcax\",\"NzRNhhvGmA7yzWgi8\",\"MD35y7m8ruxqS7pAv\",\"EPbm7sva3HGJc5Weq\",\"e3tLGbyqGQ2Zn2GPH\",\"y3idnotLMyufTA6DB\",\"qcHEm7cqXc4WQcDhk\",\"qdGHBfnuWyaJrW6yM\",\"oDtGiNqDMHmhHE3J8\",\"5E3Chs9L5amC8qzTY\",\"vG53vYGTfNimnsjza\",\"ur2xbXwQ5c9JEBvhq\",\"8BJyXvRWcrvN3nttS\",\"3jkZkED29kaXmRohH\",\"ftWhqHv5SotzBPaEh\",\"8hXYu8tLp52JQCWPS\",\"bZJRih2KYrq8Pawyv\",\"wAELTYGHbAmTeFS6C\",\"g7FJ9phn9Ab4tiBZF\",\"RHzJMfsxQmDH6nZWX\",\"nu2kBAfKJzYFL6N4b\"],\"quality\":[5,5,5,5,4,5,5,4,5,5,3,5,5,3,3,5,4,5,5,4,5,4,5,5,3,3,5,4,5,5,5,5,5,5,4]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"quality\":4.514285714285714,\"family\":[{\"_id\":\"zi2Mvb2GZi3r34JKv\",\"language\":\"javascript\"},{\"_id\":\"zoJeCZCgmA8pS2iAi\",\"language\":\"python3\"},{\"_id\":\"5PWGzzhoNXadjnmHj\",\"language\":\"ruby\"}]}}"]