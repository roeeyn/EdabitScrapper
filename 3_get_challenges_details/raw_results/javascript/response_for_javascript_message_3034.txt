a["{\"msg\":\"result\",\"id\":\"277\",\"result\":{\"_id\":\"9N7zA5oiu6v5nhuBm\",\"author\":\"er0s\",\"authorId\":\"5Zq3aGdvh4LHBvnJL\",\"code\":\"function showdown(p1, p2) {\\n\\t\\n}\",\"difficulty\":0.8769430051813472,\"familyId\":\"8mQQgvvdz9KHSpxbJ\",\"instructions\":\"Wild Roger is participating in a *Western Showdown*, meaning he has to draw (pull out and shoot) his gun faster than his opponent in a gun standoff.\\n\\nGiven two strings,`p1` and `p2`, return which person drew their gun the **fastest**. If both are drawn at *the same time*, return `\\\"tie\\\"`.\\n\\n### Examples\\n```\\nshowdown(\\n  \\\"   Bang!        \\\",\\n  \\\"        Bang!   \\\"\\n) ➞ \\\"p1\\\"\\n\\n// p1 draws his gun sooner than p2\\n\\nshowdown(\\n  \\\"               Bang! \\\",\\n  \\\"             Bang!   \\\"\\n) ➞ \\\"p2\\\"\\n\\nshowdown(\\n  \\\"     Bang!   \\\",\\n  \\\"     Bang!   \\\"\\n) ➞ \\\"tie\\\"\\n```\\n\\n### Notes\\nBoth strings are the same length.\",\"isHidden\":false,\"lab\":\"Test.assertEquals(showdown(\\n\\\"   Bang!        \\\",\\n\\\"        Bang!   \\\"\\n), \\\"p1\\\")\\n\\nTest.assertEquals(showdown(\\n\\\"               Bang! \\\",\\n\\\"             Bang!   \\\"\\n), \\\"p2\\\")\\n\\nTest.assertEquals(showdown(\\n\\\"  Bang!   \\\",\\n\\\"Bang!     \\\"\\n), \\\"p2\\\")\\n\\nTest.assertEquals(showdown(\\n\\\"     Bang!   \\\",\\n\\\"     Bang!   \\\"\\n), \\\"tie\\\")\\n\\nTest.assertEquals(showdown(\\\"  Bang!     \\\", \\\"     Bang!  \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\" Bang!  \\\", \\\"  Bang! \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"          Bang!       \\\", \\\"       Bang!          \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\"    Bang!    \\\", \\\"    Bang!    \\\"), \\\"tie\\\")\\nTest.assertEquals(showdown(\\\"       Bang!       \\\", \\\"       Bang!       \\\"), \\\"tie\\\")\\nTest.assertEquals(showdown(\\\" Bang!      \\\", \\\"      Bang! \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\" Bang!  \\\", \\\"  Bang! \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"       Bang!      \\\", \\\"      Bang!       \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\"         Bang!    \\\", \\\"    Bang!         \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\"   Bang!        \\\", \\\"        Bang!   \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"      Bang! \\\", \\\" Bang!      \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\"  Bang!          \\\", \\\"          Bang!  \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"        Bang!    \\\", \\\"    Bang!        \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\"     Bang!     \\\", \\\"     Bang!     \\\"), \\\"tie\\\")\\nTest.assertEquals(showdown(\\\"       Bang!   \\\", \\\"   Bang!       \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\"  Bang! \\\", \\\" Bang!  \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\" Bang!      \\\", \\\"      Bang! \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"  Bang!      \\\", \\\"      Bang!  \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\" Bang!       \\\", \\\"       Bang! \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"    Bang!  \\\", \\\"  Bang!    \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\"      Bang!        \\\", \\\"        Bang!      \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"          Bang!      \\\", \\\"      Bang!          \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\"       Bang!        \\\", \\\"        Bang!       \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"         Bang! \\\", \\\" Bang!         \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\" Bang!   \\\", \\\"   Bang! \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"  Bang!  \\\", \\\"  Bang!  \\\"), \\\"tie\\\")\\nTest.assertEquals(showdown(\\\"      Bang!          \\\", \\\"          Bang!      \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"      Bang!      \\\", \\\"      Bang!      \\\"), \\\"tie\\\")\\nTest.assertEquals(showdown(\\\"         Bang!         \\\", \\\"         Bang!         \\\"), \\\"tie\\\")\\nTest.assertEquals(showdown(\\\"       Bang! \\\", \\\" Bang!       \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\" Bang!    \\\", \\\"    Bang! \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"     Bang!   \\\", \\\"   Bang!     \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\"   Bang!       \\\", \\\"       Bang!   \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"    Bang!       \\\", \\\"       Bang!    \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"         Bang!         \\\", \\\"         Bang!         \\\"), \\\"tie\\\")\\nTest.assertEquals(showdown(\\\"   Bang!      \\\", \\\"      Bang!   \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"   Bang!   \\\", \\\"   Bang!   \\\"), \\\"tie\\\")\\nTest.assertEquals(showdown(\\\"       Bang!    \\\", \\\"    Bang!       \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\"  Bang!     \\\", \\\"     Bang!  \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"     Bang!  \\\", \\\"  Bang!     \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\"   Bang! \\\", \\\" Bang!   \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\"    Bang!   \\\", \\\"   Bang!    \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\" Bang! \\\", \\\" Bang! \\\"), \\\"tie\\\")\\nTest.assertEquals(showdown(\\\"       Bang!   \\\", \\\"   Bang!       \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\"  Bang! \\\", \\\" Bang!  \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\"        Bang!  \\\", \\\"  Bang!        \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\"   Bang!   \\\", \\\"   Bang!   \\\"), \\\"tie\\\")\\nTest.assertEquals(showdown(\\\"       Bang! \\\", \\\" Bang!       \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\"    Bang!        \\\", \\\"        Bang!    \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"  Bang!         \\\", \\\"         Bang!  \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"     Bang!     \\\", \\\"     Bang!     \\\"), \\\"tie\\\")\\nTest.assertEquals(showdown(\\\"         Bang!    \\\", \\\"    Bang!         \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\"         Bang!         \\\", \\\"         Bang!         \\\"), \\\"tie\\\")\\nTest.assertEquals(showdown(\\\"  Bang!    \\\", \\\"    Bang!  \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"  Bang!        \\\", \\\"        Bang!  \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"     Bang!       \\\", \\\"       Bang!     \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"    Bang!       \\\", \\\"       Bang!    \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"        Bang!        \\\", \\\"        Bang!        \\\"), \\\"tie\\\")\\nTest.assertEquals(showdown(\\\"          Bang!   \\\", \\\"   Bang!          \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\"  Bang!      \\\", \\\"      Bang!  \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"  Bang!    \\\", \\\"    Bang!  \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"    Bang!       \\\", \\\"       Bang!    \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"       Bang! \\\", \\\" Bang!       \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\"  Bang!        \\\", \\\"        Bang!  \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"         Bang!          \\\", \\\"          Bang!         \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"         Bang!    \\\", \\\"    Bang!         \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\"     Bang!  \\\", \\\"  Bang!     \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\"       Bang!      \\\", \\\"      Bang!       \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\"    Bang!          \\\", \\\"          Bang!    \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"         Bang!   \\\", \\\"   Bang!         \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\"    Bang!        \\\", \\\"        Bang!    \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"      Bang!  \\\", \\\"  Bang!      \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\"       Bang!          \\\", \\\"          Bang!       \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"    Bang!          \\\", \\\"          Bang!    \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"      Bang!      \\\", \\\"      Bang!      \\\"), \\\"tie\\\")\\nTest.assertEquals(showdown(\\\"     Bang!        \\\", \\\"        Bang!     \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"     Bang!         \\\", \\\"         Bang!     \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"    Bang!         \\\", \\\"         Bang!    \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\" Bang!          \\\", \\\"          Bang! \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"       Bang!  \\\", \\\"  Bang!       \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\"        Bang!     \\\", \\\"     Bang!        \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\"          Bang!      \\\", \\\"      Bang!          \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\"    Bang!         \\\", \\\"         Bang!    \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"       Bang!         \\\", \\\"         Bang!       \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"   Bang!     \\\", \\\"     Bang!   \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"  Bang!  \\\", \\\"  Bang!  \\\"), \\\"tie\\\")\\nTest.assertEquals(showdown(\\\"    Bang!         \\\", \\\"         Bang!    \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"     Bang!         \\\", \\\"         Bang!     \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"     Bang!      \\\", \\\"      Bang!     \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"          Bang!  \\\", \\\"  Bang!          \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\"     Bang!   \\\", \\\"   Bang!     \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\" Bang!    \\\", \\\"    Bang! \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\" Bang!   \\\", \\\"   Bang! \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"   Bang!          \\\", \\\"          Bang!   \\\"), \\\"p1\\\")\\nTest.assertEquals(showdown(\\\"    Bang!    \\\", \\\"    Bang!    \\\"), \\\"tie\\\")\\nTest.assertEquals(showdown(\\\"    Bang!    \\\", \\\"    Bang!    \\\"), \\\"tie\\\")\\nTest.assertEquals(showdown(\\\"        Bang!  \\\", \\\"  Bang!        \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\"         Bang!       \\\", \\\"       Bang!         \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\"       Bang!   \\\", \\\"   Bang!       \\\"), \\\"p2\\\")\\nTest.assertEquals(showdown(\\\"   Bang!   \\\", \\\"   Bang!   \\\"), \\\"tie\\\")\\n\\n// made by @Joshua Señoron\",\"language\":\"javascript\",\"summary\":\"Wild Roger is participating in a Western Showdown, meaning he has to draw (pull out and shoot) his gun faster than his opponent in a gun standoff.\\n\\nGiven two strings,p1 and p2, return which person drew their gun the fastest. If both are drawn at the same time, return \\\"tie\\\".\\n\\nExamples\\nshowdown(\\n  \\\"   Bang!        \\\",\\n  \\\"        Bang!   \\\"\\n) ➞ \\\"p1\\\"\\n\\n// p1 draws hi\",\"tags\":[\"strings\",\"conditions\"],\"timestamp\":{\"$date\":1582902211670},\"title\":\"Western Showdown\",\"stats\":{\"completed\":{\"total\":913,\"ratings\":[1,1,1,1,1,1,0,0,0,0,1,0,2,2,2,0,0,2,1,1,1,0,1,0,1,1,1,2,1,2,0,1,0,2,0,2,0,0,0,0,2,1,0,0,0,2,2,1,1,3,1,0,0,1,0,0,1,1,0,0,1,2,2,1,0,2,2,0,0,1,0,2,1,1,1,2,2,2,0,2,0,1,1,1,2,0,1,1,2,1,1,0,0,1,0,1,0,1,2,0,2,1,0,2,1,0,2,1,1,0,1,0,0,0,0,0,3,0,2,1,0,2,2,0,0,2,1,1,1,1,2,0,0,1,2,1,0,0,0,0,2,0,0,1,2,2,1,1,2,0,1,0,1,2,2,1,0,0,2,0,0,1,2,0,0,1,0,0,0,1,1,1,2,1,3,0,0,1,0,2,0,2,1,2,2,0,1,1,2,0,1,1,1,1,1,0,1,0,1,1,1,0,1,0,1,0,1,0,1,0,1,0,2,2,1,1,0,0,0,0,3,2,0,2,0,1,2,2,1,0,0,1,0,0,1,0,0,1,1,1,2,0,1,2,2,1,2,2,0,0,1,1,2,0,1,1,2,0,1,0,1,2,1,1,2,0,0,1,1,0,2,1,1,1,0,1,1,0,0,0,2,1,0,2,1,2,1,0,0,2,2,1,0,2,1,1,0,1,2,0,1,2,1,0,1,2,0,0,0,0,0,2,2,0,1,0,0,1,0,2,2,2,0,1,0,0,2,1,1,0,2,0,1,3,1,2,1,0,4,0,2,0,1,1,1,0,0,0,2,1,0,1,0,2,0,0,1,0,0,0,1,2,1,1,1,2,0,1,0,1,1,1,1,2,0,1,2,0,0,0,0,0,2,1,1,2,1,1,1,1,3,1,0,0,1,0,0,0,0,1,0,2,2,4,2,1,0,2,0,0,0,1,2,1,1,1,0,1,1,0,1,2,1,0,1,0,0,1,0,1,0,2,0,0,2,2,0,3,1,1,0,1,1,0,1,1,1,0,2,0,2,1,1,0,2,2,1,0,0,0,1,3,1,0,0,0,0,0,2,2,1,2,2,1,1,0,1,0,2,0,0,5,0,0,1,1,1,1,1,0,1,1,2,0,0,0,2,2,0,0,2,2,0,0,1,2,1,0,1,1,1,1,1,2,0,1,2,0,0,2,0,0,1,1,0,0,1,1,0,1,2,1,1,1,1,2,1,0,0,2,0,1,1,0,0,1,2,1,1,0,0,1,0,2,0,0,2,2,2,0,1,1,2,1,2,2,0,2,1,1,0,0,1,1,1,1,0,2,1,2,1,1,1,1,0,2,1,0,3,1,1,1,1,0,1,0,1,0,1,2,1,0,2,0,0,1,2,3,0,1,0,3,2,0,1,1,1,2,1,1,0,0,2,3,1,0,1,0,1,0,2,1,1,1,0,2,0,2,1,1,1,1,0,1,1,3,1,0,0,1,1,0,0,2,1,1,1,2,1,0,0,1,1,0,2,2,0,1,0,0,2,2,2,1,0,2,0,1,1,1,2,1,1,1,2,0,1,2,0,1,1,1,0,1,1,1,1,2,2,0,1,1,0,3,1,2,0,1,2,0,0,0,0,1,0,1,0,1,0,0,0,1,1,2,0,0,1,1,0,0,2,0,1,1,0,0,1,2,1,1,2,0,2,0,0,0,0,1,0,0,1,1,0,0,0,0,2,0,0,1,0,3,0,1,0,1,1,0,0,0,0,0],\"rators\":[\"5Zq3aGdvh4LHBvnJL\",\"n5wubRfh6zh8QRymN\",\"SNt23Ei5dSNtfpEMd\",\"6BpBQnSGhzgvhXrEy\",\"yaL57wdXmgAZTvKfX\",\"oysXPscqrAzTrBGzx\",\"d9LBRxvADNBB5QJMB\",\"HA4E8z9qgq3FN6TNq\",\"uAS9uKs8KQmp8uhqn\",\"mYtKxYPbLLnePeJH3\",\"yjtdwc2AC4jA2RWtn\",\"zd9FLSzsGz3evKafy\",\"wYKZAPkL8Rr9tQDFp\",\"YmaKzhuQPKD5ofCYj\",\"ScSrTXFPQde8j74QX\",\"k5TGxBtLi9BXxeChT\",\"cp3X8hk8yNME7qoD9\",\"iK3EpmpwvxS4cSPea\",\"hCfruGWxw7v64teEr\",\"RqnvM77EkZZD9W2Q3\",\"Y9Nz9yafaibz54W4o\",\"eK72c7GWA37aDs5mf\",\"Kwj9nwCXCLL7s49KE\",\"ZWMHeNE2TDMFSKQri\",\"yjLeHTFzhHLvkQbfd\",\"g4NCSxxHqHCGMpWwT\",\"bX6tpTCjwoi6XMMbK\",\"9XnGoq9Tv6ut3zTtH\",\"JWMNd4G5DnDaXRdeL\",\"SNiJRRosrmSWssLj4\",\"a6y6PdyPZNeeKNZpA\",\"eANW47mfA359Y6JyP\",\"3aZvfgr2H2WF8Yog2\",\"HWtv72YancyTfi8FK\",\"NBozx3mp6y7MTntt4\",\"L33rn9SsFHYxZh9xT\",\"QvzacbnPMpaQNFYwJ\",\"5KkdkZ4ELkJED3fzp\",\"jcPZ5ySXseCB7Ec3x\",\"2CvHJcA9aXt9pvZwA\",\"3epHvmyMbdhZfZDfp\",\"EjPLq3QSJdGQFJdgW\",\"eX7TkGxSP2LbrhMys\",\"ZKyCvxArdB2eaLXpr\",\"3txctHTasvC9FW3ZZ\",\"mHT2bJb5SByfJ8yKS\",\"fY5KM83f5rFNbQrHL\",\"9HZbxzkzgz4CvePtv\",\"YChSfQ7pkGeRm59bv\",\"PAzNgJF54C2mYPkR9\",\"rbCyJWyghssSkqzbt\",\"TiqnGGfTYcXZengMZ\",\"DJwW3Ku2QhtZ6ELM6\",\"FJsvM5yqKuK9yMk9P\",\"66sTcsdNLrqYpA2zf\",\"nDapZM79jZANRFZyw\",\"fs5my5QwGaZCzXLam\",\"ydHWqofD4RA8EoSyt\",\"aETFykXo9gwwaWakw\",\"y7mnWiowDmiuPmZRK\",\"XozTusLjL7L8aFJxy\",\"XdJJBxtE7RCrsAgwD\",\"AasGs8AeX9Lcb9xJn\",\"EGqgAGX8wakhkrhgR\",\"gT5gEvCE3KBZDnYNe\",\"RE4Mm9T6Q9uygAxGS\",\"Zkggm5pG3NaE98Ygd\",\"TfDjX8y7ttD5vWJ3w\",\"rCSqPwMQFBTkpSJ8P\",\"N9bFAQPbrPtZ4awNo\",\"zTZtM9jRsu8eXie6s\",\"nszk96Ahqis4vGWjA\",\"MRyxodBpHe3Azn5Mp\",\"ZuuRPZRW4r3Bp2fSS\",\"X2rQFcksARzfo8BTk\",\"N7P4AnS8nzK4oupHv\",\"fMqXimJLsPiuhT8A8\",\"yWSGujxphYSsL63Zq\",\"vnccH7cqmHKMg8QCL\",\"W2qcLLJi9npPyBNdb\",\"RQwuHHy4rBgaQCLte\",\"gGETo2x9dY5TsWc2b\",\"mER4kEsRRxwbFgPRC\",\"DcGoe9pQoaKZqAzA3\",\"zgoq9MhrL2h75DAMA\",\"sbme4fRJjjBjYXRbY\",\"NgHRr5mPYxEY9BKJk\",\"tuTQhfZC5izTmXEgR\",\"HrJtdRbvHHNh7tMMo\",\"Q9KQomTTPBsrkAL6c\",\"H3yM3F3mukfdq9fit\",\"R35tqE5etfTYTfmGr\",\"DPpSwhhiuF4Y9YR2i\",\"7wtuhPesfhcYsfZaZ\",\"EWn8w8P3nNh7knatY\",\"mcH8t9AxkJ59F5RaR\",\"8BFSTCnoe2QggN64c\",\"KBPfSXe3yyJE6ymqA\",\"3WQ4Gq36s2N6XcTQT\",\"TxqAnQJoWbb5Hjm9g\",\"6gPHMpkEP8JuHxzpd\",\"TjwyRbkPanQTP7AYs\",\"2innwjWqxJHo4eRGh\",\"igpBmc8eNLxrj9QHo\",\"4YQYMKAinTbZjed9D\",\"DSJ8m2k2yk5QtQaMT\",\"9u7vte7cyj7AkSjP6\",\"Bi3HcWgZm98GEKRec\",\"jnyub52Fi79drGvow\",\"9qoWqLcHGiDX429rE\",\"yEz5HoxsZm2mtDezw\",\"cc47KqYEFRijSzYd3\",\"cMYvBQ85RMt2ptedy\",\"H94XNZemMZjP9sp8L\",\"65dbBZynphj53nXqA\",\"v2AzBqD64zLiRD9bP\",\"DK4ksqxgDytWFtdq7\",\"NXt67oNXXSeSqBxxf\",\"YER6iBcpJCuhgrYDN\",\"k8rMJnaejG3dX4ute\",\"Ctya2wbXp2mQRWsit\",\"rPAcJcoMAdeZSS8TH\",\"gzTs5oFrfZwh3Kfze\",\"DCbBp3YgpefPrERvp\",\"pBPeMTaRmdFWQezW3\",\"GpqPxePMyP6mB8bpD\",\"dDFJpK4pXCsQYuHmc\",\"kLntZSbr7GFu4B8rq\",\"gShMGBdg5KhD5f245\",\"AopCygLQJs8i78YSG\",\"hoWp2saDeDkMk5De2\",\"AaQPxA2APZgKgtyiN\",\"r7khPfJw7doCnj2uX\",\"Czph6ZM3JY2t9f2jD\",\"PMtk6T2F9eK95g23d\",\"RBbRaQJrNnp45JZvw\",\"733qgZ7ZSSSrzbXGw\",\"ccARnuWK4hxXuv85o\",\"CgJMsemCYJ7u3vFK9\",\"p47WfGG3Etbp2LH3v\",\"GovJdALyZMga74WeE\",\"vMaCFEHDcpZdguzth\",\"hTGFW3DLQFKsGcLqF\",\"2Gs6tqFoGt3rhPByN\",\"qBS24phrWoeRdhTpL\",\"ygNnCnmzZfy3r2m6w\",\"EPeA837HC2cXj3PEy\",\"fCJ4KDks3Q3cb79E7\",\"N7Kz6yxRr6DsJYxyY\",\"PgWH3Fq8Qdc6TcbHP\",\"eomLS3wh6tQPN8jtH\",\"CAkHGFTQSqhvXrCk2\",\"yKWmmti8QHJzrFPmB\",\"TnaqnnxBPEYckdSpk\",\"CdXigydGTBLgA577m\",\"evTTY9hwrtogaNxXn\",\"rdF6thfrJ4ZHeXMg5\",\"df4ibDoNCfjNeYCCT\",\"pi76g3eRpnKrhee2a\",\"qaR8DnWrTk8Mus5Q2\",\"vEq3CbzoQgTuQRf59\",\"fdaHcbbQXHbtPoubG\",\"u9cRf5kvtpRB5ffB3\",\"HtZLHkFGFv2GtaDE6\",\"RJBBzPvwbMDfMFbEB\",\"oyB4Wr4EeZnoDaa8B\",\"QnyJJuTadGpQar5DJ\",\"C3pYzoez6iSKfPpx8\",\"JyCMxYHqvuG6dDzSE\",\"Mq6PLk23mwSWrPmq5\",\"GB3NHPPMge2CshbY6\",\"Akq3fQcPRgPrWfsye\",\"9sBjdiGkeoSMqLj6a\",\"HzRFJ3wcWTeQ2mjwD\",\"YbWfoQnxHi8v52GD5\",\"AZ5usHFYA8sRrQvmM\",\"QAZ5DGaWWYhku4BNz\",\"bAvZKuLAnKq8mSp5B\",\"YcCsyuRK459yc3p9e\",\"He6kxXnL8J8bnjaGk\",\"6oNkXuuDRBTFvpr8y\",\"tAF9Gf6PiGogbZuWs\",\"uXhqhqGc8kpBBw8Tk\",\"Gc2bmsof5vD2Hsgqv\",\"M7kpJSXFx67HhrTaZ\",\"4Tt98SEHk5s5bmxF7\",\"YucnDs2SaBiJyo9TB\",\"Lzj3w7QjdzikynsGG\",\"JgWpNj5G78uttDiE2\",\"LCn6qz2GoMr5577Rd\",\"CiZxX62nvAYeyptD6\",\"WtsW6QCnfqecL5KDN\",\"EufkHMbcMbW6eR3Ca\",\"fnZBhxSBZfsGpHEKg\",\"e3RMQNoaEYQ97RWpN\",\"427wjjp453HFTG4Xx\",\"z5ebtimXwFFJdYxoa\",\"psw2CP35AmCdox6zX\",\"ebPdPyTHed8opA6K7\",\"hkoxJvdgC767RgbC6\",\"2JkAedLJ6ZLpFhnPj\",\"vyZh2KxhL95jLoQeu\",\"8LyeqDigxYZDEY3dX\",\"Neha2qf8ektKFbiKy\",\"mf8xW5DhPjfXaCEsQ\",\"Q3o6wJ5ZZER2CMZxG\",\"fw9Sy3xL52hatCF6e\",\"HTAm62DZytAEFgSnu\",\"PKJWNTRAwaGqeoCs3\",\"3afKyNukc4dgwTMPf\",\"8ZJKpC9Sugf7ia39v\",\"8TjbiqgDeKTBjnzua\",\"eWnhcEKpoEYThCtsY\",\"YNeswZ3s5s9Q65vvM\",\"9LNypzMfikBgoGGMK\",\"cRnGuHFSFzie6mBra\",\"wnRpfE82qTbPocDGQ\",\"muiBgNejwNH9ypoPp\",\"FqkMaChRYwuXdvQCz\",\"nRht5DZA6YcH2kAo6\",\"Tz6J73FvF3XRXiiKf\",\"stMH6pEaSbW7ick34\",\"TSrHMxuLpRMiEjyAg\",\"4fe4zQxHmbt8Mh7FZ\",\"vBBiyiQHYxnbJcvsH\",\"QDYpRvKEb4mtaDDgn\",\"DhXWvdGZnjh4Jj2Xz\",\"AtLD3QqZTkNfHy4ps\",\"bccpuh9zqeueFLWEM\",\"Fkh8NdLisyquNfxZf\",\"46mWymSYR8fwKp5Q7\",\"3QdoGF957m2MCWRmt\",\"jnd3NC3pc3Taq92Lg\",\"mwDdQwbZN6tXwAbBA\",\"HbBjC9qfSN4tLJQEy\",\"ZZKMB5A5pQZuec9zH\",\"2oGfKJ5LP8y4Dvuzg\",\"c9HdmQYYwX5hkKDJp\",\"mKRQBDHYSqv7sHnhN\",\"DnTqshvTjKePZHBYd\",\"huvhdPbyyx8M3HZeg\",\"X4wWncu8bJMz7KDw2\",\"YeTTwGDpqDFZW2SaT\",\"PNGoni4SgDhkiqFq4\",\"uDL732cxhJPfvnyn5\",\"hrM8CqwLiokiYvjxJ\",\"Ni8RtBhmx23mWNNpv\",\"2EZpycLrB7PiTvjaZ\",\"q9BzXDtYdTAANjqMJ\",\"sBcdEeTaW7K63NMfg\",\"KAwnrRNbgiZ2uAr8v\",\"5GiFQEXyFgz4cQzSH\",\"czvYLtbwDMexqknk9\",\"ruzwBPphPDRgLXdnP\",\"n3oJrdsTDcYr5zpis\",\"Q5aXcTQjaLsHwmSF2\",\"TudmQeKSuiCHMMpYb\",\"N5hgkCKWfnY6E7NJ3\",\"HwZx7c3QFWmt5x4oE\",\"SxfJ5zFvbNDzygDQq\",\"ZxBY8ec6d5ZzXQHXS\",\"E8PjcSCd7SMeET8LR\",\"2ZFoLTxcCARhwc8xX\",\"aRkMmSybqiuMFrtBq\",\"fZNjGTCDmABTgeFTH\",\"4BJctg2G5pBYawbve\",\"XPFJhBBNhQ5F2Zqhp\",\"Yhuep2SNCjQ25zcEG\",\"Y7xPTPKpNAEiM2jkH\",\"xkv4JqY5BLb3JbC3C\",\"ipiC2qPhKZWsAouJf\",\"4huD2kv5xRLP6Bqow\",\"ZeiSH6N2n8kfJB7Ex\",\"n6d3bpf7nN3kfyysv\",\"nXToJ5kpsRfi4nyw2\",\"KkH3Q3nX54XWjR4z7\",\"N2PTMCxxkQ5ndhPEt\",\"szQg8dxKNNre3v3Jk\",\"a4oisqyY8HwS22iDR\",\"Aj2kFDxuXupauHpgt\",\"8Gw94yAJWfg4oxuPw\",\"f6uGKbmMdBYCjrMBh\",\"zw7g7T8wE5R5CBhXr\",\"G9sMuskBrFWEDotT9\",\"wMQ6L7szw5pQDJmAr\",\"pDgfbq4LfWDsQHjD9\",\"mqcTZL3gbWX8cBXyL\",\"Gn75PMath84pwavMg\",\"QDZxeNEL8PY23vYyi\",\"nZnc6Hx435hxxYWP9\",\"mu4gEBK9p5yz5Bgn7\",\"98NmBCC7jEKw5j352\",\"xMxdp5oCxmeuYxhpa\",\"eQwJpaSYMHoicKefb\",\"eQXwk5zGckM8tCWYH\",\"vTFhtrnHiJXhyvoSa\",\"p5ZshR8zhTqmdhKDc\",\"9LDTSLezN3xk4hpAx\",\"vAh63eGRwkuJtoP8v\",\"noZDgMMXkcPCLN8Ye\",\"NphGYXzB4CDM9Ruoi\",\"s6LWiTd6z5bBCTfdN\",\"a777e8chPvJkY3tKa\",\"wePMNuyyzZH2TnyHZ\",\"HmtypFQ74LcijaNv5\",\"8N9tvpEaLrbrzj47L\",\"7CwtusvbMLqfnCjpi\",\"8zaaz4Hct624mkk3Y\",\"drksF7xS5NS3jZ4HM\",\"Kp2YPidmgx8mPjcGd\",\"3TAFGjvMoTsxb5AH6\",\"NczXsSrYNX6nDWhjF\",\"7kFLxp2xuXEzTCRXY\",\"KpXzNmd3gyz2Mwka5\",\"cqY8jsw7NAxXMqLXd\",\"v2rqkTX6kAEeQ4dkQ\",\"fz77bieGQ4oEpYrGB\",\"34bE6mric984YYLZQ\",\"gNEsBtqrf2PFtqmaj\",\"7F5DzpKsRfd3WSzyj\",\"9AcDjAhe7qYfhCqd3\",\"3bhTJqFvzBdMbns6B\",\"bL8eZSJ7rrCxiao4C\",\"pHzhdujcjEdbaoDkz\",\"fNZ78midDpQ3jGwWJ\",\"5JS9bhHoEKj46FQuJ\",\"CNtocddML2SGMtqdD\",\"nCvWGvGzn2Rrjm4BD\",\"FYmqiBprQi3D48dKQ\",\"xB3cy5isYozKHdstv\",\"ByXaraYa5tzFG8Gmj\",\"rTtmET7dfiSyihdH5\",\"SDtZFL5NzAoCPofXk\",\"8w3vs8RGjmq4mf7h9\",\"buX4mCQhtXCfBjeno\",\"edaKYaap6ugMKpRT8\",\"nkH3HfJXLMNcBMM79\",\"mfYrBKwDr4hXSFuuN\",\"2zKQWLmEBw8FBs4ZL\",\"qhQC7ZufFzksaaBNj\",\"WbXHZDxj5femhG7x2\",\"yrLBMbni8KDsC5K44\",\"v3Ks8dHbSuhxFskZH\",\"Yu5Kc5oSL2D2rwA5o\",\"cCPrEfTcM4mqscd9A\",\"P38cxfH63mA7a5nwA\",\"RSaDY9XcWcqN6tuYr\",\"JdC3h24bKrW6KDZX5\",\"fheSxEfP8Ne98rrZK\",\"DHwbkbzYNpmkSFT7u\",\"RwLKDy6ToE5xpctXc\",\"Duz843jzicTpuNEYW\",\"PGCDJpQMN8Sjn9Gm6\",\"QyWrwZMWYNuGiEgFz\",\"BfrabHNkzKfWB9Dif\",\"mFZhdXFiTiEqaSR9H\",\"mBXyjSZCHMK53zCYR\",\"stPbWBpgp6WnxBHm3\",\"6Fz62jqSTF9dnHns7\",\"dmYd3FjsAaLZCMHz5\",\"pK5SNtAgH7zKSvmey\",\"6ixfX5gbXeqiqSD6v\",\"Wv9v7fHb8umujfg2j\",\"qAMzr8zprvS8rmKqy\",\"hiS57t4w8S2TwbeGY\",\"rXFe2NScePpTyoh2e\",\"YBdjJDaGcmJoytKQ6\",\"27GCuaiySpH9ujEd6\",\"2tCCFm5iefjrRSaxv\",\"QooGgrmnpJb5gXJ2c\",\"zQLHZ9pKvvSWmmqYt\",\"JPcvG7z3cqtrkeqYf\",\"4NAKCHSxR9cNfPLTh\",\"4Np3uu6Jj67L2CxiR\",\"moe6ztrsNzFymC3A7\",\"GEzaJZ2cPjENT4ERQ\",\"ucaDnFgvkB5hp5srb\",\"3WtHp4MBzciz4AE8M\",\"kuCQeknZkt7vmwsJZ\",\"EthcWeSmyQKcRcbpa\",\"rRdw62i3o7ifMidfa\",\"WMXYYEaunmfs4qCWE\",\"wGzvdZEvby8qHh9br\",\"aBi4GtZ6t3wFQD9v5\",\"Sfb5RNdmiKSDyqyp4\",\"X9zAFTk4FBXPkB32z\",\"qFJpEDM2Ep6v4tqPz\",\"73eF6MtD723njvn3y\",\"2d7ToTiuvHtd6WnGx\",\"wrxHLcdBEri4cyK6W\",\"Xnok4nuqpgehuCtT5\",\"yikuFzeuYMHgeYHfa\",\"bouLPnCv9Kinctkkx\",\"DFdJagsHqWRzH4XZb\",\"DaBQKtm4xSgrxqTYF\",\"sn9HmYyS3FStbca3b\",\"3X9cEAxCXoqJ5XANF\",\"mZfi9nGuBcxdYF6Wr\",\"faJnKXiGDg2bi3Lpn\",\"Ya3eHgs8x3unZRLpb\",\"aBFFoxCrqi4uHBr3k\",\"4nFXeGakoCjm5GXYa\",\"DE9johNuSGL5SoHgs\",\"bKPvJHLQ3ovQLt9MJ\",\"Wz2wMpBR2TmkEDgM2\",\"PKJWzgQKwneuaS3Ap\",\"4Bjd6DTGhAg6nhZkn\",\"JvCbqc2hc7PvJpTzo\",\"tpicSoHyByrgLB4Y2\",\"EN3EkhKLQiYqBB4kx\",\"DonSAtfbNKvMJMKbr\",\"r7mZLgpQWzRiGddL5\",\"e9Cknxbx6o7Nb6REs\",\"5wQ2LQsx88nYidWZW\",\"C9LKGu2g5hSijvDzA\",\"HFuNFZpdKCddzbuqc\",\"3FCFMzpdTmjt6dTTG\",\"cHB9pWAxvt6ZuxxFu\",\"dG2Ppqurn6ESgD7Mf\",\"2nCWnTXnmawovwdv9\",\"nJHDJf7DCB5MtK9mW\",\"7FrbyzfjPKYChtsqG\",\"mrEZChm8FX5NGxsDM\",\"mE2WrTtBBq4zuLdWp\",\"8s5Bdrn7RTga7DL6x\",\"njhrXtkj5odNaDfJv\",\"A293HrcdJvFk9yLrW\",\"GSgr8hLGHeZPde7WJ\",\"HTqtcMjifQFZHJoqj\",\"mynPw27Hb4jssoDHt\",\"XFAp7Qr8dW8QKjKi4\",\"BhL2usgiJGPvHuGFL\",\"reXEQfetgtSYcY47Q\",\"DNY4Fq7r3QEPFkHqy\",\"FLNpwNP2rzWyJfodd\",\"btgbXHhjjWMyaY5Te\",\"D5WSwPoDTkW8i7h8u\",\"nfXGHENb5md7m355s\",\"fCNPNM7ngMtZu7B3N\",\"Fw7NbWPhzBK4Qrnc7\",\"gW5tKX5ALvy5PuYh6\",\"aWNggJDngk9DhC4Sg\",\"QRv96jmNaYsWkxQEG\",\"pixs6EBsKLMRPdPDN\",\"qm6JTeEcgAXCxqzHE\",\"QGjY3hgPYPMmMjc7j\",\"rKbLrFu2NqszSNwEk\",\"zAMR5yM6wpzfE3a4S\",\"M4vq8ATaS9Jg5X7iP\",\"N4R9k7xyEt4m7jqy3\",\"vjvk34DTsALwKJ2aN\",\"x2Cz7S8rCKJqCE3Xe\",\"kjvgTyRFyKHv44DcH\",\"FGYBMbExbwHLD2Wdn\",\"tpdvoQJuyoawJYoJB\",\"Mg9qiNEnmtNAexb6o\",\"MExTe2gcWoD3GmvaK\",\"hT8T426rinDzZytaC\",\"qWZ9QPopEKoWxWjjx\",\"LKhEu25DsjfQfteGB\",\"sNcDN3s3rH9wcNg5n\",\"pxpCzxka2StQDEvd3\",\"QNnRGeEwhJHDsdvFd\",\"4e8ixHLtD4ipXJL4N\",\"vM3WBwMrJMeHsNiQ7\",\"AFfw7cGg83uYk2Miy\",\"mZPoXD4ktze97Xm4Z\",\"DQoaxGxfRdYr2gjWL\",\"L4mEjfrZ974Y7cZjn\",\"zas8t64yhCoGZuhbn\",\"DT44RfRiPRbpqoXWB\",\"6cxwuT4uk4yLHfkiq\",\"D8E3v3AkHCbXNpvNv\",\"nAmJEX7BkHLd9LsG2\",\"autAvCRgkHFkLEC5F\",\"roCqjydT4K7y2fchB\",\"JnYehNpm7BvefLuee\",\"7gZKfvwaeqsGKXMEN\",\"NhWz8qCPcbcfACj4P\",\"2cwMrAxfHtCzoRLJ7\",\"4G4Gev8LHRYEkWHBw\",\"nApoSrTxxNGmm3fQv\",\"ttuGK7od8simjgmCJ\",\"YKCx8gSnNYzPikLBe\",\"st9niq9Wh2fB5oCia\",\"gt9zhJjDZE5MraxoF\",\"gyxZRTBAr8YydmqBd\",\"pLpcDC3EYx2DDQSdt\",\"4MKpduDjamYXzRtuy\",\"yBSTacfu3WrFL6E3w\",\"XmfhnHPgFJ7xfbxZE\",\"AP9C658FdY6ss9xao\",\"JZAWh63GC4gKbgPpA\",\"Zp93Tit7CTRdkCMqp\",\"SuATwyhoRpJ52q2aD\",\"jnewuuwstbRaRm8Kq\",\"ewpwhjMu7XEjr6WWf\",\"tseyDEv9zaHBMvLL3\",\"RnY25enEBE8T9P5GS\",\"F5pfQBzzkgfkvuTds\",\"5gMvgigDqbmARdvPF\",\"RJS22bAq2aqv3Rs33\",\"SY9Euc4kQfRgetXTd\",\"jvyhi5dWYiFkJuF8R\",\"z8R4K9Cd7PNuh256A\",\"Qp3LB3TcLgoiJSFCc\",\"EkaHge5WaoGpiCxpx\",\"hzNDksLNE9PRurY5W\",\"c7E5A7sYBtJdmtKZi\",\"mBLFsNShkz3Z8mEzr\",\"3SZCo3Gkx7t3TyJXa\",\"kjHKdTBzc77g63Y6P\",\"dk4ocPsWCg3WN4Pja\",\"5mPnrMpJ2nCCCWFHb\",\"dXEMmSzNjnaoi5CsX\",\"csXjXMhiQfbCQ9L7b\",\"mWEKL44psZ3MJvyyS\",\"Dw5DvNWE3YBa6xf44\",\"A869Y7jAEBbFZrnvn\",\"jHhokuGCxJq7yTPd5\",\"DFdSqTMjBJLKj7hoZ\",\"dCTYMLSCxgnFSnKDD\",\"6b4ToLyvHrwFPQowG\",\"JW5J6sdJHAmDmfWnE\",\"P82sQiEzRhDX4mg2E\",\"2dZn9cadr5eBNBv5f\",\"vSPc7MGK5Poy8tSFp\",\"4Wp3veuCpPotHQnEF\",\"qGTxryJr7Gzb8ahNa\",\"ZM23kkhsGtwcsRKNb\",\"io7u3uRDrfKWNQNZD\",\"WZLNbDEf5PACQZDWg\",\"Kntd2rSgWYWp8r4sP\",\"nBJve5CzG6WAw7WFQ\",\"fRy84JcK82Zz5QeZ9\",\"iCr5TEH8Xm3qRBnXW\",\"NbG4dqLG9GTznvy24\",\"J76WbMXGkFJiw3jRd\",\"Qm9fMjEa3EqAfjeKv\",\"XAX32dz2EByd3qAK2\",\"D5YJ2GWZQMPGmJ4rv\",\"erXMPZcFQ7cexpvov\",\"JTHwnEbHwpef6RtS2\",\"N7fwDd5JRDsuX7EKa\",\"y3JPtjouuuGu8viqL\",\"MbbySGQmkzbjg373M\",\"jED84My7PjSKANQsX\",\"aEm3Wvj2rFYRL8Lrb\",\"kp2ZbCewZJAbfd7xv\",\"cpa3TQXCwYX36f3vw\",\"y7v2yNvJFTbnz8R5t\",\"cDXZg3q6XxA44ZHTE\",\"d23xNRmAHuPQDi4Lr\",\"r5oh2akuGTDrJdRML\",\"n7YxEE5wQrMT3ZvBE\",\"tbNcoAj2uWdWst95w\",\"ShEczg4C8ZGnziiZE\",\"toiutPpcm3XAEYDCG\",\"uiMkdNXE9NWLWqezT\",\"MmtFmL29LfYYY6rtQ\",\"ayv8rg7zQviRA6Cp8\",\"2eKXZep9kgTFfkono\",\"nyh73Tr6GhqAat78g\",\"QnPD4Sv6W4LHc2Qng\",\"4uPCFC6LBJYZ74uYu\",\"CcrodMrL94keXBSb9\",\"mAARx8JHyScLzDA5W\",\"v2w9GN4jHP2fgYdeE\",\"75NY7vqimaATzRdAX\",\"HRpELhvG59jPywCdH\",\"tK8EWGpNijjWygka3\",\"zJTXDTdbwnopRazGo\",\"7iJbwKmKpQa3HKe8m\",\"tc2xHmNjxbSb524RW\",\"69JqnbAinX7DNjg2c\",\"daKe8m3yuip3WwzA7\",\"tmbJJRa2K94stcXhi\",\"YGucgGLy396nzHmLQ\",\"CC2aFwzc6CF9hjdbb\",\"jtzNdgDCzsekkdpxA\",\"vNfR9v4dS6whkiwJJ\",\"FZusbLsNGKixjpv7q\",\"vC4EgNj2acMMT4JpX\",\"NcrS27k52L7cxBcim\",\"Wiui6EEuNHdRy56FR\",\"B7bdDjP5AmpLJHKBS\",\"YLwJkF2wuL3n9o6a2\",\"5w8cKebiF9HJ4k3Rs\",\"7JbjqgmbsxeWDy5oe\",\"KGg3aSjT63SLQYn6k\",\"EcBw39vkywQsT3Y2Z\",\"u9aBGES7cijxrkDsd\",\"3vrj7So7GifNv5JSi\",\"5wg9dQBL4eWDFdrsb\",\"Dm66JicrhXtnA9D9P\",\"b5PXpgwx7oj74YohC\",\"eqEJPqfuDzt8xJRyr\",\"F3mffDfGmCrgAXoYf\",\"9t7udKzMuXKhB2EMZ\",\"MuBMB65kxWCtfsTvR\",\"3h5dGS6W8akioYnWD\",\"u6pWu9qefWtqaaTm5\",\"CgQzKpBnsgk4EA2aw\",\"qAEumdjLRx2AGAmzw\",\"Gj3vBwf7T3Bq9ysNb\",\"Rxw5az3KooJQhDNte\",\"dGugwhA6uwwjPGAa5\",\"r7ew9kC6fJN8r4hqP\",\"NAHQrNmxEcZaG9vs4\",\"RtPhDuwmvWNHiBxmG\",\"yvaWRRExohhQPhD5B\",\"pdGuqmMyeN4wZaWwv\",\"qjra5BSuxSdibuMcs\",\"MivGpkGnPn2WFMbCf\",\"tNvaBJZcgwvypkQBi\",\"Rrb84KWhN5tjhMGMA\",\"MtHqExXRjjRa7rSGR\",\"eiGgW9SAaY78yrwgZ\",\"DjChaA6HXG2vBe4fK\",\"ihTSN4G98CHRmZqra\",\"tPtz279rzBX8kCWMr\",\"cP8dWEi6JthrDKZDs\",\"jgyuzt5BpA3ohHG96\",\"utCCXtDeKHoEugcP9\",\"pXuQ7KqxWt5cAxSa5\",\"55gtTByNL5GiTZKZ6\",\"JBgfey5Cf6ES6kK2q\",\"PYmJKmjjoACXdTa5Q\",\"PLAW6hHCDwfFyi5yx\",\"8PMnqRWRuz7joy3Ec\",\"mp4S3vay6oAz6YyLQ\",\"P4LXfndRKxtFtGT5R\",\"rvvEEYKgQBfSPpJ67\",\"jaGDhPMsqjvw7HAuZ\",\"pER3Z29q2fkQdcxTw\",\"QJPS7tPi4N78X4D5H\",\"AhaC4AZrqF2FkcGQ8\",\"pGh7WykiPe26fHJYv\",\"QbvEbQvdRsP5KAq6Q\",\"RDQKnfhXQ2arpmvSk\",\"gFpcw48996SQjoe6P\",\"ct42f2gGpMXSd9hXM\",\"jLSZdBseR2kfjt8dL\",\"eMuCpJ2spXWkJjWNz\",\"DDokdbBKxv49M445o\",\"NSQ6WSToCkX747aZp\",\"8NQNAXtd3LRTxeE7u\",\"AeZfR5dt45GYsMt8L\",\"yuCDAgu29rTXQZZDz\",\"xAfaHANrS8Zs2475d\",\"7kENXQQ8ABiPGfBRD\",\"BdvdJYwHZr7JpkHsn\",\"oDtGiNqDMHmhHE3J8\",\"ZKQNFwJENXcjJvBfy\",\"RbXkPwrmSowEJ7Jk4\",\"mtnjnMWbijDjGrRrj\",\"7JQ3f2gW9AcmiGSJW\",\"rJGzFvBGYxdukwt8X\",\"vGKxRcDYDsXzTQuEQ\",\"SmDjMQPDKwywmyrnh\",\"Fd9765rksgPK4E2Zy\",\"PsccWumihMv4fv3ri\",\"y6j9KE4xD5itZTfSE\",\"WSLPmXqJzRjtYkuwf\",\"8kC69AiRv6XA3xnyD\",\"rFaDfKrW4z8drsnb3\",\"N3CNtWZz4ovJfH9Aw\",\"vKch2w3b4keMd84jj\",\"F3d288xKTC7sjKNxf\",\"2Ni3PzJAc5fAhqBkb\",\"gavnf7iyvHYMX9TZR\",\"yHyFF2Wm77RwLydTA\",\"Lqff5oXre42XN9beE\",\"oGA9Dj9za4aRmnLpK\",\"8BJyXvRWcrvN3nttS\",\"EPTkbF4WQZ8tHgS9B\",\"Gw9aspsSY3RP8M2ru\",\"jyCByAZwu576xDwEL\",\"bPC4LFMEhoXn8qEWA\",\"eMjfHFJ9nP338zJCx\",\"pZickk9HxdkGHFgFP\",\"Yp7uvStL97cC9fKkY\",\"NMzYn8ATCpGWdDEPh\",\"MLj5EZFi87oKbePn3\",\"EsYKpvPGPnYN4jfTm\",\"c4FsZDmbSzi7KZW43\",\"qvcfrvBvrbY4g4N7T\",\"gvKYZcK9rkvYsMsbG\",\"pEKfdTrL5RFSqKJ7w\",\"pctW2DbX9NkGHoJWR\",\"yFhZeuFM7cFL2hkb9\",\"6HKg99Gn66XD3Yciv\",\"LobHjKEdgWi5xfqzj\",\"h3gt3mwpCjyiNb4Mm\",\"srJ34BaybkQh3qRkM\",\"uAbDBtcAWQx58mTiE\",\"gjHhccyJM9rze7XWA\",\"4wR64Jaibcom7tbYf\",\"cGxRQ4ixcaysJxeDW\",\"j2Kz8Yxd3d3ZTxHfj\",\"pxi6zrBi2A8wbq4uG\",\"pWYjN62ZAKQZ7Xp3W\",\"amLjL3rf5wSnsXypv\",\"m5ydypdrnCPpKy9rT\",\"GBetMwCHWXeM7DjNZ\",\"TTsiKukYnTL6yenZs\",\"MuXiZZGr89G4qGrtZ\",\"Lwq6Mm5adEsmjD6Rx\",\"eJdvKaLxBGQh796cn\",\"WbZPY2yJThbCeT2eT\",\"WBBN35jGBzzHWeLn5\",\"iyXreJLEM7jv3kJAT\",\"pywK7CCFnPXCWeM4M\",\"j5FSQCayX3By73CCw\",\"vz9k2u33P5GRmpz3X\",\"HqLqZdJyt6Jo26K9m\",\"PLkegh7jJLoeCPgTS\",\"w7rb7ZQTLX3Ev47Qh\",\"EHLyKPrnhFdNh3tDi\",\"7weXNh5qx7WMJZMAp\",\"upwcdBMkFbPYxDRfh\",\"5WXmFFY26bMoam7th\",\"sLwrv4SbaMaAsrZkD\",\"YSmLyP3eRhcFjJPzg\",\"ZbW82yA47jTyXZkQu\",\"tSTRNttBvkkj6qAtK\",\"m6qKkBY4aPWziyJTj\",\"jXt4aXxqxdKA2qv2r\",\"tF835tLSSk8cnRaCf\",\"CFNWRPs3cCTJw6p9B\",\"zouCAKuj3oPpAPzZQ\",\"kLti2XtELBrdMpxqf\",\"ENP9hPvzHvCypTS2Y\",\"XuHKZknbwW3CEXyZp\",\"H3q76En4bsaZpbPeS\",\"BQZ7aje2pA6Y99g89\",\"7BcYBJxFLjP4SLtn3\",\"fb9kjfGjafSCaGKMk\",\"3Gf7ikLijfoxabiPY\",\"MffH5FoSXFDpLNFvH\",\"m86y4gi8hMzGz8js7\",\"5yg5WsayisbsZqP92\",\"2ptN2mhjFwFcHyPZd\",\"vg6AMRWnqsgPFu2Ka\",\"if9a8uPL7LABuhHSh\",\"vn6nR36mdfY8z2zKx\",\"LwD3CyYSiBfg3mA4r\",\"4JFKLQr4mn7BwM3q7\",\"aGhLYJySLL3MwvZwJ\",\"geBNTNEB3sax7ToBb\",\"bHX48t6EJJ2tntqjn\",\"7Nz3GAqN3SMgSiyTT\",\"LEobwrgakHNJZySxd\",\"9ibEzJsxYb7FshLJE\",\"QHwYcek6zZ2fWLTsW\",\"F2R2X3xBdsZPCSQ4c\",\"yBrcMELKcb8ctTi9Q\",\"8EJ4j2fcfjTJ7Zrzu\",\"w795CB7Zr5C8A9Ptc\",\"ZY6Jn6noDuGa2hnE4\",\"JuHD7Ac3tcXLhmBh6\",\"bxiD9GFAH6sbk3RiJ\",\"MoA4R4mdoH9Bmvr55\",\"erQgJKaHaETRcqs4x\",\"6upGvwvXgiNukxpxE\",\"FFitefrPT7KoaM6Zr\",\"d3SrpvyDScEDnHn7Y\",\"2pmAvjH5ewy84WNqx\",\"jjhd2AoDMvLQHKBQp\",\"qupNgvERk9pM2JPn4\",\"cgCQDs9i7yChKeAjE\",\"SZiBPsLbecurYt39F\",\"BDJA9yyi2ofYYQHMY\",\"huGXBAtxBLZCCX3X7\",\"DYDJTyGgKFnBRLm2r\",\"MvW4Kqnf3ee9QBGR9\",\"xYuAwzqvkRdsQFCTi\",\"9s2ci4btfatdmQTyj\",\"LRxyZwXywbwzt255M\",\"DSk5mn9Xczr8e6jvL\",\"eKSJgCaiy4ReJWXTg\",\"WpSswQEj3hFJMSrRp\",\"mpLFbFKjY6u3nsDMv\",\"Yf9n496Tgp2qsJorD\",\"hiqdJYiwLg5vfyAvX\",\"jpSy4qhuDNwPk9mrf\",\"94MRuPZRmFjXQtSnC\",\"LiY5D7nY75tJcf7tY\",\"7q8oBsCHwn48Ppnrq\",\"vikc9jpJbbWsYXhjW\",\"LvBYSaHtLuGLXryvP\",\"fe3gsFT3MbZ4azEC9\",\"J7d397iB5GuWRAMfg\",\"eNtPv6JiKhDqNq2h8\",\"bfYmA3LMvhSrK59cn\",\"HNe9zjipSZMMyDgTX\",\"dRT6LAbCrT5FBDJhi\",\"DPi9QGLctq2y76KuE\",\"XrqNzJ2FRG8HnGiR6\",\"NG8PWBSjsM8mMhQEq\",\"WttLjbHSTbbcMBdBe\",\"xMgimoQt8kaSY8oNW\",\"2Qk2mFu9HBFzrB24i\",\"75R4MdzQ8M9xAKRgD\",\"8QcJ2CXLrtfkAZhtf\",\"qhEeQheApvMpjWLXr\",\"MATsqGvdZgvQ4JwCo\",\"ZK6YmYMsfwXYtaZ9P\",\"NJCmkbH5e7qbtZYhd\",\"7CpD8QCLsjCiPsdKe\",\"ApqWTmEEkTCsDou48\",\"CMLqMQhqhTxsx7ZYg\",\"k6QB6fzbj4LsWktRL\",\"K45zPJxsABuA3WSyj\",\"dQd664XYR6QKHFvHW\",\"pPpmP7xeJzGgK362R\",\"rbPEA2TFQw837Hmqg\",\"dSa4K4DM6hiksarHv\",\"FGEeCTorXbX3WvjFW\",\"QguFWo84zgF3c8BGr\",\"2a56F4KyQHRgTubPL\",\"KypQdzThzogKXwkXE\",\"w8geFfsnhEfLPjBCq\",\"Es4eX2stRpyoXeC7f\",\"PKStjLwcdu9S99nDZ\",\"8op7s67jE2nYdo4js\",\"5nhmyqLy8M2Yn2HMR\",\"s2Y76rR2h2fPKibsK\",\"jyoLggHk8xQKZuoQC\",\"2TLngGdowbHujqTBa\",\"HCfkcKnPs9mrJojdG\",\"4fjSgcqhQQZM2ZFRP\",\"sN2JyFeJCwfwwHPwF\",\"jSKbvkb6T6sNsjYYE\",\"kzKScgma9NnX6YwAs\",\"vmad5Pz6mu3CRt22J\",\"8PWe4RLFk3MRvbn68\",\"o5vwZSj8H7Wngp9oZ\",\"Q6gEE9dG8ERy2Xu3c\",\"RahovDytzL2Q3fAYP\",\"gFEpzrgWhzCZHeifj\",\"PC3pLs36zNzpRDSuE\",\"kqd3cgnP2yBTj5pSv\",\"WpNHMgfjZE8aNN2MP\",\"SpzAprfWq9EYZcjqa\",\"EZbGZAXi8GaFiicWs\",\"vdrDCxMWpqCY3yxfj\",\"QHiEYtz3tX3s9nETo\",\"sMcFMPkMJC4Kh6ymj\",\"J3d9DFLyw7ZB7KzuN\",\"LPZ2QKCoB8q6rG25c\",\"qjd7Y3B7nNxdx5PgM\",\"fccfTyHBaoFGEaKxh\",\"rpNNPWzdFCc9TzKMz\",\"wuKfeXFuTNpgEyEs2\",\"opcrDAS4AgXqrJXnb\",\"hyx8iH2z3QySmyRKT\",\"nC4sPB69yYuTSks9T\",\"QfmeLsicXT49NGouo\",\"vpoTHSqFwCb5jmST9\",\"6vdn7gegY7xXxYCbe\",\"HjP75DWvMXBqcxwfv\",\"ey7weiXtrrTWSnjtJ\",\"TxoAmyyfbvBb798qj\",\"aLKHc5k4sM3GijhmE\",\"sgjcbfroKXPSSDob8\",\"CHvzhtXnv8HTbPQ56\",\"ptjgJ67Pgp45xaQdv\",\"iTDZTaTYMy9P8Qqiz\",\"mdRQaGT98ycMt87S2\"],\"quality\":[5,4,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,2,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,4,4,5,5,5,5,5,1,4,5,5,5,5,5,5,5,5,4,5,4,5,5,5,5,5,5,5,5,5,5,4,5,5,5,4,5,5,5,5,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":4.815533980582524,\"family\":[{\"_id\":\"rm2Z7PP8ZFJE7cBYd\",\"language\":\"cpp\"},{\"_id\":\"9N7zA5oiu6v5nhuBm\",\"language\":\"javascript\"},{\"_id\":\"DYQaCgLNPAmy5QMLj\",\"language\":\"php\"},{\"_id\":\"X3pz4ccSx2k7HikBL\",\"language\":\"python3\"},{\"_id\":\"4Da8bm8SyccDk5n2S\",\"language\":\"ruby\"}]}}"]