a["{\"msg\":\"result\",\"id\":\"942\",\"result\":{\"_id\":\"4fY7BRiPga8MEvYGQ\",\"author\":\"Anna An\",\"authorId\":\"zMCXYFZSsviDCvjnY\",\"code\":\"function findLetters(str) {\\n\\t\\n}\",\"difficulty\":1.64,\"editorId\":\"zMCXYFZSsviDCvjnY\",\"familyId\":\"pfPXmhuDyDWutPjaH\",\"instructions\":\"Create a function that takes a string and returns an array of the letters that **occur only once**.\\n\\n### Examples\\n```\\nfindLetters(\\\"monopoly\\\") ➞ [\\\"m\\\", \\\"n\\\", \\\"p\\\", \\\"l\\\", \\\"y\\\"]\\n\\nfindLetters(\\\"balloon\\\") ➞ [\\\"b\\\", \\\"a\\\", \\\"n\\\"]\\n\\nfindLetters(\\\"analysis\\\") ➞ [\\\"n\\\", \\\"l\\\", \\\"y\\\", \\\"i\\\"]\\n```\\n\\n### Notes\\n- The final array should not include letters that appear more than once in the string.\\n- Return the letters in the sequence they were originally in, do not sort them.\\n- All letters will be in lowercase.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertSimilar(findLetters(\\\"monopoly\\\"), [\\\"m\\\", \\\"n\\\", \\\"p\\\", \\\"l\\\", \\\"y\\\"])\\nTest.assertSimilar(findLetters(\\\"balloon\\\"), [\\\"b\\\", \\\"a\\\", \\\"n\\\"])\\nTest.assertSimilar(findLetters(\\\"analysis\\\"),  [\\\"n\\\", \\\"l\\\", \\\"y\\\", \\\"i\\\"])\\nTest.assertSimilar(findLetters(\\\"summer\\\"), [\\\"s\\\", \\\"u\\\", \\\"e\\\", \\\"r\\\"])\\nTest.assertSimilar(findLetters(\\\"apple\\\"), [\\\"a\\\", \\\"l\\\", \\\"e\\\"])\\nTest.assertSimilar(findLetters(\\\"commission\\\"), [\\\"c\\\", \\\"n\\\"])\\nTest.assertSimilar(findLetters(\\\"fox\\\"), [\\\"f\\\", \\\"o\\\", \\\"x\\\"])\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,0,2,1,0,0,1,2,0,0,1,1,0,2,1,2,2,3,0,2,2,2,1,2,1,3,2,1,2,3,1,2,1,2,2,3,5,2,2,2,2,2,3,2,1,2,2,2,2,1,1,2,1,2,2,3,1,2,2,3,2,3,1,3,1,3,2,1,1,1,2,2,2,2,2,2,0,2,1,1,1,2,2,0,2,2,1,2,1,2,0,1,2,2,2,2,2,3,2,2,5,0,2,0,2,1,2,2,1,2,1,2,2,2,0,2,2,0,2,2,2],\"rators\":[\"zMCXYFZSsviDCvjnY\",\"2zKQWLmEBw8FBs4ZL\",\"Nb6LYPoQP6KJZt8mz\",\"QRv96jmNaYsWkxQEG\",\"SNiJRRosrmSWssLj4\",\"Fv9DW7BHv5YB7zZrb\",\"4fiWpdPMsXkC8nJK4\",\"jcPZ5ySXseCB7Ec3x\",\"yjtdwc2AC4jA2RWtn\",\"ttuGK7od8simjgmCJ\",\"tAF9Gf6PiGogbZuWs\",\"g4NCSxxHqHCGMpWwT\",\"2tCCFm5iefjrRSaxv\",\"v2w9GN4jHP2fgYdeE\",\"CeRsm2D4XTivYxQyR\",\"vz9k2u33P5GRmpz3X\",\"PbtN2Z4hTis37yDaC\",\"n5wubRfh6zh8QRymN\",\"oGA9Dj9za4aRmnLpK\",\"DaBQKtm4xSgrxqTYF\",\"qWR7eXxBiNee22A5u\",\"RE4Mm9T6Q9uygAxGS\",\"3aroChjT7AqhgDPNY\",\"75NY7vqimaATzRdAX\",\"k63LR5zQ8hLRafGH5\",\"YLTZRjM78Wi9J9Re4\",\"buX4mCQhtXCfBjeno\",\"MbbySGQmkzbjg373M\",\"QjgbDprWMz6Lr5Y9u\",\"pdGuqmMyeN4wZaWwv\",\"2QNs5hQaDgo792ztf\",\"Kt6oGAfrymXmAnn2d\",\"MeCh2A8YKJBReX7sD\",\"Ya3eHgs8x3unZRLpb\",\"exx6SbtcjqgATLhwQ\",\"kp2ZbCewZJAbfd7xv\",\"WfA7u3xCw6vpda4P8\",\"u9cRf5kvtpRB5ffB3\",\"CH53jGETBeJTummf3\",\"mHT2bJb5SByfJ8yKS\",\"PGCDJpQMN8Sjn9Gm6\",\"FxY6c2G6Hsc34zsEp\",\"vtHbevf2tHqe6mRxX\",\"x2Cz7S8rCKJqCE3Xe\",\"7gZKfvwaeqsGKXMEN\",\"STipuJs6kBvPqqsSE\",\"65dbBZynphj53nXqA\",\"jkumHyXfMkhGcPgqC\",\"6BpBQnSGhzgvhXrEy\",\"BdnE4RS5puoxo92mA\",\"kCY2WagMYKBofCtEt\",\"aEm3Wvj2rFYRL8Lrb\",\"nAmJEX7BkHLd9LsG2\",\"evTTY9hwrtogaNxXn\",\"LgpmdkARnzvN9dtb7\",\"yzqmuTzf7jd5eBZkD\",\"mfYrBKwDr4hXSFuuN\",\"Yzh7zNiyG7LM9vnAj\",\"vAh63eGRwkuJtoP8v\",\"CNc6rmwhbxkxEhHAp\",\"srpgGQQ4rNfiFcHdj\",\"SY9Euc4kQfRgetXTd\",\"zw7g7T8wE5R5CBhXr\",\"BdvdJYwHZr7JpkHsn\",\"QnPD4Sv6W4LHc2Qng\",\"dGugwhA6uwwjPGAa5\",\"hAADquTjtbRpNudHE\",\"7wtuhPesfhcYsfZaZ\",\"bX6tpTCjwoi6XMMbK\",\"DDokdbBKxv49M445o\",\"r7mZLgpQWzRiGddL5\",\"qJTbsuToGEtaYnGxn\",\"iRWkFFriwxk5oAbDg\",\"daD4PtrAmXk4Q9jG7\",\"sNcDN3s3rH9wcNg5n\",\"rzreeBAxcn8NT6ie8\",\"nyh73Tr6GhqAat78g\",\"hyx8iH2z3QySmyRKT\",\"AFfw7cGg83uYk2Miy\",\"nkH3HfJXLMNcBMM79\",\"NczXsSrYNX6nDWhjF\",\"szQg8dxKNNre3v3Jk\",\"ctsZbx4dQNmYJ6Nox\",\"h3gt3mwpCjyiNb4Mm\",\"4hbbyooKkEJgnfLXF\",\"jLSZdBseR2kfjt8dL\",\"PE4xjAcceoPn7iJYG\",\"8ytCJuKMgphsdRyhW\",\"vewKwcMeGuk3p3MsN\",\"pctW2DbX9NkGHoJWR\",\"FAS3u4W6KMAPEEPzY\",\"LfGWrHxG3qWGdydTx\",\"c7uBxu2rgY77H5d79\",\"Yp7uvStL97cC9fKkY\",\"RGN3QTb5LXj4ZPPkj\",\"XzMxsyYj2ZeZ6Jmis\",\"FGEeCTorXbX3WvjFW\",\"omn98QP6uBd923Azp\",\"RE3w3h4GKqCkYm2dK\",\"H3q76En4bsaZpbPeS\",\"JW3BjzdwNqizGZdHu\",\"mwg8jvMHHmQiQRrbr\",\"Es4eX2stRpyoXeC7f\",\"LCn6qz2GoMr5577Rd\",\"daZ2w88gv7Kaw5KLn\",\"QHiEYtz3tX3s9nETo\",\"vqD6ERedxEyXyT3Sx\",\"YQZnW55jKvzDdZ3t5\",\"6y6FFQcSKbJA8QhaN\",\"njJZAyYh3ovmRuGiE\",\"JuGJgYuj4eHc5xdaz\",\"3Gf7ikLijfoxabiPY\",\"8wJRuhr4EYGE4qtf3\",\"QAZ5DGaWWYhku4BNz\",\"sNaBkKozfKvHvAFe7\",\"6J6g5TwWz67cN7Zy6\",\"8BJyXvRWcrvN3nttS\",\"RtPhDuwmvWNHiBxmG\",\"46EqDiLEdJPtDFujt\",\"oF6TNdvfqZfppqSgK\",\"8EJ4j2fcfjTJ7Zrzu\",\"ZLYBfAascpgGofCPk\",\"YP37e5mBT8oWJrpuN\",\"sRt2L9qxPZZHG2YbP\",\"B69aTY9xzktJnkt7T\",\"J7d397iB5GuWRAMfg\",\"PTo9qt93YqGvL8fCa\",\"npp5hesJrst6ghKSM\",\"E3fkFzNeAGctuvqA2\",\"jjdAh4DvpF7jtJDpZ\",\"cgCQDs9i7yChKeAjE\",\"Xqo4JiQBg8vafNK6E\",\"srJ34BaybkQh3qRkM\",\"AQSqD9oNv2uPfxZCR\",\"LRQJJXqsYfhRyzifu\",\"oyB4Wr4EeZnoDaa8B\",\"ZEMZ8nuaHJ5jsBBQz\",\"oDtGiNqDMHmhHE3J8\",\"Zi39A2nmRWTdjd9DK\",\"bzh5EXjD9JDYKehci\",\"sHnfwDzKzmeApjTv8\",\"2Qk2mFu9HBFzrB24i\",\"NGvCPuMiAP3xrRLfB\",\"AasGs8AeX9Lcb9xJn\",\"hvTAyFPy4pJHdrYJX\",\"N3CNtWZz4ovJfH9Aw\",\"M4vq8ATaS9Jg5X7iP\",\"LwD3CyYSiBfg3mA4r\",\"rpNNPWzdFCc9TzKMz\",\"pi76g3eRpnKrhee2a\",\"9SEvR5mBRBi27QooN\",\"nBJve5CzG6WAw7WFQ\",\"gXTAie79kiw28tx5u\",\"RiejmKZ2vefigYT6v\",\"iQ7LDrEn8mtYTCAfC\",\"AMpQSjKsRqhCDyS2j\",\"jyoLggHk8xQKZuoQC\",\"WnogMFYXoyvmBmGkm\",\"d8JhF9zfpexkRnCea\",\"sN2JyFeJCwfwwHPwF\",\"gaz3AFpSraqKtXBvR\",\"bfYmA3LMvhSrK59cn\",\"mpLFbFKjY6u3nsDMv\",\"eomLS3wh6tQPN8jtH\",\"jicWFrNKadYuLhqxh\",\"z47JaNrQMgvuPx5HE\",\"4WYjScmBWK9eXRzvd\",\"uxKGACwmZ6FNZsMwE\",\"rMc3LPajSgm68hNfC\",\"2ii9gqgmh7a4RdeSt\",\"ZQXGn77ghzRxNR3Ji\",\"DeXzcgprkCuYoCvpp\",\"jnyub52Fi79drGvow\",\"CHvzhtXnv8HTbPQ56\",\"LPZ2QKCoB8q6rG25c\",\"6vdn7gegY7xXxYCbe\",\"i22QSfBiw3jXmTRbi\"],\"total\":192,\"quality\":[5,5,5,3,5,5,4,3,5,5,5,5,5,5,5,2,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,1,5,5,5,5,4,5,5,4,5,5,5,5,5,4,5,4,5,5,5]},\"flags\":0},\"summary\":\"Create a function that takes a string and returns an array of the letters that occur only once.\\n\\nExamples\\nfindLetters(\\\"monopoly\\\") ➞ [\\\"m\\\", \\\"n\\\", \\\"p\\\", \\\"l\\\", \\\"y\\\"]\\n\\nfindLetters(\\\"balloon\\\") ➞ [\\\"b\\\", \\\"a\\\", \\\"n\\\"]\\n\\nfindLetters(\\\"analysis\\\") ➞ [\\\"n\\\", \\\"l\\\", \\\"y\\\", \\\"i\\\"]\\n\\nNotes\\nThe final array should not include letters that appear more than once in the string.\\nReturn the letters in\",\"tags\":[\"strings\",\"interview\"],\"timestamp\":{\"$date\":1598485437066},\"title\":\"Find the Unique Letters\",\"quality\":4.666666666666667,\"family\":[{\"_id\":\"4fY7BRiPga8MEvYGQ\",\"language\":\"javascript\"},{\"_id\":\"GWBvmSJdciGAksuwS\",\"language\":\"python3\"},{\"_id\":\"34SgHsPXDxaLWFeqC\",\"language\":\"ruby\"}]}}"]