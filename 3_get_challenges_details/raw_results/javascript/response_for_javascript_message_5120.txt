a["{\"msg\":\"result\",\"id\":\"1311\",\"result\":{\"_id\":\"rQj7JcXSnG5sy33rr\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"function commentsCorrect(str) {\\n\\t\\n}\",\"difficulty\":2.13265306122449,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"jbDT3qywfJiYwkHKS\",\"instructions\":\"In JavaScript, there are two types of comments:\\n\\n1. Single-line comments start with `//`\\n2. Multi-line or inline comments start with `/*` and end with `*/`\\n\\nThe input will be a sequence of `//`, `/*` and `*/`. **Every `/*` must have a `*/` that immediately follows it**. To add, there can be **no single-line comments in between multi-line comments** in between the `/*` and `*/`.\\n\\nCreate a function that returns `true` if comments are properly formatted, and `false` otherwise.\\n\\n### Examples\\n```\\ncommentsCorrect(\\\"//////\\\") ➞ true\\n// 3 single-line comments: [\\\"//\\\", \\\"//\\\", \\\"//\\\"]\\n\\ncommentsCorrect(\\\"/**//**////**/\\\") ➞ true\\n// 3 multi-line comments + 1 single-line comment:\\n// [\\\"/*\\\", \\\"*/\\\", \\\"/*\\\", \\\"*/\\\", \\\"//\\\", \\\"/*\\\", \\\"*/\\\"]\\n\\ncommentsCorrect(\\\"///*/**/\\\") ➞ false\\n// The first /* is missing a */\\n\\ncommentsCorrect(\\\"/////\\\") ➞ false\\n// The 5th / is single, not a double //\\n```\\n\\n### Notes\\nN/A\",\"lab\":\"Test.assertEquals(commentsCorrect(\\\"//////\\\"), true)\\nTest.assertEquals(commentsCorrect(\\\"/**//**////**/\\\"), true)\\nTest.assertEquals(commentsCorrect(\\\"/**//**//**//**/\\\"), true)\\nTest.assertEquals(commentsCorrect(\\\"///**///\\\"), true)\\nTest.assertEquals(commentsCorrect(\\\"/**//////**//**////**/////\\\"), true)\\nTest.assertEquals(commentsCorrect(\\\"//\\\"), true)\\nTest.assertEquals(commentsCorrect(\\\"/**/\\\"), true)\\nTest.assertEquals(commentsCorrect(\\\"///*/**/\\\"), false)\\nTest.assertEquals(commentsCorrect(\\\"//*/**/\\\"), false)\\nTest.assertEquals(commentsCorrect(\\\"/////\\\"), false)\\nTest.assertEquals(commentsCorrect(\\\"///\\\"), false)\\nTest.assertEquals(commentsCorrect(\\\"/**///**/\\\"), false)\\nTest.assertEquals(commentsCorrect(\\\"/**/////**/\\\"), false)\",\"language\":\"javascript\",\"summary\":\"In JavaScript, there are two types of comments:\\n\\nSingle-line comments start with //\\nMulti-line or inline comments start with / and end with /\\n\\nThe input will be a sequence of //, / and /. Every / must have a / that immediately follows it. To add, there can be no single-line comments in between multi-line comments in between the / and /.\\n\\nCreate a function that\",\"tags\":[\"strings\",\"regex\",\"validation\"],\"timestamp\":{\"$date\":1553830559947},\"title\":\"Valid JavaScript Comments\",\"stats\":{\"completed\":{\"total\":107,\"ratings\":[2,2,2,2,2,2,2,2,2,2,2,1,1,3,2,1,3,3,3,2,2,2,0,3,3,2,2,3,2,3,3,3,1,0,3,0,4,1,2,2,3,2,2,0,3,2,3,3,3,1,2,1,2,1,2,1,3,3,2,3,3,1,2,3,2,2,2,0,1,2,3,1,2,2,2,0,3,3,1,3,3,3,3,3,2,2,3,2,2,2,3,3,3,3,3,2,0,5],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"65dbBZynphj53nXqA\",\"SDtZFL5NzAoCPofXk\",\"LTD7KCHFuXrmTWpQ4\",\"Fa69Gq8FX5jretBtz\",\"zgoq9MhrL2h75DAMA\",\"n5wubRfh6zh8QRymN\",\"KPDPaGaJ4jGtRusF2\",\"vWasKJEBgD3nRXzxn\",\"8xuMMGF7fyQWL2fKH\",\"BTDyduiRYDSm5LyeD\",\"Akq3fQcPRgPrWfsye\",\"S7R7voZRxnWjCn8pi\",\"h4jFmtbFn92eA4649\",\"cTasoJQG2iA6FvuK4\",\"M3z4ZPgywPqX9eoS4\",\"EjPLq3QSJdGQFJdgW\",\"g5noFWaoRtZNcEEAW\",\"bjn5DTzzaWCP5BDgX\",\"54Ka62KytXRsrLPhZ\",\"fmLzKJTPWvtGRAaAN\",\"CJnuSjyCBMTbTiibD\",\"EWn8w8P3nNh7knatY\",\"yjtdwc2AC4jA2RWtn\",\"R4JQmeA6cYyfXbmLF\",\"5Zq3aGdvh4LHBvnJL\",\"zw7g7T8wE5R5CBhXr\",\"eomLS3wh6tQPN8jtH\",\"AasGs8AeX9Lcb9xJn\",\"XKi8iZXBCHCaebSHh\",\"Q9KQomTTPBsrkAL6c\",\"RE4Mm9T6Q9uygAxGS\",\"mHT2bJb5SByfJ8yKS\",\"byrKwHgawbFgyAcgo\",\"DHwbkbzYNpmkSFT7u\",\"Y2AsJZzJk7HJybpHK\",\"uKv6ghxAFuZ5Rb3tD\",\"6BpBQnSGhzgvhXrEy\",\"2innwjWqxJHo4eRGh\",\"BdvdJYwHZr7JpkHsn\",\"cRpaCxYRmGcN3Nsoj\",\"QEhgdaBYvvTH4GpoN\",\"YER6iBcpJCuhgrYDN\",\"jqbm8L6895JgAtZ6H\",\"Nv5a34gxg5yvLKRW8\",\"YKYLFnGJXesgsxSAY\",\"SxqAEMaYcE9Ps9eh6\",\"Ehrta9env9HXyrGbW\",\"FJsvM5yqKuK9yMk9P\",\"p2woPCQKXuWJCwffJ\",\"Y5H6Lp7Qou9XGptHH\",\"a777e8chPvJkY3tKa\",\"pi76g3eRpnKrhee2a\",\"24GAX5bwCnwo9JLnr\",\"2ZFoLTxcCARhwc8xX\",\"Q75jsoXjhTXJRrw8z\",\"sBcsrC5paZm9nxjot\",\"GCsLzWAhLvniQqR3J\",\"M4vq8ATaS9Jg5X7iP\",\"aEm3Wvj2rFYRL8Lrb\",\"4gb4tvaSCs9u2z3ZA\",\"Xk2g4CNFAnYcvxiSr\",\"iJC8PmpzSyTnEDqw5\",\"vewKwcMeGuk3p3MsN\",\"r7mZLgpQWzRiGddL5\",\"eFjGhq7C7bBKXjT6X\",\"zMCXYFZSsviDCvjnY\",\"BuGWvGZGiJELoMy5G\",\"s7Qqx4Jnuq85iB7Lw\",\"jcPZ5ySXseCB7Ec3x\",\"jkumHyXfMkhGcPgqC\",\"kp2ZbCewZJAbfd7xv\",\"QRv96jmNaYsWkxQEG\",\"4Xv87xmdSnpYhi8hz\",\"477x24BHagvCWeCsS\",\"CNc6rmwhbxkxEhHAp\",\"RFqRp2Bou8KXupQkt\",\"dGugwhA6uwwjPGAa5\",\"wbzQwextPpnNBR7cG\",\"tAF9Gf6PiGogbZuWs\",\"CJvaWhQcMYz3B8TKx\",\"g4NCSxxHqHCGMpWwT\",\"vGKxRcDYDsXzTQuEQ\",\"NchnDcEmsLTeFZ4FH\",\"PytNZK9mNiRiZxPrm\",\"6P9KgzXeJtZ6ejQcu\",\"AFfw7cGg83uYk2Miy\",\"xn7uGNKeAwPEkP9oA\",\"mDWNyaaQ9hvPCRzSd\",\"gPATLQDMC8zw6N74K\",\"2Qk2mFu9HBFzrB24i\",\"oDtGiNqDMHmhHE3J8\",\"8s5Bdrn7RTga7DL6x\",\"Ya3eHgs8x3unZRLpb\",\"9HZbxzkzgz4CvePtv\",\"kKyppqXhM6fsKHWPD\",\"YSmLyP3eRhcFjJPzg\",\"ThaiAKWWDw2W4QfJh\",\"NYpfJBfeQDwvGEMd4\",\"CHvzhtXnv8HTbPQ56\",\"jyoLggHk8xQKZuoQC\"],\"quality\":[5,5,3,5,5,4,5,5,5,4,5,5]},\"tests\":{\"score\":0,\"voters\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"voters\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"isHidden\":false,\"quality\":4.666666666666667,\"family\":[{\"_id\":\"jF9Hr2YCEZAbXrCvH\",\"language\":\"cpp\"},{\"_id\":\"99aQihB9syYuFZsvw\",\"language\":\"csharp\"},{\"_id\":\"aMazRiPPk9pAniYMF\",\"language\":\"java\"},{\"_id\":\"rQj7JcXSnG5sy33rr\",\"language\":\"javascript\"},{\"_id\":\"jJfQNwPRtzEuab4h5\",\"language\":\"php\"},{\"_id\":\"ia95ckhN5ztgfJHe4\",\"language\":\"python3\"},{\"_id\":\"agsKgCvLbg9ZMX8RP\",\"language\":\"ruby\"},{\"_id\":\"8vENFxcDBFHFHJmnf\",\"language\":\"swift\"}]}}"]