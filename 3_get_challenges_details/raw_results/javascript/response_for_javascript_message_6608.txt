a["{\"msg\":\"result\",\"id\":\"2048\",\"result\":{\"_id\":\"5TFPM2uorcu5nHnbv\",\"archived\":false,\"author\":\"0osh4d0wo0\",\"authorId\":\"XHngE5iScvztMpnR2\",\"code\":\"String.prototype.indexOf = function(searchValue, fromIndex) {\\n  return 0;\\n};\\n\\nString.prototype.lastIndexOf = function(searchValue, fromIndex) {\\n  return 0;\\n};\",\"difficulty\":2.875,\"familyId\":\"X5oAoieqQpwyyWSqx\",\"instructions\":\"Your task is to recreate two functions from `String.object` (`indexOf()` and `lastIndexOf()`).\\n\\n### str.indexOf(searchValue\\\\[, fromIndex])\\nThis function will accept a string and regex as searched value, take a look at target string and return the first index if there is a match.\\n\\n- searchValue is a string or a regex object representing the value to be searched.\\n- fromIndex is an optional parameter indicating the starting point (beginning from left) of your search.\\n\\nIf any value matches, return the first index found, else return `-1`.\\n\\n### str.lastIndexOf(searchValue\\\\[, fromIndex])\\nThis function is the same as `indexOf` except it will return the last index if there is a match.\\n\\n- searchValue is a string or a regex object representing the value to be searched.\\n- fromIndex is an optional parameter indicating the index of beginning of matched strings.\\n\\nFor example, with regex you can try to find all matches in the string but the `lastIndexOf` function must return the index of the character at the `fromIndex` parameter or lower.\\n\\nIf any value matches, return the last index found, else return `-1`.\\n\\n### Notes\\nN/A\",\"lab\":\"const strList = [\\\"edabit challenge edabit\\\",\\\"edabitibade\\\",\\\"challengesChallengeschallenges\\\",\\\"Hello Worlddlrow olleh\\\\n.\\\"]\\nTest.assertEquals(strList[0].indexOf(''),0);\\nTest.assertEquals(strList[0].indexOf('eda'),0);\\nTest.assertEquals(strList[0].indexOf('eda',1),17);\\nTest.assertEquals(strList[0].indexOf('e',1),12);\\nTest.assertEquals(strList[0].indexOf('e'),0);\\nTest.assertEquals(strList[0].indexOf('edabit challenge'),0);\\nTest.assertEquals(strList[1].indexOf('biti',1),3);\\nTest.assertEquals(strList[1].indexOf('biti',-1),3);\\nTest.assertEquals(strList[1].indexOf('biti',3),3);\\nTest.assertEquals(strList[1].indexOf('biti',4),-1);\\nTest.assertEquals(strList[1].indexOf('b'),3);\\nTest.assertEquals(strList[1].indexOf('b',4),7);\\nTest.assertEquals(strList[2].indexOf(/cha/),0);\\nTest.assertEquals(strList[2].indexOf(/cha/,1),20);\\nTest.assertEquals(strList[2].indexOf(/cha/i,1),10);\\nTest.assertEquals(strList[2].indexOf(/[cha]{3}/gi),0);\\nTest.assertEquals(strList[2].indexOf(/[Cse]{3}/),8);\\nTest.assertEquals(strList[2].indexOf(/[sse]{3}/),-1);\\nTest.assertEquals(strList[3].indexOf(/Hello world/),-1);\\nTest.assertEquals(strList[3].indexOf(/Hello World/), 0);\\nTest.assertEquals(strList[3].indexOf(/(?:Olleh\\\\.\\\\.?)/), -1);\\nTest.assertEquals(strList[3].indexOf(/(?:olleh\\\\.?)/), 17);\\nTest.assertEquals(strList[3].indexOf(/[eo]ll/), 1);\\nTest.assertEquals(strList[3].indexOf(/[ow] ?[ow]/), 14);\\nTest.assertEquals(strList[3].indexOf(/[ow] ?[ow]/i), 4);\\nTest.assertEquals(strList[3].indexOf(/\\\\./m), 23);\\nTest.assertEquals(strList[3].indexOf(/./m), 0);\\nTest.assertEquals(strList[3].indexOf(/[eo]ll/,5), 17);\\nTest.assertEquals(strList[3].indexOf(/[ow] ?[ow]/,15), 15);\\nTest.assertEquals(strList[3].indexOf(/[ow] ?[ow]/i,9), 14);\\nTest.assertEquals(strList[3].indexOf(/\\\\./m,24), -1);\\nTest.assertEquals(strList[3].indexOf(/./m,14), 14);\\nTest.assertEquals(strList[0].lastIndexOf(''),-1);\\nTest.assertEquals(strList[0].lastIndexOf('eda'),17);\\nTest.assertEquals(strList[0].lastIndexOf('eda',1),0);\\nTest.assertEquals(strList[0].lastIndexOf('e',1),0);\\nTest.assertEquals(strList[0].lastIndexOf('e'),17);\\nTest.assertEquals(strList[0].lastIndexOf('edabit challenge'),0);\\nTest.assertEquals(strList[1].lastIndexOf('biti',1),-1);\\nTest.assertEquals(strList[1].lastIndexOf('biti',-1),-1);\\nTest.assertEquals(strList[1].lastIndexOf('biti',3),3);\\nTest.assertEquals(strList[1].lastIndexOf('biti',4),3);\\nTest.assertEquals(strList[1].lastIndexOf('b'),7);\\nTest.assertEquals(strList[1].lastIndexOf('b',4),3);\\nTest.assertEquals(strList[2].lastIndexOf(/cha/),20);\\nTest.assertEquals(strList[2].lastIndexOf(/cha/,1),0);\\nTest.assertEquals(strList[2].lastIndexOf(/cha/i,1),0);\\nTest.assertEquals(strList[2].lastIndexOf(/[cha]{3}/gi),20);\\nTest.assertEquals(strList[2].lastIndexOf(/[Cse]{3}/),8);\\nTest.assertEquals(strList[2].lastIndexOf(/[sse]{3}/),-1);\\nTest.assertEquals(strList[3].lastIndexOf(/Hello world/),-1);\\nTest.assertEquals(strList[3].lastIndexOf(/Hello World/), 0);\\nTest.assertEquals(strList[3].lastIndexOf(/(?:Olleh\\\\.\\\\.?)/), -1);\\nTest.assertEquals(strList[3].lastIndexOf(/(?:olleh\\\\.\\\\.?)/), -1);\\nTest.assertEquals(strList[3].lastIndexOf(/[eo]ll/), 17);\\nTest.assertEquals(strList[3].lastIndexOf(/[ow] ?[ow]/), 15);\\nTest.assertEquals(strList[3].lastIndexOf(/[ow] ?[ow]/i), 15);\\nTest.assertEquals(strList[3].lastIndexOf(/./m), 23);\\nTest.assertEquals(strList[3].lastIndexOf(/[eo]ll/,11), 1);\\nTest.assertEquals(strList[3].lastIndexOf(/[ow] ?[ow]/,10), -1);\\nTest.assertEquals(strList[3].lastIndexOf(/[ow] ?[ow]/i,8), 6);\\nTest.assertEquals(strList[3].lastIndexOf(/./m,5), 5);\\nTest.assertEquals(strList[3].lastIndexOf(/./m,8), 8);\",\"language\":\"javascript\",\"summary\":\"Your task is to recreate two functions from String.object (indexOf() and lastIndexOf()).\\n\\nstr.indexOf(searchValue\\\\[, fromIndex])\\nThis function will accept a string and regex as searched value, take a look at target string and return the first index if there is a match.\\n\\nsearchValue is a string or a regex object representing the value to be searched.\\nfromIndex \",\"tags\":[\"algorithms\",\"functional_programming\",\"regex\",\"strings\"],\"timestamp\":{\"$date\":1499698319632},\"title\":\"IndexOf and LastIndexOf\",\"stats\":{\"completed\":{\"total\":32,\"ratings\":[1,1,1,1,1,4,4,4,5,5,4,4,0,4,4,5,4,5,4,0,5,1,5,3,5,0,2,5,5,4,0,0,2,4,1,3,4,4,0,1],\"rators\":[\"XHngE5iScvztMpnR2\",\"thEsZ7N6X8qfZMbcv\",\"tuyDaJzFy78jxvhCY\",\"65dbBZynphj53nXqA\",\"SDtZFL5NzAoCPofXk\",\"XcHCqYmeoqxDsoucx\",\"QCchMDx3z8NcqT8QJ\",\"36pyvME2wsprTX7xh\",\"sYGwNDQRnefhxcWs6\",\"JXb2TpuretfMdHMvb\",\"4r64YQWjZL6F3E2bY\",\"QQniTggCRojCzXzmZ\",\"A38gLMw8cH25PBKiB\",\"MxDfLu8LNm9oAjhf6\",\"6cF2nrD29Nn2AeKP7\",\"HaZkGH3ajr8B8QdFX\",\"rdNqeKKCwqmELuhvJ\",\"X9gzW6TkvYB4rbrx7\",\"n5wubRfh6zh8QRymN\",\"fJxTxm9e5XHcfNSmr\",\"9hBxfWKJtHS6Hrhm3\",\"LZAGLT3KurjPMAH6W\",\"yjtdwc2AC4jA2RWtn\",\"7PP6aGLEosDGsjRqW\",\"iGCyzBZ9rxC5cdWME\",\"cRpaCxYRmGcN3Nsoj\",\"JGBCMpnbbi5ztuFoX\",\"MNDLmXZmFMf8ASL2L\",\"aEm3Wvj2rFYRL8Lrb\",\"pGh7WykiPe26fHJYv\"],\"quality\":[4]},\"complaints\":{\"total\":9,\"reasons\":[[\"bug\"],[\"confusing\"],[\"confusing\"],[\"confusing\"],[\"bug\"],[\"confusing\"],[\"bad_resources\"],[\"confusing\"],[\"bad_resources\"]],\"skippers\":[\"XHngE5iScvztMpnR2\",\"hi7Hvtq2mJfkXEGF2\",\"b63EsGEcdP6hCL7rH\",\"DzwNxYjpcdMCAmqMM\",\"rHxxSfkTAs23Wz2fe\",\"sQTaZGCCsE7BNQzyG\",\"wQitjzGMLiAx99Ai6\",\"bLjAhjtE9YxtfHejn\",\"bWRmbXpKNxHZ8hd3M\",\"Jxua2xJjxLoKwMzHi\"]},\"instructions\":{\"score\":-0.7,\"voters\":[\"DPdn5rEcemp5kXnG6\"]},\"tests\":{\"score\":-31.400000000000002,\"voters\":[\"tuyDaJzFy78jxvhCY\",\"7tznAN3p3rzz24STs\",\"qJrdttuu9ay44WjxE\"]},\"flags\":0},\"editorId\":\"XHngE5iScvztMpnR2\",\"isHidden\":false,\"quality\":4,\"family\":[{\"_id\":\"5TFPM2uorcu5nHnbv\",\"language\":\"javascript\"}]}}"]