a["{\"msg\":\"result\",\"id\":\"1706\",\"result\":{\"_id\":\"AuH5MDBMBcTS9Te4K\",\"author\":\"er0s\",\"authorId\":\"5Zq3aGdvh4LHBvnJL\",\"code\":\"function timeAdjust(now, hrs, min, sec) {\\n\\t\\n}\",\"difficulty\":2.342857142857143,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"iTpD63BXkoZTv9zAF\",\"instructions\":\"In this challenge, you have to add a variable amount of hours, minutes and seconds to a given time, obtaining, in turn, a new adjusted time.\\n\\nGiven a string `now` being a timestamp in the format `hh:mm:ss`, and three integers `hrs`, `min` and `sec` being the hours, minutes and seconds to add, implement a function that returns a string being the newly adjusted timestamp (maintaining the same format).\\n\\n### Examples\\n```\\ntimeAdjust(\\\"01:00:00\\\", 1, 30, 10) ➞ \\\"02:30:10\\\"\\n\\ntimeAdjust(\\\"18:22:30\\\", 4, 60, 30) ➞ \\\"23:23:00\\\"\\n\\ntimeAdjust(\\\"00:00:00\\\", 72, 120, 120) ➞ \\\"02:02:00\\\"\\n```\\n### Notes\\n- The amounts of `hrs`, `min`  and `sec` can be any positive integer, and you have to correctly add them to the corresponding unit if they exceed their scale. See example #2: sixty minutes is one hour, and sixty seconds (30 + 30) is one minute.\\n- If the amount of time to add exceeds the 24 hours, then the time will start again from \\\"00:00:00\\\". See example #3: 72 hours are 3 exact days so that after three cycles of 24 hours, the hour will be again \\\"00\\\" (and becomes \\\"02\\\" because we are adding also 120 minutes or 2 hours).\",\"isHidden\":false,\"lab\":\"Test.assertEquals(timeAdjust(\\\"01:00:00\\\", 1, 30, 10), \\\"02:30:10\\\", \\\"Example #1\\\")\\nTest.assertEquals(timeAdjust(\\\"18:22:30\\\", 4, 60, 30), \\\"23:23:00\\\", \\\"Example #2\\\")\\nTest.assertEquals(timeAdjust(\\\"00:00:00\\\", 72, 120, 120), \\\"02:02:00\\\", \\\"Example #3\\\")\\nTest.assertEquals(timeAdjust(\\\"23:59:59\\\", 0, 0, 1), \\\"00:00:00\\\")\\nTest.assertEquals(timeAdjust(\\\"12:17:43\\\", 0, 0, 0), \\\"12:17:43\\\")\\nTest.assertEquals(timeAdjust(\\\"14:11:29\\\", 1000, 23466, 171626), \\\"12:57:55\\\")\\nTest.assertEquals(timeAdjust(\\\"21:02:55\\\", 39, 62525, 332), \\\"22:13:27\\\")\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,0,2,3,2,3,1,3,1,3,2,2,3,3,2,2,3,3,3,3,3,4,3,1,1,3,3,3,0,3,4],\"rators\":[\"5Zq3aGdvh4LHBvnJL\",\"65dbBZynphj53nXqA\",\"RE4Mm9T6Q9uygAxGS\",\"n5wubRfh6zh8QRymN\",\"AasGs8AeX9Lcb9xJn\",\"cRpaCxYRmGcN3Nsoj\",\"bzm5WayBjwad5jhdR\",\"yjtdwc2AC4jA2RWtn\",\"CuY5BaTCcu7Mp9tDu\",\"jqbm8L6895JgAtZ6H\",\"XKi8iZXBCHCaebSHh\",\"FJsvM5yqKuK9yMk9P\",\"6BpBQnSGhzgvhXrEy\",\"RqMXPyskYgGs2TgZf\",\"p2woPCQKXuWJCwffJ\",\"2innwjWqxJHo4eRGh\",\"EWn8w8P3nNh7knatY\",\"a777e8chPvJkY3tKa\",\"b7GtDPC7j4bAmK4t9\",\"8raviPK67KKxzQWcF\",\"NchnDcEmsLTeFZ4FH\",\"EZtSTkxrJZ3ETscQG\",\"aEm3Wvj2rFYRL8Lrb\",\"mHT2bJb5SByfJ8yKS\",\"CNc6rmwhbxkxEhHAp\",\"vGKxRcDYDsXzTQuEQ\",\"u9cRf5kvtpRB5ffB3\",\"QRv96jmNaYsWkxQEG\",\"wJTDDTE3TrmSXKP4d\",\"DPi9QGLctq2y76KuE\",\"9gEWz76H8KmhN4yJj\",\"8BJyXvRWcrvN3nttS\",\"oDtGiNqDMHmhHE3J8\"],\"total\":35,\"quality\":[5,5,4]},\"flags\":0},\"summary\":\"In this challenge, you have to add a variable amount of hours, minutes and seconds to a given time, obtaining, in turn, a new adjusted time.\\n\\nGiven a string now being a timestamp in the format hh:mm:ss, and three integers hrs, min and sec being the hours, minutes and seconds to add, implement a function that returns a string being the newly adjusted timestamp\",\"tags\":[\"dates\",\"strings\",\"formatting\"],\"timestamp\":{\"$date\":1579481938487},\"title\":\"To Adjust the Time\",\"quality\":4.666666666666667,\"family\":[{\"_id\":\"btK8qCvygCLsMEsqy\",\"language\":\"cpp\"},{\"_id\":\"AuH5MDBMBcTS9Te4K\",\"language\":\"javascript\"},{\"_id\":\"YsD3af7LgaH6JRSCH\",\"language\":\"python3\"},{\"_id\":\"BP7TvTkWYfX94EF8w\",\"language\":\"ruby\"}]}}"]