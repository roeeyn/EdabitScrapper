a["{\"msg\":\"result\",\"id\":\"707\",\"result\":{\"_id\":\"FFdZPWBpBWvBjuGdr\",\"author\":\"Caleb Miller\",\"authorId\":\"2QziknsznNeMPRh3g\",\"code\":\"function iSqrt(n) {\\n\\t\\n}\",\"difficulty\":1.4758064516129032,\"quality\":4.584070796460177,\"familyId\":\"LP3f62B2ATMcr2Ykj\",\"instructions\":\"The iterated square root of a number is the number of times the square root function must be applied to bring the number **strictly under 2**.\\n\\nGiven an integer, return its iterated square root. Return `\\\"invalid\\\"` if it is negative.\\n\\n### Examples\\n```\\niSqrt(1) ➞ 0\\n\\niSqrt(2) ➞ 1\\n\\niSqrt(7) ➞ 2\\n\\niSqrt(27) ➞ 3\\n\\niSqrt(256) ➞ 4\\n\\niSqrt(-1) ➞ \\\"invalid\\\"\\n```\\n\\n### Notes\\nIdea for iterated square root by Richard Spence.\",\"isHidden\":false,\"lab\":\"Test.assertEquals(iSqrt(1), 0, \\\"Example 1\\\")\\nTest.assertEquals(iSqrt(2), 1, \\\"Example 2\\\")\\nTest.assertEquals(iSqrt(7), 2, \\\"Example 3\\\")\\nTest.assertEquals(iSqrt(27), 3, \\\"Example 4\\\")\\nTest.assertEquals(iSqrt(256), 4, \\\"Example 5\\\")\\nTest.assertEquals(iSqrt(-1), \\\"invalid\\\", \\\"Example 6\\\")\\nTest.assertEquals(iSqrt(25), 3)\\nTest.assertEquals(iSqrt(59), 3)\\nTest.assertEquals(iSqrt(113), 3)\\nTest.assertEquals(iSqrt(253), 3)\\nTest.assertEquals(iSqrt(965), 4)\\nTest.assertEquals(iSqrt(999), 4)\\nTest.assertEquals(iSqrt(2746), 4)\\nTest.assertEquals(iSqrt(2872), 4)\\nTest.assertEquals(iSqrt(4069), 4)\\nTest.assertEquals(iSqrt(6575), 4)\\nTest.assertEquals(iSqrt(7985), 4)\\nTest.assertEquals(iSqrt(8385), 4)\\nTest.assertEquals(iSqrt(16943), 4)\\nTest.assertEquals(iSqrt(26749), 4)\\nTest.assertEquals(iSqrt(34665), 4)\\nTest.assertEquals(iSqrt(44591), 4)\\nTest.assertEquals(iSqrt(50320), 4)\\nTest.assertEquals(iSqrt(66343), 5)\\nTest.assertEquals(iSqrt(69420), 5)\\nTest.assertEquals(iSqrt(77632), 5)\\nTest.assertEquals(iSqrt(97197), 5)\\nTest.assertEquals(iSqrt(108787), 5)\\nTest.assertEquals(iSqrt(229276), 5)\\nTest.assertEquals(iSqrt(319228), 5)\\nTest.assertEquals(iSqrt(426748), 5)\\nTest.assertEquals(iSqrt(595996), 5)\\nTest.assertEquals(iSqrt(652940), 5)\\nTest.assertEquals(iSqrt(709442), 5)\\nTest.assertEquals(iSqrt(881414), 5)\\nTest.assertEquals(iSqrt(954281), 5)\\nTest.assertEquals(iSqrt(4294967296), 6)\\nTest.assertEquals(iSqrt(9852481428), 6)\\nTest.assertEquals(iSqrt(-198329), \\\"invalid\\\")\\nTest.assertEquals(iSqrt(-928437002), \\\"invalid\\\")\",\"language\":\"javascript\",\"summary\":\"The iterated square root of a number is the number of times the square root function must be applied to bring the number strictly under 2.\\n\\nGiven an integer, return its iterated square root. Return \\\"invalid\\\" if it is negative.\\n\\nExamples\\niSqrt(1) ➞ 0\\n\\niSqrt(2) ➞ 1\\n\\niSqrt(7) ➞ 2\\n\\niSqrt(27) ➞ 3\\n\\niSqrt(256) ➞ 4\\n\\niSqrt(-1) ➞ \\\"invalid\\\"\\n\\nNotes\\nIdea for iterated squar\",\"tags\":[\"loops\",\"numbers\",\"math\"],\"timestamp\":{\"$date\":1601173762253},\"title\":\"Iterated Square Root\",\"stats\":{\"completed\":{\"total\":241,\"ratings\":[1,1,1,1,1,2,1,2,0,2,1,1,1,1,1,2,1,1,0,1,0,1,0,2,1,1,2,3,2,1,2,2,2,1,1,1,1,2,2,0,1,2,1,2,1,3,2,2,2,2,2,2,1,2,2,0,2,2,1,2,2,1,2,2,2,2,0,1,1,4,2,1,1,1,1,2,0,2,0,1,2,2,2,2,1,2,1,1,2,0,1,1,2,2,1,2,2,2,2,2,1,2,0,2,2,2,5,1,2,2,2,1,1,2,1,3,2,1,3,0,0,2,2,1],\"quality\":[5,5,5,5,5,5,4,4,5,4,5,3,5,5,5,5,5,4,3,4,5,5,5,5,4,5,5,4,5,1,4,5,4,5,5,3,5,5,4,5,5,5,3,5,5,5,4,5,5,5,5,5,5,5,5,5,3,4,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,1,5,5,1,3,5,5,5,5,3,5,1,5,5,5,5,5,5,3,5,5,5,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],\"rators\":[\"2QziknsznNeMPRh3g\",\"2Ni3PzJAc5fAhqBkb\",\"pdGuqmMyeN4wZaWwv\",\"QRv96jmNaYsWkxQEG\",\"Kt6oGAfrymXmAnn2d\",\"qWR7eXxBiNee22A5u\",\"yjtdwc2AC4jA2RWtn\",\"tAF9Gf6PiGogbZuWs\",\"mHT2bJb5SByfJ8yKS\",\"BdnE4RS5puoxo92mA\",\"bBRzXPk7u95YuDWEL\",\"deyeABusvRmZofT2b\",\"BdvdJYwHZr7JpkHsn\",\"g4NCSxxHqHCGMpWwT\",\"e9Cknxbx6o7Nb6REs\",\"xAfaHANrS8Zs2475d\",\"oyB4Wr4EeZnoDaa8B\",\"zgoq9MhrL2h75DAMA\",\"JPcvG7z3cqtrkeqYf\",\"bjn5DTzzaWCP5BDgX\",\"oGA9Dj9za4aRmnLpK\",\"DjPJY8kRgXbehNyGH\",\"AFfw7cGg83uYk2Miy\",\"SNiJRRosrmSWssLj4\",\"HRpELhvG59jPywCdH\",\"kp2ZbCewZJAbfd7xv\",\"RRFsDNRaKW6h9tF3Y\",\"buX4mCQhtXCfBjeno\",\"aetwPXJoNSpHAq6RL\",\"bAvZKuLAnKq8mSp5B\",\"WSLPmXqJzRjtYkuwf\",\"sCNwsE6j79TCHeCAC\",\"d2Tyep2ePbTqN6WNm\",\"Kntd2rSgWYWp8r4sP\",\"8BJyXvRWcrvN3nttS\",\"zw7g7T8wE5R5CBhXr\",\"QAZ5DGaWWYhku4BNz\",\"Ztjzu68pXi4d9QXLm\",\"pi76g3eRpnKrhee2a\",\"hTaa8XvWuAJmKnfTt\",\"65dbBZynphj53nXqA\",\"g3Bq6N2TtNzEk8oPm\",\"YmMgWhzhHhQLmGGgH\",\"6BpBQnSGhzgvhXrEy\",\"RE4Mm9T6Q9uygAxGS\",\"GCsLzWAhLvniQqR3J\",\"uepSq2ef7i5ZqD4TZ\",\"ZTTJprKDvFqKGew7c\",\"n5wubRfh6zh8QRymN\",\"n96geSuHEuwrqQa2d\",\"GPNPqMBWf8c9FwrsM\",\"qmb2uihnMMWrxTorn\",\"nBJve5CzG6WAw7WFQ\",\"A4XmbtK4mFy7vEtsT\",\"DMTDnmSBsQdCDGRBW\",\"3WtHp4MBzciz4AE8M\",\"HCMsuphBkW3GGJJnF\",\"jLSZdBseR2kfjt8dL\",\"m3hDrjgTwir8Ldwhu\",\"RyLmqZbY5sQNzZQbL\",\"6Q5ihwYMHRaszMkNb\",\"tRQTjegYuAGGqWwf5\",\"iRWkFFriwxk5oAbDg\",\"Rrb84KWhN5tjhMGMA\",\"TjwyRbkPanQTP7AYs\",\"a2s2wascsX5x7oJN8\",\"GDdixPFEyF2sLP4hu\",\"75NY7vqimaATzRdAX\",\"T3RnqmkpTbjCKFdtm\",\"Ya3eHgs8x3unZRLpb\",\"ZQipcG4yQwRrGW9Xu\",\"kBKftvg9pp6LHWDgE\",\"sAhNjH3HZ9tSSSKTX\",\"QvJ36SnEakZn3pjqH\",\"qvNk7pHSveLu3jqWw\",\"qzzyGD7fCCDjX25za\",\"HwDmnvrGaLFi6RfEq\",\"yqu5KmZa5Fm4ZTMjN\",\"k6ELRMNKLGDbymvM5\",\"KRxdBdKejHJrC44Nh\",\"jkumHyXfMkhGcPgqC\",\"msvq2CrhocsqW6SDk\",\"6Sgyv8fZHTMmL78Ez\",\"xKoMMhNyqWdbomgdJ\",\"gMGRYgjBu3oDs2S4f\",\"PtpZzTyCnfqM2X7cL\",\"z5ebtimXwFFJdYxoa\",\"Y9fRBuLbZFTAk7jsf\",\"acHSYL6uQAgpgFMjp\",\"TT3xjsM8gSGWQjxbK\",\"FqX6H6EGt37BDJ8sH\",\"6YaJQa89G3Nswk8Ao\",\"6ixfX5gbXeqiqSD6v\",\"RFqRp2Bou8KXupQkt\",\"yRNjd4uT4JcYGW7kq\",\"vtHbevf2tHqe6mRxX\",\"DFZFJAWdz7aygKyQv\",\"Jie8vpGoLdeRsp7Ti\",\"pGh7WykiPe26fHJYv\",\"8s5Bdrn7RTga7DL6x\",\"Gc2bmsof5vD2Hsgqv\",\"H46gRHmkdz2CRrGH9\",\"WbXHZDxj5femhG7x2\",\"wJTDDTE3TrmSXKP4d\",\"rehehi2Tr2mwaEoJE\",\"pWJWQDhqzDSmfaFam\",\"Es4eX2stRpyoXeC7f\",\"9XnGoq9Tv6ut3zTtH\",\"i49enk79wAajcgi7a\",\"E2hpke7mHxAWsw5t9\",\"tseyDEv9zaHBMvLL3\",\"vSPc7MGK5Poy8tSFp\",\"u9cRf5kvtpRB5ffB3\",\"eQXwk5zGckM8tCWYH\",\"evTTY9hwrtogaNxXn\",\"Yp7uvStL97cC9fKkY\",\"nyFk4kf54xogGLbzp\",\"5M8fzXNCLvunAxZac\",\"RJS22bAq2aqv3Rs33\",\"Akq3fQcPRgPrWfsye\",\"4TuceAZ8oTDzsjhir\",\"ttuGK7od8simjgmCJ\",\"bjTTNjFcwt9uW7pvu\",\"j2ugW5ihGv67sfh4e\",\"BjJhatTBaTWm3ZhCt\",\"3miomeMM4QHx9yava\",\"nXToJ5kpsRfi4nyw2\",\"EsYKpvPGPnYN4jfTm\",\"aarsZPCAfm59DiJEZ\",\"SDtZFL5NzAoCPofXk\",\"E9Yus8zjdHZoxSdEB\",\"mwg8jvMHHmQiQRrbr\",\"cp3X8hk8yNME7qoD9\",\"sNcDN3s3rH9wcNg5n\",\"xLibLiovYxzFoXzJW\",\"E6DBfkTgHuPsDWdG8\",\"7wtuhPesfhcYsfZaZ\",\"oE8rNagYonFzFvKH5\",\"2ZabBuAKvgS9qTSM7\",\"vKch2w3b4keMd84jj\",\"CFNWRPs3cCTJw6p9B\",\"2nCWnTXnmawovwdv9\",\"JW5J6sdJHAmDmfWnE\",\"3Gf7ikLijfoxabiPY\",\"9t7udKzMuXKhB2EMZ\",\"Zp93Tit7CTRdkCMqp\",\"LCn6qz2GoMr5577Rd\",\"XzMxsyYj2ZeZ6Jmis\",\"4wR64Jaibcom7tbYf\",\"2ZFoLTxcCARhwc8xX\",\"AsipYXYSWwYMscMn3\",\"Po3v3dHCk6wYGKMwi\",\"ZtTwZM9pQ2sAzhnMR\",\"FJsvM5yqKuK9yMk9P\",\"mpLFbFKjY6u3nsDMv\",\"CCkHqRq5tcYmW2dsT\",\"nkH3HfJXLMNcBMM79\",\"jpSy4qhuDNwPk9mrf\",\"Nb6LYPoQP6KJZt8mz\",\"DPi9QGLctq2y76KuE\",\"FGEeCTorXbX3WvjFW\",\"LoXuMSHf5859u4m6a\",\"gXAv2R45dNKYQ7S2K\",\"vTRTXQ3P8c3mibEnJ\",\"LwD3CyYSiBfg3mA4r\",\"srJ34BaybkQh3qRkM\",\"J7d397iB5GuWRAMfg\",\"8EJ4j2fcfjTJ7Zrzu\",\"ZK6YmYMsfwXYtaZ9P\",\"2Qk2mFu9HBFzrB24i\",\"c7uBxu2rgY77H5d79\",\"n4Y5EEGCjmrK99yrt\",\"2tCCFm5iefjrRSaxv\",\"yq3MrJoHHMPNCu55C\",\"sfj3i3eEAfZa3f9kg\",\"R9uaMzX2Y4ND8Cosm\",\"CMLqMQhqhTxsx7ZYg\",\"K45zPJxsABuA3WSyj\",\"eANW47mfA359Y6JyP\",\"oDnPTXrzYF4snDPXY\",\"oDtGiNqDMHmhHE3J8\",\"inbiBEY2tizFwkN84\",\"bX6tpTCjwoi6XMMbK\",\"9HZbxzkzgz4CvePtv\",\"LRQJJXqsYfhRyzifu\",\"FNSAQc8zePEhAGxSX\",\"WQKXMhPwu968bt53S\",\"F7gDiZkmk6ZFcoc9j\",\"dpDFNsknxvEYi5YkA\",\"fC45hYrN7p6ArZBuk\",\"w32idALSdtih656kd\",\"vBar49vcmkTpcogGT\",\"sN2JyFeJCwfwwHPwF\",\"3bkSPDJ6yFhFsGHP7\",\"RQwuHHy4rBgaQCLte\",\"Xk2g4CNFAnYcvxiSr\",\"RoGGD5cpHb4ftdLDv\",\"jnyub52Fi79drGvow\",\"AasGs8AeX9Lcb9xJn\",\"NGvCPuMiAP3xrRLfB\",\"hCfruGWxw7v64teEr\",\"QGjY3hgPYPMmMjc7j\",\"ceMycDhXzsRojnr9F\",\"JFiiZhAZTNQSvjzdp\",\"49XFttjKo2QhEWT3R\",\"ckMvGF5TAyCwcxJBm\",\"wo4cpen33NYFHNca7\",\"E3fkFzNeAGctuvqA2\",\"rpNNPWzdFCc9TzKMz\",\"gXTAie79kiw28tx5u\",\"x2Cz7S8rCKJqCE3Xe\",\"uxKGACwmZ6FNZsMwE\",\"8BFSTCnoe2QggN64c\",\"ZKuwzkssrSsDGNPr5\",\"jyoLggHk8xQKZuoQC\",\"bfYmA3LMvhSrK59cn\",\"34bE6mric984YYLZQ\",\"rPsSEYqwmttMPEuvo\",\"HCfkcKnPs9mrJojdG\",\"AMpQSjKsRqhCDyS2j\",\"aEm3Wvj2rFYRL8Lrb\",\"jzdjJtfQiCYmiyvzh\",\"4WYjScmBWK9eXRzvd\",\"eomLS3wh6tQPN8jtH\",\"szQg8dxKNNre3v3Jk\",\"gf4xrfguK6KiEF9yi\",\"pPpmP7xeJzGgK362R\",\"CHvzhtXnv8HTbPQ56\",\"qAEumdjLRx2AGAmzw\",\"psdbt2PkjPv4qTwtr\",\"QJoHpT8fkmJ5j4hk4\",\"8JJHJfbYpxvDiPpBn\"]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":1},\"editorId\":\"2QziknsznNeMPRh3g\",\"family\":[{\"_id\":\"FFdZPWBpBWvBjuGdr\",\"language\":\"javascript\"},{\"_id\":\"x5o7jTvzXjujvrh6t\",\"language\":\"python3\"},{\"_id\":\"GsTFknAFnmm2hivdo\",\"language\":\"ruby\"}]}}"]