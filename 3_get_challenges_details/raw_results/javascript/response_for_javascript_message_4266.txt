a["{\"msg\":\"result\",\"id\":\"890\",\"result\":{\"_id\":\"ki2njto7agJD3EdZ6\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"function endsAddTo10(nums) {\\n\\t\\n}\",\"difficulty\":1.5888888888888888,\"familyId\":\"ZvxX7L2xmdvhv5X3b\",\"instructions\":\"Given an array of numbers, of any length, create a function which counts how many of those numbers pass the following criteria:\\n* The **first** and **last** digits of a number must add to **10**.\\n\\n### Examples\\n```\\nendsAddTo10([19, 46, 2098]) ➞ 3\\n\\nendsAddTo10([33, 44, -55]) ➞ 1\\n\\nendsAddTo10([]) ➞ 0\\n```\\n\\n### Notes\\n- All items in the array will be numbers.\\n- Ignore negative signs (see example #2).\\n- If the number contains only one digit, that digit will be the first and the last digit.\\n- If given an empty array, return `0`.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertEquals(endsAddTo10([19, 46, 2098]), 3)\\nTest.assertEquals(endsAddTo10([33, 44, -55]), 1)\\nTest.assertEquals(endsAddTo10([]), 0)\\nTest.assertEquals(endsAddTo10([-91, 55, -33]), 2)\\nTest.assertEquals(endsAddTo10([100, -10, 1, 3, 2, 5, 2]), 1) // I think 5 should count.\\nTest.assertEquals(endsAddTo10([19, 28, 37, 46, 55, 64, 73, 82, 91]), 9)\\nTest.assertEquals(endsAddTo10([-19, -28, -37, -46, -55, -64, -73, -82, -91]), 9)\",\"language\":\"javascript\",\"quality\":4.578947368421052,\"summary\":\"Given an array of numbers, of any length, create a function which counts how many of those numbers pass the following criterea:\\nThe first and last digits of a number must add to 10.\\n\\nExamples\\nendsAddTo10([19, 46, 2098]) ➞ 3\\n\\nendsAddTo10([33, 44, -55]) ➞ 1\\n\\nendsAddTo10([]) ➞ 0\\n\\nNotes\\nAll items in the array will be numbers.\\nIgnore negative signs (see example #2)\",\"tags\":[\"loops\",\"arrays\",\"numbers\"],\"timestamp\":{\"$date\":1604253690258},\"title\":\"Adding Both Ends Together\",\"stats\":{\"completed\":{\"total\":109,\"ratings\":[1,1,1,1,1,2,2,2,2,1,2,2,2,0,0,2,2,3,2,2,0,2,2,1,2,1,2,2,2,1,2,2,1,2,2,0,2,2,2,1,2,2,2,2,2,0,2,2,1,3,2,2,2,2,2,2,1,0,5,1,1,2,1,2,0,0,2,2,1,2,2,0,2,2,2,2,2,2,2,2,2,2,2,0,1,2,1,1,2,0],\"quality\":[5,5,5,4,5,2,5,5,5,5,5,3,4,5,5,5,5,5,4],\"rators\":[\"Yp7uvStL97cC9fKkY\",\"xzZQDmPgjhkorhA5n\",\"Ya3eHgs8x3unZRLpb\",\"vewKwcMeGuk3p3MsN\",\"yjtdwc2AC4jA2RWtn\",\"pdGuqmMyeN4wZaWwv\",\"srJ34BaybkQh3qRkM\",\"WSLPmXqJzRjtYkuwf\",\"CNc6rmwhbxkxEhHAp\",\"g4NCSxxHqHCGMpWwT\",\"r7mZLgpQWzRiGddL5\",\"ab3qTsovf6ftiXgWy\",\"kp2ZbCewZJAbfd7xv\",\"evTTY9hwrtogaNxXn\",\"pWJWQDhqzDSmfaFam\",\"QRv96jmNaYsWkxQEG\",\"bBRzXPk7u95YuDWEL\",\"2Ni3PzJAc5fAhqBkb\",\"mHT2bJb5SByfJ8yKS\",\"qWR7eXxBiNee22A5u\",\"FGEeCTorXbX3WvjFW\",\"omn98QP6uBd923Azp\",\"RE4Mm9T6Q9uygAxGS\",\"75NY7vqimaATzRdAX\",\"vtHbevf2tHqe6mRxX\",\"u9cRf5kvtpRB5ffB3\",\"buX4mCQhtXCfBjeno\",\"zw7g7T8wE5R5CBhXr\",\"jkumHyXfMkhGcPgqC\",\"nyh73Tr6GhqAat78g\",\"ttuGK7od8simjgmCJ\",\"3Gf7ikLijfoxabiPY\",\"STipuJs6kBvPqqsSE\",\"nkH3HfJXLMNcBMM79\",\"DPi9QGLctq2y76KuE\",\"8BJyXvRWcrvN3nttS\",\"5hHf2e9zimbmxMqqF\",\"z5ebtimXwFFJdYxoa\",\"2Qk2mFu9HBFzrB24i\",\"JsRTAwWK7Nikj4sKA\",\"Po3v3dHCk6wYGKMwi\",\"J7d397iB5GuWRAMfg\",\"6vfjruFp8ZpRSi3AT\",\"3WtHp4MBzciz4AE8M\",\"ApqWTmEEkTCsDou48\",\"6BpBQnSGhzgvhXrEy\",\"npp5hesJrst6ghKSM\",\"CH53jGETBeJTummf3\",\"cgCQDs9i7yChKeAjE\",\"R9uaMzX2Y4ND8Cosm\",\"wJTDDTE3TrmSXKP4d\",\"bX6tpTCjwoi6XMMbK\",\"AFfw7cGg83uYk2Miy\",\"733qgZ7ZSSSrzbXGw\",\"65dbBZynphj53nXqA\",\"vGKxRcDYDsXzTQuEQ\",\"sHnfwDzKzmeApjTv8\",\"oDtGiNqDMHmhHE3J8\",\"TtrXnGzi9MyhLvWiz\",\"c7uBxu2rgY77H5d79\",\"AasGs8AeX9Lcb9xJn\",\"NGvCPuMiAP3xrRLfB\",\"zEt6FvmkSPSHvCyGF\",\"LwD3CyYSiBfg3mA4r\",\"tAF9Gf6PiGogbZuWs\",\"3mRFqGRbdKXGkJHMv\",\"rpNNPWzdFCc9TzKMz\",\"pi76g3eRpnKrhee2a\",\"nBJve5CzG6WAw7WFQ\",\"gXTAie79kiw28tx5u\",\"Q7Yxda7dqKeYPs2Db\",\"Kt6oGAfrymXmAnn2d\",\"jyoLggHk8xQKZuoQC\",\"2ZRsXKpD5Kdi8C4iF\",\"SCYNpjgtLCE9rKpYB\",\"eWoi3eexfQ2iaapBA\",\"bfYmA3LMvhSrK59cn\",\"mpLFbFKjY6u3nsDMv\",\"sN2JyFeJCwfwwHPwF\",\"9XnGoq9Tv6ut3zTtH\",\"oyB4Wr4EeZnoDaa8B\",\"9HZbxzkzgz4CvePtv\",\"rPsSEYqwmttMPEuvo\",\"z47JaNrQMgvuPx5HE\",\"eomLS3wh6tQPN8jtH\",\"K45zPJxsABuA3WSyj\",\"7wtuhPesfhcYsfZaZ\",\"HCfkcKnPs9mrJojdG\",\"inbiBEY2tizFwkN84\",\"PTo9qt93YqGvL8fCa\",\"uxKGACwmZ6FNZsMwE\",\"RbBEqArJC6CJ3SqkL\",\"XdCcStvrRDTJAN5Zc\",\"koWGjiCmozmgwhYsb\",\"oHX2Y5pPWyz5ib5Jm\",\"QnPD4Sv6W4LHc2Qng\",\"LPZ2QKCoB8q6rG25c\",\"CHvzhtXnv8HTbPQ56\",\"ecEBGmi9dPBxyxfYz\",\"jnyub52Fi79drGvow\",\"pPpmP7xeJzGgK362R\",\"WnogMFYXoyvmBmGkm\",\"QHiEYtz3tX3s9nETo\",\"aEm3Wvj2rFYRL8Lrb\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"6ALfEpNtwKZNBHocT\",\"language\":\"cpp\"},{\"_id\":\"ki2njto7agJD3EdZ6\",\"language\":\"javascript\"},{\"_id\":\"en35WbjkDF9ej59FW\",\"language\":\"python3\"},{\"_id\":\"5WqkiY9sxXE3pTFB2\",\"language\":\"ruby\"}]}}"]