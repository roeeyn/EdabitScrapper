a["{\"msg\":\"result\",\"id\":\"2076\",\"result\":{\"_id\":\"JCxa7DhzitMZFWBk4\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"function bitwiseOneZero(arr) {\\n\\t\\n}\",\"difficulty\":2.9130434782608696,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"tiXXsdQo7zwn7ircg\",\"instructions\":\"Write a function that returns the smallest integer in an array with its corresponding index and its parity. Even though this challenge can be achieved easily with the modulo operator `%`, `indexOf()` and `min()` methods, these have been restricted to augment the challenge's level of difficulty.\\n\\n### Output Structure\\n```\\n{\\\"@index \\\" + index_of_smallest: smallest_integer, \\\"parity\\\": \\\"odd|even\\\"}\\n```\\n\\n\\n### Examples\\n```\\nbitwiseOneZero([107, 19, -18, -79, 36, 23, 97]) ➞ {\\\"@index 3\\\": -79, \\\"parity\\\": \\\"odd\\\"}\\n\\nbitwiseOneZero([31, 7, 2, 13, 7, 9, 10, 13]) ➞ {\\\"@index 2\\\": 2, \\\"parity\\\": \\\"even\\\"}\\n\\nbitwiseOneZero([3, 3, 3, 3, 3, 3]) ➞ {\\\"@index 0\\\": 3, \\\"parity\\\": \\\"odd\\\"}\\n```\\n\\n### Notes\\n- The set of limitations imposed on this challenge dictates the level of difficulty.\\n- Another version of this challenge that deals with recursion can be [found here](https://edabit.com/challenge/q3LpnKujfvSZpu9qQ).\",\"isFree\":false,\"isHidden\":false,\"lab\":\"const noIndexOfMinMod = f => !RegExp('indexOf|min|%').test(f)\\nconst noRecur = f => !((`${f}`.match(RegExp(`${f.name}`,'gm'))||[]).length > +(/function/.test(f)))\\nTest.assertNotEquals(noIndexOfMinMod(bitwiseOneZero), false, \\\"The use of modulo operator (%) isn't allowed!\\\")\\nTest.assertNotEquals(noRecur(bitwiseOneZero), false, \\\"A recursive solution isn't allowed!\\\")\\n\\nlet numVector = [\\n  [107, 19, -18, -79, 36, 23, 97],\\n  [31, 7, 2, 13, 7, 9, 10, 13],\\n  [3, 3, 3, 3, 3, 3],\\n  [-31, -7, -13, -7, -9, -13],\\n  [1, 3, 9, 5, -1, 7, 9, 49],\\n  [63, 77, 13, 75, 91, 113],\\n  [6, 6, 6, 6, 6, 6]\\n],\\nresVector = [\\n  {\\\"@index 3\\\": -79, \\\"parity\\\": \\\"odd\\\"},\\n  {\\\"@index 2\\\": 2, \\\"parity\\\": \\\"even\\\"},\\n  {\\\"@index 0\\\": 3, \\\"parity\\\": \\\"odd\\\"},\\n  {\\\"@index 0\\\": -31, \\\"parity\\\": \\\"odd\\\"},\\n  {\\\"@index 4\\\": -1, \\\"parity\\\": \\\"odd\\\"},\\n  {\\\"@index 2\\\": 13, \\\"parity\\\": \\\"odd\\\"},\\n  {\\\"@index 0\\\": 6, \\\"parity\\\": \\\"even\\\"}]\\nfor (let i in numVector) Test.assertSimilar(bitwiseOneZero(numVector[i]), resVector[i])\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[4,4,4,4,4,4,0,3,1,2,3,3,2,2,4,3,2,2,3,3,3,2,5],\"rators\":[\"a777e8chPvJkY3tKa\",\"aEm3Wvj2rFYRL8Lrb\",\"hcm8sL8mNJTSfTdgE\",\"yjtdwc2AC4jA2RWtn\",\"mHT2bJb5SByfJ8yKS\",\"ZcqshY58sGEEvgeaq\",\"qvNk7pHSveLu3jqWw\",\"vic9SZ9qqj9WhRkbd\",\"n5wubRfh6zh8QRymN\",\"CJBPyyfyaEeEo63sb\",\"tAF9Gf6PiGogbZuWs\",\"QRv96jmNaYsWkxQEG\",\"pGh7WykiPe26fHJYv\",\"G5TXJeajSfujM2NWW\",\"PH32cNxBjrK4a28sn\",\"DPi9QGLctq2y76KuE\",\"M4vq8ATaS9Jg5X7iP\",\"zkfmaM9szkjNBAKhX\"],\"total\":20,\"quality\":[]},\"flags\":0},\"summary\":\"Write a function that returns the smallest integer in an array with its corresponding index and its parity. Even though this challenge can be achieved easily with the modulo operator %, indexOf() and min() methods, these have been restricted to augment the challenge's level of difficulty.\\n\\nOutput Structure\\n{\\\"@index \\\" + indexofsmallest: smallest_integer, \\\"parit\",\"tags\":[\"arrays\",\"logic\",\"loops\"],\"timestamp\":{\"$date\":1595961532017},\"title\":\"Parity of the Smallest Integer\",\"quality\":0,\"family\":[{\"_id\":\"JCxa7DhzitMZFWBk4\",\"language\":\"javascript\"},{\"_id\":\"vLuPSuCWNTuxDJuJt\",\"language\":\"python3\"}]}}"]