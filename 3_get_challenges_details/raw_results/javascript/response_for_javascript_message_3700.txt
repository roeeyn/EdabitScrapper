a["{\"msg\":\"result\",\"id\":\"608\",\"result\":{\"_id\":\"fK8a63ttMnt9CZmhg\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"function lonelyInteger(arr) {\\n\\t\\n}\",\"difficulty\":1.4119850187265917,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"4eXfRQAqEJfbL6qyf\",\"instructions\":\"You are given an array of integers having both **negative and positive** values, except for one integer which can be negative or positive. Create a function to find out that integer.\\n\\n### Examples\\n```\\nlonelyInteger([1, -1, 2, -2, 3]) ➞ 3\\n// 3 has no matching negative appearance.\\n\\nlonelyInteger([-3, 1, 2, 3, -1, -4, -2]) ➞ -4\\n// -4 has no matching positive appearance.\\n\\nlonelyInteger([-9, -105, -9, -9, -9, -9, 105]) ➞ -9\\n```\\n\\n### Notes\\nN/A\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertEquals(lonelyInteger([1, -1, 2, -2, 3]), 3)\\nTest.assertEquals(lonelyInteger([-3, 1, 2, 3, -1, -4, -2]), -4)\\nTest.assertEquals(lonelyInteger([1, -1, 2, -2, 3, 3]), 3)\\nTest.assertEquals(lonelyInteger([-110, 110, -38, -38, -62, 62, -38, -38, -38]), -38)\\nTest.assertEquals(lonelyInteger([-9, -105, -9, -9, -9, -9, 105]), -9)\",\"language\":\"javascript\",\"quality\":4.622950819672131,\"stats\":{\"completed\":{\"ratings\":[0,0,0,0,0,0,1,2,0,2,0,0,1,1,0,1,0,1,2,1,1,0,0,0,3,0,0,0,0,0,0,1,1,1,0,0,1,0,0,2,1,0,0,0,2,0,2,0,2,1,3,0,1,3,0,2,2,2,0,1,2,0,1,0,1,2,1,0,0,2,0,0,2,0,1,0,1,2,2,1,4,3,0,0,2,1,1,2,3,5,3,1,2,3,0,2,1,2,2,0,2,1,1,1,1,3,3,1,1,1,2,2,2,2,2,3,1,2,1,1,1,1,2,3,1,1,2,2,1,1,2,1,2,2,0,1,2,1,3,3,0,2,1,2,1,2,2,0,0,1,1,2,2,0,2,1,2,1,1,2,2,1,2,2,1,2,1,3,0,2,1,3,2,0,2,2,2,2,2,2,2,1,2,2,2,1,2,2,1,2,2,2,2,2,2,1,2,2,1,2,2,3,2,2,3,2,2,1,2,0,2,2,2,1,1,0,2,2,2,3,1,1,1,2,2,2,2,2,4,1,1,2,2,3,2,3,3,3,1,1,1,2,3,3,2,0,2,1,3,1,2,1,2,0,2,1,1,2,2,1,2,2,1,3,0,2,2],\"quality\":[5,5,4,5,5,5,1,5,5,5,5,5,3,5,2,2,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,4,5,5,5,5,4,5,5,5,5,5,5,5,5,5,4,5,4,5,5,3,5,5,4,4,5],\"rators\":[\"DPi9QGLctq2y76KuE\",\"PGCDJpQMN8Sjn9Gm6\",\"m6qKkBY4aPWziyJTj\",\"NioGGZL9KCn5Ln96t\",\"mHT2bJb5SByfJ8yKS\",\"Yp7uvStL97cC9fKkY\",\"ttuGK7od8simjgmCJ\",\"z5ebtimXwFFJdYxoa\",\"fZ9XDZvDEJaDX8jGo\",\"g4NCSxxHqHCGMpWwT\",\"dDFJpK4pXCsQYuHmc\",\"8EJ4j2fcfjTJ7Zrzu\",\"FGEeCTorXbX3WvjFW\",\"zd9FLSzsGz3evKafy\",\"TGaGcBpcGF5tjLAKs\",\"7q8oBsCHwn48Ppnrq\",\"bfYmA3LMvhSrK59cn\",\"jcPZ5ySXseCB7Ec3x\",\"srJ34BaybkQh3qRkM\",\"XrqNzJ2FRG8HnGiR6\",\"Nb6LYPoQP6KJZt8mz\",\"v2w9GN4jHP2fgYdeE\",\"NG8PWBSjsM8mMhQEq\",\"evTTY9hwrtogaNxXn\",\"yjtdwc2AC4jA2RWtn\",\"BAHLW6rS3k93S9E77\",\"iyXreJLEM7jv3kJAT\",\"7gZKfvwaeqsGKXMEN\",\"zNN2fW2pJGpTxBgzx\",\"QRv96jmNaYsWkxQEG\",\"xkgEAkfFQLrcisM69\",\"8n2SccMsut4XXwvRL\",\"jpSy4qhuDNwPk9mrf\",\"oyB4Wr4EeZnoDaa8B\",\"XykxiCqoQkWso9oXh\",\"FJwfLLXDakW2FxziT\",\"SNiJRRosrmSWssLj4\",\"K45zPJxsABuA3WSyj\",\"u9cRf5kvtpRB5ffB3\",\"2YpTLPtNv2XE7Rx6A\",\"L3KDYqDY3TRK7z5u7\",\"zw7g7T8wE5R5CBhXr\",\"4wR64Jaibcom7tbYf\",\"8BJyXvRWcrvN3nttS\",\"sTujsaoFEpFdX5bmb\",\"odELiWKpbNjnvAr7G\",\"yZJhbcWnafckQgNwX\",\"CjhfuJXSfCDDfGDni\",\"Z5ExXpdMdZfZtdzMN\",\"x38JQtfymaWGhH2s9\",\"RE4Mm9T6Q9uygAxGS\",\"BdwZ39RhdvRryPxev\",\"GT254DgQbCB3yLTi6\",\"ao9z2gzKxbvCKPLTH\",\"nyh73Tr6GhqAat78g\",\"dRT6LAbCrT5FBDJhi\",\"8QcJ2CXLrtfkAZhtf\",\"C357TqNdiYy9aTBut\",\"K4HLmkdyrNyCQZkaQ\",\"jnyub52Fi79drGvow\",\"AFfw7cGg83uYk2Miy\",\"5kR96WXAHycdd2aDb\",\"LvBYSaHtLuGLXryvP\",\"r6WgxqbFGJFSu4gDs\",\"buCNTd7J5LFZf2ChZ\",\"hT8T426rinDzZytaC\",\"dp9T67kuCtbzywSWp\",\"fe3gsFT3MbZ4azEC9\",\"eKaAu6L4cu3RSR48c\",\"y75CxdSxD7TxwjBvc\",\"zbxQf4XaYTo4vwQv6\",\"aW8X7thZENhjsy7He\",\"qAgv8TKmtAKWDMrWH\",\"9HZbxzkzgz4CvePtv\",\"QAZ5DGaWWYhku4BNz\",\"ptYxLsuWc2cJukmnp\",\"smWAjepo4yRboZQMK\",\"2Qk2mFu9HBFzrB24i\",\"J7d397iB5GuWRAMfg\",\"pdGuqmMyeN4wZaWwv\",\"e5Jtdmvy4wtz2mEns\",\"TTsiKukYnTL6yenZs\",\"buX4mCQhtXCfBjeno\",\"N3CNtWZz4ovJfH9Aw\",\"3WtHp4MBzciz4AE8M\",\"kPsX3Hr7fz58WZ6e9\",\"2Ni3PzJAc5fAhqBkb\",\"nXToJ5kpsRfi4nyw2\",\"njjZpAoSfaTRruAYn\",\"qFJpEDM2Ep6v4tqPz\",\"Ya3eHgs8x3unZRLpb\",\"QGjY3hgPYPMmMjc7j\",\"STipuJs6kBvPqqsSE\",\"fTtBJaXv5n9CTZfmt\",\"jLSZdBseR2kfjt8dL\",\"CNc6rmwhbxkxEhHAp\",\"HRpELhvG59jPywCdH\",\"2tCCFm5iefjrRSaxv\",\"x2Cz7S8rCKJqCE3Xe\",\"65dbBZynphj53nXqA\",\"hNEhHd8qodq4P3h2g\",\"vGKxRcDYDsXzTQuEQ\",\"bX6tpTCjwoi6XMMbK\",\"zJTXDTdbwnopRazGo\",\"vic9SZ9qqj9WhRkbd\",\"XEsokh2vJHkJvnnKv\",\"9qoWqLcHGiDX429rE\",\"M4vq8ATaS9Jg5X7iP\",\"k6QB6fzbj4LsWktRL\",\"jyCByAZwu576xDwEL\",\"FRN2W8RYpJ6GPhgRy\",\"Sfb5RNdmiKSDyqyp4\",\"3xMRkNrEPHEw99y56\",\"pPpmP7xeJzGgK362R\",\"RQwuHHy4rBgaQCLte\",\"733qgZ7ZSSSrzbXGw\",\"aLKHc5k4sM3GijhmE\",\"oDtGiNqDMHmhHE3J8\",\"tAF9Gf6PiGogbZuWs\",\"rbPEA2TFQw837Hmqg\",\"mpLFbFKjY6u3nsDMv\",\"PLAW6hHCDwfFyi5yx\",\"e9Cknxbx6o7Nb6REs\",\"Ef3McfqD44hj4Est9\",\"6BpBQnSGhzgvhXrEy\",\"vBz5EvEf4rAtTycK3\",\"2a56F4KyQHRgTubPL\",\"w8geFfsnhEfLPjBCq\",\"AasGs8AeX9Lcb9xJn\",\"gFEpzrgWhzCZHeifj\",\"hvTAyFPy4pJHdrYJX\",\"aWNggJDngk9DhC4Sg\",\"86kMtj2c6DG7paeqg\",\"eomLS3wh6tQPN8jtH\",\"j5FSQCayX3By73CCw\",\"5nhmyqLy8M2Yn2HMR\",\"8op7s67jE2nYdo4js\",\"jyoLggHk8xQKZuoQC\",\"pi76g3eRpnKrhee2a\",\"2TLngGdowbHujqTBa\",\"JW5J6sdJHAmDmfWnE\",\"vGcyxij2xbu7RNMqX\",\"4fjSgcqhQQZM2ZFRP\",\"7wtuhPesfhcYsfZaZ\",\"Q6gEE9dG8ERy2Xu3c\",\"vmad5Pz6mu3CRt22J\",\"fLkk52R2yoDaZ2jAt\",\"3o9xehumCaHZ4upFo\",\"QJqntLLpkx72XhQEz\",\"baCd8kJRo6TSzbEHJ\",\"ubQ4n3CJjZF3Cf7ap\",\"34bE6mric984YYLZQ\",\"3Ds8FoB6FmcGn97aQ\",\"YFhqRcrsTpgN7M9yh\",\"eRpvYA3q3zjFiYXeJ\",\"RnY25enEBE8T9P5GS\",\"NhtCw9XrjkLM6acCn\",\"SCY9Qyb83vz8ePBrZ\",\"ymWvGjFbaJbzA2JBh\",\"xSdDknCzHGkePHxge\",\"F2MQpm9C2onvRkbRo\",\"7Wky4fQRTTgLTZA8k\",\"sp2zZJDhdjzyAuZxi\",\"bHGSzaWy2WvNLNvtb\",\"XtWQW8tZ548GvTScJ\",\"iqpmAyJnagwRqB523\",\"naK6jBuvbnr6NbpbX\",\"Ff7FS6BBhLWG7Creg\",\"pxgAHHB8hNEegCYXm\",\"YKzk7XErqQKBr6uAp\",\"ZKuwzkssrSsDGNPr5\",\"tA9wW2FvMuNdDJkSM\",\"y3RQa2B8icKCj69dr\",\"KamSYvoWQmfMDFLXK\",\"ismDtpzYxzEhw6AQ2\",\"83EHFkXtZh9eRzxnA\",\"hCfruGWxw7v64teEr\",\"66xmfovMsobJQkRa7\",\"uxKGACwmZ6FNZsMwE\",\"3M7Yxz4dk24DnuzNs\",\"DCbBp3YgpefPrERvp\",\"S5LdoDom5pSMak37j\",\"Y7xPTPKpNAEiM2jkH\",\"vQzodYxxkEAtbyriw\",\"nRht5DZA6YcH2kAo6\",\"TtaMcB3NdyF4MfxCy\",\"92s2ewyuc4nPdt7Bp\",\"DyunorHmNEeBgSGqs\",\"aWCg5tWK6xWrEE3Qm\",\"HTwftxnxgvwHyxosa\",\"9XnGoq9Tv6ut3zTtH\",\"mER4kEsRRxwbFgPRC\",\"GxZfoXiM868kdddC6\",\"76rZ57Yc5w8KcuR4S\",\"3pxHTZBsv7MKzFG6Y\",\"dYgxQgSzJNMnWzhhE\",\"aEm3Wvj2rFYRL8Lrb\",\"sfj3i3eEAfZa3f9kg\",\"rPsSEYqwmttMPEuvo\",\"KQNRec88MkMcPeCYK\",\"n4Y5EEGCjmrK99yrt\",\"H3yM3F3mukfdq9fit\",\"8PWe4RLFk3MRvbn68\",\"Zp93Tit7CTRdkCMqp\",\"d8JhF9zfpexkRnCea\",\"NGvCPuMiAP3xrRLfB\",\"RoGGD5cpHb4ftdLDv\",\"h9CbFMHNNw7PTDQbt\",\"u6qtGzATonXYij6xf\",\"WpNHMgfjZE8aNN2MP\",\"MwG3nqJNfmXHJAGh4\",\"PTo9qt93YqGvL8fCa\",\"55gtTByNL5GiTZKZ6\",\"BjJhatTBaTWm3ZhCt\",\"jzdjJtfQiCYmiyvzh\",\"8Z3dkvWBqtrMEE48N\",\"g5txYGWqRNSrS7MED\",\"PC3pLs36zNzpRDSuE\",\"9qJwfSnwqzDYYRqTP\",\"Q5AWPochksxnrAG5f\",\"jkkKzNT77bMStXhpW\",\"NphGYXzB4CDM9Ruoi\",\"wEpks7JA9cKbtXmzn\",\"M7cWfyKZptTkDhbkK\",\"CHuC8mjQLn2KJxZSz\",\"YzjcdZwitCDK5q3KD\",\"jicWFrNKadYuLhqxh\",\"fMbZnKta63wqpPsqN\",\"64KvwkCTaEh7c6K8W\",\"AsJ9TmNRhyYGm7FqS\",\"W6D6DP5NpbhFuJAAY\",\"6j3XsNE3hH9jDdZeX\",\"fTYFiNhHqxzC54PMT\",\"bKxzYQoWmFQTD52Zk\",\"3n2Fo8oMswFgCcLoR\",\"iRvLFtBSdDpQzxnbL\",\"cdcpLjFvZkhTZA5f6\",\"MAYWFNKxwJCTFrbB2\",\"B475ZGtHreDNMJKjB\",\"BGbHaRZ3o7ss5S38N\",\"hCMQSayT5iBwNDhqX\",\"eoaYuYy5ncBaon3Zj\",\"kLFWfBG5meQ7bqRD6\",\"hJiiTSvdtEr6AygSq\",\"3A62GGqZvwee7ehYM\",\"psdbt2PkjPv4qTwtr\",\"ewpbFC8Zt3cc7rqEB\",\"TMNRT7mgWLdy2y5ME\",\"3vGqmWGW3hMorpzEF\",\"PfvcYSgmexXGCB2bm\",\"rRMepvNmofn3A9Zva\",\"m5ydypdrnCPpKy9rT\",\"inbiBEY2tizFwkN84\",\"BPQBQ2ycnSnsdqpxE\",\"d9vk3tegqtGupihSA\",\"ZFDNJC46o8XCeDYJx\",\"4dZPNCZjG2ZiQhSDi\",\"8s5Bdrn7RTga7DL6x\",\"xGy3pb6Pfw5iziKSR\",\"BDuTCD6FZpE8ThvjR\",\"upvEFJRN6StypjidY\",\"szQg8dxKNNre3v3Jk\",\"sW5jMhqofmo3kFBou\",\"yr822PZmmiDDenxpB\",\"fyFe44oH6sy4mFLuR\",\"K54ipu2Y5pZfPngmk\",\"Kpg7WT67y25y4t7Eo\",\"PEcNNGnDTzfWapZXH\",\"DjChaA6HXG2vBe4fK\",\"8EsqNrXcgmZyYxSwN\",\"HhesnLidSNg74gNsM\",\"aEvwLciH2YNQp9WFp\",\"CH53jGETBeJTummf3\",\"Z8cyP9E58Qbhue3cu\",\"3XQfH2tybuGQRGMei\",\"tZuqeWug7PAq4x8xM\",\"JnYehNpm7BvefLuee\",\"npHhPXHnAHieQoqHX\",\"Tc5HXCms6SaXqhmNd\",\"Q7Yxda7dqKeYPs2Db\",\"yWSGujxphYSsL63Zq\",\"DpnYevq73WMwZyCKd\",\"4WYjScmBWK9eXRzvd\",\"wo4cpen33NYFHNca7\",\"pWJWQDhqzDSmfaFam\",\"MaHyKMEDdtLMQeJ4b\",\"c3iasS7TCyE2tQLpH\",\"5NGxHLcQ8Af2RJ4TN\",\"8BFSTCnoe2QggN64c\",\"LwD3CyYSiBfg3mA4r\",\"3rQ3fN5SM2eGHmTi5\",\"vbuk3JaFwD3qxJY9T\",\"eJHdjA5uq7ZrcRPhQ\",\"ZTKgtpKTyeKMyAZEh\",\"4o7Agt6eXLoiB38cZ\",\"7JCLyrrY6JYGpocac\",\"DRPyuu4kECydZBMx3\",\"gf4xrfguK6KiEF9yi\",\"YxbnL6GtYE82CdikC\",\"LCn6qz2GoMr5577Rd\",\"QdLpawzgysGwDdD3o\",\"sN2JyFeJCwfwwHPwF\",\"Fvu5hAFbuiTQAJFme\",\"a2Kmh6ekWqQQooHiQ\",\"mdv6r687hYHFziB89\",\"zgoq9MhrL2h75DAMA\",\"LPZ2QKCoB8q6rG25c\",\"XT23a68TjWwNE7Qko\",\"sNcDN3s3rH9wcNg5n\",\"CHvzhtXnv8HTbPQ56\",\"sHnfwDzKzmeApjTv8\",\"sj8yRK9uzJ5LLZABJ\",\"qAEumdjLRx2AGAmzw\",\"8JJHJfbYpxvDiPpBn\",\"E6DBfkTgHuPsDWdG8\",\"WnogMFYXoyvmBmGkm\",\"DPpSwhhiuF4Y9YR2i\",\"6NsnBgRebiPP2ZwsS\",\"6vdn7gegY7xXxYCbe\",\"9ix7NBMXyb2bxrTYG\",\"sgjcbfroKXPSSDob8\",\"NJuBx55XXbaAjaiwX\",\"qNAx3g5vaJXc6Edvp\"],\"total\":344},\"flags\":2},\"summary\":\"You are given an array of integers having both negative and positive values, except for one integer which can be negative or positive. Create a function to find out that integer.\\n\\nExamples\\nlonelyInteger([1, -1, 2, -2, 3]) ➞ 3\\n// 3 has no matching negative appearance.\\n\\nlonelyInteger([-3, 1, 2, 3, -1, -4, -2]) ➞ -4\\n// -4 has no matching positive appearance.\\n\\nlon\",\"tags\":[\"numbers\",\"arrays\",\"functional_programming\"],\"timestamp\":{\"$date\":1607520192314},\"title\":\"Lonely Integer\",\"family\":[{\"_id\":\"Fk2REaqji72jaPPMK\",\"language\":\"cpp\"},{\"_id\":\"fK8a63ttMnt9CZmhg\",\"language\":\"javascript\"},{\"_id\":\"onGPLPhXkLr3KCJpF\",\"language\":\"python3\"},{\"_id\":\"Q5dZx7J6gzjCGthDK\",\"language\":\"ruby\"},{\"_id\":\"razmcbpBBosmzCbHd\",\"language\":\"swift\"}]}}"]