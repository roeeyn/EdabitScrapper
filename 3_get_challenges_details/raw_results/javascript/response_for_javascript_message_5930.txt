a["{\"msg\":\"result\",\"id\":\"1715\",\"result\":{\"_id\":\"fRsbKepgD2rrhaQGB\",\"author\":\"ds05vi\",\"authorId\":\"ixabGTE2JSw9QLbJS\",\"code\":\"function separateNumbers(s) {\\n\\t\\n}\",\"difficulty\":2.35,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"3oGyK9BpPfczxrwbo\",\"instructions\":\"A numeric string `s` is beautiful if it can be split into a sequence of two or more positive integers, `a[1]`, `a[2]`, `...a[n]`, satisfying the following conditions:\\n\\n1. `a[i] - a[i-1] = 1` for any `1 < i <= n` (i.e. each element in the sequence is one more than the previous element).\\n2. No `a[i]` contains a leading zero. For example, we can split `s = 10203` into the sequence `{1, 02, 03}`, but it is not beautiful because `02` and `03` have leading zeroes.\\n3. The contents of the sequence cannot be rearranged. For example, we can split `s = 312` into the sequence `{3, 1, 2}`, but it is not beautiful because it breaks our first constraint (i.e. `1 - 3 ≠ 1`).\\n\\nReturn either `\\\"YES x\\\"` where `x` is the smallest first number of the increasing sequence or `\\\"NO\\\"` if there is no valid sequence.\\n\\n### Examples\\n```\\nseparateNumbers(\\\"1234\\\") ➞ \\\"YES 1\\\"\\n\\nseparateNumbers(\\\"91011\\\") ➞ \\\"YES 9\\\"\\n\\nseparateNumbers(\\\"99100\\\") ➞ \\\"YES 99\\\"\\n\\nseparateNumbers(\\\"101103\\\") ➞ \\\"NO\\\"\\n\\nseparateNumbers(\\\"010203\\\") ➞ \\\"NO\\\"\\n```\\n\\n### Notes\\nN/A\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertEquals(separateNumbers(\\\"99910001001\\\"), \\\"YES 999\\\")\\nTest.assertEquals(separateNumbers(\\\"1234\\\"), \\\"YES 1\\\")\\nTest.assertEquals(separateNumbers(\\\"91011\\\"), \\\"YES 9\\\")\\nTest.assertEquals(separateNumbers(\\\"101103\\\"), \\\"NO\\\")\\nTest.assertEquals(separateNumbers(\\\"010203\\\"), \\\"NO\\\")\\nTest.assertEquals(separateNumbers(\\\"13\\\"), \\\"NO\\\")\\nTest.assertEquals(separateNumbers(\\\"1\\\"), \\\"NO\\\")\\nTest.assertEquals(separateNumbers(\\\"999100010001\\\"), \\\"NO\\\")\\nTest.assertEquals(separateNumbers(\\\"7891011\\\"), \\\"YES 7\\\")\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,0,3,2,3,3,2,3,4,2,2,3,3,4,0,3],\"rators\":[\"ixabGTE2JSw9QLbJS\",\"mHT2bJb5SByfJ8yKS\",\"aEm3Wvj2rFYRL8Lrb\",\"D8E3v3AkHCbXNpvNv\",\"65dbBZynphj53nXqA\",\"yjtdwc2AC4jA2RWtn\",\"RE4Mm9T6Q9uygAxGS\",\"FJsvM5yqKuK9yMk9P\",\"n5wubRfh6zh8QRymN\",\"CNc6rmwhbxkxEhHAp\",\"M4vq8ATaS9Jg5X7iP\",\"tAF9Gf6PiGogbZuWs\",\"oDtGiNqDMHmhHE3J8\",\"h4jFmtbFn92eA4649\",\"DPi9QGLctq2y76KuE\"],\"total\":15,\"quality\":[]},\"flags\":0},\"summary\":\"A numeric string s is beautiful if it can be split into a sequence of two or more positive integers, a[1], a[2], ...a[n], satisfying the following conditions:\\n\\na[i] - a[i-1] = 1 for any 1 < i <= n (i.e. each element in the sequence is one more than the previous element).\\nNo a[i] contains a leading zero. For example, we can split s = 10203 into the sequence {1,\",\"tags\":[\"strings\",\"algorithms\"],\"timestamp\":{\"$date\":1596088241561},\"title\":\"Separate the Numbers\",\"quality\":0,\"family\":[{\"_id\":\"mdQmP98tpdXfxG5j5\",\"language\":\"cpp\"},{\"_id\":\"fRsbKepgD2rrhaQGB\",\"language\":\"javascript\"},{\"_id\":\"hah7DaHKswkT8Tjtq\",\"language\":\"python3\"},{\"_id\":\"AipBwDfQ3WkBqsc4s\",\"language\":\"ruby\"}]}}"]