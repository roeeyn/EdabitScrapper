a["{\"msg\":\"result\",\"id\":\"676\",\"result\":{\"_id\":\"oR2wK4q7Z8wfWr7CJ\",\"author\":\"ABO\",\"authorId\":\"2Qk2mFu9HBFzrB24i\",\"code\":\"function recordTemps(records, currentWeek) {\\n\\t\\n}\",\"difficulty\":1.4505494505494505,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"v53xcYrnCf4jeapS6\",\"instructions\":\"You are given two arrays that each contain data that represents the min and max weather temperatures for each day of the week.\\n\\nThe records array contains the all-time record low/high temperatures for that day of the week.\\n\\n```\\n[[record low, record high], ...]\\n```\\n\\nThe current week array contains the daily low/high temperatures for each day of the current week.\\n\\n```\\n[[daily low, daily high], ...]\\n```\\n\\nA daily high temperature is considered a new record high if it is higher than the record high for that day of the week. A daily low temperature is considered a new record low if it is lower than the record low for that day of the week.\\n\\nCompare the daily low/high temperatures of the current week to the record lows/highs and return an array with the updated record temperatures.\\n\\n- There may be multiple record temperatures in a week.\\n- If there are no broken records return the original records array.\\n\\n### Example\\n```\\n//             sun       mon      tues       wed      thur      fri       sat\\nrecordTemps([[34, 82], [24, 82], [20, 89],  [5, 88],  [9, 88], [26, 89], [27, 83]],\\n            [[44, 72], [19, 70], [40, 69], [39, 68], [33, 64], [36, 70], [38, 69]])\\n\\n➞           [[34, 82], [19, 82], [20, 89], [5, 88], [9, 88], [26, 89], [27, 83]]\\n```\\nThe previous record low for Monday was 24. The current week's low for Monday was 19. So 19 replaces 24 as Monday's new record low.\\n\\n### Notes\\n- There won't be a record high and record low set on the same day.\\n- Index 0  will always be the low and index 1 will always be the high `[low, high]`.\\n- For reference these temps are °F but you do not need to convert any temperatures.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertSimilar(recordTemps([[34, 82], [24, 82], [20, 89], [5, 88], [9, 88], [26, 89], [27, 83]],\\n        \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[[44, 72], [19, 70], [40, 69], [39, 68], [33, 64], [36, 70], [38, 69]]), \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[[34, 82], [19, 82], [20, 89], [5, 88], [9, 88], [26, 89], [27, 83]]);\\nTest.assertSimilar(recordTemps(\\n        [\\n          [25, 80],\\n          [27, 88],\\n          [19, 88],\\n          [23, 85],\\n          [21, 89],\\n          [23, 78],\\n          [17, 79],\\n        ],\\n        [\\n          [40, 70],\\n          [41, 68],\\n          [45, 68],\\n          [39, 65],\\n          [44, 72],\\n          [43, 69],\\n          [37, 68],\\n        ]\\n      ), [\\n      [25, 80],\\n      [27, 88],\\n      [19, 88],\\n      [23, 85],\\n      [21, 89],\\n      [23, 78],\\n      [17, 79],\\n    ])\\nTest.assertSimilar(recordTemps(\\n        [\\n          [19, 78],\\n          [21, 79],\\n          [22, 90],\\n          [21, 79],\\n          [30, 86],\\n          [25, 82],\\n          [19, 80],\\n        ],\\n        [\\n          [29, 68],\\n          [24, 69],\\n          [28, 63],\\n          [20, 50],\\n          [25, 65],\\n          [28, 56],\\n          [30, 61],\\n        ]\\n      ), [\\n      [19, 78],\\n      [21, 79],\\n      [22, 90],\\n      [20, 79],\\n      [25, 86],\\n      [25, 82],\\n      [19, 80],\\n    ])\\nTest.assertSimilar(recordTemps(\\n        [\\n          [29, 90],\\n          [19, 78],\\n          [26, 91],\\n          [20, 86],\\n          [29, 79],\\n          [16, 84],\\n          [24, 83],\\n        ],\\n        [\\n          [33, 68],\\n          [38, 58],\\n          [36, 59],\\n          [40, 56],\\n          [37, 69],\\n          [39, 70],\\n          [41, 69],\\n        ]\\n      ), [\\n      [29, 90],\\n      [19, 78],\\n      [26, 91],\\n      [20, 86],\\n      [29, 79],\\n      [16, 84],\\n      [24, 83],\\n    ])\\nTest.assertSimilar(      recordTemps(\\n        [\\n          [17, 84],\\n          [17, 90],\\n          [28, 85],\\n          [15, 89],\\n          [21, 80],\\n          [6, 86],\\n          [28, 87],\\n        ],\\n        [\\n          [27, 64],\\n          [31, 60],\\n          [33, 59],\\n          [35, 63],\\n          [32, 60],\\n          [35, 66],\\n          [25, 53],\\n        ]\\n      ), [\\n      [17, 84],\\n      [17, 90],\\n      [28, 85],\\n      [15, 89],\\n      [21, 80],\\n      [6, 86],\\n      [25, 87],\\n    ])\\nTest.assertSimilar(  recordTemps(\\n        [\\n          [30, 88],\\n          [19, 89],\\n          [17, 79],\\n          [26, 93],\\n          [24, 84],\\n          [30, 90],\\n          [17, 90],\\n        ],\\n        [\\n          [33, 60],\\n          [29, 69],\\n          [34, 58],\\n          [36, 55],\\n          [30, 53],\\n          [28, 60],\\n          [29, 62],\\n        ]\\n      ), [\\n      [30, 88],\\n      [19, 89],\\n      [17, 79],\\n      [26, 93],\\n      [24, 84],\\n      [28, 90],\\n      [17, 90],\\n    ])\\nTest.assertSimilar( recordTemps(\\n        [\\n          [22, 91],\\n          [13, 79],\\n          [11, 80],\\n          [30, 91],\\n          [18, 77],\\n          [19, 85],\\n          [7, 87],\\n        ],\\n        [\\n          [32, 61],\\n          [23, 69],\\n          [31, 70],\\n          [31, 66],\\n          [28, 59],\\n          [27, 55],\\n          [23, 51],\\n        ]\\n      ), [\\n      [22, 91],\\n      [13, 79],\\n      [11, 80],\\n      [30, 91],\\n      [18, 77],\\n      [19, 85],\\n      [7, 87],\\n    ])\\nTest.assertSimilar(recordTemps(\\n        [\\n          [39, 103],\\n          [38, 99],\\n          [38, 104],\\n          [31, 99],\\n          [34, 103],\\n          [36, 101],\\n          [35, 99],\\n        ],\\n        [\\n          [53, 93],\\n          [58, 91],\\n          [49, 94],\\n          [51, 95],\\n          [54, 95],\\n          [56, 98],\\n          [60, 99],\\n        ]\\n      ), [\\n      [39, 103],\\n      [38, 99],\\n      [38, 104],\\n      [31, 99],\\n      [34, 103],\\n      [36, 101],\\n      [35, 99],\\n    ])\\nTest.assertSimilar(recordTemps(\\n        [\\n          [42, 106],\\n          [37, 97],\\n          [31, 101],\\n          [30, 100],\\n          [38, 101],\\n          [29, 98],\\n          [27, 99],\\n        ],\\n        [\\n          [52, 93],\\n          [61, 91],\\n          [60, 95],\\n          [60, 97],\\n          [68, 93],\\n          [70, 100],\\n          [57, 96],\\n        ]\\n      ), [\\n      [42, 106],\\n      [37, 97],\\n      [31, 101],\\n      [30, 100],\\n      [38, 101],\\n      [29, 100],\\n      [27, 99],\\n    ])\\nTest.assertSimilar(recordTemps(\\n        [\\n          [40, 98],\\n          [30, 100],\\n          [35, 100],\\n          [29, 105],\\n          [33, 100],\\n          [27, 96],\\n          [29, 97],\\n        ],\\n        [\\n          [60, 97],\\n          [57, 99],\\n          [65, 98],\\n          [59, 97],\\n          [63, 101],\\n          [57, 93],\\n          [69, 100],\\n        ]\\n      ), [\\n      [40, 98],\\n      [30, 100],\\n      [35, 100],\\n      [29, 105],\\n      [33, 101],\\n      [27, 96],\\n      [29, 100],\\n    ])\\nTest.assertSimilar(recordTemps(\\n        [\\n          [45, 99],\\n          [32, 99],\\n          [32, 102],\\n          [28, 103],\\n          [31, 99],\\n          [34, 104],\\n          [32, 100],\\n        ],\\n        [\\n          [65, 94],\\n          [62, 94],\\n          [72, 100],\\n          [68, 100],\\n          [71, 96],\\n          [69, 100],\\n          [72, 99],\\n        ]\\n      ), [\\n      [45, 99],\\n      [32, 99],\\n      [32, 102],\\n      [28, 103],\\n      [31, 99],\\n      [34, 104],\\n      [32, 100],\\n    ])\\nTest.assertSimilar(recordTemps(\\n        [\\n          [39, 101],\\n          [35, 98],\\n          [30, 97],\\n          [33, 103],\\n          [29, 98],\\n          [36, 97],\\n          [30, 103],\\n        ],\\n        [\\n          [69, 100],\\n          [65, 97],\\n          [70, 95],\\n          [73, 100],\\n          [75, 99],\\n          [73, 100],\\n          [70, 100],\\n        ]\\n      ), [\\n      [39, 101],\\n      [35, 98],\\n      [30, 97],\\n      [33, 103],\\n      [29, 99],\\n      [36, 100],\\n      [30, 103],\\n    ])\\nTest.assertSimilar(recordTemps(\\n        [\\n          [50, 105],\\n          [40, 100],\\n          [24, 99],\\n          [29, 99],\\n          [38, 100],\\n          [31, 100],\\n          [33, 100],\\n        ],\\n        [\\n          [70, 102],\\n          [70, 101],\\n          [69, 97],\\n          [68, 98],\\n          [71, 100],\\n          [72, 103],\\n          [73, 102],\\n        ]\\n      ), [\\n      [50, 105],\\n      [40, 101],\\n      [24, 99],\\n      [29, 99],\\n      [38, 100],\\n      [31, 103],\\n      [33, 102],\\n    ])\\nTest.assertSimilar(recordTemps(\\n        [\\n          [37, 100],\\n          [31, 104],\\n          [38, 102],\\n          [30, 97],\\n          [40, 107],\\n          [29, 99],\\n          [28, 101],\\n        ],\\n        [\\n          [71, 98],\\n          [71, 100],\\n          [72, 101],\\n          [70, 99],\\n          [68, 99],\\n          [69, 97],\\n          [69, 99],\\n        ]\\n      ), [\\n      [37, 100],\\n      [31, 104],\\n      [38, 102],\\n      [30, 99],\\n      [40, 107],\\n      [29, 99],\\n      [28, 101],\\n    ])\\nTest.assertSimilar(recordTemps(\\n        [\\n          [32, 99],\\n          [40, 97],\\n          [25, 101],\\n          [34, 97],\\n          [19, 103],\\n          [35, 98],\\n          [36, 102],\\n        ],\\n        [\\n          [72, 96],\\n          [70, 99],\\n          [65, 100],\\n          [71, 97],\\n          [73, 99],\\n          [65, 100],\\n          [66, 100],\\n        ]\\n      ), [\\n      [32, 99],\\n      [40, 99],\\n      [25, 101],\\n      [34, 97],\\n      [19, 103],\\n      [35, 100],\\n      [36, 102],\\n    ])\\nTest.assertSimilar(recordTemps(\\n        [\\n          [42, 98],\\n          [35, 105],\\n          [29, 98],\\n          [33, 104],\\n          [29, 104],\\n          [30, 102],\\n          [32, 98],\\n        ],\\n        [\\n          [62, 98],\\n          [69, 101],\\n          [68, 96],\\n          [73, 100],\\n          [69, 100],\\n          [70, 99],\\n          [72, 97],\\n        ]\\n      ), [\\n      [42, 98],\\n      [35, 105],\\n      [29, 98],\\n      [33, 104],\\n      [29, 104],\\n      [30, 102],\\n      [32, 98],\\n    ])\",\"language\":\"javascript\",\"quality\":4.631578947368421,\"stats\":{\"completed\":{\"ratings\":[0,0,0,0,0,0,1,1,0,1,1,0,0,1,2,2,0,0,1,0,2,2,1,1,1,2,1,1,1,0,1,0,3,1,0,1,0,0,1,1,1,0,0,2,0,1,2,3,2,2,2,3,2,1,3,2,0,0,0,2,2,2,2,2,1,2,2,1,0,1,2,0,1,3,1,4,1,1,1,2,1,1,2,1,2,2,2,3,1,0,2,2,0,0,1,2,2,2,1,2,2,2,3,2,2,1,2,3,0,2,3,1,1,2,2,4,2,2,3,3,4,2,1,2,2,1,2,2,1,2,2,3,2,0,0,2,2,2,1,0,2,1,2,0,2,2,0,1,0,2,2,2,1,2,2,2,2,2,2,1,2,2,2,3,2,2,2,2,2,2,2,2,2,1,2,2,2,1,0,2,2,2],\"quality\":[5,5,5,5,4,5,5,1,5,5,5,5,5,5,5,4,5,4,5],\"rators\":[\"2Qk2mFu9HBFzrB24i\",\"QRv96jmNaYsWkxQEG\",\"CJBPyyfyaEeEo63sb\",\"9qoWqLcHGiDX429rE\",\"Yp7uvStL97cC9fKkY\",\"gHvf54LmcAgLtiHdF\",\"j5FSQCayX3By73CCw\",\"w58MJDm5pioziaphD\",\"tmB8Xatt4AstQSWWv\",\"FJsvM5yqKuK9yMk9P\",\"AFfw7cGg83uYk2Miy\",\"yjtdwc2AC4jA2RWtn\",\"vGKxRcDYDsXzTQuEQ\",\"mHT2bJb5SByfJ8yKS\",\"pPpmP7xeJzGgK362R\",\"QGjY3hgPYPMmMjc7j\",\"u9cRf5kvtpRB5ffB3\",\"RE4Mm9T6Q9uygAxGS\",\"RQwuHHy4rBgaQCLte\",\"9HZbxzkzgz4CvePtv\",\"J7d397iB5GuWRAMfg\",\"K45zPJxsABuA3WSyj\",\"vxWHytXdMHsoyv9Gr\",\"CNc6rmwhbxkxEhHAp\",\"k6QB6fzbj4LsWktRL\",\"buX4mCQhtXCfBjeno\",\"SNiJRRosrmSWssLj4\",\"jnyub52Fi79drGvow\",\"733qgZ7ZSSSrzbXGw\",\"zJTXDTdbwnopRazGo\",\"evTTY9hwrtogaNxXn\",\"zw7g7T8wE5R5CBhXr\",\"65dbBZynphj53nXqA\",\"tAF9Gf6PiGogbZuWs\",\"Ya3eHgs8x3unZRLpb\",\"oDtGiNqDMHmhHE3J8\",\"XrqNzJ2FRG8HnGiR6\",\"qFJpEDM2Ep6v4tqPz\",\"mpLFbFKjY6u3nsDMv\",\"M4vq8ATaS9Jg5X7iP\",\"aLKHc5k4sM3GijhmE\",\"e9Cknxbx6o7Nb6REs\",\"6BpBQnSGhzgvhXrEy\",\"pdGuqmMyeN4wZaWwv\",\"2a56F4KyQHRgTubPL\",\"KypQdzThzogKXwkXE\",\"w8geFfsnhEfLPjBCq\",\"jyCByAZwu576xDwEL\",\"zd9FLSzsGz3evKafy\",\"AasGs8AeX9Lcb9xJn\",\"Ef3McfqD44hj4Est9\",\"7gZKfvwaeqsGKXMEN\",\"QguFWo84zgF3c8BGr\",\"aWNggJDngk9DhC4Sg\",\"z5ebtimXwFFJdYxoa\",\"86kMtj2c6DG7paeqg\",\"srJ34BaybkQh3qRkM\",\"8op7s67jE2nYdo4js\",\"5nhmyqLy8M2Yn2HMR\",\"JW5J6sdJHAmDmfWnE\",\"3WtHp4MBzciz4AE8M\",\"8BJyXvRWcrvN3nttS\",\"gFEpzrgWhzCZHeifj\",\"DPi9QGLctq2y76KuE\",\"F9WemofdnYbzBex4E\",\"jyoLggHk8xQKZuoQC\",\"FHkqpcPSn7XWbatiF\",\"xTg27dofuBF2pkGKb\",\"XswLu2akh6sGEpk4B\",\"qwErvaK7aCzBf22nJ\",\"PH32cNxBjrK4a28sn\",\"skCumJZgvqd8JfPH3\",\"nyh73Tr6GhqAat78g\",\"TCrpJNvuYbHE2Brvs\",\"WrXjugGj9DxQ34Mrq\",\"QJqntLLpkx72XhQEz\",\"viSjwufZZdaPyF4vA\",\"GkdvNCbHP7GzHTkjH\",\"MRXW4M7SaQjGZ4nRg\",\"TM7yCWpBjzqueoK7r\",\"YDbPMQrHSxZnxW9kH\",\"bTqwjkDY7anZzSxEo\",\"DdGF9EHfJebvHTYLH\",\"jshyJDyeePnTfy5C9\",\"dhCek9vuqHt942EZ9\",\"v9K7cMdAG8Lm7nTCL\",\"WZreC2ASAhnfiJ2Pr\",\"Qj2GP9srfDvXD2qpj\",\"oyB4Wr4EeZnoDaa8B\",\"g7DvJzFJ7FAH45BvE\",\"hCfruGWxw7v64teEr\",\"E3fkFzNeAGctuvqA2\",\"ucaDnFgvkB5hp5srb\",\"pdsiGN5LX8wu9R9sD\",\"qMoypNnPfnYSamPSu\",\"nsMqCMGPCrBxGv9tb\",\"HqRvMnKNgcCi6jRmT\",\"ausPHWmB5zZdD3qWs\",\"QduBs4AQa8ZqaKbps\",\"7wtuhPesfhcYsfZaZ\",\"ZKuwzkssrSsDGNPr5\",\"iqmPb9JuJDgTFeR8Q\",\"Q7Yxda7dqKeYPs2Db\",\"sN2JyFeJCwfwwHPwF\",\"3FCFMzpdTmjt6dTTG\",\"mdv6r687hYHFziB89\",\"2TLngGdowbHujqTBa\",\"pi76g3eRpnKrhee2a\",\"bfYmA3LMvhSrK59cn\",\"8PWe4RLFk3MRvbn68\",\"QLNKahfd55GDSsN28\",\"QQqNYM8AgDg9s3unn\",\"E6DBfkTgHuPsDWdG8\",\"RoGGD5cpHb4ftdLDv\",\"szejGY3XLnNeh3MAB\",\"PAnur8xLTthNL3epT\",\"MaHyKMEDdtLMQeJ4b\",\"CkffLNzaKJ2ArBX4F\",\"gXTAie79kiw28tx5u\",\"duR8GTEnnG35B5CjK\",\"HCfkcKnPs9mrJojdG\",\"CHmTFmreCh4KmJbs3\",\"QrGnkbEeTo45YwRHy\",\"uxKGACwmZ6FNZsMwE\",\"Yyrc6GKXMRTnSwqBD\",\"LEvrzWasnWFqYfr5b\",\"AMpQSjKsRqhCDyS2j\",\"wHxY29TkATkGGtMhS\",\"bQoioFuKuSvSBdMyG\",\"yH8jxR9hyNCisihHZ\",\"F9f7zF4Kv8f7zECpg\",\"6daecm7mtqzp7mKso\",\"fqL4gTbiSXtgq6qdF\",\"G4sTqk5jrEbmdAQsN\",\"nLqnXPnNbbPrWpv2c\",\"LwD3CyYSiBfg3mA4r\",\"xsDyJstYoBZRS8pJH\",\"Y7xPTPKpNAEiM2jkH\",\"Swb2jDnZjviDXsQvB\",\"f3RAbWvE6uESq7KE5\",\"sNcDN3s3rH9wcNg5n\",\"8s5Bdrn7RTga7DL6x\",\"pX77FuSPyrbaN68Mm\",\"kp2ZbCewZJAbfd7xv\",\"9XnGoq9Tv6ut3zTtH\",\"PTo9qt93YqGvL8fCa\",\"sfj3i3eEAfZa3f9kg\",\"jcPZ5ySXseCB7Ec3x\",\"g4NCSxxHqHCGMpWwT\",\"LCn6qz2GoMr5577Rd\",\"rPsSEYqwmttMPEuvo\",\"ttuGK7od8simjgmCJ\",\"8Z3dkvWBqtrMEE48N\",\"d8JhF9zfpexkRnCea\",\"pxgAHHB8hNEegCYXm\",\"Zp93Tit7CTRdkCMqp\",\"KQNRec88MkMcPeCYK\",\"aEm3Wvj2rFYRL8Lrb\",\"XT23a68TjWwNE7Qko\",\"z47JaNrQMgvuPx5HE\",\"NtyWWdTH52vbRxNPh\",\"exiy4CeGedb9MkrZW\",\"KcFLFK5GqrC89bxZL\",\"koWGjiCmozmgwhYsb\",\"WpNHMgfjZE8aNN2MP\",\"XhTNB8dLNAxBrDXhw\",\"inbiBEY2tizFwkN84\",\"nw3rZ4ap8trEDtPRX\",\"fjBB8rBHeCeMGELvW\",\"SCY9Qyb83vz8ePBrZ\",\"QAZ5DGaWWYhku4BNz\",\"ok4R24nGZ7h94P2en\",\"L8tsNu6FWDG8fT9Be\",\"y3RQa2B8icKCj69dr\",\"BBHKgNQBKjnzoGsew\",\"dCGpuE4nb7D2vwRm5\",\"QHiEYtz3tX3s9nETo\",\"QsXYN6QuM96A4egR7\",\"eomLS3wh6tQPN8jtH\",\"pWJWQDhqzDSmfaFam\",\"GNzgcddT6kuqwCWo5\",\"jzdjJtfQiCYmiyvzh\",\"eANW47mfA359Y6JyP\",\"bX6tpTCjwoi6XMMbK\",\"3rQ3fN5SM2eGHmTi5\",\"rpNNPWzdFCc9TzKMz\",\"szQg8dxKNNre3v3Jk\",\"gf4xrfguK6KiEF9yi\",\"zgoq9MhrL2h75DAMA\",\"LPZ2QKCoB8q6rG25c\",\"rMc3LPajSgm68hNfC\",\"qAEumdjLRx2AGAmzw\",\"CHvzhtXnv8HTbPQ56\",\"psdbt2PkjPv4qTwtr\",\"8JJHJfbYpxvDiPpBn\",\"CH53jGETBeJTummf3\"],\"total\":206},\"flags\":0},\"summary\":\"You are given two arrays that each contain data that represents the min and max weather temperatures for each day of the week.\\n\\nThe records array contains the all-time record low/high temperatures for that day of the week.\\n\\n[[record low, record high], ...]\\n\\nThe current week array contains the daily low/high temperatures for each day of the current week.\\n\\n[[dai\",\"tags\":[\"loops\",\"arrays\"],\"timestamp\":{\"$date\":1614557515590},\"title\":\"Record Temperatures\",\"family\":[{\"_id\":\"oR2wK4q7Z8wfWr7CJ\",\"language\":\"javascript\"},{\"_id\":\"rix73vi9mFYWWqPoA\",\"language\":\"python3\"},{\"_id\":\"iQowMxboTXmusqmjw\",\"language\":\"ruby\"}]}}"]