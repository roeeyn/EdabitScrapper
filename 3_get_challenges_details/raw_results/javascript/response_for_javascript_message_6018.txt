a["{\"msg\":\"result\",\"id\":\"1756\",\"result\":{\"_id\":\"HQXJLmsGK9KiKmeDf\",\"author\":\"0osh4d0wo0\",\"authorId\":\"XHngE5iScvztMpnR2\",\"code\":\"function repeat(str, nb) {\\n\\t\\n}\",\"difficulty\":2.3870967741935485,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"nMeoZADi5mvDP4BvD\",\"instructions\":\"In this challenge you should repeat a specific given char x times. Create a function that takes a string and a number as arguments and return a string.\\n\\n### Examples\\n```\\nrepeat(\\\"-\\\", 3) ➞ \\\"---\\\"\\n\\nrepeat(\\\"A\\\", 0) ➞ \\\"\\\"\\n\\nrepeat(\\\"c\\\", -1) ➞ \\\"\\\"\\n```\\n\\n### Notes\\n- Tests can repeat a char 268435440 times, no more.\\n- Repeat should be fast maximum execution time : 5 ms.\\n- Total maximum execution time : 3800 ms.\\n- Native repeat is forbidden.\\n- Using of an existing repeat polyfill too (that's not the challenge objective).\",\"lab\":\"const Proxy = {};\\n\\nObject.defineProperty(String.prototype,\\\"repeat\\\",{  \\n  value: function repeat(){console.log(\\\"Native repeat is not allowed !\\\"); return \\\":(\\\"},\\n  writable: false,\\n\\tconfigurable: false,\\n})\\n\\n// Check time, valid string and length of string\\nconst checkRepeat = function(fct,arg1,arg2) {\\n    var timerStart = +new Date();\\n    var str = fct(arg1,arg2);\\n    var timerEnd =  +new Date();\\n    var time = (timerEnd - timerStart <= 5) ? true : false;\\n    var strLength = str.length;\\n    var isValidStr = true;\\n    for (var i = 0; i < 2000;i++){\\n        var rand = Math.floor(Math.random()*strLength);\\n        if(str[rand] != arg1){\\n            isValidStr = false;\\n        }\\n    }\\n    console.log(\\\"Execution time : \\\"+(timerEnd - timerStart)+\\\" ms\\\");\\n    return (time && strLength == arg2 && isValidStr);\\n}\\n\\nconst start = +new Date();\\nTest.assertEquals(checkRepeat(repeat,\\\"A\\\",268435440), true);\\nTest.assertEquals(checkRepeat(repeat,\\\"A\\\",10000000), true);\\nTest.assertEquals(checkRepeat(repeat,\\\"A\\\",1000000), true);\\nTest.assertEquals(checkRepeat(repeat,\\\"A\\\",100000), true);\\nTest.assertEquals(checkRepeat(repeat,\\\"A\\\",10000), true);\\nTest.assertEquals(checkRepeat(repeat,\\\"A\\\",1000), true);\\nTest.assertEquals(checkRepeat(repeat,\\\"A\\\",100), true);\\nTest.assertEquals(checkRepeat(repeat,\\\"A\\\",10), true);\\nTest.assertEquals(checkRepeat(repeat,\\\"A\\\",1), true);\\nTest.assertEquals(checkRepeat(repeat,\\\"-\\\",1), true);\\nTest.assertEquals(checkRepeat(repeat,\\\"-\\\",10), true);\\nTest.assertEquals(checkRepeat(repeat,\\\"-\\\",100), true);\\nTest.assertEquals(checkRepeat(repeat,\\\"-\\\",1000), true);\\nTest.assertEquals(checkRepeat(repeat,\\\"-\\\",10000), true);\\nTest.assertEquals(checkRepeat(repeat,\\\"-\\\",100000), true);\\nTest.assertEquals(checkRepeat(repeat,\\\"-\\\",1000000), true);\\nTest.assertEquals(checkRepeat(repeat,\\\"-\\\",10000000), true);\\nTest.assertEquals(checkRepeat(repeat,\\\"-\\\",268435440), true);\\nTest.assertEquals(checkRepeat(repeat,\\\"&\\\",268435440), true);\\nTest.assertEquals(checkRepeat(repeat,\\\"2\\\",268435440), true);\\nTest.assertEquals(checkRepeat(repeat,\\\"+\\\",268435440), true);\\nTest.assertEquals(checkRepeat(repeat,\\\"@\\\",268435440), true);\\nTest.assertEquals(checkRepeat(repeat,\\\"+\\\",268435440), true);\\nTest.assertEquals(checkRepeat(repeat,\\\"e\\\",268435440), true);\\nTest.assertEquals(checkRepeat(repeat,\\\"%\\\",268435440), true);\\nTest.assertEquals(checkRepeat(repeat,\\\"/\\\",268435440), true);\\nTest.assertEquals(checkRepeat(repeat,\\\"!\\\",268435440), true);\\nTest.assertEquals(checkRepeat(repeat,\\\"?\\\",268435440), true);\\nTest.assertEquals(checkRepeat(repeat,\\\"°\\\",268435440), true);\\nconst end = +new Date();\\n\\nTest.assertEquals((end-start <= 3800), true, \\\"You got \\\"+(end-start)+\\\" ms instead of <= 3800 ms\\\");\\n\\nTest.assertEquals(repeat(\\\"-\\\",-1), \\\"\\\");\\nTest.assertEquals(repeat(\\\"-\\\",0), \\\"\\\");\\nTest.assertEquals(repeat(\\\"\\\",10), \\\"\\\");\\nTest.assertEquals(repeat(\\\"\\\",-1), \\\"\\\");\",\"language\":\"javascript\",\"summary\":\"In this challenge you should repeat a specific given char x times. Create a function that takes a string and a number as arguments and return a string.\\n\\nExamples\\nrepeat(\\\"-\\\", 3) ➞ \\\"---\\\"\\n\\nrepeat(\\\"A\\\", 0) ➞ \\\"\\\"\\n\\nrepeat(\\\"c\\\", -1) ➞ \\\"\\\"\\n\\nNotes\\nTests can repeat a char 268435440 times, no more.\\nRepeat should be fast maximum execution time : 5 ms.\\nTotal maximum execution\",\"tags\":[\"algorithms\"],\"timestamp\":{\"$date\":1544528031116},\"title\":\"Repeat a Char\",\"stats\":{\"completed\":{\"total\":53,\"ratings\":[3,3,3,3,3,3,3,3,3,3,1,3,3,4,2,0,3,1,0,2,2,2,0,3,3,3,3,3,2,1,2,0,2,1,2,2,2,2,2,3,2,3,2,2,2,5,2,2,5,2,3,3,0,4,4,4,3,0,3,2,3,3],\"rators\":[\"XHngE5iScvztMpnR2\",\"SDtZFL5NzAoCPofXk\",\"w3bWXPpif7XYkukJK\",\"vNQJM789sdaJ86usa\",\"QgQCQvipPZSQY2nrJ\",\"XcHCqYmeoqxDsoucx\",\"CDnwsbaQ2a73Lhdxd\",\"65dbBZynphj53nXqA\",\"mNMQvcxKSSvqqMYCH\",\"eomLS3wh6tQPN8jtH\",\"Y9Nz9yafaibz54W4o\",\"bZowBoTB6iZKcYYAb\",\"yjtdwc2AC4jA2RWtn\",\"EjPLq3QSJdGQFJdgW\",\"5Zq3aGdvh4LHBvnJL\",\"2NJuDfSqdrF8kHHni\",\"kKaqoPoqn73iX69RC\",\"aEm3Wvj2rFYRL8Lrb\",\"CNc6rmwhbxkxEhHAp\",\"ZcJm2kuqJnN3CXFaR\",\"9gEWz76H8KmhN4yJj\"],\"quality\":[]},\"tests\":{\"score\":-0.65,\"voters\":[\"XHngE5iScvztMpnR2\",\"w3bWXPpif7XYkukJK\"]},\"instructions\":{\"score\":0,\"voters\":[\"XHngE5iScvztMpnR2\"]},\"flags\":0},\"isHidden\":false,\"quality\":0,\"family\":[{\"_id\":\"HQXJLmsGK9KiKmeDf\",\"language\":\"javascript\"}]}}"]