a["{\"msg\":\"result\",\"id\":\"1257\",\"result\":{\"_id\":\"4qimb3QisL8wNbSCd\",\"author\":\"Ruud Peter Boelens\",\"authorId\":\"Akq3fQcPRgPrWfsye\",\"code\":\"function fretFreq(gStr, fret) {\\n\\t\\n}\",\"difficulty\":2.0694444444444446,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"4HgRgnMn2obJa9eNW\",\"instructions\":\"Create a function that takes a number of a guitar string and the number of the fret and returns the corresponding frequency of the note.\\n\\n- Check the **Resources Tab**, for the correct frequencies per string.\\n- The formula to calculate the frequency is: `String Frequency * 2^(fret/12)`.\\n- Round the frequency to the nearest hundreth.\\n- For this challenge, we use \\\"Standard Tuning\\\".\\n\\nSo, one fret = a semitone = a half step. From D to D♯ for instance.\\n\\n### Examples\\n```\\nfretFreq(5, 12) ➞ 220\\n\\nfretFreq(4, 6) ➞ 207.65\\n\\nfretFreq(2, 23) ➞ 932.32\\n```\\n\\n### Notes\\nN/A\",\"lab\":\"Test.assertEquals(fretFreq(3, 21), 659.26)\\nTest.assertEquals(fretFreq(3, 15), 466.17)\\nTest.assertEquals(fretFreq(6, 17), 220.01)\\nTest.assertEquals(fretFreq(5, 12), 220)\\nTest.assertEquals(fretFreq(2, 5), 329.63)\\nTest.assertEquals(fretFreq(3, 9), 329.63)\\nTest.assertEquals(fretFreq(1, 16), 830.62)\\nTest.assertEquals(fretFreq(1, 4), 415.31)\\nTest.assertEquals(fretFreq(3, 16), 493.89)\\nTest.assertEquals(fretFreq(4, 6), 207.65)\\nTest.assertEquals(fretFreq(2, 13), 523.25)\\nTest.assertEquals(fretFreq(6, 12), 164.82)\\nTest.assertEquals(fretFreq(5, 16), 277.18)\\nTest.assertEquals(fretFreq(5, 19), 329.63)\\nTest.assertEquals(fretFreq(4, 0), 146.83)\\nTest.assertEquals(fretFreq(2, 6), 349.23)\\nTest.assertEquals(fretFreq(3, 9), 329.63)\\nTest.assertEquals(fretFreq(3, 5), 261.63)\\nTest.assertEquals(fretFreq(5, 18), 311.13)\\nTest.assertEquals(fretFreq(2, 23), 932.32)\\nTest.assertEquals(fretFreq(2, 16), 622.25)\\nTest.assertEquals(fretFreq(4, 6), 207.65)\\nTest.assertEquals(fretFreq(4, 9), 246.94)\\nTest.assertEquals(fretFreq(5, 8), 174.61)\\nTest.assertEquals(fretFreq(3, 1), 207.65)\\nTest.assertEquals(fretFreq(5, 17), 293.66)\\nTest.assertEquals(fretFreq(6, 18), 233.09)\\nTest.assertEquals(fretFreq(3, 23), 740)\\nTest.assertEquals(fretFreq(6, 14), 185)\\nTest.assertEquals(fretFreq(1, 2), 370)\",\"language\":\"javascript\",\"summary\":\"Create a function that takes a number of a guitar string and the number of the fret and returns the corresponding frequency of the note.\\n\\nCheck the Resources Tab, for the correct frequencies per string.\\nThe formula to calculate the frequency is: String Frequency * 2^(fret/12).\\nRound the frequency to the nearest hundreth.\\nFor this challenge, we use \\\"Standard Tu\",\"tags\":[\"math\",\"numbers\",\"algorithms\"],\"timestamp\":{\"$date\":1560383021116},\"title\":\"Fret Frequencies on the Guitar\",\"stats\":{\"completed\":{\"total\":71,\"ratings\":[3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,1,0,2,2,2,3,0,0,1,3,3,1,1,2,2,2,3,3,3,2,0,2,2,2,1,2,1,3,2,2,2,3,3,2,1,2,2,0,3,2,2,1,2,2,2,2,3,2,2,3,3,2,2,3,2,5,1],\"rators\":[\"Akq3fQcPRgPrWfsye\",\"65dbBZynphj53nXqA\",\"n5wubRfh6zh8QRymN\",\"wcjknenWdPRhrRScv\",\"WW35oDAmkg3qd73to\",\"fZsxvcfz8Fdskge3Y\",\"yjtdwc2AC4jA2RWtn\",\"EWn8w8P3nNh7knatY\",\"5Zq3aGdvh4LHBvnJL\",\"AasGs8AeX9Lcb9xJn\",\"6BpBQnSGhzgvhXrEy\",\"DHwbkbzYNpmkSFT7u\",\"FJsvM5yqKuK9yMk9P\",\"Q9KQomTTPBsrkAL6c\",\"BdvdJYwHZr7JpkHsn\",\"2fFpndkCvuqw9SMBz\",\"cRpaCxYRmGcN3Nsoj\",\"SxqAEMaYcE9Ps9eh6\",\"Ehrta9env9HXyrGbW\",\"dqWKy36hbfdBHH85G\",\"pi76g3eRpnKrhee2a\",\"PTo9qt93YqGvL8fCa\",\"tAF9Gf6PiGogbZuWs\",\"WCPyuhxqjCYBmFPQ6\",\"mHT2bJb5SByfJ8yKS\",\"MtSGMTysiWHmv4CRE\",\"CJBPyyfyaEeEo63sb\",\"buX4mCQhtXCfBjeno\",\"94XQj7wutz9ySewYC\",\"aEm3Wvj2rFYRL8Lrb\",\"8s5Bdrn7RTga7DL6x\",\"iJC8PmpzSyTnEDqw5\",\"j2ugW5ihGv67sfh4e\",\"jkumHyXfMkhGcPgqC\",\"bX6tpTCjwoi6XMMbK\",\"N82kEBvpFE5FjbHrk\",\"oDnPTXrzYF4snDPXY\",\"bJtkZAzjvGcXiXXag\",\"vt88eKvFz6ES8sbrD\",\"CNc6rmwhbxkxEhHAp\",\"dGugwhA6uwwjPGAa5\",\"Ms4ubMhq5tjsAeMLF\",\"rzreeBAxcn8NT6ie8\",\"g4NCSxxHqHCGMpWwT\",\"zw7g7T8wE5R5CBhXr\",\"e9Cknxbx6o7Nb6REs\",\"XzMxsyYj2ZeZ6Jmis\",\"eD63zchjA6Sn5qeud\",\"rcTxMiqGiX7waNPiH\",\"bBRzXPk7u95YuDWEL\",\"4p2sARSZNNnKqjAT6\",\"u9cRf5kvtpRB5ffB3\",\"kSxSz3ZxdQuPYTxWD\",\"jd9sRTnsyeKpPggba\",\"AFfw7cGg83uYk2Miy\",\"AZ5usHFYA8sRrQvmM\",\"Yp7uvStL97cC9fKkY\",\"QjGNkRM3Xc78yShJN\",\"Ya3eHgs8x3unZRLpb\",\"TtrXnGzi9MyhLvWiz\",\"ceMycDhXzsRojnr9F\",\"oDtGiNqDMHmhHE3J8\",\"wo4cpen33NYFHNca7\",\"RoGGD5cpHb4ftdLDv\",\"6KgTNbbW5wSFriifA\",\"jyoLggHk8xQKZuoQC\",\"pPpmP7xeJzGgK362R\"],\"quality\":[4,2,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"isHidden\":false,\"quality\":4.2,\"family\":[{\"_id\":\"4qimb3QisL8wNbSCd\",\"language\":\"javascript\"},{\"_id\":\"ADb5MFBAHiu5p83zv\",\"language\":\"python3\"},{\"_id\":\"kkYhLGRE4ZXXyCxFb\",\"language\":\"ruby\"}]}}"]