a["{\"msg\":\"result\",\"id\":\"1309\",\"result\":{\"_id\":\"7bJApSrKyv72yWa2d\",\"author\":\"er0s\",\"authorId\":\"5Zq3aGdvh4LHBvnJL\",\"code\":\"function isZygodrome(num) {\\n\\t\\n}\",\"difficulty\":2.1025641025641026,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"keXQuSRWkSABGLcEC\",\"instructions\":\"A number is Zygodrome if it can be partitioned into clusters of repeating digits with a length equals or greater than two (as to say that repeating digits need to be placed as  an adjacent pair or a greater group, and that no single digits are allowed).\\n\\nGiven a non-negative integer `num`, implement a function that returns `true` if `num` is a Zygodrome number, or `false` otherwise.\\n\\n### Examples\\n```\\nisZygodrome(11) ➞ true\\n// 11 is a pair of repeated digits\\n\\nisZygodrome(33322) ➞ true\\n// 333 is a triplet of repeated digits, and 22 is a pair\\n\\nisZygodrome(5) ➞ false\\n// 5 is a single digit, it doesn't form a pair\\n\\nisZygodrome(1001) ➞ false\\n// 00 is a pair, but the two 1's are not adjacent\\n```\\n\\n### Notes\\n- Trivia: the number `9997777` is the only known Zygodrome prime whose index in the Zygodromes sequence (`664444`) is a prime in turn.\\n- You can expect only non-negative integers as given input, without exceptions to handle.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertEquals(isZygodrome(11), true)\\nTest.assertEquals(isZygodrome(222), true)\\nTest.assertEquals(isZygodrome(223), false)\\nTest.assertEquals(isZygodrome(1001), false)\\nTest.assertEquals(isZygodrome(1100), true)\\nTest.assertEquals(isZygodrome(11122), true)\\nTest.assertEquals(isZygodrome(3344466777), true)\\nTest.assertEquals(isZygodrome(33444667778), false)\\nTest.assertEquals(isZygodrome(8866611229999), true)\\nTest.assertEquals(isZygodrome(9977866655522), false)\\nTest.assertEquals(isZygodrome(99999999), true)\\nTest.assertEquals(isZygodrome(0), false)\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,4,1,1,2,3,1,1,1,3,3,1,2,2,2,2,2,2,2,1,3,2,3,2,4,2,3,3,3,2,2,2,3,3,1,3,2,2,2,3,2,3,2,3,3,1,0,2,3,2,0,2,2,2,0,2,3,3,2,3,0,2,3,4,2,0,3,1,2,3,3,5,2,3],\"rators\":[\"5Zq3aGdvh4LHBvnJL\",\"yjtdwc2AC4jA2RWtn\",\"YER6iBcpJCuhgrYDN\",\"pi76g3eRpnKrhee2a\",\"FJsvM5yqKuK9yMk9P\",\"RE4Mm9T6Q9uygAxGS\",\"mHT2bJb5SByfJ8yKS\",\"k5TGxBtLi9BXxeChT\",\"g5noFWaoRtZNcEEAW\",\"QnPD4Sv6W4LHc2Qng\",\"n5wubRfh6zh8QRymN\",\"AasGs8AeX9Lcb9xJn\",\"wszHbW2KL3qmHZXjM\",\"Y9Nz9yafaibz54W4o\",\"zgoq9MhrL2h75DAMA\",\"2innwjWqxJHo4eRGh\",\"EWn8w8P3nNh7knatY\",\"6BpBQnSGhzgvhXrEy\",\"EjPLq3QSJdGQFJdgW\",\"eomLS3wh6tQPN8jtH\",\"AR3Fxqo7Z66S9Dwuf\",\"2ZFoLTxcCARhwc8xX\",\"SmD55G8TZhC5LkJPE\",\"FiK2ruyH8KeHLAgoA\",\"aMR4wm2qP7azwSigk\",\"Es4eX2stRpyoXeC7f\",\"GCsLzWAhLvniQqR3J\",\"ZXRMRAJNP6eseLdbR\",\"fMqXimJLsPiuhT8A8\",\"YXqaqjujocvg2gX4k\",\"a777e8chPvJkY3tKa\",\"8BJyXvRWcrvN3nttS\",\"75MZjJQdxm9uExWHP\",\"pd8dm7sWLW9cY6dYW\",\"Xk2g4CNFAnYcvxiSr\",\"uigAJ9KT5muMWTDis\",\"aqzWajZcBZtTiyTqK\",\"buX4mCQhtXCfBjeno\",\"5NGxHLcQ8Af2RJ4TN\",\"65dbBZynphj53nXqA\",\"r7mZLgpQWzRiGddL5\",\"aEm3Wvj2rFYRL8Lrb\",\"p5ZshR8zhTqmdhKDc\",\"nyFk4kf54xogGLbzp\",\"QRv96jmNaYsWkxQEG\",\"bX6tpTCjwoi6XMMbK\",\"kp2ZbCewZJAbfd7xv\",\"BdvdJYwHZr7JpkHsn\",\"tAF9Gf6PiGogbZuWs\",\"CNc6rmwhbxkxEhHAp\",\"ct42f2gGpMXSd9hXM\",\"acHSYL6uQAgpgFMjp\",\"dGugwhA6uwwjPGAa5\",\"M4vq8ATaS9Jg5X7iP\",\"pGh7WykiPe26fHJYv\",\"g4NCSxxHqHCGMpWwT\",\"zw7g7T8wE5R5CBhXr\",\"S5ZJy8yeYqWbeidB8\",\"qWR7eXxBiNee22A5u\",\"5ETJzzAbWHw9GkWCn\",\"4XxJxQkB5mNTLY2qk\",\"6wcsoqgMKfZ7xjSgn\",\"ab3qTsovf6ftiXgWy\",\"zvhWpHAEk7YgxXaQd\",\"E6DBfkTgHuPsDWdG8\",\"u9cRf5kvtpRB5ffB3\",\"f3RAbWvE6uESq7KE5\",\"h66ASG9Y5xbMrzdjY\",\"4p2sARSZNNnKqjAT6\",\"Akq3fQcPRgPrWfsye\",\"DPi9QGLctq2y76KuE\",\"Po3v3dHCk6wYGKMwi\",\"ZcJm2kuqJnN3CXFaR\",\"wJTDDTE3TrmSXKP4d\",\"c7uBxu2rgY77H5d79\",\"k6QB6fzbj4LsWktRL\",\"QvEXmSEo3ANp3yPyH\",\"QjGNkRM3Xc78yShJN\",\"8s5Bdrn7RTga7DL6x\",\"Ya3eHgs8x3unZRLpb\",\"mDWNyaaQ9hvPCRzSd\",\"zza5WjC8QrHcoDZBF\",\"oDtGiNqDMHmhHE3J8\",\"49XFttjKo2QhEWT3R\",\"wo4cpen33NYFHNca7\",\"9gEWz76H8KmhN4yJj\",\"PPFmWzDiefzfekdcg\",\"J7d397iB5GuWRAMfg\",\"Yp7uvStL97cC9fKkY\",\"RoGGD5cpHb4ftdLDv\",\"hCfruGWxw7v64teEr\",\"jyoLggHk8xQKZuoQC\",\"nkH3HfJXLMNcBMM79\",\"DfdkfQh8ctd2BaaRY\"],\"total\":101,\"quality\":[5,5,5,5,3,4,5,4,5,5,5,5,5,4,4,5,5,5,5,5,5]},\"flags\":1},\"summary\":\"A number is Zygodrome if it can be partitioned into clusters of repeating digits with a length equals or greater than two (as to say that repeating digits need to be placed as  an adjacent pair or a greater group, and that no single digits are allowed).\\n\\nGiven a non-negative integer num, implement a function that returns true if num is a Zygodrome number, or f\",\"tags\":[\"numbers\",\"validation\"],\"timestamp\":{\"$date\":1582113952176},\"title\":\"Zygodromes\",\"quality\":4.714285714285714,\"family\":[{\"_id\":\"xCiiARMydguvsnxdL\",\"language\":\"cpp\"},{\"_id\":\"QdENiEqqhHtYFrk5A\",\"language\":\"java\"},{\"_id\":\"7bJApSrKyv72yWa2d\",\"language\":\"javascript\"},{\"_id\":\"SEHW8YBzmcz9rzNDj\",\"language\":\"php\"},{\"_id\":\"xFme9FBuvHLveh5nE\",\"language\":\"python3\"},{\"_id\":\"kayh4w2n9YKo2nd4m\",\"language\":\"ruby\"}]}}"]