a["{\"msg\":\"result\",\"id\":\"1055\",\"result\":{\"_id\":\"BBFPC6HhZ2ZFv3fpK\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"function getBirthdayCake(name, age) {\\n\\t\\n}\",\"difficulty\":1.7142857142857142,\"familyId\":\"cKv3Rx6ekXD5tkyug\",\"instructions\":\"Create a function which **constructs** a *rectangular* birthday cake, based on someone's `name` and `age`! Build it out of *strings* in an array and make sure to surround the birthday message with the character that fits the rule:\\n\\n- If the age is an **even number**, surround the message with \\\"#\\\".\\n- If the age is an **odd number**, surround the message with \\\"*\\\".\\n\\nOther important rules:\\n- The message should be in the format: **{age} Happy Birthday {name}! {age}**\\n- **Leave a space** between the edge of the cake and the age numbers.\\n\\n### Examples\\n```\\ngetBirthdayCake(\\\"Jack\\\", 10) ➞ [\\n  \\\"##############################\\\",\\n  \\\"# 10 Happy Birthday Jack! 10 #\\\",\\n  \\\"##############################\\\"\\n]\\n\\ngetBirthdayCake(\\\"Russell\\\", 19) ➞ [\\n  \\\"*********************************\\\",\\n  \\\"* 19 Happy Birthday Russell! 19 *\\\",\\n  \\\"*********************************\\\"\\n]\\n\\ngetBirthdayCake(\\\"Isabelle\\\", 2) ➞ [\\n  \\\"################################\\\",\\n  \\\"# 2 Happy Birthday Isabelle! 2 #\\\",\\n  \\\"################################\\\"\\n]\\n```\\n\\n### Notes\\nThe amount of characters in the banner should be the same length as the message to pass the tests.\",\"isHidden\":false,\"lab\":\"Test.assertSimilar(getBirthdayCake(\\\"Jack\\\", 10), [\\n\\t\\\"##############################\\\",\\n\\t\\\"# 10 Happy Birthday Jack! 10 #\\\",\\n\\t\\\"##############################\\\"\\n])\\n\\nTest.assertSimilar(getBirthdayCake(\\\"Russell\\\", 19), [\\n\\t\\\"*********************************\\\",\\n\\t\\\"* 19 Happy Birthday Russell! 19 *\\\",\\n\\t\\\"*********************************\\\"\\n])\\n\\nTest.assertSimilar(getBirthdayCake(\\\"Isabelle\\\", 2), [\\n\\t\\\"################################\\\",\\n\\t\\\"# 2 Happy Birthday Isabelle! 2 #\\\",\\n\\t\\\"################################\\\"\\n])\\n\\n// Time for a right mess\\nTest.assertSimilar(getBirthdayCake(\\\"Princess\\\", 40), [\\\"##################################\\\", \\\"# 40 Happy Birthday Princess! 40 #\\\", \\\"##################################\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Maxwell\\\", 85), [\\\"*********************************\\\", \\\"* 85 Happy Birthday Maxwell! 85 *\\\", \\\"*********************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Zenobia\\\", 63), [\\\"*********************************\\\", \\\"* 63 Happy Birthday Zenobia! 63 *\\\", \\\"*********************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Adrian\\\", 91), [\\\"********************************\\\", \\\"* 91 Happy Birthday Adrian! 91 *\\\", \\\"********************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Gayle\\\", 28), [\\\"###############################\\\", \\\"# 28 Happy Birthday Gayle! 28 #\\\", \\\"###############################\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Jo\\\", 69), [\\\"****************************\\\", \\\"* 69 Happy Birthday Jo! 69 *\\\", \\\"****************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Val\\\", 80), [\\\"#############################\\\", \\\"# 80 Happy Birthday Val! 80 #\\\", \\\"#############################\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Jo\\\", 22), [\\\"############################\\\", \\\"# 22 Happy Birthday Jo! 22 #\\\", \\\"############################\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Gayle\\\", 4), [\\\"#############################\\\", \\\"# 4 Happy Birthday Gayle! 4 #\\\", \\\"#############################\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Norine\\\", 24), [\\\"################################\\\", \\\"# 24 Happy Birthday Norine! 24 #\\\", \\\"################################\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Val\\\", 63), [\\\"*****************************\\\", \\\"* 63 Happy Birthday Val! 63 *\\\", \\\"*****************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Gayle\\\", 25), [\\\"*******************************\\\", \\\"* 25 Happy Birthday Gayle! 25 *\\\", \\\"*******************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Princess\\\", 52), [\\\"##################################\\\", \\\"# 52 Happy Birthday Princess! 52 #\\\", \\\"##################################\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Adrian\\\", 90), [\\\"################################\\\", \\\"# 90 Happy Birthday Adrian! 90 #\\\", \\\"################################\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Loyd\\\", 90), [\\\"##############################\\\", \\\"# 90 Happy Birthday Loyd! 90 #\\\", \\\"##############################\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Shelia\\\", 76), [\\\"################################\\\", \\\"# 76 Happy Birthday Shelia! 76 #\\\", \\\"################################\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Evangelina\\\", 75), [\\\"************************************\\\", \\\"* 75 Happy Birthday Evangelina! 75 *\\\", \\\"************************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Lorenzo\\\", 15), [\\\"*********************************\\\", \\\"* 15 Happy Birthday Lorenzo! 15 *\\\", \\\"*********************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Riva\\\", 4), [\\\"############################\\\", \\\"# 4 Happy Birthday Riva! 4 #\\\", \\\"############################\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Fletcher\\\", 72), [\\\"##################################\\\", \\\"# 72 Happy Birthday Fletcher! 72 #\\\", \\\"##################################\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Hulda\\\", 51), [\\\"*******************************\\\", \\\"* 51 Happy Birthday Hulda! 51 *\\\", \\\"*******************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Bari\\\", 15), [\\\"******************************\\\", \\\"* 15 Happy Birthday Bari! 15 *\\\", \\\"******************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Dorris\\\", 48), [\\\"################################\\\", \\\"# 48 Happy Birthday Dorris! 48 #\\\", \\\"################################\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Ervin\\\", 83), [\\\"*******************************\\\", \\\"* 83 Happy Birthday Ervin! 83 *\\\", \\\"*******************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Cherelle\\\", 80), [\\\"##################################\\\", \\\"# 80 Happy Birthday Cherelle! 80 #\\\", \\\"##################################\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Deedee\\\", 93), [\\\"********************************\\\", \\\"* 93 Happy Birthday Deedee! 93 *\\\", \\\"********************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Youlanda\\\", 29), [\\\"**********************************\\\", \\\"* 29 Happy Birthday Youlanda! 29 *\\\", \\\"**********************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Deedee\\\", 48), [\\\"################################\\\", \\\"# 48 Happy Birthday Deedee! 48 #\\\", \\\"################################\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Kristine\\\", 6), [\\\"################################\\\", \\\"# 6 Happy Birthday Kristine! 6 #\\\", \\\"################################\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Kristine\\\", 43), [\\\"**********************************\\\", \\\"* 43 Happy Birthday Kristine! 43 *\\\", \\\"**********************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Fletcher\\\", 61), [\\\"**********************************\\\", \\\"* 61 Happy Birthday Fletcher! 61 *\\\", \\\"**********************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Bari\\\", 94), [\\\"##############################\\\", \\\"# 94 Happy Birthday Bari! 94 #\\\", \\\"##############################\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Clotilde\\\", 35), [\\\"**********************************\\\", \\\"* 35 Happy Birthday Clotilde! 35 *\\\", \\\"**********************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Ervin\\\", 98), [\\\"###############################\\\", \\\"# 98 Happy Birthday Ervin! 98 #\\\", \\\"###############################\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Margot\\\", 89), [\\\"********************************\\\", \\\"* 89 Happy Birthday Margot! 89 *\\\", \\\"********************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Shelia\\\", 8), [\\\"##############################\\\", \\\"# 8 Happy Birthday Shelia! 8 #\\\", \\\"##############################\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Clotilde\\\", 46), [\\\"##################################\\\", \\\"# 46 Happy Birthday Clotilde! 46 #\\\", \\\"##################################\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Riva\\\", 1), [\\\"****************************\\\", \\\"* 1 Happy Birthday Riva! 1 *\\\", \\\"****************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Bobby\\\", 89), [\\\"*******************************\\\", \\\"* 89 Happy Birthday Bobby! 89 *\\\", \\\"*******************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Riva\\\", 8), [\\\"############################\\\", \\\"# 8 Happy Birthday Riva! 8 #\\\", \\\"############################\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Todd\\\", 32), [\\\"##############################\\\", \\\"# 32 Happy Birthday Todd! 32 #\\\", \\\"##############################\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Jefferey\\\", 49), [\\\"**********************************\\\", \\\"* 49 Happy Birthday Jefferey! 49 *\\\", \\\"**********************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Cherelle\\\", 44), [\\\"##################################\\\", \\\"# 44 Happy Birthday Cherelle! 44 #\\\", \\\"##################################\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Jacques\\\", 7), [\\\"*******************************\\\", \\\"* 7 Happy Birthday Jacques! 7 *\\\", \\\"*******************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Maxwell\\\", 84), [\\\"#################################\\\", \\\"# 84 Happy Birthday Maxwell! 84 #\\\", \\\"#################################\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Clotilde\\\", 92), [\\\"##################################\\\", \\\"# 92 Happy Birthday Clotilde! 92 #\\\", \\\"##################################\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Evangelina\\\", 60), [\\\"####################################\\\", \\\"# 60 Happy Birthday Evangelina! 60 #\\\", \\\"####################################\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Dorris\\\", 54), [\\\"################################\\\", \\\"# 54 Happy Birthday Dorris! 54 #\\\", \\\"################################\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Jacqulyn\\\", 52), [\\\"##################################\\\", \\\"# 52 Happy Birthday Jacqulyn! 52 #\\\", \\\"##################################\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Lucrecia\\\", 95), [\\\"**********************************\\\", \\\"* 95 Happy Birthday Lucrecia! 95 *\\\", \\\"**********************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Shelia\\\", 75), [\\\"********************************\\\", \\\"* 75 Happy Birthday Shelia! 75 *\\\", \\\"********************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Gayle\\\", 59), [\\\"*******************************\\\", \\\"* 59 Happy Birthday Gayle! 59 *\\\", \\\"*******************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Margot\\\", 25), [\\\"********************************\\\", \\\"* 25 Happy Birthday Margot! 25 *\\\", \\\"********************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Hulda\\\", 55), [\\\"*******************************\\\", \\\"* 55 Happy Birthday Hulda! 55 *\\\", \\\"*******************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Adrian\\\", 23), [\\\"********************************\\\", \\\"* 23 Happy Birthday Adrian! 23 *\\\", \\\"********************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Stephine\\\", 48), [\\\"##################################\\\", \\\"# 48 Happy Birthday Stephine! 48 #\\\", \\\"##################################\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Loyd\\\", 23), [\\\"******************************\\\", \\\"* 23 Happy Birthday Loyd! 23 *\\\", \\\"******************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Dorris\\\", 5), [\\\"******************************\\\", \\\"* 5 Happy Birthday Dorris! 5 *\\\", \\\"******************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Riva\\\", 41), [\\\"******************************\\\", \\\"* 41 Happy Birthday Riva! 41 *\\\", \\\"******************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Evangelina\\\", 97), [\\\"************************************\\\", \\\"* 97 Happy Birthday Evangelina! 97 *\\\", \\\"************************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Jacques\\\", 68), [\\\"#################################\\\", \\\"# 68 Happy Birthday Jacques! 68 #\\\", \\\"#################################\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Todd\\\", 53), [\\\"******************************\\\", \\\"* 53 Happy Birthday Todd! 53 *\\\", \\\"******************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Agnus\\\", 18), [\\\"###############################\\\", \\\"# 18 Happy Birthday Agnus! 18 #\\\", \\\"###############################\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Vernita\\\", 88), [\\\"#################################\\\", \\\"# 88 Happy Birthday Vernita! 88 #\\\", \\\"#################################\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Gayle\\\", 7), [\\\"*****************************\\\", \\\"* 7 Happy Birthday Gayle! 7 *\\\", \\\"*****************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Jacques\\\", 95), [\\\"*********************************\\\", \\\"* 95 Happy Birthday Jacques! 95 *\\\", \\\"*********************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Kasandra\\\", 57), [\\\"**********************************\\\", \\\"* 57 Happy Birthday Kasandra! 57 *\\\", \\\"**********************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Phoebe\\\", 39), [\\\"********************************\\\", \\\"* 39 Happy Birthday Phoebe! 39 *\\\", \\\"********************************\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Fletcher\\\", 76), [\\\"##################################\\\", \\\"# 76 Happy Birthday Fletcher! 76 #\\\", \\\"##################################\\\"])\\nTest.assertSimilar(getBirthdayCake(\\\"Kristine\\\", 12), [\\\"##################################\\\", \\\"# 12 Happy Birthday Kristine! 12 #\\\", \\\"##################################\\\"])\",\"language\":\"javascript\",\"summary\":\"Create a function which constructs a rectangular birthday cake, based on someone's name and age! Build it out of strings in an array and make sure to surround the birthday message with the character that fits the rule:\\n\\nIf the age is an even number, surround the message with \\\"#\\\".\\nIf the age is an odd number, surround the message with \\\"*\\\".\\n\\nOther important rule\",\"tags\":[\"arrays\",\"formatting\"],\"timestamp\":{\"$date\":1582181578367},\"title\":\"Birthday Cake\",\"stats\":{\"completed\":{\"total\":168,\"ratings\":[2,2,2,2,2,0,1,1,1,2,2,0,2,1,2,2,2,2,0,2,2,1,0,0,2,2,2,1,0,1,1,1,2,1,1,2,0,2,2,1,1,1,2,2,1,2,4,2,2,2,1,2,2,2,2,2,2,1,3,2,2,2,2,2,0,2,0,2,2,0,2,2,2,3,2,1,2,2,2,3,2,2,2,3,2,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,0,1,2,2,2,2,2,2,3,2,1,2,3,0,1,2,2,2,2,2,0,1,2,2,2,2,2,2,3,2,2,2,2,5,2,2,1,1,2,3,2,2,2],\"rators\":[\"5Zq3aGdvh4LHBvnJL\",\"mHT2bJb5SByfJ8yKS\",\"pi76g3eRpnKrhee2a\",\"yjtdwc2AC4jA2RWtn\",\"cJwiiiX7qwSvgtmk8\",\"zTZtM9jRsu8eXie6s\",\"n5wubRfh6zh8QRymN\",\"2CvHJcA9aXt9pvZwA\",\"YER6iBcpJCuhgrYDN\",\"tyNrtjfTi56j5Hw9b\",\"Y9Nz9yafaibz54W4o\",\"RE4Mm9T6Q9uygAxGS\",\"yaL57wdXmgAZTvKfX\",\"cp3X8hk8yNME7qoD9\",\"CJnuSjyCBMTbTiibD\",\"uAS9uKs8KQmp8uhqn\",\"k5TGxBtLi9BXxeChT\",\"3aZvfgr2H2WF8Yog2\",\"FJsvM5yqKuK9yMk9P\",\"9Pzg45NEiRXhLtLh3\",\"zd9FLSzsGz3evKafy\",\"2innwjWqxJHo4eRGh\",\"vThHLd8MLkmyJHox9\",\"eANW47mfA359Y6JyP\",\"SNt23Ei5dSNtfpEMd\",\"SNiJRRosrmSWssLj4\",\"Qt97k3ThC5qyTGMz8\",\"ABxxhaDFj85bzT4Xe\",\"s5zzhdSQFAa9PbYur\",\"Rrb84KWhN5tjhMGMA\",\"vzGzRkLe4WGS9zMSz\",\"osER8G7bRZwgkS3g6\",\"avASj99STPQNh6oDe\",\"AasGs8AeX9Lcb9xJn\",\"CJBPyyfyaEeEo63sb\",\"zgoq9MhrL2h75DAMA\",\"gghiaKLLMxKdn9JTH\",\"TnaqnnxBPEYckdSpk\",\"jqbm8L6895JgAtZ6H\",\"tPtz279rzBX8kCWMr\",\"aPwbFGyNhDHK9Ee8T\",\"3EgZShfBYmWwS57Lp\",\"EjPLq3QSJdGQFJdgW\",\"tuTQhfZC5izTmXEgR\",\"EWn8w8P3nNh7knatY\",\"9XnGoq9Tv6ut3zTtH\",\"xMLCsZbeTFRpnXeZe\",\"d9LBRxvADNBB5QJMB\",\"vtHbevf2tHqe6mRxX\",\"8Z3dkvWBqtrMEE48N\",\"bX6tpTCjwoi6XMMbK\",\"dDFJpK4pXCsQYuHmc\",\"gzTs5oFrfZwh3Kfze\",\"a777e8chPvJkY3tKa\",\"eomLS3wh6tQPN8jtH\",\"ipiC2qPhKZWsAouJf\",\"2ZFoLTxcCARhwc8xX\",\"HwZx7c3QFWmt5x4oE\",\"65dbBZynphj53nXqA\",\"zw7g7T8wE5R5CBhXr\",\"z5ebtimXwFFJdYxoa\",\"Q9KQomTTPBsrkAL6c\",\"tAF9Gf6PiGogbZuWs\",\"Lzj3w7QjdzikynsGG\",\"4TuceAZ8oTDzsjhir\",\"xMxdp5oCxmeuYxhpa\",\"7wtuhPesfhcYsfZaZ\",\"JGBCMpnbbi5ztuFoX\",\"3rgHmkSAStEimEzXz\",\"sW78rbapvsS3AnuJe\",\"BSkoT6o2GweZkqXbc\",\"E6DBfkTgHuPsDWdG8\",\"ij9YRJvZz6WbqcGXS\",\"buX4mCQhtXCfBjeno\",\"Wv9v7fHb8umujfg2j\",\"uigAJ9KT5muMWTDis\",\"HFuNFZpdKCddzbuqc\",\"oL5i92q3X2c8W2vpQ\",\"9ADYC3ogYkE5JdjTn\",\"r7mZLgpQWzRiGddL5\",\"QRv96jmNaYsWkxQEG\",\"moe6ztrsNzFymC3A7\",\"inbiBEY2tizFwkN84\",\"C9LKGu2g5hSijvDzA\",\"Ya3eHgs8x3unZRLpb\",\"2zKQWLmEBw8FBs4ZL\",\"eoepTq5ES5tfgY9XT\",\"GCsLzWAhLvniQqR3J\",\"pLpcDC3EYx2DDQSdt\",\"4ntYzGHHBgqf58udP\",\"Yzh7zNiyG7LM9vnAj\",\"Sfb5RNdmiKSDyqyp4\",\"PGCDJpQMN8Sjn9Gm6\",\"7gZKfvwaeqsGKXMEN\",\"nAmJEX7BkHLd9LsG2\",\"yrLBMbni8KDsC5K44\",\"nkH3HfJXLMNcBMM79\",\"ttuGK7od8simjgmCJ\",\"QnPD4Sv6W4LHc2Qng\",\"Po3v3dHCk6wYGKMwi\",\"E2hpke7mHxAWsw5t9\",\"2tCCFm5iefjrRSaxv\",\"THo2CZ8RdzRFebZkd\",\"mfYrBKwDr4hXSFuuN\",\"XAGJuJRsgxZNiAN9C\",\"YmMgWhzhHhQLmGGgH\",\"evTTY9hwrtogaNxXn\",\"kp2ZbCewZJAbfd7xv\",\"AFfw7cGg83uYk2Miy\",\"aEm3Wvj2rFYRL8Lrb\",\"sANx9KbBCqPXZH8gG\",\"nxycxLNEN4PXDotSh\",\"CNc6rmwhbxkxEhHAp\",\"g4NCSxxHqHCGMpWwT\",\"qWR7eXxBiNee22A5u\",\"BdvdJYwHZr7JpkHsn\",\"DDokdbBKxv49M445o\",\"jLSZdBseR2kfjt8dL\",\"vewKwcMeGuk3p3MsN\",\"azAzSkvJd7eyXY9x9\",\"STipuJs6kBvPqqsSE\",\"Yp7uvStL97cC9fKkY\",\"CH53jGETBeJTummf3\",\"eKSJgCaiy4ReJWXTg\",\"3Gf7ikLijfoxabiPY\",\"nyh73Tr6GhqAat78g\",\"2Qk2mFu9HBFzrB24i\",\"vic9SZ9qqj9WhRkbd\",\"cJ4whftrhXBvQLh7R\",\"RtPhDuwmvWNHiBxmG\",\"Wv2vJnEj8ywNmARoF\",\"jjNEEdSnY3fcQKMaY\",\"srJ34BaybkQh3qRkM\",\"ApqWTmEEkTCsDou48\",\"npp5hesJrst6ghKSM\",\"ahAe7pcyjYGzcDRm4\",\"J7d397iB5GuWRAMfg\",\"M4vq8ATaS9Jg5X7iP\",\"cgCQDs9i7yChKeAjE\",\"wJTDDTE3TrmSXKP4d\",\"oDtGiNqDMHmhHE3J8\",\"p3Texjm254K6N76qS\",\"N3CNtWZz4ovJfH9Aw\",\"NGvCPuMiAP3xrRLfB\",\"8BJyXvRWcrvN3nttS\",\"C5zkuMYaPvKBWAtv8\",\"nBJve5CzG6WAw7WFQ\",\"gXTAie79kiw28tx5u\",\"LwD3CyYSiBfg3mA4r\",\"jyoLggHk8xQKZuoQC\",\"JsSESKsRcr3xCe5r9\",\"DfdkfQh8ctd2BaaRY\",\"bfYmA3LMvhSrK59cn\",\"jicWFrNKadYuLhqxh\",\"FGEeCTorXbX3WvjFW\",\"3rQ3fN5SM2eGHmTi5\",\"oyB4Wr4EeZnoDaa8B\",\"LPZ2QKCoB8q6rG25c\",\"jnyub52Fi79drGvow\"],\"quality\":[5,5,5,3,5,5,5,2,5,5,5,5,4,4,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":4.588235294117647,\"family\":[{\"_id\":\"4QksBtqAEBJRB8bEK\",\"language\":\"cpp\"},{\"_id\":\"diiEDD4JQyysFR7zh\",\"language\":\"java\"},{\"_id\":\"BBFPC6HhZ2ZFv3fpK\",\"language\":\"javascript\"},{\"_id\":\"MNpLAgh7NiLRTJRPe\",\"language\":\"php\"},{\"_id\":\"994QjWPmdhaR94DeF\",\"language\":\"python3\"},{\"_id\":\"X9vWYqquZ7Zrjczkj\",\"language\":\"ruby\"}]}}"]