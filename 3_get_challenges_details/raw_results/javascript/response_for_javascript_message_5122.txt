a["{\"msg\":\"result\",\"id\":\"1312\",\"result\":{\"_id\":\"t5w3KeLXzs5ChWDMo\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"function showTheLove(arr) {\\n\\t\\n}\",\"difficulty\":2.103896103896104,\"familyId\":\"h2hKffjZAuK4SK6iy\",\"instructions\":\"Given an array of numbers, create a function that removes 25% from every number in the array except the smallest number, and adds the total amount removed to the smallest number.\\n\\n### Examples\\n```\\nshowTheLove([4, 1, 4]) ➞ [3, 3, 3]\\n\\nshowTheLove([16, 10, 8]) ➞ [12, 7.5, 14.5]\\n\\nshowTheLove([2, 100]) ➞ [27, 75]\\n```\\n\\n### Notes\\nThere will only be one smallest number in a given array.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertSimilar(showTheLove([4, 1, 4]), [3, 3, 3,])\\nTest.assertSimilar(showTheLove([16, 10, 8]), [12, 7.5, 14.5])\\nTest.assertSimilar(showTheLove([2, 100]), [27, 75])\\nTest.assertSimilar(showTheLove([75, 64, 55]), [56.25, 48.0, 89.75])\\nTest.assertSimilar(showTheLove([84, 94, 26, 80, 16]), [63.0, 70.5, 19.5, 60.0, 87.0])\\nTest.assertSimilar(showTheLove([55, 27]), [41.25, 40.75])\\nTest.assertSimilar(showTheLove([13, 80, 75, 45, 11]), [9.75, 60.0, 56.25, 33.75, 64.25])\\nTest.assertSimilar(showTheLove([48, 28, 18]), [36.0, 21.0, 37.0])\\nTest.assertSimilar(showTheLove([17, 9]), [12.75, 13.25])\\nTest.assertSimilar(showTheLove([38, 23, 31, 16]), [28.5, 17.25, 23.25, 39.0])\\nTest.assertSimilar(showTheLove([54, 62, 59]), [84.25, 46.5, 44.25])\\nTest.assertSimilar(showTheLove([44, 46]), [55.5, 34.5])\\nTest.assertSimilar(showTheLove([21, 97, 45, 58]), [71.0, 72.75, 33.75, 43.5])\\nTest.assertSimilar(showTheLove([43, 9]), [32.25, 19.75])\\nTest.assertSimilar(showTheLove([53, 0, 14, 58]), [39.75, 31.25, 10.5, 43.5])\\nTest.assertSimilar(showTheLove([16, 19, 42, 43, 6]), [12.0, 14.25, 31.5, 32.25, 36.0])\\nTest.assertSimilar(showTheLove([26, 17, 28, 31, 79]), [19.5, 58.0, 21.0, 23.25, 59.25])\\nTest.assertSimilar(showTheLove([47, 57, 18, 2, 72]), [35.25, 42.75, 13.5, 50.5, 54.0])\\nTest.assertSimilar(showTheLove([27, 77]), [46.25, 57.75])\\nTest.assertSimilar(showTheLove([22, 52]), [35.0, 39.0])\\nTest.assertSimilar(showTheLove([85, 49, 60, 78, 6]), [63.75, 36.75, 45.0, 58.5, 74.0])\\nTest.assertSimilar(showTheLove([96, 38]), [72.0, 62.0])\\nTest.assertSimilar(showTheLove([29, 73, 81]), [67.5, 54.75, 60.75])\\nTest.assertSimilar(showTheLove([51, 46, 81, 85]), [38.25, 100.25, 60.75, 63.75])\\nTest.assertSimilar(showTheLove([26, 48, 84, 70, 8]), [19.5, 36.0, 63.0, 52.5, 65.0])\\nTest.assertSimilar(showTheLove([69, 64]), [51.75, 81.25])\\nTest.assertSimilar(showTheLove([33, 26, 39, 58]), [24.75, 58.5, 29.25, 43.5])\\nTest.assertSimilar(showTheLove([4, 51, 66]), [33.25, 38.25, 49.5])\\nTest.assertSimilar(showTheLove([0, 52, 83, 55, 40]), [57.5, 39.0, 62.25, 41.25, 30.0])\\nTest.assertSimilar(showTheLove([39, 3, 36, 52, 25]), [29.25, 41.0, 27.0, 39.0, 18.75])\\nTest.assertSimilar(showTheLove([32, 78, 12]), [24.0, 58.5, 39.5])\\nTest.assertSimilar(showTheLove([75, 51, 24]), [56.25, 38.25, 55.5])\\nTest.assertSimilar(showTheLove([42, 21, 93, 47]), [31.5, 66.5, 69.75, 35.25])\\nTest.assertSimilar(showTheLove([72, 97, 26, 1]), [54.0, 72.75, 19.5, 49.75])\\nTest.assertSimilar(showTheLove([90, 45, 12]), [67.5, 33.75, 45.75])\\nTest.assertSimilar(showTheLove([37, 47, 82]), [69.25, 35.25, 61.5])\\nTest.assertSimilar(showTheLove([54, 11]), [40.5, 24.5])\\nTest.assertSimilar(showTheLove([78, 86, 19, 46, 51]), [58.5, 64.5, 84.25, 34.5, 38.25])\\nTest.assertSimilar(showTheLove([7, 31, 74, 69]), [50.5, 23.25, 55.5, 51.75])\\nTest.assertSimilar(showTheLove([100, 26, 3, 28, 19]), [75.0, 19.5, 46.25, 21.0, 14.25])\\nTest.assertSimilar(showTheLove([87, 29, 92, 57]), [65.25, 88.0, 69.0, 42.75])\\nTest.assertSimilar(showTheLove([64, 24]), [48.0, 40.0])\\nTest.assertSimilar(showTheLove([82, 89, 52, 25, 50]), [61.5, 66.75, 39.0, 93.25, 37.5])\\nTest.assertSimilar(showTheLove([90, 17, 11]), [67.5, 12.75, 37.75])\\nTest.assertSimilar(showTheLove([14, 24, 27]), [26.75, 18.0, 20.25])\\nTest.assertSimilar(showTheLove([21, 4]), [15.75, 9.25])\\nTest.assertSimilar(showTheLove([70, 64, 25, 16]), [52.5, 48.0, 18.75, 55.75])\\nTest.assertSimilar(showTheLove([50, 17, 87, 20]), [37.5, 56.25, 65.25, 15.0])\\nTest.assertSimilar(showTheLove([60, 27, 56]), [45.0, 56.0, 42.0])\\nTest.assertSimilar(showTheLove([99, 21]), [74.25, 45.75])\\nTest.assertSimilar(showTheLove([80, 0, 45, 84]), [60.0, 52.25, 33.75, 63.0])\",\"language\":\"javascript\",\"quality\":4.675675675675675,\"summary\":\"Given an array of numbers, create a function that removes 25% from every number in the array except the smallest number, and adds the total amount removed to the smallest number.\\n\\nExamples\\nshowTheLove([4, 1, 4]) ➞ [3, 3, 3]\\n\\nshowTheLove([16, 10, 8]) ➞ [12, 7.5, 14.5]\\n\\nshowTheLove([2, 100]) ➞ [27, 75]\\n\\nNotes\\nThere will only be one smallest number in a given arr\",\"tags\":[\"arrays\",\"numbers\"],\"timestamp\":{\"$date\":1602538109400},\"title\":\"Sharing is Caring\",\"stats\":{\"completed\":{\"total\":115,\"ratings\":[2,2,2,2,2,2,1,1,1,2,0,0,2,2,2,1,3,2,0,1,1,2,3,3,2,2,2,2,2,2,3,2,2,2,2,2,1,2,3,3,3,2,3,3,3,0,2,3,3,3,2,3,4,2,2,3,2,1,1,3,2,3,3,3,1,3,0,2,2,2,3,1,3,3,3,2,5],\"quality\":[5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,1,1,5,5,4,5,5,5,5,5,5,5,5,5,4,4,5,5,5],\"rators\":[\"2ZabBuAKvgS9qTSM7\",\"qWR7eXxBiNee22A5u\",\"yjtdwc2AC4jA2RWtn\",\"CNc6rmwhbxkxEhHAp\",\"r7mZLgpQWzRiGddL5\",\"QRv96jmNaYsWkxQEG\",\"g4NCSxxHqHCGMpWwT\",\"pWJWQDhqzDSmfaFam\",\"jLSZdBseR2kfjt8dL\",\"bjn5DTzzaWCP5BDgX\",\"rehehi2Tr2mwaEoJE\",\"buX4mCQhtXCfBjeno\",\"u9cRf5kvtpRB5ffB3\",\"zw7g7T8wE5R5CBhXr\",\"vGKxRcDYDsXzTQuEQ\",\"pdGuqmMyeN4wZaWwv\",\"RE4Mm9T6Q9uygAxGS\",\"kp2ZbCewZJAbfd7xv\",\"3WtHp4MBzciz4AE8M\",\"R9uaMzX2Y4ND8Cosm\",\"vewKwcMeGuk3p3MsN\",\"Ya3eHgs8x3unZRLpb\",\"mHT2bJb5SByfJ8yKS\",\"AFfw7cGg83uYk2Miy\",\"N3CNtWZz4ovJfH9Aw\",\"Yp7uvStL97cC9fKkY\",\"eKSJgCaiy4ReJWXTg\",\"3Gf7ikLijfoxabiPY\",\"zd9FLSzsGz3evKafy\",\"JsRTAwWK7Nikj4sKA\",\"RtPhDuwmvWNHiBxmG\",\"STipuJs6kBvPqqsSE\",\"CH53jGETBeJTummf3\",\"z5ebtimXwFFJdYxoa\",\"2Qk2mFu9HBFzrB24i\",\"npp5hesJrst6ghKSM\",\"srJ34BaybkQh3qRkM\",\"nkH3HfJXLMNcBMM79\",\"J7d397iB5GuWRAMfg\",\"YSmLyP3eRhcFjJPzg\",\"DPi9QGLctq2y76KuE\",\"ahAe7pcyjYGzcDRm4\",\"skFNKvqfjA4WBSYLC\",\"Nxoup8oYHdkHTYAvs\",\"j79MwhjMdpZrK5uJL\",\"PATHFT2rXnFmxcPut\",\"gt9zhJjDZE5MraxoF\",\"MW4gsgPJfaMEMyXPy\",\"zkpiGFEto6X659waH\",\"GM2X83qnuLXTHe5zA\",\"zMCXYFZSsviDCvjnY\",\"8BJyXvRWcrvN3nttS\",\"hCfruGWxw7v64teEr\",\"CgX5he55raMxg28cr\",\"QAZ5DGaWWYhku4BNz\",\"Xa4F3vr9EbQC9mpoQ\",\"FwE4aiH6TQawW3k4y\",\"yuLxi2qBJvMnwgdgJ\",\"2TsNhkQj4Y6WYxpio\",\"8s5Bdrn7RTga7DL6x\",\"PTo9qt93YqGvL8fCa\",\"oyB4Wr4EeZnoDaa8B\",\"WnogMFYXoyvmBmGkm\",\"XSoRJg2PBMT9Ae7qg\",\"exiy4CeGedb9MkrZW\",\"TtrXnGzi9MyhLvWiz\",\"nWND4LmgZTftyB8sN\",\"E3fkFzNeAGctuvqA2\",\"E6DBfkTgHuPsDWdG8\",\"zYuvB2g7gTSyqJSBw\",\"bX6tpTCjwoi6XMMbK\",\"5NGxHLcQ8Af2RJ4TN\",\"FJsvM5yqKuK9yMk9P\",\"ZcJm2kuqJnN3CXFaR\",\"X8FmdRRbR3He4pG6N\",\"sN2JyFeJCwfwwHPwF\",\"4p2sARSZNNnKqjAT6\",\"Xk2g4CNFAnYcvxiSr\",\"F6XGbhXXnTNbGd62m\",\"wJTDDTE3TrmSXKP4d\",\"WQKXMhPwu968bt53S\",\"tAF9Gf6PiGogbZuWs\",\"xges5rijESfvNfJ7w\",\"dpDFNsknxvEYi5YkA\",\"FGEeCTorXbX3WvjFW\",\"AQSqD9oNv2uPfxZCR\",\"Novf64EbvtvTDGu2h\",\"EbxApCEhNXkW4S8kg\",\"NYRKJhABCEMbKwt3k\",\"NGvCPuMiAP3xrRLfB\",\"CJBPyyfyaEeEo63sb\",\"oDtGiNqDMHmhHE3J8\",\"65dbBZynphj53nXqA\",\"zEt6FvmkSPSHvCyGF\",\"rpNNPWzdFCc9TzKMz\",\"49XFttjKo2QhEWT3R\",\"pd8dm7sWLW9cY6dYW\",\"6BpBQnSGhzgvhXrEy\",\"QvEXmSEo3ANp3yPyH\",\"pMxDFFGrSfHCQAW2k\",\"Hq8v7ffCKdgbErDxt\",\"M4vq8ATaS9Jg5X7iP\",\"RoGGD5cpHb4ftdLDv\",\"PH32cNxBjrK4a28sn\",\"NJCmkbH5e7qbtZYhd\",\"GsrjAqoAdLATJH9qD\",\"SCYNpjgtLCE9rKpYB\",\"JFM78LRHNvNLd3oFu\",\"jyoLggHk8xQKZuoQC\"]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]}},\"family\":[{\"_id\":\"t5w3KeLXzs5ChWDMo\",\"language\":\"javascript\"},{\"_id\":\"ozhN7ey68uKntsRgw\",\"language\":\"php\"},{\"_id\":\"pqpkRBP4YT5dwBDHm\",\"language\":\"python3\"},{\"_id\":\"tBDHKza4XRvJm79GG\",\"language\":\"ruby\"}]}}"]