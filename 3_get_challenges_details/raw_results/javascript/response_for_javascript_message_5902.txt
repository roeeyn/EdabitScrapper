a["{\"msg\":\"result\",\"id\":\"1696\",\"result\":{\"_id\":\"zujgM52Xr4MogBjgH\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"function alphabetIndex(alphabet, str){\\n  \\n}\",\"difficulty\":2.3333333333333335,\"familyId\":\"CKnposQunJf3baqQY\",\"instructions\":\"Given a name, return the letter with the highest `index` in alphabetical order, with its corresponding index, in the form of a string. You are prohibited to use `max()` nor is reassigning a value to the alphabet array.\\n\\n### Examples\\n```\\nalphabet = [\\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"d\\\", \\\"e\\\", \\\"f\\\", \\\"g\\\", \\\"h\\\", \\\"i\\\", \\\"j\\\", \\\"k\\\", \\\"l\\\", \\\"m\\\", \\\"n\\\", \\\"o\\\", \\\"p\\\", \\\"q\\\", \\\"r\\\", \\\"s\\\", \\\"t\\\", \\\"u\\\", \\\"v\\\", \\\"w\\\", \\\"x\\\", \\\"y\\\", \\\"z\\\"]\\n\\n\\nalphabetIndex(alphabet, \\\"Flavio\\\") ➞ \\\"22v\\\"\\n\\nalphabetIndex(alphabet, \\\"Andrey\\\") ➞ \\\"25y\\\"\\n\\nalphabetIndex(alphabet, \\\"Oscar\\\") ➞ \\\"19s\\\"\\n```\\n\\n### Notes\\nIf you're stuck, check the **Resources** tab.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"var alphabet = [\\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"d\\\", \\\"e\\\", \\\"f\\\", \\\"g\\\", \\\"h\\\", \\\"i\\\", \\\"j\\\", \\\"k\\\", \\\"l\\\", \\\"m\\\", \\\"n\\\", \\\"o\\\", \\\"p\\\", \\\"q\\\", \\\"r\\\", \\\"s\\\", \\\"t\\\", \\\"u\\\", \\\"v\\\", \\\"w\\\", \\\"x\\\", \\\"y\\\", \\\"z\\\"]\\nTest.assertEquals(alphabetIndex(alphabet, \\\"Oscar\\\"), \\\"19s\\\")\\nTest.assertEquals(alphabetIndex(alphabet, \\\"Lucas\\\"), \\\"21u\\\")\\nTest.assertEquals(alphabetIndex(alphabet, \\\"Marko\\\"), \\\"18r\\\")\\nTest.assertEquals(alphabetIndex(alphabet, \\\"Esley\\\"), \\\"25y\\\")\\nTest.assertEquals(alphabetIndex(alphabet, \\\"Rogei\\\"), \\\"18r\\\")\\nTest.assertEquals(alphabetIndex(alphabet, \\\"Nicolas\\\"), \\\"19s\\\")\\nTest.assertEquals(alphabetIndex(alphabet, \\\"Flavio\\\"), \\\"22v\\\")\\nTest.assertEquals(alphabetIndex(alphabet, \\\"Andrey\\\"), \\\"25y\\\")\\nTest.assertEquals(alphabetIndex(alphabet, \\\"Hello\\\"), \\\"15o\\\")\",\"language\":\"javascript\",\"quality\":4.153846153846154,\"summary\":\"Given a name, return the letter with the highest index in alphabetical order, with its corresponding index, in the form of a string. You are prohibited to use max() nor is reassigning a value to the alphabet array.\\n\\nExamples\\nalphabet = [\\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"d\\\", \\\"e\\\", \\\"f\\\", \\\"g\\\", \\\"h\\\", \\\"i\\\", \\\"j\\\", \\\"k\\\", \\\"l\\\", \\\"m\\\", \\\"n\\\", \\\"o\\\", \\\"p\\\", \\\"q\\\", \\\"r\\\", \\\"s\\\", \\\"t\\\", \\\"u\\\", \\\"v\\\", \\\"w\\\", \\\"x\\\", \\\"y\\\",\",\"tags\":[\"numbers\",\"language_fundamentals\",\"sorting\"],\"timestamp\":{\"$date\":1615383197427},\"title\":\"Highest Index (With a Twist)\",\"stats\":{\"completed\":{\"total\":62,\"ratings\":[3,3,3,3,3,3,2,3,3,4,0,2,2,1,4,1,0,1,5,1,3,3,2,3,2,2,4,2,4,2,2,2,2,2,1,3,0,3,3,3,2,1,2,3,2,2,2,3,2,2,3],\"quality\":[5,3,4,2,5,5,5,4,3,3,5,5,5],\"rators\":[\"buX4mCQhtXCfBjeno\",\"QjGNkRM3Xc78yShJN\",\"QRv96jmNaYsWkxQEG\",\"iyNqxcRq2za3p2D2c\",\"a777e8chPvJkY3tKa\",\"Q6jnGv7SXFX92xFiA\",\"DPi9QGLctq2y76KuE\",\"hcm8sL8mNJTSfTdgE\",\"pi76g3eRpnKrhee2a\",\"dWjpefr342nZ8wwcs\",\"K54ipu2Y5pZfPngmk\",\"yuLxi2qBJvMnwgdgJ\",\"yjtdwc2AC4jA2RWtn\",\"8BJyXvRWcrvN3nttS\",\"zMCXYFZSsviDCvjnY\",\"J7d397iB5GuWRAMfg\",\"srJ34BaybkQh3qRkM\",\"asFGNzEb4jt6vdpRL\",\"AZ5usHFYA8sRrQvmM\",\"bpSG9Hom9skTRsddm\",\"utw6usTwqHxEGnLp3\",\"ovegfFcSkBmxMt2BL\",\"4p2sARSZNNnKqjAT6\",\"6WdWiY5xzchQesnDW\",\"28chG6YCLf2dH4B8Q\",\"PFgDHfSxajZ2nNfrH\",\"iJqPoHjGJGnPND5b9\",\"byD8mXhz2DkjokoXj\",\"49hGfiPesC8q6FjNS\",\"ALXK6iwsiiTYNnCit\",\"bfDjG9k2WDL6akxYJ\",\"qaR8DnWrTk8Mus5Q2\",\"8RbX4cwsJz86GTobf\",\"d9TugDNK8fMrTXDEq\",\"DQ2kmBxReXqjTjyed\",\"PTo9qt93YqGvL8fCa\",\"ahAe7pcyjYGzcDRm4\",\"WnogMFYXoyvmBmGkm\",\"3KfDpWtKBSYTutpyA\",\"AFfw7cGg83uYk2Miy\",\"RFZy93MxBaaWHLQzh\",\"rTJvkEBAgdNA678ni\",\"TtrXnGzi9MyhLvWiz\",\"fS74N4FXqcPpmxAaE\",\"XujK3rHd3JcM9TLJy\",\"NGvCPuMiAP3xrRLfB\",\"tAF9Gf6PiGogbZuWs\",\"PPFmWzDiefzfekdcg\",\"M4vq8ATaS9Jg5X7iP\",\"Yp7uvStL97cC9fKkY\",\"RE4Mm9T6Q9uygAxGS\",\"oDtGiNqDMHmhHE3J8\",\"h9CbFMHNNw7PTDQbt\",\"HpfaNWBYpnsQRAPQn\",\"46SBqYjYrHQhMzp2Y\",\"eomLS3wh6tQPN8jtH\",\"CNc6rmwhbxkxEhHAp\",\"HQjyFQDPJH43eb7jf\",\"Ya3eHgs8x3unZRLpb\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"YHfm2oYwqk7j2DoQ2\",\"language\":\"cpp\"},{\"_id\":\"gDYfzq68mthtmX4Q5\",\"language\":\"java\"},{\"_id\":\"zujgM52Xr4MogBjgH\",\"language\":\"javascript\"},{\"_id\":\"2DQ7REWx3HKEDsvPW\",\"language\":\"php\"},{\"_id\":\"wcdS7MEL5gvr5SGsh\",\"language\":\"python3\"},{\"_id\":\"TCQ2jpw9NhxqhLzSe\",\"language\":\"ruby\"}]}}"]