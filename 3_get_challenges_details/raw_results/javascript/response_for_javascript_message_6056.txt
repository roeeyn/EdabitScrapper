a["{\"msg\":\"result\",\"id\":\"1775\",\"result\":{\"_id\":\"pgqyeEyTtzJL9L8Nq\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"function lowestElement(arr, x, y) {\\n\\t\\n}\",\"difficulty\":2.5084745762711864,\"familyId\":\"bmW3G2QCcwAG48ARQ\",\"instructions\":\"Create a function that returns the lowest neighbor of a given (x, y) coordinate element in a 2D array. The function will be passed three parameters.\\n\\n```\\n arr,  x,  y\\n```\\n\\n- `arr` will be a 2D array holding integer values and will always be symmetrical in size (e.g. 2x2, 3x3, 4x4).\\n- `x` will hold the row coordinate, while `y` will hold the column coordinate.\\n\\nYou will have to check the horizontal, vertical and diagonal neighbor elements. If there isn't any lower neighbors, return the value of the given (x, y) coordinate.\\n\\n### Examples\\n```\\nlowestElement([\\n  [1, 2, 3],\\n  [4, 5, 6],\\n  [7, 8, 9]\\n], 1, 1) ➞ 1\\n\\n\\n[\\n  [1, 2, 3]\\n  [4, 5, 6]  // (1, 1) holds the integer 5. Check the surrounding neighbors.\\n  [7, 8, 9]\\n]\\n```\\n\\n```\\nlowestElement([\\n  [9, 8, 7],\\n  [0, -1, -3],\\n  [-5, -9, 54]\\n], 0, 0) ➞ -1\\n\\n\\n[\\n  [9, 8, 7]   // (0, 0) holds the integer 9. Check the surrounding neighbors.\\n  [0, -1, -3]\\n  [-5, -9, 54]\\n]\\n```\\n\\n### Notes\\nN/A\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertEquals(lowestElement([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 1, 1), 1)\\nTest.assertEquals(lowestElement([[0, 3, 6], [1, 4, 7], [2, 5, 8]], 2, 2), 4)\\nTest.assertEquals(lowestElement([[50, 30, 10],[42, 69, 420],[9000, 3,16]], 0, 0), 30)\\nTest.assertEquals(lowestElement([[50, 60, 10], [52, 69, 420], [9000, 3, 16]], 0, 0), 50)\\nTest.assertEquals(lowestElement([[1, 2], [5, 7]], 0, 1), 1)\\nTest.assertEquals(lowestElement([[-2, -5, -500, 49501], [1004, 10502, -5061, 19303], [40012, 487190, 39430, 13899], [3, 1, 4, 1]], 2, 3), -5061)\\nTest.assertEquals(lowestElement([\\n[19831,28749,24518,17394,27108,5225,6364,15589,26819,31116,28619,11994,29522],\\n[8085,3830,30895,14278,25618,24468,4699,11170,14285,7192,2047,103,3869],\\n[25597,31040,5731,30661,21884,31530,10397,7185,10131,9652,23531,15687,7552],\\n[22904,23005,27418,3460,23282,24394,9181,13518,30687,27163,12421,30071,28679],\\n[26532,16610,17834,15336,5328,1715,27350,2233,22427,11371,21222,4427,1176],\\n[15341,20427,18294,17264,7162,31376,4957,18252,26738,14736,13519,16289,401],\\n[4715,15902,17209,2463,11790,9922,4878,4896,22598,4876,31027,3908,28095],\\n[19733,7754,15226,29971,19651,16257,24347,6701,1772,30533,32515,11569,10449],\\n[28263,15747,6673,4970,8378,14935,11686,3462,27395,19280,4862,8650,25926],\\n[210,211,16031,17341,26186,2987,12156,2862,2672,17382,19941,2442,25680],\\n[16450,14102,1493,28835,31657,15958,11709,24089,31635,172,8742,28835,25742],\\n[14299,18513,16751,5122,16143,4445,6108,4413,26544,23135,21403,3593,1715],\\n[32427,3989,13205,7985,27546,28512,12391,31227,21441,22071,23511,3424,18955]\\n], 10, 2), 211)\",\"language\":\"javascript\",\"quality\":0,\"summary\":\"Create a function that returns the lowest neighbor of a given (x, y) coordinate element in a 2D array. The function will be passed three parameters.\\n\\n arr,  x,  y\\n\\narr will be a 2D array holding integer values and will always be symmetrical in size (e.g. 2x2, 3x3, 4x4).\\nx will hold the row coordinate, while y will hold the column coordinate.\\n\\nYou will have to\",\"tags\":[\"algorithms\",\"arrays\",\"loops\",\"math\"],\"timestamp\":{\"$date\":1607931457172},\"title\":\"Find the Lowest Neighbor of a 2D Array Element\",\"stats\":{\"completed\":{\"total\":58,\"ratings\":[2,2,2,2,2,2,0,1,2,2,3,2,3,2,3,3,2,2,2,2,3,3,3,3,2,3,2,3,3,4,4,4,3,2,4,1,3,3,1,2,3,3,0,2,3,4,2,4,3,3,2,4,3,3,2,3,1,2,4],\"quality\":[],\"rators\":[\"mHT2bJb5SByfJ8yKS\",\"g4NCSxxHqHCGMpWwT\",\"yjtdwc2AC4jA2RWtn\",\"kp2ZbCewZJAbfd7xv\",\"JZ5Sj63DvSg7r9HyS\",\"Yp7uvStL97cC9fKkY\",\"Ms4ubMhq5tjsAeMLF\",\"Xk2g4CNFAnYcvxiSr\",\"CNc6rmwhbxkxEhHAp\",\"bX6tpTCjwoi6XMMbK\",\"6vfjruFp8ZpRSi3AT\",\"8s5Bdrn7RTga7DL6x\",\"65dbBZynphj53nXqA\",\"RE4Mm9T6Q9uygAxGS\",\"wJTDDTE3TrmSXKP4d\",\"wo4cpen33NYFHNca7\",\"tAF9Gf6PiGogbZuWs\",\"en7JTZ8xWqv2YHhz4\",\"CBRx8seBYyYKqvMi3\",\"nkH3HfJXLMNcBMM79\",\"vE5jmzjqZtafA7rbA\",\"C8yR2sSnDkr8XfAjb\",\"MHqLgQyxcg9Q7tFTg\",\"8spkaoEHNxmRzyjTh\",\"RvRSbZt95z7BJdh7p\",\"oDtGiNqDMHmhHE3J8\",\"uf63N4E6teSryhHT3\",\"RKKuw76K7sRBMouKq\",\"iMx5gdA6RPcwweRGY\",\"HsCoAbZ2Kajk9qyie\",\"jg2DcMFf4DXf24jnd\",\"kpzP9egzZitbgtGQr\",\"LwD3CyYSiBfg3mA4r\",\"JcxFuLRtAmNCwCCq3\",\"HDwv2asXHJH7NeR5y\",\"T2wdGRjJkbzTLqD7d\",\"HM6yccm4Kt2x8A8Sc\",\"aPsG2ycnSqR2jKdrJ\",\"ecEBGmi9dPBxyxfYz\",\"JZ7hzwyx5hgqyACcK\",\"psdbt2PkjPv4qTwtr\",\"5pfhXjkufieswmW57\",\"d7CX6qCz3snmugb7m\",\"E7hQqvwm53Yu7MRpx\",\"5HpCgM9Qruokcxt5w\",\"gj87yXyoJxhoQLetq\",\"a2PamvcxZDW3Z6mDj\",\"93vDthpgqyr9anFvg\",\"Ro48geFkzMGRiMPxG\",\"HTz9nRyzAw4BCi7xD\",\"2Qk2mFu9HBFzrB24i\",\"hNEhHd8qodq4P3h2g\",\"tC2Nt88Ygikn2WEK3\",\"arbt8LApRSHs5ugZB\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"AEMkuAY54xd9pPbce\",\"language\":\"cpp\"},{\"_id\":\"pgqyeEyTtzJL9L8Nq\",\"language\":\"javascript\"},{\"_id\":\"iZQR8D7JwmfpHDPSP\",\"language\":\"python3\"},{\"_id\":\"MuJ3gL47Me8nELS9L\",\"language\":\"ruby\"}]}}"]