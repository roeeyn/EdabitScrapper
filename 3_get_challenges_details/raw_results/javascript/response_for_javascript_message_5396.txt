a["{\"msg\":\"result\",\"id\":\"1448\",\"result\":{\"_id\":\"YE4GQfR9wRbpcPrgE\",\"author\":\"er0s\",\"authorId\":\"5Zq3aGdvh4LHBvnJL\",\"code\":\"function nearestElement(n, arr) {\\n\\t\\n}\",\"difficulty\":2.161290322580645,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"u66cuZpTgcNkwuLoP\",\"instructions\":\"Given an array of integers `arr`, implement a function that returns the index of the number nearest to the given value `n`. If two numbers equally distant from `n` are found, the function will return the greatest of them.\\n\\n### Examples\\n```\\nnearestElement(10, [1, 100, 1000]) ➞ 0\\n// 1 is the number nearest to 10.\\n\\nnearestElement(50, [100, 49, 51]) ➞ 2\\n// 49 and 51 are equally distant from 50, with 51 being the greatest.\\n\\nnearestElement(-20, [-50, -10, -30]) ➞ 1\\n// -10 and -30 are equally distant from -20, with -10 being the greatest.\\n```\\n\\n### Notes\\nIntegers in `arr` will always be unique.\",\"isHidden\":false,\"lab\":\"Test.assertEquals(nearestElement(10, [1, 100, 1000]), 0, \\\"Example #1\\\")\\nTest.assertEquals(nearestElement(50, [100, 49, 51]), 2, \\\"Example #2\\\")\\nTest.assertEquals(nearestElement(-20, [-50, -10, -30]), 1, \\\"Example #3\\\")\\nTest.assertEquals(nearestElement(100, [80, 60, 40]), 0)\\nTest.assertEquals(nearestElement(48, [47, 49, 73, 51, 44, 41]), 1)\\nTest.assertEquals(nearestElement(1, [0, -2, 3, 2, -1]), 3)\\nTest.assertEquals(nearestElement(100, [88, 99, 101, 108, 97, 98, 36]), 2)\\nTest.assertEquals(nearestElement(-50, [13, 86, -49, -51, 8, 0]), 2)\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,1,1,3,2,1,0,2,2,0,2,2,4,2,2,1,3,0,3,2,2,2,2,2,2,2,2,2,3,1,2,2,3,2,0,3,2,2,3,3,2,3,3,3,3,3,3,1,0,3,3,1,3,2,1,3,2,4,3,2,2,3,3,3,3,0,3,3,3,3,3,1,3,1,3,0,3,3,3,3,3,0,3,2,5,3,3,2,3],\"rators\":[\"5Zq3aGdvh4LHBvnJL\",\"EAuL56kpyLytw4RcR\",\"46EqDiLEdJPtDFujt\",\"3awyiorYPgCqqP7Sr\",\"yjtdwc2AC4jA2RWtn\",\"yxHYSYifvFbadrExd\",\"AasGs8AeX9Lcb9xJn\",\"BucGr82Qhz3WiukwZ\",\"DHwbkbzYNpmkSFT7u\",\"EWn8w8P3nNh7knatY\",\"qJZsi5rhRnWA38FbA\",\"Rcbc9X8ZnwnWZCjcd\",\"yuLxi2qBJvMnwgdgJ\",\"6BpBQnSGhzgvhXrEy\",\"LLaCBiFS6wjfwiX8H\",\"ED7mtoQEf9B3aCD4C\",\"zw7g7T8wE5R5CBhXr\",\"RE4Mm9T6Q9uygAxGS\",\"65dbBZynphj53nXqA\",\"Q9KQomTTPBsrkAL6c\",\"FJsvM5yqKuK9yMk9P\",\"XKi8iZXBCHCaebSHh\",\"zgoq9MhrL2h75DAMA\",\"mHT2bJb5SByfJ8yKS\",\"CJnuSjyCBMTbTiibD\",\"uMwhmZguX5PFqPeTp\",\"oFckF5bB5dGBQKneS\",\"EjPLq3QSJdGQFJdgW\",\"n5wubRfh6zh8QRymN\",\"BdvdJYwHZr7JpkHsn\",\"2innwjWqxJHo4eRGh\",\"ih2aGaqkMaagTgyL2\",\"sbme4fRJjjBjYXRbY\",\"nYSebjpPsiBXiho7y\",\"QnPD4Sv6W4LHc2Qng\",\"dKFByM7omLZPoL6ub\",\"YER6iBcpJCuhgrYDN\",\"uAS9uKs8KQmp8uhqn\",\"eomLS3wh6tQPN8jtH\",\"pd8dm7sWLW9cY6dYW\",\"bzjWNYkGW2bBq4CF8\",\"a777e8chPvJkY3tKa\",\"8BJyXvRWcrvN3nttS\",\"oyB4Wr4EeZnoDaa8B\",\"rSaeCEDdfmmvDn5XR\",\"5ibYDhiazv3svJHiJ\",\"rehehi2Tr2mwaEoJE\",\"3aZvfgr2H2WF8Yog2\",\"LreCskdE4MTjTyhAM\",\"ZtniSFrgec4oj6Pxm\",\"a7LBurCmz5n6gECbv\",\"MT26yxj3YX95DsyLj\",\"8BFSTCnoe2QggN64c\",\"7JCLyrrY6JYGpocac\",\"QGshpArSs3bHZZR7W\",\"mF4TfPQQMzbuN7XLg\",\"QDZxeNEL8PY23vYyi\",\"PytNZK9mNiRiZxPrm\",\"5NGxHLcQ8Af2RJ4TN\",\"YXqaqjujocvg2gX4k\",\"p5ZshR8zhTqmdhKDc\",\"aRCwEM8hnYEoHiSiY\",\"Xk2g4CNFAnYcvxiSr\",\"Es4eX2stRpyoXeC7f\",\"DmENH4x5oSWrTTsDA\",\"z5ebtimXwFFJdYxoa\",\"E2hpke7mHxAWsw5t9\",\"8Z3dkvWBqtrMEE48N\",\"jYXFFTnuWFNo72Rc5\",\"8raviPK67KKxzQWcF\",\"aEm3Wvj2rFYRL8Lrb\",\"bX6tpTCjwoi6XMMbK\",\"QRv96jmNaYsWkxQEG\",\"kp2ZbCewZJAbfd7xv\",\"4Xv87xmdSnpYhi8hz\",\"CNc6rmwhbxkxEhHAp\",\"acHSYL6uQAgpgFMjp\",\"ct42f2gGpMXSd9hXM\",\"g4NCSxxHqHCGMpWwT\",\"c7uBxu2rgY77H5d79\",\"4oEq4bishsnov46yn\",\"bBRzXPk7u95YuDWEL\",\"u9cRf5kvtpRB5ffB3\",\"DPi9QGLctq2y76KuE\",\"6vfjruFp8ZpRSi3AT\",\"hzHsgwjark5sZCQ2c\",\"srJ34BaybkQh3qRkM\",\"NGvCPuMiAP3xrRLfB\",\"AFfw7cGg83uYk2Miy\",\"sN2JyFeJCwfwwHPwF\",\"oDtGiNqDMHmhHE3J8\",\"nkH3HfJXLMNcBMM79\",\"jyoLggHk8xQKZuoQC\",\"FMjtrujrpH3M4Nhf8\",\"J7d397iB5GuWRAMfg\",\"94xnj7NpS67pfJM99\",\"vwTy7y6pLbJpL7aqQ\"],\"total\":104,\"quality\":[5,5,5,3,5,3,5,5,5]},\"flags\":0},\"summary\":\"Given an array of integers arr, implement a function that returns the index of the number nearest to the given value n. If two numbers equally distant from n are found, the function will return the greatest of them.\\n\\nExamples\\nnearestElement(10, [1, 100, 1000]) ➞ 0\\n// 1 is the number nearest to 10.\\n\\nnearestElement(50, [100, 49, 51]) ➞ 2\\n// 49 and 51 are equally\",\"tags\":[\"arrays\",\"loops\"],\"timestamp\":{\"$date\":1572887088861},\"title\":\"The Nearest Element\",\"quality\":4.555555555555555,\"family\":[{\"_id\":\"tyQ7ufHGqcDuMu4rv\",\"language\":\"cpp\"},{\"_id\":\"YE4GQfR9wRbpcPrgE\",\"language\":\"javascript\"},{\"_id\":\"tX5ZhY5EkduHAPZBh\",\"language\":\"python3\"},{\"_id\":\"AL6Sfb25nqwcinvDj\",\"language\":\"ruby\"}]}}"]