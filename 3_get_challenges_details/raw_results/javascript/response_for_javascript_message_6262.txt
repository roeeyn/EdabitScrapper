a["{\"msg\":\"result\",\"id\":\"1877\",\"result\":{\"_id\":\"2nPyx6CwKTso69Hbj\",\"author\":\"benmcl@shaw.ca\",\"authorId\":\"SYEuojZtP6yLXryHv\",\"code\":\"function find(collection, predicate, startIndex) {\\n\\t\\n}\",\"difficulty\":2.6956521739130435,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"cHdjoktCHwfzH3ihF\",\"instructions\":\"According to the lodash documentation, `_.find` Iterates over elements of collection, returning the first element predicate returns truthy for. The predicate is invoked with three arguments: (value, index|key, collection).\\n\\n### Arguments\\n- collection (Array or Object): The collection to inspect.\\n- \\\\[predicate=_.identity] function, object, array or string\\n- \\\\[fromIndex=0] (number): The index to search from.\\n\\nRecreate lodash's `_.find` using vanilla JavaScript.\\n\\nThe difference between lodash `_.find` and the JavaScript find method is that the JavaScript method can only be applied to arrays and can only receive a callback function like so: `array.find(d => d.isTheBest)`. The lodash find method can be called on both arrays and objects and can receive a function, an object, or an array which it uses to perform the search.\\n\\nLike so:\\n```\\n_.find(array, {isTheBest: true})\\n\\n_.find(array, \\\"isBest\\\")\\n\\n_.find(array, [\\\"isBest\\\", true])\\n```\\n\\n### Examples\\n```\\nvar users = [\\n  { \\\"user\\\": \\\"barney\\\",  \\\"age\\\": 36, \\\"active\\\": true },\\n  { \\\"user\\\": \\\"fred\\\",    \\\"age\\\": 40, \\\"active\\\": false },\\n  { \\\"user\\\": \\\"pebbles\\\", \\\"age\\\": 1,  \\\"active\\\": true }\\n]\\n\\nfind(users, function(o) { return o.age < 40; }) ➞ object for \\\"barney\\\"\\n\\nfind(users, { \\\"age\\\": 1, \\\"active\\\": true }) ➞ object for \\\"pebbles\\\"\\n\\nfind(users, [\\\"active\\\", false]) ➞ object for \\\"fred\\\"\\n\\nfind(users, \\\"active\\\") ➞ object for \\\"barney\\\"\\n```\\n\\n### Notes\\n- Do not attempt to import lodash; you are simply writing your own version.\\n- This entire series of challenges can be found [here](https://edabit.com/collection/vLR3aCkPwZKSobGCi).\",\"isFree\":false,\"isHidden\":false,\"lab\":\"vehicles = [\\n  { make: \\\"toyota\\\", color: \\\"red\\\", engine: \\\"v6\\\", type: \\\"hatchback\\\", year: 2018, mileage: 113312, isUsed: true },\\n  { make: \\\"ford\\\", color: \\\"blue\\\", engine: \\\"v4\\\", type: \\\"car\\\", year: 2012, mileage: 123532, isUsed: true },\\n  { make: \\\"mazda\\\", color: \\\"grey\\\", engine: \\\"v8\\\", type: \\\"sedan\\\", year: 2021, mileage: 0, isUsed: false },\\n  { make: \\\"ford\\\", color: \\\"green\\\", engine: \\\"v8\\\", type: \\\"truck\\\", year: 2008, mileage: 25467, isUsed: true },\\n];\\n\\nvehiclesAsObject = {\\n  stall1: { make: \\\"toyota\\\", color: \\\"red\\\", engine: \\\"v6\\\", type: \\\"hatchback\\\", year: 2018, mileage: 113312, isUsed: true },\\n  stall2: { make: \\\"ford\\\", color: \\\"blue\\\", engine: \\\"v4\\\", type: \\\"car\\\", year: 2012, mileage: 123532, isUsed: true },\\n  stall3: { make: \\\"mazda\\\", color: \\\"grey\\\", engine: \\\"v8\\\", type: \\\"sedan\\\", year: 2021, mileage: 0, isUsed: false },\\n  stall4: { make: \\\"ford\\\", color: \\\"green\\\", engine: \\\"v8\\\", type: \\\"truck\\\", year: 2008, mileage: 25467, isUsed: true },\\n};\\n\\nTest.assertSimilar(\\n  find(vehicles, (d) => d.color === \\\"red\\\"),\\n  { make: \\\"toyota\\\", color: \\\"red\\\", engine: \\\"v6\\\", type: \\\"hatchback\\\", year: 2018, mileage: 113312, isUsed: true }\\n);\\n\\nTest.assertSimilar(\\n  find(vehicles, (d) => d.color === \\\"green\\\" && d.year === 2008),\\n  { make: \\\"ford\\\", color: \\\"green\\\", engine: \\\"v8\\\", type: \\\"truck\\\", year: 2008, mileage: 25467, isUsed: true }\\n);\\n\\nTest.assertSimilar(find(vehicles, [\\\"type\\\", \\\"sedan\\\"]), {\\n  make: \\\"mazda\\\",\\n  color: \\\"grey\\\",\\n  engine: \\\"v8\\\",\\n  type: \\\"sedan\\\",\\n  year: 2021,\\n  mileage: 0,\\n  isUsed: false,\\n});\\n\\nTest.assertSimilar(find(vehicles, [\\\"type\\\", \\\"big\\\", \\\"engine\\\", \\\"v8\\\"]), undefined);\\n\\nTest.assertSimilar(find(vehicles, { make: \\\"ford\\\" }), {\\n  make: \\\"ford\\\",\\n  color: \\\"blue\\\",\\n  engine: \\\"v4\\\",\\n  type: \\\"car\\\",\\n  year: 2012,\\n  mileage: 123532,\\n  isUsed: true,\\n});\\n\\nTest.assertSimilar(find(vehicles, { make: \\\"ford\\\" }, 2), {\\n  make: \\\"ford\\\",\\n  color: \\\"green\\\",\\n  engine: \\\"v8\\\",\\n  type: \\\"truck\\\",\\n  year: 2008,\\n  mileage: 25467,\\n  isUsed: true,\\n});\\n\\nTest.assertSimilar(find(vehicles, { make: \\\"mazda\\\", color: \\\"grey\\\", engine: \\\"v8\\\" }, 2), {\\n  make: \\\"mazda\\\",\\n  color: \\\"grey\\\",\\n  engine: \\\"v8\\\",\\n  type: \\\"sedan\\\",\\n  year: 2021,\\n  mileage: 0,\\n  isUsed: false,\\n});\\n\\nTest.assertSimilar(find(vehiclesAsObject, { make: \\\"mazda\\\", color: \\\"grey\\\", engine: \\\"v8\\\" }, 2), {\\n  make: \\\"mazda\\\",\\n  color: \\\"grey\\\",\\n  engine: \\\"v8\\\",\\n  type: \\\"sedan\\\",\\n  year: 2021,\\n  mileage: 0,\\n  isUsed: false,\\n});\\n\\nTest.assertSimilar(\\n  find(vehiclesAsObject, (d) => d.color === \\\"red\\\"),\\n  {\\n    make: \\\"toyota\\\",\\n    color: \\\"red\\\",\\n    engine: \\\"v6\\\",\\n    type: \\\"hatchback\\\",\\n    year: 2018,\\n    mileage: 113312,\\n    isUsed: true,\\n  }\\n);\\nTest.assertSimilar(find(vehiclesAsObject, \\\"isUsed\\\"), {\\n  make: \\\"toyota\\\",\\n  color: \\\"red\\\",\\n  engine: \\\"v6\\\",\\n  type: \\\"hatchback\\\",\\n  year: 2018,\\n  mileage: 113312,\\n  isUsed: true,\\n});\",\"language\":\"javascript\",\"quality\":0,\"stats\":{\"completed\":{\"ratings\":[3,3,3,3,3,3,2,1,2,3,2,1,4,2,2,2,4,2,4,3,5,2,3],\"quality\":[],\"rators\":[\"SYEuojZtP6yLXryHv\",\"4RsakkyRXyYGwFxEa\",\"vGKxRcDYDsXzTQuEQ\",\"mHT2bJb5SByfJ8yKS\",\"ped54A2xYmQLxtAe3\",\"yjtdwc2AC4jA2RWtn\",\"CNc6rmwhbxkxEhHAp\",\"7JCLyrrY6JYGpocac\",\"BZ582kfiaTEm8q5w3\",\"KXYHpCQvmTtpbGXYg\",\"SjY6a2v6jMjGraDKz\",\"MmYAgjtRNfD22Y7BT\",\"xfxkLoQsbZBonmBGp\",\"2NGSwAJk9NHt3toCo\",\"W9vw6B8MJy6HApeCt\",\"vSPc7MGK5Poy8tSFp\",\"ZGiXQv52K5pydFZGw\",\"xCpLpG5ofmvm2YiyH\"],\"total\":21},\"flags\":0},\"summary\":\"According to the lodash documentation, _.find Iterates over elements of collection, returning the first element predicate returns truthy for. The predicate is invoked with three arguments: (value, index|key, collection).\\n\\nArguments\\ncollection (Array or Object): The collection to inspect.\\n\\\\[predicate=_.identity] function, object, array or string\\n\\\\[fromIndex=0]\",\"tags\":[\"arrays\",\"objects\",\"functional_programming\"],\"timestamp\":{\"$date\":1607444615837},\"title\":\"Learn Lodash: _.find, Find a Value in an Array or Object\",\"family\":[{\"_id\":\"2nPyx6CwKTso69Hbj\",\"language\":\"javascript\"}]}}"]