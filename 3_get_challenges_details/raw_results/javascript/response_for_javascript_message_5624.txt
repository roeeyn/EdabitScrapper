a["{\"msg\":\"result\",\"id\":\"1561\",\"result\":{\"_id\":\"fdfdgjo6vFYSunMdr\",\"author\":\"benmcl@shaw.ca\",\"authorId\":\"SYEuojZtP6yLXryHv\",\"code\":\"function camelCase(str) {\\n\\t\\n}\",\"difficulty\":2.230769230769231,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"f8bPYKzaeT2apNtKL\",\"instructions\":\"According to the lodash documentation, `_.camelCase` turns a string into camelcase. Your task is to recreate lodash's camel case with your own function using vanilla JavaScript.\\n\\nThere is already a camel case challenge on Edabit but lodash's version is much more robust. It can tell if a string is already camel case and if so it just returns the string. It can also handle numbers and capitalized letters that are next to one another.\\n\\n### Use Case\\nSometimes I want to create a new variable with a name that is a combination of other variable names. Say I want to know user1's date of birth and I have two variables, user1 and `dateOfBirth`. If I combine them I get `user1dateOfBirth` which is an invalid format for my application. I would use `_.startCase(\\\"user1\\\" + \\\"dateOfBirth\\\")` and I would get `user1DateOfBirth`.\\n\\n### Examples\\n```\\ncamelCase(\\\"Foo Bar\\\") ➞ \\\"fooBar\\\"\\n\\ncamelCase(\\\"--foo-bar--\\\") ➞ \\\"fooBar\\\"\\n\\ncamelCase(\\\"__FOO_BAR__\\\") ➞ \\\"fooBar\\\"\\n```\\n\\n### Notes\\n- Do not attempt to import lodash; you are simply writing your own version.\\n- This entire series of challenges can be found [here](https://edabit.com/collection/vLR3aCkPwZKSobGCi).\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertEquals(camelCase(\\\"fooBar\\\"), \\\"fooBar\\\")\\nTest.assertEquals(camelCase(\\\"Foo      Bar\\\"), \\\"fooBar\\\")\\nTest.assertEquals(camelCase(\\\"--foo-bar--\\\"), \\\"fooBar\\\")\\nTest.assertEquals(camelCase(\\\"__FOO_BAR__-\\\"), \\\"fooBar\\\")\\nTest.assertEquals(camelCase(\\\"foo123Bar\\\"), \\\"foo123Bar\\\")\\nTest.assertEquals(camelCase(\\\"foo123Bar\\\"), \\\"foo123Bar\\\")\\nTest.assertEquals(camelCase(\\\"foo_Bar\\\"), \\\"fooBar\\\")\",\"language\":\"javascript\",\"quality\":0,\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,3,0,2,3,2,3,2,3,2,2,3,2,0,3,3,2,3,3,2,3],\"quality\":[],\"rators\":[\"SYEuojZtP6yLXryHv\",\"bX6tpTCjwoi6XMMbK\",\"g4NCSxxHqHCGMpWwT\",\"LFSASkxgw9hr3KqmC\",\"tadccSMwagM2BdEkE\",\"mHT2bJb5SByfJ8yKS\",\"hMgwdeNZwDutAFutj\",\"Akq3fQcPRgPrWfsye\",\"PTo9qt93YqGvL8fCa\",\"yjtdwc2AC4jA2RWtn\",\"CNc6rmwhbxkxEhHAp\",\"PytNZK9mNiRiZxPrm\",\"M4vq8ATaS9Jg5X7iP\",\"vSPc7MGK5Poy8tSFp\",\"2Qk2mFu9HBFzrB24i\",\"XGngZST3B7zpotX9b\",\"RE4Mm9T6Q9uygAxGS\",\"J7d397iB5GuWRAMfg\",\"Ya3eHgs8x3unZRLpb\",\"oDtGiNqDMHmhHE3J8\",\"k9F2XNorvgtf64GnP\"],\"total\":21},\"flags\":0},\"summary\":\"According to the lodash documentation, _.camelCase turns a string into camelcase. Your task is to recreate lodash's camel case with your own function using vanilla JavaScript.\\n\\nThere is already a camel case challenge on Edabit but lodash's version is much more robust. It can tell if a string is already camel case and if so it just returns the string. It can al\",\"tags\":[\"strings\",\"regex\"],\"timestamp\":{\"$date\":1607356975376},\"title\":\"Learn Lodash: _.camelCase, Turn a String to camelCase\",\"family\":[{\"_id\":\"fdfdgjo6vFYSunMdr\",\"language\":\"javascript\"}]}}"]