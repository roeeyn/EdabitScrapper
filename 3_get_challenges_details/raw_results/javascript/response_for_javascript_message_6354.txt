a["{\"msg\":\"result\",\"id\":\"1920\",\"result\":{\"_id\":\"WyEL2YcemhrS4waEE\",\"author\":\"Bartosz Cytrowski\",\"authorId\":\"QCchMDx3z8NcqT8QJ\",\"code\":\"function getNotesDistribution(students) {\\n\\t\\n}\",\"difficulty\":2.7216494845360826,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"rPAv6mvnv4guWDTg2\",\"instructions\":\"Create a function that takes an array of students and returns an object representing their notes distribution. Keep in mind that all invalid notes should not be counted in the distribution. Valid notes are: `1, 2, 3, 4, 5`\\n\\n### Example\\n```\\ngetNotesDistribution([\\n  {\\n    \\\"name\\\": \\\"Steve\\\",\\n    \\\"notes\\\": [5, 5, 3, -1, 6]\\n  },\\n  {\\n    \\\"name\\\": \\\"John\\\",\\n    \\\"notes\\\": [3, 2, 5, 0, -3]\\n  }\\n] âžž {\\n  5: 3,\\n  3: 2,\\n  2: 1\\n})\\n```\\n\\n### Notes\\nTry doing that with filter + reduce.\",\"lab\":\"const objectsAreEqual = (actual, expected) => Object.keys(expected).every(\\n  key => actual[key] === expected[key]\\n)\\nconst areEqual = (actual, expected, compare) => expected.every(\\n  (item, index) => compare(actual[index], item)\\n)\\nconst sets = [\\n  [['Jacek', [5, 4, 3, -1, 0]], ['Ewa', [3, 3, 3, 6]], ['Zygmunt', [1, 2, 3]]],\\n  [['Jacek', []], ['Ewa', []], ['Zygmunt', [6, 1, 2, 3]]],\\n  []\\n].map(\\n  set => ({ \\n    actual: getNotesDistribution(\\n      set.map(([name, notes]) => ({ name, notes }))\\n    ), \\n    expected: set.map(([,notes]) => notes).reduce((result, next) => result.concat(next), []).filter(\\n      note => note > 0 && note < 6\\n    ).reduce(\\n    \\t(result, next) => {\\n        result[next] = (result[next] || 0) + 1\\n      \\treturn result\\n      },\\n      {}\\n    )\\n  })   \\n).forEach(\\n  ({ actual, expected }) => {\\n    Test.expectNoError('Result should be an array', () => {\\n      Test.assertEquals(\\n        objectsAreEqual(actual, expected), \\n        true, \\n        JSON.stringify(actual)\\n      )\\n    })\\n  }\\n)\",\"language\":\"javascript\",\"summary\":\"Create a function that takes an array of students and returns an object representing their notes distribution. Keep in mind that all invalid notes should not be counted in the distribution. Valid notes are: 1, 2, 3, 4, 5\\n\\nExample\\ngetNotesDistribution([\\n  {\\n    \\\"name\\\": \\\"Steve\\\",\\n    \\\"notes\\\": [5, 5, 3, -1, 6]\\n  },\\n  {\\n    \\\"name\\\": \\\"John\\\",\\n    \\\"notes\\\": [3, 2, 5, 0,\",\"tags\":[\"arrays\",\"objects\"],\"timestamp\":{\"$date\":1549049867711},\"title\":\"Get Notes Distribution\",\"stats\":{\"completed\":{\"total\":98,\"ratings\":[3,3,3,3,3,3,3,3,3,3,2,4,5,2,2,1,5,1,2,4,0,3,3,2,1,3,4,3,1,4,2,4,3,4,4,4,2,4,3,3,2,2,4,2,0,2,4,2,3,4,4,2,2,3,4,3,1,0,4,3,1,3,3,4,3,2,2,3,4,1,3,2,4,3,3,4,3,2,2,3,4,3,2,2,3,3,2,3,2,3,3,1,3,3,2,2,2],\"rators\":[\"QCchMDx3z8NcqT8QJ\",\"65dbBZynphj53nXqA\",\"rtbs4hJZ4SjSTmajK\",\"GqgyH3odtiFeQXSeY\",\"h5EfHWvHzoZuGDiTE\",\"SDtZFL5NzAoCPofXk\",\"ak5aPiT6QWpmbnPzD\",\"etGFWRHSsCHEfajzF\",\"ou2hiyPBXea4s4oqC\",\"YAzwLNgqc9JpybGzh\",\"dbSk7oiF8nfL4fGNZ\",\"mf8xW5DhPjfXaCEsQ\",\"AX6HbB8rARLjiAjtJ\",\"uLjxtusKSYd8eufeA\",\"wkxYjg28PC4xdWH69\",\"ZTYXPkgL9E4vXWKev\",\"emq8GaxWTKJCXpsFr\",\"gJ66sSKPG6tbwED65\",\"MNcvmEgPzBgs7MoP5\",\"XHngE5iScvztMpnR2\",\"BgKBvsnxc97eawaFD\",\"F4op7npQGaGoKy9Li\",\"PmmNQRKL9dH8hac2e\",\"WQ87sDtTd8KxbN4tT\",\"oDoqT5cEh5THt3zBS\",\"SFTxrRYF8wjmKjXGc\",\"AQPt9kQZBLa2nb44L\",\"pd8dm7sWLW9cY6dYW\",\"TMTH5LfMm9MrBFyEx\",\"2v7GEQAeLwMofPhXW\",\"n5wubRfh6zh8QRymN\",\"4itF2fjGR9Swc48Zp\",\"NJXAfxZ47S6bHR2CK\",\"gyB5wJihaSZCWKTCB\",\"uZrLKq6TRWgrjDJaW\",\"h4jFmtbFn92eA4649\",\"WW35oDAmkg3qd73to\",\"3YsBF3wYvGfE9jRhC\",\"hi4T9cRdY7T37Dbuy\",\"yjtdwc2AC4jA2RWtn\",\"eQdnBfe8riy82SNrK\",\"FJsvM5yqKuK9yMk9P\",\"mHT2bJb5SByfJ8yKS\",\"ksNkXwuYAy7TNQGYr\",\"5Zq3aGdvh4LHBvnJL\",\"AasGs8AeX9Lcb9xJn\",\"nB2zvS7Cwaz58JyfP\",\"5pEWJyHf5kNDyu9fi\",\"cRpaCxYRmGcN3Nsoj\",\"hbjAs4qr5Cb22qDai\",\"Y9Nz9yafaibz54W4o\",\"pi76g3eRpnKrhee2a\",\"GZGvYkdHBssXCdrae\",\"HwZx7c3QFWmt5x4oE\",\"p2woPCQKXuWJCwffJ\",\"sBcsrC5paZm9nxjot\",\"Q7K4Z4FrbHZDFNF5C\",\"M4vq8ATaS9Jg5X7iP\",\"iHaSQP2bhfL7ByBJB\",\"6BpBQnSGhzgvhXrEy\",\"aEm3Wvj2rFYRL8Lrb\",\"kp2ZbCewZJAbfd7xv\",\"QRv96jmNaYsWkxQEG\",\"YjbEB4NP6S2w6ZWms\",\"eFjGhq7C7bBKXjT6X\",\"jAB3aWnAqfpkehBqt\",\"YLTZRjM78Wi9J9Re4\",\"bXaGdBM8FBLHf7N6Y\",\"vGKxRcDYDsXzTQuEQ\",\"vpDDs4b6BdAXi9ZXv\",\"BdnE4RS5puoxo92mA\",\"c7uBxu2rgY77H5d79\",\"buX4mCQhtXCfBjeno\",\"iyNqxcRq2za3p2D2c\",\"6vfjruFp8ZpRSi3AT\",\"J7d397iB5GuWRAMfg\",\"wKn7Rc8y2GiDZzXkC\",\"jemTNShfp6ymAs3pj\",\"mSXdgt48tnZ2xWAuG\",\"8BJyXvRWcrvN3nttS\",\"HHNSBLTaSsZjsWG3D\",\"ShrXg4RHgnyFjzJ8w\",\"QP26bMsAeKw7kKntH\",\"oDtGiNqDMHmhHE3J8\",\"aS38JNngoPHWbSt8f\",\"ZcJm2kuqJnN3CXFaR\",\"wmTajiXRyp5fwAsaJ\",\"C8yR2sSnDkr8XfAjb\",\"s678Wirfor5uYL5T6\",\"aAMkoofS9nvsPu2rv\",\"RE4Mm9T6Q9uygAxGS\",\"RuhDQF9bSiZNbWaau\",\"4Rzq4FgewNZN7WmEf\"],\"quality\":[5,5,5,5,5]},\"tests\":{\"score\":0,\"voters\":[\"QCchMDx3z8NcqT8QJ\"]},\"instructions\":{\"score\":0,\"voters\":[\"QCchMDx3z8NcqT8QJ\"]},\"flags\":0},\"isHidden\":false,\"quality\":5,\"family\":[{\"_id\":\"WyEL2YcemhrS4waEE\",\"language\":\"javascript\"},{\"_id\":\"MhtcQNMbkP82ZKJpm\",\"language\":\"python3\"},{\"_id\":\"zAE9CqTBTnEtSCxKJ\",\"language\":\"ruby\"}]}}"]