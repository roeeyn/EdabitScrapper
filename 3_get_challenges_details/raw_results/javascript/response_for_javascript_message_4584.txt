a["{\"msg\":\"result\",\"id\":\"1045\",\"result\":{\"_id\":\"CtxRSuGhry3XK7wjh\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"function shiftToRight(x, y) {\\n\\t// recursive code here\\n}\",\"difficulty\":1.7096774193548387,\"familyId\":\"zctwoeaiQAFAcbiE4\",\"instructions\":\"The **right shift** operation is similar to **floor division by powers of two**, thus, the process is _repetitive_ and can be done _recursively_. \\n\\nSample calculation using the right shift operator ( `>>` ):\\n```\\n80 >> 3 = floor(80/2^3) = floor(80/8) = 10\\n-24 >> 2 = floor(-24/2^2) = floor(-24/4) = -6\\n-5 >> 1 = floor(-5/2^1) = floor(-5/2) = -3\\n```\\n\\nWrite a function that **mimics** (without the use of **>>**) the right shift operator and returns the result from the two given integers.\\n\\n### Examples\\n```\\nshiftToRight(80, 3) ➞ 10\\n\\nshiftToRight(-24, 2) ➞ -6\\n\\nshiftToRight(-5, 1) ➞ -3\\n\\nshiftToRight(4666, 6) ➞ 72\\n\\nshiftToRight(3777, 6) ➞ 59\\n\\nshiftToRight(-512, 10) ➞ -1\\n```\\n\\n### Notes\\n- There will be no negative values for the second parameter `y`.\\n- This challenge is more like recreating of the **right shift** operation, thus, **the use of the operator directly** is **prohibited**.\\n- You are expected to solve this challenge via **recursion**.\\n- A non-recursive version of this challenge can be found in [here](https://edabit.com/challenge/ALGbgMWLuEdrh22fB).\\n- If you think **recursion** if fun, here is a [collection] (https://edabit.com/collection/YJH4pAyqDbhLc4STc) of such challenges.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"const recurCheck = f => (`${f}`.match(RegExp(`${f.name}`,'gm'))||[]).length > +(/function/.test(f))\\nconst opCheck = f => !`${f}`.match(RegExp('>>', 'gm'))\\n\\nTest.assertNotEquals(recurCheck(shiftToRight), false, \\\"Recursion is required!\\\")\\nTest.assertNotEquals(opCheck(shiftToRight), false,\\n    \\\"The use of right shift operator (>>) is prohibited!\\\")\\n\\nlet [numVector, resVector] = [\\n  [[80, 3], [-24, 2], [-5, 1], [38, 0], [192, 4], [4666, 6], [3777, 6], [1024, 5], [-512, 10]],\\n  [10, -6, -3, 38, 12, 72, 59, 32, -1]\\n]\\nfor (let i in numVector) Test.assertEquals(shiftToRight(...numVector[i]), resVector[i])\",\"language\":\"javascript\",\"quality\":4.75,\"summary\":\"The right shift operation is similar to floor division by powers of two, thus, the process is repetitive and can be done recursively.\\n\\nSample calculation using the right shift operator ( >> ):\\n80 >> 3 = floor(80/2^3) = floor(80/8) = 10\\n-24 >> 2 = floor(-24/2^2) = floor(-24/4) = -6\\n-5 >> 1 = floor(-5/2^1) = floor(-5/2) = -3\\n\\nWrite a function that mimics (withou\",\"tags\":[\"recursion\",\"numbers\",\"bit_operations\"],\"timestamp\":{\"$date\":1603131148392},\"title\":\"Recursion: Right Shift by Division\",\"stats\":{\"completed\":{\"total\":72,\"ratings\":[2,2,2,2,2,2,0,2,0,3,1,2,1,0,1,3,2,1,3,2,0,2,2,2,2,2,0,2,1,1,2,1,3,2,2,1,0,2,2,3,3,1,3,2,2,1,1,1,2,2,2,2,3,2,2,3,2,0,2,1,2,2],\"quality\":[5,4,5,5,5,5,5,4],\"rators\":[\"a777e8chPvJkY3tKa\",\"g4NCSxxHqHCGMpWwT\",\"buX4mCQhtXCfBjeno\",\"QRv96jmNaYsWkxQEG\",\"kp2ZbCewZJAbfd7xv\",\"yjtdwc2AC4jA2RWtn\",\"evTTY9hwrtogaNxXn\",\"Yp7uvStL97cC9fKkY\",\"zw7g7T8wE5R5CBhXr\",\"pWJWQDhqzDSmfaFam\",\"bX6tpTCjwoi6XMMbK\",\"azAzSkvJd7eyXY9x9\",\"nyh73Tr6GhqAat78g\",\"RE4Mm9T6Q9uygAxGS\",\"JGBCMpnbbi5ztuFoX\",\"CNc6rmwhbxkxEhHAp\",\"2Ni3PzJAc5fAhqBkb\",\"mHT2bJb5SByfJ8yKS\",\"36aiLHJ7QLbYH5gKK\",\"AFfw7cGg83uYk2Miy\",\"nkH3HfJXLMNcBMM79\",\"3Gf7ikLijfoxabiPY\",\"m6qKkBY4aPWziyJTj\",\"krZ6nT623MZFty7tB\",\"RDesnxbcnyHKT6AW8\",\"u9cRf5kvtpRB5ffB3\",\"xR2XmksveYcejo6dc\",\"pHp9XWwL6QBTRSWPY\",\"NkN83GoA5hznHDpDt\",\"d7JAGB9g43TPprkMD\",\"xMxrziDLvH5ZfCFPZ\",\"Ya3eHgs8x3unZRLpb\",\"R9uaMzX2Y4ND8Cosm\",\"vGKxRcDYDsXzTQuEQ\",\"oDtGiNqDMHmhHE3J8\",\"AasGs8AeX9Lcb9xJn\",\"M4vq8ATaS9Jg5X7iP\",\"65dbBZynphj53nXqA\",\"fKc5pSa4EdK2Hh5c3\",\"r47Cs3y2F8exomjD2\",\"LwD3CyYSiBfg3mA4r\",\"PH32cNxBjrK4a28sn\",\"zd9FLSzsGz3evKafy\",\"ahAe7pcyjYGzcDRm4\",\"PRS3KXWnk3ey4WF5N\",\"GiQCH5nvo5A2pnREZ\",\"nBJve5CzG6WAw7WFQ\",\"gXTAie79kiw28tx5u\",\"pi76g3eRpnKrhee2a\",\"rqeF88eXmoKSr4HeK\",\"RKKuw76K7sRBMouKq\",\"8BJyXvRWcrvN3nttS\",\"uhBzCcyJhHHap6gvB\",\"nMxZsNQ6btmmevxfj\",\"gSrqu8MsZMFSxxWAZ\",\"z5QR6HAxPer9JP27c\",\"2sLmHo7G2irSyrDB7\",\"i8rND7EkbgsSwaLRh\",\"46SBqYjYrHQhMzp2Y\",\"z5ebtimXwFFJdYxoa\",\"CHvzhtXnv8HTbPQ56\",\"jicWFrNKadYuLhqxh\",\"bfYmA3LMvhSrK59cn\",\"LPZ2QKCoB8q6rG25c\",\"Cyt8A3xXDZF2k4ERW\"]},\"flags\":0},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"j3pBTZLXSo7JJ2iAy\",\"language\":\"java\"},{\"_id\":\"CtxRSuGhry3XK7wjh\",\"language\":\"javascript\"},{\"_id\":\"v34oCTbkrceCZjgRE\",\"language\":\"python3\"}]}}"]