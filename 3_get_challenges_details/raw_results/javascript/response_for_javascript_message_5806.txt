a["{\"msg\":\"result\",\"id\":\"1648\",\"result\":{\"_id\":\"jx9hhCFHp92EpjB2J\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"function isShuffledWell(arr) {\\n\\t\\n}\",\"difficulty\":2.30188679245283,\"familyId\":\"JrKgqjPKhqG3qMMNj\",\"instructions\":\"Given an array of *10 numbers*, return whether or not the array is shuffled sufficiently enough. In this case, if **3 or more** numbers appear **consecutively** (ascending or descending), return `false`.\\n\\n### Examples\\n```\\nisShuffledWell([1, 2, 3, 5, 8, 6, 9, 10, 7, 4]) ➞ false\\n// 1, 2, 3 appear consecutively\\n\\nisShuffledWell([3, 5, 1, 9, 8, 7, 6, 4, 2, 10]) ➞ false\\n// 9, 8, 7, 6 appear consecutively\\n\\nisShuffledWell([1, 5, 3, 8, 10, 2, 7, 6, 4, 9]) ➞ true\\n// No consecutive numbers appear\\n\\nisShuffledWell([1, 3, 5, 7, 9, 2, 4, 6, 8, 10]) ➞ true\\n// No consecutive numbers appear\\n```\\n\\n### Notes\\n- Only steps of 1 in either direction count as consecutive (i.e. a sequence of odd and even numbers would count as being properly shuffled (see example #4)).\\n- You will get numbers from 1-10.\",\"isHidden\":false,\"lab\":\"Test.assertEquals(isShuffledWell([1, 2, 3, 5, 8, 6, 9, 10, 7, 4]), false, \\\"1, 2, 3 appear consecutively.\\\")\\nTest.assertEquals(isShuffledWell([3, 5, 1, 9, 8, 7, 6, 4, 2, 10]), false, \\\"9, 8, 7, 6 appear consecutively.\\\")\\nTest.assertEquals(isShuffledWell([1, 5, 3, 8, 10, 2, 7, 6, 4, 9]), true, \\\"No consecutive numbers appear.\\\")\\nTest.assertEquals(isShuffledWell([1, 3, 5, 7, 9, 2, 4, 6, 8, 10]), true, \\\"No consecutive numbers appear.\\\")\\nTest.assertEquals(isShuffledWell([5, 6, 7, 9, 1, 10, 3, 8, 2, 4]), false)\\nTest.assertEquals(isShuffledWell([3, 9, 7, 5, 2, 4, 10, 1, 8, 6]), true)\\nTest.assertEquals(isShuffledWell([6, 4, 2, 1, 3, 7, 8, 10, 5, 9]), true)\\nTest.assertEquals(isShuffledWell([2, 6, 10, 9, 8, 1, 4, 7, 3, 5]), false)\\nTest.assertEquals(isShuffledWell([6, 10, 5, 8, 4, 2, 7, 9, 3, 1]), true)\\nTest.assertEquals(isShuffledWell([3, 10, 5, 2, 6, 9, 8, 4, 1, 7]), true)\\nTest.assertEquals(isShuffledWell([10, 7, 9, 5, 4, 6, 3, 8, 2, 1]), true)\\nTest.assertEquals(isShuffledWell([3, 5, 9, 6, 10, 1, 4, 8, 7, 2]), true)\\nTest.assertEquals(isShuffledWell([10, 7, 8, 4, 3, 9, 5, 1, 2, 6]), true)\\nTest.assertEquals(isShuffledWell([2, 4, 8, 7, 3, 9, 1, 10, 6, 5]), true)\\nTest.assertEquals(isShuffledWell([9, 6, 1, 3, 10, 8, 5, 4, 7, 2]), true)\\nTest.assertEquals(isShuffledWell([2, 3, 9, 7, 10, 8, 4, 6, 1, 5]), true)\\nTest.assertEquals(isShuffledWell([3, 8, 5, 6, 2, 7, 4, 1, 10, 9]), true)\\nTest.assertEquals(isShuffledWell([1, 6, 4, 10, 3, 5, 7, 2, 9, 8]), true)\\nTest.assertEquals(isShuffledWell([1, 10, 8, 9, 2, 3, 4, 7, 5, 6]), false)\\nTest.assertEquals(isShuffledWell([5, 4, 3, 10, 9, 2, 7, 6, 8, 1]), false)\\nTest.assertEquals(isShuffledWell([4, 7, 8, 3, 5, 9, 2, 6, 1, 10]), true)\\nTest.assertEquals(isShuffledWell([5, 8, 6, 7, 3, 2, 4, 9, 10, 1]), true)\\nTest.assertEquals(isShuffledWell([3, 7, 1, 4, 8, 6, 5, 9, 10, 2]), true)\\nTest.assertEquals(isShuffledWell([10, 1, 9, 4, 3, 2, 7, 8, 6, 5]), false)\\nTest.assertEquals(isShuffledWell([3, 2, 6, 4, 1, 5, 8, 10, 9, 7]), true)\\nTest.assertEquals(isShuffledWell([1, 7, 8, 5, 9, 10, 4, 6, 2, 3]), true)\\nTest.assertEquals(isShuffledWell([2, 3, 9, 7, 5, 6, 8, 1, 10, 4]), true)\\nTest.assertEquals(isShuffledWell([1, 9, 3, 4, 6, 2, 10, 8, 7, 5]), true)\\nTest.assertEquals(isShuffledWell([1, 7, 8, 5, 10, 9, 6, 4, 2, 3]), true)\\nTest.assertEquals(isShuffledWell([2, 9, 10, 3, 5, 7, 6, 4, 8, 1]), true)\\nTest.assertEquals(isShuffledWell([6, 3, 10, 8, 5, 2, 1, 9, 7, 4]), true)\\nTest.assertEquals(isShuffledWell([6, 8, 7, 3, 4, 9, 5, 10, 1, 2]), true)\\nTest.assertEquals(isShuffledWell([8, 4, 9, 5, 6, 3, 1, 10, 7, 2]), true)\",\"language\":\"javascript\",\"summary\":\"Given an array of 10 numbers, return whether or not the array is shuffled sufficiently enough. In this case, if 3 or more numbers appear consecutively (ascending or descending), return false.\\n\\nExamples\\nisShuffledWell([1, 2, 3, 5, 8, 6, 9, 10, 7, 4]) ➞ false\\n// 1, 2, 3 appear consecutively\\n\\nisShuffledWell([3, 5, 1, 9, 8, 7, 6, 4, 2, 10]) ➞ false\\n// 9, 8, 7, 6 a\",\"tags\":[\"arrays\",\"validation\",\"numbers\",\"loops\"],\"timestamp\":{\"$date\":1580676680006},\"title\":\"Shuffled Properly?\",\"stats\":{\"completed\":{\"total\":53,\"ratings\":[2,2,2,2,2,2,1,2,3,2,2,2,2,2,2,2,2,3,2,4,3,1,3,2,3,3,3,3,2,2,3,2,3,3,4,3,1,2,3,1,2,1,2,3,3,1,2,3,1,2,3,3,3],\"rators\":[\"FHzvDACEZuAjRwL7v\",\"yjtdwc2AC4jA2RWtn\",\"8vvBFgSesJuLkxkwW\",\"CJnuSjyCBMTbTiibD\",\"jqbm8L6895JgAtZ6H\",\"5Zq3aGdvh4LHBvnJL\",\"yFjWRGvstfQYKfwfA\",\"2innwjWqxJHo4eRGh\",\"nB2zvS7Cwaz58JyfP\",\"2NJuDfSqdrF8kHHni\",\"pd8dm7sWLW9cY6dYW\",\"vThHLd8MLkmyJHox9\",\"FJsvM5yqKuK9yMk9P\",\"n5wubRfh6zh8QRymN\",\"978CFDwQoiXR6xcq5\",\"6BpBQnSGhzgvhXrEy\",\"u2HofTqtf9oY8WTAz\",\"EWn8w8P3nNh7knatY\",\"CvjWNHy65tvGKQfeP\",\"YER6iBcpJCuhgrYDN\",\"a777e8chPvJkY3tKa\",\"uAS9uKs8KQmp8uhqn\",\"Es4eX2stRpyoXeC7f\",\"mHT2bJb5SByfJ8yKS\",\"t9FFAu6ML9xuEtMsN\",\"r7mZLgpQWzRiGddL5\",\"65dbBZynphj53nXqA\",\"8raviPK67KKxzQWcF\",\"buX4mCQhtXCfBjeno\",\"ZcqshY58sGEEvgeaq\",\"p5ZshR8zhTqmdhKDc\",\"aEm3Wvj2rFYRL8Lrb\",\"QRv96jmNaYsWkxQEG\",\"xn7uGNKeAwPEkP9oA\",\"mrMLrHNkiergGqxPX\",\"AeGoKjpCRNZB4SnYJ\",\"DPi9QGLctq2y76KuE\",\"c7uBxu2rgY77H5d79\",\"CNc6rmwhbxkxEhHAp\",\"u9cRf5kvtpRB5ffB3\",\"srJ34BaybkQh3qRkM\",\"wJTDDTE3TrmSXKP4d\",\"NGvCPuMiAP3xrRLfB\",\"PPFmWzDiefzfekdcg\",\"M4vq8ATaS9Jg5X7iP\",\"RE4Mm9T6Q9uygAxGS\",\"J7d397iB5GuWRAMfg\",\"HpfaNWBYpnsQRAPQn\",\"jAKp3iwAnjny4foA5\",\"oDtGiNqDMHmhHE3J8\",\"Ya3eHgs8x3unZRLpb\",\"DfdkfQh8ctd2BaaRY\"],\"quality\":[5,5,3,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":4.5,\"family\":[{\"_id\":\"bPykwNHsoiLcjT7kw\",\"language\":\"cpp\"},{\"_id\":\"jx9hhCFHp92EpjB2J\",\"language\":\"javascript\"},{\"_id\":\"XALogvSrMr3LRwXPH\",\"language\":\"python3\"},{\"_id\":\"thryBoErsvF8yogu2\",\"language\":\"ruby\"}]}}"]