a["{\"msg\":\"result\",\"id\":\"1428\",\"result\":{\"_id\":\"ci4pyupzxrJmZydJ5\",\"author\":\"werdna\",\"authorId\":\"buX4mCQhtXCfBjeno\",\"code\":\"function isAntiArray(arr1, arr2) {\\n\\t\\n}\",\"difficulty\":2.15,\"familyId\":\"ZAJ7gKuRa8vXmZACY\",\"instructions\":\"Given two arrays, return whether the two arrays are opposites of each other. That means both arrays are comprised only from elements `a` and `b` and the occurrences of these elements are swapped between the two arrays.\\n\\n### Examples\\n```\\nisAntiArray([\\\"1\\\", \\\"0\\\", \\\"0\\\", \\\"1\\\"], [\\\"0\\\", \\\"1\\\", \\\"1\\\", \\\"0\\\"]) ➞ true\\n\\nisAntiArray([\\\"apples\\\", \\\"bananas\\\", \\\"bananas\\\"], [\\\"bananas\\\", \\\"apples\\\", \\\"apples\\\"]) ➞ true\\n\\nisAntiArray([3.14, True, 3.14], [3.14, False, 3.14]) ➞ false\\n```\\n\\n### Notes\\nAll tests will include only two different elements.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertEquals(isAntiArray([\\\"1\\\", \\\"0\\\", \\\"0\\\", \\\"1\\\"], [\\\"0\\\", \\\"1\\\", \\\"1\\\", \\\"0\\\"]), true)\\nTest.assertEquals(isAntiArray([\\\"apples\\\", \\\"bananas\\\", \\\"bananas\\\"], [\\\"bananas\\\", \\\"apples\\\", \\\"apples\\\"]), true)\\nTest.assertEquals(isAntiArray([3.14, true, 3.14], [3.14, false, 3.14]), false)\\nTest.assertEquals(isAntiArray([6.28, true, 6.28], [true, false, true]), false)\\nTest.assertEquals(isAntiArray(['int', 'str'], ['str', 'int']), true)\\nTest.assertEquals(isAntiArray([3.14, true, 3.14], [3.14, true, 3.14]), false)\\nTest.assertEquals(isAntiArray([121, 'float', 'float', 'float', 121, 'float'], ['float', 121, 121, 121, 'float', 121]), true)\\n\\n\\n// From Joshua Señoron's python challenge\",\"language\":\"javascript\",\"quality\":4.444444444444445,\"summary\":\"Given two arrays, return whether the two arrays are opposites of each other. That means both arrays are comprised only from elements a and b and the occurrences of these elements are swapped between the two arrays.\\n\\nExamples\\nisAntiArray([\\\"1\\\", \\\"0\\\", \\\"0\\\", \\\"1\\\"], [\\\"0\\\", \\\"1\\\", \\\"1\\\", \\\"0\\\"]) ➞ true\\n\\nisAntiArray([\\\"apples\\\", \\\"bananas\\\", \\\"bananas\\\"], [\\\"bananas\\\", \\\"apples\\\", \\\"appl\",\"tags\":[\"arrays\",\"loops\",\"validation\"],\"timestamp\":{\"$date\":1605827975357},\"title\":\"Anti Array\",\"stats\":{\"completed\":{\"total\":89,\"ratings\":[2,2,2,2,2,1,3,0,0,3,2,1,0,2,0,2,2,2,5,2,2,2,2,2,2,1,3,3,3,3,3,3,2,3,2,3,2,3,2,1,3,2,3,2,3,2,2,2,1,2,3,3,3,2,2,3,2,3,3,1,3,3,2,3,3,2,3,2,2,2,3,2,2,2,1,2,1,1,2,2],\"quality\":[3,4,5,5,5,4,4,5,5],\"rators\":[\"yjtdwc2AC4jA2RWtn\",\"bX6tpTCjwoi6XMMbK\",\"g4NCSxxHqHCGMpWwT\",\"zw7g7T8wE5R5CBhXr\",\"kp2ZbCewZJAbfd7xv\",\"mHT2bJb5SByfJ8yKS\",\"CNc6rmwhbxkxEhHAp\",\"QRv96jmNaYsWkxQEG\",\"AFfw7cGg83uYk2Miy\",\"3Gf7ikLijfoxabiPY\",\"m6qKkBY4aPWziyJTj\",\"Ya3eHgs8x3unZRLpb\",\"u9cRf5kvtpRB5ffB3\",\"8BJyXvRWcrvN3nttS\",\"eKSJgCaiy4ReJWXTg\",\"YSmLyP3eRhcFjJPzg\",\"evTTY9hwrtogaNxXn\",\"Yp7uvStL97cC9fKkY\",\"srJ34BaybkQh3qRkM\",\"nkH3HfJXLMNcBMM79\",\"pd8dm7sWLW9cY6dYW\",\"buX4mCQhtXCfBjeno\",\"fPxasTEmKTh9LkHQq\",\"atgkPKshmgykcobZg\",\"6vfjruFp8ZpRSi3AT\",\"PH32cNxBjrK4a28sn\",\"YP37e5mBT8oWJrpuN\",\"acHSYL6uQAgpgFMjp\",\"tNvaBJZcgwvypkQBi\",\"PTo9qt93YqGvL8fCa\",\"f3RAbWvE6uESq7KE5\",\"jd9sRTnsyeKpPggba\",\"8Z3dkvWBqtrMEE48N\",\"s8cQG38GLohCxfwkA\",\"irD7jrxvu9Ssx7MqS\",\"H46gRHmkdz2CRrGH9\",\"mDWNyaaQ9hvPCRzSd\",\"ZTTJprKDvFqKGew7c\",\"YA4D6v2ZJJBGERPPx\",\"JsRTAwWK7Nikj4sKA\",\"fS74N4FXqcPpmxAaE\",\"RtPhDuwmvWNHiBxmG\",\"Xk2g4CNFAnYcvxiSr\",\"o8F8jLRGk5eu6m6do\",\"ZcJm2kuqJnN3CXFaR\",\"CH53jGETBeJTummf3\",\"aavYnYfTkbjzaAByg\",\"NGvCPuMiAP3xrRLfB\",\"oDtGiNqDMHmhHE3J8\",\"RE4Mm9T6Q9uygAxGS\",\"65dbBZynphj53nXqA\",\"FJsvM5yqKuK9yMk9P\",\"FGEeCTorXbX3WvjFW\",\"QGjY3hgPYPMmMjc7j\",\"J7d397iB5GuWRAMfg\",\"tAF9Gf6PiGogbZuWs\",\"BKyhP7chJmfBvs6eC\",\"avmmW42xNbGbekDY4\",\"2ZRsXKpD5Kdi8C4iF\",\"wrJ38mm6asrr9sCYo\",\"en7JTZ8xWqv2YHhz4\",\"CBRx8seBYyYKqvMi3\",\"gDRg9a8hMrDefRkcB\",\"C8yR2sSnDkr8XfAjb\",\"Tk6q4mDrjt24ZFeSo\",\"YRJQebfpPSpsEntMG\",\"8spkaoEHNxmRzyjTh\",\"RvRSbZt95z7BJdh7p\",\"MHqLgQyxcg9Q7tFTg\",\"XdCcStvrRDTJAN5Zc\",\"RbBEqArJC6CJ3SqkL\",\"MWt6kziH2PQA8Pmbu\",\"oHX2Y5pPWyz5ib5Jm\",\"7i6b4u3CZWBFbKxaC\",\"T2wdGRjJkbzTLqD7d\",\"Y45skkww4B2iNKjoc\",\"ecEBGmi9dPBxyxfYz\",\"kLgKrinFRYcrJbvxS\",\"Ro48geFkzMGRiMPxG\",\"vwTy7y6pLbJpL7aqQ\",\"WnogMFYXoyvmBmGkm\",\"53w2RqWeHoPif9mjn\",\"JZ7hzwyx5hgqyACcK\",\"h4F99EoR6nue7yWzu\"]},\"flags\":1},\"editorId\":\"buX4mCQhtXCfBjeno\",\"family\":[{\"_id\":\"ci4pyupzxrJmZydJ5\",\"language\":\"javascript\"},{\"_id\":\"TDrfRh63jMCmqzGjv\",\"language\":\"python3\"},{\"_id\":\"PzGiNoyZKCtypYGXY\",\"language\":\"ruby\"}]}}"]