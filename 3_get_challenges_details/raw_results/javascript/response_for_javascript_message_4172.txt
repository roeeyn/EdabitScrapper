a["{\"msg\":\"result\",\"id\":\"840\",\"result\":{\"_id\":\"spA7xt9pND22mNuWS\",\"author\":\"gorosz\",\"authorId\":\"DLs5fZKpcH8mbjSZK\",\"code\":\"function printAllGroups() {\\n\\t\\n}\",\"difficulty\":1.5703703703703704,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"WqSWr53kfFKkEi2ja\",\"instructions\":\"Imagine a school that kids attend for 6 years. In each year, there are five groups started, marked with the letters _a, b, c, d, e_. For the first year, the groups are _1a, 1b, 1c, 1d, 1e_ and for the last year, the groups are _6a, 6b, 6c, 6d, 6e_.\\n\\nWrite a function that returns the groups in the school by year (as a string), separated with a comma and a space in the form of `\\\"1a, 1b, 1c, 1d, 1e, 2a, 2b (....) 5d, 5e, 6a, 6b, 6c, 6d, 6e\\\"`.\\n\\n### Examples\\n```\\nprintAllGroups() âžž \\\"1a, 1b, 1c, 1d, 1e, 2a, 2b, 2c, 2d, 2e, 3a, 3b, 3c, 3d, 3e, 4a, 4b, 4c, 4d, 4e, 5a, 5b, 5c, 5d, 5e, 6a, 6b, 6c, 6d, 6e \\\"\\n```\\n\\n### Notes\\nUse nested \\\"for\\\" loops to achieve this, as well as the array of `[\\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"d\\\", \\\"e\\\"]` groups.\",\"lab\":\"Test.assertNotEquals(printAllGroups(), \\\"1a, 1b, 1c, 1d, 1e, 2a, 2b, 2c, 2d, 2e, 3a, 3b, 3c, 3d, 3e, 4a, 4b, 4c, 4d, 4e, 5a, 5b, 5c, 5d, 5e, 6a, 6b, 6c, 6d, 6e, \\\", \\\"The was almost correct - but you added an unncessary \\\", \\\" after the last group.\\\")\\nTest.assertEquals(printAllGroups(), \\\"1a, 1b, 1c, 1d, 1e, 2a, 2b, 2c, 2d, 2e, 3a, 3b, 3c, 3d, 3e, 4a, 4b, 4c, 4d, 4e, 5a, 5b, 5c, 5d, 5e, 6a, 6b, 6c, 6d, 6e\\\", \\\"The output was not correct.\\\")\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,1,0,2,0,3,2,1,3,1,2,0,2,2,2,1,2,2,2,0,2,2,1,2,1,2,2,3,0,2,1,2,2,1,2,2,0,2,0,0,2,2,2,1,5,1,2,0,2,2,1,2,0,2,2,2,1,3,2,1,2,0,1,2,2,2,1,1,2,2,2,0,2,2,0,2,3,2,1,2,2,2,2,1,2,2,0,0,0,2,2,2,3,1,0,2,2,1,0,2,1,2,0,0,0,0,1,1,2,1,2,2,0,2,2,1,2,1,1,1,2,0,1,1,2,2,1,2,1,3,0,2,2,2,2,2,2,1,2,2,3,2,2,2,0,0,2,1,2,2,2,1,2,0,2,1,2,2,1,0,2,2,2,2,3,0,0,2,0,0,2,1,2,2,2,2,0,2,2,0,2,2,2,2,2,2,1,1,3,0,2,1,0,2,0,0,2,2,1,1,2,2,2,2,2,1,2,2,2,3,2,1,2,2,2,1,5,2,2,2,2,2,2,2,2,0,2,0,1,1,2,2,2,2,2,1,5,2,2,3,2,2,2,5,1,1,2,3,2,1,2,3,3,3,2,2,2,2,2,1,2,2,2,1,1,0],\"rators\":[\"n5wubRfh6zh8QRymN\",\"NWtQpbHeb9TxNeiyu\",\"7gZKfvwaeqsGKXMEN\",\"Q9KQomTTPBsrkAL6c\",\"QpJEX3iAL8o6acCgM\",\"RE4Mm9T6Q9uygAxGS\",\"65dbBZynphj53nXqA\",\"bKPvJHLQ3ovQLt9MJ\",\"bx3XnTCQytN99Kohi\",\"dDFJpK4pXCsQYuHmc\",\"wcjknenWdPRhrRScv\",\"2YMcxrHK3zNH7Tg3Y\",\"ZpYXenCR5BoHZJWXT\",\"6BpBQnSGhzgvhXrEy\",\"XKi8iZXBCHCaebSHh\",\"EWn8w8P3nNh7knatY\",\"WW35oDAmkg3qd73to\",\"2DfWvsPT8TPPNbQpt\",\"SDtZFL5NzAoCPofXk\",\"TMTH5LfMm9MrBFyEx\",\"2CvHJcA9aXt9pvZwA\",\"Akq3fQcPRgPrWfsye\",\"CJnuSjyCBMTbTiibD\",\"SGouZ8EfSBwn78AB3\",\"Y9Nz9yafaibz54W4o\",\"arYfZZakzSHEnsu4i\",\"538PKNyqMiCwLWYWK\",\"zw7g7T8wE5R5CBhXr\",\"wcRpnBcwEJCs88aHq\",\"E3fyZ23p26CcvHvuR\",\"AdbF9DPcEAAQQWCoc\",\"FHzvDACEZuAjRwL7v\",\"zgoq9MhrL2h75DAMA\",\"csRoCgJx5NBJzW8pX\",\"FiK2ruyH8KeHLAgoA\",\"XmfhnHPgFJ7xfbxZE\",\"jmKPGxuB2hRtE8egx\",\"rMa8q8fB7xyTN5R2e\",\"R4JQmeA6cYyfXbmLF\",\"gyB5wJihaSZCWKTCB\",\"RtHvzgR5xcr3huN5S\",\"fmLzKJTPWvtGRAaAN\",\"L9XxCiDxYJGcMQvxF\",\"e8ftyJ6nKRtZDwGWJ\",\"HrJtdRbvHHNh7tMMo\",\"gGETo2x9dY5TsWc2b\",\"5Zq3aGdvh4LHBvnJL\",\"rZfbfxCJbYsvhgKcn\",\"bZaYG295rSDvoMYZk\",\"yjtdwc2AC4jA2RWtn\",\"66gXXy97s3jxAeS9q\",\"h4jFmtbFn92eA4649\",\"dqWKb5RvGAXWJjZdQ\",\"rtbs4hJZ4SjSTmajK\",\"gSpcNJ8znvGGfWsQH\",\"FvWKuSqHdXZ7HM2sD\",\"FJsvM5yqKuK9yMk9P\",\"8brYFmvvJy6iyohvS\",\"AasGs8AeX9Lcb9xJn\",\"DTF9yzaGtXvB6t7zi\",\"nRht5DZA6YcH2kAo6\",\"qL2Qi6HDBJaSog262\",\"oERDdk8GeuQMDdNCK\",\"SNiJRRosrmSWssLj4\",\"3awyiorYPgCqqP7Sr\",\"6gPHMpkEP8JuHxzpd\",\"Y7xPTPKpNAEiM2jkH\",\"PJu3WcTpfRrvHfQiS\",\"mfjoiKdHNmtpSW6zu\",\"FJQH9eyzX84d9Fdmf\",\"aPX8qCXL6TmfpRfgy\",\"sbme4fRJjjBjYXRbY\",\"7Nz3GAqN3SMgSiyTT\",\"DHwbkbzYNpmkSFT7u\",\"SeK5BveQrRmDsxPwM\",\"N4NFyim2Y7Z7HAYsA\",\"H3yM3F3mukfdq9fit\",\"39JiAZzrxpBGFib5o\",\"xqpkjdADCbqtqJqLh\",\"BGQqaYbqYqmTo5Ehs\",\"oFckF5bB5dGBQKneS\",\"2tCCFm5iefjrRSaxv\",\"gzTs5oFrfZwh3Kfze\",\"BdvdJYwHZr7JpkHsn\",\"vThHLd8MLkmyJHox9\",\"mHT2bJb5SByfJ8yKS\",\"8BFSTCnoe2QggN64c\",\"xfxkLoQsbZBonmBGp\",\"zd9FLSzsGz3evKafy\",\"XRRZ5kd8PvAQYtA4s\",\"m4vwHoRAybAhCmFu7\",\"mHaHudYExvi45DSRf\",\"WdxWWwuM5PcZbTgxY\",\"zTZtM9jRsu8eXie6s\",\"bzm5WayBjwad5jhdR\",\"ih2aGaqkMaagTgyL2\",\"Gx9obhqfXPqYuC6Jd\",\"9gEWz76H8KmhN4yJj\",\"8Z3dkvWBqtrMEE48N\",\"m3CrjAsu7MrbWAjhA\",\"f9gsQxwrJGBhyF5FF\",\"AXcnPX68zdMiLNSmu\",\"cp3X8hk8yNME7qoD9\",\"Df7GtT2JwMxJGASvW\",\"Jh6sPsgj8yHy95joL\",\"Wmq8QjysTQYskk4m7\",\"REzoyhN6bGzxwiR3P\",\"zAMR5yM6wpzfE3a4S\",\"3aZvfgr2H2WF8Yog2\",\"ygNnCnmzZfy3r2m6w\",\"REWERn3LH8vj9AnLh\",\"7Mzww5m6cBaA78JQr\",\"xMxdp5oCxmeuYxhpa\",\"g5noFWaoRtZNcEEAW\",\"294HEYhNpHusCRBXQ\",\"9XnGoq9Tv6ut3zTtH\",\"oSKuxjH2N6emtz4GY\",\"M9zJkCtveFNMX8aZE\",\"sutzxu4yTueBKE9Qp\",\"5YCX58nhHT8oRCHyy\",\"zsNp9fk9BGDBiHr4G\",\"YER6iBcpJCuhgrYDN\",\"7zysDWmX6xXejYcux\",\"MEZNjeGd7APtvA3SL\",\"pi76g3eRpnKrhee2a\",\"7JCLyrrY6JYGpocac\",\"cJwiiiX7qwSvgtmk8\",\"k5TGxBtLi9BXxeChT\",\"Kx5kh7D6QPSaC3mzM\",\"eANW47mfA359Y6JyP\",\"vWhgrr5oem8WtKdxm\",\"9Pzg45NEiRXhLtLh3\",\"tPtz279rzBX8kCWMr\",\"E6DBfkTgHuPsDWdG8\",\"9t5uWDMaPBjMRS3hi\",\"vtHbevf2tHqe6mRxX\",\"EPeA837HC2cXj3PEy\",\"jqbm8L6895JgAtZ6H\",\"eomLS3wh6tQPN8jtH\",\"R35tqE5etfTYTfmGr\",\"a777e8chPvJkY3tKa\",\"Gc2bmsof5vD2Hsgqv\",\"YtGYxpMxbrHLFK8nq\",\"4TuceAZ8oTDzsjhir\",\"eQXwk5zGckM8tCWYH\",\"QGshpArSs3bHZZR7W\",\"ipiC2qPhKZWsAouJf\",\"7wtuhPesfhcYsfZaZ\",\"Lzj3w7QjdzikynsGG\",\"GJWSWfZ9rPeia7H2g\",\"RGN3QTb5LXj4ZPPkj\",\"tAF9Gf6PiGogbZuWs\",\"PAzNgJF54C2mYPkR9\",\"733qgZ7ZSSSrzbXGw\",\"Q75jsoXjhTXJRrw8z\",\"BSkoT6o2GweZkqXbc\",\"mzqyoc3AzZumbr2kA\",\"svpXWhsSLLzYR8Rz4\",\"inbiBEY2tizFwkN84\",\"eFjGhq7C7bBKXjT6X\",\"ij9YRJvZz6WbqcGXS\",\"BdnE4RS5puoxo92mA\",\"4nFXeGakoCjm5GXYa\",\"Wv9v7fHb8umujfg2j\",\"jcPZ5ySXseCB7Ec3x\",\"oM5uLqsaNZu9taNXh\",\"2d7ToTiuvHtd6WnGx\",\"moe6ztrsNzFymC3A7\",\"WKkWj5KoNysLpZ2hJ\",\"sn9HmYyS3FStbca3b\",\"nkH3HfJXLMNcBMM79\",\"4ntYzGHHBgqf58udP\",\"bX6tpTCjwoi6XMMbK\",\"ub8rqqsdqowCrcxPi\",\"uDL732cxhJPfvnyn5\",\"QRoAN6gdwipTo7fwD\",\"oiJKpbCfjmNW625ya\",\"9ADYC3ogYkE5JdjTn\",\"PMtk6T2F9eK95g23d\",\"eoepTq5ES5tfgY9XT\",\"jkumHyXfMkhGcPgqC\",\"vAh63eGRwkuJtoP8v\",\"ZtniSFrgec4oj6Pxm\",\"jnyub52Fi79drGvow\",\"2zKQWLmEBw8FBs4ZL\",\"QRv96jmNaYsWkxQEG\",\"E2hpke7mHxAWsw5t9\",\"s9qcJASB9WKPWaQzi\",\"coTsXQZW59EjCAB9d\",\"wrxHLcdBEri4cyK6W\",\"mwDdQwbZN6tXwAbBA\",\"ttuGK7od8simjgmCJ\",\"evTTY9hwrtogaNxXn\",\"mwg8jvMHHmQiQRrbr\",\"Po3v3dHCk6wYGKMwi\",\"YXqaqjujocvg2gX4k\",\"i5QeAsrM4m6hzPTku\",\"u9cRf5kvtpRB5ffB3\",\"oyB4Wr4EeZnoDaa8B\",\"Nb6LYPoQP6KJZt8mz\",\"34bE6mric984YYLZQ\",\"LCn6qz2GoMr5577Rd\",\"kp2ZbCewZJAbfd7xv\",\"TSrHMxuLpRMiEjyAg\",\"FDqfqHn8ww9QoSFhb\",\"it4R7mNQ7MTvJkLDm\",\"3WtHp4MBzciz4AE8M\",\"XAGJuJRsgxZNiAN9C\",\"Bvz5wBYGYwBDQP7KW\",\"Ya3eHgs8x3unZRLpb\",\"aEm3Wvj2rFYRL8Lrb\",\"MbbySGQmkzbjg373M\",\"v2w9GN4jHP2fgYdeE\",\"Kntd2rSgWYWp8r4sP\",\"XkPEb97Tnnvvf5fAY\",\"j4JYXWLmkTDH6iqHr\",\"qWR7eXxBiNee22A5u\",\"75NY7vqimaATzRdAX\",\"g4NCSxxHqHCGMpWwT\",\"pGh7WykiPe26fHJYv\",\"QYNjAji97bn9BBi6p\",\"pdGuqmMyeN4wZaWwv\",\"tseyDEv9zaHBMvLL3\",\"AFfw7cGg83uYk2Miy\",\"vewKwcMeGuk3p3MsN\",\"pfXChwNvwAMWPXZRu\",\"8BJyXvRWcrvN3nttS\",\"e9Cknxbx6o7Nb6REs\",\"r7mZLgpQWzRiGddL5\",\"vGKxRcDYDsXzTQuEQ\",\"Y9fRBuLbZFTAk7jsf\",\"YmMgWhzhHhQLmGGgH\",\"2Ni3PzJAc5fAhqBkb\",\"pWJWQDhqzDSmfaFam\",\"QLNKahfd55GDSsN28\",\"bBRzXPk7u95YuDWEL\",\"Yp7uvStL97cC9fKkY\",\"jd9sRTnsyeKpPggba\",\"Es4eX2stRpyoXeC7f\",\"3Gf7ikLijfoxabiPY\",\"m6qKkBY4aPWziyJTj\",\"JuGJgYuj4eHc5xdaz\",\"2Qk2mFu9HBFzrB24i\",\"YLTZRjM78Wi9J9Re4\",\"f3RAbWvE6uESq7KE5\",\"hCocXH3CwMH29whYQ\",\"J7d397iB5GuWRAMfg\",\"XujK3rHd3JcM9TLJy\",\"cgCQDs9i7yChKeAjE\",\"M4vq8ATaS9Jg5X7iP\",\"nn3NLB8oCZXxKkGHe\",\"jyCByAZwu576xDwEL\",\"K45zPJxsABuA3WSyj\",\"k6QB6fzbj4LsWktRL\",\"wJTDDTE3TrmSXKP4d\",\"TtrXnGzi9MyhLvWiz\",\"R9uaMzX2Y4ND8Cosm\",\"srJ34BaybkQh3qRkM\",\"LwD3CyYSiBfg3mA4r\",\"DPi9QGLctq2y76KuE\",\"PTo9qt93YqGvL8fCa\",\"QjGNkRM3Xc78yShJN\",\"NGvCPuMiAP3xrRLfB\",\"N3CNtWZz4ovJfH9Aw\",\"nBJve5CzG6WAw7WFQ\",\"YSmLyP3eRhcFjJPzg\",\"rpNNPWzdFCc9TzKMz\",\"sQ2Yjbm4LqQK7dYjk\",\"mpLFbFKjY6u3nsDMv\",\"gXTAie79kiw28tx5u\",\"oDtGiNqDMHmhHE3J8\",\"jyoLggHk8xQKZuoQC\",\"pPpmP7xeJzGgK362R\",\"bfYmA3LMvhSrK59cn\",\"9HZbxzkzgz4CvePtv\",\"jRkj5kY5FjCJzGuLM\",\"ZKuwzkssrSsDGNPr5\",\"rPsSEYqwmttMPEuvo\",\"hXtCbYyFMiqrJuhhx\",\"uuuB2x6o5WzpwACwn\",\"MgphntBbzWHZgEQcs\",\"nfpssucZEcresgKxm\",\"pPc6rp4PkNZA9Jsia\",\"thDcTqErXt6Le6qcr\",\"CH53jGETBeJTummf3\",\"z47JaNrQMgvuPx5HE\",\"FGEeCTorXbX3WvjFW\",\"2LHgGFKtZJKDjMxCy\",\"HCfkcKnPs9mrJojdG\",\"mJx5kJyzJ4rjTgw7L\",\"uxKGACwmZ6FNZsMwE\",\"4WYjScmBWK9eXRzvd\",\"WnogMFYXoyvmBmGkm\",\"qAEumdjLRx2AGAmzw\"],\"total\":309,\"quality\":[5,5,5,5,4,5,5,4,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5]},\"flags\":0},\"subscribers\":[\"DLs5fZKpcH8mbjSZK\"],\"summary\":\"Imagine a school that kids attend for 6 years. In each year, there are five groups started, marked with the letters a, b, c, d, e. For the first year, the groups are 1a, 1b, 1c, 1d, 1e and for the last year, the groups are 6a, 6b, 6c, 6d, 6e.\\n\\nWrite a function that returns the groups in the school by year (as a string), separated with a comma and a space in th\",\"tags\":[\"loops\",\"language_fundamentals\"],\"timestamp\":{\"$date\":1565271847452},\"title\":\"Intro to Nested Loops\",\"isHidden\":false,\"quality\":4.896551724137931,\"family\":[{\"_id\":\"spA7xt9pND22mNuWS\",\"language\":\"javascript\"},{\"_id\":\"YnsBcniRG9k77SSvA\",\"language\":\"python3\"}]}}"]