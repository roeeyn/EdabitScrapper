a["{\"msg\":\"result\",\"id\":\"1855\",\"result\":{\"_id\":\"KLyD6Ce6KkA2364sH\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"function equalCount (str, names) {\\n\\t\\n}\",\"difficulty\":2.6666666666666665,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"JZ37wxrnDYxec3MvP\",\"instructions\":\"Create a function that counts the embedded names in the string and determines the equality. The names are embedded in a string of mixed special symbols and characters. The names to be counted to are adjoined with the ampersand symbol `&` and as the second parameter. See the following examples for more details.\\n\\n### Examples\\n```\\nequalCount(\\\"Peter!@#$Paul&*#Peter!--@|#$Paul#$Peter@|Paul$%^^Peter++Paul%$%^Peter++Paul#$#$#Peter@|Paul\\\", \\\"Peter&Paul\\\")\\n➞ {\\\"Peter\\\":6, \\\"Paul\\\": 6, \\\"equality\\\": true}\\n\\nequalCount(\\\"Elliot!@#$Sam!--@|#$Elliot@|Sam++Elliot$%^Elliot@|Sam!@#Elliot!@#$Sam!--@|#$Elliot\\\", \\\"Sam&Elliot\\\")\\n➞ {\\\"Sam\\\": 4, \\\"Elliot\\\": 6, \\\"equality\\\": false, \\\"difference\\\": 2}\\n// \\\"difference\\\" key is added to the object if count is not equal.\\n\\nequalCount(\\\"Tim!@#$Kit&&*#Tim!--@|#$Kit#$%Tim@|Kit$%^^Tim++Kit%$%^Tim++Kit#$#$#Tim@|Kit\\\", \\\"Ken&Tom\\\")\\n➞ {\\\"Ken\\\": 0, \\\"Tom\\\": 0, \\\"equality\\\": true}\\n```\\n\\n### Notes\\nMake sure to return the result as an **object** with the corresponding keys seen in the above examples and the `difference` key when needed.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"let strVector = [\\n  [\\\"Peter!@#$Paul&*#Peter!--@|#$Paul#$Peter@|Paul$%^^Peter++Paul%$%^Peter++Paul#$#$#Peter@|Paul\\\", \\\"Peter&Paul\\\"],\\n  [\\\"Elliot!@#$Sam!--@|#$Elliot@|Sam++Elliot$%^Elliot@|Sam!@#Elliot!@#$Sam!--@|#$Elliot\\\", \\\"Sam&Elliot\\\"],\\n  [\\\"Tim!@#$Kit&&*#Tim!--@|#$Kit#$%Tim@|Kit$%^^Tim++Kit%$%^Tim++Kit#$#$#Tim@|Kit\\\", \\\"Ken&Tom\\\"],\\n  [\\\"Barnes!@#$Noble@|Barnes++Noble$%^Barnes!--@|#$Noble!@#$Barnes@|Noble!@#$Barnes++Noble\\\", \\\"Barnes&Noble\\\"],\\n  [\\\"Dick!@#$Harry!--@|#$Dick@|Harry++Dick$%^Harry-$%^Dick!@#Harry!@#Dick!@*Harry\\\", \\\"Dick&Harry\\\"],\\n  [\\\"$#%#%Henry+++&&***Hank!@#$%^Henry)(*&^%$)Henry$^$%^%$Henry+Hank$Henry%^$^Hank%^Henry\\\", \\\"Henry&Hank\\\"],\\n  [\\\"$$$^Mary+++&&***John&###@@Mary|Mary;$$John:Mary*John--#@John^&&)(()\\\", \\\"John&Mary\\\"]\\n]\\nlet objRes = [\\n  {\\\"Peter\\\": 6, \\\"Paul\\\": 6, \\\"equality\\\": true},\\n  {\\\"Sam\\\": 4, \\\"Elliot\\\": 6, \\\"equality\\\": false, \\\"difference\\\": 2},\\n  {\\\"Ken\\\": 0, \\\"Tom\\\": 0, \\\"equality\\\": true},\\n  {\\\"Barnes\\\": 5, \\\"Noble\\\": 5, \\\"equality\\\": true},\\n  {\\\"Dick\\\": 5, \\\"Harry\\\": 5, \\\"equality\\\": true},\\n  {\\\"Henry\\\": 6, \\\"Hank\\\": 3, \\\"equality\\\": false, \\\"difference\\\": 3},\\n  {\\\"John\\\": 4,\\\"Mary\\\": 4, \\\"equality\\\": true}\\n]\\nfor (let i in strVector){\\n  Test.assertSimilar(equalCount(...strVector[i]), objRes[i])\\n}\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[3,3,3,3,3,3,2,1,2,3,4,2,2,3,3,3,2,4,3,5,3,3,3,2,3,0,3,2,0,2,3,2,1,3,2,3,3,1,3,3,3,3,0,4,2,3,3,3,4,4,4,3,3,3,3,2,3],\"rators\":[\"a777e8chPvJkY3tKa\",\"mHT2bJb5SByfJ8yKS\",\"yjtdwc2AC4jA2RWtn\",\"aEm3Wvj2rFYRL8Lrb\",\"ZcqshY58sGEEvgeaq\",\"Xk2g4CNFAnYcvxiSr\",\"kp2ZbCewZJAbfd7xv\",\"rC7kdm3SsSX9udEQk\",\"M4vq8ATaS9Jg5X7iP\",\"65dbBZynphj53nXqA\",\"eFjGhq7C7bBKXjT6X\",\"n5wubRfh6zh8QRymN\",\"4Xv87xmdSnpYhi8hz\",\"ttuGK7od8simjgmCJ\",\"bXaGdBM8FBLHf7N6Y\",\"buX4mCQhtXCfBjeno\",\"RFqRp2Bou8KXupQkt\",\"XtZfZuXwcaivjtS3T\",\"YLTZRjM78Wi9J9Re4\",\"vGKxRcDYDsXzTQuEQ\",\"iyNqxcRq2za3p2D2c\",\"ftXLsTaA7yHmhuEsY\",\"QRv96jmNaYsWkxQEG\",\"sNcDN3s3rH9wcNg5n\",\"PH32cNxBjrK4a28sn\",\"TtrXnGzi9MyhLvWiz\",\"s678Wirfor5uYL5T6\",\"RKKuw76K7sRBMouKq\",\"nkH3HfJXLMNcBMM79\",\"8BJyXvRWcrvN3nttS\",\"ax6vpPEaXjhRqqpHf\",\"4pBi6y2TtuyoLFunq\",\"ZTTJprKDvFqKGew7c\",\"9gEWz76H8KmhN4yJj\",\"sN2JyFeJCwfwwHPwF\",\"ttsFGoiEAn47yWpNw\",\"zEnpx8aHwbHrGcJ7P\",\"ShrXg4RHgnyFjzJ8w\",\"h4jFmtbFn92eA4649\",\"5nhmyqLy8M2Yn2HMR\",\"xsDyJstYoBZRS8pJH\",\"E6DBfkTgHuPsDWdG8\",\"5NGxHLcQ8Af2RJ4TN\",\"6PWQJT7Ma3Sg97fHA\",\"GqXjHuGSAeuWhcBLJ\",\"SdEQsNapyg24YATuh\",\"oDtGiNqDMHmhHE3J8\",\"ZcJm2kuqJnN3CXFaR\",\"w4uwcPc6SGDS4XEGM\",\"RE4Mm9T6Q9uygAxGS\",\"RbBEqArJC6CJ3SqkL\",\"fYb5FSoEXexprjDXA\",\"hL8y3oooXeL2Sii4o\"],\"total\":56,\"quality\":[5]},\"flags\":0},\"summary\":\"Create a function that counts the embedded names in the string and determines the equality. The names are embedded in a string of mixed special symbols and characters. The names to be counted to are adjoined with the ampersand symbol & and as the second parameter. See the following examples for more details.\\n\\nExamples\\nequalCount(\\\"Peter!@#$Paul&*#Peter!--@|#$Pa\",\"tags\":[\"strings\",\"objects\"],\"timestamp\":{\"$date\":1594922399295},\"title\":\"Name Count Equality\",\"quality\":5,\"family\":[{\"_id\":\"KLyD6Ce6KkA2364sH\",\"language\":\"javascript\"},{\"_id\":\"6pdkWtD3ME22P78xb\",\"language\":\"python3\"}]}}"]