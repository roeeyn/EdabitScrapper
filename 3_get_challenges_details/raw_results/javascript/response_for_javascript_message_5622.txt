a["{\"msg\":\"result\",\"id\":\"1560\",\"result\":{\"_id\":\"sWo3y2WgtGDDtRtrB\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"function minTurns(current, target) {\\n\\t\\n}\",\"difficulty\":2.230769230769231,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"LZR835J2FrDyKvTqD\",\"instructions\":\"A briefcase has a 4-digit **rolling-lock**. Each digit is a number from `0-9` that can be rolled either forwards or backwards.\\n\\nCreate a function that returns the smallest number of turns it takes to transform the lock from the current combination to the target combination. One turn is equivalent to rolling a number forwards or backwards by one.\\n\\nTo illustrate:\\n\\n- **current-lock**: 4089\\n- **target-lock**: 5672\\n\\nWhat is the minimum number of turns it takes to transform `4089` to `5672`? \\n\\n``` \\n4 ➞ 5\\n4 ➞ 5  // Forward Turns: 1 <- Min\\n4 ➞ 3 ➞ 2 ➞ 1 ➞ 0 ➞ 9 ➞ 8 ➞ 7 ➞ 6 ➞ 5  // Backward Turns: 9\\n\\n0 ➞ 6\\n0 ➞ 1 ➞ 2 ➞ 3 ➞ 4 ➞ 5 ➞ 6  // Forward Turns: 6\\n0 ➞ 9 ➞ 8 ➞ 7 ➞ 6  // Backward Turns: 4  <- Min\\n\\n8 ➞ 7\\n8 ➞ 9 ➞ 0 ➞ 1 ➞ 2 ➞ 3 ➞ 4 ➞ 5 ➞ 6 ➞ 7  // Forward Turns: 9\\n8 ➞ 7  // Backward Turns: 1  <- Min\\n\\n9 ➞ 2\\n9 ➞ 0 ➞ 1 ➞ 2  // Forward Turns: 3  <- Min\\n9 ➞ 8 ➞ 7 ➞ 6 ➞ 5 ➞ 4 ➞ 3 ➞ 2  // Backward Turns: 7\\n```\\nIt takes `1 + 4 + 1 + 3 = 9` minimum turns to change the lock from `4089` to `5672`. \\n\\n### Examples\\n```\\nminTurns(\\\"4089\\\", \\\"5672\\\") ➞ 9\\n\\nminTurns(\\\"1111\\\", \\\"1100\\\") ➞ 2\\n\\nminTurns(\\\"2391\\\", \\\"4984\\\") ➞ 10\\n```\\n\\n### Notes\\n- Both locks are in string format.\\n- A `9` rolls forward to `0`, and a `0` rolls backwards to a `9`.\",\"lab\":\"Test.assertEquals(minTurns(\\\"4089\\\", \\\"5672\\\"), 9)\\nTest.assertEquals(minTurns(\\\"1732\\\", \\\"4444\\\"), 9)\\nTest.assertEquals(minTurns(\\\"7109\\\", \\\"2332\\\"), 13)\\nTest.assertEquals(minTurns(\\\"2391\\\", \\\"4984\\\"), 10)\\nTest.assertEquals(minTurns(\\\"1234\\\", \\\"3456\\\"), 8)\\nTest.assertEquals(minTurns(\\\"1111\\\", \\\"1100\\\"), 2)\\nTest.assertEquals(minTurns(\\\"1111\\\", \\\"0000\\\"), 4)\\nTest.assertEquals(minTurns(\\\"0000\\\", \\\"9999\\\"), 4)\",\"language\":\"javascript\",\"summary\":\"A briefcase has a 4-digit rolling-lock. Each digit is a number from 0-9 that can be rolled either forwards or backwards.\\n\\nCreate a function that returns the smallest number of turns it takes to transform the lock from the current combination to the target combination. One turn is equivalent to rolling a number forwards or backwards by one.\\n\\nTo illustrate:\\n\\ncur\",\"tags\":[\"arrays\",\"higher_order_functions\"],\"timestamp\":{\"$date\":1553200630704},\"title\":\"Briefcase Lock\",\"stats\":{\"completed\":{\"total\":88,\"ratings\":[2,2,2,2,2,2,2,2,2,2,2,0,3,2,2,2,2,1,3,0,1,2,3,3,3,2,3,3,1,3,2,3,3,2,2,2,3,1,3,2,2,2,2,3,1,2,3,2,2,0,2,1,0,3,3,3,4,2,3,2,2,2,0,3,4,2,3,3,3,3,3,3,3,3,3,1,3,1,3,3,3,2,3,0,2,3,2,3,3,2,3],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"65dbBZynphj53nXqA\",\"SDtZFL5NzAoCPofXk\",\"2innwjWqxJHo4eRGh\",\"LTG2xsfhWc9bkQZX2\",\"2NJuDfSqdrF8kHHni\",\"Jn4CucnvnMe3pmguA\",\"QyB2oA8nWb4TrrWjC\",\"uGiNmPwyRkCo9a25t\",\"zrhBaJCLqAv9xGsEm\",\"h4jFmtbFn92eA4649\",\"bbbpNxM3hgGMCqMn8\",\"7iixydFijHfWxkuBh\",\"BGfdMP555CegvzLus\",\"4kLhHM6cFjt3qbnDz\",\"CJnuSjyCBMTbTiibD\",\"zkk54Gr7LG33b57z2\",\"8cnfbuDCcCsE9jpKZ\",\"8xuMMGF7fyQWL2fKH\",\"Akq3fQcPRgPrWfsye\",\"bjn5DTzzaWCP5BDgX\",\"dgwRvPi62zKghWiHb\",\"uhP3Z8KkPxySxn2n7\",\"S7R7voZRxnWjCn8pi\",\"n5wubRfh6zh8QRymN\",\"EjPLq3QSJdGQFJdgW\",\"54Ka62KytXRsrLPhZ\",\"GCxj7RJCeWYNxj8oQ\",\"rSJGLYSXMuu3RWjun\",\"EWn8w8P3nNh7knatY\",\"R5iq8CcAMQpq5irrX\",\"h8oHrjSdw2iwKYWpk\",\"zgoq9MhrL2h75DAMA\",\"N9geZutANr2DNb2SM\",\"gyB5wJihaSZCWKTCB\",\"ydEdzuCCZt4yny9Rq\",\"hKfSmTEotbEjgPbux\",\"SgE5Dnm3f8eSBdDCg\",\"cTsLoz56NpQTTCCom\",\"yjtdwc2AC4jA2RWtn\",\"R4JQmeA6cYyfXbmLF\",\"5Zq3aGdvh4LHBvnJL\",\"Q9KQomTTPBsrkAL6c\",\"zw7g7T8wE5R5CBhXr\",\"FJsvM5yqKuK9yMk9P\",\"2agLTPm78yHhsprGv\",\"6BpBQnSGhzgvhXrEy\",\"eomLS3wh6tQPN8jtH\",\"AasGs8AeX9Lcb9xJn\",\"XKi8iZXBCHCaebSHh\",\"faKt2ad3GNGH2gYB9\",\"mHT2bJb5SByfJ8yKS\",\"o9Bj4dXiHwtDMTcLc\",\"DHwbkbzYNpmkSFT7u\",\"RE4Mm9T6Q9uygAxGS\",\"Czph6ZM3JY2t9f2jD\",\"Df7GtT2JwMxJGASvW\",\"g5noFWaoRtZNcEEAW\",\"xsDyJstYoBZRS8pJH\",\"ngCPLLG8nvvG7TPFN\",\"vewKwcMeGuk3p3MsN\",\"YER6iBcpJCuhgrYDN\",\"a777e8chPvJkY3tKa\",\"GzrtbWwo7hyDTtRYC\",\"ZcqshY58sGEEvgeaq\",\"buX4mCQhtXCfBjeno\",\"E2hpke7mHxAWsw5t9\",\"p5ZshR8zhTqmdhKDc\",\"aEm3Wvj2rFYRL8Lrb\",\"XtZfZuXwcaivjtS3T\",\"QRv96jmNaYsWkxQEG\",\"4Xv87xmdSnpYhi8hz\",\"tAF9Gf6PiGogbZuWs\",\"kp2ZbCewZJAbfd7xv\",\"nphNJCcuiQKh8bNHq\",\"CNc6rmwhbxkxEhHAp\",\"DPi9QGLctq2y76KuE\",\"g4NCSxxHqHCGMpWwT\",\"M4vq8ATaS9Jg5X7iP\",\"8BJyXvRWcrvN3nttS\",\"ftXLsTaA7yHmhuEsY\",\"wJTDDTE3TrmSXKP4d\",\"AFfw7cGg83uYk2Miy\",\"NGvCPuMiAP3xrRLfB\",\"oDtGiNqDMHmhHE3J8\",\"oS8RbMKnP2RQyKh2A\",\"Ya3eHgs8x3unZRLpb\"],\"quality\":[5,5,3,5,5]},\"tests\":{\"score\":0,\"voters\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"voters\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"isHidden\":false,\"quality\":4.6,\"family\":[{\"_id\":\"oKwYyH4Xk4cktFodW\",\"language\":\"cpp\"},{\"_id\":\"hp4extG9YzmZWGsrw\",\"language\":\"csharp\"},{\"_id\":\"sWo3y2WgtGDDtRtrB\",\"language\":\"javascript\"},{\"_id\":\"pboAYDuTv7ziJgtxC\",\"language\":\"python3\"},{\"_id\":\"F2RGDkfqYgY9c3G4e\",\"language\":\"ruby\"},{\"_id\":\"tM4f8G39ipX2Yo76Y\",\"language\":\"swift\"}]}}"]