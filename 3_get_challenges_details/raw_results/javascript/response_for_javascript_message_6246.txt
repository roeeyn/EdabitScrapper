a["{\"msg\":\"result\",\"id\":\"1869\",\"result\":{\"_id\":\"3q6tbKL8BS4CgaR4c\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"function addStrNums(num1, num2) {\\n\\t\\n}\",\"difficulty\":2.6794871794871793,\"familyId\":\"fko6mjjBJyW2PtYAC\",\"instructions\":\"Write a function that adds two numbers. The catch, however, is that the numbers will be strings.\\n\\n### Examples\\n```\\naddStrNums(\\\"4\\\", \\\"5\\\") ➞ \\\"9\\\"\\n\\naddStrNums(\\\"abcdefg\\\", \\\"3\\\") ➞ \\\"-1\\\"\\n\\naddStrNums(\\\"1\\\", \\\"\\\") ➞ \\\"1\\\"\\n\\naddStrNums(\\\"1874682736267235927359283579235789257\\\", \\\"32652983572985729\\\") ➞ \\\"1874682736267235927391936562808774986\\\"\\n```\\n\\n### Notes\\n- If there are any non-numerical characters, return `\\\"-1\\\"`.\\n- An empty parameter should be treated as `\\\"0\\\"`.\\n- Your function should be able to add any size number.\\n- Your function doesn't have to add negative numbers.\\n- Zeros at the beginning of the string should be trimmed.\",\"lab\":\"Test.assertEquals(addStrNums(\\\"\\\", \\\"\\\"), \\\"0\\\")\\nTest.assertEquals(addStrNums(\\\"1\\\", \\\"01\\\"), \\\"2\\\")\\nTest.assertEquals(addStrNums(\\\"1\\\",\\\"\\\"), \\\"1\\\")\\nTest.assertEquals(addStrNums(\\\"198547982570192857109283570192837509218375091283750192835710298357019237509125710925710923759012375901275901285701925712035712983571092562945875310962518235712385971230956127856123571209358712905610923587102395716258125612095710298\\\",\\\"510298570192857910827519027510982561875691857120958371029586187585198273501982573091857091875901875809175091659812750918275091875091857918265901265918659816591750981750981759817598175089175891720570129571098758901750917501975\\\"), \\\"198548492868763049967194397711865020200936966975607313794081327943206822707399212908284015616104251803151710460793585524786631258662967654803793576863784154372202562981937878837883388807533802081502644157231966815017027363013212273\\\")\\nTest.assertEquals(addStrNums(\\\"0000001\\\", \\\"020006\\\"), \\\"20007\\\")\\nTest.assertEquals(addStrNums(\\\"1325123515s238579875987\\\", \\\"38698592523525325\\\"), \\\"-1\\\")\\nTest.assertEquals(addStrNums(\\\"123456788654323456543456765432345678843234567150666666666666612735980127350918265309182653091635916258165871265087126121827562875835613875612875360182653127560192756012975608172560817653081760126578132617265192561923051397585261519826512951827401928470192864312873561298357120985710927561287356129857120851235612835712935612385971230598612035912635189273651289357120983571298035612836518237481235098172350891623508912375981206598127539128035619286350912836509123856710298560918236590138257013257219857182935681923569032656109851629851605109283560192863598126359125710982375918237598125091256012893570128357128935609128350192873501928365019283750129837401928374019283740189237401298374019823740912365012381075109823650912837501923561023650123659812375091862350912735\\\", \\\"1023570192835719836509165309156091653091875309312365123569182365123051235710298365109236501928365019283650291836501928365091256109823560921865091263509126509126350921568091265309128653091263590165309160912653809126510560165016501650650165016835610285172356137845623745623592835692836592837569283756832795693827564\\\"), \\\"123456788654323456543456765432345678843234567150666666666666612735980127350918265309182653091635916258165871265087126121827562875835613875612875360182653127560192756012975608172560817653081760126578132617265192561923051397585261519826512951827401928470192864312873561298357120985710927561287356129857120851235612835712935612385971230598612035912635189273651289357120983571298035612836518237481235098172350891623508912375981206598127539128035619286350913860079316692430135070083545746229910105132529169548059251105934155707345561928216714345785488557882881776650962212910741009493707948652177877984833637483638061960049918284138811057018110547340295146562841027828410250749402417800024669988757747975297553431247669274658461094759253860242961229096131924658044740299\\\")\",\"language\":\"javascript\",\"summary\":\"Write a function that adds two numbers. The catch, however, is that the numbers will be strings.\\n\\nExamples\\naddStrNums(\\\"4\\\", \\\"5\\\") ➞ \\\"9\\\"\\n\\naddStrNums(\\\"abcdefg\\\", \\\"3\\\") ➞ \\\"-1\\\"\\n\\naddStrNums(\\\"1\\\", \\\"\\\") ➞ \\\"1\\\"\\n\\naddStrNums(\\\"1874682736267235927359283579235789257\\\", \\\"32652983572985729\\\") ➞ \\\"1874682736267235927391936562808774986\\\"\\n\\nNotes\\nIf there are any non-numerical characters,\",\"tags\":[\"strings\",\"numbers\",\"language_fundamentals\",\"math\"],\"timestamp\":{\"$date\":1571083205996},\"title\":\"Add Two String Numbers\",\"stats\":{\"completed\":{\"total\":97,\"ratings\":[3,3,3,3,3,3,5,3,4,5,3,4,5,2,2,5,5,3,0,0,5,5,4,2,0,4,4,2,1,0,0,1,3,0,1,0,3,3,2,1,4,3,4,2,5,3,0,2,4,4,0,3,3,2,2,3,1,5,4,1,0,3,3,3,2,4,2,4,3,4,2,2,0,4,2,4,4,3],\"rators\":[\"yjtdwc2AC4jA2RWtn\",\"GToNjAriT8DvFJov2\",\"65dbBZynphj53nXqA\",\"pk6F3C2fbECgZ8nKW\",\"5Zq3aGdvh4LHBvnJL\",\"FiK2ruyH8KeHLAgoA\",\"qJZsi5rhRnWA38FbA\",\"ovBPd28PNiWQQapBG\",\"XYEDjaciXqSqzp6p3\",\"FJsvM5yqKuK9yMk9P\",\"5DsYhKJiNTaarWKkM\",\"3xTP5LHEMpQWB4knW\",\"h4jFmtbFn92eA4649\",\"c8Bm2gfGm7o6Z7Wqb\",\"id6jhbmGLXJ6n96MP\",\"3c9SrRu6mRRoBBWBu\",\"ngZrypDEMRDqnsPcE\",\"PX3nC6KJ7zYzjMZN4\",\"BBP9BE5mKHRzaRpJr\",\"AasGs8AeX9Lcb9xJn\",\"mHT2bJb5SByfJ8yKS\",\"Tu22KsScr9mykuy8N\",\"Pibec96NpvMB5GqAt\",\"4YQYMKAinTbZjed9D\",\"btJiTRr2fnbsfJADD\",\"ydEdzuCCZt4yny9Rq\",\"2NJuDfSqdrF8kHHni\",\"n5wubRfh6zh8QRymN\",\"cRpaCxYRmGcN3Nsoj\",\"AXcnPX68zdMiLNSmu\",\"iP8oCoJ6A3ZBuLADc\",\"KcpfY4XZ7fNamyLd3\",\"yQtGE2egvwYnNQSFc\",\"dPM2Rk2iMkznyXNEt\",\"EjPLq3QSJdGQFJdgW\",\"wQ25xzXqh4y3A8NBB\",\"SxqAEMaYcE9Ps9eh6\",\"Y9Nz9yafaibz54W4o\",\"5yrfEbCSTrbsGPKt5\",\"JGBCMpnbbi5ztuFoX\",\"2QziknsznNeMPRh3g\",\"Kc3SDafimwpZWrATJ\",\"2d6fufcQy4F3awkF3\",\"2ZFoLTxcCARhwc8xX\",\"ffrqgqTTfp66g8rCW\",\"p2woPCQKXuWJCwffJ\",\"M4vq8ATaS9Jg5X7iP\",\"GJWSWfZ9rPeia7H2g\",\"eFjGhq7C7bBKXjT6X\",\"Puw5gArp8qHbkbbKE\",\"aEm3Wvj2rFYRL8Lrb\",\"eoepTq5ES5tfgY9XT\",\"buX4mCQhtXCfBjeno\",\"HCYPyZNRcMkj32oSs\",\"ixabGTE2JSw9QLbJS\",\"LtTpCzF8kt6Rdth4X\",\"LHaWZq59KWgozbwed\",\"Ac6u9uxPiFD5D8tfr\",\"QRv96jmNaYsWkxQEG\",\"ZcJm2kuqJnN3CXFaR\",\"jrcbewyoTtSbEraFS\",\"ybKXno4BJHrTbteGd\",\"bXaGdBM8FBLHf7N6Y\",\"bX6tpTCjwoi6XMMbK\",\"Es4eX2stRpyoXeC7f\",\"ct42f2gGpMXSd9hXM\",\"BjJhatTBaTWm3ZhCt\",\"zd9FLSzsGz3evKafy\",\"u9cRf5kvtpRB5ffB3\",\"a777e8chPvJkY3tKa\",\"RKKuw76K7sRBMouKq\",\"8Z3dkvWBqtrMEE48N\",\"CNc6rmwhbxkxEhHAp\",\"Xk2g4CNFAnYcvxiSr\",\"Ya3eHgs8x3unZRLpb\",\"yuLxi2qBJvMnwgdgJ\",\"9YZicvjt6mJATyBjZ\",\"NGvCPuMiAP3xrRLfB\",\"6PwJzCgPXTeysootg\",\"d3E7G2C8ZYMfxJZhM\",\"ogLvdXKTcKHAeyPNp\",\"PH32cNxBjrK4a28sn\",\"s678Wirfor5uYL5T6\",\"xsDyJstYoBZRS8pJH\",\"DPi9QGLctq2y76KuE\",\"oDtGiNqDMHmhHE3J8\",\"RE4Mm9T6Q9uygAxGS\"],\"quality\":[5,5,5,4,4,5,5,3,5,5,5,5,5,3,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"isHidden\":false,\"quality\":4.6,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"6H6dch4q68BXQbFcM\",\"language\":\"cpp\"},{\"_id\":\"QwGgDuvWtFmDTeRHw\",\"language\":\"java\"},{\"_id\":\"3q6tbKL8BS4CgaR4c\",\"language\":\"javascript\"},{\"_id\":\"bwCDG9X8cJiAdvfxE\",\"language\":\"python3\"},{\"_id\":\"mE4XYBoSEtJmTCQZu\",\"language\":\"ruby\"}]}}"]