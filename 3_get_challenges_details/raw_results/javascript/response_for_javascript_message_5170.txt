a["{\"msg\":\"result\",\"id\":\"1336\",\"result\":{\"_id\":\"qPK2Cz8LS2rGKYz7h\",\"author\":\"Alex Nemechek\",\"authorId\":\"tXzqHX2abH7KJQqKg\",\"code\":\"function parseCode(str) {\\n\\t\\n}\",\"difficulty\":2.118181818181818,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"kfkyD6DWgpSEvNf6h\",\"instructions\":\"Create a function which takes in an encoded string and returns an object according to the following example:\\n\\n### Examples\\n```\\nparseCode(\\\"John000Doe000123\\\") ➞ {\\n  firstName: \\\"John\\\",\\n  lastName: \\\"Doe\\\",\\n  id: \\\"123\\\"\\n}\\n\\nparseCode(\\\"michael0smith004331\\\") ➞ {\\n  firstName: \\\"michael\\\",\\n  lastName: \\\"smith\\\",\\n  id: \\\"4331\\\"\\n}\\n\\nparseCode(\\\"Thomas00LEE0000043\\\") ➞ {\\n  firstName: \\\"Thomas\\\",\\n  lastName: \\\"LEE\\\",\\n  id: \\\"43\\\"\\n}\\n```\\n\\n### Notes\\n- The string will always be in the same format, first name, last name and id with zeros between them.\\n- `id` numbers will not contain any zeros.\\n- **Bonus:** Try solving this without RegEx.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertSimilar(parseCode(\\\"John000Doe000123\\\"), {firstName: \\\"John\\\", lastName: \\\"Doe\\\", id: \\\"123\\\"})\\nTest.assertSimilar(parseCode(\\\"Michael0Smith004331\\\"), {firstName: \\\"Michael\\\", lastName: \\\"Smith\\\", id: \\\"4331\\\"})\\nTest.assertSimilar(parseCode(\\\"Thomas0000Lee0000045553\\\"), {firstName: \\\"Thomas\\\", lastName: \\\"Lee\\\", id: \\\"45553\\\"})\\nTest.assertSimilar(parseCode(\\\"a0b01\\\"), {firstName: \\\"a\\\", lastName: \\\"b\\\", id: \\\"1\\\"})\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[4,4,4,4,4,4,0,2,2,1,2,0,1,3,2,2,1,4,2,2,3,1,2,2,3,2,0,1,3,2,3,2,2,2,2,3,3,3,3,1,2,2,3,2,1,3,3,1,2,1,2,2,2,3,1,0,3,2,2,1,0,2,1,1,1,3,0,3,3,3,3,3,3,3,2,2,3,3,2,2,1,1,2,3,3,2,0,3,0,3,2,3,3,3,0,3,2,1,2,2,3,2,2,1,0,1,3,2,3,5],\"rators\":[\"tXzqHX2abH7KJQqKg\",\"yjtdwc2AC4jA2RWtn\",\"qAmNEGSdXs73cytHT\",\"enmqcTwbG9CDNJPe9\",\"49uuzwkpBg45xAwrN\",\"hbjAs4qr5Cb22qDai\",\"5Zq3aGdvh4LHBvnJL\",\"n5wubRfh6zh8QRymN\",\"inmjjfsii2M4CMf34\",\"yuLxi2qBJvMnwgdgJ\",\"Y9Nz9yafaibz54W4o\",\"FqpshF963WY3G8G7F\",\"LgDic4cD77oG8XtwP\",\"KcpfY4XZ7fNamyLd3\",\"CuY5BaTCcu7Mp9tDu\",\"6AkHZRsnysi2k9izF\",\"C474nPwKe4Gzzhj5Q\",\"p9xbSWBQFe5BMs9sx\",\"nkGLFenhWR8neryo4\",\"6BpBQnSGhzgvhXrEy\",\"HHLi7u8RdCaM2NQyy\",\"3aZvfgr2H2WF8Yog2\",\"4bECT3r3cvCf3Spiv\",\"a777e8chPvJkY3tKa\",\"E6DBfkTgHuPsDWdG8\",\"ze5uQfR4tkjbR96ei\",\"pi76g3eRpnKrhee2a\",\"AasGs8AeX9Lcb9xJn\",\"b7GtDPC7j4bAmK4t9\",\"LCn6qz2GoMr5577Rd\",\"FJsvM5yqKuK9yMk9P\",\"uigAJ9KT5muMWTDis\",\"8raviPK67KKxzQWcF\",\"rfpGGJ6wxCCisiMdi\",\"QRv96jmNaYsWkxQEG\",\"zNN2fW2pJGpTxBgzx\",\"mHT2bJb5SByfJ8yKS\",\"p5ZshR8zhTqmdhKDc\",\"65dbBZynphj53nXqA\",\"y3eJgo4LfRNMXuHz8\",\"4deyTem4Z3zgPLEv7\",\"buX4mCQhtXCfBjeno\",\"hR4xXL3zwbr2LRx5C\",\"RE4Mm9T6Q9uygAxGS\",\"aEm3Wvj2rFYRL8Lrb\",\"eFjGhq7C7bBKXjT6X\",\"r7mZLgpQWzRiGddL5\",\"BuGWvGZGiJELoMy5G\",\"3ftNj7PjqcRjkKR3b\",\"JsRTAwWK7Nikj4sKA\",\"4Xv87xmdSnpYhi8hz\",\"ro4W36ttXuSLWfvnx\",\"tAF9Gf6PiGogbZuWs\",\"PGCDJpQMN8Sjn9Gm6\",\"kp2ZbCewZJAbfd7xv\",\"J38sCJqTS96XwwAWE\",\"5DJwdKWJxmsxDHZHk\",\"YLTZRjM78Wi9J9Re4\",\"CNc6rmwhbxkxEhHAp\",\"sySmCuRJCCi2dtLLM\",\"YPNbhQxe8jHobXqB4\",\"Fyd3be8zFJb8BfCHM\",\"Rrb84KWhN5tjhMGMA\",\"zw7g7T8wE5R5CBhXr\",\"yK7zzK2aGJwuWKHRL\",\"vGKxRcDYDsXzTQuEQ\",\"ct42f2gGpMXSd9hXM\",\"yCeddtASCT5NFPJTP\",\"M4vq8ATaS9Jg5X7iP\",\"bX6tpTCjwoi6XMMbK\",\"GscGqdEtfaRvYgeEn\",\"BWJLeBieEioW3GyEq\",\"sHnfwDzKzmeApjTv8\",\"qWR7eXxBiNee22A5u\",\"zxp545uvsWqALG25n\",\"g4NCSxxHqHCGMpWwT\",\"zd9FLSzsGz3evKafy\",\"PH32cNxBjrK4a28sn\",\"S5ZJy8yeYqWbeidB8\",\"k92fWfzLqgZwDnQXp\",\"eEZ8zeWX8b3SWs84P\",\"gGwDyEJeAMCrbhprW\",\"8BJyXvRWcrvN3nttS\",\"y4EwP9d2SH2otAw42\",\"XAGJuJRsgxZNiAN9C\",\"TCvxGxYeGFA6BG8RM\",\"AFfw7cGg83uYk2Miy\",\"e9Cknxbx6o7Nb6REs\",\"733qgZ7ZSSSrzbXGw\",\"PTo9qt93YqGvL8fCa\",\"QLuzBR96XxmhTNdpW\",\"srJ34BaybkQh3qRkM\",\"SKdjpMNXDwnRAWSBD\",\"fdPA8eWHjvDGGowsw\",\"uGkettobQJ5RPSdSX\",\"iyNqxcRq2za3p2D2c\",\"CH53jGETBeJTummf3\",\"RtPhDuwmvWNHiBxmG\",\"wJTDDTE3TrmSXKP4d\",\"Q7Yxda7dqKeYPs2Db\",\"LZ9fqQk8rThDXEe8R\",\"yj8b9EvZqua9wgFkG\",\"NGvCPuMiAP3xrRLfB\",\"JXyZyJTEFqwZMxiFR\",\"QguFWo84zgF3c8BGr\",\"hvTAyFPy4pJHdrYJX\",\"BdnE4RS5puoxo92mA\",\"ShrXg4RHgnyFjzJ8w\",\"Xk2g4CNFAnYcvxiSr\",\"EwL9RKDxREf9JFpdN\",\"oDtGiNqDMHmhHE3J8\",\"5QnTmrLNNWFiHgTcm\",\"xE5bFZK4umpyijtsY\",\"QvEXmSEo3ANp3yPyH\",\"NJCmkbH5e7qbtZYhd\",\"eubunaiBju422gmhF\",\"2ztTs3apwPQJdf75n\",\"MBuvowuKb5Cy3XtSM\",\"Ya3eHgs8x3unZRLpb\",\"vFBkjBa9oK9y4Pv6j\",\"76rZ57Yc5w8KcuR4S\",\"qaR8DnWrTk8Mus5Q2\",\"gDRg9a8hMrDefRkcB\",\"nkH3HfJXLMNcBMM79\",\"9HZbxzkzgz4CvePtv\",\"eKHQ5g8uEdoBgdafr\",\"3hCNAyTeGh5AWcuyJ\",\"tgr46kgjxtDftEixJ\",\"2AbkP2Z8ZYvHpnFCw\",\"FY7atTfxaahfAHtJv\",\"KDjwXakNbnpWnnHRt\",\"ThaiAKWWDw2W4QfJh\",\"rMc3LPajSgm68hNfC\",\"DfdkfQh8ctd2BaaRY\",\"jyoLggHk8xQKZuoQC\"],\"total\":147,\"quality\":[5,5,1,5,5,5,5,5,4,5,3,5,5,5,5,2,5,4,5,5,5,5,5,5,5,5,5,4,5,5]},\"flags\":0},\"summary\":\"Create a function which takes in an encoded string and returns an object according to the following example:\\n\\nExamples\\nparseCode(\\\"John000Doe000123\\\") ➞ {\\n  firstName: \\\"John\\\",\\n  lastName: \\\"Doe\\\",\\n  id: \\\"123\\\"\\n}\\n\\nparseCode(\\\"michael0smith004331\\\") ➞ {\\n  firstName: \\\"michael\\\",\\n  lastName: \\\"smith\\\",\\n  id: \\\"4331\\\"\\n}\\n\\nparseCode(\\\"Thomas00LEE0000043\\\") ➞ {\\n  firstName: \\\"Thomas\",\"tags\":[\"strings\",\"formatting\",\"sorting\",\"objects\"],\"timestamp\":{\"$date\":1581812458959},\"title\":\"Encoded String Parse\",\"quality\":4.6,\"family\":[{\"_id\":\"gskWj3Zj45ovAomTb\",\"language\":\"java\"},{\"_id\":\"qPK2Cz8LS2rGKYz7h\",\"language\":\"javascript\"},{\"_id\":\"7vN8ZRw43yuWNoy3Y\",\"language\":\"python3\"}]}}"]