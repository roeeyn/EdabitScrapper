a["{\"msg\":\"result\",\"id\":\"1583\",\"result\":{\"_id\":\"PuGi7j9rm5nHBX8Ec\",\"author\":\"Werdna\",\"authorId\":\"buX4mCQhtXCfBjeno\",\"code\":\"function getCoinBalances(arr1, arr2) {\\n\\t\\n}\",\"difficulty\":2.257142857142857,\"familyId\":\"Wko2QX35PzCZasRnB\",\"instructions\":\"Let's say that there exists a machine that gives out free coins, but with a twist!\\n\\nSeparating two people is a wall, and this machine is placed in such a way that both people are able to access it. Spending a coin in this machine will give the person on the other side **3 coins** and vice versa.\\n\\nIf both people continually spend coins for each other (SHARING), then they'll both gain a net profit of **2 coins per turn.** However, there is always the possibility for someone to act selfishly (STEALING): they spend no coins, yet they still receive the generous **3 coin** gift from the other person!\\n\\n*Here's an example of Red taking advantage of Green!*\\n![Red chose to betray](https://edabit-challenges.s3.amazonaws.com/JNBHVgvHBnjhbhvvHB.png)\\n\\n### The Challenge\\nAssuming that both people **start with 3 coins each**, create a function that calculates both people's final number of coins. You will be given two arrays of strings, with each string being the words `\\\"share\\\"` or `\\\"steal\\\"`.\\n\\n### Examples\\n```\\ngetCoinBalances([\\\"share\\\"], [\\\"share\\\"]) ➞ [5, 5]\\n// Both people spend one coin, and receive 3 coins each.\\n\\ngetCoinBalances([\\\"steal\\\"], [\\\"share\\\"]) ➞ [6, 2]\\n// Person 1 gains 3 coins, while person 2 loses a coin.\\n\\ngetCoinBalances([\\\"steal\\\"], [\\\"steal\\\"]) ➞ [3, 3]\\n// Neither person spends any coins and so no one gets rewarded.\\n\\ngetCoinBalances([\\\"share\\\", \\\"share\\\", \\\"share\\\"], [\\\"steal\\\", \\\"share\\\", \\\"steal\\\"]) ➞ [3, 11]\\n```\\n\\n### Notes\\n- No tests will include a negative number of coins.\\n- All words will be given in lowercase.\\n- This challenge is adapted from a famous game theory example called the **Prisoner's Dilemma**, which you can learn more about in the **Resources** tab.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertSimilar(getCoinBalances(['share'], ['share']), [5, 5])\\nTest.assertSimilar(getCoinBalances(['steal'], ['share']), [6, 2])\\nTest.assertSimilar(getCoinBalances(['share'], ['steal']), [2, 6])\\nTest.assertSimilar(getCoinBalances(['steal'], ['steal']), [3, 3])\\n\\nTest.assertSimilar(getCoinBalances(['share', 'share', 'share'], ['steal', 'share', 'steal']), [3, 11])\\nTest.assertSimilar(getCoinBalances(['share', 'share', 'steal', 'share'], ['steal', 'steal', 'steal', 'steal']), [0, 12])\\nTest.assertSimilar(getCoinBalances(['steal', 'steal', 'steal'], ['share', 'share', 'share']), [12, 0])\\nTest.assertSimilar(getCoinBalances(['share', 'share'], ['share', 'share']), [7, 7])\\nTest.assertSimilar(getCoinBalances(['share', 'steal', 'steal', 'steal'], ['share', 'share', 'steal', 'share']), [11, 3])\\nTest.assertSimilar(getCoinBalances(['share', 'share', 'steal', 'share'], ['steal', 'share', 'steal', 'steal']), [3, 11])\\nTest.assertSimilar(getCoinBalances(['steal', 'steal', 'steal', 'steal'], ['steal', 'steal', 'steal', 'steal']), [3, 3])\\nTest.assertSimilar(getCoinBalances(['steal', 'share', 'steal', 'steal'], ['share', 'share', 'steal', 'steal']), [8, 4])\\nTest.assertSimilar(getCoinBalances(['steal', 'steal'], ['share', 'share']), [9, 1])\\nTest.assertSimilar(getCoinBalances(['steal', 'share'], ['share', 'steal']), [5, 5])\\n\\n// Author: Joshua Señoron\",\"language\":\"javascript\",\"quality\":0,\"summary\":\"Let's say that there exists a machine that gives out free coins, but with a twist!\\n\\nSeparating two people is a wall, and this machine is placed in such a way that both people are able to access it. Spending a coin in this machine will give the person on the other side 3 coins and vice versa.\\n\\nIf both people continually spend coins for each other (SHARING), the\",\"tags\":[\"loops\",\"algorithms\",\"interview\",\"language_fundamentals\"],\"timestamp\":{\"$date\":1612911547297},\"title\":\"Coin Co-Operation\",\"stats\":{\"completed\":{\"total\":30,\"ratings\":[2,2,2,2,2,2,2,2,3,2,3,2,1,3,0,2,2,3,1,2,2,3,4,4,2,3,2,2,3,2,2,3,1,3,3],\"quality\":[],\"rators\":[\"buX4mCQhtXCfBjeno\",\"a777e8chPvJkY3tKa\",\"wJTDDTE3TrmSXKP4d\",\"8BJyXvRWcrvN3nttS\",\"z6rWbk4FWtqs7qHvm\",\"k85xfEj6TDsMLBWzw\",\"CNc6rmwhbxkxEhHAp\",\"yjtdwc2AC4jA2RWtn\",\"pFo4dga9BMj58Cc4B\",\"XujK3rHd3JcM9TLJy\",\"8s5Bdrn7RTga7DL6x\",\"2Qk2mFu9HBFzrB24i\",\"AQSqD9oNv2uPfxZCR\",\"2P5vWxdr4qQiRxdPN\",\"bX6tpTCjwoi6XMMbK\",\"fjBB8rBHeCeMGELvW\",\"AFfw7cGg83uYk2Miy\",\"FJsvM5yqKuK9yMk9P\",\"QRv96jmNaYsWkxQEG\",\"r9seLLH2zLkN8msP8\",\"NGvCPuMiAP3xrRLfB\",\"tAF9Gf6PiGogbZuWs\",\"DPi9QGLctq2y76KuE\",\"PPFmWzDiefzfekdcg\",\"RE4Mm9T6Q9uygAxGS\",\"AMpQSjKsRqhCDyS2j\",\"oDtGiNqDMHmhHE3J8\",\"d8JhF9zfpexkRnCea\",\"TtrXnGzi9MyhLvWiz\",\"DfdkfQh8ctd2BaaRY\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"9M4efRd2ZTW9RGFpj\",\"language\":\"cpp\"},{\"_id\":\"WmGeYLJbud69ezCew\",\"language\":\"java\"},{\"_id\":\"PuGi7j9rm5nHBX8Ec\",\"language\":\"javascript\"},{\"_id\":\"F7DBaK85jKLDMiugA\",\"language\":\"php\"},{\"_id\":\"8NyNftbNXd6CZCDXf\",\"language\":\"python3\"},{\"_id\":\"QqFBTz4i7YxWjszXx\",\"language\":\"ruby\"}]}}"]