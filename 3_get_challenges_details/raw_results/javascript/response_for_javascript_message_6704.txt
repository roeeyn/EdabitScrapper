a["{\"msg\":\"result\",\"id\":\"2095\",\"result\":{\"_id\":\"edzM82cAzurBfWF3z\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"function bracketLogic(xp) {\\n\\t\\n}\",\"difficulty\":2.925925925925926,\"familyId\":\"hmtGPgNhHdukaTbh6\",\"instructions\":\"Brackets and parentheses in mathematical expressions have to conform to certain logical rules. Every opening bracket must have a closing mate somewhere further down the line. Although brackets can be nested, different types cannot overlap:\\n\\n- `([<x+y>+3]-1)` makes sense because each set of brackets contains or is contained by another set.\\n- `([<x+y>+3)-1]` makes no sense because the parentheses and the square brackets overlap.\\n\\nGiven a string expression that can contain four types of brackets: `() <> []  {}`, create a function that returns `true` if the bracket logic is valid and `false` if it is not.\\n\\n### Examples\\n```\\nbracketLogic(\\\"[<>()]\\\") ➞ true\\n\\nbracketLogic(\\\"[<(>)]\\\") ➞ false\\n\\nbracketLogic(\\\"[(a*b+<7-c>+9]\\\") ➞ false\\n// Opening parenthesis has no mate.\\n\\nbracketLogic(\\\"[{(h*i+3)-12]/4*x+2}\\\") ➞ false\\n// Square and curly brackets overlap.\\n\\nbracketLogic(\\\"[ab(c/d<e-f+(7*6)>)+2]\\\") ➞ true\\n```\\n\\n### Notes\\nAny characters other than the brackets can be ignored.\",\"lab\":\"Test.assertEquals(bracketLogic(\\\"{b}{y}{ }[x][{{(t)-}{}](t<w(^)>)-b}<[g](x{u[ ]})y>\\\"), false)\\nTest.assertEquals(bracketLogic(\\\"{f}[t[[]]<[+](w)t>u(h)(%){f}[d{e}]{c(/)}<w>][v]\\\"), true)\\nTest.assertEquals(bracketLogic(\\\"[(t)d]</{h}><<a <( )e>[*]{e{e}}<w{x[^]}>>\\\"), false)\\nTest.assertEquals(bracketLogic(\\\"{g}((-) ^>b)[^]{{*<->}(w)(u)(%)}({/}c)(%)[g{b}]<z({<< >w>c}d)[b]>\\\"), false)\\nTest.assertEquals(bracketLogic(\\\"(y)(c)(){[[ ]z] [{+}z[*]]{+}}([d]<y<e>>c)[b][b]\\\"), true)\\nTest.assertEquals(bracketLogic(\\\"((^(b))e>(<d<w>>(({a}/(g)){t</)}b(d)){[v]u})\\\"), false)\\nTest.assertEquals(bracketLogic(\\\"{([%]</>u)<{<y{v}>{<c>h}{y}f}[y]{<*>e}[^]v><[h]d>}[d]\\\"), true)\\nTest.assertEquals(bracketLogic(\\\"{a}{<(^)(b)%>[z]<->e}[{z}%]{<^>g}<[h] ({ }y[*]<v>)>{x[+]<^>}<v>[]\\\"), true)\",\"language\":\"javascript\",\"summary\":\"Brackets and parentheses in mathematical expressions have to conform to certain logical rules. Every opening bracket must have a closing mate somewhere further down the line. Although brackets can be nested, different types cannot overlap:\\n\\n([+3]-1) makes sense because each set of brackets contains or is contained by another set.\\n([+3)-1] makes no sense becaus\",\"tags\":[\"logic\",\"validation\"],\"timestamp\":{\"$date\":1568861836672},\"title\":\"Bracket Logic\",\"stats\":{\"completed\":{\"total\":24,\"ratings\":[3,3,3,3,3,2,3,3,2,3,1,2,4,3,3,3,4,3,4,4,3,3,2,4,2,4,2],\"rators\":[\"yjtdwc2AC4jA2RWtn\",\"n5wubRfh6zh8QRymN\",\"65dbBZynphj53nXqA\",\"SW85FEYGb37oAsWfo\",\"AasGs8AeX9Lcb9xJn\",\"cRpaCxYRmGcN3Nsoj\",\"2innwjWqxJHo4eRGh\",\"EWn8w8P3nNh7knatY\",\"frx4Kkg7MayMPupHR\",\"zsNp9fk9BGDBiHr4G\",\"YER6iBcpJCuhgrYDN\",\"JGBCMpnbbi5ztuFoX\",\"vn6nR36mdfY8z2zKx\",\"Es4eX2stRpyoXeC7f\",\"M4vq8ATaS9Jg5X7iP\",\"p2woPCQKXuWJCwffJ\",\"aEm3Wvj2rFYRL8Lrb\",\"mDWNyaaQ9hvPCRzSd\",\"yFhZeuFM7cFL2hkb9\",\"pGh7WykiPe26fHJYv\",\"c7uBxu2rgY77H5d79\",\"buX4mCQhtXCfBjeno\",\"AqhPgQu4npgN7tGgK\"],\"quality\":[3]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"isHidden\":false,\"quality\":3,\"family\":[{\"_id\":\"HQdXY4udvewZH3KX3\",\"language\":\"cpp\"},{\"_id\":\"Cu6euwD8Mi2c7BAHd\",\"language\":\"java\"},{\"_id\":\"edzM82cAzurBfWF3z\",\"language\":\"javascript\"},{\"_id\":\"xFKwv7pAzEdNehwrt\",\"language\":\"python3\"},{\"_id\":\"YCkjFvrBPajMqzAqm\",\"language\":\"ruby\"}]}}"]