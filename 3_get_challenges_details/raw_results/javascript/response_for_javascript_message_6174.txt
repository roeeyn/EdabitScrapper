a["{\"msg\":\"result\",\"id\":\"1834\",\"result\":{\"_id\":\"oK8YTFzTDBzjQpmtH\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"function sortContacts(names, sort) {\\n\\t\\n}\",\"difficulty\":2.642857142857143,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"boF9CobvmPifNngt6\",\"instructions\":\"Write a sorting function that takes in an array of names and sorts them **by last name** either alphabetically (`ASC`) or reverse-alphabetically (`DESC`).\\n\\n### Examples\\n```\\nsortContacts([\\n  \\\"John Locke\\\",\\n  \\\"Thomas Aquinas\\\",\\n  \\\"David Hume\\\",\\n  \\\"Rene Descartes\\\"\\n], \\\"ASC\\\") ➞ [\\n  \\\"Thomas Aquinas\\\",\\n  \\\"Rene Descartes\\\",\\n  \\\"David Hume\\\",\\n  \\\"John Locke\\\"\\n]\\n\\n// Aquinas (A) < Descartes (D) < Hume (H) < Locke (L)\\n\\nsortContacts([\\n  \\\"Paul Erdos\\\",\\n  \\\"Leonhard Euler\\\",\\n  \\\"Carl Gauss\\\"\\n], \\\"DESC\\\") ➞ [\\n  \\\"Carl Gauss\\\",\\n  \\\"Leonhard Euler\\\",\\n  \\\"Paul Erdos\\\"\\n]\\n\\n// Gauss (G) > Erdos (ER) > Euler (EU)\\n\\nsortContacts([], \\\"DESC\\\") ➞ []\\n\\nsortContacts(null, \\\"DESC\\\") ➞ []\\n\\nsortContacts(undefined, \\\"DESC\\\") ➞ []\\n```\\n\\n### Notes\\n- An array with a single name should be trivially returned.\\n- An empty array, or an input of `null` or `undefined` should return an empty array.\",\"lab\":\"Test.assertSimilar(sortContacts(['John Locke', 'Thomas Aquinas', 'David Hume', 'Rene Descartes'], 'ASC'), ['Thomas Aquinas', 'Rene Descartes', 'David Hume', 'John Locke'])\\nTest.assertSimilar(sortContacts(['Paul Erdos', 'Leonhard Euler', 'Carl Gauss'], 'DESC'), ['Carl Gauss', 'Leonhard Euler', 'Paul Erdos'])\\nTest.assertSimilar(sortContacts(['Michael Phelps', 'Jesse Owens', 'Michael Jordan', 'Usain Bolt'], 'DESC'), ['Michael Phelps', 'Jesse Owens', 'Michael Jordan', 'Usain Bolt'])\\nTest.assertSimilar(sortContacts(['Al Gore', 'Barack Obama'], 'ASC'), ['Al Gore', 'Barack Obama'])\\nTest.assertSimilar(sortContacts(['Albert Einstein'], 'ASC'), ['Albert Einstein'])\\nTest.assertSimilar(sortContacts([], 'DESC'), [])\\nTest.assertSimilar(sortContacts(null, 'DESC'), [])\\nTest.assertSimilar(sortContacts(undefined, 'DESC'), [])\",\"language\":\"javascript\",\"summary\":\"Write a sorting function that takes in an array of names and sorts them by last name either alphabetically (ASC) or reverse-alphabetically (DESC).\\n\\nExamples\\nsortContacts([\\n  \\\"John Locke\\\",\\n  \\\"Thomas Aquinas\\\",\\n  \\\"David Hume\\\",\\n  \\\"Rene Descartes\\\"\\n], \\\"ASC\\\") ➞ [\\n  \\\"Thomas Aquinas\\\",\\n  \\\"Rene Descartes\\\",\\n  \\\"David Hume\\\",\\n  \\\"John Locke\\\"\\n]\\n\\n// Aquinas (A)  Euler (EU) > Er\",\"tags\":[\"sorting\",\"arrays\"],\"timestamp\":{\"$date\":1552793130792},\"title\":\"Contact List\",\"stats\":{\"completed\":{\"total\":303,\"ratings\":[2,2,2,2,2,2,2,2,2,2,2,3,2,3,2,5,3,2,3,3,4,1,5,3,3,2,3,0,4,3,3,2,2,3,0,3,3,2,4,2,2,3,3,4,1,4,4,4,1,3,3,4,2,3,2,4,3,3,2,2,3,1,1,4,2,1,2,3,3,2,0,3,3,2,1,2,1,3,2,3,2,4,4,4,2,2,3,2,1,2,4,2,2,3,2,3,3,3,4,3,3,2,2,4,3,3,2,2,2,4,0,2,4,0,1,3,2,4,2,1,4,3,2,2,4,2,3,2,3,3,2,1,3,3,4,2,4,1,3,2,3,2,3,3,3,4,3,3,3,2,2,3,4,2,4,4,3,3,4,2,2,4,3,3,3,2,4,4,1,3,1,4,2,4,4,3,2,3,2,3,3,2,2,2,2,2,2,2,3,2,1,2,4,4,2,2,0,4,4,3,4,3,1,3,3,2,4,2,4,2,3,1,2,0,1,2,2,2,4,3,3,3,4,4,4,1,3,1,4,3,2,2,3,3,3,4,2,3,2,3,3,4,3,2,3,3,4,4,4,2,4,3,2,3,4,1,4,4,4,4,0,4,3,4,0,3,3,1,3,2,2,2,3,2,4,4,3,3,4,2],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"65dbBZynphj53nXqA\",\"2innwjWqxJHo4eRGh\",\"SDtZFL5NzAoCPofXk\",\"CJnuSjyCBMTbTiibD\",\"n5wubRfh6zh8QRymN\",\"EjPLq3QSJdGQFJdgW\",\"jJ9njGvHZaHTsqAJs\",\"yjtdwc2AC4jA2RWtn\",\"EWn8w8P3nNh7knatY\",\"Y9Nz9yafaibz54W4o\",\"Qa3vzE4H2GeAHmEcQ\",\"FJsvM5yqKuK9yMk9P\",\"dGfeuMJenAF55Yvzq\",\"sMRpHSnAAgzcLJYyG\",\"5Zq3aGdvh4LHBvnJL\",\"kKxTMPfvvACxifCnS\",\"Q8xzfbAJsSrkX3LAD\",\"h4jFmtbFn92eA4649\",\"eQdnBfe8riy82SNrK\",\"46EqDiLEdJPtDFujt\",\"BpkHzQv9MHLqjcEn5\",\"arz32kRq8wJNu7DhA\",\"TgjcWxsTjar7snQx9\",\"FmcrZzdsXCvzcWurJ\",\"tM4GaznrTPt225Y6R\",\"MRedsQ5gbonhjmZzW\",\"XKi8iZXBCHCaebSHh\",\"pMXC4wcfRk5PvJP6B\",\"kYTjJ9TqHEWBnfPAZ\",\"TCtJwWLF6N35QoeF4\",\"AnJ37bAWvpJnjdNRd\",\"MLEENbjeoxg4i9NbJ\",\"oJj3uZBfrQMoNCj6C\",\"M2Sm2qHP8LdCHoia4\",\"rSJGLYSXMuu3RWjun\",\"zeEXfanmGrukWo6Cu\",\"H7eLWZ3jFqjZAk6Ws\",\"zNN2fW2pJGpTxBgzx\",\"ydEdzuCCZt4yny9Rq\",\"xkijCQ3BqRJ8vG9JA\",\"2oHzmYCLA7wwodR54\",\"ob3vWqmpSw3mfqDag\",\"mHT2bJb5SByfJ8yKS\",\"mrjNK8rS9CqstukL7\",\"vuxNW5Q3kb6TC6CjR\",\"gGnDsJz5hr2t9MKCF\",\"Yzvi2t2EjT9CaJjjJ\",\"HrPgEHxQxom64ojNZ\",\"2NJuDfSqdrF8kHHni\",\"nRht5DZA6YcH2kAo6\",\"FgGwspAA6jGQm7kak\",\"c5EduxyLmBAwRX4nL\",\"ksNkXwuYAy7TNQGYr\",\"vewKwcMeGuk3p3MsN\",\"wTN95bZvXHLD8XXx6\",\"Z9fQikDFWTPHhhNqo\",\"7gMSpBiibbLWzrtky\",\"39JiAZzrxpBGFib5o\",\"St7dhE5Hot8btYGMy\",\"6Sgyv8fZHTMmL78Ez\",\"4YQYMKAinTbZjed9D\",\"vThHLd8MLkmyJHox9\",\"AasGs8AeX9Lcb9xJn\",\"9XnGoq9Tv6ut3zTtH\",\"fMGp72XG7rQYcdFqt\",\"XFzh5apB4X8Q82WgB\",\"3oCaqpdk7TxMpmjKx\",\"xaZ2833xQCFygugYz\",\"o3WZmhitiyimNfDhC\",\"RWadiFi5Qv5679JfC\",\"DxEF6C4WJs9wx2qLh\",\"ieXZdBaDpMQx8QHvj\",\"ncpbYwfCbonkgEKSQ\",\"XuNkRyFJCjPaWPnWP\",\"t6bXCX76smm7B3bEN\",\"STgXQFuTqmDWN8sfg\",\"GQxiAt4SJTG8wCdo7\",\"KFeJuzG66LNh4GeJx\",\"sq5RSjvBqwguP7ybR\",\"Yt86bnSaxtxzR9irS\",\"AgdM7GMsMBBsxyF4s\",\"rWQHZFJ2RKMdyZpAf\",\"nRSADHtq2NfKs8bhQ\",\"LgvG2ARZaHdpdNdXE\",\"bKRcXfqw39TGAA34Q\",\"DhRL93jk8RrtkL3mD\",\"QjMG6JwNrcSt58cTY\",\"LWGa4s8ZWLDoKc3ry\",\"XFc7uGTzcLry23rTq\",\"EJXaAcika2bAcRAta\",\"XceccYRCaevh2dhHg\",\"PMq4KbGXQ53dRTYag\",\"73Axvj2aN2PXNPbd5\",\"2mgHKBjjYcemmRskz\",\"CaRNKHY7Wz44AeHJD\",\"t85p6fh3XxvcK78NE\",\"cRpaCxYRmGcN3Nsoj\",\"qJZsi5rhRnWA38FbA\",\"Bpaqx76LRB5Ky7xXy\",\"uZrLKq6TRWgrjDJaW\",\"Tu22KsScr9mykuy8N\",\"NoSG4YE4dabbx7tZw\",\"4aj4SEaSv44oA8j7K\",\"SMoZEbaSwtaL4WQA5\",\"si79iiZMMKahcxR7u\",\"MzwFbhCbZwQ3DSL6Q\",\"5pEWJyHf5kNDyu9fi\",\"frrtYBJaRni78g74E\",\"Rp39bhaZTRAKvRHqD\",\"Hq4eNAgN4DKA4YtwR\",\"CREQCYFmu2zX8rNfg\",\"PTo9qt93YqGvL8fCa\",\"frLFukdu85hNu4LJP\",\"KcpfY4XZ7fNamyLd3\",\"YER6iBcpJCuhgrYDN\",\"8aYqyjQ6jhouyhBda\",\"9QrEePwr32Mia6xfo\",\"j6AqPXaud9YeErFnW\",\"usi5g7gbYKruDSiKb\",\"Mt2bcrSQpQdxdqJn8\",\"dPM2Rk2iMkznyXNEt\",\"mAS2D3i75cFXaLeS9\",\"cyiikjQh3y8coW4t4\",\"5hGWkJ9L7fMEDryk8\",\"8tEikq8QhumvnbHXK\",\"yQtGE2egvwYnNQSFc\",\"gtbK6d8XpqHFiY37A\",\"hNetWrA6zvytax4hM\",\"LmwcsRgyKJoBgapWY\",\"jAKS4DqaD5mFMZbwX\",\"wfNHE2WDiRFQiyb9k\",\"aAhPFnN7Dp4DJhFcw\",\"74fAx6fd26LEPEKmi\",\"5NGxHLcQ8Af2RJ4TN\",\"h4MRqm88urfevv3Y7\",\"fxe5vvH6WnsXwDqYp\",\"4NRnNmjA8XBwcRo9r\",\"3r6BCY28a7nqNvwgJ\",\"frx4Kkg7MayMPupHR\",\"eFjGhq7C7bBKXjT6X\",\"FKygx25WhPWku46T2\",\"Jwoe6heepP8r77Doj\",\"wo4cpen33NYFHNca7\",\"s5zzhdSQFAa9PbYur\",\"q85PNa8zG7ZTRgFvX\",\"yFjWRGvstfQYKfwfA\",\"iapvMBwWivxXaybye\",\"7FquzeWAzF4aj6v44\",\"978CFDwQoiXR6xcq5\",\"LH8DS6wKbD3m6RpMo\",\"SxqAEMaYcE9Ps9eh6\",\"hjojTtcJJ5EiTs6EL\",\"FCX3STMvP2JfQLdbN\",\"hbjAs4qr5Cb22qDai\",\"EL4LzjTAxcCJFip9L\",\"FiK2ruyH8KeHLAgoA\",\"waRHaHRg5cpudzaiu\",\"9Pzg45NEiRXhLtLh3\",\"3aZvfgr2H2WF8Yog2\",\"6BpBQnSGhzgvhXrEy\",\"MrKPbvnDSPzfEeMzG\",\"CfzZZizBXwJJkowmS\",\"RWcpQ3t9pvKaafwCp\",\"rdJneF9g6KgwdKfGG\",\"Xk2g4CNFAnYcvxiSr\",\"9966k46pdpGeFjKSF\",\"Po3v3dHCk6wYGKMwi\",\"hTaa8XvWuAJmKnfTt\",\"ZcJm2kuqJnN3CXFaR\",\"u37upKZSmCKTQvQqX\",\"RqdNx4KYAToQp5sFx\",\"GCsLzWAhLvniQqR3J\",\"JGBCMpnbbi5ztuFoX\",\"CTd3wSEkroRNit9bb\",\"5fTTTkks5HDWnphxT\",\"dNqjHnaTsgqBFDxTC\",\"yuLxi2qBJvMnwgdgJ\",\"zRQnSTybvL3YQKsTz\",\"4bECT3r3cvCf3Spiv\",\"B9JotDuRiTBY8rvLh\",\"KXYHpCQvmTtpbGXYg\",\"oyB4Wr4EeZnoDaa8B\",\"2d6fufcQy4F3awkF3\",\"qfNfcHcD2sEyjgKQD\",\"qMxyysGPtGj2KcJBu\",\"hcm8sL8mNJTSfTdgE\",\"G9sMuskBrFWEDotT9\",\"ZtniSFrgec4oj6Pxm\",\"TbazbALKGNXb9RdBx\",\"BjJhatTBaTWm3ZhCt\",\"EwW7edgcoWLKbF2aw\",\"p2woPCQKXuWJCwffJ\",\"u5P98qtcBi9L8M7hf\",\"nBo2LLuSMeEgd5f6G\",\"faYyw7jGsSeaMeYYd\",\"8YJp93zsQWop6af4o\",\"YRdu63HNTKd6YmWpd\",\"a7LBurCmz5n6gECbv\",\"rJGzFvBGYxdukwt8X\",\"sBcsrC5paZm9nxjot\",\"aQxZ7T4nk7A4nMWpX\",\"dXXrCKPcCmFFYZp44\",\"acHSYL6uQAgpgFMjp\",\"AnahAy6RmvegPhmbh\",\"7B9qqRQdot33gqzpm\",\"FKMPCJDxvG3Rtf3JE\",\"zMCXYFZSsviDCvjnY\",\"DFYgDzybjj9k9mCH9\",\"QWtB4pcpgzc8wvZr3\",\"gAER2eXmKmNuHGGvY\",\"oGswmnu8Yhad8suQi\",\"Repe5bxrans8rnY99\",\"3AoqMu5gB99yjbKNY\",\"a777e8chPvJkY3tKa\",\"M4vq8ATaS9Jg5X7iP\",\"zoDHPoPn9mhXpmka7\",\"MT26yxj3YX95DsyLj\",\"F9iScttyWkzoPjs5B\",\"3WtHp4MBzciz4AE8M\",\"jSQykNgWgYtr3vpZS\",\"cCrirxZEzgAwQt2T9\",\"Q2xRCogrA9SR8eczL\",\"zvYa5b9wsiMYJZ2yS\",\"r7mZLgpQWzRiGddL5\",\"CJBPyyfyaEeEo63sb\",\"bX6tpTCjwoi6XMMbK\",\"aEm3Wvj2rFYRL8Lrb\",\"sNcDN3s3rH9wcNg5n\",\"QRv96jmNaYsWkxQEG\",\"SNt23Ei5dSNtfpEMd\",\"rC7kdm3SsSX9udEQk\",\"BuGWvGZGiJELoMy5G\",\"NczXsSrYNX6nDWhjF\",\"zvhWpHAEk7YgxXaQd\",\"3KmLTaikiNgDEDhZj\",\"xn7uGNKeAwPEkP9oA\",\"XscFaD4g2aLhjk6oS\",\"buX4mCQhtXCfBjeno\",\"4Xv87xmdSnpYhi8hz\",\"3ZrE3Kk55XXMqaZsG\",\"eGmzRsSATFsE2wjJa\",\"Ac6u9uxPiFD5D8tfr\",\"4RsakkyRXyYGwFxEa\",\"LtTpCzF8kt6Rdth4X\",\"YXqaqjujocvg2gX4k\",\"Cq4jiaTiWkDTDhLey\",\"bXaGdBM8FBLHf7N6Y\",\"tAF9Gf6PiGogbZuWs\",\"pGh7WykiPe26fHJYv\",\"mwg8jvMHHmQiQRrbr\",\"ctqwjLKRXa8Ciag3A\",\"ct42f2gGpMXSd9hXM\",\"Es4eX2stRpyoXeC7f\",\"BTdKRxKHXHDDD4934\",\"c7uBxu2rgY77H5d79\",\"i49enk79wAajcgi7a\",\"j3JZyXPSLrrSo6qrq\",\"PH32cNxBjrK4a28sn\",\"dz4stAGxFGawPRfob\",\"Kntd2rSgWYWp8r4sP\",\"CNc6rmwhbxkxEhHAp\",\"Rbr9NCY88MnAeCXka\",\"srJ34BaybkQh3qRkM\",\"ftXLsTaA7yHmhuEsY\",\"WnogMFYXoyvmBmGkm\",\"RFZy93MxBaaWHLQzh\",\"wR8gHDv7qnLtikX9M\",\"s678Wirfor5uYL5T6\",\"DPi9QGLctq2y76KuE\",\"BMCau6eTd5zb338LR\",\"NGvCPuMiAP3xrRLfB\",\"menrRWJwdS7sgJ5Ye\",\"2Qk2mFu9HBFzrB24i\",\"nkH3HfJXLMNcBMM79\",\"RKKuw76K7sRBMouKq\",\"r47Cs3y2F8exomjD2\",\"ShrXg4RHgnyFjzJ8w\",\"xsDyJstYoBZRS8pJH\",\"nWND4LmgZTftyB8sN\",\"XuGmzP4JktJv3P3Ku\",\"oDtGiNqDMHmhHE3J8\",\"RE4Mm9T6Q9uygAxGS\",\"jicWFrNKadYuLhqxh\",\"xCpLpG5ofmvm2YiyH\"],\"quality\":[5,5,5,5,5,5,5,5,3,2,5,5,5,5]},\"tests\":{\"score\":0,\"voters\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"voters\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"isHidden\":false,\"quality\":4.642857142857143,\"family\":[{\"_id\":\"BxiTHaprzDiTvdSA4\",\"language\":\"csharp\"},{\"_id\":\"SnZ5y2hyxjZnWrMec\",\"language\":\"java\"},{\"_id\":\"oK8YTFzTDBzjQpmtH\",\"language\":\"javascript\"},{\"_id\":\"fnLXJnqoDFTJNZk5r\",\"language\":\"python3\"},{\"_id\":\"W8DnnocsCoDkdZ7oE\",\"language\":\"ruby\"}]}}"]