a["{\"msg\":\"result\",\"id\":\"1655\",\"result\":{\"_id\":\"XtdTxLB47nD2Cq5jk\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"function simpleIncrement(n, iterations, step) {\\n\\t\\n}\",\"difficulty\":2.3076923076923075,\"editorId\":\"T6iBEE2jp7f7iEF2P\",\"familyId\":\"qJRmWcK7qSGJjWdew\",\"instructions\":\"Create a function that takes three integer parameters: a number `n`,  number of `iterations`, and `step`. You have to implement an algorithm, which increases the given number as explained below:\\n\\n```\\nn = 143726, iterations = 16, step = 3\\nsimpleIncrement(n, iterations, step) ➞ 243826\\n```\\n\\n**Step 1:** We _start from the first digit_ and increment the 4th digit because the step is 3.\\n\\n```\\ns - Starting Position\\n* - current increased position\\n\\nPosition: s - - - - - ➞ - - - * - -\\nNumber:   1 4 3 7 2 6 ➞ 1 4 3 8 2 6\\n```\\n\\n**Step 2:** Repeat step #1 with the updated starting position.\\n\\n```\\ns - Starting Position\\n* - current increased position\\n\\nPosition: - - - s - - ➞ * - - - - -\\nNumber:   1 4 3 8 2 6 ➞ 2 4 3 8 2 6\\n```\\n\\n- Remember, if the number **overflows**, the current position gets **shifted to the right**.\\n\\n```\\n9 9 9 ➞ - - p   // before overflow position will be at 3rd digit\\n1 0 0 0 ➞ - - - p   // after overflow position will be at 4th digit\\n```\\n\\n- More examples on overflow:\\n\\n```\\n9 ➞ 10\\n799 ➞ 800 (If you increased the second 9) or 809 (if you increased the first 9)\\n99000 ➞ 100000 (If you increased the second 9) or 109000 (if you increased the first 9)\\n```\\n\\n### Examples\\n```\\nsimpleIncrement(1673, 2, 16) ➞ 3673\\n\\nsimpleIncrement(99, 99, 99) ➞ 198\\n\\nsimpleIncrement(99, 99, 98) ➞ 4734\\n```\\n\\n### Notes\\nN/A\",\"isFree\":false,\"isHidden\":false,\"lab\":\"const tests = [\\n    [1673, 2, 16, 3673],\\n    [99, 99, 99, 198],\\n    [99, 99, 98, 4734],\\n    [5, 156, 15, 20996],\\n    [1, 1, 1, 2],\\n    [1, 10, 1, 20],\\n    [1, 10, 10, 11],\\n    [50, 10, 0, 150],\\n    [123, 123, 123, 300090],\\n    [12523, 122, 433, 6535854],\\n    [9, 9000, 100, 1854892466545716]\\n];\\ndescribe(\\\"Check kar yar\\\", function () {\\n    for (const [n, iterations, step, answer] of tests) {\\n        it(`given number:${n}, iterations:${iterations}, step: ${step}`, function () {\\n            Test.assertEquals(simpleIncrement(n, iterations, step), answer);\\n        });\\n    } \\n});\",\"language\":\"javascript\",\"quality\":0,\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,1,2,3,2,2,3,3,4],\"quality\":[],\"rators\":[\"T6iBEE2jp7f7iEF2P\",\"yjtdwc2AC4jA2RWtn\",\"BZ582kfiaTEm8q5w3\",\"CNc6rmwhbxkxEhHAp\",\"vic9SZ9qqj9WhRkbd\",\"ZcJm2kuqJnN3CXFaR\",\"RE4Mm9T6Q9uygAxGS\",\"oDtGiNqDMHmhHE3J8\"],\"total\":8},\"flags\":0},\"summary\":\"Create a function that takes three integer parameters: a number n,  number of iterations, and step. You have to implement an algorithm, which increases the given number as explained below:\\n\\nn = 143726, iterations = 16, step = 3\\nsimpleIncrement(n, iterations, step) ➞ 243826\\n\\nStep 1: We start from the first digit and increment the 4th digit because the step is 3\",\"tags\":[\"algorithms\",\"logic\",\"loops\",\"numbers\"],\"timestamp\":{\"$date\":1611124103029},\"title\":\"Not a Simple Increment\",\"family\":[{\"_id\":\"z4qD459LpzQjSQzY6\",\"language\":\"cpp\"},{\"_id\":\"XtdTxLB47nD2Cq5jk\",\"language\":\"javascript\"},{\"_id\":\"jYNstx2QfB5MjGrox\",\"language\":\"python3\"},{\"_id\":\"bXsdMyJQGcTht7jDz\",\"language\":\"ruby\"}]}}"]