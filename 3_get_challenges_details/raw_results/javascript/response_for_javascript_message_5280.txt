a["{\"msg\":\"result\",\"id\":\"1391\",\"result\":{\"_id\":\"jNanQ3zKkCdA9ANJw\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"function wiggleString(s) {\\n\\t\\n}\",\"difficulty\":2.1372549019607843,\"familyId\":\"6BM6SnBTgNQedF265\",\"instructions\":\"Create a function that returns an array of *the given string* but **offset by spaces**. Here are some more precise instructions:\\n\\n- Keep *adding spaces* on the **left** until you have the *same number of spaces* as the **word length**.\\n- Then keep *removing spaces* until you reach the **original word**.\\n\\nBelow are some helpful examples!\\n\\n### Examples\\n```\\nwiggleString(\\\"hello\\\") ➞ [\\n  \\\"hello\\\",\\n  \\\" hello\\\",\\n  \\\"  hello\\\",\\n  \\\"   hello\\\",\\n  \\\"    hello\\\",\\n  \\\"     hello\\\"\\n  \\\"    hello\\\",\\n  \\\"   hello\\\",\\n  \\\"  hello\\\",\\n  \\\" hello\\\",\\n  \\\"hello\\\"\\n]\\n\\nwiggleString(\\\"EDABIT\\\") ➞ [\\n  \\\"EDABIT\\\",\\n  \\\" EDABIT\\\",\\n  \\\"  EDABIT\\\",\\n  \\\"   EDABIT\\\",\\n  \\\"    EDABIT\\\",\\n  \\\"     EDABIT\\\",\\n  \\\"      EDABIT\\\",\\n  \\\"     EDABIT\\\",\\n  \\\"    EDABIT\\\",\\n  \\\"   EDABIT\\\",\\n  \\\"  EDABIT\\\",\\n  \\\" EDABIT\\\",\\n  \\\"EDABIT\\\"\\n]\\n\\nwiggleString(\\\"Wiggle Time\\\") ➞ [\\n  \\\"Wiggle Time\\\",\\n  \\\" Wiggle Time\\\",\\n  \\\"  Wiggle Time\\\",\\n  \\\"   Wiggle Time\\\",\\n  \\\"    Wiggle Time\\\",\\n  \\\"     Wiggle Time\\\",\\n  \\\"      Wiggle Time\\\",\\n  \\\"       Wiggle Time\\\",\\n  \\\"        Wiggle Time\\\",\\n  \\\"         Wiggle Time\\\",\\n  \\\"          Wiggle Time\\\",\\n  \\\"           Wiggle Time\\\",\\n  \\\"          Wiggle Time\\\",\\n  \\\"         Wiggle Time\\\",\\n  \\\"        Wiggle Time\\\",\\n  \\\"       Wiggle Time\\\",\\n  \\\"      Wiggle Time\\\",\\n  \\\"     Wiggle Time\\\",\\n  \\\"    Wiggle Time\\\",\\n  \\\"   Wiggle Time\\\",\\n  \\\"  Wiggle Time\\\",\\n  \\\" Wiggle Time\\\",\\n  \\\"Wiggle Time\\\"\\n]\\n```\\n\\n### Notes\\nN/A\",\"isHidden\":false,\"lab\":\"Test.assertSimilar(wiggleString(\\\"hello\\\"), [\\n\\t\\\"hello\\\",\\n\\t\\\" hello\\\",\\n\\t\\\"  hello\\\",\\n\\t\\\"   hello\\\",\\n\\t\\\"    hello\\\",\\n\\t\\\"     hello\\\",\\n\\t\\\"    hello\\\",\\n\\t\\\"   hello\\\",\\n\\t\\\"  hello\\\",\\n\\t\\\" hello\\\",\\n\\t\\\"hello\\\"\\n])\\n\\nTest.assertSimilar(wiggleString(\\\"EDABIT\\\"), [\\n\\t\\\"EDABIT\\\",\\n\\t\\\" EDABIT\\\",\\n\\t\\\"  EDABIT\\\",\\n\\t\\\"   EDABIT\\\",\\n\\t\\\"    EDABIT\\\",\\n\\t\\\"     EDABIT\\\",\\n\\t\\\"      EDABIT\\\",\\n\\t\\\"     EDABIT\\\",\\n\\t\\\"    EDABIT\\\",\\n\\t\\\"   EDABIT\\\",\\n\\t\\\"  EDABIT\\\",\\n\\t\\\" EDABIT\\\",\\n\\t\\\"EDABIT\\\"\\n])\\n\\nTest.assertSimilar(wiggleString(\\\"Wiggle Time\\\"), [\\n\\t\\\"Wiggle Time\\\",\\n\\t\\\" Wiggle Time\\\",\\n\\t\\\"  Wiggle Time\\\",\\n\\t\\\"   Wiggle Time\\\",\\n\\t\\\"    Wiggle Time\\\",\\n\\t\\\"     Wiggle Time\\\",\\n\\t\\\"      Wiggle Time\\\",\\n\\t\\\"       Wiggle Time\\\",\\n\\t\\\"        Wiggle Time\\\",\\n\\t\\\"         Wiggle Time\\\",\\n\\t\\\"          Wiggle Time\\\",\\n\\t\\\"           Wiggle Time\\\",\\n\\t\\\"          Wiggle Time\\\",\\n\\t\\\"         Wiggle Time\\\",\\n\\t\\\"        Wiggle Time\\\",\\n\\t\\\"       Wiggle Time\\\",\\n\\t\\\"      Wiggle Time\\\",\\n\\t\\\"     Wiggle Time\\\",\\n\\t\\\"    Wiggle Time\\\",\\n\\t\\\"   Wiggle Time\\\",\\n\\t\\\"  Wiggle Time\\\",\\n\\t\\\" Wiggle Time\\\",\\n\\t\\\"Wiggle Time\\\"\\n])\\n\\nTest.assertSimilar(wiggleString(\\\"the dog\\\"), [\\\"the dog\\\", \\\" the dog\\\", \\\"  the dog\\\", \\\"   the dog\\\", \\\"    the dog\\\", \\\"     the dog\\\", \\\"      the dog\\\", \\\"       the dog\\\", \\\"      the dog\\\", \\\"     the dog\\\", \\\"    the dog\\\", \\\"   the dog\\\", \\\"  the dog\\\", \\\" the dog\\\", \\\"the dog\\\"])\\nTest.assertSimilar(wiggleString(\\\"wiggle wiggle wiggle\\\"), [\\\"wiggle wiggle wiggle\\\", \\\" wiggle wiggle wiggle\\\", \\\"  wiggle wiggle wiggle\\\", \\\"   wiggle wiggle wiggle\\\", \\\"    wiggle wiggle wiggle\\\", \\\"     wiggle wiggle wiggle\\\", \\\"      wiggle wiggle wiggle\\\", \\\"       wiggle wiggle wiggle\\\", \\\"        wiggle wiggle wiggle\\\", \\\"         wiggle wiggle wiggle\\\", \\\"          wiggle wiggle wiggle\\\", \\\"           wiggle wiggle wiggle\\\", \\\"            wiggle wiggle wiggle\\\", \\\"             wiggle wiggle wiggle\\\", \\\"              wiggle wiggle wiggle\\\", \\\"               wiggle wiggle wiggle\\\", \\\"                wiggle wiggle wiggle\\\", \\\"                 wiggle wiggle wiggle\\\", \\\"                  wiggle wiggle wiggle\\\", \\\"                   wiggle wiggle wiggle\\\", \\\"                    wiggle wiggle wiggle\\\", \\\"                   wiggle wiggle wiggle\\\", \\\"                  wiggle wiggle wiggle\\\", \\\"                 wiggle wiggle wiggle\\\", \\\"                wiggle wiggle wiggle\\\", \\\"               wiggle wiggle wiggle\\\", \\\"              wiggle wiggle wiggle\\\", \\\"             wiggle wiggle wiggle\\\", \\\"            wiggle wiggle wiggle\\\", \\\"           wiggle wiggle wiggle\\\", \\\"          wiggle wiggle wiggle\\\", \\\"         wiggle wiggle wiggle\\\", \\\"        wiggle wiggle wiggle\\\", \\\"       wiggle wiggle wiggle\\\", \\\"      wiggle wiggle wiggle\\\", \\\"     wiggle wiggle wiggle\\\", \\\"    wiggle wiggle wiggle\\\", \\\"   wiggle wiggle wiggle\\\", \\\"  wiggle wiggle wiggle\\\", \\\" wiggle wiggle wiggle\\\", \\\"wiggle wiggle wiggle\\\"])\\nTest.assertSimilar(wiggleString(\\\"Hello World!\\\"), [\\\"Hello World!\\\", \\\" Hello World!\\\", \\\"  Hello World!\\\", \\\"   Hello World!\\\", \\\"    Hello World!\\\", \\\"     Hello World!\\\", \\\"      Hello World!\\\", \\\"       Hello World!\\\", \\\"        Hello World!\\\", \\\"         Hello World!\\\", \\\"          Hello World!\\\", \\\"           Hello World!\\\", \\\"            Hello World!\\\", \\\"           Hello World!\\\", \\\"          Hello World!\\\", \\\"         Hello World!\\\", \\\"        Hello World!\\\", \\\"       Hello World!\\\", \\\"      Hello World!\\\", \\\"     Hello World!\\\", \\\"    Hello World!\\\", \\\"   Hello World!\\\", \\\"  Hello World!\\\", \\\" Hello World!\\\", \\\"Hello World!\\\"])\\nTest.assertSimilar(wiggleString(\\\"Edabit is fun!\\\"), [\\\"Edabit is fun!\\\", \\\" Edabit is fun!\\\", \\\"  Edabit is fun!\\\", \\\"   Edabit is fun!\\\", \\\"    Edabit is fun!\\\", \\\"     Edabit is fun!\\\", \\\"      Edabit is fun!\\\", \\\"       Edabit is fun!\\\", \\\"        Edabit is fun!\\\", \\\"         Edabit is fun!\\\", \\\"          Edabit is fun!\\\", \\\"           Edabit is fun!\\\", \\\"            Edabit is fun!\\\", \\\"             Edabit is fun!\\\", \\\"              Edabit is fun!\\\", \\\"             Edabit is fun!\\\", \\\"            Edabit is fun!\\\", \\\"           Edabit is fun!\\\", \\\"          Edabit is fun!\\\", \\\"         Edabit is fun!\\\", \\\"        Edabit is fun!\\\", \\\"       Edabit is fun!\\\", \\\"      Edabit is fun!\\\", \\\"     Edabit is fun!\\\", \\\"    Edabit is fun!\\\", \\\"   Edabit is fun!\\\", \\\"  Edabit is fun!\\\", \\\" Edabit is fun!\\\", \\\"Edabit is fun!\\\"])\\nTest.assertSimilar(wiggleString(\\\"123456789\\\"), [\\\"123456789\\\", \\\" 123456789\\\", \\\"  123456789\\\", \\\"   123456789\\\", \\\"    123456789\\\", \\\"     123456789\\\", \\\"      123456789\\\", \\\"       123456789\\\", \\\"        123456789\\\", \\\"         123456789\\\", \\\"        123456789\\\", \\\"       123456789\\\", \\\"      123456789\\\", \\\"     123456789\\\", \\\"    123456789\\\", \\\"   123456789\\\", \\\"  123456789\\\", \\\" 123456789\\\", \\\"123456789\\\"])\\nTest.assertSimilar(wiggleString(\\\"qwertyuiop\\\"), [\\\"qwertyuiop\\\", \\\" qwertyuiop\\\", \\\"  qwertyuiop\\\", \\\"   qwertyuiop\\\", \\\"    qwertyuiop\\\", \\\"     qwertyuiop\\\", \\\"      qwertyuiop\\\", \\\"       qwertyuiop\\\", \\\"        qwertyuiop\\\", \\\"         qwertyuiop\\\", \\\"          qwertyuiop\\\", \\\"         qwertyuiop\\\", \\\"        qwertyuiop\\\", \\\"       qwertyuiop\\\", \\\"      qwertyuiop\\\", \\\"     qwertyuiop\\\", \\\"    qwertyuiop\\\", \\\"   qwertyuiop\\\", \\\"  qwertyuiop\\\", \\\" qwertyuiop\\\", \\\"qwertyuiop\\\"])\\nTest.assertSimilar(wiggleString(\\\"python javascript\\\"), [\\\"python javascript\\\", \\\" python javascript\\\", \\\"  python javascript\\\", \\\"   python javascript\\\", \\\"    python javascript\\\", \\\"     python javascript\\\", \\\"      python javascript\\\", \\\"       python javascript\\\", \\\"        python javascript\\\", \\\"         python javascript\\\", \\\"          python javascript\\\", \\\"           python javascript\\\", \\\"            python javascript\\\", \\\"             python javascript\\\", \\\"              python javascript\\\", \\\"               python javascript\\\", \\\"                python javascript\\\", \\\"                 python javascript\\\", \\\"                python javascript\\\", \\\"               python javascript\\\", \\\"              python javascript\\\", \\\"             python javascript\\\", \\\"            python javascript\\\", \\\"           python javascript\\\", \\\"          python javascript\\\", \\\"         python javascript\\\", \\\"        python javascript\\\", \\\"       python javascript\\\", \\\"      python javascript\\\", \\\"     python javascript\\\", \\\"    python javascript\\\", \\\"   python javascript\\\", \\\"  python javascript\\\", \\\" python javascript\\\", \\\"python javascript\\\"])\",\"language\":\"javascript\",\"summary\":\"Create a function that returns an array of the given string but offset by spaces. Here are some more precise instructions:\\n\\nKeep adding spaces on the left until you have the same number of spaces as the word length.\\nThen keep removing spaces until you reach the original word.\\n\\nBelow are some helpful examples!\\n\\nExamples\\nwiggleString(\\\"hello\\\") ➞ [\\n  \\\"hello\\\",\\n  \\\" \",\"tags\":[\"loops\",\"arrays\",\"strings\"],\"timestamp\":{\"$date\":1581885005054},\"title\":\"Wiggled Strings\",\"stats\":{\"completed\":{\"total\":121,\"ratings\":[2,2,2,2,2,1,2,3,1,2,3,3,2,2,3,1,0,2,1,3,0,0,3,2,2,1,3,3,3,2,0,3,3,0,2,3,1,3,2,2,2,2,2,2,3,2,1,3,1,3,0,3,3,2,3,2,3,2,3,3,2,3,2,3,1,3,2,2,3,1,3,2,2,2,1,2,3,3,3,3,2,3,3,3,2,1,2,3,0,3,5,1,0,2,3,3,3,3,2,2,2,2],\"rators\":[\"6BpBQnSGhzgvhXrEy\",\"8BFSTCnoe2QggN64c\",\"Y9Nz9yafaibz54W4o\",\"yjtdwc2AC4jA2RWtn\",\"tyNrtjfTi56j5Hw9b\",\"Ehrta9env9HXyrGbW\",\"xjcWsL2drknC3zPN8\",\"5Zq3aGdvh4LHBvnJL\",\"EGMDcfyfqqMZsN5pu\",\"EjPLq3QSJdGQFJdgW\",\"n5wubRfh6zh8QRymN\",\"FJsvM5yqKuK9yMk9P\",\"YKYLFnGJXesgsxSAY\",\"CuY5BaTCcu7Mp9tDu\",\"xm6gqkRWeXosJrWoi\",\"3gxJoNp59B4eoyyed\",\"cp3X8hk8yNME7qoD9\",\"KcpfY4XZ7fNamyLd3\",\"WNrAvJM47sno2QeWn\",\"4p2sARSZNNnKqjAT6\",\"7JCLyrrY6JYGpocac\",\"CJBPyyfyaEeEo63sb\",\"wNSrKgdvtAtxHgwgH\",\"z5GXzFD9Wwgnm9Kxf\",\"SxqAEMaYcE9Ps9eh6\",\"EAuL56kpyLytw4RcR\",\"8fhCYZxcaHXrwLgKK\",\"jZrX6NtZTqZZHApuH\",\"FK6dksjYDB2R5RRsW\",\"5GmszQFtfcQzTL5kz\",\"g3unxwpmKKJHgLSk2\",\"MrKPbvnDSPzfEeMzG\",\"gHjeeefRwv5hy9uKr\",\"pd8dm7sWLW9cY6dYW\",\"CdJpiqDfdwy9CA4gq\",\"mf8xW5DhPjfXaCEsQ\",\"Hq4eNAgN4DKA4YtwR\",\"yuLxi2qBJvMnwgdgJ\",\"hrMyNCp6vfPZXzWmT\",\"RE4Mm9T6Q9uygAxGS\",\"arHrcAGcjSLiAYbGB\",\"zoDHPoPn9mhXpmka7\",\"2innwjWqxJHo4eRGh\",\"K9aHdd5ReP4JJwNKA\",\"SWbaoFPBAeu6g376j\",\"3aZvfgr2H2WF8Yog2\",\"fMbZnKta63wqpPsqN\",\"NuYBzuKMdMGYZhiqG\",\"Po3v3dHCk6wYGKMwi\",\"uAS9uKs8KQmp8uhqn\",\"byrKwHgawbFgyAcgo\",\"YER6iBcpJCuhgrYDN\",\"EWn8w8P3nNh7knatY\",\"nCvWGvGzn2Rrjm4BD\",\"39JiAZzrxpBGFib5o\",\"oQuMFxud452FMPYyP\",\"a777e8chPvJkY3tKa\",\"FGEeCTorXbX3WvjFW\",\"5ibYDhiazv3svJHiJ\",\"pi76g3eRpnKrhee2a\",\"tuTQhfZC5izTmXEgR\",\"eQXwk5zGckM8tCWYH\",\"AasGs8AeX9Lcb9xJn\",\"2ZFoLTxcCARhwc8xX\",\"a7LBurCmz5n6gECbv\",\"Es4eX2stRpyoXeC7f\",\"NbTsT2f98n35Kj3j5\",\"MT26yxj3YX95DsyLj\",\"sBcsrC5paZm9nxjot\",\"mHT2bJb5SByfJ8yKS\",\"zNN2fW2pJGpTxBgzx\",\"3AoqMu5gB99yjbKNY\",\"2QXWnaHfR4ckmeKuz\",\"PytNZK9mNiRiZxPrm\",\"Fhwnime223hGiaHaA\",\"Nua6T3dBurBy3Qfg9\",\"8raviPK67KKxzQWcF\",\"r7mZLgpQWzRiGddL5\",\"buX4mCQhtXCfBjeno\",\"65dbBZynphj53nXqA\",\"QRv96jmNaYsWkxQEG\",\"aEm3Wvj2rFYRL8Lrb\",\"p5ZshR8zhTqmdhKDc\",\"4Xv87xmdSnpYhi8hz\",\"BdvdJYwHZr7JpkHsn\",\"CNc6rmwhbxkxEhHAp\",\"kp2ZbCewZJAbfd7xv\",\"fuKrbHrj9KMJS9HX8\",\"zw7g7T8wE5R5CBhXr\",\"tAF9Gf6PiGogbZuWs\",\"8BJyXvRWcrvN3nttS\",\"qWR7eXxBiNee22A5u\",\"Nb6LYPoQP6KJZt8mz\",\"g4NCSxxHqHCGMpWwT\",\"DPi9QGLctq2y76KuE\",\"srJ34BaybkQh3qRkM\",\"bX6tpTCjwoi6XMMbK\",\"JsRTAwWK7Nikj4sKA\",\"AFfw7cGg83uYk2Miy\",\"6vfjruFp8ZpRSi3AT\",\"J7d397iB5GuWRAMfg\",\"M4vq8ATaS9Jg5X7iP\",\"wJTDDTE3TrmSXKP4d\",\"NGvCPuMiAP3xrRLfB\",\"Xk2g4CNFAnYcvxiSr\",\"Ya3eHgs8x3unZRLpb\",\"oDtGiNqDMHmhHE3J8\",\"eWoi3eexfQ2iaapBA\",\"ERKhKvZtbX7cXNRBP\",\"zoSGvhHbsBykZTuDc\"],\"quality\":[5,5,3,5,5,5,3,5,5,5,5,4,4]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"quality\":4.538461538461538,\"family\":[{\"_id\":\"ACAiMYCvcLWxDDE6W\",\"language\":\"cpp\"},{\"_id\":\"jNanQ3zKkCdA9ANJw\",\"language\":\"javascript\"},{\"_id\":\"xYRNzJB7kAXXEQSdF\",\"language\":\"python3\"},{\"_id\":\"BomLM5DBRpasZ34Es\",\"language\":\"ruby\"}]}}"]