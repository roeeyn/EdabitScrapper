a["{\"msg\":\"result\",\"id\":\"1976\",\"result\":{\"_id\":\"uaK2bBBZby58kXbGe\",\"author\":\"Ruud Peter Boelens\",\"authorId\":\"Akq3fQcPRgPrWfsye\",\"code\":\"function weHaveHouse(hh, hw, hd, rh) {\\n\\t\\n}\",\"difficulty\":2.789473684210526,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"kpvRcjS9ZFoiFG74H\",\"instructions\":\"In the garden, we have a house. We don't know how big the house is going to get. The garden is 50' x 50'. If you want to walk around the house, you'll need 3 feet so the house cannot be bigger than the width & depth of the garden minus the path to walk around it.\\n\\n![We Have a House](https://edabit-challenges.s3.amazonaws.com/we_have_house.png \\\"We Have a House\\\")\\n\\nIn this example you can see the arguments your function is going to get (in **red**). The measurements of the windows + door as well as the dark rim (against rain damage) are always the same (in **blue**). We put **One door** in the front and **Two windows** in each wall.\\n\\nWe don't have permission to build higher than 20'. The area around the windows and door cannot be smaller than 1 foot except under the door obviously. It is possible to have a flat roof.\\n\\nCreate a function that takes four arguments and returns the area of **light yellow** paint and **dark gray** paint in a string as square feet. Assuming the coverage of the paint is perfect and you'll only need one layer of paint.\\n\\n### Examples\\n```\\nweHaveHouse(8, 30, 32, 8) ➞ \\\"Yellow: 873, Gray: 242\\\"\\n\\nweHaveHouse(9, 14, 20, 9) ➞ \\\"House too small.\\\"\\n\\nweHaveHouse(9, 38, 36, 9) ➞ \\\"Yellow: 1261, Gray: 290\\\"\\n\\nweHaveHouse(10, 31, 30, 11) ➞ \\\"No permission.\\\"\\n```\\n\\n### Notes\\n- If the house is too big for the garden, return `\\\"House too big.\\\"`\\n- If the house is too high, return `\\\"No permission.\\\"`\\n- If the house is too small (for the windows and door to fit), return `\\\"House too small.\\\"`\",\"lab\":\"Test.assertEquals(weHaveHouse(8, 30, 32, 8), \\\"Yellow: 873, Gray: 242\\\")\\nTest.assertEquals(weHaveHouse(10, 31, 30, 11), \\\"No permission.\\\")\\nTest.assertEquals(weHaveHouse(8, 30, 30, 8), \\\"Yellow: 849, Gray: 234\\\")\\nTest.assertEquals(weHaveHouse(9, 20, 18, 8), \\\"Yellow: 581, Gray: 146\\\")\\nTest.assertEquals(weHaveHouse(9, 14, 20, 9), \\\"House too small.\\\")\\nTest.assertEquals(weHaveHouse(8, 16, 12, 8), \\\"Yellow: 353, Gray: 106\\\")\\nTest.assertEquals(weHaveHouse(10, 25, 25, 0), \\\"Yellow: 689, Gray: 194\\\")\\nTest.assertEquals(weHaveHouse(8, 45, 42, 8), \\\"House too big.\\\")\\nTest.assertEquals(weHaveHouse(10, 40, 40, 10), \\\"Yellow: 1569, Gray: 314\\\")\\nTest.assertEquals(weHaveHouse(10, 15, 10, 7), \\\"House too small.\\\")\\nTest.assertEquals(weHaveHouse(9, 38, 36, 9), \\\"Yellow: 1267, Gray: 290\\\")\\nTest.assertEquals(weHaveHouse(8, 15, 12, 6), \\\"Yellow: 303, Gray: 102\\\")\\nTest.assertEquals(weHaveHouse(8, 30, 45, 6), \\\"House too big.\\\")\\nTest.assertEquals(weHaveHouse(9, 20, 14, 8), \\\"Yellow: 525, Gray: 130\\\")\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[3,3,3,3,3,3,2,2,3,2,4,2,3,3,0,5,3,5,1],\"rators\":[\"Akq3fQcPRgPrWfsye\",\"65dbBZynphj53nXqA\",\"n5wubRfh6zh8QRymN\",\"yjtdwc2AC4jA2RWtn\",\"FvWKuSqHdXZ7HM2sD\",\"FJsvM5yqKuK9yMk9P\",\"cRpaCxYRmGcN3Nsoj\",\"JGBCMpnbbi5ztuFoX\",\"aEm3Wvj2rFYRL8Lrb\",\"pGh7WykiPe26fHJYv\",\"EFj9ktRtcL78q7h7B\",\"EXCpDkk5BLif3i5YE\",\"bXaGdBM8FBLHf7N6Y\",\"p6ESyNjSyY6QbwMDW\"],\"total\":16,\"quality\":[]},\"flags\":0},\"subscribers\":[\"Akq3fQcPRgPrWfsye\"],\"summary\":\"In the garden, we have a house. We don't know how big the house is going to get. The garden is 50' x 50'. If you want to walk around the house, you'll need 3 feet so the house cannot be bigger than the width & depth of the garden minus the path to walk around it.\\n\\nWe Have a House\\n\\nIn this example you can see the arguments your function is going to get (in red)\",\"tags\":[\"algorithms\",\"math\",\"numbers\"],\"timestamp\":{\"$date\":1561631096248},\"title\":\"We Have a House\",\"isHidden\":false,\"quality\":0,\"family\":[{\"_id\":\"ZuAiazhSrqsPHqDCg\",\"language\":\"cpp\"},{\"_id\":\"eaBDSkauqgroxSYNk\",\"language\":\"csharp\"},{\"_id\":\"YMT2d6RFcsvNv58cd\",\"language\":\"java\"},{\"_id\":\"uaK2bBBZby58kXbGe\",\"language\":\"javascript\"},{\"_id\":\"hfBoDAN8YMz7cxGqB\",\"language\":\"python3\"},{\"_id\":\"9sxFMgXD23vhu279P\",\"language\":\"ruby\"},{\"_id\":\"wfXLs7WfCSwdAjq9x\",\"language\":\"swift\"}]}}"]