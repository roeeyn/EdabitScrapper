a["{\"msg\":\"result\",\"id\":\"1965\",\"result\":{\"_id\":\"z9JujCTeTM69ssLZa\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"function almostSorted(arr) {\\n\\t\\n}\",\"difficulty\":2.7761194029850746,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"mmL6drpwFz83vPQZF\",\"instructions\":\"An **almost-sorted sequence** is a sequence that is **strictly increasing** or **strictly decreasing** if you remove a **single element** from the array (no more, no less). Write a function that returns `true` if an array is **almost-sorted**, and `false` otherwise.\\n\\nFor example, if you remove `80` from the first example, it is perfectly sorted in ascending order. Similarly, if you remove `7` from the second example, it is perfectly sorted in descending order.\\n\\n### Examples\\n```\\nalmostSorted([1, 3, 5, 9, 11, 80, 15, 33, 37, 41] ) ➞ true\\n\\nalmostSorted([6, 5, 4, 7, 3]) ➞ true\\n\\nalmostSorted([6, 4, 2, 0]) ➞ false\\n// Sequence is already sorted.\\n\\nalmostSorted([7, 8, 9, 3, 10, 11, 12, 2]) ➞ false\\n// Requires removal of more than 1 item.\\n```\\n\\n### Notes\\n- Completely sorted arrays should return `false`.\\n- Arrays will always be **> 3** in length (to remove ambiguity).\\n- Numbers in each input array will be unique - don't worry about \\\"ties\\\".\",\"lab\":\"Test.assertEquals(almostSorted([1, 3, 5, 9, 11, 80, 15, 33, 37, 41]), true, 'remove 80 should work')\\nTest.assertEquals(almostSorted([6, 5, 4, 7, 3]), true, 'remove 7 should work')\\nTest.assertEquals(almostSorted([6, 4, 2, 0]), false, 'numbers should not be completely sorted')\\nTest.assertEquals(almostSorted([7, 8, 9, 3, 10, 11, 12, 2]), false)\\nTest.assertEquals(almostSorted([9, 1, 8, 2]), true, 'remove 1 should work')\\nTest.assertEquals(almostSorted([1, 3, 9, 44, 15, 17, 33]), true, 'remove 44 should work')\\nTest.assertEquals(almostSorted([5, 4, 3, 2, -1, 0]), true, 'remove -1 should work')\\nTest.assertEquals(almostSorted([5, 2, 3, 4]), true, 'remove 5 should work')\\nTest.assertEquals(almostSorted([8, 3, 7, 4, 9]), false)\\nTest.assertEquals(almostSorted([-3, -4, -5, -7]), false, 'numbers should not be completely sorted')\\nTest.assertEquals(almostSorted([5, 6, 7, 8]), false, 'numbers should not be completed sorted')\\nTest.assertEquals(almostSorted([9, 1, 8, 2, 7, 3]), false)\",\"language\":\"javascript\",\"summary\":\"An almost-sorted sequence is a sequence that is strictly increasing or strictly decreasing if you remove a single element from the array (no more, no less). Write a function that returns true if an array is almost-sorted, and false otherwise.\\n\\nFor example, if you remove 80 from the first example, it is perfectly sorted in ascending order. Similarly, if you rem\",\"tags\":[\"arrays\",\"validation\",\"sorting\"],\"timestamp\":{\"$date\":1553110983475},\"title\":\"Almost Sorted Sequence\",\"stats\":{\"completed\":{\"total\":70,\"ratings\":[2,2,2,2,2,2,2,2,2,2,2,3,2,3,3,2,3,3,3,3,2,3,2,4,0,3,3,3,3,4,4,3,3,4,2,3,3,3,3,0,1,4,4,3,1,3,5,3,4,2,4,2,2,2,2,3,2,4,4,4,1,4,4,5,3,4,4],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"65dbBZynphj53nXqA\",\"2innwjWqxJHo4eRGh\",\"SDtZFL5NzAoCPofXk\",\"8xuMMGF7fyQWL2fKH\",\"Hz8mnq7xFJZKLymTh\",\"n5wubRfh6zh8QRymN\",\"EWn8w8P3nNh7knatY\",\"EjPLq3QSJdGQFJdgW\",\"jJ9njGvHZaHTsqAJs\",\"3E4u9X3MYujmBDF5y\",\"yjtdwc2AC4jA2RWtn\",\"5Zq3aGdvh4LHBvnJL\",\"AasGs8AeX9Lcb9xJn\",\"yuLxi2qBJvMnwgdgJ\",\"DHwbkbzYNpmkSFT7u\",\"4WgxcywfLRdxZ4gzP\",\"MEZNjeGd7APtvA3SL\",\"JGBCMpnbbi5ztuFoX\",\"pi76g3eRpnKrhee2a\",\"bJBaDQCSYnoeeXNAd\",\"kZiYouDDiciG3bHhh\",\"FJsvM5yqKuK9yMk9P\",\"eS876Rkwf2y38nt4a\",\"ZtniSFrgec4oj6Pxm\",\"8YJp93zsQWop6af4o\",\"FiK2ruyH8KeHLAgoA\",\"tAF9Gf6PiGogbZuWs\",\"nBo2LLuSMeEgd5f6G\",\"sBcsrC5paZm9nxjot\",\"h4jFmtbFn92eA4649\",\"zMCXYFZSsviDCvjnY\",\"NchnDcEmsLTeFZ4FH\",\"Es4eX2stRpyoXeC7f\",\"LwqqprQjQG2WTStga\",\"Kc3SDafimwpZWrATJ\",\"8raviPK67KKxzQWcF\",\"7TXyMDHFYjna3dyPb\",\"E6DBfkTgHuPsDWdG8\",\"a777e8chPvJkY3tKa\",\"mHT2bJb5SByfJ8yKS\",\"eFjGhq7C7bBKXjT6X\",\"M4vq8ATaS9Jg5X7iP\",\"QMq9dcvgpyNK6RAze\",\"BuGWvGZGiJELoMy5G\",\"aEm3Wvj2rFYRL8Lrb\",\"rC7kdm3SsSX9udEQk\",\"ttuGK7od8simjgmCJ\",\"4Xv87xmdSnpYhi8hz\",\"ffB8T76Ye9ygL6QZZ\",\"bXaGdBM8FBLHf7N6Y\",\"nphNJCcuiQKh8bNHq\",\"buX4mCQhtXCfBjeno\",\"ixabGTE2JSw9QLbJS\",\"pGh7WykiPe26fHJYv\",\"9dAB9yF2rukm22EnA\",\"Ek9PiwGewEGH6fcqz\",\"BTdKRxKHXHDDD4934\",\"CNc6rmwhbxkxEhHAp\",\"Xk2g4CNFAnYcvxiSr\",\"c7uBxu2rgY77H5d79\",\"DDZKa8qagxNjg2im7\",\"8BJyXvRWcrvN3nttS\",\"DPi9QGLctq2y76KuE\",\"s678Wirfor5uYL5T6\",\"oDtGiNqDMHmhHE3J8\"],\"quality\":[5,5,5,5,5,5,3,5]},\"tests\":{\"score\":0,\"voters\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"voters\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"isHidden\":false,\"quality\":4.75,\"family\":[{\"_id\":\"bWHgeDP2DWzdawPip\",\"language\":\"cpp\"},{\"_id\":\"z9JujCTeTM69ssLZa\",\"language\":\"javascript\"},{\"_id\":\"HBuWYyh5YCmDKF4uH\",\"language\":\"python3\"},{\"_id\":\"soRGsdZbvokM5whqd\",\"language\":\"ruby\"}]}}"]