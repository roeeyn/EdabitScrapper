a["{\"msg\":\"result\",\"id\":\"225\",\"result\":{\"_id\":\"F3Jdoa5YBSboP4ucb\",\"author\":\"Steven Bonfadini\",\"authorId\":\"3QmTLSKrXrH4B5DMF\",\"code\":\"function nTablesPlusOne(n) {\\n\\t\\n}\",\"difficulty\":0.7432432432432432,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"qXdTLsdysojYHiujN\",\"instructions\":\"Create a function that takes a number `n` and returns the first 10 multiples of `n` with 1 added to it, separated by commas.\\n\\n### Examples\\n```\\nnTablesPlusOne(7) ➞ \\\"8,15,22,29,36,43,50,57,64,71\\\"\\n\\nnTablesPlusOne(1) ➞ \\\"2,3,4,5,6,7,8,9,10,11\\\"\\n\\nnTablesPlusOne(3) ➞ \\\"4,7,10,13,16,19,22,25,28,31\\\"\\n```\\n\\n### Notes\\nThere is no comma after the last number.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertEquals(nTablesPlusOne(1), \\\"2,3,4,5,6,7,8,9,10,11\\\")\\nTest.assertEquals(nTablesPlusOne(7), \\\"8,15,22,29,36,43,50,57,64,71\\\")\\nTest.assertEquals(nTablesPlusOne(134), \\\"135,269,403,537,671,805,939,1073,1207,1341\\\")\",\"language\":\"javascript\",\"quality\":4.701030927835052,\"stats\":{\"completed\":{\"ratings\":[0,0,0,0,0,1,0,0,1,2,1,0,1,0,1,1,1,0,0,1,0,0,0,0,0,1,0,1,0,0,0,1,0,2,0,0,1,0,0,2,0,0,3,2,0,0,0,1,0,0,1,1,0,0,1,1,0,0,1,2,1,2,1,0,2,0,0,1,2,0,0,1,1,1,0,2,0,1,2,0,1,0,2,0,0,1,0,1,1,0,1,0,2,2,1,0,0,2,1,0,0,1,0,0,0,1,0,1,1,1,0,2,0,0,2,2,0,0,1,2,0,0,2,0,1,0,1,2,2,2,1,2,2,1,0,1,0,1,0,0,1,3,2,2,0,1,2,0,0,0,0,0,1,0,1,2,2,1,0,1,0,0,0,0,0,0,0,0,1,2,2,0,1,1,0,0,0,1,1,0,2,1,1,1,0,2,1,2,2,1,0,0,1,0,1,0,0,1,2,1,0,1,0,0,1,0,2,1,0,1,1,1,1,1,2,1,2,2,2,2,0,2],\"quality\":[5,5,5,4,5,5,5,5,5,5,5,3,5,5,5,4,4,5,4,5,5,4,5,5,5,4,5,5,5,5,5,5,5,5,4,4,1,5,5,5,5,5,5,5,5,5,5,5,5,4,5,4,5,2,5,5,5,5,5,5,5,5,5,5,5,3,5,4,4,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,3,5,5,5,5,5,5,5,4,5,5,4,4],\"rators\":[\"cgCQDs9i7yChKeAjE\",\"3QmTLSKrXrH4B5DMF\",\"Dbd7hRAJG2ZRi5GSx\",\"2Qk2mFu9HBFzrB24i\",\"oDtGiNqDMHmhHE3J8\",\"KZK2CySG9Nje2TQr2\",\"gJydjaRo6XEpNLeYs\",\"QRv96jmNaYsWkxQEG\",\"Q7Yxda7dqKeYPs2Db\",\"J7d397iB5GuWRAMfg\",\"9dr7yro6eZkTaEB3M\",\"CNc6rmwhbxkxEhHAp\",\"7gZKfvwaeqsGKXMEN\",\"srJ34BaybkQh3qRkM\",\"3WtHp4MBzciz4AE8M\",\"m6qKkBY4aPWziyJTj\",\"yjtdwc2AC4jA2RWtn\",\"SNiJRRosrmSWssLj4\",\"g4NCSxxHqHCGMpWwT\",\"z5ebtimXwFFJdYxoa\",\"asdxrWCXpZoxjriu6\",\"nXToJ5kpsRfi4nyw2\",\"y27evXcPMED8e5EDm\",\"u9cRf5kvtpRB5ffB3\",\"pi76g3eRpnKrhee2a\",\"QGjY3hgPYPMmMjc7j\",\"RtPhDuwmvWNHiBxmG\",\"8EJ4j2fcfjTJ7Zrzu\",\"NHf94xfAceb7Bzezw\",\"DMNAcHFGaDNzhCAmF\",\"aGfsguxqTtCwTRC5H\",\"oyB4Wr4EeZnoDaa8B\",\"isE3JKStQSSttcbRh\",\"YS2vn4mFRcHprdtWC\",\"j5FSQCayX3By73CCw\",\"zrQb3Am7u5fAkqsd5\",\"rgmhomEQqsnngdSJZ\",\"buX4mCQhtXCfBjeno\",\"Jkq3BoebJTaMW9y4x\",\"FRN2W8RYpJ6GPhgRy\",\"zNN2fW2pJGpTxBgzx\",\"x2Cz7S8rCKJqCE3Xe\",\"NJCmkbH5e7qbtZYhd\",\"RQwuHHy4rBgaQCLte\",\"7RJhrp4z9t9g4y5BK\",\"s2Y76rR2h2fPKibsK\",\"GwLzzrCFdYfQXhAWN\",\"EbQxG3vkzyrFJ2EKR\",\"8BJyXvRWcrvN3nttS\",\"vGKxRcDYDsXzTQuEQ\",\"jnyub52Fi79drGvow\",\"tnYXC3cGqycxRzCgT\",\"eQXwk5zGckM8tCWYH\",\"pv3ypKoqvXxTzTAdz\",\"ZKcTTCHtA9h5jq5Xq\",\"cwPxAZ6xi33X2YpQ5\",\"mHT2bJb5SByfJ8yKS\",\"FGEeCTorXbX3WvjFW\",\"jcPZ5ySXseCB7Ec3x\",\"pdGuqmMyeN4wZaWwv\",\"Po3v3dHCk6wYGKMwi\",\"MATsqGvdZgvQ4JwCo\",\"QgynNjKvNCQG2o3qF\",\"K45zPJxsABuA3WSyj\",\"Ya3eHgs8x3unZRLpb\",\"rbPEA2TFQw837Hmqg\",\"tmB8Xatt4AstQSWWv\",\"PAnur8xLTthNL3epT\",\"6BpBQnSGhzgvhXrEy\",\"PAzNgJF54C2mYPkR9\",\"RE4Mm9T6Q9uygAxGS\",\"65dbBZynphj53nXqA\",\"9qoWqLcHGiDX429rE\",\"sscsfdj4ygKcjH8PG\",\"ihTSN4G98CHRmZqra\",\"gDGbpENBYzvzDmg5n\",\"p6qLK4qS2dnFzDA7k\",\"AFfw7cGg83uYk2Miy\",\"PGCDJpQMN8Sjn9Gm6\",\"zJTXDTdbwnopRazGo\",\"7q8oBsCHwn48Ppnrq\",\"4wR64Jaibcom7tbYf\",\"ThKRnrQ3c9wDYiAq7\",\"pPpmP7xeJzGgK362R\",\"4zp3tk5kKMBfZe2Ze\",\"z5GXzFD9Wwgnm9Kxf\",\"6BFP6MA58afErnoKC\",\"uTHmHD2AyiFD9AjLq\",\"PAdbENavL429zyMdy\",\"k6QB6fzbj4LsWktRL\",\"evTTY9hwrtogaNxXn\",\"QWjsXnLaJ7xfL3Amq\",\"kcjvgRk4iqMcvmo9H\",\"zw7g7T8wE5R5CBhXr\",\"Es4eX2stRpyoXeC7f\",\"9HZbxzkzgz4CvePtv\",\"hhWiQDgAJA2m3MhDA\",\"CJBPyyfyaEeEo63sb\",\"XujK3rHd3JcM9TLJy\",\"NG8PWBSjsM8mMhQEq\",\"ttuGK7od8simjgmCJ\",\"7kENXQQ8ABiPGfBRD\",\"3Lu6AFRhXvKnE9zTY\",\"jyCByAZwu576xDwEL\",\"ACCFtQJzwpbmpaBT5\",\"qXx3X8coFNd6QdRCh\",\"Nb6LYPoQP6KJZt8mz\",\"427wjjp453HFTG4Xx\",\"dSdEsozG9enhEvZNN\",\"cp3X8hk8yNME7qoD9\",\"LJoLLideh5Aw93oSx\",\"e9Cknxbx6o7Nb6REs\",\"3zQJbLdCGoqCAwyMF\",\"aLKHc5k4sM3GijhmE\",\"Aaq8qMsNtxp7LMJHB\",\"djpMD2mX9tkhE6dke\",\"oEx2wEik5AMmg5ipa\",\"qFJpEDM2Ep6v4tqPz\",\"dQd664XYR6QKHFvHW\",\"ZNYXpzJhiCbLkPCJw\",\"jtzNdgDCzsekkdpxA\",\"ghzSC9JHRNwMPEjDB\",\"jpSy4qhuDNwPk9mrf\",\"JKehHwafchXjnnRNF\",\"Yp7uvStL97cC9fKkY\",\"dSa4K4DM6hiksarHv\",\"6oNkXuuDRBTFvpr8y\",\"hwdJZXT3sgEK9uo2s\",\"sLwy2wCFYHkjjZgvT\",\"yrMph4ZYqrmHFJ2bj\",\"k8rMJnaejG3dX4ute\",\"HCfkcKnPs9mrJojdG\",\"5t5SrAsKn8QQSNnEs\",\"hT8T426rinDzZytaC\",\"xrqK8P7zH83wjo3L4\",\"MLozTdL5Ld3r2LWq7\",\"HKBtF8zxtEimcQRih\",\"mpLFbFKjY6u3nsDMv\",\"M4vq8ATaS9Jg5X7iP\",\"2QNs5hQaDgo792ztf\",\"szQg8dxKNNre3v3Jk\",\"Eboa2WpmPMFhLAudw\",\"vg6AMRWnqsgPFu2Ka\",\"c7uBxu2rgY77H5d79\",\"ckAZGE4gQpjWR852a\",\"aWNggJDngk9DhC4Sg\",\"N3CNtWZz4ovJfH9Aw\",\"tAF9Gf6PiGogbZuWs\",\"iqtpazNSCBNgDvQFa\",\"c3ixxp9yXLsvFuJdj\",\"STipuJs6kBvPqqsSE\",\"dLXJqQ879kYhpYS6Z\",\"69H7D5m2bhePg7YKz\",\"nyh73Tr6GhqAat78g\",\"w8geFfsnhEfLPjBCq\",\"fbENjdwBMsPH3M7f4\",\"y2cf8jaBdN5nBdXpa\",\"4dZPNCZjG2ZiQhSDi\",\"6NYwsqmXzPwPKHLkB\",\"z47JaNrQMgvuPx5HE\",\"B9LYirjMoidrmEtQa\",\"vEapufGjE49e5JSch\",\"XrqNzJ2FRG8HnGiR6\",\"3j3yukFjbtAXMk6TE\",\"vKch2w3b4keMd84jj\",\"98499DDQYDLiQSxkK\",\"zd9FLSzsGz3evKafy\",\"N9bFAQPbrPtZ4awNo\",\"aEm3Wvj2rFYRL8Lrb\",\"BkC7GMLEC5Ep3Cdbq\",\"QHiEYtz3tX3s9nETo\",\"JW5J6sdJHAmDmfWnE\",\"sN2JyFeJCwfwwHPwF\",\"qxvW9WuX3NbvCG8tE\",\"KypQdzThzogKXwkXE\",\"Xj6R2zqhgumffQCAN\",\"SDfksYvDA9CJKdzqP\",\"2a56F4KyQHRgTubPL\",\"vB88fCn7Ke9osRdZx\",\"Ef3McfqD44hj4Est9\",\"P2vAyWNH3wjoP5tXc\",\"AxZpaHuZptKWTQj8y\",\"HduWrqt8YcQ2B5PWu\",\"RhRWSzM7MKeQ2WLMx\",\"Swb2jDnZjviDXsQvB\",\"vdrDCxMWpqCY3yxfj\",\"atqvcc9d9dJNDXyYY\",\"rhhGJj3s9pMzzfpan\",\"BkmdEgH8HgsDpEWER\",\"etKaPYBW5AfmY5zxe\",\"5nhmyqLy8M2Yn2HMR\",\"2cdvd8yuPLSwvGj9w\",\"ahxmaYtSDuZmhrMBZ\",\"8NvGXadvQEppXXZD7\",\"GxABy7LkQ5YRmqowE\",\"gFEpzrgWhzCZHeifj\",\"ieMF2hfPs33aNjFWN\",\"ZK6YmYMsfwXYtaZ9P\",\"mER4kEsRRxwbFgPRC\",\"JnYehNpm7BvefLuee\",\"AasGs8AeX9Lcb9xJn\",\"LPdouuyWXCqvfDd65\",\"kwN6aSYvF7R4x8kbJ\",\"ceMycDhXzsRojnr9F\",\"86kMtj2c6DG7paeqg\",\"8op7s67jE2nYdo4js\",\"GJgQQ8WdTY6MgScc6\",\"9pzFiFK3ANLjQfnr2\",\"7wtuhPesfhcYsfZaZ\",\"Q6gEE9dG8ERy2Xu3c\",\"5kMuNZuxiFcNRDkG4\",\"rzzFkBdQWcRjH2eKi\",\"TWhcGs8Tpt3Gua5Wi\",\"C9LKGu2g5hSijvDzA\",\"Ja4AXg3n8sMddBPn5\",\"SpzAprfWq9EYZcjqa\",\"2tCCFm5iefjrRSaxv\",\"Pkp6YEMajsinJAe3B\",\"wb4FomfGK9F9yyrQT\",\"7LyD6Cm7N2BrQe4di\",\"2cq2HYsJJEcPWuqdz\",\"vmad5Pz6mu3CRt22J\",\"Cx5pSYgnMXKoyWbnr\",\"EsYKpvPGPnYN4jfTm\",\"z6rWbk4FWtqs7qHvm\",\"vic9SZ9qqj9WhRkbd\",\"jyoLggHk8xQKZuoQC\",\"tseyDEv9zaHBMvLL3\",\"2ptN2mhjFwFcHyPZd\",\"4fjSgcqhQQZM2ZFRP\",\"2TLngGdowbHujqTBa\",\"gKhGony2qmzMdKBHv\",\"N2wnZXkhDH86mgjQ8\",\"BghXDk97iRM34suMN\",\"jE4ci5yYHPKZTrrbf\",\"jSKbvkb6T6sNsjYYE\",\"kqd3cgnP2yBTj5pSv\",\"bfYmA3LMvhSrK59cn\",\"8PWe4RLFk3MRvbn68\",\"Zk7zYsonf4TQ6d27R\",\"PC3pLs36zNzpRDSuE\",\"kzKScgma9NnX6YwAs\",\"QAZ5DGaWWYhku4BNz\",\"34bE6mric984YYLZQ\",\"Xjx9eRvHSpwffg9Hb\",\"H3yM3F3mukfdq9fit\",\"wePMNuyyzZH2TnyHZ\",\"ddK4zymKDYAikiMzc\",\"QJqntLLpkx72XhQEz\",\"Zp93Tit7CTRdkCMqp\",\"w2HKFKMa8FPDBT2wr\",\"sMcFMPkMJC4Kh6ymj\",\"BBHKgNQBKjnzoGsew\",\"Akq3fQcPRgPrWfsye\",\"cR3ibTMxLyEdDFCHY\",\"3LiSLdtN58n46NEqg\",\"8FJxEKP2qpm76E9Zd\",\"sgjcbfroKXPSSDob8\",\"RahovDytzL2Q3fAYP\",\"WpNHMgfjZE8aNN2MP\",\"75NY7vqimaATzRdAX\",\"nC4sPB69yYuTSks9T\",\"qvCppNAZjAkNdBSu6\",\"fccfTyHBaoFGEaKxh\",\"5LDvZHCDJqePeBrCg\",\"5eDE9KCDnDnqBqLEK\",\"QKaNJmXgBMsTmig6S\",\"9XnGoq9Tv6ut3zTtH\",\"Afnps7TJQuS9sipMb\",\"sHjfbGQGLHE6JR6qu\",\"eoaYuYy5ncBaon3Zj\",\"v2w9GN4jHP2fgYdeE\",\"opcrDAS4AgXqrJXnb\",\"qjd7Y3B7nNxdx5PgM\",\"oaJbwGAbtpgYhMEgd\",\"ry4H2ENhxurrwSzbx\",\"LPZ2QKCoB8q6rG25c\",\"Erbux72p3mqafJswc\",\"DgtqioAoutLgxwtX8\",\"CdXigydGTBLgA577m\",\"dXT6y8AyktczWQsFp\",\"4WYjScmBWK9eXRzvd\",\"T6Rm8mREPMZSftzrC\",\"CHvzhtXnv8HTbPQ56\",\"vpoTHSqFwCb5jmST9\",\"Xfw7m79PdroRJimLN\",\"pwFeDFLpLi6FTxekc\",\"QfmeLsicXT49NGouo\",\"YcCLwitFMAEJSnxAW\",\"NJuBx55XXbaAjaiwX\",\"ae49XAzsG7fGdyC6z\",\"6vdn7gegY7xXxYCbe\",\"ey7weiXtrrTWSnjtJ\",\"qgtso8jfXRD52Th7C\",\"t4ci2PC2wYh53kENW\",\"ySNimfwMcCFvEjkN7\",\"dfSWg8CDDMJyY8RHk\",\"DPpSwhhiuF4Y9YR2i\",\"DdBQB9pTRjwF8gx7i\",\"kAfXgLMWe4WH8gY6Z\",\"BejNPoP3n29sXsLP5\",\"ttfeEwhaXwRfDjjsA\",\"QHqP6RvkbCZiws9Qf\",\"Kpg7WT67y25y4t7Eo\",\"ndqer7WHSQypvCsfo\",\"8Rs7d8BAz6QQN2rjd\",\"iTDZTaTYMy9P8Qqiz\",\"prripzcApLp7q4hkr\",\"fFQGkXczqyNdcH9N7\",\"9JPCL9dtKwDERRXDZ\",\"sj8yRK9uzJ5LLZABJ\",\"tCkiGCRsq7CJ8GTtu\",\"FJsvM5yqKuK9yMk9P\",\"6ua6w8vYDMAHGyD9q\"],\"total\":335},\"flags\":0},\"summary\":\"Create a function that takes a number n and returns the first 10 multiples of n with 1 added to it, separated by commas.\\n\\nExamples\\nnTablesPlusOne(7) ➞ \\\"8,15,22,29,36,43,50,57,64,71\\\"\\n\\nnTablesPlusOne(1) ➞ \\\"2,3,4,5,6,7,8,9,10,11\\\"\\n\\nnTablesPlusOne(3) ➞ \\\"4,7,10,13,16,19,22,25,28,31\\\"\\n\\nNotes\\nThere is no comma after the last number.\",\"tags\":[\"algorithms\",\"math\",\"numbers\",\"loops\"],\"timestamp\":{\"$date\":1611802160971},\"title\":\"N Tables + 1\",\"family\":[{\"_id\":\"aaoCYtfkZstFXTtLE\",\"language\":\"cpp\"},{\"_id\":\"F3Jdoa5YBSboP4ucb\",\"language\":\"javascript\"},{\"_id\":\"aQWEQDoWiNbryG8xs\",\"language\":\"python3\"},{\"_id\":\"tB93PMvYyuHA5HdDq\",\"language\":\"ruby\"}]}}"]