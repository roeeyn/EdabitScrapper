a["{\"msg\":\"result\",\"id\":\"1066\",\"result\":{\"_id\":\"4hyR7qsvSRCLBXDCz\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"function canPlay(hand, face) {\\n\\t\\n}\",\"difficulty\":1.7228915662650603,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"qm5Wgp5EcNYfkfFxY\",\"instructions\":\"This question is inspired by the popular Uno card game.\\n\\nWrite a function that takes in two arguments: (1) a player's current hand and (2) the current face-up card on the table. The function will return `true` if the player can make a play, or `false` if the player has to draw from the deck.\\n\\nA player can make a play if either:\\n\\n- They have a card that is the same **color** as the face-up card.\\n- They have a card that is the same **number** as the face-up card.\\n\\n```\\ncanPlay([\\\"yellow 3\\\", \\\"yellow 7\\\", \\\"blue 8\\\", \\\"red 9\\\", \\\"red 2\\\"], \\\"red 1\\\") => true\\n// Since the player has two red cards, and the face-up card is red.\\n\\ncanPlay([\\\"yellow 3\\\", \\\"yellow 7\\\"], \\\"blue 7\\\") => true\\n// Since the player has a 7, and the face-up card is a 7.\\n```\\n\\n### Examples\\n```\\ncanPlay([\\\"yellow 3\\\", \\\"yellow 5\\\", \\\"red 8\\\"], \\\"red 2\\\") ➞ true\\n\\ncanPlay([\\\"yellow 3\\\", \\\"yellow 5\\\", \\\"red 8\\\"], \\\"blue 5\\\") ➞ true\\n\\ncanPlay([\\\"yellow 3\\\", \\\"blue 5\\\", \\\"red 8\\\", \\\"red 9\\\"], \\\"green 4\\\") ➞ false\\n\\ncanPlay([\\\"yellow 3\\\", \\\"red 8\\\"], \\\"green 2\\\") ➞ false\\n```\\n\\n### Notes\\n- Return `false` if the player is not holding any cards (an empty array). \\n- There are no special cards or wild cards in this deck.\",\"lab\":\"Test.assertEquals(canPlay(['yellow 3', 'yellow 5', 'red 8'], 'red 2'), true);\\nTest.assertEquals(canPlay(['yellow 3', 'yellow 5', 'red 8'], 'blue 5'), true);\\nTest.assertEquals(canPlay(['yellow 3', 'blue 5', 'red 8', 'red 9'], 'green 4'), false);\\nTest.assertEquals(canPlay(['yellow 3', 'red 8'], 'green 2'), false);\\nTest.assertEquals(canPlay(['yellow 5', 'yellow 8', 'red 0', 'blue 0', 'green 4'], 'green 2'), true);\\nTest.assertEquals(canPlay([], 'green 2'), false);\\nTest.assertEquals(canPlay(['red 2'], 'red 0'), true);\\nTest.assertEquals(canPlay(['red 2', 'red 8', 'red 5'], 'blue 1'), false);\",\"language\":\"javascript\",\"summary\":\"This question is inspired by the popular Uno card game.\\n\\nWrite a function that takes in two arguments: (1) a player's current hand and (2) the current face-up card on the table. The function will return true if the player can make a play, or false if the player has to draw from the deck.\\n\\nA player can make a play if either:\\n\\nThey have a card that is the same c\",\"tags\":[\"arrays\",\"games\"],\"timestamp\":{\"$date\":1552283093376},\"title\":\"Uno (Part 1)\",\"stats\":{\"completed\":{\"total\":182,\"ratings\":[2,2,2,2,2,2,2,2,2,2,2,1,0,1,2,2,2,2,1,2,0,1,2,1,1,1,2,2,3,2,1,2,2,2,2,1,2,1,2,2,2,1,2,1,2,1,2,1,2,1,2,2,0,2,2,2,0,5,2,1,2,2,2,2,1,2,1,1,0,2,1,2,2,2,0,2,2,1,2,2,2,1,1,2,2,2,2,2,2,1,1,1,3,2,4,2,2,1,0,2,2,3,1,3,3,2,1,2,1,2,2,2,2,1,2,2,2,2,2,2,0,2,2,2,2,2,2,1,2,0,2,0,2,2,2,3,2,2,2,2,2,0,2,1,1,3,2,2,1,2,2,3,2,2,1,5,1,1,1,2,2,1,2,2,2,2],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"65dbBZynphj53nXqA\",\"XHngE5iScvztMpnR2\",\"SDtZFL5NzAoCPofXk\",\"bbbpNxM3hgGMCqMn8\",\"EjCAjQbmgbLGwWSpK\",\"gGETo2x9dY5TsWc2b\",\"Nd7Bnx9zF57gn3vLp\",\"2innwjWqxJHo4eRGh\",\"Jh6sPsgj8yHy95joL\",\"oFckF5bB5dGBQKneS\",\"5B7Fx5TTgDYwTGRMT\",\"EjPLq3QSJdGQFJdgW\",\"LTD7KCHFuXrmTWpQ4\",\"wcjknenWdPRhrRScv\",\"KPDPaGaJ4jGtRusF2\",\"KzMMvGnXcWGTmRE7F\",\"K8retouBZnftajjFi\",\"bjn5DTzzaWCP5BDgX\",\"CJnuSjyCBMTbTiibD\",\"eomLS3wh6tQPN8jtH\",\"n5wubRfh6zh8QRymN\",\"EWn8w8P3nNh7knatY\",\"Ne6BNfbozdSd64oLe\",\"zgoq9MhrL2h75DAMA\",\"uhP3Z8KkPxySxn2n7\",\"cxnifiEMb4ybRsgth\",\"S7R7voZRxnWjCn8pi\",\"cTasoJQG2iA6FvuK4\",\"RE4Mm9T6Q9uygAxGS\",\"tQwDooQpBeuprEcRK\",\"54Ka62KytXRsrLPhZ\",\"4pagg6vw2Cjepv7tN\",\"fmLzKJTPWvtGRAaAN\",\"9AdMR4uBsHxRcd86Q\",\"rTRvHndHZKKRkb9w5\",\"FJsvM5yqKuK9yMk9P\",\"iERYTAAJo3rBJ8Rok\",\"E3fyZ23p26CcvHvuR\",\"7gZKfvwaeqsGKXMEN\",\"Q9KQomTTPBsrkAL6c\",\"csRoCgJx5NBJzW8pX\",\"6BpBQnSGhzgvhXrEy\",\"zw7g7T8wE5R5CBhXr\",\"gyB5wJihaSZCWKTCB\",\"XKi8iZXBCHCaebSHh\",\"Akq3fQcPRgPrWfsye\",\"R4JQmeA6cYyfXbmLF\",\"e8ftyJ6nKRtZDwGWJ\",\"yjtdwc2AC4jA2RWtn\",\"5Zq3aGdvh4LHBvnJL\",\"zEcErafTnQf3iHufQ\",\"WMMHYhx32N9CzA9q4\",\"QnPD4Sv6W4LHc2Qng\",\"gSpcNJ8znvGGfWsQH\",\"AasGs8AeX9Lcb9xJn\",\"Y9Nz9yafaibz54W4o\",\"3awyiorYPgCqqP7Sr\",\"6gPHMpkEP8JuHxzpd\",\"DHwbkbzYNpmkSFT7u\",\"CvjWNHy65tvGKQfeP\",\"BdvdJYwHZr7JpkHsn\",\"z6QfbuG6TXE7GKynQ\",\"EoNHgbWsF6ZQF4eYr\",\"7ht7wjgf4wpASKTra\",\"9gEWz76H8KmhN4yJj\",\"2CvHJcA9aXt9pvZwA\",\"sbme4fRJjjBjYXRbY\",\"Czph6ZM3JY2t9f2jD\",\"ih2aGaqkMaagTgyL2\",\"zd9FLSzsGz3evKafy\",\"2bXYWPtZMysAabLfu\",\"2NJuDfSqdrF8kHHni\",\"8BFSTCnoe2QggN64c\",\"7zysDWmX6xXejYcux\",\"pfBbi7ZpZcewE9qC9\",\"5YCX58nhHT8oRCHyy\",\"3xtJYwxrWmw63ibfF\",\"Zp8WxyrFqEm7tDpHW\",\"kTak6XfLG4Lnbq9yR\",\"pi76g3eRpnKrhee2a\",\"k5TGxBtLi9BXxeChT\",\"YER6iBcpJCuhgrYDN\",\"uAS9uKs8KQmp8uhqn\",\"XRw5Wi72Wkf4j5DWQ\",\"zaK4fTaPxMcbosbQ7\",\"ncxv2Z5EvzW2j4NT7\",\"LsgccRxuBEvXQ549M\",\"Ni8RtBhmx23mWNNpv\",\"cp3X8hk8yNME7qoD9\",\"wnRpfE82qTbPocDGQ\",\"vtHbevf2tHqe6mRxX\",\"2ZFoLTxcCARhwc8xX\",\"rjHoHqJjAJADTNZhQ\",\"LgvG2ARZaHdpdNdXE\",\"4jYXdpja24ywEXtT9\",\"CJBPyyfyaEeEo63sb\",\"a777e8chPvJkY3tKa\",\"G2wwuLBf5WET8MMYA\",\"GiKgHGrHpyXDDEpwH\",\"Ji84eQR54xeqRYceZ\",\"E6DBfkTgHuPsDWdG8\",\"8xaTLiFGg4mfPbhwG\",\"mHT2bJb5SByfJ8yKS\",\"x25qZvG8GeXv82Md5\",\"Lzj3w7QjdzikynsGG\",\"2zKQWLmEBw8FBs4ZL\",\"buX4mCQhtXCfBjeno\",\"HFuNFZpdKCddzbuqc\",\"Dn5QN5F7y54y4kzp9\",\"Nb6LYPoQP6KJZt8mz\",\"QRv96jmNaYsWkxQEG\",\"r7mZLgpQWzRiGddL5\",\"C9LKGu2g5hSijvDzA\",\"vewKwcMeGuk3p3MsN\",\"tAF9Gf6PiGogbZuWs\",\"nAmJEX7BkHLd9LsG2\",\"pLpcDC3EYx2DDQSdt\",\"PGCDJpQMN8Sjn9Gm6\",\"7wtuhPesfhcYsfZaZ\",\"Po3v3dHCk6wYGKMwi\",\"CC2aFwzc6CF9hjdbb\",\"moe6ztrsNzFymC3A7\",\"aEm3Wvj2rFYRL8Lrb\",\"ttuGK7od8simjgmCJ\",\"mfYrBKwDr4hXSFuuN\",\"kp2ZbCewZJAbfd7xv\",\"v2w9GN4jHP2fgYdeE\",\"RzmXx77rzobF7Gtsj\",\"FDqfqHn8ww9QoSFhb\",\"CNc6rmwhbxkxEhHAp\",\"g4NCSxxHqHCGMpWwT\",\"qWR7eXxBiNee22A5u\",\"YmMgWhzhHhQLmGGgH\",\"M4vq8ATaS9Jg5X7iP\",\"Gc2bmsof5vD2Hsgqv\",\"AFfw7cGg83uYk2Miy\",\"evTTY9hwrtogaNxXn\",\"u9cRf5kvtpRB5ffB3\",\"R9uaMzX2Y4ND8Cosm\",\"Yp7uvStL97cC9fKkY\",\"oFYzzMeNDJNq8rXWm\",\"nkH3HfJXLMNcBMM79\",\"3Gf7ikLijfoxabiPY\",\"ZcqshY58sGEEvgeaq\",\"osd7PjKAnJcW9xpRH\",\"YSmLyP3eRhcFjJPzg\",\"RtPhDuwmvWNHiBxmG\",\"srJ34BaybkQh3qRkM\",\"npp5hesJrst6ghKSM\",\"JsRTAwWK7Nikj4sKA\",\"xn7uGNKeAwPEkP9oA\",\"2Qk2mFu9HBFzrB24i\",\"3rQ3fN5SM2eGHmTi5\",\"cgCQDs9i7yChKeAjE\",\"z5ebtimXwFFJdYxoa\",\"NGvCPuMiAP3xrRLfB\",\"qvCppNAZjAkNdBSu6\",\"8BJyXvRWcrvN3nttS\",\"nBJve5CzG6WAw7WFQ\",\"gXTAie79kiw28tx5u\",\"BdnE4RS5puoxo92mA\",\"jyoLggHk8xQKZuoQC\",\"h9CbFMHNNw7PTDQbt\",\"n4Y5EEGCjmrK99yrt\",\"bfYmA3LMvhSrK59cn\",\"oDtGiNqDMHmhHE3J8\",\"LwD3CyYSiBfg3mA4r\",\"jicWFrNKadYuLhqxh\",\"mpLFbFKjY6u3nsDMv\",\"LPZ2QKCoB8q6rG25c\",\"oyB4Wr4EeZnoDaa8B\",\"RrkFrcX64zzutw7fv\"],\"quality\":[3,5,5,5,4,5,5,5,5,5,5,5,5,4,5,5]},\"tests\":{\"score\":0,\"voters\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"voters\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"isHidden\":false,\"quality\":4.75,\"family\":[{\"_id\":\"KWu64CmjkD8g7icEM\",\"language\":\"cpp\"},{\"_id\":\"4hyR7qsvSRCLBXDCz\",\"language\":\"javascript\"},{\"_id\":\"3eEjDZtxDtaiZccf9\",\"language\":\"python3\"},{\"_id\":\"mSJeDtoahrAHP6r5M\",\"language\":\"ruby\"}]}}"]