a["{\"msg\":\"result\",\"id\":\"1818\",\"result\":{\"_id\":\"inecXu7CtXyvNekxu\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"function staircase(n) {\\n\\t\\n}\",\"difficulty\":2.6363636363636362,\"familyId\":\"SYFaeo8YXrnoup5PK\",\"instructions\":\"Create a function that will build a staircase using the underscore `_` and hash `#` symbols. A positive value denotes the staircase's upward direction and downwards for a negative value.\\n\\n### Examples\\n```\\nstaircase(3) ➞ \\\"__#\\\\n_##\\\\n###\\\"\\n__#\\n_##\\n###\\n\\nstaircase(7) ➞ \\\"______#\\\\n_____##\\\\n____###\\\\n___####\\\\n__#####\\\\n_######\\\\n#######\\\"\\n______#\\n_____##\\n____###\\n___####\\n__#####\\n_######\\n#######\\n\\nstaircase(2) ➞ \\\"_#\\\\n##\\\"\\n_#\\n##\\n\\nstaircase(-8) ➞ \\\"########\\\\n_#######\\\\n__######\\\\n___#####\\\\n____####\\\\n_____###\\\\n______##\\\\n_______#\\\"\\n########\\n_#######\\n__######\\n___#####\\n____####\\n_____###\\n______##\\n_______#\\n```\\n\\n### Notes\\n- All inputs are either positive or negative values.\\n- The string to be returned is adjoined with the newline character (`\\\\n`).\\n- A recursive version of this challenge can be found [here](https://edabit.com/challenge/ZLTwdq8n5HK7DP9Eq).\",\"isHidden\":false,\"lab\":\"Test.assertEquals(staircase(3), \\\"__#\\\\n_##\\\\n###\\\")\\nTest.assertEquals(staircase(7), \\\"______#\\\\n_____##\\\\n____###\\\\n___####\\\\n__#####\\\\n_######\\\\n#######\\\")\\nTest.assertEquals(staircase(2), \\\"_#\\\\n##\\\")\\nTest.assertEquals(staircase(-8), \\\"########\\\\n_#######\\\\n__######\\\\n___#####\\\\n____####\\\\n_____###\\\\n______##\\\\n_______#\\\")\\nTest.assertEquals(staircase(4), \\\"___#\\\\n__##\\\\n_###\\\\n####\\\")\\nTest.assertEquals(staircase(-12), \\\"############\\\\n_###########\\\\n__##########\\\\n___#########\\\\n____########\\\\n_____#######\\\\n______######\\\\n_______#####\\\\n________####\\\\n_________###\\\\n__________##\\\\n___________#\\\")\\nTest.assertEquals(staircase(11), \\\"__________#\\\\n_________##\\\\n________###\\\\n_______####\\\\n______#####\\\\n_____######\\\\n____#######\\\\n___########\\\\n__#########\\\\n_##########\\\\n###########\\\")\\nTest.assertEquals(staircase(-6), \\\"######\\\\n_#####\\\\n__####\\\\n___###\\\\n____##\\\\n_____#\\\")\",\"language\":\"javascript\",\"summary\":\"Create a function that will build a staircase using the underscore _ and hash # symbols. A positive value denotes the staircase's upward direction and downwards for a negative value.\\n\\nExamples\\nstaircase(3) ➞ \\\"_#\\\\n##\\\\n###\\\"\\n__\\n_\\n\\nstaircase(7) ➞ \\\"_#\\\\n##\\\\n###\\\\n####\\\\n#####\\\\n######\\\\n#######\\\"\\n__\\n_\\n__\\n_\\n__\\n_\\n\\nstaircase(2) ➞ \\\"_#\\\\n##\\\"\\n_\\n\\nstaircase(-8) ➞ \\\"########\\\\n#####\",\"tags\":[\"strings\",\"logic\",\"arrays\"],\"timestamp\":{\"$date\":1595103219370},\"title\":\"Underscore-Hash Staircase\",\"stats\":{\"completed\":{\"total\":96,\"ratings\":[3,3,3,3,3,3,1,1,3,1,2,2,3,0,3,2,3,3,3,2,3,5,2,3,3,3,2,3,4,2,2,4,0,2,4,5,3,4,3,5,4,3,1,4,2,1,3,0,3,3,2,0,3,2,4,2,2,0,3,3,4,5,2,2,4,3],\"rators\":[\"a777e8chPvJkY3tKa\",\"aEm3Wvj2rFYRL8Lrb\",\"yjtdwc2AC4jA2RWtn\",\"mHT2bJb5SByfJ8yKS\",\"hcm8sL8mNJTSfTdgE\",\"cecRRLKKu5R62D5xE\",\"tAF9Gf6PiGogbZuWs\",\"FJsvM5yqKuK9yMk9P\",\"QRv96jmNaYsWkxQEG\",\"r7mZLgpQWzRiGddL5\",\"65dbBZynphj53nXqA\",\"buX4mCQhtXCfBjeno\",\"Nb6LYPoQP6KJZt8mz\",\"kp2ZbCewZJAbfd7xv\",\"n5wubRfh6zh8QRymN\",\"E6DBfkTgHuPsDWdG8\",\"Akq3fQcPRgPrWfsye\",\"Es4eX2stRpyoXeC7f\",\"QpBEndbkq6opq4DBN\",\"zMCXYFZSsviDCvjnY\",\"477x24BHagvCWeCsS\",\"ZTTJprKDvFqKGew7c\",\"bXaGdBM8FBLHf7N6Y\",\"RKKuw76K7sRBMouKq\",\"WRPLHCHffFbvBn5b7\",\"Xk2g4CNFAnYcvxiSr\",\"EMED9x5CXGSevWAp4\",\"Po3v3dHCk6wYGKMwi\",\"acHSYL6uQAgpgFMjp\",\"mGo3J8FQPHA3Y6bSG\",\"EBTrwJbNx8XkRnmNc\",\"5nHtgdY8F2FbAMawq\",\"vSPc7MGK5Poy8tSFp\",\"5pb68s5mbEq6EvA9J\",\"M5Wwg7T6b4RkHrENN\",\"ttuGK7od8simjgmCJ\",\"T2zxG7BqZfjgmjrNs\",\"va3fDAQm4sqSMoy3R\",\"KpfF2G9wLwXc8D644\",\"bTfTeGRvyuPbB7Wsn\",\"NchnDcEmsLTeFZ4FH\",\"mwg8jvMHHmQiQRrbr\",\"EjYWHaWnYBaKn2xpi\",\"QozwRCt9hwyqeFB5i\",\"faYyw7jGsSeaMeYYd\",\"sjPb3iWmHCBHcq5qH\",\"NjEXproRxby9ZY8c9\",\"6Mtj7jGyRcBPQNYSy\",\"ScDZaeW8T6bbrr6BR\",\"zvjXMeqkNjbijJ4Mv\",\"YEjnBpgNjDLhnf4H7\",\"R9CvsfEZWGuHDKM28\",\"xhMNsZgeB8rBKjxLu\",\"vuDP7uD5oSmHL7zYd\",\"ZhusfKHYdLHnNGPh3\",\"XwdBzGAR6kY7Tvb9Z\",\"8BJyXvRWcrvN3nttS\",\"bTXKg7WFmPJcEsdab\",\"BjJhatTBaTWm3ZhCt\",\"FyM79v8ygRbPgfhh2\",\"LtTpCzF8kt6Rdth4X\",\"tfPcwjKBFKLekTxnW\",\"qw7t4ifExWNiwH3K5\",\"p9v6b9xkJxQGwA7jg\",\"GsrjAqoAdLATJH9qD\",\"eANW47mfA359Y6JyP\",\"M4vq8ATaS9Jg5X7iP\",\"PH32cNxBjrK4a28sn\",\"FxLRfrcEeQjYDZEnk\",\"GMtbB3ckwdd66myNh\",\"RMpwqdCRrdBiGQhPT\",\"ShrXg4RHgnyFjzJ8w\",\"WnogMFYXoyvmBmGkm\",\"s678Wirfor5uYL5T6\",\"Yp7uvStL97cC9fKkY\",\"g5LqKXTkG5ThERy9u\",\"QvEXmSEo3ANp3yPyH\",\"oDtGiNqDMHmhHE3J8\",\"YRdu63HNTKd6YmWpd\",\"6wrcwkYQDCTnNMbq8\",\"xsDyJstYoBZRS8pJH\",\"RE4Mm9T6Q9uygAxGS\",\"h4jFmtbFn92eA4649\",\"DPi9QGLctq2y76KuE\",\"P8bXFR4cHwFia9rNM\",\"p6qLK4qS2dnFzDA7k\",\"Z9jhP3WeN7jSf4aFs\",\"bX6tpTCjwoi6XMMbK\",\"LwD3CyYSiBfg3mA4r\",\"jnyub52Fi79drGvow\",\"TtrXnGzi9MyhLvWiz\"],\"quality\":[5,5,5,5,5,5,5,5,5,4,4,5,5,4,4,5,5,5,5,5,5,5,5,4,4,5,4,5,5,4]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":4.733333333333333,\"family\":[{\"_id\":\"inecXu7CtXyvNekxu\",\"language\":\"javascript\"},{\"_id\":\"YqLBEZJR9ySndYQpH\",\"language\":\"python3\"}]}}"]