a["{\"msg\":\"result\",\"id\":\"2173\",\"result\":{\"_id\":\"eARWGdpymGeNQiHBi\",\"author\":\"Jass\",\"authorId\":\"gt9zhJjDZE5MraxoF\",\"code\":\"function getObject(args) {\\n\\t\\n}\",\"difficulty\":3.25,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"AHRhKWFZLPTFyqzQ8\",\"instructions\":\"Create a function that takes an object and returns an object of all entries having unique marks. If the marks are the same, take who is eldest.\\n\\n### Examples\\n```\\ngetObject({\\n  \\\"0\\\": { age: 18, name: \\\"john\\\", marks: \\\"400\\\" },\\n  \\\"1\\\": { age: 17, name: \\\"julie\\\", marks: \\\"400\\\" },\\n  \\\"2\\\": { age: 16, name: \\\"Robin\\\", marks: \\\"200\\\" },\\n  \\\"3\\\": { age: 16, name: \\\"Bella\\\", marks: \\\"300\\\" }\\n}) ➞ {\\n  \\\"0\\\": { age: 18, name: \\\"john\\\", marks: \\\"400\\\" },\\n  \\\"1\\\": { age: 16, name: \\\"Robin\\\", marks: \\\"200\\\" },\\n  \\\"2\\\": { age: 16, name: \\\"Bella\\\", marks: \\\"300\\\" }\\n}\\n\\ngetObject({\\n  0: {age: 18, name: 'john', marks: '400'},\\n  1: {age: 17, name: 'julie', marks: '400'},\\n  2: {age: 16, name: 'Robin', marks: '200'},\\n  3: {age: 16, name: 'Bella', marks: '300'},\\n  4: {age: 16, name: 'john', marks: '250'},\\n  5: {age: 15, name: 'julie', marks: '250'}\\n}) ➞    {\\n  0: {age: 18, name: 'john', marks: '400'},\\n  1: {age: 16, name: 'Robin', marks: '200'},\\n  2: {age: 16, name: 'Bella', marks: '300'},\\n  3: {age: 16, name: 'john', marks: '250'}\\n}\\n```\\n\\n### Notes\\nCheck the examples above for clarification.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertSimilar(getObject({\\\"0\\\": { age: 18, name: \\\"john\\\", marks: \\\"400\\\" },\\\"1\\\": { age: 17, name: \\\"julie\\\", marks: \\\"400\\\" },\\\"2\\\": { age: 16, name: \\\"Robin\\\", marks: \\\"200\\\" },\\\"3\\\": { age: 16, name: \\\"Bella\\\", marks: \\\"300\\\"}}), {\\\"0\\\": { age: 18, name: \\\"john\\\", marks: \\\"400\\\" },\\\"1\\\": { age: 16, name: \\\"Robin\\\", marks: \\\"200\\\" },\\\"2\\\": { age: 16, name: \\\"Bella\\\", marks: \\\"300\\\" }});\\nTest.assertSimilar(\\n    getObject({\\n      0: {age: 18, name: 'john', marks: '400'},\\n      1: {age: 17, name: 'julie', marks: '400'},\\n      2: {age: 16, name: 'Robin', marks: '200'},\\n      3: {age: 16, name: 'Bella', marks: '300'},\\n      4: {age: 16, name: 'john', marks: '250'},\\n      5: {age: 15, name: 'julie', marks: '250'}\\n    }),\\n    {\\n      0: {age: 18, name: 'john', marks: '400'},\\n      1: {age: 16, name: 'Robin', marks: '200'},\\n      2: {age: 16, name: 'Bella', marks: '300'},\\n      3: {age: 16, name: 'john', marks: '250'}\\n    }\\n  );\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[4,4,4,4,4,2,1,5,3,5,2,4,2,5,5,4,5,2,0,5,3,4,0,3,2,3,3,3,2,5,4,3,2,3,5,5,0,2,2,3,4,4,4,3,3,2,4,3,2,5,1,5,2,5,3,5],\"rators\":[\"yjtdwc2AC4jA2RWtn\",\"aEm3Wvj2rFYRL8Lrb\",\"gt9zhJjDZE5MraxoF\",\"mHT2bJb5SByfJ8yKS\",\"sH44gKJF5vosrTrHa\",\"Es4eX2stRpyoXeC7f\",\"QvJ36SnEakZn3pjqH\",\"va3fDAQm4sqSMoy3R\",\"c7uBxu2rgY77H5d79\",\"tE8iqyAxBJfEaWdxy\",\"u9cRf5kvtpRB5ffB3\",\"YLTZRjM78Wi9J9Re4\",\"SYEuojZtP6yLXryHv\",\"vGKxRcDYDsXzTQuEQ\",\"PH32cNxBjrK4a28sn\",\"z8R4K9Cd7PNuh256A\",\"JjXgk86saCzC2mNub\",\"bXaGdBM8FBLHf7N6Y\",\"iyNqxcRq2za3p2D2c\",\"mxdbPp2YB8JntMLin\",\"8BJyXvRWcrvN3nttS\",\"QvEXmSEo3ANp3yPyH\",\"QjGNkRM3Xc78yShJN\",\"zMCXYFZSsviDCvjnY\",\"pWJWQDhqzDSmfaFam\",\"PjAHibG68Zsn4JwRK\",\"8cZCRtYFkr5RcjPzm\",\"hcm8sL8mNJTSfTdgE\",\"jtgxNcBdXoM5xwava\",\"Xk2g4CNFAnYcvxiSr\",\"8SYDBRtkZuW3pdPtG\",\"ZoRz3G3G4Z8kHuFpb\",\"H7SfrAwjam3jmMNEy\",\"2sLmHo7G2irSyrDB7\",\"tAF9Gf6PiGogbZuWs\",\"HHNSBLTaSsZjsWG3D\",\"pd8dm7sWLW9cY6dYW\",\"NwwjBE54B4agHnjjh\",\"oGy4iYBrPsq4t4HMW\",\"CQ4sXxiBcJx3Ymrb8\",\"vFBkjBa9oK9y4Pv6j\",\"xsDyJstYoBZRS8pJH\",\"WnogMFYXoyvmBmGkm\",\"hBxceyRZcFodNGC6r\",\"SutHdPpxWRCiqHsPq\",\"PTo9qt93YqGvL8fCa\",\"iwRHeHxzg9oyYQ9X6\",\"XoTA5p8kRk34jqEyt\",\"9PRfYekNKBp5nW5GM\",\"nw5vSuHw4NL9hBbLc\",\"p6qLK4qS2dnFzDA7k\",\"AmyxE23H2ywWbSXNG\",\"49PyWJAEAd7iSv67n\",\"JKdDEhL9ZmBnnc9Gy\",\"J5MgLszeGgtciW56n\",\"Z9jhP3WeN7jSf4aFs\",\"LeXct7DLKZ39TB486\",\"hL8y3oooXeL2Sii4o\",\"JTvD2pxDKyj38LTxj\",\"7Kd94f2NEhLKJkQeq\"],\"total\":71,\"quality\":[5,5,2,5,3,5,5,4,5]},\"flags\":0},\"summary\":\"Create a function that takes an object and returns an object of all entries having unique marks. If the marks are the same, take who is eldest.\\n\\nExamples\\ngetObject({\\n  \\\"0\\\": { age: 18, name: \\\"john\\\", marks: \\\"400\\\" },\\n  \\\"1\\\": { age: 17, name: \\\"julie\\\", marks: \\\"400\\\" },\\n  \\\"2\\\": { age: 16, name: \\\"Robin\\\", marks: \\\"200\\\" },\\n  \\\"3\\\": { age: 16, name: \\\"Bella\\\", marks: \\\"300\\\" }\\n})\",\"tags\":[\"objects\",\"arrays\",\"logic\"],\"timestamp\":{\"$date\":1598324843707},\"title\":\"Playing with Nested Objects\",\"quality\":4.333333333333333,\"family\":[{\"_id\":\"eARWGdpymGeNQiHBi\",\"language\":\"javascript\"}]}}"]