a["{\"msg\":\"result\",\"id\":\"988\",\"result\":{\"_id\":\"6mYAoRAvLHJ5ypots\",\"author\":\"Caleb Miller\",\"authorId\":\"2QziknsznNeMPRh3g\",\"code\":\"function cardsNeeded(n) {\\n\\t\\n}\",\"difficulty\":1.6666666666666667,\"quality\":4.793103448275862,\"familyId\":\"dquNX5zM7JrBZYkDY\",\"instructions\":\"The image below shows a sequence of larger and larger houses of cards, with the total number of cards included for each:\\n\\n![House of Cards](https://edabit-challenges.s3.amazonaws.com/hcards.png)\\n\\nGiven the tower height `n`, return the number of cards needed to construct a full house of cards.\\n\\n### Examples\\n```\\ncardsNeeded(3) ➞ 15\\n\\ncardsNeeded(4) ➞ 26\\n\\ncardsNeeded(0) ➞ 0\\n```\\n\\n### Notes\\nThe height should always be equal or greater than 0. Return `\\\"invalid\\\"` if the value given doesn't abide by this rule.\",\"isHidden\":false,\"lab\":\"Test.assertEquals(cardsNeeded(-3), \\\"invalid\\\")\\nTest.assertEquals(cardsNeeded(-2), \\\"invalid\\\")\\nTest.assertEquals(cardsNeeded(-1), \\\"invalid\\\")\\nTest.assertEquals(cardsNeeded(0), 0)\\nTest.assertEquals(cardsNeeded(1), 2)\\nTest.assertEquals(cardsNeeded(2), 7)\\nTest.assertEquals(cardsNeeded(3), 15)\\nTest.assertEquals(cardsNeeded(4), 26)\\nTest.assertEquals(cardsNeeded(5), 40)\\nTest.assertEquals(cardsNeeded(6), 57)\\nTest.assertEquals(cardsNeeded(7), 77)\\nTest.assertEquals(cardsNeeded(8), 100)\\nTest.assertEquals(cardsNeeded(9), 126)\\nTest.assertEquals(cardsNeeded(10), 155)\\nTest.assertEquals(cardsNeeded(11), 187)\\nTest.assertEquals(cardsNeeded(12), 222)\\nTest.assertEquals(cardsNeeded(13), 260)\\nTest.assertEquals(cardsNeeded(14), 301)\\nTest.assertEquals(cardsNeeded(15), 345)\\nTest.assertEquals(cardsNeeded(16), 392)\\nTest.assertEquals(cardsNeeded(17), 442)\\nTest.assertEquals(cardsNeeded(18), 495)\\nTest.assertEquals(cardsNeeded(19), 551)\\nTest.assertEquals(cardsNeeded(20), 610)\\nTest.assertEquals(cardsNeeded(21), 672)\\nTest.assertEquals(cardsNeeded(22), 737)\\nTest.assertEquals(cardsNeeded(23), 805)\\nTest.assertEquals(cardsNeeded(24), 876)\\nTest.assertEquals(cardsNeeded(25), 950)\\nTest.assertEquals(cardsNeeded(26), 1027)\\nTest.assertEquals(cardsNeeded(27), 1107)\\nTest.assertEquals(cardsNeeded(28), 1190)\\nTest.assertEquals(cardsNeeded(29), 1276)\\nTest.assertEquals(cardsNeeded(30), 1365)\\nTest.assertEquals(cardsNeeded(31), 1457)\\nTest.assertEquals(cardsNeeded(32), 1552)\\nTest.assertEquals(cardsNeeded(33), 1650)\\nTest.assertEquals(cardsNeeded(34), 1751)\\nTest.assertEquals(cardsNeeded(35), 1855)\\nTest.assertEquals(cardsNeeded(36), 1962)\\nTest.assertEquals(cardsNeeded(37), 2072)\\nTest.assertEquals(cardsNeeded(38), 2185)\\nTest.assertEquals(cardsNeeded(39), 2301)\\nTest.assertEquals(cardsNeeded(40), 2420)\\nTest.assertEquals(cardsNeeded(41), 2542)\\nTest.assertEquals(cardsNeeded(42), 2667)\\nTest.assertEquals(cardsNeeded(43), 2795)\\nTest.assertEquals(cardsNeeded(44), 2926)\\nTest.assertEquals(cardsNeeded(45), 3060)\\nTest.assertEquals(cardsNeeded(46), 3197)\\nTest.assertEquals(cardsNeeded(47), 3337)\\nTest.assertEquals(cardsNeeded(48), 3480)\\nTest.assertEquals(cardsNeeded(49), 3626)\\nTest.assertEquals(cardsNeeded(50), 3775)\",\"language\":\"javascript\",\"summary\":\"The image below shows a sequence of larger and larger houses of cards, with the total number of cards included for each:\\n\\nHouse of Cards\\n\\nGiven the tower height n, return the number of cards needed to construct a full house of cards.\\n\\nExamples\\ncardsNeeded(3) ➞ 15\\n\\ncardsNeeded(4) ➞ 26\\n\\ncardsNeeded(0) ➞ 0\\n\\nNotes\\nThe height should always be equal or greater than\",\"tags\":[\"math\",\"numbers\"],\"timestamp\":{\"$date\":1601406568928},\"title\":\"House of Cards\",\"stats\":{\"completed\":{\"total\":84,\"ratings\":[1,1,1,1,1,2,2,2,2,3,2,0,1,2,2,0,2,0,2,2,2,2,0,2,2,2,2,3,2,1,2,0,2,2,1,1,1,1,2,2,1,2,2,2,2,2,2,2,1,2,2,3,5,1,1,2,2],\"quality\":[5,5,5,5,5,5,5,4,5,5,5,3,5,5,5,4,5,5,5,5,4,4,5,5,5,5,5,5,5],\"rators\":[\"tAF9Gf6PiGogbZuWs\",\"2QziknsznNeMPRh3g\",\"u9cRf5kvtpRB5ffB3\",\"YfWyvMhdY3xcGrK5R\",\"mHT2bJb5SByfJ8yKS\",\"buX4mCQhtXCfBjeno\",\"yjtdwc2AC4jA2RWtn\",\"QRv96jmNaYsWkxQEG\",\"CNc6rmwhbxkxEhHAp\",\"n5wubRfh6zh8QRymN\",\"zw7g7T8wE5R5CBhXr\",\"75NY7vqimaATzRdAX\",\"g4NCSxxHqHCGMpWwT\",\"AFfw7cGg83uYk2Miy\",\"qWR7eXxBiNee22A5u\",\"kp2ZbCewZJAbfd7xv\",\"BdvdJYwHZr7JpkHsn\",\"RhajfcRtgLpeeH4FX\",\"pGh7WykiPe26fHJYv\",\"Gc2bmsof5vD2Hsgqv\",\"2Ni3PzJAc5fAhqBkb\",\"omn98QP6uBd923Azp\",\"vewKwcMeGuk3p3MsN\",\"65dbBZynphj53nXqA\",\"r7mZLgpQWzRiGddL5\",\"evTTY9hwrtogaNxXn\",\"Ya3eHgs8x3unZRLpb\",\"pdGuqmMyeN4wZaWwv\",\"FjoXxJn6JT2Bv9w8Y\",\"Yp7uvStL97cC9fKkY\",\"z5ebtimXwFFJdYxoa\",\"2QifjAQzAEqqnk86G\",\"PLkegh7jJLoeCPgTS\",\"3Gf7ikLijfoxabiPY\",\"XzMxsyYj2ZeZ6Jmis\",\"RE4Mm9T6Q9uygAxGS\",\"RtPhDuwmvWNHiBxmG\",\"Nb6LYPoQP6KJZt8mz\",\"m6qKkBY4aPWziyJTj\",\"DPi9QGLctq2y76KuE\",\"srJ34BaybkQh3qRkM\",\"qriz7wZ4ifJytfhRg\",\"nkH3HfJXLMNcBMM79\",\"kETR48v7gF3navX86\",\"Po3v3dHCk6wYGKMwi\",\"pWJWQDhqzDSmfaFam\",\"2Qk2mFu9HBFzrB24i\",\"LCn6qz2GoMr5577Rd\",\"3WtHp4MBzciz4AE8M\",\"utCCXtDeKHoEugcP9\",\"6BpBQnSGhzgvhXrEy\",\"pPpmP7xeJzGgK362R\",\"npp5hesJrst6ghKSM\",\"ZK6YmYMsfwXYtaZ9P\",\"k6QB6fzbj4LsWktRL\",\"cgCQDs9i7yChKeAjE\",\"PAnur8xLTthNL3epT\",\"wJTDDTE3TrmSXKP4d\",\"jnyub52Fi79drGvow\",\"zza5WjC8QrHcoDZBF\",\"R9uaMzX2Y4ND8Cosm\",\"eomLS3wh6tQPN8jtH\",\"bX6tpTCjwoi6XMMbK\",\"cp3X8hk8yNME7qoD9\",\"LwD3CyYSiBfg3mA4r\",\"Zi39A2nmRWTdjd9DK\",\"AasGs8AeX9Lcb9xJn\",\"NGvCPuMiAP3xrRLfB\",\"oDtGiNqDMHmhHE3J8\",\"STipuJs6kBvPqqsSE\",\"pi76g3eRpnKrhee2a\",\"uf8TKCemgetJt6pQB\",\"nBJve5CzG6WAw7WFQ\",\"gXTAie79kiw28tx5u\",\"eoLKH4a4Comqzb9QX\",\"7wtuhPesfhcYsfZaZ\",\"jyoLggHk8xQKZuoQC\",\"jicWFrNKadYuLhqxh\",\"bfYmA3LMvhSrK59cn\",\"z47JaNrQMgvuPx5HE\",\"uxKGACwmZ6FNZsMwE\"]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"T7RsJMgzfzg9CkTBQ\",\"language\":\"cpp\"},{\"_id\":\"6mYAoRAvLHJ5ypots\",\"language\":\"javascript\"},{\"_id\":\"kPDSPe9cHwbE2jANs\",\"language\":\"python3\"},{\"_id\":\"HKsLpjaLHMuuoPf7B\",\"language\":\"ruby\"}]}}"]