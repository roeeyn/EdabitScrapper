a["{\"msg\":\"result\",\"id\":\"1007\",\"result\":{\"_id\":\"mHP2n9i4XERvCF3C8\",\"author\":\"Frosch\",\"authorId\":\"daD4PtrAmXk4Q9jG7\",\"code\":\"function neighboring(str) {\\n\\t\\n}\",\"difficulty\":1.6779661016949152,\"quality\":4.324324324324325,\"editorId\":\"daD4PtrAmXk4Q9jG7\",\"familyId\":\"xEcnmd7dEiSQdnt2A\",\"instructions\":\"Create a function that takes a string and checks if every single character is **preceded and followed**  by a character adjacent to it in the _english alphabet_.\\n\\nExample: \\\"b\\\" should be preceded and followed by ether \\\"a\\\" or \\\"c\\\" (`abc || cba || aba || cbc == true` but `abf || zbc  == false`).\\n\\n### Examples\\n```\\nneighboring(\\\"aba\\\") ➞ true\\n\\nneighboring(\\\"abcdedcba\\\") ➞ true\\n\\nneighboring(\\\"efghihfe\\\") ➞ false\\n\\nneighboring(\\\"abc\\\") ➞ true\\n\\nneighboring(\\\"qrstuv\\\") ➞ true\\n\\nneighboring(\\\"mnopqrstsrqponm\\\") ➞ false\\n```\\n\\n### Notes\\nAll test cases will consist of lower case letters only.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertEquals(neighboring(\\\"abcdedcba\\\"), true)\\nTest.assertEquals(neighboring(\\\"aba\\\"), true)\\nTest.assertEquals(neighboring(\\\"efghihfe\\\"), false)\\nTest.assertEquals(neighboring(\\\"xyzyx\\\"), true)\\nTest.assertEquals(neighboring(\\\"mnopqrstsrqponm\\\"), true)\\nTest.assertEquals(neighboring(\\\"zyz\\\"), true)\\nTest.assertEquals(neighboring(\\\"aeiou\\\"), false)\\nTest.assertEquals(neighboring(\\\"cdefg\\\"), true)\\nTest.assertEquals(neighboring(\\\"qrstuv\\\"), true)\\nTest.assertEquals(neighboring(\\\"aaaaa\\\"), false)\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,1,2,2,0,1,0,0,3,2,2,2,2,2,2,2,2,0,2,1,2,1,1,2,2,3,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,5,3,1,0,1,2,0,2,2],\"quality\":[4,2,5,5,3,5,5,5,4,2,5,4,4,5,5,2,5,5,5,5,3,5,3,5,5,4,5,5,3,5,3,5,5,5,5,4,5],\"rators\":[\"daD4PtrAmXk4Q9jG7\",\"eQXwk5zGckM8tCWYH\",\"iRWkFFriwxk5oAbDg\",\"g4NCSxxHqHCGMpWwT\",\"n5wubRfh6zh8QRymN\",\"zw7g7T8wE5R5CBhXr\",\"PGCDJpQMN8Sjn9Gm6\",\"xhMNsZgeB8rBKjxLu\",\"G5jpRM9Sn6NJiELRF\",\"mHT2bJb5SByfJ8yKS\",\"qaR8DnWrTk8Mus5Q2\",\"vSjXi9SpF9p2J8G4T\",\"BdvdJYwHZr7JpkHsn\",\"kp2ZbCewZJAbfd7xv\",\"65dbBZynphj53nXqA\",\"buX4mCQhtXCfBjeno\",\"7gZKfvwaeqsGKXMEN\",\"Rrb84KWhN5tjhMGMA\",\"vewKwcMeGuk3p3MsN\",\"tAF9Gf6PiGogbZuWs\",\"yjtdwc2AC4jA2RWtn\",\"CNc6rmwhbxkxEhHAp\",\"WBBN35jGBzzHWeLn5\",\"WbXHZDxj5femhG7x2\",\"YmMgWhzhHhQLmGGgH\",\"SNiJRRosrmSWssLj4\",\"ttuGK7od8simjgmCJ\",\"QRv96jmNaYsWkxQEG\",\"RE4Mm9T6Q9uygAxGS\",\"bX6tpTCjwoi6XMMbK\",\"AFfw7cGg83uYk2Miy\",\"Ya3eHgs8x3unZRLpb\",\"nxycxLNEN4PXDotSh\",\"FGEeCTorXbX3WvjFW\",\"pdGuqmMyeN4wZaWwv\",\"BdnE4RS5puoxo92mA\",\"7wtuhPesfhcYsfZaZ\",\"xAfaHANrS8Zs2475d\",\"H46gRHmkdz2CRrGH9\",\"4Xv87xmdSnpYhi8hz\",\"q9apBnZWTLJEY4pfj\",\"u9cRf5kvtpRB5ffB3\",\"Kntd2rSgWYWp8r4sP\",\"Gc2bmsof5vD2Hsgqv\",\"r7mZLgpQWzRiGddL5\",\"jd9sRTnsyeKpPggba\",\"pGh7WykiPe26fHJYv\",\"nkH3HfJXLMNcBMM79\",\"2Ni3PzJAc5fAhqBkb\",\"3WtHp4MBzciz4AE8M\",\"evTTY9hwrtogaNxXn\",\"R9uaMzX2Y4ND8Cosm\",\"pWJWQDhqzDSmfaFam\",\"Yp7uvStL97cC9fKkY\",\"Akq3fQcPRgPrWfsye\",\"jkumHyXfMkhGcPgqC\",\"Es4eX2stRpyoXeC7f\",\"e9Cknxbx6o7Nb6REs\",\"3Gf7ikLijfoxabiPY\",\"zd9FLSzsGz3evKafy\",\"RtPhDuwmvWNHiBxmG\",\"m6qKkBY4aPWziyJTj\",\"Nb6LYPoQP6KJZt8mz\",\"DPi9QGLctq2y76KuE\",\"srJ34BaybkQh3qRkM\",\"hNEhHd8qodq4P3h2g\",\"Po3v3dHCk6wYGKMwi\",\"npp5hesJrst6ghKSM\",\"J7d397iB5GuWRAMfg\",\"QAZ5DGaWWYhku4BNz\",\"wJTDDTE3TrmSXKP4d\",\"6BpBQnSGhzgvhXrEy\",\"2Qk2mFu9HBFzrB24i\",\"z6rWbk4FWtqs7qHvm\",\"oDtGiNqDMHmhHE3J8\",\"AasGs8AeX9Lcb9xJn\",\"NGvCPuMiAP3xrRLfB\",\"PAnur8xLTthNL3epT\",\"nBJve5CzG6WAw7WFQ\",\"pi76g3eRpnKrhee2a\",\"mpLFbFKjY6u3nsDMv\",\"d8JhF9zfpexkRnCea\",\"jyoLggHk8xQKZuoQC\",\"eomLS3wh6tQPN8jtH\",\"bfYmA3LMvhSrK59cn\",\"sN2JyFeJCwfwwHPwF\",\"jicWFrNKadYuLhqxh\",\"oyB4Wr4EeZnoDaa8B\",\"CHvzhtXnv8HTbPQ56\",\"z47JaNrQMgvuPx5HE\",\"uxKGACwmZ6FNZsMwE\"],\"total\":93},\"flags\":0},\"summary\":\"Create a function that takes a string and checks if every single character is preceded and followed  by a character adjacent to it in the english alphabet.\\n\\nExample: \\\"b\\\" should be preceded and followed by ether \\\"a\\\" or \\\"c\\\" (abc || cba || aba || cbc == true but abf || zbc  == false).\\n\\nExamples\\nneighboring(\\\"aba\\\") ➞ true\\n\\nneighboring(\\\"abcdedcba\\\") ➞ true\\n\\nneighbori\",\"tags\":[\"higher_order_functions\",\"language_fundamentals\",\"formatting\",\"loops\",\"validation\"],\"timestamp\":{\"$date\":1600499877977},\"title\":\"Neighboring Letters\",\"family\":[{\"_id\":\"gAANK2ydo8jiEk9ot\",\"language\":\"cpp\"},{\"_id\":\"mHP2n9i4XERvCF3C8\",\"language\":\"javascript\"},{\"_id\":\"gqgPPpPKSeSoGjrjh\",\"language\":\"php\"},{\"_id\":\"oK2e5Xet35ZFZNLX6\",\"language\":\"python3\"},{\"_id\":\"P3c9FmBuwZ5pQCaMH\",\"language\":\"ruby\"}]}}"]