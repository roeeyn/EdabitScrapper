a["{\"msg\":\"result\",\"id\":\"883\",\"result\":{\"_id\":\"4k9HnP6bF5ptHjmxE\",\"author\":\"Isaac Pak\",\"authorId\":\"yaL57wdXmgAZTvKfX\",\"code\":\"const str = `[/* make your changes here only */] = users`\",\"difficulty\":1.603960396039604,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"KPE6dojbmfgBHwnsX\",\"instructions\":\"Given an array of user objects. If we just wanted to get the name of the third object in the array, one way could be to use an array method like:\\n\\n```\\nlet users = [\\n  { name: \\\"John\\\", email: \\\"john@example.com\\\" },\\n  { name: \\\"Jason\\\", email: \\\"jason@example.com\\\" },\\n  { name: \\\"Jeremy\\\", email: \\\"jeremy@example.com\\\" },\\n  { name: \\\"Jacob\\\", email: \\\"jacob@example.com\\\" }\\n]\\n\\nlet thirdUser = users.filter((e, i) => i === 2 )[0].name\\nconsole.log(thirdUser)  // \\\"Jeremy\\\"\\n```\\n\\nHowever, you can combine array and Object destructuring to extract it more declaratively. Use **array and object destructuring** to extract the name from the third object in the users array and assign it to the variable `thirdUser`. Provide the solution inside the **brackets** only. Ignore the `.toString()` function (used for validation).\\n\\n### Notes\\nN/A\",\"isHidden\":false,\"lab\":\"let users = [\\n  { name: \\\"John\\\", email: \\\"john@example.com\\\" },\\n  { name: \\\"Jason\\\", email: \\\"jason@example.com\\\" },\\n  { name: \\\"Jeremy\\\", email: \\\"jeremy@example.com\\\" },\\n  { name: \\\"Jacob\\\", email: \\\"jacob@example.com\\\" }\\n] \\n\\neval(str)\\n\\nfunction validation() {\\n\\treturn /\\\\,.*\\\\,.*thirdUser/.test(str) ? \\\"valid\\\" : \\\"not valid\\\" \\n}\\n\\nTest.assertEquals(validation(), \\\"valid\\\", \\\"You must assign thirdUser inside the brackets\\\")\\nTest.assertEquals(thirdUser, \\\"Jeremy\\\")\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,0,1,2,2,2,1,2,1,2,1,2,2,2,1,0,2,2,2,1,2,2,1,2,2,1,0,0,2,2,2,2,2,2,1,2,1,0,2,2,2,2,2,2,1,1,2,2,0,0,2,2,2,2,2,2,2,1,2,0,2,2,2,2,0,2,2,2,0,2,2,2,2,2,2,2,2,3,2,2,1,2,0,2,1,2,2,0,2,2,1,2,1,1,2,3],\"rators\":[\"yaL57wdXmgAZTvKfX\",\"yjtdwc2AC4jA2RWtn\",\"cJwiiiX7qwSvgtmk8\",\"6BpBQnSGhzgvhXrEy\",\"Y9Nz9yafaibz54W4o\",\"FJsvM5yqKuK9yMk9P\",\"mHT2bJb5SByfJ8yKS\",\"RE4Mm9T6Q9uygAxGS\",\"pi76g3eRpnKrhee2a\",\"EWn8w8P3nNh7knatY\",\"YER6iBcpJCuhgrYDN\",\"EjPLq3QSJdGQFJdgW\",\"E6DBfkTgHuPsDWdG8\",\"AasGs8AeX9Lcb9xJn\",\"GovJdALyZMga74WeE\",\"3aZvfgr2H2WF8Yog2\",\"SNiJRRosrmSWssLj4\",\"HwZx7c3QFWmt5x4oE\",\"NczXsSrYNX6nDWhjF\",\"vtHbevf2tHqe6mRxX\",\"ipiC2qPhKZWsAouJf\",\"szQg8dxKNNre3v3Jk\",\"YSmLyP3eRhcFjJPzg\",\"QAZ5DGaWWYhku4BNz\",\"65dbBZynphj53nXqA\",\"Q75jsoXjhTXJRrw8z\",\"zw7g7T8wE5R5CBhXr\",\"Q9KQomTTPBsrkAL6c\",\"p5ZshR8zhTqmdhKDc\",\"giSTAYFa29zMunbJf\",\"a777e8chPvJkY3tKa\",\"ZcqshY58sGEEvgeaq\",\"ij9YRJvZz6WbqcGXS\",\"PGCDJpQMN8Sjn9Gm6\",\"aEm3Wvj2rFYRL8Lrb\",\"SY9Euc4kQfRgetXTd\",\"z6rWbk4FWtqs7qHvm\",\"moe6ztrsNzFymC3A7\",\"8raviPK67KKxzQWcF\",\"zTZtM9jRsu8eXie6s\",\"pLpcDC3EYx2DDQSdt\",\"LCn6qz2GoMr5577Rd\",\"nkH3HfJXLMNcBMM79\",\"jkumHyXfMkhGcPgqC\",\"msrRGxcGDya8dZdRr\",\"ZcmrtSpqFnCBEK5YE\",\"7gZKfvwaeqsGKXMEN\",\"kp2ZbCewZJAbfd7xv\",\"y6wd5dd3thLtfr7Rk\",\"Po3v3dHCk6wYGKMwi\",\"EcvftxnptJk32vTju\",\"2tCCFm5iefjrRSaxv\",\"evTTY9hwrtogaNxXn\",\"Ya3eHgs8x3unZRLpb\",\"bX6tpTCjwoi6XMMbK\",\"e9Cknxbx6o7Nb6REs\",\"qJTbsuToGEtaYnGxn\",\"yCeddtASCT5NFPJTP\",\"WBBN35jGBzzHWeLn5\",\"BdvdJYwHZr7JpkHsn\",\"2QziknsznNeMPRh3g\",\"Gc2bmsof5vD2Hsgqv\",\"YLTZRjM78Wi9J9Re4\",\"jd9sRTnsyeKpPggba\",\"Rrb84KWhN5tjhMGMA\",\"YmMgWhzhHhQLmGGgH\",\"pdGuqmMyeN4wZaWwv\",\"9uaYS8fz4rEtNtGFg\",\"PH32cNxBjrK4a28sn\",\"Yp7uvStL97cC9fKkY\",\"3Gf7ikLijfoxabiPY\",\"XeNskNoh5DcHuKTWX\",\"QRv96jmNaYsWkxQEG\",\"2Ni3PzJAc5fAhqBkb\",\"sRt2L9qxPZZHG2YbP\",\"J7d397iB5GuWRAMfg\",\"M4vq8ATaS9Jg5X7iP\",\"cgCQDs9i7yChKeAjE\",\"TjwyRbkPanQTP7AYs\",\"wJTDDTE3TrmSXKP4d\",\"TtrXnGzi9MyhLvWiz\",\"R9uaMzX2Y4ND8Cosm\",\"jnyub52Fi79drGvow\",\"sNcDN3s3rH9wcNg5n\",\"srJ34BaybkQh3qRkM\",\"7DXJ3mvKMHHqBLt92\",\"mpLFbFKjY6u3nsDMv\",\"nBJve5CzG6WAw7WFQ\",\"AFfw7cGg83uYk2Miy\",\"8BJyXvRWcrvN3nttS\",\"AMpQSjKsRqhCDyS2j\",\"9SEvR5mBRBi27QooN\",\"bfYmA3LMvhSrK59cn\",\"HpfaNWBYpnsQRAPQn\",\"9XnGoq9Tv6ut3zTtH\",\"rPsSEYqwmttMPEuvo\",\"jicWFrNKadYuLhqxh\",\"z47JaNrQMgvuPx5HE\",\"QGjY3hgPYPMmMjc7j\",\"g5txYGWqRNSrS7MED\",\"HCfkcKnPs9mrJojdG\",\"uxKGACwmZ6FNZsMwE\",\"9qJwfSnwqzDYYRqTP\",\"LPZ2QKCoB8q6rG25c\",\"QHiEYtz3tX3s9nETo\",\"qgtso8jfXRD52Th7C\",\"ThaiAKWWDw2W4QfJh\",\"ZKuwzkssrSsDGNPr5\"],\"total\":121,\"quality\":[5,5,5,4,3,5,5,5,5,5,4,5]},\"flags\":0},\"summary\":\"Given an array of user objects. If we just wanted to get the name of the third object in the array, one way could be to use an array method like:\\n\\nlet users = [\\n  { name: \\\"John\\\", email: \\\"john@example.com\\\" },\\n  { name: \\\"Jason\\\", email: \\\"jason@example.com\\\" },\\n  { name: \\\"Jeremy\\\", email: \\\"jeremy@example.com\\\" },\\n  { name: \\\"Jacob\\\", email: \\\"jacob@example.com\\\" }\\n]\\n\\nlet\",\"tags\":[\"language_fundamentals\",\"formatting\",\"objects\",\"arrays\"],\"timestamp\":{\"$date\":1580883596332},\"title\":\"ES6: Destructuring Objects IX\",\"quality\":4.666666666666667,\"family\":[{\"_id\":\"4k9HnP6bF5ptHjmxE\",\"language\":\"javascript\"}]}}"]