a["{\"msg\":\"result\",\"id\":\"268\",\"result\":{\"_id\":\"MEZtqvEeMbGg2YKtt\",\"author\":\"ABO\",\"authorId\":\"2Qk2mFu9HBFzrB24i\",\"code\":\"function battingAvg(arr) {\\n\\t\\n}\",\"difficulty\":0.8518518518518519,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"DkY9Akoopjst4cxCy\",\"instructions\":\"A baseball  player's batting average is calculated by the following formula:\\n\\n```\\nBA = (number of hits) / (number of official at-bats)\\n```\\n\\nBatting averages are always expressed rounded to the nearest thousandth with no leading zero. The top 3 MLB batting averages of all-time are:\\n\\n1. Ty Cobb .366\\n2. Rogers Hornsby .358\\n3. Shoeless Joe Jackson .356\\n\\nThe given array represents a season of games. Each array item indicates a player's `[hits, official at bats]` per game. Return a string with the player's seasonal batting average rounded to the nearest thousandth.\\n\\n### Examples\\n```\\nbattingAvg([[0, 0], [1, 3], [2, 2], [0, 4], [1, 5]]) ➞ \\\".286\\\"\\n\\nbattingAvg([[2, 5], [2, 3], [0, 3], [1, 5], [2, 4]]) ➞ \\\".350\\\"\\n\\nbattingAvg([[2, 3], [1, 5], [2, 4], [1, 5], [0, 5]]) ➞ \\\".273\\\"\\n```\\n\\n### Notes\\n- The number of hits will not exceed the number of official at-bats.\\n- The array includes official at-bats only. No other plate-appearances (walks, hit-by-pitches, sacrifices, etc.) are included in the array.\\n- HINT: Think in terms of total hits and total at-bats.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertEquals(battingAvg([\\n      [0, 0],\\n      [1, 3],\\n      [2, 2],\\n      [0, 4],\\n      [1, 5],\\n    ]), '.286')\\nTest.assertEquals(battingAvg([\\n      [2, 5],\\n      [2, 3],\\n      [0, 3],\\n      [1, 5],\\n      [2, 4],\\n    ]), '.350')\\nTest.assertEquals(battingAvg([\\n      [2, 3],\\n      [1, 5],\\n      [2, 4],\\n      [1, 5],\\n      [0, 5],\\n    ]), '.273')\\nTest.assertEquals(battingAvg([\\n      [1, 4],\\n      [0, 5],\\n      [4, 4],\\n      [1, 5],\\n      [0, 5],\\n    ]), '.261')\\nTest.assertEquals(battingAvg([\\n      [3, 3],\\n      [0, 5],\\n      [0, 4],\\n      [3, 5],\\n      [1, 5],\\n    ]), '.318')\\nTest.assertEquals(battingAvg([\\n      [0, 5],\\n      [1, 2],\\n      [1, 1],\\n      [4, 5],\\n      [1, 6],\\n      [2, 5],\\n      [0, 4],\\n      [3, 3],\\n      [0, 4],\\n      [0, 3],\\n    ]), '.316')\\nTest.assertEquals(battingAvg([\\n      [1, 6],\\n      [1, 4],\\n      [0, 4],\\n      [3, 6],\\n      [2, 5],\\n      [1, 4],\\n      [1, 6],\\n      [0, 1],\\n      [2, 5],\\n      [2, 6],\\n    ]), '.277')\\nTest.assertEquals(battingAvg([\\n      [2, 4],\\n      [1, 6],\\n      [2, 6],\\n      [1, 4],\\n      [4, 4],\\n      [3, 6],\\n      [2, 5],\\n      [0, 4],\\n      [0, 5],\\n      [0, 5],\\n    ]), '.306')\\nTest.assertEquals(battingAvg([\\n      [2, 6],\\n      [0, 3],\\n      [2, 5],\\n      [1, 3],\\n      [4, 6],\\n      [1, 4],\\n      [0, 5],\\n      [0, 5],\\n      [0, 6],\\n      [3, 3],\\n    ]), '.283')\\nTest.assertEquals(battingAvg([\\n      [1, 6],\\n      [0, 5],\\n      [0, 6],\\n      [0, 3],\\n      [2, 4],\\n      [3, 3],\\n      [1, 6],\\n      [3, 4],\\n      [0, 5],\\n      [1, 5],\\n    ]), '.234')\\nTest.assertEquals(battingAvg([\\n      [1, 1],\\n      [1, 5],\\n      [0, 3],\\n      [1, 3],\\n      [2, 6],\\n      [0, 4],\\n      [0, 5],\\n      [1, 5],\\n      [1, 6],\\n      [2, 2],\\n    ]), '.225')\\nTest.assertEquals(battingAvg([\\n      [2, 6],\\n      [0, 5],\\n      [1, 4],\\n      [2, 4],\\n      [4, 5],\\n      [1, 6],\\n      [2, 2],\\n      [0, 4],\\n      [1, 5],\\n      [0, 5],\\n    ]), '.283')\\nTest.assertEquals(battingAvg([\\n      [0, 3],\\n      [1, 5],\\n      [3, 4],\\n      [0, 6],\\n      [1, 2],\\n      [3, 4],\\n      [4, 5],\\n      [0, 5],\\n      [0, 5],\\n      [1, 5],\\n    ]), '.295')\\nTest.assertEquals(battingAvg([\\n      [3, 3],\\n      [0, 1],\\n      [0, 3],\\n      [3, 5],\\n      [1, 5],\\n      [1, 1],\\n      [2, 6],\\n      [0, 4],\\n      [1, 5],\\n      [2, 6],\\n    ]), '.333')\\nTest.assertEquals(battingAvg([\\n      [1, 6],\\n      [1, 5],\\n      [1, 6],\\n      [3, 5],\\n      [3, 5],\\n      [1, 5],\\n      [1, 4],\\n      [2, 6],\\n      [1, 5],\\n      [3, 6],\\n    ]), '.321')\",\"language\":\"javascript\",\"quality\":4.6,\"stats\":{\"completed\":{\"ratings\":[0,0,0,0,0,0,0,0,0,1,0,3,1,0,2,1,0,2,2,1,1,1,0,1,0,2,1,1,1,2,0,0,2,0,1,1,0,1,2,1,0,0,0,0,0,0,1,1,2,0,0,0,1,1,2,2,0,2,2,1,1,0,2,2,0,0,1,0,1,0,2,0,4,2,5,0,0,0,0,1,0,1,0,1,2,0,0,1,1,1,0,0,1,2,4,0,0,1,1,3,0,1,0,1,0,2,2,0],\"quality\":[5,4,4,5,5,5,5,5,5,5,4,5,5,5,3,3,5,4,5,5],\"rators\":[\"2Qk2mFu9HBFzrB24i\",\"K45zPJxsABuA3WSyj\",\"g4NCSxxHqHCGMpWwT\",\"dQd664XYR6QKHFvHW\",\"cazpMjneqZMaYDTYd\",\"jnyub52Fi79drGvow\",\"JwMgsExa4khGMyP5k\",\"khhruHhLuwNXNehhf\",\"RtPhDuwmvWNHiBxmG\",\"9qoWqLcHGiDX429rE\",\"ZNYXpzJhiCbLkPCJw\",\"J7d397iB5GuWRAMfg\",\"j5FSQCayX3By73CCw\",\"6BFP6MA58afErnoKC\",\"JKehHwafchXjnnRNF\",\"RE4Mm9T6Q9uygAxGS\",\"CMLqMQhqhTxsx7ZYg\",\"AFfw7cGg83uYk2Miy\",\"yjtdwc2AC4jA2RWtn\",\"mHT2bJb5SByfJ8yKS\",\"evTTY9hwrtogaNxXn\",\"vxWHytXdMHsoyv9Gr\",\"Yp7uvStL97cC9fKkY\",\"CNc6rmwhbxkxEhHAp\",\"z5ebtimXwFFJdYxoa\",\"pPpmP7xeJzGgK362R\",\"3WtHp4MBzciz4AE8M\",\"QRv96jmNaYsWkxQEG\",\"jyCByAZwu576xDwEL\",\"Ya3eHgs8x3unZRLpb\",\"aLKHc5k4sM3GijhmE\",\"733qgZ7ZSSSrzbXGw\",\"QGjY3hgPYPMmMjc7j\",\"qFJpEDM2Ep6v4tqPz\",\"jLSZdBseR2kfjt8dL\",\"9HZbxzkzgz4CvePtv\",\"buX4mCQhtXCfBjeno\",\"srJ34BaybkQh3qRkM\",\"HjP75DWvMXBqcxwfv\",\"65dbBZynphj53nXqA\",\"u9cRf5kvtpRB5ffB3\",\"oDtGiNqDMHmhHE3J8\",\"tAF9Gf6PiGogbZuWs\",\"mpLFbFKjY6u3nsDMv\",\"zw7g7T8wE5R5CBhXr\",\"XrqNzJ2FRG8HnGiR6\",\"k8rMJnaejG3dX4ute\",\"s2Y76rR2h2fPKibsK\",\"e9Cknxbx6o7Nb6REs\",\"6BpBQnSGhzgvhXrEy\",\"Es4eX2stRpyoXeC7f\",\"pdGuqmMyeN4wZaWwv\",\"w8geFfsnhEfLPjBCq\",\"FGEeCTorXbX3WvjFW\",\"QguFWo84zgF3c8BGr\",\"6oNkXuuDRBTFvpr8y\",\"KypQdzThzogKXwkXE\",\"2a56F4KyQHRgTubPL\",\"zd9FLSzsGz3evKafy\",\"aWNggJDngk9DhC4Sg\",\"gFEpzrgWhzCZHeifj\",\"AasGs8AeX9Lcb9xJn\",\"7gZKfvwaeqsGKXMEN\",\"86kMtj2c6DG7paeqg\",\"8op7s67jE2nYdo4js\",\"sN2JyFeJCwfwwHPwF\",\"5nhmyqLy8M2Yn2HMR\",\"HCfkcKnPs9mrJojdG\",\"m6qKkBY4aPWziyJTj\",\"JW5J6sdJHAmDmfWnE\",\"GwLzzrCFdYfQXhAWN\",\"oyB4Wr4EeZnoDaa8B\",\"2tCCFm5iefjrRSaxv\",\"jWsQxth7Kj9avEiwC\",\"4fjSgcqhQQZM2ZFRP\",\"tmB8Xatt4AstQSWWv\",\"2TLngGdowbHujqTBa\",\"7wtuhPesfhcYsfZaZ\",\"yXGiiSAR5nBHnH3yr\",\"kqd3cgnP2yBTj5pSv\",\"pi76g3eRpnKrhee2a\",\"bfYmA3LMvhSrK59cn\",\"NLYHTNm4qcJYtd8QZ\",\"QHiEYtz3tX3s9nETo\",\"eQXwk5zGckM8tCWYH\",\"kzKScgma9NnX6YwAs\",\"NJCmkbH5e7qbtZYhd\",\"8BJyXvRWcrvN3nttS\",\"8PWe4RLFk3MRvbn68\",\"vmad5Pz6mu3CRt22J\",\"DPi9QGLctq2y76KuE\",\"SpzAprfWq9EYZcjqa\",\"vdrDCxMWpqCY3yxfj\",\"WpNHMgfjZE8aNN2MP\",\"pXump8DbJQiBg6uFk\",\"aEm3Wvj2rFYRL8Lrb\",\"sMcFMPkMJC4Kh6ymj\",\"H3yM3F3mukfdq9fit\",\"o5vwZSj8H7Wngp9oZ\",\"F3mffDfGmCrgAXoYf\",\"dCGpuE4nb7D2vwRm5\",\"34bE6mric984YYLZQ\",\"PC3pLs36zNzpRDSuE\",\"JnYehNpm7BvefLuee\",\"fccfTyHBaoFGEaKxh\",\"v2w9GN4jHP2fgYdeE\",\"qjd7Y3B7nNxdx5PgM\",\"rpNNPWzdFCc9TzKMz\",\"nC4sPB69yYuTSks9T\",\"NiSowTQGDddKPtsPQ\",\"YcCLwitFMAEJSnxAW\",\"CHvzhtXnv8HTbPQ56\",\"opcrDAS4AgXqrJXnb\",\"6vdn7gegY7xXxYCbe\",\"vpoTHSqFwCb5jmST9\",\"QfmeLsicXT49NGouo\",\"nr6NdAwpgMJcL2Wue\",\"ey7weiXtrrTWSnjtJ\",\"DPpSwhhiuF4Y9YR2i\",\"sgjcbfroKXPSSDob8\",\"Ya9pKG9rkWi4eZaG7\",\"kAfXgLMWe4WH8gY6Z\",\"ySNimfwMcCFvEjkN7\"],\"total\":126},\"flags\":0},\"summary\":\"A baseball  player's batting average is calculated by the following formula:\\n\\nBA = (number of hits) / (number of official at-bats)\\n\\nBatting averages are always expressed rounded to the nearest thousandth with no leading zero. The top 3 MLB batting averages of all-time are:\\n\\nTy Cobb .366\\nRogers Hornsby .358\\nShoeless Joe Jackson .356\\n\\nThe given array represents\",\"tags\":[\"arrays\",\"formatting\",\"strings\",\"numbers\"],\"timestamp\":{\"$date\":1613331607051},\"title\":\"Baseball Batting Average\",\"family\":[{\"_id\":\"MEZtqvEeMbGg2YKtt\",\"language\":\"javascript\"},{\"_id\":\"GEDzF9MkZxKazXHR2\",\"language\":\"php\"},{\"_id\":\"R4D59C9CQbJvqWaKd\",\"language\":\"python3\"},{\"_id\":\"4HNrqEDQYzivL4fFz\",\"language\":\"ruby\"}]}}"]