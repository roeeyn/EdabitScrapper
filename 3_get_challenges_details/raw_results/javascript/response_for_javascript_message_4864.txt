a["{\"msg\":\"result\",\"id\":\"1184\",\"result\":{\"_id\":\"DTvQD5MeTDbYh27nL\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"function simpleComp(arr1, arr2) {\\n\\t\\n}\",\"difficulty\":2.013888888888889,\"familyId\":\"uq9mkScbQGWmgJxoQ\",\"instructions\":\"**Mubashir** needs your help to compare two arrays.\\n\\nFirst array `arr1` contains some numbers and second array `arr2` contains **squared values of numbers given in the first array**.\\n\\nCreate a function which takes these two arrays and returns `true` if all square values are available, `false` otherwise.\\n\\n```\\narr1 = [121, 144, 19, 161, 19, 144, 19, 11]  \\narr2 = [121, 14641, 20736, 361, 25921, 361, 20736, 361]\\n```\\n\\nReturns `true` because **121 is square of 11, 14641 is square of 121, 20736 is square of 144, 361 is square of 19, 25921 the square of 161, and so on...**\\n\\n```\\narr1 = [121, 144, 19, 161, 19, 144, 19, 11] \\narr2 = [11*11, 121*121, 144*144, 19*19, 161*161, 19*19, 144*144, 19*19]\\n```\\n\\n### Examples\\n```\\nsimpleComp([121, 144, 19, 161, 19, 144, 19, 11], [121, 14641, 20736, 361, 25921, 361, 20736, 361]) ➞ true\\n\\nsimpleComp([4, 4], [1, 31]) ➞ false\\n\\nsimpleComp([2, 2, 3], [4, 4, 9]) ➞ true\\n```\\n\\n### Notes\\nNumbers can be in any order.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"lst1 = [121, 144, 19, 161, 19, 144, 19, 11]\\nlst2 = [11*11, 121*121, 144*144, 19*19, 161*161, 19*19, 144*144, 19*19]\\nTest.assertEquals(simpleComp(lst1, lst2), true)\\nlst1 = [4, 4]\\nlst2 = [1, 31]\\nTest.assertEquals(simpleComp(lst1, lst2), false)\\nlst1 = [121, 144, 19, 161, 19, 144, 19, 11]\\nlst2 = [11*21, 121*121, 144*144, 19*19, 161*161, 19*19, 144*144, 19*19]\\nTest.assertEquals(simpleComp(lst1, lst2), false)\\nlst1 = [121, 144, 19, 161, 19, 144, 19, 11]\\nlst2 = [11*11, 121*121, 144*144, 190*190, 161*161, 19*19, 144*144, 19*19]\\nTest.assertEquals(simpleComp(lst1, lst2), false)\\nlst1 = []\\nlst2 = []\\nTest.assertEquals(simpleComp(lst1, lst2), true)\\nlst1 = []\\nlst2 = null\\nTest.assertEquals(simpleComp(lst1, lst2), false)\\nlst1 = [121, 144, 19, 161, 19, 144, 19, 11, 1008]\\nlst2 = [11*11, 121*121, 144*144, 190*190, 161*161, 19*19, 144*144, 19*19]\\nTest.assertEquals(simpleComp(lst1, lst2), false)\\nlst1 = [10000000, 100000000]\\nlst2 = [10000000 * 10000000, 100000000 * 100000000]\\nTest.assertEquals(simpleComp(lst1, lst2), true)\\nlst1 = [10000001, 100000000]\\nlst2 = [10000000 * 10000000, 100000000 * 100000000]\\nTest.assertEquals(simpleComp(lst1, lst2), false)\\nlst1 = [2, 2, 3]\\nlst2 = [4, 9, 9]\\nTest.assertEquals(simpleComp(lst1, lst2), false)\\nlst1 = [2, 2, 3]\\nlst2 = [4, 4, 9]\\nTest.assertEquals(simpleComp(lst1, lst2), true)\\nlst1 = null\\nlst2 = []\\nTest.assertEquals(simpleComp(lst1, lst2), false)\\nTest.assertEquals(simpleComp([], [1]), false)\\nlst1 = [-121, -144, 19, -161, 19, -144, 19, -11]\\nlst2 = [11*11, 121*121, 144*144, 19*19, 161*161, 19*19, 144*144, 19*19]\\nTest.assertEquals(simpleComp(lst1, lst2), true)\\nlst1 = [42, 42]\\nlst2 = [42, 42]\\nTest.assertEquals(simpleComp(lst1, lst2), false)\\n//Mubashir\",\"language\":\"javascript\",\"quality\":4.857142857142857,\"summary\":\"Mubashir needs your help to compare two arrays.\\n\\nFirst array arr1 contains some numbers and second array arr2 contains squared values of numbers given in the first array.\\n\\nCreate a function which takes these two arrays and returns true if all square values are available, false otherwise.\\n\\narr1 = [121, 144, 19, 161, 19, 144, 19, 11]\\narr2 = [121, 14641, 20736, 3\",\"tags\":[\"math\",\"numbers\",\"arrays\",\"interview\"],\"timestamp\":{\"$date\":1614513636942},\"title\":\"A Simple Comparison\",\"stats\":{\"completed\":{\"total\":80,\"ratings\":[1,1,1,1,1,0,1,2,0,2,2,2,1,2,2,0,0,1,2,2,3,2,1,2,2,2,2,2,3,4,2,2,2,0,3,1,2,2,2,4,3,2,2,5,1,2,3,2,2,2,3,3,2,3,0,2,3,1,3,3,3,2,3,3,2,3,3,2,3,3,1,3],\"quality\":[5,5,5,4,5,5,5],\"rators\":[\"T6iBEE2jp7f7iEF2P\",\"J7d397iB5GuWRAMfg\",\"pPpmP7xeJzGgK362R\",\"K45zPJxsABuA3WSyj\",\"jnyub52Fi79drGvow\",\"2Qk2mFu9HBFzrB24i\",\"QRv96jmNaYsWkxQEG\",\"Yp7uvStL97cC9fKkY\",\"CNc6rmwhbxkxEhHAp\",\"3WeZeHufhvwT8EJ9m\",\"cp3X8hk8yNME7qoD9\",\"yuLxi2qBJvMnwgdgJ\",\"mHT2bJb5SByfJ8yKS\",\"Ya3eHgs8x3unZRLpb\",\"erQgJKaHaETRcqs4x\",\"npp5hesJrst6ghKSM\",\"z5ebtimXwFFJdYxoa\",\"yjtdwc2AC4jA2RWtn\",\"srJ34BaybkQh3qRkM\",\"wJTDDTE3TrmSXKP4d\",\"STipuJs6kBvPqqsSE\",\"AQSqD9oNv2uPfxZCR\",\"QHiEYtz3tX3s9nETo\",\"LwD3CyYSiBfg3mA4r\",\"8BJyXvRWcrvN3nttS\",\"RE4Mm9T6Q9uygAxGS\",\"65dbBZynphj53nXqA\",\"kp2ZbCewZJAbfd7xv\",\"733qgZ7ZSSSrzbXGw\",\"R9uaMzX2Y4ND8Cosm\",\"oDtGiNqDMHmhHE3J8\",\"NGvCPuMiAP3xrRLfB\",\"AasGs8AeX9Lcb9xJn\",\"QAZ5DGaWWYhku4BNz\",\"6BpBQnSGhzgvhXrEy\",\"zw7g7T8wE5R5CBhXr\",\"FJsvM5yqKuK9yMk9P\",\"pi76g3eRpnKrhee2a\",\"HTAm62DZytAEFgSnu\",\"nBJve5CzG6WAw7WFQ\",\"mpLFbFKjY6u3nsDMv\",\"5Sb4ifkf4XmQysfuX\",\"AMpQSjKsRqhCDyS2j\",\"CH53jGETBeJTummf3\",\"buX4mCQhtXCfBjeno\",\"jyoLggHk8xQKZuoQC\",\"bfYmA3LMvhSrK59cn\",\"szQg8dxKNNre3v3Jk\",\"eomLS3wh6tQPN8jtH\",\"LtK4QFMyCT5Zky6g7\",\"Cw4A7rDZ2p4ZRGRxc\",\"aeAhnHiT8GJ8Xcz3P\",\"zjD5tCskapMK4ax7N\",\"hNCGG2NqRh4AG8Kds\",\"8s5Bdrn7RTga7DL6x\",\"mQyajwRcRDHvP7AwQ\",\"xsDyJstYoBZRS8pJH\",\"3WtHp4MBzciz4AE8M\",\"TtrXnGzi9MyhLvWiz\",\"FGEeCTorXbX3WvjFW\",\"nkH3HfJXLMNcBMM79\",\"ftWhqHv5SotzBPaEh\",\"chzgiWZQt3ZHevcPD\",\"uxKGACwmZ6FNZsMwE\",\"LCn6qz2GoMr5577Rd\",\"pxgAHHB8hNEegCYXm\",\"PT5pu7kJsgp9TDNGv\",\"iqmPb9JuJDgTFeR8Q\",\"mGaEDPw5FsDb3vdnq\",\"bX6tpTCjwoi6XMMbK\",\"9Pzg45NEiRXhLtLh3\",\"ThaiAKWWDw2W4QfJh\",\"7JCLyrrY6JYGpocac\",\"FY7atTfxaahfAHtJv\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"2srwHiYjSpGdfoPzc\",\"language\":\"cpp\"},{\"_id\":\"DTvQD5MeTDbYh27nL\",\"language\":\"javascript\"},{\"_id\":\"YXjx9G5uQ4CdYPuB4\",\"language\":\"python3\"},{\"_id\":\"fyMs9Jih68xGDToWu\",\"language\":\"ruby\"}]}}"]