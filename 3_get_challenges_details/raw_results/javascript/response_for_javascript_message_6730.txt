a["{\"msg\":\"result\",\"id\":\"2107\",\"result\":{\"_id\":\"9y96zuMKtMDYnJCEc\",\"author\":\"Pradeep kumar\",\"authorId\":\"hyx8iH2z3QySmyRKT\",\"code\":\"function climbingLeaderboard(ranked, player) {\\n\\t\\n}\",\"difficulty\":2.9375,\"quality\":0,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"5LGr6Ax2x73G4TLpa\",\"instructions\":\"An arcade game player wants to climb to the top of the leaderboard and track their ranking. The game uses Dense Ranking, so its leaderboard works like this: \\n- The player with the highest score is ranked number **1** on the leaderboard.\\n- Players who have equal scores receive the same ranking number, and the next player(s) receive the immediately following ranking number.\\n\\nCreate a function that takes two arrays of integers.\\n\\n```\\nranked[[100, 90, 90, 80]]\\nplayer[[70, 80, 105]]\\n```\\n\\nThe ranked players will have ranks **1**, **2**, **2**, and **3**, respectively. If the player's scores are **70**, **80** and **105**, their rankings after each game are **4th**, **3rd** , and **1st**. Return `[[4,3,1]]`.\\n\\n### Explanation\\n```\\nclimbingLeaderboard([100, 100, 50, 40, 40, 20, 10], [5, 25, 50, 120]) ➞ [6, 4, 2, 1]\\n```\\n\\nAlice starts playing with 7 players already on the leaderboard, which looks like this:\\n![snapshot1](https://edabit-challenges.s3.amazonaws.com/1-climbingrank.png)\\n\\nAfter Alice finishes game 0, her score is 5 and her ranking is 6:\\n![snapshot2](https://edabit-challenges.s3.amazonaws.com/2-climbingrank.png)\\n\\nAfter Alice finishes game 1, her score is 25 and her ranking is 4:\\n![snapshot3](https://edabit-challenges.s3.amazonaws.com/3-climbingrank.png)\\n\\nAfter Alice finishes game 2, her score is 50 and her ranking is tied with Caroline at  2:\\n![snapshot4](https://edabit-challenges.s3.amazonaws.com/4-climbingrank.png)\\n\\nAfter Alice finishes game 3, her score is  120 and her ranking is 1:\\n![snapshot5](https://edabit-challenges.s3.amazonaws.com/5-climbingrank.png)\\n\\n### Examples\\n```\\nclimbingLeaderboard([100, 90, 90, 80, 75, 60], [50, 65, 77, 90, 102]) ➞ [6, 5, 4, 2, 1]\\n\\nclimbingLeaderboard([80, 80, 80, 75, 70, 60, 60, 60], [70, 72, 78, 88]) ➞ [3, 3, 2, 1]\\n```\\n\\n### Notes\\nN/A\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertSimilar(climbingLeaderboard([100, 100, 50, 40, 40, 20, 10], [5, 25, 50, 120]), [6, 4, 2, 1])\\nTest.assertSimilar(climbingLeaderboard([100, 90, 90, 80, 75, 60], [50, 65, 77, 90, 102]), [6, 5, 4, 2, 1])\\nTest.assertSimilar(climbingLeaderboard([80, 80, 80, 75, 70, 60, 60, 60], [70, 72, 78, 88]), [3, 3, 2, 1])\\nTest.assertSimilar(climbingLeaderboard([120, 99, 95, 90, 89, 70, 60, 60, 50, 50], [65, 90, 150]), [7, 4, 1])\\nTest.assertSimilar(climbingLeaderboard([500, 400, 300, 200, 150, 50], [40, 90, 150]), [7, 6, 5])\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[3,3,3,3,3,5,2,2,1,3,2,3,4,3,3,4],\"quality\":[],\"rators\":[\"bXaGdBM8FBLHf7N6Y\",\"mHT2bJb5SByfJ8yKS\",\"yjtdwc2AC4jA2RWtn\",\"WRPLHCHffFbvBn5b7\",\"tAF9Gf6PiGogbZuWs\",\"pGh7WykiPe26fHJYv\",\"M4vq8ATaS9Jg5X7iP\",\"8RbX4cwsJz86GTobf\",\"2nyYiDATKWBPqvM4P\",\"oDtGiNqDMHmhHE3J8\",\"8BJyXvRWcrvN3nttS\"],\"total\":14},\"flags\":0},\"summary\":\"An arcade game player wants to climb to the top of the leaderboard and track their ranking. The game uses Dense Ranking, so its leaderboard works like this:\\nThe player with the highest score is ranked number 1 on the leaderboard.\\nPlayers who have equal scores receive the same ranking number, and the next player(s) receive the immediately following ranking numb\",\"tags\":[\"algorithms\",\"arrays\"],\"timestamp\":{\"$date\":1601545209367},\"title\":\"Climbing the Leaderboard\",\"family\":[{\"_id\":\"Y69gASix7WLZS8BgL\",\"language\":\"cpp\"},{\"_id\":\"9y96zuMKtMDYnJCEc\",\"language\":\"javascript\"},{\"_id\":\"NmZaXN5BH7miSAz6s\",\"language\":\"python3\"},{\"_id\":\"RkfN2pZZxrPt8WTPh\",\"language\":\"ruby\"}]}}"]