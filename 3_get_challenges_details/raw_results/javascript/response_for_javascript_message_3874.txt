a["{\"msg\":\"result\",\"id\":\"694\",\"result\":{\"_id\":\"TTu48ECaTRwZDj69x\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"function sumFoundIndexes(arr, n) {\\n\\t\\n}\",\"difficulty\":1.464406779661017,\"familyId\":\"72GsPX85kwwNEg4Bv\",\"instructions\":\"Create a function which takes in an *array of numbers* and a *number to find*. Return the sum of every index in the array which **matches the chosen number**.\\n\\n### Examples\\n```\\nsumFoundIndexes([0, 3, 3, 0, 0, 3], 3) ➞ 8\\n// The number 3 was found at indexes 1, 2 and 5.\\n// 8 = 1 + 2 + 5\\n\\nsumFoundIndexes([1, 2, 3, 4, 5, 6], 3) ➞ 2\\n\\nsumFoundIndexes([100, 100, 100, 100, 100], 100) ➞ 10\\n\\nsumFoundIndexes([5, 10, 15, 20], 2) ➞ 0\\n```\\n\\n### Notes\\n`0` can be the result if no number in the array matches *or* if the only matching element is at index 0.\",\"isHidden\":false,\"lab\":\"Test.assertEquals(sumFoundIndexes([0, 3, 3, 0, 0, 3], 3), 8)\\nTest.assertEquals(sumFoundIndexes([1, 2, 3, 4, 5, 6], 3), 2)\\nTest.assertEquals(sumFoundIndexes([100, 100, 100, 100, 100], 100), 10)\\nTest.assertEquals(sumFoundIndexes([5, 10, 15, 20], 2), 0)\\nTest.assertEquals(sumFoundIndexes([5, 10, 15, 20], 5), 0)\\nTest.assertEquals(sumFoundIndexes([2, 1, 7, 6, 3, 10, 6, 1, 3, 9, 1, 9, 3, 3, 9, 10, 4, 6, 3, 2, 5, 3, 0, 1, 0, 1, 9, 4, 8, 0, 5], 2), 19)\\nTest.assertEquals(sumFoundIndexes([10, 9, 9, 3, 9, 2, 4, 5, 5, 10, 10, 2, 0, 8, 0, 6, 2, 1, 4, 5, 5, 0, 3, 1, 5, 3, 2, 9, 8, 3, 1, 7, 4, 3, 8, 6, 7, 1, 3, 1, 10, 7, 1, 8, 8, 1, 3, 3, 7, 0, 6, 8, 6, 2, 1, 4, 0, 4, 7, 2, 1, 5, 3, 9, 7, 7, 3, 10, 9, 7, 10, 6, 0, 0, 0, 6, 0, 1, 0, 2, 4, 1, 7, 10, 4, 10, 2, 1, 0, 9], 3), 371)\\nTest.assertEquals(sumFoundIndexes([7, 10, 8, 2, 1, 2, 1, 7, 3, 10, 0, 6, 9, 3, 9, 9], 9), 41)\\nTest.assertEquals(sumFoundIndexes([1, 10, 4, 9, 4, 6, 5, 5, 3, 3, 4, 9, 4, 10, 7, 1, 0, 5, 0, 1, 3, 7, 7, 7, 4, 2, 3, 10, 2, 9, 5, 1, 10, 5, 5, 2, 10, 2, 1, 8, 2, 3, 4, 1, 10, 7, 3, 8, 10, 4, 9, 10, 3, 2, 4, 10, 4, 8, 6], 2), 218)\\nTest.assertEquals(sumFoundIndexes([9, 1, 5, 6, 9, 10, 6, 8, 8, 4, 8, 8, 2, 10, 5, 10, 3, 1, 0, 0, 4, 9, 7, 10, 7, 4, 2, 1, 3, 3, 10, 0, 10, 8, 0, 8, 2, 5, 2, 2, 0, 10, 6, 6, 1, 4, 8, 2, 5, 9, 5, 6, 3, 1, 10, 3, 8, 6, 8, 3, 4, 0, 3, 1, 6], 1), 205)\\nTest.assertEquals(sumFoundIndexes([2, 7, 1, 9, 1, 4, 8, 1, 0, 4, 4, 5], 9), 3)\\nTest.assertEquals(sumFoundIndexes([1, 9, 5, 7, 3, 6, 5, 10, 7, 9, 2, 1, 2, 9, 5, 1, 7, 3, 6, 2, 1, 6, 9, 8, 1, 2, 10, 3, 8, 9, 6, 7, 10, 8, 9, 10, 2, 2, 6, 7, 3, 9, 1, 2, 1, 3, 7, 5, 10], 7), 143)\\nTest.assertEquals(sumFoundIndexes([5, 2, 8, 3, 9, 3, 8, 3, 7, 1, 4, 6, 5, 7, 1, 3, 3, 8, 6, 0, 3, 8, 6, 10, 5, 10, 2, 6, 8, 7, 0, 10, 0, 6, 8, 1, 6, 9, 8, 8, 6, 7, 9, 1, 8, 4, 3, 8, 5, 3, 2], 1), 101)\\nTest.assertEquals(sumFoundIndexes([10, 10, 6, 10, 9, 9, 4, 0, 4, 1, 3, 4, 9, 6, 4, 5, 0, 1, 7, 8, 3, 4, 3, 3, 5, 1, 4, 7], 4), 86)\\nTest.assertEquals(sumFoundIndexes([0, 2, 8, 1, 1, 8, 3, 9, 8, 10, 4, 9, 7, 9, 4, 5, 5, 7, 4, 3, 2, 5, 6, 10, 5, 4, 9, 4, 7, 3, 10, 10, 10, 6, 2, 0, 5, 8, 6, 4, 6, 7, 5, 2, 8, 7, 2, 6, 1, 9, 3, 5, 0, 0, 5, 6, 2, 8, 6, 0, 0, 8, 1, 1, 0], 6), 293)\\nTest.assertEquals(sumFoundIndexes([10, 2, 5, 10, 1, 9, 10, 7, 7, 8, 4, 0, 7, 0, 9, 1, 0, 0, 3, 4, 5, 9, 10, 3, 1, 1, 9, 6, 7, 0, 8, 3, 4, 7, 0, 7, 7, 5, 3, 10, 3, 1, 1, 5, 5, 5, 1, 0, 10, 7, 3, 5, 1, 7, 1, 2, 1, 0, 7, 3, 2, 0, 0, 2, 3, 9, 6, 8, 0, 6, 0, 3, 0, 9, 10, 3, 1, 1, 3, 5, 1, 1, 8, 1, 3, 1, 6, 6, 3, 9, 7], 8), 188)\\nTest.assertEquals(sumFoundIndexes([0, 9, 1, 8, 1, 4, 3, 7, 9, 0, 0, 4, 9, 10, 4, 7, 6, 3, 8, 7, 7, 8, 8, 5, 4, 3, 8, 3, 8, 7, 3, 1, 6, 9, 6, 6, 6, 8, 9, 9, 6, 5, 0, 1, 4, 0, 2, 1, 4, 8, 7, 5, 7, 3, 3, 2, 4, 8, 3, 0, 3, 6, 10, 8, 5, 2, 9, 10, 5, 10, 2, 1, 1, 3, 8, 0, 7, 5, 8, 1, 8, 6, 10, 8, 10, 4, 2, 6], 5), 324)\\nTest.assertEquals(sumFoundIndexes([1, 9, 5, 5, 7, 5, 2, 4, 3, 9, 0, 5, 3, 2, 5, 9, 6, 9, 3], 1), 0)\\nTest.assertEquals(sumFoundIndexes([5, 4, 10, 2, 5, 5, 5, 0, 5, 2, 8, 8, 5, 3], 5), 35)\\nTest.assertEquals(sumFoundIndexes([4, 3, 2, 2, 4, 5, 5, 5, 1, 3, 8, 1, 8, 9, 0, 10], 9), 13)\\nTest.assertEquals(sumFoundIndexes([1, 8, 2, 9, 1, 8, 4, 0, 10, 0, 6, 10, 9, 7, 9, 4, 5, 2, 7, 7, 8, 1, 6, 2, 6, 0, 2, 7, 4, 8, 10, 2, 0, 0, 1, 2, 9, 9, 10, 3, 10, 8, 8, 5, 9, 3, 9, 1, 5, 4, 6, 7, 6, 8, 3, 10, 5, 8, 9, 2, 1, 5, 4, 2, 8, 9, 1, 1, 9, 7, 4, 9, 7, 7, 0, 4, 10, 3, 2, 8, 9, 0, 9, 1, 2, 1, 3, 1], 9), 616)\\nTest.assertEquals(sumFoundIndexes([6, 0, 7, 9, 2, 4, 0, 2, 9, 8, 6, 1, 2, 9, 2, 4, 2, 8, 3, 9, 9, 7, 3, 0, 9, 10, 9, 9, 3, 1, 2, 9, 6, 1, 4, 0, 2, 6, 9, 3, 3, 8, 3, 3, 5, 0, 2, 4, 10, 0, 1, 4, 3, 3, 2, 5, 6, 5, 0, 9, 0, 7, 4, 0, 3, 3, 7, 9, 3, 8, 7, 3, 4, 10, 5, 2, 7, 3, 2, 4, 1, 3, 5, 9, 0, 7, 10, 6, 6, 2, 1], 6), 310)\\nTest.assertEquals(sumFoundIndexes([1, 5, 0, 4, 3, 0, 4, 8, 10, 10, 3, 2, 2, 0, 2, 10, 2, 1, 3, 6, 4, 3, 6, 6, 0, 4, 9, 6, 0, 4, 1, 7, 3, 4, 3, 4, 9, 4, 5, 4, 2, 0, 4, 4, 7, 7, 7, 5, 9, 6, 0, 1, 7, 6, 5, 6, 0, 8, 7, 0, 5, 5, 6, 5, 0, 8, 5, 8, 6, 1, 6, 5, 5, 4, 7, 3, 7, 0, 2, 1, 7, 10], 1), 246)\\nTest.assertEquals(sumFoundIndexes([7, 8, 1, 2, 8, 6, 7, 10, 0, 4, 6, 9, 5, 10, 8, 2, 4, 9, 9, 7, 10, 2, 6, 9, 6, 5, 9, 1, 5, 7, 2, 7, 5, 3, 10, 2, 7], 5), 97)\\nTest.assertEquals(sumFoundIndexes([4, 5, 3, 0, 9, 9, 7, 4, 6, 4, 7, 3, 1, 8, 3], 2), 0)\\nTest.assertEquals(sumFoundIndexes([0, 1, 1, 9, 6, 5, 4, 5, 7, 4, 8, 6, 10, 6], 2), 0)\\nTest.assertEquals(sumFoundIndexes([0, 10, 4, 4], 9), 0)\\nTest.assertEquals(sumFoundIndexes([8, 6, 9, 3, 10, 6, 7, 5, 4, 8, 9, 9, 6, 8, 0, 1, 3, 3, 1, 4, 5, 7, 9, 9, 2, 9, 3, 7, 10, 8, 7, 3, 9, 9, 9, 10, 9, 3, 5, 4, 5, 9, 6, 2, 6, 1, 3, 8], 10), 67)\\nTest.assertEquals(sumFoundIndexes([7, 6, 1, 0, 8, 1, 4, 9, 4, 10, 9, 4, 1, 7, 10, 0, 9, 8, 1, 2, 10, 10], 6), 1)\\nTest.assertEquals(sumFoundIndexes([1, 10, 7, 2, 7, 4, 9, 4, 1, 1, 2, 2, 1, 0, 4, 5, 0], 6), 0)\\nTest.assertEquals(sumFoundIndexes([2, 0, 9, 8, 10, 1, 4, 5, 1, 10, 5, 8, 6, 7, 0, 7, 7, 9, 8, 8, 4, 0, 8, 7, 4, 4, 3, 9, 5, 3, 3, 10, 2, 0, 4, 4, 7, 8, 3, 1, 5, 3, 9, 8, 4, 1, 7, 1, 0, 6, 8, 3, 2, 1, 8, 9, 3, 6, 10, 10, 9, 5, 2, 4, 8, 4, 8, 10, 7, 8, 4, 7, 6, 6, 9, 1, 5, 5, 8, 1, 0, 5, 4, 1, 10, 6, 7, 2, 2], 7), 374)\\nTest.assertEquals(sumFoundIndexes([1, 10, 9, 3, 1, 3, 5, 8, 7, 5, 6, 6, 5, 8], 5), 27)\\nTest.assertEquals(sumFoundIndexes([1, 5, 4, 6, 1, 2, 6, 7, 3, 8, 2, 4, 4, 2, 5, 5, 10, 2, 2, 6, 9, 1, 2, 5, 0, 3, 7, 3, 8, 2, 7, 9, 10, 0, 0, 2, 1, 4, 6, 10, 2, 0, 6, 9, 1, 7, 2, 1, 7, 3, 7, 7, 9, 9, 0, 10, 3, 10, 9, 1, 6, 10, 6, 3, 5, 2, 8, 10, 7, 10], 4), 62)\\nTest.assertEquals(sumFoundIndexes([2, 10, 8, 2, 3, 1, 5, 4, 9, 0, 9, 2, 7, 5, 8, 10, 0, 3, 7, 7, 10], 10), 36)\\nTest.assertEquals(sumFoundIndexes([3, 7, 3, 8, 7, 9, 7, 2, 7, 4, 3, 4, 3, 5, 7, 0, 4, 10, 1, 9, 1, 5, 9, 4, 8, 9, 2, 3, 8, 6, 9, 10, 0, 6, 9, 0, 2, 4, 9, 10, 9, 6, 0, 9, 6, 0, 2, 4, 9, 10, 7, 9, 7, 2, 4, 5, 9, 4, 3, 8, 3, 1, 0, 3, 2, 0, 0, 10, 3, 2, 7, 10, 5, 4, 5, 5, 6, 7, 3, 3, 8, 8, 9, 8], 9), 493)\\nTest.assertEquals(sumFoundIndexes([3, 3, 4, 0, 5, 8, 4, 3, 9, 3, 8, 10, 1, 6, 0, 4, 2, 9, 2, 3, 8, 2, 8, 4, 0, 8, 6, 1, 9, 0, 9, 3, 7, 4, 10, 6, 8, 4, 8, 9, 0, 4, 0, 2, 7, 2, 3, 2, 5, 1, 0, 9, 0, 4, 7, 10, 1, 1, 3, 3, 8, 4, 8, 7, 2, 7, 6, 0], 6), 140)\\nTest.assertEquals(sumFoundIndexes([5, 8, 1, 9, 2, 2, 8, 10, 1, 2, 10, 6, 9, 2, 10, 0, 8, 1, 6, 5, 7, 5, 8, 8, 5, 8, 4, 6, 2, 10, 8, 2, 6, 3, 4, 3, 3, 3, 2, 1, 4, 6, 5, 9, 1, 10, 1, 9, 2, 6, 5, 10], 4), 100)\\nTest.assertEquals(sumFoundIndexes([9, 2, 2, 4, 1, 1, 10, 0, 0, 0, 0, 0, 10, 0, 10, 7, 0, 6, 10, 0, 2, 8, 5, 9, 6, 5, 9, 4, 9, 5, 9, 0, 3, 7, 5, 5, 9, 10, 2, 7, 7, 0, 0, 8, 6, 5, 10], 3), 32)\\nTest.assertEquals(sumFoundIndexes([8, 6, 4, 3, 7, 8, 1, 10, 0, 7, 9, 1, 4, 6, 4], 10), 7)\\nTest.assertEquals(sumFoundIndexes([4, 9, 7, 3, 10, 2, 2, 4, 0, 1, 1, 6, 5, 5, 1, 8, 8, 8, 3, 7, 3, 9, 3, 8, 8, 6, 7, 6, 2, 7, 9, 8, 9, 1, 7, 2, 3, 9, 5, 7, 9, 7, 5, 3, 0, 4, 3, 6, 5], 7), 190)\\nTest.assertEquals(sumFoundIndexes([6, 8, 0, 4, 8, 5, 6, 4, 10, 6, 3, 8, 9, 5, 6, 2, 7, 4, 8, 3, 4, 4, 8, 4, 8, 9, 3, 0, 8, 3, 2, 9, 8, 7, 7, 8, 7, 10, 9, 0], 7), 119)\\nTest.assertEquals(sumFoundIndexes([2, 6, 2, 4, 4, 6, 0, 10, 1, 8, 9, 5, 6, 5, 9, 1, 8, 4, 8, 9, 7, 8, 1, 0, 8, 5, 4, 1, 6, 3, 4, 10, 5, 1, 7, 5, 1, 2, 3, 6, 7, 0, 9, 4, 4, 5, 2, 7, 2, 0, 6, 3, 6, 0, 5, 1, 0, 8, 5, 8, 3, 9, 5, 6, 1, 8, 1, 7, 9, 3, 8, 3, 0, 8, 8, 4, 4, 9, 2, 7, 3, 3, 10, 10, 9, 4, 5, 0, 0, 3, 10, 9, 4, 2], 4), 495)\\nTest.assertEquals(sumFoundIndexes([4, 6, 10, 1, 3, 1, 4, 0, 6, 7, 1, 2, 7, 2, 4, 4, 7, 0, 3, 0, 4, 9, 7, 3, 1, 9, 5, 8, 8, 10, 7, 6, 0, 8, 10, 6, 9, 3, 10, 3, 10, 5, 10, 6], 10), 185)\\nTest.assertEquals(sumFoundIndexes([8, 4, 3, 1, 10, 4, 3, 10], 7), 0)\\nTest.assertEquals(sumFoundIndexes([4, 9, 5, 4, 8, 0, 0, 5, 6, 4, 5, 4, 5, 0, 1, 4, 10, 9, 7, 4, 0, 8, 1, 1, 1, 2, 1, 0], 5), 31)\\nTest.assertEquals(sumFoundIndexes([4, 4, 9, 3, 3, 9, 3, 9, 7, 3, 9, 5, 10, 0, 9, 0, 8, 10, 6, 9, 8, 6, 8, 0, 2, 3, 2, 0, 2, 1, 6, 4, 2, 1, 4, 4, 5, 7, 10, 2, 5, 2, 7, 2, 2, 10, 8, 0, 10, 8, 9, 3, 6, 8, 4, 8, 6, 5, 0, 2, 4, 9, 4, 6, 1, 1, 6, 0, 9, 2, 8, 7, 0, 8, 10, 0, 0, 3, 2, 10, 6, 7, 7, 3, 8, 10, 3, 9, 6, 0, 7, 1, 3, 7, 9, 10, 7, 4, 6, 0], 6), 572)\\nTest.assertEquals(sumFoundIndexes([9, 1, 7, 6, 5, 7, 4, 10, 7, 8, 1, 10, 10, 4, 4, 4, 7, 3, 8, 4, 1, 6, 1, 7, 7, 10, 9, 7, 8, 7, 5, 6, 10, 6, 4, 10, 9, 9, 4, 0, 0, 5, 6, 9, 3, 9, 8], 4), 139)\\nTest.assertEquals(sumFoundIndexes([7, 4, 4, 2, 10, 10, 2, 0, 4, 7, 2, 4, 9, 8, 5, 10, 2, 1, 3, 1, 3, 5, 3, 5, 10, 0, 1, 5, 4, 10, 3, 9, 9, 7, 10, 6, 2, 0, 2, 5, 0, 3, 9, 6, 2, 1, 4, 3, 6, 4, 9, 5], 3), 178)\\nTest.assertEquals(sumFoundIndexes([4, 6, 1, 7, 1, 7, 10, 8, 10, 5, 3, 6, 1, 8, 8, 3, 1, 4, 1, 8, 7, 10, 8, 0, 0, 9, 6, 8, 9, 6, 6, 5, 0, 7, 0, 8, 0, 8, 8, 7, 8, 7, 3, 7, 8, 10, 3, 7, 6, 6, 9, 9, 9, 5, 3, 9, 5, 3, 6, 7, 10, 0, 5, 3, 2, 5], 4), 17)\\nTest.assertEquals(sumFoundIndexes([2, 3, 6, 6, 5, 7, 7, 0, 5, 0, 0, 2, 6, 9, 5, 0, 3, 7, 1, 1, 8, 4, 2, 2, 9, 0, 10, 0, 10, 7, 7, 9, 7, 2, 0, 7, 4, 9, 3, 5, 7, 5, 7, 6, 10, 7, 1, 1, 7, 8, 10, 7, 8, 0, 5, 4, 1, 5, 7, 0, 2, 9, 10, 0, 0, 1, 7, 10, 5, 5, 10], 3), 55)\\nTest.assertEquals(sumFoundIndexes([7, 7, 10, 9, 9, 1, 9, 6, 4, 8, 2, 7, 10, 0, 0, 4, 0, 3, 10, 6, 4, 4, 7, 7, 1, 10, 6, 1, 5, 8, 1, 6, 0, 3, 7, 9, 3, 5, 10, 10, 2, 10, 0, 6, 3, 6, 4, 8, 6, 9, 9, 3, 8, 1, 10, 2, 3, 7, 1, 3, 0, 6, 9, 3, 4, 0, 5, 4, 3, 0, 1, 1, 4, 5, 2, 1, 7, 7, 9, 0, 5, 1, 4, 10, 5, 4, 3, 0, 9, 4, 0, 5, 10], 1), 494)\\nTest.assertEquals(sumFoundIndexes([9, 6, 7, 1, 0, 10, 5, 9, 3, 3, 0, 5, 0, 6, 1, 10, 1, 2, 6, 10, 2, 2, 1, 9, 9, 4, 3, 4, 5, 1, 1, 5, 0, 8, 4, 4, 2, 3, 9, 8, 8, 10, 5, 6, 2, 5, 6, 7, 8, 10, 9, 1, 10, 5, 0, 3, 7, 6, 10, 10, 4, 10, 1, 0, 4, 8, 2, 3, 3, 2, 4, 8, 6, 6], 3), 270)\\nTest.assertEquals(sumFoundIndexes([9, 4, 0, 0, 5, 5, 6, 7, 9, 10, 0, 10, 6, 6, 4, 8, 0, 6, 4, 5, 5, 3, 3, 7, 1, 7, 6], 9), 8)\\nTest.assertEquals(sumFoundIndexes([0, 1, 9, 3, 4, 6, 1, 6, 6, 1, 4, 2, 5, 7, 9, 0, 7, 1, 3, 8, 5, 7, 9, 4, 0, 4, 7, 10, 4, 3, 10, 8, 4, 5, 6, 1, 0, 10, 6, 3, 6, 8, 9, 5, 2, 6, 10, 2, 1, 7, 9, 2, 6, 8, 5], 7), 125)\\nTest.assertEquals(sumFoundIndexes([3, 2, 5, 0, 8, 5, 6, 1, 8, 7, 5, 10, 2, 2, 8, 8, 3, 6, 2, 4, 2, 9, 6, 7, 6, 5, 8, 8, 4, 0, 10, 7, 1, 7, 7, 10, 3, 3, 3, 5, 2, 1, 7, 2, 1, 8, 10, 7, 0, 9, 7, 7, 8, 6, 6, 7, 5, 10, 4, 5, 2, 1, 10, 5, 2, 9, 3], 4), 105)\",\"language\":\"javascript\",\"summary\":\"Create a function which takes in an array of numbers and a number to find. Return the sum of every index in the array which matches the chosen number.\\n\\nExamples\\nsumFoundIndexes([0, 3, 3, 0, 0, 3], 3) ➞ 8\\n// The number 3 was found at indexes 1, 2 and 5.\\n// 8 = 1 + 2 + 5\\n\\nsumFoundIndexes([1, 2, 3, 4, 5, 6], 3) ➞ 2\\n\\nsumFoundIndexes([100, 100, 100, 100, 100], 100)\",\"tags\":[\"language_fundamentals\",\"arrays\"],\"timestamp\":{\"$date\":1595628915529},\"title\":\"Sum of Found Indexes\",\"stats\":{\"completed\":{\"total\":381,\"ratings\":[1,1,1,1,1,2,1,1,1,2,2,2,1,2,1,1,2,2,0,2,2,0,2,1,1,1,1,0,2,2,2,2,2,0,1,2,0,2,1,2,1,2,2,3,1,0,1,2,1,2,2,2,1,2,1,0,2,2,1,2,1,2,2,0,0,1,1,2,1,1,2,2,1,2,1,2,1,1,0,0,2,2,2,1,1,2,0,0,0,2,1,2,1,1,2,1,2,2,2,0,1,0,1,2,2,2,2,0,1,2,2,2,2,2,2,1,1,2,2,2,3,2,2,2,2,2,0,1,2,2,2,2,0,2,1,1,2,0,2,2,2,1,2,2,0,2,1,0,2,2,2,2,1,3,2,2,1,0,1,0,0,2,0,1,2,1,2,0,2,2,1,2,1,2,2,2,0,2,2,2,5,3,2,2,2,2,2,2,2,2,2,0,1,0,2,0,0,2,2,2,2,2,1,2,2,2,3,2,2,2,2,0,2,0,0,0,4,3,1,0,1,2,1,2,1,2,1,1,1,2,1,1,2,2,3,2,3,1,2,2,0,2,1,2,2,1,2,2,2,2,1,1,5,0,1,1,1,1,1,4,1,1,3,1,0,0,2,2,1,2,2,0,2,2,2,2,2,1,0,1,1,1,2,2,0,2,2,2,2,0,2,1,2,2,1],\"rators\":[\"tAF9Gf6PiGogbZuWs\",\"buX4mCQhtXCfBjeno\",\"mfYrBKwDr4hXSFuuN\",\"PGCDJpQMN8Sjn9Gm6\",\"3e78HNaH5kEYXRd44\",\"mx58K4xY8JZjvYCoZ\",\"FGEeCTorXbX3WvjFW\",\"mrmgvjE42efhbtiPm\",\"nm3viAChHBBnahhbx\",\"mwg8jvMHHmQiQRrbr\",\"H46gRHmkdz2CRrGH9\",\"wbsPpDQDPogCf9Szr\",\"6BpBQnSGhzgvhXrEy\",\"coTsXQZW59EjCAB9d\",\"CH53jGETBeJTummf3\",\"r7mZLgpQWzRiGddL5\",\"FDqfqHn8ww9QoSFhb\",\"FJsvM5yqKuK9yMk9P\",\"8Z3dkvWBqtrMEE48N\",\"jnyub52Fi79drGvow\",\"s3p7iygyPJvsCaWSR\",\"mHT2bJb5SByfJ8yKS\",\"yjtdwc2AC4jA2RWtn\",\"nAmJEX7BkHLd9LsG2\",\"6bdrbeWGHM65ybcCm\",\"jkumHyXfMkhGcPgqC\",\"aWwEqY2zkwDXdFATC\",\"Ya3eHgs8x3unZRLpb\",\"Po3v3dHCk6wYGKMwi\",\"qvNk7pHSveLu3jqWw\",\"aEm3Wvj2rFYRL8Lrb\",\"4deyTem4Z3zgPLEv7\",\"vewKwcMeGuk3p3MsN\",\"x8WLcTkSgQkt7Eaj6\",\"L4mEjfrZ974Y7cZjn\",\"rehehi2Tr2mwaEoJE\",\"pLpcDC3EYx2DDQSdt\",\"C9LKGu2g5hSijvDzA\",\"Qi3ZTiut4tWJPHibz\",\"YXqaqjujocvg2gX4k\",\"QRv96jmNaYsWkxQEG\",\"ZK6YmYMsfwXYtaZ9P\",\"7gZKfvwaeqsGKXMEN\",\"E2hpke7mHxAWsw5t9\",\"mE2WrTtBBq4zuLdWp\",\"N7fwDd5JRDsuX7EKa\",\"bX6tpTCjwoi6XMMbK\",\"65dbBZynphj53nXqA\",\"WbXHZDxj5femhG7x2\",\"BdnE4RS5puoxo92mA\",\"moe6ztrsNzFymC3A7\",\"JPcvG7z3cqtrkeqYf\",\"i5QeAsrM4m6hzPTku\",\"ttuGK7od8simjgmCJ\",\"evTTY9hwrtogaNxXn\",\"BSkoT6o2GweZkqXbc\",\"a777e8chPvJkY3tKa\",\"2nCWnTXnmawovwdv9\",\"XAX32dz2EByd3qAK2\",\"n5wubRfh6zh8QRymN\",\"NchnDcEmsLTeFZ4FH\",\"bJtkZAzjvGcXiXXag\",\"2innwjWqxJHo4eRGh\",\"vNfR9v4dS6whkiwJJ\",\"7wtuhPesfhcYsfZaZ\",\"vtHbevf2tHqe6mRxX\",\"iCr5TEH8Xm3qRBnXW\",\"DMKGmgv3dXruCSjXi\",\"3WtHp4MBzciz4AE8M\",\"SNiJRRosrmSWssLj4\",\"nXToJ5kpsRfi4nyw2\",\"mwDdQwbZN6tXwAbBA\",\"z5ebtimXwFFJdYxoa\",\"N82kEBvpFE5FjbHrk\",\"xFxiPMktEDaX5BYZu\",\"QAZ5DGaWWYhku4BNz\",\"ThaiAKWWDw2W4QfJh\",\"eQXwk5zGckM8tCWYH\",\"7hzSvcYdq6QjoRnJY\",\"34bE6mric984YYLZQ\",\"u9cRf5kvtpRB5ffB3\",\"5MkhKJgPRnZyHPgf2\",\"oMLSgpSFQnY4ui8cB\",\"qzzyGD7fCCDjX25za\",\"5NGxHLcQ8Af2RJ4TN\",\"gASammzy8ZyrTurom\",\"fMqXimJLsPiuhT8A8\",\"tseyDEv9zaHBMvLL3\",\"jcPZ5ySXseCB7Ec3x\",\"tpczzXb5QopDzFXTE\",\"k5TGxBtLi9BXxeChT\",\"4Np3uu6Jj67L2CxiR\",\"oDnPTXrzYF4snDPXY\",\"DaBQKtm4xSgrxqTYF\",\"w8z5yWh3wsECSvSRB\",\"noaBx5QyY6pTS5bja\",\"zvhWpHAEk7YgxXaQd\",\"RE4Mm9T6Q9uygAxGS\",\"kp2ZbCewZJAbfd7xv\",\"s9qcJASB9WKPWaQzi\",\"BuGWvGZGiJELoMy5G\",\"wrxHLcdBEri4cyK6W\",\"hNEhHd8qodq4P3h2g\",\"58Kdtrp28S7irTsdP\",\"3eRfYkTEsuSEXHX2a\",\"ffB8T76Ye9ygL6QZZ\",\"GCsLzWAhLvniQqR3J\",\"4ntYzGHHBgqf58udP\",\"oyB4Wr4EeZnoDaa8B\",\"ifZgxv4DRGAbj4kaE\",\"3mg5PzwybZJo2Am9b\",\"jd9sRTnsyeKpPggba\",\"rpa7MXFzcXNWwbNiM\",\"fzHwF2zdGs9m9q6FK\",\"zgoq9MhrL2h75DAMA\",\"p5ZshR8zhTqmdhKDc\",\"AFfw7cGg83uYk2Miy\",\"ZtniSFrgec4oj6Pxm\",\"Rrb84KWhN5tjhMGMA\",\"LCn6qz2GoMr5577Rd\",\"JsRTAwWK7Nikj4sKA\",\"TjwyRbkPanQTP7AYs\",\"bRGGFe9s3LjxCfrbm\",\"fRzheK6GzMrmHQ4Kf\",\"NczXsSrYNX6nDWhjF\",\"4xwh4EZJPcG4dSe3W\",\"MbbySGQmkzbjg373M\",\"nkH3HfJXLMNcBMM79\",\"R9uaMzX2Y4ND8Cosm\",\"PAzNgJF54C2mYPkR9\",\"yWSGujxphYSsL63Zq\",\"2tCCFm5iefjrRSaxv\",\"QRoAN6gdwipTo7fwD\",\"75NY7vqimaATzRdAX\",\"Nb6LYPoQP6KJZt8mz\",\"ojiEx2Rk3qp6F9mZK\",\"svpXWhsSLLzYR8Rz4\",\"8BJyXvRWcrvN3nttS\",\"rrkEbZtHE6xZiamyu\",\"ro6kFAiwF9eKSJdQR\",\"3pb8q4K4jv6jta45d\",\"K9aHdd5ReP4JJwNKA\",\"ij9YRJvZz6WbqcGXS\",\"n7rbGugpEXsfpf75i\",\"qWR7eXxBiNee22A5u\",\"CJnuSjyCBMTbTiibD\",\"8N9tvpEaLrbrzj47L\",\"AasGs8AeX9Lcb9xJn\",\"4G4Gev8LHRYEkWHBw\",\"gyB5wJihaSZCWKTCB\",\"jtzNdgDCzsekkdpxA\",\"sj8yRK9uzJ5LLZABJ\",\"cp3X8hk8yNME7qoD9\",\"jWXdurfxtiaCq64sz\",\"v2w9GN4jHP2fgYdeE\",\"B7bdDjP5AmpLJHKBS\",\"Akk9m9HQFeCh6Lzki\",\"PH32cNxBjrK4a28sn\",\"Kntd2rSgWYWp8r4sP\",\"apAMWuG9JBWuGKT2m\",\"p6qLK4qS2dnFzDA7k\",\"JvCbqc2hc7PvJpTzo\",\"FRN2W8RYpJ6GPhgRy\",\"j2ugW5ihGv67sfh4e\",\"Cez87SYagYcjegmwT\",\"ZLKhdDeNpBrtv6QQZ\",\"nxycxLNEN4PXDotSh\",\"Wiui6EEuNHdRy56FR\",\"oChrXdrYeYenBTKks\",\"Gc2bmsof5vD2Hsgqv\",\"4Xv87xmdSnpYhi8hz\",\"XkPEb97Tnnvvf5fAY\",\"JW5J6sdJHAmDmfWnE\",\"dnsyDgvZyN9RDjaGA\",\"pEb93ZLiiTdcTZuc8\",\"j4JYXWLmkTDH6iqHr\",\"9Pzg45NEiRXhLtLh3\",\"M4vq8ATaS9Jg5X7iP\",\"teeMKvNXbjGWSwwMp\",\"X5TMRv7TBf7zELSXF\",\"RtPhDuwmvWNHiBxmG\",\"tPtz279rzBX8kCWMr\",\"SY9Euc4kQfRgetXTd\",\"STipuJs6kBvPqqsSE\",\"XAGJuJRsgxZNiAN9C\",\"2GqHbu7h7ajqtqkXv\",\"CNc6rmwhbxkxEhHAp\",\"YLTZRjM78Wi9J9Re4\",\"pdGuqmMyeN4wZaWwv\",\"ZTTJprKDvFqKGew7c\",\"zw7g7T8wE5R5CBhXr\",\"g4NCSxxHqHCGMpWwT\",\"kRvw5sGF6vG3Hweww\",\"BdvdJYwHZr7JpkHsn\",\"vqD6ERedxEyXyT3Sx\",\"mtnjnMWbijDjGrRrj\",\"Ek9PiwGewEGH6fcqz\",\"mjsSr58kTrcRxqscs\",\"nzAbdaGbJwgvkkEYj\",\"s6potBNc4hhYdAdJe\",\"Kt6oGAfrymXmAnn2d\",\"9HZbxzkzgz4CvePtv\",\"7kENXQQ8ABiPGfBRD\",\"DjPJY8kRgXbehNyGH\",\"eD63zchjA6Sn5qeud\",\"aDrjGTkZWi3ZSMFc7\",\"kuCQeknZkt7vmwsJZ\",\"omn98QP6uBd923Azp\",\"vGKxRcDYDsXzTQuEQ\",\"9oPfGpc74rAstazB6\",\"YmMgWhzhHhQLmGGgH\",\"daD4PtrAmXk4Q9jG7\",\"WBBN35jGBzzHWeLn5\",\"hcsis3yYvtR8YJY4W\",\"acHSYL6uQAgpgFMjp\",\"ZcqshY58sGEEvgeaq\",\"2Ni3PzJAc5fAhqBkb\",\"DjChaA6HXG2vBe4fK\",\"XcgeFavjBhRjRmCyP\",\"pWJWQDhqzDSmfaFam\",\"Yp7uvStL97cC9fKkY\",\"WSLPmXqJzRjtYkuwf\",\"Es4eX2stRpyoXeC7f\",\"SPCd6ssn7D6P6stCs\",\"bBRzXPk7u95YuDWEL\",\"srJ34BaybkQh3qRkM\",\"Dmxh4XZWkRStuBjPd\",\"bjn5DTzzaWCP5BDgX\",\"CFNWRPs3cCTJw6p9B\",\"PTo9qt93YqGvL8fCa\",\"4TuceAZ8oTDzsjhir\",\"E6DBfkTgHuPsDWdG8\",\"sNcDN3s3rH9wcNg5n\",\"3Gf7ikLijfoxabiPY\",\"m6qKkBY4aPWziyJTj\",\"Zp93Tit7CTRdkCMqp\",\"5voy2ycWXEyTkFZi5\",\"f3RAbWvE6uESq7KE5\",\"csgxwerMgZXe2wLqh\",\"2ZFoLTxcCARhwc8xX\",\"bHX48t6EJJ2tntqjn\",\"NtLvQMsFtWC3tsfFo\",\"fe3gsFT3MbZ4azEC9\",\"ZtTwZM9pQ2sAzhnMR\",\"AeZfR5dt45GYsMt8L\",\"DPi9QGLctq2y76KuE\",\"z8R4K9Cd7PNuh256A\",\"4wR64Jaibcom7tbYf\",\"2Qk2mFu9HBFzrB24i\",\"5hHf2e9zimbmxMqqF\",\"J7d397iB5GuWRAMfg\",\"8EJ4j2fcfjTJ7Zrzu\",\"erQgJKaHaETRcqs4x\",\"cgCQDs9i7yChKeAjE\",\"5uj4mTXdaDL3wLDWw\",\"HsPja7ovojQB8WKJp\",\"vEapufGjE49e5JSch\",\"ApqWTmEEkTCsDou48\",\"wJTDDTE3TrmSXKP4d\",\"LwD3CyYSiBfg3mA4r\",\"K45zPJxsABuA3WSyj\",\"8s5Bdrn7RTga7DL6x\",\"npp5hesJrst6ghKSM\",\"k6QB6fzbj4LsWktRL\",\"eANW47mfA359Y6JyP\",\"3xMRkNrEPHEw99y56\",\"TtrXnGzi9MyhLvWiz\",\"n4Y5EEGCjmrK99yrt\",\"p7FijkzSDk4jgAbNG\",\"pi76g3eRpnKrhee2a\",\"o8F8jLRGk5eu6m6do\",\"oDtGiNqDMHmhHE3J8\",\"Xk2g4CNFAnYcvxiSr\",\"733qgZ7ZSSSrzbXGw\",\"yuLxi2qBJvMnwgdgJ\",\"eomLS3wh6tQPN8jtH\",\"QjGNkRM3Xc78yShJN\",\"szQg8dxKNNre3v3Jk\",\"ftXLsTaA7yHmhuEsY\",\"sHnfwDzKzmeApjTv8\",\"ZaZPuCX89THy5XyK2\",\"PAnur8xLTthNL3epT\",\"nBJve5CzG6WAw7WFQ\",\"mpLFbFKjY6u3nsDMv\",\"QvEXmSEo3ANp3yPyH\",\"sfj3i3eEAfZa3f9kg\",\"NGvCPuMiAP3xrRLfB\",\"ckMvGF5TAyCwcxJBm\",\"JFiiZhAZTNQSvjzdp\",\"49XFttjKo2QhEWT3R\",\"ruzwBPphPDRgLXdnP\",\"RoGGD5cpHb4ftdLDv\",\"E3fkFzNeAGctuvqA2\",\"wo4cpen33NYFHNca7\",\"QHiEYtz3tX3s9nETo\",\"Q7Yxda7dqKeYPs2Db\",\"2QifjAQzAEqqnk86G\",\"j5FSQCayX3By73CCw\",\"gXTAie79kiw28tx5u\",\"hCfruGWxw7v64teEr\",\"sN2JyFeJCwfwwHPwF\",\"ZKuwzkssrSsDGNPr5\",\"jyoLggHk8xQKZuoQC\",\"fjBB8rBHeCeMGELvW\",\"jicWFrNKadYuLhqxh\",\"uxKGACwmZ6FNZsMwE\",\"ZpLfGJzcKXzNhytAc\",\"x2Cz7S8rCKJqCE3Xe\",\"bfYmA3LMvhSrK59cn\",\"SCYNpjgtLCE9rKpYB\",\"Y7xPTPKpNAEiM2jkH\",\"9XnGoq9Tv6ut3zTtH\",\"MGobf6w7T8aap3QYp\",\"sMcFMPkMJC4Kh6ymj\",\"rPsSEYqwmttMPEuvo\",\"d8JhF9zfpexkRnCea\",\"HCfkcKnPs9mrJojdG\",\"QguFWo84zgF3c8BGr\",\"AMpQSjKsRqhCDyS2j\",\"z47JaNrQMgvuPx5HE\",\"NJCmkbH5e7qbtZYhd\",\"inbiBEY2tizFwkN84\",\"XT23a68TjWwNE7Qko\",\"WpNHMgfjZE8aNN2MP\",\"BBHKgNQBKjnzoGsew\",\"QdLpawzgysGwDdD3o\",\"mcQeGhkZAyen6RhJf\",\"eKHQ5g8uEdoBgdafr\",\"xsDyJstYoBZRS8pJH\",\"pxgAHHB8hNEegCYXm\",\"4WYjScmBWK9eXRzvd\",\"gf4xrfguK6KiEF9yi\",\"3rQ3fN5SM2eGHmTi5\",\"jzdjJtfQiCYmiyvzh\",\"pPpmP7xeJzGgK362R\",\"jkkKzNT77bMStXhpW\",\"LPZ2QKCoB8q6rG25c\",\"QGjY3hgPYPMmMjc7j\",\"Fk47SQxbHEJRw4u76\",\"CHvzhtXnv8HTbPQ56\",\"4DQRCevo5EfaCymZM\",\"qAEumdjLRx2AGAmzw\",\"psdbt2PkjPv4qTwtr\",\"DPpSwhhiuF4Y9YR2i\",\"8JJHJfbYpxvDiPpBn\"],\"quality\":[2,5,5,5,5,3,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,3,5,5,5,5,5,5,4,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,3,5,5,5,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"quality\":4.781818181818182,\"family\":[{\"_id\":\"TTu48ECaTRwZDj69x\",\"language\":\"javascript\"},{\"_id\":\"YKgzPFZKt9XHXQHAu\",\"language\":\"python3\"},{\"_id\":\"jmpHxPTwjJrbntXQ6\",\"language\":\"ruby\"}]}}"]