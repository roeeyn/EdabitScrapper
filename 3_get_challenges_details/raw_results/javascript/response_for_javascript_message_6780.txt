a["{\"msg\":\"result\",\"id\":\"2133\",\"result\":{\"_id\":\"3zB2qyJRpvJGCsCj4\",\"author\":\"zatoichi49\",\"authorId\":\"tAF9Gf6PiGogbZuWs\",\"code\":\"function binaryClock(time) {\\n\\t\\n}\",\"difficulty\":2.966666666666667,\"familyId\":\"hZDpZNZW9dDpXvj7b\",\"instructions\":\"A binary clock displays the time of day in binary format. Modern binary clocks have six columns of lights; two for each of the hours, minutes and seconds. The photo below shows a binary clock displaying the time \\\"12:15:45\\\":\\n\\n![](https://edabit-challenges.s3.amazonaws.com/220px-Digital-BCD-clock.jpg)\\n\\nThe binary values increase from the bottom to the top row. Lights on the bottom row have a value of 1, lights on the row above have a value of 2, then 4 on the row above that, and finally a value of 8 on the top row. Any 24-hour time can be shown by switching on a certain combination of lights. For example, to show the time \\\"10:37:49\\\":\\n\\n![](https://edabit-challenges.s3.amazonaws.com/440px-Binary_clock.svg.png)\\n\\nYou've decided to build your own binary clock, and you need to figure out how to light each row of the clock to show the correct time. Given the time as a string, return an array containing strings that shows the lights for each row of the clock (top to bottom). Use \\\"1\\\" for on, and \\\"0\\\" for off. Leave a blank space for any part of the row that doesn't require a light.\\n\\n### Examples\\n```\\nbinaryClock(\\\"10:37:49\\\") ➞ [\\n  \\\" 0 0 1\\\",\\n  \\\" 00110\\\",\\n  \\\"001100\\\",\\n  \\\"101101\\\"\\n]\\n\\nbinaryClock(\\\"18:57:31\\\") ➞ [\\n  \\\" 1 0 0\\\",\\n  \\\" 01100\\\",\\n  \\\"000110\\\",\\n  \\\"101111\\\"\\n]\\n\\nbinaryClock(\\\"10:50:22\\\") ➞ [\\n  \\\" 0 0 0\\\",\\n  \\\" 01000\\\",\\n  \\\"000011\\\",\\n  \\\"101000\\\"\\n]\\n```\\n\\n### Notes\\nSee the **Resources** section for more information on binary clocks.\",\"isHidden\":false,\"lab\":\"Test.assertSimilar(binaryClock(\\\"07:24:16\\\"), [' 0 0 0', ' 10101', '011001', '010010'])\\nTest.assertSimilar(binaryClock(\\\"13:48:18\\\"), [' 0 1 1', ' 01000', '010000', '110010'])\\nTest.assertSimilar(binaryClock(\\\"18:48:15\\\"), [' 1 1 0', ' 01001', '000000', '100011'])\\nTest.assertSimilar(binaryClock(\\\"11:47:55\\\"), [' 0 0 0', ' 01111', '000100', '110111'])\\nTest.assertSimilar(binaryClock(\\\"05:46:39\\\"), [' 0 0 1', ' 11100', '000110', '010011'])\\nTest.assertSimilar(binaryClock(\\\"20:35:19\\\"), [' 0 0 1', ' 00100', '101000', '001111'])\\nTest.assertSimilar(binaryClock(\\\"10:51:40\\\"), [' 0 0 0', ' 01010', '000000', '101100'])\\nTest.assertSimilar(binaryClock(\\\"10:16:17\\\"), [' 0 0 0', ' 00101', '000101', '101011'])\\nTest.assertSimilar(binaryClock(\\\"08:17:26\\\"), [' 1 0 0', ' 00101', '000111', '001100'])\\nTest.assertSimilar(binaryClock(\\\"17:48:59\\\"), [' 0 1 1', ' 11010', '010000', '110011'])\\nTest.assertSimilar(binaryClock(\\\"20:04:33\\\"), [' 0 0 0', ' 00100', '100011', '000011'])\\nTest.assertSimilar(binaryClock(\\\"01:35:39\\\"), [' 0 0 1', ' 00100', '001010', '011111'])\\nTest.assertSimilar(binaryClock(\\\"13:23:39\\\"), [' 0 0 1', ' 00000', '011110', '110111'])\\nTest.assertSimilar(binaryClock(\\\"01:56:09\\\"), [' 0 0 1', ' 01100', '000100', '011001'])\\nTest.assertSimilar(binaryClock(\\\"10:50:22\\\"), [' 0 0 0', ' 01000', '000011', '101000'])\\nTest.assertSimilar(binaryClock(\\\"07:41:09\\\"), [' 0 0 1', ' 11000', '010000', '010101'])\\nTest.assertSimilar(binaryClock(\\\"10:20:42\\\"), [' 0 0 0', ' 00010', '001001', '100000'])\\nTest.assertSimilar(binaryClock(\\\"02:19:30\\\"), [' 0 1 0', ' 00000', '010010', '001110'])\\nTest.assertSimilar(binaryClock(\\\"13:41:41\\\"), [' 0 0 0', ' 01010', '010000', '110101'])\\nTest.assertSimilar(binaryClock(\\\"03:17:28\\\"), [' 0 0 1', ' 00100', '010110', '011100'])\",\"language\":\"javascript\",\"summary\":\"A binary clock displays the time of day in binary format. Modern binary clocks have six columns of lights; two for each of the hours, minutes and seconds. The photo below shows a binary clock displaying the time \\\"12:15:45\\\":\\n\\nThe binary values increase from the bottom to the top row. Lights on the bottom row have a value of 1, lights on the row above have a val\",\"tags\":[\"arrays\",\"strings\"],\"timestamp\":{\"$date\":1577738747226},\"title\":\"Building A Binary Clock\",\"stats\":{\"completed\":{\"total\":29,\"ratings\":[3,3,3,3,3,2,1,3,3,3,3,4,2,2,0,4,2,4,3,4,3,5,4,0,4,3,4,4,3,4],\"rators\":[\"cRpaCxYRmGcN3Nsoj\",\"yjtdwc2AC4jA2RWtn\",\"AasGs8AeX9Lcb9xJn\",\"n5wubRfh6zh8QRymN\",\"65dbBZynphj53nXqA\",\"7TBJGzjX45B5LZ8M8\",\"FJsvM5yqKuK9yMk9P\",\"Kc3SDafimwpZWrATJ\",\"7Nz3GAqN3SMgSiyTT\",\"h4jFmtbFn92eA4649\",\"NchnDcEmsLTeFZ4FH\",\"aEm3Wvj2rFYRL8Lrb\",\"CeG7HoyDtx7b5N2g7\",\"Ek9PiwGewEGH6fcqz\",\"ffB8T76Ye9ygL6QZZ\",\"7hXDHFcBp6ytxjA5f\",\"uP9SRKxpG4GjKkKq5\",\"Q5MC3YFXBToiG3vJ7\",\"hqJSZYs5h6t8qjEX7\",\"nLXwBBGP4qdjNh8oz\",\"RDf6GPtAQEzxGuyPX\",\"4Xv87xmdSnpYhi8hz\",\"JGBCMpnbbi5ztuFoX\",\"P8bXFR4cHwFia9rNM\",\"oDtGiNqDMHmhHE3J8\"],\"quality\":[]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":0,\"family\":[{\"_id\":\"JrP8aXb8tF92SriAY\",\"language\":\"cpp\"},{\"_id\":\"DZL7PpHQyPvkYiyDL\",\"language\":\"csharp\"},{\"_id\":\"3zB2qyJRpvJGCsCj4\",\"language\":\"javascript\"},{\"_id\":\"E9Wkppxyo763XywBe\",\"language\":\"python3\"},{\"_id\":\"Mmnx4S5ZJncJPhbnr\",\"language\":\"ruby\"},{\"_id\":\"NEKp7kukbwmCPDc5n\",\"language\":\"swift\"}]}}"]