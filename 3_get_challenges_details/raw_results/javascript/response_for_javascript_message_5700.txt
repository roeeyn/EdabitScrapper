a["{\"msg\":\"result\",\"id\":\"1598\",\"result\":{\"_id\":\"j8bPBvzSTsrXpoMHB\",\"author\":\"MattDESTROYER\",\"authorId\":\"qvCppNAZjAkNdBSu6\",\"code\":\"function palendromeTimestamps(hours1, minutes1, seconds1, hours2, minutes2, seconds2) {\\n\\t\\n}\",\"difficulty\":2.272727272727273,\"familyId\":\"4Bt4ZX35rZcRTpKvc\",\"instructions\":\"Create a function that takes two times of day (hours, minutes, seconds) and returns the number of occurences of palindrome timestamps within that range, inclusive.\\n\\nA palindrome timestamp should be read the same hours : minutes : seconds as seconds : minutes : hours, keeping in mind the seconds and hours digits will reverse. For example, _02 : 11 : 20_ is a palindrome timestamp.\\n\\n### Examples\\n```\\npalendromeTimestamps(2, 12, 22, 4, 35, 10) ➞ 14\\n\\npalendromeTimestamps(12, 12, 12, 13, 13, 13) ➞ 6\\n\\npalendromeTimestamps(6, 33, 15, 9, 55, 10) ➞ 0\\n```\\n\\n### Notes\\n- Expect military time.\\n- Include the given time parameters if they happen to be palendromes.\\n- The parameter timestamps are chronological.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertEquals(palendromeTimestamps(2, 12, 22, 4, 35, 10), 14)\\nTest.assertEquals(palendromeTimestamps(12, 12, 12, 13, 13, 13), 6)\\nTest.assertEquals(palendromeTimestamps(6, 33, 15, 9, 55, 10), 0)\\nTest.assertEquals(palendromeTimestamps(11, 00, 11, 11, 00, 11), 1)\\nTest.assertEquals(palendromeTimestamps(10, 22, 01, 12, 22, 21), 13)\",\"language\":\"javascript\",\"quality\":0,\"summary\":\"Create a function that takes two times of day (hours, minutes, seconds) and returns the number of occurences of palindrome timestamps within that range, inclusive.\\n\\nA palindrome timestamp should be read the same hours : minutes : seconds as seconds : minutes : hours, keeping in mind the seconds and hours digits will reverse. For example, 02 : 11 : 20 is a pali\",\"tags\":[\"math\",\"numbers\"],\"timestamp\":{\"$date\":1606033636992},\"title\":\"Palindrome Timestamps\",\"stats\":{\"completed\":{\"total\":18,\"ratings\":[2,2,2,2,2,2,0,0,2,3,1,4,0,3,2,3,3,3,3,3,5,3],\"quality\":[],\"rators\":[\"CNc6rmwhbxkxEhHAp\",\"g4NCSxxHqHCGMpWwT\",\"3Gf7ikLijfoxabiPY\",\"u9cRf5kvtpRB5ffB3\",\"mHT2bJb5SByfJ8yKS\",\"yjtdwc2AC4jA2RWtn\",\"Yp7uvStL97cC9fKkY\",\"vGKxRcDYDsXzTQuEQ\",\"65dbBZynphj53nXqA\",\"6BpBQnSGhzgvhXrEy\",\"J84HBbNLpHbTenwcg\",\"hCfruGWxw7v64teEr\",\"49XFttjKo2QhEWT3R\",\"tAF9Gf6PiGogbZuWs\",\"Xk2g4CNFAnYcvxiSr\",\"jyoLggHk8xQKZuoQC\",\"buX4mCQhtXCfBjeno\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"ixze8NjPsTeSEJpEw\",\"language\":\"cpp\"},{\"_id\":\"asngMFwniLcegJJ7P\",\"language\":\"csharp\"},{\"_id\":\"j8bPBvzSTsrXpoMHB\",\"language\":\"javascript\"},{\"_id\":\"htMy9tkX4wFWHZtsY\",\"language\":\"python3\"},{\"_id\":\"GHtK53uhAfPJ3vfdS\",\"language\":\"ruby\"}]}}"]