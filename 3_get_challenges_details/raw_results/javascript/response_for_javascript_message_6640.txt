a["{\"msg\":\"result\",\"id\":\"2064\",\"result\":{\"_id\":\"j4jFjDQZCQtJ4nDSA\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"function whoGoesFree(n, k) {\\n\\t\\n}\",\"difficulty\":2.8947368421052633,\"familyId\":\"BQRHjFzyyy4aSrGr3\",\"instructions\":\"A group of `n` prisoners stand in a circle awaiting execution. Starting from an arbitrary position(0), the executioner kills every `k`th person until one person remains standing, who is then granted freedom (see examples).\\n\\nCreate a function that takes 2 arguments — the number of people to be executed `n`, and the step size `k`, and returns the original position (index) of the person who survives.\\n\\n### Examples\\n```\\nwhoGoesFree(9, 2) ➞ 2\\n\\n// Prisoners = [0, 1, 2, 3, 4, 5, 6, 7, 8]\\n// Executed people replaced by - (a dash) for illustration purposes.\\n// 1st round of execution = [0, -, 2, -, 4, -, 6, -, 8]  -> [0, 2, 4, 6, 8]\\n// 2nd round = [-, 2, -, 6, -] -> [2, 6]  # 0 is killed in this round because it's beside 8 who was skipped over.\\n// 3rd round = [2, -]\\n\\nwhoGoesFree(9, 3) ➞ 0\\n\\n// [0, 1, 2, 3, 4, 5, 6, 7, 8]\\n// [0, 1, -, 3, 4, -, 6, 7, -] -> [0, 1, 3, 4, 6, 7]\\n// [0, 1, -, 4, 6, -] -> [0, 1, 4, 6]\\n// [0, 1, -, 6] -> [0, 1, 6]\\n// [0, -, 6] -> [0, 6]\\n// [0, -] -> [0]\\n```\\n\\n### Notes\\nRefer to **Resources** tab for more info.\",\"lab\":\"Test.assertEquals(whoGoesFree(9, 2), 2)\\nTest.assertEquals(whoGoesFree(9, 3), 0)\\nTest.assertEquals(whoGoesFree(7, 2), 6)\\nTest.assertEquals(whoGoesFree(7, 3), 3)\\nTest.assertEquals(whoGoesFree(15, 4), 12)\\nTest.assertEquals(whoGoesFree(14, 3), 1)\\nTest.assertEquals(whoGoesFree(53, 7), 21)\\nTest.assertEquals(whoGoesFree(543, 21), 455)\\nTest.assertEquals(whoGoesFree(673, 13), 303)\",\"language\":\"javascript\",\"summary\":\"A group of n prisoners stand in a circle awaiting execution. Starting from an arbitrary position(0), the executioner kills every kth person until one person remains standing, who is then granted freedom (see examples).\\n\\nCreate a function that takes 2 arguments — the number of people to be executed n, and the step size k, and returns the original position (inde\",\"tags\":[\"loops\",\"recursion\",\"math\"],\"timestamp\":{\"$date\":1559641223082},\"title\":\"Josephus Permutation\",\"stats\":{\"completed\":{\"total\":32,\"ratings\":[3,3,3,3,3,3,3,3,3,3,3,4,0,0,2,3,3,4,4,5,2,3,3,3,2,3,3,3,4,3,3,2,4,3,2,4,3,2],\"rators\":[\"BkPgkDQGHm66X4Qai\",\"Akq3fQcPRgPrWfsye\",\"65dbBZynphj53nXqA\",\"bwFLCGarfKpYFnr69\",\"Sch3WYznE7GuoCkxu\",\"av9jN3SbNRM7Xe2qw\",\"dgwRvPi62zKghWiHb\",\"SDtZFL5NzAoCPofXk\",\"8xuMMGF7fyQWL2fKH\",\"2NJuDfSqdrF8kHHni\",\"KAwnrRNbgiZ2uAr8v\",\"n5wubRfh6zh8QRymN\",\"yjtdwc2AC4jA2RWtn\",\"5Zq3aGdvh4LHBvnJL\",\"AasGs8AeX9Lcb9xJn\",\"St7dhE5Hot8btYGMy\",\"cRpaCxYRmGcN3Nsoj\",\"dPM2Rk2iMkznyXNEt\",\"YER6iBcpJCuhgrYDN\",\"JGBCMpnbbi5ztuFoX\",\"5YvGxXo8GKRSvPHRA\",\"aEm3Wvj2rFYRL8Lrb\",\"QRv96jmNaYsWkxQEG\",\"bXaGdBM8FBLHf7N6Y\",\"SWurRy4x98jYRMzWG\",\"a777e8chPvJkY3tKa\",\"zd9FLSzsGz3evKafy\",\"2Qk2mFu9HBFzrB24i\",\"M4vq8ATaS9Jg5X7iP\",\"d8JhF9zfpexkRnCea\"],\"quality\":[5]},\"tests\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"instructions\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":5,\"family\":[{\"_id\":\"yYwNg8Dw2HZyGRwrf\",\"language\":\"cpp\"},{\"_id\":\"mDbeein6NJgDjYy3c\",\"language\":\"java\"},{\"_id\":\"j4jFjDQZCQtJ4nDSA\",\"language\":\"javascript\"},{\"_id\":\"4AjWvJdZpFEMbGALd\",\"language\":\"python3\"},{\"_id\":\"48wCSbfh6Q42ihGiJ\",\"language\":\"ruby\"}]}}"]