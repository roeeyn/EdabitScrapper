a["{\"msg\":\"result\",\"id\":\"2139\",\"result\":{\"_id\":\"chDJCBDzZkjSExMwm\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"function isExact(n) {\\n\\t// Your recursive implementation of the code.\\n\\treturn isExact(n)\\n}\",\"difficulty\":2.9767441860465116,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"neWhQdGFaHGu6PQgQ\",\"instructions\":\"Create a **recursive** function that tests if a number is the exact upper bound of the factorial of `n`. If so, return an array of the **exact factorial bound** and `n`, or otherwise, the string  `\\\"Not an exact bound!\\\"`.\\n\\n### Examples\\n```\\nisExact(6) ➞ [6, 3]\\n\\nisExact(24) ➞ [24, 4]\\n\\nisExact(125) ➞ \\\"Not an exact bound!\\\"\\n\\nisExact(720) ➞ [720, 6]\\n\\nisExact(1024) ➞ \\\"Not an exact bound!\\\"\\n\\nisExact(40320) ➞ [40320, 8]\\n```\\n\\n### Notes\\n- It is expected from the challenge-takers to come up with a solution using the concept of **recursion** or the so-called **recursive approach**.\\n- You can read on more topics about recursion (see **Resources** tab) if you aren't familiar with it yet or haven't fully understood the concept behind it before taking up this challenge.\\n- There will be no exceptions to handle. All inputs are positive integers.\\n- A recursive approach is prone to **Uncaught RangeError** or exceededing the maximum call size of the stack.\\n- A non-recursive version of this challenge (of lesser difficulty and the total liberty of not using a recursive approach) can be found [here](https://edabit.com/challenge/jFqttm7eFe8j4WMPu).\\n- If you think recursion is fun, you can find a collection of those challenges [here](https://edabit.com/collection/YJH4pAyqDbhLc4STc).\",\"isFree\":false,\"isHidden\":false,\"lab\":\"const recursive = f => (`${f}`.match(RegExp(`${f.name}`,'gm'))||[]).length > +(/function/.test(f))\\nTest.assertNotEquals(recursive(isExact), false, 'Recursion is required!')\\n\\nlet [numVectors, resVectors] = [[\\n  2, 6, 24, 120, 5040, 40320, 3628800, 20922789888000, 125, 721, 1024, 41845579776000], [\\n  [2, 2], [6, 3], [24, 4], [120, 5],\\n  [5040, 7], [40320, 8], [3628800, 10], [20922789888000, 16],\\n  \\\"Not an exact bound!\\\", \\\"Not an exact bound!\\\", \\\"Not an exact bound!\\\", \\\"Not an exact bound!\\\"\\n]]\\n\\nfor (let i in numVectors)\\n  i < 8 ? Test.assertSimilar(isExact(numVectors[i]), resVectors[i]) :\\n          Test.assertEquals(isExact(numVectors[i]), resVectors[i])\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[5,5,5,5,5,5,1,2,0,3,3,3,5,4,3,3,2,2,2,0,3,2,3,5,5,3,1,3,3,2,2,4,4,2,5,2,1,0,4,2,2,3,4],\"rators\":[\"a777e8chPvJkY3tKa\",\"yjtdwc2AC4jA2RWtn\",\"aEm3Wvj2rFYRL8Lrb\",\"h4jFmtbFn92eA4649\",\"mHT2bJb5SByfJ8yKS\",\"FJsvM5yqKuK9yMk9P\",\"n5wubRfh6zh8QRymN\",\"Es4eX2stRpyoXeC7f\",\"va3fDAQm4sqSMoy3R\",\"JGBCMpnbbi5ztuFoX\",\"bX6tpTCjwoi6XMMbK\",\"ecyYaPZLMBMGGrfrJ\",\"5NGxHLcQ8Af2RJ4TN\",\"P6Nj8vL3bcTZFD2Xz\",\"HmQu5Cd2KivaXhaR7\",\"pWJWQDhqzDSmfaFam\",\"jneukuzdfTkRGgCe8\",\"u47H6FgG2SRhyeuBY\",\"xZXiF6KPmwuowYTgc\",\"wXHkXaZdRhA2bAqMK\",\"DPi9QGLctq2y76KuE\",\"ohccMNJFAqmfn6CL2\",\"kp2ZbCewZJAbfd7xv\",\"AaCXEKbwGuYNSTCHN\",\"yr822PZmmiDDenxpB\",\"QRv96jmNaYsWkxQEG\",\"zvqXKeGRDH5dKJgv5\",\"Yp7uvStL97cC9fKkY\",\"DZcCpdkxEKFsvYufx\",\"ER2CfBcuLqQzpav9M\",\"vh9nCvjetSkjRgLgm\",\"QJM5KcENEwS24NDs7\",\"GsrjAqoAdLATJH9qD\",\"QjGNkRM3Xc78yShJN\",\"pi76g3eRpnKrhee2a\",\"2sLmHo7G2irSyrDB7\",\"WznKtKrCp9BxvBAfg\",\"c8qtrDgBAsTfBAD3S\",\"Rd9zf4QYPnruuT4Q6\",\"fBpTxFA8iDCY2p5Qp\",\"cRpaCxYRmGcN3Nsoj\",\"GxiKdXPCMtmHRrPiQ\",\"QsagJPqhRzoTfXNKs\",\"E8DKpHExS5PZ8Tj8n\",\"ZgdejAm3u2Q6tFpfg\",\"B9pT6A6rgTxoPZDKA\",\"nweRDtL2ZPxYmRNkd\",\"s678Wirfor5uYL5T6\",\"79zo3HCwjizB6FxS9\",\"PH32cNxBjrK4a28sn\",\"huPdTDxcAgntMc6G6\",\"TtrXnGzi9MyhLvWiz\"],\"total\":59,\"quality\":[5,5,5,4,5,2,3,4,5,4,5,1,4,3]},\"flags\":0},\"summary\":\"Create a recursive function that tests if a number is the exact upper bound of the factorial of n. If so, return an array of the exact factorial bound and n, or otherwise, the string  \\\"Not an exact bound!\\\".\\n\\nExamples\\nisExact(6) ➞ [6, 3]\\n\\nisExact(24) ➞ [24, 4]\\n\\nisExact(125) ➞ \\\"Not an exact bound!\\\"\\n\\nisExact(720) ➞ [720, 6]\\n\\nisExact(1024) ➞ \\\"Not an exact bound!\\\"\",\"tags\":[\"recursion\",\"numbers\",\"math\"],\"timestamp\":{\"$date\":1594849039921},\"title\":\"Recursion: Exact Factorial Bounds\",\"quality\":3.9285714285714284,\"family\":[{\"_id\":\"HJSpyCG7we27Afkqn\",\"language\":\"java\"},{\"_id\":\"chDJCBDzZkjSExMwm\",\"language\":\"javascript\"},{\"_id\":\"zhqL89ZWgbxbixsdD\",\"language\":\"python3\"}]}}"]