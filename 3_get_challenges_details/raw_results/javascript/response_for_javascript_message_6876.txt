a["{\"msg\":\"result\",\"id\":\"2181\",\"result\":{\"_id\":\"HX5eEuKb7epMgsKsj\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"function isWristband(arr) {\\n\\t\\n}\",\"difficulty\":3.2796610169491527,\"editorId\":\"mNMQvcxKSSvqqMYCH\",\"familyId\":\"hQ4MBuEj3CR4YbDN2\",\"instructions\":\"A wristband can have 4 patterns: \\n\\n1. **horizontal**: each item in a row is identical.\\n2. **vertical**: each item in a column is identical.\\n3. **diagonal left**: each item is identical to the one on it's upper left or bottom right.\\n4. **diagonal right**: each item is identical to the one on it's upper right or bottom left.\\n\\nYou are shown an **incomplete section** of a wristband.\\n\\nWrite a function that returns `true` if the section can be correctly classified into one of the 4 types, and `false` otherwise.\\n\\n### Examples\\n```\\nisWristband([\\n  [\\\"A\\\", \\\"A\\\"],\\n  [\\\"B\\\", \\\"B\\\"],\\n  [\\\"C\\\", \\\"C\\\"]\\n]) ➞ true \\n// Part of horizontal wristband.\\n\\nisWristband([\\n  [\\\"A\\\", \\\"B\\\"],\\n  [\\\"A\\\", \\\"B\\\"],\\n  [\\\"A\\\", \\\"B\\\"]\\n]) ➞ true \\n// Part of vertical wristband.\\n\\nisWristband([\\n  [\\\"A\\\", \\\"B\\\", \\\"C\\\"],\\n  [\\\"C\\\", \\\"A\\\", \\\"B\\\"],\\n  [\\\"B\\\", \\\"C\\\", \\\"A\\\"],\\n  [\\\"A\\\", \\\"B\\\", \\\"C\\\"]\\n]) ➞ true\\n// Part of diagonal left wristband.\\n\\nisWristband([\\n  [\\\"A\\\", \\\"B\\\", \\\"C\\\"],\\n  [\\\"B\\\", \\\"C\\\", \\\"A\\\"],\\n  [\\\"C\\\", \\\"A\\\", \\\"B\\\"],\\n  [\\\"A\\\", \\\"B\\\", \\\"A\\\"]\\n]) ➞ true\\n// Part of diagonal right wristband.\\n```\\n\\n### Notes\\nN/A\",\"lab\":\"Test.assertEquals(isWristband( \\n[['A', 'A'], \\n['B', 'B'], \\n['C', 'C']]), true)\\n\\nTest.assertEquals(isWristband(\\n[['A', 'B'], \\n['A', 'B'], \\n['A', 'B']]), true)\\n\\nTest.assertEquals(isWristband(\\n[['A', 'B', 'C'], \\n['C', 'A', 'B'], \\n['B', 'C', 'A'], \\n['A', 'B', 'C']]), true)\\n\\nTest.assertEquals(isWristband(\\n[['A', 'B', 'C'], \\n['C', 'A', 'B'], \\n['D', 'C', 'A'], \\n['E', 'D', 'C']]), true)\\n\\nTest.assertEquals(isWristband(\\n[['A', 'B', 'C'], \\n['B', 'A', 'B'], \\n['D', 'C', 'A'], \\n['E', 'D', 'C']]), false)\\n\\nTest.assertEquals(isWristband(\\n[['A', 'B', 'C'], \\n['B', 'C', 'A'], \\n['C', 'A', 'B'], \\n['A', 'B', 'A']]), true)\\n\\nTest.assertEquals(isWristband(\\n[['A', 'B', 'C'], \\n['B', 'C', 'D'], \\n['C', 'D', 'E'], \\n['D', 'E', 'F']]), true)\\n\\nTest.assertEquals(isWristband(\\n[['A', 'B', 'C'], \\n['B', 'C', 'D'], \\n['C', 'D', 'E'], \\n['D', 'E', 'E']]), true)\\n\\nTest.assertEquals(isWristband(\\n[['A', 'B', 'C'], \\n['B', 'C', 'D'], \\n['C', 'D', 'E'], \\n['D', 'F', 'E']]), false)\\n\\nTest.assertEquals(isWristband(\\n[['A', 'B', 'C'], \\n['B', 'D', 'A'], \\n['C', 'A', 'B'], \\n['A', 'B', 'A']]), false)\\n\\nTest.assertEquals(isWristband(\\n[['A', 'B'],  \\n['A', 'B'], \\n['A', 'C'],  \\n['A', 'B']]), false)\\n\\nTest.assertEquals(isWristband(\\n[['A', 'A'],  \\n['B', 'B'], \\n['C', 'C'],  \\n['D', 'B']]), false)\\n \\nTest.assertEquals(isWristband(\\n[['A', 'A'],  \\n['B', 'B'], \\n['C', 'C'],  \\n['C', 'C']]), true)\",\"language\":\"javascript\",\"summary\":\"A wristband can have 4 patterns:\\n\\nhorizontal: each item in a row is identical.\\nvertical: each item in a column is identical.\\ndiagonal left: each item is identical to the one on it's upper left or bottom right.\\ndiagonal right: each item is identical to the one on it's upper right or bottom left.\\n\\nYou are shown an incomplete section of a wristband.\\n\\nWrite a func\",\"tags\":[\"arrays\",\"validation\",\"functional_programming\",\"loops\"],\"timestamp\":{\"$date\":1553364973151},\"title\":\"Patterned Wristband\",\"stats\":{\"completed\":{\"total\":120,\"ratings\":[3,3,3,3,3,3,3,3,3,3,5,2,4,5,5,0,5,5,2,5,3,5,0,4,4,2,4,4,0,3,5,0,4,0,2,0,5,1,3,5,2,3,5,1,2,2,3,3,4,5,5,3,3,4,5,4,2,3,4,3,0,0,3,3,2,5,3,5,5,5,2,3,5,0,3,5,3,3,1,5,5,4,4,3,5,3,4,5,2,3,1,5,5,1,4,4,5,5,2,4,0,2,4,5,2,3,5,2,4,5,5,2,5,5,5,4,5,1],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"Azw2qRjyKBvRPycns\",\"65dbBZynphj53nXqA\",\"nr7jKeHEE3TC9oyp4\",\"Fa69Gq8FX5jretBtz\",\"zrhBaJCLqAv9xGsEm\",\"6cF2nrD29Nn2AeKP7\",\"X9gzW6TkvYB4rbrx7\",\"rdNqeKKCwqmELuhvJ\",\"gyqF3mSFanetdczH7\",\"KXAz9mtqEuJGiKMdC\",\"zau2i68shu6Pdhjum\",\"EjPLq3QSJdGQFJdgW\",\"FHSJnAYTbcsKFgeQa\",\"yjtdwc2AC4jA2RWtn\",\"n5wubRfh6zh8QRymN\",\"7PP6aGLEosDGsjRqW\",\"EQkZvdpc4SGbMt34W\",\"mHT2bJb5SByfJ8yKS\",\"5DsYhKJiNTaarWKkM\",\"XYEDjaciXqSqzp6p3\",\"kqJ5bxst5QGn7QnMC\",\"BBP9BE5mKHRzaRpJr\",\"Wdjd6JMEFYzW9Ma5k\",\"b5a77qecAq32wTEaR\",\"SjY6a2v6jMjGraDKz\",\"vANHt6atuggdAMmkB\",\"LoYgbfWCeeZypvfN2\",\"iGCyzBZ9rxC5cdWME\",\"y9rbo4r88bGEtxXf2\",\"Dac52thsAtrFmrphk\",\"YLiQ2gKYetNjpEG7B\",\"ppfQK4eXqkQqSKi4r\",\"zSyrxvg9Q5f7AvRRH\",\"3xTP5LHEMpQWB4knW\",\"cAdwt6HpD55dviPaF\",\"cCrirxZEzgAwQt2T9\",\"HRvRT6cjb9knQGa7d\",\"cRpaCxYRmGcN3Nsoj\",\"Mt2bcrSQpQdxdqJn8\",\"bZzMqB9qNNJ9AdpGp\",\"gtbK6d8XpqHFiY37A\",\"Z2TFRP2tneAgzuDTP\",\"yQtGE2egvwYnNQSFc\",\"zsNp9fk9BGDBiHr4G\",\"J7MuMht6WBfAhLtvA\",\"A8vtkZGA4QtLdTuDB\",\"zC3J4mi2j7KgyPgkC\",\"FKxxtEFynPauWSnFd\",\"LmzSXmRk7kEy2X4rH\",\"vJro74okQB8v3krbL\",\"6D88xvSDsuRf9kFjN\",\"CChg5gezrGwuB9NNi\",\"qwoCTiEq4TavzKAYE\",\"qjdeSF36c4d3LmhaM\",\"dPM2Rk2iMkznyXNEt\",\"Kbo6N5DifTPZTmsBp\",\"sutzxu4yTueBKE9Qp\",\"knxCMCGP3rAkiatRo\",\"jb6tpMDLnLRTvgjKM\",\"iapvMBwWivxXaybye\",\"f6K5wzQW2fzYvgE98\",\"u37upKZSmCKTQvQqX\",\"eJHSvGWdYj2NozZnQ\",\"S9jKhqJsPie6xZfB7\",\"Jd6KY7BxEJKbvZHen\",\"TDY4WFS5nmd9uM6w5\",\"zvYa5b9wsiMYJZ2yS\",\"g3CKvuEsBoA7tATga\",\"rjBWwMTqDeoFAduJe\",\"ncpbYwfCbonkgEKSQ\",\"4oMMJgWCJ3rzgovGq\",\"F53Denyi58dcdwMku\",\"gHjeeefRwv5hy9uKr\",\"FJz752tBZgKEFv5dp\",\"7xsuW8jrD5TXvc7pT\",\"CLaYRpYZ6WerqEYns\",\"5AqGNayGkPJbczAeD\",\"FJsvM5yqKuK9yMk9P\",\"KXYHpCQvmTtpbGXYg\",\"pd8dm7sWLW9cY6dYW\",\"8LMK8hznS6pSQHWSK\",\"Es4eX2stRpyoXeC7f\",\"kJtxKboy7Si2AE6G8\",\"AMKkrzLGTmCKQD2fZ\",\"nBo2LLuSMeEgd5f6G\",\"wcgDoaKbZtbCGPu6K\",\"MNDLmXZmFMf8ASL2L\",\"7TXyMDHFYjna3dyPb\",\"zMCXYFZSsviDCvjnY\",\"eFjGhq7C7bBKXjT6X\",\"2YnPPGmRetfveApBc\",\"aEm3Wvj2rFYRL8Lrb\",\"SNt23Ei5dSNtfpEMd\",\"CP9v23jP3Lu3nLfv9\",\"bX6tpTCjwoi6XMMbK\",\"kp2ZbCewZJAbfd7xv\",\"qvNk7pHSveLu3jqWw\",\"xmMqX6Dkh7yxb7ycH\",\"oSj9fRJCwWWXTakth\",\"hyx8iH2z3QySmyRKT\",\"8B8KQN2rvwFWK2mKQ\",\"MNx3FXnfRXa5NHZBb\",\"Sm955HCbs4tSPQeJW\",\"SYEuojZtP6yLXryHv\",\"va3fDAQm4sqSMoy3R\",\"9i6KoESyhnwmZGjWC\",\"pWJWQDhqzDSmfaFam\",\"eKSJgCaiy4ReJWXTg\",\"mDWNyaaQ9hvPCRzSd\",\"bXaGdBM8FBLHf7N6Y\",\"QjGNkRM3Xc78yShJN\",\"DPi9QGLctq2y76KuE\",\"tAF9Gf6PiGogbZuWs\",\"J5MgLszeGgtciW56n\"],\"quality\":[3,5,5,5,5,5]},\"tests\":{\"score\":0,\"voters\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":-0.8,\"voters\":[\"mNMQvcxKSSvqqMYCH\",\"8YjoJAwcJzvTgE3wZ\"]},\"flags\":0},\"isHidden\":false,\"quality\":4.666666666666667,\"family\":[{\"_id\":\"poqNoKkyiQpcjSQn7\",\"language\":\"cpp\"},{\"_id\":\"HX5eEuKb7epMgsKsj\",\"language\":\"javascript\"},{\"_id\":\"grorumaEjyFDmZQCx\",\"language\":\"python3\"},{\"_id\":\"vBrE9w7qRiaeXyuis\",\"language\":\"ruby\"}]}}"]