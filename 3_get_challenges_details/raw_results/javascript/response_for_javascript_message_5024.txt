a["{\"msg\":\"result\",\"id\":\"1264\",\"result\":{\"_id\":\"EzxPadgs3Y9hYWymS\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"function numLeapYears(years) {\\n\\t\\n}\",\"difficulty\":2.0763358778625953,\"familyId\":\"BJXFHNREMbJ4EskyC\",\"instructions\":\"Given a range of years as a string, return the **number of leap years** there are within the range (inclusive).\\n\\n### Examples\\n```\\nnumLeapYears(\\\"1980-1984\\\") ➞ 2\\n// 1980 and 1984 are leapyears.\\n\\nnumLeapYears(\\\"2000-2020\\\") ➞ 6\\n\\nnumLeapYears(\\\"1600-2000\\\") ➞ 98\\n```\\n\\n### Notes\\n- Remember that a *hyphen* separates the years.\\n- Check the **Resources** tab for help on checking whether a year is a leap year.\",\"isHidden\":false,\"lab\":\"Test.assertEquals(numLeapYears(\\\"2000-2020\\\"), 6)\\nTest.assertEquals(numLeapYears(\\\"1600-2000\\\"), 98)\\nTest.assertEquals(numLeapYears(\\\"1980-1984\\\"), 2)\\nTest.assertEquals(numLeapYears(\\\"1224-8090\\\"), 1666)\\nTest.assertEquals(numLeapYears(\\\"2486-7607\\\"), 1241)\\nTest.assertEquals(numLeapYears(\\\"1813-4354\\\"), 616)\\nTest.assertEquals(numLeapYears(\\\"772-1849\\\"), 262)\\nTest.assertEquals(numLeapYears(\\\"2228-7099\\\"), 1182)\\nTest.assertEquals(numLeapYears(\\\"1349-6325\\\"), 1206)\\nTest.assertEquals(numLeapYears(\\\"1803-3828\\\"), 492)\\nTest.assertEquals(numLeapYears(\\\"295-6278\\\"), 1451)\\nTest.assertEquals(numLeapYears(\\\"107-1821\\\"), 416)\\nTest.assertEquals(numLeapYears(\\\"2912-6566\\\"), 887)\\nTest.assertEquals(numLeapYears(\\\"1006-5181\\\"), 1013)\\nTest.assertEquals(numLeapYears(\\\"2876-9210\\\"), 1536)\\nTest.assertEquals(numLeapYears(\\\"1189-5481\\\"), 1041)\\nTest.assertEquals(numLeapYears(\\\"1325-1409\\\"), 20)\\nTest.assertEquals(numLeapYears(\\\"2665-3338\\\"), 163)\\nTest.assertEquals(numLeapYears(\\\"1886-3577\\\"), 410)\\nTest.assertEquals(numLeapYears(\\\"2951-4523\\\"), 381)\\nTest.assertEquals(numLeapYears(\\\"2651-7572\\\"), 1194)\\nTest.assertEquals(numLeapYears(\\\"2036-3126\\\"), 264)\\nTest.assertEquals(numLeapYears(\\\"1602-6986\\\"), 1306)\\nTest.assertEquals(numLeapYears(\\\"35-602\\\"), 137)\\nTest.assertEquals(numLeapYears(\\\"38-1709\\\"), 405)\\nTest.assertEquals(numLeapYears(\\\"801-2232\\\"), 347)\\nTest.assertEquals(numLeapYears(\\\"1285-5033\\\"), 908)\\nTest.assertEquals(numLeapYears(\\\"1265-7254\\\"), 1452)\\nTest.assertEquals(numLeapYears(\\\"1716-4551\\\"), 688)\\nTest.assertEquals(numLeapYears(\\\"2630-7508\\\"), 1183)\\nTest.assertEquals(numLeapYears(\\\"385-7421\\\"), 1706)\\nTest.assertEquals(numLeapYears(\\\"1127-5813\\\"), 1137)\\nTest.assertEquals(numLeapYears(\\\"1154-6034\\\"), 1184)\\nTest.assertEquals(numLeapYears(\\\"1378-8971\\\"), 1841)\\nTest.assertEquals(numLeapYears(\\\"925-8529\\\"), 1844)\\nTest.assertEquals(numLeapYears(\\\"1399-9450\\\"), 1952)\\nTest.assertEquals(numLeapYears(\\\"2031-7773\\\"), 1393)\\nTest.assertEquals(numLeapYears(\\\"1790-7283\\\"), 1332)\\nTest.assertEquals(numLeapYears(\\\"2642-5884\\\"), 787)\\nTest.assertEquals(numLeapYears(\\\"1084-4877\\\"), 921)\\nTest.assertEquals(numLeapYears(\\\"2934-6071\\\"), 761)\\nTest.assertEquals(numLeapYears(\\\"2074-8842\\\"), 1641)\\nTest.assertEquals(numLeapYears(\\\"2609-9866\\\"), 1760)\\nTest.assertEquals(numLeapYears(\\\"647-6876\\\"), 1512)\\nTest.assertEquals(numLeapYears(\\\"478-9783\\\"), 2256)\\nTest.assertEquals(numLeapYears(\\\"1561-3415\\\"), 449)\\nTest.assertEquals(numLeapYears(\\\"2535-4282\\\"), 424)\\nTest.assertEquals(numLeapYears(\\\"2920-6439\\\"), 854)\\nTest.assertEquals(numLeapYears(\\\"1601-9234\\\"), 1851)\\nTest.assertEquals(numLeapYears(\\\"728-6018\\\"), 1284)\\nTest.assertEquals(numLeapYears(\\\"1664-8395\\\"), 1632)\\nTest.assertEquals(numLeapYears(\\\"2489-3010\\\"), 125)\\nTest.assertEquals(numLeapYears(\\\"2768-9052\\\"), 1525)\",\"language\":\"javascript\",\"summary\":\"Given a range of years as a string, return the number of leap years there are within the range (inclusive).\\n\\nExamples\\nnumLeapYears(\\\"1980-1984\\\") ➞ 2\\n// 1980 and 1984 are leapyears.\\n\\nnumLeapYears(\\\"2000-2020\\\") ➞ 6\\n\\nnumLeapYears(\\\"1600-2000\\\") ➞ 98\\n\\nNotes\\nRemember that a hyphen separates the years.\\nCheck the Resources tab for help on checking whether a year is a lea\",\"tags\":[\"numbers\",\"dates\",\"strings\"],\"timestamp\":{\"$date\":1589991710753},\"title\":\"Number of Leap Years\",\"stats\":{\"completed\":{\"total\":176,\"ratings\":[1,1,1,1,1,1,2,2,2,2,2,0,2,2,2,3,2,3,2,2,2,1,0,2,2,2,2,3,2,1,2,2,2,2,1,2,2,2,0,2,2,2,2,1,2,2,2,2,3,1,2,1,2,4,1,4,1,3,2,2,1,3,2,3,2,3,4,2,2,0,2,1,3,2,2,0,1,2,1,3,2,2,3,1,3,3,1,3,3,2,1,3,1,3,3,4,2,3,3,2,4,2,1,3,2,3,3,1,3,3,3,2,3,3,3,3,2,2,2,1,3,1,3,3,2,2,2,0,3,3,5],\"rators\":[\"msrRGxcGDya8dZdRr\",\"tAF9Gf6PiGogbZuWs\",\"LZSxphM8vH4A6Deqn\",\"2e9Tz38jZbDsrbFZG\",\"wdEmL2L7r8wFLxDkx\",\"z65hXm2RqdF4AfMh6\",\"Q9KQomTTPBsrkAL6c\",\"Ya3eHgs8x3unZRLpb\",\"dPBGCtwdEAFisaRgP\",\"LFbfzxeraHD5epqMf\",\"XfirkadGrKABrZSBw\",\"oyB4Wr4EeZnoDaa8B\",\"ByXaraYa5tzFG8Gmj\",\"AasGs8AeX9Lcb9xJn\",\"733qgZ7ZSSSrzbXGw\",\"pi76g3eRpnKrhee2a\",\"yjtdwc2AC4jA2RWtn\",\"zw7g7T8wE5R5CBhXr\",\"a777e8chPvJkY3tKa\",\"vtHbevf2tHqe6mRxX\",\"RE4Mm9T6Q9uygAxGS\",\"2ZFoLTxcCARhwc8xX\",\"FJsvM5yqKuK9yMk9P\",\"2innwjWqxJHo4eRGh\",\"uAS9uKs8KQmp8uhqn\",\"QRv96jmNaYsWkxQEG\",\"mHT2bJb5SByfJ8yKS\",\"E6DBfkTgHuPsDWdG8\",\"n5wubRfh6zh8QRymN\",null,\"zTZtM9jRsu8eXie6s\",\"eQXwk5zGckM8tCWYH\",\"HuMwTMgHiXNzanhCS\",\"cp3X8hk8yNME7qoD9\",\"buX4mCQhtXCfBjeno\",\"8raviPK67KKxzQWcF\",\"65dbBZynphj53nXqA\",\"ZcqshY58sGEEvgeaq\",\"i5QeAsrM4m6hzPTku\",\"r7mZLgpQWzRiGddL5\",\"7gZKfvwaeqsGKXMEN\",\"ij9YRJvZz6WbqcGXS\",\"QnPD4Sv6W4LHc2Qng\",\"PGCDJpQMN8Sjn9Gm6\",\"aEm3Wvj2rFYRL8Lrb\",\"pLpcDC3EYx2DDQSdt\",\"omn98QP6uBd923Azp\",\"2tCCFm5iefjrRSaxv\",\"uP9SRKxpG4GjKkKq5\",\"Ek9PiwGewEGH6fcqz\",\"ffB8T76Ye9ygL6QZZ\",\"RnawxQzLEymGXmWFq\",\"nLXwBBGP4qdjNh8oz\",\"nm73fRzfHA6qRuRrk\",\"N56hpPGoJYZEBZENn\",\"hhWiQDgAJA2m3MhDA\",\"2fT4tYyqFonDMxyw2\",\"RkWxtC9EdPNiQ9sTC\",\"Xk2g4CNFAnYcvxiSr\",\"7hXDHFcBp6ytxjA5f\",\"zJTXDTdbwnopRazGo\",\"RyLmqZbY5sQNzZQbL\",\"ioPtSbzqRzC8QxXR4\",\"8s5Bdrn7RTga7DL6x\",\"PH32cNxBjrK4a28sn\",\"rjmHbvFAqAn3beEiX\",\"7JCLyrrY6JYGpocac\",\"BjJhatTBaTWm3ZhCt\",\"YbwyTPyxrxpFNNo9Q\",\"RKKuw76K7sRBMouKq\",\"QbvEbQvdRsP5KAq6Q\",\"6tjLF7uAB3FBGyxGv\",\"t68Z8QoDjbsL4m73h\",\"N82kEBvpFE5FjbHrk\",\"d6zHc3Zk4Wzwk2HrB\",\"2QNs5hQaDgo792ztf\",\"qzzyGD7fCCDjX25za\",\"ZFgZfCTjPZYu9gnkA\",\"4RsakkyRXyYGwFxEa\",\"FQ4qFqSW3F892BD8J\",\"Z9MJFFkQRXWwJJafu\",\"DyunorHmNEeBgSGqs\",\"9oPfGpc74rAstazB6\",\"6whLhSSADkDKmaN9s\",\"yv5NdD4gS38t98fRL\",\"WApeGxoWZS57yFtq7\",\"QqYBhPmECh7ScZ4PA\",\"YtWMf3a7u9jdzssmC\",\"oDnPTXrzYF4snDPXY\",\"CJBPyyfyaEeEo63sb\",\"xBK3iziCSZFBk8F8P\",\"vfp3j6ZdjzvRZXnmk\",\"tyNDvvtr9eJjtDLTL\",\"LtTpCzF8kt6Rdth4X\",\"Cq4jiaTiWkDTDhLey\",\"ighdsebyJYofcc47Z\",\"kp2ZbCewZJAbfd7xv\",\"XcgeFavjBhRjRmCyP\",\"2RdF8sv2HCEspbs3X\",\"Ms4ubMhq5tjsAeMLF\",\"bX6tpTCjwoi6XMMbK\",\"aRCwEM8hnYEoHiSiY\",\"wJTDDTE3TrmSXKP4d\",\"dGugwhA6uwwjPGAa5\",\"4Xv87xmdSnpYhi8hz\",\"wmHtyqytYWoA8voo6\",\"A3cZyJnAjKmHwGtcM\",\"n4TRg2zJmracsxF9C\",\"PTo9qt93YqGvL8fCa\",\"CNc6rmwhbxkxEhHAp\",\"BdvdJYwHZr7JpkHsn\",\"PNr5wjCb9JyXkyQmJ\",\"ZK6YmYMsfwXYtaZ9P\",\"N7fwDd5JRDsuX7EKa\",\"n4iYeDPWGzXQKBrHE\",\"M4vq8ATaS9Jg5X7iP\",\"yCeddtASCT5NFPJTP\",\"4XxJxQkB5mNTLY2qk\",\"g4NCSxxHqHCGMpWwT\",\"Es4eX2stRpyoXeC7f\",\"ct42f2gGpMXSd9hXM\",\"e9Cknxbx6o7Nb6REs\",\"5ETJzzAbWHw9GkWCn\",\"vGKxRcDYDsXzTQuEQ\",\"knNotxSXG3eHEXqMi\",\"f3RAbWvE6uESq7KE5\",\"WGKpjDMbEhmGdkorb\",\"8BJyXvRWcrvN3nttS\",\"srJ34BaybkQh3qRkM\",\"MT26yxj3YX95DsyLj\",\"jvq5vTggtY5QfMrwL\",\"u9cRf5kvtpRB5ffB3\",\"QjGNkRM3Xc78yShJN\",\"x5SoWsWonmgH2bGq4\",\"2Qk2mFu9HBFzrB24i\",\"2P5vWxdr4qQiRxdPN\",\"NGvCPuMiAP3xrRLfB\",\"oDtGiNqDMHmhHE3J8\",\"8TTdgJThtKTy8Y9rv\",\"hCfruGWxw7v64teEr\",\"49XFttjKo2QhEWT3R\",\"KQXmqatXKZ99NjafG\",\"xyvBQrhhKsChRdwPr\",\"sN2JyFeJCwfwwHPwF\",\"c7uBxu2rgY77H5d79\",\"RoGGD5cpHb4ftdLDv\",\"TtrXnGzi9MyhLvWiz\",\"jyoLggHk8xQKZuoQC\"],\"quality\":[5,5,5,4,4,5,5,4,3,1,4,4,5,5,5,5,5,3,5,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":4.409090909090909,\"family\":[{\"_id\":\"vAEhKB2cD6Rp66sxn\",\"language\":\"cpp\"},{\"_id\":\"EzxPadgs3Y9hYWymS\",\"language\":\"javascript\"},{\"_id\":\"HLtWCXFaLtkeJ8knN\",\"language\":\"php\"},{\"_id\":\"xCXdch4XLpXZZagxm\",\"language\":\"python3\"},{\"_id\":\"trwxSe5TsE3Wq9AdA\",\"language\":\"ruby\"}]}}"]