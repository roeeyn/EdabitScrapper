a["{\"msg\":\"result\",\"id\":\"911\",\"result\":{\"_id\":\"FqdfcJ65WkiSn5WpJ\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"function countOverlapping(intervals, point) {\\n\\t\\n}\",\"difficulty\":1.6222222222222222,\"editorId\":\"mNMQvcxKSSvqqMYCH\",\"familyId\":\"S6LAqK4TScBgqDwBM\",\"instructions\":\"Create a function that takes in an array of **intervals** and returns how many intervals overlap with a given point.\\n\\nAn interval overlaps a particular point if the point exists **inside** the interval, or on the interval's **boundary**. For example the point `3` overlaps with the interval `[2, 4]` (it is inside) and `[2, 3]` (it is on the boundary).\\n\\nTo illustrate:\\n```\\ncountOverlapping([[1, 2], [2, 3], [1, 3], [4, 5], [0, 1]], 2) ➞ 3\\n// Since [1, 2], [2, 3] and [1, 3] all overlap with point 2.\\n\\n```\\n### Examples\\n```\\ncountOverlapping([[1, 2], [2, 3], [3, 4]], 5) ➞ 0\\n\\ncountOverlapping([[1, 2], [5, 6], [5, 7]], 5) ➞ 2\\n\\ncountOverlapping([[1, 2], [5, 8], [6, 9]], 7) ➞ 2\\n```\\n\\n### Notes\\n- Each interval is represented as an array with a start point and an endpoint.\\n- Intervals count as intersecting even if they only intersect at one point, i.e. `[2, 3]` and `[3, 4]` both intersect at point `3`.\\n- If it's helpful, you can draw these intervals on a line on a piece of paper.\",\"lab\":\"Test.assertEquals(countOverlapping([[1, 2], [2, 3], [3, 4]], 5),0)\\nTest.assertEquals(countOverlapping([[1, 2], [5, 6], [5, 7]], 5),2)\\nTest.assertEquals(countOverlapping([[1, 2], [5, 8], [6, 9]], 7),2)\\nTest.assertEquals(countOverlapping([[1, 5], [2, 5], [3, 6], [4, 5], [5, 6]], 5), 5)\\nTest.assertEquals(countOverlapping([[1, 5], [2, 5], [3, 6], [4, 5], [5, 6]], 6), 2)\\nTest.assertEquals(countOverlapping([[1, 5], [2, 5], [3, 6], [4, 5], [5, 6]], 2), 2)\\nTest.assertEquals(countOverlapping([[1, 5], [2, 5], [3, 6], [4, 5], [5, 6]], 1), 1)\",\"language\":\"javascript\",\"summary\":\"Create a function that takes in an array of intervals and returns how many intervals overlap with a given point.\\n\\nAn interval overlaps a particular point if the point exists inside the interval, or on the interval's boundary. For example the point 3 overlaps with the interval [2, 4] (it is inside) and [2, 3] (it is on the boundary).\\n\\nTo illustrate:\\ncountOverla\",\"tags\":[\"validation\",\"arrays\",\"algorithms\"],\"timestamp\":{\"$date\":1553738603256},\"title\":\"Intersecting Intervals\",\"stats\":{\"completed\":{\"total\":196,\"ratings\":[2,2,2,2,2,2,2,2,2,2,2,1,1,0,2,2,2,2,2,1,2,2,2,2,1,1,1,1,0,2,2,1,1,3,2,0,2,2,2,2,2,2,2,1,1,1,2,1,2,0,2,0,5,1,1,2,2,1,2,1,2,0,2,1,4,2,2,1,2,2,1,0,2,2,1,2,1,3,1,2,2,1,1,1,1,1,0,2,2,1,2,2,2,1,3,2,1,2,2,2,0,2,2,3,2,1,2,1,2,2,0,1,1,2,2,2,2,2,2,1,0,1,2,2,0,1,2,2,2,2,1,2,2,2,2,1,1,1,2,2,0,1,1,1,1,1,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,3,1,2,2,5,2,2,1,2,0,2,1,0,3,2,2,2,1,2],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"J67hC7LSEYS5JwhPj\",\"65dbBZynphj53nXqA\",\"ak5aPiT6QWpmbnPzD\",\"SDtZFL5NzAoCPofXk\",\"LyHzZwbChdNo8JrJd\",\"TMTH5LfMm9MrBFyEx\",\"Nd7Bnx9zF57gn3vLp\",\"oFckF5bB5dGBQKneS\",\"EjPLq3QSJdGQFJdgW\",\"2innwjWqxJHo4eRGh\",\"KPDPaGaJ4jGtRusF2\",\"K8retouBZnftajjFi\",\"bjn5DTzzaWCP5BDgX\",\"EWn8w8P3nNh7knatY\",\"n5wubRfh6zh8QRymN\",\"S7R7voZRxnWjCn8pi\",\"uhP3Z8KkPxySxn2n7\",\"cTasoJQG2iA6FvuK4\",\"bbbpNxM3hgGMCqMn8\",\"RE4Mm9T6Q9uygAxGS\",\"fmLzKJTPWvtGRAaAN\",\"4pagg6vw2Cjepv7tN\",\"3u7mhwNxuummKkYts\",\"eomLS3wh6tQPN8jtH\",\"tQwDooQpBeuprEcRK\",\"9AdMR4uBsHxRcd86Q\",\"zgoq9MhrL2h75DAMA\",\"CJnuSjyCBMTbTiibD\",\"rTRvHndHZKKRkb9w5\",\"Y9Nz9yafaibz54W4o\",\"FJsvM5yqKuK9yMk9P\",\"5GWkiNRN6xMuRu7Dg\",\"iERYTAAJo3rBJ8Rok\",\"wcjknenWdPRhrRScv\",\"E3fyZ23p26CcvHvuR\",\"7gZKfvwaeqsGKXMEN\",\"csRoCgJx5NBJzW8pX\",\"Q9KQomTTPBsrkAL6c\",\"6BpBQnSGhzgvhXrEy\",\"zw7g7T8wE5R5CBhXr\",\"XKi8iZXBCHCaebSHh\",\"R4JQmeA6cYyfXbmLF\",\"e8ftyJ6nKRtZDwGWJ\",\"yjtdwc2AC4jA2RWtn\",\"5Zq3aGdvh4LHBvnJL\",\"66gXXy97s3jxAeS9q\",\"gSpcNJ8znvGGfWsQH\",\"AasGs8AeX9Lcb9xJn\",\"3awyiorYPgCqqP7Sr\",\"6gPHMpkEP8JuHxzpd\",\"538PKNyqMiCwLWYWK\",\"DHwbkbzYNpmkSFT7u\",\"Y7xPTPKpNAEiM2jkH\",\"mHT2bJb5SByfJ8yKS\",\"bKPvJHLQ3ovQLt9MJ\",\"7diYNLNsRmqMh5WSb\",\"u6ufoXinnxkNATe7E\",\"xHtH3Y27fB6bMDAaq\",\"BdvdJYwHZr7JpkHsn\",\"sbme4fRJjjBjYXRbY\",\"z6QfbuG6TXE7GKynQ\",\"9gEWz76H8KmhN4yJj\",\"zd9FLSzsGz3evKafy\",\"2CvHJcA9aXt9pvZwA\",\"f9gsQxwrJGBhyF5FF\",\"ih2aGaqkMaagTgyL2\",\"8BFSTCnoe2QggN64c\",\"g5noFWaoRtZNcEEAW\",\"5YCX58nhHT8oRCHyy\",\"PytNZK9mNiRiZxPrm\",\"REzoyhN6bGzxwiR3P\",\"pi76g3eRpnKrhee2a\",\"k5TGxBtLi9BXxeChT\",\"YER6iBcpJCuhgrYDN\",\"yaL57wdXmgAZTvKfX\",\"7JCLyrrY6JYGpocac\",\"cp3X8hk8yNME7qoD9\",\"bX6tpTCjwoi6XMMbK\",\"vtHbevf2tHqe6mRxX\",\"9XnGoq9Tv6ut3zTtH\",\"8w3FaLndaj35EMwAT\",\"vWhgrr5oem8WtKdxm\",\"Gc2bmsof5vD2Hsgqv\",\"ipiC2qPhKZWsAouJf\",\"2ZFoLTxcCARhwc8xX\",\"HwZx7c3QFWmt5x4oE\",\"z5ebtimXwFFJdYxoa\",\"a777e8chPvJkY3tKa\",\"E6DBfkTgHuPsDWdG8\",\"Lzj3w7QjdzikynsGG\",\"4TuceAZ8oTDzsjhir\",\"8raviPK67KKxzQWcF\",\"SNiJRRosrmSWssLj4\",\"Wv9v7fHb8umujfg2j\",\"ij9YRJvZz6WbqcGXS\",\"BSkoT6o2GweZkqXbc\",\"7wtuhPesfhcYsfZaZ\",\"inbiBEY2tizFwkN84\",\"buX4mCQhtXCfBjeno\",\"2zKQWLmEBw8FBs4ZL\",\"moe6ztrsNzFymC3A7\",\"M4vq8ATaS9Jg5X7iP\",\"4ntYzGHHBgqf58udP\",\"PGCDJpQMN8Sjn9Gm6\",\"fMqXimJLsPiuhT8A8\",\"pLpcDC3EYx2DDQSdt\",\"tAF9Gf6PiGogbZuWs\",\"nAmJEX7BkHLd9LsG2\",\"C9LKGu2g5hSijvDzA\",\"nkH3HfJXLMNcBMM79\",\"Po3v3dHCk6wYGKMwi\",\"aEm3Wvj2rFYRL8Lrb\",\"2tCCFm5iefjrRSaxv\",\"AFfw7cGg83uYk2Miy\",\"QRv96jmNaYsWkxQEG\",\"E2hpke7mHxAWsw5t9\",\"mfYrBKwDr4hXSFuuN\",\"sdHiERizAwLj4trjH\",\"2QNs5hQaDgo792ztf\",\"evTTY9hwrtogaNxXn\",\"Zpm7hHyfu8jo2mxcu\",\"SgnfjQGSp53DLKbmP\",\"kp2ZbCewZJAbfd7xv\",\"nhWLv6D8eZJ5ggKKX\",\"v2w9GN4jHP2fgYdeE\",\"jaGDhPMsqjvw7HAuZ\",\"Akq3fQcPRgPrWfsye\",\"BdnE4RS5puoxo92mA\",\"u9cRf5kvtpRB5ffB3\",\"R9uaMzX2Y4ND8Cosm\",\"CNc6rmwhbxkxEhHAp\",\"g4NCSxxHqHCGMpWwT\",\"STipuJs6kBvPqqsSE\",\"DDokdbBKxv49M445o\",\"jkumHyXfMkhGcPgqC\",\"4ZDJz3y7nqMPP7PWs\",\"jLSZdBseR2kfjt8dL\",\"pdGuqmMyeN4wZaWwv\",\"sNcDN3s3rH9wcNg5n\",\"XzMxsyYj2ZeZ6Jmis\",\"vGKxRcDYDsXzTQuEQ\",\"Ya3eHgs8x3unZRLpb\",\"2Ni3PzJAc5fAhqBkb\",\"gGc2gQxf6JJepn9ma\",\"qJTbsuToGEtaYnGxn\",\"RbXkPwrmSowEJ7Jk4\",\"Yp7uvStL97cC9fKkY\",\"qLxYpxoo35DTyuxni\",\"d8JhF9zfpexkRnCea\",\"vRsovmMfvfvnR5miw\",\"ttuGK7od8simjgmCJ\",\"YSmLyP3eRhcFjJPzg\",\"3Gf7ikLijfoxabiPY\",\"srJ34BaybkQh3qRkM\",\"m6qKkBY4aPWziyJTj\",\"5hHf2e9zimbmxMqqF\",\"c7uBxu2rgY77H5d79\",\"2Qk2mFu9HBFzrB24i\",\"npp5hesJrst6ghKSM\",\"e9Cknxbx6o7Nb6REs\",\"cgCQDs9i7yChKeAjE\",\"wJTDDTE3TrmSXKP4d\",\"J7d397iB5GuWRAMfg\",\"oDtGiNqDMHmhHE3J8\",\"NGvCPuMiAP3xrRLfB\",\"hvTAyFPy4pJHdrYJX\",\"8BJyXvRWcrvN3nttS\",\"LwD3CyYSiBfg3mA4r\",\"nBJve5CzG6WAw7WFQ\",\"gXTAie79kiw28tx5u\",\"jyoLggHk8xQKZuoQC\",\"Q7Yxda7dqKeYPs2Db\",\"JsSESKsRcr3xCe5r9\",\"bfYmA3LMvhSrK59cn\",\"z47JaNrQMgvuPx5HE\",\"jicWFrNKadYuLhqxh\",\"oyB4Wr4EeZnoDaa8B\",\"FGEeCTorXbX3WvjFW\",\"K45zPJxsABuA3WSyj\",\"QguFWo84zgF3c8BGr\",\"uxKGACwmZ6FNZsMwE\",\"HCfkcKnPs9mrJojdG\",\"LPZ2QKCoB8q6rG25c\",\"GpcgG83pcbNHSvRzF\",\"jnyub52Fi79drGvow\"],\"quality\":[3,5,5,5,5,5,5,5,5,5,5,5,5,5,5]},\"tests\":{\"score\":0,\"voters\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"voters\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"isHidden\":false,\"quality\":4.866666666666666,\"family\":[{\"_id\":\"ZRCqCLXsqzJhteR2g\",\"language\":\"cpp\"},{\"_id\":\"FqdfcJ65WkiSn5WpJ\",\"language\":\"javascript\"},{\"_id\":\"bcFT8LkLfBBukTuqS\",\"language\":\"php\"},{\"_id\":\"vfTJHRxAGeMxkvxni\",\"language\":\"python3\"},{\"_id\":\"nMKg8ZrobxArZDK8f\",\"language\":\"ruby\"}]}}"]