a["{\"msg\":\"result\",\"id\":\"629\",\"result\":{\"_id\":\"cSymahmP7vfHSm2jF\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"function isVowelSandwich(str) {\\n\\t\\n}\",\"difficulty\":1.429032258064516,\"familyId\":\"FXCkoKb5uyD4CCtQe\",\"instructions\":\"Create a function which validates whether a **3 character string** is a **vowel sandwich**. In order to have a valid sandwich, the string must satisfy the following rules:\\n- The first and last characters must be a **consonant**.\\n- The character in the middle must be a **vowel**.\\n\\n### Examples\\n```\\nisVowelSandwich(\\\"cat\\\") ➞ true\\n\\nisVowelSandwich(\\\"ear\\\") ➞ false\\n\\nisVowelSandwich(\\\"bake\\\") ➞ false\\n\\nisVowelSandwich(\\\"try\\\") ➞ false\\n```\\n\\n### Notes\\n- Return `false` if the word is **not 3 characters** in length.\\n- All words will be given in lowercase.\\n- **y** is not considered a vowel.\",\"isHidden\":false,\"lab\":\"Test.assertEquals(isVowelSandwich(\\\"cat\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"ear\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"bake\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"fai\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"eik\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"nel\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"lea\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"rur\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"zuh\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"iiq\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"eir\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"niv\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"xap\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"xuqrc\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"rvp\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"suj\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"aeo\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"nay\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"cis\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"leb\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"aux\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"vii\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"faz\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"taf\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"fek\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"tig\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"hof\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"yiy\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"ray\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"e\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"oot\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"oel\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"cip\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"faw\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"kow\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"ter\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"qid\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"mix\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"eoo\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"fan\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"zoc\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"rf\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"adt\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"sao\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"yur\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"bow\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"aez\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"sud\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"nacr\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"phlsf\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"iah\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"to\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"lib\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"oiu\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"uaw\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"zaw\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"sow\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"iok\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"xoa\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"lof\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"suq\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"sev\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"hek\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"ryxkk\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"csgt\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"rig\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"rur\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"luv\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"rou\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"kuy\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"kax\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"qnran\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"aoi\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"uis\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"dey\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"tia\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"dawjq\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"bjt\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"rag\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"iee\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"gic\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"iui\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"rap\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"qer\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"qiv\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"dod\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"hom\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"eio\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"xea\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"voo\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"res\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"zeq\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"rol\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"pee\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"iee\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"rig\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"eow\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"oey\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"pux\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"sij\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"tak\\\"), true)\\nTest.assertEquals(isVowelSandwich(\\\"uim\\\"), false)\\nTest.assertEquals(isVowelSandwich(\\\"zia\\\"), false)\",\"language\":\"javascript\",\"summary\":\"Create a function which validates whether a 3 character string is a vowel sandwich. In order to have a valid sandwich, the string must satisfy the following rules:\\nThe first and last characters must be a consonant.\\nThe character in the middle must be a vowel.\\n\\nExamples\\nisVowelSandwich(\\\"cat\\\") ➞ true\\n\\nisVowelSandwich(\\\"ear\\\") ➞ false\\n\\nisVowelSandwich(\\\"bake\\\") ➞ fal\",\"tags\":[\"strings\",\"language_fundamentals\",\"validation\",\"regex\",\"conditions\"],\"timestamp\":{\"$date\":1595533710742},\"title\":\"Vowel Sandwich\",\"stats\":{\"completed\":{\"total\":425,\"ratings\":[1,1,1,1,1,1,2,1,2,1,3,0,2,2,2,0,1,0,2,0,1,1,0,0,1,1,0,1,1,2,0,2,1,1,1,1,1,2,1,0,2,1,1,1,0,0,3,2,1,1,1,2,0,1,1,2,2,0,3,1,0,2,3,0,0,1,3,1,2,1,1,3,1,0,1,2,3,3,1,2,1,1,1,0,1,1,0,2,2,0,1,1,2,2,2,2,2,2,2,2,3,1,1,2,3,2,0,2,2,1,2,2,2,0,1,2,2,1,1,1,2,2,2,1,2,2,2,2,0,2,1,2,0,2,1,2,2,2,2,1,2,2,3,1,1,2,1,2,0,2,2,2,2,1,1,2,2,0,1,2,2,1,1,0,2,2,1,1,1,1,2,2,2,1,2,0,2,3,1,1,2,2,2,2,2,2,2,2,0,1,2,0,2,2,2,2,2,1,5,2,1,1,2,1,2,1,2,0,0,0,3,0,1,2,2,2,0,1,3,1,2,2,2,2,2,0,1,0,2,2,1,2,3,1,2,2,2,2,2,2,0,0,0,1,2,2,3,0,2,2,1,0,2,2,0,1,1,1,2,2,1,2,2,2,2,3,2,5,2,2,0,3,1,2,2,1,2,0,2,1,2,0,0,1,2,2,1,2,1,0,1,0,0,2,1,2,2,0,2,1,2,2,1,2,2,2,2,2,1,2],\"rators\":[\"tAF9Gf6PiGogbZuWs\",\"Dw5DvNWE3YBa6xf44\",\"mHT2bJb5SByfJ8yKS\",\"7hzSvcYdq6QjoRnJY\",\"NchnDcEmsLTeFZ4FH\",\"buX4mCQhtXCfBjeno\",\"27ocsRjAT9Gdh8qwW\",\"65dbBZynphj53nXqA\",\"dk2aGfRcWM4ybXLaP\",\"bX6tpTCjwoi6XMMbK\",\"yjtdwc2AC4jA2RWtn\",\"n5wubRfh6zh8QRymN\",\"wwjdXwLtr6KMhxsX7\",\"fMqXimJLsPiuhT8A8\",\"CcrodMrL94keXBSb9\",\"qzzyGD7fCCDjX25za\",\"mwg8jvMHHmQiQRrbr\",\"nkH3HfJXLMNcBMM79\",\"QRv96jmNaYsWkxQEG\",\"PGCDJpQMN8Sjn9Gm6\",\"7gZKfvwaeqsGKXMEN\",\"moe6ztrsNzFymC3A7\",\"r7mZLgpQWzRiGddL5\",\"6BpBQnSGhzgvhXrEy\",\"eoepTq5ES5tfgY9XT\",\"ttuGK7od8simjgmCJ\",\"3WtHp4MBzciz4AE8M\",\"jnyub52Fi79drGvow\",\"C9LKGu2g5hSijvDzA\",\"RE4Mm9T6Q9uygAxGS\",\"SNiJRRosrmSWssLj4\",\"evTTY9hwrtogaNxXn\",\"7XxsDqYj2HiMCwW4X\",\"DaBQKtm4xSgrxqTYF\",\"2zKQWLmEBw8FBs4ZL\",\"2nCWnTXnmawovwdv9\",\"kuCQeknZkt7vmwsJZ\",\"rvvEEYKgQBfSPpJ67\",\"AFfw7cGg83uYk2Miy\",\"AasGs8AeX9Lcb9xJn\",\"XAX32dz2EByd3qAK2\",\"QbtPYgLJCGMHbxDKZ\",\"WbXHZDxj5femhG7x2\",\"aEm3Wvj2rFYRL8Lrb\",\"7wtuhPesfhcYsfZaZ\",\"FGEeCTorXbX3WvjFW\",\"Ya3eHgs8x3unZRLpb\",\"34bE6mric984YYLZQ\",\"oyB4Wr4EeZnoDaa8B\",\"DMKGmgv3dXruCSjXi\",\"pLpcDC3EYx2DDQSdt\",\"vx9wccR68iPfZGJZp\",\"a777e8chPvJkY3tKa\",\"PdDz8XiQtA52kG2dz\",\"mAARx8JHyScLzDA5W\",\"HRpELhvG59jPywCdH\",\"eYJxvBRnNBYx7wZkS\",\"WowiuRPtuhncxyesk\",\"FDqfqHn8ww9QoSFhb\",\"Po3v3dHCk6wYGKMwi\",\"Sfb5RNdmiKSDyqyp4\",\"tGaPDJgDvracvfPuA\",\"eQXwk5zGckM8tCWYH\",\"ij9YRJvZz6WbqcGXS\",\"SY9Euc4kQfRgetXTd\",\"39NX4c3viuDCBoWMF\",\"QvJ36SnEakZn3pjqH\",\"L4mEjfrZ974Y7cZjn\",\"jcPZ5ySXseCB7Ec3x\",\"aWNggJDngk9DhC4Sg\",\"vQis3Pk7b9waJSn6z\",\"QWtB4pcpgzc8wvZr3\",\"p5ZshR8zhTqmdhKDc\",\"hPpvyhYTRfJd9hLda\",\"2GqHbu7h7ajqtqkXv\",\"mwDdQwbZN6tXwAbBA\",\"tseyDEv9zaHBMvLL3\",\"TJLQds4MwsNbQouKy\",\"aFMst9xdc5NbYP8E9\",\"BdnE4RS5puoxo92mA\",\"9rjDnhrBd63RHzJo6\",\"JPcvG7z3cqtrkeqYf\",\"gR2vYDNPKhAcxa2yk\",\"i5QeAsrM4m6hzPTku\",\"FJsvM5yqKuK9yMk9P\",\"7kS3JRf3pquA4qxW5\",\"nXToJ5kpsRfi4nyw2\",\"qvNk7pHSveLu3jqWw\",\"iCr5TEH8Xm3qRBnXW\",\"nhWLv6D8eZJ5ggKKX\",\"mE2WrTtBBq4zuLdWp\",\"z5ebtimXwFFJdYxoa\",\"vn6nR36mdfY8z2zKx\",\"BuGWvGZGiJELoMy5G\",\"BjJhatTBaTWm3ZhCt\",\"3AoqMu5gB99yjbKNY\",\"xC6ZXdTsLunc289PS\",\"e9Cknxbx6o7Nb6REs\",\"mSn9AcLsuEYzLbfai\",\"58Kdtrp28S7irTsdP\",\"2innwjWqxJHo4eRGh\",\"NczXsSrYNX6nDWhjF\",\"mx58K4xY8JZjvYCoZ\",\"3eRfYkTEsuSEXHX2a\",\"KLCTMLWmYZbivC2PE\",\"2tCCFm5iefjrRSaxv\",\"wrxHLcdBEri4cyK6W\",\"3wmugGPznBFL2pW9M\",\"yuLxi2qBJvMnwgdgJ\",\"N82kEBvpFE5FjbHrk\",\"mfjoiKdHNmtpSW6zu\",\"Rrb84KWhN5tjhMGMA\",\"E2hpke7mHxAWsw5t9\",\"eb9yKB7S8Sa6k9nsH\",\"iGKA6gtfSoHnHZNh6\",\"ThaiAKWWDw2W4QfJh\",\"s9qcJASB9WKPWaQzi\",\"nAmJEX7BkHLd9LsG2\",\"jd9sRTnsyeKpPggba\",\"CH53jGETBeJTummf3\",\"xn7uGNKeAwPEkP9oA\",\"ZtniSFrgec4oj6Pxm\",\"5NGxHLcQ8Af2RJ4TN\",\"coTsXQZW59EjCAB9d\",\"4Np3uu6Jj67L2CxiR\",\"noaBx5QyY6pTS5bja\",\"PtpZzTyCnfqM2X7cL\",\"zvhWpHAEk7YgxXaQd\",\"kp2ZbCewZJAbfd7xv\",\"k5TGxBtLi9BXxeChT\",\"3afKyNukc4dgwTMPf\",\"PYik4f8ib66yTNoC4\",\"GCsLzWAhLvniQqR3J\",\"jkumHyXfMkhGcPgqC\",\"e3oJAra7NTpDdReFH\",\"H46gRHmkdz2CRrGH9\",\"RRFsDNRaKW6h9tF3Y\",\"Qi3ZTiut4tWJPHibz\",\"uZrLKq6TRWgrjDJaW\",\"BSkoT6o2GweZkqXbc\",\"bRGGFe9s3LjxCfrbm\",\"rrkEbZtHE6xZiamyu\",\"4xdSc245S8vAvgDK9\",\"TjwyRbkPanQTP7AYs\",\"QnPD4Sv6W4LHc2Qng\",\"ffB8T76Ye9ygL6QZZ\",\"csXjXMhiQfbCQ9L7b\",\"vtHbevf2tHqe6mRxX\",\"Akq3fQcPRgPrWfsye\",\"Kntd2rSgWYWp8r4sP\",\"LCn6qz2GoMr5577Rd\",\"R9uaMzX2Y4ND8Cosm\",\"4TuceAZ8oTDzsjhir\",\"jED84My7PjSKANQsX\",\"75NY7vqimaATzRdAX\",\"vewKwcMeGuk3p3MsN\",\"v2w9GN4jHP2fgYdeE\",\"rehehi2Tr2mwaEoJE\",\"AXcnPX68zdMiLNSmu\",\"YLuJ7h27mr2GMcMt6\",\"Nb6LYPoQP6KJZt8mz\",\"ZK6YmYMsfwXYtaZ9P\",\"u9cRf5kvtpRB5ffB3\",\"svpXWhsSLLzYR8Rz4\",\"3pb8q4K4jv6jta45d\",\"4HRZ9mEHJtKPGABDW\",\"8BJyXvRWcrvN3nttS\",\"fzHwF2zdGs9m9q6FK\",\"bKPvJHLQ3ovQLt9MJ\",\"P3mnfZ2oegg72SmBS\",\"qWR7eXxBiNee22A5u\",\"MbbySGQmkzbjg373M\",\"oChrXdrYeYenBTKks\",\"K9aHdd5ReP4JJwNKA\",\"jtzNdgDCzsekkdpxA\",\"8N9tvpEaLrbrzj47L\",\"v3Ks8dHbSuhxFskZH\",\"yrLBMbni8KDsC5K44\",\"j2ugW5ihGv67sfh4e\",\"4G4Gev8LHRYEkWHBw\",\"Akk9m9HQFeCh6Lzki\",\"rpa7MXFzcXNWwbNiM\",\"HZEHKBXMfRvQE4hvK\",\"rpnhMdtcR9LHHbQSd\",\"Wiui6EEuNHdRy56FR\",\"Gc2bmsof5vD2Hsgqv\",\"PH32cNxBjrK4a28sn\",\"9HZbxzkzgz4CvePtv\",\"pEb93ZLiiTdcTZuc8\",\"STipuJs6kBvPqqsSE\",\"p6qLK4qS2dnFzDA7k\",\"PTo9qt93YqGvL8fCa\",\"XkPEb97Tnnvvf5fAY\",\"j4JYXWLmkTDH6iqHr\",\"GGQDpkXJGa2eLMnKT\",\"YLTZRjM78Wi9J9Re4\",\"RtPhDuwmvWNHiBxmG\",\"zJTXDTdbwnopRazGo\",\"pdGuqmMyeN4wZaWwv\",\"nxycxLNEN4PXDotSh\",\"Kt6oGAfrymXmAnn2d\",\"JZ5mQXCKxaFjrnGtq\",\"RnY25enEBE8T9P5GS\",\"zw7g7T8wE5R5CBhXr\",\"CNc6rmwhbxkxEhHAp\",\"RQwuHHy4rBgaQCLte\",\"dGugwhA6uwwjPGAa5\",\"pGh7WykiPe26fHJYv\",\"jexBZNQ6AoyhSYrh4\",\"pXuQ7KqxWt5cAxSa5\",\"YmMgWhzhHhQLmGGgH\",\"BdvdJYwHZr7JpkHsn\",\"Jsxrg9PZQ9hA8AHhC\",\"LKhEu25DsjfQfteGB\",\"mtnjnMWbijDjGrRrj\",\"tNvaBJZcgwvypkQBi\",\"rr8eSDoAKixZznsEZ\",\"DjPJY8kRgXbehNyGH\",\"daD4PtrAmXk4Q9jG7\",\"RbXkPwrmSowEJ7Jk4\",\"ub8rqqsdqowCrcxPi\",\"WBBN35jGBzzHWeLn5\",\"vGKxRcDYDsXzTQuEQ\",\"ct42f2gGpMXSd9hXM\",\"PLAW6hHCDwfFyi5yx\",\"xAfaHANrS8Zs2475d\",\"QDYpRvKEb4mtaDDgn\",\"9oPfGpc74rAstazB6\",\"q9apBnZWTLJEY4pfj\",\"4XxJxQkB5mNTLY2qk\",\"m3hDrjgTwir8Ldwhu\",\"PCXJRGqhzaF64uELh\",\"2Ni3PzJAc5fAhqBkb\",\"jyCByAZwu576xDwEL\",\"Yp7uvStL97cC9fKkY\",\"pWJWQDhqzDSmfaFam\",\"omn98QP6uBd923Azp\",\"zgoq9MhrL2h75DAMA\",\"WSLPmXqJzRjtYkuwf\",\"E6DBfkTgHuPsDWdG8\",\"bjn5DTzzaWCP5BDgX\",\"Es4eX2stRpyoXeC7f\",\"bBRzXPk7u95YuDWEL\",\"EsYKpvPGPnYN4jfTm\",\"DjChaA6HXG2vBe4fK\",\"8s5Bdrn7RTga7DL6x\",\"sNcDN3s3rH9wcNg5n\",\"srJ34BaybkQh3qRkM\",\"fuKrbHrj9KMJS9HX8\",\"PLkegh7jJLoeCPgTS\",\"m6qKkBY4aPWziyJTj\",\"azAzSkvJd7eyXY9x9\",\"Zp93Tit7CTRdkCMqp\",\"3Gf7ikLijfoxabiPY\",\"pctW2DbX9NkGHoJWR\",\"9t7udKzMuXKhB2EMZ\",\"AeZfR5dt45GYsMt8L\",\"AsipYXYSWwYMscMn3\",\"f3RAbWvE6uESq7KE5\",\"CJBPyyfyaEeEo63sb\",\"vic9SZ9qqj9WhRkbd\",\"cJ4whftrhXBvQLh7R\",\"tJTJgPnE6EBb2FvEf\",\"MvW4Kqnf3ee9QBGR9\",\"2e4Rom2DKp6QrdG2s\",\"ZtTwZM9pQ2sAzhnMR\",\"XSkW6joRrYrhTbSQr\",\"mpLFbFKjY6u3nsDMv\",\"nBJve5CzG6WAw7WFQ\",\"CCkHqRq5tcYmW2dsT\",\"jpSy4qhuDNwPk9mrf\",\"j5FSQCayX3By73CCw\",\"vTRTXQ3P8c3mibEnJ\",\"DPi9QGLctq2y76KuE\",\"szQg8dxKNNre3v3Jk\",\"qDT7RLgsKnjnS63Wi\",\"LobHjKEdgWi5xfqzj\",\"LwD3CyYSiBfg3mA4r\",\"QHiEYtz3tX3s9nETo\",\"DsFQazFAKZJ83RbtJ\",\"J7d397iB5GuWRAMfg\",\"kETR48v7gF3navX86\",\"2Qk2mFu9HBFzrB24i\",\"sfj3i3eEAfZa3f9kg\",\"Xk2g4CNFAnYcvxiSr\",\"wJTDDTE3TrmSXKP4d\",\"JsRTAwWK7Nikj4sKA\",\"8Z3dkvWBqtrMEE48N\",\"erQgJKaHaETRcqs4x\",\"vgmmAHPNrkDY6B3wS\",\"hhWiQDgAJA2m3MhDA\",\"K45zPJxsABuA3WSyj\",\"npp5hesJrst6ghKSM\",\"k6QB6fzbj4LsWktRL\",\"eANW47mfA359Y6JyP\",\"TtrXnGzi9MyhLvWiz\",\"QvEXmSEo3ANp3yPyH\",\"AQSqD9oNv2uPfxZCR\",\"xFxiPMktEDaX5BYZu\",\"pi76g3eRpnKrhee2a\",\"yWSGujxphYSsL63Zq\",\"eomLS3wh6tQPN8jtH\",\"ruzwBPphPDRgLXdnP\",\"oDtGiNqDMHmhHE3J8\",\"ckMvGF5TAyCwcxJBm\",\"inbiBEY2tizFwkN84\",\"aceiudXAwD9RuB83z\",\"QjGNkRM3Xc78yShJN\",\"fagfwZYYKokt5swAu\",\"pPpmP7xeJzGgK362R\",\"hyx8iH2z3QySmyRKT\",\"E3fkFzNeAGctuvqA2\",\"KdTyFZdkyoiEe3cE3\",\"eYJPzBp2ieqd7cf8B\",\"9XnGoq9Tv6ut3zTtH\",\"hCfruGWxw7v64teEr\",\"NGvCPuMiAP3xrRLfB\",\"JFiiZhAZTNQSvjzdp\",\"vKch2w3b4keMd84jj\",\"M4vq8ATaS9Jg5X7iP\",\"sN2JyFeJCwfwwHPwF\",\"QGjY3hgPYPMmMjc7j\",\"49XFttjKo2QhEWT3R\",\"SDtZFL5NzAoCPofXk\",\"x2Cz7S8rCKJqCE3Xe\",\"ahAe7pcyjYGzcDRm4\",\"wo4cpen33NYFHNca7\",\"jicWFrNKadYuLhqxh\",\"uxKGACwmZ6FNZsMwE\",\"Fx4mg5dd99wpRLYcB\",\"ZKuwzkssrSsDGNPr5\",\"7DXJ3mvKMHHqBLt92\",\"8BFSTCnoe2QggN64c\",\"sZ2eCa6pF6EN9PMmd\",\"M4yuYJiqMBR6FHmoK\",\"N3CNtWZz4ovJfH9Aw\",\"jyoLggHk8xQKZuoQC\",\"Fk47SQxbHEJRw4u76\",\"bfYmA3LMvhSrK59cn\",\"g5txYGWqRNSrS7MED\",\"sMcFMPkMJC4Kh6ymj\",\"AMpQSjKsRqhCDyS2j\",\"YfHnTYr4sD69ZACS2\",\"HCfkcKnPs9mrJojdG\",\"rPsSEYqwmttMPEuvo\",\"z47JaNrQMgvuPx5HE\",\"WpNHMgfjZE8aNN2MP\",\"NJCmkbH5e7qbtZYhd\",\"jzdjJtfQiCYmiyvzh\",\"nw3rZ4ap8trEDtPRX\",\"rgmhomEQqsnngdSJZ\",\"tk3L6WrynvN554LWG\",\"koWGjiCmozmgwhYsb\",\"pxgAHHB8hNEegCYXm\",\"nC4sPB69yYuTSks9T\",\"MaHyKMEDdtLMQeJ4b\",\"jkkKzNT77bMStXhpW\",\"RbBEqArJC6CJ3SqkL\",\"CHvzhtXnv8HTbPQ56\",\"7JCLyrrY6JYGpocac\",\"aMwmj6E3CQneqZDvJ\",\"xsDyJstYoBZRS8pJH\",\"QJoHpT8fkmJ5j4hk4\",\"gf4xrfguK6KiEF9yi\",\"RWadiFi5Qv5679JfC\",\"vXoMekHmJPfL7cjdf\",\"fdaHcbbQXHbtPoubG\",\"9Pzg45NEiRXhLtLh3\",\"qAEumdjLRx2AGAmzw\",\"YCcstLkoMCBSHpnPd\",\"SCY9Qyb83vz8ePBrZ\",\"8JJHJfbYpxvDiPpBn\",\"psdbt2PkjPv4qTwtr\",\"LPZ2QKCoB8q6rG25c\",\"NQ85ztbHjuiifxMqZ\",\"zd9FLSzsGz3evKafy\",\"DPpSwhhiuF4Y9YR2i\",\"RqnvM77EkZZD9W2Q3\",\"uQSXqABGeqaPtN9S4\"],\"quality\":[5,4,5,5,5,5,5,3,5,5,5,3,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,5,5,3,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":4.837837837837838,\"family\":[{\"_id\":\"uqwL7LNgAtxyGR4Si\",\"language\":\"cpp\"},{\"_id\":\"cSymahmP7vfHSm2jF\",\"language\":\"javascript\"},{\"_id\":\"Kh7Bm9X7Q4rYB8uT7\",\"language\":\"python3\"},{\"_id\":\"mLRvtP3xfPdQqXbTX\",\"language\":\"ruby\"}]}}"]