a["{\"msg\":\"result\",\"id\":\"1804\",\"result\":{\"_id\":\"w5LTwJwDLK4uQ3Dmv\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"function group(arr, size) {\\n\\t\\n}\",\"difficulty\":2.627450980392157,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"zQqBnGzQ7Ta6H7aFh\",\"instructions\":\"Create a function that groups an array of numbers based on a **size** parameter. The **size** represents the maximum length of each sub-array.\\n\\n```\\n[1, 2, 3, 4, 5, 6], 3\\n[[1, 3, 5], [2, 4, 6]]\\n// Divide array into groups of size 3.\\n\\n[1, 2, 3, 4, 5, 6], 2\\n[[1, 4], [2, 5], [3, 6]]\\n// Divide array into groups of size 2.\\n\\n[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], 4\\n[[1, 4, 7, 10], [2, 5, 8, 11], [3, 6, 9]]\\n// \\\"Leftover\\\" arrays are okay.\\n```\\n\\n### Examples\\n```\\ngroup([1, 2, 3, 4], 2) ➞ [[1, 3], [2, 4]]\\n\\ngroup([1, 2, 3, 4, 5, 6, 7], 4) ➞ [[1, 3, 5, 7], [2, 4, 6]]\\n\\ngroup([1, 2, 3, 4, 5], 1) ➞ [[1], [2], [3], [4], [5]]\\n\\ngroup([1, 2, 3, 4, 5, 6], 4) ➞ [[1, 3, 5], [2, 4, 6]]\\n```\\n\\n### Notes\\n- The **size** parameter represents the maximum size for each sub-array (see ex.4). You should try to fill each sub-array evenly. In other words, ex.4 should be `[[1, 3, 5], [2, 4, 6]]`, not `[[1, 3, 5, 6], [2, 4]]`.\\n- Keep the relative order of the numbers in each sub-array the same as the order in the original array.\\n- When distributing the numbers into the sub-arrays, each sub-array should have a number in it prior to receiving a new number (e.g. for example 1, your sub-arrays will be of size 2, and because there are 4 numbers, you will need 2 sub-arrays. When interating through the original array to fill the sub-arrays it should go `[[],[]]` -> `[[1],[]]` -> `[[1],[2]]` -> `[[1, 3], [2]]` -> `[[1, 3], [2, 4]]`).\",\"lab\":\"Test.assertSimilar(group([1, 2, 3, 4], 2), [[1, 3], [2, 4]])\\nTest.assertSimilar(group([1, 2, 3, 4, 5, 6, 7], 4), [[1, 3, 5, 7], [2, 4, 6]])\\nTest.assertSimilar(group([1, 2, 3, 4, 5], 1), [[1], [2], [3], [4], [5]])\\nTest.assertSimilar(group([1, 2, 3, 4, 5, 6], 4), [[1, 3, 5], [2, 4, 6]])\\nTest.assertSimilar(group([1, 2, 3, 4, 5, 6], 3), [[1, 3, 5], [2, 4, 6]])\\nTest.assertSimilar(group([1, 2, 3, 4, 5, 6], 2), [[1, 4], [2, 5], [3, 6]])\\nTest.assertSimilar(group([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], 4), [[1, 4, 7, 10], [2, 5, 8, 11], [3, 6, 9]])\\nTest.assertSimilar(group([1, 2, 3, 4, 5, 6, 7, 8], 2), [[1, 5], [2, 6], [3, 7], [4, 8]])\",\"language\":\"javascript\",\"summary\":\"Create a function that groups an array of numbers based on a size parameter. The size represents the maximum length of each sub-array.\\n\\n[1, 2, 3, 4, 5, 6], 3\\n[[1, 3, 5], [2, 4, 6]]\\n// Divide array into groups of size 3.\\n\\n[1, 2, 3, 4, 5, 6], 2\\n[[1, 4], [2, 5], [3, 6]]\\n// Divide array into groups of size 2.\\n\\n[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], 4\\n[[1, 4, 7, 10],\",\"tags\":[\"arrays\",\"closures\",\"scope\"],\"timestamp\":{\"$date\":1553196847597},\"title\":\"Group in Order\",\"stats\":{\"completed\":{\"total\":119,\"ratings\":[3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,4,3,3,3,2,2,4,1,3,3,4,2,2,2,4,1,3,2,2,2,0,4,3,2,4,1,3,3,2,4,3,2,3,3,4,1,4,3,3,3,0,3,2,2,2,5,3,4,4,2,0,4,2,2,1,3,3,2,3,2,2,3,3,2,2,3,0,2,1,2,2,2,4,4,2,4,3,3,4,4,4,2,2,3,1,3,4],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"XWrXsyggAHPHStDBW\",\"65dbBZynphj53nXqA\",\"SDtZFL5NzAoCPofXk\",\"2NJuDfSqdrF8kHHni\",\"XTCebLPQLaxTt8N7C\",\"8xuMMGF7fyQWL2fKH\",\"n5wubRfh6zh8QRymN\",\"Ko8zr9u44SujfMTa5\",\"4itF2fjGR9Swc48Zp\",\"Zv5DBzCvvoyjtqdAK\",\"yjtdwc2AC4jA2RWtn\",\"FJsvM5yqKuK9yMk9P\",\"ydEdzuCCZt4yny9Rq\",\"mHT2bJb5SByfJ8yKS\",\"AasGs8AeX9Lcb9xJn\",\"XKi8iZXBCHCaebSHh\",\"jqbm8L6895JgAtZ6H\",\"TWG7KDH6fgimvhfuJ\",\"Ze7zDiPzkmd8yaszr\",\"k8KxkWGHdryhNntZE\",\"paYBZLrnr6Zed5L6X\",\"YER6iBcpJCuhgrYDN\",\"54Ka62KytXRsrLPhZ\",\"dPM2Rk2iMkznyXNEt\",\"vq8YEhLLjEM9Dsoap\",\"3aZvfgr2H2WF8Yog2\",\"EjPLq3QSJdGQFJdgW\",\"z5GXzFD9Wwgnm9Kxf\",\"SxqAEMaYcE9Ps9eh6\",\"Xk2g4CNFAnYcvxiSr\",\"AvEiDZKLHCEQ6n9Ma\",\"iapvMBwWivxXaybye\",\"GCsLzWAhLvniQqR3J\",\"yuLxi2qBJvMnwgdgJ\",\"gX4goskw6rqGtAAoq\",\"Futhw5mmnmpa7X2JZ\",\"hcm8sL8mNJTSfTdgE\",\"nBo2LLuSMeEgd5f6G\",\"Kc3SDafimwpZWrATJ\",\"N7fwDd5JRDsuX7EKa\",\"zMCXYFZSsviDCvjnY\",\"a777e8chPvJkY3tKa\",\"ycwMaH5hCLctXA4J9\",\"uzheSKnwN684YCBcz\",\"Fihu6Nfanw5gAgXMK\",\"h4jFmtbFn92eA4649\",\"M4vq8ATaS9Jg5X7iP\",\"aEm3Wvj2rFYRL8Lrb\",\"rC7kdm3SsSX9udEQk\",\"dk4ocPsWCg3WN4Pja\",\"CJBPyyfyaEeEo63sb\",\"veKWMS3ACmRWTjiLK\",\"4Xv87xmdSnpYhi8hz\",\"4RsakkyRXyYGwFxEa\",\"Bi4YMw6bQ4nXTbm3n\",\"bXaGdBM8FBLHf7N6Y\",\"sNcDN3s3rH9wcNg5n\",\"sW78rbapvsS3AnuJe\",\"acHSYL6uQAgpgFMjp\",\"v9KtC8YLbMWmXiW2H\",\"HB5aLGh3LCH8oYZ9z\",\"c7uBxu2rgY77H5d79\",\"8JwhrReyH2HHBz4ws\",\"bHnhWtTzxPopvmyv2\",\"hNEhHd8qodq4P3h2g\",\"DPi9QGLctq2y76KuE\",\"ZcJm2kuqJnN3CXFaR\",\"CNc6rmwhbxkxEhHAp\",\"ZTTJprKDvFqKGew7c\",\"2NGSwAJk9NHt3toCo\",\"buX4mCQhtXCfBjeno\",\"pi76g3eRpnKrhee2a\",\"pWJWQDhqzDSmfaFam\",\"c9CuqxE5uzjWiqNf2\",\"3KfDpWtKBSYTutpyA\",\"p2woPCQKXuWJCwffJ\",\"9vgvXZadhaxy25CGH\",\"s678Wirfor5uYL5T6\",\"BqtE495RcBNgWHF3w\",\"sZ2eCa6pF6EN9PMmd\",\"GM2X83qnuLXTHe5zA\",\"Ef3McfqD44hj4Est9\",\"dNJGdRzaw2JQuq6BK\",\"BMCau6eTd5zb338LR\",\"z5ebtimXwFFJdYxoa\",\"bX6tpTCjwoi6XMMbK\",\"PH32cNxBjrK4a28sn\",\"e3tLGbyqGQ2Zn2GPH\",\"9gEWz76H8KmhN4yJj\",\"rpnhMdtcR9LHHbQSd\",\"nkH3HfJXLMNcBMM79\",\"xsDyJstYoBZRS8pJH\",\"Smxbro7Ser5CB3qWM\",\"5nhmyqLy8M2Yn2HMR\",\"YYPLnrQmxe6h8qk9T\",\"PGCDJpQMN8Sjn9Gm6\",\"h4nGQPJDEBakRFMrA\",\"jTZwWycebKZTNBzhe\",\"zACQzkEpgkohp7Psw\",\"tAF9Gf6PiGogbZuWs\",\"Hcyqetei9TKHGbLG9\",\"vG53vYGTfNimnsjza\",\"RE4Mm9T6Q9uygAxGS\",\"oS8RbMKnP2RQyKh2A\",\"sN2JyFeJCwfwwHPwF\",\"bZJRih2KYrq8Pawyv\",\"TtrXnGzi9MyhLvWiz\"],\"quality\":[5,4,5,5,3,5,5,5,2,5,5,5,5,5,5]},\"tests\":{\"score\":0,\"voters\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":-55,\"voters\":[\"mNMQvcxKSSvqqMYCH\",\"QjGNkRM3Xc78yShJN\"]},\"flags\":0},\"isHidden\":false,\"quality\":4.6,\"family\":[{\"_id\":\"WyDFRaMNFpJ8rSd7k\",\"language\":\"cpp\"},{\"_id\":\"w5LTwJwDLK4uQ3Dmv\",\"language\":\"javascript\"},{\"_id\":\"ZipMJJocMyozDZ6iP\",\"language\":\"python3\"},{\"_id\":\"TEnW9BfvkwhkmL9ra\",\"language\":\"ruby\"}]}}"]