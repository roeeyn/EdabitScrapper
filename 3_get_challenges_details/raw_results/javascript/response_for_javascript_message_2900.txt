a["{\"msg\":\"result\",\"id\":\"212\",\"result\":{\"_id\":\"webH9q8JMHc6SmTpY\",\"author\":\"Werdna\",\"authorId\":\"buX4mCQhtXCfBjeno\",\"code\":\"function rangeOfNum(start, end) {\\n\\t\\n}\",\"difficulty\":0.7165991902834008,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"ok3nRd9sbCYrn2RWq\",\"instructions\":\"Create a function that returns an array of all the integers between two given numbers `start` and `end`.\\n\\n### Examples\\n```\\nrangeOfNum(2, 4) ➞ [3]\\n\\nrangeOfNum(5, 9) ➞ [6, 7, 8]\\n\\nrangeOfNum(2, 11) ➞ [3, 4, 5, 6, 7, 8, 9, 10]\\n```\\n\\n### Notes\\n- `start` will always be <= `end`.\\n- `start` and  `end` are NOT included in the final array.\\n- If `start`  ==  `end`, return an empty array.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertSimilar(rangeOfNum(2, 4), [3])\\nTest.assertSimilar(rangeOfNum(5, 9), [6, 7, 8])\\nTest.assertSimilar(rangeOfNum(2, 11), [3, 4, 5, 6, 7, 8, 9, 10])\\nTest.assertSimilar(rangeOfNum(0, 9), [1, 2, 3, 4,5, 6, 7, 8])\\nTest.assertSimilar(rangeOfNum(156, 196), [157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195])\\nTest.assertSimilar(rangeOfNum(271, 349), [272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348])\\nTest.assertSimilar(rangeOfNum(457, 508), [458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507])\\nTest.assertSimilar(rangeOfNum(10, 10), [])\\nTest.assertSimilar(rangeOfNum(545, 596), [546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595])\\nTest.assertSimilar(rangeOfNum(343, 347), [344, 345, 346])\\nTest.assertSimilar(rangeOfNum(27, 27), [])\",\"language\":\"javascript\",\"quality\":4.811111111111111,\"stats\":{\"completed\":{\"ratings\":[0,0,0,0,0,0,1,1,3,0,1,1,1,0,0,1,0,0,1,0,0,0,0,1,0,1,0,1,2,2,0,2,1,1,0,0,2,0,0,0,0,0,1,1,0,0,1,0,2,0,0,0,2,0,1,0,1,0,0,0,0,0,0,0,1,1,0,0,1,0,0,1,0,2,1,2,0,0,2,2,0,5,0,0,1,1,0,0,0,1,2,0,1,2,0,1,0,0,1,3,0,1,0,1,0,0,0,0,0,3,1,0,1,0,0,3,0,2,1,0,1,0,0,2,0,0,2,1,3,2,1,1,1,2,2,1,0,1,2,0,1,0,0,0,0,0,2,2,1,1,0,0,2,0,0,1,1,0,2,1,0,1,0,0,1,1,1,0,1,0,2,0,1,0,0,0,0,0,3,0,1,0,1,1,1,0,0,2,1,0,0,1,0,0,2,1,2,0,1,0,0,1,1,0,2,0,2,2,0,2,1,5,0,0,1,1,0,1,0,1,0,0,0,1,2,0,1,1,1,0,0,1,1,1,1,2,0,0,2,0,1,2,2,0,0,0,1],\"quality\":[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,5,4,5,5,4,5,5,5,5,5,4,5,5,5,5,5,5,5,5,4,4,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,4,3,5,5,5,4,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,3,5],\"rators\":[\"buX4mCQhtXCfBjeno\",\"aWNggJDngk9DhC4Sg\",\"szQg8dxKNNre3v3Jk\",\"u9cRf5kvtpRB5ffB3\",\"jyCByAZwu576xDwEL\",\"oDtGiNqDMHmhHE3J8\",\"2Qk2mFu9HBFzrB24i\",\"J7d397iB5GuWRAMfg\",\"FRN2W8RYpJ6GPhgRy\",\"jcPZ5ySXseCB7Ec3x\",\"65dbBZynphj53nXqA\",\"srJ34BaybkQh3qRkM\",\"N3CNtWZz4ovJfH9Aw\",\"aLKHc5k4sM3GijhmE\",\"k8rMJnaejG3dX4ute\",\"SNiJRRosrmSWssLj4\",\"jnyub52Fi79drGvow\",\"RE4Mm9T6Q9uygAxGS\",\"QRv96jmNaYsWkxQEG\",\"BSkN5Sg2wgbyzK264\",\"z8R4K9Cd7PNuh256A\",\"FGEeCTorXbX3WvjFW\",\"QGjY3hgPYPMmMjc7j\",\"eQXwk5zGckM8tCWYH\",\"MATsqGvdZgvQ4JwCo\",\"csXjXMhiQfbCQ9L7b\",\"gKvzGaz6Qb8AQxp3q\",\"BxAuYhv4MPPfrNoMd\",\"mER4kEsRRxwbFgPRC\",\"RtPhDuwmvWNHiBxmG\",\"mpLFbFKjY6u3nsDMv\",\"RQwuHHy4rBgaQCLte\",\"CNc6rmwhbxkxEhHAp\",\"AFfw7cGg83uYk2Miy\",\"s2Y76rR2h2fPKibsK\",\"zw7g7T8wE5R5CBhXr\",\"Ya3eHgs8x3unZRLpb\",\"DPi9QGLctq2y76KuE\",\"tAF9Gf6PiGogbZuWs\",\"ihTSN4G98CHRmZqra\",\"PAzNgJF54C2mYPkR9\",\"yjtdwc2AC4jA2RWtn\",\"fbENjdwBMsPH3M7f4\",\"NJCmkbH5e7qbtZYhd\",\"Tb9rXvbBWBJBwGnnw\",\"9SEvR5mBRBi27QooN\",\"69H7D5m2bhePg7YKz\",\"QgynNjKvNCQG2o3qF\",\"evTTY9hwrtogaNxXn\",\"rbPEA2TFQw837Hmqg\",\"p4jTy5rXHWfYvwuDX\",\"yrMph4ZYqrmHFJ2bj\",\"d9LBRxvADNBB5QJMB\",\"vGKxRcDYDsXzTQuEQ\",\"5s4qhuRJijYaDNXva\",\"aGDwPibzJ4oM5tq47\",\"733qgZ7ZSSSrzbXGw\",\"dSa4K4DM6hiksarHv\",\"z5ebtimXwFFJdYxoa\",\"qFJpEDM2Ep6v4tqPz\",\"PLAW6hHCDwfFyi5yx\",\"c3ixxp9yXLsvFuJdj\",\"zNN2fW2pJGpTxBgzx\",\"mcPJaijagxzbA5HpH\",\"9qoWqLcHGiDX429rE\",\"3uua85hP7bevXBePb\",\"Yp7uvStL97cC9fKkY\",\"vB88fCn7Ke9osRdZx\",\"ZpLfGJzcKXzNhytAc\",\"iqtpazNSCBNgDvQFa\",\"ThKRnrQ3c9wDYiAq7\",\"CJBPyyfyaEeEo63sb\",\"sN2JyFeJCwfwwHPwF\",\"KNgC9ikGivb4yutoE\",\"Es4eX2stRpyoXeC7f\",\"6oNkXuuDRBTFvpr8y\",\"9HZbxzkzgz4CvePtv\",\"8Z3dkvWBqtrMEE48N\",\"7kENXQQ8ABiPGfBRD\",\"cp3X8hk8yNME7qoD9\",\"N9bFAQPbrPtZ4awNo\",\"w8geFfsnhEfLPjBCq\",\"aEm3Wvj2rFYRL8Lrb\",\"z5GXzFD9Wwgnm9Kxf\",\"7qF5SQYmNeNCWycYr\",\"3h5dGS6W8akioYnWD\",\"8EJ4j2fcfjTJ7Zrzu\",\"z47JaNrQMgvuPx5HE\",\"Ljs25Z425M9cuDLnT\",\"vEapufGjE49e5JSch\",\"NioGGZL9KCn5Ln96t\",\"ysKJrSXtvmcQvMxbx\",\"QHiEYtz3tX3s9nETo\",\"PKJWzgQKwneuaS3Ap\",\"HduWrqt8YcQ2B5PWu\",\"HrJtdRbvHHNh7tMMo\",\"pi76g3eRpnKrhee2a\",\"E42FcQ4mjwqdGFRr4\",\"y2cf8jaBdN5nBdXpa\",\"4dZPNCZjG2ZiQhSDi\",\"xrqK8P7zH83wjo3L4\",\"XrqNzJ2FRG8HnGiR6\",\"gJydjaRo6XEpNLeYs\",\"N7fwDd5JRDsuX7EKa\",\"ZK6YmYMsfwXYtaZ9P\",\"ZyhPShkeJa43u5un5\",\"DbqxHbho56ivhmMk8\",\"STipuJs6kBvPqqsSE\",\"hwdJZXT3sgEK9uo2s\",\"B9LYirjMoidrmEtQa\",\"mCMD9CNp9rA7tbYoB\",\"e9Cknxbx6o7Nb6REs\",\"hCfruGWxw7v64teEr\",\"E6DBfkTgHuPsDWdG8\",\"GwLzzrCFdYfQXhAWN\",\"pPpmP7xeJzGgK362R\",\"vKch2w3b4keMd84jj\",\"rMc3LPajSgm68hNfC\",\"GmvpofLA8NryHEpFt\",\"x2Cz7S8rCKJqCE3Xe\",\"CdXigydGTBLgA577m\",\"Q7Yxda7dqKeYPs2Db\",\"3j3yukFjbtAXMk6TE\",\"exiy4CeGedb9MkrZW\",\"LJoLLideh5Aw93oSx\",\"K54ipu2Y5pZfPngmk\",\"6GwP5Mbvq3gssdKCH\",\"98499DDQYDLiQSxkK\",\"aPX8qCXL6TmfpRfgy\",\"ahxmaYtSDuZmhrMBZ\",\"zd9FLSzsGz3evKafy\",\"M4vq8ATaS9Jg5X7iP\",\"yd4FbQA9M5L57cTou\",\"AXcnPX68zdMiLNSmu\",\"MLozTdL5Ld3r2LWq7\",\"839TpYGKanw32pWfe\",\"c7uBxu2rgY77H5d79\",\"jLSZdBseR2kfjt8dL\",\"zE249Hc7BmfZ5mqJF\",\"Swb2jDnZjviDXsQvB\",\"nQheqP5nvof4bPeNX\",\"F4JPXKWNJpPjuCFAn\",\"JW5J6sdJHAmDmfWnE\",\"sscsfdj4ygKcjH8PG\",\"Po3v3dHCk6wYGKMwi\",\"vdrDCxMWpqCY3yxfj\",\"ACCFtQJzwpbmpaBT5\",\"pdGuqmMyeN4wZaWwv\",\"nyh73Tr6GhqAat78g\",\"zJTXDTdbwnopRazGo\",\"6E8eiMAGHra3yNKt9\",\"Xj6R2zqhgumffQCAN\",\"KypQdzThzogKXwkXE\",\"SpzAprfWq9EYZcjqa\",\"zjDpWYThJebntuZTR\",\"2a56F4KyQHRgTubPL\",\"3WtHp4MBzciz4AE8M\",\"P2vAyWNH3wjoP5tXc\",\"j5FSQCayX3By73CCw\",\"KjfCJcYLtibahnavw\",\"7WjCXut2oYSTqiXu8\",\"kGiXDYhNLhnaWz3nG\",\"9ciW3hoQ6JPWmL7c5\",\"FEhpEv9JhSsqqfACv\",\"njjZpAoSfaTRruAYn\",\"ZNYXpzJhiCbLkPCJw\",\"5nhmyqLy8M2Yn2HMR\",\"Ef3McfqD44hj4Est9\",\"7gZKfvwaeqsGKXMEN\",\"eD8vqjgT7Fg3tputM\",\"rhhGJj3s9pMzzfpan\",\"yyJT4y625HrPXRQP2\",\"2tCCFm5iefjrRSaxv\",\"etKaPYBW5AfmY5zxe\",\"AxZpaHuZptKWTQj8y\",\"oF6TNdvfqZfppqSgK\",\"o5vwZSj8H7Wngp9oZ\",\"2cdvd8yuPLSwvGj9w\",\"eRyp3gmqkb7MdXpEu\",\"8NvGXadvQEppXXZD7\",\"QguFWo84zgF3c8BGr\",\"b2NRkZhMXbQnETfR2\",\"gFEpzrgWhzCZHeifj\",\"mdv6r687hYHFziB89\",\"GxABy7LkQ5YRmqowE\",\"6BFP6MA58afErnoKC\",\"LPdouuyWXCqvfDd65\",\"ieMF2hfPs33aNjFWN\",\"JnYehNpm7BvefLuee\",\"8BJyXvRWcrvN3nttS\",\"AasGs8AeX9Lcb9xJn\",\"PXAcsKkssS2yLyDv2\",\"jtzNdgDCzsekkdpxA\",\"7wtuhPesfhcYsfZaZ\",\"HCfkcKnPs9mrJojdG\",\"m6qKkBY4aPWziyJTj\",\"yXGiiSAR5nBHnH3yr\",\"86kMtj2c6DG7paeqg\",\"uqiofJFPnWtuuynf6\",\"C9LKGu2g5hSijvDzA\",\"QAZ5DGaWWYhku4BNz\",\"GJgQQ8WdTY6MgScc6\",\"9pzFiFK3ANLjQfnr2\",\"pPiTme42we5Kxn3FY\",\"kcjvgRk4iqMcvmo9H\",\"dNNMLRGBPdgEJ9gdS\",\"Q6gEE9dG8ERy2Xu3c\",\"TWhcGs8Tpt3Gua5Wi\",\"hT8T426rinDzZytaC\",\"fxr3ZSRturCprSCfa\",\"xhrJ9BGQFaMJCEG6F\",\"Ja4AXg3n8sMddBPn5\",\"mHT2bJb5SByfJ8yKS\",\"oB74SK9pYyuDTTEEp\",\"vmad5Pz6mu3CRt22J\",\"Cx5pSYgnMXKoyWbnr\",\"2cq2HYsJJEcPWuqdz\",\"tmB8Xatt4AstQSWWv\",\"WnQ7d78TT7yuyjupo\",\"EsYKpvPGPnYN4jfTm\",\"tseyDEv9zaHBMvLL3\",\"jyoLggHk8xQKZuoQC\",\"oyB4Wr4EeZnoDaa8B\",\"F3mffDfGmCrgAXoYf\",\"Fk47SQxbHEJRw4u76\",\"4fjSgcqhQQZM2ZFRP\",\"g4NCSxxHqHCGMpWwT\",\"2TLngGdowbHujqTBa\",\"XRRZ5kd8PvAQYtA4s\",\"7DXJ3mvKMHHqBLt92\",\"gKhGony2qmzMdKBHv\",\"BghXDk97iRM34suMN\",\"jE4ci5yYHPKZTrrbf\",\"N2wnZXkhDH86mgjQ8\",\"jSKbvkb6T6sNsjYYE\",\"PH32cNxBjrK4a28sn\",\"kqd3cgnP2yBTj5pSv\",\"8fJnojhYrxD2cNTyu\",\"bfYmA3LMvhSrK59cn\",\"fPRe6kTeGM3yWGfY6\",\"8PWe4RLFk3MRvbn68\",\"Xjx9eRvHSpwffg9Hb\",\"Zk7zYsonf4TQ6d27R\",\"kKsz4H86mtJEB8Wvs\",\"QJqntLLpkx72XhQEz\",\"K45zPJxsABuA3WSyj\",\"kzKScgma9NnX6YwAs\",\"PC3pLs36zNzpRDSuE\",\"34bE6mric984YYLZQ\",\"rZkKqZkCbya8tkbJL\",\"4wR64Jaibcom7tbYf\",\"GiQCH5nvo5A2pnREZ\",\"H3yM3F3mukfdq9fit\",\"iXdTEAhC346WsRk4G\",\"QrGnkbEeTo45YwRHy\",\"ddK4zymKDYAikiMzc\",\"bHGSzaWy2WvNLNvtb\",\"sMcFMPkMJC4Kh6ymj\",\"djpMD2mX9tkhE6dke\",\"Zp93Tit7CTRdkCMqp\",\"qvCppNAZjAkNdBSu6\",\"3LiSLdtN58n46NEqg\",\"cR3ibTMxLyEdDFCHY\",\"h74gGMHaxayjJsJhL\",\"8FJxEKP2qpm76E9Zd\",\"N2ar5QmkbP9aFYop9\",\"WpNHMgfjZE8aNN2MP\",\"75NY7vqimaATzRdAX\",\"ttuGK7od8simjgmCJ\",\"FY7atTfxaahfAHtJv\",\"fccfTyHBaoFGEaKxh\",\"sgjcbfroKXPSSDob8\",\"5eDE9KCDnDnqBqLEK\",\"nC4sPB69yYuTSks9T\",\"QKaNJmXgBMsTmig6S\",\"kiR2WGN7e3FCPLgac\",\"sHjfbGQGLHE6JR6qu\",\"9XnGoq9Tv6ut3zTtH\",\"Y563WExzp39KR83F9\",\"opcrDAS4AgXqrJXnb\",\"Erbux72p3mqafJswc\",\"kwN6aSYvF7R4x8kbJ\",\"PvBMYGisrSEQhs9ep\",\"eoaYuYy5ncBaon3Zj\",\"v2w9GN4jHP2fgYdeE\",\"oaJbwGAbtpgYhMEgd\",\"qjd7Y3B7nNxdx5PgM\",\"FJsvM5yqKuK9yMk9P\",\"CtcMetTXaFgX6Evvf\",\"NiSowTQGDddKPtsPQ\",\"i5QeAsrM4m6hzPTku\",\"7q8oBsCHwn48Ppnrq\",\"dXT6y8AyktczWQsFp\",\"koWGjiCmozmgwhYsb\",\"4WYjScmBWK9eXRzvd\",\"ZuuRPZRW4r3Bp2fSS\",\"vpoTHSqFwCb5jmST9\",\"CHvzhtXnv8HTbPQ56\",\"rpNNPWzdFCc9TzKMz\",\"pGv3nd6THyJQADf22\",\"T6Rm8mREPMZSftzrC\",\"YcCLwitFMAEJSnxAW\",\"NJuBx55XXbaAjaiwX\",\"CC2aFwzc6CF9hjdbb\",\"6vdn7gegY7xXxYCbe\",\"qgtso8jfXRD52Th7C\",\"ey7weiXtrrTWSnjtJ\",\"EBg5AYkj9YEhjGwst\",\"t4ci2PC2wYh53kENW\",\"45Pieo78EYiieQTXT\",\"DT44RfRiPRbpqoXWB\",\"9qJwfSnwqzDYYRqTP\",\"pwFeDFLpLi6FTxekc\",\"cy8Y6xHqycmrFFE5Q\",\"QfmeLsicXT49NGouo\",\"ySNimfwMcCFvEjkN7\",\"HjP75DWvMXBqcxwfv\",\"eomLS3wh6tQPN8jtH\",\"DdBQB9pTRjwF8gx7i\",\"ttfeEwhaXwRfDjjsA\",\"iTDZTaTYMy9P8Qqiz\",\"kAfXgLMWe4WH8gY6Z\",\"TAMxX5h3LggMLsijj\",\"8Rs7d8BAz6QQN2rjd\",\"prripzcApLp7q4hkr\",\"2teDLvq8oNAxRCgS7\",\"TNNmgPkwar5jurhF8\",\"9JPCL9dtKwDERRXDZ\",\"mdRQaGT98ycMt87S2\",\"xsDyJstYoBZRS8pJH\",\"tZ2QjXa2xoT374aPv\",\"6ua6w8vYDMAHGyD9q\"],\"total\":350},\"flags\":1},\"summary\":\"Create a function that returns an array of all the integers between two given numbers start and end.\\n\\nExamples\\nrangeOfNum(2, 4) ➞ [3]\\n\\nrangeOfNum(5, 9) ➞ [6, 7, 8]\\n\\nrangeOfNum(2, 11) ➞ [3, 4, 5, 6, 7, 8, 9, 10]\\n\\nNotes\\nstart will always be <= end.\\nIf start  ==  end, return an empty array.\",\"tags\":[\"arrays\",\"language_fundamentals\",\"numbers\"],\"timestamp\":{\"$date\":1615659866641},\"title\":\"Array From a Range of Numbers\",\"family\":[{\"_id\":\"webH9q8JMHc6SmTpY\",\"language\":\"javascript\"},{\"_id\":\"gn9MZsbDgJgvNH2Fa\",\"language\":\"php\"},{\"_id\":\"gcKthyMugQzDEFJTg\",\"language\":\"python3\"},{\"_id\":\"qMT5pBA3s7YsRoanX\",\"language\":\"ruby\"}]}}"]