a["{\"msg\":\"result\",\"id\":\"928\",\"result\":{\"_id\":\"Dz7kD2MsKRvippefT\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"function howManyMissing(arr) {\\n\\t\\n}\",\"difficulty\":1.632183908045977,\"familyId\":\"2HXpRnwQW4xwRhxqC\",\"instructions\":\"Create a function which calculates how many numbers are missing from an **ordered** number line. This number line starts at the first value of the array, and increases by 1 to the end of the number line, ending at the last value of the array.\\n\\n```\\nhowManyMissing([1, 2, 3, 8, 9]) ➞ 4\\n\\n// The number line starts at 1 and ends at 9 (so the numbers 0 and 10 aren't missing from it).\\n// The numbers missing from this line are 4, 5, 6, and 7.\\n// 4 numbers are missing.\\n```\\n\\n### Examples\\n```\\nhowManyMissing([1, 3]) ➞ 1\\n\\nhowManyMissing([7, 10, 11, 12]) ➞ 2\\n\\nhowManyMissing([1, 3, 5, 7, 9, 11]) ➞ 5\\n\\nhowManyMissing([5, 6, 7, 8]) ➞ 0\\n```\\n\\n### Notes\\nIf the number line is complete, or the array is empty, return `0`.\",\"isHidden\":false,\"lab\":\"Test.assertEquals(howManyMissing([1, 3]), 1)\\nTest.assertEquals(howManyMissing([7, 10, 11, 12]), 2)\\nTest.assertEquals(howManyMissing([1, 3, 5, 7, 9, 11]), 5)\\nTest.assertEquals(howManyMissing([5, 6, 7, 8]), 0)\\nTest.assertEquals(howManyMissing([1, 2, 3, 8, 9]), 4)\\nTest.assertEquals(howManyMissing([1]), 0)\\nTest.assertEquals(howManyMissing([]), 0)\",\"language\":\"javascript\",\"summary\":\"Create a function which calculates how many numbers are missing from an ordered number line. This number line starts at the first value of the array, and increases by 1 to the end of the number line, ending at the last value of the array.\\n\\nhowManyMissing([1, 2, 3, 8, 9]) ➞ 4\\n\\n// The number line starts at 1 and ends at 9 (so the numbers 0 and 10 aren't missing\",\"tags\":[\"arrays\",\"numbers\"],\"timestamp\":{\"$date\":1598595066672},\"title\":\"One, Two, Skip a Few\",\"stats\":{\"completed\":{\"total\":118,\"ratings\":[1,1,1,1,1,2,1,2,3,0,2,1,3,2,1,2,0,2,2,1,2,2,1,2,3,0,2,2,2,1,2,1,2,2,1,2,2,2,2,1,2,2,2,1,1,2,1,2,1,2,1,1,2,2,2,2,2,1,2,2,1,1,2,2,2,5,1,0,1,2,1,1,0,2,2,2,2,2,2,3,3,2,0,2,2,1,2],\"rators\":[\"CNc6rmwhbxkxEhHAp\",\"xn7uGNKeAwPEkP9oA\",\"tAF9Gf6PiGogbZuWs\",\"kp2ZbCewZJAbfd7xv\",\"QRv96jmNaYsWkxQEG\",\"FDqfqHn8ww9QoSFhb\",\"75NY7vqimaATzRdAX\",\"zSGTrJF5wDGgkFx32\",\"ttuGK7od8simjgmCJ\",\"jnyub52Fi79drGvow\",\"SNiJRRosrmSWssLj4\",\"n5wubRfh6zh8QRymN\",\"mHT2bJb5SByfJ8yKS\",\"3WtHp4MBzciz4AE8M\",\"mwg8jvMHHmQiQRrbr\",\"buX4mCQhtXCfBjeno\",\"65dbBZynphj53nXqA\",\"RE4Mm9T6Q9uygAxGS\",\"2tCCFm5iefjrRSaxv\",\"PGCDJpQMN8Sjn9Gm6\",\"a7LBurCmz5n6gECbv\",\"s9qcJASB9WKPWaQzi\",\"u9cRf5kvtpRB5ffB3\",\"BdnE4RS5puoxo92mA\",\"yjtdwc2AC4jA2RWtn\",\"eQXwk5zGckM8tCWYH\",\"aEm3Wvj2rFYRL8Lrb\",\"4ntYzGHHBgqf58udP\",\"v2w9GN4jHP2fgYdeE\",\"SqgXZRhfXNccaSjvS\",\"Ya3eHgs8x3unZRLpb\",\"evTTY9hwrtogaNxXn\",\"7gZKfvwaeqsGKXMEN\",\"Nb6LYPoQP6KJZt8mz\",\"7wtuhPesfhcYsfZaZ\",\"jkumHyXfMkhGcPgqC\",\"vtHbevf2tHqe6mRxX\",\"qWR7eXxBiNee22A5u\",\"R9uaMzX2Y4ND8Cosm\",\"zw7g7T8wE5R5CBhXr\",\"bX6tpTCjwoi6XMMbK\",\"JZ5mQXCKxaFjrnGtq\",\"BdvdJYwHZr7JpkHsn\",\"QnPD4Sv6W4LHc2Qng\",\"DDokdbBKxv49M445o\",\"M4vq8ATaS9Jg5X7iP\",\"STipuJs6kBvPqqsSE\",\"8BJyXvRWcrvN3nttS\",\"jLSZdBseR2kfjt8dL\",\"vewKwcMeGuk3p3MsN\",\"AFfw7cGg83uYk2Miy\",\"z5ebtimXwFFJdYxoa\",\"vGKxRcDYDsXzTQuEQ\",\"SY9Euc4kQfRgetXTd\",\"2Ni3PzJAc5fAhqBkb\",\"pdGuqmMyeN4wZaWwv\",\"FGEeCTorXbX3WvjFW\",\"nkH3HfJXLMNcBMM79\",\"Yp7uvStL97cC9fKkY\",\"srJ34BaybkQh3qRkM\",\"TNo7w28xev2B5YWkF\",\"3Gf7ikLijfoxabiPY\",\"2Qk2mFu9HBFzrB24i\",\"m6qKkBY4aPWziyJTj\",\"5hHf2e9zimbmxMqqF\",\"ApqWTmEEkTCsDou48\",\"npp5hesJrst6ghKSM\",\"J7d397iB5GuWRAMfg\",\"cgCQDs9i7yChKeAjE\",\"pPpmP7xeJzGgK362R\",\"wJTDDTE3TrmSXKP4d\",\"pi76g3eRpnKrhee2a\",\"BfFNxDXtv2k9sx2eK\",\"oDtGiNqDMHmhHE3J8\",\"AasGs8AeX9Lcb9xJn\",\"NGvCPuMiAP3xrRLfB\",\"N3CNtWZz4ovJfH9Aw\",\"LwD3CyYSiBfg3mA4r\",\"rpNNPWzdFCc9TzKMz\",\"n4Y5EEGCjmrK99yrt\",\"nBJve5CzG6WAw7WFQ\",\"gXTAie79kiw28tx5u\",\"Q7Yxda7dqKeYPs2Db\",\"mpLFbFKjY6u3nsDMv\",\"jyoLggHk8xQKZuoQC\",\"SCYNpjgtLCE9rKpYB\",\"sN2JyFeJCwfwwHPwF\",\"bfYmA3LMvhSrK59cn\",\"6BpBQnSGhzgvhXrEy\",\"RnY25enEBE8T9P5GS\",\"sMcFMPkMJC4Kh6ymj\",\"9XnGoq9Tv6ut3zTtH\",\"oyB4Wr4EeZnoDaa8B\",\"jicWFrNKadYuLhqxh\",\"9HZbxzkzgz4CvePtv\",\"z47JaNrQMgvuPx5HE\",\"rPsSEYqwmttMPEuvo\",\"PTo9qt93YqGvL8fCa\",\"eomLS3wh6tQPN8jtH\",\"QguFWo84zgF3c8BGr\",\"3rQ3fN5SM2eGHmTi5\",\"CHvzhtXnv8HTbPQ56\",\"uxKGACwmZ6FNZsMwE\",\"LPZ2QKCoB8q6rG25c\",\"inbiBEY2tizFwkN84\",\"QHiEYtz3tX3s9nETo\"],\"quality\":[5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"quality\":4.916666666666667,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"BtuGifKZFgby65PQH\",\"language\":\"cpp\"},{\"_id\":\"Dz7kD2MsKRvippefT\",\"language\":\"javascript\"},{\"_id\":\"Fw4fFSnTJfCsPBJ5u\",\"language\":\"python3\"},{\"_id\":\"XtTqL8Pnvnkio9PQ5\",\"language\":\"ruby\"}]}}"]