a["{\"msg\":\"result\",\"id\":\"982\",\"result\":{\"_id\":\"nhcFHFHDYGwyAFNSy\",\"author\":\"mdjahid.5533\",\"authorId\":\"r7mZLgpQWzRiGddL5\",\"code\":\"function wordBuilder(letters, positions) {\\n\\t\\n}\",\"difficulty\":1.6666666666666667,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"A35ooNczgXTG8wbtM\",\"instructions\":\"Create a function that builds a word from the **scrambled letters** contained in the first array. Use the second array to establish each **position** of the letters in the first array. Return a string from the unscrambled letters (that made-up the **word**).\\n\\n### Examples\\n```\\nwordBuilder([\\\"g\\\", \\\"e\\\", \\\"o\\\"], [1, 0, 2]) ➞ \\\"ego\\\"\\n\\nwordBuilder([\\\"e\\\", \\\"t\\\", \\\"s\\\", \\\"t\\\"], [3, 0, 2, 1]) ➞ \\\"test\\\"\\n\\nwordBuilder([\\\"b\\\", \\\"e\\\", \\\"t\\\", \\\"i\\\", \\\"d\\\", \\\"a\\\"], [1, 4, 5, 0, 3, 2]) ➞ \\\"edabit\\\"\\n```\\n\\n### Notes\\nThe elements in the second array are indexes of the elements in the first array.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertEquals(wordBuilder([\\\"g\\\", \\\"e\\\", \\\"o\\\"], [1, 0, 2]), 'ego')\\nTest.assertEquals(wordBuilder([\\\"e\\\", \\\"t\\\", \\\"s\\\", \\\"t\\\"], [3, 0, 2, 1]), 'test')\\nTest.assertEquals(wordBuilder([\\\"b\\\", \\\"e\\\", \\\"t\\\", \\\"i\\\", \\\"d\\\", \\\"a\\\"], [1, 4, 5, 0, 3, 2]), 'edabit')\\nTest.assertEquals(wordBuilder([\\\"l\\\", \\\"e\\\", \\\"h\\\", \\\"n\\\", \\\"l\\\", \\\"c\\\", \\\"a\\\", \\\"e\\\", \\\"g\\\"], [5, 2, 6, 4, 0, 1, 3, 8, 7]), 'challenge')\\nTest.assertEquals(wordBuilder([\\\"s\\\", \\\"o\\\", \\\"r\\\", \\\"t\\\", \\\"e\\\", \\\"d\\\"], [0, 1, 2, 3, 4, 5]), 'sorted')\\n\\n\\n/* -------------- Xahid Howlader --------------*/\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[3,3,3,3,3,3,0,2,0,2,2,1,3,1,2,1,0,0,2,1,1,1,2,1,2,2,2,3,2,2,2,2,1,2,0,2,1,2,2,0,1,1,2,2,2,1,2,2,2,1,2,2,1,2,0,2,2,2,1,2,5,2,1,2,1,1,1,0,2,2,2,2],\"rators\":[\"r7mZLgpQWzRiGddL5\",\"yuLxi2qBJvMnwgdgJ\",\"3fDQochLjCShjhNeE\",\"yjtdwc2AC4jA2RWtn\",\"QRv96jmNaYsWkxQEG\",\"eoepTq5ES5tfgY9XT\",\"RE4Mm9T6Q9uygAxGS\",\"buX4mCQhtXCfBjeno\",\"n5wubRfh6zh8QRymN\",\"65dbBZynphj53nXqA\",\"E2hpke7mHxAWsw5t9\",\"noaBx5QyY6pTS5bja\",\"iJC8PmpzSyTnEDqw5\",\"bRGGFe9s3LjxCfrbm\",\"mHT2bJb5SByfJ8yKS\",\"FJsvM5yqKuK9yMk9P\",\"vtHbevf2tHqe6mRxX\",\"daKe8m3yuip3WwzA7\",\"7wtuhPesfhcYsfZaZ\",\"a777e8chPvJkY3tKa\",\"C9LKGu2g5hSijvDzA\",\"tAF9Gf6PiGogbZuWs\",\"yrLBMbni8KDsC5K44\",\"7gZKfvwaeqsGKXMEN\",\"Nb6LYPoQP6KJZt8mz\",\"nAmJEX7BkHLd9LsG2\",\"3NeHnbvRB5PPRgjgL\",\"aEm3Wvj2rFYRL8Lrb\",\"ZKkrSs7HAZ9nfhneT\",\"cp3X8hk8yNME7qoD9\",\"CH53jGETBeJTummf3\",\"vn6nR36mdfY8z2zKx\",\"STipuJs6kBvPqqsSE\",\"AFfw7cGg83uYk2Miy\",\"evTTY9hwrtogaNxXn\",\"CNc6rmwhbxkxEhHAp\",\"g4NCSxxHqHCGMpWwT\",\"qWR7eXxBiNee22A5u\",\"BdvdJYwHZr7JpkHsn\",\"Ya3eHgs8x3unZRLpb\",\"zw7g7T8wE5R5CBhXr\",\"JZ5mQXCKxaFjrnGtq\",\"M4vq8ATaS9Jg5X7iP\",\"R9uaMzX2Y4ND8Cosm\",\"nyh73Tr6GhqAat78g\",\"Yp7uvStL97cC9fKkY\",\"6o2HR3kdZQ9nZydNN\",\"B5g5exxNt5K8qXpQF\",\"SY9Euc4kQfRgetXTd\",\"u9cRf5kvtpRB5ffB3\",\"f8FKe3tySRMPxpcQJ\",\"vewKwcMeGuk3p3MsN\",\"3Gf7ikLijfoxabiPY\",\"ZcqshY58sGEEvgeaq\",\"srJ34BaybkQh3qRkM\",\"ApqWTmEEkTCsDou48\",\"npp5hesJrst6ghKSM\",\"3xMRkNrEPHEw99y56\",\"2Qk2mFu9HBFzrB24i\",\"J7d397iB5GuWRAMfg\",\"wYxZHakq2rgXAecTk\",\"wJTDDTE3TrmSXKP4d\",\"7Ryf8g6QSmBBfSZAZ\",\"oDtGiNqDMHmhHE3J8\",\"AasGs8AeX9Lcb9xJn\",\"N3CNtWZz4ovJfH9Aw\",\"BdnE4RS5puoxo92mA\",\"8BJyXvRWcrvN3nttS\",\"vGKxRcDYDsXzTQuEQ\",\"pi76g3eRpnKrhee2a\",\"nBJve5CzG6WAw7WFQ\",\"gXTAie79kiw28tx5u\",\"n4Y5EEGCjmrK99yrt\",\"LwD3CyYSiBfg3mA4r\",\"jyoLggHk8xQKZuoQC\",\"mpLFbFKjY6u3nsDMv\",\"SCYNpjgtLCE9rKpYB\",\"eomLS3wh6tQPN8jtH\",\"jicWFrNKadYuLhqxh\",\"FGEeCTorXbX3WvjFW\",\"bfYmA3LMvhSrK59cn\",\"sN2JyFeJCwfwwHPwF\",\"oyB4Wr4EeZnoDaa8B\",\"PTo9qt93YqGvL8fCa\",\"jnyub52Fi79drGvow\",\"QHiEYtz3tX3s9nETo\"],\"total\":92,\"quality\":[5,4,3,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,3]},\"flags\":1},\"summary\":\"Create a function that builds a word from the scrambled letters contained in the first array. Use the second array to establish each position of the letters in the first array. Return a string from the unscrambled letters (that made-up the word).\\n\\nExamples\\nwordBuilder([\\\"g\\\", \\\"e\\\", \\\"o\\\"], [1, 0, 2]) ➞ \\\"ego\\\"\\n\\nwordBuilder([\\\"e\\\", \\\"t\\\", \\\"s\\\", \\\"t\\\"], [3, 0, 2, 1]) ➞ \\\"test\\\"\",\"tags\":[\"arrays\",\"strings\",\"formatting\"],\"timestamp\":{\"$date\":1595222821474},\"title\":\"New Word Builder\",\"quality\":4.684210526315789,\"family\":[{\"_id\":\"ui8xjYmJRE4TWSNWs\",\"language\":\"cpp\"},{\"_id\":\"nhcFHFHDYGwyAFNSy\",\"language\":\"javascript\"},{\"_id\":\"R5F99DeuhqYxbGyMM\",\"language\":\"python3\"},{\"_id\":\"xaD9fMu7raHxmDzjx\",\"language\":\"ruby\"}]}}"]