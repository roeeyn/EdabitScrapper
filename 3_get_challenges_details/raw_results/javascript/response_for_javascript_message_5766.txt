a["{\"msg\":\"result\",\"id\":\"1631\",\"result\":{\"_id\":\"t3iJRARc9K9x9AAdr\",\"author\":\"Jon Ingram\",\"authorId\":\"rTRvHndHZKKRkb9w5\",\"code\":\"function trackRobot(instructions) {\\n\\t\\n}\",\"difficulty\":2.292682926829268,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"8fGxcvSEM4oQwNcKj\",\"instructions\":\"A robot has been given a list of movement instructions. Each instruction is either `left`, `right`, `up` or `down`, followed by a distance to move. The robot starts at `[0, 0]`. You want to calculate where the robot will end up and return its final position as an array.\\n\\nTo illustrate, if the robot is given the following instructions:\\n\\n```\\n[\\\"right 10\\\", \\\"up 50\\\", \\\"left 30\\\", \\\"down 10\\\"]\\n```\\n\\nIt will end up 20 left and 40 up from where it started, so we return `[-20, 40]`.\\n\\n### Examples\\n```\\ntrackRobot([\\\"right 10\\\", \\\"up 50\\\", \\\"left 30\\\", \\\"down 10\\\"]) ➞ [-20, 40]\\n\\ntrackRobot([]) ➞ [0, 0]\\n// If there are no instructions, the robot doesn't move.\\n\\ntrackRobot([\\\"right 100\\\", \\\"right 100\\\", \\\"up 500\\\", \\\"up 10000\\\"]) ➞ [200, 10500]\\n```\\n\\n### Notes\\n- The only instructions given will be `left`, `right`, `up` or `down`.\\n- The distance after the instruction is always a positive whole number.\",\"lab\":\"Test.assertSimilar(trackRobot([\\\"right 10\\\", \\\"up 50\\\", \\\"left 30\\\", \\\"down 10\\\"]),[-20,40])\\nTest.assertSimilar(trackRobot([]),[0,0])\\nTest.assertSimilar(trackRobot([\\\"left 10\\\", \\\"left 100\\\", \\\"left 1000\\\", \\\"left 10000\\\"]),[-11110,0])\\nTest.assertSimilar(trackRobot([\\\"right 100\\\", \\\"right 100\\\", \\\"up 500\\\", \\\"up 10000\\\"]),[200,10500])\\nTest.assertSimilar(trackRobot([\\\"left 10\\\", \\\"right 10\\\", \\\"down 10\\\", \\\"up 10\\\"]),[ 0, 0 ])\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[3,3,3,3,3,2,2,2,2,3,2,2,1,4,2,4,2,4,3,3,3,2,0,3,3,3,0,3,3,2,3,2,3,2,2,2,2,2,2,3,3,2,4,1,2,2,3,1,3,3,4,2,2,3,1,1,1,2,4,1,3,2,3,3,2,0,2,2,2,1,3,3,3,2,1,1,3,3,3,3,3,2,2,3,2,2,2,2,2,2,2,2,3,1,2,3,1,2,2,3,2,0,3,3,3,3,3,2,1,1,3,2,3,2,3,2,1,1,3,2,3,2,3],\"rators\":[\"rTRvHndHZKKRkb9w5\",\"n5wubRfh6zh8QRymN\",\"65dbBZynphj53nXqA\",\"SDtZFL5NzAoCPofXk\",\"CwBBXa8awfz8ePtwe\",\"fmLzKJTPWvtGRAaAN\",\"g5noFWaoRtZNcEEAW\",\"AZbpHy2Hsy2GRWtoE\",\"KAwnrRNbgiZ2uAr8v\",\"kPAFEvjhF3wE7D27C\",\"8xuMMGF7fyQWL2fKH\",\"4fWjvhaWSB89EtbEZ\",\"6AkHZRsnysi2k9izF\",\"T2iNiHxRWvdzWAuJx\",\"Jj7Zjg3o3zSj9TacE\",\"Akq3fQcPRgPrWfsye\",\"ydEdzuCCZt4yny9Rq\",\"gKAD5GKYixiC2GBRW\",\"EjPLq3QSJdGQFJdgW\",\"GCxj7RJCeWYNxj8oQ\",\"mypZqNxmLHHdAe7bv\",\"eD3AXdL4FnGtfMjEM\",\"AAPT3Qv5646poDrEi\",\"CK7Bj9mG8ms68CPit\",\"9pqkT3T8Dho3uNYRo\",\"EfgF4urqKM8qGeZfQ\",\"4itF2fjGR9Swc48Zp\",\"wcjknenWdPRhrRScv\",\"BCAern4EKkoTuR9nb\",\"XSowcGMedgyp37Hts\",\"FJsvM5yqKuK9yMk9P\",\"B4msz4Pzjzs2C4jsy\",\"zH4TTJLZK8SYk5vyu\",\"4uPCFC6LBJYZ74uYu\",\"xGRd5EMXHix8DhDss\",\"5itTt9b8C3dP6iPYL\",\"bNFi9NhvF22bsNJx3\",\"538PKNyqMiCwLWYWK\",\"9ESrAneEJgbpuad8v\",\"qBSZpxyQGJE8GxwHg\",\"w6mAzMhiiWXsgW2Gi\",\"MAYWFNKxwJCTFrbB2\",\"hTGFW3DLQFKsGcLqF\",\"hKfSmTEotbEjgPbux\",\"rm57DviqeYnRX6d2p\",\"jXW2axnuyzmjEazDq\",\"24ukaQfhyc8ERqnyK\",\"SF5NBvK7GY5Y7wpN9\",\"n79d9vBvnfFYWGnki\",\"JPcvG7z3cqtrkeqYf\",\"6AwLfvHXfGiQKSoPm\",\"gz5CPyj2LHQtcZZAD\",\"yjtdwc2AC4jA2RWtn\",\"eomLS3wh6tQPN8jtH\",\"a2nfAdSGKsHrYTJK4\",\"EWn8w8P3nNh7knatY\",\"5Zq3aGdvh4LHBvnJL\",\"AasGs8AeX9Lcb9xJn\",\"LgvG2ARZaHdpdNdXE\",\"YQxo25GTwFZ8GaN6u\",\"9R9TjkN6eyP5vZgrt\",\"KHRt2jF89QdgbBSR9\",\"2innwjWqxJHo4eRGh\",\"Wmq8QjysTQYskk4m7\",\"dPM2Rk2iMkznyXNEt\",\"6BpBQnSGhzgvhXrEy\",\"vtHbevf2tHqe6mRxX\",\"mHaHudYExvi45DSRf\",\"SNt23Ei5dSNtfpEMd\",\"fKib7vNdSgMtra6km\",\"S5NRjCLrvafrrovcz\",\"Es4eX2stRpyoXeC7f\",\"pi76g3eRpnKrhee2a\",\"5N7D5xTbkRZAZSXfD\",\"jYXFFTnuWFNo72Rc5\",\"PytNZK9mNiRiZxPrm\",\"kKEdtoo4zb5jCgYno\",\"xGdt5ACzzRwMnZhWR\",\"8raviPK67KKxzQWcF\",\"qvNk7pHSveLu3jqWw\",\"aEm3Wvj2rFYRL8Lrb\",\"7ThZXvg8KWhMRjL5B\",\"bpGKThzHemN5AxMui\",\"ZDM2FDxBZ5EE4RRSK\",\"9mzEgBJim52w6d2u8\",\"QRv96jmNaYsWkxQEG\",\"xxaPHiRCDshzfEsp7\",\"Ao6KsMHFS3ecfcNjN\",\"Sm955HCbs4tSPQeJW\",\"pGh7WykiPe26fHJYv\",\"SYEuojZtP6yLXryHv\",\"c7uBxu2rgY77H5d79\",\"T5CsPjZfuayQQRcTq\",\"ZhusfKHYdLHnNGPh3\",\"CNc6rmwhbxkxEhHAp\",\"QYNjAji97bn9BBi6p\",\"kLzg3YXMNZB5N7Pss\",\"mHT2bJb5SByfJ8yKS\",\"2DRGDspdFT7ed6Q9H\",\"c4FsZDmbSzi7KZW43\",\"qvcfrvBvrbY4g4N7T\",\"v5Fia7ctFNJCwM75m\",\"qWR7eXxBiNee22A5u\",\"mxdbPp2YB8JntMLin\",\"Wa4yAkLcGpQE52jAx\",\"K545XodfKrANAm4Gx\",\"3KfDpWtKBSYTutpyA\",\"AFfw7cGg83uYk2Miy\",\"48SrDXQFPkxu5kRHy\",\"HrYJKoEpCLhkSTM5c\",\"gdmHF3PY3fhSCQveG\",\"ASW2h2EFu6u8Ar8bg\",\"ZcJm2kuqJnN3CXFaR\",\"DPi9QGLctq2y76KuE\",\"5nhmyqLy8M2Yn2HMR\",\"pdsiGN5LX8wu9R9sD\",\"inmjjfsii2M4CMf34\",\"n8jQsjAH4wyPLAPsK\",\"Yp7uvStL97cC9fKkY\",\"oDtGiNqDMHmhHE3J8\",\"RE4Mm9T6Q9uygAxGS\",\"BjSqsyw7qmy89xaKX\",\"DfdkfQh8ctd2BaaRY\",\"Z4aDEgX4dv9Cm4P8C\",\"RXPe6PZnbuh7Q6vG2\",\"gSrqu8MsZMFSxxWAZ\",\"X2qPMHbxS79hMfBf8\",\"EJWSLA8SSC4vxwdGS\",\"DRjizBEb8gyEKNqxW\",\"Ya3eHgs8x3unZRLpb\",\"WjM7eJd2wiyNPHftP\",\"buX4mCQhtXCfBjeno\"],\"total\":137,\"quality\":[5,5,4,5,5,5,5,5,5,5,5,5,5,5]},\"flags\":0},\"subscribers\":[\"rTRvHndHZKKRkb9w5\"],\"summary\":\"A robot has been given a list of movement instructions. Each instruction is either left, right, up or down, followed by a distance to move. The robot starts at [0, 0]. You want to calculate where the robot will end up and return its final position as an array.\\n\\nTo illustrate, if the robot is given the following instructions:\\n\\n[\\\"right 10\\\", \\\"up 50\\\", \\\"left 30\\\", \\\"\",\"tags\":[\"loops\",\"strings\",\"arrays\"],\"timestamp\":{\"$date\":1561280437269},\"title\":\"Track the Robot (Part 1)\",\"isHidden\":false,\"quality\":4.928571428571429,\"family\":[{\"_id\":\"KCSf2rinjRRyWCqpT\",\"language\":\"cpp\"},{\"_id\":\"g88PKZrCY6sWPBva7\",\"language\":\"csharp\"},{\"_id\":\"t3iJRARc9K9x9AAdr\",\"language\":\"javascript\"},{\"_id\":\"bupEio82q8NMnovZx\",\"language\":\"python3\"},{\"_id\":\"jfPTLHayEMmqqdiRZ\",\"language\":\"ruby\"},{\"_id\":\"Lozu46T7KdDzMY4py\",\"language\":\"swift\"}]}}"]