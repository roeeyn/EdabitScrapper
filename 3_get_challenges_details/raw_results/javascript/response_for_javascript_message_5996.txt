a["{\"msg\":\"result\",\"id\":\"1746\",\"result\":{\"_id\":\"eiwM33xiRvWwpRZua\",\"author\":\"benmcl@shaw.ca\",\"authorId\":\"SYEuojZtP6yLXryHv\",\"code\":\"function windowMaxes(array, windowLength) {\\n\\t\\n}\",\"difficulty\":2.3763440860215055,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"iaB2JyXjBEjptaMCK\",\"instructions\":\"The sliding window is a technique used to simplify complex data problems. A window that slides over the data to examine different sections of it.\\n\\nYour challenge is to create a sliding window that traverses the array and returns the maximum value in each window.\\n\\n### Arguments\\n\\n- `Array`:The array over which you are traversing.\\n- `windowLength`: The length of the window you will be using to do the search.\\n- Returns `Array`: A new array containing the maximums for each window.\\n- You are given this array and a window length of 2.\\n\\n```\\n[4, 5, 6, 7, 8, 9]\\n```\\n\\nOur function would start by examining the first two elements of the array and pushes the max value to a new array.\\n\\n```\\n[**4, 5,** 6, 7, 8, 9]\\n```\\n\\n... then the window slides to examine the next two, in this case 5 and 6, and pushes the max value to the  array.\\n\\n```\\n[4, **5, 6**, 7, 8, 9]\\n```\\n\\nThe window will examine the entire length of the array until the maximums for each window have been added to the new array.\\n\\n### Examples\\n```\\nwindowMaxes([1, 2, 3, 4, 3, 2, 1, 2, 5], 3) âžž [3, 4, 4, 4, 3, 2, 5]\\n```\\n\\n### Notes\\n- This is part of my Data Structures series. A collection of common coding interview challenges used to test ones understanding of data structures.\\n- This entire series of challenges can be found [here](https://edabit.com/collection/hqZyMk9NnHGJBnpTB).\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertSimilar(windowMaxes([4, 5, 6, 7, 8, 9], 2), [5, 6, 7, 8, 9])\\nTest.assertSimilar(windowMaxes([1, 2, 3, 4, 3, 2, 1, 2, 5], 4), [4, 4, 4, 4, 3, 5])\\nTest.assertSimilar(windowMaxes([1, 2, 3, 4, 3, 2, 1, 2, 5], 3), [3, 4, 4, 4, 3, 2, 5])\\nTest.assertSimilar(windowMaxes([1, 2, 3, 4, 3, 2, 1, 2, 5], 5), [4, 4, 4, 4, 5])\\nTest.assertSimilar(windowMaxes([1, 4, -2, -9, 5, 32, -89, 23, 43, 2, 75, 3, 12, -3], 6), [\\n  32,\\n  32,\\n  32,\\n  43,\\n  43,\\n  75,\\n  75,\\n  75,\\n  75,\\n])\",\"language\":\"javascript\",\"quality\":4.357142857142857,\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,3,2,5,3,3,3,2,1,4,5,0,2,5,2,3,2,2,3,2,3,2,2,3,2,0,2,2,3,4,3,3,2,3,3,2,3,1,3,3,3,2,4,3,4,3,0,0,2,4,4,3,3,3,3,2,2,3,0,3,0,4,3,0,2,2,4,2,2,3,3,2,1,4,1,4,0,1,0,2,2,0,2,1,3,3,3,3],\"quality\":[5,5,3,5,5,5,3,1,4,5,5,5,5,5],\"rators\":[\"SYEuojZtP6yLXryHv\",\"FJsvM5yqKuK9yMk9P\",\"mDWNyaaQ9hvPCRzSd\",\"8BJyXvRWcrvN3nttS\",\"2Asob8QsSfXRkvkDq\",\"pWJWQDhqzDSmfaFam\",\"s678Wirfor5uYL5T6\",\"8SYDBRtkZuW3pdPtG\",\"Z4XkWiG77JWxrf5JN\",\"LgoWkSRrCsJbbTTNv\",\"ftXLsTaA7yHmhuEsY\",\"yjtdwc2AC4jA2RWtn\",\"q6FvdZgfJeAWe3GS2\",\"wKPzgoYJTQMwSBSKo\",\"3KfDpWtKBSYTutpyA\",\"AQSqD9oNv2uPfxZCR\",\"bX6tpTCjwoi6XMMbK\",\"Po3v3dHCk6wYGKMwi\",\"Ryrcp76vts2YwHLpu\",\"ceMycDhXzsRojnr9F\",\"QRv96jmNaYsWkxQEG\",\"zMCXYFZSsviDCvjnY\",\"qn4kFmuJu8etFWYAW\",\"6HaGodJHjbzSyEbXb\",\"nMqBcLbccmcSwJqxF\",\"Xk2g4CNFAnYcvxiSr\",\"h4jFmtbFn92eA4649\",\"sLWHghjrTMkm3gW6y\",\"X2iF2XG6549jP4ZXw\",\"prcatzbaAnfCypgAA\",\"szQg8dxKNNre3v3Jk\",\"aJ4sqs3HKr2rixLnh\",\"jWzreocwH5SBzzGdx\",\"An7vdxqr8eqhRJcwR\",\"EEryYtD8prhzMLmxc\",\"cRpaCxYRmGcN3Nsoj\",\"hCfruGWxw7v64teEr\",\"MTEHq9pzshY8QGLvw\",\"649LDDhSKfmkPANRM\",\"SDDNW5yQqJWRcfmSD\",\"p3Texjm254K6N76qS\",\"LxWZF2JRXihPqYsxd\",\"JW5J6sdJHAmDmfWnE\",\"nWND4LmgZTftyB8sN\",\"gxN8e6EXyAJEy4pik\",\"3C87RqwJYTp8xYpyf\",\"yN3JmXhDHn2arWtr4\",\"B9pT6A6rgTxoPZDKA\",\"XAtaxh33rrQHqR5SN\",\"DqDj7bf9x9wSGiK5g\",\"oFEG3RDs5J99JYtkZ\",\"D6N4mi6JM3AAA2wvp\",\"RxPZwEqL73Hz5iACx\",\"2Qk2mFu9HBFzrB24i\",\"y2cf8jaBdN5nBdXpa\",\"hTq8sHgweqHnvYhNJ\",\"TtrXnGzi9MyhLvWiz\",\"NGvCPuMiAP3xrRLfB\",\"YMYtNJvfTkuGnNwpX\",\"KcpfY4XZ7fNamyLd3\",\"M4vq8ATaS9Jg5X7iP\",\"DJYEXTBnfjabx689z\",\"RKKuw76K7sRBMouKq\",\"sLo87aty5pdxXYK5C\",\"WZuPnpkFuH2vaXuNJ\",\"MStXpGQuBzCAxghR9\",\"6MkpGWpyQ4YaeZs4h\",\"AzzzwpNTQgGrMyatx\",\"8N26wsWvF3h8pxoWR\",\"gXN4xHpJQhbmgYaLF\",\"ucbpgmh2LprzFMsj8\",\"gLWTytSk2ZQoWEZEB\",\"PH32cNxBjrK4a28sn\",\"cusJ9Cz5m7K8mDiNr\",\"sEpvMmcCnMD5iH8je\",\"2sQYtk3ZW9rF3yJR4\",\"WkwyweyPmRCTmx8ms\",\"jWXdurfxtiaCq64sz\",\"wxCLpx3MJTRQCaApM\",\"ucaDnFgvkB5hp5srb\",\"ECwtCNGdsxdeoSuYP\",\"BpiAkZfs6sXRMdArb\",\"pd8dm7sWLW9cY6dYW\",\"rWXvYsdCzQZqJWNeS\",\"dHEAn6hcwJqQjabEv\",\"xsDyJstYoBZRS8pJH\",\"9gEWz76H8KmhN4yJj\",\"PPFmWzDiefzfekdcg\",\"nkH3HfJXLMNcBMM79\",\"wo4cpen33NYFHNca7\",\"vSPc7MGK5Poy8tSFp\",\"LcSKLPteyzXoHzvfH\",\"jnRyhmiJeWHsqQYPh\",\"oH7uJsBnZv9b2mHMS\",\"dg6Kb9p7fCSnb3bdD\",\"6YBXhNtZcnpgEchmX\",\"ax6vpPEaXjhRqqpHf\",\"XwdBzGAR6kY7Tvb9Z\",\"AMpQSjKsRqhCDyS2j\",\"CBRx8seBYyYKqvMi3\",\"d8JhF9zfpexkRnCea\",\"oDtGiNqDMHmhHE3J8\"],\"total\":108},\"flags\":0},\"summary\":\"The sliding window is a technique used to simplify complex data problems. A window that slides over the data to examine different sections of it.\\n\\nYour challenge is to create a sliding window that traverses the array and returns the maximum value in each window.\\n\\nArguments\\n\\nArray:The array over which you are traversing.\\nwindowLength: The length of the window y\",\"tags\":[\"arrays\",\"data_structures\",\"interview\"],\"timestamp\":{\"$date\":1615301844104},\"title\":\"Data Structures (1): Find Max of Sliding Window\",\"family\":[{\"_id\":\"eiwM33xiRvWwpRZua\",\"language\":\"javascript\"}]}}"]