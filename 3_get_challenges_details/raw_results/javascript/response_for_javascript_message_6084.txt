a["{\"msg\":\"result\",\"id\":\"1789\",\"result\":{\"_id\":\"278bzxEFeTKNiKXfM\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"function isSet(cards) {\\n\\t\\n}\",\"difficulty\":2.586387434554974,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"ua77xcyWdq2zrqjnG\",\"instructions\":\"In the game **Set**, **three cards form a set** if each of the cards are identical or completely different for each of the **four properties**. All three cards must:\\n\\n1. Have the **same color**  or **different colors**.\\n2. Have the **same number** or **different numbers**.\\n3. Have the **same shades** or **different shades**.\\n4. Have the **same shape** or **different shapes**.\\n\\nThe four properties are:\\n\\n1. Colors: red, purple, green\\n2. Numbers: 1, 2, 3\\n3. Shades: empty, lined, full\\n4. Shapes: squiggle, oval, diamond\\n\\nHere, a set is represented by an array containing three cards. Each card is represented by an object of properties and values. Write a function that determines whether three cards constitute a valid set.\\n\\nHere is an example of a **set**:\\n\\n```\\n[\\n  { color: \\\"red\\\", number: 1, shade: \\\"empty\\\", shape: \\\"squiggle\\\" },\\n  { color: \\\"red\\\", number: 2, shade: \\\"lined\\\", shape: \\\"diamond\\\" },\\n  { color: \\\"red\\\", number: 3, shade: \\\"full\\\", shape: \\\"oval\\\" }\\n]\\n\\n// \\\"Same\\\" properties: color\\n// \\\"Different\\\" properties: numbers, shading and shapes\\n```\\n\\nThe following is  **not a set**:\\n\\n```\\n[\\n  { color: \\\"red\\\", number: 1, shade: \\\"empty\\\", shape: \\\"squiggle\\\" },\\n  { color: \\\"red\\\", number: 2, shade: \\\"lined\\\", shape: \\\"diamond\\\" },\\n  { color: \\\"purple\\\", number: 3, shade: \\\"full\\\", shape: \\\"oval\\\" }\\n]\\n\\n// Colors are not all identical, but not all different.\\n```\\n\\n### Examples\\n```\\nisSet([\\n  { color: \\\"green\\\", number: 1, shade: \\\"empty\\\", shape: \\\"squiggle\\\" },\\n  { color: \\\"green\\\", number: 2, shade: \\\"empty\\\", shape: \\\"diamond\\\" },\\n  { color: \\\"green\\\", number: 3, shade: \\\"empty\\\", shape: \\\"oval\\\" }\\n]) ➞ true\\n\\nisSet([\\n  { color: \\\"purple\\\", number: 1, shade: \\\"full\\\", shape: \\\"oval\\\" },\\n  { color: \\\"green\\\", number: 1, shade: \\\"full\\\", shape: \\\"oval\\\" },\\n  { color: \\\"red\\\", number: 1, shade: \\\"full\\\", shape: \\\"oval\\\" }\\n]) ➞ true\\n\\nisSet([\\n  { color: \\\"purple\\\", number: 3, shade: \\\"full\\\", shape: \\\"oval\\\" },\\n  { color: \\\"green\\\", number: 1, shade: \\\"full\\\", shape: \\\"oval\\\" },\\n  { color: \\\"red\\\", number: 3, shade: \\\"full\\\", shape: \\\"oval\\\" }\\n]) ➞ false\\n```\\n\\n### Notes\\n- A set cannot have 2/3 cards having the same property. Either all must share that property, or none will share that particular property.\\n- You can play Set by checking the **Resources** tab.\",\"lab\":\"Test.assertEquals(isSet(\\n[{color: \\\"red\\\", number: 1, shade: \\\"lined\\\", shape: \\\"squiggle\\\"}, \\n{color: \\\"red\\\", number: 1, shade: \\\"lined\\\", shape: \\\"diamond\\\"}, \\n{color: \\\"red\\\", number: 1, shade: \\\"lined\\\", shape: \\\"squiggle\\\"}]\\n), false)\\n\\nTest.assertEquals(isSet(\\n[{color: \\\"red\\\", number: 1, shade: \\\"lined\\\", shape: \\\"squiggle\\\"}, \\n{color: \\\"red\\\", number: 1, shade: \\\"lined\\\", shape: \\\"diamond\\\"}, \\n{color: \\\"red\\\", number: 1, shade: \\\"lined\\\", shape: \\\"oval\\\"}]\\n), true)\\n\\nTest.assertEquals(isSet(\\n[{color: \\\"red\\\", number: 1, shade: \\\"empty\\\", shape: \\\"squiggle\\\"}, \\n{color: \\\"red\\\", number: 1, shade: \\\"lined\\\", shape: \\\"diamond\\\"}, \\n{color: \\\"red\\\", number: 1, shade: \\\"lined\\\", shape: \\\"oval\\\"}]\\n), false)\\n\\nTest.assertEquals(isSet(\\n[{color: \\\"red\\\", number: 1, shade: \\\"empty\\\", shape: \\\"squiggle\\\"}, \\n{color: \\\"red\\\", number: 2, shade: \\\"lined\\\", shape: \\\"diamond\\\"}, \\n{color: \\\"red\\\", number: 3, shade: \\\"full\\\", shape: \\\"oval\\\"}]\\n), true)\\n\\nTest.assertEquals(isSet(\\n[{color: \\\"green\\\", number: 1, shade: \\\"empty\\\", shape: \\\"squiggle\\\"}, \\n{color: \\\"green\\\", number: 2, shade: \\\"empty\\\", shape: \\\"diamond\\\"}, \\n{color: \\\"green\\\", number: 3, shade: \\\"empty\\\", shape: \\\"oval\\\"}]\\n), true)\\n\\nTest.assertEquals(isSet(\\n[{color: \\\"purple\\\", number: 1, shade: \\\"full\\\", shape: \\\"oval\\\"}, \\n{color: \\\"green\\\", number: 1, shade: \\\"full\\\", shape: \\\"oval\\\"}, \\n{color: \\\"red\\\", number: 1, shade: \\\"full\\\", shape: \\\"oval\\\"}]\\n), true)\\n\\nTest.assertEquals(isSet(\\n[{color: \\\"purple\\\", number: 3, shade: \\\"full\\\", shape: \\\"oval\\\"}, \\n{color: \\\"green\\\", number: 1, shade: \\\"full\\\", shape: \\\"oval\\\"}, \\n{color: \\\"red\\\", number: 3, shade: \\\"full\\\", shape: \\\"oval\\\"}]\\n), false)\\n\\nTest.assertEquals(isSet(\\n[{color: \\\"red\\\", number: 1, shade: \\\"empty\\\", shape: \\\"squiggle\\\"}, \\n{color: \\\"red\\\", number: 2, shade: \\\"lined\\\", shape: \\\"diamond\\\"}, \\n{color: \\\"purple\\\", number: 3, shade: \\\"full\\\", shape: \\\"oval\\\"}]\\n), false)\",\"language\":\"javascript\",\"summary\":\"In the game Set, three cards form a set if each of the cards are identical or completely different for each of the four properties. All three cards must:\\n\\nHave the same color  or different colors.\\nHave the same number or different numbers.\\nHave the same shades or different shades.\\nHave the same shape or different shapes.\\n\\nThe four properties are:\\n\\nColors: red,\",\"tags\":[\"objects\",\"games\",\"validation\"],\"timestamp\":{\"$date\":1554420961636},\"title\":\"Validating a Set in the Set Game\",\"stats\":{\"completed\":{\"total\":261,\"ratings\":[2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,2,3,2,3,3,1,3,3,2,2,3,3,0,3,3,3,3,3,3,2,3,1,2,4,3,2,4,2,4,4,0,1,1,3,4,2,1,2,3,3,1,3,1,3,3,4,2,2,1,1,4,2,3,3,1,3,2,4,4,2,4,3,2,2,1,3,2,2,2,4,4,2,3,3,3,2,1,1,3,3,1,2,3,4,2,0,1,4,4,4,2,3,5,4,2,2,2,2,4,3,3,2,2,4,3,3,2,3,4,3,2,4,2,3,2,4,4,4,2,2,2,3,2,2,4,3,4,2,1,3,3,3,3,2,4,3,2,2,5,3,2,0,2,4,2,3,3,3,3,2,1,4,4,2,2,2,3,4,2,2,3,2,4,2,3,3,3,3,2,1,4,2,4],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"65dbBZynphj53nXqA\",\"wcjknenWdPRhrRScv\",\"SYEuojZtP6yLXryHv\",\"5ZurySobJANjw3wfq\",\"NYMbGbY57sRdhWSmf\",\"n5wubRfh6zh8QRymN\",\"CJnuSjyCBMTbTiibD\",\"h8oHrjSdw2iwKYWpk\",\"yjtdwc2AC4jA2RWtn\",\"EWn8w8P3nNh7knatY\",\"5Zq3aGdvh4LHBvnJL\",\"eQdnBfe8riy82SNrK\",\"AasGs8AeX9Lcb9xJn\",\"Nc23QyxhdeFRwzj5W\",\"6BpBQnSGhzgvhXrEy\",\"whpoSefTqr2xMZ64r\",\"7Nz3GAqN3SMgSiyTT\",\"pi76g3eRpnKrhee2a\",\"a777e8chPvJkY3tKa\",\"MEZNjeGd7APtvA3SL\",\"7dZm8yZnenQb7xEwn\",\"M4vq8ATaS9Jg5X7iP\",\"edbW9JYuoYwfrFn35\",\"uigAJ9KT5muMWTDis\",\"z8R4K9Cd7PNuh256A\",\"NchnDcEmsLTeFZ4FH\",\"CMPqZzRxXA7RrXGzt\",\"cCrirxZEzgAwQt2T9\",\"4xdSc245S8vAvgDK9\",\"xFxiPMktEDaX5BYZu\",\"aEm3Wvj2rFYRL8Lrb\",\"FJsvM5yqKuK9yMk9P\",\"optMrhrGCt3K8Fmuv\",\"8s5Bdrn7RTga7DL6x\",\"rfyYC78YGZWcBoio4\",\"mHT2bJb5SByfJ8yKS\",\"2sLmHo7G2irSyrDB7\",\"eFjGhq7C7bBKXjT6X\",\"h4jFmtbFn92eA4649\",\"nBo2LLuSMeEgd5f6G\",\"aFMst9xdc5NbYP8E9\",\"vSFGnErEsTyfE68Tp\",\"Xk2g4CNFAnYcvxiSr\",\"vic9SZ9qqj9WhRkbd\",\"yuLxi2qBJvMnwgdgJ\",\"ttTKCjpv3zhL6utfR\",\"sBcsrC5paZm9nxjot\",\"eFDqwp8hu5hq6g4YX\",\"hcm8sL8mNJTSfTdgE\",\"xTtXsWfKh8S5kEP2y\",\"Z4WGaZYyD5Z686hYi\",\"bRGGFe9s3LjxCfrbm\",\"fWTiyEksJdrQpLCpX\",\"YtGYxpMxbrHLFK8nq\",\"oS5frh658sYhfZMWn\",\"N82kEBvpFE5FjbHrk\",\"6od72aS2wCe73TvhQ\",\"aidPcPAieHHHz7JxA\",\"4deyTem4Z3zgPLEv7\",\"rC7kdm3SsSX9udEQk\",\"qvNk7pHSveLu3jqWw\",\"SXAKKFagansJbFgWm\",\"FiK2ruyH8KeHLAgoA\",\"kp2ZbCewZJAbfd7xv\",\"oH7uJsBnZv9b2mHMS\",\"jkumHyXfMkhGcPgqC\",\"mSMaB9sbBjgraMHDz\",\"6KbyCXY4Y8sXxxcBH\",\"8Z3dkvWBqtrMEE48N\",\"YLuJ7h27mr2GMcMt6\",\"ZTTJprKDvFqKGew7c\",\"sbMjYS9A5rZBhm6pu\",\"a88kYE9Ht3zrfYuGW\",\"XQd2pcCB7kvivL5f8\",\"oc37GtYSwix4ssfdi\",\"WbXHZDxj5femhG7x2\",\"inmjjfsii2M4CMf34\",\"DWDRyWp4f2ph7FtxA\",\"ffB8T76Ye9ygL6QZZ\",\"DvTY74sRDnpGXqJEc\",\"GCsLzWAhLvniQqR3J\",\"HDbAqFKwbcLD2y5NY\",\"4Xv87xmdSnpYhi8hz\",\"3ZrE3Kk55XXMqaZsG\",\"xmMqX6Dkh7yxb7ycH\",\"C2358oeL2M6ymBgF7\",\"q3QHJiARmfpjj62LW\",\"mDWNyaaQ9hvPCRzSd\",\"4RsakkyRXyYGwFxEa\",\"3aroChjT7AqhgDPNY\",\"LTxPfYyzLtPRZhFvR\",\"cdhPK577w4RS4gGHt\",\"q2u8Fbn2uTuxB8uRj\",\"PH32cNxBjrK4a28sn\",\"S8yDNfPWeuRiJir4y\",\"6xopK8FP5o94NXCz4\",\"6Wib7DwCQJDQFDvTQ\",\"buX4mCQhtXCfBjeno\",\"ctPpRodoK7DpvfZiy\",\"5nHtgdY8F2FbAMawq\",\"esTrtxAZowhwM7AnM\",\"XcgeFavjBhRjRmCyP\",\"HJDj7Kh7T62kKHrN4\",\"7ThZXvg8KWhMRjL5B\",\"KS6BTSQJKEiAvqbv6\",\"5R44BNkysEmF647ag\",\"ct42f2gGpMXSd9hXM\",\"NKXFEMRiCXbdj26qD\",\"nhaNGZ2YE4nq7mgwD\",\"iCr5TEH8Xm3qRBnXW\",\"HwC3nGwspdhuahXFK\",\"pGh7WykiPe26fHJYv\",\"dGugwhA6uwwjPGAa5\",\"ZcJm2kuqJnN3CXFaR\",\"KcpfY4XZ7fNamyLd3\",\"8s7EByT9ahbL6geNM\",\"o6F73sgsmKJCRHnft\",\"RKKuw76K7sRBMouKq\",\"rrgSzvujo36ziGKoa\",\"JjDGKbHmN44DgSM49\",\"hf4j58METWajduNSE\",\"ianCvz6YBijh9Zfby\",\"ZK27NLATkNBvFzmgM\",\"YtuEYsCMYJa8CcTyN\",\"NczXsSrYNX6nDWhjF\",\"sGyu3gQgXvkoFwy2B\",\"iiq6w4zb3XhRFHkng\",\"ybKXno4BJHrTbteGd\",\"Z4XkWiG77JWxrf5JN\",\"daYbZKNBukKcJaSHH\",\"WdgtZfWFz7WfwveXR\",\"Df6D5WEasHwoPYDwq\",\"8B8KQN2rvwFWK2mKQ\",\"75kQmLbeRLpcoCT6n\",\"QpBEndbkq6opq4DBN\",\"eKw823GrQNFXHrHX8\",\"tAF9Gf6PiGogbZuWs\",\"ZAzjvaLgCkcZ3TA3H\",\"Sm955HCbs4tSPQeJW\",\"EBTrwJbNx8XkRnmNc\",\"bXaGdBM8FBLHf7N6Y\",\"E6DBfkTgHuPsDWdG8\",\"bhgqAtzmz4zqwPJrR\",\"BTdKRxKHXHDDD4934\",\"va3fDAQm4sqSMoy3R\",\"m3drH99sqB3PmNEY5\",\"YLTZRjM78Wi9J9Re4\",\"NtecG2ZaXDiLf2KLN\",\"wJTDDTE3TrmSXKP4d\",\"iWFnMqigTGtP4HMan\",\"EvZNWt298uaD34BTv\",\"EjYWHaWnYBaKn2xpi\",\"GGcSGkJYYKiuLfGGM\",\"nmCGPMRuHbH99aEip\",\"GYMEhSPLhq8DCzEXX\",\"N9zXvoaK7PndADZB5\",\"J4aukeJiWT743xyNd\",\"m86y4gi8hMzGz8js7\",\"vGKxRcDYDsXzTQuEQ\",\"im5uLtBgzDJAFQKyg\",\"ScDZaeW8T6bbrr6BR\",\"9dAB9yF2rukm22EnA\",\"q9XBipyQxe27zWiwg\",\"YEjnBpgNjDLhnf4H7\",\"KG5kJoP68PaZCASxF\",\"4XxJxQkB5mNTLY2qk\",\"5NGxHLcQ8Af2RJ4TN\",\"NoXodHiiDfKq8r4kD\",\"kLzg3YXMNZB5N7Pss\",\"Po3v3dHCk6wYGKMwi\",\"oyPQ39i4BiFdj3M2E\",\"bX6tpTCjwoi6XMMbK\",\"NjEXproRxby9ZY8c9\",\"asvCC5EvWZuLfarNi\",\"sf5QEdW3YQAnE4f6d\",\"o4GtQNrHsukSgzcmQ\",\"LtTpCzF8kt6Rdth4X\",\"XJkE6ePg9ooq6KQLW\",\"gt72ofBStqvphGX6j\",\"vAecLQ2dufgyraj5u\",\"tPeEhpSeye8WeoesH\",\"h66ASG9Y5xbMrzdjY\",\"kSxSz3ZxdQuPYTxWD\",\"FciF5cPyYvAE6unqR\",\"iAqxpATGWTeagQHxb\",\"MT26yxj3YX95DsyLj\",\"scNtzWjSDJ3h9JydB\",\"JsRTAwWK7Nikj4sKA\",\"Sq5KCbpYjTH8bSRwg\",\"bn5zEoeBmrqGPRQe8\",\"rwtyaL4ZnkgFSf2ze\",\"CNc6rmwhbxkxEhHAp\",\"AwnxFXyfhjqC6PxrJ\",\"RtuprdoyGeuMip2PC\",\"jv6ShXpbq5iapFgZw\",\"GsrjAqoAdLATJH9qD\",\"ihk7t9D9EtM4DvCkn\",\"vewKwcMeGuk3p3MsN\",\"mYzC7tCwKLbMJELsa\",\"E2oamFfN6xb8qjkqo\",\"49hGfiPesC8q6FjNS\",\"tS2creh6gfkmGoNm7\",\"QjGNkRM3Xc78yShJN\",\"K545XodfKrANAm4Gx\",\"DSC4gEAyyw4EdDrGM\",\"QvEXmSEo3ANp3yPyH\",\"8BJyXvRWcrvN3nttS\",\"pWJWQDhqzDSmfaFam\",\"c9CuqxE5uzjWiqNf2\",\"oyB4Wr4EeZnoDaa8B\",\"rSJGLYSXMuu3RWjun\",\"byD8mXhz2DkjokoXj\",\"AZ5usHFYA8sRrQvmM\",\"7csRLd5Sx3Ew8bbFz\",\"5EzgSJ996d5ToXKP6\",\"ceMycDhXzsRojnr9F\",\"rkdT25o848QStziKM\",\"rpnhMdtcR9LHHbQSd\",\"oz65c2Z6NgaJByK4j\",\"An7vdxqr8eqhRJcwR\",\"gxN8e6EXyAJEy4pik\",\"bpQXbbvuKetnAYKXx\",\"wR8gHDv7qnLtikX9M\",\"Wm3w65yqS3xoqaron\",\"sfj3i3eEAfZa3f9kg\",\"NGvCPuMiAP3xrRLfB\",\"wo4cpen33NYFHNca7\",\"gXN4xHpJQhbmgYaLF\",\"a9EEc3EZ8TGgYRdjA\",\"9gEWz76H8KmhN4yJj\",\"ShrXg4RHgnyFjzJ8w\",\"DDcnJucTJfub4vG9W\",\"nkH3HfJXLMNcBMM79\",\"pBckdRF9mtFAfgBGS\",\"pd8dm7sWLW9cY6dYW\",\"DPi9QGLctq2y76KuE\",\"zACQzkEpgkohp7Psw\",\"WnogMFYXoyvmBmGkm\",\"QiqcdQfduXjgGu57R\",\"6wrcwkYQDCTnNMbq8\",\"xsDyJstYoBZRS8pJH\",\"PTo9qt93YqGvL8fCa\",\"b6EHvmJouxnnpAmy9\",\"P8bXFR4cHwFia9rNM\",\"W3iKFwcuYkEf52psm\",\"RbBEqArJC6CJ3SqkL\",\"hL8y3oooXeL2Sii4o\",\"LwD3CyYSiBfg3mA4r\",\"GnscAvB3cswLvRQ6Y\",\"oDtGiNqDMHmhHE3J8\",\"ZKuwzkssrSsDGNPr5\",\"fXu4esv6nY4e2mcfx\"],\"quality\":[5,4,5,5,3,5,5,5,5,4,4,5,5,4,5,5,5,4,4,5,5,3,4,2,5,4,5,4,5,5,5,5,4,5,5,4,5,3,5,5,5,5,4,5,5,4,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,4,4,5,4,5,4,4,4,3,5]},\"tests\":{\"score\":0,\"voters\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"voters\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"isHidden\":false,\"quality\":4.563380281690141,\"family\":[{\"_id\":\"278bzxEFeTKNiKXfM\",\"language\":\"javascript\"},{\"_id\":\"TFG9f75apGi3SS49v\",\"language\":\"python3\"},{\"_id\":\"bHL3XpC3eG2P8yBZy\",\"language\":\"ruby\"}]}}"]