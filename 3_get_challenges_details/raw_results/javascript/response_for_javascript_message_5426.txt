a["{\"msg\":\"result\",\"id\":\"1463\",\"result\":{\"_id\":\"kcQmoJJE8CXC5kqnP\",\"author\":\"Isaac Pak\",\"authorId\":\"yaL57wdXmgAZTvKfX\",\"code\":\"const REGEXP = /(\\\\w{4,})/g\",\"difficulty\":2.1702127659574466,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"ZkbgdCf8uHNFkbPta\",\"instructions\":\"You've just webscraped a web page and stored it in a string. In the string there is a bullet list of states that voted for President Trump's impeachment:\\n\\n```\\nconst str = `\\n* Texas = no\\n* California = yes\\n* Florida = yes\\n* Michigan = no\\n`\\n```\\n\\nAdd a **negative lookahead** assertion so a regex match would output the states that voted **no**.  **DO NOT** use a positive lookahead assertion.\\n\\n### Notes\\n- You **must**  use a **negative lookahead** assertion (check the **Resources** tab for info).\\n- This is fake data and used only for educational purposes.\",\"isHidden\":false,\"lab\":\"const validate = (REGEXP) => {\\n\\t if(!/\\\\(\\\\?\\\\!/.test(String(REGEXP))) return () => \\\"need negative lookahead assertion\\\"\\n\\t return function testReg(str) {\\n\\t\\t return str.match(REGEXP)\\n\\t }\\n} \\n\\nconst str = `\\n* Texas = no \\n* California = yes  \\n* Florida = yes \\n* Michigan = no \\n`\\n\\nconst testStr = validate(REGEXP) \\n\\nTest.assertNotEquals(testStr(str), \\\"need negative lookahead assertion\\\", \\\"You need to use a negative lookahead in your expression.\\\")\\nTest.assertSimilar(testStr(str), ['Texas', 'Michigan'])\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,2,0,2,2,2,3,3,2,2,1,2,2,3,2,3,4,3,3,3,2,3,2,3,3,1,2,0,0,0,3,2,3,3,2,3,3,2,1,3,2,3],\"rators\":[\"yaL57wdXmgAZTvKfX\",\"n5wubRfh6zh8QRymN\",\"yjtdwc2AC4jA2RWtn\",\"6BpBQnSGhzgvhXrEy\",\"mHT2bJb5SByfJ8yKS\",\"fcZ64pqgwi2SA8eLh\",\"4p2sARSZNNnKqjAT6\",\"RE4Mm9T6Q9uygAxGS\",\"EAuL56kpyLytw4RcR\",\"EjPLq3QSJdGQFJdgW\",\"Nv5a34gxg5yvLKRW8\",\"EWn8w8P3nNh7knatY\",\"ko7oJ85JMftgcbkrr\",\"h4jFmtbFn92eA4649\",\"dDFJpK4pXCsQYuHmc\",\"AasGs8AeX9Lcb9xJn\",\"2ZFoLTxcCARhwc8xX\",\"zW5JY78HhFCrSPEeE\",\"a777e8chPvJkY3tKa\",\"CJBPyyfyaEeEo63sb\",\"aEm3Wvj2rFYRL8Lrb\",\"65dbBZynphj53nXqA\",\"Nua6T3dBurBy3Qfg9\",\"e9Cknxbx6o7Nb6REs\",\"vewKwcMeGuk3p3MsN\",\"9YGeZ83LZhBKNmuEj\",\"s7Qqx4Jnuq85iB7Lw\",\"WBBN35jGBzzHWeLn5\",\"2QziknsznNeMPRh3g\",\"wbzQwextPpnNBR7cG\",\"pGh7WykiPe26fHJYv\",\"Akq3fQcPRgPrWfsye\",\"CNc6rmwhbxkxEhHAp\",\"f52uK7D6PGGdzjtdZ\",\"zw7g7T8wE5R5CBhXr\",\"6P9KgzXeJtZ6ejQcu\",\"g4NCSxxHqHCGMpWwT\",\"DaaYgfivvuHBk4kbg\",\"HXwnJvQfHYTWcujEz\",\"GsrjAqoAdLATJH9qD\",\"jemTNShfp6ymAs3pj\",\"wT5gGgvjKc5wz59AQ\",\"J7d397iB5GuWRAMfg\",\"M4vq8ATaS9Jg5X7iP\",\"oDtGiNqDMHmhHE3J8\",\"TtrXnGzi9MyhLvWiz\",\"8BJyXvRWcrvN3nttS\",\"QGjY3hgPYPMmMjc7j\",\"DfdkfQh8ctd2BaaRY\",\"rMc3LPajSgm68hNfC\",\"Ya3eHgs8x3unZRLpb\"],\"total\":51,\"quality\":[4,5,5,5,3,5,5,5,5]},\"flags\":0},\"summary\":\"You've just webscraped a web page and stored it in a string. In the string there is a bullet list of states that voted for President Trump's impeachment:\\n\\nconst str = `\\nTexas = no\\nCalifornia = yes\\nFlorida = yes\\nMichigan = no\\n`\\n\\nAdd a negative lookahead assertion so a regex match would output the states that voted no.  DO NOT use a positive lookahead assertion.\",\"tags\":[\"regex\",\"formatting\",\"strings\"],\"timestamp\":{\"$date\":1580842561426},\"title\":\"RegEx: Boundary Assertions V\",\"quality\":4.666666666666667,\"family\":[{\"_id\":\"kcQmoJJE8CXC5kqnP\",\"language\":\"javascript\"},{\"_id\":\"pwAdsffHkxdhSwXKc\",\"language\":\"python3\"}]}}"]