a["{\"msg\":\"result\",\"id\":\"1475\",\"result\":{\"_id\":\"QuhNPjLubRNh2McfX\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"function rolls(arr) {\\n\\t\\n}\",\"difficulty\":2.175,\"familyId\":\"uB72WxNWeiHj6t2os\",\"instructions\":\"Create a function that takes an array consisting of dice rolls from 1-6. Return the sum of your rolls with the following conditions:\\n\\n1. If a 1 is rolled, that is bad luck. The next roll counts as 0.\\n2. If a 6 is rolled, that is good luck. The next roll is multiplied by 2.\\n3. The array length will always be 3 or higher.\\n\\n### Examples\\n```\\nrolls([1, 2, 3]) ➞ 4\\n// The second roll, 2, counts as 0 as a result of rolling 1.\\n\\nrolls([2, 6, 2, 5]) ➞ 17\\n// The 2 following the 6 was multiplied by 2.\\n\\nrolls([6, 1, 1]) ➞ 8\\n// The first roll makes the second roll worth 2, but the\\n// second roll was still 1 so the third roll doesn't count.\\n```\\n\\n### Notes\\nEven if a 6 is rolled after a 1, 6 isn't summed but the 6's \\\"effect\\\" still takes place.\",\"lab\":\"Test.assertEquals(rolls([1,2,3]), 4)\\nTest.assertEquals(rolls([2,6,2,5]), 17)\\nTest.assertEquals(rolls([6,1,1]), 8)\\nTest.assertEquals(rolls([5,1,6,1,6]), 8)\\nTest.assertEquals(rolls([1,1,1]), 1)\\nTest.assertEquals(rolls([1,1,3,1,1]), 2)\\nTest.assertEquals(rolls([1,1,1,1,1]), 1)\\nTest.assertEquals(rolls([6,6,6]), 30)\",\"language\":\"javascript\",\"summary\":\"Create a function that takes an array consisting of dice rolls from 1-6. Return the sum of your rolls with the following conditions:\\n\\nIf a 1 is rolled, that is bad luck. The next roll counts as 0.\\nIf a 6 is rolled, that is good luck. The next roll is multiplied by 2.\\nThe array length will always be 3 or higher.\\n\\nExamples\\nrolls([1, 2, 3]) ➞ 4\\n// The second roll\",\"tags\":[\"algorithms\",\"conditions\",\"games\",\"math\"],\"timestamp\":{\"$date\":1552765031285},\"title\":\"Dice Gambling\",\"stats\":{\"completed\":{\"total\":122,\"ratings\":[2,2,2,2,2,2,2,2,2,2,2,2,1,1,2,1,2,3,2,2,2,5,2,2,3,2,2,1,2,3,2,2,3,3,0,3,2,3,2,3,2,1,0,1,2,1,0,3,3,3,2,2,3,2,2,3,3,2,1,2,3,2,2,3,3,0,2,4,3,3,2,3,2,0,3,3,3,2,2,2,3,2,3,3,3,0,3,3,3,2,3,1,2,3,3,2,3,3,1,3,3,2,1,3,2,1,0,1,3,3,3,1,3,2,1,3,2,2,3,3],\"rators\":[\"BkPgkDQGHm66X4Qai\",\"CDu3FgsPPzS3ryPHP\",\"65dbBZynphj53nXqA\",\"mNMQvcxKSSvqqMYCH\",\"SDtZFL5NzAoCPofXk\",\"Nd7Bnx9zF57gn3vLp\",\"gGETo2x9dY5TsWc2b\",\"nfHAmA5HM5JFWDJsr\",\"fmLzKJTPWvtGRAaAN\",\"wcjknenWdPRhrRScv\",\"H4xjftLb9jcJa93M9\",\"CMPqZzRxXA7RrXGzt\",\"e8ftyJ6nKRtZDwGWJ\",\"2NJuDfSqdrF8kHHni\",\"CJnuSjyCBMTbTiibD\",\"8xuMMGF7fyQWL2fKH\",\"Akq3fQcPRgPrWfsye\",\"f4WJ6jwH97mM7Rnoh\",\"gGjvvvevpFyDjEaQz\",\"n5wubRfh6zh8QRymN\",\"bjn5DTzzaWCP5BDgX\",\"EjPLq3QSJdGQFJdgW\",\"rTRvHndHZKKRkb9w5\",\"EWn8w8P3nNh7knatY\",\"GCxj7RJCeWYNxj8oQ\",\"rSJGLYSXMuu3RWjun\",\"YGjYWnDuSDfQd4kD6\",\"zgoq9MhrL2h75DAMA\",\"gyB5wJihaSZCWKTCB\",\"4itF2fjGR9Swc48Zp\",\"Y9Nz9yafaibz54W4o\",\"e4MryesLkbuJbYWnZ\",\"yjtdwc2AC4jA2RWtn\",\"R4JQmeA6cYyfXbmLF\",\"5Zq3aGdvh4LHBvnJL\",\"byrKwHgawbFgyAcgo\",\"Q9KQomTTPBsrkAL6c\",\"zw7g7T8wE5R5CBhXr\",\"eomLS3wh6tQPN8jtH\",\"6BpBQnSGhzgvhXrEy\",\"M5gwJtQXmSkdEmgkh\",\"qX8DMpN5h4YoAPTN7\",\"rZfbfxCJbYsvhgKcn\",\"FvWKuSqHdXZ7HM2sD\",\"FJsvM5yqKuK9yMk9P\",\"XKi8iZXBCHCaebSHh\",\"MrweHYHDwwPjC2is5\",\"zNN2fW2pJGpTxBgzx\",\"AasGs8AeX9Lcb9xJn\",\"mHT2bJb5SByfJ8yKS\",\"FiK2ruyH8KeHLAgoA\",\"RE4Mm9T6Q9uygAxGS\",\"arz32kRq8wJNu7DhA\",\"3awyiorYPgCqqP7Sr\",\"8vvBFgSesJuLkxkwW\",\"KPzMqZSFYKnbDPiTc\",\"DHwbkbzYNpmkSFT7u\",\"hr3kdJKthGFr5jRQB\",\"YDgDsgtwnPhSySuv2\",\"7m5gibjCg7GDjJDSh\",\"TpZXwFsh5mczz9QoG\",\"HRvRT6cjb9knQGa7d\",\"hCocXH3CwMH29whYQ\",\"2innwjWqxJHo4eRGh\",\"ygNnCnmzZfy3r2m6w\",\"uTyEzQgEPY8ugCqP5\",\"pfBbi7ZpZcewE9qC9\",\"Czph6ZM3JY2t9f2jD\",\"rfsQxYTnovxYJ4s7Q\",\"pd8dm7sWLW9cY6dYW\",\"ZXRMRAJNP6eseLdbR\",\"Ehrta9env9HXyrGbW\",\"pi76g3eRpnKrhee2a\",\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"M7kpJSXFx67HhrTaZ\",\"fbYN9Jp46RqBqCd2K\",\"5ibYDhiazv3svJHiJ\",\"NHmdeFgTxsexcP3EM\",\"M4vq8ATaS9Jg5X7iP\",\"aPctbuudzmcaxceJA\",\"DE9johNuSGL5SoHgs\",\"9WhbeZZkvFdS4g7SE\",\"ZcqshY58sGEEvgeaq\",\"p5ZshR8zhTqmdhKDc\",\"buX4mCQhtXCfBjeno\",\"8raviPK67KKxzQWcF\",\"4Xv87xmdSnpYhi8hz\",\"Nb6LYPoQP6KJZt8mz\",\"aEm3Wvj2rFYRL8Lrb\",\"v2w9GN4jHP2fgYdeE\",\"RzmXx77rzobF7Gtsj\",\"QRv96jmNaYsWkxQEG\",\"seabfF72fnX2AFtGs\",\"MT26yxj3YX95DsyLj\",\"tAF9Gf6PiGogbZuWs\",\"CNc6rmwhbxkxEhHAp\",\"bXaGdBM8FBLHf7N6Y\",\"kp2ZbCewZJAbfd7xv\",\"qWR7eXxBiNee22A5u\",\"DPi9QGLctq2y76KuE\",\"mDWNyaaQ9hvPCRzSd\",\"g4NCSxxHqHCGMpWwT\",\"GkEW4AcNHyordAyyJ\",\"pHp9XWwL6QBTRSWPY\",\"u9cRf5kvtpRB5ffB3\",\"ng2bgc2rEnmvif6PF\",\"NGvCPuMiAP3xrRLfB\",\"S9digAGaYjdChcT9v\",\"8BJyXvRWcrvN3nttS\",\"AFfw7cGg83uYk2Miy\",\"nkH3HfJXLMNcBMM79\",\"Ya3eHgs8x3unZRLpb\",\"Yp7uvStL97cC9fKkY\",\"oDtGiNqDMHmhHE3J8\",\"TtrXnGzi9MyhLvWiz\",\"SgdEwwRmdmch5iakD\"],\"quality\":[5,4,3,5,5,3]},\"tests\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"instructions\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.166666666666667,\"family\":[{\"_id\":\"4SvKbv3bWKGjoWTC4\",\"language\":\"cpp\"},{\"_id\":\"QuhNPjLubRNh2McfX\",\"language\":\"javascript\"},{\"_id\":\"zLBnS7sWFBz62pLcy\",\"language\":\"php\"},{\"_id\":\"Yfm3h3nT3apARd4gC\",\"language\":\"python3\"},{\"_id\":\"KyyW3wN8mqacXSvyp\",\"language\":\"ruby\"},{\"_id\":\"EMQgETk4PNBmo58ss\",\"language\":\"swift\"}]}}"]