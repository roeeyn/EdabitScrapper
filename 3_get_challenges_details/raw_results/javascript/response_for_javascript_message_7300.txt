a["{\"msg\":\"result\",\"id\":\"2390\",\"result\":{\"_id\":\"4E9gTrRWErpTCA2FQ\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"function sayNumber(num) {\\n\\t\\n}\",\"difficulty\":4.294117647058823,\"familyId\":\"YX2x6WhwknaxA4GEM\",\"instructions\":\"Create a function that takes a numeral (just digits without separators (e.g. 19093 instead of 19,093) and returns the standard way of reading a number, complete with punctuation.\\n\\n### Examples\\n```\\nsayNumber(0) ➞ \\\"Zero.\\\"\\n\\nsayNumber(11) ➞ \\\"Eleven.\\\"\\n\\nsayNumber(1043283) ➞ \\\"One million, forty three thousand, two hundred and eighty three.\\\"\\n\\nsayNumber(90376000010012) ➞ \\\"Ninety trillion, three hundred and seventy six billion, ten thousand and twelve.\\\"\\n```\\n\\n### Notes\\nMust read any number from 0 to 999,999,999,999,999.\",\"isHidden\":false,\"lab\":\"Test.assertEquals(sayNumber(0), \\\"Zero.\\\")\\nTest.assertEquals(sayNumber(11), \\\"Eleven.\\\")\\nTest.assertEquals(sayNumber(14), \\\"Fourteen.\\\")\\nTest.assertEquals(sayNumber(15), \\\"Fifteen.\\\")\\nTest.assertEquals(sayNumber(43), \\\"Forty-three.\\\")\\nTest.assertEquals(sayNumber(50), \\\"Fifty.\\\")\\nTest.assertEquals(sayNumber(1001), \\\"One thousand and one.\\\")\\nTest.assertEquals(sayNumber(20000), \\\"Twenty thousand.\\\")\\nTest.assertEquals(sayNumber(1033286), \\\"One million, thirty-three thousand, two hundred and eighty-six.\\\")\\nTest.assertEquals(sayNumber(12000013), \\\"Twelve million and thirteen.\\\")\\nTest.assertEquals(sayNumber(90376000010012), \\\"Ninety trillion, three hundred and seventy-six billion, ten thousand and twelve.\\\")\",\"language\":\"javascript\",\"summary\":\"Create a function that takes a numeral (just digits without separators (e.g. 19093 instead of 19,093) and returns the standard way of reading a number, complete with punctuation.\\n\\nExamples\\nsayNumber(0) ➞ \\\"Zero.\\\"\\n\\nsayNumber(11) ➞ \\\"Eleven.\\\"\\n\\nsayNumber(1043283) ➞ \\\"One million, forty three thousand, two hundred and eighty three.\\\"\\n\\nsayNumber(90376000010012) ➞ \\\"Nine\",\"tags\":[\"algorithms\",\"logic\",\"numbers\",\"data_structures\"],\"timestamp\":{\"$date\":1581383122512},\"title\":\"Say the Number!\",\"stats\":{\"completed\":{\"total\":16,\"ratings\":[4,4,4,4,4,4,4,4,5,5,5,5,5,5,2,5,4],\"rators\":[\"yjtdwc2AC4jA2RWtn\",\"YER6iBcpJCuhgrYDN\",\"mF4TfPQQMzbuN7XLg\",\"JGBCMpnbbi5ztuFoX\",\"a777e8chPvJkY3tKa\",\"QMq9dcvgpyNK6RAze\",\"bK3h5Yv6eEQh2LhkR\",\"7TXyMDHFYjna3dyPb\",\"mHT2bJb5SByfJ8yKS\",\"aEm3Wvj2rFYRL8Lrb\",\"M4vq8ATaS9Jg5X7iP\",\"va3fDAQm4sqSMoy3R\"],\"quality\":[]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"quality\":0,\"family\":[{\"_id\":\"4E9gTrRWErpTCA2FQ\",\"language\":\"javascript\"},{\"_id\":\"im47j9ax22Z5MgqvW\",\"language\":\"python3\"},{\"_id\":\"MCZETvBYpTJ3AgM6M\",\"language\":\"ruby\"}]}}"]