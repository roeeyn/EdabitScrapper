a["{\"msg\":\"result\",\"id\":\"2151\",\"result\":{\"_id\":\"zJmMWCmZBjWhypbT8\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"function ascending(str) {\\n\\t\\n}\",\"difficulty\":3.1176470588235294,\"familyId\":\"z72FnE8n6Ez3DDc6S\",\"instructions\":\"Write a function that will return `true` if a given string (divided and grouped into a size) will contain a set of **consecutive ascending** numbers, otherwise, return `false`.\\n\\n\\n### Examples\\n```\\nascending(\\\"123124125\\\") ➞ true\\n// Contains a set of consecutive ascending numbers\\n// if grouped into 3's : 123, 124, 125\\n\\nascending(\\\"101112131415\\\") ➞ true\\n// Contains a set of consecutive ascending numbers\\n// if grouped into 2's : 10, 11, 12, 13, 14, 15\\n\\nascending(\\\"32332432536\\\") ➞ false\\n// Regardless of the grouping size, the numbers can't be consecutive.\\n\\nascending(\\\"326325324323\\\") ➞ false\\n// Though the numbers (if grouped into 3's) are consecutive but descending.\\n\\nascending(\\\"666667\\\") ➞ true\\n// Consecutive numbers: 666 and 667.\\n```\\n\\n\\n### Notes\\n- A **number** can consist of any number of digits, so long as the numbers are **adjacent** to each other, and the string has **at least two** of them.\\n- A **recursive** version of this challenge can be found via this [link](https://edabit.com/challenge/ckAccFkn3yR5d4xSm).\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"let [actualParam, expected] = [\\n  [\\n    \\\"123124125\\\", \\\"101112131415\\\", \\\"666667\\\", \\\"232425\\\", \\\"444445\\\", \\\"1234567\\\", \\\"123412351236\\\", \\\"57585960616263\\\", \\\"500001500002500003\\\",\\n    \\\"919920921\\\", \\\"12341235123612371238\\\", \\\"32332432536\\\", \\\"326325324323\\\", \\\"2324256\\\", \\\"1235\\\", \\\"121316\\\", \\\"12131213\\\", \\\"54321\\\",\\n    \\\"56555453\\\", \\\"90090190290\\\", \\\"35236237238\\\"\\n  ], [\\n    true, true, true, true, true, true, true, true, true, true, true,\\n    false, false, false, false, false, false, false, false, false, false\\n  ]\\n]\\nfor (let i in actualParam) Test.assertEquals(ascending(actualParam[i]), expected[i])\",\"language\":\"javascript\",\"quality\":0,\"summary\":\"Write a function that will return true if a given string (divided and grouped into a size) will contain a set of consecutive ascending numbers, otherwise, return false.\\n\\nExamples\\nascending(\\\"123124125\\\") ➞ true\\n// Contains a set of consecutive ascending numbers\\n// if grouped into 3's : 123, 124, 125\\n\\nascending(\\\"101112131415\\\") ➞ true\\n// Contains a set of consecut\",\"tags\":[\"arrays\",\"sorting\",\"strings\",\"validation\"],\"timestamp\":{\"$date\":1605195564745},\"title\":\"Consecutive Ascending Numbers\",\"stats\":{\"completed\":{\"total\":32,\"ratings\":[3,3,3,3,3,5,5,2,1,4,2,3,3,3,3,1,2,4,1,4,3,4,4,3,3,3,3,5,3,3,2,3,5,4],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"u9cRf5kvtpRB5ffB3\",\"QRv96jmNaYsWkxQEG\",\"aEm3Wvj2rFYRL8Lrb\",\"buX4mCQhtXCfBjeno\",\"YnmtuLLaNtA6TwnjK\",\"hcm8sL8mNJTSfTdgE\",\"SSQyTQfxhabSd4pjG\",\"P6Nj8vL3bcTZFD2Xz\",\"kp2ZbCewZJAbfd7xv\",\"HBr3oLiAtMZdDsiJu\",\"M4vq8ATaS9Jg5X7iP\",\"JsRTAwWK7Nikj4sKA\",\"yjtdwc2AC4jA2RWtn\",\"PH32cNxBjrK4a28sn\",\"oDtGiNqDMHmhHE3J8\",\"DPi9QGLctq2y76KuE\",\"8BJyXvRWcrvN3nttS\",\"ca32ZCc2z2DArdyRt\",\"8SYDBRtkZuW3pdPtG\",\"Rs7tvWNqpNtk7KnX8\",\"cpDkjP6Qg7zypLahv\",\"v97tB73ypDGn7Wazg\",\"sERiuindHZ3GSzBDF\",\"g4K6nM72TtXLKog5x\",\"abJXPXumXzSprL5Dd\",\"4BizLfYXBvkypztF2\",\"8Rp7WvAMJYZcqTTiG\",\"LDnDbno8ETdCdiHsJ\"]},\"flags\":1},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"ctWQp4tZCf7J4zmo2\",\"language\":\"java\"},{\"_id\":\"zJmMWCmZBjWhypbT8\",\"language\":\"javascript\"},{\"_id\":\"LMoP4Jhpm9kx4WQ3a\",\"language\":\"python3\"}]}}"]