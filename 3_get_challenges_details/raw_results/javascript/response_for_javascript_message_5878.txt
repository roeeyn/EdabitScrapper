a["{\"msg\":\"result\",\"id\":\"1687\",\"result\":{\"_id\":\"KWNt5yhvxtEJRMwJZ\",\"author\":\"er0s\",\"authorId\":\"5Zq3aGdvh4LHBvnJL\",\"code\":\"function sortDates(arr) {\\n\\t\\n}\",\"difficulty\":2.347826086956522,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"FW9eQ77xgLfkht5hW\",\"instructions\":\"In this challenge, sort an array containing a series of dates given as strings. Each date is given in the format `DD-MM-YYYY_HH:MM`:\\n\\n```\\n\\\"12-02-2012_13:44\\\"\\n```\\n\\nThe priority of criteria used for sorting will be:\\n- Year\\n- Month\\n- Day\\n- Hours\\n- Minutes\\n\\nGiven an array `arr` and a string `type`, implement a function that returns:\\n- if `type` is equal to `\\\"ASC\\\"`, the array `arr` sorted in ascending order.\\n- if `type` is equal to `\\\"DSC\\\"`, the array `arr` sorted in descending order.\\n\\n### Examples\\n```\\nsortDates([\\\"10-02-2018_12:30\\\", \\\"10-02-2016_12:30\\\", \\\"10-02-2018_12:15\\\"], \\\"ASC\\\") ➞ [\\n  \\\"10-02-2016_12:30\\\", \\\"10-02-2018_12:15\\\", \\\"10-02-2018_12:30\\\"\\n]\\n\\nsortDates([\\\"10-02-2018_12:30\\\", \\\"10-02-2016_12:30\\\", \\\"10-02-2018_12:15\\\"], \\\"DSC\\\") ➞ [\\n  \\\"10-02-2018_12:30\\\", \\\"10-02-2018_12:15\\\", \\\"10-02-2016_12:30\\\"\\n]\\n\\nsortDates([\\\"09-02-2000_10:03\\\", \\\"10-02-2000_18:29\\\", \\\"01-01-1999_00:55\\\"], \\\"ASC\\\") ➞ [\\n  \\\"01-01-1999_00:55\\\", \\\"09-02-2000_10:03\\\", \\\"10-02-2000_18:29\\\"\\n]\\n```\\n\\n### Notes\\n- Remember: the date is in the format `DD-MM-YYYY_HH:MM`.\\n- You can expect only valid formatted dates, without exceptions to handle.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"const dates1 = [\\n\\t\\\"18-10-2016_12:09\\\", \\\"01-12-2017_20:32\\\", \\\"18-10-2016_12:04\\\",\\n\\t\\\"19-10-2017_16:20\\\", \\\"18-10-2017_16:19\\\", \\\"18-10-2016_16:19\\\"\\n];\\n\\nTest.assertSimilar(sortDates(dates1, \\\"ASC\\\"), [\\n  \\\"18-10-2016_12:04\\\",\\n\\t\\\"18-10-2016_12:09\\\",\\n\\t\\\"18-10-2016_16:19\\\",\\n\\t\\\"18-10-2017_16:19\\\",\\n\\t\\\"19-10-2017_16:20\\\",\\n  \\\"01-12-2017_20:32\\\",\\n]);\\n\\nTest.assertSimilar(sortDates(dates1, \\\"DSC\\\"), [\\n\\t\\\"01-12-2017_20:32\\\",\\n\\t\\\"19-10-2017_16:20\\\",\\n\\t\\\"18-10-2017_16:19\\\",\\n\\t\\\"18-10-2016_16:19\\\",\\n\\t\\\"18-10-2016_12:09\\\",\\n\\t\\\"18-10-2016_12:04\\\"\\n]);\\n\\nconst dates2 = [\\n\\t\\\"11-02-2011_00:01\\\", \\\"21-04-2013_11:43\\\", \\\"02-09-2018_11:00\\\",\\n\\t\\\"02-09-2018_10:00\\\", \\\"02-09-2018_10:30\\\", \\\"11-02-2011_00:00\\\"\\n];\\n\\nTest.assertSimilar(sortDates(dates2, \\\"DSC\\\"), [\\n\\t\\\"02-09-2018_11:00\\\",\\n\\t\\\"02-09-2018_10:30\\\",\\n\\t\\\"02-09-2018_10:00\\\",\\n\\t\\\"21-04-2013_11:43\\\",\\n\\t\\\"11-02-2011_00:01\\\",\\n\\t\\\"11-02-2011_00:00\\\"\\n]);\\n\\nTest.assertSimilar(sortDates(dates2, \\\"ASC\\\"), [\\n\\t\\\"11-02-2011_00:00\\\",\\n\\t\\\"11-02-2011_00:01\\\",\\n\\t\\\"21-04-2013_11:43\\\",\\n\\t\\\"02-09-2018_10:00\\\",\\n\\t\\\"02-09-2018_10:30\\\",\\n\\t\\\"02-09-2018_11:00\\\"\\n]);\\n\\nconst dates3 = [\\n\\t\\\"03-04-1982_12:11\\\", \\\"09-08-2010_09:11\\\", \\\"14-12-2004_10:32\\\",\\n\\t\\\"08-12-2004_08:00\\\", \\\"08-12-2004_08:45\\\", \\\"12-02-1985_00:58\\\"\\n];\\n\\nTest.assertSimilar(sortDates(dates3, \\\"ASC\\\"), [\\n\\t\\\"03-04-1982_12:11\\\",\\n\\t\\\"12-02-1985_00:58\\\",\\n\\t\\\"08-12-2004_08:00\\\",\\n\\t\\\"08-12-2004_08:45\\\",\\n\\t\\\"14-12-2004_10:32\\\",\\n\\t\\\"09-08-2010_09:11\\\"\\n]);\\n\\nTest.assertSimilar(sortDates(dates3, \\\"DSC\\\"), [\\n\\t\\\"09-08-2010_09:11\\\",\\n\\t\\\"14-12-2004_10:32\\\",\\n\\t\\\"08-12-2004_08:45\\\",\\n\\t\\\"08-12-2004_08:00\\\",\\n\\t\\\"12-02-1985_00:58\\\",\\n\\t\\\"03-04-1982_12:11\\\"\\n]);\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,4,1,2,2,3,2,2,3,0,2,2,2,2,2,3,3,3,3,3,0,3,3,3,3,1,2,3,3,3,4,3,2,0,4,3,3,3,3,4,3,3],\"rators\":[\"5Zq3aGdvh4LHBvnJL\",\"n5wubRfh6zh8QRymN\",\"6BpBQnSGhzgvhXrEy\",\"pi76g3eRpnKrhee2a\",\"2CvHJcA9aXt9pvZwA\",\"yjtdwc2AC4jA2RWtn\",\"YER6iBcpJCuhgrYDN\",\"Y9Nz9yafaibz54W4o\",\"EAuL56kpyLytw4RcR\",\"mHT2bJb5SByfJ8yKS\",\"RE4Mm9T6Q9uygAxGS\",\"FJsvM5yqKuK9yMk9P\",\"EWn8w8P3nNh7knatY\",\"a777e8chPvJkY3tKa\",\"eomLS3wh6tQPN8jtH\",\"GCsLzWAhLvniQqR3J\",\"oyB4Wr4EeZnoDaa8B\",\"YtGYxpMxbrHLFK8nq\",\"a7LBurCmz5n6gECbv\",\"yuLxi2qBJvMnwgdgJ\",\"jkumHyXfMkhGcPgqC\",\"Xk2g4CNFAnYcvxiSr\",\"MEZNjeGd7APtvA3SL\",\"65dbBZynphj53nXqA\",\"aEm3Wvj2rFYRL8Lrb\",\"FioqXbWFJxdCop35Z\",\"buX4mCQhtXCfBjeno\",\"p5ZshR8zhTqmdhKDc\",\"eFjGhq7C7bBKXjT6X\",\"ZcqshY58sGEEvgeaq\",\"2QziknsznNeMPRh3g\",\"QRv96jmNaYsWkxQEG\",\"pGh7WykiPe26fHJYv\",\"CNc6rmwhbxkxEhHAp\",\"M4vq8ATaS9Jg5X7iP\",\"vGKxRcDYDsXzTQuEQ\",\"g4NCSxxHqHCGMpWwT\",\"AQSqD9oNv2uPfxZCR\",\"nfd8Rq4PTMfe7a6Ep\",\"PPFmWzDiefzfekdcg\",\"8BJyXvRWcrvN3nttS\",\"TtrXnGzi9MyhLvWiz\",\"oDtGiNqDMHmhHE3J8\",\"ThaiAKWWDw2W4QfJh\",\"Ya3eHgs8x3unZRLpb\"],\"total\":48,\"quality\":[5,5,5,3]},\"flags\":0},\"summary\":\"In this challenge, sort an array containing a series of dates given as strings. Each date is given in the format DD-MM-YYYY_HH:MM:\\n\\n\\\"12-02-2012_13:44\\\"\\n\\nThe priority of criteria used for sorting will be:\\nYear\\nMonth\\nDay\\nHours\\nMinutes\\n\\nGiven an array arr and a string type, implement a function that returns:\\nif type is equal to \\\"ASC\\\", the array arr sorted in ascen\",\"tags\":[\"dates\",\"strings\",\"sorting\"],\"timestamp\":{\"$date\":1582819264343},\"title\":\"Sort the Dates\",\"quality\":4.5,\"family\":[{\"_id\":\"axeAeZJmSFd6CjChG\",\"language\":\"cpp\"},{\"_id\":\"KWNt5yhvxtEJRMwJZ\",\"language\":\"javascript\"},{\"_id\":\"whmsRve8YQ23wZuh4\",\"language\":\"python3\"},{\"_id\":\"7hYKKYiXpYSH9LZAj\",\"language\":\"ruby\"}]}}"]