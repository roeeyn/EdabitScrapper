a["{\"msg\":\"result\",\"id\":\"970\",\"result\":{\"_id\":\"e5PvcKmnbdNahT9TZ\",\"author\":\"Isaac Pak\",\"authorId\":\"yaL57wdXmgAZTvKfX\",\"code\":\"const REGEXP = /* Write your expression here */g\",\"difficulty\":1.653061224489796,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"Z7TypFRCTsnHTn75d\",\"instructions\":\"Write a **RegExp** that looks for all decimal numbers including integer ones, with the floating point and negative ones.\\n\\n### Example\\n```\\nconst REGEXP = /your regexp/g\\n\\nlet str = \\\"-1.5 0 2 -123.4.\\\"\\n\\nstr.match(REGEXP)  ➞ -1.5, 0, 2, -123.4\\n```\\n\\n### Notes\\nThe solution is in the **Resources** tab.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"const str = \\\"-1.5 0 2 -123.4.\\\";\\n\\nconst validate = (REGEXP) => {\\n\\t // if(!//.test(String(REGEXP))) return () => \\\"invalid\\\" \\n\\t return function testReg(str) {\\n\\t\\t return str.match(REGEXP)\\n\\t }\\n}\\n\\nconst testExp = validate(REGEXP)\\n\\n// Test.assertNotEquals(testExp(str), \\\"invalid\\\", \\\"Nothing new here\\\")\\nTest.assertSimilar(testExp(str), [\\\"-1.5\\\", \\\"0\\\", \\\"2\\\", \\\"-123.4\\\"])\\n\\n// credits to https://javascript.info/regexp-groups\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,1,1,0,2,2,1,2,2,2,2,2,2,2,0,2,1,2,2,2,1,2,2,1,3,2,1,0,2,1,2,2,3,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,3,3,0,2,2,1,2,2,2,0,0,0,1,2,1,1,0,2,1,2,2,2,1,2,2,2,2,2,3,2,5,2,2,0,1,1,0,2,0,2,1,2],\"rators\":[\"yaL57wdXmgAZTvKfX\",\"n5wubRfh6zh8QRymN\",\"PAzNgJF54C2mYPkR9\",\"yjtdwc2AC4jA2RWtn\",\"RE4Mm9T6Q9uygAxGS\",\"pi76g3eRpnKrhee2a\",\"zgoq9MhrL2h75DAMA\",\"Y9Nz9yafaibz54W4o\",\"QEhgdaBYvvTH4GpoN\",\"EWn8w8P3nNh7knatY\",\"2innwjWqxJHo4eRGh\",\"FJsvM5yqKuK9yMk9P\",\"mHT2bJb5SByfJ8yKS\",null,\"Nv5a34gxg5yvLKRW8\",\"YER6iBcpJCuhgrYDN\",\"EjPLq3QSJdGQFJdgW\",\"v2AzBqD64zLiRD9bP\",\"PytNZK9mNiRiZxPrm\",\"eomLS3wh6tQPN8jtH\",\"dDFJpK4pXCsQYuHmc\",\"AasGs8AeX9Lcb9xJn\",\"LcBkY5e47JGF9FCuu\",\"vn6nR36mdfY8z2zKx\",\"2ZFoLTxcCARhwc8xX\",\"65dbBZynphj53nXqA\",\"Q75jsoXjhTXJRrw8z\",\"zw7g7T8wE5R5CBhXr\",\"a777e8chPvJkY3tKa\",\"csXjXMhiQfbCQ9L7b\",\"eFjGhq7C7bBKXjT6X\",\"SNiJRRosrmSWssLj4\",\"Wv9v7fHb8umujfg2j\",\"8s5Bdrn7RTga7DL6x\",\"2zKQWLmEBw8FBs4ZL\",\"aEm3Wvj2rFYRL8Lrb\",\"SWbaoFPBAeu6g376j\",\"8raviPK67KKxzQWcF\",\"C9LKGu2g5hSijvDzA\",\"ZcqshY58sGEEvgeaq\",\"4gb4tvaSCs9u2z3ZA\",\"pLpcDC3EYx2DDQSdt\",\"tAF9Gf6PiGogbZuWs\",\"nhWLv6D8eZJ5ggKKX\",\"LCn6qz2GoMr5577Rd\",\"7gZKfvwaeqsGKXMEN\",\"e9Cknxbx6o7Nb6REs\",\"Nb6LYPoQP6KJZt8mz\",\"QRv96jmNaYsWkxQEG\",\"PGCDJpQMN8Sjn9Gm6\",\"ttuGK7od8simjgmCJ\",\"xn7uGNKeAwPEkP9oA\",\"ZcmrtSpqFnCBEK5YE\",\"s7Qqx4Jnuq85iB7Lw\",\"2tCCFm5iefjrRSaxv\",\"Ya3eHgs8x3unZRLpb\",\"hyx8iH2z3QySmyRKT\",\"kp2ZbCewZJAbfd7xv\",\"AFfw7cGg83uYk2Miy\",\"7wtuhPesfhcYsfZaZ\",\"9SrwsygZbwzGbYZSK\",\"CNc6rmwhbxkxEhHAp\",\"m3hDrjgTwir8Ldwhu\",\"BdvdJYwHZr7JpkHsn\",\"FGEeCTorXbX3WvjFW\",\"g4NCSxxHqHCGMpWwT\",\"NchnDcEmsLTeFZ4FH\",\"evTTY9hwrtogaNxXn\",\"pER3Z29q2fkQdcxTw\",\"2QziknsznNeMPRh3g\",\"DDokdbBKxv49M445o\",\"xWtXppaD4ycxafbqP\",\"KsYyTyQR52X4Zmb8T\",\"vewKwcMeGuk3p3MsN\",\"nkH3HfJXLMNcBMM79\",\"Yp7uvStL97cC9fKkY\",\"jpSy4qhuDNwPk9mrf\",\"3Gf7ikLijfoxabiPY\",\"K45zPJxsABuA3WSyj\",\"ZtTwZM9pQ2sAzhnMR\",\"RtPhDuwmvWNHiBxmG\",\"c7uBxu2rgY77H5d79\",\"2Qk2mFu9HBFzrB24i\",\"u9cRf5kvtpRB5ffB3\",\"npp5hesJrst6ghKSM\",\"CH53jGETBeJTummf3\",\"wJTDDTE3TrmSXKP4d\",\"dQd664XYR6QKHFvHW\",\"oDtGiNqDMHmhHE3J8\",\"PsccWumihMv4fv3ri\",\"NGvCPuMiAP3xrRLfB\",\"Q35xvrvEeifzmmgQF\",\"PTo9qt93YqGvL8fCa\",\"srJ34BaybkQh3qRkM\",\"wT5gGgvjKc5wz59AQ\",\"4skDBacNroo7gu4GB\",\"7DXJ3mvKMHHqBLt92\",\"9HZbxzkzgz4CvePtv\",\"GkdvNCbHP7GzHTkjH\",\"nBJve5CzG6WAw7WFQ\",\"Fk47SQxbHEJRw4u76\",\"gXTAie79kiw28tx5u\",\"J7d397iB5GuWRAMfg\",\"HCfkcKnPs9mrJojdG\",\"jyoLggHk8xQKZuoQC\",\"LwD3CyYSiBfg3mA4r\",\"8BJyXvRWcrvN3nttS\",\"skFNKvqfjA4WBSYLC\",\"bfYmA3LMvhSrK59cn\",\"jicWFrNKadYuLhqxh\",\"CHvzhtXnv8HTbPQ56\",\"oyB4Wr4EeZnoDaa8B\",\"3JhrD9mCDvpk9oT2B\",\"nr6NdAwpgMJcL2Wue\",\"rMc3LPajSgm68hNfC\",\"uxKGACwmZ6FNZsMwE\"],\"total\":126,\"quality\":[5,5,3,5,5,5,5,5,4,4,5,5,5,5,5,5,5,4,4,5,5,4,5]},\"flags\":0},\"summary\":\"Write a RegExp that looks for all decimal numbers including integer ones, with the floating point and negative ones.\\n\\nExample\\nconst REGEXP = /your regexp/g\\n\\nlet str = \\\"-1.5 0 2 -123.4.\\\"\\n\\nstr.match(REGEXP)  ➞ -1.5, 0, 2, -123.4\\n\\nNotes\\nThe solution is in the Resources tab.\",\"tags\":[\"regex\"],\"timestamp\":{\"$date\":1583769732795},\"title\":\"RegEx Exercise 3: Find All Numbers\",\"quality\":4.695652173913044,\"family\":[{\"_id\":\"e5PvcKmnbdNahT9TZ\",\"language\":\"javascript\"},{\"_id\":\"sRE3RGnWs7AHqGMkR\",\"language\":\"python3\"}]}}"]