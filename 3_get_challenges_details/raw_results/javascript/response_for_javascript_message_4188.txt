a["{\"msg\":\"result\",\"id\":\"849\",\"result\":{\"_id\":\"fgjtbbeZSy55ftXwa\",\"author\":\"Ruud Peter Boelens\",\"authorId\":\"Akq3fQcPRgPrWfsye\",\"code\":\"function rectangles(step) {\\n\\t\\n}\",\"difficulty\":1.5846153846153845,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"Ju44wvoo9BvrCuJGz\",\"instructions\":\"Let there be a square matrix, where each square is a rectangle, and a combination of more squares are also rectangles. To find the number of rectangles, Pete sat down and started counting... but that's highly inefficient.\\n\\nCreate a function that takes the order of the matrix as input and returns the number of rectangles in them.\\n\\n### Examples\\n```\\nrectangles(1) ➞ 1\\n\\nrectangles(2) ➞ 9\\n\\nrectangles(3) ➞ 36\\n```\\n\\n### Notes\\n- The input will always be an integer.\\n- Number of rectangles are given by: `((n(n+1))/2)^2`\\n- Watch the video listed in the **Resources** tab to get three different formulas.\",\"lab\":\"Test.assertEquals(rectangles(64), 4326400)\\nTest.assertEquals(rectangles(76), 8561476)\\nTest.assertEquals(rectangles(10), 3025)\\nTest.assertEquals(rectangles(79), 9985600)\\nTest.assertEquals(rectangles(84), 12744900)\\nTest.assertEquals(rectangles(0), 0)\\nTest.assertEquals(rectangles(60), 3348900)\\nTest.assertEquals(rectangles(29), 189225)\\nTest.assertEquals(rectangles(18), 29241)\\nTest.assertEquals(rectangles(74), 7700625)\\nTest.assertEquals(rectangles(16), 18496)\\nTest.assertEquals(rectangles(64), 4326400)\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,1,1,2,1,3,1,3,1,1,2,2,0,2,2,2,1,2,0,4,2,0,0,5,1,0,2,2,2,1,2,2,2,2,2,2,2,1,0,2,1,2,2,2,2,2,2,2,2,1,1,0,2,1,2,2,3,1,1,2,2,3,0,2,2,2,2,2,2,2,2,2,1,1,2,2,2,1,2,2,2,0,2,2,2,0,2,2,1,1,2,2,2,0,4,0,2,1,0,1,1,0,1,0,1,2,2,5,1,1,0,2,0,0,4,2,2,1,2,2,2,1,1,0,1],\"rators\":[\"Akq3fQcPRgPrWfsye\",\"n5wubRfh6zh8QRymN\",\"FJsvM5yqKuK9yMk9P\",\"65dbBZynphj53nXqA\",\"rTRvHndHZKKRkb9w5\",\"PeNavbcPgvcscW7zz\",\"fmLzKJTPWvtGRAaAN\",\"eomLS3wh6tQPN8jtH\",\"EjPLq3QSJdGQFJdgW\",\"5GWkiNRN6xMuRu7Dg\",\"9AdMR4uBsHxRcd86Q\",\"Y9Nz9yafaibz54W4o\",\"Jh6sPsgj8yHy95joL\",\"RE4Mm9T6Q9uygAxGS\",\"HrJtdRbvHHNh7tMMo\",\"iERYTAAJo3rBJ8Rok\",\"wcjknenWdPRhrRScv\",\"7gZKfvwaeqsGKXMEN\",\"Q9KQomTTPBsrkAL6c\",\"E3fyZ23p26CcvHvuR\",\"6BpBQnSGhzgvhXrEy\",\"SDtZFL5NzAoCPofXk\",\"zw7g7T8wE5R5CBhXr\",\"e8ftyJ6nKRtZDwGWJ\",\"yjtdwc2AC4jA2RWtn\",\"R4JQmeA6cYyfXbmLF\",\"5Zq3aGdvh4LHBvnJL\",\"XKi8iZXBCHCaebSHh\",\"ks3h3iTbFx3NWDrDY\",\"LrF8rMBdkJoZPJP5L\",\"66gXXy97s3jxAeS9q\",\"Zt3rmAL76KYNGP8bA\",\"etTJkfzBMjXkCi4LD\",\"AasGs8AeX9Lcb9xJn\",\"FvWKuSqHdXZ7HM2sD\",\"TaMWoPxWH5ZWRDBCG\",\"8vvBFgSesJuLkxkwW\",\"3awyiorYPgCqqP7Sr\",\"DHwbkbzYNpmkSFT7u\",\"fxJHXuW3aob7JCRgE\",\"tPtz279rzBX8kCWMr\",\"oFckF5bB5dGBQKneS\",\"w53eXh26bfnwL6whB\",\"BdvdJYwHZr7JpkHsn\",\"sbme4fRJjjBjYXRbY\",\"z6QfbuG6TXE7GKynQ\",\"7k59BcMjggHituTbt\",\"2CvHJcA9aXt9pvZwA\",\"ih2aGaqkMaagTgyL2\",\"CgKzxkiiEQcemKKaj\",\"8BFSTCnoe2QggN64c\",\"6gPHMpkEP8JuHxzpd\",\"5YCX58nhHT8oRCHyy\",\"pd8dm7sWLW9cY6dYW\",\"L7AbAMWkPzb4guHPe\",\"PytNZK9mNiRiZxPrm\",\"pi76g3eRpnKrhee2a\",\"aviGkNv87z9SFAaAQ\",\"YER6iBcpJCuhgrYDN\",\"bX6tpTCjwoi6XMMbK\",\"2d6fufcQy4F3awkF3\",\"E69SHKaxeBz77c6t6\",\"cp3X8hk8yNME7qoD9\",\"GvM9x2bsvy6cgNefJ\",\"z5ebtimXwFFJdYxoa\",\"E6DBfkTgHuPsDWdG8\",\"Ji84eQR54xeqRYceZ\",\"vtHbevf2tHqe6mRxX\",\"Yu5Kc5oSL2D2rwA5o\",\"Es4eX2stRpyoXeC7f\",\"a777e8chPvJkY3tKa\",\"mHT2bJb5SByfJ8yKS\",\"2SJfvLvxvTXxypSK3\",\"mynPw27Hb4jssoDHt\",\"buX4mCQhtXCfBjeno\",\"iiXAJnogbZLPouCJC\",\"8raviPK67KKxzQWcF\",\"QRv96jmNaYsWkxQEG\",\"nAmJEX7BkHLd9LsG2\",\"eoepTq5ES5tfgY9XT\",\"vn6nR36mdfY8z2zKx\",\"jpi9K3ZpTBysiyxkJ\",\"4ntYzGHHBgqf58udP\",\"tAF9Gf6PiGogbZuWs\",\"PGCDJpQMN8Sjn9Gm6\",\"moe6ztrsNzFymC3A7\",\"pLpcDC3EYx2DDQSdt\",\"AFfw7cGg83uYk2Miy\",\"aEm3Wvj2rFYRL8Lrb\",\"ADmBSRuAx3KWkNoMs\",\"ji5f27FPz4wRRF6Ls\",\"r7mZLgpQWzRiGddL5\",\"7wtuhPesfhcYsfZaZ\",\"YtWMf3a7u9jdzssmC\",\"kp2ZbCewZJAbfd7xv\",\"Ygy4NA6ih4QK7DpmJ\",\"R9uaMzX2Y4ND8Cosm\",\"Ya3eHgs8x3unZRLpb\",\"CNc6rmwhbxkxEhHAp\",\"g4NCSxxHqHCGMpWwT\",\"M4vq8ATaS9Jg5X7iP\",\"c7uBxu2rgY77H5d79\",\"jLSZdBseR2kfjt8dL\",\"azAzSkvJd7eyXY9x9\",\"Yp7uvStL97cC9fKkY\",\"u9cRf5kvtpRB5ffB3\",\"3Gf7ikLijfoxabiPY\",\"2Qk2mFu9HBFzrB24i\",\"RtPhDuwmvWNHiBxmG\",\"srJ34BaybkQh3qRkM\",\"oF6TNdvfqZfppqSgK\",\"e9Cknxbx6o7Nb6REs\",\"npp5hesJrst6ghKSM\",\"cgCQDs9i7yChKeAjE\",\"wJTDDTE3TrmSXKP4d\",\"oDtGiNqDMHmhHE3J8\",\"NGvCPuMiAP3xrRLfB\",\"FGEeCTorXbX3WvjFW\",\"hvTAyFPy4pJHdrYJX\",\"8BJyXvRWcrvN3nttS\",\"LwD3CyYSiBfg3mA4r\",\"pdsiGN5LX8wu9R9sD\",\"n4Y5EEGCjmrK99yrt\",\"nBJve5CzG6WAw7WFQ\",\"jyoLggHk8xQKZuoQC\",\"bfYmA3LMvhSrK59cn\",\"9XnGoq9Tv6ut3zTtH\",\"jicWFrNKadYuLhqxh\",\"z47JaNrQMgvuPx5HE\",\"sMcFMPkMJC4Kh6ymj\",\"rPsSEYqwmttMPEuvo\",\"J3d9DFLyw7ZB7KzuN\",\"oyB4Wr4EeZnoDaa8B\",\"pPpmP7xeJzGgK362R\",\"inbiBEY2tizFwkN84\",\"HCfkcKnPs9mrJojdG\",\"PTo9qt93YqGvL8fCa\",\"uxKGACwmZ6FNZsMwE\",\"iHBQAshobhgE3Q3oJ\",\"4WYjScmBWK9eXRzvd\",\"CHvzhtXnv8HTbPQ56\",\"D4b9gGLMJZAtakswd\"],\"total\":151,\"quality\":[4,3,5,4,5,5,4,5,5,5,5,4,5,4,5,4,4]},\"flags\":1},\"subscribers\":[\"Akq3fQcPRgPrWfsye\"],\"summary\":\"Let there be a square matrix, where each square is a rectangle, and a combination of more squares are also rectangles. To find the number of rectangles, Pete sat down and started counting... but that's highly inefficient.\\n\\nCreate a function that takes the order of the matrix as input and returns the number of rectangles in them.\\n\\nExamples\\nrectangles(1) ➞ 1\\n\\nre\",\"tags\":[\"algorithms\",\"math\",\"numbers\"],\"timestamp\":{\"$date\":1562006100668},\"title\":\"How Many Rectangles?\",\"isHidden\":false,\"quality\":4.470588235294118,\"family\":[{\"_id\":\"EePutMiQcitWdEA5s\",\"language\":\"cpp\"},{\"_id\":\"LyytqgmYKzCgBGbxE\",\"language\":\"java\"},{\"_id\":\"fgjtbbeZSy55ftXwa\",\"language\":\"javascript\"},{\"_id\":\"zRm6YDfQHoesdc3rb\",\"language\":\"python3\"},{\"_id\":\"tBfH2RdzwD98xW4rT\",\"language\":\"ruby\"}]}}"]