a["{\"msg\":\"result\",\"id\":\"2369\",\"result\":{\"_id\":\"soifmDAvLsbic9vXH\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"function jumble(str, index) {\\n\\t\\n}\",\"difficulty\":4.111111111111111,\"familyId\":\"9iPP9QGb6dT9XHZu4\",\"instructions\":\"For this challenge, you are given a **string of letters** in alphabetical order and an **index**.  If a list of all the permutations of those **letters** are put in lexicographical order, a legitimate word is located at the given **index**. You are to identify that word.\\n\\nFor example:\\n\\n```\\njumble(\\\"isn\\\", 4) ➞ sin\\\"\\n```\\n\\nThe permutations are:\\n\\n```\\n[\\\"ins\\\", \\\"isn\\\", \\\"nis\\\", \\\"nsi\\\", \\\"sin\\\", \\\"sni\\\"]\\n```\\n\\nThe permutation at index 4 is \\\"sin\\\".\\n\\n### Examples\\n```\\njumble(\\\"em\\\", 1) ➞ \\\"me\\\"\\n\\njumble(\\\"aiv\\\", 5) ➞ \\\"via\\\"\\n\\njumble(\\\"abdeit\\\", 408) ➞ \\\"edabit\\\"\\n\\njumble(\\\"abdeit\\\", 137) ➞ \\\"baited\\\"\\n\\njumble(\\\"abefgilnoruv\\\", 425933017) ➞ \\\"unforgivable\\\"\\n```\\n\\n### Notes\\n- The test case words are heterographs (i.e. all the letters are different).\\n- It is too time-consuming to generate every permutation for some of the longer words (check the **Resources** tab for another way).\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertEquals(jumble(\\\"a\\\", 0), \\\"a\\\")\\nTest.assertEquals(jumble(\\\"abes\\\", 7), \\\"base\\\")\\nTest.assertEquals(jumble(\\\"ginz\\\", 21), \\\"zing\\\")\\nTest.assertEquals(jumble(\\\"acknr\\\", 43), \\\"crank\\\")\\nTest.assertEquals(jumble(\\\"aceghns\\\", 1094), \\\"changes\\\")\\nTest.assertEquals(jumble(\\\"eghilnoprstu\\\", 465433101), \\\"upholstering\\\")\\nTest.assertEquals(jumble(\\\"cdeghinoprtuy\\\", 5510573825), \\\"uncopyrighted\\\")\\nTest.assertEquals(jumble(\\\"acdeghimnorsty\\\", 36994730804), \\\"hydromagnetics\\\")\\nTest.assertEquals(jumble(\\\"acdeghilmoprsty\\\", 191364251720), \\\"dermatoglyphics\\\")\",\"language\":\"javascript\",\"quality\":0,\"summary\":\"For this challenge, you are given a string of letters in alphabetical order and an index.  If a list of all the permutations of those letters are put in lexicographical order, a legitimate word is located at the given index. You are to identify that word.\\n\\nFor example:\\n\\njumble(\\\"isn\\\", 4) ➞ sin\\\"\\n\\nThe permutations are:\\n\\n[\\\"ins\\\", \\\"isn\\\", \\\"nis\\\", \\\"nsi\\\", \\\"sin\\\", \\\"sni\\\"]\\n\",\"tags\":[\"algorithms\",\"numbers\",\"strings\"],\"timestamp\":{\"$date\":1603525157067},\"title\":\"Jumbled Words\",\"stats\":{\"completed\":{\"total\":6,\"ratings\":[5,5,5,5,5,4,2,2,4],\"quality\":[],\"rators\":[\"xn7uGNKeAwPEkP9oA\",\"yjtdwc2AC4jA2RWtn\",\"MsA397u6Nm5fL32H9\",\"pri6c85rX6BakMpwv\"]},\"flags\":0},\"family\":[{\"_id\":\"BxjySPtq2qT8FBb6B\",\"language\":\"cpp\"},{\"_id\":\"soifmDAvLsbic9vXH\",\"language\":\"javascript\"},{\"_id\":\"TuG3DuZnC5MhGSfaY\",\"language\":\"python3\"},{\"_id\":\"cpPiWBZWMFpzuC27A\",\"language\":\"ruby\"}]}}"]