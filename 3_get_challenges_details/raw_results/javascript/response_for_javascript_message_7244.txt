a["{\"msg\":\"result\",\"id\":\"2364\",\"result\":{\"_id\":\"DHXAMErsWL4y98hH6\",\"author\":\"DanielosC\",\"authorId\":\"vn6nR36mdfY8z2zKx\",\"code\":\"function strongPasswordChecker(str) {\\n\\t\\n}\",\"difficulty\":4.066666666666666,\"editorId\":\"vn6nR36mdfY8z2zKx\",\"familyId\":\"LQeCv8H3XDZdc373J\",\"instructions\":\"A password is considered **strong** if all the following conditions are met:\\n\\n1. It has at least 8 characters and at most 20 characters.\\n2. It contains at least one lowercase letter, one uppercase letter and one digit.\\n3. It must NOT contain three repeating characters in a row (e.g. \\\"...aaa...\\\" is weak, but \\\"...aa...a...\\\" is strong, assuming other conditions are met).\\n\\nWrite a function that takes a string `str` and return the **MINIMUM** change required to make it a strong password. If it's already strong, return `0`.\\n\\n### Examples\\n```\\nstrongPasswordChecker(\\\"Edabit!\\\") ➞ 1\\n// 7 characters total, need to add one more digit for a strong password.\\n// 1 minimum change.\\n\\nstrongPasswordChecker(\\\"edabit1!\\\") ➞ 1\\n// 8 characters total, need to add an uppercase letter.\\n// 1 minimum change.\\n\\nstrongPasswordChecker(\\\"EDABITEDABITEDABITEDA\\\") ➞ 3\\n// 21 characters total, only uppercase letters, need to delete one\\n// character and replace two characters, 1 with a digit, 1 with a\\n// lowercase letter.\\n// 3 minimum changes.\\n\\nstrongPasswordChecker(\\\"Edaaaabit!!1\\\") ➞ 1\\n// Contains more than 3 repeating characters in a row - \\\"aaaa\\\", need\\n// to replace an \\\"a\\\" with a different character (e.g. \\\"a3aa\\\" or in some\\n// cases add a character in the middle \\\"aa2aa\\\".\\n// 1 minimum change.\\n```\\n\\n### Notes\\n- Insertion, deletion or replacement of any one character is considered one change.\\n- Spaces will be ignored for this challange.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertEquals(strongPasswordChecker('Edabit!'), 1)\\nTest.assertEquals(strongPasswordChecker('edabit1!'), 1)\\nTest.assertEquals(strongPasswordChecker('EDABITEDABITEDABITEDA'), 3)\\nTest.assertEquals(strongPasswordChecker('Edaaaabit!!1'), 1)\\nTest.assertEquals(strongPasswordChecker('Edab1111111t!!!'), 3)\\nTest.assertEquals(strongPasswordChecker('1234'), 4)\\nTest.assertEquals(strongPasswordChecker('1234ABCD'), 1)\\nTest.assertEquals(strongPasswordChecker('ilikeapples'), 2)\\nTest.assertEquals(strongPasswordChecker('password1234'), 1)\\nTest.assertEquals(strongPasswordChecker('passAword123B!2%##4'), 0)\\nTest.assertEquals(strongPasswordChecker('S$t@r1o2n3gPas3swrd'), 0)\\nTest.assertEquals(strongPasswordChecker('!!2aEd'), 2)\\nTest.assertEquals(strongPasswordChecker('Arewehumanorarewecoders?'), 5)\\nTest.assertEquals(strongPasswordChecker('RosesAreRedVioletsAreBlue'), 6)\\nTest.assertEquals(strongPasswordChecker('Unexpected\\\"{\\\"OnLine32'), 1)\\nTest.assertEquals(strongPasswordChecker('ICanTypeAnythingHereAndGetAwayWithIt'), 17)\\nTest.assertEquals(strongPasswordChecker('orcani?'), 2)\\nTest.assertEquals(strongPasswordChecker('ULTRAstrongP455w0rdthatstoolong'), 11)\\nTest.assertEquals(strongPasswordChecker('7777777777777777777777777'), 11)\\nTest.assertEquals(strongPasswordChecker('aaaaaaaaaaaaaaaaaaaaaaa'), 9)\\nTest.assertEquals(strongPasswordChecker('aaaaaaaa'), 2)\\nTest.assertEquals(strongPasswordChecker('LLLLLLLLLLLLLLLLLLLL'), 6)\\nTest.assertEquals(strongPasswordChecker(''), 8)\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[5,5,5,5,5,3,4,2,5,4,4,3,3,3,5],\"rators\":[\"yjtdwc2AC4jA2RWtn\",\"aEm3Wvj2rFYRL8Lrb\",\"Ek9PiwGewEGH6fcqz\",\"ffB8T76Ye9ygL6QZZ\",\"nLXwBBGP4qdjNh8oz\",\"7hXDHFcBp6ytxjA5f\",\"RnawxQzLEymGXmWFq\",\"va3fDAQm4sqSMoy3R\",\"c7uBxu2rgY77H5d79\",\"jemTNShfp6ymAs3pj\"],\"total\":17,\"quality\":[]},\"flags\":0},\"summary\":\"A password is considered strong if all the following conditions are met:\\n\\nIt has at least 8 characters and at most 20 characters.\\nIt contains at least one lowercase letter, one uppercase letter and one digit.\\nIt must NOT contain three repeating characters in a row (e.g. \\\"...aaa...\\\" is weak, but \\\"...aa...a...\\\" is strong, assuming other conditions are met).\\n\\nWri\",\"tags\":[\"logic\",\"numbers\",\"higher_order_functions\",\"functional_programming\"],\"timestamp\":{\"$date\":1594981912607},\"title\":\"Strong Password Checker\",\"quality\":0,\"family\":[{\"_id\":\"wSo3ozqxsfWAeSFWR\",\"language\":\"cpp\"},{\"_id\":\"DHXAMErsWL4y98hH6\",\"language\":\"javascript\"},{\"_id\":\"H2NCAro2tdbGavzg7\",\"language\":\"python3\"},{\"_id\":\"HEZ6RW94LR3rgK7vq\",\"language\":\"ruby\"}]}}"]