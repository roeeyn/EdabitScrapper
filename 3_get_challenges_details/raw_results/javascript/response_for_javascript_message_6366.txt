a["{\"msg\":\"result\",\"id\":\"1928\",\"result\":{\"_id\":\"J3HA3p3enpxnMJCmd\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"function longestRun(arr) {\\n\\t\\n}\",\"difficulty\":2.730337078651685,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"Ymm75mEm9qZx3nsuF\",\"instructions\":\"A **consecutive-run** is a list of adjacent, consecutive integers. This list can be either increasing or decreasing. Create a function that takes an array of numbers and returns the length of the longest **consecutive-run**.\\n\\nTo illustrate:\\n\\n```\\nlongestRun([1, 2, 3, 5, 6, 7, 8, 9]) ➞ 5\\n// Two consecutive runs: [1, 2, 3] and [5, 6, 7, 8, 9] (longest).\\n```\\n\\n### Examples\\n```\\nlongestRun([1, 2, 3, 10, 11, 15]) ➞ 3\\n// Longest consecutive-run: [1, 2, 3].\\n\\nlongestRun([5, 4, 2, 1]) ➞ 2\\n// Longest consecutive-run: [5, 4] and [2, 1].\\n\\nlongestRun([3, 5, 7, 10, 15]) ➞ 1\\n// No consecutive runs, so we return 1.\\n```\\n\\n### Notes\\nIf there aren't any consecutive runs (there is a gap between each integer), return `1`.\",\"lab\":\"Test.assertEquals(longestRun([1, 2, 3, 5, 6, 7, 8, 9]), 5)\\nTest.assertEquals(longestRun([1, 2, 3, 10, 11, 15]), 3)\\nTest.assertEquals(longestRun([-7, -6, -5, -4, -3, -2, -1]), 7)\\nTest.assertEquals(longestRun([3, 5, 6, 10, 15]), 2)\\nTest.assertEquals(longestRun([3, 5, 7, 10, 15]), 1)\\nTest.assertEquals(longestRun([5, 4, 3, 2, 1]), 5)\\nTest.assertEquals(longestRun([5, 4, 2, 1]), 2)\\nTest.assertEquals(longestRun([10, 9, 0, 5]), 2)\\nTest.assertEquals(longestRun([1, 2, 3, 2, 1]), 3)\\nTest.assertEquals(longestRun([10, 9, 8, 7, 6, 2, 1]), 5)\",\"language\":\"javascript\",\"summary\":\"A consecutive-run is a list of adjacent, consecutive integers. This list can be either increasing or decreasing. Create a function that takes an array of numbers and returns the length of the longest consecutive-run.\\n\\nTo illustrate:\\n\\nlongestRun([1, 2, 3, 5, 6, 7, 8, 9]) ➞ 5\\n// Two consecutive runs: [1, 2, 3] and [5, 6, 7, 8, 9] (longest).\\n\\nExamples\\nlongestRun(\",\"tags\":[\"arrays\",\"control_flow\",\"logic\",\"loops\"],\"timestamp\":{\"$date\":1553224851819},\"title\":\"Longest Consecutive Run\",\"stats\":{\"completed\":{\"total\":106,\"ratings\":[2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,4,3,2,3,4,4,4,3,0,3,4,3,3,4,3,3,1,4,3,4,3,3,3,2,2,3,3,4,2,4,4,4,3,2,3,2,2,4,2,0,4,4,2,2,2,2,3,3,2,3,2,4,3,3,2,4,4,2,3,2,4,3,2,2,4,0,4,2,3,3,3,3],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"65dbBZynphj53nXqA\",\"SDtZFL5NzAoCPofXk\",\"RpsjagiNkfsK3MJA5\",\"2NJuDfSqdrF8kHHni\",\"pd8dm7sWLW9cY6dYW\",\"CJnuSjyCBMTbTiibD\",\"Akq3fQcPRgPrWfsye\",\"EjPLq3QSJdGQFJdgW\",\"n5wubRfh6zh8QRymN\",\"yjtdwc2AC4jA2RWtn\",\"EWn8w8P3nNh7knatY\",\"eomLS3wh6tQPN8jtH\",\"aMNhTh35QQAs33ycQ\",\"7LPg6bCRPWBJatJ38\",\"FJsvM5yqKuK9yMk9P\",\"h4jFmtbFn92eA4649\",\"qJCrvofe2G4e8cBXY\",\"McqHxSwhDQB5gXijw\",\"eQdnBfe8riy82SNrK\",\"5Zq3aGdvh4LHBvnJL\",\"FvWKuSqHdXZ7HM2sD\",\"mHT2bJb5SByfJ8yKS\",\"vvv3n9F7PBDE33dry\",\"ydEdzuCCZt4yny9Rq\",\"XKi8iZXBCHCaebSHh\",\"GLtQXwTpmFc9e6BRh\",\"HrPgEHxQxom64ojNZ\",\"AasGs8AeX9Lcb9xJn\",\"3KJgj3d3Aec5zmXe8\",\"vewKwcMeGuk3p3MsN\",\"tcuBoYKNWncRYSrbE\",\"cRpaCxYRmGcN3Nsoj\",\"8tEikq8QhumvnbHXK\",\"Wmq8QjysTQYskk4m7\",\"978CFDwQoiXR6xcq5\",\"dPM2Rk2iMkznyXNEt\",\"YER6iBcpJCuhgrYDN\",\"ze5uQfR4tkjbR96ei\",\"p2woPCQKXuWJCwffJ\",\"dNqjHnaTsgqBFDxTC\",\"a7LBurCmz5n6gECbv\",\"uAS9uKs8KQmp8uhqn\",\"bX6tpTCjwoi6XMMbK\",\"QMq9dcvgpyNK6RAze\",\"Es4eX2stRpyoXeC7f\",\"Kc3SDafimwpZWrATJ\",\"zMCXYFZSsviDCvjnY\",\"M4vq8ATaS9Jg5X7iP\",\"a777e8chPvJkY3tKa\",\"FGEeCTorXbX3WvjFW\",\"W38EbDos95qTTJNzm\",\"MT26yxj3YX95DsyLj\",\"aEm3Wvj2rFYRL8Lrb\",\"kjHKdTBzc77g63Y6P\",\"rC7kdm3SsSX9udEQk\",\"bXaGdBM8FBLHf7N6Y\",\"t48aNJw3qADwvdgKE\",\"g3Bq6N2TtNzEk8oPm\",\"PNaLsSGwFfxXmrsG9\",\"Sm955HCbs4tSPQeJW\",\"c7uBxu2rgY77H5d79\",\"siBnoRg3gQuDfTK99\",\"BdnE4RS5puoxo92mA\",\"JGBCMpnbbi5ztuFoX\",\"9qjfv7J2ESJb6kPPn\",\"3e3GLEpr9WrD5vrJy\",\"eEZ8zeWX8b3SWs84P\",\"xk5yQbwpgTyT2iaeY\",\"CPMT5rbZ83vjP6HBD\",\"8FRLchotaz72NMHZE\",\"kzhaZrk2MprpKCcZv\",\"Q7DRq9PpFycvEJ5wg\",\"zza5WjC8QrHcoDZBF\",\"eTfchdyW4JAworBCN\",\"wJTDDTE3TrmSXKP4d\",\"QmLbe7LJLAoqdgQXZ\",\"mSXdgt48tnZ2xWAuG\",\"nkH3HfJXLMNcBMM79\",\"8BJyXvRWcrvN3nttS\",\"xEhRxkXayY4iMeyH7\",\"igxTNbFK88DewDdDd\",\"8DsMHvxeoun9m3RpY\",\"Yp7uvStL97cC9fKkY\",\"WnogMFYXoyvmBmGkm\",\"s678Wirfor5uYL5T6\",\"KbteEwCafBFMtewGx\",\"Jaa42WatFnthgTtSM\",\"G3mWwA9hdDpSo37nf\",\"WvhqNgudu4hZfWYNC\",\"RE4Mm9T6Q9uygAxGS\"],\"quality\":[5,4,5,5,3,5,5,4,5,5,5]},\"tests\":{\"score\":0,\"voters\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"voters\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"isHidden\":false,\"quality\":4.636363636363637,\"family\":[{\"_id\":\"ivgSXDHDJ2oLhbR4c\",\"language\":\"cpp\"},{\"_id\":\"NwSd26PwgggJquov3\",\"language\":\"java\"},{\"_id\":\"J3HA3p3enpxnMJCmd\",\"language\":\"javascript\"},{\"_id\":\"X9CsA6955cKRApBNH\",\"language\":\"python3\"},{\"_id\":\"jg6pGB2REnk5PzCsm\",\"language\":\"ruby\"}]}}"]