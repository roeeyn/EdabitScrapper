a["{\"msg\":\"result\",\"id\":\"1010\",\"result\":{\"_id\":\"jkkhAZ2C9Zy4SHbtj\",\"author\":\"Werdna\",\"authorId\":\"buX4mCQhtXCfBjeno\",\"code\":\"function lowerTriang(matrix) {\\n\\t\\n}\",\"difficulty\":1.681159420289855,\"familyId\":\"HvaNtGS5LbZ73zmjA\",\"instructions\":\"This challenge concerns _square matrices_ (same number of rows and columns) as the below example illustrates:\\n\\n```\\n[\\n  [1, 2, 3],\\n  [4, 5, 6],\\n  [7, 8, 9]\\n]\\n```\\n\\nThe entries in the diagonal line from the top left to the bottom right form the _main diagonal_ of the matrix. In this case, 1,5,9 form the main diagonal.\\n\\nWrite a function that returns the matrix obtained by replacing the entries _above_ the main diagonal with 0s.\\n\\nFor example, for the matrix above you should return:\\n\\n```\\n[\\n  [1, 0, 0],\\n  [4, 5, 0],\\n  [7, 8, 9]\\n]\\n```\\n\\n### Examples\\n```\\nlowerTriang([\\n  [1, 2, 3],\\n  [4, 5, 6],\\n  [7, 8, 9]\\n]) ➞ [\\n  [1, 0, 0],\\n  [4, 5, 0],\\n  [7, 8, 9]\\n]\\n\\nlowerTriang([\\n  [5, 7],\\n  [7, 9]\\n]) ➞ [\\n  [5, 0],\\n  [7, 9]\\n]\\n\\nlowerTriang([\\n  [1, 8, 8, 1],\\n  [2, 7, 7, 2],\\n  [3, 6, 6, 3],\\n  [4, 5, 5, 4]\\n]) ➞ [\\n  [1, 0, 0, 0],\\n  [2, 7, 0, 0],\\n  [3, 6, 6, 0],\\n  [4, 5, 5, 4]\\n]\\n```\\n\\n### Notes\\n- As in the examples, the size of the matrices will vary (but they will always be square).\\n- In Linear Algebra, matrices with 0s above the diagonal are called _lower triangular matrices_.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertSimilar(lowerTriang(\\n[[1, 2, 3],\\n [4, 5, 6],\\n [7, 8, 9]]),\\n[[1, 0, 0],\\n [4, 5, 0],\\n [7, 8, 9]])\\n\\nTest.assertSimilar(lowerTriang(\\n[[5, 7],\\n [7, 9]]),\\n[[5, 0],\\n [7, 9]])\\n \\nTest.assertSimilar(lowerTriang(\\n[[1, 8, 8, 1],\\n [2, 7, 7, 2],\\n [3, 6, 6, 3],\\n [4, 5, 5, 4]]),\\n[[1, 0, 0, 0],\\n [2, 7, 0, 0],\\n [3, 6, 6, 0],\\n [4, 5, 5, 4]])\\n \\nTest.assertSimilar(lowerTriang(\\n[[1, 0],\\n [7, 3]]),\\n[[1, 0],\\n [7, 3]])\\n \\nTest.assertSimilar(lowerTriang(\\n[[0, 1, 2, 3, 4],\\n [1, 2, 3, 4, 5],\\n [2, 3, 4, 5, 6],\\n [3, 4, 5, 6, 7],\\n [4, 5, 6, 7, 8]]),\\n[[0, 0, 0, 0, 0],\\n [1, 2, 0, 0, 0],\\n [2, 3, 4, 0, 0],\\n [3, 4, 5, 6, 0],\\n [4, 5, 6, 7, 8]])\\n\\n// Author: Luis Pereira\",\"language\":\"javascript\",\"quality\":4.826086956521739,\"summary\":\"This challenge concerns square matrices (same number of rows and columns) as the below example illustrates:\\n\\n[\\n  [1, 2, 3],\\n  [4, 5, 6],\\n  [7, 8, 9]\\n]\\n\\nThe entries in the diagonal line from the top left to the bottom right form the main diagonal of the matrix. In this case, 1,5,9 form the main diagonal.\\n\\nWrite a function that returns the matrix obtained by rep\",\"tags\":[\"arrays\",\"language_fundamentals\",\"math\",\"loops\"],\"timestamp\":{\"$date\":1608472112380},\"title\":\"The Bottom of the Matrix\",\"stats\":{\"completed\":{\"total\":92,\"ratings\":[2,2,2,2,2,1,0,0,2,1,0,2,2,1,2,2,2,2,2,1,1,2,0,1,2,1,2,1,1,1,1,3,2,4,2,2,2,1,2,0,2,2,2,2,2,2,1,5,2,2,2,1,1,2,2,3,2,2,2,2,2,1,2,2,2,0,2,1,2],\"quality\":[5,5,5,3,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,4,5],\"rators\":[\"buX4mCQhtXCfBjeno\",\"g4NCSxxHqHCGMpWwT\",\"yjtdwc2AC4jA2RWtn\",\"2Ni3PzJAc5fAhqBkb\",\"QRv96jmNaYsWkxQEG\",\"jyCByAZwu576xDwEL\",\"kp2ZbCewZJAbfd7xv\",\"Tcjwt2SmN9jxZ8thX\",\"7tspwQ8kKXvsR9gdh\",\"qWR7eXxBiNee22A5u\",\"LCn6qz2GoMr5577Rd\",\"J7d397iB5GuWRAMfg\",\"rD3W3sHWhSKpAS6r2\",\"e9Cknxbx6o7Nb6REs\",\"m6qKkBY4aPWziyJTj\",\"nkH3HfJXLMNcBMM79\",\"oyB4Wr4EeZnoDaa8B\",\"f3RAbWvE6uESq7KE5\",\"mHT2bJb5SByfJ8yKS\",\"5hHf2e9zimbmxMqqF\",\"pWJWQDhqzDSmfaFam\",\"6BpBQnSGhzgvhXrEy\",\"Po3v3dHCk6wYGKMwi\",\"Yp7uvStL97cC9fKkY\",\"HRpELhvG59jPywCdH\",\"qzzyGD7fCCDjX25za\",\"8EJ4j2fcfjTJ7Zrzu\",\"6vfjruFp8ZpRSi3AT\",\"2Qk2mFu9HBFzrB24i\",\"u9cRf5kvtpRB5ffB3\",\"erQgJKaHaETRcqs4x\",\"CNc6rmwhbxkxEhHAp\",\"z5ebtimXwFFJdYxoa\",\"fEyo577DvG6E3Gdeg\",\"8BJyXvRWcrvN3nttS\",\"AFfw7cGg83uYk2Miy\",\"srJ34BaybkQh3qRkM\",\"R9uaMzX2Y4ND8Cosm\",\"xn7uGNKeAwPEkP9oA\",\"ApqWTmEEkTCsDou48\",\"npp5hesJrst6ghKSM\",\"CH53jGETBeJTummf3\",\"STipuJs6kBvPqqsSE\",\"Ya3eHgs8x3unZRLpb\",\"wJTDDTE3TrmSXKP4d\",\"M4vq8ATaS9Jg5X7iP\",\"RE4Mm9T6Q9uygAxGS\",\"zw7g7T8wE5R5CBhXr\",\"65dbBZynphj53nXqA\",\"DPi9QGLctq2y76KuE\",\"733qgZ7ZSSSrzbXGw\",\"pi76g3eRpnKrhee2a\",\"vGKxRcDYDsXzTQuEQ\",\"oDtGiNqDMHmhHE3J8\",\"bX6tpTCjwoi6XMMbK\",\"LwD3CyYSiBfg3mA4r\",\"jemTNShfp6ymAs3pj\",\"AasGs8AeX9Lcb9xJn\",\"NGvCPuMiAP3xrRLfB\",\"tAF9Gf6PiGogbZuWs\",\"Kt6oGAfrymXmAnn2d\",\"rpNNPWzdFCc9TzKMz\",\"nBJve5CzG6WAw7WFQ\",\"gXTAie79kiw28tx5u\",\"Q7Yxda7dqKeYPs2Db\",\"jyoLggHk8xQKZuoQC\",\"2ZRsXKpD5Kdi8C4iF\",\"yHd3HyZwSMozqhR6P\",\"mpLFbFKjY6u3nsDMv\",\"bfYmA3LMvhSrK59cn\",\"jicWFrNKadYuLhqxh\",\"z47JaNrQMgvuPx5HE\",\"FGEeCTorXbX3WvjFW\",\"eomLS3wh6tQPN8jtH\",\"XdCcStvrRDTJAN5Zc\",\"RbBEqArJC6CJ3SqkL\",\"7i6b4u3CZWBFbKxaC\",\"yvxTrkSj3i6bnJfgq\",\"T2wdGRjJkbzTLqD7d\",\"Y45skkww4B2iNKjoc\",\"LPZ2QKCoB8q6rG25c\",\"ecEBGmi9dPBxyxfYz\",\"JZ7hzwyx5hgqyACcK\",\"CHvzhtXnv8HTbPQ56\",\"jnyub52Fi79drGvow\",\"WnogMFYXoyvmBmGkm\",\"uxKGACwmZ6FNZsMwE\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"sMP2GFYKT23oDMRxW\",\"language\":\"cpp\"},{\"_id\":\"jkkhAZ2C9Zy4SHbtj\",\"language\":\"javascript\"},{\"_id\":\"SqbyWYwqChQroXfhu\",\"language\":\"python3\"},{\"_id\":\"mSxiBYttTKfaGd6qZ\",\"language\":\"ruby\"}]}}"]