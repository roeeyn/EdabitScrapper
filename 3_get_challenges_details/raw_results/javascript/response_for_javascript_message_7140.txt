a["{\"msg\":\"result\",\"id\":\"2312\",\"result\":{\"_id\":\"DHsH9FpFrt66ei7ku\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"function extremes(arr) {\\n\\t// your recursive solution here\\n\\treturn extremes(arr)\\n}\",\"difficulty\":3.727272727272727,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"LF57bBJMSSPMoQqyC\",\"instructions\":\"Write a function that extracts the upper and lower bounds of the elements in the array, value-wise, including its corresponding index, array-wise. Although these tasks are achievable with the use of some built-in Array functions, the purpose and intent of this challenge is for your to solve it recursively.\\n\\n### Output Structure\\n```\\n[{index: lower_bound}, {index: upper_bound}]\\n```\\n\\n### Examples\\n```\\nextremes([107, 19, -18, -79, 36, 23, 97]) ➞ [{3: -79}, {0: 107}]\\n\\nextremes([31, 7, 2, 13, 7, 9, 10, 13]) ➞ [{2: 2}, {0: 31}]\\n\\nextremes([4, 4, 4, 4, 4, 4]) ➞ \\\"No bounds!\\\"\\n```\\n\\n### Notes\\n- Return `\\\"No bounds!\\\"` if the lower bound happens to be equal to its supposed upper bound (because logically and numerically, lower and upper bound values cannot be equal, thus, their respective names (see above example).\\n- The use of `Math`'s `max()` and `min()` functions are restricted.\\n- You can read more about recursion (see **Resources** tab) if you aren't familiar with it yet or haven't fully understood the concept before taking up this challenge.\\n- If you think recursion is fun, you can find a collection of those challenges [here](https://edabit.com/collection/YJH4pAyqDbhLc4STc).\",\"isFree\":false,\"isHidden\":false,\"lab\":\"const noMinMax = f => !RegExp('Math|min|max','gm').test(f)\\nconst recursive = f => (`${f}`.match(RegExp(`${f.name}`,'gm'))||[]).length > +(/function/.test(f))\\nTest.assertNotEquals(noMinMax(extremes), false, \\\"Math's min() and max() functions aren't allowed!\\\")\\nTest.assertNotEquals(recursive(extremes), false, \\\"Recursion is required!\\\")\\n\\nlet [numVectors, resVectors] = [[\\n  [107, 19, -18, -79, 36, 23, 97],\\n  [31, 7, 2, 13, 7, 9, 10, 13],\\n  [4, 4, 4, 4, 4, 4],\\n  [-31, -7, -13, -7, -9, -13],\\n  [1, 3, 9, 5, -1, 7, 9, 49],\\n  [63, 77, 13, 75, 91, 113],\\n  [6, 6, 6, 6, 6, 6]], [\\n  [{3: -79}, {0: 107}],\\n  [{2: 2}, {0: 31}],\\n  \\\"No bounds!\\\",\\n  [{0: -31}, {1: -7}],\\n  [{4: -1}, {7: 49}],\\n  [{2: 13}, {5: 113}],\\n  \\\"No bounds!\\\"\\n]]\\nfor (let i in numVectors) typeof resVectors[i] == 'string' ?\\n  Test.assertEquals(extremes(numVectors[i]), resVectors[i]):\\n  Test.assertSimilar(extremes(numVectors[i]), resVectors[i])\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[5,5,5,5,5,2,5,2,3,2,3,5,2,5,5,3,2,3,5,3,5,2],\"rators\":[\"aEm3Wvj2rFYRL8Lrb\",\"a777e8chPvJkY3tKa\",\"yjtdwc2AC4jA2RWtn\",\"mHT2bJb5SByfJ8yKS\",\"n5wubRfh6zh8QRymN\",\"va3fDAQm4sqSMoy3R\",\"buX4mCQhtXCfBjeno\",\"HmQu5Cd2KivaXhaR7\",\"JGBCMpnbbi5ztuFoX\",\"n8Hd6QsHvWcBZdXFF\",\"DPi9QGLctq2y76KuE\",\"wJTDDTE3TrmSXKP4d\",\"PH32cNxBjrK4a28sn\",\"tAF9Gf6PiGogbZuWs\",\"TtrXnGzi9MyhLvWiz\",\"8BJyXvRWcrvN3nttS\",\"P8bXFR4cHwFia9rNM\"],\"total\":19,\"quality\":[]},\"flags\":0},\"summary\":\"Write a function that extracts the upper and lower bounds of the elements in the array, value-wise, including its corresponding index, array-wise. Although these tasks are achievable with the use of some built-in Array functions, the purpose and intent of this challenge is for your to solve it recursively.\\n\\nOutput Structure\\n[{index: lowerbound}, {index: upperb\",\"tags\":[\"recursion\",\"arrays\"],\"timestamp\":{\"$date\":1595700304709},\"title\":\"Recursion: Extreme Indices and Values\",\"quality\":0,\"family\":[{\"_id\":\"DHsH9FpFrt66ei7ku\",\"language\":\"javascript\"},{\"_id\":\"5hiiBo2RNRqCcRk2u\",\"language\":\"python3\"}]}}"]