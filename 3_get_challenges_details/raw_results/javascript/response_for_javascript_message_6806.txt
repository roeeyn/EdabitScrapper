a["{\"msg\":\"result\",\"id\":\"2146\",\"result\":{\"_id\":\"RRnQGsi222hiDjdkz\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"function climb(stamina, obstacles) {\\n\\t\\n}\",\"difficulty\":2.9696969696969697,\"familyId\":\"LqKY76QmmePhtLrk8\",\"instructions\":\"You are in some climbing competition. You start with some stamina which is a positive integer number. And you have obstacles in an array. Each number in array represents obstacle height.\\n\\nWhile climbing up you lose 2 stamina for up to 1 meter climbed. So if you climb 0.3m up you lose 2 stamina, if you climb 1m you lose 2 stamina, if you climb 1.8m you lose 4 stamina(2 for 1m and 2 for 0.8m) and so on.\\n\\nWhile climbing down you lose 1 stamina for up to 1 meter climbed. So if you climb 0.5m you lose 1 stamina, if you climb 1,2m you lose 2 stamina (1 for 1m and 1 for 0.2m)  etc.\\n\\nYou start by standing on first obstacle in array.\\n\\nGiven a stamina number and an array of obstacles write a function that returns how many obstacles you can pass.\\n\\n### Examples\\n```\\nclimb(5, [5, 4.2, 3, 3.5, 6, 4, 6, 8, 1]) ➞ 3\\n```\\n\\nStarting with 5 stamina.\\n\\nCliming down from 5m to 4.2m ➞ 0.8m so we lose 1 stamina (so stamina =4) and we pass 1 obstacle.\\n\\nFrom 4.2m to 3m we climb down 1.2m so we lose 2 stamina (so stamina = 2) and we pass 2 obstacles in total.\\n\\nFrom 3m to 3.5m we climb up 0.5m so we lose 2 stamina (stamina=0 - exhaustion!) and we pass 3 obstacles in total.\\n\\nWe can't go further becouse we don't have stamina to do so.\\n\\n```\\nclimb(10, [5, 4.2, 3, 3.5, 6, 4, 6, 8, 1]) ➞ 3\\n```\\n\\nSame example as above but more stamina so when we are standing on 3.5m obstacle we have 5 stamina left.\\n\\nTo climb up from 3.5m to 6m we would need 6 stamina (0.5m +1m +1m ➞2+2+2) but we have only 5 so we can't got further.\\n\\n### Notes\\n- In all test cases: Stamina - integer greater than 0, all numbers in arrays are positive floats or integers.\\n- Result should be an integer.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertEquals(climb(5,[5, 4.2, 3, 3.5, 6, 4, 6, 8, 1]), 3)\\nTest.assertEquals(climb(10,[5, 4.2, 3, 3.5, 6, 4, 6, 8, 1]), 3)\\nTest.assertEquals(climb(20,[5, 4.2, 3, 3.5, 6, 4, 6, 8, 1]), 6)\\nTest.assertEquals(climb(100,[5, 4.2, 3, 3.5, 6, 4, 6, 8, 1]), 8)\\nTest.assertEquals(climb(5,[0, 1, 2.5, 0.8]), 1)\\nTest.assertEquals(climb(10,[0, 1, 2.5, 0.8]), 3)\\nTest.assertEquals(climb(10,[0.3, 2, 2.8, 3, 3, 0.8, 3.2,2,0]), 4)\\nTest.assertEquals(climb(11,[0.3, 2, 2.8, 3, 3, 0.8, 3.2,2,0]), 5)\\nTest.assertEquals(climb(12,[0.3, 2, 2.8, 3, 3, 0.8, 3.2,2,0]), 5)\\nTest.assertEquals(climb(13,[0.3, 2, 2.8, 3, 3, 0.8, 3.2,2,0]), 5)\\nTest.assertEquals(climb(14,[0.3, 2, 2.8, 3, 3, 0.8, 3.2,2,0]), 5)\\nTest.assertEquals(climb(15,[0.3, 2, 2.8, 3, 3, 0.8, 3.2,2,0]), 5)\\nTest.assertEquals(climb(16,[0.3, 2, 2.8, 3, 3, 0.8, 3.2,2,0]), 5)\\nTest.assertEquals(climb(17,[0.3, 2, 2.8, 3, 3, 0.8, 3.2,2,0]), 6)\\nTest.assertEquals(climb(18,[0.3, 2, 2.8, 3, 3, 0.8, 3.2,2,0]), 6)\\nTest.assertEquals(climb(19,[0.3, 2, 2.8, 3, 3, 0.8, 3.2,2,0]), 7)\\nTest.assertEquals(climb(20,[0.3, 2, 2.8, 3, 3, 0.8, 3.2,2,0]), 7)\\nTest.assertEquals(climb(30,[0.3, 2, 2.8, 3, 3, 0.8, 3.2,2,0]), 8)\\nTest.assertEquals(climb(15,[0.3, 2, 2.8, 3, 3, 0.8, 3.2,2,0]), 5)\",\"language\":\"javascript\",\"quality\":0,\"summary\":\"You are in some climbing competition. You start with some stamina witch is a positive integer number. And you have obstacles in an array. Each number in array represents obstacle height.\\n\\nWhile climbing up you lose 2 stamina for up to 1 meter climbed. So if you climb 0.3m up you lose 2 stamina, if you climb 1m you lose 2 stamina, if you climb 1.8m you lose 4 s\",\"tags\":[\"algorithms\",\"arrays\",\"conditions\",\"logic\"],\"timestamp\":{\"$date\":1606284853461},\"title\":\"Climbing Competition\",\"stats\":{\"completed\":{\"total\":34,\"ratings\":[3,3,3,3,3,3,2,2,1,2,4,3,5,3,3,4,4,5,1,5,3,0,4,4,2,3,3,3,3,4,2,3,2],\"quality\":[],\"rators\":[\"jM9uvNLzZQYD2zCqf\",\"JQMguEz42aLhi7cTF\",\"M4vq8ATaS9Jg5X7iP\",\"yjtdwc2AC4jA2RWtn\",\"CNc6rmwhbxkxEhHAp\",\"SYEuojZtP6yLXryHv\",\"5nHtgdY8F2FbAMawq\",\"WERc8adGSsPMPuNwu\",\"ShrXg4RHgnyFjzJ8w\",\"Yp7uvStL97cC9fKkY\",\"DPi9QGLctq2y76KuE\",\"TtrXnGzi9MyhLvWiz\",\"8BJyXvRWcrvN3nttS\",\"2qXENQHX5B2GyXXMy\",\"7Kd94f2NEhLKJkQeq\",\"YTbMijQSovDcXPaBe\",\"AgPJLZHHt3xyoxETk\",\"tAF9Gf6PiGogbZuWs\",\"wmXGyP6TsAozpdvsS\",\"L7XKSc9wfjSBj78nN\",\"Bc74e6iknZDv3zTyv\",\"TocFLY9ASxPKstAAs\",\"WoJnvn9PwoZZaw3NK\",\"4BizLfYXBvkypztF2\",\"ob3vWqmpSw3mfqDag\",\"qGmpGvK483qX9z3EQ\",\"4aMvPFXKvnCAoLGwG\",\"yHKbAXpAhfDspZbsc\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"YnxEtExwdAzokLs8a\",\"language\":\"cpp\"},{\"_id\":\"RRnQGsi222hiDjdkz\",\"language\":\"javascript\"},{\"_id\":\"Q7oecYfjkq7tHwPoA\",\"language\":\"python3\"},{\"_id\":\"49KqXvirxJegPyQFC\",\"language\":\"ruby\"}]}}"]