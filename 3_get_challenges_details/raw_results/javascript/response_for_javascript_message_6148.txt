a["{\"msg\":\"result\",\"id\":\"1821\",\"result\":{\"_id\":\"JxM8RyFw42TraEyfN\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"function postfix(expr) {\\n\\t\\n}\",\"difficulty\":2.6382978723404253,\"familyId\":\"TKYLxrmT9d3KBWauW\",\"instructions\":\"Postfix notation is a mathematical notation in which operators follow their operands. In other words, `pfexp1 pfexp2 op`, where `pfexp1` and `pfexp2` are both postfix expressions.\\n\\nSome examples:\\n- `2 2 +` is the postfix notation of the expression `2 + 2`.\\n- `2 3 * 1 - 5 /` is the postfix notation of the expression `((2 * 3) - 1) / 5`.\\n\\nHere you have to compute the result from a postfix expression.\\n\\n### Examples\\n```\\npostfix(\\\"2 2 +\\\") ➞ 4\\n// 2 + 2 = 4\\n\\npostfix(\\\"2 3 * 1 - 5 /\\\") ➞ 1\\n// ((2 * 3) - 1) / 5 = (6 - 1) / 5 = 5 / 5 = 1\\n```\\n\\n### Note\\n- Operators and operands are separated by a space.\\n- The operators `+, -, *, /` may be supported.\",\"isHidden\":false,\"lab\":\"Test.assertEquals(postfix(\\\"2 2 +\\\"), 4, \\\"See example #1\\\")\\nTest.assertEquals(postfix(\\\"2 3 * 1 - 5 /\\\"), 1, \\\"See example #2\\\")\\nTest.assertEquals(postfix(\\\"5\\\"), 5)\\nTest.assertEquals(postfix(\\\"10 10 * 10 /\\\"), 10)\\nTest.assertEquals(postfix(\\\"5 6 * 2 1 + /\\\"), 10)\\nTest.assertEquals(postfix(\\\"1 1 + 2 2 + -\\\"), -2)\\nTest.assertEquals(postfix(\\\"8 4 / 9 * 3 1 * /\\\"), 6)\",\"language\":\"javascript\",\"summary\":\"Postfix notation is a mathematical notation in which operators follow their operands. In other words, pfexp1 pfexp2 op, where pfexp1 and pfexp2 are both postfix expressions.\\n\\nSome examples:\\n2 2 + is the postfix notation of the expression 2 + 2.\\n2 3 * 1 - 5 / is the postfix notation of the expression ((2 * 3) - 1) / 5.\\n\\nHere you have to compute the result from \",\"tags\":[\"data_structures\",\"language_fundamentals\",\"math\"],\"timestamp\":{\"$date\":1579133603422},\"title\":\"Postfix Notation\",\"stats\":{\"completed\":{\"total\":52,\"ratings\":[2,2,2,2,2,1,1,3,2,3,3,4,3,2,2,2,3,3,3,4,4,2,4,2,2,0,1,3,1,3,3,3,2,2,4,1,3,3,5,4,4,4,3,2,4,2,4],\"rators\":[\"yjtdwc2AC4jA2RWtn\",\"cRpaCxYRmGcN3Nsoj\",\"RE4Mm9T6Q9uygAxGS\",\"AasGs8AeX9Lcb9xJn\",\"65dbBZynphj53nXqA\",\"jqbm8L6895JgAtZ6H\",\"FJsvM5yqKuK9yMk9P\",\"5Zq3aGdvh4LHBvnJL\",\"zgoq9MhrL2h75DAMA\",\"2innwjWqxJHo4eRGh\",\"QMq9dcvgpyNK6RAze\",\"a777e8chPvJkY3tKa\",\"pi76g3eRpnKrhee2a\",\"JGBCMpnbbi5ztuFoX\",\"eFjGhq7C7bBKXjT6X\",\"vvcHkhRtqMXgLYRCb\",\"KbnMrx599baroip9W\",\"8raviPK67KKxzQWcF\",\"mHT2bJb5SByfJ8yKS\",\"pmiy6wDq6YBDXfZ3m\",\"h4jFmtbFn92eA4649\",\"rehehi2Tr2mwaEoJE\",\"Nua6T3dBurBy3Qfg9\",\"aEm3Wvj2rFYRL8Lrb\",\"Nb6LYPoQP6KJZt8mz\",\"6BpBQnSGhzgvhXrEy\",\"n5wubRfh6zh8QRymN\",\"q2u8Fbn2uTuxB8uRj\",\"4Xv87xmdSnpYhi8hz\",\"Ya3eHgs8x3unZRLpb\",\"e9Cknxbx6o7Nb6REs\",\"mDWNyaaQ9hvPCRzSd\",\"7Az37RrvMdj95Bv7K\",\"GzfnyRwfWNkkg2YAE\",\"CNc6rmwhbxkxEhHAp\",\"2Qk2mFu9HBFzrB24i\",\"BdnE4RS5puoxo92mA\",\"QRv96jmNaYsWkxQEG\",\"buX4mCQhtXCfBjeno\",\"FKX989iurikcrr3zp\",\"cTyEMBoHkeLQ454CE\",\"5nhmyqLy8M2Yn2HMR\",\"RKKuw76K7sRBMouKq\",\"tAF9Gf6PiGogbZuWs\",\"PH32cNxBjrK4a28sn\",\"ZTTJprKDvFqKGew7c\",\"Hcyqetei9TKHGbLG9\",\"rSJGLYSXMuu3RWjun\",\"oDtGiNqDMHmhHE3J8\"],\"quality\":[5,5,5,3,3,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"quality\":4.428571428571429,\"family\":[{\"_id\":\"k9ZMQ9yY2tGSFEG9G\",\"language\":\"cpp\"},{\"_id\":\"G6dgZvzjWjoDsqECg\",\"language\":\"java\"},{\"_id\":\"JxM8RyFw42TraEyfN\",\"language\":\"javascript\"},{\"_id\":\"79tuQhjqs8fT7zKCY\",\"language\":\"python3\"},{\"_id\":\"MBiAcSAxqBLN4e5B9\",\"language\":\"ruby\"}]}}"]