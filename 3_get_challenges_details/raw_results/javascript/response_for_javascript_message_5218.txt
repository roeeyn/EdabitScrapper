a["{\"msg\":\"result\",\"id\":\"1359\",\"result\":{\"_id\":\"iEDvqagg62roh5q3K\",\"archived\":false,\"author\":\"Pustur\",\"authorId\":\"65dbBZynphj53nXqA\",\"code\":\"const imgurUrlParser = url => {\\n\\t\\n}\",\"difficulty\":2.12751677852349,\"familyId\":\"FkP67HbWZqfDXMKpY\",\"instructions\":\"Create a function that takes an imgur link (as a string) and extracts the unique **id** and **type**. Return an object containing the unique _id_, and a string indicating what _type_ of link it is.\\n\\nThe link could be pointing to:\\n\\n- An album (e.g. `http://imgur.com/a/cjh4E`)\\n- A gallery (e.g. `http://imgur.com/gallery/59npG`)\\n- An image (e.g. `http://imgur.com/OzZUNMM`)\\n- An image (direct link) (e.g. `http://i.imgur.com/altd8Ld.png`)\\n\\n### Examples\\n```\\nimgurUrlParser(\\\"http://imgur.com/a/cjh4E\\\") ➞ { id: \\\"cjh4E\\\", type: \\\"album\\\" }\\n\\nimgurUrlParser(\\\"http://imgur.com/gallery/59npG\\\") ➞ { id: \\\"59npG\\\", type: \\\"gallery\\\" }\\n\\nimgurUrlParser(\\\"http://i.imgur.com/altd8Ld.png\\\") ➞ { id: \\\"altd8Ld\\\", type: \\\"image\\\" }\\n```\\n\\n### Notes\\nThere are a few cases where the link has some changes. Look at the additional tests in the **Tests** tab to know more.\",\"lab\":\"const results = {\\n    album: { id: 'cjh4E', type: 'album' },\\n    gallery: { id: '59npG', type: 'gallery' },\\n    directImage: { id: 'altd8Ld', type: 'image' },\\n    image: { id: 'OzZUNMM', type: 'image' }\\n};\\n\\n// Base tests\\nTest.assertSimilar(\\n    imgurUrlParser('http://imgur.com/a/cjh4E'),\\n    results.album,\\n    'Should work with an album'\\n);\\nTest.assertSimilar(\\n    imgurUrlParser('http://imgur.com/gallery/59npG'),\\n    results.gallery,\\n    'Should work with a gallery'\\n);\\nTest.assertSimilar(\\n    imgurUrlParser('http://imgur.com/OzZUNMM'),\\n    results.image,\\n    'Should work with a single image'\\n);\\nTest.assertSimilar(\\n    imgurUrlParser('http://i.imgur.com/altd8Ld.png'),\\n    results.directImage,\\n    'Should work with a single image (direct link)'\\n);\\n\\n// Additional tests\\nTest.assertSimilar(\\n    imgurUrlParser('http://imgur.com/a/cjh4E/zip'),\\n    results.album,\\n    'Should work with /zip at the end (Yeah it\\\\'s a real thing!)'\\n);\\nTest.assertSimilar(\\n    imgurUrlParser('http://imgur.com/gallery/59npG#g1UvPtF'),\\n    results.gallery,\\n    'Should work with a #hash at the end'\\n);\\nTest.assertSimilar(\\n    imgurUrlParser('www.i.imgur.com/altd8Ld.png'),\\n    results.directImage,\\n    'Should work with www. instead of http://'\\n);\\nTest.assertSimilar(\\n    imgurUrlParser('i.imgur.com/altd8Ld.png'),\\n    results.directImage,\\n    'Should work without http:// and www.'\\n);\",\"language\":\"javascript\",\"summary\":\"Create a function that takes an imgur link (as a string) and extracts the unique id and type. Return an object containing the unique id, and a string indicating what type of link it is.\\n\\nThe link could be pointing to:\\n\\nAn album (e.g. http://imgur.com/a/cjh4E)\\nA gallery (e.g. http://imgur.com/gallery/59npG)\\nAn image (e.g. http://imgur.com/OzZUNMM)\\nAn image (dir\",\"tags\":[\"regex\",\"formatting\",\"objects\"],\"timestamp\":{\"$date\":1494356781423},\"title\":\"Imgur URL Parser\",\"stats\":{\"completed\":{\"total\":167,\"ratings\":[2,2,2,2,2,1,1,1,0,2,2,2,2,1,3,2,1,1,2,2,1,3,2,2,3,1,2,2,2,1,2,0,3,1,1,1,2,0,2,2,2,2,2,2,1,2,2,3,2,2,2,2,2,2,2,2,1,2,2,3,1,2,2,3,2,2,2,2,2,2,4,3,3,4,3,3,2,3,3,2,3,3,2,3,3,3,3,4,3,3,4,2,0,2,2,3,3,0,3,3,2,0,3,2,2,3,2,3,2,3,2,2,3,3,2,0,2,2,2,3,3,3,3,1,3,3,0,3,1,3,2,1,3,2,2,3,3,2,0,3,3,2,2,3,3,3,3,0,3],\"rators\":[\"65dbBZynphj53nXqA\",\"hi7Hvtq2mJfkXEGF2\",\"AgQburWndXwEhgomM\",\"LDc8cMrTShPkzyEXd\",\"jPELakunSfFWk8w2s\",\"xxmeopX7HggJJsvYB\",\"2E8Qgy4SpCppgCfzo\",\"dAe4nADmGE2yjASLr\",\"JzcuZQNK6GD4B4pwB\",\"TwtgrBTHiCnkP584n\",\"C8HNEStupvpdKTkH8\",\"BxsBtPj2p2zrbCBFR\",\"sQTaZGCCsE7BNQzyG\",\"2Qff5QnahxxwNmr99\",\"hy63rX7K3hEfyp8B4\",\"78GGtabNSgpJ4Xz8v\",\"XHngE5iScvztMpnR2\",\"aFRJuqwnonjERJLv5\",\"3yYC3kjZ6PGuLAKKj\",\"aYA3kHFcB2TAkCc8b\",\"uP45nrNKepR2nggn2\",\"KDdxq4jfx6H5bwyPq\",\"oLzaa5CY4RNhMjKEW\",\"q6Q6yRwWxFtegCMPE\",\"qLfQAKu3i6pesd76x\",\"Hz8mnq7xFJZKLymTh\",\"FXNEQsvx4hy6vZoZv\",\"AHuPZEaTZJE2gwhWY\",\"vfyxvy8r2knT8ijxB\",\"RW2wFPbMQniZWPmw4\",\"c5FoJ26xo6Jer46Cv\",\"AhC88RpTjJ8kETcWh\",\"NbsMkYuSFa8LsnZtT\",\"thEsZ7N6X8qfZMbcv\",\"Y8zD7oXK6jJSr4Gnu\",\"v5Fia7ctFNJCwM75m\",\"fMbZnKta63wqpPsqN\",\"uhrxTu3Rdjz8nYA9n\",\"ggj8NF9hiYrJfLqGn\",\"yjffWxryA6SN4hddD\",\"enuhRD8zZn4QDNTc4\",\"HQuhas4KXrETxYk9o\",\"g5noFWaoRtZNcEEAW\",\"6ir9H6TvDxyGL4kvG\",\"m6KK2hYS6fj8EasEe\",\"hrMyNCp6vfPZXzWmT\",\"KPM6XyeJSbTJDDpih\",\"SDtZFL5NzAoCPofXk\",\"XcHCqYmeoqxDsoucx\",\"ak5aPiT6QWpmbnPzD\",\"mfjoiKdHNmtpSW6zu\",\"Jh6sPsgj8yHy95joL\",\"G7bdEb5gSLLR59Fvn\",\"i5bG6SKQwELTkrdkD\",\"bbbpNxM3hgGMCqMn8\",\"mNMQvcxKSSvqqMYCH\",\"oFckF5bB5dGBQKneS\",\"KPDPaGaJ4jGtRusF2\",\"K8retouBZnftajjFi\",\"S7R7voZRxnWjCn8pi\",\"uhP3Z8KkPxySxn2n7\",\"EWn8w8P3nNh7knatY\",\"4pagg6vw2Cjepv7tN\",\"cTasoJQG2iA6FvuK4\",\"eomLS3wh6tQPN8jtH\",\"RE4Mm9T6Q9uygAxGS\",\"T2iNiHxRWvdzWAuJx\",\"Y98rTZgbqEf9Ncugm\",\"ehcK7TA5ve8yY8ijp\",\"FiK2ruyH8KeHLAgoA\",\"KhtxERMHt7uqyQiTc\",\"5zAstL4cjD3iBzkxA\",\"HhLGvPRCyHeforjRk\",\"K54ipu2Y5pZfPngmk\",\"oqojPowaYdkBWhPgS\",\"rTRvHndHZKKRkb9w5\",\"bjn5DTzzaWCP5BDgX\",\"CJnuSjyCBMTbTiibD\",\"Fyb4mdsgHvRdmTcCT\",\"54Ka62KytXRsrLPhZ\",\"FJsvM5yqKuK9yMk9P\",\"bNFi9NhvF22bsNJx3\",\"NEorgj2MMLXcSbYNY\",\"tNb6fyjx9vbEL7Jtk\",\"FHzvDACEZuAjRwL7v\",\"n5wubRfh6zh8QRymN\",\"KAwnrRNbgiZ2uAr8v\",\"yjtdwc2AC4jA2RWtn\",\"R4JQmeA6cYyfXbmLF\",\"5Zq3aGdvh4LHBvnJL\",\"Q9KQomTTPBsrkAL6c\",\"6BpBQnSGhzgvhXrEy\",\"h8oHrjSdw2iwKYWpk\",\"zw7g7T8wE5R5CBhXr\",\"AasGs8AeX9Lcb9xJn\",\"XKi8iZXBCHCaebSHh\",\"mHT2bJb5SByfJ8yKS\",\"DHwbkbzYNpmkSFT7u\",\"xqpkjdADCbqtqJqLh\",\"jqbm8L6895JgAtZ6H\",\"3cxGof3W6vc98mE4x\",\"MRedsQ5gbonhjmZzW\",\"EAuL56kpyLytw4RcR\",\"BdvdJYwHZr7JpkHsn\",\"z6QfbuG6TXE7GKynQ\",\"QEhgdaBYvvTH4GpoN\",\"vDNHAFXgogPbiPikE\",\"Nv5a34gxg5yvLKRW8\",\"JGBCMpnbbi5ztuFoX\",\"p2woPCQKXuWJCwffJ\",\"mzqzciuSHtd3xRqEd\",\"3aZvfgr2H2WF8Yog2\",\"K5aiXBRdbasfbnad4\",\"Q75jsoXjhTXJRrw8z\",\"sBcsrC5paZm9nxjot\",\"M4vq8ATaS9Jg5X7iP\",\"a777e8chPvJkY3tKa\",\"ZcmrtSpqFnCBEK5YE\",\"RRFsDNRaKW6h9tF3Y\",\"aEm3Wvj2rFYRL8Lrb\",\"eFjGhq7C7bBKXjT6X\",\"ttuGK7od8simjgmCJ\",\"PH32cNxBjrK4a28sn\",\"s7Qqx4Jnuq85iB7Lw\",\"Ek9PiwGewEGH6fcqz\",\"YQ39kq5kadqqttyyc\",\"jAB3aWnAqfpkehBqt\",\"YmMgWhzhHhQLmGGgH\",\"8jM9k53NtydaDgeyy\",\"buX4mCQhtXCfBjeno\",\"uyRiLJfC2NszHyyGs\",\"CNc6rmwhbxkxEhHAp\",\"LMqMrKGmiG5WnuSDW\",\"sySmCuRJCCi2dtLLM\",\"YLTZRjM78Wi9J9Re4\",\"yK7zzK2aGJwuWKHRL\",\"vGKxRcDYDsXzTQuEQ\",\"GscGqdEtfaRvYgeEn\",\"WQuQsuiMdbZkSSphR\",\"6P9KgzXeJtZ6ejQcu\",\"g4NCSxxHqHCGMpWwT\",\"gGwDyEJeAMCrbhprW\",\"YP37e5mBT8oWJrpuN\",\"mDWNyaaQ9hvPCRzSd\",\"ZW9T9KftoyC3rFGQP\",\"RtPhDuwmvWNHiBxmG\",\"2Qk2mFu9HBFzrB24i\",\"CH53jGETBeJTummf3\",\"xf62ZuMNwztfphYmo\",\"QvEXmSEo3ANp3yPyH\",\"Xk2g4CNFAnYcvxiSr\",\"oDtGiNqDMHmhHE3J8\",\"MgApNpYom9yjZpo3S\",\"Q7Yxda7dqKeYPs2Db\",\"PTo9qt93YqGvL8fCa\",\"76rZ57Yc5w8KcuR4S\",\"Ya3eHgs8x3unZRLpb\",\"ThaiAKWWDw2W4QfJh\",\"xCpLpG5ofmvm2YiyH\",\"5QFAiep6RrWgJEbJZ\"],\"quality\":[5,4,5,5,5,5,5,3,5,5,5,5,5,5,3]},\"complaints\":{\"total\":1,\"reasons\":[[\"bad_resources\"]],\"skippers\":[\"65dbBZynphj53nXqA\",\"P7Q8RtBWLtwL7Czxi\"]},\"instructions\":{\"score\":3.5500000000000003,\"voters\":[\"TW5sH8t6xdhGhNEoW\",\"xv2WGQMNBh8xxXheW\"]},\"tests\":{\"score\":0,\"voters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.666666666666667,\"family\":[{\"_id\":\"iEDvqagg62roh5q3K\",\"language\":\"javascript\"},{\"_id\":\"rSpNwuYZSjZS6AsMv\",\"language\":\"python3\"},{\"_id\":\"34hXT5FfZKRRYmkik\",\"language\":\"ruby\"}]}}"]