a["{\"msg\":\"result\",\"id\":\"1113\",\"result\":{\"_id\":\"iKRmj2Q6GQHkAXXxf\",\"archived\":false,\"author\":\"VeryKnave\",\"authorId\":\"RW2wFPbMQniZWPmw4\",\"code\":\"function textToNumberBinary(str) {\\n\\t\\n}\",\"difficulty\":1.7875457875457876,\"familyId\":\"Ynj32Pw8Tms9EE5gp\",\"instructions\":\"Create a function that takes a string as an argument. The function must return a string containing 1s and 0s based on the string argument's words. If any word in the argument is not equal to \\\"zero\\\" or \\\"one\\\" (case insensitive), you should ignore it. The returned string's length should be a multiple of 8, if the string is not a multiple of 8 you should remove the numbers in excess.\\n\\n### Examples\\n```\\ntextToNumberBinary(\\\"zero one zero one zero one zero one\\\") ➞ \\\"01010101\\\"\\n\\ntextToNumberBinary(\\\"Zero one zero ONE zero one zero one\\\") ➞ \\\"01010101\\\"\\n\\ntextToNumberBinary(\\\"zero one zero one zero one zero one one two\\\") ➞ \\\"01010101\\\"\\n\\ntextToNumberBinary(\\\"zero one zero one zero one zero three\\\") ➞ \\\"\\\"\\n\\ntextToNumberBinary(\\\"one one\\\") ➞ \\\"\\\"\\n```\\n\\n### Notes\\nYou must return the result as a string.\",\"lab\":\"Test.assertEquals(textToNumberBinary('one one one one zero zero zero zero'), \\\"11110000\\\")\\nTest.assertEquals(textToNumberBinary('one Zero zero one zero zero one one one one one zero oNe one one zero one zerO'), \\\"1001001111101110\\\")\\nTest.assertEquals(textToNumberBinary('one zero one'), \\\"\\\")\\nTest.assertEquals(textToNumberBinary('one zero zero one zero ten one one one one two'), \\\"10010111\\\")\\nTest.assertEquals(textToNumberBinary('One zero zero one zero one one one zero one one zero zero zero zero one zero one one one zero one one zero zero zero zero one zero one one one zero one one zero zero zero zero one zero one one one zero one one zero zero zero zero one zero one one one zero one one zero zero zero zero one zero'), \\\"1001011101100001011101100001011101100001011101100001011101100001\\\")\\nTest.assertEquals(textToNumberBinary('TWO one zero one one zero one zero'), \\\"\\\")\\nTest.assertEquals(textToNumberBinary('TWO one zero one one zero one zero one'), \\\"10110101\\\")\",\"language\":\"javascript\",\"summary\":\"Create a function that takes a string as an argument. The function must return a string containing 1s and 0s based on the string argument's words. If any word in the argument is not equal to \\\"zero\\\" or \\\"one\\\" (case insensitive), you should ignore it. The returned string's length should be a multiple of 8, if the string is not a multiple of 8 you should remove th\",\"tags\":[\"loops\",\"logic\",\"arrays\",\"formatting\"],\"timestamp\":{\"$date\":1504956910615},\"title\":\"Convert \\\"Zero\\\" and \\\"One\\\" to \\\"1\\\" and \\\"0\\\"\",\"stats\":{\"completed\":{\"total\":320,\"ratings\":[1,1,1,1,1,1,1,1,2,2,0,1,1,1,3,2,1,2,2,2,2,2,1,2,2,1,1,2,1,0,2,1,1,2,1,1,2,1,2,1,2,2,1,2,4,0,3,1,1,2,3,1,2,1,0,0,1,3,2,2,2,3,2,2,2,3,2,2,2,2,1,2,2,2,2,1,1,2,2,2,2,2,2,1,3,2,1,1,3,2,2,2,2,1,2,2,2,1,2,3,2,2,2,1,2,2,2,1,1,1,2,2,3,2,3,1,2,1,2,3,2,2,2,2,1,2,2,2,2,2,2,2,2,3,2,2,2,3,2,1,2,3,3,2,2,1,0,2,0,1,2,2,2,2,2,2,2,0,3,2,2,2,1,2,2,2,2,2,2,2,2,2,1,2,2,2,2,1,0,2,2,2,2,2,2,2,2,2,0,1,1,3,1,1,1,3,2,2,2,2,2,3,3,1,0,0,2,2,2,2,2,3,3,1,2,1,1,2,2,2,2,3,2,2,2,2,2,1,0,3,1,2,2,2,2,2,2,0,2,2,2,2,2,1,3,3,2,3,1,1,1,2,3,2,2,2,3,2,2,3,2,2,2,2,5,2,1,1,3,2,0,2,3],\"rators\":[\"RW2wFPbMQniZWPmw4\",\"65dbBZynphj53nXqA\",\"AqrghYx9XvRqikgBD\",\"hi7Hvtq2mJfkXEGF2\",\"4s84eRuuktftd8b2r\",\"ehRwRAs4fv46t64ju\",\"XHngE5iScvztMpnR2\",\"3yYC3kjZ6PGuLAKKj\",\"QFPk99QG6SaYydaw7\",\"6QR2QdW689ihtHjan\",\"ARKQhXNZxcvPrFjMC\",\"YWy4hych2iQMzZZrE\",\"q6Q6yRwWxFtegCMPE\",\"YZDuoCYwjwYNgSKbi\",\"ZJbFxFgc2gPCYiw2L\",\"qLfQAKu3i6pesd76x\",\"sQTaZGCCsE7BNQzyG\",\"RduTvbo49LYA5iWZ2\",\"w752dyL65BHLzRgPL\",\"WeLzNxMh8qoJGMvQz\",\"eeowMRRPp2viQ7tin\",\"AgQburWndXwEhgomM\",\"5EqTcaxzSePK6H3zW\",\"C8HNEStupvpdKTkH8\",\"Hz8mnq7xFJZKLymTh\",\"AHuPZEaTZJE2gwhWY\",\"E3bAbAjwFzekBoMGD\",\"nxnQpbE3HaoPHdnX5\",\"rToezGeiciwwEkYNd\",\"RTr38ks7jiZSjuuiv\",\"Y4LBDFh9xn5XWytGZ\",\"28xakryqBxD6BM8Ke\",\"8R9GdggbMGmfqjpJi\",\"TwtgrBTHiCnkP584n\",\"eYaxKg5Tg2Nj5QGSL\",\"Ra3YXDYAJgGi5C7eD\",\"Sct5m4DrJTeY95nZb\",\"FAEsfJvLYqfXaDyuy\",\"2eG4rwnM7dQcXDGbm\",\"c5FoJ26xo6Jer46Cv\",\"gWQgvDsRG9XL6C6bA\",\"9wvm62EwDTz2Gum5t\",\"evcGroxxDwqY3RwHS\",\"AhC88RpTjJ8kETcWh\",\"gguKJ5gCLvwHpqj75\",\"Qz7i9vNnnjbsJdqfW\",\"NbsMkYuSFa8LsnZtT\",\"FGEeCTorXbX3WvjFW\",\"paFeX6ZCjMD5wsbLp\",\"hr9rERhkPtGbbgqdT\",\"thEsZ7N6X8qfZMbcv\",\"ZZA6JdLEBxHGozyWP\",\"RNKWjAHrXt9AiMc3g\",\"DsKb9jk64b5agXGkZ\",\"HprePd4bvpSjQ3tb3\",\"eLQMac37xk5AixBTa\",\"6bcvTf3D8jrhuf3j3\",\"v5Fia7ctFNJCwM75m\",\"ggj8NF9hiYrJfLqGn\",\"3Hr7odFaLvzbALrJx\",\"Xk2g4CNFAnYcvxiSr\",\"Euhr5S6HctxxLhGbD\",\"MmpisT9nmzPJDQuRC\",\"LjPK9TN7eKmyEhErZ\",\"yjffWxryA6SN4hddD\",\"enuhRD8zZn4QDNTc4\",\"SjY6a2v6jMjGraDKz\",\"2hPmJA2nnG3JT8c5N\",\"HQuhas4KXrETxYk9o\",\"g5noFWaoRtZNcEEAW\",\"6ir9H6TvDxyGL4kvG\",\"PdQpuYnPgHqDmfNHx\",\"TzA2B5NYnbpJDxL2y\",\"zWkoBzosokym4fcQB\",\"FnKaqsKZiNvWcyryx\",\"hy63rX7K3hEfyp8B4\",\"SDtZFL5NzAoCPofXk\",\"XcHCqYmeoqxDsoucx\",\"6BpBQnSGhzgvhXrEy\",\"wDXrWvXDyxyNyWQm8\",\"YAzwLNgqc9JpybGzh\",\"ak5aPiT6QWpmbnPzD\",\"f2WHsJ6qZimgyJ6Ci\",\"G7bdEb5gSLLR59Fvn\",\"iqh4KxBqu2WtRfEET\",\"wePP6R6NajFhRntpH\",\"PaHAGkmRMF6oAgzYC\",\"Jwoe6heepP8r77Doj\",\"CcJ4ZDGpXzfsDuLDK\",\"gvHPEbqZiy7MT8ggx\",\"jWXdurfxtiaCq64sz\",\"pXtv3PjRH28xHJq5n\",\"KvRzahL5o3jSKcrDJ\",\"xazeYndpYNBn7oo3Y\",\"eq9dWq4Q6bPCG4AsA\",\"h5EfHWvHzoZuGDiTE\",\"zgoq9MhrL2h75DAMA\",\"gGETo2x9dY5TsWc2b\",\"i5bG6SKQwELTkrdkD\",\"Ev5ee4fRBMYKFvoic\",\"bbbpNxM3hgGMCqMn8\",\"d2PuPtTWQac8SexuC\",\"RYCGMx3ZMxB9nZkcq\",\"kYJupSpPXAe6SSFbR\",\"g4K6nM72TtXLKog5x\",\"LJoLLideh5Aw93oSx\",\"5NLzmYwx5z8qZ7Bar\",\"Nd7Bnx9zF57gn3vLp\",\"WcJLHTiGQ3PjEQaGh\",\"2innwjWqxJHo4eRGh\",\"J67hC7LSEYS5JwhPj\",\"oFckF5bB5dGBQKneS\",\"mNMQvcxKSSvqqMYCH\",\"wcjknenWdPRhrRScv\",\"EjPLq3QSJdGQFJdgW\",\"a835PgGTZqd554oNH\",\"KPDPaGaJ4jGtRusF2\",\"K8retouBZnftajjFi\",\"bjn5DTzzaWCP5BDgX\",\"eomLS3wh6tQPN8jtH\",\"n5wubRfh6zh8QRymN\",\"EWn8w8P3nNh7knatY\",\"rtbs4hJZ4SjSTmajK\",\"T3LejZyRX7bLc5Wb4\",\"4pagg6vw2Cjepv7tN\",\"fmLzKJTPWvtGRAaAN\",\"uhP3Z8KkPxySxn2n7\",\"S7R7voZRxnWjCn8pi\",\"cTasoJQG2iA6FvuK4\",\"CJnuSjyCBMTbTiibD\",\"tQwDooQpBeuprEcRK\",\"5GWkiNRN6xMuRu7Dg\",\"RE4Mm9T6Q9uygAxGS\",\"HrJtdRbvHHNh7tMMo\",\"rTRvHndHZKKRkb9w5\",\"9AdMR4uBsHxRcd86Q\",\"dDFJpK4pXCsQYuHmc\",\"jTcnLNf7SMmDnZrJC\",\"fDnB225m947rtcdSf\",\"Y9Nz9yafaibz54W4o\",\"7gZKfvwaeqsGKXMEN\",\"Q9KQomTTPBsrkAL6c\",\"zw7g7T8wE5R5CBhXr\",\"yjtdwc2AC4jA2RWtn\",\"R4JQmeA6cYyfXbmLF\",\"5Zq3aGdvh4LHBvnJL\",\"XKi8iZXBCHCaebSHh\",\"gSpcNJ8znvGGfWsQH\",\"AasGs8AeX9Lcb9xJn\",\"Akq3fQcPRgPrWfsye\",\"7Nz3GAqN3SMgSiyTT\",\"FJsvM5yqKuK9yMk9P\",\"3awyiorYPgCqqP7Sr\",\"DHwbkbzYNpmkSFT7u\",\"9MrpgKCJqQ6JWMxcF\",\"mHT2bJb5SByfJ8yKS\",\"zNN2fW2pJGpTxBgzx\",\"BdvdJYwHZr7JpkHsn\",\"z6QfbuG6TXE7GKynQ\",\"cRpaCxYRmGcN3Nsoj\",\"EoNHgbWsF6ZQF4eYr\",\"62pkWHr3u8yhu7yLo\",\"ih2aGaqkMaagTgyL2\",\"zTZtM9jRsu8eXie6s\",\"8BFSTCnoe2QggN64c\",\"sbme4fRJjjBjYXRbY\",\"5YCX58nhHT8oRCHyy\",\"ojuGPcgvDKS27va5o\",\"pi76g3eRpnKrhee2a\",\"pd8dm7sWLW9cY6dYW\",\"YER6iBcpJCuhgrYDN\",\"5rDSr5xqy9cwY8BAW\",\"icLSh9atWPDExuuFN\",\"m6QHp4jnrkxMkRxD9\",\"6oNkXuuDRBTFvpr8y\",\"HNkQ7n3hxWvWCd48g\",\"jYXFFTnuWFNo72Rc5\",\"uAS9uKs8KQmp8uhqn\",\"zFt5tvJjusuHyRvkw\",\"Gjusxf7tuPbSiz67J\",\"M4vq8ATaS9Jg5X7iP\",\"6Wh2tK4hp7L55Y5ip\",\"FFHjxhquYLjGJm8y9\",\"tFtQTi3Gd3q7qYw72\",\"cp3X8hk8yNME7qoD9\",\"62aZRXs5YgQQPQXhG\",\"to3gop3Eg8qFzHSjE\",\"ctcNxjxLA6M3J5T7H\",\"QozwRCt9hwyqeFB5i\",\"eBbYHiGAgSLCB5ZNM\",\"aXsdGkqnWnT2iERbM\",\"2ZFoLTxcCARhwc8xX\",\"vtHbevf2tHqe6mRxX\",\"GeB5rvzCKyYEQCtKc\",\"QRv96jmNaYsWkxQEG\",\"eQXwk5zGckM8tCWYH\",\"EjdwxzQcco5GvpyDT\",\"vn6nR36mdfY8z2zKx\",\"FLNpwNP2rzWyJfodd\",\"AXfKGdrgreRYmcrL9\",\"E4kAkbRzMuE6Qojyn\",\"y8ci4crEusJKj7uj4\",\"a777e8chPvJkY3tKa\",\"YDSGng7tgtMwGCTcE\",\"s5tPKxgeMYmeeJn5h\",\"Lzj3w7QjdzikynsGG\",\"buX4mCQhtXCfBjeno\",\"8raviPK67KKxzQWcF\",\"gt72ofBStqvphGX6j\",\"hcC8yjLhSJZZ4rpLz\",\"HcYxcQ5J6dM4WkWHd\",\"E2hpke7mHxAWsw5t9\",\"Pq8vgwKk9RkFyXBxj\",\"C9LKGu2g5hSijvDzA\",\"2zKQWLmEBw8FBs4ZL\",\"z5ebtimXwFFJdYxoa\",\"ttuGK7od8simjgmCJ\",\"tAF9Gf6PiGogbZuWs\",\"pLpcDC3EYx2DDQSdt\",\"J3nt9ieYEnB8cgsqc\",\"nAmJEX7BkHLd9LsG2\",\"qGeKrntEXrM9XkihD\",\"3pb8q4K4jv6jta45d\",\"u9cRf5kvtpRB5ffB3\",\"Po3v3dHCk6wYGKMwi\",\"PGCDJpQMN8Sjn9Gm6\",\"ij9YRJvZz6WbqcGXS\",\"2tCCFm5iefjrRSaxv\",\"Ya3eHgs8x3unZRLpb\",\"mfYrBKwDr4hXSFuuN\",\"aEm3Wvj2rFYRL8Lrb\",\"WvxTdppFgaW3wiFAF\",\"kp2ZbCewZJAbfd7xv\",\"AexdcfQufzNwHzZLw\",\"iqZ8RrsqRJa8uz8uW\",\"gXPEqw63tyJZXEawi\",\"AFfw7cGg83uYk2Miy\",\"vAh63eGRwkuJtoP8v\",\"7wtuhPesfhcYsfZaZ\",\"CNc6rmwhbxkxEhHAp\",\"hktdf8JwMXjnpBDyi\",\"g4NCSxxHqHCGMpWwT\",\"hf955dk2gQhTqjB4J\",\"qWR7eXxBiNee22A5u\",\"bAvZKuLAnKq8mSp5B\",\"wbA5JNSBH27fDQczc\",\"SPCd6ssn7D6P6stCs\",\"bAu5c4okpypb7dqiT\",\"QERPjb5Tomjmsnhnx\",\"szDF5LHhC8djnmam6\",\"Yp7uvStL97cC9fKkY\",\"eqEJPqfuDzt8xJRyr\",\"uJStuabgc6u7GAsrB\",\"eKSJgCaiy4ReJWXTg\",\"3Gf7ikLijfoxabiPY\",\"vewKwcMeGuk3p3MsN\",\"Wv2vJnEj8ywNmARoF\",\"vZq7XbDqYzwQkQRFY\",\"ARBiJ6NWy2v4TtWxc\",\"a3mLdCbHp2D6b2J5K\",\"RtPhDuwmvWNHiBxmG\",\"wGW8m6oeiLd3SLqHu\",\"gewES7xNySdGTuJAa\",\"2jGFfLt34SCjz5qvf\",\"GsrjAqoAdLATJH9qD\",\"2Qk2mFu9HBFzrB24i\",\"dYkHdDyMboq2EQbBj\",\"npp5hesJrst6ghKSM\",\"szQg8dxKNNre3v3Jk\",\"J7d397iB5GuWRAMfg\",\"CH53jGETBeJTummf3\",\"wJTDDTE3TrmSXKP4d\",\"srJ34BaybkQh3qRkM\",\"QAZ5DGaWWYhku4BNz\",\"NGvCPuMiAP3xrRLfB\",\"oDtGiNqDMHmhHE3J8\",\"8BJyXvRWcrvN3nttS\",\"nBJve5CzG6WAw7WFQ\",\"gXTAie79kiw28tx5u\",\"N3CNtWZz4ovJfH9Aw\",\"koWGjiCmozmgwhYsb\",\"jyoLggHk8xQKZuoQC\",\"mpLFbFKjY6u3nsDMv\",\"bfYmA3LMvhSrK59cn\",\"BdnE4RS5puoxo92mA\",\"QguFWo84zgF3c8BGr\",\"LPZ2QKCoB8q6rG25c\",\"CHvzhtXnv8HTbPQ56\",\"rMc3LPajSgm68hNfC\",\"LwD3CyYSiBfg3mA4r\"],\"quality\":[5,5,3,5,5,1,5,5,5,3,5,3,5,3,4,5,5,5,4,5,5]},\"complaints\":{\"total\":1,\"reasons\":[[\"bug\"]],\"skippers\":[\"RW2wFPbMQniZWPmw4\",\"kDGJpSSPa9oq8eBQR\"]},\"instructions\":{\"score\":-21,\"voters\":[\"LfR9Bopm57BMNNnkp\",\"ZxF3LkWqeo4fe4ziK\",\"gd8aJsHgmXMCXwMSR\",\"j9gg82Bp2L7nw7DyJ\",\"9j8nvw7NhJoMm34HF\",\"hGaqGpBTxH9rjfHCA\",\"GjvTpuackj69reB6M\",\"N7KL9CQQTuxyLwxQN\",\"QjGNkRM3Xc78yShJN\"]},\"tests\":{\"score\":-1.05,\"voters\":[\"RB9pkpEpbtSHkeRyQ\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.333333333333333,\"family\":[{\"_id\":\"JFGHZjb7KNJdhfkDC\",\"language\":\"cpp\"},{\"_id\":\"yrL3zkSECbde2Dc8i\",\"language\":\"csharp\"},{\"_id\":\"iKRmj2Q6GQHkAXXxf\",\"language\":\"javascript\"},{\"_id\":\"ypJtHnJPL6Djirdqo\",\"language\":\"php\"},{\"_id\":\"i98e9Czup3kbfoHm3\",\"language\":\"python3\"},{\"_id\":\"FdwKsGKkN8vmBrFM9\",\"language\":\"ruby\"},{\"_id\":\"4gMWk8EmCHnCTE9Jb\",\"language\":\"swift\"}]}}"]