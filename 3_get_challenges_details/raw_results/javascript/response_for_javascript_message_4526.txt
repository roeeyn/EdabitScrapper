a["{\"msg\":\"result\",\"id\":\"1016\",\"result\":{\"_id\":\"zdos9w38tw9QHePRe\",\"author\":\"Andrew Knapp\",\"authorId\":\"4xdSc245S8vAvgDK9\",\"code\":\"function reverseComplement(inputSequence) {\\n\\t\\n}\",\"difficulty\":1.6875,\"familyId\":\"wJCCY9iC5x6DM9hSy\",\"instructions\":\"Create a function that finds the reverse complement of a ribonucleic acid (RNA) strand. The RNA will be represented as a string containing only the characters \\\"A\\\", \\\"C\\\", \\\"G\\\" and \\\"U\\\". Since RNA can only (canonically) allow pairings of A/U and G/C, the complement of an RNA would be as follows:\\n\\nOriginal | Complement\\n:--- | :---\\n\\\"AAA\\\" | \\\"UUU\\\"\\n\\\"UUU\\\" | \\\"AAA\\\"\\n\\\"GGG\\\" | \\\"CCC\\\"\\n\\\"CCC\\\" | \\\"GGG\\\"\\n\\nYour function should find the complement on the right **AND** also reverse the resulting string.\\n\\n### Examples\\n```\\nreverseComplement(\\\"GUGU\\\") ➞ \\\"ACAC\\\"\\n\\nreverseComplement(\\\"UCUCG\\\") ➞ \\\"CGAGA\\\"\\n\\nreverseComplement(\\\"CAGGU\\\") ➞ \\\"ACCUG\\\"\\n```\\n\\n### Notes\\nYou can assume all input seqeuences will be valid.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertEquals(reverseComplement(\\\"GAGGC\\\"), \\\"GCCUC\\\")\\nTest.assertEquals(reverseComplement(\\\"UCUCG\\\"), \\\"CGAGA\\\")\\nTest.assertEquals(reverseComplement(\\\"CAGGU\\\"), \\\"ACCUG\\\")\\nTest.assertEquals(reverseComplement(\\\"UAUUUUUCCA\\\"), \\\"UGGAAAAAUA\\\")\\nTest.assertEquals(reverseComplement(\\\"GUAGGCAACA\\\"), \\\"UGUUGCCUAC\\\")\\nTest.assertEquals(reverseComplement(\\\"UAGCUAAAUC\\\"), \\\"GAUUUAGCUA\\\")\\nTest.assertEquals(reverseComplement(\\\"AUGAGCGUAC\\\"), \\\"GUACGCUCAU\\\")\\nTest.assertEquals(reverseComplement(\\\"UUAUACCCGAGUCGGAUUUGUCACU\\\"), \\\"AGUGACAAAUCCGACUCGGGUAUAA\\\")\\nTest.assertEquals(reverseComplement(\\\"CUUGUGCGCUAUACAUCGAGUAGUUGCUAGAGUAUGUUACUCAAGAGCGC\\\"), \\\"GCGCUCUUGAGUAACAUACUCUAGCAACUACUCGAUGUAUAGCGCACAAG\\\")\\nTest.assertEquals(reverseComplement(\\\"UUAACUGGGGUGAACUGUCCUGAGCCUAUGGAUCUGCGCGCAGGGCUUCAAAUGGAGUUCGGAAUGACCAUCGAUUCUCGAUGUUUGGCACGAAGUCGCA\\\"), \\\"UGCGACUUCGUGCCAAACAUCGAGAAUCGAUGGUCAUUCCGAACUCCAUUUGAAGCCCUGCGCGCAGAUCCAUAGGCUCAGGACAGUUCACCCCAGUUAA\\\")\\nTest.assertEquals(reverseComplement(\\\"GCAGCUCCCCGUCCAUCGAUAAGAGACGUUCCUGCCACGGUUGCUCUACUUUAGAGGUACAACUCUCUUGUAUAAGCCUAGCGUCCUUCCGGAGGAGCCGGGUGCCGUCUCAUGGAUCCGCAUUGUCAGGUUGGCCACGACCAUUCAAAAUUUAACUUACACUUAUGAUGCGAAAUGCACACCAUAGUGCCACCGUGAUAAGUUUCCAGCCGAACUAUGCGAGUUUGCGAGAGGCAGGCUCAAUGCCAGCAGGGGCCAGUGAGGGCUCGAUCUAAAACCCGCUGUUGAUAUUCGUAAACGGUGGCCCGCCUGUUCAGUUACUCUCCAUAUCAUCACCUCAGGUUGAGCCAAAGUAGCCGCGCCGCAUCAAGCUGAGAGAAGUGCACGAGGUUUACACGUAGCCCUCUCUGAUCCGGUUGCCGUGCACUAGCGAUUUGUUUCACAUGAAUCGGUCGGGAGUACACACACAUAUAUUAUUAGAGUUGUUCAAUCCCGCAGAG\\\"), \\\"CUCUGCGGGAUUGAACAACUCUAAUAAUAUAUGUGUGUGUACUCCCGACCGAUUCAUGUGAAACAAAUCGCUAGUGCACGGCAACCGGAUCAGAGAGGGCUACGUGUAAACCUCGUGCACUUCUCUCAGCUUGAUGCGGCGCGGCUACUUUGGCUCAACCUGAGGUGAUGAUAUGGAGAGUAACUGAACAGGCGGGCCACCGUUUACGAAUAUCAACAGCGGGUUUUAGAUCGAGCCCUCACUGGCCCCUGCUGGCAUUGAGCCUGCCUCUCGCAAACUCGCAUAGUUCGGCUGGAAACUUAUCACGGUGGCACUAUGGUGUGCAUUUCGCAUCAUAAGUGUAAGUUAAAUUUUGAAUGGUCGUGGCCAACCUGACAAUGCGGAUCCAUGAGACGGCACCCGGCUCCUCCGGAAGGACGCUAGGCUUAUACAAGAGAGUUGUACCUCUAAAGUAGAGCAACCGUGGCAGGAACGUCUCUUAUCGAUGGACGGGGAGCUGC\\\")\",\"language\":\"javascript\",\"quality\":4.5,\"summary\":\"Create a function that finds the reverse complement of a ribonucleic acid (RNA) strand. The RNA will be represented as a string containing only the characters \\\"A\\\", \\\"C\\\", \\\"G\\\" and \\\"U\\\". Since RNA can only (canonically) allow pairings of A/U and G/C, the complement of an RNA would be as follows:\\n\\nOriginal | Complement\\n:--- | :---\\n\\\"AAA\\\" | \\\"UUU\\\"\\n\\\"UUU\\\" | \\\"AAA\\\"\\n\\\"GGG\\\" |\",\"tags\":[\"algorithms\",\"arrays\",\"control_flow\"],\"timestamp\":{\"$date\":1604270833119},\"title\":\"RNA Reverse Complement\",\"stats\":{\"completed\":{\"total\":79,\"ratings\":[2,2,2,2,2,1,3,2,2,2,3,1,5,1,0,2,0,0,2,2,0,0,2,2,2,2,0,2,0,1,1,2,2,2,2,1,2,1,2,2,1,2,1,1,2,2,2,2,2,2,2,2,1,1,2,2,2,2,2,3,2,2,2,2],\"quality\":[3,5,4,3,5,4,5,5,5,5,5,5,4,5,5,4],\"rators\":[\"CNc6rmwhbxkxEhHAp\",\"XB7fB6SRML67sDDoX\",\"d8JhF9zfpexkRnCea\",\"kp2ZbCewZJAbfd7xv\",\"SPCd6ssn7D6P6stCs\",\"bX6tpTCjwoi6XMMbK\",\"QRv96jmNaYsWkxQEG\",\"8BJyXvRWcrvN3nttS\",\"qWR7eXxBiNee22A5u\",\"yjtdwc2AC4jA2RWtn\",\"mHT2bJb5SByfJ8yKS\",\"g4NCSxxHqHCGMpWwT\",\"wzsQExQ77eRqYt5ym\",\"evTTY9hwrtogaNxXn\",\"z5ebtimXwFFJdYxoa\",\"PH32cNxBjrK4a28sn\",\"zw7g7T8wE5R5CBhXr\",\"Yp7uvStL97cC9fKkY\",\"Ya3eHgs8x3unZRLpb\",\"mrMLrHNkiergGqxPX\",\"7iJbwKmKpQa3HKe8m\",\"YQZnW55jKvzDdZ3t5\",\"buX4mCQhtXCfBjeno\",\"3Gf7ikLijfoxabiPY\",\"RtPhDuwmvWNHiBxmG\",\"DPi9QGLctq2y76KuE\",\"2Ni3PzJAc5fAhqBkb\",\"pWJWQDhqzDSmfaFam\",\"Wkm6DREJHKoWTgYcL\",\"u9cRf5kvtpRB5ffB3\",\"YSmLyP3eRhcFjJPzg\",\"W7QAXyKKXBqzcCCT3\",\"AFfw7cGg83uYk2Miy\",\"M4vq8ATaS9Jg5X7iP\",\"Po3v3dHCk6wYGKMwi\",\"R9uaMzX2Y4ND8Cosm\",\"JsRTAwWK7Nikj4sKA\",\"2Qk2mFu9HBFzrB24i\",\"e9Cknxbx6o7Nb6REs\",\"ApqWTmEEkTCsDou48\",\"npp5hesJrst6ghKSM\",\"FGEeCTorXbX3WvjFW\",\"nkH3HfJXLMNcBMM79\",\"cgCQDs9i7yChKeAjE\",\"QAZ5DGaWWYhku4BNz\",\"wJTDDTE3TrmSXKP4d\",\"srJ34BaybkQh3qRkM\",\"RE4Mm9T6Q9uygAxGS\",\"oDtGiNqDMHmhHE3J8\",\"n8asvW6Qzi6kiApZC\",\"65dbBZynphj53nXqA\",\"NGvCPuMiAP3xrRLfB\",\"AasGs8AeX9Lcb9xJn\",\"5JyY5eDxizCH7TYT7\",\"hvTAyFPy4pJHdrYJX\",\"LwD3CyYSiBfg3mA4r\",\"n4Y5EEGCjmrK99yrt\",\"nBJve5CzG6WAw7WFQ\",\"pi76g3eRpnKrhee2a\",\"gXTAie79kiw28tx5u\",\"mpLFbFKjY6u3nsDMv\",\"7wtuhPesfhcYsfZaZ\",\"tAF9Gf6PiGogbZuWs\",\"bfYmA3LMvhSrK59cn\",\"9XnGoq9Tv6ut3zTtH\",\"jicWFrNKadYuLhqxh\",\"9HZbxzkzgz4CvePtv\",\"z47JaNrQMgvuPx5HE\",\"oyB4Wr4EeZnoDaa8B\",\"jkkKzNT77bMStXhpW\",\"eomLS3wh6tQPN8jtH\",\"hBpzDcW4HaKYSA7GD\",\"CH53jGETBeJTummf3\",\"LPZ2QKCoB8q6rG25c\",\"uxKGACwmZ6FNZsMwE\"]},\"flags\":1},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"jsPE985XekJKde9uu\",\"language\":\"cpp\"},{\"_id\":\"zdos9w38tw9QHePRe\",\"language\":\"javascript\"},{\"_id\":\"M8jNckAgpC5ZFkhhG\",\"language\":\"python3\"},{\"_id\":\"Y5kwpMqRjQdpnX8Es\",\"language\":\"ruby\"}]}}"]