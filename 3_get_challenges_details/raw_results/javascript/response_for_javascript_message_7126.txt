a["{\"msg\":\"result\",\"id\":\"2305\",\"result\":{\"_id\":\"3bMksFY5emJLvLJBW\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"function isDisarium(n) {\\n\\t// recursive solution in here\\n}\",\"difficulty\":3.7083333333333335,\"quality\":0,\"familyId\":\"S4TyjyDfb7jkfiZib\",\"instructions\":\"A number is said to be Disarium if the **sum** of its *digits raised to their respective positions* is the number itself. Create a function that determines whether a number is a Disarium or not.\\n\\n### Examples\\n```\\nisDisarium(75) ➞ false\\n// 7^1 + 5^2 = 7 + 25 = 32\\n\\nisDisarium(135) ➞ true\\n// 1^1 + 3^2 + 5^3 = 1 + 9 + 125 = 135\\n\\nisDisarium(518) ➞ false\\n\\nisDisarium(518) ➞ true\\n\\nisDisarium(544) ➞ false\\n\\nisDisarium(8) ➞ true\\n\\nisDisarium(466) ➞ false\\n```\\n\\n### Notes\\n- Position of the digit is not likely its index.\\n- You are expected to solve this challenge via **recursion**.\\n- You can check on the **Resources** tab for more details about recursion.\\n- An **iterative** version of this challenge can be found via this [link](https://edabit.com/challenge/pyxXekyofGasXX2me).\\n- A **collection** of challenges in recursion can be found via this [link](https://edabit.com/collection/YJH4pAyqDbhLc4STc).\",\"isHidden\":false,\"lab\":\"const recursive = f => (`${f}`.match(RegExp(`${f.name}`,'gm'))||[]).length > +(/function/.test(f))\\nTest.assertNotEquals(recursive(isDisarium), false, \\\"Recursion is required!\\\")\\n\\nlet [numVector, resVector] = [\\n  [6, 75, 135, 466, 372, 175, 1, 696, 876, 89, 518, 598],\\n  [true, false, true, false, false, true, true, false, false, true, true, true]\\n]\\nfor (let i in numVector) Test.assertEquals(isDisarium(numVector[i]), resVector[i])\",\"language\":\"javascript\",\"summary\":\"A number is said to be Disarium if the sum of its digits raised to their respective positions is the number itself. Create a function that determines whether a number is a Disarium or not.\\n\\nExamples\\nisDisarium(75) ➞ false\\n// 7^1 + 5^2 = 7 + 25 = 32\\n\\nisDisarium(135) ➞ true\\n// 1^1 + 3^2 + 5^3 = 1 + 9 + 125 = 135\\n\\nisDisarium(518) ➞ false\\n\\nisDisarium(518) ➞ true\",\"tags\":[\"recursion\",\"numbers\",\"math\",\"validation\"],\"timestamp\":{\"$date\":1601573906048},\"title\":\"Recursion: Disarium Number\",\"stats\":{\"completed\":{\"total\":22,\"ratings\":[4,4,4,4,4,4,2,5,3,1,4,5,5,4,4,5,5,3,1,5,2,5,2,4],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"yjtdwc2AC4jA2RWtn\",\"buX4mCQhtXCfBjeno\",\"va3fDAQm4sqSMoy3R\",\"aEm3Wvj2rFYRL8Lrb\",\"Es4eX2stRpyoXeC7f\",\"tE8iqyAxBJfEaWdxy\",\"bX6tpTCjwoi6XMMbK\",\"u9cRf5kvtpRB5ffB3\",\"DHGZgTxTdCZ2syhac\",\"zza5WjC8QrHcoDZBF\",\"QRv96jmNaYsWkxQEG\",\"srJ34BaybkQh3qRkM\",\"PH32cNxBjrK4a28sn\",\"tAF9Gf6PiGogbZuWs\",\"pi76g3eRpnKrhee2a\",\"8BJyXvRWcrvN3nttS\",\"xm8vt6CL5u2wMiC43\",\"NCJ8nN2udEPuRY4iS\"]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"mP5BLYHWyeiFpECud\",\"language\":\"cpp\"},{\"_id\":\"Mo8ErS2pcwNakKsAF\",\"language\":\"java\"},{\"_id\":\"3bMksFY5emJLvLJBW\",\"language\":\"javascript\"},{\"_id\":\"aifM22oGtRKShsFWB\",\"language\":\"python3\"},{\"_id\":\"WzHr7GAuB7E2tSzH4\",\"language\":\"ruby\"}]}}"]