a["{\"msg\":\"result\",\"id\":\"2397\",\"result\":{\"_id\":\"hNCyj6c5B6FmG3KGE\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"function compress(c) {\\n\\t// recursive code here\\n}\",\"difficulty\":4.333333333333333,\"familyId\":\"GQHf8riMgyddYiXJi\",\"instructions\":\"The function is given an array of characters. **Recursively compress** the array into a string using the following rules. For each group of consecutively repeating characters:\\n- If the number of repeating characters is one, append the string with only this character.\\n- If the number `n` of repeating characters `x` is greater than one, append the string with `\\\"x\\\" + n`.\\n\\n### Examples\\n```\\ncompress([\\\"t\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"s\\\", \\\"s\\\", \\\"s\\\", \\\"h\\\"]) ➞ \\\"te14s3h\\\"\\n\\ncompress([\\\"a\\\", \\\"a\\\", \\\"b\\\", \\\"b\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\"]) ➞ \\\"a2b2c3\\\"\\n\\ncompress([\\\"a\\\"]) ➞ \\\"a\\\"\\n\\ncompress([\\\"a\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\"]) ➞ \\\"ab12\\\"\\n\\ncompress([\\\"a\\\", \\\"a\\\", \\\"a\\\", \\\"b\\\", \\\"b\\\", \\\"a\\\", \\\"a\\\"]) ➞ \\\"a3b2a2\\\"\\n```\\n\\n### Notes\\n- You are expected to solve this challenge using the concept of **recursion**.\\n- Check out the **Resources** tab for more details on _recursion_.\\n- An **iterative** version of this challenge can be found via this [link](https://edabit.com/challenge/Pb6JrAEsFbizx7Ssz).\\n- A **collection** of challenges in recursion can be found via this [link](https://edabit.com/collection/YJH4pAyqDbhLc4STc)\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"const recursive = f => (`${f}`.match(RegExp(`${f.name}`,'gm'))||[]).length > +(/function/.test(f))\\nTest.assertNotEquals(recursive(compress), false, \\\"Recursion is required!\\\")\\nlet [actualParam, expectedParam] = [\\n  [\\n    [\\\"a\\\", \\\"a\\\", \\\"b\\\", \\\"b\\\", \\\"c\\\", \\\"c\\\", \\\"c\\\"], [\\\"a\\\"], [\\\"a\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\", \\\"b\\\"],\\n    [\\\"a\\\", \\\"a\\\", \\\"a\\\", \\\"b\\\", \\\"b\\\", \\\"a\\\", \\\"a\\\"], [\\\"t\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"e\\\", \\\"s\\\", \\\"s\\\", \\\"s\\\", \\\"h\\\"]\\n  ],\\n  [\\\"a2b2c3\\\", \\\"a\\\", \\\"ab12\\\", \\\"a3b2a2\\\", \\\"te14s3h\\\"]\\n]\\nfor (let i in actualParam) Test.assertEquals(compress(actualParam[i]), expectedParam[i])\\nfor (let i = 0; i < 20; i++) {\\n  let [actual, expected] = [Array(), Array()]\\n  for (let k = 0; k < Math.random() * 200 + 1; k++) {\\n    let [c, n] = [String.fromCharCode(97 + k % 26),\\n                  Math.round(Math.random() * 200 + 1)]\\n    actual = [...actual, c.repeat(n)]\\n    expected = [...expected, n > 1 ? c + n : c]\\n  }\\n  Test.assertEquals(compress(actual), expected.join(''))\\n}\",\"language\":\"javascript\",\"quality\":0,\"summary\":\"The function is given an array of characters. Recursively compress the array into a string using the following rules. For each group of consecutively repeating characters:\\nIf the number of repeating characters is one, append the string with only this character.\\nIf the number n of repeating characters x is greater than one, append the string with \\\"x\\\" + n.\\n\\nExam\",\"tags\":[\"recursion\",\"strings\",\"arrays\"],\"timestamp\":{\"$date\":1610225350249},\"title\":\"Recursion: String Compression from Character Array\",\"stats\":{\"completed\":{\"total\":9,\"ratings\":[5,5,5,5,5,5,5,2,2,5,5,3],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"DPi9QGLctq2y76KuE\",\"yjtdwc2AC4jA2RWtn\",\"PH32cNxBjrK4a28sn\",\"tAF9Gf6PiGogbZuWs\",\"8BJyXvRWcrvN3nttS\",\"ndhMZ3srhYQovdpaF\"]},\"flags\":0},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"imM3Hz44BLEPCKoFe\",\"language\":\"java\"},{\"_id\":\"hNCyj6c5B6FmG3KGE\",\"language\":\"javascript\"},{\"_id\":\"ARRBHsfXtnydhwtgt\",\"language\":\"python3\"}]}}"]