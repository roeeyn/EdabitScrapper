a["{\"msg\":\"result\",\"id\":\"2348\",\"result\":{\"_id\":\"eRLRgKyLWkPjdNN9G\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"function invert(s) {\\n\\t// your recursive solution here\\n}\",\"difficulty\":3.9166666666666665,\"familyId\":\"u3YZXRAXMjictjSzW\",\"instructions\":\"Write a **recursive** function that takes a string input and returns the string in a *reversed* **case** and **order**.\\n\\n### Examples\\n```\\ninvert(\\\"dLROW YM sI HsEt\\\") ➞ \\\"TeSh iS my worlD\\\"\\n\\ninvert(\\\"ytInIUgAsnOc\\\") ➞ \\\"CoNSaGuiNiTY\\\"\\n\\ninvert(\\\"step on NO PETS\\\") ➞ \\\"step on NO PETS\\\"\\n\\ninvert(\\\"XeLPMoC YTiReTXeD\\\") ➞ \\\"dExtErIty cOmplEx\\\"\\n```\\n\\n### Notes\\n- No empty strings and will not contain special characters or punctuation.\\n- You are expected to solve this challenge via **recursion**.\\n- You can check on the **Resources** tab for more details about *recursion*.\\n- An iterative version of this challenge can be found via this [link](https://edabit.com/challenge/TYcMysG6yy4RKEQPP).\\n- A collection of challenges in recursion can be found via this [link](https://edabit.com/collection/YJH4pAyqDbhLc4STc).\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"const recursive = f => (`${f}`.match(RegExp(`${f.name}`,'gm'))||[]).length > +(/function/.test(f))\\nTest.assertNotEquals(recursive(invert), false, \\\"Recursion is required!\\\")\\n\\nlet [strVector, resVector] = [\\n  [\\n    \\\"dLROW YM sI HsEt\\\", \\\"This string is CASE and INDEX reversed\\\", \\\"ReVeRsIbLe\\\", \\\"rAmIfIcAtIoN\\\", \\\"IntellectualS\\\",\\n    \\\"DESREVER xedni DNA esac SI GNIRTS SIHt\\\", \\\"ElBiSrEvEr\\\", \\\"nOiTaCiFiMaR\\\", \\\"sLAUTCELLETNi\\\",\\n    \\\"CoNSaGuiNiTY\\\", \\\"step on NO PETS\\\", \\\"dExtErIty cOmplEx\\\"\\n  ], [\\n    \\\"TeSh iS my worlD\\\", \\\"DESREVER xedni DNA esac SI GNIRTS SIHt\\\", \\\"ElBiSrEvEr\\\", \\\"nOiTaCiFiMaR\\\", \\\"sLAUTCELLETNi\\\",\\n    \\\"This string is CASE and INDEX reversed\\\", \\\"ReVeRsIbLe\\\", \\\"rAmIfIcAtIoN\\\", \\\"IntellectualS\\\",\\n    \\\"ytInIUgAsnOc\\\", \\\"step on NO PETS\\\", \\\"XeLPMoC YTiReTXeD\\\"\\n  ]\\n]\\nfor (let i in strVector) Test.assertEquals(invert(strVector[i]), resVector[i])\",\"language\":\"javascript\",\"quality\":0,\"summary\":\"Write a recursive function that takes a string input and returns the string in a reversed case and order.\\n\\nExamples\\ninvert(\\\"dLROW YM sI HsEt\\\") ➞ \\\"TeSh iS my worlD\\\"\\n\\ninvert(\\\"ytInIUgAsnOc\\\") ➞ \\\"CoNSaGuiNiTY\\\"\\n\\ninvert(\\\"step on NO PETS\\\") ➞ \\\"step on NO PETS\\\"\\n\\ninvert(\\\"XeLPMoC YTiReTXeD\\\") ➞ \\\"dExtErIty cOmplEx\\\"\\n\\nNotes\\nNo empty strings and will not contain special charac\",\"tags\":[\"recursion\",\"strings\",\"validation\"],\"timestamp\":{\"$date\":1602480779572},\"title\":\"Recursion: Case and Index Inverter\",\"stats\":{\"completed\":{\"total\":22,\"ratings\":[5,5,5,5,5,5,4,3,1,5,3,5,1,3,5,3,5,3,2,5,5,4,3,4],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"tAF9Gf6PiGogbZuWs\",\"xn7uGNKeAwPEkP9oA\",\"yjtdwc2AC4jA2RWtn\",\"Es4eX2stRpyoXeC7f\",\"5nHtgdY8F2FbAMawq\",\"va3fDAQm4sqSMoy3R\",\"aEm3Wvj2rFYRL8Lrb\",\"DjChaA6HXG2vBe4fK\",\"buX4mCQhtXCfBjeno\",\"PGCDJpQMN8Sjn9Gm6\",\"bX6tpTCjwoi6XMMbK\",\"DPi9QGLctq2y76KuE\",\"c7uBxu2rgY77H5d79\",\"QRv96jmNaYsWkxQEG\",\"huPdTDxcAgntMc6G6\",\"TtrXnGzi9MyhLvWiz\",\"8BJyXvRWcrvN3nttS\",\"Rp5TXZtS834L8eWjQ\"]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"RdwGosFoQQT6Z82sm\",\"language\":\"java\"},{\"_id\":\"eRLRgKyLWkPjdNN9G\",\"language\":\"javascript\"},{\"_id\":\"hmt2HMc4XNYrwPkDh\",\"language\":\"python3\"}]}}"]