a["{\"msg\":\"result\",\"id\":\"2094\",\"result\":{\"_id\":\"NmmKFQWA9dzWz5can\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"function isPalindrome(p) {\\n\\t// your recursive solution here\\n}\",\"difficulty\":2.924731182795699,\"familyId\":\"G9vRTHbTdfsfxqe75\",\"instructions\":\"A **palindrome** is a series of letters or numbers that reads equivocally backwards. Write a **recursive** function that determines whether a given string is a **palindrome** or not.\\n\\n### Examples\\n```\\nisPalindrome(\\\"Go hang a salami, I'm a lasagna hog!\\\") ➞ true\\n\\nisPalindrome(\\\"This phrase, surely, is not a palindrome!\\\") ➞ false\\n\\nisPalindrome(\\\"Eva, can I see bees in a cave?\\\") ➞ true\\n```\\n\\n### Notes\\n- Symbols and special characters should be ignored.\\n- You are expected to solve this challenge via **recursion**.\\n- You can check on the **Resources** tab for more details about *recursion*.\\n- A **collection** of challenges in recursion can be found via this [link](https://edabit.com/collection/YJH4pAyqDbhLc4STc).\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"const recursive = f => (`${f}`.match(RegExp(`${f.name}`,'gm'))||[]).length > +(/function/.test(f))\\nTest.assertNotEquals(recursive(isPalindrome), false, \\\"Recursion is required!\\\")\\n\\nlet [strVector, resVector] = [\\n  [\\n    \\\"Maneuquenam\\\", \\\"Not a palindrome\\\", \\\"A man, a plan, a cat, a ham, a yak, a yam, a hat, a canal-Panama!\\\",\\n    \\\"Go hang a salami, I'm a lasagna hog!\\\", \\\"This phrase is really this!\\\", \\\"Red rum, sir, is murder.\\\",\\n    \\\"Big step on no pets, Gib!\\\", \\\"One true fortune, but no!\\\", \\\"Don't nod.\\\", \\\"I did, did I?\\\", \\\"My gym.\\\",\\n    \\\"Top spot.\\\", \\\"Was it a cat I saw?\\\", \\\"No lemon, no melon.\\\", \\\"Eva, can I see bees in a cave?\\\",\\n    \\\"Can I be iconic?\\\", \\\"Madam I'm Adam.\\\", \\\"The man on the moon are them.\\\", \\\"Sit on a potato pan, Otis.\\\",\\n    \\\"Truly, a classic cadillac!\\\", \\\"Able was I, ere I saw Elba.\\\", \\\"Step on no pets!\\\"\\n  ], [\\n    true, false, true, true, false, true, true, false, true, true, true,\\n\\t\\ttrue, true, true, true, false, true, false, true, false, true, true\\n  ]\\n]\\nfor (let i in strVector) Test.assertEquals(isPalindrome(strVector[i]), resVector[i])\",\"language\":\"javascript\",\"quality\":4.8,\"summary\":\"A palindrome is a series of letters or numbers that reads equivocally backwards. Write a recursive function that determines whether a given string is a palindrome or not.\\n\\nExamples\\nisPalindrome(\\\"Go hang a salami, I'm a lasagna hog!\\\") ➞ true\\n\\nisPalindrome(\\\"This phrase, surely, is not a palindrome!\\\") ➞ false\\n\\nisPalindrome(\\\"Eva, can I see bees in a cave?\\\") ➞ true\",\"tags\":[\"recursion\",\"strings\",\"validation\",\"logic\"],\"timestamp\":{\"$date\":1602340086899},\"title\":\"Recursion: Palindrome Phrase\",\"stats\":{\"completed\":{\"total\":113,\"ratings\":[5,5,5,5,5,4,5,1,4,3,2,4,1,5,2,0,2,3,1,3,3,2,3,2,3,3,3,5,5,3,4,5,2,3,4,3,3,4,5,2,3,2,0,3,5,1,1,1,3,5,4,3,5,4,3,1,5,0,1,2,5,1,4,2,5,2,5,5,3,3,2,2,2,3,2,2,2,2,5,4,4,3,3,1,0,2,2,1,2,0,2,3,4],\"quality\":[5,5,5,5,5,4,5,5,5,4],\"rators\":[\"a777e8chPvJkY3tKa\",\"tAF9Gf6PiGogbZuWs\",\"yjtdwc2AC4jA2RWtn\",\"Es4eX2stRpyoXeC7f\",\"va3fDAQm4sqSMoy3R\",\"aEm3Wvj2rFYRL8Lrb\",\"buX4mCQhtXCfBjeno\",\"vKch2w3b4keMd84jj\",\"bX6tpTCjwoi6XMMbK\",\"SYEuojZtP6yLXryHv\",\"h4jFmtbFn92eA4649\",\"5NGxHLcQ8Af2RJ4TN\",\"P6Nj8vL3bcTZFD2Xz\",\"HmQu5Cd2KivaXhaR7\",\"u9cRf5kvtpRB5ffB3\",\"mHT2bJb5SByfJ8yKS\",\"8SYDBRtkZuW3pdPtG\",\"PGLPwGKMeFpcsFi7R\",\"bHnhWtTzxPopvmyv2\",\"DPi9QGLctq2y76KuE\",\"66iQsTWHZ9Nio45NZ\",\"ydEpHBohevNd4ab2R\",\"h5nkReQAn55bN9e3g\",\"DjChaA6HXG2vBe4fK\",\"tE8iqyAxBJfEaWdxy\",\"mDWNyaaQ9hvPCRzSd\",\"8meaK5BhWva2ALzMx\",\"kp2ZbCewZJAbfd7xv\",\"Po3v3dHCk6wYGKMwi\",\"Ent7vRTucRrtHm93B\",\"yr822PZmmiDDenxpB\",\"hcm8sL8mNJTSfTdgE\",\"QjGNkRM3Xc78yShJN\",\"ymkXtTnosytBeaGsY\",\"QJM5KcENEwS24NDs7\",\"QRv96jmNaYsWkxQEG\",\"pWJWQDhqzDSmfaFam\",\"LNoPXwizSmkrBgkEN\",\"qWZLE2s7aRDQsnZ4p\",\"zMCXYFZSsviDCvjnY\",\"cRpaCxYRmGcN3Nsoj\",\"gzLvzhwKPEMJjKb7A\",\"s678Wirfor5uYL5T6\",\"8BJyXvRWcrvN3nttS\",\"PH32cNxBjrK4a28sn\",\"PytNZK9mNiRiZxPrm\",\"Yp7uvStL97cC9fKkY\",\"nhBKC5ZwK9cfSs5HG\",\"vSaDkyeZtiTJASBiS\",\"hFvbGB83ANiYMPvGj\",\"pi76g3eRpnKrhee2a\",\"vic9SZ9qqj9WhRkbd\",\"zvBD6Puy5YFd8HuMA\",\"haL4XWHJ6hmsprHuR\",\"NNhR3ff5QNsumidZf\",\"jHRbkoEroiSDe2KRE\",\"XoTA5p8kRk34jqEyt\",\"DM93pPFbWXYMtBeMZ\",\"GsrjAqoAdLATJH9qD\",\"h2Tc68atCCKakHWtC\",\"n8Zwk9wqztzjAhcYQ\",\"ERiJPJWwkJfCmdKk9\",\"eHEoDMCcChWwQJgW4\",\"NovTowtfjFr724zE7\",\"ok4R24nGZ7h94P2en\",\"KfHsF2hHJKKB8AjQy\",\"eN2WkiQZGfoEC6MRC\",\"y4yzRm8LBBTF4fAY7\",\"xPQyXayQtzWAhiMng\",\"aMc9NJ928GmJRB7oS\",\"J8CRTQ5xMNYbHcvLc\",\"JrAdSGJS22WmW8oq3\",\"Z9jhP3WeN7jSf4aFs\",\"c8iCgqHd3rBffwcvn\",\"55gtTByNL5GiTZKZ6\",\"sRiMATGbcZAdZs9oM\",\"6nndghb4bv2Rj3Bmp\",\"hZgSgDGjBXtX2F9jt\",\"C6qHJwTcgAfMpfxEE\",\"8deYTWWNwomcsj46f\",\"rSJGLYSXMuu3RWjun\",\"KGt4zdoXu2SbWmct5\",\"46SBqYjYrHQhMzp2Y\",\"S9c4EepAasYfTADJf\",\"2ZFoLTxcCARhwc8xX\",\"phwC5FGGbf7CxHHqT\",\"kbeJ62hATFibtoyfC\",\"AXxgrmJ3QJPAwByJc\",\"J5MgLszeGgtciW56n\",\"eMoM9khxzSWin2nFa\",\"wvwMQpLag5NoYk8f8\",\"67hjKAMRoY5yts5xk\",\"mX9ZuBeQsqEjzuAaF\",\"3WqZkrDWHnmy9WLkz\",\"ww55bAH2jwR2ozqWM\",\"CPLBoAWgM9mndBH2d\",\"oDtGiNqDMHmhHE3J8\",\"yC4aFSQpXLCf5c5C6\"]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"iY6e9fMQSWi38J699\",\"language\":\"java\"},{\"_id\":\"NmmKFQWA9dzWz5can\",\"language\":\"javascript\"},{\"_id\":\"yiEHCxMC9byCqEPNX\",\"language\":\"python3\"}]}}"]