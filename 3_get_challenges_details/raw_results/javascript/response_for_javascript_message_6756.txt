a["{\"msg\":\"result\",\"id\":\"2123\",\"result\":{\"_id\":\"pqvDabhxT88JTriyD\",\"archived\":false,\"author\":\"0osh4d0wo0\",\"authorId\":\"XHngE5iScvztMpnR2\",\"code\":\"var recursivSum = function(n) {\\n\\t\\n}\",\"difficulty\":2.9545454545454546,\"familyId\":\"BTfrjJBWFc22nNi7y\",\"instructions\":\"Create a function that takes a number and returns . This function will take the argument and doing sum with last value given on last execution (return `n` if first use).\\n\\n### Examples\\n```\\nrecursivSum(151) == 151 ➞ true\\n// It's first use: 151 == 151\\n\\nvar n = recursivSum(151); n(2) == 153 ➞ true\\n// It was already used: 151 + 2 == 153\\n```\\nYou will be able to get the last sum value without calling the function twice.\\n```\\nvar n = recursivSum(151); n == 151 ➞ true\\n```\\nYou will be able to call the function `n` times without problems.\\n```\\nrecursivSum(1)(2)(3)(4)(5) == 15 ➞ true\\n\\nrecursivSum(1)(2)(3)(4)(5)(n) == 15 + n ➞ true\\n```\\nIf argument has no type return `false`.\\n```\\nrecursivSum(1)(\\\"2\\\") == false ➞ true\\n\\nrecursivSum(1)(\\\"2\\\")(3) == false ➞ true\\n\\nrecursivSum(\\\"1\\\")(2) == false ➞ true\\n\\nrecursivSum(\\\"1\\\") == false ➞ true\\n```\\n### Notes\\nGood luck!\",\"lab\":\"const genRands = (n)=>Math.floor(Math.random()*(Math.pow(2,n)-1)+1)\\nconst genTab = (n,t)=>new Array(n).fill(\\\"\\\").map(v=>genRands(t));\\nconst addVal = (a)=>a.reduce((n,n1)=>n+n1,0);\\nconst randCall = t=>(t=genTab(Math.floor(Math.random()*100+1),t),[t.reduce((n,n1)=>n+n1,0),t.reduce((s,s1)=>s+\\\"(\\\"+s1+\\\")\\\",\\\"recursivSum\\\")])\\nvar nR1 = genTab(2,60);\\nvar nR2 = genTab(3,40);\\nvar nR3 = genRands(40);\\nvar n1 = recursivSum(nR1[0])(nR1[1]);\\nvar n2 = recursivSum(nR2[0])(nR2[1])(nR2[2]);\\nvar r1 = addVal(nR1);\\nvar r2 = addVal(nR2);\\nvar r3 = r1+nR3;\\nvar r4 = r2+nR3;\\n\\nTest.assertEquals(recursivSum(nR1[0])(nR1[1])==r1,true);\\nTest.assertEquals(recursivSum(nR2[0])(nR2[1])(nR2[2])==r2,true);\\nTest.assertEquals(n1==r1,true);\\nTest.assertEquals(n2==r2,true);\\nTest.expect(n1(nR3)==r3,true);\\nTest.expect(n2(nR3)==r4,true);\\nTest.expect(n2(nR3.toString())==false,true);\\nTest.expect(n2(()=>{})==false,true);\\nTest.expect(n2(new Date())==false,true);\\nTest.expect(n2(null)==false,true);\\nTest.expect(n2(null)(1)==false,true);\\nTest.expect(n2()==false,true);\\nTest.expect(recursivSum(nR3.toString())==false,true);\\nTest.expect(recursivSum(()=>{})==false,true);\\nTest.expect(recursivSum(new Date())==false,true);\\nTest.expect(recursivSum(null)==false,true);\\nTest.expect(recursivSum()==false,true);\\nTest.expect(recursivSum(\\\"1\\\")==false,true);\\nTest.expect(recursivSum(\\\"1\\\")(2)==false,true);\\nTest.expect(recursivSum(1)(\\\"2\\\")(3)==false,true);\\nTest.expect(recursivSum(1)(\\\"2\\\")==false,true);\\nTest.expect(recursivSum(1)(\\\"2\\\")(3)(4)(5)==false,true);\\nrecursivSum(1)(\\\"2\\\")(3)(4)(5)\\nfor (var i = 0; i <50;i++){\\n  var t = randCall(10);\\n \\tTest.assertEquals(eval(t[1])==t[0],true);\\n}\",\"language\":\"javascript\",\"summary\":\"Create a function that takes a number and returns . This function will take the argument and doing sum with last value given on last execution (return n if first use).\\n\\nExamples\\nrecursivSum(151) == 151 ➞ true\\n// It's first use: 151 == 151\\n\\nvar n = recursivSum(151); n(2) == 153 ➞ true\\n// It was already used: 151 + 2 == 153\\nYou will be able to get the last sum v\",\"tags\":[\"algorithms\",\"loops\",\"recursion\"],\"timestamp\":{\"$date\":1499437877611},\"title\":\"Recursive Sum\",\"stats\":{\"completed\":{\"total\":18,\"ratings\":[2,2,2,2,2,2,2,2,0,3,5,3,3,3,5,5,3,4,5,4,4,2],\"rators\":[\"XHngE5iScvztMpnR2\",\"hi7Hvtq2mJfkXEGF2\",\"ZTFNqXeoCNeRToi5B\",\"AgQburWndXwEhgomM\",\"thEsZ7N6X8qfZMbcv\",\"NbsMkYuSFa8LsnZtT\",\"tuyDaJzFy78jxvhCY\",\"MmpisT9nmzPJDQuRC\",\"65dbBZynphj53nXqA\",\"As6iH28SJMXPJmSFK\",\"X6AfcNwEHwDYKzLc7\",\"NJaJLioxNJdc9yAjM\",\"54Ka62KytXRsrLPhZ\",\"7WPf9TjQcYuJnEo4T\",\"yjtdwc2AC4jA2RWtn\",\"dPM2Rk2iMkznyXNEt\",\"aEm3Wvj2rFYRL8Lrb\",\"rJ4QFks7zhs2ALsmH\"],\"quality\":[]},\"complaints\":{\"total\":9,\"reasons\":[[\"confusing\"],[\"confusing\"],[\"confusing\"],[\"confusing\"],[\"confusing\"],[\"confusing\"],[\"confusing\"],[\"confusing\"],[\"confusing\"]],\"skippers\":[\"XHngE5iScvztMpnR2\",\"uP45nrNKepR2nggn2\",\"RW2wFPbMQniZWPmw4\",\"aGeZvwhbJNccmSGPe\",\"wQitjzGMLiAx99Ai6\",\"K76FvAhqx2vvQ5v4Y\",\"j3A3tnu7RscSDbRgD\",\"eeowMRRPp2viQ7tin\",\"hD8btcBqRLPYJJSum\",\"bLjAhjtE9YxtfHejn\"]},\"instructions\":{\"score\":-100.10000000000001,\"voters\":[\"YRzKLhZzfuqjDtk9n\",\"thEsZ7N6X8qfZMbcv\",\"NbsMkYuSFa8LsnZtT\",\"Y8zD7oXK6jJSr4Gnu\",\"HQuhas4KXrETxYk9o\",\"NbbzNgur9E2NkCs4k\",\"d6r5S6hRQ2SJyPj3u\",\"XcHCqYmeoqxDsoucx\",\"k5n6ohCqWKDcMSyhR\",\"xt8hBtrcjp3Dd6eBE\",\"7Jb7YWAWX8TJzbLqp\"]},\"tests\":{\"score\":-8.65,\"voters\":[\"thEsZ7N6X8qfZMbcv\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":0,\"family\":[{\"_id\":\"pqvDabhxT88JTriyD\",\"language\":\"javascript\"}]}}"]