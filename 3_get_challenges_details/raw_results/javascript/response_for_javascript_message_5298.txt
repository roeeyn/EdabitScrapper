a["{\"msg\":\"result\",\"id\":\"1399\",\"result\":{\"_id\":\"KNjaveTsz3PQiHa8w\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"function piratesKilled(gold, tolerance) {\\n\\t\\n}\",\"difficulty\":2.1417910447761193,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"3uxAW7ZBgDqTxLR7n\",\"instructions\":\"A group of pirates each have a distribution of gold coins, which can be represented as an array:\\n\\n```\\n[3, 9, 4, 5, 5]\\n// Pirate 1 has 3 gold, Pirate 2 has 9 gold, etc.\\n```\\n\\nThe difference between each pirate's share of gold and that of the richest pirate is represented as:\\n\\n```\\n[6, 0, 5, 4, 4]\\n// Since 6 = 9 - 3, 0 = 9 - 9, 4 = 9 - 5, etc.\\n```\\n\\nPirates have a keen sense of fairness, and a pirate will kill the others if he deems his share to be too little. Each pirate has a **unique inequality threshold** - the maximum difference he is willing to tolerate before he kills his comrades.\\n\\nUsing the above gold distribution:\\n\\n```\\n[5, 0, 5, 5, 5]\\n// Pirates killed, since 5 < 6.\\n// 5 is Pirate 1's inequality distribution and 6 is his gold difference.\\n\\n[7, 0, 5, 5, 5]\\n// Pirate 1 is satisfied, since 7 > 6.\\n// All other pirates are satisfied as well.\\n```\\n\\nGiven a distribution of coins and an array of inequality thresholds, create a function that returns `true` if any pirates are killed, or `false` otherwise.\\n\\n\\n### Examples\\n```\\npiratesKilled([3, 5, 8, 3, 4], [10, 4, 2, 5, 5]) ➞ false\\n\\npiratesKilled([3, 5, 8, 3, 4], [10, 4, 2, 5, 1]) ➞ true\\n\\npiratesKilled([3, 3, 10], [7, 7, 0]) ➞ false\\n\\npiratesKilled([3, 3, 10], [6, 6, 0]) ➞ true\\n```\\n\\n### Notes\\n- A pirate kills if the difference in his share of gold from the richest pirate is **strictly greater** than his **inequality threshold**.\\n- Gold and inequality distribution arrays are both ordered the same. (e.g. Pirate 1 is index 0 for both arrays, Pirate 2 is index 1 for both arrays, etc).\",\"lab\":\"Test.assertEquals(piratesKilled([3, 5, 8, 3, 4], [10, 4, 2, 5, 5]), false)\\nTest.assertEquals(piratesKilled([3, 5, 8, 3, 4], [10, 4, 2, 5, 1]), true)\\nTest.assertEquals(piratesKilled([3, 3, 10], [7, 7, 0]), false)\\nTest.assertEquals(piratesKilled([3, 3, 10], [6, 6, 0]), true)\\nTest.assertEquals(piratesKilled([3, 3, 3], [0, 0, 0]), false)\\nTest.assertEquals(piratesKilled([3, 3, 4, 4], [0, 0, 1, 1]), true)\\nTest.assertEquals(piratesKilled([3, 3, 4, 4], [1, 1, 0, 0]), false)\\nTest.assertEquals(piratesKilled([3, 3, 4, 4], [0, 0, 0, 1]), true)\\nTest.assertEquals(piratesKilled([3, 3, 4, 4, 5], [0, 0, 0, 1, 1]), true)\",\"language\":\"javascript\",\"summary\":\"A group of pirates each have a distribution of gold coins, which can be represented as an array:\\n\\n[3, 9, 4, 5, 5]\\n// Pirate 1 has 3 gold, Pirate 2 has 9 gold, etc.\\n\\nThe difference between each pirate's share of gold and that of the richest pirate is represented as:\\n\\n[6, 0, 5, 4, 4]\\n// Since 6 = 9 - 3, 0 = 9 - 9, 4 = 9 - 5, etc.\\n\\nPirates have a keen sense of fa\",\"tags\":[\"arrays\",\"validation\",\"loops\"],\"timestamp\":{\"$date\":1553020384037},\"title\":\"Gold Distribution\",\"stats\":{\"completed\":{\"total\":142,\"ratings\":[2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,1,2,2,3,1,1,3,2,2,1,3,2,1,3,3,2,3,3,0,2,2,3,2,2,3,3,3,3,2,1,1,1,1,3,1,3,1,2,2,2,1,2,3,3,3,2,1,2,3,2,3,2,2,1,1,3,2,3,3,3,2,2,1,0,1,3,0,2,3,3,3,2,3,2,1,2,3,3,2,3,3,3,0,1,1,3,2,2,1,2,2,4,2,3,3,3,2,3,3,3,3,1,3,2,3,3,3,3,2,3,3,2,2,2,2],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"65dbBZynphj53nXqA\",\"KzMMvGnXcWGTmRE7F\",\"2innwjWqxJHo4eRGh\",\"ak5aPiT6QWpmbnPzD\",\"SDtZFL5NzAoCPofXk\",\"LTG2xsfhWc9bkQZX2\",\"CMPqZzRxXA7RrXGzt\",\"CJnuSjyCBMTbTiibD\",\"KPDPaGaJ4jGtRusF2\",\"wcjknenWdPRhrRScv\",\"zkk54Gr7LG33b57z2\",\"EjPLq3QSJdGQFJdgW\",\"K8retouBZnftajjFi\",\"gGETo2x9dY5TsWc2b\",\"Ymb5yvPjdBqLT99tC\",\"yyByRhWXiZmb4MhKG\",\"pQhhQMqXTKLEALMit\",\"nim4ZZpXjLxa9wFFe\",\"n5wubRfh6zh8QRymN\",\"3ifAHQzsMasfQySoL\",\"SYEuojZtP6yLXryHv\",\"ZZA6JdLEBxHGozyWP\",\"zkpiGFEto6X659waH\",\"8xuMMGF7fyQWL2fKH\",\"PLjiLqon7ecnazdC2\",\"HhLGvPRCyHeforjRk\",\"bjn5DTzzaWCP5BDgX\",\"Jh6sPsgj8yHy95joL\",\"S7R7voZRxnWjCn8pi\",\"uhP3Z8KkPxySxn2n7\",\"Hz8mnq7xFJZKLymTh\",\"dgwRvPi62zKghWiHb\",\"azThPZS9WYk22P4cQ\",\"EWn8w8P3nNh7knatY\",\"5oL9ED5RCEhFQDhMs\",\"KJR7Cg9K5fMdcDm2Y\",\"eomLS3wh6tQPN8jtH\",\"GCxj7RJCeWYNxj8oQ\",\"rSJGLYSXMuu3RWjun\",\"zgoq9MhrL2h75DAMA\",\"R5iq8CcAMQpq5irrX\",\"jECsJQHhBEDpMWYJc\",\"w7onwYtMgeqNhypdE\",\"8wQrAoJoSMQq5ebxy\",\"fmLzKJTPWvtGRAaAN\",\"FJsvM5yqKuK9yMk9P\",\"XKi8iZXBCHCaebSHh\",\"KAwnrRNbgiZ2uAr8v\",\"2qDMWaQGEqhZMbCrj\",\"ny5qnZXjZNedZp85F\",\"schAQn9J489PDRyZb\",\"gyB5wJihaSZCWKTCB\",\"EfgF4urqKM8qGeZfQ\",\"538PKNyqMiCwLWYWK\",\"AiDr6vLkHgvryxhmN\",\"BCAern4EKkoTuR9nb\",\"X4karaYTPhf5gzuJx\",\"gWcAb53wCnqBL4m8f\",\"WW35oDAmkg3qd73to\",\"FgfiNco2FXYu42AET\",\"kcaQGTCRqtSMBWrqF\",\"TSw2bnMa3sKLH2uiA\",\"JGqp2D7nRyfartkJo\",\"w6mAzMhiiWXsgW2Gi\",\"Y9Nz9yafaibz54W4o\",\"byrKwHgawbFgyAcgo\",\"9gpbMTXrrwPXoGSrS\",\"rm57DviqeYnRX6d2p\",\"cTsLoz56NpQTTCCom\",\"h8oHrjSdw2iwKYWpk\",\"Q9KQomTTPBsrkAL6c\",\"yjtdwc2AC4jA2RWtn\",\"R4JQmeA6cYyfXbmLF\",\"5Zq3aGdvh4LHBvnJL\",\"6BpBQnSGhzgvhXrEy\",\"zw7g7T8wE5R5CBhXr\",\"KZwXBsAy7DxvtvvNT\",\"QnPD4Sv6W4LHc2Qng\",\"M5gwJtQXmSkdEmgkh\",\"RE4Mm9T6Q9uygAxGS\",\"AasGs8AeX9Lcb9xJn\",\"arz32kRq8wJNu7DhA\",\"4gb4tvaSCs9u2z3ZA\",\"mHT2bJb5SByfJ8yKS\",\"46EqDiLEdJPtDFujt\",\"xAaucgknbi6qA5RyX\",\"FiK2ruyH8KeHLAgoA\",\"yH7J5Ky3Fb7zzk6Ew\",\"Mb8NA7B9fRiKwxttb\",\"vewKwcMeGuk3p3MsN\",\"3awyiorYPgCqqP7Sr\",\"DHwbkbzYNpmkSFT7u\",\"nRht5DZA6YcH2kAo6\",\"pd8dm7sWLW9cY6dYW\",\"BdvdJYwHZr7JpkHsn\",\"w53eXh26bfnwL6whB\",\"z6QfbuG6TXE7GKynQ\",\"cRpaCxYRmGcN3Nsoj\",\"vtHbevf2tHqe6mRxX\",\"g6Wmfu82gTycrmWjj\",\"3EgZShfBYmWwS57Lp\",\"Ehrta9env9HXyrGbW\",\"a777e8chPvJkY3tKa\",\"2ZFoLTxcCARhwc8xX\",\"3rgHmkSAStEimEzXz\",\"GzrtbWwo7hyDTtRYC\",\"PytNZK9mNiRiZxPrm\",\"vn6nR36mdfY8z2zKx\",\"BdMrphZx4CbuLaCLe\",\"buX4mCQhtXCfBjeno\",\"aEm3Wvj2rFYRL8Lrb\",\"bX6tpTCjwoi6XMMbK\",\"z5ebtimXwFFJdYxoa\",\"Nb6LYPoQP6KJZt8mz\",\"4Xv87xmdSnpYhi8hz\",\"QRv96jmNaYsWkxQEG\",\"tAF9Gf6PiGogbZuWs\",\"CNc6rmwhbxkxEhHAp\",\"pGh7WykiPe26fHJYv\",\"M4vq8ATaS9Jg5X7iP\",\"bXaGdBM8FBLHf7N6Y\",\"fPgv3ZwXzxhJEKgRj\",\"8BJyXvRWcrvN3nttS\",\"eEZ8zeWX8b3SWs84P\",\"g4NCSxxHqHCGMpWwT\",\"xw4qG93vi42EeAFWs\",\"srJ34BaybkQh3qRkM\",\"6vfjruFp8ZpRSi3AT\",\"RtPhDuwmvWNHiBxmG\",\"2Qk2mFu9HBFzrB24i\",\"ZcJm2kuqJnN3CXFaR\",\"Xk2g4CNFAnYcvxiSr\",\"oDtGiNqDMHmhHE3J8\",\"Ya3eHgs8x3unZRLpb\",\"nkH3HfJXLMNcBMM79\",\"MbqfuSzRDoqxrJc8S\"],\"quality\":[5,5,3,5,4,5,5,5,5,5,4,5]},\"tests\":{\"score\":0,\"voters\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":-66.1,\"voters\":[\"mNMQvcxKSSvqqMYCH\",\"QjGNkRM3Xc78yShJN\"]},\"flags\":0},\"isHidden\":false,\"quality\":4.666666666666667,\"family\":[{\"_id\":\"sszPMgm85fE2iusd9\",\"language\":\"cpp\"},{\"_id\":\"KNjaveTsz3PQiHa8w\",\"language\":\"javascript\"},{\"_id\":\"eraBhwF8HkJDAa2pS\",\"language\":\"python3\"},{\"_id\":\"emaJF8zsptyRPTdHh\",\"language\":\"ruby\"}]}}"]