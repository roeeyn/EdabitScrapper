a["{\"msg\":\"result\",\"id\":\"2366\",\"result\":{\"_id\":\"mGzWjN9YkNaTM7kvX\",\"author\":\"BijogFc24\",\"authorId\":\"Nb6LYPoQP6KJZt8mz\",\"code\":\"function baumSweet(n) {\\n\\t\\n}\",\"difficulty\":4.066666666666666,\"familyId\":\"2CT6bpwzFzakvgEXh\",\"instructions\":\"Create a function that takes a number `n` and returns all the terms of the Baum-Sweet sequence, from `0` to `n` (included).\\n\\nThe Baum-Sweet sequence is the sequence of numbers `bi` such that `bi = 1` if the binary representation of `i` contains no block of consecutive `0` of odd length, and `bi = 0` otherwise.\\n\\n### Examples\\n```\\nbaumSweet(0) ➞ \\\"0\\\"\\n\\nbaumSweet(1) ➞ \\\"01\\\"\\n\\nbaumSweet(10) ➞ \\\"01011001010\\\"\\n```\\n\\n### Notes\\nFor all cases, `n >= 0`.\",\"isHidden\":false,\"lab\":\"Test.assertEquals(baumSweet(0), \\\"0\\\")\\nTest.assertEquals(baumSweet(1), \\\"01\\\")\\nTest.assertEquals(baumSweet(4), \\\"01011\\\")\\nTest.assertEquals(baumSweet(5), \\\"010110\\\")\\nTest.assertEquals(baumSweet(6), \\\"0101100\\\")\\nTest.assertEquals(baumSweet(7), \\\"01011001\\\")\\nTest.assertEquals(baumSweet(8), \\\"010110010\\\")\\nTest.assertEquals(baumSweet(9), \\\"0101100101\\\")\\nTest.assertEquals(baumSweet(10),\\\"01011001010\\\")\\nTest.assertEquals(baumSweet(11),\\\"010110010100\\\")\\nTest.assertEquals(baumSweet(12),\\\"0101100101001\\\")\\nTest.assertEquals(baumSweet(13),\\\"01011001010010\\\")\\nTest.assertEquals(baumSweet(14),\\\"010110010100100\\\")\\nTest.assertEquals(baumSweet(1001),\\\"010110010100100110010000010010010100100100000000100100000100100110010000010010010000000000000000010010010000000010010000010010010100100100000000100100000100100100000000000000000000000000000000100100000100100100000000000000000100100100000000100100000100100110010000010010010000000000000000010010010000000010010000010010010000000000000000000000000000000000000000000000000000000000000000010010010000000010010000010010010000000000000000000000000000000010010000010010010000000000000000010010010000000010010000010010010100100100000000100100000100100100000000000000000000000000000000100100000100100100000000000000000100100100000000100100000100100100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100100000100100100000000000000000100100100000000100100000100100100000000000000000000000000000000000000000000000000000000000000000100100100000000100100000100100100000000000000000000000000000000100100000100100100000000000000000100100100\\\")\\n\\n// Author : javierdariomartin\",\"language\":\"javascript\",\"summary\":\"Create a function that takes a number n and returns all the terms of the Baum-Sweet sequence, from 0 to n (included).\\n\\nThe Baum-Sweet sequence is the sequence of numbers bi such that bi = 1 if the binary representation of i contains no block of consecutive 0 of odd length, and bi = 0 otherwise.\\n\\nExamples\\nbaumSweet(0) ➞ \\\"0\\\"\\n\\nbaumSweet(1) ➞ \\\"01\\\"\\n\\nbaumSweet(10) ➞\",\"tags\":[\"math\",\"numbers\"],\"timestamp\":{\"$date\":1598762444851},\"title\":\"Baum-Sweet Sequence\",\"stats\":{\"completed\":{\"total\":12,\"ratings\":[4,4,4,4,4,5,4,2,5,5,5,4,1,5,5],\"rators\":[\"Nb6LYPoQP6KJZt8mz\",\"aEm3Wvj2rFYRL8Lrb\",\"yjtdwc2AC4jA2RWtn\",\"buX4mCQhtXCfBjeno\",\"Es4eX2stRpyoXeC7f\",\"bXaGdBM8FBLHf7N6Y\",\"va3fDAQm4sqSMoy3R\",\"iJC8PmpzSyTnEDqw5\",\"tAF9Gf6PiGogbZuWs\",\"8BJyXvRWcrvN3nttS\"],\"quality\":[]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":0,\"family\":[{\"_id\":\"cJtAZRBZYcbMtZLo7\",\"language\":\"cpp\"},{\"_id\":\"mGzWjN9YkNaTM7kvX\",\"language\":\"javascript\"},{\"_id\":\"urbmPbcjGPygd9G8u\",\"language\":\"python3\"},{\"_id\":\"beyaeJTSQ6ZNycGtw\",\"language\":\"ruby\"}]}}"]