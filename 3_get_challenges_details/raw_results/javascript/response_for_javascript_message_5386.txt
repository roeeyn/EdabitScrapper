a["{\"msg\":\"result\",\"id\":\"1444\",\"result\":{\"_id\":\"TKTeWvgxYmuu5Z4Rq\",\"author\":\"Werdna\",\"authorId\":\"buX4mCQhtXCfBjeno\",\"code\":\"function numbersNeedFriendsToo(num) {\\n\\t\\n}\",\"difficulty\":2.1555555555555554,\"familyId\":\"a4jFxt6Lfbh7x4vqi\",\"instructions\":\"Given a number, insert duplicate digits on both sides of all digits which appear in a group of 1.\\n\\n### Worked Example\\n```\\nnumbersNeedFriendsToo(22733) ➞ 2277733\\n\\n// The number can be split into groups 22, 7, and 33.\\n// 7 appears on its own.\\n// Put 7s on both sides to create 777.\\n// Put the numbers together and return the result.\\n```\\n\\n### Examples\\n```\\nnumbersNeedFriendsToo(123) ➞ 111222333\\n\\nnumbersNeedFriendsToo(56657) ➞ 55566555777\\n\\nnumbersNeedFriendsToo(33) ➞ 33\\n```\\n\\n### Notes\\nAll tests will include positive integers.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertEquals(numbersNeedFriendsToo(123), 111222333)\\nTest.assertEquals(numbersNeedFriendsToo(56657), 55566555777)\\nTest.assertEquals(numbersNeedFriendsToo(33), 33)\\nTest.assertEquals(numbersNeedFriendsToo(22733), 2277733)\\nTest.assertEquals(numbersNeedFriendsToo(11223333), 11223333)\\n\\n// Author: Joshua Señoron\",\"language\":\"javascript\",\"quality\":4.166666666666667,\"summary\":\"Given a number, insert duplicate digits on both sides of all digits which appear in a group of 1.\\n\\nWorked Example\\nnumbersNeedFriendsToo(22733) ➞ 2277733\\n\\n// The number can be split into groups 22, 7, and 33.\\n// 7 appears on its own.\\n// Put 7s on both sides to create 777.\\n// Put the numbers together and return the result.\\n\\nExamples\\nnumbersNeedFriendsToo(123) ➞\",\"tags\":[\"numbers\",\"loops\",\"regex\"],\"timestamp\":{\"$date\":1610839211650},\"title\":\"Lonely Numbers\",\"stats\":{\"completed\":{\"total\":49,\"ratings\":[2,2,2,2,2,2,0,2,1,2,1,2,1,2,2,2,1,2,2,3,3,3,3,3,2,3,2,2,2,3,2,3,0,2,2,2,3,2,3,3,3,3,3,3,2],\"quality\":[4,5,5,3,4,4],\"rators\":[\"buX4mCQhtXCfBjeno\",\"g4NCSxxHqHCGMpWwT\",\"u9cRf5kvtpRB5ffB3\",\"yjtdwc2AC4jA2RWtn\",\"QRv96jmNaYsWkxQEG\",\"CNc6rmwhbxkxEhHAp\",\"2Qk2mFu9HBFzrB24i\",\"a777e8chPvJkY3tKa\",\"kp2ZbCewZJAbfd7xv\",\"Akq3fQcPRgPrWfsye\",\"Ya3eHgs8x3unZRLpb\",\"npp5hesJrst6ghKSM\",\"R9uaMzX2Y4ND8Cosm\",\"Yp7uvStL97cC9fKkY\",\"eomLS3wh6tQPN8jtH\",\"8BJyXvRWcrvN3nttS\",\"Xk2g4CNFAnYcvxiSr\",\"J7d397iB5GuWRAMfg\",\"r7H722yLwzduANz2z\",\"F6XGbhXXnTNbGd62m\",\"GM2X83qnuLXTHe5zA\",\"wJTDDTE3TrmSXKP4d\",\"bX6tpTCjwoi6XMMbK\",\"E3fkFzNeAGctuvqA2\",\"ZcJm2kuqJnN3CXFaR\",\"CH53jGETBeJTummf3\",\"hcm8sL8mNJTSfTdgE\",\"E6DBfkTgHuPsDWdG8\",\"M4vq8ATaS9Jg5X7iP\",\"FJsvM5yqKuK9yMk9P\",\"8s5Bdrn7RTga7DL6x\",\"hCfruGWxw7v64teEr\",\"ceMycDhXzsRojnr9F\",\"FGEeCTorXbX3WvjFW\",\"DPi9QGLctq2y76KuE\",\"QvEXmSEo3ANp3yPyH\",\"PTo9qt93YqGvL8fCa\",\"RE4Mm9T6Q9uygAxGS\",\"oDtGiNqDMHmhHE3J8\",\"65dbBZynphj53nXqA\",\"NGvCPuMiAP3xrRLfB\",\"PsccWumihMv4fv3ri\",\"PPFmWzDiefzfekdcg\",\"ogS7n36gadn92Gz4u\",\"ThaiAKWWDw2W4QfJh\",\"uQSXqABGeqaPtN9S4\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"8oHdQPKbQY8ca7g76\",\"language\":\"cpp\"},{\"_id\":\"d5FL6or864rxqhATT\",\"language\":\"java\"},{\"_id\":\"TKTeWvgxYmuu5Z4Rq\",\"language\":\"javascript\"},{\"_id\":\"3cyb3mdBKw67LpGP7\",\"language\":\"python3\"},{\"_id\":\"zqssJgk9pXoTBYCtY\",\"language\":\"ruby\"}]}}"]