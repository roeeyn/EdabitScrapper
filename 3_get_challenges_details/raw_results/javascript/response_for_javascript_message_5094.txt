a["{\"msg\":\"result\",\"id\":\"1299\",\"result\":{\"_id\":\"Q4jq2bky3TdCe8J3M\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"function countSubstring(s) {\\n\\t\\n}\",\"difficulty\":2.0952380952380953,\"familyId\":\"fqQ4sWTE8SXv5vw7i\",\"instructions\":\"Implement a function count_substring that counts the number of substrings that begin with character \\\"A\\\" and ends with character \\\"X\\\".\\n\\nFor example, given the input string `\\\"CAXAAYXZA\\\"`, there are four substrings that begin with \\\"A\\\" and ends with \\\"X\\\", namely: \\\"AX\\\", \\\"AXAAYX\\\", \\\"AAYX\\\", and \\\"AYX\\\".\\n\\n### Examples\\n```\\ncountSubstring(\\\"CAXAAYXZA\\\") ➞  4\\n\\ncountSubstring(\\\"AAXOXXA\\\") ➞ 6\\n\\ncountSubstring(\\\"AXAXAXAXAX\\\") ➞ 15\\n```\\n\\n### Notes\\n- You should aim to avoid using nested loops to complete the task.\\n- You can assume that the input string is composed of English upper case letters only.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertEquals(countSubstring(\\\"CAXAAYXZA\\\"), 4)\\nTest.assertEquals(countSubstring(\\\"AAXOXXA\\\"), 6)\\nTest.assertEquals(countSubstring(\\\"AXAXAXAXAX\\\"), 15)\",\"language\":\"javascript\",\"quality\":5,\"summary\":\"Implement a function count_substring that counts the number of substrings that begin with character \\\"A\\\" and ends with character \\\"X\\\".\\n\\nFor example, given the input string \\\"CAXAAYXZA\\\", there are four substrings that begin with \\\"A\\\" and ends with \\\"X\\\", namely: \\\"AX\\\", \\\"AXAAYX\\\", \\\"AAYX\\\", and \\\"AYX\\\".\\n\\nExamples\\ncountSubstring(\\\"CAXAAYXZA\\\") ➞  4\\n\\ncountSubstring(\\\"AAXOXXA\\\") ➞\",\"tags\":[\"strings\",\"loops\"],\"timestamp\":{\"$date\":1605681057619},\"title\":\"Count Substring\",\"stats\":{\"completed\":{\"total\":40,\"ratings\":[2,2,2,2,2,0,1,2,3,1,2,0,2,0,3,1,2,2,1,2,3,3,2,2,2,2,2,3,0,2,3,3,4,3,3,3,3,3,2,2,3,3],\"quality\":[5],\"rators\":[\"g4NCSxxHqHCGMpWwT\",\"yjtdwc2AC4jA2RWtn\",\"Yp7uvStL97cC9fKkY\",\"kp2ZbCewZJAbfd7xv\",\"CNc6rmwhbxkxEhHAp\",\"mHT2bJb5SByfJ8yKS\",\"zw7g7T8wE5R5CBhXr\",\"vewKwcMeGuk3p3MsN\",\"3Gf7ikLijfoxabiPY\",\"u9cRf5kvtpRB5ffB3\",\"QRv96jmNaYsWkxQEG\",\"m6qKkBY4aPWziyJTj\",\"2Ni3PzJAc5fAhqBkb\",\"ZTTJprKDvFqKGew7c\",\"Ya3eHgs8x3unZRLpb\",\"JsRTAwWK7Nikj4sKA\",\"mMbcuwYFFuoWyMqZD\",\"2Qk2mFu9HBFzrB24i\",\"STipuJs6kBvPqqsSE\",\"hyx8iH2z3QySmyRKT\",\"RE4Mm9T6Q9uygAxGS\",\"6BpBQnSGhzgvhXrEy\",\"65dbBZynphj53nXqA\",\"SDtZFL5NzAoCPofXk\",\"NGvCPuMiAP3xrRLfB\",\"AasGs8AeX9Lcb9xJn\",\"oDtGiNqDMHmhHE3J8\",\"vJTGb9h27RYoPRair\",\"ouabBNowvhzMnMKqa\",\"iqmPb9JuJDgTFeR8Q\",\"RoGGD5cpHb4ftdLDv\",\"JpSfYJh8PinmXAXPT\",\"nWND4LmgZTftyB8sN\",\"tAF9Gf6PiGogbZuWs\",\"pi76g3eRpnKrhee2a\",\"wJTDDTE3TrmSXKP4d\",\"bX6tpTCjwoi6XMMbK\",\"z5ebtimXwFFJdYxoa\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"wjRH7QoeZ2gBk8ZWg\",\"language\":\"cpp\"},{\"_id\":\"Q4jq2bky3TdCe8J3M\",\"language\":\"javascript\"},{\"_id\":\"M8hDPzNZdie8aBMcb\",\"language\":\"python3\"},{\"_id\":\"uK72eR8W6prNe7uRm\",\"language\":\"ruby\"}]}}"]