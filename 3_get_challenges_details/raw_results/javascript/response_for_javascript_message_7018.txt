a["{\"msg\":\"result\",\"id\":\"2253\",\"result\":{\"_id\":\"x3XbfkKTjj4rr45Xi\",\"author\":\"zatoichi49\",\"authorId\":\"tAF9Gf6PiGogbZuWs\",\"code\":\"function wordSearch(letters, words) {\\n\\t\\n}\",\"difficulty\":3.511111111111111,\"familyId\":\"hAMd38B4koyedgzsp\",\"instructions\":\"This challenge involves finding words in an 8x8 grid. Given a string of 64 `letters` and a string of `words` to find, convert the string to an 8x8 array, and return `true` if *all* words in the string can be found in the array. Return `false` otherwise. Words can be read in any direction (*horizontally*, *vertically* or *diagonally*).\\n\\n### Example\\n```\\nletters = \\\"PSUWHATSLPACKAGENYOLRDVLFINGEZBMIREHQNJOATBVGYESJDUWUESTPSTICKEY\\\"\\nwords = [\\\"stick\\\", \\\"most\\\", \\\"key\\\", \\\"vein\\\", \\\"yes\\\", \\\"package\\\", \\\"tube\\\", \\\"target\\\", \\\"elm\\\", \\\"spy\\\"]\\n```\\nThis would give the list below:\\n```\\n[\\n  [\\\"P\\\", \\\"S\\\", \\\"U\\\", \\\"W\\\", \\\"H\\\", \\\"A\\\", \\\"T\\\", \\\"S\\\"],\\n  [\\\"L\\\", \\\"P\\\", \\\"A\\\", \\\"C\\\", \\\"K\\\", \\\"A\\\", \\\"G\\\", \\\"E\\\"],\\n  [\\\"N\\\", \\\"Y\\\", \\\"O\\\", \\\"L\\\", \\\"R\\\", \\\"D\\\", \\\"V\\\", \\\"L\\\"],\\n  [\\\"F\\\", \\\"I\\\", \\\"N\\\", \\\"G\\\", \\\"E\\\", \\\"Z\\\", \\\"B\\\", \\\"M\\\"],\\n  [\\\"I\\\", \\\"R\\\", \\\"E\\\", \\\"H\\\", \\\"Q\\\", \\\"N\\\", \\\"J\\\", \\\"O\\\"],\\n  [\\\"A\\\", \\\"T\\\", \\\"B\\\", \\\"V\\\", \\\"G\\\", \\\"Y\\\", \\\"E\\\", \\\"S\\\"],\\n  [\\\"J\\\", \\\"D\\\", \\\"U\\\", \\\"W\\\", \\\"U\\\", \\\"E\\\", \\\"S\\\", \\\"T\\\"],\\n  [\\\"P\\\", \\\"S\\\", \\\"T\\\", \\\"I\\\", \\\"C\\\", \\\"K\\\", \\\"E\\\", \\\"Y\\\"]\\n]\\n```\\nYou would return `true` as all words can be found:\\n```\\n[\\n  [\\\"_\\\", \\\"S\\\", \\\"_\\\", \\\"_\\\", \\\"_\\\", \\\"_\\\", \\\"T\\\", \\\"_\\\"],\\n  [\\\"_\\\", \\\"P\\\", \\\"A\\\", \\\"C\\\", \\\"K\\\", \\\"A\\\", \\\"G\\\", \\\"E\\\"],\\n  [\\\"N\\\", \\\"Y\\\", \\\"_\\\", \\\"_\\\", \\\"R\\\", \\\"_\\\", \\\"_\\\", \\\"L\\\"],\\n  [\\\"_\\\", \\\"I\\\", \\\"_\\\", \\\"G\\\", \\\"_\\\", \\\"_\\\", \\\"_\\\", \\\"M\\\"],\\n  [\\\"_\\\", \\\"_\\\", \\\"E\\\", \\\"_\\\", \\\"_\\\", \\\"_\\\", \\\"_\\\", \\\"O\\\"],\\n  [\\\"_\\\", \\\"T\\\", \\\"B\\\", \\\"V\\\", \\\"_\\\", \\\"Y\\\", \\\"E\\\", \\\"S\\\"],\\n  [\\\"_\\\", \\\"_\\\", \\\"U\\\", \\\"_\\\", \\\"_\\\", \\\"E\\\", \\\"_\\\", \\\"T\\\"],\\n  [\\\"_\\\", \\\"S\\\", \\\"T\\\", \\\"I\\\", \\\"C\\\", \\\"K\\\", \\\"_\\\", \\\"_\\\"]\\n]\\n```\\n\\n### Notes\\nWords must be contained inside the grid, without wrapping over columns/rows.\",\"lab\":\"Test.assertEquals(wordSearch('ALLESSAYIOPEBUTNRACANHHEHREFOXIAAERUIFNRPRGELTHXSHWTUOHSTCURLITE', ['thin', 'oil', 'tube', 'fox', 'thought', 'curl', 'air', 'essay', 'shout', 'era']), true)\\nTest.assertEquals(wordSearch('DELDNUBPETENHARALOSSOUNTPCHIEFDRUROHSOTZOAWENINLCLPOKERFORBIDMTC', ['crisis', 'kit', 'pat', 'chief', 'show', 'poker', 'forbid', 'couple', 'donor', 'bundle']), false)\\nTest.assertEquals(wordSearch('LOBMYSALORDOTRECENTENSIOXAUEDNDYLHSAMTLFVEINNLBLSECOACERTYMRBFEH', ['nuance', 'record', 'helmet', 'rally', 'parade', 'tension', 'symbol', 'separate', 'vein', 'ash']), false)\\nTest.assertEquals(wordSearch('PEANUTIHATEFOUSTLAGBRYUGAGAOANSNCVSTXENEEISTSDERNUELHOCTTAMEPROS', ['gate', 'bee', 'bottle', 'deny', 'census', 'peanut', 'message', 'palace', 'next', 'strength']), true)\\nTest.assertEquals(wordSearch('CAFZEROTEOALGWNNGSNEAECIIZPCDGFSTTDIEBFUFASCEINOIELNURVCRHTXGMCE', ['ice', 'cousin', 'resident', 'conceive', 'drift', 'heat', 'zero', 'flag', 'run', 'pierce']), false)\\nTest.assertEquals(wordSearch('KARALLOCGNTEBMAIBHEOCPFMRUNEOFUMAWGKDURAVDRECAZSEMJALOTSOXVACUNU', ['mass', 'cap', 'brave', 'knee', 'collar', 'alarm', 'vacuum', 'leg', 'fur', 'lot']), true)\\nTest.assertEquals(wordSearch('NYBNETADOORTNAOESAYHOPDLITRSEOWIRSHEWHRVPOGWOSNEFAMILIARTENESBHT', ['ant', 'age', 'familiar', 'net', 'root', 'say', 'prison', 'bishop', 'deliver', 'slow']), true)\\nTest.assertEquals(wordSearch('HOAIKPMKWDBNSEECIEESAHMAZFDTCRBBCIRIAUEDANONPSRETEECSHOECRTTTSIF', ['debate', 'ask', 'member', 'rush', 'obscure', 'instinct', 'feed', 'fist', 'all', 'catch']), false)\\nTest.assertEquals(wordSearch('EBEGLAEROZPOSTVLKYEEONEOCUTETEISIBUYRCHTRMYGSBCNTCERIDAPRDIKOMAN', ['buy', 'lost', 'real', 'breeze', 'direct', 'man', 'post', 'trick', 'degree', 'achieve']), true)\\nTest.assertEquals(wordSearch('MITSFOCAERCULTURMDHYKIRTGLANCELMYPRODUCEODICSVLGLETSOOADPRYGHMNI', ['produce', 'charity', 'employ', 'art', 'gem', 'raid', 'glance', 'hole', 'moon', 'ear']), false)\",\"language\":\"javascript\",\"summary\":\"This challenge involves finding words in an 8x8 grid. Given a string of 64 letters and a string of words to find, convert the string to an 8x8 array, and return true if all words in the string can be found in the array. Return false otherwise. Words can be read in any direction (horizontally, vertically or diagonally).\\n\\nExample\\nletters = \\\"PSUWHATSLPACKAGENYOLR\",\"tags\":[\"arrays\",\"strings\",\"language_fundamentals\"],\"timestamp\":{\"$date\":1562607408390},\"title\":\"Word Search (Part 1)\",\"stats\":{\"completed\":{\"total\":46,\"ratings\":[4,4,4,4,4,3,5,4,5,0,2,2,2,3,0,3,5,2,4,0,5,3,5,5,4,0,5,4,3,5,2,5,5,3,4,3,5,0,5,3,5,4,5,5,5],\"rators\":[\"65dbBZynphj53nXqA\",\"n5wubRfh6zh8QRymN\",\"yjtdwc2AC4jA2RWtn\",\"mHT2bJb5SByfJ8yKS\",\"BBP9BE5mKHRzaRpJr\",\"b5a77qecAq32wTEaR\",\"w3bahQJn9xsYG78JY\",\"SjY6a2v6jMjGraDKz\",\"aSAfdzR4ZoBK2Rief\",\"fAMMozvieydpmZPbr\",\"97wjT4ZayipzMujfw\",\"xduxHvTSegggxeuye\",\"cCrirxZEzgAwQt2T9\",\"cRpaCxYRmGcN3Nsoj\",\"MpNkytd7e4Ghx25ii\",\"FJsvM5yqKuK9yMk9P\",\"Jd6KY7BxEJKbvZHen\",\"EjPLq3QSJdGQFJdgW\",\"qJZsi5rhRnWA38FbA\",\"QvFn4NkLSGB2unE7L\",\"CChg5gezrGwuB9NNi\",\"wo4cpen33NYFHNca7\",\"9fWrGtbXS4qb8PFqg\",\"oJRbRjYJnWfsCdNHD\",\"knxCMCGP3rAkiatRo\",\"sutzxu4yTueBKE9Qp\",\"u37upKZSmCKTQvQqX\",\"GJWSWfZ9rPeia7H2g\",\"FJz752tBZgKEFv5dp\",\"eTzbu6t7YpD3mK3PY\",\"mKYd2gKr6wCWRccrc\",\"wcgDoaKbZtbCGPu6K\",\"MNDLmXZmFMf8ASL2L\",\"7TXyMDHFYjna3dyPb\",\"aHyMAAfbSgYFQZcpF\",\"eFjGhq7C7bBKXjT6X\",\"aEm3Wvj2rFYRL8Lrb\",\"bXaGdBM8FBLHf7N6Y\",\"va3fDAQm4sqSMoy3R\",\"eKSJgCaiy4ReJWXTg\",\"8SYDBRtkZuW3pdPtG\",\"pWJWQDhqzDSmfaFam\",\"yHd3HyZwSMozqhR6P\"],\"quality\":[5,5,4]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.666666666666667,\"family\":[{\"_id\":\"eb7C24JgCR4BNJBrp\",\"language\":\"cpp\"},{\"_id\":\"x3XbfkKTjj4rr45Xi\",\"language\":\"javascript\"},{\"_id\":\"iN48LCvtsQFftc7L9\",\"language\":\"python3\"},{\"_id\":\"hMYGsMFuoZfiSXLjt\",\"language\":\"ruby\"}]}}"]