a["{\"msg\":\"result\",\"id\":\"2241\",\"result\":{\"_id\":\"9cE48rX6wTZqBWeia\",\"author\":\"er0s\",\"authorId\":\"5Zq3aGdvh4LHBvnJL\",\"code\":\"function sentencePrimeness(sentence) {\\n\\t\\n}\",\"difficulty\":3.480769230769231,\"isHidden\":false,\"editorId\":\"5Zq3aGdvh4LHBvnJL\",\"familyId\":\"8PozQrjPcyHtbgDmg\",\"instructions\":\"A word value can be established summing up all the numeric values of every single character (excluding spaces and punctuation): a value from 1 (\\\"a\\\") to 26 (\\\"z\\\") is given to letters, while numbers have their literal values, from 0 to 9. The sentence value is the sum of the values of the words.\\n\\n```\\nsentence = \\\"ABC ! abc ... @ 123\\\"\\n// Remove spaces, punctuation and any symbol.\\n\\nsentence = [\\\"ABC\\\", \\\"abc\\\", \\\"123\\\"]\\n\\nwords values = \\\"ABC\\\" = 1+2+3 = 6 | \\\"abc\\\" = 1+2+3 = 6 | \\\"123\\\" = 1+2+3 = 6\\n\\nsentence value = 6 + 6 + 6 = 18\\n```\\n\\nGiven a string `sentence` implement a function that returns:\\n\\n- `Prime Sentence` if the original sentence value is a prime.\\n\\n- `Almost Prime Sentence (xxx)` if the sentence value is not a prime but, after a single removal of any of the words the new sentence value is a prime (see example #2 for a clearer explanation), with _xxx_ being the word removed. If more than a word can be removed to obtain a prime value, return the first encountered in the original sentence.\\n\\n- `Composite Sentence` if the sentence value is not a prime and more than one removal is necessary to make the new sentence value (or if none is possible).\\n\\nLetters values are case insensitive (\\\"aZ\\\" = \\\"Az\\\" = 1 + 26 = 27), while numbers are treated as words (\\\"123\\\" = 1+2+3 = 6).\\n\\n### Examples\\n```\\nsentencePrimeness(\\\"Help me!\\\") ➞ \\\"Prime Sentence\\\"\\n// \\\"Help\\\" + \\\"me\\\" = 41 + 18 = 59 (prime)\\n\\nsentencePrimeness(\\\"42 is THE aNsWeR...\\\") ➞ \\\"Almost Prime Sentence (aNsWeR)\\n// \\\"42\\\" + \\\"is\\\" + \\\"THE\\\" + \\\"aNsWeR\\\" = 6 + 28 + 33 + 80 = 147 (not prime)\\n// Without \\\"42\\\" new value is 141\\n// Without \\\"is\\\" new value is 119\\n// Without \\\"THE\\\" new value is 114\\n// Without \\\"aNsWeR\\\" new value is 67 (prime!)\\n// If the word \\\"aNsWeR\\\" is removed from sentence the new value is a prime.\\n\\nsentencePrimeness(\\\"Did you smoke?\\\") ➞ \\\"Composite Sentence\\\"\\n// \\\"Did\\\" + \\\"you\\\" + \\\"smoke\\\" = 17 + 61 + 63 = 141 (not prime)\\n// Without \\\"Did\\\" new value is 124\\n// Without \\\"you\\\" new value is 80\\n// Without \\\"smoke\\\" new value is 78\\n// No single removals make the new sentence value a prime.\\n```\\n\\n### Notes\\n- Only letters and digits can be part of the sentence.\\n- If it's an Almost Prime Sentence, the removed word between the brackets must maintain the same capitalization format found in the original sentence (see example #2).\\n- The sentence is Almost Prime if just a single word can be removed to make value a prime, no multiple removals allowed.\\n- Remember the rule for numbers: \\\"10\\\" is a word, so its value is 1+0 and not 10.\",\"lab\":\"Test.assertEquals(sentencePrimeness(\\\"Help me!\\\"), \\\"Prime Sentence\\\", \\\"Example #1\\\")\\nTest.assertEquals(sentencePrimeness(\\\"42 is THE aNsWeR...\\\"), \\\"Almost Prime Sentence (aNsWeR)\\\", \\\"Example #2\\\")\\nTest.assertEquals(sentencePrimeness(\\\"Did you Smoke?\\\"), \\\"Composite Sentence\\\", \\\"Example #3\\\")\\nTest.assertEquals(sentencePrimeness(\\\"She SellS SeaShellS by the SeaShore\\\"), \\\"Prime Sentence\\\")\\nTest.assertEquals(sentencePrimeness(\\\"Lorem. Ipsum. Dolor. Sit. Amet.\\\"), \\\"Almost Prime Sentence (Lorem)\\\")\\nTest.assertEquals(sentencePrimeness(\\\"three fASt hUNgry aniMALs -aNd- 3 slow faTTy kiDS\\\"), \\\"Almost Prime Sentence (aniMALs)\\\")\\nTest.assertEquals(sentencePrimeness(\\\"This is a 'Prime' Sentence\\\"), \\\"Composite Sentence\\\")\\nTest.assertEquals(sentencePrimeness(\\\"this is a composite sentence\\\"), \\\"Almost Prime Sentence (this)\\\")\\nTest.assertEquals(sentencePrimeness(\\\"Primes, PRIMES EVERYWHERE!\\\"), \\\"Composite Sentence\\\")\\nTest.assertEquals(sentencePrimeness(\\\"10 test cases are enough, this is the last one!\\\"), \\\"Prime Sentence\\\")\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,4,2,3,3,4,4,4,5,2,5,3,5,5,3,2,5,5,4,2,3,3,2,2,5,5,4,2,4,5,4,5,5,5,5,5,5,2,4,3,5,0,2,0,2,5,4,5],\"rators\":[\"5Zq3aGdvh4LHBvnJL\",\"yjtdwc2AC4jA2RWtn\",\"EWn8w8P3nNh7knatY\",\"65dbBZynphj53nXqA\",\"BpiAkZfs6sXRMdArb\",\"rSJGLYSXMuu3RWjun\",\"DPKx25bM3NfJu7M5P\",\"ob3vWqmpSw3mfqDag\",\"ppfQK4eXqkQqSKi4r\",\"3QmTLSKrXrH4B5DMF\",\"vuxNW5Q3kb6TC6CjR\",\"jWW9YLuYPdAR6uR4c\",\"bZML5iQYsLJcgnMtB\",\"2YEYFDWxAZtqzBpJX\",\"ydEdzuCCZt4yny9Rq\",\"BBP9BE5mKHRzaRpJr\",\"Wdjd6JMEFYzW9Ma5k\",\"AasGs8AeX9Lcb9xJn\",\"n5wubRfh6zh8QRymN\",\"P8bXFR4cHwFia9rNM\",\"5HRPnrWvfDLAiEGFc\",\"cRpaCxYRmGcN3Nsoj\",\"YER6iBcpJCuhgrYDN\",\"8tEikq8QhumvnbHXK\",\"EjPLq3QSJdGQFJdgW\",\"hhPW2N2WWpt7MxKo9\",\"ecXumkbqAE5aMsJ2i\",\"FJz752tBZgKEFv5dp\",\"FJsvM5yqKuK9yMk9P\",\"eTzbu6t7YpD3mK3PY\",\"8SYDBRtkZuW3pdPtG\",\"FQDwscZZbqMZNcazT\",\"JGBCMpnbbi5ztuFoX\",\"MNDLmXZmFMf8ASL2L\",\"7TXyMDHFYjna3dyPb\",\"a777e8chPvJkY3tKa\",\"aEm3Wvj2rFYRL8Lrb\",\"Tkc2RceJD4Z8B6wNb\",\"4Xv87xmdSnpYhi8hz\",\"buX4mCQhtXCfBjeno\",\"aaeLxzbfxZcmfFq4A\",\"va3fDAQm4sqSMoy3R\",\"Es4eX2stRpyoXeC7f\",\"u9cRf5kvtpRB5ffB3\",\"P6Nj8vL3bcTZFD2Xz\",\"h4jFmtbFn92eA4649\",\"mHT2bJb5SByfJ8yKS\",\"HmQu5Cd2KivaXhaR7\",\"9YZicvjt6mJATyBjZ\",\"M4vq8ATaS9Jg5X7iP\",\"8BJyXvRWcrvN3nttS\",\"DPi9QGLctq2y76KuE\",\"oDtGiNqDMHmhHE3J8\"],\"total\":56,\"quality\":[5,5,5,5,4,4]},\"flags\":0},\"subscribers\":[\"5Zq3aGdvh4LHBvnJL\"],\"summary\":\"A word value can be established summing up all the numeric values of every single character (excluding spaces and punctuation): a value from 1 (\\\"a\\\") to 26 (\\\"z\\\") is given to letters, while numbers have their literal values, from 0 to 9. The sentence value is the sum of the values of the words.\\n\\nsentence = \\\"ABC ! abc ... @ 123\\\"\\n// Remove spaces, punctuation and\",\"tags\":[\"strings\",\"numbers\",\"validation\",\"scope\"],\"timestamp\":{\"$date\":1571868346968},\"title\":\"Sentence Primeness\",\"quality\":4.666666666666667,\"family\":[{\"_id\":\"g8hMSy4tE3bn3ZTNE\",\"language\":\"cpp\"},{\"_id\":\"9KBTmdoTxuA8eMxP9\",\"language\":\"csharp\"},{\"_id\":\"jH4wEAk4gXZommdfo\",\"language\":\"java\"},{\"_id\":\"9cE48rX6wTZqBWeia\",\"language\":\"javascript\"},{\"_id\":\"XKSwuu4ddzBvkXjvf\",\"language\":\"python3\"},{\"_id\":\"wvkAh6dW8TjgXmN37\",\"language\":\"ruby\"},{\"_id\":\"22zFrigLPpuGEPprt\",\"language\":\"swift\"}]}}"]