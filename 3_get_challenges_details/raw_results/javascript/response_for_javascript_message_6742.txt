a["{\"msg\":\"result\",\"id\":\"2114\",\"result\":{\"_id\":\"foBRTDS8zngwTmYtX\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"function isMagic(square) {\\n\\t\\n}\",\"difficulty\":2.9444444444444446,\"familyId\":\"CvyBPtrPQfvMdj8YP\",\"instructions\":\"Make a function that takes a 2D array and returns `true` if it is a Magic Square and `false` if it is not. A Magic Square is an arrangement of numbers in a square in such a way that the sum of each row, column, and diagonal is one constant number, the \\\"magic constant\\\".\\n\\n### Examples\\n```\\nisMagic([[2, 7, 6], [9, 5, 1], [4, 3, 8]]) ➞ true\\n\\n// Rows: 2+7+6 = 9+5+1 = 4+3+8 = 15\\n// Columns: 2+9+4 = 7+5+3 = 6+1+8 = 15\\n// Diagonals: 2+5+8 = 6+5+4 = 15\\n```\\n\\n```\\nisMagic([[1, 2], [3, 4]]) ➞ false\\n\\n// Rows: 1+2 = 3 != 3+4 = 7\\n// Columns: 1+3 = 4 != 2+4 = 6\\n// Diagonals: 1+4 = 2+3 = 5\\n```\\n\\n### Notes\\nFor this challenge, I will only be testing with magic squares made with whole numbers ranging from 1 to n^2.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertEquals(isMagic([]), true, \\\"I guess an empty square is magical, kinda\\\")\\nTest.assertEquals(isMagic([[1]]), true, \\\"You should be able verify this one by hand\\\")\\nTest.assertEquals(isMagic([[2]]), false, \\\"For this challenge a magic square has all whole numbers from 1 - n^2\\\")\\nTest.assertEquals(isMagic([[1,2],[3,4]]), false, \\\"There actually aren't any magic square of size 2\\\")\\nTest.assertEquals(isMagic([[2,7,6],[9,5,1],[4,3,8]]), true, \\\"Finaly a real magic square\\\")\\nTest.assertEquals(isMagic([[4,3,8],[9,5,1],[2,7,6]]), true, \\\"Technicaly the same as the last\\\")\\nTest.assertEquals(isMagic([[9,5,1],[4,3,8],[2,7,6]]), false, \\\"Can't switch the mid row or colum\\\")\\nTest.assertEquals(isMagic([[5,15,16,2],[10,8,7,13],[6,12,11,9],[17,3,4,14]]), false,\\\"For this challenge a magic square has all whole numbers from 1 - n^2\\\")\\nTest.assertEquals(isMagic([[1,15,14,4],[10,11,8,5],[7,6,9,12],[16,2,3,13]]), true)\\nTest.assertEquals(isMagic([[4,15,14,1],[5,11,8,10],[12,6,9,7],[13,2,3,16]]), false)\\nTest.assertEquals(isMagic([[1,15,4,14],[10,11,5,8],[7,6,12,9],[16,2,13,3]]), false)\\nTest.assertEquals(isMagic([[1,15,14,4],[10,11,8,5],[7,6,9,12],[16,2,3,13],[1,7,7,1,0,3]]), false)\\nTest.assertEquals(isMagic([[25,13,1,19,7],[16,9,22,15,3],[12,5,18,6,24],[8,21,14,2,20],[4,17,10,23,11]]), true)\\nTest.assertEquals(isMagic([\\n\\t[93, 108, 123, 138, 153, 168, 1, 16, 31, 46, 61, 76, 91],\\n\\t[107, 122, 137, 152, 167, 13, 15, 30, 45, 60, 75, 90, 92],\\n\\t[121, 136, 151, 166, 12, 14, 29, 44, 59, 74, 89, 104, 106],\\n\\t[135, 150, 165, 11, 26, 28, 43, 58, 73, 88, 103, 105, 120],\\n\\t[149, 164, 10, 25, 27, 42, 57, 72, 87, 102, 117, 119, 134],\\n\\t[163, 9, 24, 39, 41, 56, 71, 86, 101, 116, 118, 133, 148],\\n\\t[8, 23, 38, 40, 55, 70, 85, 100, 115, 130, 132, 147, 162],\\n\\t[22, 37, 52, 54, 69, 84, 99, 114, 129, 131, 146, 161, 7],\\n\\t[36, 51, 53, 68, 83, 98, 113, 128, 143, 145, 160, 6, 21],\\n\\t[50, 65, 67, 82, 97, 112, 127, 142, 144, 159, 5, 20, 35],\\n\\t[64, 66, 81, 96, 111, 126, 141, 156, 158, 4, 19, 34, 49],\\n\\t[78, 80, 95, 110, 125, 140, 155, 157, 3, 18, 33, 48, 63],\\n\\t[79, 94, 109, 124, 139, 154, 169, 2, 17, 32, 47, 62, 77]\\n]),true)\\nTest.assertEquals(isMagic([\\n\\t[93, 108, 123, 138, 153, 168, 1, 16, 31, 46, 61, 76, 91],\\n\\t[107, 122, 137, 152, 167, 13, 15, 30, 45, 60, 75, 90, 92],\\n\\t[121, 136, 151, 166, 12, 14, 29, 44, 59, 74, 89, 104, 106],\\n\\t[135, 150, 165, 11, 26, 28, 43, 58, 73, 88, 103, 105, 120],\\n\\t[149, 164, 10, 25, 27, 42, 57, 72, 87, 102, 117, 119, 134],\\n\\t[163, 9, 24, 39, 41, 56, 71, 86, 101, 116, 118, 133, 148],\\n\\t[8, 23, 38, 40, 55, 70, 85, 100, 115, 130, 132, 147, 162],\\n\\t[22, 37, 52, 54, 69, 84, 99, 114, 129, 131, 146, 161, 7],\\n\\t[36, 51, 53, 68, 83, 98, 113, 128, 143, 145, 160, 6, 21],\\n\\t[50, 65, 67, 82, 97, 112, 127, 142, 144, 159, 5, 20, 35],\\n\\t[64, 66, 81, 96, 111, 126, 141, 156, 158, 4, 19, 34, 49],\\n\\t[78, 80, 95, 110, 125, 140, 155, 157, 3, 18, 33, 48, 63],\\n\\t[77, 94, 109, 124, 139, 154, 169, 2, 17, 32, 47, 62, 79]\\n]),false)\",\"language\":\"javascript\",\"quality\":0,\"summary\":\"Make a function that takes a 2D array and returns true is it is a Magic Square and false if it is not. A Magic Square is an arrangement of numbers in a square in such a way that the sum of each row, column, and diagonal is one constant number, the \\\"magic constant\\\".\\n\\nExamples\\nisMagic([[2, 7, 6], [9, 5, 1], [4, 3, 8]]) ➞ true\\n\\n// Rows: 2+7+6 = 9+5+1 = 4+3+8 = 15\",\"tags\":[\"arrays\",\"validation\",\"numbers\",\"geometry\",\"games\"],\"timestamp\":{\"$date\":1602365792882},\"title\":\"Magic Square Check\",\"stats\":{\"completed\":{\"total\":15,\"ratings\":[3,3,3,3,3,2,2,3,4,2,4,0,3,3,3,3,4,5],\"quality\":[],\"rators\":[\"pGh7WykiPe26fHJYv\",\"yjtdwc2AC4jA2RWtn\",\"9dAB9yF2rukm22EnA\",\"buX4mCQhtXCfBjeno\",\"H3q76En4bsaZpbPeS\",\"gt72ofBStqvphGX6j\",\"K45zPJxsABuA3WSyj\",\"CNc6rmwhbxkxEhHAp\",\"QRv96jmNaYsWkxQEG\",\"TtrXnGzi9MyhLvWiz\",\"DPi9QGLctq2y76KuE\",\"K3rq9dFGsQz8nZCz5\",\"8BJyXvRWcrvN3nttS\"]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"foBRTDS8zngwTmYtX\",\"language\":\"javascript\"},{\"_id\":\"7WpdYfZPNFCM4oBvd\",\"language\":\"python3\"},{\"_id\":\"87MhSSTkyqTzDAYFi\",\"language\":\"ruby\"}]}}"]