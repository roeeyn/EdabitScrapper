a["{\"msg\":\"result\",\"id\":\"822\",\"result\":{\"_id\":\"hK7At2a9sc4nGhwBL\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"function absolute(str) {\\n\\t\\n}\",\"difficulty\":1.5578947368421052,\"familyId\":\"Z5rYz9kaga9LBoymQ\",\"instructions\":\"Given a sentence, create a function that replaces every \\\"a\\\" as an article with \\\"an absolute\\\". It should return the same string without any change if it doesn't have any \\\"a\\\".\\n\\n### Examples\\n```\\nabsolute(\\\"I am a champion!!!\\\") ➞ \\\"I am an absolute champion!!!\\\"\\n\\nabsolute(\\\"Such an amazing bowler.\\\") ➞ \\\"Such an amazing bowler.\\\"\\n\\nabsolute(\\\"A man with no haters.\\\") ➞ \\\"An absolute man with no haters.\\\"\\n```\\n\\n### Notes\\nWatch for uppercase letters as shown in example #3.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertEquals(absolute(\\\"I am a champion!!!\\\"), \\\"I am an absolute champion!!!\\\")\\nTest.assertEquals(absolute(\\\"Such an amazing bowler.\\\"), \\\"Such an amazing bowler.\\\")\\nTest.assertEquals(absolute(\\\"A hero of the leaf\\\"), \\\"An absolute hero of the leaf\\\")\\nTest.assertEquals(absolute(\\\"That place is such a beauty\\\"), \\\"That place is such an absolute beauty\\\")\\nTest.assertEquals(absolute(\\\"A man with no haters.\\\"), \\\"An absolute man with no haters.\\\")\",\"language\":\"javascript\",\"quality\":4.6,\"summary\":\"Given a sentence, create a function that replaces every \\\"a\\\" as an article with \\\"an absolute\\\". It should return the same string without any change if it doesn't have any \\\"a\\\".\\n\\nExamples\\nabsolute(\\\"I am a champion!!!\\\") ➞ \\\"I am an absolute champion!!!\\\"\\n\\nabsolute(\\\"Such an amazing bowler.\\\") ➞ \\\"Such an amazing bowler.\\\"\\n\\nabsolute(\\\"A man with no haters.\\\") ➞ \\\"An absolute\",\"tags\":[\"regex\",\"conditions\",\"strings\",\"formatting\"],\"timestamp\":{\"$date\":1602537721601},\"title\":\"An Absolute\",\"stats\":{\"completed\":{\"total\":131,\"ratings\":[2,2,2,2,2,1,3,0,2,0,0,2,2,0,3,2,3,1,2,0,2,0,2,2,1,2,0,2,2,2,1,1,1,2,2,2,2,2,0,1,2,1,3,2,1,1,1,1,2,0,0,3,0,2,2,2,2,1,2,2,2,2,2,2,2,1,2,0,2,2,2,2,2,5,1,1,0,1,1,2,2,2,1,2,2,2,2,2,2,0,1,1,2,1,2],\"quality\":[5,5,5,5,5,3,4,4,5,5,5,5,4,5,5,5,5,5,5,5,3,3,5,5,5,4,5,5,5,5,5,1,5,5,5],\"rators\":[\"vGKxRcDYDsXzTQuEQ\",\"JWHWc3CEHc7cfS3jW\",\"yjtdwc2AC4jA2RWtn\",\"r7mZLgpQWzRiGddL5\",\"QRv96jmNaYsWkxQEG\",\"CNc6rmwhbxkxEhHAp\",\"RE4Mm9T6Q9uygAxGS\",\"evTTY9hwrtogaNxXn\",\"g4NCSxxHqHCGMpWwT\",\"xn7uGNKeAwPEkP9oA\",\"jLSZdBseR2kfjt8dL\",\"buX4mCQhtXCfBjeno\",\"n5wubRfh6zh8QRymN\",\"Ya3eHgs8x3unZRLpb\",\"zw7g7T8wE5R5CBhXr\",\"vewKwcMeGuk3p3MsN\",\"NchnDcEmsLTeFZ4FH\",\"u9cRf5kvtpRB5ffB3\",\"3WtHp4MBzciz4AE8M\",\"2Ni3PzJAc5fAhqBkb\",\"AFfw7cGg83uYk2Miy\",\"Akq3fQcPRgPrWfsye\",\"tAF9Gf6PiGogbZuWs\",\"mHT2bJb5SByfJ8yKS\",\"pdGuqmMyeN4wZaWwv\",\"kp2ZbCewZJAbfd7xv\",\"qWR7eXxBiNee22A5u\",\"75NY7vqimaATzRdAX\",\"Yp7uvStL97cC9fKkY\",\"oE8rNagYonFzFvKH5\",\"pWJWQDhqzDSmfaFam\",\"7iJbwKmKpQa3HKe8m\",\"CH53jGETBeJTummf3\",\"vqD6ERedxEyXyT3Sx\",\"eQXwk5zGckM8tCWYH\",\"bBRzXPk7u95YuDWEL\",\"omn98QP6uBd923Azp\",\"Po3v3dHCk6wYGKMwi\",\"acHSYL6uQAgpgFMjp\",\"WSLPmXqJzRjtYkuwf\",\"7gZKfvwaeqsGKXMEN\",\"z5ebtimXwFFJdYxoa\",\"oyB4Wr4EeZnoDaa8B\",\"65dbBZynphj53nXqA\",\"R9uaMzX2Y4ND8Cosm\",\"Es4eX2stRpyoXeC7f\",\"ttuGK7od8simjgmCJ\",\"vtHbevf2tHqe6mRxX\",\"FGEeCTorXbX3WvjFW\",\"3Gf7ikLijfoxabiPY\",\"6P9KgzXeJtZ6ejQcu\",\"m6qKkBY4aPWziyJTj\",\"SNiJRRosrmSWssLj4\",\"RtPhDuwmvWNHiBxmG\",\"evfgbBzq7uiE8yYxm\",\"zgoq9MhrL2h75DAMA\",\"a777e8chPvJkY3tKa\",\"azAzSkvJd7eyXY9x9\",\"8BJyXvRWcrvN3nttS\",\"Nb6LYPoQP6KJZt8mz\",\"DPi9QGLctq2y76KuE\",\"c7uBxu2rgY77H5d79\",\"STipuJs6kBvPqqsSE\",\"J7d397iB5GuWRAMfg\",\"srJ34BaybkQh3qRkM\",\"2Qk2mFu9HBFzrB24i\",\"QAZ5DGaWWYhku4BNz\",\"ZW9T9KftoyC3rFGQP\",\"nkH3HfJXLMNcBMM79\",\"yK7zzK2aGJwuWKHRL\",\"bX6tpTCjwoi6XMMbK\",\"z6rWbk4FWtqs7qHvm\",\"k6QB6fzbj4LsWktRL\",\"K45zPJxsABuA3WSyj\",\"wJTDDTE3TrmSXKP4d\",\"cp3X8hk8yNME7qoD9\",\"LwD3CyYSiBfg3mA4r\",\"jnyub52Fi79drGvow\",\"eGmzRsSATFsE2wjJa\",\"eomLS3wh6tQPN8jtH\",\"N3CNtWZz4ovJfH9Aw\",\"oDtGiNqDMHmhHE3J8\",\"6BpBQnSGhzgvhXrEy\",\"E6DBfkTgHuPsDWdG8\",\"QjGNkRM3Xc78yShJN\",\"hyx8iH2z3QySmyRKT\",\"64CQAfvdJdHc3u9h4\",\"PsccWumihMv4fv3ri\",\"FJsvM5yqKuK9yMk9P\",\"vAh63eGRwkuJtoP8v\",\"AasGs8AeX9Lcb9xJn\",\"mDWNyaaQ9hvPCRzSd\",\"9HZbxzkzgz4CvePtv\",\"sNcDN3s3rH9wcNg5n\",\"PTo9qt93YqGvL8fCa\",\"PH32cNxBjrK4a28sn\",\"nBJve5CzG6WAw7WFQ\",\"7DXJ3mvKMHHqBLt92\",\"gXTAie79kiw28tx5u\",\"pi76g3eRpnKrhee2a\",\"Fk47SQxbHEJRw4u76\",\"7wtuhPesfhcYsfZaZ\",\"mpLFbFKjY6u3nsDMv\",\"jyoLggHk8xQKZuoQC\",\"QGjY3hgPYPMmMjc7j\",\"bfYmA3LMvhSrK59cn\",\"sN2JyFeJCwfwwHPwF\",\"jicWFrNKadYuLhqxh\",\"9XnGoq9Tv6ut3zTtH\",\"ZKuwzkssrSsDGNPr5\",\"sMcFMPkMJC4Kh6ymj\",\"NJCmkbH5e7qbtZYhd\",\"rPsSEYqwmttMPEuvo\",\"inbiBEY2tizFwkN84\",\"z47JaNrQMgvuPx5HE\",\"uxKGACwmZ6FNZsMwE\",\"HCfkcKnPs9mrJojdG\",\"jkkKzNT77bMStXhpW\",\"4WYjScmBWK9eXRzvd\",\"CHvzhtXnv8HTbPQ56\",\"x2Cz7S8rCKJqCE3Xe\",\"RbBEqArJC6CJ3SqkL\",\"LPZ2QKCoB8q6rG25c\",\"aEm3Wvj2rFYRL8Lrb\",\"qAEumdjLRx2AGAmzw\"]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]}},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"xzRcBmkYYNhoeBNv5\",\"language\":\"java\"},{\"_id\":\"hK7At2a9sc4nGhwBL\",\"language\":\"javascript\"},{\"_id\":\"MYZu2j5zKndMB2zdg\",\"language\":\"python3\"},{\"_id\":\"B5F6H5gcG8XNhBX28\",\"language\":\"ruby\"}]}}"]