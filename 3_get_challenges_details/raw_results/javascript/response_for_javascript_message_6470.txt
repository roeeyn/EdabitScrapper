a["{\"msg\":\"result\",\"id\":\"1980\",\"result\":{\"_id\":\"NmBBGYTMNugKTSMkX\",\"author\":\"werdna\",\"authorId\":\"buX4mCQhtXCfBjeno\",\"code\":\"function decrypt(s) {\\n\\t\\n}\",\"difficulty\":2.793103448275862,\"familyId\":\"c2rm6zxziMNfnxAfr\",\"instructions\":\"Given a string `s` consisting from digits and `#`, translate `s` to English lowercase characters as follows:\\n\\n- Characters (\\\"a\\\" to \\\"i\\\") are represented by (\\\"1\\\" to \\\"9\\\").\\n- Characters (\\\"j\\\" to \\\"z\\\") are represented by (\\\"10#\\\" to \\\"26#\\\").\\n\\n### Examples\\n```\\ndecrypt(\\\"10#11#12\\\") ➞ \\\"jkab\\\"\\n\\ndecrypt(\\\"1326#\\\") ➞ \\\"acz\\\"\\n\\ndecrypt(\\\"25#\\\") ➞ \\\"y\\\"\\n```\\n\\n### Notes\\nN/A\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assertEquals(decrypt(\\\"10#11#12\\\"), \\\"jkab\\\")\\nTest.assertEquals(decrypt(\\\"1326#\\\"), \\\"acz\\\")\\nTest.assertEquals(decrypt(\\\"25#\\\"), \\\"y\\\")\\nTest.assertEquals(decrypt(\\\"12345678910#11#12#13#14#15#16#17#18#19#20#21#22#23#24#25#26#\\\"), \\\"abcdefghijklmnopqrstuvwxyz\\\")\\n\\n// From Evgeny SH's Python Challenge\",\"language\":\"javascript\",\"quality\":0,\"summary\":\"Given a string s consisting from digits and #, translate s to English lowercase characters as follows:\\n\\nCharacters (\\\"a\\\" to \\\"i\\\") are represented by (\\\"1\\\" to \\\"9\\\").\\nCharacters (\\\"j\\\" to \\\"z\\\") are represented by (\\\"10#\\\" to \\\"26#\\\").\\n\\nExamples\\ndecrypt(\\\"10#11#12\\\") ➞ \\\"jkab\\\"\\n\\ndecrypt(\\\"1326#\\\") ➞ \\\"acz\\\"\\n\\ndecrypt(\\\"25#\\\") ➞ \\\"y\\\"\\n\\nNotes\\nN/A\",\"tags\":[\"conditions\",\"cryptography\",\"loops\",\"strings\",\"regex\"],\"timestamp\":{\"$date\":1605905708305},\"title\":\"Decrypt the String from Digits to Letters\",\"stats\":{\"completed\":{\"total\":28,\"ratings\":[3,3,3,3,3,3,1,1,2,3,4,4,2,5,4,2,3,0,2,4,3,2,4,3,3,3,3,3,2],\"quality\":[],\"rators\":[\"buX4mCQhtXCfBjeno\",\"PCz8J2PF87Pc5AaxE\",\"M4vq8ATaS9Jg5X7iP\",\"acHSYL6uQAgpgFMjp\",\"hcm8sL8mNJTSfTdgE\",\"WdxkMzYwyF5xaT2bu\",\"bX6tpTCjwoi6XMMbK\",\"BTdKRxKHXHDDD4934\",\"8BJyXvRWcrvN3nttS\",\"4oEq4bishsnov46yn\",\"jd9sRTnsyeKpPggba\",\"DPi9QGLctq2y76KuE\",\"yjtdwc2AC4jA2RWtn\",\"LZwiwKtt2bCKJxcMk\",\"Xk2g4CNFAnYcvxiSr\",\"QRv96jmNaYsWkxQEG\",\"rC7kdm3SsSX9udEQk\",\"QvEXmSEo3ANp3yPyH\",\"Yp7uvStL97cC9fKkY\",\"r47Cs3y2F8exomjD2\",\"ZcJm2kuqJnN3CXFaR\",\"oDtGiNqDMHmhHE3J8\",\"P8bXFR4cHwFia9rNM\",\"RE4Mm9T6Q9uygAxGS\"]},\"flags\":0},\"editorId\":\"buX4mCQhtXCfBjeno\",\"family\":[{\"_id\":\"NWYyMRW4PjKnsuqrp\",\"language\":\"cpp\"},{\"_id\":\"NmBBGYTMNugKTSMkX\",\"language\":\"javascript\"},{\"_id\":\"KgBqna3XhRkoL2mo7\",\"language\":\"python3\"},{\"_id\":\"p2p7fZsbBmcvu5WPX\",\"language\":\"ruby\"}]}}"]