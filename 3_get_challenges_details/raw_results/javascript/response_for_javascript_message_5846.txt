a["{\"msg\":\"result\",\"id\":\"1671\",\"result\":{\"_id\":\"38kbFLBZdtCWSKHDZ\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"function rollingCipher(str, n) {\\n\\t\\n}\",\"difficulty\":2.3176470588235296,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"Rt26PPS8A7HpgX7cH\",\"instructions\":\"Write a function that accepts a string and an `n` and returns a cipher by rolling each character forward (n > 0) or backward (n < 0) `n` times.\\n\\nNote: Think of the letters as a connected loop, so rolling `a` backwards once will yield `z`, and rolling `z` forward once will yield `a`. If you roll 26 times in either direction, you should end up back where you started.\\n\\n### Examples\\n```\\nrollingCipher(\\\"abcd\\\", 1) ➞ \\\"bcde\\\"\\n\\nrollingCipher(\\\"abcd\\\", -1) ➞ \\\"zabc\\\"\\n\\nrollingCipher(\\\"abcd\\\", 3) ➞ \\\"defg\\\"\\n\\nrollingCipher(\\\"abcd\\\", 26) ➞ \\\"abcd\\\"\\n```\\n\\n### Notes\\n- All letters are lower cased.\\n- No spacing.\\n- Each character is rotated the same number of times.\",\"lab\":\"Test.assertEquals(rollingCipher('abcd', 1), 'bcde')\\nTest.assertEquals(rollingCipher('abcd', -1), 'zabc')\\nTest.assertEquals(rollingCipher('abcd', 3), 'defg')\\nTest.assertEquals(rollingCipher('abcd', 25), 'zabc')\\nTest.assertEquals(rollingCipher('abcd', 26), 'abcd')\\nTest.assertEquals(rollingCipher('abcd', 27), 'bcde')\\nTest.assertEquals(rollingCipher('abcd', 0), 'abcd')\",\"language\":\"javascript\",\"summary\":\"Write a function that accepts a string and an n and returns a cipher by rolling each character forward (n > 0) or backward (n < 0) n times.\\n\\nNote: Think of the letters as a connected loop, so rolling a backwards once will yield z, and rolling z forward once will yield a. If you roll 26 times in either direction, you should end up back where you started.\\n\\nExamp\",\"tags\":[\"arrays\",\"cryptography\"],\"timestamp\":{\"$date\":1552689191899},\"title\":\"Rolling Cipher\",\"stats\":{\"completed\":{\"total\":85,\"ratings\":[2,2,2,2,2,2,2,2,2,2,2,2,3,1,2,2,2,1,3,3,3,2,2,3,3,3,3,2,1,0,3,3,3,2,3,3,3,0,2,2,0,2,3,2,3,2,2,3,3,2,2,3,1,0,3,3,3,4,3,3,3,3,3,1,3,2,2,1,3,2,3,1,3,2,2,3,3,3,3,3,3,3,2,3,3],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"65dbBZynphj53nXqA\",\"KzMMvGnXcWGTmRE7F\",\"J67hC7LSEYS5JwhPj\",\"SDtZFL5NzAoCPofXk\",\"pd8dm7sWLW9cY6dYW\",\"2innwjWqxJHo4eRGh\",\"EjPLq3QSJdGQFJdgW\",\"n5wubRfh6zh8QRymN\",\"2NJuDfSqdrF8kHHni\",\"CJnuSjyCBMTbTiibD\",\"dgwRvPi62zKghWiHb\",\"54Ka62KytXRsrLPhZ\",\"rSJGLYSXMuu3RWjun\",\"Akq3fQcPRgPrWfsye\",\"bjn5DTzzaWCP5BDgX\",\"eomLS3wh6tQPN8jtH\",\"EWn8w8P3nNh7knatY\",\"h8oHrjSdw2iwKYWpk\",\"yjtdwc2AC4jA2RWtn\",\"R4JQmeA6cYyfXbmLF\",\"6BpBQnSGhzgvhXrEy\",\"Y9Nz9yafaibz54W4o\",\"5Zq3aGdvh4LHBvnJL\",\"AasGs8AeX9Lcb9xJn\",\"XKi8iZXBCHCaebSHh\",\"mHT2bJb5SByfJ8yKS\",\"qJZsi5rhRnWA38FbA\",\"DHwbkbzYNpmkSFT7u\",\"nRht5DZA6YcH2kAo6\",\"zd9FLSzsGz3evKafy\",\"h4jFmtbFn92eA4649\",\"iKxuhcG7FsLfqa49A\",\"vbuvsrn2enPayyEqG\",\"uKv6ghxAFuZ5Rb3tD\",\"PXeZGXDAhGzCpgPy8\",\"HHt9zS6DjBXcqw5wx\",\"FJsvM5yqKuK9yMk9P\",\"g5noFWaoRtZNcEEAW\",\"KSqti8ad3ptfatw7X\",\"rfsQxYTnovxYJ4s7Q\",\"4zh9hoYRedNq6GxN7\",\"MEZNjeGd7APtvA3SL\",\"k4tYrhJqrWTLwi4Z3\",\"cp3X8hk8yNME7qoD9\",\"RE4Mm9T6Q9uygAxGS\",\"YER6iBcpJCuhgrYDN\",\"Nb6LYPoQP6KJZt8mz\",\"4bECT3r3cvCf3Spiv\",\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"jqbm8L6895JgAtZ6H\",\"Yzh7zNiyG7LM9vnAj\",\"r7mZLgpQWzRiGddL5\",\"QRv96jmNaYsWkxQEG\",\"buX4mCQhtXCfBjeno\",\"NS3p5r2hLBcq3EdrQ\",\"vt88eKvFz6ES8sbrD\",\"aEm3Wvj2rFYRL8Lrb\",\"p5ZshR8zhTqmdhKDc\",\"xMLCsZbeTFRpnXeZe\",\"4Xv87xmdSnpYhi8hz\",\"kp2ZbCewZJAbfd7xv\",\"ctsZbx4dQNmYJ6Nox\",\"xsDyJstYoBZRS8pJH\",\"CNc6rmwhbxkxEhHAp\",\"jpPaANgkwYYndBHDH\",\"jvq5vTggtY5QfMrwL\",\"xn7uGNKeAwPEkP9oA\",\"2Qk2mFu9HBFzrB24i\",\"PytNZK9mNiRiZxPrm\",\"u9cRf5kvtpRB5ffB3\",\"mDWNyaaQ9hvPCRzSd\",\"eqJAEGTAeW4zaXaWx\",\"wJTDDTE3TrmSXKP4d\",\"8BJyXvRWcrvN3nttS\",\"NGvCPuMiAP3xrRLfB\",\"ZcJm2kuqJnN3CXFaR\",\"J7d397iB5GuWRAMfg\",\"AyrNeQTgDWPF233Cv\",\"oDtGiNqDMHmhHE3J8\",\"DPi9QGLctq2y76KuE\",\"gSrqu8MsZMFSxxWAZ\",\"z5ebtimXwFFJdYxoa\",\"Ya3eHgs8x3unZRLpb\"],\"quality\":[5,4,5,5,5,5,5,5,4]},\"tests\":{\"score\":0,\"voters\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"voters\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"isHidden\":false,\"quality\":4.777777777777778,\"family\":[{\"_id\":\"nvL6bEmidsTFKcWLu\",\"language\":\"cpp\"},{\"_id\":\"MDpnWs4vim4HbPJnD\",\"language\":\"csharp\"},{\"_id\":\"38kbFLBZdtCWSKHDZ\",\"language\":\"javascript\"},{\"_id\":\"Egh2HES8eqPTTX9Q2\",\"language\":\"python3\"},{\"_id\":\"auAFWv48jcyhYcdLv\",\"language\":\"ruby\"},{\"_id\":\"Nc6Retax2huPcTw6C\",\"language\":\"swift\"}]}}"]