a["{\"msg\":\"result\",\"id\":\"1404\",\"result\":{\"_id\":\"mYJPkSLLxWthSffR6\",\"archived\":false,\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"function findShortestWords(str) {\\n\\t\\n}\",\"difficulty\":2.142857142857143,\"familyId\":\"D2iaz8WpnXHDFWg5g\",\"instructions\":\"Create a function that accepts a string as an argument. Find its shortest word(s) and return them as an array sorted alphabetically (if there are multiple shortest words).\\n\\n### Examples\\n```\\nfindShortestWords(\\\"I think the solution is fairly obvious.\\\") ➞ [\\\"i\\\"]\\n\\nfindShortestWords(\\\"Chase two rabbits, catch none.\\\") ➞ [\\\"two\\\"]\\n\\nfindShortestWords(\\\"We become what we think about.\\\") ➞ [\\\"we\\\", \\\"we\\\"]\\n\\nfindShortestWords(\\\"The quick brown fox jumped over the lazy dogs back.\\\") ➞ [\\\"fox\\\", \\\"the\\\", \\\"the\\\"]\\n```\\n\\n### Notes\\n- Periods, commas and other special characters don't count as part of a word's length.\\n- Remember to sort the array of words alphabetically before returning your result.\\n- Return words in lowercase only.\",\"lab\":\"Test.assertSimilar(findShortestWords(\\\"Strive not to be a success, but rather to be of value.\\\"), ['a'])\\nTest.assertSimilar(findShortestWords(\\\"You miss 100% of the shots you don’t take.\\\"), ['of'])\\nTest.assertSimilar(findShortestWords(\\\"Life is what happens to you while you’re busy making other plans.\\\"), ['is', 'to'])\\nTest.assertSimilar(findShortestWords(\\\"We become what we think about.\\\"), ['we', 'we'])\\nTest.assertSimilar(findShortestWords(\\\"The most common way people give up their power is by thinking they don’t have any.\\\"), ['by', 'is', 'up'])\\nTest.assertSimilar(findShortestWords(\\\"The best time to plant the tree was 20 years ago. The second best time is now.\\\"), ['is', 'to'])\\nTest.assertSimilar(findShortestWords(\\\"Your time is limited, so don’t waste it living someone else’s life.\\\"), ['is', 'it', 'so'])\\nTest.assertSimilar(findShortestWords(\\\"You can never cross the ocean until you have the courage to lose sight of the shore.\\\"), ['of', 'to'])\\nTest.assertSimilar(findShortestWords(\\\"There is only one way to avoid criticism: do nothing, say nothing, and be nothing.\\\"), ['be', 'do', 'is', 'to' ])\\nTest.assertSimilar(findShortestWords(\\\"The only person you are destined to become is the person you decide to be.\\\"), ['be', 'is', 'to', 'to'])\\nTest.assertSimilar(findShortestWords(\\\"What lies behind us and what lies before us are tiny matters compared to what lies within us.\\\"), ['to', 'us', 'us', 'us'])\\nTest.assertSimilar(findShortestWords(\\\"If you are depressed you are living in the past. If you are anxious you are living in the future. If you are at peace you are living in the present.\\\"), ['at', 'if', 'if', 'if', 'in', 'in', 'in'])\\nTest.assertSimilar(findShortestWords(\\\"Happiness depends upon ourselves.\\\"), ['upon'])\\nTest.assertSimilar(findShortestWords(\\\"Chase two rabbits, catch none.\\\"), ['two'])\\nTest.assertSimilar(findShortestWords(\\\"Only the truth of who you are, if realized, will set you free.\\\"), ['if', 'of'])\\nTest.assertSimilar(findShortestWords(\\\"If you end up with a boring miserable life because you listened to your parents, your teacher, your priest, or some guy on television, then you deserve it.\\\"), ['a'])\\nTest.assertSimilar(findShortestWords(\\\"To accomplish great things, we must not only act, but also dream; not only plan, but also believe.\\\"), ['to', 'we'])\\nTest.assertSimilar(findShortestWords(\\\"A tiger doesn’t lose sleep over the opinion of sheep.\\\"), ['a'])\\nTest.assertSimilar(findShortestWords(\\\"Kindness is a language that the deaf can hear and the blind can see.\\\"), ['a'])\\nTest.assertSimilar(findShortestWords(\\\"Being realistic is the most common path to mediocrity.\\\"), ['is', 'to'])\\nTest.assertSimilar(findShortestWords(\\\"Bravery means finding something more important than fear.\\\"), ['fear', 'more', 'than'])\\nTest.assertSimilar(findShortestWords(\\\"Can you imagine what I would do if I could do all I can?\\\"), ['i', 'i', 'i'])\\nTest.assertSimilar(findShortestWords(\\\"Believe you can and you’re halfway there.\\\"), ['and', 'can', 'you'])\\nTest.assertSimilar(findShortestWords(\\\"Remember that happiness is a way of travel, not a destination.\\\"), ['a', 'a'])\\nTest.assertSimilar(findShortestWords(\\\"May the best day of your past be the worst day of your future.\\\"), ['be', 'of', 'of'])\",\"language\":\"javascript\",\"summary\":\"Create a function that accepts a string as an argument. Find its shortest word(s) and return them as an array sorted alphabetically (if there are multiple shortest words).\\n\\nExamples\\nfindShortestWords(\\\"I think the solution is fairly obvious.\\\") ➞ [\\\"i\\\"]\\n\\nfindShortestWords(\\\"Chase two rabbits, catch none.\\\") ➞ [\\\"two\\\"]\\n\\nfindShortestWords(\\\"We become what we think abou\",\"tags\":[\"loops\",\"regex\",\"strings\",\"language_fundamentals\"],\"timestamp\":{\"$date\":1486859404253},\"title\":\"Find the Shortest Word(s) in a Sentence\",\"stats\":{\"completed\":{\"total\":310,\"ratings\":[1,1,1,1,1,0,2,1,0,2,4,1,2,1,3,2,2,2,2,2,2,1,2,3,2,1,2,1,2,1,3,2,3,1,1,2,2,2,3,2,2,0,0,1,2,2,2,3,2,1,2,2,1,2,2,2,1,2,1,2,1,2,2,3,3,1,1,2,2,1,3,1,2,1,2,1,2,1,3,2,2,2,2,1,2,2,3,1,1,1,3,5,2,2,2,3,2,2,3,2,2,2,2,2,1,0,2,2,2,1,2,0,0,1,3,2,2,2,2,2,3,2,2,5,3,2,3,2,2,2,2,2,3,3,2,2,2,3,2,3,1,2,2,1,3,3,3,2,2,3,2,1,2,3,2,3,2,2,2,3,3,2,1,3,2,0,2,3,3,3,2,2,2,3,3,3,2,3,2,2,2,1,3,2,3,3,3,3,3,3,3,5,3,2,2,3,3,3,2,3,0,3,3,2,3,2,3,3,3,3,1,4,2,2,3,3,2,3,2,3,3,3,2,3,2,1,0,0,3,3,3,2,3,2,3,3,3,0,2,2,3,2,0,3,3,2,3,3,3,2,3,2,1,1,3,3,3,3,2,2,3,3,2,3,2,3,3,0,1,3,2,1,4,2,3,3,3,2,3,3,1,5,3,3,0,3,2,0,3,2,3,3,3,3],\"rators\":[\"BkPgkDQGHm66X4Qai\",\"ssh2AYXYc7RpKdaFT\",\"6QR2QdW689ihtHjan\",\"t8NCffCXkXjgXfz24\",\"fzZHyr2hQ3S7q4zSE\",\"FXNEQsvx4hy6vZoZv\",\"nF7W5gqzR2kEGZsS2\",\"veWq2YJ34c64qPr9r\",\"d4yNTMkjyht3xrwui\",\"ZtBooPBoCGPcRRs6D\",\"ygchnJzqCsdhv3Prh\",\"Pxhpi7n3Ax24FposE\",\"6L44JAK3M8ucLx7Gy\",\"aSvznr454JX3XCW2E\",\"dehNP5mnxnRwS2rbh\",\"S5YNHAsg8aDExEXau\",\"QkQD465yGgkZGWbbR\",\"hi7Hvtq2mJfkXEGF2\",\"5tCdCBuApEzYxQtYT\",\"rCq2n3ZLaoNWPWpup\",\"ZZA6JdLEBxHGozyWP\",\"G5WEnnz5sur6wbhf7\",\"N8QNoCvTHKpTguBWJ\",\"4vDxTxSMNLMRPnHzz\",\"EnuLnD8vHA6Wm7S5h\",\"tJvyZp4fHZBaEHd9R\",\"65dbBZynphj53nXqA\",\"6rwaHSDXrZmpJaJYu\",\"CNmMthhrn2KmQeY8Z\",\"BbYN9gX5Zpv88dQa4\",\"mnTtC3rYvYiMdengM\",\"xwxqomADeex2WzsN6\",\"MJodRpziHHB8SwZ99\",\"t9urqYbuDRKijLTdy\",\"9BsPuCgMKChR8ymb4\",\"t8HGBi6x4483svNie\",\"PRFWbXbqvWxBrZr23\",\"mbBqrZp3JYr6RykBp\",\"xxmeopX7HggJJsvYB\",\"pbMiijAQg2JNcKDQf\",\"EiZd7DcYQ8asnKZyp\",\"5MwBtbnmneJwnkwcj\",\"7WSz54KxZzrywKCie\",\"xeE5KMTcmNLMqLqg4\",\"Prw5GCtaADD7AuaBE\",\"GLYBQ9z39osxSutRX\",\"vqQj2du9jyPEcNZJ5\",\"2eAwdyT6n7og5EzdW\",\"rhqDTR5ZtavR89fwv\",\"sQTaZGCCsE7BNQzyG\",\"kFPg3yqJJdtgZmZrf\",\"QfoPgYgT5tBPXSbAv\",\"PADbPTWHgi7KKhH7Q\",\"oSKuxjH2N6emtz4GY\",\"hD8btcBqRLPYJJSum\",\"yuJP97Bi6HnWcfooY\",\"LDc8cMrTShPkzyEXd\",\"8LWZqjKiSfHscCLyv\",\"a6WZEduRptjaKzzbv\",\"Nqayy73BLmsx8Epa8\",\"H2C2CX7X73ne2cwrD\",\"riz53t5Er2xkLeaBS\",\"AgQburWndXwEhgomM\",\"FbSKG7bTLr7eFJSsJ\",\"pqCDFDCYoA7aswNES\",\"dAe4nADmGE2yjASLr\",\"Yb2X7qeah4BL2Ayhu\",\"JzcuZQNK6GD4B4pwB\",\"hy63rX7K3hEfyp8B4\",\"TwtgrBTHiCnkP584n\",\"oDh6zcQhv7iuLxYj3\",\"W3s5joDdNgqFB3cMo\",\"oi3QZpwLcPjrZXdCx\",\"RW2wFPbMQniZWPmw4\",\"hL5xiHkF7NCCoSAC7\",\"C8HNEStupvpdKTkH8\",\"XYtjfdJwA5RWs5G2D\",\"QFhBuvx3uHkRXZjda\",\"3yYC3kjZ6PGuLAKKj\",\"XHngE5iScvztMpnR2\",\"75QLwZDCeFHrhWTpr\",\"tcr6kdtWephfSa8bc\",\"Bdy8KtxTd3Jkjd4a7\",\"KDdxq4jfx6H5bwyPq\",\"5vkGSBsjNp7Z8d9ZW\",\"5SQHR4iytD7Z3jgyv\",\"SsxAHmQXtsvD2jpGW\",\"tunvQijaxBmN8NKte\",\"YpGa4Dtn87PdscnK2\",\"Rz6rKH3W5AQfeBTuy\",\"wRRvJjGKbpX2gvoJg\",\"aGeZvwhbJNccmSGPe\",\"WXWWzTx8waAmYH5R2\",\"RsYqvEp4wjGgzSzjA\",\"q6Q6yRwWxFtegCMPE\",\"WA8Pw6jajkjnhn5qk\",\"eeowMRRPp2viQ7tin\",\"XovjY6a5SDrypxG6k\",\"fGsnj3XEufkYDBWE7\",\"Ra3YXDYAJgGi5C7eD\",\"Hz8mnq7xFJZKLymTh\",\"AHuPZEaTZJE2gwhWY\",\"YH3vetZCuiE8eob9o\",\"rToezGeiciwwEkYNd\",\"7pPPRpL8FhEJat8KF\",\"c5FoJ26xo6Jer46Cv\",\"AhC88RpTjJ8kETcWh\",\"QF7rvMaH8MEXfx84i\",\"NbsMkYuSFa8LsnZtT\",\"thEsZ7N6X8qfZMbcv\",\"8wFyDvkPiDdKRDExt\",\"FGEeCTorXbX3WvjFW\",\"tuyDaJzFy78jxvhCY\",\"vqzLpNo9rTagzWeMr\",\"CZesJ56GYSH2NKfqe\",\"KyTQmJfxxdrWS9Dpz\",\"YAzwLNgqc9JpybGzh\",\"PYyRk44mGdEqmPZRT\",\"RNKWjAHrXt9AiMc3g\",\"6bcvTf3D8jrhuf3j3\",\"8CdxcXWm7J6GDiWD2\",\"eKz92cBcXDPZ98dsD\",\"HWdhCoAC5YH78SqFA\",\"e2eu75zT4BwkrqL6o\",\"ZTYXPkgL9E4vXWKev\",\"3Hr7odFaLvzbALrJx\",\"fMbZnKta63wqpPsqN\",\"ggj8NF9hiYrJfLqGn\",\"MmpisT9nmzPJDQuRC\",\"cuQSsGutnSkLjJpNJ\",\"enuhRD8zZn4QDNTc4\",\"hr9rERhkPtGbbgqdT\",\"HQuhas4KXrETxYk9o\",\"m3fAK5rRig452rTs4\",\"mFwE6bs8XXFSJcCbN\",\"uLEYr4HW8F9ZeHqCd\",\"hrMyNCp6vfPZXzWmT\",\"SDtZFL5NzAoCPofXk\",\"FnKaqsKZiNvWcyryx\",\"KPM6XyeJSbTJDDpih\",\"tXzqHX2abH7KJQqKg\",\"XcHCqYmeoqxDsoucx\",\"crpgyry7fwiZqkRsB\",\"ak5aPiT6QWpmbnPzD\",\"Jh6sPsgj8yHy95joL\",\"eq9dWq4Q6bPCG4AsA\",\"378YHSXS8qQY4EtZk\",\"G7bdEb5gSLLR59Fvn\",\"Gsy7tjKKv62tbhLAr\",\"KzMMvGnXcWGTmRE7F\",\"i5bG6SKQwELTkrdkD\",\"Jwoe6heepP8r77Doj\",\"kYJupSpPXAe6SSFbR\",\"mNMQvcxKSSvqqMYCH\",\"bbbpNxM3hgGMCqMn8\",\"TMTH5LfMm9MrBFyEx\",\"2innwjWqxJHo4eRGh\",\"LTD7KCHFuXrmTWpQ4\",\"n5wubRfh6zh8QRymN\",\"2NJuDfSqdrF8kHHni\",\"Jn4CucnvnMe3pmguA\",\"JTt4GgcZqER5BM3X4\",\"KPDPaGaJ4jGtRusF2\",\"vWasKJEBgD3nRXzxn\",\"8cnfbuDCcCsE9jpKZ\",\"CJnuSjyCBMTbTiibD\",\"eKHRmZxaa6gbzQTd3\",\"pd8dm7sWLW9cY6dYW\",\"K8ZNGAxZEHZxnaT6J\",\"6XbwEXgskYHLL7Lu3\",\"fPuuxrpQruWKn7JcQ\",\"ZBwRnqMrj6zgh84Fi\",\"2dh3D93pXqFerJ48s\",\"4kLhHM6cFjt3qbnDz\",\"q37A9CWmvtTnBmPQu\",\"zkk54Gr7LG33b57z2\",\"EjPLq3QSJdGQFJdgW\",\"gGETo2x9dY5TsWc2b\",\"K8retouBZnftajjFi\",\"nim4ZZpXjLxa9wFFe\",\"Akq3fQcPRgPrWfsye\",\"HhLGvPRCyHeforjRk\",\"SYEuojZtP6yLXryHv\",\"8xuMMGF7fyQWL2fKH\",\"WnJ8S8rGdtv7Q6xzt\",\"gGnDsJz5hr2t9MKCF\",\"xwP4dnnjtsqDE29xv\",\"av9jN3SbNRM7Xe2qw\",\"dgwRvPi62zKghWiHb\",\"SgE5Dnm3f8eSBdDCg\",\"uhP3Z8KkPxySxn2n7\",\"bjn5DTzzaWCP5BDgX\",\"eLKLTgPTbXWBko53D\",\"S7R7voZRxnWjCn8pi\",\"cTasoJQG2iA6FvuK4\",\"uwxxtSrPSK9HgMyYe\",\"h4jFmtbFn92eA4649\",\"BTDyduiRYDSm5LyeD\",\"54Ka62KytXRsrLPhZ\",\"5GWkiNRN6xMuRu7Dg\",\"EWn8w8P3nNh7knatY\",\"g5noFWaoRtZNcEEAW\",\"fmLzKJTPWvtGRAaAN\",\"eomLS3wh6tQPN8jtH\",\"qBaLGrm952ii9K23M\",\"FJsvM5yqKuK9yMk9P\",\"rSJGLYSXMuu3RWjun\",\"T2iNiHxRWvdzWAuJx\",\"zgoq9MhrL2h75DAMA\",\"yHv52XEyYQ9ZuAZcq\",\"R5iq8CcAMQpq5irrX\",\"FHzvDACEZuAjRwL7v\",\"4itF2fjGR9Swc48Zp\",\"gyB5wJihaSZCWKTCB\",\"ydEdzuCCZt4yny9Rq\",\"vewKwcMeGuk3p3MsN\",\"wcjknenWdPRhrRScv\",\"6AkHZRsnysi2k9izF\",\"9yD94GMBrZi5Hiy3T\",\"cTsLoz56NpQTTCCom\",\"yjtdwc2AC4jA2RWtn\",\"5Zq3aGdvh4LHBvnJL\",\"R4JQmeA6cYyfXbmLF\",\"zw7g7T8wE5R5CBhXr\",\"6BpBQnSGhzgvhXrEy\",\"XKi8iZXBCHCaebSHh\",\"AasGs8AeX9Lcb9xJn\",\"Q9KQomTTPBsrkAL6c\",\"RE4Mm9T6Q9uygAxGS\",\"mHT2bJb5SByfJ8yKS\",\"Y9Nz9yafaibz54W4o\",\"46EqDiLEdJPtDFujt\",\"nRht5DZA6YcH2kAo6\",\"DHwbkbzYNpmkSFT7u\",\"PHG5L3JeydYmYP5b9\",\"uKv6ghxAFuZ5Rb3tD\",\"mHaHudYExvi45DSRf\",\"DSPfqST6jjbJ8znug\",\"EAuL56kpyLytw4RcR\",\"BdvdJYwHZr7JpkHsn\",\"4WgxcywfLRdxZ4gzP\",\"z6QfbuG6TXE7GKynQ\",\"5osqw9vjWW3AQQHTd\",\"QEhgdaBYvvTH4GpoN\",\"YReEuyfgCrf9xEhYT\",\"rfsQxYTnovxYJ4s7Q\",\"zTZtM9jRsu8eXie6s\",\"Nv5a34gxg5yvLKRW8\",\"Tkt5WhsaL2AfpHnzu\",\"yaLfyn2cQsG7prEiZ\",\"YER6iBcpJCuhgrYDN\",\"uAS9uKs8KQmp8uhqn\",\"E6DBfkTgHuPsDWdG8\",\"a777e8chPvJkY3tKa\",\"pi76g3eRpnKrhee2a\",\"a7LBurCmz5n6gECbv\",\"PytNZK9mNiRiZxPrm\",\"dDFJpK4pXCsQYuHmc\",\"eQXwk5zGckM8tCWYH\",\"eFjGhq7C7bBKXjT6X\",\"8raviPK67KKxzQWcF\",\"NchnDcEmsLTeFZ4FH\",\"r7mZLgpQWzRiGddL5\",\"QRv96jmNaYsWkxQEG\",\"E2hpke7mHxAWsw5t9\",\"buX4mCQhtXCfBjeno\",\"GvM9x2bsvy6cgNefJ\",\"aEm3Wvj2rFYRL8Lrb\",\"Nua6T3dBurBy3Qfg9\",\"FD2brFJycXfXnQrzZ\",\"tAF9Gf6PiGogbZuWs\",\"4Xv87xmdSnpYhi8hz\",\"zNN2fW2pJGpTxBgzx\",\"s7Qqx4Jnuq85iB7Lw\",\"Xk2g4CNFAnYcvxiSr\",\"bX6tpTCjwoi6XMMbK\",\"hyx8iH2z3QySmyRKT\",\"ZTTJprKDvFqKGew7c\",\"CNc6rmwhbxkxEhHAp\",\"kp2ZbCewZJAbfd7xv\",\"vGKxRcDYDsXzTQuEQ\",\"8BJyXvRWcrvN3nttS\",\"ct42f2gGpMXSd9hXM\",\"6P9KgzXeJtZ6ejQcu\",\"qWR7eXxBiNee22A5u\",\"u9cRf5kvtpRB5ffB3\",\"e9Cknxbx6o7Nb6REs\",\"g4NCSxxHqHCGMpWwT\",\"GkEW4AcNHyordAyyJ\",\"ftXLsTaA7yHmhuEsY\",\"RtPhDuwmvWNHiBxmG\",\"wJTDDTE3TrmSXKP4d\",\"NGvCPuMiAP3xrRLfB\",\"AFfw7cGg83uYk2Miy\",\"DPi9QGLctq2y76KuE\",\"QvEXmSEo3ANp3yPyH\",\"oDtGiNqDMHmhHE3J8\",\"Ya3eHgs8x3unZRLpb\",\"emkZY48deHMDRsxX8\",\"J7d397iB5GuWRAMfg\",\"wo4cpen33NYFHNca7\",\"ThaiAKWWDw2W4QfJh\"],\"quality\":[5,3,5,5,5,5,5,5,5,5,4,5]},\"complaints\":{\"total\":5,\"reasons\":[[\"bug\"],[\"bad_resources\"],[\"confusing\"],[\"bad_resources\"],[\"confusing\"]],\"skippers\":[\"BkPgkDQGHm66X4Qai\",\"C8HNEStupvpdKTkH8\",\"uMW2C3rDBzGw4mcFW\",\"upNEsFuMFipzgj2Sv\",\"Rz6rKH3W5AQfeBTuy\",\"yF2yyeA4CMSgQaxur\"]},\"instructions\":{\"score\":0,\"voters\":[]},\"tests\":{\"score\":0,\"voters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.75,\"family\":[{\"_id\":\"WSmaJEJqxzXkqyzMj\",\"language\":\"cpp\"},{\"_id\":\"mYJPkSLLxWthSffR6\",\"language\":\"javascript\"},{\"_id\":\"24EMPJEyM4uPuTf8X\",\"language\":\"php\"},{\"_id\":\"ivWdkjsHtKSMZuNEc\",\"language\":\"python3\"},{\"_id\":\"zrJvcSGqwuySgrv9u\",\"language\":\"ruby\"},{\"_id\":\"ARqb7EMoSKyZQfEPY\",\"language\":\"swift\"}]}}"]