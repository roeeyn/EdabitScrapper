a["{\"msg\":\"result\",\"id\":\"924\",\"result\":{\"_id\":\"PMKNyPeYgz7weyNXF\",\"author\":\"er0s\",\"authorId\":\"5Zq3aGdvh4LHBvnJL\",\"code\":\"function wordBuilder(letters, positions) {\\n\\t\\n}\",\"difficulty\":1.6335078534031413,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"AX48ncQRzrARZHPqf\",\"instructions\":\"In this challenge, you have to build a word from the scrambled letters contained in the first given array. For establishing how to assign the spots to the letters, you will use the positions contained in the second given array.\\n\\n```\\nletters = [\\\"e\\\", \\\"t\\\", \\\"s\\\", \\\"t\\\"]\\npositions = [1, 3, 2, 0]\\n\\nStep 1 ➞ Letter \\\"e\\\" goes to index 1 ➞ _  e  _   _\\nStep 2 ➞ Letter \\\"t\\\" goes to index 3 ➞ _  e  _   t\\nStep 3 ➞ Letter \\\"s\\\" goes to index 2 ➞ _  e  s   t\\nStep 4 ➞ Letter \\\"t\\\" goes to index 0 ➞ t  e  s   t\\n```\\n\\nGiven the two arrays `letters` (containing the scrambled letters of the word) and `positions` (containing the indexes of the letters), implement a function that returns the resulting word as a string.\\n\\n### Examples\\n```\\nwordBuilder([\\\"e\\\", \\\"t\\\", \\\"s\\\", \\\"t\\\"], [1, 3, 2, 0]) ➞ \\\"test\\\"\\n\\nwordBuilder([\\\"b\\\", \\\"e\\\", \\\"t\\\", \\\"i\\\", \\\"d\\\", \\\"a\\\"], [3, 0, 5, 4, 1, 2]) ➞ \\\"edabit\\\"\\n\\nwordBuilder([\\\"g\\\", \\\"e\\\", \\\"o\\\"], [1, 0, 2]) ➞ \\\"ego\\\"\\n```\\n\\n### Notes\\nEvery given test case has valid parameters, don't worry about exceptions handling.\",\"isHidden\":false,\"lab\":\"Test.assertEquals(wordBuilder([\\\"e\\\", \\\"t\\\", \\\"s\\\", \\\"t\\\"], [1, 3, 2, 0]), \\\"test\\\")\\nTest.assertEquals(wordBuilder([\\\"b\\\", \\\"e\\\", \\\"t\\\", \\\"i\\\", \\\"d\\\", \\\"a\\\"], [3, 0, 5, 4, 1, 2]), \\\"edabit\\\")\\nTest.assertEquals(wordBuilder([\\\"g\\\", \\\"e\\\", \\\"o\\\"], [1, 0, 2]), \\\"ego\\\")\\nTest.assertEquals(wordBuilder([\\\"l\\\", \\\"e\\\", \\\"h\\\", \\\"n\\\", \\\"l\\\", \\\"c\\\", \\\"a\\\", \\\"e\\\", \\\"g\\\"], [3, 5, 1, 6, 4, 0, 2, 8, 7]), \\\"challenge\\\")\\nTest.assertEquals(wordBuilder([\\\"e\\\", \\\"i\\\", \\\"l\\\", \\\"g\\\", \\\"x\\\", \\\"h\\\", \\\"p\\\", \\\"o\\\", \\\"c\\\", \\\"r\\\", \\\"i\\\", \\\"a\\\", \\\"c\\\"], [1, 3, 0, 6, 2, 10, 9, 5, 4, 7, 11, 8, 12]), \\\"lexicographic\\\")\\nTest.assertEquals(wordBuilder([\\\"s\\\", \\\"o\\\", \\\"r\\\", \\\"t\\\", \\\"e\\\", \\\"d\\\"], [0, 1, 2, 3, 4, 5]), \\\"sorted\\\")\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,1,2,0,1,1,2,3,3,2,3,2,2,2,1,1,2,0,2,1,1,0,2,2,2,1,2,2,2,3,2,2,2,1,2,2,2,1,2,0,3,2,2,0,2,1,1,2,2,1,2,2,1,0,1,3,2,1,2,0,2,2,2,0,0,2,1,2,1,1,1,2,1,1,1,2,1,2,1,1,2,2,3,2,1,2,2,2,2,2,2,2,1,3,1,2,3,3,2,0,2,1,0,2,2,1,2,0,2,0,2,0,2,2,2,3,2,1,3,2,2,2,1,2,2,2,1,3,1,0,3,2,2,2,2,2,2,1,1,2,1,2,2,2,2,3,2,1,2,0,2,2,2,2,3,2,3,2,2,2,2,2,2,2,0,2,2,2,2,2,2,2,1,2,1,1,2,2,2,2,2,2,0,1,1,0,2],\"rators\":[\"5Zq3aGdvh4LHBvnJL\",\"uA68xcqjazG2GB8oJ\",\"yjtdwc2AC4jA2RWtn\",\"AasGs8AeX9Lcb9xJn\",\"Y9Nz9yafaibz54W4o\",\"EWn8w8P3nNh7knatY\",\"HrJtdRbvHHNh7tMMo\",\"mHT2bJb5SByfJ8yKS\",\"oFckF5bB5dGBQKneS\",\"8BFSTCnoe2QggN64c\",\"CJnuSjyCBMTbTiibD\",\"65dbBZynphj53nXqA\",\"RE4Mm9T6Q9uygAxGS\",\"FJsvM5yqKuK9yMk9P\",\"zNN2fW2pJGpTxBgzx\",\"wcjknenWdPRhrRScv\",\"DHwbkbzYNpmkSFT7u\",\"SNiJRRosrmSWssLj4\",\"2innwjWqxJHo4eRGh\",\"RGRdciDWw72qSGhMr\",\"SDtZFL5NzAoCPofXk\",\"6BpBQnSGhzgvhXrEy\",\"Akq3fQcPRgPrWfsye\",\"MRedsQ5gbonhjmZzW\",\"Q9KQomTTPBsrkAL6c\",\"zgoq9MhrL2h75DAMA\",\"q3HofEtRrDh2Dg3eN\",\"46EqDiLEdJPtDFujt\",\"Cxdhr3m4fcLF8nepr\",\"qhHtGd65g8SoGyJ5W\",\"usYptPR3LKY8QzCvD\",\"fGsCtqXCmxLKbNimY\",\"n5wubRfh6zh8QRymN\",\"EjPLq3QSJdGQFJdgW\",\"SeRvurxt3pGKDkBCf\",\"2tCCFm5iefjrRSaxv\",\"93PfqWPmJh3NANXRw\",\"DyunorHmNEeBgSGqs\",\"EAuL56kpyLytw4RcR\",\"BdvdJYwHZr7JpkHsn\",\"XKi8iZXBCHCaebSHh\",\"QGshpArSs3bHZZR7W\",\"3SWFQTM6ebLzDjmwJ\",\"sbme4fRJjjBjYXRbY\",\"mMyX4gfHFhfNTGgKK\",\"gzTs5oFrfZwh3Kfze\",\"zd9FLSzsGz3evKafy\",\"ih2aGaqkMaagTgyL2\",\"9gEWz76H8KmhN4yJj\",\"bzm5WayBjwad5jhdR\",\"KaHsK5EgaYKt7vCFH\",\"aPX8qCXL6TmfpRfgy\",\"6gPHMpkEP8JuHxzpd\",\"xfxkLoQsbZBonmBGp\",\"2NJuDfSqdrF8kHHni\",\"g5noFWaoRtZNcEEAW\",\"ygNnCnmzZfy3r2m6w\",\"sutzxu4yTueBKE9Qp\",\"mHaHudYExvi45DSRf\",\"yaL57wdXmgAZTvKfX\",\"nKcsKogvPHfmiogtT\",\"5YCX58nhHT8oRCHyy\",\"3aZvfgr2H2WF8Yog2\",\"cp3X8hk8yNME7qoD9\",\"PytNZK9mNiRiZxPrm\",\"zsNp9fk9BGDBiHr4G\",\"M7kpJSXFx67HhrTaZ\",\"7zysDWmX6xXejYcux\",\"6tphkSZYFWzrDrYEb\",\"kWRRJQBkRzMAFJipg\",\"55iiBnTYyjYBp5pEN\",\"DsFQazFAKZJ83RbtJ\",\"RqMXPyskYgGs2TgZf\",\"L5J3jqeXEL52ZAP29\",\"PGcR9NpeXfhc6DCyW\",\"pi76g3eRpnKrhee2a\",\"k5TGxBtLi9BXxeChT\",\"7JCLyrrY6JYGpocac\",\"cJwiiiX7qwSvgtmk8\",\"wQ25xzXqh4y3A8NBB\",\"zTZtM9jRsu8eXie6s\",\"YER6iBcpJCuhgrYDN\",\"zvYa5b9wsiMYJZ2yS\",\"9XnGoq9Tv6ut3zTtH\",\"bX6tpTCjwoi6XMMbK\",\"EPeA837HC2cXj3PEy\",\"eomLS3wh6tQPN8jtH\",\"uAS9uKs8KQmp8uhqn\",\"vtHbevf2tHqe6mRxX\",\"vWhgrr5oem8WtKdxm\",\"d9LBRxvADNBB5QJMB\",\"RGN3QTb5LXj4ZPPkj\",\"a777e8chPvJkY3tKa\",\"ipiC2qPhKZWsAouJf\",\"6oNkXuuDRBTFvpr8y\",\"2ZFoLTxcCARhwc8xX\",\"HwZx7c3QFWmt5x4oE\",\"E6DBfkTgHuPsDWdG8\",\"zw7g7T8wE5R5CBhXr\",\"dDFJpK4pXCsQYuHmc\",\"z5ebtimXwFFJdYxoa\",\"PMtk6T2F9eK95g23d\",\"tAF9Gf6PiGogbZuWs\",\"9Pzg45NEiRXhLtLh3\",\"mBXyjSZCHMK53zCYR\",\"7wtuhPesfhcYsfZaZ\",\"4TuceAZ8oTDzsjhir\",\"sW78rbapvsS3AnuJe\",\"2QXWnaHfR4ckmeKuz\",\"QRv96jmNaYsWkxQEG\",\"BSkoT6o2GweZkqXbc\",\"iGZfQDmqdyPjzhKAg\",\"Q7Yxda7dqKeYPs2Db\",\"ij9YRJvZz6WbqcGXS\",\"Wv9v7fHb8umujfg2j\",\"uigAJ9KT5muMWTDis\",\"C9LKGu2g5hSijvDzA\",\"STipuJs6kBvPqqsSE\",\"FGEeCTorXbX3WvjFW\",\"9ADYC3ogYkE5JdjTn\",\"8raviPK67KKxzQWcF\",\"24GAX5bwCnwo9JLnr\",\"Ya3eHgs8x3unZRLpb\",\"eQXwk5zGckM8tCWYH\",\"PGCDJpQMN8Sjn9Gm6\",\"4ntYzGHHBgqf58udP\",\"p5ZshR8zhTqmdhKDc\",\"E2hpke7mHxAWsw5t9\",\"PAzNgJF54C2mYPkR9\",\"nAmJEX7BkHLd9LsG2\",\"pLpcDC3EYx2DDQSdt\",\"7gZKfvwaeqsGKXMEN\",\"ttuGK7od8simjgmCJ\",\"r7mZLgpQWzRiGddL5\",\"yrLBMbni8KDsC5K44\",\"FDqfqHn8ww9QoSFhb\",\"nkH3HfJXLMNcBMM79\",\"Po3v3dHCk6wYGKMwi\",\"osoeubDnMiuSbwdcL\",\"aEm3Wvj2rFYRL8Lrb\",\"mfYrBKwDr4hXSFuuN\",\"jnyub52Fi79drGvow\",\"ZzeBNWyXdAcMufNma\",\"3pb8q4K4jv6jta45d\",\"kp2ZbCewZJAbfd7xv\",\"vn6nR36mdfY8z2zKx\",\"sj8yRK9uzJ5LLZABJ\",\"evTTY9hwrtogaNxXn\",\"vAh63eGRwkuJtoP8v\",\"qWR7eXxBiNee22A5u\",\"4Xv87xmdSnpYhi8hz\",\"g4NCSxxHqHCGMpWwT\",\"CNc6rmwhbxkxEhHAp\",\"jkumHyXfMkhGcPgqC\",\"CH53jGETBeJTummf3\",\"u9cRf5kvtpRB5ffB3\",\"c7uBxu2rgY77H5d79\",\"ZcqshY58sGEEvgeaq\",\"vewKwcMeGuk3p3MsN\",\"jLSZdBseR2kfjt8dL\",\"R9uaMzX2Y4ND8Cosm\",\"ctsZbx4dQNmYJ6Nox\",\"Yp7uvStL97cC9fKkY\",\"TPKW4EKL54dRgGxqM\",\"3Gf7ikLijfoxabiPY\",\"LRxyZwXywbwzt255M\",\"JsRTAwWK7Nikj4sKA\",\"Wv2vJnEj8ywNmARoF\",\"srJ34BaybkQh3qRkM\",\"2Qk2mFu9HBFzrB24i\",\"ApqWTmEEkTCsDou48\",\"npp5hesJrst6ghKSM\",\"J7d397iB5GuWRAMfg\",\"cgCQDs9i7yChKeAjE\",\"wJTDDTE3TrmSXKP4d\",\"oDtGiNqDMHmhHE3J8\",\"QvEXmSEo3ANp3yPyH\",\"qaTBhX3GmKtDpF6gk\",\"NGvCPuMiAP3xrRLfB\",\"N3CNtWZz4ovJfH9Aw\",\"vGKxRcDYDsXzTQuEQ\",\"8BJyXvRWcrvN3nttS\",\"pdsiGN5LX8wu9R9sD\",\"nBJve5CzG6WAw7WFQ\",\"gXTAie79kiw28tx5u\",\"mpLFbFKjY6u3nsDMv\",\"LwD3CyYSiBfg3mA4r\",\"ZcJm2kuqJnN3CXFaR\",\"bfYmA3LMvhSrK59cn\",\"SCYNpjgtLCE9rKpYB\",\"jYTyyvJwnmypjvY8x\",\"fjBB8rBHeCeMGELvW\",\"i5QeAsrM4m6hzPTku\",\"z47JaNrQMgvuPx5HE\",\"oyB4Wr4EeZnoDaa8B\",\"LPZ2QKCoB8q6rG25c\",\"uxKGACwmZ6FNZsMwE\",\"QHiEYtz3tX3s9nETo\",\"CHvzhtXnv8HTbPQ56\",\"6vdn7gegY7xXxYCbe\",\"zJBKAQ5FYvKHGpzS3\",\"sN2JyFeJCwfwwHPwF\",\"PTo9qt93YqGvL8fCa\"],\"total\":214,\"quality\":[5,5,5,3,5,5,5,5,5,5,5,5,4,5,2,5,5]},\"flags\":0},\"summary\":\"In this challenge, you have to build a word from the scrambled letters contained in the first given array. For establishing how to assign the spots to the letters, you will use the positions contained in the second given array.\\n\\nletters = [\\\"e\\\", \\\"t\\\", \\\"s\\\", \\\"t\\\"]\\npositions = [1, 3, 2, 0]\\n\\nStep 1 ➞ Letter \\\"e\\\" goes to index 1 ➞ _  e  _   _\\nStep 2 ➞ Letter \\\"t\\\" goes t\",\"tags\":[\"arrays\",\"sorting\"],\"timestamp\":{\"$date\":1574641231825},\"title\":\"Word Builder\",\"quality\":4.647058823529412,\"family\":[{\"_id\":\"NZeQkTEaQA7z7TM5E\",\"language\":\"cpp\"},{\"_id\":\"PMKNyPeYgz7weyNXF\",\"language\":\"javascript\"},{\"_id\":\"dYHH7CmYeWGXdEhCx\",\"language\":\"python3\"},{\"_id\":\"TzRyk42Z6Fckojmfc\",\"language\":\"ruby\"}]}}"]