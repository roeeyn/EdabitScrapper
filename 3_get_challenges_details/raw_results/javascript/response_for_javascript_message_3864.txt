a["{\"msg\":\"result\",\"id\":\"689\",\"result\":{\"_id\":\"LSw9Tgs6yMgQ4JfdX\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"function hasHiddenFee(prices, t) {\\n\\t\\n}\",\"difficulty\":1.4601542416452442,\"familyId\":\"PEAWKNGNi3H6YupZB\",\"instructions\":\"Given an array of prices `prices` and a \\\"supposed\\\" total `t`, return `true` if there is a **hidden fee** added to the total (i.e. *the total is greater than the sum of prices*), otherwise return `false`.\\n\\n### Examples\\n```\\nhasHiddenFee([\\\"$2\\\", \\\"$4\\\", \\\"$1\\\", \\\"$8\\\"], \\\"$15\\\") ➞ false\\n\\nhasHiddenFee([\\\"$1\\\", \\\"$2\\\", \\\"$3\\\"], \\\"$6\\\") ➞ false\\n\\nhasHiddenFee([\\\"$1\\\"], \\\"$4\\\") ➞ true\\n```\\n\\n### Notes\\n- Remember that each price is given as a string.\\n- All $ signs will be at the beginning of the number.\",\"isHidden\":false,\"lab\":\"Test.assertEquals(hasHiddenFee([\\\"$2\\\", \\\"$4\\\", \\\"$1\\\", \\\"$8\\\"], \\\"$15\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$1\\\", \\\"$2\\\", \\\"$3\\\"], \\\"$6\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$1\\\"], \\\"$4\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$15\\\", \\\"$40\\\", \\\"$19\\\", \\\"$50\\\", \\\"$22\\\", \\\"$41\\\", \\\"$35\\\", \\\"$10\\\", \\\"$38\\\", \\\"$41\\\"], \\\"$311\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$25\\\", \\\"$6\\\", \\\"$19\\\", \\\"$9\\\", \\\"$32\\\", \\\"$15\\\", \\\"$10\\\", \\\"$9\\\", \\\"$7\\\", \\\"$8\\\", \\\"$37\\\", \\\"$23\\\", \\\"$18\\\"], \\\"$232\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$31\\\", \\\"$30\\\", \\\"$21\\\", \\\"$12\\\", \\\"$10\\\", \\\"$38\\\", \\\"$42\\\", \\\"$27\\\", \\\"$51\\\"], \\\"$297\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$9\\\", \\\"$37\\\", \\\"$21\\\", \\\"$4\\\", \\\"$14\\\", \\\"$10\\\", \\\"$36\\\", \\\"$33\\\", \\\"$17\\\", \\\"$41\\\", \\\"$50\\\", \\\"$48\\\", \\\"$2\\\", \\\"$45\\\", \\\"$6\\\", \\\"$22\\\", \\\"$23\\\"], \\\"$499\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$44\\\"], \\\"$82\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$15\\\", \\\"$30\\\", \\\"$34\\\"], \\\"$79\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$35\\\", \\\"$29\\\", \\\"$9\\\", \\\"$47\\\", \\\"$43\\\", \\\"$4\\\", \\\"$37\\\", \\\"$32\\\", \\\"$49\\\", \\\"$37\\\", \\\"$32\\\", \\\"$38\\\", \\\"$43\\\", \\\"$19\\\", \\\"$26\\\", \\\"$46\\\", \\\"$46\\\", \\\"$31\\\", \\\"$24\\\", \\\"$6\\\"], \\\"$696\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$50\\\", \\\"$28\\\", \\\"$11\\\", \\\"$51\\\", \\\"$8\\\", \\\"$44\\\"], \\\"$192\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$50\\\", \\\"$14\\\", \\\"$45\\\", \\\"$43\\\", \\\"$7\\\", \\\"$45\\\", \\\"$34\\\", \\\"$28\\\", \\\"$46\\\", \\\"$50\\\", \\\"$36\\\", \\\"$23\\\"], \\\"$432\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$45\\\", \\\"$50\\\", \\\"$45\\\", \\\"$16\\\", \\\"$6\\\", \\\"$45\\\", \\\"$33\\\", \\\"$18\\\", \\\"$12\\\", \\\"$3\\\", \\\"$40\\\", \\\"$51\\\"], \\\"$364\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$33\\\", \\\"$26\\\", \\\"$40\\\", \\\"$10\\\", \\\"$24\\\", \\\"$48\\\"], \\\"$181\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$21\\\", \\\"$45\\\", \\\"$6\\\", \\\"$43\\\", \\\"$39\\\"], \\\"$207\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$18\\\", \\\"$44\\\", \\\"$51\\\", \\\"$31\\\", \\\"$22\\\", \\\"$8\\\", \\\"$21\\\", \\\"$27\\\", \\\"$21\\\", \\\"$3\\\", \\\"$42\\\", \\\"$10\\\", \\\"$47\\\", \\\"$29\\\", \\\"$32\\\", \\\"$47\\\"], \\\"$517\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$17\\\", \\\"$31\\\", \\\"$42\\\", \\\"$20\\\", \\\"$28\\\", \\\"$13\\\", \\\"$17\\\", \\\"$4\\\", \\\"$13\\\", \\\"$1\\\", \\\"$29\\\", \\\"$20\\\", \\\"$30\\\", \\\"$34\\\", \\\"$14\\\", \\\"$18\\\", \\\"$20\\\", \\\"$14\\\", \\\"$38\\\", \\\"$30\\\"], \\\"$456\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$48\\\", \\\"$24\\\", \\\"$11\\\"], \\\"$83\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$14\\\", \\\"$15\\\", \\\"$12\\\", \\\"$18\\\", \\\"$29\\\", \\\"$3\\\", \\\"$29\\\", \\\"$9\\\", \\\"$7\\\", \\\"$2\\\", \\\"$15\\\", \\\"$8\\\", \\\"$50\\\", \\\"$4\\\", \\\"$3\\\"], \\\"$218\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$30\\\", \\\"$40\\\", \\\"$2\\\", \\\"$25\\\", \\\"$48\\\", \\\"$42\\\", \\\"$22\\\", \\\"$6\\\", \\\"$48\\\", \\\"$14\\\", \\\"$15\\\", \\\"$2\\\", \\\"$46\\\", \\\"$20\\\", \\\"$5\\\", \\\"$10\\\", \\\"$35\\\"], \\\"$412\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$43\\\", \\\"$49\\\", \\\"$2\\\", \\\"$15\\\", \\\"$6\\\", \\\"$20\\\", \\\"$31\\\", \\\"$7\\\", \\\"$38\\\", \\\"$40\\\", \\\"$17\\\", \\\"$25\\\", \\\"$21\\\", \\\"$29\\\", \\\"$12\\\", \\\"$34\\\", \\\"$22\\\", \\\"$45\\\", \\\"$18\\\", \\\"$19\\\", \\\"$31\\\"], \\\"$524\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$25\\\", \\\"$16\\\"], \\\"$56\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$28\\\", \\\"$11\\\", \\\"$2\\\", \\\"$12\\\", \\\"$22\\\", \\\"$7\\\", \\\"$30\\\", \\\"$46\\\", \\\"$25\\\", \\\"$17\\\", \\\"$28\\\", \\\"$44\\\", \\\"$14\\\", \\\"$43\\\", \\\"$6\\\", \\\"$11\\\", \\\"$23\\\", \\\"$6\\\", \\\"$46\\\"], \\\"$459\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$24\\\", \\\"$31\\\", \\\"$6\\\", \\\"$20\\\", \\\"$35\\\", \\\"$33\\\", \\\"$1\\\", \\\"$46\\\", \\\"$45\\\", \\\"$36\\\", \\\"$43\\\"], \\\"$394\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$18\\\", \\\"$25\\\", \\\"$44\\\", \\\"$36\\\", \\\"$50\\\", \\\"$32\\\", \\\"$7\\\", \\\"$42\\\", \\\"$23\\\", \\\"$38\\\", \\\"$43\\\", \\\"$9\\\", \\\"$7\\\", \\\"$22\\\", \\\"$51\\\", \\\"$35\\\", \\\"$8\\\"], \\\"$557\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$17\\\", \\\"$37\\\", \\\"$43\\\", \\\"$6\\\", \\\"$22\\\", \\\"$39\\\", \\\"$11\\\", \\\"$29\\\", \\\"$11\\\", \\\"$1\\\", \\\"$7\\\", \\\"$30\\\", \\\"$1\\\", \\\"$30\\\", \\\"$42\\\", \\\"$27\\\", \\\"$12\\\", \\\"$16\\\", \\\"$13\\\", \\\"$42\\\", \\\"$19\\\"], \\\"$455\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$40\\\", \\\"$39\\\", \\\"$22\\\", \\\"$19\\\", \\\"$24\\\", \\\"$40\\\", \\\"$16\\\", \\\"$47\\\", \\\"$28\\\", \\\"$23\\\", \\\"$45\\\", \\\"$2\\\", \\\"$45\\\"], \\\"$428\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$32\\\", \\\"$22\\\", \\\"$16\\\", \\\"$34\\\", \\\"$6\\\", \\\"$10\\\", \\\"$19\\\", \\\"$25\\\", \\\"$46\\\"], \\\"$282\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$49\\\", \\\"$43\\\", \\\"$3\\\", \\\"$7\\\", \\\"$35\\\", \\\"$48\\\", \\\"$5\\\", \\\"$47\\\", \\\"$45\\\", \\\"$10\\\", \\\"$18\\\", \\\"$13\\\", \\\"$17\\\", \\\"$32\\\", \\\"$26\\\"], \\\"$398\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$37\\\", \\\"$29\\\", \\\"$22\\\", \\\"$32\\\", \\\"$32\\\", \\\"$51\\\", \\\"$18\\\", \\\"$49\\\", \\\"$19\\\", \\\"$15\\\", \\\"$6\\\", \\\"$18\\\", \\\"$8\\\", \\\"$2\\\", \\\"$36\\\", \\\"$39\\\", \\\"$48\\\", \\\"$25\\\", \\\"$32\\\"], \\\"$518\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$49\\\", \\\"$2\\\", \\\"$10\\\", \\\"$47\\\", \\\"$1\\\", \\\"$5\\\", \\\"$38\\\", \\\"$33\\\", \\\"$7\\\", \\\"$12\\\", \\\"$44\\\", \\\"$50\\\", \\\"$47\\\", \\\"$45\\\", \\\"$37\\\", \\\"$8\\\", \\\"$30\\\"], \\\"$465\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$41\\\", \\\"$38\\\", \\\"$12\\\", \\\"$33\\\", \\\"$34\\\", \\\"$7\\\", \\\"$40\\\", \\\"$19\\\", \\\"$17\\\", \\\"$48\\\", \\\"$41\\\", \\\"$30\\\", \\\"$1\\\", \\\"$38\\\"], \\\"$399\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$30\\\", \\\"$38\\\", \\\"$37\\\", \\\"$13\\\", \\\"$8\\\", \\\"$2\\\", \\\"$43\\\", \\\"$23\\\", \\\"$48\\\", \\\"$50\\\", \\\"$25\\\", \\\"$12\\\", \\\"$34\\\"], \\\"$431\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$11\\\", \\\"$41\\\", \\\"$4\\\", \\\"$6\\\", \\\"$37\\\", \\\"$51\\\", \\\"$1\\\", \\\"$23\\\", \\\"$41\\\", \\\"$18\\\", \\\"$6\\\", \\\"$36\\\", \\\"$40\\\", \\\"$36\\\", \\\"$16\\\", \\\"$10\\\"], \\\"$377\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$45\\\", \\\"$22\\\", \\\"$18\\\", \\\"$3\\\", \\\"$5\\\", \\\"$10\\\", \\\"$30\\\", \\\"$39\\\", \\\"$32\\\"], \\\"$263\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$49\\\", \\\"$32\\\", \\\"$47\\\", \\\"$14\\\", \\\"$47\\\", \\\"$51\\\", \\\"$27\\\", \\\"$51\\\", \\\"$18\\\", \\\"$44\\\", \\\"$16\\\", \\\"$29\\\", \\\"$39\\\", \\\"$16\\\", \\\"$1\\\", \\\"$12\\\", \\\"$16\\\", \\\"$48\\\", \\\"$44\\\", \\\"$41\\\"], \\\"$642\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$37\\\", \\\"$3\\\", \\\"$7\\\", \\\"$5\\\", \\\"$23\\\", \\\"$1\\\", \\\"$11\\\", \\\"$50\\\", \\\"$9\\\", \\\"$5\\\", \\\"$16\\\", \\\"$30\\\"], \\\"$197\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$50\\\", \\\"$12\\\", \\\"$43\\\", \\\"$45\\\", \\\"$44\\\", \\\"$38\\\", \\\"$17\\\", \\\"$2\\\", \\\"$42\\\", \\\"$9\\\", \\\"$37\\\", \\\"$25\\\", \\\"$33\\\", \\\"$35\\\", \\\"$51\\\"], \\\"$510\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$35\\\", \\\"$17\\\", \\\"$35\\\", \\\"$24\\\", \\\"$29\\\", \\\"$21\\\", \\\"$50\\\", \\\"$8\\\", \\\"$44\\\", \\\"$45\\\", \\\"$13\\\", \\\"$44\\\", \\\"$17\\\", \\\"$42\\\", \\\"$51\\\", \\\"$10\\\", \\\"$47\\\", \\\"$46\\\", \\\"$47\\\", \\\"$18\\\"], \\\"$643\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$37\\\", \\\"$29\\\", \\\"$5\\\", \\\"$2\\\", \\\"$27\\\", \\\"$7\\\", \\\"$4\\\", \\\"$32\\\", \\\"$6\\\", \\\"$27\\\", \\\"$24\\\", \\\"$43\\\", \\\"$41\\\", \\\"$15\\\", \\\"$13\\\", \\\"$25\\\", \\\"$27\\\", \\\"$44\\\"], \\\"$501\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$1\\\", \\\"$5\\\", \\\"$19\\\", \\\"$26\\\", \\\"$14\\\", \\\"$51\\\", \\\"$51\\\", \\\"$27\\\", \\\"$6\\\", \\\"$13\\\", \\\"$28\\\", \\\"$40\\\", \\\"$21\\\", \\\"$20\\\", \\\"$10\\\", \\\"$27\\\"], \\\"$412\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$4\\\"], \\\"$84\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$13\\\", \\\"$9\\\", \\\"$49\\\", \\\"$2\\\", \\\"$18\\\"], \\\"$91\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$23\\\", \\\"$14\\\", \\\"$42\\\", \\\"$28\\\", \\\"$18\\\", \\\"$35\\\", \\\"$22\\\", \\\"$37\\\", \\\"$6\\\", \\\"$35\\\", \\\"$33\\\", \\\"$37\\\", \\\"$12\\\", \\\"$45\\\", \\\"$6\\\", \\\"$27\\\", \\\"$3\\\", \\\"$9\\\"], \\\"$530\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$21\\\", \\\"$2\\\", \\\"$16\\\", \\\"$49\\\", \\\"$26\\\", \\\"$32\\\", \\\"$7\\\", \\\"$33\\\", \\\"$4\\\", \\\"$28\\\", \\\"$12\\\", \\\"$24\\\", \\\"$39\\\", \\\"$39\\\", \\\"$28\\\", \\\"$13\\\", \\\"$27\\\", \\\"$33\\\"], \\\"$490\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$9\\\", \\\"$20\\\", \\\"$46\\\", \\\"$36\\\", \\\"$14\\\"], \\\"$151\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$50\\\", \\\"$37\\\", \\\"$27\\\", \\\"$39\\\", \\\"$3\\\", \\\"$10\\\", \\\"$18\\\", \\\"$39\\\", \\\"$27\\\", \\\"$24\\\", \\\"$18\\\", \\\"$6\\\", \\\"$23\\\", \\\"$36\\\", \\\"$33\\\", \\\"$3\\\", \\\"$20\\\"], \\\"$413\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$3\\\", \\\"$15\\\", \\\"$8\\\", \\\"$24\\\", \\\"$41\\\", \\\"$22\\\", \\\"$5\\\", \\\"$21\\\", \\\"$51\\\", \\\"$9\\\", \\\"$45\\\", \\\"$25\\\", \\\"$26\\\", \\\"$9\\\", \\\"$18\\\", \\\"$34\\\", \\\"$16\\\", \\\"$12\\\", \\\"$5\\\", \\\"$24\\\", \\\"$12\\\"], \\\"$438\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$48\\\", \\\"$44\\\", \\\"$15\\\", \\\"$3\\\", \\\"$22\\\", \\\"$33\\\", \\\"$18\\\", \\\"$28\\\", \\\"$12\\\", \\\"$34\\\", \\\"$20\\\", \\\"$21\\\", \\\"$48\\\", \\\"$28\\\", \\\"$6\\\", \\\"$2\\\", \\\"$40\\\", \\\"$49\\\", \\\"$6\\\"], \\\"$477\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$6\\\", \\\"$4\\\", \\\"$27\\\", \\\"$8\\\", \\\"$7\\\", \\\"$48\\\", \\\"$41\\\"], \\\"$236\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$38\\\", \\\"$30\\\", \\\"$24\\\", \\\"$15\\\", \\\"$5\\\", \\\"$1\\\", \\\"$50\\\", \\\"$41\\\", \\\"$20\\\", \\\"$12\\\", \\\"$18\\\", \\\"$48\\\", \\\"$18\\\"], \\\"$320\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$31\\\", \\\"$48\\\", \\\"$15\\\", \\\"$7\\\", \\\"$36\\\", \\\"$32\\\", \\\"$15\\\"], \\\"$184\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$3\\\", \\\"$10\\\", \\\"$39\\\", \\\"$51\\\", \\\"$40\\\", \\\"$21\\\", \\\"$23\\\", \\\"$39\\\", \\\"$1\\\", \\\"$39\\\", \\\"$49\\\", \\\"$47\\\", \\\"$32\\\", \\\"$45\\\", \\\"$37\\\", \\\"$34\\\", \\\"$20\\\", \\\"$33\\\"], \\\"$563\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$51\\\", \\\"$1\\\", \\\"$14\\\", \\\"$26\\\", \\\"$10\\\", \\\"$31\\\", \\\"$25\\\"], \\\"$158\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$2\\\", \\\"$12\\\", \\\"$14\\\", \\\"$50\\\", \\\"$16\\\", \\\"$24\\\", \\\"$9\\\", \\\"$19\\\", \\\"$50\\\", \\\"$3\\\", \\\"$16\\\", \\\"$26\\\", \\\"$31\\\", \\\"$41\\\"], \\\"$317\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$38\\\", \\\"$5\\\", \\\"$4\\\", \\\"$16\\\", \\\"$13\\\", \\\"$2\\\", \\\"$39\\\", \\\"$28\\\", \\\"$35\\\", \\\"$50\\\", \\\"$32\\\", \\\"$26\\\", \\\"$39\\\"], \\\"$327\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$17\\\", \\\"$41\\\", \\\"$26\\\", \\\"$40\\\", \\\"$50\\\", \\\"$36\\\", \\\"$6\\\", \\\"$2\\\", \\\"$28\\\", \\\"$42\\\", \\\"$7\\\", \\\"$35\\\", \\\"$39\\\", \\\"$31\\\", \\\"$33\\\", \\\"$43\\\"], \\\"$476\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$1\\\", \\\"$23\\\", \\\"$46\\\", \\\"$20\\\", \\\"$37\\\", \\\"$42\\\", \\\"$19\\\"], \\\"$188\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$25\\\", \\\"$41\\\"], \\\"$66\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$13\\\", \\\"$1\\\", \\\"$23\\\", \\\"$12\\\"], \\\"$49\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$49\\\", \\\"$38\\\", \\\"$16\\\", \\\"$40\\\", \\\"$20\\\", \\\"$36\\\", \\\"$39\\\", \\\"$46\\\"], \\\"$353\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$33\\\"], \\\"$84\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$40\\\", \\\"$49\\\", \\\"$21\\\", \\\"$14\\\", \\\"$48\\\", \\\"$40\\\", \\\"$13\\\"], \\\"$307\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$38\\\", \\\"$25\\\", \\\"$51\\\", \\\"$30\\\", \\\"$25\\\", \\\"$14\\\", \\\"$39\\\", \\\"$9\\\", \\\"$6\\\", \\\"$46\\\"], \\\"$283\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$3\\\", \\\"$44\\\", \\\"$7\\\", \\\"$33\\\", \\\"$46\\\", \\\"$13\\\", \\\"$8\\\", \\\"$40\\\", \\\"$2\\\"], \\\"$196\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$4\\\", \\\"$23\\\", \\\"$2\\\", \\\"$40\\\", \\\"$35\\\", \\\"$40\\\", \\\"$39\\\", \\\"$18\\\", \\\"$28\\\", \\\"$49\\\", \\\"$15\\\", \\\"$16\\\", \\\"$12\\\", \\\"$3\\\", \\\"$30\\\", \\\"$29\\\", \\\"$38\\\"], \\\"$421\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$47\\\", \\\"$35\\\", \\\"$4\\\", \\\"$49\\\", \\\"$31\\\", \\\"$40\\\", \\\"$48\\\", \\\"$47\\\", \\\"$22\\\", \\\"$51\\\", \\\"$33\\\", \\\"$46\\\", \\\"$50\\\"], \\\"$535\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$42\\\"], \\\"$136\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$18\\\", \\\"$28\\\", \\\"$50\\\", \\\"$1\\\"], \\\"$97\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$25\\\", \\\"$30\\\", \\\"$28\\\", \\\"$17\\\", \\\"$4\\\", \\\"$7\\\", \\\"$24\\\", \\\"$12\\\", \\\"$15\\\", \\\"$15\\\", \\\"$44\\\", \\\"$26\\\", \\\"$47\\\", \\\"$16\\\"], \\\"$310\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$10\\\", \\\"$38\\\", \\\"$7\\\", \\\"$49\\\", \\\"$33\\\", \\\"$18\\\", \\\"$25\\\", \\\"$16\\\", \\\"$2\\\", \\\"$17\\\", \\\"$35\\\", \\\"$11\\\", \\\"$44\\\", \\\"$35\\\", \\\"$49\\\", \\\"$22\\\"], \\\"$411\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$8\\\", \\\"$3\\\", \\\"$28\\\", \\\"$19\\\", \\\"$18\\\", \\\"$28\\\", \\\"$24\\\", \\\"$8\\\", \\\"$20\\\", \\\"$36\\\", \\\"$28\\\", \\\"$37\\\"], \\\"$320\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$7\\\", \\\"$6\\\", \\\"$34\\\", \\\"$10\\\", \\\"$31\\\", \\\"$5\\\", \\\"$29\\\", \\\"$13\\\", \\\"$40\\\", \\\"$30\\\", \\\"$21\\\", \\\"$49\\\", \\\"$44\\\", \\\"$4\\\", \\\"$2\\\", \\\"$10\\\", \\\"$3\\\", \\\"$1\\\", \\\"$7\\\", \\\"$12\\\", \\\"$50\\\"], \\\"$487\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$11\\\", \\\"$51\\\", \\\"$46\\\", \\\"$19\\\", \\\"$25\\\", \\\"$51\\\", \\\"$48\\\", \\\"$18\\\", \\\"$17\\\", \\\"$16\\\", \\\"$18\\\", \\\"$6\\\", \\\"$6\\\", \\\"$48\\\", \\\"$41\\\", \\\"$20\\\", \\\"$7\\\"], \\\"$489\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$6\\\", \\\"$20\\\", \\\"$25\\\", \\\"$41\\\", \\\"$24\\\", \\\"$26\\\", \\\"$41\\\", \\\"$47\\\", \\\"$6\\\", \\\"$17\\\", \\\"$22\\\", \\\"$7\\\", \\\"$3\\\", \\\"$23\\\", \\\"$48\\\", \\\"$48\\\"], \\\"$456\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$15\\\", \\\"$26\\\", \\\"$26\\\", \\\"$23\\\"], \\\"$93\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$21\\\", \\\"$14\\\", \\\"$45\\\", \\\"$20\\\", \\\"$24\\\", \\\"$36\\\", \\\"$34\\\"], \\\"$194\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$5\\\", \\\"$26\\\", \\\"$16\\\", \\\"$47\\\", \\\"$42\\\", \\\"$24\\\", \\\"$40\\\", \\\"$20\\\", \\\"$22\\\", \\\"$20\\\", \\\"$43\\\"], \\\"$305\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$13\\\", \\\"$19\\\", \\\"$36\\\", \\\"$43\\\", \\\"$18\\\"], \\\"$129\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$11\\\", \\\"$19\\\", \\\"$25\\\", \\\"$5\\\", \\\"$11\\\", \\\"$35\\\", \\\"$21\\\"], \\\"$138\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$7\\\", \\\"$42\\\", \\\"$27\\\", \\\"$17\\\", \\\"$13\\\"], \\\"$123\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$41\\\"], \\\"$41\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$3\\\", \\\"$15\\\", \\\"$4\\\", \\\"$7\\\", \\\"$2\\\", \\\"$7\\\", \\\"$4\\\", \\\"$6\\\", \\\"$16\\\", \\\"$24\\\", \\\"$30\\\", \\\"$20\\\", \\\"$8\\\", \\\"$14\\\", \\\"$35\\\", \\\"$15\\\", \\\"$13\\\", \\\"$34\\\", \\\"$26\\\", \\\"$11\\\", \\\"$37\\\"], \\\"$331\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$1\\\", \\\"$24\\\", \\\"$43\\\", \\\"$26\\\", \\\"$32\\\", \\\"$11\\\", \\\"$49\\\", \\\"$20\\\", \\\"$15\\\", \\\"$37\\\", \\\"$24\\\", \\\"$12\\\", \\\"$34\\\", \\\"$41\\\", \\\"$41\\\", \\\"$23\\\", \\\"$32\\\", \\\"$44\\\", \\\"$23\\\", \\\"$42\\\", \\\"$42\\\"], \\\"$681\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$24\\\", \\\"$9\\\", \\\"$27\\\"], \\\"$128\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$25\\\", \\\"$14\\\", \\\"$21\\\", \\\"$26\\\", \\\"$20\\\", \\\"$50\\\", \\\"$26\\\", \\\"$43\\\", \\\"$27\\\", \\\"$16\\\", \\\"$49\\\", \\\"$51\\\", \\\"$33\\\", \\\"$26\\\", \\\"$39\\\", \\\"$29\\\", \\\"$4\\\", \\\"$35\\\", \\\"$39\\\"], \\\"$645\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$9\\\", \\\"$20\\\", \\\"$36\\\", \\\"$51\\\", \\\"$15\\\", \\\"$26\\\"], \\\"$157\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$16\\\", \\\"$28\\\", \\\"$28\\\", \\\"$26\\\", \\\"$22\\\", \\\"$23\\\", \\\"$33\\\", \\\"$8\\\", \\\"$38\\\", \\\"$21\\\", \\\"$4\\\", \\\"$13\\\"], \\\"$302\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$28\\\", \\\"$2\\\"], \\\"$30\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$50\\\", \\\"$44\\\", \\\"$51\\\", \\\"$17\\\", \\\"$29\\\", \\\"$9\\\", \\\"$6\\\", \\\"$14\\\", \\\"$6\\\", \\\"$5\\\", \\\"$38\\\", \\\"$51\\\", \\\"$34\\\", \\\"$18\\\", \\\"$40\\\", \\\"$20\\\", \\\"$7\\\"], \\\"$512\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$37\\\"], \\\"$132\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$38\\\", \\\"$40\\\", \\\"$26\\\", \\\"$51\\\"], \\\"$203\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$8\\\", \\\"$5\\\", \\\"$5\\\"], \\\"$70\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$29\\\", \\\"$16\\\", \\\"$36\\\", \\\"$25\\\"], \\\"$161\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$40\\\", \\\"$7\\\", \\\"$8\\\", \\\"$47\\\", \\\"$19\\\", \\\"$7\\\"], \\\"$128\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$33\\\", \\\"$2\\\", \\\"$43\\\", \\\"$1\\\", \\\"$36\\\", \\\"$33\\\", \\\"$3\\\"], \\\"$220\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$11\\\", \\\"$17\\\", \\\"$43\\\", \\\"$4\\\", \\\"$6\\\", \\\"$8\\\", \\\"$51\\\", \\\"$32\\\", \\\"$15\\\", \\\"$20\\\", \\\"$2\\\", \\\"$41\\\", \\\"$12\\\", \\\"$5\\\"], \\\"$267\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$28\\\", \\\"$2\\\", \\\"$7\\\", \\\"$50\\\", \\\"$28\\\", \\\"$40\\\", \\\"$51\\\", \\\"$29\\\", \\\"$18\\\", \\\"$49\\\", \\\"$18\\\", \\\"$44\\\", \\\"$39\\\", \\\"$44\\\", \\\"$3\\\", \\\"$16\\\", \\\"$10\\\", \\\"$19\\\", \\\"$7\\\"], \\\"$502\\\"), false)\\nTest.assertEquals(hasHiddenFee([\\\"$40\\\", \\\"$37\\\", \\\"$36\\\", \\\"$50\\\", \\\"$33\\\", \\\"$27\\\", \\\"$27\\\", \\\"$50\\\", \\\"$39\\\", \\\"$29\\\", \\\"$3\\\", \\\"$40\\\", \\\"$13\\\", \\\"$10\\\", \\\"$2\\\", \\\"$37\\\", \\\"$35\\\", \\\"$33\\\"], \\\"$641\\\"), true)\\nTest.assertEquals(hasHiddenFee([\\\"$23\\\", \\\"$13\\\", \\\"$5\\\", \\\"$12\\\", \\\"$28\\\"], \\\"$81\\\"), false)\",\"language\":\"javascript\",\"summary\":\"Given an array of prices prices and a \\\"supposed\\\" total t, return true if there is a hidden fee added to the total (i.e. the total is greater than the sum of prices), otherwise return false.\\n\\nExamples\\nhasHiddenFee([\\\"$2\\\", \\\"$4\\\", \\\"$1\\\", \\\"$8\\\"], \\\"$15\\\") ➞ false\\n\\nhasHiddenFee([\\\"$1\\\", \\\"$2\\\", \\\"$3\\\"], \\\"$6\\\") ➞ false\\n\\nhasHiddenFee([\\\"$1\\\"], \\\"$4\\\") ➞ true\\n\\nNotes\\nRemember that each\",\"tags\":[\"arrays\",\"numbers\",\"language_fundamentals\",\"validation\"],\"timestamp\":{\"$date\":1581554210538},\"title\":\"No Hidden Fees\",\"stats\":{\"completed\":{\"total\":462,\"ratings\":[1,1,1,1,1,1,1,2,0,2,1,2,1,2,1,2,0,1,1,1,1,1,0,2,0,3,1,0,0,0,1,0,1,1,0,2,2,2,1,2,1,1,2,1,1,1,1,1,2,2,2,1,1,1,0,1,1,2,2,0,3,1,0,0,1,0,1,1,2,2,1,1,1,1,1,5,2,2,1,3,1,1,1,1,1,0,2,0,0,2,3,3,2,1,1,2,2,1,1,2,1,2,3,2,2,2,2,2,1,2,2,2,2,1,1,1,0,2,0,2,1,2,2,2,2,2,2,2,0,2,2,2,1,2,2,2,2,2,1,5,2,0,2,2,2,2,2,1,1,1,2,2,1,2,2,0,2,1,2,1,2,0,1,2,1,1,2,2,2,1,1,1,2,2,2,1,2,2,1,2,1,1,2,1,2,2,2,0,2,2,1,2,1,1,2,0,1,2,2,2,2,2,0,2,2,2,2,2,2,0,0,0,1,0,0,2,2,2,2,2,2,1,0,2,1,1,2,3,2,0,0,2,2,2,1,2,5,2,2,2,2,2,1,2,2,2,2,0,1,2,2,2,2,2,2,2,0,1,0,2,2,2,2,2,2,1,2,2,2,2,2,2,1,2,1,2,2,1,2,1,2,2,3,2,2,2,2,1,2,2,3,2,0,1,2,2,2,2,0,2,2,1,2,2,2,2,1,0,2,2,2,0,1,0,2,0,0,2,2,0,2,2,1,1,1,1,2,1,2,2,0,1,1,2,2,1,2,2,1,2,2,0,2,2,2,1,2,1,2,2,1,5,1,2,1,1,1,1,2,1,1,0,0,2,2,2,1,2,1,0,2,2,2,2,0,1,1,3,2,2,2,0,0,1,2,0,2,1,1],\"rators\":[\"BMBts7MzsTZH69nAH\",\"PNGoni4SgDhkiqFq4\",\"vWhgrr5oem8WtKdxm\",\"cp3X8hk8yNME7qoD9\",\"YGYzqaDrwa2SdqKt8\",\"6BpBQnSGhzgvhXrEy\",\"QnPD4Sv6W4LHc2Qng\",\"Y9Nz9yafaibz54W4o\",\"g5noFWaoRtZNcEEAW\",\"R35tqE5etfTYTfmGr\",\"P4jeiN4MnamFDkGNo\",\"yjtdwc2AC4jA2RWtn\",\"cJwiiiX7qwSvgtmk8\",\"n5wubRfh6zh8QRymN\",\"mHT2bJb5SByfJ8yKS\",\"zAMR5yM6wpzfE3a4S\",\"pi76g3eRpnKrhee2a\",\"yaL57wdXmgAZTvKfX\",\"9Mx6SNtsS82T5hiK5\",\"CvrWw98euWXuHatps\",\"tWuCa2bdSFLD43TfM\",\"vnccH7cqmHKMg8QCL\",\"FJsvM5yqKuK9yMk9P\",\"g4NCSxxHqHCGMpWwT\",\"rehehi2Tr2mwaEoJE\",\"zd9FLSzsGz3evKafy\",\"eANW47mfA359Y6JyP\",\"5Zq3aGdvh4LHBvnJL\",\"vtHbevf2tHqe6mRxX\",\"9XnGoq9Tv6ut3zTtH\",\"FwE4aiH6TQawW3k4y\",\"SNiJRRosrmSWssLj4\",\"fEeH6h2yK27bKMNvL\",\"k5TGxBtLi9BXxeChT\",\"jFRNENtRu6WjNxSFR\",\"7JCLyrrY6JYGpocac\",\"TvdYJxKiPRQ434D9P\",\"cqNnqzCfEhAvEZoGh\",\"zTZtM9jRsu8eXie6s\",\"DSJ8m2k2yk5QtQaMT\",\"RE4Mm9T6Q9uygAxGS\",\"yKWmmti8QHJzrFPmB\",\"2innwjWqxJHo4eRGh\",\"GpqPxePMyP6mB8bpD\",\"oRaMFTfprCpB7ve9S\",\"K9aHdd5ReP4JJwNKA\",\"RjNmWYMdng36ANKYt\",\"gzTs5oFrfZwh3Kfze\",\"YER6iBcpJCuhgrYDN\",\"DPpSwhhiuF4Y9YR2i\",\"xsDyJstYoBZRS8pJH\",\"HMd5P98SasfeqCnD4\",\"p2woPCQKXuWJCwffJ\",\"3EgZShfBYmWwS57Lp\",\"4YQYMKAinTbZjed9D\",\"xdyGMD2T2k24pjFH9\",\"AasGs8AeX9Lcb9xJn\",\"EAuL56kpyLytw4RcR\",\"8ur5oEenSebe4EizB\",\"PAzNgJF54C2mYPkR9\",\"psnxWg2w27hviGpAE\",\"WzjHJo2DF6zekHW3X\",\"ejaKYKNBT3Kvrgfui\",\"SxJ4Puvdq5R3SzL4b\",\"HhDsru2sFzSzFFiEb\",\"AQGRQAZg2akPxNuqA\",\"9PfQoadWLJbFiaXjS\",\"66sTcsdNLrqYpA2zf\",\"2CvHJcA9aXt9pvZwA\",\"hrMyNCp6vfPZXzWmT\",\"gHWeYvkzTLjHuJrLd\",\"yFGcFfNsHt2Z4G5a9\",\"pWJWQDhqzDSmfaFam\",\"vThHLd8MLkmyJHox9\",\"2qZhQb7FiDtaThXE9\",\"umE8dRTGWzrZFp755\",\"d9LBRxvADNBB5QJMB\",\"uAS9uKs8KQmp8uhqn\",\"Ynw596LiAeaYq29os\",\"EGMDcfyfqqMZsN5pu\",\"EjPLq3QSJdGQFJdgW\",\"xKoMMhNyqWdbomgdJ\",\"6gPHMpkEP8JuHxzpd\",\"3aZvfgr2H2WF8Yog2\",\"JGBCMpnbbi5ztuFoX\",\"REWERn3LH8vj9AnLh\",\"MzwFbhCbZwQ3DSL6Q\",\"noaBx5QyY6pTS5bja\",\"5dhCdJPnZWFKTLuRK\",\"bYmXzsJMCWjCQyfeW\",\"pBPeMTaRmdFWQezW3\",\"d5ELxQXSryjWXtWwB\",\"apyi6oXgmDnnq7qw9\",\"ZZ3JYmkR4dNtCwviD\",\"NmogLamhEAcFbwPpa\",\"h4jFmtbFn92eA4649\",\"4p2sARSZNNnKqjAT6\",\"N82kEBvpFE5FjbHrk\",\"uhamgmdpjpYQBj8vZ\",\"Yv3E8FjiXr8od4dPG\",\"jqbm8L6895JgAtZ6H\",\"hDsJSbrxR7rWcxk6m\",\"CJnuSjyCBMTbTiibD\",\"jTEYLAgPszjdEYgu2\",\"tyNrtjfTi56j5Hw9b\",\"M7Kg74XfNprTvDZnt\",\"QvsNvuhzcqaBENP7t\",\"6AkHZRsnysi2k9izF\",\"xfxkLoQsbZBonmBGp\",\"Nc23QyxhdeFRwzj5W\",\"AzxmAxAmKn56cjiaS\",\"s5zzhdSQFAa9PbYur\",\"vzGzRkLe4WGS9zMSz\",\"vKch2w3b4keMd84jj\",\"m7kNY7X8yxwEiobPE\",\"yyGDRgM7z63TTsNTG\",\"XbxjsbvyP8Tns2MCk\",\"TtXJzByho48ydSyGT\",\"Dr2B6TXczYmHpJhp4\",\"a6y6PdyPZNeeKNZpA\",\"QvhkcW6mePJrJEvvC\",\"YGdnwxHLgvvXHHfYL\",\"E3fkFzNeAGctuvqA2\",\"osER8G7bRZwgkS3g6\",\"LrF8rMBdkJoZPJP5L\",\"NuYBzuKMdMGYZhiqG\",\"E6DBfkTgHuPsDWdG8\",\"SNt23Ei5dSNtfpEMd\",\"PTo9qt93YqGvL8fCa\",\"KcpfY4XZ7fNamyLd3\",\"9966k46pdpGeFjKSF\",\"YKYLFnGJXesgsxSAY\",\"FCX3STMvP2JfQLdbN\",\"zgoq9MhrL2h75DAMA\",\"wmQjmzF9SNyCJcx6t\",\"9Pzg45NEiRXhLtLh3\",\"AXcnPX68zdMiLNSmu\",\"CJBPyyfyaEeEo63sb\",\"X5TMRv7TBf7zELSXF\",\"tuTQhfZC5izTmXEgR\",\"EWn8w8P3nNh7knatY\",\"XKi8iZXBCHCaebSHh\",\"jcPZ5ySXseCB7Ec3x\",\"RGN3QTb5LXj4ZPPkj\",\"TiqnGGfTYcXZengMZ\",\"bX6tpTCjwoi6XMMbK\",\"CdXigydGTBLgA577m\",\"dDFJpK4pXCsQYuHmc\",\"8Z3dkvWBqtrMEE48N\",\"F46XrBwWcBoi6PcT4\",\"EPeA837HC2cXj3PEy\",\"YtGYxpMxbrHLFK8nq\",\"Po3v3dHCk6wYGKMwi\",\"eomLS3wh6tQPN8jtH\",\"eQXwk5zGckM8tCWYH\",\"ZtniSFrgec4oj6Pxm\",\"4TuceAZ8oTDzsjhir\",\"Wj7pXLPYSkQ7AEcnP\",\"BSkoT6o2GweZkqXbc\",\"JsRTAwWK7Nikj4sKA\",\"7wtuhPesfhcYsfZaZ\",\"ZXRMRAJNP6eseLdbR\",\"a777e8chPvJkY3tKa\",\"Gc2bmsof5vD2Hsgqv\",\"dNqjHnaTsgqBFDxTC\",\"oX6ZgKDtvpxYXsfYE\",\"65dbBZynphj53nXqA\",\"tAF9Gf6PiGogbZuWs\",\"szQg8dxKNNre3v3Jk\",\"LreCskdE4MTjTyhAM\",\"RBfCFQ5QwCN3kAG8j\",\"NRMxPrgBRYMKYF9Li\",\"jzYbGnnTmdTkuX9bC\",\"dWSd8Nccp6qqee8vW\",\"RKmNjobxC8mXFMJCq\",\"z5ebtimXwFFJdYxoa\",\"BdnE4RS5puoxo92mA\",\"6oNkXuuDRBTFvpr8y\",\"ipiC2qPhKZWsAouJf\",\"QGshpArSs3bHZZR7W\",\"Lzj3w7QjdzikynsGG\",\"a3kdevxPhxajtJmHd\",\"Q9KQomTTPBsrkAL6c\",\"QDYpRvKEb4mtaDDgn\",\"2ZFoLTxcCARhwc8xX\",\"733qgZ7ZSSSrzbXGw\",\"HwZx7c3QFWmt5x4oE\",\"RQwuHHy4rBgaQCLte\",\"vn6nR36mdfY8z2zKx\",\"QHiEYtz3tX3s9nETo\",\"zw7g7T8wE5R5CBhXr\",\"Akq3fQcPRgPrWfsye\",\"sAhNjH3HZ9tSSSKTX\",\"MRyxodBpHe3Azn5Mp\",\"GB3NHPPMge2CshbY6\",\"RqnvM77EkZZD9W2Q3\",\"XfirkadGrKABrZSBw\",\"ByXaraYa5tzFG8Gmj\",\"xMxdp5oCxmeuYxhpa\",\"uDL732cxhJPfvnyn5\",\"Ya3eHgs8x3unZRLpb\",\"vAh63eGRwkuJtoP8v\",\"ij9YRJvZz6WbqcGXS\",\"Ji84eQR54xeqRYceZ\",\"zNN2fW2pJGpTxBgzx\",\"PMtk6T2F9eK95g23d\",\"WKkWj5KoNysLpZ2hJ\",\"RJs9HvrPhGkPoorL7\",\"nkH3HfJXLMNcBMM79\",\"xSutoxBAMQ64tTGjW\",\"Es4eX2stRpyoXeC7f\",\"98NmBCC7jEKw5j352\",\"buX4mCQhtXCfBjeno\",\"QRv96jmNaYsWkxQEG\",\"RtqZEuabTsNCwYCzE\",\"eFjGhq7C7bBKXjT6X\",\"edaKYaap6ugMKpRT8\",\"mLKy6YSNJ2MyXuaq2\",\"jnyub52Fi79drGvow\",\"ZcqshY58sGEEvgeaq\",\"4nFXeGakoCjm5GXYa\",\"r7mZLgpQWzRiGddL5\",\"Wv9v7fHb8umujfg2j\",\"jYXFFTnuWFNo72Rc5\",\"C9LKGu2g5hSijvDzA\",\"moe6ztrsNzFymC3A7\",\"wF5PvHQiDKZW5NW22\",\"sn9HmYyS3FStbca3b\",\"sHnfwDzKzmeApjTv8\",\"NWpoh5828RHPjw7oa\",\"2d7ToTiuvHtd6WnGx\",\"wDJWimhTL95Efenbn\",\"pGW9kHz8vpZnPGBWu\",\"LCn6qz2GoMr5577Rd\",\"Rrb84KWhN5tjhMGMA\",\"FGEeCTorXbX3WvjFW\",\"4ntYzGHHBgqf58udP\",\"tzY4QeH7RDieW3nYb\",\"yrLBMbni8KDsC5K44\",\"2tCCFm5iefjrRSaxv\",\"evTTY9hwrtogaNxXn\",\"HFuNFZpdKCddzbuqc\",\"aCGpc5JeDHPzeFicE\",\"E2hpke7mHxAWsw5t9\",\"PGCDJpQMN8Sjn9Gm6\",\"jkumHyXfMkhGcPgqC\",\"i5QeAsrM4m6hzPTku\",\"ckMvGF5TAyCwcxJBm\",\"8raviPK67KKxzQWcF\",\"wrxHLcdBEri4cyK6W\",\"pLpcDC3EYx2DDQSdt\",\"KcFLFK5GqrC89bxZL\",\"oyB4Wr4EeZnoDaa8B\",\"coTsXQZW59EjCAB9d\",\"s9qcJASB9WKPWaQzi\",\"Eyk8WiGJ2weZLJqRP\",\"sNcDN3s3rH9wcNg5n\",\"TSrHMxuLpRMiEjyAg\",\"7gZKfvwaeqsGKXMEN\",\"DaBQKtm4xSgrxqTYF\",\"mwDdQwbZN6tXwAbBA\",\"ttuGK7od8simjgmCJ\",\"j2ugW5ihGv67sfh4e\",\"oDnPTXrzYF4snDPXY\",\"Dn5QN5F7y54y4kzp9\",\"nAmJEX7BkHLd9LsG2\",\"EZtSTkxrJZ3ETscQG\",\"aEm3Wvj2rFYRL8Lrb\",\"AFfw7cGg83uYk2Miy\",\"mwg8jvMHHmQiQRrbr\",\"vRsovmMfvfvnR5miw\",\"MbbySGQmkzbjg373M\",\"YXqaqjujocvg2gX4k\",\"Yzh7zNiyG7LM9vnAj\",\"u9cRf5kvtpRB5ffB3\",\"nhWLv6D8eZJ5ggKKX\",\"3pb8q4K4jv6jta45d\",\"kp2ZbCewZJAbfd7xv\",\"it4R7mNQ7MTvJkLDm\",\"gyB5wJihaSZCWKTCB\",\"sj8yRK9uzJ5LLZABJ\",\"mE2WrTtBBq4zuLdWp\",\"FDqfqHn8ww9QoSFhb\",\"v2w9GN4jHP2fgYdeE\",\"XAGJuJRsgxZNiAN9C\",\"bJtkZAzjvGcXiXXag\",\"NchnDcEmsLTeFZ4FH\",\"PH32cNxBjrK4a28sn\",\"XkPEb97Tnnvvf5fAY\",\"Kntd2rSgWYWp8r4sP\",\"4Xv87xmdSnpYhi8hz\",\"75NY7vqimaATzRdAX\",\"qWR7eXxBiNee22A5u\",\"SY9Euc4kQfRgetXTd\",\"nxycxLNEN4PXDotSh\",\"tseyDEv9zaHBMvLL3\",\"R9uaMzX2Y4ND8Cosm\",\"pGh7WykiPe26fHJYv\",\"YLTZRjM78Wi9J9Re4\",\"STipuJs6kBvPqqsSE\",\"3WtHp4MBzciz4AE8M\",\"jLSZdBseR2kfjt8dL\",\"BdvdJYwHZr7JpkHsn\",\"2GqHbu7h7ajqtqkXv\",\"QpBEndbkq6opq4DBN\",\"CH53jGETBeJTummf3\",\"rJGzFvBGYxdukwt8X\",\"vewKwcMeGuk3p3MsN\",\"nyh73Tr6GhqAat78g\",\"e9Cknxbx6o7Nb6REs\",\"JW5J6sdJHAmDmfWnE\",\"8BJyXvRWcrvN3nttS\",\"XAX32dz2EByd3qAK2\",\"jd9sRTnsyeKpPggba\",\"aarsZPCAfm59DiJEZ\",\"YmMgWhzhHhQLmGGgH\",\"2Ni3PzJAc5fAhqBkb\",\"Yp7uvStL97cC9fKkY\",\"srJ34BaybkQh3qRkM\",\"omn98QP6uBd923Azp\",\"oE8rNagYonFzFvKH5\",\"bBRzXPk7u95YuDWEL\",\"jyCByAZwu576xDwEL\",\"2QifjAQzAEqqnk86G\",\"3Gf7ikLijfoxabiPY\",\"m6qKkBY4aPWziyJTj\",\"bjn5DTzzaWCP5BDgX\",\"Kt6oGAfrymXmAnn2d\",\"RtPhDuwmvWNHiBxmG\",\"5voy2ycWXEyTkFZi5\",\"eKSJgCaiy4ReJWXTg\",\"c4FsZDmbSzi7KZW43\",\"f3RAbWvE6uESq7KE5\",\"nzAbdaGbJwgvkkEYj\",\"bHX48t6EJJ2tntqjn\",\"fe3gsFT3MbZ4azEC9\",\"ZtTwZM9pQ2sAzhnMR\",\"EXbD3ZjgP9oaoFLYw\",\"QAZ5DGaWWYhku4BNz\",\"DPi9QGLctq2y76KuE\",\"5hHf2e9zimbmxMqqF\",\"8EJ4j2fcfjTJ7Zrzu\",\"J7d397iB5GuWRAMfg\",\"H46gRHmkdz2CRrGH9\",\"Qi3ZTiut4tWJPHibz\",\"2Qk2mFu9HBFzrB24i\",\"kETR48v7gF3navX86\",\"erQgJKaHaETRcqs4x\",\"cgCQDs9i7yChKeAjE\",\"vEapufGjE49e5JSch\",\"5uj4mTXdaDL3wLDWw\",\"ApqWTmEEkTCsDou48\",\"wJTDDTE3TrmSXKP4d\",\"K45zPJxsABuA3WSyj\",\"npp5hesJrst6ghKSM\",\"exiy4CeGedb9MkrZW\",\"k6QB6fzbj4LsWktRL\",\"LwD3CyYSiBfg3mA4r\",\"yuLxi2qBJvMnwgdgJ\",\"HDmffGPzKMAsDAr5Z\",\"ZK6YmYMsfwXYtaZ9P\",\"ahAe7pcyjYGzcDRm4\",\"3xMRkNrEPHEw99y56\",\"TtrXnGzi9MyhLvWiz\",\"o9MskHjfz8yNsKY6w\",\"Fe8yKt8ZdKGKkRCc8\",\"n4Y5EEGCjmrK99yrt\",\"oDtGiNqDMHmhHE3J8\",\"eGmzRsSATFsE2wjJa\",\"QjGNkRM3Xc78yShJN\",\"3oinK6sSmonEMGZrn\",\"9HZbxzkzgz4CvePtv\",\"8s5Bdrn7RTga7DL6x\",\"mpLFbFKjY6u3nsDMv\",\"nBJve5CzG6WAw7WFQ\",\"NGvCPuMiAP3xrRLfB\",\"zJTXDTdbwnopRazGo\",\"PAnur8xLTthNL3epT\",\"JFiiZhAZTNQSvjzdp\",\"sfj3i3eEAfZa3f9kg\",\"49XFttjKo2QhEWT3R\",\"N3CNtWZz4ovJfH9Aw\",\"ruzwBPphPDRgLXdnP\",\"RoGGD5cpHb4ftdLDv\",\"wo4cpen33NYFHNca7\",\"Xk2g4CNFAnYcvxiSr\",\"sN2JyFeJCwfwwHPwF\",\"gXTAie79kiw28tx5u\",\"Q7Yxda7dqKeYPs2Db\",\"j5FSQCayX3By73CCw\",\"ZKuwzkssrSsDGNPr5\",\"QGjY3hgPYPMmMjc7j\",\"jyoLggHk8xQKZuoQC\",\"jicWFrNKadYuLhqxh\",\"uxKGACwmZ6FNZsMwE\",\"ZpLfGJzcKXzNhytAc\",\"bfYmA3LMvhSrK59cn\",\"x2Cz7S8rCKJqCE3Xe\",\"SCYNpjgtLCE9rKpYB\",\"Y7xPTPKpNAEiM2jkH\",\"34bE6mric984YYLZQ\",\"sMcFMPkMJC4Kh6ymj\",\"rPsSEYqwmttMPEuvo\",\"d8JhF9zfpexkRnCea\",\"ghzSC9JHRNwMPEjDB\",\"HCfkcKnPs9mrJojdG\",\"Zp93Tit7CTRdkCMqp\",\"AMpQSjKsRqhCDyS2j\",\"z47JaNrQMgvuPx5HE\",\"HpfaNWBYpnsQRAPQn\",\"fjBB8rBHeCeMGELvW\",\"NJCmkbH5e7qbtZYhd\",\"WpNHMgfjZE8aNN2MP\",\"BBHKgNQBKjnzoGsew\",\"XT23a68TjWwNE7Qko\",\"4WYjScmBWK9eXRzvd\",\"pxgAHHB8hNEegCYXm\",\"gf4xrfguK6KiEF9yi\",\"jkkKzNT77bMStXhpW\",\"3rQ3fN5SM2eGHmTi5\",\"jzdjJtfQiCYmiyvzh\",\"LPZ2QKCoB8q6rG25c\",\"pPpmP7xeJzGgK362R\",\"CHvzhtXnv8HTbPQ56\",\"QJoHpT8fkmJ5j4hk4\",\"4DQRCevo5EfaCymZM\",\"qAEumdjLRx2AGAmzw\",\"psdbt2PkjPv4qTwtr\",\"FY7atTfxaahfAHtJv\",\"8JJHJfbYpxvDiPpBn\"],\"quality\":[5,5,5,5,4,5,5,5,4,3,5,3,5,5,5,5,5,5,5,4,5,5,5,5,5,1,3,5,5,5,4,5,5,5,5,5,5,5,5,5,3,5,5,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":4.6521739130434785,\"family\":[{\"_id\":\"scJCohhqLBcJGGbyS\",\"language\":\"cpp\"},{\"_id\":\"LSw9Tgs6yMgQ4JfdX\",\"language\":\"javascript\"},{\"_id\":\"jZJEz73eALFAyx3j9\",\"language\":\"php\"},{\"_id\":\"vsBznidKiKA96gp2J\",\"language\":\"python3\"},{\"_id\":\"wt4aqbMiENQeghTsF\",\"language\":\"ruby\"}]}}"]