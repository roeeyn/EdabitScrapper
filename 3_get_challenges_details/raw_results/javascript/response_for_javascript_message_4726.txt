a["{\"msg\":\"result\",\"id\":\"1114\",\"result\":{\"_id\":\"p3BszuKFN8wDcpPgF\",\"author\":\"David Newman\",\"authorId\":\"Po3v3dHCk6wYGKMwi\",\"code\":\"function isPrime() {\\n\\t\\n}\",\"difficulty\":1.7878787878787878,\"quality\":4.9,\"editorId\":\"Po3v3dHCk6wYGKMwi\",\"familyId\":\"mvEjBDGLchEScJPEm\",\"instructions\":\"Your boss has demanded you write a function to determine whether a given number *n* is prime or not. But there's a catch! The Blueberry Cæk™ you're using is a (rather extreme) discount model, and only has code storage space for a *single* line of code, and *no more* than the length of an old Tweet (140 characters).\\n\\nCan you still make a working function?\\n\\n(Re-)write the function `isPrime()` so that:\\n - It works! It must correctly return `true` or `false` depending on whether the number provided is prime or not.\\n - It takes up only a **single** line of code.\\n - It uses no more than 140 characters.\\n\\n### Notes:\\n - For the sake of this test, all numbers will be **integers larger than 2**. This is done so you won't need specific edge cases to deal with the weird cases of **2**, which *is* prime, despite being even, and **1**, which is *not* prime, despite fitting the \\\"divisible only by 1 and itself\\\" criterion.\\n - Bonus: can you get the function to run in `O(√n)` time (instead of `O(n)`)? (Note: You won't actually receive any bonus points for this)\",\"isFree\":false,\"isHidden\":false,\"lab\":\"const fs = require('fs'),\\n\\t\\t\\tsol = fs.readFileSync('solution.txt','utf-8'),\\n\\t\\t\\tlines = sol.split(/[\\\\n\\\\r]/g).length,\\n\\t\\t\\tlen = sol.length;\\n\\nconsole.log('Line Count:')\\nTest.assertEquals(lines,1,'You can only use a single line!')\\n\\nconsole.log('Character Count')\\nTest.assertEquals(len<=140,true,'Your code must be fewer than 140 characters in length!')\\n\\nconst cands = [{num:4,ex:false},{num:7,ex:true},{num:21,ex:false},{num:23,ex:true},{num:453,ex:false},{num:456,ex:false},{num:457,ex:true}];\\ncands.forEach(cand=>{\\n\\tTest.assertEquals(isPrime(cand.num),cand.ex,`Wrong answer! ${cand.num} ${cand.ex?'is':'is not'} prime!`)\\n});\",\"language\":\"javascript\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,2,1,1,1,1,0,2,3,2,2,2,3,2,2,1,2,0,2,2,2,2,2,1,2,3,1,3],\"quality\":[5,5,5,4,5,5,5,5,5,5],\"rators\":[\"Po3v3dHCk6wYGKMwi\",\"tAF9Gf6PiGogbZuWs\",\"QRv96jmNaYsWkxQEG\",\"yjtdwc2AC4jA2RWtn\",\"CNc6rmwhbxkxEhHAp\",\"n5wubRfh6zh8QRymN\",\"g4NCSxxHqHCGMpWwT\",\"BdvdJYwHZr7JpkHsn\",\"n4iYeDPWGzXQKBrHE\",\"65dbBZynphj53nXqA\",\"QnPD4Sv6W4LHc2Qng\",\"mHT2bJb5SByfJ8yKS\",\"RE4Mm9T6Q9uygAxGS\",\"Bi5wuPB4WaCLaztDf\",\"buX4mCQhtXCfBjeno\",\"tq3WAEfc7kr7HYKux\",\"uiB3ty9ZKRu3NMCpe\",\"HFK4D8h7rmrFPuiex\",\"xLibLiovYxzFoXzJW\",\"vtHbevf2tHqe6mRxX\",\"zw7g7T8wE5R5CBhXr\",\"u9cRf5kvtpRB5ffB3\",\"Yp7uvStL97cC9fKkY\",\"3Gf7ikLijfoxabiPY\",\"RtPhDuwmvWNHiBxmG\",\"nkH3HfJXLMNcBMM79\",\"e9Cknxbx6o7Nb6REs\",\"Ya3eHgs8x3unZRLpb\",\"NGvCPuMiAP3xrRLfB\",\"AasGs8AeX9Lcb9xJn\",\"oDtGiNqDMHmhHE3J8\",\"nBJve5CzG6WAw7WFQ\",\"gXTAie79kiw28tx5u\",\"Bk3qHkasMRrEQAs6Z\",\"LwD3CyYSiBfg3mA4r\",\"eomLS3wh6tQPN8jtH\",\"bfYmA3LMvhSrK59cn\",\"8BJyXvRWcrvN3nttS\"],\"total\":41},\"flags\":0},\"summary\":\"Your boss has demanded you write a function to determine whether a given number n is prime or not. But there's a catch! The Blueberry Cæk™ you're using is a (rather extreme) discount model, and only has code storage space for a single line of code, and no more than the length of an old Tweet (140 characters).\\n\\nCan you still make a working function?\\n\\n(Re-)write\",\"tags\":[\"formatting\",\"loops\",\"math\",\"algorithms\"],\"timestamp\":{\"$date\":1600370984984},\"title\":\"Be Your Own Minifier\",\"family\":[{\"_id\":\"p3BszuKFN8wDcpPgF\",\"language\":\"javascript\"}]}}"]