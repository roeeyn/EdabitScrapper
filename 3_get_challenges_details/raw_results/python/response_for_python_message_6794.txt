a["{\"msg\":\"result\",\"id\":\"2105\",\"result\":{\"_id\":\"N5JhvabK6DTD5t6gS\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"def markdown(symb):\\n\\n\\t\\t\\t\",\"difficulty\":2.9516129032258065,\"editorId\":\"PXAcsKkssS2yLyDv2\",\"familyId\":\"E9nhhcB9ZqFxXavgB\",\"instructions\":\"In Edabit, you can surround text with asterisks, double asterisks, underscores and tildes to add *formatting* to certain words.\\n\\nComplete the function `markdown()` so it takes a symbol as input, and returns a **function** which applies *that formatting* to a *given word* in a *given sentence*.\\n\\n### Examples\\n```\\nitalicise = markdown(\\\"*\\\")\\n\\nitalicise(\\\"Hello there!\\\", \\\"Hello\\\") ➞ \\\"*Hello* there!\\\"\\n\\nitalicise(\\\"The tale of the two sparrows\\\", \\\"the\\\") ➞ \\\"*The* tale of *the* two sparrows\\\"\\n\\nitalicise(\\\"Include punctuation!\\\", \\\"punctuation\\\") ➞ \\\"Include *punctuation!*\\\"\\n```\\n\\n```\\ninline = markdown(\\\"`\\\")\\n\\ninline(\\\"Remember to return as a boolean value.\\\", \\\"boolean\\\") ➞ \\\"Remember to return as a `boolean` value.\\\"\\n\\ninline(\\\"I want you to create the class Programmer...\\\", \\\"PROGRAMMER\\\") ➞ \\\"I want you to create the class `Programmer...`\\\"\\n\\ninline(\\\"Do not forget to return the value\\\", \\\"return\\\") ➞ \\\"Do not forget to `return` the value\\\"\\n```\\n\\n### Notes\\n- The function should **not** be case sensitive.\\n- Include punctuation in the markdown (see `italicise` example #3).\\n- Punctuation will only include `?!.`\",\"isFree\":false,\"isHidden\":false,\"lab\":\"italicise = markdown(\\\"*\\\")\\ncross_out = markdown(\\\"~~\\\")\\nbold = markdown(\\\"**\\\")\\ncombined = markdown(\\\"***\\\")\\ninline = markdown(\\\"`\\\")\\n\\nTest.assert_equals(italicise(\\\"Hello there!\\\", \\\"Hello\\\"), \\\"*Hello* there!\\\")\\nTest.assert_equals(italicise(\\\"The tale of the two sparrows\\\", \\\"the\\\"), \\\"*The* tale of *the* two sparrows\\\")\\nTest.assert_equals(italicise(\\\"Include punctuation!\\\", \\\"punctuation\\\"), \\\"Include *punctuation!*\\\")\\nTest.assert_equals(italicise(\\\"The thematic theatre is over there!\\\", \\\"the\\\"), \\\"*The* thematic theatre is over there!\\\")\\n\\n\\nTest.assert_equals(cross_out(\\\"The guy was buildig building a buildig building\\\", \\\"buildig\\\"), \\\"The guy was ~~buildig~~ building a ~~buildig~~ building\\\")\\nTest.assert_equals(cross_out(\\\"No mistakes in this sentencee! sentence!\\\", \\\"sentencee\\\"), \\\"No mistakes in this ~~sentencee!~~ sentence!\\\")\\nTest.assert_equals(cross_out(\\\"ignore CAPS\\\", \\\"caps\\\"), \\\"ignore ~~CAPS~~\\\")\\nTest.assert_equals(cross_out(\\\"The thematic theatre is over there!\\\", \\\"the\\\"), \\\"~~The~~ thematic theatre is over there!\\\")\\n\\nTest.assert_equals(bold(\\\"There is an important situation to attend to!\\\", \\\"important\\\"), \\\"There is an **important** situation to attend to!\\\")\\nTest.assert_equals(bold(\\\"the The tHE THE the!!! the... The bold\\\", \\\"the\\\"), \\\"**the** **The** **tHE** **THE** **the!!!** **the...** **The** bold\\\")\\nTest.assert_equals(bold(\\\"BOLD AND BRASH\\\", \\\"bold\\\"), \\\"**BOLD** AND BRASH\\\")\\nTest.assert_equals(bold(\\\"The thematic theatre is over there!\\\", \\\"the\\\"), \\\"**The** thematic theatre is over there!\\\")\\n\\nTest.assert_equals(combined(\\\"this is an importanter project due by wednesday!\\\", \\\"importanter\\\"), \\\"this is an ***importanter*** project due by wednesday!\\\")\\nTest.assert_equals(combined(\\\"Get this done NOW! Now! Right now!!!!! NOW.\\\", \\\"now\\\"), \\\"Get this done ***NOW!*** ***Now!*** Right ***now!!!!!*** ***NOW.***\\\")\\nTest.assert_equals(combined(\\\"The thematic theatre is over there!\\\", \\\"the\\\"), \\\"***The*** thematic theatre is over there!\\\")\\n\\n\\nTest.assert_equals(inline(\\\"Remember to return as a boolean value.\\\", \\\"boolean\\\"), \\\"Remember to return as a `boolean` value.\\\")\\nTest.assert_equals(inline(\\\"I want you to create the class Programmer...\\\", \\\"PROGRAMMER\\\"), \\\"I want you to create the class `Programmer...`\\\")\\nTest.assert_equals(inline(\\\"Do not forget to return the value\\\", \\\"return\\\"), \\\"Do not forget to `return` the value\\\")\\nTest.assert_equals(inline(\\\"The thematic theatre is over there!\\\", \\\"the\\\"), \\\"`The` thematic theatre is over there!\\\")\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[3,3,3,3,3,3,4,3,3,5,3,2,5,3,3,5,0,3,4,3,5,1,2,2,2,3,5,3,3,5,2,3,3,3,5,3,2,2,2,4,4,5,0,2,3,2,0,2,3,2,3,4,4,2,4,2,1,5,4,0,3,4],\"rators\":[\"PXAcsKkssS2yLyDv2\",\"SuJeLnhfR3smGu3WZ\",\"tAF9Gf6PiGogbZuWs\",\"s5M5RvgqR9BhB9JoC\",\"8PwfYqoDQFThzNtvf\",\"gb9rvGus2Jv7bjZSs\",\"yZvzB3qFb8pkHy4dg\",\"qJZsi5rhRnWA38FbA\",\"SGhPxX5bHGL8zZqtt\",\"EPbEBF6b8Jbq8BPx6\",\"CByQtwf9BqB8jfEC3\",\"kXEfD7xxEyWd7oxxL\",\"eHcgvkTGsH7ZziqBo\",\"AasGs8AeX9Lcb9xJn\",\"aEm3Wvj2rFYRL8Lrb\",\"bLpgu8xTdpDPFSAsM\",\"9uZpgAtSuPZ7W7DL6\",\"FHSJnAYTbcsKFgeQa\",\"GntfZ8yP7EjSYrpiJ\",\"DwetpbChQM4r6Gwah\",\"YsAz93yZw8KKPupKv\",\"Cc2Cgj4MWXZxsTooC\",\"NCgqvvXaGksrMDiw7\",\"dNBGNMKLZam4bvHuZ\",\"AGNX2Wynh3dNrvxfy\",\"23gc56xMLfDmdc5qw\",\"My559wwhJnFKDR3Xt\",\"7djAghy9fBhtLnKw3\",\"a9CkKmo3fkLvb3eBA\",\"6E8GoWCrHpDvHZjWG\",\"BQMNhNzLdgY4yajCC\",\"qMnbsraWF5YmhiDde\",\"odhwHrfwJvNxcrBCt\",\"KMqr3GSDiL29jBKYD\",\"FgkYtHLxeD8pETJ8T\",\"oQ4Qa7vnqsQn6pdQF\",\"8fkyeFzXtWs3h55MQ\",\"RbGWtDKb8yedoqGE5\",\"SpTi3f5uA7t7ygtLv\",\"MxQXA7kigYpyBS37i\",\"yv7c4H2jimSKHEjtG\",\"AMc6ecyukYnkGCEbG\",\"qR6hLPuagPSHAgcwn\",\"jL4y5fTJAMBjhZmko\",\"ZNnsMeNkdDhHjSrZb\",\"8JyqsSbN2FJXPr3cw\",\"fznzd3qnvtbFkkizz\",\"n2BRY9X8899dcG8Bw\",\"W5TajitmCyxz87zAC\",\"xn7uGNKeAwPEkP9oA\",\"4fhjJBvLBWh6QeSih\",\"Ecg4m7srYGgZsb4Ck\",\"gJYuGdkXEWWmGRLzu\",\"p8qqFdJ3FSk5x9z3G\",\"4DF38N8GMFwNTKutK\",\"8sNv5PTHa7XQ8bNqR\",\"iojEnnY9FsMfYzp6f\",\"J3upzLHuEwXH7Z2hx\",\"yjtdwc2AC4jA2RWtn\",\"2PufnQcsHsfymufX3\",\"T6iBEE2jp7f7iEF2P\",\"GTKsdeEihE636Le9i\",\"FvHwg9nTDqmaDBrvP\"],\"total\":67,\"quality\":[4,5,5,5,5,5]},\"flags\":0},\"summary\":\"In Edabit, you can surround text with asterisks, double asterisks, underscores and tildes to add formatting to certain words.\\n\\nComplete the function markdown() so it takes a symbol as input, and returns a function which applies that formatting to a given word in a given sentence.\\n\\nExamples\\nitalicise = markdown(\\\"*\\\")\\n\\nitalicise(\\\"Hello there!\\\", \\\"Hello\\\") ➞ \\\"Hello\",\"tags\":[\"closures\",\"loops\",\"strings\"],\"timestamp\":{\"$date\":1583597457398},\"title\":\"Automatic Markdown\",\"quality\":4.833333333333333,\"family\":[{\"_id\":\"N5JhvabK6DTD5t6gS\",\"language\":\"python3\"}]}}"]