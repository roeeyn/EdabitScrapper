a["{\"msg\":\"result\",\"id\":\"1392\",\"result\":{\"_id\":\"ThvNE5FZRX6JbGoTo\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"def inverter(txt, type):\\n\\t\",\"difficulty\":2.036036036036036,\"familyId\":\"S5AZeF48KSG3WfM8T\",\"instructions\":\"Create a function that inverts words or the phrase depending on the value of parameter `type`. A **\\\"P\\\"** means to invert the entire phrase, while a **\\\"W\\\"** means to invert every word in the phrase. See the following examples for clarity.\\n\\n### Examples\\n```\\ninverter(\\\"This is Valhalla\\\", \\\"P\\\") ➞ \\\"Valhalla is this\\\"\\n\\ninverter(\\\"One fine day to start\\\", \\\"W\\\") ➞ \\\"Eno enif yad ot trats\\\"\\n\\ninverter(\\\"Division by powers of two\\\", \\\"P\\\") ➞ \\\"Two of powers by division\\\"\\n```\\n\\n### Notes\\n- The **first character** of the returned string should be in **uppercase** and the rest are in lowercase.\\n- There will be no empty strings as inputs. Punctuation marks, though quite important for grammatical correctness, are discounted in the input phrases.\",\"isHidden\":false,\"lab\":\"str_vectors = [\\n  [\\\"This is Valhalla\\\", \\\"P\\\"], \\n  [\\\"One fine day to start\\\", \\\"W\\\"], \\n  [\\\"Division by powers of two\\\", \\\"P\\\"],\\n  [\\\"Known for passion in quality\\\", \\\"P\\\"], \\n  [\\\"Excellence is achievable\\\", \\\"W\\\"],\\n  [\\\"The master of your fate the captain of your soul\\\", \\\"W\\\"], \\n  [\\\"All but one in the middle of it all\\\", \\\"P\\\"],\\n  [\\\"The master of your fate the captain of your soul\\\", \\\"P\\\"]]\\nstr_res = [\\n  \\\"Valhalla is this\\\",\\n  \\\"Eno enif yad ot trats\\\",\\n  \\\"Two of powers by division\\\",\\n  \\\"Quality in passion for known\\\",\\n  \\\"Ecnellecxe si elbaveihca\\\",\\n  \\\"Eht retsam fo ruoy etaf eht niatpac fo ruoy luos\\\",\\n  \\\"All it of middle the in one but all\\\",\\n  \\\"Soul your of captain the fate your of master the\\\"]\\n\\nfor i, (s, t) in enumerate(str_vectors):\\n  Test.assert_equals(inverter(s, t), str_res[i])\",\"language\":\"python3\",\"summary\":\"Create a function that inverts words or the phrase depending on the value of parameter type. A \\\"P\\\" means to invert the entire phrase, while a \\\"W\\\" means to invert every word in the phrase. See the following examples for clarity.\\n\\nExamples\\ninverter(\\\"This is Valhalla\\\", \\\"P\\\") ➞ \\\"Valhalla is this\\\"\\n\\ninverter(\\\"One fine day to start\\\", \\\"W\\\") ➞ \\\"Eno enif yad ot trats\\\"\\n\\nin\",\"tags\":[\"arrays\",\"algorithms\",\"strings\"],\"timestamp\":{\"$date\":1594854045395},\"title\":\"Phrase or Word Inverse\",\"stats\":{\"completed\":{\"total\":141,\"ratings\":[4,4,4,4,4,5,1,0,1,0,2,2,3,2,4,2,2,1,2,0,3,3,1,3,1,1,1,1,2,3,0,1,2,3,1,3,3,2,0,2,3,3,2,2,3,5,1,3,1,3,0,1,0,1,0,0,3,2,0,3,3,1,3,2,2,2,2,3,3,2,3,2,3,3,0,3,1,2,1,3,3,1,2,0,3,2,3,1,0,3,2,2,3,3,0,3,3,2,2,1,2,3,2,2,1,2,2,3,3,2,2],\"rators\":[\"a777e8chPvJkY3tKa\",\"aEm3Wvj2rFYRL8Lrb\",\"W5TajitmCyxz87zAC\",\"gb9rvGus2Jv7bjZSs\",\"hZW6j5s6RHpx35phy\",\"xn7uGNKeAwPEkP9oA\",\"s5M5RvgqR9BhB9JoC\",\"8PwfYqoDQFThzNtvf\",\"Nfsj4eNFDjaFa39ga\",\"4CEEaay6mrNZWmZZy\",\"8JyqsSbN2FJXPr3cw\",\"qeqqjviYA9R7uQZEW\",\"8sNv5PTHa7XQ8bNqR\",\"E6tYiWYJ7Kyr9MyEW\",\"pWD2YC5s4YRCxFc2i\",\"gJYuGdkXEWWmGRLzu\",\"iojEnnY9FsMfYzp6f\",\"axdSNLZpiCDF8RS6n\",\"tAF9Gf6PiGogbZuWs\",\"9CoqdidjM9KbeKnHY\",\"dzS6WBTMHyFEag6Fp\",\"55RQznnuTGpsj3EXd\",\"u3KCadwTtXtubaE6E\",\"n2BRY9X8899dcG8Bw\",\"Nb6LYPoQP6KJZt8mz\",\"AasGs8AeX9Lcb9xJn\",\"yjtdwc2AC4jA2RWtn\",\"zZDaXBxMzTCBhNkgL\",\"DrkR35NqnP9NDLbq6\",\"cR3ibTMxLyEdDFCHY\",\"iS5BrkGLzJyPK7nKt\",\"DEDniTrstQYGounXT\",\"KZ2xddpM2f9JRaryB\",\"u7i7WPM63n42r8R8o\",\"MKT7khMBGXzA22ykf\",\"CwXsu25ygLEwQbmQC\",\"hnyhBFWwNCz9mDfSi\",\"Yp7uvStL97cC9fKkY\",\"HF28xZKSLM9wEuqNg\",\"Nua6T3dBurBy3Qfg9\",\"v9KtC8YLbMWmXiW2H\",\"w2HhxvSLmDhaGCAjE\",\"xtEQnmTdT8sBF8zE6\",\"qD2LrwaDrSdiybLKY\",\"p8qqFdJ3FSk5x9z3G\",\"DPi9QGLctq2y76KuE\",\"QRv96jmNaYsWkxQEG\",\"dkcmCKwqApX5jBggc\",\"J5T8gZqiZXFuFDTQ7\",\"yoYQqaY6GszuTkNSs\",\"J3upzLHuEwXH7Z2hx\",\"gSFJPsMXnqAog3Q9f\",\"PTDc84dEdyKaZ7Amv\",\"2bW8ZPE6Yzhr8gwJ8\",\"gXTAie79kiw28tx5u\",\"d8qtzoLB264iP8tdY\",\"oBcs8GLX2ZFLXQy8y\",\"Afnps7TJQuS9sipMb\",\"Jqk2uJZZxEv5wZFze\",\"EfxwqhYdapX3dMQC2\",\"3LiSLdtN58n46NEqg\",\"cAP3n5NY64uoMwzRR\",\"GGdmhAvxXhqhhibJN\",\"8nE8QHnFYsHCFebte\",\"euPBBaYXyS8RBr9KB\",\"PXAcsKkssS2yLyDv2\",\"q2tzvkrLASvSjkek9\",\"4RsakkyRXyYGwFxEa\",\"T2vhHPhRR96hRizq8\",\"qQQ4hCQpzitmHSkjS\",\"CHvzhtXnv8HTbPQ56\",\"mmt7jwqbmSjzRSvqh\",\"LQxof8pGabGuWP7Gn\",\"TePz42wc3ZZ5CKA6L\",\"yLuaweZ4rkrabfELB\",\"bvmTE46bfcM4ogj34\",\"fSQSHjW3e72MrWxbD\",\"mfsaETo7uA4x5vqLD\",\"ppxNdL4gjANz8oJLQ\",\"buX4mCQhtXCfBjeno\",\"FEYpu9RWysAgW3XnP\",\"yyo6YLQN2of6fxp49\",\"aFYzioHvZPvPaunsg\",\"fznzd3qnvtbFkkizz\",\"PWgzeK859suojbrRx\",\"Wpn95NqWxncQrwNgz\",\"Cc2Cgj4MWXZxsTooC\",\"YcCLwitFMAEJSnxAW\",\"rfyEkETeoS96QNH4e\",\"qZQxPQ2kaNKAMesHT\",\"2PufnQcsHsfymufX3\",\"8BFSTCnoe2QggN64c\",\"PC3pLs36zNzpRDSuE\",\"HqmxnQJM66Y57twhn\",\"AFfw7cGg83uYk2Miy\",\"fbr22rabEJMfBp7vD\",\"4Lwjr34ypKNQNQCar\",\"qzXAMXsHZGT8o5hTA\",\"MpfytGFYF77emJ3cT\",\"u5u2YpHXiNgzDNJdX\",\"o4ixjQGSaYqA2JoM4\",\"ey3CASd6Je5LEJzfB\",\"gKnWjDjwrJh7MK2df\",\"kjvgTyRFyKHv44DcH\",\"nQRzZKeDKuLRf9chX\",\"9LghqktEpW4YLxdNk\",\"9gJsF5apWJGWZJprn\",\"T6iBEE2jp7f7iEF2P\",\"RoGGD5cpHb4ftdLDv\",\"nkH3HfJXLMNcBMM79\",\"yod5YhKtPqw2GfG9B\",\"AQSqD9oNv2uPfxZCR\",\"ekbfbYdyZeXHvaG8c\",\"5HCu9Ydd86QgHDRNP\",\"Ds7L5bksw2QRHjrKL\",\"JhX7jvtpwNyxcc39m\",\"mvJBakQ35CWAnbbEZ\",\"aQTCN6vbXjwKzb85G\",\"BrTDhPJcACL2bsrpJ\",\"Qyfyyw6oC4EHAndzo\",\"jkbavR2ATFJcpmo8M\",\"3KkyQm77zsew58Dc2\",\"tMmkfvW7fm429fpJP\",\"mw9464S5dnenqzvpm\",\"srDSN434Mj5MomtoS\",\"DQskEvAv5KiJDPtGF\",\"jWbd7SYDzLPjc9EDh\",\"RErqK2yM94wYyD2hk\",\"9pzFiFK3ANLjQfnr2\",\"WL6P5hHXiTNiKjNjM\"],\"quality\":[5,5,5,5,4,5,4,5,4,5,5,5,5,5,3,5,4,5,3,5,5,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":4.666666666666667,\"family\":[{\"_id\":\"ZaJTyJwShJNi4B9CN\",\"language\":\"javascript\"},{\"_id\":\"FDv9PFout7N2RFSBk\",\"language\":\"php\"},{\"_id\":\"ThvNE5FZRX6JbGoTo\",\"language\":\"python3\"},{\"_id\":\"SeefNxu2YBEpAtrnA\",\"language\":\"ruby\"}]}}"]