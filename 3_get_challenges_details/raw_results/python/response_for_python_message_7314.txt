a["{\"msg\":\"result\",\"id\":\"2363\",\"result\":{\"_id\":\"TywKAYPPjhRsLMk98\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"def hill_cipher(message, key):\\n\\t\",\"difficulty\":3.8666666666666667,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"NeSMaD2R8r9v2DFe7\",\"instructions\":\"In **Hill Cipher**, encoding is done by using the input string of a key and a message which are turned into matrices and then back to the **encoded message**.\\n\\nCreate a function that takes two arguments, `key` and `message`, and returns the **encoded message**.\\n\\nAssign a unique number to each letter of the alphabet.\\n\\n```\\n a  b  c  d  e  f  g  h  i  j  k  l  m\\n 0  1  2  3  4  5  6  7  8  9  10 11 12\\n n  o  p  q  r  s  t  u  v  w  x  y  z\\n 13 14 15 16 17 18 19 20 21 22 23 24 25\\n```\\n\\nThere are some variations on the rules of encipherment. One version of the cipher rules are outlined below:\\n\\n```\\nmessage = \\\"H& *i\\\"\\nkey = \\\"cats\\\"\\n\\nhill_cipher(message, key) ➞ \\\"OR\\\"\\n```\\n\\nStep 1: Create a **2 x 2 matrix** of the given `key` (Length of the key will always be = 4). Convert the key row-wise into a 2x2 matrix and **substitute the letters with their respective positions on the alphabet** i.e., A=0, B=1, C=2 and so on:\\n\\n```\\nkey = \\\"cats\\\"\\n\\n[[ 2  0]\\n [19 18]]\\n\\n# c = 2, a = 0, t = 19, s = 18\\n```\\n\\nStep 2: Remove spaces and all characters **other than alphabets** from the given message:\\n\\n```\\n\\\"Hi\\\"\\n```\\n\\nStep 3: Break the `message` into **pairs of two** and convert those pairs into **2x1 matrices**. If `message` length is an odd number then just add a **Z at the end**. \\n\\n```\\n[[7]\\n [8]]\\n\\n# H = 7, i = 8\\n```\\n\\nStep 4: **Multiply both matrices** and find out the **modulo of 26** with the resultant matrix:\\n\\n```\\n[[ 2  0]  *  [[7]  =  [[14]   =  [[14]  mod 26\\n [19 18]]     [8]]     [277]]     [17]]\\n```\\n\\nStep 5: Find out the alphabets at **resultant matrix positions** :\\n\\n```\\neMessage = \\\"OR\\\"\\n\\n# 14 = O, 17 = \\\"R\\\"\\n```\\n\\nSee the below examples for a better understanding:\\n\\n### Examples\\n```\\nhill_cipher(\\\"H& *i\\\", \\\"cats\\\") ➞ \\\"OR\\\"\\n\\nhill_cipher(\\\"mubashir\\\",\\\"matt\\\") ➞ \\\"OKMTIHSH\\\"\\n\\nhill_cipher(\\\"Five + Seven = Twelve\\\", \\\"math\\\") ➞ \\\"IVSLIGSLAQEECSWR\\\"\\n```\\n\\n### Notes\\n- The text may contain both uppercase and lowercase alphabets. Standardize them and return the encrypted message in **uppercase letters**.\\n- Key length will always be = 4.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"test.assert_equals(hill_cipher(\\\"mubashir\\\",\\\"matt\\\"), \\\"OKMTIHSH\\\")\\ntest.assert_equals(hill_cipher(\\\"iamSTUPID\\\",\\\"nooo\\\"), \\\"AISEHAVKZC\\\")\\ntest.assert_equals(hill_cipher(\\\"PAKIstan\\\",\\\"edab\\\"), \\\"IAMIZTNN\\\")\\ntest.assert_equals(hill_cipher(\\\"\\\",\\\"azyb\\\"), \\\"\\\")\\ntest.assert_equals(hill_cipher(\\\"mubashir\\\",\\\"hele\\\"), \\\"IEHLYSUA\\\")\\ntest.assert_equals(hill_cipher(\\\"mubashir\\\",\\\"four\\\"), \\\"CIFUGLSH\\\")\\ntest.assert_equals(hill_cipher(\\\"hello\\\",\\\"hill\\\"), \\\"DRJIMN\\\")\\ntest.assert_equals(hill_cipher(\\\"This is a good day\\\",\\\"bbaa\\\"), \\\"AAAAAAGACAGAYA\\\")\\ntest.assert_equals(hill_cipher(\\\"Five + Seven = Twelve\\\",\\\"math\\\"), \\\"IVSLIGSLAQEECSWR\\\")\\ntest.assert_equals(hill_cipher(\\\"+-*/ &*%^$\\\",\\\"azyb\\\"), \\\"\\\")\\n# Mubashir\",\"language\":\"python3\",\"quality\":0,\"stats\":{\"completed\":{\"ratings\":[5,5,5,5,5,1,5,5,4,5,2,1,0,5,5],\"quality\":[],\"rators\":[\"T6iBEE2jp7f7iEF2P\",\"8PwfYqoDQFThzNtvf\",\"iS5BrkGLzJyPK7nKt\",\"s5M5RvgqR9BhB9JoC\",\"Wpn95NqWxncQrwNgz\",\"yjtdwc2AC4jA2RWtn\",\"8sNv5PTHa7XQ8bNqR\",\"4HzQ82hLakiPWLMPH\",\"gJYuGdkXEWWmGRLzu\",\"B3wryWpW3RRpaudNK\"],\"total\":11},\"flags\":0},\"summary\":\"In Hill Cipher, encoding is done by using the input string of a key and a message which are turned into matrices and then back to the encoded message.\\n\\nCreate a function that takes two arguments, key and message, and returns the encoded message.\\n\\nAssign a unique number to each letter of the alphabet.\\n\\n a  b  c  d  e  f  g  h  i  j  k  l  m\\n 0  1  2  3  4  5  6\",\"tags\":[\"cryptography\",\"strings\",\"arrays\",\"algorithms\",\"logic\"],\"timestamp\":{\"$date\":1608979065307},\"title\":\"Hill Cipher\",\"family\":[{\"_id\":\"EFWidJS9T7TB4pEDp\",\"language\":\"cpp\"},{\"_id\":\"GRtrgMRRWJMk8QW2F\",\"language\":\"javascript\"},{\"_id\":\"TywKAYPPjhRsLMk98\",\"language\":\"python3\"},{\"_id\":\"XGjJvnqM65W5EnB8u\",\"language\":\"ruby\"}]}}"]