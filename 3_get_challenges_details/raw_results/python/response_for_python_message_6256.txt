a["{\"msg\":\"result\",\"id\":\"1838\",\"result\":{\"_id\":\"WxkFoXTLYiAq57uDq\",\"author\":\"werdna\",\"authorId\":\"buX4mCQhtXCfBjeno\",\"code\":\"def find_and_remove(dct):\\n\\t\",\"difficulty\":2.5454545454545454,\"familyId\":\"jF8fW79pLDuh79WMn\",\"instructions\":\"The insurance guy calls. They were about to pay you all that fortune you've been anxiously waiting for, but they detected further irregularities; the list of stolen items is misformatted and appears to contain other entries that don't belong there. Find and remove them.\\n\\nYou receive a dict  with nested dicts with `strings` as values. Convert their values to `number` and return a dict with entries that evaluate to type `int`.\\n\\n### Examples\\n```\\nfind_and_remove({\\n    \\\"workshop\\\": {\\n      \\\"bedsheets\\\": \\\"2000\\\",\\n      \\\"working\\\": \\\"v0g89t7t\\\",\\n      \\\"pen\\\": \\\"370\\\",\\n      \\\"movies\\\": \\\"wo1a3d5d\\\",\\n    },\\n  }), {\\n    \\\"workshop\\\": {\\n      \\\"bedsheets\\\": 2000, \\n      \\\"pen\\\": 370\\n      }\\n  }\\n```\\n\\n```\\nfind_and_remove({\\n  \\\"bedroom\\\": {\\n    \\\"slippers\\\": \\\"10000\\\",\\n    \\\"piano\\\": \\\"5500\\\",\\n    \\\"call\\\": \\\"vet\\\",\\n    \\\"travel\\\": \\\"world\\\",\\n  },\\n}), {\\n  \\\"bedroom\\\": {\\n    \\\"slippers\\\": 10000,\\n    \\\"piano\\\": 5500,\\n  },\\n}\\n```\\n\\n### Notes\\n- This challenge was translated from Miguel Carvalho's JavaScript Burglary Series. The following are links to his Javascript series:\\n\\n- If you have suggestions on how to present or further test this challenge please leave a comment.\\n- This series is part of a [collection that focuses on objects](https://edabit.com/collection/6NzWEMSwrSw4fnKkL). If you are interested in following the breath-taking narrative skills of yours truly or just do some object focused challenges (the challenges are ordered in ascending difficulty order), you can more easily [do that here](https://edabit.com/collection/6NzWEMSwrSw4fnKkL).\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(find_and_remove({\\n    'workshop': {\\n      'bedsheets': \\\"2000\\\",\\n      'working': \\\"v0g89t7t\\\",\\n      'pen': \\\"370\\\",\\n      'movies': \\\"wo1a3d5d\\\",\\n    },\\n  }), {\\n    'workshop': {\\n      'bedsheets': 2000, \\n      'pen': 370\\n      }\\n  })\\n\\nTest.assert_equals(find_and_remove({\\n  'bedroom': {\\n    'slippers': \\\"10000\\\",\\n    'piano': \\\"5500\\\",\\n    'call': \\\"vet\\\",\\n    'travel': \\\"world\\\",\\n  },\\n}), {\\n  'bedroom': {\\n    'slippers': 10000,\\n    'piano': 5500,\\n  },\\n})\\n\\nTest.assert_equals(find_and_remove({\\n  'kitchen': {\\n    \\\"gold spoons\\\": \\\"900\\\",\\n    'piano': \\\"550\\\",\\n    'notes': \\\"ga0r76ba22g4e\\\",\\n  },\\n  'cellar': {\\n    'reminder': \\\"dog\\\",\\n    'bottle': \\\"750\\\",\\n  },\\n}), {\\n  'kitchen': {\\n    \\\"gold spoons\\\": 900,\\n    'piano': 550,\\n  },\\n  'cellar': {\\n    'bottle': 750,\\n  },\\n})\\n\\n# This challenge was translated from Miguel Carvalho's JavaScript Burglary Series\",\"language\":\"python3\",\"quality\":4.571428571428571,\"summary\":\"The insurance guy calls. They were about to pay you all that fortune you've been anxiously waiting for, but they detected further irregularities; the list of stolen items is misformatted and appears to contain other entries that don't belong there. Find and remove them.\\n\\nYou receive a dict  with nested dicts with strings as values. Convert their values to numb\",\"tags\":[\"objects\",\"arrays\",\"loops\"],\"timestamp\":{\"$date\":1606669754919},\"title\":\"Burglary Series (23): Find and Remove\",\"stats\":{\"completed\":{\"total\":50,\"ratings\":[3,3,3,3,3,4,5,3,2,4,2,5,2,5,0,2,5,1,0,1,1,3,0,4,4,2,4,3,1,3,3,0,0,2,1,3,5,3,2,0,4,2,3,3],\"quality\":[4,4,5,4,5,5,5],\"rators\":[\"buX4mCQhtXCfBjeno\",\"8PwfYqoDQFThzNtvf\",\"tAF9Gf6PiGogbZuWs\",\"8JyqsSbN2FJXPr3cw\",\"HF28xZKSLM9wEuqNg\",\"d8qtzoLB264iP8tdY\",\"5dHucvf2qBYyKim7X\",\"s5M5RvgqR9BhB9JoC\",\"iS5BrkGLzJyPK7nKt\",\"QRv96jmNaYsWkxQEG\",\"SGhPxX5bHGL8zZqtt\",\"yGSyGdZboKGFEQTGn\",\"GodBn82NDHydTQK6h\",\"5zFWzhFz4nWppYofD\",\"aEm3Wvj2rFYRL8Lrb\",\"8sNv5PTHa7XQ8bNqR\",\"p8qqFdJ3FSk5x9z3G\",\"qPpQfR5KyDb5Y3EFf\",\"J3upzLHuEwXH7Z2hx\",\"mDWNyaaQ9hvPCRzSd\",\"55RQznnuTGpsj3EXd\",\"fSQSHjW3e72MrWxbD\",\"GTKsdeEihE636Le9i\",\"gXTAie79kiw28tx5u\",\"iojEnnY9FsMfYzp6f\",\"gJYuGdkXEWWmGRLzu\",\"gb9rvGus2Jv7bjZSs\",\"xn7uGNKeAwPEkP9oA\",\"HhYCji7QqauyN3A7v\",\"2PufnQcsHsfymufX3\",\"yjtdwc2AC4jA2RWtn\",\"AasGs8AeX9Lcb9xJn\",\"LQxof8pGabGuWP7Gn\",\"H9KZi2cjt4FwH7qog\",\"HqmxnQJM66Y57twhn\",\"oBcs8GLX2ZFLXQy8y\",\"fznzd3qnvtbFkkizz\",\"8nE8QHnFYsHCFebte\",\"AQSqD9oNv2uPfxZCR\",\"n7exeKEp4vQkppRrd\",\"fbr22rabEJMfBp7vD\",\"T6iBEE2jp7f7iEF2P\",\"9dHZSFRtTepdD7Tv5\",\"HoEQXh6QTFxrgcJ4J\",\"iqmPb9JuJDgTFeR8Q\",\"PxjZL5AA8R5Dfg8v3\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"MregZPPJWSxhXtrNB\",\"language\":\"javascript\"},{\"_id\":\"WxkFoXTLYiAq57uDq\",\"language\":\"python3\"}]}}"]