a["{\"msg\":\"result\",\"id\":\"2047\",\"result\":{\"_id\":\"qGw8PGpMywu9PJti5\",\"author\":\"oldhermit\",\"authorId\":\"4fhjJBvLBWh6QeSih\",\"code\":\"def hanoi(n):\\n\\t\",\"difficulty\":2.8636363636363638,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"Cwy5tWo4d7eeT5ftq\",\"instructions\":\"You have three rods numbered from 1 to 3. A few disks of different sizes are strung on the first rod. Disks are ranged by size from the smallest one on top to the largest at the bottom.\\n\\nCreate a function that shows how to transfer the entire stack of `n` disks from first to the third rod, obeying the following rules:\\n\\n1. Each move consists of taking the upper disk from one rod and placing it on another rod.\\n2. No larger disk may be placed on top of a smaller disk.\\n\\nThe function should return a list of moves. Each move is represented by a tuple of two numbers: the number of the rod from which to take the disk, and the number of the rod where to put it.\\n\\n### Examples\\n```\\nhanoi(1) ➞ [(1, 3)]\\n\\nhanoi(2) ➞ [(1, 2), (1, 3), (2, 3)]\\n\\nhanoi(4) ➞ [(1, 2), (1, 3), (2, 3), (1, 2), (3, 1), (3, 2), (1, 2), (1, 3), (2, 3), (2, 1), (3, 1), (2, 3), (1, 2), (1, 3), (2, 3)]\\n```\\n\\n### Notes\\n- Function have to return an empty list if `n == 0`\\n- The best way to solve this problem is to use recursion.\\n\\n![GIF of the puzzle](https://edabit-challenges.s3.amazonaws.com/Tower_of_Hanoi_4.gif)\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(hanoi(1), [(1, 3)])\\nTest.assert_equals(hanoi(2), [(1, 2), (1, 3), (2, 3)])\\nTest.assert_equals(hanoi(3), [(1, 3), (1, 2), (3, 2), (1, 3), (2, 1), (2, 3), (1, 3)])\\nTest.assert_equals(hanoi(4), [(1, 2), (1, 3), (2, 3), (1, 2), (3, 1), (3, 2), (1, 2), (1, 3), (2, 3), (2, 1), (3, 1), (2, 3), (1, 2), (1, 3), (2, 3)])\\nTest.assert_equals(hanoi(0), [])\\nTest.assert_equals(hanoi(5)[7:12], [(1, 2), (3, 2), (3, 1), (2, 1), (3, 2)])\\nTest.assert_equals(hanoi(6)[32:36], [(2, 3), (2, 1), (3, 1), (2, 3)])\\nTest.assert_equals(hanoi(7)[95:99], [(2, 3), (1, 3), (1, 2), (3, 2)])\",\"language\":\"python3\",\"quality\":0,\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,3,5,2,4,3,5,4,2,5,0,4,3,1,5,3,2],\"quality\":[],\"rators\":[\"4fhjJBvLBWh6QeSih\",\"aEm3Wvj2rFYRL8Lrb\",\"gJYuGdkXEWWmGRLzu\",\"fSQSHjW3e72MrWxbD\",\"83ye82mEQ2jx76rei\",\"4rk7szWxbShptuiCL\",\"s5M5RvgqR9BhB9JoC\",\"8PwfYqoDQFThzNtvf\",\"8sNv5PTHa7XQ8bNqR\",\"XNmN6ztj36a7eChbD\",\"Mi7kzGo2FgEbKNNcX\",\"iojEnnY9FsMfYzp6f\",\"yjtdwc2AC4jA2RWtn\",\"MpfytGFYF77emJ3cT\",\"2PufnQcsHsfymufX3\",\"8yJF7A6HAqEcwpwJf\",\"gXTAie79kiw28tx5u\"],\"total\":17},\"flags\":0},\"summary\":\"You have three rods numbered from 1 to 3. A few disks of different sizes are strung on the first rod. Disks are ranged by size from the smallest one on top to the largest at the bottom.\\n\\nCreate a function that shows how to transfer the entire stack of n disks from first to the third rod, obeying the following rules:\\n\\nEach move consists of taking the upper disk\",\"tags\":[\"recursion\",\"logic\"],\"timestamp\":{\"$date\":1603983415681},\"title\":\"Tower of Hanoi: Find All Moves\",\"family\":[{\"_id\":\"qGw8PGpMywu9PJti5\",\"language\":\"python3\"}]}}"]