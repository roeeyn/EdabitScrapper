a["{\"msg\":\"result\",\"id\":\"900\",\"result\":{\"_id\":\"en35WbjkDF9ej59FW\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"def ends_add_to_10(nums):\\n\\t\",\"difficulty\":1.4475138121546962,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"ZvxX7L2xmdvhv5X3b\",\"instructions\":\"Given a list of numbers, of any length, create a function which counts how many of those numbers pass the following criteria:\\n* The **first** and **last** digits of a number must add to **10**.\\n\\n### Examples\\n```\\nends_add_to_10([19, 46, 2098]) ➞ 3\\n\\nends_add_to_10([33, 44, -55]) ➞ 1\\n\\nends_add_to_10([]) ➞ 0\\n```\\n\\n### Notes\\n- All items in the list will be numbers.\\n- Ignore negative signs (see example #2).\\n- If the number contains only one digit, that digit will be the first and the last digit.\\n- If given an empty list, return `0`.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(ends_add_to_10([19, 46, 2098]), 3)\\nTest.assert_equals(ends_add_to_10([33, 44, -55]), 1)\\nTest.assert_equals(ends_add_to_10([]), 0)\\nTest.assert_equals(ends_add_to_10([-91, 55, -33]), 2)\\nTest.assert_equals(ends_add_to_10([100, -10, 1, 3, 2, 5, 2]), 1) # I think 5 should count.\\nTest.assert_equals(ends_add_to_10([19, 28, 37, 46, 55, 64, 73, 82, 91]), 9)\\nTest.assert_equals(ends_add_to_10([-19, -28, -37, -46, -55, -64, -73, -82, -91]), 9)\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,2,1,1,2,1,1,1,1,2,2,2,2,2,2,1,2,5,2,2,2,1,0,2,2,3,2,2,1,4,0,0,0,2,2,2,0,1,1,2,2,0,1,2,1,2,0,2,0,2,2,3,2,1,2,1,2,1,2,0,1,2,2,2,1,1,2,1,3,2,0,1,1,1,2,2,1,2,2,2,1,0,0,2,2,1,1,2,2,1,0,2,0,1,1,0,2,2,2,0,1,2,2,2,4,2,3,2,2,2,1,0,2,1,0,1,0,2,2,2,1,2,0,2,1,0,1,2,0,1,1,2,2,2,2,2,1,2,2,2,1,2,2,1,1,2,0,2,2,1,2,1,2,2,2,1,2,2,1,1,1,1,2,2,1,0,2,2,2,1,0,1,2,1,1,1,2],\"rators\":[\"FfE8RBnmYMgs2euS2\",\"qb8k9ZKhW64ofWyHJ\",\"DEDniTrstQYGounXT\",\"tAF9Gf6PiGogbZuWs\",\"FEYpu9RWysAgW3XnP\",\"RW2wFPbMQniZWPmw4\",\"HF28xZKSLM9wEuqNg\",\"AasGs8AeX9Lcb9xJn\",\"MKT7khMBGXzA22ykf\",\"ed3kvX7hGA42MET9x\",\"7FtsWoer4JeMf2ttA\",\"3KmYaFNd7pNwuSF8f\",\"b2JHfxkLZHYKoqK3u\",\"5ZNNgkL6ngsjR9qq4\",\"gb9rvGus2Jv7bjZSs\",\"8PwfYqoDQFThzNtvf\",\"J5T8gZqiZXFuFDTQ7\",\"Yp7uvStL97cC9fKkY\",\"hnyhBFWwNCz9mDfSi\",\"sbJcFfQjQ59Wfg4Cd\",\"gJYuGdkXEWWmGRLzu\",\"aRqQ42J5zqCmBNd8w\",\"s5M5RvgqR9BhB9JoC\",\"yZvzB3qFb8pkHy4dg\",\"9pzFiFK3ANLjQfnr2\",\"KdNDysEsy2TW5QRJ2\",\"ZNnsMeNkdDhHjSrZb\",\"LDtBRPtAiDgrhjxR5\",\"cFnh3st63rXNrQQxC\",\"cR3ibTMxLyEdDFCHY\",\"2QGRoQn2dRq3scu7k\",\"4rwxLqLs2mNZNg8NB\",\"dHZqT6h4JMwk5fPC8\",\"8LfTheFzvicameoz9\",\"dz89mduovnXegiMsS\",\"ahk2qiXKJA753wAJk\",\"8JyqsSbN2FJXPr3cw\",\"aEm3Wvj2rFYRL8Lrb\",\"H9KZi2cjt4FwH7qog\",null,\"LZQxLPgLGcGgLGmZc\",\"XrqNzJ2FRG8HnGiR6\",\"2ptN2mhjFwFcHyPZd\",\"yr822PZmmiDDenxpB\",\"4yNLEwL2rsx4EE5Nt\",\"yKttxy9JGn5Jzwuj6\",\"So6PHm74mfJuY2WTs\",\"eMuCpJ2spXWkJjWNz\",\"NG8PWBSjsM8mMhQEq\",\"H4abACFDH5t8CnnyH\",\"DrkR35NqnP9NDLbq6\",\"7txFzDQ43vJ7qCY88\",\"3cF6NXq3ZEwdkgSjb\",\"ZrKCkX7xxGGZzauFW\",\"syRNbbPdLCGXbH2Gy\",\"JS3hNM3XXkxPdg3yk\",\"jNvegJWCk5HCtEMbK\",\"iojEnnY9FsMfYzp6f\",\"hRiMXDZNAzyPd5tpt\",\"Pe8vWpDHRuH9nSGKW\",\"2innwjWqxJHo4eRGh\",\"CwXsu25ygLEwQbmQC\",\"TR5aWdDKP6iaL6mGK\",\"mxX4rH5ELYkdZ2Mbw\",\"NNE5HNRXAkmhrWgyQ\",\"R4SjTgDnpigJYDLyL\",\"yjtdwc2AC4jA2RWtn\",\"iS5BrkGLzJyPK7nKt\",\"YcCLwitFMAEJSnxAW\",\"HqmxnQJM66Y57twhn\",\"gSFJPsMXnqAog3Q9f\",\"oBcs8GLX2ZFLXQy8y\",\"6SKDJwXpev4qPSzgM\",\"ta5CrWnBCRusD2WMo\",\"Q9afpRu3u8zuWuzLQ\",\"axFGc8QrcLfdPgmhi\",\"6gS4E2C84vBYTYeDZ\",\"n2BRY9X8899dcG8Bw\",\"C9LKGu2g5hSijvDzA\",\"YA7SDhpgEtsqynvNL\",\"M8dQuMrEpP8Hc3tHN\",\"u7i7WPM63n42r8R8o\",\"zd9FLSzsGz3evKafy\",\"GGprTwrkjuccmrQRg\",\"i5iePG5GqhJJ8HEoB\",\"RehJGBFS6CYiWdjZx\",\"TPhfpB5tzQWSSn67n\",\"ji5f27FPz4wRRF6Ls\",\"8BFSTCnoe2QggN64c\",\"p8qqFdJ3FSk5x9z3G\",\"KLmLKaJPfsYxp42p2\",\"Wv2vJnEj8ywNmARoF\",\"FvFhg2wELM3SCZDZQ\",\"k2Eo3wyfZZ6KxvKhN\",\"5HCu9Ydd86QgHDRNP\",\"EMJ6uvBZkie429gdg\",\"3nied3n8KG8RSNixH\",\"Kh3Pc2ZRusurLaMyP\",\"3LiSLdtN58n46NEqg\",\"9CoqdidjM9KbeKnHY\",\"tpxMgkGSHwBjS95Ta\",\"K6RQoPvk3AKW6yrow\",\"mG8HqKiAQFTdRZthG\",\"kNrnnMxhFZztMTBAX\",\"gXTAie79kiw28tx5u\",\"7K2GEb5TZRtSpyyGS\",\"b5zo7s6xrqWgQnPao\",\"6HgMANhu6WiGyXSGN\",\"hwE5wDZ4RToL5kjLn\",\"8WpvgSbQciTQWdd8T\",\"DPi9QGLctq2y76KuE\",\"K3RacTvkWHLfzKF8i\",\"dBzwBtRjZqB98DJeB\",\"wRttWTM59y8m5mx7x\",\"dj5AyG5fWP8FdsSmZ\",\"J3upzLHuEwXH7Z2hx\",\"9FCeFzjPA4jrQ7oHW\",\"9dgvEreRDYRiwLmYv\",\"KJCDwGkoXh8qtbbKr\",\"cAP3n5NY64uoMwzRR\",\"dYPkStFnLvAMsHSzZ\",\"d8qtzoLB264iP8tdY\",\"8fZxjQfuXw5HMSRJM\",\"sHjfbGQGLHE6JR6qu\",\"RGMbFMZXJr7DhcAJy\",\"g9FyJ8yeT9ic97Qp2\",\"5XiuAqicKD4hBdu63\",\"axdSNLZpiCDF8RS6n\",\"YRAzEBJoLvSaiPtYx\",\"xn7uGNKeAwPEkP9oA\",\"Cybtjz3cF7RgoiqrN\",\"mDWNyaaQ9hvPCRzSd\",\"HuNF3xTBzmatyGSTm\",\"Jqk2uJZZxEv5wZFze\",\"ey3CASd6Je5LEJzfB\",\"CyzskHGsC6WSmYrLu\",\"EfxwqhYdapX3dMQC2\",\"o4ixjQGSaYqA2JoM4\",\"NzbRqGWspQnWMoDrF\",\"buX4mCQhtXCfBjeno\",\"CLypXaZksY99mpRCm\",\"eYfPWvZwnJQkHbSTK\",\"utTuvGdmu2sBHWBhQ\",\"srJ34BaybkQh3qRkM\",\"GGdmhAvxXhqhhibJN\",\"5S9nX4rKsnCcnv4Cz\",\"5hQnRWiKkhgKJXNMP\",\"MXGuntvz3byrP6WJc\",\"JhX7jvtpwNyxcc39m\",\"GqothajHR2vKfEHGZ\",\"yod5YhKtPqw2GfG9B\",\"Ds7L5bksw2QRHjrKL\",\"2fxapKr8XGdNeaKi2\",\"CHvzhtXnv8HTbPQ56\",\"qAby4AWXmTNeusvg3\",\"q6QsMYNMpPNtmyTeW\",\"wjc4iejpErBhxWwHo\",\"T2vhHPhRR96hRizq8\",\"T6iBEE2jp7f7iEF2P\",\"BrTDhPJcACL2bsrpJ\",\"XD5nmvKQchKezPXhy\",\"BJp2WkwLWGHHB5oQW\",\"AFfw7cGg83uYk2Miy\",\"66a9xX73nmTEuKs9k\",\"Wpn95NqWxncQrwNgz\",\"PC3pLs36zNzpRDSuE\",\"c2q7mY39z5JPEMCaM\",\"Cc2Cgj4MWXZxsTooC\",\"AJexRBN9cYQmqvYu6\",\"mvJBakQ35CWAnbbEZ\",\"X4rzfxGgxx6CS7Bpz\",\"2u9wghjCydey6aWys\",\"9Ly8afdtofp8DXzrt\",\"2PufnQcsHsfymufX3\",\"K6MfKMytoJJuSGewP\",\"ghMkPtdFCpM6w8nax\",\"eHcgvkTGsH7ZziqBo\",\"R6YxHWAiLgKwy5YvC\",\"rrSC943cCKNG48sH4\",\"N2wnZXkhDH86mgjQ8\",\"qzXAMXsHZGT8o5hTA\",\"pduNK68oazqQTtbLp\",\"ZEmLth3xsiCJENKz4\",\"hR7GMiqGap4CzEWSy\",\"KH4Wr3YSvNddCSRJ2\",\"hiGXnxds6zo7XsfTw\",\"2iFe3EHEH2YdhSKrs\",\"4Lwjr34ypKNQNQCar\",\"nc7bRhkxgKyqusYe3\",\"QvEXmSEo3ANp3yPyH\",\"Afnps7TJQuS9sipMb\",\"NfMJuiBk6FN5Jc6ow\",\"4RY3zj9C2t8GGefhi\",\"4TmgHkn5vqyHK3sYC\",\"ecmhgtfPMoqK8QhH2\",\"T6Rm8mREPMZSftzrC\",\"u5u2YpHXiNgzDNJdX\",\"d9LBRxvADNBB5QJMB\",\"dzS6WBTMHyFEag6Fp\",\"AYR84qkiEoqzonA3e\",\"yAouD3PxzED8a4gap\",\"uGuS9YRXW2nj4p6zf\",\"mw9464S5dnenqzvpm\",\"qB6KSTYC6H2TQEQY6\",\"B4y8aoyXJtskYPFEL\",\"Qyfyyw6oC4EHAndzo\",\"hpT9yYe5R45poHrYR\",\"rCrbqMiaGPgHYTNxu\",\"5QN8R22z43SrwoHDz\",\"nFbmNzMQ38TncmfQX\",\"Zyg9xAm6EuH4u3Lo5\",\"AQSqD9oNv2uPfxZCR\",\"Wi4H6ayKsNDWWQCG5\",\"Ncn7Qn2LbdsiJnfFk\",\"pPpmP7xeJzGgK362R\",\"8uiLiJcmWxWe6qw65\",\"vAbK8sCfKyFC78HYg\",\"E2hpke7mHxAWsw5t9\",\"vCeeMuYDbz3MB4vsk\",\"WQubx7DAkG6WZE8FA\"],\"total\":247,\"quality\":[4,5,3,5,4,4,5,5,3,5,4,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5]},\"flags\":0},\"summary\":\"Given a list of numbers, of any length, create a function which counts how many of those numbers pass the following criterea:\\nThe first and last digits of a number must add to 10.\\n\\nExamples\\nendsaddto_10([19, 46, 2098]) ➞ 3\\n\\nendsaddto_10([33, 44, -55]) ➞ 1\\n\\nendsaddto_10([]) ➞ 0\\n\\nNotes\\nAll items in the list will be numbers.\\nIgnore negative signs (see example #2)\",\"tags\":[\"loops\",\"arrays\",\"numbers\"],\"timestamp\":{\"$date\":1589542828762},\"title\":\"Adding Both Ends Together\",\"quality\":4.75,\"family\":[{\"_id\":\"6ALfEpNtwKZNBHocT\",\"language\":\"cpp\"},{\"_id\":\"ki2njto7agJD3EdZ6\",\"language\":\"javascript\"},{\"_id\":\"en35WbjkDF9ej59FW\",\"language\":\"python3\"},{\"_id\":\"5WqkiY9sxXE3pTFB2\",\"language\":\"ruby\"}]}}"]