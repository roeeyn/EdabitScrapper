a["{\"msg\":\"result\",\"id\":\"1627\",\"result\":{\"_id\":\"pqtqDvRSKNWHAMsF2\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"def combine_lists(lst1, lst2, lst3):\\n\\t\",\"difficulty\":2.1206896551724137,\"familyId\":\"7qYyjDMnJBBagppg3\",\"instructions\":\"Create a function that takes three lists and returns one list where all passed arrays are combined into nested lists.\\n\\nThese lists should be combined based on indexes: the first nested list should contain only the items on index 0, the second list on index 1, and so on.\\n\\nIf any list contains fewer items than necessary, supplement the missing item with `\\\"*\\\"`.\\n\\n### Examples\\n```\\ncombine_lists([False, \\\"False\\\"], [\\\"True\\\", True, \\\"bool\\\"], [\\\"None\\\", \\\"undefined\\\"]) ➞ [[False, \\\"True\\\", \\\"None\\\"], [\\\"False\\\", True, \\\"undefined\\\"], [\\\"*\\\", \\\"bool\\\", \\\"*\\\"]]\\n\\ncombine_lists([1, 2, 3], [4, 5, 6], [7, 8, 9]) ➞ [[1, 4, 7], [2, 5,  8], [3, 6, 9]]\\n\\ncombine_lists([\\\"Jack\\\", \\\"Joe\\\", \\\"Jill\\\"], [\\\"Stuart\\\", \\\"Sammy\\\", \\\"Silvia\\\"], [\\\"Rick\\\", \\\"Raymond\\\", \\\"Riri\\\"]) ➞ [[\\\"Jack\\\", \\\"Stuart\\\", \\\"Rick\\\"], [\\\"Joe\\\", \\\"Sammy\\\",  \\\"Raymond\\\"], [\\\"Jill\\\", \\\"Silvia\\\", \\\"Riri\\\"]]\\n```\\n\\n### Notes\\nN/A\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(combine_lists([False, 'False'], ['True', True, 'bool'], ['None', 'undefined']), [[False, 'True', 'None'], ['False', True, 'undefined'], ['*', 'bool', '*']])\\nTest.assert_equals(combine_lists([1, 2, 3], [4, 5, 6], [7, 8, 9]), [[1, 4, 7], [2, 5,  8], [3, 6, 9]])\\nTest.assert_equals(combine_lists(['Jack', 'Joe', 'Jill'], ['Stuart', 'Sammy', 'Silvia'], ['Rick', 'Raymond', 'Riri']), [['Jack', 'Stuart', 'Rick'], ['Joe', 'Sammy',  'Raymond'], ['Jill', 'Silvia', 'Riri']])\\nTest.assert_equals(combine_lists(['JS', 'TS', 'CS'], ['React', 'Vue', 'Angular'], ['C', 'C++']), [['JS', 'React', 'C'], ['TS', 'Vue', 'C++'], ['CS', 'Angular', '*']])\",\"language\":\"python3\",\"quality\":4.833333333333333,\"summary\":\"Create a function that takes three lists and returns one list where all passed arrays are combined into nested lists.\\n\\nThese lists should be combined based on indexes: the first nested list should contain only the items on index 0, the second list on index 1, and so on.\\n\\nIf any list contains fewer items than necessary, supplement the missing item with \\\"*\\\".\\n\\nEx\",\"tags\":[\"arrays\",\"data_structures\",\"loops\"],\"timestamp\":{\"$date\":1610797854588},\"title\":\"Combine Arrays\",\"stats\":{\"completed\":{\"total\":64,\"ratings\":[2,2,2,2,2,3,2,3,3,2,2,3,0,1,1,3,1,2,3,3,1,2,3,2,2,3,4,3,5,3,4,3,1,2,2,2,0,3,1,3,0,0,3,0,3,2,2,4,0,2,3,2,2,3,3,1,0,2],\"quality\":[5,5,4,5,5,5],\"rators\":[\"8PwfYqoDQFThzNtvf\",\"Yp7uvStL97cC9fKkY\",\"iS5BrkGLzJyPK7nKt\",\"w2HhxvSLmDhaGCAjE\",\"s5M5RvgqR9BhB9JoC\",\"gXTAie79kiw28tx5u\",\"buX4mCQhtXCfBjeno\",\"yjtdwc2AC4jA2RWtn\",\"Jqk2uJZZxEv5wZFze\",\"55RQznnuTGpsj3EXd\",\"n2BRY9X8899dcG8Bw\",\"QRv96jmNaYsWkxQEG\",\"gb9rvGus2Jv7bjZSs\",\"p8qqFdJ3FSk5x9z3G\",\"hnyhBFWwNCz9mDfSi\",\"cAP3n5NY64uoMwzRR\",\"JwLKvWBSQcLs9R9vv\",\"HF28xZKSLM9wEuqNg\",\"oBcs8GLX2ZFLXQy8y\",\"qAby4AWXmTNeusvg3\",\"8mGWypY7S2RcGcAPR\",\"DPi9QGLctq2y76KuE\",\"iojEnnY9FsMfYzp6f\",\"jcivfiuG6GtibbBL9\",\"gJYuGdkXEWWmGRLzu\",\"bvmTE46bfcM4ogj34\",\"J3upzLHuEwXH7Z2hx\",\"PWgzeK859suojbrRx\",\"XHShZ3WMPgGEA2vkR\",\"xn7uGNKeAwPEkP9oA\",\"HhYCji7QqauyN3A7v\",\"GJmKcqu7xppQyBaTt\",\"eHcgvkTGsH7ZziqBo\",\"BrTDhPJcACL2bsrpJ\",\"AasGs8AeX9Lcb9xJn\",\"qD2LrwaDrSdiybLKY\",\"LQxof8pGabGuWP7Gn\",\"PH32cNxBjrK4a28sn\",\"fbr22rabEJMfBp7vD\",\"aEm3Wvj2rFYRL8Lrb\",\"2NDSt8HyP33cFRHsu\",\"nkH3HfJXLMNcBMM79\",\"gKnWjDjwrJh7MK2df\",\"tAF9Gf6PiGogbZuWs\",\"T2vhHPhRR96hRizq8\",\"JhX7jvtpwNyxcc39m\",\"yod5YhKtPqw2GfG9B\",\"4Lwjr34ypKNQNQCar\",\"suArq5BbSy7gD6xri\",\"d8qtzoLB264iP8tdY\",\"2PufnQcsHsfymufX3\",\"3Kgtr8FytbE9FnJxH\",\"8JyqsSbN2FJXPr3cw\",\"m3R9aaRoEbaxRsSNA\",\"3CRf8CYo6fHSbqKQj\",\"dSd7wHgXGQeG5BQ2P\",\"8sNv5PTHa7XQ8bNqR\",\"GGdmhAvxXhqhhibJN\",\"wrL4iX2CCSqDCCty3\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"Q7oSiYdNJvvDYHdmR\",\"language\":\"javascript\"},{\"_id\":\"pqtqDvRSKNWHAMsF2\",\"language\":\"python3\"},{\"_id\":\"oCjpRiNsXgcNgGLzG\",\"language\":\"ruby\"}]}}"]