a["{\"msg\":\"result\",\"id\":\"2270\",\"result\":{\"_id\":\"vjkRfBeJtmisqmY99\",\"author\":\"joegal\",\"authorId\":\"fznzd3qnvtbFkkizz\",\"code\":\" def fit_words(words, clue):\\n\\n    \",\"difficulty\":3.55,\"editorId\":\"fznzd3qnvtbFkkizz\",\"familyId\":\"oBaMqxyzDgCnjNS5z\",\"instructions\":\"You are given a list of 9 7-letter words.  You are also given the\\nmiddle letter of one of the 6 of them which fit together in a\\nsort of star pattern as follows:\\n\\nWord 1 fits diagonally downwards from left to right. Its 1st letter is\\nthe last letter of word 5; 3rd letter the 5th of word 3;last letter the\\nlast letter of word 4.\\n\\nWord 2 fits diagonally downwards from left to right. Its 1st letter is the\\n1st letter of word 3; 5th letter the 3rd of word 4; last letter the 1st\\nof word 6.\\n\\nWord 3 fits horizontally from left to right. Its 1st letter is the\\n1st of word 2; 3rd the 5th of word 5; 5th the 3rd of word 1;\\nlast the last of word 6.\\n\\nWord 4 fits horizontally from left to right. Its 1st letter is the\\n1st of word 5; 3rd the 5th of word 2; 5th the 3rd of word 6; last\\nthe last of word 1.\\n\\nWord 5 fits diagonally upwards from left to right. Its 1st letter is\\nthe 1st letter of word 4; 5th the 3rd letter of word 3; last the\\n1st of word 1.\\n\\nWord 6 fits diagonally upwards from left to right. Its 1st letter is\\nthe last of word 2; 3rd the 5th of word 4; last the last of word\\n3.\\n\\nWrite a function which takes in a list of 9 7-letter words and number of\\none of the words and its middle letter and outputs a list of the 6 words\\nwhich fit together as above, ordered as words 1 to 6 as described.\\nFor some tests there may be more than 1 correct answer - any will\\nbe accepted.\\n\\n**Examples**\\n\\nfit_words([\\\"crudity\\\", 'reactor', 'grammar', 'bromide', 'aridity',\\n         'airport', 'trilogy', 'rhizome', 'barrier'\\n        ],(3,'d')) --> ['rhizome', 'airport', 'aridity', 'bromide', 'barrier', 'trilogy']\\n\\nfit_words(['station', 'freezer', 'sulfate', 'portion', 'trilogy',\\n         'typhoon', 'solvent', 'episode', 'steeple'\\n        ],(3,'e')) --> ['typhoon', 'sulfate', 'steeple', 'station', 'solvent', 'episode']\\n\\n**Notes**\\n\\nWords are numbered from 1 (so the clue word in each of the examples is the 3rd word)\\n\\nCase may be ignored - all test words are lower case.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"tests = [\\n(['crudity','reactor','grammar','bromide','aridity','airport','trilogy','rhizome','barrier'],(3,'d')),\\n(['station','freezer','sulfate','portion','trilogy','typhoon','solvent','episode','steeple'],(3,'e')),\\n(['silence','manacle','panache','stadium','scallop','panther','science','numeral','lamella'],(3,'e')),\\n(['manager','partner','surfing','synapse','chamber','granite','romance','primage','reptile'],(3,'a')),\\n(['details','edifice','alewife','pottage','sleeper','drawing','philtre','healing','setting'],(3,'l'))\\n]\\n\\nans = [\\n[['rhizome', 'airport', 'aridity', 'bromide', 'barrier', 'trilogy']],\\n[['typhoon', 'sulfate', 'steeple', 'station', 'solvent', 'episode']],\\n[['panache', 'stadium', 'silence', 'science', 'scallop', 'manacle'],\\n ['manacle','scallop','science','silence','stadium','panache']],\\n[['reptile', 'surfing', 'synapse', 'primage', 'partner', 'granite']],\\n[['setting', 'pottage', 'philtre', 'drawing', 'details', 'edifice']]\\n]\\n\\nfor i, (words, clue) in enumerate(tests):\\n    response = fit_words(words, clue)\\n    answer = response if response in ans[i] else ans[i][0]\\n    Test.assert_equals(response, answer)\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[3,3,3,3,3,2,3,4,5,4,4,5,3,5,4,1,2,5,5,4],\"rators\":[\"aEm3Wvj2rFYRL8Lrb\",\"tAF9Gf6PiGogbZuWs\",\"fznzd3qnvtbFkkizz\",\"8PwfYqoDQFThzNtvf\",\"ZNnsMeNkdDhHjSrZb\",\"SGhPxX5bHGL8zZqtt\",\"xn7uGNKeAwPEkP9oA\",\"8JyqsSbN2FJXPr3cw\",\"4fhjJBvLBWh6QeSih\",\"mDWNyaaQ9hvPCRzSd\",\"yjtdwc2AC4jA2RWtn\",\"8sNv5PTHa7XQ8bNqR\",\"gJYuGdkXEWWmGRLzu\",\"iS5BrkGLzJyPK7nKt\",\"s5M5RvgqR9BhB9JoC\"],\"total\":16,\"quality\":[]},\"flags\":0},\"summary\":\"You are given a list of 9 7-letter words.  You are also given the\\nmiddle letter of one of the 6 of them which fit together in a\\nsort of star pattern as follows:\\n\\nWord 1 fits diagonally downwards from left to right. Its 1st letter is\\nthe last letter of word 5; 3rd letter the 5th of word 3;last letter the\\nlast letter of word 4.\\n\\nWord 2 fits diagonally downwards\",\"tags\":[\"algorithms\",\"loops\",\"strings\"],\"timestamp\":{\"$date\":1590445806484},\"title\":\"Fit the Words Together\",\"quality\":0,\"family\":[{\"_id\":\"vjkRfBeJtmisqmY99\",\"language\":\"python3\"}]}}"]