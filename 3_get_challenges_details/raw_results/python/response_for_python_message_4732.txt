a["{\"msg\":\"result\",\"id\":\"1082\",\"result\":{\"_id\":\"9CdF5hA7jRARpBwcF\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"def map_letters(word):\\n\\t\",\"difficulty\":1.5684931506849316,\"familyId\":\"FRC6PyZiPCZqwXLcd\",\"instructions\":\"Given a word, create a dictionary that stores the indexes of each letter in a list.\\n\\n- Make sure the letters are the keys.\\n- Make sure the letters are symbols.\\n- Make sure the indexes are stored in a list and those lists are values.\\n\\n### Examples\\n```\\nmap_letters(\\\"dodo\\\") ➞ { \\\"d\\\": [0, 2], \\\"o\\\": [1, 3] }\\n\\nmap_letters(\\\"froggy\\\") ➞ { \\\"f\\\":  [0], \\\"r\\\": [1], \\\"o\\\": [2], \\\"g\\\": [3, 4], \\\"y\\\": [5] }\\n\\nmap_letters(\\\"grapes\\\") ➞ { \\\"g\\\": [0], \\\"r\\\": [1], \\\"a\\\": [2], \\\"p\\\": [3], \\\"e\\\": [4], \\\"s\\\": [5] }\\n```\\n\\n### Notes\\nAll strings given will be lowercase.\",\"isHidden\":false,\"lab\":\"Test.assert_equals(map_letters(\\\"\\\"), {})\\nTest.assert_equals(map_letters(\\\"a\\\"), { \\\"a\\\": [0] })\\nTest.assert_equals(map_letters(\\\"abcdefg\\\"), { \\\"a\\\": [0], \\\"b\\\": [1], \\\"c\\\": [2], \\\"d\\\": [3], \\\"e\\\": [4], \\\"f\\\": [5], \\\"g\\\": [6] })\\nTest.assert_equals(map_letters(\\\"balloon\\\"), { \\\"b\\\": [0], \\\"a\\\": [1], \\\"l\\\": [2, 3], \\\"o\\\": [4, 5], \\\"n\\\": [6] })\\nTest.assert_equals(map_letters(\\\"imagining\\\"), { \\\"i\\\": [0, 4, 6], \\\"m\\\": [1], \\\"a\\\": [2], \\\"g\\\": [3, 8], \\\"n\\\": [5, 7] })\\nTest.assert_equals(map_letters(\\\"mummy\\\"), { \\\"m\\\": [0, 2, 3], \\\"u\\\": [1], \\\"y\\\": [4] })\\nTest.assert_equals(map_letters(\\\"aaaaaaabaaabaaabbb\\\"), { \\\"a\\\": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14], \\\"b\\\": [7, 11, 15, 16, 17] })\",\"language\":\"python3\",\"summary\":\"Given a word, create a dictionary that stores the indexes of each letter in a list.\\n\\nMake sure the letters are the keys.\\nMake sure the letters are symbols.\\nMake sure the indexes are stored in a list and those lists are values.\\n\\nExamples\\nmap_letters(\\\"dodo\\\") ➞ { \\\"d\\\": [0, 2], \\\"o\\\": [1, 3] }\\n\\nmap_letters(\\\"froggy\\\") ➞ { \\\"f\\\":  [0], \\\"r\\\": [1], \\\"o\\\": [2], \\\"g\\\": [3, 4], \\\"y\\\"\",\"tags\":[\"strings\",\"objects\",\"language_fundamentals\",\"loops\"],\"timestamp\":{\"$date\":1573452358708},\"title\":\"Map the Letters in a String\",\"stats\":{\"completed\":{\"total\":176,\"ratings\":[2,2,2,2,2,2,1,2,0,2,2,2,2,0,2,1,2,2,2,2,2,0,2,2,1,2,2,2,3,1,1,1,1,1,2,1,1,1,2,2,0,2,2,2,2,2,2,2,2,1,1,1,0,2,2,0,1,2,0,3,2,2,2,2,1,1,2,2,0,1,2,2,2,1,1,3,3,2,1,0,1,2,2,1,1,2,2,1,2,2,2,2,1,2,2,1,1,1,1,2,2,2,3,2,1,2,3,0,0,1,2,2,0,1,0,5,0,2,0,1,1,1,1,1,3,2,1,2,1,2,2,2,2,2,0,2,2,2,2,1,2,2,2,1,2,3],\"rators\":[\"tAF9Gf6PiGogbZuWs\",\"gb9rvGus2Jv7bjZSs\",\"ySRnygsLwGGsmZhfa\",\"gMJhLdyw3tH7L96X2\",\"fAoLuqbGvHn4w2PHf\",\"HqmxnQJM66Y57twhn\",\"8JyqsSbN2FJXPr3cw\",\"u5u2YpHXiNgzDNJdX\",\"otXtuQygbcYATMZoP\",\"2fxapKr8XGdNeaKi2\",\"PuJDHtAaX6vXeJJTC\",\"jeuoearPPTcGPgXhf\",\"XKi8iZXBCHCaebSHh\",\"Nj6FwgBtAXsaQwsM2\",\"SqZGTR952w2XgymqL\",\"SKabuq5XuhXBugKBa\",\"uSh3aNxzD28jBuhxa\",\"HQxp7NcdvF92G7bYS\",\"K96FwtfDDN5WM4Bb7\",\"PSrcg6fy835R4c5CW\",\"kQH5b8MXJunh84Czq\",\"K3RacTvkWHLfzKF8i\",\"ahWFxnaxt9bXSA4f3\",\"6ShafRStcvew4GfCh\",\"C4QntmkYtB89GNtpd\",\"sdH8GgAopwfNW5CcD\",\"3LiSLdtN58n46NEqg\",\"qJZsi5rhRnWA38FbA\",\"Jqk2uJZZxEv5wZFze\",\"JAe93nc5vNewSckSB\",\"4tgBydK887PitgAoi\",\"tYjQweAK2k8goR4Bq\",\"PTcm3qFvxvLnaKttM\",\"Xj6R2zqhgumffQCAN\",\"zgoEhAyhrjnsSLPGw\",\"ab7BsQuhDo3QgE6bh\",\"BeFnbPbMnAM2SjBdZ\",\"2innwjWqxJHo4eRGh\",\"PXAcsKkssS2yLyDv2\",\"Yp7uvStL97cC9fKkY\",\"QnPD4Sv6W4LHc2Qng\",\"AasGs8AeX9Lcb9xJn\",\"Ycj4iTJGFyvC4bXek\",\"4CFzv558qbGcpQwc4\",\"v3fjGuc7Pq4yjFygS\",\"mxX4rH5ELYkdZ2Mbw\",\"yZvzB3qFb8pkHy4dg\",\"zg8GmMSP2LkHBtAzy\",\"9Ly8afdtofp8DXzrt\",\"hnyhBFWwNCz9mDfSi\",\"cR3ibTMxLyEdDFCHY\",\"aRqQ42J5zqCmBNd8w\",\"vLrq4dEDMM2wd68Dc\",\"dHZqT6h4JMwk5fPC8\",\"TyEeGAgsF7tG3fubX\",\"WKwiYrZohzQmytYzL\",\"uw8E83imJYpQiiPpP\",\"8PwfYqoDQFThzNtvf\",\"jNvegJWCk5HCtEMbK\",\"ZNnsMeNkdDhHjSrZb\",\"aEm3Wvj2rFYRL8Lrb\",\"gJYuGdkXEWWmGRLzu\",\"kYWb8BwpKwunQkxeX\",\"2QGRoQn2dRq3scu7k\",\"HF28xZKSLM9wEuqNg\",\"DEDniTrstQYGounXT\",\"hab8YixsXxe4CcZpP\",\"gSFJPsMXnqAog3Q9f\",\"KdNDysEsy2TW5QRJ2\",\"s5M5RvgqR9BhB9JoC\",\"9pzFiFK3ANLjQfnr2\",\"MKJhn7goNzuGtB5y9\",\"8LfTheFzvicameoz9\",\"nfXGHENb5md7m355s\",\"ahk2qiXKJA753wAJk\",\"9bQyb6rW7xfE4vgrR\",\"Tb2m9eGdTuSG8RbyD\",\"Nua6T3dBurBy3Qfg9\",\"yr822PZmmiDDenxpB\",\"Wv2vJnEj8ywNmARoF\",\"XrqNzJ2FRG8HnGiR6\",\"MKT7khMBGXzA22ykf\",\"r9Xc47NnWFvz3tv7N\",\"a777e8chPvJkY3tKa\",\"H4abACFDH5t8CnnyH\",\"2ptN2mhjFwFcHyPZd\",\"ZrKCkX7xxGGZzauFW\",\"syRNbbPdLCGXbH2Gy\",\"iojEnnY9FsMfYzp6f\",\"JS3hNM3XXkxPdg3yk\",\"Pe8vWpDHRuH9nSGKW\",\"yjtdwc2AC4jA2RWtn\",\"FEYpu9RWysAgW3XnP\",\"X5MqeHyPh6cSQCXnk\",\"BBk8ZRmMsTzpKCaux\",\"oBcs8GLX2ZFLXQy8y\",\"YcCLwitFMAEJSnxAW\",\"w2HhxvSLmDhaGCAjE\",\"mG8HqKiAQFTdRZthG\",\"tpxMgkGSHwBjS95Ta\",\"DYDJTyGgKFnBRLm2r\",\"gXTAie79kiw28tx5u\",\"p8qqFdJ3FSk5x9z3G\",\"KLmLKaJPfsYxp42p2\",\"QRv96jmNaYsWkxQEG\",\"DPi9QGLctq2y76KuE\",\"J3upzLHuEwXH7Z2hx\",\"dYPkStFnLvAMsHSzZ\",\"iS5BrkGLzJyPK7nKt\",\"5XiuAqicKD4hBdu63\",\"KJCDwGkoXh8qtbbKr\",\"cAP3n5NY64uoMwzRR\",\"RGMbFMZXJr7DhcAJy\",\"zd9FLSzsGz3evKafy\",\"dBzwBtRjZqB98DJeB\",\"t5sZF4aR7a28Bm56W\",\"22kSvGZ9z9J2KK8nc\",\"9MER8SZ9Xo6xNYMj8\",\"d8qtzoLB264iP8tdY\",\"5HCu9Ydd86QgHDRNP\",\"eMuCpJ2spXWkJjWNz\",\"J5T8gZqiZXFuFDTQ7\",\"5hQnRWiKkhgKJXNMP\",\"5S9nX4rKsnCcnv4Cz\",\"eYfPWvZwnJQkHbSTK\",\"GGdmhAvxXhqhhibJN\",\"wRttWTM59y8m5mx7x\",\"e7QB5tCAeoSeRCTxY\",\"Ds7L5bksw2QRHjrKL\",\"T2vhHPhRR96hRizq8\",\"sHjfbGQGLHE6JR6qu\",\"qAby4AWXmTNeusvg3\",\"CHvzhtXnv8HTbPQ56\",\"o4ixjQGSaYqA2JoM4\",\"BdnE4RS5puoxo92mA\",\"srJ34BaybkQh3qRkM\",\"T6iBEE2jp7f7iEF2P\",\"66a9xX73nmTEuKs9k\",\"PC3pLs36zNzpRDSuE\",\"ey3CASd6Je5LEJzfB\",\"yod5YhKtPqw2GfG9B\",\"eHcgvkTGsH7ZziqBo\",\"3cF6NXq3ZEwdkgSjb\",\"mvJBakQ35CWAnbbEZ\",\"8BFSTCnoe2QggN64c\",\"BrTDhPJcACL2bsrpJ\",\"sbJcFfQjQ59Wfg4Cd\",\"EfxwqhYdapX3dMQC2\",\"XD5nmvKQchKezPXhy\",\"2PufnQcsHsfymufX3\",\"T6Rm8mREPMZSftzrC\",\"dzS6WBTMHyFEag6Fp\",\"4Lwjr34ypKNQNQCar\",\"d9LBRxvADNBB5QJMB\",\"4TmgHkn5vqyHK3sYC\",\"xqoisFmSjeDeAhuXF\",\"pduNK68oazqQTtbLp\",\"suArq5BbSy7gD6xri\",\"Nsnt7WJuREHjzZmjE\",\"yAouD3PxzED8a4gap\",\"ekbfbYdyZeXHvaG8c\",\"AFfw7cGg83uYk2Miy\",\"X4rzfxGgxx6CS7Bpz\"],\"quality\":[4,5,4,3,5,3,5,4,4,5,4,5,5,5,4,5,5,5,4,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":4.5,\"family\":[{\"_id\":\"Bd2jQS9xA6QecB34h\",\"language\":\"javascript\"},{\"_id\":\"tPwEv6cBu98TTom6q\",\"language\":\"php\"},{\"_id\":\"9CdF5hA7jRARpBwcF\",\"language\":\"python3\"},{\"_id\":\"YefXvuZHXLytHeRRR\",\"language\":\"ruby\"}]}}"]