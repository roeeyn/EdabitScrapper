a["{\"msg\":\"result\",\"id\":\"1720\",\"result\":{\"_id\":\"57oGnnqP5sxW2KHi4\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"def invert(lst):\\n\\t\",\"difficulty\":2.196078431372549,\"familyId\":\"nC8hYs5gwPxuD6mMT\",\"instructions\":\"Images can be described as a 3D list.\\n\\n```\\n# This image has only one white pixel:\\n\\n[\\n  [[255, 255, 255]]\\n]\\n```\\n\\n```\\n# This one is a 2 by 2 black image:\\n\\n[\\n  [[0, 0, 0], [0, 0, 0]],\\n  [[0, 0, 0], [0, 0, 0]]\\n]\\n```\\n\\nYour task is to create a function that takes a 3D list representation of an image and returns the inverse of that.\\n\\nFor example, white becomes black, black becomes white, etc.\\n\\n### Examples\\n```\\ninvert([\\n  [[255, 255, 255], [255, 255, 255]],\\n  [[255, 255, 255], [255, 255, 255]]\\n]) âžž [\\n  [[0, 0, 0], [0, 0, 0]],\\n  [[0, 0, 0], [0, 0, 0]]\\n]\\n```\\n\\n### Notes\\n- A valid RGB value ranges from 0 to 255 (inclusive).\\n- If the given list contains out of bound values, convert them to the nearest valid one.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(invert([\\n\\t[[255,255,255], [255,255,255]],\\n\\t[[255,255,255], [255,255,255]]\\n]), [\\n\\t[[0,0,0], [0,0,0]],\\n\\t[[0,0,0], [0,0,0]]\\n])\\n\\nTest.assert_equals(invert([\\n\\t[[0,0,0], [0,0,0], [0,0,0]],\\n\\t[[0,0,0], [0,0,0], [0,0,0]],\\n\\t[[0,0,0], [0,0,0], [0,0,0]]\\n]), [\\n\\t[[255,255,255], [255,255,255], [255,255,255]],\\n\\t[[255,255,255], [255,255,255], [255,255,255]],\\n\\t[[255,255,255], [255,255,255], [255,255,255]]\\n])\\n\\nTest.assert_equals(invert([\\n\\t[[0,0,255], [0,0,0], [0,0,157], [100,229,4]],\\n\\t[[100,0,3], [1,100,0], [0,10,0], [0,168,0]],\\n\\t[[16,30,0], [0,125,0], [15,0,9], [0,139,0]],\\n\\t[[200,2,0], [0,125,0], [0,0,9], [0,200,0]]\\n]), [\\n\\t[[255,255,0], [255,255,255], [255,255,98], [155,26,251]],\\n\\t[[155,255,252], [254,155,255], [255,245,255], [255,87,255]],\\n\\t[[239,225,255], [255,130,255], [240,255,246], [255,116,255]],\\n\\t[[55,253,255], [255,130,255], [255,255,246], [255,55,255]]\\n])\\n\\nTest.assert_equals(invert([\\n\\t[[0,255,255], [256,255,255]],\\n\\t[[255,-1,255], [255,255,255]]\\n]), [\\n\\t[[255,0,0], [0,0,0]],\\n\\t[[0,255,0], [0,0,0]]\\n])\",\"language\":\"python3\",\"quality\":4.714285714285714,\"summary\":\"Images can be described as a 3D list.\\n\\nThis image has only one white pixel:\\n\\n[\\n  [[255, 255, 255]]\\n]\\n\\nThis one is a 2 by 2 black image:\\n\\n[\\n  [[0, 0, 0], [0, 0, 0]],\\n  [[0, 0, 0], [0, 0, 0]]\\n]\\n\\nYour task is to create a function that takes a 3D list representation of an image and returns the inverse of that.\\n\\nFor example, white becomes black, black becomes white\",\"tags\":[\"arrays\",\"loops\",\"logic\",\"data_structures\"],\"timestamp\":{\"$date\":1602366693968},\"title\":\"Image Manipulation: Invert (Part 1)\",\"stats\":{\"completed\":{\"total\":57,\"ratings\":[3,3,3,3,3,5,5,3,5,1,4,5,3,3,1,2,2,1,0,1,1,2,0,4,1,0,4,2,0,0,3,1,1,3,1,3,2,2,0,0,0,5,3,0,1,4,2,2,3,3,3],\"quality\":[5,4,5,5,4,5,5],\"rators\":[\"tAF9Gf6PiGogbZuWs\",\"9FCeFzjPA4jrQ7oHW\",\"KZ2xddpM2f9JRaryB\",\"8PwfYqoDQFThzNtvf\",\"aEm3Wvj2rFYRL8Lrb\",\"s5M5RvgqR9BhB9JoC\",\"5dHucvf2qBYyKim7X\",\"4fhjJBvLBWh6QeSih\",\"mDWNyaaQ9hvPCRzSd\",\"QRv96jmNaYsWkxQEG\",\"h4x2jaMdj5aQZbW5g\",\"8JyqsSbN2FJXPr3cw\",\"hRAd998MG8Jzdpxj6\",\"SbGLSZ5piLATC8bop\",\"xoEMkaCmtm9iEFhdJ\",\"8sNv5PTHa7XQ8bNqR\",\"HF28xZKSLM9wEuqNg\",\"afGhZGqYxdcoNr8RQ\",\"J3upzLHuEwXH7Z2hx\",\"gb9rvGus2Jv7bjZSs\",\"Tg24gZyPmk8uDXcBY\",\"no46qNkTbNeHepe64\",\"p8qqFdJ3FSk5x9z3G\",\"axdSNLZpiCDF8RS6n\",\"XSkjLdTqCovQGvNqs\",\"Yp7uvStL97cC9fKkY\",\"iS5BrkGLzJyPK7nKt\",\"d8qtzoLB264iP8tdY\",\"Jqk2uJZZxEv5wZFze\",\"PytNZK9mNiRiZxPrm\",\"iojEnnY9FsMfYzp6f\",\"BrTDhPJcACL2bsrpJ\",\"gJYuGdkXEWWmGRLzu\",\"XHShZ3WMPgGEA2vkR\",\"yjtdwc2AC4jA2RWtn\",\"Wpn95NqWxncQrwNgz\",\"oBcs8GLX2ZFLXQy8y\",\"xn7uGNKeAwPEkP9oA\",\"AasGs8AeX9Lcb9xJn\",\"cR3ibTMxLyEdDFCHY\",\"HqmxnQJM66Y57twhn\",\"GGdmhAvxXhqhhibJN\",\"PH32cNxBjrK4a28sn\",\"J5T8gZqiZXFuFDTQ7\",\"2NDSt8HyP33cFRHsu\",\"gKnWjDjwrJh7MK2df\",\"T6iBEE2jp7f7iEF2P\",\"nK9jQQDPdjHaHeQvG\",\"BdnE4RS5puoxo92mA\",\"yod5YhKtPqw2GfG9B\",\"PXAcsKkssS2yLyDv2\",\"2PufnQcsHsfymufX3\",\"4Lwjr34ypKNQNQCar\"]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"6YfWWLSQyPJwz2Srg\",\"language\":\"javascript\"},{\"_id\":\"57oGnnqP5sxW2KHi4\",\"language\":\"python3\"},{\"_id\":\"L6f5StWWro75d8k4P\",\"language\":\"ruby\"}]}}"]