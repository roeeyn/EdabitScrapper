a["{\"msg\":\"result\",\"id\":\"1520\",\"result\":{\"_id\":\"rRKbaDKxzBhaLAFJZ\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"def is_uban(num):\\n\\t\",\"difficulty\":2.0795454545454546,\"familyId\":\"KvQ2TSqSwWbMa86Qp\",\"instructions\":\"A number `n` is called uban if its name (in English) does not contain the letter \\\"u\\\". In particular, it cannot contain the terms \\\"four\\\", \\\"hundred\\\", and \\\"thousand\\\", so the uban number following 99 is 1,000,000.\\n\\nWrite a function to determine if the given integer is uban.\\n\\n### Examples\\n```\\nis_uban(456) ➞ False\\n\\nis_uban(25) ➞ True\\n\\nis_uban(1098) ➞ False\\n```\\n\\n### Notes\\nN/A\",\"isHidden\":false,\"lab\":\"Test.assert_equals(is_uban(0), True)\\nTest.assert_equals(is_uban(24), False)\\nTest.assert_equals(is_uban(223), False)\\nTest.assert_equals(is_uban(2051), False)\\nTest.assert_equals(is_uban(627), False)\\nTest.assert_equals(is_uban(6258), False)\\nTest.assert_equals(is_uban(12), True)\\nTest.assert_equals(is_uban(202), False)\\nTest.assert_equals(is_uban(98), True)\\nTest.assert_equals(is_uban(6592), False)\\nTest.assert_equals(is_uban(393), False)\\nTest.assert_equals(is_uban(1000096), True)\\nTest.assert_equals(is_uban(40), True)\\n\\n# By Harith Shah\",\"language\":\"python3\",\"summary\":\"A number n is called uban if its name (in English) does not contain the letter \\\"u\\\". In particular, it cannot contain the terms \\\"four\\\", \\\"hundred\\\", and \\\"thousand\\\", so the uban number following 99 is 1,000,000.\\n\\nExamples\\nis_uban(456) ➞ False\\n\\nis_uban(25) ➞ True\\n\\nis_uban(1098) ➞ False\\n\\nNotes\\nN/A\",\"tags\":[\"math\",\"numbers\",\"strings\",\"validation\"],\"timestamp\":{\"$date\":1582178855149},\"title\":\"Uban Numbers\",\"stats\":{\"completed\":{\"total\":112,\"ratings\":[2,2,2,2,2,1,2,3,2,2,2,2,3,3,2,3,2,1,3,1,2,2,1,3,1,3,1,2,1,5,2,3,3,2,2,3,3,0,3,2,3,3,0,2,2,3,0,0,2,2,3,0,3,2,2,3,4,2,3,3,0,2,1,3,0,3,1,2,0,2,1,2,3,2,3,1,0,3,3,2,2,3,2,1,3,3,3,4],\"rators\":[\"QnPD4Sv6W4LHc2Qng\",\"Q2q7wd5e5cfCrwPxq\",\"5uM28JoCcQA6kHP9X\",\"AasGs8AeX9Lcb9xJn\",\"C4QntmkYtB89GNtpd\",\"s5M5RvgqR9BhB9JoC\",\"gb9rvGus2Jv7bjZSs\",\"tAF9Gf6PiGogbZuWs\",\"XsYhWtDMoky3nAhjd\",\"ASZk6eFeYMj5pitoe\",\"kQH5b8MXJunh84Czq\",\"yZvzB3qFb8pkHy4dg\",\"2fxapKr8XGdNeaKi2\",\"8PwfYqoDQFThzNtvf\",\"etqttMtgx2DW3HJ2Q\",\"8JyqsSbN2FJXPr3cw\",\"4CFzv558qbGcpQwc4\",\"SZzetJ7Z6R6rSyFJF\",\"pmgFEciNrd3ES9tuu\",\"jpiYk9LbC3oDg84dz\",\"aEm3Wvj2rFYRL8Lrb\",\"mDWNyaaQ9hvPCRzSd\",\"aCNWav8S8Try9RkC6\",\"ydEdzuCCZt4yny9Rq\",\"J5T8gZqiZXFuFDTQ7\",\"ZNnsMeNkdDhHjSrZb\",\"kYWb8BwpKwunQkxeX\",\"EjbDDFRECrzQDkzrX\",\"a777e8chPvJkY3tKa\",\"YRstQuthRkFeBiXug\",\"gJYuGdkXEWWmGRLzu\",\"Nb6LYPoQP6KJZt8mz\",\"v9KtC8YLbMWmXiW2H\",\"n2BRY9X8899dcG8Bw\",\"x4dfavjLEcrvAF3QQ\",\"iojEnnY9FsMfYzp6f\",\"KZ2xddpM2f9JRaryB\",\"HqmxnQJM66Y57twhn\",\"zZDaXBxMzTCBhNkgL\",\"sX9GZp3fYyQLrBKMJ\",\"DEDniTrstQYGounXT\",\"yjtdwc2AC4jA2RWtn\",\"hRiMXDZNAzyPd5tpt\",\"DrkR35NqnP9NDLbq6\",\"P7NmFbCJ5offXMRvB\",\"GGprTwrkjuccmrQRg\",\"qD2LrwaDrSdiybLKY\",\"xwEZk3bNZoNDPJYF5\",\"dkcmCKwqApX5jBggc\",\"QRv96jmNaYsWkxQEG\",\"DPi9QGLctq2y76KuE\",\"xn7uGNKeAwPEkP9oA\",\"kXEfD7xxEyWd7oxxL\",\"6MjSiiBLPcvXbXcaZ\",\"dYPkStFnLvAMsHSzZ\",\"J3upzLHuEwXH7Z2hx\",\"gXTAie79kiw28tx5u\",\"oBcs8GLX2ZFLXQy8y\",\"9onLFjwWr6DqyRBJw\",\"7scpcTEp3SEx5Wjg9\",\"Yp7uvStL97cC9fKkY\",\"R29kgJ9M7R4qqwjcE\",\"Wv2vJnEj8ywNmARoF\",\"9Hp6Z83SwWxMQRouq\",\"iS5BrkGLzJyPK7nKt\",\"fHeYpHLgzDPqcoDh6\",\"6CwAoD3ZucCD4Zfne\",\"Jqk2uJZZxEv5wZFze\",\"cAP3n5NY64uoMwzRR\",\"hnyhBFWwNCz9mDfSi\",\"buX4mCQhtXCfBjeno\",\"GTKsdeEihE636Le9i\",\"GGdmhAvxXhqhhibJN\",\"eHcgvkTGsH7ZziqBo\",\"PWgzeK859suojbrRx\",\"rfyEkETeoS96QNH4e\",\"H9KZi2cjt4FwH7qog\",\"2PufnQcsHsfymufX3\",\"CHvzhtXnv8HTbPQ56\",\"8BFSTCnoe2QggN64c\",\"fznzd3qnvtbFkkizz\",\"EfxwqhYdapX3dMQC2\",\"gKnWjDjwrJh7MK2df\",\"o4ixjQGSaYqA2JoM4\",\"T6iBEE2jp7f7iEF2P\",\"4RY3zj9C2t8GGefhi\",\"RoGGD5cpHb4ftdLDv\",\"4Lwjr34ypKNQNQCar\",\"yod5YhKtPqw2GfG9B\",\"8sNv5PTHa7XQ8bNqR\",\"5HCu9Ydd86QgHDRNP\",\"AQSqD9oNv2uPfxZCR\",\"Ds7L5bksw2QRHjrKL\",\"3KkyQm77zsew58Dc2\",\"qZQxPQ2kaNKAMesHT\",\"Qyfyyw6oC4EHAndzo\",\"JhX7jvtpwNyxcc39m\",\"BrTDhPJcACL2bsrpJ\",\"jkbavR2ATFJcpmo8M\",\"9ivvGvJGvtQfigQaZ\",\"h96caAS2Whbje6Lw3\",\"9pzFiFK3ANLjQfnr2\"],\"quality\":[4,5,5,5,3,5,5,5,4,4,5,5,5,5,5,5,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"quality\":4.7368421052631575,\"family\":[{\"_id\":\"CGeWjXHkKJAMG34rp\",\"language\":\"cpp\"},{\"_id\":\"v2wstc4QEfiyXK6D5\",\"language\":\"csharp\"},{\"_id\":\"GZkdz9WEeHSBy2ScE\",\"language\":\"javascript\"},{\"_id\":\"KL58hZxcgaYQM4yhB\",\"language\":\"php\"},{\"_id\":\"rRKbaDKxzBhaLAFJZ\",\"language\":\"python3\"},{\"_id\":\"ziGGSLBSbuHXWeraw\",\"language\":\"ruby\"},{\"_id\":\"bgiYZqpYuGEuvBWm9\",\"language\":\"swift\"}]}}"]