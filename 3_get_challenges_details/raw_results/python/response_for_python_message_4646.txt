a["{\"msg\":\"result\",\"id\":\"1039\",\"result\":{\"_id\":\"mwicBKcq3gTGhsGsW\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"def make_word_riddle(s):\\n\\t\",\"difficulty\":1.5333333333333334,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"hgbhe2E28KT9iNBe3\",\"instructions\":\"What does the word **LFAND** represent? It represents the word **Finland**, because F is *in*  LAND!\\n\\nCreate a function which replicates this to create brand new original word riddles! For the purposes of this challenge, take the string of letters *before the word \\\"in\\\"*, and insert it into the **2nd letter position** of the word formed *after the word \\\"in\\\"*.\\n\\nSee the examples below for further clarity :)\\n\\n### Examples\\n```\\nmake_word_riddle(\\\"Finland\\\") ➞ \\\"LFAND\\\"\\n\\nmake_word_riddle(\\\"dinner\\\") ➞ \\\"NDER\\\"\\n\\nmake_word_riddle(\\\"tkinter\\\") ➞ \\\"TTKER\\\"\\n\\nmake_word_riddle(\\\"STRINGS\\\") ➞ \\\"GSTRS\\\"\\n```\\n\\n### Notes\\n- All words given will contain only one occurence of \\\"in\\\" (so no occurences of the words *Insulin*, *Infinity*, etc).\\n- There will be no examples of *Interest*, *Pin*, or *Ping*, etc... as there is no clear way to insert the strings into one another.\\n- Return in all **CAPS**.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(make_word_riddle('Finland'), 'LFAND')\\nTest.assert_equals(make_word_riddle('dinner'), 'NDER')\\nTest.assert_equals(make_word_riddle('tkinter'), 'TTKER')\\nTest.assert_equals(make_word_riddle('STRINGS'), 'GSTRS')\\nTest.assert_equals(make_word_riddle('continue'), 'UCONTE')\\nTest.assert_equals(make_word_riddle('cinematographer'), 'ECMATOGRAPHER')\\nTest.assert_equals(make_word_riddle('distinguishable'), 'GDISTUISHABLE')\\nTest.assert_equals(make_word_riddle('Determination'), 'ADETERMTION')\\nTest.assert_equals(make_word_riddle('plainclothesman'), 'CPLALOTHESMAN')\\nTest.assert_equals(make_word_riddle('attainablities'), 'AATTABLITIES')\\nTest.assert_equals(make_word_riddle('administrations'), 'IADMSTRATIONS')\\nTest.assert_equals(make_word_riddle('chloestyramines'), 'ECHLOESTYRAMS')\\nTest.assert_equals(make_word_riddle('bituminizations'), 'IBITUMZATIONS')\\nTest.assert_equals(make_word_riddle('metalinguistics'), 'GMETALUISTICS')\\nTest.assert_equals(make_word_riddle('choriocarcinoma'), 'OCHORIOCARCMA')\\nTest.assert_equals(make_word_riddle('trinitrotoluene'), 'ITRTROTOLUENE')\\nTest.assert_equals(make_word_riddle('provINcial'), 'CPROVIAL')\\nTest.assert_equals(make_word_riddle('SlingShot'), 'GSLSHOT')\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,1,1,2,0,2,1,1,1,1,1,2,0,2,1,0,2,1,1,2,1,1,2,0,2,3,2,2,0,2,2,2,2,1,0,1,1,2,2,2,2,2,1,2,1,2,2,1,2,2,2,1,2,1,2,5,2,2,1,1,1,2,3,2,2,2,1,2,0,1,2,2,2,5,2,2,2,2,2,2,2,1,2,2,1,0,1,1,2,3,2,2,1,2,1,3,2,2,0,1,2,1,0,1,2,1,2,2,1,2,1,2,0,1,2,1,1,0,0,2,2,1,1,2,2,2,0,2,2,2,2,2,2,2,2,0,2,2,1,2,2,2,2,1,1,2],\"rators\":[\"PXAcsKkssS2yLyDv2\",\"tAF9Gf6PiGogbZuWs\",\"8JyqsSbN2FJXPr3cw\",\"aEm3Wvj2rFYRL8Lrb\",\"ZNnsMeNkdDhHjSrZb\",\"Yp7uvStL97cC9fKkY\",\"mtRvHDpeLoSGBf8zC\",\"gb9rvGus2Jv7bjZSs\",\"veAhgEKubmGCuoCyh\",\"8BFSTCnoe2QggN64c\",\"gJYuGdkXEWWmGRLzu\",\"2fxapKr8XGdNeaKi2\",\"ZNhaT9nRSRCB6Kdiq\",\"DEDniTrstQYGounXT\",\"4rwxLqLs2mNZNg8NB\",\"KdNDysEsy2TW5QRJ2\",\"NNE5HNRXAkmhrWgyQ\",\"Zvu2nty8qKdBDBvM4\",\"AasGs8AeX9Lcb9xJn\",\"N7P4AnS8nzK4oupHv\",\"XrqNzJ2FRG8HnGiR6\",\"MKT7khMBGXzA22ykf\",\"aRqQ42J5zqCmBNd8w\",\"uH4HvaiESNCeYdSyZ\",\"uiEuENARwFpnNMfFs\",\"pufcWLGPAW92RseGN\",\"nDxmR2RhE5FaPmX6D\",\"ukMGNti4cKTJBZqsg\",\"efcsSdKgupNnf9DKD\",\"NjyP2u2anqHEahb2j\",\"8LfTheFzvicameoz9\",\"TktzhJLKSjvrXntJa\",\"FEYpu9RWysAgW3XnP\",\"8J2Dqqz9PaFufQzwY\",\"HF28xZKSLM9wEuqNg\",\"odhwHrfwJvNxcrBCt\",\"Kdq8A2akx8JFqaZhv\",\"m44FJpiqoQBeeiaSq\",\"zwnrLPPgr5KdBq3ZJ\",\"3xMGAo7DPjfFyb3iw\",\"zChStAhRfotvGC6C5\",\"GM2X83qnuLXTHe5zA\",\"8PwfYqoDQFThzNtvf\",\"7m8s7cADBu3XwGpxw\",\"FMTrSDsEsWt2GYALz\",\"n2BRY9X8899dcG8Bw\",\"YsAz93yZw8KKPupKv\",\"hnyhBFWwNCz9mDfSi\",\"7fWotxAEJ2uYdQhNR\",\"tSFYadMLQgCqx3mnM\",\"cR3ibTMxLyEdDFCHY\",\"dHZqT6h4JMwk5fPC8\",\"s5M5RvgqR9BhB9JoC\",\"jBR47vA7HwAZqp4QA\",\"J5T8gZqiZXFuFDTQ7\",\"9pzFiFK3ANLjQfnr2\",\"Ro3ppqamSxiJv2wxP\",\"yZvzB3qFb8pkHy4dg\",\"ynD2APTJiL7gZzMBT\",\"GNLCnfuyXcwFLKBAF\",\"DwetpbChQM4r6Gwah\",\"kYWb8BwpKwunQkxeX\",\"sz8ufn9i8zeiGWpAy\",\"rgvAJFwfCeYoYnFTK\",\"nfXGHENb5md7m355s\",\"2QGRoQn2dRq3scu7k\",\"ENsSYogEHHeDSrFod\",\"ahk2qiXKJA753wAJk\",\"yr822PZmmiDDenxpB\",\"DrkR35NqnP9NDLbq6\",\"So6PHm74mfJuY2WTs\",\"a777e8chPvJkY3tKa\",\"ACEZh39brWjdGkZXb\",\"4yNLEwL2rsx4EE5Nt\",\"H4abACFDH5t8CnnyH\",\"uB5RxNoYuh5ydriRJ\",\"2ptN2mhjFwFcHyPZd\",\"ZrKCkX7xxGGZzauFW\",\"Do6Zvo5NDKQmv9a9g\",\"NG8PWBSjsM8mMhQEq\",\"syRNbbPdLCGXbH2Gy\",\"iojEnnY9FsMfYzp6f\",\"Pe8vWpDHRuH9nSGKW\",\"yjtdwc2AC4jA2RWtn\",\"HqmxnQJM66Y57twhn\",\"gSFJPsMXnqAog3Q9f\",\"YA7SDhpgEtsqynvNL\",\"oBcs8GLX2ZFLXQy8y\",\"w2HhxvSLmDhaGCAjE\",\"YcCLwitFMAEJSnxAW\",\"j49s8dHmmiyPxZmWj\",\"mxX4rH5ELYkdZ2Mbw\",\"mG8HqKiAQFTdRZthG\",\"tpxMgkGSHwBjS95Ta\",\"KLmLKaJPfsYxp42p2\",\"gXTAie79kiw28tx5u\",\"JS3hNM3XXkxPdg3yk\",\"QRv96jmNaYsWkxQEG\",\"Ecg4m7srYGgZsb4Ck\",\"DPi9QGLctq2y76KuE\",\"iS5BrkGLzJyPK7nKt\",\"J3upzLHuEwXH7Z2hx\",\"dYPkStFnLvAMsHSzZ\",\"Wv2vJnEj8ywNmARoF\",\"CTKmXtrqDYqJBnuy8\",\"cAP3n5NY64uoMwzRR\",\"5XiuAqicKD4hBdu63\",\"shdSrDq5ZKqfpgjmu\",\"KJCDwGkoXh8qtbbKr\",\"RGMbFMZXJr7DhcAJy\",\"rfyEkETeoS96QNH4e\",\"zd9FLSzsGz3evKafy\",\"dBzwBtRjZqB98DJeB\",\"t5sZF4aR7a28Bm56W\",\"uCHbRbvS32u77caPs\",\"XXPzK5QGZTWYvEbsX\",\"Jqk2uJZZxEv5wZFze\",\"5HCu9Ydd86QgHDRNP\",\"cZccqzRQ9GgjQF6Az\",\"d8qtzoLB264iP8tdY\",\"HuNF3xTBzmatyGSTm\",\"buX4mCQhtXCfBjeno\",\"wRttWTM59y8m5mx7x\",\"5hQnRWiKkhgKJXNMP\",\"3nied3n8KG8RSNixH\",\"R4SjTgDnpigJYDLyL\",\"5S9nX4rKsnCcnv4Cz\",\"hzHsgwjark5sZCQ2c\",\"qZQxPQ2kaNKAMesHT\",\"GGdmhAvxXhqhhibJN\",\"eYfPWvZwnJQkHbSTK\",\"Ds7L5bksw2QRHjrKL\",\"sHjfbGQGLHE6JR6qu\",\"o4ixjQGSaYqA2JoM4\",\"3cF6NXq3ZEwdkgSjb\",\"T6iBEE2jp7f7iEF2P\",\"EfxwqhYdapX3dMQC2\",\"eMuCpJ2spXWkJjWNz\",\"66a9xX73nmTEuKs9k\",\"PC3pLs36zNzpRDSuE\",\"CHvzhtXnv8HTbPQ56\",\"ey3CASd6Je5LEJzfB\",\"yod5YhKtPqw2GfG9B\",\"BrTDhPJcACL2bsrpJ\",\"mvJBakQ35CWAnbbEZ\",\"oHoASrfzYgtdAGCsa\",\"rrSC943cCKNG48sH4\",\"LQxof8pGabGuWP7Gn\",\"w67KfQgZ6WAeY7K4Y\",\"srJ34BaybkQh3qRkM\",\"AJexRBN9cYQmqvYu6\",\"qzXAMXsHZGT8o5hTA\",\"RoGGD5cpHb4ftdLDv\",\"2PufnQcsHsfymufX3\",\"AFfw7cGg83uYk2Miy\",\"9bQyb6rW7xfE4vgrR\",\"JhX7jvtpwNyxcc39m\",\"Cc2Cgj4MWXZxsTooC\",\"4TmgHkn5vqyHK3sYC\",\"GpcgG83pcbNHSvRzF\",\"dzS6WBTMHyFEag6Fp\",\"d9LBRxvADNBB5QJMB\",\"4Lwjr34ypKNQNQCar\",\"pduNK68oazqQTtbLp\",\"wjc4iejpErBhxWwHo\",\"u5u2YpHXiNgzDNJdX\",\"NzbRqGWspQnWMoDrF\",\"yAouD3PxzED8a4gap\",\"5QN8R22z43SrwoHDz\",\"Wi4H6ayKsNDWWQCG5\",\"rCrbqMiaGPgHYTNxu\"],\"total\":186,\"quality\":[4,5,5,5,3,5,5,5,5,5,4,5,5,4,5,5,5,5,5,5,4,5,5,5,5,1]},\"flags\":0},\"summary\":\"What does the word LFAND represent? It represents the word Finland, because F is in  LAND!\\n\\nCreate a function which replicates this to create brand new original word riddles! For the purposes of this challenge, take the string of letters before the word \\\"in\\\", and insert it into the 2nd letter position of the word formed after the word \\\"in\\\".\\n\\nSee the examples b\",\"tags\":[\"strings\",\"language_fundamentals\"],\"timestamp\":{\"$date\":1588339948014},\"title\":\"Word Riddles\",\"quality\":4.615384615384615,\"family\":[{\"_id\":\"P5usPtn7RHmYSrYmQ\",\"language\":\"cpp\"},{\"_id\":\"Nz7ZmEeMFZ6GznPex\",\"language\":\"javascript\"},{\"_id\":\"mwicBKcq3gTGhsGsW\",\"language\":\"python3\"},{\"_id\":\"gH8tCSC9Kyi5svfq6\",\"language\":\"ruby\"}]}}"]