a["{\"msg\":\"result\",\"id\":\"1052\",\"result\":{\"_id\":\"pDmDP9KhXmBTcScT6\",\"author\":\"Jerry Sun\",\"authorId\":\"n2BRY9X8899dcG8Bw\",\"code\":\"def get_name(address):\\n\\t\",\"difficulty\":1.5542168674698795,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"9caHwh9rKJahGvHTp\",\"instructions\":\"Create a function that takes an email address and returns the name in the address.\\n\\n- The \\\"name\\\" is the **letters/alphabetical characters** before the @ in the address.\\n- The \\\"name\\\" will not always be an actual name.\\n- Email addresses will end in something like `@domain.com`\\n\\n### Examples\\n```\\nget_name(\\\"yourname@example.com\\\") ➞ \\\"yourname\\\"\\n\\nget_name(\\\"john64@gmail.com\\\") ➞ \\\"john\\\"\\n\\nget_name(\\\"pamela78_Cole@hotmail.com\\\") ➞ \\\"pamelaCole\\\"\\n\\nget_name(\\\"Chickenlololol29@yahoo.com\\\") ➞ \\\"Chickenlololol\\\"\\n```\\n\\n### Notes\\n- Keep the original capitalization in the email address.\\n- All email addresses are purely made-up. It is a coincidence if any of the test email addresses actually exists.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(get_name(\\\"yourname@example.com\\\"), \\\"yourname\\\", \\\"Example 1\\\")\\nTest.assert_equals(get_name(\\\"john64@gmail.com\\\"), \\\"john\\\", \\\"Example 2\\\")\\nTest.assert_equals(get_name(\\\"pamela78_Cole@hotmail.com\\\"), \\\"pamelaCole\\\", \\\"Example 3\\\")\\nTest.assert_equals(get_name(\\\"Chickenlololol29@yahoo.com\\\"), \\\"Chickenlololol\\\", \\\"Example 4\\\")\\nTest.assert_equals(get_name(\\\"a872894972Bigbear@whateverdomain.xyz\\\"), \\\"aBigbear\\\")\\nTest.assert_equals(get_name(\\\"python$#$\\\\\\\"_guy@overtherainbow.net\\\"), \\\"pythonguy\\\")\\nTest.assert_equals(get_name(\\\"Mr.President2050@USofA.gov\\\"), \\\"MrPresident\\\")\\nTest.assert_equals(get_name(\\\"z50@python.com\\\"), \\\"z\\\")\\nTest.assert_equals(get_name(\\\"student@exampleschooldistrict.net\\\"), \\\"student\\\")\\nTest.assert_equals(get_name(\\\"sars-CoV-2@pandemic.org\\\"), \\\"sarsCoV\\\")\\nTest.assert_equals(get_name(\\\"t1h2e3q4u5i6c7k8b9r0o1w2n3f4o5x6j7u8m9p0e123456789doverthelazydog@ro.bot\\\"), \\\"thequickbrownfoxjumpedoverthelazydog\\\")\\nTest.assert_equals(get_name(\\\"][:;><?/(*^%$E@br.uh\\\"), \\\"E\\\")\\nTest.assert_equals(get_name(\\\"uhOh-theThirteenthTest@unluc.ky\\\"), \\\"uhOhtheThirteenthTest\\\")\\nTest.assert_equals(get_name(\\\"e@ifdirmvsidso.jeksdjjcoa\\\"), \\\"e\\\")\\nTest.assert_equals(get_name(\\\"a@b.c\\\"), \\\"a\\\")\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,1,0,3,2,3,2,1,0,2,2,2,2,2,1,3,1,2,1,1,1,1,2,3,1,2,0,2,2,2,1,1,5,2,2,2,1,0,1,2,0,0,2,2,0,1,2,0,2,2,2,1,2,2,0,2,0,2,2,2,1,2,1,0,2,2,2,1,1,2,2,0,2,2,1,2,2,2],\"rators\":[\"n2BRY9X8899dcG8Bw\",\"mDWNyaaQ9hvPCRzSd\",\"aEm3Wvj2rFYRL8Lrb\",\"QjgbDprWMz6Lr5Y9u\",\"Lsy46kRKdDiPwAKPH\",\"3Wu7a3i5XGeRGrZiA\",\"5eRdoeYxS97AFS8ra\",\"fRuL2dZNwv5JifSrL\",\"v9KtC8YLbMWmXiW2H\",\"6FjY9f6nSNb4AtTua\",\"zT9LpkiwYjLviYYW6\",\"QuQqdww2t72mqEtue\",\"MYgTLYWDKJoskYRaa\",\"KsnBcS6cEQh75b8zx\",\"nys6kJatAFrKL59Pf\",\"yTzWaBk7JMrh7ub3k\",\"4ZicxybyvEsuA9iET\",\"zPQm4aRmkjg4gWCwf\",\"XqjMsKvfRRbo7qLCd\",\"Yxxftfc3sLWrLFkTd\",\"e429xQmWCuCXKQH3X\",\"BdnE4RS5puoxo92mA\",\"p8qqFdJ3FSk5x9z3G\",\"shdSrDq5ZKqfpgjmu\",\"ihWWwoyPrvHSZeQy3\",\"DiWMTKG3JEgRBTWaT\",\"Wv2vJnEj8ywNmARoF\",\"2DZpaY98od4zj6M59\",\"dneg3gmK7dsXJLo7z\",\"Yp7uvStL97cC9fKkY\",\"Jqk2uJZZxEv5wZFze\",\"8PwfYqoDQFThzNtvf\",\"PXAcsKkssS2yLyDv2\",\"s5M5RvgqR9BhB9JoC\",\"gXTAie79kiw28tx5u\",\"cAP3n5NY64uoMwzRR\",\"gJYuGdkXEWWmGRLzu\",\"J3upzLHuEwXH7Z2hx\",\"yjtdwc2AC4jA2RWtn\",\"iS5BrkGLzJyPK7nKt\",\"gb9rvGus2Jv7bjZSs\",\"HF28xZKSLM9wEuqNg\",\"w2HhxvSLmDhaGCAjE\",\"DPi9QGLctq2y76KuE\",\"GGdmhAvxXhqhhibJN\",\"oBcs8GLX2ZFLXQy8y\",\"rfyEkETeoS96QNH4e\",\"EfxwqhYdapX3dMQC2\",\"YcCLwitFMAEJSnxAW\",\"srJ34BaybkQh3qRkM\",\"zd9FLSzsGz3evKafy\",\"cR3ibTMxLyEdDFCHY\",\"FEYpu9RWysAgW3XnP\",\"8JyqsSbN2FJXPr3cw\",\"qD2LrwaDrSdiybLKY\",\"iojEnnY9FsMfYzp6f\",\"J5T8gZqiZXFuFDTQ7\",\"qAby4AWXmTNeusvg3\",\"Ds7L5bksw2QRHjrKL\",\"JhX7jvtpwNyxcc39m\",\"AFfw7cGg83uYk2Miy\",\"DEDniTrstQYGounXT\",\"o4ixjQGSaYqA2JoM4\",\"CHvzhtXnv8HTbPQ56\",\"d8qtzoLB264iP8tdY\",\"5HCu9Ydd86QgHDRNP\",\"yr822PZmmiDDenxpB\",\"PC3pLs36zNzpRDSuE\",\"sbJcFfQjQ59Wfg4Cd\",\"AasGs8AeX9Lcb9xJn\",\"HqmxnQJM66Y57twhn\",\"qzXAMXsHZGT8o5hTA\",\"mvJBakQ35CWAnbbEZ\",\"tAF9Gf6PiGogbZuWs\",\"sHjfbGQGLHE6JR6qu\",\"8BFSTCnoe2QggN64c\",\"AJexRBN9cYQmqvYu6\",\"T6iBEE2jp7f7iEF2P\",\"Afnps7TJQuS9sipMb\",\"ey3CASd6Je5LEJzfB\",\"7txFzDQ43vJ7qCY88\",\"BrTDhPJcACL2bsrpJ\",\"2u9wghjCydey6aWys\",\"yod5YhKtPqw2GfG9B\",\"dzS6WBTMHyFEag6Fp\",\"2PufnQcsHsfymufX3\",\"YRAzEBJoLvSaiPtYx\",\"4TmgHkn5vqyHK3sYC\",\"d9LBRxvADNBB5QJMB\",\"eMuCpJ2spXWkJjWNz\",\"pduNK68oazqQTtbLp\",\"suArq5BbSy7gD6xri\",\"MKT7khMBGXzA22ykf\",\"mxX4rH5ELYkdZ2Mbw\",\"u5u2YpHXiNgzDNJdX\",\"yAouD3PxzED8a4gap\",\"wjc4iejpErBhxWwHo\",\"3nied3n8KG8RSNixH\",\"NzbRqGWspQnWMoDrF\",\"9pzFiFK3ANLjQfnr2\",\"LWCzZ8mb8gwrRNGfq\",\"4Lwjr34ypKNQNQCar\",\"X4rzfxGgxx6CS7Bpz\",\"RoGGD5cpHb4ftdLDv\",\"Wi4H6ayKsNDWWQCG5\",\"5QN8R22z43SrwoHDz\",\"DQskEvAv5KiJDPtGF\",\"rCrbqMiaGPgHYTNxu\"],\"total\":117,\"quality\":[5,5,4,5,5,3,5,5,5,3,4,5,4,5,5,5,5,5,5,5,5,5,5,5,5,3,5,5,5,5]},\"flags\":0},\"summary\":\"Create a function that takes an email address and returns the name in the address.\\n\\nThe \\\"name\\\" is the letters/alphabetical characters before the @ in the address.\\nThe \\\"name\\\" will not always be an actual name.\\nEmail addresses will end in something like @domain.com\\n\\nExamples\\nget_name(\\\"yourname@example.com\\\") ➞ \\\"yourname\\\"\\n\\nget_name(\\\"john64@gmail.com\\\") ➞ \\\"john\\\"\\n\\nge\",\"tags\":[\"logic\",\"strings\"],\"timestamp\":{\"$date\":1586569030420},\"title\":\"Retrieve Name from Email Address\",\"quality\":4.7,\"family\":[{\"_id\":\"pDmDP9KhXmBTcScT6\",\"language\":\"python3\"},{\"_id\":\"9NzByDu2FQhNr3bmj\",\"language\":\"ruby\"}]}}"]