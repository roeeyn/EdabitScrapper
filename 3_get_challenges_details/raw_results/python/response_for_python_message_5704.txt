a["{\"msg\":\"result\",\"id\":\"1565\",\"result\":{\"_id\":\"7L9RgoJHuYf85DWib\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"def flatten(lst):\\n\\t\",\"difficulty\":2.037037037037037,\"familyId\":\"adpyGoq7BBnACeYod\",\"instructions\":\"Create a function that takes a multi-dimensional list and converts it (*recursively*) into a single-dimensional list and returns it. Use a **RECURSIVE** approach.\\n\\n### Examples\\n```\\nflatten([[17.2, 5, \\\"code\\\"]]) ➞ [17.2, 5, \\\"code\\\"]\\n\\nflatten([[[[[2, 14, \\\"rubber\\\"]]], 2, 3, 4]])) ➞ [2, 14, \\\"rubber\\\", 2, 3, 4]\\n\\nflatten([[\\\"dimension\\\"]]) ➞ [\\\"dimension\\\"]\\n```\\n\\n### Notes\\n- Input contains at least one element.\\n- The use of built-in methods is discouraged.\\n- A similar version of this challenge can be found [here.](https://edabit.com/challenge/2nciiXZN4HCuNEmAi)\",\"isHidden\":false,\"lab\":\"from re import findall, MULTILINE\\nfrom inspect import getsource\\n\\ndef check_recursive(fn):\\n  try:\\n    src, n = getsource(fn), fn.__name__\\n    if n == '<lambda>': n = src.split('=')[0].strip()\\n    return len(findall(n, src, flags=MULTILINE)) > 1\\n  except OSError: return True\\n\\nTest.assert_not_equals(check_recursive(flatten), False, 'Recursion is required!')\\n\\narr_vector, res_vector = [\\n  [[17.2, 5, \\\"edabit\\\"]], [[[[[2, 14, \\\"rubber\\\"]]], 2, 3, 4]], [0, [12, \\\"scores\\\", [[2]]]], [[\\\"dimension\\\"]],\\n  [1, 2, 3, [4, 6, 6]]\\n], [\\n  [17.2, 5, \\\"edabit\\\"], [2, 14, \\\"rubber\\\", 2, 3, 4], [0, 12, \\\"scores\\\", 2], [\\\"dimension\\\"],\\n  [1, 2, 3, 4, 6, 6]\\n]\\nfor i, n in enumerate(arr_vector): Test.assert_equals(flatten(n), res_vector[i])\\n\\n# Credit goes to @BijogFc24 for the original JS version of the challenge.\",\"language\":\"python3\",\"summary\":\"Create a function that takes a multi-dimensional list and converts it (recursively) into a single-dimensional list and returns it. Use a RECURSIVE approach.\\n\\nExamples\\nflatten([[17.2, 5, \\\"code\\\"]]) ➞ [17.2, 5, \\\"code\\\"]\\n\\nflatten([[[[[2, 14, \\\"rubber\\\"]]], 2, 3, 4]])) ➞ [2, 14, \\\"rubber\\\", 2, 3, 4]\\n\\nflatten([[\\\"dimension\\\"]]) ➞ [\\\"dimension\\\"]\\n\\nNotes\\nInput contains at leas\",\"tags\":[\"recursion\",\"arrays\"],\"timestamp\":{\"$date\":1594281096692},\"title\":\"Multidimensional List Into Single Dimensional List\",\"stats\":{\"completed\":{\"total\":61,\"ratings\":[2,2,2,2,2,4,1,3,2,3,3,2,3,3,2,0,3,3,3,2,3,1,1,3,1,1,1,3,2,2,3,3,3,2,0,3,3,2,2,0,0,3,3,3,0,3,2,0,3,1,3,0,3,0],\"rators\":[\"a777e8chPvJkY3tKa\",\"aEm3Wvj2rFYRL8Lrb\",\"8PwfYqoDQFThzNtvf\",\"mDWNyaaQ9hvPCRzSd\",\"W5TajitmCyxz87zAC\",\"n2BRY9X8899dcG8Bw\",\"s5M5RvgqR9BhB9JoC\",\"2innwjWqxJHo4eRGh\",\"iSY8Jq5PQ8wBiWpiw\",\"8sNv5PTHa7XQ8bNqR\",\"bLdD6ZjnJqW69EWzk\",\"9XNbjEKxsC89aX6ae\",\"gJYuGdkXEWWmGRLzu\",\"8JyqsSbN2FJXPr3cw\",\"gb9rvGus2Jv7bjZSs\",\"Ecg4m7srYGgZsb4Ck\",\"Pe8vWpDHRuH9nSGKW\",\"DNGkwLuAzEACszkAx\",\"tAF9Gf6PiGogbZuWs\",\"gSFJPsMXnqAog3Q9f\",\"cR3ibTMxLyEdDFCHY\",\"yjtdwc2AC4jA2RWtn\",\"DEDniTrstQYGounXT\",\"585XRBCotKx6wh96Q\",\"QRv96jmNaYsWkxQEG\",\"qD2LrwaDrSdiybLKY\",\"xn7uGNKeAwPEkP9oA\",\"FEYpu9RWysAgW3XnP\",\"DPi9QGLctq2y76KuE\",\"Yp7uvStL97cC9fKkY\",\"C2mmEAYsgGaDc4d8H\",\"J3upzLHuEwXH7Z2hx\",\"Jqk2uJZZxEv5wZFze\",\"gXTAie79kiw28tx5u\",\"T2vhHPhRR96hRizq8\",\"buX4mCQhtXCfBjeno\",\"iojEnnY9FsMfYzp6f\",\"srJ34BaybkQh3qRkM\",\"cAP3n5NY64uoMwzRR\",\"oBcs8GLX2ZFLXQy8y\",\"eHcgvkTGsH7ZziqBo\",\"AasGs8AeX9Lcb9xJn\",\"HqmxnQJM66Y57twhn\",\"GGdmhAvxXhqhhibJN\",\"rfyEkETeoS96QNH4e\",\"hkiz2Nv927cYGrA86\",\"sJWTa7iWeRoRtqJ8N\",\"gKnWjDjwrJh7MK2df\",\"2PufnQcsHsfymufX3\",\"yod5YhKtPqw2GfG9B\",\"T6iBEE2jp7f7iEF2P\",\"suArq5BbSy7gD6xri\",\"d8qtzoLB264iP8tdY\",\"Ds7L5bksw2QRHjrKL\",\"CHvzhtXnv8HTbPQ56\",\"vFXxysYBKjYaSXGp8\",\"5HCu9Ydd86QgHDRNP\"],\"quality\":[5,5,2,5,4,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"a777e8chPvJkY3tKa\",\"quality\":4.5,\"family\":[{\"_id\":\"cwyHz8adjAg6dpxce\",\"language\":\"java\"},{\"_id\":\"2oMTwjqmmXD8XBuMn\",\"language\":\"javascript\"},{\"_id\":\"7L9RgoJHuYf85DWib\",\"language\":\"python3\"}]}}"]