a["{\"msg\":\"result\",\"id\":\"2184\",\"result\":{\"_id\":\"7Y2C8g3fXXyK2R9Bn\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"def keyword_cipher(key, message):\\n\\t\",\"difficulty\":3.357142857142857,\"familyId\":\"b5sW95fa6P7QkeXwM\",\"instructions\":\"A **Keyword Cipher** is a monoalphabetic cipher which uses a keyword to provide encryption on given string of message. \\n\\nCreate a function that takes two arguments: a string `message` and a string `key`, and returns an **encoded message**.\\n\\nFor the encryption key, the keyword is placed at the beginning, followed by the rest of the characters in the alphabet in order (in other words, with the keyword characters removed):\\n\\n```\\nA|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z\\nK|E|Y|W|O|R|D|A|B|C|F|G|H|I|J|L|M|N|P|Q|S|T|U|V|X|Z\\n```\\n\\nThe encrypted message substitutes each plaintext character with the encryption key character in the corresponding position.\\n\\nReturn the given message encrypted against the key:\\n\\n```\\neMessage = \\\"KEYABC\\\"\\n// A = K, B = E, C = Y, H = A, I = B, J = C\\n```\\n\\n### Examples\\n```\\nkeyword_cipher(\\\"keyword\\\", \\\"abchij\\\") ➞ \\\"keyabc\\\"\\n\\nkeyword_cipher(\\\"purplepineapple\\\", \\\"abc\\\") ➞ \\\"pur\\\"\\n\\nkeyword_cipher(\\\"mubashir\\\", \\\"edabit\\\") ➞ \\\"samucq\\\"\\n```\\n\\n### Notes\\n- Don't forget to remove duplicates after concatenating string with keyword.\\n- Non-alphabetic characters must be left as they are.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(keyword_cipher(\\\"keyword\\\",\\\"abc\\\"), \\\"key\\\")\\nTest.assert_equals(keyword_cipher(\\\"keyword\\\",\\\"xyz\\\"), \\\"vxz\\\")\\nTest.assert_equals(keyword_cipher(\\\"keyword\\\",\\\"aeiou\\\"), \\\"kobjs\\\")\\nTest.assert_equals(keyword_cipher(\\\"purplepineapple\\\",\\\"abc\\\"), \\\"pur\\\")\\nTest.assert_equals(keyword_cipher(\\\"purplepineapple\\\",\\\"xyz\\\"), \\\"xyz\\\")\\nTest.assert_equals(keyword_cipher(\\\"purplepineapple\\\",\\\"aeiou\\\"), \\\"pebjt\\\")\\nTest.assert_equals(keyword_cipher(\\\"etaoinshrdlucmfwypvbgkjqxz\\\",\\\"abc\\\"), \\\"eta\\\")\\nTest.assert_equals(keyword_cipher(\\\"etaoinshrdlucmfwypvbgkjqxz\\\",\\\"xyz\\\"), \\\"qxz\\\")\\nTest.assert_equals(keyword_cipher(\\\"etaoinshrdlucmfwypvbgkjqxz\\\",\\\"aeiou\\\"), \\\"eirfg\\\")\\nTest.assert_equals(keyword_cipher(\\\"tfozcivbsjhengarudlkpwqxmy\\\",\\\"abc\\\"), \\\"tfo\\\")\\nTest.assert_equals(keyword_cipher(\\\"tfozcivbsjhengarudlkpwqxmy\\\",\\\"tjuukf\\\"), \\\"kjpphi\\\")\\nTest.assert_equals(keyword_cipher(\\\"tfozcivbsjhengarudlkpwqxmy\\\",\\\"ajqqtb\\\"), \\\"tjuukf\\\")\\nTest.assert_equals(keyword_cipher(\\\"tfozcivbsjhengarudlkpwqxmy\\\",\\\"a_bc&*83\\\"), \\\"t_fo&*83\\\")\\nTest.assert_equals(keyword_cipher(\\\"mubashir\\\",\\\"pakistan\\\"), \\\"lmecpqmj\\\")\\nTest.assert_equals(keyword_cipher(\\\"mubashir\\\",\\\"edabit\\\"), \\\"samucq\\\")\",\"language\":\"python3\",\"quality\":5,\"summary\":\"A Keyword Cipher is a monoalphabetic cipher which uses a keyword to provide encryption on given string of message.\\n\\nCreate a function that takes two arguments: a string message and a string key, and returns an encoded message.\\n\\nFor the encryption key, the keyword is placed at the beginning, followed by the rest of the characters in the alphabet in order (in ot\",\"tags\":[\"cryptography\",\"logic\",\"strings\"],\"timestamp\":{\"$date\":1608553954182},\"title\":\"Keyword Cipher\",\"stats\":{\"completed\":{\"total\":39,\"ratings\":[3,3,3,3,3,3,3,3,2,4,5,3,2,5,5,3,4,1,5,5,5,4,3,5,1,1,3,5,5,1,2,4,3,1,5,2,3,4,5,4,4,3],\"quality\":[5],\"rators\":[\"p7js9trz2zk2RorCR\",\"w2HhxvSLmDhaGCAjE\",\"qzZKorY9N3BvjEbdZ\",\"FzAWs4fqw83aRzPQx\",\"8PwfYqoDQFThzNtvf\",\"LHe4pMsuz2isuqN6B\",\"zsaoQv3qtXLfGBoho\",\"s5M5RvgqR9BhB9JoC\",\"fSQSHjW3e72MrWxbD\",\"aCNWav8S8Try9RkC6\",\"HF28xZKSLM9wEuqNg\",\"8nE8QHnFYsHCFebte\",\"Jqk2uJZZxEv5wZFze\",\"iS5BrkGLzJyPK7nKt\",\"p8qqFdJ3FSk5x9z3G\",\"5dHucvf2qBYyKim7X\",\"d6iEb2BDDofyeePh9\",\"XHShZ3WMPgGEA2vkR\",\"XNmN6ztj36a7eChbD\",\"8sNv5PTHa7XQ8bNqR\",\"yjtdwc2AC4jA2RWtn\",\"ksiwudmYS4tqyhmPe\",\"iojEnnY9FsMfYzp6f\",\"Afnps7TJQuS9sipMb\",\"J3upzLHuEwXH7Z2hx\",\"38txvwyNnhqg6WuxD\",\"J23RcmzbdtBbPCTjT\",\"2PufnQcsHsfymufX3\",\"gJYuGdkXEWWmGRLzu\",\"yTtSCvGPyYna6JuRC\",\"6HbLFKgEZ8yR2e5pu\",\"aEm3Wvj2rFYRL8Lrb\",\"nQRzZKeDKuLRf9chX\",\"SZj8jiRbrmcacXmZm\",\"mTF6oWX2WhFR4M3QK\",\"u5u2YpHXiNgzDNJdX\",\"DPi9QGLctq2y76KuE\",\"buX4mCQhtXCfBjeno\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"SRF9qZNCheaEnSnBt\",\"language\":\"cpp\"},{\"_id\":\"3G5P56u9nWW4uf5Cj\",\"language\":\"javascript\"},{\"_id\":\"7Y2C8g3fXXyK2R9Bn\",\"language\":\"python3\"},{\"_id\":\"xMjdD266Pm2G6Sfd7\",\"language\":\"ruby\"}]}}"]