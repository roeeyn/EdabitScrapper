a["{\"msg\":\"result\",\"id\":\"1863\",\"result\":{\"_id\":\"7DrvnMeY2Ebzk2mfH\",\"author\":\"Alessandro Manicone\",\"authorId\":\"AasGs8AeX9Lcb9xJn\",\"code\":\"import re\\n\\nbody_insert = \\\"yourregularexpressionhere\\\"\\nbody_append = \\\"yourregularexpressionhere\\\"\\nbody_rewrite = \\\"yourregularexpressionhere\\\"\",\"difficulty\":2.566666666666667,\"familyId\":\"XJw5zWtGySFkpZjzQ\",\"instructions\":\"Write three **regular expressions** that will be passed to `re.sub()` in order to modify the body element in our HTML file:\\n- One called `body_insert` that will be used to add elements **immediately after** the body element **opening** tag: `<body>`.\\n- One called `body_append` that will be used to add elements **immediately before** the body element **closing** tag: `</body>`.\\n- One called `body_rewrite` that will be used to replace the **content** of the body element: `<body>content</body>`.\\n\\nDetails to take into account:\\n- The opening tag `<body>` will be followed by line break `\\\\n`, you should match **after** the line break.\\n- The closing tag `</body>` will be preceded by line break `\\\\n`, you should match **before** the line break.\\n- You do **not** need to worry about the inserted elements' formatting, it's already been taken care of.\\n- `body_rewrite` should match the **content** of the body element, but **not** the body tags.\\n- **The content of the body element may be in more than one line.**\\n\\n### Example\\n```\\nindex = '''\\n<body>\\n    <p>This is a paragraph and <a href=\\\"https://edabit.com\\\">this is a link</a>.</p>\\n</body>\\n'''\\n\\nbody_insert = \\\"yourregularexpressionhere\\\"\\nbody_append = \\\"yourregularexpressionhere\\\"\\nbody_rewrite = \\\"yourregularexpressionhere\\\"\\n```\\n### body_insert\\n```\\nre.sub(body_insert, '    <p>Pre-Paragraph</p>\\\\n', index) ➞\\n'''\\n<body>\\n    <p>Pre-Paragraph</p>\\n    <p>This is a paragraph and <a href=\\\"https://edabit.com\\\">this is a link</a>.</p>\\n</body>\\n'''\\n```\\n### body_append\\n```\\nre.sub(body_append, '\\\\n    <p>Post-Paragraph</p>', index) ➞\\n'''\\n<body>\\n    <p>This is a paragraph and <a href=\\\"https://edabit.com\\\">this is a link</a>.</p>\\n    <p>Post-Paragraph</p>\\n</body>\\n'''\\n```\\n### body_rewrite\\n```\\nre.sub(body_rewrite, '    <p>Anti-Paragraph</p>', index) ➞\\n'''\\n<body>\\n    <p>Anti-Paragraph</p>'\\n</body>\\n'''\\n```\\n\\n### Notes\\n- You **don't** need to write a function, just the pattern.\\n- Do **not** remove `import re` from the code.\\n- If you get stuck, check **Comments** for some helpful hints.\\n- Find more info on RegEx in **Resources**.\\n- You can find all the challenges of this series in my [Basic RegEx](https://edabit.com/collection/8PEq2azWDtAZWPFe2) collection.\",\"isHidden\":false,\"lab\":\"index = '''\\n<html>\\n<head>\\n    <title>edabit.com</title>\\n</head>\\n<body>\\n    <p>This is a paragraph and <a href=\\\"https://edabit.com\\\">this is a link</a>.</p>\\n\\t<p>Second paragraph</p>\\n\\t<p>Third paragraph</p>\\n\\t<p>Fourth paragraph</p>\\n</body>\\n</html>\\n'''\\n\\nres1 = '''\\n<html>\\n<head>\\n    <title>edabit.com</title>\\n</head>\\n<body>\\n\\t<p>Pre-Paragraph</p>\\n    <p>This is a paragraph and <a href=\\\"https://edabit.com\\\">this is a link</a>.</p>\\n\\t<p>Second paragraph</p>\\n\\t<p>Third paragraph</p>\\n\\t<p>Fourth paragraph</p>\\n</body>\\n</html>\\n'''\\n\\nres2 = '''\\n<html>\\n<head>\\n    <title>edabit.com</title>\\n</head>\\n<body>\\n    <p>This is a paragraph and <a href=\\\"https://edabit.com\\\">this is a link</a>.</p>\\n\\t<p>Second paragraph</p>\\n\\t<p>Third paragraph</p>\\n\\t<p>Fourth paragraph</p>\\n\\t<p>Post-Paragraph</p>\\n</body>\\n</html>\\n'''\\n\\nres3 = '''\\n<html>\\n<head>\\n    <title>edabit.com</title>\\n</head>\\n<body>\\n\\t<p>Anti-Paragraph</p>\\n</body>\\n</html>\\n'''\\n\\nTest.assert_equals(re.sub(body_insert, '\\t<p>Pre-Paragraph</p>\\\\n', index), res1)\\nTest.assert_equals(re.sub(body_append, '\\\\n\\t<p>Post-Paragraph</p>', index), res2)\\nTest.assert_equals(re.sub(body_rewrite, '\\t<p>Anti-Paragraph</p>', index), res3)\\n\\n#Note from the original:\\n#Credits to https://javascript.info/regexp-lookahead-lookbehind\\n\\n#Translated from JavaScript.\\n#The RegEx series was originally posted by Isaac Pak.\",\"language\":\"python3\",\"summary\":\"Write three regular expressions that will be passed to re.sub() in order to modify the body element in our HTML file:\\nOne called body_insert that will be used to add elements immediately after the body element opening tag: ``.\\nOne called body_append that will be used to add elements immediately before the body element closing tag: ``.\\nOne called body_rewrite t\",\"tags\":[\"regex\"],\"timestamp\":{\"$date\":1588002058838},\"title\":\"RegEx Exercise #4: Edit the Body Element\",\"stats\":{\"completed\":{\"total\":28,\"ratings\":[2,2,2,2,2,3,3,3,3,4,0,3,4,3,3,3,3,3,2,2,2,4,2,4,3,3,3,1,1,2],\"rators\":[\"AasGs8AeX9Lcb9xJn\",\"aEm3Wvj2rFYRL8Lrb\",\"8PwfYqoDQFThzNtvf\",\"gb9rvGus2Jv7bjZSs\",\"wT5gGgvjKc5wz59AQ\",\"pWD2YC5s4YRCxFc2i\",\"tAF9Gf6PiGogbZuWs\",\"Phd2FdPjo9BhBfvKh\",\"Nua6T3dBurBy3Qfg9\",\"YRstQuthRkFeBiXug\",\"R4SjTgDnpigJYDLyL\",\"xn7uGNKeAwPEkP9oA\",\"n2BRY9X8899dcG8Bw\",\"pscBduNyf8TDHe2Km\",\"8WpvgSbQciTQWdd8T\",\"zZDaXBxMzTCBhNkgL\",\"4fhjJBvLBWh6QeSih\",\"oHbErJxjYJhD66d5w\",\"yjtdwc2AC4jA2RWtn\",\"J3upzLHuEwXH7Z2hx\",\"8sNv5PTHa7XQ8bNqR\",\"2PufnQcsHsfymufX3\",\"JKb5rhL6DKcCAypF9\",\"H9KZi2cjt4FwH7qog\",\"yTtSCvGPyYna6JuRC\",\"oBcs8GLX2ZFLXQy8y\"],\"quality\":[5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":5,\"family\":[{\"_id\":\"WCTdefNxDmZaYDmbr\",\"language\":\"javascript\"},{\"_id\":\"7DrvnMeY2Ebzk2mfH\",\"language\":\"python3\"}]}}"]