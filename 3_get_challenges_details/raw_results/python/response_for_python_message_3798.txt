a["{\"msg\":\"result\",\"id\":\"619\",\"result\":{\"_id\":\"X4v5Bh89P3inLEHH4\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"def spin_around(lst):\\n\\t\",\"difficulty\":1.0808080808080809,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"EMfwAJ6r75Js6MDAQ\",\"instructions\":\"Given a list of directions to spin, `\\\"left\\\"` or `\\\"right\\\"`, return an integer of how many full **360°** rotations were made. Note that each word in the list counts as a **90°** rotation in that direction.\\n\\n### Worked Example\\n```\\nspin_around([\\\"right\\\", \\\"right\\\", \\\"right\\\", \\\"right\\\", \\\"left\\\", \\\"right\\\"]) ➞ 1\\n# You spun right 4 times (90 * 4 = 360)\\n# You spun left once (360 - 90 = 270)\\n# But you spun right once more to make a full rotation (270 + 90 = 360)\\n```\\n\\n### Examples\\n```\\nspin_around([\\\"left\\\", \\\"right\\\", \\\"left\\\", \\\"right\\\"]) ➞ 0\\n\\nspin_around([\\\"right\\\", \\\"right\\\", \\\"right\\\", \\\"right\\\", \\\"right\\\", \\\"right\\\", \\\"right\\\", \\\"right\\\"]) ➞ 2\\n\\nspin_around([\\\"left\\\", \\\"left\\\", \\\"left\\\", \\\"left\\\"]) ➞ 1\\n```\\n\\n### Notes\\n- Return a positive number.\\n- All tests will only include the words `\\\"right\\\"` and `\\\"left\\\"`.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(spin_around(['left', 'right', 'left', 'right']), 0)\\nTest.assert_equals(spin_around(['right', 'right', 'right', 'right', 'right', 'right', 'right', 'right']), 2)\\nTest.assert_equals(spin_around(['left', 'left', 'left', 'left']), 1)\\nTest.assert_equals(spin_around([]), 0)\\nTest.assert_equals(spin_around(['left']), 0)\\nTest.assert_equals(spin_around(['right']), 0)\\nTest.assert_equals(spin_around(['right', 'right', 'right', 'left', 'right', 'right']), 1)\\nTest.assert_equals(spin_around(['left', 'left', 'right', 'left', 'left', 'left', 'left', 'left', 'left', 'right', 'left', 'left', 'right', 'right', 'right', 'right', 'left', 'left', 'right', 'right']), 1)\\nTest.assert_equals(spin_around(['right', 'left', 'left', 'right', 'left', 'left', 'right', 'left', 'right', 'right', 'left', 'left', 'right', 'right', 'right', 'left', 'left', 'right']), 0)\\nTest.assert_equals(spin_around(['right', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'right', 'right']), 10)\\nTest.assert_equals(spin_around(['left', 'left', 'left', 'left', 'left', 'left', 'left', 'left', 'left', 'left', 'left', 'left', 'left', 'left', 'left', 'left', 'left', 'left', 'left', 'left', 'left', 'left', 'left', 'left', 'left', 'left', 'left', 'left', 'left', 'left', 'left', 'left', 'left', 'left', 'left', 'left', 'left', 'left', 'left', 'left']), 10)\",\"language\":\"python3\",\"quality\":4.588235294117647,\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,1,2,1,1,1,1,1,1,0,1,0,1,0,1,0,2,2,3,2,1,1,0,1,0,1,1,2,3,2,1,2,2,1,1,2,0,2,0,1,0,2,1,3,2,0,1,1,2,1,1,0,1,2,0,0,1,2,1,1,0,0,2,0,2,1,0,1,3,0,1,0,1,1,0,2,0,1,3,1,1,1,1,0,2,1,0,0,1,2,1,1,2,1,1,0,2,1,2,0,2,1,1,2,1,2,1,1,1,3,1,0,1,0,2,1,2,1,1,1,0,0,1,0,2,1,2,1,1,1,0,2,1,0,1,2,1,2,1,0,2,3,1,1,0,1,0,1,1,1,2,1,1,1,1,0,1,1,1,2,1,1,2,2,0,2,1,0,1,1,1,1,1,1,1,3,3,2,2,1,1,0,1,1,0,1,1,0,0,1,1,2,0,1],\"quality\":[4,5,4,5,5,5,2,5,5,5,5,5,5,5,5,1,4,5,4,5,5,5,5,4,5,5,4,5,5,5,5,5,5,5,5,4,4,3,5,5,5,5,5,5,5,4,2,5,3,5,5,5,5,5,5,5,4,3,4,5,5,5,5,5,5,5,5,5,5,3,4,4,5,5,5,5,5,5,5,4,5,5,5,5,4,5,5,5,4,5,5,4,5,5,5,5,5,5,5,5,5,3,5,5,1,5,5,5,5,5,5,5,4,3,5,5,1,5,4],\"rators\":[\"PXAcsKkssS2yLyDv2\",\"hQfF5RtxhKkXygtiW\",\"Yp7uvStL97cC9fKkY\",\"utTuvGdmu2sBHWBhQ\",\"gb9rvGus2Jv7bjZSs\",\"BrTDhPJcACL2bsrpJ\",\"xn7uGNKeAwPEkP9oA\",\"zd9FLSzsGz3evKafy\",\"C2AfMipCicfD58WJ9\",\"2jN9Nq9KKm4g7ib7X\",\"MKT7khMBGXzA22ykf\",\"gvMzqKgqRucdxpyAz\",\"C8CjSD4rKfnTWuWDA\",\"58EYEiSfdcCaPrNfj\",\"qAby4AWXmTNeusvg3\",\"NbtMZjyQbi4LzY79t\",\"Af3Hd4h54XSBLcGSG\",\"WWPsHZrNr8YbMyNRP\",\"yaQ2DdhMMmdMS9np8\",\"z6d6sboXFFkWh83Aw\",\"yjtdwc2AC4jA2RWtn\",\"kNrnnMxhFZztMTBAX\",\"6428wKHtwKkFdvBs5\",\"mePSe5o7qpkYirqxx\",\"q8NixmnuQQ2o5PeRt\",\"GsqNXp7AmynB6ahw3\",\"6pYjowvKpuMGgRfep\",\"enmGKZK3YpeBA2rSS\",\"nbAuwY3wJdWSDMNxG\",\"zRbFoSaGNmBajznTQ\",\"sYDPzQLCBovh6exd8\",\"FvFhg2wELM3SCZDZQ\",\"qD2LrwaDrSdiybLKY\",\"J3upzLHuEwXH7Z2hx\",\"QRv96jmNaYsWkxQEG\",\"nr94RpinXadfdgysX\",\"gJYuGdkXEWWmGRLzu\",\"Lg4t6SEWgtYz4u7Cj\",\"FSe2mfd98g84k5DW6\",\"w2HhxvSLmDhaGCAjE\",\"DPi9QGLctq2y76KuE\",\"wjc4iejpErBhxWwHo\",\"5HCu9Ydd86QgHDRNP\",\"dYPkStFnLvAMsHSzZ\",\"gXTAie79kiw28tx5u\",\"eMuCpJ2spXWkJjWNz\",\"wRttWTM59y8m5mx7x\",\"FEYpu9RWysAgW3XnP\",\"aEm3Wvj2rFYRL8Lrb\",\"Cybtjz3cF7RgoiqrN\",\"HuNF3xTBzmatyGSTm\",\"cR3ibTMxLyEdDFCHY\",\"d8qtzoLB264iP8tdY\",\"J5T8gZqiZXFuFDTQ7\",\"cAP3n5NY64uoMwzRR\",\"iS5BrkGLzJyPK7nKt\",\"RGMbFMZXJr7DhcAJy\",\"a777e8chPvJkY3tKa\",\"HF28xZKSLM9wEuqNg\",\"oBcs8GLX2ZFLXQy8y\",\"rfyEkETeoS96QNH4e\",\"o4ixjQGSaYqA2JoM4\",\"dBzwBtRjZqB98DJeB\",\"8JyqsSbN2FJXPr3cw\",\"uGuS9YRXW2nj4p6zf\",\"sHjfbGQGLHE6JR6qu\",\"nJXgbSQozcoE8Wn4N\",\"g9FyJ8yeT9ic97Qp2\",\"oriWwkSDoejDH9ru5\",\"pDvFWMCD9fQwoBPcu\",\"xtjSZddGenGgDtctJ\",\"5XiuAqicKD4hBdu63\",\"GGdmhAvxXhqhhibJN\",\"cRoHBaA7HjePc8wb2\",\"KdYQN3KAT2DyTzT2a\",\"R4SjTgDnpigJYDLyL\",\"mHvoroWGDLYbJqQJa\",\"YcCLwitFMAEJSnxAW\",\"dj5AyG5fWP8FdsSmZ\",\"DpnYcMphntjsQ96qg\",\"rEecHXXCTwgG5wWNA\",\"5hQnRWiKkhgKJXNMP\",\"FuYTQcDNjct58rqPa\",\"GcbNmsJRpiRjNmf3B\",\"ga7aTTEThzsELuC2j\",\"NzbRqGWspQnWMoDrF\",\"yod5YhKtPqw2GfG9B\",\"DqNQn9Jsxcu5HijKE\",\"9FCeFzjPA4jrQ7oHW\",\"nFbmNzMQ38TncmfQX\",\"Jqk2uJZZxEv5wZFze\",\"hERDiXzMt3bagzfKp\",\"WdKdsgH9gXkKgCycx\",\"4fjSgcqhQQZM2ZFRP\",\"5S9nX4rKsnCcnv4Cz\",\"pduNK68oazqQTtbLp\",\"3nied3n8KG8RSNixH\",\"Fk9kLwoG4Brf4KsKf\",\"axdSNLZpiCDF8RS6n\",\"pveK5gtGcm8k4wScM\",\"iF4tdvn5sA9CM4T6T\",\"974cv448kw6Wu2JF6\",\"s5M5RvgqR9BhB9JoC\",\"utdj2v4ruJdN644DR\",\"3cF6NXq3ZEwdkgSjb\",\"9CoqdidjM9KbeKnHY\",\"buX4mCQhtXCfBjeno\",\"2QGRoQn2dRq3scu7k\",\"pJj86xc32Bs7Frxvi\",\"Ds7L5bksw2QRHjrKL\",\"CyzskHGsC6WSmYrLu\",\"ffjnHrx8Ym7A7pQWe\",\"fTNQmMvTZhhiGBCMe\",\"CTKmXtrqDYqJBnuy8\",\"uTHfpJjGDdefX3zwT\",\"oDN67zoApxcztnYdu\",\"tW7TaC7bjNajLGH5Y\",\"2ptN2mhjFwFcHyPZd\",\"eYfPWvZwnJQkHbSTK\",\"97mMkvdDxbhkQXNPp\",\"LCuvvWMwiGuqTwNRi\",\"JS3hNM3XXkxPdg3yk\",\"HqmxnQJM66Y57twhn\",\"AFfw7cGg83uYk2Miy\",\"srJ34BaybkQh3qRkM\",\"vyXXRaCK8jXica5bf\",\"Q7Yxda7dqKeYPs2Db\",\"ZyrfhDTZHb8LymH5b\",\"Gi5fpM9GkEnHpubLk\",\"voiHm7S2MaC9Lj3bW\",\"w4NPSkntK5nBB2sSE\",\"pPpmP7xeJzGgK362R\",\"KDfmGkQoajgNwwAm3\",\"Bw2bXzvk8DAZxxekw\",\"dQd664XYR6QKHFvHW\",\"oyEmYZKC35k9CRGyA\",\"23ZqKrN3fa42GTWA8\",\"6EDa4HqMpdfiA4H2R\",\"sX9GZp3fYyQLrBKMJ\",\"sHYL6DJaGQTxAnMAq\",\"f8rpKhmu5D9Q2vnkT\",\"pCMhfoZ5c6eBuCqbp\",\"di2hhADLx59Bj4ewM\",\"sbJcFfQjQ59Wfg4Cd\",\"YmQb9Mo4Xcg2vzgbn\",\"DkeEd2uhXypnPDnNT\",\"rrSC943cCKNG48sH4\",\"bjS5tQpyq3KxNW3PD\",\"DEDniTrstQYGounXT\",\"B8n7KqbvEDjZzgj2D\",\"GdKtjPh8TcfmJuduv\",\"CLypXaZksY99mpRCm\",\"vCxuabDxEv9YC3Szb\",\"KJCDwGkoXh8qtbbKr\",\"q9FfWNiMDKRiaCJ5j\",\"PYMCsk26X5SETLDMy\",\"YRAzEBJoLvSaiPtYx\",\"NfC43J2NF8h2Tprns\",\"rxr3nwpDGDEkBJRgD\",\"8BFSTCnoe2QggN64c\",\"wypdvuJQZB2TFyb2g\",\"WYMP9FjYaHnXjBytr\",\"AXcnPX68zdMiLNSmu\",\"etQ6HemTeyxK5gvsk\",\"8JQqTnq75Mr3EGxY9\",\"Krto2sGMfGWBLcL7n\",\"53cvqw2JKaYiThbK6\",\"Wgsg2WzRoZ58dcXm8\",\"DneofoF3GAXjvetfS\",\"tdinF6MRzC6AdNX8g\",\"rK3xSCovoqjmkgBL9\",\"YwAvPdqD6Xi2qjapZ\",\"FBgpQ9PbKanhA9RWo\",\"QKrXtdmaugML4SayF\",\"F7wta4nHmabMr9dfd\",\"TSfnZ2oH2ZFyzLmS5\",\"EAbwXY89MiXwDu23f\",\"8PwfYqoDQFThzNtvf\",\"wi7EDf2o2Xtgp6AiG\",\"HdnB7wsLG3Q53aazr\",\"ciAMjMGqqLtvnzcXz\",\"ZCstWrof54mW6Yped\",\"Teq5J5Y83TRnNhaZu\",\"M9W7cTktjLEP4Shra\",\"PLDdRZ2fMBQe8aqtc\",\"gefLqNhyqWGdHPN7E\",\"EcbdKPg99QbbYEim5\",\"3EJzva23Wzakhzie7\",\"fKakwpijtdP92XuCW\",\"wWLD8Q8ZW5EssmGoT\",\"7gtj2SE7q6tGEcAZq\",\"YPSvhJeQmMZWr5no7\",\"LQxof8pGabGuWP7Gn\",\"YA7SDhpgEtsqynvNL\",\"hkJGLuib5md8vZ9HD\",\"N2wnZXkhDH86mgjQ8\",\"qQQ4hCQpzitmHSkjS\",\"m7KZ5donpz5F6AR3z\",\"Lm6ChQCWBmaikmk5J\",\"Dq24MSpogRmq6L4hX\",\"XD5nmvKQchKezPXhy\",\"q6QsMYNMpPNtmyTeW\",\"7dQYiDeTcMztbGyso\",\"CHvzhtXnv8HTbPQ56\",\"cbhmt4aRWPyJnnzNT\",\"BJp2WkwLWGHHB5oQW\",\"T6iBEE2jp7f7iEF2P\",\"iojEnnY9FsMfYzp6f\",\"NrRa4TS6uZR9xuXRt\",\"PC3pLs36zNzpRDSuE\",\"66a9xX73nmTEuKs9k\",\"CKHKhvJcq9jNMqrmd\",\"c2q7mY39z5JPEMCaM\",\"w3QDkmjZj2dAFDsjq\",\"u5u2YpHXiNgzDNJdX\",\"XrqNzJ2FRG8HnGiR6\",\"iP7wNofhZXTkJ9ryG\",\"X4rzfxGgxx6CS7Bpz\",\"7tbtTx6uxePv6eQwP\",\"tAF9Gf6PiGogbZuWs\",\"9Ly8afdtofp8DXzrt\",\"rgvAJFwfCeYoYnFTK\",\"mvJBakQ35CWAnbbEZ\",\"H9KZi2cjt4FwH7qog\",\"4TmgHkn5vqyHK3sYC\",\"BMEud9eeJnPDC8A2k\",\"YXQvrgeiGzLd6cTW9\",\"AasGs8AeX9Lcb9xJn\",\"K6MfKMytoJJuSGewP\",\"jkbavR2ATFJcpmo8M\",\"T6Rm8mREPMZSftzrC\",\"JiSpvq6C7azQEmENc\",\"EfxwqhYdapX3dMQC2\",\"nkioPNzxxJazSP3Rr\",\"qzXAMXsHZGT8o5hTA\",\"tMioziAwQysP8Dhrw\",\"pznHSwxyTyfxrcg3c\",\"zC8WrPp5BC6c2exrW\",\"pwWtbXEjzuvrhEGwt\",\"Mn8RD2bk4oKYXSZsu\",\"ZXWDtCrM9ev3439oi\",\"vCeeMuYDbz3MB4vsk\",\"eW9R2SCoYnY8HBAdL\",\"2MjzJ7yxh3eT3xbng\",\"DYDJTyGgKFnBRLm2r\",\"qB6KSTYC6H2TQEQY6\",\"wwz3ixWSv8rFDHBXd\",\"E9ttMPTkLkKG6nZrg\",\"9pzFiFK3ANLjQfnr2\",\"5Dd7XwALvvMMwS4Fb\",\"g2mqHYvQmr78mET8i\",\"796v8eRqahP6wpLdL\",\"Cg3LKtEAJpsrdWroG\",\"89gFgyARwfngYFzgo\",\"LD7N9C39ZQqPTR9Wy\",\"hehXPZSvjkjmQhXAr\",\"NGvCPuMiAP3xrRLfB\",\"H4abACFDH5t8CnnyH\",\"sfj3i3eEAfZa3f9kg\",\"TCvpT4EPb8qNssNB7\",\"Afnps7TJQuS9sipMb\",\"XbxHXmh5ZmRN2gw3K\",\"gKnWjDjwrJh7MK2df\",\"KH4Wr3YSvNddCSRJ2\",\"j7ebNFtte6fSkMWjj\",\"jCjCvyhqhpebkJn34\",\"7GLF8rm7qAPnEdi2N\",\"gZCBY2gP7xHRy5JzG\",\"P7yBRKAd8jWtyRTKf\",\"JwkwCHcXthnGDsdFr\",\"9bQyb6rW7xfE4vgrR\",\"rCrbqMiaGPgHYTNxu\",\"2EbDCCJJvCfKkbYia\",\"jBo3xAopr37GFzY8g\",\"d9LBRxvADNBB5QJMB\",\"6W2odqTtJPNs6AsfM\",\"5nbHH4eApn6So9h2n\",\"RkEnaAeCCnp4qKfN5\",\"fX8cDn2yK5tGp4CXh\",\"jWbd7SYDzLPjc9EDh\",\"SYQRhvZy4E54swfCs\",\"FMyZPN6odEFtfuimF\",\"9LrF5o2TK2iE8BZJh\",\"ewPGFzszLXygWHMET\",\"mxX4rH5ELYkdZ2Mbw\",\"dzS6WBTMHyFEag6Fp\",\"B4y8aoyXJtskYPFEL\",\"4Lwjr34ypKNQNQCar\",\"APm7XtwYtukQ2kB7i\",\"LWCzZ8mb8gwrRNGfq\",\"mw9464S5dnenqzvpm\",\"gbGzZz5Yq5hT357v8\",\"6LbPw9yW6HHDfn8B8\",\"adfJCbSpZSdnfkwtJ\",\"CkJxgZiaxb3YG2PzG\",\"StNu7DPyTgEStZsMY\",\"Qyfyyw6oC4EHAndzo\",\"yAouD3PxzED8a4gap\",\"5QN8R22z43SrwoHDz\",\"FiaTpm7ehfDv43wSG\",\"GgQqni8TkbqEBGcsy\",\"ey3CASd6Je5LEJzfB\",\"Wi4H6ayKsNDWWQCG5\",\"bDvsKTnScP4pPJAiC\",\"sMcFMPkMJC4Kh6ymj\",\"mdRQaGT98ycMt87S2\",\"cmH5k3s9REYMzDBMn\",\"rraTtctZqnjXu2L2x\",\"tR9grPBLncwacBTzr\",\"Ne8mK9DDHG8TRkoxG\",\"K42ijC8Jy8GHBnobP\",\"E2hpke7mHxAWsw5t9\"],\"total\":329},\"flags\":0},\"summary\":\"Given a list of directions to spin, \\\"left\\\" or \\\"right\\\", return an integer of how many full 360° rotations were made. Note that each word in the list counts as a 90° rotation in that direction.\\n\\nWorked Example\\nspin_around([\\\"right\\\", \\\"right\\\", \\\"right\\\", \\\"right\\\", \\\"left\\\", \\\"right\\\"]) ➞ 1\\nYou spun right 4 times (90 * 4 = 360)\\nYou spun left once (360 - 90 = 270)\\nBut you s\",\"tags\":[\"arrays\",\"language_fundamentals\"],\"timestamp\":{\"$date\":1603218689862},\"title\":\"Spin Around, Touch the Ground\",\"family\":[{\"_id\":\"wAzyjX566tAbneD4E\",\"language\":\"cpp\"},{\"_id\":\"L5uwyF4SsAG4DmPpJ\",\"language\":\"java\"},{\"_id\":\"Z8QZZJzLF4LWPA5Xw\",\"language\":\"javascript\"},{\"_id\":\"X4v5Bh89P3inLEHH4\",\"language\":\"python3\"},{\"_id\":\"F3TKYgfAHDZu6ANSK\",\"language\":\"ruby\"}]}}"]