a["{\"msg\":\"result\",\"id\":\"1300\",\"result\":{\"_id\":\"Q72X3J8jq7SzSSXui\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"def sentence_searcher(txt, word):\\n\\t\",\"difficulty\":1.981012658227848,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"GYNqNkXsn8sdBms46\",\"instructions\":\"Create a function that returns the whole of the first sentence which contains a specific word. Include the full stop at the end of the sentence.\\n\\n### Examples\\n```\\ntxt = \\\"I have a cat. I have a mat. Things are going swell.\\\"\\n\\nsentence_searcher(txt, \\\"have\\\") ➞ \\\"I have a cat.\\\"\\n\\nsentence_searcher(txt, \\\"MAT\\\") ➞ \\\"I have a mat.\\\"\\n\\nsentence_searcher(txt, \\\"things\\\") ➞ \\\"Things are going swell.\\\"\\n\\nsentence_searcher(txt, \\\"flat\\\") ➞ \\\"\\\"\\n```\\n\\n### Notes\\n* Sentences will **always** end with a period.\\n* Your function should not be case sensitive.\\n* Return an empty string if the word isn't found in the sentence.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"txt = \\\"I have a cat. I have a mat. Things are going swell.\\\"\\n\\nTest.assert_equals(sentence_searcher(txt, \\\"cat\\\"), \\\"I have a cat.\\\")\\nTest.assert_equals(sentence_searcher(txt, \\\"MAT\\\"), \\\"I have a mat.\\\")\\nTest.assert_equals(sentence_searcher(txt, \\\"Have\\\"), \\\"I have a cat.\\\")\\nTest.assert_equals(sentence_searcher(txt, \\\"swell\\\"), \\\"Things are going swell.\\\")\\nTest.assert_equals(sentence_searcher(txt, \\\"things\\\"), \\\"Things are going swell.\\\")\\nTest.assert_equals(sentence_searcher(txt, \\\"flat\\\"), \\\"\\\")\",\"language\":\"python3\",\"quality\":4.596774193548387,\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,3,2,2,1,2,1,3,1,2,1,1,3,1,1,2,3,1,3,2,2,1,2,3,3,0,0,3,3,3,2,3,0,2,1,2,3,3,0,2,3,1,2,3,1,1,1,3,2,0,3,1,2,2,3,2,0,1,0,3,2,2,3,2,3,1,3,1,1,3,2,3,2,3,3,4,3,0,2,3,1,4,3,3,3,0,2,3,3,3,2,3,3,2,2,0,5,2,3,2,1,1,0,2,2,3,3,1,1,2,2,0,1,3,2,2,1,1,1,4,1,1,3,2,2,3,3,1,2,0,4,2,3,1,0,2,1,2,3,2,2,3,0,3,1,3,3,3,2,2,2,3,1],\"quality\":[5,5,4,5,5,5,5,5,2,5,5,3,5,5,5,4,5,4,5,5,5,5,5,4,5,4,5,4,5,5,5,5,3,3,5,4,5,5,5,5,4,5,5,5,4,5,4,5,5,5,5,1,5,5,5,5,5,5,5,5,3,5],\"rators\":[\"buX4mCQhtXCfBjeno\",\"8PwfYqoDQFThzNtvf\",\"55RQznnuTGpsj3EXd\",\"Yp7uvStL97cC9fKkY\",\"s5M5RvgqR9BhB9JoC\",\"p8qqFdJ3FSk5x9z3G\",\"QRv96jmNaYsWkxQEG\",\"iS5BrkGLzJyPK7nKt\",\"3LiSLdtN58n46NEqg\",\"gXTAie79kiw28tx5u\",\"yr822PZmmiDDenxpB\",\"q2tzvkrLASvSjkek9\",\"no46qNkTbNeHepe64\",\"27jqdQJjg6GGa5iQb\",\"ZpBgrwTp3p7HyncSu\",\"6eXHgiJEPTTeZbKDx\",\"sbJcFfQjQ59Wfg4Cd\",\"MKT7khMBGXzA22ykf\",\"PtSLjkm9uLGH2MYys\",\"n2BRY9X8899dcG8Bw\",\"xn7uGNKeAwPEkP9oA\",\"fznzd3qnvtbFkkizz\",\"a777e8chPvJkY3tKa\",\"AXJXCAjdQkJAkBrom\",\"No7ETReQT6EP7LjGc\",\"RsQF9xJacFw2aa8PZ\",\"8AXckg4BPY35RiwYX\",\"Jqk2uJZZxEv5wZFze\",\"CePYGWKYmfoESNW7P\",\"PtaiHYXnMwb2rWqQW\",\"hnyhBFWwNCz9mDfSi\",\"fSQSHjW3e72MrWxbD\",\"gJbejER8FKm3d8fwQ\",\"tC332jRGtZPHb5ik4\",\"RhWecL96F9KJgrFwn\",\"udcPRYfw56v2kJ5C8\",\"8nE8QHnFYsHCFebte\",\"cAP3n5NY64uoMwzRR\",\"ptB4TDicr5z2ottG5\",\"KbpBK7pXgKksJRT9j\",\"gb9rvGus2Jv7bjZSs\",\"H2HZWt2JddH8S6rDH\",\"w2HhxvSLmDhaGCAjE\",\"7B8zugaWFXFg2MeE3\",\"SGhhx7beq5WjiPsPN\",\"GGdmhAvxXhqhhibJN\",\"XNmN6ztj36a7eChbD\",\"PF5fBTvWoQxBaeCPL\",\"ij2sZjwANupatBsPP\",\"GPmrtj9PewFajDtfb\",\"9pzFiFK3ANLjQfnr2\",\"ppxNdL4gjANz8oJLQ\",\"NfMJuiBk6FN5Jc6ow\",\"idSGNmyouo9TvntZF\",\"HF28xZKSLM9wEuqNg\",\"6w4mKKHeXDxqWdTnc\",\"oBcs8GLX2ZFLXQy8y\",\"4RsakkyRXyYGwFxEa\",\"YdHeP5iP5qEJKiKYx\",\"yjtdwc2AC4jA2RWtn\",\"T2vhHPhRR96hRizq8\",\"dMYMtm7e3xtmviTid\",\"y4poEofzbzh832YPJ\",\"uouMMdEWBuLBWPbzr\",\"iYXdNw7tKcgA3QwBX\",\"dSd7wHgXGQeG5BQ2P\",\"926Jx7E4vP4oMvzzN\",\"vSaStog7MuTJtm2Dh\",\"Xztft75meKaNdg3em\",\"MS4DrZX57uEzsCLnw\",\"6QHXQkQAcXMJ7C2kK\",\"gJYuGdkXEWWmGRLzu\",\"8BFSTCnoe2QggN64c\",\"DQskEvAv5KiJDPtGF\",\"gAP6ZXFZnxMQh2LQM\",\"Xk2g4CNFAnYcvxiSr\",\"gjiu8kLnHYxe4HoBN\",\"fBqQjriC4QEtFNxFe\",\"sgGjxDjhMWg23LXZD\",\"KBxTPknCRmB2b5y3i\",\"N9BXxEHaJiRQ8vYeA\",\"j7ebNFtte6fSkMWjj\",\"KDfmGkQoajgNwwAm3\",\"foM3eYbMBQA9WnQnq\",\"tdinF6MRzC6AdNX8g\",\"Cgjd2HotLiSrHuGmv\",\"q6QsMYNMpPNtmyTeW\",\"eHcgvkTGsH7ZziqBo\",\"XHShZ3WMPgGEA2vkR\",\"M8vKpN7JyCQmsq4v5\",\"RK5x6h7Zrne4Pz6dQ\",\"2RT9EPgnapbH8dqsQ\",\"3moxamvvNGxpoLFiq\",\"aFNK5j4AQkjtbBsQH\",\"hnwAkCxT3LsNtsn4R\",\"tZZMoieYzHpxvqq5i\",\"9yztJaNLmznWYQXSM\",\"yfT2efHZk3MyLr7Q5\",\"9jg7HsZgP6d5H87ta\",\"KJCDwGkoXh8qtbbKr\",\"fRfRrzsEDETovTDzT\",\"5dHucvf2qBYyKim7X\",\"CjjpcH9pEQAti4c3L\",\"6BgFbpfcq6sG8ahxa\",\"axdSNLZpiCDF8RS6n\",\"JhX7jvtpwNyxcc39m\",\"6vT2fMrAzSR5cYyri\",\"aFAsA3hv5FovkwswM\",\"XcLyZfKZmH7AzZ9XC\",\"aEhwsznk3tZ2wg5vS\",\"J6kKjNvaGMPNwykwK\",\"igYh2aQt3kqso5uwo\",\"yNSpXQrTaBbJykFdd\",\"kQH5b8MXJunh84Czq\",\"7fJLubRSr5GamKAFz\",\"EEuroQyAhv52srg9i\",\"Eo2EuGyi9ZCb6Yru9\",\"qQQ4hCQpzitmHSkjS\",\"D4WwcMWZNgL6pwGRs\",\"BJXdvP3TxJ69E9wkF\",\"hkiz2Nv927cYGrA86\",\"SzAvJ93idxj5NFnsJ\",\"GfgzN8Qok883g5Jkj\",\"mmt7jwqbmSjzRSvqh\",\"ojX2zaGwv6czoehft\",\"8JyqsSbN2FJXPr3cw\",\"XtgTJNxw5XG8ouJjG\",\"yLuaweZ4rkrabfELB\",\"d8qtzoLB264iP8tdY\",\"Lj6Ksg99gd6EvJJWK\",\"TePz42wc3ZZ5CKA6L\",\"L3esWnKaSLDzrKJyk\",\"kWFMzBkgH8SBQtiX3\",\"u5u2YpHXiNgzDNJdX\",\"XZTTdkP97NZzDwHEJ\",\"cR3ibTMxLyEdDFCHY\",\"nc7bRhkxgKyqusYe3\",\"mfm3gB39arY8Rjb2y\",\"K6MfKMytoJJuSGewP\",\"9FCeFzjPA4jrQ7oHW\",\"9ivvGvJGvtQfigQaZ\",\"Nb6LYPoQP6KJZt8mz\",\"iojEnnY9FsMfYzp6f\",\"FEYpu9RWysAgW3XnP\",\"yyo6YLQN2of6fxp49\",\"2PufnQcsHsfymufX3\",\"yMfpc4AFBxD8jL5iB\",\"Wpn95NqWxncQrwNgz\",\"tAF9Gf6PiGogbZuWs\",\"Jg8ZSRXe3NoDMCqGu\",\"J3upzLHuEwXH7Z2hx\",\"YcCLwitFMAEJSnxAW\",\"mtRvHDpeLoSGBf8zC\",\"GTKsdeEihE636Le9i\",\"PytNZK9mNiRiZxPrm\",\"T6iBEE2jp7f7iEF2P\",\"J5T8gZqiZXFuFDTQ7\",\"AasGs8AeX9Lcb9xJn\",\"DEDniTrstQYGounXT\",\"4Lwjr34ypKNQNQCar\",\"KACjjdKDL97rBTyEK\",\"JKb5rhL6DKcCAypF9\",\"ADycYubh8WTMCXhgR\",\"qD2LrwaDrSdiybLKY\",\"HqmxnQJM66Y57twhn\",\"LQxof8pGabGuWP7Gn\",\"3KkyQm77zsew58Dc2\",\"ctbThYbufFCYbRK4f\",\"AQSqD9oNv2uPfxZCR\",\"qzXAMXsHZGT8o5hTA\",\"o4ixjQGSaYqA2JoM4\",\"jWbd7SYDzLPjc9EDh\",\"nQRzZKeDKuLRf9chX\",\"gKnWjDjwrJh7MK2df\",\"5HCu9Ydd86QgHDRNP\",\"RoGGD5cpHb4ftdLDv\",\"jCjCvyhqhpebkJn34\",\"ey3CASd6Je5LEJzfB\",\"nkH3HfJXLMNcBMM79\",\"mvJBakQ35CWAnbbEZ\",\"8sNv5PTHa7XQ8bNqR\",\"5QN8R22z43SrwoHDz\",\"StNu7DPyTgEStZsMY\",\"9gJsF5apWJGWZJprn\",\"JAj6bN4pTppKmannv\",\"qmtoFxLkGDQMwcBr6\",\"4RY3zj9C2t8GGefhi\",\"Ds7L5bksw2QRHjrKL\",\"yod5YhKtPqw2GfG9B\",\"PNKQHXBQEWZ8x95M4\",\"mw9464S5dnenqzvpm\",\"TPrfNreYTj6pQQBh7\",\"Qyfyyw6oC4EHAndzo\",\"BrTDhPJcACL2bsrpJ\",\"9o6BSewaccz5zFBrp\",\"aEm3Wvj2rFYRL8Lrb\",\"fbr22rabEJMfBp7vD\",\"3Kgtr8FytbE9FnJxH\",\"qB6KSTYC6H2TQEQY6\",\"FNi2H5fKc5EAQ2Hcq\",\"jkbavR2ATFJcpmo8M\",\"etoxSpG4fGKThLozM\",\"RbRoa7RJ5nEooSYd7\",\"nWFX7WpqFGKcyDDaR\",\"CHvzhtXnv8HTbPQ56\",\"RZejvpBSigGCH9FRS\",\"m7kMANAKbQxHfueLC\",\"CvgNamixBpiG4vLYw\",\"g5dP3rGGK4QSypC4k\",\"a4Ln97CHxc8W6dzbq\",\"jR257diPYm9Zhcziv\",\"mm5evQZF6g4FytfZS\",\"2HfNkb2SoqdyjKW3o\",\"XdaQbHty4sZkvopco\",\"3nied3n8KG8RSNixH\"],\"total\":237},\"flags\":0},\"summary\":\"Create a function that returns the whole of the first sentence which contains a specific word. Include the full stop at the end of the sentence.\\n\\nExamples\\ntxt = \\\"I have a cat. I have a mat. Things are going swell.\\\"\\n\\nsentence_searcher(txt, \\\"have\\\") ➞ \\\"I have a cat.\\\"\\n\\nsentence_searcher(txt, \\\"MAT\\\") ➞ \\\"I have a mat.\\\"\\n\\nsentence_searcher(txt, \\\"things\\\") ➞ \\\"Things are\",\"tags\":[\"strings\",\"regex\",\"loops\"],\"timestamp\":{\"$date\":1609762781141},\"title\":\"Sentence Searcher\",\"family\":[{\"_id\":\"sN4AyHEKAXvDcnrLJ\",\"language\":\"cpp\"},{\"_id\":\"mPJzNuYJoJmMiAWhh\",\"language\":\"java\"},{\"_id\":\"cLpDSS2HwAq86wgyv\",\"language\":\"javascript\"},{\"_id\":\"Q72X3J8jq7SzSSXui\",\"language\":\"python3\"},{\"_id\":\"qq4ChsrHWDsg9sXDb\",\"language\":\"ruby\"}]}}"]