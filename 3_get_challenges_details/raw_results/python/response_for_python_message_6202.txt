a["{\"msg\":\"result\",\"id\":\"1810\",\"result\":{\"_id\":\"mJpjpgxkxvTY4Qbwf\",\"author\":\"erazor\",\"authorId\":\"MfKe55snfKsdnDejs\",\"code\":\"def bingo_check(board):\\n\\t\",\"difficulty\":2.5324675324675323,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"mL5FdtfgrX39aMQFS\",\"instructions\":\"Create a function that takes a 5x5 2D list and returns `True` if it has at least one Bingo, and `False` if it doesn't.\\n\\n### Examples\\n```\\nbingo_check([\\n  [45, \\\"x\\\", 31, 74, 87],\\n  [64, \\\"x\\\", 47, 32, 90],\\n  [37, \\\"x\\\", 68, 83, 54],\\n  [67, \\\"x\\\", 98, 39, 44],\\n  [21, \\\"x\\\", 24, 30, 52]\\n]) ➞ True\\n\\nbingo_check([\\n  [\\\"x\\\", 43, 31, 74, 87],\\n  [64, \\\"x\\\", 47, 32, 90],\\n  [37, 65, \\\"x\\\", 83, 54],\\n  [67, 98, 39, \\\"x\\\", 44],\\n  [21, 59, 24, 30, \\\"x\\\"]\\n]) ➞ True\\n\\nbingo_check([\\n  [\\\"x\\\", \\\"x\\\", \\\"x\\\", \\\"x\\\", \\\"x\\\"],\\n  [64, 12, 47, 32, 90],\\n  [37, 16, 68, 83, 54],\\n  [67, 19, 98, 39, 44],\\n  [21, 75, 24, 30, 52]\\n]) ➞ True\\n\\nbingo_check([\\n  [45, \\\"x\\\", 31, 74, 87],\\n  [64, 78, 47, \\\"x\\\", 90],\\n  [37, \\\"x\\\", 68, 83, 54],\\n  [67, \\\"x\\\", 98, \\\"x\\\", 44],\\n  [21, \\\"x\\\", 24, 30, 52]\\n]) ➞ False\\n```\\n\\n### Notes\\nOnly check for diagnols, horizontals and verticals.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(bingo_check([\\n\\t[45, \\\"x\\\", 31, 74, 87],\\n\\t[64, \\\"x\\\", 47, 32, 90],\\n\\t[37, \\\"x\\\", 68, 83, 54],\\n\\t[67, \\\"x\\\", 98, 39, 44],\\n\\t[21, \\\"x\\\", 24, 30, 52]\\n]), True)\\n\\nTest.assert_equals(bingo_check([\\n\\t[\\\"x\\\", 43, 31, 74, 87],\\n\\t[64, \\\"x\\\", 47, 32, 90],\\n\\t[37, 65, \\\"x\\\", 83, 54],\\n\\t[67, 98, 39, \\\"x\\\", 44],\\n\\t[21, 59, 24, 30, \\\"x\\\"]\\n]), True)\\n\\nTest.assert_equals(bingo_check([\\n\\t[37, 16, 84, 51, 33],\\n\\t[64, 12, 47, 32, 90],\\n\\t[\\\"x\\\", \\\"x\\\", \\\"x\\\", \\\"x\\\", \\\"x\\\"],\\n\\t[67, 19, 98, 39, 44],\\n\\t[21, 75, 24, 30, 52]\\n]), True)\\n\\nTest.assert_equals(bingo_check([\\n\\t[45, \\\"x\\\", 31, 74, 87],\\n\\t[64, 78, \\\"x\\\", \\\"x\\\", 90],\\n\\t[37, \\\"x\\\", 68, \\\"x\\\", 54],\\n\\t[67, \\\"x\\\", 98, \\\"x\\\", \\\"x\\\"],\\n\\t[21, \\\"x\\\", 24, 30, 52]\\n]), False)\\n\\nTest.assert_equals(bingo_check([\\n\\t[45, 46, 31, 74, \\\"x\\\"],\\n\\t[64, 78, 80, \\\"x\\\", 90],\\n\\t[37, 81, \\\"x\\\", 55, 54],\\n\\t[67, \\\"x\\\", 98, 34, 77],\\n\\t[\\\"x\\\", 33, 24, 30, 52]\\n]), True)\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[3,3,3,3,3,5,1,1,2,3,1,3,3,2,4,3,3,4,4,2,2,2,4,3,0,1,3,4,3,2,2,1,3,4,2,2,4,4,5,2,4,4,1,3,3,1,0,1,2,4,0,2,2,3,0,4,2,2,0,3,3,3,4,2,2,4,5,4,0,0,4,1,3,2,2,2,4],\"rators\":[\"8PwfYqoDQFThzNtvf\",\"aEm3Wvj2rFYRL8Lrb\",\"bCFecqKyXTCnGgPSc\",\"s5M5RvgqR9BhB9JoC\",\"tAF9Gf6PiGogbZuWs\",\"Ecg4m7srYGgZsb4Ck\",\"ZNgDGdtv5WFkcEn6K\",\"w6vTXcimzf6jEZbh4\",\"8sNv5PTHa7XQ8bNqR\",\"nC4sPB69yYuTSks9T\",\"zZDaXBxMzTCBhNkgL\",\"xn7uGNKeAwPEkP9oA\",\"7sv3XiAcWcTxyxyyK\",\"f2BoqyCpgnmjEjLqx\",\"KZ2xddpM2f9JRaryB\",\"gb9rvGus2Jv7bjZSs\",\"8JyqsSbN2FJXPr3cw\",\"YRzFyQomjuQxgRkqm\",\"mDWNyaaQ9hvPCRzSd\",\"dEuJGZbBQkveCXEFk\",\"4fhjJBvLBWh6QeSih\",\"x4dfavjLEcrvAF3QQ\",\"5dHucvf2qBYyKim7X\",\"5d4gvTKgry3AKFj3M\",\"DNACg4rcgZsPtYGZ8\",\"SvsTKrEmBGPtvTDnz\",\"WzEhzQcMwc4sw8z7T\",\"pPtmnJ7q9QchoG2Jq\",\"P7NmFbCJ5offXMRvB\",\"gJYuGdkXEWWmGRLzu\",\"yjtdwc2AC4jA2RWtn\",\"XjajdyybZZbkz8o5x\",\"xdgy7nWSKCekXnaJM\",\"HF28xZKSLM9wEuqNg\",\"tXcqs5WDEoK3Gie7m\",\"c2u7qfdaYxcyuydtu\",\"8fZxjQfuXw5HMSRJM\",\"N4QjiZzLyunefpXeS\",\"SGhPxX5bHGL8zZqtt\",\"qYDRywWRZdswy4b6e\",\"D62kvgDJ6asnsFaEw\",\"yTtSCvGPyYna6JuRC\",\"uZJqBoqeZRX3RncAR\",\"Lm6ChQCWBmaikmk5J\",\"9FCeFzjPA4jrQ7oHW\",\"iS5BrkGLzJyPK7nKt\",\"ygDJ7HEzRoJZyPEF4\",\"v9KtC8YLbMWmXiW2H\",\"cjN86MMHPvsG3PvdW\",\"J5T8gZqiZXFuFDTQ7\",\"J3upzLHuEwXH7Z2hx\",\"7ifh8r4gvyYMhKB94\",\"2SjDrCMy2grB4bJcm\",\"iojEnnY9FsMfYzp6f\",\"QRv96jmNaYsWkxQEG\",\"eHcgvkTGsH7ZziqBo\",\"55RQznnuTGpsj3EXd\",\"AasGs8AeX9Lcb9xJn\",\"2PufnQcsHsfymufX3\",\"DPi9QGLctq2y76KuE\",\"H9KZi2cjt4FwH7qog\",\"HqmxnQJM66Y57twhn\",\"fznzd3qnvtbFkkizz\",\"8nE8QHnFYsHCFebte\",\"MpfytGFYF77emJ3cT\",\"T6iBEE2jp7f7iEF2P\",\"Yp7uvStL97cC9fKkY\",\"oBcs8GLX2ZFLXQy8y\",\"4RY3zj9C2t8GGefhi\",\"gKnWjDjwrJh7MK2df\",\"en6o48SqvQaxiAuLy\",\"Ctr4PTna6eJK2QDpd\",\"Qg6QXprmAo8DczGL9\",\"x9F5WvWftdnhG7DqT\",\"JfkmfT8QfWGYP99f7\",\"DdHnWE8gjciwCXhSL\",\"JKb5rhL6DKcCAypF9\",\"jWbd7SYDzLPjc9EDh\",\"fbr22rabEJMfBp7vD\",\"6pawEcC7uhWTLD8jQ\",\"euPBBaYXyS8RBr9KB\",\"aFYzioHvZPvPaunsg\",\"suArq5BbSy7gD6xri\",\"d8qtzoLB264iP8tdY\",\"CHvzhtXnv8HTbPQ56\",\"iqmPb9JuJDgTFeR8Q\",\"n2qKKxomPnb4zez5M\",\"f7X4ymW7D3Gfy8Top\",\"uGuS9YRXW2nj4p6zf\",\"RZejvpBSigGCH9FRS\",\"hYfNNvvJRDPE6sy6G\",\"a4Ln97CHxc8W6dzbq\"],\"total\":99,\"quality\":[4,4,5,4,5,5,5,4,5,4,5,5,5,5,5,5,4,5,5,5]},\"flags\":0},\"summary\":\"Create a function that takes a 5x5 2D list and returns True if it has at least one Bingo, and False if it doesn't.\\n\\nExamples\\nbingo_check([\\n  [45, \\\"x\\\", 31, 74, 87],\\n  [64, \\\"x\\\", 47, 32, 90],\\n  [37, \\\"x\\\", 68, 83, 54],\\n  [67, \\\"x\\\", 98, 39, 44],\\n  [21, \\\"x\\\", 24, 30, 52]\\n]) ➞ True\\n\\nbingo_check([\\n  [\\\"x\\\", 43, 31, 74, 87],\\n  [64, \\\"x\\\", 47, 32, 90],\\n  [37, 65, \\\"x\\\", 83, 54],\",\"tags\":[\"arrays\",\"algorithms\",\"conditions\"],\"timestamp\":{\"$date\":1597527335960},\"title\":\"Bingo Check\",\"quality\":4.7,\"family\":[{\"_id\":\"fwXjqY6drw8eLGyfQ\",\"language\":\"javascript\"},{\"_id\":\"mJpjpgxkxvTY4Qbwf\",\"language\":\"python3\"},{\"_id\":\"yw98h7Px27BzCLkMz\",\"language\":\"ruby\"}]}}"]