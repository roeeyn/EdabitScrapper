a["{\"msg\":\"result\",\"id\":\"973\",\"result\":{\"_id\":\"eraBhwF8HkJDAa2pS\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def pirates_killed(gold, tolerance):\\n\\t\",\"difficulty\":1.4929577464788732,\"familyId\":\"3uxAW7ZBgDqTxLR7n\",\"instructions\":\"A group of pirates each have a distribution of gold coins, which can be represented as a list:\\n\\n```\\n[3, 9, 4, 5, 5]\\n# Pirate 1 has 3 gold, Pirate 2 has 9 gold, etc.\\n```\\n\\nThe difference between each pirate's share of gold and that of the richest pirate is represented as:\\n\\n```\\n[6, 0, 5, 4, 4]\\n# Since 6 = 9 - 3, 0 = 9 - 9, 4 = 9 - 5, etc.\\n```\\n\\nPirates have a keen sense of fairness, and a pirate will kill the others if he deems his share to be too little. Each pirate has a **unique inequality threshold** - the maximum difference he is willing to tolerate before he kills his comrades.\\n\\nUsing the above gold distribution:\\n\\n```\\n[5, 0, 5, 5, 5]\\n# Pirates killed, since 5 < 6.\\n# 5 is Pirate 1's inequality distribution and 6 is his gold difference.\\n\\n[7, 0, 5, 5, 5]\\n# Pirate 1 is satisfied, since 7 > 6.\\n# All other pirates are satisfied as well.\\n```\\n\\nGiven a distribution of coins and a list of inequality thresholds, create a function that returns `True` if any pirates are killed, or `False` otherwise.\\n\\n\\n### Examples\\n```\\npirates_killed([3, 5, 8, 3, 4], [10, 4, 2, 5, 5]) ➞ False\\n\\npirates_killed([3, 5, 8, 3, 4], [10, 4, 2, 5, 1]) ➞ True\\n\\npirates_killed([3, 3, 10], [7, 7, 0]) ➞ False\\n\\npirates_killed([3, 3, 10], [6, 6, 0]) ➞ True\\n```\\n\\n### Notes\\n- A pirate kills if the difference in his share of gold from the richest pirate is **strictly greater** than his **inequality threshold**.\\n- Gold and inequality distribution lists are both ordered the same. (e.g. Pirate 1 is index 0 for both lists, Pirate 2 is index 1 for both lists, etc).\",\"lab\":\"Test.assert_equals(pirates_killed([3, 5, 8, 3, 4], [10, 4, 2, 5, 5]), False)\\nTest.assert_equals(pirates_killed([3, 5, 8, 3, 4], [10, 4, 2, 5, 1]), True)\\nTest.assert_equals(pirates_killed([3, 3, 10], [7, 7, 0]), False)\\nTest.assert_equals(pirates_killed([3, 3, 10], [6, 6, 0]), True)\\nTest.assert_equals(pirates_killed([3, 3, 3], [0, 0, 0]), False)\\nTest.assert_equals(pirates_killed([3, 3, 4, 4], [0, 0, 1, 1]), True)\\nTest.assert_equals(pirates_killed([3, 3, 4, 4], [1, 1, 0, 0]), False)\\nTest.assert_equals(pirates_killed([3, 3, 4, 4], [0, 0, 0, 1]), True)\\nTest.assert_equals(pirates_killed([3, 3, 4, 4, 5], [0, 0, 0, 1, 1]), True)\",\"language\":\"python3\",\"summary\":\"A group of pirates each have a distribution of gold coins, which can be represented as a list:\\n\\n[3, 9, 4, 5, 5]\\nPirate 1 has 3 gold, Pirate 2 has 9 gold, etc.\\n\\nThe difference between each pirate's share of gold and that of the richest pirate is represented as:\\n\\n[6, 0, 5, 4, 4]\\nSince 6 = 9 - 3, 0 = 9 - 9, 4 = 9 - 5, etc.\\n\\nPirates have a keen sense of fairness, \",\"tags\":[\"arrays\",\"validation\",\"loops\"],\"timestamp\":{\"$date\":1553026065108},\"title\":\"Gold Distribution\",\"stats\":{\"completed\":{\"total\":253,\"ratings\":[2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,2,1,0,2,1,2,1,2,1,2,2,2,2,2,2,1,2,2,1,2,1,2,1,3,2,2,1,1,1,2,1,1,1,2,0,2,1,1,1,2,2,2,2,0,2,1,2,2,0,1,2,2,2,1,2,1,1,2,1,2,2,1,2,0,2,2,0,1,2,0,1,3,0,2,1,1,2,2,2,0,1,2,2,2,1,2,2,1,0,2,2,2,1,1,2,0,2,0,0,2,2,2,2,0,1,1,2,1,0,1,3,0,2,3,2,0,2,2,2,2,2,2,2,2,0,0,5,2,2,2,2,2,2,1,2,1,1,2,2,1,2,1,1,2,1,2,0,2,1,0,2,1,2,2,3,1,2,2,2,1,1,1,0,2,2,1,0,0,2,2,0,1,1,2,2,2,0,2,0,2,2,3,1,4,2,2,2,2,2,1,2,2,1,2,2,1,0,1],\"rators\":[\"BkPgkDQGHm66X4Qai\",\"Jqk2uJZZxEv5wZFze\",\"gb9rvGus2Jv7bjZSs\",\"qvEvDcL32a5F4Tg6c\",\"yZvzB3qFb8pkHy4dg\",\"SKabuq5XuhXBugKBa\",\"8JyqsSbN2FJXPr3cw\",\"M8jrv2FfpMQp9Qzpx\",\"6W2GSzrYjMD9ANBFY\",\"X9NeqaKpfykoscpYr\",\"nc7bRhkxgKyqusYe3\",\"nZ58gDWFhqXiZpmZQ\",\"uSh3aNxzD28jBuhxa\",\"eq6bWgNCAXLkFj4tx\",\"tAF9Gf6PiGogbZuWs\",\"nQRzZKeDKuLRf9chX\",\"XBmvGz2a28Wtuhj3N\",\"Y3KkPrBzMBgMiqaQ6\",\"mNMQvcxKSSvqqMYCH\",\"T3ZAuoMrJjvZwN55B\",\"FikSPhcrHBpQ4CyGC\",\"AF6LgdKhEdzwgRJom\",\"ab7BsQuhDo3QgE6bh\",\"6ckDJWbyznyQQLkrP\",\"hmJar7wTPM99rX4HB\",\"byHBadxxhnF5Ht7xH\",\"Rgdjr9tBGabXFdoXL\",\"TNQ7ixK78HHTLP7it\",\"PFjMZGHNAPTkgd7tq\",\"ahWFxnaxt9bXSA4f3\",\"tHEH9MBHBAGvhgJGd\",\"DTE6vdqCL8udPnYs3\",\"zjZe8FuGZYPTDLzta\",\"C9LKGu2g5hSijvDzA\",\"XKi8iZXBCHCaebSHh\",\"FHzvDACEZuAjRwL7v\",\"TNMAJidLpPdH4kmBv\",\"PSrcg6fy835R4c5CW\",\"yrCNkFYQBEDE76eFS\",\"JEAi9mG3vvBomJ3Yu\",\"td7qPZ7Lv4pEWT2Ya\",\"nzx4uAPg3hCceyFPE\",\"nfXGHENb5md7m355s\",\"sCnrfER8vCe4xhpB2\",\"gMJhLdyw3tH7L96X2\",\"Nj6FwgBtAXsaQwsM2\",\"yAouD3PxzED8a4gap\",\"3fjCCrpR2aD32sTrc\",\"498CxrZQdThLMa7ki\",\"cR3ibTMxLyEdDFCHY\",\"N2wnZXkhDH86mgjQ8\",\"3LiSLdtN58n46NEqg\",\"HQxp7NcdvF92G7bYS\",\"2fxapKr8XGdNeaKi2\",\"otXtuQygbcYATMZoP\",\"4y2bxsHwifCdZXAQA\",\"jeuoearPPTcGPgXhf\",\"HqmxnQJM66Y57twhn\",\"3SKmXhcLPPkmQhjip\",\"DLai9DxpZN6p5TPRX\",\"u5u2YpHXiNgzDNJdX\",\"K96FwtfDDN5WM4Bb7\",\"ksafdYcNM3SFEQoW9\",\"W4bQNKYzriYRWkGsA\",\"sKfrD9gjCDHuqLzSk\",\"4tgBydK887PitgAoi\",\"8PwfYqoDQFThzNtvf\",\"nL6EAKGywddR3mBs3\",\"qJZsi5rhRnWA38FbA\",\"PhceyfmFntJcn5Fhf\",\"yabtHTtycsWhcGBfD\",\"C4QntmkYtB89GNtpd\",\"fxLjWpWbBeaYcvdgB\",\"Nfi64Lq3Ynfqrxt5P\",\"CEd9tLdXeDeNHSzys\",\"AbrJ8hMyv5fFXG6DN\",\"XbxHXmh5ZmRN2gw3K\",\"DryNRN98Dj24BpgrL\",\"XbwyB44kHPnRgQcrB\",\"Xj6R2zqhgumffQCAN\",\"BeFnbPbMnAM2SjBdZ\",\"K3RacTvkWHLfzKF8i\",\"PXAcsKkssS2yLyDv2\",\"mfsaETo7uA4x5vqLD\",\"2innwjWqxJHo4eRGh\",\"mxX4rH5ELYkdZ2Mbw\",\"rEWQdNHK6YjuBqmrR\",\"4CFzv558qbGcpQwc4\",\"QnPD4Sv6W4LHc2Qng\",\"Ycj4iTJGFyvC4bXek\",\"j2wcHGHmPCHbaQEye\",\"p3dsCFdWGzWGhFrSQ\",\"AasGs8AeX9Lcb9xJn\",\"s5M5RvgqR9BhB9JoC\",\"Z85ajWfZ4jDPkbvR4\",\"hnyhBFWwNCz9mDfSi\",\"pMg2Zddm29zRGP6wg\",\"Yp7uvStL97cC9fKkY\",\"N7GPFEhCaiQ79MKjz\",\"LQxof8pGabGuWP7Gn\",\"9Ly8afdtofp8DXzrt\",\"zg8GmMSP2LkHBtAzy\",\"LA2YneDcbtiSj5SH6\",\"aRqQ42J5zqCmBNd8w\",\"dHZqT6h4JMwk5fPC8\",\"HLMjv9rdpdeJsus4F\",\"sz8ufn9i8zeiGWpAy\",\"jNvegJWCk5HCtEMbK\",\"vLrq4dEDMM2wd68Dc\",\"2QGRoQn2dRq3scu7k\",\"2iFe3EHEH2YdhSKrs\",\"ZNnsMeNkdDhHjSrZb\",\"gJYuGdkXEWWmGRLzu\",\"HF28xZKSLM9wEuqNg\",\"9uZpgAtSuPZ7W7DL6\",\"KRSKj7ikX2ytWFmod\",\"eLkj3Zb2DqiW4AEEh\",\"aEm3Wvj2rFYRL8Lrb\",\"Cc2Cgj4MWXZxsTooC\",\"kYWb8BwpKwunQkxeX\",\"DEDniTrstQYGounXT\",\"9pzFiFK3ANLjQfnr2\",\"FEYpu9RWysAgW3XnP\",\"uiEuENARwFpnNMfFs\",\"MKT7khMBGXzA22ykf\",\"DwetpbChQM4r6Gwah\",\"8LfTheFzvicameoz9\",\"rgvAJFwfCeYoYnFTK\",\"FzxTj4GuujhwpZM7y\",\"Nua6T3dBurBy3Qfg9\",\"ahk2qiXKJA753wAJk\",\"4rwxLqLs2mNZNg8NB\",\"J5T8gZqiZXFuFDTQ7\",\"XrqNzJ2FRG8HnGiR6\",\"a777e8chPvJkY3tKa\",\"2ptN2mhjFwFcHyPZd\",\"4yNLEwL2rsx4EE5Nt\",\"H4abACFDH5t8CnnyH\",\"NG8PWBSjsM8mMhQEq\",\"3cF6NXq3ZEwdkgSjb\",\"ZrKCkX7xxGGZzauFW\",\"tKnkicH9a8mjzeMxG\",\"syRNbbPdLCGXbH2Gy\",\"iojEnnY9FsMfYzp6f\",\"YcCLwitFMAEJSnxAW\",\"NNE5HNRXAkmhrWgyQ\",\"CwXsu25ygLEwQbmQC\",\"Pe8vWpDHRuH9nSGKW\",\"pWYjN62ZAKQZ7Xp3W\",\"R4SjTgDnpigJYDLyL\",\"yjtdwc2AC4jA2RWtn\",\"oBcs8GLX2ZFLXQy8y\",\"hRiMXDZNAzyPd5tpt\",\"ta5CrWnBCRusD2WMo\",\"YA7SDhpgEtsqynvNL\",\"RehJGBFS6CYiWdjZx\",\"Nb6LYPoQP6KJZt8mz\",\"p8qqFdJ3FSk5x9z3G\",\"TPhfpB5tzQWSSn67n\",\"KLmLKaJPfsYxp42p2\",\"k2Eo3wyfZZ6KxvKhN\",\"tpxMgkGSHwBjS95Ta\",\"mG8HqKiAQFTdRZthG\",\"EMJ6uvBZkie429gdg\",\"7K2GEb5TZRtSpyyGS\",\"9CoqdidjM9KbeKnHY\",\"DPi9QGLctq2y76KuE\",\"5HCu9Ydd86QgHDRNP\",\"wRttWTM59y8m5mx7x\",\"QRv96jmNaYsWkxQEG\",\"dj5AyG5fWP8FdsSmZ\",\"8WpvgSbQciTQWdd8T\",\"dBzwBtRjZqB98DJeB\",\"J3upzLHuEwXH7Z2hx\",\"cAP3n5NY64uoMwzRR\",\"dYPkStFnLvAMsHSzZ\",\"8fZxjQfuXw5HMSRJM\",\"8BFSTCnoe2QggN64c\",\"RGMbFMZXJr7DhcAJy\",\"d8qtzoLB264iP8tdY\",\"Ecg4m7srYGgZsb4Ck\",\"axdSNLZpiCDF8RS6n\",\"5XiuAqicKD4hBdu63\",\"sHjfbGQGLHE6JR6qu\",\"4fjSgcqhQQZM2ZFRP\",\"C2AfMipCicfD58WJ9\",\"JS3hNM3XXkxPdg3yk\",\"HuNF3xTBzmatyGSTm\",\"yBEJEogA2A4893pLL\",\"iS5BrkGLzJyPK7nKt\",\"R29kgJ9M7R4qqwjcE\",\"buX4mCQhtXCfBjeno\",\"eYfPWvZwnJQkHbSTK\",\"NzbRqGWspQnWMoDrF\",\"5S9nX4rKsnCcnv4Cz\",\"GGdmhAvxXhqhhibJN\",\"5hQnRWiKkhgKJXNMP\",\"utTuvGdmu2sBHWBhQ\",\"Ds7L5bksw2QRHjrKL\",\"qZQxPQ2kaNKAMesHT\",\"4RsakkyRXyYGwFxEa\",\"CHvzhtXnv8HTbPQ56\",\"T6iBEE2jp7f7iEF2P\",\"ey3CASd6Je5LEJzfB\",\"srJ34BaybkQh3qRkM\",\"66a9xX73nmTEuKs9k\",\"XD5nmvKQchKezPXhy\",\"JhX7jvtpwNyxcc39m\",\"AFfw7cGg83uYk2Miy\",\"EfxwqhYdapX3dMQC2\",\"PC3pLs36zNzpRDSuE\",\"yod5YhKtPqw2GfG9B\",\"BrTDhPJcACL2bsrpJ\",\"c2q7mY39z5JPEMCaM\",\"mvJBakQ35CWAnbbEZ\",\"eHcgvkTGsH7ZziqBo\",\"R6YxHWAiLgKwy5YvC\",\"rrSC943cCKNG48sH4\",\"K6MfKMytoJJuSGewP\",\"2PufnQcsHsfymufX3\",\"RoGGD5cpHb4ftdLDv\",\"tdfY4iBvD7oh2ufnN\",\"pduNK68oazqQTtbLp\",\"hR7GMiqGap4CzEWSy\",\"X4rzfxGgxx6CS7Bpz\",\"4TmgHkn5vqyHK3sYC\",\"dzS6WBTMHyFEag6Fp\",\"wjc4iejpErBhxWwHo\",\"8LqTJugTk5Sn2ZAS7\",\"uGuS9YRXW2nj4p6zf\",\"5QN8R22z43SrwoHDz\",\"Wi4H6ayKsNDWWQCG5\"],\"quality\":[1,4,5,5,3,5,5,5,4,5,5,5,5,5,5,5,5,5,5,4,5,3,5,1,5,5,4,5]},\"tests\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"instructions\":{\"score\":-66.1,\"rators\":[\"BkPgkDQGHm66X4Qai\"],\"voters\":[\"QjGNkRM3Xc78yShJN\"]},\"flags\":0},\"isHidden\":false,\"quality\":4.428571428571429,\"family\":[{\"_id\":\"sszPMgm85fE2iusd9\",\"language\":\"cpp\"},{\"_id\":\"KNjaveTsz3PQiHa8w\",\"language\":\"javascript\"},{\"_id\":\"eraBhwF8HkJDAa2pS\",\"language\":\"python3\"},{\"_id\":\"emaJF8zsptyRPTdHh\",\"language\":\"ruby\"}]}}"]