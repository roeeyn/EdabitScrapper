a["{\"msg\":\"result\",\"id\":\"406\",\"result\":{\"_id\":\"2iETeoJq2dyEmH87R\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"def count_digits(n, d):\\n\\t\",\"difficulty\":0.7622950819672131,\"familyId\":\"N6KxvbuQ936Yk56TR\",\"instructions\":\"**Mubashir** needs your help to count a specific digit in a list.\\n\\nYou have to create a function that takes two integers `n` and `d` and makes a list of squares of all numbers from **0...<= n** and returns the **count** of the digits `d` in the list.\\n\\n### Examples\\n```\\ncount_digits(10, 1) ➞ 4\\n# Squared list from 0 to 10 = [0, 1, 4, 9, 16, 25, 36, 49, 64, 81, 100]\\n# Digit 1 appeared 4 times in the list.\\n\\ncount_digits(25, 2) ➞ 9 \\n\\ncount_digits(10, 1) ➞ 4\\n```\\n\\n### Notes\\n`d` will always be 0<=d<10.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(count_digits(10, 1), 4)\\nTest.assert_equals(count_digits(25, 2), 9)\\nTest.assert_equals(count_digits(17, 3), 1)\\nTest.assert_equals(count_digits(5750, 0), 4700)\\nTest.assert_equals(count_digits(11011, 2), 9481)\\nTest.assert_equals(count_digits(12224, 8), 7733)\\nTest.assert_equals(count_digits(11549, 1), 11905)\\nTest.assert_equals(count_digits(14550, 7), 8014)\\nTest.assert_equals(count_digits(8304, 7), 3927)\\nTest.assert_equals(count_digits(10576, 9), 7860)\\nTest.assert_equals(count_digits(12526, 1), 13558)\\nTest.assert_equals(count_digits(7856, 4), 7132)\\nTest.assert_equals(count_digits(14956, 1), 17267)\\n# Mubashir\",\"language\":\"python3\",\"quality\":4.794117647058823,\"summary\":\"Mubashir needs your help to count a specific digit in a list.\\n\\nYou have to create a function that takes two integers n and d and makes a list of squares of all numbers from 0...<= n and returns the count of the digits d in the list.\\n\\nExamples\\ncount_digits(10, 1) ➞ 4\\nSquared list from 0 to 10 = [0, 1, 4, 9, 16, 25, 36, 49, 64, 81, 100]\\nDigit 1 appeared 4 times\",\"tags\":[\"logic\",\"math\",\"numbers\",\"loops\"],\"timestamp\":{\"$date\":1610956094634},\"title\":\"Simple Counting\",\"stats\":{\"completed\":{\"total\":162,\"ratings\":[1,1,1,1,1,1,1,0,0,1,1,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,5,0,2,2,1,0,0,1,0,1,0,0,1,0,0,1,0,0,2,0,0,0,1,3,0,0,1,2,0,1,1,0,0,0,0,1,0,0,2,0,0,0,2,0,0,1,2,0,2,0,2,0,0,0,0,0,1,2,0,0,0,1,2,0,2,1,1,1,1,0,1,1,0,1,0,0,2,0,1,1,2,3,3,3,2,3,3,1,0,1,2,0,0,1,1],\"quality\":[4,5,5,5,5,5,5,5,5,5,4,5,4,5,5,5,5,5,5,5,1,5,5,5,5,5,5,5,5,5,5,5,5,5],\"rators\":[\"T6iBEE2jp7f7iEF2P\",\"Lm6ChQCWBmaikmk5J\",\"LfR9Bopm57BMNNnkp\",\"eYfPWvZwnJQkHbSTK\",\"PXAcsKkssS2yLyDv2\",\"Ds7L5bksw2QRHjrKL\",\"HBuJYgW2eRBJp9FoG\",\"Jqk2uJZZxEv5wZFze\",\"iS5BrkGLzJyPK7nKt\",\"ghMkPtdFCpM6w8nax\",\"srJ34BaybkQh3qRkM\",\"yjtdwc2AC4jA2RWtn\",\"DEDniTrstQYGounXT\",\"QRv96jmNaYsWkxQEG\",\"wRttWTM59y8m5mx7x\",\"FEYpu9RWysAgW3XnP\",\"fTNQmMvTZhhiGBCMe\",\"3cF6NXq3ZEwdkgSjb\",\"LCuvvWMwiGuqTwNRi\",\"5HCu9Ydd86QgHDRNP\",\"DPi9QGLctq2y76KuE\",\"eMuCpJ2spXWkJjWNz\",\"J5T8gZqiZXFuFDTQ7\",\"XD5nmvKQchKezPXhy\",\"oBcs8GLX2ZFLXQy8y\",\"rfyEkETeoS96QNH4e\",\"gb9rvGus2Jv7bjZSs\",\"JS3hNM3XXkxPdg3yk\",\"AFfw7cGg83uYk2Miy\",\"N2wnZXkhDH86mgjQ8\",\"AXcnPX68zdMiLNSmu\",\"7dQYiDeTcMztbGyso\",\"cR3ibTMxLyEdDFCHY\",\"gJYuGdkXEWWmGRLzu\",\"YcCLwitFMAEJSnxAW\",\"buX4mCQhtXCfBjeno\",\"uvLimfW9x3bCp7huQ\",\"YRAzEBJoLvSaiPtYx\",\"J3upzLHuEwXH7Z2hx\",\"zd9FLSzsGz3evKafy\",\"pPpmP7xeJzGgK362R\",\"PC3pLs36zNzpRDSuE\",\"gjiu8kLnHYxe4HoBN\",\"8PwfYqoDQFThzNtvf\",\"GdKtjPh8TcfmJuduv\",\"8JyqsSbN2FJXPr3cw\",\"qAby4AWXmTNeusvg3\",\"2QGRoQn2dRq3scu7k\",\"q6QsMYNMpPNtmyTeW\",\"s5M5RvgqR9BhB9JoC\",\"oaJbwGAbtpgYhMEgd\",\"4bb7pim4ewTwrMTEA\",\"Yp7uvStL97cC9fKkY\",\"DFpZcskPncmo7fuzR\",\"fdyejapW3NWN7utPX\",\"pwWtbXEjzuvrhEGwt\",\"zC8WrPp5BC6c2exrW\",\"CHvzhtXnv8HTbPQ56\",\"NrRa4TS6uZR9xuXRt\",\"iojEnnY9FsMfYzp6f\",\"kjvgTyRFyKHv44DcH\",\"9qoWqLcHGiDX429rE\",\"Q6gEE9dG8ERy2Xu3c\",\"i5iePG5GqhJJ8HEoB\",\"66a9xX73nmTEuKs9k\",\"mxX4rH5ELYkdZ2Mbw\",\"XrqNzJ2FRG8HnGiR6\",\"sbJcFfQjQ59Wfg4Cd\",\"tAF9Gf6PiGogbZuWs\",\"4TmgHkn5vqyHK3sYC\",\"Cg3LKtEAJpsrdWroG\",\"8teSHp77vHhhvJWiS\",\"RTER5uJdW4khkiNbY\",\"9Ly8afdtofp8DXzrt\",\"iYXdNw7tKcgA3QwBX\",\"MXGuntvz3byrP6WJc\",\"mvJBakQ35CWAnbbEZ\",\"Fk9kLwoG4Brf4KsKf\",\"a2Kmh6ekWqQQooHiQ\",\"PAzNgJF54C2mYPkR9\",\"T6Rm8mREPMZSftzrC\",\"aEm3Wvj2rFYRL8Lrb\",\"KEmTti9Tza8A2FLQW\",\"H9KZi2cjt4FwH7qog\",\"jkbavR2ATFJcpmo8M\",\"x2Cz7S8rCKJqCE3Xe\",\"JiSpvq6C7azQEmENc\",\"M2gFMJkocQSY6bsFR\",\"jWbd7SYDzLPjc9EDh\",\"DTyNcDkiScCjgJt28\",\"hRfdHT8bWztZuCqzi\",\"j7ebNFtte6fSkMWjj\",\"2MjzJ7yxh3eT3xbng\",\"sHjfbGQGLHE6JR6qu\",\"AasGs8AeX9Lcb9xJn\",\"kqYkfcZMkp5u2EdXZ\",\"yAouD3PxzED8a4gap\",\"EfxwqhYdapX3dMQC2\",\"9pzFiFK3ANLjQfnr2\",\"hZ2JDAEG2P5rMLWEW\",\"FiaTpm7ehfDv43wSG\",\"MKT7khMBGXzA22ykf\",\"HqmxnQJM66Y57twhn\",\"C9LKGu2g5hSijvDzA\",\"LQxof8pGabGuWP7Gn\",\"u7i7WPM63n42r8R8o\",\"TCvpT4EPb8qNssNB7\",\"Afnps7TJQuS9sipMb\",\"XbxHXmh5ZmRN2gw3K\",\"gKnWjDjwrJh7MK2df\",\"54BFnXEjY3FuRNYpN\",\"PTDFuxAzou7W6asWt\",\"pQwhNKiCne4gEZgcn\",\"cdXmwjupCXSvJTSNo\",\"FRN2W8RYpJ6GPhgRy\",\"SkQcb2sRn4as5KpnN\",\"syRNbbPdLCGXbH2Gy\",\"dYPkStFnLvAMsHSzZ\",\"2xpSZZC6qAxYaNMpf\",\"d9LBRxvADNBB5QJMB\",\"Dq24MSpogRmq6L4hX\",\"D2CbScTZv3zAofX89\",\"9LrF5o2TK2iE8BZJh\",\"qaPjAANdnxFnWfj5d\",\"5QN8R22z43SrwoHDz\",\"B4y8aoyXJtskYPFEL\",\"PBnvAuiKXwjqjKG33\",\"5nbHH4eApn6So9h2n\",\"dzS6WBTMHyFEag6Fp\",\"rhS8qXRjZcpDXkwnE\",\"wjc4iejpErBhxWwHo\",\"PmRyaLmhAF4MMLBtM\",\"rF97GDLqCgynr7BaD\",\"afvP29FhRou2bTaav\",\"mw9464S5dnenqzvpm\",\"vAbK8sCfKyFC78HYg\",\"Ne8mK9DDHG8TRkoxG\",\"RjTaJyN5t3obSe5T4\",\"Zyg9xAm6EuH4u3Lo5\",\"cWB2wnn3fpbwtKJXe\",\"SEerPuQRh8ctQYXT2\",\"2RapTfFSRMqJ2k7A8\",\"bLddgnAy6QgLtZyQ6\",\"fMp8sPsKSECdfgF9j\",\"QN4FPwhiak7Pf8kn6\",\"rrSC943cCKNG48sH4\",\"r83jJeskFETo3RLhZ\",\"Wi4H6ayKsNDWWQCG5\",\"mdRQaGT98ycMt87S2\",\"sMcFMPkMJC4Kh6ymj\",\"7HAL7H6NJmc4NC8Q5\"]},\"flags\":2},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"w8fhawaKqsosY7mSy\",\"language\":\"cpp\"},{\"_id\":\"TTdGudimT4HSyrEhC\",\"language\":\"javascript\"},{\"_id\":\"C7MwkjYDsexBdoPvH\",\"language\":\"php\"},{\"_id\":\"2iETeoJq2dyEmH87R\",\"language\":\"python3\"},{\"_id\":\"PE5B7AEqNL8jmTugA\",\"language\":\"ruby\"}]}}"]