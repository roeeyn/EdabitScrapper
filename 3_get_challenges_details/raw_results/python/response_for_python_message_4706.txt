a["{\"msg\":\"result\",\"id\":\"1069\",\"result\":{\"_id\":\"CqNoAPcQrckobTacs\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"def missing_letter(lst):\\n\\t\",\"difficulty\":1.5577557755775577,\"familyId\":\"9PXLWjCYdZtx6RQbp\",\"instructions\":\"Create a function that takes a list of increasing letters and return the missing letter.\\n\\n### Examples\\n```\\nmissing_letter([\\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"e\\\", \\\"f\\\", \\\"g\\\"]) ➞ \\\"d\\\"\\n\\nmissing_letter([\\\"O\\\", \\\"Q\\\", \\\"R\\\", \\\"S\\\"]) ➞ \\\"P\\\"\\n\\nmissing_letter([\\\"t\\\", \\\"u\\\", \\\"v\\\", \\\"w\\\", \\\"x\\\", \\\"z\\\"]) ➞ \\\"y\\\"\\n\\nmissing_letter([\\\"m\\\", \\\"o\\\"]) ➞ \\\"n\\\"\\n```\\n\\n### Notes\\n- Tests will always have exactly one letter missing.\\n- The length of the test list will always be at least two.\\n- Tests will be in one particular case (upper or lower but never both).\",\"lab\":\"Test.assert_equals(missing_letter([\\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"e\\\", \\\"f\\\", \\\"g\\\"]), \\\"d\\\")\\nTest.assert_equals(missing_letter([\\\"O\\\", \\\"Q\\\", \\\"R\\\", \\\"S\\\"]), \\\"P\\\")\\nTest.assert_equals(missing_letter([\\\"t\\\", \\\"u\\\", \\\"v\\\", \\\"w\\\", \\\"x\\\", \\\"z\\\"]), \\\"y\\\")\\nTest.assert_equals(missing_letter([\\\"m\\\", \\\"o\\\"]), \\\"n\\\")\\nTest.assert_equals(missing_letter([\\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"d\\\", \\\"e\\\", \\\"f\\\", \\\"g\\\", \\\"h\\\", \\\"j\\\", \\\"k\\\", \\\"l\\\", \\\"m\\\", \\\"n\\\", \\\"o\\\", \\\"p\\\", \\\"q\\\", \\\"r\\\", \\\"s\\\", \\\"t\\\", \\\"u\\\", \\\"v\\\", \\\"w\\\", \\\"x\\\", \\\"y\\\", \\\"z\\\"]), \\\"i\\\")\\nTest.assert_equals(missing_letter([\\\"q\\\", \\\"s\\\", \\\"t\\\"]), \\\"r\\\")\\nTest.assert_equals(missing_letter([\\\"c\\\", \\\"d\\\", \\\"e\\\", \\\"f\\\", \\\"g\\\", \\\"h\\\", \\\"i\\\", \\\"k\\\", \\\"l\\\", \\\"m\\\", \\\"n\\\"]), \\\"j\\\")\\nTest.assert_equals(missing_letter([\\\"e\\\", \\\"f\\\", \\\"g\\\", \\\"h\\\", \\\"i\\\", \\\"j\\\", \\\"k\\\", \\\"m\\\", \\\"n\\\", \\\"o\\\", \\\"p\\\"]), \\\"l\\\")\\nTest.assert_equals(missing_letter([\\\"t\\\", \\\"u\\\", \\\"w\\\", \\\"x\\\"]), \\\"v\\\")\\nTest.assert_equals(missing_letter([\\\"B\\\", \\\"D\\\"]), \\\"C\\\")\",\"language\":\"python3\",\"summary\":\"Create a function that takes a list of increasing letters and return the missing letter.\\n\\nExamples\\nmissing_letter([\\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"e\\\", \\\"f\\\", \\\"g\\\"]) ➞ \\\"d\\\"\\n\\nmissing_letter([\\\"O\\\", \\\"Q\\\", \\\"R\\\", \\\"S\\\"]) ➞ \\\"P\\\"\\n\\nmissing_letter([\\\"t\\\", \\\"u\\\", \\\"v\\\", \\\"w\\\", \\\"x\\\", \\\"z\\\"]) ➞ \\\"y\\\"\\n\\nmissing_letter([\\\"m\\\", \\\"o\\\"]) ➞ \\\"n\\\"\\n\\nNotes\\nTests will always have exactly one letter missing.\\nThe length of the te\",\"tags\":[\"math\",\"arrays\",\"algorithms\"],\"timestamp\":{\"$date\":1539837699813},\"title\":\"Find the Missing Letter\",\"stats\":{\"completed\":{\"total\":349,\"ratings\":[2,2,2,2,2,2,2,2,2,2,2,2,1,1,2,2,2,2,1,3,2,1,0,1,1,3,2,2,2,1,3,2,0,2,1,2,2,1,2,2,3,2,2,1,2,2,1,2,2,2,1,2,1,2,1,2,1,3,2,2,3,1,2,1,1,2,2,2,1,1,2,2,2,2,2,2,1,2,2,1,2,2,2,2,0,0,2,2,2,2,2,2,2,2,2,0,1,0,1,0,0,0,2,0,1,2,1,1,2,2,1,2,1,2,2,1,2,0,2,0,2,2,0,2,1,2,0,1,1,2,1,1,2,2,0,2,0,2,1,2,2,2,2,2,1,2,1,2,1,2,2,2,2,2,0,1,1,0,1,2,2,2,1,2,0,2,2,1,1,1,2,2,2,1,1,2,1,2,2,2,2,1,1,0,2,1,3,2,2,2,1,2,1,2,0,1,2,2,2,2,1,2,2,2,2,1,2,2,0,1,0,0,3,2,2,1,1,0,2,3,2,1,2,2,3,2,2,2,2,1,2,1,2,2,1,1,0,1,2,2,2,2,1,1,2,2,1,2,2,2,3,2,2,2,1,3,2,1,2,0,2,0,1,0,2,5,2,0,0,2,2,2,2,3,1,0,0,2,2,1,2,2,1,1,0,2,2,2,2,0,2,2,2,1,2,2,2,1,2,1,2,1,2],\"rators\":[\"BkPgkDQGHm66X4Qai\",\"tAF9Gf6PiGogbZuWs\",\"X69wFgeiQAWv8qiyP\",\"M8jrv2FfpMQp9Qzpx\",\"THD2EHgtJa2ooivJK\",\"sugzbfJyLjWxmx2pq\",\"6fJpRpAgiWD5zX9qB\",\"Qm7WibLuCP7hW3iXi\",\"D32R5fY5utpwKbxjr\",\"7CwgH38hHpiGdu2zT\",\"mJvkMXND2BjRvtped\",\"hxJTBdF9sjMGFZHgx\",\"T82JyZFPNz8maF8f8\",\"nSMKW77QrS4SGf5DP\",\"QgdwHjy4x6MCPwfh9\",\"ryaZfLRboC9hB5EM9\",\"SK3kJggzuets9AFj6\",\"jeuoearPPTcGPgXhf\",\"nc7bRhkxgKyqusYe3\",\"tkXRPC2gd4xSKFBY3\",\"RsX6W2ddWM8ajHzss\",\"cBCgxKeWmdcPwz4MH\",\"Nj6FwgBtAXsaQwsM2\",\"xQ7uLC6QTtEyKENv9\",\"vpCDTiajf7vS4Wvyy\",\"uJ5A3zjLi9iN5eeXX\",\"PAjQoyYKAkYAXERhf\",\"LfR9Bopm57BMNNnkp\",\"76bsExTtMg8MCyX36\",\"aTNWfAYfTZn2Ejn63\",\"n9PZCXcWTygjaDsXs\",\"fjvRytS5rCSrEMB8u\",\"FHzvDACEZuAjRwL7v\",\"8HHdADjGbY5qBWsut\",\"hR7GMiqGap4CzEWSy\",\"RS7z6xJFR4ZAx6zZA\",\"3taYWLrXYdgfhAvox\",\"TJQcScCtNRobD8P4k\",\"t3zzMqgPFuQy7Ept4\",\"cxeJYrP72Mfu9AE6k\",\"zgoEhAyhrjnsSLPGw\",\"ycZbLj5WRWuGWR8oK\",\"istqYFSsAJCDAKL9C\",\"q5s7yTnMdEoeXRTnH\",\"j7XsDRYwi6ne6LhZL\",\"5JFQgt6KFihmXfHKm\",\"vjgbYJGLr39bACXND\",\"83i7PKDRGfBw5DLst\",\"wyThay5QeKQgsb8qt\",\"ArC3TpnruJnWYDzHM\",\"6W2GSzrYjMD9ANBFY\",\"8JyqsSbN2FJXPr3cw\",\"z7KAn4vEJTcrDKaum\",\"nydW2HwDGZuk8XaEL\",\"qvEvDcL32a5F4Tg6c\",\"PRPv763woB2EqjWvZ\",\"mGmoXwXiopnnnqYdh\",\"DngKYE9GzXrRNyCPr\",\"qaR8DnWrTk8Mus5Q2\",\"gb9rvGus2Jv7bjZSs\",\"Jqk2uJZZxEv5wZFze\",\"p6MPFLtmJ2z8EQT4Q\",\"j3XimmYb3NEL5gLxX\",\"SKabuq5XuhXBugKBa\",\"FyDah3MTRW8vXTB6G\",\"4HC75a4BAtjSd8jPv\",\"yZvzB3qFb8pkHy4dg\",\"uSh3aNxzD28jBuhxa\",\"X9NeqaKpfykoscpYr\",\"kQH5b8MXJunh84Czq\",\"T3ZAuoMrJjvZwN55B\",\"Y3KkPrBzMBgMiqaQ6\",\"FikSPhcrHBpQ4CyGC\",\"ab7BsQuhDo3QgE6bh\",\"mNMQvcxKSSvqqMYCH\",\"byHBadxxhnF5Ht7xH\",\"wcjknenWdPRhrRScv\",\"6ckDJWbyznyQQLkrP\",\"7PTKd4xtWnbL7BzL2\",\"PFjMZGHNAPTkgd7tq\",\"TNQ7ixK78HHTLP7it\",\"7ZoRs5CF5xZxWB9Gy\",\"ahWFxnaxt9bXSA4f3\",\"AF6LgdKhEdzwgRJom\",\"DTE6vdqCL8udPnYs3\",\"tHEH9MBHBAGvhgJGd\",\"C9LKGu2g5hSijvDzA\",\"TNMAJidLpPdH4kmBv\",\"yrCNkFYQBEDE76eFS\",\"PSrcg6fy835R4c5CW\",\"3fjCCrpR2aD32sTrc\",\"o5pRKAbyH9TjiB59q\",\"6u7yc9m6HuHGbHzph\",\"WkWyq9wMkZhXB6zsD\",\"td7qPZ7Lv4pEWT2Ya\",\"N2wnZXkhDH86mgjQ8\",\"XKi8iZXBCHCaebSHh\",\"nfXGHENb5md7m355s\",\"gMJhLdyw3tH7L96X2\",\"yAouD3PxzED8a4gap\",\"Fv3AEnW3RoRDbY3FW\",\"JEAi9mG3vvBomJ3Yu\",\"CsckRDCeX9M42xmSj\",\"vWgBJaEtcu3XoYuer\",\"498CxrZQdThLMa7ki\",\"FgkYtHLxeD8pETJ8T\",\"cR3ibTMxLyEdDFCHY\",\"J7ZnoguEh8WjsmMxx\",\"T2vhHPhRR96hRizq8\",\"HQxp7NcdvF92G7bYS\",\"nzx4uAPg3hCceyFPE\",\"3LiSLdtN58n46NEqg\",\"6QEhBfzWmuYwm34zz\",\"6kmq69yr7F5bW5ygQ\",\"moFrJ4vxzxPynByzB\",\"Jg8ZSRXe3NoDMCqGu\",\"2fxapKr8XGdNeaKi2\",\"otXtuQygbcYATMZoP\",\"jYypgEfhDWb9syYP7\",\"KFJYJH3tjaejeAQGH\",\"HqmxnQJM66Y57twhn\",\"BHp9mbAEZREsE7k8E\",\"3SKmXhcLPPkmQhjip\",\"u5u2YpHXiNgzDNJdX\",\"fAoLuqbGvHn4w2PHf\",\"AxDfHRFgQ8jfFbF5p\",\"K96FwtfDDN5WM4Bb7\",\"DLai9DxpZN6p5TPRX\",\"K3RacTvkWHLfzKF8i\",\"sKfrD9gjCDHuqLzSk\",\"6KcnCdQ3zEnARWogF\",\"nYoc6fEraRbFYbESd\",\"4tgBydK887PitgAoi\",\"qJZsi5rhRnWA38FbA\",\"6ShafRStcvew4GfCh\",\"C4QntmkYtB89GNtpd\",\"sz5duKFGpqN74k7SY\",\"XjyaCd8bviTitHTwa\",\"j47GEgPABfbrCPAmA\",\"cZGJGxM65Nq6oCevW\",\"RnbpYh3GKbdBewLc7\",\"Yp7uvStL97cC9fKkY\",\"PXAcsKkssS2yLyDv2\",\"Xj6R2zqhgumffQCAN\",\"FiaTpm7ehfDv43wSG\",\"ekbfbYdyZeXHvaG8c\",\"ZvK8bvvz922hF2ztw\",\"s5M5RvgqR9BhB9JoC\",\"PTcm3qFvxvLnaKttM\",\"BeFnbPbMnAM2SjBdZ\",\"2innwjWqxJHo4eRGh\",\"rEWQdNHK6YjuBqmrR\",\"M44nifmWzt3wtYyJx\",\"vgTvCCxgvbCTDvaRT\",\"QnPD4Sv6W4LHc2Qng\",\"yNa2KfyrokkiqLnW3\",\"TTSFzTyGpi5eckkHZ\",\"Ycj4iTJGFyvC4bXek\",\"aRqQ42J5zqCmBNd8w\",\"mxX4rH5ELYkdZ2Mbw\",\"XbxHXmh5ZmRN2gw3K\",\"AasGs8AeX9Lcb9xJn\",\"yabtHTtycsWhcGBfD\",\"4CFzv558qbGcpQwc4\",\"5kc2gqHdyka73AyKj\",\"oKNAZ5BNeNWyvkiiB\",\"sJWTa7iWeRoRtqJ8N\",\"orFLgPDw9H5MDzmwo\",\"wZoxzQDbso9SMAPkY\",\"hnyhBFWwNCz9mDfSi\",\"9Ly8afdtofp8DXzrt\",\"LA2YneDcbtiSj5SH6\",\"N7GPFEhCaiQ79MKjz\",\"ouPtoRyNq8hKH2WkT\",\"dHZqT6h4JMwk5fPC8\",\"vLrq4dEDMM2wd68Dc\",\"aEm3Wvj2rFYRL8Lrb\",\"M9DhkxE77ztbJWz6e\",\"sz8ufn9i8zeiGWpAy\",\"jNvegJWCk5HCtEMbK\",\"8PwfYqoDQFThzNtvf\",\"ZNnsMeNkdDhHjSrZb\",\"5kEyLPjTLrt7z2YJZ\",\"q5a96XumccZyhQNyL\",\"gJYuGdkXEWWmGRLzu\",\"2QGRoQn2dRq3scu7k\",\"HF28xZKSLM9wEuqNg\",\"kYWb8BwpKwunQkxeX\",\"hiGXnxds6zo7XsfTw\",\"9pzFiFK3ANLjQfnr2\",\"DEDniTrstQYGounXT\",\"nzqwymsdwC7gxAmip\",\"KdNDysEsy2TW5QRJ2\",\"8LfTheFzvicameoz9\",\"nnevRfTLDpBjZZtft\",\"rgvAJFwfCeYoYnFTK\",\"yr822PZmmiDDenxpB\",\"r5GGrGb3G47LHmPWF\",\"FzxTj4GuujhwpZM7y\",\"ahk2qiXKJA753wAJk\",\"eFGWicpoc9kw2qQgT\",\"4rwxLqLs2mNZNg8NB\",\"aPLuemxzZ5iS57NBQ\",\"MKT7khMBGXzA22ykf\",\"LWCzZ8mb8gwrRNGfq\",\"RgQD4AXk7k94NXgsa\",\"ia7nbrXmdkZkHx2Qw\",\"yoLy2DcMG3nZXNwv2\",\"FRN2W8RYpJ6GPhgRy\",\"a777e8chPvJkY3tKa\",\"DrkR35NqnP9NDLbq6\",\"x4dfavjLEcrvAF3QQ\",\"XrqNzJ2FRG8HnGiR6\",\"2ptN2mhjFwFcHyPZd\",\"4yNLEwL2rsx4EE5Nt\",\"LdBwT7jhY6qHjLkY8\",\"H4abACFDH5t8CnnyH\",\"ZrKCkX7xxGGZzauFW\",\"9bQyb6rW7xfE4vgrR\",\"NG8PWBSjsM8mMhQEq\",\"syRNbbPdLCGXbH2Gy\",\"HZFu8aX6xyW6T8DRc\",\"3cF6NXq3ZEwdkgSjb\",\"tcn2oAsxPQDmCxGmg\",\"iojEnnY9FsMfYzp6f\",\"Pe8vWpDHRuH9nSGKW\",\"FEYpu9RWysAgW3XnP\",\"hRiMXDZNAzyPd5tpt\",\"yjtdwc2AC4jA2RWtn\",\"JS3hNM3XXkxPdg3yk\",\"xwEZk3bNZoNDPJYF5\",\"YcCLwitFMAEJSnxAW\",\"Q9afpRu3u8zuWuzLQ\",\"NNE5HNRXAkmhrWgyQ\",\"i5iePG5GqhJJ8HEoB\",\"7FrGpxKuTbXrzXjyY\",\"zQGRoJD3EGghM5gJe\",\"oBcs8GLX2ZFLXQy8y\",\"39F2EYK9XeQNpACL5\",\"BBk8ZRmMsTzpKCaux\",\"jkys684AAfPRxrYaD\",\"w2HhxvSLmDhaGCAjE\",\"zd9FLSzsGz3evKafy\",\"mSjddMnY7SYC7gCoH\",\"mG8HqKiAQFTdRZthG\",\"tpxMgkGSHwBjS95Ta\",\"KLmLKaJPfsYxp42p2\",\"iS5BrkGLzJyPK7nKt\",\"p8qqFdJ3FSk5x9z3G\",\"oXdhczMThyirgM2eN\",\"zZDaXBxMzTCBhNkgL\",\"KTFxMsjaW4xgo5ajY\",\"DPi9QGLctq2y76KuE\",\"kxKR2bx7DrNDPqJPz\",\"kXEfD7xxEyWd7oxxL\",\"cZccqzRQ9GgjQF6Az\",\"g9FyJ8yeT9ic97Qp2\",\"J3upzLHuEwXH7Z2hx\",\"dYPkStFnLvAMsHSzZ\",\"cAP3n5NY64uoMwzRR\",\"5XiuAqicKD4hBdu63\",\"CyzskHGsC6WSmYrLu\",\"KJCDwGkoXh8qtbbKr\",\"5hQnRWiKkhgKJXNMP\",\"RGMbFMZXJr7DhcAJy\",\"d8qtzoLB264iP8tdY\",\"oaoRwBy7WGLGsaanT\",\"nmMiWvyJKp6nZEpve\",\"xn7uGNKeAwPEkP9oA\",\"yMcCr6yobXJnkgxH2\",\"5HCu9Ydd86QgHDRNP\",\"eMuCpJ2spXWkJjWNz\",\"HuNF3xTBzmatyGSTm\",\"J5T8gZqiZXFuFDTQ7\",\"Wv2vJnEj8ywNmARoF\",\"eYfPWvZwnJQkHbSTK\",\"wRttWTM59y8m5mx7x\",\"YRAzEBJoLvSaiPtYx\",\"3nied3n8KG8RSNixH\",\"5S9nX4rKsnCcnv4Cz\",\"buX4mCQhtXCfBjeno\",\"GGdmhAvxXhqhhibJN\",\"srJ34BaybkQh3qRkM\",\"4RsakkyRXyYGwFxEa\",\"Ds7L5bksw2QRHjrKL\",\"KA2AXhiRvDYc8E8MP\",\"qZQxPQ2kaNKAMesHT\",\"qAby4AWXmTNeusvg3\",\"sHjfbGQGLHE6JR6qu\",\"3KkyQm77zsew58Dc2\",\"7txFzDQ43vJ7qCY88\",\"o4ixjQGSaYqA2JoM4\",\"T6iBEE2jp7f7iEF2P\",\"AFfw7cGg83uYk2Miy\",\"PC3pLs36zNzpRDSuE\",\"CHvzhtXnv8HTbPQ56\",\"66a9xX73nmTEuKs9k\",\"AJexRBN9cYQmqvYu6\",\"Wpn95NqWxncQrwNgz\",\"EfxwqhYdapX3dMQC2\",\"yod5YhKtPqw2GfG9B\",\"ey3CASd6Je5LEJzfB\",\"8BFSTCnoe2QggN64c\",\"mvJBakQ35CWAnbbEZ\",\"BrTDhPJcACL2bsrpJ\",\"eHcgvkTGsH7ZziqBo\",\"pvFeEj9pERa8Qdkig\",\"qzXAMXsHZGT8o5hTA\",\"JhX7jvtpwNyxcc39m\",\"XD5nmvKQchKezPXhy\",\"9gJsF5apWJGWZJprn\",\"2PufnQcsHsfymufX3\",\"dzS6WBTMHyFEag6Fp\",\"suArq5BbSy7gD6xri\",\"d9LBRxvADNBB5QJMB\",\"4TmgHkn5vqyHK3sYC\",\"pduNK68oazqQTtbLp\",\"4Lwjr34ypKNQNQCar\",\"ebpgWXQs6R3bqRrvM\",\"wjc4iejpErBhxWwHo\",\"Wi4H6ayKsNDWWQCG5\",\"X4rzfxGgxx6CS7Bpz\",\"NzbRqGWspQnWMoDrF\",\"mw9464S5dnenqzvpm\",\"JqiHiGpMQPXK2DiQz\",\"RoGGD5cpHb4ftdLDv\"],\"quality\":[4,5,5,5,3,5,4,5,5,5,5,4,5,5,5,5,5,4,5,5,5,5,4,5,4,5,5,5,5,5,5,5]},\"tests\":{\"score\":-13.45,\"rators\":[\"BkPgkDQGHm66X4Qai\"],\"voters\":[\"7CwgH38hHpiGdu2zT\"]},\"instructions\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.75,\"family\":[{\"_id\":\"f5WKGMQaYK2bABjpg\",\"language\":\"cpp\"},{\"_id\":\"4hZ9cHgvkZ94sr2ae\",\"language\":\"java\"},{\"_id\":\"g4dFuspeWuXLLu65B\",\"language\":\"javascript\"},{\"_id\":\"7sQka3q2iQw9DaYQd\",\"language\":\"php\"},{\"_id\":\"CqNoAPcQrckobTacs\",\"language\":\"python3\"},{\"_id\":\"sakze7J5pPZG2fy4y\",\"language\":\"ruby\"},{\"_id\":\"PG8i7jkfqTgid4Wgc\",\"language\":\"swift\"}]}}"]