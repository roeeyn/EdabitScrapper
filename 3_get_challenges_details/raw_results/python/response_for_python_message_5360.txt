a["{\"msg\":\"result\",\"id\":\"1393\",\"result\":{\"_id\":\"rMwssAueJjn9FmjZC\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"def number_pairs(txt):\",\"difficulty\":2.036036036036036,\"familyId\":\"k9Jc9SrcT5vhhaxdY\",\"instructions\":\"Create a function that determines how many number pairs are there embedded in a space-separated string. The first numeric value in the space-separated string represents the count of the numbers, thus, excluded in the pairings.\\n\\n### Examples\\n```\\nnumber_pairs(\\\"7 1 2 1 2 1 3 2\\\") ➞ 2\\n# (1, 1), (2, 2)\\n\\nnumber_pairs(\\\"9 10 20 20 10 10 30 50 10 20\\\") ➞ 3\\n# (10, 10), (20, 20), (10, 10)\\n\\nnumber_pairs(\\\"4 2 3 4 1\\\") ➞ 0\\n# although two 4's are present but\\n# the first one is discounted\\n```\\n\\n### Notes\\nAlways take into consideration the first number in the string is not part of the pairing, thus, the count. It may not seem so useful as most people see it, but it's mathematically significant if you deal with **set operations**.\",\"isHidden\":false,\"lab\":\"str_vectors = [\\\"7 1 2 1 2 1 3 2\\\", \\\"9 10 20 20 10 10 30 50 10 20\\\", \\\"4 2 3 4 1\\\",\\n               \\\"13 10 20 20 10 10 30 50 10 20 50 50 30 20\\\", \\\"10 1 2 5 6 5 2 1 7 8 1\\\",\\n               \\\"16 2 3 5 11 1 11 5 7 9 13 17 3 8 7 2 1\\\", \\\"6 1 2 2 4 3 4\\\"]\\nnum_vectors = [2, 3, 0, 6, 3, 6, 2]\\n\\nfor i, x in enumerate(str_vectors):\\n    Test.assert_equals(number_pairs(x), num_vectors[i])\",\"language\":\"python3\",\"summary\":\"Create a function that determines how many number pairs are there embedded in a space-separated string. The first numeric value in the space-separated string represents the count of the numbers, thus, excluded in the pairings.\\n\\nExamples\\nnumber_pairs(\\\"7 1 2 1 2 1 3 2\\\") ➞ 2\\n(1, 1), (2, 2)\\n\\nnumber_pairs(\\\"9 10 20 20 10 10 30 50 10 20\\\") ➞ 3\\n(10, 10), (20, 20), (10,\",\"tags\":[\"arrays\",\"strings\",\"numbers\"],\"timestamp\":{\"$date\":1595120545032},\"title\":\"Number Pairs\",\"stats\":{\"completed\":{\"total\":143,\"ratings\":[3,3,3,3,3,3,0,2,1,3,2,2,1,5,2,1,1,2,2,2,3,0,3,3,2,2,2,3,0,2,0,3,1,3,3,3,1,0,3,4,2,3,0,3,2,2,1,2,1,0,1,0,2,2,1,1,3,3,2,3,3,2,3,3,2,3,2,3,0,2,1,2,3,3,3,2,3,0,0,2,2,1,1,3,3,3,2,3,0,3,3,0,0,3,0,2,2,2,3,2,3,0,1,3,3,2,3,3,3,3,3],\"rators\":[\"a777e8chPvJkY3tKa\",\"p8qqFdJ3FSk5x9z3G\",\"W5TajitmCyxz87zAC\",\"gb9rvGus2Jv7bjZSs\",\"8PwfYqoDQFThzNtvf\",\"KfXMEiCdZfCZGmjTt\",\"aEm3Wvj2rFYRL8Lrb\",\"s5M5RvgqR9BhB9JoC\",\"vTfyrr4pGddp8rbXc\",\"8sNv5PTHa7XQ8bNqR\",\"Nfsj4eNFDjaFa39ga\",\"S6ipW8Xzds8QDszn9\",\"8JyqsSbN2FJXPr3cw\",\"gJYuGdkXEWWmGRLzu\",\"ZNnsMeNkdDhHjSrZb\",\"tAF9Gf6PiGogbZuWs\",\"HF28xZKSLM9wEuqNg\",\"DEDniTrstQYGounXT\",\"iojEnnY9FsMfYzp6f\",\"KZ2xddpM2f9JRaryB\",\"AasGs8AeX9Lcb9xJn\",\"55RQznnuTGpsj3EXd\",\"f2BoqyCpgnmjEjLqx\",\"yjtdwc2AC4jA2RWtn\",\"DvquuxqkkE5DzrcZe\",\"qPpQfR5KyDb5Y3EFf\",\"n2BRY9X8899dcG8Bw\",\"cR3ibTMxLyEdDFCHY\",\"CwXsu25ygLEwQbmQC\",\"DrkR35NqnP9NDLbq6\",\"hnyhBFWwNCz9mDfSi\",\"orFLgPDw9H5MDzmwo\",\"v9KtC8YLbMWmXiW2H\",\"XjajdyybZZbkz8o5x\",\"mG8HqKiAQFTdRZthG\",\"qD2LrwaDrSdiybLKY\",\"8fZxjQfuXw5HMSRJM\",\"DPi9QGLctq2y76KuE\",\"xn7uGNKeAwPEkP9oA\",\"QRv96jmNaYsWkxQEG\",\"dkcmCKwqApX5jBggc\",\"J3upzLHuEwXH7Z2hx\",\"6MjSiiBLPcvXbXcaZ\",\"Ecg4m7srYGgZsb4Ck\",\"gXTAie79kiw28tx5u\",\"J5T8gZqiZXFuFDTQ7\",\"oBcs8GLX2ZFLXQy8y\",\"7scpcTEp3SEx5Wjg9\",\"qZQxPQ2kaNKAMesHT\",\"gSFJPsMXnqAog3Q9f\",\"2fxapKr8XGdNeaKi2\",\"Jqk2uJZZxEv5wZFze\",\"cAP3n5NY64uoMwzRR\",\"4RsakkyRXyYGwFxEa\",\"3LiSLdtN58n46NEqg\",\"P7NmFbCJ5offXMRvB\",\"GGdmhAvxXhqhhibJN\",\"nc7bRhkxgKyqusYe3\",\"q2tzvkrLASvSjkek9\",\"T2vhHPhRR96hRizq8\",\"CHvzhtXnv8HTbPQ56\",\"fznzd3qnvtbFkkizz\",\"eYfPWvZwnJQkHbSTK\",\"axdSNLZpiCDF8RS6n\",\"PXAcsKkssS2yLyDv2\",\"mmt7jwqbmSjzRSvqh\",\"Xk2g4CNFAnYcvxiSr\",\"qS5Xbh5sBC28e6j7E\",\"qQQ4hCQpzitmHSkjS\",\"Qb3Z8LLZxgzXRvNrv\",\"ppxNdL4gjANz8oJLQ\",\"ZYT9LjgocbP4hzQK5\",\"Jg8ZSRXe3NoDMCqGu\",\"RTDx9axf52kxhFjwZ\",\"K6MfKMytoJJuSGewP\",\"FEYpu9RWysAgW3XnP\",\"yyo6YLQN2of6fxp49\",\"ey3CASd6Je5LEJzfB\",\"Wpn95NqWxncQrwNgz\",\"YcCLwitFMAEJSnxAW\",\"2PufnQcsHsfymufX3\",\"EfxwqhYdapX3dMQC2\",\"PytNZK9mNiRiZxPrm\",\"rfyEkETeoS96QNH4e\",\"bvmTE46bfcM4ogj34\",\"8BFSTCnoe2QggN64c\",\"PC3pLs36zNzpRDSuE\",\"HqmxnQJM66Y57twhn\",\"4Lwjr34ypKNQNQCar\",\"fbr22rabEJMfBp7vD\",\"3KkyQm77zsew58Dc2\",\"u5u2YpHXiNgzDNJdX\",\"PWgzeK859suojbrRx\",\"ctbThYbufFCYbRK4f\",\"MpfytGFYF77emJ3cT\",\"uPGPH8AjEcsawJWkt\",\"T6iBEE2jp7f7iEF2P\",\"gKnWjDjwrJh7MK2df\",\"o4ixjQGSaYqA2JoM4\",\"5s4qhuRJijYaDNXva\",\"4RY3zj9C2t8GGefhi\",\"jCjCvyhqhpebkJn34\",\"RoGGD5cpHb4ftdLDv\",\"NfMJuiBk6FN5Jc6ow\",\"kjvgTyRFyKHv44DcH\",\"yod5YhKtPqw2GfG9B\",\"JhX7jvtpwNyxcc39m\",\"d8qtzoLB264iP8tdY\",\"AQSqD9oNv2uPfxZCR\",\"sbJcFfQjQ59Wfg4Cd\",\"dzS6WBTMHyFEag6Fp\",\"5HCu9Ydd86QgHDRNP\",\"suArq5BbSy7gD6xri\",\"mvJBakQ35CWAnbbEZ\",\"jWbd7SYDzLPjc9EDh\",\"hkiz2Nv927cYGrA86\",\"BrTDhPJcACL2bsrpJ\",\"Ds7L5bksw2QRHjrKL\",\"Qyfyyw6oC4EHAndzo\",\"buX4mCQhtXCfBjeno\",\"5kazQPq8ZdDsx6kjf\",\"wqJHvTS4vcaeHZKRc\",\"jkbavR2ATFJcpmo8M\",\"euPBBaYXyS8RBr9KB\",\"tN8QWy3aaEzC2MnfA\",\"i4MfM38aiCeFAiWtz\",\"MKT7khMBGXzA22ykf\",\"DQskEvAv5KiJDPtGF\",\"9pzFiFK3ANLjQfnr2\",\"RErqK2yM94wYyD2hk\"],\"quality\":[5,5,5,5,4,5,5,4,1,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":4.708333333333333,\"family\":[{\"_id\":\"QGGqbqQXucNu6dNkP\",\"language\":\"cpp\"},{\"_id\":\"fpHGmHoKX5RyD3wjQ\",\"language\":\"javascript\"},{\"_id\":\"rMwssAueJjn9FmjZC\",\"language\":\"python3\"},{\"_id\":\"KkenuF6YoZvKRMEPi\",\"language\":\"ruby\"}]}}"]