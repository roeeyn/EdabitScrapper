a["{\"msg\":\"result\",\"id\":\"1469\",\"result\":{\"_id\":\"Ggj8t3fBCzjBHvFR7\",\"author\":\"Alessandro Manicone\",\"authorId\":\"AasGs8AeX9Lcb9xJn\",\"code\":\"import re\\n\\npattern = \\\"yourregularexpressionhere\\\"\",\"difficulty\":2.0714285714285716,\"familyId\":\"cHbhHkFfMkcEdLK2A\",\"instructions\":\"Write a **regular expression** that will match all the **positive** numbers in a string with numbers separated by spaces. You must use RegEx **negative lookbehind**.\\n\\n```\\ntxt = \\\"23 -43 34 -44 45 -55 56\\\"\\npattern = \\\"yourregularexpressionhere\\\"\\n\\nre.findall(pattern, txt) ➞ [\\\"23\\\", \\\"34\\\", \\\"45\\\", \\\"56\\\"]\\n```\\n\\n### Notes\\n- You don't need to write a function, just the pattern.\\n- Do **not** remove `import re` from the code.\\n- Find more info on RegEx and negative lookbehind in **Resources**.\\n- You can find all the challenges of this series in my [Basic RegEx](https://edabit.com/collection/8PEq2azWDtAZWPFe2) collection.\",\"isHidden\":false,\"lab\":\"txt1 = '23 234 -2 334 -3'\\ntxt2 = '1 2 -3 -4 5'\\ntxt3 = '234 -3 -5 3'\\n\\nTest.assert_equals('(?<!' in pattern, True, 'You must use negative lookbehind.') \\nTest.assert_equals(re.findall(pattern, txt1), ['23', '234', '334'])\\nTest.assert_equals(re.findall(pattern, txt2), ['1', '2', '5'])\\nTest.assert_equals(re.findall(pattern, txt3), ['234', '3'])\\n\\n# Translated from JavaScript.\\n# The RegEx series was originally posted by Isaac Pak.\",\"language\":\"python3\",\"summary\":\"Write a regular expression that will match all the positive numbers in a string with numbers separated by spaces. You must use RegEx negative lookbehind.\\n\\ntxt = \\\"23 -43 34 -44 45 -55 56\\\"\\npattern = \\\"yourregularexpressionhere\\\"\\n\\nre.findall(pattern, txt) ➞ [\\\"23\\\", \\\"34\\\", \\\"45\\\", \\\"56\\\"]\\n\\nNotes\\nYou don't need to write a function, just the pattern.\\nDo not remove import re\",\"tags\":[\"language_fundamentals\",\"formatting\",\"regex\"],\"timestamp\":{\"$date\":1586713244274},\"title\":\"RegEx VII-B: Negative Lookbehind\",\"stats\":{\"completed\":{\"total\":129,\"ratings\":[2,2,2,2,2,2,1,2,2,1,5,1,1,1,3,3,3,1,2,3,3,2,3,1,3,1,3,2,3,1,2,2,2,1,2,1,1,1,3,3,3,0,3,1,3,3,2,0,3,2,2,2,1,3,2,3,0,0,3,3,1,3,4,2,2,2,3,2,0,3,3,3,2,2,2,3,2,0,3,1,3,2,3,1,3,0,1,2,3,3,1,3,2,3,2,3,2,3],\"rators\":[\"AasGs8AeX9Lcb9xJn\",\"tAF9Gf6PiGogbZuWs\",\"aEm3Wvj2rFYRL8Lrb\",\"Yp7uvStL97cC9fKkY\",\"ZNnsMeNkdDhHjSrZb\",\"J5T8gZqiZXFuFDTQ7\",\"8JyqsSbN2FJXPr3cw\",\"pWD2YC5s4YRCxFc2i\",\"nFjZ5BBDfW7E3gD6q\",\"fGN2frPqk4Wb3ia9L\",\"dHZqT6h4JMwk5fPC8\",\"DEDniTrstQYGounXT\",\"gb9rvGus2Jv7bjZSs\",\"aP7JkkYer28YWrPvC\",\"8PwfYqoDQFThzNtvf\",\"PytNZK9mNiRiZxPrm\",\"mDWNyaaQ9hvPCRzSd\",\"EjbDDFRECrzQDkzrX\",\"586FdBhazpwJfnRYR\",\"a777e8chPvJkY3tKa\",\"HF28xZKSLM9wEuqNg\",\"rgvAJFwfCeYoYnFTK\",\"ZJYMYPmyQAJ5B863h\",\"9pzFiFK3ANLjQfnr2\",\"yJmwiykSNfLv9NqJ2\",\"uphTJGksikXpnrLxT\",\"7tbtTx6uxePv6eQwP\",\"BtdZezHfckxRLm7xR\",\"cykCKNJcqFBxz4T8s\",\"QJB6Eb625qYxMp8kv\",\"KZvaNQrXBFJ9bKLYx\",\"yr822PZmmiDDenxpB\",\"XSt47ad5D5LLZSupD\",\"iojEnnY9FsMfYzp6f\",\"n2BRY9X8899dcG8Bw\",\"S5juYy9cQBJwx6zvu\",\"MCw7uAcoWcSTBTmr3\",\"CwXsu25ygLEwQbmQC\",\"xW9NGjvcevY6qdzvw\",\"6gS4E2C84vBYTYeDZ\",\"JJmKj7ACC2P52uo95\",\"4597PD5mbXzHa3vdi\",\"yjtdwc2AC4jA2RWtn\",\"ji5f27FPz4wRRF6Ls\",\"zZ43WzxvFu7kaTKZ6\",\"pscBduNyf8TDHe2Km\",\"Pe8vWpDHRuH9nSGKW\",\"ACEZh39brWjdGkZXb\",\"7bh9j4jvZbW22eMSi\",\"wymkBJ3ePhAkti3ZM\",\"Nb6LYPoQP6KJZt8mz\",\"8WpvgSbQciTQWdd8T\",\"BqT6sMHBAjkw4hjG6\",\"cxABox46qWvJRyidE\",\"49XFttjKo2QhEWT3R\",\"ijNKM8DuspXuAnC4y\",\"pmgFEciNrd3ES9tuu\",\"euPBBaYXyS8RBr9KB\",\"p8qqFdJ3FSk5x9z3G\",\"m6TC9gshrwufWqAYn\",\"oHbErJxjYJhD66d5w\",\"w2HhxvSLmDhaGCAjE\",\"QNb9Rx8BJgCWn3qgR\",\"xn7uGNKeAwPEkP9oA\",\"2QziknsznNeMPRh3g\",\"J3upzLHuEwXH7Z2hx\",\"uN5t57RETi5y2z5W8\",\"c2u7qfdaYxcyuydtu\",\"d8qtzoLB264iP8tdY\",\"sX9GZp3fYyQLrBKMJ\",\"LCZ6JTAhBZBmWLzm8\",\"QRv96jmNaYsWkxQEG\",\"incG8tH2dwThHg35f\",\"oBcs8GLX2ZFLXQy8y\",\"6MjSiiBLPcvXbXcaZ\",\"uX3EL4Qha99wBkozM\",\"dYPkStFnLvAMsHSzZ\",\"xhCe8aAuimqGyiWQe\",\"DpnYcMphntjsQ96qg\",\"dQK2T76aHcRJkrbKB\",\"6xTu4r8NMczBFvmtz\",\"DPi9QGLctq2y76KuE\",\"SExX3m5YftBWmsk2e\",\"FRv5HToEaZ6iRM7T5\",\"XMYbe9cezEyMp2QMo\",\"StNu7DPyTgEStZsMY\",\"m9Dj3WvWDwiu73PRh\",\"zMAy89ZAeHKKtm6w9\",\"Nzi4RD5fxAJ4wjnNa\",\"3LiSLdtN58n46NEqg\",\"Jqk2uJZZxEv5wZFze\",\"KxD9zpRKGNJChcsQg\",\"CTKmXtrqDYqJBnuy8\",\"GGdmhAvxXhqhhibJN\",\"QNC6ErTx4ca2H3rD7\",\"PiRFsaY372Gbgs8qF\",\"qNszsXx28cTxvGSNj\",\"FEYpu9RWysAgW3XnP\",\"9ivvGvJGvtQfigQaZ\",\"2PufnQcsHsfymufX3\",\"rfyEkETeoS96QNH4e\",\"JwkwCHcXthnGDsdFr\",\"bvmTE46bfcM4ogj34\",\"AFfw7cGg83uYk2Miy\",\"8BFSTCnoe2QggN64c\",\"JKb5rhL6DKcCAypF9\",\"sbJcFfQjQ59Wfg4Cd\",\"97DthwdtrBLm2y2Yj\",\"o4ixjQGSaYqA2JoM4\",\"gKnWjDjwrJh7MK2df\",\"8sNv5PTHa7XQ8bNqR\",\"yod5YhKtPqw2GfG9B\",\"RoGGD5cpHb4ftdLDv\",\"4Lwjr34ypKNQNQCar\",\"ag8tcfPvJZWpRnwet\",\"MHiQx9E8rPgzJfsJy\",\"MfAA58Bz5482Z5qQt\",\"Ds7L5bksw2QRHjrKL\",\"CHvzhtXnv8HTbPQ56\",\"mvJBakQ35CWAnbbEZ\",\"Wi4H6ayKsNDWWQCG5\",\"Qyfyyw6oC4EHAndzo\"],\"quality\":[5,5,5,4,5,4,3,5,5,5,5,5,5,4,1,5,5,5,5,5,5,3,5,5,5,5,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"AasGs8AeX9Lcb9xJn\",\"quality\":4.620689655172414,\"family\":[{\"_id\":\"HG93JYjse2r3mb9n3\",\"language\":\"javascript\"},{\"_id\":\"Ggj8t3fBCzjBHvFR7\",\"language\":\"python3\"}]}}"]