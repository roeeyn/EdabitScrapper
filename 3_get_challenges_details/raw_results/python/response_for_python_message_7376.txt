a["{\"msg\":\"result\",\"id\":\"2394\",\"result\":{\"_id\":\"GAg5sxrwDs5Mg7N9G\",\"author\":\"javierdariomartin\",\"authorId\":\"6428wKHtwKkFdvBs5\",\"code\":\"def temperature(sca, val):\\n\\t\",\"difficulty\":4,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"JiDYpi8qvx3ZFwqQ4\",\"instructions\":\"Create a function that takes a **temperature scale** and a  **temperature measurement** as arguments and returns a list with the conversion of such measurement to different scales.\\n\\nName | Input | Symbol\\n:--- | --- | ---\\nCelsius | cel | degC\\nFahrenheit | fah | degF\\nKelvin | kel | K\\nRankine | ran | degR\\nDelisle | del | degDe\\nNewton | new | degN\\nRéaumur | rea | degRe\\nRømer | rom | degRo\\n\\nThe resulting list should follow the order informed in the table above, and each corresponding temperature value should display  **two decimal digits**.\\n\\n### Examples\\n```\\ntemperature(\\\"cel\\\", 0) ➞ [\\\"0.00 degC\\\", \\\"32.00 degF\\\", \\\"273.15 K\\\", \\\"491.67 degR\\\", \\\"150.00 degDe\\\", \\\"0.00 degN\\\", \\\"0.00 degRe\\\", \\\"7.50 degRo\\\"]\\n\\ntemperature(\\\"fah\\\", -202) ➞ [\\\"-130.00 degC\\\", \\\"-202.00 degF\\\", \\\"143.15 K\\\", \\\"257.67 degR\\\", \\\"345.00 degDe\\\", \\\"-42.90 degN\\\", \\\"-104.00 degRe\\\", \\\"-60.75 degRo\\\"]\\n\\ntemperature(\\\"rom\\\", 217.50) ➞ [\\\"400.00 degC\\\", \\\"752.00 degF\\\", \\\"673.15 K\\\", \\\"1211.67 degR\\\", \\\"-450.00 degDe\\\", \\\"132.00 degN\\\", \\\"320.00 degRe\\\", \\\"217.50 degRo\\\"]\\n```\\n\\n### Notes\\n- Check the **Resources** tab to understand how to convert the measurement using different scales.\\n- All measurements will be valid temperatures according to the scale.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(temperature(\\\"cel\\\", 400), [\\\"400.00 degC\\\", \\\"752.00 degF\\\", \\\"673.15 K\\\", \\\"1211.67 degR\\\", \\\"-450.00 degDe\\\", \\\"132.00 degN\\\", \\\"320.00 degRe\\\", \\\"217.50 degRo\\\"])\\nTest.assert_equals(temperature(\\\"fah\\\", 752), [\\\"400.00 degC\\\", \\\"752.00 degF\\\", \\\"673.15 K\\\", \\\"1211.67 degR\\\", \\\"-450.00 degDe\\\", \\\"132.00 degN\\\", \\\"320.00 degRe\\\", \\\"217.50 degRo\\\"])\\nTest.assert_equals(temperature(\\\"kel\\\", 673.15), [\\\"400.00 degC\\\", \\\"752.00 degF\\\", \\\"673.15 K\\\", \\\"1211.67 degR\\\", \\\"-450.00 degDe\\\", \\\"132.00 degN\\\", \\\"320.00 degRe\\\", \\\"217.50 degRo\\\"])\\nTest.assert_equals(temperature(\\\"ran\\\", 1211.67), [\\\"400.00 degC\\\", \\\"752.00 degF\\\", \\\"673.15 K\\\", \\\"1211.67 degR\\\", \\\"-450.00 degDe\\\", \\\"132.00 degN\\\", \\\"320.00 degRe\\\", \\\"217.50 degRo\\\"])\\nTest.assert_equals(temperature(\\\"del\\\", -450), [\\\"400.00 degC\\\", \\\"752.00 degF\\\", \\\"673.15 K\\\", \\\"1211.67 degR\\\", \\\"-450.00 degDe\\\", \\\"132.00 degN\\\", \\\"320.00 degRe\\\", \\\"217.50 degRo\\\"])\\nTest.assert_equals(temperature(\\\"new\\\", 132), [\\\"400.00 degC\\\", \\\"752.00 degF\\\", \\\"673.15 K\\\", \\\"1211.67 degR\\\", \\\"-450.00 degDe\\\", \\\"132.00 degN\\\", \\\"320.00 degRe\\\", \\\"217.50 degRo\\\"])\\nTest.assert_equals(temperature(\\\"rea\\\", 320), [\\\"400.00 degC\\\", \\\"752.00 degF\\\", \\\"673.15 K\\\", \\\"1211.67 degR\\\", \\\"-450.00 degDe\\\", \\\"132.00 degN\\\", \\\"320.00 degRe\\\", \\\"217.50 degRo\\\"])\\nTest.assert_equals(temperature(\\\"rom\\\", 217.50), [\\\"400.00 degC\\\", \\\"752.00 degF\\\", \\\"673.15 K\\\", \\\"1211.67 degR\\\", \\\"-450.00 degDe\\\", \\\"132.00 degN\\\", \\\"320.00 degRe\\\", \\\"217.50 degRo\\\"])\\nTest.assert_equals(temperature(\\\"cel\\\", 0), [\\\"0.00 degC\\\", \\\"32.00 degF\\\", \\\"273.15 K\\\", \\\"491.67 degR\\\", \\\"150.00 degDe\\\", \\\"0.00 degN\\\", \\\"0.00 degRe\\\", \\\"7.50 degRo\\\"])\\nTest.assert_equals(temperature(\\\"fah\\\", -202), [\\\"-130.00 degC\\\", \\\"-202.00 degF\\\", \\\"143.15 K\\\", \\\"257.67 degR\\\", \\\"345.00 degDe\\\", \\\"-42.90 degN\\\", \\\"-104.00 degRe\\\", \\\"-60.75 degRo\\\"])\\nTest.assert_equals(temperature(\\\"kel\\\", 3.15), [\\\"-270.00 degC\\\", \\\"-454.00 degF\\\", \\\"3.15 K\\\", \\\"5.67 degR\\\", \\\"555.00 degDe\\\", \\\"-89.10 degN\\\", \\\"-216.00 degRe\\\", \\\"-134.25 degRo\\\"])\\nTest.assert_equals(temperature(\\\"ran\\\", 851.67), [\\\"200.00 degC\\\", \\\"392.00 degF\\\", \\\"473.15 K\\\", \\\"851.67 degR\\\", \\\"-150.00 degDe\\\", \\\"66.00 degN\\\", \\\"160.00 degRe\\\", \\\"112.50 degRo\\\"])\\nTest.assert_equals(temperature(\\\"del\\\", 525), [\\\"-250.00 degC\\\", \\\"-418.00 degF\\\", \\\"23.15 K\\\", \\\"41.67 degR\\\", \\\"525.00 degDe\\\", \\\"-82.50 degN\\\", \\\"-200.00 degRe\\\", \\\"-123.75 degRo\\\"])\\nTest.assert_equals(temperature(\\\"rea\\\", 0), [\\\"0.00 degC\\\", \\\"32.00 degF\\\", \\\"273.15 K\\\", \\\"491.67 degR\\\", \\\"150.00 degDe\\\", \\\"0.00 degN\\\", \\\"0.00 degRe\\\", \\\"7.50 degRo\\\"])\\nTest.assert_equals(temperature(\\\"new\\\", -33), [\\\"-100.00 degC\\\", \\\"-148.00 degF\\\", \\\"173.15 K\\\", \\\"311.67 degR\\\", \\\"300.00 degDe\\\", \\\"-33.00 degN\\\", \\\"-80.00 degRe\\\", \\\"-45.00 degRo\\\"])\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[5,5,5,5,5,5,5,5,3,2,5,5,3,2,5,5,1,1,4,4],\"rators\":[\"6428wKHtwKkFdvBs5\",\"8PwfYqoDQFThzNtvf\",\"tAF9Gf6PiGogbZuWs\",\"aEm3Wvj2rFYRL8Lrb\",\"KZ2xddpM2f9JRaryB\",\"s5M5RvgqR9BhB9JoC\",\"xn7uGNKeAwPEkP9oA\",\"LQxof8pGabGuWP7Gn\",\"BrTDhPJcACL2bsrpJ\",\"XNmN6ztj36a7eChbD\",\"iS5BrkGLzJyPK7nKt\",\"yjtdwc2AC4jA2RWtn\",\"8sNv5PTHa7XQ8bNqR\",\"J3upzLHuEwXH7Z2hx\",\"gJYuGdkXEWWmGRLzu\"],\"total\":17,\"quality\":[]},\"flags\":0},\"summary\":\"Create a function that takes a temperature scale and a  temperature measurement as arguments and returns a list with the conversion of such measurement to different scales.\\n\\nName | Input | Symbol\\n:--- | --- | ---\\nCelsius | cel | degC\\nFahrenheit | fah | degF\\nKelvin | kel | K\\nRankine | ran | degR\\nDelisle | del | degDe\\nNewton | new | degN\\nRéaumur | rea | degRe\\nRø\",\"tags\":[\"physics\",\"math\"],\"timestamp\":{\"$date\":1598463809839},\"title\":\"Conversion of Units of Temperature\",\"quality\":0,\"family\":[{\"_id\":\"GqyaDwsgbejmLFZNg\",\"language\":\"cpp\"},{\"_id\":\"THSeSBBYKcKb6GRQe\",\"language\":\"javascript\"},{\"_id\":\"GAg5sxrwDs5Mg7N9G\",\"language\":\"python3\"},{\"_id\":\"L22aprm3RtqScFzTH\",\"language\":\"ruby\"}]}}"]