a["{\"msg\":\"result\",\"id\":\"1047\",\"result\":{\"_id\":\"A9iPfSEZ9fCrPQSwC\",\"archived\":false,\"author\":\"kochug\",\"authorId\":\"vQEmjTRgmdGNYB7yk\",\"code\":\"def points_in_circle(points, centerX, centerY, radius):\\n\\t\",\"difficulty\":1.5426356589147288,\"familyId\":\"jPJsJjthzyuc9MYSJ\",\"instructions\":\"Count the total number of coordinates on a two-dimensional grid that are inside a given circle. The function has four parameters: the points (provided as a list of dictionaries), the circle's center x coordinate, the circle's center y coordinate, and the circle's radius.\\n\\n### Examples\\n```\\npoints_in_circle([\\n  { \\\"x\\\": 0, \\\"y\\\": 0 },\\n  { \\\"x\\\": 1, \\\"y\\\": 1 },\\n  { \\\"x\\\": 0, \\\"y\\\": 5 },\\n  { \\\"x\\\": 10, \\\"y\\\": 10 }\\n], 0, 0, 5) ➞ 2\\n```\\n\\n### Notes\\nOnly count the coordinates that are _in_ the circle, not the ones that are on the border.\",\"lab\":\"Test.assert_equals(points_in_circle([{'x': 0, 'y': 0}, {'x': 1, 'y': 1}, {'x': 0, 'y': 5}, {'x': 10, 'y': 10}], 0, 0, 5), 2)\\nTest.assert_equals(points_in_circle([{'x': 9, 'y': 6}, {'x': 9, 'y': 3}, {'x': 4, 'y': 8}, {'x': 3, 'y': 10}, {'x': 1, 'y': 6}], 0, 0, 7.5), 1)\\nTest.assert_equals(points_in_circle([{'x': 8, 'y': 8}, {'x': 8, 'y': 6}, {'x': 4, 'y': 7}], 0, 0, 1), 0)\\nTest.assert_equals(points_in_circle([{'x': 0, 'y': 0}, {'x': 1, 'y': 1}, {'x': 0, 'y': 5}, {'x': 10, 'y': 10}], 50, 50, 40), 0)\\nTest.assert_equals(points_in_circle([{'x': 10, 'y': 10}, {'x': 33, 'y': 54}, {'x': 7, 'y': 98}, {'x': 516, 'y': 85}], 23, 94, 100), 3)\\nTest.assert_equals(points_in_circle([{'x': 6, 'y': 3}, {'x': 1, 'y': 4}, {'x': 1, 'y': 9}, {'x': 4, 'y': 9}, {'x': 9, 'y': 3}, {'x': 10, 'y': 8}, {'x': 2, 'y': 2}, {'x': 4, 'y': 3}, {'x': 4, 'y': 4}, {'x': 1, 'y': 2}, {'x': 8, 'y': 9}, {'x': 6, 'y': 10}, {'x': 10, 'y': 6}, {'x': 8, 'y': 8}, {'x': 2, 'y': 1}, {'x': 7, 'y': 4}, {'x': 6, 'y': 1}, {'x': 8, 'y': 1}, {'x': 8, 'y': 5}, {'x': 2, 'y': 1}, {'x': 10, 'y': 5}, {'x': 6, 'y': 5}, {'x': 8, 'y': 3}, {'x': 7, 'y': 8}, {'x': 1, 'y': 6}, {'x': 8, 'y': 7}, {'x': 4, 'y': 10}, {'x': 6, 'y': 5}, {'x': 4, 'y': 5}, {'x': 1, 'y': 10}, {'x': 4, 'y': 4}, {'x': 6, 'y': 8}, {'x': 2, 'y': 8}, {'x': 2, 'y': 8}, {'x': 1, 'y': 10}, {'x': 3, 'y': 2}, {'x': 5, 'y': 7}, {'x': 10, 'y': 2}, {'x': 9, 'y': 8}, {'x': 4, 'y': 3}, {'x': 9, 'y': 5}, {'x': 6, 'y': 3}, {'x': 1, 'y': 3}, {'x': 5, 'y': 10}, {'x': 2, 'y': 7}, {'x': 10, 'y': 6}, {'x': 8, 'y': 4}, {'x': 9, 'y': 9}, {'x': 1, 'y': 8}, {'x': 1, 'y': 3}, {'x': 2, 'y': 2}, {'x': 10, 'y': 1}, {'x': 5, 'y': 6}, {'x': 10, 'y': 5}, {'x': 8, 'y': 5}, {'x': 9, 'y': 10}, {'x': 1, 'y': 4}, {'x': 5, 'y': 6}, {'x': 6, 'y': 5}, {'x': 2, 'y': 2}, {'x': 10, 'y': 10}, {'x': 6, 'y': 7}, {'x': 2, 'y': 1}, {'x': 4, 'y': 4}, {'x': 8, 'y': 4}, {'x': 6, 'y': 10}, {'x': 6, 'y': 7}, {'x': 3, 'y': 5}, {'x': 9, 'y': 1}, {'x': 1, 'y': 7}, {'x': 2, 'y': 9}, {'x': 7, 'y': 4}, {'x': 9, 'y': 5}, {'x': 7, 'y': 6}, {'x': 9, 'y': 6}, {'x': 3, 'y': 1}, {'x': 2, 'y': 9}, {'x': 7, 'y': 1}, {'x': 3, 'y': 7}, {'x': 6, 'y': 5}, {'x': 8, 'y': 8}, {'x': 7, 'y': 5}, {'x': 6, 'y': 4}, {'x': 6, 'y': 5}, {'x': 7, 'y': 2}, {'x': 7, 'y': 10}, {'x': 7, 'y': 1}, {'x': 3, 'y': 1}, {'x': 9, 'y': 10}, {'x': 6, 'y': 7}, {'x': 5, 'y': 9}, {'x': 2, 'y': 6}, {'x': 10, 'y': 1}, {'x': 9, 'y': 1}, {'x': 7, 'y': 3}, {'x': 3, 'y': 1}, {'x': 7, 'y': 9}, {'x': 2, 'y': 5}, {'x': 1, 'y': 9}, {'x': 8, 'y': 8}], 0, 0, 7.5), 34)\\nTest.assert_equals(points_in_circle([{'x': 16, 'y': 98}, {'x': 48, 'y': 5}, {'x': 66, 'y': 18}, {'x': 87, 'y': 8}, {'x': 37, 'y': 94}, {'x': 69, 'y': 49}, {'x': 85, 'y': 37}, {'x': 61, 'y': 63}, {'x': 19, 'y': 4}, {'x': 81, 'y': 3}, {'x': 90, 'y': 30}, {'x': 35, 'y': 65}, {'x': 30, 'y': 92}, {'x': 72, 'y': 38}, {'x': 67, 'y': 4}, {'x': 41, 'y': 70}, {'x': 93, 'y': 92}, {'x': 43, 'y': 17}, {'x': 22, 'y': 12}, {'x': 5, 'y': 58}, {'x': 27, 'y': 73}, {'x': 42, 'y': 70}, {'x': 40, 'y': 61}, {'x': 75, 'y': 99}, {'x': 41, 'y': 79}, {'x': 98, 'y': 99}, {'x': 20, 'y': 64}, {'x': 2, 'y': 74}, {'x': 69, 'y': 44}, {'x': 39, 'y': 58}, {'x': 6, 'y': 11}, {'x': 51, 'y': 34}, {'x': 32, 'y': 19}, {'x': 50, 'y': 12}, {'x': 16, 'y': 91}, {'x': 1, 'y': 99}, {'x': 13, 'y': 60}, {'x': 16, 'y': 64}, {'x': 34, 'y': 25}, {'x': 41, 'y': 68}, {'x': 61, 'y': 57}, {'x': 61, 'y': 17}, {'x': 47, 'y': 17}, {'x': 10, 'y': 63}, {'x': 40, 'y': 76}, {'x': 82, 'y': 93}, {'x': 54, 'y': 14}, {'x': 6, 'y': 28}, {'x': 21, 'y': 69}, {'x': 76, 'y': 79}, {'x': 37, 'y': 5}, {'x': 85, 'y': 73}, {'x': 24, 'y': 72}, {'x': 36, 'y': 75}, {'x': 72, 'y': 4}, {'x': 71, 'y': 80}, {'x': 37, 'y': 13}, {'x': 62, 'y': 83}, {'x': 45, 'y': 43}, {'x': 95, 'y': 67}, {'x': 6, 'y': 12}, {'x': 79, 'y': 27}, {'x': 1, 'y': 12}, {'x': 19, 'y': 51}, {'x': 94, 'y': 27}, {'x': 29, 'y': 34}, {'x': 21, 'y': 43}, {'x': 8, 'y': 81}, {'x': 98, 'y': 65}, {'x': 63, 'y': 82}, {'x': 45, 'y': 38}, {'x': 70, 'y': 19}, {'x': 61, 'y': 30}, {'x': 47, 'y': 86}, {'x': 52, 'y': 41}, {'x': 89, 'y': 16}, {'x': 28, 'y': 75}, {'x': 21, 'y': 98}, {'x': 54, 'y': 68}, {'x': 80, 'y': 46}, {'x': 82, 'y': 71}, {'x': 36, 'y': 91}, {'x': 76, 'y': 20}, {'x': 33, 'y': 81}, {'x': 56, 'y': 57}, {'x': 6, 'y': 47}, {'x': 85, 'y': 62}, {'x': 83, 'y': 67}, {'x': 98, 'y': 66}, {'x': 92, 'y': 54}, {'x': 70, 'y': 88}, {'x': 42, 'y': 38}, {'x': 66, 'y': 100}, {'x': 92, 'y': 22}, {'x': 77, 'y': 36}, {'x': 90, 'y': 57}, {'x': 48, 'y': 39}, {'x': 49, 'y': 97}, {'x': 12, 'y': 66}, {'x': 30, 'y': 85}], 0, 0, 50), 16)\",\"language\":\"python3\",\"summary\":\"Count the amount of coordinates on a two-dimensional grid that are inside a given circle. The function has four arguments: the points (provided as a list of dictionaries), the circle's center x, y and the circle's radius.\\n\\nExamples\\npointsincircle([\\n  { \\\"x\\\": 0, \\\"y\\\": 0 },\\n  { \\\"x\\\": 1, \\\"y\\\": 1 },\\n  { \\\"x\\\": 0, \\\"y\\\": 5 },\\n  { \\\"x\\\": 10, \\\"y\\\": 10 }\\n], 0, 0, 5) ➞ 2\\n\\nNotes\\nO\",\"tags\":[\"math\",\"arrays\"],\"timestamp\":{\"$date\":1524387558654},\"title\":\"Count the Points in a Circle\",\"stats\":{\"completed\":{\"total\":283,\"ratings\":[1,1,1,1,1,2,1,1,1,2,0,0,1,1,1,2,0,2,4,1,2,2,1,2,2,2,2,1,2,1,1,0,1,1,2,2,1,1,1,2,2,3,2,2,0,1,2,2,3,1,2,2,2,0,1,1,2,1,2,2,3,2,2,2,1,1,3,2,1,2,3,1,2,1,1,2,1,0,0,2,2,2,2,1,2,2,3,0,1,1,2,2,3,3,5,0,2,1,1,1,2,0,1,0,2,1,1,3,1,2,1,2,2,3,2,2,2,2,2,3,1,1,1,2,2,2,2,1,2,1,2,1,2,0,2,2,2,0,1,2,1,2,1,2,0,2,0,1,1,2,2,2,1,2,2,2,2,2,2,1,1,1,1,2,1,2,2,2,1,2,3,2,2,2,2,2,2,0,2,1,2,2,1,2,2,1,2,0,2,1,2,2,0,0,2,1,2,2,0,2,2,2,1,2,3,1,2,1,2,1,1,2,2,0,1,1,2,3,1,2,2,3,2,1,2,5,0,2,1,0,2,0,2,0,2,2,1,1,2,1,2,2,1,2,2,0,2,1,2,1,2,1,2,1,2,1,2,1],\"rators\":[\"vQEmjTRgmdGNYB7yk\",\"HK3RW4kr7acFSAyL4\",\"tuyDaJzFy78jxvhCY\",\"6fJpRpAgiWD5zX9qB\",\"2innwjWqxJHo4eRGh\",\"HfXaiByRyvX5G5smB\",\"iEMnJaXXfa6dzdQzb\",\"2PGyaiL22k4dfMGJf\",\"23oi2a3vQwhtLEbSj\",\"LfR9Bopm57BMNNnkp\",\"GxtMCYNXug5GuYz74\",\"m2iiZZHTpzHcEKJMn\",\"5JXnPbYC8RuBG6FkM\",\"KHLJJM4grqF6xmo5t\",\"3Yxorwk6ABadbgX5m\",\"QjpzasKxy3xBakLzz\",\"ewyPo746vdNES9LwS\",\"ZxF3LkWqeo4fe4ziK\",\"GRZzKCbeb4xKHFCrZ\",\"5nSgmjSpzDAHwQMaH\",\"4NnRqrPwSGKGKT4Nb\",\"mgJoduE8pStdjNmPD\",\"mqXfzC24CdThpCaGd\",\"tEZYGGHp8ux3TrPy6\",\"FyTMiPs2DTQsvsXJ3\",\"pdcaC4fEtsubBz4Wo\",\"3aSufMRSzHQ3cuo9n\",\"EPxRaPvpA6Bj9ZH8x\",\"jDoFYBX4iQiTXFEdf\",\"u39MGPSqAhktCMZzQ\",\"QyYmR6GqGSiw8KXYc\",\"wPhd86JGzcCkkQdyy\",\"ARMcFvGNE8u93RdM4\",\"mCMD9CNp9rA7tbYoB\",\"iwJpLKCvHo7u89bY8\",\"sdxjMFRaQQono5GDH\",\"JxADc5CTg3NZvRR74\",\"G9zQ7P8uJCuAXGRmK\",\"X7s4fAx58yCtfgY6t\",\"sbbmKmrBrszLvWqqC\",\"YG776yzpLWoxa5GJs\",\"tAF9Gf6PiGogbZuWs\",\"mdfg7jzShpAzFi2Bb\",\"z9FqvdkSb7hYJ63p5\",\"3hnNN45MzxXW7uPR8\",\"2GuzKEuE5QK5nDyrQ\",\"xozjHBtj9egBmAuuY\",\"woL3gGTZHTMhmCi26\",\"9j8nvw7NhJoMm34HF\",\"Ws72RoCASTFuTyokF\",\"THD2EHgtJa2ooivJK\",\"M8jrv2FfpMQp9Qzpx\",\"Qm7WibLuCP7hW3iXi\",\"T2W32kBnES6zya9Bv\",\"T82JyZFPNz8maF8f8\",\"iWpoNkWDDWdRmMQiR\",\"35Z2Qy2cjicZMkSzn\",\"SK3kJggzuets9AFj6\",\"QgdwHjy4x6MCPwfh9\",\"Kzom5ikn7BRrRgiES\",\"Nj6FwgBtAXsaQwsM2\",\"RsX6W2ddWM8ajHzss\",\"SKabuq5XuhXBugKBa\",\"nc7bRhkxgKyqusYe3\",\"uJ5A3zjLi9iN5eeXX\",\"n9PZCXcWTygjaDsXs\",\"aTNWfAYfTZn2Ejn63\",\"jwgBL9AKmfxPCFoTo\",\"PAjQoyYKAkYAXERhf\",\"pT7ESkjcQTjmmaTXv\",\"hR7GMiqGap4CzEWSy\",\"uSiHKggtKNw9CLzyJ\",\"TJQcScCtNRobD8P4k\",\"jtB5tDvfCunf2Ep2X\",\"xQ7uLC6QTtEyKENv9\",\"RP6TXQ57oLFG2EA8X\",\"83i7PKDRGfBw5DLst\",\"FjLPxCcT7urtALbos\",\"d2XCAmNhp79ea8a65\",\"eq6bWgNCAXLkFj4tx\",\"zgoEhAyhrjnsSLPGw\",\"CLKnKSGEviZPFLqkC\",\"6W2GSzrYjMD9ANBFY\",\"q5s7yTnMdEoeXRTnH\",\"oESR33eXHntMJxp2Q\",\"WFNJLTC9a3xZrbgcF\",\"vjgbYJGLr39bACXND\",\"J3RFGrYLugHTTDxww\",\"k66z8NfCwxStFg2qz\",\"8JyqsSbN2FJXPr3cw\",\"vwmjqntQ9FvszKRye\",\"GhPsce93TtsT45o8z\",\"qvEvDcL32a5F4Tg6c\",\"z7KAn4vEJTcrDKaum\",\"gb9rvGus2Jv7bjZSs\",\"FyDah3MTRW8vXTB6G\",\"mGmoXwXiopnnnqYdh\",\"PRPv763woB2EqjWvZ\",\"vEHDjxx5FuYiPCaXs\",\"KpXzNmd3gyz2Mwka5\",\"Qj6ZX8d4HqwMW2yBk\",\"Jqk2uJZZxEv5wZFze\",\"DSE9iBAeDYfb2LMwM\",\"3rt9Yc6qYctx4ep6v\",\"jPpfWknjsoJcZkin2\",\"tRA43bWeW9bLciKEh\",\"uSh3aNxzD28jBuhxa\",\"yZvzB3qFb8pkHy4dg\",\"nQRzZKeDKuLRf9chX\",\"mNMQvcxKSSvqqMYCH\",\"Y3KkPrBzMBgMiqaQ6\",\"T3ZAuoMrJjvZwN55B\",\"FikSPhcrHBpQ4CyGC\",\"AF6LgdKhEdzwgRJom\",\"ab7BsQuhDo3QgE6bh\",\"6ckDJWbyznyQQLkrP\",\"hmJar7wTPM99rX4HB\",\"Rgdjr9tBGabXFdoXL\",\"JEAi9mG3vvBomJ3Yu\",\"PFjMZGHNAPTkgd7tq\",\"ahWFxnaxt9bXSA4f3\",\"TNQ7ixK78HHTLP7it\",\"rMa8q8fB7xyTN5R2e\",\"XKi8iZXBCHCaebSHh\",\"yrCNkFYQBEDE76eFS\",\"PSrcg6fy835R4c5CW\",\"eoo54vPGzwD3HZuHC\",\"TNMAJidLpPdH4kmBv\",\"jYJ26SiLKBu5GRumq\",\"6u7yc9m6HuHGbHzph\",\"C9LKGu2g5hSijvDzA\",\"nfXGHENb5md7m355s\",\"sCnrfER8vCe4xhpB2\",\"td7qPZ7Lv4pEWT2Ya\",\"gMJhLdyw3tH7L96X2\",\"moFrJ4vxzxPynByzB\",\"cR3ibTMxLyEdDFCHY\",\"N2wnZXkhDH86mgjQ8\",\"sKfrD9gjCDHuqLzSk\",\"2fxapKr8XGdNeaKi2\",\"otXtuQygbcYATMZoP\",\"HqmxnQJM66Y57twhn\",\"AxDfHRFgQ8jfFbF5p\",\"4y2bxsHwifCdZXAQA\",\"cD6ZB5uwpQ5zuK8ni\",\"pYgorHTLHPChinFCm\",\"qJZsi5rhRnWA38FbA\",\"K3RacTvkWHLfzKF8i\",\"DLai9DxpZN6p5TPRX\",\"u5u2YpHXiNgzDNJdX\",\"K96FwtfDDN5WM4Bb7\",\"ksafdYcNM3SFEQoW9\",\"kQH5b8MXJunh84Czq\",\"4tgBydK887PitgAoi\",\"8PwfYqoDQFThzNtvf\",\"oXh8LZ7k6pWZMGZGA\",\"C4QntmkYtB89GNtpd\",\"fxLjWpWbBeaYcvdgB\",\"BeFnbPbMnAM2SjBdZ\",\"Xj6R2zqhgumffQCAN\",\"PTcm3qFvxvLnaKttM\",\"rEWQdNHK6YjuBqmrR\",\"Yp7uvStL97cC9fKkY\",\"p3dsCFdWGzWGhFrSQ\",\"aRqQ42J5zqCmBNd8w\",\"Ycj4iTJGFyvC4bXek\",\"s5M5RvgqR9BhB9JoC\",\"AasGs8AeX9Lcb9xJn\",\"4CFzv558qbGcpQwc4\",\"aP3dk5CrAEeQkKn4k\",\"w3A7cBWyAfukk6xEQ\",\"hnyhBFWwNCz9mDfSi\",\"9Ly8afdtofp8DXzrt\",\"dHZqT6h4JMwk5fPC8\",\"vLrq4dEDMM2wd68Dc\",\"S6Zd8mPuvhuh3MFRt\",\"sJWTa7iWeRoRtqJ8N\",\"jNvegJWCk5HCtEMbK\",\"aEm3Wvj2rFYRL8Lrb\",\"ZNnsMeNkdDhHjSrZb\",\"gJYuGdkXEWWmGRLzu\",\"q5a96XumccZyhQNyL\",\"HF28xZKSLM9wEuqNg\",\"2QGRoQn2dRq3scu7k\",\"DEDniTrstQYGounXT\",\"KdNDysEsy2TW5QRJ2\",\"h9W6uMQLcN6cxXuK4\",\"9pzFiFK3ANLjQfnr2\",\"ahk2qiXKJA753wAJk\",\"aPLuemxzZ5iS57NBQ\",null,\"yr822PZmmiDDenxpB\",\"XrqNzJ2FRG8HnGiR6\",\"2ptN2mhjFwFcHyPZd\",\"eMuCpJ2spXWkJjWNz\",\"4yNLEwL2rsx4EE5Nt\",\"H4abACFDH5t8CnnyH\",\"ZrKCkX7xxGGZzauFW\",\"syRNbbPdLCGXbH2Gy\",\"NG8PWBSjsM8mMhQEq\",\"iojEnnY9FsMfYzp6f\",\"FEYpu9RWysAgW3XnP\",\"Pe8vWpDHRuH9nSGKW\",\"yjtdwc2AC4jA2RWtn\",\"R4SjTgDnpigJYDLyL\",\"LFSASkxgw9hr3KqmC\",\"NNE5HNRXAkmhrWgyQ\",\"oBcs8GLX2ZFLXQy8y\",\"Nb6LYPoQP6KJZt8mz\",\"M8dQuMrEpP8Hc3tHN\",\"3cF6NXq3ZEwdkgSjb\",\"tpxMgkGSHwBjS95Ta\",\"mG8HqKiAQFTdRZthG\",\"KLmLKaJPfsYxp42p2\",\"Ecg4m7srYGgZsb4Ck\",\"gXTAie79kiw28tx5u\",\"iS5BrkGLzJyPK7nKt\",\"SgZ2t9xFuRqdJGofp\",\"kXEfD7xxEyWd7oxxL\",\"9CoqdidjM9KbeKnHY\",\"EMJ6uvBZkie429gdg\",\"J3upzLHuEwXH7Z2hx\",\"DPi9QGLctq2y76KuE\",\"dYPkStFnLvAMsHSzZ\",\"cAP3n5NY64uoMwzRR\",\"5XiuAqicKD4hBdu63\",\"RGMbFMZXJr7DhcAJy\",\"d8qtzoLB264iP8tdY\",\"5HCu9Ydd86QgHDRNP\",\"HuNF3xTBzmatyGSTm\",\"J5T8gZqiZXFuFDTQ7\",\"ZyrfhDTZHb8LymH5b\",\"5S9nX4rKsnCcnv4Cz\",\"r579vsQvT57bCxrE5\",\"buX4mCQhtXCfBjeno\",\"GGdmhAvxXhqhhibJN\",\"eYfPWvZwnJQkHbSTK\",\"3nied3n8KG8RSNixH\",\"4RsakkyRXyYGwFxEa\",\"Ds7L5bksw2QRHjrKL\",\"YcCLwitFMAEJSnxAW\",\"sHjfbGQGLHE6JR6qu\",\"Wpn95NqWxncQrwNgz\",\"66a9xX73nmTEuKs9k\",\"yod5YhKtPqw2GfG9B\",\"AJexRBN9cYQmqvYu6\",\"M276Q3WAg767hagyx\",\"srJ34BaybkQh3qRkM\",\"8BFSTCnoe2QggN64c\",\"LQxof8pGabGuWP7Gn\",\"BrTDhPJcACL2bsrpJ\",\"mvJBakQ35CWAnbbEZ\",\"EfxwqhYdapX3dMQC2\",\"XD5nmvKQchKezPXhy\",\"AFfw7cGg83uYk2Miy\",\"C6qpFbghQ6Lrm2hPz\",\"2PufnQcsHsfymufX3\",\"uw8E83imJYpQiiPpP\",\"CHvzhtXnv8HTbPQ56\",\"4Lwjr34ypKNQNQCar\",\"dzS6WBTMHyFEag6Fp\",\"4TmgHkn5vqyHK3sYC\",\"o7nnKyPcb8YdPeFax\",\"pduNK68oazqQTtbLp\",\"ey3CASd6Je5LEJzfB\",\"wjc4iejpErBhxWwHo\",\"NzbRqGWspQnWMoDrF\",\"RoGGD5cpHb4ftdLDv\",\"Wi4H6ayKsNDWWQCG5\",\"5QN8R22z43SrwoHDz\",\"rCrbqMiaGPgHYTNxu\"],\"quality\":[4,4,4,4,2,5,5,5,4,5,5,5,5,3,5,4,5]},\"complaints\":{\"total\":0,\"reasons\":[],\"skippers\":[\"vQEmjTRgmdGNYB7yk\"]},\"instructions\":{\"score\":-18.25,\"voters\":[\"QaneRr2JNbhj6FTB9\",\"PKJWzgQKwneuaS3Ap\",\"RrJDdNZAKAggwGCXg\",\"eq6bWgNCAXLkFj4tx\",\"kRJztEDJwdsGP9P4z\"]},\"tests\":{\"score\":0,\"voters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.352941176470588,\"family\":[{\"_id\":\"jdYxyKyppvogyhBJ6\",\"language\":\"javascript\"},{\"_id\":\"A9iPfSEZ9fCrPQSwC\",\"language\":\"python3\"},{\"_id\":\"cYzoQuvxE4f3KHaQ6\",\"language\":\"ruby\"}]}}"]