a["{\"msg\":\"result\",\"id\":\"1067\",\"result\":{\"_id\":\"TTdhB3jbKFxb3bDXv\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def left_shift(lst, n):\\n\\t\\n\\ndef right_shift(lst, n):\\n\\t\",\"difficulty\":1.5580357142857142,\"familyId\":\"Q2KAq77LeY2To5g5m\",\"instructions\":\"Create two functions: a **left-shift function** and a **right-shift function**. Each function will take in a list and a single parameter: the number of shifts.\\n\\n```\\n[1, 2, 3, 4, 5]\\n\\n[2, 3, 4, 5, 1]  # left shift of 1\\n[5, 1, 2, 3, 4]  # left shift of 4\\n\\n[5, 1, 2, 3, 4]  # right shift of 1\\n[3, 4, 5, 1, 2]  # right shift of 3\\n```\\n\\n### Examples\\n```\\nleft_shift([1, 2, 3, 4], 1) ➞ [2, 3, 4, 1]\\n\\nright_shift([1, 2, 3, 4], 1) ➞ [4, 1, 2, 3]\\n\\nleft_shift([1, 2, 3, 4, 5], 3) ➞ [4, 5, 1, 2, 3]\\n\\nleft_shift([1, 2, 3, 4, 5], 5) ➞ [1, 2, 3, 4, 5]\\n# You have fully shifted the list, you end up back where you began.\\n\\nleft_shift([1, 2, 3, 4, 5], 6) ➞ [2, 3, 4, 5, 1]\\n# You should be able to take in numbers greater than the length.\\n# Think of the length of the list as a modulo.\\n```\\n\\n### Notes\\n- `n` might be higher than the number of values in the list.\\n- `n` will never be negative.\",\"lab\":\"Test.assert_equals(left_shift([1, 2, 3, 4], 1), [2, 3, 4, 1])\\nTest.assert_equals(right_shift([1, 2, 3, 4], 1), [4, 1, 2, 3])\\nTest.assert_equals(left_shift([1, 2, 3, 4, 5], 3), [4, 5, 1, 2, 3])\\nTest.assert_equals(left_shift([1, 2, 3, 4, 5], 5), [1, 2, 3, 4, 5])\\nTest.assert_equals(left_shift([1, 2, 3, 4, 5], 6), [2, 3, 4, 5, 1])\\nTest.assert_equals(left_shift([1, 2, 3, 4, 5], 1), [2, 3, 4, 5, 1])\\nTest.assert_equals(left_shift([1, 2, 3, 4, 5], 4), [5, 1, 2, 3, 4])\\nTest.assert_equals(right_shift([1, 2, 3, 4, 5], 1), [5, 1, 2, 3, 4])\\nTest.assert_equals(right_shift([1, 2, 3, 4, 5], 3), [3, 4, 5, 1, 2])\\nTest.assert_equals(right_shift([1, 2, 3, 4, 5], 0), [1, 2, 3, 4, 5])\\nTest.assert_equals(right_shift([1, 2, 3, 4, 5], 15), [1, 2, 3, 4, 5])\",\"language\":\"python3\",\"summary\":\"Create two functions: a left-shift function and a right-shift function. Each function will take in a list and a single parameter: the number of shifts.\\n\\n[1, 2, 3, 4, 5]\\n\\n[2, 3, 4, 5, 1]  # left shift of 1\\n[5, 1, 2, 3, 4]  # left shift of 4\\n\\n[5, 1, 2, 3, 4]  # right shift of 1\\n[3, 4, 5, 1, 2]  # right shift of 3\\n\\nExamples\\nleft_shift([1, 2, 3, 4], 1) ➞ [2, 3, 4,\",\"tags\":[\"arrays\",\"language_fundamentals\"],\"timestamp\":{\"$date\":1553274133155},\"title\":\"Left, Right Shift\",\"stats\":{\"completed\":{\"total\":254,\"ratings\":[1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,2,1,0,2,1,2,2,0,2,1,1,2,1,2,1,1,2,2,1,2,2,2,2,2,2,1,3,2,1,2,1,2,2,1,3,2,1,1,2,1,2,2,1,2,2,2,1,0,2,2,3,1,2,1,2,1,2,1,2,0,1,2,2,0,3,1,2,0,2,2,1,2,2,3,2,2,1,2,1,2,2,2,0,2,2,2,2,2,1,2,2,2,2,2,2,1,3,2,1,0,2,1,2,2,1,2,2,2,2,2,2,2,2,2,2,1,2,1,2,0,2,0,2,1,2,1,2,1,2,2,1,2,2,2,2,2,1,2,2,2,2,2,0,0,2,1,2,2,2,2,2,1,2,1,2,2,1,2,1,0,2,2,1,2,3,1,2,2,0,2,2,1,1,5,0,1,0,2,1,2,2,2,0,2,2,0,2,2,1,1,2,2,1,2,1,2,2,2,1,2,1,2,0,2,1,1,2,2],\"rators\":[\"BkPgkDQGHm66X4Qai\",\"gb9rvGus2Jv7bjZSs\",\"Jqk2uJZZxEv5wZFze\",\"mP4JatKyBHAJpFK2L\",\"6W2GSzrYjMD9ANBFY\",\"LG3fKmLudfrGNhvCK\",\"8JyqsSbN2FJXPr3cw\",\"mNMQvcxKSSvqqMYCH\",\"jeuoearPPTcGPgXhf\",\"qvEvDcL32a5F4Tg6c\",\"nc7bRhkxgKyqusYe3\",\"eq6bWgNCAXLkFj4tx\",\"GkWopttqYCAgF6AYc\",\"SKabuq5XuhXBugKBa\",\"W2RBjMJ9KQPg4tjNZ\",\"nZ58gDWFhqXiZpmZQ\",\"97AvnoBaA6LWzJhcJ\",\"uSh3aNxzD28jBuhxa\",\"M8jrv2FfpMQp9Qzpx\",\"yEftMmYz82Cgk7XsA\",\"T5KpnuEwcZCG6a5ZF\",\"nS5Mo26E8XbAWuyuQ\",\"3Zn9zsrBLChXDrovh\",\"tnmRhHf2KMiHjWcto\",\"mJsMoGdrLYr4dKaFr\",\"XjC9ivzaAxfcFiSGj\",\"k66z8NfCwxStFg2qz\",\"4cxKdMqL4Qk2GsJpm\",\"B6XFMKBcfjBkdfa58\",\"X9NeqaKpfykoscpYr\",\"4HC75a4BAtjSd8jPv\",\"yZvzB3qFb8pkHy4dg\",\"CnEvrSom7vBKpAi9T\",\"jenaMTFHBrTNpFWPX\",\"nQRzZKeDKuLRf9chX\",\"tAF9Gf6PiGogbZuWs\",\"Ge525X3sT75K74LoD\",\"H55ZNxHs5qA8RnuMi\",\"Y3KkPrBzMBgMiqaQ6\",\"YQRw52Dhb6yKk3oDm\",\"5uM9326sXAWGh27wr\",\"j7fyR7k8FfGPLraZx\",\"5P9DuHM8ioiiKWRPC\",\"T3ZAuoMrJjvZwN55B\",\"hmJar7wTPM99rX4HB\",\"FikSPhcrHBpQ4CyGC\",\"AF6LgdKhEdzwgRJom\",\"6ckDJWbyznyQQLkrP\",\"ab7BsQuhDo3QgE6bh\",\"RPS4m7AXFwFaoQMNg\",\"g838geytQBJm3Kefi\",\"CioWqrzmDwyunW5zS\",\"iqmPb9JuJDgTFeR8Q\",\"JEAi9mG3vvBomJ3Yu\",\"rMa8q8fB7xyTN5R2e\",\"PFjMZGHNAPTkgd7tq\",\"TNQ7ixK78HHTLP7it\",\"ahWFxnaxt9bXSA4f3\",\"XKi8iZXBCHCaebSHh\",\"aXCm9vWqKwL9XFYoj\",\"WkWyq9wMkZhXB6zsD\",\"yAouD3PxzED8a4gap\",\"PSrcg6fy835R4c5CW\",\"yrCNkFYQBEDE76eFS\",\"o5pRKAbyH9TjiB59q\",\"nmeyrFbZpLR74iC7j\",\"td7qPZ7Lv4pEWT2Ya\",\"TNMAJidLpPdH4kmBv\",\"C9LKGu2g5hSijvDzA\",\"jYJ26SiLKBu5GRumq\",\"6u7yc9m6HuHGbHzph\",\"hsrNYf3WbexXJKhCq\",\"nfXGHENb5md7m355s\",\"sCnrfER8vCe4xhpB2\",\"gMJhLdyw3tH7L96X2\",\"Nj6FwgBtAXsaQwsM2\",\"FgkYtHLxeD8pETJ8T\",\"WBAKsQ3cdcrKxeAcp\",\"498CxrZQdThLMa7ki\",\"4y2bxsHwifCdZXAQA\",\"moFrJ4vxzxPynByzB\",\"tczr8H3zHk2kwp8br\",\"cR3ibTMxLyEdDFCHY\",\"3LiSLdtN58n46NEqg\",\"HQxp7NcdvF92G7bYS\",\"sKfrD9gjCDHuqLzSk\",\"N2wnZXkhDH86mgjQ8\",\"jWrQpWgSshib2CyzB\",\"2fxapKr8XGdNeaKi2\",\"otXtuQygbcYATMZoP\",\"3efW5qCKraPjzEfiX\",\"zREEDWWu2PcWajAGA\",\"qJZsi5rhRnWA38FbA\",\"dZGNAJXB24zNh2tsD\",\"8S5YEwX455Ye4RtKT\",\"DLai9DxpZN6p5TPRX\",\"K3RacTvkWHLfzKF8i\",\"u5u2YpHXiNgzDNJdX\",\"K96FwtfDDN5WM4Bb7\",\"4tgBydK887PitgAoi\",\"8PwfYqoDQFThzNtvf\",\"FHRbzzyA4uoWL8jN6\",\"C4QntmkYtB89GNtpd\",\"6ShafRStcvew4GfCh\",\"ZvK8bvvz922hF2ztw\",\"Nfi64Lq3Ynfqrxt5P\",\"PhceyfmFntJcn5Fhf\",\"CEd9tLdXeDeNHSzys\",\"xAHxqbPxKJHD3LhY6\",\"Xj6R2zqhgumffQCAN\",\"BeFnbPbMnAM2SjBdZ\",\"PTcm3qFvxvLnaKttM\",\"PXAcsKkssS2yLyDv2\",\"2innwjWqxJHo4eRGh\",\"rEWQdNHK6YjuBqmrR\",\"Yp7uvStL97cC9fKkY\",\"t86CNcDzmepSNSFpf\",\"PR89xoYsqJh6osPbn\",\"Ycj4iTJGFyvC4bXek\",\"mxX4rH5ELYkdZ2Mbw\",\"M44nifmWzt3wtYyJx\",\"AasGs8AeX9Lcb9xJn\",\"vgTvCCxgvbCTDvaRT\",\"4CFzv558qbGcpQwc4\",\"v3fjGuc7Pq4yjFygS\",\"9Ly8afdtofp8DXzrt\",\"dHZqT6h4JMwk5fPC8\",\"vLrq4dEDMM2wd68Dc\",\"aRqQ42J5zqCmBNd8w\",\"hnyhBFWwNCz9mDfSi\",\"orFLgPDw9H5MDzmwo\",\"jNvegJWCk5HCtEMbK\",\"ZNnsMeNkdDhHjSrZb\",\"Nua6T3dBurBy3Qfg9\",\"aEm3Wvj2rFYRL8Lrb\",\"Ro3ppqamSxiJv2wxP\",\"gJYuGdkXEWWmGRLzu\",\"HF28xZKSLM9wEuqNg\",\"2QGRoQn2dRq3scu7k\",\"kYWb8BwpKwunQkxeX\",\"k2RxDbsaJCdDju6oB\",\"DEDniTrstQYGounXT\",\"n2BRY9X8899dcG8Bw\",\"KdNDysEsy2TW5QRJ2\",\"EPsD93KbDbm44iz7e\",\"8LfTheFzvicameoz9\",\"eMuCpJ2spXWkJjWNz\",\"R4SjTgDnpigJYDLyL\",\"9pzFiFK3ANLjQfnr2\",\"4rwxLqLs2mNZNg8NB\",\"ahk2qiXKJA753wAJk\",\"ikkjHDqBHu6fT3vGL\",\"yr822PZmmiDDenxpB\",\"XrqNzJ2FRG8HnGiR6\",\"H4abACFDH5t8CnnyH\",\"2ptN2mhjFwFcHyPZd\",\"ZrKCkX7xxGGZzauFW\",\"NG8PWBSjsM8mMhQEq\",\"syRNbbPdLCGXbH2Gy\",\"iojEnnY9FsMfYzp6f\",\"3cF6NXq3ZEwdkgSjb\",\"FEYpu9RWysAgW3XnP\",\"Pe8vWpDHRuH9nSGKW\",\"yjtdwc2AC4jA2RWtn\",\"YcCLwitFMAEJSnxAW\",\"NNE5HNRXAkmhrWgyQ\",\"hRiMXDZNAzyPd5tpt\",\"oBcs8GLX2ZFLXQy8y\",\"iS5BrkGLzJyPK7nKt\",\"tpxMgkGSHwBjS95Ta\",\"mG8HqKiAQFTdRZthG\",\"KLmLKaJPfsYxp42p2\",\"p8qqFdJ3FSk5x9z3G\",\"qD2LrwaDrSdiybLKY\",\"KTFxMsjaW4xgo5ajY\",\"QRv96jmNaYsWkxQEG\",\"DPi9QGLctq2y76KuE\",\"J3upzLHuEwXH7Z2hx\",\"sbJcFfQjQ59Wfg4Cd\",\"spqXrjG3ZFa2j5uTR\",\"dYPkStFnLvAMsHSzZ\",\"DYDJTyGgKFnBRLm2r\",\"cAP3n5NY64uoMwzRR\",\"5XiuAqicKD4hBdu63\",\"KJCDwGkoXh8qtbbKr\",\"KdYQN3KAT2DyTzT2a\",\"RGMbFMZXJr7DhcAJy\",\"3pxHTZBsv7MKzFG6Y\",\"zd9FLSzsGz3evKafy\",\"rfyEkETeoS96QNH4e\",\"dBzwBtRjZqB98DJeB\",\"JS3hNM3XXkxPdg3yk\",\"d8qtzoLB264iP8tdY\",\"Ecg4m7srYGgZsb4Ck\",\"5HCu9Ydd86QgHDRNP\",\"qZQxPQ2kaNKAMesHT\",\"5hQnRWiKkhgKJXNMP\",\"5S9nX4rKsnCcnv4Cz\",\"J5T8gZqiZXFuFDTQ7\",\"fRhyffuFFdj8dmJwX\",\"eYfPWvZwnJQkHbSTK\",\"GGdmhAvxXhqhhibJN\",\"Ds7L5bksw2QRHjrKL\",\"qAby4AWXmTNeusvg3\",\"PWgzeK859suojbrRx\",\"srJ34BaybkQh3qRkM\",\"T6iBEE2jp7f7iEF2P\",\"66a9xX73nmTEuKs9k\",\"CHvzhtXnv8HTbPQ56\",\"yod5YhKtPqw2GfG9B\",\"AJexRBN9cYQmqvYu6\",\"RnY25enEBE8T9P5GS\",\"w67KfQgZ6WAeY7K4Y\",\"8BFSTCnoe2QggN64c\",\"mvJBakQ35CWAnbbEZ\",\"qzXAMXsHZGT8o5hTA\",\"BrTDhPJcACL2bsrpJ\",\"uw8E83imJYpQiiPpP\",\"sHjfbGQGLHE6JR6qu\",\"2PufnQcsHsfymufX3\",\"buX4mCQhtXCfBjeno\",\"T6Rm8mREPMZSftzrC\",\"dzS6WBTMHyFEag6Fp\",\"rhS8qXRjZcpDXkwnE\",\"d9LBRxvADNBB5QJMB\",\"suArq5BbSy7gD6xri\",\"4TmgHkn5vqyHK3sYC\",\"pduNK68oazqQTtbLp\",\"4Lwjr34ypKNQNQCar\",\"JQkZXeaLy3giT5p6W\",\"MKT7khMBGXzA22ykf\",\"3nied3n8KG8RSNixH\",\"bX6tpTCjwoi6XMMbK\",\"fznzd3qnvtbFkkizz\",\"StNu7DPyTgEStZsMY\",\"2qtde7moqrzm7B4Ht\",\"ey3CASd6Je5LEJzfB\",\"Wi4H6ayKsNDWWQCG5\",\"NzbRqGWspQnWMoDrF\",\"X4rzfxGgxx6CS7Bpz\",\"RoGGD5cpHb4ftdLDv\"],\"quality\":[4,5,5,4,5,5,5,5,5,5,5,5,2,5,4,5,5,5,5,5,5,5,5,5,5,5]},\"tests\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"instructions\":{\"score\":-3.95,\"rators\":[\"BkPgkDQGHm66X4Qai\"],\"voters\":[\"KPDPaGaJ4jGtRusF2\",\"qhJMbXctZ29GCX7FL\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.769230769230769,\"family\":[{\"_id\":\"zy9WuhejfNrQrgJti\",\"language\":\"cpp\"},{\"_id\":\"GSXZ9PBjGhKijkC4o\",\"language\":\"javascript\"},{\"_id\":\"aGvwpaiE8PYctFY4d\",\"language\":\"php\"},{\"_id\":\"TTdhB3jbKFxb3bDXv\",\"language\":\"python3\"},{\"_id\":\"4okqXHZxxSFHtrJAv\",\"language\":\"ruby\"}]}}"]