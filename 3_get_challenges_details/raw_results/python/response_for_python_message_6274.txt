a["{\"msg\":\"result\",\"id\":\"1847\",\"result\":{\"_id\":\"abEZ5AEPaDBHFjfJG\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"def formula(txt):\\n\\t\",\"difficulty\":2.5526315789473686,\"familyId\":\"syEuMxy5GNioL8ooQ\",\"instructions\":\"Create a function that takes a string and returns `True` or `False` depending on whether or not the given formula is correct.\\n\\n### Examples\\n```\\nformula(\\\"6 * 4 = 24\\\") ➞ True\\n\\nformula(\\\"18 / 17 = 2\\\") ➞ False\\n\\nformula(\\\"\\\") ➞ None\\n```\\n\\n### Notes\\n- You have to figure out what `a` is.\\n- Ignore the spaces.\\n- If the input is an empty string `\\\"\\\"`, return `None`.\\n- You do not need to dynamically find the value of `a` (it's a constant and the same accross all tests).\",\"lab\":\"Test.assert_equals(formula('6 * 4 = 24'), True)\\nTest.assert_equals(formula('120 - 7 = 100'), False)\\nTest.assert_equals(formula('16 - 8 = 16 / 2 = 64 / 8'), True)\\nTest.assert_equals(formula('a = a'), True)\\nTest.assert_equals(formula('a * 7 = 90'), False)\\nTest.assert_equals(formula('16 * 10 = 160 = 14 + 120'), False)\\nTest.assert_equals(formula('a=4'), True)\\nTest.assert_equals(formula(''), None)\\nTest.assert_equals(formula('1000 / 10 = 100 = 2 * 50'), True)\\nTest.assert_equals(formula('18 / 17 = 2'), False)\\nTest.assert_equals(formula('(1+2+3+4+5+6+7+8)/a=9'), True)\\nTest.assert_equals(formula('2 * 2 * 2 = a * 2 = 8'), True)\\nTest.assert_equals(formula('   8/       9 =       5'), False)\\nTest.assert_equals(formula('1111           /     101=     11'), True)\\nTest.assert_equals(formula('a / a = a - 3'), True)\",\"language\":\"python3\",\"summary\":\"Create a function that takes a string and returns True or False depending on whether or not the given formula is correct.\\n\\nExamples\\nformula(\\\"6 * 4 = 24\\\") ➞ True\\n\\nformula(\\\"18 / 17 = 2\\\") ➞ False\\n\\nformula(\\\"\\\") ➞ None\\n\\nNotes\\nYou have to figure out what a is.\\nIgnore the spaces.\\nIf the input is an empty string \\\"\\\", return None.\\nYou do not need to dynamically find the\",\"tags\":[\"algebra\",\"math\",\"numbers\",\"validation\"],\"timestamp\":{\"$date\":1562891148467},\"title\":\"Check if the Formula is Correct\",\"stats\":{\"completed\":{\"total\":129,\"ratings\":[4,4,4,4,4,3,0,5,2,3,4,2,3,2,2,3,5,2,3,5,2,5,5,3,0,5,2,1,3,0,1,4,0,2,3,1,4,0,3,4,2,3,2,3,3,4,2,3,3,3,2,2,3,4,3,2,3,2,4,4,5,0,0,4,2,3,4,4,3,0,3,4,2,1,3,2,4,4,3,2,2,1,3,0,4,0,2,5,4,2,2,4,2,1,3,1,0,0,3,2,3,1,1,2,0,2,4,2,0,3,3,0,4,3],\"rators\":[\"tAF9Gf6PiGogbZuWs\",\"yZvzB3qFb8pkHy4dg\",\"AYaEkTWLMmfzpwejr\",\"7g3vZaQXhLpxrajyg\",\"8JyqsSbN2FJXPr3cw\",\"BgP7LFjSWhPvp547w\",\"QKYi6pYeaYFovNHX4\",\"BFNm9gacwba9KyLFW\",\"Wpn95NqWxncQrwNgz\",\"gb9rvGus2Jv7bjZSs\",\"mKK6Z6WEKKJ2W2ZNT\",\"ZgdejAm3u2Q6tFpfg\",\"EquWGxnyHztJLx6Kt\",\"ZatR59KfT8s4Z3JTQ\",\"3XWw4ui5Tipb2Qz8o\",\"aCNWav8S8Try9RkC6\",\"FQKLJZoeNetX4cty7\",\"9Gf6g4fuKc3uou9w2\",\"KX2fwZ8RoSsNCkCCh\",\"MfmNRNNmkoMnBiS7E\",\"6W2GSzrYjMD9ANBFY\",\"5Qvy7fNM2YEQ6PtbY\",\"2fxapKr8XGdNeaKi2\",\"BNyGrGwq5q4r9kvQi\",\"9YtQPAffoq4WJLcAP\",\"3bB8mJha9tBmKzmtm\",\"HqmxnQJM66Y57twhn\",\"C4QntmkYtB89GNtpd\",\"s5M5RvgqR9BhB9JoC\",\"XKi8iZXBCHCaebSHh\",\"FgkYtHLxeD8pETJ8T\",\"JKb5rhL6DKcCAypF9\",\"AbrJ8hMyv5fFXG6DN\",\"n5xGypteaCL2bRGWM\",\"8PwfYqoDQFThzNtvf\",\"2innwjWqxJHo4eRGh\",\"PytNZK9mNiRiZxPrm\",\"Jqk2uJZZxEv5wZFze\",\"kQH5b8MXJunh84Czq\",\"sJLSaZ8yjzRe9LRZE\",\"WLFPvm65aHfgwQy7N\",\"bB6S2iEZDdaJZEwnF\",\"4xwButZn34q92d9Yn\",\"aEm3Wvj2rFYRL8Lrb\",\"AasGs8AeX9Lcb9xJn\",\"mDWNyaaQ9hvPCRzSd\",\"n2BRY9X8899dcG8Bw\",\"nzqwymsdwC7gxAmip\",\"fznzd3qnvtbFkkizz\",\"gJYuGdkXEWWmGRLzu\",\"S9hHPiybdTKyuELsn\",\"kYWb8BwpKwunQkxeX\",\"ZNnsMeNkdDhHjSrZb\",\"bJaPCBx63YxdJAuTS\",\"sz8ufn9i8zeiGWpAy\",\"RpmGuKA3d34t4gkBr\",\"aPLuemxzZ5iS57NBQ\",\"eMuCpJ2spXWkJjWNz\",\"5dHucvf2qBYyKim7X\",\"eHhL37DG7oW3vTcg7\",\"YRstQuthRkFeBiXug\",\"ekQh3jzgGLsEMbKo3\",\"4yNLEwL2rsx4EE5Nt\",\"hAcYeP2bPsvZoFBFw\",\"bJxaKHJqR82EWw8Su\",\"Z4M3NAa4TXquMNkHe\",\"6gS4E2C84vBYTYeDZ\",\"Ecg4m7srYGgZsb4Ck\",\"cykCKNJcqFBxz4T8s\",\"f2BoqyCpgnmjEjLqx\",\"xn7uGNKeAwPEkP9oA\",\"eoepTq5ES5tfgY9XT\",\"NfMJuiBk6FN5Jc6ow\",\"DNACg4rcgZsPtYGZ8\",\"zZDaXBxMzTCBhNkgL\",\"4fhjJBvLBWh6QeSih\",\"8fZxjQfuXw5HMSRJM\",\"gSFJPsMXnqAog3Q9f\",\"8sNv5PTHa7XQ8bNqR\",\"yjtdwc2AC4jA2RWtn\",\"HF28xZKSLM9wEuqNg\",\"w2HhxvSLmDhaGCAjE\",\"J5T8gZqiZXFuFDTQ7\",\"pxxhsEH7yhp4GJ5BM\",\"ygDJ7HEzRoJZyPEF4\",\"QRv96jmNaYsWkxQEG\",\"qYDRywWRZdswy4b6e\",\"v9KtC8YLbMWmXiW2H\",\"hXoTNPPmJLzkZnkSX\",\"4RY3zj9C2t8GGefhi\",\"J3upzLHuEwXH7Z2hx\",\"WPf3wuMaAipBActzR\",\"9Hp6Z83SwWxMQRouq\",\"qPpQfR5KyDb5Y3EFf\",\"mheLkMZzLdcRDbzmt\",\"eHcgvkTGsH7ZziqBo\",\"iojEnnY9FsMfYzp6f\",\"gXTAie79kiw28tx5u\",\"XNmN6ztj36a7eChbD\",\"GTKsdeEihE636Le9i\",\"2fXGcydhjgpxQXu4Q\",\"yr822PZmmiDDenxpB\",\"2PufnQcsHsfymufX3\",\"9ivvGvJGvtQfigQaZ\",\"GGdmhAvxXhqhhibJN\",\"LQxof8pGabGuWP7Gn\",\"P7NmFbCJ5offXMRvB\",\"8nE8QHnFYsHCFebte\",\"etoxSpG4fGKThLozM\",\"fbr22rabEJMfBp7vD\",\"H9KZi2cjt4FwH7qog\",\"hkiz2Nv927cYGrA86\",\"T6iBEE2jp7f7iEF2P\",\"oBcs8GLX2ZFLXQy8y\",\"AQSqD9oNv2uPfxZCR\",\"Yp7uvStL97cC9fKkY\",\"gKnWjDjwrJh7MK2df\",\"m3R9aaRoEbaxRsSNA\",\"x9F5WvWftdnhG7DqT\",\"CHvzhtXnv8HTbPQ56\",\"iqmPb9JuJDgTFeR8Q\",\"suArq5BbSy7gD6xri\"],\"quality\":[4,4,5,5,4,5,3,2,4,5,4,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.230769230769231,\"family\":[{\"_id\":\"gvcmR4McLyia2PDac\",\"language\":\"cpp\"},{\"_id\":\"MLzJD3iHnYZo566nA\",\"language\":\"java\"},{\"_id\":\"uTZ4bLqZ5vHp73K9t\",\"language\":\"javascript\"},{\"_id\":\"abEZ5AEPaDBHFjfJG\",\"language\":\"python3\"},{\"_id\":\"wJEPeDyMiqHdoAMtS\",\"language\":\"ruby\"}]}}"]