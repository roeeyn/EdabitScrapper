a["{\"msg\":\"result\",\"id\":\"919\",\"result\":{\"_id\":\"mCNwMqca9R3hBY6fY\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"def make_happy(txt):\\n\\t\",\"difficulty\":1.4594594594594594,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"TgivWHxrZJZtzzc8R\",\"instructions\":\"It is important to be happy! Therefore, you must create a function that takes a sentence containing sad faces and turn them into happy ones! This involves changing only the mouths.\\n\\n- **Sad face examples:** `:(`   `8(`   `x(`   `;(`\\n- **Happy face examples:** `:)`   `8)`   `x)`   `;)`\\n\\nMake sure to only change the face if there are eyes before them, *round(3.4)* wouldn't become *round)3.4)* (for example).\\n\\n### Examples\\n```\\nmake_happy(\\\"My current mood: :(\\\") ➞ \\\"My current mood: :)\\\"\\n\\nmake_happy(\\\"I was hungry 8(\\\") ➞ \\\"I was hungry 8)\\\"\\n\\nmake_happy(\\\"print('x(')\\\") ➞ \\\"print('x)')\\\"\\n```\\n\\n### Notes\\nFaces such as `:(((((((` are not included.\",\"isHidden\":false,\"lab\":\"Test.assert_equals(make_happy('My current mood: :('), 'My current mood: :)')\\nTest.assert_equals(make_happy('I was hungry 8('), 'I was hungry 8)')\\nTest.assert_equals(make_happy('print(\\\"x(\\\")'), 'print(\\\"x)\\\")')\\nTest.assert_equals(make_happy(\\\"I'm thirsty ;(\\\"), \\\"I'm thirsty ;)\\\")\\nTest.assert_equals(make_happy('(((:())))'), '(((:)))))')\\nTest.assert_equals(make_happy('I am :( :( 8( :)'), 'I am :) :) 8) :)')\\nTest.assert_equals(make_happy('l'), 'l')\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,0,2,1,1,1,0,1,2,1,1,3,2,1,0,2,2,0,1,0,1,1,1,2,2,1,1,1,1,3,0,2,3,2,2,0,1,1,2,2,0,1,0,0,1,1,5,1,2,2,2,0,2,1,1,1,2,2,2,2,2,2,0,2,2,5,2,2,1,1,2,1,1,0,2,1,2,1,1,2,2,0,2,2,2,2,1,1,2,2,3,0,2,2,2,1,1,1,2,5,0,1,2,1,1,2,2,1,1,0,0,1,2,1,1,2,1,1,2,2,2,3,2,2,2,2,2,3,0,2,2,2,2,1,1,0,2,0,2,1,2,2,2,2,1,1,0,1,2,1,2,1,2,2,2,2,1,2,2,1,3,0,2,2,2,1,2,2,2,2,2,2,2,2,2,2,0,0,1,1,2,1,1,0,2,0,2,1,2,2,2,1,2,2,2,2,2,2,1,1,0,1,2,2,2,2,2,1,1,2,2,0,2,1,1,0,2,1],\"rators\":[\"tAF9Gf6PiGogbZuWs\",\"2fxapKr8XGdNeaKi2\",\"Jqk2uJZZxEv5wZFze\",\"N2wnZXkhDH86mgjQ8\",\"u5u2YpHXiNgzDNJdX\",\"gb9rvGus2Jv7bjZSs\",\"CBXLutgEKHKvbgE3h\",\"4fctAnxyFRB8stPRQ\",\"nnFa8YjQpySGC47zc\",\"hnyhBFWwNCz9mDfSi\",\"nQRzZKeDKuLRf9chX\",\"nfXGHENb5md7m355s\",\"jNvegJWCk5HCtEMbK\",\"HqmxnQJM66Y57twhn\",\"K96FwtfDDN5WM4Bb7\",\"j2wcHGHmPCHbaQEye\",\"ab7BsQuhDo3QgE6bh\",\"4CFzv558qbGcpQwc4\",\"jeuoearPPTcGPgXhf\",\"N7GPFEhCaiQ79MKjz\",\"Ycj4iTJGFyvC4bXek\",\"s5M5RvgqR9BhB9JoC\",\"BeFnbPbMnAM2SjBdZ\",\"fxLjWpWbBeaYcvdgB\",\"rEWQdNHK6YjuBqmrR\",\"Nj6FwgBtAXsaQwsM2\",\"8JyqsSbN2FJXPr3cw\",\"Yp7uvStL97cC9fKkY\",\"DryNRN98Dj24BpgrL\",\"mxX4rH5ELYkdZ2Mbw\",\"C4QntmkYtB89GNtpd\",\"NfMJuiBk6FN5Jc6ow\",\"cG7psgkbckNQNn6vX\",\"PBAjYFEReL7L2Ao8W\",\"vym3QQumqXjQJYw77\",\"5X4P52TsyhZmY5XNT\",\"Zo4iDm422SEYA3Zxx\",\"wCGn7WmAcPXKEa3rM\",\"yabtHTtycsWhcGBfD\",\"ey3CASd6Je5LEJzfB\",\"mZnXCe6hcnbv3DNvp\",\"Fk9kLwoG4Brf4KsKf\",\"WcqujsAnCdQ9uRbeZ\",\"XbxHXmh5ZmRN2gw3K\",\"AasGs8AeX9Lcb9xJn\",\"JPtpz9cnJwtS8L7ui\",\"kXEfD7xxEyWd7oxxL\",\"sy8qpAykttp6nMDyY\",\"sJWTa7iWeRoRtqJ8N\",\"qWKtLsBqgYPocHofi\",\"nc7bRhkxgKyqusYe3\",\"kQH5b8MXJunh84Czq\",\"SuHkbbGhjfqvP4yJg\",\"GM2X83qnuLXTHe5zA\",\"KakQgfNR6m94AF79b\",\"sz5duKFGpqN74k7SY\",\"iMHrN3Wiefh9Ame38\",\"yvD87XXgk7QFqDrSx\",\"omQhBXTwsBMv6kgz4\",\"ASZk6eFeYMj5pitoe\",\"BByKDngfPvW6w4m7d\",\"zg8GmMSP2LkHBtAzy\",\"EQbnbkkPYtGxiviTp\",\"23oi2a3vQwhtLEbSj\",\"cPbBwmgPeFYnpqSNK\",\"aoRaYQZEQPrJT22wX\",\"2innwjWqxJHo4eRGh\",\"aRqQ42J5zqCmBNd8w\",\"v3fjGuc7Pq4yjFygS\",\"Qcv3kqBdyGHHbzWY5\",\"3ECpdeExhBmkYXtba\",\"4tgBydK887PitgAoi\",\"cSaaAxqkYsPDXmMuf\",\"9Ly8afdtofp8DXzrt\",\"xxxhm6QEkRpah4k94\",\"YCHnE8feJyuhcpDc2\",\"X29Ekg7HjqHAYgCSM\",\"KMze4vkbmvnL2aDsi\",\"sz8ufn9i8zeiGWpAy\",\"mybpojPXaZigaqsAD\",\"ZQSG2DF9TjmBGXPwu\",\"Lfut9z3euZ3odxFcH\",\"sbJcFfQjQ59Wfg4Cd\",\"DXBbJKYFTBi2pxR7c\",\"yZvzB3qFb8pkHy4dg\",\"ovqQRfyvmEDypjrnC\",\"yKttxy9JGn5Jzwuj6\",\"pfgcN6p9AtBZE7DEL\",\"6LhWEvsGQm4iL9Hei\",\"dZGNAJXB24zNh2tsD\",\"dHZqT6h4JMwk5fPC8\",\"RZwfR4TR6fopHpdCD\",\"XKi8iZXBCHCaebSHh\",\"cR3ibTMxLyEdDFCHY\",\"rJGeRSCjGzRuYfHZS\",\"PSrcg6fy835R4c5CW\",\"aEm3Wvj2rFYRL8Lrb\",\"2iFe3EHEH2YdhSKrs\",\"J5T8gZqiZXFuFDTQ7\",\"v9KtC8YLbMWmXiW2H\",\"2QGRoQn2dRq3scu7k\",\"8PwfYqoDQFThzNtvf\",\"ZNnsMeNkdDhHjSrZb\",\"HF28xZKSLM9wEuqNg\",\"gJYuGdkXEWWmGRLzu\",\"eLkj3Zb2DqiW4AEEh\",\"q5a96XumccZyhQNyL\",\"KRSKj7ikX2ytWFmod\",\"9uZpgAtSuPZ7W7DL6\",\"Cc2Cgj4MWXZxsTooC\",\"3Zceb8GudqAG3onG3\",\"8PScd5FdMfmkwnFPj\",\"wZoxzQDbso9SMAPkY\",\"9pzFiFK3ANLjQfnr2\",\"DEDniTrstQYGounXT\",\"M8dQuMrEpP8Hc3tHN\",\"KRmxvA4mWgfKvHmYN\",\"n2BRY9X8899dcG8Bw\",\"KdNDysEsy2TW5QRJ2\",\"5nY48krepaT4a4QTN\",\"k5mp7Hkg8w5rwiXpe\",\"WKsvry6M74GDrtqHQ\",\"MKT7khMBGXzA22ykf\",\"FEYpu9RWysAgW3XnP\",\"NsEMoXJ4nfEMtoCn8\",\"DwetpbChQM4r6Gwah\",\"odH7dXFsDzTxW6eGJ\",\"ahk2qiXKJA753wAJk\",\"XrqNzJ2FRG8HnGiR6\",\"yr822PZmmiDDenxpB\",\"4yNLEwL2rsx4EE5Nt\",\"a777e8chPvJkY3tKa\",\"NG8PWBSjsM8mMhQEq\",\"E8TMSMSamEbBtf9Lo\",\"dKKMvaYoJunNPk5Wa\",\"ekQh3jzgGLsEMbKo3\",\"eMuCpJ2spXWkJjWNz\",\"2ptN2mhjFwFcHyPZd\",\"3cF6NXq3ZEwdkgSjb\",\"H4abACFDH5t8CnnyH\",\"ZrKCkX7xxGGZzauFW\",\"So6PHm74mfJuY2WTs\",\"zd9FLSzsGz3evKafy\",\"Wv2vJnEj8ywNmARoF\",\"NNE5HNRXAkmhrWgyQ\",\"JLMdspJi3jJayTD46\",\"syRNbbPdLCGXbH2Gy\",\"Ne8mK9DDHG8TRkoxG\",\"6R8TPvqtrMZewwLBp\",\"YcCLwitFMAEJSnxAW\",\"6SKDJwXpev4qPSzgM\",\"jN3vmzf6ad7EubAjQ\",\"8BFSTCnoe2QggN64c\",\"GmnxPhfiD7roRhsRX\",\"rfyEkETeoS96QNH4e\",\"R4SjTgDnpigJYDLyL\",\"iojEnnY9FsMfYzp6f\",\"yNjkHfHESBAnCssPB\",\"bJxaKHJqR82EWw8Su\",\"b9YQPLb9ZPSADdHXX\",\"yjtdwc2AC4jA2RWtn\",\"oBcs8GLX2ZFLXQy8y\",\"ta5CrWnBCRusD2WMo\",\"6gS4E2C84vBYTYeDZ\",\"C9LKGu2g5hSijvDzA\",\"RehJGBFS6CYiWdjZx\",\"7K2GEb5TZRtSpyyGS\",\"hCRwzCSbPr5thmCQQ\",\"TPhfpB5tzQWSSn67n\",\"ji5f27FPz4wRRF6Ls\",\"b5oEvBqHWLRnJgp22\",\"KLmLKaJPfsYxp42p2\",\"tpxMgkGSHwBjS95Ta\",\"mG8HqKiAQFTdRZthG\",\"gXTAie79kiw28tx5u\",\"9CoqdidjM9KbeKnHY\",\"6HgMANhu6WiGyXSGN\",\"QRv96jmNaYsWkxQEG\",\"5HCu9Ydd86QgHDRNP\",\"9FCeFzjPA4jrQ7oHW\",\"3LiSLdtN58n46NEqg\",\"DYDJTyGgKFnBRLm2r\",\"NzbRqGWspQnWMoDrF\",\"wRttWTM59y8m5mx7x\",\"DPi9QGLctq2y76KuE\",\"fznzd3qnvtbFkkizz\",\"dj5AyG5fWP8FdsSmZ\",\"Kh3Pc2ZRusurLaMyP\",\"rrSC943cCKNG48sH4\",\"9rhsisf8ofHavG5aT\",\"sHjfbGQGLHE6JR6qu\",\"EMJ6uvBZkie429gdg\",\"8fZxjQfuXw5HMSRJM\",\"d8qtzoLB264iP8tdY\",\"cAP3n5NY64uoMwzRR\",\"dYPkStFnLvAMsHSzZ\",\"RGMbFMZXJr7DhcAJy\",\"J3upzLHuEwXH7Z2hx\",\"5XiuAqicKD4hBdu63\",\"dQK2T76aHcRJkrbKB\",\"4fjSgcqhQQZM2ZFRP\",\"cjN86MMHPvsG3PvdW\",\"KJCDwGkoXh8qtbbKr\",\"DpnYcMphntjsQ96qg\",\"3pxHTZBsv7MKzFG6Y\",\"C2AfMipCicfD58WJ9\",\"o4ixjQGSaYqA2JoM4\",\"pduNK68oazqQTtbLp\",\"R29kgJ9M7R4qqwjcE\",\"6xTu4r8NMczBFvmtz\",\"5hQnRWiKkhgKJXNMP\",\"YRAzEBJoLvSaiPtYx\",\"GGdmhAvxXhqhhibJN\",\"5S9nX4rKsnCcnv4Cz\",\"buX4mCQhtXCfBjeno\",\"axdSNLZpiCDF8RS6n\",\"Ds7L5bksw2QRHjrKL\",\"yod5YhKtPqw2GfG9B\",\"srJ34BaybkQh3qRkM\",\"6Lfjkdspqw8m6A7Jk\",\"CTKmXtrqDYqJBnuy8\",\"q6QsMYNMpPNtmyTeW\",\"wjc4iejpErBhxWwHo\",\"qQQ4hCQpzitmHSkjS\",\"qAby4AWXmTNeusvg3\",\"bvmTE46bfcM4ogj34\",\"T6iBEE2jp7f7iEF2P\",\"XD5nmvKQchKezPXhy\",\"66a9xX73nmTEuKs9k\",\"AFfw7cGg83uYk2Miy\",\"PC3pLs36zNzpRDSuE\",\"2EbDCCJJvCfKkbYia\",\"BrTDhPJcACL2bsrpJ\",\"Wpn95NqWxncQrwNgz\",\"c2q7mY39z5JPEMCaM\",\"mvJBakQ35CWAnbbEZ\",\"2PufnQcsHsfymufX3\",\"X4rzfxGgxx6CS7Bpz\",\"K6MfKMytoJJuSGewP\",\"JKb5rhL6DKcCAypF9\",\"JhX7jvtpwNyxcc39m\",\"bv4ycSophchSEFoK9\",\"BdnE4RS5puoxo92mA\",\"KNDFSyYmXSrxBKjEJ\",\"hR7GMiqGap4CzEWSy\",\"QvEXmSEo3ANp3yPyH\",\"4Lwjr34ypKNQNQCar\",\"4TmgHkn5vqyHK3sYC\",\"T6Rm8mREPMZSftzrC\",\"2HfNkb2SoqdyjKW3o\",\"d9LBRxvADNBB5QJMB\",\"yAouD3PxzED8a4gap\",\"uGuS9YRXW2nj4p6zf\",\"FzxTj4GuujhwpZM7y\",\"Qyfyyw6oC4EHAndzo\",\"rCrbqMiaGPgHYTNxu\",\"CHvzhtXnv8HTbPQ56\",\"5QN8R22z43SrwoHDz\",\"Wi4H6ayKsNDWWQCG5\",\"DQskEvAv5KiJDPtGF\",\"Ncn7Qn2LbdsiJnfFk\",\"wrL4iX2CCSqDCCty3\",\"8uiLiJcmWxWe6qw65\"],\"total\":286,\"quality\":[5,5,5,2,5,4,3,5,5,5,5,4,5,5,5,5,5,5,5,5,3,5,5,4,5,5,5,5,5,5,5,5,4,5,5,4,5,5,5,5,5,5,5,5,5,5]},\"flags\":1},\"summary\":\"It is important to be happy! Therefore, you must create a function that takes a sentence containing sad faces and turn them into happy ones! This involves changing only the mouths.\\n\\nSad face examples: :(   8(   x(   ;(\\nHappy face examples: :)   8)   x)   ;)\\n\\nMake sure to only change the face if there are eyes before them, round(3.4) wouldn't become round)3.4)\",\"tags\":[\"strings\",\"formatting\",\"regex\"],\"timestamp\":{\"$date\":1579382133616},\"title\":\"Turn That Frown Upside Down\",\"quality\":4.739130434782608,\"family\":[{\"_id\":\"3HcuuwEyBAExktt6c\",\"language\":\"javascript\"},{\"_id\":\"mCNwMqca9R3hBY6fY\",\"language\":\"python3\"},{\"_id\":\"XCH8nDHSRGNMF8jdu\",\"language\":\"ruby\"}]}}"]