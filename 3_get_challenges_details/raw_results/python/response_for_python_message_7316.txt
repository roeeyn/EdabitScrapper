a["{\"msg\":\"result\",\"id\":\"2365\",\"result\":{\"_id\":\"zydQcyEw35KuntMcK\",\"author\":\"Evgeny SH\",\"authorId\":\"8PwfYqoDQFThzNtvf\",\"code\":\"def num_prime_arrangements(n):\\n\\t\",\"difficulty\":3.8666666666666667,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"Fa4rPhAcJRgggSA6k\",\"instructions\":\"The function is given an integer `n`. Make a list `lst = [1, 2, 3, ..., n]`. Consider all possible permutations of `lst`. Find out how many permutations are such that all prime numbers from the list are located at prime-index positions, imagining that the list indices are `1-based`. The number of such permutations can be large, thus return `n_permutations % (10**9 + 7)`.\\n\\n### Examples\\n```\\nnum_prime_arrangements(3) ➞ 2\\n# [1, 2, 3], [1, 3, 2] -> 2 permutations\\n# [2, 1, 3] cannot be counted because prime number 2 is at position not prime 1\\n\\nnum_prime_arrangements(4) ➞ 4\\n# [1, 2, 3, 4], [4, 2, 3, 1], [1, 3, 2, 4], [4, 3, 2, 1] -> 4 permutations\\n# prime numbers 2, 3 at prime positions 2, 3\\n\\nnum_prime_arrangements(5) ➞ 12\\n# [1, 2, 3, 4, 5], [4, 2, 3, 1, 5], etc -> 12 permutations\\n```\\n\\n### Notes\\nThe given input is `2 < n < 101`.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"from time import perf_counter\\ntic = perf_counter()\\n\\nTest.assert_equals(num_prime_arrangements(3), 2)\\nTest.assert_equals(num_prime_arrangements(4), 4)\\nTest.assert_equals(num_prime_arrangements(5), 12)\\n\\nlst_tests = [(6, 36), (7, 144), (8, 576), (9, 2880), (10, 17280), (11, 86400), (12, 604800), (13, 3628800), (14, 29030400), (15, 261273600), (16, 612735986), (17, 289151874), (18, 180670593), (19, 445364737), (20, 344376809), (21, 476898489), (22, 676578804), (23, 89209194), (24, 338137903), (25, 410206413), (26, 973508979), (27, 523161503), (28, 940068494), (29, 400684877), (30, 13697484), (31, 150672324), (32, 164118783), (33, 610613205), (34, 44103617), (35, 58486801), (36, 462170018), (37, 546040181), (38, 197044608), (39, 320204381), (40, 965722612), (41, 554393872), (42, 77422176), (43, 83910457), (44, 517313696), (45, 36724464), (46, 175182841), (47, 627742601), (48, 715505693), (49, 327193394), (50, 451768713), (51, 263673556), (52, 755921509), (53, 94744060), (54, 600274259), (55, 410695940), (56, 427837488), (57, 541336889), (58, 736149184), (59, 514536044), (60, 125049738), (61, 250895270), (62, 39391803), (63, 772631128), (64, 541031643), (65, 428487046), (66, 567378068), (67, 780183222), (68, 228977612), (69, 448880523), (70, 892906519), (71, 858130261), (72, 622773264), (73, 78238453), (74, 146637981), (75, 918450925), (76, 514800525), (77, 828829204), (78, 243264299), (79, 351814543), (80, 405243354), (81, 909357725), (82, 561463122), (83, 913651722), (84, 732754657), (85, 430788419), (86, 139670208), (87, 938893256), (88, 28061213), (89, 673469112), (90, 448961084), (91, 80392418), (92, 466684389), (93, 201222617), (94, 85583092), (95, 76399490), (96, 500763245), (97, 519081041), (98, 892915734), (99, 75763854), (100, 682289015)]\\nfor t in lst_tests:\\n    Test.assert_equals(num_prime_arrangements(t[0]), t[1])\\n\\nprint('t_sec = {:.6f}'.format(perf_counter() - tic))\",\"language\":\"python3\",\"quality\":0,\"stats\":{\"completed\":{\"ratings\":[5,5,5,5,5,5,4,4,5,3,1,4,2,5,0],\"quality\":[],\"rators\":[\"8PwfYqoDQFThzNtvf\",\"xn7uGNKeAwPEkP9oA\",\"vTfyrr4pGddp8rbXc\",\"iS5BrkGLzJyPK7nKt\",\"eHcgvkTGsH7ZziqBo\",\"yjtdwc2AC4jA2RWtn\",\"MpfytGFYF77emJ3cT\",\"mwBTYXNw6pFLwHKki\",\"s5M5RvgqR9BhB9JoC\",\"T6iBEE2jp7f7iEF2P\"],\"total\":11},\"flags\":0},\"summary\":\"The function is given an integer n. Make a list lst = [1, 2, 3, ..., n]. Consider all possible permutations of lst. Find out how many permutations are such that all prime numbers from the list are located at prime-index positions, imagining that the list indices are 1-based. The number of such permutations can be large, thus return n_permutations % (10**9 + 7)\",\"tags\":[\"algorithms\",\"arrays\",\"logic\",\"math\"],\"timestamp\":{\"$date\":1612455870733},\"title\":\"Prime Numbers at Prime Indices\",\"family\":[{\"_id\":\"zydQcyEw35KuntMcK\",\"language\":\"python3\"}]}}"]