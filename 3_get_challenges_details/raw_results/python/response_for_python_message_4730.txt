a["{\"msg\":\"result\",\"id\":\"1081\",\"result\":{\"_id\":\"q7BdzRw4j7zFfFb4R\",\"archived\":false,\"author\":\"kochug\",\"authorId\":\"vQEmjTRgmdGNYB7yk\",\"code\":\"def merge_arrays(a, b):\",\"difficulty\":1.5662983425414365,\"familyId\":\"BtymEGXQHRZ4qbqeA\",\"instructions\":\"Create a function that takes two lists and combines them by alternatingly taking elements from each list in turn.\\n\\n- The lists may be of different lengths, with at least one character / digit.\\n- The first list will contain string characters (lowercase, a-z).\\n- The second list will contain integers (all positive).\\n\\n### Examples\\n```\\nmerge_arrays([\\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"d\\\", \\\"e\\\"], [1, 2, 3, 4, 5])\\n➞ [\\\"a\\\", 1, \\\"b\\\", 2, \\\"c\\\", 3, \\\"d\\\", 4, \\\"e\\\", 5]\\n\\nmerge_arrays([1, 2, 3], [\\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"d\\\", \\\"e\\\", \\\"f\\\"])\\n➞ [1, \\\"a\\\", 2, \\\"b\\\", 3, \\\"c\\\", \\\"d\\\", \\\"e\\\", \\\"f\\\"]\\n\\nmerge_arrays([\\\"f\\\", \\\"d\\\", \\\"w\\\", \\\"t\\\"], [5, 3, 7, 8])\\n➞ [\\\"f\\\", 5, \\\"d\\\", 3, \\\"w\\\", 7, \\\"t\\\", 8]\\n```\\n\\n### Notes\\nN/A\",\"lab\":\"Test.assert_equals(merge_arrays([\\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"d\\\", \\\"e\\\"], [1, 2, 3, 4, 5]), [\\\"a\\\", 1, \\\"b\\\", 2, \\\"c\\\", 3, \\\"d\\\", 4, \\\"e\\\", 5])\\nTest.assert_equals(merge_arrays([1, 2, 3], [\\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"d\\\", \\\"e\\\", \\\"f\\\"]), [1, \\\"a\\\", 2, \\\"b\\\", 3, \\\"c\\\", \\\"d\\\", \\\"e\\\", \\\"f\\\"])\\nTest.assert_equals(merge_arrays([\\\"f\\\", \\\"d\\\", \\\"w\\\", \\\"t\\\"], [5, 3, 7, 8]), [\\\"f\\\", 5, \\\"d\\\", 3, \\\"w\\\", 7, \\\"t\\\", 8])\\nTest.assert_equals(merge_arrays([4, 54, 7, 87], [\\\"t\\\", \\\"d\\\", \\\"t\\\"]), [4, \\\"t\\\", 54, \\\"d\\\", 7, \\\"t\\\", 87])\\nTest.assert_equals(merge_arrays([\\\"c\\\"], [3]), [ \\\"c\\\", 3 ])\\nTest.assert_equals(merge_arrays([4, 3, 2, 1], [\\\"r\\\", \\\"d\\\"]), [ 4, \\\"r\\\", 3, \\\"d\\\", 2, 1 ])\\nTest.assert_equals(merge_arrays([\\\"u\\\", \\\"k\\\", \\\"c\\\"], [2, 8, 30]), [\\\"u\\\", 2, \\\"k\\\", 8, \\\"c\\\", 30])\\nTest.assert_equals(merge_arrays([\\\"e\\\"], [1, 2, 3, 4, 5, 6, 7]), [\\\"e\\\", 1, 2, 3, 4, 5, 6, 7])\\nTest.assert_equals(merge_arrays([1, 2, 3, 4, 5, 6, 7], [\\\"e\\\"]), [1, \\\"e\\\", 2, 3, 4, 5, 6, 7])\\nTest.assert_equals(merge_arrays([123, 456], [\\\"c\\\", \\\"b\\\", \\\"a\\\"]), [123, \\\"c\\\", 456, \\\"b\\\", \\\"a\\\"])\",\"language\":\"python3\",\"summary\":\"Create a function that takes two lists and combines them by alternatingly taking elements from each list in turn.\\n\\nThe lists may be of different lengths, with at least one character / digit.\\nThe first list will contain string characters (lowercase, a-z).\\nThe second list will contain integers (all positive).\\n\\nExamples\\nmerge_arrays([\\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"d\\\", \\\"e\\\"], [1,\",\"tags\":[\"arrays\",\"formatting\",\"loops\"],\"timestamp\":{\"$date\":1524285084357},\"title\":\"Merge Two Lists\",\"stats\":{\"completed\":{\"total\":395,\"ratings\":[1,1,1,1,1,1,1,2,1,1,1,2,2,0,1,0,1,2,1,1,0,0,2,1,2,1,0,1,1,1,2,2,2,1,1,1,2,2,1,1,2,1,2,1,1,1,2,2,1,2,2,1,2,3,1,1,2,2,1,1,2,2,1,2,0,2,1,1,2,0,1,1,1,2,2,3,1,3,2,3,2,2,2,2,1,1,1,2,2,2,1,2,2,2,2,2,2,1,2,1,1,2,4,2,2,2,2,1,0,1,2,1,1,2,1,2,2,1,1,1,2,0,1,1,2,2,1,2,5,1,1,1,1,2,2,2,3,2,1,2,0,2,2,2,5,1,2,1,2,1,1,1,2,2,1,1,3,1,0,2,1,2,2,2,2,2,2,2,1,2,2,0,2,2,2,2,2,2,2,2,2,2,2,1,1,2,2,2,2,2,1,2,2,2,3,1,2,2,3,2,1,2,2,2,2,1,1,2,1,1,0,1,2,1,0,2,2,2,2,1,0,1,2,1,1,0,2,1,2,1,2,2,2,0,2,2,3,2,1,2,2,3,3,2,2,1,0,2,2,2,2,2,2,1,1,2,2,2,1,2,1,1,2,2,0,0,1,2,2,1,2,2,1,1,2,2,1,0,3,0,3,2,2,2,3,2,2,2,2,0,1,2,2,2,2,2,2,2,2,2,1,1,3,2,2,2,2,1,2,2,2,1,1,0,2,2,1,0,2,3,2,0,2,2,2,2,2,2,2,1,0,2,2,2,2,0,0,2,1,2,1,2,1,2,1,1,2,2,0,2,2,2,2,2,2,2,1,2,1,0,1,2],\"rators\":[\"vQEmjTRgmdGNYB7yk\",\"HK3RW4kr7acFSAyL4\",\"LjPK9TN7eKmyEhErZ\",\"tuyDaJzFy78jxvhCY\",\"6fJpRpAgiWD5zX9qB\",\"2innwjWqxJHo4eRGh\",\"ZE8mYozwAN62c5Bzw\",\"HfXaiByRyvX5G5smB\",\"NXPNY9Tzxm2ypreuy\",\"iEMnJaXXfa6dzdQzb\",\"2PGyaiL22k4dfMGJf\",\"QaneRr2JNbhj6FTB9\",\"23oi2a3vQwhtLEbSj\",\"m2iiZZHTpzHcEKJMn\",\"QjpzasKxy3xBakLzz\",\"qW2YbEjDQNoBPJu4T\",\"LfR9Bopm57BMNNnkp\",\"5JXnPbYC8RuBG6FkM\",\"ewyPo746vdNES9LwS\",\"xavnCy7CjcNLodciA\",\"ZxF3LkWqeo4fe4ziK\",\"GRZzKCbeb4xKHFCrZ\",\"gQwkudXwZ2iqDRMDD\",\"EPxRaPvpA6Bj9ZH8x\",\"WKsvry6M74GDrtqHQ\",\"pGXXGXyDu6FGErkSo\",\"3Yxorwk6ABadbgX5m\",\"mqXfzC24CdThpCaGd\",\"mgJoduE8pStdjNmPD\",\"jDoFYBX4iQiTXFEdf\",\"5sGnqBqu5k2LCwGxh\",\"EjCmqg6zjhQYGJ7B4\",\"NtYYXX2xhtZx5FsoT\",\"xZyBpCQZLegTRuvBM\",\"nbmdkwFpFjSSdrtyz\",\"wPhd86JGzcCkkQdyy\",\"aW8Qb8d3hAsWp2rWn\",\"p6MPFLtmJ2z8EQT4Q\",\"4NnRqrPwSGKGKT4Nb\",\"tEZYGGHp8ux3TrPy6\",\"YuKrDmuqS3uGyJgeR\",\"PwHLy9Fe5uctkKote\",\"pdcaC4fEtsubBz4Wo\",\"5nSgmjSpzDAHwQMaH\",\"3aSufMRSzHQ3cuo9n\",\"5f8x8WgpAPxfx9ZKo\",\"eund9JckY6u2A96db\",\"mCMD9CNp9rA7tbYoB\",\"nSMKW77QrS4SGf5DP\",\"xozjHBtj9egBmAuuY\",\"7EtepxmKZfunxFMF4\",\"7CwgH38hHpiGdu2zT\",\"j9gg82Bp2L7nw7DyJ\",\"HQ22rsRQRSgBc2uPy\",\"iwJpLKCvHo7u89bY8\",\"czzCMr8MiuPJ2546F\",\"3EdroMxx96SL4GKyv\",\"nZ58gDWFhqXiZpmZQ\",\"JxADc5CTg3NZvRR74\",\"G9zQ7P8uJCuAXGRmK\",\"wsLXJ3frxkTxTs9mh\",\"NfMJuiBk6FN5Jc6ow\",\"EGnC3WqHX4YddCrRW\",\"msCzEmJDt3XkfQZDu\",\"4WHKjut52wcq8ryeA\",\"YG776yzpLWoxa5GJs\",\"eZ9oRoqZ6mpPRJjHH\",\"tAF9Gf6PiGogbZuWs\",\"mdfg7jzShpAzFi2Bb\",\"z9FqvdkSb7hYJ63p5\",\"2GuzKEuE5QK5nDyrQ\",\"3hnNN45MzxXW7uPR8\",\"5KskveLGWHN8eam53\",\"EMwbXe7SCvrMpRtSs\",\"8yXcdARsCtaYrQaNc\",\"9j8nvw7NhJoMm34HF\",\"woL3gGTZHTMhmCi26\",\"mWMimNiF8gvAbb4Eo\",\"eXaGygfSMr2DBT2Y8\",\"Ws72RoCASTFuTyokF\",\"THD2EHgtJa2ooivJK\",\"M8jrv2FfpMQp9Qzpx\",\"Qm7WibLuCP7hW3iXi\",\"T2W32kBnES6zya9Bv\",\"cBCgxKeWmdcPwz4MH\",\"eMaBsjDKQC4XMNi3M\",\"2tCCFm5iefjrRSaxv\",\"35Z2Qy2cjicZMkSzn\",\"T82JyZFPNz8maF8f8\",\"mJvkMXND2BjRvtped\",\"iWpoNkWDDWdRmMQiR\",\"SK3kJggzuets9AFj6\",\"nc7bRhkxgKyqusYe3\",\"ktw5fXRXnoY9em4wd\",\"Kzom5ikn7BRrRgiES\",\"QgdwHjy4x6MCPwfh9\",\"RsX6W2ddWM8ajHzss\",\"eW5cHd5p5nv9XoLr4\",\"SKabuq5XuhXBugKBa\",\"Nj6FwgBtAXsaQwsM2\",\"9EiNaz4dYwFR3eeLT\",\"8WpiNuqJ3meC2Bqv5\",\"foGoA3nN5Bd4mv7wr\",\"aTNWfAYfTZn2Ejn63\",\"uJ5A3zjLi9iN5eeXX\",\"n9PZCXcWTygjaDsXs\",\"vpCDTiajf7vS4Wvyy\",\"jwgBL9AKmfxPCFoTo\",\"PAjQoyYKAkYAXERhf\",\"pT7ESkjcQTjmmaTXv\",\"d2XCAmNhp79ea8a65\",\"nturEaRCD7JWdoTNr\",\"W959nYTsTvFf9stJj\",\"FHzvDACEZuAjRwL7v\",\"6QwHpeajrbLQAm64L\",\"hR7GMiqGap4CzEWSy\",\"uSiHKggtKNw9CLzyJ\",\"jtB5tDvfCunf2Ep2X\",\"TJQcScCtNRobD8P4k\",\"xQ7uLC6QTtEyKENv9\",\"RP6TXQ57oLFG2EA8X\",\"nRNrCgAwhtMMyS6fC\",\"7uNgZN9spDDQDbLnZ\",\"83i7PKDRGfBw5DLst\",\"PvdgHBk4E52TSuBBB\",\"FjLPxCcT7urtALbos\",\"oESR33eXHntMJxp2Q\",\"ycZbLj5WRWuGWR8oK\",\"zgoEhAyhrjnsSLPGw\",\"WuFYzA49gtxK8pywR\",\"6W2GSzrYjMD9ANBFY\",\"CLKnKSGEviZPFLqkC\",\"J3RFGrYLugHTTDxww\",\"nusQQTi9vR569v4b5\",\"q5s7yTnMdEoeXRTnH\",\"vjgbYJGLr39bACXND\",\"rfyq6c7nX5s6tgSat\",\"j3XimmYb3NEL5gLxX\",\"8JyqsSbN2FJXPr3cw\",\"k66z8NfCwxStFg2qz\",\"vwmjqntQ9FvszKRye\",\"WFNJLTC9a3xZrbgcF\",\"eq6bWgNCAXLkFj4tx\",\"2RcMmxawiXaAWGida\",\"GhPsce93TtsT45o8z\",\"qvEvDcL32a5F4Tg6c\",\"KpXzNmd3gyz2Mwka5\",\"FyDah3MTRW8vXTB6G\",\"z7KAn4vEJTcrDKaum\",\"XBmvGz2a28Wtuhj3N\",\"Z8WFmzQRYcHDxPqX7\",\"gb9rvGus2Jv7bjZSs\",\"mGmoXwXiopnnnqYdh\",\"PRPv763woB2EqjWvZ\",\"vEHDjxx5FuYiPCaXs\",\"DSE9iBAeDYfb2LMwM\",\"5B4uao9RP8pDv4hmM\",\"Jqk2uJZZxEv5wZFze\",\"X9NeqaKpfykoscpYr\",\"jPpfWknjsoJcZkin2\",\"3rt9Yc6qYctx4ep6v\",\"jpEzGeo2tPtZbgbay\",\"tRA43bWeW9bLciKEh\",\"4HC75a4BAtjSd8jPv\",\"bCWHfh6zQ84rfQwBj\",\"yZvzB3qFb8pkHy4dg\",\"37Dn89S4JAJqazGy6\",\"uSh3aNxzD28jBuhxa\",\"4cxKdMqL4Qk2GsJpm\",\"qcbdDGrrf5HzPLRvQ\",\"nQRzZKeDKuLRf9chX\",\"Ge525X3sT75K74LoD\",\"mNMQvcxKSSvqqMYCH\",\"DDrTDZeynQa4J4ZEN\",\"Y3KkPrBzMBgMiqaQ6\",\"hsrNYf3WbexXJKhCq\",\"5s4qhuRJijYaDNXva\",\"T3ZAuoMrJjvZwN55B\",\"FikSPhcrHBpQ4CyGC\",\"AF6LgdKhEdzwgRJom\",\"hmJar7wTPM99rX4HB\",\"ab7BsQuhDo3QgE6bh\",\"kQH5b8MXJunh84Czq\",\"4kJMafuJWxzhDht2w\",\"6ckDJWbyznyQQLkrP\",\"byHBadxxhnF5Ht7xH\",\"XrT5a342Fohfwe4n9\",\"RPS4m7AXFwFaoQMNg\",\"iqmPb9JuJDgTFeR8Q\",\"Rgdjr9tBGabXFdoXL\",\"TNQ7ixK78HHTLP7it\",\"JEAi9mG3vvBomJ3Yu\",\"5dvDGoRaJwmYTmRRB\",\"PFjMZGHNAPTkgd7tq\",\"ahWFxnaxt9bXSA4f3\",\"tHEH9MBHBAGvhgJGd\",\"rMa8q8fB7xyTN5R2e\",\"aXCm9vWqKwL9XFYoj\",\"DTE6vdqCL8udPnYs3\",\"gxdjEjj4AdrZv7jCa\",\"XKi8iZXBCHCaebSHh\",\"WkWyq9wMkZhXB6zsD\",\"C9LKGu2g5hSijvDzA\",\"yrCNkFYQBEDE76eFS\",\"PSrcg6fy835R4c5CW\",\"eoo54vPGzwD3HZuHC\",\"td7qPZ7Lv4pEWT2Ya\",\"TNMAJidLpPdH4kmBv\",\"jYJ26SiLKBu5GRumq\",\"3fjCCrpR2aD32sTrc\",\"6u7yc9m6HuHGbHzph\",\"nfXGHENb5md7m355s\",\"yAouD3PxzED8a4gap\",\"N2wnZXkhDH86mgjQ8\",\"sCnrfER8vCe4xhpB2\",\"PYg2boGDLrEcF3i4j\",\"gMJhLdyw3tH7L96X2\",\"nzx4uAPg3hCceyFPE\",\"FgkYtHLxeD8pETJ8T\",\"cR3ibTMxLyEdDFCHY\",\"3LiSLdtN58n46NEqg\",\"T2vhHPhRR96hRizq8\",\"HQxp7NcdvF92G7bYS\",\"XQivaPk9Erza9BHns\",\"i3KxTdoXY7KH88FFh\",\"WBAKsQ3cdcrKxeAcp\",\"jWrQpWgSshib2CyzB\",\"MJMWfiW978otApbcG\",\"2fxapKr8XGdNeaKi2\",\"otXtuQygbcYATMZoP\",\"6QEhBfzWmuYwm34zz\",\"HqmxnQJM66Y57twhn\",\"qJZsi5rhRnWA38FbA\",\"K96FwtfDDN5WM4Bb7\",\"sKfrD9gjCDHuqLzSk\",\"u5u2YpHXiNgzDNJdX\",\"4tgBydK887PitgAoi\",\"tYjQweAK2k8goR4Bq\",\"6ShafRStcvew4GfCh\",\"8PwfYqoDQFThzNtvf\",\"yabtHTtycsWhcGBfD\",\"C4QntmkYtB89GNtpd\",\"PhceyfmFntJcn5Fhf\",\"fxLjWpWbBeaYcvdgB\",\"Nfi64Lq3Ynfqrxt5P\",\"Xj6R2zqhgumffQCAN\",\"BeFnbPbMnAM2SjBdZ\",\"w2s7fFG7zeKBfCTJZ\",\"Ycj4iTJGFyvC4bXek\",\"mxX4rH5ELYkdZ2Mbw\",\"XbxHXmh5ZmRN2gw3K\",\"iF6X8FeXyfJHXCPQR\",\"AasGs8AeX9Lcb9xJn\",\"4CFzv558qbGcpQwc4\",\"v3fjGuc7Pq4yjFygS\",\"Yp7uvStL97cC9fKkY\",\"s5M5RvgqR9BhB9JoC\",\"wZoxzQDbso9SMAPkY\",\"ouPtoRyNq8hKH2WkT\",\"hnyhBFWwNCz9mDfSi\",\"aRqQ42J5zqCmBNd8w\",\"dHZqT6h4JMwk5fPC8\",\"9Ly8afdtofp8DXzrt\",\"M4vq8ATaS9Jg5X7iP\",\"vLrq4dEDMM2wd68Dc\",\"orFLgPDw9H5MDzmwo\",\"jNvegJWCk5HCtEMbK\",\"sz8ufn9i8zeiGWpAy\",\"ZNnsMeNkdDhHjSrZb\",\"aEm3Wvj2rFYRL8Lrb\",\"gJYuGdkXEWWmGRLzu\",\"owfsBwe5A8Xtum8Ay\",\"HF28xZKSLM9wEuqNg\",\"2QGRoQn2dRq3scu7k\",\"kYWb8BwpKwunQkxeX\",\"Ftqr6ecGF6nfjMjgi\",\"LjoNTyGEMfBpMHHus\",\"k2RxDbsaJCdDju6oB\",\"DEDniTrstQYGounXT\",\"KdNDysEsy2TW5QRJ2\",\"WXJvukif774ts7Jqs\",\"9pzFiFK3ANLjQfnr2\",\"mfsaETo7uA4x5vqLD\",\"sbJcFfQjQ59Wfg4Cd\",\"FzxTj4GuujhwpZM7y\",\"ahk2qiXKJA753wAJk\",\"4rwxLqLs2mNZNg8NB\",\"a777e8chPvJkY3tKa\",\"awK73Qku8BcNGQ4Mm\",\"DjQY8557nAWS36t2c\",\"yr822PZmmiDDenxpB\",\"zT9LpkiwYjLviYYW6\",\"jfeozFAYaTHXFPHYS\",\"H4abACFDH5t8CnnyH\",\"ZrKCkX7xxGGZzauFW\",\"2ptN2mhjFwFcHyPZd\",\"hX2iktknBz6it4BwK\",\"syRNbbPdLCGXbH2Gy\",\"MKT7khMBGXzA22ykf\",\"mDWNyaaQ9hvPCRzSd\",\"iojEnnY9FsMfYzp6f\",\"9CoqdidjM9KbeKnHY\",\"Pe8vWpDHRuH9nSGKW\",\"yjtdwc2AC4jA2RWtn\",\"Ecg4m7srYGgZsb4Ck\",\"6kz7jjJS8W4tikYQT\",\"YcCLwitFMAEJSnxAW\",\"rzzFkBdQWcRjH2eKi\",\"NNE5HNRXAkmhrWgyQ\",\"hRiMXDZNAzyPd5tpt\",\"oBcs8GLX2ZFLXQy8y\",\"XrqNzJ2FRG8HnGiR6\",\"w969M94NZXXLSMZ4L\",\"yTtSCvGPyYna6JuRC\",\"FEYpu9RWysAgW3XnP\",\"w2HhxvSLmDhaGCAjE\",\"b5oEvBqHWLRnJgp22\",\"M8dQuMrEpP8Hc3tHN\",\"mG8HqKiAQFTdRZthG\",\"tpxMgkGSHwBjS95Ta\",\"gXTAie79kiw28tx5u\",\"DYDJTyGgKFnBRLm2r\",\"QRv96jmNaYsWkxQEG\",\"DPi9QGLctq2y76KuE\",\"JS3hNM3XXkxPdg3yk\",\"J3upzLHuEwXH7Z2hx\",\"dYPkStFnLvAMsHSzZ\",\"cAP3n5NY64uoMwzRR\",\"5XiuAqicKD4hBdu63\",\"KJCDwGkoXh8qtbbKr\",\"RGMbFMZXJr7DhcAJy\",\"CTKmXtrqDYqJBnuy8\",\"zd9FLSzsGz3evKafy\",\"dBzwBtRjZqB98DJeB\",\"d8qtzoLB264iP8tdY\",\"JhX7jvtpwNyxcc39m\",\"5HCu9Ydd86QgHDRNP\",\"StNu7DPyTgEStZsMY\",\"5S9nX4rKsnCcnv4Cz\",\"eYfPWvZwnJQkHbSTK\",\"GGdmhAvxXhqhhibJN\",\"wRttWTM59y8m5mx7x\",\"4RsakkyRXyYGwFxEa\",\"Ds7L5bksw2QRHjrKL\",\"PWgzeK859suojbrRx\",\"srJ34BaybkQh3qRkM\",\"J5T8gZqiZXFuFDTQ7\",\"sHjfbGQGLHE6JR6qu\",\"o4ixjQGSaYqA2JoM4\",\"T6iBEE2jp7f7iEF2P\",\"CHvzhtXnv8HTbPQ56\",\"66a9xX73nmTEuKs9k\",\"eMuCpJ2spXWkJjWNz\",\"AFfw7cGg83uYk2Miy\",\"eHcgvkTGsH7ZziqBo\",\"yod5YhKtPqw2GfG9B\",\"PC3pLs36zNzpRDSuE\",\"AJexRBN9cYQmqvYu6\",\"3cF6NXq3ZEwdkgSjb\",\"8BFSTCnoe2QggN64c\",\"mvJBakQ35CWAnbbEZ\",\"BrTDhPJcACL2bsrpJ\",\"ey3CASd6Je5LEJzfB\",\"EfxwqhYdapX3dMQC2\",\"9gJsF5apWJGWZJprn\",\"abAZdE97u5xzbMrEL\",\"2PufnQcsHsfymufX3\",\"dzS6WBTMHyFEag6Fp\",\"d9LBRxvADNBB5QJMB\",\"4Lwjr34ypKNQNQCar\",\"PytNZK9mNiRiZxPrm\",\"4TmgHkn5vqyHK3sYC\",\"suArq5BbSy7gD6xri\",\"pduNK68oazqQTtbLp\",\"3nied3n8KG8RSNixH\",\"mw9464S5dnenqzvpm\",\"fEpMhxEX4r6xNMws2\",\"pPpmP7xeJzGgK362R\",\"Ncn7Qn2LbdsiJnfFk\",\"Wi4H6ayKsNDWWQCG5\",\"X4rzfxGgxx6CS7Bpz\"],\"quality\":[4,4,5,4,3,5,5,5,5,5,5,4,4,5,4,5,5,5,5,5,5,5,5]},\"complaints\":{\"total\":0,\"reasons\":[],\"skippers\":[\"vQEmjTRgmdGNYB7yk\"]},\"instructions\":{\"score\":0,\"voters\":[]},\"tests\":{\"score\":0,\"voters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.6521739130434785,\"family\":[{\"_id\":\"kaNYPQQWHSX4zGNhj\",\"language\":\"javascript\"},{\"_id\":\"j5Fc9SfXys5tLrPXc\",\"language\":\"php\"},{\"_id\":\"q7BdzRw4j7zFfFb4R\",\"language\":\"python3\"},{\"_id\":\"RBZgYXZCr6f4qPQvQ\",\"language\":\"ruby\"},{\"_id\":\"wno8rSJy7NJDfEeLA\",\"language\":\"swift\"}]}}"]