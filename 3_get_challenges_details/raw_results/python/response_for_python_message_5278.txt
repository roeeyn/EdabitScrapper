a["{\"msg\":\"result\",\"id\":\"1353\",\"result\":{\"_id\":\"b67PHXfgMwpD9rAeg\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"def plus_sign(txt):\\n\\t\",\"difficulty\":2.016574585635359,\"familyId\":\"tY8oocvZax58BJtTg\",\"instructions\":\"Create a function that takes a string as an argument and returns `True` if each letter in the string is surrounded by a plus sign.  Return `False` otherwise.\\n\\n### Examples\\n```\\nplus_sign(\\\"+f+d+c+#+f+\\\") ➞ True\\n\\nplus_sign(\\\"+d+=3=+s+\\\") ➞ True\\n\\nplus_sign(\\\"f++d+g+8+\\\") ➞ False\\n\\nplus_sign(\\\"+s+7+fg+r+8+\\\") ➞ False\\n```\\n\\n### Notes\\nFor clarity, each **letter** must have a plus sign on both sides.\",\"lab\":\"Test.assert_equals(plus_sign(\\\"+f+d+c+#+f+\\\"), True)\\nTest.assert_equals(plus_sign(\\\"+d+=3=+s+\\\"), True)\\nTest.assert_equals(plus_sign(\\\"+d+k+##f+\\\"), False)\\nTest.assert_equals(plus_sign(\\\"hf+d++#+f+\\\"), False)\\nTest.assert_equals(plus_sign(\\\"+d+i+#+c+\\\"), True)\\nTest.assert_equals(plus_sign(\\\"a+\\\"), False)\",\"language\":\"python3\",\"summary\":\"Create a function that takes a string as an argument and returns True if each letter in the string is surrounded by a plus sign.  Return False otherwise.\\n\\nExamples\\nplus_sign(\\\"+f+d+c+#+f+\\\") ➞ True\\n\\nplus_sign(\\\"+d+=3=+s+\\\") ➞ True\\n\\nplus_sign(\\\"f++d+g+8+\\\") ➞ False\\n\\nplus_sign(\\\"+s+7+fg+r+8+\\\") ➞ False\\n\\nNotes\\nFor clarity, each letter must have a plus sign on both sides.\",\"tags\":[\"regex\",\"strings\",\"conditions\",\"validation\"],\"timestamp\":{\"$date\":1565346654401},\"title\":\"Know Your Neighbor\",\"stats\":{\"completed\":{\"total\":217,\"ratings\":[2,2,2,2,2,2,3,2,2,2,1,1,2,1,1,3,3,2,2,4,1,3,2,2,2,2,1,2,2,2,3,2,3,0,1,3,3,1,3,2,3,2,3,0,3,2,2,3,3,1,1,3,3,3,2,2,1,0,0,2,0,2,1,2,3,2,2,3,3,2,2,2,3,3,0,4,3,3,1,2,1,5,3,0,1,3,2,2,1,3,3,2,1,3,2,3,2,2,3,3,3,1,2,3,1,0,2,2,3,2,0,2,4,3,3,2,3,1,2,3,2,1,2,3,3,3,0,2,2,3,1,2,2,2,3,1,0,0,3,3,3,3,2,2,0,3,0,3,2,0,2,1,1,3,2,2,1,0,3,3,3,0,1,1,3,0,3,3,3,4,3,2,0,3,1,3,2,3,3,0,0],\"rators\":[\"8JyqsSbN2FJXPr3cw\",\"tAF9Gf6PiGogbZuWs\",\"gb9rvGus2Jv7bjZSs\",\"AF6LgdKhEdzwgRJom\",\"yZvzB3qFb8pkHy4dg\",\"yrCNkFYQBEDE76eFS\",\"jHrtWDGBhkbuWa7fG\",\"hsrNYf3WbexXJKhCq\",\"kd6Q89kvDbwGGkvHo\",\"QGRs577jvdGS9pSnf\",\"aCNWav8S8Try9RkC6\",\"XLhWSyatiSt4pzRoM\",\"GAMLghpc9JMXz3jvs\",\"WkWyq9wMkZhXB6zsD\",\"zjQPuEyZ38tTW6P5w\",\"uSh3aNxzD28jBuhxa\",\"x9A83cZkyA7E7utn3\",\"BFNm9gacwba9KyLFW\",\"AYaEkTWLMmfzpwejr\",\"jYJ26SiLKBu5GRumq\",\"ahWFxnaxt9bXSA4f3\",\"cR3ibTMxLyEdDFCHY\",\"T2vhHPhRR96hRizq8\",\"GR5P7gLKtxGyTAZTB\",\"XKi8iZXBCHCaebSHh\",\"QLcFxARNuZmaPThyg\",\"N2wnZXkhDH86mgjQ8\",\"kQH5b8MXJunh84Czq\",\"gMJhLdyw3tH7L96X2\",\"KpJj2dAHNBgKDF3XK\",\"vewKwcMeGuk3p3MsN\",\"Nj6FwgBtAXsaQwsM2\",\"vuwheqp25x7RkBHXn\",\"PZrzFLcwBp6mktLar\",\"HQxp7NcdvF92G7bYS\",\"2fxapKr8XGdNeaKi2\",\"fAoLuqbGvHn4w2PHf\",\"s5M5RvgqR9BhB9JoC\",\"otXtuQygbcYATMZoP\",\"8aPJNKDxXq7884eJb\",\"6n3Pb8mbxebuhjz7x\",\"EXZfPb8YH28EL8Rh9\",\"HqmxnQJM66Y57twhn\",\"qBaLGrm952ii9K23M\",\"XjyaCd8bviTitHTwa\",\"C4QntmkYtB89GNtpd\",\"K96FwtfDDN5WM4Bb7\",\"8PwfYqoDQFThzNtvf\",\"5uA8xmgifmiJrqbzy\",\"Jqk2uJZZxEv5wZFze\",\"Yp7uvStL97cC9fKkY\",\"ydEdzuCCZt4yny9Rq\",\"yoYQqaY6GszuTkNSs\",\"kBmhcwkCqxiy4GwiZ\",\"aW4DkonHaJw6Q8PyP\",\"ab7BsQuhDo3QgE6bh\",\"3ECpdeExhBmkYXtba\",\"XbwyB44kHPnRgQcrB\",\"xxxhm6QEkRpah4k94\",\"2innwjWqxJHo4eRGh\",\"cRpaCxYRmGcN3Nsoj\",\"23oi2a3vQwhtLEbSj\",\"6YLHFwMtSN7xN9PmK\",\"T9WcjJPEu3rcTsKbF\",\"QnPD4Sv6W4LHc2Qng\",\"M44nifmWzt3wtYyJx\",\"apiyfPkZX9v9EmJrq\",\"pkQBaSzukotPEXmrD\",\"AasGs8AeX9Lcb9xJn\",\"Z85ajWfZ4jDPkbvR4\",\"SZzetJ7Z6R6rSyFJF\",\"pmgFEciNrd3ES9tuu\",\"4CFzv558qbGcpQwc4\",\"orFLgPDw9H5MDzmwo\",\"WLFPvm65aHfgwQy7N\",\"aEm3Wvj2rFYRL8Lrb\",\"J5T8gZqiZXFuFDTQ7\",\"ebPYSECG97bnpAp7s\",\"v9KtC8YLbMWmXiW2H\",\"mDWNyaaQ9hvPCRzSd\",\"hiGXnxds6zo7XsfTw\",\"LjoNTyGEMfBpMHHus\",\"Nua6T3dBurBy3Qfg9\",\"ZNnsMeNkdDhHjSrZb\",\"YRstQuthRkFeBiXug\",\"3Zceb8GudqAG3onG3\",\"gJYuGdkXEWWmGRLzu\",\"eMuCpJ2spXWkJjWNz\",\"RcFJfYquW9quJDnp5\",\"yYxPzFqBgtQ9fsyHM\",\"9pzFiFK3ANLjQfnr2\",\"CEd9tLdXeDeNHSzys\",\"CMuhZyDkaZXX4pvTD\",\"3pxHTZBsv7MKzFG6Y\",\"dHZqT6h4JMwk5fPC8\",\"GM2X83qnuLXTHe5zA\",\"Sj4iamMmNvxwWJBiF\",\"KdNDysEsy2TW5QRJ2\",\"DQskEvAv5KiJDPtGF\",\"HF28xZKSLM9wEuqNg\",\"4rwxLqLs2mNZNg8NB\",\"ekQh3jzgGLsEMbKo3\",\"yr822PZmmiDDenxpB\",\"hnyhBFWwNCz9mDfSi\",\"55RQznnuTGpsj3EXd\",\"586FdBhazpwJfnRYR\",\"Jsrfs8nEy37mJxbqD\",\"DEDniTrstQYGounXT\",\"euPBBaYXyS8RBr9KB\",\"So6PHm74mfJuY2WTs\",\"yXuZh6CF6GqKYHzoT\",\"6BZMSxML2SjRgRCZn\",\"yJmwiykSNfLv9NqJ2\",\"PCTGbXBpNgYbFf48T\",\"n2BRY9X8899dcG8Bw\",\"R4SjTgDnpigJYDLyL\",\"cykCKNJcqFBxz4T8s\",\"JS3hNM3XXkxPdg3yk\",\"KZvaNQrXBFJ9bKLYx\",\"MKT7khMBGXzA22ykf\",\"iojEnnY9FsMfYzp6f\",\"M35nSp9motwe2cDrP\",\"zZDaXBxMzTCBhNkgL\",\"KZ2xddpM2f9JRaryB\",\"CwXsu25ygLEwQbmQC\",\"yjtdwc2AC4jA2RWtn\",\"Ecg4m7srYGgZsb4Ck\",\"Pe8vWpDHRuH9nSGKW\",\"ZrKCkX7xxGGZzauFW\",\"f2BoqyCpgnmjEjLqx\",\"zZ43WzxvFu7kaTKZ6\",\"hRiMXDZNAzyPd5tpt\",\"u7i7WPM63n42r8R8o\",\"P7NmFbCJ5offXMRvB\",\"mG8HqKiAQFTdRZthG\",\"XjajdyybZZbkz8o5x\",\"EMJ6uvBZkie429gdg\",\"8fZxjQfuXw5HMSRJM\",\"dkcmCKwqApX5jBggc\",\"xn7uGNKeAwPEkP9oA\",\"GGprTwrkjuccmrQRg\",\"DPi9QGLctq2y76KuE\",\"qD2LrwaDrSdiybLKY\",\"4fhjJBvLBWh6QeSih\",\"QRv96jmNaYsWkxQEG\",\"dYPkStFnLvAMsHSzZ\",\"6MjSiiBLPcvXbXcaZ\",\"J3upzLHuEwXH7Z2hx\",\"gXTAie79kiw28tx5u\",\"axdSNLZpiCDF8RS6n\",\"dQK2T76aHcRJkrbKB\",\"oBcs8GLX2ZFLXQy8y\",\"7scpcTEp3SEx5Wjg9\",\"6xTu4r8NMczBFvmtz\",\"8ZhzKvdhsdKgpf6BT\",\"cAP3n5NY64uoMwzRR\",\"MXGuntvz3byrP6WJc\",\"3LiSLdtN58n46NEqg\",\"PytNZK9mNiRiZxPrm\",\"GGdmhAvxXhqhhibJN\",\"KJCDwGkoXh8qtbbKr\",\"4RsakkyRXyYGwFxEa\",\"sbJcFfQjQ59Wfg4Cd\",\"PXAcsKkssS2yLyDv2\",\"FEYpu9RWysAgW3XnP\",\"fznzd3qnvtbFkkizz\",\"Wpn95NqWxncQrwNgz\",\"9ivvGvJGvtQfigQaZ\",\"2PufnQcsHsfymufX3\",\"bvmTE46bfcM4ogj34\",\"8BFSTCnoe2QggN64c\",\"H9KZi2cjt4FwH7qog\",\"eHcgvkTGsH7ZziqBo\",\"K6MfKMytoJJuSGewP\",\"4Lwjr34ypKNQNQCar\",\"JKb5rhL6DKcCAypF9\",\"BrTDhPJcACL2bsrpJ\",\"3KkyQm77zsew58Dc2\",\"fbr22rabEJMfBp7vD\",\"ctbThYbufFCYbRK4f\",\"buX4mCQhtXCfBjeno\",\"ey3CASd6Je5LEJzfB\",\"T6iBEE2jp7f7iEF2P\",\"o4ixjQGSaYqA2JoM4\",\"8sNv5PTHa7XQ8bNqR\",\"kjvgTyRFyKHv44DcH\",\"gKnWjDjwrJh7MK2df\",\"AFfw7cGg83uYk2Miy\",\"RoGGD5cpHb4ftdLDv\",\"yod5YhKtPqw2GfG9B\",\"aFYzioHvZPvPaunsg\",\"nQRzZKeDKuLRf9chX\",\"nkH3HfJXLMNcBMM79\",\"5HCu9Ydd86QgHDRNP\",\"Ds7L5bksw2QRHjrKL\",\"3Kgtr8FytbE9FnJxH\",\"Qyfyyw6oC4EHAndzo\",\"tMmkfvW7fm429fpJP\",\"jkbavR2ATFJcpmo8M\",\"AQSqD9oNv2uPfxZCR\",\"CHvzhtXnv8HTbPQ56\",\"n2qKKxomPnb4zez5M\"],\"quality\":[5,4,5,5,5,2,4,5,5,5,5,4,5,4,2,5,5,1,4,5,5,5,5,5,5,3]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":1},\"isHidden\":false,\"quality\":4.346153846153846,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"CqQn9z9dS3u957Bg7\",\"language\":\"cpp\"},{\"_id\":\"ka4Mk98LW4TEbcqzH\",\"language\":\"java\"},{\"_id\":\"SXEBbL4xhgKJr7pqd\",\"language\":\"javascript\"},{\"_id\":\"b67PHXfgMwpD9rAeg\",\"language\":\"python3\"},{\"_id\":\"m5xg32nTY2XsDZ9XX\",\"language\":\"ruby\"}]}}"]