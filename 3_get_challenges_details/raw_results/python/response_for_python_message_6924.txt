a["{\"msg\":\"result\",\"id\":\"2170\",\"result\":{\"_id\":\"pmYNSpKyijrq2i5nu\",\"archived\":false,\"author\":\"kochug\",\"authorId\":\"vQEmjTRgmdGNYB7yk\",\"code\":\"def darts_solver(sections, darts, target):\\n\\t\",\"difficulty\":3.308270676691729,\"familyId\":\"ekZQb5FNE2Djm9xv5\",\"instructions\":\"You're given a dartboard divided into sections, each section has a **unique** score. That means there won't be two sections with the same score.\\n\\n![alt text](https://s3.amazonaws.com/edabit-images/dartboard.png \\\"Dart Board\\\")\\n\\nThrowing a certain amount of valid darts, find how many solutions there are to reach the target score. Your function will be passed three parameters...\\n\\n- **Sections**: A list of values for the sections (e.g. `[3, 6, 8, 11, 15, 19, 22]`, the list is already sorted).\\n\\n- **Darts**: The amount of darts to throw.\\n\\n- **Target**: The target score.\\n\\nReturn an empty list if no solution is found, otherwise a list of non-duplicate strings for each solution (e.g. `[\\\"3-11-18\\\", \\\"7-7-18\\\", \\\"7-11-14\\\"]`).\\n\\n### Examples\\nIf there are duplicate values, keep only the one sorted from smallest to biggest.\\n\\n```\\n\\\"8-19-8\\\"\\n\\n\\\"8-8-19\\\" <-- This is the one you would keep.\\n\\n\\\"19-8-8\\\"\\n```\\n\\nMultiple solutions should be sorted before returning them.\\n\\n```\\n[\\\"3-11-18\\\", \\\"7-7-18\\\", \\\"7-11-14\\\"] is ok.\\n\\n[\\\"7-11-14\\\", \\\"7-7-18\\\", \\\"3-11-18\\\"] is not ok.\\n```\\n\\n### Notes\\n- Multiple darts **can** land in the same section.\\n- A dart **must** land in a valid section (it can't miss).\",\"lab\":\"Test.assert_equals(darts_solver([3, 6, 8, 11, 15, 19, 22], 3, 35), [\\\"8-8-19\\\"])\\nTest.assert_equals(darts_solver([2, 4, 7, 10, 13, 18, 24], 3, 29), [\\\"4-7-18\\\"])\\nTest.assert_equals(darts_solver([3, 7, 11, 14, 18, 20, 25], 3, 40), [\\\"11-11-18\\\"])\\nTest.assert_equals(darts_solver([3, 7, 11, 14, 18, 20, 25], 3, 8), [])\\nTest.assert_equals(darts_solver([3, 7, 11, 14, 18, 20, 25], 3, 32), [\\\"3-11-18\\\", \\\"7-7-18\\\", \\\"7-11-14\\\"])\\nTest.assert_equals(darts_solver([3, 7, 11, 14, 18, 20, 25, 29, 34], 3, 67), [\\\"18-20-29\\\"])\\nTest.assert_equals(darts_solver([3, 7, 11, 14, 18, 20, 25], 4, 23), [\\\"3-3-3-14\\\"])\",\"language\":\"python3\",\"summary\":\"You're given a dartboard divided into sections, each section has a unique score. That means there won't be two sections with the same score.\\n\\nThrowing a certain amount of valid darts, find how many solutions there are to reach the target score. Your function will be passed three parameters...\\n\\nSections: A list of values for the sections (e.g. [3, 6, 8, 11, 15,\",\"tags\":[\"arrays\",\"loops\",\"recursion\"],\"timestamp\":{\"$date\":1524388387232},\"title\":\"Throwing <N> Amount of Darts  Find All Possible Combinations to Reach a Target Score\",\"stats\":{\"completed\":{\"total\":145,\"ratings\":[3,3,3,3,3,3,3,3,4,3,2,2,2,2,4,4,3,3,2,2,2,4,2,3,2,3,2,0,2,4,4,4,4,5,2,2,3,4,3,2,2,3,4,3,5,2,2,4,4,3,3,3,4,4,5,2,5,4,1,4,4,4,3,5,5,5,5,2,5,5,0,0,3,3,5,1,5,5,5,5,5,0,5,3,4,0,5,4,5,3,4,2,4,3,5,3,5,2,5,3,5,3,5,3,5,2,0,4,5,4,3,5,3,5,5,4,2,2,4,4,3,3,2,5,1,4,4,4,3,0,5,2,5],\"rators\":[\"vQEmjTRgmdGNYB7yk\",\"LqSHf4H6YSuFmpMTg\",\"tuyDaJzFy78jxvhCY\",\"6fJpRpAgiWD5zX9qB\",\"H8hvTjZceB22HBcgS\",\"tirX4Fdf6RxtrF656\",\"Lyh6nkCyy9X7rTZPi\",\"ewyPo746vdNES9LwS\",\"2PGyaiL22k4dfMGJf\",\"Mg77pXCFDhbMaGGiQ\",\"xZyBpCQZLegTRuvBM\",\"27zmQTuXD2Fi295ef\",\"aZai3qBaYwZMp6FXR\",\"nSMKW77QrS4SGf5DP\",\"EkzdBDwB28zgfpLku\",\"GRZzKCbeb4xKHFCrZ\",\"623xFxPgK8sGNuENo\",\"QyYmR6GqGSiw8KXYc\",\"axnLNbddHAGKR8dtF\",\"mqXfzC24CdThpCaGd\",\"tAF9Gf6PiGogbZuWs\",\"eQKcn6B33sgMZqsN3\",\"BdYJLJu9WQXqwtJTv\",\"yHbFP267fGBkfDm4n\",\"wEF3ZhC5iTqFjgw85\",\"RsX6W2ddWM8ajHzss\",\"uJ5A3zjLi9iN5eeXX\",\"vsxmgZACKE2TafBhQ\",\"fTYft7nM7SfBF9DZh\",\"6W2GSzrYjMD9ANBFY\",\"KDfCknbFB67GDq3Yg\",\"sXNYqHpzkE7wkXrAX\",\"577693ukTtr6MuPHG\",\"nydW2HwDGZuk8XaEL\",\"W86SWYbsAv36QatiS\",\"cHCCCEqvGRbpKacaJ\",\"M8jrv2FfpMQp9Qzpx\",\"8JyqsSbN2FJXPr3cw\",\"gb9rvGus2Jv7bjZSs\",\"AYaEkTWLMmfzpwejr\",\"MXjxGML2X75x64vJo\",\"PFjMZGHNAPTkgd7tq\",\"6u7yc9m6HuHGbHzph\",\"BFNm9gacwba9KyLFW\",\"nF9pCCzbGDhzvWgaw\",\"wadXYaQi9osoDvsc5\",\"5Fyk8T52QMfxPNqAg\",\"rurh72mGpAthfGRGt\",\"HqmxnQJM66Y57twhn\",\"s5M5RvgqR9BhB9JoC\",\"qJZsi5rhRnWA38FbA\",\"DwetpbChQM4r6Gwah\",\"qDD4QEj8KyW9mbweG\",\"GamaMNrnhrjj5tXTx\",\"Jqk2uJZZxEv5wZFze\",\"8PwfYqoDQFThzNtvf\",\"aCNWav8S8Try9RkC6\",\"vgTvCCxgvbCTDvaRT\",\"Kg94pDSdZJ2wSkMcY\",\"DryNRN98Dj24BpgrL\",\"MYpQm3TN5Luh7xahw\",\"t7BnRyo7NH5Nx22HR\",\"ds9ZtbGhiyMqBjkvf\",\"9uZpgAtSuPZ7W7DL6\",\"nLpdvK7EcahCqNe8X\",\"RxjsoBmCqZgg5Fq5a\",\"T9tPSCb6hoDnZb7Zn\",\"hwLAvyumMvYXNv3j5\",\"vnTuJPTiwk36NNsSo\",\"jaP8tfdxt4XbSGgo6\",\"fngqDBFfuXC8bx5vy\",\"sZDYNicocwXesSMXb\",\"6MWbxDS6jMhQ7d3ZS\",\"dNBGNMKLZam4bvHuZ\",\"pzZMMmJRaxwGAgaTH\",\"LzAr38NtigjfEfdzR\",\"X4iqEdg7dPjFpoASw\",\"de3DhFz9dW8vdPanZ\",\"4oj74SdrYfpJgEAmd\",\"FgkYtHLxeD8pETJ8T\",\"4YXNcgvGg7dygvqpH\",\"fMR9RcfgPJWiLgx7k\",\"N6c7FM5g7an4t6wTX\",\"Q6AFXWu4FpknpGShD\",\"GiK8LZt3JRKNJjj5W\",\"C4QntmkYtB89GNtpd\",\"SGhPxX5bHGL8zZqtt\",\"aEm3Wvj2rFYRL8Lrb\",\"oTm8JAxW6Kxed8P6B\",\"qE2viwrEkeM95f3Ts\",\"bLpgu8xTdpDPFSAsM\",\"xfPT5fiAHtJZy2pwe\",\"MauorWtnEdFap7uT2\",\"jDh7j3tZwpChgE5bT\",\"miZ9j3xNv9iPitxv3\",\"vTfyrr4pGddp8rbXc\",\"wT5gGgvjKc5wz59AQ\",\"AasGs8AeX9Lcb9xJn\",\"bJaPCBx63YxdJAuTS\",\"ZNnsMeNkdDhHjSrZb\",\"5H9MNfC4DPwxbakTf\",\"t9Sz6uBgobfCBJzGL\",\"W5TajitmCyxz87zAC\",\"7j5WZYiP4uoE7AqYC\",\"hZW6j5s6RHpx35phy\",\"fznzd3qnvtbFkkizz\",\"6428wKHtwKkFdvBs5\",\"wwMcJQRvf3X59Jyev\",\"2XQLufXWKnREqiqe9\",\"xn7uGNKeAwPEkP9oA\",\"GgLd4eWBu79mdjtkP\",\"6zsau8WHFof3wBGRy\",\"4fhjJBvLBWh6QeSih\",\"J23RcmzbdtBbPCTjT\",\"h4x2jaMdj5aQZbW5g\",\"RFHHHZ4ET4vpWijRe\",\"iS5BrkGLzJyPK7nKt\",\"tkdRHAExhDq8ryDJT\",\"j8FR2cHxpsYtNo9Dw\",\"HF28xZKSLM9wEuqNg\",\"xyMcsLZsKgcbPzZ4N\",\"yGyvKr9Qntq7YDvi5\",\"8sNv5PTHa7XQ8bNqR\",\"2PufnQcsHsfymufX3\",\"kedweJpprZRZ5psMn\",\"iojEnnY9FsMfYzp6f\",\"J3upzLHuEwXH7Z2hx\",\"yjtdwc2AC4jA2RWtn\",\"gJYuGdkXEWWmGRLzu\",\"DPi9QGLctq2y76KuE\",\"2Z6JyyFgKoKYEnErv\",\"gKnWjDjwrJh7MK2df\",\"Sh7oCvsWeiAt6TYFx\",\"9ivvGvJGvtQfigQaZ\",\"suArq5BbSy7gD6xri\"],\"quality\":[5,5,3,5,5,5]},\"complaints\":{\"total\":0,\"reasons\":[],\"skippers\":[\"vQEmjTRgmdGNYB7yk\"]},\"instructions\":{\"score\":0.7499999999999999,\"voters\":[\"vsxmgZACKE2TafBhQ\",\"NLQvA5MuGLBZ7FuFR\"]},\"tests\":{\"score\":0,\"voters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.666666666666667,\"family\":[{\"_id\":\"JEY2rNankCJbF9Bxn\",\"language\":\"cpp\"},{\"_id\":\"5K28RRq4RZQB7r9tj\",\"language\":\"csharp\"},{\"_id\":\"YBZgzAxuyDtS9bomm\",\"language\":\"javascript\"},{\"_id\":\"pmYNSpKyijrq2i5nu\",\"language\":\"python3\"},{\"_id\":\"33R4eKjCGJQn7XEZF\",\"language\":\"ruby\"}]}}"]