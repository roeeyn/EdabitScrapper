a["{\"msg\":\"result\",\"id\":\"948\",\"result\":{\"_id\":\"jgrDqqNm8z2kzJ6mH\",\"author\":\"Leah Rappaport\",\"authorId\":\"mDWNyaaQ9hvPCRzSd\",\"code\":\"tax = .06\\ndef checkout(cart):\\n\\t\",\"difficulty\":1.4831460674157304,\"familyId\":\"9yv938v4oQWBXqcqk\",\"instructions\":\"Create a function that takes a list of objects and calculate the total based on the quantity of items purchased. Apply a 6% sales tax for each item when appropriate.\\n\\n### Examples\\n```\\ncheckout([\\n  { \\\"desc\\\": \\\"potato chips\\\", \\\"prc\\\": 2, \\\"qty\\\": 2, \\\"taxable\\\": false },\\n  { \\\"desc\\\": \\\"soda\\\", \\\"prc\\\": 3, \\\"qty\\\": 2, \\\"taxable\\\": false },\\n  { \\\"desc\\\": \\\"paper plates\\\", \\\"prc\\\": 5, \\\"qty\\\": 1, \\\"taxable\\\": true }\\n]) âžž 15.3\\n```\\n\\n### Notes\\nN/A\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(\\n\\tcheckout([\\n\\t\\t{ \\\"desc\\\": \\\"grill\\\", \\\"prc\\\": 300, \\\"qty\\\": 1, \\\"taxable\\\": True },\\n\\t\\t{ \\\"desc\\\": \\\"hotdogs\\\", \\\"prc\\\": 10, \\\"qty\\\": 2, \\\"taxable\\\": False },\\n\\t\\t{ \\\"desc\\\": \\\"US Flag\\\", \\\"prc\\\": 30, \\\"qty\\\": 1, \\\"taxable\\\": True }\\n\\t]), 369.8)\\n\\t\\nTest.assert_equals(\\n\\tcheckout([\\n\\t\\t{ \\\"desc\\\": \\\"hamburger\\\", \\\"prc\\\": 5, \\\"qty\\\": 2, \\\"taxable\\\": False },\\n\\t\\t{ \\\"desc\\\": \\\"potato salad\\\", \\\"prc\\\": 8, \\\"qty\\\": 1, \\\"taxable\\\": False },\\n\\t\\t{ \\\"desc\\\": \\\"potato chips\\\", \\\"prc\\\": 2, \\\"qty\\\": 2, \\\"taxable\\\": False },\\n\\t  { \\\"desc\\\": \\\"soda\\\", \\\"prc\\\": 3, \\\"qty\\\": 2, \\\"taxable\\\": False },\\n\\t  { \\\"desc\\\": \\\"paper plates\\\", \\\"prc\\\": 5, \\\"qty\\\": 1, \\\"taxable\\\": True },\\n\\t]), 33.3)\\n\\nTest.assert_equals(\\n\\tcheckout([\\n\\t\\t{ \\\"desc\\\": \\\"beach umbrella\\\", \\\"prc\\\": 58, \\\"qty\\\": 1, \\\"taxable\\\": True },\\n\\t\\t{ \\\"desc\\\": \\\"beach towel\\\", \\\"prc\\\": 9, \\\"qty\\\": 2, \\\"taxable\\\": True },\\n\\t\\t{ \\\"desc\\\": \\\"swim suit\\\", \\\"prc\\\": 25, \\\"qty\\\": 2, \\\"taxable\\\": False },\\n\\t  { \\\"desc\\\": \\\"soda\\\", \\\"prc\\\": 3, \\\"qty\\\": 2, \\\"taxable\\\": False },\\n\\t  { \\\"desc\\\": \\\"cooler\\\", \\\"prc\\\": 25, \\\"qty\\\": 1, \\\"taxable\\\": True },\\n\\t]), 163.06)\\n\\nTest.assert_equals(\\n\\tcheckout([\\n\\t\\t{ \\\"desc\\\": \\\"potato chips\\\", \\\"prc\\\": 2, \\\"qty\\\": 2, \\\"taxable\\\": False },\\n\\t\\t{ \\\"desc\\\": \\\"soda\\\", \\\"prc\\\": 3, \\\"qty\\\": 2, \\\"taxable\\\": False },\\n\\t\\t{ \\\"desc\\\": \\\"paper plates\\\", \\\"prc\\\": 5, \\\"qty\\\": 1, \\\"taxable\\\": True }\\n\\t]),  15.3)\",\"language\":\"python3\",\"quality\":4.8125,\"summary\":\"Create a function that takes a list of objects and calculate the total based on the quantity of items purchased. Apply a 6% sales tax for each item when appropriate.\\n\\nExamples\\ncheckout([\\n  { \\\"desc\\\": \\\"potato chips\\\", \\\"prc\\\": 2, \\\"qty\\\": 2, \\\"taxable\\\": false },\\n  { \\\"desc\\\": \\\"soda\\\", \\\"prc\\\": 3, \\\"qty\\\": 2, \\\"taxable\\\": false },\\n  { \\\"desc\\\": \\\"paper plates\\\", \\\"prc\\\": 5, \\\"qty\\\": 1,\",\"tags\":[\"arrays\",\"objects\"],\"timestamp\":{\"$date\":1605409955029},\"title\":\"Shopping for Memorial Day!\",\"stats\":{\"completed\":{\"total\":108,\"ratings\":[2,2,2,2,2,3,2,2,2,3,2,2,3,1,2,2,2,2,3,2,0,1,0,0,1,2,1,2,2,1,0,1,0,2,2,0,2,1,2,2,2,1,1,0,1,1,2,0,1,2,5,2,1,2,0,1,2,1,2,0,2,2,2,2,1,0,2,1,2,1,1,2,0,2,1,2,1,0,1,1,2,2,1,1,1,2,2,1,2],\"quality\":[5,5,4,5,5,5,5,5,5,5,4,5,5,5,5,4],\"rators\":[\"mDWNyaaQ9hvPCRzSd\",\"J3upzLHuEwXH7Z2hx\",\"gb9rvGus2Jv7bjZSs\",\"DPi9QGLctq2y76KuE\",\"8PwfYqoDQFThzNtvf\",\"Yp7uvStL97cC9fKkY\",\"p8qqFdJ3FSk5x9z3G\",\"w2HhxvSLmDhaGCAjE\",\"s5M5RvgqR9BhB9JoC\",\"HF28xZKSLM9wEuqNg\",\"i5iePG5GqhJJ8HEoB\",\"55RQznnuTGpsj3EXd\",\"8JyqsSbN2FJXPr3cw\",\"dkcmCKwqApX5jBggc\",\"gJYuGdkXEWWmGRLzu\",\"QRv96jmNaYsWkxQEG\",\"aEm3Wvj2rFYRL8Lrb\",\"cAP3n5NY64uoMwzRR\",\"FEYpu9RWysAgW3XnP\",\"ZuuRwv4HkeT54MwA9\",\"zjdn9ShKbHGCqN9jF\",\"GqothajHR2vKfEHGZ\",\"zd9FLSzsGz3evKafy\",\"PXAcsKkssS2yLyDv2\",\"yTtSCvGPyYna6JuRC\",\"oBcs8GLX2ZFLXQy8y\",\"HqmxnQJM66Y57twhn\",\"Nb6LYPoQP6KJZt8mz\",\"gXTAie79kiw28tx5u\",\"5S9nX4rKsnCcnv4Cz\",\"iS5BrkGLzJyPK7nKt\",\"Jqk2uJZZxEv5wZFze\",\"eYfPWvZwnJQkHbSTK\",\"yjtdwc2AC4jA2RWtn\",\"GGdmhAvxXhqhhibJN\",\"KJCDwGkoXh8qtbbKr\",\"YcCLwitFMAEJSnxAW\",\"XujK3rHd3JcM9TLJy\",\"cR3ibTMxLyEdDFCHY\",\"qAby4AWXmTNeusvg3\",\"StNu7DPyTgEStZsMY\",\"J5T8gZqiZXFuFDTQ7\",\"Ds7L5bksw2QRHjrKL\",\"iojEnnY9FsMfYzp6f\",\"srJ34BaybkQh3qRkM\",\"JhX7jvtpwNyxcc39m\",\"XP4pRYeYiX9K4ejpW\",\"5HCu9Ydd86QgHDRNP\",\"o4ixjQGSaYqA2JoM4\",\"CHvzhtXnv8HTbPQ56\",\"66a9xX73nmTEuKs9k\",\"DEDniTrstQYGounXT\",\"PC3pLs36zNzpRDSuE\",\"eMuCpJ2spXWkJjWNz\",\"EfxwqhYdapX3dMQC2\",\"yod5YhKtPqw2GfG9B\",\"yr822PZmmiDDenxpB\",\"d8qtzoLB264iP8tdY\",\"eHcgvkTGsH7ZziqBo\",\"AJexRBN9cYQmqvYu6\",\"5XiuAqicKD4hBdu63\",\"AasGs8AeX9Lcb9xJn\",\"tAF9Gf6PiGogbZuWs\",\"PWgzeK859suojbrRx\",\"mvJBakQ35CWAnbbEZ\",\"sHjfbGQGLHE6JR6qu\",\"8BFSTCnoe2QggN64c\",\"ey3CASd6Je5LEJzfB\",\"BrTDhPJcACL2bsrpJ\",\"MKT7khMBGXzA22ykf\",\"T6iBEE2jp7f7iEF2P\",\"XD5nmvKQchKezPXhy\",\"Afnps7TJQuS9sipMb\",\"reSPwrcdzBAnDWs2E\",\"2PufnQcsHsfymufX3\",\"suArq5BbSy7gD6xri\",\"dzS6WBTMHyFEag6Fp\",\"4TmgHkn5vqyHK3sYC\",\"4Lwjr34ypKNQNQCar\",\"d9LBRxvADNBB5QJMB\",\"pduNK68oazqQTtbLp\",\"wjc4iejpErBhxWwHo\",\"RoGGD5cpHb4ftdLDv\",\"NzbRqGWspQnWMoDrF\",\"yAouD3PxzED8a4gap\",\"mxX4rH5ELYkdZ2Mbw\",\"X4rzfxGgxx6CS7Bpz\",\"NwczjpfNN8jXy5RF6\",\"mw9464S5dnenqzvpm\",\"5QN8R22z43SrwoHDz\",\"uGuS9YRXW2nj4p6zf\",\"2HfNkb2SoqdyjKW3o\",\"9pzFiFK3ANLjQfnr2\",\"rrSC943cCKNG48sH4\",\"rCrbqMiaGPgHYTNxu\",\"Wi4H6ayKsNDWWQCG5\",\"Qyfyyw6oC4EHAndzo\",\"2fxapKr8XGdNeaKi2\",\"E2hpke7mHxAWsw5t9\",\"8uiLiJcmWxWe6qw65\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"rAgNy2t47iMqxz2Wu\",\"language\":\"javascript\"},{\"_id\":\"jgrDqqNm8z2kzJ6mH\",\"language\":\"python3\"},{\"_id\":\"ke3ZnLigunXXFDH74\",\"language\":\"ruby\"}]}}"]