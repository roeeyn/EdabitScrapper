a["{\"msg\":\"result\",\"id\":\"1337\",\"result\":{\"_id\":\"HBuWYyh5YCmDKF4uH\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def almost_sorted(lst):\\n\\t\",\"difficulty\":2.0089285714285716,\"familyId\":\"mmL6drpwFz83vPQZF\",\"instructions\":\"An **almost-sorted sequence** is a sequence that is **strictly increasing** or **strictly decreasing** if you remove a **single element** from the list (no more, no less). Write a function that returns `True` if a list is **almost-sorted**, and `False` otherwise.\\n\\nFor example, if you remove `80` from the first example, it is perfectly sorted in ascending order. Similarly, if you remove `7` from the second example, it is perfectly sorted in descending order.\\n\\n### Examples\\n```\\nalmost_sorted([1, 3, 5, 9, 11, 80, 15, 33, 37, 41] ) ➞ True\\n\\nalmost_sorted([6, 5, 4, 7, 3]) ➞ True\\n\\nalmost_sorted([6, 4, 2, 0]) ➞ False\\n// Sequence is already sorted.\\n\\nalmost_sorted([7, 8, 9, 3, 10, 11, 12, 2]) ➞ False\\n// Requires removal of more than 1 item.\\n```\\n\\n### Notes\\n- Completely sorted lists should return `False`.\\n- Lists will always be **> 3** in length (to remove ambiguity).\\n- Numbers in each input list will be unique - don't worry about \\\"ties\\\".\",\"lab\":\"Test.assert_equals(almost_sorted([1, 3, 5, 9, 11, 80, 15, 33, 37, 41]), True, 'remove 80 should work')\\nTest.assert_equals(almost_sorted([6, 5, 4, 7, 3]), True, 'remove 7 should work')\\nTest.assert_equals(almost_sorted([6, 4, 2, 0]), False, 'numbers should not be completely sorted')\\nTest.assert_equals(almost_sorted([7, 8, 9, 3, 10, 11, 12, 2]), False)\\nTest.assert_equals(almost_sorted([9, 1, 8, 2]), True, 'remove 1 should work')\\nTest.assert_equals(almost_sorted([1, 3, 9, 44, 15, 17, 33]), True, 'remove 44 should work')\\nTest.assert_equals(almost_sorted([5, 4, 3, 2, -1, 0]), True, 'remove -1 should work')\\nTest.assert_equals(almost_sorted([5, 2, 3, 4]), True, 'remove 5 should work')\\nTest.assert_equals(almost_sorted([8, 3, 7, 4, 9]), False)\\nTest.assert_equals(almost_sorted([-3, -4, -5, -7]), False, 'numbers should not be completely sorted')\\nTest.assert_equals(almost_sorted([5, 6, 7, 8]), False, 'numbers should not be completed sorted')\\nTest.assert_equals(almost_sorted([9, 1, 8, 2, 7, 3]), False)\",\"language\":\"python3\",\"summary\":\"An almost-sorted sequence is a sequence that is strictly increasing or strictly decreasing if you remove a single element from the list (no more, no less). Write a function that returns True if a list is almost-sorted, and False otherwise.\\n\\nFor example, if you remove 80 from the first example, it is perfectly sorted in ascending order. Similarly, if you remove\",\"tags\":[\"arrays\",\"validation\",\"sorting\"],\"timestamp\":{\"$date\":1553207086357},\"title\":\"Almost Sorted Sequence\",\"stats\":{\"completed\":{\"total\":136,\"ratings\":[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,3,3,3,2,2,3,3,2,2,2,3,3,3,2,2,2,2,3,2,0,2,0,2,2,1,2,3,3,2,0,3,3,2,2,2,1,2,3,3,3,4,1,3,3,3,1,3,1,0,2,2,1,0,2,3,2,1,0,3,3,3,3,2,3,0,3,1,1,2,0,0,2,1,1,3,1,3,4,3,0,3,3,1,3,2,2,3,3,2,2,0,0,3,1],\"rators\":[\"BkPgkDQGHm66X4Qai\",\"yZvzB3qFb8pkHy4dg\",\"8JyqsSbN2FJXPr3cw\",\"gb9rvGus2Jv7bjZSs\",\"Jqk2uJZZxEv5wZFze\",\"tAF9Gf6PiGogbZuWs\",\"T3ZAuoMrJjvZwN55B\",\"qaR8DnWrTk8Mus5Q2\",\"qvEvDcL32a5F4Tg6c\",\"Y3KkPrBzMBgMiqaQ6\",\"M8jrv2FfpMQp9Qzpx\",\"88s8dohfzeEZ7pHLx\",\"EPgZSeQrPkXKnTqdG\",\"nc7bRhkxgKyqusYe3\",\"MXjxGML2X75x64vJo\",\"kQH5b8MXJunh84Czq\",\"PFjMZGHNAPTkgd7tq\",\"AF6LgdKhEdzwgRJom\",\"C9LKGu2g5hSijvDzA\",\"nF9pCCzbGDhzvWgaw\",\"hsrNYf3WbexXJKhCq\",\"jYJ26SiLKBu5GRumq\",\"gMJhLdyw3tH7L96X2\",\"cR3ibTMxLyEdDFCHY\",\"s5M5RvgqR9BhB9JoC\",\"AYaEkTWLMmfzpwejr\",\"HqmxnQJM66Y57twhn\",\"8QNgZLrNbHPFRAEu5\",\"otXtuQygbcYATMZoP\",\"2fxapKr8XGdNeaKi2\",\"ab7BsQuhDo3QgE6bh\",\"2innwjWqxJHo4eRGh\",\"PytNZK9mNiRiZxPrm\",\"C4QntmkYtB89GNtpd\",\"AasGs8AeX9Lcb9xJn\",\"4CFzv558qbGcpQwc4\",\"8PwfYqoDQFThzNtvf\",\"w3A7cBWyAfukk6xEQ\",\"Z85ajWfZ4jDPkbvR4\",\"aCNWav8S8Try9RkC6\",\"5kc2gqHdyka73AyKj\",\"aEm3Wvj2rFYRL8Lrb\",\"ZNnsMeNkdDhHjSrZb\",\"mDWNyaaQ9hvPCRzSd\",\"55RQznnuTGpsj3EXd\",\"3Zceb8GudqAG3onG3\",\"YRstQuthRkFeBiXug\",\"kYWb8BwpKwunQkxeX\",\"EjbDDFRECrzQDkzrX\",\"gJYuGdkXEWWmGRLzu\",\"HF28xZKSLM9wEuqNg\",\"a777e8chPvJkY3tKa\",\"n2BRY9X8899dcG8Bw\",\"iojEnnY9FsMfYzp6f\",\"Ecg4m7srYGgZsb4Ck\",\"DEDniTrstQYGounXT\",\"zZDaXBxMzTCBhNkgL\",\"yjtdwc2AC4jA2RWtn\",\"KZ2xddpM2f9JRaryB\",\"Yp7uvStL97cC9fKkY\",\"orFLgPDw9H5MDzmwo\",\"hnyhBFWwNCz9mDfSi\",\"v9KtC8YLbMWmXiW2H\",\"J5T8gZqiZXFuFDTQ7\",\"mG8HqKiAQFTdRZthG\",\"axdSNLZpiCDF8RS6n\",\"qD2LrwaDrSdiybLKY\",\"DPi9QGLctq2y76KuE\",\"dkcmCKwqApX5jBggc\",\"8fZxjQfuXw5HMSRJM\",\"xn7uGNKeAwPEkP9oA\",\"J3upzLHuEwXH7Z2hx\",\"gXTAie79kiw28tx5u\",\"JS3hNM3XXkxPdg3yk\",\"oBcs8GLX2ZFLXQy8y\",\"7scpcTEp3SEx5Wjg9\",\"HZFu8aX6xyW6T8DRc\",\"LQxof8pGabGuWP7Gn\",\"Wv2vJnEj8ywNmARoF\",\"4DF38N8GMFwNTKutK\",\"eYfPWvZwnJQkHbSTK\",\"cAP3n5NY64uoMwzRR\",\"GGdmhAvxXhqhhibJN\",\"sbJcFfQjQ59Wfg4Cd\",\"PXAcsKkssS2yLyDv2\",\"qAby4AWXmTNeusvg3\",\"QRv96jmNaYsWkxQEG\",\"JhX7jvtpwNyxcc39m\",\"FEYpu9RWysAgW3XnP\",\"JKb5rhL6DKcCAypF9\",\"Wpn95NqWxncQrwNgz\",\"yod5YhKtPqw2GfG9B\",\"YcCLwitFMAEJSnxAW\",\"eHcgvkTGsH7ZziqBo\",\"PWgzeK859suojbrRx\",\"8BFSTCnoe2QggN64c\",\"2u9wghjCydey6aWys\",\"CHvzhtXnv8HTbPQ56\",\"2PufnQcsHsfymufX3\",\"fznzd3qnvtbFkkizz\",\"fbr22rabEJMfBp7vD\",\"MpfytGFYF77emJ3cT\",\"T6iBEE2jp7f7iEF2P\",\"gKnWjDjwrJh7MK2df\",\"o4ixjQGSaYqA2JoM4\",\"BrTDhPJcACL2bsrpJ\",\"8sNv5PTHa7XQ8bNqR\",\"RoGGD5cpHb4ftdLDv\",\"jCjCvyhqhpebkJn34\",\"4Lwjr34ypKNQNQCar\",\"AQSqD9oNv2uPfxZCR\",\"mvJBakQ35CWAnbbEZ\",\"5HCu9Ydd86QgHDRNP\",\"buX4mCQhtXCfBjeno\",\"Ds7L5bksw2QRHjrKL\",\"yTtSCvGPyYna6JuRC\",\"Qyfyyw6oC4EHAndzo\",\"nkH3HfJXLMNcBMM79\",\"tMmkfvW7fm429fpJP\",\"jkbavR2ATFJcpmo8M\",\"8nE8QHnFYsHCFebte\",\"wrL4iX2CCSqDCCty3\",\"ey3CASd6Je5LEJzfB\",\"9pzFiFK3ANLjQfnr2\",\"n2qKKxomPnb4zez5M\",\"tFmyXLqhDLsFmGvbt\",\"E2hpke7mHxAWsw5t9\"],\"quality\":[5,5,5,5,3,5,5,5,4,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5]},\"tests\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"instructions\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.833333333333333,\"family\":[{\"_id\":\"bWHgeDP2DWzdawPip\",\"language\":\"cpp\"},{\"_id\":\"z9JujCTeTM69ssLZa\",\"language\":\"javascript\"},{\"_id\":\"HBuWYyh5YCmDKF4uH\",\"language\":\"python3\"},{\"_id\":\"soRGsdZbvokM5whqd\",\"language\":\"ruby\"}]}}"]