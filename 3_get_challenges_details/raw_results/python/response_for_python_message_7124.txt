a["{\"msg\":\"result\",\"id\":\"2268\",\"result\":{\"_id\":\"LanWAvTtQetP5xyDu\",\"author\":\"Femto\",\"authorId\":\"9YtQPAffoq4WJLcAP\",\"code\":\"def coins_div(lst):\",\"difficulty\":3.547169811320755,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"ZExuxkBq6wnMKieMj\",\"instructions\":\"Given a list of coins, father needs to distribute them amongst his three children. Write a function to determine if the coins can be distributed equally or not. Return `True` if each son receives the same amount of money,  otherwise return `False`.\\n\\n```\\n[1, 2, 3, 2, 2, 2, 3] ➞ True\\n```\\n\\n- Amount to be distributed to each child = `(1+2+3+2+4+3)/3 => 15/3 => 5`\\n- Possible set of coin to be distributed to children = `[(1,2,2),(2,3),(2,3)]`\\n\\n```\\n[5, 3, 10, 1, 2] ➞ False\\n```\\n\\n- Amount to be distributed to each child = `(5+3+10+1+2)/3 => 21/3 => 7`\\n- But there are no combination such that each child get equal value which is 7.\\n\\n### Examples\\n```\\ncoins_div([1, 2, 3, 2, 2, 2, 3]) ➞ True\\n\\ncoins_div([5, 3, 10, 1, 2]) ➞ False\\n\\ncoins_div([2, 4, 3, 2, 4, 9, 7, 8, 6, 9]) ➞ True\\n```\\n\\n### Notes\\n- Inputs will be an array of positive integers only.\\n- Coin can be any positive value.\",\"lab\":\"Test.assert_equals(coins_div([1, 1, 1]), True)\\nTest.assert_equals(coins_div([80, 78, 79, 65, 61]), False)\\nTest.assert_equals(coins_div([1, 1, 1]), True)\\nTest.assert_equals(coins_div([80, 78, 79, 65, 61]), False)\\nTest.assert_equals(coins_div([1, 2, 3, 2, 2, 2, 3]), True)\\nTest.assert_equals(coins_div([5, 3, 10, 1, 2]), False)\\nTest.assert_equals(coins_div([2, 4, 3, 2, 4, 9, 7, 8, 6, 9]), True)\\nTest.assert_equals(coins_div([4, 7, 6, 8, 2, 1, 2]), True)\\nTest.assert_equals(coins_div([3, 6, 2, 2, 2, 2, 1, 3, 2, 1, 3]), True)\\nTest.assert_equals(coins_div([11, 9, 3, 22, 6, 2, 4, 10, 1]), False)\\nTest.assert_equals(coins_div([13, 6, 12, 23, 2, 8, 15, 31, 16]), False)\\nTest.assert_equals(coins_div([4, 14, 12, 21, 3, 1, 18, 5]), True)\\nTest.assert_equals(coins_div([10, 5, 20, 27, 17, 4, 3, 15, 0, 25]), True)\\nTest.assert_equals(coins_div([7, 3, 3, 4, 5, 4, 1, 1, 1, 1, 1, 8, 7, 3, 3, 4, 5, 4, 1, 1, 1, 1, 1, 8]), True)\\nTest.assert_equals(coins_div([1, 13, 10, 6, 24, 16, 22, 4]), False)\\nTest.assert_equals(coins_div([9]), False)\\nTest.assert_equals(coins_div([246, 96, 129, 220, 203, 75, 200, 77, 114, 91]), False)\\nTest.assert_equals(coins_div([3, 2, 2, 5, 9, 3, 3]), True)\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,3,3,3,3,4,5,5,5,5,4,5,0,5,0,5,5,5,0,5,0,5,3,4,5,5,4,4,5,1,1,4,4,1,5,4,5,4,5,5,4,4,3,5,2,1,5,5,5],\"rators\":[\"2fxapKr8XGdNeaKi2\",\"tAF9Gf6PiGogbZuWs\",\"8JyqsSbN2FJXPr3cw\",\"HqmxnQJM66Y57twhn\",\"FgkYtHLxeD8pETJ8T\",\"wmiKeocyx5AvLxRbi\",\"EQbnbkkPYtGxiviTp\",\"wXSmXawhmdzcQMhLx\",\"LtD5jQnA63GoHjAq2\",\"DwetpbChQM4r6Gwah\",\"aCNWav8S8Try9RkC6\",\"fMR9RcfgPJWiLgx7k\",\"de3DhFz9dW8vdPanZ\",\"X4iqEdg7dPjFpoASw\",\"LzAr38NtigjfEfdzR\",\"8H565hXdivAbX9d8P\",\"8PwfYqoDQFThzNtvf\",\"uPPkQNHF68i3wTZ4m\",\"SuJeLnhfR3smGu3WZ\",\"zxmtE2mYR4xQzTHoy\",\"oTm8JAxW6Kxed8P6B\",\"aEm3Wvj2rFYRL8Lrb\",\"oMcThjRb7JhcwxHtr\",\"bLpgu8xTdpDPFSAsM\",\"HcriFrFbmYgsMwtBg\",\"vTfyrr4pGddp8rbXc\",\"AasGs8AeX9Lcb9xJn\",\"Zhy5X7BZnqk8hacEw\",\"Cfx3cu6CedA3Hi6Fw\",\"3MybBtCNPcFHLMYmJ\",\"ZNnsMeNkdDhHjSrZb\",\"z9x8kD4jjQ9e3fjyg\",\"8DX9DnJwTSskLXkfu\",\"YLtspA8ec6ntcoMMf\",\"fznzd3qnvtbFkkizz\",\"5dHucvf2qBYyKim7X\",\"4fhjJBvLBWh6QeSih\",\"xn7uGNKeAwPEkP9oA\",\"fSgCtTbtfBQBmGM2m\",\"qx7S9WMzk2tfSxapz\",\"s5M5RvgqR9BhB9JoC\",\"tkdRHAExhDq8ryDJT\",\"DPi9QGLctq2y76KuE\",\"mDWNyaaQ9hvPCRzSd\",\"iS5BrkGLzJyPK7nKt\",\"eHcgvkTGsH7ZziqBo\",\"J3upzLHuEwXH7Z2hx\",\"yjtdwc2AC4jA2RWtn\",\"8sNv5PTHa7XQ8bNqR\",\"2PufnQcsHsfymufX3\",\"gJYuGdkXEWWmGRLzu\",\"KWdvKsAXyfLkTkuiN\"],\"total\":56,\"quality\":[2,5,5,5]},\"flags\":0},\"subscribers\":[\"9YtQPAffoq4WJLcAP\"],\"summary\":\"Given a list of coins, father needs to distibute them amongst his three children. Write a function to return if the coins can be distributed so that each recieve equal value of money from father. If it can be distributed return True otherwise return False.\\n\\n[1, 2, 3, 2, 2, 2, 3] ➞ True\\n\\nAmount to be distributed to each child = (1+2+3+2+4+3)/3 => 15/3 => 5\\nPoss\",\"tags\":[\"loops\",\"arrays\",\"logic\",\"validation\"],\"timestamp\":{\"$date\":1570740756922},\"title\":\"Coin Trouble\",\"isHidden\":false,\"quality\":4.25,\"family\":[{\"_id\":\"E4MGaMxB9zGdSDdne\",\"language\":\"cpp\"},{\"_id\":\"xP34EkkKFGQc6ZGwg\",\"language\":\"javascript\"},{\"_id\":\"LanWAvTtQetP5xyDu\",\"language\":\"python3\"},{\"_id\":\"usea8Qyn6g5QaxAyR\",\"language\":\"ruby\"}]}}"]