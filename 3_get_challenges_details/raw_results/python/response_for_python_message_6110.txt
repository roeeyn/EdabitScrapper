a["{\"msg\":\"result\",\"id\":\"1766\",\"result\":{\"_id\":\"FDzEFbNE2q3eKL8dm\",\"author\":\"Mahmoud Sagr\",\"authorId\":\"pdZMdmGowou47HESt\",\"code\":\"def abacaba_pattern(n):\\n\\t\",\"difficulty\":2.3255813953488373,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"pq4ForkMrkekiTome\",\"instructions\":\"The ABACABA pattern is a recursive fractal pattern that shows up in many places in the real world (such as in geometry, art, music, poetry, number systems, literature and higher dimensions).\\n\\nCreate a function that takes a number `n` as an argument and returns a `string` that represents the full pattern.\\n\\n### Examples\\n```\\nabacaba_pattern(1) ➞ \\\"A\\\"\\n\\nabacaba_pattern(2) ➞ \\\"ABA\\\"\\n\\nabacaba_pattern(3) ➞ \\\"ABACABA\\\"\\n```\\n\\n### Notes\\n- Result should always be uppercase.\\n- Check the **Resources** tab for more info on the ABACABA pattern.\",\"lab\":\"message = \\\"Unmatched.\\\"\\nTest.assert_equals(abacaba_pattern(1), \\\"A\\\", message)\\nTest.assert_equals(abacaba_pattern(2), \\\"ABA\\\", message)\\nTest.assert_equals(abacaba_pattern(3), \\\"ABACABA\\\", message)\\nTest.assert_equals(abacaba_pattern(4), \\\"ABACABADABACABA\\\", message)\\nTest.assert_equals(abacaba_pattern(5), \\\"ABACABADABACABAEABACABADABACABA\\\", message)\\nTest.assert_equals(abacaba_pattern(6), \\\"ABACABADABACABAEABACABADABACABAFABACABADABACABAEABACABADABACABA\\\", message)\\nTest.assert_equals(abacaba_pattern(7), \\\"ABACABADABACABAEABACABADABACABAFABACABADABACABAEABACABADABACABAGABACABADABACABAEABACABADABACABAFABACABADABACABAEABACABADABACABA\\\", message)\\nTest.assert_equals(abacaba_pattern(8), \\\"ABACABADABACABAEABACABADABACABAFABACABADABACABAEABACABADABACABAGABACABADABACABAEABACABADABACABAFABACABADABACABAEABACABADABACABAHABACABADABACABAEABACABADABACABAFABACABADABACABAEABACABADABACABAGABACABADABACABAEABACABADABACABAFABACABADABACABAEABACABADABACABA\\\", message)\\nTest.assert_equals(abacaba_pattern(9), \\\"ABACABADABACABAEABACABADABACABAFABACABADABACABAEABACABADABACABAGABACABADABACABAEABACABADABACABAFABACABADABACABAEABACABADABACABAHABACABADABACABAEABACABADABACABAFABACABADABACABAEABACABADABACABAGABACABADABACABAEABACABADABACABAFABACABADABACABAEABACABADABACABAIABACABADABACABAEABACABADABACABAFABACABADABACABAEABACABADABACABAGABACABADABACABAEABACABADABACABAFABACABADABACABAEABACABADABACABAHABACABADABACABAEABACABADABACABAFABACABADABACABAEABACABADABACABAGABACABADABACABAEABACABADABACABAFABACABADABACABAEABACABADABACABA\\\", message)\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[5,5,5,5,5,2,1,2,1,2,2,3,2,2,4,4,2,5,4,5,0,2,5,5,1,0,2,4,0,4,3,3,1,1,2,5,3,3,4,1,4,1,2,2,2,1,2,4,3,3,4,1,2,1,3,2,3,4,2,4,4,4,0,2,1,0,1,4,2,3,3,3,2,2,2,0,3,4,2,2,4,3,3,4,2,1,3,4,1,3,2,1,2,2,2,2,1,4,3,4,1,2,0,2,3,3,3,4,1,2,4,3,2,1,3,2,2,3,4,2,2,2,2,4,0,1,3,3,4,2,3,2,0,3,1,2,3,2,3,2,1,3,1,2,0,4,4,1,3,3,0,3,2,2,4,3,1,2,1,1,2,2,2,1,4,2,2,3,3,2,3,2,4,4,1,3,1,3,1,2,2,2,4,0,2,0,4,2,2,1,4,2,1,2,3,3,3,3,2,3,3,3,3,4,2,1,3,2,1,2,2,3,1,2,1,3,2,2,1,3,4,2,3,3,3,2,4,1,0,3,3,2,0,2,2,0,2,2,0,2,2,2,2,2,3,2,0,2,3,0,3,0,1,3,2,0,3,2],\"rators\":[\"tAF9Gf6PiGogbZuWs\",\"AYaEkTWLMmfzpwejr\",\"Bw29ZPZGqzTzZrWJk\",\"gb9rvGus2Jv7bjZSs\",\"Tin42WiZ4JTDEnS7b\",\"aCNWav8S8Try9RkC6\",\"XzDRTvBy7jwJJvPog\",\"bRD4Ls3FoPdiBBFvt\",\"7MMgAPNRNHH8rH5CJ\",\"Ti5BF4jnruwNNzHY8\",\"FPpSHXfFyEt4CHpCB\",\"jHrtWDGBhkbuWa7fG\",\"CRBuiWyb9B8c5XW7w\",\"XGSRKuMjfhCK5Q5uW\",\"oX4uicdafKuPeTveT\",\"Den3wJ8yQ3khPa4gC\",\"pYgorHTLHPChinFCm\",\"pci5yjeqMeYpPhfhL\",\"Xk5uqzbbehExM7XdT\",\"5airAWy8rSJDRewDR\",\"TgjcWxsTjar7snQx9\",\"ryYyXJAGf5bgcNNGm\",\"zaQTfuvhRCrbHEbWB\",\"YrfduNc5wCD5uAsPo\",\"EKrSBrTXuhE3f4xsR\",\"8JyqsSbN2FJXPr3cw\",\"rurh72mGpAthfGRGt\",\"hWoF9quQYAsSsFjRn\",\"boH6ZyoX7JeeAGg7d\",\"HqmxnQJM66Y57twhn\",\"stKEm7Cdsauxmhw5Z\",\"2fxapKr8XGdNeaKi2\",\"Jqk2uJZZxEv5wZFze\",\"5kc2gqHdyka73AyKj\",\"zxmtE2mYR4xQzTHoy\",\"8PwfYqoDQFThzNtvf\",\"C4QntmkYtB89GNtpd\",\"WLFPvm65aHfgwQy7N\",\"QKtxPPRK5h3eqno6p\",\"yZvzB3qFb8pkHy4dg\",\"aEm3Wvj2rFYRL8Lrb\",\"AasGs8AeX9Lcb9xJn\",\"mDWNyaaQ9hvPCRzSd\",\"pmgFEciNrd3ES9tuu\",\"K5vETaccLsPyu8sbd\",\"ebPYSECG97bnpAp7s\",\"xH6PCnPJdsebxmRhF\",\"TccnEKGqp7fbL3KxN\",\"KfXMEiCdZfCZGmjTt\",\"y8ci4crEusJKj7uj4\",\"wPxeazAYct9gG2eRM\",\"DwetpbChQM4r6Gwah\",\"dXMbkgQFoN37BhruB\",\"YRstQuthRkFeBiXug\",\"fznzd3qnvtbFkkizz\",\"aP7JkkYer28YWrPvC\",\"fKuLXM3E32A8mWTnY\",\"sAaYMweK7ed4mmFQW\",\"gJYuGdkXEWWmGRLzu\",\"cuAeJFK5w7BJtnmux\",\"HE2mrszq5oi8NFiSS\",\"ZNnsMeNkdDhHjSrZb\",\"wT5gGgvjKc5wz59AQ\",\"3pxHTZBsv7MKzFG6Y\",\"EjbDDFRECrzQDkzrX\",\"aLwJNALj2MpjAGZz4\",\"fbC78icp7oH7fmZMb\",\"TCoQs9Erxoue9BvSj\",\"n2BRY9X8899dcG8Bw\",\"4LGKpgWrEJRsTXDkq\",\"W5TajitmCyxz87zAC\",\"XsYhWtDMoky3nAhjd\",\"5dHucvf2qBYyKim7X\",\"omQhBXTwsBMv6kgz4\",\"ywk3XGvcmpTgRxwZa\",\"Phd2FdPjo9BhBfvKh\",\"9HPvTuNpxRFZKKSrx\",\"bDpmwo4vm9jHeZAPk\",\"FgkYtHLxeD8pETJ8T\",\"cTo3czssohzGLQQa7\",\"i7CzevMnmxck3rdS3\",\"AGMQqooexrFXgMnET\",\"JrADeNRHRTrvc98ry\",\"mFqrAKcfZZM58iYmw\",\"44dAzThMuyGZ5StXB\",\"qPpQfR5KyDb5Y3EFf\",\"Sj4iamMmNvxwWJBiF\",\"zZ43WzxvFu7kaTKZ6\",\"f2BoqyCpgnmjEjLqx\",\"rQRNL3B4x9gg4SkXf\",\"bJxaKHJqR82EWw8Su\",\"NaPpyhnXZ2XLtug83\",\"MK8HigdFigfJzHhyo\",\"SGhPxX5bHGL8zZqtt\",\"hTAsnXv2Qysa8yqKu\",\"qab4tYm6vJQcpKLfi\",\"gBtn7gSMiSJtAGRoE\",\"Ecg4m7srYGgZsb4Ck\",\"8sNv5PTHa7XQ8bNqR\",\"CR7qYyu2NCBvwwNwp\",\"oXJbZzDbT6N2qgqR3\",\"RErqK2yM94wYyD2hk\",\"a777e8chPvJkY3tKa\",\"pDvFWMCD9fQwoBPcu\",\"Fjj4bZPgBTgyWjw7c\",\"nLpdvK7EcahCqNe8X\",\"x4dfavjLEcrvAF3QQ\",\"jMvMNLDbKG7XxYgmm\",\"4xwButZn34q92d9Yn\",\"FZqvnnkNHnykkwzpp\",\"JPcZTN85b7SXnwjPa\",\"NchnDcEmsLTeFZ4FH\",\"GypbCPC7MaMm8Pfpx\",\"uJvcvnJDboT6hARXq\",\"cR2YL369v9ifrcw2v\",\"nduhPDBxa6PbvHRiA\",\"DkPhTa4LbnvCBi88s\",\"CsRC2mvd4EoinLn3Y\",\"Z4M3NAa4TXquMNkHe\",\"oMLSgpSFQnY4ui8cB\",\"asAjc8npPT8WcozjN\",\"cnmj8mAbLcMnKaqLS\",\"CccXoqbXeoMydtEhh\",\"pduNK68oazqQTtbLp\",\"SvsTKrEmBGPtvTDnz\",\"6428wKHtwKkFdvBs5\",\"PT5pu7kJsgp9TDNGv\",\"ACEZh39brWjdGkZXb\",\"ASsfbyG6AwkhqRZSB\",\"4c5amwkedLfTRgm7F\",\"iSY8Jq5PQ8wBiWpiw\",\"TzfFXjsN3n6kkFZSY\",\"mLipYgp4ke65bHpYP\",\"E4dE7Px4BQzSQeh2y\",\"9YtQPAffoq4WJLcAP\",\"RSSFAHtN4LMg3iNPi\",\"CwhJPiuAwQiyPDBkj\",\"SbNoXTrn8yDf25GTq\",\"pPtmnJ7q9QchoG2Jq\",\"TGJywfMH257AuPyqD\",\"nC4sPB69yYuTSks9T\",\"Jm4CXufA2GcS2X9Ar\",\"wd7W4sDnio5TCfNio\",\"4hWjYDZsdixzvKbqQ\",\"eFDqwp8hu5hq6g4YX\",\"eLzCWZtsQ5macJgLy\",\"dDf8uqZ5sg7FaJ8cQ\",\"QHcNEadRcCStpv7dj\",\"K9P4HPXReTrHxHpMr\",\"XFg5NKYA2wTfXMDmu\",\"6TZp5F9a7SdsEnuKs\",\"dNBGNMKLZam4bvHuZ\",\"hXQeWgg2XA3ntfyCz\",\"gkd6fh7sjS7eZLZFy\",\"xn7uGNKeAwPEkP9oA\",\"DpqiRAm2yo3W2x4HX\",\"Huf5LW9s4GmPj5TS6\",\"iFxmjBR8uSEoxyLAX\",\"M35nSp9motwe2cDrP\",\"HRdtZBvxDh8YzkvQk\",\"PAnkwjD6g9ftDYKs2\",\"9CyzZC65NoyiHHxSm\",\"D4WwcMWZNgL6pwGRs\",\"dkm2qCYGq2sJMH3hy\",\"TFoppnTp7rLpRcHXh\",\"6HgMANhu6WiGyXSGN\",\"Nfsj4eNFDjaFa39ga\",\"uwqyDfcC4mjagS5kN\",\"JCTEu8m2J2g6Gm8Hk\",\"gwouzvpzaJa8DabFm\",\"CzwiWyp36GqH38jgv\",\"GbqWLjGXy7uw6YWL3\",\"XtgTJNxw5XG8ouJjG\",\"aXqwKCPBQnQqpefZo\",\"yCJXa869YrEQKw6sj\",\"eJaYDm3afLv3vNn7M\",\"YuHfhdHBWXh877cbh\",\"S5juYy9cQBJwx6zvu\",\"dynD89GCHoau9fvh7\",\"teqbjTHTg6ScWbPgE\",\"kJMAAWPWEG6qFouEh\",\"djtJbDFtF5djPRdTz\",\"cC6LvwpmikLcD4N33\",\"zFRDhqEv2jk3y8yNA\",\"fK2ousiaKc5gvevyW\",\"4CEEaay6mrNZWmZZy\",\"dEuJGZbBQkveCXEFk\",\"wo4cpen33NYFHNca7\",\"cRpaCxYRmGcN3Nsoj\",\"nFX5EJM6T97hJzD8b\",\"wJosiFATmZti3nEHG\",\"h4hHdA8y45Gu6QuXT\",\"77dQgT3gTGWLcRPTk\",\"DCMKC7fnTWgyBj47Y\",\"EWFf7A4bg7P462iWe\",\"ipbuWNjSmiMfbxY6B\",\"2LPJ4vtqSCRKSc8dk\",\"uhJRtyFA2GZnCx6mL\",\"E6sRiQd5xuyefLimm\",\"czqqcLfdMfKS4wJ9E\",\"tDdqXfMYgqZ26Lwvg\",\"7FrGpxKuTbXrzXjyY\",\"BzKfxhSKm2PN3qLzb\",\"hSX6w93tcdsfpPzzM\",\"yWwASsv3iZzfQTbzx\",\"qaZhRinpGp4Y9nGXF\",\"ra7a6S3WLnLbXYq7Q\",\"cMRRaERWHWDqR2swi\",\"oAMWrTnBRxmkqdp2R\",\"9uZpgAtSuPZ7W7DL6\",\"W6Yn9jErAR8W6ugbh\",\"wKw9PP2bLYb5pqN29\",\"bnNnv9jpDaZRnhQQC\",\"ZD3sFkhuCNoEHEekx\",\"iojEnnY9FsMfYzp6f\",\"Rs4zvYBEbYxe3KgMg\",\"yTtSCvGPyYna6JuRC\",\"HjS8XdLh6kisNCtXL\",\"TppLLwi3RZptkewZ4\",\"pWesgwpKdXfvy4JZf\",\"j6i4xNzwPLFKTf5CK\",\"2eXonc4d43qP2KLBu\",\"feC3ae6ShoSBGZz8H\",\"axdSNLZpiCDF8RS6n\",\"PY4q8iDpHJcrJ2P5b\",\"obxQjjJfiuHJfBEhj\",\"CFnd5RRTEDvg29CCE\",\"w33kCRrQcYhifuyMw\",\"mqJtnfNCs6CedXnay\",\"SgZ2t9xFuRqdJGofp\",\"KBxTPknCRmB2b5y3i\",\"yjtdwc2AC4jA2RWtn\",\"iS5BrkGLzJyPK7nKt\",\"HF28xZKSLM9wEuqNg\",\"mDzReRELNxXWY6xTW\",\"S6Zd8mPuvhuh3MFRt\",\"erEunWkRveQoPZyTC\",\"Z85ajWfZ4jDPkbvR4\",\"KEmTti9Tza8A2FLQW\",\"ygDJ7HEzRoJZyPEF4\",\"J23RcmzbdtBbPCTjT\",\"DPi9QGLctq2y76KuE\",\"Wv2vJnEj8ywNmARoF\",\"Yp7uvStL97cC9fKkY\",\"4Mtz9SoMbm8Xu5jKN\",\"gXTAie79kiw28tx5u\",\"K3RacTvkWHLfzKF8i\",\"mfsaETo7uA4x5vqLD\",\"PytNZK9mNiRiZxPrm\",\"d8qtzoLB264iP8tdY\",\"QRv96jmNaYsWkxQEG\",\"u5u2YpHXiNgzDNJdX\",\"oBcs8GLX2ZFLXQy8y\",\"PH32cNxBjrK4a28sn\",\"cR3ibTMxLyEdDFCHY\",\"buX4mCQhtXCfBjeno\",\"T6iBEE2jp7f7iEF2P\",\"MpfytGFYF77emJ3cT\",\"gKnWjDjwrJh7MK2df\",\"XvqxuL9ThRtd2mF3T\",\"rhS8qXRjZcpDXkwnE\",\"yod5YhKtPqw2GfG9B\",\"NJqamrQSnhuYcGL2s\",\"2PufnQcsHsfymufX3\",\"MKT7khMBGXzA22ykf\"],\"total\":279,\"quality\":[4,5,5,4,5,5,3,5,5,4,5,5]},\"flags\":0},\"subscribers\":[\"pdZMdmGowou47HESt\"],\"summary\":\"The ABACABA pattern is a recursive fractal pattern that shows up in many places in the real world (such as in geometry, art, music, poetry, number systems, literature and higher dimensions).\\n\\nCreate a function that takes a number n as an argument and returns a string that represents the full pattern.\\n\\nExamples\\nabacaba_pattern(1) ➞ \\\"A\\\"\\n\\nabacaba_pattern(2) ➞ \\\"AB\",\"tags\":[\"recursion\",\"geometry\"],\"timestamp\":{\"$date\":1569100066684},\"title\":\"ABACABA Pattern\",\"isHidden\":false,\"quality\":4.583333333333333,\"family\":[{\"_id\":\"ipj3zGycaCtwWwXZ8\",\"language\":\"cpp\"},{\"_id\":\"7TCtjPThGdrSDHQK5\",\"language\":\"java\"},{\"_id\":\"ny6ErMLiGWeL6up3v\",\"language\":\"javascript\"},{\"_id\":\"MCsFLbBzZ9aGuh4G4\",\"language\":\"php\"},{\"_id\":\"FDzEFbNE2q3eKL8dm\",\"language\":\"python3\"},{\"_id\":\"JKXZ55e3NFu6bLpCP\",\"language\":\"ruby\"}]}}"]