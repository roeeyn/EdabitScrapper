a["{\"msg\":\"result\",\"id\":\"1209\",\"result\":{\"_id\":\"HNjRjrNPueF5vRh9S\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"def hamming_code(message):\\n\\t\",\"difficulty\":1.6875,\"familyId\":\"fqxp3abFv6nHZa8as\",\"instructions\":\"The **Hamming Code** is used to correct errors in data transmissions. Create a function that takes a string containing the `message` and returns an encoded message using hamming code.\\n\\nThere are some variations on the rules of encipherment. One version of the cipher rules are outlined below:\\n\\n```\\nhamming_code(\\\"hey\\\") ➞\\n\\\"000111111000111000000000000111111000000111000111000111111111111000000111\\\"\\n```\\n\\n**Step 1:** Convert every character to its ASCII value:\\n\\n```\\nh, e, y = 104, 101, 121\\n```\\n\\n**Step 2:** Convert ASCII values to 8-bit binary:\\n\\n```\\n104, 101, 121 = 01101000, 01100101, 01111001\\n```\\n\\n**Step 3:** Triple every bit:\\n\\n```\\n01101000, 01100101, 01111001 =\\n\\n000111111000111000000000, 000111111000000111000111, 000111111111111000000111\\n\\n```\\n**Step 4:** Concatenate the result:\\n\\n```\\n\\\"000111111000111000000000000111111000000111000111000111111111111000000111\\\"\\n```\\n\\nSee the below examples for a better understanding:\\n\\n### Examples\\n```\\nhamming_code(\\\"hey\\\") ➞\\n\\\"000111111000111000000000000111111000000111000111000111111111111000000111\\\"\\n\\nhamming_code(\\\"mubashir\\\") ➞\\n\\\"000111111000111111000111000111111111000111000111000111111000000000111000000111111000000000000111000111111111000000111111000111111000111000000000000111111000111000000111000111111111000000111000\\\"\\n\\nhamming_code(\\\"matt\\\") ➞\\n\\\"000111111000111111000111000111111000000000000111000111111111000111000000000111111111000111000000\\\"\\n```\\n\\n### Notes\\nN/A\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(hamming_code(\\\"hey\\\"), \\\"000111111000111000000000000111111000000111000111000111111111111000000111\\\")\\nTest.assert_equals(hamming_code(\\\"mubashir\\\"), \\\"000111111000111111000111000111111111000111000111000111111000000000111000000111111000000000000111000111111111000000111111000111111000111000000000000111111000111000000111000111111111000000111000\\\")\\nTest.assert_equals(hamming_code(\\\"matt\\\"), \\\"000111111000111111000111000111111000000000000111000111111111000111000000000111111111000111000000\\\")\\nTest.assert_equals(hamming_code(\\\"T3st\\\"), \\\"000111000111000111000000000000111111000000111111000111111111000000111111000111111111000111000000\\\")\\nTest.assert_equals(hamming_code(\\\"T?st!%\\\"), \\\"000111000111000111000000000000111111111111111111000111111111000000111111000111111111000111000000000000111000000000000111000000111000000111000111\\\")\\n# Mubashir\",\"language\":\"python3\",\"quality\":4.6875,\"summary\":\"The Hamming Code is used to correct errors in data transmissions. Create a function that takes a string containing the message and returns an encoded message using hamming code.\\n\\nThere are some variations on the rules of encipherment. One version of the cipher rules are outlined below:\\n\\nhamming_code(\\\"hey\\\") ➞\\n\\\"000111111000111000000000000111111000000111000111000\",\"tags\":[\"cryptography\",\"numbers\",\"strings\",\"logic\"],\"timestamp\":{\"$date\":1610948638801},\"title\":\"Hamming Code\",\"stats\":{\"completed\":{\"total\":79,\"ratings\":[2,2,2,2,2,1,3,0,2,2,2,1,2,2,3,1,2,2,2,0,2,0,0,2,1,1,0,2,2,2,1,2,2,2,2,2,1,0,2,5,2,0,2,0,3,2,2,2,2,2,0,3,1,2,2,3,2,1,2,4,1,2,1,1],\"quality\":[5,5,4,5,5,5,5,5,5,3,5,5,5,5,3,5],\"rators\":[\"T6iBEE2jp7f7iEF2P\",\"n2BRY9X8899dcG8Bw\",\"iS5BrkGLzJyPK7nKt\",\"8PwfYqoDQFThzNtvf\",\"s5M5RvgqR9BhB9JoC\",\"9yztJaNLmznWYQXSM\",\"mSZRnjd8BDGLY39RJ\",\"p8qqFdJ3FSk5x9z3G\",\"QRv96jmNaYsWkxQEG\",\"w2HhxvSLmDhaGCAjE\",\"fRfRrzsEDETovTDzT\",\"gXTAie79kiw28tx5u\",\"yfT2efHZk3MyLr7Q5\",\"hTQAJzCEsbKeumEnb\",\"Jqk2uJZZxEv5wZFze\",\"oBcs8GLX2ZFLXQy8y\",\"cAP3n5NY64uoMwzRR\",\"XujK3rHd3JcM9TLJy\",\"gJYuGdkXEWWmGRLzu\",\"yjtdwc2AC4jA2RWtn\",\"gb9rvGus2Jv7bjZSs\",\"GGdmhAvxXhqhhibJN\",\"PXAcsKkssS2yLyDv2\",\"srJ34BaybkQh3qRkM\",\"Ds7L5bksw2QRHjrKL\",\"J5T8gZqiZXFuFDTQ7\",\"cR3ibTMxLyEdDFCHY\",\"u5u2YpHXiNgzDNJdX\",\"HF28xZKSLM9wEuqNg\",\"MfKe55snfKsdnDejs\",\"sKfrD9gjCDHuqLzSk\",\"FEYpu9RWysAgW3XnP\",\"zd9FLSzsGz3evKafy\",\"2QGRoQn2dRq3scu7k\",\"Yp7uvStL97cC9fKkY\",\"8JyqsSbN2FJXPr3cw\",\"iojEnnY9FsMfYzp6f\",\"qAby4AWXmTNeusvg3\",\"CHvzhtXnv8HTbPQ56\",\"LWCzZ8mb8gwrRNGfq\",\"g2mqHYvQmr78mET8i\",\"5HCu9Ydd86QgHDRNP\",\"o4ixjQGSaYqA2JoM4\",\"66a9xX73nmTEuKs9k\",\"DPi9QGLctq2y76KuE\",\"eMuCpJ2spXWkJjWNz\",\"PC3pLs36zNzpRDSuE\",\"H9KZi2cjt4FwH7qog\",\"R6niHLsEhRb2vARDF\",\"DEDniTrstQYGounXT\",\"yr822PZmmiDDenxpB\",\"AasGs8AeX9Lcb9xJn\",\"9pzFiFK3ANLjQfnr2\",\"AJexRBN9cYQmqvYu6\",\"HqmxnQJM66Y57twhn\",\"tAF9Gf6PiGogbZuWs\",\"J3upzLHuEwXH7Z2hx\",\"mvJBakQ35CWAnbbEZ\",\"Afnps7TJQuS9sipMb\",\"8BFSTCnoe2QggN64c\",\"yod5YhKtPqw2GfG9B\",\"dzS6WBTMHyFEag6Fp\",\"BrTDhPJcACL2bsrpJ\",\"T6Rm8mREPMZSftzrC\",\"7txFzDQ43vJ7qCY88\",\"d9LBRxvADNBB5QJMB\",\"fZaGAGEPmzDhJtPy3\",\"2PufnQcsHsfymufX3\",\"aEm3Wvj2rFYRL8Lrb\",\"5dryGN9Qht6A5mNtR\",\"xqoisFmSjeDeAhuXF\",\"mxX4rH5ELYkdZ2Mbw\",\"4Lwjr34ypKNQNQCar\",\"3nied3n8KG8RSNixH\",\"Wi4H6ayKsNDWWQCG5\"]},\"flags\":1},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"TyzvcAKt5icKnuthD\",\"language\":\"cpp\"},{\"_id\":\"ZPnHtXP7du3XRi85A\",\"language\":\"javascript\"},{\"_id\":\"HNjRjrNPueF5vRh9S\",\"language\":\"python3\"},{\"_id\":\"sNAiaCjFGSy2nHPtk\",\"language\":\"ruby\"}]}}"]