a["{\"msg\":\"result\",\"id\":\"978\",\"result\":{\"_id\":\"4BRGyox5xi8Kp7AAE\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"def chess_board(pole):\\n\\t\",\"difficulty\":1.494949494949495,\"familyId\":\"9Z87tacch2HsKpYPG\",\"instructions\":\"Create a function that takes a chess board square's coordinate and return its color.\\n\\n![Alternative Text](https://edabit-challenges.s3.amazonaws.com/15694848364196442.jpg)\\n\\n### Examples\\n```\\nchess_board(\\\"a1\\\") ➞ \\\"black\\\"\\n\\nchess_board(\\\"e5\\\") ➞ \\\"black\\\"\\n\\nchess_board(\\\"d1\\\") ➞ \\\"white\\\"\\n```\\n\\n### Notes\\nN/A\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(chess_board('a1'), 'black')\\nTest.assert_equals(chess_board('e5'), 'black')\\nTest.assert_equals(chess_board('d1'), 'white')\\nTest.assert_equals(chess_board('c7'), 'black')\\nTest.assert_equals(chess_board('h5'), 'white')\\nTest.assert_equals(chess_board('g2'), 'white')\\nTest.assert_equals(chess_board('b3'), 'white')\\nTest.assert_equals(chess_board('f6'), 'black')\\nTest.assert_equals(chess_board('g5'), 'black')\",\"language\":\"python3\",\"quality\":4.75,\"summary\":\"Create a function that takes a code of chess board square and return his color.\\n\\nAlternative Text\\n\\nExamples\\nchess_board(\\\"a1\\\") ➞ \\\"black\\\"\\n\\nchess_board(\\\"e5\\\") ➞ \\\"black\\\"\\n\\nchess_board(\\\"d1\\\") ➞ \\\"white\\\"\\n\\nNotes\\nN/A\",\"tags\":[\"algebra\",\"algorithms\",\"logic\"],\"timestamp\":{\"$date\":1614599782169},\"title\":\"Chess Board Squares\",\"stats\":{\"completed\":{\"total\":140,\"ratings\":[1,1,1,1,1,1,1,1,3,2,2,1,1,1,2,0,2,3,3,0,2,2,2,1,1,1,0,2,1,1,2,2,1,1,1,2,0,1,2,2,2,1,2,2,0,2,4,1,1,2,3,2,0,1,2,2,1,0,3,2,1,2,1,2,0,2,0,2,3,3,0,2,2,2,2,3,0,0,2,2,2,2,1,2,1,2,1,3,2,1,2,2,2,2,0,2,0,0,2],\"quality\":[5,4,5,5,4,5,5,5,5,4,5,5,5,5,5,5,4,5,5,4,5,5,5,5,3,5,4,5,5,5,5,5,5,5,4,5],\"rators\":[\"T6iBEE2jp7f7iEF2P\",\"iojEnnY9FsMfYzp6f\",\"ZePAKNpuzmvuPTXCo\",\"BJp2WkwLWGHHB5oQW\",\"iX3TZPCoA2qBuy8DM\",\"AQSqD9oNv2uPfxZCR\",\"AFfw7cGg83uYk2Miy\",\"8JyqsSbN2FJXPr3cw\",\"tkD8EN6jWRuKsGp79\",\"8PwfYqoDQFThzNtvf\",\"KBxTPknCRmB2b5y3i\",\"XbxHXmh5ZmRN2gw3K\",\"no46qNkTbNeHepe64\",\"BshvZgmRMvgwf2EfM\",\"Yp7uvStL97cC9fKkY\",\"oBcs8GLX2ZFLXQy8y\",\"iS5BrkGLzJyPK7nKt\",\"p8qqFdJ3FSk5x9z3G\",\"gb9rvGus2Jv7bjZSs\",\"LQxof8pGabGuWP7Gn\",\"8BFSTCnoe2QggN64c\",\"QRv96jmNaYsWkxQEG\",\"srJ34BaybkQh3qRkM\",\"NzbRqGWspQnWMoDrF\",\"5HCu9Ydd86QgHDRNP\",\"FEYpu9RWysAgW3XnP\",\"s5M5RvgqR9BhB9JoC\",\"2QGRoQn2dRq3scu7k\",\"zd9FLSzsGz3evKafy\",\"pPpmP7xeJzGgK362R\",\"o4ixjQGSaYqA2JoM4\",\"XD5nmvKQchKezPXhy\",\"sHjfbGQGLHE6JR6qu\",\"gJYuGdkXEWWmGRLzu\",\"BrTDhPJcACL2bsrpJ\",\"J5T8gZqiZXFuFDTQ7\",\"gXTAie79kiw28tx5u\",\"PXAcsKkssS2yLyDv2\",\"wjc4iejpErBhxWwHo\",\"yyo6YLQN2of6fxp49\",\"cR3ibTMxLyEdDFCHY\",\"dJzNF59j2p8jWZxiQ\",\"eYfPWvZwnJQkHbSTK\",\"sKfrD9gjCDHuqLzSk\",\"ScCZHcDBzx6LrFCyZ\",\"Fb2wehA7QgTFWry2x\",\"RoGGD5cpHb4ftdLDv\",\"YcCLwitFMAEJSnxAW\",\"cAP3n5NY64uoMwzRR\",\"Ds7L5bksw2QRHjrKL\",\"jWbd7SYDzLPjc9EDh\",\"jL4y5fTJAMBjhZmko\",\"GTKsdeEihE636Le9i\",\"KJCDwGkoXh8qtbbKr\",\"3KkyQm77zsew58Dc2\",\"J3upzLHuEwXH7Z2hx\",\"GGdmhAvxXhqhhibJN\",\"K6MfKMytoJJuSGewP\",\"rfyEkETeoS96QNH4e\",\"YA7SDhpgEtsqynvNL\",\"3cF6NXq3ZEwdkgSjb\",\"2fxapKr8XGdNeaKi2\",\"H9KZi2cjt4FwH7qog\",\"buX4mCQhtXCfBjeno\",\"u5u2YpHXiNgzDNJdX\",\"tAF9Gf6PiGogbZuWs\",\"Y9Hpt7d2dCMeHbmpk\",\"yjtdwc2AC4jA2RWtn\",\"EfxwqhYdapX3dMQC2\",\"66a9xX73nmTEuKs9k\",\"eMuCpJ2spXWkJjWNz\",\"PC3pLs36zNzpRDSuE\",\"N2wnZXkhDH86mgjQ8\",\"yod5YhKtPqw2GfG9B\",\"CHvzhtXnv8HTbPQ56\",\"NQQzu4wyLWW9faWtK\",\"DEDniTrstQYGounXT\",\"yr822PZmmiDDenxpB\",\"c2q7mY39z5JPEMCaM\",\"2PufnQcsHsfymufX3\",\"5XiuAqicKD4hBdu63\",\"mvJBakQ35CWAnbbEZ\",\"9Ly8afdtofp8DXzrt\",\"X4rzfxGgxx6CS7Bpz\",\"AasGs8AeX9Lcb9xJn\",\"ubi2wBz4DGtfizFGg\",\"9ivvGvJGvtQfigQaZ\",\"aEm3Wvj2rFYRL8Lrb\",\"R6YxHWAiLgKwy5YvC\",\"rrSC943cCKNG48sH4\",\"ghMkPtdFCpM6w8nax\",\"Cc2Cgj4MWXZxsTooC\",\"eHcgvkTGsH7ZziqBo\",\"qD2LrwaDrSdiybLKY\",\"tdfY4iBvD7oh2ufnN\",\"HqmxnQJM66Y57twhn\",\"9pzFiFK3ANLjQfnr2\",\"qzXAMXsHZGT8o5hTA\",\"vx9wccR68iPfZGJZp\",\"w2HhxvSLmDhaGCAjE\",\"ekn7vkEG3Q4yYqwTS\",\"2iFe3EHEH2YdhSKrs\",\"Afnps7TJQuS9sipMb\",\"utTuvGdmu2sBHWBhQ\",\"AGToqLcJTsJXgQogQ\",\"StNu7DPyTgEStZsMY\",\"pduNK68oazqQTtbLp\",\"9LghqktEpW4YLxdNk\",\"Jqk2uJZZxEv5wZFze\",\"4TmgHkn5vqyHK3sYC\",\"4Lwjr34ypKNQNQCar\",\"dYPkStFnLvAMsHSzZ\",\"PeDy57T7TNNkdqP5M\",\"dzS6WBTMHyFEag6Fp\",\"d9LBRxvADNBB5QJMB\",\"suArq5BbSy7gD6xri\",\"NoNWJZdZuxTMBe6ZH\",\"rhS8qXRjZcpDXkwnE\",\"sbJcFfQjQ59Wfg4Cd\",\"DdHnWE8gjciwCXhSL\",\"3nied3n8KG8RSNixH\",\"MKT7khMBGXzA22ykf\",\"yAouD3PxzED8a4gap\",\"mxX4rH5ELYkdZ2Mbw\",\"8hptWvPBYBjj8vpbu\",\"5QN8R22z43SrwoHDz\",\"ey3CASd6Je5LEJzfB\",\"Wi4H6ayKsNDWWQCG5\",\"Ncn7Qn2LbdsiJnfFk\",\"rCrbqMiaGPgHYTNxu\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"Dv2SE6w2kBScCXYgR\",\"language\":\"cpp\"},{\"_id\":\"kDoi6Eob7KuELwjjp\",\"language\":\"javascript\"},{\"_id\":\"4BRGyox5xi8Kp7AAE\",\"language\":\"python3\"},{\"_id\":\"n6ESLtwrJEmQQeskE\",\"language\":\"ruby\"}]}}"]