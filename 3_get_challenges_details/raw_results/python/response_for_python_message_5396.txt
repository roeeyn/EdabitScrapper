a["{\"msg\":\"result\",\"id\":\"1411\",\"result\":{\"_id\":\"Lx9mL2uBWwtJFv94a\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def checker_board(n, el1, el2):\\n\\t\",\"difficulty\":2.0422535211267605,\"familyId\":\"PjwWogLJXJDPqcZKZ\",\"instructions\":\"Create a **checker board generator**, which takes as inputs `n` and `2 elements` to generate an `n x n` checkerboard with those two elements as alternating squares.\\n\\n### Examples\\n```\\nchecker_board(2, 7, 6) ➞ [\\n  [7, 6],\\n  [6, 7]\\n]\\n\\nchecker_board(3, \\\"A\\\", \\\"B\\\") ➞ [\\n  [\\\"A\\\", \\\"B\\\", \\\"A\\\"],\\n  [\\\"B\\\", \\\"A\\\", \\\"B\\\"],\\n  [\\\"A\\\", \\\"B\\\", \\\"A\\\"]\\n]\\n\\nchecker_board(4, \\\"c\\\", \\\"d\\\") ➞ [\\n  [\\\"c\\\", \\\"d\\\", \\\"c\\\", \\\"d\\\"],\\n  [\\\"d\\\", \\\"c\\\", \\\"d\\\", \\\"c\\\"],\\n  [\\\"c\\\", \\\"d\\\", \\\"c\\\", \\\"d\\\"],\\n  [\\\"d\\\", \\\"c\\\", \\\"d\\\", \\\"c\\\"]\\n]\\n\\nchecker_board(4, \\\"c\\\", \\\"c\\\") ➞ \\\"invalid\\\"\\n```\\n\\n### Notes\\n- Both elements can be either strings or integers.\\n- The first element should be on the upper left corner of the checker board. e.g. \\\"c\\\", not \\\"d\\\" should be element `[0][0]`  for example 3.\\n- Return \\\"invalid\\\" if both inputs are identical (see example 4).\",\"lab\":\"Test.assert_equals(checker_board(3, 'A', 'B'), [\\n\\t['A', 'B', 'A'],\\n\\t['B', 'A', 'B'],\\n\\t['A', 'B', 'A']\\n])\\n\\nTest.assert_equals(checker_board(2, 7, 6), [\\n\\t[7, 6],\\n\\t[6, 7]\\n])\\n\\nTest.assert_equals(checker_board(3, 1, 0), [\\n\\t[1, 0, 1],\\n\\t[0, 1, 0],\\n\\t[1, 0, 1]\\n])\\n\\nTest.assert_equals(checker_board(3, 0, 1), [\\n\\t[0, 1, 0],\\n\\t[1, 0, 1],\\n\\t[0, 1, 0]\\n])\\n\\nTest.assert_equals(checker_board(4, 'c', 'd'), [\\n\\t['c', 'd', 'c', 'd'],\\n\\t['d', 'c', 'd', 'c'],\\n\\t['c', 'd', 'c', 'd'],\\n\\t['d', 'c', 'd', 'c']\\n])\\n\\nTest.assert_equals(checker_board(4, 'c', 'c'), \\\"invalid\\\")\",\"language\":\"python3\",\"summary\":\"Create a checker board generator, which takes as inputs n and 2 elements to generate an n x n checkerboard with those two elements as alternating squares.\\n\\nExamples\\nchecker_board(2, 7, 6) ➞ [\\n  [7, 6],\\n  [6, 7]\\n]\\n\\nchecker_board(3, \\\"A\\\", \\\"B\\\") ➞ [\\n  [\\\"A\\\", \\\"B\\\", \\\"A\\\"],\\n  [\\\"B\\\", \\\"A\\\", \\\"B\\\"],\\n  [\\\"A\\\", \\\"B\\\", \\\"A\\\"]\\n]\\n\\nchecker_board(4, \\\"c\\\", \\\"d\\\") ➞ [\\n  [\\\"c\\\", \\\"d\\\", \\\"c\\\", \\\"d\\\"],\\n  [\",\"tags\":[\"arrays\",\"higher_order_functions\",\"games\"],\"timestamp\":{\"$date\":1553578725595},\"title\":\"Checkerboard Generator\",\"stats\":{\"completed\":{\"total\":171,\"ratings\":[2,2,2,2,2,2,2,2,2,2,1,2,3,2,2,1,1,2,4,2,3,1,3,3,2,3,3,3,2,2,0,3,3,2,1,3,1,1,3,3,3,2,3,3,3,4,1,0,2,2,3,2,3,2,2,1,3,2,3,1,3,3,2,2,1,2,3,3,2,2,1,1,1,3,0,2,3,2,3,3,1,3,2,0,3,3,2,0,2,0,2,0,3,3,3,0,0,2,3,1,2,1,3,3,1,2,0,3,0,3,3,3,2,1,3,0,2,2,0,0,3,2,3,0,0,2,4,3,3,2,2,2,3,3,2,3,3,3,3,1,2,2],\"rators\":[\"BkPgkDQGHm66X4Qai\",\"Jqk2uJZZxEv5wZFze\",\"8JyqsSbN2FJXPr3cw\",\"nydW2HwDGZuk8XaEL\",\"yZvzB3qFb8pkHy4dg\",\"qaR8DnWrTk8Mus5Q2\",\"xQ7uLC6QTtEyKENv9\",\"qvEvDcL32a5F4Tg6c\",\"M8jrv2FfpMQp9Qzpx\",\"SKabuq5XuhXBugKBa\",\"tAF9Gf6PiGogbZuWs\",\"gb9rvGus2Jv7bjZSs\",\"T3ZAuoMrJjvZwN55B\",\"cF8nvyGwfFKE5b2iy\",\"FikSPhcrHBpQ4CyGC\",\"ab7BsQuhDo3QgE6bh\",\"Mb5sjE2qnvjL2xcBG\",\"EPgZSeQrPkXKnTqdG\",\"nc7bRhkxgKyqusYe3\",\"PFjMZGHNAPTkgd7tq\",\"C9LKGu2g5hSijvDzA\",\"td7qPZ7Lv4pEWT2Ya\",\"7g3vZaQXhLpxrajyg\",\"hsrNYf3WbexXJKhCq\",\"AF6LgdKhEdzwgRJom\",\"AYaEkTWLMmfzpwejr\",\"jYJ26SiLKBu5GRumq\",\"cR3ibTMxLyEdDFCHY\",\"gMJhLdyw3tH7L96X2\",\"kQH5b8MXJunh84Czq\",\"N4QjiZzLyunefpXeS\",\"Nj6FwgBtAXsaQwsM2\",\"6gsMupsCZJQgiwzJi\",\"gxHSEPa37E5JKD6Mk\",\"Jg8ZSRXe3NoDMCqGu\",\"HqmxnQJM66Y57twhn\",\"fAoLuqbGvHn4w2PHf\",\"AbrJ8hMyv5fFXG6DN\",\"pDvFWMCD9fQwoBPcu\",\"2fxapKr8XGdNeaKi2\",\"poaQz9ZGZPhTvkKXz\",\"u5u2YpHXiNgzDNJdX\",\"s5M5RvgqR9BhB9JoC\",\"MgwZXHsHk6rKhFxoT\",\"idz2eLdcm3SGGPPBF\",\"2innwjWqxJHo4eRGh\",\"C4QntmkYtB89GNtpd\",\"pmgFEciNrd3ES9tuu\",\"AasGs8AeX9Lcb9xJn\",\"8PwfYqoDQFThzNtvf\",\"T7QZG6y34b65Fxyef\",\"SgZ2t9xFuRqdJGofp\",\"PytNZK9mNiRiZxPrm\",\"mDWNyaaQ9hvPCRzSd\",\"S6Zd8mPuvhuh3MFRt\",\"aEm3Wvj2rFYRL8Lrb\",\"ZNnsMeNkdDhHjSrZb\",\"kYWb8BwpKwunQkxeX\",\"ahShRaM3SEFT33gvS\",\"55RQznnuTGpsj3EXd\",\"YRstQuthRkFeBiXug\",\"8sNv5PTHa7XQ8bNqR\",\"gkqp3EuvuiFXFAFtW\",\"HF28xZKSLM9wEuqNg\",\"gJYuGdkXEWWmGRLzu\",\"v9KtC8YLbMWmXiW2H\",\"Wv2vJnEj8ywNmARoF\",\"euPBBaYXyS8RBr9KB\",\"R4SjTgDnpigJYDLyL\",\"n2BRY9X8899dcG8Bw\",\"YLtspA8ec6ntcoMMf\",\"Ecg4m7srYGgZsb4Ck\",\"DEDniTrstQYGounXT\",\"fK2ousiaKc5gvevyW\",\"hRiMXDZNAzyPd5tpt\",\"iojEnnY9FsMfYzp6f\",\"ekQh3jzgGLsEMbKo3\",\"zZDaXBxMzTCBhNkgL\",\"yjtdwc2AC4jA2RWtn\",\"KZ2xddpM2f9JRaryB\",\"kXEfD7xxEyWd7oxxL\",\"Yp7uvStL97cC9fKkY\",\"qPpQfR5KyDb5Y3EFf\",\"WwMjW4MJRuNFExoPc\",\"mG8HqKiAQFTdRZthG\",\"9PwGaj3dLboYDL8MF\",\"J5T8gZqiZXFuFDTQ7\",\"qD2LrwaDrSdiybLKY\",\"c2u7qfdaYxcyuydtu\",\"DPi9QGLctq2y76KuE\",\"8fZxjQfuXw5HMSRJM\",\"xn7uGNKeAwPEkP9oA\",\"dYPkStFnLvAMsHSzZ\",\"DrkR35NqnP9NDLbq6\",\"QRv96jmNaYsWkxQEG\",\"axdSNLZpiCDF8RS6n\",\"6MjSiiBLPcvXbXcaZ\",\"J3upzLHuEwXH7Z2hx\",\"gXTAie79kiw28tx5u\",\"4fhjJBvLBWh6QeSih\",\"oBcs8GLX2ZFLXQy8y\",\"7scpcTEp3SEx5Wjg9\",\"Z85ajWfZ4jDPkbvR4\",\"fznzd3qnvtbFkkizz\",\"K3RacTvkWHLfzKF8i\",\"bccs9koJxyQ9XNiLC\",\"cAP3n5NY64uoMwzRR\",\"7ifh8r4gvyYMhKB94\",\"yTtSCvGPyYna6JuRC\",\"kEkNyqFARK9YBrhRx\",\"MDzhpCFApGZvzoSt9\",\"gSFJPsMXnqAog3Q9f\",\"dLHj72AadNKDqG6QX\",\"4RsakkyRXyYGwFxEa\",\"StNu7DPyTgEStZsMY\",\"GGdmhAvxXhqhhibJN\",\"RTDx9axf52kxhFjwZ\",\"qAby4AWXmTNeusvg3\",\"9ivvGvJGvtQfigQaZ\",\"KJCDwGkoXh8qtbbKr\",\"FEYpu9RWysAgW3XnP\",\"3LiSLdtN58n46NEqg\",\"YcCLwitFMAEJSnxAW\",\"Wpn95NqWxncQrwNgz\",\"CTKmXtrqDYqJBnuy8\",\"2PufnQcsHsfymufX3\",\"hnyhBFWwNCz9mDfSi\",\"bvmTE46bfcM4ogj34\",\"qZQxPQ2kaNKAMesHT\",\"BrTDhPJcACL2bsrpJ\",\"8BFSTCnoe2QggN64c\",\"PC3pLs36zNzpRDSuE\",\"CHvzhtXnv8HTbPQ56\",\"K6MfKMytoJJuSGewP\",\"4Lwjr34ypKNQNQCar\",\"PWgzeK859suojbrRx\",\"LQxof8pGabGuWP7Gn\",\"qzXAMXsHZGT8o5hTA\",\"o4ixjQGSaYqA2JoM4\",\"tdgcuG4p5KuZkbSwf\",\"gKnWjDjwrJh7MK2df\",\"T6iBEE2jp7f7iEF2P\",\"RoGGD5cpHb4ftdLDv\",\"jCjCvyhqhpebkJn34\",\"kjvgTyRFyKHv44DcH\",\"d8qtzoLB264iP8tdY\",\"5HCu9Ydd86QgHDRNP\",\"muQCKmimwtNAdS8rp\",\"AQSqD9oNv2uPfxZCR\",\"7A8Tv6zZRthHEEjed\",\"jWbd7SYDzLPjc9EDh\",\"eMuCpJ2spXWkJjWNz\",\"yod5YhKtPqw2GfG9B\",\"3KkyQm77zsew58Dc2\",\"rhS8qXRjZcpDXkwnE\",\"JhX7jvtpwNyxcc39m\",\"xqYQMujmvgQ78bnJc\",\"Ds7L5bksw2QRHjrKL\",\"ey3CASd6Je5LEJzfB\",\"Qyfyyw6oC4EHAndzo\",\"jkbavR2ATFJcpmo8M\",\"9pzFiFK3ANLjQfnr2\",\"PCqJmarbp8frpG9x8\",\"v74fPhegePGxCm2uk\"],\"quality\":[5,4,5,5,5,4,5,5,4,5,5,4,5,5,5,5,5,4,5,5,4,5,5,5,5,5,5,5,5,5,5]},\"tests\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"instructions\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"flags\":0},\"isHidden\":false,\"quality\":4.806451612903226,\"family\":[{\"_id\":\"TaH2g7iSJBHgqJemi\",\"language\":\"javascript\"},{\"_id\":\"Lx9mL2uBWwtJFv94a\",\"language\":\"python3\"},{\"_id\":\"BG7byRFN3YoPeAbgi\",\"language\":\"ruby\"}]}}"]