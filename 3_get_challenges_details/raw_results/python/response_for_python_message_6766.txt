a["{\"msg\":\"result\",\"id\":\"2091\",\"result\":{\"_id\":\"jgpfraMtc9nrrPZkL\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"def switch_gravity_on(lst):\\n\\t\",\"difficulty\":2.914285714285714,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"twF9Aaa4so3LbtvX8\",\"instructions\":\"Given a 2D array of some suspended blocks (represented as hastags), return another 2D array which shows the *end result* once gravity is switched on.\\n\\n### Examples\\n```\\nswitch_gravity_on([\\n  [\\\"-\\\", \\\"#\\\", \\\"#\\\", \\\"-\\\"],\\n  [\\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\"],\\n  [\\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\"],\\n  [\\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\"]\\n]) ➞ [\\n  [\\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\"],\\n  [\\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\"],\\n  [\\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\"],\\n  [\\\"-\\\", \\\"#\\\", \\\"#\\\", \\\"-\\\"]\\n]\\n\\nswitch_gravity_on([\\n  [\\\"-\\\", \\\"#\\\", \\\"#\\\", \\\"-\\\"],\\n  [\\\"-\\\", \\\"-\\\", \\\"#\\\", \\\"-\\\"],\\n  [\\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\"],\\n]) ➞ [\\n  [\\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\"],\\n  [\\\"-\\\", \\\"-\\\", \\\"#\\\", \\\"-\\\"],\\n  [\\\"-\\\", \\\"#\\\", \\\"#\\\", \\\"-\\\"]\\n]\\n\\nswitch_gravity_on([\\n  [\\\"-\\\", \\\"#\\\", \\\"#\\\", \\\"#\\\", \\\"#\\\", \\\"-\\\"],\\n  [\\\"#\\\", \\\"-\\\", \\\"-\\\", \\\"#\\\", \\\"#\\\", \\\"-\\\"],\\n  [\\\"-\\\", \\\"#\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\"],\\n  [\\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\"]\\n]) ➞ [\\n  [\\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\"],\\n  [\\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\"],\\n  [\\\"-\\\", \\\"#\\\", \\\"-\\\", \\\"#\\\", \\\"#\\\", \\\"-\\\"],\\n  [\\\"#\\\", \\\"#\\\", \\\"#\\\", \\\"#\\\", \\\"#\\\", \\\"-\\\"]\\n]\\n```\\n\\n### Notes\\nEach block falls individually, meaning there are no rigid objects. Think about it like falling sand in Minecraft as opposed to the rigid blocks in Tetris.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(switch_gravity_on([\\n\\t[\\\"-\\\", \\\"#\\\", \\\"#\\\", \\\"-\\\"],\\n\\t[\\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\"],\\n\\t[\\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\"],\\n\\t[\\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\"]\\n]\\n), [\\n\\t[\\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\"],\\n\\t[\\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\"],\\n\\t[\\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\"],\\n\\t[\\\"-\\\", \\\"#\\\", \\\"#\\\", \\\"-\\\"]\\n])\\n\\n\\nTest.assert_equals(switch_gravity_on([\\n\\t[\\\"-\\\", \\\"#\\\", \\\"#\\\", \\\"-\\\"],\\n\\t[\\\"-\\\", \\\"-\\\", \\\"#\\\", \\\"-\\\"],\\n\\t[\\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\"],\\n]\\n), [\\n\\t[\\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\"],\\n\\t[\\\"-\\\", \\\"-\\\", \\\"#\\\", \\\"-\\\"],\\n\\t[\\\"-\\\", \\\"#\\\", \\\"#\\\", \\\"-\\\"]\\n])\\n\\n\\nTest.assert_equals(switch_gravity_on([\\n\\t[\\\"-\\\", \\\"#\\\", \\\"#\\\", \\\"#\\\", \\\"#\\\", \\\"-\\\"],\\n\\t[\\\"#\\\", \\\"-\\\", \\\"-\\\", \\\"#\\\", \\\"#\\\", \\\"-\\\"],\\n\\t[\\\"-\\\", \\\"#\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\"],\\n\\t[\\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\"]\\n]\\n), [\\n\\t[\\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\"],\\n\\t[\\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\"],\\n\\t[\\\"-\\\", \\\"#\\\", \\\"-\\\", \\\"#\\\", \\\"#\\\", \\\"-\\\"],\\n\\t[\\\"#\\\", \\\"#\\\", \\\"#\\\", \\\"#\\\", \\\"#\\\", \\\"-\\\"]\\n])\\n\\nTest.assert_equals(switch_gravity_on([\\n\\t[\\\"-\\\", \\\"#\\\", \\\"#\\\", \\\"#\\\", \\\"#\\\", \\\"-\\\"],\\n\\t[\\\"#\\\", \\\"-\\\", \\\"-\\\", \\\"#\\\", \\\"#\\\", \\\"-\\\"],\\n\\t[\\\"-\\\", \\\"#\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\"],\\n\\t[\\\"-\\\", \\\"#\\\", \\\"-\\\", \\\"#\\\", \\\"-\\\", \\\"-\\\"]\\n]\\n), [\\n\\t[\\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\"],\\n\\t[\\\"-\\\", \\\"#\\\", \\\"-\\\", \\\"#\\\", \\\"-\\\", \\\"-\\\"],\\n\\t[\\\"-\\\", \\\"#\\\", \\\"-\\\", \\\"#\\\", \\\"#\\\", \\\"-\\\"],\\n\\t[\\\"#\\\", \\\"#\\\", \\\"#\\\", \\\"#\\\", \\\"#\\\", \\\"-\\\"]\\n])\\n\\nTest.assert_equals(switch_gravity_on([\\n\\t[\\\"-\\\", \\\"#\\\", \\\"#\\\", \\\"-\\\"],\\n\\t[\\\"-\\\", \\\"-\\\", \\\"#\\\", \\\"-\\\"],\\n\\t[\\\"#\\\", \\\"#\\\", \\\"-\\\", \\\"-\\\"],\\n]\\n), [\\n\\t[\\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\"],\\n\\t[\\\"-\\\", \\\"#\\\", \\\"#\\\", \\\"-\\\"],\\n\\t[\\\"#\\\", \\\"#\\\", \\\"#\\\", \\\"-\\\"]\\n])\\n\\nTest.assert_equals(switch_gravity_on([\\n\\t[\\\"#\\\"],\\n\\t[\\\"-\\\"],\\n\\t[\\\"#\\\"],\\n\\t[\\\"-\\\"]\\n]\\n), [\\n\\t[\\\"-\\\"],\\n\\t[\\\"-\\\"],\\n\\t[\\\"#\\\"],\\n\\t[\\\"#\\\"]\\n])\\n\\nTest.assert_equals(switch_gravity_on([\\n\\t[\\\"#\\\"],\\n\\t[\\\"#\\\"],\\n\\t[\\\"#\\\"],\\n\\t[\\\"#\\\"]\\n]\\n), [\\n\\t[\\\"#\\\"],\\n\\t[\\\"#\\\"],\\n\\t[\\\"#\\\"],\\n\\t[\\\"#\\\"]\\n])\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[5,5,5,5,5,3,4,2,5,3,3,2,4,2,1,2,3,2,3,5,3,3,5,3,2,2,0,4,5,4,3,2,5,2,2,2,2,0,3,1,3,3,5,1,2,4,5,3,5,4,4,4,4,4,4,3,2,3,4,5,3,3,3,4,5,5,3,5,3,0,5,0,3,3,4,4,2,1,4,3,2,1,2,3,2,3,2,5,0,3,4,4,0,3,5,3,3,0,3,5,5,1,5,3,2,1,3,3,5,3,3,0,2,0,4,1,3,3,5,1,3,1,3,1,3,3,3,3,4,5,4,1,2,3,5,5,5,0,3,4,0,3,3,5,4,4,2,3,3,0,5,5,0,5,5,5,5,0,3,4,4,1,2,0,5,3,1,2,5,2,2,2,4,5,5,2,3,5,1,0,4,2,5,5,0,3,2,3,3,3,3,3,0,2,2,3,4,2,3,0,0,1,2,3,2,0,4,3,3,0],\"rators\":[\"tAF9Gf6PiGogbZuWs\",\"gb9rvGus2Jv7bjZSs\",\"s5M5RvgqR9BhB9JoC\",\"8PwfYqoDQFThzNtvf\",\"9MTBCfwLetLYL88ur\",\"Y6TajwxSFRW7NMYFn\",\"aEm3Wvj2rFYRL8Lrb\",\"aCNWav8S8Try9RkC6\",\"yZvzB3qFb8pkHy4dg\",\"xH6PCnPJdsebxmRhF\",\"wKD6fXcrksTCyCvdB\",\"PSyWQry47wkdmXD8f\",\"DwetpbChQM4r6Gwah\",\"mDWNyaaQ9hvPCRzSd\",\"bLpgu8xTdpDPFSAsM\",\"YRstQuthRkFeBiXug\",\"awxTyavq6BNM86LTD\",\"vKNfYTFHEW7JQsRTA\",\"8JyqsSbN2FJXPr3cw\",\"Z9nTo4HkBQYeKi38z\",\"jDh7j3tZwpChgE5bT\",\"YsAz93yZw8KKPupKv\",\"SGhPxX5bHGL8zZqtt\",\"yKttxy9JGn5Jzwuj6\",\"AasGs8AeX9Lcb9xJn\",\"k5mp7Hkg8w5rwiXpe\",\"CaHTWKxLStGvKmtko\",\"bJaPCBx63YxdJAuTS\",\"8L4WnF9WLDki482Rd\",\"HmKFZqFH9YC346djy\",\"SpTi3f5uA7t7ygtLv\",\"AYaEkTWLMmfzpwejr\",\"W5TajitmCyxz87zAC\",\"Tu9n4ugzhvNfEyRFd\",\"ixYFe4qBsoegafcep\",\"ywk3XGvcmpTgRxwZa\",\"ZNnsMeNkdDhHjSrZb\",\"5H9MNfC4DPwxbakTf\",\"jzorpPo7TYt6i589D\",\"vGRSrdg2F3NKqEP5e\",\"FDWEEwwAtxD7SkqBD\",\"S6Zd8mPuvhuh3MFRt\",\"b9oNDwXGhgfswtHdW\",\"k27vA7iEaLo9YhqQm\",\"HAppzsJ3qECh3gBLE\",\"kzncCp95mWSfJkRmb\",\"KpHrC7WPEojnzgEtz\",\"bDpmwo4vm9jHeZAPk\",\"44dAzThMuyGZ5StXB\",\"MxQXA7kigYpyBS37i\",\"fZCwknjgeY7icBk9c\",\"6gtuv2QLYpq4DeZWT\",\"NaPpyhnXZ2XLtug83\",\"7g3vZaQXhLpxrajyg\",\"efcsSdKgupNnf9DKD\",\"nLpdvK7EcahCqNe8X\",\"BAXQYFC46bxoDjEg4\",\"PWAySsq7gkZWHjaZm\",\"ttiLjW2GDoyqK3hKp\",\"jE24TRMFGTRLrGsME\",\"neRxsjCeKWgXmLKDL\",\"Lfut9z3euZ3odxFcH\",\"4xwButZn34q92d9Yn\",\"FZqvnnkNHnykkwzpp\",\"Ecg4m7srYGgZsb4Ck\",\"HRdtZBvxDh8YzkvQk\",\"8DX9DnJwTSskLXkfu\",\"GmQpgGTQeFJbPqGxJ\",\"bJxaKHJqR82EWw8Su\",\"ZuTDmZ87nYbQjiNu4\",\"fznzd3qnvtbFkkizz\",\"bCFecqKyXTCnGgPSc\",\"hLYtjmHXAxNTtdSFY\",\"8GPnpgq26E9A8JMS8\",\"4Hcjj8hPCFhtGXcdR\",\"CsRC2mvd4EoinLn3Y\",\"EMJ6uvBZkie429gdg\",\"Kg94pDSdZJ2wSkMcY\",\"QRRLM2KAunDa6grje\",\"asAjc8npPT8WcozjN\",\"RkktnA5PfMPtLxCZJ\",\"bNDs4jSqbmpFWpYYe\",\"m2iiZZHTpzHcEKJMn\",\"bEzNQyMN2gMp5osYJ\",\"Pms9k3ed9Q2uTNSsJ\",\"62agN2oNiy8R7CxLy\",\"DdS2QMNhLRS5Kvmts\",\"eMuCpJ2spXWkJjWNz\",\"pPtmnJ7q9QchoG2Jq\",\"GgLd4eWBu79mdjtkP\",\"nk7CQPuKKGWrzjDdr\",\"iSY8Jq5PQ8wBiWpiw\",\"Nfsj4eNFDjaFa39ga\",\"rhCr7ziXLsbWkETH8\",\"CccXoqbXeoMydtEhh\",\"Do6Zvo5NDKQmv9a9g\",\"3MybBtCNPcFHLMYmJ\",\"E6sRiQd5xuyefLimm\",\"E4dE7Px4BQzSQeh2y\",\"FG6gSydYenzCMhB6n\",\"2YWXNP5TsFH9x9tFo\",\"wtrSESeQN9ZQD6WhK\",\"sQbbGm6Nki6T6XMCv\",\"2Td9Aj3o6FAxaqx7w\",\"aqYgRpDiAKsySWLKn\",\"CQrLMPjz7gn82rySP\",\"ENS9wE2HHz2Y5DjRk\",\"Xx9ex4cAgf22zXtGx\",\"hZW6j5s6RHpx35phy\",\"6TZp5F9a7SdsEnuKs\",\"b3Dk2LqoEgripS3Y3\",\"eAyre9986YR4tvSC9\",\"2Dshb8tZeq8phPAcC\",\"6428wKHtwKkFdvBs5\",\"xn7uGNKeAwPEkP9oA\",\"nPfdEqn8RZmDzAeMW\",\"fYdrp5jrhK66eZGrR\",\"7JS3f8SQSvXK2kjtz\",\"x4rCP54wNntB449tR\",\"SjxhuvWoXqJHMMLmo\",\"ZsHZ6a5qLfC8m8EyY\",\"KZ2xddpM2f9JRaryB\",\"DNACg4rcgZsPtYGZ8\",\"6upxohi8gWd8whKaX\",\"gJYuGdkXEWWmGRLzu\",\"afGhZGqYxdcoNr8RQ\",\"5rX3qPFdvRQ9G7xZQ\",\"amfj3y4oZMprJ96fg\",\"YKCHWF7wJXET6LK4P\",\"waNsY2k4ndReyEREk\",\"8KNtgAcNpyT2f6bTT\",\"Jqk2uJZZxEv5wZFze\",\"Xk2g4CNFAnYcvxiSr\",\"mePSe5o7qpkYirqxx\",\"siKtn4x4vNM2m2QBf\",\"oDN67zoApxcztnYdu\",\"czQYdQXp9cAxjD3g9\",\"KktidZuhzfEBK2bdm\",\"syYx2CZhdo5kPZiSW\",\"T63gcy2WbkwsvEyRB\",\"iBPtFyzzY83pAFACa\",\"h4x2jaMdj5aQZbW5g\",\"QZfBqLS7msPLCkS5v\",\"wHu9tNs2pFJQtzEzH\",\"p8qqFdJ3FSk5x9z3G\",\"Zr4t9fm2yjmhRimcW\",\"EHwooxWrxD9Qd24Ph\",\"Tg24gZyPmk8uDXcBY\",\"GvYRcMACovZKmmcgF\",\"iS5BrkGLzJyPK7nKt\",\"nnevRfTLDpBjZZtft\",\"GLgGSqM8SnZuqGzP5\",\"NSDJqGyRFCt2Z55Bw\",\"zXkGtBzWGChTfQG2E\",\"btsCau7tWAxKiKuDF\",\"i4X99bmNPHc5oDgHr\",\"GbDnveoLWcFmpiXXz\",\"HF28xZKSLM9wEuqNg\",\"SPdKF9vDQTC62XTpo\",\"WPf3wuMaAipBActzR\",\"coHxA8hE6GnX2JusK\",\"J9TQG4TpP6hCfnhQC\",\"7fJvDZzmtsoLXhmje\",\"NuuYSwHvWrCbmQLL9\",\"P8ApRvDa46fJ4voCg\",\"XXZcXFXMDj7L9HAxN\",\"BuD6Eo8PZ7PLmrWha\",\"83estQegwgR4TXKk6\",\"JhAEbSj5sAMofcxBf\",\"fSgCtTbtfBQBmGM2m\",\"ictNujqhPkdKotqe2\",\"q8uWP4C7D3vQoiyfS\",\"RdPM3WvmEqZmpvge7\",\"kWobGYgZWJxN6ZddF\",\"cw8QZhq4mmkdgifwk\",\"Mw8yqSDFdQui28w5N\",\"gDmnuoc6gjtinMJpn\",\"ZitsKMQFKHRQw7AhC\",\"tuKfJSqccPhjfe8ER\",\"bG3udRHyEFXzWgKPs\",\"vY8XCKmCftWWMLd9o\",\"Tvq9cWqZWvZYtJKHc\",\"bkPSZg8oyEt6F5fHf\",\"AvA5ezoh8m6mEEXhu\",\"t7BcQEbfMXFTG9Fum\",\"8sNv5PTHa7XQ8bNqR\",\"p5Y7W3jhbe5pjyyH8\",\"jxxPjfbHaLNQBJhfy\",\"m9Dj3WvWDwiu73PRh\",\"5vPZkkiW2WooB9DkA\",\"bfLuiMnnLPMGk3y8m\",\"tHWRvPw9SBJ6SXZcJ\",\"epGSjGAc7zt9BBPDx\",\"sftR9DgM4jpwtxfAM\",\"XSkjLdTqCovQGvNqs\",\"zd9FLSzsGz3evKafy\",\"JGAQgGGrsRMmeANJh\",\"iPWizZHGb88NgM8DJ\",\"4EbfYjjAfn72SbTdM\",\"gfLzjogi2XgCiZtY3\",\"zzbQxBSbkw8MWwSyW\",\"6KLgw7TiSjDzeddhL\",\"M3KjQNkyveZkd5ABX\",\"j8FR2cHxpsYtNo9Dw\",\"vjYSNHgmAgBaGQsJs\",\"yGSyGdZboKGFEQTGn\",\"echzHPruCcGthvehp\",\"JJhr62noAGbew9wMS\",\"zdGGrizKwzXvPTxM5\",\"phB99FKZbrBgFSq22\",\"7mqLZqiA5o7q96DJL\",\"pDvFWMCD9fQwoBPcu\",\"EkkzxzToD4r3vmbNR\",\"qFtHBXSZFcqmiCg5K\",\"GDs7MS38tsHbbpygg\",\"QxC7zdybu4aex33Jm\",\"aaotFPYKJpeDdBmK5\",\"Cia25zjeX3RkCNx5t\",\"Qy4Wr4dQLKgYSRXis\",\"hZZcAYv62aKbvg5zE\",\"kAjhvt8QrT2ggqAen\",\"mLjrvoFNrH4uZWHRB\",\"Y5dqK8G2u6tfqgjR5\",\"TqFpA8dN7fP4HYZ28\",\"xtEQnmTdT8sBF8zE6\",\"f89WBZDy3j7KZY8od\",\"6dZFWNGPH8GKYA8sN\",\"T7QZG6y34b65Fxyef\",\"PK7GNG3EmSzbSNcMq\",\"aQ9roEo6D2tzB6QhM\",\"k9svcK8jAfR4sQQGv\",\"fx4iNwiztaAzkiW2B\",\"xdejWssgiAWReGG8o\",\"hZRbL8dfZEm3asdZF\",\"CnqczNWqa9gJ9P73r\",\"yjtdwc2AC4jA2RWtn\",\"QRv96jmNaYsWkxQEG\",\"38cEoB5NrMG6ompwH\",\"iojEnnY9FsMfYzp6f\",\"J3upzLHuEwXH7Z2hx\",\"CZeLyDD2BQL3jrzzj\",\"og8ca8FDso6bxdd9S\",\"GTKsdeEihE636Le9i\",\"Afnps7TJQuS9sipMb\",\"T6iBEE2jp7f7iEF2P\",\"QvEXmSEo3ANp3yPyH\",\"yTtSCvGPyYna6JuRC\",\"myJFz3o5bSK9q3czj\",\"2PufnQcsHsfymufX3\",\"gXTAie79kiw28tx5u\",\"Z85ajWfZ4jDPkbvR4\",\"suArq5BbSy7gD6xri\",\"hrzGaJc9KZqgjAvew\",\"DPi9QGLctq2y76KuE\",\"n2qKKxomPnb4zez5M\"],\"total\":268,\"quality\":[4,5,5,5,5,5,5,3,1,5,5,5,5,5,5,5,4,5,4,5,5,5,4,5,5,5,5,5,5,5,5,4,4,5,5,5,1,4,5,5,5,5,5,5,4,5,5,5,5,5]},\"flags\":0},\"summary\":\"Given a 2D array of some suspended blocks (represented as hastags), return another 2D array which shows the end result once gravity is switched on.\\n\\nExamples\\nswitchgravityon([\\n  [\\\"-\\\", \\\"#\\\", \\\"#\\\", \\\"-\\\"],\\n  [\\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\"],\\n  [\\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\"],\\n  [\\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\"]\\n]) ➞ [\\n  [\\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\"],\\n  [\\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\"],\\n  [\\\"-\\\", \\\"-\\\", \\\"-\\\", \\\"-\\\"],\\n  [\\\"-\\\", \\\"#\\\",\",\"tags\":[\"physics\",\"arrays\",\"logic\",\"loops\"],\"timestamp\":{\"$date\":1584046993652},\"title\":\"Switch on the Gravity\",\"quality\":4.64,\"family\":[{\"_id\":\"xHFhHKnNP8uc7AoNm\",\"language\":\"cpp\"},{\"_id\":\"HDpN8a7SunaAY94NX\",\"language\":\"javascript\"},{\"_id\":\"jgpfraMtc9nrrPZkL\",\"language\":\"python3\"},{\"_id\":\"7kvusDgxHdETff8zj\",\"language\":\"ruby\"}]}}"]