a["{\"msg\":\"result\",\"id\":\"2471\",\"result\":{\"_id\":\"GMGeJ2kX2MnyEmt7n\",\"author\":\"bmsyiek\",\"authorId\":\"bqphLhTeiWpcfTAXo\",\"code\":\"def isFinitelyExpressible(rational, base):\\n\\t\",\"difficulty\":4.7272727272727275,\"editorId\":\"bqphLhTeiWpcfTAXo\",\"familyId\":\"kh2TRydniASHd7ZZp\",\"instructions\":\"A number is finitely expressible if you can write it in floating point form and only use a finite number of digits.\\n- 1/3 **is not** finitely expressible in base 10 as it requires an infinite number of digits to write out: 0.333333 ...\\n- 3/2 **is** finitely expressible in base 10 as it requires only two digits: 1.5\\n\\nCreate a function that takes in a rational number in the form of a tuple and a number base as arguments and returns true if the rational is finitely expressible in the number base and false if not.\\n\\n```\\nisFinitelyExpressible((numerator, denominator), number_base)\\n```\\n\\n### Examples\\n```\\nisFinitelyExpressible((1, 3), 10) ➞ False\\n# 0.3333...\\n\\nisFinitelyExpressible((4, 1), 10) ➞ True\\n# 4\\n\\nisFinitelyExpressible((4, 7), 2)  ➞ False\\n# 0.1001001...\\n```\\n\\n### Notes\\n- The rational numbers given to you will be in lowest terms.\\n- Python doesn't have infinite floating point precision so writing out a number in a base won't work and the bases in the tests will be quite large.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(isFinitelyExpressible((1,2),10), True)\\nTest.assert_equals(isFinitelyExpressible((11,2),8), True)\\nTest.assert_equals(isFinitelyExpressible((4,1),12), True)\\nTest.assert_equals(isFinitelyExpressible((143,2465),14790), True)\\nTest.assert_equals(isFinitelyExpressible((8125,2086),51498150032), True)\\nTest.assert_equals(isFinitelyExpressible((6,204254482363),40549), True)\\nTest.assert_equals(isFinitelyExpressible((86779,26277541317),991926362025), True)\\nTest.assert_equals(isFinitelyExpressible((991026973,35052455515),33231548735), True)\\nTest.assert_equals(isFinitelyExpressible((15625,492562918883),69220802581), True)\\nTest.assert_equals(isFinitelyExpressible((266027,847288609443),844422579573), True)\\nTest.assert_equals(isFinitelyExpressible((12345678910,71322723161814151019),71307032102750441925480467690957080247081),True)\\nTest.assert_equals(isFinitelyExpressible((1,3),10), False)\\nTest.assert_equals(isFinitelyExpressible((9,2),7), False)\\nTest.assert_equals(isFinitelyExpressible((255255,392863),255255), False)\\nTest.assert_equals(isFinitelyExpressible((8388608,347094822207),1726455418), False)\\nTest.assert_equals(isFinitelyExpressible((14250235125,78310985281),275455967679), False)\\nTest.assert_equals(isFinitelyExpressible((25937424601,68366083),834960690103), False)\\nTest.assert_equals(isFinitelyExpressible((41745810709,681990233929),132472522163), False)\\nTest.assert_equals(isFinitelyExpressible((5107,1070907229634868544830912000),3617159834351812631), False)\\nTest.assert_equals(isFinitelyExpressible((1,211036024260597249297979),1888929321922256651114986328755759396991627137663471), False)\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[5,5,5,5,5,5,3,5,5,4,5],\"rators\":[\"bqphLhTeiWpcfTAXo\",\"aEm3Wvj2rFYRL8Lrb\",\"8PwfYqoDQFThzNtvf\",\"aCNWav8S8Try9RkC6\",\"siKtn4x4vNM2m2QBf\",\"iS5BrkGLzJyPK7nKt\"],\"total\":7,\"quality\":[]},\"flags\":0},\"summary\":\"A number is finitely expressible if you can write it in floating point form and only use a finite number of digits.\\n1/3 is not finitely expressible in base 10 as it requires an infinite number of digits to write out: 0.333333 ...\\n3/2 is finitely expressible in base 10 as it requires only two digits: 1.5\\n\\nCreate a function that takes in a rational number in the\",\"tags\":[\"algorithms\",\"math\",\"validation\"],\"timestamp\":{\"$date\":1589645133513},\"title\":\"Finitely Expressible Rational Numbers in a Number Base\",\"quality\":0,\"family\":[{\"_id\":\"GMGeJ2kX2MnyEmt7n\",\"language\":\"python3\"}]}}"]