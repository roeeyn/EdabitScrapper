a["{\"msg\":\"result\",\"id\":\"1882\",\"result\":{\"_id\":\"d6wR7bcs4M6QdzpFj\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def repeat(lst, n):\\n\\t\\n\\ndef add(lst, x):\\n\\t\\n\\ndef remove(lst, i, j):\\n\\t\\n\\ndef concat(lst, lst2):\\n\\t\",\"difficulty\":2.592,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"pmintBHpAm5Jk2MeF\",\"instructions\":\"Write **four** functions that **directly mutate** a list:\\n\\n1. **repeat(lst, n)**: Repeat `lst` **n** times.\\n2. **add(lst, x)**: Adds `x` to the **end** of the `lst`.\\n3. **remove(lst, m, n)**: Removes all elements between indices `m` and `n` **inclusive** in `lst`.\\n4. **concat(lst, x)**: concatenates `lst` with `x` (another list).\\n\\n### Examples\\n```\\nlst = [1, 2, 3, 4]\\n\\nrepeat(lst, 3) ➞ [1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4] \\n\\nadd(lst, 1) ➞ [1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1]\\n\\nremove(lst, 1, 12) ➞ [1]\\n\\nconcat(lst, [3, 4]) ➞ [1, 3, 4]\\n```\\n\\n### Notes\\nYour functions should mutate the list directly, not make a copy.\",\"lab\":\"lst = [1, 2, 3, 4]\\nlst2 = [5, 6]\\n\\nTest.assert_equals(repeat(lst, 3), [1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4])\\nTest.assert_equals(add(lst, 1), [1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1])\\nTest.assert_equals(remove(lst, 1, 12), [1])\\nTest.assert_equals(concat(lst, [3, 4]), [1, 3, 4])\\n\\n# Check to make sure its a mutation, not a copy.\\nTest.assert_equals(id(lst), id(repeat(lst, 3)))\\nTest.assert_equals(id(lst), id(add(lst, 1)))\\nTest.assert_equals(id(lst), id(remove(lst, 1, 6)))\\nTest.assert_equals(id(lst), id(concat(lst, lst2)))\",\"language\":\"python3\",\"summary\":\"Write four functions that directly mutate a list:\\n\\nrepeat(lst, n): Repeat lst n times.\\nadd(lst, x): Adds x to the end of the lst.\\nremove(lst, m, n): Removes all elements between indices m and n inclusive in lst.\\nconcat(lst, x): concatenates lst with x (another list).\\n\\nExamples\\nlst = [1, 2, 3, 4]\\n\\nrepeat(lst, 3) ➞ [1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4]\\n\\nadd(lst,\",\"tags\":[\"language_fundamentals\",\"arrays\"],\"timestamp\":{\"$date\":1557267493741},\"title\":\"Exploring Mutable Methods\",\"stats\":{\"completed\":{\"total\":154,\"ratings\":[3,3,3,3,3,3,3,3,3,3,3,3,4,2,4,2,2,2,3,2,1,3,3,4,4,2,4,4,1,2,1,4,2,3,4,2,1,3,3,2,4,2,2,3,1,4,0,2,3,4,0,4,4,1,3,4,4,1,3,4,1,0,0,2,2,4,3,3,3,2,3,4,1,1,2,3,1,0,2,1,0,4,4,4,3,3,1,4,3,2,3,2,2,3,2,5,4,1,2,2,3,3,3,1,4,4,4,3,0,0,3,3,2,0,3,3,1,4,2,5,5,3,4,4,2],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"tAF9Gf6PiGogbZuWs\",\"yZvzB3qFb8pkHy4dg\",\"8JyqsSbN2FJXPr3cw\",\"gb9rvGus2Jv7bjZSs\",\"M8jrv2FfpMQp9Qzpx\",\"6W2GSzrYjMD9ANBFY\",\"ab7BsQuhDo3QgE6bh\",\"MXjxGML2X75x64vJo\",\"FikSPhcrHBpQ4CyGC\",\"AYaEkTWLMmfzpwejr\",\"7g3vZaQXhLpxrajyg\",\"BFNm9gacwba9KyLFW\",\"3ifAHQzsMasfQySoL\",\"j7fyR7k8FfGPLraZx\",\"oqGkxvASXq52iTDvp\",\"XKi8iZXBCHCaebSHh\",\"HqmxnQJM66Y57twhn\",\"3sZjcSrMfQFTFugTh\",\"2fxapKr8XGdNeaKi2\",\"Jqk2uJZZxEv5wZFze\",\"8PwfYqoDQFThzNtvf\",\"EKrSBrTXuhE3f4xsR\",\"2innwjWqxJHo4eRGh\",\"ftRou9zcw69GCx4iv\",\"C4QntmkYtB89GNtpd\",\"pmgFEciNrd3ES9tuu\",\"aEm3Wvj2rFYRL8Lrb\",\"AasGs8AeX9Lcb9xJn\",\"YRstQuthRkFeBiXug\",\"fznzd3qnvtbFkkizz\",\"3Zceb8GudqAG3onG3\",\"mDWNyaaQ9hvPCRzSd\",\"gJYuGdkXEWWmGRLzu\",\"ZNnsMeNkdDhHjSrZb\",\"bJaPCBx63YxdJAuTS\",\"pWD2YC5s4YRCxFc2i\",\"yF68LNRo3rXcSFkR9\",\"n2BRY9X8899dcG8Bw\",\"w2NGhfAGohsq6WhhN\",\"yYxPzFqBgtQ9fsyHM\",\"aCNWav8S8Try9RkC6\",\"Phd2FdPjo9BhBfvKh\",\"T6xRoSqcSHjvP2Tik\",\"ekQh3jzgGLsEMbKo3\",\"yKttxy9JGn5Jzwuj6\",\"eHhL37DG7oW3vTcg7\",\"SGhPxX5bHGL8zZqtt\",\"nLpdvK7EcahCqNe8X\",\"Z4M3NAa4TXquMNkHe\",\"8sNv5PTHa7XQ8bNqR\",\"GGdmhAvxXhqhhibJN\",\"cykCKNJcqFBxz4T8s\",\"Ecg4m7srYGgZsb4Ck\",\"xn7uGNKeAwPEkP9oA\",\"mgRNgZvyyhShx5beG\",\"K9P4HPXReTrHxHpMr\",\"qab4tYm6vJQcpKLfi\",\"pPtmnJ7q9QchoG2Jq\",\"cnmj8mAbLcMnKaqLS\",\"DCMKC7fnTWgyBj47Y\",\"WzEhzQcMwc4sw8z7T\",\"4fhjJBvLBWh6QeSih\",\"foytX6kH9wiSYqLtT\",\"zZDaXBxMzTCBhNkgL\",\"Nfsj4eNFDjaFa39ga\",\"p8qqFdJ3FSk5x9z3G\",\"vSPc7MGK5Poy8tSFp\",\"yhnpZLDLibMdyaM5W\",\"MP8r4QdbYAf2exkbk\",\"u7i7WPM63n42r8R8o\",\"iZHFkJnWMcFMb5hN8\",\"8zQnyekbSwzhoJymu\",\"XhhL8kqHz32PZNaXY\",\"dWXHFmTpF8PnGJQL3\",\"P7NmFbCJ5offXMRvB\",\"SSqGKf3pKQZtjhaSe\",\"aLxRYMdDSeCixE9pz\",\"yjtdwc2AC4jA2RWtn\",\"X57RegjfMs4majtka\",\"quEfQhA3xBwsCobcg\",\"HF28xZKSLM9wEuqNg\",\"Wv2vJnEj8ywNmARoF\",\"oZiGwL535nJ5ZMJr7\",\"tXcqs5WDEoK3Gie7m\",\"c2u7qfdaYxcyuydtu\",\"iScDhqn2kD23x4P5B\",\"2QziknsznNeMPRh3g\",\"wmW4mGgj6tJxepqpC\",\"ECykF5mBka6WGEc3Z\",\"yTtSCvGPyYna6JuRC\",\"6F3Y6ZBAGNDGGTt9B\",\"axdSNLZpiCDF8RS6n\",\"h4x2jaMdj5aQZbW5g\",\"X3Temjka6hN4q77b9\",\"GEzqY3QW2xqvZDYPt\",\"DpnYcMphntjsQ96qg\",\"v9KtC8YLbMWmXiW2H\",\"SExX3m5YftBWmsk2e\",\"J3upzLHuEwXH7Z2hx\",\"RDWyvs7i9Gr4WTwYa\",\"CTKmXtrqDYqJBnuy8\",\"gXTAie79kiw28tx5u\",\"Hhvy3EGqWBXt3nFPA\",\"ScaZG69jog5kcqGtQ\",\"hkiz2Nv927cYGrA86\",\"2PufnQcsHsfymufX3\",\"8nE8QHnFYsHCFebte\",\"9ivvGvJGvtQfigQaZ\",\"iojEnnY9FsMfYzp6f\",\"QHcNEadRcCStpv7dj\",\"Bmb3scffZ5SujLMmd\",\"no46qNkTbNeHepe64\",\"CZeLyDD2BQL3jrzzj\",\"AvoAjihKNKHv3mi2P\",\"QRv96jmNaYsWkxQEG\",\"AQSqD9oNv2uPfxZCR\",\"HhYCji7QqauyN3A7v\",\"c2q7mY39z5JPEMCaM\",\"wwMcJQRvf3X59Jyev\",\"Y4qmg2KP6FCezWM8a\",\"4tLFkGSzBMruqzo7Q\",\"ctbThYbufFCYbRK4f\",\"fbr22rabEJMfBp7vD\",\"XHShZ3WMPgGEA2vkR\",\"oBcs8GLX2ZFLXQy8y\",\"hR7GMiqGap4CzEWSy\",\"nkL2knkcNaiHCerW2\",\"kDS65HqCv4sngukej\",\"MpfytGFYF77emJ3cT\",\"akxTXEcd6TntA6uz4\",\"Yp7uvStL97cC9fKkY\",\"aFYzioHvZPvPaunsg\",\"euPBBaYXyS8RBr9KB\",\"er6WTTsk6uK55EEXA\"],\"quality\":[4,3,1,5,3,4,5,5,5,5,5,5,5,4,4,4,5,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"isHidden\":false,\"quality\":4.35,\"family\":[{\"_id\":\"d6wR7bcs4M6QdzpFj\",\"language\":\"python3\"}]}}"]