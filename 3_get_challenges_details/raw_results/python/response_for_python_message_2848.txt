a["{\"msg\":\"result\",\"id\":\"149\",\"result\":{\"_id\":\"pfuxt3J2p2tph3LJQ\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"def forbidden_letter(char, lst):\\n\\t\",\"difficulty\":0.5245098039215687,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"MARtN7sMXoHTMawQf\",\"instructions\":\"Given a letter and a list of words, return whether the letter **does not appear** in any of the words.\\n\\n### Examples\\n```\\nforbidden_letter(\\\"r\\\", [\\\"rock\\\", \\\"paper\\\", \\\"scissors\\\"]) ➞ False\\n\\nforbidden_letter(\\\"a\\\", [\\\"spoon\\\", \\\"fork\\\", \\\"knife\\\"]) ➞ True\\n\\nforbidden_letter(\\\"m\\\", []) ➞ True\\n```\\n\\n### Notes\\n* All inputs given will be in lowercase.\\n* You will always be given a **forbidden letter**, but there may be **empty lists**.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(forbidden_letter('e', ['rinse', 'and', 'repeat']), False)\\nTest.assert_equals(forbidden_letter('d', ['python', 'javascript', 'ruby', 'fortran']), True)\\nTest.assert_equals(forbidden_letter('a', ['spoon', 'fork', 'knife']), True)\\nTest.assert_equals(forbidden_letter('b', ['test', 'dot', 'assert', 'equals']), True)\\nTest.assert_equals(forbidden_letter('i', ['rock', 'paper', 'scissors']), False)\\nTest.assert_equals(forbidden_letter('t', []), True)\",\"language\":\"python3\",\"quality\":4.623529411764705,\"stats\":{\"completed\":{\"ratings\":[0,0,0,0,0,0,0,0,1,0,0,3,0,2,2,0,2,1,0,1,1,0,0,0,0,0,0,0,0,0,5,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,1,0,0,0,0,1,0,2,0,0,0,1,3,1,1,1,0,0,2,0,0,1,1,0,0,2,0,1,0,1,0,0,1,0,0,0,0,0,1,0,0,5,0,1,0,0,0,0,1,1,0,2,1,0,1,1,2,0,1,1,0,0,0,1,1,0,1,1,0,0,0,3,0,0,1,0,0,0,0,1,2,2,0,5,0,2,0,1,1,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,0,1,2,0,2,1,1,0,0,0,1,1,0,1,1,0,1,0,0,0,0,1],\"quality\":[5,5,5,5,5,5,3,5,5,5,5,5,3,4,4,5,4,5,5,2,4,5,5,5,5,5,5,1,5,5,5,5,5,4,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,1,5,1,5,5,5,5,5,5,5,4,5,4,5,5,5,4,5,5,5,2,5,5],\"rators\":[\"PXAcsKkssS2yLyDv2\",\"iS5BrkGLzJyPK7nKt\",\"Whh5tY7LvSwtRBCbj\",\"3cF6NXq3ZEwdkgSjb\",\"wMKZYgo2AnSd3AuGx\",\"q4KoeXeGbxn2XkdS7\",\"2QGRoQn2dRq3scu7k\",\"hnyhBFWwNCz9mDfSi\",\"pPpmP7xeJzGgK362R\",\"PweZwtXTDkEwxZXQ4\",\"AhBxFJ2fKGmegvngB\",\"buX4mCQhtXCfBjeno\",\"4oJg4noyTi6b8J8A4\",\"QRv96jmNaYsWkxQEG\",\"FEYpu9RWysAgW3XnP\",\"7dQYiDeTcMztbGyso\",\"srJ34BaybkQh3qRkM\",\"wRttWTM59y8m5mx7x\",\"fTNQmMvTZhhiGBCMe\",\"eYfPWvZwnJQkHbSTK\",\"5HCu9Ydd86QgHDRNP\",\"JS3hNM3XXkxPdg3yk\",\"yjtdwc2AC4jA2RWtn\",\"Ds7L5bksw2QRHjrKL\",\"Jqk2uJZZxEv5wZFze\",\"AFfw7cGg83uYk2Miy\",\"LCuvvWMwiGuqTwNRi\",\"N2wnZXkhDH86mgjQ8\",\"J5T8gZqiZXFuFDTQ7\",\"uvLimfW9x3bCp7huQ\",\"gJYuGdkXEWWmGRLzu\",\"HBuJYgW2eRBJp9FoG\",\"cR3ibTMxLyEdDFCHY\",\"gb9rvGus2Jv7bjZSs\",\"F6GsF4gLfNNd6di6x\",\"AXcnPX68zdMiLNSmu\",\"a777e8chPvJkY3tKa\",\"DEDniTrstQYGounXT\",\"7q8oBsCHwn48Ppnrq\",\"eMuCpJ2spXWkJjWNz\",\"8EJ4j2fcfjTJ7Zrzu\",\"zd9FLSzsGz3evKafy\",\"rfyEkETeoS96QNH4e\",\"PC3pLs36zNzpRDSuE\",\"yAouD3PxzED8a4gap\",\"MXGuntvz3byrP6WJc\",\"XD5nmvKQchKezPXhy\",\"j7ebNFtte6fSkMWjj\",\"oBcs8GLX2ZFLXQy8y\",\"s5M5RvgqR9BhB9JoC\",\"pwWtbXEjzuvrhEGwt\",\"zC8WrPp5BC6c2exrW\",\"x2Cz7S8rCKJqCE3Xe\",\"sX9GZp3fYyQLrBKMJ\",\"YRAzEBJoLvSaiPtYx\",\"GdKtjPh8TcfmJuduv\",\"9qoWqLcHGiDX429rE\",\"p8qqFdJ3FSk5x9z3G\",\"8JyqsSbN2FJXPr3cw\",\"EfxwqhYdapX3dMQC2\",\"gjiu8kLnHYxe4HoBN\",\"wjc4iejpErBhxWwHo\",\"ghMkPtdFCpM6w8nax\",\"aEm3Wvj2rFYRL8Lrb\",\"52LKhrt3s9TMq83ug\",\"NtMmArTiHdEpYyRHv\",\"Q6gEE9dG8ERy2Xu3c\",\"J3upzLHuEwXH7Z2hx\",\"peCvTbjQBgdWo53Wv\",\"8teSHp77vHhhvJWiS\",\"CHvzhtXnv8HTbPQ56\",\"oaJbwGAbtpgYhMEgd\",\"i5iePG5GqhJJ8HEoB\",\"kjvgTyRFyKHv44DcH\",\"YcCLwitFMAEJSnxAW\",\"rgmhomEQqsnngdSJZ\",\"gGXghWEN4u5vuoXcR\",\"2MjzJ7yxh3eT3xbng\",\"qAby4AWXmTNeusvg3\",\"sbJcFfQjQ59Wfg4Cd\",\"DvzpcjeQsLCSZc9r9\",\"CBwziWoAPy7qfE5MM\",\"jcPZ5ySXseCB7Ec3x\",\"a2Kmh6ekWqQQooHiQ\",\"C5h42RTzbdrpPfeZo\",\"MKT7khMBGXzA22ykf\",\"hqvExZcs9dqew7Bm2\",\"q6QsMYNMpPNtmyTeW\",\"NP2RxM3eBd3drnDwP\",\"eKvCaeEv9YY5KGTGm\",\"YfJoYSimdDn53JfxN\",\"XEjiqMFvDTLTo2X9G\",\"xPynwaFupMBSFCbyf\",\"szQg8dxKNNre3v3Jk\",\"ZLFXbWKatzAEm3kwA\",\"Yp7uvStL97cC9fKkY\",\"6LbPw9yW6HHDfn8B8\",\"T6iBEE2jp7f7iEF2P\",\"FEuFM9HT5KgnYhhag\",\"iHENrpKJoosvcHNie\",\"KEmTti9Tza8A2FLQW\",\"NrRa4TS6uZR9xuXRt\",\"dQd664XYR6QKHFvHW\",\"R646K7Lr4tPPuyLor\",\"Nb6LYPoQP6KJZt8mz\",\"PPhq9DcoWd4auHM4s\",\"iojEnnY9FsMfYzp6f\",\"JKbEBybAsiKrmcqof\",\"GC9LB7vyQwSrQXoqt\",\"jWbd7SYDzLPjc9EDh\",\"Zk7zYsonf4TQ6d27R\",\"sKfrD9gjCDHuqLzSk\",\"SgPjF69J25jT3dn4X\",\"sbme4fRJjjBjYXRbY\",\"wbqfdWhKm9HbSk9s4\",\"66a9xX73nmTEuKs9k\",\"FiaTpm7ehfDv43wSG\",\"FER7nKDMbKtYYpPni\",\"hSrFWemiugfHeL9Fm\",\"H9KZi2cjt4FwH7qog\",\"tAF9Gf6PiGogbZuWs\",\"u5u2YpHXiNgzDNJdX\",\"mxX4rH5ELYkdZ2Mbw\",\"XrqNzJ2FRG8HnGiR6\",\"ZpLEmGnaRkQxf8Hfi\",\"CyzskHGsC6WSmYrLu\",\"XbxHXmh5ZmRN2gw3K\",\"zMrNuQsBHWMJtaEhM\",\"9pzFiFK3ANLjQfnr2\",\"YZL9ec49hQdqcwu2j\",\"Cg3LKtEAJpsrdWroG\",\"9Ly8afdtofp8DXzrt\",\"FgMe2gzbxog9WzaRr\",\"iYXdNw7tKcgA3QwBX\",\"dzS6WBTMHyFEag6Fp\",\"AYZrBpxmaHxq9th3T\",\"Fk9kLwoG4Brf4KsKf\",\"mvJBakQ35CWAnbbEZ\",\"YmQb9Mo4Xcg2vzgbn\",\"C9LKGu2g5hSijvDzA\",\"uw8E83imJYpQiiPpP\",\"KypQdzThzogKXwkXE\",\"Wpn95NqWxncQrwNgz\",\"NzbRqGWspQnWMoDrF\",\"5PaQgfQznXjaF9e6F\",\"FxbTzThBiTnRzfirA\",\"3LiSLdtN58n46NEqg\",\"T6Rm8mREPMZSftzrC\",\"M2gFMJkocQSY6bsFR\",\"LQxof8pGabGuWP7Gn\",\"GzbDheZQHNBHzPrri\",\"Qmb8nsFJTyRrNyQ5u\",\"bur3yQ8s34zqKGEro\",\"JiSpvq6C7azQEmENc\",\"sHjfbGQGLHE6JR6qu\",\"7ajSwbNMNp9ggPewT\",\"hRfdHT8bWztZuCqzi\",\"s4wiaAdvGqgFHqLc8\",\"u5jLXaWAKo7K4JvTR\",\"DTyNcDkiScCjgJt28\",\"JZQyDRhYyEti528yy\",\"Qp3LB3TcLgoiJSFCc\",\"bPhkDcd22h6sE2n8v\",\"K6MfKMytoJJuSGewP\",\"eHcgvkTGsH7ZziqBo\",\"u94AhAdwabXgtbyLm\",\"obkXHqRsxLmBajuwb\",\"GJmKcqu7xppQyBaTt\",\"jWrysbS3AqiQN8rmo\",\"AasGs8AeX9Lcb9xJn\",\"sejruFKbRzhAjgwcJ\",\"rrSC943cCKNG48sH4\",\"ecytnKJxjCPk8Kbif\",\"DTDokqAqTpqCsqPMe\",\"hs8WbxhNtYBiqEj9C\",\"hZ2JDAEG2P5rMLWEW\",\"9d3kzEdSSkpcmq77A\",\"M8dQuMrEpP8Hc3tHN\",\"cdXmwjupCXSvJTSNo\",\"HqmxnQJM66Y57twhn\",\"WihjZ5iusPAPKcsr5\",\"Afnps7TJQuS9sipMb\",\"syRNbbPdLCGXbH2Gy\",\"hPMgnPPjNSfMkH46u\",\"Aktq8nYaqfu57u8p7\",\"9ocQEpWQddormqJo6\",\"TCvpT4EPb8qNssNB7\",\"s2Y76rR2h2fPKibsK\",\"ey3CASd6Je5LEJzfB\",\"BdnE4RS5puoxo92mA\",\"PTDFuxAzou7W6asWt\",\"sDRY37TfoncsA2FSR\",\"9NcZ23yufhtou68dT\",\"pQwhNKiCne4gEZgcn\",\"zBk2cwJ9SLAhFuM3K\",\"5CsHudxuDESxmjTPW\",\"MMrsg6HXaBN7Whg6q\",\"gKnWjDjwrJh7MK2df\",\"8PwfYqoDQFThzNtvf\",\"2xpSZZC6qAxYaNMpf\",\"Mtbjs2R65YnswKuw2\",\"Nv8HhfMn2Rddq6Bei\",\"AQSqD9oNv2uPfxZCR\",\"FGEeCTorXbX3WvjFW\",\"8BFSTCnoe2QggN64c\",\"d8qtzoLB264iP8tdY\",\"Dq24MSpogRmq6L4hX\",\"FRN2W8RYpJ6GPhgRy\",\"gpGXTvjS2HrY9Skq5\",\"b7yQWr6eJFxYTmt3j\",\"9HPB28hBoTnZnspQE\",\"PBnvAuiKXwjqjKG33\",\"yXGiiSAR5nBHnH3yr\",\"PmRyaLmhAF4MMLBtM\",\"dYPkStFnLvAMsHSzZ\",\"d9LBRxvADNBB5QJMB\",\"aYemFjcSRyv7T76h8\",\"Ne8mK9DDHG8TRkoxG\",\"TFRbA7nkidNkBB5uu\",\"QrGnkbEeTo45YwRHy\",\"wYR7GAr2STaYrFabh\",\"gbGzZz5Yq5hT357v8\",\"5QN8R22z43SrwoHDz\",\"YZsZjfvd3PnLhDJrR\",\"B4y8aoyXJtskYPFEL\",\"fGvJRtjbJFJJZLCnW\",\"qaPjAANdnxFnWfj5d\",\"LWCzZ8mb8gwrRNGfq\",\"rhS8qXRjZcpDXkwnE\",\"rF97GDLqCgynr7BaD\",\"mw9464S5dnenqzvpm\",\"B4LpueSJhLDYMEQAW\",\"acFDzp9EJzHg8c2rD\",\"vAbK8sCfKyFC78HYg\",\"r83jJeskFETo3RLhZ\",\"o2Q8uM5DwJnSRmerd\",\"M4vq8ATaS9Jg5X7iP\",\"5H6WybGSZcsxZnLAW\",\"5jC6kt3SXoABZBwsY\",\"FT2wBacm3JxrYmZDW\",\"QWjsXnLaJ7xfL3Amq\",\"fMp8sPsKSECdfgF9j\",\"NJqamrQSnhuYcGL2s\",\"BrTDhPJcACL2bsrpJ\",\"4sSXLSBZDxK2Swoo7\",\"DjPJydd2cAviPyDjJ\",\"cz3wdxxPWoedzT3LS\",\"QN4FPwhiak7Pf8kn6\",\"XaLb6P8xu4JH7qooB\",\"PKu9i6fmR67WGCgad\",\"E45zy9qvm9DeJhDWL\",\"rQA9SE8nuwFueaHsR\",\"N2ar5QmkbP9aFYop9\",\"H469XosMjfNu8Fop7\",\"4Lwjr34ypKNQNQCar\",\"SjPPNc7xzsHhmiBdG\",\"acENs2fSF9d7hkTZx\",\"w3QDkmjZj2dAFDsjq\",\"AwXQLqnTYzcCQrnqQ\",\"NioGGZL9KCn5Ln96t\",\"EE6qCDCRphjXXdE3n\",\"FGYBMbExbwHLD2Wdn\",\"dCHJHgKdWNMGaAA7W\",\"F8dA24AosSC8XXb7D\",\"qRCzNXxJtEwCEHnCq\",\"xT2YiBTkgtZ9t6XPA\",\"4akHBgnDEDj3Rkv5n\",\"DhfJpC3Y72teNfiKE\",\"XYwCvWPkjJu4Zn5Qu\",\"Wi4H6ayKsNDWWQCG5\",\"TWhcGs8Tpt3Gua5Wi\",\"7DXJ3mvKMHHqBLt92\",\"q8QGySvjPML3PWtw7\",\"ta3DbDAhs5SZMzQYL\",\"htXCitorobtqYymjN\",\"Hu4GorJ4NSqYP9Qfh\",\"ZAGj4NWbX2KaHLWGW\",\"CTW3MRyc4wNkcjGZQ\",\"7HAL7H6NJmc4NC8Q5\",\"3SgSNoAB3sxaYeT3w\",\"kJMAAWPWEG6qFouEh\",\"qjd7Y3B7nNxdx5PgM\",\"i4dQDnvu65fkvNpCu\",\"vFxjNmdwGWXmkxq5X\"],\"total\":307},\"flags\":0},\"summary\":\"Given a letter and a list of words, return whether the letter does not appear in any of the words.\\n\\nExamples\\nforbidden_letter(\\\"r\\\", [\\\"rock\\\", \\\"paper\\\", \\\"scissors\\\"]) ➞ False\\n\\nforbidden_letter(\\\"a\\\", [\\\"spoon\\\", \\\"fork\\\", \\\"knife\\\"]) ➞ True\\n\\nforbidden_letter(\\\"m\\\", []) ➞ True\\n\\nNotes\\nAll inputs given will be in lowercase.\\nYou will always be given a forbidden letter, but there\",\"tags\":[\"arrays\",\"strings\",\"loops\",\"validation\"],\"timestamp\":{\"$date\":1611521357115},\"title\":\"The Forbidden Letter\",\"family\":[{\"_id\":\"cdQxvCFqAsAYQcpFr\",\"language\":\"cpp\"},{\"_id\":\"BMzs2RZDgFvyLWn29\",\"language\":\"java\"},{\"_id\":\"AhFCvDdQeA7TnKSqe\",\"language\":\"javascript\"},{\"_id\":\"jW56ujq2Xb4fyknoh\",\"language\":\"php\"},{\"_id\":\"pfuxt3J2p2tph3LJQ\",\"language\":\"python3\"},{\"_id\":\"DFxTwaeLpC6ddwmPN\",\"language\":\"ruby\"}]}}"]