a["{\"msg\":\"result\",\"id\":\"928\",\"result\":{\"_id\":\"SgKy45GqofsiDDeNs\",\"author\":\"Alessandro Manicone\",\"authorId\":\"AasGs8AeX9Lcb9xJn\",\"code\":\"import re\\n\\npattern = \\\"yourregularexpressionhere\\\"\",\"difficulty\":1.46524064171123,\"familyId\":\"k2ZKxxCAFTk6Hguhm\",\"instructions\":\"By default **quantifiers** like `*` and `+` are \\\"greedy\\\", meaning that they try to match as many characters as possible. Using `?` after the quantifier makes the quantifier \\\"lazy\\\": meaning that it will stop as soon as it finds a match.\\n```\\ntxt = \\\"1232 2133424 809890 548\\\"\\nre.findall(\\\".+\\\\s\\\", txt) ➞ [\\\"1232 2133424 809890 \\\"]\\nre.findall(\\\".+?\\\\s\\\", txt) ➞ [\\\"1232 \\\", \\\"2133424 \\\", \\\"809890 \\\"]\\n```\\n\\nWrite a **regular expression** to find all HTML comments in the text. You must use lazy quantifiers in your expression.\\n\\n```\\ntxt = \\\"... <!-- My -- comment test --> ..  <!----> .. \\\"\\npattern = \\\"yourregularexpressionhere\\\"\\n\\nre.findall(pattern, txt) ➞ [\\\"<!-- My -- comment test -->\\\", \\\"<!---->\\\"]\\n```\\n\\n### Notes\\n- HTML comments are formatted `<!--this is an HTML comment-->`.\\n- You **don't** need to write a function, just the pattern.\\n- Do **not** remove `import re` from the code.\\n- Find more info on RegEx and quantifiers in **Resources**.\\n- You can find all the challenges of this series in my [Basic RegEx](https://edabit.com/collection/8PEq2azWDtAZWPFe2) collection.\",\"isHidden\":false,\"lab\":\"txt = '... <!-- My -- comment test --> ..  <!----> .. '\\n\\nTest.assert_equals(any(i in pattern for i in ['+?', '*?', '}?']), True, 'You must use at least one lazy quantifier in your expression')\\nTest.assert_equals(re.findall(pattern, txt), ['<!-- My -- comment test -->', '<!---->'])\\n\\n# Note from the original:\\n# Credits to https://javascript.info/regexp-greedy-and-lazy\\n\\n# Translated from JavaScript.\\n# The RegEx series was originally posted by Isaac Pak.\",\"language\":\"python3\",\"summary\":\"By default quantifiers like * and + are \\\"greedy\\\", meaning that they try to match as many characters as possible. Using ? after the quantifier makes the quantifier \\\"lazy\\\": meaning that it will stop as soon as it finds a match.\\ntxt = \\\"1232 2133424 809890 548\\\"\\nre.findall(\\\".+\\\\s\\\", txt) ➞ [\\\"1232 2133424 809890 \\\"]\\nre.findall(\\\".+?\\\\s\\\", txt) ➞ [\\\"1232 \\\", \\\"2133424 \\\", \\\"809\",\"tags\":[\"regex\"],\"timestamp\":{\"$date\":1587105300148},\"title\":\"RegEx XIX: Greedy vs Lazy Quantifiers\",\"stats\":{\"completed\":{\"total\":239,\"ratings\":[1,1,1,1,1,1,1,0,2,1,1,1,2,4,1,1,1,1,2,0,2,2,2,1,2,2,1,1,2,0,2,1,1,1,2,2,2,0,1,2,2,5,2,0,2,2,0,1,2,1,1,2,1,2,2,2,2,2,1,0,0,1,2,1,2,1,0,2,2,3,2,2,1,0,3,1,4,2,1,2,2,1,2,2,0,2,2,3,2,1,1,2,2,2,1,0,2,2,2,1,1,1,1,0,1,1,1,0,1,2,0,0,1,1,2,0,4,3,2,1,2,2,1,2,2,3,0,1,1,2,2,1,1,5,1,1,2,0,2,1,2,1,2,2,0,1,2,2,1,1,2,2,2,2,2,1,2,0,2,2,1,2,0,1,2,2,2,2,1,2,2,1,2,0,1,2,2,2,1,3,1,0,2,0,1,2,2],\"rators\":[\"AasGs8AeX9Lcb9xJn\",\"tAF9Gf6PiGogbZuWs\",\"HF28xZKSLM9wEuqNg\",\"bMEg2eSZtsAcT7ZmJ\",\"aEm3Wvj2rFYRL8Lrb\",\"KdNDysEsy2TW5QRJ2\",\"DEDniTrstQYGounXT\",\"poqx2psfWnEswCdYB\",\"pXNFJBaby2F7Jz7Me\",\"8JyqsSbN2FJXPr3cw\",\"Yp7uvStL97cC9fKkY\",\"2QGRoQn2dRq3scu7k\",\"Jqk2uJZZxEv5wZFze\",\"awxTyavq6BNM86LTD\",\"Fk9kLwoG4Brf4KsKf\",\"mkcf3C3NMxhYZuiLM\",\"5L8os7ETqmcJooKCY\",\"Ypa79Yqcahyjv9Smy\",\"AGMQqooexrFXgMnET\",\"FDWEEwwAtxD7SkqBD\",\"t6C62cxXdrWbqKFrN\",\"jNvegJWCk5HCtEMbK\",\"6c4xjEdFxdYw5xGrt\",\"dHZqT6h4JMwk5fPC8\",\"GM2X83qnuLXTHe5zA\",\"xzZQDmPgjhkorhA5n\",\"2fxapKr8XGdNeaKi2\",\"HQxp7NcdvF92G7bYS\",\"KRmxvA4mWgfKvHmYN\",\"KpHrC7WPEojnzgEtz\",\"NPHbTDFiEfTMjEXh4\",\"NsEMoXJ4nfEMtoCn8\",\"aRqQ42J5zqCmBNd8w\",\"ZD5sXcRETQGwPx5fK\",\"sz8ufn9i8zeiGWpAy\",\"YRstQuthRkFeBiXug\",\"J5T8gZqiZXFuFDTQ7\",\"wT5gGgvjKc5wz59AQ\",\"zg8GmMSP2LkHBtAzy\",\"jNE5AHcJQWXz7efuP\",\"8PwfYqoDQFThzNtvf\",\"RcFJfYquW9quJDnp5\",\"aP7JkkYer28YWrPvC\",\"YsAz93yZw8KKPupKv\",\"CMuhZyDkaZXX4pvTD\",\"gb9rvGus2Jv7bjZSs\",\"efcsSdKgupNnf9DKD\",\"pWD2YC5s4YRCxFc2i\",\"4eNkGG3T9iBqeC7Qs\",\"PXAcsKkssS2yLyDv2\",\"tSFYadMLQgCqx3mnM\",\"2innwjWqxJHo4eRGh\",\"hnyhBFWwNCz9mDfSi\",\"a777e8chPvJkY3tKa\",\"586FdBhazpwJfnRYR\",\"ahk2qiXKJA753wAJk\",\"W7v82rNuLhAgQLkyh\",\"di2hhADLx59Bj4ewM\",\"XrqNzJ2FRG8HnGiR6\",\"8BFSTCnoe2QggN64c\",\"nfXGHENb5md7m355s\",\"NRCH4eiebS7LBjSCa\",\"yr822PZmmiDDenxpB\",\"jBR47vA7HwAZqp4QA\",\"EjbDDFRECrzQDkzrX\",\"FzxTj4GuujhwpZM7y\",\"ZJYMYPmyQAJ5B863h\",\"E8TMSMSamEbBtf9Lo\",\"pkQBaSzukotPEXmrD\",\"c3nsyfKKeQGxp6sKb\",\"vGRSrdg2F3NKqEP5e\",\"vyaFTJDKChqYfczdu\",\"2ptN2mhjFwFcHyPZd\",\"3cF6NXq3ZEwdkgSjb\",\"H4abACFDH5t8CnnyH\",\"JcjukWQ3srKtLyNsG\",\"yJmwiykSNfLv9NqJ2\",\"cnmj8mAbLcMnKaqLS\",\"Pe8vWpDHRuH9nSGKW\",\"AtoBC3LqE89p3xhYC\",\"FEYpu9RWysAgW3XnP\",\"iojEnnY9FsMfYzp6f\",\"aCNWav8S8Try9RkC6\",\"7tbtTx6uxePv6eQwP\",\"R4SjTgDnpigJYDLyL\",\"BtdZezHfckxRLm7xR\",\"YcCLwitFMAEJSnxAW\",\"KZvaNQrXBFJ9bKLYx\",\"QJB6Eb625qYxMp8kv\",\"XSt47ad5D5LLZSupD\",\"yjtdwc2AC4jA2RWtn\",\"JS3hNM3XXkxPdg3yk\",\"n2BRY9X8899dcG8Bw\",\"s6qiPXptvyxxEy3vm\",\"Tpc5NKFiQyz3NTZau\",\"PTDFuxAzou7W6asWt\",\"MCw7uAcoWcSTBTmr3\",\"Pw3gpBkyTg8e6oAsa\",\"HqmxnQJM66Y57twhn\",\"oBcs8GLX2ZFLXQy8y\",\"4597PD5mbXzHa3vdi\",\"Ge3xgZrEGB58ofBPT\",\"M8dQuMrEpP8Hc3tHN\",\"ACEZh39brWjdGkZXb\",\"pscBduNyf8TDHe2Km\",\"HnJuYrgwLJwXtboE3\",\"3LiSLdtN58n46NEqg\",\"8WpvgSbQciTQWdd8T\",\"RehJGBFS6CYiWdjZx\",\"mmt7jwqbmSjzRSvqh\",\"BqT6sMHBAjkw4hjG6\",\"cxABox46qWvJRyidE\",\"NuqGt5u3s7vJ7HBGR\",\"8zQnyekbSwzhoJymu\",\"pmgFEciNrd3ES9tuu\",\"KLmLKaJPfsYxp42p2\",\"ji5f27FPz4wRRF6Ls\",\"mBtSsKTHdQniYAfsZ\",\"TPhfpB5tzQWSSn67n\",\"FvFhg2wELM3SCZDZQ\",\"tpxMgkGSHwBjS95Ta\",\"kNrnnMxhFZztMTBAX\",\"m6TC9gshrwufWqAYn\",\"oHbErJxjYJhD66d5w\",\"5Z4o2pWDzmbpw4JHJ\",\"7K2GEb5TZRtSpyyGS\",\"QRv96jmNaYsWkxQEG\",\"wRttWTM59y8m5mx7x\",\"qD2LrwaDrSdiybLKY\",\"QNb9Rx8BJgCWn3qgR\",\"Kh3Pc2ZRusurLaMyP\",\"7eYSYKpM4i2N4NZ92\",\"rrSC943cCKNG48sH4\",\"2QziknsznNeMPRh3g\",\"uN5t57RETi5y2z5W8\",\"c2u7qfdaYxcyuydtu\",\"dj5AyG5fWP8FdsSmZ\",\"jSaW4kdeAAGoLxcuP\",\"d8qtzoLB264iP8tdY\",\"incG8tH2dwThHg35f\",\"RGMbFMZXJr7DhcAJy\",\"uX3EL4Qha99wBkozM\",\"6MjSiiBLPcvXbXcaZ\",\"cZccqzRQ9GgjQF6Az\",\"5XiuAqicKD4hBdu63\",\"dQK2T76aHcRJkrbKB\",\"4fjSgcqhQQZM2ZFRP\",\"QJjb5YhFjNf4M4pmY\",\"DpnYcMphntjsQ96qg\",\"kAkLAF9T5McSxXJCT\",\"6xTu4r8NMczBFvmtz\",\"FRv5HToEaZ6iRM7T5\",\"HuNF3xTBzmatyGSTm\",\"XMYbe9cezEyMp2QMo\",\"ANbSYXiYsp4addoDq\",\"iPun4dvt6pY5g7Qjr\",\"o4ixjQGSaYqA2JoM4\",\"Y6w9WxXzRweSiy3Ls\",\"StNu7DPyTgEStZsMY\",\"m9Dj3WvWDwiu73PRh\",\"utTuvGdmu2sBHWBhQ\",\"5hQnRWiKkhgKJXNMP\",\"GGdmhAvxXhqhhibJN\",\"5S9nX4rKsnCcnv4Cz\",\"Ds7L5bksw2QRHjrKL\",\"yod5YhKtPqw2GfG9B\",\"HTv3FdeB6pYK7ZKJa\",\"CTKmXtrqDYqJBnuy8\",\"bvmTE46bfcM4ogj34\",\"qAby4AWXmTNeusvg3\",\"QNC6ErTx4ca2H3rD7\",\"srJ34BaybkQh3qRkM\",\"AFfw7cGg83uYk2Miy\",\"qNszsXx28cTxvGSNj\",\"s7PAdYARQvr8scq84\",\"BrTDhPJcACL2bsrpJ\",\"w3QDkmjZj2dAFDsjq\",\"JwkwCHcXthnGDsdFr\",\"c2q7mY39z5JPEMCaM\",\"mvJBakQ35CWAnbbEZ\",\"2PufnQcsHsfymufX3\",\"X4rzfxGgxx6CS7Bpz\",\"sbJcFfQjQ59Wfg4Cd\",\"CHvzhtXnv8HTbPQ56\",\"PC3pLs36zNzpRDSuE\",\"PH32cNxBjrK4a28sn\",\"hR7GMiqGap4CzEWSy\",\"97DthwdtrBLm2y2Yj\",\"pduNK68oazqQTtbLp\",\"4TmgHkn5vqyHK3sYC\",\"T6Rm8mREPMZSftzrC\",\"rCrbqMiaGPgHYTNxu\",\"u5u2YpHXiNgzDNJdX\",\"MKT7khMBGXzA22ykf\",\"GTKsdeEihE636Le9i\",\"yAouD3PxzED8a4gap\",\"ag8tcfPvJZWpRnwet\",\"MHiQx9E8rPgzJfsJy\",\"DdHnWE8gjciwCXhSL\",\"hpT9yYe5R45poHrYR\",\"Qyfyyw6oC4EHAndzo\",\"4Lwjr34ypKNQNQCar\",\"RfbjShbg8jmhyNtJh\",\"5QN8R22z43SrwoHDz\",\"Wi4H6ayKsNDWWQCG5\",\"bNENiqqEDxM5a5JBf\",\"ruzwBPphPDRgLXdnP\",\"wrL4iX2CCSqDCCty3\",\"CwLmfzq983yghzNdC\",\"8uiLiJcmWxWe6qw65\"],\"quality\":[3,5,4,4,5,5,5,2,5,5,5,5,5,5,5,4,5,5,5,4,5,5,5,5,5,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":4.678571428571429,\"family\":[{\"_id\":\"BdJWELgsSr5nktqAG\",\"language\":\"javascript\"},{\"_id\":\"SgKy45GqofsiDDeNs\",\"language\":\"python3\"}]}}"]