a["{\"msg\":\"result\",\"id\":\"689\",\"result\":{\"_id\":\"fA99WMH2xBndowm5a\",\"author\":\"bangyen\",\"authorId\":\"yv7c4H2jimSKHEjtG\",\"code\":\"x = # Write your regular expression here\",\"difficulty\":1.1164021164021165,\"familyId\":\"ZRKgMhxn5keeuaRQg\",\"instructions\":\"Write a **regular expression** that matches a string if and only if it is a **valid zip code**.\\n\\n### Examples\\n```python\\n\\\"32554\\\" ➞ True\\n\\n\\\"92 342\\\" ➞ False\\n# Invalid: contains a whitespace\\n\\n\\\"9@342\\\" ➞ False\\n# Invalid: contains a non-numeric character\\n\\n\\\"923444\\\" ➞ False\\n# Invalid: length is not 5\\n```\\n\\n### Notes\\n- Zipcodes must be 5 digits long exactly and only contain numbers.\\n- Not allowed: non-numeric characters or whitespaces.\\n- This challenge is designed to use **Regex only**.\",\"isHidden\":false,\"lab\":\"import re\\n\\ndef validate(s):\\n\\treturn bool(re.match(x, s))\\n\\nTest.assert_equals(validate(\\\"81442\\\"), True, \\\"92345 is a valid zip.\\\")\\nTest.assert_equals(validate(\\\"81442\\\"), True, \\\"81442 is a valid zip.\\\")\\nTest.assert_equals(validate(\\\"33789\\\"), True, \\\"33789 is a valid zip.\\\")\\nTest.assert_equals(validate(\\\"42531\\\"), True, \\\"42531 is a valid zip.\\\")\\nTest.assert_equals(validate(\\\"9a345\\\"), False, \\\"9a345 contains a letter.\\\")\\nTest.assert_equals(validate(\\\"%2345\\\"), False, \\\"%2345 contains a special character.\\\")\\nTest.assert_equals(validate(\\\"933345\\\"), False, \\\"933345 is too long.\\\")\\nTest.assert_equals(validate(\\\"2345\\\"), False, \\\"2345 is too short.\\\")\\nTest.assert_equals(validate(\\\" 93345\\\"), False, \\\"No leading whitespaces.\\\")\\nTest.assert_equals(validate(\\\"23455 \\\"), False, \\\"No trailing whitespaces.\\\")\\nTest.assert_equals(validate(\\\"23 455\\\"), False, \\\"No middle whitespaces.\\\")\",\"language\":\"python3\",\"summary\":\"Write a regular expression that matches a string if and only if it is a valid zip code.\\n\\nExamples\\n\\\"32554\\\" ➞ True\\n\\n\\\"92 342\\\" ➞ False\\nInvalid: contains a whitespace\\n\\n\\\"9@342\\\" ➞ False\\nInvalid: contains a non-numeric character\\n\\n\\\"923444\\\" ➞ False\\nInvalid: length is not 5\\n\\nNotes\\nZipcodes must be 5 digits long exactly and only contain numbers.\\nNot allowed: non-numeric c\",\"tags\":[\"strings\",\"regex\"],\"timestamp\":{\"$date\":1591588101635},\"title\":\"Regex Series: 5-Digit Zip Code\",\"stats\":{\"completed\":{\"total\":230,\"ratings\":[1,1,1,1,1,1,1,1,1,0,0,1,2,1,1,1,1,1,2,0,5,1,2,1,1,1,1,0,0,1,0,1,1,1,0,2,2,1,0,1,2,5,0,2,1,1,2,1,0,0,1,1,2,1,0,1,0,1,1,0,1,3,2,3,1,1,0,1,2,0,2,1,2,0,1,0,0,1,2,1,1,0,2,0,0,1,2,3,2,0,1,1,1,0,0,1,0,2,2,1,0,2,1,0,2,1,1,1,2,1,0,2,1,2,2,1,1,1,1,0,2,0,1,1,2,0,3,2,1,0,1,3,1,1,1,1,1,1,1,1,1,1,1,2,0,1,1,1,2,1,1,4,2,1,1,1,1,0,1,1,1,1,0,3,0,2,5,1,3,1,2,1,1,1,1,0,1,1,1,2,0,0,1,1,1,0,0,1,2],\"rators\":[\"yv7c4H2jimSKHEjtG\",\"ckHFA5y8pkrXbsevA\",\"H4abACFDH5t8CnnyH\",\"DEDniTrstQYGounXT\",\"aRqQ42J5zqCmBNd8w\",\"8BFSTCnoe2QggN64c\",\"tAF9Gf6PiGogbZuWs\",\"5HCu9Ydd86QgHDRNP\",\"zAppXL8MZJiNAStc5\",\"LDfAjJ6TbJza7YRSR\",\"3cF6NXq3ZEwdkgSjb\",\"Yp7uvStL97cC9fKkY\",\"dXe9WTsXNaEAPpgfd\",\"d7mpjCaKAn2m3jLjA\",\"586FdBhazpwJfnRYR\",\"kMi9TRoqj8QptxnBY\",\"zd9FLSzsGz3evKafy\",\"REw28NTdS7mDRygr7\",\"vTF7zJeBHNGdTMrrk\",\"9pzFiFK3ANLjQfnr2\",\"AasGs8AeX9Lcb9xJn\",\"XrqNzJ2FRG8HnGiR6\",\"NzbRqGWspQnWMoDrF\",\"HF28xZKSLM9wEuqNg\",\"MKT7khMBGXzA22ykf\",\"gb9rvGus2Jv7bjZSs\",\"Y2Q3GectGBwvtCtRj\",\"sbJcFfQjQ59Wfg4Cd\",\"rgvAJFwfCeYoYnFTK\",\"64ZBqm6Z6S3wgXaF6\",\"cnmj8mAbLcMnKaqLS\",\"ffA5qAQ4Lctb8mb5f\",\"2ptN2mhjFwFcHyPZd\",\"PhceyfmFntJcn5Fhf\",\"T7jmJ2AaAgW5uZXif\",\"PXjdGHcGnwYw9kWti\",\"J5T8gZqiZXFuFDTQ7\",\"2QGRoQn2dRq3scu7k\",\"aMAL77Dw2YC6SHhTn\",\"a777e8chPvJkY3tKa\",\"nRLYKDFncBtX6ESEj\",\"mDWNyaaQ9hvPCRzSd\",\"aEm3Wvj2rFYRL8Lrb\",\"PAzNgJF54C2mYPkR9\",\"jNvegJWCk5HCtEMbK\",\"YA7SDhpgEtsqynvNL\",\"YcCLwitFMAEJSnxAW\",\"5AHe67SapnPQeESpv\",\"PXAcsKkssS2yLyDv2\",\"sHjfbGQGLHE6JR6qu\",\"p5EN3tadeCfPkW3CB\",\"syRNbbPdLCGXbH2Gy\",\"yNjkHfHESBAnCssPB\",\"23KndF374EHHZNbL8\",\"pDvFWMCD9fQwoBPcu\",\"XpRh7W7jGst278HTG\",\"oRdsdmmPpzfSK4tDq\",\"LjoNTyGEMfBpMHHus\",\"Cuy7McJ5y8BkXRRk9\",\"FEYpu9RWysAgW3XnP\",\"R4SjTgDnpigJYDLyL\",\"3LiSLdtN58n46NEqg\",\"N2wnZXkhDH86mgjQ8\",\"9CoqdidjM9KbeKnHY\",\"Pe8vWpDHRuH9nSGKW\",\"8JyqsSbN2FJXPr3cw\",\"hnyhBFWwNCz9mDfSi\",\"KdNDysEsy2TW5QRJ2\",\"GGdmhAvxXhqhhibJN\",\"kNrnnMxhFZztMTBAX\",\"DJdsqmTeAGDwrgYoZ\",\"KdYQN3KAT2DyTzT2a\",\"jkys684AAfPRxrYaD\",\"Yp4Jtxj7pHqZjheN7\",\"HqmxnQJM66Y57twhn\",\"oBcs8GLX2ZFLXQy8y\",\"mxX4rH5ELYkdZ2Mbw\",\"dik7wis3hBJJBkYwK\",\"nfXGHENb5md7m355s\",\"8vWWL8Tx2yDai4ydm\",\"SkQcb2sRn4as5KpnN\",\"aKzYNPqBqb3J3ZgyD\",\"nFbmNzMQ38TncmfQX\",\"XSt47ad5D5LLZSupD\",\"yjtdwc2AC4jA2RWtn\",\"ta5CrWnBCRusD2WMo\",\"JS3hNM3XXkxPdg3yk\",\"RehJGBFS6CYiWdjZx\",\"S6ipW8Xzds8QDszn9\",\"g4NCSxxHqHCGMpWwT\",\"iBTooWAGe7dD9svva\",\"ZrXkPD45QRS4oXJmA\",\"w2HhxvSLmDhaGCAjE\",\"GoqSXitFdh68aBXtW\",\"ji5f27FPz4wRRF6Ls\",\"M8dQuMrEpP8Hc3tHN\",\"zZ43WzxvFu7kaTKZ6\",\"PTDFuxAzou7W6asWt\",\"4fhjJBvLBWh6QeSih\",\"PBRP82X75qGR8T6Xb\",\"qNvnJkCzNppaNGzk4\",\"4Np3uu6Jj67L2CxiR\",\"EM54GFtAyAEdmqxNe\",\"KakQgfNR6m94AF79b\",\"KLmLKaJPfsYxp42p2\",\"C9LKGu2g5hSijvDzA\",\"FK2fEQ3F6DD3buSLJ\",\"Tpc5NKFiQyz3NTZau\",\"pn7FezrkZZCui7fkJ\",\"pJj86xc32Bs7Frxvi\",\"pduNK68oazqQTtbLp\",\"8zQnyekbSwzhoJymu\",\"mBtSsKTHdQniYAfsZ\",\"ekQh3jzgGLsEMbKo3\",\"d8qtzoLB264iP8tdY\",\"Q9afpRu3u8zuWuzLQ\",\"DYDJTyGgKFnBRLm2r\",\"j57Xos8wYZWcwqMrt\",\"8WpvgSbQciTQWdd8T\",\"PBn3fhAqsEqHEHq3E\",\"yTtSCvGPyYna6JuRC\",\"SgZ2t9xFuRqdJGofp\",\"tpxMgkGSHwBjS95Ta\",\"sqkcdpFqtr8Tg6S7j\",\"qD2LrwaDrSdiybLKY\",\"yod5YhKtPqw2GfG9B\",\"rxr3nwpDGDEkBJRgD\",\"o4ixjQGSaYqA2JoM4\",\"rrSC943cCKNG48sH4\",\"wRttWTM59y8m5mx7x\",\"Kh3Pc2ZRusurLaMyP\",\"7K2GEb5TZRtSpyyGS\",\"RGMbFMZXJr7DhcAJy\",\"cAP3n5NY64uoMwzRR\",\"g9FyJ8yeT9ic97Qp2\",\"uX3EL4Qha99wBkozM\",\"GqErHwe6rLZi8SRFL\",\"oyKcm3zqdy8Ko5P5d\",\"Fb2wehA7QgTFWry2x\",\"J3upzLHuEwXH7Z2hx\",\"EMJ6uvBZkie429gdg\",\"fTNQmMvTZhhiGBCMe\",\"ga7aTTEThzsELuC2j\",\"YRAzEBJoLvSaiPtYx\",\"dYPkStFnLvAMsHSzZ\",\"4fjSgcqhQQZM2ZFRP\",\"Jqk2uJZZxEv5wZFze\",\"CLypXaZksY99mpRCm\",\"oDN67zoApxcztnYdu\",\"FuYTQcDNjct58rqPa\",\"wjc4iejpErBhxWwHo\",\"4ArGCifHnsz8p525A\",\"5XiuAqicKD4hBdu63\",\"Wey76N8dEHS7AKN8v\",\"C2AfMipCicfD58WJ9\",\"iF4tdvn5sA9CM4T6T\",\"WdKdsgH9gXkKgCycx\",\"Fk9kLwoG4Brf4KsKf\",\"DpnYcMphntjsQ96qg\",\"DqNQn9Jsxcu5HijKE\",\"RnY25enEBE8T9P5GS\",\"5S9nX4rKsnCcnv4Cz\",\"pveK5gtGcm8k4wScM\",\"Lg4t6SEWgtYz4u7Cj\",\"buX4mCQhtXCfBjeno\",\"Ds7L5bksw2QRHjrKL\",\"utdj2v4ruJdN644DR\",\"qAby4AWXmTNeusvg3\",\"97mMkvdDxbhkQXNPp\",\"5hQnRWiKkhgKJXNMP\",\"srJ34BaybkQh3qRkM\",\"q9FfWNiMDKRiaCJ5j\",\"axdSNLZpiCDF8RS6n\",\"pCMhfoZ5c6eBuCqbp\",\"TmM3AN7g3fkh69ycj\",\"2HfNkb2SoqdyjKW3o\",\"pPpmP7xeJzGgK362R\",\"eYfPWvZwnJQkHbSTK\",\"LCuvvWMwiGuqTwNRi\",\"CTKmXtrqDYqJBnuy8\",\"7dQYiDeTcMztbGyso\",\"6Lfjkdspqw8m6A7Jk\",\"XD5nmvKQchKezPXhy\",\"AFfw7cGg83uYk2Miy\",\"bvmTE46bfcM4ogj34\",\"c7uBxu2rgY77H5d79\",\"CHvzhtXnv8HTbPQ56\",\"XujK3rHd3JcM9TLJy\",\"BJp2WkwLWGHHB5oQW\",\"c2q7mY39z5JPEMCaM\",\"CKHKhvJcq9jNMqrmd\",\"X4rzfxGgxx6CS7Bpz\",\"8uiLiJcmWxWe6qw65\",\"mvJBakQ35CWAnbbEZ\",\"9Ly8afdtofp8DXzrt\",\"9ivvGvJGvtQfigQaZ\",\"EfxwqhYdapX3dMQC2\",\"T6Rm8mREPMZSftzrC\",\"JKb5rhL6DKcCAypF9\",\"4TmgHkn5vqyHK3sYC\",\"PC3pLs36zNzpRDSuE\",\"NGvCPuMiAP3xrRLfB\",\"jkbavR2ATFJcpmo8M\",\"Afnps7TJQuS9sipMb\",\"8PwfYqoDQFThzNtvf\",\"u5u2YpHXiNgzDNJdX\",\"TCvpT4EPb8qNssNB7\",\"B4y8aoyXJtskYPFEL\",\"2E6jQWFmYiGsd3TrC\",\"qB6KSTYC6H2TQEQY6\",\"5QN8R22z43SrwoHDz\",\"FiaTpm7ehfDv43wSG\",\"zC8WrPp5BC6c2exrW\",\"pwWtbXEjzuvrhEGwt\",\"2MjzJ7yxh3eT3xbng\",\"Wi4H6ayKsNDWWQCG5\",\"GgQqni8TkbqEBGcsy\",\"sMcFMPkMJC4Kh6ymj\",\"FMyZPN6odEFtfuimF\"],\"quality\":[4,5,4,4,1,5,5,5,5,5,5,5,4,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,3,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"quality\":4.685714285714286,\"family\":[{\"_id\":\"zmyuLfHcbJeTef5yr\",\"language\":\"javascript\"},{\"_id\":\"fA99WMH2xBndowm5a\",\"language\":\"python3\"},{\"_id\":\"cHKC3yXdzmrRbmSD8\",\"language\":\"ruby\"}]}}"]