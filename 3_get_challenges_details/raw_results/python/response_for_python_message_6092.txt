a["{\"msg\":\"result\",\"id\":\"1757\",\"result\":{\"_id\":\"aifM22oGtRKShsFWB\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"def is_disarium(n):\\n\\t\",\"difficulty\":2.2950819672131146,\"quality\":4.526315789473684,\"familyId\":\"S4TyjyDfb7jkfiZib\",\"instructions\":\"A number is said to be Disarium if the **sum** of its *digits raised to their respective positions* is the number itself. Create a function that determines whether a number is a Disarium or not.\\n\\n### Examples\\n```\\nis_disarium(75) ➞ False\\n# 7^1 + 5^2 = 7 + 25 = 32\\n\\nis_disarium(135) ➞ True\\n# 1^1 + 3^2 + 5^3 = 1 + 9 + 125 = 135\\n\\nis_disarium(544) ➞ False\\n\\nis_disarium(518) ➞ True\\n\\nis_disarium(466) ➞ False\\n\\nis_disarium(8) ➞ True\\n```\\n\\n### Notes\\n- Position of the digit is not likely its index.\\n- You are expected to solve this challenge via **recursion**.\\n- You can check on the **Resources** tab for more details about recursion.\\n- An **iterative** version of this challenge can be found via this [link](https://edabit.com/challenge/yvJbdkmKHvCNtcZy9).\",\"isHidden\":false,\"lab\":\"from inspect import getsource\\nfrom re import findall, MULTILINE\\n\\ndef check_recursive(fn):\\n  try:\\n    src, n = getsource(fn), fn.__name__\\n    if n == '<lambda>': n = src.split('=')[0].strip()\\n    return len(findall(n, src, flags=MULTILINE)) > 1\\n  except OSError: return True\\n\\nTest.assert_not_equals(check_recursive(is_disarium), False, 'Recursion is required!')\\n\\nnum_vector, res_vector = [\\n  [6, 75, 135, 466, 372, 175, 1, 696, 876, 89, 518, 598],\\n  [True, False, True, False, False, True, True, False, False, True, True, True]\\n]\\nfor i, n in enumerate(num_vector): Test.assert_equals(is_disarium(n), res_vector[i])\",\"language\":\"python3\",\"summary\":\"A number is said to be Disarium if the sum of its digits raised to their respective positions is the number itself. Create a function that determines whether a number is a Disarium or not.\\n\\nExamples\\nis_disarium(75) ➞ False\\n7^1 + 5^2 = 7 + 25 = 32\\n\\nis_disarium(135) ➞ True\\n1^1 + 3^2 + 5^3 = 1 + 9 + 125 = 135\\n\\nis_disarium(544) ➞ False\\n\\nis_disarium(518) ➞ True\\n\\nis\",\"tags\":[\"recursion\",\"numbers\",\"math\",\"validation\"],\"timestamp\":{\"$date\":1601574267896},\"title\":\"Recursion: Disarium Number\",\"stats\":{\"completed\":{\"total\":84,\"ratings\":[4,4,4,4,4,4,5,1,3,4,4,2,2,5,1,0,3,3,2,2,2,0,0,2,2,1,3,2,3,1,2,1,4,2,2,0,2,2,0,3,2,2,3,3,2,3,3,2,2,2,3,0,2,2,0,3,2,3,1,2,3],\"quality\":[4,4,5,5,5,5,4,5,4,5,5,5,2,5,5,4,5,5,4],\"rators\":[\"a777e8chPvJkY3tKa\",\"8PwfYqoDQFThzNtvf\",\"aEm3Wvj2rFYRL8Lrb\",\"xn7uGNKeAwPEkP9oA\",\"97DthwdtrBLm2y2Yj\",\"gJYuGdkXEWWmGRLzu\",\"HcWTggqXwDszvGdWy\",\"oH5za8CuPrt4XyoKx\",\"5dHucvf2qBYyKim7X\",\"s5M5RvgqR9BhB9JoC\",\"7ws5HaSof5kkoRwTM\",\"WWPsHZrNr8YbMyNRP\",\"Af3Hd4h54XSBLcGSG\",\"mePSe5o7qpkYirqxx\",\"muEy8g86DNPDiMjay\",\"xhwYAyKDSRwbKAPMz\",\"oyKcm3zqdy8Ko5P5d\",\"yoYQqaY6GszuTkNSs\",\"HF28xZKSLM9wEuqNg\",\"Ecg4m7srYGgZsb4Ck\",\"8sNv5PTHa7XQ8bNqR\",\"iS5BrkGLzJyPK7nKt\",\"SGhPxX5bHGL8zZqtt\",\"w2HhxvSLmDhaGCAjE\",\"8JyqsSbN2FJXPr3cw\",\"9onLFjwWr6DqyRBJw\",\"hXoTNPPmJLzkZnkSX\",\"uZJqBoqeZRX3RncAR\",\"aCgnGzZfQhjxoPgo2\",\"4fhjJBvLBWh6QeSih\",\"rv8K92tsx9MBEcP5Z\",\"gb9rvGus2Jv7bjZSs\",\"GGprTwrkjuccmrQRg\",\"axdSNLZpiCDF8RS6n\",\"2gbjRpgc8A7pjgJEW\",\"cgfDEGKJdk3LgrPDp\",\"tkdRHAExhDq8ryDJT\",\"WPf3wuMaAipBActzR\",\"tBxCuY6XyuJZQrLuz\",\"aSfSdHw8Tv9G5owFY\",\"5rX3qPFdvRQ9G7xZQ\",\"MG9xJ7dm5LFzjz7Pz\",\"jnQxmhyd53govoQsT\",\"DDevhboRPEbQwcxun\",\"4RY3zj9C2t8GGefhi\",\"7amNEuZodjynhaDQq\",\"tXcqs5WDEoK3Gie7m\",\"Yp7uvStL97cC9fKkY\",\"DPi9QGLctq2y76KuE\",\"T2vhHPhRR96hRizq8\",\"gXTAie79kiw28tx5u\",\"XNmN6ztj36a7eChbD\",\"iojEnnY9FsMfYzp6f\",\"PytNZK9mNiRiZxPrm\",\"yjtdwc2AC4jA2RWtn\",\"QRv96jmNaYsWkxQEG\",\"yr822PZmmiDDenxpB\",\"J4H7HDHPhB8ZfcRfR\",\"BMEud9eeJnPDC8A2k\",\"srJ34BaybkQh3qRkM\",\"AasGs8AeX9Lcb9xJn\",\"oXJbZzDbT6N2qgqR3\",\"oBcs8GLX2ZFLXQy8y\",\"NojQykDfP7WjHckg4\",\"tAF9Gf6PiGogbZuWs\",\"HqmxnQJM66Y57twhn\",\"ZgQMihH697XCP2tv4\",\"MpfytGFYF77emJ3cT\",\"gKnWjDjwrJh7MK2df\",\"LcRuvM5CcbSmJ8ipK\",\"suArq5BbSy7gD6xri\",\"rhS8qXRjZcpDXkwnE\",\"d8qtzoLB264iP8tdY\",\"yod5YhKtPqw2GfG9B\",\"2PufnQcsHsfymufX3\"]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"mP5BLYHWyeiFpECud\",\"language\":\"cpp\"},{\"_id\":\"Mo8ErS2pcwNakKsAF\",\"language\":\"java\"},{\"_id\":\"3bMksFY5emJLvLJBW\",\"language\":\"javascript\"},{\"_id\":\"aifM22oGtRKShsFWB\",\"language\":\"python3\"},{\"_id\":\"WzHr7GAuB7E2tSzH4\",\"language\":\"ruby\"}]}}"]