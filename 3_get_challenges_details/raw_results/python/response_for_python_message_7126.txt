a["{\"msg\":\"result\",\"id\":\"2269\",\"result\":{\"_id\":\"ENxiMBnKzf5HQgin2\",\"author\":\"MyName\",\"authorId\":\"P7NmFbCJ5offXMRvB\",\"code\":\"def pascal_row(n):\\n\\t\",\"difficulty\":3.55,\"quality\":0,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"4uSMzcQTGwfDonwKq\",\"instructions\":\"Create a function that returns the _nth_ row of [Pascal's triangle](https://en.wikipedia.org/wiki/Pascal%27s_triangle):\\n\\n![Pascals triangle](https://edabit-challenges.s3.amazonaws.com/23050fcb53d6083d9e42043bebf2863fa9746043.svg)\\n\\n### Examples\\n```\\npascal_row(0) ➞ [1]\\n\\npascal_row(1) ➞ [1, 1]\\n\\npascal_row(5) ➞ [1, 5, 10, 10, 5, 1]\\n\\npascal_row(10) ➞ [1, 10, 45, 120, 210, 252, 210, 120, 45, 10, 1]\\n```\\n\\n### Notes\\nInput will include large numbers (the formula _n choose k_, or `n!/(k!*(n-k)!)` won't do).\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(pascal_row(0), [1])\\nTest.assert_equals(pascal_row(5), [1, 5, 10, 10, 5, 1])\\nTest.assert_equals(pascal_row(9), [1, 9, 36, 84, 126, 126, 84, 36, 9, 1])\\nTest.assert_equals(pascal_row(20), [1, 20, 190, 1140, 4845, 15504, 38760, 77520, 125970, 167960, 184756, 167960, 125970, 77520, 38760, 15504, 4845, 1140, 190, 20, 1])\\nTest.assert_equals(pascal_row(642)[612], 3187954943262492767965944791461619889708495417855200)\\nTest.assert_equals(pascal_row(911)[50], 79065015226695559806967654200364846833539899650758574533892362374816483041087103080)\\nTest.assert_equals(pascal_row(2034)[31], 350003193430231065126336346387514992318875419947096880858253500270304)\\nTest.assert_equals(pascal_row(1000)[20], 339482811302457603895512614793686020778700)\\nTest.assert_equals(pascal_row(5000)[578], 59734988282447606595996792879811164064653448495181635080634003127086697291153937165834301008489203192634538950488218564952763466834183431261339462767376660114827371659957840453096545185332335717952096118665816576074602633661151801211006173722334058175253960057950569120685591368028209909293341599033238824814020069503240693292897328920032662486519605521620690910224439668065825702889437720476954552803320423199594531583853915431436881097744902801757226804997095742493707431862841078626382978215988697008033412507731973500429747059547651369406577680425654752429432333917188117073454469869434365232163185374155624634714215611677865075019580558475213631565956639293164927676020539436567873600863257548179393886335574850702305405226345595363429928327007515593987806239785457665000)\\nTest.assert_equals(pascal_row(7451)[7420], 124878969430702980474392511839545113286296896644415000952714247538295229999490357708480)\\nTest.assert_equals(pascal_row(10238)[212], 342800548990755308112935656380873934725242706288171282099219653950859294332865926047833602229348877402464303100118299753693450314754606157641134140719838190735734496788884665381029610595911298040505528607725576878791545522749862082374977597968822683457296918716277873579942891268895805744300184515533972007438016041625836365039265657711293098154842187885254215184112946393463926608802318979201991325977033527886098090154714054131120901876867424517)\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[4,4,4,4,4,4,3,5,2,5,5,2,3,5,1,1,0,5,5,5],\"quality\":[],\"rators\":[\"aEm3Wvj2rFYRL8Lrb\",\"tAF9Gf6PiGogbZuWs\",\"8PwfYqoDQFThzNtvf\",\"Ecg4m7srYGgZsb4Ck\",\"GDcZ8xLorv7c8tgkq\",\"5dHucvf2qBYyKim7X\",\"s5M5RvgqR9BhB9JoC\",\"eHcgvkTGsH7ZziqBo\",\"iS5BrkGLzJyPK7nKt\",\"8sNv5PTHa7XQ8bNqR\",\"yjtdwc2AC4jA2RWtn\",\"gKnWjDjwrJh7MK2df\",\"2PufnQcsHsfymufX3\",\"fSQSHjW3e72MrWxbD\",\"gJYuGdkXEWWmGRLzu\"],\"total\":16},\"flags\":0},\"summary\":\"Create a function that returns the nth row of Pascal's triangle:\\n\\nPascals triangle\\n\\nExamples\\npascal_row(0) ➞ [1]\\n\\npascal_row(1) ➞ [1, 1]\\n\\npascal_row(5) ➞ [1, 5, 10, 10, 5, 1]\\n\\npascal_row(10) ➞ [1, 10, 45, 120, 210, 252, 210, 120, 45, 10, 1]\\n\\nNotes\\nInput will include large numbers (the formula n choose k, or n!/(k!*(n-k)!) won't do).\",\"tags\":[\"math\",\"numbers\"],\"timestamp\":{\"$date\":1600704942729},\"title\":\"Pascal's Triangle Rows\",\"family\":[{\"_id\":\"ENxiMBnKzf5HQgin2\",\"language\":\"python3\"}]}}"]