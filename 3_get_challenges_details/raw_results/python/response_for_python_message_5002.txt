a["{\"msg\":\"result\",\"id\":\"1216\",\"result\":{\"_id\":\"htpi99zeTsvjWNujz\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"def halve_count(a, b):\\n\\t# recursive code here\",\"difficulty\":1.7010309278350515,\"familyId\":\"wEZMuB35LYb8jwmDM\",\"instructions\":\"Given two integers `a` and `b`, return how many times `a` can be halved while still being greater than `b`.\\n\\n### Examples\\n```\\nhalve_count(4666, 544) ➞ 3\\n# (4666 -> 2333 -> 1166.5 -> 583.25)\\n\\nhalve_count(624, 8) ➞ 6\\n# (624 -> 312 -> 156 -> 78 -> 39 -> 19.5 -> 9.75)\\n\\nhalve_count(1000, 3) ➞ 8\\n# (1000 -> 500 -> 250 -> 125 -> 62.5 -> 31.25 -> 15.625 -> 7.8125 -> 3.90625)\\n```\\n\\n### Notes\\n- Integer `a` will always be (at least) greater than the _twice_ of `b`.\\n- You are expected to solve this challenge via a **recursive** approach.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"from re import findall, MULTILINE\\nfrom inspect import getsource\\n\\ndef is_recursive(fn):\\n  try:\\n    src, n = getsource(fn), fn.__name__\\n    if n == '<lambda>': n = src.split('=')[0].strip()\\n    return len(findall(n, src, flags=MULTILINE)) > 1\\n  except OSError: return True\\n\\nTest.assert_not_equals(is_recursive(halve_count), False, 'Recursion is required!')\\n\\nactual_param = [\\n  [4666, 544], [466, 54], [8, 2], [1891, 4], [1756, 14], [7764, 2], [1118, 47], [161, 79], [8573, 35], [4123, 1],\\n  [1348, 60], [7549, 31], [4469, 5], [1123, 98], [8197, 85], [1199, 56], [8845, 4], [606, 67], [3375, 6], [7085, 10],\\n  [299, 5], [1208, 82], [3635, 73], [2382, 3], [320, 80]\\n]\\nexpected_param = [3, 3, 1, 8, 6, 11, 4, 1, 7, 12, 4, 7, 9, 3, 6, 4, 11, 3, 9, 9, 5, 3, 5, 9, 1]\\nfor i, x in enumerate(actual_param): Test.assert_equals(halve_count(*x), expected_param[i])\",\"language\":\"python3\",\"quality\":4.6,\"summary\":\"Given two integers a and b, return how many times a can be halved while still being greater than b.\\n\\nExamples\\nhalve_count(4666, 544) ➞ 3\\n(4666 -> 2333 -> 1166.5 -> 583.25)\\n\\nhalve_count(624, 8) ➞ 6\\n(624 -> 312 -> 156 -> 78 -> 39 -> 19.5 -> 9.75)\\n\\nhalve_count(1000, 3) ➞ 8\\n(1000 -> 500 -> 250 -> 125 -> 62.5 -> 31.25 -> 15.625 -> 7.8125 -> 3.90625)\\n\\nNotes\\nInteger\",\"tags\":[\"recursion\",\"numbers\"],\"timestamp\":{\"$date\":1604590588415},\"title\":\"Recursion: Halve and Halve Again\",\"stats\":{\"completed\":{\"total\":163,\"ratings\":[3,3,3,3,3,3,1,0,3,1,3,3,3,3,4,1,2,2,2,0,3,4,2,1,2,3,2,0,1,2,1,2,2,1,2,0,0,0,1,1,3,0,2,3,1,2,0,2,0,1,2,2,1,3,3,3,2,0,3,2,2,0,0,2,4,1,0,1,2,2,2,0,1,1,1,0,2,2,2,0,1,3,3,2,1,2,2,2,1,1,3,2,1,1,1,2,1],\"quality\":[4,5,5,5,5,4,4,5,5,5,5,5,1,5,4,5,3,5,5,5,5,5,5,5,5,5,4,2,5,5,5,5,4,5,5,4,5,5,5,5,4,4,5,5,5,4,2,5,5,5,5,5,5,5,5,5,5,5,3,5],\"rators\":[\"a777e8chPvJkY3tKa\",\"aEm3Wvj2rFYRL8Lrb\",\"drQy2fDHWMMBEEL9G\",\"8PwfYqoDQFThzNtvf\",\"HF28xZKSLM9wEuqNg\",\"w2HhxvSLmDhaGCAjE\",\"buX4mCQhtXCfBjeno\",\"mDWNyaaQ9hvPCRzSd\",\"s5M5RvgqR9BhB9JoC\",\"iS5BrkGLzJyPK7nKt\",\"8sNv5PTHa7XQ8bNqR\",\"4LRsK5EGNjPSBmsJm\",\"6o7rKs3S3Cb8RkLoa\",\"jrnvj2NyRa4e54BDm\",\"Ecg4m7srYGgZsb4Ck\",\"gJYuGdkXEWWmGRLzu\",\"fSQSHjW3e72MrWxbD\",\"3pxHTZBsv7MKzFG6Y\",\"fznzd3qnvtbFkkizz\",\"DPi9QGLctq2y76KuE\",\"J3upzLHuEwXH7Z2hx\",\"R4SjTgDnpigJYDLyL\",\"ANbSYXiYsp4addoDq\",\"8JyqsSbN2FJXPr3cw\",\"Yp7uvStL97cC9fKkY\",\"gb9rvGus2Jv7bjZSs\",\"2g9DndhBotcaKDiFD\",\"p8qqFdJ3FSk5x9z3G\",\"iYz8w4RCMWR6H7Wyc\",\"ddyTp8rr9m4pNuASn\",\"gXTAie79kiw28tx5u\",\"Jqk2uJZZxEv5wZFze\",\"oBcs8GLX2ZFLXQy8y\",\"2fxapKr8XGdNeaKi2\",\"hnyhBFWwNCz9mDfSi\",\"yjtdwc2AC4jA2RWtn\",\"xsDyJstYoBZRS8pJH\",\"n2BRY9X8899dcG8Bw\",\"P7NmFbCJ5offXMRvB\",\"cAP3n5NY64uoMwzRR\",\"BSqqbMXBPpGzutJDR\",\"xn7uGNKeAwPEkP9oA\",\"3LiSLdtN58n46NEqg\",\"6axnYtKS9tE9X8B2T\",\"RhWecL96F9KJgrFwn\",\"yMfpc4AFBxD8jL5iB\",\"3zoZCAhtD8cYv5iYh\",\"axdSNLZpiCDF8RS6n\",\"Fjj4bZPgBTgyWjw7c\",\"eAC2yfEGABanBERTq\",\"XNmN6ztj36a7eChbD\",\"jL5Y4YMtK6QsKCaoq\",\"y62gWjSswKRCx8FCs\",\"9pzFiFK3ANLjQfnr2\",\"GGdmhAvxXhqhhibJN\",\"BrTDhPJcACL2bsrpJ\",\"QRv96jmNaYsWkxQEG\",\"8BrwRWhW8dg6XfTZW\",\"aw6v9SDdBEbyEgG5q\",\"PMy9ueudFxNArWPTf\",\"xFPM4HuY3mGAdMmsD\",\"oSYxupaymcysyPj8x\",\"ESfZHQZCxQmoDHCif\",\"NYz8M3YkYZRhWGK98\",\"Xkh4xJR4ZiLYbFvzG\",\"2QziknsznNeMPRh3g\",\"iqkHCiHXegtBzHFNA\",\"fkfDrtxurxi4qJF4P\",\"MCuiwArsQZNbS7qPh\",\"2p2BZjReM6buPGxDn\",\"vD4FYvNDr5WaL4Hiz\",\"Peg8qKzpRdMqAjCPZ\",\"iEcGa6ih2xfPrK3ot\",\"3G9jeQHKjEjCNhZ9R\",\"YdHeP5iP5qEJKiKYx\",\"t2yT48v7Bdq8uWmk5\",\"a2rXtpvi3JwF7mnNd\",\"qS5Xbh5sBC28e6j7E\",\"6rht6dumkxB3hGSTx\",\"y4poEofzbzh832YPJ\",\"uouMMdEWBuLBWPbzr\",\"dSd7wHgXGQeG5BQ2P\",\"zSLiwuSnZH5SmaXE3\",\"aM7WkyPp7K2PE6JKF\",\"926Jx7E4vP4oMvzzN\",\"fBqQjriC4QEtFNxFe\",\"juEY8AQhy7TuL5wYR\",\"PXAcsKkssS2yLyDv2\",\"vSaStog7MuTJtm2Dh\",\"6QHXQkQAcXMJ7C2kK\",\"2RT9EPgnapbH8dqsQ\",\"cbhmt4aRWPyJnnzNT\",\"mmt7jwqbmSjzRSvqh\",\"u5u2YpHXiNgzDNJdX\",\"NczXsSrYNX6nDWhjF\",\"e8xEfZQMxi5D9sch5\",\"MS4DrZX57uEzsCLnw\",\"8BFSTCnoe2QggN64c\",\"D2MfZSsLyBjMyr8XN\",\"RQQYwHWJnR5ur8hP6\",\"6hKYrnbSL2f6Laz7r\",\"QcuTb4AgsdN8dWoAE\",\"6cBhq3Nhk8MTm37JL\",\"T2vhHPhRR96hRizq8\",\"y3P5gfdzz3fgimjtS\",\"KBxTPknCRmB2b5y3i\",\"qAby4AWXmTNeusvg3\",\"52LKhrt3s9TMq83ug\",\"3YFnD8mYWEN4Snkyp\",\"7sGYgAmH8gAkYpwdj\",\"iSAfD54n3cFq3YWpw\",\"CHvzhtXnv8HTbPQ56\",\"innQWYNLEaTFwLeEr\",\"73DCBaHpY7yXRtcEB\",\"FEYpu9RWysAgW3XnP\",\"cR3ibTMxLyEdDFCHY\",\"zd9FLSzsGz3evKafy\",\"DWjKXWdKFnq9Ajto5\",\"iojEnnY9FsMfYzp6f\",\"Ds7L5bksw2QRHjrKL\",\"5rEiiwNW8YGxvWuH5\",\"7XjpFhwzNaeFiQctW\",\"J5T8gZqiZXFuFDTQ7\",\"AQSqD9oNv2uPfxZCR\",\"T6iBEE2jp7f7iEF2P\",\"DEDniTrstQYGounXT\",\"o4ixjQGSaYqA2JoM4\",\"AasGs8AeX9Lcb9xJn\",\"qD2LrwaDrSdiybLKY\",\"5HCu9Ydd86QgHDRNP\",\"HqmxnQJM66Y57twhn\",\"2Qk2mFu9HBFzrB24i\",\"tAF9Gf6PiGogbZuWs\",\"YZTm8Mpv86zv6LpR2\",\"PH32cNxBjrK4a28sn\",\"LcRuvM5CcbSmJ8ipK\",\"EHtTFoDbt722AH667\",\"mvJBakQ35CWAnbbEZ\",\"eMuCpJ2spXWkJjWNz\",\"yod5YhKtPqw2GfG9B\",\"Afnps7TJQuS9sipMb\",\"AFfw7cGg83uYk2Miy\",\"qWSaBcp23Z6m9FGG5\",\"rhS8qXRjZcpDXkwnE\",\"xqYQMujmvgQ78bnJc\",\"T6Rm8mREPMZSftzrC\",\"2PufnQcsHsfymufX3\",\"Jd99tC3Cv53AfPvBJ\",\"7txFzDQ43vJ7qCY88\",\"Wi4H6ayKsNDWWQCG5\",\"dRsW64NZ24uurTpqv\",\"vFXxysYBKjYaSXGp8\"]},\"flags\":0},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"aL3SuicAGjAwgqY2d\",\"language\":\"java\"},{\"_id\":\"nbLgTS3tCHTJcQfA5\",\"language\":\"javascript\"},{\"_id\":\"htpi99zeTsvjWNujz\",\"language\":\"python3\"}]}}"]