a["{\"msg\":\"result\",\"id\":\"1889\",\"result\":{\"_id\":\"pwAdsffHkxdhSwXKc\",\"author\":\"Alessandro Manicone\",\"authorId\":\"AasGs8AeX9Lcb9xJn\",\"code\":\"import re\\n\\npattern = \\\"yourregularexpressionhere\\\"\",\"difficulty\":2.6125,\"familyId\":\"ZkbgdCf8uHNFkbPta\",\"instructions\":\"Write a **regular expression** that will match the states that voted **no** to President Trump's impeachment. You must use RegEx **negative lookahead**. You are not allowed to use positive lookaheads.\\n\\n### Example\\n```\\ntxt = \\\"Texas = no, California = yes, Florida = yes, Michigan = no\\\"\\npattern = \\\"yourregularexpressionhere\\\"\\n\\nre.findall(pattern, txt) ➞ [\\\"Texas\\\", \\\"Michigan\\\"]\\n```\\n\\n### Notes\\n- You don't need to write a function, just the pattern.\\n- Do **not** remove `import re` from the code.\\n- This is fake data and used only for educational purposes.\\n- Find more info on RegEx and negative lookahead in **Resources**.\\n- You can find all the challenges of this series in my [Basic RegEx](https://edabit.com/collection/8PEq2azWDtAZWPFe2) collection.\",\"isHidden\":false,\"lab\":\"txt = 'Texas = no, California = yes, Florida = yes, Michigan = no'\\n\\nTest.assert_equals('(?!' in pattern, True, 'You must use negative lookahead.')\\nTest.assert_equals('(?=' in pattern, False, 'You are not allowed to use positive lookahead.')\\nTest.assert_equals(re.findall(pattern, txt), ['Texas', 'Michigan'])\\n\\n# Translated from JavaScript.\\n# The RegEx series was originally posted by Isaac Pak.\",\"language\":\"python3\",\"summary\":\"Write a regular expression that will match the states that voted no to President Trump's impeachment. You must use RegEx negative lookahead. You are not allowed to use positive lookaheads.\\n\\nExample\\ntxt = \\\"Texas = no, California = yes, Florida = yes, Michigan = no\\\"\\npattern = \\\"yourregularexpressionhere\\\"\\n\\nre.findall(pattern, txt) ➞ [\\\"Texas\\\", \\\"Michigan\\\"]\\n\\nNotes\\nYo\",\"tags\":[\"regex\",\"formatting\",\"strings\"],\"timestamp\":{\"$date\":1586689512148},\"title\":\"RegEx V: Negative Lookahead\",\"stats\":{\"completed\":{\"total\":94,\"ratings\":[2,2,2,2,2,3,1,2,3,3,5,1,3,3,3,4,2,5,4,0,4,0,4,2,2,2,4,4,5,2,2,2,3,3,2,3,2,2,2,2,3,2,3,3,3,3,1,2,3,3,5,3,4,4,2,0,1,2,0,4,3,4,3,4,4,4,4,3,3,3,2,3,1,0,0,2,5,2,2,2],\"rators\":[\"AasGs8AeX9Lcb9xJn\",\"tAF9Gf6PiGogbZuWs\",\"aEm3Wvj2rFYRL8Lrb\",\"Yp7uvStL97cC9fKkY\",\"KRSKj7ikX2ytWFmod\",\"DEDniTrstQYGounXT\",\"KXYHpCQvmTtpbGXYg\",\"gb9rvGus2Jv7bjZSs\",\"8PwfYqoDQFThzNtvf\",\"aP7JkkYer28YWrPvC\",\"wT5gGgvjKc5wz59AQ\",\"8JyqsSbN2FJXPr3cw\",\"J5T8gZqiZXFuFDTQ7\",\"a777e8chPvJkY3tKa\",\"586FdBhazpwJfnRYR\",\"Phd2FdPjo9BhBfvKh\",\"TP8xuSLNax26Czg7v\",\"9pzFiFK3ANLjQfnr2\",\"uzwYcrm8PvfHZR7YF\",\"n7won7uQNyJdrtrY6\",\"bDpmwo4vm9jHeZAPk\",\"rQRNL3B4x9gg4SkXf\",\"7j5WZYiP4uoE7AqYC\",\"AGMQqooexrFXgMnET\",\"C8zwrmduTLFvLQ4xW\",\"ayMh5YRnAXsxsk7bg\",\"JrADeNRHRTrvc98ry\",\"NK2PmeDZcHywYuWYq\",\"cnmj8mAbLcMnKaqLS\",\"7tbtTx6uxePv6eQwP\",\"BtdZezHfckxRLm7xR\",\"R4SjTgDnpigJYDLyL\",\"xn7uGNKeAwPEkP9oA\",\"cykCKNJcqFBxz4T8s\",\"QJB6Eb625qYxMp8kv\",\"KZvaNQrXBFJ9bKLYx\",\"XSt47ad5D5LLZSupD\",\"n2BRY9X8899dcG8Bw\",\"RehJGBFS6CYiWdjZx\",\"MCw7uAcoWcSTBTmr3\",\"JJmKj7ACC2P52uo95\",\"4597PD5mbXzHa3vdi\",\"pscBduNyf8TDHe2Km\",\"53HB4PyQgYTpBpsnX\",\"8WpvgSbQciTQWdd8T\",\"cxABox46qWvJRyidE\",\"4fhjJBvLBWh6QeSih\",\"ji5f27FPz4wRRF6Ls\",\"oHbErJxjYJhD66d5w\",\"QNb9Rx8BJgCWn3qgR\",\"2QziknsznNeMPRh3g\",\"yjtdwc2AC4jA2RWtn\",\"uN5t57RETi5y2z5W8\",\"c2u7qfdaYxcyuydtu\",\"incG8tH2dwThHg35f\",\"6MjSiiBLPcvXbXcaZ\",\"obsLt2HzJ5r9f8pkM\",\"AN7LdSzqL7Lti6ceZ\",\"QRv96jmNaYsWkxQEG\",\"DpnYcMphntjsQ96qg\",\"6xTu4r8NMczBFvmtz\",\"Y6w9WxXzRweSiy3Ls\",\"Lw8oRc5SERsuntXMo\",\"dQK2T76aHcRJkrbKB\",\"8sNv5PTHa7XQ8bNqR\",\"bPmZSm3AT2mQHbBHk\",\"PytNZK9mNiRiZxPrm\",\"StNu7DPyTgEStZsMY\",\"2H7qphwdz7PPoFKgc\",\"3pxHTZBsv7MKzFG6Y\",\"KxD9zpRKGNJChcsQg\",\"CTKmXtrqDYqJBnuy8\",\"Fmzo3d9rAck5RH8cq\",\"qNszsXx28cTxvGSNj\",\"iojEnnY9FsMfYzp6f\",\"JwkwCHcXthnGDsdFr\",\"bvmTE46bfcM4ogj34\",\"2PufnQcsHsfymufX3\",\"JKb5rhL6DKcCAypF9\",\"ctbThYbufFCYbRK4f\",\"H9KZi2cjt4FwH7qog\",\"97DthwdtrBLm2y2Yj\",\"hR7GMiqGap4CzEWSy\",\"gKnWjDjwrJh7MK2df\",\"yTtSCvGPyYna6JuRC\",\"ag8tcfPvJZWpRnwet\",\"MHiQx9E8rPgzJfsJy\",\"oBcs8GLX2ZFLXQy8y\",\"GTKsdeEihE636Le9i\",\"rQA9SE8nuwFueaHsR\"],\"quality\":[5,5,5,4,4,4,5,5,5,4,5,5,5,4,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":4.666666666666667,\"family\":[{\"_id\":\"kcQmoJJE8CXC5kqnP\",\"language\":\"javascript\"},{\"_id\":\"pwAdsffHkxdhSwXKc\",\"language\":\"python3\"}]}}"]