a["{\"msg\":\"result\",\"id\":\"1549\",\"result\":{\"_id\":\"7AA54JmzruLMwG6do\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def is_icecream_sandwich(txt):\\n\\t\",\"difficulty\":2.0551181102362204,\"familyId\":\"j88R4KsWK8tjxNk6k\",\"instructions\":\"An **ice cream sandwich** is a string that is formed by two identical ends and a different middle.\\n\\n#### Some examples of ice cream sandwiches:\\n```\\n\\\"AABBBAA\\\"\\n\\n\\\"3&&3\\\"\\n\\n\\\"yyyyymmmmmmmmyyyyy\\\"\\n\\n\\\"hhhhhhhhmhhhhhhhh\\\"\\n```\\n\\nNotice how **left** and **right** ends of the sandwich are identical in both **length** and in **repeating character**). The **middle** section is distinctly different.\\n\\n#### Not ice cream sandwiches:\\n```\\n\\\"BBBBB\\\"\\n// You can't have just plain icecream.\\n\\n\\\"AAACCCAA\\\"\\n// You can't have unequal sandwich ends.\\n\\n\\\"AACDCAA\\\"\\n// You can't have more than one filling.\\n\\n\\\"A\\\"\\n// You can't have fewer than 3 characters.\\n```\\n\\nWrite a function that returns `True` if a string is an **ice cream sandwich** and `False` otherwise.\\n\\n### Examples\\n```\\nis_icecream_sandwich(\\\"CDC\\\") ➞ True\\n\\nis_icecream_sandwich(\\\"AAABB\\\") ➞ False\\n\\nis_icecream_sandwich(\\\"AA\\\") ➞ False\\n```\\n\\n### Notes\\nAn ice cream sandwich must have a **minimum length of 3 characters**, and at least **two of these characters must be distinct** (you can't only have the filling!).\",\"lab\":\"Test.assert_equals(is_icecream_sandwich(\\\"\\\"), False, \\\"too short\\\")\\nTest.assert_equals(is_icecream_sandwich(\\\"AABBBAA\\\"), True)\\nTest.assert_equals(is_icecream_sandwich(\\\"3&&3\\\"), True)\\nTest.assert_equals(is_icecream_sandwich(\\\"yyyyymmmmmmmmyyyyy\\\"), True)\\nTest.assert_equals(is_icecream_sandwich(\\\"hhhhhhhhmhhhhhhhh\\\"), True)\\nTest.assert_equals(is_icecream_sandwich(\\\"CDC\\\"), True)\\nTest.assert_equals(is_icecream_sandwich(\\\"BBBBB\\\"), False, \\\"only filling\\\")\\nTest.assert_equals(is_icecream_sandwich(\\\"AAACCCAA\\\"), False, \\\"ends are unbalanced\\\")\\nTest.assert_equals(is_icecream_sandwich(\\\"AACDCAA\\\"), False, \\\"can only have one type of filling\\\")\\nTest.assert_equals(is_icecream_sandwich(\\\"AAABB\\\"), False, \\\"only one end\\\")\\nTest.assert_equals(is_icecream_sandwich(\\\"AA\\\"), False, \\\"too short\\\")\\nTest.assert_equals(is_icecream_sandwich(\\\"A\\\"), False, \\\"too short\\\")\",\"language\":\"python3\",\"summary\":\"An ice cream sandwich is a string that is formed by two identical ends and a different middle.\\n\\nSome examples of ice cream sandwiches:\\n\\\"AABBBAA\\\"\\n\\n\\\"3&&3\\\"\\n\\n\\\"yyyyymmmmmmmmyyyyy\\\"\\n\\n\\\"hhhhhhhhmhhhhhhhh\\\"\\n\\nNotice how left and right ends of the sandwich are identical in both length and in repeating character). The middle section is distinctly different.\\n\\nNot ice cream s\",\"tags\":[\"strings\",\"language_fundamentals\",\"validation\"],\"timestamp\":{\"$date\":1554914131504},\"title\":\"Ice Cream Sandwich\",\"stats\":{\"completed\":{\"total\":143,\"ratings\":[2,2,2,2,2,2,2,2,2,2,2,3,3,2,1,3,2,2,3,2,2,3,3,2,0,3,5,0,2,3,3,0,1,2,2,2,2,3,2,3,0,3,3,1,2,1,2,2,3,3,1,3,2,2,3,3,3,3,3,3,2,2,2,3,3,2,1,3,1,3,3,3,1,1,0,3,0,1,2,2,2,1,1,2,2,3,0,2,2,3,0,3,4,2,1,3,3,1,3,3,2,2,1,3,2,3,0,2,0,3,2,3,2,2,1,1,2,2,3,3,2,3,0,0,0,3,3],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"Jqk2uJZZxEv5wZFze\",\"yZvzB3qFb8pkHy4dg\",\"8JyqsSbN2FJXPr3cw\",\"tAF9Gf6PiGogbZuWs\",\"gb9rvGus2Jv7bjZSs\",\"M8jrv2FfpMQp9Qzpx\",\"T3ZAuoMrJjvZwN55B\",\"ab7BsQuhDo3QgE6bh\",\"kQH5b8MXJunh84Czq\",\"nc7bRhkxgKyqusYe3\",\"PFjMZGHNAPTkgd7tq\",\"AF6LgdKhEdzwgRJom\",\"PYg2boGDLrEcF3i4j\",\"C9LKGu2g5hSijvDzA\",\"6u7yc9m6HuHGbHzph\",\"nF9pCCzbGDhzvWgaw\",\"zjQPuEyZ38tTW6P5w\",\"jHrtWDGBhkbuWa7fG\",\"hsrNYf3WbexXJKhCq\",\"Wf6AF7TuNwEobxuW6\",\"3PeNuwMT9ad7ZhJkQ\",\"gMJhLdyw3tH7L96X2\",\"cR3ibTMxLyEdDFCHY\",\"N2wnZXkhDH86mgjQ8\",\"Jg8ZSRXe3NoDMCqGu\",\"W2wFFFx9pqgwmkFi3\",\"oqGkxvASXq52iTDvp\",\"s5M5RvgqR9BhB9JoC\",\"AYaEkTWLMmfzpwejr\",\"HqmxnQJM66Y57twhn\",\"otXtuQygbcYATMZoP\",\"5Fyk8T52QMfxPNqAg\",\"Nj6FwgBtAXsaQwsM2\",\"AbrJ8hMyv5fFXG6DN\",\"2fxapKr8XGdNeaKi2\",\"yoYQqaY6GszuTkNSs\",\"C4QntmkYtB89GNtpd\",\"K96FwtfDDN5WM4Bb7\",\"6ShafRStcvew4GfCh\",\"2innwjWqxJHo4eRGh\",\"Z85ajWfZ4jDPkbvR4\",\"4fctAnxyFRB8stPRQ\",\"M44nifmWzt3wtYyJx\",\"vJvvsBC5w3dPmeX2B\",\"pmgFEciNrd3ES9tuu\",\"GNcCEduB4wpC9K6ZQ\",\"8PwfYqoDQFThzNtvf\",\"PytNZK9mNiRiZxPrm\",\"wZoxzQDbso9SMAPkY\",\"AasGs8AeX9Lcb9xJn\",\"mDWNyaaQ9hvPCRzSd\",\"aEm3Wvj2rFYRL8Lrb\",\"ZNnsMeNkdDhHjSrZb\",\"YRstQuthRkFeBiXug\",\"kYWb8BwpKwunQkxeX\",\"m9rTWhSzs2a3cu9pu\",\"55RQznnuTGpsj3EXd\",\"DQskEvAv5KiJDPtGF\",\"gSFJPsMXnqAog3Q9f\",\"gJYuGdkXEWWmGRLzu\",\"WtmcimMC2rKjaZho2\",\"n2BRY9X8899dcG8Bw\",\"jL4y5fTJAMBjhZmko\",\"HF28xZKSLM9wEuqNg\",\"dzS6WBTMHyFEag6Fp\",\"iojEnnY9FsMfYzp6f\",\"v9KtC8YLbMWmXiW2H\",\"9CoqdidjM9KbeKnHY\",\"W5TajitmCyxz87zAC\",\"zZDaXBxMzTCBhNkgL\",\"Yp7uvStL97cC9fKkY\",\"yjtdwc2AC4jA2RWtn\",\"Ecg4m7srYGgZsb4Ck\",\"sX9GZp3fYyQLrBKMJ\",\"KZ2xddpM2f9JRaryB\",\"ZrKCkX7xxGGZzauFW\",\"hRiMXDZNAzyPd5tpt\",\"MKT7khMBGXzA22ykf\",\"p8qqFdJ3FSk5x9z3G\",\"iS5BrkGLzJyPK7nKt\",\"J5T8gZqiZXFuFDTQ7\",\"QRv96jmNaYsWkxQEG\",\"xwEZk3bNZoNDPJYF5\",\"dkcmCKwqApX5jBggc\",\"axdSNLZpiCDF8RS6n\",\"spqXrjG3ZFa2j5uTR\",\"DPi9QGLctq2y76KuE\",\"xn7uGNKeAwPEkP9oA\",\"J3upzLHuEwXH7Z2hx\",\"6MjSiiBLPcvXbXcaZ\",\"gXTAie79kiw28tx5u\",\"gMjAMD8XPK9sbx7eT\",\"CsJKoPjBsdQ4mBked\",\"oBcs8GLX2ZFLXQy8y\",\"7scpcTEp3SEx5Wjg9\",\"7ifh8r4gvyYMhKB94\",\"hnyhBFWwNCz9mDfSi\",\"T2vhHPhRR96hRizq8\",\"cAP3n5NY64uoMwzRR\",\"2a54L5fJYhMixJsQk\",\"RTDx9axf52kxhFjwZ\",\"FEYpu9RWysAgW3XnP\",\"CTKmXtrqDYqJBnuy8\",\"qZQxPQ2kaNKAMesHT\",\"GGdmhAvxXhqhhibJN\",\"eHcgvkTGsH7ZziqBo\",\"PWgzeK859suojbrRx\",\"H9KZi2cjt4FwH7qog\",\"PC3pLs36zNzpRDSuE\",\"rfyEkETeoS96QNH4e\",\"buX4mCQhtXCfBjeno\",\"T6iBEE2jp7f7iEF2P\",\"9bQyb6rW7xfE4vgrR\",\"gKnWjDjwrJh7MK2df\",\"2PufnQcsHsfymufX3\",\"o4ixjQGSaYqA2JoM4\",\"AFfw7cGg83uYk2Miy\",\"suArq5BbSy7gD6xri\",\"yod5YhKtPqw2GfG9B\",\"4Lwjr34ypKNQNQCar\",\"8sNv5PTHa7XQ8bNqR\",\"rhS8qXRjZcpDXkwnE\",\"rGiC4cM7RDEtQgZ3X\",\"ey3CASd6Je5LEJzfB\",\"Ds7L5bksw2QRHjrKL\",\"yTtSCvGPyYna6JuRC\",\"JhX7jvtpwNyxcc39m\",\"CHvzhtXnv8HTbPQ56\",\"5HCu9Ydd86QgHDRNP\",\"9pzFiFK3ANLjQfnr2\",\"jkbavR2ATFJcpmo8M\",\"Qyfyyw6oC4EHAndzo\"],\"quality\":[5,4,5,5,5,5,5,4,5,4,5,5,5,5,5]},\"tests\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.8,\"family\":[{\"_id\":\"GHaTpruxeoNc77Lto\",\"language\":\"cpp\"},{\"_id\":\"hLF2GH3SxbsFew3bC\",\"language\":\"java\"},{\"_id\":\"euDed7qoDzgvcHwdS\",\"language\":\"javascript\"},{\"_id\":\"qWKR6oDHu9pprDWrv\",\"language\":\"php\"},{\"_id\":\"7AA54JmzruLMwG6do\",\"language\":\"python3\"},{\"_id\":\"mJBftKks67zh4YTqm\",\"language\":\"ruby\"},{\"_id\":\"wL7hRFHtFbewkZtra\",\"language\":\"swift\"}]}}"]