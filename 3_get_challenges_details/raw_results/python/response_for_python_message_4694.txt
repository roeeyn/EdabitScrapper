a["{\"msg\":\"result\",\"id\":\"1060\",\"result\":{\"_id\":\"TJHwPqtA7DRGKJitB\",\"author\":\"Luis Pereira\",\"authorId\":\"aEm3Wvj2rFYRL8Lrb\",\"code\":\"def is_prob_matrix(lst):\\n\\t\",\"difficulty\":1.5508982035928143,\"editorId\":\"aEm3Wvj2rFYRL8Lrb\",\"familyId\":\"8Z5jr2FDqskgZDqyB\",\"instructions\":\"In probability theory, a _probability matrix_ is a matrix such that:\\n- The matrix is a square matrix (same number of rows as columns).\\n- All entries are probabilities, i.e. numbers between 0 and 1.\\n- All rows add up to 1.\\n\\nThe following is an example of a probability matrix:\\n```\\n[\\n  [0.5, 0.5, 0.0],\\n  [0.2, 0.5, 0.3],\\n  [0.1, 0.2, 0.7]\\n]\\n```\\nNote that though all rows add up to 1, there is no restriction on the columns, which may or may not add up to 1.\\n\\nWrite a function that determines if a matrix is a probability matrix or not.\\n\\n### Examples\\n```\\nis_prob_matrix([\\n  [0.5, 0.5, 0.0],\\n  [0.2, 0.5, 0.3],\\n  [0.1, 0.2, 0.7]\\n]) ➞ True\\n\\nis_prob_matrix([\\n  [0.5, 0.5, 0.0],\\n  [0.2, 0.5, 0.3]\\n]) ➞ False\\n\\n# Not a square matrix.\\n\\nis_prob_matrix([\\n  [2, -1],\\n  [-1, 2]\\n]) ➞ False\\n\\n# Entries not between 0 and 1.\\n\\nis_prob_matrix([\\n  [0, 1],\\n  [1, 0]\\n]) ➞ True\\n\\nis_prob_matrix([\\n  [0.5, 0.4],\\n  [0.5, 0.6]\\n]) ➞ False\\n\\n# Rows do not add to 1.\\n ```\\n\\n ### Notes\\nFun fact: for most probability matrices M (for example, if M has no zero entries), the matrix powers M^n converge (as n increases) to a matrix where _all rows are identical_.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(is_prob_matrix(\\n[[0.5, 0.5, 0.0],\\n [0.2, 0.5, 0.3]]), \\nFalse, \\\"Not a square matrix.\\\")\\n\\nTest.assert_equals(is_prob_matrix(\\n[[2, -1],\\n [-1, 2]]), \\nFalse, \\\"Entries are not probabilities.\\\")\\n\\nTest.assert_equals(is_prob_matrix(\\n [[0.5, 0.4],\\n  [0.5, 0.6]]), \\nFalse, \\\"Rows do not add to 1.\\\")\\n\\nTest.assert_equals(is_prob_matrix(\\n [[0, 1],\\n  [1, 0]]), \\nTrue)\\n\\nTest.assert_equals(is_prob_matrix(\\n [[2, 1],\\n  [1, 2]]), \\nFalse)\\n\\nTest.assert_equals(is_prob_matrix(\\n [[1]]), \\nTrue)\\n\\nTest.assert_equals(is_prob_matrix(\\n[[0.5, 0.5, 0.0],\\n [0.2, 0.5, 0.3],\\n [0.1, 0.2, 0.7]]), \\nTrue)\\n\\nTest.assert_equals(is_prob_matrix(\\n[[0, 0, 0, 1],\\n [0, 0, 0, 1],\\n [0, 0, 0, 1],\\n [0, 0, 0, 1]]), \\nTrue)\\n\\nTest.assert_equals(is_prob_matrix(\\n[[1, 0, 0, 1],\\n [1, 0, 1, 1],\\n [1, 1, 0, 1],\\n [1, 0, 0, 1]]), \\nFalse)\\n\\nTest.assert_equals(is_prob_matrix(\\n[[0.5, 0.0, 0.5, 0.0],\\n [0.1, 0.2, 0.3, 0.4],\\n [0.3, 0.2, 0.2, 0.3],\\n [0.0, 0.5, 0.0, 0.5]]), \\nTrue)\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,0,0,0,1,1,0,0,2,0,0,1,0,1,0,4,2,2,2,2,2,1,2,5,2,2,3,1,1,2,2,1,2,1,2,1,1,1,2,2,2,3,4,2,1,3,2,2,1,0,1,2,2,1,2,2,1,3,2,1,2,2,3,1,2,1,0,2,1,1,2,2,2,0,1,2,2,2,1,2,0,2,3,2,1,2,2,1,2,0,2,2,2,2,1,1,0,1,1,2,2,3,1,0,1,2,1,2,2,2,2,2,1,1,2,1,0,2,2,2,2,1,2,2,1,2,2,2,2,3,2,1,1,3,0,0,2,1,2,2,1,2,1,2,2,2,2,1,2,2,0,2,2,2,2,2,2,1,2,2,1,2,2],\"rators\":[\"aEm3Wvj2rFYRL8Lrb\",\"DEDniTrstQYGounXT\",\"q5a96XumccZyhQNyL\",\"Yp7uvStL97cC9fKkY\",\"AasGs8AeX9Lcb9xJn\",\"N7P4AnS8nzK4oupHv\",\"aRqQ42J5zqCmBNd8w\",\"veAhgEKubmGCuoCyh\",\"vLrq4dEDMM2wd68Dc\",\"9Ly8afdtofp8DXzrt\",\"u5u2YpHXiNgzDNJdX\",\"ZAg7PjoNJ4PPgtHiJ\",\"YTrKKP9GcY3wRSfeb\",\"w7FZGcEht9829tTcn\",\"NfMJuiBk6FN5Jc6ow\",\"jNvegJWCk5HCtEMbK\",\"gJYuGdkXEWWmGRLzu\",\"cELHpxXyh9EDC3cax\",\"9LLN4tbHA92uRLfHq\",\"B7xNs2GQLTqNcHhgf\",\"2EPfML6jWTi3oHNgw\",\"bMEg2eSZtsAcT7ZmJ\",\"J5T8gZqiZXFuFDTQ7\",\"cFnh3st63rXNrQQxC\",\"xLMJkcxptnkr5cAyA\",\"aXFzZYos65txjfaTk\",\"8BFSTCnoe2QggN64c\",\"tAF9Gf6PiGogbZuWs\",\"8PwfYqoDQFThzNtvf\",\"9pzFiFK3ANLjQfnr2\",\"Jg8ZSRXe3NoDMCqGu\",\"RmwYNt4oSLCLLd8a5\",\"Jqk2uJZZxEv5wZFze\",\"ZNnsMeNkdDhHjSrZb\",\"KRSKj7ikX2ytWFmod\",\"2iFe3EHEH2YdhSKrs\",\"gb9rvGus2Jv7bjZSs\",\"z9guJRB4sMe9mpxKv\",\"Co8eCrdMTL6BrYNyk\",\"xXxcBvT3poSuSCgBN\",\"uiEuENARwFpnNMfFs\",\"gfjEP2wEAk7Dyfjbi\",\"2fxapKr8XGdNeaKi2\",\"M8dQuMrEpP8Hc3tHN\",\"esY84P5NBKF8TWHDv\",\"TccnEKGqp7fbL3KxN\",\"8JyqsSbN2FJXPr3cw\",\"cR3ibTMxLyEdDFCHY\",\"2QGRoQn2dRq3scu7k\",\"s5M5RvgqR9BhB9JoC\",\"hnyhBFWwNCz9mDfSi\",\"5kEyLPjTLrt7z2YJZ\",\"HF28xZKSLM9wEuqNg\",\"Cc2Cgj4MWXZxsTooC\",\"kYWb8BwpKwunQkxeX\",\"RTbkMD3QwA7Pmvbw6\",\"8LfTheFzvicameoz9\",\"TR5aWdDKP6iaL6mGK\",\"yZvzB3qFb8pkHy4dg\",\"KdNDysEsy2TW5QRJ2\",\"gPvrBxxySDP2vpux3\",\"dHZqT6h4JMwk5fPC8\",\"nfXGHENb5md7m355s\",\"FzxTj4GuujhwpZM7y\",\"orFLgPDw9H5MDzmwo\",\"ahk2qiXKJA753wAJk\",\"yKttxy9JGn5Jzwuj6\",\"yr822PZmmiDDenxpB\",\"aPLuemxzZ5iS57NBQ\",\"DrkR35NqnP9NDLbq6\",\"s9GzySPz9vpMNQ2vj\",\"ikkjHDqBHu6fT3vGL\",\"4rwxLqLs2mNZNg8NB\",\"XrqNzJ2FRG8HnGiR6\",\"PXAcsKkssS2yLyDv2\",\"a777e8chPvJkY3tKa\",\"g8G9dxwAkfvJiPkwr\",\"YA7SDhpgEtsqynvNL\",\"2ptN2mhjFwFcHyPZd\",\"eMuCpJ2spXWkJjWNz\",\"4yNLEwL2rsx4EE5Nt\",\"mtpHxErRGFBPDjr7f\",\"H4abACFDH5t8CnnyH\",\"3cF6NXq3ZEwdkgSjb\",\"ZrKCkX7xxGGZzauFW\",\"Ba7nXvxBcNaWdKb2Y\",\"syRNbbPdLCGXbH2Gy\",\"NG8PWBSjsM8mMhQEq\",\"Ecg4m7srYGgZsb4Ck\",\"TwKZ3835iFLog2RuQ\",\"MYgTLYWDKJoskYRaa\",\"FEYpu9RWysAgW3XnP\",\"iojEnnY9FsMfYzp6f\",\"Pe8vWpDHRuH9nSGKW\",\"gSFJPsMXnqAog3Q9f\",\"hRiMXDZNAzyPd5tpt\",\"yjtdwc2AC4jA2RWtn\",\"NNE5HNRXAkmhrWgyQ\",\"MKJhn7goNzuGtB5y9\",\"YcCLwitFMAEJSnxAW\",\"iS5BrkGLzJyPK7nKt\",\"mDWNyaaQ9hvPCRzSd\",\"HqmxnQJM66Y57twhn\",\"R4SjTgDnpigJYDLyL\",\"oBcs8GLX2ZFLXQy8y\",\"GGprTwrkjuccmrQRg\",\"ta5CrWnBCRusD2WMo\",\"n2BRY9X8899dcG8Bw\",\"i5iePG5GqhJJ8HEoB\",\"g6AoBryey9W2qddK7\",\"zd9FLSzsGz3evKafy\",\"RehJGBFS6CYiWdjZx\",\"mxX4rH5ELYkdZ2Mbw\",\"KLmLKaJPfsYxp42p2\",\"p8qqFdJ3FSk5x9z3G\",\"zT9LpkiwYjLviYYW6\",\"tpxMgkGSHwBjS95Ta\",\"mG8HqKiAQFTdRZthG\",\"gXTAie79kiw28tx5u\",\"EMJ6uvBZkie429gdg\",\"b5zo7s6xrqWgQnPao\",\"9CoqdidjM9KbeKnHY\",\"qD2LrwaDrSdiybLKY\",\"kXEfD7xxEyWd7oxxL\",\"Kh3Pc2ZRusurLaMyP\",\"QRv96jmNaYsWkxQEG\",\"DPi9QGLctq2y76KuE\",\"wRttWTM59y8m5mx7x\",\"fYKAHqcSbHi6QA27q\",\"J3upzLHuEwXH7Z2hx\",\"dBzwBtRjZqB98DJeB\",\"5HCu9Ydd86QgHDRNP\",\"dYPkStFnLvAMsHSzZ\",\"cAP3n5NY64uoMwzRR\",\"8fZxjQfuXw5HMSRJM\",\"kNrnnMxhFZztMTBAX\",\"sKfrD9gjCDHuqLzSk\",\"8N99kojRhfZXWNAk6\",\"dj5AyG5fWP8FdsSmZ\",\"5XiuAqicKD4hBdu63\",\"RGMbFMZXJr7DhcAJy\",\"cZccqzRQ9GgjQF6Az\",\"ik2dsFgXbyNwQEvt8\",\"KEmTti9Tza8A2FLQW\",\"d8qtzoLB264iP8tdY\",\"HuNF3xTBzmatyGSTm\",\"YRAzEBJoLvSaiPtYx\",\"K3RacTvkWHLfzKF8i\",\"5S9nX4rKsnCcnv4Cz\",\"5hQnRWiKkhgKJXNMP\",\"eYfPWvZwnJQkHbSTK\",\"buX4mCQhtXCfBjeno\",\"KJCDwGkoXh8qtbbKr\",\"9bQyb6rW7xfE4vgrR\",\"GGdmhAvxXhqhhibJN\",\"Ds7L5bksw2QRHjrKL\",\"sHjfbGQGLHE6JR6qu\",\"CHvzhtXnv8HTbPQ56\",\"qAby4AWXmTNeusvg3\",\"o4ixjQGSaYqA2JoM4\",\"T6iBEE2jp7f7iEF2P\",\"66a9xX73nmTEuKs9k\",\"PC3pLs36zNzpRDSuE\",\"yod5YhKtPqw2GfG9B\",\"JhX7jvtpwNyxcc39m\",\"AJexRBN9cYQmqvYu6\",\"sKBGcRfEr6LrvG8A2\",\"5cwvQQnT66ArTLRjj\",\"mvJBakQ35CWAnbbEZ\",\"BrTDhPJcACL2bsrpJ\",\"2Qk2mFu9HBFzrB24i\",\"rrSC943cCKNG48sH4\",\"ey3CASd6Je5LEJzfB\",\"XD5nmvKQchKezPXhy\",\"AFfw7cGg83uYk2Miy\",\"2PufnQcsHsfymufX3\",\"4Lwjr34ypKNQNQCar\",\"T6Rm8mREPMZSftzrC\",\"4TmgHkn5vqyHK3sYC\",\"dzS6WBTMHyFEag6Fp\",\"d9LBRxvADNBB5QJMB\",\"pduNK68oazqQTtbLp\",\"NzbRqGWspQnWMoDrF\",\"yAouD3PxzED8a4gap\",\"suArq5BbSy7gD6xri\",\"wjc4iejpErBhxWwHo\",\"Wi4H6ayKsNDWWQCG5\",\"X4rzfxGgxx6CS7Bpz\",\"RoGGD5cpHb4ftdLDv\",\"5QN8R22z43SrwoHDz\",\"rCrbqMiaGPgHYTNxu\",\"MKT7khMBGXzA22ykf\"],\"total\":204,\"quality\":[4,3,5,4,5,4,5,5,5,5,5,5,5,5,5,4,5,5,5,4,4,5,5,4,4,5,5,5,5,1]},\"flags\":0},\"summary\":\"In probability theory, a probability matrix is a matrix such that:\\nThe matrix is a square matrix (same number of rows as columns).\\nAll entries are probabilities, i.e. numbers between 0 and 1.\\nAll rows add up to 1.\\n\\nThe following is an example of a probability matrix:\\n[\\n  [0.5, 0.5, 0.0],\\n  [0.2, 0.5, 0.3],\\n  [0.1, 0.2, 0.7]\\n]\\nNote that though all rows add up t\",\"tags\":[\"arrays\",\"math\",\"numbers\",\"validation\"],\"timestamp\":{\"$date\":1586575115888},\"title\":\"Is it a Probability Matrix?\",\"quality\":4.533333333333333,\"family\":[{\"_id\":\"T8wfuQkS9pCz9wC6n\",\"language\":\"cpp\"},{\"_id\":\"TCCFSPy3LeLRDGstw\",\"language\":\"javascript\"},{\"_id\":\"TJHwPqtA7DRGKJitB\",\"language\":\"python3\"},{\"_id\":\"8su96SxYMMQuT3d7T\",\"language\":\"ruby\"}]}}"]