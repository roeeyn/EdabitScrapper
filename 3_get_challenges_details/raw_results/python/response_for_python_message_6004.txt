a["{\"msg\":\"result\",\"id\":\"1713\",\"result\":{\"_id\":\"4KtBxyNbar9S57x6K\",\"author\":\"Leah Rappaport\",\"authorId\":\"mDWNyaaQ9hvPCRzSd\",\"code\":\"def positive_sum(chars):\\n\\t\",\"difficulty\":2.1818181818181817,\"familyId\":\"qRPMKnvuntyJBqB7n\",\"instructions\":\"Create a function that takes a string containing integers as well as other characters and return the sum of the positive integers only.\\n\\n### Examples\\n```\\npositive_sum(\\\"-12#-33 13%14&-11\\\") ➞ 27\\n# 13 + 14 = 27\\n\\npositive_sum(\\\"22 13%14&-11-22 13 12 0\\\") ➞ 74\\n# 22 + 13 + 14 + 13 + 12 = 74\\n\\npositive_sum(\\\"0 12 12 2\\\") ➞ 26\\n```\\n\\n### Notes\\n- There is at least one positive integer.\\n- Each integer is separated by a space, #, %, &, etc.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(positive_sum(\\\"-12#-33 13%14&-11\\\"), 27)\\nTest.assert_equals(positive_sum(\\\"22 13%14&-11-22 13 12 0\\\"), 74)\\nTest.assert_equals(positive_sum(\\\"3%4&-1 13 a 20 -2 b c\\\"), 40)\\nTest.assert_equals(positive_sum(\\\"2 3%-144&-1123 -2122\\\"), 5)\\nTest.assert_equals(positive_sum(\\\"-123 -8 1\\\"), 1)\\nTest.assert_equals(positive_sum(\\\"-122 2\\\"), 2)\\nTest.assert_equals(positive_sum(\\\"-121 0 3\\\"), 3)\\nTest.assert_equals(positive_sum(\\\"0 12 12 2\\\"), 26)\",\"language\":\"python3\",\"quality\":5,\"summary\":\"Create a function that takes a string containing integers as well as other characters and return the sum of the positive integers only.\\n\\nExamples\\npositive_sum(\\\"-12#-33 13%14&-11\\\") ➞ 27\\n13 + 14 = 27\\n\\npositive_sum(\\\"22 13%14&-11-22 13 12 0\\\") ➞ 74\\n22 + 13 + 14 + 13 + 12 = 74\\n\\npositive_sum(\\\"0 12 12 2\\\") ➞ 26\\n\\nNotes\\nThere is at least one positive integer.\\nEach intege\",\"tags\":[\"strings\",\"regex\"],\"timestamp\":{\"$date\":1604192307341},\"title\":\"Sum of Positive Integers\",\"stats\":{\"completed\":{\"total\":47,\"ratings\":[2,2,2,2,2,3,3,3,3,3,2,3,3,2,4,1,3,0,2,2,2,2,3,2,3,3,1,3,2,3,0,2,3,2,3,0,3,0,2,0,2,3,3,2],\"quality\":[5,5,5,5,5,5],\"rators\":[\"mDWNyaaQ9hvPCRzSd\",\"J3upzLHuEwXH7Z2hx\",\"w2HhxvSLmDhaGCAjE\",\"8PwfYqoDQFThzNtvf\",\"tAF9Gf6PiGogbZuWs\",\"uZJqBoqeZRX3RncAR\",\"dkcmCKwqApX5jBggc\",\"aEm3Wvj2rFYRL8Lrb\",\"N3tLQqsAyo76aDBh4\",\"iS5BrkGLzJyPK7nKt\",\"8sNv5PTHa7XQ8bNqR\",\"dQK2T76aHcRJkrbKB\",\"AXcnPX68zdMiLNSmu\",\"s5M5RvgqR9BhB9JoC\",\"HF28xZKSLM9wEuqNg\",\"gb9rvGus2Jv7bjZSs\",\"8JyqsSbN2FJXPr3cw\",\"Yp7uvStL97cC9fKkY\",\"xn7uGNKeAwPEkP9oA\",\"buX4mCQhtXCfBjeno\",\"DPi9QGLctq2y76KuE\",\"d8qtzoLB264iP8tdY\",\"gJYuGdkXEWWmGRLzu\",\"gXTAie79kiw28tx5u\",\"T2vhHPhRR96hRizq8\",\"sbJcFfQjQ59Wfg4Cd\",\"QRv96jmNaYsWkxQEG\",\"iojEnnY9FsMfYzp6f\",\"yjtdwc2AC4jA2RWtn\",\"CTKmXtrqDYqJBnuy8\",\"Z85ajWfZ4jDPkbvR4\",\"PytNZK9mNiRiZxPrm\",\"oBcs8GLX2ZFLXQy8y\",\"AasGs8AeX9Lcb9xJn\",\"JKb5rhL6DKcCAypF9\",\"srJ34BaybkQh3qRkM\",\"HqmxnQJM66Y57twhn\",\"MpfytGFYF77emJ3cT\",\"gKnWjDjwrJh7MK2df\",\"yod5YhKtPqw2GfG9B\",\"GGdmhAvxXhqhhibJN\",\"xi6sH47sHxoZQnJu5\",\"2PufnQcsHsfymufX3\",\"aQTCN6vbXjwKzb85G\",\"4Lwjr34ypKNQNQCar\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"wdNtH4cBxi4s6SLBw\",\"language\":\"cpp\"},{\"_id\":\"xjv7kk6Q7tDhyZTtZ\",\"language\":\"javascript\"},{\"_id\":\"4KtBxyNbar9S57x6K\",\"language\":\"python3\"},{\"_id\":\"NmfLdSBfBfRbnCm26\",\"language\":\"ruby\"}]}}"]