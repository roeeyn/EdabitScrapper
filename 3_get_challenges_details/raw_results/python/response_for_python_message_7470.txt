a["{\"msg\":\"result\",\"id\":\"2440\",\"result\":{\"_id\":\"TuG3DuZnC5MhGSfaY\",\"author\":\"yanni\",\"authorId\":\"aCNWav8S8Try9RkC6\",\"code\":\"def jumble(txt, index):\\n\\t\",\"difficulty\":4.4375,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"9iPP9QGb6dT9XHZu4\",\"instructions\":\"For this challenge, you are given a **string of letters** in alphabetical order and an **index**.  If a list of all the permutations of those **letters** are put in lexicographical order, a legitimate word is located at the given **index**. You are to identify that word.\\n\\nFor example:\\n\\n```\\njumble(\\\"isn\\\", 4) ➞ sin\\\"\\n```\\n\\nThe permutations are:\\n\\n```\\n[\\\"ins\\\", \\\"isn\\\", \\\"nis\\\", \\\"nsi\\\", \\\"sin\\\", \\\"sni\\\"]\\n```\\n\\nThe permutation at index 4 is \\\"sin\\\".\\n\\n### Examples\\n```\\njumble(\\\"em\\\", 1) ➞ \\\"me\\\"\\n\\njumble(\\\"aiv\\\", 5) ➞ \\\"via\\\"\\n\\njumble(\\\"abdeit\\\", 408) ➞ \\\"edabit\\\"\\n\\njumble(\\\"abdeit\\\", 137) ➞ \\\"baited\\\"\\n\\njumble(\\\"abefgilnoruv\\\", 425933017) ➞ \\\"unforgivable\\\"\\n```\\n\\n### Notes\\n- The test case words are heterographs (i.e. all the letters are different).\\n- It is too time-consuming to generate every permutation for some of the longer words (check the **Resources** tab for another way).\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(jumble(\\\"a\\\", 0), \\\"a\\\")\\nTest.assert_equals(jumble(\\\"abes\\\", 7), \\\"base\\\")\\nTest.assert_equals(jumble(\\\"ginz\\\", 21), \\\"zing\\\")\\nTest.assert_equals(jumble(\\\"acknr\\\", 43), \\\"crank\\\")\\nTest.assert_equals(jumble(\\\"aceghns\\\", 1094), \\\"changes\\\")\\nTest.assert_equals(jumble(\\\"eghilnoprstu\\\", 465433101), \\\"upholstering\\\")\\nTest.assert_equals(jumble(\\\"cdeghinoprtuy\\\", 5510573825), \\\"uncopyrighted\\\")\\nTest.assert_equals(jumble(\\\"acdeghimnorsty\\\", 36994730804), \\\"hydromagnetics\\\")\\nTest.assert_equals(jumble(\\\"acdeghilmoprsty\\\", 191364251720), \\\"dermatoglyphics\\\")\",\"language\":\"python3\",\"quality\":0,\"stats\":{\"completed\":{\"ratings\":[5,5,5,5,5,5,5,5,4,5,5,5,4,5,1,2],\"quality\":[],\"rators\":[\"aCNWav8S8Try9RkC6\",\"tAF9Gf6PiGogbZuWs\",\"xn7uGNKeAwPEkP9oA\",\"gJYuGdkXEWWmGRLzu\",\"dw39vy33ZbFLfCDwF\",\"8PwfYqoDQFThzNtvf\",\"iS5BrkGLzJyPK7nKt\",\"eHcgvkTGsH7ZziqBo\",\"s5M5RvgqR9BhB9JoC\",\"8sNv5PTHa7XQ8bNqR\",\"yjtdwc2AC4jA2RWtn\"],\"total\":13},\"flags\":0},\"summary\":\"For this challenge, you are given a string of letters in alphabetical order and an index.  If a list of all the permutations of those letters are put in lexicographical order, a legitimate word is located at the given index. You are to identify that word.\\n\\nFor example:\\n\\njumble(\\\"isn\\\", 4) ➞ sin\\\"\\n\\nThe permutations are:\\n\\n[\\\"ins\\\", \\\"isn\\\", \\\"nis\\\", \\\"nsi\\\", \\\"sin\\\", \\\"sni\\\"]\",\"tags\":[\"algorithms\",\"numbers\",\"strings\"],\"timestamp\":{\"$date\":1603480778587},\"title\":\"Jumbled Words\",\"family\":[{\"_id\":\"BxjySPtq2qT8FBb6B\",\"language\":\"cpp\"},{\"_id\":\"soifmDAvLsbic9vXH\",\"language\":\"javascript\"},{\"_id\":\"TuG3DuZnC5MhGSfaY\",\"language\":\"python3\"},{\"_id\":\"cpPiWBZWMFpzuC27A\",\"language\":\"ruby\"}]}}"]