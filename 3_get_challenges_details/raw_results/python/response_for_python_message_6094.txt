a["{\"msg\":\"result\",\"id\":\"1759\",\"result\":{\"_id\":\"vD3qsTmmgXp8inbh8\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"def equalize(lst, c):\\n\\t\",\"difficulty\":2.2972972972972974,\"familyId\":\"v5L2Eq9WWC8vaXXjo\",\"instructions\":\"**Mubashir** needs your help to equalize (make all list elements the same) a list.\\n\\nCreate a function that takes a list of integers `lst` and a constant `c` and returns **minimum number of operations** required to equalize the given list.\\n\\n### Rules\\n- You can choose any integer `x` to equalize the given list.\\n- Pick a contiguous sublist of length not greater than the given `c`\\n\\n### Examples\\n```\\nlst = [1, 2, 2, 1, 2, 1, 2, 2, 2, 1, 1, 1], c = 2\\nequalize(lst, c) âžž 4\\nYou have chosen x = 1 (change all values of the list to 1)\\n\\n[1, 2, 2, 1, 2, 1, 2, 2, 2, 1, 1, 1]\\n[1, 1, 1, 1, 2, 1, 2, 2, 2, 1, 1, 1] -> Step 1\\n[1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1] -> Step 2\\n[1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1] -> Step 3\\n[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] -> Step 4\\n```\\n\\n### Notes\\nN/A\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(equalize([1, 2, 2, 1, 2, 1, 2, 2, 2, 1, 1, 1], 2), 4)\\nTest.assert_equals(equalize([5, 2, 3, 5, 2, 2, 3, 5, 1, 2, 5, 1, 2, 5, 3], 7), 2)\\nTest.assert_equals(equalize([1, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1], 9), 1)\\n# Mubashir\",\"language\":\"python3\",\"quality\":0,\"summary\":\"Mubashir needs your help to equalize (make all list elements the same) a list.\\n\\nCreate a function that takes a list of integers lst and a constant c and returns minimum number of operations required to equalize the given list.\\n\\nRules\\nYou can choose any integer x to equalize the given list.\\nPick a contiguous sublist of length not greater than the given c\\n\\nExamp\",\"tags\":[\"algorithms\",\"arrays\",\"logic\",\"loops\"],\"timestamp\":{\"$date\":1612099302265},\"title\":\"Equalize a List\",\"stats\":{\"completed\":{\"total\":33,\"ratings\":[2,2,2,2,2,0,2,2,1,2,0,2,1,5,0,4,3,3,2,4,4,2,3,4,2,0,3,0,3,3,3,5,2,3,0,4,3],\"quality\":[],\"rators\":[\"T6iBEE2jp7f7iEF2P\",\"8PwfYqoDQFThzNtvf\",\"iS5BrkGLzJyPK7nKt\",\"s5M5RvgqR9BhB9JoC\",\"p8qqFdJ3FSk5x9z3G\",\"Jqk2uJZZxEv5wZFze\",\"oBcs8GLX2ZFLXQy8y\",\"yjtdwc2AC4jA2RWtn\",\"J5T8gZqiZXFuFDTQ7\",\"cAP3n5NY64uoMwzRR\",\"HF28xZKSLM9wEuqNg\",\"iAHoY2R7X3wDXcREX\",\"7fJLubRSr5GamKAFz\",\"fznzd3qnvtbFkkizz\",\"gXTAie79kiw28tx5u\",\"ZgWwEdWxjy83WpPQX\",\"Yp7uvStL97cC9fKkY\",\"iojEnnY9FsMfYzp6f\",\"AasGs8AeX9Lcb9xJn\",\"4RY3zj9C2t8GGefhi\",\"HqmxnQJM66Y57twhn\",\"H9KZi2cjt4FwH7qog\",\"PH32cNxBjrK4a28sn\",\"aEm3Wvj2rFYRL8Lrb\",\"J3upzLHuEwXH7Z2hx\",\"qaR8DnWrTk8Mus5Q2\",\"gJYuGdkXEWWmGRLzu\",\"yod5YhKtPqw2GfG9B\",\"buX4mCQhtXCfBjeno\",\"d8qtzoLB264iP8tdY\",\"DPi9QGLctq2y76KuE\",\"2PufnQcsHsfymufX3\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"QzcjLcABzcxomDkNH\",\"language\":\"cpp\"},{\"_id\":\"6xfeFywjKqinKsmwd\",\"language\":\"javascript\"},{\"_id\":\"vD3qsTmmgXp8inbh8\",\"language\":\"python3\"},{\"_id\":\"v5y6WtPB7qd7eiNTR\",\"language\":\"ruby\"}]}}"]