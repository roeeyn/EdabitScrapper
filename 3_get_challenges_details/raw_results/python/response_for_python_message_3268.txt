a["{\"msg\":\"result\",\"id\":\"357\",\"result\":{\"_id\":\"DHdbmfpvWprkB9ww5\",\"author\":\"Werdna\",\"authorId\":\"buX4mCQhtXCfBjeno\",\"code\":\"def chinese_zodiac(year):\\n\\t\",\"difficulty\":0.6534653465346535,\"familyId\":\"QuyJrrYiec4P6orCe\",\"instructions\":\"Create a function that takes a year as an argument and returns the corresponding Chinese zodiac.\\n\\n### Examples\\n```\\nchinese_zodiac(2021) ➞ \\\"Ox\\\"\\n\\nchinese_zodiac(2020) ➞ \\\"Rat\\\"\\n\\nchinese_zodiac(1933) ➞ \\\"Rooster\\\"\\n```\\n\\n### Notes\\nThe list of animals used can vary slightly, so check the **Resources** tab for the list that you will need for this challenge.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(chinese_zodiac(1925), \\\"Ox\\\")\\nTest.assert_equals(chinese_zodiac(2021), \\\"Ox\\\")\\nTest.assert_equals(chinese_zodiac(2020), \\\"Rat\\\")\\nTest.assert_equals(chinese_zodiac(1938), \\\"Tiger\\\")\\nTest.assert_equals(chinese_zodiac(1951), \\\"Rabbit\\\")\\nTest.assert_equals(chinese_zodiac(1964), \\\"Dragon\\\")\\nTest.assert_equals(chinese_zodiac(1977), \\\"Snake\\\")\\nTest.assert_equals(chinese_zodiac(1990), \\\"Horse\\\")\\nTest.assert_equals(chinese_zodiac(2003), \\\"Sheep\\\")\\nTest.assert_equals(chinese_zodiac(2016), \\\"Monkey\\\")\\nTest.assert_equals(chinese_zodiac(1969), \\\"Rooster\\\")\\nTest.assert_equals(chinese_zodiac(1982), \\\"Dog\\\")\\nTest.assert_equals(chinese_zodiac(1995), \\\"Pig\\\")\\n\\n# Author: chrislabours\",\"language\":\"python3\",\"quality\":4.708333333333333,\"summary\":\"Create a function that takes a year as an argument and returns the corresponding Chinese zodiac.\\n\\nExamples\\nchinese_zodiac(2021) ➞ \\\"Ox\\\"\\n\\nchinese_zodiac(2020) ➞ \\\"Rat\\\"\\n\\nchinese_zodiac(1933) ➞ \\\"Rooster\\\"\\n\\nNotes\\nThe list of animals used can vary slightly, so check the Resources tab for the list that you will need for this challenge.\",\"tags\":[\"conditions\",\"arrays\",\"language_fundamentals\"],\"timestamp\":{\"$date\":1610313241521},\"title\":\"Chinese Zodiac\",\"stats\":{\"completed\":{\"total\":127,\"ratings\":[1,1,1,1,1,0,0,0,1,0,2,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,2,2,0,0,0,0,0,1,0,1,0,0,2,5,1,0,0,2,1,2,0,0,1,1,0,0,0,1,3,0,1,0,0,1,0,1,0,0,0,1,1,0,2,0,2,0,0,0,2,0,2,0,0,1,1,0,1,1,0,0,1,1,0,3,1,0,2,1,0,0,0,2,1,1,0],\"quality\":[5,4,5,4,5,5,4,5,5,5,5,2,5,4,5,5,5,5,5,5,5,5,5,5],\"rators\":[\"buX4mCQhtXCfBjeno\",\"Ds7L5bksw2QRHjrKL\",\"Yp7uvStL97cC9fKkY\",\"XD5nmvKQchKezPXhy\",\"7dQYiDeTcMztbGyso\",\"N2wnZXkhDH86mgjQ8\",\"iS5BrkGLzJyPK7nKt\",\"srJ34BaybkQh3qRkM\",\"QRv96jmNaYsWkxQEG\",\"DEDniTrstQYGounXT\",\"FEYpu9RWysAgW3XnP\",\"7q8oBsCHwn48Ppnrq\",\"eYfPWvZwnJQkHbSTK\",\"Jqk2uJZZxEv5wZFze\",\"pPpmP7xeJzGgK362R\",\"q6QsMYNMpPNtmyTeW\",\"F6GsF4gLfNNd6di6x\",\"AELbAjEJuHCdrYdxF\",\"jNvegJWCk5HCtEMbK\",\"enuu2CseQvLGXr9tn\",\"oBcs8GLX2ZFLXQy8y\",\"PC3pLs36zNzpRDSuE\",\"rfyEkETeoS96QNH4e\",\"8EJ4j2fcfjTJ7Zrzu\",\"p8qqFdJ3FSk5x9z3G\",\"wRttWTM59y8m5mx7x\",\"LCuvvWMwiGuqTwNRi\",\"GdKtjPh8TcfmJuduv\",\"PXAcsKkssS2yLyDv2\",\"AFfw7cGg83uYk2Miy\",\"5HCu9Ydd86QgHDRNP\",\"Fk9kLwoG4Brf4KsKf\",\"j7ebNFtte6fSkMWjj\",\"xT6r6PnWFcmPHWEB4\",\"PAzNgJF54C2mYPkR9\",\"jcPZ5ySXseCB7Ec3x\",\"yjtdwc2AC4jA2RWtn\",\"6gHaCTMvjCk5ggBFm\",\"zd9FLSzsGz3evKafy\",\"g8ycjP4YwY4obJ8hG\",\"gJYuGdkXEWWmGRLzu\",\"CBwziWoAPy7qfE5MM\",\"2MjzJ7yxh3eT3xbng\",\"MKT7khMBGXzA22ykf\",\"fTNQmMvTZhhiGBCMe\",\"J5T8gZqiZXFuFDTQ7\",\"3cF6NXq3ZEwdkgSjb\",\"cR3ibTMxLyEdDFCHY\",\"uvLimfW9x3bCp7huQ\",\"s5M5RvgqR9BhB9JoC\",\"DPi9QGLctq2y76KuE\",\"8teSHp77vHhhvJWiS\",\"qD2LrwaDrSdiybLKY\",\"qAby4AWXmTNeusvg3\",\"C5h42RTzbdrpPfeZo\",\"gjiu8kLnHYxe4HoBN\",\"6LbPw9yW6HHDfn8B8\",\"8JyqsSbN2FJXPr3cw\",\"iojEnnY9FsMfYzp6f\",\"i5iePG5GqhJJ8HEoB\",\"Dwpiei4miJi7ry8W4\",\"fdyejapW3NWN7utPX\",\"Q6gEE9dG8ERy2Xu3c\",\"2QGRoQn2dRq3scu7k\",\"JKbEBybAsiKrmcqof\",\"8PwfYqoDQFThzNtvf\",\"T6iBEE2jp7f7iEF2P\",\"XrqNzJ2FRG8HnGiR6\",\"tAF9Gf6PiGogbZuWs\",\"eMuCpJ2spXWkJjWNz\",\"4TmgHkn5vqyHK3sYC\",\"gb9rvGus2Jv7bjZSs\",\"YRAzEBJoLvSaiPtYx\",\"RTER5uJdW4khkiNbY\",\"9Ly8afdtofp8DXzrt\",\"AXcnPX68zdMiLNSmu\",\"CHvzhtXnv8HTbPQ56\",\"3LiSLdtN58n46NEqg\",\"M2gFMJkocQSY6bsFR\",\"qzXAMXsHZGT8o5hTA\",\"DTyNcDkiScCjgJt28\",\"AasGs8AeX9Lcb9xJn\",\"jWbd7SYDzLPjc9EDh\",\"aEm3Wvj2rFYRL8Lrb\",\"9pzFiFK3ANLjQfnr2\",\"J3upzLHuEwXH7Z2hx\",\"Afnps7TJQuS9sipMb\",\"TCvpT4EPb8qNssNB7\",\"XbxHXmh5ZmRN2gw3K\",\"skMrSCmZiBYrQPJbg\",\"gKnWjDjwrJh7MK2df\",\"JS3hNM3XXkxPdg3yk\",\"PTDFuxAzou7W6asWt\",\"cdXmwjupCXSvJTSNo\",\"jgyuzt5BpA3ohHG96\",\"FiaTpm7ehfDv43wSG\",\"SkQcb2sRn4as5KpnN\",\"dYPkStFnLvAMsHSzZ\",\"9LrF5o2TK2iE8BZJh\",\"Cg3LKtEAJpsrdWroG\",\"B4y8aoyXJtskYPFEL\",\"5QN8R22z43SrwoHDz\",\"5nbHH4eApn6So9h2n\",\"dzS6WBTMHyFEag6Fp\",\"wjc4iejpErBhxWwHo\",\"PBnvAuiKXwjqjKG33\",\"rF97GDLqCgynr7BaD\",\"yAouD3PxzED8a4gap\",\"sbJcFfQjQ59Wfg4Cd\",\"tR9grPBLncwacBTzr\",\"fMp8sPsKSECdfgF9j\",\"Ne8mK9DDHG8TRkoxG\",\"rrSC943cCKNG48sH4\",\"Wi4H6ayKsNDWWQCG5\",\"mdRQaGT98ycMt87S2\",\"NzbRqGWspQnWMoDrF\",\"5CsHudxuDESxmjTPW\",\"4akHBgnDEDj3Rkv5n\",\"7HAL7H6NJmc4NC8Q5\",\"3SgSNoAB3sxaYeT3w\"]},\"flags\":1},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"RGyBcMBBoN4xDzETY\",\"language\":\"cpp\"},{\"_id\":\"8xAvdyphm83tzKCKt\",\"language\":\"javascript\"},{\"_id\":\"Mp2meyZGguvEpArFb\",\"language\":\"php\"},{\"_id\":\"DHdbmfpvWprkB9ww5\",\"language\":\"python3\"},{\"_id\":\"TmvWNJPLynYpPx3K2\",\"language\":\"ruby\"},{\"_id\":\"v2WwotaqfNybGPctb\",\"language\":\"swift\"}]}}"]