a["{\"msg\":\"result\",\"id\":\"1728\",\"result\":{\"_id\":\"vMyTyXa9NKnn8PPFQ\",\"author\":\"Shreeansh\",\"authorId\":\"Fhwnime223hGiaHaA\",\"code\":\"def calc(m, n):\\n\\t\",\"difficulty\":2.2162162162162162,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"o8Kn3kWq2vhFHimr3\",\"instructions\":\"Create a function that returns the count of all possible paths from **top left** to **bottom right** of an `m * n` matrix with the constraints that from each cell you can either move to the **right** or **down**.\\n\\n### Examples\\n```\\ncalc(2, 2) ➞ 2\\n\\ncalc(3, 3) ➞ 6\\n\\ncalc(4, 4) ➞ 20\\n```\\n\\n## Note:\\n`m` may not be equal to `n`.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(calc(2, 2), 2)\\nTest.assert_equals(calc(3, 3), 6)\\nTest.assert_equals(calc(4, 4), 20)\\nTest.assert_equals(calc(2, 1), 1)\\nTest.assert_equals(calc(2, 3), 3)\\nTest.assert_equals(calc(4, 2), 4)\\nTest.assert_equals(calc(3, 4), 10)\\nTest.assert_equals(calc(5, 4), 35)\\nTest.assert_equals(calc(5, 5), 70)\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,3,2,2,4,2,3,2,0,1,3,3,3,2,3,5,1,2,3,3,4,1,2,0,1,0,2,3,3,2,2,3],\"rators\":[\"Fhwnime223hGiaHaA\",\"8PwfYqoDQFThzNtvf\",\"HF28xZKSLM9wEuqNg\",\"aEm3Wvj2rFYRL8Lrb\",\"gJYuGdkXEWWmGRLzu\",\"8JyqsSbN2FJXPr3cw\",\"iojEnnY9FsMfYzp6f\",\"gb9rvGus2Jv7bjZSs\",\"yjtdwc2AC4jA2RWtn\",\"Ecg4m7srYGgZsb4Ck\",\"hnyhBFWwNCz9mDfSi\",\"iS5BrkGLzJyPK7nKt\",\"qD2LrwaDrSdiybLKY\",\"KEmTti9Tza8A2FLQW\",\"xn7uGNKeAwPEkP9oA\",\"J3upzLHuEwXH7Z2hx\",\"s5M5RvgqR9BhB9JoC\",\"d8qtzoLB264iP8tdY\",\"QRv96jmNaYsWkxQEG\",\"Yp7uvStL97cC9fKkY\",\"Jqk2uJZZxEv5wZFze\",\"gXTAie79kiw28tx5u\",\"R29kgJ9M7R4qqwjcE\",\"RTDx9axf52kxhFjwZ\",\"srJ34BaybkQh3qRkM\",\"GTKsdeEihE636Le9i\",\"AasGs8AeX9Lcb9xJn\",\"8sNv5PTHa7XQ8bNqR\",\"oBcs8GLX2ZFLXQy8y\",\"HqmxnQJM66Y57twhn\",\"H9KZi2cjt4FwH7qog\",\"GGdmhAvxXhqhhibJN\",\"yod5YhKtPqw2GfG9B\",\"buX4mCQhtXCfBjeno\",\"5jsikgRic4psf48fH\",\"rhS8qXRjZcpDXkwnE\",\"eHcgvkTGsH7ZziqBo\",\"2PufnQcsHsfymufX3\"],\"total\":44,\"quality\":[5,5,4,5,5,4]},\"flags\":0},\"summary\":\"Create a function that returns the count of all possible paths from top left to bottom right of an m * n matrix with the constraints that from each cell you can either move to the right or down.\\n\\nExamples\\ncalc(2, 2) ➞ 2\\n\\ncalc(3, 3) ➞ 6\\n\\ncalc(4, 4) ➞ 20\\n\\nNote:\\nm may not be equal to n.\",\"tags\":[\"arrays\",\"logic\",\"math\"],\"timestamp\":{\"$date\":1594109230496},\"title\":\"Maneuvering in a Cave\",\"quality\":4.666666666666667,\"family\":[{\"_id\":\"2hEKyMK6gTy9pdpbq\",\"language\":\"cpp\"},{\"_id\":\"T9W43c8JZdE9AsRQr\",\"language\":\"javascript\"},{\"_id\":\"vMyTyXa9NKnn8PPFQ\",\"language\":\"python3\"},{\"_id\":\"oHGdDeWBpSNvAry47\",\"language\":\"ruby\"}]}}"]