a["{\"msg\":\"result\",\"id\":\"1046\",\"result\":{\"_id\":\"6CvfzetG9PNG9ANPu\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"def mubashir_cipher(message):\\n\\tkey= [['m', 'c'], ['u', 'e'], ['b', 'g'], ['a', 'k'], ['s', 'v'], ['h', 'x'],['i', 'z'], ['r', 'y'], ['p', 'w'], ['l', 'n'], ['o', 'j'], ['t', 'f'], ['q', 'd']]\\n\\t\",\"difficulty\":1.5416666666666667,\"familyId\":\"MXyswEb33e6GyMyY2\",\"instructions\":\"In **Mubashir Cipher**, encoding is done by simply replacing paired letters from the provided key.\\n\\nCreate a function that takes a string containing the `message` to be encoded with a fixed given 2D list of letters `key`.\\n\\nThere are some variations on the rules of encipherment. One version of the cipher rules are outlined below:\\n\\n```\\nkey = [['m', 'c'], ['u', 'e'], ['b', 'g'], ['a', 'k'],\\n    ['s', 'v'], ['h', 'x'], ['i', 'z'], ['r', 'y'],\\n    ['p', 'w'], ['l', 'n'], ['o', 'j'], ['t', 'f'], ['q', 'd']]\\n\\nmessage = \\\"edabit is amazing !\\\"\\n\\nmubashir_cipher(message) ➞ \\\"uqkgzf zv kckizlb !\\\"\\n```\\n\\n**Step 1:** Search letter in the given key and replace it with **paired letter**:\\n\\n```\\ne = u\\nd = q\\na = k\\nb = g\\n.\\n.\\n.\\ng = b\\n```\\n**Step 2:** Keep all characters (including spaces) other than letters in their original positions:\\n\\n```\\n\\\"uqkgzf zv kckizlb !\\\"\\n```\\n\\nSee the below examples for a better understanding:\\n\\n### Examples\\n```\\nmubashir_cipher(\\\"mubashir is not amazing\\\") ➞ \\\"cegkvxzy zv ljf kckizlb\\\"\\n\\nmubashir_cipher(\\\"%$ &%\\\") ➞ \\\"%$ &%\\\"\\n\\nmubashir_cipher(\\\"evgeny sh is amazing\\\") ➞ \\\"usbulr vx zv kckizlb\\\"\\n```\\n\\n### Notes\\nN/A\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(mubashir_cipher(\\\"mubashir is not amazing\\\"), \\\"cegkvxzy zv ljf kckizlb\\\")\\nTest.assert_equals(mubashir_cipher(\\\"cegkvxzy zv ljf kckizlb\\\"), \\\"mubashir is not amazing\\\")\\nTest.assert_equals(mubashir_cipher(\\\"edabit is amazing !\\\"), \\\"uqkgzf zv kckizlb !\\\")\\nTest.assert_equals(mubashir_cipher(\\\"%$ &%\\\"), \\\"%$ &%\\\")\\nTest.assert_equals(mubashir_cipher(\\\"~!@#$%^&*()_+= -0 98 76 54 3 2 1\\\"), \\\"~!@#$%^&*()_+= -0 98 76 54 3 2 1\\\")\\nTest.assert_equals(mubashir_cipher(\\\"matt && is amazing\\\"), \\\"ckff && zv kckizlb\\\")\\nTest.assert_equals(mubashir_cipher(\\\"evgeny sh is amazing\\\"), \\\"usbulr vx zv kckizlb\\\")\\nTest.assert_equals(mubashir_cipher(\\\"usbulr vx zv kckizlb\\\"), \\\"evgeny sh is amazing\\\")\\nTest.assert_equals(mubashir_cipher(\\\"airforce needs me ?\\\"), \\\"kzytjymu luuqv cu ?\\\")\\nTest.assert_equals(mubashir_cipher(\\\"pakistan is love !\\\"), \\\"wkazvfkl zv njsu !\\\")\\n# Mubashir\",\"language\":\"python3\",\"quality\":4.631578947368421,\"summary\":\"In Mubashir Cipher, encoding is done by simply replacing paired letters from the provided key.\\n\\nCreate a function that takes a string containing the message to be encoded with a fixed given 2D list of letters key.\\n\\nThere are some variations on the rules of encipherment. One version of the cipher rules are outlined below:\\n\\nkey = [['m', 'c'], ['u', 'e'], ['b', '\",\"tags\":[\"algorithms\",\"cryptography\",\"logic\",\"strings\",\"loops\"],\"timestamp\":{\"$date\":1611380739238},\"title\":\"Mubashir Cipher\",\"stats\":{\"completed\":{\"total\":92,\"ratings\":[1,1,1,1,1,1,2,0,1,1,1,1,1,1,2,5,0,2,2,2,2,3,2,1,0,0,1,2,4,2,0,2,2,3,0,1,3,2,1,1,1,1,2,2,2,2,3,2,0,2,2,0,2,2,2,2,0,2,1,2,2,3,1,2,2,2,2,2,0,2,0,2],\"quality\":[3,5,5,5,5,4,5,5,5,4,5,5,5,4,5,3,5,5,5],\"rators\":[\"gb9rvGus2Jv7bjZSs\",\"7dQYiDeTcMztbGyso\",\"eYfPWvZwnJQkHbSTK\",\"iS5BrkGLzJyPK7nKt\",\"8PwfYqoDQFThzNtvf\",\"iSAfD54n3cFq3YWpw\",\"cR3ibTMxLyEdDFCHY\",\"wfspjH3pMjTpXaiyp\",\"N9YTpsehbRwQzJsSS\",\"LCuvvWMwiGuqTwNRi\",\"J5T8gZqiZXFuFDTQ7\",\"cAP3n5NY64uoMwzRR\",\"fJwNQwregCZ5Fjp22\",\"4KtMhTLs4s5mB3QLw\",\"buX4mCQhtXCfBjeno\",\"p8qqFdJ3FSk5x9z3G\",\"w2HhxvSLmDhaGCAjE\",\"PXAcsKkssS2yLyDv2\",\"s5M5RvgqR9BhB9JoC\",\"2QGRoQn2dRq3scu7k\",\"GGdmhAvxXhqhhibJN\",\"yjtdwc2AC4jA2RWtn\",\"jWbd7SYDzLPjc9EDh\",\"Jqk2uJZZxEv5wZFze\",\"BrTDhPJcACL2bsrpJ\",\"YcCLwitFMAEJSnxAW\",\"Ds7L5bksw2QRHjrKL\",\"wRttWTM59y8m5mx7x\",\"KJCDwGkoXh8qtbbKr\",\"wjc4iejpErBhxWwHo\",\"oBcs8GLX2ZFLXQy8y\",\"QRv96jmNaYsWkxQEG\",\"u5u2YpHXiNgzDNJdX\",\"HF28xZKSLM9wEuqNg\",\"sHjfbGQGLHE6JR6qu\",\"gXTAie79kiw28tx5u\",\"rfyEkETeoS96QNH4e\",\"zd9FLSzsGz3evKafy\",\"8JyqsSbN2FJXPr3cw\",\"XHShZ3WMPgGEA2vkR\",\"FEYpu9RWysAgW3XnP\",\"gJYuGdkXEWWmGRLzu\",\"Yp7uvStL97cC9fKkY\",\"qAby4AWXmTNeusvg3\",\"iojEnnY9FsMfYzp6f\",\"5HCu9Ydd86QgHDRNP\",\"eMuCpJ2spXWkJjWNz\",\"J3upzLHuEwXH7Z2hx\",\"3cF6NXq3ZEwdkgSjb\",\"AJexRBN9cYQmqvYu6\",\"66a9xX73nmTEuKs9k\",\"XD5nmvKQchKezPXhy\",\"8BFSTCnoe2QggN64c\",\"NzbRqGWspQnWMoDrF\",\"yod5YhKtPqw2GfG9B\",\"DEDniTrstQYGounXT\",\"NQQzu4wyLWW9faWtK\",\"M2gFMJkocQSY6bsFR\",\"5XiuAqicKD4hBdu63\",\"yr822PZmmiDDenxpB\",\"srJ34BaybkQh3qRkM\",\"PC3pLs36zNzpRDSuE\",\"9pzFiFK3ANLjQfnr2\",\"AasGs8AeX9Lcb9xJn\",\"9Ly8afdtofp8DXzrt\",\"HqmxnQJM66Y57twhn\",\"RoGGD5cpHb4ftdLDv\",\"Afnps7TJQuS9sipMb\",\"JhX7jvtpwNyxcc39m\",\"AFfw7cGg83uYk2Miy\",\"aEm3Wvj2rFYRL8Lrb\",\"2PufnQcsHsfymufX3\",\"YA7SDhpgEtsqynvNL\",\"pduNK68oazqQTtbLp\",\"dKfrEeb3czeJwnb7d\",\"tAF9Gf6PiGogbZuWs\",\"dzS6WBTMHyFEag6Fp\",\"Qb95LecdQjddzDmYf\",\"rhS8qXRjZcpDXkwnE\",\"4TmgHkn5vqyHK3sYC\",\"fZaGAGEPmzDhJtPy3\",\"mxX4rH5ELYkdZ2Mbw\",\"yTtSCvGPyYna6JuRC\",\"MKT7khMBGXzA22ykf\",\"CHvzhtXnv8HTbPQ56\",\"Wi4H6ayKsNDWWQCG5\"]},\"flags\":2},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"xax2r6x2yuotq3yp5\",\"language\":\"cpp\"},{\"_id\":\"J4idWvahCYHPGnsMT\",\"language\":\"javascript\"},{\"_id\":\"ajH4gMvRAWtXhKq8o\",\"language\":\"php\"},{\"_id\":\"6CvfzetG9PNG9ANPu\",\"language\":\"python3\"},{\"_id\":\"8W5AHdDGHfPf2GW6y\",\"language\":\"ruby\"}]}}"]