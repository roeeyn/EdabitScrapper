a["{\"msg\":\"result\",\"id\":\"1566\",\"result\":{\"_id\":\"xmwdk2qwyZEt7ph49\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def get_length(lst):\\n\\t\",\"difficulty\":2.085889570552147,\"familyId\":\"N8eYsMAsaz72MZZRb\",\"instructions\":\"Python's `len()` method will return the number of elements in a list. For example, the list below contains 2 elements:\\n\\n```\\n[1, [2, 3]]\\n# 2 elements, number 1 and list [2, 3]\\n```\\nSuppose we instead wanted to know the **total number of non-nested items** in the nested list. In the above case, `[1, [2, 3]]` contains 3 **non-nested items**, `1`, `2` and `3`.\\n\\nCreate a function that returns the total number of non-nested items in a nested list.\\n\\n### Examples\\n```\\nget_length([1, [2, 3]]) ➞ 3\\n\\nget_length([1, [2, [3, 4]]]) ➞ 4\\n\\nget_length([1, [2, [3, [4, [5, 6]]]]]) ➞ 6\\n\\nget_length([1, [2], 1, [2], 1]) ➞ 5\\n```\\n\\n### Notes\\nAn empty list should return `0`.\",\"lab\":\"Test.assert_equals(get_length([1, [2,3]]), 3)\\nTest.assert_equals(get_length([1, [2, [3, 4]]]), 4)\\nTest.assert_equals(get_length([1, [2, [3, [4, [5, 6]]]]]), 6)\\nTest.assert_equals(get_length([1, 7, 8]), 3)\\nTest.assert_equals(get_length([2]), 1)\\nTest.assert_equals(get_length([2, [3], 4, [7]]), 4)\\nTest.assert_equals(get_length([2, [3, [5, 7]], 4, [7]]), 6)\\nTest.assert_equals(get_length([2, [3, [4, [5]]], [9]]), 5)\\nTest.assert_equals(get_length([]), 0)\",\"language\":\"python3\",\"summary\":\"Python's len() method will return the number of elements in a list. For example, the list below contains 2 elements:\\n\\n[1, [2, 3]]\\n2 elements, number 1 and list [2, 3]\\nSuppose we instead wanted to know the total number of non-nested items in the nested list. In the above case, [1, [2, 3]] contains 3 non-nested items, 1, 2 and 3.\\n\\nCreate a function that returns \",\"tags\":[\"recursion\",\"arrays\"],\"timestamp\":{\"$date\":1552868727294},\"title\":\"Length of a Nested List\",\"stats\":{\"completed\":{\"total\":187,\"ratings\":[3,3,3,3,3,3,3,3,3,3,2,1,0,0,2,1,3,2,3,3,2,2,3,3,3,2,1,1,2,2,2,3,3,3,2,2,2,3,2,3,2,0,2,2,3,2,2,3,2,2,2,2,0,4,2,2,2,3,2,1,1,1,0,5,1,1,3,3,3,3,3,3,2,2,2,2,3,3,4,3,3,3,1,2,1,0,1,0,3,2,3,2,0,2,0,1,3,3,2,3,1,0,3,2,0,0,2,3,0,0,2,3,3,2,3,5,3,3,3,3,0,3,2,3,3,2,1,2,0,3,2,1,2,4,2,2,1,2,0,2,3,3,2,2,2,3,4,3,3,0,2,2,2,3,2,0,2,1,1,3,2,1,0],\"rators\":[\"BkPgkDQGHm66X4Qai\",\"M8jrv2FfpMQp9Qzpx\",\"rnye35ZBjmf2fKSQ8\",\"nWjL7xNgTzut9xcRN\",\"cHCCCEqvGRbpKacaJ\",\"Jqk2uJZZxEv5wZFze\",\"8JyqsSbN2FJXPr3cw\",\"yZvzB3qFb8pkHy4dg\",\"tAF9Gf6PiGogbZuWs\",\"gb9rvGus2Jv7bjZSs\",\"4HC75a4BAtjSd8jPv\",\"T3ZAuoMrJjvZwN55B\",\"ab7BsQuhDo3QgE6bh\",\"FikSPhcrHBpQ4CyGC\",\"MXjxGML2X75x64vJo\",\"9Gf6g4fuKc3uou9w2\",\"YNGariav9K8nWExWZ\",\"PFjMZGHNAPTkgd7tq\",\"eoo54vPGzwD3HZuHC\",\"MJMWfiW978otApbcG\",\"AF6LgdKhEdzwgRJom\",\"xNnExyvwRFrYzfuQZ\",\"Bw29ZPZGqzTzZrWJk\",\"kQH5b8MXJunh84Czq\",\"aCkLagAdo2weeNHFq\",\"MhdfvDcteuAdZ6sE6\",\"s5M5RvgqR9BhB9JoC\",\"g4SjQHKTor6qWACAe\",\"HqmxnQJM66Y57twhn\",\"xGnTgp9yQ5BTrcsut\",\"rurh72mGpAthfGRGt\",\"hWoF9quQYAsSsFjRn\",\"eXW8reZCCZHQzJjQi\",\"9xX5gZdoiDn54yk8N\",\"2fxapKr8XGdNeaKi2\",\"GCFDdaCQRayHWZqtB\",\"Fki4LenXE4ocaumd5\",\"Yp7uvStL97cC9fKkY\",\"2innwjWqxJHo4eRGh\",\"jbwfvA8f6ZSscrqmq\",\"C4QntmkYtB89GNtpd\",\"vgTvCCxgvbCTDvaRT\",\"pmgFEciNrd3ES9tuu\",\"yoYQqaY6GszuTkNSs\",\"csrxsMsk57AAQ5ngF\",\"AasGs8AeX9Lcb9xJn\",\"rzX5PujzJGJK7mMCi\",\"QKtxPPRK5h3eqno6p\",\"8PwfYqoDQFThzNtvf\",\"mDWNyaaQ9hvPCRzSd\",\"2uqYEp8CL3APJ2zgP\",\"YRstQuthRkFeBiXug\",\"aEm3Wvj2rFYRL8Lrb\",\"rvHTvcPj6Xccotg6b\",\"M9DhkxE77ztbJWz6e\",\"ZNnsMeNkdDhHjSrZb\",\"55RQznnuTGpsj3EXd\",\"wT5gGgvjKc5wz59AQ\",\"kYWb8BwpKwunQkxeX\",\"EjbDDFRECrzQDkzrX\",\"7CMCKFK3J6dw57T3n\",\"ywk3XGvcmpTgRxwZa\",\"hnyhBFWwNCz9mDfSi\",\"gSFJPsMXnqAog3Q9f\",\"yv7c4H2jimSKHEjtG\",\"bjCsNdAEP4v9RwAjK\",\"cTo3czssohzGLQQa7\",\"J67hC7LSEYS5JwhPj\",\"n2BRY9X8899dcG8Bw\",\"gkqp3EuvuiFXFAFtW\",\"gJYuGdkXEWWmGRLzu\",\"RgWhcJMQRoJP6b8Wg\",\"Z4M3NAa4TXquMNkHe\",\"fMh4ETojhqMbfbvTL\",\"9XNbjEKxsC89aX6ae\",\"36ExaQveMHJfvCLFh\",\"v9KtC8YLbMWmXiW2H\",\"Ecg4m7srYGgZsb4Ck\",\"qPpQfR5KyDb5Y3EFf\",\"qfBAT8Sb7agxigGn5\",\"HF28xZKSLM9wEuqNg\",\"cykCKNJcqFBxz4T8s\",\"4ZicxybyvEsuA9iET\",\"W5TajitmCyxz87zAC\",\"qN96BCoja8qo9383T\",\"cR3ibTMxLyEdDFCHY\",\"DNGkwLuAzEACszkAx\",\"DEDniTrstQYGounXT\",\"iojEnnY9FsMfYzp6f\",\"zZDaXBxMzTCBhNkgL\",\"ekQh3jzgGLsEMbKo3\",\"Pe8vWpDHRuH9nSGKW\",\"yjtdwc2AC4jA2RWtn\",\"iS5BrkGLzJyPK7nKt\",\"foytX6kH9wiSYqLtT\",\"ccM6NEoJaersAzmiQ\",\"SgZ2t9xFuRqdJGofp\",\"J27wHaBzigPNrNkSm\",\"ZrKCkX7xxGGZzauFW\",\"4rwxLqLs2mNZNg8NB\",\"hRiMXDZNAzyPd5tpt\",\"c7uBxu2rgY77H5d79\",\"CwXsu25ygLEwQbmQC\",\"N43d68KgA2qv7Jm2Y\",\"DFSjaCuytyX6KtnHR\",\"PytNZK9mNiRiZxPrm\",\"w2HhxvSLmDhaGCAjE\",\"J5T8gZqiZXFuFDTQ7\",\"DCLoZNDf8h6TB7gxn\",\"QRv96jmNaYsWkxQEG\",\"8fZxjQfuXw5HMSRJM\",\"DPi9QGLctq2y76KuE\",\"xn7uGNKeAwPEkP9oA\",\"hakqP3KnEFbiTypxs\",\"w3o9qJuPR62HHh9mx\",\"qD2LrwaDrSdiybLKY\",\"A6juEZXtRp29YrfM5\",\"dkcmCKwqApX5jBggc\",\"Y6L9fEPoxuDPhoFKT\",\"pfSSWQM4GG7oZWD6f\",\"JWMMTg8PjoA9Whz9u\",\"J3upzLHuEwXH7Z2hx\",\"FqfqNuiMLHMBqBJuS\",\"gXTAie79kiw28tx5u\",\"5pwxBnqW6Ci5vTcJm\",\"TTLogBGGLManF4jpN\",\"gcxtuiwMy2pbESHjc\",\"jsQJLi9LDjpXKFP28\",\"yTtSCvGPyYna6JuRC\",\"7xW5xkCsNDwHsGSBh\",\"4RsakkyRXyYGwFxEa\",\"ESfZHQZCxQmoDHCif\",\"T2vhHPhRR96hRizq8\",\"oBcs8GLX2ZFLXQy8y\",\"cAP3n5NY64uoMwzRR\",\"axFGc8QrcLfdPgmhi\",\"yK7zzK2aGJwuWKHRL\",\"wDMtQZjgzQPKh8g82\",\"pfbrH83s66L2EZQsH\",\"zz7kGX4J7TiM4yohg\",\"LFSASkxgw9hr3KqmC\",\"RfG2csESdQb3qcBAy\",\"cNZCLdwkhPmd4JBJB\",\"PWgzeK859suojbrRx\",\"srJ34BaybkQh3qRkM\",\"d8qtzoLB264iP8tdY\",\"Wpn95NqWxncQrwNgz\",\"9ivvGvJGvtQfigQaZ\",\"GGdmhAvxXhqhhibJN\",\"aDbjPC5E6oMAwfFdm\",\"oegsMgYbTKZZzPgWS\",\"DRBg6JtHBdLyFYCAL\",\"ALBxpbzw6znyPtcLQ\",\"3yce54Tx7JvaT48Bo\",\"2u9wghjCydey6aWys\",\"hkiz2Nv927cYGrA86\",\"fbr22rabEJMfBp7vD\",\"9izxzCBrsRCbD9ajK\",\"rfyEkETeoS96QNH4e\",\"MpfytGFYF77emJ3cT\",\"whSzxLBQhDiRzrQdR\",\"gKnWjDjwrJh7MK2df\",\"qaR8DnWrTk8Mus5Q2\",\"Tg62dkMt4jyb9bDHT\",\"K3RacTvkWHLfzKF8i\",\"2PufnQcsHsfymufX3\",\"xqYQMujmvgQ78bnJc\",\"T6iBEE2jp7f7iEF2P\",\"yioRPRNHhaQgehMq9\",\"8sNv5PTHa7XQ8bNqR\",\"DgZGAGukyjXJGYz96\",\"suArq5BbSy7gD6xri\",\"4LRsK5EGNjPSBmsJm\",\"TMHESz3Ny4LwjEWmy\",\"CHvzhtXnv8HTbPQ56\"],\"quality\":[5,5,5,5,2,5,5,5,5,5,5,4,5,5,4,5,4,5,5,2,5]},\"tests\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"instructions\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.571428571428571,\"family\":[{\"_id\":\"yXSTvCNen2DQHyrh6\",\"language\":\"javascript\"},{\"_id\":\"xmwdk2qwyZEt7ph49\",\"language\":\"python3\"},{\"_id\":\"XHW6y3typzde2jgMA\",\"language\":\"ruby\"}]}}"]