a["{\"msg\":\"result\",\"id\":\"1178\",\"result\":{\"_id\":\"cgyHTJDW5brpXGDy6\",\"author\":\"Cool_Kidd\",\"authorId\":\"i5iePG5GqhJJ8HEoB\",\"code\":\"def hours_passed(time1, time2):\\n\\t\",\"difficulty\":1.625,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"QeM9NibxG888hLgZf\",\"instructions\":\"Create a function that takes `time1` and `time2` and return how many hours have passed between the two times.\\n\\n### Examples\\n```\\nhours_passed(\\\"3:00 AM\\\", \\\"9:00 AM\\\") ➞ \\\"6 hours\\\"\\n\\nhours_passed(\\\"2:00 PM\\\", \\\"4:00 PM\\\") ➞ \\\"2 hours\\\"\\n\\nhours_passed(\\\"1:00 AM\\\", \\\"3:00 PM\\\") ➞ \\\"14 hours\\\"\\n```\\n\\n### Notes\\n`time1` will always be the starting time and `time2` the ending time. Return \\\"no time passed\\\" if `time1` is equal to `time2`.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(hours_passed(\\\"3:00 AM\\\", \\\"9:00 AM\\\"), \\\"6 hours\\\")\\nTest.assert_equals(hours_passed(\\\"2:00 PM\\\", \\\"4:00 PM\\\"), \\\"2 hours\\\")\\nTest.assert_equals(hours_passed(\\\"1:00 AM\\\", \\\"3:00 PM\\\"), \\\"14 hours\\\")\\nTest.assert_equals(hours_passed(\\\"2:00 AM\\\", \\\"3:00 PM\\\"), \\\"13 hours\\\")\\nTest.assert_equals(hours_passed(\\\"8:00 AM\\\", \\\"8:00 PM\\\"), \\\"12 hours\\\")\\nTest.assert_equals(hours_passed(\\\"1:00 AM\\\", \\\"1:00 AM\\\"), \\\"no time passed\\\")\\nTest.assert_equals(hours_passed(\\\"12:00 PM\\\", \\\"12:00 PM\\\"), \\\"no time passed\\\")\",\"language\":\"python3\",\"quality\":4.392857142857143,\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,1,2,0,2,1,2,1,1,2,1,2,2,2,3,2,2,1,1,2,2,2,1,2,2,1,3,2,2,2,2,2,3,0,1,0,2,0,5,2,1,2,1,2,2,2,2,4,0,2,1,2,2,2,2,0,1,2,2,1],\"quality\":[4,5,4,5,5,5,5,1,5,3,1,4,4,5,5,5,4,5,5,5,5,5,5,5,3,5,5,5],\"rators\":[\"i5iePG5GqhJJ8HEoB\",\"8JyqsSbN2FJXPr3cw\",\"5XiuAqicKD4hBdu63\",\"HrYH7vaWzh3e6waN5\",\"dYPkStFnLvAMsHSzZ\",\"J3upzLHuEwXH7Z2hx\",\"nfXGHENb5md7m355s\",\"qD2LrwaDrSdiybLKY\",\"pJj86xc32Bs7Frxvi\",\"5HCu9Ydd86QgHDRNP\",\"DPi9QGLctq2y76KuE\",\"yuRbyXHtdxTM5n7Es\",\"iS5BrkGLzJyPK7nKt\",\"w2HhxvSLmDhaGCAjE\",\"s5M5RvgqR9BhB9JoC\",\"SPYSWseH56TkTzKGf\",\"g9FyJ8yeT9ic97Qp2\",\"d8qtzoLB264iP8tdY\",\"8PwfYqoDQFThzNtvf\",\"4fjSgcqhQQZM2ZFRP\",\"Yp7uvStL97cC9fKkY\",\"cR3ibTMxLyEdDFCHY\",\"eL7Yv8HjSi6WBy3gq\",\"oBcs8GLX2ZFLXQy8y\",\"a777e8chPvJkY3tKa\",\"yjtdwc2AC4jA2RWtn\",\"QRv96jmNaYsWkxQEG\",\"p8qqFdJ3FSk5x9z3G\",\"zd9FLSzsGz3evKafy\",\"HF28xZKSLM9wEuqNg\",\"aEm3Wvj2rFYRL8Lrb\",\"gJYuGdkXEWWmGRLzu\",\"RGMbFMZXJr7DhcAJy\",\"cAP3n5NY64uoMwzRR\",\"7TDpSRxcXTPHmvLh3\",\"LanWBnkBhqPNxJ5a7\",\"yAej7PJ7tJN89HQqm\",\"jHzuR56B3bwWFoPow\",\"LMeoWu2kFKyAjWovv\",\"FEYpu9RWysAgW3XnP\",\"KJCDwGkoXh8qtbbKr\",\"dBzwBtRjZqB98DJeB\",\"PXAcsKkssS2yLyDv2\",\"gb9rvGus2Jv7bjZSs\",\"rfyEkETeoS96QNH4e\",\"YRAzEBJoLvSaiPtYx\",\"HqmxnQJM66Y57twhn\",\"5S9nX4rKsnCcnv4Cz\",\"MaLpA3hMEfEr22WM3\",\"Jqk2uJZZxEv5wZFze\",\"9bQyb6rW7xfE4vgrR\",\"GGdmhAvxXhqhhibJN\",\"MXGuntvz3byrP6WJc\",\"wRttWTM59y8m5mx7x\",\"Ds7L5bksw2QRHjrKL\",\"srJ34BaybkQh3qRkM\",\"CHvzhtXnv8HTbPQ56\",\"J5T8gZqiZXFuFDTQ7\",\"sbJcFfQjQ59Wfg4Cd\",\"3cF6NXq3ZEwdkgSjb\",\"iojEnnY9FsMfYzp6f\",\"AJexRBN9cYQmqvYu6\",\"o4ixjQGSaYqA2JoM4\",\"AFfw7cGg83uYk2Miy\",\"eMuCpJ2spXWkJjWNz\",\"DEDniTrstQYGounXT\",\"2u9wghjCydey6aWys\",\"yr822PZmmiDDenxpB\",\"PC3pLs36zNzpRDSuE\",\"yod5YhKtPqw2GfG9B\",\"AasGs8AeX9Lcb9xJn\",\"nJsNi8mCuMnrAjFYe\",\"EfxwqhYdapX3dMQC2\",\"tAF9Gf6PiGogbZuWs\",\"mvJBakQ35CWAnbbEZ\",\"T6iBEE2jp7f7iEF2P\",\"8BFSTCnoe2QggN64c\",\"BrTDhPJcACL2bsrpJ\",\"d9LBRxvADNBB5QJMB\",\"CdXigydGTBLgA577m\",\"2PufnQcsHsfymufX3\",\"ey3CASd6Je5LEJzfB\",\"9pzFiFK3ANLjQfnr2\",\"3nied3n8KG8RSNixH\",\"MKT7khMBGXzA22ykf\",\"4TmgHkn5vqyHK3sYC\",\"Wi4H6ayKsNDWWQCG5\"],\"total\":93},\"flags\":0},\"summary\":\"Create a function that takes time1 and time2 and return how many hours have passed between the two times.\\n\\nExamples\\nhours_passed(\\\"3:00 AM\\\", \\\"9:00 AM\\\") ➞ \\\"6 hours\\\"\\n\\nhours_passed(\\\"2:00 PM\\\", \\\"4:00 PM\\\") ➞ \\\"2 hours\\\"\\n\\nhours_passed(\\\"1:00 AM\\\", \\\"3:00 PM\\\") ➞ \\\"14 hours\\\"\\n\\nNotes\\ntime1 will always be the starting time and time2 the ending time. Return \\\"no time passed\\\" if ti\",\"tags\":[\"strings\",\"dates\"],\"timestamp\":{\"$date\":1603135519768},\"title\":\"Hours Passed\",\"family\":[{\"_id\":\"mujPkjKZL6b7yfykp\",\"language\":\"cpp\"},{\"_id\":\"D33ry6zNZzRyuQRPF\",\"language\":\"java\"},{\"_id\":\"6dp2xWaQbN9KuKp8P\",\"language\":\"javascript\"},{\"_id\":\"cgyHTJDW5brpXGDy6\",\"language\":\"python3\"},{\"_id\":\"vPSX4YK3NxLJPqcFx\",\"language\":\"ruby\"}]}}"]