a["{\"msg\":\"result\",\"id\":\"1237\",\"result\":{\"_id\":\"pDQ8sTXDxesqiTRuY\",\"author\":\"Alessandro Manicone\",\"authorId\":\"AasGs8AeX9Lcb9xJn\",\"code\":\"import re\\n\\npattern = \\\"yourregularexpressionhere\\\"\",\"difficulty\":1.7473684210526317,\"familyId\":\"yroJGcuwbBHyJ7aLj\",\"instructions\":\"Write a **regular expression** that will help us count how many tall people work in your company. You must use RegEx **positive lookbehind**.\\n\\n### Example\\n```\\nlst = [\\\"tall height\\\", \\\"tall height\\\", \\\"short height\\\", \\\"medium height\\\", \\\"tall height\\\"]\\npattern = \\\"yourregularexpressionhere\\\"\\n\\nlen(re.findall(pattern, \\\", \\\".join(lst))) ➞ 3\\n```\\n\\n### Notes\\n- You don't need to write a function just the pattern.\\n- Do **not** remove `import re` from the code.\\n- Find more info on RegEx and positive lookbehind in **Resources**.\\n- You can find all the challenges of this series in my [Basic RegEx](https://edabit.com/collection/8PEq2azWDtAZWPFe2) collection.\",\"isHidden\":false,\"lab\":\"lst = ['tall height', 'tall height', 'short height', 'medium height', 'tall height']\\n\\nTest.assert_equals('(?<=' in pattern, True, 'You must use positive lookbehind.') \\nTest.assert_equals(len(re.findall(pattern, ', '.join(lst))), 3)\\n\\n# Translated from JavaScript.\\n# The RegEx series was originally posted by Isaac Pak.\",\"language\":\"python3\",\"summary\":\"Write a regular expression that will help us count how many tall people work in your company. You must use RegEx positive lookbehind.\\n\\nExample\\nlst = [\\\"tall height\\\", \\\"tall height\\\", \\\"short height\\\", \\\"medium height\\\", \\\"tall height\\\"]\\npattern = \\\"yourregularexpressionhere\\\"\\n\\nlen(re.findall(pattern, \\\", \\\".join(lst))) ➞ 3\\n\\nNotes\\nYou don't need to write a function just the\",\"tags\":[\"language_fundamentals\",\"formatting\",\"regex\"],\"timestamp\":{\"$date\":1586711623174},\"title\":\"RegEx VI: Positive lookbehind\",\"stats\":{\"completed\":{\"total\":236,\"ratings\":[2,2,2,2,2,2,2,1,5,2,1,1,1,4,1,3,1,3,2,3,1,2,2,2,3,2,0,3,1,1,0,3,3,3,3,0,2,1,3,1,0,2,3,1,2,3,2,0,2,3,2,2,3,0,2,2,2,1,2,1,3,3,1,3,2,1,2,3,3,0,2,0,3,1,1,3,0,3,0,2,2,2,1,1,1,0,3,2,3,1,1,1,1,2,3,1,1,2,0,2,1,2,2,3,2,3,2,1,2,2,3,2,3,0,2,2,2,2,0,2,3,2,2,1,2,2,2,2,0,3,1,3,2,3,1,0,2,2,0,2,1,0,2,2,0,2,0,1,2,1,0,3,2,2,2,2,2,2,1,2,2,0,1,3,0,2,2,1,2,1,2,2,1,2,2,2,2,3,2,3,2,2,1,2,2,1,2,3,0,1],\"rators\":[\"AasGs8AeX9Lcb9xJn\",\"aEm3Wvj2rFYRL8Lrb\",\"tAF9Gf6PiGogbZuWs\",\"J5T8gZqiZXFuFDTQ7\",\"S6Zd8mPuvhuh3MFRt\",\"8JyqsSbN2FJXPr3cw\",\"pWD2YC5s4YRCxFc2i\",\"3Zceb8GudqAG3onG3\",\"DEDniTrstQYGounXT\",\"GM2X83qnuLXTHe5zA\",\"dHZqT6h4JMwk5fPC8\",\"gb9rvGus2Jv7bjZSs\",\"wT5gGgvjKc5wz59AQ\",\"aP7JkkYer28YWrPvC\",\"8PwfYqoDQFThzNtvf\",\"2fxapKr8XGdNeaKi2\",\"Yp7uvStL97cC9fKkY\",\"EjbDDFRECrzQDkzrX\",\"dZGNAJXB24zNh2tsD\",\"mDWNyaaQ9hvPCRzSd\",\"F2ykFxhDEEkj6N5KE\",\"CMuhZyDkaZXX4pvTD\",\"bDH2XR5bc4GxcwtBP\",\"KRmxvA4mWgfKvHmYN\",\"8BFSTCnoe2QggN64c\",\"586FdBhazpwJfnRYR\",\"a777e8chPvJkY3tKa\",\"efcsSdKgupNnf9DKD\",\"sz8ufn9i8zeiGWpAy\",\"PytNZK9mNiRiZxPrm\",\"HF28xZKSLM9wEuqNg\",\"KdNDysEsy2TW5QRJ2\",\"3pxHTZBsv7MKzFG6Y\",\"D4WwcMWZNgL6pwGRs\",\"3ECpdeExhBmkYXtba\",\"RuHad7wL2R98BLRXy\",\"JojxPJZXAGgZ84LAg\",\"A7BZy6bCmem2aHZvG\",\"8sNv5PTHa7XQ8bNqR\",\"yr822PZmmiDDenxpB\",\"vhLJwgSRY2J7aGD2i\",\"vsx8nvysMxZ3Q5S3h\",\"jTCK227m3M7QLqeDA\",\"9pzFiFK3ANLjQfnr2\",\"4yNLEwL2rsx4EE5Nt\",\"LgQwfXsnKm8C4FBt7\",\"ZJYMYPmyQAJ5B863h\",\"9DLnTKJr8Do98wkPQ\",\"TP8xuSLNax26Czg7v\",\"hTAsnXv2Qysa8yqKu\",\"ffA5qAQ4Lctb8mb5f\",\"fSawAcidbRKJfFoqp\",\"pkQBaSzukotPEXmrD\",\"zAppXL8MZJiNAStc5\",\"cxbQnktoNTzR9jcGe\",\"KGaQqhoaLiPQNjoxc\",\"RQvQLnbRxGx6yrdHi\",\"E8TMSMSamEbBtf9Lo\",\"wDdNEEoyd2ov8JSKM\",\"aFYzioHvZPvPaunsg\",\"RgWhcJMQRoJP6b8Wg\",\"eyPw2id4ejMwaqAby\",\"yJmwiykSNfLv9NqJ2\",\"ggZdi4Qo8PLTR8TPu\",\"DpqiRAm2yo3W2x4HX\",\"NK2PmeDZcHywYuWYq\",\"4E2CiZbgfNoFs963f\",\"Cuy7McJ5y8BkXRRk9\",\"Kb8nMBh7Ko5YeGCBA\",\"zT9LpkiwYjLviYYW6\",\"oNstSwRDTetCYkLM6\",\"HdapHJPXHZwFYBCnn\",\"TEN7AF5j6oEocKzwE\",\"tYvJXuErTy5GyoEsS\",\"AioJKoJ5ogzeBL5ZH\",\"KveNo7QtazNvRAXxa\",\"FsyAeQyzYQz87XDh6\",\"3iM7dNRZKEQoEZA9K\",\"ZF45EH5RvFe6aEsjx\",\"ooRQwWEpFCNnoGDfb\",\"iuGY96xGi5WD8hump\",\"pPtmnJ7q9QchoG2Jq\",\"QJB6Eb625qYxMp8kv\",\"tq62j66ujM2EAZvqx\",\"q3fo47f28EJXztkeW\",\"29MTvBZopCWjotnc5\",\"xK5Le9LPn9ZNddfbP\",\"u7BA8hWLLg7sxyYwz\",\"7tbtTx6uxePv6eQwP\",\"6gS4E2C84vBYTYeDZ\",\"BtdZezHfckxRLm7xR\",\"x4rCP54wNntB449tR\",\"snEnPHNwdgtzqPneR\",\"cykCKNJcqFBxz4T8s\",\"2innwjWqxJHo4eRGh\",\"R4SjTgDnpigJYDLyL\",\"jNvegJWCk5HCtEMbK\",\"iojEnnY9FsMfYzp6f\",\"xSifQB3kES9Mxrbiq\",\"u3HMcY3wn7T3eSfym\",\"uhJRtyFA2GZnCx6mL\",\"zZDaXBxMzTCBhNkgL\",\"hZW6j5s6RHpx35phy\",\"BJDCwgRYCR3PZCdYq\",\"3H4fGzGbq3xPw39gn\",\"GdePwFjEsuv7Ymf3N\",\"8LfTheFzvicameoz9\",\"AYhbELA7raumZJh33\",\"nBo2LLuSMeEgd5f6G\",\"ji5f27FPz4wRRF6Ls\",\"y2F9Fv3NYtQgDWFRZ\",\"Lh4HoR6iLi2HwXCSA\",\"Zn5QPhTRjiDsBPemw\",\"xMbEBg7bi3Wjbnwvi\",\"xhCe8aAuimqGyiWQe\",\"n2BRY9X8899dcG8Bw\",\"qaR8DnWrTk8Mus5Q2\",\"K4JsBLPjNKZv5LWnp\",\"RehJGBFS6CYiWdjZx\",\"mS9ksMDr2KzGt8J2m\",\"zZ43WzxvFu7kaTKZ6\",\"wD3CNmiBXwXPCQzyj\",\"N9XgCGKQk7kHaCaj4\",\"MCw7uAcoWcSTBTmr3\",\"hnyhBFWwNCz9mDfSi\",\"k2yHyyvaKgQ343h9J\",\"8zQnyekbSwzhoJymu\",\"PTDFuxAzou7W6asWt\",\"hzgF9pqmYtHzaNTwm\",\"xW9NGjvcevY6qdzvw\",\"yjtdwc2AC4jA2RWtn\",\"5Jjtec3Bg8cP43dEW\",\"GoqSXitFdh68aBXtW\",\"HqmxnQJM66Y57twhn\",\"JJmKj7ACC2P52uo95\",\"4597PD5mbXzHa3vdi\",\"DJdsqmTeAGDwrgYoZ\",\"pscBduNyf8TDHe2Km\",\"ACEZh39brWjdGkZXb\",\"8WpvgSbQciTQWdd8T\",\"Nb6LYPoQP6KJZt8mz\",\"BqT6sMHBAjkw4hjG6\",\"pmgFEciNrd3ES9tuu\",\"YcCLwitFMAEJSnxAW\",\"mBtSsKTHdQniYAfsZ\",\"p8qqFdJ3FSk5x9z3G\",\"w2HhxvSLmDhaGCAjE\",\"m6TC9gshrwufWqAYn\",\"oHbErJxjYJhD66d5w\",\"XjajdyybZZbkz8o5x\",\"qD2LrwaDrSdiybLKY\",\"QRv96jmNaYsWkxQEG\",\"7eYSYKpM4i2N4NZ92\",\"2QziknsznNeMPRh3g\",\"uN5t57RETi5y2z5W8\",\"c2u7qfdaYxcyuydtu\",\"sX9GZp3fYyQLrBKMJ\",\"LCZ6JTAhBZBmWLzm8\",\"incG8tH2dwThHg35f\",\"6MjSiiBLPcvXbXcaZ\",\"dYPkStFnLvAMsHSzZ\",\"obsLt2HzJ5r9f8pkM\",\"WdKdsgH9gXkKgCycx\",\"DpnYcMphntjsQ96qg\",\"6xTu4r8NMczBFvmtz\",\"DPi9QGLctq2y76KuE\",\"kAkLAF9T5McSxXJCT\",\"FRv5HToEaZ6iRM7T5\",\"5XiuAqicKD4hBdu63\",\"bPmZSm3AT2mQHbBHk\",\"XMYbe9cezEyMp2QMo\",\"FEYpu9RWysAgW3XnP\",\"muQCKmimwtNAdS8rp\",\"cZccqzRQ9GgjQF6Az\",\"RGMbFMZXJr7DhcAJy\",\"zd9FLSzsGz3evKafy\",\"StNu7DPyTgEStZsMY\",\"Jqk2uJZZxEv5wZFze\",\"m9Dj3WvWDwiu73PRh\",\"5S9nX4rKsnCcnv4Cz\",\"GGdmhAvxXhqhhibJN\",\"CTKmXtrqDYqJBnuy8\",\"rfyEkETeoS96QNH4e\",\"9ivvGvJGvtQfigQaZ\",\"7TQ3L6GtmN6kQGcdZ\",\"QNC6ErTx4ca2H3rD7\",\"qAby4AWXmTNeusvg3\",\"RTDx9axf52kxhFjwZ\",\"Ds7L5bksw2QRHjrKL\",\"82nyWEcznkx7ZA9ip\",\"AFfw7cGg83uYk2Miy\",\"qNszsXx28cTxvGSNj\",\"s7PAdYARQvr8scq84\",\"JwkwCHcXthnGDsdFr\",\"bvmTE46bfcM4ogj34\",\"o4ixjQGSaYqA2JoM4\",\"Cc2Cgj4MWXZxsTooC\",\"sbJcFfQjQ59Wfg4Cd\",\"hR7GMiqGap4CzEWSy\",\"97DthwdtrBLm2y2Yj\",\"BrTDhPJcACL2bsrpJ\",\"tRMPxwxhu4ghKmRCx\",\"yod5YhKtPqw2GfG9B\",\"ZMa8vbzyxjeTpDcNe\",\"GTKsdeEihE636Le9i\",\"T6Rm8mREPMZSftzrC\",\"ag8tcfPvJZWpRnwet\",\"MHiQx9E8rPgzJfsJy\",\"MfAA58Bz5482Z5qQt\",\"2PufnQcsHsfymufX3\",\"RfbjShbg8jmhyNtJh\",\"Wi4H6ayKsNDWWQCG5\",\"bNENiqqEDxM5a5JBf\",\"wrL4iX2CCSqDCCty3\",\"CHvzhtXnv8HTbPQ56\",\"3nied3n8KG8RSNixH\"],\"quality\":[5,5,5,3,5,5,5,1,5,5,5,4,5,5,4,3,5,5,5,2,5,5,5,5,5,5,5,4,5,5,4]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":4.516129032258065,\"family\":[{\"_id\":\"hQtRsdNykZgNEZp9J\",\"language\":\"javascript\"},{\"_id\":\"pDQ8sTXDxesqiTRuY\",\"language\":\"python3\"}]}}"]