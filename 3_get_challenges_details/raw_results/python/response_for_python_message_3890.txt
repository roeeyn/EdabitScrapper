a["{\"msg\":\"result\",\"id\":\"664\",\"result\":{\"_id\":\"GZhSDwwLwakxjpnoB\",\"author\":\"Alessandro Manicone\",\"authorId\":\"AasGs8AeX9Lcb9xJn\",\"code\":\"def thirdthird(lst):\\n\\tfor idx, i in enumerate(lst):\\n\\t\\tif idx = 2:\\n\\t\\t\\tif len(i) >= 3:\\n\\t\\t\\t\\treturn i[2]\\n\\treturn False\",\"difficulty\":1.0951219512195123,\"editorId\":\"AasGs8AeX9Lcb9xJn\",\"familyId\":\"AEs9ycHodyQgd3DME\",\"instructions\":\"Check the principles of minimalist code in the [intro to the first challenge] (https://edabit.com/challenge/2XLjgZhmACph76Pkr).\\n\\nIn the **Code** tab you will find a code that is missing a single character in order to pass the tests. However, your goal is to submit a function as **minimalist** as possible. Use the tips in the tips section below.\\n\\nWrite a function that returns the **third character** of the **third string** in a given list of strings. Return `False` if it can't be found.\\n\\n### Tips\\nThe operator `and` can be used to assign or return the first falsy value among two or more elements. If no falsy value is found, the last element will be returned.\\n\\nFor example, the code:\\n\\n```\\ndef all_of_these(a, b, c):\\n    return a if not a else b if not b else c\\n```\\n\\nCan be simplified to:\\n\\n```\\ndef all_of_these(a, b, c):\\n    return a and b and c\\n```\\n\\n### Bonus\\nOnce a falsy value is found, the rest of the elements will not be checked. For example, if we wanted to access the first element of a list, but the list happened to be empty, we would get an error. We can use `and` to work around this issue:\\n\\n```\\nlst1 = [1, 2, 3]\\nlst2 = []\\n\\nlst1 and lst1[0] ➞ 1\\nlst2 and lst2[0] ➞ []\\n```\\n\\n### Notes\\n- This is an open series: there isn't a definite list of features for the challenges. Please, do not hesitate to leave your **suggestions** in the **Comments**.\\n- _**Readability**_ is indeed a subjective concept. **Let's discuss it!** Feel free to leave your opinion in the **Comments**.\\n- You can find all the exercises in this series [over here](https://edabit.com/collection/8F3LA2Mwrf5bp7kse).\",\"isFree\":false,\"isHidden\":false,\"lab\":\"lst1 = ['eda', 'bit', 'edabit', 'bit', 'eda']\\nlst2 = ['Nel', 'mezzo', 'del', 'cammin', 'di', 'nostra', 'vita']\\nlst3 = ['I', 'dont', 'know', 'what', 'to', 'write']\\nlst4 = ['Pikachu', 'Bulbasaur', ':)', 'Charmander', 'Squirtle']\\nlst5 = ['Wode', 'Maya']\\nlst6 = []\\n\\nTest.assert_equals(thirdthird(lst1), 'a')\\nTest.assert_equals(thirdthird(lst2), 'l')\\nTest.assert_equals(thirdthird(lst3), 'o')\\nTest.assert_equals(thirdthird(lst4), False)\\nTest.assert_equals(thirdthird(lst5), False)\\nTest.assert_equals(thirdthird(lst6), False)\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[0,0,0,0,0,0,2,0,1,1,2,1,1,2,0,0,0,0,1,0,0,1,2,0,0,0,2,0,2,2,2,1,0,0,1,0,2,0,2,0,5,1,2,1,2,0,2,2,0,0,1,0,1,2,0,3,0,0,1,2,1,1,0,1,1,0,2,1,2,0,2,2,1,0,1,4,2,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,3,1,2,1,1,1,1,2,1,2,1,2,3,1,1,0,0,1,1,1,1,1,2,1,1,0,1,0,1,1,0,0,0,2,1,1,1,2,2,3,1,1,1,1,2,1,2,1,1,2,1,3,2,1,1,2,4,1,1,0,1,1,3,1,1,0,3,1,1,0,3,1,3,3,1,1,1,0,0,2,1,0,0,0,1,3,4,1,0,0,0,2,0,1,4,1,3,1,0,2,0,1,0,2,2,1,1,0,2,2,2,0,3,1,0,1,2,1,1,1,1,0,1,0,2,1,1,0,1,1,2,1,1,1,0,0,1,1,0,0,1,1,1,1,2,0,1,1,1,1,2,3,0,2,0,0,1,2,1,5,0,0,1,1,2,0,0,4,1,0,3,0,1,2,1,1,2,2,0,1,0,1,2,2,0,2,2,0,1,2,1,0,1,1,1,2,0,1,5,0,1,1,0,1,2,1,0,0,1,1,0,1,0,2,1,2,1,0,0,1,3,1,1,2,0,1,2,1,1,0,1,3,0,2,0,2,0,1,0,1,0,1,1,2,3,0,1,0,1,0,1,0,1,3,1,2,2,2,2,0,0,1,1,0,0,1,1,1,3,1,1,0,3,1,0,2,1,1,1,1,2,1,1,2,1,1,1,1,1,3,0,2,1,1,2,1,1,2,4,0,1,2,1,1,2,1,1,1,2,0,0,0,2,1,1],\"rators\":[\"AasGs8AeX9Lcb9xJn\",\"9qoWqLcHGiDX429rE\",\"3LiSLdtN58n46NEqg\",\"xyCsnhr3QPJPR5XFi\",\"awK73Qku8BcNGQ4Mm\",\"DEDniTrstQYGounXT\",\"tAF9Gf6PiGogbZuWs\",\"nfXGHENb5md7m355s\",\"5HCu9Ydd86QgHDRNP\",\"3eLqLYh2iPZuShtMY\",\"H4abACFDH5t8CnnyH\",\"2ptN2mhjFwFcHyPZd\",\"di2hhADLx59Bj4ewM\",\"TTgP9jcqGxCfKotZ3\",\"cf5WufFztCqXiCi3M\",\"TKgHN2GQ6gRdygtsw\",\"Pm7ApufWCZuXYmL28\",\"Zc6Mkd8jnGvcj9bLS\",\"Sq6otkoabSgCLqsut\",\"y775Z4v5u29nD6hpC\",\"n2BRY9X8899dcG8Bw\",\"Br9aaArg7qJLcNdhP\",\"Z4dHig4b5MK4beJYs\",\"QpZ9b8ygwameoA97h\",\"dHZqT6h4JMwk5fPC8\",\"5JyY5eDxizCH7TYT7\",\"N2wnZXkhDH86mgjQ8\",\"FEYpu9RWysAgW3XnP\",\"NRCH4eiebS7LBjSCa\",\"YcCLwitFMAEJSnxAW\",\"zd9FLSzsGz3evKafy\",\"32sfXXEJHYfSsrEy9\",\"Lfut9z3euZ3odxFcH\",\"9pzFiFK3ANLjQfnr2\",\"tRA43bWeW9bLciKEh\",\"J5T8gZqiZXFuFDTQ7\",\"ENsSYogEHHeDSrFod\",\"gb9rvGus2Jv7bjZSs\",\"fKkD9tDfaMy7ghws5\",\"XrqNzJ2FRG8HnGiR6\",\"ahk2qiXKJA753wAJk\",\"GNLCnfuyXcwFLKBAF\",\"KsGrEfiLekisjkcnk\",\"vwCBpxjY5vwDf3PXS\",\"aGDR98Xv4ftZqJqmY\",\"QZTkcg8f56RkFberP\",\"ztSoH8wMmG96PScCk\",\"M5KSGMc9fby4qEi8K\",\"FvFhg2wELM3SCZDZQ\",\"NzbRqGWspQnWMoDrF\",\"JgWpNj5G78uttDiE2\",\"cngNSsfRS3iuFp3mh\",\"cR3ibTMxLyEdDFCHY\",\"4rwxLqLs2mNZNg8NB\",\"jgbKQBbPNTxwdueS6\",\"8PB5fjmWLwiWti3G8\",\"YpBWfCcPqxAbiiHQM\",\"DqGem4F3hHpQccs7P\",\"YwvimRB49ju7e6yJ8\",\"T6ukuyu98wFrKSrLp\",\"eEdErRnMuk8R2iSRe\",\"P2ggRKJPtX6QDBXzZ\",\"aX3qftuk2DJZHNwFE\",\"8Myhz9yNQFGnxLgfQ\",\"rELot8t2Zr7tQN3y5\",\"ST95ogR3JcjaXgMzP\",\"CdXyLPAMmTzKnxhTp\",\"LA2YneDcbtiSj5SH6\",\"sgH2syXG7rkyg4pFh\",\"vgGr9jrC7rBWsbi3E\",\"JYbyC7EiD3PuwuxEv\",\"ZNnsMeNkdDhHjSrZb\",\"9TuPxKrpu5ihsFG2M\",\"YsAz93yZw8KKPupKv\",\"hTMxEi6Ku9w8tNzyP\",\"NuDW3qgK8JCCSiakD\",\"TLZTuo3bL2tCfeMua\",\"YrPtgSCscqjYFxJMR\",\"ojYgPhK8vF9DjxLDM\",\"JGRxB7BwFjsQMftey\",\"f4XjXt8WWrgHyCEaW\",\"7XYgCXskD5hqWNJih\",\"s5M5RvgqR9BhB9JoC\",\"F5ijWwvHnWTZ94NNu\",\"exXTyFBA5oCw333ut\",\"AkNdYK2xbbmDcZrjM\",\"uCgqgz3pZzSjLy99c\",\"BEkuEmo2ZyQwZ9P3h\",\"mHvoroWGDLYbJqQJa\",\"PhceyfmFntJcn5Fhf\",\"wNKnLfkh6FNafABdv\",\"3cF6NXq3ZEwdkgSjb\",\"XnMDK9btM8bPfrHjt\",\"nZ58gDWFhqXiZpmZQ\",\"c76FA9xqXCvCoTP9j\",\"NqxQXbohabNWXypwu\",\"uhX7tunPxiAenk4HJ\",\"NG8PWBSjsM8mMhQEq\",\"Yg5KsgKxN3tWmuEKG\",\"sx24GvBd6kWdMYbyr\",\"NCCapxuHxuJ6HLaDq\",\"hcNbHccysCEQ9yhGp\",\"PPoq2ChbFuBeqXwRe\",\"gLjDb4mjeQafmd8gP\",\"p9LrbZNFe3SxCHKji\",\"yYxPzFqBgtQ9fsyHM\",\"q2gpbwzYF4YHehs68\",\"mp98BmkNe97m5FABq\",\"4yNLEwL2rsx4EE5Nt\",\"RpmGuKA3d34t4gkBr\",\"h3cMyEyB72ygAQnx4\",\"CMgNoAvH6CBDhhd5k\",\"WSLnCZNtpiCrdaXnd\",\"TP8xuSLNax26Czg7v\",\"xvebFLdzW4Tsufa7n\",\"qDGitH479LjJwFE6k\",\"DjtFnQ9H2nQcqsPcS\",\"EZujhqz4qCTovnXpD\",\"A9BD7C5MTEmFmzHgs\",\"j57Xos8wYZWcwqMrt\",\"4usmYA9Pppx4F8vmF\",\"qCJXjLWGtKz534YvA\",\"HQxp7NcdvF92G7bYS\",\"Gq8WBTdYB45BdKwPS\",\"kxyZt4vdvCmrnALir\",\"ZH9mFPsNbYAYgue8X\",\"25xSKCZnGNPcSsSwZ\",\"rfyEkETeoS96QNH4e\",\"LgQwfXsnKm8C4FBt7\",\"E76AShjhupDYcDbdD\",\"ytiNXbffE4tmvffmS\",\"ciPCAmFHfiutc6PqN\",\"LwviRT66LXkeSJXDA\",\"8bPDpPjgJXbLyMxRm\",\"baQwW3ToTzs8Kuwwf\",\"mDWNyaaQ9hvPCRzSd\",\"kpz9Qv2H548wBoCGQ\",\"g3TLQzDgveMGr6mB5\",\"7Z9KdHmzkoF3TQC8s\",\"kch5ukGsAcRJynWQd\",\"GGprTwrkjuccmrQRg\",\"wWZ5r4mADxiNsYg9T\",\"vhLJwgSRY2J7aGD2i\",\"yZvzB3qFb8pkHy4dg\",\"GypbCPC7MaMm8Pfpx\",\"eW6dTuMJfYcNY7f5u\",\"oRdsdmmPpzfSK4tDq\",\"4zkChgTrb5EDzYZmd\",\"8i5DgRyxym9i2auJ3\",\"dKKMvaYoJunNPk5Wa\",\"KdNDysEsy2TW5QRJ2\",\"HF28xZKSLM9wEuqNg\",\"WjQ3gasWbhmqopTvz\",\"sHjfbGQGLHE6JR6qu\",\"aEm3Wvj2rFYRL8Lrb\",\"HE2mrszq5oi8NFiSS\",\"Yp7uvStL97cC9fKkY\",\"JS3hNM3XXkxPdg3yk\",\"8JyqsSbN2FJXPr3cw\",\"jzorpPo7TYt6i589D\",\"KpHrC7WPEojnzgEtz\",\"TQhN6YPSfQiiuCE68\",\"H9KZi2cjt4FwH7qog\",\"vyaFTJDKChqYfczdu\",\"8BFSTCnoe2QggN64c\",\"NNE5HNRXAkmhrWgyQ\",\"FxJxxwowtXYCaLaeD\",\"w2NGhfAGohsq6WhhN\",\"GGdmhAvxXhqhhibJN\",\"ekQh3jzgGLsEMbKo3\",\"qB6KSTYC6H2TQEQY6\",\"jBo3xAopr37GFzY8g\",\"aRqQ42J5zqCmBNd8w\",\"eMuCpJ2spXWkJjWNz\",\"4X3bLdgJjHMF8Lxug\",\"FK2fEQ3F6DD3buSLJ\",\"gBtn7gSMiSJtAGRoE\",\"KQibXmPD86WnYBrBj\",\"yr822PZmmiDDenxpB\",\"jNvegJWCk5HCtEMbK\",\"mfJcJtAYaK9TN6mHg\",\"k7f82n7oxaWsmhdzT\",\"ckHFA5y8pkrXbsevA\",\"yNjkHfHESBAnCssPB\",\"5khyYS3abpwyJq2Mx\",\"MKT7khMBGXzA22ykf\",\"7ajSwbNMNp9ggPewT\",\"2innwjWqxJHo4eRGh\",\"6ArBr2L3C7TMrR3j9\",\"LjoNTyGEMfBpMHHus\",\"R4SjTgDnpigJYDLyL\",\"23KndF374EHHZNbL8\",\"pDvFWMCD9fQwoBPcu\",\"8PEgcFyLGhsNpiqpx\",\"dj5AyG5fWP8FdsSmZ\",\"BMEud9eeJnPDC8A2k\",\"PXAcsKkssS2yLyDv2\",\"9CoqdidjM9KbeKnHY\",\"iojEnnY9FsMfYzp6f\",\"D6rdZCxgZngRm7ijZ\",\"mSjddMnY7SYC7gCoH\",\"M8dQuMrEpP8Hc3tHN\",\"GEvSGXDkk7pACfYri\",\"qBCCfGCNRuG76mgi8\",\"p8qqFdJ3FSk5x9z3G\",\"u7BA8hWLLg7sxyYwz\",\"kNrnnMxhFZztMTBAX\",\"mBtSsKTHdQniYAfsZ\",\"KdYQN3KAT2DyTzT2a\",\"6428wKHtwKkFdvBs5\",\"i5iePG5GqhJJ8HEoB\",\"HqmxnQJM66Y57twhn\",\"oBcs8GLX2ZFLXQy8y\",\"2QGRoQn2dRq3scu7k\",\"oHbErJxjYJhD66d5w\",\"dik7wis3hBJJBkYwK\",\"ta5CrWnBCRusD2WMo\",\"yjtdwc2AC4jA2RWtn\",\"TPhfpB5tzQWSSn67n\",\"hkJGLuib5md8vZ9HD\",\"DYDJTyGgKFnBRLm2r\",\"RehJGBFS6CYiWdjZx\",\"SkQcb2sRn4as5KpnN\",\"8aEGGQPkGesWwoaom\",\"ffjnHrx8Ym7A7pQWe\",\"iKCnQydNKZp3KoCoP\",\"S6ipW8Xzds8QDszn9\",\"XNi3MX2ENL8j9roTe\",\"kQ86mSGBiBQQvXzQR\",\"g4NCSxxHqHCGMpWwT\",\"Q8L8znnCCXfN3bEtn\",\"Ey9pB2PRqejNubQmf\",\"aKzYNPqBqb3J3ZgyD\",\"FCFbqPKSAajnbebon\",\"cN55Pbcik8wonXDZE\",\"jS9FNSp9XhvmJ2Dpc\",\"q6QsMYNMpPNtmyTeW\",\"XbxHXmh5ZmRN2gw3K\",\"4Np3uu6Jj67L2CxiR\",\"6gS4E2C84vBYTYeDZ\",\"JEAi9mG3vvBomJ3Yu\",\"Lm6ChQCWBmaikmk5J\",\"bmthyKcDF922zNqxK\",\"wNuGsAdwdPtRn9JXz\",\"pWYjN62ZAKQZ7Xp3W\",\"JYvJJKjerbQYjNG9b\",\"KLmLKaJPfsYxp42p2\",\"BrTDhPJcACL2bsrpJ\",\"9bQyb6rW7xfE4vgrR\",\"nq4XLF85fWDdXiKGA\",\"BqT6sMHBAjkw4hjG6\",\"zXgwEs94QFkLraLMH\",\"pduNK68oazqQTtbLp\",\"iK4YSmTqnL58ELXH2\",\"8WpvgSbQciTQWdd8T\",\"pn7FezrkZZCui7fkJ\",\"d8qtzoLB264iP8tdY\",\"NB6n3tpfkqBCvbiu9\",\"b3BWzq6Yu8nswak5u\",\"ZrXkPD45QRS4oXJmA\",\"LLehQqK6RjoA3T5BL\",\"MCw7uAcoWcSTBTmr3\",\"Kz7ee56Ht4Ns8JjBj\",\"NcT4jkSw8DsDZxwTo\",\"E5cu6oJFNFDXqae9q\",\"Kh3Pc2ZRusurLaMyP\",\"tpxMgkGSHwBjS95Ta\",\"MFdsMsLxbwSLbjBH4\",\"qD2LrwaDrSdiybLKY\",\"mG8HqKiAQFTdRZthG\",\"SgZ2t9xFuRqdJGofp\",\"okBzYf3Pd9kAYug7m\",\"4fhjJBvLBWh6QeSih\",\"q74iEosGYCNC55s6g\",\"PTDFuxAzou7W6asWt\",\"gXTAie79kiw28tx5u\",\"5Bh7sTaNoKDDbJ8vh\",\"sN9bLNiNtg8o7rzCP\",\"rrSC943cCKNG48sH4\",\"7c7QLhrSPc3AM5EtA\",\"974cv448kw6Wu2JF6\",\"6HgMANhu6WiGyXSGN\",\"oyKcm3zqdy8Ko5P5d\",\"wRttWTM59y8m5mx7x\",\"oXdhczMThyirgM2eN\",\"dBzwBtRjZqB98DJeB\",\"pJj86xc32Bs7Frxvi\",\"o4ixjQGSaYqA2JoM4\",\"2EbDCCJJvCfKkbYia\",\"cAP3n5NY64uoMwzRR\",\"rEecHXXCTwgG5wWNA\",\"qQQ4hCQpzitmHSkjS\",\"fbagSSAGD2gAfNJZC\",\"GcR9CA587pfQuWHyB\",\"RGMbFMZXJr7DhcAJy\",\"yod5YhKtPqw2GfG9B\",\"PBn3fhAqsEqHEHq3E\",\"uX3EL4Qha99wBkozM\",\"J3upzLHuEwXH7Z2hx\",\"g9FyJ8yeT9ic97Qp2\",\"jL4y5fTJAMBjhZmko\",\"GqErHwe6rLZi8SRFL\",\"vfTKm6ChiZFd3cDDy\",\"Fb2wehA7QgTFWry2x\",\"oYyNMcQk2NfN2HLtW\",\"mzsaCBQP3e6YourDN\",\"2QziknsznNeMPRh3g\",\"BrW5A64EAFqCKXoaz\",\"dky93oMkJsJjEJKk2\",\"ga7aTTEThzsELuC2j\",\"dYPkStFnLvAMsHSzZ\",\"4fjSgcqhQQZM2ZFRP\",\"DPi9QGLctq2y76KuE\",\"YkWX8KxYQCcH7qqpC\",\"DAhoDmrLmkoRsJhRx\",\"xSNdn3XovWh6c6Bjd\",\"HuNF3xTBzmatyGSTm\",\"yTtSCvGPyYna6JuRC\",\"Jqk2uJZZxEv5wZFze\",\"9vP9Sg4nyzQT4ED9C\",\"uzuMpnWZcTHfBBg4S\",\"FuYTQcDNjct58rqPa\",\"fTNQmMvTZhhiGBCMe\",\"W4cLjos2dNMkKzpXX\",\"wjc4iejpErBhxWwHo\",\"utTuvGdmu2sBHWBhQ\",\"4ArGCifHnsz8p525A\",\"BYX5hfAtMQMbxTNSx\",\"5XiuAqicKD4hBdu63\",\"nJXgbSQozcoE8Wn4N\",\"BMJffXrypJSAzTG7w\",\"5zGMciq3fB4aeu9uj\",\"C2AfMipCicfD58WJ9\",\"DxZ8pZSZ5hftimzgN\",\"DpnYcMphntjsQ96qg\",\"nFbmNzMQ38TncmfQX\",\"CLypXaZksY99mpRCm\",\"5hQnRWiKkhgKJXNMP\",\"Lg4t6SEWgtYz4u7Cj\",\"DqNQn9Jsxcu5HijKE\",\"fKsHKQ9ZTyEgmcQmQ\",\"whm4vkxLMtG9YyobP\",\"FRv5HToEaZ6iRM7T5\",\"F939uec2dYtYyNYy8\",\"5S9nX4rKsnCcnv4Cz\",\"q7YAahG8D2vWsqXdM\",\"iF4tdvn5sA9CM4T6T\",\"Ds7L5bksw2QRHjrKL\",\"pveK5gtGcm8k4wScM\",\"3Yi5XcssvCko2iRgv\",\"XeNskNoh5DcHuKTWX\",\"utdj2v4ruJdN644DR\",\"buX4mCQhtXCfBjeno\",\"rK3xSCovoqjmkgBL9\",\"no46qNkTbNeHepe64\",\"YmQb9Mo4Xcg2vzgbn\",\"iyhpLuTsB9XSSgeAD\",\"CTKmXtrqDYqJBnuy8\",\"tW7TaC7bjNajLGH5Y\",\"97mMkvdDxbhkQXNPp\",\"qTQGbqpJsx3SRcHZq\",\"5HTSi5wQNAdLm57LB\",\"MXGuntvz3byrP6WJc\",\"Fk9kLwoG4Brf4KsKf\",\"Yp4Jtxj7pHqZjheN7\",\"oDN67zoApxcztnYdu\",\"eYfPWvZwnJQkHbSTK\",\"StNu7DPyTgEStZsMY\",\"2HfNkb2SoqdyjKW3o\",\"vCxuabDxEv9YC3Szb\",\"pCMhfoZ5c6eBuCqbp\",\"YRAzEBJoLvSaiPtYx\",\"BNEcpQnAnD7ceSAZf\",\"AFfw7cGg83uYk2Miy\",\"srJ34BaybkQh3qRkM\",\"DkeEd2uhXypnPDnNT\",\"GdKtjPh8TcfmJuduv\",\"B8n7KqbvEDjZzgj2D\",\"LCuvvWMwiGuqTwNRi\",\"HScG5LPE9vGdtonTq\",\"q9FfWNiMDKRiaCJ5j\",\"iaS9igNEGvpuP8rHs\",\"F7wta4nHmabMr9dfd\",\"axdSNLZpiCDF8RS6n\",\"M2gFMJkocQSY6bsFR\",\"wypdvuJQZB2TFyb2g\",\"pPpmP7xeJzGgK362R\",\"w3QDkmjZj2dAFDsjq\",\"vyXXRaCK8jXica5bf\",\"ycNxq43AahfbGowWz\",\"ByEv3YrfuoBTdrSsb\",\"HBuJYgW2eRBJp9FoG\",\"DsQHMCcrrCqj9bNXg\",\"64r4czSpFCQDDjQ2R\",\"8fprXsaRK3dwGsYMX\",\"CL5TfWK8zpG5LyfZQ\",\"dHbHfmTX4Q8WZoFDv\",\"MnHeupfsimBGDM6eb\",\"gHTctoJxatWhhmcLK\",\"ujeJFxJkW3axprckz\",\"AsYbgoqqzrM3rnH2m\",\"KFcjn9caeYx6nEPek\",\"eWwxkMoC6nMDYwvre\",\"8uiLiJcmWxWe6qw65\",\"XD5nmvKQchKezPXhy\",\"Po3v3dHCk6wYGKMwi\",\"ghMkPtdFCpM6w8nax\",\"BJp2WkwLWGHHB5oQW\",\"7dQYiDeTcMztbGyso\",\"qAby4AWXmTNeusvg3\",\"gjiu8kLnHYxe4HoBN\",\"NrRa4TS6uZR9xuXRt\",\"CKHKhvJcq9jNMqrmd\",\"8PwfYqoDQFThzNtvf\",\"c2q7mY39z5JPEMCaM\",\"66a9xX73nmTEuKs9k\",\"vCeeMuYDbz3MB4vsk\",\"X4rzfxGgxx6CS7Bpz\",\"CHvzhtXnv8HTbPQ56\",\"9s8grMKsyuYgs2YeP\",\"DXEsQPsQt95hy2Kcj\",\"m6rqSTqcF2fZyegtm\",\"jud3xBK7tFZqTtR22\",\"iYXdNw7tKcgA3QwBX\",\"c3X859Jnh9pYAk96f\",\"iP7wNofhZXTkJ9ryG\",\"PC3pLs36zNzpRDSuE\",\"6rBGSokJhRBqqgGg3\",\"noKfYkM7cushZ3cxB\",\"jLyw6FdJST5nr8A4m\",\"F3Q4jcEsaZRYh5RGd\",\"echhrZg9xkhE6NnG2\",\"Wpn95NqWxncQrwNgz\",\"CLjeHenWc75nd8bWG\",\"KMze4vkbmvnL2aDsi\",\"hEpaAYfTpAp7xunYa\",\"bur3yQ8s34zqKGEro\",\"4yMggPMnAMqJN6TeR\",\"mvJBakQ35CWAnbbEZ\",\"qZQxPQ2kaNKAMesHT\",\"JwkwCHcXthnGDsdFr\",\"k5mp7Hkg8w5rwiXpe\",\"nkioPNzxxJazSP3Rr\",\"4TmgHkn5vqyHK3sYC\",\"nRN22WPbeL263WhzS\",\"93ADqsBQnwTEosjbq\",\"9Ly8afdtofp8DXzrt\",\"yMog4drzvs3MPmihA\",\"YXQvrgeiGzLd6cTW9\",\"jkbavR2ATFJcpmo8M\",\"T6Rm8mREPMZSftzrC\",\"iBHx7eL6anoBnF7yQ\",\"7txFzDQ43vJ7qCY88\",\"ZXWDtCrM9ev3439oi\",\"eHcgvkTGsH7ZziqBo\",\"jNE5AHcJQWXz7efuP\",\"eW9R2SCoYnY8HBAdL\",\"2MjzJ7yxh3eT3xbng\",\"FxbTzThBiTnRzfirA\",\"kjvgTyRFyKHv44DcH\",\"g2mqHYvQmr78mET8i\",\"NGvCPuMiAP3xrRLfB\",\"Afnps7TJQuS9sipMb\",\"TCvpT4EPb8qNssNB7\",\"gKnWjDjwrJh7MK2df\",\"pwWtbXEjzuvrhEGwt\",\"zC8WrPp5BC6c2exrW\",\"sbJcFfQjQ59Wfg4Cd\",\"rCrbqMiaGPgHYTNxu\",\"d9LBRxvADNBB5QJMB\",\"vgpE3EBdmT2AXMZ9F\",\"9LrF5o2TK2iE8BZJh\",\"rhS8qXRjZcpDXkwnE\",\"dzS6WBTMHyFEag6Fp\",\"B4y8aoyXJtskYPFEL\",\"FMyZPN6odEFtfuimF\",\"Qyfyyw6oC4EHAndzo\",\"4Lwjr34ypKNQNQCar\",\"RJJm3dizCfNgoFtw7\",\"CdXigydGTBLgA577m\",\"vAbK8sCfKyFC78HYg\",\"gbGzZz5Yq5hT357v8\",\"acENs2fSF9d7hkTZx\",\"FiaTpm7ehfDv43wSG\",\"5QN8R22z43SrwoHDz\",\"Wi4H6ayKsNDWWQCG5\",\"GgQqni8TkbqEBGcsy\",\"QN4FPwhiak7Pf8kn6\",\"sMcFMPkMJC4Kh6ymj\"],\"total\":514,\"quality\":[5,5,3,4,3,5,5,5,4,4,5,4,5,5,1,4,5,5,5,5,5,5,5,5,5,5,5,5,3,5,5,5,4,5,5,5,4,5,5,5,5,5,1,4,5,5,4,5,2,5,5,5,5,4,3,5,5,5,4,5,5,5,2,2,5,5,5,5,5,3,1,5,4,5,3,4,5,5,5,5,5,4,5,5]},\"flags\":0},\"summary\":\"Check the principles of minimalist code in the [intro to the first challenge] (https://edabit.com/challenge/2XLjgZhmACph76Pkr).\\n\\nIn the Code tab you will find a code that is missing a single character in order to pass the tests. However, your goal is to submit a function as minimalist as possible. Use the tips in the tips section below.\\n\\nWrite a function that\",\"tags\":[\"logic\",\"language_fundamentals\",\"conditions\"],\"timestamp\":{\"$date\":1590293196798},\"title\":\"Minimal VIII: This and That\",\"quality\":4.440476190476191,\"family\":[{\"_id\":\"GZhSDwwLwakxjpnoB\",\"language\":\"python3\"}]}}"]