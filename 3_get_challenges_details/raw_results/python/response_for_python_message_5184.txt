a["{\"msg\":\"result\",\"id\":\"1306\",\"result\":{\"_id\":\"AdJNWPbfL9LunsNh9\",\"author\":\"Werdna\",\"authorId\":\"buX4mCQhtXCfBjeno\",\"code\":\"def multiplication_table(n):\\n\\t\",\"difficulty\":1.9853658536585366,\"familyId\":\"9cqcJ8G5jcdD7EeBa\",\"instructions\":\"Your task, is to create `N x N` multiplication table, of size `n` provided in parameter.\\n\\nFor example, when `n` is 5, the multiplication table is:\\n\\n- 1, 2, 3, 4, 5\\n- 2, 4, 6, 8, 10\\n- 3, 6, 9, 12, 15\\n- 4, 8, 12, 16, 20\\n- 5, 10, 15, 20, 25\\n\\nThis example will result in:\\n\\n```\\n[[1, 2, 3, 4, 5], [2, 4, 6, 8, 10], [3, 6, 9, 12, 15], [4, 8, 12, 16, 20], [5, 10, 15, 20, 25]]\\n```\\n\\n### Examples\\n```\\nmultiplication_table(1) ➞ [[1]]\\n\\nmultiplication_table(3) ➞ [[1, 2, 3], [2, 4, 6], [3, 6, 9]]\\n```\\n\\n### Notes\\nN/A\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(multiplication_table(1), [[1]])\\nTest.assert_equals(multiplication_table(3), [[1, 2, 3], [2, 4, 6], [3, 6, 9]])\\nTest.assert_equals(multiplication_table(5), [[1, 2, 3, 4, 5], [2, 4, 6, 8, 10], [3, 6, 9, 12, 15], [4, 8, 12, 16, 20], [5, 10, 15, 20, 25]])\\nTest.assert_equals(multiplication_table(20), [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40], [3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 54, 57, 60], [4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80], [5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100], [6, 12, 18, 24, 30, 36, 42, 48, 54, 60, 66, 72, 78, 84, 90, 96, 102, 108, 114, 120], [7, 14, 21, 28, 35, 42, 49, 56, 63, 70, 77, 84, 91, 98, 105, 112, 119, 126, 133, 140], [8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120, 128, 136, 144, 152, 160], [9, 18, 27, 36, 45, 54, 63, 72, 81, 90, 99, 108, 117, 126, 135, 144, 153, 162, 171, 180], [10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160, 170, 180, 190, 200], [11, 22, 33, 44, 55, 66, 77, 88, 99, 110, 121, 132, 143, 154, 165, 176, 187, 198, 209, 220], [12, 24, 36, 48, 60, 72, 84, 96, 108, 120, 132, 144, 156, 168, 180, 192, 204, 216, 228, 240], [13, 26, 39, 52, 65, 78, 91, 104, 117, 130, 143, 156, 169, 182, 195, 208, 221, 234, 247, 260], [14, 28, 42, 56, 70, 84, 98, 112, 126, 140, 154, 168, 182, 196, 210, 224, 238, 252, 266, 280], [15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165, 180, 195, 210, 225, 240, 255, 270, 285, 300], [16, 32, 48, 64, 80, 96, 112, 128, 144, 160, 176, 192, 208, 224, 240, 256, 272, 288, 304, 320], [17, 34, 51, 68, 85, 102, 119, 136, 153, 170, 187, 204, 221, 238, 255, 272, 289, 306, 323, 340], [18, 36, 54, 72, 90, 108, 126, 144, 162, 180, 198, 216, 234, 252, 270, 288, 306, 324, 342, 360], [19, 38, 57, 76, 95, 114, 133, 152, 171, 190, 209, 228, 247, 266, 285, 304, 323, 342, 361, 380], [20, 40, 60, 80, 100, 120, 140, 160, 180, 200, 220, 240, 260, 280, 300, 320, 340, 360, 380, 400]])\",\"language\":\"python3\",\"quality\":4.722222222222222,\"summary\":\"Your task, is to create N x N multiplication table, of size n provided in parameter.\\n\\nFor example, when n is 5, the multiplication table is:\\n\\n1, 2, 3, 4, 5\\n2, 4, 6, 8, 10\\n3, 6, 9, 12, 15\\n4, 8, 12, 16, 20\\n5, 10, 15, 20, 25\\n\\nThis example will result in:\\n\\n[[1, 2, 3, 4, 5], [2, 4, 6, 8, 10], [3, 6, 9, 12, 15], [4, 8, 12, 16, 20], [5, 10, 15, 20, 25]]\\n\\nExamples\\nmul\",\"tags\":[\"algorithms\",\"language_fundamentals\",\"numbers\",\"math\",\"arrays\"],\"timestamp\":{\"$date\":1615346253560},\"title\":\"Multiplication Table\",\"stats\":{\"completed\":{\"total\":258,\"ratings\":[2,2,2,2,2,2,2,2,3,0,3,0,1,3,2,4,3,0,3,2,2,1,1,1,1,3,4,3,1,3,3,1,1,2,2,3,0,1,2,1,2,1,4,0,2,3,1,2,3,3,2,1,2,3,3,2,1,1,3,2,3,1,2,5,1,1,2,3,1,2,0,1,1,3,2,1,3,0,2,2,2,1,3,2,3,2,4,2,2,1,3,0,2,2,3,2,1,2,2,1,1,1,2,2,2,2,3,2,2,2,3,3,2,0,2,1,2,3,1,3,3,2,3,1,1,3,2,2,3,3,4,2,1,0,3,2,4,4,3,3,0,3,2,0,1,2,0,2,2,3,3,2,3,2,1,1,2,3,2,0,3,1,1,3,0,1,2,3,3,2,2,2,1,2,2,2,2,2,0,3,2,2,3,2,3,2,1,2,2,3,2,0,3,3,0,3,3,3,3,3,2,3,1,3,1],\"quality\":[5,5,3,5,5,5,5,5,3,5,5,5,5,5,5,5,5,5,5,5,3,5,5,4,5,5,5,5,4,5,5,5,3,5,5,5],\"rators\":[\"QRv96jmNaYsWkxQEG\",\"buX4mCQhtXCfBjeno\",\"yyo6YLQN2of6fxp49\",\"iS5BrkGLzJyPK7nKt\",\"T6iBEE2jp7f7iEF2P\",\"iojEnnY9FsMfYzp6f\",\"FEYpu9RWysAgW3XnP\",\"s5M5RvgqR9BhB9JoC\",\"btkMnPkySbodncmaq\",\"Wpn95NqWxncQrwNgz\",\"no46qNkTbNeHepe64\",\"8PwfYqoDQFThzNtvf\",\"cAP3n5NY64uoMwzRR\",\"hnyhBFWwNCz9mDfSi\",\"p8qqFdJ3FSk5x9z3G\",\"oBcs8GLX2ZFLXQy8y\",\"KJCDwGkoXh8qtbbKr\",\"BrTDhPJcACL2bsrpJ\",\"u5u2YpHXiNgzDNJdX\",\"cR3ibTMxLyEdDFCHY\",\"2PufnQcsHsfymufX3\",\"i5vBMfK6ciHrsREgE\",\"R29kgJ9M7R4qqwjcE\",\"gb9rvGus2Jv7bjZSs\",\"a777e8chPvJkY3tKa\",\"ey3CASd6Je5LEJzfB\",\"YcCLwitFMAEJSnxAW\",\"DPi9QGLctq2y76KuE\",\"3LiSLdtN58n46NEqg\",\"PXAcsKkssS2yLyDv2\",\"mDWNyaaQ9hvPCRzSd\",\"srJ34BaybkQh3qRkM\",\"9ivvGvJGvtQfigQaZ\",\"gJYuGdkXEWWmGRLzu\",\"PWgzeK859suojbrRx\",\"8JyqsSbN2FJXPr3cw\",\"zd9FLSzsGz3evKafy\",\"K6MfKMytoJJuSGewP\",\"rfyEkETeoS96QNH4e\",\"GGdmhAvxXhqhhibJN\",\"mfm3gB39arY8Rjb2y\",\"cAK293MYZKgks2AGy\",\"uGuS9YRXW2nj4p6zf\",\"AQSqD9oNv2uPfxZCR\",\"dYgxQgSzJNMnWzhhE\",\"ccHA9g8HcfftzPbDy\",\"LFSASkxgw9hr3KqmC\",\"p6CqBEdjxfdrsRSrs\",\"yjtdwc2AC4jA2RWtn\",\"55RQznnuTGpsj3EXd\",\"xiq3roqB5QRK3mhdr\",\"ZFaCSKZ6HnmKtRe52\",\"PTDFuxAzou7W6asWt\",\"ni44YEcaQqr2dFcdi\",\"Yp7uvStL97cC9fKkY\",\"XNmN6ztj36a7eChbD\",\"dJzNF59j2p8jWZxiQ\",\"Fe8cc97fLjypbGJrn\",\"yFq7zMbcdkcjybCaY\",\"ahM96sinR3wczz9b2\",\"Ds7L5bksw2QRHjrKL\",\"3KkyQm77zsew58Dc2\",\"XHShZ3WMPgGEA2vkR\",\"J3upzLHuEwXH7Z2hx\",\"qnAa7edbj5b3iAN3Q\",\"wLDZW9Gv28radJb7Q\",\"M6ZmNLKRPXFva4Syr\",\"5kazQPq8ZdDsx6kjf\",\"8FDr3RAEEoBM65b2W\",\"X4rzfxGgxx6CS7Bpz\",\"gJTweFQwz5cvFszMb\",\"rWXvYsdCzQZqJWNeS\",\"bvmTE46bfcM4ogj34\",\"hsrNYf3WbexXJKhCq\",\"wXMJMsQtoGWL8chxv\",\"euPBBaYXyS8RBr9KB\",\"3XtzX78oLzNzR2Rc7\",\"2xzxyjwpLAG3iKddv\",\"4RY3zj9C2t8GGefhi\",\"PC3pLs36zNzpRDSuE\",\"fSQSHjW3e72MrWxbD\",\"J5T8gZqiZXFuFDTQ7\",\"xn7uGNKeAwPEkP9oA\",\"4Lwjr34ypKNQNQCar\",\"8BFSTCnoe2QggN64c\",\"beAPM3zbMux5KcMk5\",\"CZeLyDD2BQL3jrzzj\",\"Xr3mZz2vYLtmjYPuQ\",\"nc7bRhkxgKyqusYe3\",\"T2vhHPhRR96hRizq8\",\"MKT7khMBGXzA22ykf\",\"o4ixjQGSaYqA2JoM4\",\"dHEeK62j7f5ggbRBy\",\"CHvzhtXnv8HTbPQ56\",\"Qad4u2BjtZCtECofd\",\"DEDniTrstQYGounXT\",\"CDtzWARyt8eStMWjP\",\"RvcdfoxNfmbsu6SjX\",\"SasfgLR4EvQa4sZxM\",\"Cuy7McJ5y8BkXRRk9\",\"dbgSzLXdovfM4xt5y\",\"9pzFiFK3ANLjQfnr2\",\"hcAeJ5mhA7KTA6wkd\",\"z2qiAB9MQH9KpJmLf\",\"rEWoqhFPwFqowtYGW\",\"edBvcEj36tm5emqdc\",\"tayzqdMb8Z5uBafKN\",\"qNszsXx28cTxvGSNj\",\"jkys684AAfPRxrYaD\",\"7saeRdm8vvq3szupH\",\"KQTgsjJyfh5KZ7qca\",\"fYTZpCSZea6hqov2M\",\"3Rz6J6NoqreBcx8zQ\",\"AasGs8AeX9Lcb9xJn\",\"izFKigauWcTHuDDaC\",\"3yce54Tx7JvaT48Bo\",\"dtNjXKYpxcszS3mye\",\"H4LqzfSad6d4BCgwy\",\"MEF3fmt926cGmTBKa\",\"rkSWGGPmrHZ5J3Ndc\",\"vLxLKyNwXsJCGkCMB\",\"pHE5CXEXN8EQ5HrTx\",\"aEm3Wvj2rFYRL8Lrb\",\"ENsSYogEHHeDSrFod\",\"6238R5x5YgbyTTrpk\",\"uLNHHfzXqBjWAM7Af\",\"tAF9Gf6PiGogbZuWs\",\"yhPBcN6xM7xdZJH9x\",\"vEoXxRPrKogr2qx9m\",\"hPMgnPPjNSfMkH46u\",\"8sNv5PTHa7XQ8bNqR\",\"muQCKmimwtNAdS8rp\",\"TbWbLfNHfJk4S9dSx\",\"ctbThYbufFCYbRK4f\",\"qS5Xbh5sBC28e6j7E\",\"4v25hXA4xfWaoJxuN\",\"R6YxHWAiLgKwy5YvC\",\"a2Kmh6ekWqQQooHiQ\",\"E6sRiQd5xuyefLimm\",\"gc5TFLSpBMJejuWZ9\",\"hkiz2Nv927cYGrA86\",\"AmjTfojStnx98dPoL\",\"jWbd7SYDzLPjc9EDh\",\"etoxSpG4fGKThLozM\",\"HqmxnQJM66Y57twhn\",\"exiy4CeGedb9MkrZW\",\"mfsaETo7uA4x5vqLD\",\"KB8GdTPpWbXBDmm6L\",\"fbr22rabEJMfBp7vD\",\"2K6e6SvmifdM5zNhs\",\"kjvgTyRFyKHv44DcH\",\"oFEG3RDs5J99JYtkZ\",\"Kv92AoBe3KjTCfiBD\",\"w2HhxvSLmDhaGCAjE\",\"WxEgz5eodosFrMT9p\",\"EfxwqhYdapX3dMQC2\",\"fAD6saKA2WofyKohi\",\"9NcZ23yufhtou68dT\",\"XjyaCd8bviTitHTwa\",\"cdeGMzvSA6KYGiEd5\",\"XdaQbHty4sZkvopco\",\"jLBFqMwTk54AsnpPh\",\"KKcx2rgYY5MddqFfK\",\"m7kMANAKbQxHfueLC\",\"DGBrijLJBFFj5ayt4\",\"XCnbSuZF8gdA7Lc8o\",\"raLyeASaffgbM8tC7\",\"ybhaHrXkEdoZEfami\",\"i5Nn7L8wRjX4fAZNN\",\"kXEfD7xxEyWd7oxxL\",\"y8WESEqa8wiQSCkjP\",\"gKnWjDjwrJh7MK2df\",\"RoGGD5cpHb4ftdLDv\",\"jCjCvyhqhpebkJn34\",\"Jqk2uJZZxEv5wZFze\",\"9gJsF5apWJGWZJprn\",\"8nE8QHnFYsHCFebte\",\"5HCu9Ydd86QgHDRNP\",\"mvJBakQ35CWAnbbEZ\",\"5QN8R22z43SrwoHDz\",\"AFfw7cGg83uYk2Miy\",\"JhX7jvtpwNyxcc39m\",\"utDMr3chbvFzGpKTC\",\"rcjxEudaZ49oFpBma\",\"eMuCpJ2spXWkJjWNz\",\"yod5YhKtPqw2GfG9B\",\"fEHCQXgi8iZMPzwnu\",\"pQGniihwCD4cDu2yZ\",\"2qtde7moqrzm7B4Ht\",\"Bq9cF6XoaLhm9qESD\",\"nkH3HfJXLMNcBMM79\",\"sbJcFfQjQ59Wfg4Cd\",\"eHcgvkTGsH7ZziqBo\",\"mw9464S5dnenqzvpm\",\"GqyxJdWTEwib4Bbq2\",\"yTtSCvGPyYna6JuRC\",\"rhS8qXRjZcpDXkwnE\",\"qaR8DnWrTk8Mus5Q2\",\"7SSphr2XXj52ZSDo4\",\"aS4tXPbBm7szmcoLL\",\"tTe9GMaybBfy6W9Fn\",\"2fxapKr8XGdNeaKi2\",\"TSph6PLk4tbBAWWHe\",\"xdgy7nWSKCekXnaJM\",\"Qyfyyw6oC4EHAndzo\",\"6dqoF6LmEaRPsCSpT\",\"5Dd7XwALvvMMwS4Fb\",\"jhumkPee7pyyMkw9J\",\"RnY25enEBE8T9P5GS\",\"TL2pcbkoT8sfE7ksY\",\"mTF6oWX2WhFR4M3QK\",\"7ajSwbNMNp9ggPewT\",\"FNi2H5fKc5EAQ2Hcq\",\"jkbavR2ATFJcpmo8M\",\"RbRoa7RJ5nEooSYd7\",\"DdHnWE8gjciwCXhSL\",\"P7NmFbCJ5offXMRvB\",\"bc4CeLy4x9rNsa9f8\",\"C8Gd66wwGagHmj2t8\",\"rC8zWyyts5PqESEhP\",\"RZejvpBSigGCH9FRS\",\"i4MfM38aiCeFAiWtz\",\"mtZganfNDvmTs8HcZ\",\"8NvGXadvQEppXXZD7\",\"jrd2YfEKXevtdYqyJ\",\"kqnAtcQb9YseoNB8g\",\"K9nJGX8i6Wt8Gn7Ty\",\"dSd7wHgXGQeG5BQ2P\",\"Jux7F6Jb8Lc9yBiC8\",\"gpGXTvjS2HrY9Skq5\",\"bNENiqqEDxM5a5JBf\",\"23oi2a3vQwhtLEbSj\",\"f7X4ymW7D3Gfy8Top\",\"E2hpke7mHxAWsw5t9\",\"kzaJ35PAFjDKmbsoH\",\"3nied3n8KG8RSNixH\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"jbf8yyjMnN7bt3H5s\",\"language\":\"cpp\"},{\"_id\":\"EpwHHdFF6EABASmhL\",\"language\":\"javascript\"},{\"_id\":\"YTCoxfTBcnfGMPSq7\",\"language\":\"php\"},{\"_id\":\"AdJNWPbfL9LunsNh9\",\"language\":\"python3\"},{\"_id\":\"K62KPq6oHhyvgwT8F\",\"language\":\"ruby\"}]}}"]