a["{\"msg\":\"result\",\"id\":\"1795\",\"result\":{\"_id\":\"YLf984Eod74ha4Tok\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"def leap_year(yr):\\n\\t\",\"difficulty\":2.39,\"familyId\":\"JrLyALRhCDmq4G5ap\",\"instructions\":\"In a calendar year, it is exactly 365.25 days. But, eventually, this will lead to confusion because humans normally count by exact divisibility of 1 and not with decimal points. So, to avoid the latter, it was decided to add up all 0.25 days every four-year cycle and give that year 366 days (including February 29 as an intercalary day) and call it a **leap year**. The other three years in the four-year cycle would only contain 365 days and **wouldn't be leap years**.\\n\\nIn this challenge, though quite repetitive, we'll take it to a new level, where you are to determine if it's a leap year or not without the use of the **datetime** class, **if blocks**, **if-elif blocks**, or **conditionals** (`a if b else c`). You also may not use the logical operators **AND** (`and`) or **OR** (`or`), with the exemption of the **NOT** (`not`) operator.\\n\\nReturn `True` if it's a leap year, `False` otherwise.\\n\\n### Examples\\n```\\nleap_year(1979) ➞ False\\n\\nleap_year(2000) ➞ True\\n\\nleap_year(2016) ➞ True\\n\\nleap_year(1521) ➞ False\\n\\nleap_year(1996) ➞ True\\n\\nleap_year(1800) ➞ False\\n```\\n\\n### Notes\\nYou can't use the **datetime** class,  **if statements** in general, the **conditional**, or the **logical operators** (`and`, `or`).\",\"isHidden\":false,\"lab\":\"from inspect import getsource\\nfrom re import search, MULTILINE\\n\\ndef no_conditionals(fn):\\n  try:\\n    src = getsource(fn)\\n    return not search(r'if|else|elif|and|or|month|day', src, flags=MULTILINE)\\n  except OSError: return True\\n\\nTest.assert_not_equals(no_conditionals(leap_year), False,\\n       \\\"The use of 'datetime' class, 'if', 'if-elif', if-else', 'and' or 'or' is not allowed!\\\")\\n\\nactual_param, expected_param = [\\n  2016, 1996, 1600, 2020, 2000, 2008, 1521, 1800, 2007, 2002, 1979, 2006], [\\n  True, True, True, True, True, True, False, False, False, False, False, False\\n]\\nfor i, x in enumerate(actual_param):\\n  Test.assert_equals(leap_year(x), expected_param[i])\",\"language\":\"python3\",\"summary\":\"In a calendar year, it is exactly 365.25 days. But, eventually, this will lead to confusion because humans normally count by exact divisibility of 1 and not with decimal points. So, to avoid the latter, it was decided to add up all 0.25 days every four-year cycle, make that year to sum up to 366 days (including February 29 as an intercalary day), thus, called\",\"tags\":[\"algorithms\",\"math\",\"numbers\",\"validation\"],\"timestamp\":{\"$date\":1595279039041},\"title\":\"Is It a Leap Year?\",\"stats\":{\"completed\":{\"total\":113,\"ratings\":[4,4,4,4,4,4,1,4,3,1,4,5,5,1,5,0,2,2,3,3,0,2,4,3,3,3,3,4,2,2,2,2,2,4,0,1,0,4,1,4,1,3,2,3,1,2,2,0,3,0,0,2,4,2,4,3,3,1,2,3,1,4,0,1,3,3,3,2,1,4,4,2,1,4,3,4,0,2,2,2,3,4,3,3,4,0,0,2,3,4,4,2,0,1,2,0,0,4,3,1],\"rators\":[\"a777e8chPvJkY3tKa\",\"aEm3Wvj2rFYRL8Lrb\",\"8PwfYqoDQFThzNtvf\",\"mDWNyaaQ9hvPCRzSd\",\"s5M5RvgqR9BhB9JoC\",\"aCNWav8S8Try9RkC6\",\"vTfyrr4pGddp8rbXc\",\"eoepTq5ES5tfgY9XT\",\"feC3ae6ShoSBGZz8H\",\"5dHucvf2qBYyKim7X\",\"u7i7WPM63n42r8R8o\",\"4fhjJBvLBWh6QeSih\",\"GGprTwrkjuccmrQRg\",\"8WpvgSbQciTQWdd8T\",\"ZGGFCatuRdzRJJPnJ\",\"SgZ2t9xFuRqdJGofp\",\"3rCGowf2GK7AZTdFu\",\"xn7uGNKeAwPEkP9oA\",\"85PAWNajZLAezxkiE\",\"eHcgvkTGsH7ZziqBo\",\"GMbZRE4gvgfkDxSvY\",\"hrQQP34bjyKHNpqyJ\",\"tAF9Gf6PiGogbZuWs\",\"9CyzZC65NoyiHHxSm\",\"r8f3uJ4DmJYgAv2QK\",\"KZ2xddpM2f9JRaryB\",\"gJYuGdkXEWWmGRLzu\",\"HF28xZKSLM9wEuqNg\",\"d8qtzoLB264iP8tdY\",\"gb9rvGus2Jv7bjZSs\",\"iS5BrkGLzJyPK7nKt\",\"Jqk2uJZZxEv5wZFze\",\"FEYpu9RWysAgW3XnP\",\"8sNv5PTHa7XQ8bNqR\",\"c7uBxu2rgY77H5d79\",\"p8qqFdJ3FSk5x9z3G\",\"fSQSHjW3e72MrWxbD\",\"Wpn95NqWxncQrwNgz\",\"XujK3rHd3JcM9TLJy\",\"iojEnnY9FsMfYzp6f\",\"J3upzLHuEwXH7Z2hx\",\"NzbRqGWspQnWMoDrF\",\"yjtdwc2AC4jA2RWtn\",\"HhYCji7QqauyN3A7v\",\"2PufnQcsHsfymufX3\",\"fQhC97Xr7LpN5KvMt\",\"MXjxGML2X75x64vJo\",\"yr822PZmmiDDenxpB\",\"QRv96jmNaYsWkxQEG\",\"AasGs8AeX9Lcb9xJn\",\"P7NmFbCJ5offXMRvB\",\"H9KZi2cjt4FwH7qog\",\"fznzd3qnvtbFkkizz\",\"wyzhJn2qkdBr4p6HA\",\"PmRyaLmhAF4MMLBtM\",\"oBcs8GLX2ZFLXQy8y\",\"gKnWjDjwrJh7MK2df\",\"T6iBEE2jp7f7iEF2P\",\"XKzBCTNehswqLjQTW\",\"AQSqD9oNv2uPfxZCR\",\"DrTeBk3bpLqhsLS4g\",\"nkL2knkcNaiHCerW2\",\"PjSSjHCqbEYr8mu6u\",\"DPi9QGLctq2y76KuE\",\"yTtSCvGPyYna6JuRC\",\"aS4tXPbBm7szmcoLL\",\"yMfpc4AFBxD8jL5iB\",\"ESacWhHCTP8aZr9zt\",\"EM4TC7L4yp6TQWZwp\",\"rGiC4cM7RDEtQgZ3X\",\"tcNjL5F6ugAHDxKBW\",\"9jyvZPJABwGdxSFtg\",\"6Dxo3b5vuiwNmn9zC\",\"JKb5rhL6DKcCAypF9\",\"GTKsdeEihE636Le9i\",\"5iWTiispXnGRokgJr\",\"iC3KzMHEFWKi2G54H\",\"KAExX4HeoYTdSjKpo\",\"NW464tdaW579epjg2\",\"3WGMA5SXWprGpF4jH\",\"jWbd7SYDzLPjc9EDh\",\"PytNZK9mNiRiZxPrm\",\"iqmPb9JuJDgTFeR8Q\",\"sMtBQu4wRKGDJrBwW\",\"5QN8R22z43SrwoHDz\",\"KfEQs9pvB9vtMdSMr\",\"g55dM96PRNKmY3Nws\",\"23oi2a3vQwhtLEbSj\",\"BByKDngfPvW6w4m7d\",\"6kN9QmPqw9Xyiy3Zm\",\"Rk54WG323KeT6odSb\",\"gvhuWxKz6du8MJGZY\",\"Fa2FjBNgP5NpX2CNc\",\"oyMJRqTeBEyqpMwP3\",\"3MQ4NCL3pAFKdE9fo\",\"cyh7fb2bqH3srwd5W\",\"GNJMTgowjwubpi6XE\",\"MdPXcNRBtdHqjAzLp\",\"rhDc5NhZgGorv9FJX\",\"NjwcQFFSy3KEj2dbm\",\"iqhXmf8CfYMRJYX2u\",\"CfK2BJP3gYypfxQzS\",\"8FNaH4YaFn8isxT8R\",\"t8yxSkh3oys53ktif\",\"rfyEkETeoS96QNH4e\",\"9pzFiFK3ANLjQfnr2\",\"9NcZ23yufhtou68dT\"],\"quality\":[4,5,5,5,4,3,5,5,5,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"a777e8chPvJkY3tKa\",\"quality\":4.666666666666667,\"family\":[{\"_id\":\"wqvzvSroyNwifv35B\",\"language\":\"java\"},{\"_id\":\"nNtYHuSDgnCq8gFvh\",\"language\":\"javascript\"},{\"_id\":\"YLf984Eod74ha4Tok\",\"language\":\"python3\"}]}}"]