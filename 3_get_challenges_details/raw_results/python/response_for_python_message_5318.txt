a["{\"msg\":\"result\",\"id\":\"1373\",\"result\":{\"_id\":\"9SLvXXz8ED7B6joJg\",\"author\":\"skrzyniarzp\",\"authorId\":\"66a9xX73nmTEuKs9k\",\"code\":\"def lets_meet(distance, va, vb):\\n\\t\",\"difficulty\":2.0275229357798166,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"JAyBSczju54rd4rGS\",\"instructions\":\"From point _A_, an object is moving towards point _B_ at constant velocity `va` (in km/hr). From point _B_, another object is moving towards point _A_ at constant velocity `vb` (in km/hr). Knowing this and the distance between point _A_ and _B_ (in km), write a function that returns how much time passes until both objects meet.\\n\\nFormat the output like this:\\n\\n```\\n\\\"2h 23min 34s\\\"\\n```\\n\\n### Examples\\n```\\nlets_meet(100, 10, 30) ➞ \\\"2h 30min 0s\\\"\\n\\nlets_meet(280, 70, 80) ➞ \\\"1h 52min 0s\\\"\\n\\nlets_meet(90, 75, 65) ➞ \\\"0h 38min 34s\\\"\\n```\\n\\n### Notes\\nSeconds should be rounded down to the nearest whole number.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(lets_meet(100, 10, 30), \\\"2h 30min 0s\\\")\\nTest.assert_equals(lets_meet(33, 15, 20), \\\"0h 56min 34s\\\")\\nTest.assert_equals(lets_meet(250, 60, 80), \\\"1h 47min 8s\\\")\\nTest.assert_equals(lets_meet(125, 55, 40), \\\"1h 18min 56s\\\")\\nTest.assert_equals(lets_meet(0.6, 10, 15), \\\"0h 1min 26s\\\")\\nTest.assert_equals(lets_meet(0.8, 23, 18), \\\"0h 1min 10s\\\")\\nTest.assert_equals(lets_meet(0.72, 8, 12), \\\"0h 2min 9s\\\")\\nTest.assert_equals(lets_meet(33, 15, 20), \\\"0h 56min 34s\\\")\\nTest.assert_equals(lets_meet(360, 80, 64), \\\"2h 30min 0s\\\")\\nTest.assert_equals(lets_meet(10, 45, 42), \\\"0h 6min 53s\\\")\\nTest.assert_equals(lets_meet(90, 75, 65), \\\"0h 38min 34s\\\")\\nTest.assert_equals(lets_meet(280, 70, 80), \\\"1h 52min 0s\\\")\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,3,2,2,2,3,2,3,3,1,1,2,1,3,3,3,0,2,3,2,2,3,0,2,3,1,3,1,3,2,3,3,2,1,0,1,3,0,3,2,1,3,3,1,2,2,0,2,1,3,2,3,3,3,0,2,5,1,0,3,3,2,1,2,3,2,3,1,1,0,0,2,2,3,3,3,2,3,1,3,3,3,2,3,3,3,0,0,2,1,2,2,2,2,0,2,2,3,3,3,3,2,3,1,2],\"rators\":[\"ELfyvLSAPDbhksDBb\",\"rgvAJFwfCeYoYnFTK\",\"aEm3Wvj2rFYRL8Lrb\",\"n2BRY9X8899dcG8Bw\",\"Nb6LYPoQP6KJZt8mz\",\"ZNnsMeNkdDhHjSrZb\",\"YRstQuthRkFeBiXug\",\"8PwfYqoDQFThzNtvf\",\"s5M5RvgqR9BhB9JoC\",\"gb9rvGus2Jv7bjZSs\",\"wS2o3x4nrsadtC3xP\",\"4rwxLqLs2mNZNg8NB\",\"So6PHm74mfJuY2WTs\",\"euPBBaYXyS8RBr9KB\",\"zTZctDDRMSeqYjKQY\",\"GGdmhAvxXhqhhibJN\",\"gJYuGdkXEWWmGRLzu\",\"hnyhBFWwNCz9mDfSi\",\"4yNLEwL2rsx4EE5Nt\",\"HF28xZKSLM9wEuqNg\",\"DEDniTrstQYGounXT\",\"Ecg4m7srYGgZsb4Ck\",\"aCNWav8S8Try9RkC6\",\"2innwjWqxJHo4eRGh\",\"bJxaKHJqR82EWw8Su\",\"yr822PZmmiDDenxpB\",\"u72ipcjbNDSkWX8Gw\",\"eJaYDm3afLv3vNn7M\",\"TKwrBoDs4EbRibA3h\",\"iojEnnY9FsMfYzp6f\",\"ekQh3jzgGLsEMbKo3\",\"KZ2xddpM2f9JRaryB\",\"zZDaXBxMzTCBhNkgL\",\"HqmxnQJM66Y57twhn\",\"yjtdwc2AC4jA2RWtn\",\"iS5BrkGLzJyPK7nKt\",\"hRiMXDZNAzyPd5tpt\",\"ji5f27FPz4wRRF6Ls\",\"skWLrSCPagcDN9oay\",\"KHnmawdkEQBHwjEeR\",\"BsQtg7fnYvbyQRBBZ\",\"tAF9Gf6PiGogbZuWs\",\"fGN2frPqk4Wb3ia9L\",\"jBR47vA7HwAZqp4QA\",\"Jg8ZSRXe3NoDMCqGu\",\"axdSNLZpiCDF8RS6n\",\"GEvSGXDkk7pACfYri\",\"8BFSTCnoe2QggN64c\",\"Yp7uvStL97cC9fKkY\",\"P7NmFbCJ5offXMRvB\",\"SKeSSfqSmCk65vjYh\",\"8JyqsSbN2FJXPr3cw\",\"pmgFEciNrd3ES9tuu\",\"u3exaHuZqYBnDBZh2\",\"DrkR35NqnP9NDLbq6\",\"J5T8gZqiZXFuFDTQ7\",\"8mw8fh6iCtdmR5uK9\",\"KBxTPknCRmB2b5y3i\",\"mG8HqKiAQFTdRZthG\",\"9cWTAMQmN7PZMqdec\",\"5taT2WDkibvXLHYyo\",\"8FDr3RAEEoBM65b2W\",\"xn7uGNKeAwPEkP9oA\",\"8fZxjQfuXw5HMSRJM\",\"QCvvnevRLhBY8XBJk\",\"w2HhxvSLmDhaGCAjE\",\"4fhjJBvLBWh6QeSih\",\"ppxNdL4gjANz8oJLQ\",\"BrTDhPJcACL2bsrpJ\",\"tYGPPYqpwfGKnkZne\",\"R4dQtQjfHcPWyRa85\",\"EMJ6uvBZkie429gdg\",\"tpxMgkGSHwBjS95Ta\",\"GGprTwrkjuccmrQRg\",\"BfwbCTRtW4wG2bsnH\",\"QRv96jmNaYsWkxQEG\",\"6MjSiiBLPcvXbXcaZ\",\"rEecHXXCTwgG5wWNA\",\"q7YAahG8D2vWsqXdM\",\"J3upzLHuEwXH7Z2hx\",\"gXTAie79kiw28tx5u\",\"oBcs8GLX2ZFLXQy8y\",\"8vyPbfg7hYqRpCwoq\",\"KEmTti9Tza8A2FLQW\",\"bccs9koJxyQ9XNiLC\",\"fznzd3qnvtbFkkizz\",\"7scpcTEp3SEx5Wjg9\",\"Jqk2uJZZxEv5wZFze\",\"cAP3n5NY64uoMwzRR\",\"GT9wLv8Lipyp6YYTp\",\"kEkNyqFARK9YBrhRx\",\"LQxof8pGabGuWP7Gn\",\"RDdXanzLqFzuDF2uZ\",\"tkXdQXRPd3hjBgP8T\",\"C5b7jdq5g5frHCqdJ\",\"xAMuN7wh2uorXC9q2\",\"5hQnRWiKkhgKJXNMP\",\"sHDcTJTsrxM3QnJij\",\"aaJWssCWfMa63XJng\",\"DHghRMdMFbnwMj7WW\",\"oKdRQvxcdrGC6nBiN\",\"YcCLwitFMAEJSnxAW\",\"yLDeon4JJtJE7YyDt\",\"2nD3hNDExw2LNYq4F\",\"buX4mCQhtXCfBjeno\",\"mmt7jwqbmSjzRSvqh\",\"fLFYXeiicqJbBsti3\",\"PytNZK9mNiRiZxPrm\",\"yyo6YLQN2of6fxp49\",\"DZoEMJpc7bbAaaPHr\",\"FEYpu9RWysAgW3XnP\",\"PXAcsKkssS2yLyDv2\",\"xNBn8rA23TrkKR5M4\",\"GTKsdeEihE636Le9i\",\"2PufnQcsHsfymufX3\",\"fSQSHjW3e72MrWxbD\",\"CHvzhtXnv8HTbPQ56\",\"AasGs8AeX9Lcb9xJn\",\"4RY3zj9C2t8GGefhi\",\"fr9mr2pgEcPkdrDkX\",\"gKnWjDjwrJh7MK2df\",\"T6iBEE2jp7f7iEF2P\",\"4Lwjr34ypKNQNQCar\",\"8sNv5PTHa7XQ8bNqR\",\"DPi9QGLctq2y76KuE\",\"yod5YhKtPqw2GfG9B\",\"5HCu9Ydd86QgHDRNP\",\"3KkyQm77zsew58Dc2\",\"dzS6WBTMHyFEag6Fp\",\"eMuCpJ2spXWkJjWNz\",\"mfsaETo7uA4x5vqLD\",\"ctbThYbufFCYbRK4f\",\"Ds7L5bksw2QRHjrKL\",\"Qyfyyw6oC4EHAndzo\",\"jkbavR2ATFJcpmo8M\",\"tMmkfvW7fm429fpJP\",\"dSd7wHgXGQeG5BQ2P\",\"n2qKKxomPnb4zez5M\",\"9pzFiFK3ANLjQfnr2\"],\"total\":147,\"quality\":[2,4,2,5,5,5,5,4,5,5,5,5,5,5,5,4,4,5,5,4,3,5,4,5,5,3,5,1,5,5,5,5,5,5,5]},\"flags\":1},\"summary\":\"From point A, an object is moving towards point B at constant velocity va (in km/hr). From point B, another object is moving towards point A at constant velocity vb (in km/hr). Knowing this and the distance between point A and B (in km), write a function that returns how much time passes until both objects meet.\\n\\nFormat the output like this:\\n\\n\\\"2h 23min 34s\\\"\\n\\nE\",\"tags\":[\"algebra\",\"numbers\"],\"timestamp\":{\"$date\":1591965808043},\"title\":\"Let's Meet!\",\"quality\":4.428571428571429,\"family\":[{\"_id\":\"FbK4cmnaSgHR3HfmP\",\"language\":\"cpp\"},{\"_id\":\"4dKfy68gbxjms7fXA\",\"language\":\"javascript\"},{\"_id\":\"9SLvXXz8ED7B6joJg\",\"language\":\"python3\"},{\"_id\":\"DK6EYeLA4jFsqZ8WC\",\"language\":\"ruby\"}]}}"]