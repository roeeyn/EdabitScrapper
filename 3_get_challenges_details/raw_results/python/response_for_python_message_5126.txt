a["{\"msg\":\"result\",\"id\":\"1278\",\"result\":{\"_id\":\"HXkpnCxJgxkFwaReT\",\"author\":\"Bryan AA\",\"authorId\":\"AdskwgPdbteQrpLAe\",\"code\":\"def count_datatypes(*args):\\n\\t\",\"difficulty\":1.9740634005763689,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"xuLsfhKKZ8ZHKBsLg\",\"instructions\":\"Given a function that accepts **unlimited** arguments, check and count how many data types are in those arguments. Finally return the total in a list.\\n\\nList order is:\\n\\n```\\n[int, str, bool, list, tuple, dictionary]\\n```\\n\\n### Examples\\n```\\ncount_datatypes(1, 45, \\\"Hi\\\", False) ➞ [2, 1, 1, 0, 0, 0]\\n\\ncount_datatypes([10, 20], (\\\"t\\\", \\\"Ok\\\"), 2, 3, 1) ➞ [3, 0, 0, 1, 1, 0]\\n\\ncount_datatypes(\\\"Hello\\\", \\\"Bye\\\", True, True, False, {\\\"1\\\": \\\"One\\\", \\\"2\\\": \\\"Two\\\"}, [1, 3], {\\\"Brayan\\\": 18}, 25, 23) ➞ [2, 2, 3, 1, 0, 2]\\n\\ncount_datatypes(4, 21, (\\\"ES\\\", \\\"EN\\\"), (\\\"a\\\", \\\"b\\\"), False, [1, 2, 3], [4, 5, 6]) ➞ [2, 0, 1, 2, 2, 0]\\n```\\n\\n### Notes\\nIf no arguments are given, return `[0, 0, 0, 0, 0, 0]`\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(count_datatypes(1, 45, \\\"Hi\\\", False), [2, 1, 1, 0, 0, 0])\\nTest.assert_equals(count_datatypes([10, 20], (\\\"t\\\", \\\"Ok\\\"), 2, 3, 1), [3, 0, 0, 1, 1, 0])\\nTest.assert_equals(count_datatypes(\\\"Hello\\\", \\\"Bye\\\", True, True, False, {\\\"1\\\": \\\"One\\\", \\\"2\\\": \\\"Two\\\"}, [1, 3], {\\\"Brayan\\\": 18}, 25, 23), [2, 2, 3, 1, 0, 2])\\nTest.assert_equals(count_datatypes(), [0, 0, 0, 0, 0, 0])\\nTest.assert_equals(count_datatypes(4, 21, (\\\"ES\\\", \\\"EN\\\"), (\\\"a\\\", \\\"b\\\"), False, [1, 2, 3], [4, 5, 6]), [2, 0, 1, 2, 2, 0])\\nTest.assert_equals(count_datatypes(\\\"Nice\\\", \\\"Bad\\\", 1, 999, 0, False, {\\\"Hi\\\": \\\"Bye\\\"}), [3, 2, 1, 0, 0, 1])\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,3,2,3,2,1,3,2,1,2,1,2,3,2,1,1,2,4,3,1,3,1,0,2,2,2,2,0,5,2,3,1,2,2,3,2,2,2,2,2,2,0,3,3,1,2,1,2,3,2,3,2,0,2,2,1,2,2,0,3,3,3,2,2,3,2,3,1,3,3,1,3,2,0,1,2,2,2,2,2,2,3,2,1,3,0,3,3,1,4,3,1,3,3,3,3,3,2,2,0,3,0,0,1,3,3,0,3,2,2,2,2,1,2,3,1,0,2,3,2,2,1,2,2,2,1,3,3,3,1,2,3,3,2,2,1,3,2,2,3,3,1,3,0,1,1,2,0,3,2,2,0,1,1,3,0,2,3,2,2,2,2,1,3,1,2,2,1,1,1,0,2,2,2,0,3,3,4,3,3,3,1,2,2,0,1,2,1,3,3,3,3,1,0,2,3,0,3,2,2,3,2,1,1,1,1,2,1,2,3,2,3,3,2,3,2,2,3,2,1,1,2,3,3,2,2,2,2,2,3,2,2,3,3,3,3,1,2,1,1,2,2,3,1,2,2,3,3,2,0,2,1,2,2,0,2,2,2,3,5,2,2,2,2,1,2,2,0,3,2,2,3,2,2,3,1,3,3,0,3,2,2,0,2,1,1,2,2,3,3,2,4,3,1,3,2,4,3,3,1,1,3,3,3,3,2,3,0,0,1,3,3,2,2,0,2,2,2,1,2,3,1,3,2,2,0,1,2,2,3,2,0,2,1,2,2,2,1,1,2,3,3],\"rators\":[\"AdskwgPdbteQrpLAe\",\"8PwfYqoDQFThzNtvf\",\"tAF9Gf6PiGogbZuWs\",\"AasGs8AeX9Lcb9xJn\",\"gb9rvGus2Jv7bjZSs\",\"8JyqsSbN2FJXPr3cw\",\"mDWNyaaQ9hvPCRzSd\",\"w3A7cBWyAfukk6xEQ\",\"2fxapKr8XGdNeaKi2\",\"Jg8ZSRXe3NoDMCqGu\",\"aEm3Wvj2rFYRL8Lrb\",\"f4T9LeMPCsAfbY68N\",\"s5M5RvgqR9BhB9JoC\",\"pkQBaSzukotPEXmrD\",\"cR3ibTMxLyEdDFCHY\",\"SncRrBzRiyKRFJm8e\",\"Yp7uvStL97cC9fKkY\",\"n2BRY9X8899dcG8Bw\",\"euPBBaYXyS8RBr9KB\",\"yZvzB3qFb8pkHy4dg\",\"aCNWav8S8Try9RkC6\",\"ZNnsMeNkdDhHjSrZb\",\"u8teFLYCf7NJGWuki\",\"gJYuGdkXEWWmGRLzu\",\"3Zceb8GudqAG3onG3\",\"3CddxEkvCvRoCLQ7b\",\"YRstQuthRkFeBiXug\",\"JQ5uoxA4WZgN6HyJk\",\"J5T8gZqiZXFuFDTQ7\",\"YACDEqzcuKv3pZotp\",\"9pzFiFK3ANLjQfnr2\",\"Jqk2uJZZxEv5wZFze\",\"3LiSLdtN58n46NEqg\",\"kYWb8BwpKwunQkxeX\",\"CEd9tLdXeDeNHSzys\",\"ywk3XGvcmpTgRxwZa\",\"PtaiHYXnMwb2rWqQW\",\"cR2YL369v9ifrcw2v\",\"Kf2z6kZ7hfzg2YyEJ\",\"eHhL37DG7oW3vTcg7\",\"nQRzZKeDKuLRf9chX\",\"yKttxy9JGn5Jzwuj6\",\"EjbDDFRECrzQDkzrX\",\"4BHrt3NoCQECjvFJC\",\"4RY3zj9C2t8GGefhi\",\"xXxcBvT3poSuSCgBN\",\"yYxPzFqBgtQ9fsyHM\",\"XsYhWtDMoky3nAhjd\",\"dHZqT6h4JMwk5fPC8\",\"azQuTr5LY59adhfkx\",\"a4Ln97CHxc8W6dzbq\",\"YCHnE8feJyuhcpDc2\",\"ujWx93rFJs2MSNyZh\",\"FS78GK2Ysu7u8ndMs\",\"nPfdEqn8RZmDzAeMW\",\"vWgBJaEtcu3XoYuer\",\"63Fs5YK9nTg7fyTWH\",\"srYsvbL7bn8CeTwFa\",\"eMuCpJ2spXWkJjWNz\",\"mkcf3C3NMxhYZuiLM\",\"uiEuENARwFpnNMfFs\",\"myXAR5qDJsBaPnff2\",\"eEK5MpDgtJyYtZzuM\",\"29n62jAzXxKsEacCp\",\"YcCLwitFMAEJSnxAW\",\"5JZNWts9XEHejpvur\",\"ekQh3jzgGLsEMbKo3\",\"KRmxvA4mWgfKvHmYN\",\"DrkR35NqnP9NDLbq6\",\"c3nsyfKKeQGxp6sKb\",\"MvJif7o7GKEnNgP3L\",\"GM2X83qnuLXTHe5zA\",\"3pxHTZBsv7MKzFG6Y\",\"HF28xZKSLM9wEuqNg\",\"KdNDysEsy2TW5QRJ2\",\"NcrorAo8auDkd4HBm\",\"DwetpbChQM4r6Gwah\",\"MKT7khMBGXzA22ykf\",\"3ECpdeExhBmkYXtba\",\"RuHad7wL2R98BLRXy\",\"h7J4dPPp8hWyMm4nX\",\"tfuEAYnQoSer49nCD\",\"ZRxAkXjTCdyQTdSDw\",\"5eRdoeYxS97AFS8ra\",\"DEDniTrstQYGounXT\",\"bCDTKAoS4biDmQ64Y\",\"D4WwcMWZNgL6pwGRs\",\"WWD6uwvCr54JJGu5S\",\"H325N3oYrYJ7jGDrG\",\"2rc86eoe88DLhFeJD\",\"hnyhBFWwNCz9mDfSi\",\"gSFJPsMXnqAog3Q9f\",\"DCLoZNDf8h6TB7gxn\",\"kQH5b8MXJunh84Czq\",\"yr822PZmmiDDenxpB\",\"6BZMSxML2SjRgRCZn\",\"gkqp3EuvuiFXFAFtW\",\"Nua6T3dBurBy3Qfg9\",\"44dAzThMuyGZ5StXB\",\"W5TajitmCyxz87zAC\",\"So6PHm74mfJuY2WTs\",\"v9KtC8YLbMWmXiW2H\",\"Ecg4m7srYGgZsb4Ck\",\"Nfi64Lq3Ynfqrxt5P\",\"efcsSdKgupNnf9DKD\",\"4rwxLqLs2mNZNg8NB\",\"8TAYWzqJAkXq2MAba\",\"NfMJuiBk6FN5Jc6ow\",\"MoJmguQFX7yAAxNBb\",\"Wv2vJnEj8ywNmARoF\",\"sX9GZp3fYyQLrBKMJ\",\"HpCdcD8g3iwJTHyCg\",\"yv7c4H2jimSKHEjtG\",\"bJxaKHJqR82EWw8Su\",\"Z4M3NAa4TXquMNkHe\",\"q9X4jcq2Fw3Zvgw4t\",\"BHp9mbAEZREsE7k8E\",\"JS3hNM3XXkxPdg3yk\",\"N43d68KgA2qv7Jm2Y\",\"4hWjYDZsdixzvKbqQ\",\"smqRziJKBFw8bsNr6\",\"DpqiRAm2yo3W2x4HX\",\"yJmwiykSNfLv9NqJ2\",\"foytX6kH9wiSYqLtT\",\"DxxNN37iEz7b8t2nf\",\"ftXGpfnyPQg9fJa2B\",\"BrTDhPJcACL2bsrpJ\",\"LHW7fTAJMR5wHhm8c\",\"fTaoS7NjbqDANvvxF\",\"CTKmXtrqDYqJBnuy8\",\"wS2o3x4nrsadtC3xP\",\"3hSzE837A9SKsi5X4\",\"iojEnnY9FsMfYzp6f\",\"zZDaXBxMzTCBhNkgL\",\"rzX5PujzJGJK7mMCi\",\"dzS6WBTMHyFEag6Fp\",\"TwKZ3835iFLog2RuQ\",\"bccs9koJxyQ9XNiLC\",\"jBR47vA7HwAZqp4QA\",\"iS5BrkGLzJyPK7nKt\",\"ji5f27FPz4wRRF6Ls\",\"yjtdwc2AC4jA2RWtn\",\"ZrKCkX7xxGGZzauFW\",\"HqmxnQJM66Y57twhn\",\"syRNbbPdLCGXbH2Gy\",\"mqJtnfNCs6CedXnay\",\"P7NmFbCJ5offXMRvB\",\"tcsswuFnfw39XE6rh\",\"Y8ySZEtvht9EwdcoY\",\"77dQgT3gTGWLcRPTk\",\"GGprTwrkjuccmrQRg\",\"hRiMXDZNAzyPd5tpt\",\"BC3XhXhX9mTrAScgy\",\"X5MqeHyPh6cSQCXnk\",\"dkcmCKwqApX5jBggc\",\"dEuJGZbBQkveCXEFk\",\"ZpjYqnL4FXAF4Fvtx\",\"2j3dYApeb9FZ5eP6d\",\"TM2t3Le4qPcqSnzKX\",\"nBo2LLuSMeEgd5f6G\",\"CRGb53t7cpX45XgFo\",\"Nuv3PScqFHXG4X7H3\",\"xHAobgK2AdYSfNWSW\",\"K4JsBLPjNKZv5LWnp\",\"MCw7uAcoWcSTBTmr3\",\"8BFSTCnoe2QggN64c\",\"zfGYZ7gpR8fxJpagh\",\"27jqdQJjg6GGa5iQb\",\"ZNgDGdtv5WFkcEn6K\",\"oig8ig9SE9RZa8ttL\",\"u7i7WPM63n42r8R8o\",\"9cWTAMQmN7PZMqdec\",\"REbXuiozZdcmS4iiJ\",\"RehJGBFS6CYiWdjZx\",\"vSPc7MGK5Poy8tSFp\",\"ERhk89nuRTx8dbrdj\",\"xn7uGNKeAwPEkP9oA\",\"DPi9QGLctq2y76KuE\",\"DNACg4rcgZsPtYGZ8\",\"MfKe55snfKsdnDejs\",\"wcQLERs5vMcAwJrEy\",\"hj9GXsPGXGMQJZoSE\",\"pmgFEciNrd3ES9tuu\",\"mtRvHDpeLoSGBf8zC\",\"axdSNLZpiCDF8RS6n\",\"R4SjTgDnpigJYDLyL\",\"KZ2xddpM2f9JRaryB\",\"4fhjJBvLBWh6QeSih\",\"2PufnQcsHsfymufX3\",\"xBQC5uQdx6WndJ3iM\",\"KGaQqhoaLiPQNjoxc\",\"mNYiFFnf5MdGsBDrt\",\"TZizQsWMFF5b2KCf4\",\"jD3r3hMzLA9Ai45go\",\"DtMuKf5LHWYpdHXBg\",\"9Ei8JsYdzSnNbfWpL\",\"oXiN3kbwAAEXMAAYo\",\"uX3EL4Qha99wBkozM\",\"tXNgbxmMDqkvLc76o\",\"Kz7ee56Ht4Ns8JjBj\",\"Kt4TQ92a6bL869KFv\",\"wJosiFATmZti3nEHG\",\"8CMrRwp82esK8EFGo\",\"974cv448kw6Wu2JF6\",\"J23RcmzbdtBbPCTjT\",\"CCu3m9HtTqtDcHhC8\",\"E8TMSMSamEbBtf9Lo\",\"hkiz2Nv927cYGrA86\",\"DdCGf94bE4nJY4PRz\",\"Wv9XxYAmCLZdhrTMF\",\"Kh3Pc2ZRusurLaMyP\",\"5Z4o2pWDzmbpw4JHJ\",\"5rEiiwNW8YGxvWuH5\",\"yod5YhKtPqw2GfG9B\",\"QCvvnevRLhBY8XBJk\",\"SGhPxX5bHGL8zZqtt\",\"EMJ6uvBZkie429gdg\",\"9NCu6PzqPBbbrZ8L9\",\"SSqGKf3pKQZtjhaSe\",\"6428wKHtwKkFdvBs5\",\"XjajdyybZZbkz8o5x\",\"bTwh9rmXEzKB9ScBy\",\"7K2GEb5TZRtSpyyGS\",\"6F3Y6ZBAGNDGGTt9B\",\"E6MKHBbBDcZfBgXnZ\",\"cfjnqyiLFDmytnE6N\",\"jNvegJWCk5HCtEMbK\",\"LXZz5Txv7z4nwvggj\",\"dyBcJXfbqJtjTmBZK\",\"QRRLM2KAunDa6grje\",\"oNstSwRDTetCYkLM6\",\"tpxMgkGSHwBjS95Ta\",\"DvquuxqkkE5DzrcZe\",\"YRD9XvQzYKywHmF4x\",\"FK2fEQ3F6DD3buSLJ\",\"8WpvgSbQciTQWdd8T\",\"NNE5HNRXAkmhrWgyQ\",\"Sy5XanBuQvdqGD4wJ\",\"BvAw5WKMGAaryf5qC\",\"LmAQtrCdJBLvCQdpH\",\"idjmFCuqPacBPvCzw\",\"CQhaiZqQcP87YteSG\",\"bC49w5JpRaqtjd3Rt\",\"BiXxBRkJYKTaECqba\",\"7s877YSdsYHe9iBvg\",\"qD2LrwaDrSdiybLKY\",\"RHqqT8ADwXZQJAp6s\",\"3zYY9HEp6araYCKdQ\",\"7ifh8r4gvyYMhKB94\",\"oBcs8GLX2ZFLXQy8y\",\"ngCuvBTy66M6chhbJ\",\"DfMcEs6XsfGtTpQ26\",\"m6FZeB3ts4FKjoc6P\",\"c2u7qfdaYxcyuydtu\",\"ECykF5mBka6WGEc3Z\",\"osqWm6gk2Xad7AxJf\",\"xdgy7nWSKCekXnaJM\",\"GqothajHR2vKfEHGZ\",\"J4LQFKw8WgT4rTnRu\",\"uN5t57RETi5y2z5W8\",\"sQoQnJPb3o2FwAANp\",\"YMBFrhTvTMrAvRYJR\",\"9FCeFzjPA4jrQ7oHW\",\"TFqRD3zervh8PT8op\",\"Zv2hR3wNTPzFhft8A\",\"N6pmP89gXiKzYB5eg\",\"9bn6tNgXCNys4n3bN\",\"bkv7KHpAy4aG4oFbb\",\"4u53tzw39QRftQwBh\",\"m6TC9gshrwufWqAYn\",\"QYGFGGjATDQQzzhFM\",\"fznzd3qnvtbFkkizz\",\"Je8i9X6FTE4roo7sm\",\"MRrjdojkTWC8oTrM4\",\"KJCDwGkoXh8qtbbKr\",\"Fb2wehA7QgTFWry2x\",\"uZJqBoqeZRX3RncAR\",\"nc7bRhkxgKyqusYe3\",\"CLypXaZksY99mpRCm\",\"QRv96jmNaYsWkxQEG\",\"9rhsisf8ofHavG5aT\",\"NG8PWBSjsM8mMhQEq\",\"g9FyJ8yeT9ic97Qp2\",\"wTL9EoE6rj9iApyf7\",\"YRAzEBJoLvSaiPtYx\",\"qYDRywWRZdswy4b6e\",\"J3upzLHuEwXH7Z2hx\",\"dYPkStFnLvAMsHSzZ\",\"ZMJZNTJ2Ng8o8euQJ\",\"7scpcTEp3SEx5Wjg9\",\"LNwMrFy9vXYK2cSCW\",\"m3R9aaRoEbaxRsSNA\",\"N3tLQqsAyo76aDBh4\",\"jSaW4kdeAAGoLxcuP\",\"7amNEuZodjynhaDQq\",\"89vQtWmrSRanMLgB2\",\"dcuCtzKDASzoAJKsd\",\"xJHw6qF7ZsMf6NWJv\",\"bPmZSm3AT2mQHbBHk\",\"SExX3m5YftBWmsk2e\",\"Byq7affCerMpfZSD6\",\"kEkNyqFARK9YBrhRx\",\"MmhJQjY54sCovjFFd\",\"x2sufZSE9ozE3393f\",\"YL9pqyCu8xsds8J49\",\"DDevhboRPEbQwcxun\",\"cAP3n5NY64uoMwzRR\",\"C5b7jdq5g5frHCqdJ\",\"tkXdQXRPd3hjBgP8T\",\"Kd9cbANRqNspHmByA\",\"yMcCr6yobXJnkgxH2\",\"no46qNkTbNeHepe64\",\"vCxuabDxEv9YC3Szb\",\"4DF38N8GMFwNTKutK\",\"xumt4h8jvh7o4xkhr\",\"NtAgmhY2RuTFD9wvy\",\"9Nbqr6hojRuJQ4MLf\",\"5prBnBm3YszWAYPTp\",\"EfxwqhYdapX3dMQC2\",\"PXAcsKkssS2yLyDv2\",\"zd9FLSzsGz3evKafy\",\"8cKm6EDAjrNbL5pWF\",\"LaYYSfLtno6a9qc4Q\",\"zm9yBz3sRm9jdbyhK\",\"XoTzZDR6qDYd8PAZB\",\"r23nqpnuxRqQrRksA\",\"A2JSJyNxCd7iTTFp7\",\"YRM5Wr3P4g7AujtiM\",\"S3iFQ3yPcvH9wEzvF\",\"MM3v77RDEPmCDBvE9\",\"htCCT2CY3eSikknSF\",\"jopWJWdRStNBMGNXs\",\"8C7zkCCuqsjbNmeKt\",\"9i2XnAtnTMpLkGyvv\",\"zaNb37qavQQm6LFqe\",\"s8mFugvkcQwtDXypk\",\"qLysFYFYKWrjuCKrK\",\"7shPNLiokLBJ4DYcY\",\"rSCfdarBPboC3amHu\",\"FEYpu9RWysAgW3XnP\",\"ir8ydgbhpdNp8BCZB\",\"2H7qphwdz7PPoFKgc\",\"iaS9igNEGvpuP8rHs\",\"29MTvBZopCWjotnc5\",\"KKPxXDYAqem4tcuHH\",\"K6MfKMytoJJuSGewP\",\"gcxtuiwMy2pbESHjc\",\"As83XFL89deJfprRY\",\"jEbjRhAnRxxhZhoH8\",\"5S9nX4rKsnCcnv4Cz\",\"ohhqvDzNworQRW6Cm\",\"DQskEvAv5KiJDPtGF\",\"2QziknsznNeMPRh3g\",\"MXGuntvz3byrP6WJc\",\"eYfPWvZwnJQkHbSTK\",\"4RsakkyRXyYGwFxEa\",\"GCNPgqCJNrMcSxdPj\",\"sbJcFfQjQ59Wfg4Cd\",\"GGdmhAvxXhqhhibJN\",\"T2vhHPhRR96hRizq8\",\"q2tzvkrLASvSjkek9\",\"ZYT9LjgocbP4hzQK5\",\"qAby4AWXmTNeusvg3\",\"3owWHBwaBbK8Yb5gF\",\"yLuaweZ4rkrabfELB\",\"9ivvGvJGvtQfigQaZ\",\"RTDx9axf52kxhFjwZ\",\"ugPF9GbKWthHhW8AQ\",\"ppxNdL4gjANz8oJLQ\",\"yyo6YLQN2of6fxp49\",\"BdnE4RS5puoxo92mA\",\"XNmN6ztj36a7eChbD\",\"dJzNF59j2p8jWZxiQ\",\"xsD8G4TW6LknknK4K\",\"xFn9GLnAv99QDyKJL\",\"T6iBEE2jp7f7iEF2P\",\"ey3CASd6Je5LEJzfB\",\"4Lwjr34ypKNQNQCar\",\"mfm3gB39arY8Rjb2y\",\"u5u2YpHXiNgzDNJdX\",\"xfftcHHe5riRf4T93\",\"2EbDCCJJvCfKkbYia\",\"5s4qhuRJijYaDNXva\",\"AQSqD9oNv2uPfxZCR\",\"ahM96sinR3wczz9b2\",\"fbr22rabEJMfBp7vD\",\"Wpn95NqWxncQrwNgz\",\"LMzryxcPprKrbWGLq\",\"uMEgTHCwnPRvyQ9be\",\"gNvY6eewjqJzuHeJz\",\"Ds7L5bksw2QRHjrKL\",\"GJmKcqu7xppQyBaTt\",\"PC3pLs36zNzpRDSuE\",\"eHcgvkTGsH7ZziqBo\",\"4z4h4Ljr575FyeZqT\",\"o4ixjQGSaYqA2JoM4\",\"SDHuhj2QjoKS7tmm4\",\"kjvgTyRFyKHv44DcH\",\"ctbThYbufFCYbRK4f\",\"qzXAMXsHZGT8o5hTA\",\"8sNv5PTHa7XQ8bNqR\",\"mTF6oWX2WhFR4M3QK\",\"XCnbSuZF8gdA7Lc8o\",\"RoGGD5cpHb4ftdLDv\",\"MpfytGFYF77emJ3cT\",\"Di5mpd9A7gMxG93BX\",\"uPGPH8AjEcsawJWkt\",\"PWgzeK859suojbrRx\",\"gKnWjDjwrJh7MK2df\",\"jCjCvyhqhpebkJn34\",\"AFfw7cGg83uYk2Miy\",\"mvJBakQ35CWAnbbEZ\",\"jWbd7SYDzLPjc9EDh\",\"LQxof8pGabGuWP7Gn\",\"5HCu9Ydd86QgHDRNP\",\"hPZyDDcegPqPAML7S\",\"2qtde7moqrzm7B4Ht\",\"suArq5BbSy7gD6xri\",\"CHvzhtXnv8HTbPQ56\",\"nkH3HfJXLMNcBMM79\",\"Qyfyyw6oC4EHAndzo\",\"qB6KSTYC6H2TQEQY6\",\"jkbavR2ATFJcpmo8M\",\"tN8QWy3aaEzC2MnfA\",\"3Kgtr8FytbE9FnJxH\",\"eYisiNCtyfk7Kg4Yr\",\"PZqJ7pMtLRqp27q4y\",\"bNENiqqEDxM5a5JBf\",\"23oi2a3vQwhtLEbSj\",\"f7X4ymW7D3Gfy8Top\",\"2HfNkb2SoqdyjKW3o\",\"2t4jHPLkGiAH6YmKC\",\"uSZFmXTzzdn4B2m7W\",\"yw237iFXEK5xwgp7P\",\"WhuuWxGHEymg4WXCm\",\"zQa2K5oqurRQxMxQp\",\"oSFc8XFEXYafu2WWF\",\"trb5TCR89z4r5BMc2\",\"3nied3n8KG8RSNixH\",\"5SK47g2HRyxbs4WDR\",\"ztqrsrFhySxwCHXvw\",\"oaEDng4NPAkd4HrKn\"],\"total\":503,\"quality\":[5,4,4,5,5,5,5,5,4,5,4,5,5,5,5,5,5,5,5,5,5,5,5,3,5,5,5,4,5,5,5,5,5,4,5,4,5,3,3,5,5,5,4,5,5,4,5,4,3,5,4,5,5,5,3,5,5,5,5,4,5,5,4,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,3,4,5,5,5,5,4,5,4,5,5,5,5,4,5,4,5,4,3]},\"flags\":0},\"summary\":\"Given a function that accepts unlimited arguments, check and count how many data types are in those arguments. Finally return the total in a list.\\n\\nList order is:\\n\\n[int, str, bool, list, tuple, dictionary]\\n\\nExamples\\ncount_datatypes(1, 45, \\\"Hi\\\", False) ➞ [2, 1, 1, 0, 0, 0]\\n\\ncount_datatypes([10, 20], (\\\"t\\\", \\\"Ok\\\"), 2, 3, 1) ➞ [3, 0, 0, 1, 1, 0]\\n\\ncount_datatypes(\\\"H\",\"tags\":[\"conditions\",\"loops\",\"arrays\"],\"timestamp\":{\"$date\":1585697683299},\"title\":\"Count and Identify Data Types\",\"quality\":4.66,\"family\":[{\"_id\":\"HXkpnCxJgxkFwaReT\",\"language\":\"python3\"}]}}"]