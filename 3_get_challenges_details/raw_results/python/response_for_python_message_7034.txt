a["{\"msg\":\"result\",\"id\":\"2227\",\"result\":{\"_id\":\"cPxexgGxmCMi4kas8\",\"author\":\"RandyWaterhouse\",\"authorId\":\"AraFx3EGW7PsqMPWt\",\"code\":\"class FourVector:\\n\\t\",\"difficulty\":3.4545454545454546,\"quality\":0,\"editorId\":\"AraFx3EGW7PsqMPWt\",\"familyId\":\"tjeRfYNp8JztkHHSd\",\"instructions\":\"This is the first challenge of the \\\"Four Vectors\\\" collection. Four Vectors are vectors with four components that are used to describe relativistic physics. For details please refer to [this wiki entry](https://en.wikipedia.org/wiki/Four-vector).\\n\\nIn this challenge, create a class `FourVector` with the following properties:\\n- If called with a list of length 4 as a parameter, it uses the list entries as components of the FourVector (FV) instance.\\n- If called without a parameter, the components should be `[0.0, 0.0, 0.0, 0.0]`.\\n- Getter and Setter methods `GetComponents` and `SetComponents`, see test cases\\n- Methods two add and subtract two FV instances.\\n- Support comparing two Four Vectors.\\n- Support printing a FV in the form `(0.5, 1.0, -2.0, 10.0)` where the components are rounded to three decimal places.\\n\\nConsider using magic methods like `__add__`, `__eq__` and `__str__` to solve the last three bullet points.\\n\\n### Examples\\n```\\nv = FourVector([1, 2, 3, 4])\\nprint(v) ➞ (1, 2, 3, 4)\\n\\nv2 = FourVector([1, 0, 1, 0])\\nprint(v + v2) ➞ (2, 2, 4, 4)\\n```\\n\\n### Notes\\nPlease save your `FourVector` class for later use, we will add new methods in upcoming challenges in this series!\",\"isFree\":false,\"isHidden\":false,\"lab\":\"# create some Four Vectors:\\nv0a = FourVector()\\nv0 = FourVector([0, 0, 0, 0])\\nv1 = FourVector([1, 2, 3, 4])\\nv2 = FourVector([1, 0, 0, 1])\\nv3 = FourVector([1, 0, 1, 0])\\nv4 = FourVector([-1, 4, 1, 2])\\nv5 = FourVector([-1, 37, 55, -108])\\nv6 = FourVector([0.5, 1.0, -2.0, 10.0])\\nv7 = FourVector([-0.25, 1.2, -2.7, 33.3])\\nv8 = FourVector([-1, 2, -3, 4])\\n\\n# getter and setter operations:\\nTest.assert_equals(v5.GetComponents(), [-1, 37, 55, -108], \\\"v5 components don't match!\\\")\\nTest.assert_equals(v8.GetComponents(), [-1, 2, -3, 4], \\\"v8 components don't match!\\\")\\nv8.SetComponents([7, 3, 5, -6])\\nTest.assert_equals(v8.GetComponents(), [7, 3, 5, -6], \\\"modified v8 components don't match!\\\")\\nv9 = FourVector()\\nTest.assert_equals(v9.GetComponents(), [0, 0, 0, 0], \\\"new FV components don't match!\\\")\\nv9.SetComponents([2.5, -1.5, 3.7, -7.4])\\nTest.assert_equals(v9.GetComponents(), [2.5, -1.5, 3.7, -7.4], \\\"v9 modified components don't match!\\\")\\n\\n# plus operation:\\nTest.assert_equals(v0, v0a, \\\"equality of zero vectors don't match!\\\")\\nTest.assert_equals(v0 + v1, FourVector([1, 2, 3, 4]), \\\"addition v0 + v1 doesn't match!\\\")\\nTest.assert_equals(v2 + v3, FourVector([2, 0, 1, 1]), \\\"addition v2 + v3 doesn't match!\\\")\\nTest.assert_equals(v2 + v5, FourVector([0, 37, 55, -107]), \\\"addition v2 + v5 doesn't match!\\\")\\nTest.assert_equals(v2 + v5 + v4, FourVector([-1, 41, 56, -105]), \\\"addition v2 + v5 + v4 doesn't match!\\\")\\nTest.assert_equals(v0 + v1 + v2 + v3 + v4 + v5, FourVector([1, 43, 60, -101]), \\\"addition v0 + v1 + v2 + v3 + v4 + v5 doesn't match!\\\")\\nTest.assert_equals(v1 + v6, FourVector([1.5, 3.0, 1.0, 14.0]), \\\"addition v1 + v6 doesn't match!\\\")\\nTest.assert_equals(v6 + v7, FourVector([0.25, 2.2, -4.7, 43.3]), \\\"addition v6 + v7 doesn't match!\\\")\\nTest.assert_equals(v0 + v4 + v6 + v7, FourVector([-0.75, 6.2, -3.7, 45.3]), \\\"addition v0 + v4 + v6 + v7 doesn't match!\\\")\\n\\n# minus operation:\\nTest.assert_equals(v2 - v1, FourVector([0, -2, -3, -3]), \\\"subtraction v2 - v1 doesn't match!\\\")\\nTest.assert_equals(v4 - v2, FourVector([-2, 4, 1, 1]), \\\"subtraction v4 - v2 doesn't match!\\\")\\nTest.assert_equals(str(v4 - v7), str(FourVector([-0.75, 2.8, 3.7, -31.3])), \\\"subtraction v4 - v7 doesn't match!\\\")\\nTest.assert_equals(v5 - v0, FourVector([-1, 37, 55, -108]), \\\"subtraction v5 - v0 doesn't match!\\\")\\nTest.assert_equals(v5 - v1 - v6, FourVector([-2.5, 34.0, 54.0, -122.0]), \\\"subtraction v5 - v1 - v6 doesn't match!\\\")\\n\\n# mixed operations:\\nTest.assert_equals(v5 - v2 + v4, FourVector([-3, 41, 56, -107]), \\\"mixed operation 1 doesn't match!\\\")\\nTest.assert_equals(v6 + v3 - v6, v3, \\\"mixed operation 2 doesn't match!\\\")\\nTest.assert_equals(v5 - v7 + v1 - v0 + v2, FourVector([1.25, 37.8, 60.7, -136.3]), \\\"mixed operation 3 doesn't match!\\\")\\n\\n# string representation:\\nTest.assert_equals(str(v1), \\\"(1, 2, 3, 4)\\\", \\\"string representation of v1 doesn't match!\\\")\\nTest.assert_equals(str(v6), \\\"(0.5, 1.0, -2.0, 10.0)\\\", \\\"string representation of v6 doesn't match!\\\")\\nTest.assert_equals(str(v0 + v4 + v6 + v7), \\\"(-0.75, 6.2, -3.7, 45.3)\\\", \\\"string representation of v0 + v4 + v6 + v7 doesn't match!\\\")\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[4,4,4,4,4,3,3,5,1,5,2,3,1,4,5,5,5,4,3,2,5,2,2,2,3,5,4,5,2,4,3,3,3],\"quality\":[],\"rators\":[\"aEm3Wvj2rFYRL8Lrb\",\"xn7uGNKeAwPEkP9oA\",\"s5M5RvgqR9BhB9JoC\",\"uznjMqKo6mzk5fsJh\",\"ygDJ7HEzRoJZyPEF4\",\"hRAd998MG8Jzdpxj6\",\"h4x2jaMdj5aQZbW5g\",\"d8qtzoLB264iP8tdY\",\"p8qqFdJ3FSk5x9z3G\",\"fSQSHjW3e72MrWxbD\",\"wFws9y3mXvC4vL9Q2\",\"mDWNyaaQ9hvPCRzSd\",\"eHcgvkTGsH7ZziqBo\",\"wwMcJQRvf3X59Jyev\",\"38cEoB5NrMG6ompwH\",\"Wpn95NqWxncQrwNgz\",\"eMuCpJ2spXWkJjWNz\",\"8sNv5PTHa7XQ8bNqR\",\"yjtdwc2AC4jA2RWtn\",\"ii29nS7Yko3iSLJFa\",\"gJYuGdkXEWWmGRLzu\",\"J3upzLHuEwXH7Z2hx\",\"iS5BrkGLzJyPK7nKt\",\"JKb5rhL6DKcCAypF9\",\"2PufnQcsHsfymufX3\",\"QxWgwpF6RofdzFXgi\",\"9oCdJzHEcg6nqx47L\",\"3bpN6HHsJNZv9sGet\"],\"total\":31},\"flags\":0},\"summary\":\"This is the first challenge of the \\\"Four Vectors\\\" collection. Four Vectors are vectors with four components that are used to describe relativistic physics. For details please refer to this wiki entry.\\n\\nIn this challenge, create a class FourVector with the following properties:\\nIf called with a list of length 4 as a parameter, it uses the list entries as compon\",\"tags\":[\"physics\",\"math\",\"classes\"],\"timestamp\":{\"$date\":1599801929314},\"title\":\"Four Vectors Part 1: Basic Operations\",\"family\":[{\"_id\":\"cPxexgGxmCMi4kas8\",\"language\":\"python3\"}]}}"]