a["{\"msg\":\"result\",\"id\":\"2051\",\"result\":{\"_id\":\"hfBoDAN8YMz7cxGqB\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"def we_have_house(hh, hw, hd, rh):\\n\\t\",\"difficulty\":2.819672131147541,\"familyId\":\"kpvRcjS9ZFoiFG74H\",\"instructions\":\"In the garden, we have a house. We don't know how big the house is going to get. The garden is 50' x 50'. If you want to walk around the house, you'll need 3 feet so the house cannot be bigger than the width & depth of the garden minus the path to walk around it.\\n\\n![We Have a House](https://edabit-challenges.s3.amazonaws.com/we_have_house.png \\\"We Have a House\\\")\\n\\nIn this example you can see the arguments your function is going to get (in **red**). The measurements of the windows + door as well as the dark rim (against rain damage) are always the same (in **blue**). We put **One door** in the front and **Two windows** in each wall.\\n\\nWe don't have permission to build higher than 20'. The area around the windows and door cannot be smaller than 1 foot except under the door obviously. It is possible to have a flat roof.\\n\\nCreate a function that takes four arguments and returns the area of **light yellow** paint and **dark gray** paint in a string as square feet. Assuming the coverage of the paint is perfect and you'll only need one layer of paint.\\n\\n### Examples\\n```\\nwe_have_house(8, 30, 32, 8) ➞ \\\"Yellow: 873, Gray: 242\\\"\\n\\nwe_have_house(9, 14, 20, 9) ➞ \\\"House too small.\\\"\\n\\nwe_have_house(9, 38, 36, 9) ➞ \\\"Yellow: 1261, Gray: 290\\\"\\n\\nwe_have_house(10, 31, 30, 11) ➞ \\\"No permission.\\\"\\n```\\n\\n### Notes\\n- If the house is too big for the garden, return `\\\"House too big.\\\"`\\n- If the house is too high, return `\\\"No permission.\\\"`\\n- If the house is too small (for the windows and door to fit), return `\\\"House too small.\\\"`\",\"lab\":\"Test.assert_equals(we_have_house(8, 30, 32, 8), \\\"Yellow: 873, Gray: 242\\\")\\nTest.assert_equals(we_have_house(10, 31, 30, 11), \\\"No permission.\\\")\\nTest.assert_equals(we_have_house(8, 30, 30, 8), \\\"Yellow: 849, Gray: 234\\\")\\nTest.assert_equals(we_have_house(9, 20, 18, 8), \\\"Yellow: 581, Gray: 146\\\")\\nTest.assert_equals(we_have_house(9, 14, 20, 9), \\\"House too small.\\\")\\nTest.assert_equals(we_have_house(8, 16, 12, 8), \\\"Yellow: 353, Gray: 106\\\")\\nTest.assert_equals(we_have_house(10, 25, 25, 0), \\\"Yellow: 689, Gray: 194\\\")\\nTest.assert_equals(we_have_house(8, 45, 42, 8), \\\"House too big.\\\")\\nTest.assert_equals(we_have_house(10, 40, 40, 10), \\\"Yellow: 1569, Gray: 314\\\")\\nTest.assert_equals(we_have_house(10, 15, 10, 7), \\\"House too small.\\\")\\nTest.assert_equals(we_have_house(9, 38, 36, 9), \\\"Yellow: 1267, Gray: 290\\\")\\nTest.assert_equals(we_have_house(8, 15, 12, 6), \\\"Yellow: 303, Gray: 102\\\")\\nTest.assert_equals(we_have_house(8, 30, 45, 6), \\\"House too big.\\\")\\nTest.assert_equals(we_have_house(9, 20, 14, 8), \\\"Yellow: 525, Gray: 130\\\")\",\"language\":\"python3\",\"summary\":\"In the garden, we have a house. We don't know how big the house is going to get. The garden is 50' x 50'. If you want to walk around the house, you'll need 3 feet so the house cannot be bigger than the width & depth of the garden minus the path to walk around it.\\n\\nWe Have a House\\n\\nIn this example you can see the arguments your function is going to get (in red)\",\"tags\":[\"algorithms\",\"math\",\"numbers\"],\"timestamp\":{\"$date\":1561644222605},\"title\":\"We Have a House\",\"stats\":{\"completed\":{\"total\":55,\"ratings\":[3,3,3,3,3,3,3,3,3,3,3,5,4,2,3,4,3,3,3,3,5,0,5,0,3,4,4,3,2,2,2,4,5,3,4,5,3,3,2,0,3,0,4,4,0,2,2,4,2,3,4,2,3,1,2,3,3,3,4,1,0],\"rators\":[\"BkPgkDQGHm66X4Qai\",\"tAF9Gf6PiGogbZuWs\",\"QaE2QnnBbzdiExxPH\",\"P59rek6gvwTzHvRYa\",\"yZvzB3qFb8pkHy4dg\",\"AYaEkTWLMmfzpwejr\",\"cNq8QuBtjR3RJ44cm\",\"zhRGtopKK8oCgix6E\",\"nrA8Pacm3A6GqGzq4\",\"8JyqsSbN2FJXPr3cw\",\"MXjxGML2X75x64vJo\",\"rgmhomEQqsnngdSJZ\",\"PcbSbkQX8hMxB8Leh\",\"FHp9AYMCtbSo6bvEZ\",\"xf2cbScdssp52NGNu\",\"BFNm9gacwba9KyLFW\",\"vt4jabASipazXywiA\",\"GgLd4eWBu79mdjtkP\",\"mKK6Z6WEKKJ2W2ZNT\",\"pYHJ9THHsG7K6BhAh\",\"ZgdejAm3u2Q6tFpfg\",\"gb9rvGus2Jv7bjZSs\",\"XnNhvbK5z9xtg9YYA\",\"kW7MMYvA8ngYpG5Dv\",\"bR6J5PZ68LmDFGqap\",\"aCNWav8S8Try9RkC6\",\"9Gf6g4fuKc3uou9w2\",\"xyHfEdcYBDznunq6n\",\"tKCgSWX7X4CWHMWGw\",\"64JauShBbnMxke33R\",\"QytmB5hT6rsjudrtd\",\"icHDAhxJaEpdu4XRR\",\"hRhcyTvzRfNMXmrfg\",\"HqmxnQJM66Y57twhn\",\"wmiKeocyx5AvLxRbi\",\"9xdJPHCYkg5wTiKcF\",\"EQbnbkkPYtGxiviTp\",\"Jqk2uJZZxEv5wZFze\",\"8PwfYqoDQFThzNtvf\",\"pmgFEciNrd3ES9tuu\",\"aEm3Wvj2rFYRL8Lrb\",\"fznzd3qnvtbFkkizz\",\"ZNnsMeNkdDhHjSrZb\",\"xn7uGNKeAwPEkP9oA\",\"S6Zd8mPuvhuh3MFRt\",\"8sNv5PTHa7XQ8bNqR\",\"J3upzLHuEwXH7Z2hx\",\"Exhh7WfLJLS7bpuXd\",\"yjtdwc2AC4jA2RWtn\",\"buX4mCQhtXCfBjeno\",\"iS5BrkGLzJyPK7nKt\",\"gJYuGdkXEWWmGRLzu\",\"2PufnQcsHsfymufX3\",\"p6ESyNjSyY6QbwMDW\",\"n2qKKxomPnb4zez5M\"],\"quality\":[3,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.333333333333333,\"family\":[{\"_id\":\"ZuAiazhSrqsPHqDCg\",\"language\":\"cpp\"},{\"_id\":\"eaBDSkauqgroxSYNk\",\"language\":\"csharp\"},{\"_id\":\"YMT2d6RFcsvNv58cd\",\"language\":\"java\"},{\"_id\":\"uaK2bBBZby58kXbGe\",\"language\":\"javascript\"},{\"_id\":\"hfBoDAN8YMz7cxGqB\",\"language\":\"python3\"},{\"_id\":\"9sxFMgXD23vhu279P\",\"language\":\"ruby\"},{\"_id\":\"wfXLs7WfCSwdAjq9x\",\"language\":\"swift\"}]}}"]