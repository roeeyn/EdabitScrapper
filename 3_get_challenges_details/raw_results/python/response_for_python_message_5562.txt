a["{\"msg\":\"result\",\"id\":\"1494\",\"result\":{\"_id\":\"6DppMcokmzJ3TtNNB\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"def true_alphabetic(txt):\\n\\t\",\"difficulty\":2.067415730337079,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"nLKvbWda9bFvx2Kkd\",\"instructions\":\"Create a function which takes every letter in every word, and puts it in alphabetical order. Note how the **original word lengths must stay the same**.\\n\\n### Examples\\n```\\ntrue_alphabetic(\\\"hello world\\\") ➞ \\\"dehll loorw\\\"\\n\\ntrue_alphabetic(\\\"edabit is awesome\\\") ➞ \\\"aabdee ei imosstw\\\"\\n\\ntrue_alphabetic(\\\"have a nice day\\\") ➞ \\\"aaac d eehi nvy\\\"\\n```\\n\\n### Notes\\n- All sentences will be in lowercase.\\n- No punctuation or numbers will be included in the **Tests**.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(true_alphabetic(\\\"hello world\\\"), \\\"dehll loorw\\\")\\nTest.assert_equals(true_alphabetic(\\\"edabit is awesome\\\"), \\\"aabdee ei imosstw\\\")\\nTest.assert_equals(true_alphabetic(\\\"have a nice day\\\"), \\\"aaac d eehi nvy\\\")\\nTest.assert_equals(true_alphabetic(\\\"i love to code\\\"), \\\"c deei lo ootv\\\")\\nTest.assert_equals(true_alphabetic(\\\"joshua senoron\\\"), \\\"aehjnn ooorssu\\\")\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,3,3,2,2,2,3,3,1,3,2,3,1,2,3,3,3,3,0,2,3,2,1,1,3,0,0,3,2,2,3,3,0,0,3,5,3,3,3,2,0,0,0,2,3,0,0,2,5,0,3,3,4,0,2,2,3,0,3,2,2,0,1,3,3,3,0,2,3,3,3,3,2,2,3,2,3,3,2,3,2,1,0,3],\"rators\":[\"Yp7uvStL97cC9fKkY\",\"tAF9Gf6PiGogbZuWs\",\"kYWb8BwpKwunQkxeX\",\"gb9rvGus2Jv7bjZSs\",\"AasGs8AeX9Lcb9xJn\",\"ZNnsMeNkdDhHjSrZb\",\"s5M5RvgqR9BhB9JoC\",\"8PwfYqoDQFThzNtvf\",\"8JyqsSbN2FJXPr3cw\",\"mDWNyaaQ9hvPCRzSd\",\"yZvzB3qFb8pkHy4dg\",\"poEuqyoShwYRnzTod\",\"aEm3Wvj2rFYRL8Lrb\",\"55RQznnuTGpsj3EXd\",\"a777e8chPvJkY3tKa\",\"gJYuGdkXEWWmGRLzu\",\"DQskEvAv5KiJDPtGF\",\"YLtspA8ec6ntcoMMf\",\"v9KtC8YLbMWmXiW2H\",\"HF28xZKSLM9wEuqNg\",\"iojEnnY9FsMfYzp6f\",\"kvjjdBepmaBtDFk93\",\"Ecg4m7srYGgZsb4Ck\",\"cR3ibTMxLyEdDFCHY\",\"DEDniTrstQYGounXT\",\"dEuJGZbBQkveCXEFk\",\"yjtdwc2AC4jA2RWtn\",\"n2BRY9X8899dcG8Bw\",\"MKT7khMBGXzA22ykf\",\"KZ2xddpM2f9JRaryB\",\"DrkR35NqnP9NDLbq6\",\"hnyhBFWwNCz9mDfSi\",\"iS5BrkGLzJyPK7nKt\",\"c7uBxu2rgY77H5d79\",\"QRv96jmNaYsWkxQEG\",\"K3RacTvkWHLfzKF8i\",\"p8qqFdJ3FSk5x9z3G\",\"8fZxjQfuXw5HMSRJM\",\"axdSNLZpiCDF8RS6n\",\"dkcmCKwqApX5jBggc\",\"xn7uGNKeAwPEkP9oA\",\"J5T8gZqiZXFuFDTQ7\",\"9rhsisf8ofHavG5aT\",\"BNogTonsWhcfseTjX\",\"J3upzLHuEwXH7Z2hx\",\"buX4mCQhtXCfBjeno\",\"qZQxPQ2kaNKAMesHT\",\"gXTAie79kiw28tx5u\",\"Jqk2uJZZxEv5wZFze\",\"T2vhHPhRR96hRizq8\",\"oBcs8GLX2ZFLXQy8y\",\"sbJcFfQjQ59Wfg4Cd\",\"cAP3n5NY64uoMwzRR\",\"GGdmhAvxXhqhhibJN\",\"FEYpu9RWysAgW3XnP\",\"3LiSLdtN58n46NEqg\",\"Wpn95NqWxncQrwNgz\",\"fznzd3qnvtbFkkizz\",\"2PufnQcsHsfymufX3\",\"eHcgvkTGsH7ZziqBo\",\"8BFSTCnoe2QggN64c\",\"CHvzhtXnv8HTbPQ56\",\"ghMkPtdFCpM6w8nax\",\"PTDFuxAzou7W6asWt\",\"K6MfKMytoJJuSGewP\",\"4Lwjr34ypKNQNQCar\",\"PC3pLs36zNzpRDSuE\",\"9pzFiFK3ANLjQfnr2\",\"Z85ajWfZ4jDPkbvR4\",\"8nE8QHnFYsHCFebte\",\"nc7bRhkxgKyqusYe3\",\"fbr22rabEJMfBp7vD\",\"fSQSHjW3e72MrWxbD\",\"3KkyQm77zsew58Dc2\",\"HqmxnQJM66Y57twhn\",\"38txvwyNnhqg6WuxD\",\"etoxSpG4fGKThLozM\",\"ctbThYbufFCYbRK4f\",\"PWgzeK859suojbrRx\",\"u5u2YpHXiNgzDNJdX\",\"o4ixjQGSaYqA2JoM4\",\"jCjCvyhqhpebkJn34\",\"T6iBEE2jp7f7iEF2P\",\"8sNv5PTHa7XQ8bNqR\",\"RoGGD5cpHb4ftdLDv\",\"jWbd7SYDzLPjc9EDh\",\"kjvgTyRFyKHv44DcH\",\"gKnWjDjwrJh7MK2df\",\"9gJsF5apWJGWZJprn\",\"AQSqD9oNv2uPfxZCR\",\"NfMJuiBk6FN5Jc6ow\",\"AFfw7cGg83uYk2Miy\",\"MpfytGFYF77emJ3cT\",\"yod5YhKtPqw2GfG9B\",\"suArq5BbSy7gD6xri\",\"JhX7jvtpwNyxcc39m\",\"nkH3HfJXLMNcBMM79\",\"5jsikgRic4psf48fH\",\"ey3CASd6Je5LEJzfB\",\"m7kMANAKbQxHfueLC\",\"Ds7L5bksw2QRHjrKL\",\"ekbfbYdyZeXHvaG8c\",\"fZrLzFjr7PJQCbcqx\",\"5HCu9Ydd86QgHDRNP\",\"Qyfyyw6oC4EHAndzo\"],\"total\":116,\"quality\":[5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5]},\"flags\":0},\"summary\":\"Create a function which takes every letter in every word, and puts it in alphabetical order. Note how the original word lengths must stay the same.\\n\\nExamples\\ntrue_alphabetic(\\\"hello world\\\") ➞ \\\"dehll loorw\\\"\\n\\ntrue_alphabetic(\\\"edabit is awesome\\\") ➞ \\\"aabdee ei imosstw\\\"\\n\\ntrue_alphabetic(\\\"have a nice day\\\") ➞ \\\"aaac d eehi nvy\\\"\\n\\nNotes\\nAll sentences will be in lowercase\",\"tags\":[\"strings\",\"loops\"],\"timestamp\":{\"$date\":1588888424107},\"title\":\"True Alphabetical Order\",\"quality\":4.904761904761905,\"family\":[{\"_id\":\"LCZSFt2zf84NGzbMX\",\"language\":\"cpp\"},{\"_id\":\"q6xuJp5pBEPJTKfyE\",\"language\":\"csharp\"},{\"_id\":\"8NDcdD8QZiMKJJaYL\",\"language\":\"javascript\"},{\"_id\":\"6DppMcokmzJ3TtNNB\",\"language\":\"python3\"},{\"_id\":\"ELvuHLC7XMWiafimp\",\"language\":\"ruby\"},{\"_id\":\"zQ5AtiLLLmZbNfLWS\",\"language\":\"swift\"}]}}"]