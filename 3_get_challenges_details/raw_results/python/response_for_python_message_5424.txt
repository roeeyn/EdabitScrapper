a["{\"msg\":\"result\",\"id\":\"1425\",\"result\":{\"_id\":\"eBTCwYHpdaHciieuP\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"def select_letters(s1, s2):\\n\\t\",\"difficulty\":2.056603773584906,\"familyId\":\"44Pn69JnDESbzBFwn\",\"instructions\":\"Given two strings, `s1` and `s2`, select only the characters in each string where the character in the same position in the **other** string is in uppercase. Return these as a single string.\\n\\nTo illustrate, given the strings `s1 = \\\"heLLo\\\"` and `s2 = \\\"GUlp\\\"`, we select the letters \\\"he\\\" from `s1`, because \\\"G\\\" and \\\"U\\\" are uppercase. We then select \\\"lp\\\" from `s2`, because \\\"LL\\\" is in uppercase. Finally, we join these together and return `\\\"help\\\"`.\\n\\n### Examples\\n```\\nselect_letters(\\\"heLLO\\\", \\\"GUlp\\\") ➞ \\\"help\\\"\\n\\nselect_letters(\\\"1234567\\\", \\\"XxXxX\\\")  ➞ \\\"135\\\"\\n\\nselect_letters(\\\"EVERYTHING\\\", \\\"SomeThings\\\") ➞  \\\"EYSomeThings\\\"\\n```\\n\\n### Notes\\n- The strings don't have to be the same length.\\n- Strings can contain non-alphabetic characters.\",\"lab\":\"Test.assert_equals(select_letters(\\\"heLLO\\\", \\\"GUlp\\\"), \\\"help\\\")\\nTest.assert_equals(select_letters(\\\"1234567\\\", \\\"XxXxX\\\"), \\\"135\\\")\\nTest.assert_equals(select_letters(\\\"EVERYTHING\\\", \\\"SomeThings\\\"), \\\"EYSomeThings\\\")\\nTest.assert_equals(select_letters(\\\"PaTtErN\\\", \\\"pAtTeRn\\\"), \\\"atrpten\\\")\\nTest.assert_equals(select_letters(\\\"nothing\\\", \\\"nothing\\\"), \\\"\\\")\\nTest.assert_equals(select_letters(\\\"What do you think of it so far?\\\", \\\"RUBBISH!\\\"), \\\"What doR\\\")\",\"language\":\"python3\",\"summary\":\"Given two strings, s1 and s2, select only the characters in each string where the character in the same position in the other string is in uppercase. Return these as a single string.\\n\\nTo illustrate, given the strings s1 = \\\"heLLo\\\" and s2 = \\\"GUlp\\\", we select the letters \\\"he\\\" from s1, because \\\"G\\\" and \\\"U\\\" are uppercase. We then select \\\"lp\\\" from s2, because \\\"LL\\\" is\",\"tags\":[\"strings\",\"formatting\"],\"timestamp\":{\"$date\":1561415063039},\"title\":\"A Capital Challenge\",\"stats\":{\"completed\":{\"total\":121,\"ratings\":[2,2,2,2,2,3,2,1,2,3,2,2,3,2,5,1,0,2,2,1,3,0,1,3,1,3,3,5,2,0,2,3,2,1,3,2,0,2,3,3,2,3,2,2,3,0,3,1,2,2,1,3,1,3,1,3,3,3,2,2,5,2,1,2,2,3,3,0,3,3,3,3,3,1,3,1,1,2,1,2,3,3,3,2,3,0,0,3,0,0,3,2,2,3,2,1,1,2,3,1,2,1,3,1,2,3],\"rators\":[\"tAF9Gf6PiGogbZuWs\",\"gb9rvGus2Jv7bjZSs\",\"yZvzB3qFb8pkHy4dg\",\"PFjMZGHNAPTkgd7tq\",\"c89SxuYYjfeRh4toG\",\"AF6LgdKhEdzwgRJom\",\"8JyqsSbN2FJXPr3cw\",\"kQH5b8MXJunh84Czq\",\"C9LKGu2g5hSijvDzA\",\"zjQPuEyZ38tTW6P5w\",\"jHrtWDGBhkbuWa7fG\",\"gMJhLdyw3tH7L96X2\",\"Jg8ZSRXe3NoDMCqGu\",\"AYaEkTWLMmfzpwejr\",\"s5M5RvgqR9BhB9JoC\",\"HqmxnQJM66Y57twhn\",\"otXtuQygbcYATMZoP\",\"kBmhcwkCqxiy4GwiZ\",\"8aPJNKDxXq7884eJb\",\"HQxp7NcdvF92G7bYS\",\"EXZfPb8YH28EL8Rh9\",\"qBaLGrm952ii9K23M\",\"EEjNW5t4XPGFLfq3k\",\"2fxapKr8XGdNeaKi2\",\"yoYQqaY6GszuTkNSs\",\"K96FwtfDDN5WM4Bb7\",\"8PwfYqoDQFThzNtvf\",\"Jqk2uJZZxEv5wZFze\",\"pDvFWMCD9fQwoBPcu\",\"6ShafRStcvew4GfCh\",\"C4QntmkYtB89GNtpd\",\"ab7BsQuhDo3QgE6bh\",\"2innwjWqxJHo4eRGh\",\"u5u2YpHXiNgzDNJdX\",\"bzePGtk6fgFuKeHhf\",\"Yp7uvStL97cC9fKkY\",\"AasGs8AeX9Lcb9xJn\",\"zs3A5SWuX2DidyiaW\",\"PytNZK9mNiRiZxPrm\",\"4CFzv558qbGcpQwc4\",\"Z85ajWfZ4jDPkbvR4\",\"w3A7cBWyAfukk6xEQ\",\"oDZaopxpPAdqWXLqz\",\"aCNWav8S8Try9RkC6\",\"aEm3Wvj2rFYRL8Lrb\",\"cR3ibTMxLyEdDFCHY\",\"EAt7xgPBa69cnyDvN\",\"mDWNyaaQ9hvPCRzSd\",\"euPBBaYXyS8RBr9KB\",\"ZNnsMeNkdDhHjSrZb\",\"3Zceb8GudqAG3onG3\",\"YRstQuthRkFeBiXug\",\"kYWb8BwpKwunQkxeX\",\"EjbDDFRECrzQDkzrX\",\"gJYuGdkXEWWmGRLzu\",\"J5T8gZqiZXFuFDTQ7\",\"KdNDysEsy2TW5QRJ2\",\"HF28xZKSLM9wEuqNg\",\"Sk5h9RsRyCjSNKubE\",\"9pzFiFK3ANLjQfnr2\",\"ekQh3jzgGLsEMbKo3\",\"GamaMNrnhrjj5tXTx\",\"v9KtC8YLbMWmXiW2H\",\"a777e8chPvJkY3tKa\",\"n2BRY9X8899dcG8Bw\",\"dBtjNATHxMwXRzv8B\",\"hnyhBFWwNCz9mDfSi\",\"iojEnnY9FsMfYzp6f\",\"W5TajitmCyxz87zAC\",\"DEDniTrstQYGounXT\",\"zZDaXBxMzTCBhNkgL\",\"yjtdwc2AC4jA2RWtn\",\"KZ2xddpM2f9JRaryB\",\"Ecg4m7srYGgZsb4Ck\",\"qD2LrwaDrSdiybLKY\",\"8fZxjQfuXw5HMSRJM\",\"spqXrjG3ZFa2j5uTR\",\"p8qqFdJ3FSk5x9z3G\",\"DPi9QGLctq2y76KuE\",\"xn7uGNKeAwPEkP9oA\",\"iS5BrkGLzJyPK7nKt\",\"dkcmCKwqApX5jBggc\",\"J3upzLHuEwXH7Z2hx\",\"Wv2vJnEj8ywNmARoF\",\"gXTAie79kiw28tx5u\",\"qZQxPQ2kaNKAMesHT\",\"zgoEhAyhrjnsSLPGw\",\"QRv96jmNaYsWkxQEG\",\"oBcs8GLX2ZFLXQy8y\",\"cAP3n5NY64uoMwzRR\",\"uw8E83imJYpQiiPpP\",\"2u9wghjCydey6aWys\",\"GGdmhAvxXhqhhibJN\",\"PC3pLs36zNzpRDSuE\",\"T6iBEE2jp7f7iEF2P\",\"gKnWjDjwrJh7MK2df\",\"2PufnQcsHsfymufX3\",\"buX4mCQhtXCfBjeno\",\"o4ixjQGSaYqA2JoM4\",\"JhX7jvtpwNyxcc39m\",\"yod5YhKtPqw2GfG9B\",\"4Lwjr34ypKNQNQCar\",\"8sNv5PTHa7XQ8bNqR\",\"ey3CASd6Je5LEJzfB\",\"Ds7L5bksw2QRHjrKL\",\"5HCu9Ydd86QgHDRNP\",\"3KkyQm77zsew58Dc2\",\"n2qKKxomPnb4zez5M\",\"Qyfyyw6oC4EHAndzo\",\"BrTDhPJcACL2bsrpJ\",\"g6dBdzLo5fAiNGz6r\",\"jkbavR2ATFJcpmo8M\"],\"quality\":[5,4,1,5,5,4,3,5,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.2727272727272725,\"family\":[{\"_id\":\"WyBgESqLetZKDW9sD\",\"language\":\"cpp\"},{\"_id\":\"AudsydHhvWpCCSuaN\",\"language\":\"java\"},{\"_id\":\"gjKemfXwedir9y7D4\",\"language\":\"javascript\"},{\"_id\":\"eBTCwYHpdaHciieuP\",\"language\":\"python3\"},{\"_id\":\"keqvTBiiKWznnkBQE\",\"language\":\"ruby\"}]}}"]