a["{\"msg\":\"result\",\"id\":\"1199\",\"result\":{\"_id\":\"yKMxg88HGXmLhirht\",\"author\":\"Caleb Miller\",\"authorId\":\"2QziknsznNeMPRh3g\",\"code\":\"def add_letters(a):\\n\\t\",\"difficulty\":1.6666666666666667,\"quality\":4.75,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"nh4NwfvxJESNbNKWs\",\"instructions\":\"Create a function `add_letters` that takes a list/array of letters `a`, and returns the \\\"sum\\\" of them.\\n\\nTo add two letters, take their number value, add them together, and convert it back together. For example, `a` would be `1`, `b` would be `2`, etc. So to add `b` and `c`, take `2 + 3 = 5`, and then get the fifth letter of the alphabet (`e`).\\n\\nSo then `d + e + f` would be `4 + 5 + 6 = 15`, and the fifteenth letter is `o`, so that's what you return.\\n\\nLetters can also wrap. Like with `y + c`, that's `25 + 3 = 28`, which doesn't exist. Consider that the 27th letter just wraps around and ends back up at `a`. With this logic, `y + c = b`. Don't just do 27 = 1 though, because you could end up with a much higher sum like 70.\\n\\n### Examples\\n```\\nadd_letters([\\\"a\\\"]) ➞ \\\"a\\\"\\nadd_letters([\\\"a\\\", \\\"b\\\"]) ➞ \\\"c\\\"\\nadd_letters([\\\"a\\\", \\\"b\\\", \\\"c\\\"]) ➞ \\\"f\\\"\\nadd_letters([\\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"d\\\", \\\"e\\\", \\\"f\\\"]) ➞ \\\"u\\\"\\nadd_letters([\\\"y\\\", \\\"a\\\"]) ➞ \\\"z\\\"\\nadd_letters([\\\"y\\\", \\\"c\\\"]) ➞ \\\"b\\\"\\nadd_letters([\\\"z\\\", \\\"a\\\"]) ➞ \\\"a\\\"\\nadd_letters([\\\"x\\\", \\\"y\\\", \\\"z\\\"]) ➞ \\\"w\\\"\\nadd_letters([]) ➞ \\\"z\\\"\\n```\\n\\n### Notes\\n- Don't forget to `return` the result.\\n- An empty array should return `z`. The logic behind this is that if you get a sum of `0`, then wrap it all the way around backwards (since the 0th letter doesn't exist), giving you 26 which = `z`.\\n- All letters given will be lowercase.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(add_letters([\\\"a\\\"]), \\\"a\\\")\\nTest.assert_equals(add_letters([\\\"a\\\", \\\"b\\\"]), \\\"c\\\")\\nTest.assert_equals(add_letters([\\\"a\\\", \\\"b\\\", \\\"c\\\"]), \\\"f\\\")\\nTest.assert_equals(add_letters([\\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"d\\\", \\\"e\\\", \\\"f\\\"]), \\\"u\\\")\\nTest.assert_equals(add_letters([\\\"y\\\", \\\"a\\\"]), \\\"z\\\")\\nTest.assert_equals(add_letters([\\\"y\\\", \\\"c\\\"]), \\\"b\\\")\\nTest.assert_equals(add_letters([\\\"z\\\", \\\"a\\\"]), \\\"a\\\")\\nTest.assert_equals(add_letters([\\\"x\\\", \\\"y\\\", \\\"z\\\"]), \\\"w\\\")\\nTest.assert_equals(add_letters([]), \\\"z\\\")\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,1,1,3,1,1,1,2,2,2,2,3,1,2,3,0,2,2,1,2,2,1,2,1,2,5,1,2,0,0,2,1,2,0,2,2,2,2,1,2,2,2,2,2,3,3,3,1,2,3,1,2,2,2,1,0],\"quality\":[5,5,5,5,4,5,5,5,5,5,5,4,5,4,5,5,5,5,4,5,5,5,5,5,5,5,5,3,4,4,5,5],\"rators\":[\"2QziknsznNeMPRh3g\",\"dYPkStFnLvAMsHSzZ\",\"DbCjJm64gLZTSAYTu\",\"aEm3Wvj2rFYRL8Lrb\",\"QRv96jmNaYsWkxQEG\",\"MRAstNo5Lmm6YFTtP\",\"qD2LrwaDrSdiybLKY\",\"gJYuGdkXEWWmGRLzu\",\"6MjSiiBLPcvXbXcaZ\",\"dBzwBtRjZqB98DJeB\",\"J3upzLHuEwXH7Z2hx\",\"DPi9QGLctq2y76KuE\",\"8PwfYqoDQFThzNtvf\",\"b3nshDT7mH96vKd6G\",\"2QGRoQn2dRq3scu7k\",\"FEYpu9RWysAgW3XnP\",\"Fb2wehA7QgTFWry2x\",\"p8qqFdJ3FSk5x9z3G\",\"cR3ibTMxLyEdDFCHY\",\"tAF9Gf6PiGogbZuWs\",\"HF28xZKSLM9wEuqNg\",\"Yp7uvStL97cC9fKkY\",\"s5M5RvgqR9BhB9JoC\",\"8JyqsSbN2FJXPr3cw\",\"gb9rvGus2Jv7bjZSs\",\"9CoqdidjM9KbeKnHY\",\"oBcs8GLX2ZFLXQy8y\",\"PXAcsKkssS2yLyDv2\",\"yjtdwc2AC4jA2RWtn\",\"eMuCpJ2spXWkJjWNz\",\"iS5BrkGLzJyPK7nKt\",\"tpxMgkGSHwBjS95Ta\",\"KJCDwGkoXh8qtbbKr\",\"cAP3n5NY64uoMwzRR\",\"gXTAie79kiw28tx5u\",\"7XjpFhwzNaeFiQctW\",\"H4abACFDH5t8CnnyH\",\"5XiuAqicKD4hBdu63\",\"RGMbFMZXJr7DhcAJy\",\"JS3hNM3XXkxPdg3yk\",\"d8qtzoLB264iP8tdY\",\"5HCu9Ydd86QgHDRNP\",\"Jqk2uJZZxEv5wZFze\",\"wRttWTM59y8m5mx7x\",\"J5T8gZqiZXFuFDTQ7\",\"yMcCr6yobXJnkgxH2\",\"Wv2vJnEj8ywNmARoF\",\"HqmxnQJM66Y57twhn\",\"5S9nX4rKsnCcnv4Cz\",\"YRAzEBJoLvSaiPtYx\",\"HuNF3xTBzmatyGSTm\",\"buX4mCQhtXCfBjeno\",\"LWCzZ8mb8gwrRNGfq\",\"eYfPWvZwnJQkHbSTK\",\"GGdmhAvxXhqhhibJN\",\"Ds7L5bksw2QRHjrKL\",\"ebR9m79RbNzm4cJsJ\",\"CHvzhtXnv8HTbPQ56\",\"PWgzeK859suojbrRx\",\"YcCLwitFMAEJSnxAW\",\"srJ34BaybkQh3qRkM\",\"qAby4AWXmTNeusvg3\",\"iojEnnY9FsMfYzp6f\",\"DEDniTrstQYGounXT\",\"T6iBEE2jp7f7iEF2P\",\"o4ixjQGSaYqA2JoM4\",\"AFfw7cGg83uYk2Miy\",\"PC3pLs36zNzpRDSuE\",\"mDWNyaaQ9hvPCRzSd\",\"yr822PZmmiDDenxpB\",\"yod5YhKtPqw2GfG9B\",\"9Ly8afdtofp8DXzrt\",\"AasGs8AeX9Lcb9xJn\",\"eHcgvkTGsH7ZziqBo\",\"mvJBakQ35CWAnbbEZ\",\"XPKNsEdkvigx4eX6o\",\"8BFSTCnoe2QggN64c\",\"EHtTFoDbt722AH667\",\"GbCaMaPga4JtKpWzZ\",\"qaR8DnWrTk8Mus5Q2\",\"BrTDhPJcACL2bsrpJ\",\"dzS6WBTMHyFEag6Fp\",\"d9LBRxvADNBB5QJMB\",\"4Lwjr34ypKNQNQCar\",\"2PufnQcsHsfymufX3\",\"mxX4rH5ELYkdZ2Mbw\",\"9pzFiFK3ANLjQfnr2\"],\"total\":95},\"flags\":0},\"summary\":\"Create a function add_letters that takes a list/array of letters a, and returns the \\\"sum\\\" of them.\\n\\nTo add two letters, take their number value, add them together, and convert it back together. For example, a would be 1, b would be 2, etc. So to add b and c, take 2 + 3 = 5, and then get the fifth letter of the alphabet (e).\\n\\nSo then d + e + f would be 4 + 5 +\",\"tags\":[\"arrays\",\"logic\"],\"timestamp\":{\"$date\":1601164775734},\"title\":\"Adding Up Letters\",\"family\":[{\"_id\":\"4z75JHvjRXh8oyrri\",\"language\":\"javascript\"},{\"_id\":\"yKMxg88HGXmLhirht\",\"language\":\"python3\"},{\"_id\":\"ExtuAG4wnK5MhNoqz\",\"language\":\"ruby\"}]}}"]