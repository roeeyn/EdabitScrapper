a["{\"msg\":\"result\",\"id\":\"976\",\"result\":{\"_id\":\"7QPHWACcDihT3AM6b\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def can_find(bigrams, words):\\n\\t\",\"difficulty\":1.4945054945054945,\"familyId\":\"sCsh8Kj3j64iBWu6J\",\"instructions\":\"You are given an input array of bigrams, and an array of words.\\n\\nWrite a function that returns `True` if **every single bigram** from this array can be found at least **once** in an array of words.\\n\\n### Examples\\n```\\ncan_find([\\\"at\\\", \\\"be\\\", \\\"th\\\", \\\"au\\\"], [\\\"beautiful\\\", \\\"the\\\", \\\"hat\\\"]) ➞ True\\n\\ncan_find([\\\"ay\\\", \\\"be\\\", \\\"ta\\\", \\\"cu\\\"], [\\\"maybe\\\", \\\"beta\\\", \\\"abet\\\", \\\"course\\\"]) ➞ False\\n# \\\"cu\\\" does not exist in any of the words.\\n\\ncan_find([\\\"th\\\", \\\"fo\\\", \\\"ma\\\", \\\"or\\\"], [\\\"the\\\", \\\"many\\\", \\\"for\\\", \\\"forest\\\"]) ➞ True\\n\\ncan_find([\\\"oo\\\", \\\"mi\\\", \\\"ki\\\", \\\"la\\\"], [\\\"milk\\\", \\\"chocolate\\\", \\\"cooks\\\"]) ➞ False\\n```\\n\\n### Notes\\n- A **bigram** is string of two consecutive characters in the same word.\\n- If the list of words is empty, return `False`.\",\"lab\":\"Test.assert_equals(can_find([\\\"at\\\", \\\"be\\\", \\\"th\\\", \\\"au\\\"], [\\\"beautiful\\\", \\\"the\\\", \\\"hat\\\"]), True)\\nTest.assert_equals(can_find([\\\"bo\\\", \\\"ta\\\", \\\"el\\\", \\\"st\\\", \\\"ca\\\"], [\\\"books\\\", \\\"table\\\", \\\"cap\\\", \\\"hostel\\\"]), True)\\nTest.assert_equals(can_find([\\\"la\\\", \\\"te\\\"], [\\\"latte\\\"]), True)\\nTest.assert_equals(can_find([\\\"th\\\", \\\"fo\\\", \\\"ma\\\", \\\"or\\\"], [\\\"the\\\", \\\"many\\\", \\\"for\\\", \\\"forest\\\"]), True)\\n\\nTest.assert_equals(can_find([\\\"ay\\\", \\\"be\\\", \\\"ta\\\", \\\"cu\\\"], [\\\"maybe\\\", \\\"beta\\\", \\\"abet\\\", \\\"course\\\"]), False)\\nTest.assert_equals(can_find([\\\"oo\\\", \\\"mi\\\", \\\"ki\\\", \\\"la\\\"], [\\\"milk\\\", \\\"chocolate\\\", \\\"cooks\\\"]), False)\\nTest.assert_equals(can_find([\\\"la\\\"], []), False)\\nTest.assert_equals(can_find([\\\"la\\\", \\\"at\\\", \\\"te\\\", \\\"ea\\\"], [\\\"latte\\\"]), False)\",\"language\":\"python3\",\"summary\":\"You are given an input array of bigrams, and an array of words.\\n\\nWrite a function that returns True if every single bigram from this array can be found at least once in an array of words.\\n\\nExamples\\ncan_find([\\\"at\\\", \\\"be\\\", \\\"th\\\", \\\"au\\\"], [\\\"beautiful\\\", \\\"the\\\", \\\"hat\\\"]) ➞ True\\n\\ncan_find([\\\"ay\\\", \\\"be\\\", \\\"ta\\\", \\\"cu\\\"], [\\\"maybe\\\", \\\"beta\\\", \\\"abet\\\", \\\"course\\\"]) ➞ False\\n\\\"cu\\\" does no\",\"tags\":[\"strings\",\"higher_order_functions\",\"validation\"],\"timestamp\":{\"$date\":1557247195297},\"title\":\"Do All Bigrams Exist?\",\"stats\":{\"completed\":{\"total\":309,\"ratings\":[2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,0,1,2,0,2,2,1,0,1,0,2,2,2,1,2,0,2,0,2,2,2,1,1,2,1,2,3,2,1,2,1,1,0,2,1,1,2,1,1,1,1,2,2,3,0,1,2,1,2,2,2,2,2,2,2,1,0,0,2,2,1,2,2,1,0,1,1,0,2,2,2,1,1,1,1,2,5,2,2,1,1,1,2,2,0,2,4,2,0,2,2,2,1,2,2,4,0,1,2,0,0,1,2,1,2,2,2,1,3,2,1,2,2,2,2,1,2,2,0,0,2,0,2,2,0,0,1,1,1,0,1,1,2,0,2,2,2,2,2,0,2,1,1,2,2,1,2,2,2,2,2,2,0,1,2,2,0,2,5,2,2,0,0,2,2,1,2,2,1,1,2,2,2,1,2,2,1,2,0,2,3,1,2,3,0,1,0,0,2,2,1,2,1,2,2,1,1,2,2,0,2,3,2,1,2,2,1,1,2,1,1,2,1,2,0,2,1,0,2,2,2,2,2,0,2,1,2,0,2,3,2,3,1,1,0,1,2,1,2,2,1,2,2,2,0,1,2,1,3,2,2,2,2,0,2,2,1,1],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"tAF9Gf6PiGogbZuWs\",\"8JyqsSbN2FJXPr3cw\",\"FikSPhcrHBpQ4CyGC\",\"yZvzB3qFb8pkHy4dg\",\"Akcoifp2kwZrN8Rub\",\"t5gr8nEXaWqrtgq6r\",\"QzqL4jkcY4BMmNuS8\",\"ab7BsQuhDo3QgE6bh\",\"gb9rvGus2Jv7bjZSs\",\"Y3KkPrBzMBgMiqaQ6\",\"4HC75a4BAtjSd8jPv\",\"kQH5b8MXJunh84Czq\",\"AF6LgdKhEdzwgRJom\",\"eX48NoZ7WzWxoQF4u\",\"qvEvDcL32a5F4Tg6c\",\"HjZWhEY48W27HWWG2\",\"4kJMafuJWxzhDht2w\",\"SKabuq5XuhXBugKBa\",\"M8jrv2FfpMQp9Qzpx\",\"6ckDJWbyznyQQLkrP\",\"nc7bRhkxgKyqusYe3\",\"iyZcWmYpoZM469SAx\",\"hmJar7wTPM99rX4HB\",\"nZ58gDWFhqXiZpmZQ\",\"7PTKd4xtWnbL7BzL2\",\"qcbdDGrrf5HzPLRvQ\",\"iqmPb9JuJDgTFeR8Q\",\"Rgdjr9tBGabXFdoXL\",\"TNQ7ixK78HHTLP7it\",\"JEAi9mG3vvBomJ3Yu\",\"PFjMZGHNAPTkgd7tq\",\"ahWFxnaxt9bXSA4f3\",\"tHEH9MBHBAGvhgJGd\",\"aXCm9vWqKwL9XFYoj\",\"XKi8iZXBCHCaebSHh\",\"aHKMdSPJgsMW3s2kL\",\"C9LKGu2g5hSijvDzA\",\"yrCNkFYQBEDE76eFS\",\"gxdjEjj4AdrZv7jCa\",\"PSrcg6fy835R4c5CW\",\"AnjjyuE9aWLzK3nkg\",\"eoo54vPGzwD3HZuHC\",\"TNMAJidLpPdH4kmBv\",\"td7qPZ7Lv4pEWT2Ya\",\"WkWyq9wMkZhXB6zsD\",\"uSh3aNxzD28jBuhxa\",\"yAouD3PxzED8a4gap\",\"jYJ26SiLKBu5GRumq\",\"PYg2boGDLrEcF3i4j\",\"6u7yc9m6HuHGbHzph\",\"3fjCCrpR2aD32sTrc\",\"nfXGHENb5md7m355s\",\"sCnrfER8vCe4xhpB2\",\"ZzwR8m8Q6Gozo9ofz\",\"gMJhLdyw3tH7L96X2\",\"Nj6FwgBtAXsaQwsM2\",\"N2wnZXkhDH86mgjQ8\",\"498CxrZQdThLMa7ki\",\"FgkYtHLxeD8pETJ8T\",\"cR3ibTMxLyEdDFCHY\",\"HQxp7NcdvF92G7bYS\",\"3LiSLdtN58n46NEqg\",\"T2vhHPhRR96hRizq8\",\"MJMWfiW978otApbcG\",\"4y2bxsHwifCdZXAQA\",\"WBAKsQ3cdcrKxeAcp\",\"jWrQpWgSshib2CyzB\",\"6QEhBfzWmuYwm34zz\",\"nzx4uAPg3hCceyFPE\",\"9YtQPAffoq4WJLcAP\",\"Jg8ZSRXe3NoDMCqGu\",\"2fxapKr8XGdNeaKi2\",\"otXtuQygbcYATMZoP\",\"RXb6cmCNaYbczuDwy\",\"3efW5qCKraPjzEfiX\",\"HqmxnQJM66Y57twhn\",\"K3RacTvkWHLfzKF8i\",\"oqGkxvASXq52iTDvp\",\"K96FwtfDDN5WM4Bb7\",\"ksafdYcNM3SFEQoW9\",\"DLai9DxpZN6p5TPRX\",\"EEjNW5t4XPGFLfq3k\",\"7vyub5zTHNfMfQWoW\",\"u5u2YpHXiNgzDNJdX\",\"sKfrD9gjCDHuqLzSk\",\"4tgBydK887PitgAoi\",\"6ShafRStcvew4GfCh\",\"8PwfYqoDQFThzNtvf\",\"yabtHTtycsWhcGBfD\",\"fxLjWpWbBeaYcvdgB\",\"qJZsi5rhRnWA38FbA\",\"DvzpcjeQsLCSZc9r9\",\"C4QntmkYtB89GNtpd\",\"Jqk2uJZZxEv5wZFze\",\"CEd9tLdXeDeNHSzys\",\"knT3HJMb87iKpjqdM\",\"XbxHXmh5ZmRN2gw3K\",\"Yp7uvStL97cC9fKkY\",\"Xj6R2zqhgumffQCAN\",\"BeFnbPbMnAM2SjBdZ\",\"DryNRN98Dj24BpgrL\",\"pDvFWMCD9fQwoBPcu\",\"PXAcsKkssS2yLyDv2\",\"2innwjWqxJHo4eRGh\",\"mxX4rH5ELYkdZ2Mbw\",\"rEWQdNHK6YjuBqmrR\",\"vgTvCCxgvbCTDvaRT\",\"QnPD4Sv6W4LHc2Qng\",\"Ycj4iTJGFyvC4bXek\",\"p3dsCFdWGzWGhFrSQ\",\"4CFzv558qbGcpQwc4\",\"AasGs8AeX9Lcb9xJn\",\"s5M5RvgqR9BhB9JoC\",\"uzy2C5XDWz527Wkgr\",\"v3fjGuc7Pq4yjFygS\",\"sJWTa7iWeRoRtqJ8N\",\"pMg2Zddm29zRGP6wg\",\"hnyhBFWwNCz9mDfSi\",\"w3A7cBWyAfukk6xEQ\",\"g8yJiPAWXbrgxbjfZ\",\"N7GPFEhCaiQ79MKjz\",\"LA2YneDcbtiSj5SH6\",\"9Ly8afdtofp8DXzrt\",\"zg8GmMSP2LkHBtAzy\",\"dHZqT6h4JMwk5fPC8\",\"esY84P5NBKF8TWHDv\",\"aRqQ42J5zqCmBNd8w\",\"sz8ufn9i8zeiGWpAy\",\"uw8E83imJYpQiiPpP\",\"aEm3Wvj2rFYRL8Lrb\",\"2QGRoQn2dRq3scu7k\",\"orFLgPDw9H5MDzmwo\",\"jNvegJWCk5HCtEMbK\",\"ZNnsMeNkdDhHjSrZb\",\"HF28xZKSLM9wEuqNg\",\"gJYuGdkXEWWmGRLzu\",\"KRSKj7ikX2ytWFmod\",\"KpHrC7WPEojnzgEtz\",\"9uZpgAtSuPZ7W7DL6\",\"2iFe3EHEH2YdhSKrs\",\"8LfTheFzvicameoz9\",\"Cc2Cgj4MWXZxsTooC\",\"kYWb8BwpKwunQkxeX\",\"DEDniTrstQYGounXT\",\"M8dQuMrEpP8Hc3tHN\",\"KdNDysEsy2TW5QRJ2\",\"9pzFiFK3ANLjQfnr2\",\"Fk9kLwoG4Brf4KsKf\",\"n2BRY9X8899dcG8Bw\",\"qZQxPQ2kaNKAMesHT\",\"FEYpu9RWysAgW3XnP\",\"So6PHm74mfJuY2WTs\",\"ttLjioENuEyPrsN6D\",\"MKT7khMBGXzA22ykf\",\"rrNComrAKsGM6iaLh\",\"FzxTj4GuujhwpZM7y\",\"X2ovTmXcKmN798pRe\",\"ahk2qiXKJA753wAJk\",\"yr822PZmmiDDenxpB\",\"DrkR35NqnP9NDLbq6\",\"XrqNzJ2FRG8HnGiR6\",\"4rwxLqLs2mNZNg8NB\",\"a777e8chPvJkY3tKa\",\"J5T8gZqiZXFuFDTQ7\",\"mFqrAKcfZZM58iYmw\",\"9bQyb6rW7xfE4vgrR\",\"n2ck2WGuM35vbZiFz\",\"eMuCpJ2spXWkJjWNz\",\"2ptN2mhjFwFcHyPZd\",\"mDWNyaaQ9hvPCRzSd\",\"NG8PWBSjsM8mMhQEq\",\"H4abACFDH5t8CnnyH\",\"ZrKCkX7xxGGZzauFW\",\"3cF6NXq3ZEwdkgSjb\",\"syRNbbPdLCGXbH2Gy\",\"zd9FLSzsGz3evKafy\",\"WwMjW4MJRuNFExoPc\",\"YcCLwitFMAEJSnxAW\",\"6kz7jjJS8W4tikYQT\",\"iojEnnY9FsMfYzp6f\",\"CwXsu25ygLEwQbmQC\",\"NNE5HNRXAkmhrWgyQ\",\"Pe8vWpDHRuH9nSGKW\",\"Ecg4m7srYGgZsb4Ck\",\"R4SjTgDnpigJYDLyL\",\"b9YQPLb9ZPSADdHXX\",\"yNjkHfHESBAnCssPB\",\"7txFzDQ43vJ7qCY88\",\"iS5BrkGLzJyPK7nKt\",\"yjtdwc2AC4jA2RWtn\",\"X5MqeHyPh6cSQCXnk\",\"hRiMXDZNAzyPd5tpt\",\"6SKDJwXpev4qPSzgM\",\"ta5CrWnBCRusD2WMo\",\"GGprTwrkjuccmrQRg\",\"Wv2vJnEj8ywNmARoF\",\"oBcs8GLX2ZFLXQy8y\",\"i5iePG5GqhJJ8HEoB\",\"Q9afpRu3u8zuWuzLQ\",\"WxTFTRWgCHauB9ntJ\",\"YA7SDhpgEtsqynvNL\",\"RehJGBFS6CYiWdjZx\",\"TPhfpB5tzQWSSn67n\",\"7XjpFhwzNaeFiQctW\",\"qPpQfR5KyDb5Y3EFf\",\"KLmLKaJPfsYxp42p2\",\"k2Eo3wyfZZ6KxvKhN\",\"F2ykFxhDEEkj6N5KE\",\"tpxMgkGSHwBjS95Ta\",\"mG8HqKiAQFTdRZthG\",\"gXTAie79kiw28tx5u\",\"EMJ6uvBZkie429gdg\",\"9CoqdidjM9KbeKnHY\",\"JS3hNM3XXkxPdg3yk\",\"8BFSTCnoe2QggN64c\",\"kNrnnMxhFZztMTBAX\",\"5HCu9Ydd86QgHDRNP\",\"QRv96jmNaYsWkxQEG\",\"DPi9QGLctq2y76KuE\",\"8WpvgSbQciTQWdd8T\",\"wRttWTM59y8m5mx7x\",\"CTKmXtrqDYqJBnuy8\",\"dj5AyG5fWP8FdsSmZ\",\"9rhsisf8ofHavG5aT\",\"J3upzLHuEwXH7Z2hx\",\"ph8dY6HgwydrhpKMq\",\"KJCDwGkoXh8qtbbKr\",\"cAP3n5NY64uoMwzRR\",\"dYPkStFnLvAMsHSzZ\",\"d8qtzoLB264iP8tdY\",\"8fZxjQfuXw5HMSRJM\",\"RGMbFMZXJr7DhcAJy\",\"cZccqzRQ9GgjQF6Az\",\"5XiuAqicKD4hBdu63\",\"sHjfbGQGLHE6JR6qu\",\"MRrjdojkTWC8oTrM4\",\"C2AfMipCicfD58WJ9\",\"axdSNLZpiCDF8RS6n\",\"HuNF3xTBzmatyGSTm\",\"o4ixjQGSaYqA2JoM4\",\"buX4mCQhtXCfBjeno\",\"R29kgJ9M7R4qqwjcE\",\"5S9nX4rKsnCcnv4Cz\",\"5hQnRWiKkhgKJXNMP\",\"GGdmhAvxXhqhhibJN\",\"X67qAYJvDuBh3xzEf\",\"srJ34BaybkQh3qRkM\",\"eYfPWvZwnJQkHbSTK\",\"Ds7L5bksw2QRHjrKL\",\"PWgzeK859suojbrRx\",\"sbJcFfQjQ59Wfg4Cd\",\"LAvgPck2t7wP8Czzd\",\"qAby4AWXmTNeusvg3\",\"mfsaETo7uA4x5vqLD\",\"T6iBEE2jp7f7iEF2P\",\"CHvzhtXnv8HTbPQ56\",\"ey3CASd6Je5LEJzfB\",\"Wpn95NqWxncQrwNgz\",\"EfxwqhYdapX3dMQC2\",\"YmQb9Mo4Xcg2vzgbn\",\"66a9xX73nmTEuKs9k\",\"PC3pLs36zNzpRDSuE\",\"xt773tBLD5E3f2NdQ\",\"yod5YhKtPqw2GfG9B\",\"BrTDhPJcACL2bsrpJ\",\"JhX7jvtpwNyxcc39m\",\"mvJBakQ35CWAnbbEZ\",\"c2q7mY39z5JPEMCaM\",\"rrSC943cCKNG48sH4\",\"2PufnQcsHsfymufX3\",\"sKBGcRfEr6LrvG8A2\",\"RoGGD5cpHb4ftdLDv\",\"BnaE25vvCGcfL3jiQ\",\"X4rzfxGgxx6CS7Bpz\",\"R6YxHWAiLgKwy5YvC\",\"XD5nmvKQchKezPXhy\",\"AFfw7cGg83uYk2Miy\",\"utTuvGdmu2sBHWBhQ\",\"hR7GMiqGap4CzEWSy\",\"pduNK68oazqQTtbLp\",\"xdgy7nWSKCekXnaJM\",\"4Lwjr34ypKNQNQCar\",\"4TmgHkn5vqyHK3sYC\",\"T6Rm8mREPMZSftzrC\",\"qaR8DnWrTk8Mus5Q2\",\"d9LBRxvADNBB5QJMB\",\"dzS6WBTMHyFEag6Fp\",\"wjc4iejpErBhxWwHo\",\"5QN8R22z43SrwoHDz\",\"Wi4H6ayKsNDWWQCG5\",\"rCrbqMiaGPgHYTNxu\"],\"quality\":[5,3,5,2,4,3,5,3,4,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,1]},\"tests\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.428571428571429,\"family\":[{\"_id\":\"qs36p5HZxkBgsWdfa\",\"language\":\"cpp\"},{\"_id\":\"p39Q6JFuran7t5LpS\",\"language\":\"csharp\"},{\"_id\":\"wQGGp6Qce6phDCvW9\",\"language\":\"javascript\"},{\"_id\":\"7QPHWACcDihT3AM6b\",\"language\":\"python3\"},{\"_id\":\"k8zgawbLm3dNmgjWW\",\"language\":\"ruby\"},{\"_id\":\"KgayB62bHwZER4AXC\",\"language\":\"swift\"}]}}"]