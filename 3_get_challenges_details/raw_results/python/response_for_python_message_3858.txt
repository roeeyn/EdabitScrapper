a["{\"msg\":\"result\",\"id\":\"648\",\"result\":{\"_id\":\"XrQnBBLaGRkXZuM8n\",\"author\":\"caloizou\",\"authorId\":\"pDvFWMCD9fQwoBPcu\",\"code\":\"def index_filter(indexes, string):\\n\\t\",\"difficulty\":1.0919540229885059,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"QkYu6DniT9k7KWoT6\",\"instructions\":\"Create a function that takes two inputs: `indexes` (a list of integers) and `string` (a string). The function should return another string with the letters of `string` at each index in `indexes` in order.\\n\\n### Examples\\n```\\nindex_filter([2, 3, 8, 11], \\\"Autumn in New York\\\") ➞ \\\"tune\\\"\\n\\nindex_filter([0, 1, 5, 7, 4, 2], \\\"Cry me a river\\\") ➞ \\\"creamy\\\"\\n\\nindex_filter([9, -9, 2, 27, 36, 6, 5, 13, -1, 2, 0, 30, 2], \\n  \\\"That's life, I've got you under my skin\\\") ➞ \\\"frank sinatra\\\"\\n```\\n\\n### Notes\\n- Indexes may not be in order / may be negative (see example #2 and #3).\\n- The output string must always be lowercase, but the input `string` may not be (see examples).\\n- Bonus points for submitting a `lambda` function.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"tests = [\\\\\\n\\t[([2, 3, 8, 11], \\\"Autumn in New York\\\"), \\\"tune\\\"],\\\\\\n\\t[([0, 1, 5, 7, 4, 2], \\\"Cry me a river\\\"), \\\"creamy\\\"],\\\\\\n\\t[([9, -9, 2, 27, 36, 6, 5, 13, -1, 2, 0, 30, 2],\\\\\\n\\t\\\"That's life, I've got you under my skin\\\"), \\\"frank sinatra\\\"],\\\\\\n\\t[([-1, 8, 8, 3], \\\"Dream a Little Dream of Me\\\"), \\\"ella\\\"]\\n]\\n\\nfor ((indexes, string), expected) in tests:\\n\\tTest.assert_equals(index_filter(indexes, string), expected)\\n\\nif index_filter.__name__ == '<lambda>':\\n\\tprint(\\\"Exceptional! You created a lambda function!\\\\n100 points for Gryffindor!\\\")\\nelse:\\n\\tprint(\\\"Execellent. Now try to make it a lambda function ;)\\\")\",\"language\":\"python3\",\"quality\":4.67741935483871,\"stats\":{\"completed\":{\"ratings\":[0,0,0,0,0,1,1,1,2,1,0,0,3,1,1,1,1,2,1,0,1,1,2,1,0,0,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,2,2,1,2,2,1,1,0,2,1,1,1,2,1,1,2,1,1,1,0,2,1,0,0,1,1,2,2,2,3,1,1,2,2,0,0,0,0,2,1,5,1,1,0,1,1,0,0,1,3,0,0,0,1,1,1,1,0,1,2,0,1,2,3,1,2,1,1,1,1,1,0,1,2,0,1,1,0,1,1,2,2,1,0,2,1,1,2,2,0,2,1,1,1,0,1,1,0,1,1,0,1,1,4,1,0,0,1,0,1,1,0,1,2,3,2,1,1,1,0,0,1,1,2,1,2,2,2,0,1,1,1,1,1,1,0,1,1,0,0,1,1,1,0,1,2,2,2,2,2,1,0,1,0,1,1,1,0,1,0,1,1,0,2,2,2,1,1,2,1,1,2,1,2,2,2,1,2,2,1,2,1,1,0,1,2,0,1,4,1,1,2,0,1,1,1,1,1,1,1,2,1,0,2,1,0,1,2,2,1,0,2,1,0,1,1],\"quality\":[4,5,5,4,5,5,5,4,5,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,1,5,5,5,4,5,5,5,3,5,5,4,5,5,5,5,5,5,5,5,5,5,3,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,4,5,5,5,4,5,5,5,5,5,5,5,5,5,4,5,5,3,2,5,5,5,5,5,5,3,5,5,4,5,5,5,5,5,4,4,5,5,5,5,4,5,2,5,5,4,4,5,5,5,3,5,4,5,5,4,4,4,5,3,4,3,5],\"rators\":[\"nfXGHENb5md7m355s\",\"iAEohnrXqQNbES8ep\",\"As83XFL89deJfprRY\",\"RSTdK2S8CecymSS6h\",\"Yp7uvStL97cC9fKkY\",\"oyKcm3zqdy8Ko5P5d\",\"pDvFWMCD9fQwoBPcu\",\"CyzskHGsC6WSmYrLu\",\"tAF9Gf6PiGogbZuWs\",\"PXAcsKkssS2yLyDv2\",\"gJYuGdkXEWWmGRLzu\",\"FPmmC5RwcpTTTBAGy\",\"iryCjiSyq9o8e9agN\",\"Ds7L5bksw2QRHjrKL\",\"DEDniTrstQYGounXT\",\"5hQnRWiKkhgKJXNMP\",\"PPhq9DcoWd4auHM4s\",\"H3gYkCNXditW52vNL\",\"zLRL6xyoN2eYsJ3Ni\",\"5XiuAqicKD4hBdu63\",\"QJjb5YhFjNf4M4pmY\",\"dSErs5Rk8ouLwaimp\",\"hvjtJ34vt2pK8iMa9\",\"XY6LTDBv46MAMYjbA\",\"7M4bGTiyRSTPwToSM\",\"KojHy4sAwJBN5qhbb\",\"yJxMxvH7S7vRoLK8P\",\"9FCeFzjPA4jrQ7oHW\",\"ik2dsFgXbyNwQEvt8\",\"yuRbyXHtdxTM5n7Es\",\"i5iePG5GqhJJ8HEoB\",\"y7NrcXNYAE6k4J5ro\",\"sbnXNh3YegeK42AJH\",\"jcGEghaWQAKEh5k8L\",\"FG7WFB9agN55W5W2N\",\"4PSnWx5upuHN9HwKt\",\"wBtC7NhdEeHMpQAj3\",\"PBn3fhAqsEqHEHq3E\",\"2bW8ZPE6Yzhr8gwJ8\",\"mWisat26RQk7BkzSJ\",\"qezMkJ2RzmEBjkfw5\",\"2Kzz5CubctKWfpPBp\",\"6nv33jN5hfWadBryw\",\"DpnYcMphntjsQ96qg\",\"FSe2mfd98g84k5DW6\",\"EG8fdMKRG9jMPDKEY\",\"c2q7mY39z5JPEMCaM\",\"gEqTEX2vrEzoYcFas\",\"9onLFjwWr6DqyRBJw\",\"MKT7khMBGXzA22ykf\",\"WtTSPHRbST9gEL8Cd\",\"QRv96jmNaYsWkxQEG\",\"8X8Ba6Q5WNNWyEEjJ\",\"5HTSi5wQNAdLm57LB\",\"wPpco9rPHqyfBntwp\",\"Z9D6qkTgp66F3YfGg\",\"MCWtrajfWFw2wizuS\",\"yjtdwc2AC4jA2RWtn\",\"J3upzLHuEwXH7Z2hx\",\"GsqNXp7AmynB6ahw3\",\"j9xhiECjZq8WLdq9K\",\"624Na7HAdEZa8Q7B9\",\"C2AfMipCicfD58WJ9\",\"vbF5nwqXKdmEidDoX\",\"NDSvaLYhmR4BQxbcD\",\"DqNQn9Jsxcu5HijKE\",\"C2enzC6c2TyTstSAd\",\"fTNQmMvTZhhiGBCMe\",\"QhhG4qLFwgHj8eTgF\",\"GGprTwrkjuccmrQRg\",\"9gpaoR7ZHSki4ze68\",\"ARvuFTQ2pK7WSBKim\",\"wjc4iejpErBhxWwHo\",\"DPi9QGLctq2y76KuE\",\"5HCu9Ydd86QgHDRNP\",\"uH4HvaiESNCeYdSyZ\",\"c2u7qfdaYxcyuydtu\",\"gXTAie79kiw28tx5u\",\"g9FyJ8yeT9ic97Qp2\",\"Cybtjz3cF7RgoiqrN\",\"utTuvGdmu2sBHWBhQ\",\"qZQxPQ2kaNKAMesHT\",\"acoAR9seZP2vSYj2P\",\"HuNF3xTBzmatyGSTm\",\"DYDJTyGgKFnBRLm2r\",\"oBcs8GLX2ZFLXQy8y\",\"4fjSgcqhQQZM2ZFRP\",\"8JyqsSbN2FJXPr3cw\",\"p8qqFdJ3FSk5x9z3G\",\"nJXgbSQozcoE8Wn4N\",\"mHvoroWGDLYbJqQJa\",\"dYPkStFnLvAMsHSzZ\",\"RGMbFMZXJr7DhcAJy\",\"FuYTQcDNjct58rqPa\",\"aEm3Wvj2rFYRL8Lrb\",\"qD2LrwaDrSdiybLKY\",\"Kh3Pc2ZRusurLaMyP\",\"pJj86xc32Bs7Frxvi\",\"w2HhxvSLmDhaGCAjE\",\"HF28xZKSLM9wEuqNg\",\"5zGMciq3fB4aeu9uj\",\"gb9rvGus2Jv7bjZSs\",\"zd9FLSzsGz3evKafy\",\"kNrnnMxhFZztMTBAX\",\"a777e8chPvJkY3tKa\",\"cZccqzRQ9GgjQF6Az\",\"eMuCpJ2spXWkJjWNz\",\"FEYpu9RWysAgW3XnP\",\"d8qtzoLB264iP8tdY\",\"cR3ibTMxLyEdDFCHY\",\"cAP3n5NY64uoMwzRR\",\"MLr2oF68SNjQHziZK\",\"whm4vkxLMtG9YyobP\",\"F9kmWdPuR7wPwZzLh\",\"iTYYSCoCZECksWJRu\",\"aHwEkYu4hWhh7MeEw\",\"iS5BrkGLzJyPK7nKt\",\"sHjfbGQGLHE6JR6qu\",\"axdSNLZpiCDF8RS6n\",\"NzbRqGWspQnWMoDrF\",\"WdKdsgH9gXkKgCycx\",\"wRttWTM59y8m5mx7x\",\"Fk9kLwoG4Brf4KsKf\",\"5f6oSeq4r5WTXLdCQ\",\"ZuuRwv4HkeT54MwA9\",\"eoepTq5ES5tfgY9XT\",\"dBzwBtRjZqB98DJeB\",\"BrTDhPJcACL2bsrpJ\",\"o4ixjQGSaYqA2JoM4\",\"cRoHBaA7HjePc8wb2\",\"R4SjTgDnpigJYDLyL\",\"rfyEkETeoS96QNH4e\",\"K3RacTvkWHLfzKF8i\",\"YcCLwitFMAEJSnxAW\",\"YRAzEBJoLvSaiPtYx\",\"GGdmhAvxXhqhhibJN\",\"rEecHXXCTwgG5wWNA\",\"ga7aTTEThzsELuC2j\",\"nFbmNzMQ38TncmfQX\",\"yod5YhKtPqw2GfG9B\",\"dNErCjyFobE5sn4Zh\",\"hERDiXzMt3bagzfKp\",\"LWCzZ8mb8gwrRNGfq\",\"yTtSCvGPyYna6JuRC\",\"Jqk2uJZZxEv5wZFze\",\"J5T8gZqiZXFuFDTQ7\",\"pduNK68oazqQTtbLp\",\"Tf7TJFSPktJBgLA4k\",\"3nied3n8KG8RSNixH\",\"s5M5RvgqR9BhB9JoC\",\"buX4mCQhtXCfBjeno\",\"2QGRoQn2dRq3scu7k\",\"dj5AyG5fWP8FdsSmZ\",\"9bQyb6rW7xfE4vgrR\",\"ffjnHrx8Ym7A7pQWe\",\"Lg4t6SEWgtYz4u7Cj\",\"HqmxnQJM66Y57twhn\",\"qAby4AWXmTNeusvg3\",\"CTKmXtrqDYqJBnuy8\",\"jQqahAQX57zz7PTMs\",\"oDN67zoApxcztnYdu\",\"MXGuntvz3byrP6WJc\",\"5S9nX4rKsnCcnv4Cz\",\"eYfPWvZwnJQkHbSTK\",\"97mMkvdDxbhkQXNPp\",\"JS3hNM3XXkxPdg3yk\",\"8BFSTCnoe2QggN64c\",\"LCuvvWMwiGuqTwNRi\",\"GqnEdzvEGRkgBxqHB\",\"AFfw7cGg83uYk2Miy\",\"srJ34BaybkQh3qRkM\",\"2HfNkb2SoqdyjKW3o\",\"2ptN2mhjFwFcHyPZd\",\"W8DheA4ouYyiAubpd\",\"6428wKHtwKkFdvBs5\",\"eybCguAWtbpvr544M\",\"ZfNh2Zcc9dHPdESgB\",\"7w6P78i9GEN9ndYuq\",\"bjS5tQpyq3KxNW3PD\",\"dB6s7p6pFMEyagbn2\",\"Q7Yxda7dqKeYPs2Db\",\"Gi5fpM9GkEnHpubLk\",\"fMwB3DrAfhGDGgkMv\",\"yxQAC6YW4HMTWzfyT\",\"PWgzeK859suojbrRx\",\"7txFzDQ43vJ7qCY88\",\"di2hhADLx59Bj4ewM\",\"pCMhfoZ5c6eBuCqbp\",\"B8n7KqbvEDjZzgj2D\",\"Nb6LYPoQP6KJZt8mz\",\"sbJcFfQjQ59Wfg4Cd\",\"KJCDwGkoXh8qtbbKr\",\"q9FfWNiMDKRiaCJ5j\",\"TmM3AN7g3fkh69ycj\",\"WY2w5zSQFHqSxWagm\",\"LQxof8pGabGuWP7Gn\",\"obxnkaoRRnEZLYeXo\",\"N2wnZXkhDH86mgjQ8\",\"YA7SDhpgEtsqynvNL\",\"GdKtjPh8TcfmJuduv\",\"pPpmP7xeJzGgK362R\",\"gjiu8kLnHYxe4HoBN\",\"hkJGLuib5md8vZ9HD\",\"m7KZ5donpz5F6AR3z\",\"Lm6ChQCWBmaikmk5J\",\"XD5nmvKQchKezPXhy\",\"q6QsMYNMpPNtmyTeW\",\"iYXdNw7tKcgA3QwBX\",\"ghMkPtdFCpM6w8nax\",\"7dQYiDeTcMztbGyso\",\"DkeEd2uhXypnPDnNT\",\"CHvzhtXnv8HTbPQ56\",\"AQSqD9oNv2uPfxZCR\",\"DtqjXiWqTN3uao2HQ\",\"cM58J93Nio69XXyme\",\"9iK6ib8wneyoscyRn\",\"LHo8zMsbqawpqF6ZK\",\"Y7WeWzgDHnBavuCwe\",\"XgRXeb4YyZqmiMTLe\",\"KCEsMas5BbmiD2Q9K\",\"ofR8rcREoHAT5fRc6\",\"cbhmt4aRWPyJnnzNT\",\"Afnps7TJQuS9sipMb\",\"yd4iYdazHmakJaBoR\",\"BJp2WkwLWGHHB5oQW\",\"PiRFsaY372Gbgs8qF\",\"jBo3xAopr37GFzY8g\",\"3cF6NXq3ZEwdkgSjb\",\"T6iBEE2jp7f7iEF2P\",\"WLwm5RACx53ZzvYLS\",\"2beWy8CzHeiaz7XeG\",\"ScaZG69jog5kcqGtQ\",\"8uiLiJcmWxWe6qw65\",\"2EbDCCJJvCfKkbYia\",\"iojEnnY9FsMfYzp6f\",\"iP7wNofhZXTkJ9ryG\",\"NrRa4TS6uZR9xuXRt\",\"PC3pLs36zNzpRDSuE\",\"66a9xX73nmTEuKs9k\",\"XrqNzJ2FRG8HnGiR6\",\"CKHKhvJcq9jNMqrmd\",\"X4rzfxGgxx6CS7Bpz\",\"YmQb9Mo4Xcg2vzgbn\",\"AJexRBN9cYQmqvYu6\",\"w3QDkmjZj2dAFDsjq\",\"zMrNuQsBHWMJtaEhM\",\"M2gFMJkocQSY6bsFR\",\"EfxwqhYdapX3dMQC2\",\"9Ly8afdtofp8DXzrt\",\"sKBGcRfEr6LrvG8A2\",\"mvJBakQ35CWAnbbEZ\",\"u5u2YpHXiNgzDNJdX\",\"JwkwCHcXthnGDsdFr\",\"4TmgHkn5vqyHK3sYC\",\"BMEud9eeJnPDC8A2k\",\"noZDgMMXkcPCLN8Ye\",\"K6MfKMytoJJuSGewP\",\"C9LKGu2g5hSijvDzA\",\"mJPSg8GhK7MYn48so\",\"x2JZpHMEWuBBiuxF9\",\"jWb7i8QD8ATq3jWNn\",\"eW9R2SCoYnY8HBAdL\",\"xo38NBvzivgRKBeq7\",\"YkALso3ygJRdn2kAW\",\"T6Rm8mREPMZSftzrC\",\"eebBTKTtEKw8bdy65\",\"Jr9XtaRvyEXEkKPhS\",\"BA6x5cvo8waZBwLmp\",\"mfjoiKdHNmtpSW6zu\",\"6hi3LTDpMndzhYunj\",\"SuhokLqQw2GKeWAYp\",\"Aj8reyMZMpnWfwvWg\",\"YXQvrgeiGzLd6cTW9\",\"AasGs8AeX9Lcb9xJn\",\"rrSC943cCKNG48sH4\",\"eHcgvkTGsH7ZziqBo\",\"JiSpvq6C7azQEmENc\",\"jNE5AHcJQWXz7efuP\",\"qzXAMXsHZGT8o5hTA\",\"ZXWDtCrM9ev3439oi\",\"2MjzJ7yxh3eT3xbng\",\"wNBT6m4YWztFdB3br\",\"H4LqzfSad6d4BCgwy\",\"FRWTyKeDYkzZDhY46\",\"vCXAR9dcbRxmwbCen\",\"Wpn95NqWxncQrwNgz\",\"J23RcmzbdtBbPCTjT\",\"etoxSpG4fGKThLozM\",\"vXpix7myGgWkusTfu\",\"GxhhLJnoYqKkJrbbq\",\"TBbWmn8XAjZWKDNdY\",\"F49xzJNZ9bbvwkkuB\",\"S9hHPiybdTKyuELsn\",\"cQ95Sm7uqkFSfX3jz\",\"edBvcEj36tm5emqdc\",\"Ju76wMJs7kL7o6Ybt\",\"vCeeMuYDbz3MB4vsk\",\"H4abACFDH5t8CnnyH\",\"jWbd7SYDzLPjc9EDh\",\"ey3CASd6Je5LEJzfB\",\"kjvgTyRFyKHv44DcH\",\"wwz3ixWSv8rFDHBXd\",\"FxbTzThBiTnRzfirA\",\"uSTS9sn52zLE4ohTE\",\"yKTD6p55ApgEKGBEf\",\"fKzJMR2LLbiRtGetj\",\"2FCRyJqwqzFTKSTgJ\",\"ddaZatYwPCthC2j6M\",\"r8MG3FvSgi8cbgPR2\",\"6g5sXf8xxRsTzCFTm\",\"53hSB4wTjHChJf2aT\",\"7e95GAqG3iCGPNsuL\",\"3GsCTT6cMuuSg2d4c\",\"v7d5i7EQBi7NewXEY\",\"h9azrsq7TmmPWYCK7\",\"miD34achrgKGsdgeM\",\"o2FKEP6gWCqYXnJG3\",\"PAidya9dtuZ5pKAc3\",\"DCCsw6ZPtnma8FDrq\",\"BEbejxvKPfQmmF7BF\",\"vxmwWDqbPhNwt64iL\",\"5Dd7XwALvvMMwS4Fb\",\"E9ttMPTkLkKG6nZrg\",\"9pzFiFK3ANLjQfnr2\",\"rzzFkBdQWcRjH2eKi\",\"g2mqHYvQmr78mET8i\",\"hZ2JDAEG2P5rMLWEW\",\"sKfrD9gjCDHuqLzSk\",\"N4a2bbQyC9aeF5RR9\",\"pwWtbXEjzuvrhEGwt\",\"zC8WrPp5BC6c2exrW\",\"LD7N9C39ZQqPTR9Wy\",\"EKGk8Qm4GwyynakrA\",\"PTDFuxAzou7W6asWt\",\"pkJCFisRvimPcjme7\",\"dHQEM9zAAmkPPXtHS\",\"Ln3iysDpinvkAjv4n\",\"wZ22E8EXW4qasgru2\",\"jCjCvyhqhpebkJn34\",\"P4SJhkbYLypHBMekL\",\"u6pWu9qefWtqaaTm5\",\"RnCue6232fMBH22h4\",\"aWYZhBGMcMieRBPQY\",\"oK27H6jJL5fNyp58P\",\"EmG8uSoa5JfnsGA7T\",\"F234Zcom46XNjkECA\",\"tjLnCNhgWKWiQJSM9\",\"jdfv5MtPHupwZ2MSM\",\"bHNTjySBEe4CZiM7a\",\"WZw7joHSmwMxkTQJm\",\"iRgBSMR9zoEx3aFHa\",\"yYTSq2E4FnBPEbYn5\",\"cJknwPqn7f4tKsuFZ\",\"ZZpqJZkn5suipQLst\",\"DTDokqAqTpqCsqPMe\",\"tm3R3qmjwwqy2Kj6T\",\"qrdh9KPwoXy2g4c7m\",\"wDsWizJjbP8DiSPXG\",\"TCvpT4EPb8qNssNB7\",\"swTCmWQCSKXbNLBvX\",\"YNZhAt74YGipwurkJ\",\"MKRggbNnmCCWsXwpm\",\"5uyahiCkTNSynWRo8\",\"eFodmuMYa4sZDkZvX\",\"JTPfCdqEzn7C3uWwQ\",\"6LY3EssuKeGHHvC9v\",\"QvwW8ecd4BLnryoC8\",\"uExRamyh3i36mAKpm\",\"DLPu2jLvQj6JvQevW\",\"6DzxoBcXHuXHC9C67\",\"6r2xg5ZttY4zX7R82\",\"57tkBi7KzQoTp7c84\",\"kxivtb6PHtsHZPtxk\",\"KWextFCNZFi5hPpvS\",\"AAampe2SRydB2zALM\",\"qYAdM738bHYMCXjmi\",\"NGvCPuMiAP3xrRLfB\",\"XbxHXmh5ZmRN2gw3K\",\"gKnWjDjwrJh7MK2df\",\"j8Q5cbbqkW5vBxi6d\",\"4bb7pim4ewTwrMTEA\",\"j7ebNFtte6fSkMWjj\",\"8PwfYqoDQFThzNtvf\",\"no46qNkTbNeHepe64\",\"9LrF5o2TK2iE8BZJh\",\"rCrbqMiaGPgHYTNxu\",\"p6tGJ9dN7HZQipR2B\",\"dzS6WBTMHyFEag6Fp\",\"mxX4rH5ELYkdZ2Mbw\",\"2qtde7moqrzm7B4Ht\",\"B4y8aoyXJtskYPFEL\",\"uK58g2EXxqxTaB2iA\",\"4Lwjr34ypKNQNQCar\",\"gbGzZz5Yq5hT357v8\",\"Qyfyyw6oC4EHAndzo\",\"d9LBRxvADNBB5QJMB\",\"yAouD3PxzED8a4gap\",\"FiaTpm7ehfDv43wSG\",\"suArq5BbSy7gD6xri\",\"CdXigydGTBLgA577m\",\"5QN8R22z43SrwoHDz\",\"vAbK8sCfKyFC78HYg\",\"cdXmwjupCXSvJTSNo\",\"quYcmxS33qHALzb4Z\",\"GgQqni8TkbqEBGcsy\",\"Wi4H6ayKsNDWWQCG5\",\"sMcFMPkMJC4Kh6ymj\",\"FT2wBacm3JxrYmZDW\",\"mdRQaGT98ycMt87S2\",\"cmH5k3s9REYMzDBMn\",\"rraTtctZqnjXu2L2x\"],\"total\":432},\"flags\":1},\"summary\":\"Create a function that takes two inputs: indexes (a list of integers) and string (a string). The function should return another string with the letters of string at each index in indexes in order.\\n\\nExamples\\nindex_filter([2, 3, 8, 11], \\\"Autumn in New York\\\") ➞ \\\"tune\\\"\\n\\nindex_filter([0, 1, 5, 7, 4, 2], \\\"Cry me a river\\\") ➞ \\\"creamy\\\"\\n\\nindex_filter([9, -9, 2, 27, 36,\",\"tags\":[\"arrays\",\"strings\"],\"timestamp\":{\"$date\":1603017917021},\"title\":\"Index Filtering\",\"family\":[{\"_id\":\"Y7cwWdPPbrkLXDtA6\",\"language\":\"cpp\"},{\"_id\":\"WrHfLyMXCMuGjxf2s\",\"language\":\"java\"},{\"_id\":\"q5N9n3ZjKq5Fn2hzg\",\"language\":\"javascript\"},{\"_id\":\"XrQnBBLaGRkXZuM8n\",\"language\":\"python3\"},{\"_id\":\"czhcLLwktc57NNDQj\",\"language\":\"ruby\"}]}}"]