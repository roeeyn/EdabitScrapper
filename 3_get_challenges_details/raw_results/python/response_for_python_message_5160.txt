a["{\"msg\":\"result\",\"id\":\"1294\",\"result\":{\"_id\":\"sg7j2sT8yBbY7eFYG\",\"author\":\"Lógó\",\"authorId\":\"hRAd998MG8Jzdpxj6\",\"code\":\"class Magic:\\n\\t\",\"difficulty\":1.984375,\"familyId\":\"TCZZGDb7ALkhMeLqn\",\"instructions\":\"Create a class with a few functions like these examples. \\n* **magic.replace(\\\"string\\\", 'char', char')** is a function that replaces all of the specified characters with different specified characters.\\n* **magic.str_length(\\\"string\\\")** is a function that returns the length of the string.\\n* **magic.trim(\\\"      string      \\\")** is a function that returns a string with truncated spaces at both the beginning and end.\\n* **magic.list_slice(list, tuple)** is a function that returns the items in the list that are between the specified indexes. If the length of the new list is 0, return -1.\\n\\n### Examples\\n```\\nmagic.replace(\\\"AzErty-QwErty\\\", \\\"E\\\", \\\"e\\\") ➞ \\\"Azerty-Qwerty\\\"\\n\\nmagic.str_length(\\\"hello world\\\") ➞ 11\\n\\nmagic.trim(\\\"      python is awesome      \\\") ➞ \\\"python is awesome\\\"\\n\\nmagic.list_slice([1, 2, 3, 4, 5], (2, 4)) ➞ [ 2, 3, 4 ]\\n```\\n\\n### Notes\\nN/A\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"magic = Magic()\\nTest.assert_equals(magic.trim(\\\"  python is awesome  \\\"), \\\"python is awesome\\\")\\nTest.assert_equals(magic.str_length(\\\"Hello world!\\\"), 12)\\nTest.assert_equals(magic.list_slice([1, 2, 3, 4, 5], (2, 4))[0], 2)\\nTest.assert_equals(magic.list_slice([1, 2, 3, 4, 5], (-1, 4)), [4])\\nTest.assert_equals(magic.replace(\\\"AzErty-QwErty\\\", 'E','e'), \\\"Azerty-Qwerty\\\")\",\"language\":\"python3\",\"quality\":4,\"summary\":\"Create a class with couple functions like these examples.\\nmagic.replace(\\\"string\\\", 'char', char') is a function that replaces all of the specified characters with another characters.\\nmagic.str_length(\\\"string\\\") is a function that returns the length of the string.\\nmagic.trim(\\\"      string      \\\") is  a function that returns a string that truncates spaces at both\",\"tags\":[\"higher_order_functions\",\"closures\",\"functional_programming\",\"language_fundamentals\",\"classes\"],\"timestamp\":{\"$date\":1605361436805},\"title\":\"Magic Function\",\"stats\":{\"completed\":{\"total\":164,\"ratings\":[2,2,2,2,2,2,3,4,3,4,1,3,3,2,2,4,3,2,4,2,2,0,3,2,1,2,4,4,0,2,1,1,3,2,1,1,1,2,2,2,1,2,2,2,2,2,1,2,0,2,1,2,3,4,3,2,0,3,1,1,5,2,2,2,1,3,0,2,0,3,2,3,2,3,0,2,1,1,0,3,3,1,2,2,0,0,2,3,0,2,2,0,2,2,2,2,2,2,3,2,2,0,3,2,1,2,3,1,1,2,2,0,1,2,3,3,1,1,4,5,3,2,4,2,2,5,0,2],\"quality\":[4,5,3,4,3,5,2,1,4,5,5,4,5,5,3,4,3,4,4,5,5,5,5,3],\"rators\":[\"hRAd998MG8Jzdpxj6\",\"8PwfYqoDQFThzNtvf\",\"s5M5RvgqR9BhB9JoC\",\"Yp7uvStL97cC9fKkY\",\"mDWNyaaQ9hvPCRzSd\",\"8sNv5PTHa7XQ8bNqR\",\"QZfBqLS7msPLCkS5v\",\"csFCABy3kwwpoQXNy\",\"eFh8z7sMmxkrFWZv9\",\"Kd9cbANRqNspHmByA\",\"no46qNkTbNeHepe64\",\"h4x2jaMdj5aQZbW5g\",\"AasGs8AeX9Lcb9xJn\",\"fSQSHjW3e72MrWxbD\",\"R4SjTgDnpigJYDLyL\",\"gb9rvGus2Jv7bjZSs\",\"QRv96jmNaYsWkxQEG\",\"AybEiSwYHuZTQyxxC\",\"Lg4t6SEWgtYz4u7Cj\",\"kWobGYgZWJxN6ZddF\",\"euTB6YthAd9Mwfj2t\",\"6xTu4r8NMczBFvmtz\",\"ingxHbx5JYTq4uxzJ\",\"axdSNLZpiCDF8RS6n\",\"RdtmexpZnm78t2gbv\",\"NP5uRFkegjhLaot2J\",\"rx88g3SpXfGecJigj\",\"CLypXaZksY99mpRCm\",\"PWgzeK859suojbrRx\",\"sftR9DgM4jpwtxfAM\",\"nFbmNzMQ38TncmfQX\",\"gJYuGdkXEWWmGRLzu\",\"q2tzvkrLASvSjkek9\",\"LmDTFiEm58iFLW5QT\",\"gXTAie79kiw28tx5u\",\"eYfPWvZwnJQkHbSTK\",\"yjtdwc2AC4jA2RWtn\",\"qAby4AWXmTNeusvg3\",\"4RsakkyRXyYGwFxEa\",\"4v8pnvxe8XSWMawR6\",\"hkiz2Nv927cYGrA86\",\"Jqk2uJZZxEv5wZFze\",\"ScaZG69jog5kcqGtQ\",\"CTKmXtrqDYqJBnuy8\",\"jhpjLPkSo6yjCPNwe\",\"7vm9XEB24nbPssuDu\",\"eMuCpJ2spXWkJjWNz\",\"iojEnnY9FsMfYzp6f\",\"NrRa4TS6uZR9xuXRt\",\"5qRBRcknQrLavYmEx\",\"EsvHn9XYzGQurJpSk\",\"bvmTE46bfcM4ogj34\",\"oBcs8GLX2ZFLXQy8y\",\"Wpn95NqWxncQrwNgz\",\"ckG39TLySZR6AJsoN\",\"8JyqsSbN2FJXPr3cw\",\"upp3FLaXW8Y6cCmYo\",\"cR3ibTMxLyEdDFCHY\",\"GGdmhAvxXhqhhibJN\",\"WQubx7DAkG6WZE8FA\",\"J38DYfjW6deJRj9mF\",\"BGMfH8Rx2CBWdXGgR\",\"g2h22xXQEA87Td3sF\",\"BCPNmfdwmRDs6FqcN\",\"xn7uGNKeAwPEkP9oA\",\"SXWFetacLGDytXdZj\",\"hnyhBFWwNCz9mDfSi\",\"h8KvqaAhCtpm9adfp\",\"AQSqD9oNv2uPfxZCR\",\"sbJcFfQjQ59Wfg4Cd\",\"AFfw7cGg83uYk2Miy\",\"C2vo5PNpM6i7ThFeS\",\"rfyEkETeoS96QNH4e\",\"Afnps7TJQuS9sipMb\",\"GShFyQvHxf7W5jj3A\",\"HqmxnQJM66Y57twhn\",\"DEDniTrstQYGounXT\",\"vhZgCDRqMncYjfFB9\",\"LNCb5rksJLJ43L4Nw\",\"J5T8gZqiZXFuFDTQ7\",\"i5Nn7L8wRjX4fAZNN\",\"YA7SDhpgEtsqynvNL\",\"ivMMXwHxWz2myJ67B\",\"z94Wxtxve6Cj6qjhT\",\"2PufnQcsHsfymufX3\",\"gKnWjDjwrJh7MK2df\",\"JKb5rhL6DKcCAypF9\",\"T6iBEE2jp7f7iEF2P\",\"dSd7wHgXGQeG5BQ2P\",\"r7XThH5bRqoB23SxH\",\"qM4cFjDW9EBf6BNsA\",\"yAia3z7kTm8anHb7Z\",\"tAF9Gf6PiGogbZuWs\",\"858b7KAn3NyWjGR84\",\"yod5YhKtPqw2GfG9B\",\"CtKfCpjYB56uGxFo3\",\"dzS6WBTMHyFEag6Fp\",\"5HCu9Ydd86QgHDRNP\",\"Ds7L5bksw2QRHjrKL\",\"ucZ9bQzygDAXDgMoP\",\"3Kgtr8FytbE9FnJxH\",\"HKqhMHf2SLBfG37C8\",\"eHcgvkTGsH7ZziqBo\",\"fbr22rabEJMfBp7vD\",\"aEm3Wvj2rFYRL8Lrb\",\"xi6sH47sHxoZQnJu5\",\"Qyfyyw6oC4EHAndzo\",\"rojiqmjXtv8c2M9CH\",\"ey3CASd6Je5LEJzfB\",\"StNu7DPyTgEStZsMY\",\"mvJBakQ35CWAnbbEZ\",\"LJ5YtQRAFyQ7xoq27\",\"5QN8R22z43SrwoHDz\",\"RbRoa7RJ5nEooSYd7\",\"7ajSwbNMNp9ggPewT\",\"DHYouvoA9AqdqAitg\",\"iqmPb9JuJDgTFeR8Q\",\"BrTDhPJcACL2bsrpJ\",\"xjyixzXzqqqTfJARd\",\"23oi2a3vQwhtLEbSj\",\"2qtde7moqrzm7B4Ht\",\"3CRf8CYo6fHSbqKQj\",\"rQA9SE8nuwFueaHsR\",\"3nied3n8KG8RSNixH\",\"m3R9aaRoEbaxRsSNA\",\"3KkyQm77zsew58Dc2\",\"3MQt9DD5C8CYtskKk\",\"7ECPGSRPjmwFnpDd6\",\"mtRvHDpeLoSGBf8zC\",\"RfbjShbg8jmhyNtJh\",\"Wi4H6ayKsNDWWQCG5\",\"dzKApL9ywfZyHPCHc\",\"FvHwg9nTDqmaDBrvP\",\"6sz8rvGyCpMuJm7zi\",\"eNXse8KumKdDFR6cY\",\"YQMmXJwWnrh7cBBMM\",\"NHp9cXgWCyX6KqyMT\",\"qNszsXx28cTxvGSNj\",\"WsCqifua4yHhKp6N9\",\"BequD5k9EfGgz8XZ6\",\"EtXnbx2HotA2Lqsv5\",\"9pzFiFK3ANLjQfnr2\",\"LYdz8FYb5tzADQiZK\",\"Las5PfxSXFshC57ew\",\"qE4XW9QaMgkstDP8M\",\"2MjzJ7yxh3eT3xbng\",\"naZ3i6sSDPwsieDH7\"]},\"flags\":2},\"editorId\":\"hRAd998MG8Jzdpxj6\",\"family\":[{\"_id\":\"nhW7dXvLWrQoepyFs\",\"language\":\"javascript\"},{\"_id\":\"sg7j2sT8yBbY7eFYG\",\"language\":\"python3\"}]}}"]