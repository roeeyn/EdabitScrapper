a["{\"msg\":\"result\",\"id\":\"1646\",\"result\":{\"_id\":\"nEP2PymH3uZtgAXwd\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def mystery_func(txt):\\n\\t\",\"difficulty\":2.128205128205128,\"familyId\":\"8b4sPGSfWFAh2oYGc\",\"instructions\":\"This is a **reverse coding challenge**. Normally you're given explicit directions with how to create a function. Here, you must generate your own function to satisfy the relationship between the inputs and outputs.\\n\\nYour task is to create a function that, when fed the inputs below, produce the sample outputs shown.\\n\\n### Examples\\n```\\n\\\"hello\\\" ➞ [4, 1, 3, 3, 1]\\n\\n\\\"maybe\\\" ➞ [4, 2, 1, 3, 1]\\n\\n\\\"hopeless\\\" ➞ [0, 7, 0, 5, 4, 5, 3, 3]\\n\\n\\\"higher\\\" ➞ [2, 3, 1, 2, 5, 0]\\n\\n\\\"movement\\\" ➞ [5, 7, 6, 5, 5, 5, 6, 4]\\n```\\n\\n### Notes\\nIf you get stuck, see **Comments** for a hint.\",\"lab\":\"Test.assert_equals(mystery_func(\\\"hello\\\"), [4, 1, 3, 3, 1])\\nTest.assert_equals(mystery_func(\\\"maybe\\\"), [4, 2, 1, 3, 1])\\nTest.assert_equals(mystery_func(\\\"hopeless\\\"), [0, 7, 0, 5, 4, 5, 3, 3])\\nTest.assert_equals(mystery_func(\\\"higher\\\"), [2, 3, 1, 2, 5, 0])\\nTest.assert_equals(mystery_func(\\\"movement\\\"), [5, 7, 6, 5, 5, 5, 6, 4])\",\"language\":\"python3\",\"summary\":\"This is a reverse coding challenge. Normally you're given explicit directions with how to create a function. Here, you must generate your own function to satisfy the relationship between the inputs and outputs.\\n\\nYour task is to create a function that, when fed the inputs below, produce the sample outputs shown.\\n\\nExamples\\n\\\"hello\\\" ➞ [4, 1, 3, 3, 1]\\n\\n\\\"maybe\\\" ➞ [4\",\"tags\":[\"arrays\",\"strings\"],\"timestamp\":{\"$date\":1553577888411},\"title\":\"Reverse Coding Challenge #4\",\"stats\":{\"completed\":{\"total\":81,\"ratings\":[2,2,2,2,2,2,2,2,2,2,2,2,3,2,3,3,2,2,2,0,3,3,2,2,0,3,2,1,3,3,0,3,2,0,1,1,3,2,3,2,3,3,2,2,3,2,2,2,4,3,3,4,3,2,3,3,4,3,2,0,3,3,2,3,3,1,2,1,2,0,0,0,1,3,2,2,4,1],\"rators\":[\"BkPgkDQGHm66X4Qai\",\"Jqk2uJZZxEv5wZFze\",\"yZvzB3qFb8pkHy4dg\",\"gb9rvGus2Jv7bjZSs\",\"mNMQvcxKSSvqqMYCH\",\"8JyqsSbN2FJXPr3cw\",\"tAF9Gf6PiGogbZuWs\",\"T3ZAuoMrJjvZwN55B\",\"ab7BsQuhDo3QgE6bh\",\"nc7bRhkxgKyqusYe3\",\"5dvDGoRaJwmYTmRRB\",\"7g3vZaQXhLpxrajyg\",\"ahWFxnaxt9bXSA4f3\",\"AF6LgdKhEdzwgRJom\",\"M8jrv2FfpMQp9Qzpx\",\"6u7yc9m6HuHGbHzph\",\"jYJ26SiLKBu5GRumq\",\"C9LKGu2g5hSijvDzA\",\"AYaEkTWLMmfzpwejr\",\"BFNm9gacwba9KyLFW\",\"Nj6FwgBtAXsaQwsM2\",\"gMJhLdyw3tH7L96X2\",\"XKi8iZXBCHCaebSHh\",\"2fxapKr8XGdNeaKi2\",\"otXtuQygbcYATMZoP\",\"PXSFa2Cvyy7nxcv5T\",\"sfHsh5gna2QYuwsRP\",\"RyCu8LFdoba6Gvzp9\",\"QjozPpjcpLH5GoEpe\",\"N2wnZXkhDH86mgjQ8\",\"ZnWyAsqYcD4G8aqMF\",\"aCNWav8S8Try9RkC6\",\"kQH5b8MXJunh84Czq\",\"oqGkxvASXq52iTDvp\",\"C4QntmkYtB89GNtpd\",\"8PwfYqoDQFThzNtvf\",\"K96FwtfDDN5WM4Bb7\",\"JKb5rhL6DKcCAypF9\",\"ouPtoRyNq8hKH2WkT\",\"s5M5RvgqR9BhB9JoC\",\"AasGs8AeX9Lcb9xJn\",\"4CFzv558qbGcpQwc4\",\"aEm3Wvj2rFYRL8Lrb\",\"kYWb8BwpKwunQkxeX\",\"gJYuGdkXEWWmGRLzu\",\"EjbDDFRECrzQDkzrX\",\"4rwxLqLs2mNZNg8NB\",\"uYY99wzhStZsctJo5\",\"n2BRY9X8899dcG8Bw\",\"HF28xZKSLM9wEuqNg\",\"yjtdwc2AC4jA2RWtn\",\"DEDniTrstQYGounXT\",\"iS5BrkGLzJyPK7nKt\",\"QRv96jmNaYsWkxQEG\",\"mNYiFFnf5MdGsBDrt\",\"fznzd3qnvtbFkkizz\",\"R4SjTgDnpigJYDLyL\",\"xn7uGNKeAwPEkP9oA\",\"J3upzLHuEwXH7Z2hx\",\"DPi9QGLctq2y76KuE\",\"Yp7uvStL97cC9fKkY\",\"p8qqFdJ3FSk5x9z3G\",\"gXTAie79kiw28tx5u\",\"buX4mCQhtXCfBjeno\",\"iojEnnY9FsMfYzp6f\",\"LQxof8pGabGuWP7Gn\",\"cAP3n5NY64uoMwzRR\",\"oBcs8GLX2ZFLXQy8y\",\"eHcgvkTGsH7ZziqBo\",\"GTKsdeEihE636Le9i\",\"fbr22rabEJMfBp7vD\",\"GGdmhAvxXhqhhibJN\",\"T6iBEE2jp7f7iEF2P\",\"gKnWjDjwrJh7MK2df\",\"rhS8qXRjZcpDXkwnE\",\"2PufnQcsHsfymufX3\",\"yod5YhKtPqw2GfG9B\",\"ey3CASd6Je5LEJzfB\",\"suArq5BbSy7gD6xri\",\"8sNv5PTHa7XQ8bNqR\"],\"quality\":[5,5,5,5,5,3,2,5,4,5,5]},\"tests\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"instructions\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"flags\":0},\"isHidden\":false,\"quality\":4.454545454545454,\"family\":[{\"_id\":\"b4iBnehevNJDiZ8Nd\",\"language\":\"cpp\"},{\"_id\":\"s6ZMJPDH4woN3d3Gc\",\"language\":\"javascript\"},{\"_id\":\"EA5Rh7nMKE5KPrc4j\",\"language\":\"php\"},{\"_id\":\"nEP2PymH3uZtgAXwd\",\"language\":\"python3\"},{\"_id\":\"vQBK5asopQZxj6Kg6\",\"language\":\"ruby\"}]}}"]