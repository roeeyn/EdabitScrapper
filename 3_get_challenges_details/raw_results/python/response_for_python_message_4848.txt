a["{\"msg\":\"result\",\"id\":\"1142\",\"result\":{\"_id\":\"5uMJmbN2uihcyEu75\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"def weekly_salary(hours):\\n\\t\",\"difficulty\":1.5975609756097562,\"familyId\":\"agjuzaRdjdXnNJgHL\",\"instructions\":\"Write a function that takes a list of `hours` and returns the total weekly salary.\\n\\n- The input list `hours` is listed sequentially, ordered from Monday to Sunday.\\n- A worker earns $10 an hour for the first 8 hours.\\n- For every overtime hour, he earns $15.\\n- On weekends, the employer pays double the usual rate, _regardless how many hours were worked previously that week_. For instance, 10 hours worked on a weekday would pay 80+30 = $110, but on a weekend it would pay 160+60 = $220.\\n\\n### Examples\\n```\\nweekly_salary([8, 8, 8, 8, 8, 0, 0]) ➞ 400\\n\\nweekly_salary([10, 10, 10, 0, 8, 0, 0]) ➞ 410\\n\\nweekly_salary([0, 0, 0, 0, 0, 12, 0]) ➞ 280\\n```\\n\\n### Notes\\nEvery element in the list is greater than or equal to 0.\",\"isHidden\":false,\"lab\":\"Test.assert_equals(weekly_salary([8, 8, 8, 8, 8, 8, 0]), 560)\\nTest.assert_equals(weekly_salary([8, 8, 8, 8, 8, 8, 8]), 720)\\nTest.assert_equals(weekly_salary([0, 0, 0, 0, 0, 0, 0]), 0)\\nTest.assert_equals(weekly_salary([1, 1, 1, 2, 5, 0, 0]), 100)\\nTest.assert_equals(weekly_salary([0, 0, 0, 0, 0, 16, 0]), 400)\\nTest.assert_equals(weekly_salary([10, 10, 10, 10, 10, 10, 10]), 990)\\nTest.assert_equals(weekly_salary([0, 12, 0, 12, 0, 8, 8]), 600)\",\"language\":\"python3\",\"summary\":\"Write a function that takes a list of hours and returns the total weekly salary.\\n\\nThe first element of the list is the number of hours spent at work on Monday.\\nThe second element of the list is the number of hours spent at work on Tuesday, etc.\\nA worker earns $10 an hour for the first 8 hours.\\nFor every overtime hour, he's earning $15.\\nOn Saturday and Sunday, \",\"tags\":[\"algebra\",\"arrays\",\"math\",\"numbers\"],\"timestamp\":{\"$date\":1598481463598},\"title\":\"Weekly Salary\",\"stats\":{\"completed\":{\"total\":131,\"ratings\":[1,1,1,1,1,1,2,2,2,3,2,2,2,2,2,2,2,1,1,3,0,1,1,2,2,2,1,2,2,2,2,1,0,2,0,3,2,1,2,0,1,5,1,0,0,2,2,2,0,2,2,1,1,2,0,2,2,2,2,2,1,0,2,2,2,2,2,2,0,2,2,2,1,2,2,2,2,2,3,1,3,1],\"rators\":[\"aEm3Wvj2rFYRL8Lrb\",\"SH35fQ35236E9cMGz\",\"gXTAie79kiw28tx5u\",\"3omBd2Qs4XBmkGQH8\",\"BtdZezHfckxRLm7xR\",\"Nb6LYPoQP6KJZt8mz\",\"KZ2xddpM2f9JRaryB\",\"DEDniTrstQYGounXT\",\"xvebFLdzW4Tsufa7n\",\"8PwfYqoDQFThzNtvf\",\"s5M5RvgqR9BhB9JoC\",\"tAF9Gf6PiGogbZuWs\",\"NNE5HNRXAkmhrWgyQ\",\"cR3ibTMxLyEdDFCHY\",\"LqfyDRqkEKMrrjA9y\",\"yjtdwc2AC4jA2RWtn\",\"jNvegJWCk5HCtEMbK\",\"oBcs8GLX2ZFLXQy8y\",\"mG8HqKiAQFTdRZthG\",\"Yp7uvStL97cC9fKkY\",\"gJYuGdkXEWWmGRLzu\",\"tpxMgkGSHwBjS95Ta\",\"YcCLwitFMAEJSnxAW\",\"8JyqsSbN2FJXPr3cw\",\"gb9rvGus2Jv7bjZSs\",\"HF28xZKSLM9wEuqNg\",\"ieSQYCtKkxNZ2Rd5P\",\"hHJRE5Mb2yhF5bkiD\",\"mxX4rH5ELYkdZ2Mbw\",\"MKT7khMBGXzA22ykf\",\"PXAcsKkssS2yLyDv2\",\"QRv96jmNaYsWkxQEG\",\"DPi9QGLctq2y76KuE\",\"2QGRoQn2dRq3scu7k\",\"Ecg4m7srYGgZsb4Ck\",\"J3upzLHuEwXH7Z2hx\",\"FEYpu9RWysAgW3XnP\",\"dYPkStFnLvAMsHSzZ\",\"RxAHXEMbK89QnuLns\",\"a777e8chPvJkY3tKa\",\"KEmTti9Tza8A2FLQW\",\"5XiuAqicKD4hBdu63\",\"cAP3n5NY64uoMwzRR\",\"iS5BrkGLzJyPK7nKt\",\"JS3hNM3XXkxPdg3yk\",\"5hQnRWiKkhgKJXNMP\",\"CTKmXtrqDYqJBnuy8\",\"KJCDwGkoXh8qtbbKr\",\"RGMbFMZXJr7DhcAJy\",\"zd9FLSzsGz3evKafy\",\"Jqk2uJZZxEv5wZFze\",\"dBzwBtRjZqB98DJeB\",\"5HCu9Ydd86QgHDRNP\",\"N9s9bkuJRsHaPxp9m\",\"d8qtzoLB264iP8tdY\",\"J5T8gZqiZXFuFDTQ7\",\"LQxof8pGabGuWP7Gn\",\"9FCeFzjPA4jrQ7oHW\",\"ZyrfhDTZHb8LymH5b\",\"yBAc37gJnKMbN9H2D\",\"BYYQEF3qtbpJFMFdz\",\"AXcnPX68zdMiLNSmu\",\"HqmxnQJM66Y57twhn\",\"HuNF3xTBzmatyGSTm\",\"5S9nX4rKsnCcnv4Cz\",\"wRttWTM59y8m5mx7x\",\"eYfPWvZwnJQkHbSTK\",\"buX4mCQhtXCfBjeno\",\"GGdmhAvxXhqhhibJN\",\"Wv2vJnEj8ywNmARoF\",\"Ds7L5bksw2QRHjrKL\",\"srJ34BaybkQh3qRkM\",\"mfsaETo7uA4x5vqLD\",\"Dq24MSpogRmq6L4hX\",\"ebR9m79RbNzm4cJsJ\",\"sHjfbGQGLHE6JR6qu\",\"qAby4AWXmTNeusvg3\",\"iojEnnY9FsMfYzp6f\",\"o4ixjQGSaYqA2JoM4\",\"3cF6NXq3ZEwdkgSjb\",\"EfxwqhYdapX3dMQC2\",\"T6iBEE2jp7f7iEF2P\",\"M6fxKEh6am7YajPiT\",\"CHvzhtXnv8HTbPQ56\",\"66a9xX73nmTEuKs9k\",\"JhX7jvtpwNyxcc39m\",\"PC3pLs36zNzpRDSuE\",\"yr822PZmmiDDenxpB\",\"yod5YhKtPqw2GfG9B\",\"hrGSHEWYiSX9KxJ5q\",\"mvJBakQ35CWAnbbEZ\",\"8BFSTCnoe2QggN64c\",\"AasGs8AeX9Lcb9xJn\",\"BrTDhPJcACL2bsrpJ\",\"apw6sQyACz5aCGicJ\",\"sbJcFfQjQ59Wfg4Cd\",\"9Ly8afdtofp8DXzrt\",\"erEunWkRveQoPZyTC\",\"qzXAMXsHZGT8o5hTA\",\"ihW86QeMghXp49kqC\",\"rrSC943cCKNG48sH4\",\"ey3CASd6Je5LEJzfB\",\"gsbCJHCguGgqHHMha\",\"Afnps7TJQuS9sipMb\",\"XD5nmvKQchKezPXhy\",\"M4vq8ATaS9Jg5X7iP\",\"2PufnQcsHsfymufX3\",\"PipHbb9GmyExt84SL\",\"KsYk4jsRLMz2ToPco\",\"dzS6WBTMHyFEag6Fp\",\"v39g8eNsCQLNfXQwg\",\"d9LBRxvADNBB5QJMB\",\"4TmgHkn5vqyHK3sYC\",\"pduNK68oazqQTtbLp\",\"7txFzDQ43vJ7qCY88\",\"dzbNfFriGHxfybHZL\",\"gpGXTvjS2HrY9Skq5\",\"9pzFiFK3ANLjQfnr2\",\"Wi4H6ayKsNDWWQCG5\"],\"quality\":[3,4,4,5,5,1,5,3,5,4,5,5,5,5,5,4,3,5,5,5,5,5,4,5,5,4,5,5,5,5,5,5,5,4,5,5,5,5,5,5,1,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"quality\":4.5,\"family\":[{\"_id\":\"uYS6jZBk5sQ6qQyrK\",\"language\":\"java\"},{\"_id\":\"kageRYgvDLvXAw7As\",\"language\":\"javascript\"},{\"_id\":\"5uMJmbN2uihcyEu75\",\"language\":\"python3\"},{\"_id\":\"ChGWHdjGFx7Cj46PA\",\"language\":\"ruby\"}]}}"]