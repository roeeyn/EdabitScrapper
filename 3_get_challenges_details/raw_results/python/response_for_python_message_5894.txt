a["{\"msg\":\"result\",\"id\":\"1658\",\"result\":{\"_id\":\"KFKziCxeTiCLfzMao\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def string_factor(lst):\\n\\t\",\"difficulty\":2.1339285714285716,\"familyId\":\"tZ6pDgCrgJv6EDzY7\",\"instructions\":\"Given the complete factorization of a number, create a function that converts this list of factors to a string.\\n\\nTo illustrate: 24's complete factorization is `[2, 2, 2, 3]`, which should be converted to `\\\"2^3 x 3\\\"`.\\n\\n### Examples\\n```\\nstring_factor([2, 2, 2, 3, 3]) ➞ \\\"2^3 x 3^2\\\"\\n\\nstring_factor([2, 7]) ➞ \\\"2 x 7\\\"\\n\\nstring_factor([2, 3, 3]) ➞ \\\"2 x 3^2\\\"\\n```\\n\\n### Notes\\n- Factors should be joined with `x` (multiplication sign).\\n- Multiple instances of the same factor should be exponentiated.\\n- Factors raised to the 1 power should be left as is, i.e. write `7` instead of `7^1`.\",\"lab\":\"Test.assert_equals(string_factor([2, 2, 2, 3, 3]), \\\"2^3 x 3^2\\\")\\nTest.assert_equals(string_factor([2, 7]), \\\"2 x 7\\\")\\nTest.assert_equals(string_factor([2, 3, 3]), \\\"2 x 3^2\\\")\\nTest.assert_equals(string_factor([2, 2, 2, 2, 2]), \\\"2^5\\\")\\nTest.assert_equals(string_factor([2, 3, 7]), \\\"2 x 3 x 7\\\")\\nTest.assert_equals(string_factor([2, 2, 7, 11]), \\\"2^2 x 7 x 11\\\")\\nTest.assert_equals(string_factor([11, 11, 11]), \\\"11^3\\\")\",\"language\":\"python3\",\"summary\":\"Given the complete factorization of a number, create a function that converts this list of factors to a string.\\n\\nTo illustrate: 24's complete factorization is [2, 2, 2, 3], which should be converted to \\\"2^3 x 3\\\".\\n\\nExamples\\nstring_factor([2, 2, 2, 3, 3]) ➞ \\\"2^3 x 3^2\\\"\\n\\nstring_factor([2, 7]) ➞ \\\"2 x 7\\\"\\n\\nstring_factor([2, 3, 3]) ➞ \\\"2 x 3^2\\\"\\n\\nNotes\\nFactors should b\",\"tags\":[\"arrays\",\"strings\",\"loops\",\"conditions\"],\"timestamp\":{\"$date\":1553017979685},\"title\":\"String Factoring\",\"stats\":{\"completed\":{\"total\":112,\"ratings\":[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,4,3,3,2,3,1,2,0,2,3,2,3,2,1,3,2,2,4,3,0,2,2,3,1,2,2,2,1,2,4,3,3,0,2,3,3,1,2,2,2,2,2,2,2,2,3,0,2,2,0,5,2,3,3,3,1,0,3,3,3,0,2,5,1,2,3,3,2,3,2,3,1,3,2,4,3,2,2,2,3,2,0,3,0,3,0,0,2,2,3,3,1,3,3,2],\"rators\":[\"BkPgkDQGHm66X4Qai\",\"Jqk2uJZZxEv5wZFze\",\"gb9rvGus2Jv7bjZSs\",\"yZvzB3qFb8pkHy4dg\",\"8JyqsSbN2FJXPr3cw\",\"M8jrv2FfpMQp9Qzpx\",\"tAF9Gf6PiGogbZuWs\",\"T3ZAuoMrJjvZwN55B\",\"cF8nvyGwfFKE5b2iy\",\"ab7BsQuhDo3QgE6bh\",\"FikSPhcrHBpQ4CyGC\",\"r8noEna5bYBCz4inH\",\"kQH5b8MXJunh84Czq\",\"PFjMZGHNAPTkgd7tq\",\"C9LKGu2g5hSijvDzA\",\"6u7yc9m6HuHGbHzph\",\"hsrNYf3WbexXJKhCq\",\"AF6LgdKhEdzwgRJom\",\"AYaEkTWLMmfzpwejr\",\"jYJ26SiLKBu5GRumq\",\"cR3ibTMxLyEdDFCHY\",\"gMJhLdyw3tH7L96X2\",\"Nj6FwgBtAXsaQwsM2\",\"2fxapKr8XGdNeaKi2\",\"Jg8ZSRXe3NoDMCqGu\",\"XKi8iZXBCHCaebSHh\",\"HqmxnQJM66Y57twhn\",\"otXtuQygbcYATMZoP\",\"fAoLuqbGvHn4w2PHf\",\"8PE2cfZEhQBPhe8LG\",\"6ShafRStcvew4GfCh\",\"yoYQqaY6GszuTkNSs\",\"C4QntmkYtB89GNtpd\",\"2innwjWqxJHo4eRGh\",\"s5M5RvgqR9BhB9JoC\",\"orFLgPDw9H5MDzmwo\",\"AasGs8AeX9Lcb9xJn\",\"T2vhHPhRR96hRizq8\",\"PytNZK9mNiRiZxPrm\",\"8PwfYqoDQFThzNtvf\",\"Z85ajWfZ4jDPkbvR4\",\"w3A7cBWyAfukk6xEQ\",\"4CFzv558qbGcpQwc4\",\"mDWNyaaQ9hvPCRzSd\",\"aEm3Wvj2rFYRL8Lrb\",\"ZNnsMeNkdDhHjSrZb\",\"YRstQuthRkFeBiXug\",\"EjbDDFRECrzQDkzrX\",\"55RQznnuTGpsj3EXd\",\"JCusodx8pbLAEHA9G\",\"Yp7uvStL97cC9fKkY\",\"gJYuGdkXEWWmGRLzu\",\"KdNDysEsy2TW5QRJ2\",\"n2BRY9X8899dcG8Bw\",\"pDvFWMCD9fQwoBPcu\",\"HF28xZKSLM9wEuqNg\",\"yr822PZmmiDDenxpB\",\"4rwxLqLs2mNZNg8NB\",\"J5T8gZqiZXFuFDTQ7\",\"9pzFiFK3ANLjQfnr2\",\"YLtspA8ec6ntcoMMf\",\"ekQh3jzgGLsEMbKo3\",\"NaPpyhnXZ2XLtug83\",\"pkQBaSzukotPEXmrD\",\"v9KtC8YLbMWmXiW2H\",\"6BZMSxML2SjRgRCZn\",\"hnyhBFWwNCz9mDfSi\",\"DEDniTrstQYGounXT\",\"Ecg4m7srYGgZsb4Ck\",\"bJxaKHJqR82EWw8Su\",\"dEuJGZbBQkveCXEFk\",\"R4SjTgDnpigJYDLyL\",\"W5TajitmCyxz87zAC\",\"3Zceb8GudqAG3onG3\",\"f2BoqyCpgnmjEjLqx\",\"x4dfavjLEcrvAF3QQ\",\"iojEnnY9FsMfYzp6f\",\"zZDaXBxMzTCBhNkgL\",\"hab8YixsXxe4CcZpP\",\"yjtdwc2AC4jA2RWtn\",\"iS5BrkGLzJyPK7nKt\",\"qD2LrwaDrSdiybLKY\",\"QRv96jmNaYsWkxQEG\",\"DPi9QGLctq2y76KuE\",\"xn7uGNKeAwPEkP9oA\",\"p8qqFdJ3FSk5x9z3G\",\"J3upzLHuEwXH7Z2hx\",\"Wv2vJnEj8ywNmARoF\",\"dkcmCKwqApX5jBggc\",\"gXTAie79kiw28tx5u\",\"LQxof8pGabGuWP7Gn\",\"srJ34BaybkQh3qRkM\",\"cAP3n5NY64uoMwzRR\",\"oBcs8GLX2ZFLXQy8y\",\"eHcgvkTGsH7ZziqBo\",\"GGdmhAvxXhqhhibJN\",\"PC3pLs36zNzpRDSuE\",\"d8qtzoLB264iP8tdY\",\"MpfytGFYF77emJ3cT\",\"T6iBEE2jp7f7iEF2P\",\"gKnWjDjwrJh7MK2df\",\"yod5YhKtPqw2GfG9B\",\"o4ixjQGSaYqA2JoM4\",\"2PufnQcsHsfymufX3\",\"buX4mCQhtXCfBjeno\",\"8sNv5PTHa7XQ8bNqR\",\"nkH3HfJXLMNcBMM79\",\"suArq5BbSy7gD6xri\",\"4Lwjr34ypKNQNQCar\"],\"quality\":[5,5,5,5,5,5]},\"tests\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"instructions\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":5,\"family\":[{\"_id\":\"EBaN6RW3wdpRPm4gz\",\"language\":\"cpp\"},{\"_id\":\"wh9ZuSXZqnjTL69je\",\"language\":\"csharp\"},{\"_id\":\"c59r7jg89K9vvJ9Zh\",\"language\":\"javascript\"},{\"_id\":\"KFKziCxeTiCLfzMao\",\"language\":\"python3\"},{\"_id\":\"yGyf7NAMXfBoxmfQr\",\"language\":\"ruby\"},{\"_id\":\"3Apquxp7sMpgvJmsR\",\"language\":\"swift\"}]}}"]