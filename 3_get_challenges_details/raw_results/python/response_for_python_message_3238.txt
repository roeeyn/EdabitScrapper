a["{\"msg\":\"result\",\"id\":\"342\",\"result\":{\"_id\":\"ancAxGEF9MsLWXDqe\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"def get_triangle_type(lst):\\n\\t\",\"difficulty\":0.64375,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"SEC9Nu5Yj3uNYhugK\",\"instructions\":\"Create a function which returns the type of triangle, given the side lengths. Return the following values if they match the criteria.\\n\\n- No sides equal: `\\\"scalene\\\"`\\n- Two sides equal: `\\\"isosceles\\\"`\\n- All sides equal: `\\\"equilateral\\\"`\\n- Less or more than 3 sides given: `\\\"not a triangle\\\"`\\n\\n### Examples\\n```\\nget_triangle_type([2, 6, 5]) ➞ \\\"scalene\\\"\\n\\nget_triangle_type([4, 4, 7]) ➞ \\\"isosceles\\\"\\n\\nget_triangle_type([8, 8, 8]) ➞ \\\"equilateral\\\"\\n\\nget_triangle_type([3, 5, 5, 2]) ➞ \\\"not a triangle\\\"\\n```\\n\\n### Notes\\n- You will be given a list of positive integers.\\n- Check the **Resources** tab for more information on the types of triangles.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(get_triangle_type([2, 3, 4]), \\\"scalene\\\")\\nTest.assert_equals(get_triangle_type([4, 4, 7]), \\\"isosceles\\\")\\nTest.assert_equals(get_triangle_type([8, 8, 8]), \\\"equilateral\\\")\\nTest.assert_equals(get_triangle_type([3, 5, 5, 2]), \\\"not a triangle\\\")\\nTest.assert_equals(get_triangle_type([4, 4, 1]), \\\"isosceles\\\")\\nTest.assert_equals(get_triangle_type([4, 4, 2]), \\\"isosceles\\\")\\nTest.assert_equals(get_triangle_type([3, 1, 3]), \\\"isosceles\\\")\\nTest.assert_equals(get_triangle_type([1]), \\\"not a triangle\\\")\\nTest.assert_equals(get_triangle_type([4, 4, 3]), \\\"isosceles\\\")\\nTest.assert_equals(get_triangle_type([10]), \\\"not a triangle\\\")\\nTest.assert_equals(get_triangle_type([4, 1, 4]), \\\"isosceles\\\")\\nTest.assert_equals(get_triangle_type([3, 3, 3]), \\\"equilateral\\\")\\nTest.assert_equals(get_triangle_type([2, 3, 4]), \\\"scalene\\\")\\nTest.assert_equals(get_triangle_type([1, 5, 5]), \\\"isosceles\\\")\\nTest.assert_equals(get_triangle_type([5, 7, 4]), \\\"scalene\\\")\\nTest.assert_equals(get_triangle_type([3, 3, 2]), \\\"isosceles\\\")\\nTest.assert_equals(get_triangle_type([2, 1, 2]), \\\"isosceles\\\")\\nTest.assert_equals(get_triangle_type([9, 7, 9, 5, 3]), \\\"not a triangle\\\")\\nTest.assert_equals(get_triangle_type([4, 4, 1]), \\\"isosceles\\\")\\nTest.assert_equals(get_triangle_type([10, 8, 3, 2]), \\\"not a triangle\\\")\\nTest.assert_equals(get_triangle_type([4]), \\\"not a triangle\\\")\\nTest.assert_equals(get_triangle_type([4, 6, 9]), \\\"scalene\\\")\\nTest.assert_equals(get_triangle_type([4, 2, 5]), \\\"scalene\\\")\\nTest.assert_equals(get_triangle_type([6, 7]), \\\"not a triangle\\\")\\nTest.assert_equals(get_triangle_type([3, 2, 3]), \\\"isosceles\\\")\\nTest.assert_equals(get_triangle_type([2, 4, 4]), \\\"isosceles\\\")\\nTest.assert_equals(get_triangle_type([3, 3, 1]), \\\"isosceles\\\")\\nTest.assert_equals(get_triangle_type([12, 7, 6]), \\\"scalene\\\")\\nTest.assert_equals(get_triangle_type([6, 2, 6]), \\\"isosceles\\\")\\nTest.assert_equals(get_triangle_type([1, 2, 2]), \\\"isosceles\\\")\\nTest.assert_equals(get_triangle_type([1, 4, 4]), \\\"isosceles\\\")\\nTest.assert_equals(get_triangle_type([4, 4, 2]), \\\"isosceles\\\")\\nTest.assert_equals(get_triangle_type([3, 3, 2]), \\\"isosceles\\\")\\nTest.assert_equals(get_triangle_type([3, 3, 3]), \\\"equilateral\\\")\\nTest.assert_equals(get_triangle_type([9, 9, 3]), \\\"isosceles\\\")\\nTest.assert_equals(get_triangle_type([3, 3, 1]), \\\"isosceles\\\")\\nTest.assert_equals(get_triangle_type([4, 4, 4]), \\\"equilateral\\\")\\nTest.assert_equals(get_triangle_type([4, 3, 3]), \\\"isosceles\\\")\\nTest.assert_equals(get_triangle_type([3, 4, 4]), \\\"isosceles\\\")\\nTest.assert_equals(get_triangle_type([1, 4, 4]), \\\"isosceles\\\")\\nTest.assert_equals(get_triangle_type([4, 7, 9]), \\\"scalene\\\")\\nTest.assert_equals(get_triangle_type([1, 9, 9]), \\\"isosceles\\\")\\nTest.assert_equals(get_triangle_type([2, 2, 2]), \\\"equilateral\\\")\\nTest.assert_equals(get_triangle_type([100, 2, 100]), \\\"isosceles\\\")\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[0,0,0,0,0,0,1,1,0,1,1,1,0,1,1,5,0,0,0,1,1,0,0,0,0,0,1,0,0,0,0,1,1,0,1,0,0,0,0,2,5,1,0,0,0,0,2,0,1,0,1,1,1,0,0,0,0,0,2,0,2,2,2,0,0,1,1,0,0,1,3,0,0,0,2,0,0,2,1,2,1,0,0,1,0,1,0,0,1,0,2,2,1,1,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,0,1,1,0,0,5,0,1,0,2,1,0,1,0,1,0,0,1,1,1,0,1,1,0,1,0,2,0,1,1,1,0,1,1,0,0,0,1,1,1,0,1,0,1,0,2,1,0,0,1,1,0,0,0,1,0,1,0,2,0,1,1,1,0,1,2,0,0,0,1,0,2,0,0,1,1,1,2,1,0,1,0,0,1,0,0,2,0,0,0,0,0,2,0,0,1,1,0,0,0,1,0,0,1,0,2,0,0,1,1,0,1,0,2,2,2,2,2,1,1,1,1,1,0,1,2,1,1,0,1,1,0,0,0,1,1,2,1,1,0,1,0,0,1,1,1,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,2,1,0,1,0,3,0,1,1,0,0,2,0,0,0,0,2,2,0,1,0,1,0,0,2,0,0,1,3,0,2,0,2,1,0,1,0,0,0,1,0,1,0,1,0,0,1,0,1,0,0,0,0,1,1,2,0,1,0,0,2,0,0,1,0,0,0,0,2,1,2,0,2,1,0,0,0,0,1,1,1,0,1,3,0,0,1,0,0,0,0,0,0,0,1,2,0,2,3,1,1,1,1,1,0,0,0,1,0,3,2,0,0,2,1,0,1,0,1,1,0,0,1,1,1,0,1,2,0,2,0,0,0,0,0,0,0,0,2,0,0,2,1,0,2,2,2,0,0,2,0,1,0,0,0,1,2,0,0,0,1,0,5,0,1,0,0,0,3,2,0,0,0,0,0,2,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,2,0,0,0,0,0,1,1,0],\"rators\":[\"PXAcsKkssS2yLyDv2\",\"tAF9Gf6PiGogbZuWs\",\"5kEyLPjTLrt7z2YJZ\",\"gb9rvGus2Jv7bjZSs\",\"6SKDJwXpev4qPSzgM\",\"94FLQj5fEsSg4E498\",\"8F5dgxHzDuinPti5M\",\"cR3ibTMxLyEdDFCHY\",\"upDqk9KWvaZW4yozC\",\"2fxapKr8XGdNeaKi2\",\"hqiTnCHZxYu2nvNK5\",\"Yp7uvStL97cC9fKkY\",\"ffjnHrx8Ym7A7pQWe\",\"N7P4AnS8nzK4oupHv\",\"gJYuGdkXEWWmGRLzu\",\"XrqNzJ2FRG8HnGiR6\",\"KRSKj7ikX2ytWFmod\",\"AasGs8AeX9Lcb9xJn\",\"hKrY8hWMgToBavfhD\",\"u5u2YpHXiNgzDNJdX\",\"X74H8PYX8XYkrGRQc\",\"rAfkXcFyvbbtuDMRA\",\"aRqQ42J5zqCmBNd8w\",\"vLrq4dEDMM2wd68Dc\",\"jNvegJWCk5HCtEMbK\",\"DghD3McairtxGn8wa\",\"LjoNTyGEMfBpMHHus\",\"fbagSSAGD2gAfNJZC\",\"mxX4rH5ELYkdZ2Mbw\",\"tK8RyuxmGD4Djo3Zn\",\"geZ3oLjhh9KAw7yHs\",\"zC8WrPp5BC6c2exrW\",\"pwWtbXEjzuvrhEGwt\",\"bC7yAKktHb63ReMBf\",\"vJZJBvnbypLPYC8RD\",\"J5T8gZqiZXFuFDTQ7\",\"9LPzrRgFdbvh5weJ8\",\"dHZqT6h4JMwk5fPC8\",\"9Ly8afdtofp8DXzrt\",\"eMuCpJ2spXWkJjWNz\",\"J6NJ535w58tScSJx3\",\"MKT7khMBGXzA22ykf\",\"4CFzv558qbGcpQwc4\",\"FEYpu9RWysAgW3XnP\",\"M8dQuMrEpP8Hc3tHN\",\"moFrJ4vxzxPynByzB\",\"PWJq8oJNMEhwRGD4M\",\"asFMXHqwKb4D4D5J8\",\"HQxp7NcdvF92G7bYS\",\"tRA43bWeW9bLciKEh\",\"gudC5KZrykfdfGD3J\",\"jpGomfcYMrRJmSQLs\",\"NfMJuiBk6FN5Jc6ow\",\"B7xNs2GQLTqNcHhgf\",\"GyduiSf6FtJbnAxBh\",\"SxoHJmkSXHjxqdkWc\",\"q5a96XumccZyhQNyL\",\"gfjEP2wEAk7Dyfjbi\",\"HDksZLiRAmpnCKHta\",\"Z6rYpEZZsDpc2X7TA\",\"eHhL37DG7oW3vTcg7\",\"NMEDQhGCKoQQwbmez\",\"DEDniTrstQYGounXT\",\"QGKb9AGd3TWtMHZQ2\",\"muZAmnKFE2hkTnypv\",\"veAhgEKubmGCuoCyh\",\"gGXghWEN4u5vuoXcR\",\"C9LKGu2g5hSijvDzA\",\"9f9LG2exEqL5gNrA7\",\"iSYzMt5mPMfhAGrF2\",\"yZvzB3qFb8pkHy4dg\",\"FovJzwmhALjb7ouFm\",\"EfuBzbisdKE5weiHa\",\"N2wnZXkhDH86mgjQ8\",\"u5jLXaWAKo7K4JvTR\",\"x65vwZF2KcoqxGQQp\",\"6abffx8jQDCf7kgvb\",\"zGBTg8pHNJjuPXAA5\",\"orFLgPDw9H5MDzmwo\",\"ArWzhxZEjsxjGF77p\",\"gZCBY2gP7xHRy5JzG\",\"aEm3Wvj2rFYRL8Lrb\",\"L8p97WHj6wpEZy8Bx\",\"xG4jFH32NX5WP3aMx\",\"8JyqsSbN2FJXPr3cw\",\"3XBMkqYX2PT7GA4T9\",\"9LLN4tbHA92uRLfHq\",\"iYgYbusfgvRAJ6wkF\",\"7dQYiDeTcMztbGyso\",\"3LiSLdtN58n46NEqg\",\"Rqud7mLt9GaDyMFFj\",\"JZbBYihgT6m7bKvgc\",\"4zkChgTrb5EDzYZmd\",\"GYJuRfz6caZY87JBh\",\"xcyzxGMknb3Hb9taF\",\"Jqk2uJZZxEv5wZFze\",\"So6PHm74mfJuY2WTs\",\"YaKCTFge7R4AmacxX\",\"XNWiSkHgExFGcbEcX\",\"3xakCKE5i6NX8J4JR\",\"Fk9kLwoG4Brf4KsKf\",\"hnyhBFWwNCz9mDfSi\",\"kYWb8BwpKwunQkxeX\",\"N2tdqhg8weEjHbfXK\",\"u2bnP6L8sHNopCJQ9\",\"gEkiWY4QfTccH2Yp5\",\"LTCqp6r8E3T6Phrkn\",\"n2BRY9X8899dcG8Bw\",\"w7FZGcEht9829tTcn\",\"ETZgErGzPhf29DLTw\",\"HEzmFuMdekcbmzZoM\",\"ZAg7PjoNJ4PPgtHiJ\",\"QpZ9b8ygwameoA97h\",\"tZq3teF4PFbjFtjAy\",\"biHwJCwAtsEdhGnGP\",\"8BFSTCnoe2QggN64c\",\"4rwxLqLs2mNZNg8NB\",\"BuJGC3jNcCvTugHQM\",\"v8iedwMBcGiN2PHGM\",\"Lfut9z3euZ3odxFcH\",\"Q7Yxda7dqKeYPs2Db\",\"HaQj6cHEbCgQgLuRm\",\"LW9jawYsqayifXgwT\",\"di2hhADLx59Bj4ewM\",\"LCZ6JTAhBZBmWLzm8\",\"yAouD3PxzED8a4gap\",\"mfJcJtAYaK9TN6mHg\",\"YcCLwitFMAEJSnxAW\",\"YZsZjfvd3PnLhDJrR\",\"TTgP9jcqGxCfKotZ3\",\"9pzFiFK3ANLjQfnr2\",\"zHeWstaHtWNPDyLwh\",\"usRAT3gR3GFus28mo\",\"64ZBqm6Z6S3wgXaF6\",\"MgcZBeKBAvJSaLuGv\",\"x5wvJ6prnNcY3A3rg\",\"P4gwFe4j9nh78injK\",\"nzKTXzTqPT4RDTHvb\",\"4YSgM5rPJeXnvY4ns\",\"SzdT9nsTbXE4ahFsv\",\"mGzrqcrJYviuy5qn4\",\"kjvgTyRFyKHv44DcH\",\"6c4xjEdFxdYw5xGrt\",\"MPCGnji5kxS9qbkjd\",\"wqcmaA9xyrm2px3Ys\",\"KzTJcCBEabnrADfJY\",\"5JyY5eDxizCH7TYT7\",\"AF6LgdKhEdzwgRJom\",\"zfCXCTL7cTZF7eoWY\",\"66a9xX73nmTEuKs9k\",\"zwnrLPPgr5KdBq3ZJ\",\"sDRY37TfoncsA2FSR\",\"FRN2W8RYpJ6GPhgRy\",\"9RktapPikK5m2Q5SA\",\"5RKPHpT4qSv2Sumto\",\"AkNdYK2xbbmDcZrjM\",\"eob5aAZDQADcQuDBr\",\"agGDFTddYbZMnL5LL\",\"5HCu9Ydd86QgHDRNP\",\"53uJADeqd5ys7ZAdM\",\"XgRXeb4YyZqmiMTLe\",\"FxJxxwowtXYCaLaeD\",\"Epo92QDe24M6R4Qk8\",\"PweZwtXTDkEwxZXQ4\",\"Stye5FSYwYNbhFHgR\",\"jufL2dZQH8tBJajpr\",\"rzFoNTJHyapwc2zZH\",\"vHCE9yxc32udWbTKj\",\"WWD6uwvCr54JJGu5S\",\"JRacQYm77Ltir8aK8\",\"nxJHjePuKX2YNmcx2\",\"zd9FLSzsGz3evKafy\",\"aPLuemxzZ5iS57NBQ\",\"7Z9KdHmzkoF3TQC8s\",\"X8BW96KGWpZAiFeDg\",\"Z4dHig4b5MK4beJYs\",\"hHCrfaGKZGnwFPfbN\",\"4yNLEwL2rsx4EE5Nt\",\"5aTu2Kb8rDqAHgi9R\",\"2CRF2WT69Z7T72uBj\",\"CBXLutgEKHKvbgE3h\",\"Yg5KsgKxN3tWmuEKG\",\"m7KZ5donpz5F6AR3z\",\"zKQ5EQBan8ZRBTe2C\",\"nfXGHENb5md7m355s\",\"oKNAZ5BNeNWyvkiiB\",\"GJgQQ8WdTY6MgScc6\",\"SKeSSfqSmCk65vjYh\",\"xr2fujuvCApGEzSWd\",\"TDWvNwHLodFiKp6Xa\",\"GoxJx8oAXLvDdi39o\",\"7HAL7H6NJmc4NC8Q5\",\"2ZFoLTxcCARhwc8xX\",\"s2ZMtR9deh6Kia7pb\",\"3ahu3txFTAEibkgRt\",\"JEAi9mG3vvBomJ3Yu\",\"H4abACFDH5t8CnnyH\",\"JKbEBybAsiKrmcqof\",\"ai8HyfiT9DYFrRGim\",\"JS3hNM3XXkxPdg3yk\",\"3cF6NXq3ZEwdkgSjb\",\"jgyuzt5BpA3ohHG96\",\"yKttxy9JGn5Jzwuj6\",\"2ptN2mhjFwFcHyPZd\",\"rv4AzXszM3czjqbWH\",\"qMfpXAFRSMc6gEzCh\",\"c4SCmmZJEL6yvGfZb\",\"G2pMfCik8KtdaSNqr\",\"rgvAJFwfCeYoYnFTK\",\"xjyixzXzqqqTfJARd\",\"Br9aaArg7qJLcNdhP\",\"cngNSsfRS3iuFp3mh\",\"p3zah7ZzLWs9j4NyE\",\"EaBP8MZ49ucTjWJTN\",\"XoyhNuW52DdnwwppS\",\"krYm4tDix6dKg6oWu\",\"RYYanpX6aRsTJSQzG\",\"NRCH4eiebS7LBjSCa\",\"b9YQPLb9ZPSADdHXX\",\"LE9sk2Mq2g2ctxJct\",\"3BrMsGs4QZJFKuvPz\",\"R4SjTgDnpigJYDLyL\",\"32KtB5euRsWfySaof\",\"KjcP8mgxWhMTJwTtG\",\"JgWpNj5G78uttDiE2\",\"3xr56NiGaGt6FPAJW\",\"LFSASkxgw9hr3KqmC\",\"6C94M4PPHbBumAuja\",\"8DH2opL3T5kdcoiRJ\",\"5AHe67SapnPQeESpv\",\"iEJJE8r9M4KYJyk5S\",\"yNjkHfHESBAnCssPB\",\"C6Y8ermwQopHM2N8W\",\"dryymdkPHpQgRtW6n\",\"n5P3xDbGTAQR4h8HC\",\"MNKE5PyqhNdFJgm6S\",\"syRNbbPdLCGXbH2Gy\",\"X5MqeHyPh6cSQCXnk\",\"M23Yf6rufJzaSYmxL\",\"Hv7dC3RR6rvwTWWmA\",\"KLmLKaJPfsYxp42p2\",\"Y9zyHwuyA7MJ8SPDh\",\"dj5AyG5fWP8FdsSmZ\",\"cC8fr8uBYrJhNb8Hc\",\"uX66RpufnTtXG7CKp\",\"cN55Pbcik8wonXDZE\",\"i5iePG5GqhJJ8HEoB\",\"LSNTFjWvTPwoQSHCb\",\"nTamDQutEJDBN4vXr\",\"G3arGZkymS7H3Ba8a\",\"8vWWL8Tx2yDai4ydm\",\"vuGJmyKLHtAuSxWLF\",\"PBnvAuiKXwjqjKG33\",\"KdYQN3KAT2DyTzT2a\",\"uouMMdEWBuLBWPbzr\",\"75EzwsDHG7mD9EPTZ\",\"RoGGD5cpHb4ftdLDv\",\"NP2RxM3eBd3drnDwP\",\"mmjoLhCivx5pjfbWw\",\"dj5xjEAMBnDiXNpWN\",\"oRxtFuig9K42kSiEK\",\"muCHE6pvwTaDBFarv\",\"fTNQmMvTZhhiGBCMe\",\"TjeuzxKBd7b4ZajSs\",\"SkQcb2sRn4as5KpnN\",\"oBcs8GLX2ZFLXQy8y\",\"KJCDwGkoXh8qtbbKr\",\"xpiTfa2irEgAx6ayF\",\"vfDYAQsdiAJB4pFFB\",\"eH9mdhz5FEWBxdTjW\",\"FM4ShiyqhkfkyWDy5\",\"zigHw4RqWudQvG7sv\",\"agb6ou9deennRxzhv\",\"4bnRYgbirDp5unwGQ\",\"iS5BrkGLzJyPK7nKt\",\"tz8gZXKm6CParWiXS\",\"HwCcxujBuAjzk9Pb7\",\"erEunWkRveQoPZyTC\",\"iCDqhZGvszrXpDRuW\",\"DTyNcDkiScCjgJt28\",\"Xj6R2zqhgumffQCAN\",\"pdSqrgx4MfSJvLaXn\",\"mzbfEWpDFFJzLehvY\",\"BXBReSCbChJqgxrfR\",\"iojEnnY9FsMfYzp6f\",\"9LrF5o2TK2iE8BZJh\",\"hRiMXDZNAzyPd5tpt\",\"FyFqWMjZQPkcsCAgr\",\"whfykmA3bBzqJKzTf\",\"3hSzE837A9SKsi5X4\",\"C6prbNbCwgh4GrXdD\",\"gpYxT9JQ2ypE8E8iq\",\"WpNHMgfjZE8aNN2MP\",\"F9GLWPxRrMSdP66Y5\",\"HkzyeB5JKY6PRoKnx\",\"u7i7WPM63n42r8R8o\",\"dKpesT6tnCimdoQjw\",\"dSd7wHgXGQeG5BQ2P\",\"aKzYNPqBqb3J3ZgyD\",\"q6QsMYNMpPNtmyTeW\",\"wS2o3x4nrsadtC3xP\",\"ta5CrWnBCRusD2WMo\",\"QPEejhBicc4eB66xF\",\"g4NCSxxHqHCGMpWwT\",\"bmthyKcDF922zNqxK\",\"RkyCNqfDeSrR8TLmA\",\"GEDsDpNX4QMhZAxtJ\",\"Nc3ydHrrJXkE9a48m\",\"nrgrxTy6dmtQwrFgx\",\"NrRa4TS6uZR9xuXRt\",\"yjtdwc2AC4jA2RWtn\",\"DkeEd2uhXypnPDnNT\",\"vAbK8sCfKyFC78HYg\",\"AwJD8PFqFD3Y8hy2T\",\"vCXAR9dcbRxmwbCen\",\"zXgwEs94QFkLraLMH\",\"7K4emAv8FE9xcDNQy\",\"rGA5sQC5vSaqCmh6E\",\"HqmxnQJM66Y57twhn\",\"Q9afpRu3u8zuWuzLQ\",\"a2b7nwxfzCiM83eci\",\"2xeCLjyMuXgyZHczf\",\"oH5za8CuPrt4XyoKx\",\"pwJAQRdX4FAFdymZh\",\"6HgMANhu6WiGyXSGN\",\"kQ86mSGBiBQQvXzQR\",\"zyFPLXxJzpku4xZYt\",\"6h6t6qhwLHitGcYNK\",\"wCXRmtaqTLTT5S3ce\",\"DDD5tzD2m8bcntBB8\",\"a2Sb9bxiS8GaAu7M8\",\"7h6RQYLtSmZdwkrpP\",\"CWnZYFNAzm5K8NiiC\",\"8aEGGQPkGesWwoaom\",\"csxCzWqzHW8JsrzQq\",\"uqSa9nyEpr786ZkgH\",\"m7hHWJrBub7ueaokh\",\"RnTBbuFCrJWW6Ayvj\",\"WjuN7douP7Fe26xYE\",\"k7f82n7oxaWsmhdzT\",\"qD2LrwaDrSdiybLKY\",\"a777e8chPvJkY3tKa\",\"3H276eDisS2QHMn9L\",\"GWjEcCYSqDNZS9rQN\",\"DPi9QGLctq2y76KuE\",\"dxKw3G4pTZWiS6PEm\",\"5rGQbcH4AabTkXhRp\",\"Y2Y5CRMMPmdsKCSwL\",\"nC4sPB69yYuTSks9T\",\"2GqHbu7h7ajqtqkXv\",\"zysHJq6ceBrj4e9mM\",\"u72ipcjbNDSkWX8Gw\",\"TzEDcbz2PZM4Cfgit\",\"6gS4E2C84vBYTYeDZ\",\"capjEKEghfZ2tj5pC\",\"YG3vSsRurbQ2KGnyh\",\"Kh3Pc2ZRusurLaMyP\",\"QRv96jmNaYsWkxQEG\",\"RCzpsCinz5SQnBAta\",\"skbp3mauBhvs2Pjee\",\"Cg3LKtEAJpsrdWroG\",\"AgY6WsWyt69H9sC8C\",\"sKfrD9gjCDHuqLzSk\",\"8teSHp77vHhhvJWiS\",\"CyzskHGsC6WSmYrLu\",\"vfTKm6ChiZFd3cDDy\",\"PnzR8TWfcT5QHrek8\",\"yJgsKN8WPu7aSicEM\",\"rrSC943cCKNG48sH4\",\"omTzG6P3YKpb64LmZ\",\"wRttWTM59y8m5mx7x\",\"iQ98ogih3WYqf6gZx\",\"CccXoqbXeoMydtEhh\",\"377aXz9FPFSZxyrSv\",\"mAARx8JHyScLzDA5W\",\"oqnKnp8g6g4fKFKNt\",\"kNrnnMxhFZztMTBAX\",\"ZEjaJfFNNtjY85eue\",\"k2Eo3wyfZZ6KxvKhN\",\"4hzd4qde3g9We8N4E\",\"6akGaXW83HnSC5PSy\",\"RnY25enEBE8T9P5GS\",\"qxcBxW68yuoB3hoRY\",\"AaKWw8amcFYLrEpNz\",\"RGMbFMZXJr7DhcAJy\",\"XM7w6eEmc8gapNgY2\",\"Tf7TJFSPktJBgLA4k\",\"oyKcm3zqdy8Ko5P5d\",\"htJ2fQTJiztMfztKz\",\"6428wKHtwKkFdvBs5\",\"qaPjAANdnxFnWfj5d\",\"g9FyJ8yeT9ic97Qp2\",\"mEvwXi4fm6Hm49GBk\",\"atR7uPt3durx85RSa\",\"HuNF3xTBzmatyGSTm\",\"J3upzLHuEwXH7Z2hx\",\"iF4tdvn5sA9CM4T6T\",\"FuYTQcDNjct58rqPa\",\"DAhoDmrLmkoRsJhRx\",\"dky93oMkJsJjEJKk2\",\"MnrmRMy2PP3Mk4sSY\",\"dDFzTqzPhpkeTcG2b\",\"GGprTwrkjuccmrQRg\",\"dYPkStFnLvAMsHSzZ\",\"s4YHxEDBTTq5EBMRs\",\"YRAzEBJoLvSaiPtYx\",\"rJGeRSCjGzRuYfHZS\",\"HAtNvtvpTjB2DkhnG\",\"nJXgbSQozcoE8Wn4N\",\"EfxwqhYdapX3dMQC2\",\"vgT3ehH2o2KC94NsY\",\"CQhaiZqQcP87YteSG\",\"Ds7L5bksw2QRHjrKL\",\"nsSoE6ekryniKprfv\",\"5XiuAqicKD4hBdu63\",\"HcdukZiuzgvoHjjz3\",\"wypdvuJQZB2TFyb2g\",\"7D76ZPLjgjZideoy9\",\"AXcnPX68zdMiLNSmu\",\"KEmTti9Tza8A2FLQW\",\"RSTdK2S8CecymSS6h\",\"igLmeTgCMEPu7fQTd\",\"5HTSi5wQNAdLm57LB\",\"uN5t57RETi5y2z5W8\",\"qZ3h2ijjMyDiZFibz\",\"enmGKZK3YpeBA2rSS\",\"n93uwjdirjyRCRATo\",\"QTZTmQEmkPv5sxQL4\",\"vCeeMuYDbz3MB4vsk\",\"xNCLJDm9Bni6gByMz\",\"DpnYcMphntjsQ96qg\",\"YTK48HPYMZfyn3eNb\",\"5hQnRWiKkhgKJXNMP\",\"qAby4AWXmTNeusvg3\",\"xGpqoGZ47sYLJ4ty9\",\"Krto2sGMfGWBLcL7n\",\"XanFBoer6Lw9KXvuE\",\"ZLEFs8o3kMYTJNXNz\",\"CkcqajsaNu4nso9oY\",\"GdKtjPh8TcfmJuduv\",\"jbBCCA4S6RNiTuLh7\",\"ZyrfhDTZHb8LymH5b\",\"9FCeFzjPA4jrQ7oHW\",\"iY25XNrJX2giBLvnd\",\"5S9nX4rKsnCcnv4Cz\",\"Nw5Co4WxYtGovKnmA\",\"AFfw7cGg83uYk2Miy\",\"yEvXDzXnEPNz6tTCK\",\"3YDiP56vf8NysvNpX\",\"buX4mCQhtXCfBjeno\",\"DDFvEXnueWTSBn7EX\",\"PC3pLs36zNzpRDSuE\",\"Wp5CZXqvjwTpt5SKN\",\"MyyfuAJrdaoBE2xGk\",\"LQxof8pGabGuWP7Gn\",\"pPpmP7xeJzGgK362R\",\"5wCHxMQ5Km2bjqcGZ\",\"CN2Jg7GX3c57eXiCp\",\"F7wta4nHmabMr9dfd\",\"fHeYpHLgzDPqcoDh6\",\"7KsymxNN9S8ZG5oQe\",\"fW3mQfbTKhp7enxGP\",\"YaybbCdfjFQmsfgtp\",\"TKm2tReEtdweH9Qno\",\"icsLTze3op3SPQbzy\",\"eYfPWvZwnJQkHbSTK\",\"srJ34BaybkQh3qRkM\",\"TmM3AN7g3fkh69ycj\",\"vCxuabDxEv9YC3Szb\",\"ghMkPtdFCpM6w8nax\",\"q9FfWNiMDKRiaCJ5j\",\"gjiu8kLnHYxe4HoBN\",\"fe3gsFT3MbZ4azEC9\",\"XD5nmvKQchKezPXhy\",\"YwAvPdqD6Xi2qjapZ\",\"2MjzJ7yxh3eT3xbng\",\"M2gFMJkocQSY6bsFR\",\"GZgFDSZdgKBuixp22\",\"8PwfYqoDQFThzNtvf\",\"8EJ4j2fcfjTJ7Zrzu\",\"mKJuoa2SZSDNhvhk9\",\"6gHaCTMvjCk5ggBFm\",\"uvLimfW9x3bCp7huQ\",\"2QGRoQn2dRq3scu7k\",\"T6iBEE2jp7f7iEF2P\",\"sX9GZp3fYyQLrBKMJ\",\"fdyejapW3NWN7utPX\",\"4TmgHkn5vqyHK3sYC\",\"Wpn95NqWxncQrwNgz\",\"RTER5uJdW4khkiNbY\",\"CHvzhtXnv8HTbPQ56\",\"T6Rm8mREPMZSftzrC\",\"jkbavR2ATFJcpmo8M\",\"DFpZcskPncmo7fuzR\",\"JiSpvq6C7azQEmENc\",\"a2Kmh6ekWqQQooHiQ\",\"iYXdNw7tKcgA3QwBX\",\"M6fxKEh6am7YajPiT\",\"sHjfbGQGLHE6JR6qu\",\"Afnps7TJQuS9sipMb\",\"bSeEB8ypsxnQxX2SJ\",\"gKnWjDjwrJh7MK2df\",\"uBXzq8ZaZMYkn4wW5\",\"cdXmwjupCXSvJTSNo\",\"sbJcFfQjQ59Wfg4Cd\",\"Dq24MSpogRmq6L4hX\",\"TCvpT4EPb8qNssNB7\",\"xFThng73guj6JwPER\",\"d9LBRxvADNBB5QJMB\",\"x2Cz7S8rCKJqCE3Xe\",\"5QN8R22z43SrwoHDz\",\"B4y8aoyXJtskYPFEL\",\"dzS6WBTMHyFEag6Fp\",\"PTDFuxAzou7W6asWt\",\"539z79PdEA96pmrZ5\",\"LWCzZ8mb8gwrRNGfq\",\"uK58g2EXxqxTaB2iA\",\"arWdYjT3J9QKzoPLd\",\"wjc4iejpErBhxWwHo\",\"5nbHH4eApn6So9h2n\",\"rF97GDLqCgynr7BaD\",\"FiaTpm7ehfDv43wSG\",\"CdXigydGTBLgA577m\",\"tR9grPBLncwacBTzr\",\"mw9464S5dnenqzvpm\",\"fMp8sPsKSECdfgF9j\",\"Zyg9xAm6EuH4u3Lo5\",\"7q8oBsCHwn48Ppnrq\",\"Ki9t2KmA5MWfGJXD8\",\"QN4FPwhiak7Pf8kn6\",\"sMcFMPkMJC4Kh6ymj\",\"Wi4H6ayKsNDWWQCG5\",\"NzbRqGWspQnWMoDrF\",\"mdRQaGT98ycMt87S2\",\"4akHBgnDEDj3Rkv5n\",\"K6S8HCswXg68EWHmo\",\"3SgSNoAB3sxaYeT3w\"],\"total\":568,\"quality\":[3,4,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,4,1,5,5,5,4,3,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,4,5,5,5,4,4,5,5,5,5,5,5,5,5]},\"flags\":0},\"summary\":\"Create a function which returns the type of triangle, given the side lengths. Return the following values if they match the criterea.\\n\\nNo sides equal: \\\"scalene\\\"\\nTwo sides equal: \\\"isosceles\\\"\\nAll sides equal: \\\"equilateral\\\"\\nLess or more than 3 sides given: \\\"not a triangle\\\"\\n\\nExamples\\ngettriangletype([2, 6, 5]) ➞ \\\"scalene\\\"\\n\\ngettriangletype([4, 4, 7]) ➞ \\\"isosceles\\\"\",\"tags\":[\"conditions\",\"math\",\"arrays\",\"geometry\"],\"timestamp\":{\"$date\":1584820772324},\"title\":\"What Type of Triangle?\",\"quality\":4.709677419354839,\"family\":[{\"_id\":\"Hwa3x8E3xyyauHJdk\",\"language\":\"cpp\"},{\"_id\":\"RQ667jEXGy7Kx7FFG\",\"language\":\"javascript\"},{\"_id\":\"ancAxGEF9MsLWXDqe\",\"language\":\"python3\"},{\"_id\":\"e3WgBGiBk3EQMKM8m\",\"language\":\"ruby\"}]}}"]