a["{\"msg\":\"result\",\"id\":\"1371\",\"result\":{\"_id\":\"Emdzxs23PRzSDuvk3\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"def pizza_points(customers, min_orders, min_price):\\n\\t\",\"difficulty\":2.0255681818181817,\"familyId\":\"Nyz3BsGPzbm4BASfT\",\"instructions\":\"![Pizza Points](https://s3.amazonaws.com/edabit-images/pizza-points.gif)\\n\\nGoogle is launching a network of autonomous pizza delivery drones and wants you to create a flexible rewards system (Pizza Points™) that can be tweaked in the future. The rules are simple: if a customer has made at least _N_ orders of at least _Y_ price, they get a FREE pizza!\\n\\nCreate a function that takes a dictionary of customers, a minimum number of orders and a minimum order price. Return a list of customers that are eligible for a free pizza.\\n\\n### Examples\\n```\\ncustomers = {\\n  \\\"Batman\\\": [22, 30, 11, 17, 15, 52, 27, 12],\\n  \\\"Spider-Man\\\": [5, 17, 30, 33, 40, 22, 26, 10, 11, 45]\\n}\\n\\n  pizza_points(customers, 5, 20) ➞ [\\\"Spider-Man\\\"]\\n\\n  pizza_points(customers, 3, 10) ➞ [\\\"Batman\\\", \\\"Spider-Man\\\"]\\n\\n  pizza_points(customers, 5, 100) ➞ []\\n```\\n\\n### Notes\\n⚠️Sort the returned array of customer names in alphabetical order.\",\"lab\":\"dict1 = {\\n  'Batman': [22, 30, 11, 17, 15, 52, 27, 12],\\n  'Spider-Man': [5, 17, 30, 33, 40, 22, 26, 10, 11, 45]\\n}\\n\\ndict2 = {\\n  'Captain America': [10, 10, 54, 14, 51, 33, 42, 73, 66, 33, 55, 42, 47],\\n  'Iron Man': [30, 56, 38, 14, 17],\\n  'Hulk': [53, 25, 13, 7, 61, 16, 17, 29, 64, 8],\\n  'Superman': [27, 28]\\n}\\n\\ndict3 = {\\n  'Zorro': [13, 53, 10, 51],\\n  'Wolverine': [16],\\n  'Elon Musk': [26, 61, 23, 61, 39, 50, 53, 54, 45, 46, 42, 49, 18, 75, 11, 73, 42, 61, 15, 60, 70, 67, 8, 9, 63, 55, 55, 35, 24, 59, 13, 49, 46, 26, 7, 8, 8, 34, 73, 60, 27, 28, 28, 48, 10]\\n}\\n\\nTest.assert_equals(pizza_points(dict1, 5, 20), [\\\"Spider-Man\\\"])\\nTest.assert_equals(pizza_points(dict2, 1, 5), [\\\"Captain America\\\", \\\"Hulk\\\", \\\"Iron Man\\\", \\\"Superman\\\"])\\nTest.assert_equals(pizza_points(dict3, 7, 15), [\\\"Elon Musk\\\"])\\nTest.assert_equals(pizza_points(dict1, 10, 5), [\\\"Spider-Man\\\"])\\nTest.assert_equals(pizza_points(dict2, 2, 35), [\\\"Captain America\\\", \\\"Hulk\\\", \\\"Iron Man\\\"])\\nTest.assert_equals(pizza_points(dict3, 3, 25), [\\\"Elon Musk\\\"])\\nTest.assert_equals(pizza_points(dict3, 4, 12), [\\\"Elon Musk\\\"])\\nTest.assert_equals(pizza_points(dict2, 1, 75), [])\\nTest.assert_equals(pizza_points(dict1, 100, 1), [])\\nTest.assert_equals(pizza_points(dict3, 2, 67), [\\\"Elon Musk\\\"])\",\"language\":\"python3\",\"summary\":\"Pizza Points\\n\\nGoogle is launching a network of autonomous pizza delivery drones and wants you to create a flexible rewards system (Pizza Points™) that can be tweaked in the future. The rules are simple: if a customer has made at least N orders of at least Y price, they get a FREE pizza!\\n\\nCreate a function that takes a dictionary of customers, a minimum number\",\"tags\":[\"games\",\"objects\"],\"timestamp\":{\"$date\":1539828753137},\"title\":\"Pizza Points™ \ud83c\udf55\",\"stats\":{\"completed\":{\"total\":402,\"ratings\":[2,2,2,2,2,2,2,2,2,2,2,1,1,2,1,2,3,2,2,1,3,1,3,1,1,2,2,1,3,3,2,1,1,2,1,2,2,2,1,2,3,2,2,2,2,3,3,2,2,3,2,1,1,2,2,1,3,3,3,2,1,2,3,2,2,2,2,2,2,0,0,2,3,1,3,3,1,3,3,2,3,1,4,2,1,3,2,3,3,2,3,2,2,2,2,2,3,2,1,3,2,2,2,2,1,3,2,3,3,2,5,3,3,1,1,0,2,3,3,2,3,2,3,1,2,3,2,2,3,1,2,3,3,2,2,2,2,1,2,0,3,1,3,1,1,2,1,3,3,3,3,2,1,1,3,2,2,0,3,2,2,3,1,1,3,3,2,2,3,1,2,3,0,2,2,0,0,2,2,3,3,3,1,2,3,1,2,2,3,2,1,3,2,2,1,3,3,3,1,2,2,1,3,2,3,1,2,3,3,2,3,2,3,2,2,2,3,0,2,2,2,1,0,3,1,1,3,2,3,0,3,2,0,3,2,2,3,2,3,2,3,5,1,2,3,2,3,1,2,3,3,3,2,0,3,2,0,3,2,3,2,3,0,3,2,2,1,1,0,2,3,1,3,2,1,3,2,3,1,2,2,2,1,2,0,1,3,3,3,2,3,3,3,2,4,0,0,2,2,2,3,0,2,2,2,2,0,3,3,2,1,3,3,2,2,0,2,0,2,2,5,3,3,3,2,1,0,2,2,1,2,2,0,2,0,3,2,2,2,2,0,3,3,3,2,3,3,3,2,3,1,0],\"rators\":[\"BkPgkDQGHm66X4Qai\",\"tAF9Gf6PiGogbZuWs\",\"M8jrv2FfpMQp9Qzpx\",\"cBCgxKeWmdcPwz4MH\",\"ihxKdbj7DQ9BtNz9J\",\"6fJpRpAgiWD5zX9qB\",\"Qm7WibLuCP7hW3iXi\",\"v67epJQtBA448T5Mr\",\"T82JyZFPNz8maF8f8\",\"ktw5fXRXnoY9em4wd\",\"CMXMMk3Ryfj6Phqrf\",\"SK3kJggzuets9AFj6\",\"QgdwHjy4x6MCPwfh9\",\"jeuoearPPTcGPgXhf\",\"7CwgH38hHpiGdu2zT\",\"RsX6W2ddWM8ajHzss\",\"nc7bRhkxgKyqusYe3\",\"Nj6FwgBtAXsaQwsM2\",\"xQ7uLC6QTtEyKENv9\",\"vpCDTiajf7vS4Wvyy\",\"uJ5A3zjLi9iN5eeXX\",\"PAjQoyYKAkYAXERhf\",\"T2W32kBnES6zya9Bv\",\"6QwHpeajrbLQAm64L\",\"n9PZCXcWTygjaDsXs\",\"hR7GMiqGap4CzEWSy\",\"TJQcScCtNRobD8P4k\",\"RS7z6xJFR4ZAx6zZA\",\"istqYFSsAJCDAKL9C\",\"q5s7yTnMdEoeXRTnH\",\"zgoEhAyhrjnsSLPGw\",\"7LWPxYbe6HKibjNd9\",\"ArC3TpnruJnWYDzHM\",\"jdpby6Bgjvsuofqkt\",\"6W2GSzrYjMD9ANBFY\",\"83i7PKDRGfBw5DLst\",\"8JyqsSbN2FJXPr3cw\",\"nydW2HwDGZuk8XaEL\",\"ywQ6iciJw7yke9LuK\",\"gb9rvGus2Jv7bjZSs\",\"mGmoXwXiopnnnqYdh\",\"PRPv763woB2EqjWvZ\",\"Jqk2uJZZxEv5wZFze\",\"qvEvDcL32a5F4Tg6c\",\"SKabuq5XuhXBugKBa\",\"72RkYjdDzRupHxJwn\",\"tDGQGtSzPsg5Zk7df\",\"yZvzB3qFb8pkHy4dg\",\"J67hC7LSEYS5JwhPj\",\"W2RBjMJ9KQPg4tjNZ\",\"Wf6AF7TuNwEobxuW6\",\"a84Pb56waZPscphxB\",\"nQRzZKeDKuLRf9chX\",\"jpEzGeo2tPtZbgbay\",\"efWYnYAMeczjDFnAt\",\"T3ZAuoMrJjvZwN55B\",\"yrmiF5oKPR5rQYCRJ\",\"3W7CgbRjEtA9YmoTM\",\"cF8nvyGwfFKE5b2iy\",\"dYapmohpRwjkdGCTr\",\"ab7BsQuhDo3QgE6bh\",\"KMze4vkbmvnL2aDsi\",\"QzqL4jkcY4BMmNuS8\",\"X9NeqaKpfykoscpYr\",\"sZrxCumhG8rEaLcMZ\",\"e7hZa9EqDzpwivGPH\",\"jLEvW9Qo3Pwbr3vS6\",\"Akcoifp2kwZrN8Rub\",\"FikSPhcrHBpQ4CyGC\",\"Y3KkPrBzMBgMiqaQ6\",\"oGYdezdtfKQbMhgNn\",\"B4pnNt3Se9GA4oy6W\",\"n5wubRfh6zh8QRymN\",\"3ifAHQzsMasfQySoL\",\"fewXbsCDB8TWckY7B\",\"SvWKyZPZeAn6KpSBi\",\"GMbZRE4gvgfkDxSvY\",\"y5XR8WtTdGov9sRxZ\",\"6fwzAwFY549EuSvms\",\"kYppDQBsh2uejpAxz\",\"wcjknenWdPRhrRScv\",\"JDNHfs2qywgQuj2KJ\",\"4fQSjCThZyxYGfyHf\",\"jo9STxPcJMSAEWEDi\",\"YSAX9n8WAf6zFKLPS\",\"rB53BwZLCNjMautKC\",\"tQsPenm9qfM6mPbNa\",\"QaE2QnnBbzdiExxPH\",\"EPgZSeQrPkXKnTqdG\",\"sfHsh5gna2QYuwsRP\",\"kQH5b8MXJunh84Czq\",\"X4khYcQLX5Q7h4iYm\",\"7g3vZaQXhLpxrajyg\",\"88s8dohfzeEZ7pHLx\",\"f7hmq5yNAfsFGn46w\",\"StJwhPFkevcqZ9swQ\",\"g4R4gRHCE9tsTDt8B\",\"op9P9zYpYgK7A5Xrj\",\"L78SsLX6TyEXQbzDR\",\"EKjBJc6wPe3sJfx7H\",\"yPr8fz9duphnZ837g\",\"NTGATypkiwT5YTNit\",\"YdRcRS2e6iai93gvW\",\"ahWFxnaxt9bXSA4f3\",\"5JFQgt6KFihmXfHKm\",\"PFjMZGHNAPTkgd7tq\",\"mBGpSNpLxBmS68CET\",\"AnjjyuE9aWLzK3nkg\",\"c89SxuYYjfeRh4toG\",\"KruzMuPcbuBw8E2CR\",\"TzKWLbEFMHuwuEmAt\",\"smJ26ec3EE6voFb9d\",\"AF6LgdKhEdzwgRJom\",\"3XWw4ui5Tipb2Qz8o\",\"5dvDGoRaJwmYTmRRB\",\"tHEH9MBHBAGvhgJGd\",\"inEQthEoPuP337WTY\",\"DJD9vvwqQmjfwdGpt\",\"nzx4uAPg3hCceyFPE\",\"6A3py6uFBXuQPkidb\",\"td7qPZ7Lv4pEWT2Ya\",\"NvR9Gs5bL8JYPbWHe\",\"nF9pCCzbGDhzvWgaw\",\"KWHYqCuXcKrzxtqHt\",\"BFNm9gacwba9KyLFW\",\"TNMAJidLpPdH4kmBv\",\"C9LKGu2g5hSijvDzA\",\"CDGHrSPaEX56xEuSF\",\"yrCNkFYQBEDE76eFS\",\"GAMLghpc9JMXz3jvs\",\"6u7yc9m6HuHGbHzph\",\"cmwasetrBzbwJQbks\",\"mKK6Z6WEKKJ2W2ZNT\",\"jYJ26SiLKBu5GRumq\",\"aXCm9vWqKwL9XFYoj\",\"jHrtWDGBhkbuWa7fG\",\"WkWyq9wMkZhXB6zsD\",\"AYaEkTWLMmfzpwejr\",\"FH7BrsRArEbGhZD9E\",\"yWaYG3Lac8PNSRTwY\",\"t8GRbY5ME64BcgWQk\",\"hsrNYf3WbexXJKhCq\",\"TChZRiHktaMCpoyru\",\"cR3ibTMxLyEdDFCHY\",\"gMJhLdyw3tH7L96X2\",\"pBBTKo9vprWMe83gr\",\"4sL7MG7HmuhL9bZXe\",\"N2wnZXkhDH86mgjQ8\",\"otXtuQygbcYATMZoP\",\"stKEm7Cdsauxmhw5Z\",\"oqGkxvASXq52iTDvp\",\"EXZfPb8YH28EL8Rh9\",\"HqmxnQJM66Y57twhn\",\"jqZMq5ooK9D95PYyA\",\"AbrJ8hMyv5fFXG6DN\",\"qBaLGrm952ii9K23M\",\"8aPJNKDxXq7884eJb\",\"2fxapKr8XGdNeaKi2\",\"ZFAAb2376BNm5gcGG\",\"rJGeRSCjGzRuYfHZS\",\"C4QntmkYtB89GNtpd\",\"K96FwtfDDN5WM4Bb7\",\"8PwfYqoDQFThzNtvf\",\"yKttxy9JGn5Jzwuj6\",\"FgkYtHLxeD8pETJ8T\",\"s5M5RvgqR9BhB9JoC\",\"N962oRnYTtRzEd22M\",\"yoYQqaY6GszuTkNSs\",\"R5s7YZe9KJigCJsjS\",\"tK9oBgXjqPsPrGowj\",\"M6jpRARa4YDQM5tqA\",\"6ShafRStcvew4GfCh\",\"u5u2YpHXiNgzDNJdX\",\"n2Ge6pzFcTXYEaK6M\",\"fF9rKQmnp5TpnnWGb\",\"ftRou9zcw69GCx4iv\",\"ydEdzuCCZt4yny9Rq\",\"EQbnbkkPYtGxiviTp\",\"2innwjWqxJHo4eRGh\",\"M44nifmWzt3wtYyJx\",\"Yp7uvStL97cC9fKkY\",\"jaP8tfdxt4XbSGgo6\",\"QnPD4Sv6W4LHc2Qng\",\"AasGs8AeX9Lcb9xJn\",\"4CFzv558qbGcpQwc4\",\"T7QZG6y34b65Fxyef\",\"PXAcsKkssS2yLyDv2\",\"phzHtZP9SW2qWsAkq\",\"aCNWav8S8Try9RkC6\",\"pkQBaSzukotPEXmrD\",\"QN3AHCaTykyuE5k8B\",\"aEm3Wvj2rFYRL8Lrb\",\"ghTAisPZoS5FTqQnK\",\"sz8ufn9i8zeiGWpAy\",\"JQ5uoxA4WZgN6HyJk\",\"euPBBaYXyS8RBr9KB\",\"ZNnsMeNkdDhHjSrZb\",\"ywk3XGvcmpTgRxwZa\",\"3Xd6WT95BrewRxWpF\",\"itDTNAvHdhpXPhg6D\",\"gJYuGdkXEWWmGRLzu\",\"kYWb8BwpKwunQkxeX\",\"3Zceb8GudqAG3onG3\",\"mDWNyaaQ9hvPCRzSd\",\"RcFJfYquW9quJDnp5\",\"EjbDDFRECrzQDkzrX\",\"YRstQuthRkFeBiXug\",\"9pzFiFK3ANLjQfnr2\",\"5aZnA8Br3u7Wf5ENg\",\"ekQh3jzgGLsEMbKo3\",\"zChStAhRfotvGC6C5\",\"dHZqT6h4JMwk5fPC8\",\"KBzzKtGw9NxkqD2FE\",\"pWD2YC5s4YRCxFc2i\",\"fZCwknjgeY7icBk9c\",\"KRmxvA4mWgfKvHmYN\",\"vBJhjd3CjiJJFACBb\",\"NfMJuiBk6FN5Jc6ow\",\"T2QhZRhybEKeJTb44\",\"xXxcBvT3poSuSCgBN\",\"gypNFmvBCE3xq5iNn\",\"c3nsyfKKeQGxp6sKb\",\"R4SjTgDnpigJYDLyL\",\"5JZNWts9XEHejpvur\",\"tsECkG48snwNTPD3m\",\"CumrwfbdqoRhXDZui\",\"HF28xZKSLM9wEuqNg\",\"CaHTWKxLStGvKmtko\",\"KdNDysEsy2TW5QRJ2\",\"qS5Xbh5sBC28e6j7E\",\"ByXaraYa5tzFG8Gmj\",\"So6PHm74mfJuY2WTs\",\"J5T8gZqiZXFuFDTQ7\",\"yr822PZmmiDDenxpB\",\"Ecy2fPuyYDLKmRkcg\",\"hnyhBFWwNCz9mDfSi\",\"9dgvEreRDYRiwLmYv\",\"uMLsCftXNbvx6pcGA\",\"8sNv5PTHa7XQ8bNqR\",\"DEDniTrstQYGounXT\",\"Tb2m9eGdTuSG8RbyD\",\"BThbGKiGavC9mLifr\",\"djeesDJQwNJay4RTe\",\"Wv2vJnEj8ywNmARoF\",\"AvtKS96FxZxLFymuP\",\"GM2X83qnuLXTHe5zA\",\"iTovFddeCoWD6ozbk\",\"Ecg4m7srYGgZsb4Ck\",\"f2BoqyCpgnmjEjLqx\",\"W5TajitmCyxz87zAC\",\"JZbBYihgT6m7bKvgc\",\"sLteh6cLh6gLKB2mQ\",\"PytNZK9mNiRiZxPrm\",\"kXEfD7xxEyWd7oxxL\",\"iojEnnY9FsMfYzp6f\",\"drdKwcfY8TCL9hoYv\",\"xdgy7nWSKCekXnaJM\",\"rgxCpN2y3PWv4AXe4\",\"JmkgMJyvrvqTMfdqF\",\"dzS6WBTMHyFEag6Fp\",\"zZDaXBxMzTCBhNkgL\",\"CwXsu25ygLEwQbmQC\",\"vcBAc4nu5joJduTM6\",\"WST3ihLFKaMTYxg9J\",\"NFkv6e8H7NT9aQ8Af\",\"yjtdwc2AC4jA2RWtn\",\"ZrKCkX7xxGGZzauFW\",\"BrTDhPJcACL2bsrpJ\",\"ji5f27FPz4wRRF6Ls\",\"kyEERyssssTQaZ4y5\",\"oB8MCqep5GBXXuhB8\",\"9cWTAMQmN7PZMqdec\",\"KZ2xddpM2f9JRaryB\",\"mzhB3LXoJ2EGyqr3n\",\"jBR47vA7HwAZqp4QA\",\"axdSNLZpiCDF8RS6n\",\"p8qqFdJ3FSk5x9z3G\",\"pmgFEciNrd3ES9tuu\",\"P7NmFbCJ5offXMRvB\",\"mG8HqKiAQFTdRZthG\",\"xwEZk3bNZoNDPJYF5\",\"Q4MdKmiASeXCPE7yb\",\"dkcmCKwqApX5jBggc\",\"xn7uGNKeAwPEkP9oA\",\"4fhjJBvLBWh6QeSih\",\"uN5t57RETi5y2z5W8\",\"8fZxjQfuXw5HMSRJM\",\"QYGFGGjATDQQzzhFM\",\"qRMyPsTjFp255TrrK\",\"DPi9QGLctq2y76KuE\",\"QRv96jmNaYsWkxQEG\",\"7ifh8r4gvyYMhKB94\",\"6MjSiiBLPcvXbXcaZ\",\"dYPkStFnLvAMsHSzZ\",\"J3upzLHuEwXH7Z2hx\",\"oBcs8GLX2ZFLXQy8y\",\"MXFAQAyRRg9Qassp9\",\"xsTAbdxLod7Rka5aj\",\"7scpcTEp3SEx5Wjg9\",\"vCxuabDxEv9YC3Szb\",\"bccs9koJxyQ9XNiLC\",\"fznzd3qnvtbFkkizz\",\"Z85ajWfZ4jDPkbvR4\",\"YRM5Wr3P4g7AujtiM\",\"MM3v77RDEPmCDBvE9\",\"jopWJWdRStNBMGNXs\",\"8cKm6EDAjrNbL5pWF\",\"9i2XnAtnTMpLkGyvv\",\"A2JSJyNxCd7iTTFp7\",\"3pxHTZBsv7MKzFG6Y\",\"r23nqpnuxRqQrRksA\",\"JkcimYHcPxFggWXNE\",\"S3iFQ3yPcvH9wEzvF\",\"qLysFYFYKWrjuCKrK\",\"zm9yBz3sRm9jdbyhK\",\"7shPNLiokLBJ4DYcY\",\"htCCT2CY3eSikknSF\",\"zaNb37qavQQm6LFqe\",\"geJHa8mvy64irqsgF\",\"iM5hkq3MTEhEAWJpt\",\"LaYYSfLtno6a9qc4Q\",\"cAP3n5NY64uoMwzRR\",\"iS5BrkGLzJyPK7nKt\",\"89QKNck99CavLbneo\",\"xpGSi4pXEaJnL6KMR\",\"kEkNyqFARK9YBrhRx\",\"gywE8Lb2RgQEWpvTX\",\"DJb984mRxTGSgpLeS\",\"9RaccqxB9dRZuS7z4\",\"WcYcQ5WbXrFtg3L6R\",\"xAMuN7wh2uorXC9q2\",\"StNu7DPyTgEStZsMY\",\"GGdmhAvxXhqhhibJN\",\"hRAd998MG8Jzdpxj6\",\"qAby4AWXmTNeusvg3\",\"eYfPWvZwnJQkHbSTK\",\"oAAGc883wLk2qvPzH\",\"Lfut9z3euZ3odxFcH\",\"RTDx9axf52kxhFjwZ\",\"FEYpu9RWysAgW3XnP\",\"X7dDyoPvRD5tzDPwP\",\"yyo6YLQN2of6fxp49\",\"Wpn95NqWxncQrwNgz\",\"YcCLwitFMAEJSnxAW\",\"rfyEkETeoS96QNH4e\",\"2PufnQcsHsfymufX3\",\"PC3pLs36zNzpRDSuE\",\"8BFSTCnoe2QggN64c\",\"K6MfKMytoJJuSGewP\",\"AFfw7cGg83uYk2Miy\",\"4Lwjr34ypKNQNQCar\",\"bYigWMH7orsPtaRch\",\"fbr22rabEJMfBp7vD\",\"etoxSpG4fGKThLozM\",\"PWgzeK859suojbrRx\",\"EfxwqhYdapX3dMQC2\",\"4Whd5h2DrExkauQ4J\",\"2u9wghjCydey6aWys\",\"gKnWjDjwrJh7MK2df\",\"eC32LRQ7PZ32uYvrg\",\"T6iBEE2jp7f7iEF2P\",\"RoGGD5cpHb4ftdLDv\",\"qM4cFjDW9EBf6BNsA\",\"yod5YhKtPqw2GfG9B\",\"nkH3HfJXLMNcBMM79\",\"mvJBakQ35CWAnbbEZ\",\"5HCu9Ydd86QgHDRNP\",\"CoutYG4M83EHyYuqt\",\"3KkyQm77zsew58Dc2\",\"AQSqD9oNv2uPfxZCR\",\"wpYKSaJtog6nQ8rDE\",\"Ds7L5bksw2QRHjrKL\",\"ey3CASd6Je5LEJzfB\",\"Qyfyyw6oC4EHAndzo\",\"tMmkfvW7fm429fpJP\",\"jkbavR2ATFJcpmo8M\",\"n2qKKxomPnb4zez5M\",\"CHvzhtXnv8HTbPQ56\"],\"quality\":[5,2,5,4,5,5,5,4,2,5,5,5,3,5,3,5,5,4,5,4,4,5,5,3,5,4,4,4,5,5,5,5,5,5,5]},\"tests\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"instructions\":{\"score\":-10.4,\"rators\":[\"BkPgkDQGHm66X4Qai\"],\"voters\":[\"gWmjyAT5aj8fZFz5G\",\"pjvNvsFksW3PAbN4a\",\"HcYxcQ5J6dM4WkWHd\",\"qaR8DnWrTk8Mus5Q2\",\"HCYabH5mZ7ANumb5R\",\"72RkYjdDzRupHxJwn\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.428571428571429,\"family\":[{\"_id\":\"raWPf5nZyRKEEH6ZQ\",\"language\":\"javascript\"},{\"_id\":\"Emdzxs23PRzSDuvk3\",\"language\":\"python3\"},{\"_id\":\"6Ba9kpugLXfwE8DKJ\",\"language\":\"ruby\"}]}}"]