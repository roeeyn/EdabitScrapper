a["{\"msg\":\"result\",\"id\":\"2119\",\"result\":{\"_id\":\"L2nw2N2YqZCboiaYM\",\"author\":\"Evgeny SH\",\"authorId\":\"8PwfYqoDQFThzNtvf\",\"code\":\"def repeated(s):\\n\\t\",\"difficulty\":3.0407239819004523,\"editorId\":\"8PwfYqoDQFThzNtvf\",\"familyId\":\"JZ4Jgtd9kJFggh7CM\",\"instructions\":\"Create a solution that checks if a given string consists of a sub-string pattern repeated multiple times to return `True` or `False`.\\n\\n### Examples\\n```\\nrepeated(\\\"a\\\") ➞ False\\n\\nrepeated(\\\"ababab\\\") ➞ True\\n\\nrepeated(\\\"aba\\\") ➞ False\\n\\nrepeated(\\\"abcabcabcabc\\\") ➞ True\\n\\nrepeated(\\\"aaxxtaaxztaaxxt\\\") ➞ False\\n```\\n\\n### Notes\\nAdroit programmers can solve this in one line.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"from time import perf_counter\\nfrom random import randint\\ntic = perf_counter()\\n\\nTest.assert_equals(repeated(\\\"a\\\"), False)\\nTest.assert_equals(repeated(\\\"ababab\\\"), True)\\nTest.assert_equals(repeated(\\\"aba\\\"), False)\\nTest.assert_equals(repeated(\\\"abcabcabcabc\\\"), True)\\nTest.assert_equals(repeated(\\\"aaxxtaaxztaaxxt\\\"), False)\\n\\nfor _ in range(100):\\n    lst_sub = [randint(97, 122) for _ in range(randint(1, 100))]\\n    lst_s = lst_sub * randint(2, 100)\\n    lst_n = lst_s.copy()\\n    idx_corr = randint(0, len(lst_n) - 1)\\n    lst_n[idx_corr] = 97 + (lst_n[idx_corr] - 96) % 26\\n    Test.assert_equals(repeated(\\\"\\\".join(map(chr, lst_s))), True)\\n    Test.assert_equals(repeated(\\\"\\\".join(map(chr, lst_n))), False)\\n\\nprint('t_total = {:.6f}'.format(perf_counter() - tic))\",\"language\":\"python3\",\"quality\":4.285714285714286,\"stats\":{\"completed\":{\"ratings\":[3,3,3,3,3,4,1,3,4,5,5,2,3,3,5,5,5,3,5,1,3,3,1,3,3,2,4,4,3,1,2,0,4,3,5,3,5,2,2,5,0,3,3,4,1,2,2,5,3,1,3,5,3,2,2,4,2,2,5,2,5,3,4,4,5,0,3,5,3,4,5,0,5,4,3,3,3,3,4,2,5,5,4,0,3,1,3,2,2,1,3,5,1,5,0,3,2,3,3,2,5,4,2,4,3,3,3,4,3,5,2,3,5,3,0,2,4,3,2,5,2,5,2,3,3,2,3,0,2,4,5,5,3,2,4,4,5,4,0,3,3,5,2,3,3,2,5,2,3,3,2,3,3,4,2,5,3,1,3,5,4,4,3,2,3,4,0,0,5,5,4,1,2,5,2,2,0,2,4,5,2,5,3,2,1,4,1,5,2,5,3,5,5,2,0,3,5,2,5,5,4,3,5,3,3,2,2,2,2,3,5,0,3,4,3,3,3,0,3,2,5],\"quality\":[3,5,5,4,5,5,5,5,5,5,1,3,4,5],\"rators\":[\"8PwfYqoDQFThzNtvf\",\"aEm3Wvj2rFYRL8Lrb\",\"tAF9Gf6PiGogbZuWs\",\"vTfyrr4pGddp8rbXc\",\"xn7uGNKeAwPEkP9oA\",\"5dHucvf2qBYyKim7X\",\"4fhjJBvLBWh6QeSih\",\"h4x2jaMdj5aQZbW5g\",\"8JyqsSbN2FJXPr3cw\",\"9onLFjwWr6DqyRBJw\",\"fSQSHjW3e72MrWxbD\",\"roavRomeeDy4Po3FA\",\"Cia25zjeX3RkCNx5t\",\"iS5BrkGLzJyPK7nKt\",\"jD7mXH7BefoPFN7R8\",\"DPi9QGLctq2y76KuE\",\"8nE8QHnFYsHCFebte\",\"AJwBauGHyrbqgDYce\",\"HF28xZKSLM9wEuqNg\",\"8sNv5PTHa7XQ8bNqR\",\"b3Dk2LqoEgripS3Y3\",\"J23RcmzbdtBbPCTjT\",\"58M252WF7SPRinfBx\",\"2PufnQcsHsfymufX3\",\"yr822PZmmiDDenxpB\",\"SbGLSZ5piLATC8bop\",\"bccs9koJxyQ9XNiLC\",\"SZvn4g8kYSvr4tfTJ\",\"TaGSqsyn65cdKYSK8\",\"eHcgvkTGsH7ZziqBo\",\"HqpbA6C6zkAmDsaEm\",\"zfrhof8pbZnQizdmi\",\"b2H68wAhgvMJer2QH\",\"QRv96jmNaYsWkxQEG\",\"yJztfbra8TLW5JkB5\",\"2S3Gs8JSmyypMrhce\",\"iojEnnY9FsMfYzp6f\",\"J3upzLHuEwXH7Z2hx\",\"yjtdwc2AC4jA2RWtn\",\"wwMcJQRvf3X59Jyev\",\"4sHkH3t9CJYhbDwjM\",\"9pzFiFK3ANLjQfnr2\",\"gJYuGdkXEWWmGRLzu\",\"F8CP3NDk2GCR7MoD3\",\"jWrysbS3AqiQN8rmo\",\"QR9XDDz9w7g2irPka\",\"AasGs8AeX9Lcb9xJn\",\"bJaPCBx63YxdJAuTS\",\"C7ZA9doihaBZsQszB\",\"6hZnCNQcPNBEKhyA2\",\"5XiuAqicKD4hBdu63\",\"brnCMatAy3RcqkGNh\",\"DioW5S4dMoYRYGLx4\",\"ss8kTqmbJyWsx2dp9\",\"baJigWtyBEH38rSyM\",\"bobf7mZwn7iv6uhwi\",\"by7wQG5WD7zu9qyhK\",\"D3Pr2EFee3652zsyR\",\"Wpn95NqWxncQrwNgz\",\"9YgbQLg7Rfb47fJjL\",\"piEXdKQ6gbbjxE9mX\",\"dNBGNMKLZam4bvHuZ\",\"ChCR2XGsG27PuiujF\",\"8BFSTCnoe2QggN64c\",\"kDq2TnPdy7hGKdAD5\",\"hjgkNySbaZT74LqCT\",\"bCFecqKyXTCnGgPSc\",\"qJaJ3kpnSTg3BXcyG\",\"vS9WrbiWjcje5xHHj\",\"5HH239FpCsu6fTr5R\",\"RErqK2yM94wYyD2hk\",\"ctbThYbufFCYbRK4f\",\"5P84pDJLrfmBbzjbX\",\"PeDHaXvvHrYjAz4tz\",\"6fxy3eJReoJaYcJqH\",\"jPodEnpx7AwWpCpCa\",\"ECpjKM58LJMYNMGJZ\",\"Hx8ABi9dWW9bctRSo\",\"qNszsXx28cTxvGSNj\",\"4SNg5Qy6eHvwqQGSR\",\"PH32cNxBjrK4a28sn\",\"hkiz2Nv927cYGrA86\",\"QyFx8LYjCJjShhB7X\",\"hR7GMiqGap4CzEWSy\",\"z9Gv2Cvx2693rJs3i\",\"RtWDeMfmt2RxmEwr2\",\"LJe3yrh3WBcEPwPR3\",\"gLcykmFjpHDgQJ2Ga\",\"97DthwdtrBLm2y2Yj\",\"oHQ3shNGA8p8ZGJ5m\",\"gKT7qZgPQesSxRyva\",\"3AAFfmuGwKui4nRH8\",\"gKnWjDjwrJh7MK2df\",\"2cFEkS68gQA5vtKc4\",\"gCoSAkv52qKWnaJWs\",\"JwkwCHcXthnGDsdFr\",\"9wXH7kEc2oNKszt2z\",\"s66ybqHn4MG953AsN\",\"fznzd3qnvtbFkkizz\",\"HDRYPM2oiMv79A3M3\",\"AQSqD9oNv2uPfxZCR\",\"YE4CPNZhrjsNbsJAe\",\"FDQPig295GLkvnnvc\",\"c8hrqE2eTpqKnRSMA\",\"GzbS8jbZu5Ns6EYTX\",\"zCJDDCNy5qFMCQWF7\",\"yod5YhKtPqw2GfG9B\",\"NGh32aadRWYbMDX9P\",\"MnFyfhFw3jxtk3GPC\",\"oEkDZvzwDpH3oiyJh\",\"fHQwbcsBGw7casZzN\",\"5QN8R22z43SrwoHDz\",\"jNQpmw5E3pif9bm3A\",\"hySpcNb4eGY7eGe79\",\"Cy34THXNefcoyNNY4\",\"A5Yk8K7W76v8JJYQg\",\"Jjz79FfaC6dyNHq47\",\"PiiG9eGdDLsvzW2Cz\",\"FNFfXPL7gavBjPYSE\",\"9pqtNWrsTJdZcRbEZ\",\"hYq2tQbwKgxWpMN6z\",\"RriCQNKWZmYKexd8R\",\"KBYiwK7DWhnNh7xXz\",\"T2vhHPhRR96hRizq8\",\"HYn6FhRjBtb6wjtJq\",\"ZJTkXCSvp6prPRDyt\",\"CSuaZAHNjHiTgPEt4\",\"z6SNmpGt3QRdHPaSB\",\"yMdAh9cHwcw7BBxZ2\",\"Dj89Gue6KSiQDdC5E\",\"bnFwHHeg5vyGzntuv\",\"m7kMANAKbQxHfueLC\",\"CYDodGhhc9RL9PxDm\",\"suArq5BbSy7gD6xri\",\"8PMaZwToeg92Ziifx\",\"m93iCiqEMdu4omKjA\",\"Fk9YcngdB7meTXSgA\",\"Kn9yjT4NvcnnvjCrL\",\"uuoAiAHTgwwB6PMXr\",\"bhZGZppAgHZAEftEv\",\"MmgNdzQBuNQk2qEuq\",\"Cx5e8t37sqygaMwuf\",\"pkWwd96aNMjYBEyQ5\",\"wnaPaA3PTyoYA8pQB\",\"SZj8jiRbrmcacXmZm\",\"qKaafrxyeXizQhtnm\",\"yZxixWN2iXeAHZz8o\",\"68zWiHdiSfDcaZths\",\"SFyGnexSYdfWGvMsS\",\"s6ndsX8rXCaTStjdN\",\"Giqgzv346hFnMmEkH\",\"eQFYheJ6Cazfatrqw\",\"psXeXhMvKsWTerC9J\",\"K42ijC8Jy8GHBnobP\",\"ddimzq3i3uWXWgrvM\",\"WFimDCdgZyYaHFiWE\",\"dbgWF79585oqSNW2f\",\"yBJJz2pkzKcmHnrfH\",\"LdGWemQARx9BWyWsg\",\"binKrswKk5Gu63TNd\",\"3WGMA5SXWprGpF4jH\",\"29iPnxJZnvHzDqfKR\",\"PGsQ8wLsv4W2Dr5tt\",\"gXTAie79kiw28tx5u\",\"RLzFpbYhFJdYjbtpT\",\"aQTCN6vbXjwKzb85G\",\"YREmgD3mXd6v6oma2\",\"9jstf8smopHw3kx62\",\"FiNtqWXRz7mfDCbj4\",\"Y7zDbhJG8sLKtJCtZ\",\"WCQLLP9xhgziymW7Q\",\"rPWAYoqzsPAxweEBH\",\"qRfAEHwBqZZwo4tBC\",\"r6mBDnyhRiqKKyzXx\",\"C9XKQJAWoPiNdgWFb\",\"mXEbFnA7BrQjTCNW3\",\"7qFJiaDbG6ikcc4Dq\",\"Kezo9CyRhXPxzS7oF\",\"Tu4tGxaW8o3Qp7LZJ\",\"6kN9QmPqw9Xyiy3Zm\",\"kS6jKFoTaL3SwPPpY\",\"C6mPmiDmSwFQkn2sW\",\"mTF6oWX2WhFR4M3QK\",\"h8q7ZcjsMQN4jxSon\",\"Rk54WG323KeT6odSb\",\"ivhANerkccFANHjki\",\"rDgKHd6ZSSpboiAj7\",\"yrepPeTRbRu3PPJXr\",\"9QMPE56an5KmasGwS\",\"BByKDngfPvW6w4m7d\",\"x6SDZ2bCveyjt6Xcx\",\"ouSfngufpR53JEYQG\",\"aiqruLbboPvFkh3qi\",\"wNLWme2gvvpMPHk7A\",\"6sz8rvGyCpMuJm7zi\",\"ziNNNK6j7ZR3ExQWd\",\"v2GZZgHjSA3jiuaP8\",\"7ECPGSRPjmwFnpDd6\",\"yigTamzWZsgnWGZbs\",\"chjnffaneoZXR38YH\",\"XjukLdabart3Lta5Z\",\"nsraAqTmqcmzccmu7\",\"BaxT3CKTpf2LqnZPE\",\"QvK768G3CFbPdwTXG\",\"SKLuGEcaeE8EnTMbp\",\"P2AdXopuWyigoWEes\",\"xj5hoZZEsPQ9NKLxL\",\"QcNwiX3ueZzgvRYYz\",\"a4Ln97CHxc8W6dzbq\",\"iFSaDomeYMedCzdjY\",\"23oi2a3vQwhtLEbSj\",\"uvzDjfbusw8SFY8n8\",\"WKsvry6M74GDrtqHQ\",\"kwt2NHssDtHDQwhxY\",\"LhNQMA6gLSzQ5zFjL\",\"MBA5BzRXuMRx822ty\",\"8ALH5xNvzy692uzy4\",\"edmov2rvpnyBfuW55\",\"hP3dY9tJ9yC6ZoKtH\",\"KpHrC7WPEojnzgEtz\",\"iwTv2vHyJ7uqSTfzZ\",\"Yv4RvP6ohsdasXmaH\",\"drpt7ehfks7ZhHR2u\",\"DwetpbChQM4r6Gwah\",\"cjvBZFnZYAA545dKs\",\"pnzfNatg3P32mMYQY\",\"tmsYFyoMmuzq3x8cq\",\"cGmxxMmHddqBpqu9Z\",\"42kdkWrrgiEYoJYHN\",\"ptnBQkBtZyxfEpwrz\"],\"total\":247},\"flags\":1},\"summary\":\"Create a solution that checks if a given string consists of a sub-string pattern repeated multiple times to return True or False.\\n\\nExamples\\nrepeated(\\\"a\\\") ➞ False\\n\\nrepeated(\\\"ababab\\\") ➞ True\\n\\nrepeated(\\\"aba\\\") ➞ False\\n\\nrepeated(\\\"abcabcabcabc\\\") ➞ True\\n\\nrepeated(\\\"aaxxtaaxztaaxxt\\\") ➞ False\\n\\nNotes\\nAdroit programmers can solve this in one line.\",\"tags\":[\"conditions\",\"strings\",\"validation\"],\"timestamp\":{\"$date\":1604338745541},\"title\":\"Repeated Sub-String Pattern\",\"family\":[{\"_id\":\"FYSu3nEwjA7iN3WmT\",\"language\":\"javascript\"},{\"_id\":\"L2nw2N2YqZCboiaYM\",\"language\":\"python3\"},{\"_id\":\"rJr6wC6rrkGeAvxMF\",\"language\":\"ruby\"}]}}"]