a["{\"msg\":\"result\",\"id\":\"1403\",\"result\":{\"_id\":\"ZJGBGyZRNrbNtXJok\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"def nearest_vowel(s):\\n\\t\",\"difficulty\":2.053435114503817,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"WGPdq9yi9GQBNL8HM\",\"instructions\":\"Given a letter, created a function which returns the nearest vowel to the letter. If two vowels are equidistant to the given letter, return the *earlier* vowel.\\n\\n### Examples\\n```\\nnearest_vowel(\\\"b\\\") ➞ \\\"a\\\"\\n\\nnearest_vowel(\\\"s\\\") ➞ \\\"u\\\"\\n\\nnearest_vowel(\\\"c\\\") ➞ \\\"a\\\"\\n\\nnearest_vowel(\\\"i\\\") ➞ \\\"i\\\"\\n```\\n\\n### Notes\\n- All letters will be given in lowercase.\\n- There will be no alphabet wrapping involved, meaning the closest vowel to \\\"z\\\" should return \\\"u\\\", not \\\"a\\\".\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(nearest_vowel(\\\"a\\\"), \\\"a\\\")\\nTest.assert_equals(nearest_vowel(\\\"b\\\"), \\\"a\\\")\\nTest.assert_equals(nearest_vowel(\\\"c\\\"), \\\"a\\\")\\nTest.assert_equals(nearest_vowel(\\\"d\\\"), \\\"e\\\")\\nTest.assert_equals(nearest_vowel(\\\"e\\\"), \\\"e\\\")\\nTest.assert_equals(nearest_vowel(\\\"f\\\"), \\\"e\\\")\\nTest.assert_equals(nearest_vowel(\\\"g\\\"), \\\"e\\\")\\nTest.assert_equals(nearest_vowel(\\\"h\\\"), \\\"i\\\")\\nTest.assert_equals(nearest_vowel(\\\"i\\\"), \\\"i\\\")\\nTest.assert_equals(nearest_vowel(\\\"j\\\"), \\\"i\\\")\\nTest.assert_equals(nearest_vowel(\\\"k\\\"), \\\"i\\\")\\nTest.assert_equals(nearest_vowel(\\\"l\\\"), \\\"i\\\")\\nTest.assert_equals(nearest_vowel(\\\"m\\\"), \\\"o\\\")\\nTest.assert_equals(nearest_vowel(\\\"n\\\"), \\\"o\\\")\\nTest.assert_equals(nearest_vowel(\\\"o\\\"), \\\"o\\\")\\nTest.assert_equals(nearest_vowel(\\\"p\\\"), \\\"o\\\")\\nTest.assert_equals(nearest_vowel(\\\"q\\\"), \\\"o\\\")\\nTest.assert_equals(nearest_vowel(\\\"r\\\"), \\\"o\\\")\\nTest.assert_equals(nearest_vowel(\\\"s\\\"), \\\"u\\\")\\nTest.assert_equals(nearest_vowel(\\\"t\\\"), \\\"u\\\")\\nTest.assert_equals(nearest_vowel(\\\"u\\\"), \\\"u\\\")\\nTest.assert_equals(nearest_vowel(\\\"v\\\"), \\\"u\\\")\\nTest.assert_equals(nearest_vowel(\\\"w\\\"), \\\"u\\\")\\nTest.assert_equals(nearest_vowel(\\\"x\\\"), \\\"u\\\")\\nTest.assert_equals(nearest_vowel(\\\"y\\\"), \\\"u\\\")\\nTest.assert_equals(nearest_vowel(\\\"z\\\"), \\\"u\\\")\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,3,2,1,3,2,1,3,2,1,2,2,2,3,3,1,2,2,3,1,5,1,0,3,2,3,1,2,3,3,3,0,2,1,1,3,2,1,3,3,3,3,0,3,1,3,3,0,2,3,2,3,3,3,1,2,3,3,3,0,0,3,2,0,3,2,3,1,3,0,3,3,2,1,2,2,3,1,3,2,2,1,3,2,0,3,1,2,2,3,4,4,2,1,3,3,0,3,1,0,0,0,3,2,2,2,4,2,3,2,2,1,3,0,3,3,2,0,4,2,2,3,0,2,3,3],\"rators\":[\"tAF9Gf6PiGogbZuWs\",\"8PwfYqoDQFThzNtvf\",\"pWD2YC5s4YRCxFc2i\",\"4RY3zj9C2t8GGefhi\",\"YRstQuthRkFeBiXug\",\"8JyqsSbN2FJXPr3cw\",\"aEm3Wvj2rFYRL8Lrb\",\"kYWb8BwpKwunQkxeX\",\"gJYuGdkXEWWmGRLzu\",\"gb9rvGus2Jv7bjZSs\",\"dHZqT6h4JMwk5fPC8\",\"Yp7uvStL97cC9fKkY\",\"ZNnsMeNkdDhHjSrZb\",\"tczr8H3zHk2kwp8br\",\"3Zceb8GudqAG3onG3\",\"JQ5uoxA4WZgN6HyJk\",\"EjbDDFRECrzQDkzrX\",\"55RQznnuTGpsj3EXd\",\"mDWNyaaQ9hvPCRzSd\",\"s5M5RvgqR9BhB9JoC\",\"J5T8gZqiZXFuFDTQ7\",\"cR3ibTMxLyEdDFCHY\",\"2fxapKr8XGdNeaKi2\",\"So6PHm74mfJuY2WTs\",\"yZvzB3qFb8pkHy4dg\",\"3pxHTZBsv7MKzFG6Y\",\"orFLgPDw9H5MDzmwo\",\"k5mp7Hkg8w5rwiXpe\",\"ekQh3jzgGLsEMbKo3\",\"aCNWav8S8Try9RkC6\",\"a777e8chPvJkY3tKa\",\"5aZnA8Br3u7Wf5ENg\",\"KdNDysEsy2TW5QRJ2\",\"HF28xZKSLM9wEuqNg\",\"KRmxvA4mWgfKvHmYN\",\"hnyhBFWwNCz9mDfSi\",\"MKT7khMBGXzA22ykf\",\"yr822PZmmiDDenxpB\",\"DxxNN37iEz7b8t2nf\",\"kQH5b8MXJunh84Czq\",\"DQskEvAv5KiJDPtGF\",\"n2BRY9X8899dcG8Bw\",\"v9KtC8YLbMWmXiW2H\",\"DEDniTrstQYGounXT\",\"4rwxLqLs2mNZNg8NB\",\"4yNLEwL2rsx4EE5Nt\",\"djeesDJQwNJay4RTe\",\"Ecg4m7srYGgZsb4Ck\",\"awgg82Yam6sfukCs6\",\"x4dfavjLEcrvAF3QQ\",\"2innwjWqxJHo4eRGh\",\"mcJDA2TkghmFqLe3i\",\"iojEnnY9FsMfYzp6f\",\"i2ZyBQDbgjH3xEBn8\",\"zZDaXBxMzTCBhNkgL\",\"bJxaKHJqR82EWw8Su\",\"CwXsu25ygLEwQbmQC\",\"iS5BrkGLzJyPK7nKt\",\"9pzFiFK3ANLjQfnr2\",\"HqmxnQJM66Y57twhn\",\"yjtdwc2AC4jA2RWtn\",\"ZrKCkX7xxGGZzauFW\",\"KZ2xddpM2f9JRaryB\",\"dEuJGZbBQkveCXEFk\",\"euPBBaYXyS8RBr9KB\",\"GGprTwrkjuccmrQRg\",\"mG8HqKiAQFTdRZthG\",\"XjajdyybZZbkz8o5x\",\"axdSNLZpiCDF8RS6n\",\"DPi9QGLctq2y76KuE\",\"dkcmCKwqApX5jBggc\",\"xn7uGNKeAwPEkP9oA\",\"xwEZk3bNZoNDPJYF5\",\"QRv96jmNaYsWkxQEG\",\"6MjSiiBLPcvXbXcaZ\",\"dYPkStFnLvAMsHSzZ\",\"J3upzLHuEwXH7Z2hx\",\"CTKmXtrqDYqJBnuy8\",\"gXTAie79kiw28tx5u\",\"SExX3m5YftBWmsk2e\",\"JS3hNM3XXkxPdg3yk\",\"oBcs8GLX2ZFLXQy8y\",\"7scpcTEp3SEx5Wjg9\",\"buX4mCQhtXCfBjeno\",\"cAP3n5NY64uoMwzRR\",\"Jqk2uJZZxEv5wZFze\",\"MXGuntvz3byrP6WJc\",\"xoEMkaCmtm9iEFhdJ\",\"9bQyb6rW7xfE4vgrR\",\"C93QAvQRQirB7ByjF\",\"zNjAQmStrERNZsSPY\",\"uMxob526prFuTTNve\",\"aeRb8NuuqrfgG3iio\",\"4Ytzg5uu2quL2jmqt\",\"ud4Kram2Nst3heXky\",\"rtk4EvSHdZAxp8BFR\",\"dyCGv8v55ujgTaJhS\",\"EXbD3ZjgP9oaoFLYw\",\"HYdgZMc8PMCYiWeWg\",\"cRTWw69PgE2pAnQZj\",\"NfMJuiBk6FN5Jc6ow\",\"iZmwyf9uWHuAo9uTW\",\"ipZ44LskscAPKkZbQ\",\"NzCdApxNegj4RarXe\",\"Srde9EZZxyHZwKTor\",\"mobR7TZXwxDL4CSn8\",\"ReJkqc43MY6pNcMDh\",\"HvSicYcezLB6aFwWu\",\"axJMjk7YuZkZM7mWK\",\"xAdxvTex2CRDQN5vT\",\"8iQviEepzkwGHDAKZ\",\"vJqinfp6DH8NxvdGm\",\"KTy2iqwjsH9PeErTB\",\"eeEZDk7TE5mYu3mrB\",\"c96KAfLHqoeiGvd4m\",\"BEZSu9R94XFomASKM\",\"RD74CsiHwMQEMb9uq\",\"PWgzeK859suojbrRx\",\"RTDx9axf52kxhFjwZ\",\"PytNZK9mNiRiZxPrm\",\"FEYpu9RWysAgW3XnP\",\"srJ34BaybkQh3qRkM\",\"GGdmhAvxXhqhhibJN\",\"H9KZi2cjt4FwH7qog\",\"rfyEkETeoS96QNH4e\",\"PC3pLs36zNzpRDSuE\",\"8BFSTCnoe2QggN64c\",\"PH32cNxBjrK4a28sn\",\"2PufnQcsHsfymufX3\",\"fznzd3qnvtbFkkizz\",\"T6iBEE2jp7f7iEF2P\",\"gKnWjDjwrJh7MK2df\",\"QvEXmSEo3ANp3yPyH\",\"u5u2YpHXiNgzDNJdX\",\"jCjCvyhqhpebkJn34\",\"o4ixjQGSaYqA2JoM4\",\"M4hd9wTL5j4rupNez\",\"cA6ALDreRTFs8k4MM\",\"FDQPig295GLkvnnvc\",\"AFfw7cGg83uYk2Miy\",\"yod5YhKtPqw2GfG9B\",\"4Lwjr34ypKNQNQCar\",\"8sNv5PTHa7XQ8bNqR\",\"2Asob8QsSfXRkvkDq\",\"T2vhHPhRR96hRizq8\",\"RoGGD5cpHb4ftdLDv\",\"Ds7L5bksw2QRHjrKL\",\"ey3CASd6Je5LEJzfB\",\"5HCu9Ydd86QgHDRNP\",\"mvJBakQ35CWAnbbEZ\",\"suArq5BbSy7gD6xri\",\"3KkyQm77zsew58Dc2\",\"YyMFAt6ttq3ym4KPt\",\"CHvzhtXnv8HTbPQ56\",\"BrTDhPJcACL2bsrpJ\",\"Qyfyyw6oC4EHAndzo\",\"jkbavR2ATFJcpmo8M\"],\"total\":172,\"quality\":[5,5,5,5,5,5,5,5,5,5,5,3,5,1,5,5,4,4,5,4,5,5,4,5,4,5,5,5,5,5,5]},\"flags\":0},\"summary\":\"Given a letter, created a function which returns the nearest vowel to the letter. If two vowels are equidistant to the given letter, return the earlier vowel.\\n\\nExamples\\nnearest_vowel(\\\"b\\\") ➞ \\\"a\\\"\\n\\nnearest_vowel(\\\"s\\\") ➞ \\\"u\\\"\\n\\nnearest_vowel(\\\"c\\\") ➞ \\\"a\\\"\\n\\nnearest_vowel(\\\"i\\\") ➞ \\\"i\\\"\\n\\nNotes\\nAll letters will be given in lowercase.\\nThere will be no alphabet wrapping involved\",\"tags\":[\"strings\",\"loops\"],\"timestamp\":{\"$date\":1588158306393},\"title\":\"Nearest Vowel\",\"quality\":4.645161290322581,\"family\":[{\"_id\":\"xGRM2qF2YYmBFCxJ5\",\"language\":\"cpp\"},{\"_id\":\"62BAcgsNSdwYmE9ty\",\"language\":\"javascript\"},{\"_id\":\"ZJGBGyZRNrbNtXJok\",\"language\":\"python3\"},{\"_id\":\"TRM2bWoARYrh9rZu3\",\"language\":\"ruby\"}]}}"]