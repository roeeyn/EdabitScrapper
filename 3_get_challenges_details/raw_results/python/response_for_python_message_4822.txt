a["{\"msg\":\"result\",\"id\":\"1124\",\"result\":{\"_id\":\"SqbyWYwqChQroXfhu\",\"author\":\"Luis Pereira\",\"authorId\":\"aEm3Wvj2rFYRL8Lrb\",\"code\":\"def lower_triang(arr):\\n\\t\",\"difficulty\":1.5865384615384615,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"HvaNtGS5LbZ73zmjA\",\"instructions\":\"This challenge concerns _square matrices_ (same number of rows and columns) as the below example illustrates:\\n\\n```\\n[\\n  [1, 2, 3],\\n  [4, 5, 6],\\n  [7, 8, 9]\\n]\\n```\\n\\nThe entries in the diagonal line from the top left to the bottom right form the _main diagonal_ of the matrix. In this case, 1,5,9 form the main diagonal.\\n\\nWrite a function that returns the matrix obtained by replacing the entries _above_ the main diagonal with 0s.\\n\\nFor example, for the matrix above you should return:\\n\\n```\\n[\\n  [1, 0, 0],\\n  [4, 5, 0],\\n  [7, 8, 9]\\n]\\n```\\n\\n### Examples\\n```\\nlower_triang([\\n  [1, 2, 3],\\n  [4, 5, 6],\\n  [7, 8, 9]\\n]) ➞ [\\n  [1, 0, 0],\\n  [4, 5, 0],\\n  [7, 8, 9]\\n]\\n\\nlower_triang([\\n  [5, 7],\\n  [7, 9]\\n]) ➞ [\\n  [5, 0],\\n  [7, 9]\\n]\\n\\nlower_triang([\\n  [1, 8, 8, 1],\\n  [2, 7, 7, 2],\\n  [3, 6, 6, 3],\\n  [4, 5, 5, 4]\\n]) ➞ [\\n  [1, 0, 0, 0],\\n  [2, 7, 0, 0],\\n  [3, 6, 6, 0],\\n  [4, 5, 5, 4]\\n]\\n```\\n\\n### Notes\\n- As in the examples, the size of the matrices will vary (but they will always be square).\\n- In Linear Algebra, matrices with 0s above the diagonal are called _lower triangular matrices_.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(lower_triang(\\n[[1, 2, 3],\\n [4, 5, 6],\\n [7, 8, 9]]),\\n[[1, 0, 0],\\n [4, 5, 0],\\n [7, 8, 9]])\\n\\nTest.assert_equals(lower_triang(\\n[[5, 7],\\n [7, 9]]),\\n[[5, 0],\\n [7, 9]])\\n \\nTest.assert_equals(lower_triang(\\n[[1, 8, 8, 1],\\n [2, 7, 7, 2],\\n [3, 6, 6, 3],\\n [4, 5, 5, 4]]),\\n[[1, 0, 0, 0],\\n [2, 7, 0, 0],\\n [3, 6, 6, 0],\\n [4, 5, 5, 4]])\\n \\nTest.assert_equals(lower_triang(\\n[[1, 0],\\n [7, 3]]),\\n[[1, 0],\\n [7, 3]])\\n \\nTest.assert_equals(lower_triang(\\n[[0, 1, 2, 3, 4],\\n [1, 2, 3, 4, 5],\\n [2, 3, 4, 5, 6],\\n [3, 4, 5, 6, 7],\\n [4, 5, 6, 7, 8]]),\\n[[0, 0, 0, 0, 0],\\n [1, 2, 0, 0, 0],\\n [2, 3, 4, 0, 0],\\n [3, 4, 5, 6, 0],\\n [4, 5, 6, 7, 8]])\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,1,2,0,2,2,2,2,2,2,1,2,2,0,2,2,1,2,2,1,2,1,2,2,1,1,2,1,0,5,3,1,0,1,3,2,2,1,2,2,2,1,2,0,3,0,2,2,2,2,2,2,1,2,2,1,0,2,2,2,0,2,2,2,2,1,2,1,0,2,2,2,2,3,0,2,2,2,0,2,1,2,1,2,1,2,2,2,2,0,2,2,2,2,1,1,3,2,2,1],\"rators\":[\"aEm3Wvj2rFYRL8Lrb\",\"9PGk6auzrKALn9mEn\",\"tAF9Gf6PiGogbZuWs\",\"Yp7uvStL97cC9fKkY\",\"gJYuGdkXEWWmGRLzu\",\"jNvegJWCk5HCtEMbK\",\"KRSKj7ikX2ytWFmod\",\"daFMtxYmCNMQ9HNsJ\",\"dHZqT6h4JMwk5fPC8\",\"ZNnsMeNkdDhHjSrZb\",\"vLrq4dEDMM2wd68Dc\",\"2fxapKr8XGdNeaKi2\",\"aRqQ42J5zqCmBNd8w\",\"sz8ufn9i8zeiGWpAy\",\"AasGs8AeX9Lcb9xJn\",\"9Ly8afdtofp8DXzrt\",\"8PwfYqoDQFThzNtvf\",\"s5M5RvgqR9BhB9JoC\",\"8JyqsSbN2FJXPr3cw\",\"hnyhBFWwNCz9mDfSi\",\"gb9rvGus2Jv7bjZSs\",\"XEdKC996fR3482H7v\",\"HF28xZKSLM9wEuqNg\",\"cR3ibTMxLyEdDFCHY\",\"mDWNyaaQ9hvPCRzSd\",\"Cc2Cgj4MWXZxsTooC\",\"Jqk2uJZZxEv5wZFze\",\"2QGRoQn2dRq3scu7k\",\"J5T8gZqiZXFuFDTQ7\",\"9pzFiFK3ANLjQfnr2\",\"yZvzB3qFb8pkHy4dg\",\"YsAz93yZw8KKPupKv\",\"M8dQuMrEpP8Hc3tHN\",\"8LfTheFzvicameoz9\",\"P5rZsXzsycFb54oah\",\"DEDniTrstQYGounXT\",\"KdNDysEsy2TW5QRJ2\",\"kYWb8BwpKwunQkxeX\",\"nfXGHENb5md7m355s\",\"rgvAJFwfCeYoYnFTK\",\"orFLgPDw9H5MDzmwo\",\"C9LKGu2g5hSijvDzA\",\"ahk2qiXKJA753wAJk\",\"ikkjHDqBHu6fT3vGL\",\"aPLuemxzZ5iS57NBQ\",\"RDAijeuBkgHgZfPrG\",\"a777e8chPvJkY3tKa\",\"yr822PZmmiDDenxpB\",\"zT9LpkiwYjLviYYW6\",\"H4abACFDH5t8CnnyH\",\"NG8PWBSjsM8mMhQEq\",\"syRNbbPdLCGXbH2Gy\",\"iojEnnY9FsMfYzp6f\",\"Pe8vWpDHRuH9nSGKW\",\"yjtdwc2AC4jA2RWtn\",\"HqmxnQJM66Y57twhn\",\"YcCLwitFMAEJSnxAW\",\"XrqNzJ2FRG8HnGiR6\",\"NNE5HNRXAkmhrWgyQ\",\"hRiMXDZNAzyPd5tpt\",\"FEYpu9RWysAgW3XnP\",\"oBcs8GLX2ZFLXQy8y\",\"Ba7nXvxBcNaWdKb2Y\",\"mG8HqKiAQFTdRZthG\",\"tpxMgkGSHwBjS95Ta\",\"qD2LrwaDrSdiybLKY\",\"9dgvEreRDYRiwLmYv\",\"DPi9QGLctq2y76KuE\",\"QRv96jmNaYsWkxQEG\",\"kXEfD7xxEyWd7oxxL\",\"J3upzLHuEwXH7Z2hx\",\"9CoqdidjM9KbeKnHY\",\"dYPkStFnLvAMsHSzZ\",\"cAP3n5NY64uoMwzRR\",\"PXAcsKkssS2yLyDv2\",\"dj5AyG5fWP8FdsSmZ\",\"zd9FLSzsGz3evKafy\",\"5XiuAqicKD4hBdu63\",\"RGMbFMZXJr7DhcAJy\",\"dBzwBtRjZqB98DJeB\",\"d8qtzoLB264iP8tdY\",\"5HCu9Ydd86QgHDRNP\",\"8we49y2cXuirbyGZg\",\"5hQnRWiKkhgKJXNMP\",\"HuNF3xTBzmatyGSTm\",\"5S9nX4rKsnCcnv4Cz\",\"eYfPWvZwnJQkHbSTK\",\"buX4mCQhtXCfBjeno\",\"GGdmhAvxXhqhhibJN\",\"KJCDwGkoXh8qtbbKr\",\"srJ34BaybkQh3qRkM\",\"Ds7L5bksw2QRHjrKL\",\"xn7uGNKeAwPEkP9oA\",\"qAby4AWXmTNeusvg3\",\"uL3zkrK6hfbESPWfc\",\"eMuCpJ2spXWkJjWNz\",\"T6iBEE2jp7f7iEF2P\",\"CHvzhtXnv8HTbPQ56\",\"66a9xX73nmTEuKs9k\",\"M6bTx857t3pL9ZWHn\",\"yod5YhKtPqw2GfG9B\",\"PC3pLs36zNzpRDSuE\",\"AJexRBN9cYQmqvYu6\",\"eHcgvkTGsH7ZziqBo\",\"8BFSTCnoe2QggN64c\",\"sHjfbGQGLHE6JR6qu\",\"ey3CASd6Je5LEJzfB\",\"BrTDhPJcACL2bsrpJ\",\"XD5nmvKQchKezPXhy\",\"K3RacTvkWHLfzKF8i\",\"2PufnQcsHsfymufX3\",\"Cy34THXNefcoyNNY4\",\"dzS6WBTMHyFEag6Fp\",\"rhS8qXRjZcpDXkwnE\",\"d9LBRxvADNBB5QJMB\",\"pduNK68oazqQTtbLp\",\"4TmgHkn5vqyHK3sYC\",\"4Lwjr34ypKNQNQCar\",\"3nied3n8KG8RSNixH\",\"JhX7jvtpwNyxcc39m\",\"MKT7khMBGXzA22ykf\",\"DQskEvAv5KiJDPtGF\",\"Wi4H6ayKsNDWWQCG5\"],\"total\":136,\"quality\":[5,5,4,3,5,5,5,5,3,4,5,4,5,5,5,3,5,5,5,5,5,5,5,5]},\"flags\":0},\"summary\":\"This challenge concerns square matrices (same number of rows and columns) as the below example illustrates:\\n\\n[\\n  [1, 2, 3],\\n  [4, 5, 6],\\n  [7, 8, 9]\\n]\\n\\nThe entries in the diagonal line from the top left to the bottom right form the main diagonal of the matrix. In this case, 1,5,9 form the main diagonal.\\n\\nWrite a function that returns the matrix obtained by rep\",\"tags\":[\"arrays\",\"language_fundamentals\",\"math\",\"loops\"],\"timestamp\":{\"$date\":1586111653225},\"title\":\"The Bottom of the Matrix\",\"quality\":4.625,\"family\":[{\"_id\":\"sMP2GFYKT23oDMRxW\",\"language\":\"cpp\"},{\"_id\":\"jkkhAZ2C9Zy4SHbtj\",\"language\":\"javascript\"},{\"_id\":\"SqbyWYwqChQroXfhu\",\"language\":\"python3\"},{\"_id\":\"mSxiBYttTKfaGd6qZ\",\"language\":\"ruby\"}]}}"]