a["{\"msg\":\"result\",\"id\":\"1435\",\"result\":{\"_id\":\"vLRpikwB9dqaR3HAj\",\"author\":\"Luis Pereira\",\"authorId\":\"aEm3Wvj2rFYRL8Lrb\",\"code\":\"def is_ord_sub(smlst, biglst):\\n\\t\",\"difficulty\":2.0510204081632653,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"u4hvhCGFYEzvJt3zX\",\"instructions\":\"Given two lists `smlst` and `biglst`, we say smlst is an *ordered sublist* of `biglst` if all the elements of `smlst` can be found in `biglst`, and *in the same order*.\\n\\nExamples:\\n- `[4, 3, 2]` is an ordered sublist of `[5, 4, 3, 2, 1]`.\\n- `[5, 3, 1]` is an ordered sublist of `[5, 4, 3, 2, 1]`.\\n- `[5, 3, 1]` is **not** and ordered sublist of `[1, 2, 3, 4, 5]` since elements are not in the same - `[1, 2, 3]` is an ordered sublist of `[3, 2, 1, 2, 3]`.\\n\\nWrite a function that, given lists `smlst` and `biglst`, decides if `smlst` is an ordered sublist of `biglst`.\\n\\n### Examples\\n```\\nis_ord_sub([4, 3, 2], [5, 4, 3, 2, 1]) ➞ True\\n\\nis_ord_sub([5, 3, 1], [5, 4, 3, 2, 1]) ➞ True\\n\\nis_ord_sub([5, 3, 1], [1, 2, 3, 4, 5]) ➞ False\\n\\nis_ord_sub([1, 2, 3], [3, 2, 1, 2, 3]) ➞ True\\n ```\\n\\n### Notes\\nBe careful of examples like the fourth example, where the elements of `smlst` appear multiple times in `biglst`.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(is_ord_sub([4, 3], [3, 4]), False)\\nTest.assert_equals(is_ord_sub([4, 3, 2], [5, 4, 3, 2, 1]), True)\\nTest.assert_equals(is_ord_sub([5, 3, 1], [5, 4, 3, 2, 1]), True)\\nTest.assert_equals(is_ord_sub([5, 3, 1], [1, 2, 3, 4, 5]), False)\\nTest.assert_equals(is_ord_sub([1, 2, 3], [3, 2, 1, 2, 3]), True)\\nTest.assert_equals(is_ord_sub([0, 1, 0, 1], [1, 0, 1, 0, 1]), True)\\nTest.assert_equals(is_ord_sub([0, 1, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0]), False)\\nTest.assert_equals(is_ord_sub([0, 1, 0, 1, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0]), False)\\nTest.assert_equals(is_ord_sub([1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1]), False)\\nTest.assert_equals(is_ord_sub([1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1]), True)\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,1,1,2,1,2,2,1,2,2,2,2,4,3,0,2,2,2,2,2,2,2,3,4,3,3,2,2,2,4,1,4,1,3,3,4,2,4,0,5,2,2,3,3,2,1,2,3,3,2,2,3,0,2,2,2,0,3,2,0,2,3,1,2,2,3,0,1,3,0,2,3,3,0,0,2,1,3,3,3,2,3,1,3,2,3,2,2,3,0,3,3,2,2],\"rators\":[\"tAF9Gf6PiGogbZuWs\",\"aEm3Wvj2rFYRL8Lrb\",\"aAFKLxcnBD2ZrdDnJ\",\"N7P4AnS8nzK4oupHv\",\"2fxapKr8XGdNeaKi2\",\"AasGs8AeX9Lcb9xJn\",\"9uZpgAtSuPZ7W7DL6\",\"8PwfYqoDQFThzNtvf\",\"9Ly8afdtofp8DXzrt\",\"yZvzB3qFb8pkHy4dg\",\"vLrq4dEDMM2wd68Dc\",\"M8dQuMrEpP8Hc3tHN\",\"w3A7cBWyAfukk6xEQ\",\"dHZqT6h4JMwk5fPC8\",\"gb9rvGus2Jv7bjZSs\",\"jNvegJWCk5HCtEMbK\",\"Yp7uvStL97cC9fKkY\",\"8JyqsSbN2FJXPr3cw\",\"Jg8ZSRXe3NoDMCqGu\",\"cR3ibTMxLyEdDFCHY\",\"ZNnsMeNkdDhHjSrZb\",\"LQxof8pGabGuWP7Gn\",\"s5M5RvgqR9BhB9JoC\",\"ftXLsTaA7yHmhuEsY\",\"mDWNyaaQ9hvPCRzSd\",\"XsYhWtDMoky3nAhjd\",\"JQ5uoxA4WZgN6HyJk\",\"uiEuENARwFpnNMfFs\",\"5kvoqxzQfecujwKYG\",\"2innwjWqxJHo4eRGh\",\"pQKacoMccp6HYmWZ8\",\"yYxPzFqBgtQ9fsyHM\",\"YRstQuthRkFeBiXug\",\"PtaiHYXnMwb2rWqQW\",\"eHhL37DG7oW3vTcg7\",\"EjbDDFRECrzQDkzrX\",\"3pxHTZBsv7MKzFG6Y\",\"5aZnA8Br3u7Wf5ENg\",\"J5T8gZqiZXFuFDTQ7\",\"HF28xZKSLM9wEuqNg\",\"n2BRY9X8899dcG8Bw\",\"kQH5b8MXJunh84Czq\",\"xyk7XeuqKQYZqd7Rk\",\"LjoNTyGEMfBpMHHus\",\"Ecg4m7srYGgZsb4Ck\",\"W5TajitmCyxz87zAC\",\"DEDniTrstQYGounXT\",\"hnyhBFWwNCz9mDfSi\",\"wRtDsCdEzarXcmYFE\",\"dzS6WBTMHyFEag6Fp\",\"iojEnnY9FsMfYzp6f\",\"HqmxnQJM66Y57twhn\",\"yjtdwc2AC4jA2RWtn\",\"zZDaXBxMzTCBhNkgL\",\"Nua6T3dBurBy3Qfg9\",\"v9KtC8YLbMWmXiW2H\",\"qD2LrwaDrSdiybLKY\",\"DPi9QGLctq2y76KuE\",\"xn7uGNKeAwPEkP9oA\",\"dkcmCKwqApX5jBggc\",\"J3upzLHuEwXH7Z2hx\",\"gXTAie79kiw28tx5u\",\"QRv96jmNaYsWkxQEG\",\"oBcs8GLX2ZFLXQy8y\",\"fSQSHjW3e72MrWxbD\",\"Jqk2uJZZxEv5wZFze\",\"eYfPWvZwnJQkHbSTK\",\"4RsakkyRXyYGwFxEa\",\"cAP3n5NY64uoMwzRR\",\"T2vhHPhRR96hRizq8\",\"FtKhGgQhfkJwG8dDu\",\"PytNZK9mNiRiZxPrm\",\"GGdmhAvxXhqhhibJN\",\"FEYpu9RWysAgW3XnP\",\"3LiSLdtN58n46NEqg\",\"YcCLwitFMAEJSnxAW\",\"fznzd3qnvtbFkkizz\",\"2PufnQcsHsfymufX3\",\"CHvzhtXnv8HTbPQ56\",\"fbr22rabEJMfBp7vD\",\"4Lwjr34ypKNQNQCar\",\"MpfytGFYF77emJ3cT\",\"T6iBEE2jp7f7iEF2P\",\"gKnWjDjwrJh7MK2df\",\"5s4qhuRJijYaDNXva\",\"8sNv5PTHa7XQ8bNqR\",\"AQSqD9oNv2uPfxZCR\",\"yod5YhKtPqw2GfG9B\",\"3KkyQm77zsew58Dc2\",\"rhS8qXRjZcpDXkwnE\",\"mvJBakQ35CWAnbbEZ\",\"d8qtzoLB264iP8tdY\",\"buX4mCQhtXCfBjeno\",\"suArq5BbSy7gD6xri\",\"Ds7L5bksw2QRHjrKL\",\"nkH3HfJXLMNcBMM79\",\"ey3CASd6Je5LEJzfB\",\"Nsnt7WJuREHjzZmjE\",\"5HCu9Ydd86QgHDRNP\",\"jkbavR2ATFJcpmo8M\",\"Qyfyyw6oC4EHAndzo\",\"9pzFiFK3ANLjQfnr2\",\"BrTDhPJcACL2bsrpJ\"],\"total\":111,\"quality\":[5,4,5,5,5,5,5,5,5,5]},\"flags\":0},\"summary\":\"Given two lists smlst and biglst, we say smlst is an ordered sublist of biglst if all the elements of smlst can be found in biglst, and in the same order.\\n\\nExamples:\\n[4, 3, 2] is an ordered sublist of [5, 4, 3, 2, 1].\\n[5, 3, 1] is an ordered sublist of [5, 4, 3, 2, 1].\\n[5, 3, 1] is not and ordered sublist of [1, 2, 3, 4, 5] since elements are not in the same -\",\"tags\":[\"sorting\",\"arrays\",\"language_fundamentals\",\"loops\",\"validation\"],\"timestamp\":{\"$date\":1585438433359},\"title\":\"Is It an Ordered Sublist?\",\"quality\":4.9,\"family\":[{\"_id\":\"ovPw4NKPyziW6LAnJ\",\"language\":\"cpp\"},{\"_id\":\"WnfkPFXNMeT8C4c2z\",\"language\":\"javascript\"},{\"_id\":\"vLRpikwB9dqaR3HAj\",\"language\":\"python3\"},{\"_id\":\"AGbpMKqT5DoaGv4n2\",\"language\":\"ruby\"}]}}"]