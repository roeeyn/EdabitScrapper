a["{\"msg\":\"result\",\"id\":\"883\",\"result\":{\"_id\":\"5NJnNKCvC3ApnHxCC\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"def mubashir_function(a, b):\\n\\t\",\"difficulty\":1.4242424242424243,\"familyId\":\"cHK9D2eMJPuhtfckF\",\"instructions\":\"**Mubashir** has written a mysterious function that takes two numbers `a` and `b` and returns *multiplication?*. Solve the riddle of what Mubashir's function is by having a look at some of the examples below.\\n\\n### Examples\\n```\\nmubashir_function(0, 1) ➞ 0\\n\\nmubashir_function(1, 2) ➞ 2\\n\\nmubashir_function(10, 10) ➞ 1\\n```\\n\\n### Notes\\n- Check the **Tests** tab for more examples.\\n- This isn't really a coding challenge, more of a fun riddle ;)\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"#0 * 1 = 0\\nTest.assert_equals(mubashir_function(0,1), 0)\\n\\n#Obviously, 1 * 2 = 2\\nTest.assert_equals(mubashir_function(1,2), 2)\\n\\n#That was easy, 5 * 6 = 30\\nTest.assert_equals(mubashir_function(5,6), 30)\\n\\n#Wait.. What? 10 * 10 = 1 ?\\nTest.assert_equals(mubashir_function(10,10), 1)\\n\\n#What's happening ? 200 * 200 = 4, 0 was omitted ?\\nTest.assert_equals(mubashir_function(200,200), 4)\\n\\n#One more...\\nTest.assert_equals(mubashir_function(12,34), 21)\\n\\n#You can guess from this..\\nTest.assert_equals(mubashir_function(123,45),54)\\n\\n#Mubashir\",\"language\":\"python3\",\"quality\":4.15625,\"summary\":\"Mubashir has written a mysterious function that takes two numbers a and b and returns multiplication?. Solve the riddle of what Mubashir's function is by having a look at some of the examples below.\\n\\nExamples\\nmubashir_function(0, 1) ➞ 0\\n\\nmubashir_function(1, 2) ➞ 2\\n\\nmubashir_function(10, 10) ➞ 1\\n\\nNotes\\nCheck the Tests tab for more examples.\\nThis isn't really a\",\"tags\":[\"logic\",\"math\",\"numbers\",\"interview\"],\"timestamp\":{\"$date\":1610870897516},\"title\":\"Mubashir's Mystery Challenge\",\"stats\":{\"completed\":{\"total\":134,\"ratings\":[1,1,1,1,1,1,1,1,0,0,0,1,2,1,1,1,5,1,1,1,2,1,5,3,2,2,2,0,1,0,0,3,2,0,2,2,0,3,1,2,2,3,2,1,2,0,2,0,1,0,3,1,0,2,1,2,2,2,1,2,1,2,1,2,2,2,2,1,2,1,2,1,2,1,1,1,2,1,2,0,2,1,0,2,1,1,2,2,2,4,2,2,1,2,1,1,0,1,1],\"quality\":[5,5,5,1,5,3,5,4,5,5,5,3,5,5,1,5,5,4,5,2,5,5,5,4,5,5,1,5,5,1,4,5],\"rators\":[\"T6iBEE2jp7f7iEF2P\",\"Yp7uvStL97cC9fKkY\",\"RoGGD5cpHb4ftdLDv\",\"eYfPWvZwnJQkHbSTK\",\"iS5BrkGLzJyPK7nKt\",\"srJ34BaybkQh3qRkM\",\"QRv96jmNaYsWkxQEG\",\"7dQYiDeTcMztbGyso\",\"AFfw7cGg83uYk2Miy\",\"Jqk2uJZZxEv5wZFze\",\"yjtdwc2AC4jA2RWtn\",\"J5T8gZqiZXFuFDTQ7\",\"buX4mCQhtXCfBjeno\",\"gb9rvGus2Jv7bjZSs\",\"p8qqFdJ3FSk5x9z3G\",\"gXTAie79kiw28tx5u\",\"oBcs8GLX2ZFLXQy8y\",\"rfyEkETeoS96QNH4e\",\"qQQ4hCQpzitmHSkjS\",\"8PwfYqoDQFThzNtvf\",\"DPi9QGLctq2y76KuE\",\"s5M5RvgqR9BhB9JoC\",\"GGdmhAvxXhqhhibJN\",\"8BFSTCnoe2QggN64c\",\"cAP3n5NY64uoMwzRR\",\"pPpmP7xeJzGgK362R\",\"rMzi7px67B8fixSgB\",\"2QGRoQn2dRq3scu7k\",\"KBxTPknCRmB2b5y3i\",\"cR3ibTMxLyEdDFCHY\",\"sHjfbGQGLHE6JR6qu\",\"JS3hNM3XXkxPdg3yk\",\"zwruFCmuHkwJTpYqg\",\"hPX9tRBh5LnXsjHfu\",\"Ds7L5bksw2QRHjrKL\",\"wjc4iejpErBhxWwHo\",\"HF28xZKSLM9wEuqNg\",\"zd9FLSzsGz3evKafy\",\"FEYpu9RWysAgW3XnP\",\"Cuy7McJ5y8BkXRRk9\",\"kXEfD7xxEyWd7oxxL\",\"sKfrD9gjCDHuqLzSk\",\"p7js9trz2zk2RorCR\",\"CTKmXtrqDYqJBnuy8\",\"LQxof8pGabGuWP7Gn\",\"QyupaPyAvAZqc96Ea\",\"BrTDhPJcACL2bsrpJ\",\"8JyqsSbN2FJXPr3cw\",\"5HCu9Ydd86QgHDRNP\",\"gJYuGdkXEWWmGRLzu\",\"YmMgWhzhHhQLmGGgH\",\"3cF6NXq3ZEwdkgSjb\",\"iojEnnY9FsMfYzp6f\",\"eMuCpJ2spXWkJjWNz\",\"XD5nmvKQchKezPXhy\",\"AQSqD9oNv2uPfxZCR\",\"BJp2WkwLWGHHB5oQW\",\"CHvzhtXnv8HTbPQ56\",\"dJzNF59j2p8jWZxiQ\",\"kzo7DLSnF4o6trPkY\",\"tAF9Gf6PiGogbZuWs\",\"66a9xX73nmTEuKs9k\",\"2PufnQcsHsfymufX3\",\"iYXdNw7tKcgA3QwBX\",\"NzbRqGWspQnWMoDrF\",\"vjWzDJa6NQnuwA3s5\",\"wwMcJQRvf3X59Jyev\",\"CKHKhvJcq9jNMqrmd\",\"Cc2Cgj4MWXZxsTooC\",\"jL4y5fTJAMBjhZmko\",\"QTJvghkPpGKnKvZ5R\",\"Lkcku4D8wh449piQh\",\"bL9hGcDttQKxodf2W\",\"zvvqfWovdJDMq2Hpk\",\"LnDPWbMmHnwdy7zgJ\",\"yod5YhKtPqw2GfG9B\",\"5XiuAqicKD4hBdu63\",\"PC3pLs36zNzpRDSuE\",\"DEDniTrstQYGounXT\",\"RnbbSXz8X5fyf3Tz4\",\"J3upzLHuEwXH7Z2hx\",\"fznzd3qnvtbFkkizz\",\"mvJBakQ35CWAnbbEZ\",\"mDWNyaaQ9hvPCRzSd\",\"XujK3rHd3JcM9TLJy\",\"9Ly8afdtofp8DXzrt\",\"WQubx7DAkG6WZE8FA\",\"fSQSHjW3e72MrWxbD\",\"AasGs8AeX9Lcb9xJn\",\"R6YxHWAiLgKwy5YvC\",\"XHShZ3WMPgGEA2vkR\",\"rrSC943cCKNG48sH4\",\"aEm3Wvj2rFYRL8Lrb\",\"HqmxnQJM66Y57twhn\",\"qD2LrwaDrSdiybLKY\",\"nc7bRhkxgKyqusYe3\",\"qzXAMXsHZGT8o5hTA\",\"waHvhqyyDQNavYmBJ\",\"BdnE4RS5puoxo92mA\",\"pduNK68oazqQTtbLp\",\"hR7GMiqGap4CzEWSy\",\"4RY3zj9C2t8GGefhi\",\"bCfgaxkGhEt3K5psm\",\"4TmgHkn5vqyHK3sYC\",\"YA7SDhpgEtsqynvNL\",\"jkbavR2ATFJcpmo8M\",\"9bQyb6rW7xfE4vgrR\",\"d9LBRxvADNBB5QJMB\",\"AMpQSjKsRqhCDyS2j\",\"dzS6WBTMHyFEag6Fp\",\"rCrbqMiaGPgHYTNxu\",\"rhS8qXRjZcpDXkwnE\",\"sBoNkD5c6zGSZNbqL\",\"yAouD3PxzED8a4gap\",\"B4y8aoyXJtskYPFEL\",\"Qyfyyw6oC4EHAndzo\",\"M9rN2QTcyevxCuFKi\",\"7vyub5zTHNfMfQWoW\",\"qB6KSTYC6H2TQEQY6\",\"mxX4rH5ELYkdZ2Mbw\",\"gpGXTvjS2HrY9Skq5\",\"nFbmNzMQ38TncmfQX\",\"Wi4H6ayKsNDWWQCG5\",\"ruzwBPphPDRgLXdnP\",\"vCeeMuYDbz3MB4vsk\",\"rDgKHd6ZSSpboiAj7\"]},\"flags\":2},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"8vNdvDF3N6K8MrNvo\",\"language\":\"cpp\"},{\"_id\":\"7CWbYfRji9yhna9tf\",\"language\":\"javascript\"},{\"_id\":\"ziNZ86xZWcoPgSaRh\",\"language\":\"php\"},{\"_id\":\"5NJnNKCvC3ApnHxCC\",\"language\":\"python3\"},{\"_id\":\"LajL6zHQiJX9NLwJu\",\"language\":\"ruby\"}]}}"]