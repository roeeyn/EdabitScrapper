a["{\"msg\":\"result\",\"id\":\"1119\",\"result\":{\"_id\":\"n3zH5NvzPXb2qd5N5\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"def how_mega_is_it(n):\\n\\t\",\"difficulty\":1.5851063829787233,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"rwqBpj3H94bcLfCqA\",\"instructions\":\"Given an number, return a string which contains varying amounts of the word `'MEGA'` depending on the given number's order of magnitude.\\n\\n- If the number is less than 100, return `\\\"not a mega milestone\\\"`.\\n- Otherwise, start with the string `\\\"MEGA milestone\\\"`.\\n- For every order of magnitude over 100 that the number is, add the word `\\\"MEGA\\\"` to the *start* of the string.\\n\\nSee the examples below for further clarification!\\n\\n### Examples\\n```\\nhow_mega_is_it(54) ➞ \\\"not a mega milestone\\\"\\n\\nhow_mega_is_it(143) ➞ \\\"MEGA milestone\\\"\\n\\nhow_mega_is_it(1000) ➞ \\\"MEGA MEGA milestone\\\"\\n\\nhow_mega_is_it(9999.9) ➞ \\\"MEGA MEGA milestone\\\"\\n\\nhow_mega_is_it(10000) ➞ \\\"MEGA MEGA MEGA milestone\\\"\\n```\\n\\n### Notes\\n- Large negative numbers can also be considered as MEGA, so use the absolute values.\\n- You can expect decimal numbers as well as whole numbers.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(how_mega_is_it(54), \\\"not a mega milestone\\\")\\nTest.assert_equals(how_mega_is_it(143), \\\"MEGA milestone\\\")\\nTest.assert_equals(how_mega_is_it(1000), \\\"MEGA MEGA milestone\\\")\\nTest.assert_equals(how_mega_is_it(9999.9), \\\"MEGA MEGA milestone\\\")\\nTest.assert_equals(how_mega_is_it(-9999.9), \\\"MEGA MEGA milestone\\\")\\nTest.assert_equals(how_mega_is_it(10000), \\\"MEGA MEGA MEGA milestone\\\")\\nTest.assert_equals(how_mega_is_it(710005), \\\"MEGA MEGA MEGA MEGA milestone\\\")\\nTest.assert_equals(how_mega_is_it(0), \\\"not a mega milestone\\\")\\nTest.assert_equals(how_mega_is_it(387482), \\\"MEGA MEGA MEGA MEGA milestone\\\")\\nTest.assert_equals(how_mega_is_it(20850088393226388232424), \\\"MEGA MEGA MEGA MEGA MEGA MEGA MEGA MEGA MEGA MEGA MEGA MEGA MEGA MEGA MEGA MEGA MEGA MEGA MEGA MEGA MEGA milestone\\\")\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,2,1,2,2,4,1,2,2,2,1,1,2,2,1,3,1,1,2,2,2,0,1,1,2,2,2,0,2,1,2,2,1,2,2,2,2,2,1,2,2,1,2,0,2,2,2,1,0,1,2,2,1,2,2,2,2,3,1,2,1,2,2,2,0,3,0,0,2,5,2,2,1,0,0,2,2,3,2,2,0,1,2,0,2,2,3,2,1,1],\"rators\":[\"tAF9Gf6PiGogbZuWs\",\"gb9rvGus2Jv7bjZSs\",\"AasGs8AeX9Lcb9xJn\",\"5AHe67SapnPQeESpv\",\"DEDniTrstQYGounXT\",\"ikkjHDqBHu6fT3vGL\",\"9pzFiFK3ANLjQfnr2\",\"nFbmNzMQ38TncmfQX\",\"8PwfYqoDQFThzNtvf\",\"HF28xZKSLM9wEuqNg\",\"aEm3Wvj2rFYRL8Lrb\",\"Nb6LYPoQP6KJZt8mz\",\"R4SjTgDnpigJYDLyL\",\"8JyqsSbN2FJXPr3cw\",\"gJYuGdkXEWWmGRLzu\",\"cR3ibTMxLyEdDFCHY\",\"Yp7uvStL97cC9fKkY\",\"hnyhBFWwNCz9mDfSi\",\"rgvAJFwfCeYoYnFTK\",\"Nua6T3dBurBy3Qfg9\",\"2QGRoQn2dRq3scu7k\",\"s5M5RvgqR9BhB9JoC\",\"yr822PZmmiDDenxpB\",\"2ptN2mhjFwFcHyPZd\",\"a777e8chPvJkY3tKa\",\"7txFzDQ43vJ7qCY88\",\"aRqQ42J5zqCmBNd8w\",\"4yNLEwL2rsx4EE5Nt\",\"MKT7khMBGXzA22ykf\",\"DrkR35NqnP9NDLbq6\",\"KdNDysEsy2TW5QRJ2\",\"9bQyb6rW7xfE4vgrR\",\"H4abACFDH5t8CnnyH\",\"4rwxLqLs2mNZNg8NB\",\"qTQGbqpJsx3SRcHZq\",\"n2BRY9X8899dcG8Bw\",\"ZrKCkX7xxGGZzauFW\",\"9CoqdidjM9KbeKnHY\",\"jNvegJWCk5HCtEMbK\",\"NG8PWBSjsM8mMhQEq\",\"syRNbbPdLCGXbH2Gy\",\"iojEnnY9FsMfYzp6f\",\"Ecg4m7srYGgZsb4Ck\",\"Pe8vWpDHRuH9nSGKW\",\"FEYpu9RWysAgW3XnP\",\"ypGdjKLkswPZXo89K\",\"yjtdwc2AC4jA2RWtn\",\"HqmxnQJM66Y57twhn\",\"dzS6WBTMHyFEag6Fp\",\"Wv2vJnEj8ywNmARoF\",\"XrqNzJ2FRG8HnGiR6\",\"NNE5HNRXAkmhrWgyQ\",\"ta5CrWnBCRusD2WMo\",\"i5iePG5GqhJJ8HEoB\",\"oBcs8GLX2ZFLXQy8y\",\"BBk8ZRmMsTzpKCaux\",\"w2HhxvSLmDhaGCAjE\",\"xvFBZNj5aCJi3rZdk\",\"mG8HqKiAQFTdRZthG\",\"tpxMgkGSHwBjS95Ta\",\"qD2LrwaDrSdiybLKY\",\"KLmLKaJPfsYxp42p2\",\"mxX4rH5ELYkdZ2Mbw\",\"cZccqzRQ9GgjQF6Az\",\"QRv96jmNaYsWkxQEG\",\"DPi9QGLctq2y76KuE\",\"J3upzLHuEwXH7Z2hx\",\"spqXrjG3ZFa2j5uTR\",\"dYPkStFnLvAMsHSzZ\",\"iS5BrkGLzJyPK7nKt\",\"cAP3n5NY64uoMwzRR\",\"5XiuAqicKD4hBdu63\",\"RGMbFMZXJr7DhcAJy\",\"zd9FLSzsGz3evKafy\",\"rfyEkETeoS96QNH4e\",\"qZQxPQ2kaNKAMesHT\",\"d8qtzoLB264iP8tdY\",\"buX4mCQhtXCfBjeno\",\"5HCu9Ydd86QgHDRNP\",\"5S9nX4rKsnCcnv4Cz\",\"Jqk2uJZZxEv5wZFze\",\"GGdmhAvxXhqhhibJN\",\"eYfPWvZwnJQkHbSTK\",\"Ds7L5bksw2QRHjrKL\",\"J5T8gZqiZXFuFDTQ7\",\"Dq24MSpogRmq6L4hX\",\"FtKhGgQhfkJwG8dDu\",\"qAby4AWXmTNeusvg3\",\"o4ixjQGSaYqA2JoM4\",\"66a9xX73nmTEuKs9k\",\"eMuCpJ2spXWkJjWNz\",\"CHvzhtXnv8HTbPQ56\",\"yod5YhKtPqw2GfG9B\",\"PC3pLs36zNzpRDSuE\",\"M6fxKEh6am7YajPiT\",\"9Ly8afdtofp8DXzrt\",\"srJ34BaybkQh3qRkM\",\"mvJBakQ35CWAnbbEZ\",\"8BFSTCnoe2QggN64c\",\"qzXAMXsHZGT8o5hTA\",\"sHjfbGQGLHE6JR6qu\",\"ey3CASd6Je5LEJzfB\",\"T6iBEE2jp7f7iEF2P\",\"BrTDhPJcACL2bsrpJ\",\"2PufnQcsHsfymufX3\",\"ag8tcfPvJZWpRnwet\",\"4TmgHkn5vqyHK3sYC\",\"3nied3n8KG8RSNixH\",\"Wi4H6ayKsNDWWQCG5\"],\"total\":120,\"quality\":[5,5,5,3,5,2,4,5,5,5,5,5,5,5,5,5,4,5,5,5]},\"flags\":0},\"summary\":\"Given an number, return a string which contains varying amounts of the word 'MEGA' depending on the given number's order of magnitude.\\n\\nIf the number is less than 100, return \\\"not a mega milestone\\\".\\nOtherwise, start with the string \\\"MEGA milestone\\\".\\nFor every order of magnitude over 100 that the number is, add the word \\\"MEGA\\\" to the start of the string.\\n\\nSee t\",\"tags\":[\"strings\",\"numbers\",\"formatting\"],\"timestamp\":{\"$date\":1591472557761},\"title\":\"Mega Milestones\",\"quality\":4.65,\"family\":[{\"_id\":\"qRMvxck4QDrjzSWrD\",\"language\":\"javascript\"},{\"_id\":\"n3zH5NvzPXb2qd5N5\",\"language\":\"python3\"},{\"_id\":\"CrvD6JqgfhPwvs2gJ\",\"language\":\"ruby\"}]}}"]