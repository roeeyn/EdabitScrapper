a["{\"msg\":\"result\",\"id\":\"2062\",\"result\":{\"_id\":\"kfwTnnJjo3SKG2pYx\",\"author\":\"Gabberson\",\"authorId\":\"5rX3qPFdvRQ9G7xZQ\",\"code\":\"def replace_nums(string):\\n\\t\",\"difficulty\":2.883720930232558,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"RS6SECru8PhMG4ALD\",\"instructions\":\"Replace the numbers in a string with their binary form.\\n\\n### Examples\\n```\\nreplace_nums(\\\"I have 2 sheep.\\\") ➞ \\\"I have 10 sheep.\\\"\\n\\nreplace_nums(\\\"My father was born in 1974.10.25.\\\") ➞ \\\"My father was born in 11110110110.1010.11001.\\\"\\n\\nreplace_nums(\\\"10hell76o4 boi\\\") ➞ \\\"1010hell1001100o100 boi\\\"\\n```\\n\\n### Notes\\n- There are possibly two or more numbers in a single word (I do not recommend splitting the text at spaces, it surely won't help).\\n- Anything separates two numbers, even spaces (\\\"2 2\\\" --> \\\"10 10\\\").\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(replace_nums(\\\"I have 2 sheep.\\\"),\\\"I have 10 sheep.\\\")\\nTest.assert_equals(replace_nums(\\\"I have 2 sheep, and 21 chickens.\\\"),\\\"I have 10 sheep, and 10101 chickens.\\\")\\nTest.assert_equals(replace_nums(\\\"100 is my lucky number.\\\"),\\\"1100100 is my lucky number.\\\")\\nTest.assert_equals(replace_nums(\\\"My father was born in 1974.10.25.\\\"),\\\"My father was born in 11110110110.1010.11001.\\\")\\nTest.assert_equals(replace_nums(\\\"This sentence is10 35filled with ran20dom numbers on7 purpo31se.\\\"),\\\"This sentence is1010 100011filled with ran10100dom numbers on111 purpo11111se.\\\")\\nTest.assert_equals(replace_nums(\\\"10hell76o4 boi\\\"),\\\"1010hell1001100o100 boi\\\")\",\"language\":\"python3\",\"quality\":4.59375,\"stats\":{\"completed\":{\"ratings\":[3,3,3,3,3,3,3,5,2,4,4,5,5,4,5,1,2,3,3,3,3,0,1,4,3,4,3,2,0,5,3,3,4,2,5,2,3,3,5,1,5,2,5,3,0,2,1,2,4,2,5,2,5,2,2,4,4,2,5,3,3,4,5,3,4,0,2,5,4,5,1,2,2,0,4,1,1,2,3,1,4,3,0,2,3,1],\"quality\":[5,5,5,5,5,3,4,5,5,5,5,4,5,5,4,5,5,5,5,4,5,3,5,4,5,4,3,5,5,5,5,4],\"rators\":[\"5rX3qPFdvRQ9G7xZQ\",\"s5M5RvgqR9BhB9JoC\",\"8PwfYqoDQFThzNtvf\",\"8JyqsSbN2FJXPr3cw\",\"tAF9Gf6PiGogbZuWs\",\"HF28xZKSLM9wEuqNg\",\"822C6ihm2tAoYzuku\",\"QRv96jmNaYsWkxQEG\",\"buX4mCQhtXCfBjeno\",\"iS5BrkGLzJyPK7nKt\",\"yv7c4H2jimSKHEjtG\",\"SGhPxX5bHGL8zZqtt\",\"58M252WF7SPRinfBx\",\"mDWNyaaQ9hvPCRzSd\",\"fSQSHjW3e72MrWxbD\",\"PXAcsKkssS2yLyDv2\",\"b3Dk2LqoEgripS3Y3\",\"8sNv5PTHa7XQ8bNqR\",\"2PufnQcsHsfymufX3\",\"eMuCpJ2spXWkJjWNz\",\"J23RcmzbdtBbPCTjT\",\"dJzNF59j2p8jWZxiQ\",\"R2ACuqZYjBXaL23Qh\",\"SbGLSZ5piLATC8bop\",\"8TpGSiWJQndaHABZ2\",\"TbgmCM5emcQRGiEGv\",\"Cc2Cgj4MWXZxsTooC\",\"BZ9aDwsT223J4ZG74\",\"cjBLpm8m8Ajw3GsJo\",\"yyo6YLQN2of6fxp49\",\"scLA8EcDKhf3yTpku\",\"qnwKbwWNQFfGnkYBq\",\"vDFmCJg5dArEbn6DE\",\"27jqdQJjg6GGa5iQb\",\"eRCTB3dBvKEnzwmu2\",\"bS7gaAfs2PHSwseuZ\",\"Mi7kzGo2FgEbKNNcX\",\"Wpn95NqWxncQrwNgz\",\"grzd6z6TGQHH23Gr4\",\"Y6w9WxXzRweSiy3Ls\",\"K6MfKMytoJJuSGewP\",\"zfrhof8pbZnQizdmi\",\"ofjnKBdF4ruaBLTSQ\",\"7durWc52MMCEymQtb\",\"GJmKcqu7xppQyBaTt\",\"QYh2kagDtGd3nYgiT\",\"faX7L4QHX3dLJSArq\",\"XNmN6ztj36a7eChbD\",\"o3QKm5PiPFXaeirdY\",\"WsCqifua4yHhKp6N9\",\"tahvg69SK9Rori9ZZ\",\"LmjHTJiAEQAHmZFLS\",\"DmjEwgadNrexJ3wPM\",\"e6uKstZRpkHCKZ2Zn\",\"hH22pRSo7wXcKPykr\",\"Ev2JdCyC7T3Wsoy8w\",\"hRAd998MG8Jzdpxj6\",\"sXyousNEPbHPufbNN\",\"J3upzLHuEwXH7Z2hx\",\"yjtdwc2AC4jA2RWtn\",\"j6hyqmYawxaqxhNc5\",\"MXjxGML2X75x64vJo\",\"ZWqMpD5mJTRrewAwH\",\"mKwq6SRD9AcSt6CMA\",\"4sHkH3t9CJYhbDwjM\",\"5XiuAqicKD4hBdu63\",\"iDJCbFz2DjHkjneCJ\",\"hcAeJ5mhA7KTA6wkd\",\"RErqK2yM94wYyD2hk\",\"wwMcJQRvf3X59Jyev\",\"mvTTQsHSvgtkZ928J\",\"N6pvkCLg2nopjEW67\",\"G2BTXcFd4XgcokDd2\",\"sLfFTH7gcFuYa4oW6\",\"D3Pr2EFee3652zsyR\",\"HqpbA6C6zkAmDsaEm\",\"tNwn9fDi38RLz3PQd\",\"kDnyAfo56YxmJN7MH\",\"nnZmLznkNSZcZeEim\",\"kXEfD7xxEyWd7oxxL\",\"gJYuGdkXEWWmGRLzu\",\"gEKCi7uvAzdQhz3NL\",\"io94xYfgXscSmidfw\",\"W5d8SJGpWNwvgCztM\",\"6zj3YWWaeCAoxwYSZ\",\"vkNC5wKndyFK8rQDK\",\"F8CP3NDk2GCR7MoD3\",\"owtzvEJR4ynYrBd3P\",\"gb9rvGus2Jv7bjZSs\",\"AasGs8AeX9Lcb9xJn\",\"bJaPCBx63YxdJAuTS\",\"GGdmhAvxXhqhhibJN\",\"bLbc2JDzWHhhuPoZv\",\"nrA8Pacm3A6GqGzq4\",\"xBQC5uQdx6WndJ3iM\",\"by7wQG5WD7zu9qyhK\",\"bobf7mZwn7iv6uhwi\",\"Yp7uvStL97cC9fKkY\",\"StNu7DPyTgEStZsMY\",\"gQuXcCeBxPPanLRGE\",\"BarPGTCn7n4zd8xqv\",\"8BFSTCnoe2QggN64c\",\"yr822PZmmiDDenxpB\",\"bCFecqKyXTCnGgPSc\",\"JKb5rhL6DKcCAypF9\",\"GTKsdeEihE636Le9i\",\"hR7GMiqGap4CzEWSy\",\"aFYzioHvZPvPaunsg\",\"DPi9QGLctq2y76KuE\",\"T6iBEE2jp7f7iEF2P\",\"gXTAie79kiw28tx5u\",\"9i5HgF4JxH8xGnJ8o\",\"aEm3Wvj2rFYRL8Lrb\"],\"total\":118},\"flags\":0},\"summary\":\"Replace the numbers in a string with their binary form.\\n\\nExamples\\nreplace_nums(\\\"I have 2 sheep.\\\") ➞ \\\"I have 10 sheep.\\\"\\n\\nreplace_nums(\\\"My father was born in 1974.10.25.\\\") ➞ \\\"My father was born in 11110110110.1010.11001.\\\"\\n\\nreplace_nums(\\\"10hell76o4 boi\\\") ➞ \\\"1010hell1001100o100 boi\\\"\\n\\nNotes\\nThere are possibly two or more numbers in a single word (I do not recommend\",\"tags\":[\"strings\",\"algorithms\",\"loops\",\"regex\"],\"timestamp\":{\"$date\":1612180536451},\"title\":\"Translate from Human to Programmer\",\"family\":[{\"_id\":\"Hzcmq8vwyEACo7JAq\",\"language\":\"cpp\"},{\"_id\":\"8PDZekcFbMj36od9q\",\"language\":\"javascript\"},{\"_id\":\"tcvf7hbNoKzuj6SRv\",\"language\":\"php\"},{\"_id\":\"kfwTnnJjo3SKG2pYx\",\"language\":\"python3\"},{\"_id\":\"2t8GDCD88RYBFrWzC\",\"language\":\"ruby\"}]}}"]