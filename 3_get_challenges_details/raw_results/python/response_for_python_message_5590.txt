a["{\"msg\":\"result\",\"id\":\"1508\",\"result\":{\"_id\":\"APuNqTanobCNtaHSe\",\"author\":\"AniXDownLoe\",\"authorId\":\"incG8tH2dwThHg35f\",\"code\":\"def to_display(hexIn):\\n\\t\",\"difficulty\":2.073170731707317,\"familyId\":\"PYWCDwncx24Qe9Wcu\",\"instructions\":\"Create a function that takes a single Hexadecimal number as an argument and returns the equivalent six-digit binary number to light the display. Consider the six-digit binary number as an incoming input from a serial port. The segment display is a common cathode segment display that means you need to give a  logical 1 to light up each segment.\\n\\n![Alternative Text](https://edabit-challenges.s3.amazonaws.com/7-seg-displaying-h-l-s.gif)\\n\\n### Examples\\n```\\nto_display(0x1) ➞ 0x06\\n# [dp, g, f, e, d, c, b, a] = [0, 0, 0, 0, 0, 1, 1, 0]\\n\\nto_display(0x8) ➞ 0x7F\\n# [dp, g, f, e, d, c, b, a] = [0, 1, 1, 1, 1, 1, 1, 1]\\n\\nto_display(0x0) ➞ 0x3F\\n# [dp, g, f, e, d, c, b, a] = [0, 0, 1, 1, 1, 1, 1, 1]\\n```\\n\\n### Notes\\n- Bit order is as follows MSB **\\\\[dp, g, f, e, d, c, b, a\\\\]** LSB.\\n- This is something that comes up in FPGA work a lot, where you have to make some kind of conversion between numerical values and bits controlling hardware. These conversions often have no simple algorithm and require hard coding.\\n- If you do hard code this challenge you can try to determine the correct values by yourself but in industry if you can just look up a reference, you do. In this case the code tests have all the required values.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(to_display(0x0), 0x3F) # 0\\nTest.assert_equals(to_display(0x1), 0x06) # 1 right side\\nTest.assert_equals(to_display(0x2), 0x5B) # 2\\nTest.assert_equals(to_display(0x3), 0x4F) # 3\\nTest.assert_equals(to_display(0x4), 0x66) # 4\\nTest.assert_equals(to_display(0x5), 0x6D) # 5\\nTest.assert_equals(to_display(0x6), 0x7D) # 6 top hook\\nTest.assert_equals(to_display(0x7), 0x07) # 7 no middle slash\\nTest.assert_equals(to_display(0x8), 0x7F) # 8\\nTest.assert_equals(to_display(0x9), 0x6F) # 9 bottom hook\\nTest.assert_equals(to_display(0xA), 0x77) # A Upper case\\nTest.assert_equals(to_display(0xB), 0x7C) # b lower case\\nTest.assert_equals(to_display(0xC), 0x39) # C Upper case\\nTest.assert_equals(to_display(0xD), 0x5E) # d lower case\\nTest.assert_equals(to_display(0xE), 0x79) # E Upper case\\nTest.assert_equals(to_display(0xF), 0x71) # F Upper case\",\"language\":\"python3\",\"quality\":5,\"summary\":\"Create a function that takes a single Hexadecimal number as an argument and returns the equivalent six-digit binary number to light the display. Consider the six-digit binary number as an incoming input from a serial port. The segment display is a common cathode segment display that means you need to give a  logical 1 to light up each segment.\\n\\nAlternative Tex\",\"tags\":[\"functional_programming\",\"loops\"],\"timestamp\":{\"$date\":1602094413459},\"title\":\"Seven Segment Display\",\"stats\":{\"completed\":{\"total\":38,\"ratings\":[2,2,2,2,2,1,2,2,3,3,1,0,1,2,4,2,1,3,3,2,3,1,2,3,3,4,3,0,5,2,3,2,0,0,0,3,2,2,3,3,1],\"quality\":[5],\"rators\":[\"incG8tH2dwThHg35f\",\"aEm3Wvj2rFYRL8Lrb\",\"8PwfYqoDQFThzNtvf\",\"mNYiFFnf5MdGsBDrt\",\"qD2LrwaDrSdiybLKY\",\"yjtdwc2AC4jA2RWtn\",\"gb9rvGus2Jv7bjZSs\",\"xn7uGNKeAwPEkP9oA\",\"dYPkStFnLvAMsHSzZ\",\"gXTAie79kiw28tx5u\",\"2QziknsznNeMPRh3g\",\"gJYuGdkXEWWmGRLzu\",\"fznzd3qnvtbFkkizz\",\"5ubkq4o2RHFurvjJ9\",\"BrTDhPJcACL2bsrpJ\",\"oBcs8GLX2ZFLXQy8y\",\"cR3ibTMxLyEdDFCHY\",\"4fhjJBvLBWh6QeSih\",\"Yp7uvStL97cC9fKkY\",\"5hQnRWiKkhgKJXNMP\",\"J3upzLHuEwXH7Z2hx\",\"8JyqsSbN2FJXPr3cw\",\"Jqk2uJZZxEv5wZFze\",\"s5M5RvgqR9BhB9JoC\",\"iojEnnY9FsMfYzp6f\",\"wqdX4wXbZGgJ9Fyb7\",\"AasGs8AeX9Lcb9xJn\",\"GJmKcqu7xppQyBaTt\",\"GGdmhAvxXhqhhibJN\",\"T6iBEE2jp7f7iEF2P\",\"gKnWjDjwrJh7MK2df\",\"tAF9Gf6PiGogbZuWs\",\"2PufnQcsHsfymufX3\",\"yod5YhKtPqw2GfG9B\",\"7XjpFhwzNaeFiQctW\",\"Ds7L5bksw2QRHjrKL\",\"8sNv5PTHa7XQ8bNqR\"]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"QZkBWXSpsxQi6wLa5\",\"language\":\"cpp\"},{\"_id\":\"5s6d2BfJw2r8W4SqZ\",\"language\":\"javascript\"},{\"_id\":\"APuNqTanobCNtaHSe\",\"language\":\"python3\"},{\"_id\":\"jX2Hmp4mugSHB92rP\",\"language\":\"ruby\"}]}}"]