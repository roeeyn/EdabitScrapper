a["{\"msg\":\"result\",\"id\":\"551\",\"result\":{\"_id\":\"i6hY9JSjQK4jcaB6i\",\"author\":\"Sam O’nella\",\"authorId\":\"mNYiFFnf5MdGsBDrt\",\"code\":\"def color_invert(rgb):\\n\\t\",\"difficulty\":1.078544061302682,\"quality\":4.673306772908367,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"RBiPnMGELK8iuye52\",\"instructions\":\"Create a function that inverts the `rgb` values of a given tuple.\\n\\n### Examples\\n```\\ncolor_invert((255, 255, 255)) ➞ (0, 0, 0)\\n# (255, 255, 255) is the color white.\\n# The opposite is (0, 0, 0), which is black.\\n\\ncolor_invert((0, 0, 0)) ➞ (255, 255, 255)\\n\\ncolor_invert((165, 170, 221)) ➞ (90, 85, 34)\\n```\\n\\n### Notes\\n- Must return a tuple.\\n- 255 is the max value of a single color channel.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(color_invert((165, 170, 119)), (90, 85, 136))\\nTest.assert_equals(color_invert((165, 170, 136)), (90, 85, 119))\\nTest.assert_equals(color_invert((165, 170, 153)), (90, 85, 102))\\nTest.assert_equals(color_invert((165, 170, 170)), (90, 85, 85))\\nTest.assert_equals(color_invert((165, 170, 187)), (90, 85, 68))\\nTest.assert_equals(color_invert((165, 170, 204)), (90, 85, 51))\\nTest.assert_equals(color_invert((165, 170, 221)), (90, 85, 34))\\nTest.assert_equals(color_invert((165, 170, 238)), (90, 85, 17))\\nTest.assert_equals(color_invert((165, 180, 0)), (90, 75, 255))\\nTest.assert_equals(color_invert((165, 180, 17)), (90, 75, 238))\\nTest.assert_equals(color_invert((165, 180, 34)), (90, 75, 221))\\nTest.assert_equals(color_invert((165, 180, 51)), (90, 75, 204))\\nTest.assert_equals(color_invert((165, 180, 68)), (90, 75, 187))\\nTest.assert_equals(color_invert((165, 180, 85)), (90, 75, 170))\\nTest.assert_equals(color_invert((165, 180, 102)), (90, 75, 153))\\nTest.assert_equals(color_invert((0, 0, 0)), (255, 255, 255))\\nTest.assert_equals(color_invert((0, 0, 17)), (255, 255, 238))\\nTest.assert_equals(color_invert((0, 0, 34)), (255, 255, 221))\\nTest.assert_equals(color_invert((0, 0, 51)), (255, 255, 204))\\nTest.assert_equals(color_invert((0, 0, 68)), (255, 255, 187))\\nTest.assert_equals(color_invert((240, 250, 153)), (15, 5, 102))\\nTest.assert_equals(color_invert((240, 250, 170)), (15, 5, 85))\\nTest.assert_equals(color_invert((240, 250, 187)), (15, 5, 68))\\nTest.assert_equals(color_invert((240, 250, 204)), (15, 5, 51))\\nTest.assert_equals(color_invert((240, 250, 221)), (15, 5, 34))\\nTest.assert_equals(color_invert((240, 250, 238)), (15, 5, 17))\\nTest.assert_equals(color_invert((255, 255, 255)), (0, 0, 0))\\nTest.assert_equals(color_invert((240, 180, 136)), (15, 75, 119))\\nTest.assert_equals(color_invert((240, 180, 153)), (15, 75, 102))\\nTest.assert_equals(color_invert((240, 180, 170)), (15, 75, 85))\\nTest.assert_equals(color_invert((240, 180, 187)), (15, 75, 68))\\nTest.assert_equals(color_invert((240, 180, 204)), (15, 75, 51))\\nTest.assert_equals(color_invert((240, 180, 221)), (15, 75, 34))\\nTest.assert_equals(color_invert((240, 180, 238)), (15, 75, 17))\\nTest.assert_equals(color_invert((240, 190, 0)), (15, 65, 255))\\nTest.assert_equals(color_invert((240, 190, 17)), (15, 65, 238))\\nTest.assert_equals(color_invert((240, 190, 34)), (15, 65, 221))\\nTest.assert_equals(color_invert((240, 190, 51)), (15, 65, 204))\\nTest.assert_equals(color_invert((240, 190, 68)), (15, 65, 187))\\nTest.assert_equals(color_invert((240, 190, 85)), (15, 65, 170))\\nTest.assert_equals(color_invert((240, 190, 102)), (15, 65, 153))\\nTest.assert_equals(color_invert((240, 190, 119)), (15, 65, 136))\\nTest.assert_equals(color_invert((240, 190, 136)), (15, 65, 119))\\nTest.assert_equals(color_invert((240, 190, 153)), (15, 65, 102))\\nTest.assert_equals(color_invert((240, 190, 170)), (15, 65, 85))\\nTest.assert_equals(color_invert((240, 190, 187)), (15, 65, 68))\\nTest.assert_equals(color_invert((240, 190, 204)), (15, 65, 51))\\nTest.assert_equals(color_invert((240, 190, 221)), (15, 65, 34))\\nTest.assert_equals(color_invert((240, 190, 238)), (15, 65, 17))\\nTest.assert_equals(color_invert((240, 200, 0)), (15, 55, 255))\\nTest.assert_equals(color_invert((240, 200, 17)), (15, 55, 238))\\nTest.assert_equals(color_invert((240, 200, 34)), (15, 55, 221))\\nTest.assert_equals(color_invert((240, 200, 51)), (15, 55, 204))\\nTest.assert_equals(color_invert((240, 200, 68)), (15, 55, 187))\\nTest.assert_equals(color_invert((240, 200, 85)), (15, 55, 170))\\nTest.assert_equals(color_invert((240, 200, 102)), (15, 55, 153))\\nTest.assert_equals(color_invert((240, 200, 119)), (15, 55, 136))\\nTest.assert_equals(color_invert((240, 200, 136)), (15, 55, 119))\\nTest.assert_equals(color_invert((240, 200, 153)), (15, 55, 102))\\nTest.assert_equals(color_invert((240, 200, 170)), (15, 55, 85))\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,2,1,1,0,1,0,1,2,1,1,2,0,1,0,2,0,0,2,2,0,2,0,0,1,1,1,1,1,0,1,2,1,2,2,0,3,0,0,2,0,1,1,0,1,0,2,0,2,1,2,1,1,3,0,0,1,0,1,1,0,2,2,1,1,1,2,0,1,1,1,2,1,3,1,0,0,1,1,1,1,0,1,1,1,1,1,1,1,2,1,2,3,1,0,1,1,1,1,1,1,1,0,1,0,3,1,0,1,0,2,1,2,0,1,1,2,1,0,0,1,2,2,1,2,1,2,1,1,1,0,1,2,1,2,0,1,1,1,2,0,2,2,2,1,1,0,2,0,1,1,1,0,1,2,1,1,1,1,3,1,0,3,1,1,0,0,1,1,1,1,1,1,0,1,0,1,2,2,2,0,1,1,1,2,2,1,1,1,2,0,2,1,1,2,1,0,0,2,0,2,2,0,2,2,0,2,0,0,1,2,2,1,1,1,1,5,0,2,0,1,2,1,1,1,1,1,0,0,1,0,2,2,1,0,1,1,0,0,0,1,1,0,0,2,2,1,2,1,1,1,1,0,0,1,0,2,1,1,1,1,0,0,2,1,1,1,1,2,1,1,2,2,1,1,1,1,1,2,1,0,1,0,1,1,1,2,0,1,1,1,1,1,0,2,1,1,0,2,1,1,1,1,1,1,2,3,0,2,1,1,1,2,1,1,2,2,1,3,1,2,1,2,1,1,1,0,1,0,2,3,2,1,0,1,1,3,1,1,2,0,2,0,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,2,2,1,2,1,2,1,1,0,1,1,1,1,1,2,0,1,1,1,1,0,1,1,0,2,0,1,1,0,0,1,1,0,1,2,1,2,0,1,0,1,1,1,1,0,2,1,1,1,2,1,0,1,0,2,1,0,2,0,1,1,1,1,0,0,2,1,1,3,2,2,0,1,1,0,1,2,1,1,0,2,1,1,0,0,1,4,2,1,4,1,1,1,1,2,2,1,1,1,3,1,0,2,1,2,0,1,2,0,1,2,2,0,1,1,1,1,1,1,2,2,1,0,1,1,2,2,0,0,1,1,2,1,1,0,2,1,3,1,1,0,1,1,1,2,0,1,0,1,1,1,1,1,2,1,2,1],\"quality\":[5,4,5,4,5,5,3,5,5,5,5,5,5,5,5,5,5,4,4,2,5,3,5,5,5,4,5,5,1,5,5,5,5,4,5,5,5,5,5,4,5,5,5,5,5,5,5,4,5,5,5,5,5,3,5,5,5,5,5,5,2,5,5,4,5,5,5,5,5,4,5,5,5,5,5,5,5,4,5,5,5,4,3,5,4,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,2,5,3,5,5,5,5,5,4,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,4,5,5,5,5,5,5,3,3,1,4,5,5,5,5,3,5,5,5,4,5,4,5,5,5,5,5,5,5,5,5,5,3,5,5,5,5,5,5,5,2,5,4,3,5,4,5,4,5,5,5,4,4,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,1,5,5,5,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,5,5,4],\"rators\":[\"8PwfYqoDQFThzNtvf\",\"mNYiFFnf5MdGsBDrt\",\"tAF9Gf6PiGogbZuWs\",\"585XRBCotKx6wh96Q\",\"gJYuGdkXEWWmGRLzu\",\"qD2LrwaDrSdiybLKY\",\"2QGRoQn2dRq3scu7k\",\"QRv96jmNaYsWkxQEG\",\"GGprTwrkjuccmrQRg\",\"H4abACFDH5t8CnnyH\",\"gb9rvGus2Jv7bjZSs\",\"7K2GEb5TZRtSpyyGS\",\"gSFJPsMXnqAog3Q9f\",\"xdgy7nWSKCekXnaJM\",\"Kh3Pc2ZRusurLaMyP\",\"DEDniTrstQYGounXT\",\"wRttWTM59y8m5mx7x\",\"PnzR8TWfcT5QHrek8\",\"JtCp4TnHdN3TFSGzg\",\"ESpJ75JDNeAm8y5iF\",\"d8qtzoLB264iP8tdY\",\"SPYSWseH56TkTzKGf\",\"DfMcEs6XsfGtTpQ26\",\"ZsQXyGuFrk2q6S98n\",\"zJCuP2xE45GHkWzqG\",\"8KT5Ac2NL6ESam6wq\",\"yFDL8HndbQKRbFkPk\",\"5HCu9Ydd86QgHDRNP\",\"NzbRqGWspQnWMoDrF\",\"pJj86xc32Bs7Frxvi\",\"aEm3Wvj2rFYRL8Lrb\",\"zd9FLSzsGz3evKafy\",\"FEYpu9RWysAgW3XnP\",\"2QziknsznNeMPRh3g\",\"XbxHXmh5ZmRN2gw3K\",\"PXAcsKkssS2yLyDv2\",\"dj5AyG5fWP8FdsSmZ\",\"E5cu6oJFNFDXqae9q\",\"M8dQuMrEpP8Hc3tHN\",\"RGMbFMZXJr7DhcAJy\",\"MKT7khMBGXzA22ykf\",\"J3upzLHuEwXH7Z2hx\",\"yjtdwc2AC4jA2RWtn\",\"8WpvgSbQciTQWdd8T\",\"4Kv8CNDndbmufNLGq\",\"rrSC943cCKNG48sH4\",\"gXTAie79kiw28tx5u\",\"DPi9QGLctq2y76KuE\",\"YcCLwitFMAEJSnxAW\",\"HF28xZKSLM9wEuqNg\",\"8JyqsSbN2FJXPr3cw\",\"CyzskHGsC6WSmYrLu\",\"2Y45wqmp9aHezrhpT\",\"oBcs8GLX2ZFLXQy8y\",\"N2wnZXkhDH86mgjQ8\",\"4fjSgcqhQQZM2ZFRP\",\"o4ixjQGSaYqA2JoM4\",\"Yp7uvStL97cC9fKkY\",\"aKzYNPqBqb3J3ZgyD\",\"cAP3n5NY64uoMwzRR\",\"GcR9CA587pfQuWHyB\",\"oyKcm3zqdy8Ko5P5d\",\"jNvegJWCk5HCtEMbK\",\"DYDJTyGgKFnBRLm2r\",\"w2HhxvSLmDhaGCAjE\",\"eMuCpJ2spXWkJjWNz\",\"p8qqFdJ3FSk5x9z3G\",\"tpxMgkGSHwBjS95Ta\",\"YoWyETmZcgAii9jyW\",\"mxX4rH5ELYkdZ2Mbw\",\"xLe22eHviFtWojRem\",\"J5T8gZqiZXFuFDTQ7\",\"g9FyJ8yeT9ic97Qp2\",\"FvFhg2wELM3SCZDZQ\",\"Cuy7McJ5y8BkXRRk9\",\"9ivvGvJGvtQfigQaZ\",\"Lm6ChQCWBmaikmk5J\",\"iS5BrkGLzJyPK7nKt\",\"rfyEkETeoS96QNH4e\",\"58dW6GT2PhdEGAPqR\",\"zZDaXBxMzTCBhNkgL\",\"9FCeFzjPA4jrQ7oHW\",\"dky93oMkJsJjEJKk2\",\"3LiSLdtN58n46NEqg\",\"dBzwBtRjZqB98DJeB\",\"GGdmhAvxXhqhhibJN\",\"ga7aTTEThzsELuC2j\",\"ekQh3jzgGLsEMbKo3\",\"dYPkStFnLvAMsHSzZ\",\"9CoqdidjM9KbeKnHY\",\"yod5YhKtPqw2GfG9B\",\"sHjfbGQGLHE6JR6qu\",\"cR3ibTMxLyEdDFCHY\",\"RC8wXGidezWFvdwQS\",\"jXuHR9HtCpnc4BHJT\",\"HuNF3xTBzmatyGSTm\",\"kNrnnMxhFZztMTBAX\",\"YkWX8KxYQCcH7qqpC\",\"spqXrjG3ZFa2j5uTR\",\"Jqk2uJZZxEv5wZFze\",\"KJCDwGkoXh8qtbbKr\",\"5f6oSeq4r5WTXLdCQ\",\"DAhoDmrLmkoRsJhRx\",\"utdj2v4ruJdN644DR\",\"axdSNLZpiCDF8RS6n\",\"fKsHKQ9ZTyEgmcQmQ\",\"yTtSCvGPyYna6JuRC\",\"T2Xr8tDTevucQAQeE\",\"FuYTQcDNjct58rqPa\",\"PBn3fhAqsEqHEHq3E\",\"LWCzZ8mb8gwrRNGfq\",\"8BFSTCnoe2QggN64c\",\"3nied3n8KG8RSNixH\",\"CLypXaZksY99mpRCm\",\"4fhjJBvLBWh6QeSih\",\"kWobGYgZWJxN6ZddF\",\"pduNK68oazqQTtbLp\",\"sbJcFfQjQ59Wfg4Cd\",\"q6peoEWzrwZzogT5w\",\"YA7SDhpgEtsqynvNL\",\"BrTDhPJcACL2bsrpJ\",\"AaKWw8amcFYLrEpNz\",\"YRAzEBJoLvSaiPtYx\",\"uX3EL4Qha99wBkozM\",\"rxr3nwpDGDEkBJRgD\",\"brBkqpqkRarKALzgv\",\"fbagSSAGD2gAfNJZC\",\"sKfrD9gjCDHuqLzSk\",\"ygmKmjF4ja52BrNMR\",\"wjc4iejpErBhxWwHo\",\"oDN67zoApxcztnYdu\",\"Mj7YaEgxTHvgwLW4M\",\"utTuvGdmu2sBHWBhQ\",\"NtpgyRCYqLXH4uF9G\",\"Ds7L5bksw2QRHjrKL\",\"kdfaheoMWpCcNkueZ\",\"fohQ2ZLGAC8MSHZtf\",\"xSNdn3XovWh6c6Bjd\",\"YjPkyrF5D3ihxTjwk\",\"E9ttMPTkLkKG6nZrg\",\"vgT3ehH2o2KC94NsY\",\"4Ytzg5uu2quL2jmqt\",\"73tY2zGtkEFFKbAMS\",\"voJnkLK2bZuvPsRkN\",\"iryCjiSyq9o8e9agN\",\"rEecHXXCTwgG5wWNA\",\"C2AfMipCicfD58WJ9\",\"2EbDCCJJvCfKkbYia\",\"GqothajHR2vKfEHGZ\",\"4iGeoajtKD7rRRttr\",\"9vP9Sg4nyzQT4ED9C\",\"WdKdsgH9gXkKgCycx\",\"orFLgPDw9H5MDzmwo\",\"Fk9kLwoG4Brf4KsKf\",\"5zGMciq3fB4aeu9uj\",\"oF5kxLBxtZi7strcg\",\"nFbmNzMQ38TncmfQX\",\"pDvFWMCD9fQwoBPcu\",\"fTNQmMvTZhhiGBCMe\",\"s4YHxEDBTTq5EBMRs\",\"4ArGCifHnsz8p525A\",\"bLGqk6rTP3a5pfG7o\",\"RCzpsCinz5SQnBAta\",\"FBbYCCHWuD473tyvn\",\"QJb7dzpQHXrHrZmYh\",\"gg4hgFGgmvK9ZxENE\",\"BTvmicCMkB9FFtkWH\",\"bZ7H86jDGX8GGCZRK\",\"uarD7CFWjhSJc8c2L\",\"AybEiSwYHuZTQyxxC\",\"incG8tH2dwThHg35f\",\"cZccqzRQ9GgjQF6Az\",\"s5M5RvgqR9BhB9JoC\",\"5XiuAqicKD4hBdu63\",\"KEmTti9Tza8A2FLQW\",\"mHvoroWGDLYbJqQJa\",\"q5DtxHRAYci3LDKG4\",\"ZuuRwv4HkeT54MwA9\",\"qaPjAANdnxFnWfj5d\",\"uGuS9YRXW2nj4p6zf\",\"8wkQj36S6ZCH5u8d3\",\"8myATQ6dBJ4jKEpTw\",\"kQ86mSGBiBQQvXzQR\",\"gcd5AD4zbexiQvH79\",\"c2u7qfdaYxcyuydtu\",\"2nD3hNDExw2LNYq4F\",\"jWbd7SYDzLPjc9EDh\",\"aJrgeiwRkPCis7rmA\",\"j49s8dHmmiyPxZmWj\",\"u5u2YpHXiNgzDNJdX\",\"Lg4t6SEWgtYz4u7Cj\",\"yQbstGGkBN3gyCF3L\",\"Y4EroCASrhC5GFaY3\",\"JGzyrett2Xs6Ln76x\",\"XGBGxDNGLuxs4fjqH\",\"ScCZHcDBzx6LrFCyZ\",\"x6zei7xfrArtcjF5x\",\"Q8GSH8HaqYiRFXafi\",\"Jud2m4FTc4JDuzu9A\",\"rB2iXSkwkbA6ZNogS\",\"mL8iGuRPm9GbkXhLc\",\"h2dutB2E7G3nk44aT\",\"PWgzeK859suojbrRx\",\"Kw4NB7EraK29d7FuF\",\"XShyGekJgwF4NoXPw\",\"z3x34tyPy9LAtA7ZA\",\"nfXGHENb5md7m355s\",\"5hQnRWiKkhgKJXNMP\",\"RnY25enEBE8T9P5GS\",\"CTKmXtrqDYqJBnuy8\",\"DpnYcMphntjsQ96qg\",\"3cF6NXq3ZEwdkgSjb\",\"KdYQN3KAT2DyTzT2a\",\"R4SjTgDnpigJYDLyL\",\"DqNQn9Jsxcu5HijKE\",\"hERDiXzMt3bagzfKp\",\"RSTdK2S8CecymSS6h\",\"ov3aMrAbjhfD7uuMK\",\"M8u5Pf7PK85S8cd9b\",\"pveK5gtGcm8k4wScM\",\"dNErCjyFobE5sn4Zh\",\"kAkLAF9T5McSxXJCT\",\"974cv448kw6Wu2JF6\",\"axKxTApLgC8YovNNe\",\"D2B5zXAoub33DEC86\",\"ygDJ7HEzRoJZyPEF4\",\"5S9nX4rKsnCcnv4Cz\",\"gEqTEX2vrEzoYcFas\",\"2ptN2mhjFwFcHyPZd\",\"k5GPqwirkn4mGGXxd\",\"2bW8ZPE6Yzhr8gwJ8\",\"GdKtjPh8TcfmJuduv\",\"Gfjre5fz3AHYamm2e\",\"R8kxjkbFTizNXGEeN\",\"TSvrS9F32gAjLH6wk\",\"EfxwqhYdapX3dMQC2\",\"AHodQW2h6YM7p4vSw\",\"uH4HvaiESNCeYdSyZ\",\"cHQu4YYGymPFk36x2\",\"5LBciMhS2FrNZByM6\",\"no46qNkTbNeHepe64\",\"WgwMhf3FtH3SfGnC5\",\"YEMQNE333gAXhGE4c\",\"GbsnjyJxYDd5q4bGC\",\"oh6GpNa8zcDJqocZ4\",\"7G8iFjM3JAb8uyQhZ\",\"uo7MdTu2FWZhYE7nL\",\"AoXjLJrvTLWcfKK7Y\",\"DNACg4rcgZsPtYGZ8\",\"aiy37pdgqNinQpTFQ\",\"27pFuJpynEdft2Aag\",\"89S5cyYmgzd27NMb4\",\"3tduuXq4vbQW5HuW4\",\"MZG4itcvixf4w4Ls2\",\"dMA6gSHS4ETXvPCtx\",\"wjt5iyzrjjAxzMbdK\",\"3su89kGdNsYmgxjHH\",\"YymvXHKwMtjpkn8fq\",\"CkcqajsaNu4nso9oY\",\"ZbPjGaMFHHBJeaZYC\",\"v5vkFqE7EnubSZ5Y5\",\"t4SbjvzCjCbeyhjcj\",\"gzF5pkKZaA3pa83QN\",\"MJCypveAX88aKKoee\",\"ywDSobPgL4ZqsuXyM\",\"CWtfa2cwMHpFgdeaQ\",\"Dq24MSpogRmq6L4hX\",\"nmaLZSYWAydijqnbs\",\"YFpFWTNGWmzTpk2Hw\",\"e2PoiWaQYfamGtvx6\",\"PnyreXdmXPyHu7mrc\",\"avXAJzvgwGpivzvkD\",\"vpT3dGjqEppYsLWhD\",\"2jN9Nq9KKm4g7ib7X\",\"ezZhNksgwuNTp6mMc\",\"8N99kojRhfZXWNAk6\",\"9Q3hk6gYokuBMNmAW\",\"oig8ig9SE9RZa8ttL\",\"tW7TaC7bjNajLGH5Y\",\"ambkvthmJjRB82EQZ\",\"Sj8sqxWzGjaus9CAe\",\"LQxof8pGabGuWP7Gn\",\"ih9XYDHApsS6YBK93\",\"eEZ8zeWX8b3SWs84P\",\"buX4mCQhtXCfBjeno\",\"PTDFuxAzou7W6asWt\",\"wZ5BAzSENtS2jn3n4\",\"GT9wLv8Lipyp6YYTp\",\"FT2wG4tXsny9eoFw2\",\"amfj3y4oZMprJ96fg\",\"C7CGXzuQJuuQmTwPH\",\"AFfw7cGg83uYk2Miy\",\"tRFiPK7YqxBHX7Dbe\",\"9ezNkcqQLo5YSpcGu\",\"JS3hNM3XXkxPdg3yk\",\"vyXXRaCK8jXica5bf\",\"qoPKX4kCiT8mb59z2\",\"MyyfuAJrdaoBE2xGk\",\"roHTHRWkWPoCy9eLn\",\"hxt5oFMmwwhXk7Cp5\",\"nmMiWvyJKp6nZEpve\",\"xcCikBfKcBzYbnzhu\",\"G7WtmpZwRjMhCPssj\",\"LaYYSfLtno6a9qc4Q\",\"4E3cjSYJvbNqpFpSo\",\"WaNB9wn2s9S7gi5YH\",\"r97tvEYn5ezXvXPng\",\"ffjnHrx8Ym7A7pQWe\",\"97mMkvdDxbhkQXNPp\",\"vCxuabDxEv9YC3Szb\",\"A3fAQXGt9EQf7j2it\",\"Em6LPTYQ2iLxPRfB2\",\"ZoREYdtAsWeT87Ynv\",\"rp78xovPotpBHRXxR\",\"qTQGbqpJsx3SRcHZq\",\"vwoWuN6oLdXs7eC8p\",\"HqmxnQJM66Y57twhn\",\"a777e8chPvJkY3tKa\",\"5wCHxMQ5Km2bjqcGZ\",\"MXGuntvz3byrP6WJc\",\"eXMad2WaEe3dMK85F\",\"LCuvvWMwiGuqTwNRi\",\"5HTSi5wQNAdLm57LB\",\"CWnZYFNAzm5K8NiiC\",\"4snmjR2AeCbFCXBrq\",\"krbaPSStipDAC5R7t\",\"5rX3qPFdvRQ9G7xZQ\",\"obndbp2ziSwdsptgx\",\"GS3QPdjiv5xi58uRT\",\"WCPMYkrBKqH5WkGva\",\"Nve6jcmnMAdRsmEsy\",\"aaJWssCWfMa63XJng\",\"2HfNkb2SoqdyjKW3o\",\"p7js9trz2zk2RorCR\",\"pCMhfoZ5c6eBuCqbp\",\"StNu7DPyTgEStZsMY\",\"gf7u4MKcGDFiijzK9\",\"vJqinfp6DH8NxvdGm\",\"xXwKrsP4vNopj4Yw9\",\"xqmfNiHH5FegFQBht\",\"Yp4Jtxj7pHqZjheN7\",\"eYfPWvZwnJQkHbSTK\",\"xumt4h8jvh7o4xkhr\",\"rXgpamJ8aCrWqYEPv\",\"srJ34BaybkQh3qRkM\",\"5vnRSeHDAaMwSRQnL\",\"RyN2vSMS3skg85Ee5\",\"5JGnoBpw84hhmmuhf\",\"ZyrfhDTZHb8LymH5b\",\"di2hhADLx59Bj4ewM\",\"bjS5tQpyq3KxNW3PD\",\"vCeeMuYDbz3MB4vsk\",\"PYMCsk26X5SETLDMy\",\"pPpmP7xeJzGgK362R\",\"TKm2tReEtdweH9Qno\",\"ivpNJzPxhhNTqz9Ek\",\"wEmFRYs7YywLBuyzj\",\"D3XwKcLB47d7DAe2A\",\"q9FfWNiMDKRiaCJ5j\",\"WbtfZnx8DhN2vKxCP\",\"bX2fs5kWqTPE9Jy7b\",\"noZDgMMXkcPCLN8Ye\",\"xCHKjx39sbTq5qdkK\",\"7bWyEMKEuEseRgihX\",\"XgRXeb4YyZqmiMTLe\",\"6GkqgDB2NNH3unkNs\",\"kd3nHgYHQKeGXXnBQ\",\"R6wYt9FYn2DBdFBMn\",\"Tx3yx7bdp8bjJqx8L\",\"mXjgWvyuE6vmha7vr\",\"x82yMD5Kv8s6TCwuj\",\"Wp7GW6eGgFuDoyExT\",\"3rXpD7Mt93j6kJtt5\",\"PocCcjmHJDGiB6riL\",\"poiKbjDNKCGrzWeW6\",\"XYYdmLKb5yDJXdGSb\",\"dMQvSKbfbnyArD9Ga\",\"7TcRCKM5WY3PcMcvQ\",\"4oJg4noyTi6b8J8A4\",\"W8DheA4ouYyiAubpd\",\"XgsDyHD2X4npp8SJj\",\"X48AaHbLRM6jq6Lz5\",\"Nb6LYPoQP6KJZt8mz\",\"s4GS5EX9M9D9seNsn\",\"EAbwXY89MiXwDu23f\",\"27bpEw2iYQaAgxEL9\",\"JgjKfXLt4yvaC48dQ\",\"nt4JASxaEi9ZqdnEM\",\"oPhxBGAZ5mRycFpPg\",\"DkeEd2uhXypnPDnNT\",\"XAx9xKxRCxBmWC2fT\",\"tjDh259vrCGNQKS8c\",\"F7wta4nHmabMr9dfd\",\"wypdvuJQZB2TFyb2g\",\"6xTu4r8NMczBFvmtz\",\"WYMP9FjYaHnXjBytr\",\"JMAmMMBMrQqRy72Cc\",\"yhrxaebCb2NHGEpAi\",\"cRPJ9xqgSsALSwWuS\",\"Q7Yxda7dqKeYPs2Db\",\"7ecBn5p3sFGLJu7td\",\"m7KZ5donpz5F6AR3z\",\"nC4sPB69yYuTSks9T\",\"hkJGLuib5md8vZ9HD\",\"iNe4R7oj7uhdiMePL\",\"w3QDkmjZj2dAFDsjq\",\"XD5nmvKQchKezPXhy\",\"Y2Y5CRMMPmdsKCSwL\",\"ZeTRCF5ufwFqAsHKt\",\"qAby4AWXmTNeusvg3\",\"ghMkPtdFCpM6w8nax\",\"q6QsMYNMpPNtmyTeW\",\"7dQYiDeTcMztbGyso\",\"cbhmt4aRWPyJnnzNT\",\"Hu4SkoNyWCP4vmsZE\",\"jBo3xAopr37GFzY8g\",\"T6iBEE2jp7f7iEF2P\",\"BJp2WkwLWGHHB5oQW\",\"zC8WrPp5BC6c2exrW\",\"g2mqHYvQmr78mET8i\",\"K6MfKMytoJJuSGewP\",\"yd4iYdazHmakJaBoR\",\"CHvzhtXnv8HTbPQ56\",\"8mGWypY7S2RcGcAPR\",\"E8DcBnATah6GrjzYt\",\"WuQwqemgYszbR2f6k\",\"d5JiqFEFfH5xcKzpu\",\"BvCBDTZYr7XfQ3uSD\",\"9hXw9jfB8HkHrhcdm\",\"peCvTbjQBgdWo53Wv\",\"gjiu8kLnHYxe4HoBN\",\"xsDyJstYoBZRS8pJH\",\"8EJ4j2fcfjTJ7Zrzu\",\"74Rd26wTYrjJqZDiY\",\"iojEnnY9FsMfYzp6f\",\"iP7wNofhZXTkJ9ryG\",\"NrRa4TS6uZR9xuXRt\",\"CKHKhvJcq9jNMqrmd\",\"PC3pLs36zNzpRDSuE\",\"yyo6YLQN2of6fxp49\",\"HBuJYgW2eRBJp9FoG\",\"c2q7mY39z5JPEMCaM\",\"DfHHpvnubuFmeNky9\",\"66a9xX73nmTEuKs9k\",\"X4rzfxGgxx6CS7Bpz\",\"erEunWkRveQoPZyTC\",\"tdfY4iBvD7oh2ufnN\",\"ghW3Nvg42xRxFzjPi\",\"LuEZrhwX6Ash4uP9c\",\"n8CH93SQWBhRZ6k5R\",\"oMKKtKDHntiFhTGTH\",\"jkys684AAfPRxrYaD\",\"XrqNzJ2FRG8HnGiR6\",\"7tbtTx6uxePv6eQwP\",\"HScG5LPE9vGdtonTq\",\"AJexRBN9cYQmqvYu6\",\"bvmTE46bfcM4ogj34\",\"5kazQPq8ZdDsx6kjf\",\"M2gFMJkocQSY6bsFR\",\"9Ly8afdtofp8DXzrt\",\"mvJBakQ35CWAnbbEZ\",\"j7ebNFtte6fSkMWjj\",\"aKcsjpMYaok4q3XYN\",\"JwkwCHcXthnGDsdFr\",\"H9KZi2cjt4FwH7qog\",\"mDWNyaaQ9hvPCRzSd\",\"C9LKGu2g5hSijvDzA\",\"BMEud9eeJnPDC8A2k\",\"4TmgHkn5vqyHK3sYC\",\"AasGs8AeX9Lcb9xJn\",\"T6Rm8mREPMZSftzrC\",\"M6fxKEh6am7YajPiT\",\"jkbavR2ATFJcpmo8M\",\"nkioPNzxxJazSP3Rr\",\"JiSpvq6C7azQEmENc\",\"FxbTzThBiTnRzfirA\",\"jNE5AHcJQWXz7efuP\",\"qB6KSTYC6H2TQEQY6\",\"AQSqD9oNv2uPfxZCR\",\"9pzFiFK3ANLjQfnr2\",\"eW9R2SCoYnY8HBAdL\",\"kjvgTyRFyKHv44DcH\",\"LixhXu9NRb22fQpKz\",\"wwz3ixWSv8rFDHBXd\",\"xJGxcfg33Aj2NMgFi\",\"2MjzJ7yxh3eT3xbng\",\"ey3CASd6Je5LEJzfB\",\"NGvCPuMiAP3xrRLfB\",\"ZXWDtCrM9ev3439oi\",\"jCjCvyhqhpebkJn34\",\"kJMAAWPWEG6qFouEh\",\"cJknwPqn7f4tKsuFZ\",\"pQwhNKiCne4gEZgcn\",\"Cg3LKtEAJpsrdWroG\",\"vGke8GPvD5cJodPRc\",\"ybxrR2WwDHAx8dFiH\",\"fbyQH246PaDcXumC4\",\"LD7N9C39ZQqPTR9Wy\",\"TCvpT4EPb8qNssNB7\",\"7GLF8rm7qAPnEdi2N\",\"ntS9dGqGDjCummBwd\",\"RnCue6232fMBH22h4\",\"XwMvmnHe62xQDid5L\",\"WKN8uzAbs2maAoEtY\",\"j22fPdGZvaryte8j5\",\"T3c9YgwymSYupkADy\",\"Afnps7TJQuS9sipMb\",\"BHosRbfezkN8cQFva\",\"fX8cDn2yK5tGp4CXh\",\"AhpaYciXxTt4w9WNB\",\"2Qk2mFu9HBFzrB24i\",\"bQCmBaCd8SBH2wSNt\",\"NojQykDfP7WjHckg4\",\"882eYwuER3aC8EXdc\",\"XBW8jQNoLeKpXWLYq\",\"ahk5LCjsrT6JwD8wz\",\"6ry4KfhZcoMRC78xZ\",\"Yj9FGXx5xQ4CnTrtW\",\"uPy4EJMtEe3bu9ugQ\",\"5jC6kt3SXoABZBwsY\",\"scJKmEDEci7hdYiHM\",\"eCms9novBsNYFhoTb\",\"q6oFjAqcmHf5MPWFy\",\"dpmRApZswjGg6gbKr\",\"tdinF6MRzC6AdNX8g\",\"rpa7MXFzcXNWwbNiM\",\"DTDokqAqTpqCsqPMe\",\"bur3yQ8s34zqKGEro\",\"s9XXugcbtb2Zuhfws\",\"CLmJduqJHX83dM4Pd\",\"7wEd3pvkQCeixZ4mn\",\"XTA9AjuRHgQusRqEK\",\"o2FKEP6gWCqYXnJG3\",\"fx4AdukRwdqssWa8E\",\"kFfKBEZvJB6ZPWyvy\",\"b6PEkvr66YeCamroN\",\"G7W4rd4cwttccv2Jv\",\"sfj3i3eEAfZa3f9kg\",\"s66ybqHn4MG953AsN\",\"9vywTxugT2ApYWDGG\",\"WDpJcoqDvmkLbtrZL\",\"acobNBkckrEAqarbu\",\"p65j6ikvNwF3tQPWT\",\"jarL2vytPexHniBL5\",\"jkbhuBFGAXbupPtCr\",\"HHy7t5GLLgEruLNhE\",\"3DwXtTo6w2efgiGLR\",\"RRADSyqynrSG4RxuM\",\"SBEHSswuFHsFabLZx\",\"w5ydSfmqWuK9Xuvjf\",\"ddjxJtnBAYxXoSfsj\",\"nPHQGe7t2mdnXby5b\",\"FiaTpm7ehfDv43wSG\",\"a4XX8Tm72Xo2S94by\",\"fieMrC3FJ76Dv4FgZ\",\"TER23TZSCRPNoiW5e\",\"BEGMzytd2Fnmi9mbC\",\"vAqAGjgxF5rbiqcac\",\"uDnP7HuyyuCRj7MAy\",\"jtApBvsGdwwCofFPy\",\"JkYupbPmRSPBcsgvc\",\"cFcdy7FubJZNZF4Gx\",\"BqrDCQqM82jTYMMrd\",\"Fv52fWyFeWiAYNcGu\",\"Lbz75zfTJxGhSPNwC\",\"So3fJdCs4DtPPeAmd\",\"BWksACEjKp8SWaq9k\",\"3DhzcTWpQfSHFhipa\",\"aZyBG7nxfFJuucWBR\",\"H6fpsPkq9SWKEseaw\",\"PH32cNxBjrK4a28sn\",\"snv64hxBttJ7xfPAu\",\"39hN2Esy9BsLipQK6\",\"4pDgvSWEdaq5dukL6\",\"MMRLwT9rqMNLaLTGe\",\"2NDSt8HyP33cFRHsu\",\"ji5f27FPz4wRRF6Ls\",\"gKnWjDjwrJh7MK2df\",\"xyEGNW66qXKtjDZs9\",\"ySp5Jp6mQEoDutjDq\",\"jgym6yeSmYyX9gZD6\",\"gZKaDYt87srSzKoZk\",\"C29DaFq4yy7pLY8oC\",\"NH43Mn9agBWjcj9q3\",\"a2Kmh6ekWqQQooHiQ\",\"eHcgvkTGsH7ZziqBo\",\"yXGiiSAR5nBHnH3yr\",\"W7Jv9JtDm5TEsec4z\",\"rCrbqMiaGPgHYTNxu\",\"d9LBRxvADNBB5QJMB\",\"9LrF5o2TK2iE8BZJh\",\"jRNj5RZyC6AHmoPGa\",\"FMyZPN6odEFtfuimF\",\"dzS6WBTMHyFEag6Fp\",\"4Lwjr34ypKNQNQCar\",\"B4y8aoyXJtskYPFEL\",\"5Dd7XwALvvMMwS4Fb\",\"gbGzZz5Yq5hT357v8\",\"ahWFxnaxt9bXSA4f3\",\"Qyfyyw6oC4EHAndzo\",\"mw9464S5dnenqzvpm\",\"kwR2mPo4qTLwRaspJ\",\"d65widuHoZ9KfiAZr\",\"fGvJRtjbJFJJZLCnW\",\"5QN8R22z43SrwoHDz\",\"EJJvRA25Rp72jferp\",\"b7yQWr6eJFxYTmt3j\",\"6LbPw9yW6HHDfn8B8\",\"qNszsXx28cTxvGSNj\",\"Gvt79fQwWGZFySfvf\",\"DrvgyrryMHdyRcFvS\",\"oxt9m9sPAJYk8oP5Z\",\"rQb5TvmZSqu93tRZM\",\"539z79PdEA96pmrZ5\",\"cdXmwjupCXSvJTSNo\",\"yAouD3PxzED8a4gap\",\"wCAT2a63peB2vAwu5\",\"vAh63eGRwkuJtoP8v\",\"dFdnCgFoz9gvL4ehP\",\"suArq5BbSy7gD6xri\",\"RfbjShbg8jmhyNtJh\",\"EmG8uSoa5JfnsGA7T\",\"RYLiBvHZfZahTA3rm\",\"CdXigydGTBLgA577m\",\"pwWtbXEjzuvrhEGwt\",\"GktgG4zuF225EApih\",\"FRN2W8RYpJ6GPhgRy\",\"tR9grPBLncwacBTzr\",\"BFSAXBzoaEJ3Wshj8\",\"gpGXTvjS2HrY9Skq5\",\"QfSSkBGHMbmLfgsQK\",\"K42ijC8Jy8GHBnobP\",\"Si3HYCLMe8PM47rRt\",\"txLYNqTJXJ2o76C6k\",\"wErGB5MCycrFfniHo\",\"gEBwsDez5XT65wSha\",\"HzFkMJ9XC9X8DRbRZ\",\"J8hfwMFTM7Fjjjh2M\",\"bM2eBtpFQCv8632C9\",\"5m8qZed9bTBkCJrDW\",\"pDZ88nraPkHvG6JXQ\",\"BgZcBs3KWeYCRKChr\",\"mowHzYAip2JEmcjNy\",\"4To7THbHADdtXbewx\",\"JW9RQM2x8cstMzMhL\",\"Jt5hA9uAmMYtoDCPh\",\"wrL4iX2CCSqDCCty3\",\"purALu2k58s73YPFk\",\"HdWDg9sSZNLYDndYX\",\"kpy5vXwm7NXoSaTfF\",\"dLXvWxBcdEAb35S26\",\"DKPumTKcYQFm5QbuQ\",\"uq6FRkgQEPHqRLues\",\"Rk54WG323KeT6odSb\",\"bNENiqqEDxM5a5JBf\",\"a76ZXFeqrh6Cb3X96\",\"EfywR5ZH4FibGrMLE\",\"HibRxRsfTbGqCPZAG\",\"DhfJpC3Y72teNfiKE\",\"x2Cz7S8rCKJqCE3Xe\",\"vxZLHgz8p4Jr8qWkR\",\"RoGGD5cpHb4ftdLDv\",\"SQK7KDfHTApWsvC6m\",\"iWZMabbXsStDxKLrk\",\"B4E2fAR62uJ8h34cc\",\"e8bvfjGLzdBvGmxnr\",\"D9CrGZAtGDdz3icBy\",\"4EorpxR73RJhdBB9D\",\"T4udkChbST4yvHZcC\",\"PAAHWcbw6Z3E75NhP\",\"Lmz3zMw3uQwqooEWq\",\"SpNaWCFYTjC3QKGab\",\"5CsHudxuDESxmjTPW\",\"GgQqni8TkbqEBGcsy\",\"bc4CeLy4x9rNsa9f8\",\"LqgrScCxtHbHFfKzj\",\"oXPp4C7pSFmRdrXwg\",\"cBPugMs5DvMnAPqCm\",\"9EjGrCkyEtxiAdmeR\",\"nEJr26JfWz7zXbTk2\",\"DQJy8NFfnrcZRGT8Q\",\"T92QFcNg5796f73X7\",\"2bf96SEjJAT3z8RiQ\",\"hFhGQDH339hZLeLZ3\",\"Eit5obHxgqz8SoDZA\",\"MxSn9vkp8zLsvX4MB\",\"qXmnsHR23cJaWMNqR\",\"xvHPvfstKxusMgfFk\",\"TEinWhp4oAKfmhLhv\",\"PmRyaLmhAF4MMLBtM\",\"xZ9k98NvHTbEkTAfj\",\"ap9syd4CbYs9bengR\",\"m2iiZZHTpzHcEKJMn\",\"8DYRkGRTiMmWN8o4N\",\"QN4FPwhiak7Pf8kn6\",\"XbbyHvEKGwSQ66K6M\",\"5x6TP7H84ta3iMWmX\",\"pE4NbZsvX42ouuv9t\",\"5nbHH4eApn6So9h2n\",\"Mk5o3dTuovSjxn4d8\",\"8P4TeuXB3fq9yRWpu\",\"Lsd6qdSN4hCbFDHD5\",\"n6qxShCYoLEziDKSA\",\"ikkjHDqBHu6fT3vGL\",\"4XTBuRNTZhx7WowiZ\",\"2fxapKr8XGdNeaKi2\",\"fEjNcZJ3QKRica63B\",\"at9zTbafXTra4ju2f\",\"Npp9Sqz7A89xZ4ou2\",\"qTvtFgge4M3QaQtHm\",\"aEMi34dkGdWczt4CN\",\"QW63vkP9GL5Zmpou5\",\"9p9q9DaKPWxJHPWsL\",\"BPd3c7tJw4XLmPHxQ\",\"QE5dFnWXZpcPu95rZ\",\"oLXY9bnpKbbtNZMRf\",\"sMcFMPkMJC4Kh6ymj\",\"pAAGmL6CrPMrqZoeh\",\"6DDHmk7oqNtCsxkna\",\"EQN6GRnZTWfgkMfpH\",\"3bWdhy3xdP8N4pCkN\",\"JKbEBybAsiKrmcqof\",\"mAARx8JHyScLzDA5W\",\"t3wwRMtYdLYBwWR4J\",\"iKGahZkPSn565fam8\",\"cCGJgtoeTjxW55wrW\",\"qupKFuytxqQkev4vb\",\"rD3HoeBseMBEJ6AdJ\",\"AYfXoDaKumHcirtfD\",\"LsGFSLdBnYAdSLCZh\",\"XLeft5XHjNaxwd4Ry\",\"TXHaDJTp2MpF3scQP\",\"2TjFF635M3aZfRdRL\",\"syRNbbPdLCGXbH2Gy\",\"iDZ9SH3nSf2miwa29\",\"EE6qCDCRphjXXdE3n\",\"77YL9dWoYWBoAs3tX\",\"Ne8mK9DDHG8TRkoxG\",\"Wi4H6ayKsNDWWQCG5\",\"7DXJ3mvKMHHqBLt92\",\"es5Trcc8nzrs9WA22\",\"zbLiGtxtK3zuMtMz4\",\"R3ZjoGTC7b6FLxArn\",\"YyMFAt6ttq3ym4KPt\",\"YfHnTYr4sD69ZACS2\",\"DvzpcjeQsLCSZc9r9\",\"XiEy28huAs76gGXP6\",\"HAS4brrN3gXNMJkAv\",\"HFGmqXq5X8bcRmweo\",\"iBjwTeXx4KiWffy64\",\"rraTtctZqnjXu2L2x\",\"mdRQaGT98ycMt87S2\",\"WoKygnR2BoTuSG9y5\",\"wToL4iZib8ZXPFHpW\",\"7txFzDQ43vJ7qCY88\",\"4TZqNe9ECkH4LXNSW\",\"XhzKztoQYYQzZ2c7o\",\"PKu9i6fmR67WGCgad\",\"mgksqYFKT8qJDFy7P\",\"R5xbLkncJdEQM6crB\",\"QkYdTZDpWgJfPHm8r\",\"2ZAGC72mY3bxjq949\",\"3jP4vtygTLXFSebES\",\"AbCPMAbtmxbr8Zjyo\",\"Xd5NLyjN9kMcMBxXh\",\"HcZeM6rspdtQAb3k5\",\"n2RkNBJQnPMswEnYT\",\"E2hpke7mHxAWsw5t9\"],\"total\":796},\"flags\":1},\"summary\":\"Create a function that inverts the rgb values of a given tuple.\\n\\nExamples\\ncolor_invert((255, 255, 255)) ➞ (0, 0, 0)\\n(255, 255, 255) is the color white.\\nThe opposite is (0, 0, 0), which is black.\\n\\ncolor_invert((0, 0, 0)) ➞ (255, 255, 255)\\n\\ncolor_invert((165, 170, 221)) ➞ (90, 85, 34))\\n\\nNotes\\nMust return a tuple.\\n255 is the max value of a single color channel.\",\"tags\":[\"data_structures\",\"algebra\"],\"timestamp\":{\"$date\":1600537257430},\"title\":\"Invert Colors\",\"family\":[{\"_id\":\"v2Xk5fXkBrYq7dA83\",\"language\":\"cpp\"},{\"_id\":\"rhxxyrHreLDm6qJLu\",\"language\":\"java\"},{\"_id\":\"5oyDEx24RC8qJxDRk\",\"language\":\"javascript\"},{\"_id\":\"i6hY9JSjQK4jcaB6i\",\"language\":\"python3\"},{\"_id\":\"3EjgdMKAcMs6Jf23K\",\"language\":\"ruby\"}]}}"]