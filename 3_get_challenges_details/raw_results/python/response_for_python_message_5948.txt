a["{\"msg\":\"result\",\"id\":\"1686\",\"result\":{\"_id\":\"gXENPxHbrqLEurbWS\",\"archived\":false,\"author\":\"hhqrk\",\"authorId\":\"6fJpRpAgiWD5zX9qB\",\"code\":\"def factorize(n):\\n\\t\",\"difficulty\":2.154471544715447,\"familyId\":\"w9fL7AMLgBhqJW5r6\",\"instructions\":\"Create a function that returns the prime factorization of an integer as a sorted list of tuples. Include the multiplicity of each prime in the tuples:\\n\\n- \\\\[(prime\\\\_0, mult\\\\_0), ..., (prime\\\\_k, mult\\\\_k)]\\n- where prime\\\\_0 < prime\\\\_1 < ... < prime\\\\_k\\n\\n### Examples\\n```\\nfactorize(4) ➞ [(2, 2)]\\n\\nfactorize(10) ➞ [(2, 1), (5, 1)]\\n\\nfactorize(60) ➞ [(2, 2), (3, 1), (5, 1)]\\n```\\n\\n### Notes\\n- Don't worry about negatives or floats. All inputs will be positive integers.\\n- 1 is not a prime! Do not include it. You will not be given 1 as an input.\\n- All inputs will be less than 10,000.\",\"lab\":\"Test.assert_equals(factorize(   2), [(2, 1)])\\nTest.assert_equals(factorize(   4), [(2, 2)])\\nTest.assert_equals(factorize(  10), [(2, 1), (5, 1)])\\nTest.assert_equals(factorize(  11), [(11, 1)])\\nTest.assert_equals(factorize(  29), [(29, 1)])\\nTest.assert_equals(factorize(  60), [(2, 2), (3, 1), (5, 1)])\\nTest.assert_equals(factorize( 100), [(2, 2), (5, 2)])\\nTest.assert_equals(factorize( 151), [(151, 1)])\\nTest.assert_equals(factorize( 323), [(17, 1), (19, 1)])\\nTest.assert_equals(factorize( 997), [(997, 1)])\\nTest.assert_equals(factorize(3349), [(17, 1), (197, 1)])\\nTest.assert_equals(factorize(5040), [(2, 4), (3, 2), (5, 1), (7, 1)])\\nTest.assert_equals(factorize(6097), [(7, 1), (13, 1), (67, 1)])\\nTest.assert_equals(factorize(8192), [(2, 13)])\\nTest.assert_equals(factorize(9870), [(2, 1), (3, 1), (5, 1), (7, 1), (47, 1)])\\nTest.assert_equals(factorize(9973), [(9973, 1)])\\nTest.assert_equals(factorize(9999), [(3, 2), (11, 1), (101, 1)])\",\"language\":\"python3\",\"summary\":\"Create a function that returns the prime factorization of an integer as a sorted list of tuples. Include the multiplicity of each prime in the tuples:\\n\\n\\\\[(prime\\\\0, mult\\\\0), ..., (prime\\\\k, mult\\\\k)]\\nwhere prime\\\\0 < prime\\\\1 < ... < prime\\\\_k\\n\\nExamples\\nfactorize(4) ➞ [(2, 2)]\\n\\nfactorize(10) ➞ [(2, 1), (5, 1)]\\n\\nfactorize(60) ➞ [(2, 2), (3, 1), (5, 1)]\\n\\nNotes\\nDon't w\",\"tags\":[\"algorithms\",\"math\",\"numbers\"],\"timestamp\":{\"$date\":1494525802602},\"title\":\"Prime Factorization\",\"stats\":{\"completed\":{\"total\":129,\"ratings\":[2,2,2,2,2,1,2,3,1,1,2,3,1,2,0,0,3,1,4,1,2,1,1,2,2,1,2,1,2,2,2,3,3,3,1,2,3,2,1,2,3,2,2,3,1,3,2,2,2,1,2,2,4,2,3,2,3,2,2,4,3,2,2,4,4,3,3,2,2,3,0,3,3,3,3,3,1,2,2,3,0,2,2,2,2,2,2,1,2,3,3,3,3,3,1,2,4,3,3,3,3,0,1,3,3,3,3,2,1,4,0,2,2,5,0,3,3,1,0,2,3,3,1],\"rators\":[\"6fJpRpAgiWD5zX9qB\",\"hi7Hvtq2mJfkXEGF2\",\"v3LTSGvpkXAdu3r2Q\",\"C2qTM8BYacYnNCGp2\",\"MNNxtLjCPkedM7MFo\",\"yoY4RteRfaTMvJ4KR\",\"CWTZqhLrZswDzDTQb\",\"yh7uB3NycmvCowCSv\",\"JzcuZQNK6GD4B4pwB\",\"6kngJP2suW9LWJBTR\",\"meet8d6MWbRqZ6Pyo\",\"5JLH29PSSii5bsAhm\",\"fbNWxXTqZy2mXNbGJ\",\"xBqnMCkCDaDuqFia4\",\"pu7CuLPebkd5NEfKw\",\"Wg8kg48vmdpCaSHH6\",\"HK3RW4kr7acFSAyL4\",\"tuyDaJzFy78jxvhCY\",\"tzHQmfmDbNJgqbeLx\",\"iEMnJaXXfa6dzdQzb\",\"GRZzKCbeb4xKHFCrZ\",\"QjpzasKxy3xBakLzz\",\"m2iiZZHTpzHcEKJMn\",\"LfR9Bopm57BMNNnkp\",\"mgJoduE8pStdjNmPD\",\"pdcaC4fEtsubBz4Wo\",\"3aSufMRSzHQ3cuo9n\",\"jDoFYBX4iQiTXFEdf\",\"wPhd86JGzcCkkQdyy\",\"QyYmR6GqGSiw8KXYc\",\"HEeRh33SBQgtmjXkt\",\"z9xT3TpMJzjSn9Tfy\",\"gMpPzrMTMnBZJMhmR\",\"tAF9Gf6PiGogbZuWs\",\"YG776yzpLWoxa5GJs\",\"3hnNN45MzxXW7uPR8\",\"M8jrv2FfpMQp9Qzpx\",\"Qm7WibLuCP7hW3iXi\",\"T82JyZFPNz8maF8f8\",\"SK3kJggzuets9AFj6\",\"QgdwHjy4x6MCPwfh9\",\"uJ5A3zjLi9iN5eeXX\",\"PAjQoyYKAkYAXERhf\",\"KDfCknbFB67GDq3Yg\",\"n9PZCXcWTygjaDsXs\",\"hR7GMiqGap4CzEWSy\",\"wEF3ZhC5iTqFjgw85\",\"zgoEhAyhrjnsSLPGw\",\"6W2GSzrYjMD9ANBFY\",\"PRPv763woB2EqjWvZ\",\"mGmoXwXiopnnnqYdh\",\"Jqk2uJZZxEv5wZFze\",\"8JyqsSbN2FJXPr3cw\",\"HCYabH5mZ7ANumb5R\",\"Ttw7g7EH7xYKNdZH5\",\"yZvzB3qFb8pkHy4dg\",\"gb9rvGus2Jv7bjZSs\",\"T3ZAuoMrJjvZwN55B\",\"ab7BsQuhDo3QgE6bh\",\"SKabuq5XuhXBugKBa\",\"QaE2QnnBbzdiExxPH\",\"MXjxGML2X75x64vJo\",\"7g3vZaQXhLpxrajyg\",\"PFjMZGHNAPTkgd7tq\",\"ahWFxnaxt9bXSA4f3\",\"AF6LgdKhEdzwgRJom\",\"6u7yc9m6HuHGbHzph\",\"jYJ26SiLKBu5GRumq\",\"AYaEkTWLMmfzpwejr\",\"7G4BWvmKhTvXg8Mei\",\"cR3ibTMxLyEdDFCHY\",\"aCNWav8S8Try9RkC6\",\"gMJhLdyw3tH7L96X2\",\"2fxapKr8XGdNeaKi2\",\"Jg8ZSRXe3NoDMCqGu\",\"HqmxnQJM66Y57twhn\",\"otXtuQygbcYATMZoP\",\"u5u2YpHXiNgzDNJdX\",\"K96FwtfDDN5WM4Bb7\",\"8AipP2ZKTAhvzfQAr\",\"4fctAnxyFRB8stPRQ\",\"s5M5RvgqR9BhB9JoC\",\"C4QntmkYtB89GNtpd\",\"orFLgPDw9H5MDzmwo\",\"AasGs8AeX9Lcb9xJn\",\"4CFzv558qbGcpQwc4\",\"PytNZK9mNiRiZxPrm\",\"8PwfYqoDQFThzNtvf\",\"w3A7cBWyAfukk6xEQ\",\"mDWNyaaQ9hvPCRzSd\",\"aEm3Wvj2rFYRL8Lrb\",\"ZNnsMeNkdDhHjSrZb\",\"YRstQuthRkFeBiXug\",\"Yp7uvStL97cC9fKkY\",\"EjbDDFRECrzQDkzrX\",\"gJYuGdkXEWWmGRLzu\",\"a777e8chPvJkY3tKa\",\"Ecg4m7srYGgZsb4Ck\",\"HF28xZKSLM9wEuqNg\",\"n2BRY9X8899dcG8Bw\",\"iojEnnY9FsMfYzp6f\",\"DEDniTrstQYGounXT\",\"KZ2xddpM2f9JRaryB\",\"zZDaXBxMzTCBhNkgL\",\"yjtdwc2AC4jA2RWtn\",\"xn7uGNKeAwPEkP9oA\",\"DPi9QGLctq2y76KuE\",\"J3upzLHuEwXH7Z2hx\",\"gXTAie79kiw28tx5u\",\"sKfrD9gjCDHuqLzSk\",\"srJ34BaybkQh3qRkM\",\"cAP3n5NY64uoMwzRR\",\"oBcs8GLX2ZFLXQy8y\",\"FEYpu9RWysAgW3XnP\",\"QRv96jmNaYsWkxQEG\",\"PWgzeK859suojbrRx\",\"GGdmhAvxXhqhhibJN\",\"XHShZ3WMPgGEA2vkR\",\"MpfytGFYF77emJ3cT\",\"T6iBEE2jp7f7iEF2P\",\"gKnWjDjwrJh7MK2df\",\"yod5YhKtPqw2GfG9B\",\"rhS8qXRjZcpDXkwnE\",\"2PufnQcsHsfymufX3\",\"8sNv5PTHa7XQ8bNqR\"],\"quality\":[2,5,4,5,5,5]},\"complaints\":{\"total\":0,\"reasons\":[],\"skippers\":[\"6fJpRpAgiWD5zX9qB\"]},\"instructions\":{\"score\":-2.55,\"voters\":[\"yZGxMTTzZ6edL9yHG\"]},\"tests\":{\"score\":0,\"voters\":[]},\"flags\":0},\"editorId\":\"6fJpRpAgiWD5zX9qB\",\"isHidden\":false,\"quality\":4.333333333333333,\"family\":[{\"_id\":\"WkH9rwDnNtDLYAYLp\",\"language\":\"javascript\"},{\"_id\":\"gXENPxHbrqLEurbWS\",\"language\":\"python3\"},{\"_id\":\"hN3KTaywfGgNpTpot\",\"language\":\"ruby\"}]}}"]