a["{\"msg\":\"result\",\"id\":\"2407\",\"result\":{\"_id\":\"hM9eDtYLEX8GnuhFZ\",\"author\":\"yanni\",\"authorId\":\"aCNWav8S8Try9RkC6\",\"code\":\"def random(lst):\\n\\t\",\"difficulty\":4.071428571428571,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"4dDhuXhjXTNvHxky9\",\"instructions\":\"A simple random number generator or, as more properly called, a linear congruential generator can be demonstrated by the equation `x1 = (a*x0+1)%65535`. `a`, `x0`, and `x1` are non-negative integers less than `65535`.  The equation is seeded with `x0`.  The first number generated, `x1`, is then used as the seed for the next round and so on.  If we choose `a=7` and `x0=12345` the first 5 numbers generated are 20881, 15098, 40152, 18925, 1406.\\n\\nSince such generators are used in games of chance and online gambling, it would be to one's benefit if the next \\\"random\\\" number to be generated could be predicted. Devise a function that takes 2 random numbers that were sequentially generated by the above equation and returns the next number to be generated. The value of `a` will be different for all test cases and is not given. The initial seed, `x0=12345`, is the same for all test cases. If the answer cannot be determined, return `None`.\\n\\n### Examples\\n```\\nrandom([1, 1]) ➞ 1\\n# a=0\\n\\nrandom([12347, 12348]) ➞ 12349\\n# a=1\\n\\nrandom([5806, 9802]) ➞ 37768\\n# a=171\\n\\nrandom([48028, 25564]) ➞ 12565\\n# a=21\\n\\nrandom([36020, 26121]) ➞ None\\n# a=77\\n\\nrandom([39000, 24931]) ➞ None\\n# a=4\\n```\\n\\n### Notes\\n- I believe test cases with result `None` cannot be solved. If you can figure out a method to solve them please post a comment.\\n- All test cases were taken from the first 10 numbers generated.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(random([1, 1]), 1)\\nTest.assert_equals(random([12347, 12348]), 12349)\\nTest.assert_equals(random([36020, 26121]), None)\\nTest.assert_equals(random([28486, 2626]), 13246)\\nTest.assert_equals(random([54106, 25171]), 49891)\\nTest.assert_equals(random([31045, 17506]), None)\\nTest.assert_equals(random([5086, 31261]), 25996)\\nTest.assert_equals(random([45163, 8839]), 53035)\\nTest.assert_equals(random([2913, 27697]), None)\\nTest.assert_equals(random([5806, 9802]), 37768)\\nTest.assert_equals(random([1, 106]), 11131)\\nTest.assert_equals(random([15484, 63778]), 33205)\\nTest.assert_equals(random([39000, 24931]), None)\\nTest.assert_equals(random([48028, 25564]), 12565)\\nTest.assert_equals(random([53466, 48400]), None)\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[4,4,4,4,4,1,2,5,5,5,5,5,5,4],\"rators\":[\"aEm3Wvj2rFYRL8Lrb\",\"s5M5RvgqR9BhB9JoC\",\"aCNWav8S8Try9RkC6\",\"8PwfYqoDQFThzNtvf\",\"vTfyrr4pGddp8rbXc\",\"5dHucvf2qBYyKim7X\",\"iS5BrkGLzJyPK7nKt\",\"XNmN6ztj36a7eChbD\",\"yjtdwc2AC4jA2RWtn\"],\"total\":12,\"quality\":[]},\"flags\":0},\"summary\":\"A simple random number generator or, as more properly called, a linear congruential generator can be demonstrated by the equation x1 = (a*x0+1)%65535. a, x0, and x1 are non-negative integers less than 65535.  The equation is seeded with x0.  The first number generated, x1, is then used as the seed for the next round and so on.  If we choose a=7 and x0=12345 th\",\"tags\":[\"algorithms\",\"games\",\"math\"],\"timestamp\":{\"$date\":1589933530393},\"title\":\"Random Number Generator\",\"quality\":0,\"family\":[{\"_id\":\"hM9eDtYLEX8GnuhFZ\",\"language\":\"python3\"}]}}"]