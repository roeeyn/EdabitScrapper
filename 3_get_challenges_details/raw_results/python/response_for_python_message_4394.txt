a["{\"msg\":\"result\",\"id\":\"916\",\"result\":{\"_id\":\"ziaNsc7J4ySFY6rF6\",\"author\":\"Kavin Umasankar\",\"authorId\":\"td7qPZ7Lv4pEWT2Ya\",\"code\":\"def will_fit(holds, cargo):\\n\\t\",\"difficulty\":1.4566037735849056,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"LQ979oxts3Ji2owze\",\"instructions\":\"A ship has to transport cargo from one place to another, while picking up cargo along the way. Given the total amount of cargo and the types of cargo holds in the ship as lists, create a function that returns `True` if all the cargo can fit on the ship, and `False` if it can't.\\n\\n - \\\"S\\\" means 50 cargo space.\\n - \\\"M\\\" means 100 cargo space.\\n - \\\"L\\\" means 200 cargo space.\\n\\n### Examples\\n```\\nwill_fit([\\\"M\\\", \\\"L\\\", \\\"L\\\", \\\"M\\\"], [56, 62, 84, 90]) ➞ True\\n\\nwill_fit([\\\"S\\\", \\\"S\\\", \\\"S\\\", \\\"S\\\", \\\"L\\\"], [40, 50, 60, 70, 80, 90, 200]) ➞ False\\n\\nwill_fit([\\\"L\\\", \\\"L\\\", \\\"M\\\"], [56, 62, 84, 90]) ➞ True\\n```\\n\\n### Notes\\nCalculate the cargo as a whole, and not for each separate cargo hold (see example #2).\",\"lab\":\"Test.assert_equals(will_fit([\\\"M\\\", \\\"L\\\", \\\"L\\\", \\\"M\\\"], [56, 62, 84, 90]), True)\\nTest.assert_equals(will_fit([\\\"L\\\", \\\"L\\\", \\\"M\\\"], [56, 62, 84, 90]), True)\\nTest.assert_equals(will_fit([\\\"S\\\", \\\"S\\\", \\\"S\\\", \\\"S\\\", \\\"L\\\"], [40, 50, 60, 70 , 80, 90, 200]), False)\\nTest.assert_equals(will_fit([\\\"S\\\", \\\"L\\\"], [73 , 87, 95, 229]), False)\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[4,4,4,4,4,0,2,2,4,2,1,2,2,3,2,1,1,2,2,2,1,2,2,0,2,1,0,2,1,1,0,2,1,1,2,1,2,1,5,1,2,1,1,1,1,0,2,1,2,2,0,2,0,2,0,1,2,2,0,2,1,2,2,1,2,2,2,2,2,0,2,1,1,1,2,2,1,1,2,2,0,1,2,1,2,3,2,5,0,1,1,1,1,1,0,0,2,2,2,2,0,2,1,2,1,1,0,1,1,0,1,1,2,2,2,1,0,2,2,1,2,2,2,0,2,0,1,2,1,2,1,2,1,2,2,0,2,2,1,2,2,0,1,1,1,1,0,1,2,2,2,1,2,2,1,1,1,0,1,1,1,3,1,2,3,2,0,0,1,1,2,2,1,2,0,0,2,2,1,3,2,0,2,1,1,2,1,2,2,0,2,2,1,2,2,2,1,2,2,2,2,0,2,1,0,2,3,2,2,2,2,1,0,2,2,2,1,0,1,0,1,0,2,1,1,1,2,2,2,1,1,2,2,2,2,2,1,1,2,1,2,2,2,1,1,2,2,0,1,1,1,2,1,2,1,2,1,2,2,1,1,2,0,1,2],\"rators\":[\"td7qPZ7Lv4pEWT2Ya\",\"tAF9Gf6PiGogbZuWs\",\"EfgF4urqKM8qGeZfQ\",\"GgLd4eWBu79mdjtkP\",\"gb9rvGus2Jv7bjZSs\",\"Wpn95NqWxncQrwNgz\",\"AYaEkTWLMmfzpwejr\",\"nzx4uAPg3hCceyFPE\",\"3ifAHQzsMasfQySoL\",\"yZvzB3qFb8pkHy4dg\",\"QKYi6pYeaYFovNHX4\",\"pYHJ9THHsG7K6BhAh\",\"M2k5STtKaQx6tsgWe\",\"iN2ttxCwxMwfYxvMN\",\"35BCzitC9L54ceH4c\",\"X4khYcQLX5Q7h4iYm\",\"C9LKGu2g5hSijvDzA\",\"8JyqsSbN2FJXPr3cw\",\"jHrtWDGBhkbuWa7fG\",\"hsrNYf3WbexXJKhCq\",\"gMJhLdyw3tH7L96X2\",\"yrCNkFYQBEDE76eFS\",\"kQH5b8MXJunh84Czq\",\"cR3ibTMxLyEdDFCHY\",\"9DZaiAD2RHxo4FTRy\",\"T2vhHPhRR96hRizq8\",\"XKi8iZXBCHCaebSHh\",\"GR5P7gLKtxGyTAZTB\",\"QLcFxARNuZmaPThyg\",\"EKrSBrTXuhE3f4xsR\",\"nfXGHENb5md7m355s\",\"f4TyeghgnCDqnLA2e\",\"AoDqJL4skG7WKDsCo\",\"FgkYtHLxeD8pETJ8T\",\"N2wnZXkhDH86mgjQ8\",\"FmtFxXh4mX4NGWnAC\",\"kdtFNmyobfFz7ohiQ\",\"Ac7RPsqhhbdk8fY4W\",\"NRTW97oaiRB6WiEPc\",\"ccMaBukWCoRHYzcD5\",\"wRLG3h2S9mtJquBz5\",\"yAouD3PxzED8a4gap\",\"SKabuq5XuhXBugKBa\",\"Nj6FwgBtAXsaQwsM2\",\"KQNQFywtuLLdpBseS\",\"6kmq69yr7F5bW5ygQ\",\"HQxp7NcdvF92G7bYS\",\"Jg8ZSRXe3NoDMCqGu\",\"2fxapKr8XGdNeaKi2\",\"otXtuQygbcYATMZoP\",\"HqmxnQJM66Y57twhn\",\"jeuoearPPTcGPgXhf\",\"fAoLuqbGvHn4w2PHf\",\"v9KtC8YLbMWmXiW2H\",\"K96FwtfDDN5WM4Bb7\",\"du6Ajrr6kRtGGBc3z\",\"6gEETeSWrAfZpqN3u\",\"6ShafRStcvew4GfCh\",\"PSrcg6fy835R4c5CW\",\"yabtHTtycsWhcGBfD\",\"K3RacTvkWHLfzKF8i\",\"iWTjtH9SLKBa9fN7e\",\"qJZsi5rhRnWA38FbA\",\"u5u2YpHXiNgzDNJdX\",\"DLai9DxpZN6p5TPRX\",\"sz5duKFGpqN74k7SY\",\"ahWFxnaxt9bXSA4f3\",\"tYjQweAK2k8goR4Bq\",\"C4QntmkYtB89GNtpd\",\"3LiSLdtN58n46NEqg\",\"PR89xoYsqJh6osPbn\",\"Jqk2uJZZxEv5wZFze\",\"4tgBydK887PitgAoi\",\"w2FwiD5CGk7YsdRXM\",\"ehQCCKBjsmdtKjJNv\",\"ab7BsQuhDo3QgE6bh\",\"BeFnbPbMnAM2SjBdZ\",\"2innwjWqxJHo4eRGh\",\"PXAcsKkssS2yLyDv2\",\"QnPD4Sv6W4LHc2Qng\",\"M44nifmWzt3wtYyJx\",\"AasGs8AeX9Lcb9xJn\",\"H9KZi2cjt4FwH7qog\",\"s5M5RvgqR9BhB9JoC\",\"4CFzv558qbGcpQwc4\",\"Yp7uvStL97cC9fKkY\",\"sJWTa7iWeRoRtqJ8N\",\"v3fjGuc7Pq4yjFygS\",\"g8yJiPAWXbrgxbjfZ\",\"zg8GmMSP2LkHBtAzy\",\"Z85ajWfZ4jDPkbvR4\",\"w3A7cBWyAfukk6xEQ\",\"9Ly8afdtofp8DXzrt\",\"vLrq4dEDMM2wd68Dc\",\"BEdxteC2PKrmTLbdM\",\"dHZqT6h4JMwk5fPC8\",\"uzwybbyxEpjv7aabM\",\"jNvegJWCk5HCtEMbK\",\"8PwfYqoDQFThzNtvf\",\"ZNnsMeNkdDhHjSrZb\",\"aEm3Wvj2rFYRL8Lrb\",\"X8Ne783MwqMpmzbCg\",\"gJYuGdkXEWWmGRLzu\",\"q5a96XumccZyhQNyL\",\"2QGRoQn2dRq3scu7k\",\"HF28xZKSLM9wEuqNg\",\"kYWb8BwpKwunQkxeX\",\"hnyhBFWwNCz9mDfSi\",\"DEDniTrstQYGounXT\",\"jNE5AHcJQWXz7efuP\",\"KdNDysEsy2TW5QRJ2\",\"aRqQ42J5zqCmBNd8w\",\"9pzFiFK3ANLjQfnr2\",\"8LfTheFzvicameoz9\",\"5cmvoGYHLNmT8n6jP\",\"rzF2F7DgSjgJrneo8\",\"JS3hNM3XXkxPdg3yk\",\"FzxTj4GuujhwpZM7y\",\"ahk2qiXKJA753wAJk\",\"hab8YixsXxe4CcZpP\",\"aPLuemxzZ5iS57NBQ\",\"XrqNzJ2FRG8HnGiR6\",\"4yNLEwL2rsx4EE5Nt\",\"WWwxnJ3jigFMxzWkY\",\"a777e8chPvJkY3tKa\",\"MKT7khMBGXzA22ykf\",\"pNDimw4doiCuz2Hbg\",\"yr822PZmmiDDenxpB\",\"Z6eqrAatHZjffx4s3\",\"2ptN2mhjFwFcHyPZd\",\"c4SCmmZJEL6yvGfZb\",\"F2ykFxhDEEkj6N5KE\",\"H4abACFDH5t8CnnyH\",\"3cF6NXq3ZEwdkgSjb\",\"ZrKCkX7xxGGZzauFW\",\"9dgvEreRDYRiwLmYv\",\"4rwxLqLs2mNZNg8NB\",\"3ZMvEKwE7XWxAsHP8\",\"FEYpu9RWysAgW3XnP\",\"syRNbbPdLCGXbH2Gy\",\"LyaZoABZYGfJBw2RF\",\"Ecg4m7srYGgZsb4Ck\",\"oCHiBN5X2owWy6kHz\",\"zd9FLSzsGz3evKafy\",\"NG8PWBSjsM8mMhQEq\",\"RFHHHZ4ET4vpWijRe\",\"Pe8vWpDHRuH9nSGKW\",\"CwXsu25ygLEwQbmQC\",\"iojEnnY9FsMfYzp6f\",\"TwKZ3835iFLog2RuQ\",\"NNE5HNRXAkmhrWgyQ\",\"PfWtg2ufhe7f5R3xW\",\"eMuCpJ2spXWkJjWNz\",\"yro9W5sMuBASbki8p\",\"yNjkHfHESBAnCssPB\",\"8BFSTCnoe2QggN64c\",\"b9YQPLb9ZPSADdHXX\",\"R4SjTgDnpigJYDLyL\",\"xwEZk3bNZoNDPJYF5\",\"iS5BrkGLzJyPK7nKt\",\"yjtdwc2AC4jA2RWtn\",\"PhceyfmFntJcn5Fhf\",\"6SKDJwXpev4qPSzgM\",\"oBcs8GLX2ZFLXQy8y\",\"Q9afpRu3u8zuWuzLQ\",\"ta5CrWnBCRusD2WMo\",\"n2BRY9X8899dcG8Bw\",\"YA7SDhpgEtsqynvNL\",\"6gS4E2C84vBYTYeDZ\",\"M8dQuMrEpP8Hc3tHN\",\"u7i7WPM63n42r8R8o\",\"9bQyb6rW7xfE4vgrR\",\"BBk8ZRmMsTzpKCaux\",\"9H7W6MZhf96u92uap\",\"w2HhxvSLmDhaGCAjE\",\"RehJGBFS6CYiWdjZx\",\"M35nSp9motwe2cDrP\",\"TPhfpB5tzQWSSn67n\",\"p8qqFdJ3FSk5x9z3G\",\"GGprTwrkjuccmrQRg\",\"skG34HkAFoQiHk7gg\",\"i5iePG5GqhJJ8HEoB\",\"ji5f27FPz4wRRF6Ls\",\"JQkZXeaLy3giT5p6W\",\"hRiMXDZNAzyPd5tpt\",\"sX9GZp3fYyQLrBKMJ\",\"KLmLKaJPfsYxp42p2\",\"9CoqdidjM9KbeKnHY\",\"FvFhg2wELM3SCZDZQ\",\"k2Eo3wyfZZ6KxvKhN\",\"Kh3Pc2ZRusurLaMyP\",\"tpxMgkGSHwBjS95Ta\",\"mG8HqKiAQFTdRZthG\",\"j49s8dHmmiyPxZmWj\",\"gXTAie79kiw28tx5u\",\"b5zo7s6xrqWgQnPao\",\"qD2LrwaDrSdiybLKY\",\"8WpvgSbQciTQWdd8T\",\"oXdhczMThyirgM2eN\",\"6HgMANhu6WiGyXSGN\",\"377aXz9FPFSZxyrSv\",\"9FCeFzjPA4jrQ7oHW\",\"NzbRqGWspQnWMoDrF\",\"kNrnnMxhFZztMTBAX\",\"hwE5wDZ4RToL5kjLn\",\"dBzwBtRjZqB98DJeB\",\"hXoTNPPmJLzkZnkSX\",\"wRttWTM59y8m5mx7x\",\"dj5AyG5fWP8FdsSmZ\",\"DPi9QGLctq2y76KuE\",\"QRv96jmNaYsWkxQEG\",\"noaBx5QyY6pTS5bja\",\"aKzYNPqBqb3J3ZgyD\",\"rrSC943cCKNG48sH4\",\"axdSNLZpiCDF8RS6n\",\"J3upzLHuEwXH7Z2hx\",\"7K2GEb5TZRtSpyyGS\",\"g9FyJ8yeT9ic97Qp2\",\"cAP3n5NY64uoMwzRR\",\"sHjfbGQGLHE6JR6qu\",\"8fZxjQfuXw5HMSRJM\",\"dYPkStFnLvAMsHSzZ\",\"d8qtzoLB264iP8tdY\",\"KJCDwGkoXh8qtbbKr\",\"RGMbFMZXJr7DhcAJy\",\"5XiuAqicKD4hBdu63\",\"5HCu9Ydd86QgHDRNP\",\"C2AfMipCicfD58WJ9\",\"DpnYcMphntjsQ96qg\",\"J5T8gZqiZXFuFDTQ7\",\"HuNF3xTBzmatyGSTm\",\"ZyrfhDTZHb8LymH5b\",\"qZQxPQ2kaNKAMesHT\",\"o4ixjQGSaYqA2JoM4\",\"buX4mCQhtXCfBjeno\",\"GqothajHR2vKfEHGZ\",\"YRAzEBJoLvSaiPtYx\",\"5S9nX4rKsnCcnv4Cz\",\"utTuvGdmu2sBHWBhQ\",\"GGdmhAvxXhqhhibJN\",\"5hQnRWiKkhgKJXNMP\",\"B8n7KqbvEDjZzgj2D\",\"yod5YhKtPqw2GfG9B\",\"Ds7L5bksw2QRHjrKL\",\"srJ34BaybkQh3qRkM\",\"EfxwqhYdapX3dMQC2\",\"PWgzeK859suojbrRx\",\"q6QsMYNMpPNtmyTeW\",\"wjc4iejpErBhxWwHo\",\"qQQ4hCQpzitmHSkjS\",\"YcCLwitFMAEJSnxAW\",\"qAby4AWXmTNeusvg3\",\"ey3CASd6Je5LEJzfB\",\"66a9xX73nmTEuKs9k\",\"AFfw7cGg83uYk2Miy\",\"XD5nmvKQchKezPXhy\",\"PC3pLs36zNzpRDSuE\",\"BrTDhPJcACL2bsrpJ\",\"ADycYubh8WTMCXhgR\",\"8LqTJugTk5Sn2ZAS7\",\"2HfNkb2SoqdyjKW3o\",\"c2q7mY39z5JPEMCaM\",\"mvJBakQ35CWAnbbEZ\",\"X4rzfxGgxx6CS7Bpz\",\"2PufnQcsHsfymufX3\",\"K6MfKMytoJJuSGewP\",\"sbJcFfQjQ59Wfg4Cd\",\"R6YxHWAiLgKwy5YvC\",\"RoGGD5cpHb4ftdLDv\",\"Cc2Cgj4MWXZxsTooC\",\"pduNK68oazqQTtbLp\",\"wcfairbiob9h8yiDB\",\"hR7GMiqGap4CzEWSy\",\"4Lwjr34ypKNQNQCar\",\"2iFe3EHEH2YdhSKrs\",\"AJexRBN9cYQmqvYu6\",\"iBHx7eL6anoBnF7yQ\",\"4TmgHkn5vqyHK3sYC\",\"T6Rm8mREPMZSftzrC\",\"nc7bRhkxgKyqusYe3\",\"d9LBRxvADNBB5QJMB\",\"qM4cFjDW9EBf6BNsA\",\"CHvzhtXnv8HTbPQ56\",\"dzS6WBTMHyFEag6Fp\",\"B4y8aoyXJtskYPFEL\",\"uGuS9YRXW2nj4p6zf\",\"o2AEoyCijeNx5MEqW\",\"qB6KSTYC6H2TQEQY6\",\"AQSqD9oNv2uPfxZCR\",\"BdnE4RS5puoxo92mA\",\"Qyfyyw6oC4EHAndzo\",\"rCrbqMiaGPgHYTNxu\",\"hpT9yYe5R45poHrYR\",\"suArq5BbSy7gD6xri\",\"5QN8R22z43SrwoHDz\",\"Wi4H6ayKsNDWWQCG5\",\"8uiLiJcmWxWe6qw65\",\"ruzwBPphPDRgLXdnP\",\"vAbK8sCfKyFC78HYg\",\"qbKLNv2XA9Q2R8vXr\"],\"total\":326,\"quality\":[4,5,4,3,4,4,5,3,5,5,5,5,4,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,4,5]},\"flags\":0},\"subscribers\":[\"td7qPZ7Lv4pEWT2Ya\"],\"summary\":\"A ship has to transport cargo from one place to another, while picking up cargo along the way. Given the total amount of cargo and the types of cargo holds in the ship as lists, create a function that returns True if all the cargo can fit on the ship, and False if it can't.\\n\\n \\\"S\\\" means 50 cargo space.\\n \\\"M\\\" means 100 cargo space.\\n \\\"L\\\" means 200 cargo space.\\n\\nEx\",\"tags\":[\"logic\",\"math\",\"strings\"],\"timestamp\":{\"$date\":1564670110274},\"title\":\"Does the Cargo Fit? (Part 1)\",\"isHidden\":false,\"quality\":4.7,\"family\":[{\"_id\":\"HLghTauDdJRfNvmxg\",\"language\":\"cpp\"},{\"_id\":\"7W8aPMTicPy6jbYr3\",\"language\":\"javascript\"},{\"_id\":\"ziaNsc7J4ySFY6rF6\",\"language\":\"python3\"},{\"_id\":\"qgrACyoSYaRDdsezw\",\"language\":\"ruby\"}]}}"]