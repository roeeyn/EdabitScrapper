a["{\"msg\":\"result\",\"id\":\"1442\",\"result\":{\"_id\":\"TFG9f75apGi3SS49v\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def is_set(cards):\",\"difficulty\":2.0833333333333335,\"familyId\":\"ua77xcyWdq2zrqjnG\",\"instructions\":\"In the game **Set**, **three cards form a set** if each of the cards are identical or completely different for each of the **four properties**. All three cards must:\\n\\n1. Have the **same color**  or **different colors**.\\n2. Have the **same number** or **different numbers**.\\n3. Have the **same shades** or **different shades**.\\n4. Have the **same shape** or **different shapes**.\\n\\nThe four properties are:\\n\\n1. Colors: red, purple, green\\n2. Numbers: 1, 2, 3\\n3. Shades: empty, lined, full\\n4. Shapes: squiggle, oval, diamond\\n\\nHere, a set is represented by an array containing three cards. Each card is represented by an object of properties and values. Write a function that determines whether three cards constitute a valid set.\\n\\nHere is an example of a **set**:\\n\\n```\\n[\\n  { \\\"color\\\": \\\"red\\\", \\\"number\\\": 1, \\\"shade\\\": \\\"empty\\\", \\\"shape\\\": \\\"squiggle\\\" },\\n  { \\\"color\\\": \\\"red\\\", \\\"number\\\": 2, \\\"shade\\\": \\\"lined\\\", \\\"shape\\\": \\\"diamond\\\" },\\n  { \\\"color\\\": \\\"red\\\", \\\"number\\\": 3, \\\"shade\\\": \\\"full\\\", \\\"shape\\\": \\\"oval\\\" }\\n]\\n\\n# \\\"Same\\\" properties: color\\n# \\\"Different\\\" properties: numbers, shading and shapes\\n```\\n\\nThe following is  **not a set**:\\n\\n```\\n[\\n  { \\\"color\\\": \\\"red\\\", \\\"number\\\": 1, \\\"shade\\\": \\\"empty\\\", \\\"shape\\\": \\\"squiggle\\\" },\\n  { \\\"color\\\": \\\"red\\\", \\\"number\\\": 2, \\\"shade\\\": \\\"lined\\\", \\\"shape\\\": \\\"diamond\\\" },\\n  { \\\"color\\\": \\\"purple\\\", \\\"number\\\": 3, \\\"shade\\\": \\\"full\\\", \\\"shape\\\": \\\"oval\\\" }\\n]\\n\\n# Colors are not all identical, but not all different.\\n```\\n\\n### Examples\\n```\\nis_set([\\n  { \\\"color\\\": \\\"green\\\", \\\"number\\\": 1, \\\"shade\\\": \\\"empty\\\", \\\"shape\\\": \\\"squiggle\\\" },\\n  { \\\"color\\\": \\\"green\\\", \\\"number\\\": 2, \\\"shade\\\": \\\"empty\\\", \\\"shape\\\": \\\"diamond\\\" },\\n  { \\\"color\\\": \\\"green\\\", \\\"number\\\": 3, \\\"shade\\\": \\\"empty\\\", \\\"shape\\\": \\\"oval\\\" }\\n]) ➞ True\\n\\nis_set([\\n  { \\\"color\\\": \\\"purple\\\", \\\"number\\\": 1, \\\"shade\\\": \\\"full\\\", \\\"shape\\\": \\\"oval\\\" },\\n  { \\\"color\\\": \\\"green\\\", \\\"number\\\": 1, \\\"shade\\\": \\\"full\\\", \\\"shape\\\": \\\"oval\\\" },\\n  { \\\"color\\\": \\\"red\\\", \\\"number\\\": 1, \\\"shade\\\": \\\"full\\\", \\\"shape\\\": \\\"oval\\\" }\\n]) ➞ True\\n\\nis_set([\\n  { \\\"color\\\": \\\"purple\\\", \\\"number\\\": 3, \\\"shade\\\": \\\"full\\\", \\\"shape\\\": \\\"oval\\\" },\\n  { \\\"color\\\": \\\"green\\\", \\\"number\\\": 1, \\\"shade\\\": \\\"full\\\", \\\"shape\\\": \\\"oval\\\" },\\n  { \\\"color\\\": \\\"red\\\", \\\"number\\\": 3, \\\"shade\\\": \\\"full\\\", \\\"shape\\\": \\\"oval\\\" }\\n]) ➞ False\\n```\\n\\n### Notes\\n- A set cannot have 2/3 cards having the same property. Either all must share that property, or none will share that particular property.\\n- You can play Set by checking the **Resources** tab.\",\"lab\":\"Test.assert_equals(is_set(\\n[{\\\"color\\\": \\\"red\\\", \\\"number\\\": 1, \\\"shade\\\": \\\"lined\\\", \\\"shape\\\": \\\"squiggle\\\"}, \\n{\\\"color\\\": \\\"red\\\", \\\"number\\\": 1, \\\"shade\\\": \\\"lined\\\", \\\"shape\\\": \\\"diamond\\\"}, \\n{\\\"color\\\": \\\"red\\\", \\\"number\\\": 1, \\\"shade\\\": \\\"lined\\\", \\\"shape\\\": \\\"squiggle\\\"}]\\n), False)\\n\\nTest.assert_equals(is_set(\\n[{\\\"color\\\": \\\"purple\\\", \\\"number\\\": 3, \\\"shade\\\": \\\"full\\\", \\\"shape\\\": \\\"oval\\\"}, \\n{\\\"color\\\": \\\"green\\\", \\\"number\\\": 1, \\\"shade\\\": \\\"full\\\", \\\"shape\\\": \\\"oval\\\"}, \\n{\\\"color\\\": \\\"red\\\", \\\"number\\\": 3, \\\"shade\\\": \\\"full\\\", \\\"shape\\\": \\\"oval\\\"}]\\n), False)\\n\\nTest.assert_equals(is_set(\\n[{\\\"color\\\": \\\"red\\\", \\\"number\\\": 1, \\\"shade\\\": \\\"empty\\\", \\\"shape\\\": \\\"squiggle\\\"}, \\n{\\\"color\\\": \\\"red\\\", \\\"number\\\": 2, \\\"shade\\\": \\\"lined\\\", \\\"shape\\\": \\\"diamond\\\"}, \\n{\\\"color\\\": \\\"purple\\\", \\\"number\\\": 3, \\\"shade\\\": \\\"full\\\", \\\"shape\\\": \\\"oval\\\"}]\\n), False)\\n\\nTest.assert_equals(is_set(\\n[{\\\"color\\\": \\\"red\\\", \\\"number\\\": 1, \\\"shade\\\": \\\"empty\\\", \\\"shape\\\": \\\"squiggle\\\"}, \\n{\\\"color\\\": \\\"red\\\", \\\"number\\\": 1, \\\"shade\\\": \\\"lined\\\", \\\"shape\\\": \\\"diamond\\\"}, \\n{\\\"color\\\": \\\"red\\\", \\\"number\\\": 1, \\\"shade\\\": \\\"lined\\\", \\\"shape\\\": \\\"oval\\\"}]\\n), False)\\n\\nTest.assert_equals(is_set(\\n[{\\\"color\\\": \\\"red\\\", \\\"number\\\": 1, \\\"shade\\\": \\\"lined\\\", \\\"shape\\\": \\\"squiggle\\\"}, \\n{\\\"color\\\": \\\"red\\\", \\\"number\\\": 1, \\\"shade\\\": \\\"lined\\\", \\\"shape\\\": \\\"diamond\\\"}, \\n{\\\"color\\\": \\\"red\\\", \\\"number\\\": 1, \\\"shade\\\": \\\"lined\\\", \\\"shape\\\": \\\"oval\\\"}]\\n), True)\\n\\nTest.assert_equals(is_set(\\n[{\\\"color\\\": \\\"red\\\", \\\"number\\\": 1, \\\"shade\\\": \\\"empty\\\", \\\"shape\\\": \\\"squiggle\\\"}, \\n{\\\"color\\\": \\\"red\\\", \\\"number\\\": 2, \\\"shade\\\": \\\"lined\\\", \\\"shape\\\": \\\"diamond\\\"}, \\n{\\\"color\\\": \\\"red\\\", \\\"number\\\": 3, \\\"shade\\\": \\\"full\\\", \\\"shape\\\": \\\"oval\\\"}]\\n), True)\\n\\nTest.assert_equals(is_set(\\n[{\\\"color\\\": \\\"green\\\", \\\"number\\\": 1, \\\"shade\\\": \\\"empty\\\", \\\"shape\\\": \\\"squiggle\\\"}, \\n{\\\"color\\\": \\\"green\\\", \\\"number\\\": 2, \\\"shade\\\": \\\"empty\\\", \\\"shape\\\": \\\"diamond\\\"}, \\n{\\\"color\\\": \\\"green\\\", \\\"number\\\": 3, \\\"shade\\\": \\\"empty\\\", \\\"shape\\\": \\\"oval\\\"}]\\n), True)\\n\\nTest.assert_equals(is_set(\\n[{\\\"color\\\": \\\"purple\\\", \\\"number\\\": 1, \\\"shade\\\": \\\"full\\\", \\\"shape\\\": \\\"oval\\\"}, \\n{\\\"color\\\": \\\"green\\\", \\\"number\\\": 1, \\\"shade\\\": \\\"full\\\", \\\"shape\\\": \\\"oval\\\"}, \\n{\\\"color\\\": \\\"red\\\", \\\"number\\\": 1, \\\"shade\\\": \\\"full\\\", \\\"shape\\\": \\\"oval\\\"}]\\n), True)\",\"language\":\"python3\",\"summary\":\"In the game Set, three cards form a set if each of the cards are identical or completely different for each of the four properties. All three cards must:\\n\\nHave the same color  or different colors.\\nHave the same number or different numbers.\\nHave the same shades or different shades.\\nHave the same shape or different shapes.\\n\\nThe four properties are:\\n\\nColors: red,\",\"tags\":[\"objects\",\"games\",\"validation\"],\"timestamp\":{\"$date\":1554421555802},\"title\":\"Validating a Set in the Set Game\",\"stats\":{\"completed\":{\"total\":103,\"ratings\":[2,2,2,2,2,2,2,2,2,2,2,4,3,3,2,2,2,2,2,3,1,3,1,2,1,3,1,3,2,3,0,2,1,3,2,3,3,1,2,2,2,2,3,0,3,2,3,1,3,2,3,2,3,3,3,3,3,3,0,3,1,3,2,2,0,3,0,1,0,3,2,3,4,2,3,3,1,1,4,3,2,3,0,0,0,2,2,2,1,3,0,2,2,1,3,5],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"8JyqsSbN2FJXPr3cw\",\"yZvzB3qFb8pkHy4dg\",\"Jqk2uJZZxEv5wZFze\",\"gb9rvGus2Jv7bjZSs\",\"tAF9Gf6PiGogbZuWs\",\"T3ZAuoMrJjvZwN55B\",\"yrmiF5oKPR5rQYCRJ\",\"ab7BsQuhDo3QgE6bh\",\"6W2GSzrYjMD9ANBFY\",\"FikSPhcrHBpQ4CyGC\",\"PFjMZGHNAPTkgd7tq\",\"nF9pCCzbGDhzvWgaw\",\"jHrtWDGBhkbuWa7fG\",\"AF6LgdKhEdzwgRJom\",\"AYaEkTWLMmfzpwejr\",\"jYJ26SiLKBu5GRumq\",\"cR3ibTMxLyEdDFCHY\",\"gMJhLdyw3tH7L96X2\",\"s5M5RvgqR9BhB9JoC\",\"HqmxnQJM66Y57twhn\",\"otXtuQygbcYATMZoP\",\"2fxapKr8XGdNeaKi2\",\"pDvFWMCD9fQwoBPcu\",\"8PwfYqoDQFThzNtvf\",\"K96FwtfDDN5WM4Bb7\",\"5Bikpk3S6zGEvGDaC\",\"6ShafRStcvew4GfCh\",\"C4QntmkYtB89GNtpd\",\"nc7bRhkxgKyqusYe3\",\"2innwjWqxJHo4eRGh\",\"vgTvCCxgvbCTDvaRT\",\"AasGs8AeX9Lcb9xJn\",\"4CFzv558qbGcpQwc4\",\"T7QZG6y34b65Fxyef\",\"PytNZK9mNiRiZxPrm\",\"TyEeGAgsF7tG3fubX\",\"mDWNyaaQ9hvPCRzSd\",\"aEm3Wvj2rFYRL8Lrb\",\"aCNWav8S8Try9RkC6\",\"ghTAisPZoS5FTqQnK\",\"ywk3XGvcmpTgRxwZa\",\"ZNnsMeNkdDhHjSrZb\",\"YRstQuthRkFeBiXug\",\"EXCpDkk5BLif3i5YE\",\"a777e8chPvJkY3tKa\",\"gJYuGdkXEWWmGRLzu\",\"vwDoBwwZe4rCbrdCp\",\"R4SjTgDnpigJYDLyL\",\"Ecg4m7srYGgZsb4Ck\",\"iojEnnY9FsMfYzp6f\",\"dzS6WBTMHyFEag6Fp\",\"DEDniTrstQYGounXT\",\"Wv2vJnEj8ywNmARoF\",\"zZDaXBxMzTCBhNkgL\",\"yjtdwc2AC4jA2RWtn\",\"n2BRY9X8899dcG8Bw\",\"qPpQfR5KyDb5Y3EFf\",\"Lw8oRc5SERsuntXMo\",\"kXEfD7xxEyWd7oxxL\",\"DrkR35NqnP9NDLbq6\",\"Yp7uvStL97cC9fKkY\",\"AHTqmnXTTA6RjrRN5\",\"5Z4o2pWDzmbpw4JHJ\",\"v9KtC8YLbMWmXiW2H\",\"p8qqFdJ3FSk5x9z3G\",\"dBzwBtRjZqB98DJeB\",\"xn7uGNKeAwPEkP9oA\",\"yoYQqaY6GszuTkNSs\",\"dkcmCKwqApX5jBggc\",\"J3upzLHuEwXH7Z2hx\",\"DPi9QGLctq2y76KuE\",\"iS5BrkGLzJyPK7nKt\",\"gXTAie79kiw28tx5u\",\"LW8PqW4HFXWfoJGo6\",\"oBcs8GLX2ZFLXQy8y\",\"StNu7DPyTgEStZsMY\",\"d8qtzoLB264iP8tdY\",\"cAP3n5NY64uoMwzRR\",\"hRAd998MG8Jzdpxj6\",\"GJPBmKdKBCB8WyG82\",\"RTDx9axf52kxhFjwZ\",\"QRv96jmNaYsWkxQEG\",\"GGdmhAvxXhqhhibJN\",\"PWgzeK859suojbrRx\",\"MpfytGFYF77emJ3cT\",\"PH32cNxBjrK4a28sn\",\"T6iBEE2jp7f7iEF2P\",\"gKnWjDjwrJh7MK2df\",\"2PufnQcsHsfymufX3\",\"o4ixjQGSaYqA2JoM4\",\"yod5YhKtPqw2GfG9B\",\"8sNv5PTHa7XQ8bNqR\",\"Ds7L5bksw2QRHjrKL\",\"5HCu9Ydd86QgHDRNP\",\"3KkyQm77zsew58Dc2\",\"mm5evQZF6g4FytfZS\",\"THoTJTpHE2D4TGWAJ\",\"Qyfyyw6oC4EHAndzo\",\"J5T8gZqiZXFuFDTQ7\"],\"quality\":[5,4,5,3,5,5,1,4,5,5,5,5,5]},\"tests\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.384615384615385,\"family\":[{\"_id\":\"278bzxEFeTKNiKXfM\",\"language\":\"javascript\"},{\"_id\":\"TFG9f75apGi3SS49v\",\"language\":\"python3\"},{\"_id\":\"bHL3XpC3eG2P8yBZy\",\"language\":\"ruby\"}]}}"]