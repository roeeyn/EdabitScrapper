a["{\"msg\":\"result\",\"id\":\"2063\",\"result\":{\"_id\":\"7gHfNSoKXLA8CNBNK\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"def sim_prop_frac(max_den):\\n\\t\",\"difficulty\":2.8846153846153846,\"familyId\":\"MNxZKs2ywLhRDdbBv\",\"instructions\":\"Create a function that takes a number `max_den` and returns the total number of fully simplified proper fractions that exist with denominator less than or equal to `max_den`.\\n\\nYou only need to return the number of fractions; **NOT the fractions themselves**. In the examples below, I list the fractions simply for your reference.\\n\\n### Examples\\n```\\nsim_prop_frac(10) ➞ 31\\n# 1/2, 1/3, 2/3, 1/4, 3/4, 1/5, 2/5, 3/5, 4/5, 1/6, 5/6, 1/7, 2/7, 3/7, 4/7, 5/7, 6/7, 1/8, 3/8, 5/8, 7/8, 1/9, 2/9, 4/9, 5/9, 7/9, 8/9, 1/10, 3/10, 7/10, 9/10\\n\\nsim_prop_frac(7) ➞ 17\\n# 1/2, 1/3, 2/3, 1/4, 3/4, 1/5, 2/5, 3/5, 4/5, 1/6, 5/6, 1/7, 2/7, 3/7, 4/7, 5/7, 6/7\\n```\\n\\n### Notes\\nA fully simplified proper fraction is a fraction where both the numerator and denominator share no common factors besides 1 and the fraction is less than 1.\",\"isHidden\":false,\"lab\":\"Test.assert_equals(sim_prop_frac(10), 31)\\nTest.assert_equals(sim_prop_frac(2), 1)\\nTest.assert_equals(sim_prop_frac(30), 277)\\nTest.assert_equals(sim_prop_frac(100), 3043)\\nTest.assert_equals(sim_prop_frac(56), 963)\",\"language\":\"python3\",\"summary\":\"Create a function that takes a number maxden and returns the total number of fully simplified proper fractions that exist with denominator less than or equal to maxden.\\n\\nYou only need to return the number of fractions; NOT the fractions themselves. In the examples below, I list the fractions simply for your reference.\\n\\nExamples\\nsimpropfrac(10) ➞ 31\\n1/2, 1/3, 2\",\"tags\":[\"math\",\"algorithms\",\"loops\",\"numbers\"],\"timestamp\":{\"$date\":1581640205764},\"title\":\"Simplified Proper Fractions\",\"stats\":{\"completed\":{\"total\":58,\"ratings\":[4,4,4,4,4,3,5,3,4,4,2,2,3,3,4,5,3,3,5,2,5,5,3,2,2,1,5,2,3,1,4,1,1,3,3,3,0,2,5,2,2,3,4,4,3,2,1,3,0,0,2,2],\"rators\":[\"tAF9Gf6PiGogbZuWs\",\"8PwfYqoDQFThzNtvf\",\"gb9rvGus2Jv7bjZSs\",\"aCNWav8S8Try9RkC6\",\"s5M5RvgqR9BhB9JoC\",\"aEm3Wvj2rFYRL8Lrb\",\"DwetpbChQM4r6Gwah\",\"mDWNyaaQ9hvPCRzSd\",\"AasGs8AeX9Lcb9xJn\",\"a777e8chPvJkY3tKa\",\"SKeSSfqSmCk65vjYh\",\"xn7uGNKeAwPEkP9oA\",\"8JyqsSbN2FJXPr3cw\",\"b5zo7s6xrqWgQnPao\",\"gHx3GRSyA5HZ8pbnu\",\"Cia25zjeX3RkCNx5t\",\"fSQSHjW3e72MrWxbD\",\"iS5BrkGLzJyPK7nKt\",\"DPi9QGLctq2y76KuE\",\"yr822PZmmiDDenxpB\",\"d8qtzoLB264iP8tdY\",\"eHcgvkTGsH7ZziqBo\",\"8sNv5PTHa7XQ8bNqR\",\"iojEnnY9FsMfYzp6f\",\"J3upzLHuEwXH7Z2hx\",\"yjtdwc2AC4jA2RWtn\",\"gJYuGdkXEWWmGRLzu\",\"PH32cNxBjrK4a28sn\",\"2PufnQcsHsfymufX3\",\"J23RcmzbdtBbPCTjT\",\"fznzd3qnvtbFkkizz\",\"2Z6JyyFgKoKYEnErv\",\"eMuCpJ2spXWkJjWNz\",\"4RY3zj9C2t8GGefhi\",\"T6iBEE2jp7f7iEF2P\",\"X3nCreWwAiyASK5FD\",\"odxHaCjQhErNWLk3S\",\"zY2wmrbhRc6F47G5W\",\"9pqtNWrsTJdZcRbEZ\",\"hYq2tQbwKgxWpMN6z\",\"hkiz2Nv927cYGrA86\",\"RriCQNKWZmYKexd8R\",\"PEvfw3kQt8Kdx2DTS\",\"5QN8R22z43SrwoHDz\",\"KofBzEZxkAAZ9JE5a\",\"4yTRgsTGp3fjonL85\",\"ACWdZBjGdSPKhSxv4\",\"awedh3FRMnbuWz3CW\",\"gXTAie79kiw28tx5u\",\"rhS8qXRjZcpDXkwnE\"],\"quality\":[4,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"quality\":4.666666666666667,\"family\":[{\"_id\":\"hWQYFyMke28QrzCGJ\",\"language\":\"cpp\"},{\"_id\":\"jap6GWKheiNvASpCL\",\"language\":\"csharp\"},{\"_id\":\"nWRGJeLJ3gvzMSGvS\",\"language\":\"java\"},{\"_id\":\"ZbTx5ArPfmS6zghvx\",\"language\":\"javascript\"},{\"_id\":\"7gHfNSoKXLA8CNBNK\",\"language\":\"python3\"},{\"_id\":\"eCLJ56drRJDBerJXL\",\"language\":\"ruby\"}]}}"]