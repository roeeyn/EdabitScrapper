a["{\"msg\":\"result\",\"id\":\"2192\",\"result\":{\"_id\":\"xzaREqFLW3tZdGnTA\",\"author\":\"VeryKnave\",\"authorId\":\"RW2wFPbMQniZWPmw4\",\"code\":\"def most_overlapped_block(grid_width, points):\\n\\t\",\"difficulty\":3.3684210526315788,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"7E2LWwdkB6CyeNhn4\",\"instructions\":\"Create a function that takes two arguments as input:\\n- A positive integer that describes the size of a grid. For example, when the value of the argument is 10, a 10x10 grid will be used.\\n- A list of one or more tuples of size 3. Each tuple represents a block of the grid, and the meanings of the tuple's elements are: 1. The x coordinate. 2. The y coordinate. 3. The range of the block.\\n\\nThe range of a block is the **maximum** distance from the block situated at the x and y coordinates to other blocks. The distance **can't** be calculated vertically.\\nThe function returns the block that has the most overlaps.\\n\\n### Worked Examples\\nThe tuple `(3, 3, 2)` covers the following blocks: `(1, 3)`, `(2, 4)`, `(2, 3)`, `(2, 2)`, `(3, 5)`, `(3, 4)`, `(3, 3)`, `(3, 2)`, `(3, 1)`, `(4, 4)`, `(4, 3)`, `(4, 2)`, `(5, 3)`.\\n\\nHere is a visualization of that, when the first argument is `5`, and the second argument is `[(3, 3, 2)]`:\\n\\n```\\n00100\\n01110\\n11111\\n01110\\n00100\\n```\\n\\nThe 1s represent the blocks covered by `(3, 3, 2)`, while the 0s represent empty blocks. The biggest value on the grid is 1, hence `most_overlapped_block(5, [(3, 3, 2)])` returns `1`.\\n\\nIf the first argument is `5`, and the second argument is `[(3, 3, 2), (1, 1, 2)]`, the grid will look like this:\\n\\n```\\n00100\\n01110\\n21111\\n12110\\n11200\\n```\\n\\nThe 2s represent the blocks of `(3, 3, 2)` and `(1, 1, 2)` that overlap. The biggest value on the grid is 2, hence `most_overlapped_block(5, [(3, 3, 2, (1, 1, 2))])` returns `2`.\\n\\n### Examples\\n```\\nmost_overlapped_block(10, [(3, 3, 3), (1, 1, 4)]) ➞ 2\\n\\nmost_overlapped_block(10, [(5, 5, 2), (1, 1, 1)]) ➞ 1\\n\\nmost_overlapped_block(10, [(1, 1, 1), (1, 1, 2), (1, 1, 3)]) ➞ 3\\n```\\n\\n### Notes\\n- There can be more than one tuples that look the same in the second argument, like `[(3, 3, 2), (3, 3, 2)]`.\\n- Remember to not count the blocks that are outside the grid.\\n- `most_overlapped_block(1, [(10, 10, 1), (10, 10, 1)])` returns `0`.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(most_overlapped_block(6, [(3, 3, 2)]), 1)\\nTest.assert_equals(most_overlapped_block(10, [(5, 5, 2), (1, 1, 1)]), 1)\\nTest.assert_equals(most_overlapped_block(10, [(3, 3, 3), (1, 1, 4)]), 2)\\nTest.assert_equals(most_overlapped_block(1, [(10, 10, 1), (10, 10, 1)]), 0)\\nTest.assert_equals(most_overlapped_block(10, [(1, 1, 1), (1, 1, 2), (1, 1, 3)]), 3)\\nTest.assert_equals(most_overlapped_block(20, [(1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 5, 2), (10, 4, 7), (5, 14, 2), (16, 1, 3), (3, 3, 3)]), 4)\\nTest.assert_equals(most_overlapped_block(5, [(1, 1, 1), (1, 5, 2), (10, 4, 7), (5, 14, 2), (16, 1, 3), (3, 3, 3)]), 2)\\nTest.assert_equals(most_overlapped_block(1, [(1, 5, 4), (3, 3, 3), (3, 3, 3)]), 1)\\nTest.assert_equals(most_overlapped_block(32, [(1, 5, 4), (23, 3, 3), (3, 23, 13), (6, 3, 17), (3, 11, 9), (6, 3, 1), (8, 3, 3), (3, 1, 6), (2, 1, 3), (5, 5, 3)]), 5)\",\"language\":\"python3\",\"quality\":0,\"stats\":{\"completed\":{\"ratings\":[3,3,3,3,3,5,4,2,5,4,2,5,1,5,1,5,2,5,3],\"quality\":[],\"rators\":[\"2FKxy5FEpcE4GPpsa\",\"RW2wFPbMQniZWPmw4\",\"innQWYNLEaTFwLeEr\",\"8PwfYqoDQFThzNtvf\",\"d6iEb2BDDofyeePh9\",\"s5M5RvgqR9BhB9JoC\",\"EQu6oPhZ9mRChfYSz\",\"8sNv5PTHa7XQ8bNqR\",\"2PufnQcsHsfymufX3\",\"yjtdwc2AC4jA2RWtn\",\"bJaPCBx63YxdJAuTS\",\"J23RcmzbdtBbPCTjT\",\"iS5BrkGLzJyPK7nKt\",\"aEm3Wvj2rFYRL8Lrb\"],\"total\":15},\"flags\":0},\"summary\":\"Create a function that takes two arguments as input:\\nA positive integer that describes the size of a grid. For example, when the value of the argument is 10, a 10x10 grid will be used.\\nA list of one or more tuples of size 3. Each tuple represents a block of the grid, and the meanings of the tuple's elements are: 1. The x coordinate. 2. The y coordinate. 3. The\",\"tags\":[\"algorithms\",\"arrays\"],\"timestamp\":{\"$date\":1610830361726},\"title\":\"The Most Overlapped Block of the Grid\",\"family\":[{\"_id\":\"xzaREqFLW3tZdGnTA\",\"language\":\"python3\"}]}}"]