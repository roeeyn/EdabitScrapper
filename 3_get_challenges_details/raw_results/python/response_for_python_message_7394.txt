a["{\"msg\":\"result\",\"id\":\"2403\",\"result\":{\"_id\":\"g7sh7oLoArRLmM2ky\",\"author\":\"Donnamae\",\"authorId\":\"yZvzB3qFb8pkHy4dg\",\"code\":\"def baconify(msg, mask):\\n\\t\",\"difficulty\":4.033333333333333,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"hPWbPtsqJS6zg3qJn\",\"instructions\":\"This challenge makes use of a modified **Baconian** (Francis Bacon) **cipher**. The following is an example of a (modified) Baconian ciphertext:\\n\\n```\\nciphertext = \\\"KNowlEDgE ITsElf Is power.\\\"\\n```\\n\\nThe peculiar capitalisation might, at first glance, suggest that either the lowercase or uppercase letters contain, or code for, the hidden message (upper = \\\"KNEDEITEI\\\", lower = \\\"owlgslfspower\\\").\\n\\nBut actually, the Baconian cipher is a *steganographic* method of hiding information. The hidden message is not in the content of the ciphertext, but rather in the *presentation*. It doesn't matter which letters are capitalised, just the order of the capitalisation.\\n\\nTo decipher the ciphertext above, remove spaces and punctuation, then cleave the message into chunks of length 5, leaving out the remainder:\\n\\n```\\nciphertext = \\\"KNowl EDgEI TsElf Ispow\\\"\\n```\\n\\nEach chunk represents a letter. Decipher them according to the following table (\\\"u\\\" means uppercase, \\\"l\\\" means lowercase):\\n\\nLetter|Pattern\\n---|---\\na|uuuuu\\nb|uuuul\\nc|uuulu\\nd|uuull\\ne|uuluu\\nf|uulul\\ng|uullu\\nh|uulll\\ni|uluuu\\nj|uluul\\nk|ululu\\nl|ulull\\nm|ulluu\\nn|ullul\\no|ulllu\\np|ullll\\nq|luuuu\\nr|luuul\\ns|luulu\\nt|luull\\nu|luluu\\nv|lulul\\nw|lullu\\nx|lulll\\ny|lluuu\\nz|lluul\\n.|llllu\\n|  |lllll\\n\\n```\\ndeciphered = \\\"help\\\"\\n```\\n\\nCreate a function that takes 1 or 2 arguments:\\n\\n1.  A Baconian ciphertext or a plaintext message to be enciphered: `msg`.\\n2.  A background text in which the message is to be hidden: `mask`.\\n\\nIf only one argument is given (ciphertext), return the deciphered message (in lowercase, with spaces and full stops as encoded).\\n\\nIf a second argument is given, encipher the first argument `msg` into the `mask`, and return the resulting ciphertext. When enciphering, encipher full stops and spaces along with the words. Disregard the rest. The ciphertext itself should retain *all* the punctuation and spaces of the original `mask`.\\n\\n### Examples\\n```\\nbaconify(\\\"KNowlEDgE ITsElf Is power.\\\") ➞ \\\"help\\\"\\n\\nbaconify(\\\"Help me.\\\", \\\"Man prefers to believe what he prefers to be true.\\\") ➞ \\\"MAn prEFeRS To BelIeve what he PreFERS tO Be truE.\\\"\\n# Both the space (between \\\"help\\\" and \\\"me\\\") and the full stop at the end are enciphered.\\n\\nbaconify(\\\"Help!!!\\\", \\\"Knowledge itself is power.\\\") ➞ \\\"KNowlEDgE ITsElf Is power.\\\"\\n# Exclamation marks not enciphered, so the resulting ciphertext is identical to the first example.\\n```\\n\\n### Notes\\nN/A\",\"lab\":\"Test.assert_equals(baconify(\\\"KNowlEDgE ITsElf Is power.\\\"), \\\"help\\\")\\nTest.assert_equals(baconify(\\\"Help me.\\\", \\\"Man prefers to believe what he prefers to be true.\\\"), \\\"MAn prEFeRS To BelIeve what he PreFERS tO Be truE.\\\")\\nTest.assert_equals(baconify(\\\"THE GenERAl ROOT OF suPerstitIOn: nAMElY, ThAT men OBsErve wheN ThiNGs hiT, AnD Not wheN tHEY mISS; aNd coMMit To memory THe oNE, and fORGeT and PAss OvER tHE otheR. man preFerS tO BelIEvE what he prefers to be true.\\\"), \\\"bran gets the iron throne. wtf    \\\")\\nTest.assert_equals(baconify(\\\"Bran gets the Iron Throne. WTF?!\\\", \\\"The general root of superstition: namely, that men observe when things hit, and not when they miss; and commit to memory the one, and forget and pass over the other. Man prefers to believe what he prefers to be true.\\\"), \\\"THE GenERAl ROOT OF suPerstitIOn: nAMElY, ThAT men OBsErve wheN ThiNGs hiT, AnD Not wheN tHEY mISS; aNd coMMit To memory THe oNE, and fORGeT and PAss OvER tHE otheR. man preFerS tO BelIEvE what he prefers to be true.\\\")\\nTest.assert_equals(baconify(\\\"knowledge itself is power.\\\"), \\\"    \\\")\\nTest.assert_equals(baconify(\\\"Snape kills Dumbledore at Dumbledore's behest.\\\", \\\"Philosophy when superficially studied, excites doubt, when thoroughly explored, it dispels it. The root of all superstition is that men observe when a thing hits, but not when it misses. It is a sad fate for a man to die too well known to everybody else, and still unknown to himself.\\\"), \\\"pHIlOSopHy WHEN SUperfICiALly stuDiEd, EXcITES dOubT, wHen tHOrOughly EXPlorEd, IT DisPELS IT. tHe RooT Of ALL SUpeRstiTiON Is THaT Men obsERVE WhEN a thing hITS, but NoT WHen IT MISSeS. iT is A SaD FATE foR a maN tO DIe TOo WElL KnOwn to eVERYbODy ELSE, and STiLL uNKnOwN To himseLf.\\\")\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[5,5,5,5,5,5,4,4,5,4,4,4,5,0,2,4,5,5,3,5,4,3,3,5,1,4,5,2,5,5],\"rators\":[\"MXjxGML2X75x64vJo\",\"AYaEkTWLMmfzpwejr\",\"tAF9Gf6PiGogbZuWs\",\"QaE2QnnBbzdiExxPH\",\"gb9rvGus2Jv7bjZSs\",\"8JyqsSbN2FJXPr3cw\",\"3SKmXhcLPPkmQhjip\",\"jDgJ2fdFS76TSorNc\",\"FHSJnAYTbcsKFgeQa\",\"Jqk2uJZZxEv5wZFze\",\"DwetpbChQM4r6Gwah\",\"aCNWav8S8Try9RkC6\",\"8PwfYqoDQFThzNtvf\",\"E6myn69326auEiR8g\",\"jGrqoesacgEqRRNad\",\"aEm3Wvj2rFYRL8Lrb\",\"BByKDngfPvW6w4m7d\",\"8DH2opL3T5kdcoiRJ\",\"AasGs8AeX9Lcb9xJn\",\"3MybBtCNPcFHLMYmJ\",\"Z4M3NAa4TXquMNkHe\",\"xn7uGNKeAwPEkP9oA\",\"xyMcsLZsKgcbPzZ4N\",\"XNmN6ztj36a7eChbD\",\"iS5BrkGLzJyPK7nKt\",\"8sNv5PTHa7XQ8bNqR\",\"yjtdwc2AC4jA2RWtn\",\"gJYuGdkXEWWmGRLzu\",\"DQskEvAv5KiJDPtGF\"],\"total\":33,\"quality\":[4,5,5,5]},\"flags\":0},\"subscribers\":[\"yZvzB3qFb8pkHy4dg\"],\"summary\":\"This challenge makes use of a modified Baconian (Francis Bacon) cipher. The following is an example of a (modified) Baconian ciphertext:\\n\\nciphertext = \\\"KNowlEDgE ITsElf Is power.\\\"\\n\\nThe peculiar capitalisation might, at first glance, suggest that either the lowercase or uppercase letters contain, or code for, the hidden message (upper = \\\"KNEDEITEI\\\", lower = \\\"ow\",\"tags\":[\"conditions\",\"cryptography\",\"loops\",\"strings\"],\"timestamp\":{\"$date\":1561191732604},\"title\":\"Hidden in Plain Sight\",\"isHidden\":false,\"quality\":4.75,\"family\":[{\"_id\":\"fvBsB9oQchCSquxec\",\"language\":\"cpp\"},{\"_id\":\"do3FXijRWDakuQART\",\"language\":\"java\"},{\"_id\":\"MgfXZBKfTyPqSafh3\",\"language\":\"javascript\"},{\"_id\":\"g7sh7oLoArRLmM2ky\",\"language\":\"python3\"},{\"_id\":\"6CwPcBs6xu9mkHWxt\",\"language\":\"ruby\"}]}}"]