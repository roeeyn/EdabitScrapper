a["{\"msg\":\"result\",\"id\":\"2015\",\"result\":{\"_id\":\"jDjDgRPpp9cTEPkKH\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"def over_time(lst):\\n\\t\",\"difficulty\":2.8076923076923075,\"familyId\":\"gLciasniigZ265QBw\",\"instructions\":\"Write a function that calculates overtime and pay associated with overtime.\\n- Working 9 to 5: regular hours\\n- After 5pm is overtime\\n\\nYour function gets a list with 4 values:\\n- Start of working day, in decimal format, (24-hour day notation)\\n- End of working day. (Same format)\\n- Hourly rate\\n- Overtime multiplier\\n\\nYour function should spit out:\\n- `$` + earned that day (rounded to the nearest hundreth)\\n\\n### Examples\\n```\\nover_time([9, 17, 30, 1.5]) ➞ \\\"$240.00\\\"\\n\\nover_time([16, 18, 30, 1.8]) ➞ \\\"$84.00\\\"\\n\\nover_time([13.25, 15, 30, 1.5]) ➞ \\\"$52.50\\\"\\n```\\n\\n2nd example explained:\\n- From 16 to 17 is regular, so `1 * 30` = 30\\n- From 17 to 18 is overtime, so `1 * 30 * 1.8` = 54\\n- `30 + 54` = $84.00\",\"lab\":\"Test.assert_equals(over_time([9, 17, 30, 1.5]), \\\"$240.00\\\")\\nTest.assert_equals(over_time([9, 18, 40, 2]), \\\"$400.00\\\")\\nTest.assert_equals(over_time([13, 20, 32.5, 2]), \\\"$325.00\\\")\\nTest.assert_equals(over_time([9, 13, 25, 1.5]), \\\"$100.00\\\")\\nTest.assert_equals(over_time([11.5, 19, 40, 1.8]), \\\"$364.00\\\")\\nTest.assert_equals(over_time([10, 17, 30, 1.5]), \\\"$210.00\\\")\\nTest.assert_equals(over_time([10.5, 17, 32.25, 1.5]), \\\"$209.63\\\")\\nTest.assert_equals(over_time([16, 18, 30, 1.8]), \\\"$84.00\\\")\\nTest.assert_equals(over_time([18, 20, 32.5, 2]), \\\"$130.00\\\")\\nTest.assert_equals(over_time([13.25, 15, 30, 1.5]), \\\"$52.50\\\")\\nTest.assert_equals(over_time([13, 21, 38.6, 1.8]), \\\"$432.32\\\")\",\"language\":\"python3\",\"summary\":\"Write a function that calculates overtime and pay associated with overtime.\\nWorking 9 to 5: regular hours\\nAfter 5pm is overtime\\n\\nYour function gets a list with 4 values:\\nStart of working day, in decimal format, (24-hour day notation)\\nEnd of working day. (Same format)\\nHourly rate\\nOvertime multiplier\\n\\nYour function should spit out:\\n$ + earned that day (rounded t\",\"tags\":[\"algebra\",\"arrays\",\"math\",\"numbers\"],\"timestamp\":{\"$date\":1568736553965},\"title\":\"Working 9 to 5\",\"stats\":{\"completed\":{\"total\":85,\"ratings\":[3,3,3,3,3,2,4,5,3,2,4,5,3,2,3,1,2,2,2,5,5,0,3,4,4,1,4,5,2,4,4,3,2,3,3,3,2,0,2,5,2,2,3,2,3,2,4,1,4,4,4,3,2,0,4,4,1,4,3,4,1,4,4,2,4,1,2,3,1,4,3,3,3,0,3,2,4,0],\"rators\":[\"tAF9Gf6PiGogbZuWs\",\"3ifAHQzsMasfQySoL\",\"X4dSk5nKvacduox88\",\"gb9rvGus2Jv7bjZSs\",\"AYaEkTWLMmfzpwejr\",\"bto9pwvPJweistJKA\",\"Kugb2gBf7Dgr49nCY\",\"8JyqsSbN2FJXPr3cw\",\"h47zE2JaXAZBwxR9d\",\"CRBuiWyb9B8c5XW7w\",\"aiewS4ttQkzMquNrY\",\"hdm3457uPzJLghf8g\",\"Tin42WiZ4JTDEnS7b\",\"jHrtWDGBhkbuWa7fG\",\"D6Z9oT2ZhjBCxuL2o\",\"3mLcjFCw4MPHAEcKk\",\"FMHMYiNwBtZEGA2Nj\",\"s5M5RvgqR9BhB9JoC\",\"HqmxnQJM66Y57twhn\",\"QACQjfJKRdg3CqFxK\",\"Du863uXQ6TKWszNmA\",\"pMuvoqcmxHbuRSfb9\",\"8PwfYqoDQFThzNtvf\",\"DwetpbChQM4r6Gwah\",\"rPvq3ZKT8KGQoBdLx\",\"qJZsi5rhRnWA38FbA\",\"fz7SWP39DFns9FsgX\",\"ybtFmqyLs8hAua2fY\",\"2fxapKr8XGdNeaKi2\",\"eHcgvkTGsH7ZziqBo\",\"fF9rKQmnp5TpnnWGb\",\"Kg94pDSdZJ2wSkMcY\",\"fMR9RcfgPJWiLgx7k\",\"Jqk2uJZZxEv5wZFze\",\"J5T8gZqiZXFuFDTQ7\",\"EQbnbkkPYtGxiviTp\",\"C4QntmkYtB89GNtpd\",\"ZLagJxgCdmwzZX9QY\",\"KkQLhG5bps9BKQdx2\",\"WLFPvm65aHfgwQy7N\",\"aEm3Wvj2rFYRL8Lrb\",\"AasGs8AeX9Lcb9xJn\",\"e3sCrRtWKo5RPCDZt\",\"fznzd3qnvtbFkkizz\",\"tY4cq7gkSCi7zJap4\",\"kYWb8BwpKwunQkxeX\",\"aPLuemxzZ5iS57NBQ\",\"ZNnsMeNkdDhHjSrZb\",\"W5TajitmCyxz87zAC\",\"5dHucvf2qBYyKim7X\",\"4yNLEwL2rsx4EE5Nt\",\"ACEZh39brWjdGkZXb\",\"eWzYE7ZCQjHbNJpA7\",\"Z4M3NAa4TXquMNkHe\",\"6gS4E2C84vBYTYeDZ\",\"xpoFaSAWg8gBAJSNZ\",\"KZ2xddpM2f9JRaryB\",\"Nb6LYPoQP6KJZt8mz\",\"xn7uGNKeAwPEkP9oA\",\"f2BoqyCpgnmjEjLqx\",\"gSFJPsMXnqAog3Q9f\",\"HF28xZKSLM9wEuqNg\",\"Bof5WwcxWFQEkNTsN\",\"8sNv5PTHa7XQ8bNqR\",\"YvK4yEzw2uCvMcbzP\",\"iS5BrkGLzJyPK7nKt\",\"Z85ajWfZ4jDPkbvR4\",\"J3upzLHuEwXH7Z2hx\",\"iojEnnY9FsMfYzp6f\",\"GTKsdeEihE636Le9i\",\"yjtdwc2AC4jA2RWtn\",\"d8qtzoLB264iP8tdY\",\"srJ34BaybkQh3qRkM\",\"buX4mCQhtXCfBjeno\",\"W3esi7nZLHyXmyZSd\",\"MpfytGFYF77emJ3cT\",\"gKnWjDjwrJh7MK2df\",\"2PufnQcsHsfymufX3\",\"gXTAie79kiw28tx5u\",\"DPi9QGLctq2y76KuE\",\"T6iBEE2jp7f7iEF2P\"],\"quality\":[5,5,5,3,5,1,5,4]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"isHidden\":false,\"quality\":4.125,\"family\":[{\"_id\":\"P7MY8AsFPtDCtLDhg\",\"language\":\"cpp\"},{\"_id\":\"rkzH6YsPNgoJjn75i\",\"language\":\"csharp\"},{\"_id\":\"phxxGdTJraPEQmKdq\",\"language\":\"java\"},{\"_id\":\"kYwxQo9tqLpFYTMY6\",\"language\":\"javascript\"},{\"_id\":\"jDjDgRPpp9cTEPkKH\",\"language\":\"python3\"},{\"_id\":\"H45ofA47ha2W8h7Kg\",\"language\":\"ruby\"},{\"_id\":\"ocWEvQnS9AspndjTf\",\"language\":\"swift\"}]}}"]