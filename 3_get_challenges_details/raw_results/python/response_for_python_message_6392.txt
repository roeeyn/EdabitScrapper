a["{\"msg\":\"result\",\"id\":\"1904\",\"result\":{\"_id\":\"yuPWwSbCGPm2KzSzx\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"prices = {\\n\\t\\\"Strawberries\\\" : \\\"$1.50\\\",\\n\\t\\\"Banana\\\" : \\\"$0.50\\\",\\n\\t\\\"Mango\\\" : \\\"$2.50\\\",\\n\\t\\\"Blueberries\\\" : \\\"$1.00\\\",\\n\\t\\\"Raspberries\\\" : \\\"$1.00\\\",\\n\\t\\\"Apple\\\" : \\\"$1.75\\\",\\n\\t\\\"Pineapple\\\" : \\\"$3.50\\\"\\n}\\n\\nclass Smoothie:\\n\\t# Write code here!\\n\\t\",\"difficulty\":2.640449438202247,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"XW3PtBF4JBKNtkZbe\",\"instructions\":\"Create a class `Smoothie` and do the following:\\n- Create an *instance* attribute called `ingredients`. \\n- Create a `get_cost` method which calculates the total cost of the *ingredients used* to make the smoothie.\\n- Create a `get_price` method which returns the number from `get_cost` **plus** the number from `get_cost` multiplied by **1.5**. Round to **two decimal places**.\\n- Create a `get_name` method which gets the ingredients and puts them in **alphabetical order** into a nice descriptive sentence. If there are multiple ingredients, add the word *\\\"Fusion\\\"* to the end but otherwise, add *\\\"Smoothie\\\"*. Remember to change **\\\"-berries\\\"** to **\\\"-berry\\\"**. See the examples below.\\n\\nIngredient | Price\\n--- | ---\\nStrawberries | $1.50\\nBanana | $0.50\\nMango | $2.50\\nBlueberries | $1.00\\nRaspberries | $1.00\\nApple | $1.75\\nPineapple | $3.50\\n\\n### Examples\\n```\\ns1 = Smoothie([\\\"Banana\\\"])\\n\\ns1.ingredients ➞ [\\\"Banana\\\"]\\n\\ns1.get_cost() ➞ \\\"$0.50\\\"\\n\\ns1.get_price() ➞ \\\"$1.25\\\"\\n\\ns1.get_name() ➞ \\\"Banana Smoothie\\\"\\n```\\n\\n```\\ns2 = Smoothie([\\\"Raspberries\\\", \\\"Strawberries\\\", \\\"Blueberries\\\"])\\n\\ns2.ingredients ➞ [\\\"Raspberries\\\", \\\"Strawberries\\\", \\\"Blueberries\\\"]\\n\\ns2.get_cost() ➞ \\\"$3.50\\\"\\n\\ns2.get_price() ➞ \\\"$8.75\\\"\\n\\ns2.get_name() ➞ \\\"Blueberry Raspberry Strawberry Fusion\\\"\\n```\\n\\n### Notes\\nFeel free to check out the **Resources** tab for a refresher on classes.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"s1 = Smoothie([\\\"Banana\\\"])\\ns2 = Smoothie([\\\"Raspberries\\\", \\\"Strawberries\\\", \\\"Blueberries\\\"])\\ns3 = Smoothie([\\\"Mango\\\", \\\"Apple\\\", \\\"Pineapple\\\"])\\ns4 = Smoothie([\\\"Pineapple\\\", \\\"Strawberries\\\", \\\"Blueberries\\\", \\\"Mango\\\"])\\ns5 = Smoothie([\\\"Blueberries\\\"])\\n\\nTest.assert_equals(s1.ingredients, [\\\"Banana\\\"])\\nTest.assert_equals(s1.get_cost(), \\\"$0.50\\\")\\nTest.assert_equals(s1.get_price(), \\\"$1.25\\\")\\nTest.assert_equals(s1.get_name(), \\\"Banana Smoothie\\\")\\nTest.assert_equals(s2.ingredients, [\\\"Raspberries\\\", \\\"Strawberries\\\", \\\"Blueberries\\\"])\\nTest.assert_equals(s2.get_cost(), \\\"$3.50\\\")\\nTest.assert_equals(s2.get_price(), \\\"$8.75\\\")\\nTest.assert_equals(s2.get_name(), \\\"Blueberry Raspberry Strawberry Fusion\\\")\\nTest.assert_equals(s3.ingredients, [\\\"Mango\\\", \\\"Apple\\\", \\\"Pineapple\\\"])\\nTest.assert_equals(s3.get_cost(), \\\"$7.75\\\")\\nTest.assert_equals(s3.get_price(), \\\"$19.38\\\")\\nTest.assert_equals(s3.get_name(), \\\"Apple Mango Pineapple Fusion\\\")\\nTest.assert_equals(s4.ingredients, [\\\"Pineapple\\\", \\\"Strawberries\\\", \\\"Blueberries\\\", \\\"Mango\\\"])\\nTest.assert_equals(s4.get_cost(), \\\"$8.50\\\")\\nTest.assert_equals(s4.get_price(), \\\"$21.25\\\")\\nTest.assert_equals(s4.get_name(), \\\"Blueberry Mango Pineapple Strawberry Fusion\\\")\\nTest.assert_equals(s5.ingredients, [\\\"Blueberries\\\"])\\nTest.assert_equals(s5.get_cost(), \\\"$1.00\\\")\\nTest.assert_equals(s5.get_price(), \\\"$2.50\\\")\\nTest.assert_equals(s5.get_name(), \\\"Blueberry Smoothie\\\")\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[3,3,3,3,3,2,4,4,3,2,5,3,3,3,2,4,2,2,5,3,3,0,2,3,3,4,2,3,3,2,3,2,2,3,4,2,1,3,3,4,3,3,3,4,3,3,3,2,3,3,4,4,3,4,3,3,3,2,2,4,4,2,2,3,3,4,3,3,2,0,4,2,4,2,3,2,4,3,2,1,4,3,2,2,3,3,1,4,5,3,4,2,1,2,2,0,3,1,3,3,2,4,4,1,4,3,2,3,4,3,3,2,3,3,1,2,1,2,3,2,1,0,3,2,3,3,4,1,3,3,3,3,3,1,4,3,1,2,2,2,2,2,4,2,4,4,2,2,2,2,4,3,3,4,3,2,0,3,3,4,2,1,2,0,3,2,0,4,4,2,0,0,3,1,1,4,3,4],\"rators\":[\"gb9rvGus2Jv7bjZSs\",\"8PwfYqoDQFThzNtvf\",\"s5M5RvgqR9BhB9JoC\",\"hhDLeh3f2FNhpLSry\",\"2HMFHov8LPxFRTKig\",\"BequD5k9EfGgz8XZ6\",\"Q7Qy8oL8agXcYFDyP\",\"4xwButZn34q92d9Yn\",\"qcJrxNa4YdfHWEtPx\",\"aRqQ42J5zqCmBNd8w\",\"qJZsi5rhRnWA38FbA\",\"dNBGNMKLZam4bvHuZ\",\"LiW7nXr48ko64x82W\",\"tAF9Gf6PiGogbZuWs\",\"CByQtwf9BqB8jfEC3\",\"8LfTheFzvicameoz9\",\"R2nyPWAwyyJRRkcAP\",\"aoRaYQZEQPrJT22wX\",\"AasGs8AeX9Lcb9xJn\",\"P8ueo4xBBS4f8ktm2\",\"iS8rkeDrMv9mebwKp\",\"QN3AHCaTykyuE5k8B\",\"A5g5PhdQpmF7ohwsC\",\"esY84P5NBKF8TWHDv\",\"j6FdKCGGwvaSARaM9\",\"M9DhkxE77ztbJWz6e\",\"yZvzB3qFb8pkHy4dg\",\"5qxnDT2Kx3LHeSSFb\",\"aEm3Wvj2rFYRL8Lrb\",\"e8ZeTpEfLfSKaTTdp\",\"BByKDngfPvW6w4m7d\",\"KRmxvA4mWgfKvHmYN\",\"mCyBvGwKAWPTdBsMz\",\"8JyqsSbN2FJXPr3cw\",\"3Xd6WT95BrewRxWpF\",\"Cc2Cgj4MWXZxsTooC\",\"rdphcDZbc98nB3tNE\",\"ywk3XGvcmpTgRxwZa\",\"mDWNyaaQ9hvPCRzSd\",\"FgkYtHLxeD8pETJ8T\",\"YRstQuthRkFeBiXug\",\"N9m2Y6JJHu5gTvAiv\",\"RcFJfYquW9quJDnp5\",\"ShidTSJi6X9xdPFu9\",\"WtFQigNmNZ5EREPzo\",\"wT5gGgvjKc5wz59AQ\",\"7m8s7cADBu3XwGpxw\",\"KpHrC7WPEojnzgEtz\",\"4LxCvX6BseHajPb9C\",\"DHBGz3r4dCryvEDAp\",\"fxdGNWYS6PWMmswrF\",\"gPvrBxxySDP2vpux3\",\"zT9LpkiwYjLviYYW6\",\"uzwYcrm8PvfHZR7YF\",\"fznzd3qnvtbFkkizz\",\"DQskEvAv5KiJDPtGF\",\"ZNnsMeNkdDhHjSrZb\",\"R3ucLSZd83gmBKXF2\",\"2tkaaSSTqhBDg3tiA\",\"R4SjTgDnpigJYDLyL\",\"DpqiRAm2yo3W2x4HX\",\"NaPpyhnXZ2XLtug83\",\"AGMQqooexrFXgMnET\",\"nFhYP8GPCW4qYLHTa\",\"JrADeNRHRTrvc98ry\",\"Wv2vJnEj8ywNmARoF\",\"CMdKkCoZdTpucBeTP\",\"f2BoqyCpgnmjEjLqx\",\"DYDJTyGgKFnBRLm2r\",\"MKJhn7goNzuGtB5y9\",\"JQ5uoxA4WZgN6HyJk\",\"a777e8chPvJkY3tKa\",\"XghikBbq7obhPSKjX\",\"sfoAF6eygyfp6MWx3\",\"W5TajitmCyxz87zAC\",\"eg5iwxQWCEYnktrcm\",\"Z4M3NAa4TXquMNkHe\",\"5ZR5C8Hh44gtGfMou\",\"4hWjYDZsdixzvKbqQ\",\"MK8HigdFigfJzHhyo\",\"gJYuGdkXEWWmGRLzu\",\"cykCKNJcqFBxz4T8s\",\"nMDMMPWxws2kTgGKk\",\"TzfFXjsN3n6kkFZSY\",\"pPtmnJ7q9QchoG2Jq\",\"n2BRY9X8899dcG8Bw\",\"Ecg4m7srYGgZsb4Ck\",\"ZJQW3bL2KzxJcdEoc\",\"JmkgMJyvrvqTMfdqF\",\"dzS6WBTMHyFEag6Fp\",\"9PoKio8SZZtinmTCf\",\"mzhB3LXoJ2EGyqr3n\",\"Pe8vWpDHRuH9nSGKW\",\"qab4tYm6vJQcpKLfi\",\"xn7uGNKeAwPEkP9oA\",\"nys6kJatAFrKL59Pf\",\"kQCnJdq4psgrpvphr\",\"fK2ousiaKc5gvevyW\",\"tXNgbxmMDqkvLc76o\",\"K4JsBLPjNKZv5LWnp\",\"ZmTp5yHZXcQSzRxja\",\"cR2YL369v9ifrcw2v\",\"WzEhzQcMwc4sw8z7T\",\"TM2t3Le4qPcqSnzKX\",\"s6qiPXptvyxxEy3vm\",\"RuvsqfBoAzmjPyoSW\",\"sCChapdzgzdhcvonx\",\"rGpPd6PvpzLaqps4g\",\"BrTDhPJcACL2bsrpJ\",\"d8qtzoLB264iP8tdY\",\"tpxMgkGSHwBjS95Ta\",\"zZDaXBxMzTCBhNkgL\",\"E7Qn6yKjwGJd6EPqM\",\"bRk5vhHC34JLgTeAa\",\"6F3Y6ZBAGNDGGTt9B\",\"hXoTNPPmJLzkZnkSX\",\"5rEiiwNW8YGxvWuH5\",\"vSvippNru5pBnJQJn\",\"SJAYbvLdYW794sCEi\",\"wFws9y3mXvC4vL9Q2\",\"Yp7uvStL97cC9fKkY\",\"JGAQgGGrsRMmeANJh\",\"5JGnoBpw84hhmmuhf\",\"yjtdwc2AC4jA2RWtn\",\"jSaW4kdeAAGoLxcuP\",\"p8qqFdJ3FSk5x9z3G\",\"mmt7jwqbmSjzRSvqh\",\"DqLLJmvonxtaq5nbv\",\"6dZFWNGPH8GKYA8sN\",\"dHConQk6pC8c323TE\",\"ANbSYXiYsp4addoDq\",\"SExX3m5YftBWmsk2e\",\"6xTu4r8NMczBFvmtz\",\"5S9nX4rKsnCcnv4Cz\",\"D2B5zXAoub33DEC86\",\"8sNv5PTHa7XQ8bNqR\",\"eqa6cvt5yha7z7dPt\",\"hRAd998MG8Jzdpxj6\",\"RyWd7ieDg3PAWLpBa\",\"DNACg4rcgZsPtYGZ8\",\"CEd9tLdXeDeNHSzys\",\"h4x2jaMdj5aQZbW5g\",\"9MER8SZ9Xo6xNYMj8\",\"mmL9RSPSyf9s5wfN8\",\"o4wnhXS98h3o4927m\",\"faSkthCez3xqBCi35\",\"tBZPtvo6Zrq3bPbsT\",\"axdSNLZpiCDF8RS6n\",\"r9hcWPFRkykfmBh9d\",\"rx88g3SpXfGecJigj\",\"xpGSi4pXEaJnL6KMR\",\"7ifh8r4gvyYMhKB94\",\"qPpQfR5KyDb5Y3EFf\",\"nFbmNzMQ38TncmfQX\",\"fSQSHjW3e72MrWxbD\",\"Lg4t6SEWgtYz4u7Cj\",\"BdnE4RS5puoxo92mA\",\"StNu7DPyTgEStZsMY\",\"eYfPWvZwnJQkHbSTK\",\"iS5BrkGLzJyPK7nKt\",\"qAby4AWXmTNeusvg3\",\"hkiz2Nv927cYGrA86\",\"dJzNF59j2p8jWZxiQ\",\"ScaZG69jog5kcqGtQ\",\"H5ETWhd4TTWDDCx2j\",\"jhpjLPkSo6yjCPNwe\",\"2EbDCCJJvCfKkbYia\",\"eMuCpJ2spXWkJjWNz\",\"gXTAie79kiw28tx5u\",\"QRv96jmNaYsWkxQEG\",\"QHcNEadRcCStpv7dj\",\"wwMcJQRvf3X59Jyev\",\"Y6w9WxXzRweSiy3Ls\",\"iojEnnY9FsMfYzp6f\",\"8nE8QHnFYsHCFebte\",\"bvmTE46bfcM4ogj34\",\"EsvHn9XYzGQurJpSk\",\"9pzFiFK3ANLjQfnr2\",\"9Gf6g4fuKc3uou9w2\",\"WsCqifua4yHhKp6N9\",\"kB7vZaNsDMSJQJTdb\",\"HhYCji7QqauyN3A7v\",\"2PufnQcsHsfymufX3\",\"mzsaCBQP3e6YourDN\",\"FgA9hxXkjxe2pH6Af\",\"Afnps7TJQuS9sipMb\",\"zBk2cwJ9SLAhFuM3K\",\"GShFyQvHxf7W5jj3A\",\"H9KZi2cjt4FwH7qog\",\"jBSEY9K3R7jRmH9Bf\",\"HqmxnQJM66Y57twhn\",\"MpfytGFYF77emJ3cT\",\"2NDSt8HyP33cFRHsu\",\"8psDmXRuN9cvZqhaZ\",\"974cv448kw6Wu2JF6\",\"JKb5rhL6DKcCAypF9\",\"23oi2a3vQwhtLEbSj\",\"gKnWjDjwrJh7MK2df\",\"kQH5b8MXJunh84Czq\",\"nQRzZKeDKuLRf9chX\",\"T6iBEE2jp7f7iEF2P\",\"yAia3z7kTm8anHb7Z\",\"CoutYG4M83EHyYuqt\",\"GTKsdeEihE636Le9i\",\"5kazQPq8ZdDsx6kjf\",\"2qtde7moqrzm7B4Ht\",\"oBcs8GLX2ZFLXQy8y\",\"fbr22rabEJMfBp7vD\",\"syRNbbPdLCGXbH2Gy\",\"rQA9SE8nuwFueaHsR\",\"h5qJugRyff3DdnSic\",\"gubMgYwJY2ZtppWPS\"],\"total\":232,\"quality\":[4,3,3,2,4,5,3,3,3,3,5,1,5,5,5,4,5,4,5,3,5,5,3,4,5,5,5,5,5,5,5,5,5,5,5,2,5,4,5]},\"flags\":0},\"summary\":\"Create a class Smoothie and do the following:\\nCreate an instance attribute called ingredients.\\nCreate a get_cost method which calculates the total cost of the ingredients used to make the smoothie.\\nCreate a getprice method which returns the number from getcost plus the number from get_cost multiplied by 1.5. Round to two decimal places.\\nCreate a get_name metho\",\"tags\":[\"classes\",\"formatting\",\"objects\",\"data_structures\"],\"timestamp\":{\"$date\":1582839065546},\"title\":\"Fruit Smoothie\",\"quality\":4.17948717948718,\"family\":[{\"_id\":\"rYKtzcuCQ9FQ9t9pH\",\"language\":\"csharp\"},{\"_id\":\"7ytmgtAXGAccwpvJN\",\"language\":\"javascript\"},{\"_id\":\"yuPWwSbCGPm2KzSzx\",\"language\":\"python3\"}]}}"]