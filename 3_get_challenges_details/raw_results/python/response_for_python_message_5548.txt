a["{\"msg\":\"result\",\"id\":\"1486\",\"result\":{\"_id\":\"7jcWz9Kmr4rTSwdjK\",\"archived\":false,\"author\":\"kochug\",\"authorId\":\"vQEmjTRgmdGNYB7yk\",\"code\":\"def prime_factorize(num):\\n\\t\",\"difficulty\":2.07103825136612,\"familyId\":\"5acXQd7RQsPfaJq4W\",\"instructions\":\"Write a function to find all the prime factors of a given integer. The function must return a list containing all the prime factors, sorted in ascending order. Remember that *1 is neither prime nor composite* and should not be included in your output list.\\n\\n### Examples\\n```\\nprime_factorize(25) ➞ [5, 5]\\n\\nprime_factorize(19) ➞ [19]\\n\\nprime_factorize(77) ➞ [7, 11]\\n```\\n\\n### Notes\\n- Output list must be sorted in ascending order.\\n- The only positive integer which is neither prime nor composite is 1. Return an empty list if 1 is the input.\",\"lab\":\"Test.assert_equals(prime_factorize(32), [2, 2, 2, 2, 2])\\nTest.assert_equals(prime_factorize(17), [17])\\nTest.assert_equals(prime_factorize(35), [5, 7])\\nTest.assert_equals(prime_factorize(2), [2])\\nTest.assert_equals(prime_factorize(1), [])\\nTest.assert_equals(prime_factorize(2591), [2591])\\nTest.assert_equals(prime_factorize(2532), [2, 2, 3, 211])\",\"language\":\"python3\",\"summary\":\"Write a function to find all the prime factors of a given integer. The function must return a list containing all the prime factors, sorted in ascending order. Remember that 1 is neither prime nor composite and should not be included in your output list.\\n\\nExamples\\nprime_factorize(25) ➞ [5, 5]\\n\\nprime_factorize(19) ➞ [19]\\n\\nprime_factorize(77) ➞ [7, 11]\\n\\nNotes\\nOu\",\"tags\":[\"math\",\"recursion\",\"logic\",\"numbers\"],\"timestamp\":{\"$date\":1524286990515},\"title\":\"Factor Tractor\",\"stats\":{\"completed\":{\"total\":200,\"ratings\":[1,1,1,1,1,2,2,2,0,1,2,2,3,4,1,2,3,2,2,1,2,3,2,3,2,1,2,2,2,1,2,2,3,2,2,1,3,2,1,3,3,2,2,1,1,2,2,3,2,1,2,0,3,2,3,2,5,2,4,2,3,2,2,3,3,3,2,4,3,3,3,2,3,3,3,0,4,2,2,4,1,2,2,0,2,2,2,2,2,2,3,2,2,2,3,0,2,2,2,3,2,2,2,3,3,2,3,3,3,3,2,0,2,3,2,1,5,3,3,1,2,3,3,4,3,1,1,3,3,3,1,3,2,2,2,0,2,2,1,0,3,3,2,2,4,1,0,2,3,1,1,2,3,2,0,2,1,0,0,3,0,2,3,5,2,0,5,3,4,0,0,2,3,2,2,3,2,1,2,0,0,0,3],\"rators\":[\"vQEmjTRgmdGNYB7yk\",\"tuyDaJzFy78jxvhCY\",\"6fJpRpAgiWD5zX9qB\",\"HfXaiByRyvX5G5smB\",\"iEMnJaXXfa6dzdQzb\",\"23oi2a3vQwhtLEbSj\",\"5JXnPbYC8RuBG6FkM\",\"ewyPo746vdNES9LwS\",\"GRZzKCbeb4xKHFCrZ\",\"ZxF3LkWqeo4fe4ziK\",\"QjpzasKxy3xBakLzz\",\"m2iiZZHTpzHcEKJMn\",\"LfR9Bopm57BMNNnkp\",\"mgJoduE8pStdjNmPD\",\"pdcaC4fEtsubBz4Wo\",\"4iaMd3hbW6kQLoA8X\",\"3aSufMRSzHQ3cuo9n\",\"jDoFYBX4iQiTXFEdf\",\"wPhd86JGzcCkkQdyy\",\"QyYmR6GqGSiw8KXYc\",\"mCMD9CNp9rA7tbYoB\",\"HEeRh33SBQgtmjXkt\",\"z9xT3TpMJzjSn9Tfy\",\"wsLXJ3frxkTxTs9mh\",\"tAF9Gf6PiGogbZuWs\",\"YG776yzpLWoxa5GJs\",\"3hnNN45MzxXW7uPR8\",\"M8jrv2FfpMQp9Qzpx\",\"Qm7WibLuCP7hW3iXi\",\"mJvkMXND2BjRvtped\",\"T82JyZFPNz8maF8f8\",\"ktw5fXRXnoY9em4wd\",\"SK3kJggzuets9AFj6\",\"QgdwHjy4x6MCPwfh9\",\"RsX6W2ddWM8ajHzss\",\"Nj6FwgBtAXsaQwsM2\",\"uJ5A3zjLi9iN5eeXX\",\"3neNxwsu4hBCJygxk\",\"PAjQoyYKAkYAXERhf\",\"xQ7uLC6QTtEyKENv9\",\"TJQcScCtNRobD8P4k\",\"zgoEhAyhrjnsSLPGw\",\"ArC3TpnruJnWYDzHM\",\"6W2GSzrYjMD9ANBFY\",\"jwgBL9AKmfxPCFoTo\",\"PRPv763woB2EqjWvZ\",\"mGmoXwXiopnnnqYdh\",\"Jqk2uJZZxEv5wZFze\",\"8JyqsSbN2FJXPr3cw\",\"HCYabH5mZ7ANumb5R\",\"gb9rvGus2Jv7bjZSs\",\"qvEvDcL32a5F4Tg6c\",\"SKabuq5XuhXBugKBa\",\"cHCCCEqvGRbpKacaJ\",\"yZvzB3qFb8pkHy4dg\",\"T3ZAuoMrJjvZwN55B\",\"hsrNYf3WbexXJKhCq\",\"B8YwFpo5GupjWPydB\",\"ttyPhXiY7TTnpaM6B\",\"9Gf6g4fuKc3uou9w2\",\"kQH5b8MXJunh84Czq\",\"5J4tAkdA45c76xAfk\",\"ab7BsQuhDo3QgE6bh\",\"YSAX9n8WAf6zFKLPS\",\"QaE2QnnBbzdiExxPH\",\"MXjxGML2X75x64vJo\",\"ahWFxnaxt9bXSA4f3\",\"PFjMZGHNAPTkgd7tq\",\"nF9pCCzbGDhzvWgaw\",\"AF6LgdKhEdzwgRJom\",\"7g3vZaQXhLpxrajyg\",\"6u7yc9m6HuHGbHzph\",\"zE3XYWJmnn6C8A2gR\",\"C9LKGu2g5hSijvDzA\",\"nfXGHENb5md7m355s\",\"zjQPuEyZ38tTW6P5w\",\"AYaEkTWLMmfzpwejr\",\"xNnExyvwRFrYzfuQZ\",\"cR3ibTMxLyEdDFCHY\",\"gMJhLdyw3tH7L96X2\",\"aCNWav8S8Try9RkC6\",\"pBBTKo9vprWMe83gr\",\"AdMsAQ2MJPAw7uWfJ\",\"3bkCjbHpN3Lgp29y3\",\"Jg8ZSRXe3NoDMCqGu\",\"2fxapKr8XGdNeaKi2\",\"JiDXhxGzzSuXrBnmE\",\"jYJ26SiLKBu5GRumq\",\"g4SjQHKTor6qWACAe\",\"XKi8iZXBCHCaebSHh\",\"HqmxnQJM66Y57twhn\",\"otXtuQygbcYATMZoP\",\"hWoF9quQYAsSsFjRn\",\"xGnTgp9yQ5BTrcsut\",\"u5u2YpHXiNgzDNJdX\",\"TePz42wc3ZZ5CKA6L\",\"ekvdWQoiFkX5cQbk9\",\"s5M5RvgqR9BhB9JoC\",\"K96FwtfDDN5WM4Bb7\",\"Yp7uvStL97cC9fKkY\",\"C4QntmkYtB89GNtpd\",\"AasGs8AeX9Lcb9xJn\",\"8PwfYqoDQFThzNtvf\",\"4CFzv558qbGcpQwc4\",\"w3A7cBWyAfukk6xEQ\",\"PytNZK9mNiRiZxPrm\",\"v3fjGuc7Pq4yjFygS\",\"aEm3Wvj2rFYRL8Lrb\",\"Cc2Cgj4MWXZxsTooC\",\"YRstQuthRkFeBiXug\",\"mDWNyaaQ9hvPCRzSd\",\"ZNnsMeNkdDhHjSrZb\",\"T2QhZRhybEKeJTb44\",\"kYWb8BwpKwunQkxeX\",\"wT5gGgvjKc5wz59AQ\",\"EjbDDFRECrzQDkzrX\",\"7CMCKFK3J6dw57T3n\",\"ywk3XGvcmpTgRxwZa\",\"QDrLtnBsA2LJfptvT\",\"Ecy2fPuyYDLKmRkcg\",\"cTo3czssohzGLQQa7\",\"mFqrAKcfZZM58iYmw\",\"Sj4iamMmNvxwWJBiF\",\"gJYuGdkXEWWmGRLzu\",\"LQxof8pGabGuWP7Gn\",\"YLtspA8ec6ntcoMMf\",\"yoLy2DcMG3nZXNwv2\",\"9XNbjEKxsC89aX6ae\",\"hab8YixsXxe4CcZpP\",\"9mZAYh2ca7j3vmwhj\",\"n2BRY9X8899dcG8Bw\",\"Ecg4m7srYGgZsb4Ck\",\"HF28xZKSLM9wEuqNg\",\"Fk3QeAc2JGSbQriNQ\",\"cykCKNJcqFBxz4T8s\",\"RnTBbuFCrJWW6Ayvj\",\"iojEnnY9FsMfYzp6f\",\"DEDniTrstQYGounXT\",\"KZ2xddpM2f9JRaryB\",\"zZDaXBxMzTCBhNkgL\",\"ekQh3jzgGLsEMbKo3\",\"Pe8vWpDHRuH9nSGKW\",\"yjtdwc2AC4jA2RWtn\",\"bJxaKHJqR82EWw8Su\",\"xn7uGNKeAwPEkP9oA\",\"R4SjTgDnpigJYDLyL\",\"gMjAMD8XPK9sbx7eT\",\"hXoTNPPmJLzkZnkSX\",\"hnyhBFWwNCz9mDfSi\",\"w2HhxvSLmDhaGCAjE\",\"qYDRywWRZdswy4b6e\",\"HnoDeuYM8h3PkXtSz\",\"QRv96jmNaYsWkxQEG\",\"DPi9QGLctq2y76KuE\",\"KEmTti9Tza8A2FLQW\",\"J3upzLHuEwXH7Z2hx\",\"gXTAie79kiw28tx5u\",\"ddyTp8rr9m4pNuASn\",\"oBcs8GLX2ZFLXQy8y\",\"yr822PZmmiDDenxpB\",\"9pzFiFK3ANLjQfnr2\",\"R29kgJ9M7R4qqwjcE\",\"T2vhHPhRR96hRizq8\",\"cAP3n5NY64uoMwzRR\",\"7txFzDQ43vJ7qCY88\",\"PWgzeK859suojbrRx\",\"pfbrH83s66L2EZQsH\",\"srJ34BaybkQh3qRkM\",\"GGdmhAvxXhqhhibJN\",\"FEYpu9RWysAgW3XnP\",\"rfyEkETeoS96QNH4e\",\"eHcgvkTGsH7ZziqBo\",\"ffnTZds3GcXuKG2zD\",\"CHvzhtXnv8HTbPQ56\",\"J5T8gZqiZXFuFDTQ7\",\"9izxzCBrsRCbD9ajK\",\"4RY3zj9C2t8GGefhi\",\"T6iBEE2jp7f7iEF2P\",\"gKnWjDjwrJh7MK2df\",\"rhS8qXRjZcpDXkwnE\",\"2PufnQcsHsfymufX3\",\"o4ixjQGSaYqA2JoM4\",\"yod5YhKtPqw2GfG9B\",\"buX4mCQhtXCfBjeno\",\"xqYQMujmvgQ78bnJc\",\"8sNv5PTHa7XQ8bNqR\",\"Dh7eZuDtu7EMWiDj6\",\"d8qtzoLB264iP8tdY\",\"n2qKKxomPnb4zez5M\",\"5HCu9Ydd86QgHDRNP\",\"Qyfyyw6oC4EHAndzo\"],\"quality\":[5,5,2,5,5,5,5,5,5,5,5,5]},\"complaints\":{\"total\":0,\"reasons\":[],\"skippers\":[\"vQEmjTRgmdGNYB7yk\"]},\"instructions\":{\"score\":-27.950000000000003,\"voters\":[\"64XnrBCiksbcosGZC\",\"jof69WcnftfNoD2f3\",\"SKabuq5XuhXBugKBa\"]},\"tests\":{\"score\":0,\"voters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.75,\"family\":[{\"_id\":\"5KbbHuNpzyJoEXEru\",\"language\":\"cpp\"},{\"_id\":\"zWf4ayT7nbTsxYgRe\",\"language\":\"javascript\"},{\"_id\":\"7jcWz9Kmr4rTSwdjK\",\"language\":\"python3\"},{\"_id\":\"kWhsgeNukcJPK9nmB\",\"language\":\"ruby\"}]}}"]