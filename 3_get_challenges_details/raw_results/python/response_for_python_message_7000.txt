a["{\"msg\":\"result\",\"id\":\"2211\",\"result\":{\"_id\":\"5GW5Kb2RpGwhHax2W\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"def spiral_transposition(lst):\\n\\t\",\"difficulty\":3.418032786885246,\"familyId\":\"4gjYWP5tKMSpyvKqE\",\"instructions\":\"Create a function that takes a two-dimensional list as an argument and returns a one-dimensional list with the values of the original 2d list that are arranged by spiralling through it (starting from the top-left).\\n\\n### Examples\\n```\\nspiral_transposition([\\n  [7, 2],\\n  [5, 0]\\n])\\n\\n➞ [7, 2, 0, 5]\\n\\nspiral_transposition([\\n  [1, 2, 3],  \\n  [4, 5, 6],\\n  [7, 8, 9]\\n])\\n\\n➞ [1, 2, 3, 6, 9, 8, 7, 4, 5]\\n\\nspiral_transposition([\\n  [1, 1, 1],  \\n  [4, 5, 2],\\n  [3, 3, 2] \\n])\\n\\n➞ [1, 1, 1, 2, 2, 3, 3, 4, 5]\\n```\\n\\n### Notes\\nIf you do not understand the instructions, write the 3x3 list example on a piece of paper and trace the output through it.\",\"lab\":\"Test.assert_equals(\\n  spiral_transposition(\\n    [\\n      [7, 2],\\n      [5, 0]\\n    ]\\n  ), \\n  [7, 2, 0, 5], \\n  'Should work with a 2x2 array'\\n  )\\n\\nTest.assert_equals(\\n  spiral_transposition(\\n    [\\n      [1, 2, 3], \\n      [4, 5, 6], \\n      [7, 8, 9]\\n    ]\\n  ), \\n  [1, 2, 3, 6, 9, 8, 7, 4, 5], \\n  'Should work with a 3x3 array'\\n  )\\n\\nTest.assert_equals(\\n  spiral_transposition(\\n    [\\n      [1, 9, 9], \\n      [2, 4, 9], \\n      [7, 3, 9]\\n    ]\\n  ), \\n  [1, 9, 9, 9, 9, 3, 7, 2, 4], \\n  'Should work with a 3x3 array'\\n  )\\n\\nTest.assert_equals(\\n  spiral_transposition(\\n    [\\n      [6, 4, 3, 9], \\n      [2, 5, 7, 1], \\n      [8, 6, 2, 3], \\n      [4, 5, 9, 1]\\n    ]\\n  ), \\n  [6, 4, 3, 9, 1, 3, 1, 9, 5, 4, 8, 2, 5, 7, 2, 6], \\n  'Should work with a 4x4 array'\\n  )\\n\\nTest.assert_equals(\\n  spiral_transposition(\\n    [\\n      [4, 1, 55, 5, 9], \\n      [16, 7, 6, 5, 3], \\n      [8, 20, 2, 0, 8], \\n      [2, 9, 9, 1, 11],\\n      [6, 5, 3, 18, 5]\\n    ]\\n  ), \\n  [4, 1, 55, 5, 9, 3, 8, 11, 5, 18, 3, 5, 6, 2, 8, 16, 7, 6, 5, 0, 1, 9, 9, 20, 2], \\n  'Should work with a 5x5 array'\\n  )\\n\\nTest.assert_equals(\\n  spiral_transposition(\\n    [\\n      [1, 5],\\n      [9, 2], \\n      [7, 3]\\n    ]\\n  ),  \\n  [1, 5, 2, 3, 7, 9], \\n  'Should work when there are more rows than collumns'\\n  )\\n\\nTest.assert_equals(\\n  spiral_transposition(\\n    [\\n      [2, 4, 6, 8], \\n      [7, 3, 0, 5]\\n    ]\\n  ),  \\n  [2, 4, 6, 8, 5, 0, 3, 7], \\n  'Should work when there are more collumns than rows'\\n  )\",\"language\":\"python3\",\"summary\":\"Create a function that takes a two-dimensional list as an argument and returns a one-dimensional list with the values of the original 2d list that are arranged by spiralling through it (starting from the top-left).\\n\\nExamples\\nspiral_transposition([\\n  [7, 2],\\n  [5, 0]\\n])\\n\\n➞ [7, 2, 0, 5]\\n\\nspiral_transposition([\\n  [1, 2, 3],\\n  [4, 5, 6],\\n  [7, 8, 9]\\n])\\n\\n➞ [1, 2, 3\",\"tags\":[\"arrays\",\"loops\",\"math\",\"recursion\"],\"timestamp\":{\"$date\":1552390876695},\"title\":\"Spiral Transposition\",\"stats\":{\"completed\":{\"total\":127,\"ratings\":[2,2,2,2,2,2,2,2,2,2,3,3,2,3,3,4,3,2,2,4,4,5,4,2,4,5,4,3,2,4,3,4,5,5,3,0,5,2,4,5,5,5,5,0,3,0,1,5,3,2,3,5,0,0,5,5,5,5,5,3,3,5,0,4,0,5,3,5,3,5,4,4,5,3,4,2,3,4,5,5,3,5,5,3,4,1,4,2,4,5,5,3,5,5,3,5,3,5,5,5,1,4,5,5,2,2,2,5,4,5,4,2,1,5,4,5,5,4,5,2,3,3],\"rators\":[\"BkPgkDQGHm66X4Qai\",\"qaR8DnWrTk8Mus5Q2\",\"Jqk2uJZZxEv5wZFze\",\"cHCCCEqvGRbpKacaJ\",\"8JyqsSbN2FJXPr3cw\",\"tAF9Gf6PiGogbZuWs\",\"yZvzB3qFb8pkHy4dg\",\"gb9rvGus2Jv7bjZSs\",\"T3ZAuoMrJjvZwN55B\",\"C9LKGu2g5hSijvDzA\",\"jYJ26SiLKBu5GRumq\",\"XKi8iZXBCHCaebSHh\",\"dvmrZXzqS7b6ruPXP\",\"qJZsi5rhRnWA38FbA\",\"AYaEkTWLMmfzpwejr\",\"2fxapKr8XGdNeaKi2\",\"ogyeeaEAjmdSBsnta\",\"5F8kWn4n7fQbnf88e\",\"stKEm7Cdsauxmhw5Z\",\"3bkCjbHpN3Lgp29y3\",\"hWoF9quQYAsSsFjRn\",\"rurh72mGpAthfGRGt\",\"HqmxnQJM66Y57twhn\",\"8PE2cfZEhQBPhe8LG\",\"PA6JbX3Y7AAhCdPCg\",\"fxgjP2DzARKtZrS8i\",\"mhW5m8MCLZcMzHJoZ\",\"NSCWFQBMJnKFEaDi4\",\"JqTdj55bF76zrL3SQ\",\"JKb5rhL6DKcCAypF9\",\"fngqDBFfuXC8bx5vy\",\"8PwfYqoDQFThzNtvf\",\"6MWbxDS6jMhQ7d3ZS\",\"LtD5jQnA63GoHjAq2\",\"hwLAvyumMvYXNv3j5\",\"hrzGaJc9KZqgjAvew\",\"sZDYNicocwXesSMXb\",\"73qytxgW4ZHhPjufr\",\"DwetpbChQM4r6Gwah\",\"azHSATBuuQ5wz9bvB\",\"8fL25th7YHCydayfb\",\"Q2q7wd5e5cfCrwPxq\",\"LzAr38NtigjfEfdzR\",\"X4iqEdg7dPjFpoASw\",\"MnKNe7LFgdyerxPHZ\",\"t7BnRyo7NH5Nx22HR\",\"pzZMMmJRaxwGAgaTH\",\"de3DhFz9dW8vdPanZ\",\"4oj74SdrYfpJgEAmd\",\"rQWctcxr7vvh32DoM\",\"nmXg7Hfeh3jMLHSsa\",\"dNBGNMKLZam4bvHuZ\",\"RLZNhkySvw3Lhzqb2\",\"fMR9RcfgPJWiLgx7k\",\"5nY48krepaT4a4QTN\",\"uBQABDM75oshRXjn4\",\"aCNWav8S8Try9RkC6\",\"LsL3axAGtFcysTLGj\",\"bLpgu8xTdpDPFSAsM\",\"4YXNcgvGg7dygvqpH\",\"6gsMupsCZJQgiwzJi\",\"FgkYtHLxeD8pETJ8T\",\"R3YoPdvDu9rxbLDya\",\"pSdBNsFmshP4TAa7y\",\"hAzy9apJgLWwRFGPJ\",\"6W2GSzrYjMD9ANBFY\",\"ySRnygsLwGGsmZhfa\",\"SGhPxX5bHGL8zZqtt\",\"GiK8LZt3JRKNJjj5W\",\"jrCAuRRE7GeNS8T55\",\"jGrqoesacgEqRRNad\",\"SuJeLnhfR3smGu3WZ\",\"kDq2TnPdy7hGKdAD5\",\"AJwBauGHyrbqgDYce\",\"aEm3Wvj2rFYRL8Lrb\",\"oTm8JAxW6Kxed8P6B\",\"9uZpgAtSuPZ7W7DL6\",\"wsHhtbDh6ExixZ7d5\",\"m4taAgaxZCTTYMhFr\",\"mDWNyaaQ9hvPCRzSd\",\"ftXLsTaA7yHmhuEsY\",\"wT5gGgvjKc5wz59AQ\",\"YRstQuthRkFeBiXug\",\"bJaPCBx63YxdJAuTS\",\"vTfyrr4pGddp8rbXc\",\"HmKFZqFH9YC346djy\",\"hAcYeP2bPsvZoFBFw\",\"ZNnsMeNkdDhHjSrZb\",\"6gtuv2QLYpq4DeZWT\",\"PWAySsq7gkZWHjaZm\",\"5H9MNfC4DPwxbakTf\",\"3MybBtCNPcFHLMYmJ\",\"ywk3XGvcmpTgRxwZa\",\"5dHucvf2qBYyKim7X\",\"DNGkwLuAzEACszkAx\",\"bJxaKHJqR82EWw8Su\",\"4fhjJBvLBWh6QeSih\",\"SgZ2t9xFuRqdJGofp\",\"cxABox46qWvJRyidE\",\"w969M94NZXXLSMZ4L\",\"s5M5RvgqR9BhB9JoC\",\"xn7uGNKeAwPEkP9oA\",\"AQECHYqcH2rFsZM8p\",\"6428wKHtwKkFdvBs5\",\"iS5BrkGLzJyPK7nKt\",\"WPf3wuMaAipBActzR\",\"SbGLSZ5piLATC8bop\",\"58M252WF7SPRinfBx\",\"mH5AfrrfASMdRvhtK\",\"b3Dk2LqoEgripS3Y3\",\"8sNv5PTHa7XQ8bNqR\",\"eHcgvkTGsH7ZziqBo\",\"RPRcgD7cas8ghXBP3\",\"J3upzLHuEwXH7Z2hx\",\"GTKsdeEihE636Le9i\",\"yjtdwc2AC4jA2RWtn\",\"2PufnQcsHsfymufX3\",\"gJYuGdkXEWWmGRLzu\",\"d8qtzoLB264iP8tdY\",\"buX4mCQhtXCfBjeno\",\"2dJfQypbzX7Fz9r3e\"],\"quality\":[5,5,5,4,5,5,5,5]},\"tests\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"instructions\":{\"score\":12.75,\"rators\":[\"BkPgkDQGHm66X4Qai\"],\"voters\":[\"qaR8DnWrTk8Mus5Q2\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.875,\"family\":[{\"_id\":\"jZkyy7tgMoQFJ3QgL\",\"language\":\"cpp\"},{\"_id\":\"gdmrXxEej2fPZtF4S\",\"language\":\"javascript\"},{\"_id\":\"5GW5Kb2RpGwhHax2W\",\"language\":\"python3\"},{\"_id\":\"YPJKHBbh7scm3yZjp\",\"language\":\"ruby\"}]}}"]