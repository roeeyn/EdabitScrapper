a["{\"msg\":\"result\",\"id\":\"2221\",\"result\":{\"_id\":\"Fz92j7nQEkoRXhRE7\",\"author\":\"RandyWaterhouse\",\"authorId\":\"AraFx3EGW7PsqMPWt\",\"code\":\"def jumping_frog(n, stones):\\n\\t\",\"difficulty\":3.4444444444444446,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"qCKTmhJn9FnudbKRC\",\"instructions\":\"A frog wants to cross a river. Unfortunately, he can't jump across in a single leap. Luckily, there are `n` stones in the river.\\n\\nThe frog can jump from the near bank to stone `1` and from stone `n` to the far bank. He can also jump from stone to stone, forward and backward. However, on each stone, a number `j` is written and he must only jump exactly `j` stones backward or forward.\\n\\nReturn the minimum number of jumps to cross the river (including jumps to the first stone and from the last stone (or any other stone, if possible) to the far bank) or `no chance :-(` if it's not possible to cross the river.\\n\\n### Examples\\n```\\njumping_frog(5, [1, 1, 1, 1, 1]) ➞ 6\\n\\njumping_frog(5, [1, 3, 1, 1, 1]) ➞ 4\\n\\njumping_frog(5, [1, 1, 0, 1, 1]) ➞ \\\"no chance :-(\\\"\\n```\\n\\n### Notes\\n- The frog may also reach the far bank from another stone than `n` if a large enough number is written on it.\\n- `n` is at least 2.\",\"isHidden\":false,\"lab\":\"Test.assert_equals(jumping_frog(5, [1, 1, 1, 1, 1]), 6, \\\"simple stone-by-stone\\\")\\nTest.assert_equals(jumping_frog(5, [1, 3, 1, 1, 1]), 4, \\\"leapfrog 1\\\")\\nTest.assert_equals(jumping_frog(5, [1, 5, 1, 1, 1]), 3, \\\"leapfrog 2\\\")\\nTest.assert_equals(jumping_frog(8, [2, 8, 1, 1, 1, 1, 1, 1]), 4, \\\"leapfrog 3\\\")\\nTest.assert_equals(jumping_frog(5, [1, 1, 0, 1, 1]), \\\"no chance :-(\\\")\\nTest.assert_equals(jumping_frog(5, [1, 2, 0, 1, 1]), 5)\\nTest.assert_equals(jumping_frog(50, [3, 0, 2, 2, 1, 1, 4, 2, 4, 1, 2, 3, 3, 0, 1, 3, 1, 2, 1, 2, 0, 0, 2, 3, 2, 0, 4, 3, 3, 0, 3, 0, 0, 1, 4, 0, 4, 2, 1, 3, 2, 0, 2, 0, 0, 3, 1, 0, 4, 1]), \\\"no chance :-(\\\")\\nTest.assert_equals(jumping_frog(50, [4, 1, 2, 0, 4, 2, 3, 4, 4, 4, 4, 2, 1, 4, 0, 0, 2, 1, 4, 1, 2, 4, 1, 4, 2, 3, 0, 4, 0, 4, 3, 4, 3, 0, 2, 3, 4, 3, 4, 0, 1, 2, 2, 2, 1, 2, 1, 2, 3, 4]), 19)\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[3,3,3,3,3,2,4,5,5,0,5,1,5,5,5,4,3,4,3,5,1,0,2,4,3,3,5,2,5,3,2,4,5,5,5,2,4,3,5,2,4,5,5,5,0],\"rators\":[\"Jqk2uJZZxEv5wZFze\",\"cRpaCxYRmGcN3Nsoj\",\"tAF9Gf6PiGogbZuWs\",\"aCNWav8S8Try9RkC6\",\"fMR9RcfgPJWiLgx7k\",\"pSdBNsFmshP4TAa7y\",\"X4iqEdg7dPjFpoASw\",\"de3DhFz9dW8vdPanZ\",\"t7BnRyo7NH5Nx22HR\",\"8PwfYqoDQFThzNtvf\",\"aEm3Wvj2rFYRL8Lrb\",\"BByKDngfPvW6w4m7d\",\"DwetpbChQM4r6Gwah\",\"vTfyrr4pGddp8rbXc\",\"wT5gGgvjKc5wz59AQ\",\"3MybBtCNPcFHLMYmJ\",\"W5TajitmCyxz87zAC\",\"w8CnB7XMSgn2anXNB\",\"fznzd3qnvtbFkkizz\",\"YLtspA8ec6ntcoMMf\",\"pPtmnJ7q9QchoG2Jq\",\"6428wKHtwKkFdvBs5\",\"SGhPxX5bHGL8zZqtt\",\"Kg94pDSdZJ2wSkMcY\",\"hZW6j5s6RHpx35phy\",\"bJxaKHJqR82EWw8Su\",\"J83b6T9hJ2EqE5Aov\",\"n2BRY9X8899dcG8Bw\",\"xn7uGNKeAwPEkP9oA\",\"bJaPCBx63YxdJAuTS\",\"4fhjJBvLBWh6QeSih\",\"mDWNyaaQ9hvPCRzSd\",\"s5M5RvgqR9BhB9JoC\",\"fSgCtTbtfBQBmGM2m\",\"cLyRCsnvBPjisTmBG\",\"GDcZ8xLorv7c8tgkq\",\"h4x2jaMdj5aQZbW5g\",\"DPi9QGLctq2y76KuE\",\"sftR9DgM4jpwtxfAM\",\"Cia25zjeX3RkCNx5t\",\"58M252WF7SPRinfBx\",\"iS5BrkGLzJyPK7nKt\",\"EQu6oPhZ9mRChfYSz\",\"buX4mCQhtXCfBjeno\",\"8sNv5PTHa7XQ8bNqR\",\"eHcgvkTGsH7ZziqBo\",\"iojEnnY9FsMfYzp6f\",\"yjtdwc2AC4jA2RWtn\",\"2u9wghjCydey6aWys\",\"gJYuGdkXEWWmGRLzu\",\"ebpgWXQs6R3bqRrvM\"],\"total\":55,\"quality\":[5,5,5,5,2,5,4,4,5,1,5]},\"flags\":0},\"summary\":\"A frog wants to cross a river. Unfortunately, he can't jump across in a single leap. Luckily, there are n stones in the river.\\n\\nThe frog can jump from the near bank to stone 1 and from stone n to the far bank. He can also jump from stone to stone, forward and backward. However, on each stone, a number j is written and he must only jump exactly j stones backwar\",\"tags\":[\"algorithms\",\"arrays\",\"conditions\",\"loops\"],\"timestamp\":{\"$date\":1580226201487},\"title\":\"The Jumping Frog\",\"quality\":4.181818181818182,\"family\":[{\"_id\":\"u8C88DBjy3SL2hMjh\",\"language\":\"cpp\"},{\"_id\":\"DWCBTJpQnNC3bCCGL\",\"language\":\"javascript\"},{\"_id\":\"Fz92j7nQEkoRXhRE7\",\"language\":\"python3\"},{\"_id\":\"TEE3icx5MEZBZ6BxA\",\"language\":\"ruby\"}]}}"]