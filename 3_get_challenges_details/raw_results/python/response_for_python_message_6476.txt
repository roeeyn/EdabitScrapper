a["{\"msg\":\"result\",\"id\":\"1947\",\"result\":{\"_id\":\"CdcS3feCCEHxtDr2a\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def clear_ordering(lst):\",\"difficulty\":2.7205882352941178,\"familyId\":\"XMWcPgB3GsMXc5Fyy\",\"instructions\":\"Create a function that returns `True` if an array of pairs are sufficient for a clear ordering of all items.\\n\\nTo illustrate:\\n```\\nclear_ordering([[\\\"D\\\", \\\"A\\\"], [\\\"C\\\", \\\"B\\\"], [\\\"A\\\", \\\"C\\\"]]) ➞ True\\n# Since unequivocally: \\\"D\\\" < \\\"A\\\" < \\\"C\\\" < \\\"B\\\"\\n```\\n\\nOn the other hand:\\n```\\nclear_ordering([[\\\"D\\\", \\\"A\\\"], [\\\"B\\\", \\\"A\\\"], [\\\"C\\\", \\\"D\\\"]]) ➞ False\\n# Since we know that \\\"C\\\" < \\\"D\\\" < \\\"A\\\", and we know \\\"B\\\" < \\\"A\\\"\\n# but we don't know anything about \\\"B\\\"s relationship with \\\"C\\\" or \\\"D\\\".\\n```\\n\\n### Examples\\n```\\nclear_ordering([[\\\"S\\\", \\\"T\\\"], [\\\"T\\\", \\\"U\\\"], [\\\"U\\\", \\\"V\\\"]]) ➞ True\\n\\nclear_ordering([[\\\"T\\\", \\\"S\\\"], [\\\"T\\\", \\\"U\\\"], [\\\"U\\\", \\\"V\\\"], [\\\"V\\\", \\\"W\\\"]]) ➞ False\\n```\\n\\n### Notes\\nSee Comments for a good visualization of the question.\",\"lab\":\"Test.assert_equals(clear_ordering([[\\\"D\\\", \\\"A\\\"], [\\\"C\\\", \\\"B\\\"], [\\\"A\\\", \\\"C\\\"]]), True)\\nTest.assert_equals(clear_ordering([[\\\"D\\\", \\\"A\\\"], [\\\"B\\\", \\\"A\\\"], [\\\"C\\\", \\\"D\\\"]]), False)\\nTest.assert_equals(clear_ordering([[\\\"S\\\", \\\"T\\\"], [\\\"T\\\", \\\"U\\\"], [\\\"U\\\", \\\"V\\\"]]), True)\\nTest.assert_equals(clear_ordering([[\\\"T\\\", \\\"S\\\"], [\\\"T\\\", \\\"U\\\"], [\\\"U\\\", \\\"V\\\"], [\\\"V\\\", \\\"W\\\"]]), False)\\nTest.assert_equals(clear_ordering([[\\\"A\\\", \\\"D\\\"], [\\\"C\\\", \\\"D\\\"]]), False)\\nTest.assert_equals(clear_ordering([[\\\"A\\\", \\\"D\\\"], [\\\"D\\\", \\\"C\\\"]]), True)\\nTest.assert_equals(clear_ordering([[\\\"c\\\", \\\"d\\\"], [\\\"a\\\", \\\"b\\\"], [\\\"b\\\", \\\"c\\\"]]), True)\\nTest.assert_equals(clear_ordering([[\\\"d\\\", \\\"c\\\"], [\\\"a\\\", \\\"b\\\"], [\\\"b\\\", \\\"c\\\"]]), False)\\nTest.assert_equals(clear_ordering([[\\\"a\\\", \\\"b\\\"], [\\\"b\\\", \\\"c\\\"], [\\\"c\\\", \\\"d\\\"], [\\\"e\\\", \\\"f\\\"], [\\\"d\\\", \\\"e\\\"]]), True)\\nTest.assert_equals(clear_ordering([[\\\"b\\\", \\\"a\\\"], [\\\"b\\\", \\\"c\\\"], [\\\"c\\\", \\\"d\\\"], [\\\"e\\\", \\\"f\\\"], [\\\"d\\\", \\\"e\\\"]]), False)\",\"language\":\"python3\",\"summary\":\"Create a function that returns True if an array of pairs are sufficient for a clear ordering of all items.\\n\\nTo illustrate:\\nclear_ordering([[\\\"D\\\", \\\"A\\\"], [\\\"C\\\", \\\"B\\\"], [\\\"A\\\", \\\"C\\\"]]) ➞ True\\nSince unequivocally: \\\"D\\\" < \\\"A\\\" < \\\"C\\\" < \\\"B\\\"\\n\\nOn the other hand:\\nclear_ordering([[\\\"D\\\", \\\"A\\\"], [\\\"B\\\", \\\"A\\\"], [\\\"C\\\", \\\"D\\\"]]) ➞ False\\nSince we know that \\\"C\\\" < \\\"D\\\" < \\\"A\\\", and we know \\\"B\\\" < \\\"\",\"tags\":[\"arrays\",\"logic\"],\"timestamp\":{\"$date\":1554344876178},\"title\":\"Are Pairs Sufficient for a Clear Ordering?\",\"stats\":{\"completed\":{\"total\":67,\"ratings\":[2,2,2,2,2,2,2,2,2,2,2,3,3,2,2,4,2,3,4,4,4,2,4,2,1,1,3,4,3,2,0,2,3,3,3,2,3,4,3,3,3,3,0,4,3,5,4,3,3,4,4,4,5,2,4,5,3,2,0,2,4,2,2,4,2,4,3,0],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"8JyqsSbN2FJXPr3cw\",\"yZvzB3qFb8pkHy4dg\",\"Jqk2uJZZxEv5wZFze\",\"tAF9Gf6PiGogbZuWs\",\"T3ZAuoMrJjvZwN55B\",\"gb9rvGus2Jv7bjZSs\",\"PFjMZGHNAPTkgd7tq\",\"HqmxnQJM66Y57twhn\",\"2fxapKr8XGdNeaKi2\",\"JKb5rhL6DKcCAypF9\",\"8PwfYqoDQFThzNtvf\",\"t6bXCX76smm7B3bEN\",\"MNgYsvK6HfLRb8wAz\",\"PqEKjCDkJtYoYuZfj\",\"hAzy9apJgLWwRFGPJ\",\"XbwyB44kHPnRgQcrB\",\"DryNRN98Dj24BpgrL\",\"jDgJ2fdFS76TSorNc\",\"7BvK9WWXi9Arqh63Q\",\"3ECpdeExhBmkYXtba\",\"ab7BsQuhDo3QgE6bh\",\"4a27hfuvpN4GLbRbP\",\"ioxZNYYFA7wnT7h8K\",\"6BR44wMt3v3ixA5yf\",\"gzQrs84Y338moS294\",\"72faYgdNHThiGLnKv\",\"Kn9yjT4NvcnnvjCrL\",\"bqvrDWkn8EeaLap4E\",\"zbDSr72gioFwoQdWg\",\"WLFPvm65aHfgwQy7N\",\"qcJrxNa4YdfHWEtPx\",\"aCNWav8S8Try9RkC6\",\"fBqQjriC4QEtFNxFe\",\"QqbFrc8xjd9cH9Lyx\",\"aEm3Wvj2rFYRL8Lrb\",\"J5T8gZqiZXFuFDTQ7\",\"EjbDDFRECrzQDkzrX\",\"mDWNyaaQ9hvPCRzSd\",\"K5vETaccLsPyu8sbd\",\"SGhPxX5bHGL8zZqtt\",\"AasGs8AeX9Lcb9xJn\",\"fznzd3qnvtbFkkizz\",\"gJYuGdkXEWWmGRLzu\",\"ZNnsMeNkdDhHjSrZb\",\"s5M5RvgqR9BhB9JoC\",\"FgkYtHLxeD8pETJ8T\",\"YRstQuthRkFeBiXug\",\"W5TajitmCyxz87zAC\",\"RnTBbuFCrJWW6Ayvj\",\"Ecg4m7srYGgZsb4Ck\",\"vdR4hCEHHXLppszTY\",\"zZDaXBxMzTCBhNkgL\",\"yjtdwc2AC4jA2RWtn\",\"4fhjJBvLBWh6QeSih\",\"iS5BrkGLzJyPK7nKt\",\"J3upzLHuEwXH7Z2hx\",\"gXTAie79kiw28tx5u\",\"xn7uGNKeAwPEkP9oA\",\"2PufnQcsHsfymufX3\",\"H9KZi2cjt4FwH7qog\",\"T6iBEE2jp7f7iEF2P\"],\"quality\":[4,5,1]},\"tests\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"editorId\":\"mNMQvcxKSSvqqMYCH\",\"isHidden\":false,\"quality\":3.3333333333333335,\"family\":[{\"_id\":\"9cwxZNTWByMeEQAej\",\"language\":\"javascript\"},{\"_id\":\"CdcS3feCCEHxtDr2a\",\"language\":\"python3\"},{\"_id\":\"FLHvrmKQJkMZL2muo\",\"language\":\"ruby\"}]}}"]