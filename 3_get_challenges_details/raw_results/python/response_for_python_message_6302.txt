a["{\"msg\":\"result\",\"id\":\"1861\",\"result\":{\"_id\":\"7soAnzpZToSxztnDr\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"def shift_left(x, y):\\n\\t# your recursive solution here\\n\\treturn shift_left(x, y)\",\"difficulty\":2.5652173913043477,\"familyId\":\"oa3JmjGqHJ8YFCBrj\",\"instructions\":\"The **shift left** operation is similar to **multiplication by powers of two**. This can also be achieved with repetitive addition, thus, the process can be done **recursively**.\\n\\nSample calculation using the shift left operator `<<`:\\n\\n```\\n10 << 3 = 10 * 2^3 = 10 * 8 = 80\\n-32 << 2 = -32 * 2^2 = -32 * 4 = -128\\n5 << 2 = 5 * 2^2 = 5 * 4 = 20\\n```\\n\\nCreate a **recursive** function that mimics the shift left operator and returns the result from the two given integers.\\n\\n### Examples\\n```\\nshift_left(5, 2) ➞ 20\\n\\nshift_left(10, 3) ➞ 80\\n\\nshift_left(-32, 2) ➞ -128\\n\\nshift_left(-6, 5) ➞ -192\\n\\nshift_left(12, 4) ➞ 192\\n\\nshift_left(46, 6) ➞ 2944\\n```\\n\\n### Notes\\n- There will be no negative values for the second parameter `y`.\\n- You're expected to solve this challenge using a **recursive approach**.\\n- You can read on more topics about recursion (see **Resources** tab) if you aren't familiar with it yet or haven't fully understood the concept behind it before taking up this challenge.\",\"isHidden\":false,\"lab\":\"from inspect import getsource\\nfrom re import findall, MULTILINE\\n\\ndef check_recursive(fn):\\n  try:\\n    src, n = getsource(fn), fn.__name__\\n    if n == '<lambda>': n = src.split('=')[0].strip()\\n    return len(findall(n, src, flags=MULTILINE)) > 1\\n  except OSError: return True\\n\\nTest.assert_equals(check_recursive(shift_left), True)\\nTest.assert_not_equals(check_recursive(shift_left), False, 'Recursion is required!')\\n\\nnum_vector, res_vector = [[\\n  [5, 2], [10, 3], [-32, 2], [-6, 5], [12, 4], [46, 6], [57, 0], [79, 1]],\\n  [20, 80, -128, -192, 192, 2944, 57, 158]]\\nfor i, r in enumerate(num_vector): Test.assert_equals(shift_left(*r), res_vector[i])\",\"language\":\"python3\",\"summary\":\"The shift left operation is similar to multiplication by powers of two. This can also be achieved with repetitive addition, thus, the process can be done recursively.\\n\\nSample calculation using the shift left operator <<:\\n\\n10 << 3 = 10 * 2^3 = 10 * 8 = 80\\n-32 << 2 = -32 * 2^2 = -32 * 4 = -128\\n5 << 2 = 5 * 2^2 = 5 * 4 = 20\\n\\nCreate a recursive function that mimic\",\"tags\":[\"recursion\",\"numbers\"],\"timestamp\":{\"$date\":1595504573806},\"title\":\"Recursion: Shift Left by Addition\",\"stats\":{\"completed\":{\"total\":62,\"ratings\":[5,5,5,5,5,1,5,3,5,1,2,5,0,2,2,2,5,1,2,3,5,3,1,0,2,0,0,4,1,4,4,3,4,1,3,4,1,0,3,2,2,2,0,1,1,3],\"rators\":[\"aEm3Wvj2rFYRL8Lrb\",\"a777e8chPvJkY3tKa\",\"8PwfYqoDQFThzNtvf\",\"vTfyrr4pGddp8rbXc\",\"Pe8vWpDHRuH9nSGKW\",\"6428wKHtwKkFdvBs5\",\"5dHucvf2qBYyKim7X\",\"RnTBbuFCrJWW6Ayvj\",\"Ecg4m7srYGgZsb4Ck\",\"gb9rvGus2Jv7bjZSs\",\"8JyqsSbN2FJXPr3cw\",\"J23RcmzbdtBbPCTjT\",\"wmW4mGgj6tJxepqpC\",\"oZiGwL535nJ5ZMJr7\",\"hZW6j5s6RHpx35phy\",\"SGhPxX5bHGL8zZqtt\",\"foytX6kH9wiSYqLtT\",\"GJH6ntAFXf89jpfxh\",\"tAF9Gf6PiGogbZuWs\",\"ADi6nTBqP9ttcsEPq\",\"xtEQnmTdT8sBF8zE6\",\"nFbmNzMQ38TncmfQX\",\"5hhuYLyGkeqCvaSrf\",\"FdB7yZRr2ZjaFQcpj\",\"WrCXj2ZQNZfHkmC8e\",\"dHConQk6pC8c323TE\",\"jyX8Co2kybS2gGpKz\",\"h4x2jaMdj5aQZbW5g\",\"6QHXQkQAcXMJ7C2kK\",\"8izcAkEuTgr7teaK4\",\"A3pBp3qBMnYZpQKZu\",\"xGpqoGZ47sYLJ4ty9\",\"iS5BrkGLzJyPK7nKt\",\"s5M5RvgqR9BhB9JoC\",\"8sNv5PTHa7XQ8bNqR\",\"p8qqFdJ3FSk5x9z3G\",\"CZeLyDD2BQL3jrzzj\",\"iojEnnY9FsMfYzp6f\",\"QRv96jmNaYsWkxQEG\",\"gJYuGdkXEWWmGRLzu\",\"J3upzLHuEwXH7Z2hx\",\"yr822PZmmiDDenxpB\",\"BMEud9eeJnPDC8A2k\",\"yjtdwc2AC4jA2RWtn\",\"AasGs8AeX9Lcb9xJn\",\"wZ22E8EXW4qasgru2\",\"MpfytGFYF77emJ3cT\",\"T6iBEE2jp7f7iEF2P\",\"2PufnQcsHsfymufX3\",\"gXTAie79kiw28tx5u\",\"rhS8qXRjZcpDXkwnE\",\"suArq5BbSy7gD6xri\",\"GTKsdeEihE636Le9i\",\"oBcs8GLX2ZFLXQy8y\",\"9ivvGvJGvtQfigQaZ\",\"DPi9QGLctq2y76KuE\"],\"quality\":[3,4,5,3,5,5,4,5,5,5,5,5,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":4.6,\"family\":[{\"_id\":\"7soAnzpZToSxztnDr\",\"language\":\"python3\"}]}}"]