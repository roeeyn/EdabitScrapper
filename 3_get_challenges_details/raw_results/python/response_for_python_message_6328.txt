a["{\"msg\":\"result\",\"id\":\"1872\",\"result\":{\"_id\":\"9cuQrhEMwiESfKznk\",\"author\":\"yanni\",\"authorId\":\"aCNWav8S8Try9RkC6\",\"code\":\"def eng2nums(s):\\n\\t\",\"difficulty\":2.5757575757575757,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"mANbAR9byA8Ga5M88\",\"instructions\":\"This is a companion to my [previous challenge](https://edabit.com/challenge/mZqMnS3FsL2MPyFMg).\\n\\nGiven an English description of an integer in the range **0 to 999**, devise a function that returns the integer in numeric form.\\n\\n### Examples\\n```\\neng2nums(\\\"four\\\") ➞  4\\n\\neng2nums(\\\"forty\\\") ➞ 40\\n\\neng2nums(\\\"six hundred\\\") ➞ 600\\n\\neng2nums(\\\"one hundred fifteen\\\") ➞ 115\\n\\neng2nums(\\\"seven hundred sixty seven\\\") ➞ 767\\n```\\n\\n### Notes\\n- No hyphens are used in test cases (\\\"twenty three\\\" not \\\"twenty-three\\\").\\n- The word \\\"and\\\" is not used: \\\"one hundred three\\\" not \\\"one hundred and three\\\".\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(eng2nums(\\\"one\\\"), 1)\\nTest.assert_equals(eng2nums(\\\"ninety\\\"), 90)\\nTest.assert_equals(eng2nums(\\\"one hundred ten\\\"), 110)\\nTest.assert_equals(eng2nums(\\\"sixty two\\\"), 62)\\nTest.assert_equals(eng2nums(\\\"four hundred thirty\\\"), 430)\\nTest.assert_equals(eng2nums(\\\"zero\\\"), 0)\\nTest.assert_equals(eng2nums(\\\"four hundred fifty six\\\"), 456)\\nTest.assert_equals(eng2nums(\\\"six hundred nine\\\"), 609)\\nTest.assert_equals(eng2nums(\\\"seven hundred\\\"), 700)\\nTest.assert_equals(eng2nums(\\\"thirty seven\\\"), 37)\\nTest.assert_equals(eng2nums(\\\"nine hundred ninety nine\\\"), 999)\\nTest.assert_equals(eng2nums(\\\"three hundred twelve\\\"), 312)\\nTest.assert_equals(eng2nums(\\\"eighteen\\\"), 18)\\nTest.assert_equals(eng2nums(\\\"five hundred eleven\\\"), 511)\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[3,3,3,3,3,3,2,3,4,3,3,2,4,2,2,3,3,2,0,1,3,4,1,4,4,3,4,3,1,2,0,2,2],\"rators\":[\"aCNWav8S8Try9RkC6\",\"KZ2xddpM2f9JRaryB\",\"tAF9Gf6PiGogbZuWs\",\"8PwfYqoDQFThzNtvf\",\"s5M5RvgqR9BhB9JoC\",\"d6iEb2BDDofyeePh9\",\"aEm3Wvj2rFYRL8Lrb\",\"DPi9QGLctq2y76KuE\",\"yod5YhKtPqw2GfG9B\",\"8bBT4kodxYwar57ZA\",\"xn7uGNKeAwPEkP9oA\",\"8JyqsSbN2FJXPr3cw\",\"d8qtzoLB264iP8tdY\",\"yjtdwc2AC4jA2RWtn\",\"8sNv5PTHa7XQ8bNqR\",\"p8qqFdJ3FSk5x9z3G\",\"iS5BrkGLzJyPK7nKt\",\"7ZJTNkRx4rEq92eau\",\"iojEnnY9FsMfYzp6f\",\"buX4mCQhtXCfBjeno\",\"J3upzLHuEwXH7Z2hx\",\"Nua6T3dBurBy3Qfg9\",\"gJYuGdkXEWWmGRLzu\",\"2PufnQcsHsfymufX3\",\"AasGs8AeX9Lcb9xJn\",\"fznzd3qnvtbFkkizz\",\"GTKsdeEihE636Le9i\",\"T6iBEE2jp7f7iEF2P\",\"fbr22rabEJMfBp7vD\",\"oBcs8GLX2ZFLXQy8y\"],\"total\":35,\"quality\":[5,5]},\"flags\":0},\"summary\":\"This is a companion to my previous challenge.\\n\\nGiven an English description of an integer in the range 0 to 999, devise a function that returns the integer in numeric form.\\n\\nExamples\\neng2nums(\\\"four\\\") ➞  4\\n\\neng2nums(\\\"forty\\\") ➞ 40\\n\\neng2nums(\\\"six hundred\\\") ➞ 600\\n\\neng2nums(\\\"one hundred fifteen\\\") ➞ 115\\n\\neng2nums(\\\"seven hundred sixty seven\\\") ➞ 767\\n\\nNotes\\nNo hyphens\",\"tags\":[\"conditions\",\"numbers\",\"strings\"],\"timestamp\":{\"$date\":1597969217106},\"title\":\"English to Numbers\",\"quality\":5,\"family\":[{\"_id\":\"BJGBgJLLdcTnfyDm5\",\"language\":\"cpp\"},{\"_id\":\"ygedmjLgJ9RmzQnjd\",\"language\":\"javascript\"},{\"_id\":\"9cuQrhEMwiESfKznk\",\"language\":\"python3\"},{\"_id\":\"DvKvQx5rpAGoJchH5\",\"language\":\"ruby\"}]}}"]