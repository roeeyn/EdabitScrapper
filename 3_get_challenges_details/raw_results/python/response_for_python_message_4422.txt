a["{\"msg\":\"result\",\"id\":\"929\",\"result\":{\"_id\":\"MKyeDtmX9GsKh2n9q\",\"author\":\"Alessandro Manicone\",\"authorId\":\"AasGs8AeX9Lcb9xJn\",\"code\":\"def gen_deck():\\n\\t\",\"difficulty\":1.4642857142857142,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"HoaHy3wz4gjKJQGJa\",\"instructions\":\"Create a function that generates a poker deck.\\n\\nA poker deck contains 52 cards in total, 13 cards for each of the four suits (**♦** diamonds, **♠** clubs, **♥** hearts and **♣** spades) ranked **2, 3, 4, 5, 6, 7, 8, 9, 10, J, Q, K, A**.\\n\\nYour function should return a **list** (deck) containing each card as a **tuple** in the following format:\\n\\n```\\n(rank, suit)\\n```\\n\\nWhere  _rank_ is a number from 2 to 14 (11, 12, 13 & 14 being J, Q, K & A respectively) and  _suit_ is a string with the first letter of the the card's suit (\\\"d\\\", \\\"c\\\", \\\"h\\\" & \\\"s\\\" for diamonds, clubs, hearts & spades respectively).\\n\\n### Examples\\n```\\nFive of hearts ➞ (5, \\\"h\\\")\\n\\nQueen of Spades ➞ (12, \\\"s\\\")\\n\\nAce of Clubs ➞ (14, \\\"c\\\")\\n```\\n\\n### Notes\\nExtra points for shuffling the deck.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"ordered1 = [2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14]\\nordered2 = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]\\n\\nif [r for r, s in gen_deck()] not in (ordered1, ordered2, ordered1[::-1], ordered2[::-1]):\\n\\tprint('**EXTRA POINTS!**')\\n\\nTest.assert_equals(sorted(gen_deck()), [(2, 'c'), (2, 'd'), (2, 'h'), (2, 's'), (3, 'c'), (3, 'd'), (3, 'h'), (3, 's'), (4, 'c'), (4, 'd'), (4, 'h'), (4, 's'), (5, 'c'), (5, 'd'), (5, 'h'), (5, 's'), (6, 'c'), (6, 'd'), (6, 'h'), (6, 's'), (7, 'c'), (7, 'd'), (7, 'h'), (7, 's'), (8, 'c'), (8, 'd'), (8, 'h'), (8, 's'), (9, 'c'), (9, 'd'), (9, 'h'), (9, 's'), (10, 'c'), (10, 'd'), (10, 'h'), (10, 's'), (11, 'c'), (11, 'd'), (11, 'h'), (11, 's'), (12, 'c'), (12, 'd'), (12, 'h'), (12, 's'), (13, 'c'), (13, 'd'), (13, 'h'), (13, 's'), (14, 'c'), (14, 'd'), (14, 'h'), (14, 's')])\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,2,2,0,1,2,2,2,1,2,2,2,1,2,1,2,1,2,2,1,2,2,1,2,1,2,3,0,2,1,2,1,2,2,2,0,2,0,2,2,0,1,2,1,0,2,1,0,2,2,2,1,1,3,2,1,3,1,2,2,2,2,0,1,0,1,0,1,1,0,2,1,2,1,2,2,1,1,1,2,2,0,2,1,1,2,2,2,2,1,2,2,1,1,2,2,1,2,2,1,2,1,1,2,1,0,1],\"rators\":[\"AasGs8AeX9Lcb9xJn\",\"tAF9Gf6PiGogbZuWs\",\"aEm3Wvj2rFYRL8Lrb\",\"mS2oaNzM5vCgLjYu5\",\"RT2F5THkSKcdmPgBb\",\"s5M5RvgqR9BhB9JoC\",\"jpiYk9LbC3oDg84dz\",\"gb9rvGus2Jv7bjZSs\",\"8JyqsSbN2FJXPr3cw\",\"dHZqT6h4JMwk5fPC8\",\"geZ3oLjhh9KAw7yHs\",\"w3A7cBWyAfukk6xEQ\",\"2fxapKr8XGdNeaKi2\",\"Yp7uvStL97cC9fKkY\",\"cR3ibTMxLyEdDFCHY\",\"jNvegJWCk5HCtEMbK\",\"ZNnsMeNkdDhHjSrZb\",\"8PwfYqoDQFThzNtvf\",\"BQMNhNzLdgY4yajCC\",\"yZvzB3qFb8pkHy4dg\",\"gJYuGdkXEWWmGRLzu\",\"DEDniTrstQYGounXT\",\"HF28xZKSLM9wEuqNg\",\"hnyhBFWwNCz9mDfSi\",\"KdNDysEsy2TW5QRJ2\",\"9pzFiFK3ANLjQfnr2\",\"3qYxBYzigw9hXBwB5\",\"ahk2qiXKJA753wAJk\",\"WWwxnJ3jigFMxzWkY\",\"Wv2vJnEj8ywNmARoF\",\"R4SjTgDnpigJYDLyL\",\"3cF6NXq3ZEwdkgSjb\",\"NG8PWBSjsM8mMhQEq\",\"PXAcsKkssS2yLyDv2\",\"iojEnnY9FsMfYzp6f\",\"kXEfD7xxEyWd7oxxL\",\"Pe8vWpDHRuH9nSGKW\",\"yjtdwc2AC4jA2RWtn\",\"9cWTAMQmN7PZMqdec\",\"uGuS9YRXW2nj4p6zf\",\"HqmxnQJM66Y57twhn\",\"GaJNJwcdyB9ueYFst\",\"YcCLwitFMAEJSnxAW\",\"NNE5HNRXAkmhrWgyQ\",\"FEYpu9RWysAgW3XnP\",\"oBcs8GLX2ZFLXQy8y\",\"8WpvgSbQciTQWdd8T\",\"M8dQuMrEpP8Hc3tHN\",\"n2BRY9X8899dcG8Bw\",\"zd9FLSzsGz3evKafy\",\"7K2GEb5TZRtSpyyGS\",\"mxX4rH5ELYkdZ2Mbw\",\"RehJGBFS6CYiWdjZx\",\"RMi3GRnhqtpbNqiF6\",\"mG8HqKiAQFTdRZthG\",\"tpxMgkGSHwBjS95Ta\",\"KLmLKaJPfsYxp42p2\",\"qD2LrwaDrSdiybLKY\",\"gXTAie79kiw28tx5u\",\"hHJRE5Mb2yhF5bkiD\",\"MKT7khMBGXzA22ykf\",\"QxNHN5DHfe97xarhE\",\"DPi9QGLctq2y76KuE\",\"J3upzLHuEwXH7Z2hx\",\"KJCDwGkoXh8qtbbKr\",\"dYPkStFnLvAMsHSzZ\",\"YjPkyrF5D3ihxTjwk\",\"cAP3n5NY64uoMwzRR\",\"dj5AyG5fWP8FdsSmZ\",\"5XiuAqicKD4hBdu63\",\"d8qtzoLB264iP8tdY\",\"RGMbFMZXJr7DhcAJy\",\"JS3hNM3XXkxPdg3yk\",\"dBzwBtRjZqB98DJeB\",\"5HCu9Ydd86QgHDRNP\",\"cjN86MMHPvsG3PvdW\",\"LvLQNiWRhSzvMRQWm\",\"wRttWTM59y8m5mx7x\",\"axdSNLZpiCDF8RS6n\",\"kNrnnMxhFZztMTBAX\",\"fznzd3qnvtbFkkizz\",\"chZxqD2F5nrBhDdis\",\"4fjSgcqhQQZM2ZFRP\",\"eMuCpJ2spXWkJjWNz\",\"Jqk2uJZZxEv5wZFze\",\"J5T8gZqiZXFuFDTQ7\",\"HuNF3xTBzmatyGSTm\",\"NzbRqGWspQnWMoDrF\",\"4jmcRWi7WtT5hzdP9\",\"CLypXaZksY99mpRCm\",\"eYfPWvZwnJQkHbSTK\",\"5S9nX4rKsnCcnv4Cz\",\"5hQnRWiKkhgKJXNMP\",\"GGdmhAvxXhqhhibJN\",\"QRv96jmNaYsWkxQEG\",\"utTuvGdmu2sBHWBhQ\",\"BrTDhPJcACL2bsrpJ\",\"Ds7L5bksw2QRHjrKL\",\"hRAd998MG8Jzdpxj6\",\"RTDx9axf52kxhFjwZ\",\"srJ34BaybkQh3qRkM\",\"wjc4iejpErBhxWwHo\",\"66a9xX73nmTEuKs9k\",\"CHvzhtXnv8HTbPQ56\",\"AFfw7cGg83uYk2Miy\",\"8BFSTCnoe2QggN64c\",\"yod5YhKtPqw2GfG9B\",\"M2gFMJkocQSY6bsFR\",\"yr822PZmmiDDenxpB\",\"PC3pLs36zNzpRDSuE\",\"c2q7mY39z5JPEMCaM\",\"2PufnQcsHsfymufX3\",\"mx49CBEtBHgZ2YMr7\",\"R6YxHWAiLgKwy5YvC\",\"rrSC943cCKNG48sH4\",\"X4rzfxGgxx6CS7Bpz\",\"RoGGD5cpHb4ftdLDv\",\"Cc2Cgj4MWXZxsTooC\",\"pduNK68oazqQTtbLp\",\"2FCRyJqwqzFTKSTgJ\",\"XD5nmvKQchKezPXhy\",\"2iFe3EHEH2YdhSKrs\",\"Afnps7TJQuS9sipMb\",\"4Lwjr34ypKNQNQCar\",\"hR7GMiqGap4CzEWSy\",\"StNu7DPyTgEStZsMY\",\"4TmgHkn5vqyHK3sYC\",\"8LqTJugTk5Sn2ZAS7\",\"nc7bRhkxgKyqusYe3\",\"u5u2YpHXiNgzDNJdX\",\"d9LBRxvADNBB5QJMB\",\"dzS6WBTMHyFEag6Fp\",\"qZQxPQ2kaNKAMesHT\",\"5QN8R22z43SrwoHDz\",\"wrL4iX2CCSqDCCty3\",\"Qyfyyw6oC4EHAndzo\",\"rCrbqMiaGPgHYTNxu\",\"Ncn7Qn2LbdsiJnfFk\",\"Wi4H6ayKsNDWWQCG5\"],\"total\":149,\"quality\":[5,5,5,3,5,4,5,5,4,4,5,1,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,4,5]},\"flags\":1},\"summary\":\"Create a function that generates a poker deck.\\n\\nA poker deck contains 52 cards in total, 13 cards for each of the four suits (♦ diamonds, ♠ clubs, ♥ hearts and ♣ spades) ranked 2, 3, 4, 5, 6, 7, 8, 9, 10, J, Q, K, A.\\n\\nYour function should return a list (deck) containing each card as a tuple in the following format:\\n\\n(rank, suit)\\n\\nWhere  rank is a number from 2\",\"tags\":[\"arrays\",\"games\",\"loops\",\"sorting\"],\"timestamp\":{\"$date\":1585655337950},\"title\":\"Poker Deck\",\"quality\":4.65625,\"family\":[{\"_id\":\"MKyeDtmX9GsKh2n9q\",\"language\":\"python3\"}]}}"]