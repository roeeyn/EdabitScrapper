a["{\"msg\":\"result\",\"id\":\"1058\",\"result\":{\"_id\":\"59kkN3yDnFKHYfgMm\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"def best_friend(txt, a, b):\\n\\t\",\"difficulty\":1.55,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"Xy6ucLqMq3dq6vFLB\",\"instructions\":\"Given a string, return if a given letter **always** appears **immediately before** another given letter.\\n\\n### Worked Example\\n```\\nbest_friend(\\\"he headed to the store\\\", \\\"h\\\", \\\"e\\\") ➞ True\\n\\n# All occurences of \\\"h\\\": [\\\"he\\\", \\\"headed\\\", \\\"the\\\"]\\n# All occurences of \\\"h\\\" have an \\\"e\\\" after it.\\n# Return True\\n```\\n\\n### Examples\\n```\\nbest_friend(\\\"he headed to the store\\\", \\\"h\\\", \\\"e\\\") ➞ True\\n\\nbest_friend(\\\"i found an ounce with my hound\\\", \\\"o\\\", \\\"u\\\") ➞ True\\n\\nbest_friend(\\\"we found your dynamite\\\", \\\"d\\\", \\\"y\\\") ➞ False\\n```\\n\\n### Notes\\n- Don't count letters with spaces between them (example #3).\\n- All sentences will be given in lowercase.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(best_friend('he headed to the store', 'h', 'e'), True)\\nTest.assert_equals(best_friend('i found an ounce with my hound', 'o', 'u'), True)\\nTest.assert_equals(best_friend('those were their thorns they said', 't', 'h'), True)\\n\\nTest.assert_equals(best_friend('we found your dynamite', 'd', 'y'), False)\\nTest.assert_equals(best_friend('look they took the cookies', 'o', 'o'), False)\\nTest.assert_equals(best_friend('go to edabit and meditate', 'e', 'd'), False)\",\"language\":\"python3\",\"quality\":4.516129032258065,\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,0,1,0,5,2,2,1,1,2,2,2,2,1,2,1,2,2,0,2,1,1,1,2,3,0,2,0,1,2,2,1,2,2,1,1,2,3,2,1,2,0,2,2,2,3,1,0,1,1,2,2,1,2,2,1,2,0,2,3,2,2,2,1,2,2,2,2,1,1,0,2,3,2,2,2],\"quality\":[5,5,5,5,5,5,5,4,4,5,5,5,5,5,5,2,2,5,5,5,3,4,5,5,5,1,5,5,5,5,5],\"rators\":[\"PXAcsKkssS2yLyDv2\",\"XD5nmvKQchKezPXhy\",\"Ds7L5bksw2QRHjrKL\",\"J5T8gZqiZXFuFDTQ7\",\"8PwfYqoDQFThzNtvf\",\"ceLKEYHRJzGDtXK59\",\"pPpmP7xeJzGgK362R\",\"cAP3n5NY64uoMwzRR\",\"qQQ4hCQpzitmHSkjS\",\"buX4mCQhtXCfBjeno\",\"p8qqFdJ3FSk5x9z3G\",\"rfyEkETeoS96QNH4e\",\"s5M5RvgqR9BhB9JoC\",\"YcCLwitFMAEJSnxAW\",\"Jqk2uJZZxEv5wZFze\",\"iS5BrkGLzJyPK7nKt\",\"QRv96jmNaYsWkxQEG\",\"yjtdwc2AC4jA2RWtn\",\"gXTAie79kiw28tx5u\",\"zd9FLSzsGz3evKafy\",\"oBcs8GLX2ZFLXQy8y\",\"cR3ibTMxLyEdDFCHY\",\"srJ34BaybkQh3qRkM\",\"a777e8chPvJkY3tKa\",\"sbJcFfQjQ59Wfg4Cd\",\"sHjfbGQGLHE6JR6qu\",\"GGdmhAvxXhqhhibJN\",\"gJYuGdkXEWWmGRLzu\",\"qAby4AWXmTNeusvg3\",\"FEYpu9RWysAgW3XnP\",\"wjc4iejpErBhxWwHo\",\"HF28xZKSLM9wEuqNg\",\"8JyqsSbN2FJXPr3cw\",\"2QGRoQn2dRq3scu7k\",\"Yp7uvStL97cC9fKkY\",\"T6iBEE2jp7f7iEF2P\",\"5HCu9Ydd86QgHDRNP\",\"o4ixjQGSaYqA2JoM4\",\"iojEnnY9FsMfYzp6f\",\"tAF9Gf6PiGogbZuWs\",\"3cF6NXq3ZEwdkgSjb\",\"8BFSTCnoe2QggN64c\",\"3nied3n8KG8RSNixH\",\"J3upzLHuEwXH7Z2hx\",\"eMuCpJ2spXWkJjWNz\",\"ey3CASd6Je5LEJzfB\",\"BJp2WkwLWGHHB5oQW\",\"gb9rvGus2Jv7bjZSs\",\"H9KZi2cjt4FwH7qog\",\"KJCDwGkoXh8qtbbKr\",\"NzbRqGWspQnWMoDrF\",\"BrTDhPJcACL2bsrpJ\",\"DPi9QGLctq2y76KuE\",\"GTKsdeEihE636Le9i\",\"c2q7mY39z5JPEMCaM\",\"Cc2Cgj4MWXZxsTooC\",\"yod5YhKtPqw2GfG9B\",\"d8qtzoLB264iP8tdY\",\"2fxapKr8XGdNeaKi2\",\"Wpn95NqWxncQrwNgz\",\"5XiuAqicKD4hBdu63\",\"DEDniTrstQYGounXT\",\"AFfw7cGg83uYk2Miy\",\"yr822PZmmiDDenxpB\",\"mvJBakQ35CWAnbbEZ\",\"AasGs8AeX9Lcb9xJn\",\"utTuvGdmu2sBHWBhQ\",\"CHvzhtXnv8HTbPQ56\",\"2PufnQcsHsfymufX3\",\"R6YxHWAiLgKwy5YvC\",\"rrSC943cCKNG48sH4\",\"JKb5rhL6DKcCAypF9\",\"aEm3Wvj2rFYRL8Lrb\",\"RoGGD5cpHb4ftdLDv\",\"K6MfKMytoJJuSGewP\",\"X4rzfxGgxx6CS7Bpz\",\"HqmxnQJM66Y57twhn\",\"PH32cNxBjrK4a28sn\",\"2iFe3EHEH2YdhSKrs\",\"hR7GMiqGap4CzEWSy\",\"9pzFiFK3ANLjQfnr2\",\"AJexRBN9cYQmqvYu6\",\"YA7SDhpgEtsqynvNL\",\"9Ly8afdtofp8DXzrt\",\"pduNK68oazqQTtbLp\",\"4Lwjr34ypKNQNQCar\",\"4TmgHkn5vqyHK3sYC\",\"YRAzEBJoLvSaiPtYx\",\"T6Rm8mREPMZSftzrC\",\"MKT7khMBGXzA22ykf\",\"fSQSHjW3e72MrWxbD\",\"StNu7DPyTgEStZsMY\",\"d9LBRxvADNBB5QJMB\",\"fznzd3qnvtbFkkizz\",\"jEfGxSSmxvNTzBoRc\",\"yAouD3PxzED8a4gap\",\"u5u2YpHXiNgzDNJdX\",\"Zyg9xAm6EuH4u3Lo5\",\"mxX4rH5ELYkdZ2Mbw\",\"7txFzDQ43vJ7qCY88\",\"Z85ajWfZ4jDPkbvR4\",\"mw9464S5dnenqzvpm\",\"5QN8R22z43SrwoHDz\",\"Wi4H6ayKsNDWWQCG5\",\"DQskEvAv5KiJDPtGF\",\"rCrbqMiaGPgHYTNxu\"],\"total\":113},\"flags\":1},\"summary\":\"Given a string, return if a given letter always appears immediately before another given letter.\\n\\nWorked Example\\nbest_friend(\\\"he headed to the store\\\", \\\"h\\\", \\\"e\\\") ➞ True\\n\\nAll occurences of \\\"h\\\": [\\\"he\\\", \\\"headed\\\", \\\"the\\\"]\\nAll occurences of \\\"h\\\" have an \\\"e\\\" after it.\\nReturn True\\n\\nExamples\\nbest_friend(\\\"he headed to the store\\\", \\\"h\\\", \\\"e\\\") ➞ True\\n\\nbest_friend(\\\"i found an\",\"tags\":[\"strings\",\"loops\",\"regex\"],\"timestamp\":{\"$date\":1612175437692},\"title\":\"A Letter's Best Friend\",\"family\":[{\"_id\":\"mTKJRxrWNr9qrBxxG\",\"language\":\"java\"},{\"_id\":\"pvzbLKvBuvcjmNzCW\",\"language\":\"javascript\"},{\"_id\":\"59kkN3yDnFKHYfgMm\",\"language\":\"python3\"},{\"_id\":\"Kbepou8QLJJei4R8y\",\"language\":\"ruby\"}]}}"]