a["{\"msg\":\"result\",\"id\":\"605\",\"result\":{\"_id\":\"njFHutF5BjifxNR9e\",\"author\":\"Brendan Campbell-hartzell\",\"authorId\":\"xmMqX6Dkh7yxb7ycH\",\"code\":\"# As it stands, only 1/4 tests pass\\n# Fix the code so that all tests pass\\ndef change(x, times):\\n  for i in range(len(x)):\\n    j = 1\\n    while j <= times:\\n      if i >= j and i < len(x)-j:\\n        x[i] -= 1\\n      j += 1\\n  return x\\n\\nx = [3, 3, 3, 3, 3, 3, 3]\",\"difficulty\":1.0985915492957747,\"familyId\":\"YYjeEoYaS47igGKMy\",\"instructions\":\"Your friend is trying to write a function to accomplish the following transformations:\\n\\n```\\nx = [3, 3, 3, 3, 3, 3, 3]\\n\\n// Each time x is called, the following results are shown:\\n\\nchange(x, 0)  // [3, 3, 3, 3, 3, 3, 3]\\nchange(x, 1)  // [3, 2, 2, 2, 2, 2, 3]\\nchange(x, 2)  // [3, 2, 1, 1, 1, 2, 3]\\nchange(x, 3)  // [3, 2, 1, 0, 1, 2, 3]\\n```\\nNote: **The `change()` function should not mutate the original list**. After each call to the function, the original `x` should still equal `[3, 3, 3, 3, 3, 3, 3]`.\\n\\nShe comes up with the following code:\\n\\n```\\ndef change(x, times):\\n  for i in range(len(x)):\\n    j = 1\\n    while j <= times:\\n      if i >= j and i < len(x)-j:\\n        x[i] -= 1\\n      j += 1\\n  return x\\n```\\n\\nOops! The code appears to **mutate** the original list. Fix this incorrect code so that the function **no longer mutates the original list**.\\n\\nSee below:\\n\\n### Examples\\n```\\nx = [3, 3, 3, 3, 3, 3, 3]\\n\\n// What we want:\\nchange(x, 2) => [3, 2, 1, 1, 1, 2, 3]\\n\\nchange(x, 2) => [3, 2, 1, 1, 1, 2, 3]\\n\\n// What we get:\\nchange(x, 2) => [3, 2, 1, 1, 1, 2, 3]  // Good so far...\\n\\nchange(x, 2) => [3, 1, -1, -1, -1, 1, 3] // List is mutated :(\\n```\\n\\n\\n### Notes\\n- If this is confusing, copy and paste the incorrect code in a REPL environment and play around with the code to understand what the function is doing.\\n- Hint: Try to make a copy of the input list.\\n- If this looks familiar, it is part of a solution for the **Concentric Rug** problem.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(change(x, 2), [3, 2, 1, 1, 1, 2, 3])\\nTest.assert_equals(change(x, 2), [3, 2, 1, 1, 1, 2, 3])\\nTest.assert_equals(change(x, 1), [3, 2, 2, 2, 2, 2, 3])\\nTest.assert_equals(change(x, 3), [3, 2, 1, 0, 1, 2, 3])\",\"language\":\"python3\",\"quality\":4.5,\"summary\":\"Your friend is trying to write a function to accomplish the following transformations:\\n\\nx = [3, 3, 3, 3, 3, 3, 3]\\n\\n// Each time x is called, the following results are shown:\\n\\nchange(x, 0)  // [3, 3, 3, 3, 3, 3, 3]\\nchange(x, 1)  // [3, 2, 2, 2, 2, 2, 3]\\nchange(x, 2)  // [3, 2, 1, 1, 1, 2, 3]\\nchange(x, 3)  // [3, 2, 1, 0, 1, 2, 3]\\nNote: The change() function sho\",\"tags\":[\"bugs\",\"scope\",\"loops\"],\"timestamp\":{\"$date\":1603733242977},\"title\":\"Fix the Code: Un-Mutating a List\",\"stats\":{\"completed\":{\"total\":196,\"ratings\":[1,1,1,1,1,0,2,1,1,2,2,1,0,1,1,2,2,1,1,1,0,1,1,2,1,1,3,0,0,1,3,1,0,0,0,2,0,1,1,1,0,1,3,2,1,1,1,3,5,2,1,0,1,1,0,1,1,1,2,0,1,1,0,1,1,0,1,2,1,1,1,2,0,0,1,2,1,1,1,1,2,1,0,1,1,1,1,0,0,1,1,3,1,0,2,2,2,1,1,0,2,1,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,2,2,2,2,2,1,2,1,1,1,1,2,0,0,1,0,2,2,1,1,2,1,0,3],\"quality\":[4,5,5,5,4,5,5,3,5,2,5,5,4,4,4,5,4,5,5,3,5,5,5,4,5,5,3,5,5,5,5,5,5,5,5,4,5,5,5,5,5,3,5,1,5,5],\"rators\":[\"xmMqX6Dkh7yxb7ycH\",\"76uLRmw8PScNMcszK\",\"8JyqsSbN2FJXPr3cw\",\"yhW235mFWZ2h9ttSi\",\"oBcs8GLX2ZFLXQy8y\",\"Tx3yx7bdp8bjJqx8L\",\"zd9FLSzsGz3evKafy\",\"aEm3Wvj2rFYRL8Lrb\",\"gJYuGdkXEWWmGRLzu\",\"DqNQn9Jsxcu5HijKE\",\"wRttWTM59y8m5mx7x\",\"gXTAie79kiw28tx5u\",\"BCPNmfdwmRDs6FqcN\",\"5HCu9Ydd86QgHDRNP\",\"d8qtzoLB264iP8tdY\",\"utTuvGdmu2sBHWBhQ\",\"R4SjTgDnpigJYDLyL\",\"p8qqFdJ3FSk5x9z3G\",\"Yp7uvStL97cC9fKkY\",\"RGMbFMZXJr7DhcAJy\",\"qD2LrwaDrSdiybLKY\",\"J3upzLHuEwXH7Z2hx\",\"HF28xZKSLM9wEuqNg\",\"gb9rvGus2Jv7bjZSs\",\"o4ixjQGSaYqA2JoM4\",\"dBzwBtRjZqB98DJeB\",\"cAP3n5NY64uoMwzRR\",\"WdKdsgH9gXkKgCycx\",\"DpnYcMphntjsQ96qg\",\"sHjfbGQGLHE6JR6qu\",\"GGdmhAvxXhqhhibJN\",\"FEYpu9RWysAgW3XnP\",\"wjc4iejpErBhxWwHo\",\"ANbSYXiYsp4addoDq\",\"sEQvZDbN3a92EcRG9\",\"A9aPmQpfTPtJbu7yR\",\"AB4qaGAb7ByGDWqvw\",\"NzbRqGWspQnWMoDrF\",\"utdj2v4ruJdN644DR\",\"DpxvcKcHomSpGcE76\",\"3DLaaE3HnCCR8YPsN\",\"zT9LpkiwYjLviYYW6\",\"QTZTmQEmkPv5sxQL4\",\"2bW8ZPE6Yzhr8gwJ8\",\"dCqozbHJrfFWwRgAC\",\"KkTpHkBQHBSCQGm7o\",\"rm629kr3f3StJCXKs\",\"gGiiZ3DJHRmLA3M42\",\"Ei5T2sb5pZL4eauES\",\"cGwqKDCYRv6AP4GPa\",\"iTYYSCoCZECksWJRu\",\"gEqTEX2vrEzoYcFas\",\"iF4tdvn5sA9CM4T6T\",\"eEZ8zeWX8b3SWs84P\",\"iGZfQDmqdyPjzhKAg\",\"FuYTQcDNjct58rqPa\",\"X4wWncu8bJMz7KDw2\",\"Jqk2uJZZxEv5wZFze\",\"5XiuAqicKD4hBdu63\",\"5S9nX4rKsnCcnv4Cz\",\"BrTDhPJcACL2bsrpJ\",\"pduNK68oazqQTtbLp\",\"3nied3n8KG8RSNixH\",\"J5T8gZqiZXFuFDTQ7\",\"8PwfYqoDQFThzNtvf\",\"LfDeQBAH37L7wgT4Z\",\"Ecg4m7srYGgZsb4Ck\",\"fznzd3qnvtbFkkizz\",\"PXAcsKkssS2yLyDv2\",\"QRv96jmNaYsWkxQEG\",\"RjgSHK6YChDoWygiz\",\"vCxuabDxEv9YC3Szb\",\"yjtdwc2AC4jA2RWtn\",\"kNrnnMxhFZztMTBAX\",\"rp78xovPotpBHRXxR\",\"ndDP8Dk9YsDa3eNYX\",\"buX4mCQhtXCfBjeno\",\"YcCLwitFMAEJSnxAW\",\"JMAmMMBMrQqRy72Cc\",\"2QGRoQn2dRq3scu7k\",\"bvmTE46bfcM4ogj34\",\"ffjnHrx8Ym7A7pQWe\",\"Lg4t6SEWgtYz4u7Cj\",\"Fk9kLwoG4Brf4KsKf\",\"JS3hNM3XXkxPdg3yk\",\"2ptN2mhjFwFcHyPZd\",\"Ds7L5bksw2QRHjrKL\",\"HqmxnQJM66Y57twhn\",\"eYfPWvZwnJQkHbSTK\",\"fSQSHjW3e72MrWxbD\",\"srJ34BaybkQh3qRkM\",\"DEDniTrstQYGounXT\",\"edfA2AuzaFygbqx6A\",\"iS5BrkGLzJyPK7nKt\",\"q9FfWNiMDKRiaCJ5j\",\"LQxof8pGabGuWP7Gn\",\"pPpmP7xeJzGgK362R\",\"qAby4AWXmTNeusvg3\",\"N2wnZXkhDH86mgjQ8\",\"s5M5RvgqR9BhB9JoC\",\"KBxTPknCRmB2b5y3i\",\"9bQyb6rW7xfE4vgrR\",\"XD5nmvKQchKezPXhy\",\"cR3ibTMxLyEdDFCHY\",\"AFfw7cGg83uYk2Miy\",\"fTNQmMvTZhhiGBCMe\",\"3cF6NXq3ZEwdkgSjb\",\"BJp2WkwLWGHHB5oQW\",\"KJCDwGkoXh8qtbbKr\",\"c2q7mY39z5JPEMCaM\",\"XrqNzJ2FRG8HnGiR6\",\"CKHKhvJcq9jNMqrmd\",\"w3QDkmjZj2dAFDsjq\",\"tAF9Gf6PiGogbZuWs\",\"mvJBakQ35CWAnbbEZ\",\"9Ly8afdtofp8DXzrt\",\"qgQ4pLn7zPk49Gs2z\",\"4TmgHkn5vqyHK3sYC\",\"AasGs8AeX9Lcb9xJn\",\"Dhgtg2qYqkiB2Xnk8\",\"rrSC943cCKNG48sH4\",\"T6Rm8mREPMZSftzrC\",\"jkbavR2ATFJcpmo8M\",\"9pzFiFK3ANLjQfnr2\",\"g2mqHYvQmr78mET8i\",\"wwz3ixWSv8rFDHBXd\",\"eW9R2SCoYnY8HBAdL\",\"NGvCPuMiAP3xrRLfB\",\"H4abACFDH5t8CnnyH\",\"PTDFuxAzou7W6asWt\",\"Afnps7TJQuS9sipMb\",\"7wEd3pvkQCeixZ4mn\",\"Wr33AtxK3skayidha\",\"TCvpT4EPb8qNssNB7\",\"gKnWjDjwrJh7MK2df\",\"mLuzbm9QgS5dyH3BW\",\"EmG8uSoa5JfnsGA7T\",\"7o35fLemrTfMDQAmx\",\"8BFSTCnoe2QggN64c\",\"StNu7DPyTgEStZsMY\",\"jBo3xAopr37GFzY8g\",\"pwWtbXEjzuvrhEGwt\",\"zC8WrPp5BC6c2exrW\",\"d9LBRxvADNBB5QJMB\",\"rCrbqMiaGPgHYTNxu\",\"vCeeMuYDbz3MB4vsk\",\"dzS6WBTMHyFEag6Fp\",\"yCjLmD2eFndTZgTRP\",\"acFDzp9EJzHg8c2rD\",\"YfHnTYr4sD69ZACS2\",\"3RgmerDodPTKw4vup\",\"DGo5TNwrqWiD9AFLH\",\"5QN8R22z43SrwoHDz\",\"B4y8aoyXJtskYPFEL\",\"X6ewDRWwCNvDbSdg3\",\"MGzBxbtJHNbHWKr5g\",\"SZhcAyvXN7S6fak4C\",\"3nv6XbADB5qC6NxiP\",\"yQT2HLHwHwgAaKtfB\",\"5bXJ7R7pbwthZ8T3H\",\"KmQzA9fTmLmpeT4fH\",\"RfbjShbg8jmhyNtJh\",\"rQb5TvmZSqu93tRZM\",\"sbJcFfQjQ59Wfg4Cd\",\"4Lwjr34ypKNQNQCar\",\"CHvzhtXnv8HTbPQ56\",\"Qyfyyw6oC4EHAndzo\",\"yAouD3PxzED8a4gap\",\"u5u2YpHXiNgzDNJdX\",\"2qtde7moqrzm7B4Ht\",\"7tbtTx6uxePv6eQwP\",\"FiaTpm7ehfDv43wSG\",\"Wi4H6ayKsNDWWQCG5\",\"5nbHH4eApn6So9h2n\",\"GgQqni8TkbqEBGcsy\",\"Bncn3XCcxgz5LJsMZ\",\"Ne8mK9DDHG8TRkoxG\",\"YJqcXGoXCLXYW9WAS\",\"38h6CDqeBePDiejwB\",\"MKT7khMBGXzA22ykf\",\"NrRa4TS6uZR9xuXRt\",\"szQg8dxKNNre3v3Jk\",\"K42ijC8Jy8GHBnobP\"]},\"flags\":1},\"family\":[{\"_id\":\"wTQpSEZPpPdyLtK9k\",\"language\":\"javascript\"},{\"_id\":\"njFHutF5BjifxNR9e\",\"language\":\"python3\"}]}}"]