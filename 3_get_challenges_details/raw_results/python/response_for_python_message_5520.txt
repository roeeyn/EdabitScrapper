a["{\"msg\":\"result\",\"id\":\"1473\",\"result\":{\"_id\":\"ya4diBApyLQKG7TQK\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"def validate_relationships(txt):\\n\\t\",\"difficulty\":2.0632911392405062,\"familyId\":\"X7BtG7syoZrtFTsoP\",\"instructions\":\"You will be given a string consisting of a list of integers and their relationships to their neighboring integers. For instance:\\n\\n```\\n\\\"-15<-10<=0=0<5\\\"\\n```\\n\\nTest to see that all the relationships between the integers in the string are true. If they are, return `True`. If they are not, return `False`.\\n\\n### Examples\\n```\\nvalidate_relationships(\\\"5>-1<0=0<-5>5=5\\\") ➞ False\\n# This is False because 0 is not less than -5.\\n\\nvalidate_relationships(\\\"-15<-10<=0=0<5\\\") ➞ True\\n\\nvalidate_relationships(\\\"0=807<1000<=1000>9990<-3605<=20\\\") ➞ False\\n# This is False because 0 is not equal to 807.\\n```\\n\\n### Notes\\n- This is a modifcation of Helen Yu's \\\"Correct Signs\\\" challenge.\\n- As the examples above show, there could be negative numbers in the string.\\n- The numbers will only be separated by: `=, <, >, >=, <=`\\n- Tests will not contain any spaces.\",\"isHidden\":false,\"lab\":\"Test.assert_equals(validate_relationships(\\\"5>-1<0=0<-5>5=5\\\"), False)\\nTest.assert_equals(validate_relationships(\\\"-15<-10<=0=0<5\\\"), True)\\nTest.assert_equals(validate_relationships(\\\"0=807<1000<=1000>9990<-3605<=20\\\"), False)\\nTest.assert_equals(validate_relationships(\\\"3<=3<11>-109\\\"), True)\\nTest.assert_equals(validate_relationships(\\\"44>-33>=1>-13\\\"), False)\\nTest.assert_equals(validate_relationships(\\\"10>2=22>9>3\\\"), False)\\nTest.assert_equals(validate_relationships(\\\"44>0<13>=-2<-1=-1\\\"), True)\\nTest.assert_equals(validate_relationships(\\\"3>=-1\\\"), True)\\nTest.assert_equals(validate_relationships(\\\"9<=9<-1\\\"), False)\\nTest.assert_equals(validate_relationships(\\\"0<9<=9>-1\\\"), True)\\nTest.assert_equals(validate_relationships(\\\"44>=0<13>-2<-1=1\\\"), False)\\nTest.assert_equals(validate_relationships(\\\"-39<=5=5<=9>-1\\\"), True)\\nTest.assert_equals(validate_relationships(\\\"55>7>=7>=1\\\"), True)\\nTest.assert_equals(validate_relationships(\\\"3<19>-19>5>=-19\\\"), False)\",\"language\":\"python3\",\"summary\":\"You will be given a string consisting of a list of integers and their relationships to their neighboring integers. For instance:\\n\\n\\\"-15-15=5\\\") ➞ False\\nThis is False because 0 is not less than -5.\\n\\nvalidate_relationships(\\\"-159990, >=, <=`\\nTests will not contain any spaces.\",\"tags\":[\"strings\",\"conditions\",\"validation\"],\"timestamp\":{\"$date\":1573752219977},\"title\":\"Validate the Relationships Between Integers in a String\",\"stats\":{\"completed\":{\"total\":102,\"ratings\":[2,2,2,2,2,3,3,1,0,2,2,3,0,3,3,2,2,3,3,2,3,2,3,1,1,0,1,2,2,2,2,2,3,3,2,3,3,3,3,2,2,1,2,2,2,5,3,2,3,0,3,3,0,2,0,3,0,3,3,2,2,0,1,3,2,0,1,3,0,4,2,1,3,1,2,3,3,3,3],\"rators\":[\"tAF9Gf6PiGogbZuWs\",\"fAoLuqbGvHn4w2PHf\",\"8JyqsSbN2FJXPr3cw\",\"gMJhLdyw3tH7L96X2\",\"AYaEkTWLMmfzpwejr\",\"2fxapKr8XGdNeaKi2\",\"mQzSPJj3PT6pRuSbK\",\"otXtuQygbcYATMZoP\",\"3c9iCs4DiWNpChoZf\",\"bLQYFBhBthDLQE3LN\",\"FgkYtHLxeD8pETJ8T\",\"ySRnygsLwGGsmZhfa\",\"HqmxnQJM66Y57twhn\",\"qBaLGrm952ii9K23M\",\"gb9rvGus2Jv7bjZSs\",\"Nj6FwgBtAXsaQwsM2\",\"Jqk2uJZZxEv5wZFze\",\"K96FwtfDDN5WM4Bb7\",\"PTcm3qFvxvLnaKttM\",\"yoYQqaY6GszuTkNSs\",\"ab7BsQuhDo3QgE6bh\",\"vgTvCCxgvbCTDvaRT\",\"pkQBaSzukotPEXmrD\",\"wwMcJQRvf3X59Jyev\",\"cRpaCxYRmGcN3Nsoj\",\"s5M5RvgqR9BhB9JoC\",\"C4QntmkYtB89GNtpd\",\"kQH5b8MXJunh84Czq\",\"EjbDDFRECrzQDkzrX\",\"AasGs8AeX9Lcb9xJn\",\"8PwfYqoDQFThzNtvf\",\"4CFzv558qbGcpQwc4\",\"PytNZK9mNiRiZxPrm\",\"LRuR8ymb2pRDggrrt\",\"aEm3Wvj2rFYRL8Lrb\",\"mDWNyaaQ9hvPCRzSd\",\"cR3ibTMxLyEdDFCHY\",\"ZNnsMeNkdDhHjSrZb\",\"YRstQuthRkFeBiXug\",\"Yp7uvStL97cC9fKkY\",\"gJYuGdkXEWWmGRLzu\",\"n2BRY9X8899dcG8Bw\",\"HF28xZKSLM9wEuqNg\",\"a777e8chPvJkY3tKa\",\"v9KtC8YLbMWmXiW2H\",\"DEDniTrstQYGounXT\",\"iojEnnY9FsMfYzp6f\",\"4FYe2Q6Gh47nj2XPP\",\"zZDaXBxMzTCBhNkgL\",\"yjtdwc2AC4jA2RWtn\",\"DrkR35NqnP9NDLbq6\",\"Ecg4m7srYGgZsb4Ck\",\"CwXsu25ygLEwQbmQC\",\"hnyhBFWwNCz9mDfSi\",\"XjajdyybZZbkz8o5x\",\"mG8HqKiAQFTdRZthG\",\"J5T8gZqiZXFuFDTQ7\",\"qD2LrwaDrSdiybLKY\",\"DPi9QGLctq2y76KuE\",\"xn7uGNKeAwPEkP9oA\",\"dkcmCKwqApX5jBggc\",\"iS5BrkGLzJyPK7nKt\",\"J3upzLHuEwXH7Z2hx\",\"6MjSiiBLPcvXbXcaZ\",\"QRv96jmNaYsWkxQEG\",\"oBcs8GLX2ZFLXQy8y\",\"7scpcTEp3SEx5Wjg9\",\"7ifh8r4gvyYMhKB94\",\"FEYpu9RWysAgW3XnP\",\"GGdmhAvxXhqhhibJN\",\"Wpn95NqWxncQrwNgz\",\"eHcgvkTGsH7ZziqBo\",\"2PufnQcsHsfymufX3\",\"fznzd3qnvtbFkkizz\",\"8BFSTCnoe2QggN64c\",\"CHvzhtXnv8HTbPQ56\",\"gKnWjDjwrJh7MK2df\",\"o4ixjQGSaYqA2JoM4\",\"u5u2YpHXiNgzDNJdX\",\"T6iBEE2jp7f7iEF2P\",\"4Lwjr34ypKNQNQCar\",\"yod5YhKtPqw2GfG9B\",\"8sNv5PTHa7XQ8bNqR\",\"RoGGD5cpHb4ftdLDv\",\"mvJBakQ35CWAnbbEZ\",\"ey3CASd6Je5LEJzfB\",\"AQSqD9oNv2uPfxZCR\",\"Ds7L5bksw2QRHjrKL\",\"3KkyQm77zsew58Dc2\",\"Qyfyyw6oC4EHAndzo\"],\"quality\":[5,4,5,5,3,5,5,5,5,5,5,5,5,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":4.8125,\"family\":[{\"_id\":\"M2Ej6MBbtsa4EsNZ8\",\"language\":\"cpp\"},{\"_id\":\"SrdMmMwXn5TAKTx9w\",\"language\":\"java\"},{\"_id\":\"Kg7rsPaPHMydFisP7\",\"language\":\"javascript\"},{\"_id\":\"ya4diBApyLQKG7TQK\",\"language\":\"python3\"},{\"_id\":\"moAfmygzHQFzRZMCE\",\"language\":\"ruby\"}]}}"]