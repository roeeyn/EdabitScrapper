a["{\"msg\":\"result\",\"id\":\"1850\",\"result\":{\"_id\":\"86CrsZ2rRMnCsDSza\",\"author\":\"bangyen\",\"authorId\":\"yv7c4H2jimSKHEjtG\",\"code\":\"automaton = {\\n\\t\\n}\",\"difficulty\":2.5555555555555554,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"BZvsux8GAhaTpGwfP\",\"instructions\":\"Create a [finite-state automaton] (https://en.wikipedia.org/wiki/Finite-state_machine) that determines whether a binary number is divisible by five. The finite-state automaton from [this challenge] (https://edabit.com/challenge/mmiLWJzP3mvhjME7b) can be constructed as follows:\\n\\n### Example FSA\\n```\\ndivisible = {\\n  \\\"S0\\\": [\\\"S0\\\", \\\"S1\\\"],\\n  \\\"S1\\\": [\\\"S2\\\", \\\"S0\\\"],\\n  \\\"S2\\\": [\\\"S1\\\", \\\"S2\\\"]\\n}\\n```\\n\\nEach key is a state, and each value denotes instructions for each type of input. For `\\\"S0\\\"`, the array `[\\\"S0\\\", \\\"S1\\\"]` indicates that if a `0` is received, the new state is `\\\"S0\\\"`. If `1` is received, the new state is `\\\"S1\\\"`.\\n\\n### Notes\\n- Remember to create a dictionary, not a function.\\n- In this case, `\\\"accept\\\"` would mean that the number is divisible by five, whereas `\\\"reject\\\"` means that it isn't.\\n- The starting and accepting states should both be `\\\"S0\\\"`.\\n- The automaton should read the digits of a binary number from left to right. For example, the first digit for 26 (0b11010) would be 1, since we ignore the 0b.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"from random import randrange as rand\\n\\n# testing function\\ndef test(arg, state='S0'):\\n\\tif arg == 'state': return state\\n\\tif arg == 'stop': return ['accept', 'reject'][state != 'S0']\\n\\treturn lambda a: test(a, automaton[state][arg])\\n\\n# random tests\\nfor _ in range(7):\\n\\tnum = rand(1, 2**10)\\n\\tnum_lst = ''.join(['(%s)' % k for k in bin(num)[2:]])\\n\\tstate = 'accept' if num % 5 == 0 else 'reject'\\n\\tmsg = 'Number: ' + str(num)\\n\\tTest.assert_equals(eval('test%s(\\\"stop\\\")' % num_lst), state, msg)\\n\\nfor _ in range(7):\\n\\tnum = rand(1, 2**10)\\n\\tnum_lst = ''.join(['(%s)' % k for k in bin(num)[2:]])\\n\\tstate = 'S' + str(num % 5)\\n\\tmsg = 'Number: ' + str(num)\\n\\tTest.assert_equals(eval('test%s(\\\"state\\\")' % num_lst), state, msg)\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,1,0,3,3,3,3,3,2,3,3,3,3,4,1,3,0,3,3,4,3,4,4],\"rators\":[\"yv7c4H2jimSKHEjtG\",\"JPvZhjbdWEoYCuuaZ\",\"aEm3Wvj2rFYRL8Lrb\",\"gJYuGdkXEWWmGRLzu\",\"efcsSdKgupNnf9DKD\",\"AasGs8AeX9Lcb9xJn\",\"8PwfYqoDQFThzNtvf\",\"9yL8YzvKhkkAC8PvD\",\"yjtdwc2AC4jA2RWtn\",\"qD2LrwaDrSdiybLKY\",\"oBcs8GLX2ZFLXQy8y\",\"xn7uGNKeAwPEkP9oA\",\"fznzd3qnvtbFkkizz\",\"8sNv5PTHa7XQ8bNqR\",\"iS5BrkGLzJyPK7nKt\",\"nAT5ecCasuBSaWoLx\",\"yod5YhKtPqw2GfG9B\",\"iojEnnY9FsMfYzp6f\",\"2PufnQcsHsfymufX3\",\"P7NmFbCJ5offXMRvB\",\"DAZLK4574S7i7zTXy\",\"9Su7sefhKBCoSWvBh\"],\"total\":21,\"quality\":[]},\"flags\":0},\"summary\":\"Create a [finite-state automaton] (https://en.wikipedia.org/wiki/Finite-state_machine) that determines whether a binary number is divisible by five. The finite-state automaton from [this challenge] (https://edabit.com/challenge/mmiLWJzP3mvhjME7b) can be constructed as follows:\\n\\nExample FSA\\ndivisible = {\\n  \\\"S0\\\": [\\\"S0\\\", \\\"S1\\\"],\\n  \\\"S1\\\": [\\\"S2\\\", \\\"S0\\\"],\\n  \\\"S2\\\": [\\\"S1\\\"\",\"tags\":[\"data_structures\",\"functional_programming\",\"math\"],\"timestamp\":{\"$date\":1592200020907},\"title\":\"FSA: Creating Machines\",\"quality\":0,\"family\":[{\"_id\":\"86CrsZ2rRMnCsDSza\",\"language\":\"python3\"}]}}"]