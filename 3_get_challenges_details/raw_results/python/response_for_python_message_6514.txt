a["{\"msg\":\"result\",\"id\":\"1966\",\"result\":{\"_id\":\"sRE3RGnWs7AHqGMkR\",\"author\":\"Alessandro Manicone\",\"authorId\":\"AasGs8AeX9Lcb9xJn\",\"code\":\"import re\\n\\nintegers = \\\"yourregularexpressionhere\\\"\\nfloats = \\\"yourregularexpressionhere\\\"\\npositive = \\\"yourregularexpressionhere\\\"\\nnegative = \\\"yourregularexpressionhere\\\"\\nnumbers = \\\"yourregularexpressionhere\\\"\",\"difficulty\":2.742857142857143,\"familyId\":\"Z7TypFRCTsnHTn75d\",\"instructions\":\"Write five **regular expressions:**\\n- One called `integers` that will match **all whole numbers**, positive or negative.\\n- One called `floats` that will match **all decimal numbers**, positive or negative.\\n- One called `positive` that will match **all positive numbers**, whole or decimal.\\n- One called `negative` that will match **all negative numbers**, whole or decimal.\\n- One called `numbers` that will match **all numbers**, whole or decimal, positive or negative.\\n\\nDetails to take into account:\\n- Fractions of 1 may or may not be preceded by a 0. All `0.5`, `.5`, `-.5` and are valid numbers.\\n- Floats will have at least one decimal number. Both `4.` and `-3.` are not valid numbers.\\n- Positives numbers may or may not be preceded by a `+`. Both `3` and `+3` are valid numbers.\\n- Numbers preceded by more than one symbol or having more than one decimal point are no considered valid. All `++1`, `-+4`, `3.3.6` are not valid numbers.\\n- **All numbers, valid or not, will be preceded and followed by a whitespace.**\\n\\n### Example\\n```\\ntxt = \\\" 123.456 2 +7 -88 -.25 9.10.11 -4. +-34 -0.6 --5 \\\"\\nintegers = \\\"yourregularexpressionhere\\\"\\nfloats = \\\"yourregularexpressionhere\\\"\\npositive = \\\"yourregularexpressionhere\\\"\\nnegative = \\\"yourregularexpressionhere\\\"\\nnumbers = \\\"yourregularexpressionhere\\\"\\n\\nre.findall(integers, txt) ➞ [\\\"2\\\", \\\"+7\\\", \\\"-88\\\"]\\nre.findall(floats, txt) ➞ [\\\"123.456\\\", \\\"-.25\\\", \\\"-0.6\\\"]\\nre.findall(positive, txt) ➞ [\\\"123.456\\\", \\\"2\\\", \\\"+7\\\"]\\nre.findall(negative, txt) ➞ [\\\"-88\\\", \\\"-.25\\\", \\\"-0.6\\\"]\\nre.findall(numbers, txt) ➞ [\\\"123.456\\\", \\\"2\\\", \\\"+7\\\", \\\"-88\\\", \\\"-.25\\\", \\\"-0.6\\\"]\\n```\\n\\n### Notes\\n- You **don't** need to write a function, just the pattern.\\n- Do **not** remove `import re` from the code.\\n- If you get stuck, check **Comments** for some helpful hints.\\n- Find more info on RegEx in **Resources**.\\n- You can find all the challenges of this series in my [Basic RegEx](https://edabit.com/collection/8PEq2azWDtAZWPFe2) collection.\",\"isHidden\":false,\"lab\":\"txt = ' 123.456 2 +7 -88 -.25 9.10.11 -4. +-34 -0.6 --5 '\\n\\nTest.assert_equals(re.findall(integers, txt), ['2', '+7', '-88'])\\nTest.assert_equals(re.findall(floats, txt), ['123.456', '-.25', '-0.6'])\\nTest.assert_equals(re.findall(positive, txt), ['123.456', '2', '+7'])\\nTest.assert_equals(re.findall(negative, txt), ['-88', '-.25', '-0.6'])\\nTest.assert_equals(re.findall(numbers, txt), ['123.456', '2', '+7', '-88', '-.25', '-0.6'])\\n\\n#Note from the original:\\n#Credits to https://javascript.info/regexp-groups\\n\\n#Translated from JavaScript.\\n#The RegEx series was originally posted by Isaac Pak.\",\"language\":\"python3\",\"summary\":\"Write five regular expressions:\\nOne called integers that will match all whole numbers, positive or negative.\\nOne called floats that will match all decimal numbers, positive or negative.\\nOne called positive that will match all positive numbers, whole or decimal.\\nOne called negative that will match all negative numbers, whole or decimal.\\nOne called numbers that\",\"tags\":[\"regex\"],\"timestamp\":{\"$date\":1587986926990},\"title\":\"RegEx Exercise #3: Find the Numbers\",\"stats\":{\"completed\":{\"total\":36,\"ratings\":[2,2,2,2,2,4,2,2,3,2,3,2,4,2,3,4,3,4,2,3,3,2,4,2,3,2,3,2,4,2,4,4,3,2,3],\"rators\":[\"AasGs8AeX9Lcb9xJn\",\"tAF9Gf6PiGogbZuWs\",\"aEm3Wvj2rFYRL8Lrb\",\"8PwfYqoDQFThzNtvf\",\"8JyqsSbN2FJXPr3cw\",\"gb9rvGus2Jv7bjZSs\",\"jL4y5fTJAMBjhZmko\",\"mDWNyaaQ9hvPCRzSd\",\"3ECpdeExhBmkYXtba\",\"aPLCH3FzaM9whm67G\",\"Phd2FdPjo9BhBfvKh\",\"YRstQuthRkFeBiXug\",\"rQRNL3B4x9gg4SkXf\",\"xn7uGNKeAwPEkP9oA\",\"R4SjTgDnpigJYDLyL\",\"cnmj8mAbLcMnKaqLS\",\"jFcHRfu77aNu6YpZg\",\"n2BRY9X8899dcG8Bw\",\"4597PD5mbXzHa3vdi\",\"pscBduNyf8TDHe2Km\",\"8WpvgSbQciTQWdd8T\",\"zZDaXBxMzTCBhNkgL\",\"hR7GMiqGap4CzEWSy\",\"oHbErJxjYJhD66d5w\",\"yjtdwc2AC4jA2RWtn\",\"Y6w9WxXzRweSiy3Ls\",\"dQK2T76aHcRJkrbKB\",\"J3upzLHuEwXH7Z2hx\",\"6xTu4r8NMczBFvmtz\",\"8sNv5PTHa7XQ8bNqR\",\"bvmTE46bfcM4ogj34\",\"2PufnQcsHsfymufX3\",\"JKb5rhL6DKcCAypF9\",\"H9KZi2cjt4FwH7qog\",\"GTKsdeEihE636Le9i\",\"Nua6T3dBurBy3Qfg9\"],\"quality\":[5,5,5,4,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":4.833333333333333,\"family\":[{\"_id\":\"e5PvcKmnbdNahT9TZ\",\"language\":\"javascript\"},{\"_id\":\"sRE3RGnWs7AHqGMkR\",\"language\":\"python3\"}]}}"]