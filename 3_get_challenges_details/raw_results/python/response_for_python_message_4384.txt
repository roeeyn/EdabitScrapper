a["{\"msg\":\"result\",\"id\":\"910\",\"result\":{\"_id\":\"K6oxe3bvPqaQWxkFw\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"def join_digits(n):\\n\\t\",\"difficulty\":1.453531598513011,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"jTgYzQ4oJLJANof6u\",\"instructions\":\"Create a function which takes in a number `n` as input and returns all numbers **up to and including n** joined together in a string. Separate each **digit from each other** with the character `\\\"-\\\"`.\\n\\n### Examples\\n```\\njoin_digits(4) ➞ \\\"1-2-3-4\\\"\\n\\njoin_digits(11) ➞ \\\"1-2-3-4-5-6-7-8-9-1-0-1-1\\\"\\n\\njoin_digits(15) ➞ \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5\\\"\\n```\\n\\n### Notes\\nRemember to start at 1 and include `n` as the last number.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(join_digits(1), \\\"1\\\")\\nTest.assert_equals(join_digits(2), \\\"1-2\\\")\\nTest.assert_equals(join_digits(3), \\\"1-2-3\\\")\\nTest.assert_equals(join_digits(4), \\\"1-2-3-4\\\")\\nTest.assert_equals(join_digits(5), \\\"1-2-3-4-5\\\")\\nTest.assert_equals(join_digits(6), \\\"1-2-3-4-5-6\\\")\\nTest.assert_equals(join_digits(7), \\\"1-2-3-4-5-6-7\\\")\\nTest.assert_equals(join_digits(8), \\\"1-2-3-4-5-6-7-8\\\")\\nTest.assert_equals(join_digits(9), \\\"1-2-3-4-5-6-7-8-9\\\")\\nTest.assert_equals(join_digits(10), \\\"1-2-3-4-5-6-7-8-9-1-0\\\")\\nTest.assert_equals(join_digits(11), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1\\\")\\nTest.assert_equals(join_digits(12), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2\\\")\\nTest.assert_equals(join_digits(13), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3\\\")\\nTest.assert_equals(join_digits(14), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4\\\")\\nTest.assert_equals(join_digits(15), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5\\\")\\nTest.assert_equals(join_digits(16), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5-1-6\\\")\\nTest.assert_equals(join_digits(17), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5-1-6-1-7\\\")\\nTest.assert_equals(join_digits(18), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5-1-6-1-7-1-8\\\")\\nTest.assert_equals(join_digits(19), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5-1-6-1-7-1-8-1-9\\\")\\nTest.assert_equals(join_digits(20), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5-1-6-1-7-1-8-1-9-2-0\\\")\\nTest.assert_equals(join_digits(21), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5-1-6-1-7-1-8-1-9-2-0-2-1\\\")\\nTest.assert_equals(join_digits(22), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5-1-6-1-7-1-8-1-9-2-0-2-1-2-2\\\")\\nTest.assert_equals(join_digits(23), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5-1-6-1-7-1-8-1-9-2-0-2-1-2-2-2-3\\\")\\nTest.assert_equals(join_digits(24), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5-1-6-1-7-1-8-1-9-2-0-2-1-2-2-2-3-2-4\\\")\\nTest.assert_equals(join_digits(25), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5-1-6-1-7-1-8-1-9-2-0-2-1-2-2-2-3-2-4-2-5\\\")\\nTest.assert_equals(join_digits(26), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5-1-6-1-7-1-8-1-9-2-0-2-1-2-2-2-3-2-4-2-5-2-6\\\")\\nTest.assert_equals(join_digits(27), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5-1-6-1-7-1-8-1-9-2-0-2-1-2-2-2-3-2-4-2-5-2-6-2-7\\\")\\nTest.assert_equals(join_digits(28), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5-1-6-1-7-1-8-1-9-2-0-2-1-2-2-2-3-2-4-2-5-2-6-2-7-2-8\\\")\\nTest.assert_equals(join_digits(29), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5-1-6-1-7-1-8-1-9-2-0-2-1-2-2-2-3-2-4-2-5-2-6-2-7-2-8-2-9\\\")\\nTest.assert_equals(join_digits(30), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5-1-6-1-7-1-8-1-9-2-0-2-1-2-2-2-3-2-4-2-5-2-6-2-7-2-8-2-9-3-0\\\")\\nTest.assert_equals(join_digits(31), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5-1-6-1-7-1-8-1-9-2-0-2-1-2-2-2-3-2-4-2-5-2-6-2-7-2-8-2-9-3-0-3-1\\\")\\nTest.assert_equals(join_digits(32), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5-1-6-1-7-1-8-1-9-2-0-2-1-2-2-2-3-2-4-2-5-2-6-2-7-2-8-2-9-3-0-3-1-3-2\\\")\\nTest.assert_equals(join_digits(33), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5-1-6-1-7-1-8-1-9-2-0-2-1-2-2-2-3-2-4-2-5-2-6-2-7-2-8-2-9-3-0-3-1-3-2-3-3\\\")\\nTest.assert_equals(join_digits(34), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5-1-6-1-7-1-8-1-9-2-0-2-1-2-2-2-3-2-4-2-5-2-6-2-7-2-8-2-9-3-0-3-1-3-2-3-3-3-4\\\")\\nTest.assert_equals(join_digits(35), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5-1-6-1-7-1-8-1-9-2-0-2-1-2-2-2-3-2-4-2-5-2-6-2-7-2-8-2-9-3-0-3-1-3-2-3-3-3-4-3-5\\\")\\nTest.assert_equals(join_digits(36), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5-1-6-1-7-1-8-1-9-2-0-2-1-2-2-2-3-2-4-2-5-2-6-2-7-2-8-2-9-3-0-3-1-3-2-3-3-3-4-3-5-3-6\\\")\\nTest.assert_equals(join_digits(37), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5-1-6-1-7-1-8-1-9-2-0-2-1-2-2-2-3-2-4-2-5-2-6-2-7-2-8-2-9-3-0-3-1-3-2-3-3-3-4-3-5-3-6-3-7\\\")\\nTest.assert_equals(join_digits(38), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5-1-6-1-7-1-8-1-9-2-0-2-1-2-2-2-3-2-4-2-5-2-6-2-7-2-8-2-9-3-0-3-1-3-2-3-3-3-4-3-5-3-6-3-7-3-8\\\")\\nTest.assert_equals(join_digits(39), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5-1-6-1-7-1-8-1-9-2-0-2-1-2-2-2-3-2-4-2-5-2-6-2-7-2-8-2-9-3-0-3-1-3-2-3-3-3-4-3-5-3-6-3-7-3-8-3-9\\\")\\nTest.assert_equals(join_digits(40), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5-1-6-1-7-1-8-1-9-2-0-2-1-2-2-2-3-2-4-2-5-2-6-2-7-2-8-2-9-3-0-3-1-3-2-3-3-3-4-3-5-3-6-3-7-3-8-3-9-4-0\\\")\\nTest.assert_equals(join_digits(41), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5-1-6-1-7-1-8-1-9-2-0-2-1-2-2-2-3-2-4-2-5-2-6-2-7-2-8-2-9-3-0-3-1-3-2-3-3-3-4-3-5-3-6-3-7-3-8-3-9-4-0-4-1\\\")\\nTest.assert_equals(join_digits(42), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5-1-6-1-7-1-8-1-9-2-0-2-1-2-2-2-3-2-4-2-5-2-6-2-7-2-8-2-9-3-0-3-1-3-2-3-3-3-4-3-5-3-6-3-7-3-8-3-9-4-0-4-1-4-2\\\")\\nTest.assert_equals(join_digits(43), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5-1-6-1-7-1-8-1-9-2-0-2-1-2-2-2-3-2-4-2-5-2-6-2-7-2-8-2-9-3-0-3-1-3-2-3-3-3-4-3-5-3-6-3-7-3-8-3-9-4-0-4-1-4-2-4-3\\\")\\nTest.assert_equals(join_digits(44), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5-1-6-1-7-1-8-1-9-2-0-2-1-2-2-2-3-2-4-2-5-2-6-2-7-2-8-2-9-3-0-3-1-3-2-3-3-3-4-3-5-3-6-3-7-3-8-3-9-4-0-4-1-4-2-4-3-4-4\\\")\\nTest.assert_equals(join_digits(45), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5-1-6-1-7-1-8-1-9-2-0-2-1-2-2-2-3-2-4-2-5-2-6-2-7-2-8-2-9-3-0-3-1-3-2-3-3-3-4-3-5-3-6-3-7-3-8-3-9-4-0-4-1-4-2-4-3-4-4-4-5\\\")\\nTest.assert_equals(join_digits(46), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5-1-6-1-7-1-8-1-9-2-0-2-1-2-2-2-3-2-4-2-5-2-6-2-7-2-8-2-9-3-0-3-1-3-2-3-3-3-4-3-5-3-6-3-7-3-8-3-9-4-0-4-1-4-2-4-3-4-4-4-5-4-6\\\")\\nTest.assert_equals(join_digits(47), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5-1-6-1-7-1-8-1-9-2-0-2-1-2-2-2-3-2-4-2-5-2-6-2-7-2-8-2-9-3-0-3-1-3-2-3-3-3-4-3-5-3-6-3-7-3-8-3-9-4-0-4-1-4-2-4-3-4-4-4-5-4-6-4-7\\\")\\nTest.assert_equals(join_digits(48), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5-1-6-1-7-1-8-1-9-2-0-2-1-2-2-2-3-2-4-2-5-2-6-2-7-2-8-2-9-3-0-3-1-3-2-3-3-3-4-3-5-3-6-3-7-3-8-3-9-4-0-4-1-4-2-4-3-4-4-4-5-4-6-4-7-4-8\\\")\\nTest.assert_equals(join_digits(49), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5-1-6-1-7-1-8-1-9-2-0-2-1-2-2-2-3-2-4-2-5-2-6-2-7-2-8-2-9-3-0-3-1-3-2-3-3-3-4-3-5-3-6-3-7-3-8-3-9-4-0-4-1-4-2-4-3-4-4-4-5-4-6-4-7-4-8-4-9\\\")\\nTest.assert_equals(join_digits(50), \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5-1-6-1-7-1-8-1-9-2-0-2-1-2-2-2-3-2-4-2-5-2-6-2-7-2-8-2-9-3-0-3-1-3-2-3-3-3-4-3-5-3-6-3-7-3-8-3-9-4-0-4-1-4-2-4-3-4-4-4-5-4-6-4-7-4-8-4-9-5-0\\\")\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,1,1,2,0,1,1,5,2,0,2,2,0,2,1,2,2,2,1,1,1,1,1,2,2,2,1,1,2,2,1,0,2,2,3,2,1,2,0,2,1,1,1,0,2,1,1,1,2,2,2,2,2,1,0,2,2,2,1,0,2,1,0,3,1,2,1,2,1,0,2,2,1,2,2,3,1,2,2,1,2,2,1,0,2,3,1,0,2,2,1,1,1,2,2,2,3,0,2,1,1,2,2,0,1,1,2,3,2,0,2,1,2,0,1,2,0,2,1,1,1,2,2,2,2,2,2,2,2,1,1,2,0,1,2,1,1,0,1,1,2,2,1,1,2,2,1,1,1,2,2,2,2,1,2,2,1,2,2,2,1,1,2,1,3,2,2,1,0,2,2,2,1,2,1,1,1,2,2,2,0,1,2,3,2,2,3,2,2,2,1,2,2,1,2,2,1,2,2,0,2,2,2,2,1,0,0,2,2,0,2,2,1,3,2,0,1,0,0,2,2,0,1,2,0,2,2,2,1,2,1,2,0,2,2,1,2,2,1,1,3,2,1,2,2,0,1,1,2,1,1,2,2,2,1,1,2,2,1,0,1,2,1,1,1],\"rators\":[\"PXAcsKkssS2yLyDv2\",\"tAF9Gf6PiGogbZuWs\",\"N2wnZXkhDH86mgjQ8\",\"u5u2YpHXiNgzDNJdX\",\"zd9FLSzsGz3evKafy\",\"C4QntmkYtB89GNtpd\",\"J5T8gZqiZXFuFDTQ7\",\"AasGs8AeX9Lcb9xJn\",\"gb9rvGus2Jv7bjZSs\",\"WLFPvm65aHfgwQy7N\",\"g8yJiPAWXbrgxbjfZ\",\"aRqQ42J5zqCmBNd8w\",\"WtFQigNmNZ5EREPzo\",\"ey3CASd6Je5LEJzfB\",\"RX8vfGmaNWLahPWpd\",\"FMTrSDsEsWt2GYALz\",\"hiGXnxds6zo7XsfTw\",\"geZ3oLjhh9KAw7yHs\",\"hQJZAKtGhbvtiHRn8\",\"j2wcHGHmPCHbaQEye\",\"2fxapKr8XGdNeaKi2\",\"myXAR5qDJsBaPnff2\",\"WKsvry6M74GDrtqHQ\",\"6z96cWCaJ5Nueojn5\",\"aEm3Wvj2rFYRL8Lrb\",\"3ECpdeExhBmkYXtba\",\"r7JXHsnJGCbRxYvDf\",\"9Ly8afdtofp8DXzrt\",\"hnyhBFWwNCz9mDfSi\",\"8LfTheFzvicameoz9\",\"dHZqT6h4JMwk5fPC8\",\"sz8ufn9i8zeiGWpAy\",\"TCaTpxjzt2x9xAL86\",\"E9ttMPTkLkKG6nZrg\",\"yabtHTtycsWhcGBfD\",\"8JyqsSbN2FJXPr3cw\",\"4CFzv558qbGcpQwc4\",\"Z85ajWfZ4jDPkbvR4\",\"w3A7cBWyAfukk6xEQ\",\"PSrcg6fy835R4c5CW\",\"yZvzB3qFb8pkHy4dg\",\"mybpojPXaZigaqsAD\",\"mxX4rH5ELYkdZ2Mbw\",\"23oi2a3vQwhtLEbSj\",\"2iFe3EHEH2YdhSKrs\",\"5nY48krepaT4a4QTN\",\"cR3ibTMxLyEdDFCHY\",\"KfXMEiCdZfCZGmjTt\",\"fXfjsrGcdwpy7hedt\",\"oKNAZ5BNeNWyvkiiB\",\"HQxp7NcdvF92G7bYS\",\"CEd9tLdXeDeNHSzys\",\"jNvegJWCk5HCtEMbK\",\"4AoQy4B5fPs2KBinr\",\"n2BRY9X8899dcG8Bw\",\"PWJq8oJNMEhwRGD4M\",\"GM2X83qnuLXTHe5zA\",\"wZoxzQDbso9SMAPkY\",\"v9KtC8YLbMWmXiW2H\",\"cqDm5TJgJLAQyhkiN\",\"s5M5RvgqR9BhB9JoC\",\"2QGRoQn2dRq3scu7k\",\"mZnXCe6hcnbv3DNvp\",\"JQ5uoxA4WZgN6HyJk\",\"Qq2AEGMAtYKJeRRHm\",\"p8qqFdJ3FSk5x9z3G\",\"Yp7uvStL97cC9fKkY\",\"Jg8ZSRXe3NoDMCqGu\",\"HDksZLiRAmpnCKHta\",\"WKwiYrZohzQmytYzL\",\"8PwfYqoDQFThzNtvf\",\"C9LKGu2g5hSijvDzA\",\"Zhy5X7BZnqk8hacEw\",\"MKT7khMBGXzA22ykf\",\"HPMiZMZ2WGu4FWaRH\",\"HF28xZKSLM9wEuqNg\",\"gJYuGdkXEWWmGRLzu\",\"yKttxy9JGn5Jzwuj6\",\"ZNnsMeNkdDhHjSrZb\",\"eLkj3Zb2DqiW4AEEh\",\"q5a96XumccZyhQNyL\",\"KRSKj7ikX2ytWFmod\",\"9uZpgAtSuPZ7W7DL6\",\"Cc2Cgj4MWXZxsTooC\",\"k5mp7Hkg8w5rwiXpe\",\"Jqk2uJZZxEv5wZFze\",\"Fk9kLwoG4Brf4KsKf\",\"DEDniTrstQYGounXT\",\"kYWb8BwpKwunQkxeX\",\"KdNDysEsy2TW5QRJ2\",\"M8dQuMrEpP8Hc3tHN\",\"9pzFiFK3ANLjQfnr2\",\"4BHrt3NoCQECjvFJC\",\"LmTRmhiuDidAebAsw\",\"2innwjWqxJHo4eRGh\",\"uiEuENARwFpnNMfFs\",\"4rwxLqLs2mNZNg8NB\",\"sbJcFfQjQ59Wfg4Cd\",\"9zBQ4k7pWXa8Jfro4\",\"FEYpu9RWysAgW3XnP\",\"rzF2F7DgSjgJrneo8\",\"LWCzZ8mb8gwrRNGfq\",\"eMuCpJ2spXWkJjWNz\",\"di2hhADLx59Bj4ewM\",\"mDWNyaaQ9hvPCRzSd\",\"DwetpbChQM4r6Gwah\",\"dZGNAJXB24zNh2tsD\",\"FzxTj4GuujhwpZM7y\",\"FRN2W8RYpJ6GPhgRy\",\"AF6LgdKhEdzwgRJom\",\"nfXGHENb5md7m355s\",\"DrkR35NqnP9NDLbq6\",\"ahk2qiXKJA753wAJk\",\"XrqNzJ2FRG8HnGiR6\",\"7txFzDQ43vJ7qCY88\",\"dKKMvaYoJunNPk5Wa\",\"DQskEvAv5KiJDPtGF\",\"yr822PZmmiDDenxpB\",\"WHR8EHPPEpghNnpXt\",\"j57Xos8wYZWcwqMrt\",\"TR5aWdDKP6iaL6mGK\",\"ekQh3jzgGLsEMbKo3\",\"ijDkrdZLoL5Cfqco3\",\"6SKDJwXpev4qPSzgM\",\"So6PHm74mfJuY2WTs\",\"s2ZMtR9deh6Kia7pb\",\"4yNLEwL2rsx4EE5Nt\",\"a777e8chPvJkY3tKa\",\"NG8PWBSjsM8mMhQEq\",\"E8TMSMSamEbBtf9Lo\",\"eEK5MpDgtJyYtZzuM\",\"5s4qhuRJijYaDNXva\",\"H9KZi2cjt4FwH7qog\",\"jBR47vA7HwAZqp4QA\",\"2ptN2mhjFwFcHyPZd\",\"3cF6NXq3ZEwdkgSjb\",\"c4SCmmZJEL6yvGfZb\",\"JS3hNM3XXkxPdg3yk\",\"NNE5HNRXAkmhrWgyQ\",\"H4abACFDH5t8CnnyH\",\"ZrKCkX7xxGGZzauFW\",\"Ne8mK9DDHG8TRkoxG\",\"HCP8ZsX84rLZe2vHT\",\"8BFSTCnoe2QggN64c\",\"YcCLwitFMAEJSnxAW\",\"syRNbbPdLCGXbH2Gy\",\"8TAYWzqJAkXq2MAba\",\"2HfNkb2SoqdyjKW3o\",\"DxxNN37iEz7b8t2nf\",\"DoDsp3ets8frF9W3C\",\"4ZicxybyvEsuA9iET\",\"TwKZ3835iFLog2RuQ\",\"YGcuZHkQBZWLRtzMq\",\"zT9LpkiwYjLviYYW6\",\"GSoEdG3NzkmwFHr9D\",\"iBTooWAGe7dD9svva\",\"yNjkHfHESBAnCssPB\",\"iojEnnY9FsMfYzp6f\",\"GGprTwrkjuccmrQRg\",\"bJxaKHJqR82EWw8Su\",\"R4SjTgDnpigJYDLyL\",\"CwXsu25ygLEwQbmQC\",\"Pe8vWpDHRuH9nSGKW\",\"b9YQPLb9ZPSADdHXX\",\"xwEZk3bNZoNDPJYF5\",\"iS5BrkGLzJyPK7nKt\",\"yjtdwc2AC4jA2RWtn\",\"hRiMXDZNAzyPd5tpt\",\"F2ykFxhDEEkj6N5KE\",\"oBcs8GLX2ZFLXQy8y\",\"ta5CrWnBCRusD2WMo\",\"HqmxnQJM66Y57twhn\",\"yAouD3PxzED8a4gap\",\"Wv2vJnEj8ywNmARoF\",\"EMJ6uvBZkie429gdg\",\"YA7SDhpgEtsqynvNL\",\"6gS4E2C84vBYTYeDZ\",\"Q9afpRu3u8zuWuzLQ\",\"i5iePG5GqhJJ8HEoB\",\"u7i7WPM63n42r8R8o\",\"RehJGBFS6CYiWdjZx\",\"TPhfpB5tzQWSSn67n\",\"w2HhxvSLmDhaGCAjE\",\"9cnex9yAD4hyb5y5S\",\"ji5f27FPz4wRRF6Ls\",\"rK3xSCovoqjmkgBL9\",\"uw8E83imJYpQiiPpP\",\"KLmLKaJPfsYxp42p2\",\"FvFhg2wELM3SCZDZQ\",\"k2Eo3wyfZZ6KxvKhN\",\"sX9GZp3fYyQLrBKMJ\",\"winaFSNGA6hosaNA6\",\"tpxMgkGSHwBjS95Ta\",\"mG8HqKiAQFTdRZthG\",\"gXTAie79kiw28tx5u\",\"9CoqdidjM9KbeKnHY\",\"Kh3Pc2ZRusurLaMyP\",\"b5zo7s6xrqWgQnPao\",\"6HgMANhu6WiGyXSGN\",\"9FCeFzjPA4jrQ7oHW\",\"kNrnnMxhFZztMTBAX\",\"8WpvgSbQciTQWdd8T\",\"NzbRqGWspQnWMoDrF\",\"QRv96jmNaYsWkxQEG\",\"axdSNLZpiCDF8RS6n\",\"wRttWTM59y8m5mx7x\",\"DPi9QGLctq2y76KuE\",\"7K2GEb5TZRtSpyyGS\",\"dj5AyG5fWP8FdsSmZ\",\"J3upzLHuEwXH7Z2hx\",\"dBzwBtRjZqB98DJeB\",\"cAP3n5NY64uoMwzRR\",\"8fZxjQfuXw5HMSRJM\",\"dYPkStFnLvAMsHSzZ\",\"d8qtzoLB264iP8tdY\",\"KJCDwGkoXh8qtbbKr\",\"YRAzEBJoLvSaiPtYx\",\"RGMbFMZXJr7DhcAJy\",\"g9FyJ8yeT9ic97Qp2\",\"sHjfbGQGLHE6JR6qu\",\"5XiuAqicKD4hBdu63\",\"4fjSgcqhQQZM2ZFRP\",\"3pxHTZBsv7MKzFG6Y\",\"C2AfMipCicfD58WJ9\",\"Cybtjz3cF7RgoiqrN\",\"fBTer8y978SpAu2u2\",\"HuNF3xTBzmatyGSTm\",\"dQd664XYR6QKHFvHW\",\"6428wKHtwKkFdvBs5\",\"buX4mCQhtXCfBjeno\",\"o4ixjQGSaYqA2JoM4\",\"CLypXaZksY99mpRCm\",\"EfxwqhYdapX3dMQC2\",\"5S9nX4rKsnCcnv4Cz\",\"GGdmhAvxXhqhhibJN\",\"5hQnRWiKkhgKJXNMP\",\"B8n7KqbvEDjZzgj2D\",\"eYfPWvZwnJQkHbSTK\",\"utTuvGdmu2sBHWBhQ\",\"GqothajHR2vKfEHGZ\",\"srJ34BaybkQh3qRkM\",\"MXGuntvz3byrP6WJc\",\"yod5YhKtPqw2GfG9B\",\"Ds7L5bksw2QRHjrKL\",\"PWgzeK859suojbrRx\",\"CHvzhtXnv8HTbPQ56\",\"T2vhHPhRR96hRizq8\",\"q6QsMYNMpPNtmyTeW\",\"5uj4mTXdaDL3wLDWw\",\"wjc4iejpErBhxWwHo\",\"T6iBEE2jp7f7iEF2P\",\"qAby4AWXmTNeusvg3\",\"XD5nmvKQchKezPXhy\",\"66a9xX73nmTEuKs9k\",\"AFfw7cGg83uYk2Miy\",\"PC3pLs36zNzpRDSuE\",\"BrTDhPJcACL2bsrpJ\",\"Wpn95NqWxncQrwNgz\",\"c2q7mY39z5JPEMCaM\",\"EtfPQ6NEwWshACtWe\",\"mvJBakQ35CWAnbbEZ\",\"2PufnQcsHsfymufX3\",\"X4rzfxGgxx6CS7Bpz\",\"K6MfKMytoJJuSGewP\",\"ghMkPtdFCpM6w8nax\",\"JhX7jvtpwNyxcc39m\",\"R6YxHWAiLgKwy5YvC\",\"rrSC943cCKNG48sH4\",\"tdfY4iBvD7oh2ufnN\",\"qzXAMXsHZGT8o5hTA\",\"JiSpvq6C7azQEmENc\",\"pduNK68oazqQTtbLp\",\"hR7GMiqGap4CzEWSy\",\"Afnps7TJQuS9sipMb\",\"4Lwjr34ypKNQNQCar\",\"AJexRBN9cYQmqvYu6\",\"4RY3zj9C2t8GGefhi\",\"pvFeEj9pERa8Qdkig\",\"4TmgHkn5vqyHK3sYC\",\"T6Rm8mREPMZSftzrC\",\"nc7bRhkxgKyqusYe3\",\"d9LBRxvADNBB5QJMB\",\"dzS6WBTMHyFEag6Fp\",\"uGuS9YRXW2nj4p6zf\",\"suArq5BbSy7gD6xri\",\"hpT9yYe5R45poHrYR\",\"qB6KSTYC6H2TQEQY6\",\"B4y8aoyXJtskYPFEL\",\"rCrbqMiaGPgHYTNxu\",\"pPpmP7xeJzGgK362R\",\"Qyfyyw6oC4EHAndzo\",\"quYcmxS33qHALzb4Z\",\"5QN8R22z43SrwoHDz\",\"jWbd7SYDzLPjc9EDh\",\"AQSqD9oNv2uPfxZCR\",\"Wi4H6ayKsNDWWQCG5\",\"ruzwBPphPDRgLXdnP\",\"vAbK8sCfKyFC78HYg\",\"wrL4iX2CCSqDCCty3\",\"eHcgvkTGsH7ZziqBo\",\"E2hpke7mHxAWsw5t9\",\"8uiLiJcmWxWe6qw65\"],\"total\":336,\"quality\":[5,1,5,5,5,5,5,5,5,5,4,4,5,5,4,5,5,5,4,5,5,5,5,4,5,5,5,5,5,5,5,5,1,5,5,4,5,5]},\"flags\":0},\"summary\":\"Create a function which takes in a number n as input and returns all numbers up to and including n joined together in a string. Separate each digit from each other with the character \\\"-\\\".\\n\\nExamples\\njoin_digits(4) ➞ \\\"1-2-3-4\\\"\\n\\njoin_digits(11) ➞ \\\"1-2-3-4-5-6-7-8-9-1-0-1-1\\\"\\n\\njoin_digits(15) ➞ \\\"1-2-3-4-5-6-7-8-9-1-0-1-1-1-2-1-3-1-4-1-5\\\"\\n\\nNotes\\nRemember to start at\",\"tags\":[\"strings\",\"numbers\",\"loops\"],\"timestamp\":{\"$date\":1584226035085},\"title\":\"Joining Digits Together\",\"quality\":4.631578947368421,\"family\":[{\"_id\":\"kb5hSZ8WE2cnXDTwM\",\"language\":\"cpp\"},{\"_id\":\"9qrjtshZq8L5ATcKt\",\"language\":\"javascript\"},{\"_id\":\"K6oxe3bvPqaQWxkFw\",\"language\":\"python3\"},{\"_id\":\"nYPCusXuSoExcPHiq\",\"language\":\"ruby\"}]}}"]