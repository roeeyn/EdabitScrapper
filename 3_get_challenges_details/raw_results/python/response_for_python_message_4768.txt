a["{\"msg\":\"result\",\"id\":\"1100\",\"result\":{\"_id\":\"oK2e5Xet35ZFZNLX6\",\"author\":\"werdna\",\"authorId\":\"buX4mCQhtXCfBjeno\",\"code\":\"def neighboring(txt):\\n\\t\",\"difficulty\":1.5774647887323943,\"familyId\":\"xEcnmd7dEiSQdnt2A\",\"instructions\":\"Create a function that takes a string and checks if every single character is **preceded and followed**  by a character adjacent to it in the _english alphabet_.\\n\\nExample: \\\"b\\\" should be preceded and followed by ether \\\"a\\\" or \\\"c\\\" (`abc || cba || aba || cbc == True` but `abf || zbc  == False`).\\n\\n### Examples\\n```\\nneighboring(\\\"aba\\\") ➞ True\\n\\nneighboring(\\\"abcdedcba\\\") ➞ True\\n\\nneighboring(\\\"efghihfe\\\") ➞ False\\n\\nneighboring(\\\"abc\\\") ➞ True\\n\\nneighboring(\\\"qrstuv\\\") ➞ True\\n\\nneighboring(\\\"mnopqrstsrqponm\\\") ➞ True\\n```\\n\\n### Notes\\nAll test cases will consist of lower case letters only.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(neighboring(\\\"abcdedcba\\\"), True)\\nTest.assert_equals(neighboring(\\\"aba\\\"), True)\\nTest.assert_equals(neighboring(\\\"efghihfe\\\"), False)\\nTest.assert_equals(neighboring(\\\"xyzyx\\\"), True)\\nTest.assert_equals(neighboring(\\\"mnopqrstsrqponm\\\"), True)\\nTest.assert_equals(neighboring(\\\"zyz\\\"), True)\\nTest.assert_equals(neighboring(\\\"aeiou\\\"), False)\\nTest.assert_equals(neighboring(\\\"cdefg\\\"), True)\\nTest.assert_equals(neighboring(\\\"qrstuv\\\"), True)\\nTest.assert_equals(neighboring(\\\"aaaaa\\\"), False)\",\"language\":\"python3\",\"quality\":4.535714285714286,\"summary\":\"Create a function that takes a string and checks if every single character is preceded and followed  by a character adjacent to it in the english alphabet.\\n\\nExample: \\\"b\\\" should be preceded and followed by ether \\\"a\\\" or \\\"c\\\" (abc || cba || aba || cbc == True but abf || zbc  == False).\\n\\nExamples\\nneighboring(\\\"aba\\\") ➞ True\\n\\nneighboring(\\\"abcdedcba\\\") ➞ True\\n\\nneighbori\",\"tags\":[\"higher_order_functions\",\"language_fundamentals\",\"formatting\",\"loops\",\"validation\"],\"timestamp\":{\"$date\":1606494237689},\"title\":\"Neighboring Letters\",\"stats\":{\"completed\":{\"total\":98,\"ratings\":[2,2,2,2,2,2,2,0,2,2,1,0,2,2,2,2,2,2,1,2,2,0,1,2,2,0,1,1,2,0,2,2,2,1,0,0,2,0,2,2,2,1,1,1,1,2,1,2,2,1,3,2,1,1,5,2,1,1,2,2,3,1,2,2,2,2,2,2,2,0,2],\"quality\":[2,5,5,5,4,5,5,5,5,1,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,1,5,5],\"rators\":[\"buX4mCQhtXCfBjeno\",\"8PwfYqoDQFThzNtvf\",\"aEm3Wvj2rFYRL8Lrb\",\"PXAcsKkssS2yLyDv2\",\"oBcs8GLX2ZFLXQy8y\",\"tXcqs5WDEoK3Gie7m\",\"QRv96jmNaYsWkxQEG\",\"gJYuGdkXEWWmGRLzu\",\"J3upzLHuEwXH7Z2hx\",\"p8qqFdJ3FSk5x9z3G\",\"DPi9QGLctq2y76KuE\",\"s5M5RvgqR9BhB9JoC\",\"zd9FLSzsGz3evKafy\",\"Yp7uvStL97cC9fKkY\",\"iS5BrkGLzJyPK7nKt\",\"8JyqsSbN2FJXPr3cw\",\"FEYpu9RWysAgW3XnP\",\"5hQnRWiKkhgKJXNMP\",\"HF28xZKSLM9wEuqNg\",\"gb9rvGus2Jv7bjZSs\",\"cAP3n5NY64uoMwzRR\",\"5HCu9Ydd86QgHDRNP\",\"spqXrjG3ZFa2j5uTR\",\"gXTAie79kiw28tx5u\",\"d8qtzoLB264iP8tdY\",\"R4SjTgDnpigJYDLyL\",\"dBzwBtRjZqB98DJeB\",\"HqmxnQJM66Y57twhn\",\"HuNF3xTBzmatyGSTm\",\"J5T8gZqiZXFuFDTQ7\",\"wRttWTM59y8m5mx7x\",\"Jqk2uJZZxEv5wZFze\",\"5S9nX4rKsnCcnv4Cz\",\"YRAzEBJoLvSaiPtYx\",\"o4ixjQGSaYqA2JoM4\",\"2QGRoQn2dRq3scu7k\",\"MXGuntvz3byrP6WJc\",\"Nb6LYPoQP6KJZt8mz\",\"eYfPWvZwnJQkHbSTK\",\"DEDniTrstQYGounXT\",\"NzbRqGWspQnWMoDrF\",\"GGdmhAvxXhqhhibJN\",\"srJ34BaybkQh3qRkM\",\"KJCDwGkoXh8qtbbKr\",\"axdSNLZpiCDF8RS6n\",\"Ds7L5bksw2QRHjrKL\",\"yod5YhKtPqw2GfG9B\",\"yjtdwc2AC4jA2RWtn\",\"sHjfbGQGLHE6JR6qu\",\"CLypXaZksY99mpRCm\",\"8BFSTCnoe2QggN64c\",\"yLNAtYKhSWnMaRi9c\",\"q6QsMYNMpPNtmyTeW\",\"wjc4iejpErBhxWwHo\",\"YcCLwitFMAEJSnxAW\",\"cR3ibTMxLyEdDFCHY\",\"PWgzeK859suojbrRx\",\"CHvzhtXnv8HTbPQ56\",\"CTKmXtrqDYqJBnuy8\",\"qAby4AWXmTNeusvg3\",\"T6iBEE2jp7f7iEF2P\",\"iojEnnY9FsMfYzp6f\",\"tAF9Gf6PiGogbZuWs\",\"3cF6NXq3ZEwdkgSjb\",\"eMuCpJ2spXWkJjWNz\",\"ey3CASd6Je5LEJzfB\",\"XD5nmvKQchKezPXhy\",\"BJp2WkwLWGHHB5oQW\",\"66a9xX73nmTEuKs9k\",\"PC3pLs36zNzpRDSuE\",\"AFfw7cGg83uYk2Miy\",\"BrTDhPJcACL2bsrpJ\",\"yr822PZmmiDDenxpB\",\"5XiuAqicKD4hBdu63\",\"9Ly8afdtofp8DXzrt\",\"mvJBakQ35CWAnbbEZ\",\"AasGs8AeX9Lcb9xJn\",\"mDWNyaaQ9hvPCRzSd\",\"sbJcFfQjQ59Wfg4Cd\",\"eHcgvkTGsH7ZziqBo\",\"rrSC943cCKNG48sH4\",\"2PufnQcsHsfymufX3\",\"MKT7khMBGXzA22ykf\",\"JhX7jvtpwNyxcc39m\",\"dzS6WBTMHyFEag6Fp\",\"4TmgHkn5vqyHK3sYC\",\"d9LBRxvADNBB5QJMB\",\"suArq5BbSy7gD6xri\",\"pduNK68oazqQTtbLp\",\"yAouD3PxzED8a4gap\",\"mxX4rH5ELYkdZ2Mbw\",\"9pzFiFK3ANLjQfnr2\",\"Wi4H6ayKsNDWWQCG5\",\"4Lwjr34ypKNQNQCar\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"gAANK2ydo8jiEk9ot\",\"language\":\"cpp\"},{\"_id\":\"mHP2n9i4XERvCF3C8\",\"language\":\"javascript\"},{\"_id\":\"gqgPPpPKSeSoGjrjh\",\"language\":\"php\"},{\"_id\":\"oK2e5Xet35ZFZNLX6\",\"language\":\"python3\"},{\"_id\":\"P3c9FmBuwZ5pQCaMH\",\"language\":\"ruby\"}]}}"]