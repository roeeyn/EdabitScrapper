a["{\"msg\":\"result\",\"id\":\"1477\",\"result\":{\"_id\":\"6cj6i2DACHTbtNnCD\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"def two_product(lst, n):\\n\\t\",\"difficulty\":2.0638297872340425,\"quality\":4.317073170731708,\"familyId\":\"kkzn8windwhDyET7c\",\"instructions\":\"Create a function that takes a list `lst` and a number `n` and returns a list of two integers whose product is that of the number `n`.\\n\\n### Examples\\n```\\ntwo_product([1, 2, 3, 4, 13, 5], 39) ➞ [3, 13]\\n\\ntwo_product([11, 2, 7, 3, 5, 0], 55) ➞ [5, 11]\\n\\ntwo_product([100, 12, 4, 1, 2], 15) ➞ None\\n```\\n\\n### Notes\\n- No duplicates.\\n- Sort the number.\\n- Try doing this with 0(n) time complexity.\\n- The list can have multiple solutions, so return the first match you find.\",\"isHidden\":false,\"lab\":\"Test.assert_equals(two_product([100, 12, 4, 1, 2], 15), None)\\nTest.assert_equals(two_product([11, 2, 7, 3, 5, 0], 55), [5, 11])\\nTest.assert_equals(two_product([1, 2, 3, 4, 13, 5], 39), [3, 13])\\nTest.assert_equals(two_product([1, 2, -1, 4, 5], 20), [4, 5])\\nTest.assert_equals(two_product([1, 2, 3, 4, 5], 10), [2, 5])\",\"language\":\"python3\",\"summary\":\"Create a function that takes a list lst and a number n and returns a list of two integers whose product is that of the number n.\\n\\nExamples\\ntwo_product([1, 2, 3, 4, 13, 5], 39) ➞ [3, 13]\\n\\ntwo_product([11, 2, 7, 3, 5, 0], 55) ➞ [5, 11]\\n\\ntwo_product([100, 12, 4, 1, 2], 15) ➞ None\\n\\nNotes\\nNo duplicates.\\nSort the number.\\nTry doing this with 0(n) time complexity.\\nThe\",\"tags\":[\"conditions\",\"data_structures\",\"loops\"],\"timestamp\":{\"$date\":1601323485654},\"title\":\"Two Product Problem (Part 2)\",\"stats\":{\"completed\":{\"total\":140,\"ratings\":[2,2,2,2,2,1,3,2,2,3,2,3,3,1,0,3,0,2,3,3,1,1,2,5,1,0,3,3,3,3,2,2,3,0,3,0,1,3,2,3,2,2,3,1,0,0,3,3,3,2,3,2,2,3,3,3,1,3,5,3,0,1,2,0,3,2,0,2,2,1,3,3,2,4,3,3,2,1,3,2,0,0,0,0,3,2,3,2,3,2,2,3,4,2],\"quality\":[5,5,4,2,1,1,3,5,5,3,4,5,5,5,4,4,3,5,4,4,5,5,4,5,5,5,5,4,5,5,4,5,5,5,5,5,4,5,4,5,5],\"rators\":[\"aEm3Wvj2rFYRL8Lrb\",\"8PwfYqoDQFThzNtvf\",\"6428wKHtwKkFdvBs5\",\"abX6eotKSp5zN4vc9\",\"XpstB4i6ktprBZusw\",\"Yp7uvStL97cC9fKkY\",\"tAF9Gf6PiGogbZuWs\",\"gb9rvGus2Jv7bjZSs\",\"s5M5RvgqR9BhB9JoC\",\"QRv96jmNaYsWkxQEG\",\"dkcmCKwqApX5jBggc\",\"axdSNLZpiCDF8RS6n\",\"qD2LrwaDrSdiybLKY\",\"g9FyJ8yeT9ic97Qp2\",\"N6pmP89gXiKzYB5eg\",\"cR3ibTMxLyEdDFCHY\",\"4fhjJBvLBWh6QeSih\",\"Dxf8tHcYmAJoxYRfN\",\"4RY3zj9C2t8GGefhi\",\"DrkR35NqnP9NDLbq6\",\"DPi9QGLctq2y76KuE\",\"fznzd3qnvtbFkkizz\",\"rxr3nwpDGDEkBJRgD\",\"J5T8gZqiZXFuFDTQ7\",\"oyKcm3zqdy8Ko5P5d\",\"8JyqsSbN2FJXPr3cw\",\"TFqRD3zervh8PT8op\",\"8fZxjQfuXw5HMSRJM\",\"yjtdwc2AC4jA2RWtn\",\"xn7uGNKeAwPEkP9oA\",\"gJYuGdkXEWWmGRLzu\",\"6MjSiiBLPcvXbXcaZ\",\"zZDaXBxMzTCBhNkgL\",\"iS5BrkGLzJyPK7nKt\",\"9FCeFzjPA4jrQ7oHW\",\"NG8PWBSjsM8mMhQEq\",\"dYPkStFnLvAMsHSzZ\",\"J3upzLHuEwXH7Z2hx\",\"Ecg4m7srYGgZsb4Ck\",\"odTvs8AWYG29pgbub\",\"mDNn3en8sk6Z5iico\",\"yoYQqaY6GszuTkNSs\",\"JS3hNM3XXkxPdg3yk\",\"gXTAie79kiw28tx5u\",\"oBcs8GLX2ZFLXQy8y\",\"7scpcTEp3SEx5Wjg9\",\"5EPe7bdNQ69vjsKv7\",\"FrtMQGTLgmaukDscR\",\"qZQxPQ2kaNKAMesHT\",\"Jqk2uJZZxEv5wZFze\",\"hnyhBFWwNCz9mDfSi\",\"T2vhHPhRR96hRizq8\",\"GGdmhAvxXhqhhibJN\",\"cAP3n5NY64uoMwzRR\",\"n2BRY9X8899dcG8Bw\",\"AYj67jMApehKJbkw4\",\"euPBBaYXyS8RBr9KB\",\"3LiSLdtN58n46NEqg\",\"PXAcsKkssS2yLyDv2\",\"JwLKvWBSQcLs9R9vv\",\"qAby4AWXmTNeusvg3\",\"8mGWypY7S2RcGcAPR\",\"RTDx9axf52kxhFjwZ\",\"iojEnnY9FsMfYzp6f\",\"PytNZK9mNiRiZxPrm\",\"xqYQMujmvgQ78bnJc\",\"hHxvmXzDc4cizpjuv\",\"3Lqv2HsADzeEojGMh\",\"uw8E83imJYpQiiPpP\",\"FEYpu9RWysAgW3XnP\",\"xfftcHHe5riRf4T93\",\"2PufnQcsHsfymufX3\",\"zd9FLSzsGz3evKafy\",\"mfm3gB39arY8Rjb2y\",\"dynD89GCHoau9fvh7\",\"YcCLwitFMAEJSnxAW\",\"Wpn95NqWxncQrwNgz\",\"bvmTE46bfcM4ogj34\",\"srJ34BaybkQh3qRkM\",\"yFsT4nhJX3d9vX9Cy\",\"u5u2YpHXiNgzDNJdX\",\"rWXvYsdCzQZqJWNeS\",\"A5hpbCrLKbr2j6RuK\",\"ey3CASd6Je5LEJzfB\",\"PWgzeK859suojbrRx\",\"ADycYubh8WTMCXhgR\",\"9ivvGvJGvtQfigQaZ\",\"AFfw7cGg83uYk2Miy\",\"pYqKNHifsaivAkt2k\",\"H4LqzfSad6d4BCgwy\",\"AasGs8AeX9Lcb9xJn\",\"8BFSTCnoe2QggN64c\",\"Z85ajWfZ4jDPkbvR4\",\"KB8GdTPpWbXBDmm6L\",\"HqmxnQJM66Y57twhn\",\"2NDSt8HyP33cFRHsu\",\"T6iBEE2jp7f7iEF2P\",\"qzXAMXsHZGT8o5hTA\",\"MpfytGFYF77emJ3cT\",\"gKnWjDjwrJh7MK2df\",\"9yEyuxSKFBhf7QtsZ\",\"o4ixjQGSaYqA2JoM4\",\"d8qtzoLB264iP8tdY\",\"yod5YhKtPqw2GfG9B\",\"MCToS8pcZSyPcXDP2\",\"8sNv5PTHa7XQ8bNqR\",\"RoGGD5cpHb4ftdLDv\",\"CoutYG4M83EHyYuqt\",\"rhS8qXRjZcpDXkwnE\",\"XWcgpC5eumoY9JgCJ\",\"buX4mCQhtXCfBjeno\",\"YCbknu7NRSR2i5cMQ\",\"sJWTa7iWeRoRtqJ8N\",\"BrTDhPJcACL2bsrpJ\",\"kBNCPDJxWtLYE3pp5\",\"nkH3HfJXLMNcBMM79\",\"syRNbbPdLCGXbH2Gy\",\"fZrLzFjr7PJQCbcqx\",\"5HCu9Ydd86QgHDRNP\",\"kqnAtcQb9YseoNB8g\",\"dSd7wHgXGQeG5BQ2P\",\"MKT7khMBGXzA22ykf\",\"AQSqD9oNv2uPfxZCR\",\"mvJBakQ35CWAnbbEZ\",\"Ds7L5bksw2QRHjrKL\",\"gMDzfLw5nbtyzjs8Q\",\"mw9464S5dnenqzvpm\",\"Qyfyyw6oC4EHAndzo\",\"9pzFiFK3ANLjQfnr2\",\"u6ArAiEczkydWEgsP\"]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"sshRtHmj4am6FyGyt\",\"language\":\"cpp\"},{\"_id\":\"oZ4X6CZEM797rJjLm\",\"language\":\"csharp\"},{\"_id\":\"gc44EAv3SYM9kWcAR\",\"language\":\"javascript\"},{\"_id\":\"6cj6i2DACHTbtNnCD\",\"language\":\"python3\"},{\"_id\":\"QYEpZ6h7LyF8cqK3f\",\"language\":\"ruby\"},{\"_id\":\"jFN9sic7pAwZtStn3\",\"language\":\"swift\"}]}}"]