a["{\"msg\":\"result\",\"id\":\"1019\",\"result\":{\"_id\":\"i35wfM7KEdpnK45mD\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"def make_plus_function(base_num):\\n\\t\",\"difficulty\":1.5222929936305734,\"familyId\":\"5PWb7K78GjBrBK7bg\",\"instructions\":\"Create a function that takes a \\\"base number\\\" as an argument. This function should return another function which takes a new argument, and returns the sum of the \\\"base number\\\" and the new argument.\\n\\nPlease check the examples below for a clearer representation of the behavior expected.\\n\\n### Examples\\n\\n```\\n# Calling make_plus_function(5) returns a new function that takes an input,\\n# and returns the result when adding 5 to it.\\n\\nplus_five = make_plus_function(5)\\n\\nplus_five(2) ➞ 7\\n\\nplus_five(-8) ➞ -3\\n```\\n\\n```\\n# Calling make_plus_function(10) returns a new function that takes an input,\\n# and returns the result when adding 10 to it.\\n\\nplus_ten = make_plus_function(10)\\n\\nplus_ten(0) ➞ 10\\n\\nplus_ten(188) ➞ 198\\n\\nplus_five(plus_ten(0)) ➞ 15\\n```\\n\\n### Notes\\nAll inputs will be valid numbers.\",\"isHidden\":false,\"lab\":\"plus_two = make_plus_function(2)\\nplus_five = make_plus_function(5)\\nplus_seven = make_plus_function(plus_two(plus_five(0)))\\nplus_ten = make_plus_function(10)\\n\\nTest.assert_equals(plus_two(0), 2)\\nTest.assert_equals(plus_two(18), 20)\\nTest.assert_equals(plus_two(-1), 1)\\nTest.assert_equals(plus_five(0), 5)\\nTest.assert_equals(plus_five(12), 17)\\nTest.assert_equals(plus_five(-5), 0)\\nTest.assert_equals(plus_seven(0), 7)\\nTest.assert_equals(plus_seven(41), 48)\\nTest.assert_equals(plus_seven(-117), -110)\\nTest.assert_equals(plus_ten(0), 10)\\nTest.assert_equals(plus_ten(1), 11)\\nTest.assert_equals(plus_ten(-1), 9)\\nTest.assert_equals(plus_two(plus_five(plus_seven(plus_ten(1)))), 25)\\n\\nTest.assert_equals(make_plus_function(8)(8), 16)\\nTest.assert_equals(make_plus_function(-100)(0), -100)\\nTest.assert_equals(make_plus_function(1)(100), 101)\\nTest.assert_equals(make_plus_function(0)(0), 0)\\n\\n# Original challenge by @mbbentley\",\"language\":\"python3\",\"summary\":\"Create a function that takes a \\\"base number\\\" as an argument. This function should return another function which takes a new argument, and returns the sum of the \\\"base number\\\" and the new argument.\\n\\nPlease check the examples below for a clearer representation of the behavior expected.\\n\\nExamples\\n\\nCalling makeplusfunction(5) returns a new function that takes an i\",\"tags\":[\"functional_programming\",\"higher_order_functions\",\"closures\"],\"timestamp\":{\"$date\":1583241508033},\"title\":\"Function Factory\",\"stats\":{\"completed\":{\"total\":206,\"ratings\":[2,2,2,2,2,1,2,2,2,2,3,1,3,3,1,1,3,1,0,0,2,2,2,2,1,1,1,1,0,2,2,1,1,1,1,2,2,1,3,2,0,1,0,2,1,2,3,0,1,1,3,2,1,0,2,1,3,2,1,2,1,2,2,2,2,1,2,2,1,2,2,2,2,2,2,1,2,0,1,0,0,0,2,1,0,2,1,1,2,1,0,2,1,3,2,1,0,2,1,2,2,1,2,2,1,1,2,2,2,2,1,1,2,0,4,1,1,0,2,2,2,5,2,1,3,2,2,0,2,0,1,1,2,2,3,1,2,2,1,2,0,2,1,2,1,1,2,2,2,1,2,1,2,0,4,0,1],\"rators\":[\"C4QntmkYtB89GNtpd\",\"AasGs8AeX9Lcb9xJn\",\"3xMGAo7DPjfFyb3iw\",\"gb9rvGus2Jv7bjZSs\",\"tAF9Gf6PiGogbZuWs\",\"4CFzv558qbGcpQwc4\",\"s5M5RvgqR9BhB9JoC\",\"8PwfYqoDQFThzNtvf\",\"yZvzB3qFb8pkHy4dg\",\"2fxapKr8XGdNeaKi2\",\"PXAcsKkssS2yLyDv2\",\"nuc8rnPKXMC3cJRqm\",\"Q2q7wd5e5cfCrwPxq\",\"siP7zPzxZeDHSGsCA\",\"8cQzqnwK5GqdzJ4bt\",\"v3fjGuc7Pq4yjFygS\",\"w3A7cBWyAfukk6xEQ\",\"uw8E83imJYpQiiPpP\",\"vLrq4dEDMM2wd68Dc\",\"Ro3ppqamSxiJv2wxP\",\"EPbEBF6b8Jbq8BPx6\",\"BEdxteC2PKrmTLbdM\",\"aRqQ42J5zqCmBNd8w\",\"dHZqT6h4JMwk5fPC8\",\"jNvegJWCk5HCtEMbK\",\"Yp7uvStL97cC9fKkY\",\"esY84P5NBKF8TWHDv\",\"9zwRb7df96BkcfBKP\",\"ZNnsMeNkdDhHjSrZb\",\"aEm3Wvj2rFYRL8Lrb\",\"hnyhBFWwNCz9mDfSi\",\"YRstQuthRkFeBiXug\",\"9zBQ4k7pWXa8Jfro4\",\"gJYuGdkXEWWmGRLzu\",\"8JyqsSbN2FJXPr3cw\",\"2QGRoQn2dRq3scu7k\",\"RcFJfYquW9quJDnp5\",\"rMaraYpJZdYwS9JkQ\",\"DEDniTrstQYGounXT\",\"NwGDqjc7ptNHc4wwF\",\"5dHucvf2qBYyKim7X\",\"9pzFiFK3ANLjQfnr2\",\"v2bLsgjZi47Xar8vj\",\"hHCrfaGKZGnwFPfbN\",\"WHR8EHPPEpghNnpXt\",\"ahShRaM3SEFT33gvS\",\"nfXGHENb5md7m355s\",\"4fDDrRhf4XkKqKwfr\",\"ahk2qiXKJA753wAJk\",\"ESQeRJqbx8gPjSa6i\",\"yv7c4H2jimSKHEjtG\",\"DrkR35NqnP9NDLbq6\",\"a777e8chPvJkY3tKa\",\"yr822PZmmiDDenxpB\",\"XrqNzJ2FRG8HnGiR6\",\"5brmxCQdkpebT6SFw\",\"4yNLEwL2rsx4EE5Nt\",\"RjKTSeuvQkmCjyofZ\",\"H4abACFDH5t8CnnyH\",\"2ptN2mhjFwFcHyPZd\",\"vwHs2chujYmpR7hKF\",\"NG8PWBSjsM8mMhQEq\",\"E5iw5hyyWum9KshGA\",\"syRNbbPdLCGXbH2Gy\",\"T68dk7atmenH88Ryi\",\"iojEnnY9FsMfYzp6f\",\"WwMjW4MJRuNFExoPc\",\"RnCue6232fMBH22h4\",\"Ecg4m7srYGgZsb4Ck\",\"n2BRY9X8899dcG8Bw\",\"Pe8vWpDHRuH9nSGKW\",\"R4SjTgDnpigJYDLyL\",\"yjtdwc2AC4jA2RWtn\",\"Wv2vJnEj8ywNmARoF\",\"HqmxnQJM66Y57twhn\",\"FEYpu9RWysAgW3XnP\",\"NNE5HNRXAkmhrWgyQ\",\"ta5CrWnBCRusD2WMo\",\"a5Nd5R69uASQRLkq9\",\"eMuCpJ2spXWkJjWNz\",\"oBcs8GLX2ZFLXQy8y\",\"X5MqeHyPh6cSQCXnk\",\"i5iePG5GqhJJ8HEoB\",\"zd9FLSzsGz3evKafy\",\"YA7SDhpgEtsqynvNL\",\"M8dQuMrEpP8Hc3tHN\",\"6gS4E2C84vBYTYeDZ\",\"p8qqFdJ3FSk5x9z3G\",\"w2HhxvSLmDhaGCAjE\",\"TPhfpB5tzQWSSn67n\",\"cjLem7RtYptrHoFxw\",\"RehJGBFS6CYiWdjZx\",\"ji5f27FPz4wRRF6Ls\",\"foytX6kH9wiSYqLtT\",\"YcCLwitFMAEJSnxAW\",\"KLmLKaJPfsYxp42p2\",\"EMJ6uvBZkie429gdg\",\"3nied3n8KG8RSNixH\",\"3cF6NXq3ZEwdkgSjb\",\"NuqGt5u3s7vJ7HBGR\",\"tpxMgkGSHwBjS95Ta\",\"Kh3Pc2ZRusurLaMyP\",\"mG8HqKiAQFTdRZthG\",\"4P2Tye3qbEKWWYF7C\",\"gXTAie79kiw28tx5u\",\"qD2LrwaDrSdiybLKY\",\"JS3hNM3XXkxPdg3yk\",\"oXdhczMThyirgM2eN\",\"HnoDeuYM8h3PkXtSz\",\"5HCu9Ydd86QgHDRNP\",\"DPi9QGLctq2y76KuE\",\"hXoTNPPmJLzkZnkSX\",\"4zituRpJW3WjYMfqa\",\"wRttWTM59y8m5mx7x\",\"uznjMqKo6mzk5fsJh\",\"8WpvgSbQciTQWdd8T\",\"3LiSLdtN58n46NEqg\",\"J3upzLHuEwXH7Z2hx\",\"ANbSYXiYsp4addoDq\",\"dBzwBtRjZqB98DJeB\",\"HMKp7iyeycYybEuGs\",\"dj5AyG5fWP8FdsSmZ\",\"dYPkStFnLvAMsHSzZ\",\"d8qtzoLB264iP8tdY\",\"BNogTonsWhcfseTjX\",\"KJCDwGkoXh8qtbbKr\",\"RGMbFMZXJr7DhcAJy\",\"zSXaoNJKnxytvtFMb\",\"YRAzEBJoLvSaiPtYx\",\"CLypXaZksY99mpRCm\",\"NzbRqGWspQnWMoDrF\",\"qAby4AWXmTNeusvg3\",\"5XiuAqicKD4hBdu63\",\"sHjfbGQGLHE6JR6qu\",\"DpnYcMphntjsQ96qg\",\"5hQnRWiKkhgKJXNMP\",\"qjYKJu7TDdYZ8gYRF\",\"J5T8gZqiZXFuFDTQ7\",\"hNtC6BTygkPYknybs\",\"Jqk2uJZZxEv5wZFze\",\"h4x2jaMdj5aQZbW5g\",\"Bx68gx6euL4i9BS6D\",\"fqhWijqQEhnu39WwQ\",\"74TSFjstD2L2Yf53W\",\"qo8MAEp6hoAi4MJip\",\"mDWNyaaQ9hvPCRzSd\",\"iS5BrkGLzJyPK7nKt\",\"5S9nX4rKsnCcnv4Cz\",\"icsLTze3op3SPQbzy\",\"srJ34BaybkQh3qRkM\",\"wqdX4wXbZGgJ9Fyb7\",\"Fk9kLwoG4Brf4KsKf\",\"GGdmhAvxXhqhhibJN\",\"Ds7L5bksw2QRHjrKL\",\"XHShZ3WMPgGEA2vkR\",\"7dkHEEF6FiCWTK8Ec\",\"2EbDCCJJvCfKkbYia\",\"T6iBEE2jp7f7iEF2P\",\"66a9xX73nmTEuKs9k\",\"AFfw7cGg83uYk2Miy\",\"qaR8DnWrTk8Mus5Q2\",\"XujK3rHd3JcM9TLJy\",\"9ivvGvJGvtQfigQaZ\",\"yod5YhKtPqw2GfG9B\",\"xQEeGvwDcLZ8C5Bjz\",\"8BFSTCnoe2QggN64c\",\"BrTDhPJcACL2bsrpJ\",\"AJexRBN9cYQmqvYu6\",\"rrSC943cCKNG48sH4\",\"bv4ycSophchSEFoK9\",\"Afnps7TJQuS9sipMb\",\"rcQcrr9btTBm8NCqQ\",\"p8ogAum3XpiXcMZaP\",\"2PufnQcsHsfymufX3\",\"M4vq8ATaS9Jg5X7iP\",\"4TmgHkn5vqyHK3sYC\",\"dzS6WBTMHyFEag6Fp\",\"d9LBRxvADNBB5QJMB\",\"Y4L8A3ZfxtvJZB3sj\",\"pduNK68oazqQTtbLp\",\"wKngLwYRaGcENLXGE\",\"wjc4iejpErBhxWwHo\",\"u5u2YpHXiNgzDNJdX\",\"eHcgvkTGsH7ZziqBo\",\"pPpmP7xeJzGgK362R\",\"4Lwjr34ypKNQNQCar\",\"RoGGD5cpHb4ftdLDv\",\"5QN8R22z43SrwoHDz\",\"mw9464S5dnenqzvpm\",\"es2i576GjHQPkEcmM\",\"Wi4H6ayKsNDWWQCG5\"],\"quality\":[5,5,5,5,5,4,2,5,5,5,5,4,5,4,5,4,5,5,5,5,1,4,5,4,5,1,5,5,1,5,5,4,5,5,5,5,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":4.435897435897436,\"family\":[{\"_id\":\"ENWFBL4jbTgLbSqwS\",\"language\":\"javascript\"},{\"_id\":\"FGZoBLN8cQa7piHqT\",\"language\":\"php\"},{\"_id\":\"i35wfM7KEdpnK45mD\",\"language\":\"python3\"},{\"_id\":\"DyTXtBngtJ2eF89Je\",\"language\":\"ruby\"},{\"_id\":\"E6qSy7473iWpiwC6C\",\"language\":\"swift\"}]}}"]