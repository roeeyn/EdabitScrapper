a["{\"msg\":\"result\",\"id\":\"858\",\"result\":{\"_id\":\"Abo5qakEcntamMZ8p\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"def gimme_the_letters(spectrum):\\n\\t\",\"difficulty\":1.4115044247787611,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"9RGexAceELnY67m7a\",\"instructions\":\"Given a string indicating a range of letters, return a string which includes all the letters in that range, *including* the last letter. Note that if the range is given in *capital letters*, return the string in capitals also!\\n\\n### Examples\\n```\\ngimme_the_letters(\\\"a-z\\\") ➞ \\\"abcdefghijklmnopqrstuvwxyz\\\"\\n\\ngimme_the_letters(\\\"h-o\\\") ➞ \\\"hijklmno\\\"\\n\\ngimme_the_letters(\\\"Q-Z\\\") ➞ \\\"QRSTUVWXYZ\\\"\\n\\ngimme_the_letters(\\\"J-J\\\") ➞ J\\\"\\n```\\n\\n### Notes\\n- A *hyphen* will separate the two letters in the string.\\n- You don't need to worry about error handling in this one (i.e. both letters will be the same case and the second letter will always be after the first alphabetically).\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(gimme_the_letters(\\\"a-z\\\"), \\\"abcdefghijklmnopqrstuvwxyz\\\")\\nTest.assert_equals(gimme_the_letters(\\\"h-o\\\"), \\\"hijklmno\\\")\\nTest.assert_equals(gimme_the_letters(\\\"Q-Z\\\"), \\\"QRSTUVWXYZ\\\")\\nTest.assert_equals(gimme_the_letters(\\\"J-J\\\"), \\\"J\\\")\\nTest.assert_equals(gimme_the_letters(\\\"a-b\\\"), \\\"ab\\\")\\nTest.assert_equals(gimme_the_letters(\\\"A-A\\\"), \\\"A\\\")\\nTest.assert_equals(gimme_the_letters(\\\"g-i\\\"), \\\"ghi\\\")\\nTest.assert_equals(gimme_the_letters(\\\"H-I\\\"), \\\"HI\\\")\\nTest.assert_equals(gimme_the_letters(\\\"y-z\\\"), \\\"yz\\\")\\nTest.assert_equals(gimme_the_letters(\\\"e-k\\\"), \\\"efghijk\\\")\\nTest.assert_equals(gimme_the_letters(\\\"a-q\\\"), \\\"abcdefghijklmnopq\\\")\\nTest.assert_equals(gimme_the_letters(\\\"F-O\\\"), \\\"FGHIJKLMNO\\\")\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,1,1,2,0,2,2,1,0,1,1,2,2,1,1,1,2,1,5,2,1,0,1,1,2,2,0,1,1,1,2,2,2,2,2,2,2,2,1,2,1,2,1,0,1,0,0,1,1,2,2,2,2,2,2,3,0,2,1,2,1,2,2,2,1,2,2,2,1,1,1,2,2,3,0,1,0,0,1,0,1,1,1,2,2,2,2,0,2,2,1,1,2,2,3,2,2,1,3,2,0,2,1,0,1,1,2,1,2,2,2,2,2,2,2,2,1,1,2,0,2,1,0,1,2,0,0,2,2,0,0,1,0,2,0,1,2,1,2,2,0,1,0,2,1,2,0,0,2,2,1,2,2,2,2,2,1,1,0,2,0,2,1,2,2,2,2,2,0,1,0,2,2,1,2,5,1,2,1,2,2,1,1,1,2,2,0,2,2,2,2,2,1,2,1,1,1,1,2,2,2,2,1,0,1,2,2,1,1,1,1,2,2,1,0,0,2,1,3,1,1],\"rators\":[\"PXAcsKkssS2yLyDv2\",\"8JyqsSbN2FJXPr3cw\",\"aEm3Wvj2rFYRL8Lrb\",\"tAF9Gf6PiGogbZuWs\",\"gb9rvGus2Jv7bjZSs\",\"Yp7uvStL97cC9fKkY\",\"8PwfYqoDQFThzNtvf\",\"AasGs8AeX9Lcb9xJn\",\"vLrq4dEDMM2wd68Dc\",\"q5a96XumccZyhQNyL\",\"gJYuGdkXEWWmGRLzu\",\"xowjbn5yEv7c93axA\",\"hnyhBFWwNCz9mDfSi\",\"cR3ibTMxLyEdDFCHY\",\"kYWb8BwpKwunQkxeX\",\"ZNnsMeNkdDhHjSrZb\",\"DEDniTrstQYGounXT\",\"s5M5RvgqR9BhB9JoC\",\"J5T8gZqiZXFuFDTQ7\",\"hiGXnxds6zo7XsfTw\",\"jNvegJWCk5HCtEMbK\",\"2QGRoQn2dRq3scu7k\",\"2fxapKr8XGdNeaKi2\",\"yZvzB3qFb8pkHy4dg\",\"HF28xZKSLM9wEuqNg\",\"FS78GK2Ysu7u8ndMs\",\"aRqQ42J5zqCmBNd8w\",\"k2RxDbsaJCdDju6oB\",\"9pzFiFK3ANLjQfnr2\",\"M8dQuMrEpP8Hc3tHN\",\"dHZqT6h4JMwk5fPC8\",\"N9m2Y6JJHu5gTvAiv\",\"2innwjWqxJHo4eRGh\",\"So6PHm74mfJuY2WTs\",\"8LfTheFzvicameoz9\",\"Nua6T3dBurBy3Qfg9\",\"C9LKGu2g5hSijvDzA\",\"KdNDysEsy2TW5QRJ2\",\"nfXGHENb5md7m355s\",\"FzxTj4GuujhwpZM7y\",\"orFLgPDw9H5MDzmwo\",\"a777e8chPvJkY3tKa\",\"N2wnZXkhDH86mgjQ8\",\"yr37kYjmgvpdTzMwf\",\"FEYpu9RWysAgW3XnP\",\"ahk2qiXKJA753wAJk\",\"4rwxLqLs2mNZNg8NB\",\"yr822PZmmiDDenxpB\",\"d6w7S49nhKzCTWLp6\",\"zd9FLSzsGz3evKafy\",\"XrqNzJ2FRG8HnGiR6\",\"kQH5b8MXJunh84Czq\",\"MKT7khMBGXzA22ykf\",\"DrkR35NqnP9NDLbq6\",\"TR5aWdDKP6iaL6mGK\",\"ikkjHDqBHu6fT3vGL\",\"eMuCpJ2spXWkJjWNz\",\"mDWNyaaQ9hvPCRzSd\",\"NG8PWBSjsM8mMhQEq\",\"2ptN2mhjFwFcHyPZd\",\"3cF6NXq3ZEwdkgSjb\",\"H4abACFDH5t8CnnyH\",\"n2BRY9X8899dcG8Bw\",\"ZrKCkX7xxGGZzauFW\",\"syRNbbPdLCGXbH2Gy\",\"CwXsu25ygLEwQbmQC\",\"YcCLwitFMAEJSnxAW\",\"iojEnnY9FsMfYzp6f\",\"bJxaKHJqR82EWw8Su\",\"NNE5HNRXAkmhrWgyQ\",\"Pe8vWpDHRuH9nSGKW\",\"GGprTwrkjuccmrQRg\",\"R4SjTgDnpigJYDLyL\",\"iS5BrkGLzJyPK7nKt\",\"yjtdwc2AC4jA2RWtn\",\"X5MqeHyPh6cSQCXnk\",\"Ecg4m7srYGgZsb4Ck\",\"hRiMXDZNAzyPd5tpt\",\"6SKDJwXpev4qPSzgM\",\"HqmxnQJM66Y57twhn\",\"EMJ6uvBZkie429gdg\",\"oBcs8GLX2ZFLXQy8y\",\"i5iePG5GqhJJ8HEoB\",\"6gS4E2C84vBYTYeDZ\",\"yAouD3PxzED8a4gap\",\"8BFSTCnoe2QggN64c\",\"ta5CrWnBCRusD2WMo\",\"PhceyfmFntJcn5Fhf\",\"sX9GZp3fYyQLrBKMJ\",\"JS3hNM3XXkxPdg3yk\",\"LyaZoABZYGfJBw2RF\",\"YA7SDhpgEtsqynvNL\",\"ji5f27FPz4wRRF6Ls\",\"Q9afpRu3u8zuWuzLQ\",\"b9YQPLb9ZPSADdHXX\",\"RipmepTcxBdjaZS9N\",\"9bQyb6rW7xfE4vgrR\",\"RehJGBFS6CYiWdjZx\",\"w2HhxvSLmDhaGCAjE\",\"BBk8ZRmMsTzpKCaux\",\"u7i7WPM63n42r8R8o\",\"TPhfpB5tzQWSSn67n\",\"p8qqFdJ3FSk5x9z3G\",\"d8qtzoLB264iP8tdY\",\"9CoqdidjM9KbeKnHY\",\"Wv2vJnEj8ywNmARoF\",\"FvFhg2wELM3SCZDZQ\",\"mxX4rH5ELYkdZ2Mbw\",\"KLmLKaJPfsYxp42p2\",\"k2Eo3wyfZZ6KxvKhN\",\"Kh3Pc2ZRusurLaMyP\",\"3nied3n8KG8RSNixH\",\"tpxMgkGSHwBjS95Ta\",\"mG8HqKiAQFTdRZthG\",\"gXTAie79kiw28tx5u\",\"b5zo7s6xrqWgQnPao\",\"9FCeFzjPA4jrQ7oHW\",\"8WpvgSbQciTQWdd8T\",\"5HCu9Ydd86QgHDRNP\",\"kNrnnMxhFZztMTBAX\",\"wRttWTM59y8m5mx7x\",\"DPi9QGLctq2y76KuE\",\"3LiSLdtN58n46NEqg\",\"dj5AyG5fWP8FdsSmZ\",\"aKzYNPqBqb3J3ZgyD\",\"NzbRqGWspQnWMoDrF\",\"7K2GEb5TZRtSpyyGS\",\"dyBcJXfbqJtjTmBZK\",\"rrSC943cCKNG48sH4\",\"bPmZSm3AT2mQHbBHk\",\"NuqGt5u3s7vJ7HBGR\",\"DYDJTyGgKFnBRLm2r\",\"J3upzLHuEwXH7Z2hx\",\"g9FyJ8yeT9ic97Qp2\",\"sHjfbGQGLHE6JR6qu\",\"8fZxjQfuXw5HMSRJM\",\"6MjSiiBLPcvXbXcaZ\",\"cAP3n5NY64uoMwzRR\",\"dYPkStFnLvAMsHSzZ\",\"KJCDwGkoXh8qtbbKr\",\"RGMbFMZXJr7DhcAJy\",\"Y8oLLLRqZv7yBGkYs\",\"axdSNLZpiCDF8RS6n\",\"bccs9koJxyQ9XNiLC\",\"9gJsF5apWJGWZJprn\",\"9uRZernrbaMo4wRW3\",\"sbJcFfQjQ59Wfg4Cd\",\"YRAzEBJoLvSaiPtYx\",\"5XiuAqicKD4hBdu63\",\"Cybtjz3cF7RgoiqrN\",\"oyKcm3zqdy8Ko5P5d\",\"MRrjdojkTWC8oTrM4\",\"ey3CASd6Je5LEJzfB\",\"C2AfMipCicfD58WJ9\",\"AJexRBN9cYQmqvYu6\",\"3pxHTZBsv7MKzFG6Y\",\"DpnYcMphntjsQ96qg\",\"HuNF3xTBzmatyGSTm\",\"yod5YhKtPqw2GfG9B\",\"4fhjJBvLBWh6QeSih\",\"utTuvGdmu2sBHWBhQ\",\"9MER8SZ9Xo6xNYMj8\",\"pduNK68oazqQTtbLp\",\"Jqk2uJZZxEv5wZFze\",\"o4ixjQGSaYqA2JoM4\",\"wjc4iejpErBhxWwHo\",\"YL9pqyCu8xsds8J49\",\"5zGMciq3fB4aeu9uj\",\"WdKdsgH9gXkKgCycx\",\"GT9wLv8Lipyp6YYTp\",\"nJXgbSQozcoE8Wn4N\",\"9Hp6Z83SwWxMQRouq\",\"DqNQn9Jsxcu5HijKE\",\"5wCHxMQ5Km2bjqcGZ\",\"Lg4t6SEWgtYz4u7Cj\",\"iF4tdvn5sA9CM4T6T\",\"buX4mCQhtXCfBjeno\",\"GGdmhAvxXhqhhibJN\",\"MXGuntvz3byrP6WJc\",\"5hQnRWiKkhgKJXNMP\",\"p7js9trz2zk2RorCR\",\"5prBnBm3YszWAYPTp\",\"ZyrfhDTZHb8LymH5b\",\"PJQJDjZaBxTXu4FyG\",\"5S9nX4rKsnCcnv4Cz\",\"ga7aTTEThzsELuC2j\",\"qZQxPQ2kaNKAMesHT\",\"aaJWssCWfMa63XJng\",\"gf7u4MKcGDFiijzK9\",\"7N6c3Xu244bnQWjBs\",\"whm4vkxLMtG9YyobP\",\"srJ34BaybkQh3qRkM\",\"LPGPHgJc8MkvcEDBc\",\"Ds7L5bksw2QRHjrKL\",\"nFbmNzMQ38TncmfQX\",\"eYfPWvZwnJQkHbSTK\",\"q6QsMYNMpPNtmyTeW\",\"qQQ4hCQpzitmHSkjS\",\"uouMMdEWBuLBWPbzr\",\"T2vhHPhRR96hRizq8\",\"JhX7jvtpwNyxcc39m\",\"CHvzhtXnv8HTbPQ56\",\"pPpmP7xeJzGgK362R\",\"PWgzeK859suojbrRx\",\"qAby4AWXmTNeusvg3\",\"9ivvGvJGvtQfigQaZ\",\"BrTDhPJcACL2bsrpJ\",\"iYXdNw7tKcgA3QwBX\",\"Cuy7McJ5y8BkXRRk9\",\"WpSrzoCha6bMMzkbK\",\"XD5nmvKQchKezPXhy\",\"mfsaETo7uA4x5vqLD\",\"AFfw7cGg83uYk2Miy\",\"BJp2WkwLWGHHB5oQW\",\"2HfNkb2SoqdyjKW3o\",\"AQSqD9oNv2uPfxZCR\",\"Fb2wehA7QgTFWry2x\",\"Wpn95NqWxncQrwNgz\",\"NfMJuiBk6FN5Jc6ow\",\"dJzNF59j2p8jWZxiQ\",\"66a9xX73nmTEuKs9k\",\"K6MfKMytoJJuSGewP\",\"GTKsdeEihE636Le9i\",\"6BpQP3ubeg48Q65ya\",\"PC3pLs36zNzpRDSuE\",\"DfHHpvnubuFmeNky9\",\"jWbd7SYDzLPjc9EDh\",\"2PufnQcsHsfymufX3\",\"jL4y5fTJAMBjhZmko\",\"Cc2Cgj4MWXZxsTooC\",\"c2q7mY39z5JPEMCaM\",\"EfxwqhYdapX3dMQC2\",\"ghMkPtdFCpM6w8nax\",\"X4rzfxGgxx6CS7Bpz\",\"tdfY4iBvD7oh2ufnN\",\"RoGGD5cpHb4ftdLDv\",\"QFZcdxGKBaFZb7Zbk\",\"mvJBakQ35CWAnbbEZ\",\"nc7bRhkxgKyqusYe3\",\"9Ly8afdtofp8DXzrt\",\"4Lwjr34ypKNQNQCar\",\"R6YxHWAiLgKwy5YvC\",\"eHcgvkTGsH7ZziqBo\",\"sKfrD9gjCDHuqLzSk\",\"u5u2YpHXiNgzDNJdX\",\"JiSpvq6C7azQEmENc\",\"4RY3zj9C2t8GGefhi\",\"hR7GMiqGap4CzEWSy\",\"2iFe3EHEH2YdhSKrs\",\"4TmgHkn5vqyHK3sYC\",\"vecmkxXCheGp2aS6o\",\"StNu7DPyTgEStZsMY\",\"jkbavR2ATFJcpmo8M\",\"pQwhNKiCne4gEZgcn\",\"T6Rm8mREPMZSftzrC\",\"uGuS9YRXW2nj4p6zf\",\"d9LBRxvADNBB5QJMB\",\"suArq5BbSy7gD6xri\",\"hpT9yYe5R45poHrYR\",\"ybxiXr9mGH3DRDFhF\",\"dzS6WBTMHyFEag6Fp\",\"AMpQSjKsRqhCDyS2j\",\"TCvpT4EPb8qNssNB7\",\"uK58g2EXxqxTaB2iA\",\"vAh63eGRwkuJtoP8v\",\"Qyfyyw6oC4EHAndzo\",\"rCrbqMiaGPgHYTNxu\",\"B4y8aoyXJtskYPFEL\",\"QWjsXnLaJ7xfL3Amq\",\"8uiLiJcmWxWe6qw65\",\"3KkyQm77zsew58Dc2\",\"DHXQEnTF6RANkv3oN\",\"qB6KSTYC6H2TQEQY6\",\"5QN8R22z43SrwoHDz\",\"Hu4SkoNyWCP4vmsZE\",\"vCeeMuYDbz3MB4vsk\",\"eW9R2SCoYnY8HBAdL\",\"ctbThYbufFCYbRK4f\",\"Wi4H6ayKsNDWWQCG5\",\"rDgKHd6ZSSpboiAj7\",\"ruzwBPphPDRgLXdnP\",\"wrL4iX2CCSqDCCty3\",\"vAbK8sCfKyFC78HYg\",\"RfbjShbg8jmhyNtJh\",\"mw9464S5dnenqzvpm\",\"E2hpke7mHxAWsw5t9\"],\"total\":315,\"quality\":[5,5,4,5,5,4,5,5,5,5,5,5,5,5,5,5,5,1,5,5,5,5,5,5,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,4,5,5,5,5,5,5,5,5,4,5,5,5,5,4,5,5,4,5,5,5]},\"flags\":0},\"summary\":\"Given a string indicating a range of letters, return a string which includes all the letters in that range, including the last letter. Note that if the range is given in capital letters, return the string in capitals also!\\n\\nExamples\\ngimmetheletters(\\\"a-z\\\") ➞ \\\"abcdefghijklmnopqrstuvwxyz\\\"\\n\\ngimmetheletters(\\\"h-o\\\") ➞ \\\"hijklmno\\\"\\n\\ngimmetheletters(\\\"Q-Z\\\") ➞ \\\"QRSTUVWXYZ\\\"\",\"tags\":[\"strings\",\"language_fundamentals\"],\"timestamp\":{\"$date\":1587152618938},\"title\":\"From A to Z\",\"quality\":4.8,\"family\":[{\"_id\":\"tMBeNhT4sQbmqzXeh\",\"language\":\"cpp\"},{\"_id\":\"sJSKWWeSYqov6ew44\",\"language\":\"javascript\"},{\"_id\":\"Abo5qakEcntamMZ8p\",\"language\":\"python3\"},{\"_id\":\"p5o8McyNhAKvQhpXs\",\"language\":\"ruby\"}]}}"]