a["{\"msg\":\"result\",\"id\":\"651\",\"result\":{\"_id\":\"5rnrzDzjmw9658872\",\"author\":\"Alessandro Manicone\",\"authorId\":\"AasGs8AeX9Lcb9xJn\",\"code\":\"left_align = \\\"yourtemplatestringhere\\\"\\ncenter_align = \\\"yourtemplatestringhere\\\"\\nright_align = \\\"yourtemplatestringhere\\\"\",\"difficulty\":1.0923076923076922,\"editorId\":\"AasGs8AeX9Lcb9xJn\",\"familyId\":\"FdeZbPAbyFFHdWL3W\",\"instructions\":\"For each challenge of this series you **do not** need to submit a function. Instead, you need to submit a **template string** that can be formatted in order to get a certain outcome.\\n\\nWrite three template strings according to the following example. All final strings must have a **length of 30 characters**. Notice the **period** `.` at the end of the strings:\\n\\n### Example\\n```\\nname = \\\"John\\\"\\n\\nleft_align = \\\"yourtemplatestringhere\\\"\\ncenter_align = \\\"yourtemplatestringhere\\\"\\nright_align = \\\"yourtemplatestringhere\\\"\\n\\nleft_align.format(name) ➞ \\\"My name is John              .\\\"\\ncenter_align.format(name) ➞ \\\"My name is        John       .\\\"\\nright_align.format(name) ➞ \\\"My name is               John.\\\"\\n```\\n\\n### Tips\\nThe placeholders `{:<x}`, `{:^x}`, `{:>x}` are used to align left, center and right respectively within a width x.\\n\\nFor example:\\n\\n```\\n\\\"Credits: {:>7}\\\".format(128) ➞ \\\"Credits:     128\\\"\\n```\\n\\n### Notes\\n- Submit a string, not a function.\\n- Do not change the name of the variables `left_align`, `center_align`, `right_align`.\\n- You can find all the exercises in this series [over here] (https://edabit.com/collection/hCYFNwxGwnAYzq497).\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(left_align.format(\\\"John\\\"), \\\"My name is John              .\\\")\\nTest.assert_equals(center_align.format(\\\"John\\\"), \\\"My name is        John       .\\\")\\nTest.assert_equals(right_align.format(\\\"John\\\"), \\\"My name is               John.\\\")\\n\\nTest.assert_equals(left_align.format(\\\"John Joe Doe Smith\\\"), \\\"My name is John Joe Doe Smith.\\\")\\nTest.assert_equals(center_align.format(\\\"John Joe Doe Smith\\\"), \\\"My name is John Joe Doe Smith.\\\")\\nTest.assert_equals(right_align.format(\\\"John Joe Doe Smith\\\"), \\\"My name is John Joe Doe Smith.\\\")\\n\\nTest.assert_equals(left_align.format(\\\"Edabit\\\"), \\\"My name is Edabit            .\\\")\\nTest.assert_equals(center_align.format(\\\"Edabit\\\"), \\\"My name is       Edabit      .\\\")\\nTest.assert_equals(right_align.format(\\\"Edabit\\\"), \\\"My name is             Edabit.\\\")\\n\\nTest.assert_equals(left_align.format(\\\"Ash\\\"), \\\"My name is Ash               .\\\")\\nTest.assert_equals(center_align.format(\\\"Ash\\\"), \\\"My name is        Ash        .\\\")\\nTest.assert_equals(right_align.format(\\\"Ash\\\"), \\\"My name is                Ash.\\\")\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[0,0,0,0,0,0,1,0,0,1,0,1,1,1,0,1,0,1,1,2,2,0,1,0,5,1,1,2,2,1,1,1,2,0,2,1,0,2,0,0,1,0,1,1,0,1,2,1,3,1,1,0,1,3,1,0,2,0,1,1,2,0,1,1,1,1,1,3,1,2,0,2,1,1,1,1,0,1,1,2,3,1,3,0,2,2,1,1,0,2,3,1,0,2,2,2,0,1,1,0,1,0,1,0,2,1,0,2,2,2,5,1,1,1,1,1,3,1,0,1,1,0,0,2,1,1,1,1,0,2,1,0,1,0,2,0,2,2,0,1,1,1,0,2,2,1,1,1,2,3,0,1,0,1,1,1,1,1,0,1,2,1,1,1,2,1,1,0,0,0,2,1,1,1,0,1,0,1,2,1,1,1,3,1,1,0,1,1,1,2,1,1,2,2,1,0,1,1,1,1,2,0,2,0,1,2,1,2,1,2,2,0,2,2,2,1,0,2,1,0,0,1,1,1,1,1,0,3,1,1,2,1,1,2,1,1,1,2,2,1,1,2,2,0,0,0,3,0,1,1,1,1,0,0,0,2,0,1,0,1,2,3,1,0,1,1,1,1,1,1,2,1,0,3,1,0,2,1,1,1,2,2,4,1,1,1,1,0,1,0,0,1,0,3,1,1,2,0,1,2,2,1,2,1,1,2,0,1,1,1,0,1,2,1,1,2,1,2,0,1,1,2,3,0,1],\"rators\":[\"AasGs8AeX9Lcb9xJn\",\"tAF9Gf6PiGogbZuWs\",\"a777e8chPvJkY3tKa\",\"n2BRY9X8899dcG8Bw\",\"gb9rvGus2Jv7bjZSs\",\"Yg5KsgKxN3tWmuEKG\",\"di2hhADLx59Bj4ewM\",\"nQQh89oRrvyLXabZQ\",\"xbwXvSRLK3T9zsGLK\",\"yHbTMNQXXdLzDkvhE\",\"9pzFiFK3ANLjQfnr2\",\"AF6LgdKhEdzwgRJom\",\"xZkbJwb7XQu4AdAZi\",\"3xr56NiGaGt6FPAJW\",\"ZLJ4RfqPrRkiQQBxk\",\"gJYuGdkXEWWmGRLzu\",\"nfXGHENb5md7m355s\",\"Yp7uvStL97cC9fKkY\",\"TDWvNwHLodFiKp6Xa\",\"kjvgTyRFyKHv44DcH\",\"AhkNbhWPmxkn3Z9GF\",\"5HCu9Ydd86QgHDRNP\",\"zaWuu5gEqpDz4mAaZ\",\"5eRdoeYxS97AFS8ra\",\"sDRY37TfoncsA2FSR\",\"2ptN2mhjFwFcHyPZd\",\"mHvoroWGDLYbJqQJa\",\"TQhN6YPSfQiiuCE68\",\"GypbCPC7MaMm8Pfpx\",\"FnYh6PpnB6eNQRYDB\",\"8BFSTCnoe2QggN64c\",\"zkkHgR6DtQhG7SAo2\",\"xy5QuzXdxJd9QBfsr\",\"dKKMvaYoJunNPk5Wa\",\"hMqriHn8EijgXwYTd\",\"Bk7RZRhJuiEBcH6TK\",\"8PwfYqoDQFThzNtvf\",\"XrqNzJ2FRG8HnGiR6\",\"QZTkcg8f56RkFberP\",\"ahk2qiXKJA753wAJk\",\"ZNnsMeNkdDhHjSrZb\",\"drnGqc8a5JY74rAcE\",\"NzbRqGWspQnWMoDrF\",\"vhLJwgSRY2J7aGD2i\",\"tsHWEu8yCeZhabpRK\",\"RuHad7wL2R98BLRXy\",\"FEYpu9RWysAgW3XnP\",\"j9Ev7cSfBapZZY3dy\",\"EAt7xgPBa69cnyDvN\",\"CwPPpWWTwCuErBQ4c\",\"PhceyfmFntJcn5Fhf\",\"K6rkvoi5gcaj82kch\",\"mxX4rH5ELYkdZ2Mbw\",\"ikZReppEvk2vFbiCK\",\"b5bi9DAZJtv6YT7Wt\",\"JKJTrdF7McRyueXnn\",\"DEDniTrstQYGounXT\",\"Sj4iamMmNvxwWJBiF\",\"2ZFoLTxcCARhwc8xX\",\"nmCk8C8iDejb75AFH\",\"WudvrGLenpCgKakp7\",\"HMweSoHkGZN6tfew7\",\"C8tzBCs4aGEHuvRWD\",\"eEZ8zeWX8b3SWs84P\",\"DhdGHvhXj2mgwgCCa\",\"pMH6c7GTWP2gHgX6A\",\"6H9AGm4oz3ErBRMtJ\",\"qTQGbqpJsx3SRcHZq\",\"2QGRoQn2dRq3scu7k\",\"c2q7mY39z5JPEMCaM\",\"d28dPgMHYJssbtmMz\",\"NYtCJje8zbgcfwZem\",\"2wb4F2fYBYX7e2d7g\",\"yXuZh6CF6GqKYHzoT\",\"Tph8sMs4bkHcuc9TE\",\"wpC9ZTxW7iy24tzcf\",\"hcNbHccysCEQ9yhGp\",\"RpmGuKA3d34t4gkBr\",\"mYik4TH8335pSXAQg\",\"KdNDysEsy2TW5QRJ2\",\"qkR9ccqy3g5Gvc6Bo\",\"HF28xZKSLM9wEuqNg\",\"rgvAJFwfCeYoYnFTK\",\"f7TXfBLmouH4BfamK\",\"YkEE6MjRgz3h3MF5W\",\"faZmH79jbKzJdDYBs\",\"FvFhg2wELM3SCZDZQ\",\"GGdmhAvxXhqhhibJN\",\"FK2fEQ3F6DD3buSLJ\",\"oRdsdmmPpzfSK4tDq\",\"FzxTj4GuujhwpZM7y\",\"4rwxLqLs2mNZNg8NB\",\"MKT7khMBGXzA22ykf\",\"yZvzB3qFb8pkHy4dg\",\"3LiSLdtN58n46NEqg\",\"QDiHtAiYuyEEmoCgv\",\"TP8xuSLNax26Czg7v\",\"jNvegJWCk5HCtEMbK\",\"hab8YixsXxe4CcZpP\",\"3cF6NXq3ZEwdkgSjb\",\"aEm3Wvj2rFYRL8Lrb\",\"sHjfbGQGLHE6JR6qu\",\"vsx8nvysMxZ3Q5S3h\",\"ckHFA5y8pkrXbsevA\",\"8JyqsSbN2FJXPr3cw\",\"J5T8gZqiZXFuFDTQ7\",\"4zkChgTrb5EDzYZmd\",\"huvDRrjPj5NwgWftK\",\"yYxPzFqBgtQ9fsyHM\",\"H4abACFDH5t8CnnyH\",\"FxJxxwowtXYCaLaeD\",\"PTdhjojHbByKRv2Sc\",\"jL4y5fTJAMBjhZmko\",\"CLypXaZksY99mpRCm\",\"YA7SDhpgEtsqynvNL\",\"TjeuzxKBd7b4ZajSs\",\"bCDTKAoS4biDmQ64Y\",\"syRNbbPdLCGXbH2Gy\",\"JcjukWQ3srKtLyNsG\",\"R4SjTgDnpigJYDLyL\",\"2innwjWqxJHo4eRGh\",\"23KndF374EHHZNbL8\",\"9CoqdidjM9KbeKnHY\",\"dj5AyG5fWP8FdsSmZ\",\"wi6FPhs9Te7P8xzqx\",\"k7f82n7oxaWsmhdzT\",\"KdYQN3KAT2DyTzT2a\",\"QuQqdww2t72mqEtue\",\"AtoBC3LqE89p3xhYC\",\"Pe8vWpDHRuH9nSGKW\",\"pDvFWMCD9fQwoBPcu\",\"RSSFAHtN4LMg3iNPi\",\"Tpc5NKFiQyz3NTZau\",\"M8dQuMrEpP8Hc3tHN\",\"u7BA8hWLLg7sxyYwz\",\"EMJ6uvBZkie429gdg\",\"2QHsCERGAgg94HDTq\",\"NrkLFyfNRp9aE2Z3R\",\"PQ2u53dewdokYyn4i\",\"pduNK68oazqQTtbLp\",\"7swzc99cxXECGW6cg\",\"pJj86xc32Bs7Frxvi\",\"dik7wis3hBJJBkYwK\",\"eH7To6MMaCQ8DJiQN\",\"vyaFTJDKChqYfczdu\",\"zXgwEs94QFkLraLMH\",\"PXAcsKkssS2yLyDv2\",\"CTKmXtrqDYqJBnuy8\",\"mBtSsKTHdQniYAfsZ\",\"p8qqFdJ3FSk5x9z3G\",\"i5iePG5GqhJJ8HEoB\",\"HhYCji7QqauyN3A7v\",\"oBcs8GLX2ZFLXQy8y\",\"HqmxnQJM66Y57twhn\",\"8vWWL8Tx2yDai4ydm\",\"ji5f27FPz4wRRF6Ls\",\"TPhfpB5tzQWSSn67n\",\"kQ86mSGBiBQQvXzQR\",\"Yp4Jtxj7pHqZjheN7\",\"sHDcTJTsrxM3QnJij\",\"SkQcb2sRn4as5KpnN\",\"ta5CrWnBCRusD2WMo\",\"oHbErJxjYJhD66d5w\",\"aRqQ42J5zqCmBNd8w\",\"yjtdwc2AC4jA2RWtn\",\"85PAWNajZLAezxkiE\",\"XkJ9G89xpZiTj58Eq\",\"hkJGLuib5md8vZ9HD\",\"chqp9oyiDEhrZeA3m\",\"aKzYNPqBqb3J3ZgyD\",\"9NCu6PzqPBbbrZ8L9\",\"RehJGBFS6CYiWdjZx\",\"oRFJgKCWpXq85tFZg\",\"uhJRtyFA2GZnCx6mL\",\"JJHE4B3cJC35ni6aH\",\"QhMb9aLC4o8zTb9nn\",\"buE3e85wJivoy8aiY\",\"6TqGSumCZmZ4zzeQQ\",\"JJmKj7ACC2P52uo95\",\"ipbuWNjSmiMfbxY6B\",\"g4NCSxxHqHCGMpWwT\",\"NwioocofX95w7okyE\",\"4fhjJBvLBWh6QeSih\",\"6gS4E2C84vBYTYeDZ\",\"5ppb5Mc9WKrGuRdat\",\"6N5w77AXtmFsA4vGg\",\"yWwASsv3iZzfQTbzx\",\"Lg9mBep6NtWtffPMN\",\"LLvmxMFKX6zqHPxtx\",\"crftT5nioy8kdaHyw\",\"6428wKHtwKkFdvBs5\",\"KLmLKaJPfsYxp42p2\",\"FCFbqPKSAajnbebon\",\"4Np3uu6Jj67L2CxiR\",\"PTDFuxAzou7W6asWt\",\"KyJxeCm5f5SoDtRHD\",\"8aEGGQPkGesWwoaom\",\"kbdamK89hv6yf9TKp\",\"bmthyKcDF922zNqxK\",\"snEnPHNwdgtzqPneR\",\"5wKR58r2GcDP37hT4\",\"iBTooWAGe7dD9svva\",\"NrRa4TS6uZR9xuXRt\",\"MCw7uAcoWcSTBTmr3\",\"PBn3fhAqsEqHEHq3E\",\"Dq24MSpogRmq6L4hX\",\"HnJuYrgwLJwXtboE3\",\"vZjx87eR2t6FbPeuD\",\"8WpvgSbQciTQWdd8T\",\"yv2QLxoywSnwSZkWw\",\"DYDJTyGgKFnBRLm2r\",\"ZDymmRcAKKjbuMS5G\",\"ZPfMiGmjtiGpzozG2\",\"Kz7ee56Ht4Ns8JjBj\",\"d8qtzoLB264iP8tdY\",\"zbnmN2wrvzZgY7CyN\",\"2EbDCCJJvCfKkbYia\",\"o4ixjQGSaYqA2JoM4\",\"974cv448kw6Wu2JF6\",\"5Z4o2pWDzmbpw4JHJ\",\"tpxMgkGSHwBjS95Ta\",\"yTtSCvGPyYna6JuRC\",\"SgZ2t9xFuRqdJGofp\",\"rrSC943cCKNG48sH4\",\"tW7TaC7bjNajLGH5Y\",\"BrTDhPJcACL2bsrpJ\",\"yod5YhKtPqw2GfG9B\",\"mG8HqKiAQFTdRZthG\",\"bLGqk6rTP3a5pfG7o\",\"di8ikzbLPSZKCDAAC\",\"wRttWTM59y8m5mx7x\",\"Kh3Pc2ZRusurLaMyP\",\"vnEZA4ncojpbbqzbj\",\"dBzwBtRjZqB98DJeB\",\"oXdhczMThyirgM2eN\",\"DPi9QGLctq2y76KuE\",\"spYFrLhsowc47QNNE\",\"RGMbFMZXJr7DhcAJy\",\"QRv96jmNaYsWkxQEG\",\"J3upzLHuEwXH7Z2hx\",\"uX3EL4Qha99wBkozM\",\"4fjSgcqhQQZM2ZFRP\",\"sX9GZp3fYyQLrBKMJ\",\"2QziknsznNeMPRh3g\",\"c2u7qfdaYxcyuydtu\",\"oDN67zoApxcztnYdu\",\"axdSNLZpiCDF8RS6n\",\"brBkqpqkRarKALzgv\",\"ga7aTTEThzsELuC2j\",\"dYPkStFnLvAMsHSzZ\",\"6MjSiiBLPcvXbXcaZ\",\"DAhoDmrLmkoRsJhRx\",\"Jqk2uJZZxEv5wZFze\",\"jKBXAcRqjsp63x9i5\",\"HMKp7iyeycYybEuGs\",\"CEd9tLdXeDeNHSzys\",\"wjc4iejpErBhxWwHo\",\"4ArGCifHnsz8p525A\",\"xSNdn3XovWh6c6Bjd\",\"utTuvGdmu2sBHWBhQ\",\"s4YHxEDBTTq5EBMRs\",\"5zGMciq3fB4aeu9uj\",\"nFbmNzMQ38TncmfQX\",\"W4cLjos2dNMkKzpXX\",\"mxgQ9Jt29CNkP9qa5\",\"5XiuAqicKD4hBdu63\",\"uwQvy9tNNxDYqgu7g\",\"WdKdsgH9gXkKgCycx\",\"qAby4AWXmTNeusvg3\",\"C2AfMipCicfD58WJ9\",\"ZuuRwv4HkeT54MwA9\",\"Ds7L5bksw2QRHjrKL\",\"iF4tdvn5sA9CM4T6T\",\"5hQnRWiKkhgKJXNMP\",\"2Kzz5CubctKWfpPBp\",\"utdj2v4ruJdN644DR\",\"NyMjb994ykb5bdCtS\",\"624Na7HAdEZa8Q7B9\",\"Lg4t6SEWgtYz4u7Cj\",\"ZgWwEdWxjy83WpPQX\",\"9FCeFzjPA4jrQ7oHW\",\"hERDiXzMt3bagzfKp\",\"8myATQ6dBJ4jKEpTw\",\"gg4hgFGgmvK9ZxENE\",\"pveK5gtGcm8k4wScM\",\"ov3aMrAbjhfD7uuMK\",\"DpnYcMphntjsQ96qg\",\"uGuS9YRXW2nj4p6zf\",\"DqNQn9Jsxcu5HijKE\",\"uH4HvaiESNCeYdSyZ\",\"WG48ALzY6i8i8Pxzn\",\"dMA6gSHS4ETXvPCtx\",\"BMJffXrypJSAzTG7w\",\"rjDzKfg8dKxS8aF4L\",\"FSe2mfd98g84k5DW6\",\"PKCfEdwMmy4uPJjGW\",\"fKsHKQ9ZTyEgmcQmQ\",\"aFBry9RABAQJ23AJC\",\"5S9nX4rKsnCcnv4Cz\",\"ZoREYdtAsWeT87Ynv\",\"Kw4NB7EraK29d7FuF\",\"2bW8ZPE6Yzhr8gwJ8\",\"gEqTEX2vrEzoYcFas\",\"7D76ZPLjgjZideoy9\",\"XeNskNoh5DcHuKTWX\",\"icsLTze3op3SPQbzy\",\"buX4mCQhtXCfBjeno\",\"vJNYgDyPdPQ9XaqWi\",\"Fk9kLwoG4Brf4KsKf\",\"LCuvvWMwiGuqTwNRi\",\"wpYdeExobBFGMidA3\",\"P75dsyFTBr7DQr8No\",\"97mMkvdDxbhkQXNPp\",\"LW8PqW4HFXWfoJGo6\",\"JS3hNM3XXkxPdg3yk\",\"Tuqd4EysQpZLYA6be\",\"srJ34BaybkQh3qRkM\",\"BNEcpQnAnD7ceSAZf\",\"YTRAyZFtn9m68HBLK\",\"q9FfWNiMDKRiaCJ5j\",\"W8DheA4ouYyiAubpd\",\"F7wta4nHmabMr9dfd\",\"AFfw7cGg83uYk2Miy\",\"TmM3AN7g3fkh69ycj\",\"pPpmP7xeJzGgK362R\",\"eYfPWvZwnJQkHbSTK\",\"9ivvGvJGvtQfigQaZ\",\"StNu7DPyTgEStZsMY\",\"y775Z4v5u29nD6hpC\",\"zgoEhAyhrjnsSLPGw\",\"g8ycjP4YwY4obJ8hG\",\"XD5nmvKQchKezPXhy\",\"a3Bm89vs2KdhtNBGY\",\"BJp2WkwLWGHHB5oQW\",\"jBo3xAopr37GFzY8g\",\"CKHKhvJcq9jNMqrmd\",\"iP7wNofhZXTkJ9ryG\",\"u5u2YpHXiNgzDNJdX\",\"9Ly8afdtofp8DXzrt\",\"4RY3zj9C2t8GGefhi\",\"4TmgHkn5vqyHK3sYC\",\"M2gFMJkocQSY6bsFR\",\"BMEud9eeJnPDC8A2k\",\"CHvzhtXnv8HTbPQ56\",\"YXQvrgeiGzLd6cTW9\",\"eHcgvkTGsH7ZziqBo\",\"2MjzJ7yxh3eT3xbng\",\"wwz3ixWSv8rFDHBXd\",\"g2mqHYvQmr78mET8i\",\"Afnps7TJQuS9sipMb\",\"54BFnXEjY3FuRNYpN\",\"TCvpT4EPb8qNssNB7\",\"gKnWjDjwrJh7MK2df\",\"zC8WrPp5BC6c2exrW\",\"pwWtbXEjzuvrhEGwt\",\"vCeeMuYDbz3MB4vsk\",\"dzS6WBTMHyFEag6Fp\",\"B4y8aoyXJtskYPFEL\",\"sbJcFfQjQ59Wfg4Cd\",\"ahWFxnaxt9bXSA4f3\",\"4Lwjr34ypKNQNQCar\",\"Qyfyyw6oC4EHAndzo\",\"568ACohZ4H8vFmLSe\",\"cdXmwjupCXSvJTSNo\",\"FiaTpm7ehfDv43wSG\",\"MfAA58Bz5482Z5qQt\",\"EmG8uSoa5JfnsGA7T\",\"5QN8R22z43SrwoHDz\",\"GgQqni8TkbqEBGcsy\",\"Wi4H6ayKsNDWWQCG5\",\"tR9grPBLncwacBTzr\"],\"total\":395,\"quality\":[1,4,5,5,2,5,5,5,5,5,4,5,5,5,2,5,1,4,5,5,5,5,5,4,5,4,5,5,4,5,5,5,5,4,5,5,4,4,4,5,5,4,5,3,2,5,5,5,5,2,5]},\"flags\":1},\"summary\":\"For each challenge of this series you do not need to submit a function. Instead, you need to submit a template string that can be formatted in order to get a certain outcome.\\n\\nWrite three template strings according to the following example. All final strings must have a length of 30 characters. Notice the period . at the end of the strings:\\n\\nExample\\nname = \\\"Jo\",\"tags\":[\"strings\",\"formatting\",\"language_fundamentals\"],\"timestamp\":{\"$date\":1589818858681},\"title\":\"Format V: Alignment\",\"quality\":4.352941176470588,\"family\":[{\"_id\":\"5rnrzDzjmw9658872\",\"language\":\"python3\"}]}}"]