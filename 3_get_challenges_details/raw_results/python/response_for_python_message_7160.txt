a["{\"msg\":\"result\",\"id\":\"2286\",\"result\":{\"_id\":\"uE5YuLZvpJu9TRnax\",\"author\":\"BijogFc24\",\"authorId\":\"Nb6LYPoQP6KJZt8mz\",\"code\":\"def prefix(exp):\\n    \\n   \\n\\n\",\"difficulty\":3.5833333333333335,\"familyId\":\"fETRiGPXZgDKbinEP\",\"instructions\":\"Create a function that takes a mathematical expression in **prefix notation** as a string and evaluates the expression.\\n\\n### Examples\\n```\\nprefix(\\\"+ 5 4\\\") ➞  9\\n\\nprefix(\\\"* 12 2\\\") ➞  24\\n\\nprefix(\\\"+ -10 10\\\") ➞  0\\n```\\n\\n### Notes\\n- The mathematical expression is valid.\\n- Check the **Resources**.\\n- Use `//` for division.\",\"isHidden\":false,\"lab\":\"Test.assert_equals(prefix(\\\"* -1 -1\\\"), 1)\\nTest.assert_equals(prefix(\\\"+ 12 13\\\"), 25)\\nTest.assert_equals(prefix(\\\"* 3 3\\\"), 9)\\nTest.assert_equals(prefix(\\\"+ -15 15\\\"), 0)\\nTest.assert_equals(prefix(\\\"- 2200 100\\\"), 2100)\\nTest.assert_equals(prefix(\\\"/ 1000 10\\\"), 100)\\nTest.assert_equals(prefix(\\\"+ 20 20\\\"), 40)\\nTest.assert_equals(prefix(\\\"* - 8 6 10\\\"), 20)\\nTest.assert_equals(prefix(\\\"+ 13 100\\\"), 113)\\nTest.assert_equals(prefix(\\\"- -14 -15\\\"), 1)\\nTest.assert_equals(prefix(\\\"* / 40 4 3\\\"), 30)\\nTest.assert_equals(prefix(\\\"- + 200 300 500\\\"), 0)\\nTest.assert_equals(prefix(\\\"+ - * / 100 10 4 100 20\\\"), -40)\\nTest.assert_equals(prefix(\\\"* + 20 2 5\\\"), 110)\\nTest.assert_equals(prefix(\\\"/ + 12 8 * 2 2\\\"), 5)\",\"language\":\"python3\",\"summary\":\"Create a function that takes a mathematical expression in prefix notation as a string and evaluates the expression.\\n\\nExamples\\nprefix(\\\"+ 5 4\\\") ➞  9\\n\\nprefix(\\\"* 12 2\\\") ➞  24\\n\\nprefix(\\\"+ -10 10\\\") ➞  0\\n\\nNotes\\nThe mathematical expression is valid.\\nCheck the Resources.\\nUse // for division.\",\"tags\":[\"data_structures\",\"arrays\",\"language_fundamentals\"],\"timestamp\":{\"$date\":1598692414595},\"title\":\"Prefix Notation Evaluation\",\"stats\":{\"completed\":{\"total\":28,\"ratings\":[3,3,3,3,3,2,5,3,5,3,5,4,5,4,4,5,1,5,5,1,4,0,5,5],\"rators\":[\"aEm3Wvj2rFYRL8Lrb\",\"s5M5RvgqR9BhB9JoC\",\"8PwfYqoDQFThzNtvf\",\"tAF9Gf6PiGogbZuWs\",\"fznzd3qnvtbFkkizz\",\"J23RcmzbdtBbPCTjT\",\"waNsY2k4ndReyEREk\",\"iS5BrkGLzJyPK7nKt\",\"eHcgvkTGsH7ZziqBo\",\"buX4mCQhtXCfBjeno\",\"iojEnnY9FsMfYzp6f\",\"8sNv5PTHa7XQ8bNqR\",\"QRv96jmNaYsWkxQEG\",\"AasGs8AeX9Lcb9xJn\",\"yjtdwc2AC4jA2RWtn\",\"PH32cNxBjrK4a28sn\",\"gKnWjDjwrJh7MK2df\",\"2PufnQcsHsfymufX3\",\"gJYuGdkXEWWmGRLzu\"],\"quality\":[]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":1},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":0,\"family\":[{\"_id\":\"vQTiy9fvwRuLWs37W\",\"language\":\"csharp\"},{\"_id\":\"adxJHueh3if83JTgP\",\"language\":\"javascript\"},{\"_id\":\"S6sFgka3dnpqwXd2w\",\"language\":\"php\"},{\"_id\":\"uE5YuLZvpJu9TRnax\",\"language\":\"python3\"},{\"_id\":\"BfTchgJHAPjdz3Zvc\",\"language\":\"ruby\"},{\"_id\":\"ZERHA9w8iSLYNzRiT\",\"language\":\"swift\"}]}}"]