a["{\"msg\":\"result\",\"id\":\"2013\",\"result\":{\"_id\":\"sZkMrkgnRN3z4CxxB\",\"author\":\"MegaLoser\",\"authorId\":\"kWobGYgZWJxN6ZddF\",\"code\":\"class Rectangle:\\n\\t# WRITE CODE HERE.\\n\\ndef intersecting(a, b):\\n\\t# WRITE CODE HERE.\",\"difficulty\":2.8048780487804876,\"editorId\":\"kWobGYgZWJxN6ZddF\",\"familyId\":\"Lscnik7em2GwdL73j\",\"instructions\":\"Make a Rectangle class with four parameters, an **x**, a **y** (representing the **top-left** corner of the rectangle), a **width** and a **height** exclusively in that order.\\n\\nLastly, make a function `intersecting` that takes two Rectangle objects and returns `True` if those objects are intersecting (colliding), else return `False`.\\n\\n**IMPORTANT**: horizontal axis goes from left to right while vertical axis goes from top to bottom.\\n\\n### Examples\\n```\\na = Rectangle(10, 20, 100, 20)\\nb = Rectangle(10, 40, 15, 20)\\nc = Rectangle(50, 50, 20, 30)\\n\\nintersecting(a, b) ➞ True\\n\\nintersecting(a, c) ➞ False\\n\\nintersecting(b, c) ➞ False\\n```\\n\\n### Notes\\n- No negative values will be passed.\\n- If it's a bit confusing, try imagining the rectangle with the given width and height and then place their top-left corner to the given x, y coordinates.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"# Rectangle( x, y, width, height)\\na = Rectangle(10, 20, 100, 20)\\nb = Rectangle(10, 40, 15, 20)\\nc = Rectangle(50, 50, 20, 30)\\nd = Rectangle(90, 25, 100, 5)\\n\\nTest.assert_equals(intersecting(a, b), True)\\nTest.assert_equals(intersecting(a, c), False)\\nTest.assert_equals(intersecting(b, c), False)\\nTest.assert_equals(intersecting(a, d), True)\\nTest.assert_equals(intersecting(c, d), False)\\nTest.assert_equals(intersecting(b, d), False)\",\"language\":\"python3\",\"quality\":0,\"stats\":{\"completed\":{\"ratings\":[3,3,3,3,3,3,5,3,3,5,4,4,3,2,0,1,4,0,3,3,2,4,2,4,4,5,5,2,0,4,2,4,0,1,2,2,2,2,3,4,3],\"quality\":[],\"rators\":[\"kWobGYgZWJxN6ZddF\",\"8PwfYqoDQFThzNtvf\",\"SGhPxX5bHGL8zZqtt\",\"s5M5RvgqR9BhB9JoC\",\"iS5BrkGLzJyPK7nKt\",\"fSQSHjW3e72MrWxbD\",\"gJYuGdkXEWWmGRLzu\",\"8JyqsSbN2FJXPr3cw\",\"23oi2a3vQwhtLEbSj\",\"b3Dk2LqoEgripS3Y3\",\"8sNv5PTHa7XQ8bNqR\",\"hkiz2Nv927cYGrA86\",\"eMuCpJ2spXWkJjWNz\",\"Wpn95NqWxncQrwNgz\",\"p8qqFdJ3FSk5x9z3G\",\"kB7vZaNsDMSJQJTdb\",\"oLbXCR7s4H4ggqTos\",\"yjtdwc2AC4jA2RWtn\",\"AasGs8AeX9Lcb9xJn\",\"zBk2cwJ9SLAhFuM3K\",\"J3upzLHuEwXH7Z2hx\",\"WsCqifua4yHhKp6N9\",\"fznzd3qnvtbFkkizz\",\"PTDFuxAzou7W6asWt\",\"XHShZ3WMPgGEA2vkR\",\"oEkDZvzwDpH3oiyJh\",\"2R8ar3NFu3FLficu3\",\"zCJDDCNy5qFMCQWF7\",\"JKb5rhL6DKcCAypF9\",\"gXTAie79kiw28tx5u\",\"ZEoSTJxQbxsSYSkvo\",\"GTKsdeEihE636Le9i\",\"aEm3Wvj2rFYRL8Lrb\",\"pnzfNatg3P32mMYQY\",\"gubMgYwJY2ZtppWPS\",\"BrTDhPJcACL2bsrpJ\"],\"total\":38},\"flags\":1},\"summary\":\"Make a Rectangle class with four parameters, an x, a y (representing the top-left corner of the rectangle), a width and a height exclusively in that order.\\n\\nLastly, make a function intersecting that takes two Rectangle objects and returns True if those objects are intersecting (colliding), else return False.\\n\\nIMPORTANT: horizontal axis goes from left to right\",\"tags\":[\"math\",\"classes\"],\"timestamp\":{\"$date\":1608620158352},\"title\":\"Rectangle Collision Detection\",\"family\":[{\"_id\":\"sZkMrkgnRN3z4CxxB\",\"language\":\"python3\"}]}}"]