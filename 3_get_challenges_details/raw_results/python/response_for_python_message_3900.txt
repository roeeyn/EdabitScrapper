a["{\"msg\":\"result\",\"id\":\"669\",\"result\":{\"_id\":\"iK2F9DNAiTor2wFob\",\"author\":\"Werdna\",\"authorId\":\"buX4mCQhtXCfBjeno\",\"code\":\"def calc(s):\\n\\t\",\"difficulty\":1.096774193548387,\"familyId\":\"8wLPyZENoXQe6WyuG\",\"instructions\":\"Turn each character in a string `s` into its ASCII character code and join them together to create a number.\\n\\nFor example, for string \\\"abc\\\", the number is 979899. We will call this number \\\"num1\\\".\\n```\\n\\\"abc\\\" ➞ \\\"a\\\" = 97, \\\"b\\\" = 98, \\\"c\\\" = 99 ➞ 979899\\n```\\n\\nThen replace any incidence of the number 7 with the number 1, and call this number \\\"num2\\\":\\n\\n```\\nnum1 = 979899\\n\\nnum2 = 919899\\n```\\n\\nReturn the difference between the sum of the digits in num1 and num2:\\n\\n```\\n  (9 + 7 + 9 + 8 + 9 + 9)\\n- (9 + 1 + 9 + 8 + 9 + 9)\\n-------------------------\\n         ➞  6\\n```\\n\\n### Examples\\n```\\ncalc(\\\"ABCDabcd\\\") ➞ 12\\n\\ncalc(\\\"cdefgh\\\") ➞ 0\\n\\ncalc(\\\"ifkhchlhfde\\\") ➞ 6\\n```\\n\\n### Notes\\nLowercase and uppercase characters have different ASCII character codes.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(calc('ABCDabcd'), 12)\\nTest.assert_equals(calc('cdefgh'), 0)\\nTest.assert_equals(calc('ifkhchlhfde'), 6) \\nTest.assert_equals(calc('aaaaaddddrijkl'), 36) \\nTest.assert_equals(calc('abcdefghijklmnopqrstuvwxyz'), 18)\\nTest.assert_equals(calc('AABBCC'), 12) \\nTest.assert_equals(calc('ABCDEFGH'), 24) \\nTest.assert_equals(calc('anmatmudtr'), 18) \\nTest.assert_equals(calc('suwvete'), 6) \\nTest.assert_equals(calc('edabit'), 6) \\nTest.assert_equals(calc('EDABIT'), 6) \\nTest.assert_equals(calc('SLOWLLLY'), 36) \\nTest.assert_equals(calc('COMEnananan'), 42) \\nTest.assert_equals(calc('coupdetat'), 12) \\nTest.assert_equals(calc('arsenal'), 12) \\nTest.assert_equals(calc('byoaaasglrrsA'), 18) \\nTest.assert_equals(calc('byoglrrsA'), 0) \\nTest.assert_equals(calc('eyyyhenDDDUEN'), 6) \\nTest.assert_equals(calc('ABCDEFGHIJKLMNOPQRSTUVWXYZ'), 78) \\nTest.assert_equals(calc('zyxwvutsrqpon'), 6) \\nTest.assert_equals(calc('ZYXWVUTSR'), 6)\",\"language\":\"python3\",\"quality\":4.608695652173913,\"summary\":\"Turn each character in a string s into its ASCII character code and join them together to create a number.\\n\\nFor example, for string \\\"abc\\\", the number is 979899. We will call this number \\\"num1\\\".\\n\\\"abc\\\" ➞ \\\"a\\\" = 97, \\\"B\\\" = 98, \\\"C\\\" = 99 ➞ 979899\\n\\nThen replace any incidence of the number 7 with the number 1, and call this number \\\"num2\\\":\\n\\nnum1 = 979899\\n\\nnum2 = 919899\",\"tags\":[\"algorithms\",\"language_fundamentals\",\"math\",\"numbers\"],\"timestamp\":{\"$date\":1615598661694},\"title\":\"Character Code Math\",\"stats\":{\"completed\":{\"total\":174,\"ratings\":[1,1,1,1,1,1,1,1,0,0,0,0,2,5,1,1,0,2,0,1,1,0,0,2,2,1,1,1,2,1,2,1,1,0,1,2,2,0,0,2,0,4,2,0,1,2,0,0,0,2,2,0,2,2,5,2,2,0,1,0,1,4,0,0,1,1,3,1,0,0,1,1,1,0,1,1,3,1,1,1,1,1,1,2,2,1,1,1,0,1,1,1,2,1,1,0,1,0,0,1,1,2,0,1,2,1,1,1,1,2,1,2,1,2,1,1,1,1,0,1,1,0,1,1],\"quality\":[5,5,4,5,5,5,5,2,4,4,5,4,5,5,5,2,5,5,5,5,4,5,5,5,5,3,5,5,5,5,5,5,5,5,5,5,5,4,5,5,3,5,5,5,5,3],\"rators\":[\"buX4mCQhtXCfBjeno\",\"QRv96jmNaYsWkxQEG\",\"DEDniTrstQYGounXT\",\"T6iBEE2jp7f7iEF2P\",\"wRttWTM59y8m5mx7x\",\"FEYpu9RWysAgW3XnP\",\"iS5BrkGLzJyPK7nKt\",\"JKbEBybAsiKrmcqof\",\"J5T8gZqiZXFuFDTQ7\",\"iojEnnY9FsMfYzp6f\",\"Ds7L5bksw2QRHjrKL\",\"YcCLwitFMAEJSnxAW\",\"PXAcsKkssS2yLyDv2\",\"ApbsE5hcAsG35vWR5\",\"66a9xX73nmTEuKs9k\",\"iYXdNw7tKcgA3QwBX\",\"cAP3n5NY64uoMwzRR\",\"t3wwRMtYdLYBwWR4J\",\"zd9FLSzsGz3evKafy\",\"dAJYkPoHW3CEDuczE\",\"XD5nmvKQchKezPXhy\",\"NzbRqGWspQnWMoDrF\",\"CKHKhvJcq9jNMqrmd\",\"dJzNF59j2p8jWZxiQ\",\"HmYsDYjcvP8sAiicb\",\"c2q7mY39z5JPEMCaM\",\"3cF6NXq3ZEwdkgSjb\",\"o4ixjQGSaYqA2JoM4\",\"h9RRjZqDymieWayne\",\"g2mqHYvQmr78mET8i\",\"v39ZTQnZLxH2aZCwg\",\"NjcpoityntQ24k8Za\",\"hephf5PXsibbvJrQA\",\"NP2RxM3eBd3drnDwP\",\"Wpn95NqWxncQrwNgz\",\"tkNJoJGJqvpoMKeS9\",\"CLypXaZksY99mpRCm\",\"2QGRoQn2dRq3scu7k\",\"EfxwqhYdapX3dMQC2\",\"GjMg47SAca5JTAwZZ\",\"CHvzhtXnv8HTbPQ56\",\"Xm8r5ijKqrW7CqCF2\",\"R29kgJ9M7R4qqwjcE\",\"u5u2YpHXiNgzDNJdX\",\"WWS37MrHbt2NBFNXm\",\"RozkwJHXJMuSFDhrR\",\"AFfw7cGg83uYk2Miy\",\"X4rzfxGgxx6CS7Bpz\",\"uin3SooXNbPzwajcP\",\"gb9rvGus2Jv7bjZSs\",\"p8qqFdJ3FSk5x9z3G\",\"YA7SDhpgEtsqynvNL\",\"8uiLiJcmWxWe6qw65\",\"5HCu9Ydd86QgHDRNP\",\"8JyqsSbN2FJXPr3cw\",\"J23RcmzbdtBbPCTjT\",\"KBxTPknCRmB2b5y3i\",\"XCnbSuZF8gdA7Lc8o\",\"2ZWkjRRjqvcRSMFJd\",\"pyPaut3RbAqHoAYWC\",\"gJYuGdkXEWWmGRLzu\",\"HBuJYgW2eRBJp9FoG\",\"7GiNAgzmkfdFGB3Jy\",\"rfyEkETeoS96QNH4e\",\"Jzsn4jD7HHR9Dd7xt\",\"DPi9QGLctq2y76KuE\",\"yTAeuT4dWRkkQR6gn\",\"ghMkPtdFCpM6w8nax\",\"oBcs8GLX2ZFLXQy8y\",\"BrTDhPJcACL2bsrpJ\",\"GGdmhAvxXhqhhibJN\",\"cR3ibTMxLyEdDFCHY\",\"XrqNzJ2FRG8HnGiR6\",\"srJ34BaybkQh3qRkM\",\"sHjfbGQGLHE6JR6qu\",\"5kazQPq8ZdDsx6kjf\",\"9Gf6g4fuKc3uou9w2\",\"MJt2iMtyvJ7hBrcLP\",\"eMuCpJ2spXWkJjWNz\",\"YRAzEBJoLvSaiPtYx\",\"2GvWHhkjhR7dZBeuL\",\"PC3pLs36zNzpRDSuE\",\"hXsKo8S8KFXji99hJ\",\"MKT7khMBGXzA22ykf\",\"8BFSTCnoe2QggN64c\",\"rCrbqMiaGPgHYTNxu\",\"s5M5RvgqR9BhB9JoC\",\"J3upzLHuEwXH7Z2hx\",\"yjtdwc2AC4jA2RWtn\",\"Yp7uvStL97cC9fKkY\",\"fTNQmMvTZhhiGBCMe\",\"N2wnZXkhDH86mgjQ8\",\"i5iePG5GqhJJ8HEoB\",\"pPpmP7xeJzGgK362R\",\"utTuvGdmu2sBHWBhQ\",\"tAF9Gf6PiGogbZuWs\",\"5XiuAqicKD4hBdu63\",\"Fk9kLwoG4Brf4KsKf\",\"rgvAJFwfCeYoYnFTK\",\"mvJBakQ35CWAnbbEZ\",\"d8qtzoLB264iP8tdY\",\"9Ly8afdtofp8DXzrt\",\"H9KZi2cjt4FwH7qog\",\"AasGs8AeX9Lcb9xJn\",\"rrSC943cCKNG48sH4\",\"JiSpvq6C7azQEmENc\",\"3nied3n8KG8RSNixH\",\"LQxof8pGabGuWP7Gn\",\"FxbTzThBiTnRzfirA\",\"T6Rm8mREPMZSftzrC\",\"qzXAMXsHZGT8o5hTA\",\"4TmgHkn5vqyHK3sYC\",\"eHcgvkTGsH7ZziqBo\",\"qD2LrwaDrSdiybLKY\",\"HqmxnQJM66Y57twhn\",\"9pzFiFK3ANLjQfnr2\",\"jkbavR2ATFJcpmo8M\",\"w2HhxvSLmDhaGCAjE\",\"NGvCPuMiAP3xrRLfB\",\"Afnps7TJQuS9sipMb\",\"XbxHXmh5ZmRN2gw3K\",\"sbJcFfQjQ59Wfg4Cd\",\"gjiu8kLnHYxe4HoBN\",\"JS3hNM3XXkxPdg3yk\",\"H9EjsQ8jBfYtb9eWv\",\"9bQyb6rW7xfE4vgrR\",\"qAby4AWXmTNeusvg3\",\"j7ebNFtte6fSkMWjj\",\"eW9R2SCoYnY8HBAdL\",\"Jqk2uJZZxEv5wZFze\",\"vCeeMuYDbz3MB4vsk\",\"jBo3xAopr37GFzY8g\",\"d9LBRxvADNBB5QJMB\",\"fSQSHjW3e72MrWxbD\",\"9LrF5o2TK2iE8BZJh\",\"dYPkStFnLvAMsHSzZ\",\"aEm3Wvj2rFYRL8Lrb\",\"8PwfYqoDQFThzNtvf\",\"dzS6WBTMHyFEag6Fp\",\"TCvpT4EPb8qNssNB7\",\"mxX4rH5ELYkdZ2Mbw\",\"B4y8aoyXJtskYPFEL\",\"uK58g2EXxqxTaB2iA\",\"FiaTpm7ehfDv43wSG\",\"zC8WrPp5BC6c2exrW\",\"pwWtbXEjzuvrhEGwt\",\"wjc4iejpErBhxWwHo\",\"mw9464S5dnenqzvpm\",\"Qyfyyw6oC4EHAndzo\",\"yAouD3PxzED8a4gap\",\"FMyZPN6odEFtfuimF\",\"M2gFMJkocQSY6bsFR\",\"RJJm3dizCfNgoFtw7\",\"qB6KSTYC6H2TQEQY6\",\"5QN8R22z43SrwoHDz\",\"vAbK8sCfKyFC78HYg\",\"4Lwjr34ypKNQNQCar\",\"gbGzZz5Yq5hT357v8\",\"QN4FPwhiak7Pf8kn6\",\"Wi4H6ayKsNDWWQCG5\",\"2MjzJ7yxh3eT3xbng\",\"GgQqni8TkbqEBGcsy\",\"mdRQaGT98ycMt87S2\",\"cmH5k3s9REYMzDBMn\",\"NrRa4TS6uZR9xuXRt\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"iWT3S3piPyuoXMAnQ\",\"language\":\"cpp\"},{\"_id\":\"wA6A7XCN2Nkmrddvq\",\"language\":\"javascript\"},{\"_id\":\"ZXhgMQ5G2kwzC2MRg\",\"language\":\"php\"},{\"_id\":\"iK2F9DNAiTor2wFob\",\"language\":\"python3\"},{\"_id\":\"zz74RzzSpCn25N6Ti\",\"language\":\"ruby\"}]}}"]