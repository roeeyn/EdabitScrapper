a["{\"msg\":\"result\",\"id\":\"203\",\"result\":{\"_id\":\"YrNKDhmWPsm735J8L\",\"author\":\"Jason Rutz\",\"authorId\":\"sN9bLNiNtg8o7rzCP\",\"code\":\"def sort_word(word):\\n\\tword = word.split('')\\n\\tword = list(word.sort())\\n\\tfinal_word = ''\\n\\t\\n\\tfor char in word\\n\\t\\tfinal_word = final_word + char\\n\\t\\n\\treturn final_word\",\"difficulty\":0.5659574468085107,\"quality\":4.655172413793103,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"4o9q6vbDYm6gWnoYK\",\"instructions\":\"A student learning Python was trying to make a function that sorts all the letters of a word, but their code is broken, and they can't figure out why.\\n\\nSpot and fix the error(s) in the code to make the function work. As an added challenge for those who are more advanced, see if you can shrink (the fixed version of) the student's code down to only a single line.\\n\\n### Examples\\n```\\nsort_word(\\\"dcba\\\") ➞ \\\"abcd\\\"\\n\\nsort_word(\\\"Unpredictable\\\") ➞ \\\"Uabcdeeilnprt\\\"\\n# Capital letters should come first.\\n\\nsort_word(\\\"pneumonoultramicroscopicsilicovolcanoconiosis\\\") ➞ \\\"aacccccceiiiiiilllmmnnnnooooooooopprrsssstuuv\\\"\\n```\\n\\n### Notes\\nIf you're trying to get a function definition into a single line, try assigning a variable to a lambda function.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(sort_word(\\\"dcba\\\"), \\\"abcd\\\")\\nTest.assert_equals(sort_word(\\\"pneumonoultramicroscopicsilicovolcanoconiosis\\\"), \\\"aacccccceiiiiiilllmmnnnnooooooooopprrsssstuuv\\\")\\nTest.assert_equals(sort_word(\\\"Unpredictable\\\"), \\\"Uabcdeeilnprt\\\", \\\"Capital letters should come first!\\\")\\nTest.assert_equals(sort_word(\\\"a\\\"), \\\"a\\\")\\nTest.assert_equals(sort_word(\\\"ability\\\"), \\\"abiilty\\\")\\nTest.assert_equals(sort_word(\\\"able\\\"), \\\"abel\\\")\\nTest.assert_equals(sort_word(\\\"about\\\"), \\\"abotu\\\")\\nTest.assert_equals(sort_word(\\\"above\\\"), \\\"abeov\\\")\\nTest.assert_equals(sort_word(\\\"accept\\\"), \\\"accept\\\")\\nTest.assert_equals(sort_word(\\\"according\\\"), \\\"accdginor\\\")\\nTest.assert_equals(sort_word(\\\"account\\\"), \\\"accnotu\\\")\\nTest.assert_equals(sort_word(\\\"across\\\"), \\\"acorss\\\")\\nTest.assert_equals(sort_word(\\\"act\\\"), \\\"act\\\")\\nTest.assert_equals(sort_word(\\\"action\\\"), \\\"acinot\\\")\\nTest.assert_equals(sort_word(\\\"activity\\\"), \\\"aciittvy\\\")\\nTest.assert_equals(sort_word(\\\"actually\\\"), \\\"aaclltuy\\\")\\nTest.assert_equals(sort_word(\\\"add\\\"), \\\"add\\\")\\nTest.assert_equals(sort_word(\\\"address\\\"), \\\"adderss\\\")\\nTest.assert_equals(sort_word(\\\"administration\\\"), \\\"aadiiimnnorstt\\\")\\nTest.assert_equals(sort_word(\\\"admit\\\"), \\\"adimt\\\")\\nTest.assert_equals(sort_word(\\\"adult\\\"), \\\"adltu\\\")\\nTest.assert_equals(sort_word(\\\"affect\\\"), \\\"acefft\\\")\\nTest.assert_equals(sort_word(\\\"after\\\"), \\\"aefrt\\\")\\nTest.assert_equals(sort_word(\\\"again\\\"), \\\"aagin\\\")\\nTest.assert_equals(sort_word(\\\"against\\\"), \\\"aaginst\\\")\\nTest.assert_equals(sort_word(\\\"age\\\"), \\\"aeg\\\")\\nTest.assert_equals(sort_word(\\\"agency\\\"), \\\"acegny\\\")\\nTest.assert_equals(sort_word(\\\"agent\\\"), \\\"aegnt\\\")\\nTest.assert_equals(sort_word(\\\"ago\\\"), \\\"ago\\\")\\nTest.assert_equals(sort_word(\\\"agree\\\"), \\\"aeegr\\\")\\nTest.assert_equals(sort_word(\\\"agreement\\\"), \\\"aeeegmnrt\\\")\\nTest.assert_equals(sort_word(\\\"ahead\\\"), \\\"aadeh\\\")\\nTest.assert_equals(sort_word(\\\"air\\\"), \\\"air\\\")\\nTest.assert_equals(sort_word(\\\"all\\\"), \\\"all\\\")\\nTest.assert_equals(sort_word(\\\"allow\\\"), \\\"allow\\\")\\nTest.assert_equals(sort_word(\\\"almost\\\"), \\\"almost\\\")\\nTest.assert_equals(sort_word(\\\"alone\\\"), \\\"aelno\\\")\\nTest.assert_equals(sort_word(\\\"along\\\"), \\\"aglno\\\")\\nTest.assert_equals(sort_word(\\\"already\\\"), \\\"aadelry\\\")\\nTest.assert_equals(sort_word(\\\"also\\\"), \\\"alos\\\")\\nTest.assert_equals(sort_word(\\\"although\\\"), \\\"aghhlotu\\\")\\nTest.assert_equals(sort_word(\\\"always\\\"), \\\"aalswy\\\")\\nTest.assert_equals(sort_word(\\\"American\\\"), \\\"Aaceimnr\\\")\\nTest.assert_equals(sort_word(\\\"among\\\"), \\\"agmno\\\")\\nTest.assert_equals(sort_word(\\\"amount\\\"), \\\"amnotu\\\")\\nTest.assert_equals(sort_word(\\\"analysis\\\"), \\\"aailnssy\\\")\\nTest.assert_equals(sort_word(\\\"and\\\"), \\\"adn\\\")\\nTest.assert_equals(sort_word(\\\"animal\\\"), \\\"aailmn\\\")\\nTest.assert_equals(sort_word(\\\"another\\\"), \\\"aehnort\\\")\\nTest.assert_equals(sort_word(\\\"answer\\\"), \\\"aenrsw\\\")\\nTest.assert_equals(sort_word(\\\"any\\\"), \\\"any\\\")\\nTest.assert_equals(sort_word(\\\"anyone\\\"), \\\"aennoy\\\")\\nTest.assert_equals(sort_word(\\\"anything\\\"), \\\"aghinnty\\\")\\nTest.assert_equals(sort_word(\\\"appear\\\"), \\\"aaeppr\\\")\\nTest.assert_equals(sort_word(\\\"apply\\\"), \\\"alppy\\\")\\nTest.assert_equals(sort_word(\\\"approach\\\"), \\\"aachoppr\\\")\\nTest.assert_equals(sort_word(\\\"area\\\"), \\\"aaer\\\")\\nTest.assert_equals(sort_word(\\\"argue\\\"), \\\"aegru\\\")\\nTest.assert_equals(sort_word(\\\"arm\\\"), \\\"amr\\\")\\nTest.assert_equals(sort_word(\\\"around\\\"), \\\"adnoru\\\")\\nTest.assert_equals(sort_word(\\\"arrive\\\"), \\\"aeirrv\\\")\\nTest.assert_equals(sort_word(\\\"art\\\"), \\\"art\\\")\\nTest.assert_equals(sort_word(\\\"article\\\"), \\\"aceilrt\\\")\\nTest.assert_equals(sort_word(\\\"artist\\\"), \\\"airstt\\\")\\nTest.assert_equals(sort_word(\\\"as\\\"), \\\"as\\\")\\nTest.assert_equals(sort_word(\\\"ask\\\"), \\\"aks\\\")\\nTest.assert_equals(sort_word(\\\"assume\\\"), \\\"aemssu\\\")\\nTest.assert_equals(sort_word(\\\"at\\\"), \\\"at\\\")\\nTest.assert_equals(sort_word(\\\"attack\\\"), \\\"aacktt\\\")\\nTest.assert_equals(sort_word(\\\"attention\\\"), \\\"aeinnottt\\\")\\nTest.assert_equals(sort_word(\\\"attorney\\\"), \\\"aenortty\\\")\\nTest.assert_equals(sort_word(\\\"audience\\\"), \\\"acdeeinu\\\")\\nTest.assert_equals(sort_word(\\\"author\\\"), \\\"ahortu\\\")\\nTest.assert_equals(sort_word(\\\"authority\\\"), \\\"ahiorttuy\\\")\\nTest.assert_equals(sort_word(\\\"available\\\"), \\\"aaabeillv\\\")\\nTest.assert_equals(sort_word(\\\"avoid\\\"), \\\"adiov\\\")\\nTest.assert_equals(sort_word(\\\"away\\\"), \\\"aawy\\\")\\nTest.assert_equals(sort_word(\\\"baby\\\"), \\\"abby\\\")\\nTest.assert_equals(sort_word(\\\"back\\\"), \\\"abck\\\")\\nTest.assert_equals(sort_word(\\\"bad\\\"), \\\"abd\\\")\\nTest.assert_equals(sort_word(\\\"bag\\\"), \\\"abg\\\")\\nTest.assert_equals(sort_word(\\\"ball\\\"), \\\"abll\\\")\\nTest.assert_equals(sort_word(\\\"bank\\\"), \\\"abkn\\\")\\nTest.assert_equals(sort_word(\\\"bar\\\"), \\\"abr\\\")\\nTest.assert_equals(sort_word(\\\"base\\\"), \\\"abes\\\")\\nTest.assert_equals(sort_word(\\\"be\\\"), \\\"be\\\")\\nTest.assert_equals(sort_word(\\\"beat\\\"), \\\"abet\\\")\\nTest.assert_equals(sort_word(\\\"beautiful\\\"), \\\"abefiltuu\\\")\\nTest.assert_equals(sort_word(\\\"because\\\"), \\\"abceesu\\\")\\nTest.assert_equals(sort_word(\\\"become\\\"), \\\"bceemo\\\")\\nTest.assert_equals(sort_word(\\\"bed\\\"), \\\"bde\\\")\\nTest.assert_equals(sort_word(\\\"before\\\"), \\\"beefor\\\")\\nTest.assert_equals(sort_word(\\\"begin\\\"), \\\"begin\\\")\\nTest.assert_equals(sort_word(\\\"behavior\\\"), \\\"abehiorv\\\")\\nTest.assert_equals(sort_word(\\\"behind\\\"), \\\"bdehin\\\")\\nTest.assert_equals(sort_word(\\\"believe\\\"), \\\"beeeilv\\\")\\nTest.assert_equals(sort_word(\\\"benefit\\\"), \\\"beefint\\\")\\nTest.assert_equals(sort_word(\\\"best\\\"), \\\"best\\\")\\nTest.assert_equals(sort_word(\\\"better\\\"), \\\"beertt\\\")\\nTest.assert_equals(sort_word(\\\"between\\\"), \\\"beeentw\\\")\\nTest.assert_equals(sort_word(\\\"beyond\\\"), \\\"bdenoy\\\")\\nTest.assert_equals(sort_word(\\\"big\\\"), \\\"bgi\\\")\\nTest.assert_equals(sort_word(\\\"bill\\\"), \\\"bill\\\")\\nTest.assert_equals(sort_word(\\\"billion\\\"), \\\"biillno\\\")\\nTest.assert_equals(sort_word(\\\"bit\\\"), \\\"bit\\\")\\nTest.assert_equals(sort_word(\\\"black\\\"), \\\"abckl\\\")\\nTest.assert_equals(sort_word(\\\"blood\\\"), \\\"bdloo\\\")\\nTest.assert_equals(sort_word(\\\"blue\\\"), \\\"belu\\\")\\nTest.assert_equals(sort_word(\\\"board\\\"), \\\"abdor\\\")\\nTest.assert_equals(sort_word(\\\"body\\\"), \\\"bdoy\\\")\\nTest.assert_equals(sort_word(\\\"book\\\"), \\\"bkoo\\\")\\nTest.assert_equals(sort_word(\\\"born\\\"), \\\"bnor\\\")\\nTest.assert_equals(sort_word(\\\"both\\\"), \\\"bhot\\\")\\nTest.assert_equals(sort_word(\\\"box\\\"), \\\"box\\\")\\nTest.assert_equals(sort_word(\\\"boy\\\"), \\\"boy\\\")\\nTest.assert_equals(sort_word(\\\"break\\\"), \\\"abekr\\\")\\nTest.assert_equals(sort_word(\\\"bring\\\"), \\\"bginr\\\")\\nTest.assert_equals(sort_word(\\\"brother\\\"), \\\"behorrt\\\")\\nTest.assert_equals(sort_word(\\\"budget\\\"), \\\"bdegtu\\\")\\nTest.assert_equals(sort_word(\\\"build\\\"), \\\"bdilu\\\")\\nTest.assert_equals(sort_word(\\\"building\\\"), \\\"bdgiilnu\\\")\\nTest.assert_equals(sort_word(\\\"business\\\"), \\\"beinsssu\\\")\\nTest.assert_equals(sort_word(\\\"but\\\"), \\\"btu\\\")\\nTest.assert_equals(sort_word(\\\"buy\\\"), \\\"buy\\\")\\nTest.assert_equals(sort_word(\\\"by\\\"), \\\"by\\\")\\nTest.assert_equals(sort_word(\\\"call\\\"), \\\"acll\\\")\\nTest.assert_equals(sort_word(\\\"camera\\\"), \\\"aacemr\\\")\\nTest.assert_equals(sort_word(\\\"campaign\\\"), \\\"aacgimnp\\\")\\nTest.assert_equals(sort_word(\\\"can\\\"), \\\"acn\\\")\\nTest.assert_equals(sort_word(\\\"cancer\\\"), \\\"accenr\\\")\\nTest.assert_equals(sort_word(\\\"candidate\\\"), \\\"aacddeint\\\")\\nTest.assert_equals(sort_word(\\\"capital\\\"), \\\"aacilpt\\\")\\nTest.assert_equals(sort_word(\\\"car\\\"), \\\"acr\\\")\\nTest.assert_equals(sort_word(\\\"card\\\"), \\\"acdr\\\")\\nTest.assert_equals(sort_word(\\\"care\\\"), \\\"acer\\\")\\nTest.assert_equals(sort_word(\\\"career\\\"), \\\"aceerr\\\")\\nTest.assert_equals(sort_word(\\\"carry\\\"), \\\"acrry\\\")\\nTest.assert_equals(sort_word(\\\"case\\\"), \\\"aces\\\")\\nTest.assert_equals(sort_word(\\\"catch\\\"), \\\"accht\\\")\\nTest.assert_equals(sort_word(\\\"cause\\\"), \\\"acesu\\\")\\nTest.assert_equals(sort_word(\\\"cell\\\"), \\\"cell\\\")\\nTest.assert_equals(sort_word(\\\"center\\\"), \\\"ceenrt\\\")\\nTest.assert_equals(sort_word(\\\"central\\\"), \\\"acelnrt\\\")\\nTest.assert_equals(sort_word(\\\"century\\\"), \\\"cenrtuy\\\")\\nTest.assert_equals(sort_word(\\\"certain\\\"), \\\"aceinrt\\\")\\nTest.assert_equals(sort_word(\\\"certainly\\\"), \\\"aceilnrty\\\")\\nTest.assert_equals(sort_word(\\\"chair\\\"), \\\"achir\\\")\\nTest.assert_equals(sort_word(\\\"challenge\\\"), \\\"aceeghlln\\\")\\nTest.assert_equals(sort_word(\\\"chance\\\"), \\\"accehn\\\")\\nTest.assert_equals(sort_word(\\\"change\\\"), \\\"aceghn\\\")\\nTest.assert_equals(sort_word(\\\"character\\\"), \\\"aaccehrrt\\\")\\nTest.assert_equals(sort_word(\\\"charge\\\"), \\\"aceghr\\\")\\nTest.assert_equals(sort_word(\\\"check\\\"), \\\"ccehk\\\")\\nTest.assert_equals(sort_word(\\\"child\\\"), \\\"cdhil\\\")\\nTest.assert_equals(sort_word(\\\"choice\\\"), \\\"ccehio\\\")\\nTest.assert_equals(sort_word(\\\"choose\\\"), \\\"cehoos\\\")\\nTest.assert_equals(sort_word(\\\"church\\\"), \\\"cchhru\\\")\\nTest.assert_equals(sort_word(\\\"citizen\\\"), \\\"ceiintz\\\")\\nTest.assert_equals(sort_word(\\\"city\\\"), \\\"city\\\")\\nTest.assert_equals(sort_word(\\\"civil\\\"), \\\"ciilv\\\")\\nTest.assert_equals(sort_word(\\\"claim\\\"), \\\"acilm\\\")\\nTest.assert_equals(sort_word(\\\"class\\\"), \\\"aclss\\\")\\nTest.assert_equals(sort_word(\\\"clear\\\"), \\\"acelr\\\")\\nTest.assert_equals(sort_word(\\\"clearly\\\"), \\\"acellry\\\")\\nTest.assert_equals(sort_word(\\\"close\\\"), \\\"celos\\\")\\nTest.assert_equals(sort_word(\\\"coach\\\"), \\\"accho\\\")\\nTest.assert_equals(sort_word(\\\"cold\\\"), \\\"cdlo\\\")\\nTest.assert_equals(sort_word(\\\"collection\\\"), \\\"cceillnoot\\\")\\nTest.assert_equals(sort_word(\\\"college\\\"), \\\"ceegllo\\\")\\nTest.assert_equals(sort_word(\\\"color\\\"), \\\"cloor\\\")\\nTest.assert_equals(sort_word(\\\"come\\\"), \\\"cemo\\\")\\nTest.assert_equals(sort_word(\\\"commercial\\\"), \\\"acceilmmor\\\")\\nTest.assert_equals(sort_word(\\\"common\\\"), \\\"cmmnoo\\\")\\nTest.assert_equals(sort_word(\\\"community\\\"), \\\"cimmnotuy\\\")\\nTest.assert_equals(sort_word(\\\"company\\\"), \\\"acmnopy\\\")\\nTest.assert_equals(sort_word(\\\"compare\\\"), \\\"acemopr\\\")\\nTest.assert_equals(sort_word(\\\"computer\\\"), \\\"cemoprtu\\\")\\nTest.assert_equals(sort_word(\\\"concern\\\"), \\\"ccennor\\\")\\nTest.assert_equals(sort_word(\\\"condition\\\"), \\\"cdiinnoot\\\")\\nTest.assert_equals(sort_word(\\\"conference\\\"), \\\"cceeefnnor\\\")\\nTest.assert_equals(sort_word(\\\"Congress\\\"), \\\"Cegnorss\\\")\\nTest.assert_equals(sort_word(\\\"consider\\\"), \\\"cdeinors\\\")\\nTest.assert_equals(sort_word(\\\"consumer\\\"), \\\"cemnorsu\\\")\\nTest.assert_equals(sort_word(\\\"contain\\\"), \\\"acinnot\\\")\\nTest.assert_equals(sort_word(\\\"continue\\\"), \\\"ceinnotu\\\")\\nTest.assert_equals(sort_word(\\\"control\\\"), \\\"clnoort\\\")\\nTest.assert_equals(sort_word(\\\"cost\\\"), \\\"cost\\\")\\nTest.assert_equals(sort_word(\\\"could\\\"), \\\"cdlou\\\")\\nTest.assert_equals(sort_word(\\\"country\\\"), \\\"cnortuy\\\")\\nTest.assert_equals(sort_word(\\\"couple\\\"), \\\"celopu\\\")\\nTest.assert_equals(sort_word(\\\"course\\\"), \\\"ceorsu\\\")\\nTest.assert_equals(sort_word(\\\"court\\\"), \\\"cortu\\\")\\nTest.assert_equals(sort_word(\\\"cover\\\"), \\\"ceorv\\\")\\nTest.assert_equals(sort_word(\\\"create\\\"), \\\"aceert\\\")\\nTest.assert_equals(sort_word(\\\"crime\\\"), \\\"ceimr\\\")\\nTest.assert_equals(sort_word(\\\"cultural\\\"), \\\"acllrtuu\\\")\\nTest.assert_equals(sort_word(\\\"culture\\\"), \\\"celrtuu\\\")\\nTest.assert_equals(sort_word(\\\"cup\\\"), \\\"cpu\\\")\\nTest.assert_equals(sort_word(\\\"current\\\"), \\\"cenrrtu\\\")\\nTest.assert_equals(sort_word(\\\"customer\\\"), \\\"cemorstu\\\")\\nTest.assert_equals(sort_word(\\\"cut\\\"), \\\"ctu\\\")\\nTest.assert_equals(sort_word(\\\"dark\\\"), \\\"adkr\\\")\\nTest.assert_equals(sort_word(\\\"data\\\"), \\\"aadt\\\")\\nTest.assert_equals(sort_word(\\\"daughter\\\"), \\\"adeghrtu\\\")\\nTest.assert_equals(sort_word(\\\"day\\\"), \\\"ady\\\")\\nTest.assert_equals(sort_word(\\\"dead\\\"), \\\"adde\\\")\\nTest.assert_equals(sort_word(\\\"deal\\\"), \\\"adel\\\")\\nTest.assert_equals(sort_word(\\\"death\\\"), \\\"adeht\\\")\\nTest.assert_equals(sort_word(\\\"debate\\\"), \\\"abdeet\\\")\\nTest.assert_equals(sort_word(\\\"decade\\\"), \\\"acddee\\\")\\nTest.assert_equals(sort_word(\\\"decide\\\"), \\\"cddeei\\\")\\nTest.assert_equals(sort_word(\\\"decision\\\"), \\\"cdeiinos\\\")\\nTest.assert_equals(sort_word(\\\"deep\\\"), \\\"deep\\\")\\nTest.assert_equals(sort_word(\\\"defense\\\"), \\\"deeefns\\\")\\nTest.assert_equals(sort_word(\\\"degree\\\"), \\\"deeegr\\\")\\nTest.assert_equals(sort_word(\\\"Democrat\\\"), \\\"Dacemort\\\")\\nTest.assert_equals(sort_word(\\\"democratic\\\"), \\\"accdeimort\\\")\\nTest.assert_equals(sort_word(\\\"describe\\\"), \\\"bcdeeirs\\\")\\nTest.assert_equals(sort_word(\\\"design\\\"), \\\"degins\\\")\\nTest.assert_equals(sort_word(\\\"despite\\\"), \\\"deeipst\\\")\\nTest.assert_equals(sort_word(\\\"detail\\\"), \\\"adeilt\\\")\\nTest.assert_equals(sort_word(\\\"determine\\\"), \\\"deeeimnrt\\\")\\nTest.assert_equals(sort_word(\\\"develop\\\"), \\\"deelopv\\\")\\nTest.assert_equals(sort_word(\\\"development\\\"), \\\"deeelmnoptv\\\")\\nTest.assert_equals(sort_word(\\\"die\\\"), \\\"dei\\\")\\nTest.assert_equals(sort_word(\\\"difference\\\"), \\\"cdeeeffinr\\\")\\nTest.assert_equals(sort_word(\\\"different\\\"), \\\"deeffinrt\\\")\\nTest.assert_equals(sort_word(\\\"difficult\\\"), \\\"cdffiiltu\\\")\\nTest.assert_equals(sort_word(\\\"dinner\\\"), \\\"deinnr\\\")\\nTest.assert_equals(sort_word(\\\"direction\\\"), \\\"cdeiinort\\\")\\nTest.assert_equals(sort_word(\\\"director\\\"), \\\"cdeiorrt\\\")\\nTest.assert_equals(sort_word(\\\"discover\\\"), \\\"cdeiorsv\\\")\\nTest.assert_equals(sort_word(\\\"discuss\\\"), \\\"cdisssu\\\")\\nTest.assert_equals(sort_word(\\\"discussion\\\"), \\\"cdiinosssu\\\")\\nTest.assert_equals(sort_word(\\\"disease\\\"), \\\"adeeiss\\\")\\nTest.assert_equals(sort_word(\\\"do\\\"), \\\"do\\\")\\nTest.assert_equals(sort_word(\\\"doctor\\\"), \\\"cdoort\\\")\\nTest.assert_equals(sort_word(\\\"dog\\\"), \\\"dgo\\\")\\nTest.assert_equals(sort_word(\\\"door\\\"), \\\"door\\\")\\nTest.assert_equals(sort_word(\\\"down\\\"), \\\"dnow\\\")\\nTest.assert_equals(sort_word(\\\"draw\\\"), \\\"adrw\\\")\\nTest.assert_equals(sort_word(\\\"dream\\\"), \\\"ademr\\\")\\nTest.assert_equals(sort_word(\\\"drive\\\"), \\\"deirv\\\")\\nTest.assert_equals(sort_word(\\\"drop\\\"), \\\"dopr\\\")\\nTest.assert_equals(sort_word(\\\"drug\\\"), \\\"dgru\\\")\\nTest.assert_equals(sort_word(\\\"during\\\"), \\\"dginru\\\")\\nTest.assert_equals(sort_word(\\\"each\\\"), \\\"aceh\\\")\\nTest.assert_equals(sort_word(\\\"early\\\"), \\\"aelry\\\")\\nTest.assert_equals(sort_word(\\\"east\\\"), \\\"aest\\\")\\nTest.assert_equals(sort_word(\\\"easy\\\"), \\\"aesy\\\")\\nTest.assert_equals(sort_word(\\\"eat\\\"), \\\"aet\\\")\\nTest.assert_equals(sort_word(\\\"economic\\\"), \\\"cceimnoo\\\")\\nTest.assert_equals(sort_word(\\\"economy\\\"), \\\"cemnooy\\\")\\nTest.assert_equals(sort_word(\\\"edge\\\"), \\\"deeg\\\")\\nTest.assert_equals(sort_word(\\\"education\\\"), \\\"acdeinotu\\\")\\nTest.assert_equals(sort_word(\\\"effect\\\"), \\\"ceefft\\\")\\nTest.assert_equals(sort_word(\\\"effort\\\"), \\\"effort\\\")\\nTest.assert_equals(sort_word(\\\"eight\\\"), \\\"eghit\\\")\\nTest.assert_equals(sort_word(\\\"either\\\"), \\\"eehirt\\\")\\nTest.assert_equals(sort_word(\\\"election\\\"), \\\"ceeilnot\\\")\\nTest.assert_equals(sort_word(\\\"else\\\"), \\\"eels\\\")\\nTest.assert_equals(sort_word(\\\"employee\\\"), \\\"eeelmopy\\\")\\nTest.assert_equals(sort_word(\\\"end\\\"), \\\"den\\\")\\nTest.assert_equals(sort_word(\\\"energy\\\"), \\\"eegnry\\\")\\nTest.assert_equals(sort_word(\\\"enjoy\\\"), \\\"ejnoy\\\")\\nTest.assert_equals(sort_word(\\\"enough\\\"), \\\"eghnou\\\")\\nTest.assert_equals(sort_word(\\\"enter\\\"), \\\"eenrt\\\")\\nTest.assert_equals(sort_word(\\\"entire\\\"), \\\"eeinrt\\\")\\nTest.assert_equals(sort_word(\\\"environment\\\"), \\\"eeimnnnortv\\\")\\nTest.assert_equals(sort_word(\\\"environmental\\\"), \\\"aeeilmnnnortv\\\")\\nTest.assert_equals(sort_word(\\\"especially\\\"), \\\"aceeillpsy\\\")\\nTest.assert_equals(sort_word(\\\"establish\\\"), \\\"abehilsst\\\")\\nTest.assert_equals(sort_word(\\\"even\\\"), \\\"eenv\\\")\\nTest.assert_equals(sort_word(\\\"evening\\\"), \\\"eeginnv\\\")\\nTest.assert_equals(sort_word(\\\"event\\\"), \\\"eentv\\\")\\nTest.assert_equals(sort_word(\\\"ever\\\"), \\\"eerv\\\")\\nTest.assert_equals(sort_word(\\\"every\\\"), \\\"eervy\\\")\\nTest.assert_equals(sort_word(\\\"everybody\\\"), \\\"bdeeorvyy\\\")\\nTest.assert_equals(sort_word(\\\"everyone\\\"), \\\"eeenorvy\\\")\\nTest.assert_equals(sort_word(\\\"everything\\\"), \\\"eeghinrtvy\\\")\\nTest.assert_equals(sort_word(\\\"evidence\\\"), \\\"cdeeeinv\\\")\\nTest.assert_equals(sort_word(\\\"exactly\\\"), \\\"aceltxy\\\")\\nTest.assert_equals(sort_word(\\\"example\\\"), \\\"aeelmpx\\\")\\nTest.assert_equals(sort_word(\\\"executive\\\"), \\\"ceeeituvx\\\")\\nTest.assert_equals(sort_word(\\\"exist\\\"), \\\"eistx\\\")\\nTest.assert_equals(sort_word(\\\"expect\\\"), \\\"ceeptx\\\")\\nTest.assert_equals(sort_word(\\\"experience\\\"), \\\"ceeeeinprx\\\")\\nTest.assert_equals(sort_word(\\\"expert\\\"), \\\"eeprtx\\\")\\nTest.assert_equals(sort_word(\\\"explain\\\"), \\\"aeilnpx\\\")\\nTest.assert_equals(sort_word(\\\"eye\\\"), \\\"eey\\\")\\nTest.assert_equals(sort_word(\\\"face\\\"), \\\"acef\\\")\\nTest.assert_equals(sort_word(\\\"fact\\\"), \\\"acft\\\")\\nTest.assert_equals(sort_word(\\\"factor\\\"), \\\"acfort\\\")\\nTest.assert_equals(sort_word(\\\"fail\\\"), \\\"afil\\\")\\nTest.assert_equals(sort_word(\\\"fall\\\"), \\\"afll\\\")\\nTest.assert_equals(sort_word(\\\"family\\\"), \\\"afilmy\\\")\\nTest.assert_equals(sort_word(\\\"far\\\"), \\\"afr\\\")\\nTest.assert_equals(sort_word(\\\"fast\\\"), \\\"afst\\\")\\nTest.assert_equals(sort_word(\\\"father\\\"), \\\"aefhrt\\\")\\nTest.assert_equals(sort_word(\\\"fear\\\"), \\\"aefr\\\")\\nTest.assert_equals(sort_word(\\\"federal\\\"), \\\"adeeflr\\\")\\nTest.assert_equals(sort_word(\\\"feel\\\"), \\\"eefl\\\")\\nTest.assert_equals(sort_word(\\\"feeling\\\"), \\\"eefgiln\\\")\\nTest.assert_equals(sort_word(\\\"few\\\"), \\\"efw\\\")\\nTest.assert_equals(sort_word(\\\"field\\\"), \\\"defil\\\")\\nTest.assert_equals(sort_word(\\\"fight\\\"), \\\"fghit\\\")\\nTest.assert_equals(sort_word(\\\"figure\\\"), \\\"efgiru\\\")\\nTest.assert_equals(sort_word(\\\"fill\\\"), \\\"fill\\\")\\nTest.assert_equals(sort_word(\\\"film\\\"), \\\"film\\\")\\nTest.assert_equals(sort_word(\\\"final\\\"), \\\"afiln\\\")\\nTest.assert_equals(sort_word(\\\"finally\\\"), \\\"afillny\\\")\\nTest.assert_equals(sort_word(\\\"financial\\\"), \\\"aacfiilnn\\\")\\nTest.assert_equals(sort_word(\\\"find\\\"), \\\"dfin\\\")\\nTest.assert_equals(sort_word(\\\"fine\\\"), \\\"efin\\\")\\nTest.assert_equals(sort_word(\\\"finger\\\"), \\\"efginr\\\")\\nTest.assert_equals(sort_word(\\\"finish\\\"), \\\"fhiins\\\")\\nTest.assert_equals(sort_word(\\\"fire\\\"), \\\"efir\\\")\\nTest.assert_equals(sort_word(\\\"firm\\\"), \\\"fimr\\\")\\nTest.assert_equals(sort_word(\\\"first\\\"), \\\"first\\\")\\nTest.assert_equals(sort_word(\\\"fish\\\"), \\\"fhis\\\")\\nTest.assert_equals(sort_word(\\\"five\\\"), \\\"efiv\\\")\\nTest.assert_equals(sort_word(\\\"floor\\\"), \\\"floor\\\")\\nTest.assert_equals(sort_word(\\\"fly\\\"), \\\"fly\\\")\\nTest.assert_equals(sort_word(\\\"focus\\\"), \\\"cfosu\\\")\\nTest.assert_equals(sort_word(\\\"follow\\\"), \\\"flloow\\\")\\nTest.assert_equals(sort_word(\\\"food\\\"), \\\"dfoo\\\")\\nTest.assert_equals(sort_word(\\\"foot\\\"), \\\"foot\\\")\\nTest.assert_equals(sort_word(\\\"for\\\"), \\\"for\\\")\\nTest.assert_equals(sort_word(\\\"force\\\"), \\\"cefor\\\")\\nTest.assert_equals(sort_word(\\\"foreign\\\"), \\\"efginor\\\")\\nTest.assert_equals(sort_word(\\\"forget\\\"), \\\"efgort\\\")\\nTest.assert_equals(sort_word(\\\"form\\\"), \\\"fmor\\\")\\nTest.assert_equals(sort_word(\\\"former\\\"), \\\"efmorr\\\")\\nTest.assert_equals(sort_word(\\\"forward\\\"), \\\"adforrw\\\")\\nTest.assert_equals(sort_word(\\\"four\\\"), \\\"foru\\\")\\nTest.assert_equals(sort_word(\\\"free\\\"), \\\"eefr\\\")\\nTest.assert_equals(sort_word(\\\"friend\\\"), \\\"definr\\\")\\nTest.assert_equals(sort_word(\\\"from\\\"), \\\"fmor\\\")\\nTest.assert_equals(sort_word(\\\"front\\\"), \\\"fnort\\\")\\nTest.assert_equals(sort_word(\\\"full\\\"), \\\"fllu\\\")\\nTest.assert_equals(sort_word(\\\"fund\\\"), \\\"dfnu\\\")\\nTest.assert_equals(sort_word(\\\"future\\\"), \\\"efrtuu\\\")\\nTest.assert_equals(sort_word(\\\"game\\\"), \\\"aegm\\\")\\nTest.assert_equals(sort_word(\\\"garden\\\"), \\\"adegnr\\\")\\nTest.assert_equals(sort_word(\\\"gas\\\"), \\\"ags\\\")\\nTest.assert_equals(sort_word(\\\"general\\\"), \\\"aeeglnr\\\")\\nTest.assert_equals(sort_word(\\\"generation\\\"), \\\"aeeginnort\\\")\\nTest.assert_equals(sort_word(\\\"get\\\"), \\\"egt\\\")\\nTest.assert_equals(sort_word(\\\"girl\\\"), \\\"gilr\\\")\\nTest.assert_equals(sort_word(\\\"give\\\"), \\\"egiv\\\")\\nTest.assert_equals(sort_word(\\\"glass\\\"), \\\"aglss\\\")\\nTest.assert_equals(sort_word(\\\"go\\\"), \\\"go\\\")\\nTest.assert_equals(sort_word(\\\"goal\\\"), \\\"aglo\\\")\\nTest.assert_equals(sort_word(\\\"good\\\"), \\\"dgoo\\\")\\nTest.assert_equals(sort_word(\\\"government\\\"), \\\"eegmnnortv\\\")\\nTest.assert_equals(sort_word(\\\"great\\\"), \\\"aegrt\\\")\\nTest.assert_equals(sort_word(\\\"green\\\"), \\\"eegnr\\\")\\nTest.assert_equals(sort_word(\\\"ground\\\"), \\\"dgnoru\\\")\\nTest.assert_equals(sort_word(\\\"group\\\"), \\\"gopru\\\")\\nTest.assert_equals(sort_word(\\\"grow\\\"), \\\"gorw\\\")\\nTest.assert_equals(sort_word(\\\"growth\\\"), \\\"ghortw\\\")\\nTest.assert_equals(sort_word(\\\"guess\\\"), \\\"egssu\\\")\\nTest.assert_equals(sort_word(\\\"gun\\\"), \\\"gnu\\\")\\nTest.assert_equals(sort_word(\\\"guy\\\"), \\\"guy\\\")\\nTest.assert_equals(sort_word(\\\"hair\\\"), \\\"ahir\\\")\\nTest.assert_equals(sort_word(\\\"half\\\"), \\\"afhl\\\")\\nTest.assert_equals(sort_word(\\\"hand\\\"), \\\"adhn\\\")\\nTest.assert_equals(sort_word(\\\"hang\\\"), \\\"aghn\\\")\\nTest.assert_equals(sort_word(\\\"happen\\\"), \\\"aehnpp\\\")\\nTest.assert_equals(sort_word(\\\"happy\\\"), \\\"ahppy\\\")\\nTest.assert_equals(sort_word(\\\"hard\\\"), \\\"adhr\\\")\\nTest.assert_equals(sort_word(\\\"have\\\"), \\\"aehv\\\")\\nTest.assert_equals(sort_word(\\\"he\\\"), \\\"eh\\\")\\nTest.assert_equals(sort_word(\\\"head\\\"), \\\"adeh\\\")\\nTest.assert_equals(sort_word(\\\"health\\\"), \\\"aehhlt\\\")\\nTest.assert_equals(sort_word(\\\"hear\\\"), \\\"aehr\\\")\\nTest.assert_equals(sort_word(\\\"heart\\\"), \\\"aehrt\\\")\\nTest.assert_equals(sort_word(\\\"heat\\\"), \\\"aeht\\\")\\nTest.assert_equals(sort_word(\\\"heavy\\\"), \\\"aehvy\\\")\\nTest.assert_equals(sort_word(\\\"help\\\"), \\\"ehlp\\\")\\nTest.assert_equals(sort_word(\\\"her\\\"), \\\"ehr\\\")\\nTest.assert_equals(sort_word(\\\"here\\\"), \\\"eehr\\\")\\nTest.assert_equals(sort_word(\\\"herself\\\"), \\\"eefhlrs\\\")\\nTest.assert_equals(sort_word(\\\"high\\\"), \\\"ghhi\\\")\\nTest.assert_equals(sort_word(\\\"him\\\"), \\\"him\\\")\\nTest.assert_equals(sort_word(\\\"himself\\\"), \\\"efhilms\\\")\\nTest.assert_equals(sort_word(\\\"his\\\"), \\\"his\\\")\\nTest.assert_equals(sort_word(\\\"history\\\"), \\\"hiorsty\\\")\\nTest.assert_equals(sort_word(\\\"hit\\\"), \\\"hit\\\")\\nTest.assert_equals(sort_word(\\\"hold\\\"), \\\"dhlo\\\")\\nTest.assert_equals(sort_word(\\\"home\\\"), \\\"ehmo\\\")\\nTest.assert_equals(sort_word(\\\"hope\\\"), \\\"ehop\\\")\\nTest.assert_equals(sort_word(\\\"hospital\\\"), \\\"ahilopst\\\")\\nTest.assert_equals(sort_word(\\\"hot\\\"), \\\"hot\\\")\\nTest.assert_equals(sort_word(\\\"hotel\\\"), \\\"ehlot\\\")\\nTest.assert_equals(sort_word(\\\"hour\\\"), \\\"horu\\\")\\nTest.assert_equals(sort_word(\\\"house\\\"), \\\"ehosu\\\")\\nTest.assert_equals(sort_word(\\\"how\\\"), \\\"how\\\")\\nTest.assert_equals(sort_word(\\\"however\\\"), \\\"eehorvw\\\")\\nTest.assert_equals(sort_word(\\\"huge\\\"), \\\"eghu\\\")\\nTest.assert_equals(sort_word(\\\"human\\\"), \\\"ahmnu\\\")\\nTest.assert_equals(sort_word(\\\"hundred\\\"), \\\"ddehnru\\\")\\nTest.assert_equals(sort_word(\\\"husband\\\"), \\\"abdhnsu\\\")\\nTest.assert_equals(sort_word(\\\"I\\\"), \\\"I\\\")\\nTest.assert_equals(sort_word(\\\"idea\\\"), \\\"adei\\\")\\nTest.assert_equals(sort_word(\\\"identify\\\"), \\\"defiinty\\\")\\nTest.assert_equals(sort_word(\\\"if\\\"), \\\"fi\\\")\\nTest.assert_equals(sort_word(\\\"image\\\"), \\\"aegim\\\")\\nTest.assert_equals(sort_word(\\\"imagine\\\"), \\\"aegiimn\\\")\\nTest.assert_equals(sort_word(\\\"impact\\\"), \\\"acimpt\\\")\\nTest.assert_equals(sort_word(\\\"important\\\"), \\\"aimnoprtt\\\")\\nTest.assert_equals(sort_word(\\\"improve\\\"), \\\"eimoprv\\\")\\nTest.assert_equals(sort_word(\\\"in\\\"), \\\"in\\\")\\nTest.assert_equals(sort_word(\\\"include\\\"), \\\"cdeilnu\\\")\\nTest.assert_equals(sort_word(\\\"including\\\"), \\\"cdgiilnnu\\\")\\nTest.assert_equals(sort_word(\\\"increase\\\"), \\\"aceeinrs\\\")\\nTest.assert_equals(sort_word(\\\"indeed\\\"), \\\"ddeein\\\")\\nTest.assert_equals(sort_word(\\\"indicate\\\"), \\\"acdeiint\\\")\\nTest.assert_equals(sort_word(\\\"individual\\\"), \\\"addiiilnuv\\\")\\nTest.assert_equals(sort_word(\\\"industry\\\"), \\\"dinrstuy\\\")\\nTest.assert_equals(sort_word(\\\"information\\\"), \\\"afiimnnoort\\\")\\nTest.assert_equals(sort_word(\\\"inside\\\"), \\\"deiins\\\")\\nTest.assert_equals(sort_word(\\\"instead\\\"), \\\"adeinst\\\")\\nTest.assert_equals(sort_word(\\\"institution\\\"), \\\"iiinnostttu\\\")\\nTest.assert_equals(sort_word(\\\"interest\\\"), \\\"eeinrstt\\\")\\nTest.assert_equals(sort_word(\\\"interesting\\\"), \\\"eegiinnrstt\\\")\\nTest.assert_equals(sort_word(\\\"international\\\"), \\\"aaeiilnnnortt\\\")\\nTest.assert_equals(sort_word(\\\"interview\\\"), \\\"eeiinrtvw\\\")\\nTest.assert_equals(sort_word(\\\"into\\\"), \\\"inot\\\")\\nTest.assert_equals(sort_word(\\\"investment\\\"), \\\"eeimnnsttv\\\")\\nTest.assert_equals(sort_word(\\\"involve\\\"), \\\"eilnovv\\\")\\nTest.assert_equals(sort_word(\\\"issue\\\"), \\\"eissu\\\")\\nTest.assert_equals(sort_word(\\\"it\\\"), \\\"it\\\")\\nTest.assert_equals(sort_word(\\\"item\\\"), \\\"eimt\\\")\\nTest.assert_equals(sort_word(\\\"its\\\"), \\\"ist\\\")\\nTest.assert_equals(sort_word(\\\"itself\\\"), \\\"efilst\\\")\\nTest.assert_equals(sort_word(\\\"job\\\"), \\\"bjo\\\")\\nTest.assert_equals(sort_word(\\\"join\\\"), \\\"ijno\\\")\\nTest.assert_equals(sort_word(\\\"just\\\"), \\\"jstu\\\")\\nTest.assert_equals(sort_word(\\\"keep\\\"), \\\"eekp\\\")\\nTest.assert_equals(sort_word(\\\"key\\\"), \\\"eky\\\")\\nTest.assert_equals(sort_word(\\\"kid\\\"), \\\"dik\\\")\\nTest.assert_equals(sort_word(\\\"kill\\\"), \\\"ikll\\\")\\nTest.assert_equals(sort_word(\\\"kind\\\"), \\\"dikn\\\")\\nTest.assert_equals(sort_word(\\\"kitchen\\\"), \\\"cehiknt\\\")\\nTest.assert_equals(sort_word(\\\"know\\\"), \\\"know\\\")\\nTest.assert_equals(sort_word(\\\"knowledge\\\"), \\\"deegklnow\\\")\\nTest.assert_equals(sort_word(\\\"land\\\"), \\\"adln\\\")\\nTest.assert_equals(sort_word(\\\"language\\\"), \\\"aaegglnu\\\")\\nTest.assert_equals(sort_word(\\\"large\\\"), \\\"aeglr\\\")\\nTest.assert_equals(sort_word(\\\"last\\\"), \\\"alst\\\")\\nTest.assert_equals(sort_word(\\\"late\\\"), \\\"aelt\\\")\\nTest.assert_equals(sort_word(\\\"later\\\"), \\\"aelrt\\\")\\nTest.assert_equals(sort_word(\\\"laugh\\\"), \\\"aghlu\\\")\\nTest.assert_equals(sort_word(\\\"law\\\"), \\\"alw\\\")\\nTest.assert_equals(sort_word(\\\"lawyer\\\"), \\\"aelrwy\\\")\\nTest.assert_equals(sort_word(\\\"lay\\\"), \\\"aly\\\")\\nTest.assert_equals(sort_word(\\\"lead\\\"), \\\"adel\\\")\\nTest.assert_equals(sort_word(\\\"leader\\\"), \\\"adeelr\\\")\\nTest.assert_equals(sort_word(\\\"learn\\\"), \\\"aelnr\\\")\\nTest.assert_equals(sort_word(\\\"least\\\"), \\\"aelst\\\")\\nTest.assert_equals(sort_word(\\\"leave\\\"), \\\"aeelv\\\")\\nTest.assert_equals(sort_word(\\\"left\\\"), \\\"eflt\\\")\\nTest.assert_equals(sort_word(\\\"leg\\\"), \\\"egl\\\")\\nTest.assert_equals(sort_word(\\\"legal\\\"), \\\"aegll\\\")\\nTest.assert_equals(sort_word(\\\"less\\\"), \\\"elss\\\")\\nTest.assert_equals(sort_word(\\\"let\\\"), \\\"elt\\\")\\nTest.assert_equals(sort_word(\\\"letter\\\"), \\\"eelrtt\\\")\\nTest.assert_equals(sort_word(\\\"level\\\"), \\\"eellv\\\")\\nTest.assert_equals(sort_word(\\\"lie\\\"), \\\"eil\\\")\\nTest.assert_equals(sort_word(\\\"life\\\"), \\\"efil\\\")\\nTest.assert_equals(sort_word(\\\"light\\\"), \\\"ghilt\\\")\\nTest.assert_equals(sort_word(\\\"like\\\"), \\\"eikl\\\")\\nTest.assert_equals(sort_word(\\\"likely\\\"), \\\"eiklly\\\")\\nTest.assert_equals(sort_word(\\\"line\\\"), \\\"eiln\\\")\\nTest.assert_equals(sort_word(\\\"list\\\"), \\\"ilst\\\")\\nTest.assert_equals(sort_word(\\\"listen\\\"), \\\"eilnst\\\")\\nTest.assert_equals(sort_word(\\\"little\\\"), \\\"eilltt\\\")\\nTest.assert_equals(sort_word(\\\"live\\\"), \\\"eilv\\\")\\nTest.assert_equals(sort_word(\\\"local\\\"), \\\"acllo\\\")\\nTest.assert_equals(sort_word(\\\"long\\\"), \\\"glno\\\")\\nTest.assert_equals(sort_word(\\\"look\\\"), \\\"kloo\\\")\\nTest.assert_equals(sort_word(\\\"lose\\\"), \\\"elos\\\")\\nTest.assert_equals(sort_word(\\\"loss\\\"), \\\"loss\\\")\\nTest.assert_equals(sort_word(\\\"lot\\\"), \\\"lot\\\")\\nTest.assert_equals(sort_word(\\\"love\\\"), \\\"elov\\\")\\nTest.assert_equals(sort_word(\\\"low\\\"), \\\"low\\\")\\nTest.assert_equals(sort_word(\\\"machine\\\"), \\\"acehimn\\\")\\nTest.assert_equals(sort_word(\\\"magazine\\\"), \\\"aaegimnz\\\")\\nTest.assert_equals(sort_word(\\\"main\\\"), \\\"aimn\\\")\\nTest.assert_equals(sort_word(\\\"maintain\\\"), \\\"aaiimnnt\\\")\\nTest.assert_equals(sort_word(\\\"major\\\"), \\\"ajmor\\\")\\nTest.assert_equals(sort_word(\\\"majority\\\"), \\\"aijmorty\\\")\\nTest.assert_equals(sort_word(\\\"make\\\"), \\\"aekm\\\")\\nTest.assert_equals(sort_word(\\\"man\\\"), \\\"amn\\\")\\nTest.assert_equals(sort_word(\\\"manage\\\"), \\\"aaegmn\\\")\\nTest.assert_equals(sort_word(\\\"management\\\"), \\\"aaeegmmnnt\\\")\\nTest.assert_equals(sort_word(\\\"manager\\\"), \\\"aaegmnr\\\")\\nTest.assert_equals(sort_word(\\\"many\\\"), \\\"amny\\\")\\nTest.assert_equals(sort_word(\\\"market\\\"), \\\"aekmrt\\\")\\nTest.assert_equals(sort_word(\\\"marriage\\\"), \\\"aaegimrr\\\")\\nTest.assert_equals(sort_word(\\\"material\\\"), \\\"aaeilmrt\\\")\\nTest.assert_equals(sort_word(\\\"matter\\\"), \\\"aemrtt\\\")\\nTest.assert_equals(sort_word(\\\"may\\\"), \\\"amy\\\")\\nTest.assert_equals(sort_word(\\\"maybe\\\"), \\\"abemy\\\")\\nTest.assert_equals(sort_word(\\\"me\\\"), \\\"em\\\")\\nTest.assert_equals(sort_word(\\\"mean\\\"), \\\"aemn\\\")\\nTest.assert_equals(sort_word(\\\"measure\\\"), \\\"aeemrsu\\\")\\nTest.assert_equals(sort_word(\\\"media\\\"), \\\"adeim\\\")\\nTest.assert_equals(sort_word(\\\"medical\\\"), \\\"acdeilm\\\")\\nTest.assert_equals(sort_word(\\\"meet\\\"), \\\"eemt\\\")\\nTest.assert_equals(sort_word(\\\"meeting\\\"), \\\"eegimnt\\\")\\nTest.assert_equals(sort_word(\\\"member\\\"), \\\"beemmr\\\")\\nTest.assert_equals(sort_word(\\\"memory\\\"), \\\"emmory\\\")\\nTest.assert_equals(sort_word(\\\"mention\\\"), \\\"eimnnot\\\")\\nTest.assert_equals(sort_word(\\\"message\\\"), \\\"aeegmss\\\")\\nTest.assert_equals(sort_word(\\\"method\\\"), \\\"dehmot\\\")\\nTest.assert_equals(sort_word(\\\"middle\\\"), \\\"ddeilm\\\")\\nTest.assert_equals(sort_word(\\\"might\\\"), \\\"ghimt\\\")\\nTest.assert_equals(sort_word(\\\"military\\\"), \\\"aiilmrty\\\")\\nTest.assert_equals(sort_word(\\\"million\\\"), \\\"iillmno\\\")\\nTest.assert_equals(sort_word(\\\"mind\\\"), \\\"dimn\\\")\\nTest.assert_equals(sort_word(\\\"minute\\\"), \\\"eimntu\\\")\\nTest.assert_equals(sort_word(\\\"miss\\\"), \\\"imss\\\")\\nTest.assert_equals(sort_word(\\\"mission\\\"), \\\"iimnoss\\\")\\nTest.assert_equals(sort_word(\\\"model\\\"), \\\"delmo\\\")\\nTest.assert_equals(sort_word(\\\"modern\\\"), \\\"demnor\\\")\\nTest.assert_equals(sort_word(\\\"moment\\\"), \\\"emmnot\\\")\\nTest.assert_equals(sort_word(\\\"money\\\"), \\\"emnoy\\\")\\nTest.assert_equals(sort_word(\\\"month\\\"), \\\"hmnot\\\")\\nTest.assert_equals(sort_word(\\\"more\\\"), \\\"emor\\\")\\nTest.assert_equals(sort_word(\\\"morning\\\"), \\\"gimnnor\\\")\\nTest.assert_equals(sort_word(\\\"most\\\"), \\\"most\\\")\\nTest.assert_equals(sort_word(\\\"mother\\\"), \\\"ehmort\\\")\\nTest.assert_equals(sort_word(\\\"mouth\\\"), \\\"hmotu\\\")\\nTest.assert_equals(sort_word(\\\"move\\\"), \\\"emov\\\")\\nTest.assert_equals(sort_word(\\\"movement\\\"), \\\"eemmnotv\\\")\\nTest.assert_equals(sort_word(\\\"movie\\\"), \\\"eimov\\\")\\nTest.assert_equals(sort_word(\\\"Mr\\\"), \\\"Mr\\\")\\nTest.assert_equals(sort_word(\\\"Mrs\\\"), \\\"Mrs\\\")\\nTest.assert_equals(sort_word(\\\"much\\\"), \\\"chmu\\\")\\nTest.assert_equals(sort_word(\\\"music\\\"), \\\"cimsu\\\")\\nTest.assert_equals(sort_word(\\\"must\\\"), \\\"mstu\\\")\\nTest.assert_equals(sort_word(\\\"my\\\"), \\\"my\\\")\\nTest.assert_equals(sort_word(\\\"myself\\\"), \\\"eflmsy\\\")\\nTest.assert_equals(sort_word(\\\"name\\\"), \\\"aemn\\\")\\nTest.assert_equals(sort_word(\\\"nation\\\"), \\\"ainnot\\\")\\nTest.assert_equals(sort_word(\\\"national\\\"), \\\"aailnnot\\\")\\nTest.assert_equals(sort_word(\\\"natural\\\"), \\\"aalnrtu\\\")\\nTest.assert_equals(sort_word(\\\"nature\\\"), \\\"aenrtu\\\")\\nTest.assert_equals(sort_word(\\\"near\\\"), \\\"aenr\\\")\\nTest.assert_equals(sort_word(\\\"nearly\\\"), \\\"aelnry\\\")\\nTest.assert_equals(sort_word(\\\"necessary\\\"), \\\"aceenrssy\\\")\\nTest.assert_equals(sort_word(\\\"need\\\"), \\\"deen\\\")\\nTest.assert_equals(sort_word(\\\"network\\\"), \\\"eknortw\\\")\\nTest.assert_equals(sort_word(\\\"never\\\"), \\\"eenrv\\\")\\nTest.assert_equals(sort_word(\\\"new\\\"), \\\"enw\\\")\\nTest.assert_equals(sort_word(\\\"news\\\"), \\\"ensw\\\")\\nTest.assert_equals(sort_word(\\\"newspaper\\\"), \\\"aeenpprsw\\\")\\nTest.assert_equals(sort_word(\\\"next\\\"), \\\"entx\\\")\\nTest.assert_equals(sort_word(\\\"nice\\\"), \\\"cein\\\")\\nTest.assert_equals(sort_word(\\\"night\\\"), \\\"ghint\\\")\\nTest.assert_equals(sort_word(\\\"no\\\"), \\\"no\\\")\\nTest.assert_equals(sort_word(\\\"none\\\"), \\\"enno\\\")\\nTest.assert_equals(sort_word(\\\"nor\\\"), \\\"nor\\\")\\nTest.assert_equals(sort_word(\\\"north\\\"), \\\"hnort\\\")\\nTest.assert_equals(sort_word(\\\"not\\\"), \\\"not\\\")\\nTest.assert_equals(sort_word(\\\"note\\\"), \\\"enot\\\")\\nTest.assert_equals(sort_word(\\\"nothing\\\"), \\\"ghinnot\\\")\\nTest.assert_equals(sort_word(\\\"notice\\\"), \\\"ceinot\\\")\\nTest.assert_equals(sort_word(\\\"now\\\"), \\\"now\\\")\\nTest.assert_equals(sort_word(\\\"number\\\"), \\\"bemnru\\\")\\nTest.assert_equals(sort_word(\\\"occur\\\"), \\\"ccoru\\\")\\nTest.assert_equals(sort_word(\\\"of\\\"), \\\"fo\\\")\\nTest.assert_equals(sort_word(\\\"off\\\"), \\\"ffo\\\")\\nTest.assert_equals(sort_word(\\\"offer\\\"), \\\"effor\\\")\\nTest.assert_equals(sort_word(\\\"office\\\"), \\\"ceffio\\\")\\nTest.assert_equals(sort_word(\\\"officer\\\"), \\\"ceffior\\\")\\nTest.assert_equals(sort_word(\\\"official\\\"), \\\"acffiilo\\\")\\nTest.assert_equals(sort_word(\\\"often\\\"), \\\"efnot\\\")\\nTest.assert_equals(sort_word(\\\"oh\\\"), \\\"ho\\\")\\nTest.assert_equals(sort_word(\\\"oil\\\"), \\\"ilo\\\")\\nTest.assert_equals(sort_word(\\\"ok\\\"), \\\"ko\\\")\\nTest.assert_equals(sort_word(\\\"old\\\"), \\\"dlo\\\")\\nTest.assert_equals(sort_word(\\\"on\\\"), \\\"no\\\")\\nTest.assert_equals(sort_word(\\\"once\\\"), \\\"ceno\\\")\\nTest.assert_equals(sort_word(\\\"one\\\"), \\\"eno\\\")\\nTest.assert_equals(sort_word(\\\"only\\\"), \\\"lnoy\\\")\\nTest.assert_equals(sort_word(\\\"onto\\\"), \\\"noot\\\")\\nTest.assert_equals(sort_word(\\\"open\\\"), \\\"enop\\\")\\nTest.assert_equals(sort_word(\\\"operation\\\"), \\\"aeinooprt\\\")\\nTest.assert_equals(sort_word(\\\"opportunity\\\"), \\\"inoopprttuy\\\")\\nTest.assert_equals(sort_word(\\\"option\\\"), \\\"inoopt\\\")\\nTest.assert_equals(sort_word(\\\"or\\\"), \\\"or\\\")\\nTest.assert_equals(sort_word(\\\"order\\\"), \\\"deorr\\\")\\nTest.assert_equals(sort_word(\\\"organization\\\"), \\\"aagiinnoortz\\\")\\nTest.assert_equals(sort_word(\\\"other\\\"), \\\"ehort\\\")\\nTest.assert_equals(sort_word(\\\"others\\\"), \\\"ehorst\\\")\\nTest.assert_equals(sort_word(\\\"our\\\"), \\\"oru\\\")\\nTest.assert_equals(sort_word(\\\"out\\\"), \\\"otu\\\")\\nTest.assert_equals(sort_word(\\\"outside\\\"), \\\"deiostu\\\")\\nTest.assert_equals(sort_word(\\\"over\\\"), \\\"eorv\\\")\\nTest.assert_equals(sort_word(\\\"own\\\"), \\\"now\\\")\\nTest.assert_equals(sort_word(\\\"owner\\\"), \\\"enorw\\\")\\nTest.assert_equals(sort_word(\\\"page\\\"), \\\"aegp\\\")\\nTest.assert_equals(sort_word(\\\"pain\\\"), \\\"ainp\\\")\\nTest.assert_equals(sort_word(\\\"painting\\\"), \\\"agiinnpt\\\")\\nTest.assert_equals(sort_word(\\\"paper\\\"), \\\"aeppr\\\")\\nTest.assert_equals(sort_word(\\\"parent\\\"), \\\"aenprt\\\")\\nTest.assert_equals(sort_word(\\\"part\\\"), \\\"aprt\\\")\\nTest.assert_equals(sort_word(\\\"participant\\\"), \\\"aaciinpprtt\\\")\\nTest.assert_equals(sort_word(\\\"particular\\\"), \\\"aacilprrtu\\\")\\nTest.assert_equals(sort_word(\\\"particularly\\\"), \\\"aacillprrtuy\\\")\\nTest.assert_equals(sort_word(\\\"partner\\\"), \\\"aenprrt\\\")\\nTest.assert_equals(sort_word(\\\"party\\\"), \\\"aprty\\\")\\nTest.assert_equals(sort_word(\\\"pass\\\"), \\\"apss\\\")\\nTest.assert_equals(sort_word(\\\"past\\\"), \\\"apst\\\")\\nTest.assert_equals(sort_word(\\\"patient\\\"), \\\"aeinptt\\\")\\nTest.assert_equals(sort_word(\\\"pattern\\\"), \\\"aenprtt\\\")\\nTest.assert_equals(sort_word(\\\"pay\\\"), \\\"apy\\\")\\nTest.assert_equals(sort_word(\\\"peace\\\"), \\\"aceep\\\")\\nTest.assert_equals(sort_word(\\\"people\\\"), \\\"eelopp\\\")\\nTest.assert_equals(sort_word(\\\"per\\\"), \\\"epr\\\")\\nTest.assert_equals(sort_word(\\\"perform\\\"), \\\"efmoprr\\\")\\nTest.assert_equals(sort_word(\\\"performance\\\"), \\\"aceefmnoprr\\\")\\nTest.assert_equals(sort_word(\\\"perhaps\\\"), \\\"aehpprs\\\")\\nTest.assert_equals(sort_word(\\\"period\\\"), \\\"deiopr\\\")\\nTest.assert_equals(sort_word(\\\"person\\\"), \\\"enoprs\\\")\\nTest.assert_equals(sort_word(\\\"personal\\\"), \\\"aelnoprs\\\")\\nTest.assert_equals(sort_word(\\\"phone\\\"), \\\"ehnop\\\")\\nTest.assert_equals(sort_word(\\\"physical\\\"), \\\"achilpsy\\\")\\nTest.assert_equals(sort_word(\\\"pick\\\"), \\\"cikp\\\")\\nTest.assert_equals(sort_word(\\\"picture\\\"), \\\"ceiprtu\\\")\\nTest.assert_equals(sort_word(\\\"piece\\\"), \\\"ceeip\\\")\\nTest.assert_equals(sort_word(\\\"place\\\"), \\\"acelp\\\")\\nTest.assert_equals(sort_word(\\\"plan\\\"), \\\"alnp\\\")\\nTest.assert_equals(sort_word(\\\"plant\\\"), \\\"alnpt\\\")\\nTest.assert_equals(sort_word(\\\"play\\\"), \\\"alpy\\\")\\nTest.assert_equals(sort_word(\\\"player\\\"), \\\"aelpry\\\")\\nTest.assert_equals(sort_word(\\\"PM\\\"), \\\"MP\\\")\\nTest.assert_equals(sort_word(\\\"point\\\"), \\\"inopt\\\")\\nTest.assert_equals(sort_word(\\\"police\\\"), \\\"ceilop\\\")\\nTest.assert_equals(sort_word(\\\"policy\\\"), \\\"cilopy\\\")\\nTest.assert_equals(sort_word(\\\"political\\\"), \\\"aciillopt\\\")\\nTest.assert_equals(sort_word(\\\"politics\\\"), \\\"ciilopst\\\")\\nTest.assert_equals(sort_word(\\\"poor\\\"), \\\"oopr\\\")\\nTest.assert_equals(sort_word(\\\"popular\\\"), \\\"aloppru\\\")\\nTest.assert_equals(sort_word(\\\"population\\\"), \\\"ailnoopptu\\\")\\nTest.assert_equals(sort_word(\\\"position\\\"), \\\"iinoopst\\\")\\nTest.assert_equals(sort_word(\\\"positive\\\"), \\\"eiiopstv\\\")\\nTest.assert_equals(sort_word(\\\"possible\\\"), \\\"beilopss\\\")\\nTest.assert_equals(sort_word(\\\"power\\\"), \\\"eoprw\\\")\\nTest.assert_equals(sort_word(\\\"practice\\\"), \\\"acceiprt\\\")\\nTest.assert_equals(sort_word(\\\"prepare\\\"), \\\"aeepprr\\\")\\nTest.assert_equals(sort_word(\\\"present\\\"), \\\"eenprst\\\")\\nTest.assert_equals(sort_word(\\\"president\\\"), \\\"deeinprst\\\")\\nTest.assert_equals(sort_word(\\\"pressure\\\"), \\\"eeprrssu\\\")\\nTest.assert_equals(sort_word(\\\"pretty\\\"), \\\"eprtty\\\")\\nTest.assert_equals(sort_word(\\\"prevent\\\"), \\\"eenprtv\\\")\\nTest.assert_equals(sort_word(\\\"price\\\"), \\\"ceipr\\\")\\nTest.assert_equals(sort_word(\\\"private\\\"), \\\"aeiprtv\\\")\\nTest.assert_equals(sort_word(\\\"probably\\\"), \\\"abblopry\\\")\\nTest.assert_equals(sort_word(\\\"problem\\\"), \\\"belmopr\\\")\\nTest.assert_equals(sort_word(\\\"process\\\"), \\\"ceoprss\\\")\\nTest.assert_equals(sort_word(\\\"produce\\\"), \\\"cdeopru\\\")\\nTest.assert_equals(sort_word(\\\"product\\\"), \\\"cdoprtu\\\")\\nTest.assert_equals(sort_word(\\\"production\\\"), \\\"cdinooprtu\\\")\\nTest.assert_equals(sort_word(\\\"professional\\\"), \\\"aefilnooprss\\\")\\nTest.assert_equals(sort_word(\\\"professor\\\"), \\\"efooprrss\\\")\\nTest.assert_equals(sort_word(\\\"program\\\"), \\\"agmoprr\\\")\\nTest.assert_equals(sort_word(\\\"project\\\"), \\\"cejoprt\\\")\\nTest.assert_equals(sort_word(\\\"property\\\"), \\\"eopprrty\\\")\\nTest.assert_equals(sort_word(\\\"protect\\\"), \\\"ceoprtt\\\")\\nTest.assert_equals(sort_word(\\\"prove\\\"), \\\"eoprv\\\")\\nTest.assert_equals(sort_word(\\\"provide\\\"), \\\"deioprv\\\")\\nTest.assert_equals(sort_word(\\\"public\\\"), \\\"bcilpu\\\")\\nTest.assert_equals(sort_word(\\\"pull\\\"), \\\"llpu\\\")\\nTest.assert_equals(sort_word(\\\"purpose\\\"), \\\"eopprsu\\\")\\nTest.assert_equals(sort_word(\\\"push\\\"), \\\"hpsu\\\")\\nTest.assert_equals(sort_word(\\\"put\\\"), \\\"ptu\\\")\\nTest.assert_equals(sort_word(\\\"quality\\\"), \\\"ailqtuy\\\")\\nTest.assert_equals(sort_word(\\\"question\\\"), \\\"einoqstu\\\")\\nTest.assert_equals(sort_word(\\\"quickly\\\"), \\\"ciklquy\\\")\\nTest.assert_equals(sort_word(\\\"quite\\\"), \\\"eiqtu\\\")\\nTest.assert_equals(sort_word(\\\"race\\\"), \\\"acer\\\")\\nTest.assert_equals(sort_word(\\\"radio\\\"), \\\"adior\\\")\\nTest.assert_equals(sort_word(\\\"raise\\\"), \\\"aeirs\\\")\\nTest.assert_equals(sort_word(\\\"range\\\"), \\\"aegnr\\\")\\nTest.assert_equals(sort_word(\\\"rate\\\"), \\\"aert\\\")\\nTest.assert_equals(sort_word(\\\"rather\\\"), \\\"aehrrt\\\")\\nTest.assert_equals(sort_word(\\\"reach\\\"), \\\"acehr\\\")\\nTest.assert_equals(sort_word(\\\"read\\\"), \\\"ader\\\")\\nTest.assert_equals(sort_word(\\\"ready\\\"), \\\"adery\\\")\\nTest.assert_equals(sort_word(\\\"real\\\"), \\\"aelr\\\")\\nTest.assert_equals(sort_word(\\\"reality\\\"), \\\"aeilrty\\\")\\nTest.assert_equals(sort_word(\\\"realize\\\"), \\\"aeeilrz\\\")\\nTest.assert_equals(sort_word(\\\"really\\\"), \\\"aellry\\\")\\nTest.assert_equals(sort_word(\\\"reason\\\"), \\\"aenors\\\")\\nTest.assert_equals(sort_word(\\\"receive\\\"), \\\"ceeeirv\\\")\\nTest.assert_equals(sort_word(\\\"recent\\\"), \\\"ceenrt\\\")\\nTest.assert_equals(sort_word(\\\"recently\\\"), \\\"ceelnrty\\\")\\nTest.assert_equals(sort_word(\\\"recognize\\\"), \\\"ceeginorz\\\")\\nTest.assert_equals(sort_word(\\\"record\\\"), \\\"cdeorr\\\")\\nTest.assert_equals(sort_word(\\\"red\\\"), \\\"der\\\")\\nTest.assert_equals(sort_word(\\\"reduce\\\"), \\\"cdeeru\\\")\\nTest.assert_equals(sort_word(\\\"reflect\\\"), \\\"ceeflrt\\\")\\nTest.assert_equals(sort_word(\\\"region\\\"), \\\"eginor\\\")\\nTest.assert_equals(sort_word(\\\"relate\\\"), \\\"aeelrt\\\")\\nTest.assert_equals(sort_word(\\\"relationship\\\"), \\\"aehiilnoprst\\\")\\nTest.assert_equals(sort_word(\\\"religious\\\"), \\\"egiilorsu\\\")\\nTest.assert_equals(sort_word(\\\"remain\\\"), \\\"aeimnr\\\")\\nTest.assert_equals(sort_word(\\\"remember\\\"), \\\"beeemmrr\\\")\\nTest.assert_equals(sort_word(\\\"remove\\\"), \\\"eemorv\\\")\\nTest.assert_equals(sort_word(\\\"report\\\"), \\\"eoprrt\\\")\\nTest.assert_equals(sort_word(\\\"represent\\\"), \\\"eeenprrst\\\")\\nTest.assert_equals(sort_word(\\\"Republican\\\"), \\\"Rabceilnpu\\\")\\nTest.assert_equals(sort_word(\\\"require\\\"), \\\"eeiqrru\\\")\\nTest.assert_equals(sort_word(\\\"research\\\"), \\\"aceehrrs\\\")\\nTest.assert_equals(sort_word(\\\"resource\\\"), \\\"ceeorrsu\\\")\\nTest.assert_equals(sort_word(\\\"respond\\\"), \\\"denoprs\\\")\\nTest.assert_equals(sort_word(\\\"response\\\"), \\\"eenoprss\\\")\\nTest.assert_equals(sort_word(\\\"responsibility\\\"), \\\"beiiilnoprssty\\\")\\nTest.assert_equals(sort_word(\\\"rest\\\"), \\\"erst\\\")\\nTest.assert_equals(sort_word(\\\"result\\\"), \\\"elrstu\\\")\\nTest.assert_equals(sort_word(\\\"return\\\"), \\\"enrrtu\\\")\\nTest.assert_equals(sort_word(\\\"reveal\\\"), \\\"aeelrv\\\")\\nTest.assert_equals(sort_word(\\\"rich\\\"), \\\"chir\\\")\\nTest.assert_equals(sort_word(\\\"right\\\"), \\\"ghirt\\\")\\nTest.assert_equals(sort_word(\\\"rise\\\"), \\\"eirs\\\")\\nTest.assert_equals(sort_word(\\\"risk\\\"), \\\"ikrs\\\")\\nTest.assert_equals(sort_word(\\\"road\\\"), \\\"ador\\\")\\nTest.assert_equals(sort_word(\\\"rock\\\"), \\\"ckor\\\")\\nTest.assert_equals(sort_word(\\\"role\\\"), \\\"elor\\\")\\nTest.assert_equals(sort_word(\\\"room\\\"), \\\"moor\\\")\\nTest.assert_equals(sort_word(\\\"rule\\\"), \\\"elru\\\")\\nTest.assert_equals(sort_word(\\\"run\\\"), \\\"nru\\\")\\nTest.assert_equals(sort_word(\\\"safe\\\"), \\\"aefs\\\")\\nTest.assert_equals(sort_word(\\\"same\\\"), \\\"aems\\\")\\nTest.assert_equals(sort_word(\\\"save\\\"), \\\"aesv\\\")\\nTest.assert_equals(sort_word(\\\"say\\\"), \\\"asy\\\")\\nTest.assert_equals(sort_word(\\\"scene\\\"), \\\"ceens\\\")\\nTest.assert_equals(sort_word(\\\"school\\\"), \\\"chloos\\\")\\nTest.assert_equals(sort_word(\\\"science\\\"), \\\"cceeins\\\")\\nTest.assert_equals(sort_word(\\\"scientist\\\"), \\\"ceiinsstt\\\")\\nTest.assert_equals(sort_word(\\\"score\\\"), \\\"ceors\\\")\\nTest.assert_equals(sort_word(\\\"sea\\\"), \\\"aes\\\")\\nTest.assert_equals(sort_word(\\\"season\\\"), \\\"aenoss\\\")\\nTest.assert_equals(sort_word(\\\"seat\\\"), \\\"aest\\\")\\nTest.assert_equals(sort_word(\\\"second\\\"), \\\"cdenos\\\")\\nTest.assert_equals(sort_word(\\\"section\\\"), \\\"ceinost\\\")\\nTest.assert_equals(sort_word(\\\"security\\\"), \\\"ceirstuy\\\")\\nTest.assert_equals(sort_word(\\\"see\\\"), \\\"ees\\\")\\nTest.assert_equals(sort_word(\\\"seek\\\"), \\\"eeks\\\")\\nTest.assert_equals(sort_word(\\\"seem\\\"), \\\"eems\\\")\\nTest.assert_equals(sort_word(\\\"sell\\\"), \\\"ells\\\")\\nTest.assert_equals(sort_word(\\\"send\\\"), \\\"dens\\\")\\nTest.assert_equals(sort_word(\\\"senior\\\"), \\\"einors\\\")\\nTest.assert_equals(sort_word(\\\"sense\\\"), \\\"eenss\\\")\\nTest.assert_equals(sort_word(\\\"series\\\"), \\\"eeirss\\\")\\nTest.assert_equals(sort_word(\\\"serious\\\"), \\\"eiorssu\\\")\\nTest.assert_equals(sort_word(\\\"serve\\\"), \\\"eersv\\\")\\nTest.assert_equals(sort_word(\\\"service\\\"), \\\"ceeirsv\\\")\\nTest.assert_equals(sort_word(\\\"set\\\"), \\\"est\\\")\\nTest.assert_equals(sort_word(\\\"seven\\\"), \\\"eensv\\\")\\nTest.assert_equals(sort_word(\\\"several\\\"), \\\"aeelrsv\\\")\\nTest.assert_equals(sort_word(\\\"sex\\\"), \\\"esx\\\")\\nTest.assert_equals(sort_word(\\\"sexual\\\"), \\\"aelsux\\\")\\nTest.assert_equals(sort_word(\\\"shake\\\"), \\\"aehks\\\")\\nTest.assert_equals(sort_word(\\\"share\\\"), \\\"aehrs\\\")\\nTest.assert_equals(sort_word(\\\"she\\\"), \\\"ehs\\\")\\nTest.assert_equals(sort_word(\\\"shoot\\\"), \\\"hoost\\\")\\nTest.assert_equals(sort_word(\\\"short\\\"), \\\"horst\\\")\\nTest.assert_equals(sort_word(\\\"shot\\\"), \\\"host\\\")\\nTest.assert_equals(sort_word(\\\"should\\\"), \\\"dhlosu\\\")\\nTest.assert_equals(sort_word(\\\"shoulder\\\"), \\\"dehlorsu\\\")\\nTest.assert_equals(sort_word(\\\"show\\\"), \\\"hosw\\\")\\nTest.assert_equals(sort_word(\\\"side\\\"), \\\"deis\\\")\\nTest.assert_equals(sort_word(\\\"sign\\\"), \\\"gins\\\")\\nTest.assert_equals(sort_word(\\\"significant\\\"), \\\"acfgiiinnst\\\")\\nTest.assert_equals(sort_word(\\\"similar\\\"), \\\"aiilmrs\\\")\\nTest.assert_equals(sort_word(\\\"simple\\\"), \\\"eilmps\\\")\\nTest.assert_equals(sort_word(\\\"simply\\\"), \\\"ilmpsy\\\")\\nTest.assert_equals(sort_word(\\\"since\\\"), \\\"ceins\\\")\\nTest.assert_equals(sort_word(\\\"sing\\\"), \\\"gins\\\")\\nTest.assert_equals(sort_word(\\\"single\\\"), \\\"egilns\\\")\\nTest.assert_equals(sort_word(\\\"sister\\\"), \\\"eirsst\\\")\\nTest.assert_equals(sort_word(\\\"sit\\\"), \\\"ist\\\")\\nTest.assert_equals(sort_word(\\\"site\\\"), \\\"eist\\\")\\nTest.assert_equals(sort_word(\\\"situation\\\"), \\\"aiinosttu\\\")\\nTest.assert_equals(sort_word(\\\"six\\\"), \\\"isx\\\")\\nTest.assert_equals(sort_word(\\\"size\\\"), \\\"eisz\\\")\\nTest.assert_equals(sort_word(\\\"skill\\\"), \\\"iklls\\\")\\nTest.assert_equals(sort_word(\\\"skin\\\"), \\\"ikns\\\")\\nTest.assert_equals(sort_word(\\\"small\\\"), \\\"allms\\\")\\nTest.assert_equals(sort_word(\\\"smile\\\"), \\\"eilms\\\")\\nTest.assert_equals(sort_word(\\\"so\\\"), \\\"os\\\")\\nTest.assert_equals(sort_word(\\\"social\\\"), \\\"acilos\\\")\\nTest.assert_equals(sort_word(\\\"society\\\"), \\\"ceiosty\\\")\\nTest.assert_equals(sort_word(\\\"soldier\\\"), \\\"deilors\\\")\\nTest.assert_equals(sort_word(\\\"some\\\"), \\\"emos\\\")\\nTest.assert_equals(sort_word(\\\"somebody\\\"), \\\"bdemoosy\\\")\\nTest.assert_equals(sort_word(\\\"someone\\\"), \\\"eemnoos\\\")\\nTest.assert_equals(sort_word(\\\"something\\\"), \\\"eghimnost\\\")\\nTest.assert_equals(sort_word(\\\"sometimes\\\"), \\\"eeimmosst\\\")\\nTest.assert_equals(sort_word(\\\"son\\\"), \\\"nos\\\")\\nTest.assert_equals(sort_word(\\\"song\\\"), \\\"gnos\\\")\\nTest.assert_equals(sort_word(\\\"soon\\\"), \\\"noos\\\")\\nTest.assert_equals(sort_word(\\\"sort\\\"), \\\"orst\\\")\\nTest.assert_equals(sort_word(\\\"sound\\\"), \\\"dnosu\\\")\\nTest.assert_equals(sort_word(\\\"source\\\"), \\\"ceorsu\\\")\\nTest.assert_equals(sort_word(\\\"south\\\"), \\\"hostu\\\")\\nTest.assert_equals(sort_word(\\\"southern\\\"), \\\"ehnorstu\\\")\\nTest.assert_equals(sort_word(\\\"space\\\"), \\\"aceps\\\")\\nTest.assert_equals(sort_word(\\\"speak\\\"), \\\"aekps\\\")\\nTest.assert_equals(sort_word(\\\"special\\\"), \\\"aceilps\\\")\\nTest.assert_equals(sort_word(\\\"specific\\\"), \\\"ccefiips\\\")\\nTest.assert_equals(sort_word(\\\"speech\\\"), \\\"ceehps\\\")\\nTest.assert_equals(sort_word(\\\"spend\\\"), \\\"denps\\\")\\nTest.assert_equals(sort_word(\\\"sport\\\"), \\\"oprst\\\")\\nTest.assert_equals(sort_word(\\\"spring\\\"), \\\"ginprs\\\")\\nTest.assert_equals(sort_word(\\\"staff\\\"), \\\"affst\\\")\\nTest.assert_equals(sort_word(\\\"stage\\\"), \\\"aegst\\\")\\nTest.assert_equals(sort_word(\\\"stand\\\"), \\\"adnst\\\")\\nTest.assert_equals(sort_word(\\\"standard\\\"), \\\"aaddnrst\\\")\\nTest.assert_equals(sort_word(\\\"star\\\"), \\\"arst\\\")\\nTest.assert_equals(sort_word(\\\"start\\\"), \\\"arstt\\\")\\nTest.assert_equals(sort_word(\\\"state\\\"), \\\"aestt\\\")\\nTest.assert_equals(sort_word(\\\"statement\\\"), \\\"aeemnsttt\\\")\\nTest.assert_equals(sort_word(\\\"station\\\"), \\\"ainostt\\\")\\nTest.assert_equals(sort_word(\\\"stay\\\"), \\\"asty\\\")\\nTest.assert_equals(sort_word(\\\"step\\\"), \\\"epst\\\")\\nTest.assert_equals(sort_word(\\\"still\\\"), \\\"illst\\\")\\nTest.assert_equals(sort_word(\\\"stock\\\"), \\\"ckost\\\")\\nTest.assert_equals(sort_word(\\\"stop\\\"), \\\"opst\\\")\\nTest.assert_equals(sort_word(\\\"store\\\"), \\\"eorst\\\")\\nTest.assert_equals(sort_word(\\\"story\\\"), \\\"orsty\\\")\\nTest.assert_equals(sort_word(\\\"strategy\\\"), \\\"aegrstty\\\")\\nTest.assert_equals(sort_word(\\\"street\\\"), \\\"eerstt\\\")\\nTest.assert_equals(sort_word(\\\"strong\\\"), \\\"gnorst\\\")\\nTest.assert_equals(sort_word(\\\"structure\\\"), \\\"cerrsttuu\\\")\\nTest.assert_equals(sort_word(\\\"student\\\"), \\\"densttu\\\")\\nTest.assert_equals(sort_word(\\\"study\\\"), \\\"dstuy\\\")\\nTest.assert_equals(sort_word(\\\"stuff\\\"), \\\"ffstu\\\")\\nTest.assert_equals(sort_word(\\\"style\\\"), \\\"elsty\\\")\\nTest.assert_equals(sort_word(\\\"subject\\\"), \\\"bcejstu\\\")\\nTest.assert_equals(sort_word(\\\"success\\\"), \\\"ccesssu\\\")\\nTest.assert_equals(sort_word(\\\"successful\\\"), \\\"cceflsssuu\\\")\\nTest.assert_equals(sort_word(\\\"such\\\"), \\\"chsu\\\")\\nTest.assert_equals(sort_word(\\\"suddenly\\\"), \\\"ddelnsuy\\\")\\nTest.assert_equals(sort_word(\\\"suffer\\\"), \\\"effrsu\\\")\\nTest.assert_equals(sort_word(\\\"suggest\\\"), \\\"eggsstu\\\")\\nTest.assert_equals(sort_word(\\\"summer\\\"), \\\"emmrsu\\\")\\nTest.assert_equals(sort_word(\\\"support\\\"), \\\"opprstu\\\")\\nTest.assert_equals(sort_word(\\\"sure\\\"), \\\"ersu\\\")\\nTest.assert_equals(sort_word(\\\"surface\\\"), \\\"acefrsu\\\")\\nTest.assert_equals(sort_word(\\\"system\\\"), \\\"emssty\\\")\\nTest.assert_equals(sort_word(\\\"table\\\"), \\\"abelt\\\")\\nTest.assert_equals(sort_word(\\\"take\\\"), \\\"aekt\\\")\\nTest.assert_equals(sort_word(\\\"talk\\\"), \\\"aklt\\\")\\nTest.assert_equals(sort_word(\\\"task\\\"), \\\"akst\\\")\\nTest.assert_equals(sort_word(\\\"tax\\\"), \\\"atx\\\")\\nTest.assert_equals(sort_word(\\\"teach\\\"), \\\"aceht\\\")\\nTest.assert_equals(sort_word(\\\"teacher\\\"), \\\"aceehrt\\\")\\nTest.assert_equals(sort_word(\\\"team\\\"), \\\"aemt\\\")\\nTest.assert_equals(sort_word(\\\"technology\\\"), \\\"ceghlnooty\\\")\\nTest.assert_equals(sort_word(\\\"television\\\"), \\\"eeiilnostv\\\")\\nTest.assert_equals(sort_word(\\\"tell\\\"), \\\"ellt\\\")\\nTest.assert_equals(sort_word(\\\"ten\\\"), \\\"ent\\\")\\nTest.assert_equals(sort_word(\\\"tend\\\"), \\\"dent\\\")\\nTest.assert_equals(sort_word(\\\"term\\\"), \\\"emrt\\\")\\nTest.assert_equals(sort_word(\\\"test\\\"), \\\"estt\\\")\\nTest.assert_equals(sort_word(\\\"than\\\"), \\\"ahnt\\\")\\nTest.assert_equals(sort_word(\\\"thank\\\"), \\\"ahknt\\\")\\nTest.assert_equals(sort_word(\\\"that\\\"), \\\"ahtt\\\")\\nTest.assert_equals(sort_word(\\\"the\\\"), \\\"eht\\\")\\nTest.assert_equals(sort_word(\\\"their\\\"), \\\"ehirt\\\")\\nTest.assert_equals(sort_word(\\\"them\\\"), \\\"ehmt\\\")\\nTest.assert_equals(sort_word(\\\"themselves\\\"), \\\"eeehlmsstv\\\")\\nTest.assert_equals(sort_word(\\\"then\\\"), \\\"ehnt\\\")\\nTest.assert_equals(sort_word(\\\"theory\\\"), \\\"ehorty\\\")\\nTest.assert_equals(sort_word(\\\"there\\\"), \\\"eehrt\\\")\\nTest.assert_equals(sort_word(\\\"these\\\"), \\\"eehst\\\")\\nTest.assert_equals(sort_word(\\\"they\\\"), \\\"ehty\\\")\\nTest.assert_equals(sort_word(\\\"thing\\\"), \\\"ghint\\\")\\nTest.assert_equals(sort_word(\\\"think\\\"), \\\"hiknt\\\")\\nTest.assert_equals(sort_word(\\\"third\\\"), \\\"dhirt\\\")\\nTest.assert_equals(sort_word(\\\"this\\\"), \\\"hist\\\")\\nTest.assert_equals(sort_word(\\\"those\\\"), \\\"ehost\\\")\\nTest.assert_equals(sort_word(\\\"though\\\"), \\\"ghhotu\\\")\\nTest.assert_equals(sort_word(\\\"thought\\\"), \\\"ghhottu\\\")\\nTest.assert_equals(sort_word(\\\"thousand\\\"), \\\"adhnostu\\\")\\nTest.assert_equals(sort_word(\\\"threat\\\"), \\\"aehrtt\\\")\\nTest.assert_equals(sort_word(\\\"three\\\"), \\\"eehrt\\\")\\nTest.assert_equals(sort_word(\\\"through\\\"), \\\"ghhortu\\\")\\nTest.assert_equals(sort_word(\\\"throughout\\\"), \\\"ghhoorttuu\\\")\\nTest.assert_equals(sort_word(\\\"throw\\\"), \\\"hortw\\\")\\nTest.assert_equals(sort_word(\\\"thus\\\"), \\\"hstu\\\")\\nTest.assert_equals(sort_word(\\\"time\\\"), \\\"eimt\\\")\\nTest.assert_equals(sort_word(\\\"to\\\"), \\\"ot\\\")\\nTest.assert_equals(sort_word(\\\"today\\\"), \\\"adoty\\\")\\nTest.assert_equals(sort_word(\\\"together\\\"), \\\"eeghortt\\\")\\nTest.assert_equals(sort_word(\\\"tonight\\\"), \\\"ghinott\\\")\\nTest.assert_equals(sort_word(\\\"too\\\"), \\\"oot\\\")\\nTest.assert_equals(sort_word(\\\"top\\\"), \\\"opt\\\")\\nTest.assert_equals(sort_word(\\\"total\\\"), \\\"alott\\\")\\nTest.assert_equals(sort_word(\\\"tough\\\"), \\\"ghotu\\\")\\nTest.assert_equals(sort_word(\\\"toward\\\"), \\\"adortw\\\")\\nTest.assert_equals(sort_word(\\\"town\\\"), \\\"notw\\\")\\nTest.assert_equals(sort_word(\\\"trade\\\"), \\\"adert\\\")\\nTest.assert_equals(sort_word(\\\"traditional\\\"), \\\"aadiilnortt\\\")\\nTest.assert_equals(sort_word(\\\"training\\\"), \\\"agiinnrt\\\")\\nTest.assert_equals(sort_word(\\\"travel\\\"), \\\"aelrtv\\\")\\nTest.assert_equals(sort_word(\\\"treat\\\"), \\\"aertt\\\")\\nTest.assert_equals(sort_word(\\\"treatment\\\"), \\\"aeemnrttt\\\")\\nTest.assert_equals(sort_word(\\\"tree\\\"), \\\"eert\\\")\\nTest.assert_equals(sort_word(\\\"trial\\\"), \\\"ailrt\\\")\\nTest.assert_equals(sort_word(\\\"trip\\\"), \\\"iprt\\\")\\nTest.assert_equals(sort_word(\\\"trouble\\\"), \\\"belortu\\\")\\nTest.assert_equals(sort_word(\\\"true\\\"), \\\"ertu\\\")\\nTest.assert_equals(sort_word(\\\"truth\\\"), \\\"hrttu\\\")\\nTest.assert_equals(sort_word(\\\"try\\\"), \\\"rty\\\")\\nTest.assert_equals(sort_word(\\\"turn\\\"), \\\"nrtu\\\")\\nTest.assert_equals(sort_word(\\\"TV\\\"), \\\"TV\\\")\\nTest.assert_equals(sort_word(\\\"two\\\"), \\\"otw\\\")\\nTest.assert_equals(sort_word(\\\"type\\\"), \\\"epty\\\")\\nTest.assert_equals(sort_word(\\\"under\\\"), \\\"denru\\\")\\nTest.assert_equals(sort_word(\\\"understand\\\"), \\\"addennrstu\\\")\\nTest.assert_equals(sort_word(\\\"unit\\\"), \\\"intu\\\")\\nTest.assert_equals(sort_word(\\\"until\\\"), \\\"ilntu\\\")\\nTest.assert_equals(sort_word(\\\"up\\\"), \\\"pu\\\")\\nTest.assert_equals(sort_word(\\\"upon\\\"), \\\"nopu\\\")\\nTest.assert_equals(sort_word(\\\"us\\\"), \\\"su\\\")\\nTest.assert_equals(sort_word(\\\"use\\\"), \\\"esu\\\")\\nTest.assert_equals(sort_word(\\\"usually\\\"), \\\"allsuuy\\\")\\nTest.assert_equals(sort_word(\\\"value\\\"), \\\"aeluv\\\")\\nTest.assert_equals(sort_word(\\\"various\\\"), \\\"aiorsuv\\\")\\nTest.assert_equals(sort_word(\\\"very\\\"), \\\"ervy\\\")\\nTest.assert_equals(sort_word(\\\"victim\\\"), \\\"ciimtv\\\")\\nTest.assert_equals(sort_word(\\\"view\\\"), \\\"eivw\\\")\\nTest.assert_equals(sort_word(\\\"violence\\\"), \\\"ceeilnov\\\")\\nTest.assert_equals(sort_word(\\\"visit\\\"), \\\"iistv\\\")\\nTest.assert_equals(sort_word(\\\"voice\\\"), \\\"ceiov\\\")\\nTest.assert_equals(sort_word(\\\"vote\\\"), \\\"eotv\\\")\\nTest.assert_equals(sort_word(\\\"wait\\\"), \\\"aitw\\\")\\nTest.assert_equals(sort_word(\\\"walk\\\"), \\\"aklw\\\")\\nTest.assert_equals(sort_word(\\\"wall\\\"), \\\"allw\\\")\\nTest.assert_equals(sort_word(\\\"want\\\"), \\\"antw\\\")\\nTest.assert_equals(sort_word(\\\"war\\\"), \\\"arw\\\")\\nTest.assert_equals(sort_word(\\\"watch\\\"), \\\"achtw\\\")\\nTest.assert_equals(sort_word(\\\"water\\\"), \\\"aertw\\\")\\nTest.assert_equals(sort_word(\\\"way\\\"), \\\"awy\\\")\\nTest.assert_equals(sort_word(\\\"we\\\"), \\\"ew\\\")\\nTest.assert_equals(sort_word(\\\"weapon\\\"), \\\"aenopw\\\")\\nTest.assert_equals(sort_word(\\\"wear\\\"), \\\"aerw\\\")\\nTest.assert_equals(sort_word(\\\"week\\\"), \\\"eekw\\\")\\nTest.assert_equals(sort_word(\\\"weight\\\"), \\\"eghitw\\\")\\nTest.assert_equals(sort_word(\\\"well\\\"), \\\"ellw\\\")\\nTest.assert_equals(sort_word(\\\"west\\\"), \\\"estw\\\")\\nTest.assert_equals(sort_word(\\\"western\\\"), \\\"eenrstw\\\")\\nTest.assert_equals(sort_word(\\\"what\\\"), \\\"ahtw\\\")\\nTest.assert_equals(sort_word(\\\"whatever\\\"), \\\"aeehrtvw\\\")\\nTest.assert_equals(sort_word(\\\"when\\\"), \\\"ehnw\\\")\\nTest.assert_equals(sort_word(\\\"where\\\"), \\\"eehrw\\\")\\nTest.assert_equals(sort_word(\\\"whether\\\"), \\\"eehhrtw\\\")\\nTest.assert_equals(sort_word(\\\"which\\\"), \\\"chhiw\\\")\\nTest.assert_equals(sort_word(\\\"while\\\"), \\\"ehilw\\\")\\nTest.assert_equals(sort_word(\\\"white\\\"), \\\"ehitw\\\")\\nTest.assert_equals(sort_word(\\\"who\\\"), \\\"how\\\")\\nTest.assert_equals(sort_word(\\\"whole\\\"), \\\"ehlow\\\")\\nTest.assert_equals(sort_word(\\\"whom\\\"), \\\"hmow\\\")\\nTest.assert_equals(sort_word(\\\"whose\\\"), \\\"ehosw\\\")\\nTest.assert_equals(sort_word(\\\"why\\\"), \\\"hwy\\\")\\nTest.assert_equals(sort_word(\\\"wide\\\"), \\\"deiw\\\")\\nTest.assert_equals(sort_word(\\\"wife\\\"), \\\"efiw\\\")\\nTest.assert_equals(sort_word(\\\"will\\\"), \\\"illw\\\")\\nTest.assert_equals(sort_word(\\\"win\\\"), \\\"inw\\\")\\nTest.assert_equals(sort_word(\\\"wind\\\"), \\\"dinw\\\")\\nTest.assert_equals(sort_word(\\\"window\\\"), \\\"dinoww\\\")\\nTest.assert_equals(sort_word(\\\"wish\\\"), \\\"hisw\\\")\\nTest.assert_equals(sort_word(\\\"with\\\"), \\\"hitw\\\")\\nTest.assert_equals(sort_word(\\\"within\\\"), \\\"hiintw\\\")\\nTest.assert_equals(sort_word(\\\"without\\\"), \\\"hiottuw\\\")\\nTest.assert_equals(sort_word(\\\"woman\\\"), \\\"amnow\\\")\\nTest.assert_equals(sort_word(\\\"wonder\\\"), \\\"denorw\\\")\\nTest.assert_equals(sort_word(\\\"word\\\"), \\\"dorw\\\")\\nTest.assert_equals(sort_word(\\\"work\\\"), \\\"korw\\\")\\nTest.assert_equals(sort_word(\\\"worker\\\"), \\\"ekorrw\\\")\\nTest.assert_equals(sort_word(\\\"world\\\"), \\\"dlorw\\\")\\nTest.assert_equals(sort_word(\\\"worry\\\"), \\\"orrwy\\\")\\nTest.assert_equals(sort_word(\\\"would\\\"), \\\"dlouw\\\")\\nTest.assert_equals(sort_word(\\\"write\\\"), \\\"eirtw\\\")\\nTest.assert_equals(sort_word(\\\"writer\\\"), \\\"eirrtw\\\")\\nTest.assert_equals(sort_word(\\\"wrong\\\"), \\\"gnorw\\\")\\nTest.assert_equals(sort_word(\\\"yard\\\"), \\\"adry\\\")\\nTest.assert_equals(sort_word(\\\"yeah\\\"), \\\"aehy\\\")\\nTest.assert_equals(sort_word(\\\"year\\\"), \\\"aery\\\")\\nTest.assert_equals(sort_word(\\\"yes\\\"), \\\"esy\\\")\\nTest.assert_equals(sort_word(\\\"yet\\\"), \\\"ety\\\")\\nTest.assert_equals(sort_word(\\\"you\\\"), \\\"ouy\\\")\\nTest.assert_equals(sort_word(\\\"young\\\"), \\\"gnouy\\\")\\nTest.assert_equals(sort_word(\\\"your\\\"), \\\"oruy\\\")\\nTest.assert_equals(sort_word(\\\"yourself\\\"), \\\"eflorsuy\\\")\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,1,1,1,1,0,0,0,2,0,0,0,0,1,1,0,1,1,1,0,0,0,0,1,0,0,1,0,0,1,2,1,0,0,2,2,0,0,0,1,0,0,2,1,0,1,1,0,2,0,0,0,0,2,0,0,0,1,0,0,0,1,1,0,0,2,1,0,0,2,0,0,2,0,0,2,1,0,2,0,0,2,0,0,0,0,0,1,1,1,0,0,2,1,1,1,0,1,2,1,0,0,0,1,0,1,0,0,0,1,1,0,2,1,1,0,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,2,0,1,1,1,0,1,0,1,0,0,2,2,1,1,0,0,0,1,2,0,0,0,3,0,2,0,0,1,1,0,0,0,1,0,0,0,0,1,0,1,1,0,1,0,2,1,0,0,0,0,1,0,1,0,1,0,1,0,1,1,0,0,2,1,1,0,1,1,0,0,0,1,0,0,0,0,0,0,1,1,1,0,0,0,1,2,0,0,0,0,3,2,0,0,0],\"quality\":[5,5,5,5,5,1,4,5,5,5,5,5,5,4,5,5,4,5,5,5,5,5,5,3,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,3,5,5,5,5,5,5,5,5,4,5,4,5,3,1,5,4,4,5,5,5,5,5,5,5,5,5,3,5,4,5,5,4,5,5,5,5,4,5,5,3,5,4,5,5,5,5,5,5,4,5,5,5,5,5,5,5,2,5,5,5,5,4,4,5,5,1,5,5,5,5,5,5,5,5,5,5,4,5,5,4,5,5,5,5,5,4,5,2,5,5,5,5,4,5,5,5,5,4,5,5,5,5,3,5],\"rators\":[\"sN9bLNiNtg8o7rzCP\",\"Cn9tye48LCWzCqCc5\",\"GykYGfSqrqzvyz2jB\",\"DEDniTrstQYGounXT\",\"abzRfRcExk3bs8cLu\",\"HnoDeuYM8h3PkXtSz\",\"tAF9Gf6PiGogbZuWs\",\"Cuy7McJ5y8BkXRRk9\",\"qaPjAANdnxFnWfj5d\",\"FEYpu9RWysAgW3XnP\",\"8JyqsSbN2FJXPr3cw\",\"Kh3Pc2ZRusurLaMyP\",\"J3upzLHuEwXH7Z2hx\",\"s4YHxEDBTTq5EBMRs\",\"aEm3Wvj2rFYRL8Lrb\",\"gb9rvGus2Jv7bjZSs\",\"DPi9QGLctq2y76KuE\",\"sKfrD9gjCDHuqLzSk\",\"qD2LrwaDrSdiybLKY\",\"i5iePG5GqhJJ8HEoB\",\"FuYTQcDNjct58rqPa\",\"Yp7uvStL97cC9fKkY\",\"gJYuGdkXEWWmGRLzu\",\"QRv96jmNaYsWkxQEG\",\"H4abACFDH5t8CnnyH\",\"M8dQuMrEpP8Hc3tHN\",\"4hzd4qde3g9We8N4E\",\"whm4vkxLMtG9YyobP\",\"fTNQmMvTZhhiGBCMe\",\"dYPkStFnLvAMsHSzZ\",\"oyKcm3zqdy8Ko5P5d\",\"JoKQzpY7E7muQ8WYe\",\"dky93oMkJsJjEJKk2\",\"7D76ZPLjgjZideoy9\",\"DAhoDmrLmkoRsJhRx\",\"LqTWjkqo9irQzGSL2\",\"N7Gku73tBHYzHusqe\",\"yjtdwc2AC4jA2RWtn\",\"opcrDAS4AgXqrJXnb\",\"wRttWTM59y8m5mx7x\",\"PXAcsKkssS2yLyDv2\",\"Ds7L5bksw2QRHjrKL\",\"Fb2wehA7QgTFWry2x\",\"YoWyETmZcgAii9jyW\",\"Th5JTNFvia5ksvSc7\",\"CQhaiZqQcP87YteSG\",\"vgT3ehH2o2KC94NsY\",\"6428wKHtwKkFdvBs5\",\"XanFBoer6Lw9KXvuE\",\"R8HfPE3kgrwButJ8L\",\"EfxwqhYdapX3dMQC2\",\"zd9FLSzsGz3evKafy\",\"AaKWw8amcFYLrEpNz\",\"mEvwXi4fm6Hm49GBk\",\"csxCzWqzHW8JsrzQq\",\"cR3ibTMxLyEdDFCHY\",\"8teSHp77vHhhvJWiS\",\"3LiSLdtN58n46NEqg\",\"5f6oSeq4r5WTXLdCQ\",\"Cybtjz3cF7RgoiqrN\",\"J5T8gZqiZXFuFDTQ7\",\"iF4tdvn5sA9CM4T6T\",\"HuNF3xTBzmatyGSTm\",\"PPhq9DcoWd4auHM4s\",\"rfyEkETeoS96QNH4e\",\"kNrnnMxhFZztMTBAX\",\"Jqk2uJZZxEv5wZFze\",\"5HCu9Ydd86QgHDRNP\",\"N2wnZXkhDH86mgjQ8\",\"YcCLwitFMAEJSnxAW\",\"MnrmRMy2PP3Mk4sSY\",\"g9FyJ8yeT9ic97Qp2\",\"yAouD3PxzED8a4gap\",\"5CsHudxuDESxmjTPW\",\"Amg84cBAt8p7GX34n\",\"vCeeMuYDbz3MB4vsk\",\"qZ3h2ijjMyDiZFibz\",\"oH5za8CuPrt4XyoKx\",\"CyzskHGsC6WSmYrLu\",\"fW3mQfbTKhp7enxGP\",\"RHEs8vmc8bCL4hYHq\",\"dj5AyG5fWP8FdsSmZ\",\"F9pnKPX9nHKqbXoY6\",\"oBcs8GLX2ZFLXQy8y\",\"aKzYNPqBqb3J3ZgyD\",\"HcdukZiuzgvoHjjz3\",\"vDuJoZJRFbGyzLJ3d\",\"MKT7khMBGXzA22ykf\",\"oHbErJxjYJhD66d5w\",\"5S9nX4rKsnCcnv4Cz\",\"rJGeRSCjGzRuYfHZS\",\"Q6gEE9dG8ERy2Xu3c\",\"CLypXaZksY99mpRCm\",\"XpRh7W7jGst278HTG\",\"YRAzEBJoLvSaiPtYx\",\"Yg5KsgKxN3tWmuEKG\",\"BajWtLookqBgcwmyv\",\"9vP9Sg4nyzQT4ED9C\",\"Lg4t6SEWgtYz4u7Cj\",\"PBnvAuiKXwjqjKG33\",\"5XiuAqicKD4hBdu63\",\"AYZrBpxmaHxq9th3T\",\"wypdvuJQZB2TFyb2g\",\"RSTdK2S8CecymSS6h\",\"AXcnPX68zdMiLNSmu\",\"sX9GZp3fYyQLrBKMJ\",\"igLmeTgCMEPu7fQTd\",\"4airvwdXr4Xd5vgHK\",\"5HTSi5wQNAdLm57LB\",\"PnzR8TWfcT5QHrek8\",\"xNCLJDm9Bni6gByMz\",\"n93uwjdirjyRCRATo\",\"uN5t57RETi5y2z5W8\",\"Krto2sGMfGWBLcL7n\",\"JS3hNM3XXkxPdg3yk\",\"PhceyfmFntJcn5Fhf\",\"RCzpsCinz5SQnBAta\",\"CkcqajsaNu4nso9oY\",\"PC3pLs36zNzpRDSuE\",\"W9eswrEEzJHtrQbYW\",\"NzbRqGWspQnWMoDrF\",\"QTZTmQEmkPv5sxQL4\",\"ZLEFs8o3kMYTJNXNz\",\"36dvJFnYcnBitswoD\",\"WiJTeZQyye6A3jrbK\",\"GdKtjPh8TcfmJuduv\",\"nfXGHENb5md7m355s\",\"migNc2HGygHufcxYn\",\"yEvXDzXnEPNz6tTCK\",\"uzuMpnWZcTHfBBg4S\",\"s6qiPXptvyxxEy3vm\",\"jWbd7SYDzLPjc9EDh\",\"QC7hqZ5o4vjwNtxdo\",\"jcPZ5ySXseCB7Ec3x\",\"PAzNgJF54C2mYPkR9\",\"aeWT4KyiGvMDEypZY\",\"qAby4AWXmTNeusvg3\",\"2MjzJ7yxh3eT3xbng\",\"GqnEdzvEGRkgBxqHB\",\"Y9SPwnGra4STbviL4\",\"DpnYcMphntjsQ96qg\",\"AFfw7cGg83uYk2Miy\",\"PBn3fhAqsEqHEHq3E\",\"xGpqoGZ47sYLJ4ty9\",\"8AzQv3YSpi7FhFJWe\",\"mQjpf5TyF358J8Anz\",\"RosFXZYJkcRwjkaog\",\"ANbSYXiYsp4addoDq\",\"8PwfYqoDQFThzNtvf\",\"KYNLpiPWNcmn8jRTL\",\"ejXMnyXqd4R6GdKE9\",\"ZyrfhDTZHb8LymH5b\",\"dDFzTqzPhpkeTcG2b\",\"cuDePW8br5j6WcYSg\",\"jeuoearPPTcGPgXhf\",\"YTK48HPYMZfyn3eNb\",\"Pf5QSzdoXNmupqmZx\",\"DBKFm4dNgrseHCoiR\",\"7HAL7H6NJmc4NC8Q5\",\"5hQnRWiKkhgKJXNMP\",\"qkuvEvJycTXvF22cy\",\"SoRHbR9JnqHG8BZZ9\",\"MXGuntvz3byrP6WJc\",\"KEmTti9Tza8A2FLQW\",\"pPpmP7xeJzGgK362R\",\"v4nbGdoqJwuDBoocS\",\"mWisat26RQk7BkzSJ\",\"iY25XNrJX2giBLvnd\",\"7zd88coQRZm85KyBa\",\"Nw5Co4WxYtGovKnmA\",\"sEEGMKpzCXkopgoNL\",\"Ekj8DSj6gZmvtQwDy\",\"F7wta4nHmabMr9dfd\",\"buX4mCQhtXCfBjeno\",\"MyyfuAJrdaoBE2xGk\",\"7KsymxNN9S8ZG5oQe\",\"Wp5CZXqvjwTpt5SKN\",\"mDWNyaaQ9hvPCRzSd\",\"3cF6NXq3ZEwdkgSjb\",\"n8Hpw6qkYb3sB7mZz\",\"DTDokqAqTpqCsqPMe\",\"3sD2EHTzJEhwWusNS\",\"LQxof8pGabGuWP7Gn\",\"Gfjre5fz3AHYamm2e\",\"9CXi5HK6iB2LcFvEa\",\"fHeYpHLgzDPqcoDh6\",\"tjBQzFGPXK2TEXHax\",\"6nWk5au5i2GtLNtN3\",\"vCxuabDxEv9YC3Szb\",\"ffjnHrx8Ym7A7pQWe\",\"XeNskNoh5DcHuKTWX\",\"3MWMYhFn9ztCuyucb\",\"TMC4ezchHB32eJ8fr\",\"YMhEzJC7fnZWvwMx4\",\"6wjqF8ju5wkmQmpcF\",\"uo7MdTu2FWZhYE7nL\",\"iYXdNw7tKcgA3QwBX\",\"uCHbRbvS32u77caPs\",\"K3RacTvkWHLfzKF8i\",\"udPrCoSWY6sHT2qLp\",\"ghMkPtdFCpM6w8nax\",\"xLMuE3gi2h7QRdgCp\",\"eYfPWvZwnJQkHbSTK\",\"v647CD8GKNeTbqSH6\",\"sbKQ3pGDgv9BjxzDW\",\"Mw3dpDSr8pEsM2nXE\",\"di2hhADLx59Bj4ewM\",\"HqmxnQJM66Y57twhn\",\"7mqLZqiA5o7q96DJL\",\"T78CHCScDRZjf5Cjy\",\"LW8PqW4HFXWfoJGo6\",\"kXhoRk9QSj4qy3D2j\",\"Fk9kLwoG4Brf4KsKf\",\"TmM3AN7g3fkh69ycj\",\"q9FfWNiMDKRiaCJ5j\",\"YwAvPdqD6Xi2qjapZ\",\"gGXghWEN4u5vuoXcR\",\"eMuCpJ2spXWkJjWNz\",\"mxX4rH5ELYkdZ2Mbw\",\"HBuJYgW2eRBJp9FoG\",\"XD5nmvKQchKezPXhy\",\"zERid8pE9JnysiN5Q\",\"m2kfE6tTgty4vtWwg\",\"S6FmA9hRfExghscS4\",\"b8cX9sc3oXiAiaHMB\",\"pnkBesnLDfK7CfjNu\",\"oqPwBd5aaE5x6Ybbm\",\"TuGMFnbaaSmJ3N2qD\",\"LfGif7sGS3AjxwD4N\",\"YaybbCdfjFQmsfgtp\",\"GZgFDSZdgKBuixp22\",\"Nb6LYPoQP6KJZt8mz\",\"8QsRak96MNPfXHv8Z\",\"eBBSiBrLntfRfqRwF\",\"d8qtzoLB264iP8tdY\",\"ZMer84RtaKiXhLoeW\",\"M2gFMJkocQSY6bsFR\",\"cCFRcwA8Z4TCwsMGo\",\"exceoSarXSrE3v2im\",\"XrqNzJ2FRG8HnGiR6\",\"9pzFiFK3ANLjQfnr2\",\"m7KZ5donpz5F6AR3z\",\"xsDyJstYoBZRS8pJH\",\"CHvzhtXnv8HTbPQ56\",\"7dQYiDeTcMztbGyso\",\"7q8oBsCHwn48Ppnrq\",\"a777e8chPvJkY3tKa\",\"8EJ4j2fcfjTJ7Zrzu\",\"jNvegJWCk5HCtEMbK\",\"p8qqFdJ3FSk5x9z3G\",\"sbJcFfQjQ59Wfg4Cd\",\"2ptN2mhjFwFcHyPZd\",\"szQg8dxKNNre3v3Jk\",\"uvLimfW9x3bCp7huQ\",\"E8DcBnATah6GrjzYt\",\"LCuvvWMwiGuqTwNRi\",\"F6GsF4gLfNNd6di6x\",\"s5M5RvgqR9BhB9JoC\",\"2QGRoQn2dRq3scu7k\",\"m7hHWJrBub7ueaokh\",\"zC8WrPp5BC6c2exrW\",\"pwWtbXEjzuvrhEGwt\",\"kjvgTyRFyKHv44DcH\",\"oaJbwGAbtpgYhMEgd\",\"4bb7pim4ewTwrMTEA\",\"C5h42RTzbdrpPfeZo\",\"fdyejapW3NWN7utPX\",\"6LbPw9yW6HHDfn8B8\",\"DfHHpvnubuFmeNky9\",\"iojEnnY9FsMfYzp6f\",\"NrRa4TS6uZR9xuXRt\",\"NP2RxM3eBd3drnDwP\",\"JKbEBybAsiKrmcqof\",\"a2Kmh6ekWqQQooHiQ\",\"9qoWqLcHGiDX429rE\",\"SgPjF69J25jT3dn4X\",\"T6iBEE2jp7f7iEF2P\",\"66a9xX73nmTEuKs9k\",\"4TmgHkn5vqyHK3sYC\",\"wjc4iejpErBhxWwHo\",\"PhenZBBHnRwKnNmgg\",\"YZL9ec49hQdqcwu2j\",\"YmQb9Mo4Xcg2vzgbn\",\"x2Cz7S8rCKJqCE3Xe\",\"BrTDhPJcACL2bsrpJ\",\"9Ly8afdtofp8DXzrt\",\"mvJBakQ35CWAnbbEZ\",\"T6Rm8mREPMZSftzrC\",\"bvev65qfEqtrZtfj6\",\"iBHx7eL6anoBnF7yQ\",\"Cg3LKtEAJpsrdWroG\",\"FiaTpm7ehfDv43wSG\",\"FxbTzThBiTnRzfirA\",\"GJmKcqu7xppQyBaTt\",\"TiDFmxf3QEpbfXi4f\",\"DTyNcDkiScCjgJt28\",\"JiSpvq6C7azQEmENc\",\"AasGs8AeX9Lcb9xJn\",\"kqYkfcZMkp5u2EdXZ\",\"sHjfbGQGLHE6JR6qu\",\"hRfdHT8bWztZuCqzi\",\"hZ2JDAEG2P5rMLWEW\",\"cdXmwjupCXSvJTSNo\",\"fGQthgRWhpw3fXhzG\",\"TCvpT4EPb8qNssNB7\",\"Afnps7TJQuS9sipMb\",\"C9LKGu2g5hSijvDzA\",\"PTDFuxAzou7W6asWt\",\"pQwhNKiCne4gEZgcn\",\"54BFnXEjY3FuRNYpN\",\"j22fPdGZvaryte8j5\",\"gKnWjDjwrJh7MK2df\",\"9bQyb6rW7xfE4vgrR\",\"SkQcb2sRn4as5KpnN\",\"syRNbbPdLCGXbH2Gy\",\"9LghqktEpW4YLxdNk\",\"AQSqD9oNv2uPfxZCR\",\"5nbHH4eApn6So9h2n\",\"PmRyaLmhAF4MMLBtM\",\"aN6owKqBeZj7ZefFR\",\"9HPB28hBoTnZnspQE\",\"d9LBRxvADNBB5QJMB\",\"ecytnKJxjCPk8Kbif\",\"b7yQWr6eJFxYTmt3j\",\"8ynPy35NQFsnh4WqC\",\"gjiu8kLnHYxe4HoBN\",\"9LrF5o2TK2iE8BZJh\",\"uK58g2EXxqxTaB2iA\",\"fGvJRtjbJFJJZLCnW\",\"YZsZjfvd3PnLhDJrR\",\"B4y8aoyXJtskYPFEL\",\"gbGzZz5Yq5hT357v8\",\"5QN8R22z43SrwoHDz\",\"LWCzZ8mb8gwrRNGfq\",\"rhS8qXRjZcpDXkwnE\",\"dzS6WBTMHyFEag6Fp\",\"dqwatKFAeGpjmf5dm\",\"arWdYjT3J9QKzoPLd\",\"3SgSNoAB3sxaYeT3w\",\"rF97GDLqCgynr7BaD\",\"xjyixzXzqqqTfJARd\",\"afvP29FhRou2bTaav\",\"Ne8mK9DDHG8TRkoxG\",\"2qtde7moqrzm7B4Ht\",\"mw9464S5dnenqzvpm\",\"B4LpueSJhLDYMEQAW\",\"vAbK8sCfKyFC78HYg\",\"tR9grPBLncwacBTzr\",\"M4vq8ATaS9Jg5X7iP\",\"5H6WybGSZcsxZnLAW\",\"G5GDMsf9eAdib7cew\",\"fMp8sPsKSECdfgF9j\",\"CdXigydGTBLgA577m\",\"suArq5BbSy7gD6xri\",\"4sSXLSBZDxK2Swoo7\",\"PKu9i6fmR67WGCgad\",\"FT2wBacm3JxrYmZDW\",\"AwXQLqnTYzcCQrnqQ\",\"E45zy9qvm9DeJhDWL\",\"rQA9SE8nuwFueaHsR\",\"EE6qCDCRphjXXdE3n\",\"DhfJpC3Y72teNfiKE\",\"F8dA24AosSC8XXb7D\",\"cz3wdxxPWoedzT3LS\",\"QWjsXnLaJ7xfL3Amq\",\"sMcFMPkMJC4Kh6ymj\",\"4akHBgnDEDj3Rkv5n\",\"Si3HYCLMe8PM47rRt\",\"Wi4H6ayKsNDWWQCG5\",\"9kSvkZZMLXeH97aT7\",\"peCvTbjQBgdWo53Wv\",\"FMyZPN6odEFtfuimF\",\"YJqcXGoXCLXYW9WAS\",\"CTW3MRyc4wNkcjGZQ\",\"kJMAAWPWEG6qFouEh\"],\"total\":405},\"flags\":0},\"summary\":\"A student learning Python was trying to make a function that sorts all the letters of a word, but their code is broken, and they can't figure out why.\\n\\nSpot and fix the error(s) in the code to make the function work. As an added challenge for those who are more advanced, see if you can shrink (the fixed version of) the student's code down to only a single line\",\"tags\":[\"bugs\",\"language_fundamentals\",\"sorting\"],\"timestamp\":{\"$date\":1601045005745},\"title\":\"Fix the Broken Code\",\"family\":[{\"_id\":\"QQg9g2Z2Cfcctiv2e\",\"language\":\"cpp\"},{\"_id\":\"zct73iCmH3zZ4dcDY\",\"language\":\"javascript\"},{\"_id\":\"YrNKDhmWPsm735J8L\",\"language\":\"python3\"},{\"_id\":\"WmqSEL2uyXvpNZgFG\",\"language\":\"ruby\"}]}}"]