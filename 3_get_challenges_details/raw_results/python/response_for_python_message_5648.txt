a["{\"msg\":\"result\",\"id\":\"1533\",\"result\":{\"_id\":\"jJuMKJcS4TwoKA6Ju\",\"author\":\"Lógó\",\"authorId\":\"hRAd998MG8Jzdpxj6\",\"code\":\"def dial(txt):\\n\\t\",\"difficulty\":2.0833333333333335,\"familyId\":\"pxrqc9hJp4dPCffgi\",\"instructions\":\"You're able to call numbers like 1-800-flowers which replace the characters with the associated numbers on a cellular device keyboard.\\n\\n### Conversion\\n```\\nabc  = 2\\ndef  = 3\\nghi  = 4\\njkl  = 5\\nmno  = 6\\npqrs = 7\\ntuv  = 8\\nwxyz = 9\\n```\\n\\nThis is your task:\\n\\n- Create a function that takes a string as argument.\\n- Convert all letters to numbers by using a cellular device keyboard as reference and leave any other characters in.\\n- Return a string containing the argument with replaced letters.\\n\\n### Examples\\n```\\ndial(\\\"1-800-HOTLINEBLING\\\") ➞ \\\"1-800-468546325464\\\"\\n\\ndial(\\\"abc-def-ghi-jkl!!\\\") ➞ \\\"222-333-444-555!!\\\"\\n\\ndial(\\\"adgjmptw :)\\\") ➞ \\\"23456789 :)\\\"\\n```\\n\\n### Notes\\n- While when you would write a SMS back in the day, to enter \\\"b\\\", you would have to press \\\"2\\\" twice. When calling numbers this is not the case as the range a-c gets converted to \\\"2\\\".\\n- Given string can contain upper and lowercase letters.\\n- Enjoy and good luck!\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(dial(\\\"1-800-HOTLINEBLING\\\"), \\\"1-800-468546325464\\\")\\nTest.assert_equals(dial(\\\"hello-world!\\\"), \\\"43556-96753!\\\")\\nTest.assert_equals(dial(\\\"aaaabcccdefggg\\\"), \\\"22222222333444\\\")\\nTest.assert_equals(dial(\\\"01023468adghijgkmz?\\\"), \\\"010234682344454569?\\\")\\nTest.assert_equals(dial(\\\"SwApPeDcAsE\\\"), \\\"79277332273\\\")\\nTest.assert_equals(dial(\\\"VAPORWAVE\\\"), \\\"827679283\\\")\",\"language\":\"python3\",\"quality\":4.492307692307692,\"summary\":\"You're able to call numbers like 1-800-flowers which replace the characters with the associated numbers on a cellular device keyboard.\\n\\nConversion\\nabc  = 2\\ndef  = 3\\nghi  = 4\\njkl  = 5\\nmno  = 6\\npqrs = 7\\ntuv  = 8\\nwxyz = 9\\n\\nThis is your task:\\n\\nCreate a function that takes a string as argument.\\nConvert all letters to numbers by using a cellular device keyboard as r\",\"tags\":[\"arrays\",\"strings\",\"numbers\",\"formatting\",\"regex\"],\"timestamp\":{\"$date\":1605145958251},\"title\":\"String to Phone Number\",\"stats\":{\"completed\":{\"total\":180,\"ratings\":[2,2,2,2,2,0,2,2,2,2,3,1,2,3,3,2,2,1,3,2,2,2,2,2,0,1,0,3,0,2,2,2,3,2,3,3,3,2,0,2,2,3,3,1,0,2,3,2,1,2,3,1,2,3,1,1,3,3,3,2,3,2,2,3,2,3,3,0,3,3,1,3,1,3,3,3,3,1,0,2,2,2,3,2,5,2,1,3,1,3,1,1,1,3,2,3,2,2,3,0,3,2,0,3,3,3,3,5],\"quality\":[5,4,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,5,4,4,3,5,5,5,4,5,3,5,5,5,3,3,5,5,5,5,4,5,5,5,1,5,5,4,5,4,5,1,5,5,5,3,5,5,5,5,4,5,3,5,5],\"rators\":[\"QRv96jmNaYsWkxQEG\",\"J3upzLHuEwXH7Z2hx\",\"Yp7uvStL97cC9fKkY\",\"8PwfYqoDQFThzNtvf\",\"oBcs8GLX2ZFLXQy8y\",\"w2HhxvSLmDhaGCAjE\",\"s5M5RvgqR9BhB9JoC\",\"iS5BrkGLzJyPK7nKt\",\"Kd9cbANRqNspHmByA\",\"AvA5ezoh8m6mEEXhu\",\"eyiKHvr67TfP3CH8w\",\"6xTu4r8NMczBFvmtz\",\"gb9rvGus2Jv7bjZSs\",\"fEt44wgCuHfCdwebW\",\"gXTAie79kiw28tx5u\",\"DPi9QGLctq2y76KuE\",\"55RQznnuTGpsj3EXd\",\"nc7bRhkxgKyqusYe3\",\"aEm3Wvj2rFYRL8Lrb\",\"cAP3n5NY64uoMwzRR\",\"hNtC6BTygkPYknybs\",\"vCxuabDxEv9YC3Szb\",\"dkcmCKwqApX5jBggc\",\"3LiSLdtN58n46NEqg\",\"gJYuGdkXEWWmGRLzu\",\"tkXdQXRPd3hjBgP8T\",\"pLTBzLeWvcQjokFm8\",\"BzXdsgdrG4SGtBCjj\",\"6ZapS9L6t66jQCqxA\",\"SPYSWseH56TkTzKGf\",\"7ifh8r4gvyYMhKB94\",\"YSiCfyyQ6jYR8KSfi\",\"7scpcTEp3SEx5Wjg9\",\"JkcimYHcPxFggWXNE\",\"fnyu8WupsfqfvuA27\",\"f42SoFHva5vkzoa8X\",\"Ecg4m7srYGgZsb4Ck\",\"eFh8z7sMmxkrFWZv9\",\"PK7GNG3EmSzbSNcMq\",\"8ZhzKvdhsdKgpf6BT\",\"DNACg4rcgZsPtYGZ8\",\"R29kgJ9M7R4qqwjcE\",\"AynaqW4cmq9mcSC5T\",\"C5b7jdq5g5frHCqdJ\",\"NmsxAPWovzNcBJobu\",\"GT9wLv8Lipyp6YYTp\",\"w7c8yyuyvZQdS78TM\",\"DyjCBBvcoMytDxAr5\",\"no46qNkTbNeHepe64\",\"kEkNyqFARK9YBrhRx\",\"8BFSTCnoe2QggN64c\",\"dyttraPPE5x5hEYY7\",\"C8Gd66wwGagHmj2t8\",\"HF28xZKSLM9wEuqNg\",\"mmt7jwqbmSjzRSvqh\",\"ToRRiskrWqBYa5Ams\",\"35nqHqncj2j4KB36r\",\"AfeCf3kHh3vqh9rwe\",\"ByzrpqvwrBQLH53Fa\",\"8JyqsSbN2FJXPr3cw\",\"xumt4h8jvh7o4xkhr\",\"cgfDEGKJdk3LgrPDp\",\"C5FizLnRZoDtBrzra\",\"fznzd3qnvtbFkkizz\",\"EfxwqhYdapX3dMQC2\",\"RDdXanzLqFzuDF2uZ\",\"bCFd7cZ452eMP8Bip\",\"xAMuN7wh2uorXC9q2\",\"WgwMhf3FtH3SfGnC5\",\"mtRvHDpeLoSGBf8zC\",\"NWwBJH4HDjf7daNaZ\",\"YL9pqyCu8xsds8J49\",\"SouCpkX2MYokv3K9p\",\"MmhJQjY54sCovjFFd\",\"gBtn7gSMiSJtAGRoE\",\"2QziknsznNeMPRh3g\",\"Jqk2uJZZxEv5wZFze\",\"muQCKmimwtNAdS8rp\",\"EDvRSX49Nuhv7svqH\",\"voTGWGdbvAfAMcBts\",\"DDevhboRPEbQwcxun\",\"8nE8QHnFYsHCFebte\",\"qYDRywWRZdswy4b6e\",\"4DF38N8GMFwNTKutK\",\"fSQSHjW3e72MrWxbD\",\"AraFx3EGW7PsqMPWt\",\"ZJTBR5PYuKrEi8xcJ\",\"YcCLwitFMAEJSnxAW\",\"3nied3n8KG8RSNixH\",\"ggbLRzWYAShjFhNvP\",\"Ly2JtHfkTmgPmdJHE\",\"p7js9trz2zk2RorCR\",\"6to9pGNLxtmdeM8Je\",\"aCNWav8S8Try9RkC6\",\"a8ZhCFx7FcQHfEggd\",\"NtAgmhY2RuTFD9wvy\",\"PXAcsKkssS2yLyDv2\",\"SncicQuFBCThjQcKb\",\"YMBFrhTvTMrAvRYJR\",\"MKT7khMBGXzA22ykf\",\"gj87yXyoJxhoQLetq\",\"aaJWssCWfMa63XJng\",\"jQqahAQX57zz7PTMs\",\"h7AYpHzeEHe82mANw\",\"abCKW9EmBinFsr7KG\",\"PARDjDrwXvhpjRR9e\",\"NfMJuiBk6FN5Jc6ow\",\"rXHaxGq2FcJq9cLFM\",\"oT2kASFDvA5v2sv7n\",\"hnyhBFWwNCz9mDfSi\",\"HqmxnQJM66Y57twhn\",\"K6MfKMytoJJuSGewP\",\"As83XFL89deJfprRY\",\"MXGuntvz3byrP6WJc\",\"euPBBaYXyS8RBr9KB\",\"yjtdwc2AC4jA2RWtn\",\"DCY34cfeCDFan6BgQ\",\"yr822PZmmiDDenxpB\",\"n2BRY9X8899dcG8Bw\",\"xn7uGNKeAwPEkP9oA\",\"sbJcFfQjQ59Wfg4Cd\",\"wLy33CiXmg7Hfe74B\",\"zgoEhAyhrjnsSLPGw\",\"GGdmhAvxXhqhhibJN\",\"T2vhHPhRR96hRizq8\",\"Jq87qh4HJvE8yKcWt\",\"buX4mCQhtXCfBjeno\",\"cR3ibTMxLyEdDFCHY\",\"iojEnnY9FsMfYzp6f\",\"PytNZK9mNiRiZxPrm\",\"srJ34BaybkQh3qRkM\",\"FEYpu9RWysAgW3XnP\",\"Wpn95NqWxncQrwNgz\",\"2PufnQcsHsfymufX3\",\"ey3CASd6Je5LEJzfB\",\"rfyEkETeoS96QNH4e\",\"bvmTE46bfcM4ogj34\",\"PC3pLs36zNzpRDSuE\",\"4Lwjr34ypKNQNQCar\",\"RErqK2yM94wYyD2hk\",\"mDWNyaaQ9hvPCRzSd\",\"DEDniTrstQYGounXT\",\"J5T8gZqiZXFuFDTQ7\",\"qc9nhWL97XRSz3WRD\",\"AasGs8AeX9Lcb9xJn\",\"ifMypuMxBqAa3kzuS\",\"PWgzeK859suojbrRx\",\"tAF9Gf6PiGogbZuWs\",\"qzXAMXsHZGT8o5hTA\",\"ctbThYbufFCYbRK4f\",\"T6iBEE2jp7f7iEF2P\",\"o4ixjQGSaYqA2JoM4\",\"8sNv5PTHa7XQ8bNqR\",\"RoGGD5cpHb4ftdLDv\",\"yod5YhKtPqw2GfG9B\",\"JhX7jvtpwNyxcc39m\",\"eHcgvkTGsH7ZziqBo\",\"BrTDhPJcACL2bsrpJ\",\"Ds7L5bksw2QRHjrKL\",\"5HCu9Ydd86QgHDRNP\",\"Qyfyyw6oC4EHAndzo\",\"mvJBakQ35CWAnbbEZ\",\"d8qtzoLB264iP8tdY\",\"jkbavR2ATFJcpmo8M\",\"AQSqD9oNv2uPfxZCR\",\"h96caAS2Whbje6Lw3\",\"DQskEvAv5KiJDPtGF\",\"9pzFiFK3ANLjQfnr2\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"ckM4CHgAn9pcNAaSH\",\"language\":\"cpp\"},{\"_id\":\"2Ybd7gvXJQd5h5CMH\",\"language\":\"javascript\"},{\"_id\":\"ge3wQFrM5sCeccw5T\",\"language\":\"php\"},{\"_id\":\"jJuMKJcS4TwoKA6Ju\",\"language\":\"python3\"},{\"_id\":\"yhA2AS7xZZhHa4jxx\",\"language\":\"ruby\"}]}}"]