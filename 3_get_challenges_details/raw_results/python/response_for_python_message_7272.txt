a["{\"msg\":\"result\",\"id\":\"2342\",\"result\":{\"_id\":\"LM5d2b6YG5vXuYiME\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def can_enter_cave(x):\",\"difficulty\":3.7857142857142856,\"familyId\":\"EwvZNdqBhi5mZkeKo\",\"instructions\":\"You are playing a video game. Your screen can be represented as a 2D array, where `0`s represent **walkeable areas** and `1`s represent **unwalkeable areas**. You are currently searching for the entrance to a cave that is located on the right side of the screen. Your character starts anywhere in the leftmost column.\\n\\nCreate a function that determines if you can enter the cave. You can only move left, right, up, or down (not allowed to move diagonally).\\n\\nTo illustrate:\\n```\\n[\\n  [0, 0, 1, 1, 1, 0, 0, 0],\\n  [0, 0, 0, 0, 1, 0, 0, 0],\\n  [0, 0, 1, 0, 0, 0, 0, 0],\\n  [0, 0, 1, 1, 1, 1, 1, 0]\\n]\\n```\\nYou found the entrance! Function should output `True`.\\n\\n```\\n[\\n  [0, 0, 0, 1, 0, 0, 0, 0],\\n  [0, 0, 0, 1, 1, 0, 0, 0],\\n  [0, 0, 0, 0, 1, 1, 0, 0],\\n  [0, 0, 0, 1, 1, 1, 1, 0]\\n]\\n```\\nNope, keep looking. Function should output `False`.\\n\\n### Examples\\n```\\ncan_enter_cave([\\n  [0, 1, 1, 1, 0, 1, 1, 0],\\n  [0, 0, 1, 1, 0, 0, 0, 0],\\n  [0, 0, 0, 0, 1, 1, 1, 0],\\n  [0, 1, 1, 1, 1, 1, 1, 0]\\n]) ➞ False\\n\\n# You cannot walk diagonally!\\n\\n\\ncan_enter_cave([\\n  [0, 1, 1, 1, 0, 1, 1, 0],\\n  [0, 0, 1, 1, 0, 0, 0, 0],\\n  [1, 0, 0, 0, 0, 1, 0, 0],\\n  [1, 1, 1, 1, 1, 1, 1, 0]\\n]) ➞ True\\n\\n\\ncan_enter_cave([\\n  [0, 1, 1, 1, 1, 1, 1, 0],\\n  [0, 0, 0, 0, 1, 0, 0, 0],\\n  [0, 0, 1, 1, 1, 1, 1, 0],\\n  [0, 1, 1, 0, 0, 1, 1, 0]\\n]) ➞ False\\n```\\n\\n### Notes\\n- You are seeing the game screen from a birds-eye view. \\n- Another way of thinking about it: You can enter the cave if you can move from the **left** side of the screen to the **right** side by only walking up, down or right. \\n- The entrance is not necessarily the first square, you may have to search for it in the left hand column.\",\"lab\":\"Test.assert_equals(can_enter_cave([\\n[0, 0, 1, 1, 1, 0, 0, 0], \\n[0, 0, 0, 0, 1, 0, 0, 0], \\n[0, 0, 1, 0, 0, 0, 0, 0], \\n[0, 0, 1, 1, 1, 1, 1, 0]\\n]), True)\\n\\nTest.assert_equals(can_enter_cave([\\n[0, 0, 0, 1, 0, 0, 0, 0], \\n[0, 0, 0, 1, 1, 0, 0, 0], \\n[0, 0, 0, 0, 1, 1, 0, 0], \\n[0, 0, 0, 1, 1, 1, 1, 0]\\n]), False)\\n\\nTest.assert_equals(can_enter_cave([\\n[0, 1, 1, 1, 0, 1, 1, 0], \\n[0, 0, 1, 1, 0, 0, 0, 0], \\n[0, 0, 0, 0, 0, 1, 0, 0], \\n[0, 1, 1, 1, 1, 1, 1, 0]\\n]), True)\\n\\nTest.assert_equals(can_enter_cave([\\n[0, 1, 1, 1, 0, 1, 1, 0], \\n[0, 0, 1, 1, 0, 0, 0, 0], \\n[0, 0, 0, 1, 0, 1, 0, 0], \\n[0, 1, 1, 1, 1, 1, 1, 0]\\n]), False)\\n\\nTest.assert_equals(can_enter_cave([\\n[0, 1, 1, 1, 0, 1, 1, 0], \\n[0, 0, 1, 1, 0, 0, 0, 0], \\n[0, 0, 0, 0, 1, 1, 1, 0], \\n[0, 1, 1, 1, 1, 1, 1, 0]\\n]), False)\\n\\nTest.assert_equals(can_enter_cave([\\n[0, 1, 1, 1, 1, 1, 1, 0], \\n[0, 0, 0, 0, 0, 0, 0, 0], \\n[0, 0, 0, 0, 0, 1, 1, 0], \\n[0, 1, 1, 0, 0, 1, 1, 0]\\n]), True)\\n\\nTest.assert_equals(can_enter_cave([\\n[0, 1, 1, 1, 1, 1, 1, 0], \\n[0, 0, 0, 0, 1, 0, 0, 0], \\n[0, 0, 1, 1, 1, 1, 1, 0], \\n[0, 1, 1, 0, 0, 1, 1, 0]\\n]), False)\\n\\nTest.assert_equals(can_enter_cave([\\n[0, 1, 1, 1, 1, 1, 1, 0], \\n[0, 1, 0, 0, 1, 0, 0, 0], \\n[0, 0, 1, 0, 1, 1, 1, 0], \\n[0, 1, 1, 0, 0, 1, 1, 0]\\n]), False)\\n\\nTest.assert_equals(can_enter_cave([\\n[0, 1, 1, 1, 1, 1, 1, 1], \\n[0, 0, 0, 0, 1, 0, 0, 1], \\n[0, 0, 1, 0, 1, 0, 0, 0], \\n[0, 1, 1, 0, 0, 0, 1, 0]\\n]), True)\\n\\nTest.assert_equals(can_enter_cave([\\n[1, 0, 0, 0, 0, 0, 1, 0, 0], \\n[1, 0, 1, 1, 1, 0, 1, 0, 1], \\n[1, 0, 1, 0, 0, 0, 1, 0, 1], \\n[1, 0, 1, 0, 1, 1, 1, 0, 1],\\n[0, 0, 1, 0, 0, 0, 0, 0, 1]\\n]), True)\",\"language\":\"python3\",\"summary\":\"You are playing a video game. Your screen can be represented as a 2D array, where 0s represent walkeable areas and 1s represent unwalkeable areas. You are currently searching for the entrance to a cave that is located on the right side of the screen. Your character starts anywhere in the leftmost column.\\n\\nCreate a function that determines if you can enter the\",\"tags\":[\"arrays\",\"games\",\"functional_programming\"],\"timestamp\":{\"$date\":1554518275168},\"title\":\"Can You Enter the Cave?\",\"stats\":{\"completed\":{\"total\":55,\"ratings\":[5,5,5,5,5,5,5,5,5,5,4,3,5,4,4,2,3,2,0,5,3,5,5,4,5,5,4,5,5,0,5,2,5,5,5,1,5,3,3,4,3,4,4,4,4,0,3,3,5,4,5,2,1,4,1,4],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"yZvzB3qFb8pkHy4dg\",\"Jqk2uJZZxEv5wZFze\",\"8JyqsSbN2FJXPr3cw\",\"T3ZAuoMrJjvZwN55B\",\"tAF9Gf6PiGogbZuWs\",\"FkCM6nNgxYepHvWvM\",\"6W2GSzrYjMD9ANBFY\",\"WZxCpoREvQqJJ35bs\",\"WEsTtgWsLWeYmryTR\",\"MXjxGML2X75x64vJo\",\"AYaEkTWLMmfzpwejr\",\"BFNm9gacwba9KyLFW\",\"TNeZzxtobjFpR6BKr\",\"vjQizqDbKpjfHrvZA\",\"3SKmXhcLPPkmQhjip\",\"HqmxnQJM66Y57twhn\",\"wT5gGgvjKc5wz59AQ\",\"s5M5RvgqR9BhB9JoC\",\"hvJW4uG4QZ7jB6EuR\",\"FHSJnAYTbcsKFgeQa\",\"jDgJ2fdFS76TSorNc\",\"BEAA3juw8TQHkhexv\",\"8PwfYqoDQFThzNtvf\",\"aCNWav8S8Try9RkC6\",\"Goq7zgSiMP4LQFGbJ\",\"DBrKnByJJe3A3udZ9\",\"oCowgWfkwQR4jnyEd\",\"aEm3Wvj2rFYRL8Lrb\",\"Nua6T3dBurBy3Qfg9\",\"XEdKC996fR3482H7v\",\"DwetpbChQM4r6Gwah\",\"nPfdEqn8RZmDzAeMW\",\"vTfyrr4pGddp8rbXc\",\"mDWNyaaQ9hvPCRzSd\",\"fznzd3qnvtbFkkizz\",\"W5TajitmCyxz87zAC\",\"tZnAkGkxNtBoS49R2\",\"aqYgRpDiAKsySWLKn\",\"5qpAGt7e3P89JJvNe\",\"gJYuGdkXEWWmGRLzu\",\"xn7uGNKeAwPEkP9oA\",\"AW6dT7votojqC9voG\",\"d6iEb2BDDofyeePh9\",\"Cia25zjeX3RkCNx5t\",\"eHcgvkTGsH7ZziqBo\",\"iS5BrkGLzJyPK7nKt\",\"8sNv5PTHa7XQ8bNqR\",\"yod5YhKtPqw2GfG9B\",\"yjtdwc2AC4jA2RWtn\",\"tkRuKMWxoSyTXnvbb\"],\"quality\":[4,5,4,5]},\"tests\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.5,\"family\":[{\"_id\":\"BHoKBE6igXihQ6Jan\",\"language\":\"cpp\"},{\"_id\":\"CP5zy4iLZzNy2KFcN\",\"language\":\"javascript\"},{\"_id\":\"LM5d2b6YG5vXuYiME\",\"language\":\"python3\"},{\"_id\":\"KHn9sxBCvtLJqPrAq\",\"language\":\"ruby\"}]}}"]