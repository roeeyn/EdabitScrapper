a["{\"msg\":\"result\",\"id\":\"2068\",\"result\":{\"_id\":\"zeuvB4YRvu47w8e8f\",\"author\":\"MyName\",\"authorId\":\"P7NmFbCJ5offXMRvB\",\"code\":\"def full_cycle(lst):\\n\\t\",\"difficulty\":2.938775510204082,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"4sBsccvBYJu8gbtex\",\"instructions\":\"Say you want to traverse a list of integers starting at the first item and using each value as a pointer of what item to visit next. For example, you would traverse the list `[1, 4, 3, 0, 2]` in the following manner:\\n\\n![List](https://edabit-challenges.s3.amazonaws.com/gAbF8Rs.png)\\n\\nBecause you visit every item once and go back to the starting point, the list `[1, 4, 3, 0, 2]` is a \\\"full cycle\\\".\\n\\nCreate a function that returns `True` if the input list is a full cycle, or `False` otherwise.\\n\\n### Examples\\n```\\nfull_cycle([1, 4, 3, 0, 2]) ➞ True\\n\\nfull_cycle([1, 4, 0, 3, 2]) ➞ False\\n\\nfull_cycle([5, 3, 4, 2, 0, 1]) ➞ True\\n```\\n\\n### Notes\\nTest lists won't include any negative integers.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(full_cycle([0, 1]), False)\\nTest.assert_equals(full_cycle([1, 0]), True)\\nTest.assert_equals(full_cycle([2, 1, 0]), False)\\nTest.assert_equals(full_cycle([2, 0, 1]), True)\\nTest.assert_equals(full_cycle([1, 1, 2]), False)\\nTest.assert_equals(full_cycle([1, 2, 0, 3]), False)\\nTest.assert_equals(full_cycle([1, 4, 0, 0, 2]), False)\\nTest.assert_equals(full_cycle([3, 0, 4, 2]), False)\\nTest.assert_equals(full_cycle([3, 2, 0, 1]), True)\\nTest.assert_equals(full_cycle([3, 2, 0, 1, 3]), False)\\nTest.assert_equals(full_cycle([4, 1, 2, 3, 0]), False)\\nTest.assert_equals(full_cycle([2, 0, 4, 1, 3]), True)\\nTest.assert_equals(full_cycle([1, 3, 4, 0, 5, 2]), False)\\nTest.assert_equals(full_cycle([1, 5, 4, 2, 0, 3]), True)\\nTest.assert_equals(full_cycle([1, 5, 4, 2, 0, 3, 6]), False)\\nTest.assert_equals(full_cycle([2, 4, 6, 3, 1, 6, 0, 5]), False)\\nTest.assert_equals(full_cycle([6, 8, 3, 0, 2, 7, 4, 1, 5]), False)\\nTest.assert_equals(full_cycle([2, 8, 5, 9, 1, 3, 7, 4, 0, 6]), True)\\nTest.assert_equals(full_cycle([2, 17, 7, 19, 18, 9, 5, 15, 16, 8, 11, 6, 14, 4, 3, 13, 0, 12, 1, 10]), True)\\nTest.assert_equals(full_cycle([21, 18, 19, 14, 8, 0, 9, 2, 1, 3, 7, 4, 5, 10, 13, 12, 6, 17, 11, 15, 20, 16]), False)\",\"language\":\"python3\",\"quality\":3.5,\"stats\":{\"completed\":{\"ratings\":[4,4,4,4,4,5,3,5,4,3,4,3,0,1,1,1,4,2,2,4,5,3,3,3,3,3,3,5,2,3,1,4,3,5,2,2,2,3,3,0,5,0,5,2,0,3,3,1,5],\"quality\":[2,5],\"rators\":[\"8PwfYqoDQFThzNtvf\",\"s5M5RvgqR9BhB9JoC\",\"iS5BrkGLzJyPK7nKt\",\"tAF9Gf6PiGogbZuWs\",\"hkiz2Nv927cYGrA86\",\"mDWNyaaQ9hvPCRzSd\",\"eHcgvkTGsH7ZziqBo\",\"GGdmhAvxXhqhhibJN\",\"8sNv5PTHa7XQ8bNqR\",\"yr822PZmmiDDenxpB\",\"yjtdwc2AC4jA2RWtn\",\"2PufnQcsHsfymufX3\",\"wwMcJQRvf3X59Jyev\",\"hcAeJ5mhA7KTA6wkd\",\"4sHkH3t9CJYhbDwjM\",\"tNwn9fDi38RLz3PQd\",\"MXjxGML2X75x64vJo\",\"oXJbZzDbT6N2qgqR3\",\"SGhPxX5bHGL8zZqtt\",\"gJYuGdkXEWWmGRLzu\",\"owtzvEJR4ynYrBd3P\",\"WHKXDHkauBJf6ji5j\",\"hjz6kxzENmSHJjQRE\",\"DPi9QGLctq2y76KuE\",\"bJaPCBx63YxdJAuTS\",\"ioQJqjMAixej8QkDc\",\"AasGs8AeX9Lcb9xJn\",\"D3Pr2EFee3652zsyR\",\"RErqK2yM94wYyD2hk\",\"XTuxCoKrN9DZ7zaQx\",\"ctbThYbufFCYbRK4f\",\"J23RcmzbdtBbPCTjT\",\"SbGLSZ5piLATC8bop\",\"jPodEnpx7AwWpCpCa\",\"Hx8ABi9dWW9bctRSo\",\"KPSug3F8RprfjxpTH\",\"coQXdTxwFSTPWSZLT\",\"ECpjKM58LJMYNMGJZ\",\"bCFecqKyXTCnGgPSc\",\"8ZbYm4BhwdTcyzRLb\",\"5HH239FpCsu6fTr5R\",\"yhPBcN6xM7xdZJH9x\",\"Lomwx2iBrGLZhHjCi\",\"rhS8qXRjZcpDXkwnE\",\"aEm3Wvj2rFYRL8Lrb\",\"3ECtWEiKJnjea5mQ6\"],\"total\":49},\"flags\":0},\"summary\":\"Say you want to traverse a list of integers starting at the first item and using each value as a pointer of what item to visit next. For example, you would traverse the list [1, 4, 3, 0, 2] in the following manner:\\n\\nList\\n\\nBecause you visit every item once and go back to the starting point, the list [1, 4, 3, 0, 2] is a \\\"full cycle\\\".\\n\\nCreate a function that ret\",\"tags\":[\"algorithms\",\"validation\"],\"timestamp\":{\"$date\":1612107318376},\"title\":\"Is This a Full Cycle?\",\"family\":[{\"_id\":\"Mp2prCwnqpe43WMmD\",\"language\":\"cpp\"},{\"_id\":\"GigpsoatHLXPXrCXS\",\"language\":\"javascript\"},{\"_id\":\"zeuvB4YRvu47w8e8f\",\"language\":\"python3\"},{\"_id\":\"Pws8FXzKfboRC7Lyz\",\"language\":\"ruby\"}]}}"]