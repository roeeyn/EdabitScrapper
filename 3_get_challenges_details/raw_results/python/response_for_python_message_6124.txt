a["{\"msg\":\"result\",\"id\":\"1773\",\"result\":{\"_id\":\"hoxv8zaQJNMWJqnt3\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"def is_heteromecic(n):\\n\\t# your recursive solution here\",\"difficulty\":2.340659340659341,\"quality\":4.333333333333333,\"familyId\":\"nCtWyzLBsiGKFgE3c\",\"instructions\":\"A **pronic** number (or otherwise called as **heteromecic**) is a number which is a *product of two consecutive integers*, that is, a number of the form `n(n + 1)`. Create a function that determines whether a number is pronic or not.\\n\\n### Examples\\n```\\nis_heteromecic(0) ➞ True\\n# 0 * (0 + 1) = 0 * 1 = 0\\n\\nis_heteromecic(2) ➞ True\\n# 1 * (1 + 1) = 1 * 2 = 2\\n\\nis_heteromecic(7) ➞ False\\n\\nis_heteromecic(110) ➞ True\\n# 10 * (10 + 1) = 10 * 11 = 110\\n\\nis_heteromecic(136) ➞ False\\n\\nis_heteromecic(156) ➞ True\\n```\\n\\n### Notes\\n- You are expected to solve this challenge via **recursion**.\\n- You can check on the **Resources** tab for more details about *recursion*.\\n- An **iterative** version of this challenge can be found via this [link](https://edabit.com/challenge/Rbs2G5PaJtmYdLTJM).\",\"isHidden\":false,\"lab\":\"from inspect import getsource\\nfrom re import findall, MULTILINE\\n\\ndef check_recursive(fn):\\n  try:\\n    src, n = getsource(fn), fn.__name__\\n    if n == '<lambda>': n = src.split('=')[0].strip()\\n    return len(findall(n, src, flags=MULTILINE)) > 1\\n  except OSError: return True\\n\\nTest.assert_not_equals(check_recursive(is_heteromecic), False, 'Recursion is required!')\\n\\nnum_vector, res_vector = [\\n  [0, 2, 7, 110, 136, 156, 182, 218, 250, 272, 306, 362, 380, 422, 462, 600],\\n  [True, True, False, True, False, True, True, False, False, True, True, False, True, False, True, True]\\n]\\nfor i, n in enumerate(num_vector): Test.assert_equals(is_heteromecic(n), res_vector[i])\",\"language\":\"python3\",\"summary\":\"A pronic number (or otherwise called as heteromecic) is a number which is a product of two consecutive integers, that is, a number of the form n(n + 1). Create a function that determines whether a number is pronic or not.\\n\\nExamples\\nis_heteromecic(0) ➞ True\\n0 * (0 + 1) = 0 * 1 = 0\\n\\nis_heteromecic(2) ➞ True\\n1 * (1 + 1) = 1 * 2 = 2\\n\\nis_heteromecic(7) ➞ False\\n\\nis_\",\"tags\":[\"recursion\",\"numbers\",\"math\",\"validation\"],\"timestamp\":{\"$date\":1601825522859},\"title\":\"Recursion: Pronic Number\",\"stats\":{\"completed\":{\"total\":115,\"ratings\":[4,4,4,4,4,4,5,3,5,2,0,0,2,2,0,0,1,2,3,1,4,4,3,4,4,0,2,2,2,2,0,2,3,0,3,2,2,3,4,1,2,1,2,3,3,4,1,5,3,4,1,0,4,1,4,2,2,2,3,1,2,3,3,2,3,0,2,3,3,2,4,3,2,1,3,2,3,4,1,2,3,3,4,0,1,2,2,0,2,2,1],\"quality\":[5,5,4,5,2,5,5,5,5,5,5,1,5,5,1,5,5,5,5,4,3,4,5,5],\"rators\":[\"a777e8chPvJkY3tKa\",\"8PwfYqoDQFThzNtvf\",\"s5M5RvgqR9BhB9JoC\",\"6428wKHtwKkFdvBs5\",\"4fhjJBvLBWh6QeSih\",\"aEm3Wvj2rFYRL8Lrb\",\"EwTSrSrp4Wo4CxHZR\",\"hZW6j5s6RHpx35phy\",\"FvFhg2wELM3SCZDZQ\",\"Dj2h7DqoTmKZdoyE8\",\"94M7T5qwC5KGCzE9R\",\"yjtdwc2AC4jA2RWtn\",\"8JyqsSbN2FJXPr3cw\",\"uZJqBoqeZRX3RncAR\",\"8sNv5PTHa7XQ8bNqR\",\"gJYuGdkXEWWmGRLzu\",\"5dHucvf2qBYyKim7X\",\"Bu4uGeo4jjuyFi29D\",\"qYDRywWRZdswy4b6e\",\"Ecg4m7srYGgZsb4Ck\",\"Xk2g4CNFAnYcvxiSr\",\"6XBFEzEaMxZbYJwJS\",\"xtEQnmTdT8sBF8zE6\",\"QRv96jmNaYsWkxQEG\",\"R29kgJ9M7R4qqwjcE\",\"hXoTNPPmJLzkZnkSX\",\"FEYpu9RWysAgW3XnP\",\"tkdRHAExhDq8ryDJT\",\"gb9rvGus2Jv7bjZSs\",\"zd9FLSzsGz3evKafy\",\"LW8PqW4HFXWfoJGo6\",\"WPf3wuMaAipBActzR\",\"HqmxnQJM66Y57twhn\",\"h4x2jaMdj5aQZbW5g\",\"buX4mCQhtXCfBjeno\",\"DPi9QGLctq2y76KuE\",\"yr822PZmmiDDenxpB\",\"n2BRY9X8899dcG8Bw\",\"gXTAie79kiw28tx5u\",\"hkiz2Nv927cYGrA86\",\"pfbrH83s66L2EZQsH\",\"iojEnnY9FsMfYzp6f\",\"Hhvy3EGqWBXt3nFPA\",\"3LiSLdtN58n46NEqg\",\"Bmb3scffZ5SujLMmd\",\"eRCTB3dBvKEnzwmu2\",\"KXnxMWSphrE8hsvyG\",\"AvoAjihKNKHv3mi2P\",\"cmwasetrBzbwJQbks\",\"yf7bsNNnmrSRHAqTg\",\"w5rLyY2Gv3PWKNGjo\",\"WTFRXv3SRcRynZKsm\",\"pjABtai3pWqgATpnf\",\"bxrb3Pvro3Ze62mmZ\",\"TycN8f8DMChn88o3K\",\"RMyCPuEbxd6D9995d\",\"zza5WjC8QrHcoDZBF\",\"mfm3gB39arY8Rjb2y\",\"5RSn8vPgtnqtey2Dy\",\"aiPq9uFZGF8FDEZz8\",\"Yp7uvStL97cC9fKkY\",\"xn7uGNKeAwPEkP9oA\",\"AasGs8AeX9Lcb9xJn\",\"oBcs8GLX2ZFLXQy8y\",\"wZ22E8EXW4qasgru2\",\"yhPBcN6xM7xdZJH9x\",\"o4qMH3METbS8iqtCS\",\"2PufnQcsHsfymufX3\",\"XHShZ3WMPgGEA2vkR\",\"fbr22rabEJMfBp7vD\",\"zCfzr5XMbspNW6kXH\",\"SPi5SAFPXJALiJEjt\",\"dNBGNMKLZam4bvHuZ\",\"jqoBFH3gHpvmxLmK3\",\"NKqhz4TdE9JG9yo9a\",\"hz2QwMJdGhwXx7sdr\",\"fQyXWtbpFgFH38AAs\",\"88koJRCYvEbG8uNuy\",\"fnjpoeXvynm895ozx\",\"EYuBD4oczxfaRvFQg\",\"tAF9Gf6PiGogbZuWs\",\"iK6HWwdQn9s9fP3yq\",\"GShFyQvHxf7W5jj3A\",\"xBQC5uQdx6WndJ3iM\",\"PH32cNxBjrK4a28sn\",\"uGuS9YRXW2nj4p6zf\",\"9izxzCBrsRCbD9ajK\",\"H9KZi2cjt4FwH7qog\",\"2iFe3EHEH2YdhSKrs\",\"8ocTwgZXFLA3BL22L\",\"W2yLaxgMzNPgjLvy2\",\"aR8QMtScGsMaeQiPD\",\"fznzd3qnvtbFkkizz\",\"tvXbjYMfHY9E4DAhY\",\"kPB8KfCjPQxGYGBPt\",\"gdndm3hHunARcYWow\",\"DQCt4iuj2pdQ7LPAX\",\"suaEBYJRrEGzyWnku\",\"6Sg2kqvr9zF2hnqDB\",\"NuAn6bJCEd94cv4aT\",\"ofZWizfvncXepCJ8M\",\"qNszsXx28cTxvGSNj\",\"ZdbFXtMrYxaoAs6zT\",\"o73StZDh6ENXXWRjS\",\"brSgnW79htmFs8oFr\",\"rhS8qXRjZcpDXkwnE\",\"gKnWjDjwrJh7MK2df\",\"yod5YhKtPqw2GfG9B\",\"gpGXTvjS2HrY9Skq5\",\"Jqk2uJZZxEv5wZFze\"]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"v6QmCNrboDPYavd43\",\"language\":\"cpp\"},{\"_id\":\"BfLgSs2YAtjDYEyJM\",\"language\":\"java\"},{\"_id\":\"rtYE79GzaQp4RccFC\",\"language\":\"javascript\"},{\"_id\":\"hoxv8zaQJNMWJqnt3\",\"language\":\"python3\"},{\"_id\":\"NrBKf4XQdLuXkuxCr\",\"language\":\"ruby\"}]}}"]