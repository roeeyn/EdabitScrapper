a["{\"msg\":\"result\",\"id\":\"1172\",\"result\":{\"_id\":\"aiSKWWjjxTeJTqxZL\",\"author\":\"Luis Pereira\",\"authorId\":\"aEm3Wvj2rFYRL8Lrb\",\"code\":\"def complete_square(lst):\\n\\t\",\"difficulty\":1.6153846153846154,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"eijGC9SRHbvtA6snn\",\"instructions\":\"Sadly, the mathematical world is biased in favor of square matrices. As such, this challenge will help rectangular matrices by making them square.\\n\\nFor example, for the matrix:\\n\\n```\\n[\\n  [1, 2],\\n  [3, 4],\\n  [5, 6]\\n]\\n```\\n\\nThis can be done by padding it with a column of zeroes on the right to get:\\n\\n```\\n[\\n  [1, 2, 0],\\n  [3, 4, 0],\\n  [5, 6, 0]\\n]\\n```\\n\\nWhile for the matrix:\\n\\n```\\n[\\n  [1, 2, 3, 4],\\n  [5, 6, 7, 8]\\n]\\n```\\n\\nOne can pad it with two rows of zeros at the bottom to get:\\n\\n```\\n[\\n  [1, 2, 3, 4],\\n  [5, 6, 7, 8],\\n  [0, 0, 0, 0],\\n  [0, 0, 0, 0]\\n]\\n```\\n\\nWrite a function that pads a rectangular matrix with zeros on the right or at the bottom to make it square.\\n\\n\\n### Examples\\n```\\ncomplete_square([\\n  [2, 5]\\n]) ➞ [\\n  [2, 5],\\n  [0, 0]\\n]\\n\\ncomplete_square([\\n  [2, 5],\\n  [1, 7]\\n]) ➞ [\\n  [2, 5],\\n  [1, 7]\\n]\\n\\ncomplete_square([\\n  [1, 2],\\n  [3, 4],\\n  [5, 6]\\n ]) ➞ [\\n  [1, 2, 0],\\n  [3, 4, 0],\\n  [5, 6, 0]\\n]\\n ```\\n\\n### Notes\\n- Matrices should be padded on the right or at the bottom, but not both simultaneously (i.e. the size of the biggest direction shouldn't change).\\n- If the input is already a square matrix, just return that matrix.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(complete_square(\\n[[2, 5]]),\\n[[2, 5],\\n [0, 0]])\\n\\nTest.assert_equals(complete_square(\\n[[2, 5],\\n [1, 7]]),\\n[[2, 5],\\n [1, 7]])\\n \\nTest.assert_equals(complete_square(\\n[[1, 2],\\n [3, 4],\\n [5, 6]]),\\n[[1, 2, 0],\\n [3, 4, 0],\\n [5, 6, 0]])\\n \\nTest.assert_equals(complete_square(\\n[[1, 2, 3, 4],\\n [5, 6, 7, 8]]),\\n[[1, 2, 3, 4],\\n [5, 6, 7, 8],\\n [0, 0, 0, 0],\\n [0, 0, 0, 0]])\\n \\nTest.assert_equals(complete_square(\\n[[1, 2, 3, 2, 1],\\n [5, 6, 7, 6, 5]]),\\n[[1, 2, 3, 2, 1],\\n [5, 6, 7, 6, 5],\\n [0, 0, 0, 0, 0],\\n [0, 0, 0, 0, 0],\\n [0, 0, 0, 0, 0]])\\n\\nTest.assert_equals(complete_square(\\n[[1, 8, 9],\\n [3, 6, 7],\\n [5, 4, 5],\\n [7, 2, 3],\\n [9, 0, 1]]),\\n[[1, 8, 9, 0, 0],\\n [3, 6, 7, 0, 0],\\n [5, 4, 5, 0, 0],\\n [7, 2, 3, 0, 0],\\n [9, 0, 1, 0, 0]])\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,1,1,2,1,1,2,2,2,1,2,3,0,2,2,2,5,2,2,2,2,2,1,2,1,2,2,2,2,1,2,2,0,1,2,3,2,2,2,2,2,1,0,2,2,2,0,3,4,0,1,2,3,2,2,2,2,3,0,2,2,1,2,1,2,3,2,2,1,0,2,1,1,0,0,0,2,2,2,1,0,2,2,2,1,2,1],\"rators\":[\"aEm3Wvj2rFYRL8Lrb\",\"cR3ibTMxLyEdDFCHY\",\"AasGs8AeX9Lcb9xJn\",\"DEDniTrstQYGounXT\",\"ZNnsMeNkdDhHjSrZb\",\"dGBcJQX52gopvZvDE\",\"JZbBYihgT6m7bKvgc\",\"2fxapKr8XGdNeaKi2\",\"8JyqsSbN2FJXPr3cw\",\"8PwfYqoDQFThzNtvf\",\"Yp7uvStL97cC9fKkY\",\"9uZpgAtSuPZ7W7DL6\",\"gb9rvGus2Jv7bjZSs\",\"9pzFiFK3ANLjQfnr2\",\"vLrq4dEDMM2wd68Dc\",\"J5T8gZqiZXFuFDTQ7\",\"jNvegJWCk5HCtEMbK\",\"s5M5RvgqR9BhB9JoC\",\"tAF9Gf6PiGogbZuWs\",\"Ro3ppqamSxiJv2wxP\",\"hnyhBFWwNCz9mDfSi\",\"yZvzB3qFb8pkHy4dg\",\"dHZqT6h4JMwk5fPC8\",\"HF28xZKSLM9wEuqNg\",\"KdNDysEsy2TW5QRJ2\",\"rTuoyp6yzy6oGtx7u\",\"rgvAJFwfCeYoYnFTK\",\"ENsSYogEHHeDSrFod\",\"orFLgPDw9H5MDzmwo\",\"hab8YixsXxe4CcZpP\",\"TR5aWdDKP6iaL6mGK\",\"ahk2qiXKJA753wAJk\",\"pDvFWMCD9fQwoBPcu\",\"JS3hNM3XXkxPdg3yk\",\"Sg3oaeSYhkEGFgYtZ\",\"bJxaKHJqR82EWw8Su\",\"GEvSGXDkk7pACfYri\",\"4rwxLqLs2mNZNg8NB\",\"NG8PWBSjsM8mMhQEq\",\"iojEnnY9FsMfYzp6f\",\"syRNbbPdLCGXbH2Gy\",\"hRiMXDZNAzyPd5tpt\",\"ZrKCkX7xxGGZzauFW\",\"Pe8vWpDHRuH9nSGKW\",\"yjtdwc2AC4jA2RWtn\",\"HqmxnQJM66Y57twhn\",\"jNE5AHcJQWXz7efuP\",\"H9KZi2cjt4FwH7qog\",\"Ecg4m7srYGgZsb4Ck\",\"wmrQRvKKNT2YE4aYi\",\"YcCLwitFMAEJSnxAW\",\"w2HhxvSLmDhaGCAjE\",\"oBcs8GLX2ZFLXQy8y\",\"tpxMgkGSHwBjS95Ta\",\"qD2LrwaDrSdiybLKY\",\"hXoTNPPmJLzkZnkSX\",\"mxX4rH5ELYkdZ2Mbw\",\"DPi9QGLctq2y76KuE\",\"p8qqFdJ3FSk5x9z3G\",\"dYPkStFnLvAMsHSzZ\",\"iS5BrkGLzJyPK7nKt\",\"shdSrDq5ZKqfpgjmu\",\"5XiuAqicKD4hBdu63\",\"cZccqzRQ9GgjQF6Az\",\"cAP3n5NY64uoMwzRR\",\"zd9FLSzsGz3evKafy\",\"FEYpu9RWysAgW3XnP\",\"RGMbFMZXJr7DhcAJy\",\"PXAcsKkssS2yLyDv2\",\"J3upzLHuEwXH7Z2hx\",\"Jqk2uJZZxEv5wZFze\",\"5hQnRWiKkhgKJXNMP\",\"dBzwBtRjZqB98DJeB\",\"QRv96jmNaYsWkxQEG\",\"5S9nX4rKsnCcnv4Cz\",\"buX4mCQhtXCfBjeno\",\"AFJTgLaPrtbqSvh7b\",\"eYfPWvZwnJQkHbSTK\",\"7Aa8kR9AFWxznnwGc\",\"zgoEhAyhrjnsSLPGw\",\"sD58aTnGY6XnaGdo2\",\"GGdmhAvxXhqhhibJN\",\"JhX7jvtpwNyxcc39m\",\"qAby4AWXmTNeusvg3\",\"srJ34BaybkQh3qRkM\",\"Ds7L5bksw2QRHjrKL\",\"icvza9EsEEeu44gTA\",\"o4ixjQGSaYqA2JoM4\",\"eMuCpJ2spXWkJjWNz\",\"5HCu9Ydd86QgHDRNP\",\"PC3pLs36zNzpRDSuE\",\"yr822PZmmiDDenxpB\",\"AJexRBN9cYQmqvYu6\",\"T6iBEE2jp7f7iEF2P\",\"PH32cNxBjrK4a28sn\",\"d8qtzoLB264iP8tdY\",\"yod5YhKtPqw2GfG9B\",\"BrTDhPJcACL2bsrpJ\",\"Cy34THXNefcoyNNY4\",\"dzS6WBTMHyFEag6Fp\",\"CHvzhtXnv8HTbPQ56\",\"2PufnQcsHsfymufX3\",\"ey3CASd6Je5LEJzfB\",\"4Lwjr34ypKNQNQCar\",\"3nied3n8KG8RSNixH\",\"4TmgHkn5vqyHK3sYC\",\"Wi4H6ayKsNDWWQCG5\"],\"total\":113,\"quality\":[5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5]},\"flags\":0},\"summary\":\"Sadly, the mathematical world is biased in favor of square matrices. As such, this challenge will help rectangular matrices by making them square.\\n\\nFor example, for the matrix:\\n\\n[\\n  [1, 2],\\n  [3, 4],\\n  [5, 6]\\n]\\n\\nThis can be done by padding it with a column of zeroes on the right to get:\\n\\n[\\n  [1, 2, 0],\\n  [3, 4, 0],\\n  [5, 6, 0]\\n]\\n\\nWhile for the matrix:\\n\\n[\\n  [1,\",\"tags\":[\"arrays\",\"language_fundamentals\",\"logic\"],\"timestamp\":{\"$date\":1586481275429},\"title\":\"Complete the Square (Matrix)\",\"quality\":4.9523809523809526,\"family\":[{\"_id\":\"CP7byY8i4CASer7Ww\",\"language\":\"cpp\"},{\"_id\":\"RcDBnBJwZfg8oDiB4\",\"language\":\"javascript\"},{\"_id\":\"aiSKWWjjxTeJTqxZL\",\"language\":\"python3\"},{\"_id\":\"mC5Es9qHowKKcbAtv\",\"language\":\"ruby\"}]}}"]