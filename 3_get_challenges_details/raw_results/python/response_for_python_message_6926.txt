a["{\"msg\":\"result\",\"id\":\"2171\",\"result\":{\"_id\":\"eHwd6medMrY3QXM8k\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"def is_consecutive(s):\\n\\t\",\"difficulty\":3.2982456140350878,\"familyId\":\"Fush7Zo8XcmSLrqso\",\"instructions\":\"Write a function that will return `True` if a given string (divided and grouped into a size) will contain a set of **consecutive** numbers (regardless of orientation: whether **ascending** or **descending**), otherwise, return `False`.\\n\\n### Examples\\n```\\nis_consecutive(\\\"121314151617\\\") ➞ True\\n# Contains a set of consecutive ascending numbers\\n# if grouped into 2's : 12, 13, 14, 15, 16, 17\\n\\nis_consecutive(\\\"123124125\\\") ➞ True\\n# Contains a set of consecutive ascending numbers\\n# if grouped into 3's : 123, 124, 125\\n\\nis_consecutive(\\\"32332432536\\\") ➞ False\\n# Regardless of the grouping size, the numbers can't be consecutive.\\n\\nis_consecutive(\\\"326325324323\\\") ➞ True\\n# Contains a set of consecutive descending numbers\\n# if grouped into 3's : 326, 325, 324, 323\\n\\nis_consecutive(\\\"667666\\\") ➞ True\\n# Consecutive descending numbers: 667 and 666.\\n\\nis_consecutive(\\\"999897959493\\\") ➞ False\\n```\\n\\n### Notes\\n- A **number** can consist of any number of digits, so long as the numbers are **adjacent** to each other, and the string has **at least two** of them.\\n- A **recursive** version of this challenge can be found via this [link](https://edabit.com/challenge/Ym27MyQQMRWGvEGeP).\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"actual_param = [\\n  \\\"121314151617\\\", \\\"123124125\\\", \\\"667666\\\", \\\"23242526\\\", \\\"444445\\\", \\\"1234567\\\", \\\"123412351236\\\",\\n  \\\"57585960616263\\\", \\\"500001500002500003\\\", \\\"919920921\\\", \\\"12341235123612371238\\\", \\\"326325324323\\\",\\n  \\\"54321\\\", \\\"56555453\\\", \\\"32332432536\\\", \\\"2324256\\\", \\\"1235\\\", \\\"121316\\\", \\\"12131213\\\", \\\"90090190290\\\",\\n  \\\"35236237238\\\", \\\"999897959493\\\", \\\"171615141312119\\\", \\\"1716171819181920\\\", \\\"273274273274\\\"\\n]\\nexpected = [\\n  True, True, True, True, True, True, True, True, True, True, True, True, True, True,\\n  False, False, False, False, False, False, False, False, False, False, False\\n]\\nfor i, z in enumerate(actual_param): Test.assert_equals(is_consecutive(z), expected[i])\",\"language\":\"python3\",\"quality\":4.714285714285714,\"summary\":\"Write a function that will return True if a given string (divided and grouped into a size) will contain a set of consecutive numbers (regardless of orientation: whether ascending or descending), otherwise, return False.\\n\\nExamples\\nis_consecutive(\\\"121314151617\\\") ➞ True\\nContains a set of consecutive ascending numbers\\nif grouped into 2's : 12, 13, 14, 15, 16, 17\",\"tags\":[\"arrays\",\"loops\",\"numbers\",\"sorting\",\"validation\"],\"timestamp\":{\"$date\":1605237511220},\"title\":\"Consecutive Number Series\",\"stats\":{\"completed\":{\"total\":63,\"ratings\":[3,3,3,3,3,3,2,4,3,4,1,5,3,2,1,4,0,5,4,4,2,1,3,4,4,1,4,5,5,5,3,3,4,5,5,5,0,4,4,5,4,1,0,3,1,5,2,5,5,5,3,4,5,2,5,4,2],\"quality\":[5,5,5,4,5,5,4],\"rators\":[\"a777e8chPvJkY3tKa\",\"3MybBtCNPcFHLMYmJ\",\"8PwfYqoDQFThzNtvf\",\"s5M5RvgqR9BhB9JoC\",\"tAF9Gf6PiGogbZuWs\",\"aEm3Wvj2rFYRL8Lrb\",\"DPi9QGLctq2y76KuE\",\"YMZJYY7CXB5hDERZw\",\"h4x2jaMdj5aQZbW5g\",\"Ecg4m7srYGgZsb4Ck\",\"HF28xZKSLM9wEuqNg\",\"Tg24gZyPmk8uDXcBY\",\"YZi6d5cefXs6AyAwe\",\"DQskEvAv5KiJDPtGF\",\"iS5BrkGLzJyPK7nKt\",\"AJwBauGHyrbqgDYce\",\"8sNv5PTHa7XQ8bNqR\",\"p8qqFdJ3FSk5x9z3G\",\"iojEnnY9FsMfYzp6f\",\"J3upzLHuEwXH7Z2hx\",\"yjtdwc2AC4jA2RWtn\",\"gJYuGdkXEWWmGRLzu\",\"7nYC9TMdYhRxHqjjd\",\"SGhPxX5bHGL8zZqtt\",\"J23RcmzbdtBbPCTjT\",\"Yp4Jtxj7pHqZjheN7\",\"2PufnQcsHsfymufX3\",\"4sHkH3t9CJYhbDwjM\",\"hcAeJ5mhA7KTA6wkd\",\"wwMcJQRvf3X59Jyev\",\"oEkDZvzwDpH3oiyJh\",\"owtzvEJR4ynYrBd3P\",\"gb9rvGus2Jv7bjZSs\",\"D3Pr2EFee3652zsyR\",\"AasGs8AeX9Lcb9xJn\",\"ctbThYbufFCYbRK4f\",\"wZ22E8EXW4qasgru2\",\"kDq2TnPdy7hGKdAD5\",\"PH32cNxBjrK4a28sn\",\"aMRkiWFriAbMPSpHS\",\"sREAkPF9RKWuiFtFq\",\"nnDhDQxvzyPYxbYZr\",\"z28rQ8v9k95DmNtad\",\"d8qtzoLB264iP8tdY\",\"T6iBEE2jp7f7iEF2P\",\"fznzd3qnvtbFkkizz\",\"97DthwdtrBLm2y2Yj\",\"gKT7qZgPQesSxRyva\",\"23oi2a3vQwhtLEbSj\",\"bJaPCBx63YxdJAuTS\",\"AQSqD9oNv2uPfxZCR\",\"3YC4suDFTJjXvKhiR\",\"PytNZK9mNiRiZxPrm\",\"suArq5BbSy7gD6xri\",\"9QMPE56an5KmasGwS\",\"rhS8qXRjZcpDXkwnE\",\"KWdvKsAXyfLkTkuiN\",\"DwetpbChQM4r6Gwah\",\"CHvzhtXnv8HTbPQ56\"]},\"flags\":0},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"3Xc4sz3PpyWPDw5b3\",\"language\":\"java\"},{\"_id\":\"3kqmmTPHjB67ieK3t\",\"language\":\"javascript\"},{\"_id\":\"eHwd6medMrY3QXM8k\",\"language\":\"python3\"}]}}"]