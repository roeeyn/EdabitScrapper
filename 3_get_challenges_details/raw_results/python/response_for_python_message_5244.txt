a["{\"msg\":\"result\",\"id\":\"1333\",\"result\":{\"_id\":\"sDvjdcBrbHoXKvDsZ\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def anagram(name, words):\\n\\t\",\"difficulty\":2.0022522522522523,\"familyId\":\"nGubb26XrCpCHau7S\",\"instructions\":\"Write a function that returns `True` if a given name can generate an array of words.\\n\\n### Examples\\n```\\nanagram(\\\"Justin Bieber\\\", [\\\"injures\\\", \\\"ebb\\\", \\\"it\\\"]) ➞ True\\n\\nanagram(\\\"Natalie Portman\\\", [\\\"ornamental\\\", \\\"pita\\\"]) ➞ True\\n\\nanagram(\\\"Chris Pratt\\\", [\\\"chirps\\\", \\\"rat\\\"]) ➞ False\\n# Not all letters are used\\n\\nanagram(\\\"Jeff Goldblum\\\", [\\\"jog\\\", \\\"meld\\\", \\\"bluffs\\\"]) ➞ False\\n# \\\"s\\\" does not exist in the original name\\n```\\n\\n### Notes\\n- Each letter in the name may only be used once.\\n- All letters in the name must be used.\",\"lab\":\"Test.assert_equals(anagram(\\\"Justin Bieber\\\", [\\\"injures\\\", \\\"ebb\\\", \\\"it\\\"]), True)\\nTest.assert_equals(anagram(\\\"Natalie Portman\\\", [\\\"ornamental\\\", \\\"pita\\\"]), True)\\nTest.assert_equals(anagram(\\\"Emma Watson\\\", [\\\"mows\\\", \\\"meant\\\", \\\"a\\\"]), True)\\nTest.assert_equals(anagram(\\\"Daniel Radcliffe\\\", [\\\"clarified\\\", \\\"elf\\\", \\\"and\\\"]), True)\\nTest.assert_equals(anagram(\\\"Tom Hiddleston\\\", [\\\"tenths\\\", \\\"mood\\\", \\\"lid\\\"]), True)\\nTest.assert_equals(anagram(\\\"Blake Lively\\\", [\\\"key\\\", \\\"veal\\\", \\\"bill\\\"]), True)\\nTest.assert_equals(anagram(\\\"Ryan Reynolds\\\", [\\\"yonder\\\", \\\"sly\\\", \\\"ran\\\"]), True)\\nTest.assert_equals(anagram(\\\"Kristen Stewart\\\", [\\\"trinkets\\\", \\\"war\\\", \\\"set\\\"]), True)\\nTest.assert_equals(anagram(\\\"Chris Pratt\\\", [\\\"chirps\\\", \\\"rat\\\"]), False)\\nTest.assert_equals(anagram(\\\"Jeff Goldblum\\\", [\\\"jog\\\", \\\"meld\\\", \\\"bluffs\\\"]), False)\\nTest.assert_equals(anagram(\\\"Taylor Swift\\\", [\\\"stratify\\\", \\\"ow\\\"]), False)\\nTest.assert_equals(anagram(\\\"Adam Levine\\\", [\\\"medieval\\\", \\\"man\\\"]), False)\\nTest.assert_equals(anagram(\\\"Blake Shelton\\\", [\\\"betoken\\\", \\\"all\\\", \\\"she\\\"]), False)\\nTest.assert_equals(anagram(\\\"Miley Cyrus\\\", [\\\"lyric\\\", \\\"my\\\", \\\"suer\\\"]), False)\\nTest.assert_equals(anagram(\\\"Matt Damon\\\", [\\\"madman\\\"]), False)\\nTest.assert_equals(anagram(\\\"Graham Norton\\\", [\\\"graham\\\", \\\"not\\\", \\\"or\\\"]), False)\",\"language\":\"python3\",\"summary\":\"Write a function that returns True if a given name can generate an array of words.\\n\\nExamples\\nanagram(\\\"Justin Bieber\\\", [\\\"injures\\\", \\\"ebb\\\", \\\"it\\\"]) ➞ True\\n\\nanagram(\\\"Natalie Portman\\\", [\\\"ornamental\\\", \\\"pita\\\"]) ➞ True\\n\\nanagram(\\\"Chris Pratt\\\", [\\\"chirps\\\", \\\"rat\\\"]) ➞ False\\nNot all letters are used\\n\\nanagram(\\\"Jeff Goldblum\\\", [\\\"jog\\\", \\\"meld\\\", \\\"bluffs\\\"]) ➞ False\\n\\\"s\\\" does not ex\",\"tags\":[\"strings\",\"arrays\",\"validation\"],\"timestamp\":{\"$date\":1557457292921},\"title\":\"Generating Words from Names\",\"stats\":{\"completed\":{\"total\":532,\"ratings\":[2,2,2,2,2,2,2,2,2,2,2,3,1,2,2,2,3,2,1,2,2,2,0,2,3,2,2,2,2,2,2,2,2,3,2,3,3,2,2,3,3,2,2,0,3,2,1,1,2,2,1,3,3,2,2,1,2,3,3,2,0,0,1,2,2,2,2,3,2,3,4,4,3,3,2,1,0,2,2,2,2,0,1,2,2,3,0,1,1,2,2,2,3,1,2,3,3,1,4,2,2,2,3,2,2,2,0,2,2,0,1,3,3,1,1,3,0,3,2,2,3,3,3,1,2,1,2,1,0,3,2,3,0,2,3,4,4,2,3,3,1,2,3,3,2,2,2,2,2,2,3,2,0,2,2,3,2,3,3,3,2,3,2,0,2,2,3,1,3,3,3,1,2,2,1,3,1,2,1,1,3,2,1,1,2,3,1,3,1,3,2,2,2,1,1,3,2,0,3,4,2,2,2,3,2,2,1,2,2,2,1,2,1,2,1,2,2,3,3,2,1,3,1,3,2,2,2,2,2,3,1,2,1,3,1,2,3,1,3,3,2,2,3,1,3,2,1,1,2,1,2,3,2,1,4,1,2,3,2,2,3,3,1,2,3,1,3,1,2,1,2,3,3,1,2,3,2,3,3,3,3,2,1,3,2,3,0,3,2,2,0,1,3,2,2,3,3,3,3,0,5,0,3,0,1,2,2,1,0,0,3,1,3,2,0,3,2,1,3,1,3,2,1,1,0,2,0,3,3,1,2,2,1,3,1,3,3,3,3,1,1,1,2,1,0,0,3,1,2,2,0,3,2,2,2,3,2,1,4,2,3,3,3,3,2,3,2,1,1,2,3,1,3,1,3,1,3,1,2,3,3,2,2,2,2,3,2,1,2,3,2,3,0,3,2,2,3,3,2,2,2,2,0,2,3,2,3,0,2,2,1,3,3,3,3,4,1,3,3,3,2,3,1,1,1,3,0,1,1,1,3,2,2,0,3,2,1,1,3,3,2,2,3,1],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"yZvzB3qFb8pkHy4dg\",\"tAF9Gf6PiGogbZuWs\",\"gb9rvGus2Jv7bjZSs\",\"M8jrv2FfpMQp9Qzpx\",\"8JyqsSbN2FJXPr3cw\",\"ab7BsQuhDo3QgE6bh\",\"Y3KkPrBzMBgMiqaQ6\",\"FikSPhcrHBpQ4CyGC\",\"nc7bRhkxgKyqusYe3\",\"iqmPb9JuJDgTFeR8Q\",\"wcjknenWdPRhrRScv\",\"QaE2QnnBbzdiExxPH\",\"qvEvDcL32a5F4Tg6c\",\"6fwzAwFY549EuSvms\",\"EPgZSeQrPkXKnTqdG\",\"CioWqrzmDwyunW5zS\",\"SKabuq5XuhXBugKBa\",\"4kJMafuJWxzhDht2w\",\"PXkWMieERsqwgeSKp\",\"6ckDJWbyznyQQLkrP\",\"jo9STxPcJMSAEWEDi\",\"t5gr8nEXaWqrtgq6r\",\"W2wFFFx9pqgwmkFi3\",\"4HC75a4BAtjSd8jPv\",\"9Gf6g4fuKc3uou9w2\",\"tQsPenm9qfM6mPbNa\",\"kQH5b8MXJunh84Czq\",\"pkZ2pAaDxWo6Nwur4\",\"f7hmq5yNAfsFGn46w\",\"7g3vZaQXhLpxrajyg\",\"8Q5xv926YYvuzafkE\",\"QgdwHjy4x6MCPwfh9\",\"hsrNYf3WbexXJKhCq\",\"SkmxBGyasZvkextud\",\"XBmvGz2a28Wtuhj3N\",\"4LYkRKwgAzdJJ9Kbv\",\"PFjMZGHNAPTkgd7tq\",\"5dvDGoRaJwmYTmRRB\",\"cecRRLKKu5R62D5xE\",\"c89SxuYYjfeRh4toG\",\"AF6LgdKhEdzwgRJom\",\"Gw825qtBHBJhLkWEN\",\"vtBrNNcQn8TFSs275\",\"ahWFxnaxt9bXSA4f3\",\"Bnuy2SZqKX3PRoxGZ\",\"TRkN2Ggorg35Bn8zG\",\"34ZbmdhyvTxrXwAk2\",\"tHEH9MBHBAGvhgJGd\",\"a88kMGNNXv3o4G6kS\",\"inEQthEoPuP337WTY\",\"WHuF2rdyFpnTs2qMz\",\"mBGpSNpLxBmS68CET\",\"AYaEkTWLMmfzpwejr\",\"9Fqg6drSpP573bmMo\",\"tiETrb6KmarBWK5fD\",\"rZ4CjcRom4x2aZHkW\",\"dvmrZXzqS7b6ruPXP\",\"S3Y7xM7SR3RjJPFnM\",\"C9LKGu2g5hSijvDzA\",\"P8Eeqn9rz4phQGvfx\",\"jHrtWDGBhkbuWa7fG\",\"P59rek6gvwTzHvRYa\",\"PYg2boGDLrEcF3i4j\",\"yzuAaZSsPimjezjbb\",\"BFNm9gacwba9KyLFW\",\"TNMAJidLpPdH4kmBv\",\"td7qPZ7Lv4pEWT2Ya\",\"Z8T9LqguEJ8f6ocuk\",\"RxzyawFnRtxWjSucv\",\"LJce8TSNkLQRJwSaB\",\"CDGHrSPaEX56xEuSF\",\"yrCNkFYQBEDE76eFS\",\"aXCm9vWqKwL9XFYoj\",\"jYJ26SiLKBu5GRumq\",\"XKi8iZXBCHCaebSHh\",\"8kAhBdSqtYtMsbMq4\",\"6u7yc9m6HuHGbHzph\",\"uSh3aNxzD28jBuhxa\",\"PSrcg6fy835R4c5CW\",\"mKK6Z6WEKKJ2W2ZNT\",\"7KyRrD6inrt6PsTFg\",\"QKYi6pYeaYFovNHX4\",\"7R3edvryxyGRoJAEC\",\"qcbdDGrrf5HzPLRvQ\",\"R8a4b3feSFjco8g7L\",\"GCxj7RJCeWYNxj8oQ\",\"WkWyq9wMkZhXB6zsD\",\"tFJbHuodF8d4sMczz\",\"DybkA6uHjv7fY9dYG\",\"Xn3yNbDDP5yebLKzu\",\"EXZfPb8YH28EL8Rh9\",\"aCNWav8S8Try9RkC6\",\"x9A83cZkyA7E7utn3\",\"t8GRbY5ME64BcgWQk\",\"3fjCCrpR2aD32sTrc\",\"JEAi9mG3vvBomJ3Yu\",\"gMJhLdyw3tH7L96X2\",\"N2wnZXkhDH86mgjQ8\",\"pryBJYX32n8nvRvDu\",\"T2vhHPhRR96hRizq8\",\"jfadYA8tEji3JrYPN\",\"8t7f2tuopSx3vnncE\",\"Dd4MibaSEPy7br7fE\",\"GR5P7gLKtxGyTAZTB\",\"cR3ibTMxLyEdDFCHY\",\"EKrSBrTXuhE3f4xsR\",\"WxuRWqWcj7kyhXKNf\",\"WBSt2nvnZQrEB3upu\",\"mG93NkvEZfh2kPrMq\",\"vF7SNNRvLK3mu4W4H\",\"m6YXN9vH959zn3BJB\",\"9DZaiAD2RHxo4FTRy\",\"zZo9NtDMkY4HdWmWP\",\"nfXGHENb5md7m355s\",\"ozqX8HKbqPZnrjjaN\",\"xBvJ2xhLJgTeA6qs8\",\"FgkYtHLxeD8pETJ8T\",\"AMSrHCDQfeGw5bzcY\",\"TgjcWxsTjar7snQx9\",\"reZ2ukEXdqfNGhv8K\",\"fxLjWpWbBeaYcvdgB\",\"N4QjiZzLyunefpXeS\",\"3FYqiNdJGXCd5WaA6\",\"Nj6FwgBtAXsaQwsM2\",\"7BvK9WWXi9Arqh63Q\",\"3XWw4ui5Tipb2Qz8o\",\"3SKmXhcLPPkmQhjip\",\"HhLfku5PjHPCqYBe6\",\"HEec7Fz9Xrq8ECQh3\",\"RErqK2yM94wYyD2hk\",\"vuwheqp25x7RkBHXn\",\"kDe2b9FdJnPhEWJzg\",\"bzePGtk6fgFuKeHhf\",\"cuSCeuxuBcFy7ATxr\",\"CZeLyDD2BQL3jrzzj\",\"dKpQWv7qH2WaZXPxK\",\"frMkTs8zQRhf5mhY7\",\"PZrzFLcwBp6mktLar\",\"3efW5qCKraPjzEfiX\",\"RoErKvc4oJyj4FZ8J\",\"sQMWSXPFHmdk7gdeL\",\"HhnEZJXhdiaQeSDMd\",\"8aPJNKDxXq7884eJb\",\"MvtJ4pK3JPoZBHrgJ\",\"zjsM22NNZFoAm9AAC\",\"hSfK7dhSiKdNjMbLr\",\"YSAX9n8WAf6zFKLPS\",\"RyCu8LFdoba6Gvzp9\",\"9cKQ9BxGZ4vQAcM5x\",\"5F8kWn4n7fQbnf88e\",\"HQxp7NcdvF92G7bYS\",\"RXb6cmCNaYbczuDwy\",\"7hzSvcYdq6QjoRnJY\",\"otXtuQygbcYATMZoP\",\"d2rkaKAaLFYsyTLQq\",\"Dw8RZgg5iHBuFrWwQ\",\"PXSFa2Cvyy7nxcv5T\",\"oqGkxvASXq52iTDvp\",\"qBaLGrm952ii9K23M\",\"dZGNAJXB24zNh2tsD\",\"HqmxnQJM66Y57twhn\",\"2fxapKr8XGdNeaKi2\",\"fAoLuqbGvHn4w2PHf\",\"nL6EAKGywddR3mBs3\",\"WX6R5brerMTrHs5ZM\",\"6ShafRStcvew4GfCh\",\"yoYQqaY6GszuTkNSs\",\"u5u2YpHXiNgzDNJdX\",\"K96FwtfDDN5WM4Bb7\",\"PqEKjCDkJtYoYuZfj\",\"8PwfYqoDQFThzNtvf\",\"w9ccpyskdwvqCanmJ\",\"s5M5RvgqR9BhB9JoC\",\"ydEdzuCCZt4yny9Rq\",\"iHMehMwgYQGhGAF72\",\"yKttxy9JGn5Jzwuj6\",\"C4QntmkYtB89GNtpd\",\"DvzpcjeQsLCSZc9r9\",\"DLai9DxpZN6p5TPRX\",\"4Sntowj2cbMFRDMJa\",\"hAzy9apJgLWwRFGPJ\",\"AnjjyuE9aWLzK3nkg\",\"tK9oBgXjqPsPrGowj\",\"Jqk2uJZZxEv5wZFze\",\"Nfi64Lq3Ynfqrxt5P\",\"7AbBPEGYtkdGGXEof\",\"DkYeAMDMzM8F6Zba5\",\"CbaeWRARjiGi6HbLq\",\"mtRvHDpeLoSGBf8zC\",\"J5T8gZqiZXFuFDTQ7\",\"sz8ufn9i8zeiGWpAy\",\"DLw5TLmtCmL3GA9rW\",\"rZ8PD3qRmGCvccSb9\",\"p3dsCFdWGzWGhFrSQ\",\"2innwjWqxJHo4eRGh\",\"QnPD4Sv6W4LHc2Qng\",\"3ECpdeExhBmkYXtba\",\"AasGs8AeX9Lcb9xJn\",\"D934yGZRTkahsHn2k\",\"Hryvbd5DHrRZPSeM8\",\"BByKDngfPvW6w4m7d\",\"F2aeZ4zqupp7a8SkW\",\"BeFnbPbMnAM2SjBdZ\",\"myXAR5qDJsBaPnff2\",\"Q2q7wd5e5cfCrwPxq\",\"pmgFEciNrd3ES9tuu\",\"WLFPvm65aHfgwQy7N\",\"4CFzv558qbGcpQwc4\",\"Z4Wd4iFu5mdjSJDSA\",\"w3A7cBWyAfukk6xEQ\",\"CEd9tLdXeDeNHSzys\",\"euPBBaYXyS8RBr9KB\",\"Z85ajWfZ4jDPkbvR4\",\"TR5aWdDKP6iaL6mGK\",\"aoRaYQZEQPrJT22wX\",\"aEm3Wvj2rFYRL8Lrb\",\"8LfTheFzvicameoz9\",\"pkQBaSzukotPEXmrD\",\"Yp7uvStL97cC9fKkY\",\"hiGXnxds6zo7XsfTw\",\"orFLgPDw9H5MDzmwo\",\"dXMbkgQFoN37BhruB\",\"KfXMEiCdZfCZGmjTt\",\"9pzFiFK3ANLjQfnr2\",\"y8ci4crEusJKj7uj4\",\"9zwRb7df96BkcfBKP\",\"vLrq4dEDMM2wd68Dc\",\"TccnEKGqp7fbL3KxN\",\"3Zceb8GudqAG3onG3\",\"qgYikiD7WB8JciTdo\",\"23oi2a3vQwhtLEbSj\",\"mkcf3C3NMxhYZuiLM\",\"n2BRY9X8899dcG8Bw\",\"ZNnsMeNkdDhHjSrZb\",\"YRstQuthRkFeBiXug\",\"gJYuGdkXEWWmGRLzu\",\"itDTNAvHdhpXPhg6D\",\"T2QhZRhybEKeJTb44\",\"LmTRmhiuDidAebAsw\",\"3LiSLdtN58n46NEqg\",\"mfsaETo7uA4x5vqLD\",\"NfMJuiBk6FN5Jc6ow\",\"55RQznnuTGpsj3EXd\",\"pWD2YC5s4YRCxFc2i\",\"kYWb8BwpKwunQkxeX\",\"Zm4hHd9si9wtDKgAG\",\"mDWNyaaQ9hvPCRzSd\",\"tczr8H3zHk2kwp8br\",\"JQ5uoxA4WZgN6HyJk\",\"EjbDDFRECrzQDkzrX\",\"xXxcBvT3poSuSCgBN\",\"TCoQs9Erxoue9BvSj\",\"4RY3zj9C2t8GGefhi\",\"yYxPzFqBgtQ9fsyHM\",\"dHZqT6h4JMwk5fPC8\",\"RcFJfYquW9quJDnp5\",\"XsYhWtDMoky3nAhjd\",\"cuAeJFK5w7BJtnmux\",\"TX8iXgvCq7zaTZozX\",\"3pxHTZBsv7MKzFG6Y\",\"5JZNWts9XEHejpvur\",\"zChStAhRfotvGC6C5\",\"ekQh3jzgGLsEMbKo3\",\"KRmxvA4mWgfKvHmYN\",\"gPvrBxxySDP2vpux3\",\"YcCLwitFMAEJSnxAW\",\"qR6hLPuagPSHAgcwn\",\"c3nsyfKKeQGxp6sKb\",\"PytNZK9mNiRiZxPrm\",\"cTo3czssohzGLQQa7\",\"s2ZMtR9deh6Kia7pb\",\"AJi2EQTat5PySNpHg\",\"HF28xZKSLM9wEuqNg\",\"MKT7khMBGXzA22ykf\",\"KdNDysEsy2TW5QRJ2\",\"GM2X83qnuLXTHe5zA\",\"ByXaraYa5tzFG8Gmj\",\"hnyhBFWwNCz9mDfSi\",\"yr822PZmmiDDenxpB\",\"5nY48krepaT4a4QTN\",\"4rwxLqLs2mNZNg8NB\",\"QkbpyExhGA8ErJWhk\",\"DQskEvAv5KiJDPtGF\",\"ENsSYogEHHeDSrFod\",\"DEDniTrstQYGounXT\",\"WWD6uwvCr54JJGu5S\",\"gkqp3EuvuiFXFAFtW\",\"DxxNN37iEz7b8t2nf\",\"p9riYAbHXwJZ9PhWf\",\"bCDTKAoS4biDmQ64Y\",\"KRyczPZSHYbKrBYnY\",\"W5TajitmCyxz87zAC\",\"g9FyJ8yeT9ic97Qp2\",\"cxbQnktoNTzR9jcGe\",\"PCTGbXBpNgYbFf48T\",\"n8WJM5kdmPZbGoX7e\",\"4LGKpgWrEJRsTXDkq\",\"jMvMNLDbKG7XxYgmm\",\"Ecg4m7srYGgZsb4Ck\",\"8TAYWzqJAkXq2MAba\",\"ZRxAkXjTCdyQTdSDw\",\"m6D2RuQJwrAK6WB3v\",\"f2BoqyCpgnmjEjLqx\",\"YCHnE8feJyuhcpDc2\",\"qPpQfR5KyDb5Y3EFf\",\"So6PHm74mfJuY2WTs\",\"dyaJRDTFLRLqvHRDK\",\"bJxaKHJqR82EWw8Su\",\"efcsSdKgupNnf9DKD\",\"JS3hNM3XXkxPdg3yk\",\"HkRkGMGbaD8xQXomq\",\"6428wKHtwKkFdvBs5\",\"yJmwiykSNfLv9NqJ2\",\"5qfcG54cbBC8ujxav\",\"dynD89GCHoau9fvh7\",\"N43d68KgA2qv7Jm2Y\",\"dEuJGZbBQkveCXEFk\",\"BrTDhPJcACL2bsrpJ\",\"4hWjYDZsdixzvKbqQ\",\"ya2ofFqYRC57bfbND\",\"CTKmXtrqDYqJBnuy8\",\"x4dfavjLEcrvAF3QQ\",\"6HgMANhu6WiGyXSGN\",\"TwKZ3835iFLog2RuQ\",\"S3HTxkHEp2KMAcjjC\",\"zZDaXBxMzTCBhNkgL\",\"iojEnnY9FsMfYzp6f\",\"CwXsu25ygLEwQbmQC\",\"ji5f27FPz4wRRF6Ls\",\"dzS6WBTMHyFEag6Fp\",\"syRNbbPdLCGXbH2Gy\",\"p8qqFdJ3FSk5x9z3G\",\"ZrKCkX7xxGGZzauFW\",\"yjtdwc2AC4jA2RWtn\",\"hRiMXDZNAzyPd5tpt\",\"xygLZ8zXLzsKkvSRW\",\"49XFttjKo2QhEWT3R\",\"mzhB3LXoJ2EGyqr3n\",\"pscBduNyf8TDHe2Km\",\"8BFSTCnoe2QggN64c\",\"axdSNLZpiCDF8RS6n\",\"djeesDJQwNJay4RTe\",\"ijNKM8DuspXuAnC4y\",\"7saJ6s2T8HRDfThbx\",\"EMJ6uvBZkie429gdg\",\"8zQnyekbSwzhoJymu\",\"EWwJCY22NGPwzuMfN\",\"hj9GXsPGXGMQJZoSE\",\"H9KZi2cjt4FwH7qog\",\"P7NmFbCJ5offXMRvB\",\"wcQLERs5vMcAwJrEy\",\"KZ2xddpM2f9JRaryB\",\"qQQ4hCQpzitmHSkjS\",\"jBR47vA7HwAZqp4QA\",\"jL4y5fTJAMBjhZmko\",\"hqNNdcEy5eCRBGLxB\",\"zZ43WzxvFu7kaTKZ6\",\"d8qtzoLB264iP8tdY\",\"7K2GEb5TZRtSpyyGS\",\"ZNgDGdtv5WFkcEn6K\",\"zfGYZ7gpR8fxJpagh\",\"CyzskHGsC6WSmYrLu\",\"xwEZk3bNZoNDPJYF5\",\"Wv2vJnEj8ywNmARoF\",\"dkcmCKwqApX5jBggc\",\"gSFJPsMXnqAog3Q9f\",\"xn7uGNKeAwPEkP9oA\",\"4fhjJBvLBWh6QeSih\",\"REbXuiozZdcmS4iiJ\",\"w2HhxvSLmDhaGCAjE\",\"mG8HqKiAQFTdRZthG\",\"MfKe55snfKsdnDejs\",\"DNACg4rcgZsPtYGZ8\",\"MtJ33oGd6Skry3dj4\",\"zvR7koBTGcaj5pJNQ\",\"hkiz2Nv927cYGrA86\",\"XjajdyybZZbkz8o5x\",\"cE4rgfJr4yYT2dKsn\",\"ppxNdL4gjANz8oJLQ\",\"jQqahAQX57zz7PTMs\",\"qD2LrwaDrSdiybLKY\",\"oBcs8GLX2ZFLXQy8y\",\"CQhaiZqQcP87YteSG\",\"Wv9XxYAmCLZdhrTMF\",\"QRv96jmNaYsWkxQEG\",\"MRrjdojkTWC8oTrM4\",\"abt2C3Y82RX3qbaPt\",\"6F3Y6ZBAGNDGGTt9B\",\"N6pmP89gXiKzYB5eg\",\"9FCeFzjPA4jrQ7oHW\",\"YMBFrhTvTMrAvRYJR\",\"qH586ETmMdtjhAoBc\",\"D62kvgDJ6asnsFaEw\",\"DPi9QGLctq2y76KuE\",\"bccs9koJxyQ9XNiLC\",\"Fb2wehA7QgTFWry2x\",\"6MjSiiBLPcvXbXcaZ\",\"Je8i9X6FTE4roo7sm\",\"fznzd3qnvtbFkkizz\",\"gXTAie79kiw28tx5u\",\"uZJqBoqeZRX3RncAR\",\"BfwbCTRtW4wG2bsnH\",\"NG8PWBSjsM8mMhQEq\",\"J3upzLHuEwXH7Z2hx\",\"dYPkStFnLvAMsHSzZ\",\"wbXzQW4KQktYQcF2v\",\"dmi9KsAmriMQzsDFJ\",\"DCLoZNDf8h6TB7gxn\",\"KJCDwGkoXh8qtbbKr\",\"74LAPLfQHfTuydDA2\",\"CLypXaZksY99mpRCm\",\"kEkNyqFARK9YBrhRx\",\"cAP3n5NY64uoMwzRR\",\"eFh8z7sMmxkrFWZv9\",\"5wCHxMQ5Km2bjqcGZ\",\"9RaccqxB9dRZuS7z4\",\"Nzi4RD5fxAJ4wjnNa\",\"xAMuN7wh2uorXC9q2\",\"7ifh8r4gvyYMhKB94\",\"PXAcsKkssS2yLyDv2\",\"aaJWssCWfMa63XJng\",\"K3RacTvkWHLfzKF8i\",\"zd9FLSzsGz3evKafy\",\"a777e8chPvJkY3tKa\",\"buX4mCQhtXCfBjeno\",\"EfxwqhYdapX3dMQC2\",\"4RsakkyRXyYGwFxEa\",\"PWgzeK859suojbrRx\",\"StNu7DPyTgEStZsMY\",\"mmt7jwqbmSjzRSvqh\",\"GGdmhAvxXhqhhibJN\",\"j3qmPiELmhBcaMYxD\",\"vBFYvZh6RA2cnF7Nk\",\"q2tzvkrLASvSjkek9\",\"sbJcFfQjQ59Wfg4Cd\",\"RgujtehTuCgx4SLGn\",\"KEmTti9Tza8A2FLQW\",\"srJ34BaybkQh3qRkM\",\"FEYpu9RWysAgW3XnP\",\"yyo6YLQN2of6fxp49\",\"ey3CASd6Je5LEJzfB\",\"Wpn95NqWxncQrwNgz\",\"JpTSNtaXKdx2is7Sr\",\"2PufnQcsHsfymufX3\",\"v3KgCRioto49PtQxN\",\"K6MfKMytoJJuSGewP\",\"bvmTE46bfcM4ogj34\",\"PC3pLs36zNzpRDSuE\",\"qZQxPQ2kaNKAMesHT\",\"ebPYSECG97bnpAp7s\",\"3KkyQm77zsew58Dc2\",\"8ZQcS3dPw3wepGBd4\",\"4Lwjr34ypKNQNQCar\",\"fbr22rabEJMfBp7vD\",\"AQSqD9oNv2uPfxZCR\",\"Ds7L5bksw2QRHjrKL\",\"AFfw7cGg83uYk2Miy\",\"LQxof8pGabGuWP7Gn\",\"ctbThYbufFCYbRK4f\",\"qzXAMXsHZGT8o5hTA\",\"o4ixjQGSaYqA2JoM4\",\"8sNv5PTHa7XQ8bNqR\",\"kjvgTyRFyKHv44DcH\",\"gKnWjDjwrJh7MK2df\",\"jCjCvyhqhpebkJn34\",\"9gJsF5apWJGWZJprn\",\"T6iBEE2jp7f7iEF2P\",\"RoGGD5cpHb4ftdLDv\",\"yod5YhKtPqw2GfG9B\",\"nkH3HfJXLMNcBMM79\",\"5HCu9Ydd86QgHDRNP\",\"jWbd7SYDzLPjc9EDh\",\"mvJBakQ35CWAnbbEZ\",\"CHvzhtXnv8HTbPQ56\",\"Qyfyyw6oC4EHAndzo\",\"jkbavR2ATFJcpmo8M\",\"FtuianggdMvAxG43T\",\"QNPbruWphPhimnrAv\",\"PZqJ7pMtLRqp27q4y\",\"JhX7jvtpwNyxcc39m\",\"PxjZL5AA8R5Dfg8v3\"],\"quality\":[5,5,5,5,5,5,5,5,5,5,4,4,5,5,1,5,2,5,5,5,5,4,5,5,5,5,5,4,1,3,3,4,5,5,5,5,5,5,5,3,5,4,4,5,5,4,5]},\"tests\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.468085106382978,\"family\":[{\"_id\":\"tm4Pf4SYbyXCDfqAj\",\"language\":\"cpp\"},{\"_id\":\"W8zoCps44yDxckivb\",\"language\":\"java\"},{\"_id\":\"tGehcXPRmrepQPGQW\",\"language\":\"javascript\"},{\"_id\":\"sDvjdcBrbHoXKvDsZ\",\"language\":\"python3\"},{\"_id\":\"89Cxq2xfjmcE5ai7F\",\"language\":\"ruby\"},{\"_id\":\"KfySx6Qk8yaERudRB\",\"language\":\"swift\"}]}}"]