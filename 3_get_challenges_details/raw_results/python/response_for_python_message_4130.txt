a["{\"msg\":\"result\",\"id\":\"784\",\"result\":{\"_id\":\"7QvH8PJgQ5x4qNGLh\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"def countdown(n, txt):\\n\\t\",\"difficulty\":1.3645569620253164,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"jLr6Dj3fPb9YcaRX2\",\"instructions\":\"Create a function where given the *number* `n` to count down from, and *some words* `txt`, return a countdown sequence as a string leading up to the words at the end.\\n\\nPut a **full stop** after each number and **uppercase** and add an **exclamation mark** to the word. See the examples below for clarification!\\n\\n### Examples\\n```\\ncountdown(10, \\\"Blast Off\\\") ➞ \\\"10. 9. 8. 7. 6. 5. 4. 3. 2. 1. BLAST OFF!\\\"\\n\\ncountdown(3, \\\"go\\\") ➞ \\\"3. 2. 1. GO!\\\"\\n\\ncountdown(5, \\\"FIRE\\\") ➞ \\\"5. 4. 3. 2. 1. FIRE!\\\"\\n```\\n\\n### Notes\\n- `n` will be a number greater than 0.\\n- `txt` won't already include an exclamation mark.\\n- Don't include **0** in the countdown.\",\"isHidden\":false,\"lab\":\"Test.assert_equals(countdown(10, \\\"Blast Off\\\"), \\\"10. 9. 8. 7. 6. 5. 4. 3. 2. 1. BLAST OFF!\\\")\\nTest.assert_equals(countdown(3, \\\"go\\\"), \\\"3. 2. 1. GO!\\\")\\nTest.assert_equals(countdown(5, \\\"FIRE\\\"), \\\"5. 4. 3. 2. 1. FIRE!\\\")\\nTest.assert_equals(countdown(12, \\\"watch out\\\"), \\\"12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. WATCH OUT!\\\")\\nTest.assert_equals(countdown(7, \\\"fire\\\"), \\\"7. 6. 5. 4. 3. 2. 1. FIRE!\\\")\\nTest.assert_equals(countdown(16, \\\"shoot\\\"), \\\"16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. SHOOT!\\\")\\nTest.assert_equals(countdown(28, \\\"fire\\\"), \\\"28. 27. 26. 25. 24. 23. 22. 21. 20. 19. 18. 17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. FIRE!\\\")\\nTest.assert_equals(countdown(14, \\\"watch out\\\"), \\\"14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. WATCH OUT!\\\")\\nTest.assert_equals(countdown(29, \\\"take down\\\"), \\\"29. 28. 27. 26. 25. 24. 23. 22. 21. 20. 19. 18. 17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. TAKE DOWN!\\\")\\nTest.assert_equals(countdown(8, \\\"boom\\\"), \\\"8. 7. 6. 5. 4. 3. 2. 1. BOOM!\\\")\\nTest.assert_equals(countdown(24, \\\"blast off\\\"), \\\"24. 23. 22. 21. 20. 19. 18. 17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. BLAST OFF!\\\")\\nTest.assert_equals(countdown(3, \\\"boom\\\"), \\\"3. 2. 1. BOOM!\\\")\\nTest.assert_equals(countdown(16, \\\"watch out\\\"), \\\"16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. WATCH OUT!\\\")\\nTest.assert_equals(countdown(16, \\\"blast off\\\"), \\\"16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. BLAST OFF!\\\")\\nTest.assert_equals(countdown(24, \\\"boom\\\"), \\\"24. 23. 22. 21. 20. 19. 18. 17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. BOOM!\\\")\\nTest.assert_equals(countdown(2, \\\"watch out\\\"), \\\"2. 1. WATCH OUT!\\\")\\nTest.assert_equals(countdown(1, \\\"shoot\\\"), \\\"1. SHOOT!\\\")\\nTest.assert_equals(countdown(16, \\\"go\\\"), \\\"16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. GO!\\\")\\nTest.assert_equals(countdown(26, \\\"watch out\\\"), \\\"26. 25. 24. 23. 22. 21. 20. 19. 18. 17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. WATCH OUT!\\\")\\nTest.assert_equals(countdown(5, \\\"blast off\\\"), \\\"5. 4. 3. 2. 1. BLAST OFF!\\\")\\nTest.assert_equals(countdown(26, \\\"go\\\"), \\\"26. 25. 24. 23. 22. 21. 20. 19. 18. 17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. GO!\\\")\\nTest.assert_equals(countdown(29, \\\"go\\\"), \\\"29. 28. 27. 26. 25. 24. 23. 22. 21. 20. 19. 18. 17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. GO!\\\")\\nTest.assert_equals(countdown(26, \\\"shoot\\\"), \\\"26. 25. 24. 23. 22. 21. 20. 19. 18. 17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. SHOOT!\\\")\\nTest.assert_equals(countdown(25, \\\"watch out\\\"), \\\"25. 24. 23. 22. 21. 20. 19. 18. 17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. WATCH OUT!\\\")\\nTest.assert_equals(countdown(16, \\\"blast off\\\"), \\\"16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. BLAST OFF!\\\")\\nTest.assert_equals(countdown(21, \\\"take down\\\"), \\\"21. 20. 19. 18. 17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. TAKE DOWN!\\\")\\nTest.assert_equals(countdown(23, \\\"take down\\\"), \\\"23. 22. 21. 20. 19. 18. 17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. TAKE DOWN!\\\")\\nTest.assert_equals(countdown(5, \\\"fire\\\"), \\\"5. 4. 3. 2. 1. FIRE!\\\")\\nTest.assert_equals(countdown(13, \\\"blast off\\\"), \\\"13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. BLAST OFF!\\\")\\nTest.assert_equals(countdown(1, \\\"boom\\\"), \\\"1. BOOM!\\\")\\nTest.assert_equals(countdown(15, \\\"shoot\\\"), \\\"15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. SHOOT!\\\")\\nTest.assert_equals(countdown(12, \\\"shoot\\\"), \\\"12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. SHOOT!\\\")\\nTest.assert_equals(countdown(3, \\\"take down\\\"), \\\"3. 2. 1. TAKE DOWN!\\\")\\nTest.assert_equals(countdown(27, \\\"fire\\\"), \\\"27. 26. 25. 24. 23. 22. 21. 20. 19. 18. 17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. FIRE!\\\")\\nTest.assert_equals(countdown(17, \\\"shoot\\\"), \\\"17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. SHOOT!\\\")\\nTest.assert_equals(countdown(17, \\\"take down\\\"), \\\"17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. TAKE DOWN!\\\")\\nTest.assert_equals(countdown(17, \\\"watch out\\\"), \\\"17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. WATCH OUT!\\\")\\nTest.assert_equals(countdown(12, \\\"shoot\\\"), \\\"12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. SHOOT!\\\")\\nTest.assert_equals(countdown(18, \\\"take down\\\"), \\\"18. 17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. TAKE DOWN!\\\")\\nTest.assert_equals(countdown(8, \\\"blast off\\\"), \\\"8. 7. 6. 5. 4. 3. 2. 1. BLAST OFF!\\\")\\nTest.assert_equals(countdown(15, \\\"watch out\\\"), \\\"15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. WATCH OUT!\\\")\\nTest.assert_equals(countdown(18, \\\"go\\\"), \\\"18. 17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. GO!\\\")\\nTest.assert_equals(countdown(7, \\\"boom\\\"), \\\"7. 6. 5. 4. 3. 2. 1. BOOM!\\\")\\nTest.assert_equals(countdown(23, \\\"take down\\\"), \\\"23. 22. 21. 20. 19. 18. 17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. TAKE DOWN!\\\")\\nTest.assert_equals(countdown(25, \\\"take down\\\"), \\\"25. 24. 23. 22. 21. 20. 19. 18. 17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. TAKE DOWN!\\\")\\nTest.assert_equals(countdown(28, \\\"boom\\\"), \\\"28. 27. 26. 25. 24. 23. 22. 21. 20. 19. 18. 17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. BOOM!\\\")\\nTest.assert_equals(countdown(22, \\\"shoot\\\"), \\\"22. 21. 20. 19. 18. 17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. SHOOT!\\\")\\nTest.assert_equals(countdown(19, \\\"boom\\\"), \\\"19. 18. 17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. BOOM!\\\")\\nTest.assert_equals(countdown(30, \\\"fire\\\"), \\\"30. 29. 28. 27. 26. 25. 24. 23. 22. 21. 20. 19. 18. 17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. FIRE!\\\")\\nTest.assert_equals(countdown(28, \\\"watch out\\\"), \\\"28. 27. 26. 25. 24. 23. 22. 21. 20. 19. 18. 17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. WATCH OUT!\\\")\\nTest.assert_equals(countdown(26, \\\"fire\\\"), \\\"26. 25. 24. 23. 22. 21. 20. 19. 18. 17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. FIRE!\\\")\\nTest.assert_equals(countdown(12, \\\"take down\\\"), \\\"12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. TAKE DOWN!\\\")\\nTest.assert_equals(countdown(19, \\\"boom\\\"), \\\"19. 18. 17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. BOOM!\\\")\\nTest.assert_equals(countdown(30, \\\"shoot\\\"), \\\"30. 29. 28. 27. 26. 25. 24. 23. 22. 21. 20. 19. 18. 17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. SHOOT!\\\")\\nTest.assert_equals(countdown(13, \\\"fire\\\"), \\\"13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. FIRE!\\\")\\nTest.assert_equals(countdown(19, \\\"blast off\\\"), \\\"19. 18. 17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. BLAST OFF!\\\")\\nTest.assert_equals(countdown(17, \\\"take down\\\"), \\\"17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. TAKE DOWN!\\\")\\nTest.assert_equals(countdown(1, \\\"watch out\\\"), \\\"1. WATCH OUT!\\\")\\nTest.assert_equals(countdown(9, \\\"shoot\\\"), \\\"9. 8. 7. 6. 5. 4. 3. 2. 1. SHOOT!\\\")\\nTest.assert_equals(countdown(22, \\\"take down\\\"), \\\"22. 21. 20. 19. 18. 17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. TAKE DOWN!\\\")\\nTest.assert_equals(countdown(4, \\\"fire\\\"), \\\"4. 3. 2. 1. FIRE!\\\")\\nTest.assert_equals(countdown(7, \\\"shoot\\\"), \\\"7. 6. 5. 4. 3. 2. 1. SHOOT!\\\")\\nTest.assert_equals(countdown(19, \\\"blast off\\\"), \\\"19. 18. 17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. BLAST OFF!\\\")\\nTest.assert_equals(countdown(6, \\\"go\\\"), \\\"6. 5. 4. 3. 2. 1. GO!\\\")\\nTest.assert_equals(countdown(20, \\\"boom\\\"), \\\"20. 19. 18. 17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. BOOM!\\\")\\nTest.assert_equals(countdown(12, \\\"boom\\\"), \\\"12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. BOOM!\\\")\\nTest.assert_equals(countdown(20, \\\"boom\\\"), \\\"20. 19. 18. 17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. BOOM!\\\")\\nTest.assert_equals(countdown(27, \\\"take down\\\"), \\\"27. 26. 25. 24. 23. 22. 21. 20. 19. 18. 17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. TAKE DOWN!\\\")\\nTest.assert_equals(countdown(6, \\\"blast off\\\"), \\\"6. 5. 4. 3. 2. 1. BLAST OFF!\\\")\\nTest.assert_equals(countdown(6, \\\"shoot\\\"), \\\"6. 5. 4. 3. 2. 1. SHOOT!\\\")\\nTest.assert_equals(countdown(19, \\\"blast off\\\"), \\\"19. 18. 17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. BLAST OFF!\\\")\\nTest.assert_equals(countdown(15, \\\"watch out\\\"), \\\"15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. WATCH OUT!\\\")\\nTest.assert_equals(countdown(4, \\\"blast off\\\"), \\\"4. 3. 2. 1. BLAST OFF!\\\")\\nTest.assert_equals(countdown(21, \\\"go\\\"), \\\"21. 20. 19. 18. 17. 16. 15. 14. 13. 12. 11. 10. 9. 8. 7. 6. 5. 4. 3. 2. 1. GO!\\\")\\nTest.assert_equals(countdown(5, \\\"bang\\\"), \\\"5. 4. 3. 2. 1. BANG!\\\")\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,1,3,1,0,2,1,2,1,1,1,1,2,0,2,1,0,2,1,1,1,1,1,2,5,2,0,0,2,1,1,1,2,0,1,0,0,1,1,2,2,2,2,0,2,3,2,2,2,1,1,1,0,2,1,2,1,2,1,2,3,2,1,2,2,2,2,1,2,0,1,0,1,1,1,1,0,2,1,1,2,2,2,1,2,1,2,4,2,1,1,2,2,1,2,2,1,0,1,0,0,2,2,3,2,2,2,1,2,1,1,2,1,1,1,0,2,0,2,1,2,2,2,2,2,3,0,2,1,2,0,1,1,2,2,2,2,2,2,0,2,2,1,0,1,1,2,1,0,2,2,1,1,2,2,2,2,2,2,2,2,0,2,2,0,1,1,0,2,2,2,1,2,1,2,2,1,2,2,2,2,2,1,1,2,2,1,1,2,2,1,2,1,1,1,2,1,1,2,2,1,0,2,2,2,1,2,2,1,3,0,1,2,3,1,2,0,1,0,0,1,1,2,2,2,2,1,1,2,2,2,1,2,1,2,0,2,1,3,1,2,2,1,0,2,1,0,0,2,1,2,0,2,2,2,2,0,0,1,1,1,1,2,1,2,1,0,1,0,2,2,2,1,2,2,0,1,1,0,2,1,1,0,2,2,2,1,1,1,1,0,0,0,1,0,2,1,1,1,3,2,2,2,2,1,2,0,2,2,2,0,1,0,1,0,2,1,2,2,0,1,2,2,0,1,0,2,1,2,1,4,0,2,1,3,2,4,2,2,2,1,0,2,1,2,2,0,2,1,2,0,2,1,1,1,1,0,1,2,1,1,2,1,2,2,1,1,1,1,1,3,2,2,0,1,0,1,0,1,1,0,2,2,1,0,2,2,1,0,1],\"rators\":[\"tAF9Gf6PiGogbZuWs\",\"PXAcsKkssS2yLyDv2\",\"dQvyz6v92233cGwkD\",\"gb9rvGus2Jv7bjZSs\",\"K7ceQpsgi36uLxTMr\",\"2fxapKr8XGdNeaKi2\",\"Jqk2uJZZxEv5wZFze\",\"QnPD4Sv6W4LHc2Qng\",\"8JyqsSbN2FJXPr3cw\",\"C4QntmkYtB89GNtpd\",\"Yp7uvStL97cC9fKkY\",\"u5u2YpHXiNgzDNJdX\",\"2innwjWqxJHo4eRGh\",\"ftfcRoqLoyvbRPDLc\",\"myXAR5qDJsBaPnff2\",\"HQxp7NcdvF92G7bYS\",\"XbxHXmh5ZmRN2gw3K\",\"iMHrN3Wiefh9Ame38\",\"jeuoearPPTcGPgXhf\",\"AasGs8AeX9Lcb9xJn\",\"N7GPFEhCaiQ79MKjz\",\"aRqQ42J5zqCmBNd8w\",\"Ycj4iTJGFyvC4bXek\",\"M44nifmWzt3wtYyJx\",\"JPtpz9cnJwtS8L7ui\",\"yabtHTtycsWhcGBfD\",\"mxX4rH5ELYkdZ2Mbw\",\"j2wcHGHmPCHbaQEye\",\"hnyhBFWwNCz9mDfSi\",\"CuY5BaTCcu7Mp9tDu\",\"s5M5RvgqR9BhB9JoC\",\"v3fjGuc7Pq4yjFygS\",\"Jg8ZSRXe3NoDMCqGu\",\"Z85ajWfZ4jDPkbvR4\",\"eKPZp5XdiAprW6648\",\"HDksZLiRAmpnCKHta\",\"yKttxy9JGn5Jzwuj6\",\"3ECpdeExhBmkYXtba\",\"3ssWNNruio66zmAXT\",\"Wv5c7WsK6R8yb4mTt\",\"JizHCRcwLzRzNfsPK\",\"o4FYGsoNXyLFpnvTr\",\"xowjbn5yEv7c93axA\",\"zg8GmMSP2LkHBtAzy\",\"4CFzv558qbGcpQwc4\",\"HJiy5Yn5ENCk6qR2x\",\"mZnXCe6hcnbv3DNvp\",\"wWDXL7Lz6oTAZF4mj\",\"iMqnZazJtLf2nhuow\",\"4tgBydK887PitgAoi\",\"N2wnZXkhDH86mgjQ8\",\"rJGeRSCjGzRuYfHZS\",\"nc7bRhkxgKyqusYe3\",\"LA2YneDcbtiSj5SH6\",\"cSaaAxqkYsPDXmMuf\",\"9Ly8afdtofp8DXzrt\",\"LQxof8pGabGuWP7Gn\",\"pMg2Zddm29zRGP6wg\",\"g8yJiPAWXbrgxbjfZ\",\"F2aeZ4zqupp7a8SkW\",\"J5T8gZqiZXFuFDTQ7\",\"XKi8iZXBCHCaebSHh\",\"BeFnbPbMnAM2SjBdZ\",\"sz8ufn9i8zeiGWpAy\",\"Jsrfs8nEy37mJxbqD\",\"yZvzB3qFb8pkHy4dg\",\"iF6X8FeXyfJHXCPQR\",\"orFLgPDw9H5MDzmwo\",\"TCaTpxjzt2x9xAL86\",\"dHZqT6h4JMwk5fPC8\",\"cR3ibTMxLyEdDFCHY\",\"6abffx8jQDCf7kgvb\",\"jNvegJWCk5HCtEMbK\",\"r7JXHsnJGCbRxYvDf\",\"hQJZAKtGhbvtiHRn8\",\"zd9FLSzsGz3evKafy\",\"ovqQRfyvmEDypjrnC\",\"DvzpcjeQsLCSZc9r9\",\"4eNkGG3T9iBqeC7Qs\",\"5nY48krepaT4a4QTN\",\"Cc2Cgj4MWXZxsTooC\",\"hiGXnxds6zo7XsfTw\",\"23oi2a3vQwhtLEbSj\",\"X29Ekg7HjqHAYgCSM\",\"E9ttMPTkLkKG6nZrg\",\"cqDm5TJgJLAQyhkiN\",\"sbJcFfQjQ59Wfg4Cd\",\"Cuy7McJ5y8BkXRRk9\",\"C9LKGu2g5hSijvDzA\",\"PSrcg6fy835R4c5CW\",\"ASZk6eFeYMj5pitoe\",\"ey3CASd6Je5LEJzfB\",\"mybpojPXaZigaqsAD\",\"8LfTheFzvicameoz9\",\"vLrq4dEDMM2wd68Dc\",\"dCGac8Y6jKb2a9QSm\",\"2iFe3EHEH2YdhSKrs\",\"v9KtC8YLbMWmXiW2H\",\"4AoQy4B5fPs2KBinr\",\"2QGRoQn2dRq3scu7k\",\"RT2F5THkSKcdmPgBb\",\"D4WwcMWZNgL6pwGRs\",\"p8qqFdJ3FSk5x9z3G\",\"NfMJuiBk6FN5Jc6ow\",\"oWR752PGhCJqt3Xfm\",\"p3dsCFdWGzWGhFrSQ\",\"8PwfYqoDQFThzNtvf\",\"aEm3Wvj2rFYRL8Lrb\",\"So6PHm74mfJuY2WTs\",\"HF28xZKSLM9wEuqNg\",\"ZNnsMeNkdDhHjSrZb\",\"eLkj3Zb2DqiW4AEEh\",\"gJYuGdkXEWWmGRLzu\",\"KRSKj7ikX2ytWFmod\",\"CEd9tLdXeDeNHSzys\",\"9uZpgAtSuPZ7W7DL6\",\"q5a96XumccZyhQNyL\",\"Fk9kLwoG4Brf4KsKf\",\"GM2X83qnuLXTHe5zA\",\"RosFXZYJkcRwjkaog\",\"T2QhZRhybEKeJTb44\",\"3Zceb8GudqAG3onG3\",\"dXMbkgQFoN37BhruB\",\"MKT7khMBGXzA22ykf\",\"mfsaETo7uA4x5vqLD\",\"k5mp7Hkg8w5rwiXpe\",\"kGwkJGKrHotSoTPuL\",\"DEDniTrstQYGounXT\",\"QgovSTPL9yK25CB6d\",\"vA6SiB3BjMmByCSvd\",\"M8dQuMrEpP8Hc3tHN\",\"kYWb8BwpKwunQkxeX\",\"KdNDysEsy2TW5QRJ2\",\"Nt2qqga6sgvoLr9xj\",\"9pzFiFK3ANLjQfnr2\",\"vt6MbZKuKZptRkwcr\",\"LmTRmhiuDidAebAsw\",\"uiEuENARwFpnNMfFs\",\"LWCzZ8mb8gwrRNGfq\",\"rMaraYpJZdYwS9JkQ\",\"n2BRY9X8899dcG8Bw\",\"TR5aWdDKP6iaL6mGK\",\"FS78GK2Ysu7u8ndMs\",\"eMuCpJ2spXWkJjWNz\",\"pufcWLGPAW92RseGN\",\"FEYpu9RWysAgW3XnP\",\"F2ykFxhDEEkj6N5KE\",\"NsEMoXJ4nfEMtoCn8\",\"4rwxLqLs2mNZNg8NB\",\"rzF2F7DgSjgJrneo8\",\"dZGNAJXB24zNh2tsD\",\"zAsNgFHdyiHeiHB8C\",\"AF6LgdKhEdzwgRJom\",\"rgvAJFwfCeYoYnFTK\",\"CeqDTgtWQMzrRHTzv\",\"mDWNyaaQ9hvPCRzSd\",\"fYXiqjFvkQZqmjgCi\",\"FzxTj4GuujhwpZM7y\",\"DwetpbChQM4r6Gwah\",\"63Fs5YK9nTg7fyTWH\",\"di2hhADLx59Bj4ewM\",\"66a9xX73nmTEuKs9k\",\"odH7dXFsDzTxW6eGJ\",\"DrkR35NqnP9NDLbq6\",\"ahk2qiXKJA753wAJk\",\"nfXGHENb5md7m355s\",\"XrqNzJ2FRG8HnGiR6\",\"dKKMvaYoJunNPk5Wa\",\"Ne8mK9DDHG8TRkoxG\",\"hab8YixsXxe4CcZpP\",\"sQEmZcHq4fk2Refuv\",\"9yHhFzAv5TYxsfmm8\",\"uMSxJGWe43a9FssCa\",\"yr822PZmmiDDenxpB\",\"WHR8EHPPEpghNnpXt\",\"kQH5b8MXJunh84Czq\",\"u9krYeS7KX2svANrW\",\"ybeRKCx2zsJkvGRKA\",\"ekQh3jzgGLsEMbKo3\",\"YcCLwitFMAEJSnxAW\",\"4yNLEwL2rsx4EE5Nt\",\"a777e8chPvJkY3tKa\",\"NG8PWBSjsM8mMhQEq\",\"E8TMSMSamEbBtf9Lo\",\"ELfyvLSAPDbhksDBb\",\"jBR47vA7HwAZqp4QA\",\"2ptN2mhjFwFcHyPZd\",\"3cF6NXq3ZEwdkgSjb\",\"H4abACFDH5t8CnnyH\",\"ZrKCkX7xxGGZzauFW\",\"aS9AJKtmzZxpmm38X\",\"8BFSTCnoe2QggN64c\",\"Wv2vJnEj8ywNmARoF\",\"syRNbbPdLCGXbH2Gy\",\"NNE5HNRXAkmhrWgyQ\",\"DoDsp3ets8frF9W3C\",\"JXHJiDdKuX4S9Sho6\",\"6SKDJwXpev4qPSzgM\",\"TwKZ3835iFLog2RuQ\",\"8zWoQQvtYdg5yoweM\",\"TjeuzxKBd7b4ZajSs\",\"PhceyfmFntJcn5Fhf\",\"JS3hNM3XXkxPdg3yk\",\"rfyEkETeoS96QNH4e\",\"iojEnnY9FsMfYzp6f\",\"bJxaKHJqR82EWw8Su\",\"yNjkHfHESBAnCssPB\",\"gSFJPsMXnqAog3Q9f\",\"Pe8vWpDHRuH9nSGKW\",\"b9YQPLb9ZPSADdHXX\",\"6kz7jjJS8W4tikYQT\",\"S7W6cfRdtupdaRhWk\",\"Q9afpRu3u8zuWuzLQ\",\"iS5BrkGLzJyPK7nKt\",\"qsxEWC39oMoWATCPr\",\"R4SjTgDnpigJYDLyL\",\"yjtdwc2AC4jA2RWtn\",\"7JS3f8SQSvXK2kjtz\",\"HqmxnQJM66Y57twhn\",\"NzbRqGWspQnWMoDrF\",\"sX9GZp3fYyQLrBKMJ\",\"DxxNN37iEz7b8t2nf\",\"oBcs8GLX2ZFLXQy8y\",\"yAouD3PxzED8a4gap\",\"EMJ6uvBZkie429gdg\",\"ta5CrWnBCRusD2WMo\",\"LyaZoABZYGfJBw2RF\",\"YA7SDhpgEtsqynvNL\",\"ji5f27FPz4wRRF6Ls\",\"RehJGBFS6CYiWdjZx\",\"6gS4E2C84vBYTYeDZ\",\"TTgP9jcqGxCfKotZ3\",\"i5iePG5GqhJJ8HEoB\",\"vSTK7aCEH576sA65R\",\"GGprTwrkjuccmrQRg\",\"u7i7WPM63n42r8R8o\",\"TPhfpB5tzQWSSn67n\",\"3nied3n8KG8RSNixH\",\"w2HhxvSLmDhaGCAjE\",\"MoH7q4Squgiaig5GG\",\"7K2GEb5TZRtSpyyGS\",\"KLmLKaJPfsYxp42p2\",\"9CoqdidjM9KbeKnHY\",\"hRiMXDZNAzyPd5tpt\",\"FvFhg2wELM3SCZDZQ\",\"k2Eo3wyfZZ6KxvKhN\",\"5HCu9Ydd86QgHDRNP\",\"3LiSLdtN58n46NEqg\",\"tpxMgkGSHwBjS95Ta\",\"ZMSkfkwmgLikezRHX\",\"Kh3Pc2ZRusurLaMyP\",\"kNrnnMxhFZztMTBAX\",\"mG8HqKiAQFTdRZthG\",\"hkJGLuib5md8vZ9HD\",\"gXTAie79kiw28tx5u\",\"b5zo7s6xrqWgQnPao\",\"sHjfbGQGLHE6JR6qu\",\"6HgMANhu6WiGyXSGN\",\"8WpvgSbQciTQWdd8T\",\"PcfcAbTJPrdzJN2FW\",\"DPi9QGLctq2y76KuE\",\"zvR7koBTGcaj5pJNQ\",\"dj5AyG5fWP8FdsSmZ\",\"dBzwBtRjZqB98DJeB\",\"NuqGt5u3s7vJ7HBGR\",\"BfwbCTRtW4wG2bsnH\",\"g9FyJ8yeT9ic97Qp2\",\"rrSC943cCKNG48sH4\",\"8fZxjQfuXw5HMSRJM\",\"zfGYZ7gpR8fxJpagh\",\"atR7uPt3durx85RSa\",\"KJCDwGkoXh8qtbbKr\",\"d8qtzoLB264iP8tdY\",\"J3upzLHuEwXH7Z2hx\",\"6428wKHtwKkFdvBs5\",\"cAP3n5NY64uoMwzRR\",\"RGMbFMZXJr7DhcAJy\",\"6MjSiiBLPcvXbXcaZ\",\"bccs9koJxyQ9XNiLC\",\"pJj86xc32Bs7Frxvi\",\"dYPkStFnLvAMsHSzZ\",\"dky93oMkJsJjEJKk2\",\"pduNK68oazqQTtbLp\",\"9gJsF5apWJGWZJprn\",\"DYDJTyGgKFnBRLm2r\",\"YRAzEBJoLvSaiPtYx\",\"Tf7TJFSPktJBgLA4k\",\"CLypXaZksY99mpRCm\",\"Cybtjz3cF7RgoiqrN\",\"5XiuAqicKD4hBdu63\",\"oyKcm3zqdy8Ko5P5d\",\"AJexRBN9cYQmqvYu6\",\"c2u7qfdaYxcyuydtu\",\"C2AfMipCicfD58WJ9\",\"DpnYcMphntjsQ96qg\",\"HuNF3xTBzmatyGSTm\",\"YLFHcoEWk6PzJPsnZ\",\"9MER8SZ9Xo6xNYMj8\",\"utTuvGdmu2sBHWBhQ\",\"hNtC6BTygkPYknybs\",\"7txFzDQ43vJ7qCY88\",\"oig8ig9SE9RZa8ttL\",\"wjc4iejpErBhxWwHo\",\"o4ixjQGSaYqA2JoM4\",\"kAkLAF9T5McSxXJCT\",\"Ecg4m7srYGgZsb4Ck\",\"nJXgbSQozcoE8Wn4N\",\"WdKdsgH9gXkKgCycx\",\"5wCHxMQ5Km2bjqcGZ\",\"Lg4t6SEWgtYz4u7Cj\",\"GGdmhAvxXhqhhibJN\",\"MXGuntvz3byrP6WJc\",\"p7js9trz2zk2RorCR\",\"buX4mCQhtXCfBjeno\",\"5S9nX4rKsnCcnv4Cz\",\"9bQyb6rW7xfE4vgrR\",\"DqNQn9Jsxcu5HijKE\",\"aaJWssCWfMa63XJng\",\"DHghRMdMFbnwMj7WW\",\"5hQnRWiKkhgKJXNMP\",\"EfxwqhYdapX3dMQC2\",\"B8n7KqbvEDjZzgj2D\",\"gf7u4MKcGDFiijzK9\",\"7N6c3Xu244bnQWjBs\",\"srJ34BaybkQh3qRkM\",\"LPGPHgJc8MkvcEDBc\",\"Ds7L5bksw2QRHjrKL\",\"GqothajHR2vKfEHGZ\",\"nFbmNzMQ38TncmfQX\",\"yod5YhKtPqw2GfG9B\",\"qAby4AWXmTNeusvg3\",\"eYfPWvZwnJQkHbSTK\",\"q6QsMYNMpPNtmyTeW\",\"qQQ4hCQpzitmHSkjS\",\"uouMMdEWBuLBWPbzr\",\"9ivvGvJGvtQfigQaZ\",\"T2vhHPhRR96hRizq8\",\"CHvzhtXnv8HTbPQ56\",\"pPpmP7xeJzGgK362R\",\"BrTDhPJcACL2bsrpJ\",\"sKfrD9gjCDHuqLzSk\",\"PoxbYX9cfmuFXcDg6\",\"T6iBEE2jp7f7iEF2P\",\"XD5nmvKQchKezPXhy\",\"K6MfKMytoJJuSGewP\",\"JhX7jvtpwNyxcc39m\",\"AQSqD9oNv2uPfxZCR\",\"AFfw7cGg83uYk2Miy\",\"BJp2WkwLWGHHB5oQW\",\"oaWf38ryFkh6TFvG6\",\"Fb2wehA7QgTFWry2x\",\"2HfNkb2SoqdyjKW3o\",\"jWbd7SYDzLPjc9EDh\",\"MfKe55snfKsdnDejs\",\"yyo6YLQN2of6fxp49\",\"LeqeoQ8KNYBfXs4bz\",\"dJzNF59j2p8jWZxiQ\",\"GTKsdeEihE636Le9i\",\"Wpn95NqWxncQrwNgz\",\"QTJvghkPpGKnKvZ5R\",\"DfHHpvnubuFmeNky9\",\"PC3pLs36zNzpRDSuE\",\"2EbDCCJJvCfKkbYia\",\"XP4pRYeYiX9K4ejpW\",\"ghMkPtdFCpM6w8nax\",\"2PufnQcsHsfymufX3\",\"c2q7mY39z5JPEMCaM\",\"X4rzfxGgxx6CS7Bpz\",\"CKHKhvJcq9jNMqrmd\",\"Afnps7TJQuS9sipMb\",\"RoGGD5cpHb4ftdLDv\",\"qZQxPQ2kaNKAMesHT\",\"4Lwjr34ypKNQNQCar\",\"QFZcdxGKBaFZb7Zbk\",\"9MEhPCZveuohsvR2w\",\"mvJBakQ35CWAnbbEZ\",\"fAWEFyQMvK6Eqxq4t\",\"WQubx7DAkG6WZE8FA\",\"ZXWDtCrM9ev3439oi\",\"R6YxHWAiLgKwy5YvC\",\"GJmKcqu7xppQyBaTt\",\"RnY25enEBE8T9P5GS\",\"StNu7DPyTgEStZsMY\",\"J23RcmzbdtBbPCTjT\",\"a2Kmh6ekWqQQooHiQ\",\"4RY3zj9C2t8GGefhi\",\"JiSpvq6C7azQEmENc\",\"Kv92AoBe3KjTCfiBD\",\"fKzJMR2LLbiRtGetj\",\"93ADqsBQnwTEosjbq\",\"qzXAMXsHZGT8o5hTA\",\"YXQvrgeiGzLd6cTW9\",\"8uiLiJcmWxWe6qw65\",\"w67KfQgZ6WAeY7K4Y\",\"PTDFuxAzou7W6asWt\",\"hR7GMiqGap4CzEWSy\",\"kJMAAWPWEG6qFouEh\",\"4TmgHkn5vqyHK3sYC\",\"uGuS9YRXW2nj4p6zf\",\"ctbThYbufFCYbRK4f\",\"KH4Wr3YSvNddCSRJ2\",\"Si6jT3DnRMXYd27k9\",\"T6Rm8mREPMZSftzrC\",\"NGvCPuMiAP3xrRLfB\",\"pQwhNKiCne4gEZgcn\",\"ckMvGF5TAyCwcxJBm\",\"YmMgWhzhHhQLmGGgH\",\"hEpaAYfTpAp7xunYa\",\"w3QDkmjZj2dAFDsjq\",\"jkbavR2ATFJcpmo8M\",\"tm3R3qmjwwqy2Kj6T\",\"xdgy7nWSKCekXnaJM\",\"QWjsXnLaJ7xfL3Amq\",\"HBuJYgW2eRBJp9FoG\",\"7ajSwbNMNp9ggPewT\",\"YSXGNecq9TDujYfkE\",\"d9LBRxvADNBB5QJMB\",\"uK58g2EXxqxTaB2iA\",\"hpT9yYe5R45poHrYR\",\"3KkyQm77zsew58Dc2\",\"dSd7wHgXGQeG5BQ2P\",\"suArq5BbSy7gD6xri\",\"b27MNmz8XbX6cPDoL\",\"rCrbqMiaGPgHYTNxu\",\"AMpQSjKsRqhCDyS2j\",\"APm7XtwYtukQ2kB7i\",\"eW9R2SCoYnY8HBAdL\",\"dzS6WBTMHyFEag6Fp\",\"vCeeMuYDbz3MB4vsk\",\"Cg3LKtEAJpsrdWroG\",\"xKGFjP5mzqmdrJHNg\",\"B4y8aoyXJtskYPFEL\",\"Qyfyyw6oC4EHAndzo\",\"M2gFMJkocQSY6bsFR\",\"xjyixzXzqqqTfJARd\",\"TCvpT4EPb8qNssNB7\",\"5QN8R22z43SrwoHDz\",\"qB6KSTYC6H2TQEQY6\",\"MfAA58Bz5482Z5qQt\",\"K42ijC8Jy8GHBnobP\",\"Hu4SkoNyWCP4vmsZE\",\"Smb849PSYsSmsgEua\",\"mw9464S5dnenqzvpm\",\"5Dd7XwALvvMMwS4Fb\",\"rDgKHd6ZSSpboiAj7\",\"mBtSsKTHdQniYAfsZ\",\"54BFnXEjY3FuRNYpN\",\"vAbK8sCfKyFC78HYg\",\"FiaTpm7ehfDv43wSG\",\"RfbjShbg8jmhyNtJh\",\"NHp9cXgWCyX6KqyMT\",\"ruzwBPphPDRgLXdnP\",\"QDiHtAiYuyEEmoCgv\",\"BgZcBs3KWeYCRKChr\",\"Wi4H6ayKsNDWWQCG5\",\"Ncn7Qn2LbdsiJnfFk\",\"hLNNSs2pu5WgwCcjL\",\"wrL4iX2CCSqDCCty3\",\"E2hpke7mHxAWsw5t9\",\"2MjzJ7yxh3eT3xbng\",\"GgQqni8TkbqEBGcsy\"],\"total\":506,\"quality\":[2,5,5,5,5,5,4,5,5,3,4,5,5,5,5,5,5,5,5,5,5,1,5,5,5,3,5,5,4,5,5,5,5,5,5,4,5,5,5,5,2,5,1,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2,4,5,1,5,5,5,5,4]},\"flags\":0},\"summary\":\"Create a function where given the number n to count down from, and some words txt, return a countdown sequence as a string leading up to the words at the end.\\n\\nPut a full stop after each number and uppercase and add an exclamation mark to the word. See the examples below for clarification!\\n\\nExamples\\ncountdown(10, \\\"Blast Off\\\") ➞ \\\"10. 9. 8. 7. 6. 5. 4. 3. 2. 1.\",\"tags\":[\"formatting\",\"strings\",\"numbers\"],\"timestamp\":{\"$date\":1580572482062},\"title\":\"Making a Countdown\",\"quality\":4.549295774647887,\"family\":[{\"_id\":\"aAmtJZSYjXaXNk9zZ\",\"language\":\"cpp\"},{\"_id\":\"vkJqNZqK94Hjsr4pi\",\"language\":\"javascript\"},{\"_id\":\"7QvH8PJgQ5x4qNGLh\",\"language\":\"python3\"},{\"_id\":\"gNcqCf7u4qKc6Cef7\",\"language\":\"ruby\"}]}}"]