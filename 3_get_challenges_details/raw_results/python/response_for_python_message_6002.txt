a["{\"msg\":\"result\",\"id\":\"1712\",\"result\":{\"_id\":\"jSxo7n5c8J42zrwMB\",\"author\":\"Thomas O'Dell\",\"authorId\":\"s5M5RvgqR9BhB9JoC\",\"code\":\"def shape_in_shape(shape1, shape2):\\n\\t\",\"difficulty\":2.180722891566265,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"3xsMcxCbw3fmi9cFR\",\"instructions\":\"For math class, Matt needs to find out if a shape can fit inside another shape, based solely on their area. The only problem is, HE SUCKS AT MATH! He has asked you, his older brother, to make a program that will answer all his math questions.\\n\\nWrite a function that takes two shapes, with different inputs, and returns `True` if the second shape has an area smaller than the first.\\n\\nThe inputs will be in a standardized format per shape:\\n  - \\\"Circle, radius\\\"\\n  - \\\"Triangle, Base, Height\\\"\\n  - \\\"Rectangle, Width,  Length (if different than Width) \\\"\\n  - \\\"Pentagon, Side\\\"\\n\\n### Examples\\n```\\nshape_in_shape(\\\"Circle, 3\\\", \\\"Rectangle, 3, 14\\\") ➞ False\\n\\nshape_in_shape(\\\"Triangle, 10, 5\\\", \\\"Circle, 2\\\") ➞ True\\n\\nshape_in_shape(\\\"Pentagon, 10\\\", \\\"Circle, 10\\\") ➞ False\\n```\\n\\n### Notes\\nRemember, the first item in each string will be the name of the shape, and all relevant data will be provided following said name.\",\"isHidden\":false,\"lab\":\"Test.assert_equals(shape_in_shape(\\\"Circle, 3\\\", \\\"Rectangle, 3, 14\\\"), False)\\nTest.assert_equals(shape_in_shape(\\\"Circle, 5\\\", \\\"Rectangle, 3, 14\\\"), True)\\nTest.assert_equals(shape_in_shape(\\\"Triangle, 5, 5\\\", \\\"Circle, 2\\\"), False)\\nTest.assert_equals(shape_in_shape(\\\"Triangle, 10, 5\\\", \\\"Circle, 2\\\"), True)\\nTest.assert_equals(shape_in_shape(\\\"Circle, 10\\\", \\\"Pentagon, 10\\\"), True)\\nTest.assert_equals(shape_in_shape(\\\"Pentagon, 10\\\", \\\"Circle, 10\\\"), False)\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,3,2,2,1,3,2,2,2,0,3,2,1,2,2,2,3,3,3,3,2,2,3,2,3,1,2,2,2,2,2,3,2,1,2,3,5,2,2,0,3,3,2,3,1,0,2,2,2,0,3,3,3,3,4,2,3,2,3,3,3,2,4,2,2,1,2,3,0,3,0,3,2,2,3,3,2,1],\"rators\":[\"7hzSvcYdq6QjoRnJY\",\"K96FwtfDDN5WM4Bb7\",\"gb9rvGus2Jv7bjZSs\",\"2fxapKr8XGdNeaKi2\",\"s5M5RvgqR9BhB9JoC\",\"tAF9Gf6PiGogbZuWs\",\"Jqk2uJZZxEv5wZFze\",\"C4QntmkYtB89GNtpd\",\"8JyqsSbN2FJXPr3cw\",\"ab7BsQuhDo3QgE6bh\",\"kQH5b8MXJunh84Czq\",\"2innwjWqxJHo4eRGh\",\"kBmhcwkCqxiy4GwiZ\",\"F2aeZ4zqupp7a8SkW\",\"5J4tAkdA45c76xAfk\",\"cRpaCxYRmGcN3Nsoj\",\"xADbkamSqTFEqXufa\",\"sz8ufn9i8zeiGWpAy\",\"AasGs8AeX9Lcb9xJn\",\"8PwfYqoDQFThzNtvf\",\"pmgFEciNrd3ES9tuu\",\"4CFzv558qbGcpQwc4\",\"PytNZK9mNiRiZxPrm\",\"w3A7cBWyAfukk6xEQ\",\"n2BRY9X8899dcG8Bw\",\"aEm3Wvj2rFYRL8Lrb\",\"ZNnsMeNkdDhHjSrZb\",\"EjbDDFRECrzQDkzrX\",\"zbDjaYZcYccgJtr4z\",\"vWgBJaEtcu3XoYuer\",\"YRstQuthRkFeBiXug\",\"gJYuGdkXEWWmGRLzu\",\"aPLuemxzZ5iS57NBQ\",\"KdNDysEsy2TW5QRJ2\",\"HF28xZKSLM9wEuqNg\",\"yr822PZmmiDDenxpB\",\"J5T8gZqiZXFuFDTQ7\",\"jL4y5fTJAMBjhZmko\",\"wS2o3x4nrsadtC3xP\",\"v9KtC8YLbMWmXiW2H\",\"DEDniTrstQYGounXT\",\"M8GQ4xu7hzfsD9LBs\",\"u72ipcjbNDSkWX8Gw\",\"iojEnnY9FsMfYzp6f\",\"cR3ibTMxLyEdDFCHY\",\"HqmxnQJM66Y57twhn\",\"KZ2xddpM2f9JRaryB\",\"zZDaXBxMzTCBhNkgL\",\"yjtdwc2AC4jA2RWtn\",\"hRiMXDZNAzyPd5tpt\",\"ZrKCkX7xxGGZzauFW\",\"DrkR35NqnP9NDLbq6\",\"xn7uGNKeAwPEkP9oA\",\"Yp7uvStL97cC9fKkY\",\"TRhQJp2EDs9Q6sm47\",\"qD2LrwaDrSdiybLKY\",\"erEunWkRveQoPZyTC\",\"BfwbCTRtW4wG2bsnH\",\"CLypXaZksY99mpRCm\",\"BrTDhPJcACL2bsrpJ\",\"DPi9QGLctq2y76KuE\",\"BCPNmfdwmRDs6FqcN\",\"KEmTti9Tza8A2FLQW\",\"J3upzLHuEwXH7Z2hx\",\"dkcmCKwqApX5jBggc\",\"oKdRQvxcdrGC6nBiN\",\"iS5BrkGLzJyPK7nKt\",\"7ifh8r4gvyYMhKB94\",\"gXTAie79kiw28tx5u\",\"p8qqFdJ3FSk5x9z3G\",\"PXAcsKkssS2yLyDv2\",\"GTKsdeEihE636Le9i\",\"cAP3n5NY64uoMwzRR\",\"4o9CEfMC5P4jkpc5G\",\"Wpn95NqWxncQrwNgz\",\"oBcs8GLX2ZFLXQy8y\",\"QRv96jmNaYsWkxQEG\",\"Jz9WTYR6LRAe4BsJ3\",\"LQxof8pGabGuWP7Gn\",\"PWgzeK859suojbrRx\",\"GGdmhAvxXhqhhibJN\",\"H9KZi2cjt4FwH7qog\",\"gKnWjDjwrJh7MK2df\",\"AFfw7cGg83uYk2Miy\",\"hkiz2Nv927cYGrA86\",\"yod5YhKtPqw2GfG9B\",\"buX4mCQhtXCfBjeno\",\"2PufnQcsHsfymufX3\",\"srDSN434Mj5MomtoS\",\"8sNv5PTHa7XQ8bNqR\"],\"total\":97,\"quality\":[3,5,5,2,5,5,5,5,5,5,5,5]},\"flags\":0},\"summary\":\"For math class, Matt needs to find out if a shape can fit inside another shape, based solely on their area. The only problem is, HE SUCKS AT MATH! He has asked you, his older brother, to make a program that will answer all his math questions.\\n\\nWrite a function that takes two shapes, with different inputs, and returns True if the second shape has an area smalle\",\"tags\":[\"algebra\",\"math\",\"validation\",\"geometry\"],\"timestamp\":{\"$date\":1578671977308},\"title\":\"Shape in Shape\",\"quality\":4.583333333333333,\"family\":[{\"_id\":\"8y7jaGhJdEW2qsdGf\",\"language\":\"cpp\"},{\"_id\":\"XT6AA9Dae9M2iJjuw\",\"language\":\"javascript\"},{\"_id\":\"jSxo7n5c8J42zrwMB\",\"language\":\"python3\"},{\"_id\":\"q5qmBLw7ENBuSpjxK\",\"language\":\"ruby\"}]}}"]