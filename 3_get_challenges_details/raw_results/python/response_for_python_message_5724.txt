a["{\"msg\":\"result\",\"id\":\"1573\",\"result\":{\"_id\":\"eRY7eBD8dan54acgG\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def is_checkerboard(lst):\\n\\t\",\"difficulty\":2.10062893081761,\"familyId\":\"Sq4AYSB8knFEDbWhi\",\"instructions\":\"Create a function that returns `True` if the two-dimensional `n x n` input array has a **checker-board pattern**.\\n\\n### Examples\\n```\\nis_checkerboard([\\n  [1, 1],\\n  [0, 1]\\n]) ➞ False\\n\\nis_checkerboard([\\n  [0, 1],\\n  [1, 0]\\n]) ➞ True\\n\\nis_checkerboard([\\n  [1, 0, 1, 0, 1],\\n  [0, 1, 0, 1, 0],\\n  [1, 0, 1, 0, 1],\\n  [0, 1, 0, 1, 0],\\n  [1, 0, 1, 1, 1]\\n]) ➞ False\\n\\nis_checkerboard([\\n  [1, 0, 1, 0, 1],\\n  [0, 1, 0, 1, 0],\\n  [1, 0, 1, 0, 1],\\n  [0, 1, 0, 1, 0],\\n  [1, 0, 1, 0, 1]\\n]) ➞ True\\n```\\n\\n### Notes\\n- An element in the array adheres to the checker-board pattern if the elements directly to the left, right, top and below are of a different type, and the elements on the diagonal direction are of the same type.\\n- The element in the upper-left corner can be either `0` or `1`.\",\"lab\":\"Test.assert_equals(is_checkerboard([\\n\\t[1, 0, 1, 0, 1],\\n\\t[0, 1, 0, 1, 0],\\n\\t[1, 0, 1, 0, 1],\\n\\t[0, 1, 0, 1, 0],\\n\\t[1, 0, 1, 0, 1]\\n]), True)\\n\\nTest.assert_equals(is_checkerboard([\\n\\t[0, 1, 0, 1, 0],\\n\\t[1, 0, 1, 0, 1],\\n\\t[0, 1, 0, 1, 0],\\n\\t[1, 0, 1, 0, 1],\\n\\t[0, 1, 0, 1, 0]\\n]), True)\\n\\nTest.assert_equals(is_checkerboard([\\n\\t[0, 1, 0, 1, 0],\\n\\t[1, 0, 1, 0, 1],\\n\\t[0, 1, 0, 1, 0],\\n\\t[1, 0, 1, 1, 1],\\n\\t[0, 1, 0, 1, 0]\\n]), False)\\n\\nTest.assert_equals(is_checkerboard([\\n\\t[0, 1, 0, 1, 0],\\n\\t[1, 0, 1, 0, 1],\\n\\t[0, 1, 0, 1, 0],\\n\\t[1, 0, 1, 0, 1],\\n\\t[1, 1, 0, 1, 0]\\n]), False)\\n\\nTest.assert_equals(is_checkerboard([\\n\\t[1, 0, 1, 0, 1],\\n\\t[0, 1, 0, 1, 0],\\n\\t[1, 0, 1, 0, 1],\\n\\t[0, 1, 0, 1, 0],\\n\\t[1, 0, 1, 1, 1]\\n]), False)\\n\\nTest.assert_equals(is_checkerboard([\\n\\t[0, 1],\\n\\t[1, 0]\\n]), True)\\n\\nTest.assert_equals(is_checkerboard([\\n\\t[1, 1],\\n\\t[1, 0]\\n]), False)\\n\\nTest.assert_equals(is_checkerboard([\\n\\t[1, 1],\\n\\t[0, 1]\\n]), False)\\n\\nTest.assert_equals(is_checkerboard([\\n\\t[1, 0],\\n\\t[0, 1]\\n]), True)\\n\\nTest.assert_equals(is_checkerboard([\\n\\t[1, 0, 1],\\n\\t[0, 1, 0],\\n\\t[1, 0, 1]\\n]), True)\",\"language\":\"python3\",\"summary\":\"Create a function that returns True if the two-dimensional n x n input array has a checker-board pattern.\\n\\nExamples\\nis_checkerboard([\\n  [1, 1],\\n  [0, 1]\\n]) ➞ False\\n\\nis_checkerboard([\\n  [0, 1],\\n  [1, 0]\\n]) ➞ True\\n\\nis_checkerboard([\\n  [1, 0, 1, 0, 1],\\n  [0, 1, 0, 1, 0],\\n  [1, 0, 1, 0, 1],\\n  [0, 1, 0, 1, 0],\\n  [1, 0, 1, 1, 1]\\n]) ➞ False\\n\\nis_checkerboard([\\n  [1, 0\",\"tags\":[\"arrays\",\"validation\",\"games\"],\"timestamp\":{\"$date\":1553578315787},\"title\":\"Checkerboard Pattern\",\"stats\":{\"completed\":{\"total\":167,\"ratings\":[2,2,2,2,2,2,2,2,2,2,2,1,3,3,2,2,3,2,3,2,3,1,2,1,3,2,2,3,2,0,2,1,2,3,3,2,1,1,3,3,2,1,0,2,2,1,2,3,3,3,2,1,2,2,0,2,3,4,2,2,3,0,2,3,3,0,3,3,2,1,0,3,2,1,3,2,2,3,3,2,2,3,1,2,3,3,3,2,3,1,3,1,2,3,3,3,3,1,4,0,2,3,1,1,3,1,1,3,3,2,3,5,2,3,2,2,3,0,2,3,3,3,1,3,2,3,1,3,3,1,2,1,3,0,3,0,2,3,3,3,2,2,1,2,2,3,0,3,2,0,3,3,2,3,1,1,3,1,3],\"rators\":[\"BkPgkDQGHm66X4Qai\",\"8JyqsSbN2FJXPr3cw\",\"Jqk2uJZZxEv5wZFze\",\"nydW2HwDGZuk8XaEL\",\"yZvzB3qFb8pkHy4dg\",\"qaR8DnWrTk8Mus5Q2\",\"tAF9Gf6PiGogbZuWs\",\"gb9rvGus2Jv7bjZSs\",\"T3ZAuoMrJjvZwN55B\",\"M8jrv2FfpMQp9Qzpx\",\"ab7BsQuhDo3QgE6bh\",\"FikSPhcrHBpQ4CyGC\",\"PFjMZGHNAPTkgd7tq\",\"nc7bRhkxgKyqusYe3\",\"AF6LgdKhEdzwgRJom\",\"ahWFxnaxt9bXSA4f3\",\"YdRcRS2e6iai93gvW\",\"FiHK5ZDMhR7d5WFET\",\"7g3vZaQXhLpxrajyg\",\"C9LKGu2g5hSijvDzA\",\"td7qPZ7Lv4pEWT2Ya\",\"GAMLghpc9JMXz3jvs\",\"yrCNkFYQBEDE76eFS\",\"hsrNYf3WbexXJKhCq\",\"TNQ7ixK78HHTLP7it\",\"aXCm9vWqKwL9XFYoj\",\"RxzyawFnRtxWjSucv\",\"jHrtWDGBhkbuWa7fG\",\"AYaEkTWLMmfzpwejr\",\"BFNm9gacwba9KyLFW\",\"jYJ26SiLKBu5GRumq\",\"7G4BWvmKhTvXg8Mei\",\"cR3ibTMxLyEdDFCHY\",\"T2vhHPhRR96hRizq8\",\"gMJhLdyw3tH7L96X2\",\"nfXGHENb5md7m355s\",\"TgjcWxsTjar7snQx9\",\"XKi8iZXBCHCaebSHh\",\"FgkYtHLxeD8pETJ8T\",\"kQH5b8MXJunh84Czq\",\"Nj6FwgBtAXsaQwsM2\",\"2fxapKr8XGdNeaKi2\",\"Jg8ZSRXe3NoDMCqGu\",\"S8nRnCyqEdKAr7Rap\",\"7hzSvcYdq6QjoRnJY\",\"otXtuQygbcYATMZoP\",\"2NJuDfSqdrF8kHHni\",\"hSfK7dhSiKdNjMbLr\",\"RXb6cmCNaYbczuDwy\",\"oqGkxvASXq52iTDvp\",\"s5M5RvgqR9BhB9JoC\",\"gxHSEPa37E5JKD6Mk\",\"6gsMupsCZJQgiwzJi\",\"rurh72mGpAthfGRGt\",\"hJkX94ypDvaMPFCdw\",\"HQxp7NcdvF92G7bYS\",\"v9KtC8YLbMWmXiW2H\",\"qBaLGrm952ii9K23M\",\"HqmxnQJM66Y57twhn\",\"3ECpdeExhBmkYXtba\",\"AbrJ8hMyv5fFXG6DN\",\"N962oRnYTtRzEd22M\",\"K96FwtfDDN5WM4Bb7\",\"WX6R5brerMTrHs5ZM\",\"kBmhcwkCqxiy4GwiZ\",\"mhwJATYEcAEQ8Bmeb\",\"ySRnygsLwGGsmZhfa\",\"r5YeFXWikthQXogSb\",\"C6H8Qi7cchRSSsTKq\",\"8PE2cfZEhQBPhe8LG\",\"C4QntmkYtB89GNtpd\",\"w9ccpyskdwvqCanmJ\",\"6ShafRStcvew4GfCh\",\"yKttxy9JGn5Jzwuj6\",\"PqEKjCDkJtYoYuZfj\",\"8PwfYqoDQFThzNtvf\",\"M6jpRARa4YDQM5tqA\",\"JKb5rhL6DKcCAypF9\",\"vJS2qEPc3Psk9nSpH\",\"ftRou9zcw69GCx4iv\",\"8goAZkbKyGdMvNk3s\",\"2innwjWqxJHo4eRGh\",\"orFLgPDw9H5MDzmwo\",\"Yp7uvStL97cC9fKkY\",\"AasGs8AeX9Lcb9xJn\",\"kyxi2FwerhAoufTyB\",\"sJWTa7iWeRoRtqJ8N\",\"4CFzv558qbGcpQwc4\",\"T7QZG6y34b65Fxyef\",\"S6Zd8mPuvhuh3MFRt\",\"X74H8PYX8XYkrGRQc\",\"w3A7cBWyAfukk6xEQ\",\"PytNZK9mNiRiZxPrm\",\"mDWNyaaQ9hvPCRzSd\",\"aEm3Wvj2rFYRL8Lrb\",\"ywk3XGvcmpTgRxwZa\",\"wZoxzQDbso9SMAPkY\",\"ZNnsMeNkdDhHjSrZb\",\"YRstQuthRkFeBiXug\",\"kYWb8BwpKwunQkxeX\",\"EjbDDFRECrzQDkzrX\",\"gJYuGdkXEWWmGRLzu\",\"J5T8gZqiZXFuFDTQ7\",\"KdNDysEsy2TW5QRJ2\",\"8sNv5PTHa7XQ8bNqR\",\"HF28xZKSLM9wEuqNg\",\"yr822PZmmiDDenxpB\",\"DQskEvAv5KiJDPtGF\",\"oB8MCqep5GBXXuhB8\",\"ACEZh39brWjdGkZXb\",\"9pzFiFK3ANLjQfnr2\",\"euPBBaYXyS8RBr9KB\",\"R4SjTgDnpigJYDLyL\",\"4rwxLqLs2mNZNg8NB\",\"Wv2vJnEj8ywNmARoF\",\"W5TajitmCyxz87zAC\",\"DEDniTrstQYGounXT\",\"Lfut9z3euZ3odxFcH\",\"hnyhBFWwNCz9mDfSi\",\"iojEnnY9FsMfYzp6f\",\"zZDaXBxMzTCBhNkgL\",\"9CoqdidjM9KbeKnHY\",\"yjtdwc2AC4jA2RWtn\",\"iS5BrkGLzJyPK7nKt\",\"gSFJPsMXnqAog3Q9f\",\"ZrKCkX7xxGGZzauFW\",\"kXEfD7xxEyWd7oxxL\",\"Ecg4m7srYGgZsb4Ck\",\"XjajdyybZZbkz8o5x\",\"mG8HqKiAQFTdRZthG\",\"4u53tzw39QRftQwBh\",\"c2u7qfdaYxcyuydtu\",\"qD2LrwaDrSdiybLKY\",\"QRv96jmNaYsWkxQEG\",\"xn7uGNKeAwPEkP9oA\",\"qZQxPQ2kaNKAMesHT\",\"dkcmCKwqApX5jBggc\",\"J3upzLHuEwXH7Z2hx\",\"DPi9QGLctq2y76KuE\",\"gXTAie79kiw28tx5u\",\"oBcs8GLX2ZFLXQy8y\",\"4RsakkyRXyYGwFxEa\",\"cAP3n5NY64uoMwzRR\",\"RTDx9axf52kxhFjwZ\",\"GGdmhAvxXhqhhibJN\",\"BrTDhPJcACL2bsrpJ\",\"eHcgvkTGsH7ZziqBo\",\"rfyEkETeoS96QNH4e\",\"T6iBEE2jp7f7iEF2P\",\"2PufnQcsHsfymufX3\",\"LrfszaLCMLfNzfNQN\",\"gKnWjDjwrJh7MK2df\",\"AFfw7cGg83uYk2Miy\",\"buX4mCQhtXCfBjeno\",\"o4ixjQGSaYqA2JoM4\",\"yod5YhKtPqw2GfG9B\",\"CHvzhtXnv8HTbPQ56\",\"rhS8qXRjZcpDXkwnE\",\"JhX7jvtpwNyxcc39m\",\"nxY2fFzGDDQdyyKFA\",\"Ds7L5bksw2QRHjrKL\"],\"quality\":[5,5,5,5,5,5,5,3,4,5,5]},\"tests\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"instructions\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.7272727272727275,\"family\":[{\"_id\":\"qkKqsjRkjh5WuvBnL\",\"language\":\"cpp\"},{\"_id\":\"qNTiqHJ6cDi6Tccny\",\"language\":\"javascript\"},{\"_id\":\"eRY7eBD8dan54acgG\",\"language\":\"python3\"},{\"_id\":\"XaBmoWj2zFfrwaCB7\",\"language\":\"ruby\"}]}}"]