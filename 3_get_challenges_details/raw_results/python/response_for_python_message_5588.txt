a["{\"msg\":\"result\",\"id\":\"1507\",\"result\":{\"_id\":\"FLgJEC8SK2AJYLC6y\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"def possible_path(lst):\\n\\t\",\"difficulty\":2.0555555555555554,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"wWhQNBnwtrR7cjt2W\",\"instructions\":\"A floor plan is arranged as follows:\\n- You may freely move between rooms 1 and 2.\\n- You may freely move between rooms 3 and 4.\\n- However, you can enter the hallway to move between rooms 2 and 4.\\n\\n![Floor Plan](https://edabit-challenges.s3.amazonaws.com/sNdBGbbhbdjdn.png)\\n\\nCreate a function that validates whether the route taken between rooms is possible. The hallway will be given as the letter `\\\"H\\\"`.\\n\\n### Examples\\n```\\npossible_path([1, 2, \\\"H\\\", 4, 3]) ➞ True\\n\\npossible_path([\\\"H\\\", 1, 2]) ➞ False\\n\\npossible_path([4, 3, 4, \\\"H\\\", 4, \\\"H\\\"]) ➞ True\\n```\\n\\n### Notes\\n- A route may begin or end in any room (including the hallway).\\n- All inputs are either numbers 1-4 or the letter \\\"H\\\".\\n- No rooms will repeat.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(possible_path([1, 2, \\\"H\\\", 4, 3]), True)\\nTest.assert_equals(possible_path([\\\"H\\\", 1, 2]), False)\\nTest.assert_equals(possible_path([4, 3, 4, \\\"H\\\", 4, \\\"H\\\"]), True)\\nTest.assert_equals(possible_path([\\\"H\\\"]), True)\\nTest.assert_equals(possible_path([1]), True)\\nTest.assert_equals(possible_path([1, 2, 1]), True)\\nTest.assert_equals(possible_path([\\\"H\\\", 2, 1, \\\"H\\\", 2]), False)\\nTest.assert_equals(possible_path([3, \\\"H\\\", 2, 1]), False)\\nTest.assert_equals(possible_path([\\\"H\\\", 2, 3, \\\"H\\\"]), False)\\nTest.assert_equals(possible_path([1, 3, 4]), False)\",\"language\":\"python3\",\"quality\":4.9,\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,3,2,0,3,3,3,2,2,2,2,2,2,1,3,2,1,0,2,2,0,2,3,3,3,3,2,2,0,3,2,3,3,2,2,2,3,5,1,0,1,3,2,0,3,3,2,3,1,0,2,3,2,2,1,3,3,3,2,3,2,0,3,3,3,0,2],\"quality\":[5,5,5,5,4,5,5,5,5,5],\"rators\":[\"PXAcsKkssS2yLyDv2\",\"8PwfYqoDQFThzNtvf\",\"xn7uGNKeAwPEkP9oA\",\"cAP3n5NY64uoMwzRR\",\"iS5BrkGLzJyPK7nKt\",\"p8qqFdJ3FSk5x9z3G\",\"buX4mCQhtXCfBjeno\",\"s5M5RvgqR9BhB9JoC\",\"gXTAie79kiw28tx5u\",\"Yp7uvStL97cC9fKkY\",\"K6MfKMytoJJuSGewP\",\"8JyqsSbN2FJXPr3cw\",\"RTDx9axf52kxhFjwZ\",\"oBcs8GLX2ZFLXQy8y\",\"iojEnnY9FsMfYzp6f\",\"ouD6cs7ZdxzPfKRKt\",\"cR3ibTMxLyEdDFCHY\",\"GGdmhAvxXhqhhibJN\",\"fznzd3qnvtbFkkizz\",\"yyo6YLQN2of6fxp49\",\"FEYpu9RWysAgW3XnP\",\"MCywMjGMyLgwvdL4w\",\"2PufnQcsHsfymufX3\",\"hnyhBFWwNCz9mDfSi\",\"KJCDwGkoXh8qtbbKr\",\"BrTDhPJcACL2bsrpJ\",\"mDWNyaaQ9hvPCRzSd\",\"u5u2YpHXiNgzDNJdX\",\"ZgWwEdWxjy83WpPQX\",\"gJYuGdkXEWWmGRLzu\",\"J3upzLHuEwXH7Z2hx\",\"6BpQP3ubeg48Q65ya\",\"yjtdwc2AC4jA2RWtn\",\"d8qtzoLB264iP8tdY\",\"YcCLwitFMAEJSnxAW\",\"gb9rvGus2Jv7bjZSs\",\"nc7bRhkxgKyqusYe3\",\"bvmTE46bfcM4ogj34\",\"AQSqD9oNv2uPfxZCR\",\"Wpn95NqWxncQrwNgz\",\"u94AhAdwabXgtbyLm\",\"PWgzeK859suojbrRx\",\"srJ34BaybkQh3qRkM\",\"8BFSTCnoe2QggN64c\",\"AasGs8AeX9Lcb9xJn\",\"LQxof8pGabGuWP7Gn\",\"PC3pLs36zNzpRDSuE\",\"J5T8gZqiZXFuFDTQ7\",\"jCjCvyhqhpebkJn34\",\"HqmxnQJM66Y57twhn\",\"eHcgvkTGsH7ZziqBo\",\"tAF9Gf6PiGogbZuWs\",\"DPi9QGLctq2y76KuE\",\"T6iBEE2jp7f7iEF2P\",\"ctbThYbufFCYbRK4f\",\"MpfytGFYF77emJ3cT\",\"4Lwjr34ypKNQNQCar\",\"AFfw7cGg83uYk2Miy\",\"Jqk2uJZZxEv5wZFze\",\"gKnWjDjwrJh7MK2df\",\"o4ixjQGSaYqA2JoM4\",\"RoGGD5cpHb4ftdLDv\",\"jQZ33w5EDynkkab8m\",\"yod5YhKtPqw2GfG9B\",\"8sNv5PTHa7XQ8bNqR\",\"qM4cFjDW9EBf6BNsA\",\"qaPjAANdnxFnWfj5d\",\"rhS8qXRjZcpDXkwnE\",\"wpYKSaJtog6nQ8rDE\",\"Ds7L5bksw2QRHjrKL\",\"ey3CASd6Je5LEJzfB\",\"5HCu9Ydd86QgHDRNP\",\"Qyfyyw6oC4EHAndzo\",\"mXXPMi2anfJi5whC9\",\"DEDniTrstQYGounXT\",\"n2qKKxomPnb4zez5M\",\"9pzFiFK3ANLjQfnr2\"],\"total\":82},\"flags\":0},\"summary\":\"A floor plan is arranged as follows:\\nYou may freely move between rooms 1 and 2.\\nYou may freely move between rooms 3 and 4.\\nHowever, you can enter the hallway to move between rooms 2 and 4.\\n\\nFloor Plan\\n\\nCreate a function that validates whether the route taken between rooms is possible. The hallway will be given as the letter \\\"H\\\".\\n\\nExamples\\npossible_path([1, 2,\",\"tags\":[\"validation\",\"interview\",\"objects\",\"algorithms\"],\"timestamp\":{\"$date\":1613227004223},\"title\":\"Hall Monitor 2\",\"family\":[{\"_id\":\"yPa5YwAoqfdJuWK4C\",\"language\":\"javascript\"},{\"_id\":\"zpvgaMNbaZq2Awk98\",\"language\":\"php\"},{\"_id\":\"FLgJEC8SK2AJYLC6y\",\"language\":\"python3\"},{\"_id\":\"tKD2tZqRHQCNtB5ZJ\",\"language\":\"ruby\"}]}}"]