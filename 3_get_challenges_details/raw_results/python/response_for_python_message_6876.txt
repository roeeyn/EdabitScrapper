a["{\"msg\":\"result\",\"id\":\"2146\",\"result\":{\"_id\":\"58RNhygGNrKjPXwna\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def longest_nonrepeating_substring(txt):\\n\\t\",\"difficulty\":3.25,\"familyId\":\"ZeCYC3wPcY5oGNMeL\",\"instructions\":\"Write a function that returns the **longest non-repeating substring** for a string input.\\n\\n### Examples\\n```\\nlongest_nonrepeating_substring(\\\"abcabcbb\\\") ➞ \\\"abc\\\"\\n\\nlongest_nonrepeating_substring(\\\"aaaaaa\\\") ➞ \\\"a\\\"\\n\\nlongest_nonrepeating_substring(\\\"abcde\\\") ➞ \\\"abcde\\\"\\n\\nlongest_nonrepeating_substring(\\\"abcda\\\") ➞ \\\"abcd\\\"\\n```\\n\\n### Notes\\n- If multiple substrings tie in length, return the one which occurs **first**.\\n- **Bonus**: Can you solve this problem in **linear time**?\",\"lab\":\"Test.assert_equals(longest_nonrepeating_substring(\\\"abcabcbb\\\"), \\\"abc\\\")\\nTest.assert_equals(longest_nonrepeating_substring(\\\"aaaaaa\\\"), \\\"a\\\")\\nTest.assert_equals(longest_nonrepeating_substring(\\\"abcde\\\"), \\\"abcde\\\")\\nTest.assert_equals(longest_nonrepeating_substring(\\\"abcda\\\"), \\\"abcd\\\")\\nTest.assert_equals(longest_nonrepeating_substring(\\\"aaccddeeffb\\\"), \\\"ac\\\")\\nTest.assert_equals(longest_nonrepeating_substring(\\\"abdde\\\"), \\\"abd\\\")\\nTest.assert_equals(longest_nonrepeating_substring(\\\"ccdddcccc\\\"), \\\"cd\\\")\\nTest.assert_equals(longest_nonrepeating_substring(\\\"cdxdxccxc\\\"), \\\"cdx\\\")\\nTest.assert_equals(longest_nonrepeating_substring(\\\"abddefgh\\\"), \\\"defgh\\\")\\nTest.assert_equals(longest_nonrepeating_substring(\\\"abcdabcd\\\"), \\\"abcd\\\")\\nTest.assert_equals(longest_nonrepeating_substring(\\\"abddebcc\\\"), \\\"debc\\\")\\nTest.assert_equals(longest_nonrepeating_substring(\\\"xyxxyzyzy\\\"), \\\"xyz\\\")\\nTest.assert_equals(longest_nonrepeating_substring(\\\"kjlmjsdeee\\\"), \\\"lmjsde\\\")\\nTest.assert_equals(longest_nonrepeating_substring(\\\"kjlmjsdfew\\\"), \\\"lmjsdfew\\\")\\nTest.assert_equals(longest_nonrepeating_substring(\\\"kjlmjsdfewii\\\"), \\\"lmjsdfewi\\\")\\nTest.assert_equals(longest_nonrepeating_substring(\\\"kjlmjjiiiidfewii\\\"), \\\"idfew\\\")\\nTest.assert_equals(longest_nonrepeating_substring(\\\"kjlmjjiiiidfiwii\\\"), \\\"kjlm\\\")\",\"language\":\"python3\",\"summary\":\"Write a function that returns the longest non-repeating substring for a string input.\\n\\nExamples\\nlongestnonrepeatingsubstring(\\\"abcabcbb\\\") ➞ \\\"abc\\\"\\n\\nlongestnonrepeatingsubstring(\\\"aaaaaa\\\") ➞ \\\"a\\\"\\n\\nlongestnonrepeatingsubstring(\\\"abcde\\\") ➞ \\\"abcde\\\"\\n\\nlongestnonrepeatingsubstring(\\\"abcda\\\") ➞ \\\"abcd\\\"\\n\\nNotes\\nIf multiple substrings tie in length, return the one which occurs f\",\"tags\":[\"strings\",\"loops\"],\"timestamp\":{\"$date\":1557098382731},\"title\":\"Longest Substring with Non-repeating Characters\",\"stats\":{\"completed\":{\"total\":203,\"ratings\":[3,3,3,3,3,3,3,3,3,3,3,4,2,3,0,2,3,3,3,3,4,2,4,5,4,3,4,3,2,3,3,5,2,4,0,4,4,2,5,0,3,4,2,3,2,3,4,4,3,4,4,3,1,2,5,2,2,4,0,4,3,3,4,3,1,4,4,5,3,5,3,4,5,2,5,5,2,3,5,3,5,3,5,5,5,0,5,2,5,2,3,5,2,3,4,0,5,5,4,3,3,3,3,2,3,5,1,5,3,1,3,4,3,0,5,2,2,4,5,3,5,5,4,5,5,5,3,5,2,2,3,4,0,5,3,5,5,3,3,2],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"tAF9Gf6PiGogbZuWs\",\"yZvzB3qFb8pkHy4dg\",\"WZxCpoREvQqJJ35bs\",\"8JyqsSbN2FJXPr3cw\",\"WEsTtgWsLWeYmryTR\",\"aW2AfRdBxWt3K9AaH\",\"qaR8DnWrTk8Mus5Q2\",\"MXjxGML2X75x64vJo\",\"FikSPhcrHBpQ4CyGC\",\"gb9rvGus2Jv7bjZSs\",\"AYaEkTWLMmfzpwejr\",\"PFjMZGHNAPTkgd7tq\",\"BFNm9gacwba9KyLFW\",\"pci5yjeqMeYpPhfhL\",\"HqmxnQJM66Y57twhn\",\"xmEiF7KSH6Gaximmd\",\"KHhoG7ppWv9MdHrQd\",\"Kjs2CD3tGj6b9tAR4\",\"YLiQ2gKYetNjpEG7B\",\"7At7TAdPsy6TJQbud\",\"8rqK2mskjog6v33Fk\",\"NSCWFQBMJnKFEaDi4\",\"Du863uXQ6TKWszNmA\",\"PqEKjCDkJtYoYuZfj\",\"FcYkLyobygEEwcga9\",\"JKb5rhL6DKcCAypF9\",\"7vyub5zTHNfMfQWoW\",\"Jqk2uJZZxEv5wZFze\",\"8PwfYqoDQFThzNtvf\",\"T9tPSCb6hoDnZb7Zn\",\"PT5pu7kJsgp9TDNGv\",\"ftRou9zcw69GCx4iv\",\"Q2q7wd5e5cfCrwPxq\",\"Yp7uvStL97cC9fKkY\",\"aEm3Wvj2rFYRL8Lrb\",\"55RQznnuTGpsj3EXd\",\"AasGs8AeX9Lcb9xJn\",\"uw8E83imJYpQiiPpP\",\"DwetpbChQM4r6Gwah\",\"6E8GoWCrHpDvHZjWG\",\"aCNWav8S8Try9RkC6\",\"4KFo7uH8qXxYL2ADg\",\"ydEdzuCCZt4yny9Rq\",\"aYuKFKSE7oKvBGHKr\",\"4rRqy4ay2pXC36SNk\",\"YsAz93yZw8KKPupKv\",\"C2hhPWdDZ3n9NrsvB\",\"kYWb8BwpKwunQkxeX\",\"AMc6ecyukYnkGCEbG\",\"s5M5RvgqR9BhB9JoC\",\"ZNnsMeNkdDhHjSrZb\",\"Fhwnime223hGiaHaA\",\"fznzd3qnvtbFkkizz\",\"YLtspA8ec6ntcoMMf\",\"W5TajitmCyxz87zAC\",\"x4dfavjLEcrvAF3QQ\",\"xn7uGNKeAwPEkP9oA\",\"vTfyrr4pGddp8rbXc\",\"DPi9QGLctq2y76KuE\",\"KpHrC7WPEojnzgEtz\",\"kv2n6h8JzCWJcnQxX\",\"377aXz9FPFSZxyrSv\",\"LFSASkxgw9hr3KqmC\",\"4uDFMQFPxDcYhiuYK\",\"mFwuG3pToYAy9mGJ2\",\"GgLd4eWBu79mdjtkP\",\"SvsTKrEmBGPtvTDnz\",\"R4SjTgDnpigJYDLyL\",\"nLpdvK7EcahCqNe8X\",\"W6sCwS23msxRPcBLT\",\"S6ipW8Xzds8QDszn9\",\"b5zo7s6xrqWgQnPao\",\"JvtckywAquTG4TeqG\",\"p8qqFdJ3FSk5x9z3G\",\"4fhjJBvLBWh6QeSih\",\"yec2S7M63iqavKQ6C\",\"YMBFrhTvTMrAvRYJR\",\"GGprTwrkjuccmrQRg\",\"7fJvDZzmtsoLXhmje\",\"pRQwycu9GxxtijH68\",\"oZiGwL535nJ5ZMJr7\",\"hZW6j5s6RHpx35phy\",\"97DthwdtrBLm2y2Yj\",\"GJH6ntAFXf89jpfxh\",\"8nE8QHnFYsHCFebte\",\"EH68sDGGufTc5vifi\",\"eyog4zCdBuks2PaYK\",\"RLmPbNXyu88Mk6PMd\",\"DNACg4rcgZsPtYGZ8\",\"3bH5s2P4iYCRHb5Sk\",\"h4x2jaMdj5aQZbW5g\",\"74LAPLfQHfTuydDA2\",\"kDq2TnPdy7hGKdAD5\",\"ZQSG2DF9TjmBGXPwu\",\"W5d8SJGpWNwvgCztM\",\"5hhuYLyGkeqCvaSrf\",\"ioQJqjMAixej8QkDc\",\"iS5BrkGLzJyPK7nKt\",\"SbGLSZ5piLATC8bop\",\"waNsY2k4ndReyEREk\",\"CtKaPhQmtex9wnWcd\",\"4DF38N8GMFwNTKutK\",\"PEifZLwcfdb7Ld8pN\",\"8KNtgAcNpyT2f6bTT\",\"Tg24gZyPmk8uDXcBY\",\"Xk2g4CNFAnYcvxiSr\",\"5rX3qPFdvRQ9G7xZQ\",\"W4X4kb9bFHP9wQLKZ\",\"KktidZuhzfEBK2bdm\",\"iBPtFyzzY83pAFACa\",\"GLgGSqM8SnZuqGzP5\",\"HF28xZKSLM9wEuqNg\",\"j8FR2cHxpsYtNo9Dw\",\"kAjhvt8QrT2ggqAen\",\"xGdw5GCbjjZL9Hr6J\",\"NsJWxcnN9HasagZXb\",\"d8qtzoLB264iP8tdY\",\"Cia25zjeX3RkCNx5t\",\"k2yNko8KMNGEYzria\",\"Er39N3Lx3dx2nSpc9\",\"L96uq5NFRTsYNdsv8\",\"jyy3odP6uwiTTFd39\",\"8sNv5PTHa7XQ8bNqR\",\"fRhyffuFFdj8dmJwX\",\"58M252WF7SPRinfBx\",\"jD7mXH7BefoPFN7R8\",\"hpZARXGLAJt2EDmcf\",\"mDWNyaaQ9hvPCRzSd\",\"2k7JfdCnTaxXSi8HG\",\"83jzX2JKBruiFRzjT\",\"HqpbA6C6zkAmDsaEm\",\"6MjmcvBH4mfNorodF\",\"NEMXfCDfprEJCr5rc\",\"AJwBauGHyrbqgDYce\",\"eHcgvkTGsH7ZziqBo\",\"hBKf7LeSP6i2saXjk\",\"b3Dk2LqoEgripS3Y3\",\"2PufnQcsHsfymufX3\",\"dFXpwPCtpThmcdpbP\",\"JREumNxvXp5QAcgei\",\"LbBjyiGyCGo5txqy8\",\"v9KtC8YLbMWmXiW2H\",\"mfsaETo7uA4x5vqLD\",\"XNmN6ztj36a7eChbD\",\"ofjnKBdF4ruaBLTSQ\",\"u7eXbakci2C3WtnAt\",\"QYh2kagDtGd3nYgiT\",\"zfrhof8pbZnQizdmi\",\"WBkDXBR4gDrjwaB62\",\"zszDEGuspHnAsCAct\",\"iojEnnY9FsMfYzp6f\",\"WbDtRP37ZDrQQM5KJ\",\"CZeLyDD2BQL3jrzzj\",\"Ev2JdCyC7T3Wsoy8w\",\"rYdP2qk6PxthStpce\",\"jPvHaXjMkPZxiFxmh\",\"QRv96jmNaYsWkxQEG\",\"RFa37hfr8Je8yWpa6\",\"snTKcEB844YPMyH2x\",\"qx6eCYnFoWfkiduj4\",\"j6hyqmYawxaqxhNc5\",\"jqfkNyhi6BWDbfFiM\",\"J3upzLHuEwXH7Z2hx\",\"4sHkH3t9CJYhbDwjM\",\"yjtdwc2AC4jA2RWtn\",\"gJYuGdkXEWWmGRLzu\",\"bJaPCBx63YxdJAuTS\",\"b9oaqSebfETp3TpbH\",\"rGpPd6PvpzLaqps4g\",\"aMRkiWFriAbMPSpHS\",\"sREAkPF9RKWuiFtFq\",\"Ep6fHYmKXXFXWmWiJ\",\"6s9vXhx6eaZ5473Rr\",\"XgQRGyzXakL2eq39A\",\"aFYzioHvZPvPaunsg\",\"5QN8R22z43SrwoHDz\",\"suArq5BbSy7gD6xri\",\"mTF6oWX2WhFR4M3QK\",\"buX4mCQhtXCfBjeno\",\"wrL4iX2CCSqDCCty3\",\"2dJfQypbzX7Fz9r3e\"],\"quality\":[5,5,5,4,4,5,5,5,5,4,5,4,5,5,5,5,5,4,4,5,5,5,5,5,4,5,4,1,5,5,5,3,5,4,4,5,4,5,5,4,5,5,4,5,5,5,5,4,5,5,5]},\"tests\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":2},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.607843137254902,\"family\":[{\"_id\":\"WFQvbjeXRZeontieP\",\"language\":\"cpp\"},{\"_id\":\"powuANEDgMh8bxDry\",\"language\":\"java\"},{\"_id\":\"vHJrWvyEiiGp5yZtX\",\"language\":\"javascript\"},{\"_id\":\"58RNhygGNrKjPXwna\",\"language\":\"python3\"},{\"_id\":\"k8u3qBN6x8KFpLak4\",\"language\":\"ruby\"}]}}"]