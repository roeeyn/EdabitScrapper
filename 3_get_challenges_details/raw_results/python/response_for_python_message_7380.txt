a["{\"msg\":\"result\",\"id\":\"2396\",\"result\":{\"_id\":\"pMbki4f2BA8R5vbXs\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"def bitwise_index(lst):\\n\\t# your recursive solution\\n\\treturn bitwise_index(lst)\",\"difficulty\":4,\"familyId\":\"Y7bhP4RzJLtkr79we\",\"instructions\":\"Finding an even integer in an list is kind of trivial and superficial to most programming enthusiasts. This challenge will take it to the next level.\\n\\nWrite a function that returns the largest even integer in a list with its corresponding index and the parity of that index, but determining the parity of that index is **limited to not using** the **modulo operator** `%`. Therefore, devise a way to resolve it.\\n\\nAlthough these tasks are achievable with the use of some built-in Array functions, the purpose and intent of this challenge is for your to solve it recursively.\\n\\n### Output Structure\\n```\\n{\\\"@odd|even index \\\" + index_of_largest: largest_integer}\\n```\\n\\n### Examples\\n```\\nbitwise_index([107, 19, 36, -18, -78, 24, 97]) ➞ {\\\"@even index 2\\\": 36}\\n\\nbitwise_index([31, 7, 2, 13, 7, 9, 10, 13]) ➞ {\\\"@even index 6\\\": 10}\\n\\nbitwise_index([4, 4, 4, 4, 4, 4]) ➞ {\\\"@even index 0\\\": 4}\\n\\nbitwise_index([-31, -7, -13, -7, -9, -13]) ➞ \\\"No even integer found!\\\"\\n```\\n\\n### Notes\\n- The use of the modulo operator `%`, `index()` and `max()` functions are restricted.\\n- You can read more about recursion (see **Resources** tab) if you aren't familiar with it yet or haven't fully understood the concept before taking up this challenge.\",\"isHidden\":false,\"lab\":\"from inspect import getsource as src\\nfrom re import findall, search, M\\n\\ndef no_recur(fn):\\n  try:\\n    s, n = src(fn), fn.__name__\\n    if n == '<lambda>': n = 'bitwise_index'\\n    return len(findall(n, s, M)) > 1\\n  except OSError: return True\\n\\ndef no_min_mod_index(fn):\\n  try: return not search(r'%|min|.+\\\\.index(.+)', src(fn), M)\\n  except OSError: return True\\n\\nTest.assert_not_equals(no_recur(bitwise_index), False, 'Recursion is required!')\\nTest.assert_not_equals(no_min_mod_index(bitwise_index), False,\\n    'The use of modulo operator (%), built-in functions index() and min() are prohibited!')\\n\\nnum_vector, res_vector = [\\n    [107, 19, 36, -18, -78, 24, 97],\\n    [31, 7, 2, 13, 7, 9, 10, 13],\\n    [4, 4, 4, 4, 4, 4],\\n    [-31, -7, -13, -7, -9, -13],\\n    [1, 128, 9, 56, -1, 7, 18, 49],\\n    [63, 12, 77, 112, 75, 92],\\n    [6, 6, 6, 6, 6, 6],\\n    [1, 129, 91, 5, -1, 7, 11, 9],\\n    [-84, -42, 0, -2, -94, -8]], [\\n    {\\\"@even index 2\\\": 36},\\n    {\\\"@even index 6\\\": 10},\\n    {\\\"@even index 0\\\": 4},\\n    \\\"No even integer found!\\\",\\n    {\\\"@odd index 1\\\": 128},\\n    {\\\"@odd index 3\\\": 112},\\n    {\\\"@even index 0\\\": 6},\\n    \\\"No even integer found!\\\",\\n    {\\\"@even index 2\\\": 0}]\\nfor z, l in enumerate(num_vector): Test.assert_equals(bitwise_index(l), res_vector[z])\",\"language\":\"python3\",\"summary\":\"Finding an even integer in an list is kind of trivial and superficial to most programming enthusiasts. This challenge will take it to the next level.\\n\\nWrite a function that returns the largest even integer in a list with its corresponding index and the parity of that index, but determining the parity of that index is limited to not using the modulo operator %.\",\"tags\":[\"recursion\",\"arrays\",\"numbers\"],\"timestamp\":{\"$date\":1595788567678},\"title\":\"Recursion: Index Parity of Largest Even\",\"stats\":{\"completed\":{\"total\":15,\"ratings\":[5,5,5,5,5,5,1,5,5,5,4,5,4,5,1,5,5,1,0],\"rators\":[\"a777e8chPvJkY3tKa\",\"aEm3Wvj2rFYRL8Lrb\",\"8PwfYqoDQFThzNtvf\",\"vTfyrr4pGddp8rbXc\",\"5dHucvf2qBYyKim7X\",\"DPi9QGLctq2y76KuE\",\"iojEnnY9FsMfYzp6f\",\"QRv96jmNaYsWkxQEG\",\"iS5BrkGLzJyPK7nKt\",\"8sNv5PTHa7XQ8bNqR\",\"tAF9Gf6PiGogbZuWs\",\"gJYuGdkXEWWmGRLzu\",\"yjtdwc2AC4jA2RWtn\",\"T6iBEE2jp7f7iEF2P\"],\"quality\":[]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":0,\"family\":[{\"_id\":\"EvwTt6AMwcMNWFoxc\",\"language\":\"javascript\"},{\"_id\":\"pMbki4f2BA8R5vbXs\",\"language\":\"python3\"}]}}"]