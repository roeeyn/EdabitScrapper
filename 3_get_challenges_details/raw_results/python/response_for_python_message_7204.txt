a["{\"msg\":\"result\",\"id\":\"2308\",\"result\":{\"_id\":\"eSxvC27HnDtM6MCCb\",\"author\":\"Masked\",\"authorId\":\"S6Zd8mPuvhuh3MFRt\",\"code\":\"def base_n(base, values, num):\\n\\t\",\"difficulty\":3.6470588235294117,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"BSGqFnbKn4pQx8XFt\",\"instructions\":\"You are given a `base` (int), a list of `values` (list), and a `num` (int) to be converted.\\n\\nYou are to use the values to translate the number into the base. Return `False` if there aren't enough/too little values in the value list (it should have the same length as the `base`). The values in value list starts with elements representing values from zero to base - 1. Return the converted number in string type.\\n\\n### Examples\\n```\\nbase_n(10, [0, 1, 3, 2, 4, 5, 6, 7, 8, 9], 32) ➞ \\\"23\\\"\\n\\nbase_n(8, [\\\"zero\\\", \\\"one\\\", \\\"two\\\", \\\"three\\\", \\\"four\\\", \\\"five\\\", \\\"six\\\", \\\"seven\\\"], 128 ) ➞ \\\"twozerozero\\\"\\n\\nbase_n(2, [1, 0], 8) ➞ \\\"0111\\\"\\n\\nbase_n(10, list(\\\"q*CYj#r-3a\\\"), 1234567890) ➞ \\\"*CYj#r-3aq\\\"\\n```\\n\\n### Notes\\nThe number to be translated is always in BASE-10, non-negative and an integer.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(base_n(7, list(\\\"longerthanseven\\\"), 696969), False)\\nTest.assert_equals(base_n(1000, list(\\\"short\\\"), 696969), False)\\n\\nbase_10 = list(\\\"23?pnQ55ZP\\\")\\nTest.assert_equals(base_n(10, base_10, 1234567890), \\\"3?pnQ55ZP2\\\")\\n\\nbase_36 = list('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ')\\nTest.assert_equals(base_n(36, base_36, 868842965), 'EDABIT')\\nTest.assert_equals(base_n(36, base_36, 24810219), 'ERROR')\\nTest.assert_equals(base_n(36, base_36, 1570137287), 'PYTHON')\\n\\nTest.assert_equals(base_n(10, [0,1,3,2,4,5,6,7,8,9], 32), '23')\\nTest.assert_equals(base_n(12, list('ajchd4js883j'), 4952653), 'js33j4j')\\nTest.assert_equals(base_n(24, list('vA9^97Km-c\\\"G<6:R(ZC,jAzm'), 6942069420), 'A<m,m^j<')\\nTest.assert_equals(base_n(5, ['bomb', 'bomb', 'bomb', 'bomb', 'safe'], 78124), \\\"safesafesafesafesafesafesafe\\\")\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[4,4,4,4,4,4,2,5,5,4,5,2,5,3,1,1,5],\"rators\":[\"S6Zd8mPuvhuh3MFRt\",\"aEm3Wvj2rFYRL8Lrb\",\"8PwfYqoDQFThzNtvf\",\"aCNWav8S8Try9RkC6\",\"7PXuK3EL5QZF2Wp89\",\"vTfyrr4pGddp8rbXc\",\"xn7uGNKeAwPEkP9oA\",\"iS5BrkGLzJyPK7nKt\",\"eHcgvkTGsH7ZziqBo\",\"yjtdwc2AC4jA2RWtn\",\"8sNv5PTHa7XQ8bNqR\",\"gJYuGdkXEWWmGRLzu\"],\"total\":14,\"quality\":[]},\"flags\":0},\"summary\":\"You are given a base (int), a list of values (list), and a num (int) to be converted.\\n\\nYou are to use the values to translate the number into the base. Return False if there aren't enough/too little values in the value list (it should have the same length as the base). The values in value list starts with elements representing values from zero to base - 1. Ret\",\"tags\":[\"algorithms\",\"numbers\"],\"timestamp\":{\"$date\":1592237455608},\"title\":\"Base-10 to Base N with Custom Values\",\"quality\":0,\"family\":[{\"_id\":\"eSxvC27HnDtM6MCCb\",\"language\":\"python3\"}]}}"]