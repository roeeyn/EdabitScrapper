a["{\"msg\":\"result\",\"id\":\"1614\",\"result\":{\"_id\":\"K3bpLf794wSSrHmdc\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def string_code(sentence):\\n\\t\",\"difficulty\":2.1140350877192984,\"familyId\":\"F6q9xgqgfgsG6hZxD\",\"instructions\":\"Create a function that takes in a sentence and returns a running list of **consonants per word** and **vowels per word**.\\n\\n### Examples\\n```\\nstring_code(\\\"Happy Birthday To Me!\\\")\\n➞ [\\\"4 6 1 1\\\", \\\"1 2 1 1\\\"]\\n\\n# Consonants - 4 : [H, p, p, y], 6 : [B, r, t, h, d, y], 1: [T], 1 : [M]\\n# Vowels - 1: [a], 2 : [i, a], 1: [o], 1: [e]\\n\\nstring_code(\\\"I'd like to drink my first glass of champagne.\\\")\\n➞ [ \\\"1 2 1 4 2 4 4 1 6\\\", \\\"1 2 1 1 0 1 1 1 3\\\"]\\n\\nstring_code(\\\"The first man to walk on the moon was Neil Armstrong.\\\")\\n➞ [ \\\"2 4 2 1 3 1 2 2 2 2 7\\\", \\\"1 1 1 1 1 1 1 2 1 2 2\\\" ]\\n```\\n\\n### Notes\\n- Count **y** as a consonant.\\n- Capitalization does not matter.\\n- Only count letters and disregard all other characters (e.g. numbers, punctuation, etc).\\n- A **space** between numbers is required (`[\\\"1 2 3\\\", \\\"4 5 6\\\"]` vs. `[\\\"1,2,3\\\", \\\"4,5,6\\\"]`).\",\"lab\":\"Test.assert_equals(string_code(\\\"I'd like to drink my first glass of champagne.\\\"), ['1 2 1 4 2 4 4 1 6', '1 2 1 1 0 1 1 1 3'])\\nTest.assert_equals(string_code(\\\"The first man to walk on the moon was Neil Armstrong.\\\"), [ '2 4 2 1 3 1 2 2 2 2 7', '1 1 1 1 1 1 1 2 1 2 2'])\\nTest.assert_equals(string_code(\\\"I've got a lovely bunch of coconuts.\\\"), [ '1 2 0 4 4 1 5', '2 1 1 2 1 1 3' ])\\nTest.assert_equals(string_code(\\\"There they are a'standing in a row.\\\"), [ '3 3 1 6 1 0 2', '2 1 2 3 1 1 1' ])\\nTest.assert_equals(string_code(\\\"Let them eat cake.\\\"), [ '2 3 1 2', '1 1 2 2' ])\\nTest.assert_equals(string_code(\\\"It does not matter how slowly you go as long as you do not stop.\\\"), [ '1 2 2 4 2 5 1 1 1 3 1 1 1 2 3', '1 2 1 2 1 1 2 1 1 1 1 2 1 1 1'])\\nTest.assert_equals(string_code(\\\"To be or not to be, that is the question.\\\"), [ '1 1 1 2 1 1 3 1 2 4', '1 1 1 1 1 1 1 1 1 4' ])\\nTest.assert_equals(string_code(\\\"Believe you can and you're halfway there.\\\"), [ '3 1 2 2 2 5 3', '4 2 1 1 3 2 2' ])\",\"language\":\"python3\",\"summary\":\"Create a function that takes in a sentence and returns a running list of consonants per word and vowels per word.\\n\\nExamples\\nstring_code(\\\"Happy Birthday To Me!\\\")\\n➞ [\\\"4 6 1 1\\\", \\\"1 2 1 1\\\"]\\n\\nConsonants - 4 : [H, p, p, y], 6 : [B, r, t, h, d, y], 1: [T], 1 : [M]\\nVowels - 1: [a], 2 : [i, a], 1: [o], 1: [e]\\n\\nstring_code(\\\"I'd like to drink my first glass of champagne.\",\"tags\":[\"strings\",\"regex\",\"higher_order_functions\"],\"timestamp\":{\"$date\":1553211545162},\"title\":\"Consonant-Vowel Coding\",\"stats\":{\"completed\":{\"total\":122,\"ratings\":[2,2,2,2,2,2,2,2,2,2,3,1,2,3,2,2,2,2,3,2,3,3,2,3,3,1,2,0,3,3,2,1,3,1,1,3,0,2,0,1,2,2,2,2,3,2,3,3,3,2,3,2,2,0,2,2,2,3,3,3,4,3,2,2,3,3,2,3,2,4,2,1,3,2,3,2,2,2,2,3,2,0,3,2,1,3,3,1,3,3,2,1,2,3,0,3,3,3,3,2,3,0,2,2,2,3,0,0,3,2,3,1,2,0],\"rators\":[\"BkPgkDQGHm66X4Qai\",\"M8jrv2FfpMQp9Qzpx\",\"Jqk2uJZZxEv5wZFze\",\"yZvzB3qFb8pkHy4dg\",\"gb9rvGus2Jv7bjZSs\",\"8JyqsSbN2FJXPr3cw\",\"vjgbYJGLr39bACXND\",\"tAF9Gf6PiGogbZuWs\",\"XjC9ivzaAxfcFiSGj\",\"T3ZAuoMrJjvZwN55B\",\"ab7BsQuhDo3QgE6bh\",\"FikSPhcrHBpQ4CyGC\",\"MXjxGML2X75x64vJo\",\"wcjknenWdPRhrRScv\",\"iqmPb9JuJDgTFeR8Q\",\"kQH5b8MXJunh84Czq\",\"PFjMZGHNAPTkgd7tq\",\"C9LKGu2g5hSijvDzA\",\"6u7yc9m6HuHGbHzph\",\"AF6LgdKhEdzwgRJom\",\"hsrNYf3WbexXJKhCq\",\"jHrtWDGBhkbuWa7fG\",\"AYaEkTWLMmfzpwejr\",\"nzx4uAPg3hCceyFPE\",\"cR3ibTMxLyEdDFCHY\",\"gMJhLdyw3tH7L96X2\",\"Nj6FwgBtAXsaQwsM2\",\"Jg8ZSRXe3NoDMCqGu\",\"N2wnZXkhDH86mgjQ8\",\"otXtuQygbcYATMZoP\",\"6uBnSGvibaiNFkeKF\",\"s5M5RvgqR9BhB9JoC\",\"3ECpdeExhBmkYXtba\",\"TKwvG2PoWnux6kP6T\",\"2fxapKr8XGdNeaKi2\",\"8PE2cfZEhQBPhe8LG\",\"qJZsi5rhRnWA38FbA\",\"FgkYtHLxeD8pETJ8T\",\"hJkX94ypDvaMPFCdw\",\"oqGkxvASXq52iTDvp\",\"7CwgH38hHpiGdu2zT\",\"XKi8iZXBCHCaebSHh\",\"HqmxnQJM66Y57twhn\",\"EXZfPb8YH28EL8Rh9\",\"yoYQqaY6GszuTkNSs\",\"nc7bRhkxgKyqusYe3\",\"C4QntmkYtB89GNtpd\",\"yKttxy9JGn5Jzwuj6\",\"8PwfYqoDQFThzNtvf\",\"K96FwtfDDN5WM4Bb7\",\"6ShafRStcvew4GfCh\",\"Xei4gJwBeLFubfD2K\",\"RYpiFMN74CYSLHPBq\",\"2innwjWqxJHo4eRGh\",\"AasGs8AeX9Lcb9xJn\",\"4CFzv558qbGcpQwc4\",\"pmgFEciNrd3ES9tuu\",\"aEm3Wvj2rFYRL8Lrb\",\"p3dsCFdWGzWGhFrSQ\",\"w3A7cBWyAfukk6xEQ\",\"mDWNyaaQ9hvPCRzSd\",\"ZNnsMeNkdDhHjSrZb\",\"55RQznnuTGpsj3EXd\",\"kYWb8BwpKwunQkxeX\",\"gPvrBxxySDP2vpux3\",\"YRstQuthRkFeBiXug\",\"Sk5h9RsRyCjSNKubE\",\"n2BRY9X8899dcG8Bw\",\"gJYuGdkXEWWmGRLzu\",\"LQxof8pGabGuWP7Gn\",\"hnyhBFWwNCz9mDfSi\",\"rgvAJFwfCeYoYnFTK\",\"Ecg4m7srYGgZsb4Ck\",\"JX5LaRDjRytYNa3Fb\",\"k5mp7Hkg8w5rwiXpe\",\"HF28xZKSLM9wEuqNg\",\"R4SjTgDnpigJYDLyL\",\"jN3vmzf6ad7EubAjQ\",\"cykCKNJcqFBxz4T8s\",\"iojEnnY9FsMfYzp6f\",\"DEDniTrstQYGounXT\",\"zZDaXBxMzTCBhNkgL\",\"yjtdwc2AC4jA2RWtn\",\"KZ2xddpM2f9JRaryB\",\"WwMjW4MJRuNFExoPc\",\"iS5BrkGLzJyPK7nKt\",\"w2HhxvSLmDhaGCAjE\",\"8fZxjQfuXw5HMSRJM\",\"DPi9QGLctq2y76KuE\",\"QRv96jmNaYsWkxQEG\",\"p8qqFdJ3FSk5x9z3G\",\"xn7uGNKeAwPEkP9oA\",\"J3upzLHuEwXH7Z2hx\",\"dkcmCKwqApX5jBggc\",\"gXTAie79kiw28tx5u\",\"DQskEvAv5KiJDPtGF\",\"sbJcFfQjQ59Wfg4Cd\",\"qAby4AWXmTNeusvg3\",\"GTKsdeEihE636Le9i\",\"cAP3n5NY64uoMwzRR\",\"KJCDwGkoXh8qtbbKr\",\"oBcs8GLX2ZFLXQy8y\",\"GGdmhAvxXhqhhibJN\",\"JKb5rhL6DKcCAypF9\",\"PWgzeK859suojbrRx\",\"MpfytGFYF77emJ3cT\",\"T6iBEE2jp7f7iEF2P\",\"gKnWjDjwrJh7MK2df\",\"kBNCPDJxWtLYE3pp5\",\"yod5YhKtPqw2GfG9B\",\"2PufnQcsHsfymufX3\",\"8sNv5PTHa7XQ8bNqR\",\"4Lwjr34ypKNQNQCar\",\"n2qKKxomPnb4zez5M\"],\"quality\":[5,5,5,3,5,5,5,5,5]},\"tests\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"instructions\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.777777777777778,\"family\":[{\"_id\":\"m9pkGmuoEWsdHrNHi\",\"language\":\"javascript\"},{\"_id\":\"K3bpLf794wSSrHmdc\",\"language\":\"python3\"},{\"_id\":\"uTxtR5c4F5vYHJQJT\",\"language\":\"ruby\"}]}}"]