a["{\"msg\":\"result\",\"id\":\"1299\",\"result\":{\"_id\":\"tPNqhkqeQaCZGcBLo\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"def determine_who_cursed_the_most(d):\\n\\t\",\"difficulty\":1.9873417721518987,\"familyId\":\"H6mNTKw84jSsMCowk\",\"instructions\":\"And who cursed the most in the fight between you and your spouse?\\n\\nGiven a **dict** with three rounds, with nested **dict**s as your score per round, return  who cursed the most based on the following:\\n\\n   - If you, return \\\"ME!\\\"\\n   - If your spouse, return \\\"SPOUSE!\\\"\\n   - If a draw, return \\\"DRAW!\\\"\\n\\n### Examples\\n```\\ndetermine_who_cursed_the_most({\\n  \\\"round1\\\": { \\\"me\\\": 10, \\\"spouse\\\": 5 },\\n  \\\"round2\\\": { \\\"me\\\": 5, \\\"spouse\\\": 10 },\\n  \\\"round3\\\": { \\\"me\\\": 10, \\\"spouse\\\": 10 }}) ➞ \\\"DRAW!\\\"\\n\\ndetermine_who_cursed_the_most({\\n  \\\"round1\\\": { \\\"me\\\": 40, \\\"spouse\\\": 5 },\\n  \\\"round2\\\": { \\\"me\\\": 9, \\\"spouse\\\": 10 },\\n  \\\"round3\\\": { \\\"me\\\": 9, \\\"spouse\\\": 10 }}) ➞ \\\"ME!\\\"\\n\\ndetermine_who_cursed_the_most({\\n  \\\"round1\\\": { \\\"me\\\": 10, \\\"spouse\\\": 5 },\\n  \\\"round2\\\": { \\\"me\\\": 9, \\\"spouse\\\": 44 },\\n  \\\"round3\\\": { \\\"me\\\": 10, \\\"spouse\\\": 55 }}) ➞ \\\"SPOUSE!\\\"\\n```\\n\\n### Notes\\nN/A\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"expected_param = [\\\"DRAW!\\\", \\\"ME!\\\", \\\"SPOUSE!\\\", \\\"ME!\\\", \\\"SPOUSE!\\\",  \\\"SPOUSE!\\\"]\\nactual_param = [\\n  {\\\"round1\\\": {\\\"me\\\": 10, \\\"spouse\\\": 5},\\n   \\\"round2\\\": {\\\"me\\\": 5, \\\"spouse\\\": 10},\\n   \\\"round3\\\": {\\\"me\\\": 10, \\\"spouse\\\": 10}},\\n  {\\\"round1\\\": {\\\"me\\\": 40, \\\"spouse\\\": 5},\\n   \\\"round2\\\": {\\\"me\\\": 9, \\\"spouse\\\": 10},\\n   \\\"round3\\\": {\\\"me\\\": 9, \\\"spouse\\\": 10}},\\n  {\\\"round1\\\": {\\\"me\\\": 10, \\\"spouse\\\": 5},\\n   \\\"round2\\\": {\\\"me\\\": 9, \\\"spouse\\\": 44},\\n   \\\"round3\\\": {\\\"me\\\": 10, \\\"spouse\\\": 55}},\\n    {\\\"round1\\\": {\\\"me\\\": 13, \\\"spouse\\\": 15},\\n     \\\"round2\\\": {\\\"me\\\": 11, \\\"spouse\\\": 9},\\n     \\\"round3\\\": {\\\"me\\\": 7, \\\"spouse\\\": 6}},\\n    {\\\"round1\\\": {\\\"me\\\": 4, \\\"spouse\\\": 15},\\n     \\\"round2\\\": {\\\"me\\\": 16, \\\"spouse\\\": 4},\\n     \\\"round3\\\": {\\\"me\\\": 6, \\\"spouse\\\": 13}},\\n    {\\\"round1\\\": {\\\"me\\\": 5, \\\"spouse\\\": 6},\\n     \\\"round2\\\": {\\\"me\\\": 4, \\\"spouse\\\": 6},\\n     \\\"round3\\\": {\\\"me\\\": 4, \\\"spouse\\\": 6}}\\n]\\nfor i, c in enumerate(actual_param):\\n  Test.assert_equals(determine_who_cursed_the_most(c), expected_param[i])\",\"language\":\"python3\",\"quality\":4.833333333333333,\"summary\":\"And who cursed the most in the fight between you and your spouse?\\n\\nGiven a dict with three rounds, with nested dicts as your score per round, return  who cursed the most based on the following:\\n\\n   If you, return \\\"ME!\\\"\\n   If your spouse, return \\\"SPOUSE!\\\"\\n   If a draw, return \\\"DRAW!\\\"\\n\\nExamples\\ndeterminewhocursedthemost({\\n  \\\"round1\\\": { \\\"me\\\": 10, \\\"spouse\\\": 5 },\",\"tags\":[\"objects\",\"arrays\",\"loops\"],\"timestamp\":{\"$date\":1605634078550},\"title\":\"Burglary Series (16): Nested Objects (Dicts)\",\"stats\":{\"completed\":{\"total\":98,\"ratings\":[2,2,2,2,2,2,2,3,2,1,2,3,2,3,2,1,2,3,3,3,3,2,1,3,1,2,2,3,3,2,0,1,1,0,0,3,3,3,2,2,2,1,3,0,3,2,3,2,1,1,3,3,3,0,1,2,3,2,0,1,4,3,2,3,3,2,3,0,3,3,0,2,0,1,3,1,2,3,2],\"quality\":[4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3],\"rators\":[\"a777e8chPvJkY3tKa\",\"xn7uGNKeAwPEkP9oA\",\"Yp7uvStL97cC9fKkY\",\"8JyqsSbN2FJXPr3cw\",\"QRv96jmNaYsWkxQEG\",\"J3upzLHuEwXH7Z2hx\",\"w2HhxvSLmDhaGCAjE\",\"gb9rvGus2Jv7bjZSs\",\"8PwfYqoDQFThzNtvf\",\"p8qqFdJ3FSk5x9z3G\",\"s5M5RvgqR9BhB9JoC\",\"55RQznnuTGpsj3EXd\",\"fSQSHjW3e72MrWxbD\",\"iS5BrkGLzJyPK7nKt\",\"HF28xZKSLM9wEuqNg\",\"gJYuGdkXEWWmGRLzu\",\"DPi9QGLctq2y76KuE\",\"aEm3Wvj2rFYRL8Lrb\",\"dkcmCKwqApX5jBggc\",\"8ZhzKvdhsdKgpf6BT\",\"StNu7DPyTgEStZsMY\",\"gXTAie79kiw28tx5u\",\"mDWNyaaQ9hvPCRzSd\",\"Nb6LYPoQP6KJZt8mz\",\"yjtdwc2AC4jA2RWtn\",\"xsDyJstYoBZRS8pJH\",\"Jqk2uJZZxEv5wZFze\",\"RTDx9axf52kxhFjwZ\",\"iojEnnY9FsMfYzp6f\",\"PytNZK9mNiRiZxPrm\",\"PWgzeK859suojbrRx\",\"cAP3n5NY64uoMwzRR\",\"oBcs8GLX2ZFLXQy8y\",\"cR3ibTMxLyEdDFCHY\",\"GGdmhAvxXhqhhibJN\",\"FEYpu9RWysAgW3XnP\",\"fznzd3qnvtbFkkizz\",\"EfxwqhYdapX3dMQC2\",\"CTKmXtrqDYqJBnuy8\",\"2PufnQcsHsfymufX3\",\"3LiSLdtN58n46NEqg\",\"hnyhBFWwNCz9mDfSi\",\"fbr22rabEJMfBp7vD\",\"YcCLwitFMAEJSnxAW\",\"zd9FLSzsGz3evKafy\",\"Wpn95NqWxncQrwNgz\",\"bvmTE46bfcM4ogj34\",\"PC3pLs36zNzpRDSuE\",\"8BFSTCnoe2QggN64c\",\"nc7bRhkxgKyqusYe3\",\"AasGs8AeX9Lcb9xJn\",\"4Lwjr34ypKNQNQCar\",\"J5T8gZqiZXFuFDTQ7\",\"DEDniTrstQYGounXT\",\"MKT7khMBGXzA22ykf\",\"wL4RuGYsWgM6EnHL8\",\"HqmxnQJM66Y57twhn\",\"Ds7L5bksw2QRHjrKL\",\"Kv92AoBe3KjTCfiBD\",\"ctbThYbufFCYbRK4f\",\"3KkyQm77zsew58Dc2\",\"qzXAMXsHZGT8o5hTA\",\"o4ixjQGSaYqA2JoM4\",\"XCnbSuZF8gdA7Lc8o\",\"tAF9Gf6PiGogbZuWs\",\"y8WESEqa8wiQSCkjP\",\"gKnWjDjwrJh7MK2df\",\"8sNv5PTHa7XQ8bNqR\",\"jCjCvyhqhpebkJn34\",\"RoGGD5cpHb4ftdLDv\",\"LQxof8pGabGuWP7Gn\",\"nkH3HfJXLMNcBMM79\",\"5HCu9Ydd86QgHDRNP\",\"mvJBakQ35CWAnbbEZ\",\"kjvgTyRFyKHv44DcH\",\"yod5YhKtPqw2GfG9B\",\"AFfw7cGg83uYk2Miy\",\"CoutYG4M83EHyYuqt\",\"6dqoF6LmEaRPsCSpT\",\"JhX7jvtpwNyxcc39m\",\"T6iBEE2jp7f7iEF2P\",\"jkbavR2ATFJcpmo8M\",\"dSd7wHgXGQeG5BQ2P\",\"n2qKKxomPnb4zez5M\",\"BrTDhPJcACL2bsrpJ\",\"CHvzhtXnv8HTbPQ56\",\"9pzFiFK3ANLjQfnr2\",\"AQSqD9oNv2uPfxZCR\",\"mw9464S5dnenqzvpm\",\"PxjZL5AA8R5Dfg8v3\",\"2HfNkb2SoqdyjKW3o\",\"3nied3n8KG8RSNixH\"]},\"flags\":0},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"SvodRRbyv7g3LxZsK\",\"language\":\"javascript\"},{\"_id\":\"tPNqhkqeQaCZGcBLo\",\"language\":\"python3\"}]}}"]