a["{\"msg\":\"result\",\"id\":\"201\",\"result\":{\"_id\":\"F7iLaLDBHqshWSZz5\",\"author\":\"Werdna\",\"authorId\":\"buX4mCQhtXCfBjeno\",\"code\":\"def to_number_list(lst):\\n\\t\",\"difficulty\":0.5738255033557047,\"familyId\":\"gs9buMsAGt4qrf6Tr\",\"instructions\":\"Create a function that takes as a parameter a list of \\\"stringified\\\" numbers and returns a list of numbers.\\n\\nExample:\\n```\\n[\\\"1\\\", \\\"3\\\", \\\"3.6\\\"] ➞ [1, 3, 3.6]\\n```\\n\\n### Examples\\n```\\nto_number_list([\\\"9.4\\\", \\\"4.2\\\"]) ➞ [9.4, 4.2]\\n\\nto_number_list([\\\"99\\\", \\\"20\\\"]) ➞ [99, 20]\\n\\nto_number_list([\\\"9.5\\\", \\\"8.8\\\"]) ➞ [9.5, 8.8]\\n```\\n\\n### Notes\\nSome inputs are floats.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(to_number_list([\\\"1\\\", \\\"2\\\"]), [1, 2])\\nTest.assert_equals(to_number_list([\\\"3\\\", \\\"4\\\"]), [3, 4])\\nTest.assert_equals(to_number_list([\\\"5\\\", \\\"6\\\"]), [5, 6])\\nTest.assert_equals(to_number_list([\\\"7\\\", \\\"8\\\"]), [7, 8])\\nTest.assert_equals(to_number_list([\\\"9\\\", \\\"10\\\"]), [9, 10])\\nTest.assert_equals(to_number_list([\\\"91\\\", \\\"44\\\"]), [91, 44])\\nTest.assert_equals(to_number_list([\\\"19\\\", \\\"14\\\"]), [19, 14])\\nTest.assert_equals(to_number_list([\\\"29\\\", \\\"34\\\"]), [29, 34])\\nTest.assert_equals(to_number_list([\\\"0\\\", \\\"4\\\"]), [0, 4])\\nTest.assert_equals(to_number_list([\\\"21\\\", \\\"23\\\"]), [21, 23])\\nTest.assert_equals(to_number_list([\\\"12\\\", \\\"25\\\"]), [12, 25])\\nTest.assert_equals(to_number_list([\\\"99\\\", \\\"20\\\"]), [99, 20])\\nTest.assert_equals(to_number_list([\\\"9\\\", \\\"4\\\", \\\"5\\\", \\\"6\\\", \\\"7\\\", \\\"8\\\", \\\"9\\\"]), [9, 4, 5, 6, 7, 8, 9])\\nTest.assert_equals(to_number_list([\\\"11\\\", \\\"14\\\", \\\"13\\\", \\\"12\\\", \\\"3\\\", \\\"6\\\"]), [11, 14, 13, 12, 3, 6])\\nTest.assert_equals(to_number_list([\\\"7\\\", \\\"14\\\", \\\"16\\\", \\\"18\\\", \\\"19\\\", \\\"20\\\"]), [7, 14, 16, 18, 19, 20])\\nTest.assert_equals(to_number_list([\\\"9.4\\\", \\\"4.2\\\"]), [9.4, 4.2])\\nTest.assert_equals(to_number_list([\\\"1.4\\\", \\\"4.4\\\", \\\"5.7\\\", \\\"4.3\\\", \\\"9.8\\\", \\\"5.3\\\", \\\"8.7\\\", \\\"8.6\\\", \\\"9.8\\\"]), [1.4, 4.4, 5.7, 4.3, 9.8, 5.3, 8.7, 8.6, 9.8])\\nTest.assert_equals(to_number_list([\\\"9.5\\\", \\\"8.8\\\"]), [9.5, 8.8])\\nTest.assert_equals(to_number_list([\\\"3.4\\\", \\\"8.6\\\"]), [3.4, 8.6])\\nTest.assert_equals(to_number_list([\\\"5.9\\\", \\\"1.5\\\", \\\"7.8\\\", \\\"4.9\\\", \\\"8.5\\\", \\\"8.4\\\"]), [5.9, 1.5, 7.8, 4.9, 8.5, 8.4])\\nTest.assert_equals(to_number_list([\\\"8.7\\\"]), [8.7])\\nTest.assert_equals(to_number_list([\\\"7.0\\\", \\\"4.7\\\", \\\"8.4\\\"]), [7, 4.7, 8.4])\\nTest.assert_equals(to_number_list([\\\"7.2\\\", \\\"9.7\\\", \\\"4.0\\\", \\\"9.7\\\", \\\"6.5\\\"]), [7.2, 9.7, 4, 9.7, 6.5])\\nTest.assert_equals(to_number_list([\\\"9.3\\\", \\\"3.9\\\", \\\"7.9\\\", \\\"4.7\\\"]), [9.3, 3.9, 7.9, 4.7])\\nTest.assert_equals(to_number_list([\\\"4.1\\\", \\\"2.9\\\", \\\"1.7\\\"]), [4.1, 2.9, 1.7])\\nTest.assert_equals(to_number_list([\\\"9.0\\\", \\\"3.8\\\", \\\"8.8\\\"]), [9, 3.8, 8.8])\\nTest.assert_equals(to_number_list([\\\"6.0\\\", \\\"6.9\\\", \\\"3.7\\\", \\\"6.9\\\", \\\"8.3\\\", \\\"7.8\\\", \\\"1.5\\\", \\\"2.6\\\"]), [6, 6.9, 3.7, 6.9, 8.3, 7.8, 1.5, 2.6])\\nTest.assert_equals(to_number_list([\\\"9.2\\\", \\\"5.8\\\", \\\"1.3\\\", \\\"3.4\\\", \\\"3.0\\\", \\\"8.5\\\", \\\"3.4\\\", \\\"6.8\\\", \\\"9.9\\\"]), [9.2, 5.8, 1.3, 3.4, 3, 8.5, 3.4, 6.8, 9.9])\\nTest.assert_equals(to_number_list([\\\"8.3\\\", \\\"9.7\\\", \\\"8.0\\\"]), [8.3, 9.7, 8])\\nTest.assert_equals(to_number_list([\\\"2.1\\\", \\\"1.7\\\", \\\"7.0\\\", \\\"4.7\\\", \\\"9.3\\\", \\\"6.8\\\", \\\"9.1\\\", \\\"9.1\\\"]), [2.1, 1.7, 7, 4.7, 9.3, 6.8, 9.1, 9.1])\\nTest.assert_equals(to_number_list([\\\"9.8\\\", \\\"4.6\\\", \\\"7.3\\\", \\\"7.4\\\", \\\"1.9\\\", \\\"6.3\\\", \\\"8.7\\\"]), [9.8, 4.6, 7.3, 7.4, 1.9, 6.3, 8.7])\\nTest.assert_equals(to_number_list([\\\"2.4\\\"]), [2.4])\",\"language\":\"python3\",\"quality\":4.746478873239437,\"summary\":\"Create a function that takes as a parameter a list of \\\"stringified\\\" numbers and returns a list of numbers.\\n\\nExample:\\n[\\\"1\\\", \\\"3\\\", \\\"3.6\\\"] ➞ [1, 3, 3.6]\\n\\nExamples\\ntonumberlist([\\\"9.4\\\", \\\"4.2\\\"]) ➞ [9.4, 4.2]\\n\\ntonumberlist([\\\"99\\\", \\\"20\\\"]) ➞ [99, 20]\\n\\ntonumberlist([\\\"9.5\\\", \\\"8.8\\\"]) ➞ [9.5, 8.8]\\n\\nNotes\\nSome inputs are floats.\",\"tags\":[\"arrays\",\"language_fundamentals\",\"strings\"],\"timestamp\":{\"$date\":1615604514763},\"title\":\"List of Strings to List of Numbers\",\"stats\":{\"completed\":{\"total\":395,\"ratings\":[0,0,0,0,0,0,1,0,1,1,0,0,0,0,1,0,0,0,0,1,0,0,1,0,1,0,5,0,0,0,1,0,2,0,1,0,1,1,0,0,0,0,2,1,0,0,0,0,0,1,1,1,2,1,0,1,0,1,0,0,1,0,1,0,2,2,1,0,0,0,1,0,0,0,0,1,0,1,1,1,1,0,1,0,1,1,1,0,1,0,0,0,0,1,0,1,0,0,0,2,1,0,0,0,0,0,1,0,2,1,0,0,0,0,1,0,1,1,0,1,0,1,1,0,0,0,0,0,1,0,2,2,0,1,0,0,2,0,0,1,0,1,0,0,0,0,1,1,2,1,2,0,0,1,1,2,3,2,0,1,0,0,0,0,0,1,2,1,0,0,0,0,1,2,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,0,1,2,0,0,0,1,0,0,0,0,2,1,0,0,1,0,1,1,1,1,0,0,0,0,0,1,0,1,2,0,0,1,0,0,0,0,2,0,0,0,1,1,1,0,1,0,0,0,1,1,1,1,0,1,1,0,0,0,1,0,0,2,2,0,0,1,0,1,1,0,0,0,0,1,1,1,0,2,0,0,0,1,1,1,1,1,2,1,0,1,2,5,0,4,0,0,0,3,0,1,1,1,1,2],\"quality\":[2,5,2,5,5,5,5,5,5,5,5,5,5,3,5,5,5,5,5,5,5,4,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,4,3,5,4,4,5,5,5,5,4,5,5],\"rators\":[\"buX4mCQhtXCfBjeno\",\"Q2cijqqh7K8RPGFNj\",\"srJ34BaybkQh3qRkM\",\"BNXtgmYYA45Siw8MC\",\"Q6gEE9dG8ERy2Xu3c\",\"DEDniTrstQYGounXT\",\"AXcnPX68zdMiLNSmu\",\"T6iBEE2jp7f7iEF2P\",\"wRttWTM59y8m5mx7x\",\"g2mqHYvQmr78mET8i\",\"a2Kmh6ekWqQQooHiQ\",\"YRAzEBJoLvSaiPtYx\",\"FEYpu9RWysAgW3XnP\",\"XbxHXmh5ZmRN2gw3K\",\"c4qcYPS25ZMERHQ6p\",\"XEjiqMFvDTLTo2X9G\",\"GC9LB7vyQwSrQXoqt\",\"45vA2xBG32arH6G6t\",\"iS5BrkGLzJyPK7nKt\",\"MrTGGgrDavSDf3p3N\",\"J23RcmzbdtBbPCTjT\",\"J5T8gZqiZXFuFDTQ7\",\"YcCLwitFMAEJSnxAW\",\"iojEnnY9FsMfYzp6f\",\"tAF9Gf6PiGogbZuWs\",\"DPi9QGLctq2y76KuE\",\"6mpC5PX8dcBbbrX7y\",\"QRv96jmNaYsWkxQEG\",\"PXAcsKkssS2yLyDv2\",\"zd9FLSzsGz3evKafy\",\"66a9xX73nmTEuKs9k\",\"PC3pLs36zNzpRDSuE\",\"FiaTpm7ehfDv43wSG\",\"cR3ibTMxLyEdDFCHY\",\"XD5nmvKQchKezPXhy\",\"ZpLEmGnaRkQxf8Hfi\",\"zC8WrPp5BC6c2exrW\",\"pwWtbXEjzuvrhEGwt\",\"Ds7L5bksw2QRHjrKL\",\"yjtdwc2AC4jA2RWtn\",\"3cF6NXq3ZEwdkgSjb\",\"Yp7uvStL97cC9fKkY\",\"WihjZ5iusPAPKcsr5\",\"sbJcFfQjQ59Wfg4Cd\",\"5HCu9Ydd86QgHDRNP\",\"pH3ZQdWKWqJKqczyW\",\"eMuCpJ2spXWkJjWNz\",\"szQg8dxKNNre3v3Jk\",\"gJYuGdkXEWWmGRLzu\",\"gb9rvGus2Jv7bjZSs\",\"2QGRoQn2dRq3scu7k\",\"Qp3LB3TcLgoiJSFCc\",\"PAzNgJF54C2mYPkR9\",\"u5u2YpHXiNgzDNJdX\",\"93ADqsBQnwTEosjbq\",\"AFfw7cGg83uYk2Miy\",\"mxX4rH5ELYkdZ2Mbw\",\"4TmgHkn5vqyHK3sYC\",\"utyt9o5BYPWRbXf2X\",\"HBuJYgW2eRBJp9FoG\",\"JKbEBybAsiKrmcqof\",\"i5iePG5GqhJJ8HEoB\",\"XrqNzJ2FRG8HnGiR6\",\"7oFgkj6xtsABqx8wc\",\"j7ebNFtte6fSkMWjj\",\"wjc4iejpErBhxWwHo\",\"jWbd7SYDzLPjc9EDh\",\"8JyqsSbN2FJXPr3cw\",\"oBcs8GLX2ZFLXQy8y\",\"9qoWqLcHGiDX429rE\",\"4bb7pim4ewTwrMTEA\",\"ghMkPtdFCpM6w8nax\",\"qGyiux237eufNF6JR\",\"CBwziWoAPy7qfE5MM\",\"rfyEkETeoS96QNH4e\",\"N2wnZXkhDH86mgjQ8\",\"8PwfYqoDQFThzNtvf\",\"8f2GuLuAy3nb6KFfY\",\"CyzskHGsC6WSmYrLu\",\"8EJ4j2fcfjTJ7Zrzu\",\"9pzFiFK3ANLjQfnr2\",\"jcPZ5ySXseCB7Ec3x\",\"wJCoBWQJrpEtFvb2P\",\"fdyejapW3NWN7utPX\",\"s5M5RvgqR9BhB9JoC\",\"Dwpiei4miJi7ry8W4\",\"TvRacEsF3Hez94w5K\",\"Cg3LKtEAJpsrdWroG\",\"pPpmP7xeJzGgK362R\",\"8teSHp77vHhhvJWiS\",\"fTNQmMvTZhhiGBCMe\",\"sKfrD9gjCDHuqLzSk\",\"yv7c4H2jimSKHEjtG\",\"7DxvBMbdJEbx7KR2c\",\"h9azrsq7TmmPWYCK7\",\"cRoHBaA7HjePc8wb2\",\"EfxwqhYdapX3dMQC2\",\"DFpZcskPncmo7fuzR\",\"YZL9ec49hQdqcwu2j\",\"YmQb9Mo4Xcg2vzgbn\",\"NrRa4TS6uZR9xuXRt\",\"Lfut9z3euZ3odxFcH\",\"iYXdNw7tKcgA3QwBX\",\"9Ly8afdtofp8DXzrt\",\"dj5AyG5fWP8FdsSmZ\",\"hnyhBFWwNCz9mDfSi\",\"J3upzLHuEwXH7Z2hx\",\"peCvTbjQBgdWo53Wv\",\"x2Cz7S8rCKJqCE3Xe\",\"p8qqFdJ3FSk5x9z3G\",\"C9LKGu2g5hSijvDzA\",\"Fk9kLwoG4Brf4KsKf\",\"mvJBakQ35CWAnbbEZ\",\"CHvzhtXnv8HTbPQ56\",\"FgMe2gzbxog9WzaRr\",\"NP2RxM3eBd3drnDwP\",\"KypQdzThzogKXwkXE\",\"NzbRqGWspQnWMoDrF\",\"dqwatKFAeGpjmf5dm\",\"3LiSLdtN58n46NEqg\",\"7ajSwbNMNp9ggPewT\",\"T6Rm8mREPMZSftzrC\",\"MKT7khMBGXzA22ykf\",\"FxbTzThBiTnRzfirA\",\"5PaQgfQznXjaF9e6F\",\"HvxpfEbJKTCF55ZtB\",\"6LbPw9yW6HHDfn8B8\",\"9NcZ23yufhtou68dT\",\"rgvAJFwfCeYoYnFTK\",\"GzbDheZQHNBHzPrri\",\"di2hhADLx59Bj4ewM\",\"JiSpvq6C7azQEmENc\",\"M2gFMJkocQSY6bsFR\",\"bur3yQ8s34zqKGEro\",\"sHjfbGQGLHE6JR6qu\",\"Qmb8nsFJTyRrNyQ5u\",\"eHcgvkTGsH7ZziqBo\",\"a2PQbkxH2NhSWQ4SL\",\"NYyhWY7soeTZ6ymd5\",\"kqYkfcZMkp5u2EdXZ\",\"u5jLXaWAKo7K4JvTR\",\"aEm3Wvj2rFYRL8Lrb\",\"DTyNcDkiScCjgJt28\",\"2MjzJ7yxh3eT3xbng\",\"hRfdHT8bWztZuCqzi\",\"bPhkDcd22h6sE2n8v\",\"KEmTti9Tza8A2FLQW\",\"m7hHWJrBub7ueaokh\",\"MXGuntvz3byrP6WJc\",\"obkXHqRsxLmBajuwb\",\"dQd664XYR6QKHFvHW\",\"j22fPdGZvaryte8j5\",\"vhmyKoH2TxNHKuFzF\",\"AasGs8AeX9Lcb9xJn\",\"FRN2W8RYpJ6GPhgRy\",\"K6MfKMytoJJuSGewP\",\"FGEeCTorXbX3WvjFW\",\"PTkubfiQTZSZ92vmu\",\"e8bvfjGLzdBvGmxnr\",\"ecytnKJxjCPk8Kbif\",\"z7FcXbC7SkhPejDrZ\",\"hs8WbxhNtYBiqEj9C\",\"yAouD3PxzED8a4gap\",\"5Dd7XwALvvMMwS4Fb\",\"hZ2JDAEG2P5rMLWEW\",\"mJXSJntigs8bvFjwk\",\"bM2eBtpFQCv8632C9\",\"s4wiaAdvGqgFHqLc8\",\"M8dQuMrEpP8Hc3tHN\",\"kjvgTyRFyKHv44DcH\",\"BpwWfGLHpPyujFaFF\",\"JS3hNM3XXkxPdg3yk\",\"jWrysbS3AqiQN8rmo\",\"qD2LrwaDrSdiybLKY\",\"cdXmwjupCXSvJTSNo\",\"D8KzuTx94uT5LMFiZ\",\"HqmxnQJM66Y57twhn\",\"Afnps7TJQuS9sipMb\",\"syRNbbPdLCGXbH2Gy\",\"hqvExZcs9dqew7Bm2\",\"DTDokqAqTpqCsqPMe\",\"hPMgnPPjNSfMkH46u\",\"HcdukZiuzgvoHjjz3\",\"vZjTGbzGTta3TSwy9\",\"Aktq8nYaqfu57u8p7\",\"TCvpT4EPb8qNssNB7\",\"s2Y76rR2h2fPKibsK\",\"rHDq28dQa3QZgRYrn\",\"FMyZPN6odEFtfuimF\",\"yMog4drzvs3MPmihA\",\"AQSqD9oNv2uPfxZCR\",\"PTDFuxAzou7W6asWt\",\"BrTDhPJcACL2bsrpJ\",\"XgRXeb4YyZqmiMTLe\",\"8BFSTCnoe2QggN64c\",\"Dq24MSpogRmq6L4hX\",\"DWWg2tktWkg7rSp9Y\",\"m86y4gi8hMzGz8js7\",\"pQwhNKiCne4gEZgcn\",\"n23Tg4QPvPsYX2zLK\",\"b6PEkvr66YeCamroN\",\"rJGeRSCjGzRuYfHZS\",\"FocLpCB2WEiK2gGni\",\"MMrsg6HXaBN7Whg6q\",\"5jC6kt3SXoABZBwsY\",\"PeopHyCFfiFgzRS3o\",\"zBk2cwJ9SLAhFuM3K\",\"5CsHudxuDESxmjTPW\",\"HsEqBz8kiBNZJA3Qw\",\"54BFnXEjY3FuRNYpN\",\"jkumHyXfMkhGcPgqC\",\"gKnWjDjwrJh7MK2df\",\"PBnvAuiKXwjqjKG33\",\"Nv8HhfMn2Rddq6Bei\",\"sMcFMPkMJC4Kh6ymj\",\"Mtbjs2R65YnswKuw2\",\"arJCbZbt2YLT85ihp\",\"PmRyaLmhAF4MMLBtM\",\"EA3m4tEa89QaeS55E\",\"qcdBWmHvKhyuhYFLu\",\"crEnTT8upDBFiKTZp\",\"TFRbA7nkidNkBB5uu\",\"gpGXTvjS2HrY9Skq5\",\"5nbHH4eApn6So9h2n\",\"9HPB28hBoTnZnspQE\",\"aN6owKqBeZj7ZefFR\",\"b7yQWr6eJFxYTmt3j\",\"Jqk2uJZZxEv5wZFze\",\"dYPkStFnLvAMsHSzZ\",\"7q8oBsCHwn48Ppnrq\",\"d9LBRxvADNBB5QJMB\",\"aYemFjcSRyv7T76h8\",\"8ynPy35NQFsnh4WqC\",\"eWJKKsYByJd5dgZYT\",\"wYR7GAr2STaYrFabh\",\"gbGzZz5Yq5hT357v8\",\"gjiu8kLnHYxe4HoBN\",\"LWCzZ8mb8gwrRNGfq\",\"wk4khxzzxTKiwYRqg\",\"Ne8mK9DDHG8TRkoxG\",\"9LrF5o2TK2iE8BZJh\",\"jRNj5RZyC6AHmoPGa\",\"EM54GFtAyAEdmqxNe\",\"2qtde7moqrzm7B4Ht\",\"uK58g2EXxqxTaB2iA\",\"fGvJRtjbJFJJZLCnW\",\"o2Q8uM5DwJnSRmerd\",\"5QN8R22z43SrwoHDz\",\"B4y8aoyXJtskYPFEL\",\"H469XosMjfNu8Fop7\",\"YZsZjfvd3PnLhDJrR\",\"QHiEYtz3tX3s9nETo\",\"M4vq8ATaS9Jg5X7iP\",\"dzS6WBTMHyFEag6Fp\",\"Akkq6AENwYNwo8rSw\",\"gKhGony2qmzMdKBHv\",\"GktgG4zuF225EApih\",\"NpYMiwgXBGonwx3Fg\",\"QWjsXnLaJ7xfL3Amq\",\"xjyixzXzqqqTfJARd\",\"Hu4SkoNyWCP4vmsZE\",\"rF97GDLqCgynr7BaD\",\"ZqjP4M6dzu32To33K\",\"3SgSNoAB3sxaYeT3w\",\"afvP29FhRou2bTaav\",\"ZQ2MwAX67CTEdpadS\",\"cz3wdxxPWoedzT3LS\",\"ZtJNYJm2ZkPxh3tXk\",\"suArq5BbSy7gD6xri\",\"QrGnkbEeTo45YwRHy\",\"H5unSQnTvt6QeMwJZ\",\"ZvoqkwZQC52on5hpY\",\"acFDzp9EJzHg8c2rD\",\"B4LpueSJhLDYMEQAW\",\"PKu9i6fmR67WGCgad\",\"Sg6ghakGrASGDfpYb\",\"vAbK8sCfKyFC78HYg\",\"mw9464S5dnenqzvpm\",\"cPz8Tv943k2H422Tj\",\"gGXghWEN4u5vuoXcR\",\"r83jJeskFETo3RLhZ\",\"pnfwbXY4dgrSKq2Fv\",\"dfHPL2A5SYuxyhs99\",\"DiPDbb767ot3GayXM\",\"uEwJFW6WwqT2KDT42\",\"bKjkrkCzcgws7bq6x\",\"5H6WybGSZcsxZnLAW\",\"oe9xmyfsAaTzXgkWS\",\"dwb85Cv2my3Qza7Y2\",\"rQA9SE8nuwFueaHsR\",\"FT2wBacm3JxrYmZDW\",\"FtuianggdMvAxG43T\",\"pAZbgFZXcRXfLifk8\",\"NioGGZL9KCn5Ln96t\",\"fMp8sPsKSECdfgF9j\",\"CdXigydGTBLgA577m\",\"EM3ZSrKa8KKdGa662\",\"hcRAgistSMA5D7S8P\",\"FGYBMbExbwHLD2Wdn\",\"9kSvkZZMLXeH97aT7\",\"baHFHBoY6yS3Sz3cY\",\"4sSXLSBZDxK2Swoo7\",\"acENs2fSF9d7hkTZx\",\"N2ar5QmkbP9aFYop9\",\"qurBZSAW8Xt7Et6tr\",\"XaLb6P8xu4JH7qooB\",\"Zs44kXd2Kn6h67fHr\",\"quYcmxS33qHALzb4Z\",\"32R8afuvC6Jbc5cPk\",\"Z37Q79tr3q4275kyN\",\"SjPPNc7xzsHhmiBdG\",\"Si3HYCLMe8PM47rRt\",\"NJqamrQSnhuYcGL2s\",\"E45zy9qvm9DeJhDWL\",\"pk4YmfRxT4SWemCjs\",\"w3QDkmjZj2dAFDsjq\",\"AwXQLqnTYzcCQrnqQ\",\"4Lwjr34ypKNQNQCar\",\"EE6qCDCRphjXXdE3n\",\"dCHJHgKdWNMGaAA7W\",\"WaSb3HthrD3q2EYsa\",\"F8dA24AosSC8XXb7D\",\"qRCzNXxJtEwCEHnCq\",\"oaJbwGAbtpgYhMEgd\",\"4akHBgnDEDj3Rkv5n\",\"xT2YiBTkgtZ9t6XPA\",\"DhfJpC3Y72teNfiKE\",\"XYwCvWPkjJu4Zn5Qu\",\"BgZcBs3KWeYCRKChr\",\"BFSAXBzoaEJ3Wshj8\",\"5SzsELPGd4mcE3XvC\",\"kJMAAWPWEG6qFouEh\",\"NwczjpfNN8jXy5RF6\",\"gTZ5bHDwS8Mokz7ev\",\"TDt46Kh4kpyGQHE4a\",\"7DXJ3mvKMHHqBLt92\",\"mdRQaGT98ycMt87S2\",\"q8QGySvjPML3PWtw7\",\"PJu3WcTpfRrvHfQiS\",\"ta3DbDAhs5SZMzQYL\",\"WXjFLCky2KqQNtqZb\",\"htXCitorobtqYymjN\",\"K6S8HCswXg68EWHmo\",\"Hu4GorJ4NSqYP9Qfh\",\"kySrxbTWJFhXLtYGj\",\"2t4jHPLkGiAH6YmKC\",\"jTuKuD499TniNkYxf\",\"vSbf8wYGA3KrjXMuQ\",\"d8qtzoLB264iP8tdY\",\"oSFc8XFEXYafu2WWF\",\"WhuuWxGHEymg4WXCm\",\"uSZFmXTzzdn4B2m7W\",\"yw237iFXEK5xwgp7P\",\"p2HEaHrPqwX5oGymi\",\"CTW3MRyc4wNkcjGZQ\",\"yGpXWECHMmXjaRDjy\",\"zQa2K5oqurRQxMxQp\",\"WJX5RRMFLt6ocakuG\",\"i4aX8mHKJsw37kaDx\",\"oaEDng4NPAkd4HrKn\",\"7HAL7H6NJmc4NC8Q5\",\"trb5TCR89z4r5BMc2\",\"5SK47g2HRyxbs4WDR\",\"ztqrsrFhySxwCHXvw\"]},\"flags\":1},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"LNAZ6Yeii3byk284h\",\"language\":\"cpp\"},{\"_id\":\"rTDLyF5itdoubs9ka\",\"language\":\"javascript\"},{\"_id\":\"YBonxEJoHHxLSXTYc\",\"language\":\"php\"},{\"_id\":\"F7iLaLDBHqshWSZz5\",\"language\":\"python3\"},{\"_id\":\"NLam3ZfysYZ8ofgzC\",\"language\":\"ruby\"}]}}"]