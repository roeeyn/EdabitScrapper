a["{\"msg\":\"result\",\"id\":\"1357\",\"result\":{\"_id\":\"nb836onw9bek4FPDt\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"def count_same_ends(txt):\\n\\t\",\"difficulty\":2.016949152542373,\"editorId\":\"PXAcsKkssS2yLyDv2\",\"familyId\":\"2PMTNECX42crJYgMq\",\"instructions\":\"Given a sentence, return the number of words which have the **same first and last letter**.\\n\\n### Examples\\n```\\ncount_same_ends(\\\"Pop! goes the balloon\\\") ➞ 1\\n\\ncount_same_ends(\\\"And the crowd goes wild!\\\") ➞ 0\\n\\ncount_same_ends(\\\"No I am not in a gang.\\\") ➞ 1\\n```\\n\\n### Notes\\n- Don't count single character words (such as \\\"I\\\" and \\\"A\\\" in example #3).\\n- The function should not be case sensitive, meaning a capital \\\"P\\\" should match with a lowercase one.\\n- Mind the punctuation!\\n- Bonus points indeed for using regex!\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(count_same_ends('Pop! the balloon!'), 1)\\nTest.assert_equals(count_same_ends('My mom is not a nun.'), 2)\\nTest.assert_equals(count_same_ends('A fine morning'), 0)\\nTest.assert_equals(count_same_ends('And the crowd goes wild!'), 0)\\nTest.assert_equals(count_same_ends('No I am not in a gang.'), 1)\\nTest.assert_equals(count_same_ends('Taste the difference'), 0)\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,3,2,2,3,1,2,1,1,3,1,2,2,3,2,2,1,2,3,3,3,1,3,5,2,2,1,1,1,1,2,2,3,2,0,2,3,1,3,3,5,3,0,3,2,3,3,2,5,2,3,1,3,4,1,1,2,1,3,3,3,0,2,2,0,0,0,0,0,3,1,3,3,2,0,3,2,0,2,2,3,3,2,2,3,5,0,1,2,3,0,1,3,2,3,2,0,1,3,1,3,2,3,3,0,2,3,2,1,2,2,3,2],\"rators\":[\"tAF9Gf6PiGogbZuWs\",\"8PwfYqoDQFThzNtvf\",\"AasGs8AeX9Lcb9xJn\",\"YRstQuthRkFeBiXug\",\"gb9rvGus2Jv7bjZSs\",\"55RQznnuTGpsj3EXd\",\"Yp7uvStL97cC9fKkY\",\"gJYuGdkXEWWmGRLzu\",\"aEm3Wvj2rFYRL8Lrb\",\"ykQ8NpFNznwG7cFJK\",\"8BFSTCnoe2QggN64c\",\"mDWNyaaQ9hvPCRzSd\",\"ywk3XGvcmpTgRxwZa\",\"sz8ufn9i8zeiGWpAy\",\"s5M5RvgqR9BhB9JoC\",\"T2QhZRhybEKeJTb44\",\"JQ5uoxA4WZgN6HyJk\",\"QHcNEadRcCStpv7dj\",\"hfSzpNbjezghfCJH9\",\"FgkYtHLxeD8pETJ8T\",\"sbJcFfQjQ59Wfg4Cd\",\"4rwxLqLs2mNZNg8NB\",\"dHZqT6h4JMwk5fPC8\",\"J5T8gZqiZXFuFDTQ7\",\"Nua6T3dBurBy3Qfg9\",\"8JyqsSbN2FJXPr3cw\",\"gSFJPsMXnqAog3Q9f\",\"yZvzB3qFb8pkHy4dg\",\"HF28xZKSLM9wEuqNg\",\"yr822PZmmiDDenxpB\",\"bjCsNdAEP4v9RwAjK\",\"KdNDysEsy2TW5QRJ2\",\"kQH5b8MXJunh84Czq\",\"MKT7khMBGXzA22ykf\",\"586FdBhazpwJfnRYR\",\"9pzFiFK3ANLjQfnr2\",\"ENsSYogEHHeDSrFod\",\"KRmxvA4mWgfKvHmYN\",\"euPBBaYXyS8RBr9KB\",\"WWD6uwvCr54JJGu5S\",\"rcvAxbpK7Nb73Y9ve\",\"ekQh3jzgGLsEMbKo3\",\"v9KtC8YLbMWmXiW2H\",\"So6PHm74mfJuY2WTs\",\"PCTGbXBpNgYbFf48T\",\"hnyhBFWwNCz9mDfSi\",\"DEDniTrstQYGounXT\",\"n2BRY9X8899dcG8Bw\",\"n9DbcPwhotC5XbfN3\",\"R4SjTgDnpigJYDLyL\",\"6kz7jjJS8W4tikYQT\",\"cykCKNJcqFBxz4T8s\",\"iojEnnY9FsMfYzp6f\",\"tcsswuFnfw39XE6rh\",\"yjtdwc2AC4jA2RWtn\",\"cR3ibTMxLyEdDFCHY\",\"KZ2xddpM2f9JRaryB\",\"Ecg4m7srYGgZsb4Ck\",\"YC3AHiBA55ZhLt57q\",\"yod5YhKtPqw2GfG9B\",\"w2HhxvSLmDhaGCAjE\",\"QRv96jmNaYsWkxQEG\",\"4ZicxybyvEsuA9iET\",\"8fZxjQfuXw5HMSRJM\",\"DqNQn9Jsxcu5HijKE\",\"iS5BrkGLzJyPK7nKt\",\"Z85ajWfZ4jDPkbvR4\",\"xn7uGNKeAwPEkP9oA\",\"p8qqFdJ3FSk5x9z3G\",\"DPi9QGLctq2y76KuE\",\"DpnYcMphntjsQ96qg\",\"J3upzLHuEwXH7Z2hx\",\"dkcmCKwqApX5jBggc\",\"eFh8z7sMmxkrFWZv9\",\"buX4mCQhtXCfBjeno\",\"gXTAie79kiw28tx5u\",\"Jqk2uJZZxEv5wZFze\",\"T2vhHPhRR96hRizq8\",\"cAP3n5NY64uoMwzRR\",\"oBcs8GLX2ZFLXQy8y\",\"CHvzhtXnv8HTbPQ56\",\"GGdmhAvxXhqhhibJN\",\"3LiSLdtN58n46NEqg\",\"yyo6YLQN2of6fxp49\",\"FEYpu9RWysAgW3XnP\",\"Wpn95NqWxncQrwNgz\",\"NfMJuiBk6FN5Jc6ow\",\"GTKsdeEihE636Le9i\",\"fznzd3qnvtbFkkizz\",\"u5u2YpHXiNgzDNJdX\",\"YcCLwitFMAEJSnxAW\",\"9ivvGvJGvtQfigQaZ\",\"2PufnQcsHsfymufX3\",\"LQxof8pGabGuWP7Gn\",\"T6iBEE2jp7f7iEF2P\",\"aFYzioHvZPvPaunsg\",\"bvmTE46bfcM4ogj34\",\"PC3pLs36zNzpRDSuE\",\"H9KZi2cjt4FwH7qog\",\"K6MfKMytoJJuSGewP\",\"nc7bRhkxgKyqusYe3\",\"RErqK2yM94wYyD2hk\",\"4Lwjr34ypKNQNQCar\",\"3KkyQm77zsew58Dc2\",\"ey3CASd6Je5LEJzfB\",\"JKb5rhL6DKcCAypF9\",\"fbr22rabEJMfBp7vD\",\"srJ34BaybkQh3qRkM\",\"HqmxnQJM66Y57twhn\",\"qzXAMXsHZGT8o5hTA\",\"jCjCvyhqhpebkJn34\",\"o4ixjQGSaYqA2JoM4\",\"MpfytGFYF77emJ3cT\",\"gKnWjDjwrJh7MK2df\",\"8sNv5PTHa7XQ8bNqR\",\"RoGGD5cpHb4ftdLDv\",\"eMuCpJ2spXWkJjWNz\",\"5ArqsxTFY7YiydG24\",\"nkH3HfJXLMNcBMM79\",\"5HCu9Ydd86QgHDRNP\",\"8nE8QHnFYsHCFebte\",\"AQSqD9oNv2uPfxZCR\",\"hkiz2Nv927cYGrA86\",\"Ds7L5bksw2QRHjrKL\",\"BrTDhPJcACL2bsrpJ\",\"Qyfyyw6oC4EHAndzo\",\"mvJBakQ35CWAnbbEZ\",\"yTtSCvGPyYna6JuRC\",\"jWbd7SYDzLPjc9EDh\",\"jkbavR2ATFJcpmo8M\",\"QNPbruWphPhimnrAv\",\"mw9464S5dnenqzvpm\",\"PZqJ7pMtLRqp27q4y\",\"3MQt9DD5C8CYtskKk\",\"JhX7jvtpwNyxcc39m\",\"PxjZL5AA8R5Dfg8v3\"],\"total\":152,\"quality\":[5,5,5,5,5,5,3,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5]},\"flags\":0},\"summary\":\"Given a sentence, return the number of words which have the same first and last letter.\\n\\nExamples\\ncountsameends(\\\"Pop! goes the balloon\\\") ➞ 1\\n\\ncountsameends(\\\"And the crowd goes wild!\\\") ➞ 0\\n\\ncountsameends(\\\"No I am not in a gang.\\\") ➞ 1\\n\\nNotes\\nDon't count single character words (such as \\\"I\\\" and \\\"A\\\" in example #3).\\nThe function should not be case sensitive, meaning\",\"tags\":[\"strings\",\"loops\",\"regex\"],\"timestamp\":{\"$date\":1589543779613},\"title\":\"Same on Both Ends\",\"quality\":4.869565217391305,\"family\":[{\"_id\":\"LpSjFtSDrZkZ95Z7s\",\"language\":\"cpp\"},{\"_id\":\"JDDeK9jSFKJbfzhMt\",\"language\":\"javascript\"},{\"_id\":\"nb836onw9bek4FPDt\",\"language\":\"python3\"},{\"_id\":\"iu2YCCBHWfEQeiZ9p\",\"language\":\"ruby\"}]}}"]