a["{\"msg\":\"result\",\"id\":\"1313\",\"result\":{\"_id\":\"CsvdwQvNe8hYomcwB\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"def remap(value, low1, high1, low2, high2):\\n\\t\",\"difficulty\":1.9932885906040267,\"familyId\":\"nWgfDb5stFx8nXcM2\",\"instructions\":\"Create a function similar to Processing's \\\"map\\\" function (check the **Resources** tab), in which a value and its range is taken and remapped to a new range.\\n\\nThe function takes 5 numbers:\\n- Value: `value`\\n- Range: `low1` and `high1`\\n- Range: `low2` and `high2`\\n\\n### Examples\\n```\\nremap(7, 2, 12, 0, 100) ➞ 50\\n\\nremap(17, 5, 55, 100, 30) ➞ 83.2\\n\\nremap(50, 1, 51, 0, 100) ➞ 98\\n```\\n\\n### Notes\\n- Test input will always be numbers.\\n- If the input range is `0`, return `0`.\",\"lab\":\"Test.assert_equals(remap(7, 2, 12, 0, 100), 50)\\nTest.assert_equals(remap(17, 5, 55, 100, 30), 83.2)\\nTest.assert_equals(remap(2.5, 2, 3, -80, 80), 0)\\nTest.assert_equals(remap(50, 1, 51, 0, 100), 98)\\nTest.assert_equals(remap(0, 0, 0, 0, 0), 0, 'The input range is 0.')\\nTest.assert_equals(remap(20, 10, 50, 50, 10), 40)\\nTest.assert_equals(remap(0, 5, -20, 60, 1000), 248)\\nTest.assert_equals(remap(17, 17, 17, 519, 1085), 0, 'The input range is 0.')\",\"language\":\"python3\",\"summary\":\"Create a function similar to Processings \\\"map\\\" function (check the Resources tab), in which a value and it's range is taken and remapped to a new range.\\n\\nThe function takes 5 numbers:\\nValue: value\\nRange: low1 and high1\\nRange: low2 and high2\\n\\nExamples\\nremap(7, 2, 12, 0, 100) ➞ 50\\n\\nremap(17, 5, 55, 100, 30) ➞ 83.2\\n\\nremap(50, 1, 51, 0, 100) ➞ 98\\n\\nNotes\\nYour test\",\"tags\":[\"algorithms\",\"math\",\"numbers\"],\"timestamp\":{\"$date\":1559252100778},\"title\":\"Re-Map a Number from One Range to Another\",\"stats\":{\"completed\":{\"total\":166,\"ratings\":[2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,1,1,2,3,2,1,3,2,2,1,3,3,0,2,1,3,2,1,2,0,2,1,2,1,2,3,3,2,1,0,1,2,5,0,2,1,2,2,2,3,2,3,1,2,1,3,3,3,2,0,3,3,5,3,2,3,3,1,1,3,1,2,3,2,3,3,2,1,3,1,1,1,1,2,2,3,2,1,3,3,2,5,2,0,3,0,2,3,1,3,3,2,1,1,3,2,3,2,3,0,0,4,2,3,2,3,2,0,3,0,2,2,3,1,1,3,1,0,0,1,3,1,1,2,3,3,2,3,2,2,3,1],\"rators\":[\"BkPgkDQGHm66X4Qai\",\"gb9rvGus2Jv7bjZSs\",\"tAF9Gf6PiGogbZuWs\",\"yZvzB3qFb8pkHy4dg\",\"8JyqsSbN2FJXPr3cw\",\"9Gf6g4fuKc3uou9w2\",\"MXjxGML2X75x64vJo\",\"kQH5b8MXJunh84Czq\",\"PFjMZGHNAPTkgd7tq\",\"2skebTaq2Ek7QnC6n\",\"C9LKGu2g5hSijvDzA\",\"jYJ26SiLKBu5GRumq\",\"AF6LgdKhEdzwgRJom\",\"AYaEkTWLMmfzpwejr\",\"nF9pCCzbGDhzvWgaw\",\"7G4BWvmKhTvXg8Mei\",\"cR3ibTMxLyEdDFCHY\",\"gMJhLdyw3tH7L96X2\",\"Nj6FwgBtAXsaQwsM2\",\"XKi8iZXBCHCaebSHh\",\"otXtuQygbcYATMZoP\",\"2fxapKr8XGdNeaKi2\",\"u5u2YpHXiNgzDNJdX\",\"8PwfYqoDQFThzNtvf\",\"K96FwtfDDN5WM4Bb7\",\"K7ipA4FZ8yGYMYXL7\",\"Jqk2uJZZxEv5wZFze\",\"ab7BsQuhDo3QgE6bh\",\"3ECpdeExhBmkYXtba\",\"AbrJ8hMyv5fFXG6DN\",\"Tp6fQWBJhEqQ6Lj5N\",\"EQbnbkkPYtGxiviTp\",\"C4QntmkYtB89GNtpd\",\"NB2TPxhYXMRKFnSPq\",\"m2iiZZHTpzHcEKJMn\",\"CEd9tLdXeDeNHSzys\",\"BByKDngfPvW6w4m7d\",\"EjbDDFRECrzQDkzrX\",\"ZD3sFkhuCNoEHEekx\",\"6eKX5cjhc3nfiSMaL\",\"qJZsi5rhRnWA38FbA\",\"gP5jeJZWkRoasDRa9\",\"AasGs8AeX9Lcb9xJn\",\"jaP8tfdxt4XbSGgo6\",\"Kkie93rtG35Gfxatf\",\"aCNWav8S8Try9RkC6\",\"aRqQ42J5zqCmBNd8w\",\"fP7mHD7yL42xBFNgw\",\"pdoPZoNwQMYmFAaH5\",\"xyHfEdcYBDznunq6n\",\"Lw8oRc5SERsuntXMo\",\"DMH5qWYAScj9hNaRv\",\"BeFnbPbMnAM2SjBdZ\",\"LBjfHKGMTsfZkG78j\",\"n2BRY9X8899dcG8Bw\",\"23oi2a3vQwhtLEbSj\",\"F2aeZ4zqupp7a8SkW\",\"fBqQjriC4QEtFNxFe\",\"4CFzv558qbGcpQwc4\",\"FiaTpm7ehfDv43wSG\",\"J5T8gZqiZXFuFDTQ7\",\"sJWTa7iWeRoRtqJ8N\",\"w3A7cBWyAfukk6xEQ\",\"mDWNyaaQ9hvPCRzSd\",\"PytNZK9mNiRiZxPrm\",\"aEm3Wvj2rFYRL8Lrb\",\"3nied3n8KG8RSNixH\",\"Yp7uvStL97cC9fKkY\",\"ZNnsMeNkdDhHjSrZb\",\"gJYuGdkXEWWmGRLzu\",\"vLrq4dEDMM2wd68Dc\",\"3Zceb8GudqAG3onG3\",\"kYWb8BwpKwunQkxeX\",\"9pzFiFK3ANLjQfnr2\",\"3pxHTZBsv7MKzFG6Y\",\"yYxPzFqBgtQ9fsyHM\",\"dHZqT6h4JMwk5fPC8\",\"HF28xZKSLM9wEuqNg\",\"KRmxvA4mWgfKvHmYN\",\"5eRdoeYxS97AFS8ra\",\"KdNDysEsy2TW5QRJ2\",\"5nY48krepaT4a4QTN\",\"JQ5uoxA4WZgN6HyJk\",\"hnyhBFWwNCz9mDfSi\",\"yr822PZmmiDDenxpB\",\"SGhPxX5bHGL8zZqtt\",\"DEDniTrstQYGounXT\",\"GamaMNrnhrjj5tXTx\",\"wS2o3x4nrsadtC3xP\",\"KRyczPZSHYbKrBYnY\",\"5s4qhuRJijYaDNXva\",\"Ecg4m7srYGgZsb4Ck\",\"ekQh3jzgGLsEMbKo3\",\"zGzQoSwgdwDi299KG\",\"Pe8vWpDHRuH9nSGKW\",\"iojEnnY9FsMfYzp6f\",\"zZDaXBxMzTCBhNkgL\",\"CwXsu25ygLEwQbmQC\",\"iS5BrkGLzJyPK7nKt\",\"Z4M3NAa4TXquMNkHe\",\"KZ2xddpM2f9JRaryB\",\"yjtdwc2AC4jA2RWtn\",\"ZrKCkX7xxGGZzauFW\",\"ji5f27FPz4wRRF6Ls\",\"3qSoEX7yvgic47DTH\",\"jBR47vA7HwAZqp4QA\",\"P7NmFbCJ5offXMRvB\",\"w2HhxvSLmDhaGCAjE\",\"QRv96jmNaYsWkxQEG\",\"9rhsisf8ofHavG5aT\",\"xn7uGNKeAwPEkP9oA\",\"kXEfD7xxEyWd7oxxL\",\"tpxMgkGSHwBjS95Ta\",\"oBcs8GLX2ZFLXQy8y\",\"6MjSiiBLPcvXbXcaZ\",\"ppxNdL4gjANz8oJLQ\",\"dYPkStFnLvAMsHSzZ\",\"4fhjJBvLBWh6QeSih\",\"9onLFjwWr6DqyRBJw\",\"DPi9QGLctq2y76KuE\",\"fznzd3qnvtbFkkizz\",\"J3upzLHuEwXH7Z2hx\",\"kEkNyqFARK9YBrhRx\",\"GGdmhAvxXhqhhibJN\",\"2QziknsznNeMPRh3g\",\"RTDx9axf52kxhFjwZ\",\"FEYpu9RWysAgW3XnP\",\"CipP6YKLHpnfc6PSE\",\"9ivvGvJGvtQfigQaZ\",\"2PufnQcsHsfymufX3\",\"8BFSTCnoe2QggN64c\",\"RErqK2yM94wYyD2hk\",\"srJ34BaybkQh3qRkM\",\"AFfw7cGg83uYk2Miy\",\"BrTDhPJcACL2bsrpJ\",\"4Lwjr34ypKNQNQCar\",\"ctbThYbufFCYbRK4f\",\"o4ixjQGSaYqA2JoM4\",\"T6iBEE2jp7f7iEF2P\",\"gKnWjDjwrJh7MK2df\",\"8sNv5PTHa7XQ8bNqR\",\"RoGGD5cpHb4ftdLDv\",\"4RY3zj9C2t8GGefhi\",\"5HCu9Ydd86QgHDRNP\",\"yod5YhKtPqw2GfG9B\",\"Ds7L5bksw2QRHjrKL\",\"oFEG3RDs5J99JYtkZ\",\"ey3CASd6Je5LEJzfB\",\"Qyfyyw6oC4EHAndzo\",\"PKwPdPoC8w32T8GtP\",\"eMuCpJ2spXWkJjWNz\",\"gpGXTvjS2HrY9Skq5\",\"CHvzhtXnv8HTbPQ56\"],\"quality\":[5,5,3,5,5,5,5,4,5,5,4,5,5]},\"tests\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"instructions\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.6923076923076925,\"family\":[{\"_id\":\"roCH4n2xnBjLoXfjv\",\"language\":\"javascript\"},{\"_id\":\"CsvdwQvNe8hYomcwB\",\"language\":\"python3\"},{\"_id\":\"xWecwiRcxjRMg8viW\",\"language\":\"ruby\"}]}}"]