a["{\"msg\":\"result\",\"id\":\"1273\",\"result\":{\"_id\":\"M47FDJLjfNoZ6k6gF\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"def cup_swapping(swaps):\\n\\t\",\"difficulty\":1.9520958083832336,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"2q6tBd4rWoKKet9FG\",\"instructions\":\"There are three cups on a table, at positions **A, B, and C.** At the start, there is a ball hidden under the cup at **position B**.\\n\\n![Image of cups where ball is under middle cup](https://edabit-challenges.s3.amazonaws.com/kfnerNJDNn.png)\\n\\nHowever, I perform several swaps on the cups, which is notated as two letters. For example, if I swap the cups at positions **A and B**, I could notate this as `AB` or `BA`.\\n\\nCreate a function that returns the letter position that the ball is at, once I finish swapping the cups. The swaps will be given to you as a list.\\n\\n### Worked Example\\n```\\ncup_swapping([\\\"AB\\\", \\\"CA\\\", \\\"AB\\\"]) ➞ \\\"C\\\"\\n\\n# Ball begins at position B.\\n# Cups A and B swap, so the ball is at position A.\\n# Cups C and A swap, so the ball is at position C.\\n# Cups A and B swap, but the ball is at position C, so it doesn't move.\\n```\\n\\n### Examples\\n```\\ncup_swapping([\\\"AB\\\", \\\"CA\\\"]) ➞ \\\"C\\\"\\n\\ncup_swapping([\\\"AC\\\", \\\"CA\\\", \\\"CA\\\", \\\"AC\\\"]) ➞ \\\"B\\\"\\n\\ncup_swapping([\\\"BA\\\", \\\"AC\\\", \\\"CA\\\", \\\"BC\\\"]) ➞ \\\"A\\\"\\n```\\n\\n### Notes\\n* A swap could be notated in two different ways, since both ways end up with the same outcome.\\n* All swaps will be notated as capital letters and will be valid.\\n* You cannot swap a cup with itself.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(cup_swapping(['AB', 'CA']), 'C')\\nTest.assert_equals(cup_swapping(['AB', 'CA', 'AB']), 'C')\\nTest.assert_equals(cup_swapping(['AC', 'CA', 'CA', 'AC']), 'B')\\nTest.assert_equals(cup_swapping(['BA', 'AC', 'CA', 'BC']), 'A')\\nTest.assert_equals(cup_swapping(['BC', 'CB', 'CA', 'BA']), 'A')\\nTest.assert_equals(cup_swapping(['BC']), 'C')\\nTest.assert_equals(cup_swapping(['BA', 'CA', 'CB', 'CA']), 'B')\\nTest.assert_equals(cup_swapping([]), 'B')\",\"language\":\"python3\",\"quality\":4.711111111111111,\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,3,3,3,1,3,2,1,2,2,1,3,1,2,1,0,3,2,2,1,0,2,3,2,3,1,2,2,2,2,3,1,2,2,2,2,3,3,1,1,0,3,3,2,2,3,0,2,2,2,1,3,4,0,1,3,2,3,4,2,2,3,2,2,3,2,3,2,3,1,2,0,1,2,0,3,0,3,3,1,3,3,2,0,0,1,3,3,2,1,1,2,3,1,3,3,2,1,3,2,2,3,3,1,1,2,1,2,3,2,2,3,2,1,3,2,0,3,1,2,1,2,0,2,1,3,1,3,3,0,2,3,2,2,3,3,3,2,2,2,3,3,2,1,2,0,3,5,0,1,2,2,2,2,1,2,2,2,1,3,1,1],\"quality\":[5,4,5,2,5,5,5,5,5,5,5,5,5,5,5,4,3,5,5,5,5,5,5,5,4,5,5,5,5,5,3,5,5,4,4,5,5,5,5,5,5,5,5,5,4],\"rators\":[\"PXAcsKkssS2yLyDv2\",\"iS5BrkGLzJyPK7nKt\",\"p8qqFdJ3FSk5x9z3G\",\"8PwfYqoDQFThzNtvf\",\"yjtdwc2AC4jA2RWtn\",\"buX4mCQhtXCfBjeno\",\"s5M5RvgqR9BhB9JoC\",\"Jqk2uJZZxEv5wZFze\",\"2PufnQcsHsfymufX3\",\"Z85ajWfZ4jDPkbvR4\",\"a777e8chPvJkY3tKa\",\"xn7uGNKeAwPEkP9oA\",\"QRv96jmNaYsWkxQEG\",\"n2BRY9X8899dcG8Bw\",\"3LiSLdtN58n46NEqg\",\"cAP3n5NY64uoMwzRR\",\"hnyhBFWwNCz9mDfSi\",\"vKpFABG8uhref9i6v\",\"HF28xZKSLM9wEuqNg\",\"8nE8QHnFYsHCFebte\",\"GGdmhAvxXhqhhibJN\",\"bGedC5tiq4AGwSCMq\",\"XtgTJNxw5XG8ouJjG\",\"J5bkXDr2NeWAfagPF\",\"8BFSTCnoe2QggN64c\",\"C5ExHTa2p5bDPCm5Q\",\"KDfmGkQoajgNwwAm3\",\"DPi9QGLctq2y76KuE\",\"CHvzhtXnv8HTbPQ56\",\"f5QGrWE3gHQG7SZrY\",\"tyojfrvuRbM4gGGcs\",\"fznzd3qnvtbFkkizz\",\"TePz42wc3ZZ5CKA6L\",\"jDBLwczxoPrGtbufB\",\"2QziknsznNeMPRh3g\",\"8JyqsSbN2FJXPr3cw\",\"hkiz2Nv927cYGrA86\",\"oBcs8GLX2ZFLXQy8y\",\"BrTDhPJcACL2bsrpJ\",\"qAby4AWXmTNeusvg3\",\"P6iCAiWmYcgoa2uHC\",\"vZiggkfSbgCKsN2ko\",\"DGs39xjrh2S47YLcz\",\"dJzNF59j2p8jWZxiQ\",\"nc7bRhkxgKyqusYe3\",\"yLuaweZ4rkrabfELB\",\"XZTTdkP97NZzDwHEJ\",\"eHcgvkTGsH7ZziqBo\",\"KhZzWPJANSirDNohJ\",\"L3esWnKaSLDzrKJyk\",\"KBxTPknCRmB2b5y3i\",\"qc989fsMs4JsKsvxg\",\"PsS5NMZFcKvryyNKg\",\"Hhvy3EGqWBXt3nFPA\",\"RTDx9axf52kxhFjwZ\",\"ppxNdL4gjANz8oJLQ\",\"DQskEvAv5KiJDPtGF\",\"gb9rvGus2Jv7bjZSs\",\"cR3ibTMxLyEdDFCHY\",\"Yp7uvStL97cC9fKkY\",\"kksnPGTWtx4ffsD45\",\"FnWATKutkvp7u9jjg\",\"ykcCTsD8GBmf7QQd5\",\"bvmTE46bfcM4ogj34\",\"mfm3gB39arY8Rjb2y\",\"gJYuGdkXEWWmGRLzu\",\"mfsaETo7uA4x5vqLD\",\"yyo6YLQN2of6fxp49\",\"hJ6xKYkoZfsHEwpwv\",\"FEYpu9RWysAgW3XnP\",\"QHcNEadRcCStpv7dj\",\"iojEnnY9FsMfYzp6f\",\"WfgQWTf63Jet347zB\",\"ouD6cs7ZdxzPfKRKt\",\"Wf7e5gN9GC2ip7EW9\",\"R2FLkDPTs6gSJTgCt\",\"iP7wNofhZXTkJ9ryG\",\"Zk7zYsonf4TQ6d27R\",\"CZeLyDD2BQL3jrzzj\",\"Wpn95NqWxncQrwNgz\",\"dynD89GCHoau9fvh7\",\"wH2t3rPfDAXb7Lngd\",\"zd9FLSzsGz3evKafy\",\"NfMJuiBk6FN5Jc6ow\",\"ey3CASd6Je5LEJzfB\",\"hC6YxtaPQu3YNErf4\",\"nzxRE3SWEntdQ5P73\",\"zBcfQcR4Ao5mRQcmS\",\"C2387kETftnnwwJ9Z\",\"YvM2WFSFujYR3t2tM\",\"27jqdQJjg6GGa5iQb\",\"KunCjp7oMt4FqaHaG\",\"9s8grMKsyuYgs2YeP\",\"KJCDwGkoXh8qtbbKr\",\"CTKmXtrqDYqJBnuy8\",\"no46qNkTbNeHepe64\",\"u5u2YpHXiNgzDNJdX\",\"mDWNyaaQ9hvPCRzSd\",\"J3upzLHuEwXH7Z2hx\",\"YcCLwitFMAEJSnxAW\",\"XNmN6ztj36a7eChbD\",\"LQxof8pGabGuWP7Gn\",\"AQSqD9oNv2uPfxZCR\",\"N7xGSBA4qhSTsHkKg\",\"5kazQPq8ZdDsx6kjf\",\"J5T8gZqiZXFuFDTQ7\",\"PC3pLs36zNzpRDSuE\",\"RErqK2yM94wYyD2hk\",\"TRgrEgt4om7omivJk\",\"XHShZ3WMPgGEA2vkR\",\"AasGs8AeX9Lcb9xJn\",\"ghMkPtdFCpM6w8nax\",\"tAF9Gf6PiGogbZuWs\",\"DEDniTrstQYGounXT\",\"HqmxnQJM66Y57twhn\",\"XjyaCd8bviTitHTwa\",\"aEm3Wvj2rFYRL8Lrb\",\"ADycYubh8WTMCXhgR\",\"etoxSpG4fGKThLozM\",\"T6iBEE2jp7f7iEF2P\",\"jWbd7SYDzLPjc9EDh\",\"8sNv5PTHa7XQ8bNqR\",\"ctbThYbufFCYbRK4f\",\"XCnbSuZF8gdA7Lc8o\",\"E5dCkixH4y94htpks\",\"RoGGD5cpHb4ftdLDv\",\"nkL2knkcNaiHCerW2\",\"MpfytGFYF77emJ3cT\",\"v95WuLKYMT54bRAMG\",\"5HCu9Ydd86QgHDRNP\",\"uBXzq8ZaZMYkn4wW5\",\"QhQQAZhAiRgXzrCmy\",\"LsCE7H9rqgDJDXjtY\",\"oAA7RcohyhFHNtsQ5\",\"kKuBJ7iwjLRKpKGx9\",\"nkH3HfJXLMNcBMM79\",\"oFEG3RDs5J99JYtkZ\",\"iqmPb9JuJDgTFeR8Q\",\"jCjCvyhqhpebkJn34\",\"9LghqktEpW4YLxdNk\",\"EAkaxGi8WdbHfLrnc\",\"M8d3nCSCRX3Z4CvwY\",\"m7kMANAKbQxHfueLC\",\"KzjKprh7wW3dzLGF6\",\"i5Nn7L8wRjX4fAZNN\",\"BuGWvGZGiJELoMy5G\",\"AFfw7cGg83uYk2Miy\",\"mvJBakQ35CWAnbbEZ\",\"5s4qhuRJijYaDNXva\",\"dYMn4JuJ4bASF2kok\",\"JC8xt2rJtqR7PeLwN\",\"uw8E83imJYpQiiPpP\",\"muQCKmimwtNAdS8rp\",\"dgzKPB3v93obQZYCA\",\"4RY3zj9C2t8GGefhi\",\"mKayXNL5iquN4cjuH\",\"nQRzZKeDKuLRf9chX\",\"qmtoFxLkGDQMwcBr6\",\"yod5YhKtPqw2GfG9B\",\"Ds7L5bksw2QRHjrKL\",\"NpxzZk8fyyh28rBmw\",\"NqsYZi3NYoMzJKBqX\",\"dSd7wHgXGQeG5BQ2P\",\"GSQSKufKzbu5AeNKT\",\"jQZ33w5EDynkkab8m\",\"eMuCpJ2spXWkJjWNz\",\"wiL4SsnwNM85Px5cc\",\"CtLaGA3WAjwAPqPgf\",\"AMpQSjKsRqhCDyS2j\",\"5QN8R22z43SrwoHDz\",\"CvgNamixBpiG4vLYw\",\"PbuhPqfvFrWRsne8z\",\"qaPjAANdnxFnWfj5d\",\"qNszsXx28cTxvGSNj\",\"5EFbgnAJJCXr6dwP5\",\"rhS8qXRjZcpDXkwnE\",\"BxyR46apn475M9zG6\",\"nPJ7kMLALXRxuE3rF\",\"7SSphr2XXj52ZSDo4\",\"hKFLMhz2bxa8KbgKR\",\"jpiYk9LbC3oDg84dz\",\"Qyfyyw6oC4EHAndzo\",\"DdHnWE8gjciwCXhSL\",\"wpYKSaJtog6nQ8rDE\",\"FNi2H5fKc5EAQ2Hcq\",\"jkbavR2ATFJcpmo8M\",\"5Dd7XwALvvMMwS4Fb\",\"c4TMkfLQBtDRfbGrj\",\"a4tAouoq6aASMZjGJ\",\"P7NmFbCJ5offXMRvB\",\"GQjnsTnFgsBqCXzHz\",\"g5dP3rGGK4QSypC4k\",\"3Kgtr8FytbE9FnJxH\",\"yTtSCvGPyYna6JuRC\",\"5e98j4ejZBfhxDwxB\",\"bNENiqqEDxM5a5JBf\",\"23oi2a3vQwhtLEbSj\",\"9pzFiFK3ANLjQfnr2\",\"RfbjShbg8jmhyNtJh\",\"hP3dY9tJ9yC6ZoKtH\",\"myNNXwbSCou5wm6dL\",\"qsYjryMow354tq69B\",\"FQoDbW3f7viY9x6xq\",\"3nied3n8KG8RSNixH\",\"kzaJ35PAFjDKmbsoH\",\"2MjzJ7yxh3eT3xbng\",\"Wi4H6ayKsNDWWQCG5\"],\"total\":230},\"flags\":0},\"summary\":\"There are three cups on a table, at positions A, B, and C. At the start, there is a ball hidden under the cup at position B.\\n\\nImage of cups where ball is under middle cup\\n\\nHowever, I perform several swaps on the cups, which is notated as two letters. For example, if I swap the cups at positions A and B, I could notate this as AB or BA.\\n\\nCreate a function that\",\"tags\":[\"algorithms\",\"logic\",\"interview\"],\"timestamp\":{\"$date\":1611527549060},\"title\":\"Cup Swapping\",\"family\":[{\"_id\":\"DZqt3GzYoPNWxHhWv\",\"language\":\"cpp\"},{\"_id\":\"X3btpQQEBeezX4jhK\",\"language\":\"csharp\"},{\"_id\":\"pkMPzrmsNN9RRnMqx\",\"language\":\"java\"},{\"_id\":\"5DCC9SzA2FTcCTvkd\",\"language\":\"javascript\"},{\"_id\":\"JL4vXxvwJX4seg76j\",\"language\":\"php\"},{\"_id\":\"M47FDJLjfNoZ6k6gF\",\"language\":\"python3\"},{\"_id\":\"z5cKH8x228JxemFLx\",\"language\":\"ruby\"},{\"_id\":\"4449BwgJYXZxNyDmX\",\"language\":\"swift\"}]}}"]