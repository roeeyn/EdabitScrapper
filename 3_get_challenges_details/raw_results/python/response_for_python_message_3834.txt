a["{\"msg\":\"result\",\"id\":\"636\",\"result\":{\"_id\":\"suhHcPgaKdb9YCrve\",\"author\":\"Werdna\",\"authorId\":\"buX4mCQhtXCfBjeno\",\"code\":\"def even_or_odd(s):\\n\\t\",\"difficulty\":1.089820359281437,\"familyId\":\"DPsnRvYDheR9Lu6Ex\",\"instructions\":\"Create a function to determine if the sum of all the individual even digits are greater than the sum of all the individual odd digits in a string of numbers.\\n\\n- If the sum of odd numbers is greater than the sum of even numbers, return `\\\"Odd is greater than Even\\\"`.\\n- If the sum of even numbers is greater than the odd numbers, return `\\\"Even is greater than Odd\\\"`.\\n- If the sum of both even and odd numbers are equal, return `\\\"Even and Odd are the same\\\"`.\\n\\n### Examples\\n```\\neven_or_odd(\\\"22471\\\") ➞ \\\"Even and Odd are the same\\\"\\n\\neven_or_odd(\\\"213613\\\") ➞ \\\"Even and Odd are the same\\\"\\n\\neven_or_odd(\\\"23456\\\") ➞ \\\"Even is greater than Odd\\\"\\n```\\n\\n### Notes\\nThe input will be a string of numbers.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(even_or_odd('12345'), 'Odd is greater than Even')\\nTest.assert_equals(even_or_odd('143'), 'Even and Odd are the same')\\nTest.assert_equals(even_or_odd('2221'), 'Even is greater than Odd')\\nTest.assert_equals(even_or_odd('23456'), 'Even is greater than Odd')\\nTest.assert_equals(even_or_odd('4321'), 'Even is greater than Odd')\\nTest.assert_equals(even_or_odd('3245'), 'Odd is greater than Even')\\nTest.assert_equals(even_or_odd('14256'), 'Even is greater than Odd')\\nTest.assert_equals(even_or_odd('11234'), 'Even is greater than Odd')\\nTest.assert_equals(even_or_odd('1734'), 'Odd is greater than Even')\\nTest.assert_equals(even_or_odd('145'), 'Odd is greater than Even')\\nTest.assert_equals(even_or_odd('22471'), 'Even and Odd are the same')\\nTest.assert_equals(even_or_odd('213613'), 'Even and Odd are the same')\\nTest.assert_equals(even_or_odd('23456'), 'Even is greater than Odd')\\nTest.assert_equals(even_or_odd('9738'), 'Odd is greater than Even')\\nTest.assert_equals(even_or_odd('34522'), 'Even and Odd are the same')\\nTest.assert_equals(even_or_odd('12378'), 'Odd is greater than Even')\\nTest.assert_equals(even_or_odd('45228'), 'Even is greater than Odd')\\nTest.assert_equals(even_or_odd('4455'), 'Odd is greater than Even')\\nTest.assert_equals(even_or_odd('6721'), 'Even and Odd are the same')\\nTest.assert_equals(even_or_odd('92184'), 'Even is greater than Odd') \\nTest.assert_equals(even_or_odd('12'), 'Even is greater than Odd')\\nTest.assert_equals(even_or_odd('123'), 'Odd is greater than Even')\\nTest.assert_equals(even_or_odd('112'), 'Even and Odd are the same')\\nTest.assert_equals(even_or_odd('124'), 'Even is greater than Odd')\",\"language\":\"python3\",\"quality\":4.655172413793103,\"summary\":\"Create a function to determine if the sum of all the individual even digits are greater than the sum of all the individual odd digits in a string of numbers.\\n\\nIf the sum of odd numbers is greater than the sum of even numbers, return \\\"Odd is greater than Even\\\".\\nIf the sum of even numbers is greater than the odd numbers, return \\\"Even is greater than Odd\\\".\\nIf the\",\"tags\":[\"arrays\",\"algorithms\",\"language_fundamentals\",\"numbers\",\"strings\"],\"timestamp\":{\"$date\":1615580405494},\"title\":\"Even or Odd: Which is Greater?\",\"stats\":{\"completed\":{\"total\":236,\"ratings\":[1,1,1,1,1,1,1,0,1,2,1,1,2,2,1,2,2,0,1,0,1,1,1,0,2,0,1,2,1,1,0,1,1,1,1,1,1,1,2,1,1,1,2,1,1,2,2,1,1,0,0,2,1,1,1,1,2,5,1,0,1,1,1,2,1,1,1,0,1,1,1,1,1,1,0,1,1,1,0,1,0,1,2,1,1,2,2,1,1,0,1,0,2,2,1,2,1,0,1,1,2,3,1,1,1,1,1,0,0,1,1,0,2,1,0,3,2,1,0,0,3,1,1,2,4,0,1,1,1,1,1,0,1,2,2,1,1,1,1,1,1,0,1,1,1,1,1,1,1,2,0,2,3,1,0,1,0,0,1,1,1,2,2,1,0,1,1],\"quality\":[5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2,5,4,5,5,4,5,5,5,4,5,5,5,5,5,5,4,5,5,5,5,4,4,5,5,3,5,4,4,5,5,1,5,5,5,5,5,5,5,3,5],\"rators\":[\"buX4mCQhtXCfBjeno\",\"NP2RxM3eBd3drnDwP\",\"QWjsXnLaJ7xfL3Amq\",\"zSTQQB8d5wMQb2Chr\",\"oBcs8GLX2ZFLXQy8y\",\"KHWNSWEPEStgjw68t\",\"iS5BrkGLzJyPK7nKt\",\"XD5nmvKQchKezPXhy\",\"rfyEkETeoS96QNH4e\",\"tdfY4iBvD7oh2ufnN\",\"QRv96jmNaYsWkxQEG\",\"DEDniTrstQYGounXT\",\"T6iBEE2jp7f7iEF2P\",\"o4ixjQGSaYqA2JoM4\",\"FEYpu9RWysAgW3XnP\",\"iojEnnY9FsMfYzp6f\",\"Ds7L5bksw2QRHjrKL\",\"cR3ibTMxLyEdDFCHY\",\"YcCLwitFMAEJSnxAW\",\"PXAcsKkssS2yLyDv2\",\"cAP3n5NY64uoMwzRR\",\"t3wwRMtYdLYBwWR4J\",\"zd9FLSzsGz3evKafy\",\"FiaTpm7ehfDv43wSG\",\"PC3pLs36zNzpRDSuE\",\"sbJcFfQjQ59Wfg4Cd\",\"JmrbTNBd73ic7PkEg\",\"c2q7mY39z5JPEMCaM\",\"mMccJLRWf8sJxkg6P\",\"JKbEBybAsiKrmcqof\",\"3cF6NXq3ZEwdkgSjb\",\"p8qqFdJ3FSk5x9z3G\",\"h9RRjZqDymieWayne\",\"g2mqHYvQmr78mET8i\",\"hephf5PXsibbvJrQA\",\"X4rzfxGgxx6CS7Bpz\",\"PiRFsaY372Gbgs8qF\",\"eToGpgNe3RaK5e9iS\",\"iYXdNw7tKcgA3QwBX\",\"Xm8r5ijKqrW7CqCF2\",\"rgMFSYYcZiXodpWKQ\",\"peCvTbjQBgdWo53Wv\",\"7nq2NYeZbTh8ym4jk\",\"srJ34BaybkQh3qRkM\",\"w3QDkmjZj2dAFDsjq\",\"pH3ZQdWKWqJKqczyW\",\"GizwmDpZc8bNYuted\",\"ghW3Nvg42xRxFzjPi\",\"Kh2bZhFuLobbcxBFs\",\"oMKKtKDHntiFhTGTH\",\"AFfw7cGg83uYk2Miy\",\"WWS37MrHbt2NBFNXm\",\"ZKMLnjbwgqpQa88Nh\",\"Tp3ECsPRoCfbsrm4g\",\"zC8WrPp5BC6c2exrW\",\"fCTfZSgeDbRbTvDY4\",\"xG4jFH32NX5WP3aMx\",\"tkNJoJGJqvpoMKeS9\",\"DPi9QGLctq2y76KuE\",\"gb9rvGus2Jv7bjZSs\",\"BrTDhPJcACL2bsrpJ\",\"3KkyQm77zsew58Dc2\",\"vCeeMuYDbz3MB4vsk\",\"8JyqsSbN2FJXPr3cw\",\"uin3SooXNbPzwajcP\",\"KJCDwGkoXh8qtbbKr\",\"gJYuGdkXEWWmGRLzu\",\"2QGRoQn2dRq3scu7k\",\"5HCu9Ydd86QgHDRNP\",\"ZAY94fimwrWiGNisN\",\"ghMkPtdFCpM6w8nax\",\"CyzskHGsC6WSmYrLu\",\"jkys684AAfPRxrYaD\",\"GGdmhAvxXhqhhibJN\",\"XrqNzJ2FRG8HnGiR6\",\"HtKcJP5XueSyXhDaM\",\"CC6iydq5Tjq9oHxY5\",\"zMrNuQsBHWMJtaEhM\",\"yjtdwc2AC4jA2RWtn\",\"mzsaCBQP3e6YourDN\",\"K5ArRE3fZt9GdRwuL\",\"RoGGD5cpHb4ftdLDv\",\"J23RcmzbdtBbPCTjT\",\"sX9GZp3fYyQLrBKMJ\",\"dJzNF59j2p8jWZxiQ\",\"YuEM3nmSQQ3wFA3hj\",\"K6MfKMytoJJuSGewP\",\"szQg8dxKNNre3v3Jk\",\"QTJvghkPpGKnKvZ5R\",\"NzbRqGWspQnWMoDrF\",\"J5T8gZqiZXFuFDTQ7\",\"fj7dq8jNxAb7QeqgR\",\"s5M5RvgqR9BhB9JoC\",\"CHvzhtXnv8HTbPQ56\",\"tAF9Gf6PiGogbZuWs\",\"AJexRBN9cYQmqvYu6\",\"Yp7uvStL97cC9fKkY\",\"eMuCpJ2spXWkJjWNz\",\"N2wnZXkhDH86mgjQ8\",\"CKHKhvJcq9jNMqrmd\",\"8BFSTCnoe2QggN64c\",\"5XiuAqicKD4hBdu63\",\"pPpmP7xeJzGgK362R\",\"d8qtzoLB264iP8tdY\",\"M2gFMJkocQSY6bsFR\",\"fSQSHjW3e72MrWxbD\",\"fTNQmMvTZhhiGBCMe\",\"8uiLiJcmWxWe6qw65\",\"9Ly8afdtofp8DXzrt\",\"rgvAJFwfCeYoYnFTK\",\"mvJBakQ35CWAnbbEZ\",\"EfxwqhYdapX3dMQC2\",\"NrRa4TS6uZR9xuXRt\",\"H9KZi2cjt4FwH7qog\",\"3nied3n8KG8RSNixH\",\"aEm3Wvj2rFYRL8Lrb\",\"q2tzvkrLASvSjkek9\",\"AasGs8AeX9Lcb9xJn\",\"rrSC943cCKNG48sH4\",\"4TmgHkn5vqyHK3sYC\",\"JiSpvq6C7azQEmENc\",\"utTuvGdmu2sBHWBhQ\",\"jkbavR2ATFJcpmo8M\",\"jNE5AHcJQWXz7efuP\",\"FxbTzThBiTnRzfirA\",\"H4abACFDH5t8CnnyH\",\"ZXWDtCrM9ev3439oi\",\"eHcgvkTGsH7ZziqBo\",\"JS3hNM3XXkxPdg3yk\",\"2MjzJ7yxh3eT3xbng\",\"H4LqzfSad6d4BCgwy\",\"iD2PuFPkoQHnvxJCF\",\"cW3JLc64ExyWk3fkG\",\"bur3yQ8s34zqKGEro\",\"RmwYNt4oSLCLLd8a5\",\"Ltdw9HX9mc28b6iyW\",\"u6pWu9qefWtqaaTm5\",\"eftmbxktMQXtMbnf3\",\"jWbd7SYDzLPjc9EDh\",\"9X4GsrriXYhLfuLpC\",\"qB6KSTYC6H2TQEQY6\",\"ChCR2XGsG27PuiujF\",\"9pzFiFK3ANLjQfnr2\",\"5Dd7XwALvvMMwS4Fb\",\"vwrLSeP2JtgvtRHmr\",\"rzzFkBdQWcRjH2eKi\",\"ECpjKM58LJMYNMGJZ\",\"hZ2JDAEG2P5rMLWEW\",\"7ajSwbNMNp9ggPewT\",\"wwz3ixWSv8rFDHBXd\",\"HqmxnQJM66Y57twhn\",\"u5u2YpHXiNgzDNJdX\",\"Dq24MSpogRmq6L4hX\",\"J3upzLHuEwXH7Z2hx\",\"w2HhxvSLmDhaGCAjE\",\"MKT7khMBGXzA22ykf\",\"NGvCPuMiAP3xrRLfB\",\"Afnps7TJQuS9sipMb\",\"LCuvvWMwiGuqTwNRi\",\"gjiu8kLnHYxe4HoBN\",\"LQxof8pGabGuWP7Gn\",\"gKnWjDjwrJh7MK2df\",\"iP7wNofhZXTkJ9ryG\",\"TCvpT4EPb8qNssNB7\",\"j7ebNFtte6fSkMWjj\",\"Y985fpDar87jfQFYS\",\"uBXzq8ZaZMYkn4wW5\",\"jCjCvyhqhpebkJn34\",\"BatyhxsxBMwGNiioE\",\"p65j6ikvNwF3tQPWT\",\"9bQyb6rW7xfE4vgrR\",\"Jqk2uJZZxEv5wZFze\",\"YRAzEBJoLvSaiPtYx\",\"22xuj7BGMwbN5BRjy\",\"4bb7pim4ewTwrMTEA\",\"Fk9kLwoG4Brf4KsKf\",\"E9ttMPTkLkKG6nZrg\",\"Lm6ChQCWBmaikmk5J\",\"jBo3xAopr37GFzY8g\",\"d9LBRxvADNBB5QJMB\",\"9LrF5o2TK2iE8BZJh\",\"dYPkStFnLvAMsHSzZ\",\"8PwfYqoDQFThzNtvf\",\"rCrbqMiaGPgHYTNxu\",\"dzS6WBTMHyFEag6Fp\",\"rhS8qXRjZcpDXkwnE\",\"qAby4AWXmTNeusvg3\",\"gXTAie79kiw28tx5u\",\"mxX4rH5ELYkdZ2Mbw\",\"AMpQSjKsRqhCDyS2j\",\"B4y8aoyXJtskYPFEL\",\"LWCzZ8mb8gwrRNGfq\",\"mw9464S5dnenqzvpm\",\"wjc4iejpErBhxWwHo\",\"uK58g2EXxqxTaB2iA\",\"Qyfyyw6oC4EHAndzo\",\"yAouD3PxzED8a4gap\",\"FMyZPN6odEFtfuimF\",\"4Lwjr34ypKNQNQCar\",\"5QN8R22z43SrwoHDz\",\"vAbK8sCfKyFC78HYg\",\"gbGzZz5Yq5hT357v8\",\"pwWtbXEjzuvrhEGwt\",\"FRN2W8RYpJ6GPhgRy\",\"cdXmwjupCXSvJTSNo\",\"PytNZK9mNiRiZxPrm\",\"ahWFxnaxt9bXSA4f3\",\"oG6ogzo5692C8eFay\",\"QN4FPwhiak7Pf8kn6\",\"Wi4H6ayKsNDWWQCG5\",\"GgQqni8TkbqEBGcsy\",\"BJp2WkwLWGHHB5oQW\",\"wRttWTM59y8m5mx7x\",\"sMcFMPkMJC4Kh6ymj\",\"iBjwTeXx4KiWffy64\",\"5nbHH4eApn6So9h2n\",\"Woz5tHCo5K2uKZaNC\",\"mdRQaGT98ycMt87S2\",\"cmH5k3s9REYMzDBMn\",\"rraTtctZqnjXu2L2x\"]},\"flags\":1},\"editorId\":\"buX4mCQhtXCfBjeno\",\"family\":[{\"_id\":\"2cvEDaxqvxSYQ28pa\",\"language\":\"cpp\"},{\"_id\":\"bCif823bBvNFfLK7G\",\"language\":\"javascript\"},{\"_id\":\"zemtfLzxELTGsNP6i\",\"language\":\"php\"},{\"_id\":\"suhHcPgaKdb9YCrve\",\"language\":\"python3\"},{\"_id\":\"XAvWinHmqvtWXvEzm\",\"language\":\"ruby\"}]}}"]