a["{\"msg\":\"result\",\"id\":\"188\",\"result\":{\"_id\":\"6YN2ww3B4cQZ6rTmN\",\"author\":\"Juan esteban\",\"authorId\":\"pPpmP7xeJzGgK362R\",\"code\":\"def leap_year(year):\\n\\t\",\"difficulty\":0.5583333333333333,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"ho9GggsfWfhqtJYEJ\",\"instructions\":\"Write a function that returns `True` if a year is a leap, otherwise return `False`.\\n\\nA year is a \\\"leap year\\\" if it lasts 366 days, instead of 365 in a typical year. That extra day is added to the end of the shortest month, creating February 29.\\n\\nA leap year occurs every four years, and will take place if the year is a multiple of four. The exception to this is a year at the beginning of a century (for example, 1900 or 2000), where the year must be divisible by 400 to be a leap year.\\n\\nLook at the examples, and if you need help, look at the resources panel.\\n\\n### Examples\\n```\\nleap_year(1990) ➞ False\\n\\nleap_year(1924) ➞ True\\n\\nleap_year(2021) ➞ False\\n```\\n\\n### Notes\\n- Do not overthink this challenge.\\n- You can solve the problem with a few lines of code.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(leap_year(1850), False)\\nTest.assert_equals(leap_year(1565), False)\\nTest.assert_equals(leap_year(1920), True)\\nTest.assert_equals(leap_year(1924), True)\\nTest.assert_equals(leap_year(1928), True)\\nTest.assert_equals(leap_year(1940), True)\\nTest.assert_equals(leap_year(2021), False)\\nTest.assert_equals(leap_year(1900), False)\\nTest.assert_equals(leap_year(2000), True)\",\"language\":\"python3\",\"quality\":4.192592592592592,\"stats\":{\"completed\":{\"ratings\":[0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,2,0,2,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,2,0,2,1,0,0,0,1,0,1,1,1,0,1,1,2,0,2,0,0,1,0,0,0,0,2,2,2,0,0,0,0,1,1,0,0,1,0,0,0,0,1,0,2,0,3,1,0,0,1,0,1,0,0,1,0,0,0,0,0,1,1,2,0,1,0,1,0,0,0,1,0,0,5,0,0,1,0,0,0,1,0,0,0,0,0,2,2,0,0,1,0,0,1,0,0,0,1,0,0,0,2,1,0,0,0,1,2,1,0,1,0,0,3,0,1,0,2,0,0,1,0,0,1,0,0,0,0,2,0,2,0,2,1,0,1,2,1,3,0,0,0,0,0,1,1,0,5,0,0,0,1,0,1,0,0,0,1,0,3,1,0,2,0,2,0,1,1,0,0,2,0,0,1,1,0,1,1,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,2,1,0,0],\"quality\":[5,5,2,3,4,3,2,4,1,5,3,3,5,5,4,2,5,5,1,3,3,5,1,5,5,5,3,2,4,5,1,5,5,4,2,4,5,4,1,4,5,5,5,5,5,3,2,5,1,5,2,5,3,4,5,1,1,2,3,5,5,5,4,5,5,5,5,5,2,4,5,5,5,5,5,5,5,3,5,5,5,5,5,3,5,5,4,5,5,5,5,5,5,4,4,4,1,5,5,5,5,5,5,4,5,4,5,5,4,5,5,5,5,5,5,5,5,5,5,5,4,4,5,3,5,5,5,5,5,5,5,5,5,5,5],\"rators\":[\"pPpmP7xeJzGgK362R\",\"srJ34BaybkQh3qRkM\",\"RhWecL96F9KJgrFwn\",\"qsPfT8tCwLXH8of8N\",\"xT6r6PnWFcmPHWEB4\",\"7dQYiDeTcMztbGyso\",\"Yp7uvStL97cC9fKkY\",\"EZNT8B7yQnnZmuwCf\",\"jcPZ5ySXseCB7Ec3x\",\"PAzNgJF54C2mYPkR9\",\"SJWpx2DXcdYdbBHtt\",\"iwkCYEMXjr85pWN4M\",\"BwH2EMZahMqaAJYhD\",\"J3upzLHuEwXH7Z2hx\",\"DEDniTrstQYGounXT\",\"a2Kmh6ekWqQQooHiQ\",\"HPmKoBQN5hmaY8HsQ\",\"iS5BrkGLzJyPK7nKt\",\"wRttWTM59y8m5mx7x\",\"a7XinXXYySD36tMEF\",\"eYfPWvZwnJQkHbSTK\",\"fTNQmMvTZhhiGBCMe\",\"2vEjHc2Ptk5TBcbvj\",\"mKJuoa2SZSDNhvhk9\",\"Ds7L5bksw2QRHjrKL\",\"ne7tHFEk4C8dvj82n\",\"mkqCyAnWpbgMbBZDo\",\"LCuvvWMwiGuqTwNRi\",\"QRv96jmNaYsWkxQEG\",\"8u5tJgsYpMbP6GPAA\",\"pt4hCmgAeLTjaS7x2\",\"PXAcsKkssS2yLyDv2\",\"3v48ZfLeCm8ZC9DE2\",\"ZJxaiScuWaHdgBiSW\",\"DnW5D2A6ziTRCo7W4\",\"5HCu9Ydd86QgHDRNP\",\"kJ2LLRQFQQukY5c3e\",\"6QHXQkQAcXMJ7C2kK\",\"ATj3M5dirbz75pvyM\",\"6CPiTGNCsym8Qwn9h\",\"foytX6kH9wiSYqLtT\",\"RL4Ra7BXHLzw3x2n2\",\"t5owj23yWu97rAtb9\",\"AZjg4whADfR8ns6Lv\",\"RAbGGd3B92ktwhgjk\",\"napFd7NkCQQXgF2MT\",\"X6DomvjqMuCLGYpc5\",\"tc343mwcc6eeBX475\",\"s2Y76rR2h2fPKibsK\",\"ZmqcgZaXJZwLBZFop\",\"8EJ4j2fcfjTJ7Zrzu\",\"RQ7ozZseGh3fHsN9q\",\"FEYpu9RWysAgW3XnP\",\"Z8Tq9G3Q6egC6xDoM\",\"SvvAsengDRK6nDoxb\",\"EJ5ruYrqiCt6sPDhB\",\"XD5nmvKQchKezPXhy\",\"s6EwtTFWcAPNkRcNC\",\"peCvTbjQBgdWo53Wv\",\"9qoWqLcHGiDX429rE\",\"F6GsF4gLfNNd6di6x\",\"yod5YhKtPqw2GfG9B\",\"zgoEhAyhrjnsSLPGw\",\"kEtudm55X7YaQ7uQ9\",\"BJp2WkwLWGHHB5oQW\",\"sdxjMFRaQQono5GDH\",\"kkeaYzoybv9cu32za\",\"6HfZLDr55N8DzGzcr\",\"JZQyDRhYyEti528yy\",\"YKvJSJy4yjNe2EbRN\",\"Q6gEE9dG8ERy2Xu3c\",\"y3P5gfdzz3fgimjtS\",\"gJYuGdkXEWWmGRLzu\",\"Tz6J73FvF3XRXiiKf\",\"nm8FxsS72ynhid9XW\",\"ixtzJaJ6whrtuA8Ds\",\"DkeEd2uhXypnPDnNT\",\"w3QDkmjZj2dAFDsjq\",\"wjc4iejpErBhxWwHo\",\"kBTK8xd7FQNKfXrTt\",\"PPhq9DcoWd4auHM4s\",\"C5fDGFphbqipEZmYn\",\"ghMkPtdFCpM6w8nax\",\"r3xRQRwbxYiGj7x3y\",\"kHxdpQJKHgB7vaPXy\",\"PC3pLs36zNzpRDSuE\",\"XpAh9Se5t6tyLhiQT\",\"sX9GZp3fYyQLrBKMJ\",\"56PaT6pC3TbwsgnBC\",\"3cF6NXq3ZEwdkgSjb\",\"97Zi53yY2PuP8gmyK\",\"ouFGrJ7QXoMPcYLhE\",\"eo8iYKYDSv3auyWDG\",\"DTyNcDkiScCjgJt28\",\"m7hHWJrBub7ueaokh\",\"YcCLwitFMAEJSnxAW\",\"eMuCpJ2spXWkJjWNz\",\"njf8HbrXENFkJYyzF\",\"J5T8gZqiZXFuFDTQ7\",\"AFfw7cGg83uYk2Miy\",\"3BNRZSW8kDT8seand\",\"p8qqFdJ3FSk5x9z3G\",\"uvLimfW9x3bCp7huQ\",\"Jqk2uJZZxEv5wZFze\",\"4oJg4noyTi6b8J8A4\",\"yjtdwc2AC4jA2RWtn\",\"cR3ibTMxLyEdDFCHY\",\"6gHaCTMvjCk5ggBFm\",\"oBcs8GLX2ZFLXQy8y\",\"4ynjtEwhygjbmvv8S\",\"gb9rvGus2Jv7bjZSs\",\"gjiu8kLnHYxe4HoBN\",\"5xgPz88cfDf8GJQ58\",\"rfyEkETeoS96QNH4e\",\"buX4mCQhtXCfBjeno\",\"pwWtbXEjzuvrhEGwt\",\"zC8WrPp5BC6c2exrW\",\"Q7Yxda7dqKeYPs2Db\",\"DPi9QGLctq2y76KuE\",\"2MjzJ7yxh3eT3xbng\",\"Dwpiei4miJi7ry8W4\",\"N2wnZXkhDH86mgjQ8\",\"i5iePG5GqhJJ8HEoB\",\"kJJENbYrcwG3JjYkK\",\"PweZwtXTDkEwxZXQ4\",\"5Ti9ZK75zbT9PoQLZ\",\"7q8oBsCHwn48Ppnrq\",\"GdKtjPh8TcfmJuduv\",\"rgmhomEQqsnngdSJZ\",\"zd9FLSzsGz3evKafy\",\"Wb2GBDdLTZkRjBNNa\",\"szQg8dxKNNre3v3Jk\",\"s5M5RvgqR9BhB9JoC\",\"2QGRoQn2dRq3scu7k\",\"59BCjgcayeLttJkSL\",\"6LbPw9yW6HHDfn8B8\",\"j7ebNFtte6fSkMWjj\",\"fdyejapW3NWN7utPX\",\"8JyqsSbN2FJXPr3cw\",\"Cg3LKtEAJpsrdWroG\",\"CHvzhtXnv8HTbPQ56\",\"8teSHp77vHhhvJWiS\",\"iHENrpKJoosvcHNie\",\"R6aLATFEGvSJ9sbp6\",\"oaJbwGAbtpgYhMEgd\",\"kjvgTyRFyKHv44DcH\",\"SzqC9HAScghWkuesF\",\"qAby4AWXmTNeusvg3\",\"q6QsMYNMpPNtmyTeW\",\"DfHHpvnubuFmeNky9\",\"DFpZcskPncmo7fuzR\",\"KEmTti9Tza8A2FLQW\",\"7Z9KdHmzkoF3TQC8s\",\"YjAKCBpD94Qtaf2iu\",\"R646K7Lr4tPPuyLor\",\"NrRa4TS6uZR9xuXRt\",\"Nb6LYPoQP6KJZt8mz\",\"C5h42RTzbdrpPfeZo\",\"RKekpoGzLRAfjkG7D\",\"eKvCaeEv9YY5KGTGm\",\"ZLFXbWKatzAEm3kwA\",\"iojEnnY9FsMfYzp6f\",\"cuhyJF4RPN6zYbRyK\",\"JKbEBybAsiKrmcqof\",\"7gsyqgMhbByy34TQB\",\"YfJoYSimdDn53JfxN\",\"NP2RxM3eBd3drnDwP\",\"MKT7khMBGXzA22ykf\",\"tfH7rS7iQQPooq8CS\",\"SgPjF69J25jT3dn4X\",\"4TmgHkn5vqyHK3sYC\",\"sbJcFfQjQ59Wfg4Cd\",\"mJXSJntigs8bvFjwk\",\"Zk7zYsonf4TQ6d27R\",\"GC9LB7vyQwSrQXoqt\",\"sKfrD9gjCDHuqLzSk\",\"sbme4fRJjjBjYXRbY\",\"SNjYcnXgeCMEdoSRs\",\"4iocshxRuzitdpEJz\",\"wbqfdWhKm9HbSk9s4\",\"NYyhWY7soeTZ6ymd5\",\"8f2GuLuAy3nb6KFfY\",\"66a9xX73nmTEuKs9k\",\"mfsaETo7uA4x5vqLD\",\"BRDPX7mH5kdaQiQYS\",\"hSrFWemiugfHeL9Fm\",\"9pzFiFK3ANLjQfnr2\",\"tAF9Gf6PiGogbZuWs\",\"H9KZi2cjt4FwH7qog\",\"mxX4rH5ELYkdZ2Mbw\",\"3SgSNoAB3sxaYeT3w\",\"AXcnPX68zdMiLNSmu\",\"WihjZ5iusPAPKcsr5\",\"Qp3LB3TcLgoiJSFCc\",\"93ADqsBQnwTEosjbq\",\"XrqNzJ2FRG8HnGiR6\",\"Wpn95NqWxncQrwNgz\",\"ZpLEmGnaRkQxf8Hfi\",\"XbxHXmh5ZmRN2gw3K\",\"utyt9o5BYPWRbXf2X\",\"a777e8chPvJkY3tKa\",\"iBHx7eL6anoBnF7yQ\",\"ceTwQT7sjFfCMpYAe\",\"RTER5uJdW4khkiNbY\",\"9Gf6g4fuKc3uou9w2\",\"dj5AyG5fWP8FdsSmZ\",\"8PwfYqoDQFThzNtvf\",\"wJCoBWQJrpEtFvb2P\",\"FiaTpm7ehfDv43wSG\",\"YZL9ec49hQdqcwu2j\",\"9Ly8afdtofp8DXzrt\",\"FgMe2gzbxog9WzaRr\",\"M2gFMJkocQSY6bsFR\",\"7DxvBMbdJEbx7KR2c\",\"TiDFmxf3QEpbfXi4f\",\"dzS6WBTMHyFEag6Fp\",\"Fk9kLwoG4Brf4KsKf\",\"KEnMZpXExW66FkuQQ\",\"9NcZ23yufhtou68dT\",\"ZQ2MwAX67CTEdpadS\",\"NzbRqGWspQnWMoDrF\",\"KypQdzThzogKXwkXE\",\"5PaQgfQznXjaF9e6F\",\"FxbTzThBiTnRzfirA\",\"dqwatKFAeGpjmf5dm\",\"Gt7aLxox2mGfhWspW\",\"T6Rm8mREPMZSftzrC\",\"aHY44nrovcknWN63K\",\"Ju76wMJs7kL7o6Ybt\",\"bur3yQ8s34zqKGEro\",\"MMrsg6HXaBN7Whg6q\",\"a2PQbkxH2NhSWQ4SL\",\"kqYkfcZMkp5u2EdXZ\",\"u5jLXaWAKo7K4JvTR\",\"rgvAJFwfCeYoYnFTK\",\"829BhxnwhhyHT9fRQ\",\"sHjfbGQGLHE6JR6qu\",\"di2hhADLx59Bj4ewM\",\"JiSpvq6C7azQEmENc\",\"YRAzEBJoLvSaiPtYx\",\"cfDt8NAsAGFy4w3fY\",\"u5u2YpHXiNgzDNJdX\",\"qxYvoTo6TzqcYSggt\",\"aEm3Wvj2rFYRL8Lrb\",\"fEKYxcHjk7rvpjSRJ\",\"ir8tstiPABmi4JHDt\",\"u94AhAdwabXgtbyLm\",\"j22fPdGZvaryte8j5\",\"vhmyKoH2TxNHKuFzF\",\"AasGs8AeX9Lcb9xJn\",\"z7FcXbC7SkhPejDrZ\",\"sejruFKbRzhAjgwcJ\",\"FRN2W8RYpJ6GPhgRy\",\"rrSC943cCKNG48sH4\",\"FGEeCTorXbX3WvjFW\",\"PTkubfiQTZSZ92vmu\",\"7txFzDQ43vJ7qCY88\",\"ecytnKJxjCPk8Kbif\",\"bM2eBtpFQCv8632C9\",\"9d3kzEdSSkpcmq77A\",\"5Dd7XwALvvMMwS4Fb\",\"jWrysbS3AqiQN8rmo\",\"ZqjP4M6dzu32To33K\",\"FvxH6PLYcFNR5Ao2Q\",\"J23RcmzbdtBbPCTjT\",\"xsDyJstYoBZRS8pJH\",\"M8dQuMrEpP8Hc3tHN\",\"8yEfp5T7XKk6qZpLT\",\"BpwWfGLHpPyujFaFF\",\"DqyvuCMKFzmKCegmw\",\"bSeEB8ypsxnQxX2SJ\",\"hRfdHT8bWztZuCqzi\",\"DTDokqAqTpqCsqPMe\",\"fX8cDn2yK5tGp4CXh\",\"FtuianggdMvAxG43T\",\"D8KzuTx94uT5LMFiZ\",\"HqmxnQJM66Y57twhn\",\"Aktq8nYaqfu57u8p7\",\"Afnps7TJQuS9sipMb\",\"rHDq28dQa3QZgRYrn\",\"TCvpT4EPb8qNssNB7\",\"kyDSPSvSXJ5BiNvbm\",\"43BqoGWAuN6kcjcGp\",\"BrTDhPJcACL2bsrpJ\",\"jPJrzAMTCnhRWD7C7\",\"AQSqD9oNv2uPfxZCR\",\"C7R4pi5F5xpN7CaYY\",\"PTDFuxAzou7W6asWt\",\"pQwhNKiCne4gEZgcn\",\"5f6oSeq4r5WTXLdCQ\",\"5jC6kt3SXoABZBwsY\",\"JS3hNM3XXkxPdg3yk\",\"auJDNzuTP78TXvYMv\",\"FocLpCB2WEiK2gGni\",\"zBk2cwJ9SLAhFuM3K\",\"iYXdNw7tKcgA3QwBX\",\"5CsHudxuDESxmjTPW\",\"54BFnXEjY3FuRNYpN\",\"3LiSLdtN58n46NEqg\",\"XpKKoJ2KDL2gcJiXb\",\"LQxof8pGabGuWP7Gn\",\"Nv8HhfMn2Rddq6Bei\",\"EfxwqhYdapX3dMQC2\",\"PBnvAuiKXwjqjKG33\",\"gKnWjDjwrJh7MK2df\",\"sMcFMPkMJC4Kh6ymj\",\"Mtbjs2R65YnswKuw2\",\"PmRyaLmhAF4MMLBtM\",\"5nbHH4eApn6So9h2n\",\"crEnTT8upDBFiKTZp\",\"TFRbA7nkidNkBB5uu\",\"gpGXTvjS2HrY9Skq5\",\"b7yQWr6eJFxYTmt3j\",\"9HPB28hBoTnZnspQE\",\"d9LBRxvADNBB5QJMB\",\"dYPkStFnLvAMsHSzZ\",\"PwZPGSrYmD8nq7fmv\",\"RQwuHHy4rBgaQCLte\",\"8ynPy35NQFsnh4WqC\",\"gbGzZz5Yq5hT357v8\",\"DZvz6WY5bQEneYzvv\",\"Dq24MSpogRmq6L4hX\",\"wYR7GAr2STaYrFabh\",\"9LrF5o2TK2iE8BZJh\",\"EM54GFtAyAEdmqxNe\",\"fGvJRtjbJFJJZLCnW\",\"B4y8aoyXJtskYPFEL\",\"YZsZjfvd3PnLhDJrR\",\"H469XosMjfNu8Fop7\",\"qaPjAANdnxFnWfj5d\",\"5QN8R22z43SrwoHDz\",\"yAouD3PxzED8a4gap\",\"kgCHJaiLicD9BwgL6\",\"5LDvZHCDJqePeBrCg\",\"xjyixzXzqqqTfJARd\",\"rF97GDLqCgynr7BaD\",\"afvP29FhRou2bTaav\",\"Ne8mK9DDHG8TRkoxG\",\"N2sNut8aET59YNhAy\",\"vAbK8sCfKyFC78HYg\",\"RLgTyu6hj6Fw6FGvi\",\"mw9464S5dnenqzvpm\",\"5H6WybGSZcsxZnLAW\",\"Zyg9xAm6EuH4u3Lo5\",\"CdXigydGTBLgA577m\",\"fMp8sPsKSECdfgF9j\",\"QN4FPwhiak7Pf8kn6\",\"E45zy9qvm9DeJhDWL\",\"PKu9i6fmR67WGCgad\",\"acENs2fSF9d7hkTZx\",\"FT2wBacm3JxrYmZDW\",\"rQA9SE8nuwFueaHsR\",\"AwXQLqnTYzcCQrnqQ\",\"Si3HYCLMe8PM47rRt\",\"iBjwTeXx4KiWffy64\",\"EE6qCDCRphjXXdE3n\",\"F8dA24AosSC8XXb7D\",\"dCHJHgKdWNMGaAA7W\",\"4akHBgnDEDj3Rkv5n\",\"QWjsXnLaJ7xfL3Amq\",\"9kSvkZZMLXeH97aT7\",\"XYwCvWPkjJu4Zn5Qu\",\"Wi4H6ayKsNDWWQCG5\",\"mdRQaGT98ycMt87S2\",\"jWbd7SYDzLPjc9EDh\",\"PJu3WcTpfRrvHfQiS\",\"K6S8HCswXg68EWHmo\",\"BgZcBs3KWeYCRKChr\",\"CTW3MRyc4wNkcjGZQ\",\"7HAL7H6NJmc4NC8Q5\"],\"total\":393},\"flags\":0},\"summary\":\"Write a function that returns True if a year is a leap, otherwise return False.\\n\\nA year is a \\\"leap year\\\" if it lasts 366 days, instead of 365 in a typical year. That extra day is added to the end of the shortest month, creating February 29.\\n\\nA leap year occurs every four years, and will take place if the year is a multiple of four. The exception to this is a y\",\"tags\":[\"math\",\"algebra\",\"conditions\",\"validation\"],\"timestamp\":{\"$date\":1610763851287},\"title\":\"Leap Year Function ⌚\",\"family\":[{\"_id\":\"uiukKq8SDxjWBHb8x\",\"language\":\"cpp\"},{\"_id\":\"wBYQnCytRFNxsL4Gr\",\"language\":\"javascript\"},{\"_id\":\"RQCDZGzoqRExXWJTe\",\"language\":\"php\"},{\"_id\":\"6YN2ww3B4cQZ6rTmN\",\"language\":\"python3\"},{\"_id\":\"oJu5YheSAjvCySQvn\",\"language\":\"ruby\"},{\"_id\":\"SbGMC3zFiy2pfbvQm\",\"language\":\"swift\"}]}}"]