a["{\"msg\":\"result\",\"id\":\"1881\",\"result\":{\"_id\":\"yPzfgnDsPWXwH7dMq\",\"archived\":false,\"author\":\"kochug\",\"authorId\":\"vQEmjTRgmdGNYB7yk\",\"code\":\"class Pagination:\\n\\n\\tdef __init__(self, items=[], pageSize=10):\\n\\t\\tself.items = items\\n\\t\\tself.pageSize = pageSize\\n\\t\\tself.totalPages = 0\\n\\t\\tself.currentPage = 0\\n\\t\\t\\n\\tdef getItems(self):\\n\\t\\t\\n\\tdef getPageSize(self):\\n\\t\\t\\n\\tdef getCurrentPage(self):\\n  \\t\\n\\t# Goes to the previous page\\n\\tdef prevPage():\\n\\t\\t\\n\\t# Goes to the next page\\n\\tdef nextPage():\\n\\t\\t\\n  # Goes to the first page\\n\\tdef firstPage():\\n\\t\\t\\n  # Goes to the last page\\n\\tdef lastPage():\\n\\t\\t\\n  # Goes to a page determined by the `page` argument\\n\\tdef goToPage(page):\\n\\t\\t\\n  # Returns the currently visible items as an array\\n\\tdef getVisibleItems():\\n\\t\\t\",\"difficulty\":2.5894736842105264,\"familyId\":\"GLHh3qDt3itaWBkip\",\"instructions\":\"Your task is to create a `class` to handle paginated content in a website. A pagination is used to divide long lists of content in a series of pages.\\n\\n![Example](https://s3.amazonaws.com/edabit-challenges/persons_paginated.png \\\"Pagination\\\")\\n\\nThe pagination `class` will accept 2 parameters:\\n\\n1. **items** (default: `[]`): A `list` of contents to paginate.\\n\\n2. **pageSize** (default: `10`): The amount of items to show in each page.\\n\\nSo for example we could initialize our pagination like this:\\n```\\nalphabetList = \\\"abcdefghijklmnopqrstuvwxyz\\\".split('')\\n\\np = Pagination(alphabetList, 4)\\n```\\n\\nAnd then use the method `getVisibleItems` to show the contents of the paginated list.\\n\\n```\\np.getVisibleItems() # [\\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"d\\\"]\\n```\\n\\nYou will have to implement various methods to go through the pages such as:\\n- `prevPage`\\n- `nextPage`\\n- `firstPage`\\n- `lastPage`\\n- `goToPage`\\n\\nHere's a continuation of the example above using `nextPage` and `lastPage`:\\n\\n```\\np.nextPage()\\n\\np.getVisibleItems()\\n# [\\\"e\\\", \\\"f\\\", \\\"g\\\", \\\"h\\\"]\\n\\np.lastPage()\\n\\np.getVisibleItems()\\n# [\\\"y\\\", \\\"z\\\"]\\n```\\n\\n### Notes\\n- The second argument (`pageSize`) could be a `float`, in that case just convert it to an `int` (this is also the case for the `goToPage` method)\\n- The methods used to change page should be chainable, so you can call them one after the other like this: `p.nextPage().nextPage()`\\n- Please set the `p.totalPages` and `p.currentPage` attributes to the appropriate number as there cannot be a page 0.\\n- If a page is outside of the `totalPages` attribute, then the goToPage method should go to the closest page to the number provided (e.g. there are only 5 total pages, but `p.goToPage(10)` is given: the `p.currentPage` should be set to 5; if 0 or a negative number is given, `p.currentPage` should be set to 1).\\n- Please remove the comments I provided before publishing your solution.\",\"lab\":\"defaultPagination = Pagination()\\nTest.assert_equals(defaultPagination.getPageSize(), 10)\\nTest.assert_equals(defaultPagination.getItems(), [])\\n\\np1 = Pagination([None]*69, 5)\\nTest.assert_equals(p1.nextPage().getCurrentPage(), 2)\\nTest.assert_equals(p1.lastPage().getCurrentPage(), 14)\\nTest.assert_equals(p1.nextPage().getCurrentPage(), 14)\\nTest.assert_equals(p1.prevPage().getCurrentPage(), 13)\\nTest.assert_equals(p1.firstPage().getCurrentPage(), 1)\\nTest.assert_equals(p1.prevPage().getCurrentPage(), 1)\\nTest.assert_equals(p1.goToPage( 99).getCurrentPage(), 14)\\nTest.assert_equals(p1.goToPage(  4).getCurrentPage(), 4)\\nTest.assert_equals(p1.goToPage(6.5).getCurrentPage(), 6)\\nTest.assert_equals(p1.goToPage(-99).getCurrentPage(), 1)\\n\\nids = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\\np2 = Pagination(ids, 5)\\nTest.assert_equals(p2.getVisibleItems(), [0, 1, 2, 3, 4])\\nTest.assert_equals(p2.nextPage().getVisibleItems(), [5, 6, 7, 8, 9])\\nTest.assert_equals(p2.nextPage().getVisibleItems(), [10])\",\"language\":\"python3\",\"summary\":\"Your task is to create a class to handle paginated content in a website. A pagination is used to divide long lists of content in a series of pages.\\n\\nExample\\n\\nThe pagination class will accept 2 parameters:\\n\\nitems (default: []): A list of contents to paginate.\\n\\npageSize (default: 10): The amount of items to show in each page.\\n\\nSo for example we could initialize\",\"tags\":[\"math\",\"objects\",\"numbers\",\"classes\"],\"timestamp\":{\"$date\":1524393806631},\"title\":\"Pagination Class with OOP\",\"stats\":{\"completed\":{\"total\":231,\"ratings\":[1,1,1,1,1,3,2,1,0,1,3,3,3,3,3,2,3,1,2,2,2,4,3,2,2,2,3,1,3,2,3,4,3,5,3,2,3,3,2,2,4,3,3,2,2,3,2,0,3,1,2,3,4,2,2,2,3,1,3,2,3,3,3,3,2,3,3,3,1,3,3,3,2,5,4,2,2,4,3,5,3,2,4,2,2,4,2,4,3,3,2,5,3,4,2,2,2,3,4,2,2,4,3,3,3,3,4,2,3,1,3,3,4,4,2,2,3,4,2,3,3,2,1,2,4,3,3,3,1,1,1,4,0,2,3,3,1,4,4,2,4,2,2,3,5,3,3,1,2,2,2,1,2,3,0,2,5,2,2,2,3,3,0,3,4,2,2,3,1,3,5,4,3,1,3,0,3,3,3,3,0,4,3,4,3,4,4,4,2,3],\"rators\":[\"vQEmjTRgmdGNYB7yk\",\"HK3RW4kr7acFSAyL4\",\"2apJ8YMTygw3TjPfc\",\"XE7cMjLeXgH7sF93D\",\"iEMnJaXXfa6dzdQzb\",\"2PGyaiL22k4dfMGJf\",\"KHLJJM4grqF6xmo5t\",\"LfR9Bopm57BMNNnkp\",\"ewyPo746vdNES9LwS\",\"GRZzKCbeb4xKHFCrZ\",\"tuyDaJzFy78jxvhCY\",\"mqXfzC24CdThpCaGd\",\"m2iiZZHTpzHcEKJMn\",\"mgJoduE8pStdjNmPD\",\"pdcaC4fEtsubBz4Wo\",\"5LoHDiuaWur8GNgEQ\",\"3mtD7DxrAgDMcxWKt\",\"QyYmR6GqGSiw8KXYc\",\"jDoFYBX4iQiTXFEdf\",\"axnLNbddHAGKR8dtF\",\"6fJpRpAgiWD5zX9qB\",\"M8jrv2FfpMQp9Qzpx\",\"xWN2EDdMDnG89QXjm\",\"RsX6W2ddWM8ajHzss\",\"7LWPxYbe6HKibjNd9\",\"zgoEhAyhrjnsSLPGw\",\"6W2GSzrYjMD9ANBFY\",\"mGmoXwXiopnnnqYdh\",\"8JyqsSbN2FJXPr3cw\",\"yZvzB3qFb8pkHy4dg\",\"gb9rvGus2Jv7bjZSs\",\"yrmiF5oKPR5rQYCRJ\",\"T3ZAuoMrJjvZwN55B\",\"tAF9Gf6PiGogbZuWs\",\"B4pnNt3Se9GA4oy6W\",\"c33RojPFt49fwc9Tz\",\"HqmxnQJM66Y57twhn\",\"d2rkaKAaLFYsyTLQq\",\"C4QntmkYtB89GNtpd\",\"2fxapKr8XGdNeaKi2\",\"kfG9deramoXyqrP5L\",\"LQhEi8yAC8WzEYY8h\",\"DwetpbChQM4r6Gwah\",\"ab7BsQuhDo3QgE6bh\",\"DryNRN98Dj24BpgrL\",\"3ECpdeExhBmkYXtba\",\"t3wwRMtYdLYBwWR4J\",\"s5M5RvgqR9BhB9JoC\",\"Jqk2uJZZxEv5wZFze\",\"aRqQ42J5zqCmBNd8w\",\"RFHHHZ4ET4vpWijRe\",\"4fctAnxyFRB8stPRQ\",\"Yp7uvStL97cC9fKkY\",\"Ezmu66ftDjQcApWeZ\",\"8YjNtvtDwmcXGv7wN\",\"AasGs8AeX9Lcb9xJn\",\"uw8E83imJYpQiiPpP\",\"A5g5PhdQpmF7ohwsC\",\"Ecy2fPuyYDLKmRkcg\",\"YRdu63HNTKd6YmWpd\",\"BXPLRXsvSyA2xZBLJ\",\"TyEeGAgsF7tG3fubX\",\"wq8LFjWGvazMzGkCD\",\"8PwfYqoDQFThzNtvf\",\"KRmxvA4mWgfKvHmYN\",\"mCyBvGwKAWPTdBsMz\",\"jd9GKhQqSdkeMeCTM\",\"WtFQigNmNZ5EREPzo\",\"aEm3Wvj2rFYRL8Lrb\",\"wT5gGgvjKc5wz59AQ\",\"fznzd3qnvtbFkkizz\",\"n7won7uQNyJdrtrY6\",\"KXYHpCQvmTtpbGXYg\",\"qukQkxmedze5KqfBu\",\"sz8ufn9i8zeiGWpAy\",\"gJYuGdkXEWWmGRLzu\",\"nzKTXzTqPT4RDTHvb\",\"3Zceb8GudqAG3onG3\",\"tqD4R4zQx5TpdeEYq\",\"KpHrC7WPEojnzgEtz\",\"upBDcaAS5yLWj4pGm\",\"bLpgu8xTdpDPFSAsM\",\"ZNnsMeNkdDhHjSrZb\",\"Phd2FdPjo9BhBfvKh\",\"c7iE4nrZpXfLczpvv\",\"yv7c4H2jimSKHEjtG\",\"LDtBRPtAiDgrhjxR5\",\"n2BRY9X8899dcG8Bw\",\"MkErvo2t8LvQBPNrt\",\"bJaPCBx63YxdJAuTS\",\"uznjMqKo6mzk5fsJh\",\"5R4JAv3Z5xhTG62As\",\"AGMQqooexrFXgMnET\",\"tz3nSGtp8A6zkiDxw\",\"zQ8ioTQfJP8zjMnqg\",\"KouYhiYSyoKMRrjhR\",\"3pxHTZBsv7MKzFG6Y\",\"JojxPJZXAGgZ84LAg\",\"rneLEF52nLZxZCYp6\",\"uzwYcrm8PvfHZR7YF\",\"snKerK6Kiak48vy3w\",\"dKtYzJHAswturm7Fe\",\"DDs2FsPcpEbvKqr3p\",\"yYxPzFqBgtQ9fsyHM\",\"R4SjTgDnpigJYDLyL\",\"JQ5uoxA4WZgN6HyJk\",\"bDpmwo4vm9jHeZAPk\",\"NaPpyhnXZ2XLtug83\",\"DpqiRAm2yo3W2x4HX\",\"LjoNTyGEMfBpMHHus\",\"sfoAF6eygyfp6MWx3\",\"asAjc8npPT8WcozjN\",\"Z4M3NAa4TXquMNkHe\",\"eg5iwxQWCEYnktrcm\",\"5ZR5C8Hh44gtGfMou\",\"cnmj8mAbLcMnKaqLS\",\"MK8HigdFigfJzHhyo\",\"pPtmnJ7q9QchoG2Jq\",\"xn7uGNKeAwPEkP9oA\",\"5XWojpw7fTFDs38mD\",\"nMDMMPWxws2kTgGKk\",\"CkjEKj3n9GYn5ATxL\",\"yWwASsv3iZzfQTbzx\",\"sLteh6cLh6gLKB2mQ\",\"SGhPxX5bHGL8zZqtt\",\"p4mFrwjSNysqFyxyP\",\"dzS6WBTMHyFEag6Fp\",\"WwMjW4MJRuNFExoPc\",\"eMuCpJ2spXWkJjWNz\",\"b8oirLMGe6LLXkqqS\",\"DCMKC7fnTWgyBj47Y\",\"kQCnJdq4psgrpvphr\",\"ZJQW3bL2KzxJcdEoc\",\"ji5f27FPz4wRRF6Ls\",\"Wv2vJnEj8ywNmARoF\",\"tXNgbxmMDqkvLc76o\",\"Nfsj4eNFDjaFa39ga\",\"4fhjJBvLBWh6QeSih\",\"SdkHakwqApntYiRWF\",\"ZmTp5yHZXcQSzRxja\",\"uJvcvnJDboT6hARXq\",\"foytX6kH9wiSYqLtT\",\"PFmCJw9aHadXJFPrX\",\"XkJ9G89xpZiTj58Eq\",\"nZs57bxjesuEdNGAj\",\"tpxMgkGSHwBjS95Ta\",\"aLxRYMdDSeCixE9pz\",\"d8qtzoLB264iP8tdY\",\"yjtdwc2AC4jA2RWtn\",\"oZiGwL535nJ5ZMJr7\",\"wFws9y3mXvC4vL9Q2\",\"TFqRD3zervh8PT8op\",\"2QziknsznNeMPRh3g\",\"jSaW4kdeAAGoLxcuP\",\"Xk2g4CNFAnYcvxiSr\",\"5S9nX4rKsnCcnv4Cz\",\"Em6LPTYQ2iLxPRfB2\",\"CEd9tLdXeDeNHSzys\",\"h4x2jaMdj5aQZbW5g\",\"zm9yBz3sRm9jdbyhK\",\"htCCT2CY3eSikknSF\",\"XoTzZDR6qDYd8PAZB\",\"nj2tbGg6WZkQaARLd\",\"MM3v77RDEPmCDBvE9\",\"8cKm6EDAjrNbL5pWF\",\"jopWJWdRStNBMGNXs\",\"geJHa8mvy64irqsgF\",\"9i2XnAtnTMpLkGyvv\",\"jiT28cugqR6sLujEp\",\"r23nqpnuxRqQrRksA\",\"S3iFQ3yPcvH9wEzvF\",\"zaNb37qavQQm6LFqe\",\"YRM5Wr3P4g7AujtiM\",\"ncFevijR38P94LBw9\",\"qLysFYFYKWrjuCKrK\",\"Lg4t6SEWgtYz4u7Cj\",\"8sNv5PTHa7XQ8bNqR\",\"qPpQfR5KyDb5Y3EFf\",\"8KNtgAcNpyT2f6bTT\",\"X3Temjka6hN4q77b9\",\"StNu7DPyTgEStZsMY\",\"J23RcmzbdtBbPCTjT\",\"CLypXaZksY99mpRCm\",\"4rk7szWxbShptuiCL\",\"hwa6rDC4yJfWFEiTt\",\"kWwCmmWHqYDkNgsxa\",\"4RsakkyRXyYGwFxEa\",\"ngARxyodB845RvKoQ\",\"gXTAie79kiw28tx5u\",\"ZYT9LjgocbP4hzQK5\",\"FkiiHBppHZsLAvJaf\",\"ScaZG69jog5kcqGtQ\",\"Hhvy3EGqWBXt3nFPA\",\"hkiz2Nv927cYGrA86\",\"jhpjLPkSo6yjCPNwe\",\"QRv96jmNaYsWkxQEG\",\"2PufnQcsHsfymufX3\",\"iojEnnY9FsMfYzp6f\",\"W5d8SJGpWNwvgCztM\",\"8zuvtkqKBJqkhiEr9\",\"4d27sbswEeGHCvN2Q\",\"c2q7mY39z5JPEMCaM\",\"AQSqD9oNv2uPfxZCR\",\"ctbThYbufFCYbRK4f\",\"mzsaCBQP3e6YourDN\",\"Afnps7TJQuS9sipMb\",\"rGpPd6PvpzLaqps4g\",\"vhZgCDRqMncYjfFB9\",\"J3upzLHuEwXH7Z2hx\",\"oBcs8GLX2ZFLXQy8y\",\"H9KZi2cjt4FwH7qog\",\"qAby4AWXmTNeusvg3\",\"MpfytGFYF77emJ3cT\",\"LrcMEPYSk5Mfcrf25\",\"SFyGnexSYdfWGvMsS\",\"syRNbbPdLCGXbH2Gy\",\"GTKsdeEihE636Le9i\"],\"quality\":[5,3,1,5,5,3,5,5,5,4,5,5,3,3,5,3,5,3,2,2,3,4,3,5,5,4,2,3,2,4,5]},\"complaints\":{\"total\":0,\"reasons\":[],\"skippers\":[\"vQEmjTRgmdGNYB7yk\"]},\"instructions\":{\"score\":-12.299999999999999,\"voters\":[\"2apJ8YMTygw3TjPfc\",\"ARMcFvGNE8u93RdM4\"]},\"tests\":{\"score\":-5.15,\"voters\":[\"LfR9Bopm57BMNNnkp\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":3.774193548387097,\"family\":[{\"_id\":\"YYr4WQPJuCCiN6wLT\",\"language\":\"javascript\"},{\"_id\":\"yPzfgnDsPWXwH7dMq\",\"language\":\"python3\"}]}}"]