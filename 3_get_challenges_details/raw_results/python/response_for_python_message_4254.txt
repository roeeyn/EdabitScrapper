a["{\"msg\":\"result\",\"id\":\"845\",\"result\":{\"_id\":\"nRAxMKDgcBTDeLzPz\",\"author\":\"ades\",\"authorId\":\"sJWTa7iWeRoRtqJ8N\",\"code\":\"def circular_shift(lst1, lst2, n):\\n\\tpass\\n\\t\",\"difficulty\":1.4075235109717867,\"editorId\":\"sJWTa7iWeRoRtqJ8N\",\"familyId\":\"Fm2NKNWRGkfzyuWP4\",\"instructions\":\"Write a function that takes two lists (`lst1` and `lst2`) and an int `n`, and returns `True` if the second list equals the first list shifted by `n` positions. Otherwise, return `False`.\\n\\n### Examples\\n```\\ncircular_shift([1, 2, 3, 4], [3, 4, 1, 2], 2) ➞ True\\n\\ncircular_shift([1, 1], [1, 1], 6) ➞ True\\n\\ncircular_shift([0, 1, 2, 3, 4, 5], [3, 4, 5, 2, 1, 0], 3) ➞ False\\n```\\n\\n### Notes\\n- The two lists will have the same length.\\n- `n` can be a negative value.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(circular_shift(\\n\\t[1, 2, 3, 4],\\n\\t[3, 4, 1, 2],\\n\\t2\\n), True)\\n\\nTest.assert_equals(circular_shift(\\n\\t[1, 1],\\n\\t[1, 1],\\n\\t6\\n), True)\\n\\nTest.assert_equals(circular_shift(\\n\\t[0, 1, 2, 3, 4, 5],\\n\\t[3, 4, 5, 2, 1, 0],\\n\\t3\\n), False)\\n\\nTest.assert_equals(circular_shift(\\n\\t[0, 1, 2, 3],\\n\\t[1, 2, 3, 1],\\n\\t1\\n), False)\\n\\nTest.assert_equals(circular_shift(\\n\\tlist(range(32)),\\n\\tlist(range(32)),\\n\\t0\\n), True)\\n\\nTest.assert_equals(circular_shift(\\n\\t[1, 2, 1],\\n\\t[1, 2, 1],\\n\\t3\\n), True)\\n\\nTest.assert_equals(circular_shift(\\n\\t[5, 7, 2, 3],\\n\\t[2, 3, 5, 7],\\n\\t-2\\n), True)\\n\\nTest.assert_equals(circular_shift(\\n\\t[2, 3, 5, 7, 87],\\n\\t[2, 3, 5, 7, 87],\\n\\t-4\\n), False)\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,0,1,0,2,1,1,1,0,0,0,2,1,0,1,3,2,1,3,1,0,2,1,2,0,2,0,1,2,0,2,2,2,1,1,0,0,2,3,0,1,1,1,2,2,1,1,1,2,0,1,1,2,5,1,1,0,1,1,0,1,1,2,2,1,1,1,1,3,2,1,1,3,2,2,3,3,2,2,2,0,2,2,2,2,2,1,0,1,2,2,2,0,1,1,2,2,1,0,2,2,2,2,2,1,2,2,2,2,2,2,0,2,2,0,2,3,2,2,2,2,2,2,0,3,1,1,2,2,2,2,2,1,2,2,2,2,1,0,1,2,2,2,2,0,2,2,2,2,0,1,2,1,0,1,2,2,0,2,2,1,2,1,2,1,2,1,1,1,2,2,2,2,2,2,0,1,0,1,2,1,1,0,1,2,1,1,1,0,3,2,0,1,0,2,2,1,0,2,1,2,2,0,2,2,1,2,2,1,2,2,3,2,0,1,1,2,2,2,2,2,2,0,2,2,1,1,0,2,2,1,2,1,0,2,1,2,0,1,0,2,2,0,2,2,3,2,1,2,1,1,1,1,2,2,2,0,0,2,1,2,1,0,2,2,2,2,1,0,2,2,1,0,1,2,0,2,2,0,1,2,1,1,1,2,2,2,1,2,1,2,0,2,2,2,1,2,1,2,2,2,2,2,1,2,1,2,0,1,2,0,1,4,2,2],\"rators\":[\"sJWTa7iWeRoRtqJ8N\",\"9MTBCfwLetLYL88ur\",\"4AoQy4B5fPs2KBinr\",\"CZAXDLT2vNMrypcgw\",\"PSrcg6fy835R4c5CW\",\"AasGs8AeX9Lcb9xJn\",\"tAF9Gf6PiGogbZuWs\",\"aRqQ42J5zqCmBNd8w\",\"gb9rvGus2Jv7bjZSs\",\"ArWzhxZEjsxjGF77p\",\"qB6KSTYC6H2TQEQY6\",\"N2wnZXkhDH86mgjQ8\",\"hnyhBFWwNCz9mDfSi\",\"GEvSGXDkk7pACfYri\",\"kRFAtnGXitccJPfLa\",\"rqNgGgxAfEFbYrZNJ\",\"9Ly8afdtofp8DXzrt\",\"ALcgrkPgXfJMvE5CX\",\"3mjWeWdivedo9z4mK\",\"ukMGNti4cKTJBZqsg\",\"n2BRY9X8899dcG8Bw\",\"u5u2YpHXiNgzDNJdX\",\"kexDQBH7MhR7p4P4m\",\"X74H8PYX8XYkrGRQc\",\"u5jLXaWAKo7K4JvTR\",\"Z85ajWfZ4jDPkbvR4\",\"vLrq4dEDMM2wd68Dc\",\"sz8ufn9i8zeiGWpAy\",\"dHZqT6h4JMwk5fPC8\",\"w3A7cBWyAfukk6xEQ\",\"boMXxa5zxP6yJHTje\",\"vWgBJaEtcu3XoYuer\",\"jNvegJWCk5HCtEMbK\",\"aEm3Wvj2rFYRL8Lrb\",\"mxX4rH5ELYkdZ2Mbw\",\"2iFe3EHEH2YdhSKrs\",\"E9ttMPTkLkKG6nZrg\",\"wDMtQZjgzQPKh8g82\",\"cR3ibTMxLyEdDFCHY\",\"8LfTheFzvicameoz9\",\"2fxapKr8XGdNeaKi2\",\"8JyqsSbN2FJXPr3cw\",\"pHpGCimfadYznq5Wb\",\"Cuy7McJ5y8BkXRRk9\",\"eLkj3Zb2DqiW4AEEh\",\"4CFzv558qbGcpQwc4\",\"Yp7uvStL97cC9fKkY\",\"HQxp7NcdvF92G7bYS\",\"7tbM7oMYc5oDvD88Z\",\"C4QntmkYtB89GNtpd\",\"N7P4AnS8nzK4oupHv\",\"MKT7khMBGXzA22ykf\",\"J5T8gZqiZXFuFDTQ7\",\"v8iedwMBcGiN2PHGM\",\"2QGRoQn2dRq3scu7k\",\"gudC5KZrykfdfGD3J\",\"orFLgPDw9H5MDzmwo\",\"C9LKGu2g5hSijvDzA\",\"yZvzB3qFb8pkHy4dg\",\"Fk9kLwoG4Brf4KsKf\",\"KRSKj7ikX2ytWFmod\",\"M8dQuMrEpP8Hc3tHN\",\"NfMJuiBk6FN5Jc6ow\",\"HF28xZKSLM9wEuqNg\",\"ZNnsMeNkdDhHjSrZb\",\"9uZpgAtSuPZ7W7DL6\",\"Cc2Cgj4MWXZxsTooC\",\"uiEuENARwFpnNMfFs\",\"RosFXZYJkcRwjkaog\",\"q5a96XumccZyhQNyL\",\"5kEyLPjTLrt7z2YJZ\",\"k5mp7Hkg8w5rwiXpe\",\"CgyPq3xYuXzHsaJcp\",\"Co8eCrdMTL6BrYNyk\",\"6odm6MgDG3rKW6TX9\",\"dXMbkgQFoN37BhruB\",\"8PwfYqoDQFThzNtvf\",\"Jg8ZSRXe3NoDMCqGu\",\"8zFuk4x22NAND8aiu\",\"bMEg2eSZtsAcT7ZmJ\",\"3Zceb8GudqAG3onG3\",\"z9guJRB4sMe9mpxKv\",\"k6ip3mFoRww77xgKx\",\"M4vq8ATaS9Jg5X7iP\",\"9pzFiFK3ANLjQfnr2\",\"CRoY655aiRDBDq3uM\",\"wq8LFjWGvazMzGkCD\",\"qab4tYm6vJQcpKLfi\",\"oKkTzYNZvisJ3iB5M\",\"8BFSTCnoe2QggN64c\",\"5zBmcs43Gc7jkoTEc\",\"YRstQuthRkFeBiXug\",\"RQTa9rPQ3AboLtdzj\",\"Jqk2uJZZxEv5wZFze\",\"RmwYNt4oSLCLLd8a5\",\"aP7JkkYer28YWrPvC\",\"23oi2a3vQwhtLEbSj\",\"5JFQgt6KFihmXfHKm\",\"XRz3LpNmBFTmvotPF\",\"95J4izRMRsPR2Tnc5\",\"aXx8tRSKQw65RwBAB\",\"wZoxzQDbso9SMAPkY\",\"beKp5pyvuwxo3BMzW\",\"zb5mKgtyGDiaaotxS\",\"kaFXfLApBF5NxEus2\",\"WKsvry6M74GDrtqHQ\",\"uH4HvaiESNCeYdSyZ\",\"CEd9tLdXeDeNHSzys\",\"DEDniTrstQYGounXT\",\"xzZQDmPgjhkorhA5n\",\"HiXS9Hofvx4rnqDZz\",\"xowjbn5yEv7c93axA\",\"LXpiju6MdyDKFruZR\",\"KRmxvA4mWgfKvHmYN\",\"azQuTr5LY59adhfkx\",\"s5M5RvgqR9BhB9JoC\",\"kYWb8BwpKwunQkxeX\",\"2EpTEdXyMYe9SKQTf\",\"vt6MbZKuKZptRkwcr\",\"LmTRmhiuDidAebAsw\",\"LWCzZ8mb8gwrRNGfq\",\"2innwjWqxJHo4eRGh\",\"yKttxy9JGn5Jzwuj6\",\"kQH5b8MXJunh84Czq\",\"NsEMoXJ4nfEMtoCn8\",\"FEYpu9RWysAgW3XnP\",\"YcCLwitFMAEJSnxAW\",\"DwetpbChQM4r6Gwah\",\"6ZapS9L6t66jQCqxA\",\"k2RxDbsaJCdDju6oB\",\"LLvmxMFKX6zqHPxtx\",\"4rwxLqLs2mNZNg8NB\",\"fYXiqjFvkQZqmjgCi\",\"mDWNyaaQ9hvPCRzSd\",\"GM2X83qnuLXTHe5zA\",\"FxJxxwowtXYCaLaeD\",\"AF6LgdKhEdzwgRJom\",\"dKKMvaYoJunNPk5Wa\",\"mtRvHDpeLoSGBf8zC\",\"XrqNzJ2FRG8HnGiR6\",\"FzxTj4GuujhwpZM7y\",\"di2hhADLx59Bj4ewM\",\"aJGDB2pHde4KSwEbg\",\"ahk2qiXKJA753wAJk\",\"Ne8mK9DDHG8TRkoxG\",\"nfXGHENb5md7m355s\",\"yr822PZmmiDDenxpB\",\"a777e8chPvJkY3tKa\",\"v9KtC8YLbMWmXiW2H\",\"NG8PWBSjsM8mMhQEq\",\"nQRzZKeDKuLRf9chX\",\"2ptN2mhjFwFcHyPZd\",\"n2ck2WGuM35vbZiFz\",\"3cF6NXq3ZEwdkgSjb\",\"H4abACFDH5t8CnnyH\",\"toYJbQhARDz3RXf5W\",\"W5TajitmCyxz87zAC\",\"ZrKCkX7xxGGZzauFW\",\"zd9FLSzsGz3evKafy\",\"NNE5HNRXAkmhrWgyQ\",\"Z4M3NAa4TXquMNkHe\",\"gSFJPsMXnqAog3Q9f\",\"j57Xos8wYZWcwqMrt\",\"6SKDJwXpev4qPSzgM\",\"dyaJRDTFLRLqvHRDK\",\"syRNbbPdLCGXbH2Gy\",\"8TAYWzqJAkXq2MAba\",\"R4SjTgDnpigJYDLyL\",\"GGprTwrkjuccmrQRg\",\"FvFhg2wELM3SCZDZQ\",\"iBTooWAGe7dD9svva\",\"uGuS9YRXW2nj4p6zf\",\"yNjkHfHESBAnCssPB\",\"iojEnnY9FsMfYzp6f\",\"bJxaKHJqR82EWw8Su\",\"SXvzKGZ8AFDChFZcK\",\"NzbRqGWspQnWMoDrF\",\"Pe8vWpDHRuH9nSGKW\",\"xwEZk3bNZoNDPJYF5\",\"X5MqeHyPh6cSQCXnk\",\"tZtama5GRL2EnGrDr\",\"qPpQfR5KyDb5Y3EFf\",\"Wv2vJnEj8ywNmARoF\",\"yAouD3PxzED8a4gap\",\"CTKmXtrqDYqJBnuy8\",\"meS77LKqRswhF5LAy\",\"8zQnyekbSwzhoJymu\",\"yjtdwc2AC4jA2RWtn\",\"4ZicxybyvEsuA9iET\",\"oBcs8GLX2ZFLXQy8y\",\"HqmxnQJM66Y57twhn\",\"zZDaXBxMzTCBhNkgL\",\"hRiMXDZNAzyPd5tpt\",\"6gS4E2C84vBYTYeDZ\",\"SkQcb2sRn4as5KpnN\",\"Q9afpRu3u8zuWuzLQ\",\"3LiSLdtN58n46NEqg\",\"hkJGLuib5md8vZ9HD\",\"YA7SDhpgEtsqynvNL\",\"ta5CrWnBCRusD2WMo\",\"EMJ6uvBZkie429gdg\",\"kNrnnMxhFZztMTBAX\",\"ji5f27FPz4wRRF6Ls\",\"5HCu9Ydd86QgHDRNP\",\"RehJGBFS6CYiWdjZx\",\"Y9zyHwuyA7MJ8SPDh\",\"TPhfpB5tzQWSSn67n\",\"9CoqdidjM9KbeKnHY\",\"GaJNJwcdyB9ueYFst\",\"E5iw5hyyWum9KshGA\",\"w2HhxvSLmDhaGCAjE\",\"KLmLKaJPfsYxp42p2\",\"6HgMANhu6WiGyXSGN\",\"k2Eo3wyfZZ6KxvKhN\",\"zfGYZ7gpR8fxJpagh\",\"Wv9XxYAmCLZdhrTMF\",\"tpxMgkGSHwBjS95Ta\",\"DYDJTyGgKFnBRLm2r\",\"mG8HqKiAQFTdRZthG\",\"gXTAie79kiw28tx5u\",\"b5zo7s6xrqWgQnPao\",\"8WpvgSbQciTQWdd8T\",\"Kz7ee56Ht4Ns8JjBj\",\"JS3hNM3XXkxPdg3yk\",\"d8qtzoLB264iP8tdY\",\"zvR7koBTGcaj5pJNQ\",\"wRttWTM59y8m5mx7x\",\"6428wKHtwKkFdvBs5\",\"qD2LrwaDrSdiybLKY\",\"dj5AyG5fWP8FdsSmZ\",\"DPi9QGLctq2y76KuE\",\"QRv96jmNaYsWkxQEG\",\"8fZxjQfuXw5HMSRJM\",\"J3upzLHuEwXH7Z2hx\",\"7D76ZPLjgjZideoy9\",\"cAP3n5NY64uoMwzRR\",\"RGMbFMZXJr7DhcAJy\",\"6MjSiiBLPcvXbXcaZ\",\"axdSNLZpiCDF8RS6n\",\"pJj86xc32Bs7Frxvi\",\"dYPkStFnLvAMsHSzZ\",\"dky93oMkJsJjEJKk2\",\"4fhjJBvLBWh6QeSih\",\"bccs9koJxyQ9XNiLC\",\"pduNK68oazqQTtbLp\",\"AJexRBN9cYQmqvYu6\",\"KJCDwGkoXh8qtbbKr\",\"sbJcFfQjQ59Wfg4Cd\",\"yod5YhKtPqw2GfG9B\",\"g9FyJ8yeT9ic97Qp2\",\"4fjSgcqhQQZM2ZFRP\",\"5XiuAqicKD4hBdu63\",\"aBo4Msbxi7Z5tc6LZ\",\"Wey76N8dEHS7AKN8v\",\"oyKcm3zqdy8Ko5P5d\",\"ey3CASd6Je5LEJzfB\",\"oig8ig9SE9RZa8ttL\",\"C2AfMipCicfD58WJ9\",\"3pxHTZBsv7MKzFG6Y\",\"HuNF3xTBzmatyGSTm\",\"DpnYcMphntjsQ96qg\",\"YRAzEBJoLvSaiPtYx\",\"Ecg4m7srYGgZsb4Ck\",\"o4ixjQGSaYqA2JoM4\",\"wjc4iejpErBhxWwHo\",\"utTuvGdmu2sBHWBhQ\",\"YjPkyrF5D3ihxTjwk\",\"WdKdsgH9gXkKgCycx\",\"CyzskHGsC6WSmYrLu\",\"5zGMciq3fB4aeu9uj\",\"nJXgbSQozcoE8Wn4N\",\"kAkLAF9T5McSxXJCT\",\"fvkELLbkhuv5mpori\",\"Lg4t6SEWgtYz4u7Cj\",\"cZccqzRQ9GgjQF6Az\",\"GGdmhAvxXhqhhibJN\",\"R29kgJ9M7R4qqwjcE\",\"p7js9trz2zk2RorCR\",\"buX4mCQhtXCfBjeno\",\"eYfPWvZwnJQkHbSTK\",\"5S9nX4rKsnCcnv4Cz\",\"MXGuntvz3byrP6WJc\",\"DqNQn9Jsxcu5HijKE\",\"aaJWssCWfMa63XJng\",\"5hQnRWiKkhgKJXNMP\",\"7N6c3Xu244bnQWjBs\",\"srJ34BaybkQh3qRkM\",\"nFbmNzMQ38TncmfQX\",\"LPGPHgJc8MkvcEDBc\",\"Ds7L5bksw2QRHjrKL\",\"qAby4AWXmTNeusvg3\",\"q6QsMYNMpPNtmyTeW\",\"T2vhHPhRR96hRizq8\",\"CHvzhtXnv8HTbPQ56\",\"pPpmP7xeJzGgK362R\",\"BrTDhPJcACL2bsrpJ\",\"T6iBEE2jp7f7iEF2P\",\"WpSrzoCha6bMMzkbK\",\"sKfrD9gjCDHuqLzSk\",\"XD5nmvKQchKezPXhy\",\"BJp2WkwLWGHHB5oQW\",\"AFfw7cGg83uYk2Miy\",\"Fb2wehA7QgTFWry2x\",\"dYgxQgSzJNMnWzhhE\",\"AQSqD9oNv2uPfxZCR\",\"dJzNF59j2p8jWZxiQ\",\"66a9xX73nmTEuKs9k\",\"Wpn95NqWxncQrwNgz\",\"GTKsdeEihE636Le9i\",\"DfHHpvnubuFmeNky9\",\"K6MfKMytoJJuSGewP\",\"c2q7mY39z5JPEMCaM\",\"jL4y5fTJAMBjhZmko\",\"2PufnQcsHsfymufX3\",\"ghMkPtdFCpM6w8nax\",\"7txFzDQ43vJ7qCY88\",\"X4rzfxGgxx6CS7Bpz\",\"tdfY4iBvD7oh2ufnN\",\"mvJBakQ35CWAnbbEZ\",\"RoGGD5cpHb4ftdLDv\",\"JhX7jvtpwNyxcc39m\",\"WQubx7DAkG6WZE8FA\",\"4Lwjr34ypKNQNQCar\",\"R6YxHWAiLgKwy5YvC\",\"a6fgDQTddtZCKfnzR\",\"PC3pLs36zNzpRDSuE\",\"StNu7DPyTgEStZsMY\",\"wwMcJQRvf3X59Jyev\",\"4RY3zj9C2t8GGefhi\",\"fKzJMR2LLbiRtGetj\",\"hR7GMiqGap4CzEWSy\",\"p65j6ikvNwF3tQPWT\",\"nc7bRhkxgKyqusYe3\",\"T6Rm8mREPMZSftzrC\",\"jWbd7SYDzLPjc9EDh\",\"J23RcmzbdtBbPCTjT\",\"PTDFuxAzou7W6asWt\",\"4TmgHkn5vqyHK3sYC\",\"EfxwqhYdapX3dMQC2\",\"796v8eRqahP6wpLdL\",\"93ADqsBQnwTEosjbq\",\"jkbavR2ATFJcpmo8M\",\"w3QDkmjZj2dAFDsjq\",\"pQwhNKiCne4gEZgcn\",\"NojQykDfP7WjHckg4\",\"a2Kmh6ekWqQQooHiQ\",\"7ajSwbNMNp9ggPewT\",\"3KkyQm77zsew58Dc2\",\"uK58g2EXxqxTaB2iA\",\"hpT9yYe5R45poHrYR\",\"d9LBRxvADNBB5QJMB\",\"dSd7wHgXGQeG5BQ2P\",\"AMpQSjKsRqhCDyS2j\",\"PeDy57T7TNNkdqP5M\",\"dzS6WBTMHyFEag6Fp\",\"rhS8qXRjZcpDXkwnE\",\"B4y8aoyXJtskYPFEL\",\"Qyfyyw6oC4EHAndzo\",\"8uiLiJcmWxWe6qw65\",\"M2gFMJkocQSY6bsFR\",\"mw9464S5dnenqzvpm\",\"xjyixzXzqqqTfJARd\",\"5QN8R22z43SrwoHDz\",\"9ivvGvJGvtQfigQaZ\",\"rDgKHd6ZSSpboiAj7\",\"vAbK8sCfKyFC78HYg\",\"RGN3QTb5LXj4ZPPkj\",\"ruzwBPphPDRgLXdnP\",\"Wi4H6ayKsNDWWQCG5\",\"RfbjShbg8jmhyNtJh\",\"Cg3LKtEAJpsrdWroG\",\"wrL4iX2CCSqDCCty3\"],\"total\":402,\"quality\":[3,5,4,5,5,3,5,5,3,5,1,5,4,4,5,5,5,5,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,1,5,4]},\"flags\":1},\"summary\":\"Write a function that takes two lists (lst1 and lst2) and an int n, and returns True if the second list equals the first list shifted by n positions. Otherwise, return False.\\n\\nExamples\\ncircular_shift([1, 2, 3, 4], [3, 4, 1, 2], 2) ➞ True\\n\\ncircular_shift([1, 1], [1, 1], 6) ➞ True\\n\\ncircular_shift([0, 1, 2, 3, 4, 5], [3, 4, 5, 2, 1, 0], 3) ➞ False\\n\\nNotes\\nThe two\",\"tags\":[\"arrays\",\"validation\"],\"timestamp\":{\"$date\":1584442921071},\"title\":\"Circular Shift\",\"quality\":4.586206896551724,\"family\":[{\"_id\":\"T458LugtLt5TFsXXd\",\"language\":\"cpp\"},{\"_id\":\"JBXaZsweHvB4qkksJ\",\"language\":\"javascript\"},{\"_id\":\"nRAxMKDgcBTDeLzPz\",\"language\":\"python3\"},{\"_id\":\"MmgxTWfvdfQTifaQ6\",\"language\":\"ruby\"}]}}"]