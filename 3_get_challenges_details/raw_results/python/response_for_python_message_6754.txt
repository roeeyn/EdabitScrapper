a["{\"msg\":\"result\",\"id\":\"2085\",\"result\":{\"_id\":\"c9i3mdjuwwzMF3Por\",\"author\":\"Donnamae\",\"authorId\":\"yZvzB3qFb8pkHy4dg\",\"code\":\"def bemirp(n):\",\"difficulty\":2.918032786885246,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"A3ekd8cWm4SR9uRPC\",\"instructions\":\"A prime number is a number whose only proper (non-self) divisor is 1 (example 13).\\n\\nAn emirp (prime spelled backwards) is a non-palindromic prime which, when its digits are reversed, makes *another* prime. E.g. 13 is a prime, and so is 31. Both are therefore emirps.\\n\\nA bemirp is a prime which is an emirp (makes another prime with its digits reversed), but additionally, makes another prime when flipped upside down (see note). The upside-down version is also an emirp, which makes a group of 4 primes. Bemirps consist only of digits 0, 1, 6, 8, and 9.\\n\\nTo illustrate: 11061811, reversed = 11816011, upside-down = 11091811, upside-down reversed = 11819011. All four are primes.\\n\\nCreate a function that takes a number and returns `\\\"B\\\"` if it’s a bemirp, `\\\"E\\\"` if it's a (non-bemirp) emirp, `\\\"P\\\"` if it's a (non-emirp) prime, or `\\\"C\\\"` (composite / non-prime).\\n\\n### Examples\\n```\\nbemirp(101) ➞ \\\"P\\\"\\n\\nbemirp(1011) ➞ \\\"C\\\"\\n\\nbemirp(1069) ➞ \\\"E\\\"\\n\\nbemirp(1061) ➞ \\\"B\\\"\\n```\\n\\n### Notes\\n6 upside-down is 9 and vice-versa. 0, 1, and 8 are unchanged when flipped. The remaining five digits are unflippable.\",\"lab\":\"Test.assert_equals(bemirp(101), 'P')\\nTest.assert_equals(bemirp(1011), 'C')\\nTest.assert_equals(bemirp(1069), 'E')\\nTest.assert_equals(bemirp(1061), 'B')\\nTest.assert_equals(bemirp(198101), 'C')\\nTest.assert_equals(bemirp(1009), 'E')\\nTest.assert_equals(bemirp(10091), 'B')\\nTest.assert_equals(bemirp(18616061), 'B')\\nTest.assert_equals(bemirp(10909), 'E')\\nTest.assert_equals(bemirp(16069), 'P')\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[3,3,3,3,3,3,2,3,3,4,1,4,2,1,2,3,2,4,4,2,3,1,4,4,4,3,2,2,3,3,4,3,2,4,3,4,2,3,4,4,2,1,4,4,3,3,4,2,4,4,2,4,4,2,3,3,3,2,0,3,4],\"rators\":[\"tAF9Gf6PiGogbZuWs\",\"gb9rvGus2Jv7bjZSs\",\"7REMi9ZPhC4R5qveo\",\"8JyqsSbN2FJXPr3cw\",\"7g3vZaQXhLpxrajyg\",\"RbRrxRryTKPFhxroj\",\"MXjxGML2X75x64vJo\",\"yZvzB3qFb8pkHy4dg\",\"AYaEkTWLMmfzpwejr\",\"PFjMZGHNAPTkgd7tq\",\"JFdJLuGWNBohQNp9t\",\"cecRRLKKu5R62D5xE\",\"BFNm9gacwba9KyLFW\",\"3ifAHQzsMasfQySoL\",\"jHrtWDGBhkbuWa7fG\",\"HhLfku5PjHPCqYBe6\",\"5airAWy8rSJDRewDR\",\"bRhKW6gBghG7BjiQ9\",\"Tin42WiZ4JTDEnS7b\",\"oD4zgQracSnoeF78b\",\"oqGkxvASXq52iTDvp\",\"s5M5RvgqR9BhB9JoC\",\"JpeTZm5QTWFLqg9Bx\",\"HqmxnQJM66Y57twhn\",\"FgkYtHLxeD8pETJ8T\",\"YeagPqNegEBbSGb3p\",\"2fxapKr8XGdNeaKi2\",\"Jqk2uJZZxEv5wZFze\",\"8PwfYqoDQFThzNtvf\",\"2innwjWqxJHo4eRGh\",\"WLFPvm65aHfgwQy7N\",\"aEm3Wvj2rFYRL8Lrb\",\"AasGs8AeX9Lcb9xJn\",\"fznzd3qnvtbFkkizz\",\"kYWb8BwpKwunQkxeX\",\"ZNnsMeNkdDhHjSrZb\",\"pDvFWMCD9fQwoBPcu\",\"aCNWav8S8Try9RkC6\",\"gJYuGdkXEWWmGRLzu\",\"cykCKNJcqFBxz4T8s\",\"KZ2xddpM2f9JRaryB\",\"xn7uGNKeAwPEkP9oA\",\"Ecg4m7srYGgZsb4Ck\",\"iS5BrkGLzJyPK7nKt\",\"jL4y5fTJAMBjhZmko\",\"XNmN6ztj36a7eChbD\",\"yjtdwc2AC4jA2RWtn\",\"8sNv5PTHa7XQ8bNqR\",\"eHcgvkTGsH7ZziqBo\",\"iojEnnY9FsMfYzp6f\",\"J3upzLHuEwXH7Z2hx\",\"QRv96jmNaYsWkxQEG\",\"GTKsdeEihE636Le9i\",\"DQCt4iuj2pdQ7LPAX\",\"en6o48SqvQaxiAuLy\",\"2PufnQcsHsfymufX3\",\"gXTAie79kiw28tx5u\",\"T6iBEE2jp7f7iEF2P\",\"rhS8qXRjZcpDXkwnE\",\"buX4mCQhtXCfBjeno\"],\"total\":63,\"quality\":[5,5,5,5]},\"flags\":0},\"subscribers\":[\"yZvzB3qFb8pkHy4dg\"],\"summary\":\"A prime number is a number whose only proper (non-self) divisor is 1 (example 13).\\n\\nAn emirp (prime spelled backwards) is a non-palindromic prime which, when its digits are reversed, makes another prime. E.g. 13 is a prime, and so is 31. Both are therefore emirps.\\n\\nA bemirp is a prime which is an emirp (makes another prime with its digits reversed), but additi\",\"tags\":[\"conditions\",\"math\",\"numbers\"],\"timestamp\":{\"$date\":1560956175950},\"title\":\"I Put My Prime Down, Flip It and Reverse It\",\"isHidden\":false,\"quality\":5,\"family\":[{\"_id\":\"eCTZKnXAp8nvF9i5h\",\"language\":\"cpp\"},{\"_id\":\"iGBFfnTswZzw9yHqc\",\"language\":\"csharp\"},{\"_id\":\"ud5Y2arFXo7SHLvnX\",\"language\":\"javascript\"},{\"_id\":\"c9i3mdjuwwzMF3Por\",\"language\":\"python3\"},{\"_id\":\"iXxDYCs5kkdwhkokM\",\"language\":\"ruby\"},{\"_id\":\"46K2Abh8C6Fdwyrpy\",\"language\":\"swift\"}]}}"]