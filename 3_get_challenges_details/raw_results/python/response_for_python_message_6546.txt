a["{\"msg\":\"result\",\"id\":\"1982\",\"result\":{\"_id\":\"kQayLoFNx4QgWahHu\",\"author\":\"MyName\",\"authorId\":\"P7NmFbCJ5offXMRvB\",\"code\":\"def order(lst):\\n\\t\",\"difficulty\":2.764705882352941,\"quality\":0,\"editorId\":\"P7NmFbCJ5offXMRvB\",\"familyId\":\"R7SDhRiwFuCMcx2Eo\",\"instructions\":\"R, a programming language used for Statistics and Data Analysis, has the function `order`, which returns a list with the indices needed to sort the original vector(∗).\\n\\nFor example:\\n\\n```\\nmy_list = [1, 3, 3, 9, 8]\\n# Ordered would be: [0, 1, 2, 4, 3]\\n```\\n\\nIn plain words, `order` tells you what elements to look at in your original vector to sort it. The list `my_list[0] + my_list[1] + my_list[2] + my_list[4] + my_list[3]` is equivalent to `sorted(my_list)`.\\n\\nIf two or more elements have the same order, their original order is preserved. Here, `[0, 1, 2, 4, 3]` and `[0, 2, 1, 4, 3]` would both sort the vector, but only the first one preserves the original order for the two `3`s.\\n\\nImplement the function `order()` so that it works the same way it does in R.\\n\\n### Examples\\n```\\norder([9, 1, 4, 5, 4]) ➞ [1, 2, 4, 3, 0]\\n\\norder([\\\"z\\\", \\\"c\\\", \\\"f\\\", \\\"b\\\", \\\"c\\\"]) ➞ [3, 1, 4, 2, 0]\\n\\norder([\\\"order\\\", \\\"my\\\", \\\"words\\\"]) ➞ [1, 0, 2]\\n```\\n\\n### Notes\\n- Expect numbers and lower-case alphabetic characters only.\\n- Find Part II: Rank [here](https://edabit.com/challenge/dFosbGy8sFFCEx2Ne).\\n- Vectors in R are similar to a list. Although vectors in R are 1-indexed, your function should be 0-indexed. Other differences between vectors and lists will be ignored for the scope of this challenge.\\n- If you implement your own algorithm, it must be **stable**, meaning that the order of identical elements doesn't get switched around.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(order([1, 3, 3, 9, 8]), [0, 1, 2, 4, 3])\\nTest.assert_equals(order([9, 1, 4, 5, 4]), [1, 2, 4, 3, 0])\\nTest.assert_equals(order([1, 1, 1, 1, 1]), [0, 1, 2, 3, 4])\\nTest.assert_equals(order([1, 2, 0, 3, 7, 1, 11, 1, 2]), [2, 0, 5, 7, 1, 8, 3, 4, 6])\\nTest.assert_equals(order([1, -4, 5.5, -1, 4, 7.5]), [1, 3, 0, 4, 2, 5])\\nTest.assert_equals(order([\\\"z\\\", \\\"c\\\", \\\"f\\\", \\\"b\\\", \\\"c\\\"]), [3, 1, 4, 2, 0])\\nTest.assert_equals(order([\\\"d\\\", \\\"f\\\", \\\"g\\\", \\\"a\\\", \\\"d\\\", \\\"a\\\", \\\"d\\\", \\\"y\\\"]), [3, 5, 0, 4, 6, 1, 2, 7])\\nTest.assert_equals(order([\\\"order\\\", \\\"my\\\", \\\"words\\\"]), [1, 0, 2])\\nTest.assert_equals(order([\\\"a\\\", \\\"rose\\\", \\\"is\\\", \\\"a\\\", \\\"rose\\\", \\\"is\\\", \\\"a\\\", \\\"rose\\\"]), [0, 3, 6, 2, 5, 1, 4, 7])\\nTest.assert_equals(order([\\\"z\\\", \\\"zz\\\", \\\"zzz\\\"]), [0, 1, 2])\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[3,3,3,3,3,3,2,4,5,1,4,3,1,3,1,1,4,2,0,2,4,3,2,3,5,4,3,3,4,2,1,4,2,3],\"quality\":[],\"rators\":[\"foytX6kH9wiSYqLtT\",\"AsZSrDanMxqCFLZ3o\",\"8PwfYqoDQFThzNtvf\",\"P47yRic9jEM2pnczT\",\"aEm3Wvj2rFYRL8Lrb\",\"tAF9Gf6PiGogbZuWs\",\"SGhPxX5bHGL8zZqtt\",\"fznzd3qnvtbFkkizz\",\"xn7uGNKeAwPEkP9oA\",\"Ecg4m7srYGgZsb4Ck\",\"yjtdwc2AC4jA2RWtn\",\"7ifh8r4gvyYMhKB94\",\"HF28xZKSLM9wEuqNg\",\"qPpQfR5KyDb5Y3EFf\",\"8sNv5PTHa7XQ8bNqR\",\"qYDRywWRZdswy4b6e\",\"ygDJ7HEzRoJZyPEF4\",\"4fhjJBvLBWh6QeSih\",\"SExX3m5YftBWmsk2e\",\"5dHucvf2qBYyKim7X\",\"J3upzLHuEwXH7Z2hx\",\"gJYuGdkXEWWmGRLzu\",\"iS5BrkGLzJyPK7nKt\",\"iojEnnY9FsMfYzp6f\",\"eHcgvkTGsH7ZziqBo\",\"yr822PZmmiDDenxpB\",\"2PufnQcsHsfymufX3\",\"GTKsdeEihE636Le9i\",\"s5M5RvgqR9BhB9JoC\"],\"total\":31},\"flags\":0},\"summary\":\"R, a programming language used for Statistics and Data Analysis, has the function order, which returns a list with the indices needed to sort the original vector(∗).\\n\\nFor example:\\n\\nmy_list = [1, 3, 3, 9, 8]\\nOrdered would be: [0, 1, 2, 4, 3]\\n\\nIn plain words, order tells you what elements to look at in your original vector to sort it. The list mylist[0] + mylist\",\"tags\":[\"sorting\",\"arrays\"],\"timestamp\":{\"$date\":1600964473691},\"title\":\"Sorting in R: Order (Part I)\",\"family\":[{\"_id\":\"2eeiWCm9APTAortcv\",\"language\":\"javascript\"},{\"_id\":\"kQayLoFNx4QgWahHu\",\"language\":\"python3\"},{\"_id\":\"ptM9nR6KSAcAQxjfY\",\"language\":\"ruby\"}]}}"]