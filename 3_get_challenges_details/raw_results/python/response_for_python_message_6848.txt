a["{\"msg\":\"result\",\"id\":\"2132\",\"result\":{\"_id\":\"ZsAXt5Kj5EP4v3ack\",\"author\":\"Werdna\",\"authorId\":\"buX4mCQhtXCfBjeno\",\"code\":\"def secret(txt):\\n\\t\",\"difficulty\":3.176470588235294,\"familyId\":\"cbxfEP5g7Ty94Xywe\",\"instructions\":\"Create a function based on the input and output. Look at the examples, there is a pattern.\\n\\n### Examples\\n```\\nsecret(\\\"div>p.a$$*2\\\") ➞ `<div><p class=\\\"a01\\\"></p><p class=\\\"a02\\\"></p></div>`\\n# Only whitespace in the entire string ===  One whitespace before each class. Total \\\" \\\" === 2\\n\\nsecret(\\\"ul>li.b$*3\\\") ➞ `<ul><li class=\\\"b1\\\"></li><li class=\\\"b2\\\"></li><li class=\\\"b3\\\"></li></ul>`\\n# Only whitespace in the entire string === One whitespace before each class. Total \\\" \\\" === 3\\n\\nsecret(\\\"p>h1.c$$$*2\\\") ➞ `<p><h1 class=\\\"c001\\\"></h1><h1 class=\\\"c002\\\"></h1></p>`\\n# Only whitespace in the entire string === One whitespace before each class. Total \\\" \\\" === 2\\n```\\n\\n### Notes\\nInput is a string.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(\\n  secret(\\\"ul>li.item$$$*5\\\"),\\n  \\\"<ul><li class='item001'></li><li class='item002'></li><li class='item003'></li><li class='item004'></li><li class='item005'></li></ul>\\\"\\n)\\n\\nTest.assert_equals(\\n  secret('div>p.menu$*2'),\\n  \\\"<div><p class='menu1'></p><p class='menu2'></p></div>\\\"\\n)\\n\\nTest.assert_equals(\\n  secret('div>p.menu$$*2'),\\n  \\\"<div><p class='menu01'></p><p class='menu02'></p></div>\\\"\\n)\\n\\nTest.assert_equals(\\n  secret('div>p.header$$*3'),\\n  \\\"<div><p class='header01'></p><p class='header02'></p><p class='header03'></p></div>\\\"\\n)\\n\\nTest.assert_equals(\\n  secret('ul>li.nav$$$$*3'),\\n  \\\"<ul><li class='nav0001'></li><li class='nav0002'></li><li class='nav0003'></li></ul>\\\"\\n)\\n\\nTest.assert_equals(\\n  secret('p>h1.c$$$*2'),\\n  \\\"<p><h1 class='c001'></h1><h1 class='c002'></h1></p>\\\"\\n)\\n\\nTest.assert_equals(\\n  secret('div>p.a$$*2'),\\n  \\\"<div><p class='a01'></p><p class='a02'></p></div>\\\"\\n)\\n\\nTest.assert_equals(\\n  secret('ul>li.b$*3'),\\n  \\\"<ul><li class='b1'></li><li class='b2'></li><li class='b3'></li></ul>\\\"\\n)\",\"language\":\"python3\",\"quality\":0,\"summary\":\"Create a function based on the input and output. Look at the examples, there is a pattern.\\n\\nExamples\\nsecret(\\\"div>p.a$$*2\\\") ➞ ``\\nOnly whitespace in the entire string ===  One whitespace before each class. Total \\\" \\\" === 2\\n\\nsecret(\\\"ul>li.b$*3\\\") ➞ ``\\nOnly whitespace in the entire string === One whitespace before each class. Total \\\" \\\" === 3\\n\\nsecret(\\\"p>h1.c$$$*2\\\") ➞\",\"tags\":[\"strings\",\"language_fundamentals\"],\"timestamp\":{\"$date\":1607434909569},\"title\":\"Secret Function 3.0\",\"stats\":{\"completed\":{\"total\":30,\"ratings\":[3,3,3,3,3,4,3,0,4,4,5,4,5,3,2,5,4,2,5,2,1,4,4,3,4,1,5,1,4,2,3,2,5,2],\"quality\":[],\"rators\":[\"buX4mCQhtXCfBjeno\",\"8JyqsSbN2FJXPr3cw\",\"Nb6LYPoQP6KJZt8mz\",\"8PwfYqoDQFThzNtvf\",\"iS5BrkGLzJyPK7nKt\",\"mDWNyaaQ9hvPCRzSd\",\"p8qqFdJ3FSk5x9z3G\",\"58M252WF7SPRinfBx\",\"SGhPxX5bHGL8zZqtt\",\"J23RcmzbdtBbPCTjT\",\"iojEnnY9FsMfYzp6f\",\"eHcgvkTGsH7ZziqBo\",\"LQxof8pGabGuWP7Gn\",\"J3upzLHuEwXH7Z2hx\",\"yjtdwc2AC4jA2RWtn\",\"8sNv5PTHa7XQ8bNqR\",\"2PufnQcsHsfymufX3\",\"AasGs8AeX9Lcb9xJn\",\"gb9rvGus2Jv7bjZSs\",\"DPi9QGLctq2y76KuE\",\"8nE8QHnFYsHCFebte\",\"gJYuGdkXEWWmGRLzu\",\"aEm3Wvj2rFYRL8Lrb\",\"tAF9Gf6PiGogbZuWs\",\"LGMX7bobgh32uP6wq\",\"e6Ldo3gXosENLvaRq\",\"s7Yk3PxBMaiB7pMDj\",\"DQskEvAv5KiJDPtGF\",\"MBA5BzRXuMRx822ty\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"SPsf87irFHTimcDCS\",\"language\":\"javascript\"},{\"_id\":\"ymivxfDMyJCZjCcBg\",\"language\":\"php\"},{\"_id\":\"ZsAXt5Kj5EP4v3ack\",\"language\":\"python3\"},{\"_id\":\"CFAsH4Yx9dqFuQQhW\",\"language\":\"ruby\"}]}}"]