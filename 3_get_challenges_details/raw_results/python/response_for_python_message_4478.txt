a["{\"msg\":\"result\",\"id\":\"955\",\"result\":{\"_id\":\"7nfSdzzpvTta8hhNe\",\"author\":\"Jameel Saeb\",\"authorId\":\"Fb2wehA7QgTFWry2x\",\"code\":\"def organize(txt):\\n\\t\",\"difficulty\":1.4878048780487805,\"quality\":4.7,\"familyId\":\"Ww59HjS4A4X3qqNk5\",\"instructions\":\"Write a function that maps a string into a dictionary of name, string, and occupation pairs.\\n\\n### Examples\\n```\\norganize(\\\"Jameel Saeb, 15, CEO of facebook\\\") ➞ {\\n  \\\"name\\\": \\\"Jameel Saeb\\\",\\n  \\\"age\\\": 15,\\n  \\\"occupation\\\": \\\"CEO of facebook\\\"\\n}\\n\\norganize(\\\"John Mayer, 41, Singer\\\") ➞ {\\n  \\\"name\\\": \\\"John Mayer\\\",\\n  \\\"age\\\": 41,\\n  \\\"occupation\\\": \\\"Singer\\\"\\n}\\n\\norganize(\\\"\\\") ➞ {}\\n```\\n\\n### Notes\\n- Check **Resources** for more info.\\n- Return an empty dictionary if given an empty string.\",\"isHidden\":false,\"lab\":\"Test.assert_equals(organize(\\\"Jameel Saeb, 15, CEO of facebook\\\"),\\n{'name':'Jameel Saeb','age':15,'occupation':'CEO of facebook'})\\n\\nTest.assert_equals(organize(\\\"John Mayer, 41, Singer\\\"),\\n{'name':\\\"John Mayer\\\", 'age':41,'occupation':\\\"Singer\\\"})\\n\\nTest.assert_equals(organize(\\\"Emily Blunt, 36, Actor\\\"),\\n{'name':\\\"Emily Blunt\\\",'age':36,'occupation':'Actor'})\\n\\nTest.assert_equals(organize(\\\"Conan O'Brien, 56, Talk Show Host\\\"),\\n{'name':\\\"Conan O'Brien\\\", 'age':56, 'occupation':\\\"Talk Show Host\\\"})\\n\\nTest.assert_equals(organize(\\\"Georg bullock, 31, Brother of an actor\\\"),\\n{'name':'Georg bullock','age':31, 'occupation':'Brother of an actor'})\\n\\nTest.assert_equals(organize(\\\"\\\"), {})\",\"language\":\"python3\",\"summary\":\"Write a function that maps a string into a list of name, string, and occupation pairs.\\n\\nExamples\\norganize(\\\"Jameel Saeb, 15, CEO of facebook\\\") ➞ {\\n  \\\"name\\\": \\\"Jameel Saeb\\\",\\n  \\\"age\\\": 15,\\n  \\\"occupation\\\": \\\"CEO of facebook\\\"\\n}\\n\\norganize(\\\"John Mayer, 41, Singer, Emily Blunt, 36, Actor\\\") ➞ {\\n  \\\"name\\\": \\\"John Mayer\\\",\\n  \\\"age\\\": 41,\\n  \\\"occupation\\\": \\\"Singer\\\"\\n}\\n\\norganize(\\\"\\\")\",\"tags\":[\"higher_order_functions\",\"objects\"],\"timestamp\":{\"$date\":1601228845716},\"title\":\"Names, Ages and Occupations\",\"stats\":{\"completed\":{\"total\":114,\"ratings\":[2,2,2,2,2,0,1,2,1,1,3,2,2,1,2,2,1,0,2,2,0,2,1,2,2,2,2,0,1,2,2,1,5,2,2,0,1,2,2,2,1,1,0,1,2,2,1,0,2,3,1,0,2,2,0,2,2,2,2,2,2,1,2,1,2,2,2,0,0,0,2,1,1,2,1,1,2,1,2,1,1,2],\"quality\":[4,5,3,5,5,5,4,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,5,5,5],\"rators\":[\"Fb2wehA7QgTFWry2x\",\"tAF9Gf6PiGogbZuWs\",\"8PwfYqoDQFThzNtvf\",\"QRv96jmNaYsWkxQEG\",\"qD2LrwaDrSdiybLKY\",\"J3upzLHuEwXH7Z2hx\",\"p8qqFdJ3FSk5x9z3G\",\"Yp7uvStL97cC9fKkY\",\"gb9rvGus2Jv7bjZSs\",\"8JyqsSbN2FJXPr3cw\",\"DPi9QGLctq2y76KuE\",\"aEm3Wvj2rFYRL8Lrb\",\"HF28xZKSLM9wEuqNg\",\"FEYpu9RWysAgW3XnP\",\"cRoHBaA7HjePc8wb2\",\"gXTAie79kiw28tx5u\",\"yjtdwc2AC4jA2RWtn\",\"zd9FLSzsGz3evKafy\",\"DEDniTrstQYGounXT\",\"wRttWTM59y8m5mx7x\",\"H4abACFDH5t8CnnyH\",\"tpxMgkGSHwBjS95Ta\",\"cAP3n5NY64uoMwzRR\",\"dYPkStFnLvAMsHSzZ\",\"KJCDwGkoXh8qtbbKr\",\"oBcs8GLX2ZFLXQy8y\",\"iS5BrkGLzJyPK7nKt\",\"gJYuGdkXEWWmGRLzu\",\"PXAcsKkssS2yLyDv2\",\"5XiuAqicKD4hBdu63\",\"RGMbFMZXJr7DhcAJy\",\"JS3hNM3XXkxPdg3yk\",\"g9FyJ8yeT9ic97Qp2\",\"dBzwBtRjZqB98DJeB\",\"d8qtzoLB264iP8tdY\",\"5HCu9Ydd86QgHDRNP\",\"DY6edtmqmFq7GJTc8\",\"J5T8gZqiZXFuFDTQ7\",\"s5M5RvgqR9BhB9JoC\",\"R4SjTgDnpigJYDLyL\",\"Bx68gx6euL4i9BS6D\",\"HqmxnQJM66Y57twhn\",\"5S9nX4rKsnCcnv4Cz\",\"YRAzEBJoLvSaiPtYx\",\"Jqk2uJZZxEv5wZFze\",\"sbJcFfQjQ59Wfg4Cd\",\"qZQxPQ2kaNKAMesHT\",\"5f6oSeq4r5WTXLdCQ\",\"GGdmhAvxXhqhhibJN\",\"e7QB5tCAeoSeRCTxY\",\"JhX7jvtpwNyxcc39m\",\"qAby4AWXmTNeusvg3\",\"eYfPWvZwnJQkHbSTK\",\"srJ34BaybkQh3qRkM\",\"YcCLwitFMAEJSnxAW\",\"Ds7L5bksw2QRHjrKL\",\"iojEnnY9FsMfYzp6f\",\"6BpQP3ubeg48Q65ya\",\"bvmTE46bfcM4ogj34\",\"eMuCpJ2spXWkJjWNz\",\"o4ixjQGSaYqA2JoM4\",\"66a9xX73nmTEuKs9k\",\"T6iBEE2jp7f7iEF2P\",\"sHjfbGQGLHE6JR6qu\",\"xn7uGNKeAwPEkP9oA\",\"PC3pLs36zNzpRDSuE\",\"CHvzhtXnv8HTbPQ56\",\"yod5YhKtPqw2GfG9B\",\"yr822PZmmiDDenxpB\",\"AasGs8AeX9Lcb9xJn\",\"ey3CASd6Je5LEJzfB\",\"8BFSTCnoe2QggN64c\",\"mvJBakQ35CWAnbbEZ\",\"AJexRBN9cYQmqvYu6\",\"BrTDhPJcACL2bsrpJ\",\"EfxwqhYdapX3dMQC2\",\"qzXAMXsHZGT8o5hTA\",\"MKT7khMBGXzA22ykf\",\"rrSC943cCKNG48sH4\",\"eHcgvkTGsH7ZziqBo\",\"Afnps7TJQuS9sipMb\",\"XD5nmvKQchKezPXhy\",\"AFfw7cGg83uYk2Miy\",\"cA6ALDreRTFs8k4MM\",\"2PufnQcsHsfymufX3\",\"4Lwjr34ypKNQNQCar\",\"dzS6WBTMHyFEag6Fp\",\"4TmgHkn5vqyHK3sYC\",\"pduNK68oazqQTtbLp\",\"wjc4iejpErBhxWwHo\",\"mw9464S5dnenqzvpm\",\"yAouD3PxzED8a4gap\",\"mxX4rH5ELYkdZ2Mbw\",\"9pzFiFK3ANLjQfnr2\",\"NzbRqGWspQnWMoDrF\",\"RoGGD5cpHb4ftdLDv\",\"pPpmP7xeJzGgK362R\",\"3nied3n8KG8RSNixH\",\"2fxapKr8XGdNeaKi2\",\"uGuS9YRXW2nj4p6zf\",\"5QN8R22z43SrwoHDz\",\"rCrbqMiaGPgHYTNxu\",\"uKPdSvXEJesi6SWkg\",\"X4rzfxGgxx6CS7Bpz\",\"Wi4H6ayKsNDWWQCG5\",\"E2hpke7mHxAWsw5t9\",\"AQSqD9oNv2uPfxZCR\"]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"Fb2wehA7QgTFWry2x\",\"family\":[{\"_id\":\"7nfSdzzpvTta8hhNe\",\"language\":\"python3\"},{\"_id\":\"6jRutdkEW32oj6PAi\",\"language\":\"ruby\"}]}}"]