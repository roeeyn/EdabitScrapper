a["{\"msg\":\"result\",\"id\":\"2370\",\"result\":{\"_id\":\"PMbf4ktWRLTrh4YQA\",\"author\":\"Masked\",\"authorId\":\"S6Zd8mPuvhuh3MFRt\",\"code\":\"def add_n_days_to_a_date(date, days):\\n\\t\",\"difficulty\":3.793103448275862,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"eGrMgGdpp3PevZ265\",\"instructions\":\"Create a function that returns the date in **DDMMYYYY** format after a specific date. Consider leap years and leap months (e.g. February 29th). Please **do not import** anything (such as `datetime`).\\n\\n### Examples\\n```\\nadd_n_days_to_a_date(\\\"15041984\\\", 6038) ➞ \\\"26102000\\\"\\n\\nadd_n_days_to_a_date(\\\"26102000\\\", 6038)) ➞ \\\"08052017\\\"\\n\\nadd_n_days_to_a_date(\\\"01011900\\\", 30) ➞ \\\"31011900\\\"\\n```\\n\\n### Notes\\n- Remember that if the year is a new century like 1800, although it is divisible by 4, it isn't divisible by 400, hence it's NOT a leap year.\\n- Please give feedback if there are any bugs (this is my first time making a challenge).\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(add_n_days_to_a_date(\\\"26102000\\\", 6038), \\\"08052017\\\")\\nTest.assert_equals(add_n_days_to_a_date(\\\"15041984\\\", 6037), \\\"25102000\\\")\\nTest.assert_equals(add_n_days_to_a_date(\\\"01011900\\\", 1519),\\\"29021904\\\")\\nTest.assert_equals(add_n_days_to_a_date(\\\"03033003\\\", 20), \\\"23033003\\\")\\nTest.assert_equals(add_n_days_to_a_date(\\\"02031872\\\", 12345), \\\"20121905\\\")\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[4,4,4,4,4,5,5,4,4,5,3,3,5,5,5,2,5,5,5,1,4,3,5,5,5,3,0,2,1],\"rators\":[\"tAF9Gf6PiGogbZuWs\",\"8PwfYqoDQFThzNtvf\",\"aEm3Wvj2rFYRL8Lrb\",\"DwetpbChQM4r6Gwah\",\"ftXLsTaA7yHmhuEsY\",\"8JyqsSbN2FJXPr3cw\",\"YRstQuthRkFeBiXug\",\"s5M5RvgqR9BhB9JoC\",\"sz8ufn9i8zeiGWpAy\",\"SKeSSfqSmCk65vjYh\",\"R4SjTgDnpigJYDLyL\",\"vTfyrr4pGddp8rbXc\",\"xn7uGNKeAwPEkP9oA\",\"4Wx8m46eWWadZNuLq\",\"gSFJPsMXnqAog3Q9f\",\"fBYjEbJ9Y93hbRugG\",\"JBFi2fBytEdPmTNE8\",\"mDWNyaaQ9hvPCRzSd\",\"iojEnnY9FsMfYzp6f\",\"iS5BrkGLzJyPK7nKt\",\"yjtdwc2AC4jA2RWtn\",\"gKnWjDjwrJh7MK2df\",\"LQxof8pGabGuWP7Gn\",\"8sNv5PTHa7XQ8bNqR\"],\"total\":25,\"quality\":[]},\"flags\":0},\"summary\":\"Create a function that returns the date in DDMMYYYY format after a specific date. Consider leap years and leap months (e.g. February 29th). Please do not import anything (such as datetime).\\n\\nExamples\\naddndaystoa_date(\\\"15041984\\\", 6038) ➞ \\\"26102000\\\"\\n\\naddndaystoa_date(\\\"26102000\\\", 6038)) ➞ \\\"08052017\\\"\\n\\naddndaystoa_date(\\\"01011900\\\", 30) ➞ \\\"31011900\\\"\\n\\nNotes\\nRemember t\",\"tags\":[\"algorithms\",\"loops\",\"conditions\",\"dates\"],\"timestamp\":{\"$date\":1584269059696},\"title\":\"What's the Date after N Days?\",\"quality\":0,\"family\":[{\"_id\":\"PMbf4ktWRLTrh4YQA\",\"language\":\"python3\"}]}}"]