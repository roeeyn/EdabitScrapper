a["{\"msg\":\"result\",\"id\":\"796\",\"result\":{\"_id\":\"Mv5qSgZKTLrLt9zzW\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"def get_drink_ID(flavor, ml):\\n\\t\",\"difficulty\":1.375796178343949,\"quality\":4.551724137931035,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"CcQiNuK9xxYQFvgCz\",\"instructions\":\"A fruit juice company tags their fruit juices by concatenating the first **three letters** of the words in a flavor's name, with its capacity.\\n\\nCreate a function that creates product IDs for different fruit juices.\\n\\n### Examples\\n```\\nget_drink_ID(\\\"apple\\\", \\\"500ml\\\") ➞ \\\"APP500\\\"\\n\\nget_drink_ID(\\\"pineapple\\\", \\\"45ml\\\") ➞ \\\"PIN45\\\"\\n\\nget_drink_ID(\\\"passion fruit\\\", \\\"750ml\\\") ➞ \\\"PASFRU750\\\"\\n```\\n\\n### Notes\\n- Capacity will be given as a string, and will always be given in **ml**.\\n- Return the letters in **UPPERCASE**.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(get_drink_ID(\\\"apple\\\", \\\"500ml\\\"), \\\"APP500\\\")\\nTest.assert_equals(get_drink_ID(\\\"pineapple\\\", \\\"45ml\\\"), \\\"PIN45\\\")\\nTest.assert_equals(get_drink_ID(\\\"orange\\\", \\\"750ml\\\"), \\\"ORA750\\\")\\nTest.assert_equals(get_drink_ID(\\\"passion fruit\\\", \\\"1ml\\\"), \\\"PASFRU1\\\")\\nTest.assert_equals(get_drink_ID(\\\"mango\\\", \\\"1000ml\\\"), \\\"MAN1000\\\")\\nTest.assert_equals(get_drink_ID(\\\"very berry\\\", \\\"253ml\\\"), \\\"VERBER253\\\")\\nTest.assert_equals(get_drink_ID(\\\"raspberry and lime\\\", \\\"350ml\\\"), \\\"RASANDLIM350\\\")\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,1,2,2,2,2,2,1,0,2,2,1,1,1,1,1,1,2,1,0,2,2,1,2,3,2,1,2,0,1,0,1,1,5,2,3,0,2,0,0,1,2,2,2,0,2,1,0,1,0,2,1,2,2,2,2,0,2,1,2,1,0,1,2,2,0,2,1,2,1,2,2,2,2,1,2,2,0,2,2,0,2,1,1,2,2,2,3,1,0,2,1,1,1,1,2,2,2,1,2,1,1,2,0,1,1,2,1,2,0,3,1,1,1,1,1,1,2,2,0,0,0,0,2,1,0,0,2,2,2,1,1,1,1,1,2,1,2,3,2,0,2,3,1,1,2,0,1,1,2,1,2],\"quality\":[4,3,5,5,3,4,4,4,5,5,5,5,4,5,4,4,5,3,5,5,5,3,5,5,4,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,1,5,5,5,5,5,5,5,5,4,3,5,5],\"rators\":[\"PXAcsKkssS2yLyDv2\",\"gb9rvGus2Jv7bjZSs\",\"REpkEcYrskYHBmYzW\",\"j49s8dHmmiyPxZmWj\",\"gk5L48g6G44JPasyx\",\"tAF9Gf6PiGogbZuWs\",\"8nE8QHnFYsHCFebte\",\"NRpQ962SxLoMb7ovD\",\"AsZSrDanMxqCFLZ3o\",\"6428wKHtwKkFdvBs5\",\"8PwfYqoDQFThzNtvf\",\"aEm3Wvj2rFYRL8Lrb\",\"MKT7khMBGXzA22ykf\",\"QRv96jmNaYsWkxQEG\",\"a777e8chPvJkY3tKa\",\"qD2LrwaDrSdiybLKY\",\"FEYpu9RWysAgW3XnP\",\"xn7uGNKeAwPEkP9oA\",\"gXTAie79kiw28tx5u\",\"DEDniTrstQYGounXT\",\"8JyqsSbN2FJXPr3cw\",\"gJYuGdkXEWWmGRLzu\",\"DPi9QGLctq2y76KuE\",\"s5M5RvgqR9BhB9JoC\",\"p8qqFdJ3FSk5x9z3G\",\"H4abACFDH5t8CnnyH\",\"yjtdwc2AC4jA2RWtn\",\"9CoqdidjM9KbeKnHY\",\"2QGRoQn2dRq3scu7k\",\"9FCeFzjPA4jrQ7oHW\",\"Yp7uvStL97cC9fKkY\",\"GGprTwrkjuccmrQRg\",\"sqkcdpFqtr8Tg6S7j\",\"cR3ibTMxLyEdDFCHY\",\"wRttWTM59y8m5mx7x\",\"HF28xZKSLM9wEuqNg\",\"J3upzLHuEwXH7Z2hx\",\"g9FyJ8yeT9ic97Qp2\",\"aXx8tRSKQw65RwBAB\",\"7txFzDQ43vJ7qCY88\",\"rfyEkETeoS96QNH4e\",\"oBcs8GLX2ZFLXQy8y\",\"CTKmXtrqDYqJBnuy8\",\"tpxMgkGSHwBjS95Ta\",\"dYPkStFnLvAMsHSzZ\",\"Wv2vJnEj8ywNmARoF\",\"iS5BrkGLzJyPK7nKt\",\"cAP3n5NY64uoMwzRR\",\"Kh3Pc2ZRusurLaMyP\",\"5HCu9Ydd86QgHDRNP\",\"dj5AyG5fWP8FdsSmZ\",\"JS3hNM3XXkxPdg3yk\",\"zd9FLSzsGz3evKafy\",\"i5iePG5GqhJJ8HEoB\",\"J5T8gZqiZXFuFDTQ7\",\"dBzwBtRjZqB98DJeB\",\"KJCDwGkoXh8qtbbKr\",\"5XiuAqicKD4hBdu63\",\"RGMbFMZXJr7DhcAJy\",\"d8qtzoLB264iP8tdY\",\"mDWNyaaQ9hvPCRzSd\",\"qZQxPQ2kaNKAMesHT\",\"Jqk2uJZZxEv5wZFze\",\"cZccqzRQ9GgjQF6Az\",\"HqmxnQJM66Y57twhn\",\"HuNF3xTBzmatyGSTm\",\"HuCs8Tr9HGFtjaMMD\",\"5S9nX4rKsnCcnv4Cz\",\"Afnps7TJQuS9sipMb\",\"LWCzZ8mb8gwrRNGfq\",\"YRAzEBJoLvSaiPtYx\",\"eYfPWvZwnJQkHbSTK\",\"buX4mCQhtXCfBjeno\",\"GGdmhAvxXhqhhibJN\",\"o4ixjQGSaYqA2JoM4\",\"sHjfbGQGLHE6JR6qu\",\"MXGuntvz3byrP6WJc\",\"NzbRqGWspQnWMoDrF\",\"srJ34BaybkQh3qRkM\",\"Ds7L5bksw2QRHjrKL\",\"3nied3n8KG8RSNixH\",\"ebR9m79RbNzm4cJsJ\",\"9ivvGvJGvtQfigQaZ\",\"CHvzhtXnv8HTbPQ56\",\"YcCLwitFMAEJSnxAW\",\"T2vhHPhRR96hRizq8\",\"EfxwqhYdapX3dMQC2\",\"utTuvGdmu2sBHWBhQ\",\"wjc4iejpErBhxWwHo\",\"uw8E83imJYpQiiPpP\",\"qAby4AWXmTNeusvg3\",\"T6iBEE2jp7f7iEF2P\",\"iojEnnY9FsMfYzp6f\",\"3cF6NXq3ZEwdkgSjb\",\"eMuCpJ2spXWkJjWNz\",\"8BFSTCnoe2QggN64c\",\"BJp2WkwLWGHHB5oQW\",\"XD5nmvKQchKezPXhy\",\"ey3CASd6Je5LEJzfB\",\"vC5pvbQYnmaQqFLLG\",\"rGB2cEYQ5R2PQS8Xf\",\"H9KZi2cjt4FwH7qog\",\"sbJcFfQjQ59Wfg4Cd\",\"66a9xX73nmTEuKs9k\",\"AFfw7cGg83uYk2Miy\",\"BrTDhPJcACL2bsrpJ\",\"PC3pLs36zNzpRDSuE\",\"RnY25enEBE8T9P5GS\",\"GTKsdeEihE636Le9i\",\"yod5YhKtPqw2GfG9B\",\"Wpn95NqWxncQrwNgz\",\"c2q7mY39z5JPEMCaM\",\"Cc2Cgj4MWXZxsTooC\",\"2fxapKr8XGdNeaKi2\",\"yr822PZmmiDDenxpB\",\"X4rzfxGgxx6CS7Bpz\",\"2PufnQcsHsfymufX3\",\"tdfY4iBvD7oh2ufnN\",\"ghMkPtdFCpM6w8nax\",\"rgvAJFwfCeYoYnFTK\",\"mvJBakQ35CWAnbbEZ\",\"K6MfKMytoJJuSGewP\",\"pPpmP7xeJzGgK362R\",\"RoGGD5cpHb4ftdLDv\",\"9Ly8afdtofp8DXzrt\",\"jWbd7SYDzLPjc9EDh\",\"R6YxHWAiLgKwy5YvC\",\"rrSC943cCKNG48sH4\",\"nB6AP9nsuyRHcZGrt\",\"sKfrD9gjCDHuqLzSk\",\"Cuy7McJ5y8BkXRRk9\",\"kQH5b8MXJunh84Czq\",\"N2wnZXkhDH86mgjQ8\",\"v57wdSs5mY2Ggkvva\",\"nc7bRhkxgKyqusYe3\",\"qzXAMXsHZGT8o5hTA\",\"4Lwjr34ypKNQNQCar\",\"JiSpvq6C7azQEmENc\",\"9pzFiFK3ANLjQfnr2\",\"pduNK68oazqQTtbLp\",\"hR7GMiqGap4CzEWSy\",\"2iFe3EHEH2YdhSKrs\",\"4RY3zj9C2t8GGefhi\",\"AJexRBN9cYQmqvYu6\",\"4TmgHkn5vqyHK3sYC\",\"u5u2YpHXiNgzDNJdX\",\"YA7SDhpgEtsqynvNL\",\"9gJsF5apWJGWZJprn\",\"Sixu9gYHhpydtjbgk\",\"xxyxCs8Hr7MQAsFvv\",\"T6Rm8mREPMZSftzrC\",\"2HfNkb2SoqdyjKW3o\",\"uGuS9YRXW2nj4p6zf\",\"AQSqD9oNv2uPfxZCR\",\"d9LBRxvADNBB5QJMB\",\"NfMJuiBk6FN5Jc6ow\",\"LQxof8pGabGuWP7Gn\",\"hpT9yYe5R45poHrYR\",\"dzS6WBTMHyFEag6Fp\",\"AMpQSjKsRqhCDyS2j\",\"yAouD3PxzED8a4gap\",\"uK58g2EXxqxTaB2iA\",\"Qzr5ro56et2RF5Gb3\",\"B4y8aoyXJtskYPFEL\",\"Qyfyyw6oC4EHAndzo\",\"mw9464S5dnenqzvpm\",\"rCrbqMiaGPgHYTNxu\",\"QWjsXnLaJ7xfL3Amq\",\"oig8ig9SE9RZa8ttL\",\"8uiLiJcmWxWe6qw65\",\"qB6KSTYC6H2TQEQY6\",\"3KkyQm77zsew58Dc2\",\"mxX4rH5ELYkdZ2Mbw\",\"nFbmNzMQ38TncmfQX\",\"5QN8R22z43SrwoHDz\",\"eW9R2SCoYnY8HBAdL\",\"tegXfJbNT8WncLm5s\",\"3LiSLdtN58n46NEqg\",\"FRN2W8RYpJ6GPhgRy\",\"Hu4SkoNyWCP4vmsZE\",\"rDgKHd6ZSSpboiAj7\",\"3CRf8CYo6fHSbqKQj\",\"XbxHXmh5ZmRN2gw3K\",\"54BFnXEjY3FuRNYpN\",\"FiaTpm7ehfDv43wSG\",\"mtRvHDpeLoSGBf8zC\",\"RfbjShbg8jmhyNtJh\",\"ctbThYbufFCYbRK4f\",\"vAbK8sCfKyFC78HYg\",\"StNu7DPyTgEStZsMY\",\"vCeeMuYDbz3MB4vsk\",\"NHp9cXgWCyX6KqyMT\",\"6oasdxajQjBPyCFTn\",\"QDiHtAiYuyEEmoCgv\",\"Cg3LKtEAJpsrdWroG\",\"C5h42RTzbdrpPfeZo\",\"dSd7wHgXGQeG5BQ2P\",\"dqwatKFAeGpjmf5dm\",\"ruzwBPphPDRgLXdnP\",\"bvEYbAYJeTLGZF8n9\",\"YdDfxn4jaCYxjfLEq\",\"Wi4H6ayKsNDWWQCG5\",\"7DXJ3mvKMHHqBLt92\",\"wrL4iX2CCSqDCCty3\",\"Ncn7Qn2LbdsiJnfFk\",\"YXQvrgeiGzLd6cTW9\",\"E2hpke7mHxAWsw5t9\",\"DKeJdqdixTNjgLohq\",\"2MjzJ7yxh3eT3xbng\",\"naZ3i6sSDPwsieDH7\"],\"total\":228},\"flags\":0},\"summary\":\"A fruit juice company tags their fruit juices by concatenating the first three letters of the words in a flavor's name, with its capacity.\\n\\nCreate a function that creates product IDs for different fruit juices.\\n\\nExamples\\ngetdrinkID(\\\"apple\\\", \\\"500ml\\\") ➞ \\\"APP500\\\"\\n\\ngetdrinkID(\\\"pineapple\\\", \\\"45ml\\\") ➞ \\\"PIN45\\\"\\n\\ngetdrinkID(\\\"passion fruit\\\", \\\"750ml\\\") ➞ \\\"PASFRU750\\\"\\n\\nNotes\",\"tags\":[\"strings\",\"loops\"],\"timestamp\":{\"$date\":1600964036764},\"title\":\"Fruit Juices\",\"family\":[{\"_id\":\"sfi78gszvaiG2NNsK\",\"language\":\"cpp\"},{\"_id\":\"CC7f9DpPfMMqmkfvC\",\"language\":\"java\"},{\"_id\":\"7DL9criQPMMFTEdpL\",\"language\":\"javascript\"},{\"_id\":\"Mv5qSgZKTLrLt9zzW\",\"language\":\"python3\"},{\"_id\":\"9yM7zWavGagbWBnXz\",\"language\":\"ruby\"}]}}"]