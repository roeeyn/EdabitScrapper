a["{\"msg\":\"result\",\"id\":\"905\",\"result\":{\"_id\":\"Bb9PaM4B87L39SdAo\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def intersection_union(lst1, lst2):\\n\\t\",\"difficulty\":1.4505208333333333,\"familyId\":\"qKR6sxSeRpddSGyne\",\"instructions\":\"Create a function that takes in two lists and returns an **intersection list** and a **union list**.\\n\\n1. **Intersection List:** Elements shared by both.\\n2. **Union List:** Elements that exist in first or second list, or both (not exclusive OR).\\n\\nWhile the input lists may have duplicate numbers, the returned **intersection** and **union** lists should be *set-ified* - that is, contain no duplicates. Returned lists should be sorted in **ascending** order.\\n\\n```\\nList 1: [5, 6, 6, 6, 8, 9]\\nList 2: [3, 3, 4, 4, 5, 5, 8]\\n\\nIntersection: [5, 8]\\n# 5 and 8 are the only 2 numbers that exist in both lists.\\n\\nUnion: [3, 4, 5, 6, 8, 9]\\n# Each number exists in at least one list.\\n```\\n\\n### Examples\\n```\\nintersection_union([1, 2, 3, 4, 4], [4, 5, 9]) ➞ [[4], [1, 2, 3, 4, 5, 9]]\\n\\nintersection_union([1, 2, 3], [4, 5, 6]) ➞ [[], [1, 2, 3, 4, 5, 6]]\\n\\nintersection_union([1, 1], [1, 1, 1, 1]) ➞ [[1], [1]]\\n```\\n\\n### Notes\\n- Order of output should be: `[Intersection], [Union]`.\\n- Remember both output lists should be in **ascending order**.\\n- Each input list will have at least one element.\\n- If both lists are disjoint (share nothing in common), return an empty list `[]` for the intersection.\",\"lab\":\"Test.assert_equals(intersection_union([1, 2, 3, 4, 4], [4, 5, 9]), [[4], [1, 2, 3, 4, 5, 9]])\\nTest.assert_equals(intersection_union([1, 2, 3], [4, 5, 6]), [[], [1, 2, 3, 4, 5, 6]])\\nTest.assert_equals(intersection_union([1, 1], [1, 1, 1, 1]), [[1], [1]])\\nTest.assert_equals(intersection_union([5, 5], [5, 6]), [[5], [5, 6]])\\nTest.assert_equals(intersection_union([7, 8, 9, 6], [9, 7, 6, 8]), [[6, 7, 8, 9], [6, 7, 8, 9]])\\nTest.assert_equals(intersection_union([4, 1, 1, 2], [1, 4, 4, 4, 4, 4, 4]), [[1, 4], [1, 2, 4]])\",\"language\":\"python3\",\"summary\":\"Create a function takes in two lists and returns an intersection list and a union list.\\n\\nIntersection List: Elements shared by both.\\nUnion List: Elements that exist in first or second list, or both (not exclusive OR).\\n\\nWhile the input lists may have duplicate numbers, the returned intersection and union lists should be set-ified - that is, contain no duplicate\",\"tags\":[\"arrays\",\"functional_programming\"],\"timestamp\":{\"$date\":1553272625377},\"title\":\"Union and Intersection of Lists\",\"stats\":{\"completed\":{\"total\":451,\"ratings\":[2,2,2,2,2,2,2,2,2,2,0,2,1,2,1,2,2,0,1,2,1,0,1,2,2,1,1,0,1,1,2,2,1,2,2,1,2,2,1,1,1,2,1,2,2,1,2,2,1,2,0,1,1,0,2,2,1,3,1,2,2,1,1,1,2,1,2,1,2,1,0,2,2,0,1,1,1,1,2,2,1,2,1,1,0,5,2,2,2,2,2,1,1,2,2,2,1,2,0,2,1,1,2,2,2,1,1,1,1,0,1,3,0,2,0,2,1,2,2,1,0,1,1,1,3,5,0,2,0,2,2,1,2,1,2,2,0,2,2,1,2,1,2,2,1,2,2,2,1,2,1,2,2,3,2,2,1,1,0,3,1,2,1,2,2,3,1,0,2,2,2,2,2,1,2,0,3,2,1,2,2,0,2,1,0,3,2,1,1,2,2,0,2,1,2,1,2,2,0,2,2,1,2,1,1,1,1,2,1,1,2,0,2,1,0,2,1,2,2,2,2,2,2,2,2,2,0,1,2,1,1,2,1,0,2,2,0,2,0,2,2,1,2,2,0,0,5,1,2,2,2,2,1,2,1,2,1,2,2,2,2,2,3,1,2,1,2,3,0,2,2,2,1,1,1,1,2,2,1,2,1,1,0,2,1,0,1,2,1,1,2,2,2,1,3,1,2,1,2,2,2,1,1,2,2,1,3,1,2,0,0,3,2,2,1,2,1,2,2,0,1,1,0,1,0,2,2,2,0,0,2,2,1,2,2,0,0,0,2,0,2,2,2,2,1,2,0,2,1,2,2,1,1,1,2,1,2,2,1,1,2,0,0,2,1,1,2,2,1,1,2,2,1,1,0,2,2,1,2,0,0,1,2,1],\"rators\":[\"BkPgkDQGHm66X4Qai\",\"yZvzB3qFb8pkHy4dg\",\"8JyqsSbN2FJXPr3cw\",\"Jqk2uJZZxEv5wZFze\",\"gb9rvGus2Jv7bjZSs\",\"PZrzFLcwBp6mktLar\",\"mNMQvcxKSSvqqMYCH\",\"SKabuq5XuhXBugKBa\",\"qvEvDcL32a5F4Tg6c\",\"X9NeqaKpfykoscpYr\",\"nc7bRhkxgKyqusYe3\",\"nZ58gDWFhqXiZpmZQ\",\"uSh3aNxzD28jBuhxa\",\"jeuoearPPTcGPgXhf\",\"M8jrv2FfpMQp9Qzpx\",\"4HC75a4BAtjSd8jPv\",\"eq6bWgNCAXLkFj4tx\",\"tAF9Gf6PiGogbZuWs\",\"CndStS6CYLXvmneZ3\",\"nQRzZKeDKuLRf9chX\",\"qcbdDGrrf5HzPLRvQ\",\"DDrTDZeynQa4J4ZEN\",\"Ge525X3sT75K74LoD\",\"8pQJxMgsQBsf75eaj\",\"t5gr8nEXaWqrtgq6r\",\"kQH5b8MXJunh84Czq\",\"Y3KkPrBzMBgMiqaQ6\",\"XBmvGz2a28Wtuhj3N\",\"7PTKd4xtWnbL7BzL2\",\"YQRw52Dhb6yKk3oDm\",\"T3ZAuoMrJjvZwN55B\",\"XrT5a342Fohfwe4n9\",\"FikSPhcrHBpQ4CyGC\",\"AF6LgdKhEdzwgRJom\",\"ab7BsQuhDo3QgE6bh\",\"6ckDJWbyznyQQLkrP\",\"hmJar7wTPM99rX4HB\",\"byHBadxxhnF5Ht7xH\",\"EPgZSeQrPkXKnTqdG\",\"Rgdjr9tBGabXFdoXL\",\"g838geytQBJm3Kefi\",\"JEAi9mG3vvBomJ3Yu\",\"TNQ7ixK78HHTLP7it\",\"PFjMZGHNAPTkgd7tq\",\"rMa8q8fB7xyTN5R2e\",\"GpjZR7PL5GQQ4YPn6\",\"qKpormex3pwgAL8LT\",\"aXCm9vWqKwL9XFYoj\",\"ahWFxnaxt9bXSA4f3\",\"XKi8iZXBCHCaebSHh\",\"tHEH9MBHBAGvhgJGd\",\"gxdjEjj4AdrZv7jCa\",\"WkWyq9wMkZhXB6zsD\",\"PSrcg6fy835R4c5CW\",\"yrCNkFYQBEDE76eFS\",\"yAouD3PxzED8a4gap\",\"C9LKGu2g5hSijvDzA\",\"nmeyrFbZpLR74iC7j\",\"eoo54vPGzwD3HZuHC\",\"AnjjyuE9aWLzK3nkg\",\"TNMAJidLpPdH4kmBv\",\"td7qPZ7Lv4pEWT2Ya\",\"4kJMafuJWxzhDht2w\",\"PYg2boGDLrEcF3i4j\",\"3fjCCrpR2aD32sTrc\",\"6u7yc9m6HuHGbHzph\",\"5JFQgt6KFihmXfHKm\",\"WYCQt5qMw82RczA5K\",\"hsrNYf3WbexXJKhCq\",\"N2wnZXkhDH86mgjQ8\",\"ZzwR8m8Q6Gozo9ofz\",\"4y2bxsHwifCdZXAQA\",\"ae2bb4Zr7YAdN3dMu\",\"nfXGHENb5md7m355s\",\"sCnrfER8vCe4xhpB2\",\"ZGhZhnqAHiQypqZrp\",\"CssdRyc8mNPgPxsy4\",\"JiSpvq6C7azQEmENc\",\"Nj6FwgBtAXsaQwsM2\",\"gMJhLdyw3tH7L96X2\",\"3LiSLdtN58n46NEqg\",\"tczr8H3zHk2kwp8br\",\"MJMWfiW978otApbcG\",\"WBAKsQ3cdcrKxeAcp\",\"498CxrZQdThLMa7ki\",\"moFrJ4vxzxPynByzB\",\"nzx4uAPg3hCceyFPE\",\"cR3ibTMxLyEdDFCHY\",\"HQxp7NcdvF92G7bYS\",\"T2vhHPhRR96hRizq8\",\"pdheg2KrrhwWJHDZM\",\"sKfrD9gjCDHuqLzSk\",\"dKpQWv7qH2WaZXPxK\",\"i3KxTdoXY7KH88FFh\",\"6QEhBfzWmuYwm34zz\",\"jWrQpWgSshib2CyzB\",\"6fbavLhJREvHXvnaY\",\"9YtQPAffoq4WJLcAP\",\"Jg8ZSRXe3NoDMCqGu\",\"2fxapKr8XGdNeaKi2\",\"otXtuQygbcYATMZoP\",\"eDmE2DscmShjauARX\",\"8aPJNKDxXq7884eJb\",\"yr822PZmmiDDenxpB\",\"K3RacTvkWHLfzKF8i\",\"jAGLDG6WJfuy6HTMD\",\"v8iedwMBcGiN2PHGM\",\"kBmhcwkCqxiy4GwiZ\",\"3efW5qCKraPjzEfiX\",\"HqmxnQJM66Y57twhn\",\"ksafdYcNM3SFEQoW9\",\"AxDfHRFgQ8jfFbF5p\",\"K96FwtfDDN5WM4Bb7\",\"qSf5gxf5TrdadBfnA\",\"oqGkxvASXq52iTDvp\",\"DvzpcjeQsLCSZc9r9\",\"EEjNW5t4XPGFLfq3k\",\"DLai9DxpZN6p5TPRX\",\"qJZsi5rhRnWA38FbA\",\"BduXduqsYieCJPgmr\",\"bQPAxbehmAdJvMoYd\",\"u5u2YpHXiNgzDNJdX\",\"qxB9bnow4EXPHwsPj\",\"ETaoFuJzhLSJhJThj\",\"CEd9tLdXeDeNHSzys\",\"tYjQweAK2k8goR4Bq\",\"fxLjWpWbBeaYcvdgB\",\"BHp9mbAEZREsE7k8E\",\"fAoLuqbGvHn4w2PHf\",\"W4bQNKYzriYRWkGsA\",\"4tgBydK887PitgAoi\",\"yabtHTtycsWhcGBfD\",\"6ShafRStcvew4GfCh\",\"oDwPBpAD9JLWh3uWw\",\"8PwfYqoDQFThzNtvf\",\"nL6EAKGywddR3mBs3\",\"oXh8LZ7k6pWZMGZGA\",\"cw7fiCkxgzNk6HQnQ\",\"jypixRQBZc9KuYEoB\",\"C4QntmkYtB89GNtpd\",\"PqEKjCDkJtYoYuZfj\",\"hWoF9quQYAsSsFjRn\",\"bZouZFDGoQgfKHGZ7\",\"fB27mwoGWT55gbkyy\",\"X8CanMzayNyD9Db2g\",\"Nfi64Lq3Ynfqrxt5P\",\"rvvEEYKgQBfSPpJ67\",\"XbxHXmh5ZmRN2gw3K\",\"mtRvHDpeLoSGBf8zC\",\"AbrJ8hMyv5fFXG6DN\",\"DryNRN98Dj24BpgrL\",\"XjyaCd8bviTitHTwa\",\"PR89xoYsqJh6osPbn\",\"BeFnbPbMnAM2SjBdZ\",\"Xj6R2zqhgumffQCAN\",\"PXAcsKkssS2yLyDv2\",\"Bo457Fm7HpxBzs5YT\",\"2innwjWqxJHo4eRGh\",\"mxX4rH5ELYkdZ2Mbw\",\"4CFzv558qbGcpQwc4\",\"fbYfLPJQKPkXo6jWX\",\"wDMtQZjgzQPKh8g82\",\"Ycj4iTJGFyvC4bXek\",\"QnPD4Sv6W4LHc2Qng\",\"d5ELxQXSryjWXtWwB\",\"RJ6mfGK5N6pRrGRm9\",\"Yp7uvStL97cC9fKkY\",\"zHdcQydaKdxckwcEo\",\"AasGs8AeX9Lcb9xJn\",\"j2wcHGHmPCHbaQEye\",\"TTSFzTyGpi5eckkHZ\",\"dz89mduovnXegiMsS\",\"Z85ajWfZ4jDPkbvR4\",\"hnyhBFWwNCz9mDfSi\",\"orFLgPDw9H5MDzmwo\",\"zg8GmMSP2LkHBtAzy\",\"pMg2Zddm29zRGP6wg\",\"i4YM8iLfgozNR3hZ3\",\"aRqQ42J5zqCmBNd8w\",\"N7GPFEhCaiQ79MKjz\",\"w3A7cBWyAfukk6xEQ\",\"9Ly8afdtofp8DXzrt\",\"dHZqT6h4JMwk5fPC8\",\"vLrq4dEDMM2wd68Dc\",\"sz8ufn9i8zeiGWpAy\",\"hiGXnxds6zo7XsfTw\",\"aEm3Wvj2rFYRL8Lrb\",\"8LfTheFzvicameoz9\",\"Ro3ppqamSxiJv2wxP\",\"2QGRoQn2dRq3scu7k\",\"jNvegJWCk5HCtEMbK\",\"M9DhkxE77ztbJWz6e\",\"ZNnsMeNkdDhHjSrZb\",\"5kEyLPjTLrt7z2YJZ\",\"HF28xZKSLM9wEuqNg\",\"q5a96XumccZyhQNyL\",\"gJYuGdkXEWWmGRLzu\",\"KRSKj7ikX2ytWFmod\",\"Cc2Cgj4MWXZxsTooC\",\"9zBQ4k7pWXa8Jfro4\",\"kYWb8BwpKwunQkxeX\",\"EXZfPb8YH28EL8Rh9\",\"rzDxvmTafcpv33zJ9\",\"DEDniTrstQYGounXT\",\"KdNDysEsy2TW5QRJ2\",\"M8dQuMrEpP8Hc3tHN\",\"dfiq4QXp6ZofGxPH5\",\"9pzFiFK3ANLjQfnr2\",\"rgvAJFwfCeYoYnFTK\",\"6RPK2Z8fKDfG7BGmp\",\"s5M5RvgqR9BhB9JoC\",\"rzF2F7DgSjgJrneo8\",\"hHCrfaGKZGnwFPfbN\",\"MKT7khMBGXzA22ykf\",\"WHR8EHPPEpghNnpXt\",\"FzxTj4GuujhwpZM7y\",\"mfsaETo7uA4x5vqLD\",\"ahk2qiXKJA753wAJk\",\"FEYpu9RWysAgW3XnP\",\"DrkR35NqnP9NDLbq6\",\"XrqNzJ2FRG8HnGiR6\",\"ikkjHDqBHu6fT3vGL\",\"a777e8chPvJkY3tKa\",\"gSFJPsMXnqAog3Q9f\",\"dKKMvaYoJunNPk5Wa\",\"NG8PWBSjsM8mMhQEq\",\"9bQyb6rW7xfE4vgrR\",\"FRN2W8RYpJ6GPhgRy\",\"4yNLEwL2rsx4EE5Nt\",\"4rwxLqLs2mNZNg8NB\",\"cn78oJTyRvZFrJ6d6\",\"RgWhcJMQRoJP6b8Wg\",\"m6D2RuQJwrAK6WB3v\",\"7txFzDQ43vJ7qCY88\",\"2ptN2mhjFwFcHyPZd\",\"eMuCpJ2spXWkJjWNz\",\"yKttxy9JGn5Jzwuj6\",\"J5T8gZqiZXFuFDTQ7\",\"M3kk3ydZnE2ZrA9n5\",\"H4abACFDH5t8CnnyH\",\"n2BRY9X8899dcG8Bw\",\"ZrKCkX7xxGGZzauFW\",\"3cF6NXq3ZEwdkgSjb\",\"syRNbbPdLCGXbH2Gy\",\"E5iw5hyyWum9KshGA\",\"NNE5HNRXAkmhrWgyQ\",\"CwXsu25ygLEwQbmQC\",\"LCZ6JTAhBZBmWLzm8\",\"5s4qhuRJijYaDNXva\",\"YcCLwitFMAEJSnxAW\",\"zd9FLSzsGz3evKafy\",\"iojEnnY9FsMfYzp6f\",\"DoDsp3ets8frF9W3C\",\"Kv8GEg3aJZ9Cnxu6L\",\"Pe8vWpDHRuH9nSGKW\",\"rfyEkETeoS96QNH4e\",\"BWqLnHYwiP5o9KjYJ\",\"R4SjTgDnpigJYDLyL\",\"iS5BrkGLzJyPK7nKt\",\"yjtdwc2AC4jA2RWtn\",\"xwEZk3bNZoNDPJYF5\",\"Wv2vJnEj8ywNmARoF\",\"GGprTwrkjuccmrQRg\",\"i5iePG5GqhJJ8HEoB\",\"TfmBc6v8Y2kfAZjCc\",\"WzxYNYGEiP97ZeNBo\",\"tXNgbxmMDqkvLc76o\",\"w3xpYGxSeu2yKJ5mm\",\"BeC474uSi7TEceRYA\",\"uJvcvnJDboT6hARXq\",\"PtaiHYXnMwb2rWqQW\",\"AgLkwojGnqaSgEJ8r\",\"oBcs8GLX2ZFLXQy8y\",\"hRiMXDZNAzyPd5tpt\",\"ta5CrWnBCRusD2WMo\",\"a5Nd5R69uASQRLkq9\",\"J23RcmzbdtBbPCTjT\",\"6sfrP3r9ZJ7Jo5BMM\",\"6gS4E2C84vBYTYeDZ\",\"axFGc8QrcLfdPgmhi\",\"YA7SDhpgEtsqynvNL\",\"2XHmCpYz8DyPEWSTJ\",\"aAHgjuxH93tD6FBF6\",\"gbzYcDWoxXP7gHrsp\",\"jkys684AAfPRxrYaD\",\"w2HhxvSLmDhaGCAjE\",\"RehJGBFS6CYiWdjZx\",\"BBk8ZRmMsTzpKCaux\",\"p8qqFdJ3FSk5x9z3G\",\"TPhfpB5tzQWSSn67n\",\"KLmLKaJPfsYxp42p2\",\"k2Eo3wyfZZ6KxvKhN\",\"NuqGt5u3s7vJ7HBGR\",\"tpxMgkGSHwBjS95Ta\",\"mG8HqKiAQFTdRZthG\",\"gXTAie79kiw28tx5u\",\"9CoqdidjM9KbeKnHY\",\"7K2GEb5TZRtSpyyGS\",\"BrTDhPJcACL2bsrpJ\",\"b5zo7s6xrqWgQnPao\",\"6HgMANhu6WiGyXSGN\",\"QRv96jmNaYsWkxQEG\",\"kNrnnMxhFZztMTBAX\",\"5HCu9Ydd86QgHDRNP\",\"KTFxMsjaW4xgo5ajY\",\"DPi9QGLctq2y76KuE\",\"8WpvgSbQciTQWdd8T\",\"dBzwBtRjZqB98DJeB\",\"wRttWTM59y8m5mx7x\",\"N6pmP89gXiKzYB5eg\",\"CyzskHGsC6WSmYrLu\",\"dj5AyG5fWP8FdsSmZ\",\"J3upzLHuEwXH7Z2hx\",\"dYPkStFnLvAMsHSzZ\",\"cAP3n5NY64uoMwzRR\",\"8fZxjQfuXw5HMSRJM\",\"KJCDwGkoXh8qtbbKr\",\"d8qtzoLB264iP8tdY\",\"RGMbFMZXJr7DhcAJy\",\"mmt7jwqbmSjzRSvqh\",\"qAby4AWXmTNeusvg3\",\"5XiuAqicKD4hBdu63\",\"DpnYcMphntjsQ96qg\",\"axdSNLZpiCDF8RS6n\",\"sHjfbGQGLHE6JR6qu\",\"xGpqoGZ47sYLJ4ty9\",\"3pxHTZBsv7MKzFG6Y\",\"HuNF3xTBzmatyGSTm\",\"ji5f27FPz4wRRF6Ls\",\"C2AfMipCicfD58WJ9\",\"5hQnRWiKkhgKJXNMP\",\"o4ixjQGSaYqA2JoM4\",\"6ciNvoAPMGrZhWYC3\",\"NzbRqGWspQnWMoDrF\",\"Bx68gx6euL4i9BS6D\",\"2H7qphwdz7PPoFKgc\",\"Raoy5bERhadz6GaLL\",\"qo8MAEp6hoAi4MJip\",\"buX4mCQhtXCfBjeno\",\"YRAzEBJoLvSaiPtYx\",\"5S9nX4rKsnCcnv4Cz\",\"eYfPWvZwnJQkHbSTK\",\"GGdmhAvxXhqhhibJN\",\"utTuvGdmu2sBHWBhQ\",\"CTKmXtrqDYqJBnuy8\",\"FYC7WcFytrvY3ofNt\",\"whm4vkxLMtG9YyobP\",\"aJYivYsninxvP2hxZ\",\"yod5YhKtPqw2GfG9B\",\"Ds7L5bksw2QRHjrKL\",\"EfxwqhYdapX3dMQC2\",\"srJ34BaybkQh3qRkM\",\"8BFSTCnoe2QggN64c\",\"XBTeQ9TMCFZQ2eMNQ\",\"T6iBEE2jp7f7iEF2P\",\"ey3CASd6Je5LEJzfB\",\"wjc4iejpErBhxWwHo\",\"66a9xX73nmTEuKs9k\",\"CHvzhtXnv8HTbPQ56\",\"AFfw7cGg83uYk2Miy\",\"PC3pLs36zNzpRDSuE\",\"AJexRBN9cYQmqvYu6\",\"c2q7mY39z5JPEMCaM\",\"mvJBakQ35CWAnbbEZ\",\"2PufnQcsHsfymufX3\",\"Z7mDto6WsmGCtWZmA\",\"sbJcFfQjQ59Wfg4Cd\",\"GJmKcqu7xppQyBaTt\",\"R6YxHWAiLgKwy5YvC\",\"rrSC943cCKNG48sH4\",\"K6MfKMytoJJuSGewP\",\"RoGGD5cpHb4ftdLDv\",\"X4rzfxGgxx6CS7Bpz\",\"3GsCTT6cMuuSg2d4c\",\"2HfNkb2SoqdyjKW3o\",\"LQxof8pGabGuWP7Gn\",\"bv4ycSophchSEFoK9\",\"qzXAMXsHZGT8o5hTA\",\"JhX7jvtpwNyxcc39m\",\"hR7GMiqGap4CzEWSy\",\"2iFe3EHEH2YdhSKrs\",\"XD5nmvKQchKezPXhy\",\"a2Kmh6ekWqQQooHiQ\",\"9gJsF5apWJGWZJprn\",\"Afnps7TJQuS9sipMb\",\"EcpgCvpRthBhBr8eG\",\"pduNK68oazqQTtbLp\",\"4TmgHkn5vqyHK3sYC\",\"EHtTFoDbt722AH667\",\"T6Rm8mREPMZSftzrC\",\"ZM59vGfctytpqJBQL\",\"d9LBRxvADNBB5QJMB\",\"dzS6WBTMHyFEag6Fp\",\"RZssSMwJcvA6JDnDD\",\"4Lwjr34ypKNQNQCar\",\"suArq5BbSy7gD6xri\",\"GTKsdeEihE636Le9i\",\"hpT9yYe5R45poHrYR\",\"AQSqD9oNv2uPfxZCR\",\"B4y8aoyXJtskYPFEL\",\"qB6KSTYC6H2TQEQY6\",\"Qyfyyw6oC4EHAndzo\",\"rCrbqMiaGPgHYTNxu\",\"mw9464S5dnenqzvpm\",\"pPpmP7xeJzGgK362R\",\"5QN8R22z43SrwoHDz\",\"S9hHPiybdTKyuELsn\",\"Zyg9xAm6EuH4u3Lo5\",\"Wi4H6ayKsNDWWQCG5\",\"BJp2WkwLWGHHB5oQW\",\"Ncn7Qn2LbdsiJnfFk\",\"ruzwBPphPDRgLXdnP\",\"vAbK8sCfKyFC78HYg\",\"jWbd7SYDzLPjc9EDh\",\"8uiLiJcmWxWe6qw65\"],\"quality\":[5,4,5,4,4,5,5,5,5,4,4,5,5,5,5,5,4,5,5,5,5,5,4,5,5,5,5,4,5,5,5,5,1,5,5,5,5,5,5,5]},\"tests\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"instructions\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.7,\"family\":[{\"_id\":\"z7AALduSyac3ZphFA\",\"language\":\"cpp\"},{\"_id\":\"MfAkm7CkWqepAZTBM\",\"language\":\"javascript\"},{\"_id\":\"Bb9PaM4B87L39SdAo\",\"language\":\"python3\"},{\"_id\":\"kp6zcuiJkGQ8qaQSr\",\"language\":\"ruby\"}]}}"]