a["{\"msg\":\"result\",\"id\":\"2247\",\"result\":{\"_id\":\"zbqRGhB3sTDPgySiv\",\"author\":\"jota\",\"authorId\":\"vTfyrr4pGddp8rbXc\",\"code\":\"from math import factorial\\n\\ndef mod(base, key):\\n    loop = 0\\n    key = factorial(key)\\n    for i in range(base):\\n        loop += factorial(i) % key\\n    return loop % key\\n\",\"difficulty\":3.5,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"eB8dDdGNWAXLwiTjX\",\"instructions\":\"Modify the inefficient code in the **Code** tab so it can pass the tests.\\n\\n### Examples\\n```\\nmod(1, 1) ➞ 0\\n\\nmod(5, 5) ➞ 34\\n\\nmod(13, 27 ) ➞ 522956314\\n\\nmod(8000, 30) ➞ 9157958657951075573395300940314\\n```\\n\\n### Notes\\n- The variables will be natural numbers.\\n- If necessary, there is a hint in the **Tests** tab.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"import time\\ntic = time.perf_counter()\\nTest.assert_equals(mod(1, 1), 0)\\nTest.assert_equals(mod(5, 5), 34)\\nTest.assert_equals(mod(13, 27) , 522956314)\\nTest.assert_equals(mod(8000, 30), 9157958657951075573395300940314)\\nTest.assert_equals(mod(1000000, 31), 274410818470142134209703780940314)\\nTest.assert_equals(mod(1000001, 42), 34289376947494122614363304694584807557656420940314)\\n\\n\\n\\n\\n\\n\\n\\n\\n\\\"Hint\\\"\\nTest.assert_equals(mod(50, 45), 2720126133346522977702138448994068984204397080420940314)\\nTest.assert_equals(mod(45, 50), 2720126133346522977702138448994068984204397080420940314)\\nprint('t = {:.9f} sec'.format(time.perf_counter() - tic))\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[5,5,5,5,5,4,3,5,2,2,0,4,2,1,1,5,5,3,2,4,5,4,1,2,4,5,3,5,5,3,5,2],\"rators\":[\"vTfyrr4pGddp8rbXc\",\"aEm3Wvj2rFYRL8Lrb\",\"8PwfYqoDQFThzNtvf\",\"n2BRY9X8899dcG8Bw\",\"bJxaKHJqR82EWw8Su\",\"SopbmhtH8HiaSGGDJ\",\"rcBdBt8oq5uwENDmj\",\"roHTHRWkWPoCy9eLn\",\"8KSqAnTHDMSuMiR2c\",\"qr2PZwbGhwcA4mNzQ\",\"Tg24gZyPmk8uDXcBY\",\"fSQSHjW3e72MrWxbD\",\"SGhPxX5bHGL8zZqtt\",\"J23RcmzbdtBbPCTjT\",\"58M252WF7SPRinfBx\",\"mH5AfrrfASMdRvhtK\",\"eHcgvkTGsH7ZziqBo\",\"8sNv5PTHa7XQ8bNqR\",\"yjtdwc2AC4jA2RWtn\",\"2PufnQcsHsfymufX3\",\"bJaPCBx63YxdJAuTS\",\"XHShZ3WMPgGEA2vkR\",\"iS5BrkGLzJyPK7nKt\",\"MpfytGFYF77emJ3cT\",\"hySpcNb4eGY7eGe79\",\"gJYuGdkXEWWmGRLzu\",\"38h6CDqeBePDiejwB\"],\"total\":31,\"quality\":[]},\"flags\":0},\"summary\":\"Modify the inefficient code in the Code tab so it can pass the tests.\\n\\nExamples\\nmod(1, 1) ➞ 1\\n\\nmod(5, 5) ➞ 34\\n\\nmod(13, 27 ) ➞ 522956314\\n\\nmod(8000, 30) ➞ 9157958657951075573395300940314\\n\\nNotes\\nThe variables will be natural numbers.\\nIf necessary, there is a hint in the Tests tab.\",\"tags\":[\"math\",\"bugs\"],\"timestamp\":{\"$date\":1594787900699},\"title\":\"Modular Arithmetic (Part #2)\",\"quality\":0,\"family\":[{\"_id\":\"zbqRGhB3sTDPgySiv\",\"language\":\"python3\"}]}}"]