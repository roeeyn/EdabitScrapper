a["{\"msg\":\"result\",\"id\":\"403\",\"result\":{\"_id\":\"yRxAeYFMgykFjjmCz\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"scores = {\\\"A\\\": 100, \\\"B\\\": 14, \\\"C\\\": 9, \\\"D\\\": 28, \\\"E\\\": 145, \\\"F\\\": 12, \\\"G\\\": 3,\\n          \\\"H\\\": 10, \\\"I\\\": 200, \\\"J\\\": 100, \\\"K\\\": 114, \\\"L\\\": 100, \\\"M\\\": 25,\\n          \\\"N\\\": 450, \\\"O\\\": 80, \\\"P\\\": 2, \\\"Q\\\": 12, \\\"R\\\": 400, \\\"S\\\": 113, \\\"T\\\": 405,\\n          \\\"U\\\": 11, \\\"V\\\": 10, \\\"W\\\": 10, \\\"X\\\": 3, \\\"Y\\\": 210, \\\"Z\\\": 23}\\n\\ndef name_score(name):\\n\\t\",\"difficulty\":0.7247706422018348,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"AZdFmqrmmpFiMgQuL\",\"instructions\":\"Create a function that takes a string of `name` and checks how much good is the given name. A preloaded dictionary of alphabet `scores` is available in the **Code** tab. Add up the letters of your name to get the total score.\\n\\n```\\nscores = {\\\"A\\\": 100, \\\"B\\\": 14, \\\"C\\\": 9, \\\"D\\\": 28, \\\"E\\\": 145, \\\"F\\\": 12, \\\"G\\\": 3,\\n          \\\"H\\\": 10, \\\"I\\\": 200, \\\"J\\\": 100, \\\"K\\\": 114, \\\"L\\\": 100, \\\"M\\\": 25,\\n          \\\"N\\\": 450, \\\"O\\\": 80, \\\"P\\\": 2, \\\"Q\\\": 12, \\\"R\\\": 400, \\\"S\\\": 113,\\n          \\\"T\\\": 405, \\\"U\\\": 11, \\\"V\\\": 10, \\\"W\\\": 10, \\\"X\\\": 3, \\\"Y\\\": 210, \\\"Z\\\": 23}\\n```\\n\\nReturn your result as per the following rules:\\n\\n```\\nscore <= 60:   \\\"NOT TOO GOOD\\\"\\n\\n61 <= score <= 300:  \\\"PRETTY GOOD\\\"\\n\\n301 <= score <= 599:  \\\"VERY GOOD\\\"\\n\\nscore >= 600:  \\\"THE BEST\\\"\\n```\\n\\n### Examples\\n```\\nname_score(\\\"MUBASHIR\\\") ➞ \\\"THE BEST\\\"\\n\\nname_score(\\\"YOU\\\") ➞ \\\"VERY GOOD\\\"\\n\\nname_score(\\\"MATT\\\") ➞ \\\"THE BEST\\\"\\n\\nname_score(\\\"PUBG\\\") ➞ \\\"NOT TOO GOOD\\\"\\n```\\n\\n### Notes\\nN/A\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(name_score('MUBASHIR'), \\\"THE BEST\\\")\\nTest.assert_equals(name_score('MATT'), \\\"THE BEST\\\")\\nTest.assert_equals(name_score('PAKISTAN'), \\\"THE BEST\\\")\\nTest.assert_equals(name_score('AIRFORCE'), \\\"THE BEST\\\")\\nTest.assert_equals(name_score('GUV'), 'NOT TOO GOOD')\\nTest.assert_equals(name_score('PUBG'),\\\"NOT TOO GOOD\\\")\\nTest.assert_equals(name_score('ME'), \\\"PRETTY GOOD\\\")\\nTest.assert_equals(name_score('BOB'),\\\"PRETTY GOOD\\\")\\nTest.assert_equals(name_score('JLJ'), 'PRETTY GOOD')\\nTest.assert_equals(name_score('YOU'), 'VERY GOOD')\\nTest.assert_equals(name_score('FABIO'),\\\"VERY GOOD\\\")\\nTest.assert_equals(name_score('ROBBY'), 'THE BEST')\\nTest.assert_equals(name_score('BILL GATES'), \\\"THE BEST\\\")\\n# Mubashir\",\"language\":\"python3\",\"quality\":4.482758620689655,\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,1,1,2,0,1,0,0,1,0,2,0,0,0,0,1,0,2,2,1,0,2,0,0,0,1,1,0,1,2,0,5,0,0,0,0,0,0,0,0,2,1,2,2,1,1,4,0,1,0,0,0,0,1,0,0,0,0,0,1,1,0,1,2,0,0,1,0,1,1,1,2,1,1,0,0,1,0,0,1,0,0,0,1,0,1,0,1,0,1,1,0,2,2,0,5,2,0,1,0,0,0,0,0,1],\"quality\":[5,5,5,5,5,5,5,5,5,2,5,4,4,4,5,5,4,4,5,5,3,5,3,5,4,5,5,3,5],\"rators\":[\"T6iBEE2jp7f7iEF2P\",\"QRv96jmNaYsWkxQEG\",\"p8qqFdJ3FSk5x9z3G\",\"wRttWTM59y8m5mx7x\",\"gb9rvGus2Jv7bjZSs\",\"eYfPWvZwnJQkHbSTK\",\"FEYpu9RWysAgW3XnP\",\"Yp7uvStL97cC9fKkY\",\"iS5BrkGLzJyPK7nKt\",\"DPi9QGLctq2y76KuE\",\"PXAcsKkssS2yLyDv2\",\"AXcnPX68zdMiLNSmu\",\"Jqk2uJZZxEv5wZFze\",\"AFfw7cGg83uYk2Miy\",\"N2wnZXkhDH86mgjQ8\",\"Fk9kLwoG4Brf4KsKf\",\"rfyEkETeoS96QNH4e\",\"ghMkPtdFCpM6w8nax\",\"oBcs8GLX2ZFLXQy8y\",\"jNvegJWCk5HCtEMbK\",\"gJYuGdkXEWWmGRLzu\",\"YcCLwitFMAEJSnxAW\",\"DEDniTrstQYGounXT\",\"buX4mCQhtXCfBjeno\",\"yjtdwc2AC4jA2RWtn\",\"pPpmP7xeJzGgK362R\",\"zd9FLSzsGz3evKafy\",\"2MjzJ7yxh3eT3xbng\",\"q6QsMYNMpPNtmyTeW\",\"XD5nmvKQchKezPXhy\",\"StNu7DPyTgEStZsMY\",\"PC3pLs36zNzpRDSuE\",\"srJ34BaybkQh3qRkM\",\"5HCu9Ydd86QgHDRNP\",\"J3upzLHuEwXH7Z2hx\",\"Ds7L5bksw2QRHjrKL\",\"fTNQmMvTZhhiGBCMe\",\"eMuCpJ2spXWkJjWNz\",\"J5T8gZqiZXFuFDTQ7\",\"JS3hNM3XXkxPdg3yk\",\"j7ebNFtte6fSkMWjj\",\"XujK3rHd3JcM9TLJy\",\"cR3ibTMxLyEdDFCHY\",\"gjiu8kLnHYxe4HoBN\",\"uvLimfW9x3bCp7huQ\",\"cvgEJm7NBiD78aTxM\",\"3cF6NXq3ZEwdkgSjb\",\"MXGuntvz3byrP6WJc\",\"qAby4AWXmTNeusvg3\",\"8JyqsSbN2FJXPr3cw\",\"YRAzEBJoLvSaiPtYx\",\"CHvzhtXnv8HTbPQ56\",\"iojEnnY9FsMfYzp6f\",\"kjvgTyRFyKHv44DcH\",\"NrRa4TS6uZR9xuXRt\",\"aEm3Wvj2rFYRL8Lrb\",\"2QGRoQn2dRq3scu7k\",\"JKbEBybAsiKrmcqof\",\"66a9xX73nmTEuKs9k\",\"XrqNzJ2FRG8HnGiR6\",\"tAF9Gf6PiGogbZuWs\",\"LQxof8pGabGuWP7Gn\",\"a777e8chPvJkY3tKa\",\"Wpn95NqWxncQrwNgz\",\"kdDbth8KuJDcuRiqj\",\"hN53sj2WNe3A9piMi\",\"YmQb9Mo4Xcg2vzgbn\",\"4TmgHkn5vqyHK3sYC\",\"9Ly8afdtofp8DXzrt\",\"mvJBakQ35CWAnbbEZ\",\"jgyuzt5BpA3ohHG96\",\"NcnGLrijo3jxE9WFa\",\"i5iePG5GqhJJ8HEoB\",\"T6Rm8mREPMZSftzrC\",\"zC8WrPp5BC6c2exrW\",\"pwWtbXEjzuvrhEGwt\",\"jkbavR2ATFJcpmo8M\",\"sbJcFfQjQ59Wfg4Cd\",\"JiSpvq6C7azQEmENc\",\"AasGs8AeX9Lcb9xJn\",\"eHcgvkTGsH7ZziqBo\",\"yAouD3PxzED8a4gap\",\"9pzFiFK3ANLjQfnr2\",\"HqmxnQJM66Y57twhn\",\"EfxwqhYdapX3dMQC2\",\"Afnps7TJQuS9sipMb\",\"sHjfbGQGLHE6JR6qu\",\"sDRY37TfoncsA2FSR\",\"fdyejapW3NWN7utPX\",\"XbxHXmh5ZmRN2gw3K\",\"o4ixjQGSaYqA2JoM4\",\"MKT7khMBGXzA22ykf\",\"iYXdNw7tKcgA3QwBX\",\"gKnWjDjwrJh7MK2df\",\"dYPkStFnLvAMsHSzZ\",\"9LrF5o2TK2iE8BZJh\",\"d9LBRxvADNBB5QJMB\",\"mxX4rH5ELYkdZ2Mbw\",\"Cg3LKtEAJpsrdWroG\",\"TCvpT4EPb8qNssNB7\",\"5QN8R22z43SrwoHDz\",\"B4y8aoyXJtskYPFEL\",\"dzS6WBTMHyFEag6Fp\",\"hRfdHT8bWztZuCqzi\",\"AMpQSjKsRqhCDyS2j\",\"arWdYjT3J9QKzoPLd\",\"FiaTpm7ehfDv43wSG\",\"x2Cz7S8rCKJqCE3Xe\",\"wjc4iejpErBhxWwHo\",\"afvP29FhRou2bTaav\",\"PTDFuxAzou7W6asWt\",\"5nbHH4eApn6So9h2n\",\"rF97GDLqCgynr7BaD\",\"vAbK8sCfKyFC78HYg\",\"G5GDMsf9eAdib7cew\",\"tR9grPBLncwacBTzr\",\"M2gFMJkocQSY6bsFR\",\"fMp8sPsKSECdfgF9j\",\"BdnE4RS5puoxo92mA\",\"FRN2W8RYpJ6GPhgRy\",\"tc2npP9qWerEx6apF\",\"hi6Gc7mqptfntfGFW\",\"sGX5tsrgifN9ykA4z\",\"GMuoSiWT8XoLax5Hj\",\"Ne8mK9DDHG8TRkoxG\",\"QN4FPwhiak7Pf8kn6\",\"rrSC943cCKNG48sH4\",\"Wi4H6ayKsNDWWQCG5\",\"mdRQaGT98ycMt87S2\",\"x6zWWvmst3aGNr3Cr\",\"sMcFMPkMJC4Kh6ymj\",\"jWbd7SYDzLPjc9EDh\",\"7HAL7H6NJmc4NC8Q5\"],\"total\":143},\"flags\":1},\"summary\":\"Create a function that takes a string of name and checks how much good is the given name. A preloaded dictionary of alphabet scores is available in the Code tab. Add up the letters of your name to get the total score.\\n\\nscores = {\\\"A\\\": 100, \\\"B\\\": 14, \\\"C\\\": 9, \\\"D\\\": 28, \\\"E\\\": 145, \\\"F\\\": 12, \\\"G\\\": 3,\\n          \\\"H\\\": 10, \\\"I\\\": 200, \\\"J\\\": 100, \\\"K\\\": 114, \\\"L\\\": 100, \\\"M\\\": 25,\",\"tags\":[\"strings\",\"validation\",\"interview\",\"language_fundamentals\",\"objects\"],\"timestamp\":{\"$date\":1610428440611},\"title\":\"How Good is Your Name?\",\"family\":[{\"_id\":\"M9KuMowrYvH24Jwio\",\"language\":\"javascript\"},{\"_id\":\"yRxAeYFMgykFjjmCz\",\"language\":\"python3\"},{\"_id\":\"WmmSKRFw49xFjLes7\",\"language\":\"ruby\"}]}}"]