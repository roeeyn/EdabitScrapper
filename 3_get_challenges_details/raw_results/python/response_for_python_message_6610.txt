a["{\"msg\":\"result\",\"id\":\"2014\",\"result\":{\"_id\":\"5xPh4eEAtpMdXNoaH\",\"author\":\"Evgeny SH\",\"authorId\":\"8PwfYqoDQFThzNtvf\",\"code\":\"def longest_palindrome(s):\\n\\t\",\"difficulty\":2.8076923076923075,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"wCuP64zphb8ZLMv6K\",\"instructions\":\"Given a string `s`, return the length of the longest palindrome that can be built with those letters.\\n\\n### Examples\\n```\\nlongest_palindrome(\\\"a\\\") ➞ 1\\n\\nlongest_palindrome(\\\"bb\\\") ➞ 2\\n\\nlongest_palindrome(\\\"abccccdd\\\") ➞ 7\\n\\nlongest_palindrome(\\\"\\\") ➞ 0\\n```\\n\\n### Notes\\nN/A\",\"isFree\":false,\"isHidden\":false,\"lab\":\"from time import perf_counter\\nfrom random import randint, shuffle\\ntic = perf_counter()\\n\\nTest.assert_equals(longest_palindrome(\\\"abccccdd\\\"), 7)\\nTest.assert_equals(longest_palindrome(\\\"a\\\"), 1)\\nTest.assert_equals(longest_palindrome(\\\"bb\\\"), 2)\\nTest.assert_equals(longest_palindrome(\\\"\\\"), 0)\\n\\nt_fun = 0\\nfor _ in range(20):\\n    expected, lst_w, set_w, odd = 0, [], set(), False\\n    for _ in range(randint(0, 20)):\\n        idx_c = randint(97, 122)\\n        if idx_c not in set_w:\\n            len_c = randint(0, 20)\\n            if len_c % 2:\\n                expected += len_c - 1\\n                if not odd:\\n                    odd = True\\n            else:\\n                expected += len_c\\n            set_w.add(idx_c)\\n            lst_w += [idx_c] * len_c\\n    shuffle(lst_w)\\n    shuffle(lst_w)\\n    tic_f = perf_counter()\\n    \\\"\\\"\\\"function call\\\"\\\"\\\"\\n    Test.assert_equals(longest_palindrome(\\\"\\\".join(map(chr, lst_w))),\\n                       expected + odd)\\n    t_fun += perf_counter() - tic_f\\n\\nprint('t_func = {:.6f}'.format(t_fun))\\nprint('t_total = {:.6f}'.format(perf_counter() - tic))\",\"language\":\"python3\",\"quality\":0,\"stats\":{\"completed\":{\"ratings\":[3,3,3,3,3,3,3,5,1,2,1,4,3,4,1,3,3,4,1,2,3,3,4,0,3,5],\"quality\":[],\"rators\":[\"8PwfYqoDQFThzNtvf\",\"xn7uGNKeAwPEkP9oA\",\"5dHucvf2qBYyKim7X\",\"aEm3Wvj2rFYRL8Lrb\",\"Ecg4m7srYGgZsb4Ck\",\"HF28xZKSLM9wEuqNg\",\"vTfyrr4pGddp8rbXc\",\"8JyqsSbN2FJXPr3cw\",\"buX4mCQhtXCfBjeno\",\"8sNv5PTHa7XQ8bNqR\",\"iS5BrkGLzJyPK7nKt\",\"s5M5RvgqR9BhB9JoC\",\"iojEnnY9FsMfYzp6f\",\"yjtdwc2AC4jA2RWtn\",\"gb9rvGus2Jv7bjZSs\",\"AasGs8AeX9Lcb9xJn\",\"2PufnQcsHsfymufX3\",\"MpfytGFYF77emJ3cT\",\"T6iBEE2jp7f7iEF2P\",\"tAF9Gf6PiGogbZuWs\",\"aFYzioHvZPvPaunsg\"],\"total\":25},\"flags\":0},\"summary\":\"Given a string s, return the length of the longest palindrome that can be built with those letters.\\n\\nExamples\\nlongest_palindrome(\\\"a\\\") ➞ 1\\n\\nlongest_palindrome(\\\"bb\\\") ➞ 2\\n\\nlongest_palindrome(\\\"abccccdd\\\") ➞ 7\\n\\nlongest_palindrome(\\\"\\\") ➞ 0\\n\\nNotes\\nN/A\",\"tags\":[\"loops\",\"strings\"],\"timestamp\":{\"$date\":1604303741750},\"title\":\"Longest Palindrome\",\"family\":[{\"_id\":\"5xPh4eEAtpMdXNoaH\",\"language\":\"python3\"}]}}"]