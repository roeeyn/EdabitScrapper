a["{\"msg\":\"result\",\"id\":\"1529\",\"result\":{\"_id\":\"37BFkDdipm8qCk2WA\",\"author\":\"jamiea\",\"authorId\":\"2rc86eoe88DLhFeJD\",\"code\":\"def check_pass(username, password):\\n\\t\",\"difficulty\":2.0833333333333335,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"3XjJRnexRn63hF6Kd\",\"instructions\":\"Write a function that takes a username and password and checks the list `user_pass_db` for a match. The list stores the passwords as a hash using the SHA1 algorithm. Return `True` for a match and `False` otherwise.\\n\\n### Examples\\n```\\nuser_pass_db = [{\\\"username\\\" : \\\"myUsername\\\", \\\"pass_hash\\\" : \\\"5413ee24723bba2c5a6ba2d0196c78b3ee4628d1\\\"}]\\n\\ncheck_pass(\\\"myUsername\\\", \\\"myPassword\\\") ➞ True\\n\\ncheck_pass(\\\"myUsername\\\", \\\"wrongPassword\\\") ➞ False\\n```\\n\\n### Notes\\nN/A\",\"isFree\":false,\"isHidden\":false,\"lab\":\"user_pass_db = [{\\\"username\\\" : \\\"tony\\\", \\\"pass_hash\\\" : \\\"11725d3f4588325f1c90c50348624dcc55978f39\\\"},\\n\\t{\\\"username\\\" : \\\"jason\\\", \\\"pass_hash\\\" : \\\"5a6d719f958b1a610712f8e342ef0a4dd4b80a35\\\"},\\n\\t{\\\"username\\\" : \\\"lola\\\", \\\"pass_hash\\\" : \\\"7dda6e1b3988b488b0821e24732ca42d6b72f0ce\\\"},\\n\\t{\\\"username\\\" : \\\"dan\\\", \\\"pass_hash\\\" : \\\"ec09d3b165aeabf77f5c9436c2d644b6e2f31ba9\\\"}]\\n\\nTest.assert_equals(check_pass(\\\"lola\\\",\\\"jimbob\\\"), True)\\nTest.assert_equals(check_pass(\\\"tony\\\", \\\"hexagon\\\"), True)\\nTest.assert_equals(check_pass(\\\"jason\\\", \\\"tyrannosaurus\\\"), True)\\nTest.assert_equals(check_pass(\\\"dan\\\", \\\"FranklinPierce123\\\"), True)\\nTest.assert_equals(check_pass(\\\"somebot\\\", \\\"admin123\\\"), False)\\nTest.assert_equals(check_pass(\\\"lola\\\",\\\"wrongpass\\\"), False)\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,3,2,1,2,3,3,2,3,4,1,2,2,3,3,1,1,3,3,1,0,3,1,2,3,3,3,3,1,3,3,0,0,5,1,0,2,3,2,2,1,3,0,3],\"rators\":[\"tAF9Gf6PiGogbZuWs\",\"s5M5RvgqR9BhB9JoC\",\"gb9rvGus2Jv7bjZSs\",\"3pxHTZBsv7MKzFG6Y\",\"gJYuGdkXEWWmGRLzu\",\"8PwfYqoDQFThzNtvf\",\"ZNnsMeNkdDhHjSrZb\",\"YRstQuthRkFeBiXug\",\"AasGs8AeX9Lcb9xJn\",\"aEm3Wvj2rFYRL8Lrb\",\"LQxof8pGabGuWP7Gn\",\"FxJxxwowtXYCaLaeD\",\"n2BRY9X8899dcG8Bw\",\"Z4M3NAa4TXquMNkHe\",\"ZsHZ6a5qLfC8m8EyY\",\"yjtdwc2AC4jA2RWtn\",\"9CoqdidjM9KbeKnHY\",\"DYDJTyGgKFnBRLm2r\",\"qD2LrwaDrSdiybLKY\",\"d8qtzoLB264iP8tdY\",\"q6peoEWzrwZzogT5w\",\"ZNoDkquWeerfZoefX\",\"gojReckJvzYvoHqSu\",\"QRv96jmNaYsWkxQEG\",\"xn7uGNKeAwPEkP9oA\",\"dkcmCKwqApX5jBggc\",\"cjN86MMHPvsG3PvdW\",\"Yp7uvStL97cC9fKkY\",\"LfDeQBAH37L7wgT4Z\",\"ySLw3SQwWkH9SBJiK\",\"gXTAie79kiw28tx5u\",\"oBcs8GLX2ZFLXQy8y\",\"J3upzLHuEwXH7Z2hx\",\"DPi9QGLctq2y76KuE\",\"XNmN6ztj36a7eChbD\",\"Jqk2uJZZxEv5wZFze\",\"iS5BrkGLzJyPK7nKt\",\"qAby4AWXmTNeusvg3\",\"iojEnnY9FsMfYzp6f\",\"u5u2YpHXiNgzDNJdX\",\"yr822PZmmiDDenxpB\",\"w67KfQgZ6WAeY7K4Y\",\"GGdmhAvxXhqhhibJN\",\"fbr22rabEJMfBp7vD\",\"J5T8gZqiZXFuFDTQ7\",\"BrTDhPJcACL2bsrpJ\",\"gKnWjDjwrJh7MK2df\",\"2PufnQcsHsfymufX3\",\"9pzFiFK3ANLjQfnr2\",\"yod5YhKtPqw2GfG9B\",\"CJxPyhJirydwiaj7x\",\"8sNv5PTHa7XQ8bNqR\",\"Ds7L5bksw2QRHjrKL\",\"T6iBEE2jp7f7iEF2P\",\"DEDniTrstQYGounXT\"],\"total\":58,\"quality\":[5,2,5,3,3,5,1,3,5,5,5,5]},\"flags\":0},\"summary\":\"Write a function that takes a username and password and checks the list for a match. The list stores the passwords as a hash using the SHA1 algorithm. Return True for a match and False otherwise.\\n\\nExamples\\nuserpassdb = [{\\\"username\\\" : \\\"myUsername\\\", \\\"pass_hash\\\" : \\\"5413ee24723bba2c5a6ba2d0196c78b3ee4628d1\\\"}]\\n\\ncheck_pass(\\\"myUsername\\\", \\\"myPassword\\\") ➞ True\\n\\ncheck_p\",\"tags\":[\"cryptography\",\"arrays\",\"conditions\",\"validation\"],\"timestamp\":{\"$date\":1591271564133},\"title\":\"Check Password Hash\",\"quality\":3.9166666666666665,\"family\":[{\"_id\":\"Ey7aH6GSx5ZzfQzpQ\",\"language\":\"javascript\"},{\"_id\":\"37BFkDdipm8qCk2WA\",\"language\":\"python3\"}]}}"]