a["{\"msg\":\"result\",\"id\":\"903\",\"result\":{\"_id\":\"KcnQtNoX5uC6PzpEF\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"def check_sum(lst, n):\\n\\t\",\"difficulty\":1.4545454545454546,\"familyId\":\"q4m36SgRgQpdteToY\",\"instructions\":\"Create a function that takes a list of numbers `lst` and a number `n`. Return `True` if the sum of **any two elements** is equal to the given number. Otherwise, return `False`.\\n\\n### Examples\\n```\\ncheck_sum([10, 12, 4, 7, 9, 11], 16) ➞ True\\n\\ncheck_sum([4, 5, 6, 7, 8, 9], 13) ➞ True\\n\\ncheck_sum([0, 98, 76, 23], 174) ➞ True\\n\\ncheck_sum([0, 9, 7, 23, 19, 18, 17, 66], 39) ➞ False\\n\\ncheck_sum([2, 8, 9, 12, 45, 78], 1) ➞ False\\n```\\n\\n### Notes\\nN/A\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(check_sum([10, 15, 3, 7], 17), True)\\nTest.assert_equals(check_sum([4, 5, 6, 7, 8, 9], 13), True)\\nTest.assert_equals(check_sum([2, 8, 9, 12, 45, 78], 1), False)\\nTest.assert_equals(check_sum([10, 12, 4, 7, 9, 11], 16), True)\\nTest.assert_equals(check_sum([0, 98, 76, 23], 174), True)\\nTest.assert_equals(check_sum([0, 9, 7, 23, 19, 18, 17, 66], 39), False)\",\"language\":\"python3\",\"quality\":4.787234042553192,\"summary\":\"Create a function that takes a list of numbers lst and a number n. Return True if the sum of any two elements is equal to the given number. Otherwise, return False.\\n\\nExamples\\ncheck_sum([10, 12, 4, 7, 9, 11], 16) ➞ True\\n\\ncheck_sum([4, 5, 6, 7, 8, 9], 13) ➞ True\\n\\ncheck_sum([0, 98, 76, 23], 174) ➞ True\\n\\ncheck_sum([0, 9, 7, 23, 19, 18, 17, 66], 39) ➞ False\\n\\ncheck_\",\"tags\":[\"arrays\",\"validation\",\"numbers\",\"loops\"],\"timestamp\":{\"$date\":1604700345166},\"title\":\"Sum of Two Numbers  in List Equal to Given Number\",\"stats\":{\"completed\":{\"total\":177,\"ratings\":[1,1,1,1,1,3,2,0,1,2,2,2,0,2,2,3,2,2,2,3,0,1,1,1,2,2,1,0,2,5,2,2,2,2,1,1,2,0,0,1,1,0,3,2,2,2,2,2,0,0,0,2,2,1,2,3,0,1,1,0,1,0,2,1,2,1,3,2,1,2,1,2,1,2,2,0,1,2,2,2,1,2,2,2,2,2,1,1,2,2,1,2,0,1,2,1,1,0,2,1,2,1,1,0,2,2,2,2,2,2,2,2,1,1,2,1,0,2,1,1,2],\"quality\":[5,5,5,5,4,5,5,5,5,5,5,5,5,5,4,3,4,5,5,5,5,5,5,5,5,5,5,4,5,4,5,5,5,4,5,5,5,5,5,5,5,4,5,5,5,4,5],\"rators\":[\"iS5BrkGLzJyPK7nKt\",\"Yp7uvStL97cC9fKkY\",\"5XiuAqicKD4hBdu63\",\"oDF2pTdLqBfqT3J5T\",\"PrrCPGQQprdqKbg4Z\",\"8skpM9WJWcQkBfcEd\",\"zd9FLSzsGz3evKafy\",\"QRv96jmNaYsWkxQEG\",\"J3upzLHuEwXH7Z2hx\",\"gJYuGdkXEWWmGRLzu\",\"oig8ig9SE9RZa8ttL\",\"8PwfYqoDQFThzNtvf\",\"xn7uGNKeAwPEkP9oA\",\"s5M5RvgqR9BhB9JoC\",\"w2HhxvSLmDhaGCAjE\",\"cAP3n5NY64uoMwzRR\",\"FEYpu9RWysAgW3XnP\",\"aEm3Wvj2rFYRL8Lrb\",\"d8qtzoLB264iP8tdY\",\"R4SjTgDnpigJYDLyL\",\"KEmTti9Tza8A2FLQW\",\"wP396HgbztwkY86Xd\",\"yjtdwc2AC4jA2RWtn\",\"wRttWTM59y8m5mx7x\",\"dBzwBtRjZqB98DJeB\",\"5HCu9Ydd86QgHDRNP\",\"J5T8gZqiZXFuFDTQ7\",\"8JyqsSbN2FJXPr3cw\",\"oBcs8GLX2ZFLXQy8y\",\"RGMbFMZXJr7DhcAJy\",\"AXcnPX68zdMiLNSmu\",\"gXTAie79kiw28tx5u\",\"cRoHBaA7HjePc8wb2\",\"DPi9QGLctq2y76KuE\",\"HF28xZKSLM9wEuqNg\",\"buX4mCQhtXCfBjeno\",\"PXAcsKkssS2yLyDv2\",\"gb9rvGus2Jv7bjZSs\",\"2QGRoQn2dRq3scu7k\",\"Jqk2uJZZxEv5wZFze\",\"HuNF3xTBzmatyGSTm\",\"eMuCpJ2spXWkJjWNz\",\"Wv2vJnEj8ywNmARoF\",\"HqmxnQJM66Y57twhn\",\"YRAzEBJoLvSaiPtYx\",\"EXbD3ZjgP9oaoFLYw\",\"eYfPWvZwnJQkHbSTK\",\"5S9nX4rKsnCcnv4Cz\",\"sHjfbGQGLHE6JR6qu\",\"5hQnRWiKkhgKJXNMP\",\"GGdmhAvxXhqhhibJN\",\"o4ixjQGSaYqA2JoM4\",\"utTuvGdmu2sBHWBhQ\",\"Nb6LYPoQP6KJZt8mz\",\"DEDniTrstQYGounXT\",\"KJCDwGkoXh8qtbbKr\",\"srJ34BaybkQh3qRkM\",\"7txFzDQ43vJ7qCY88\",\"2fxapKr8XGdNeaKi2\",\"4RsakkyRXyYGwFxEa\",\"jRMQqYWXzAWrB4QaZ\",\"Ds7L5bksw2QRHjrKL\",\"T2vhHPhRR96hRizq8\",\"YcCLwitFMAEJSnxAW\",\"CHvzhtXnv8HTbPQ56\",\"XujK3rHd3JcM9TLJy\",\"cR3ibTMxLyEdDFCHY\",\"qAby4AWXmTNeusvg3\",\"8BFSTCnoe2QggN64c\",\"MfKe55snfKsdnDejs\",\"sbJcFfQjQ59Wfg4Cd\",\"i5iePG5GqhJJ8HEoB\",\"mfsaETo7uA4x5vqLD\",\"iojEnnY9FsMfYzp6f\",\"tAF9Gf6PiGogbZuWs\",\"3cF6NXq3ZEwdkgSjb\",\"T6iBEE2jp7f7iEF2P\",\"hiGXnxds6zo7XsfTw\",\"jL4y5fTJAMBjhZmko\",\"H9KZi2cjt4FwH7qog\",\"pq7tSi5WnLzEh2Pub\",\"EfxwqhYdapX3dMQC2\",\"66a9xX73nmTEuKs9k\",\"PC3pLs36zNzpRDSuE\",\"yod5YhKtPqw2GfG9B\",\"AFfw7cGg83uYk2Miy\",\"RSDaEWKZnWJbCEjJy\",\"BrTDhPJcACL2bsrpJ\",\"wjc4iejpErBhxWwHo\",\"vRXuYYBNuHEQ29fbm\",\"c2q7mY39z5JPEMCaM\",\"AJexRBN9cYQmqvYu6\",\"yr822PZmmiDDenxpB\",\"2PufnQcsHsfymufX3\",\"Wpn95NqWxncQrwNgz\",\"LQxof8pGabGuWP7Gn\",\"mvJBakQ35CWAnbbEZ\",\"9Ly8afdtofp8DXzrt\",\"K6MfKMytoJJuSGewP\",\"Cuy7McJ5y8BkXRRk9\",\"jkys684AAfPRxrYaD\",\"2HfNkb2SoqdyjKW3o\",\"AasGs8AeX9Lcb9xJn\",\"ghMkPtdFCpM6w8nax\",\"ey3CASd6Je5LEJzfB\",\"RoGGD5cpHb4ftdLDv\",\"R6YxHWAiLgKwy5YvC\",\"rrSC943cCKNG48sH4\",\"fSQSHjW3e72MrWxbD\",\"Cc2Cgj4MWXZxsTooC\",\"N2wnZXkhDH86mgjQ8\",\"2FCRyJqwqzFTKSTgJ\",\"9pzFiFK3ANLjQfnr2\",\"pduNK68oazqQTtbLp\",\"hR7GMiqGap4CzEWSy\",\"JiSpvq6C7azQEmENc\",\"XD5nmvKQchKezPXhy\",\"2iFe3EHEH2YdhSKrs\",\"nc7bRhkxgKyqusYe3\",\"4RY3zj9C2t8GGefhi\",\"9gJsF5apWJGWZJprn\",\"4Lwjr34ypKNQNQCar\",\"YA7SDhpgEtsqynvNL\",\"4TmgHkn5vqyHK3sYC\",\"StNu7DPyTgEStZsMY\",\"Afnps7TJQuS9sipMb\",\"MKT7khMBGXzA22ykf\",\"T6Rm8mREPMZSftzrC\",\"dK7DTve8Aav59WjzS\",\"dYPkStFnLvAMsHSzZ\",\"u5u2YpHXiNgzDNJdX\",\"d9LBRxvADNBB5QJMB\",\"suArq5BbSy7gD6xri\",\"K3RacTvkWHLfzKF8i\",\"dzS6WBTMHyFEag6Fp\",\"rhS8qXRjZcpDXkwnE\",\"yAouD3PxzED8a4gap\",\"AD4exun6fvwer4Zb9\",\"mw9464S5dnenqzvpm\",\"NzbRqGWspQnWMoDrF\",\"hpT9yYe5R45poHrYR\",\"B4y8aoyXJtskYPFEL\",\"AQSqD9oNv2uPfxZCR\",\"uGuS9YRXW2nj4p6zf\",\"qB6KSTYC6H2TQEQY6\",\"QWjsXnLaJ7xfL3Amq\",\"o2AEoyCijeNx5MEqW\",\"4ZpaT4BHT9hAT8q6x\",\"jWbd7SYDzLPjc9EDh\",\"Qyfyyw6oC4EHAndzo\",\"nFbmNzMQ38TncmfQX\",\"pPpmP7xeJzGgK362R\",\"mxX4rH5ELYkdZ2Mbw\",\"rCrbqMiaGPgHYTNxu\",\"5QN8R22z43SrwoHDz\",\"dj5AyG5fWP8FdsSmZ\",\"Zyg9xAm6EuH4u3Lo5\",\"Wi4H6ayKsNDWWQCG5\",\"ruzwBPphPDRgLXdnP\",\"8uiLiJcmWxWe6qw65\",\"vAbK8sCfKyFC78HYg\",\"E2hpke7mHxAWsw5t9\",\"WQubx7DAkG6WZE8FA\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"XdmP5A5ekyTQD5NgM\",\"language\":\"cpp\"},{\"_id\":\"i5pr5wJfQfmugehZm\",\"language\":\"javascript\"},{\"_id\":\"KcnQtNoX5uC6PzpEF\",\"language\":\"python3\"},{\"_id\":\"yDwrKPocu3LWj3h6e\",\"language\":\"ruby\"}]}}"]