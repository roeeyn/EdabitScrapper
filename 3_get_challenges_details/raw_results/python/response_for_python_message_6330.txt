a["{\"msg\":\"result\",\"id\":\"1871\",\"result\":{\"_id\":\"738WMYrYWPXeBgzFs\",\"author\":\"lllll\",\"authorId\":\"DNACg4rcgZsPtYGZ8\",\"code\":\"def is_valid(txt):\\n\\t\",\"difficulty\":2.5757575757575757,\"quality\":4.615384615384615,\"familyId\":\"W4wK2qCR7tD8NdXDF\",\"instructions\":\"Sherlock considers a string to be valid if all characters of the string appear the same number of times. It is also valid if he can remove just 1 character at 1 index in the string, and the remaining characters will occur the same number of times. Given a string `txt`, determine if it is valid. If so, return `\\\"YES\\\"`, otherwise return `\\\"NO\\\"`.\\n\\nFor example, If `txt = \\\"abc\\\"`, the string is valid because the frequencies of characters are all the same.  If `txt = \\\"abcc\\\"`, the string is also valid, because we can remove 1 \\\"c\\\" and have one of each character remaining in the string.  However, if `txt = \\\"abccc\\\"`, the string is not valid, because removing one character does not result in the same frequency of characters.\\n\\n### Examples\\n```\\nis_valid(\\\"aabbcd\\\") ➞ \\\"NO\\\"\\n# We would need to remove two characters, both c and d  -> aabb or a and b -> abcd, to make it valid.\\n# We are limited to removing only one character, so it is invalid.\\n\\nis_valid(\\\"aabbccddeefghi\\\") ➞ \\\"NO\\\"\\n# Frequency counts for the letters are as follows:\\n# {\\\"a\\\": 2, \\\"b\\\": 2, \\\"c\\\": 2, \\\"d\\\": 2, \\\"e\\\": 2, \\\"f\\\": 1, \\\"g\\\": 1, \\\"h\\\": 1, \\\"i\\\": 1}\\n# There are two ways to make the valid string:\\n# Remove 4 characters with a frequency of 1: {f, g, h, i}.\\n# Remove 5 characters of frequency 2: {a, b, c, d, e}.\\n# Neither of these is an option.\\n\\nis_valid(\\\"abcdefghhgfedecba\\\") ➞ \\\"YES\\\"\\n# All characters occur twice except for e which occurs 3 times.\\n# We can delete one instance of e to have a valid string.\\n```\\n\\n### Notes\\nN/A\",\"isHidden\":false,\"lab\":\"Test.assert_equals(is_valid(\\\"aabbccddeefghi\\\"), \\\"NO\\\")\\nTest.assert_equals(is_valid(\\\"aabbcd\\\"), \\\"NO\\\")\\nTest.assert_equals(is_valid(\\\"abcdefghhgfedecba\\\"), \\\"YES\\\")\\nTest.assert_equals(is_valid(\\\"abc\\\"), \\\"YES\\\")\\nTest.assert_equals(is_valid(\\\"abcc\\\"), \\\"YES\\\")\\nTest.assert_equals(is_valid(\\\"abccc\\\"), \\\"NO\\\")\",\"language\":\"python3\",\"summary\":\"Sherlock considers a string to be valid if all characters of the string appear the same number of times. It is also valid if he can remove just 1 character at 1 index in the string, and the remaining characters will occur the same number of times. Given a string txt, determine if it is valid. If so, return \\\"YES\\\", otherwise return \\\"NO\\\".\\n\\nFor example, If txt = \\\"\",\"tags\":[\"algorithms\",\"strings\",\"validation\"],\"timestamp\":{\"$date\":1601319584349},\"title\":\"Sherlock and the Valid String\",\"stats\":{\"completed\":{\"total\":79,\"ratings\":[3,3,3,3,3,4,3,1,3,4,2,2,3,1,1,1,2,5,2,1,2,3,1,4,2,4,4,1,2,2,5,3,3,2,1,5,4,3,3,3,2,4,3,2,0,0,3,3,2,2,3,3,0,3,1,0,4,4,3,5,2,4,3,2,3,2],\"quality\":[3,5,5,5,5,5,5,5,3,4,5,5,5],\"rators\":[\"DNACg4rcgZsPtYGZ8\",\"8PwfYqoDQFThzNtvf\",\"aEm3Wvj2rFYRL8Lrb\",\"tAF9Gf6PiGogbZuWs\",\"xn7uGNKeAwPEkP9oA\",\"s5M5RvgqR9BhB9JoC\",\"gx2pNC6S9BHWCGcsS\",\"8JyqsSbN2FJXPr3cw\",\"Ecg4m7srYGgZsb4Ck\",\"yjtdwc2AC4jA2RWtn\",\"HF28xZKSLM9wEuqNg\",\"bLGqk6rTP3a5pfG7o\",\"J5T8gZqiZXFuFDTQ7\",\"v2rponevFCpBsLrQD\",\"Z85ajWfZ4jDPkbvR4\",\"dHConQk6pC8c323TE\",\"uZJqBoqeZRX3RncAR\",\"8sNv5PTHa7XQ8bNqR\",\"74LAPLfQHfTuydDA2\",\"KEfd5Bzaao2RjReRE\",\"iS5BrkGLzJyPK7nKt\",\"Xk2g4CNFAnYcvxiSr\",\"4Wx8m46eWWadZNuLq\",\"SGhPxX5bHGL8zZqtt\",\"CLypXaZksY99mpRCm\",\"4RY3zj9C2t8GGefhi\",\"8N99kojRhfZXWNAk6\",\"8nE8QHnFYsHCFebte\",\"MXFAQAyRRg9Qassp9\",\"gSFJPsMXnqAog3Q9f\",\"SijL7Kxx89h4p65Py\",\"mDWNyaaQ9hvPCRzSd\",\"et4ezbyWYdtQd54X7\",\"fECdwynR7aZZTmDno\",\"J3upzLHuEwXH7Z2hx\",\"MmhJQjY54sCovjFFd\",\"RH88LkcMAedDTNhoh\",\"RwaMe3FZSDTCtns9a\",\"fSQSHjW3e72MrWxbD\",\"DPi9QGLctq2y76KuE\",\"DQskEvAv5KiJDPtGF\",\"n2BRY9X8899dcG8Bw\",\"tD7vM9M85YTtXiqcr\",\"gXTAie79kiw28tx5u\",\"E8w6J4TvybNdW4Rve\",\"gJYuGdkXEWWmGRLzu\",\"iojEnnY9FsMfYzp6f\",\"2PufnQcsHsfymufX3\",\"HhYCji7QqauyN3A7v\",\"AasGs8AeX9Lcb9xJn\",\"P7NmFbCJ5offXMRvB\",\"GTKsdeEihE636Le9i\",\"H9KZi2cjt4FwH7qog\",\"HqmxnQJM66Y57twhn\",\"fznzd3qnvtbFkkizz\",\"ctbThYbufFCYbRK4f\",\"oBcs8GLX2ZFLXQy8y\",\"9bQyb6rW7xfE4vgrR\",\"Yp7uvStL97cC9fKkY\",\"AWRsASiEp4ujCwjmC\",\"gKnWjDjwrJh7MK2df\",\"MLjQSdduqP56pXYXY\",\"x9F5WvWftdnhG7DqT\",\"T6iBEE2jp7f7iEF2P\",\"azJGtZABF89kadHp5\",\"JKb5rhL6DKcCAypF9\",\"DdHnWE8gjciwCXhSL\",\"suArq5BbSy7gD6xri\",\"fbr22rabEJMfBp7vD\",\"m3R9aaRoEbaxRsSNA\",\"rhS8qXRjZcpDXkwnE\",\"55RQznnuTGpsj3EXd\",\"buX4mCQhtXCfBjeno\",\"hrzGaJc9KZqgjAvew\"]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"CEsNg38svzLP4iG8E\",\"language\":\"cpp\"},{\"_id\":\"Mgrj26S3LwM8CLAdL\",\"language\":\"java\"},{\"_id\":\"WtECAHJYzoXKy9m4v\",\"language\":\"javascript\"},{\"_id\":\"738WMYrYWPXeBgzFs\",\"language\":\"python3\"},{\"_id\":\"HYbjNex286x3Snn3Q\",\"language\":\"ruby\"}]}}"]