a["{\"msg\":\"result\",\"id\":\"2493\",\"result\":{\"_id\":\"r5YdmWsXYBftgJFND\",\"author\":\"jota\",\"authorId\":\"vTfyrr4pGddp8rbXc\",\"code\":\"def password_checker(txt):\\n\\t\",\"difficulty\":4.9,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"Dke6GfBiRLJ6uz7bP\",\"instructions\":\"This challenge is based on [Strong Password Checker](https://edabit.com/challenge/H2NCAro2tdbGavzg7). See **Notes** at the bottom of this page for info on the adaptation.\\n\\nIn this challenge, a password is considered **strong** if the following three conditions are met:\\n\\n1. Needs to have exactly 20 characters.\\n2. It contains at least one lowercase letter, one uppercase letter and one digit.\\n3. It does **not** contain three repeating characters in a row (e.g. \\\"...aaa...\\\" is weak, but \\\"...aa...a...\\\" is strong, assuming the other conditions are met).\\n\\nWrite a function that takes a string `txt` and returns the _**minimum** number of changes required to make it into a strong password_, where each change consists of either deleting a character, or replacing a character (note that swapping characters is not allowed; each change affects one character and one character only).\\n\\nIf the password is already strong, return `0`.\\n\\n### Examples\\n```\\npassword_checker(\\\"EDABITEDABITEDABITEDA\\\") ➞ 3\\n# 21 characters total, only uppercase letters, need to delete one\\n# character and replace two characters, onewith a digit, one with a\\n# lowercase letter.\\n# 3 minimum changes.\\n\\n\\npassword_checker(\\\"000aaaBBBccccDDDDeeeee\\\") ➞ 6\\n# 22 characters, and 6 sets of repeating characters.\\n# 2 characters need to be removed, and one change is needed in each set.\\n# Removing one 0 and one a, and replacing one of the middle characters\\n# in each of the four BBB, cccc, DDDD, eeeee blocks does the trick.\\n# 6 minimum changes.\\n```\\n\\n### Notes\\n- The input will always have at least 20 characters.\\n- The algorithm have to be extremely efficient.\\n- I believe that only time complexity O(n) can pass the tests.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"import time\\ntic = time.perf_counter()\\nTest.assert_equals(password_checker('ICanTypeAnythingHereAndGetAwayWithIt'), 17)\\nTest.assert_equals(password_checker('ULTRAstrongP455w0rdthatstoolong'), 11)\\nTest.assert_equals(password_checker('7777777777777777777777777'), 11)\\nTest.assert_equals(password_checker('000aaaBBBccccDDDDeeeee'), 6)\\nTest.assert_equals(password_checker('000000aaaaaaBBBBBBcccccc'), 8)\\nTest.assert_equals(password_checker('0000000aaaaaaaBBBBBBBccccccc'), 12)\\nTest.assert_equals(password_checker('0000000aaaaaaaBBBBBBB'), 7)\\nTest.assert_equals(password_checker('00000000aaaaaaaaBBBBBBBB'), 9)\\nTest.assert_equals(password_checker('000000000aaaaaaaaaBBBBBBBBB'), 12)\\nTest.assert_equals(password_checker('000aaaaBBBBBcccccc2222'), 6)\\nTest.assert_equals(password_checker('000aaaaBBBBBcccccc2222dd'), 7)\\nTest.assert_equals(password_checker('0aaBBBcccc22222dddddd4444444'), 11)\\n\\n#start of the challenge\\ntxt='01234567890123456789'\\nTest.assert_equals(password_checker(10000*txt+10000*txt), 399982)\\nTest.assert_equals(password_checker(10000*txt+\\\"11\\\"+10000*txt), 399984)\\nTest.assert_equals(password_checker(\\\"a1\\\"+10000*txt+10000*txt), 399983)\\nTest.assert_equals(password_checker(10000*txt+10000*txt+\\\"aA\\\"), 399982)\\n\\ntxt='a1234567890123456789'\\nTest.assert_equals(password_checker(10000*txt+10000*txt), 399981)\\nTest.assert_equals(password_checker(10000*txt+\\\"11\\\"+10000*txt), 399983)\\nTest.assert_equals(password_checker(\\\"a1\\\"+10000*txt+10000*txt), 399983)\\nTest.assert_equals(password_checker(10000*txt+10000*txt+\\\"aA\\\"), 399982)\\n\\ntxt='aA234567890123456789'\\nTest.assert_equals(password_checker(10000*txt+10000*txt), 399980)\\nTest.assert_equals(password_checker(10000*txt+\\\"11\\\"+10000*txt), 399982)\\nTest.assert_equals(password_checker(\\\"a1\\\"+10000*txt+10000*txt), 399982)\\nTest.assert_equals(password_checker(10000*txt+10000*txt+\\\"aA\\\"), 399982)\\n\\ntxt =\\\"11111111111111111111\\\"\\nTest.assert_equals(password_checker(12300*txt+12400*txt), 493986)\\nTest.assert_equals(password_checker(\\\"11\\\"+12300*txt+12400*txt), 493988)\\nTest.assert_equals(password_checker(12300*txt+\\\"11\\\"+12400*txt), 493988)\\nTest.assert_equals(password_checker(12300*txt+\\\"22\\\"+12400*txt), 493987)\\nTest.assert_equals(password_checker(12300*txt+\\\"aa\\\"+12400*txt), 493987)\\n\\ntxt='rewsituyvghnopwieruhmcfpsouedhrmtwfhnmperiowuhtopaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbdddddddddddddddddddddssssssssssssssssssssssssssssdddbbbssssskkkkkeeeiiirrrooowwwwwiiiiiiffffff'\\nTest.assert_equals(password_checker(10000*txt) , 1879982)\\nTest.assert_equals(password_checker(10000*txt+\\\"H1\\\"+10000*txt), 3759982)\\n\\ntxt = '1111111111222222222333333344444445556666'\\nTest.assert_equals(password_checker(10000*txt) , 399982)\\n\\nTest.assert_equals(password_checker(40000*'rewsituyvghnopwieruhmcfpsouedhrmtw234HHfhnmperiowuhtopaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbdddddddddddddddddddddssssssssssssssssssssssssssssdddbbbssssskkkkkeeeiiirrrooowwwwwiiiiiiffffff'), 7719980)\\n\\nprint('t = {:.9f} sec'.format(time.perf_counter() - tic))\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[5,5,5,5,5,5,5,4,5,5],\"rators\":[\"vTfyrr4pGddp8rbXc\",\"8PwfYqoDQFThzNtvf\",\"aEm3Wvj2rFYRL8Lrb\",\"d6iEb2BDDofyeePh9\",\"iS5BrkGLzJyPK7nKt\"],\"total\":5,\"quality\":[]},\"flags\":0},\"summary\":\"This challenge is based on Strong Password Checker. See Notes at the bottom of this page for info on the adaptation.\\n\\nIn this challenge, a password is considered strong if the following three conditions are met:\\n\\nNeeds to have exactly 20 characters.\\nIt contains at least one lowercase letter, one uppercase letter and one digit.\\nIt does not contain three repeati\",\"tags\":[\"functional_programming\",\"higher_order_functions\",\"logic\",\"numbers\"],\"timestamp\":{\"$date\":1596126316639},\"title\":\"Strong Password Checker (Version 2.0)\",\"quality\":0,\"family\":[{\"_id\":\"r5YdmWsXYBftgJFND\",\"language\":\"python3\"}]}}"]