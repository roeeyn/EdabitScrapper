a["{\"msg\":\"result\",\"id\":\"960\",\"result\":{\"_id\":\"zxAXEgpjQ3XrLs2K7\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"def merge_sort(lst1, lst2):\",\"difficulty\":1.4842105263157894,\"familyId\":\"gBqddEcvyweSBfi6T\",\"instructions\":\"Given two lists, merge them to one list and sort the new list in the same order as the first list.\\n\\n### Examples\\n```\\nmerge_sort([1, 2, 3], [5, 4, 6]) ➞ [1, 2, 3, 4, 5, 6]\\n\\nmerge_sort([8, 6, 4, 2], [-2, -6, 0, -4]) ➞ [8, 6, 4, 2, 0, -2, -4, -6]\\n\\nmerge_sort([120, 180, 200], [190, 175, 130]) ➞ [120, 130, 175, 180, 190, 200]\\n```\\n\\n### Notes\\n- You'll  always get two lists as arguments.\\n- The first list is always sorted, either **asc** or **desc**.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(merge_sort([1, 2, 3], [5, 4, 6]), [1, 2, 3, 4, 5, 6])\\nTest.assert_equals(merge_sort([8, 6, 4, 2], [-2, -6,  0, -4 ]), [8, 6, 4, 2, 0, -2, -4, -6])\\nTest.assert_equals(merge_sort([120, 180, 200], [190, 175, 130]), [120, 130, 175, 180, 190, 200])\\nTest.assert_equals(merge_sort([25, 21, 17, 13], []), [25, 21, 17, 13])\\nTest.assert_equals(merge_sort([1024, 2048], [512, 128, 64]), [64, 128, 512, 1024, 2048])\\nTest.assert_equals(merge_sort([0, 1], [1, 1, 1, 1, 0, 0, 0, 0]), [0, 0, 0, 0, 0, 1, 1, 1, 1, 1])\\nTest.assert_equals(merge_sort([-1, -3], [11, -5, 7, -11]), [11, 7, -1, -3, -5, -11])\\nTest.assert_equals(merge_sort([10, 20, 30, 40, 50, 60, 80, 90], [70]), [10, 20, 30, 40, 50, 60, 70, 80, 90])\",\"language\":\"python3\",\"quality\":4.851851851851852,\"summary\":\"Given two lists, merge them to one list and sort the new list in the same order as the first list.\\n\\nExamples\\nmerge_sort([1, 2, 3], [5, 4, 6]) ➞ [1, 2, 3, 4, 5, 6]\\n\\nmerge_sort([8, 6, 4, 2], [-2, -6, 0, -4]) ➞ [8, 6, 4, 2, 0, -2, -4, -6]\\n\\nmerge_sort([120, 180, 200], [190, 175, 130]) ➞ [120, 130, 175, 180, 190, 200]\\n\\nNotes\\nYou'll  always get two lists as argument\",\"tags\":[\"arrays\",\"sorting\"],\"timestamp\":{\"$date\":1606137080556},\"title\":\"Merge Lists in Order\",\"stats\":{\"completed\":{\"total\":125,\"ratings\":[2,2,2,2,2,2,2,2,2,3,2,2,1,0,1,1,2,1,0,1,0,0,1,1,3,0,2,1,0,4,1,5,2,2,0,1,2,3,0,0,2,1,2,2,1,0,2,2,2,2,1,2,2,2,2,2,2,2,1,2,1,2,0,1,2,2,1,2,1,1,2,1,2,1,2,1,1,2,0,2,2,2,1,2,2,1,2,1,1,0,1,1,1,2,1],\"quality\":[5,5,4,5,5,5,5,5,5,5,5,4,5,5,4,5,5,5,5,5,5,5,4,5,5,5,5],\"rators\":[\"s5M5RvgqR9BhB9JoC\",\"J3upzLHuEwXH7Z2hx\",\"8JyqsSbN2FJXPr3cw\",\"NfMJuiBk6FN5Jc6ow\",\"8PwfYqoDQFThzNtvf\",\"p8qqFdJ3FSk5x9z3G\",\"Yp7uvStL97cC9fKkY\",\"7scpcTEp3SEx5Wjg9\",\"cAP3n5NY64uoMwzRR\",\"EzPjwWb2ZxmQDYvjW\",\"55RQznnuTGpsj3EXd\",\"zd9FLSzsGz3evKafy\",\"gJYuGdkXEWWmGRLzu\",\"QRv96jmNaYsWkxQEG\",\"gb9rvGus2Jv7bjZSs\",\"d8qtzoLB264iP8tdY\",\"FEYpu9RWysAgW3XnP\",\"Jqk2uJZZxEv5wZFze\",\"oBcs8GLX2ZFLXQy8y\",\"HF28xZKSLM9wEuqNg\",\"5HCu9Ydd86QgHDRNP\",\"rfyEkETeoS96QNH4e\",\"HuNF3xTBzmatyGSTm\",\"axdSNLZpiCDF8RS6n\",\"iS5BrkGLzJyPK7nKt\",\"PXAcsKkssS2yLyDv2\",\"J5T8gZqiZXFuFDTQ7\",\"aEm3Wvj2rFYRL8Lrb\",\"DPi9QGLctq2y76KuE\",\"gXTAie79kiw28tx5u\",\"2QGRoQn2dRq3scu7k\",\"4jmcRWi7WtT5hzdP9\",\"Bx68gx6euL4i9BS6D\",\"wRttWTM59y8m5mx7x\",\"LPGPHgJc8MkvcEDBc\",\"w2HhxvSLmDhaGCAjE\",\"eYfPWvZwnJQkHbSTK\",\"HqmxnQJM66Y57twhn\",\"3nied3n8KG8RSNixH\",\"buX4mCQhtXCfBjeno\",\"yjtdwc2AC4jA2RWtn\",\"5XiuAqicKD4hBdu63\",\"dBzwBtRjZqB98DJeB\",\"R4SjTgDnpigJYDLyL\",\"LWCzZ8mb8gwrRNGfq\",\"5S9nX4rKsnCcnv4Cz\",\"JhX7jvtpwNyxcc39m\",\"5hQnRWiKkhgKJXNMP\",\"YRAzEBJoLvSaiPtYx\",\"Nb6LYPoQP6KJZt8mz\",\"Wv2vJnEj8ywNmARoF\",\"o4ixjQGSaYqA2JoM4\",\"GGdmhAvxXhqhhibJN\",\"MXGuntvz3byrP6WJc\",\"sHjfbGQGLHE6JR6qu\",\"srJ34BaybkQh3qRkM\",\"KJCDwGkoXh8qtbbKr\",\"Ds7L5bksw2QRHjrKL\",\"DEDniTrstQYGounXT\",\"4RsakkyRXyYGwFxEa\",\"CHvzhtXnv8HTbPQ56\",\"J23RcmzbdtBbPCTjT\",\"qAby4AWXmTNeusvg3\",\"EfxwqhYdapX3dMQC2\",\"cJJKeX6xYZu9ekgkB\",\"YcCLwitFMAEJSnxAW\",\"cR3ibTMxLyEdDFCHY\",\"i5qdcdYCrNEnftRPw\",\"sbJcFfQjQ59Wfg4Cd\",\"iojEnnY9FsMfYzp6f\",\"eMuCpJ2spXWkJjWNz\",\"tAF9Gf6PiGogbZuWs\",\"u4KH6LGQ95qQMHBut\",\"3cF6NXq3ZEwdkgSjb\",\"66a9xX73nmTEuKs9k\",\"nXxDXb7S4pKR7cHLF\",\"PC3pLs36zNzpRDSuE\",\"ey3CASd6Je5LEJzfB\",\"yod5YhKtPqw2GfG9B\",\"AJexRBN9cYQmqvYu6\",\"9Ly8afdtofp8DXzrt\",\"AasGs8AeX9Lcb9xJn\",\"8BFSTCnoe2QggN64c\",\"mvJBakQ35CWAnbbEZ\",\"qzXAMXsHZGT8o5hTA\",\"BrTDhPJcACL2bsrpJ\",\"XD5nmvKQchKezPXhy\",\"AFfw7cGg83uYk2Miy\",\"9gJsF5apWJGWZJprn\",\"2PufnQcsHsfymufX3\",\"LQxof8pGabGuWP7Gn\",\"K3RacTvkWHLfzKF8i\",\"4TmgHkn5vqyHK3sYC\",\"4Lwjr34ypKNQNQCar\",\"d9LBRxvADNBB5QJMB\",\"dzS6WBTMHyFEag6Fp\",\"u5u2YpHXiNgzDNJdX\",\"pduNK68oazqQTtbLp\",\"wjc4iejpErBhxWwHo\",\"quYcmxS33qHALzb4Z\",\"NzbRqGWspQnWMoDrF\",\"yAouD3PxzED8a4gap\",\"RoGGD5cpHb4ftdLDv\",\"2fxapKr8XGdNeaKi2\",\"mxX4rH5ELYkdZ2Mbw\",\"X4rzfxGgxx6CS7Bpz\",\"wrL4iX2CCSqDCCty3\",\"MKT7khMBGXzA22ykf\",\"suArq5BbSy7gD6xri\",\"5QN8R22z43SrwoHDz\",\"9pzFiFK3ANLjQfnr2\",\"Wi4H6ayKsNDWWQCG5\",\"rrSC943cCKNG48sH4\",\"rCrbqMiaGPgHYTNxu\",\"uGuS9YRXW2nj4p6zf\",\"AQSqD9oNv2uPfxZCR\",\"E2hpke7mHxAWsw5t9\"]},\"flags\":0},\"editorId\":\"T6iBEE2jp7f7iEF2P\",\"family\":[{\"_id\":\"2e5Yyoh5jGq2eJMcC\",\"language\":\"cpp\"},{\"_id\":\"PvGApka4RyYsQ3cA8\",\"language\":\"javascript\"},{\"_id\":\"zxAXEgpjQ3XrLs2K7\",\"language\":\"python3\"},{\"_id\":\"3bG3cGxSgJpGPtgaB\",\"language\":\"ruby\"}]}}"]