a["{\"msg\":\"result\",\"id\":\"1993\",\"result\":{\"_id\":\"eDQDChGrv6y4fd44j\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def can_put(txt, dim):\\n\\t\",\"difficulty\":2.7777777777777777,\"familyId\":\"9mkt3vA6jfrPj76ix\",\"instructions\":\"A billboard is an `m * n` list, where each list element consists of either one letter or a blank space. You are given a phrase and the billboard dimensions. Create a function that determines whether you can place the complete phrase on the billboard.\\n\\nThere are two rules:\\n\\n1. If there is a space between two words:\\n   - If they are on the same row, you must put a space.\\n   - If they are two different rows, the space is optional.\\n2. You can only put COMPLETE words on a row.\\n\\nTo illustrate, `can_put(\\\"GOOD MORN\\\", [2, 4])` should yield `True`, since while there is a space between \\\"GOOD\\\" and \\\"MORN\\\", it's not needed since both words are on separate rows.\\n\\n```\\n[\\n  [\\\"G\\\", \\\"O\\\", \\\"O\\\", \\\"D\\\"],\\n  [\\\"M\\\", \\\"O\\\", \\\"R\\\", \\\"N\\\"]\\n]\\n```\\n\\nOn the other hand  `can_put(\\\"GOOD MORN\\\", [1, 8])` should yield `False`. Since both words reside in the first row, we require nine spots, and eight would yield the incomplete phrase \\\"GOOD MOR\\\".\\n\\n```\\n[\\n  [\\\"G\\\", \\\"O\\\", \\\"O\\\", \\\"D\\\", \\\"_\\\", \\\"M\\\", \\\"O\\\", \\\"R\\\"]\\n]\\n```\\n\\nWe would also return `False` if we could not fit a word on a row. So `can_put(\\\"GOOD MORN\\\", [3,3])` should yield `False`, since we can only fit \\\"GOO\\\" on the first row.\\n\\n```\\n[\\n  [\\\"G\\\", \\\"O\\\", \\\"O\\\"],\\n  [\\\"D\\\", \\\"_\\\", \\\"M\\\"],\\n  [\\\"O\\\", \\\"R\\\", \\\"N\\\"]\\n]\\n\\n# No good!\\n```\\n\\n\\n### Examples\\n```\\ncan_put(\\\"HEY JUDE\\\", [2, 4]) ➞ True\\n\\ncan_put(\\\"HEY JUDE\\\", [1, 8]) ➞ True\\n\\ncan_put(\\\"HEY JUDE\\\", [1, 7]) ➞ False\\n\\ncan_put(\\\"HEY JUDE\\\", [4, 3]) ➞ False\\n```\\n\\n### Notes\\nIt is okay to leave extra empty spaces on one line if you cannot fit two words with a space. For example, in a 5 x 5 billboard, you can put \\\"BE\\\" on the first row and \\\"HAPPY\\\" on the second row.\",\"lab\":\"Test.assert_equals(can_put(\\\"HEY JUDE\\\", [2, 4]), True)\\nTest.assert_equals(can_put(\\\"HEY JUDE\\\", [1, 8]), True)\\nTest.assert_equals(can_put(\\\"HEY JUDE\\\", [1, 7]), False, 'cannot fit leaving a space in')\\nTest.assert_equals(can_put(\\\"HEY JUDE\\\", [4, 3]), False, 'JUDE cannot fit on second row')\\nTest.assert_equals(can_put(\\\"CU L8R\\\", [2, 2]), False, 'L8R cannot fit on second row')\\nTest.assert_equals(can_put(\\\"CU L8R\\\", [1, 5]), False, 'cannot fit leaving a space in')\\nTest.assert_equals(can_put(\\\"CU L8R\\\", [5, 5]), True)\\nTest.assert_equals(can_put(\\\"BEAUTY IS WITHIN\\\", [3, 6]), True)\\nTest.assert_equals(can_put(\\\"BEAUTY IS WITHIN\\\", [4, 5]), False)\",\"language\":\"python3\",\"summary\":\"A billboard is an m * n list, where each list element consists of either one letter or a blank space. You are given a phrase and the billboard dimensions. Create a function that determines whether you can place the complete phrase on the billboard.\\n\\nThere are two rules:\\n\\nIf there is a space between two words:\\n   If they are on the same row, you must put a spac\",\"tags\":[\"arrays\",\"validation\"],\"timestamp\":{\"$date\":1552784266269},\"title\":\"Billboard\",\"stats\":{\"completed\":{\"total\":88,\"ratings\":[3,3,3,3,3,3,3,3,3,3,2,3,3,4,4,4,5,2,2,3,1,0,2,3,1,3,4,2,2,2,2,3,2,4,1,4,3,2,3,4,3,1,5,4,2,3,4,1,3,2,4,4,4,1,5,3,4,3,2,4,2,0,2,4,3,4,2,4,3,4,2,3,1,1,4,1,4,4,3,2,1,4,4,3,2,4,3,0,4,0],\"rators\":[\"BkPgkDQGHm66X4Qai\",\"AYaEkTWLMmfzpwejr\",\"yZvzB3qFb8pkHy4dg\",\"8JyqsSbN2FJXPr3cw\",\"W2RBjMJ9KQPg4tjNZ\",\"SSCT6hDKSybxGGGks\",\"WDaGgs2zcdz2aJ4Km\",\"GpjZR7PL5GQQ4YPn6\",\"tAF9Gf6PiGogbZuWs\",\"T3ZAuoMrJjvZwN55B\",\"FuojScruE4aktnfif\",\"XjC9ivzaAxfcFiSGj\",\"aW2AfRdBxWt3K9AaH\",\"gb9rvGus2Jv7bjZSs\",\"MXjxGML2X75x64vJo\",\"PFjMZGHNAPTkgd7tq\",\"BFNm9gacwba9KyLFW\",\"pci5yjeqMeYpPhfhL\",\"hsrNYf3WbexXJKhCq\",\"cmwasetrBzbwJQbks\",\"xyHfEdcYBDznunq6n\",\"cecRRLKKu5R62D5xE\",\"zrTMJSGALvxyWjpSt\",\"3xwwyRGki4ds48E9X\",\"3ifAHQzsMasfQySoL\",\"jHrtWDGBhkbuWa7fG\",\"j7fyR7k8FfGPLraZx\",\"DsJN5TCuLjtwfWorX\",\"yfYmQT6jgJRsbSvFd\",\"hdm3457uPzJLghf8g\",\"nF9pCCzbGDhzvWgaw\",\"4sL7MG7HmuhL9bZXe\",\"rp5QqQQRJxu4DcSoM\",\"D6Z9oT2ZhjBCxuL2o\",\"mG93NkvEZfh2kPrMq\",\"TgjcWxsTjar7snQx9\",\"RErqK2yM94wYyD2hk\",\"Tin42WiZ4JTDEnS7b\",\"eYWgXzijKqfqgZNDi\",\"4rg9g6TKYZ8aifrYc\",\"8BqC6mNzraLKAGnmF\",\"RyCu8LFdoba6Gvzp9\",\"MNgYsvK6HfLRb8wAz\",\"dZGNAJXB24zNh2tsD\",\"PuJDHtAaX6vXeJJTC\",\"s5M5RvgqR9BhB9JoC\",\"HqmxnQJM66Y57twhn\",\"FgkYtHLxeD8pETJ8T\",\"6ShafRStcvew4GfCh\",\"JKb5rhL6DKcCAypF9\",\"8PwfYqoDQFThzNtvf\",\"Jqk2uJZZxEv5wZFze\",\"Abhb2zxoinXBCoyJy\",\"WLFPvm65aHfgwQy7N\",\"FQDwscZZbqMZNcazT\",\"pmgFEciNrd3ES9tuu\",\"aCNWav8S8Try9RkC6\",\"aEm3Wvj2rFYRL8Lrb\",\"AasGs8AeX9Lcb9xJn\",\"uw8E83imJYpQiiPpP\",\"fznzd3qnvtbFkkizz\",\"ZNnsMeNkdDhHjSrZb\",\"YRstQuthRkFeBiXug\",\"8xWTb9yz9D5TiZvJG\",\"Ecg4m7srYGgZsb4Ck\",\"f2BoqyCpgnmjEjLqx\",\"xn7uGNKeAwPEkP9oA\",\"B5oFyC6oyQa9fE8rx\",\"SGhPxX5bHGL8zZqtt\",\"5dHucvf2qBYyKim7X\",\"HF28xZKSLM9wEuqNg\",\"8sNv5PTHa7XQ8bNqR\",\"CTKmXtrqDYqJBnuy8\",\"p8qqFdJ3FSk5x9z3G\",\"d8qtzoLB264iP8tdY\",\"J3upzLHuEwXH7Z2hx\",\"iojEnnY9FsMfYzp6f\",\"gJYuGdkXEWWmGRLzu\",\"PytNZK9mNiRiZxPrm\",\"yjtdwc2AC4jA2RWtn\",\"iS5BrkGLzJyPK7nKt\",\"GTKsdeEihE636Le9i\",\"T6iBEE2jp7f7iEF2P\",\"2PufnQcsHsfymufX3\",\"yTtSCvGPyYna6JuRC\"],\"quality\":[3,5,5,5]},\"tests\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"instructions\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.5,\"family\":[{\"_id\":\"QPqN3tp7RqsxKRnq2\",\"language\":\"javascript\"},{\"_id\":\"eDQDChGrv6y4fd44j\",\"language\":\"python3\"},{\"_id\":\"cLSueMHxncWdbh8Sy\",\"language\":\"ruby\"}]}}"]