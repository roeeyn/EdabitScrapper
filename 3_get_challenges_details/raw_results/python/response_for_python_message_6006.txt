a["{\"msg\":\"result\",\"id\":\"1714\",\"result\":{\"_id\":\"uCKJi6X3KTH9zuSc3\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"def mystery_func(n):\\n\\t\",\"difficulty\":2.1838235294117645,\"familyId\":\"wPSvFTiuN9Z8Pb5dX\",\"instructions\":\"Write a function that takes an integer `n` and turns it into the ouput. No further instructions.\\n\\n### Examples\\n```\\nmystery_func(521) ➞ \\\"151211\\\"\\n\\nmystery_func(5211255) ➞ \\\"1512211225\\\"\\n\\nmystery_func(513515) ➞ \\\"151113151115\\\"\\n```\\n\\n### Notes\\n- The result has to do with counting something.\\n- Check the **Tests** tab for some extra hints.\",\"lab\":\"# count digits, and then for each digit, add \\\"the amount of the digit \\n# in a row (and the) digit\\\"\\n# 15 = 1*1 1*5(1115)\\n\\nTest.assert_equals(mystery_func(15), \\\"1115\\\")\\nTest.assert_equals(mystery_func(15212), \\\"1115121112\\\")\\nTest.assert_equals(mystery_func(111111422), \\\"611422\\\")\\nTest.assert_equals(mystery_func(1), \\\"11\\\")\\nTest.assert_equals(mystery_func(513515), \\\"151113151115\\\")\\nTest.assert_equals(mystery_func(666), \\\"36\\\")\\nTest.assert_equals(mystery_func(69), \\\"1619\\\")\",\"language\":\"python3\",\"summary\":\"Write a function that takes an integer n and turns it into the ouput. No further instructions.\\n\\nExamples\\nmystery_func(521) ➞ \\\"151211\\\"\\n\\nmystery_func(5211255) ➞ \\\"1512211225\\\"\\n\\nmystery_func(513515) ➞ \\\"151113151115\\\"\\n\\nNotes\\nThe result has to do with counting something.\\nCheck the Tests tab for some extra hints.\",\"tags\":[\"algorithms\",\"loops\"],\"timestamp\":{\"$date\":1563565472640},\"title\":\"Mystery Challenge\",\"stats\":{\"completed\":{\"total\":146,\"ratings\":[2,2,2,2,2,2,2,2,2,3,2,3,2,2,3,0,2,3,3,5,2,0,1,0,3,2,0,2,3,2,3,2,3,1,1,3,0,4,1,2,4,1,1,2,3,2,2,3,3,3,1,3,3,3,2,3,0,1,2,3,2,2,5,3,3,1,4,2,3,1,2,3,3,2,3,3,1,1,3,3,3,3,3,3,3,4,3,3,2,2,3,1,3,0,2,0,3,3,2,3,2,2,2,1,1,3,3,3,1,3,4,0,1,3,3,2,3,0,3,2,2,2,3,1,1,2,0,0,4,0,3,3,2,2,2,3],\"rators\":[\"TNMAJidLpPdH4kmBv\",\"tAF9Gf6PiGogbZuWs\",\"PFjMZGHNAPTkgd7tq\",\"C9LKGu2g5hSijvDzA\",\"ahWFxnaxt9bXSA4f3\",\"8JyqsSbN2FJXPr3cw\",\"7g3vZaQXhLpxrajyg\",\"gb9rvGus2Jv7bjZSs\",\"yZvzB3qFb8pkHy4dg\",\"kQH5b8MXJunh84Czq\",\"6u7yc9m6HuHGbHzph\",\"aXCm9vWqKwL9XFYoj\",\"jYJ26SiLKBu5GRumq\",\"AF6LgdKhEdzwgRJom\",\"zjQPuEyZ38tTW6P5w\",\"Ww75pCpAW47jbSd5H\",\"dHZqT6h4JMwk5fPC8\",\"cR3ibTMxLyEdDFCHY\",\"gMJhLdyw3tH7L96X2\",\"N2wnZXkhDH86mgjQ8\",\"XKi8iZXBCHCaebSHh\",\"otXtuQygbcYATMZoP\",\"sfHsh5gna2QYuwsRP\",\"3bkCjbHpN3Lgp29y3\",\"2fxapKr8XGdNeaKi2\",\"AYaEkTWLMmfzpwejr\",\"keHvQfKorkLrXTM2W\",\"fAoLuqbGvHn4w2PHf\",\"7ogRZwgfTMnDASW5C\",\"bfEEtH9poQCQxHoGb\",\"HqmxnQJM66Y57twhn\",\"cvj4sxgLrb9HCyNGH\",\"FgkYtHLxeD8pETJ8T\",\"u9MCwTnw85QBhGSsg\",\"Nj6FwgBtAXsaQwsM2\",\"5F8kWn4n7fQbnf88e\",\"r39K6ciQknxJxr9he\",\"WX6R5brerMTrHs5ZM\",\"HtwSd88J8EMZvckwk\",\"n5xGypteaCL2bRGWM\",\"PP6sLxJ7TZN3BB7pu\",\"C4QntmkYtB89GNtpd\",\"K96FwtfDDN5WM4Bb7\",\"JKb5rhL6DKcCAypF9\",\"vJS2qEPc3Psk9nSpH\",\"Jqk2uJZZxEv5wZFze\",\"p36xWraKgj6GqqijD\",\"w2FwiD5CGk7YsdRXM\",\"erEunWkRveQoPZyTC\",\"6ShafRStcvew4GfCh\",\"zd9FLSzsGz3evKafy\",\"ab7BsQuhDo3QgE6bh\",\"MTmKdQYk66jhyrMuM\",\"2innwjWqxJHo4eRGh\",\"2MeGekmZQqQ5MX5kc\",\"AasGs8AeX9Lcb9xJn\",\"GHvfFGbwqtKMGhHt6\",\"GJmKcqu7xppQyBaTt\",\"4CFzv558qbGcpQwc4\",\"8PwfYqoDQFThzNtvf\",\"pkQBaSzukotPEXmrD\",\"mDb4eoc9XX942Atc5\",\"vWgBJaEtcu3XoYuer\",\"Jsrfs8nEy37mJxbqD\",\"KRmxvA4mWgfKvHmYN\",\"aEm3Wvj2rFYRL8Lrb\",\"PytNZK9mNiRiZxPrm\",\"wT5gGgvjKc5wz59AQ\",\"ZNnsMeNkdDhHjSrZb\",\"nzr3eJ3esDwr8z7hQ\",\"kYWb8BwpKwunQkxeX\",\"CMQwRi4wcqy8G7SSN\",\"MxQXA7kigYpyBS37i\",\"s5M5RvgqR9BhB9JoC\",\"YDWh5EwBtBLg85Gum\",\"8sNv5PTHa7XQ8bNqR\",\"YRstQuthRkFeBiXug\",\"YLtspA8ec6ntcoMMf\",\"fRuL2dZNwv5JifSrL\",\"xyk7XeuqKQYZqd7Rk\",\"R4SjTgDnpigJYDLyL\",\"f49AwcBzYsB2J2Y6E\",\"qZQxPQ2kaNKAMesHT\",\"BwTJWMcmHwFf9TeRG\",\"mDWNyaaQ9hvPCRzSd\",\"Z4M3NAa4TXquMNkHe\",\"AioJKoJ5ogzeBL5ZH\",\"JS3hNM3XXkxPdg3yk\",\"v9KtC8YLbMWmXiW2H\",\"vwHs2chujYmpR7hKF\",\"Ecg4m7srYGgZsb4Ck\",\"dfon4ySR6XeZk7dmK\",\"gJYuGdkXEWWmGRLzu\",\"YPrQCBKed9tgouRzC\",\"u72ipcjbNDSkWX8Gw\",\"n2BRY9X8899dcG8Bw\",\"Nfsj4eNFDjaFa39ga\",\"Pe8vWpDHRuH9nSGKW\",\"HF28xZKSLM9wEuqNg\",\"xqYQMujmvgQ78bnJc\",\"iojEnnY9FsMfYzp6f\",\"5qpAGt7e3P89JJvNe\",\"BrTDhPJcACL2bsrpJ\",\"ZJQW3bL2KzxJcdEoc\",\"f2BoqyCpgnmjEjLqx\",\"Wv2vJnEj8ywNmARoF\",\"SgZ2t9xFuRqdJGofp\",\"yjtdwc2AC4jA2RWtn\",\"9NCu6PzqPBbbrZ8L9\",\"KTFxMsjaW4xgo5ajY\",\"zZDaXBxMzTCBhNkgL\",\"uN5t57RETi5y2z5W8\",\"DEDniTrstQYGounXT\",\"4u53tzw39QRftQwBh\",\"qD2LrwaDrSdiybLKY\",\"incG8tH2dwThHg35f\",\"xn7uGNKeAwPEkP9oA\",\"QRv96jmNaYsWkxQEG\",\"J3upzLHuEwXH7Z2hx\",\"DPi9QGLctq2y76KuE\",\"Yp7uvStL97cC9fKkY\",\"rcBdBt8oq5uwENDmj\",\"faXXTDobS7gYBi3iQ\",\"WPf3wuMaAipBActzR\",\"gXTAie79kiw28tx5u\",\"hFP4fcjQFj8rGvzbu\",\"RTDx9axf52kxhFjwZ\",\"XhDyx6kebNbtr8hvM\",\"cAP3n5NY64uoMwzRR\",\"oBcs8GLX2ZFLXQy8y\",\"srJ34BaybkQh3qRkM\",\"CHvzhtXnv8HTbPQ56\",\"GGdmhAvxXhqhhibJN\",\"LQxof8pGabGuWP7Gn\",\"T6iBEE2jp7f7iEF2P\",\"AFfw7cGg83uYk2Miy\",\"buX4mCQhtXCfBjeno\",\"yod5YhKtPqw2GfG9B\",\"rhS8qXRjZcpDXkwnE\",\"suArq5BbSy7gD6xri\",\"2PufnQcsHsfymufX3\"],\"quality\":[5,4,4,5,5,5,1,1,2,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":3.7,\"family\":[{\"_id\":\"RRX73DEm2BLp8z2TG\",\"language\":\"cpp\"},{\"_id\":\"rbop9mHNAdCLwHK6n\",\"language\":\"javascript\"},{\"_id\":\"uCKJi6X3KTH9zuSc3\",\"language\":\"python3\"},{\"_id\":\"gbQa9sQozbchhSe45\",\"language\":\"ruby\"}]}}"]