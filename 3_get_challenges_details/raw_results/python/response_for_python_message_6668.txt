a["{\"msg\":\"result\",\"id\":\"2042\",\"result\":{\"_id\":\"jmZe7R4ibXkrQbogr\",\"author\":\"Leah Rappaport\",\"authorId\":\"mDWNyaaQ9hvPCRzSd\",\"code\":\"import re\\nr = ''\",\"difficulty\":2.8536585365853657,\"familyId\":\"pbkho9W92KseHoSxs\",\"instructions\":\"Write a **regular expression** that checks to see if a password is valid. For a password to be valid, it must meet the following requirments:\\n\\n1. The password must contain at least one uppercase character.\\n2. The password must contain at least one lowercase character.\\n3. The password must contain at least one number.\\n4. The password must contain at least one special character `! ? * #`\\n5. The password must be at least 8 characters in length.\\n\\n### Examples\\n```\\n\\\"Password*12\\\" ➞ True\\n\\n\\\"passWORD12!\\\" ➞ True\\n\\n\\\"Pass\\\" ➞ False\\n```\\n\\n### Notes\\n- The lowercase char, uppercase char, special char, and number can appear at any part of the password.\\n- **You will only be writing a regular expression; do not write a function.**\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"def validatePassword(password):\\n\\treturn bool(re.search(r,password))\\n\\n\\n#Passes\\nTest.assert_equals(validatePassword(\\\"Password*123\\\"), True)\\nTest.assert_equals(validatePassword(\\\"123e!*Ar\\\"), True)\\nTest.assert_equals(validatePassword(\\\"*Password*13\\\"), True)\\nTest.assert_equals(validatePassword(\\\"passWORD1?\\\"), True)\\nTest.assert_equals(validatePassword(\\\"eDAB1T#12\\\"), True)\\n\\n#FAILS\\nTest.assert_equals(validatePassword(\\\"Pass1!\\\"), False, \\\"Password not long enough\\\")\\nTest.assert_equals(validatePassword(\\\"Password1\\\"), False, \\\"Password does not contain special character\\\")\\nTest.assert_equals(validatePassword(\\\"*Password*\\\"), False, \\\"Password does not contain number\\\")\\nTest.assert_equals(validatePassword(\\\"PASSWORD12!\\\"), False, \\\"Password does not contain lowercase character\\\")\\nTest.assert_equals(validatePassword(\\\"password12!\\\"), False, \\\"Password does not contain uppercase character\\\")\",\"language\":\"python3\",\"quality\":0,\"summary\":\"Write a regular expression that checks to see if a password is valid. For a password to be valid, it must meet the following requirments:\\n\\nThe password must contain at least one uppercase character.\\nThe password must contain at least one lowercase character.\\nThe password must contain at least one number.\\nThe password must contain at least one special character\",\"tags\":[\"regex\",\"validation\"],\"timestamp\":{\"$date\":1603247206802},\"title\":\"Validate Password\",\"stats\":{\"completed\":{\"total\":39,\"ratings\":[3,3,3,3,3,4,4,4,3,5,2,5,5,4,4,1,3,1,4,5,2,5,5,1,3,4,4,2,1,1,2,5,3,0,5,0,2,0,0,1,2],\"quality\":[],\"rators\":[\"8PwfYqoDQFThzNtvf\",\"tAF9Gf6PiGogbZuWs\",\"h4x2jaMdj5aQZbW5g\",\"aEm3Wvj2rFYRL8Lrb\",\"5dHucvf2qBYyKim7X\",\"Y6w9WxXzRweSiy3Ls\",\"4fhjJBvLBWh6QeSih\",\"iS5BrkGLzJyPK7nKt\",\"c7uBxu2rgY77H5d79\",\"fSQSHjW3e72MrWxbD\",\"Po3v3dHCk6wYGKMwi\",\"Cc2Cgj4MWXZxsTooC\",\"8sNv5PTHa7XQ8bNqR\",\"58M252WF7SPRinfBx\",\"WsCqifua4yHhKp6N9\",\"sXyousNEPbHPufbNN\",\"iojEnnY9FsMfYzp6f\",\"J3upzLHuEwXH7Z2hx\",\"yjtdwc2AC4jA2RWtn\",\"AasGs8AeX9Lcb9xJn\",\"2PufnQcsHsfymufX3\",\"hkiz2Nv927cYGrA86\",\"JKb5rhL6DKcCAypF9\",\"vBH2Qwy4Jq5BbwXnL\",\"hR7GMiqGap4CzEWSy\",\"qNszsXx28cTxvGSNj\",\"kjvgTyRFyKHv44DcH\",\"sFMXNMFryYLjHsjYj\",\"T6iBEE2jp7f7iEF2P\",\"Hg2ni2maTkkNt9PZY\",\"E4uvdwQCmY2RmrYSw\",\"Y2kdcqi778utFwJMC\",\"YkkEsnByQ6YoW2uWT\",\"FGYBMbExbwHLD2Wdn\",\"yTtSCvGPyYna6JuRC\",\"gXTAie79kiw28tx5u\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"XqTrTFmaksWs8aADz\",\"language\":\"javascript\"},{\"_id\":\"jmZe7R4ibXkrQbogr\",\"language\":\"python3\"}]}}"]