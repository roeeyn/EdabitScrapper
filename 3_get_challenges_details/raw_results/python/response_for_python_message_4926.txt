a["{\"msg\":\"result\",\"id\":\"1179\",\"result\":{\"_id\":\"9ZAk3EEoQ9YPGGYhA\",\"author\":\"Cool_Kidd\",\"authorId\":\"i5iePG5GqhJJ8HEoB\",\"code\":\"def items_purchase(store, wallet):\\n\\t\",\"difficulty\":1.6375,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"JZYQEk5EHo8mtABbr\",\"instructions\":\"Create a function that returns any of the items you can afford in the `store` with the money you have in your `wallet`. Sort the list in alphabetical order.\\n\\n### Examples\\n```\\nitems_purchase({\\n  \\\"Water\\\": \\\"$1\\\",\\n  \\\"Bread\\\": \\\"$3\\\",\\n  \\\"TV\\\": \\\"$1,000\\\",\\n  \\\"Fertilizer\\\": \\\"$20\\\"\\n}, \\\"$300\\\") ➞ [\\\"Bread\\\", \\\"Fertilizer\\\", \\\"Water\\\"]\\n\\nitems_purchase({\\n  \\\"Apple\\\": \\\"$4\\\",\\n  \\\"Honey\\\": \\\"$3\\\",\\n  \\\"Fan\\\": \\\"$14\\\",\\n  \\\"Bananas\\\": \\\"$4\\\",\\n  \\\"Pan\\\": \\\"$100\\\",\\n  \\\"Spoon\\\": \\\"$2\\\"\\n  }, \\\"$100\\\") ➞ [\\\"Apple\\\", \\\"Bananas\\\", \\\"Fan\\\", \\\"Honey\\\", \\\"Pan\\\", \\\"Spoon\\\"]\\n\\nitems_purchase({\\n  \\\"Phone\\\": \\\"$999\\\",\\n  \\\"Speakers\\\": \\\"$300\\\",\\n  \\\"Laptop\\\": \\\"$5,000\\\",\\n  \\\"PC\\\": \\\"$1200\\\"},\\n\\\"$1\\\") ➞ \\\"Nothing\\\"\\n```\\n\\n### Notes\\nReturn `\\\"Nothing\\\"` if you can't afford anything from the `store`.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(items_purchase({\\\"Water\\\": \\\"$1\\\", \\\"Bread\\\": \\\"$3\\\", \\\"TV\\\": \\\"$1,000\\\",\\\"Fertilizer\\\": \\\"$20\\\"}, \\\"$300\\\"), [\\\"Bread\\\", \\\"Fertilizer\\\", \\\"Water\\\"])\\nTest.assert_equals(items_purchase({\\\"Apple\\\": \\\"$4\\\", \\\"Honey\\\": \\\"$3\\\", \\\"Fan\\\": \\\"$14\\\", \\\"Bananas\\\": \\\"$4\\\", \\\"Pan\\\": \\\"$100\\\", \\\"Spoon\\\": \\\"$2\\\"}, \\\"$100\\\"), [\\\"Apple\\\", \\\"Bananas\\\", \\\"Fan\\\", \\\"Honey\\\", \\\"Pan\\\", \\\"Spoon\\\"])\\nTest.assert_equals(items_purchase({\\\"Phone\\\": \\\"$999\\\", \\\"Speakers\\\": \\\"$300\\\", \\\"Laptop\\\": \\\"$5,000\\\", \\\"PC\\\": \\\"$1200\\\"}, \\\"$1\\\"), \\\"Nothing\\\")\",\"language\":\"python3\",\"quality\":4.653846153846154,\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,1,2,1,2,2,2,0,3,2,2,2,2,2,2,2,2,3,0,3,2,2,2,1,2,0,3,1,2,2,1,2,1,0,2,1,0,2,2,0,5,2,2,2,1,0,2,0,2,2,2,2,2,2,0,1,2,2,2,2,2,2,1,3,0,2,2,3,1,3,0,0,1,2,1,5],\"quality\":[5,5,5,5,3,5,5,5,5,5,5,4,5,4,5,5,5,5,5,5,4,4,5,3,5,4],\"rators\":[\"i5iePG5GqhJJ8HEoB\",\"8JyqsSbN2FJXPr3cw\",\"YcCLwitFMAEJSnxAW\",\"Yp7uvStL97cC9fKkY\",\"p8qqFdJ3FSk5x9z3G\",\"DPi9QGLctq2y76KuE\",\"C2AfMipCicfD58WJ9\",\"4nMm5uxZxCriJaoHP\",\"qD2LrwaDrSdiybLKY\",\"zd9FLSzsGz3evKafy\",\"gJYuGdkXEWWmGRLzu\",\"8BFSTCnoe2QggN64c\",\"8PwfYqoDQFThzNtvf\",\"gXTAie79kiw28tx5u\",\"HF28xZKSLM9wEuqNg\",\"s5M5RvgqR9BhB9JoC\",\"J3upzLHuEwXH7Z2hx\",\"QRv96jmNaYsWkxQEG\",\"iS5BrkGLzJyPK7nKt\",\"shdSrDq5ZKqfpgjmu\",\"gb9rvGus2Jv7bjZSs\",\"oBcs8GLX2ZFLXQy8y\",\"aEm3Wvj2rFYRL8Lrb\",\"PXAcsKkssS2yLyDv2\",\"5XiuAqicKD4hBdu63\",\"cAP3n5NY64uoMwzRR\",\"FEYpu9RWysAgW3XnP\",\"R3wNTTNz7jiBx7YJi\",\"yjtdwc2AC4jA2RWtn\",\"RGMbFMZXJr7DhcAJy\",\"cRoHBaA7HjePc8wb2\",\"7txFzDQ43vJ7qCY88\",\"dBzwBtRjZqB98DJeB\",\"9MER8SZ9Xo6xNYMj8\",\"buX4mCQhtXCfBjeno\",\"3pxHTZBsv7MKzFG6Y\",\"R4SjTgDnpigJYDLyL\",\"9bQyb6rW7xfE4vgrR\",\"eYfPWvZwnJQkHbSTK\",\"HqmxnQJM66Y57twhn\",\"5S9nX4rKsnCcnv4Cz\",\"zZDaXBxMzTCBhNkgL\",\"Jqk2uJZZxEv5wZFze\",\"5HCu9Ydd86QgHDRNP\",\"6xTu4r8NMczBFvmtz\",\"sbJcFfQjQ59Wfg4Cd\",\"d8qtzoLB264iP8tdY\",\"GGdmhAvxXhqhhibJN\",\"e7QB5tCAeoSeRCTxY\",\"wRttWTM59y8m5mx7x\",\"4RsakkyRXyYGwFxEa\",\"KJCDwGkoXh8qtbbKr\",\"Ds7L5bksw2QRHjrKL\",\"T2vhHPhRR96hRizq8\",\"J5T8gZqiZXFuFDTQ7\",\"CHvzhtXnv8HTbPQ56\",\"cR3ibTMxLyEdDFCHY\",\"qAby4AWXmTNeusvg3\",\"ijNKM8DuspXuAnC4y\",\"iojEnnY9FsMfYzp6f\",\"eMuCpJ2spXWkJjWNz\",\"8oxAEHuwvs9LZKHvq\",\"2u9wghjCydey6aWys\",\"8mGWypY7S2RcGcAPR\",\"bvmTE46bfcM4ogj34\",\"o4ixjQGSaYqA2JoM4\",\"66a9xX73nmTEuKs9k\",\"T6iBEE2jp7f7iEF2P\",\"DEDniTrstQYGounXT\",\"PC3pLs36zNzpRDSuE\",\"EfxwqhYdapX3dMQC2\",\"yr822PZmmiDDenxpB\",\"yod5YhKtPqw2GfG9B\",\"AasGs8AeX9Lcb9xJn\",\"H4LqzfSad6d4BCgwy\",\"9Ly8afdtofp8DXzrt\",\"tAF9Gf6PiGogbZuWs\",\"mDWNyaaQ9hvPCRzSd\",\"mvJBakQ35CWAnbbEZ\",\"sHjfbGQGLHE6JR6qu\",\"9gJsF5apWJGWZJprn\",\"ey3CASd6Je5LEJzfB\",\"Afnps7TJQuS9sipMb\",\"2NDSt8HyP33cFRHsu\",\"BrTDhPJcACL2bsrpJ\",\"reSPwrcdzBAnDWs2E\",\"nc7bRhkxgKyqusYe3\",\"Kf2wE7p7MTNrRe7YM\",\"AFfw7cGg83uYk2Miy\",\"dzS6WBTMHyFEag6Fp\",\"d9LBRxvADNBB5QJMB\",\"2PufnQcsHsfymufX3\",\"3CRf8CYo6fHSbqKQj\",\"mxX4rH5ELYkdZ2Mbw\",\"JhX7jvtpwNyxcc39m\",\"Ncn7Qn2LbdsiJnfFk\",\"syRNbbPdLCGXbH2Gy\",\"MKT7khMBGXzA22ykf\",\"4TmgHkn5vqyHK3sYC\",\"3nied3n8KG8RSNixH\",\"9pzFiFK3ANLjQfnr2\"],\"total\":107},\"flags\":0},\"summary\":\"Create a function that returns any of the items you can afford in the store with the money you have in your wallet. Sort the list in alphabetical order.\\n\\nExamples\\nitems_purchase({\\n  \\\"Water\\\": \\\"$1\\\",\\n  \\\"Bread\\\": \\\"$3\\\",\\n  \\\"TV\\\": \\\"$1,000\\\",\\n  \\\"Fertilizer\\\": \\\"$20\\\"\\n}, \\\"$300\\\") ➞ [\\\"Bread\\\", \\\"Fertilizer\\\", \\\"Water\\\"]\\n\\nitems_purchase({\\n  \\\"Apple\\\": \\\"$4\\\",\\n  \\\"Honey\\\": \\\"$3\\\",\\n  \\\"Fan\\\": \\\"\",\"tags\":[\"arrays\",\"data_structures\",\"objects\"],\"timestamp\":{\"$date\":1603743481299},\"title\":\"Got Enough Money?\",\"family\":[{\"_id\":\"Qifo5G2hgWXWXLegi\",\"language\":\"javascript\"},{\"_id\":\"9ZAk3EEoQ9YPGGYhA\",\"language\":\"python3\"}]}}"]