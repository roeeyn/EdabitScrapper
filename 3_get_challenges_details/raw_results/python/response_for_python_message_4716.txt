a["{\"msg\":\"result\",\"id\":\"1074\",\"result\":{\"_id\":\"czjjch48tZYjTDmtH\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def is_shifted(lst1, lst2):\\n\\t\\n\\ndef is_multiplied(lst1, lst2):\\n\\t\",\"difficulty\":1.5602409638554218,\"familyId\":\"qBsNLALoNiA7bHSXe\",\"instructions\":\"For this task, you will write two validators.\\n\\n1. **Shift Validator:** When each element is translated (added or subtracted) by a constant.\\n2. **Multiple Validator:** When each element is multiplied (by a positive or negative number) by a constant.\\n\\nA few examples to illustrate these respective functions:\\n\\n### Examples\\n```\\nis_shifted([1, 2, 3], [2, 3, 4]) ➞ True\\n# Each element is shifted +1\\n\\nis_shifted([1, 2, 3], [-9, -8, -7]) ➞ True\\n# Each element is shifted -10\\n\\nis_multiplied([1, 2, 3], [10, 20, 30]) ➞ True\\n# Each element is multiplied by 10\\n\\nis_multiplied([1, 2, 3], [-0.5, -1, -1.5]) ➞ True\\n# Each element is multiplied by -1/2\\n\\nis_multiplied([1, 2, 3], [0, 0, 0]) ➞ True\\n# Each element is multiplied by 0\\n```\\n\\n### Notes\\n- The given lists are the same length.\\n- Keep in mind one special case: if the **second list** is a list of **only zeroes**, then the first list can be anything (the multiplier will be `0`).\",\"lab\":\"Test.assert_equals(is_shifted([1, 2, 3], [2, 3, 4]), True)\\nTest.assert_equals(is_shifted([1, 2, 3], [-9, -8, -7]), True)\\nTest.assert_equals(is_multiplied([1, 2, 3], [10, 20, 30]), True)\\nTest.assert_equals(is_multiplied([1, 2, 3], [-0.5, -1, -1.5]), True )\\nTest.assert_equals(is_multiplied([1, 2, 3], [0, 0, 0]), True )\\nTest.assert_equals(is_shifted([1, 2, 3], [2, 3, 5]), False)\\nTest.assert_equals(is_shifted([1, 2, 3], [-9, -1, -7]), False)\\nTest.assert_equals(is_multiplied([1, 2, 3], [10, 20, 29]), False)\\nTest.assert_equals(is_multiplied([1, 2, 3], [-0.5, -1, -2]), False)\\nTest.assert_equals(is_multiplied([1, 2, 3], [0, 0, 1]), False)\",\"language\":\"python3\",\"summary\":\"For this task, you will write two validators.\\n\\nShift Validator: When each element is translated (added or subtracted) by a constant.\\nMultiple Validator: When each element is multiplied (by a positive or negative number) by a constant.\\n\\nA few examples to illustrate these respective functions:\\n\\nExamples\\nis_shifted([1, 2, 3], [2, 3, 4]) ➞ True\\nEach element is shi\",\"tags\":[\"validation\",\"higher_order_functions\"],\"timestamp\":{\"$date\":1553734655046},\"title\":\"Shift and Multiple Validators\",\"stats\":{\"completed\":{\"total\":189,\"ratings\":[2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,2,2,2,1,1,1,2,2,0,2,1,2,1,2,2,2,2,1,2,2,2,1,1,2,1,1,2,1,2,2,1,1,2,1,2,2,1,1,0,2,2,2,0,2,2,2,2,2,1,2,2,2,2,1,1,2,2,2,2,2,2,1,0,3,2,0,1,2,0,1,1,2,2,2,2,1,2,2,0,2,2,2,2,1,1,2,2,0,2,2,2,2,1,2,2,2,2,2,3,1,2,2,1,0,1,1,2,1,1,3,2,2,1,1,2,0,1,2,2,1,1,2,2,2,0,2,1,1,2,2,0,0,1,2,2,2,2,1,1,1,2,2,2,2,1,1,1,1,2,3],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"yZvzB3qFb8pkHy4dg\",\"8JyqsSbN2FJXPr3cw\",\"Jqk2uJZZxEv5wZFze\",\"gb9rvGus2Jv7bjZSs\",\"M8jrv2FfpMQp9Qzpx\",\"SKabuq5XuhXBugKBa\",\"B6XFMKBcfjBkdfa58\",\"inv2QAaW98TDFqBCM\",\"QxTZm86PcKFLiuZAr\",\"rB53BwZLCNjMautKC\",\"CnEvrSom7vBKpAi9T\",\"qvEvDcL32a5F4Tg6c\",\"X9NeqaKpfykoscpYr\",\"tAF9Gf6PiGogbZuWs\",\"uSh3aNxzD28jBuhxa\",\"Y3KkPrBzMBgMiqaQ6\",\"T3ZAuoMrJjvZwN55B\",\"FikSPhcrHBpQ4CyGC\",\"AF6LgdKhEdzwgRJom\",\"kQH5b8MXJunh84Czq\",\"ab7BsQuhDo3QgE6bh\",\"6ckDJWbyznyQQLkrP\",\"EPgZSeQrPkXKnTqdG\",\"PFjMZGHNAPTkgd7tq\",\"TNQ7ixK78HHTLP7it\",\"ahWFxnaxt9bXSA4f3\",\"tHEH9MBHBAGvhgJGd\",\"C9LKGu2g5hSijvDzA\",\"TNMAJidLpPdH4kmBv\",\"yrCNkFYQBEDE76eFS\",\"PSrcg6fy835R4c5CW\",\"o5pRKAbyH9TjiB59q\",\"WkWyq9wMkZhXB6zsD\",\"6u7yc9m6HuHGbHzph\",\"Nj6FwgBtAXsaQwsM2\",\"nfXGHENb5md7m355s\",\"gMJhLdyw3tH7L96X2\",\"JEAi9mG3vvBomJ3Yu\",\"XKi8iZXBCHCaebSHh\",\"N2wnZXkhDH86mgjQ8\",\"498CxrZQdThLMa7ki\",\"FgkYtHLxeD8pETJ8T\",\"cR3ibTMxLyEdDFCHY\",\"nzx4uAPg3hCceyFPE\",\"T2vhHPhRR96hRizq8\",\"HQxp7NcdvF92G7bYS\",\"jeuoearPPTcGPgXhf\",\"2fxapKr8XGdNeaKi2\",\"otXtuQygbcYATMZoP\",\"HqmxnQJM66Y57twhn\",\"K96FwtfDDN5WM4Bb7\",\"6KcnCdQ3zEnARWogF\",\"u5u2YpHXiNgzDNJdX\",\"K3RacTvkWHLfzKF8i\",\"PTcm3qFvxvLnaKttM\",\"C4QntmkYtB89GNtpd\",\"6ShafRStcvew4GfCh\",\"4tgBydK887PitgAoi\",\"Xj6R2zqhgumffQCAN\",\"BeFnbPbMnAM2SjBdZ\",\"Yp7uvStL97cC9fKkY\",\"PXAcsKkssS2yLyDv2\",\"QnPD4Sv6W4LHc2Qng\",\"s5M5RvgqR9BhB9JoC\",\"AasGs8AeX9Lcb9xJn\",\"4CFzv558qbGcpQwc4\",\"sJWTa7iWeRoRtqJ8N\",\"v3fjGuc7Pq4yjFygS\",\"Z85ajWfZ4jDPkbvR4\",\"63WWffiH4ek9S4hS7\",\"w3A7cBWyAfukk6xEQ\",\"mxX4rH5ELYkdZ2Mbw\",\"9Ly8afdtofp8DXzrt\",\"vLrq4dEDMM2wd68Dc\",\"dHZqT6h4JMwk5fPC8\",\"aRqQ42J5zqCmBNd8w\",\"orFLgPDw9H5MDzmwo\",\"BEdxteC2PKrmTLbdM\",\"hnyhBFWwNCz9mDfSi\",\"8PwfYqoDQFThzNtvf\",\"jNvegJWCk5HCtEMbK\",\"ZNnsMeNkdDhHjSrZb\",\"aEm3Wvj2rFYRL8Lrb\",\"Ro3ppqamSxiJv2wxP\",\"2QGRoQn2dRq3scu7k\",\"gJYuGdkXEWWmGRLzu\",\"k2RxDbsaJCdDju6oB\",\"9bQyb6rW7xfE4vgrR\",\"DEDniTrstQYGounXT\",\"gSFJPsMXnqAog3Q9f\",\"KdNDysEsy2TW5QRJ2\",\"kYWb8BwpKwunQkxeX\",\"9pzFiFK3ANLjQfnr2\",\"ahk2qiXKJA753wAJk\",\"TR5aWdDKP6iaL6mGK\",\"a777e8chPvJkY3tKa\",\"ACEZh39brWjdGkZXb\",\"zT9LpkiwYjLviYYW6\",\"yr822PZmmiDDenxpB\",\"DWp2uozZmattoNS87\",\"9dgvEreRDYRiwLmYv\",\"ZrKCkX7xxGGZzauFW\",\"H4abACFDH5t8CnnyH\",\"NG8PWBSjsM8mMhQEq\",\"oXWukoReqPeHst5d5\",\"syRNbbPdLCGXbH2Gy\",\"iojEnnY9FsMfYzp6f\",\"WwMjW4MJRuNFExoPc\",\"JijDKY284YP3xWcZx\",\"Ecg4m7srYGgZsb4Ck\",\"Pe8vWpDHRuH9nSGKW\",\"yjtdwc2AC4jA2RWtn\",\"XrqNzJ2FRG8HnGiR6\",\"NNE5HNRXAkmhrWgyQ\",\"oBcs8GLX2ZFLXQy8y\",\"w2HhxvSLmDhaGCAjE\",\"YcCLwitFMAEJSnxAW\",\"mG8HqKiAQFTdRZthG\",\"tpxMgkGSHwBjS95Ta\",\"gXTAie79kiw28tx5u\",\"FEYpu9RWysAgW3XnP\",\"p8qqFdJ3FSk5x9z3G\",\"DPi9QGLctq2y76KuE\",\"J3upzLHuEwXH7Z2hx\",\"dYPkStFnLvAMsHSzZ\",\"iS5BrkGLzJyPK7nKt\",\"cAP3n5NY64uoMwzRR\",\"5XiuAqicKD4hBdu63\",\"RGMbFMZXJr7DhcAJy\",\"DiWMTKG3JEgRBTWaT\",\"zd9FLSzsGz3evKafy\",\"E4GykbY9hg9H2k5Bc\",\"dBzwBtRjZqB98DJeB\",\"r579vsQvT57bCxrE5\",\"d8qtzoLB264iP8tdY\",\"yMcCr6yobXJnkgxH2\",\"5HCu9Ydd86QgHDRNP\",\"JhX7jvtpwNyxcc39m\",\"5S9nX4rKsnCcnv4Cz\",\"KJCDwGkoXh8qtbbKr\",\"GGdmhAvxXhqhhibJN\",\"PWgzeK859suojbrRx\",\"kWfNDxZyXFJxaTd2S\",\"Ds7L5bksw2QRHjrKL\",\"GTKsdeEihE636Le9i\",\"J5T8gZqiZXFuFDTQ7\",\"qAby4AWXmTNeusvg3\",\"AFfw7cGg83uYk2Miy\",\"T6iBEE2jp7f7iEF2P\",\"66a9xX73nmTEuKs9k\",\"eMuCpJ2spXWkJjWNz\",\"srJ34BaybkQh3qRkM\",\"yod5YhKtPqw2GfG9B\",\"eHcgvkTGsH7ZziqBo\",\"8BFSTCnoe2QggN64c\",\"mvJBakQ35CWAnbbEZ\",\"AJexRBN9cYQmqvYu6\",\"CHvzhtXnv8HTbPQ56\",\"qzXAMXsHZGT8o5hTA\",\"BrTDhPJcACL2bsrpJ\",\"XD5nmvKQchKezPXhy\",\"aXgyu8gTAeCnfse5Y\",\"2PufnQcsHsfymufX3\",\"buX4mCQhtXCfBjeno\",\"sHjfbGQGLHE6JR6qu\",\"T6Rm8mREPMZSftzrC\",\"dzS6WBTMHyFEag6Fp\",\"d9LBRxvADNBB5QJMB\",\"4TmgHkn5vqyHK3sYC\",\"pduNK68oazqQTtbLp\",\"5NZEGBAe96KjpQS2C\",\"3nied3n8KG8RSNixH\",\"Wi4H6ayKsNDWWQCG5\",\"RTHFoSnMqwBhjpHmc\",\"4Lwjr34ypKNQNQCar\",\"MKT7khMBGXzA22ykf\",\"X4rzfxGgxx6CS7Bpz\"],\"quality\":[4,5,4,5,5,5,5,5,4,5,5,4,5,4,5,5,5,5,5,5,5]},\"tests\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.761904761904762,\"family\":[{\"_id\":\"P49fFmPZWkTy5Nkro\",\"language\":\"cpp\"},{\"_id\":\"jYJiNZqx588FFJ5F7\",\"language\":\"javascript\"},{\"_id\":\"czjjch48tZYjTDmtH\",\"language\":\"python3\"},{\"_id\":\"CLWXJeGHXm48xJqyZ\",\"language\":\"ruby\"}]}}"]