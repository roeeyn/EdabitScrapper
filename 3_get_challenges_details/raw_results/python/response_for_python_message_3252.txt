a["{\"msg\":\"result\",\"id\":\"349\",\"result\":{\"_id\":\"wfGpK8TAeiy8uRsvN\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"def filter_string(txt):\\n\\t\",\"difficulty\":0.648854961832061,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"rFAmNHdY4i9G9D7y2\",\"instructions\":\"**Mubashir** needs your help to count uppercase letters, lowercase letters, numbers and special characters in a given string.\\n\\nCreate a function which takes a string `txt` and returns a list of numbers with **count of uppercase letters, lowercase letters, numbers and special characters**.\\n\\n### Examples\\n```\\nfilter_string(\\\"*$(#Mu12bas43hiR%@*!\\\") ➞ [2, 6, 4, 8]\\n# 2 uppercase letters\\n# 6 lowercase letters\\n# 4 numbers\\n# 8 special characters\\n\\nfilter_string(\\\"^^Edabit^^%$#12379\\\") ➞ [1, 5, 5, 7]\\n\\nfilter_string(\\\"**Airforce1**\\\") ➞ [1, 7, 1, 4]\\n```\\n\\n### Notes\\nN/A\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(filter_string(\\\"*$(#Mu12bas43hiR%@*!\\\"), [2,6,4,8])\\nTest.assert_equals(filter_string(\\\"^^Edabit^^%$#12379\\\"), [1,5,5,7])\\nTest.assert_equals(filter_string(\\\"123PakisTan#$%\\\"), [2,6,3,3])\\nTest.assert_equals(filter_string(\\\"**Airforce1**\\\"), [1,7,1,4])\\nTest.assert_equals(filter_string(\\\"bgA5<1d-tOwUZTS8yQ\\\"), [7,6,3,2])\\nTest.assert_equals(filter_string(\\\"P*K4%>mQUDaG$h=cx2?.Czt7!Zn16p@5H\\\"), [9,9,6,9])\\nTest.assert_equals(filter_string(\\\"RYT'>s&gO-.CM9AKeH?,5317tWGpS<*x2ukXZD\\\"), [15,8,6,9])\\nTest.assert_equals(filter_string(\\\"$Cnl)Sr<7bBW-&qLHI!mY41ODe\\\"), [10,7,3,6])\\nTest.assert_equals(filter_string(\\\"@mw>0=QD-iAx!rp9TaG?o&M%l$34L.nbft\\\"), [7,13,4,10])\\n#Mubashir\",\"language\":\"python3\",\"quality\":4.65625,\"stats\":{\"completed\":{\"ratings\":[0,0,0,0,0,0,1,0,0,1,1,2,0,2,0,2,0,0,1,1,0,1,0,2,0,0,1,0,0,1,1,0,2,5,0,0,0,1,1,0,0,1,0,1,1,2,1,0,0,1,0,0,0,0,1,0,0,1,0,1,0,0,0,1,2,1,2,0,1,0,0,0,1,1,1,0,0,2,0,0,2,0,0,0,0,0,0,1,1,2,0,0,1,1,0,0,2,0,1,1,0,0,1,0,1,2,0,0,1,2,0,1,1,0,0,1,0,0,2,1,0,1,0,1,1,2,3,1,1,0,2],\"quality\":[5,5,5,5,5,5,4,5,4,5,5,4,5,5,5,5,5,5,4,4,1,5,5,5,5,5,5,5,5,3,5,5],\"rators\":[\"T6iBEE2jp7f7iEF2P\",\"iojEnnY9FsMfYzp6f\",\"FEYpu9RWysAgW3XnP\",\"iS5BrkGLzJyPK7nKt\",\"wjc4iejpErBhxWwHo\",\"Fb2wehA7QgTFWry2x\",\"XD5nmvKQchKezPXhy\",\"Ds7L5bksw2QRHjrKL\",\"eMuCpJ2spXWkJjWNz\",\"cR3ibTMxLyEdDFCHY\",\"bgpTbHkMNnF4eWpAW\",\"DPi9QGLctq2y76KuE\",\"zC8WrPp5BC6c2exrW\",\"pwWtbXEjzuvrhEGwt\",\"pPpmP7xeJzGgK362R\",\"srJ34BaybkQh3qRkM\",\"QRv96jmNaYsWkxQEG\",\"PXAcsKkssS2yLyDv2\",\"PC3pLs36zNzpRDSuE\",\"XEjiqMFvDTLTo2X9G\",\"YcCLwitFMAEJSnxAW\",\"sX9GZp3fYyQLrBKMJ\",\"AXcnPX68zdMiLNSmu\",\"3cF6NXq3ZEwdkgSjb\",\"9pzFiFK3ANLjQfnr2\",\"gJYuGdkXEWWmGRLzu\",\"DEDniTrstQYGounXT\",\"fTNQmMvTZhhiGBCMe\",\"JKbEBybAsiKrmcqof\",\"rfyEkETeoS96QNH4e\",\"8JyqsSbN2FJXPr3cw\",\"gb9rvGus2Jv7bjZSs\",\"J5T8gZqiZXFuFDTQ7\",\"zd9FLSzsGz3evKafy\",\"oBcs8GLX2ZFLXQy8y\",\"66a9xX73nmTEuKs9k\",\"CHvzhtXnv8HTbPQ56\",\"yjtdwc2AC4jA2RWtn\",\"wRttWTM59y8m5mx7x\",\"AFfw7cGg83uYk2Miy\",\"ghMkPtdFCpM6w8nax\",\"uvLimfW9x3bCp7huQ\",\"5HCu9Ydd86QgHDRNP\",\"kjvgTyRFyKHv44DcH\",\"2QGRoQn2dRq3scu7k\",\"Yp7uvStL97cC9fKkY\",\"YRAzEBJoLvSaiPtYx\",\"tAF9Gf6PiGogbZuWs\",\"XrqNzJ2FRG8HnGiR6\",\"bvmTE46bfcM4ogj34\",\"N2wnZXkhDH86mgjQ8\",\"CyzskHGsC6WSmYrLu\",\"mxX4rH5ELYkdZ2Mbw\",\"4TmgHkn5vqyHK3sYC\",\"fdyejapW3NWN7utPX\",\"DeEFJNR4jdF7WnjMh\",\"NzbRqGWspQnWMoDrF\",\"8teSHp77vHhhvJWiS\",\"Q6gEE9dG8ERy2Xu3c\",\"jgyuzt5BpA3ohHG96\",\"RTER5uJdW4khkiNbY\",\"9Ly8afdtofp8DXzrt\",\"s7PAdYARQvr8scq84\",\"mvJBakQ35CWAnbbEZ\",\"AQSqD9oNv2uPfxZCR\",\"Fk9kLwoG4Brf4KsKf\",\"T6Rm8mREPMZSftzrC\",\"M2gFMJkocQSY6bsFR\",\"jkbavR2ATFJcpmo8M\",\"NP2RxM3eBd3drnDwP\",\"8PwfYqoDQFThzNtvf\",\"a2Kmh6ekWqQQooHiQ\",\"JiSpvq6C7azQEmENc\",\"j7ebNFtte6fSkMWjj\",\"sbJcFfQjQ59Wfg4Cd\",\"aEm3Wvj2rFYRL8Lrb\",\"DTyNcDkiScCjgJt28\",\"DFpZcskPncmo7fuzR\",\"FxbTzThBiTnRzfirA\",\"2MjzJ7yxh3eT3xbng\",\"jWbd7SYDzLPjc9EDh\",\"x2Cz7S8rCKJqCE3Xe\",\"EfxwqhYdapX3dMQC2\",\"AasGs8AeX9Lcb9xJn\",\"kqYkfcZMkp5u2EdXZ\",\"sHjfbGQGLHE6JR6qu\",\"FiaTpm7ehfDv43wSG\",\"MKT7khMBGXzA22ykf\",\"iYXdNw7tKcgA3QwBX\",\"Dq24MSpogRmq6L4hX\",\"Cg3LKtEAJpsrdWroG\",\"yr822PZmmiDDenxpB\",\"J3upzLHuEwXH7Z2hx\",\"JhX7jvtpwNyxcc39m\",\"HqmxnQJM66Y57twhn\",\"cRoHBaA7HjePc8wb2\",\"Afnps7TJQuS9sipMb\",\"bSeEB8ypsxnQxX2SJ\",\"JS3hNM3XXkxPdg3yk\",\"PTDFuxAzou7W6asWt\",\"XbxHXmh5ZmRN2gw3K\",\"JKb5rhL6DKcCAypF9\",\"yAouD3PxzED8a4gap\",\"gKnWjDjwrJh7MK2df\",\"pQwhNKiCne4gEZgcn\",\"54BFnXEjY3FuRNYpN\",\"qAby4AWXmTNeusvg3\",\"cdXmwjupCXSvJTSNo\",\"SkQcb2sRn4as5KpnN\",\"syRNbbPdLCGXbH2Gy\",\"Jqk2uJZZxEv5wZFze\",\"yXGiiSAR5nBHnH3yr\",\"dYPkStFnLvAMsHSzZ\",\"aN6owKqBeZj7ZefFR\",\"7q8oBsCHwn48Ppnrq\",\"b7yQWr6eJFxYTmt3j\",\"ecytnKJxjCPk8Kbif\",\"gjiu8kLnHYxe4HoBN\",\"9LrF5o2TK2iE8BZJh\",\"k5mp7Hkg8w5rwiXpe\",\"5nbHH4eApn6So9h2n\",\"fGvJRtjbJFJJZLCnW\",\"YZsZjfvd3PnLhDJrR\",\"5QN8R22z43SrwoHDz\",\"uK58g2EXxqxTaB2iA\",\"qaPjAANdnxFnWfj5d\",\"B4y8aoyXJtskYPFEL\",\"dzS6WBTMHyFEag6Fp\",\"u5u2YpHXiNgzDNJdX\",\"2qtde7moqrzm7B4Ht\",\"858b7KAn3NyWjGR84\",\"AMpQSjKsRqhCDyS2j\",\"rF97GDLqCgynr7BaD\",\"gbGzZz5Yq5hT357v8\",\"afvP29FhRou2bTaav\",\"vAbK8sCfKyFC78HYg\",\"Ne8mK9DDHG8TRkoxG\",\"TZXsGETdPZPfSWBnP\",\"tR9grPBLncwacBTzr\",\"fMp8sPsKSECdfgF9j\",\"M8dQuMrEpP8Hc3tHN\",\"3LiSLdtN58n46NEqg\",\"rrSC943cCKNG48sH4\",\"M4vq8ATaS9Jg5X7iP\",\"PKu9i6fmR67WGCgad\",\"sMcFMPkMJC4Kh6ymj\",\"AwXQLqnTYzcCQrnqQ\",\"8pu5ud4XRDe6or8Bs\",\"rraTtctZqnjXu2L2x\",\"Wi4H6ayKsNDWWQCG5\",\"7DXJ3mvKMHHqBLt92\",\"rQA9SE8nuwFueaHsR\",\"4akHBgnDEDj3Rkv5n\",\"Q4jEjwoz68B9jWy4D\",\"wrL4iX2CCSqDCCty3\",\"NrRa4TS6uZR9xuXRt\",\"3SgSNoAB3sxaYeT3w\",\"7HAL7H6NJmc4NC8Q5\"],\"total\":167},\"flags\":0},\"summary\":\"Mubashir needs your help to count uppercase letters, lowercase letters, numbers and special characters in a given string.\\n\\nCreate a function which takes a string txt and returns a list of numbers with count of uppercase letters, lowercase letters, numbers and special characters.\\n\\nExamples\\nfilter_string(\\\"$(#Mu12bas43hiR%@!\\\") ➞ [2, 6, 4, 8]\\n2 uppercase letters\\n6\",\"tags\":[\"strings\",\"regex\",\"interview\",\"language_fundamentals\"],\"timestamp\":{\"$date\":1615013633782},\"title\":\"Filter a String\",\"family\":[{\"_id\":\"CS66RDr865vJDqBCu\",\"language\":\"cpp\"},{\"_id\":\"KWkWjHNzgCqM6yPBa\",\"language\":\"javascript\"},{\"_id\":\"wfGpK8TAeiy8uRsvN\",\"language\":\"python3\"},{\"_id\":\"rNayYHB5p4bwkWWxz\",\"language\":\"ruby\"}]}}"]