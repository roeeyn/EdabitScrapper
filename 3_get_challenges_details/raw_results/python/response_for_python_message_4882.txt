a["{\"msg\":\"result\",\"id\":\"1159\",\"result\":{\"_id\":\"czLhTsGjScMTDtZxJ\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"def primorial(n):\\n\\t\",\"difficulty\":1.6119402985074627,\"familyId\":\"qMK37MTa36LscDsCL\",\"instructions\":\"In mathematics, primorial, denoted by “#”, is a function from natural numbers to natural numbers similar to the factorial function, but rather than successively multiplying positive integers, the function only multiplies **prime numbers**.\\n\\nCreate a function that takes an integer `n` and returns its **primorial**.\\n\\n### Examples\\n```\\nprimorial(1) ➞ 2\\n# First prime number = 2\\n\\nprimorial(2) ➞ 6\\n# Product of first two prime numbers = 2*3 = 6\\n\\nprimorial(6) ➞ 30030\\n```\\n\\n### Notes\\nn >= 1.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(primorial(1), 2)\\nTest.assert_equals(primorial(2), 6)\\nTest.assert_equals(primorial(3), 30)\\nTest.assert_equals(primorial(4), 210)\\nTest.assert_equals(primorial(5), 2310)\\nTest.assert_equals(primorial(8), 9699690)\\nTest.assert_equals(primorial(9), 223092870)\\n\\n# Mubashir\",\"language\":\"python3\",\"quality\":4.705882352941177,\"summary\":\"In mathematics, primorial, denoted by “#”, is a function from natural numbers to natural numbers similar to the factorial function, but rather than successively multiplying positive integers, the function only multiplies prime numbers.\\n\\nCreate a function that takes an integer n and returns its primorial.\\n\\nExamples\\nprimorial(1) ➞ 2\\nFirst prime number = 2\\n\\nprimo\",\"tags\":[\"math\",\"logic\",\"numbers\",\"interview\"],\"timestamp\":{\"$date\":1612007151799},\"title\":\"Primorial of a Number\",\"stats\":{\"completed\":{\"total\":84,\"ratings\":[1,1,1,1,1,0,1,5,2,2,2,2,1,2,0,0,1,2,2,1,4,2,3,1,2,2,2,0,2,2,2,2,0,0,2,1,1,1,0,2,2,3,2,2,2,0,1,0,3,2,2,2,2,1,2,2,1,2,3,2,2,1,2,3,2,1,2],\"quality\":[3,5,5,5,5,5,4,5,5,5,5,3,5,5,5,5,5],\"rators\":[\"T6iBEE2jp7f7iEF2P\",\"PXAcsKkssS2yLyDv2\",\"J5T8gZqiZXFuFDTQ7\",\"8PwfYqoDQFThzNtvf\",\"s5M5RvgqR9BhB9JoC\",\"iS5BrkGLzJyPK7nKt\",\"Ds7L5bksw2QRHjrKL\",\"yjtdwc2AC4jA2RWtn\",\"p8qqFdJ3FSk5x9z3G\",\"GGdmhAvxXhqhhibJN\",\"QRv96jmNaYsWkxQEG\",\"cR3ibTMxLyEdDFCHY\",\"sKfrD9gjCDHuqLzSk\",\"oBcs8GLX2ZFLXQy8y\",\"cAP3n5NY64uoMwzRR\",\"HF28xZKSLM9wEuqNg\",\"YcCLwitFMAEJSnxAW\",\"w2HhxvSLmDhaGCAjE\",\"Jqk2uJZZxEv5wZFze\",\"buX4mCQhtXCfBjeno\",\"sHjfbGQGLHE6JR6qu\",\"gXTAie79kiw28tx5u\",\"XujK3rHd3JcM9TLJy\",\"gb9rvGus2Jv7bjZSs\",\"aXq5prmuL6p4xbPBR\",\"FEYpu9RWysAgW3XnP\",\"zd9FLSzsGz3evKafy\",\"gJYuGdkXEWWmGRLzu\",\"Yp7uvStL97cC9fKkY\",\"8JyqsSbN2FJXPr3cw\",\"9ivvGvJGvtQfigQaZ\",\"K6MfKMytoJJuSGewP\",\"iojEnnY9FsMfYzp6f\",\"ouD6cs7ZdxzPfKRKt\",\"CHvzhtXnv8HTbPQ56\",\"Wpn95NqWxncQrwNgz\",\"2QGRoQn2dRq3scu7k\",\"bvmTE46bfcM4ogj34\",\"5HCu9Ydd86QgHDRNP\",\"66a9xX73nmTEuKs9k\",\"AQSqD9oNv2uPfxZCR\",\"H9KZi2cjt4FwH7qog\",\"DEDniTrstQYGounXT\",\"yod5YhKtPqw2GfG9B\",\"yr822PZmmiDDenxpB\",\"srJ34BaybkQh3qRkM\",\"PWgzeK859suojbrRx\",\"5XiuAqicKD4hBdu63\",\"AasGs8AeX9Lcb9xJn\",\"9Ly8afdtofp8DXzrt\",\"c2q7mY39z5JPEMCaM\",\"2PufnQcsHsfymufX3\",\"BrTDhPJcACL2bsrpJ\",\"8BFSTCnoe2QggN64c\",\"M6fxKEh6am7YajPiT\",\"LQxof8pGabGuWP7Gn\",\"DPi9QGLctq2y76KuE\",\"HqmxnQJM66Y57twhn\",\"eHcgvkTGsH7ZziqBo\",\"qzXAMXsHZGT8o5hTA\",\"tAF9Gf6PiGogbZuWs\",\"waHvhqyyDQNavYmBJ\",\"J3upzLHuEwXH7Z2hx\",\"XD5nmvKQchKezPXhy\",\"SxzqqQZ4HEwY9oCzE\",\"9bQyb6rW7xfE4vgrR\",\"Afnps7TJQuS9sipMb\",\"AMpQSjKsRqhCDyS2j\",\"dzS6WBTMHyFEag6Fp\",\"rhS8qXRjZcpDXkwnE\",\"4TmgHkn5vqyHK3sYC\",\"qaPjAANdnxFnWfj5d\",\"suArq5BbSy7gD6xri\",\"aEm3Wvj2rFYRL8Lrb\",\"3nied3n8KG8RSNixH\",\"xqoisFmSjeDeAhuXF\",\"9pzFiFK3ANLjQfnr2\",\"Wi4H6ayKsNDWWQCG5\",\"FQoDbW3f7viY9x6xq\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"pJnj8jkgmJc435GS5\",\"language\":\"cpp\"},{\"_id\":\"NavpMQj44kMQ6bXo7\",\"language\":\"javascript\"},{\"_id\":\"nZfu98qqu6JohCKSs\",\"language\":\"php\"},{\"_id\":\"czLhTsGjScMTDtZxJ\",\"language\":\"python3\"},{\"_id\":\"SZzhf5jEwXDRMdcBJ\",\"language\":\"ruby\"}]}}"]