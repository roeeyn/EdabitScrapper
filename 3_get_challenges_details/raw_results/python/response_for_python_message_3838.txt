a["{\"msg\":\"result\",\"id\":\"638\",\"result\":{\"_id\":\"3f2qF2CgM32zvQTwa\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"def format_math(expr):\\n\\t\",\"difficulty\":1.0904392764857882,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"KkPRknkSS7dn3vQWE\",\"instructions\":\"Given a simple *math expression* as a string, neatly format it *as an equation*.\\n\\n### Examples\\n```\\nformat_math(\\\"3 + 4\\\") ➞ \\\"3 + 4 = 7\\\"\\n\\nformat_math(\\\"3 - 2\\\") ➞ \\\"3 - 2 = 1\\\"\\n\\nformat_math(\\\"4 x 5\\\") ➞ \\\"4 x 5 = 20\\\"\\n\\nformat_math(\\\"6 / 3\\\") ➞ \\\"6 / 3 = 2\\\"\\n```\\n\\n### Notes\\n- You will need to deal with **addition**, **subtraction**, **multiplication** and **division**.\\n- Division will have **whole number** answers (and will obviously **not** involve 0).\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(format_math(\\\"3 + 4\\\"), \\\"3 + 4 = 7\\\")\\nTest.assert_equals(format_math(\\\"3 - 2\\\"), \\\"3 - 2 = 1\\\")\\nTest.assert_equals(format_math(\\\"4 x 5\\\"), \\\"4 x 5 = 20\\\")\\nTest.assert_equals(format_math(\\\"6 / 3\\\"), \\\"6 / 3 = 2\\\")\\nTest.assert_equals(format_math(\\\"9 / 3\\\"), \\\"9 / 3 = 3\\\")\\nTest.assert_equals(format_math(\\\"21 / 3\\\"), \\\"21 / 3 = 7\\\")\\nTest.assert_equals(format_math(\\\"24 / 3\\\"), \\\"24 / 3 = 8\\\")\\nTest.assert_equals(format_math(\\\"80 / 8\\\"), \\\"80 / 8 = 10\\\")\\nTest.assert_equals(format_math(\\\"60 / 30\\\"), \\\"60 / 30 = 2\\\")\\nTest.assert_equals(format_math(\\\"44 - 11\\\"), \\\"44 - 11 = 33\\\")\\nTest.assert_equals(format_math(\\\"48 + 35\\\"), \\\"48 + 35 = 83\\\")\\nTest.assert_equals(format_math(\\\"8 + 5\\\"), \\\"8 + 5 = 13\\\")\\nTest.assert_equals(format_math(\\\"46 - 11\\\"), \\\"46 - 11 = 35\\\")\\nTest.assert_equals(format_math(\\\"23 x 46\\\"), \\\"23 x 46 = 1058\\\")\\nTest.assert_equals(format_math(\\\"11 + 1\\\"), \\\"11 + 1 = 12\\\")\\nTest.assert_equals(format_math(\\\"29 - 21\\\"), \\\"29 - 21 = 8\\\")\\nTest.assert_equals(format_math(\\\"24 x 26\\\"), \\\"24 x 26 = 624\\\")\\nTest.assert_equals(format_math(\\\"47 + 8\\\"), \\\"47 + 8 = 55\\\")\\nTest.assert_equals(format_math(\\\"42 - 48\\\"), \\\"42 - 48 = -6\\\")\\nTest.assert_equals(format_math(\\\"33 x 44\\\"), \\\"33 x 44 = 1452\\\")\\nTest.assert_equals(format_math(\\\"26 + 3\\\"), \\\"26 + 3 = 29\\\")\\nTest.assert_equals(format_math(\\\"32 + 17\\\"), \\\"32 + 17 = 49\\\")\\nTest.assert_equals(format_math(\\\"3 x 26\\\"), \\\"3 x 26 = 78\\\")\\nTest.assert_equals(format_math(\\\"12 x 25\\\"), \\\"12 x 25 = 300\\\")\\nTest.assert_equals(format_math(\\\"43 + 31\\\"), \\\"43 + 31 = 74\\\")\\nTest.assert_equals(format_math(\\\"28 + 27\\\"), \\\"28 + 27 = 55\\\")\\nTest.assert_equals(format_math(\\\"24 - 11\\\"), \\\"24 - 11 = 13\\\")\\nTest.assert_equals(format_math(\\\"20 x 50\\\"), \\\"20 x 50 = 1000\\\")\\nTest.assert_equals(format_math(\\\"36 - 30\\\"), \\\"36 - 30 = 6\\\")\\nTest.assert_equals(format_math(\\\"34 x 48\\\"), \\\"34 x 48 = 1632\\\")\\nTest.assert_equals(format_math(\\\"26 + 8\\\"), \\\"26 + 8 = 34\\\")\\nTest.assert_equals(format_math(\\\"25 - 44\\\"), \\\"25 - 44 = -19\\\")\\nTest.assert_equals(format_math(\\\"24 x 25\\\"), \\\"24 x 25 = 600\\\")\\nTest.assert_equals(format_math(\\\"40 x 17\\\"), \\\"40 x 17 = 680\\\")\\nTest.assert_equals(format_math(\\\"44 - 7\\\"), \\\"44 - 7 = 37\\\")\\nTest.assert_equals(format_math(\\\"37 x 41\\\"), \\\"37 x 41 = 1517\\\")\\nTest.assert_equals(format_math(\\\"15 - 1\\\"), \\\"15 - 1 = 14\\\")\\nTest.assert_equals(format_math(\\\"16 x 4\\\"), \\\"16 x 4 = 64\\\")\\nTest.assert_equals(format_math(\\\"13 x 43\\\"), \\\"13 x 43 = 559\\\")\\nTest.assert_equals(format_math(\\\"7 x 11\\\"), \\\"7 x 11 = 77\\\")\\nTest.assert_equals(format_math(\\\"12 - 25\\\"), \\\"12 - 25 = -13\\\")\\nTest.assert_equals(format_math(\\\"37 + 6\\\"), \\\"37 + 6 = 43\\\")\\nTest.assert_equals(format_math(\\\"32 x 46\\\"), \\\"32 x 46 = 1472\\\")\\nTest.assert_equals(format_math(\\\"31 x 5\\\"), \\\"31 x 5 = 155\\\")\\nTest.assert_equals(format_math(\\\"17 - 37\\\"), \\\"17 - 37 = -20\\\")\\nTest.assert_equals(format_math(\\\"31 + 36\\\"), \\\"31 + 36 = 67\\\")\\nTest.assert_equals(format_math(\\\"17 x 34\\\"), \\\"17 x 34 = 578\\\")\\nTest.assert_equals(format_math(\\\"24 - 3\\\"), \\\"24 - 3 = 21\\\")\\nTest.assert_equals(format_math(\\\"48 + 33\\\"), \\\"48 + 33 = 81\\\")\\nTest.assert_equals(format_math(\\\"19 + 1\\\"), \\\"19 + 1 = 20\\\")\\nTest.assert_equals(format_math(\\\"45 + 1\\\"), \\\"45 + 1 = 46\\\")\\nTest.assert_equals(format_math(\\\"34 + 24\\\"), \\\"34 + 24 = 58\\\")\\nTest.assert_equals(format_math(\\\"32 + 41\\\"), \\\"32 + 41 = 73\\\")\\nTest.assert_equals(format_math(\\\"1 - 21\\\"), \\\"1 - 21 = -20\\\")\\nTest.assert_equals(format_math(\\\"40 x 8\\\"), \\\"40 x 8 = 320\\\")\\nTest.assert_equals(format_math(\\\"4 - 16\\\"), \\\"4 - 16 = -12\\\")\\nTest.assert_equals(format_math(\\\"30 - 43\\\"), \\\"30 - 43 = -13\\\")\\nTest.assert_equals(format_math(\\\"26 + 49\\\"), \\\"26 + 49 = 75\\\")\\nTest.assert_equals(format_math(\\\"24 x 38\\\"), \\\"24 x 38 = 912\\\")\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,0,1,1,1,2,1,1,2,2,0,2,1,0,0,1,2,0,2,1,2,1,1,1,1,1,2,2,2,1,1,2,1,0,1,1,0,0,1,0,1,0,1,2,0,0,1,3,2,1,1,3,0,0,0,1,2,2,0,0,1,2,1,0,0,0,1,1,2,0,3,1,1,5,1,1,1,1,1,0,1,3,2,0,1,1,3,1,1,1,0,1,3,2,2,2,2,2,1,0,0,3,0,1,0,2,1,1,1,1,1,0,1,1,0,1,2,2,2,2,1,1,0,1,2,1,1,2,1,2,1,1,1,1,2,1,1,2,2,0,2,1,2,1,1,1,1,1,0,1,1,0,1,1,1,1,0,2,1,0,1,1,0,1,1,1,2,1,0,1,1,1,2,0,1,1,1,0,1,1,0,1,1,1,1,2,1,1,1,2,1,1,0,3,1,1,1,1,2,0,2,0,1,0,1,1,1,1,1,0,2,1,1,2,0,2,2,2,0,2,2,1,1,1,1,2,1,1,1,1,2,0,1,0,1,1,1,2,1,1,0,1,1,5,1,1,0,1,1,0,1,1,0,0,0,1,3,1,0,0,2,5,1,2,0,0,1,0,0,2,1,0,2,1,1,2,1,1,2,2,1,1,2,0,2,1,1,1,2,1,0,1,2,1,2,1,1,1,1,0,1,2,1,2,0,1,1,1,2,1,1,1,1,1,0,1,1,1,0,2,1,1,0,2,1,1,2,0,0,2,1,2,1,1,5,1,1,0,1,1,1,1,0,2,1,1,1,1,0,2,0,2,1,0,3,0,1,0,1,1,2,0,1,2,1,1,1,1,2,1,1,1,2,2,0,0,1,1,2,0,1,1,1],\"rators\":[\"gb9rvGus2Jv7bjZSs\",\"Yp7uvStL97cC9fKkY\",\"QnPD4Sv6W4LHc2Qng\",\"tAF9Gf6PiGogbZuWs\",\"Wv5c7WsK6R8yb4mTt\",\"eebeY4dPvLYcmzy2v\",\"9Ly8afdtofp8DXzrt\",\"pMg2Zddm29zRGP6wg\",\"C4QntmkYtB89GNtpd\",\"x7udihuYfgsZjSEiD\",\"AasGs8AeX9Lcb9xJn\",\"N2wnZXkhDH86mgjQ8\",\"Z85ajWfZ4jDPkbvR4\",\"dHZqT6h4JMwk5fPC8\",\"u5u2YpHXiNgzDNJdX\",\"2fxapKr8XGdNeaKi2\",\"WoKygnR2BoTuSG9y5\",\"SGhPxX5bHGL8zZqtt\",\"Qq2AEGMAtYKJeRRHm\",\"pmgFEciNrd3ES9tuu\",\"PSrcg6fy835R4c5CW\",\"Jqk2uJZZxEv5wZFze\",\"Ycj4iTJGFyvC4bXek\",\"8JyqsSbN2FJXPr3cw\",\"zd9FLSzsGz3evKafy\",\"FiaTpm7ehfDv43wSG\",\"LQxof8pGabGuWP7Gn\",\"mybpojPXaZigaqsAD\",\"hnyhBFWwNCz9mDfSi\",\"jeuoearPPTcGPgXhf\",\"sz8ufn9i8zeiGWpAy\",\"4CFzv558qbGcpQwc4\",\"HqmxnQJM66Y57twhn\",\"yabtHTtycsWhcGBfD\",\"8fhbZ2xkaSQB4Cb2L\",\"PhceyfmFntJcn5Fhf\",\"k5mp7Hkg8w5rwiXpe\",\"jBo3xAopr37GFzY8g\",\"ukMGNti4cKTJBZqsg\",\"X29Ekg7HjqHAYgCSM\",\"oYJYoHcmhku3XC8nL\",\"gudC5KZrykfdfGD3J\",\"tdTjjvaSqtvpJ7Lx5\",\"qvEvDcL32a5F4Tg6c\",\"T2vhHPhRR96hRizq8\",\"jNvegJWCk5HCtEMbK\",\"ENmpZtzzuYcSHXNh4\",\"wgsTw3Gu49MLDkHhN\",\"BeFnbPbMnAM2SjBdZ\",\"s5M5RvgqR9BhB9JoC\",\"wmiKeocyx5AvLxRbi\",\"aiLGtqxCmJn4gnADi\",\"dsShModvpizssfZMb\",\"gMJhLdyw3tH7L96X2\",\"HQxp7NcdvF92G7bYS\",\"6vZEAbJwvucFrCSJf\",\"kfs5y7nzGhLXtvs5P\",\"qzzyGD7fCCDjX25za\",\"8AipP2ZKTAhvzfQAr\",\"kBmhcwkCqxiy4GwiZ\",\"zs3A5SWuX2DidyiaW\",\"DMH5qWYAScj9hNaRv\",\"k2HSpGL7RBwNM6aYs\",\"u45xYkjAkWvZpznKB\",\"cSaaAxqkYsPDXmMuf\",\"ovqQRfyvmEDypjrnC\",\"iMHrN3Wiefh9Ame38\",\"jGrqoesacgEqRRNad\",\"fBqQjriC4QEtFNxFe\",\"pNvH75WKPPh9rGnfL\",\"yZvzB3qFb8pkHy4dg\",\"hKrY8hWMgToBavfhD\",\"J5T8gZqiZXFuFDTQ7\",\"XbwyB44kHPnRgQcrB\",\"cSMKd6Yq8Pyq8TvWR\",\"Lg74S7Hm9R378BCvX\",\"hzW7GHNw8FfWByMvu\",\"N7GPFEhCaiQ79MKjz\",\"4tgBydK887PitgAoi\",\"uGGbTfxFQ5tn5wMA6\",\"2MeGekmZQqQ5MX5kc\",\"TnDJh8PPbFydbSuC6\",\"zg8GmMSP2LkHBtAzy\",\"4y2bxsHwifCdZXAQA\",\"utTuvGdmu2sBHWBhQ\",\"kQWo29WMZsesi6cnE\",\"mxX4rH5ELYkdZ2Mbw\",\"rJGeRSCjGzRuYfHZS\",\"q85Lo85cGnQmFZKE6\",\"9g8wqCR9BWvk7PLaE\",\"YeagPqNegEBbSGb3p\",\"u5jLXaWAKo7K4JvTR\",\"Cc2Cgj4MWXZxsTooC\",\"cR3ibTMxLyEdDFCHY\",\"E9ttMPTkLkKG6nZrg\",\"8LfTheFzvicameoz9\",\"Cuy7McJ5y8BkXRRk9\",\"vLrq4dEDMM2wd68Dc\",\"C9LKGu2g5hSijvDzA\",\"aRqQ42J5zqCmBNd8w\",\"NfMJuiBk6FN5Jc6ow\",\"X74H8PYX8XYkrGRQc\",\"aEm3Wvj2rFYRL8Lrb\",\"2iFe3EHEH2YdhSKrs\",\"MKT7khMBGXzA22ykf\",\"v8iedwMBcGiN2PHGM\",\"N7P4AnS8nzK4oupHv\",\"eLkj3Zb2DqiW4AEEh\",\"7tbM7oMYc5oDvD88Z\",\"5kEyLPjTLrt7z2YJZ\",\"2QGRoQn2dRq3scu7k\",\"vWgBJaEtcu3XoYuer\",\"GEvSGXDkk7pACfYri\",\"v9KtC8YLbMWmXiW2H\",\"KRSKj7ikX2ytWFmod\",\"gJYuGdkXEWWmGRLzu\",\"5JZNWts9XEHejpvur\",\"HF28xZKSLM9wEuqNg\",\"WtFQigNmNZ5EREPzo\",\"BEdxteC2PKrmTLbdM\",\"M8dQuMrEpP8Hc3tHN\",\"9uZpgAtSuPZ7W7DL6\",\"Fk9kLwoG4Brf4KsKf\",\"uiEuENARwFpnNMfFs\",\"moFrJ4vxzxPynByzB\",\"ZNnsMeNkdDhHjSrZb\",\"YzaMuXsKkut8nSNDH\",\"q5a96XumccZyhQNyL\",\"5GkDGdpHT87gzb3xt\",\"9PGk6auzrKALn9mEn\",\"k6ip3mFoRww77xgKx\",\"kYWb8BwpKwunQkxeX\",\"DEDniTrstQYGounXT\",\"HiXS9Hofvx4rnqDZz\",\"JZbBYihgT6m7bKvgc\",\"9pzFiFK3ANLjQfnr2\",\"z9guJRB4sMe9mpxKv\",\"KdNDysEsy2TW5QRJ2\",\"ffjnHrx8Ym7A7pQWe\",\"ywk3XGvcmpTgRxwZa\",\"sJWTa7iWeRoRtqJ8N\",\"bMEg2eSZtsAcT7ZmJ\",\"zAsNgFHdyiHeiHB8C\",\"4zkChgTrb5EDzYZmd\",\"Q4CiDY6hWXTEFNda3\",\"FEYpu9RWysAgW3XnP\",\"yAouD3PxzED8a4gap\",\"4rwxLqLs2mNZNg8NB\",\"s2fRd2YAT9STse9M5\",\"2innwjWqxJHo4eRGh\",\"dKKMvaYoJunNPk5Wa\",\"XrqNzJ2FRG8HnGiR6\",\"8BFSTCnoe2QggN64c\",\"ekQh3jzgGLsEMbKo3\",\"di2hhADLx59Bj4ewM\",\"AF6LgdKhEdzwgRJom\",\"CuiazXJNxHYTp3Rfr\",\"FzxTj4GuujhwpZM7y\",\"ahk2qiXKJA753wAJk\",\"B7xNs2GQLTqNcHhgf\",\"cFnh3st63rXNrQQxC\",\"yYxPzFqBgtQ9fsyHM\",\"NNE5HNRXAkmhrWgyQ\",\"TTgP9jcqGxCfKotZ3\",\"NzbRqGWspQnWMoDrF\",\"a777e8chPvJkY3tKa\",\"JEAi9mG3vvBomJ3Yu\",\"66a9xX73nmTEuKs9k\",\"s2ZMtR9deh6Kia7pb\",\"nfXGHENb5md7m355s\",\"NG8PWBSjsM8mMhQEq\",\"vyaFTJDKChqYfczdu\",\"Y9SPwnGra4STbviL4\",\"yr822PZmmiDDenxpB\",\"So6PHm74mfJuY2WTs\",\"9bQyb6rW7xfE4vgrR\",\"Yh8GFNkELpqxyGFm3\",\"Sj4iamMmNvxwWJBiF\",\"gSFJPsMXnqAog3Q9f\",\"aPLuemxzZ5iS57NBQ\",\"sbJcFfQjQ59Wfg4Cd\",\"sDRY37TfoncsA2FSR\",\"2ptN2mhjFwFcHyPZd\",\"nPfdEqn8RZmDzAeMW\",\"DrkR35NqnP9NDLbq6\",\"2ZFoLTxcCARhwc8xX\",\"sHjfbGQGLHE6JR6qu\",\"tRA43bWeW9bLciKEh\",\"QDiHtAiYuyEEmoCgv\",\"Zvu2nty8qKdBDBvM4\",\"rgvAJFwfCeYoYnFTK\",\"GGdmhAvxXhqhhibJN\",\"KpHrC7WPEojnzgEtz\",\"3cF6NXq3ZEwdkgSjb\",\"H4abACFDH5t8CnnyH\",\"YcCLwitFMAEJSnxAW\",\"ZrKCkX7xxGGZzauFW\",\"FvFhg2wELM3SCZDZQ\",\"n2ck2WGuM35vbZiFz\",\"JgWpNj5G78uttDiE2\",\"eMuCpJ2spXWkJjWNz\",\"Sk5h9RsRyCjSNKubE\",\"5HCu9Ydd86QgHDRNP\",\"ckHFA5y8pkrXbsevA\",\"xK5Le9LPn9ZNddfbP\",\"mfJcJtAYaK9TN6mHg\",\"syRNbbPdLCGXbH2Gy\",\"Stye5FSYwYNbhFHgR\",\"yNjkHfHESBAnCssPB\",\"i5iePG5GqhJJ8HEoB\",\"mDWNyaaQ9hvPCRzSd\",\"7txFzDQ43vJ7qCY88\",\"R4SjTgDnpigJYDLyL\",\"pDvFWMCD9fQwoBPcu\",\"7ajSwbNMNp9ggPewT\",\"23KndF374EHHZNbL8\",\"LjoNTyGEMfBpMHHus\",\"3LiSLdtN58n46NEqg\",\"qB6KSTYC6H2TQEQY6\",\"dj5AyG5fWP8FdsSmZ\",\"fD42arz6uZxQcrQjn\",\"TjeuzxKBd7b4ZajSs\",\"X5MqeHyPh6cSQCXnk\",\"9CoqdidjM9KbeKnHY\",\"iojEnnY9FsMfYzp6f\",\"Pe8vWpDHRuH9nSGKW\",\"KLmLKaJPfsYxp42p2\",\"u7BA8hWLLg7sxyYwz\",\"mBtSsKTHdQniYAfsZ\",\"7K2GEb5TZRtSpyyGS\",\"KdYQN3KAT2DyTzT2a\",\"oBcs8GLX2ZFLXQy8y\",\"PMTfF8TMyy9psw6ai\",\"HhYCji7QqauyN3A7v\",\"dik7wis3hBJJBkYwK\",\"7tbtTx6uxePv6eQwP\",\"Yp4Jtxj7pHqZjheN7\",\"SkQcb2sRn4as5KpnN\",\"ta5CrWnBCRusD2WMo\",\"yjtdwc2AC4jA2RWtn\",\"TPhfpB5tzQWSSn67n\",\"hkJGLuib5md8vZ9HD\",\"KRyczPZSHYbKrBYnY\",\"q6QsMYNMpPNtmyTeW\",\"PcfcAbTJPrdzJN2FW\",\"g4NCSxxHqHCGMpWwT\",\"aKzYNPqBqb3J3ZgyD\",\"RehJGBFS6CYiWdjZx\",\"8vWWL8Tx2yDai4ydm\",\"DYDJTyGgKFnBRLm2r\",\"Ey9pB2PRqejNubQmf\",\"u7i7WPM63n42r8R8o\",\"axdSNLZpiCDF8RS6n\",\"bmthyKcDF922zNqxK\",\"ji5f27FPz4wRRF6Ls\",\"Lm6ChQCWBmaikmk5J\",\"4Np3uu6Jj67L2CxiR\",\"XbxHXmh5ZmRN2gw3K\",\"pWYjN62ZAKQZ7Xp3W\",\"CTKmXtrqDYqJBnuy8\",\"nq4XLF85fWDdXiKGA\",\"KdmuzNLWvSL9ZkQsb\",\"pduNK68oazqQTtbLp\",\"8aEGGQPkGesWwoaom\",\"6HgMANhu6WiGyXSGN\",\"pn7FezrkZZCui7fkJ\",\"vdBeJ5a47NoLn3DkJ\",\"hRiMXDZNAzyPd5tpt\",\"k2Eo3wyfZZ6KxvKhN\",\"PTDFuxAzou7W6asWt\",\"JYvJJKjerbQYjNG9b\",\"yv2QLxoywSnwSZkWw\",\"sCChapdzgzdhcvonx\",\"Kh3Pc2ZRusurLaMyP\",\"cN55Pbcik8wonXDZE\",\"mHvoroWGDLYbJqQJa\",\"GWjEcCYSqDNZS9rQN\",\"tpxMgkGSHwBjS95Ta\",\"RMi3GRnhqtpbNqiF6\",\"8WpvgSbQciTQWdd8T\",\"mG8HqKiAQFTdRZthG\",\"okBzYf3Pd9kAYug7m\",\"d8qtzoLB264iP8tdY\",\"gXTAie79kiw28tx5u\",\"9FCeFzjPA4jrQ7oHW\",\"rrSC943cCKNG48sH4\",\"974cv448kw6Wu2JF6\",\"yod5YhKtPqw2GfG9B\",\"rxr3nwpDGDEkBJRgD\",\"QRv96jmNaYsWkxQEG\",\"wRttWTM59y8m5mx7x\",\"pJj86xc32Bs7Frxvi\",\"oXdhczMThyirgM2eN\",\"Cybtjz3cF7RgoiqrN\",\"dBzwBtRjZqB98DJeB\",\"RGMbFMZXJr7DhcAJy\",\"J3upzLHuEwXH7Z2hx\",\"cAP3n5NY64uoMwzRR\",\"g9FyJ8yeT9ic97Qp2\",\"GqErHwe6rLZi8SRFL\",\"uX3EL4Qha99wBkozM\",\"oyKcm3zqdy8Ko5P5d\",\"Fb2wehA7QgTFWry2x\",\"gus2J3dbeitbejGPs\",\"YRAzEBJoLvSaiPtYx\",\"ga7aTTEThzsELuC2j\",\"dYPkStFnLvAMsHSzZ\",\"4fjSgcqhQQZM2ZFRP\",\"YkWX8KxYQCcH7qqpC\",\"DAhoDmrLmkoRsJhRx\",\"yTtSCvGPyYna6JuRC\",\"PBn3fhAqsEqHEHq3E\",\"HuNF3xTBzmatyGSTm\",\"rEecHXXCTwgG5wWNA\",\"fTNQmMvTZhhiGBCMe\",\"oDN67zoApxcztnYdu\",\"oriWwkSDoejDH9ru5\",\"Tf7TJFSPktJBgLA4k\",\"wjc4iejpErBhxWwHo\",\"cZccqzRQ9GgjQF6Az\",\"nJXgbSQozcoE8Wn4N\",\"5XiuAqicKD4hBdu63\",\"FuYTQcDNjct58rqPa\",\"4ArGCifHnsz8p525A\",\"C2AfMipCicfD58WJ9\",\"shdSrDq5ZKqfpgjmu\",\"ygDJ7HEzRoJZyPEF4\",\"WdKdsgH9gXkKgCycx\",\"BrTDhPJcACL2bsrpJ\",\"DpnYcMphntjsQ96qg\",\"5hQnRWiKkhgKJXNMP\",\"DqNQn9Jsxcu5HijKE\",\"dNErCjyFobE5sn4Zh\",\"5S9nX4rKsnCcnv4Cz\",\"AXcnPX68zdMiLNSmu\",\"nFbmNzMQ38TncmfQX\",\"Nw5Co4WxYtGovKnmA\",\"whm4vkxLMtG9YyobP\",\"iF4tdvn5sA9CM4T6T\",\"Lg4t6SEWgtYz4u7Cj\",\"EfxwqhYdapX3dMQC2\",\"buX4mCQhtXCfBjeno\",\"Ds7L5bksw2QRHjrKL\",\"qAby4AWXmTNeusvg3\",\"5wCHxMQ5Km2bjqcGZ\",\"MXGuntvz3byrP6WJc\",\"5HTSi5wQNAdLm57LB\",\"tW7TaC7bjNajLGH5Y\",\"uTHfpJjGDdefX3zwT\",\"PWgzeK859suojbrRx\",\"97mMkvdDxbhkQXNPp\",\"JS3hNM3XXkxPdg3yk\",\"2HfNkb2SoqdyjKW3o\",\"GqnEdzvEGRkgBxqHB\",\"eYfPWvZwnJQkHbSTK\",\"srJ34BaybkQh3qRkM\",\"LCuvvWMwiGuqTwNRi\",\"YmQb9Mo4Xcg2vzgbn\",\"pCMhfoZ5c6eBuCqbp\",\"ZyrfhDTZHb8LymH5b\",\"KJCDwGkoXh8qtbbKr\",\"q9FfWNiMDKRiaCJ5j\",\"TmM3AN7g3fkh69ycj\",\"pPpmP7xeJzGgK362R\",\"GdKtjPh8TcfmJuduv\",\"9vP9Sg4nyzQT4ED9C\",\"qQQ4hCQpzitmHSkjS\",\"m7KZ5donpz5F6AR3z\",\"AFfw7cGg83uYk2Miy\",\"iYXdNw7tKcgA3QwBX\",\"XD5nmvKQchKezPXhy\",\"ghMkPtdFCpM6w8nax\",\"BJp2WkwLWGHHB5oQW\",\"T6iBEE2jp7f7iEF2P\",\"8uiLiJcmWxWe6qw65\",\"NrRa4TS6uZR9xuXRt\",\"c2q7mY39z5JPEMCaM\",\"CHvzhtXnv8HTbPQ56\",\"PC3pLs36zNzpRDSuE\",\"w3QDkmjZj2dAFDsjq\",\"X4rzfxGgxx6CS7Bpz\",\"iP7wNofhZXTkJ9ryG\",\"2EbDCCJJvCfKkbYia\",\"AJexRBN9cYQmqvYu6\",\"HBuJYgW2eRBJp9FoG\",\"mvJBakQ35CWAnbbEZ\",\"4TmgHkn5vqyHK3sYC\",\"JiSpvq6C7azQEmENc\",\"vCeeMuYDbz3MB4vsk\",\"T6Rm8mREPMZSftzrC\",\"Ju76wMJs7kL7o6Ybt\",\"jkbavR2ATFJcpmo8M\",\"ey3CASd6Je5LEJzfB\",\"kjvgTyRFyKHv44DcH\",\"g2mqHYvQmr78mET8i\",\"eHcgvkTGsH7ZziqBo\",\"wwz3ixWSv8rFDHBXd\",\"FxbTzThBiTnRzfirA\",\"eW9R2SCoYnY8HBAdL\",\"NGvCPuMiAP3xrRLfB\",\"Afnps7TJQuS9sipMb\",\"2MjzJ7yxh3eT3xbng\",\"PytNZK9mNiRiZxPrm\",\"gKnWjDjwrJh7MK2df\",\"CLypXaZksY99mpRCm\",\"8PwfYqoDQFThzNtvf\",\"4bb7pim4ewTwrMTEA\",\"TCvpT4EPb8qNssNB7\",\"zC8WrPp5BC6c2exrW\",\"d9LBRxvADNBB5QJMB\",\"9LrF5o2TK2iE8BZJh\",\"rCrbqMiaGPgHYTNxu\",\"JwkwCHcXthnGDsdFr\",\"jWbd7SYDzLPjc9EDh\",\"dzS6WBTMHyFEag6Fp\",\"B4y8aoyXJtskYPFEL\",\"FMyZPN6odEFtfuimF\",\"Qyfyyw6oC4EHAndzo\",\"suArq5BbSy7gD6xri\",\"4Lwjr34ypKNQNQCar\",\"5QN8R22z43SrwoHDz\",\"okauzKFuv3cKfJTF8\",\"vAbK8sCfKyFC78HYg\",\"gbGzZz5Yq5hT357v8\",\"pwWtbXEjzuvrhEGwt\",\"cdXmwjupCXSvJTSNo\",\"ahWFxnaxt9bXSA4f3\",\"GgQqni8TkbqEBGcsy\",\"Wi4H6ayKsNDWWQCG5\",\"sMcFMPkMJC4Kh6ymj\",\"bDvsKTnScP4pPJAiC\",\"5nbHH4eApn6So9h2n\",\"mdRQaGT98ycMt87S2\",\"cmH5k3s9REYMzDBMn\",\"rraTtctZqnjXu2L2x\",\"Cg3LKtEAJpsrdWroG\"],\"total\":460,\"quality\":[5,5,5,5,4,5,1,5,5,5,5,5,5,3,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5]},\"flags\":0},\"summary\":\"Given a simple math expression as a string, neatly format it as an equation.\\n\\nExamples\\nformat_math(\\\"3 + 4\\\") ➞ \\\"3 + 4 = 7\\\"\\n\\nformat_math(\\\"3 - 2\\\") ➞ \\\"3 - 2 = 1\\\"\\n\\nformat_math(\\\"4 x 5\\\") ➞ \\\"4 x 5 = 20\\\"\\n\\nformat_math(\\\"6 / 3\\\") ➞ \\\"6 / 3 = 2\\\"\\n\\nNotes\\nYou will need to deal with addition, subtraction, multiplication and division.\\nDivision will have whole number answers (and\",\"tags\":[\"strings\",\"formatting\",\"math\"],\"timestamp\":{\"$date\":1581889065178},\"title\":\"Neatly Formatted Math\",\"quality\":4.777777777777778,\"family\":[{\"_id\":\"f3PjyCf3fQriwXp9q\",\"language\":\"cpp\"},{\"_id\":\"QtEsWc3qmxWReBNmK\",\"language\":\"javascript\"},{\"_id\":\"eFknZnmrbHvkhR57i\",\"language\":\"php\"},{\"_id\":\"3f2qF2CgM32zvQTwa\",\"language\":\"python3\"},{\"_id\":\"eTRGLAYroC2Y6qeYi\",\"language\":\"ruby\"}]}}"]