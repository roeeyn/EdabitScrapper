a["{\"msg\":\"result\",\"id\":\"1639\",\"result\":{\"_id\":\"KMuRsbTKgZXoedMRN\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def count_unique_books(s, bookend):\\n\\t\",\"difficulty\":2.1267605633802815,\"familyId\":\"xBQctkRqa6dWC7yvZ\",\"instructions\":\"Suppose a **pair of identical characters** serve as **book ends** for all characters in between them. Write a function that returns the **total number of unique characters** (books, so to speak) between all **pairs** of book ends.\\n\\nThe function will look like:\\n\\n```\\ncount_unique_books(\\\"stringSequence\\\", \\\"bookEnd\\\")\\n```\\n\\n### Examples\\n```\\ncount_unique_books(\\\"AZYWABBCATTTA\\\", \\\"A\\\") ➞ 4\\n\\n# 1st bookend group: \\\"AZYWA\\\" : 3 unique books: \\\"Z\\\", \\\"Y\\\", \\\"W\\\"\\n# 2nd bookend group: \\\"ATTTA\\\": 1 unique book: \\\"T\\\"\\n# \\\"ABBCA\\\" not included since the first \\\"A\\\" was used in the 1st bookend group.\\n\\ncount_unique_books(\\\"$AA$BBCATT$C$$B$\\\", \\\"$\\\") ➞ 3\\n\\ncount_unique_books(\\\"ZZABCDEF\\\", \\\"Z\\\") ➞ 0\\n```\\n\\n### Notes\\n- No book characters will be identical to the bookend character.\\n- There will always be an even number of bookends.\\n- Once a bookend is used to complete a pair, a new bookend must be found to create another pair.\\n- Return `0` if bookends contain zero books.\",\"lab\":\"Test.assert_equals(count_unique_books(\\\"AZYWABBCATTTA\\\", \\\"A\\\"), 4)\\nTest.assert_equals(count_unique_books(\\\"$AA$BBCATT$C$$B$\\\", \\\"$\\\"), 3)\\nTest.assert_equals(count_unique_books(\\\"ZZABCDEF\\\", \\\"Z\\\"), 0)\\nTest.assert_equals(count_unique_books(\\\"A#BBCD##GGA##!#\\\", \\\"#\\\"), 6)\\nTest.assert_equals(count_unique_books(\\\"&AAAAAAAAAAAA&\\\", \\\"&\\\"), 1)\\nTest.assert_equals(count_unique_books(\\\"&&&&&&&&\\\", \\\"&\\\"), 0)\\nTest.assert_equals(count_unique_books(\\\"&A&&&&&&C&\\\", \\\"&\\\"), 2)\\nTest.assert_equals(count_unique_books(\\\"&A&33333&C&\\\", \\\"&\\\"), 2)\\nTest.assert_equals(count_unique_books(\\\"&3&3&3&\\\", \\\"&\\\"), 1)\\nTest.assert_equals(count_unique_books(\\\"&4&3&3&\\\", \\\"&\\\"), 2)\\nTest.assert_equals(count_unique_books(\\\"&AA&\\\", \\\"A\\\"), 0)\\nTest.assert_equals(count_unique_books(\\\"AZAAABDZCCZZ\\\", \\\"Z\\\"), 3)\\nTest.assert_equals(count_unique_books(\\\"AZAAABDZCCZZ\\\", \\\"A\\\"), 1)\",\"language\":\"python3\",\"summary\":\"Suppose a pair of identical characters serve as book ends for all characters in between them. Write a function that returns the total number of unique characters (books, so to speak) between all pairs of book ends.\\n\\nThe function will look like:\\n\\ncountuniquebooks(\\\"stringSequence\\\", \\\"bookEnd\\\")\\n\\nExamples\\ncountuniquebooks(\\\"AZYWABBCATTTA\\\", \\\"A\\\") ➞ 4\\n\\n1st bookend grou\",\"tags\":[\"strings\",\"regex\",\"higher_order_functions\"],\"timestamp\":{\"$date\":1555533145963},\"title\":\"Books and Book Ends\",\"stats\":{\"completed\":{\"total\":73,\"ratings\":[2,2,2,2,2,2,2,2,2,2,2,3,3,3,2,3,2,3,2,1,2,3,3,3,2,1,2,2,1,2,2,2,2,3,3,2,2,3,1,1,3,3,0,2,0,3,2,3,2,3,3,1,3,1,4,0,3,1,3,3,3,4,3,0,1,0,3,3,2,2,1],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"tAF9Gf6PiGogbZuWs\",\"yZvzB3qFb8pkHy4dg\",\"8JyqsSbN2FJXPr3cw\",\"gb9rvGus2Jv7bjZSs\",\"T3ZAuoMrJjvZwN55B\",\"M8jrv2FfpMQp9Qzpx\",\"ab7BsQuhDo3QgE6bh\",\"FikSPhcrHBpQ4CyGC\",\"PFjMZGHNAPTkgd7tq\",\"jHrtWDGBhkbuWa7fG\",\"nzx4uAPg3hCceyFPE\",\"kQH5b8MXJunh84Czq\",\"HqmxnQJM66Y57twhn\",\"DDsgAKZYqZ6tyZEwF\",\"2fxapKr8XGdNeaKi2\",\"7b5t29Hsd7iD9c5CT\",\"Jqk2uJZZxEv5wZFze\",\"s5M5RvgqR9BhB9JoC\",\"yoYQqaY6GszuTkNSs\",\"C4QntmkYtB89GNtpd\",\"PR89xoYsqJh6osPbn\",\"AasGs8AeX9Lcb9xJn\",\"aEm3Wvj2rFYRL8Lrb\",\"8PwfYqoDQFThzNtvf\",\"PytNZK9mNiRiZxPrm\",\"ZNnsMeNkdDhHjSrZb\",\"sAaYMweK7ed4mmFQW\",\"mDWNyaaQ9hvPCRzSd\",\"55RQznnuTGpsj3EXd\",\"YRstQuthRkFeBiXug\",\"wT5gGgvjKc5wz59AQ\",\"gJYuGdkXEWWmGRLzu\",\"v9KtC8YLbMWmXiW2H\",\"Yp7uvStL97cC9fKkY\",\"586FdBhazpwJfnRYR\",\"n2BRY9X8899dcG8Bw\",\"HF28xZKSLM9wEuqNg\",\"hnyhBFWwNCz9mDfSi\",\"Ecg4m7srYGgZsb4Ck\",\"DEDniTrstQYGounXT\",\"R4SjTgDnpigJYDLyL\",\"cykCKNJcqFBxz4T8s\",\"iojEnnY9FsMfYzp6f\",\"zZDaXBxMzTCBhNkgL\",\"WwMjW4MJRuNFExoPc\",\"yjtdwc2AC4jA2RWtn\",\"KZ2xddpM2f9JRaryB\",\"hRiMXDZNAzyPd5tpt\",\"xn7uGNKeAwPEkP9oA\",\"QRv96jmNaYsWkxQEG\",\"J3upzLHuEwXH7Z2hx\",\"dkcmCKwqApX5jBggc\",\"DPi9QGLctq2y76KuE\",\"cAP3n5NY64uoMwzRR\",\"oBcs8GLX2ZFLXQy8y\",\"qAby4AWXmTNeusvg3\",\"GGdmhAvxXhqhhibJN\",\"JKb5rhL6DKcCAypF9\",\"MpfytGFYF77emJ3cT\",\"T6iBEE2jp7f7iEF2P\",\"eHcgvkTGsH7ZziqBo\",\"gKnWjDjwrJh7MK2df\",\"yod5YhKtPqw2GfG9B\",\"buX4mCQhtXCfBjeno\",\"rhS8qXRjZcpDXkwnE\",\"2PufnQcsHsfymufX3\",\"8sNv5PTHa7XQ8bNqR\"],\"quality\":[5,3,1,5,5,5]},\"tests\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4,\"family\":[{\"_id\":\"be7jj9Qn739fDRN7A\",\"language\":\"cpp\"},{\"_id\":\"iT6NpDYyCycHuc2L3\",\"language\":\"java\"},{\"_id\":\"TkbyvmeqbGpSsHLq8\",\"language\":\"javascript\"},{\"_id\":\"KMuRsbTKgZXoedMRN\",\"language\":\"python3\"},{\"_id\":\"bPYN83WLmHZTpz5iL\",\"language\":\"ruby\"}]}}"]