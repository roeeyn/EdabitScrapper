a["{\"msg\":\"result\",\"id\":\"1971\",\"result\":{\"_id\":\"HoFKikySJb4MebyYd\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def transform_matrix(lst):\\n\\t\",\"difficulty\":2.7846153846153845,\"familyId\":\"e8Rgc7g4KiD4bLnTw\",\"instructions\":\"Suppose any `nxm` matrix of `0`s and `1`s can be transformed into a second matrix, where each number in position `(i, j)` in the new matrix is the sum of **1s** in row `i` and column `j` in the original matrix, **excluding itself** (if it is a 1).\\n\\n```\\n[[1, 0, 0, 0, 1],\\n[0, 1, 0, 0, 0],\\n[0, 0, 0, 1, 0],\\n[0, 1, 0, 1, 0],\\n[0, 1, 0, 0, 0]]\\n\\n[1, 5, 2, 4, 1],\\n[2, 4, 1, 3, 2],\\n[2, 4, 1, 1, 2],\\n[3, 2, 2, 2, 3],\\n[2, 2, 1, 3, 2]\\n# The 1 on the upper left corner has 1 other 1 in the same row as itself (excluding itself).\\n# The 0 to the right of the 1 has 2 1's on the same row as itself, and 3 1's in the same column, etc.\\n```\\n\\nCreate a function that transforms the first matrix into its second matrix equivalent.\\n\\n### Examples\\n```\\ntransform_matrix([\\n  [1, 0, 0],\\n  [0, 1, 0],\\n  [0, 0, 1]\\n]) ➞ [\\n  [0, 2, 2],\\n  [2, 0, 2],\\n  [2, 2, 0]\\n]\\n\\ntransform_matrix([\\n  [1, 1, 1],\\n  [0, 0, 1],\\n  [0, 0, 1]\\n]) ➞ [\\n  [2, 2, 4],\\n  [2, 2, 2],\\n  [2, 2, 2]\\n]\\n\\ntransform_matrix([\\n  [1, 1, 1],\\n  [0, 1, 1],\\n  [0, 0, 1]\\n]) ➞ [\\n  [2, 3, 4],\\n  [3, 2, 3],\\n  [2, 3, 2]\\n]\\n```\\n\\n### Notes\\nIt might be easier to visualize this by drawing the grid of 0's and 1's out on a sheet of paper, and drawing lines through a specific number's row and column.\",\"lab\":\"Test.assert_equals(transform_matrix(\\n[\\n[1, 0, 0, 0, 1], \\n[0, 1, 0, 0, 0], \\n[0, 0, 0, 1, 0], \\n[0, 1, 0, 1, 0], \\n[0, 1, 0, 0, 0]])\\n,[\\n[1, 5, 2, 4, 1], \\n[2, 2, 1, 3, 2], \\n[2, 4, 1, 1, 2], \\n[3, 3, 2, 2, 3], \\n[2, 2, 1, 3, 2]\\n])\\n\\nTest.assert_equals(transform_matrix([\\n[1, 0, 0, 0], \\n[0, 1, 0, 0], \\n[0, 0, 1, 0]\\n]), [\\n[0, 2, 2, 1], \\n[2, 0, 2, 1], \\n[2, 2, 0, 1]\\n])\\n\\nTest.assert_equals(transform_matrix([\\n[1, 1], \\n[1, 1], \\n[1, 1]\\n]), [\\n[3, 3], \\n[3, 3], \\n[3, 3]\\n])\\n\\nTest.assert_equals(transform_matrix([\\n[1, 0, 0], \\n[0, 1, 0], \\n[0, 0, 1]\\n]), [\\n[0, 2, 2], \\n[2, 0, 2], \\n[2, 2, 0]\\n])\\n\\nTest.assert_equals(transform_matrix([\\n[1, 1, 1], \\n[0, 0, 1], \\n[0, 0, 1]\\n]), [\\n[2, 2, 4], \\n[2, 2, 2], \\n[2, 2, 2]\\n])\\n\\nTest.assert_equals(transform_matrix([\\n[1, 1, 1], \\n[0, 1, 1], \\n[0, 0, 1]\\n]), [\\n[2, 3, 4], \\n[3, 2, 3], \\n[2, 3, 2]\\n])\",\"language\":\"python3\",\"summary\":\"Suppose any nxm matrix of 0s and 1s can be transformed into a second matrix, where each number in position (i, j) in the new matrix is the sum of 1s in row i and column j in the original matrix, excluding itself (if it is a 1).\\n\\n[[1, 0, 0, 0, 1],\\n[0, 1, 0, 0, 0],\\n[0, 0, 0, 1, 0],\\n[0, 1, 0, 1, 0],\\n[0, 1, 0, 0, 0]]\\n\\n[1, 5, 2, 4, 1],\\n[2, 4, 1, 3, 2],\\n[2, 4, 1, 1,\",\"tags\":[\"arrays\",\"loops\",\"higher_order_functions\"],\"timestamp\":{\"$date\":1553897034730},\"title\":\"Intersecting Rows and Columns \",\"stats\":{\"completed\":{\"total\":68,\"ratings\":[3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,1,3,2,0,4,3,4,4,4,4,3,3,4,4,2,2,2,3,2,4,2,4,2,3,2,4,2,3,3,2,3,4,0,4,2,4,1,2,1,2,3,3,4,4,0,4,2,5],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"yZvzB3qFb8pkHy4dg\",\"8JyqsSbN2FJXPr3cw\",\"nS5Mo26E8XbAWuyuQ\",\"tAF9Gf6PiGogbZuWs\",\"gb9rvGus2Jv7bjZSs\",\"nrA8Pacm3A6GqGzq4\",\"FikSPhcrHBpQ4CyGC\",\"AYaEkTWLMmfzpwejr\",\"7g3vZaQXhLpxrajyg\",\"PFjMZGHNAPTkgd7tq\",\"td7qPZ7Lv4pEWT2Ya\",\"BFNm9gacwba9KyLFW\",\"cecRRLKKu5R62D5xE\",\"9Gf6g4fuKc3uou9w2\",\"3ifAHQzsMasfQySoL\",\"cmwasetrBzbwJQbks\",\"Tin42WiZ4JTDEnS7b\",\"jYJ26SiLKBu5GRumq\",\"PuJDHtAaX6vXeJJTC\",\"8PE2cfZEhQBPhe8LG\",\"HqmxnQJM66Y57twhn\",\"73rmKyTQp7oWvRcgq\",\"xAgd4WTwd9HYmJceT\",\"pDvFWMCD9fQwoBPcu\",\"2fxapKr8XGdNeaKi2\",\"Jqk2uJZZxEv5wZFze\",\"8PwfYqoDQFThzNtvf\",\"EQbnbkkPYtGxiviTp\",\"ftRou9zcw69GCx4iv\",\"2innwjWqxJHo4eRGh\",\"pmgFEciNrd3ES9tuu\",\"aEm3Wvj2rFYRL8Lrb\",\"aCNWav8S8Try9RkC6\",\"mDWNyaaQ9hvPCRzSd\",\"AasGs8AeX9Lcb9xJn\",\"fKuLXM3E32A8mWTnY\",\"ZNnsMeNkdDhHjSrZb\",\"uw8E83imJYpQiiPpP\",\"wT5gGgvjKc5wz59AQ\",\"Ecg4m7srYGgZsb4Ck\",\"f2BoqyCpgnmjEjLqx\",\"xn7uGNKeAwPEkP9oA\",\"G9ybNrwpvGYgSZydo\",\"orFLgPDw9H5MDzmwo\",\"DNGkwLuAzEACszkAx\",\"4fhjJBvLBWh6QeSih\",\"SGhPxX5bHGL8zZqtt\",\"8sNv5PTHa7XQ8bNqR\",\"yjtdwc2AC4jA2RWtn\",\"HF28xZKSLM9wEuqNg\",\"iS5BrkGLzJyPK7nKt\",\"J3upzLHuEwXH7Z2hx\",\"yTtSCvGPyYna6JuRC\",\"s5M5RvgqR9BhB9JoC\",\"iojEnnY9FsMfYzp6f\",\"gJYuGdkXEWWmGRLzu\",\"2PufnQcsHsfymufX3\",\"MpfytGFYF77emJ3cT\",\"6s9vXhx6eaZ5473Rr\",\"T6iBEE2jp7f7iEF2P\",\"DPi9QGLctq2y76KuE\",\"GTKsdeEihE636Le9i\",\"biRFKCafbA5fT7ymZ\"],\"quality\":[5,3,5,5,5,4,5,4]},\"tests\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.5,\"family\":[{\"_id\":\"tCFfABNfydAuX6qvK\",\"language\":\"javascript\"},{\"_id\":\"HoFKikySJb4MebyYd\",\"language\":\"python3\"},{\"_id\":\"phyh7j9vPB5GHxXPX\",\"language\":\"ruby\"}]}}"]