a["{\"msg\":\"result\",\"id\":\"1983\",\"result\":{\"_id\":\"KBmKcorkjbuXds6Jo\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"def chocolates_parcel(n_small, n_big, order):\\n\\t\",\"difficulty\":2.764705882352941,\"familyId\":\"TuEPA5jMBXpXwFhqG\",\"instructions\":\"Mubashir needs to assemble a parcel of **ordered** chocolates. He got two types of chocolates:\\n- **Small chocolates (2 grams each)**\\n- **Big chocolates (5 grams each)**\\n\\nCreate a function that takes three parameters: Number of small available chocolates `n_small`, number of big chocolates available `n_big` and desired weight (in grams) of the final parcel `order`.\\n\\nThe function should return the **required number of small chocolates** to achieve the goal. The function should return `-1` if the goal cannot be achieved by any possible combinations of small and big chocolates.\\n\\n### Examples\\n```\\nchocolates_parcel(4, 1, 13) ➞ 4\\n# 4 small chocolates = 8 grams\\n# 1 big chocolate = 5 grams\\n# 8 + 5 = 13 grams\\n# Required number of small chocolates = 4\\n\\nchocolates_parcel(4, 1, 14) ➞ -1\\n# You can not make any combination to reach 14 grams.\\n\\nchocolates_parcel(2, 1, 7) ➞ 1\\n# 1 big chocolate = 5 grams\\n# 1 small chocolates = 2 grams\\n# 5 + 2 = 7 grams\\n# Required number of small chocolates = 1\\n```\\n\\n### Notes\\n- Maximize the use of big chocolates that are available to achieve the desired goal. And only then should you proceed to use the small chocolates.\\n- You can't break chocolates into small pieces.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(chocolates_parcel(0, 1, 5), 0)\\nTest.assert_equals(chocolates_parcel(3, 1, 6), 3)\\nTest.assert_equals(chocolates_parcel(3, 0, 7), -1)\\nTest.assert_equals(chocolates_parcel(2, 1, 9), 2)\\nTest.assert_equals(chocolates_parcel(58, 156, 283), 4)\\nTest.assert_equals(chocolates_parcel(3, 1000, 5012), -1)\\nTest.assert_equals(chocolates_parcel(1, 1, 1), -1)\\nTest.assert_equals(chocolates_parcel(1, 1, 8), -1)\\nTest.assert_equals(chocolates_parcel(4, 1, 12), -1)\\nTest.assert_equals(chocolates_parcel(10, 400, 2004), 2)\",\"language\":\"python3\",\"quality\":4.8,\"summary\":\"Mubashir needs to assemble a parcel of ordered chocolates. He got two types of chocolates:\\nSmall chocolates (2 grams each)\\nBig chocolates (5 grams each)\\n\\nCreate a function that takes three parameters: Number of small available chocolates nsmall, number of big chocolates available nbig and desired weight (in grams) of the final parcel order.\\n\\nThe function shoul\",\"tags\":[\"algorithms\",\"logic\",\"functional_programming\"],\"timestamp\":{\"$date\":1608636266708},\"title\":\"Chocolates Parcel\",\"stats\":{\"completed\":{\"total\":37,\"ratings\":[3,3,3,3,3,5,2,5,2,5,2,3,3,2,5,1,4,0,5,5,1,3,1,3,2,3,3,2,3,3,0,3,2,1],\"quality\":[4,5,5,5,5],\"rators\":[\"LHe4pMsuz2isuqN6B\",\"T6iBEE2jp7f7iEF2P\",\"8PwfYqoDQFThzNtvf\",\"eYfPWvZwnJQkHbSTK\",\"fSQSHjW3e72MrWxbD\",\"SGhPxX5bHGL8zZqtt\",\"p8qqFdJ3FSk5x9z3G\",\"d6iEb2BDDofyeePh9\",\"s5M5RvgqR9BhB9JoC\",\"iS5BrkGLzJyPK7nKt\",\"Jqk2uJZZxEv5wZFze\",\"jFvXwSyitFJ3TXgwz\",\"KaC4PGcQ4G5KbvKQp\",\"yyZPhAK8oTRdJQu8d\",\"g3Jh47H2g9xtZGxqK\",\"jD7mXH7BefoPFN7R8\",\"XuwZznbqD8GqjjGMc\",\"HSqwnLxhMmhioMssJ\",\"F6PRjJDeA2GkcGyyM\",\"zgoEhAyhrjnsSLPGw\",\"aAFKLxcnBD2ZrdDnJ\",\"HF28xZKSLM9wEuqNg\",\"8sNv5PTHa7XQ8bNqR\",\"xn7uGNKeAwPEkP9oA\",\"8JyqsSbN2FJXPr3cw\",\"iojEnnY9FsMfYzp6f\",\"gJYuGdkXEWWmGRLzu\",\"yjtdwc2AC4jA2RWtn\",\"eHcgvkTGsH7ZziqBo\",\"AasGs8AeX9Lcb9xJn\",\"GTKsdeEihE636Le9i\",\"2PufnQcsHsfymufX3\",\"gXTAie79kiw28tx5u\",\"aEm3Wvj2rFYRL8Lrb\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"n75sfYJkJF2uiLaJv\",\"language\":\"cpp\"},{\"_id\":\"7e3mGcRbxCXFz4aNH\",\"language\":\"javascript\"},{\"_id\":\"KBmKcorkjbuXds6Jo\",\"language\":\"python3\"},{\"_id\":\"yQ3do3tyF93NNta9D\",\"language\":\"ruby\"}]}}"]