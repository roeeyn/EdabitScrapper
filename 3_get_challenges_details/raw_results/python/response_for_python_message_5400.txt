a["{\"msg\":\"result\",\"id\":\"1415\",\"result\":{\"_id\":\"9gmNpQ3m9BTYm3FKr\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"def lucky_seven(lst):\\n\\t\",\"difficulty\":2.101449275362319,\"quality\":4.714285714285714,\"editorId\":\"PXAcsKkssS2yLyDv2\",\"familyId\":\"CjGsTaAXHhWCDR4oX\",\"instructions\":\"Given a list of numbers, return whether it is possible to make the number **7** by adding any *three different numbers* together.\\n\\n### Examples\\n```\\nlucky_seven([2, 4, 3, 8, 9, 1]) ➞ True\\n\\nlucky_seven([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) ➞ True\\n\\nlucky_seven([0, 0, 0, 2, 3]) ➞ False\\n# You cannot repeat the same number to make 2 + 2 + 3 = 7\\n\\nlucky_seven([0, 0, 7]) ➞ False\\n# You need three different numbers.\\n```\\n\\n### Notes\\n- Tests will only include numbers.\\n- Trivially, any list with a length of less than two automatically fails the test.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(lucky_seven([2, 4, 3, 8, 9, 1]), True)\\nTest.assert_equals(lucky_seven([7, 7]), False)\\nTest.assert_equals(lucky_seven([0, 0, 7]), False)\\nTest.assert_equals(lucky_seven([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]), True)\\nTest.assert_equals(lucky_seven([1]), False)\\nTest.assert_equals(lucky_seven([2, 3]), False)\\nTest.assert_equals(lucky_seven([]), False)\\nTest.assert_equals(lucky_seven([1, 10, 8, -3, -3, -2, 9]), True)\\nTest.assert_equals(lucky_seven([-5, 7, -3, -5, 9, 3, 5]), True)\\nTest.assert_equals(lucky_seven([1, -8]), False)\\nTest.assert_equals(lucky_seven([3, 8, 0, -5]), False)\\nTest.assert_equals(lucky_seven([10, 3, 2, 9, 2, -4, -8, 8]), True)\\nTest.assert_equals(lucky_seven([-6, -1, 6, 6, -1, 0, -5, -2, 7]), True)\\nTest.assert_equals(lucky_seven([-7, -3, 0, -4, 0, -6, -1, -5, 2, -3]), False)\\nTest.assert_equals(lucky_seven([-9, 0, 8, -6]), False)\\nTest.assert_equals(lucky_seven([4, 3]), False)\\nTest.assert_equals(lucky_seven([0, 0, 0, 2, 3]), False)\\nTest.assert_equals(lucky_seven([-5, -4, 6, 8, 9, 8, 8]), False)\\nTest.assert_equals(lucky_seven([-9, 7, 6, -5, 10, 3, -8, 8, -6, 0]), True)\\nTest.assert_equals(lucky_seven([-2, 4, 7, -3, -5, 7, -1]), False)\\nTest.assert_equals(lucky_seven([6, -6, 4, 5, -4, 8, 6, 2]), True)\\nTest.assert_equals(lucky_seven([-2, -5, -7, 4, -7, 9, -6, -6]), True)\\nTest.assert_equals(lucky_seven([5, 2, -6, 6, -5, -5, 5, -10]), False)\\nTest.assert_equals(lucky_seven([5, -5, -7, -10, -1, 3, 7, 0, -2, -7]), True)\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,2,2,2,2,2,0,2,2,3,3,3,2,4,3,2,3,3,2,2,3,2,3,2,2,0,0,3,3,1,3,0,0,2,2,2,2,2,3,3,2,0,1,2,3,2,1,0,2,3,3,1,3,2,3,3,0,3,3,2,1,3,3,5],\"quality\":[4,5,5,5,4,3,5,5,5,5,5,4,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,4,5,5,4,5,5,5,5,5,5,3,5,4,5,4],\"rators\":[\"PXAcsKkssS2yLyDv2\",\"gb9rvGus2Jv7bjZSs\",\"yjtdwc2AC4jA2RWtn\",\"9pzFiFK3ANLjQfnr2\",\"Fms9pER3egwxKfRwE\",\"gJYuGdkXEWWmGRLzu\",\"3WJvMbPyWNKTMaS9J\",\"2PufnQcsHsfymufX3\",\"Wpn95NqWxncQrwNgz\",\"rfyEkETeoS96QNH4e\",\"8PwfYqoDQFThzNtvf\",\"s5M5RvgqR9BhB9JoC\",\"iS5BrkGLzJyPK7nKt\",\"DPi9QGLctq2y76KuE\",\"AasGs8AeX9Lcb9xJn\",\"oBcs8GLX2ZFLXQy8y\",\"srJ34BaybkQh3qRkM\",\"vXzWq8qRFXdzP6j5K\",\"buX4mCQhtXCfBjeno\",\"PWgzeK859suojbrRx\",\"cR3ibTMxLyEdDFCHY\",\"HqmxnQJM66Y57twhn\",\"GGdmhAvxXhqhhibJN\",\"QRv96jmNaYsWkxQEG\",\"PC3pLs36zNzpRDSuE\",\"fbr22rabEJMfBp7vD\",\"J3upzLHuEwXH7Z2hx\",\"T6iBEE2jp7f7iEF2P\",\"Jqk2uJZZxEv5wZFze\",\"jCjCvyhqhpebkJn34\",\"4Lwjr34ypKNQNQCar\",\"o4ixjQGSaYqA2JoM4\",\"LQxof8pGabGuWP7Gn\",\"gXTAie79kiw28tx5u\",\"tAF9Gf6PiGogbZuWs\",\"hnyhBFWwNCz9mDfSi\",\"yod5YhKtPqw2GfG9B\",\"CHvzhtXnv8HTbPQ56\",\"8sNv5PTHa7XQ8bNqR\",\"Yp7uvStL97cC9fKkY\",\"RoGGD5cpHb4ftdLDv\",\"nkH3HfJXLMNcBMM79\",\"BrTDhPJcACL2bsrpJ\",\"5HCu9Ydd86QgHDRNP\",\"6dqoF6LmEaRPsCSpT\",\"Qyfyyw6oC4EHAndzo\",\"Ds7L5bksw2QRHjrKL\",\"aEm3Wvj2rFYRL8Lrb\",\"3KkyQm77zsew58Dc2\",\"mvJBakQ35CWAnbbEZ\",\"wLjp8BRfyGvwMeM6y\",\"iojEnnY9FsMfYzp6f\",\"p8qqFdJ3FSk5x9z3G\",\"nWFX7WpqFGKcyDDaR\",\"8JyqsSbN2FJXPr3cw\",\"YyMFAt6ttq3ym4KPt\",\"DEDniTrstQYGounXT\",\"AQSqD9oNv2uPfxZCR\",\"jkbavR2ATFJcpmo8M\",\"J5T8gZqiZXFuFDTQ7\"],\"total\":62},\"flags\":0},\"summary\":\"Given a list of numbers, return whether it is possible to make the number 7 by adding any three different numbers together.\\n\\nExamples\\nlucky_seven([2, 4, 3, 8, 9, 1]) ➞ True\\n\\nlucky_seven([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) ➞ True\\n\\nlucky_seven([0, 0, 0, 2, 3]) ➞ False\\nYou cannot repeat the same number to make 2 + 2 + 3 = 7\\n\\nlucky_seven([0, 0, 7]) ➞ False\\nYou need t\",\"tags\":[\"numbers\",\"loops\",\"algorithms\",\"validation\"],\"timestamp\":{\"$date\":1600451617910},\"title\":\"Lucky Seven\",\"family\":[{\"_id\":\"3PJqzh8J5qo2HbKKE\",\"language\":\"cpp\"},{\"_id\":\"jbQDEAk7viqz2x4AX\",\"language\":\"java\"},{\"_id\":\"HzxFuMHeBuWWeed8h\",\"language\":\"javascript\"},{\"_id\":\"9gmNpQ3m9BTYm3FKr\",\"language\":\"python3\"},{\"_id\":\"uKGCxZNpKqukZnPfs\",\"language\":\"ruby\"}]}}"]