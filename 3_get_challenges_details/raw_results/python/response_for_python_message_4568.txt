a["{\"msg\":\"result\",\"id\":\"1000\",\"result\":{\"_id\":\"tjMNAEgkNvM5eyEqJ\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def unique_abbrev(abbs, words):\\n\\t\",\"difficulty\":1.5084745762711864,\"familyId\":\"djrZHkcenA9vPg634\",\"instructions\":\"You are given two inputs:\\n\\n1. An array of abbreviations.\\n2. An array of words.\\n\\nWrite a function that returns `True` if each abbreviation **uniquely identifies** a word, and `False` otherwise.\\n\\n### Examples\\n```\\nunique_abbrev([\\\"ho\\\", \\\"h\\\", \\\"ha\\\"], [\\\"house\\\", \\\"hope\\\", \\\"happy\\\"]) ➞ False\\n// \\\"ho\\\" and \\\"h\\\" are ambiguous and can identify either \\\"house\\\" or \\\"hope\\\"\\n\\nunique_abbrev([\\\"s\\\", \\\"t\\\", \\\"v\\\"], [\\\"stamina\\\", \\\"television\\\", \\\"vindaloo\\\"]) ➞ True\\n\\nunique_abbrev([\\\"bi\\\", \\\"ba\\\", \\\"bat\\\"], [\\\"big\\\", \\\"bard\\\", \\\"battery\\\"]) ➞ False\\n\\nunique_abbrev([\\\"mo\\\", \\\"ma\\\", \\\"me\\\"], [\\\"moment\\\", \\\"many\\\", \\\"mean\\\"]) ➞ True\\n```\\n\\n### Notes\\nAbbreviations will be a substring from `[0, n]` from the original string.\",\"lab\":\"Test.assert_equals(unique_abbrev([\\\"s\\\", \\\"t\\\", \\\"v\\\"], [\\\"stamina\\\", \\\"television\\\", \\\"vindaloo\\\"]), True)\\nTest.assert_equals(unique_abbrev([\\\"mo\\\", \\\"ma\\\", \\\"me\\\"], [\\\"moment\\\", \\\"many\\\", \\\"mean\\\"]), True)\\nTest.assert_equals(unique_abbrev([\\\"at\\\", \\\"o\\\", \\\"abe\\\"], [\\\"atom\\\", \\\"original\\\", \\\"abet\\\"]), True)\\nTest.assert_equals(unique_abbrev([\\\"rh\\\", \\\"par\\\", \\\"re\\\"], [\\\"rhino\\\", \\\"parry\\\", \\\"residue\\\"]), True)\\nTest.assert_equals(unique_abbrev([\\\"ho\\\", \\\"h\\\", \\\"ha\\\"], [\\\"house\\\", \\\"hope\\\", \\\"happy\\\"]), False)\\nTest.assert_equals(unique_abbrev([\\\"bi\\\", \\\"ba\\\", \\\"bat\\\"], [\\\"big\\\", \\\"bard\\\", \\\"battery\\\"]), False)\\nTest.assert_equals(unique_abbrev([\\\"b\\\", \\\"c\\\", \\\"ch\\\"], [\\\"broth\\\", \\\"chap\\\", \\\"cardigan\\\"]), False)\\nTest.assert_equals(unique_abbrev([\\\"to\\\", \\\"too\\\", \\\"t\\\"], [\\\"topology\\\", \\\"took\\\", \\\"torrent\\\"]), False)\",\"language\":\"python3\",\"summary\":\"You are given two inputs:\\n\\nA array of abbreviations.\\nAn array of words.\\n\\nWrite a function that returns True if each abbreviation uniquely identifies a word, and False otherwise.\\n\\nExamples\\nunique_abbrev([\\\"ho\\\", \\\"h\\\", \\\"ha\\\"], [\\\"house\\\", \\\"hope\\\", \\\"happy\\\"]) ➞ False\\n// \\\"ho\\\" and \\\"h\\\" are ambiguous and can identify either \\\"house\\\" or \\\"hope\\\"\\n\\nunique_abbrev([\\\"s\\\", \\\"t\\\", \\\"v\\\"], [\",\"tags\":[\"strings\",\"higher_order_functions\"],\"timestamp\":{\"$date\":1557292245114},\"title\":\"Abbreviations Unique?\",\"stats\":{\"completed\":{\"total\":331,\"ratings\":[1,1,1,1,1,1,1,1,1,1,2,1,1,1,0,2,2,2,1,1,1,1,1,2,1,1,1,0,2,2,1,0,1,1,1,1,3,2,0,0,2,2,1,2,1,0,2,1,1,0,0,1,0,1,1,0,1,2,2,2,1,0,2,1,1,1,1,1,1,2,1,1,0,1,1,1,1,1,1,1,2,3,0,1,1,5,1,1,1,1,0,1,2,2,2,1,2,5,2,1,1,2,2,2,1,2,2,2,2,2,3,2,2,1,3,3,2,2,1,2,2,2,2,2,2,2,2,2,2,1,2,1,2,2,1,2,2,2,2,2,4,1,2,1,1,2,2,2,0,0,2,2,2,2,2,0,2,2,2,1,3,2,2,2,1,1,2,2,0,2,2,2,1,1,3,1,0,2,2,2,2,2,1,5,2,2,0,0,1,1,2,2,1,2,1,0,2,1,2,2,1,2,0,3,1,2,2,2,2,2,0,2,3,2,2,0,2,2,2,2,1,1,2,1,1,2,2,2,2,1,1,2,2,2,1,2,2,2,2,2,1,2,1,2,2,1,2,2,2,1,1,2,2,2,1,1,3,1,1,2,3,0,2,2,1,0,2,1,0,1,0,0,2,2,2,2,2,2,2,2,1,1,2,2,2,1,2,2,1,1,2,2,2,2,2],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"yZvzB3qFb8pkHy4dg\",\"uSh3aNxzD28jBuhxa\",\"8JyqsSbN2FJXPr3cw\",\"ab7BsQuhDo3QgE6bh\",\"gb9rvGus2Jv7bjZSs\",\"tAF9Gf6PiGogbZuWs\",\"6ckDJWbyznyQQLkrP\",\"eq6bWgNCAXLkFj4tx\",\"qvEvDcL32a5F4Tg6c\",\"M8jrv2FfpMQp9Qzpx\",\"337FkLHqZd9JWKime\",\"aXCm9vWqKwL9XFYoj\",\"n5wubRfh6zh8QRymN\",\"nc7bRhkxgKyqusYe3\",\"4y2bxsHwifCdZXAQA\",\"nZ58gDWFhqXiZpmZQ\",\"Rgdjr9tBGabXFdoXL\",\"hmJar7wTPM99rX4HB\",\"TNQ7ixK78HHTLP7it\",\"SKabuq5XuhXBugKBa\",\"AF6LgdKhEdzwgRJom\",\"JEAi9mG3vvBomJ3Yu\",\"XKi8iZXBCHCaebSHh\",\"gxdjEjj4AdrZv7jCa\",\"kQH5b8MXJunh84Czq\",\"yAouD3PxzED8a4gap\",\"ahWFxnaxt9bXSA4f3\",\"4HC75a4BAtjSd8jPv\",\"KtT7sb3pho7RY8Nw4\",\"PSrcg6fy835R4c5CW\",\"NfMJuiBk6FN5Jc6ow\",\"WkWyq9wMkZhXB6zsD\",\"FHzvDACEZuAjRwL7v\",\"yrCNkFYQBEDE76eFS\",\"tHEH9MBHBAGvhgJGd\",\"C9LKGu2g5hSijvDzA\",\"jeuoearPPTcGPgXhf\",\"TNMAJidLpPdH4kmBv\",\"eoo54vPGzwD3HZuHC\",\"td7qPZ7Lv4pEWT2Ya\",\"Fv3AEnW3RoRDbY3FW\",\"N2wnZXkhDH86mgjQ8\",\"3fjCCrpR2aD32sTrc\",\"XbxHXmh5ZmRN2gw3K\",\"ZzwR8m8Q6Gozo9ofz\",\"6u7yc9m6HuHGbHzph\",\"nfXGHENb5md7m355s\",\"FgkYtHLxeD8pETJ8T\",\"tczr8H3zHk2kwp8br\",\"nQRzZKeDKuLRf9chX\",\"sCnrfER8vCe4xhpB2\",\"gMJhLdyw3tH7L96X2\",\"CssdRyc8mNPgPxsy4\",\"cecRRLKKu5R62D5xE\",\"Nj6FwgBtAXsaQwsM2\",\"498CxrZQdThLMa7ki\",\"HQxp7NcdvF92G7bYS\",\"vkwPoXwJXZjXepHXx\",\"AvZShHHJfB67PiHkE\",\"moFrJ4vxzxPynByzB\",\"cR3ibTMxLyEdDFCHY\",\"3LiSLdtN58n46NEqg\",\"6opWr6XoKoo6CziTg\",\"GHvarH2b22cZtNWxG\",\"sKfrD9gjCDHuqLzSk\",\"w5kGEuJ2CeMY5FTri\",\"9YtQPAffoq4WJLcAP\",\"nzx4uAPg3hCceyFPE\",\"kBmhcwkCqxiy4GwiZ\",\"ksafdYcNM3SFEQoW9\",\"mtRvHDpeLoSGBf8zC\",\"RErqK2yM94wYyD2hk\",\"otXtuQygbcYATMZoP\",\"Hz9BzmNzg9dnMhSB2\",\"2fxapKr8XGdNeaKi2\",\"EEjNW5t4XPGFLfq3k\",\"HqmxnQJM66Y57twhn\",\"qxB9bnow4EXPHwsPj\",\"K96FwtfDDN5WM4Bb7\",\"qJZsi5rhRnWA38FbA\",\"M8dQuMrEpP8Hc3tHN\",\"yr822PZmmiDDenxpB\",\"3c9iCs4DiWNpChoZf\",\"SqZGTR952w2XgymqL\",\"u5u2YpHXiNgzDNJdX\",\"hk6oFpSCH9hg9NW59\",\"fxLjWpWbBeaYcvdgB\",\"H9KZi2cjt4FwH7qog\",\"hq5pNh36cTyapKKDT\",\"hFsWAcbSZpNnMki2e\",\"mybpojPXaZigaqsAD\",\"gzGWSbCyYqaEToxDj\",\"PB4NqRS8Qv6nzxYwd\",\"88LReQA2mZ7maQX3N\",\"yabtHTtycsWhcGBfD\",\"ThLxvPjac34yadad9\",\"Fk9kLwoG4Brf4KsKf\",\"wZMGsR6M9RezNhgMJ\",\"2m2joa99MiCoSDD2T\",\"6XnqacW8vayFNibap\",\"RjjoniCdjnE667sp2\",\"tvHe5taC5yhgA6LQQ\",\"3GKHYDxzAMKH3HsAC\",\"CEd9tLdXeDeNHSzys\",\"2rc86eoe88DLhFeJD\",\"76BKTh6hZHsZ6AFnZ\",\"NPHbTDFiEfTMjEXh4\",\"vzSnWxFwuB4NnDu7y\",\"9Ct9EYenTi6JXEaWW\",\"7rXZ2qYaoKybv3SLo\",\"wko95GmFb8Ts78Et5\",\"bvE5MGnntaR56Z74R\",\"K3RacTvkWHLfzKF8i\",\"6ShafRStcvew4GfCh\",\"4tgBydK887PitgAoi\",\"D6MEecBL9m7iXEfK8\",\"ghTAisPZoS5FTqQnK\",\"8PwfYqoDQFThzNtvf\",\"xmEiF7KSH6Gaximmd\",\"3ECpdeExhBmkYXtba\",\"23oi2a3vQwhtLEbSj\",\"rvvEEYKgQBfSPpJ67\",\"yHuJroeMqwgxB97qB\",\"ToTyoZx9QFGFn2BKE\",\"C4QntmkYtB89GNtpd\",\"pgi5Z5c73JFmpFNp4\",\"CerwRgTuNRtk7ZWa2\",\"DryNRN98Dj24BpgrL\",\"PqEKjCDkJtYoYuZfj\",\"aAGT6YhmhWYwuDNRo\",\"3LDKq4Eufktw7CWaB\",\"PP6sLxJ7TZN3BB7pu\",\"QH3B8zogvc7moSTHB\",\"rJGeRSCjGzRuYfHZS\",\"ZBDiEMi7dbjRL55LB\",\"Jqk2uJZZxEv5wZFze\",\"k5mp7Hkg8w5rwiXpe\",\"TePz42wc3ZZ5CKA6L\",\"ixmh56Ty96Fe233pu\",\"k3fNrZ7BGs2PdLSuZ\",\"rEWQdNHK6YjuBqmrR\",\"BeFnbPbMnAM2SjBdZ\",\"ETeNsTCXfxFrr2LZG\",\"Xj6R2zqhgumffQCAN\",\"PXAcsKkssS2yLyDv2\",\"mxX4rH5ELYkdZ2Mbw\",\"wwz3ixWSv8rFDHBXd\",\"2innwjWqxJHo4eRGh\",\"Ycj4iTJGFyvC4bXek\",\"j2wcHGHmPCHbaQEye\",\"s5M5RvgqR9BhB9JoC\",\"Yp7uvStL97cC9fKkY\",\"cRpaCxYRmGcN3Nsoj\",\"4CFzv558qbGcpQwc4\",\"Qcv3kqBdyGHHbzWY5\",\"CuY5BaTCcu7Mp9tDu\",\"AasGs8AeX9Lcb9xJn\",\"hnyhBFWwNCz9mDfSi\",\"Z85ajWfZ4jDPkbvR4\",\"xowjbn5yEv7c93axA\",\"pMg2Zddm29zRGP6wg\",\"9Ly8afdtofp8DXzrt\",\"ouPtoRyNq8hKH2WkT\",\"LQxof8pGabGuWP7Gn\",\"w3A7cBWyAfukk6xEQ\",\"aRqQ42J5zqCmBNd8w\",\"dHZqT6h4JMwk5fPC8\",\"WLFPvm65aHfgwQy7N\",\"sz8ufn9i8zeiGWpAy\",\"xqYQMujmvgQ78bnJc\",\"g8yJiPAWXbrgxbjfZ\",\"vLrq4dEDMM2wd68Dc\",\"8LfTheFzvicameoz9\",\"J5T8gZqiZXFuFDTQ7\",\"aEm3Wvj2rFYRL8Lrb\",\"jNvegJWCk5HCtEMbK\",\"v9KtC8YLbMWmXiW2H\",\"2QGRoQn2dRq3scu7k\",\"2iFe3EHEH2YdhSKrs\",\"ZNnsMeNkdDhHjSrZb\",\"M9DhkxE77ztbJWz6e\",\"y8ci4crEusJKj7uj4\",\"HF28xZKSLM9wEuqNg\",\"gJYuGdkXEWWmGRLzu\",\"KRSKj7ikX2ytWFmod\",\"9uZpgAtSuPZ7W7DL6\",\"Cc2Cgj4MWXZxsTooC\",\"q5a96XumccZyhQNyL\",\"kYWb8BwpKwunQkxeX\",\"DEDniTrstQYGounXT\",\"KdNDysEsy2TW5QRJ2\",\"9pzFiFK3ANLjQfnr2\",\"cuAeJFK5w7BJtnmux\",\"uiEuENARwFpnNMfFs\",\"nnevRfTLDpBjZZtft\",\"DwetpbChQM4r6Gwah\",\"r9seLLH2zLkN8msP8\",\"FEYpu9RWysAgW3XnP\",\"MKT7khMBGXzA22ykf\",\"FzxTj4GuujhwpZM7y\",\"ahk2qiXKJA753wAJk\",\"DrkR35NqnP9NDLbq6\",\"XrqNzJ2FRG8HnGiR6\",\"a777e8chPvJkY3tKa\",\"GM2X83qnuLXTHe5zA\",\"eMuCpJ2spXWkJjWNz\",\"NG8PWBSjsM8mMhQEq\",\"2ptN2mhjFwFcHyPZd\",\"H4abACFDH5t8CnnyH\",\"ZrKCkX7xxGGZzauFW\",\"3cF6NXq3ZEwdkgSjb\",\"syRNbbPdLCGXbH2Gy\",\"zd9FLSzsGz3evKafy\",\"rxr3nwpDGDEkBJRgD\",\"NNE5HNRXAkmhrWgyQ\",\"WwMjW4MJRuNFExoPc\",\"CwXsu25ygLEwQbmQC\",\"YcCLwitFMAEJSnxAW\",\"iojEnnY9FsMfYzp6f\",\"ZSDWkmmeN9negRgsc\",\"Pe8vWpDHRuH9nSGKW\",\"MRHiWXRWvSBd5Ce6R\",\"Ecg4m7srYGgZsb4Ck\",\"yjtdwc2AC4jA2RWtn\",\"X5MqeHyPh6cSQCXnk\",\"n2BRY9X8899dcG8Bw\",\"R4SjTgDnpigJYDLyL\",\"oBcs8GLX2ZFLXQy8y\",\"6SKDJwXpev4qPSzgM\",\"ta5CrWnBCRusD2WMo\",\"YA7SDhpgEtsqynvNL\",\"6gS4E2C84vBYTYeDZ\",\"RehJGBFS6CYiWdjZx\",\"TPhfpB5tzQWSSn67n\",\"KLmLKaJPfsYxp42p2\",\"p8qqFdJ3FSk5x9z3G\",\"j49s8dHmmiyPxZmWj\",\"k2Eo3wyfZZ6KxvKhN\",\"8BFSTCnoe2QggN64c\",\"Wv2vJnEj8ywNmARoF\",\"tpxMgkGSHwBjS95Ta\",\"mG8HqKiAQFTdRZthG\",\"EMJ6uvBZkie429gdg\",\"gXTAie79kiw28tx5u\",\"GGprTwrkjuccmrQRg\",\"9CoqdidjM9KbeKnHY\",\"DPi9QGLctq2y76KuE\",\"QRv96jmNaYsWkxQEG\",\"wRttWTM59y8m5mx7x\",\"8WpvgSbQciTQWdd8T\",\"J3upzLHuEwXH7Z2hx\",\"dYPkStFnLvAMsHSzZ\",\"dBzwBtRjZqB98DJeB\",\"5HCu9Ydd86QgHDRNP\",\"cAP3n5NY64uoMwzRR\",\"dj5AyG5fWP8FdsSmZ\",\"d8qtzoLB264iP8tdY\",\"kNrnnMxhFZztMTBAX\",\"RGMbFMZXJr7DhcAJy\",\"5XiuAqicKD4hBdu63\",\"XFg5NKYA2wTfXMDmu\",\"HuNF3xTBzmatyGSTm\",\"JS3hNM3XXkxPdg3yk\",\"sHjfbGQGLHE6JR6qu\",\"buX4mCQhtXCfBjeno\",\"5S9nX4rKsnCcnv4Cz\",\"5hQnRWiKkhgKJXNMP\",\"o4ixjQGSaYqA2JoM4\",\"GGdmhAvxXhqhhibJN\",\"KJCDwGkoXh8qtbbKr\",\"eYfPWvZwnJQkHbSTK\",\"Ds7L5bksw2QRHjrKL\",\"srJ34BaybkQh3qRkM\",\"xhN8oEtSyCk5vMy4j\",\"PWgzeK859suojbrRx\",\"qAby4AWXmTNeusvg3\",\"T6iBEE2jp7f7iEF2P\",\"66a9xX73nmTEuKs9k\",\"ey3CASd6Je5LEJzfB\",\"PC3pLs36zNzpRDSuE\",\"yod5YhKtPqw2GfG9B\",\"AFfw7cGg83uYk2Miy\",\"BrTDhPJcACL2bsrpJ\",\"StNu7DPyTgEStZsMY\",\"fznzd3qnvtbFkkizz\",\"mvJBakQ35CWAnbbEZ\",\"CHvzhtXnv8HTbPQ56\",\"c2q7mY39z5JPEMCaM\",\"R6YxHWAiLgKwy5YvC\",\"rrSC943cCKNG48sH4\",\"BdnE4RS5puoxo92mA\",\"2PufnQcsHsfymufX3\",\"RoGGD5cpHb4ftdLDv\",\"XD5nmvKQchKezPXhy\",\"utTuvGdmu2sBHWBhQ\",\"X4rzfxGgxx6CS7Bpz\",\"pduNK68oazqQTtbLp\",\"eHcgvkTGsH7ZziqBo\",\"hR7GMiqGap4CzEWSy\",\"4TmgHkn5vqyHK3sYC\",\"T6Rm8mREPMZSftzrC\",\"d9LBRxvADNBB5QJMB\",\"dzS6WBTMHyFEag6Fp\",\"wjc4iejpErBhxWwHo\",\"NzbRqGWspQnWMoDrF\",\"5QN8R22z43SrwoHDz\",\"Wi4H6ayKsNDWWQCG5\",\"DQskEvAv5KiJDPtGF\",\"uKPdSvXEJesi6SWkg\",\"rCrbqMiaGPgHYTNxu\",\"uGuS9YRXW2nj4p6zf\",\"E2hpke7mHxAWsw5t9\"],\"quality\":[5,4,5,5,5,5,5,4,5,5,5,5,4,5,5,5,5,5,4,5,5,4,5,5,5,5,5]},\"tests\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.814814814814815,\"family\":[{\"_id\":\"EtWMRhk6apM5y6Bb2\",\"language\":\"cpp\"},{\"_id\":\"AGoRjorDpas63gqt6\",\"language\":\"java\"},{\"_id\":\"H8JABWQfYFN4ZSAxE\",\"language\":\"javascript\"},{\"_id\":\"tjMNAEgkNvM5eyEqJ\",\"language\":\"python3\"},{\"_id\":\"Bd7bYFFCTc55aqfJM\",\"language\":\"ruby\"}]}}"]