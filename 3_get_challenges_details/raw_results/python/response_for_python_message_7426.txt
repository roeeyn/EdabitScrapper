a["{\"msg\":\"result\",\"id\":\"2419\",\"result\":{\"_id\":\"qRnX8DpgWJJfbq3xT\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"def connect_four_winner(positions):\\n\\t\",\"difficulty\":4.142857142857143,\"familyId\":\"Y2Gz5RKyN7mRC5NjY\",\"instructions\":\"**Connect Four** is a two-player connection board game, in which the players choose a color and then take turns dropping colored discs into a seven-column, six-row vertically suspended grid.\\n\\nThe game has two players: `yellow` and `red` while columns are named from **\\\"A\\\" to \\\"G\\\"**. The first player who connects four items of the same color is the **winner**.\\n\\n![Alternative Text](https://edabit-challenges.s3.amazonaws.com/Connect_Four.gif)\\n\\nCreate a function that takes a list of **player positions** showing the order of the pieces which are dropped in columns. Function should return **\\\"Yellow\\\", \\\"Red\\\"** or **\\\"Draw\\\"** accordingly.\\n\\n### Examples\\n```\\nconnect_four_winner([\\n  \\\"A_Red\\\",\\n  \\\"B_Yellow\\\",\\n  \\\"A_Red\\\",\\n  \\\"B_Yellow\\\",\\n  \\\"A_Red\\\",\\n  \\\"B_Yellow\\\",\\n  \\\"G_Red\\\",\\n  \\\"B_Yellow\\\"\\n]) ➞ \\\"Yellow\\\"\\n\\n# Yellow has 4 conescutive discs in column B\\n```\\n\\n```\\nconnect_four_winner([\\n  \\\"A_Red\\\",\\n  \\\"B_Yellow\\\",\\n  \\\"A_Red\\\",\\n  \\\"E_Yellow\\\",\\n  \\\"F_Red\\\",\\n  \\\"G_Yellow\\\",\\n  \\\"A_Red\\\",\\n  \\\"G_Yellow\\\"\\n]) ➞ \\\"Draw\\\"\\n```\\n\\n### Notes\\nN/A\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(connect_four_winner([\\\"C_Yellow\\\",\\n    \\\"E_Red\\\",\\n    \\\"G_Yellow\\\",\\n    \\\"B_Red\\\",\\n    \\\"D_Yellow\\\",\\n    \\\"B_Red\\\",\\n    \\\"B_Yellow\\\",\\n    \\\"G_Red\\\",\\n    \\\"C_Yellow\\\",\\n    \\\"C_Red\\\",\\n    \\\"D_Yellow\\\",\\n    \\\"F_Red\\\",\\n    \\\"E_Yellow\\\",\\n    \\\"A_Red\\\",\\n    \\\"A_Yellow\\\",\\n    \\\"G_Red\\\",\\n    \\\"A_Yellow\\\",\\n    \\\"F_Red\\\",\\n    \\\"F_Yellow\\\",\\n    \\\"D_Red\\\",\\n    \\\"B_Yellow\\\",\\n    \\\"E_Red\\\",\\n    \\\"D_Yellow\\\",\\n    \\\"A_Red\\\",\\n    \\\"G_Yellow\\\",\\n    \\\"D_Red\\\",\\n    \\\"D_Yellow\\\",\\n    \\\"C_Red\\\"]), \\\"Yellow\\\")\\nTest.assert_equals(connect_four_winner([\\\"C_Yellow\\\",\\n    \\\"B_Red\\\",\\n    \\\"B_Yellow\\\",\\n    \\\"E_Red\\\",\\n    \\\"D_Yellow\\\",\\n    \\\"G_Red\\\",\\n    \\\"B_Yellow\\\",\\n    \\\"G_Red\\\",\\n    \\\"E_Yellow\\\",\\n    \\\"A_Red\\\",\\n    \\\"G_Yellow\\\",\\n    \\\"C_Red\\\",\\n    \\\"A_Yellow\\\",\\n    \\\"A_Red\\\",\\n    \\\"D_Yellow\\\",\\n    \\\"B_Red\\\",\\n    \\\"G_Yellow\\\",\\n    \\\"A_Red\\\",\\n    \\\"F_Yellow\\\",\\n    \\\"B_Red\\\",\\n    \\\"D_Yellow\\\",\\n    \\\"A_Red\\\",\\n    \\\"F_Yellow\\\",\\n    \\\"F_Red\\\",\\n    \\\"B_Yellow\\\",\\n    \\\"F_Red\\\",\\n    \\\"F_Yellow\\\",\\n    \\\"G_Red\\\",\\n    \\\"A_Yellow\\\",\\n    \\\"F_Red\\\",\\n    \\\"C_Yellow\\\",\\n    \\\"C_Red\\\",\\n    \\\"G_Yellow\\\",\\n    \\\"C_Red\\\",\\n    \\\"D_Yellow\\\",\\n    \\\"D_Red\\\",\\n    \\\"E_Yellow\\\",\\n    \\\"D_Red\\\",\\n    \\\"E_Yellow\\\",\\n    \\\"C_Red\\\",\\n    \\\"E_Yellow\\\",\\n    \\\"E_Red\\\"]), \\\"Yellow\\\")\\nTest.assert_equals(connect_four_winner([\\\"F_Yellow\\\",\\n    \\\"G_Red\\\",\\n    \\\"D_Yellow\\\",\\n    \\\"C_Red\\\",\\n    \\\"A_Yellow\\\",\\n    \\\"A_Red\\\",\\n    \\\"E_Yellow\\\",\\n    \\\"D_Red\\\",\\n    \\\"D_Yellow\\\",\\n    \\\"F_Red\\\",\\n    \\\"B_Yellow\\\",\\n    \\\"E_Red\\\",\\n    \\\"C_Yellow\\\",\\n    \\\"D_Red\\\",\\n    \\\"F_Yellow\\\",\\n    \\\"D_Red\\\",\\n    \\\"D_Yellow\\\",\\n    \\\"F_Red\\\",\\n    \\\"G_Yellow\\\",\\n    \\\"C_Red\\\",\\n    \\\"F_Yellow\\\",\\n    \\\"E_Red\\\",\\n    \\\"A_Yellow\\\",\\n    \\\"A_Red\\\",\\n    \\\"C_Yellow\\\",\\n    \\\"B_Red\\\",\\n    \\\"E_Yellow\\\",\\n    \\\"C_Red\\\",\\n    \\\"E_Yellow\\\",\\n    \\\"G_Red\\\",\\n    \\\"A_Yellow\\\",\\n    \\\"A_Red\\\",\\n    \\\"G_Yellow\\\",\\n    \\\"C_Red\\\",\\n    \\\"B_Yellow\\\",\\n    \\\"E_Red\\\",\\n    \\\"F_Yellow\\\",\\n    \\\"G_Red\\\",\\n    \\\"G_Yellow\\\",\\n    \\\"B_Red\\\",\\n    \\\"B_Yellow\\\",\\n    \\\"B_Red\\\"]), \\\"Red\\\")\\nTest.assert_equals(connect_four_winner([\\\"A_Yellow\\\",\\n    \\\"B_Red\\\",\\n    \\\"B_Yellow\\\",\\n    \\\"C_Red\\\",\\n    \\\"G_Yellow\\\",\\n    \\\"C_Red\\\",\\n    \\\"C_Yellow\\\",\\n    \\\"D_Red\\\",\\n    \\\"G_Yellow\\\",\\n    \\\"D_Red\\\",\\n    \\\"G_Yellow\\\",\\n    \\\"D_Red\\\",\\n    \\\"F_Yellow\\\",\\n    \\\"E_Red\\\",\\n    \\\"D_Yellow\\\"]), \\\"Red\\\")\\nTest.assert_equals(connect_four_winner([ \\\"A_Red\\\",\\n    \\\"B_Yellow\\\",\\n    \\\"A_Red\\\",\\n    \\\"B_Yellow\\\",\\n    \\\"A_Red\\\",\\n    \\\"B_Yellow\\\",\\n    \\\"G_Red\\\",\\n    \\\"B_Yellow\\\"]), \\\"Yellow\\\")\\nTest.assert_equals(connect_four_winner([ \\\"A_Red\\\",\\n    \\\"B_Yellow\\\",\\n    \\\"A_Red\\\",\\n    \\\"E_Yellow\\\",\\n    \\\"F_Red\\\",\\n    \\\"G_Yellow\\\",\\n    \\\"A_Red\\\",\\n    \\\"G_Yellow\\\"]), \\\"Draw\\\")\",\"language\":\"python3\",\"quality\":0,\"summary\":\"Connect Four is a two-player connection board game, in which the players choose a color and then take turns dropping colored discs into a seven-column, six-row vertically suspended grid.\\n\\nThe game has two players: yellow and red while columns are named from \\\"A\\\" to \\\"G\\\". The first player who connects four items of the same color is the winner.\\n\\nAlternative Text\",\"tags\":[\"algorithms\",\"games\",\"logic\",\"validation\",\"strings\"],\"timestamp\":{\"$date\":1609227404141},\"title\":\"Connect Four Winner\",\"stats\":{\"completed\":{\"total\":10,\"ratings\":[5,5,5,5,5,1,5,4,5,2,5,1,5,5],\"quality\":[],\"rators\":[\"T6iBEE2jp7f7iEF2P\",\"8PwfYqoDQFThzNtvf\",\"s5M5RvgqR9BhB9JoC\",\"xn7uGNKeAwPEkP9oA\",\"yjtdwc2AC4jA2RWtn\",\"J3upzLHuEwXH7Z2hx\",\"8sNv5PTHa7XQ8bNqR\",\"iS5BrkGLzJyPK7nKt\",\"gJYuGdkXEWWmGRLzu\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"GTgRaZWHuiHkKs8L2\",\"language\":\"cpp\"},{\"_id\":\"CE7PoZ9FACoXDtikG\",\"language\":\"javascript\"},{\"_id\":\"qRnX8DpgWJJfbq3xT\",\"language\":\"python3\"},{\"_id\":\"qqxCRxfPKABNGtH3N\",\"language\":\"ruby\"}]}}"]