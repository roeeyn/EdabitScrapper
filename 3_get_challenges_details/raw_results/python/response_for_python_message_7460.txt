a["{\"msg\":\"result\",\"id\":\"2436\",\"result\":{\"_id\":\"wE7yE3icnAsJunAiA\",\"author\":\"Evgeny SH\",\"authorId\":\"8PwfYqoDQFThzNtvf\",\"code\":\"def bitwise_and(m, n):\\n\",\"difficulty\":4.384615384615385,\"editorId\":\"8PwfYqoDQFThzNtvf\",\"familyId\":\"GwrDJbn9cnKFHBxGs\",\"instructions\":\"The function is given two numbers `begin, end` that define a range of numbers, inclusive. Starting from `begin` apply bitwise `&` to the next one until the `end` to compute the outcome and return it.\\n\\n### Examples\\n```\\nbitwise_and(0, 1) ➞ 0\\n# input  = 0:0b0 & 1:0b1\\n# output = 0:0b0\\n\\nbitwise_and(1, 1) ➞ 1\\n# input  = 1:0b1\\n# output = 1:0b1\\n\\nbitwise_and(5, 7) ➞ 4\\n# input  = 5:0b101 & 6:0b110 & 7:0b111\\n# output = 4:0b100\\n\\nbitwise_and(19, 22) ➞ 16\\n# input  = 19:0b10011 & 20:0b10100 & 21:0b10101 & 22:0b10110\\n# output = 16:0b10000\\n```\\n\\n### Notes\\nN/A\",\"isFree\":false,\"isHidden\":false,\"lab\":\"from time import perf_counter\\ntic = perf_counter()\\n\\nTest.assert_equals(bitwise_and(0, 1), 0)\\nTest.assert_equals(bitwise_and(1, 1), 1)\\nTest.assert_equals(bitwise_and(5, 7), 4)\\nTest.assert_equals(bitwise_and(2, 3), 2)\\nTest.assert_equals(bitwise_and(6, 7), 6)\\nTest.assert_equals(bitwise_and(3, 3), 3)\\nTest.assert_equals(bitwise_and(19, 22), 16)\\nTest.assert_equals(bitwise_and(70, 100), 64)\\nTest.assert_equals(bitwise_and(65, 130), 0)\\nTest.assert_equals(bitwise_and(513, 1023), 512)\\nTest.assert_equals(bitwise_and(4110, 8188), 4096)\\nTest.assert_equals(bitwise_and(32777, 65533), 32768)\\nTest.assert_equals(bitwise_and(131100, 262148), 0)\\nTest.assert_equals(bitwise_and(524290, 1048570), 524288)\\nTest.assert_equals(bitwise_and(2097153, 4194305), 0)\\nTest.assert_equals(bitwise_and(4194314, 8388508), 4194304)\\nTest.assert_equals(bitwise_and(600000000, 2147483645), 0)\\n\\nprint('t_sec = {:.6f}'.format(perf_counter() - tic))\",\"language\":\"python3\",\"quality\":0,\"stats\":{\"completed\":{\"ratings\":[5,5,5,5,5,5,3,5,5,4,4,5,1],\"quality\":[],\"rators\":[\"8PwfYqoDQFThzNtvf\",\"aEm3Wvj2rFYRL8Lrb\",\"QBgP4BySQAeCoCFf6\",\"iS5BrkGLzJyPK7nKt\",\"eHcgvkTGsH7ZziqBo\",\"SGhPxX5bHGL8zZqtt\",\"gJYuGdkXEWWmGRLzu\",\"8sNv5PTHa7XQ8bNqR\"],\"total\":9},\"flags\":0},\"summary\":\"The function is given two numbers begin, end that define a range of numbers, inclusive. Starting from begin apply bitwise & to the next one until the end to compute the outcome and return it.\\n\\nExamples\\nbitwise_and(0, 1) ➞ 0\\ninput  = 0:0b0 & 1:0b1\\noutput = 0:0b0\\n\\nbitwise_and(1, 1) ➞ 1\\ninput  = 1:0b1\\noutput = 1:0b1\\n\\nbitwise_and(5, 7) ➞ 4\\ninput  = 5:0b101 & 6:0b1\",\"tags\":[\"bit_operations\",\"loops\",\"math\",\"numbers\"],\"timestamp\":{\"$date\":1607209618413},\"title\":\"Bitwise AND of Numbers in the Range\",\"family\":[{\"_id\":\"wE7yE3icnAsJunAiA\",\"language\":\"python3\"}]}}"]