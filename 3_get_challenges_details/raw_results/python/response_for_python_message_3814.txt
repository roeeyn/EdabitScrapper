a["{\"msg\":\"result\",\"id\":\"625\",\"result\":{\"_id\":\"fYMjhe7BnijXwfNpF\",\"author\":\"Fathur\",\"authorId\":\"knT3HJMb87iKpjqdM\",\"code\":\"def stmid(string):\\n\\t\",\"difficulty\":1.0875912408759123,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"AbzqiM6F2fMXLJ7fm\",\"instructions\":\"Create a function that takes a string and returns the first character of every word if the length of the word is even and the middle character if the length of the word is odd.\\n\\n### Examples\\n```\\nstmid(\\\"Alexa have to paid\\\") ➞ \\\"ehtp\\\"\\n# \\\"e\\\" is the middle character of \\\"Alexa\\\"\\n# \\\"h\\\" is the first character of \\\"have\\\"\\n\\nstmid(\\\"Th3 0n3 4nd 0n1y\\\") ➞ \\\"hnn0\\\"\\n\\nstmid(\\\"who is the winner\\\") ➞ \\\"hihw\\\"\\n```\\n\\n### Notes\\nN/A\",\"isHidden\":false,\"lab\":\"Test.assert_equals(stmid(\\\"Alexa have to paid\\\"), \\\"ehtp\\\")\\nTest.assert_equals(stmid(\\\"Th3 0n3 4nd 0n1y\\\") , \\\"hnn0\\\")\\nTest.assert_equals(stmid(\\\"who is the winner\\\"), \\\"hihw\\\")\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,2,0,0,1,0,2,0,1,0,2,1,1,2,1,2,3,0,0,1,1,2,2,2,1,0,2,0,5,0,1,0,1,1,0,1,0,2,1,1,0,3,0,1,0,3,1,2,1,1,1,0,1,1,2,1,2,1,1,1,1,1,0,2,0,2,0,0,2,2,0,1,1,3,1,0,0,2,1,1,2,0,2,1,2,0,1,1,1,1,3,1,1,0,2,1,3,1,0,1,1,2,2,1,1,1,1,1,5,1,1,1,1,1,1,3,1,2,1,0,1,1,1,2,2,1,2,1,0,1,0,2,1,1,1,0,1,1,0,0,2,0,1,1,1,1,2,0,2,2,1,0,1,1,1,1,1,1,1,2,5,1,1,1,1,1,1,1,1,0,1,1,3,1,1,1,1,2,2,1,1,1,1,1,2,1,1,1,1,1,1,2,1,1,0,1,1,2,2,0,1,2,1,1,1,0,1,1,1,0,1,0,1,2,1,0,1,1,0,1,1,2,1,1,2,1,0,0,1,2,2,0,2,1,0,1,0,0,1,2,2,1,1,0,0,0,1,2,2,1,1,2,1,1,1,2,1,1,2,0,2,1,1,1,1,0,1,0,1,5,2,1,1,2,1,1,0,1,0,2,0,0,3,2,2,1,1,2,3,0,0,2,1,4,0,1,0,1,1,2,1,2,1,0,0,1,1,1,1,1,2,1,2,0,0,1,0,2,2,0,1,2,2,1,1,1,1,0,1,0,0,1,0,1,1,0,1,1,1,2,1,1,1,2,0,1,1,1,1,1,0,1,1,1,1,1,2,1,1,0,1,1,0,0,2,1,2,1,1,1,1,1,2,1,2,4,0,0,1,0,0,1,1,2,1,1,1,1,1,0,1,1,1,1,1,2,2,1,2,2,0,1,0,1,1,1,1],\"rators\":[\"zEwSoioYyEynzxLij\",\"AbrJ8hMyv5fFXG6DN\",\"fxLjWpWbBeaYcvdgB\",\"8JyqsSbN2FJXPr3cw\",\"ixmh56Ty96Fe233pu\",\"qof5EFAtKFtMApABf\",\"yKttxy9JGn5Jzwuj6\",\"j2wcHGHmPCHbaQEye\",\"jNvegJWCk5HCtEMbK\",\"2fxapKr8XGdNeaKi2\",\"X29Ekg7HjqHAYgCSM\",\"KjxavwpEcTrsWBMzi\",\"tAF9Gf6PiGogbZuWs\",\"XbxHXmh5ZmRN2gw3K\",\"k5mp7Hkg8w5rwiXpe\",\"DryNRN98Dj24BpgrL\",\"PhceyfmFntJcn5Fhf\",\"Jqk2uJZZxEv5wZFze\",\"RQTa9rPQ3AboLtdzj\",\"u5u2YpHXiNgzDNJdX\",\"yabtHTtycsWhcGBfD\",\"Lw8oRc5SERsuntXMo\",\"FKQZqmLAPcB9eyDfF\",\"nfXGHENb5md7m355s\",\"yr822PZmmiDDenxpB\",\"PYMCsk26X5SETLDMy\",\"HqmxnQJM66Y57twhn\",\"8zTbuHXnnPLCLwSsA\",\"gb9rvGus2Jv7bjZSs\",\"Xj6R2zqhgumffQCAN\",\"k3fNrZ7BGs2PdLSuZ\",\"C4QntmkYtB89GNtpd\",\"N2wnZXkhDH86mgjQ8\",\"4tgBydK887PitgAoi\",\"ey3CASd6Je5LEJzfB\",\"TWSexKXBtfbBeTegr\",\"9eh4xwoP2WNJE8wEo\",\"T7QZG6y34b65Fxyef\",\"BeFnbPbMnAM2SjBdZ\",\"KMfDGWCF375aw6ntJ\",\"DwetpbChQM4r6Gwah\",\"nYSebjpPsiBXiho7y\",\"PXAcsKkssS2yLyDv2\",\"ahWFxnaxt9bXSA4f3\",\"gMJhLdyw3tH7L96X2\",\"73gSzFh3g9KiGf8Ld\",\"mL6ABun6M9ioqczBZ\",\"rEWQdNHK6YjuBqmrR\",\"NfMJuiBk6FN5Jc6ow\",\"rJGeRSCjGzRuYfHZS\",\"nQRzZKeDKuLRf9chX\",\"PSrcg6fy835R4c5CW\",\"ZagFjppacCo7y2eh5\",\"XbwyB44kHPnRgQcrB\",\"Gcv7RYy8ytjJgFkHK\",\"26PEtc7XWLrhLXeiu\",\"HQxp7NcdvF92G7bYS\",\"sKfrD9gjCDHuqLzSk\",\"ucoWphDttLoxdMgdr\",\"wwz3ixWSv8rFDHBXd\",\"cxtWgY5qywDZ8iccT\",\"BrW5A64EAFqCKXoaz\",\"CuY5BaTCcu7Mp9tDu\",\"mxX4rH5ELYkdZ2Mbw\",\"mNnnW2JCrW6mgFRAM\",\"oXh8LZ7k6pWZMGZGA\",\"Yp7uvStL97cC9fKkY\",\"mP3xxS7JxmPfbE2Hb\",\"3GhZpJLhhrm6AR3aM\",\"nZ58gDWFhqXiZpmZQ\",\"K96FwtfDDN5WM4Bb7\",\"J5JmFhntL9qYMjxfC\",\"p8RzB2C9xixAMaxPb\",\"HrXfQrvuHJj4Mdguk\",\"NXDM2LA8smpk7jkoX\",\"s5M5RvgqR9BhB9JoC\",\"hwRsMg8B6pMAkDMyc\",\"DLai9DxpZN6p5TPRX\",\"XNcFbNk3geETcD5ut\",\"xxxhm6QEkRpah4k94\",\"WcqujsAnCdQ9uRbeZ\",\"mS4rEQMQHzk68EcrF\",\"jeuoearPPTcGPgXhf\",\"N7GPFEhCaiQ79MKjz\",\"ekbfbYdyZeXHvaG8c\",\"EDNDEt5jF3LHCbaxQ\",\"XYvFMRqyrX9uRfZ3X\",\"eGwKGXNrJoNHnMG9a\",\"rJFxP8NgzZhZ6ryXq\",\"bZouZFDGoQgfKHGZ7\",\"zg8GmMSP2LkHBtAzy\",\"9uZpgAtSuPZ7W7DL6\",\"ePrQatjrpPQKpmwFf\",\"tkZnn9tCRuZJ2t7rA\",\"2innwjWqxJHo4eRGh\",\"5diQb8rbt5d5nvmhB\",\"4CFzv558qbGcpQwc4\",\"ab7BsQuhDo3QgE6bh\",\"nnFa8YjQpySGC47zc\",\"hnyhBFWwNCz9mDfSi\",\"4fctAnxyFRB8stPRQ\",\"Ycj4iTJGFyvC4bXek\",\"9f9LG2exEqL5gNrA7\",\"QnPD4Sv6W4LHc2Qng\",\"BByKDngfPvW6w4m7d\",\"76GWKGTsNEG6R4APD\",\"Nj6FwgBtAXsaQwsM2\",\"JPtpz9cnJwtS8L7ui\",\"cRpaCxYRmGcN3Nsoj\",\"Jv3nJiqanTo2uyAT6\",\"AasGs8AeX9Lcb9xJn\",\"CBXLutgEKHKvbgE3h\",\"Cc2Cgj4MWXZxsTooC\",\"kMzFDf8vZg6vAzqLM\",\"sz8ufn9i8zeiGWpAy\",\"v3fjGuc7Pq4yjFygS\",\"7ut47BH2cpKzHXpF7\",\"cSaaAxqkYsPDXmMuf\",\"Z85ajWfZ4jDPkbvR4\",\"Fk9kLwoG4Brf4KsKf\",\"9Ly8afdtofp8DXzrt\",\"jNE5AHcJQWXz7efuP\",\"J5T8gZqiZXFuFDTQ7\",\"Wv5c7WsK6R8yb4mTt\",\"LQxof8pGabGuWP7Gn\",\"pMg2Zddm29zRGP6wg\",\"orFLgPDw9H5MDzmwo\",\"dHZqT6h4JMwk5fPC8\",\"mybpojPXaZigaqsAD\",\"FovJzwmhALjb7ouFm\",\"w3A7cBWyAfukk6xEQ\",\"pmgFEciNrd3ES9tuu\",\"8fhbZ2xkaSQB4Cb2L\",\"jBo3xAopr37GFzY8g\",\"gudC5KZrykfdfGD3J\",\"zd9FLSzsGz3evKafy\",\"yZvzB3qFb8pkHy4dg\",\"6abffx8jQDCf7kgvb\",\"WoKygnR2BoTuSG9y5\",\"tdTjjvaSqtvpJ7Lx5\",\"ovqQRfyvmEDypjrnC\",\"X74H8PYX8XYkrGRQc\",\"4y2bxsHwifCdZXAQA\",\"FiaTpm7ehfDv43wSG\",\"cR3ibTMxLyEdDFCHY\",\"E9ttMPTkLkKG6nZrg\",\"Lg74S7Hm9R378BCvX\",\"8LfTheFzvicameoz9\",\"Cuy7McJ5y8BkXRRk9\",\"hiGXnxds6zo7XsfTw\",\"aRqQ42J5zqCmBNd8w\",\"aEm3Wvj2rFYRL8Lrb\",\"2iFe3EHEH2YdhSKrs\",\"Tpg3ek75vt9MrhEHZ\",\"C9LKGu2g5hSijvDzA\",\"eLkj3Zb2DqiW4AEEh\",\"LRuR8ymb2pRDggrrt\",\"qzzyGD7fCCDjX25za\",\"mDWNyaaQ9hvPCRzSd\",\"LQFs3xtNHpRhCZ5aT\",\"4AoQy4B5fPs2KBinr\",\"5kEyLPjTLrt7z2YJZ\",\"7tbM7oMYc5oDvD88Z\",\"v8iedwMBcGiN2PHGM\",\"2QGRoQn2dRq3scu7k\",\"BEdxteC2PKrmTLbdM\",\"s2ZMtR9deh6Kia7pb\",\"HF28xZKSLM9wEuqNg\",\"v9KtC8YLbMWmXiW2H\",\"gJYuGdkXEWWmGRLzu\",\"N7P4AnS8nzK4oupHv\",\"uiEuENARwFpnNMfFs\",\"KRSKj7ikX2ytWFmod\",\"ZNnsMeNkdDhHjSrZb\",\"M8dQuMrEpP8Hc3tHN\",\"5JZNWts9XEHejpvur\",\"q5a96XumccZyhQNyL\",\"9PGk6auzrKALn9mEn\",\"JQkZXeaLy3giT5p6W\",\"kYWb8BwpKwunQkxeX\",\"GEvSGXDkk7pACfYri\",\"DEDniTrstQYGounXT\",\"ffjnHrx8Ym7A7pQWe\",\"HiXS9Hofvx4rnqDZz\",\"9pzFiFK3ANLjQfnr2\",\"z9guJRB4sMe9mpxKv\",\"KdNDysEsy2TW5QRJ2\",\"LWCzZ8mb8gwrRNGfq\",\"ywk3XGvcmpTgRxwZa\",\"sJWTa7iWeRoRtqJ8N\",\"bMEg2eSZtsAcT7ZmJ\",\"FEYpu9RWysAgW3XnP\",\"zAsNgFHdyiHeiHB8C\",\"tDdqXfMYgqZ26Lwvg\",\"ytceK4TxiCchoCLYC\",\"8BFSTCnoe2QggN64c\",\"4rwxLqLs2mNZNg8NB\",\"rzF2F7DgSjgJrneo8\",\"dKKMvaYoJunNPk5Wa\",\"XrqNzJ2FRG8HnGiR6\",\"ekQh3jzgGLsEMbKo3\",\"di2hhADLx59Bj4ewM\",\"AF6LgdKhEdzwgRJom\",\"FzxTj4GuujhwpZM7y\",\"ahk2qiXKJA753wAJk\",\"8xhYxugEiwY6XEmGc\",\"sbJcFfQjQ59Wfg4Cd\",\"JEAi9mG3vvBomJ3Yu\",\"yYxPzFqBgtQ9fsyHM\",\"a777e8chPvJkY3tKa\",\"NzbRqGWspQnWMoDrF\",\"NG8PWBSjsM8mMhQEq\",\"4yNLEwL2rsx4EE5Nt\",\"NNE5HNRXAkmhrWgyQ\",\"aPLuemxzZ5iS57NBQ\",\"2ptN2mhjFwFcHyPZd\",\"So6PHm74mfJuY2WTs\",\"FRN2W8RYpJ6GPhgRy\",\"rgvAJFwfCeYoYnFTK\",\"3cF6NXq3ZEwdkgSjb\",\"2wb4F2fYBYX7e2d7g\",\"qZQxPQ2kaNKAMesHT\",\"H4abACFDH5t8CnnyH\",\"FvFhg2wELM3SCZDZQ\",\"ZrKCkX7xxGGZzauFW\",\"n2ck2WGuM35vbZiFz\",\"sHjfbGQGLHE6JR6qu\",\"9bQyb6rW7xfE4vgrR\",\"JgWpNj5G78uttDiE2\",\"ckHFA5y8pkrXbsevA\",\"YA7SDhpgEtsqynvNL\",\"GtjoPBfjinHuGG5yL\",\"mGqYfb9J8G4bRHnio\",\"syRNbbPdLCGXbH2Gy\",\"Stye5FSYwYNbhFHgR\",\"5HCu9Ydd86QgHDRNP\",\"GGdmhAvxXhqhhibJN\",\"4X3bLdgJjHMF8Lxug\",\"R4SjTgDnpigJYDLyL\",\"LjoNTyGEMfBpMHHus\",\"TTgP9jcqGxCfKotZ3\",\"yNjkHfHESBAnCssPB\",\"3LiSLdtN58n46NEqg\",\"pDvFWMCD9fQwoBPcu\",\"gSFJPsMXnqAog3Q9f\",\"qB6KSTYC6H2TQEQY6\",\"b9YQPLb9ZPSADdHXX\",\"mfJcJtAYaK9TN6mHg\",\"yAouD3PxzED8a4gap\",\"fD42arz6uZxQcrQjn\",\"iojEnnY9FsMfYzp6f\",\"Y9zyHwuyA7MJ8SPDh\",\"9CoqdidjM9KbeKnHY\",\"Pe8vWpDHRuH9nSGKW\",\"iS5BrkGLzJyPK7nKt\",\"dj5AyG5fWP8FdsSmZ\",\"mBtSsKTHdQniYAfsZ\",\"kNrnnMxhFZztMTBAX\",\"KdYQN3KAT2DyTzT2a\",\"7K2GEb5TZRtSpyyGS\",\"i5iePG5GqhJJ8HEoB\",\"oBcs8GLX2ZFLXQy8y\",\"HhYCji7QqauyN3A7v\",\"SkQcb2sRn4as5KpnN\",\"6kz7jjJS8W4tikYQT\",\"ta5CrWnBCRusD2WMo\",\"yjtdwc2AC4jA2RWtn\",\"TPhfpB5tzQWSSn67n\",\"KRyczPZSHYbKrBYnY\",\"xLe22eHviFtWojRem\",\"hkJGLuib5md8vZ9HD\",\"ZeTRCF5ufwFqAsHKt\",\"PcfcAbTJPrdzJN2FW\",\"q6QsMYNMpPNtmyTeW\",\"RehJGBFS6CYiWdjZx\",\"g4NCSxxHqHCGMpWwT\",\"aKzYNPqBqb3J3ZgyD\",\"u7i7WPM63n42r8R8o\",\"8vWWL8Tx2yDai4ydm\",\"Ey9pB2PRqejNubQmf\",\"pWYjN62ZAKQZ7Xp3W\",\"w2HhxvSLmDhaGCAjE\",\"KLmLKaJPfsYxp42p2\",\"23KndF374EHHZNbL8\",\"Q9afpRu3u8zuWuzLQ\",\"CTKmXtrqDYqJBnuy8\",\"pduNK68oazqQTtbLp\",\"Lm6ChQCWBmaikmk5J\",\"hRiMXDZNAzyPd5tpt\",\"JYvJJKjerbQYjNG9b\",\"k2Eo3wyfZZ6KxvKhN\",\"pn7FezrkZZCui7fkJ\",\"p8qqFdJ3FSk5x9z3G\",\"DYDJTyGgKFnBRLm2r\",\"Kh3Pc2ZRusurLaMyP\",\"6HgMANhu6WiGyXSGN\",\"tpxMgkGSHwBjS95Ta\",\"mG8HqKiAQFTdRZthG\",\"8WpvgSbQciTQWdd8T\",\"dik7wis3hBJJBkYwK\",\"gXTAie79kiw28tx5u\",\"rrSC943cCKNG48sH4\",\"d8qtzoLB264iP8tdY\",\"QRv96jmNaYsWkxQEG\",\"E5cu6oJFNFDXqae9q\",\"oXdhczMThyirgM2eN\",\"rxr3nwpDGDEkBJRgD\",\"pJj86xc32Bs7Frxvi\",\"wRttWTM59y8m5mx7x\",\"dBzwBtRjZqB98DJeB\",\"yod5YhKtPqw2GfG9B\",\"RGMbFMZXJr7DhcAJy\",\"o4ixjQGSaYqA2JoM4\",\"J3upzLHuEwXH7Z2hx\",\"cAP3n5NY64uoMwzRR\",\"axdSNLZpiCDF8RS6n\",\"Fb2wehA7QgTFWry2x\",\"oyKcm3zqdy8Ko5P5d\",\"9FCeFzjPA4jrQ7oHW\",\"uX3EL4Qha99wBkozM\",\"dky93oMkJsJjEJKk2\",\"ga7aTTEThzsELuC2j\",\"GcR9CA587pfQuWHyB\",\"dYPkStFnLvAMsHSzZ\",\"4fjSgcqhQQZM2ZFRP\",\"g9FyJ8yeT9ic97Qp2\",\"YRAzEBJoLvSaiPtYx\",\"rEecHXXCTwgG5wWNA\",\"mHvoroWGDLYbJqQJa\",\"HuNF3xTBzmatyGSTm\",\"utTuvGdmu2sBHWBhQ\",\"5XiuAqicKD4hBdu63\",\"wjc4iejpErBhxWwHo\",\"nJXgbSQozcoE8Wn4N\",\"FuYTQcDNjct58rqPa\",\"oriWwkSDoejDH9ru5\",\"C2AfMipCicfD58WJ9\",\"cZccqzRQ9GgjQF6Az\",\"WdKdsgH9gXkKgCycx\",\"BrTDhPJcACL2bsrpJ\",\"DpnYcMphntjsQ96qg\",\"hERDiXzMt3bagzfKp\",\"Nw5Co4WxYtGovKnmA\",\"DqNQn9Jsxcu5HijKE\",\"dNErCjyFobE5sn4Zh\",\"buX4mCQhtXCfBjeno\",\"Lg4t6SEWgtYz4u7Cj\",\"AXcnPX68zdMiLNSmu\",\"Ds7L5bksw2QRHjrKL\",\"FSe2mfd98g84k5DW6\",\"qAby4AWXmTNeusvg3\",\"JS3hNM3XXkxPdg3yk\",\"fTNQmMvTZhhiGBCMe\",\"MXGuntvz3byrP6WJc\",\"oDN67zoApxcztnYdu\",\"5S9nX4rKsnCcnv4Cz\",\"5HTSi5wQNAdLm57LB\",\"5hQnRWiKkhgKJXNMP\",\"eYfPWvZwnJQkHbSTK\",\"GqnEdzvEGRkgBxqHB\",\"YaybbCdfjFQmsfgtp\",\"97mMkvdDxbhkQXNPp\",\"2HfNkb2SoqdyjKW3o\",\"srJ34BaybkQh3qRkM\",\"B8n7KqbvEDjZzgj2D\",\"LCuvvWMwiGuqTwNRi\",\"pCMhfoZ5c6eBuCqbp\",\"KJCDwGkoXh8qtbbKr\",\"q9FfWNiMDKRiaCJ5j\",\"PWgzeK859suojbrRx\",\"TmM3AN7g3fkh69ycj\",\"pPpmP7xeJzGgK362R\",\"qQQ4hCQpzitmHSkjS\",\"GdKtjPh8TcfmJuduv\",\"EfxwqhYdapX3dMQC2\",\"XD5nmvKQchKezPXhy\",\"AFfw7cGg83uYk2Miy\",\"7dQYiDeTcMztbGyso\",\"ghMkPtdFCpM6w8nax\",\"iYXdNw7tKcgA3QwBX\",\"BJp2WkwLWGHHB5oQW\",\"T6iBEE2jp7f7iEF2P\",\"NrRa4TS6uZR9xuXRt\",\"PC3pLs36zNzpRDSuE\",\"c2q7mY39z5JPEMCaM\",\"66a9xX73nmTEuKs9k\",\"8uiLiJcmWxWe6qw65\",\"CKHKhvJcq9jNMqrmd\",\"CHvzhtXnv8HTbPQ56\",\"CyzskHGsC6WSmYrLu\",\"X4rzfxGgxx6CS7Bpz\",\"w3QDkmjZj2dAFDsjq\",\"AJexRBN9cYQmqvYu6\",\"mvJBakQ35CWAnbbEZ\",\"sKBGcRfEr6LrvG8A2\",\"BMEud9eeJnPDC8A2k\",\"4TmgHkn5vqyHK3sYC\",\"vCeeMuYDbz3MB4vsk\",\"T6Rm8mREPMZSftzrC\",\"jkbavR2ATFJcpmo8M\",\"eHcgvkTGsH7ZziqBo\",\"JiSpvq6C7azQEmENc\",\"qzXAMXsHZGT8o5hTA\",\"K6MfKMytoJJuSGewP\",\"Dq24MSpogRmq6L4hX\",\"g2mqHYvQmr78mET8i\",\"kjvgTyRFyKHv44DcH\",\"eW9R2SCoYnY8HBAdL\",\"FxbTzThBiTnRzfirA\",\"NGvCPuMiAP3xrRLfB\",\"Afnps7TJQuS9sipMb\",\"2MjzJ7yxh3eT3xbng\",\"noZDgMMXkcPCLN8Ye\",\"iP7wNofhZXTkJ9ryG\",\"gKnWjDjwrJh7MK2df\",\"HBuJYgW2eRBJp9FoG\",\"YmQb9Mo4Xcg2vzgbn\",\"TCvpT4EPb8qNssNB7\",\"2E6jQWFmYiGsd3TrC\",\"CLypXaZksY99mpRCm\",\"4bb7pim4ewTwrMTEA\",\"8PwfYqoDQFThzNtvf\",\"zC8WrPp5BC6c2exrW\",\"pwWtbXEjzuvrhEGwt\",\"JwkwCHcXthnGDsdFr\",\"d9LBRxvADNBB5QJMB\",\"rCrbqMiaGPgHYTNxu\",\"no46qNkTbNeHepe64\",\"9LrF5o2TK2iE8BZJh\",\"PTDFuxAzou7W6asWt\",\"tqgu4YSKGTcDTkv9t\",\"uK58g2EXxqxTaB2iA\",\"dzS6WBTMHyFEag6Fp\",\"4Lwjr34ypKNQNQCar\",\"B4y8aoyXJtskYPFEL\",\"FMyZPN6odEFtfuimF\",\"gbGzZz5Yq5hT357v8\",\"Qyfyyw6oC4EHAndzo\",\"M2gFMJkocQSY6bsFR\",\"5QN8R22z43SrwoHDz\",\"mw9464S5dnenqzvpm\",\"jWbd7SYDzLPjc9EDh\",\"Hu4SkoNyWCP4vmsZE\",\"oTyB44iXLcB9FsnEp\",\"EmG8uSoa5JfnsGA7T\",\"vAbK8sCfKyFC78HYg\",\"RfbjShbg8jmhyNtJh\",\"GktgG4zuF225EApih\",\"cdXmwjupCXSvJTSNo\",\"7tbtTx6uxePv6eQwP\",\"GgQqni8TkbqEBGcsy\",\"5nbHH4eApn6So9h2n\",\"Wi4H6ayKsNDWWQCG5\",\"sMcFMPkMJC4Kh6ymj\",\"mdRQaGT98ycMt87S2\",\"wrL4iX2CCSqDCCty3\",\"Cg3LKtEAJpsrdWroG\",\"rraTtctZqnjXu2L2x\",\"tR9grPBLncwacBTzr\"],\"total\":484,\"quality\":[5,4,5,5,4,3,5,4,3,4,5,5,5,5,5,3,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,5,5,4,5,3,2,5,5,5,5,5,5,5,5]},\"flags\":0},\"summary\":\"Create a function that takes a string and returns the first character of every word if the length is even and the middle character if the length is odd.\\n\\nExamples\\nstmid(\\\"Alexa have to paid\\\") ➞ \\\"ehtp\\\"\\n\\nstmid(\\\"Th3 0n3 4nd 0n1y\\\") ➞ \\\"hnn0\\\"\\n\\nstmid(\\\"who is the winner\\\") ➞ \\\"hihw\\\"\\n\\nNotes\\nN/A\",\"tags\":[\"strings\",\"math\"],\"timestamp\":{\"$date\":1577722190055},\"title\":\"First N Mid\",\"quality\":4.6415094339622645,\"family\":[{\"_id\":\"CcPuaktyGhMw2ki98\",\"language\":\"javascript\"},{\"_id\":\"fYMjhe7BnijXwfNpF\",\"language\":\"python3\"},{\"_id\":\"kKEaW2JC5LQrc5vFz\",\"language\":\"ruby\"}]}}"]