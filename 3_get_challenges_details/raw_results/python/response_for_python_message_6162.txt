a["{\"msg\":\"result\",\"id\":\"1791\",\"result\":{\"_id\":\"CEyp3FZD5zsaqSwoy\",\"author\":\"BijogFc24\",\"authorId\":\"Nb6LYPoQP6KJZt8mz\",\"code\":\"class Node:\\n    def __init__(self, data):\\n        self.data = data\\n        self.left = None\\n        self.right = None\\n\\n\\nclass BST:\\n    def __init__(self):\\n        self.head = None\\n\\n    def insert(self, data):\\n        new_node = Node(data)\\n        if self.head == None:\\n            self.head = new_node\\n        else:\\n            current = self.head\\n            while True:\\n                if data > current.data and current.right:\\n                    current = current.right\\n                elif data < current.data and current.left:\\n                    current = current.left\\n                elif data > current.data:\\n                    current.right = new_node\\n                    break\\n                else:\\n                    current.left = new_node\\n                    break\\n        return self.head\\n    \\n\\t\\t#Start\\n    def minimum(self):\\n        \\n\\n    def maximum(self):\\n\\t\\t#End\\n       \",\"difficulty\":2.3448275862068964,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"WH65Yof7fvcYFtrhs\",\"instructions\":\"Given a **Binary Search Tree** (BST) implementation, complete the minimum, and maximum  function which is present in the BST class. Here you have to  find the max value, min value of the **whole tree**.\\n\\n### Examples\\n```\\ndata = [10, 4 , 20 , 1 , 5]\\n\\nmaximum()  ➞ 20\\n      10\\n      /   \\\\\\n    4    20\\n  /  \\\\\\n1    5\\n\\ndata = [100, 70, 200, 34, 80, 300]\\n\\nminimum() ➞ 34\\n\\n       100\\n       /    \\\\\\n    70    200\\n  /    \\\\          \\\\\\n34   80      300\\n```\\n\\n### Notes\\nMaximum and Minimum value of the whole tree.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"# Special Thanks to Shreeansh for test cases and data.\\n\\nb = BST()\\nb.insert(100)\\nb.insert(200)\\nb.insert(70)\\nb.insert(34)\\nb.insert(80)\\nb.insert(85)\\nb.insert(85)\\nb.insert(111)\\nTest.assert_equals(b.minimum(), 34)\\nTest.assert_equals(b.maximum(), 200)\\n\\nb1 = BST()\\nb1.insert(1)\\nTest.assert_equals(b1.maximum(), 1)\\nTest.assert_equals(b1.minimum(), 1)\\n\\nb2 = BST()\\nb2.insert(100)\\nb2.insert(25)\\nb2.insert(22)\\nb2.insert(75)\\nb2.insert(122)\\nb2.insert(111)\\nb2.insert(112)\\nb2.insert(55)\\nTest.assert_equals(b2.maximum(), 122)\\nTest.assert_equals(b2.minimum(), 22)\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,3,3,2,1,3,2,3,3,3,0,2,3,3,3,3,3,2,3,0,3,3,3,3,1],\"rators\":[\"xn7uGNKeAwPEkP9oA\",\"8PwfYqoDQFThzNtvf\",\"aEm3Wvj2rFYRL8Lrb\",\"yjtdwc2AC4jA2RWtn\",\"gJYuGdkXEWWmGRLzu\",\"bNZN65S3GkReo8qNT\",\"Yp7uvStL97cC9fKkY\",\"mDWNyaaQ9hvPCRzSd\",\"gXTAie79kiw28tx5u\",\"T2vhHPhRR96hRizq8\",\"Jqk2uJZZxEv5wZFze\",\"iojEnnY9FsMfYzp6f\",\"oBcs8GLX2ZFLXQy8y\",\"QRv96jmNaYsWkxQEG\",\"dZzdZbg3QCAbqXuEw\",\"iS5BrkGLzJyPK7nKt\",\"eHcgvkTGsH7ZziqBo\",\"AasGs8AeX9Lcb9xJn\",\"PH32cNxBjrK4a28sn\",\"s5M5RvgqR9BhB9JoC\",\"yod5YhKtPqw2GfG9B\",\"QfausYz6SXKdFB3tX\",\"2PufnQcsHsfymufX3\",\"8sNv5PTHa7XQ8bNqR\"],\"total\":27,\"quality\":[]},\"flags\":0},\"summary\":\"Given a Binary Search Tree (BST) implementation, complete the minimum, and maximum  function which is present in the BST class. Here you have to  find the max value, min value of the whole tree.\\n\\nExamples\\ndata = [10, 4 , 20 , 1 , 5]\\n\\nmaximum()  ➞ 20\\n      10\\n      /   \\\\\\n    4    20\\n  /  \\\\\\n1    5\\n\\ndata = [100, 70, 200, 34, 80, 300]\\n\\nminimum() ➞ 34\\n\\n       100\",\"tags\":[\"data_structures\",\"arrays\",\"language_fundamentals\"],\"timestamp\":{\"$date\":1598945583741},\"title\":\"Minimum and Maximum Value in BST\",\"quality\":0,\"family\":[{\"_id\":\"kr6rM8pvePADHG9Ez\",\"language\":\"javascript\"},{\"_id\":\"CEyp3FZD5zsaqSwoy\",\"language\":\"python3\"}]}}"]