a["{\"msg\":\"result\",\"id\":\"1937\",\"result\":{\"_id\":\"PirFJDfGk4vpsdkeE\",\"author\":\"yanni\",\"authorId\":\"aCNWav8S8Try9RkC6\",\"code\":\"def help_bobby(size):  \\n    array=[[[0]*size]*size]\\n    for i in array:print(i)\\n    row=0\\n    for column in range(size):\\n        array[column][row]=1\\n        array[size-column][row]=1\\n        row+=1\\n    for i in array:print(i)\\n    return array\",\"difficulty\":2.6666666666666665,\"editorId\":\"aCNWav8S8Try9RkC6\",\"familyId\":\"NzieTzkJgWefxsWM8\",\"instructions\":\"Bobby is troubleshooting a challenge he is attempting on Edabit. He needs to devise a function whose argument is the size of a **square array**. The function must return the array with the diagonals set to `1` and all the other members set to `0`.  His code is in the **Code** tab. Two of the lines contain bugs. Can you help him?\\n\\n### Examples\\n```\\nhelp_bobby(1) ➞ [[1]]\\n\\nhelp_bobby(3) ➞ [\\n  [1, 0, 1],\\n  [0, 1, 0],\\n  [1, 0, 1]\\n]\\n\\nhelp_bobby(4) ➞ [\\n  [1, 0, 0, 1],\\n  [0, 1, 1, 0],\\n  [0, 1, 1, 0],\\n  [1, 0, 0, 1]\\n]\\n```\\n\\n### Notes\\nN/A\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(help_bobby(1),[[1]])\\nTest.assert_equals(help_bobby(2),[[1, 1], [1, 1]])\\nTest.assert_equals(help_bobby(5),[[1, 0, 0, 0, 1], [0, 1, 0, 1, 0], [0, 0, 1, 0, 0], [0, 1, 0, 1, 0], [1, 0, 0, 0, 1]])\\nTest.assert_equals(help_bobby(8),[[1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1]])\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,4,4,2,1,3,5,4,3,4,1,2,4,4,3,2,3,5,3,2,1,4,4,3,4,3,0,3,2,3,4,2,3,2,3,3,3,4,2,2,3,4,2,2,2,0,2,4,4,1,1,4,1,4,3,1,3,3,3,5,3,3,4,0,0,1,3,2,3,2,4,3,4,0],\"rators\":[\"n2BRY9X8899dcG8Bw\",\"9pzFiFK3ANLjQfnr2\",\"AasGs8AeX9Lcb9xJn\",\"W5TajitmCyxz87zAC\",\"ZNnsMeNkdDhHjSrZb\",\"rcvAxbpK7Nb73Y9ve\",\"fznzd3qnvtbFkkizz\",\"tAF9Gf6PiGogbZuWs\",\"aCNWav8S8Try9RkC6\",\"aEm3Wvj2rFYRL8Lrb\",\"gb9rvGus2Jv7bjZSs\",\"Phd2FdPjo9BhBfvKh\",\"8PwfYqoDQFThzNtvf\",\"xsfJEceYqEivRfEzM\",\"R4SjTgDnpigJYDLyL\",\"YRstQuthRkFeBiXug\",\"mFqrAKcfZZM58iYmw\",\"s5M5RvgqR9BhB9JoC\",\"vTfyrr4pGddp8rbXc\",\"yv7c4H2jimSKHEjtG\",\"mmjoLhCivx5pjfbWw\",\"Wv2vJnEj8ywNmARoF\",\"YLtspA8ec6ntcoMMf\",\"zd9FLSzsGz3evKafy\",\"BwTJWMcmHwFf9TeRG\",\"Ecg4m7srYGgZsb4Ck\",\"Z4M3NAa4TXquMNkHe\",\"vwHs2chujYmpR7hKF\",\"DpqiRAm2yo3W2x4HX\",\"AGMQqooexrFXgMnET\",\"s6qiPXptvyxxEy3vm\",\"snEnPHNwdgtzqPneR\",\"RehJGBFS6CYiWdjZx\",\"xn7uGNKeAwPEkP9oA\",\"DCMKC7fnTWgyBj47Y\",\"Ge3xgZrEGB58ofBPT\",\"mDWNyaaQ9hvPCRzSd\",\"jL4y5fTJAMBjhZmko\",\"mshwdRrChqXHRL7db\",\"x4dfavjLEcrvAF3QQ\",\"HF28xZKSLM9wEuqNg\",\"gJYuGdkXEWWmGRLzu\",\"Z85ajWfZ4jDPkbvR4\",\"CLypXaZksY99mpRCm\",\"rcBdBt8oq5uwENDmj\",\"fBYjEbJ9Y93hbRugG\",\"gH2iDjx4WAKSLiugK\",\"WPf3wuMaAipBActzR\",\"8sNv5PTHa7XQ8bNqR\",\"qPpQfR5KyDb5Y3EFf\",\"p8qqFdJ3FSk5x9z3G\",\"BrTDhPJcACL2bsrpJ\",\"8KNtgAcNpyT2f6bTT\",\"MgPT8HripHLxFtiax\",\"eYfPWvZwnJQkHbSTK\",\"yTtSCvGPyYna6JuRC\",\"foytX6kH9wiSYqLtT\",\"EJDkbCoiX4rHHh5h4\",\"gXTAie79kiw28tx5u\",\"iojEnnY9FsMfYzp6f\",\"SGhPxX5bHGL8zZqtt\",\"ckhQRG67QQQLkMkkN\",\"J3upzLHuEwXH7Z2hx\",\"W5d8SJGpWNwvgCztM\",\"yjtdwc2AC4jA2RWtn\",\"2PufnQcsHsfymufX3\",\"gEWcFChNPpwqidYXy\",\"eHcgvkTGsH7ZziqBo\",\"DPi9QGLctq2y76KuE\",\"hEpaAYfTpAp7xunYa\",\"H9KZi2cjt4FwH7qog\",\"nCpZvwvGHtBHoiREJ\",\"8FDiWnaKCtbd2qDEK\",\"hySpcNb4eGY7eGe79\",\"gKnWjDjwrJh7MK2df\",\"2qtde7moqrzm7B4Ht\",\"rhS8qXRjZcpDXkwnE\",\"GTKsdeEihE636Le9i\",\"DZDiGNhY7xYPfbNjC\",\"s5Pbq68GNizdwD9Rr\",\"oBcs8GLX2ZFLXQy8y\",\"38h6CDqeBePDiejwB\",\"8BJyXvRWcrvN3nttS\",\"n2qKKxomPnb4zez5M\"],\"total\":91,\"quality\":[5,5,5,5,5,5,4,5,5,5,5]},\"flags\":0},\"summary\":\"Bobby is troubleshooting a challenge he is attempting on Edabit. He needs to devise a function whose argument is the size of a square array. The function must return the array with the diagonals set to 1 and all the other members set to 0.  His code is in the Code tab. Two of the lines contain bugs. Can you help him?\\n\\nExamples\\nhelp_bobby(1) ➞ [[1]]\\n\\nhelp_bobby\",\"tags\":[\"bugs\",\"arrays\"],\"timestamp\":{\"$date\":1591663269564},\"title\":\"Help Bobby Fix His Code\",\"quality\":4.909090909090909,\"family\":[{\"_id\":\"PirFJDfGk4vpsdkeE\",\"language\":\"python3\"}]}}"]