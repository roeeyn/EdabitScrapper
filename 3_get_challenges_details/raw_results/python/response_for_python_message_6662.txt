a["{\"msg\":\"result\",\"id\":\"2039\",\"result\":{\"_id\":\"5D3iXJSkSreRzNS8W\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"def news_at_ten(txt, n):\\n\\t\",\"difficulty\":2.7804878048780486,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"wuQcChHwHDFfzNCLQ\",\"instructions\":\"A local news station needs your help to generate the scrolling text for the headlines!\\n\\nCreate a function that returns a list of strings, where each string contains a single frame of what the scrolling text will look like.\\n\\n- Text will scroll from right to left.\\n- The screen will have a width of `n` characters.\\n- Start and stop when no letters appear on the screen.\\n\\nThe example below will demonstrate the output when the screen width is **10**.\\n\\n### Examples\\n```\\nnews_at_ten(\\\"edabit\\\", 10) ➞ [\\n  \\\"          \\\",\\n  \\\"         e\\\",\\n  \\\"        ed\\\",\\n  \\\"       eda\\\",\\n  \\\"      edab\\\",\\n  \\\"     edabi\\\",\\n  \\\"    edabit\\\",\\n  \\\"   edabit \\\",\\n  \\\"  edabit  \\\",\\n  \\\" edabit   \\\",\\n  \\\"edabit    \\\",\\n  \\\"dabit     \\\",\\n  \\\"abit      \\\",\\n  \\\"bit       \\\",\\n  \\\"it        \\\",\\n  \\\"t         \\\",\\n  \\\"          \\\"\\n]\\n```\\n\\n### Notes\\n- Every string should be `n` characters long, so you should pad the string with spaces if the text isn't long enough.\\n- Similarly, if the text is too long for the screen width, then it's only possible to display a fraction of the text at a time.\\n- See the **Tests** tab for more examples.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(news_at_ten('edabit', 10), [\\n'          ',\\n'         e',\\n'        ed',\\n'       eda',\\n'      edab',\\n'     edabi',\\n'    edabit',\\n'   edabit ',\\n'  edabit  ',\\n' edabit   ',\\n'edabit    ',\\n'dabit     ',\\n'abit      ',\\n'bit       ',\\n'it        ',\\n't         ',\\n'          '\\n])\\n\\nTest.assert_equals(news_at_ten('The latest news from News at Ten', 17),[\\n '                 ',\\n '                T',\\n '               Th',\\n '              The',\\n '             The ',\\n '            The l',\\n '           The la',\\n '          The lat',\\n '         The late',\\n '        The lates',\\n '       The latest',\\n '      The latest ',\\n '     The latest n',\\n '    The latest ne',\\n '   The latest new',\\n '  The latest news',\\n ' The latest news ',\\n 'The latest news f',\\n 'he latest news fr',\\n 'e latest news fro',\\n ' latest news from',\\n 'latest news from ',\\n 'atest news from N',\\n 'test news from Ne',\\n 'est news from New',\\n 'st news from News',\\n 't news from News ',\\n ' news from News a',\\n 'news from News at',\\n 'ews from News at ',\\n 'ws from News at T',\\n 's from News at Te',\\n ' from News at Ten',\\n 'from News at Ten ',\\n 'rom News at Ten  ',\\n 'om News at Ten   ',\\n 'm News at Ten    ',\\n ' News at Ten     ',\\n 'News at Ten      ',\\n 'ews at Ten       ',\\n 'ws at Ten        ',\\n 's at Ten         ',\\n ' at Ten          ',\\n 'at Ten           ',\\n 't Ten            ',\\n ' Ten             ',\\n 'Ten              ',\\n 'en               ',\\n 'n                ',\\n '                 ',\\n])\\n\\nTest.assert_equals(news_at_ten('Woman singlehandedly boosts seaside town economy with sea-shell business!', 7), [\\n'       ', \\n'      W', \\n'     Wo', \\n'    Wom', \\n'   Woma', \\n'  Woman', \\n' Woman ', \\n'Woman s', \\n'oman si', \\n'man sin', \\n'an sing', \\n'n singl', \\n' single', \\n'singleh', \\n'ingleha', \\n'nglehan', \\n'glehand', \\n'lehande', \\n'ehanded', \\n'handedl', \\n'andedly', \\n'ndedly ', \\n'dedly b', \\n'edly bo', \\n'dly boo', \\n'ly boos', \\n'y boost', \\n' boosts', \\n'boosts ', \\n'oosts s', \\n'osts se', \\n'sts sea', \\n'ts seas', \\n's seasi', \\n' seasid', \\n'seaside', \\n'easide ', \\n'aside t', \\n'side to', \\n'ide tow', \\n'de town', \\n'e town ',\\n' town e',\\n'town ec', \\n'own eco', \\n'wn econ', \\n'n econo', \\n' econom', \\n'economy', \\n'conomy ', \\n'onomy w', \\n'nomy wi', \\n'omy wit', \\n'my with', \\n'y with ',\\n' with s',\\n'with se', \\n'ith sea', \\n'th sea-', \\n'h sea-s', \\n' sea-sh', \\n'sea-she', \\n'ea-shel', \\n'a-shell', \\n'-shell ', \\n'shell b', \\n'hell bu', \\n'ell bus', \\n'll busi', \\n'l busin', \\n' busine', \\n'busines', \\n'usiness', \\n'siness!', \\n'iness! ', \\n'ness!  ',\\n'ess!   ',\\n'ss!    ',\\n's!     ',\\n'!      ',\\n'       '\\n])\\n\\nTest.assert_equals(news_at_ten('news', 30), [\\n'                              ', \\n'                             n', \\n'                            ne', \\n'                           new', \\n'                          news', \\n'                         news ', \\n'                        news  ', \\n'                       news   ', \\n'                      news    ', \\n'                     news     ', \\n'                    news      ', \\n'                   news       ', \\n'                  news        ', \\n'                 news         ', \\n'                news          ', \\n'               news           ', \\n'              news            ', \\n'             news             ', \\n'            news              ', \\n'           news               ', \\n'          news                ', \\n'         news                 ', \\n'        news                  ', \\n'       news                   ', \\n'      news                    ', \\n'     news                     ', \\n'    news                      ', \\n'   news                       ', \\n'  news                        ', \\n' news                         ', \\n'news                          ', \\n'ews                           ', \\n'ws                            ', \\n's                             ', \\n'                              '\\n])\\n\\nTest.assert_equals(news_at_ten('Hello World', 11), [\\n'           ',\\n'          H',\\n'         He',\\n'        Hel',\\n'       Hell', \\n'      Hello', \\n'     Hello ', \\n'    Hello W', \\n'   Hello Wo', \\n'  Hello Wor', \\n' Hello Worl', \\n'Hello World', \\n'ello World ', \\n'llo World  ', \\n'lo World   ', \\n'o World    ', \\n' World     ', \\n'World      ', \\n'orld       ', \\n'rld        ',\\n'ld         ',\\n'd          ',\\n'           '\\n])\",\"language\":\"python3\",\"quality\":4.909090909090909,\"stats\":{\"completed\":{\"ratings\":[3,3,3,3,3,2,3,3,4,3,3,5,4,4,5,4,2,3,1,5,3,3,1,3,1,4,4,1,3,3,3,2,2,2,1,2,4,3,2,1,0],\"quality\":[5,4,5,5,5,5,5,5,5,5,5],\"rators\":[\"PXAcsKkssS2yLyDv2\",\"s5M5RvgqR9BhB9JoC\",\"xn7uGNKeAwPEkP9oA\",\"8PwfYqoDQFThzNtvf\",\"tAF9Gf6PiGogbZuWs\",\"kWobGYgZWJxN6ZddF\",\"QRv96jmNaYsWkxQEG\",\"dFXpwPCtpThmcdpbP\",\"mDWNyaaQ9hvPCRzSd\",\"iS5BrkGLzJyPK7nKt\",\"58M252WF7SPRinfBx\",\"fSQSHjW3e72MrWxbD\",\"hkiz2Nv927cYGrA86\",\"b3Dk2LqoEgripS3Y3\",\"EQu6oPhZ9mRChfYSz\",\"8JyqsSbN2FJXPr3cw\",\"8nE8QHnFYsHCFebte\",\"8sNv5PTHa7XQ8bNqR\",\"J23RcmzbdtBbPCTjT\",\"hBKf7LeSP6i2saXjk\",\"CinftobevkY9TuKcR\",\"2PufnQcsHsfymufX3\",\"SbGLSZ5piLATC8bop\",\"TY5sBWLMTohBXujmZ\",\"gBYXLi3GD6GdEvsHk\",\"9ngLrw9NoHTS3ToSS\",\"BZ9aDwsT223J4ZG74\",\"yyo6YLQN2of6fxp49\",\"cjBLpm8m8Ajw3GsJo\",\"QHcNEadRcCStpv7dj\",\"QAfHb4u2Afp6pw5om\",\"3aQ9ecEFgJwGWv6re\",\"jL4y5fTJAMBjhZmko\",\"SGhPxX5bHGL8zZqtt\",\"iojEnnY9FsMfYzp6f\",\"GTKsdeEihE636Le9i\",\"J3upzLHuEwXH7Z2hx\",\"gJYuGdkXEWWmGRLzu\",\"yjtdwc2AC4jA2RWtn\",\"qZQxPQ2kaNKAMesHT\",\"yr822PZmmiDDenxpB\",\"AasGs8AeX9Lcb9xJn\",\"buX4mCQhtXCfBjeno\",\"DPi9QGLctq2y76KuE\",\"gXTAie79kiw28tx5u\",\"aEm3Wvj2rFYRL8Lrb\",\"n2qKKxomPnb4zez5M\"],\"total\":49},\"flags\":0},\"summary\":\"A local news station needs your help to generate the scrolling text for the headlines!\\n\\nCreate a function that returns a list of strings, where each string contains a single frame of what the scrolling text will look like.\\n\\nText will scroll from right to left.\\nThe screen will have a width of n characters.\\nStart and stop when no letters appear on the screen.\\n\\nT\",\"tags\":[\"strings\",\"loops\"],\"timestamp\":{\"$date\":1613574506916},\"title\":\"Breaking News!\",\"family\":[{\"_id\":\"7kEFK6pYMCE45nsdd\",\"language\":\"cpp\"},{\"_id\":\"kSbctAMeabjebYKie\",\"language\":\"csharp\"},{\"_id\":\"5D3iXJSkSreRzNS8W\",\"language\":\"python3\"},{\"_id\":\"uvBFELH3pu44ciXgL\",\"language\":\"ruby\"},{\"_id\":\"YGJBDxuqBjh8rYqyT\",\"language\":\"swift\"}]}}"]