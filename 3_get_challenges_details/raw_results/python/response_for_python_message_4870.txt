a["{\"msg\":\"result\",\"id\":\"1151\",\"result\":{\"_id\":\"GP6CEr9a5CMqPHY7C\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"def words_to_sentence(words):\\n\\t\",\"difficulty\":1.6065573770491803,\"familyId\":\"t6vC432FyuQwgFqGP\",\"instructions\":\"Create a function that turns a list of words into a comma separated list, where the last word is separated by the word \\\"and\\\".\\n\\n### Examples\\n```\\nwords_to_sentence([\\\"edabit\\\"]) ➞ \\\"edabit\\\"\\n\\nwords_to_sentence([\\\"Hello\\\", \\\"\\\", \\\"Bye\\\"]) ➞ \\\"Hello and Bye\\\"\\n\\nwords_to_sentence([\\\"Hello\\\", \\\"Bye\\\", \\\"See you soon\\\"]) ➞ \\\"Hello, Bye and See you soon\\\"\\n```\\n\\n### Notes\\n`None` values, empty lists or lists with only empty or `None` values should return an empty string: `\\\"\\\"`\",\"isHidden\":false,\"lab\":\"Test.assert_equals(words_to_sentence([\\\"one\\\", \\\"two\\\", \\\"three\\\", \\\"four\\\"]), \\\"one, two, three and four\\\")\\nTest.assert_equals(words_to_sentence([\\\"one\\\", \\\"two\\\", \\\"\\\", \\\"four\\\"]), \\\"one, two and four\\\")\\nTest.assert_equals(words_to_sentence([\\\"one\\\"]), \\\"one\\\")\\nTest.assert_equals(words_to_sentence([\\\"one\\\", \\\"\\\", \\\"three\\\"]), \\\"one and three\\\")\\nTest.assert_equals(words_to_sentence([\\\"one\\\", \\\"two\\\", \\\"\\\"]), \\\"one and two\\\")\\nTest.assert_equals(words_to_sentence([\\\"\\\"]), \\\"\\\", \\\"A list containing an empty string should return an empty string.\\\")\\nTest.assert_equals(words_to_sentence([]), \\\"\\\", \\\"An empty list should return an empty string.\\\")\\nTest.assert_equals(words_to_sentence(None), \\\"\\\", \\\"None should return an empty string.\\\")\",\"language\":\"python3\",\"summary\":\"Create a function that turns a list of words into a comma separated list, where the last word is separated by the word \\\"and\\\".\\n\\nExamples\\nwordstosentence([\\\"edabit\\\"]) ➞ \\\"edabit\\\"\\n\\nwordstosentence([\\\"Hello\\\", \\\"\\\", \\\"Bye\\\"]) ➞ \\\"Hello and Bye\\\"\\n\\nwordstosentence([\\\"Hello\\\", \\\"Bye\\\", \\\"See you soon\\\"]) ➞ \\\"Hello, Bye and See you soon\\\"\\n\\nNotes\\nNone values, empty lists or lists with o\",\"tags\":[\"arrays\",\"algorithms\",\"strings\",\"formatting\"],\"timestamp\":{\"$date\":1581456138228},\"title\":\"Words to Sentence\",\"stats\":{\"completed\":{\"total\":146,\"ratings\":[1,1,1,1,1,1,1,2,2,2,1,2,2,1,2,2,1,2,1,1,0,2,2,2,2,1,2,2,2,2,2,2,2,0,1,1,2,1,1,0,2,2,1,1,2,2,1,1,2,2,2,0,1,2,2,2,1,2,3,2,1,2,2,2,3,2,2,2,1,2,0,2,2,1,2,2,2,3,2,2,1,2,2,2,1,2,0,2,1,2,2,2,2,2,2,1,2,0,2,1,0,5,0,2,2,2,2,0,2,1,2,4,1,0,3,1,2,2,2,1,2,2],\"rators\":[\"gb9rvGus2Jv7bjZSs\",\"tAF9Gf6PiGogbZuWs\",\"C4QntmkYtB89GNtpd\",\"2fxapKr8XGdNeaKi2\",\"3ECpdeExhBmkYXtba\",\"u5u2YpHXiNgzDNJdX\",\"v3fjGuc7Pq4yjFygS\",\"hnyhBFWwNCz9mDfSi\",\"s5M5RvgqR9BhB9JoC\",\"5nY48krepaT4a4QTN\",\"j2wcHGHmPCHbaQEye\",\"Jqk2uJZZxEv5wZFze\",\"yabtHTtycsWhcGBfD\",\"4tgBydK887PitgAoi\",\"iuGjRxmgZ5yahyXtM\",\"AXcnPX68zdMiLNSmu\",\"cSaaAxqkYsPDXmMuf\",\"9Ly8afdtofp8DXzrt\",\"AasGs8AeX9Lcb9xJn\",\"4CFzv558qbGcpQwc4\",\"8JyqsSbN2FJXPr3cw\",\"XbxHXmh5ZmRN2gw3K\",\"BeFnbPbMnAM2SjBdZ\",\"pMg2Zddm29zRGP6wg\",\"Ycj4iTJGFyvC4bXek\",\"HQxp7NcdvF92G7bYS\",\"jeuoearPPTcGPgXhf\",\"myXAR5qDJsBaPnff2\",\"zg8GmMSP2LkHBtAzy\",\"LQhEi8yAC8WzEYY8h\",\"aRqQ42J5zqCmBNd8w\",\"LQxof8pGabGuWP7Gn\",\"mxX4rH5ELYkdZ2Mbw\",\"PSrcg6fy835R4c5CW\",\"dHZqT6h4JMwk5fPC8\",\"yKttxy9JGn5Jzwuj6\",\"yZvzB3qFb8pkHy4dg\",\"pHfkqrQCssxLpJi4y\",\"cR3ibTMxLyEdDFCHY\",\"ey3CASd6Je5LEJzfB\",\"vLrq4dEDMM2wd68Dc\",\"aEm3Wvj2rFYRL8Lrb\",\"8LfTheFzvicameoz9\",\"2innwjWqxJHo4eRGh\",\"jNvegJWCk5HCtEMbK\",\"Yp7uvStL97cC9fKkY\",\"v9KtC8YLbMWmXiW2H\",\"2QGRoQn2dRq3scu7k\",\"2iFe3EHEH2YdhSKrs\",\"8PwfYqoDQFThzNtvf\",\"Cc2Cgj4MWXZxsTooC\",\"ZNnsMeNkdDhHjSrZb\",\"HF28xZKSLM9wEuqNg\",\"gJYuGdkXEWWmGRLzu\",\"sbJcFfQjQ59Wfg4Cd\",\"q5a96XumccZyhQNyL\",\"kYWb8BwpKwunQkxeX\",\"DEDniTrstQYGounXT\",\"JZbBYihgT6m7bKvgc\",\"KdNDysEsy2TW5QRJ2\",\"9pzFiFK3ANLjQfnr2\",\"9bQyb6rW7xfE4vgrR\",\"nfXGHENb5md7m355s\",\"orFLgPDw9H5MDzmwo\",\"FzxTj4GuujhwpZM7y\",\"ahk2qiXKJA753wAJk\",\"a777e8chPvJkY3tKa\",\"qZQxPQ2kaNKAMesHT\",\"yr822PZmmiDDenxpB\",\"XrqNzJ2FRG8HnGiR6\",\"F2ykFxhDEEkj6N5KE\",\"Nua6T3dBurBy3Qfg9\",\"MKT7khMBGXzA22ykf\",\"ZrKCkX7xxGGZzauFW\",\"H4abACFDH5t8CnnyH\",\"syRNbbPdLCGXbH2Gy\",\"mDWNyaaQ9hvPCRzSd\",\"iojEnnY9FsMfYzp6f\",\"Pe8vWpDHRuH9nSGKW\",\"yjtdwc2AC4jA2RWtn\",\"9CoqdidjM9KbeKnHY\",\"HqmxnQJM66Y57twhn\",\"YcCLwitFMAEJSnxAW\",\"NNE5HNRXAkmhrWgyQ\",\"oBcs8GLX2ZFLXQy8y\",\"FEYpu9RWysAgW3XnP\",\"b5oEvBqHWLRnJgp22\",\"mG8HqKiAQFTdRZthG\",\"tpxMgkGSHwBjS95Ta\",\"iS5BrkGLzJyPK7nKt\",\"zZDaXBxMzTCBhNkgL\",\"gXTAie79kiw28tx5u\",\"DPi9QGLctq2y76KuE\",\"QRv96jmNaYsWkxQEG\",\"J3upzLHuEwXH7Z2hx\",\"dYPkStFnLvAMsHSzZ\",\"5XiuAqicKD4hBdu63\",\"KJCDwGkoXh8qtbbKr\",\"cAP3n5NY64uoMwzRR\",\"5hQnRWiKkhgKJXNMP\",\"RGMbFMZXJr7DhcAJy\",\"zd9FLSzsGz3evKafy\",\"dBzwBtRjZqB98DJeB\",\"d8qtzoLB264iP8tdY\",\"5HCu9Ydd86QgHDRNP\",\"YRAzEBJoLvSaiPtYx\",\"J5T8gZqiZXFuFDTQ7\",\"5S9nX4rKsnCcnv4Cz\",\"eYfPWvZwnJQkHbSTK\",\"GGdmhAvxXhqhhibJN\",\"srJ34BaybkQh3qRkM\",\"MXGuntvz3byrP6WJc\",\"Ds7L5bksw2QRHjrKL\",\"qAby4AWXmTNeusvg3\",\"aFYzioHvZPvPaunsg\",\"o4ixjQGSaYqA2JoM4\",\"Wpn95NqWxncQrwNgz\",\"AFfw7cGg83uYk2Miy\",\"T6iBEE2jp7f7iEF2P\",\"eMuCpJ2spXWkJjWNz\",\"CHvzhtXnv8HTbPQ56\",\"AJexRBN9cYQmqvYu6\",\"PC3pLs36zNzpRDSuE\",\"yod5YhKtPqw2GfG9B\",\"sHjfbGQGLHE6JR6qu\",\"8BFSTCnoe2QggN64c\",\"mvJBakQ35CWAnbbEZ\",\"jCjCvyhqhpebkJn34\",\"QvEXmSEo3ANp3yPyH\",\"BrTDhPJcACL2bsrpJ\",\"dzS6WBTMHyFEag6Fp\",\"d9LBRxvADNBB5QJMB\",\"2PufnQcsHsfymufX3\",\"buX4mCQhtXCfBjeno\",\"3nied3n8KG8RSNixH\",\"4TmgHkn5vqyHK3sYC\",\"Wi4H6ayKsNDWWQCG5\"],\"quality\":[4,4,2,5,3,5,5,5,4,4,5,5,5,5,5,5,5,5,5,4]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":1},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":4.5,\"family\":[{\"_id\":\"4Q2KNch5v8Y4Gwibm\",\"language\":\"cpp\"},{\"_id\":\"ddXhrbFi4ozxxgYdG\",\"language\":\"javascript\"},{\"_id\":\"GP6CEr9a5CMqPHY7C\",\"language\":\"python3\"},{\"_id\":\"LdfLDGZKGjpoAwAiq\",\"language\":\"ruby\"}]}}"]