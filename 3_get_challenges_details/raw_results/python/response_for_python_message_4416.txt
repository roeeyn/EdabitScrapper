a["{\"msg\":\"result\",\"id\":\"926\",\"result\":{\"_id\":\"cGaTqHsPfR5H6YBuj\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"def make_sandwich(i, f):\\n\\t\",\"difficulty\":1.4618644067796611,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"LSARDmb962RAjLbN9\",\"instructions\":\"Given a list of ingredients `i` and a flavour `f` as input, create a function that returns the list, but with the elements `bread` around the selected ingredient.\\n\\n### Examples\\n```\\nmake_sandwich([\\\"tuna\\\", \\\"ham\\\", \\\"tomato\\\"], \\\"ham\\\") ➞ [\\\"tuna\\\", \\\"bread\\\", \\\"ham\\\", \\\"bread\\\", \\\"tomato\\\"]\\n\\nmake_sandwich([\\\"cheese\\\", \\\"lettuce\\\"], \\\"cheese\\\") ➞ [\\\"bread\\\", \\\"cheese\\\", \\\"bread\\\", \\\"lettuce\\\"]\\n\\nmake_sandwich([\\\"ham\\\", \\\"ham\\\"], \\\"ham\\\") ➞ [\\\"bread\\\", \\\"ham\\\", \\\"bread\\\", \\\"bread\\\", \\\"ham\\\", \\\"bread\\\"]\\n```\\n\\n### Notes\\n- You will always get valid inputs.\\n- Make two separate sandwiches if two of the same elements are next to each other (see example #3).\",\"isHidden\":false,\"lab\":\"Test.assert_equals(make_sandwich([\\\"t\\\", \\\"h\\\", \\\"t\\\"], \\\"h\\\"),[\\\"t\\\", \\\"bread\\\", \\\"h\\\", \\\"bread\\\", \\\"t\\\"])\\nTest.assert_equals(make_sandwich([\\\"c\\\", \\\"l\\\"], \\\"c\\\"), [\\\"bread\\\", \\\"c\\\", \\\"bread\\\", \\\"l\\\"])\\nTest.assert_equals(make_sandwich([\\\"h\\\", \\\"h\\\"], \\\"h\\\"), [\\\"bread\\\", \\\"h\\\", \\\"bread\\\", \\\"bread\\\", \\\"h\\\", \\\"bread\\\"])\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,1,2,0,1,1,5,2,2,2,2,2,0,2,2,1,1,1,1,2,0,0,0,2,2,2,1,1,2,2,3,1,2,2,0,2,0,0,2,2,1,2,1,0,2,2,1,0,2,2,0,0,1,2,2,1,0,1,2,2,2,2,1,1,1,2,5,1,1,0,2,2,1,2,2,1,0,2,1,0,3,2,2,2,1,2,0,4,3,1,2,1,2,0,2,0,3,1,0,2,0,2,2,2,2,0,2,1,1,2,1,2,2,2,2,0,1,2,3,2,1,2,2,2,5,1,1,2,2,1,0,2,1,1,1,2,2,1,2,0,1,2,2,1,2,0,2,1,2,2,2,1,2,0,2,1,1,2,2,2,3,0,1,3,2,0,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,1,2,2,0,2,3,0,2,2,2,0,0,0,2,0,0,0,3,0,0,2,2,2,0,2,2,2,2,2,1,2,0,3,1,1,2,2,1,2,1,2,1,1,2,2,1,2,1,2,0,1],\"rators\":[\"tAF9Gf6PiGogbZuWs\",\"XbxHXmh5ZmRN2gw3K\",\"AbrJ8hMyv5fFXG6DN\",\"nfXGHENb5md7m355s\",\"Jqk2uJZZxEv5wZFze\",\"aSMZTEqtxS4PAe5cE\",\"3ECpdeExhBmkYXtba\",\"yabtHTtycsWhcGBfD\",\"2fxapKr8XGdNeaKi2\",\"3LiSLdtN58n46NEqg\",\"u5u2YpHXiNgzDNJdX\",\"HqmxnQJM66Y57twhn\",\"TePz42wc3ZZ5CKA6L\",\"gb9rvGus2Jv7bjZSs\",\"8JyqsSbN2FJXPr3cw\",\"mxX4rH5ELYkdZ2Mbw\",\"gMJhLdyw3tH7L96X2\",\"C4QntmkYtB89GNtpd\",\"4tgBydK887PitgAoi\",\"rEWQdNHK6YjuBqmrR\",\"s5M5RvgqR9BhB9JoC\",\"PhceyfmFntJcn5Fhf\",\"mkcykY2DpFXvA4i63\",\"cPbBwmgPeFYnpqSNK\",\"J5T8gZqiZXFuFDTQ7\",\"Xj6R2zqhgumffQCAN\",\"PSrcg6fy835R4c5CW\",\"xDmxvyN9CLxBvuowD\",\"BrW5A64EAFqCKXoaz\",\"K96FwtfDDN5WM4Bb7\",\"rJGeRSCjGzRuYfHZS\",\"wwz3ixWSv8rFDHBXd\",\"tAGf67NSsYh7ptKY9\",\"ixmh56Ty96Fe233pu\",\"xowjbn5yEv7c93axA\",\"ab7BsQuhDo3QgE6bh\",\"j2wcHGHmPCHbaQEye\",\"kQH5b8MXJunh84Czq\",\"4fctAnxyFRB8stPRQ\",\"Yp7uvStL97cC9fKkY\",\"h4drd4JwgfEgJ5o87\",\"Ycj4iTJGFyvC4bXek\",\"twsQf56WjJRxLi9EC\",\"M44nifmWzt3wtYyJx\",\"4CFzv558qbGcpQwc4\",\"ey3CASd6Je5LEJzfB\",\"yKttxy9JGn5Jzwuj6\",\"svZJaYSRLJkQjRwDq\",\"nc7bRhkxgKyqusYe3\",\"a378SnQTFj97SebPJ\",\"jeuoearPPTcGPgXhf\",\"N7GPFEhCaiQ79MKjz\",\"hnyhBFWwNCz9mDfSi\",\"cRpaCxYRmGcN3Nsoj\",\"AasGs8AeX9Lcb9xJn\",\"WcqujsAnCdQ9uRbeZ\",\"Xiu2665bWTaW3Fyhv\",\"5nY48krepaT4a4QTN\",\"q9uxW7BAoY75irxBy\",\"GM2X83qnuLXTHe5zA\",\"N7b2y49qSY4STXDgj\",\"iMHrN3Wiefh9Ame38\",\"ASZk6eFeYMj5pitoe\",\"aRqQ42J5zqCmBNd8w\",\"S9JdLfPzgo2AhS48a\",\"H9KZi2cjt4FwH7qog\",\"wMdYEpWhq7ftaA8Sg\",\"v3fjGuc7Pq4yjFygS\",\"iuGjRxmgZ5yahyXtM\",\"LQxof8pGabGuWP7Gn\",\"LA2YneDcbtiSj5SH6\",\"cSaaAxqkYsPDXmMuf\",\"XKi8iZXBCHCaebSHh\",\"wZoxzQDbso9SMAPkY\",\"9Ly8afdtofp8DXzrt\",\"X29Ekg7HjqHAYgCSM\",\"mybpojPXaZigaqsAD\",\"8fhbZ2xkaSQB4Cb2L\",\"dHZqT6h4JMwk5fPC8\",\"SPQDPHGT83KCqgb6K\",\"pfgcN6p9AtBZE7DEL\",\"yZvzB3qFb8pkHy4dg\",\"sJWTa7iWeRoRtqJ8N\",\"jNvegJWCk5HCtEMbK\",\"hQJZAKtGhbvtiHRn8\",\"6abffx8jQDCf7kgvb\",\"kD7WEhzKe38iRqRKr\",\"HPMiZMZ2WGu4FWaRH\",\"cR3ibTMxLyEdDFCHY\",\"C9LKGu2g5hSijvDzA\",\"aEm3Wvj2rFYRL8Lrb\",\"vLrq4dEDMM2wd68Dc\",\"2iFe3EHEH2YdhSKrs\",\"23oi2a3vQwhtLEbSj\",\"v9KtC8YLbMWmXiW2H\",\"aWhTZLDdjHCB3tBGc\",\"4AoQy4B5fPs2KBinr\",\"2QGRoQn2dRq3scu7k\",\"RFHHHZ4ET4vpWijRe\",\"HDksZLiRAmpnCKHta\",\"idwHijAKTzsBfWSXb\",\"8PwfYqoDQFThzNtvf\",\"CEd9tLdXeDeNHSzys\",\"ka3mNZM8TnYDyqMEn\",\"9uZpgAtSuPZ7W7DL6\",\"eLkj3Zb2DqiW4AEEh\",\"gJYuGdkXEWWmGRLzu\",\"ZNnsMeNkdDhHjSrZb\",\"So6PHm74mfJuY2WTs\",\"HF28xZKSLM9wEuqNg\",\"dXMbkgQFoN37BhruB\",\"3nied3n8KG8RSNixH\",\"KRSKj7ikX2ytWFmod\",\"Cc2Cgj4MWXZxsTooC\",\"M8dQuMrEpP8Hc3tHN\",\"KdNDysEsy2TW5QRJ2\",\"kYWb8BwpKwunQkxeX\",\"9pzFiFK3ANLjQfnr2\",\"DEDniTrstQYGounXT\",\"5cmvoGYHLNmT8n6jP\",\"LWCzZ8mb8gwrRNGfq\",\"SYQfSLYGZYcSwsnkZ\",\"ytotxvNtSzHumcQ9m\",\"2orPLhGCTtxq8DNNK\",\"orFLgPDw9H5MDzmwo\",\"MKT7khMBGXzA22ykf\",\"FzxTj4GuujhwpZM7y\",\"FEYpu9RWysAgW3XnP\",\"mfsaETo7uA4x5vqLD\",\"ahk2qiXKJA753wAJk\",\"DrkR35NqnP9NDLbq6\",\"zT9LpkiwYjLviYYW6\",\"yr822PZmmiDDenxpB\",\"XrqNzJ2FRG8HnGiR6\",\"s2ZMtR9deh6Kia7pb\",\"a777e8chPvJkY3tKa\",\"4rwxLqLs2mNZNg8NB\",\"jL4y5fTJAMBjhZmko\",\"dKKMvaYoJunNPk5Wa\",\"E8TMSMSamEbBtf9Lo\",\"hab8YixsXxe4CcZpP\",\"ekQh3jzgGLsEMbKo3\",\"2ptN2mhjFwFcHyPZd\",\"GgnTYyMXTPkZpG3B7\",\"eMuCpJ2spXWkJjWNz\",\"yazGPwkDdw9hAuf4h\",\"3cF6NXq3ZEwdkgSjb\",\"H4abACFDH5t8CnnyH\",\"ZrKCkX7xxGGZzauFW\",\"n2BRY9X8899dcG8Bw\",\"FxJxxwowtXYCaLaeD\",\"zd9FLSzsGz3evKafy\",\"W5TajitmCyxz87zAC\",\"Wv2vJnEj8ywNmARoF\",\"JS3hNM3XXkxPdg3yk\",\"6SKDJwXpev4qPSzgM\",\"8BFSTCnoe2QggN64c\",\"DoDsp3ets8frF9W3C\",\"iojEnnY9FsMfYzp6f\",\"b9YQPLb9ZPSADdHXX\",\"hRiMXDZNAzyPd5tpt\",\"X5MqeHyPh6cSQCXnk\",\"iS5BrkGLzJyPK7nKt\",\"R4SjTgDnpigJYDLyL\",\"yjtdwc2AC4jA2RWtn\",\"oBcs8GLX2ZFLXQy8y\",\"i2ZyBQDbgjH3xEBn8\",\"ta5CrWnBCRusD2WMo\",\"YA7SDhpgEtsqynvNL\",\"6gS4E2C84vBYTYeDZ\",\"RehJGBFS6CYiWdjZx\",\"KLmLKaJPfsYxp42p2\",\"TPhfpB5tzQWSSn67n\",\"FvFhg2wELM3SCZDZQ\",\"tpxMgkGSHwBjS95Ta\",\"Kh3Pc2ZRusurLaMyP\",\"mG8HqKiAQFTdRZthG\",\"9CoqdidjM9KbeKnHY\",\"gXTAie79kiw28tx5u\",\"EMJ6uvBZkie429gdg\",\"qD2LrwaDrSdiybLKY\",\"7K2GEb5TZRtSpyyGS\",\"b5zo7s6xrqWgQnPao\",\"6HgMANhu6WiGyXSGN\",\"Nua6T3dBurBy3Qfg9\",\"kNrnnMxhFZztMTBAX\",\"DPi9QGLctq2y76KuE\",\"5HCu9Ydd86QgHDRNP\",\"8WpvgSbQciTQWdd8T\",\"wRttWTM59y8m5mx7x\",\"dj5AyG5fWP8FdsSmZ\",\"J3upzLHuEwXH7Z2hx\",\"dYPkStFnLvAMsHSzZ\",\"cAP3n5NY64uoMwzRR\",\"KJCDwGkoXh8qtbbKr\",\"d8qtzoLB264iP8tdY\",\"RGMbFMZXJr7DhcAJy\",\"g9FyJ8yeT9ic97Qp2\",\"axdSNLZpiCDF8RS6n\",\"5XiuAqicKD4hBdu63\",\"PWtgkFwMyNrrvx9ZP\",\"sHjfbGQGLHE6JR6qu\",\"C2AfMipCicfD58WJ9\",\"4fjSgcqhQQZM2ZFRP\",\"7txFzDQ43vJ7qCY88\",\"HuNF3xTBzmatyGSTm\",\"buX4mCQhtXCfBjeno\",\"YRAzEBJoLvSaiPtYx\",\"NzbRqGWspQnWMoDrF\",\"5S9nX4rKsnCcnv4Cz\",\"eYfPWvZwnJQkHbSTK\",\"cZccqzRQ9GgjQF6Az\",\"Ds7L5bksw2QRHjrKL\",\"EfxwqhYdapX3dMQC2\",\"srJ34BaybkQh3qRkM\",\"yod5YhKtPqw2GfG9B\",\"T2vhHPhRR96hRizq8\",\"CHvzhtXnv8HTbPQ56\",\"q6QsMYNMpPNtmyTeW\",\"sbJcFfQjQ59Wfg4Cd\",\"wjc4iejpErBhxWwHo\",\"T6iBEE2jp7f7iEF2P\",\"qAby4AWXmTNeusvg3\",\"XD5nmvKQchKezPXhy\",\"66a9xX73nmTEuKs9k\",\"AFfw7cGg83uYk2Miy\",\"PC3pLs36zNzpRDSuE\",\"BrTDhPJcACL2bsrpJ\",\"mvJBakQ35CWAnbbEZ\",\"tdfY4iBvD7oh2ufnN\",\"c2q7mY39z5JPEMCaM\",\"AJexRBN9cYQmqvYu6\",\"Wpn95NqWxncQrwNgz\",\"2PufnQcsHsfymufX3\",\"K6MfKMytoJJuSGewP\",\"X4rzfxGgxx6CS7Bpz\",\"R6YxHWAiLgKwy5YvC\",\"rrSC943cCKNG48sH4\",\"BdnE4RS5puoxo92mA\",\"JhX7jvtpwNyxcc39m\",\"qzXAMXsHZGT8o5hTA\",\"pduNK68oazqQTtbLp\",\"2Qk2mFu9HBFzrB24i\",\"hR7GMiqGap4CzEWSy\",\"4Lwjr34ypKNQNQCar\",\"4TmgHkn5vqyHK3sYC\",\"T6Rm8mREPMZSftzrC\",\"d9LBRxvADNBB5QJMB\",\"dzS6WBTMHyFEag6Fp\",\"yAouD3PxzED8a4gap\",\"uGuS9YRXW2nj4p6zf\",\"qB6KSTYC6H2TQEQY6\",\"hpT9yYe5R45poHrYR\",\"Qyfyyw6oC4EHAndzo\",\"rCrbqMiaGPgHYTNxu\",\"5QN8R22z43SrwoHDz\",\"Wi4H6ayKsNDWWQCG5\",\"AQSqD9oNv2uPfxZCR\",\"ruzwBPphPDRgLXdnP\",\"vAbK8sCfKyFC78HYg\"],\"total\":284,\"quality\":[1,5,5,4,4,5,4,5,5,5,5,5,5,5,5,5,5,4,5,4,5,5,5,5,5,5,5,5,5]},\"flags\":0},\"summary\":\"Given a list of ingredients i and a flavour i as input, create a function that returns the list, but with the elements bread around the selected ingredient.\\n\\nExamples\\nmake_sandwich([\\\"tuna\\\", \\\"ham\\\", \\\"tomato\\\"], \\\"ham\\\") ➞ [\\\"tuna\\\", \\\"bread\\\", \\\"ham\\\", \\\"bread\\\", \\\"tomato\\\"]\\n\\nmake_sandwich([\\\"cheese\\\", \\\"lettuce\\\"], \\\"cheese\\\") ➞ [\\\"bread\\\", \\\"cheese\\\", \\\"bread\\\", \\\"lettuce\\\"]\\n\\nmake_sandw\",\"tags\":[\"arrays\",\"loops\"],\"timestamp\":{\"$date\":1577809077803},\"title\":\"Making a Sandwich\",\"quality\":4.689655172413793,\"family\":[{\"_id\":\"FGEgrhPZpTWdGjKCL\",\"language\":\"cpp\"},{\"_id\":\"msejbMPH3k9QzWasE\",\"language\":\"javascript\"},{\"_id\":\"cGaTqHsPfR5H6YBuj\",\"language\":\"python3\"},{\"_id\":\"3zcLkx73NtA4hewAk\",\"language\":\"ruby\"}]}}"]