a["{\"msg\":\"result\",\"id\":\"740\",\"result\":{\"_id\":\"TQrHYN9CNQD9miZwj\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"def fix_import(s):\\n\\t\",\"difficulty\":1.3235294117647058,\"quality\":4.462837837837838,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"2f7TfX2p6xX54THFP\",\"instructions\":\"When importing objects from a module in Python, the syntax usually is as follows:\\n\\n```\\nfrom module_name import object\\n```\\n\\nGiven a string of an incorrect import statement, return the fixed string. All import statements will be the wrong way round.\\n\\n### Examples\\n```\\nfix_import(\\\"import object from module_name\\\") ➞ \\\"from module_name import object\\\"\\n\\nfix_import(\\\"import randint from random\\\") ➞ \\\"from random import randint\\\"\\n\\nfix_import(\\\"import pi from math\\\") ➞ \\\"from math import pi\\\"\\n```\\n\\n### Notes\\nAll **Tests** will be valid strings.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(fix_import(\\\"import object from module_name\\\"), \\\"from module_name import object\\\")\\nTest.assert_equals(fix_import(\\\"import randint from random\\\"), \\\"from random import randint\\\")\\nTest.assert_equals(fix_import(\\\"import pi from math\\\"), \\\"from math import pi\\\")\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,0,1,3,3,2,3,1,1,1,2,2,2,2,2,5,0,2,2,1,2,1,0,0,0,2,2,0,0,1,2,1,0,2,2,1,1,2,1,2,1,2,0,1,1,1,1,2,2,1,0,2,2,0,3,2,1,0,2,1,1,1,1,2,2,1,2,5,2,1,2,2,0,1,2,1,1,2,2,1,0,1,0,1,1,2,0,2,2,1,1,1,1,1,2,1,2,2,2,2,2,0,1,2,2,1,2,2,0,2,1,0,2,5,1,1,1,2,2,1,2,1,2,1,0,0,1,1,0,4,1,2,0,1,0,2,1,2,2,1,1,2,2,1,2,2,2,1,1,1,2,0,0,2,2,1,4,0,2,2,1,2,2,1,1,1,1,2,2,0,1,2,2,1,2,1,0,1,0,2,0,0,1,1,0,2,1,0,2,1,2,1,1,1,2,3,1,2,0,0,2,1,1,2,2,2,2,1,2,1,0,0,2,3,0,1,1,1,0,2,1,1,1,1],\"quality\":[5,4,5,5,5,5,3,4,4,5,4,3,4,5,4,5,5,3,5,5,4,5,3,5,4,4,5,3,5,5,5,4,5,5,5,4,4,5,4,5,4,5,4,5,5,1,1,5,4,5,5,5,5,5,5,2,5,4,4,4,5,4,4,5,5,5,5,2,5,4,5,5,3,5,3,5,5,5,3,1,4,4,5,5,5,2,5,4,4,5,4,5,5,4,5,5,4,5,5,4,5,5,4,4,5,5,4,5,4,4,3,3,4,5,4,4,5,5,1,5,4,4,4,4,5,4,4,3,5,3,5,3,5,5,5,3,5,4,5,4,5,1,5,5,5,5,5,4,5,4,5,5,3,2,4,5,4,5,5,4,5,5,3,5,5,4,3,5,5,5,5,5,4,5,5,5,5,4,5,5,4,5,5,4,5,1,3,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,3,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2,5,5,5,5,5,5,3,4,4,4,5,5,5,5,5,5,5,4,4,5,5,4,4,4,5,5,5,5,5,5,5,5,4,4,5,5,5,2,3,5,5,4,5,5,4,5,5,5,5,4,5,5,2,5,5,5,5,5,5,5,4],\"rators\":[\"y7ERyBRCifYjCioqj\",\"oriWwkSDoejDH9ru5\",\"mPctfMYEsFDhbTikW\",\"q5MkZdcKZoodyC2cs\",\"uX3EL4Qha99wBkozM\",\"SRg7hRhBhc4SwAr35\",\"dMeHQT6ApoC9PdfZL\",\"4Cay6yhrqdqT8u5mw\",\"aKzYNPqBqb3J3ZgyD\",\"F5mr5AkttWMNRCDH4\",\"JpEhW8HfrfzxWEPRQ\",\"k4zh85ZZaESAHvvzQ\",\"g4LXeaRvyBBQarfd6\",\"rQnoXzvF9SJAbNERB\",\"Kh3Pc2ZRusurLaMyP\",\"QRv96jmNaYsWkxQEG\",\"gJYuGdkXEWWmGRLzu\",\"DEDniTrstQYGounXT\",\"MKT7khMBGXzA22ykf\",\"qsq6qqDiGEtwtccoS\",\"JffEXehXKYy79q2vM\",\"ZiCQg9WKfrzPWLG6L\",\"dBzwBtRjZqB98DJeB\",\"Y3h94bNJFgwwnrsKx\",\"LvebkGptHRqaKrBv5\",\"wcQLERs5vMcAwJrEy\",\"4KvfTfy9P65h2iq3B\",\"DPi9QGLctq2y76KuE\",\"ppxNdL4gjANz8oJLQ\",\"Sy5XanBuQvdqGD4wJ\",\"WSLnCZNtpiCrdaXnd\",\"Le9W9jLhzSrHaZ4mh\",\"oPStsebvnGotMK3Mw\",\"HF28xZKSLM9wEuqNg\",\"7CTLeKZr4gDcGC7Bu\",\"rm5WaTAX657FE2Afr\",\"tDdqXfMYgqZ26Lwvg\",\"STuE2G3S2uoAAtPT6\",\"oq2BwynGEvQ5YSTLe\",\"ft75tMaHPBWfTwEo3\",\"PBn3fhAqsEqHEHq3E\",\"i5iePG5GqhJJ8HEoB\",\"yDnWTuwftJj5CAiLb\",\"rEte5r9JAp3CocJPG\",\"7h2Dyjw8BSY9qsYZF\",\"kNrnnMxhFZztMTBAX\",\"3LiSLdtN58n46NEqg\",\"oRdsdmmPpzfSK4tDq\",\"vCeeMuYDbz3MB4vsk\",\"BiXxBRkJYKTaECqba\",\"DexFSj8cWMBH9fN4c\",\"c2u7qfdaYxcyuydtu\",\"ieBTS4u6QEn7rJwnb\",\"C88RZqpbo2LgnjkyC\",\"rr8eSDoAKixZznsEZ\",\"zwruFCmuHkwJTpYqg\",\"s4YHxEDBTTq5EBMRs\",\"6HgMANhu6WiGyXSGN\",\"2vCfHGGtaoeC7SFv2\",\"mp98BmkNe97m5FABq\",\"4fjSgcqhQQZM2ZFRP\",\"o4ixjQGSaYqA2JoM4\",\"hLQ8JHm2Bn6PPohSe\",\"BFhzKBCnaaXYjhssy\",\"cTPbxApjRQ2d2megh\",\"bLGqk6rTP3a5pfG7o\",\"N2wnZXkhDH86mgjQ8\",\"iWostY27LfTAcek4j\",\"GD4QCzfkgwy6Zrixn\",\"dgymrNaAEsPGKXWFY\",\"ShdkKMbZm68GukC8M\",\"cZccqzRQ9GgjQF6Az\",\"fKsHKQ9ZTyEgmcQmQ\",\"3wYpMFogRWyoR6EeY\",\"KLmLKaJPfsYxp42p2\",\"3nied3n8KG8RSNixH\",\"dJ9Z7sXr76tK23o9r\",\"8PwfYqoDQFThzNtvf\",\"sGjebWa4vXM3GMCq3\",\"jQqahAQX57zz7PTMs\",\"5aTu2Kb8rDqAHgi9R\",\"uSfXZWGCZSvmJnQ6s\",\"Dq24MSpogRmq6L4hX\",\"mQ52hWdbHC3i6LX7s\",\"jL4y5fTJAMBjhZmko\",\"Q6QKJiTYnbvoYH6Jq\",\"8WpvgSbQciTQWdd8T\",\"GEc9k9Ycha9Gja8Hd\",\"tXcqs5WDEoK3Gie7m\",\"zfGYZ7gpR8fxJpagh\",\"JywgzpeYh3MeehChT\",\"2QGRoQn2dRq3scu7k\",\"r84ewSoXYjfq6Aavd\",\"GGprTwrkjuccmrQRg\",\"quEfQhA3xBwsCobcg\",\"fTNQmMvTZhhiGBCMe\",\"mHvoroWGDLYbJqQJa\",\"A7BZy6bCmem2aHZvG\",\"uN5t57RETi5y2z5W8\",\"gXTAie79kiw28tx5u\",\"ercJBw9hTcBaWKJ7u\",\"baYKwu8c5isRyHieY\",\"wZBcRBf7BJaLhaf9m\",\"tYHF7H253DqFBtpdA\",\"aX3qftuk2DJZHNwFE\",\"h6om9nJuPCoKJ9TwG\",\"Ew4kRJF7ezz8XAfBn\",\"5JGnoBpw84hhmmuhf\",\"7KNW7gsxDQHno4kyq\",\"HSXJY799ibxwhAMWX\",\"X4wWncu8bJMz7KDw2\",\"JmWyLwQ4FwwPLCjgB\",\"wNCZGAxE3dGsT3Mia\",\"vCZv7EFJLC4bkgB22\",\"QTk2KLGKv9LBxJGQm\",\"LjKJFjFcNiEH8WE9h\",\"kueR8Bi54BjjB4D5A\",\"JXyioBS8cEG9PoLSE\",\"rfyEkETeoS96QNH4e\",\"GcR9CA587pfQuWHyB\",\"f8B4wR5GXFfW2ydNt\",\"XY8hYyjreSgNAnTmm\",\"uhfjQ2PrL6hhHWZeL\",\"bTZpT2yLJd6MN3Krw\",\"KLDSh2H5745jcjv6f\",\"Ft8xWXb56iqfpzT62\",\"Czx7pvdNmsF263rKj\",\"4ArGCifHnsz8p525A\",\"d6v3NEx95dJnKz3ks\",\"oH5za8CuPrt4XyoKx\",\"9rhsisf8ofHavG5aT\",\"KW5KJ5srAhuuGfwdb\",\"Ybon3GrXuBvjnWfW8\",\"ZEhXRfidNXMTCyCg3\",\"r9LSB9yT9hkxysBoX\",\"Ns4b5QrbqxrtYfRdk\",\"fYKAHqcSbHi6QA27q\",\"s3XatW7NDw546mSaH\",\"GykYGfSqrqzvyz2jB\",\"PEZjvhf6N3hYTgSrq\",\"uGuS9YRXW2nj4p6zf\",\"eH8TLNGQHtfhimgFh\",\"3BQaRwNz6HAgn6ytL\",\"HhYCji7QqauyN3A7v\",\"9FCeFzjPA4jrQ7oHW\",\"BrTDhPJcACL2bsrpJ\",\"spqXrjG3ZFa2j5uTR\",\"pH7W9YNh7A48tpZgb\",\"8Gr2sTcAjEyq6Jjkk\",\"P2Bybn9qxsNNZnWkK\",\"DYDJTyGgKFnBRLm2r\",\"YcCLwitFMAEJSnxAW\",\"pJj86xc32Bs7Frxvi\",\"8vWWL8Tx2yDai4ydm\",\"pduNK68oazqQTtbLp\",\"yod5YhKtPqw2GfG9B\",\"J5T8gZqiZXFuFDTQ7\",\"rEecHXXCTwgG5wWNA\",\"d8qtzoLB264iP8tdY\",\"sHjfbGQGLHE6JR6qu\",\"2HfNkb2SoqdyjKW3o\",\"tW7TaC7bjNajLGH5Y\",\"8BFSTCnoe2QggN64c\",\"M8dQuMrEpP8Hc3tHN\",\"mDzReRELNxXWY6xTW\",\"Ssu6LMTQ2KKJZjtau\",\"LgfBqaCMZRCMmrZjy\",\"gg4hgFGgmvK9ZxENE\",\"dPgX5ZfPfuZjEbYWc\",\"4WM4CZ72LXyDfg75G\",\"9sXqapKuC5T6ygMaf\",\"xdy69fQcSNd8gYSJc\",\"jSaW4kdeAAGoLxcuP\",\"JYvJJKjerbQYjNG9b\",\"rrSC943cCKNG48sH4\",\"jKe9yzrPJdv9TWx5m\",\"mG8HqKiAQFTdRZthG\",\"diSwvuoxaDFFKxBqg\",\"JRowM3b2MJ74zHppX\",\"SPYSWseH56TkTzKGf\",\"vhLJwgSRY2J7aGD2i\",\"L2EFqn9KaB3pKDS6w\",\"CEd9tLdXeDeNHSzys\",\"2rc86eoe88DLhFeJD\",\"HAtNvtvpTjB2DkhnG\",\"MDC3MphC3uLPgmHtF\",\"cQxPRhYTE6eF7E9ax\",\"PTDFuxAzou7W6asWt\",\"NuqGt5u3s7vJ7HBGR\",\"2QziknsznNeMPRh3g\",\"9ivvGvJGvtQfigQaZ\",\"K6Pook755QkMsW4nm\",\"HfHX644FWoTbifSCX\",\"bw6p6TF48HByqhGpb\",\"AJexRBN9cYQmqvYu6\",\"DfMcEs6XsfGtTpQ26\",\"NzbRqGWspQnWMoDrF\",\"yqTM5Y9mzS9jNuiiz\",\"XbxHXmh5ZmRN2gw3K\",\"5RiKvt27mMvnBL3Yb\",\"drQy2fDHWMMBEEL9G\",\"iS5BrkGLzJyPK7nKt\",\"u3exaHuZqYBnDBZh2\",\"4fhjJBvLBWh6QeSih\",\"wJsDmEGmxukaC2idH\",\"yFDL8HndbQKRbFkPk\",\"Lx5nmLRZJDxLzwpvh\",\"5Z4o2pWDzmbpw4JHJ\",\"u7FAeNbKeLhGsJaS6\",\"ZqjP4M6dzu32To33K\",\"Lm6ChQCWBmaikmk5J\",\"v9gjnSj3JKmBJeut7\",\"kQH5b8MXJunh84Czq\",\"jNvegJWCk5HCtEMbK\",\"J23RcmzbdtBbPCTjT\",\"p8qqFdJ3FSk5x9z3G\",\"mDWNyaaQ9hvPCRzSd\",\"6MjSiiBLPcvXbXcaZ\",\"HMKp7iyeycYybEuGs\",\"dYPkStFnLvAMsHSzZ\",\"YA7SDhpgEtsqynvNL\",\"bccs9koJxyQ9XNiLC\",\"Cuy7McJ5y8BkXRRk9\",\"dky93oMkJsJjEJKk2\",\"AXcnPX68zdMiLNSmu\",\"5XiuAqicKD4hBdu63\",\"R4SjTgDnpigJYDLyL\",\"dQK2T76aHcRJkrbKB\",\"kAkLAF9T5McSxXJCT\",\"DpnYcMphntjsQ96qg\",\"7txFzDQ43vJ7qCY88\",\"eMuCpJ2spXWkJjWNz\",\"QJjb5YhFjNf4M4pmY\",\"C2AfMipCicfD58WJ9\",\"KwEFgSFGp37b2ZNzj\",\"YRAzEBJoLvSaiPtYx\",\"HuNF3xTBzmatyGSTm\",\"Jqk2uJZZxEv5wZFze\",\"utTuvGdmu2sBHWBhQ\",\"WdKdsgH9gXkKgCycx\",\"wjc4iejpErBhxWwHo\",\"axdSNLZpiCDF8RS6n\",\"ANbSYXiYsp4addoDq\",\"tnrvJwwZGpty5GBmP\",\"5zGMciq3fB4aeu9uj\",\"PRCy9gHjEN2KKgukx\",\"EfxwqhYdapX3dMQC2\",\"iF4tdvn5sA9CM4T6T\",\"nJXgbSQozcoE8Wn4N\",\"sftR9DgM4jpwtxfAM\",\"5wCHxMQ5Km2bjqcGZ\",\"bQtv6kM9pCyHHQsWf\",\"sA5PZJBBRc4YrB6M6\",\"TEWdTsJKsK8tREtTo\",\"xumt4h8jvh7o4xkhr\",\"5prBnBm3YszWAYPTp\",\"GGdmhAvxXhqhhibJN\",\"buX4mCQhtXCfBjeno\",\"uouMMdEWBuLBWPbzr\",\"PARDjDrwXvhpjRR9e\",\"tYnsBWeBWK6npiRLZ\",\"qNszsXx28cTxvGSNj\",\"eFh8z7sMmxkrFWZv9\",\"2PzbYjPdSB6kobzKo\",\"vZJKSLyiTJg2kpzCx\",\"hNtC6BTygkPYknybs\",\"no46qNkTbNeHepe64\",\"vkxXy4HA5zju68Pz5\",\"M2gFMJkocQSY6bsFR\",\"HnKYkpitPsdx6zwtN\",\"nBwLQQsy97KTiPWe2\",\"7fWotxAEJ2uYdQhNR\",\"zMAy89ZAeHKKtm6w9\",\"ffjnHrx8Ym7A7pQWe\",\"XcwuRdZLax4fgD6GG\",\"hERDiXzMt3bagzfKp\",\"9vP9Sg4nyzQT4ED9C\",\"Fk9kLwoG4Brf4KsKf\",\"5HTSi5wQNAdLm57LB\",\"9Q3hk6gYokuBMNmAW\",\"uTHfpJjGDdefX3zwT\",\"oWSpzbikwd8N3N2YA\",\"X99kvgKuDNZkwy2CZ\",\"sjfWvuvgttDs4dadZ\",\"om8W6mohJ9zMJ2iKq\",\"qTAgEgJSpFpMa6bH4\",\"abCKW9EmBinFsr7KG\",\"MXGuntvz3byrP6WJc\",\"GvYRcMACovZKmmcgF\",\"7TcRCKM5WY3PcMcvQ\",\"gf7u4MKcGDFiijzK9\",\"2ptN2mhjFwFcHyPZd\",\"6xTu4r8NMczBFvmtz\",\"7N6c3Xu244bnQWjBs\",\"p7js9trz2zk2RorCR\",\"dB6s7p6pFMEyagbn2\",\"b5ccAfkzKBfy28QXR\",\"qKeD74J6HCZ8ktY3y\",\"oig8ig9SE9RZa8ttL\",\"ZMJZNTJ2Ng8o8euQJ\",\"vXf7ssEAHmRsogPfr\",\"Mw3dpDSr8pEsM2nXE\",\"FuYTQcDNjct58rqPa\",\"rELhs3CWfh5u9a4ws\",\"5S9nX4rKsnCcnv4Cz\",\"LPGPHgJc8MkvcEDBc\",\"xGe3TN2zHtKp4fXYD\",\"euTB6YthAd9Mwfj2t\",\"HqmxnQJM66Y57twhn\",\"uy8FTEH4zT8CrQZZw\",\"ekQh3jzgGLsEMbKo3\",\"ir8ydgbhpdNp8BCZB\",\"33boaDzGiY28bCDy6\",\"FrtMQGTLgmaukDscR\",\"dqh4ZhyZ88eQvaH3T\",\"bG3udRHyEFXzWgKPs\",\"tyLS9T6YMfg9fMtYJ\",\"Y5dqK8G2u6tfqgjR5\",\"CTKmXtrqDYqJBnuy8\",\"AnjjyuE9aWLzK3nkg\",\"qEwpcQ9aNCCzQnPaW\",\"oDN67zoApxcztnYdu\",\"y3nnHnR5EyeungiM2\",\"umyoavda7c5hKPzTL\",\"5hQnRWiKkhgKJXNMP\",\"Nb6LYPoQP6KJZt8mz\",\"aaJWssCWfMa63XJng\",\"DqNQn9Jsxcu5HijKE\",\"vCxuabDxEv9YC3Szb\",\"B8n7KqbvEDjZzgj2D\",\"Ds7L5bksw2QRHjrKL\",\"srJ34BaybkQh3qRkM\",\"EcbdKPg99QbbYEim5\",\"mQjpf5TyF358J8Anz\",\"nFbmNzMQ38TncmfQX\",\"q9FfWNiMDKRiaCJ5j\",\"JLQLosczQ5MquJoL8\",\"2fxapKr8XGdNeaKi2\",\"MqpFpw9g28TdBzMKZ\",\"CJuRW2i33PgEL5HmZ\",\"YmMgWhzhHhQLmGGgH\",\"gSFJPsMXnqAog3Q9f\",\"Jzthnf66RxWAkMArt\",\"q2tzvkrLASvSjkek9\",\"zgoEhAyhrjnsSLPGw\",\"fBqQjriC4QEtFNxFe\",\"pPpmP7xeJzGgK362R\",\"7jL3ijPqP46GJ4cfJ\",\"q6QsMYNMpPNtmyTeW\",\"KBxTPknCRmB2b5y3i\",\"QAZ5DGaWWYhku4BNz\",\"PiRFsaY372Gbgs8qF\",\"jWbd7SYDzLPjc9EDh\",\"n2BRY9X8899dcG8Bw\",\"K6MfKMytoJJuSGewP\",\"XujK3rHd3JcM9TLJy\",\"abFmcWoyQWCHfhSS8\",\"BdnE4RS5puoxo92mA\",\"xsDyJstYoBZRS8pJH\",\"sbJcFfQjQ59Wfg4Cd\",\"5ZdwWkDPKkFNBnpYW\",\"bvmTE46bfcM4ogj34\",\"Lkcku4D8wh449piQh\",\"mPrWM9FxwdMPBDX7J\",\"sKfrD9gjCDHuqLzSk\",\"PtAfvWkRynJaJWAes\",\"XD5nmvKQchKezPXhy\",\"qAby4AWXmTNeusvg3\",\"3cF6NXq3ZEwdkgSjb\",\"MJMWfiW978otApbcG\",\"GTKsdeEihE636Le9i\",\"rLMeCAzEE9Grp3yce\",\"oQZ42kN5i86WWqgq2\",\"Jjhk8iQ4WCMKxuEZ2\",\"hfCxudCBHjFSFrkPv\",\"AFfw7cGg83uYk2Miy\",\"6daecm7mtqzp7mKso\",\"AQSqD9oNv2uPfxZCR\",\"kjq3gYp4TDMCQZJsH\",\"23oi2a3vQwhtLEbSj\",\"KJCDwGkoXh8qtbbKr\",\"Hhvy3EGqWBXt3nFPA\",\"4AoQy4B5fPs2KBinr\",\"iojEnnY9FsMfYzp6f\",\"BJp2WkwLWGHHB5oQW\",\"CKHKhvJcq9jNMqrmd\",\"yyo6YLQN2of6fxp49\",\"dJzNF59j2p8jWZxiQ\",\"WQubx7DAkG6WZE8FA\",\"RoGGD5cpHb4ftdLDv\",\"22ApZ4qLm5tsj8PRb\",\"ScCZHcDBzx6LrFCyZ\",\"4iocshxRuzitdpEJz\",\"9pzFiFK3ANLjQfnr2\",\"66a9xX73nmTEuKs9k\",\"DfHHpvnubuFmeNky9\",\"Wpn95NqWxncQrwNgz\",\"2PufnQcsHsfymufX3\",\"JhX7jvtpwNyxcc39m\",\"u5u2YpHXiNgzDNJdX\",\"PC3pLs36zNzpRDSuE\",\"4Lwjr34ypKNQNQCar\",\"Cc2Cgj4MWXZxsTooC\",\"c2q7mY39z5JPEMCaM\",\"GJmKcqu7xppQyBaTt\",\"ghMkPtdFCpM6w8nax\",\"X4rzfxGgxx6CS7Bpz\",\"fbr22rabEJMfBp7vD\",\"u4KH6LGQ95qQMHBut\",\"fEKYxcHjk7rvpjSRJ\",\"Si6jT3DnRMXYd27k9\",\"ADycYubh8WTMCXhgR\",\"w3QDkmjZj2dAFDsjq\",\"yr822PZmmiDDenxpB\",\"QFZcdxGKBaFZb7Zbk\",\"mvJBakQ35CWAnbbEZ\",\"rgvAJFwfCeYoYnFTK\",\"2ZpFLyNCqKBSC3mkM\",\"9Ly8afdtofp8DXzrt\",\"jkys684AAfPRxrYaD\",\"YXQvrgeiGzLd6cTW9\",\"AasGs8AeX9Lcb9xJn\",\"ZXWDtCrM9ev3439oi\",\"R6YxHWAiLgKwy5YvC\",\"CHvzhtXnv8HTbPQ56\",\"wwMcJQRvf3X59Jyev\",\"JKb5rhL6DKcCAypF9\",\"StNu7DPyTgEStZsMY\",\"nc7bRhkxgKyqusYe3\",\"4RY3zj9C2t8GGefhi\",\"qzXAMXsHZGT8o5hTA\",\"93ADqsBQnwTEosjbq\",\"etoxSpG4fGKThLozM\",\"fKzJMR2LLbiRtGetj\",\"hEpaAYfTpAp7xunYa\",\"hR7GMiqGap4CzEWSy\",\"4TmgHkn5vqyHK3sYC\",\"a2Kmh6ekWqQQooHiQ\",\"ckMvGF5TAyCwcxJBm\",\"T6Rm8mREPMZSftzrC\",\"jPodEnpx7AwWpCpCa\",\"pQwhNKiCne4gEZgcn\",\"NGvCPuMiAP3xrRLfB\",\"iBHx7eL6anoBnF7yQ\",\"2iFe3EHEH2YdhSKrs\",\"9gJsF5apWJGWZJprn\",\"jkbavR2ATFJcpmo8M\",\"7ajSwbNMNp9ggPewT\",\"i5Nn7L8wRjX4fAZNN\",\"Afnps7TJQuS9sipMb\",\"JiSpvq6C7azQEmENc\",\"tm3R3qmjwwqy2Kj6T\",\"4WYjScmBWK9eXRzvd\",\"M4vq8ATaS9Jg5X7iP\",\"WXJvukif774ts7Jqs\",\"hgEPnitaC2QZPJT6t\",\"QWjsXnLaJ7xfL3Amq\",\"9bQyb6rW7xfE4vgrR\",\"dSd7wHgXGQeG5BQ2P\",\"bQR48QRLctu7MbA6K\",\"uK58g2EXxqxTaB2iA\",\"gpGXTvjS2HrY9Skq5\",\"eHcgvkTGsH7ZziqBo\",\"5QN8R22z43SrwoHDz\",\"CoFG5WWto3K7cTDHK\",\"YK7aM8DhZA8yAARjw\",\"3KkyQm77zsew58Dc2\",\"d9LBRxvADNBB5QJMB\",\"vNnHoEAwTckpnHW2A\",\"rCrbqMiaGPgHYTNxu\",\"AMpQSjKsRqhCDyS2j\",\"eW9R2SCoYnY8HBAdL\",\"6LbPw9yW6HHDfn8B8\",\"aEGG7AokRbyv44tji\",\"TCvpT4EPb8qNssNB7\",\"B4y8aoyXJtskYPFEL\",\"Qyfyyw6oC4EHAndzo\",\"yAouD3PxzED8a4gap\",\"xjyixzXzqqqTfJARd\",\"ctbThYbufFCYbRK4f\",\"qB6KSTYC6H2TQEQY6\",\"K42ijC8Jy8GHBnobP\",\"QZ3rEDRyuCdvnZukf\",\"syRNbbPdLCGXbH2Gy\",\"QDiHtAiYuyEEmoCgv\",\"54BFnXEjY3FuRNYpN\",\"rDgKHd6ZSSpboiAj7\",\"Z2b4JRLHqkLTdtfw9\",\"5Dd7XwALvvMMwS4Fb\",\"FGYBMbExbwHLD2Wdn\",\"oFEG3RDs5J99JYtkZ\",\"YAfdFfWimchSP9Fxm\",\"FiaTpm7ehfDv43wSG\",\"RfbjShbg8jmhyNtJh\",\"saa2YEAWRBR8Wvwf6\",\"mtRvHDpeLoSGBf8zC\",\"Hu4SkoNyWCP4vmsZE\",\"mBtSsKTHdQniYAfsZ\",\"vAbK8sCfKyFC78HYg\",\"XR6PJEBpTvpB2xQLR\",\"NHp9cXgWCyX6KqyMT\",\"wrL4iX2CCSqDCCty3\",\"vxZLHgz8p4Jr8qWkR\",\"fAkJhhGPj6NXkKomh\",\"NwczjpfNN8jXy5RF6\",\"a4Ln97CHxc8W6dzbq\",\"ruzwBPphPDRgLXdnP\",\"5nbHH4eApn6So9h2n\",\"RErqK2yM94wYyD2hk\",\"dqwatKFAeGpjmf5dm\",\"FvHwg9nTDqmaDBrvP\",\"vw4Byxdm9XQwbDtGC\",\"Wi4H6ayKsNDWWQCG5\",\"a2PQbkxH2NhSWQ4SL\",\"nPGXoJpjLdvs2hLvW\",\"at9zTbafXTra4ju2f\",\"2MjzJ7yxh3eT3xbng\",\"BgZcBs3KWeYCRKChr\",\"BatyhxsxBMwGNiioE\",\"GgQqni8TkbqEBGcsy\",\"5rX3qPFdvRQ9G7xZQ\",\"E2hpke7mHxAWsw5t9\",\"5CsHudxuDESxmjTPW\",\"pDvFWMCD9fQwoBPcu\",\"naZ3i6sSDPwsieDH7\",\"odkAFK52ayEjbLAGr\",\"ENsSYogEHHeDSrFod\",\"sMcFMPkMJC4Kh6ymj\",\"rraTtctZqnjXu2L2x\"],\"total\":723},\"flags\":0},\"summary\":\"When importing objects from a module in Python, the syntax usually is as follows:\\n\\nfrom module_name import object\\n\\nGiven a string of an incorrect import statement, return the fixed string. All import statements will be the wrong way round.\\n\\nExamples\\nfiximport(\\\"import object from modulename\\\") ➞ \\\"from module_name import object\\\"\\n\\nfix_import(\\\"import randint from r\",\"tags\":[\"strings\",\"regex\"],\"timestamp\":{\"$date\":1599390175825},\"title\":\"Incorrect Import Statement\",\"family\":[{\"_id\":\"mfRvtnv7RKQJLEH4B\",\"language\":\"cpp\"},{\"_id\":\"3XiwjSzuMN4MQN6tJ\",\"language\":\"javascript\"},{\"_id\":\"zWmoiwoeF7G3S4t5G\",\"language\":\"php\"},{\"_id\":\"TQrHYN9CNQD9miZwj\",\"language\":\"python3\"},{\"_id\":\"ioM6MQgAYsTi4vHJF\",\"language\":\"ruby\"}]}}"]