a["{\"msg\":\"result\",\"id\":\"1703\",\"result\":{\"_id\":\"sARz4TDdxCuqK6pja\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"def deadly_virus(persons, n):\\n\\t\",\"difficulty\":2.193548387096774,\"familyId\":\"D9YoGiBfttyWzgQ6Z\",\"instructions\":\"**Mubashir** needs your help to identify the spread of a deadly virus. He can provide you with the following parameters:\\n\\n- A two-dimensional array `persons`, containing **affected persons 'V'** and **unaffected persons 'P'**.\\n- Number of hours `n`, each infected person is spreading the virus to one person _up, down, left and right_ **each hour**.\\n\\nYour function should return the updated array containing affected and unaffected persons after `n` hours.\\n\\n### Examples\\n```\\npersons = [\\n  [\\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"],\\n  [\\\"V\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"],\\n  [\\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"],\\n  [\\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"],\\n  [\\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"]\\n]\\n\\n\\ndeadly_virus(persons, 0) ➞ [\\n  [\\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"],\\n  [\\\"V\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"],\\n  [\\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"],\\n  [\\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"],\\n  [\\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"]\\n]\\n\\ndeadly_virus(persons, 1) ➞ [\\n  [\\\"V\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"],\\n  [\\\"V\\\", \\\"V\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"],\\n  [\\\"V\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"],\\n  [\\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"],\\n  [\\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"]\\n]\\n\\ndeadly_virus(persons, 2) ➞ [\\n  [\\\"V\\\", \\\"V\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"],\\n  [\\\"V\\\", \\\"V\\\", \\\"V\\\", \\\"P\\\", \\\"P\\\"],\\n  [\\\"V\\\", \\\"V\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"],\\n  [\\\"V\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"],\\n  [\\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\", \\\"P\\\"]\\n]\\n```\\n\\n### Notes\\nN/A\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"persons=[\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"V\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"]\\n]\\n\\nanswer=[\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"V\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"]\\n]\\n\\nTest.assert_equals(deadly_virus(persons,0),answer)\\n\\npersons=[\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"V\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"]\\n]\\n\\nanswer=[\\n[\\\"V\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"V\\\",\\\"V\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"V\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"]\\n]\\n\\nTest.assert_equals(deadly_virus(persons,1),answer)\\n\\npersons=[\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"V\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"]\\n]\\n\\nanswer=[\\n[\\\"V\\\",\\\"V\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"V\\\",\\\"V\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"V\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"]\\n]\\n\\nTest.assert_equals(deadly_virus(persons,2),answer)\\n\\npersons=[\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"V\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"]\\n]\\n\\nanswer=[\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"V\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"V\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"]\\n]\\n\\nTest.assert_equals(deadly_virus(persons,1),answer)\\n\\npersons=[\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"V\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"]\\n]\\n\\nanswer=[\\n[\\\"P\\\",\\\"P\\\",\\\"V\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"P\\\"],\\n[\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\"],\\n[\\\"P\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"V\\\",\\\"P\\\",\\\"P\\\"]\\n]\\n\\nTest.assert_equals(deadly_virus(persons,2),answer)\\n\\npersons=[\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"V\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"]\\n]\\n\\nanswer=[\\n[\\\"P\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"P\\\"],\\n[\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\"],\\n[\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\"],\\n[\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\"],\\n[\\\"P\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"P\\\"]\\n]\\n\\nTest.assert_equals(deadly_virus(persons,3),answer)\\n\\npersons=[\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"V\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"],\\n[\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\",\\\"P\\\"]\\n]\\n\\nanswer=[\\n[\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\"],\\n[\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\"],\\n[\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\"],\\n[\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\"],\\n[\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\",\\\"V\\\"]\\n]\\nTest.assert_equals(deadly_virus(persons,4),answer)\\n\\n# Mubashir\",\"language\":\"python3\",\"quality\":0,\"summary\":\"Mubashir needs your help to identify the spread of a deadly virus. He can provide you with the following parameters:\\n\\nA two-dimensional array persons, containing affected persons 'V' and unaffected persons 'P'.\\nNumber of hours n, each infected person is spreading the virus to one person up, down, left and right each hour.\\n\\nYour function should return the updat\",\"tags\":[\"algorithms\",\"arrays\",\"logic\",\"language_fundamentals\"],\"timestamp\":{\"$date\":1611812555227},\"title\":\"Deadly Virus\",\"stats\":{\"completed\":{\"total\":28,\"ratings\":[2,2,2,2,2,0,2,2,2,0,0,3,2,3,4,3,3,2,3,2,3,4,3,2,3,0,1,4,3,1,3],\"quality\":[],\"rators\":[\"T6iBEE2jp7f7iEF2P\",\"iS5BrkGLzJyPK7nKt\",\"8PwfYqoDQFThzNtvf\",\"yjtdwc2AC4jA2RWtn\",\"Jqk2uJZZxEv5wZFze\",\"s5M5RvgqR9BhB9JoC\",\"HF28xZKSLM9wEuqNg\",\"p8qqFdJ3FSk5x9z3G\",\"oBcs8GLX2ZFLXQy8y\",\"Yp7uvStL97cC9fKkY\",\"2PufnQcsHsfymufX3\",\"ppxNdL4gjANz8oJLQ\",\"fznzd3qnvtbFkkizz\",\"8JyqsSbN2FJXPr3cw\",\"mDWNyaaQ9hvPCRzSd\",\"iojEnnY9FsMfYzp6f\",\"gJYuGdkXEWWmGRLzu\",\"J3upzLHuEwXH7Z2hx\",\"xn7uGNKeAwPEkP9oA\",\"AasGs8AeX9Lcb9xJn\",\"HqmxnQJM66Y57twhn\",\"cLRCEN8uLLeYL35M2\",\"yod5YhKtPqw2GfG9B\",\"aEm3Wvj2rFYRL8Lrb\",\"8sNv5PTHa7XQ8bNqR\",\"DPi9QGLctq2y76KuE\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"ofMXdekBtY6pq3Pin\",\"language\":\"cpp\"},{\"_id\":\"rnRot4rRofudkE72s\",\"language\":\"javascript\"},{\"_id\":\"sARz4TDdxCuqK6pja\",\"language\":\"python3\"},{\"_id\":\"RJgXMDFpmDCYkSY3Z\",\"language\":\"ruby\"}]}}"]