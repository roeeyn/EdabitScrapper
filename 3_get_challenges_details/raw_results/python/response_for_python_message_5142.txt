a["{\"msg\":\"result\",\"id\":\"1286\",\"result\":{\"_id\":\"qrSc3vKCqyFcz9ptr\",\"author\":\"Werdna\",\"authorId\":\"buX4mCQhtXCfBjeno\",\"code\":\"def sum_round(num):\\n\\t\",\"difficulty\":1.9745762711864407,\"familyId\":\"6vtQt4rJidjWpAnHu\",\"instructions\":\"Given a number, find the \\\"round\\\" of each digit of the number. An integer is called \\\"round\\\" if all its digits except the leftmost (most significant) are equal to zero.\\n- Round numbers: 4000, 1, 9, 800, 90\\n- Not round numbers: 110, 707, 222, 1001\\n\\nCreate a function that takes a number and returns the \\\"round\\\" of each digit (except if the digit is zero) as a string. Check out the following examples for more clarification.\\n\\n### Examples\\n```\\nsum_round(101) ➞ \\\"1 100\\\"\\n\\nsum_round(1234) ➞ \\\"4 30 200 1000\\\"\\n\\nsum_round(54210) ➞ \\\"10 200 4000 50000\\\"\\n```\\n\\n### Notes\\nN/A\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(sum_round(101), \\\"1 100\\\")\\nTest.assert_equals(sum_round(1010), \\\"10 1000\\\")\\nTest.assert_equals(sum_round(1234), \\\"4 30 200 1000\\\")\\nTest.assert_equals(sum_round(54213), \\\"3 10 200 4000 50000\\\")\\nTest.assert_equals(sum_round(548741), \\\"1 40 700 8000 40000 500000\\\")\\nTest.assert_equals(sum_round(1234567), \\\"7 60 500 4000 30000 200000 1000000\\\")\\n\\n# Author: medyah99\",\"language\":\"python3\",\"quality\":4.75,\"summary\":\"Given a number, find the \\\"round\\\" of each digit of the number. An integer is called \\\"round\\\" if all its digits except the leftmost (most significant) are equal to zero.\\nRound numbers: 4000, 1, 9, 800, 90\\nNot round numbers: 110, 707, 222, 1001\\n\\nCreate a function that takes a number and returns the \\\"round\\\" of each digit (except if the digit is zero) as a string. C\",\"tags\":[\"algorithms\",\"math\"],\"timestamp\":{\"$date\":1612468505519},\"title\":\"Sum of Round Numbers\",\"stats\":{\"completed\":{\"total\":146,\"ratings\":[2,2,2,2,2,2,0,2,2,0,1,1,2,2,2,3,2,1,0,5,2,2,1,1,2,2,2,2,2,3,3,2,3,3,3,2,2,2,0,3,4,3,2,3,3,1,0,3,2,3,2,3,0,2,2,3,0,1,2,3,1,4,1,1,3,0,4,1,3,1,3,3,2,0,0,1,3,0,2,0,1,3,3,2,2,1,3,0,2,2,3,3,3,0,2,3,3,2,2,3,2,3,1,2,4,1,3,2,2,2,1,3,2,2,3,1,3,1],\"quality\":[5,5,5,5,5,5,5,4,5,5,5,5,5,5,4,5,5,4,5,3],\"rators\":[\"buX4mCQhtXCfBjeno\",\"T6iBEE2jp7f7iEF2P\",\"yLuaweZ4rkrabfELB\",\"iS5BrkGLzJyPK7nKt\",\"cAP3n5NY64uoMwzRR\",\"PXAcsKkssS2yLyDv2\",\"s5M5RvgqR9BhB9JoC\",\"zd9FLSzsGz3evKafy\",\"gXTAie79kiw28tx5u\",\"8PwfYqoDQFThzNtvf\",\"HF28xZKSLM9wEuqNg\",\"gb9rvGus2Jv7bjZSs\",\"cR3ibTMxLyEdDFCHY\",\"FEYpu9RWysAgW3XnP\",\"J5T8gZqiZXFuFDTQ7\",\"YcCLwitFMAEJSnxAW\",\"p8qqFdJ3FSk5x9z3G\",\"oBcs8GLX2ZFLXQy8y\",\"GGdmhAvxXhqhhibJN\",\"DPi9QGLctq2y76KuE\",\"Yp7uvStL97cC9fKkY\",\"gJYuGdkXEWWmGRLzu\",\"8JyqsSbN2FJXPr3cw\",\"iojEnnY9FsMfYzp6f\",\"qAby4AWXmTNeusvg3\",\"BJp2WkwLWGHHB5oQW\",\"dJzNF59j2p8jWZxiQ\",\"6daecm7mtqzp7mKso\",\"fSQSHjW3e72MrWxbD\",\"RTDx9axf52kxhFjwZ\",\"bccs9koJxyQ9XNiLC\",\"QRv96jmNaYsWkxQEG\",\"2PufnQcsHsfymufX3\",\"KBxTPknCRmB2b5y3i\",\"ppxNdL4gjANz8oJLQ\",\"CHvzhtXnv8HTbPQ56\",\"tAF9Gf6PiGogbZuWs\",\"hnyhBFWwNCz9mDfSi\",\"DQskEvAv5KiJDPtGF\",\"fznzd3qnvtbFkkizz\",\"3LiSLdtN58n46NEqg\",\"PytNZK9mNiRiZxPrm\",\"DZoEMJpc7bbAaaPHr\",\"XHShZ3WMPgGEA2vkR\",\"ey3CASd6Je5LEJzfB\",\"mfsaETo7uA4x5vqLD\",\"KJCDwGkoXh8qtbbKr\",\"srJ34BaybkQh3qRkM\",\"J3upzLHuEwXH7Z2hx\",\"PWgzeK859suojbrRx\",\"Wpn95NqWxncQrwNgz\",\"yjtdwc2AC4jA2RWtn\",\"K6MfKMytoJJuSGewP\",\"4RY3zj9C2t8GGefhi\",\"Ds7L5bksw2QRHjrKL\",\"hsrNYf3WbexXJKhCq\",\"oqBxZy2eqS6iwWJj2\",\"xn7uGNKeAwPEkP9oA\",\"u5u2YpHXiNgzDNJdX\",\"62tvtxwHxH3JCoPQJ\",\"PC3pLs36zNzpRDSuE\",\"mDWNyaaQ9hvPCRzSd\",\"8BFSTCnoe2QggN64c\",\"RErqK2yM94wYyD2hk\",\"AasGs8AeX9Lcb9xJn\",\"DEDniTrstQYGounXT\",\"ghMkPtdFCpM6w8nax\",\"HqmxnQJM66Y57twhn\",\"3KkyQm77zsew58Dc2\",\"BrTDhPJcACL2bsrpJ\",\"ctbThYbufFCYbRK4f\",\"fbr22rabEJMfBp7vD\",\"eHcgvkTGsH7ZziqBo\",\"etoxSpG4fGKThLozM\",\"AQSqD9oNv2uPfxZCR\",\"55RQznnuTGpsj3EXd\",\"i5Nn7L8wRjX4fAZNN\",\"EfxwqhYdapX3dMQC2\",\"o4ixjQGSaYqA2JoM4\",\"kjvgTyRFyKHv44DcH\",\"kXEfD7xxEyWd7oxxL\",\"TbFKbci4gcyWzjSBo\",\"8sNv5PTHa7XQ8bNqR\",\"RoGGD5cpHb4ftdLDv\",\"jCjCvyhqhpebkJn34\",\"nkL2knkcNaiHCerW2\",\"axFGc8QrcLfdPgmhi\",\"4Lwjr34ypKNQNQCar\",\"gKnWjDjwrJh7MK2df\",\"5HCu9Ydd86QgHDRNP\",\"X6NSd93QQie6sBrot\",\"iqmPb9JuJDgTFeR8Q\",\"uBXzq8ZaZMYkn4wW5\",\"BuGWvGZGiJELoMy5G\",\"Jqk2uJZZxEv5wZFze\",\"J23RcmzbdtBbPCTjT\",\"doG5WALcJjSF6KJno\",\"ym69qXxYZDo7PgcGT\",\"svfmxqKhpRBYSTMGJ\",\"rKwKNnb6ujvmwJGiX\",\"zHik8yyagMX6RTN8y\",\"C8Gd66wwGagHmj2t8\",\"8hfeeDEvjafoaD3mW\",\"3iMMJdrmEF8oXQWwq\",\"oprew4YEmh6R5kNZP\",\"w67KfQgZ6WAeY7K4Y\",\"higYQNMebaE2dRbXy\",\"qNszsXx28cTxvGSNj\",\"nkH3HfJXLMNcBMM79\",\"cA6ALDreRTFs8k4MM\",\"sZ2eCa6pF6EN9PMmd\",\"ScCZHcDBzx6LrFCyZ\",\"jWbd7SYDzLPjc9EDh\",\"mvJBakQ35CWAnbbEZ\",\"5QN8R22z43SrwoHDz\",\"iP7wNofhZXTkJ9ryG\",\"qmtoFxLkGDQMwcBr6\",\"TCvpT4EPb8qNssNB7\",\"yod5YhKtPqw2GfG9B\",\"Je8xN7ozQDLxS7xKx\",\"dqwatKFAeGpjmf5dm\",\"sbJcFfQjQ59Wfg4Cd\",\"Qyfyyw6oC4EHAndzo\",\"rhS8qXRjZcpDXkwnE\",\"6dqoF6LmEaRPsCSpT\",\"aEm3Wvj2rFYRL8Lrb\",\"jkbavR2ATFJcpmo8M\",\"P7NmFbCJ5offXMRvB\",\"MKT7khMBGXzA22ykf\",\"g5dP3rGGK4QSypC4k\",\"9pzFiFK3ANLjQfnr2\",\"bNENiqqEDxM5a5JBf\",\"3nied3n8KG8RSNixH\"]},\"flags\":0},\"editorId\":\"buX4mCQhtXCfBjeno\",\"family\":[{\"_id\":\"cfkBaFXFcGomJBX2j\",\"language\":\"javascript\"},{\"_id\":\"FYT6aRevAMW2Dn5FS\",\"language\":\"php\"},{\"_id\":\"qrSc3vKCqyFcz9ptr\",\"language\":\"python3\"},{\"_id\":\"N6mgFrKTZ9Fu7QzgG\",\"language\":\"ruby\"}]}}"]