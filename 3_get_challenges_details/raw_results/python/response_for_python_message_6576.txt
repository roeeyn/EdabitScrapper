a["{\"msg\":\"result\",\"id\":\"1997\",\"result\":{\"_id\":\"9CWPv99o4EjZgHnkq\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def divide(lst, n):\\n\\t\",\"difficulty\":2.789473684210526,\"familyId\":\"KGtvzq8QxZ5FbAz7S\",\"instructions\":\"Write a function that divides a list into chunks such that the sum of each chunk is `<= n`. Start from the left side of the list and move to the right.\\n\\n### Examples\\n```\\ndivide([1, 2, 3, 4, 1, 0, 2, 2], 5)\\n➞ [[1, 2], [3], [4, 1, 0], [2, 2]]\\n\\ndivide([1, 0, 1, 1, -1, 0, 0], 1)\\n➞ [[1, 0], [1], [1, -1, 0, 0]]\\n\\ndivide([2, 1, 0, -1, 0, 0, 2, 1, 3], 3)\\n➞ [[2, 1, 0, -1, 0, 0], [2, 1], [3]]\\n```\\n\\n### Notes\\n* The max of the list will always be smaller than or equal to `n`.\\n* Use the **greedy approach** when solving the problem (e.g. fit as many elements you can into a chunk as long as you satisfy the sum constraint).\",\"lab\":\"Test.assert_equals(divide([1, 2, 3, 4, 1, 0, 2, 2], 5), [[1, 2], [3], [4, 1, 0], [2, 2]])\\nTest.assert_equals(divide([1, 2, 3, 4, 1, 0, 2, 2], 4), [[1, 2], [3], [4], [1, 0, 2], [2]])\\nTest.assert_equals(divide([1, 3, 2, -1, 2, 1, 1, 3, 1], 3), [[1], [3], [2, -1, 2], [1, 1], [3], [1]])\\nTest.assert_equals(divide([1, 2, 2, -1, 2, 0, 1, 0, 1], 2), [[1], [2], [2, -1], [2, 0], [1, 0, 1]])\\nTest.assert_equals(divide([1, 2, 2, -1, 2, 0, 1, 0, 1], 3), [[1, 2], [2, -1, 2, 0], [1, 0, 1]])\\nTest.assert_equals(divide([1, 2, 2, -1, 2, 0, 1, 0, 1], 5), [[1, 2, 2, -1], [2, 0, 1, 0, 1]])\\nTest.assert_equals(divide([2, 1, 0, -1, 0, 0, 2, 1, 3], 3), [[2, 1, 0, -1, 0, 0], [2, 1], [3]])\\nTest.assert_equals(divide([2, 1, 0, -1, 0, 0, 2, 1, 3], 4), [[2, 1, 0, -1, 0, 0, 2], [1, 3]])\\nTest.assert_equals(divide([1, 0, 1, 1, -1, 0, 0], 1), [[1, 0], [1], [1, -1, 0, 0]])\\nTest.assert_equals(divide([1, 0, 1, 1, -1, 0, 0], 2), [[1, 0, 1], [1, -1, 0, 0]])\\nTest.assert_equals(divide([1, 0, 1, 1, -1, 0, 0], 3), [[1, 0, 1, 1, -1, 0, 0]])\",\"language\":\"python3\",\"summary\":\"Write a function that divides a list into chunks such that the sum of each chunk is <= n. Start from the left side of the list and move to the right.\\n\\nExamples\\ndivide([1, 2, 3, 4, 1, 0, 2, 2], 5)\\n➞ [[1, 2], [3], [4, 1, 0], [2, 2]]\\n\\ndivide([1, 0, 1, 1, -1, 0, 0], 1)\\n➞ [[1, 0], [1], [1, -1, 0, 0]]\\n\\ndivide([2, 1, 0, -1, 0, 0, 2, 1, 3], 3)\\n➞ [[2, 1, 0, -1, 0, 0],\",\"tags\":[\"arrays\",\"functional_programming\"],\"timestamp\":{\"$date\":1555115241688},\"title\":\"Dividing into Chunks of Maximum Sum N\",\"stats\":{\"completed\":{\"total\":76,\"ratings\":[3,3,3,3,3,3,3,3,3,3,5,4,1,4,1,5,5,3,2,0,3,1,3,2,4,2,3,2,4,4,2,2,4,1,5,4,2,2,4,3,4,2,3,1,2,4,3,4,4,3,4,0,2,3,2,2,3,4,1,3,2,4,1,4,3,3,4,0,1,4,4,0,2,3,4,2],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"yZvzB3qFb8pkHy4dg\",\"4cxKdMqL4Qk2GsJpm\",\"WDaGgs2zcdz2aJ4Km\",\"8JyqsSbN2FJXPr3cw\",\"SnZsm5nF8s8pfhTvE\",\"QQniTggCRojCzXzmZ\",\"pJtD3KZ94Jz29j6X5\",\"tAF9Gf6PiGogbZuWs\",\"T3ZAuoMrJjvZwN55B\",\"ab7BsQuhDo3QgE6bh\",\"nrA8Pacm3A6GqGzq4\",\"WZxCpoREvQqJJ35bs\",\"MXjxGML2X75x64vJo\",\"gb9rvGus2Jv7bjZSs\",\"AYaEkTWLMmfzpwejr\",\"PFjMZGHNAPTkgd7tq\",\"BFNm9gacwba9KyLFW\",\"jHrtWDGBhkbuWa7fG\",\"3ifAHQzsMasfQySoL\",\"kQH5b8MXJunh84Czq\",\"vjQizqDbKpjfHrvZA\",\"PuJDHtAaX6vXeJJTC\",\"HqmxnQJM66Y57twhn\",\"8Nt83ze8MuAp7ar7u\",\"stKEm7Cdsauxmhw5Z\",\"wT5gGgvjKc5wz59AQ\",\"Jqk2uJZZxEv5wZFze\",\"2innwjWqxJHo4eRGh\",\"ftRou9zcw69GCx4iv\",\"PytNZK9mNiRiZxPrm\",\"8PwfYqoDQFThzNtvf\",\"aEm3Wvj2rFYRL8Lrb\",\"mDWNyaaQ9hvPCRzSd\",\"iDMEzTCyRm3CLFMHB\",\"s5M5RvgqR9BhB9JoC\",\"fznzd3qnvtbFkkizz\",\"AasGs8AeX9Lcb9xJn\",\"Zhy5X7BZnqk8hacEw\",\"kYWb8BwpKwunQkxeX\",\"ZNnsMeNkdDhHjSrZb\",\"DQskEvAv5KiJDPtGF\",\"W5TajitmCyxz87zAC\",\"55RQznnuTGpsj3EXd\",\"f2BoqyCpgnmjEjLqx\",\"dHkXWFAxJFD2QfvwY\",\"KZ2xddpM2f9JRaryB\",\"xn7uGNKeAwPEkP9oA\",\"eLHHzgshMq64895Xw\",\"Ecg4m7srYGgZsb4Ck\",\"x4dfavjLEcrvAF3QQ\",\"SGhPxX5bHGL8zZqtt\",\"X4wWncu8bJMz7KDw2\",\"HF28xZKSLM9wEuqNg\",\"gJYuGdkXEWWmGRLzu\",\"yTtSCvGPyYna6JuRC\",\"8sNv5PTHa7XQ8bNqR\",\"eYfPWvZwnJQkHbSTK\",\"iS5BrkGLzJyPK7nKt\",\"BaMPABEaxuPNCA8G8\",\"hkiz2Nv927cYGrA86\",\"DPi9QGLctq2y76KuE\",\"p8qqFdJ3FSk5x9z3G\",\"J3upzLHuEwXH7Z2hx\",\"iojEnnY9FsMfYzp6f\",\"GGdmhAvxXhqhhibJN\",\"yjtdwc2AC4jA2RWtn\",\"2PufnQcsHsfymufX3\",\"5rX3qPFdvRQ9G7xZQ\",\"gKnWjDjwrJh7MK2df\",\"gXTAie79kiw28tx5u\",\"Yp7uvStL97cC9fKkY\",\"aFYzioHvZPvPaunsg\",\"GTKsdeEihE636Le9i\"],\"quality\":[5,5,5,5,5,3,5]},\"tests\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"editorId\":\"mNMQvcxKSSvqqMYCH\",\"isHidden\":false,\"quality\":4.714285714285714,\"family\":[{\"_id\":\"umkfbhmv53bvREvqj\",\"language\":\"cpp\"},{\"_id\":\"RaxaX4wmKKCsrzKwJ\",\"language\":\"javascript\"},{\"_id\":\"9CWPv99o4EjZgHnkq\",\"language\":\"python3\"},{\"_id\":\"xFvsNdoc9RYkwLw4B\",\"language\":\"ruby\"}]}}"]