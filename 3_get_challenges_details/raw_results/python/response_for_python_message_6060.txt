a["{\"msg\":\"result\",\"id\":\"1742\",\"result\":{\"_id\":\"DZ4oPbYvwSmmAaLGB\",\"author\":\"TyaSingh\",\"authorId\":\"GgLd4eWBu79mdjtkP\",\"code\":\"def build_profile():\\n\\t\",\"difficulty\":2.2567567567567566,\"editorId\":\"GgLd4eWBu79mdjtkP\",\"familyId\":\"Ptfy7hNExMLuiE49P\",\"instructions\":\"Create a function that takes multiple arguments, including the first and last name of a person. It should return a dictionary containing all the information which was given in an orderly manner.\\n\\n### Examples\\n```\\nbuild_profile(\\\"Isaac\\\", \\\"Newton\\\",  location=\\\"Kensington\\\", field=[\\\"physics\\\", \\\"math\\\", \\\"astronomy\\\", \\\"theology\\\"] ) ➞ { \\\"first_name\\\": \\\"Isaac\\\", \\\"last_name\\\": \\\"Newton\\\", \\\"location\\\": \\\"Kensington\\\", \\\"field\\\": [\\\"physics\\\", \\\"math\\\", \\\"astronomy\\\", \\\"theology\\\"] }\\n\\nbuild_profile(\\\"Marie\\\", \\\"Curie\\\",  location=\\\"Sancellemoz\\\", field=\\\"chemistry\\\", discovered=\\\"Radium, Polonium\\\" ) ➞ { \\\"first_name\\\": \\\"Marie\\\", \\\"last_name\\\": \\\"Curie\\\", \\\"location\\\": \\\"Sancellemoz\\\", \\\"field\\\": \\\"chemistry\\\", \\\"discovered\\\": \\\"Radium, Polonium\\\" }\\n\\nbuild_profile(\\\"Donald\\\", \\\"Trump\\\",  party=\\\"republican\\\", current_profession=\\\"president\\\", president = \\\"45th\\\" ) ➞ { \\\"first_name\\\": \\\"Donald\\\", \\\"last_name\\\": \\\"Trump\\\", \\\"party\\\": \\\"republican\\\", \\\"current_profession\\\": \\\"president\\\", \\\"president\\\": \\\"45th\\\" }\\n```\\n\\n### Notes\\n- The arguments must include the first and last name.\\n- Other arguments may or may not be given.\",\"lab\":\"Test.assert_equals(build_profile('Isaac', 'Newton',  location='Kensington', field=['physics', 'math', 'astronomy', 'theology']), {'first_name': 'Isaac', 'last_name': 'Newton', 'location': 'Kensington', 'field': ['physics', 'math', 'astronomy', 'theology']})\\nTest.assert_equals(build_profile('Marie', 'Curie',  location='Sancellemoz', field='chemistry', discovered='Radium, Polonium'),  {'first_name': 'Marie', 'last_name': 'Curie', 'location': 'Sancellemoz', 'field': 'chemistry', 'discovered': 'Radium, Polonium'})\\nTest.assert_equals(build_profile('Donald', 'Trump',  party='republican', current_profession='president', president = '45th' ),  {'first_name': 'Donald', 'last_name': 'Trump', 'party': 'republican', 'current_profession': 'president', 'president': '45th'})\\nTest.assert_equals(build_profile('Barack', 'Obama', profession=['American attorney', 'politician', '44th president'], education='Harvard law school'), {'first_name': 'Barack', 'last_name': 'Obama', 'profession': ['American attorney', 'politician', '44th president'], 'education': 'Harvard law school'})\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[5,5,5,5,5,5,0,2,1,3,2,2,5,2,2,1,3,2,1,2,4,2,2,4,3,2,2,2,3,3,2,4,2,1,4,2,2,1,0,3,3,1,2,1,3,0,3,2,2,0,0,2,1,3,3,3,1,3,0,2,2,2,3,2,2,1,3,0,0,2,3,3,2,1],\"rators\":[\"GgLd4eWBu79mdjtkP\",\"AYaEkTWLMmfzpwejr\",\"tAF9Gf6PiGogbZuWs\",\"yZvzB3qFb8pkHy4dg\",\"EjcBuz6unuzkcnxXA\",\"gb9rvGus2Jv7bjZSs\",\"QKYi6pYeaYFovNHX4\",\"GRRag6PoDcYKbXuZ5\",\"BFNm9gacwba9KyLFW\",\"xyHfEdcYBDznunq6n\",\"6W2GSzrYjMD9ANBFY\",\"jj3tN4LhX8Rgs3DKB\",\"HLJt56TxkQpELgDy6\",\"tsHLih5WxvYR7wCeu\",\"fAoLuqbGvHn4w2PHf\",\"HqmxnQJM66Y57twhn\",\"Jqk2uJZZxEv5wZFze\",\"sJWTa7iWeRoRtqJ8N\",\"8PwfYqoDQFThzNtvf\",\"SGhPxX5bHGL8zZqtt\",\"Yp7uvStL97cC9fKkY\",\"T9WcjJPEu3rcTsKbF\",\"aEm3Wvj2rFYRL8Lrb\",\"AasGs8AeX9Lcb9xJn\",\"s5M5RvgqR9BhB9JoC\",\"8JyqsSbN2FJXPr3cw\",\"fznzd3qnvtbFkkizz\",\"ZNnsMeNkdDhHjSrZb\",\"uw8E83imJYpQiiPpP\",\"bJaPCBx63YxdJAuTS\",\"mq2W9FwPgf4w75dZi\",\"n2BRY9X8899dcG8Bw\",\"55RQznnuTGpsj3EXd\",\"bCDTKAoS4biDmQ64Y\",\"gJYuGdkXEWWmGRLzu\",\"eHhL37DG7oW3vTcg7\",\"et4ezbyWYdtQd54X7\",\"R3ucLSZd83gmBKXF2\",\"FgkYtHLxeD8pETJ8T\",\"Phd2FdPjo9BhBfvKh\",\"W5TajitmCyxz87zAC\",\"CEd9tLdXeDeNHSzys\",\"cnmj8mAbLcMnKaqLS\",\"LvQuuQ6bi6Bb9mmqK\",\"jFcHRfu77aNu6YpZg\",\"qab4tYm6vJQcpKLfi\",\"BsTqKPoswS4gg75rm\",\"SdhXGjg7suaZQCvoH\",\"PytNZK9mNiRiZxPrm\",\"iojEnnY9FsMfYzp6f\",\"9Ct9EYenTi6JXEaWW\",\"feC3ae6ShoSBGZz8H\",\"winaFSNGA6hosaNA6\",\"PfG8saeBG2GHm4g3M\",\"4jBHzQQjgDBWvMXWG\",\"foytX6kH9wiSYqLtT\",\"qD2LrwaDrSdiybLKY\",\"xn7uGNKeAwPEkP9oA\",\"J3upzLHuEwXH7Z2hx\",\"iS5BrkGLzJyPK7nKt\",\"gXTAie79kiw28tx5u\",\"c7uBxu2rgY77H5d79\",\"RTDx9axf52kxhFjwZ\",\"p8qqFdJ3FSk5x9z3G\",\"QRv96jmNaYsWkxQEG\",\"aFYzioHvZPvPaunsg\",\"mDWNyaaQ9hvPCRzSd\",\"yr822PZmmiDDenxpB\",\"oBcs8GLX2ZFLXQy8y\",\"H9KZi2cjt4FwH7qog\",\"gKnWjDjwrJh7MK2df\",\"T6iBEE2jp7f7iEF2P\",\"yod5YhKtPqw2GfG9B\",\"nkH3HfJXLMNcBMM79\",\"M2cdmCZsy4HFzdEiS\",\"2PufnQcsHsfymufX3\",\"8sNv5PTHa7XQ8bNqR\"],\"total\":82,\"quality\":[1,5,5,5,5,4,5,5]},\"flags\":0},\"subscribers\":[\"GgLd4eWBu79mdjtkP\"],\"summary\":\"Create a function that takes multiple arguments, including the first and last name of a person. It should return a dictionary containing all the information which was given in an orderly manner.\\n\\nExamples\\nbuildprofile(\\\"Isaac\\\", \\\"Newton\\\",  location=\\\"Kensington\\\", field=[\\\"physics\\\", \\\"math\\\", \\\"astronomy\\\", \\\"theology\\\"] ) ➞ { \\\"firstname\\\": \\\"Isaac\\\", \\\"last_name\\\": \\\"Newton\\\",\",\"tags\":[\"loops\",\"logic\",\"strings\"],\"timestamp\":{\"$date\":1564778122286},\"title\":\"Building Profiles\",\"isHidden\":false,\"quality\":4.375,\"family\":[{\"_id\":\"DZ4oPbYvwSmmAaLGB\",\"language\":\"python3\"}]}}"]