a["{\"msg\":\"result\",\"id\":\"1531\",\"result\":{\"_id\":\"oCe79PHB7yoqkbNYb\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def break_point(num):\\n\\t\",\"difficulty\":2.0833333333333335,\"familyId\":\"ZwTjR3FRcQmqGc4zb\",\"instructions\":\"A number has a **breakpoint** if it can be split in a way where the digits on the left side and the digits on the right side sum to the same number.\\n\\nFor instance, the number _35190_ can be sliced between the digits _351_ and _90_, since _3 + 5 + 1 = 9_ and _9 + 0 = 9_. On the other hand, the number _555_ does **not** have a **breakpoint** (you must split **between** digits).\\n\\nCreate a function that returns `True` if a number has a breakpoint, and `False` otherwise.\\n\\n### Examples\\n```\\nbreak_point(159780) ➞ True\\n\\nbreak_point(112) ➞ True\\n\\nbreak_point(1034) ➞ True\\n\\nbreak_point(10) ➞ False\\n\\nbreak_point(343) ➞ False\\n```\\n\\n### Notes\\n- Read each digit as only one number.\\n- Check the **Resources** tab for a hint.\",\"lab\":\"Test.assert_equals(break_point(159780), True)\\nTest.assert_equals(break_point(112), True)\\nTest.assert_equals(break_point(10), False)\\nTest.assert_equals(break_point(1034), True)\\nTest.assert_equals(break_point(343), False)\\nTest.assert_equals(break_point(1119444), True)\\nTest.assert_equals(break_point(6666), True)\\nTest.assert_equals(break_point(9777771), False)\",\"language\":\"python3\",\"summary\":\"A number has a breakpoint if it can be split in a way where the digits on the left side and the digits on the right side sum to the same number.\\n\\nFor instance, the number 35190 can be sliced between the digits 351 and 90, since 3 + 5 + 1 = 9 and 9 + 0 = 9. On the other hand, the number 555 does not have a breakpoint (you must split between digits).\\n\\nCreate a f\",\"tags\":[\"arrays\",\"loops\",\"validation\"],\"timestamp\":{\"$date\":1552931522373},\"title\":\"Break Point\",\"stats\":{\"completed\":{\"total\":202,\"ratings\":[2,2,2,2,2,2,2,2,2,2,3,1,2,2,1,2,2,1,1,1,2,3,3,3,3,2,3,2,3,2,3,4,3,2,3,1,1,1,2,2,3,1,2,3,3,2,1,0,2,3,2,2,0,3,5,1,2,1,1,1,2,3,3,2,0,1,1,2,2,3,3,3,2,1,2,3,1,3,1,0,3,2,2,2,1,2,3,3,2,3,2,2,3,1,3,2,3,4,2,3,3,2,3,2,0,3,2,1,1,1,4,1,3,2,2,3,5,3,1,2,3,1,2,1,3,3,2,2,4,1,3,3,1,3,2,2,1,3,3,1,1,1,3,3,3,1,3,0,2,0,2,3,1,2,3,3,2,3,3,3,0,3,0,0,3,1,1,2,2,2,1,1,1,2,5,3,3,3,3,1],\"rators\":[\"BkPgkDQGHm66X4Qai\",\"qaR8DnWrTk8Mus5Q2\",\"yZvzB3qFb8pkHy4dg\",\"Jqk2uJZZxEv5wZFze\",\"gb9rvGus2Jv7bjZSs\",\"5uM9326sXAWGh27wr\",\"M8jrv2FfpMQp9Qzpx\",\"8JyqsSbN2FJXPr3cw\",\"qvEvDcL32a5F4Tg6c\",\"XjC9ivzaAxfcFiSGj\",\"tAF9Gf6PiGogbZuWs\",\"GjPHaSr2zeQESapox\",\"GC7GztYtk4KoNStso\",\"SKabuq5XuhXBugKBa\",\"jdQrck9YLmJQFPb7N\",\"vH5ky4S9isLZTQ6ph\",\"T3ZAuoMrJjvZwN55B\",\"cF8nvyGwfFKE5b2iy\",\"FikSPhcrHBpQ4CyGC\",\"Mb5sjE2qnvjL2xcBG\",\"ab7BsQuhDo3QgE6bh\",\"Y3KkPrBzMBgMiqaQ6\",\"9Gf6g4fuKc3uou9w2\",\"MXjxGML2X75x64vJo\",\"nc7bRhkxgKyqusYe3\",\"kQH5b8MXJunh84Czq\",\"PFjMZGHNAPTkgd7tq\",\"5dvDGoRaJwmYTmRRB\",\"AF6LgdKhEdzwgRJom\",\"ahWFxnaxt9bXSA4f3\",\"c89SxuYYjfeRh4toG\",\"7g3vZaQXhLpxrajyg\",\"YdRcRS2e6iai93gvW\",\"5s4qhuRJijYaDNXva\",\"BFNm9gacwba9KyLFW\",\"nF9pCCzbGDhzvWgaw\",\"C9LKGu2g5hSijvDzA\",\"5JFQgt6KFihmXfHKm\",\"6u7yc9m6HuHGbHzph\",\"nzx4uAPg3hCceyFPE\",\"PYg2boGDLrEcF3i4j\",\"aXCm9vWqKwL9XFYoj\",\"yrCNkFYQBEDE76eFS\",\"td7qPZ7Lv4pEWT2Ya\",\"jYJ26SiLKBu5GRumq\",\"zjQPuEyZ38tTW6P5w\",\"jHrtWDGBhkbuWa7fG\",\"WkWyq9wMkZhXB6zsD\",\"AYaEkTWLMmfzpwejr\",\"cR3ibTMxLyEdDFCHY\",\"gMJhLdyw3tH7L96X2\",\"nfXGHENb5md7m355s\",\"Nj6FwgBtAXsaQwsM2\",\"XKi8iZXBCHCaebSHh\",\"2fxapKr8XGdNeaKi2\",\"otXtuQygbcYATMZoP\",\"s5M5RvgqR9BhB9JoC\",\"w3e8tA7cxpYDfSmWM\",\"Jg8ZSRXe3NoDMCqGu\",\"Jmt7w6aiCvJ8XuBo6\",\"RyCu8LFdoba6Gvzp9\",\"8aPJNKDxXq7884eJb\",\"hSfK7dhSiKdNjMbLr\",\"3efW5qCKraPjzEfiX\",\"oqGkxvASXq52iTDvp\",\"QFJBYiawtp3C3cK7Y\",\"tK9oBgXjqPsPrGowj\",\"EXZfPb8YH28EL8Rh9\",\"qBaLGrm952ii9K23M\",\"vuwheqp25x7RkBHXn\",\"Dw8RZgg5iHBuFrWwQ\",\"HQxp7NcdvF92G7bYS\",\"8PE2cfZEhQBPhe8LG\",\"3ECpdeExhBmkYXtba\",\"PuJDHtAaX6vXeJJTC\",\"v9KtC8YLbMWmXiW2H\",\"6uBnSGvibaiNFkeKF\",\"3JR9S6Rj5LicgMx2X\",\"qcsrhZuqwa9XFpWna\",\"FgkYtHLxeD8pETJ8T\",\"HqmxnQJM66Y57twhn\",\"CZeLyDD2BQL3jrzzj\",\"fAoLuqbGvHn4w2PHf\",\"tsgTLnTRSv6ojieBh\",\"C4QntmkYtB89GNtpd\",\"8PwfYqoDQFThzNtvf\",\"d2rkaKAaLFYsyTLQq\",\"K96FwtfDDN5WM4Bb7\",\"6ShafRStcvew4GfCh\",\"2innwjWqxJHo4eRGh\",\"4fctAnxyFRB8stPRQ\",\"Yp7uvStL97cC9fKkY\",\"AasGs8AeX9Lcb9xJn\",\"4CFzv558qbGcpQwc4\",\"w3A7cBWyAfukk6xEQ\",\"Z85ajWfZ4jDPkbvR4\",\"aCNWav8S8Try9RkC6\",\"wZoxzQDbso9SMAPkY\",\"aEm3Wvj2rFYRL8Lrb\",\"ZNnsMeNkdDhHjSrZb\",\"mDWNyaaQ9hvPCRzSd\",\"YRstQuthRkFeBiXug\",\"3Zceb8GudqAG3onG3\",\"kYWb8BwpKwunQkxeX\",\"RcFJfYquW9quJDnp5\",\"gJYuGdkXEWWmGRLzu\",\"EjbDDFRECrzQDkzrX\",\"J5T8gZqiZXFuFDTQ7\",\"PytNZK9mNiRiZxPrm\",\"axC4Ye5xnfo9MEWj6\",\"KdNDysEsy2TW5QRJ2\",\"ekQh3jzgGLsEMbKo3\",\"LjoNTyGEMfBpMHHus\",\"yr822PZmmiDDenxpB\",\"HF28xZKSLM9wEuqNg\",\"euPBBaYXyS8RBr9KB\",\"DQskEvAv5KiJDPtGF\",\"n2BRY9X8899dcG8Bw\",\"LQxof8pGabGuWP7Gn\",\"mC3Sza4vZuqMwyeKG\",\"4rwxLqLs2mNZNg8NB\",\"hnyhBFWwNCz9mDfSi\",\"GamaMNrnhrjj5tXTx\",\"KAE5csCXsqwzSCQqP\",\"W5TajitmCyxz87zAC\",\"bJxaKHJqR82EWw8Su\",\"9dgvEreRDYRiwLmYv\",\"vpLFyr4p56fPjqDCu\",\"iojEnnY9FsMfYzp6f\",\"DrkR35NqnP9NDLbq6\",\"dzS6WBTMHyFEag6Fp\",\"zZDaXBxMzTCBhNkgL\",\"Ecg4m7srYGgZsb4Ck\",\"9pzFiFK3ANLjQfnr2\",\"CwXsu25ygLEwQbmQC\",\"iS5BrkGLzJyPK7nKt\",\"yjtdwc2AC4jA2RWtn\",\"9bQyb6rW7xfE4vgrR\",\"dEuJGZbBQkveCXEFk\",\"ZrKCkX7xxGGZzauFW\",\"p8qqFdJ3FSk5x9z3G\",\"XjajdyybZZbkz8o5x\",\"BNogTonsWhcfseTjX\",\"qD2LrwaDrSdiybLKY\",\"8fZxjQfuXw5HMSRJM\",\"QRv96jmNaYsWkxQEG\",\"DPi9QGLctq2y76KuE\",\"dkcmCKwqApX5jBggc\",\"xn7uGNKeAwPEkP9oA\",\"qZQxPQ2kaNKAMesHT\",\"spqXrjG3ZFa2j5uTR\",\"axdSNLZpiCDF8RS6n\",\"J3upzLHuEwXH7Z2hx\",\"6MjSiiBLPcvXbXcaZ\",\"9rhsisf8ofHavG5aT\",\"gXTAie79kiw28tx5u\",\"oBcs8GLX2ZFLXQy8y\",\"7scpcTEp3SEx5Wjg9\",\"gj87yXyoJxhoQLetq\",\"fSQSHjW3e72MrWxbD\",\"DyjCBBvcoMytDxAr5\",\"cAP3n5NY64uoMwzRR\",\"RTDx9axf52kxhFjwZ\",\"GGdmhAvxXhqhhibJN\",\"FEYpu9RWysAgW3XnP\",\"YcCLwitFMAEJSnxAW\",\"H9KZi2cjt4FwH7qog\",\"srJ34BaybkQh3qRkM\",\"PC3pLs36zNzpRDSuE\",\"5HH239FpCsu6fTr5R\",\"MpfytGFYF77emJ3cT\",\"T6iBEE2jp7f7iEF2P\",\"AFfw7cGg83uYk2Miy\",\"gKnWjDjwrJh7MK2df\",\"d8qtzoLB264iP8tdY\",\"2PufnQcsHsfymufX3\",\"o4ixjQGSaYqA2JoM4\",\"suArq5BbSy7gD6xri\",\"yod5YhKtPqw2GfG9B\",\"nkH3HfJXLMNcBMM79\",\"4Lwjr34ypKNQNQCar\",\"CHvzhtXnv8HTbPQ56\",\"55RQznnuTGpsj3EXd\",\"8sNv5PTHa7XQ8bNqR\",\"rhS8qXRjZcpDXkwnE\",\"avraGEDXFzfmk4b75\",\"buX4mCQhtXCfBjeno\",\"ey3CASd6Je5LEJzfB\",\"JhX7jvtpwNyxcc39m\",\"Ds7L5bksw2QRHjrKL\",\"n2qKKxomPnb4zez5M\"],\"quality\":[4,5,4,5,5,5,5,5,5,5,5,5,4,5,4,5,5,5,5,3]},\"tests\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"instructions\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.7,\"family\":[{\"_id\":\"gEg86sMq9Yu7Ei4FF\",\"language\":\"cpp\"},{\"_id\":\"pNCrbWDTYrsuQ37TP\",\"language\":\"csharp\"},{\"_id\":\"eoFDKdjN9tFXWcEQi\",\"language\":\"javascript\"},{\"_id\":\"oCe79PHB7yoqkbNYb\",\"language\":\"python3\"},{\"_id\":\"9oEKEuSdrAMEEi89J\",\"language\":\"ruby\"},{\"_id\":\"ySPZ57wLQsjYma4dg\",\"language\":\"swift\"}]}}"]