a["{\"msg\":\"result\",\"id\":\"318\",\"result\":{\"_id\":\"zY8WSKGcqmkGd73Wr\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"def after_n_years(names, n):\\n\\t\",\"difficulty\":0.6340782122905028,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"cfMZYAzun8ZFp527F\",\"instructions\":\"Given a dictionary of *people* and their *ages*, return how old the people would be after `n` years have passed. Use the **absolute value** of `n`.\\n\\n### Examples\\n```\\nafter_n_years({\\n  \\\"Joel\\\" : 32,\\n  \\\"Fred\\\" : 44,\\n  \\\"Reginald\\\" : 65,\\n  \\\"Susan\\\" : 33,\\n  \\\"Julian\\\" : 13\\n}, 1) ➞ {\\n  \\\"Joel\\\" : 33,\\n  \\\"Fred\\\" : 45,\\n  \\\"Reginald\\\" : 66,\\n  \\\"Susan\\\" : 34,\\n  \\\"Julian\\\" : 14\\n}\\n\\nafter_n_years({\\n  \\\"Baby\\\" : 2,\\n  \\\"Child\\\" : 8,\\n  \\\"Teenager\\\" : 15,\\n  \\\"Adult\\\" : 25,\\n  \\\"Elderly\\\" : 71\\n}, 19) ➞ {\\n  \\\"Baby\\\" : 21,\\n  \\\"Child\\\" : 27,\\n  \\\"Teenager\\\" : 34,\\n  \\\"Adult\\\" : 44,\\n  \\\"Elderly\\\" : 90\\n}\\n\\nafter_n_years({\\n  \\\"Genie\\\" : 1000,\\n  \\\"Joe\\\" : 40\\n}, 5) ➞ {\\n  \\\"Genie\\\" : 1005,\\n  \\\"Joe\\\" : 45\\n}\\n```\\n\\n### Notes\\n- Assume that everyone is immortal (it would be a bit grim if I told you to remove names once they reached 75).\\n- `n` should be a positive number because last time I checked, people don't tend to age backwards. Therefore, use the **absolute** value of `n`.\",\"isHidden\":false,\"lab\":\"Test.assert_equals(after_n_years({\\n\\t\\\"Joel\\\" : 32,\\n\\t\\\"Fred\\\" : 44,\\n\\t\\\"Reginald\\\" : 65,\\n\\t\\\"Susan\\\" : 33,\\n\\t\\\"Julian\\\" : 13\\n}, 1), {\\n\\t\\\"Joel\\\" : 33,\\n\\t\\\"Fred\\\" : 45,\\n\\t\\\"Reginald\\\" : 66,\\n\\t\\\"Susan\\\" : 34,\\n\\t\\\"Julian\\\" : 14\\n})\\n\\nTest.assert_equals(after_n_years({\\n\\t\\\"Baby\\\" : 2,\\n\\t\\\"Child\\\" : 8,\\n\\t\\\"Teenager\\\" : 15,\\n\\t\\\"Adult\\\" : 25,\\n\\t\\\"Elderly\\\" : 71\\n}, 19), {\\n\\t\\\"Baby\\\" : 21,\\n\\t\\\"Child\\\" : 27,\\n\\t\\\"Teenager\\\" : 34,\\n\\t\\\"Adult\\\" : 44,\\n\\t\\\"Elderly\\\" : 90\\n})\\n\\nTest.assert_equals(after_n_years({\\n\\t\\\"Genie\\\" : 1000,\\n\\t\\\"Joe\\\" : 40\\n}, 5), {\\n\\t\\\"Genie\\\" : 1005,\\n\\t\\\"Joe\\\" : 45\\n})\\n\\nTest.assert_equals(after_n_years({\\n\\t\\\"Adam\\\" : 0,\\n\\t\\\"Eve\\\" : 0\\n}, 800), {\\n\\t\\\"Adam\\\" : 800,\\n\\t\\\"Eve\\\" : 800\\n})\\n\\nTest.assert_equals(after_n_years({\\n\\t\\\"Ambitious Old Scientist\\\" : 87,\\n\\t\\\"Ambitious Scientist\\\" : 42,\\n\\t\\\"Slightly Concerned Young Scientist\\\" : 23\\n}, -35), {\\n\\t\\\"Ambitious Old Scientist\\\" : 122,\\n\\t\\\"Ambitious Scientist\\\" : 77,\\n\\t\\\"Slightly Concerned Young Scientist\\\" : 58\\n})\\n\\nTest.assert_equals(after_n_years({\\n\\t\\\"USA\\\" : 243,\\n\\t\\\"Person\\\" : 27\\n}, 0), {\\n\\t\\\"USA\\\" : 243,\\n\\t\\\"Person\\\" : 27\\n})\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[0,0,0,0,0,1,0,1,0,1,0,1,3,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,0,2,0,0,4,0,2,3,1,0,1,0,0,2,1,0,1,0,0,1,0,1,1,1,0,2,1,1,1,1,1,0,1,2,0,0,1,1,2,1,1,0,1,0,1,0,0,0,1,0,1,2,1,1,1,0,1,1,1,0,0,0,0,1,0,3,0,1,0,1,1,0,2,0,1,1,0,0,1,0,2,2,0,1,1,1,1,1,0,0,2,0,0,2,0,2,1,0,0,1,1,1,0,2,0,1,0,0,0,1,1,0,1,1,1,0,1,0,0,2,2,1,2,1,1,1,1,0,0,0,0,3,0,0,0,2,2,0,1,0,0,1,0,0,0,2,1,0,1,2,0,0,0,0,0,1,2,0,1,0,0,0,1,0,2,0,2,0,2,2,0,0,0,0,0,0,0,2,4,0,0,0,2,0,1,2,0,1,1,1,0,0,0,0,0,0,0,0,3,2,1,1,2,0,0,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,2,0,1,1,2,0,1,2,0,0,0,2,2,0,0,0,0,1,1,1,1,0,0,2,1,0,0,0,1,0,1,2,0,0,0,2,0,0,0,0,1,1,1,1,1,1,0,1,2,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,2,0,0,1,1,0,0,1,0,1,0,0,0,1,1,0,1,0,0,0,1,2,0,0,0,2,0,0,0,0,1,1,1,0],\"rators\":[\"K96FwtfDDN5WM4Bb7\",\"gb9rvGus2Jv7bjZSs\",\"FiaTpm7ehfDv43wSG\",\"Hb8RjXggCpRMWoe7C\",\"n3AKgFWfz53ZXmMPj\",\"tAF9Gf6PiGogbZuWs\",\"Jqk2uJZZxEv5wZFze\",\"Xnh3dGwc4dgBMCWCx\",\"AasGs8AeX9Lcb9xJn\",\"N2wnZXkhDH86mgjQ8\",\"u5u2YpHXiNgzDNJdX\",\"mxX4rH5ELYkdZ2Mbw\",\"yAouD3PxzED8a4gap\",\"qAEumdjLRx2AGAmzw\",\"9Ly8afdtofp8DXzrt\",\"2fxapKr8XGdNeaKi2\",\"zg8GmMSP2LkHBtAzy\",\"kBmhcwkCqxiy4GwiZ\",\"C4QntmkYtB89GNtpd\",\"nnFa8YjQpySGC47zc\",\"j2wcHGHmPCHbaQEye\",\"zd9FLSzsGz3evKafy\",\"ArWzhxZEjsxjGF77p\",\"3LiSLdtN58n46NEqg\",\"Tpg3ek75vt9MrhEHZ\",\"8JyqsSbN2FJXPr3cw\",\"W44bWWoMGHLdya44F\",\"ab7BsQuhDo3QgE6bh\",\"a5XHKyCxZFP8XY7pN\",\"LTjNwqgAa26kzq4rD\",\"Yp7uvStL97cC9fKkY\",\"QhajydAGnCEJ98LBN\",\"u5jLXaWAKo7K4JvTR\",\"mZnXCe6hcnbv3DNvp\",\"Q7Yxda7dqKeYPs2Db\",\"CBXLutgEKHKvbgE3h\",\"4CFzv558qbGcpQwc4\",\"yabtHTtycsWhcGBfD\",\"Wv5c7WsK6R8yb4mTt\",\"ey3CASd6Je5LEJzfB\",\"3hLoXHvMToFhQeBFf\",\"YPKzNci5Axs2pPCBx\",\"HMDstWCacD9szEeBY\",\"TPrfNreYTj6pQQBh7\",\"XgRXeb4YyZqmiMTLe\",\"GpqG4PYfnaN8zdM2z\",\"zC8WrPp5BC6c2exrW\",\"pwWtbXEjzuvrhEGwt\",\"bC7yAKktHb63ReMBf\",\"6abffx8jQDCf7kgvb\",\"tmB8Xatt4AstQSWWv\",\"boMXxa5zxP6yJHTje\",\"HQxp7NcdvF92G7bYS\",\"svZJaYSRLJkQjRwDq\",\"hnyhBFWwNCz9mDfSi\",\"jeuoearPPTcGPgXhf\",\"dHZqT6h4JMwk5fPC8\",\"XbxHXmh5ZmRN2gw3K\",\"E9ttMPTkLkKG6nZrg\",\"zGBTg8pHNJjuPXAA5\",\"YTRAyZFtn9m68HBLK\",\"2innwjWqxJHo4eRGh\",\"Cyd66Eo9xMehZzgvo\",\"JmWyLwQ4FwwPLCjgB\",\"Egi5Gr8rGnSH5D2qA\",\"ConPWgfvSgaeR2KRw\",\"w4NRttjXgRXJEZFgK\",\"nfXGHENb5md7m355s\",\"moe5MBQvP2NzYfWEc\",\"RosFXZYJkcRwjkaog\",\"gudC5KZrykfdfGD3J\",\"M8dQuMrEpP8Hc3tHN\",\"vwoWuN6oLdXs7eC8p\",\"f4aZczrA8BPpdPxBK\",\"xxGEyjQLHJPZzxQXS\",\"PhceyfmFntJcn5Fhf\",\"oKNAZ5BNeNWyvkiiB\",\"Ycj4iTJGFyvC4bXek\",\"WoKygnR2BoTuSG9y5\",\"4tgBydK887PitgAoi\",\"yKttxy9JGn5Jzwuj6\",\"J5T8gZqiZXFuFDTQ7\",\"7gsyqgMhbByy34TQB\",\"pfgcN6p9AtBZE7DEL\",\"pDBjKHH2azj2js4SB\",\"N57qgAhDZ2fsRtmqq\",\"4uPCFC6LBJYZ74uYu\",\"qAby4AWXmTNeusvg3\",\"NMEDQhGCKoQQwbmez\",\"eebeY4dPvLYcmzy2v\",\"hAQN76ynEpNyKE6LQ\",\"uygmBem9t6NgSnCX2\",\"GaJN4d4TXkunxgigh\",\"AXcnPX68zdMiLNSmu\",\"gAy3PaMpC5gjDZhKh\",\"8BFSTCnoe2QggN64c\",\"kvR2cWXYZYR7TiLXx\",\"wmiKeocyx5AvLxRbi\",\"N7P4AnS8nzK4oupHv\",\"hS8WBiFoAjP5Js6Wv\",\"8WeJLyNE4h6nJ2dNh\",\"wdoG642oE9cm8y9aH\",\"aRqQ42J5zqCmBNd8w\",\"srC8SN3W4FT2Z26zp\",\"vLrq4dEDMM2wd68Dc\",\"9LLN4tbHA92uRLfHq\",\"gv5xGeXBT73oknz9p\",\"v8iedwMBcGiN2PHGM\",\"PrqEB7CaZEJWKejRZ\",\"orFLgPDw9H5MDzmwo\",\"g5HmbDCH36PdPd6aR\",\"yZvzB3qFb8pkHy4dg\",\"LgNA3FaYgZjajngzv\",\"cR3ibTMxLyEdDFCHY\",\"g4NCSxxHqHCGMpWwT\",\"sMcFMPkMJC4Kh6ymj\",\"d4Myxr6T992RFYJnx\",\"Hantb9DenwrBHk5tv\",\"GJfqjgFShBiHSTiaP\",\"s2ZMtR9deh6Kia7pb\",\"erEunWkRveQoPZyTC\",\"68r3J5vGtfW7p7qko\",\"C9LKGu2g5hSijvDzA\",\"kHMvbWa69czPnSKWg\",\"vtkNNxHaef8p45i3b\",\"puCobPgduCEZMXu69\",\"c9nu6dMCYHn5NoGFZ\",\"KRSKj7ikX2ytWFmod\",\"gJYuGdkXEWWmGRLzu\",\"YZsZjfvd3PnLhDJrR\",\"94FLQj5fEsSg4E498\",\"ffjnHrx8Ym7A7pQWe\",\"hqiTnCHZxYu2nvNK5\",\"X74H8PYX8XYkrGRQc\",\"FEYpu9RWysAgW3XnP\",\"XrqNzJ2FRG8HnGiR6\",\"Fk9kLwoG4Brf4KsKf\",\"6SKDJwXpev4qPSzgM\",\"aEm3Wvj2rFYRL8Lrb\",\"5kEyLPjTLrt7z2YJZ\",\"FovJzwmhALjb7ouFm\",\"veAhgEKubmGCuoCyh\",\"DEDniTrstQYGounXT\",\"tRA43bWeW9bLciKEh\",\"B7xNs2GQLTqNcHhgf\",\"rzF2F7DgSjgJrneo8\",\"xG4jFH32NX5WP3aMx\",\"EfuBzbisdKE5weiHa\",\"kYWb8BwpKwunQkxeX\",\"a9pr6B8yNaXayoDiQ\",\"di2hhADLx59Bj4ewM\",\"9pzFiFK3ANLjQfnr2\",\"SzdT9nsTbXE4ahFsv\",\"FzxTj4GuujhwpZM7y\",\"mGzrqcrJYviuy5qn4\",\"AF6LgdKhEdzwgRJom\",\"7dQYiDeTcMztbGyso\",\"YcCLwitFMAEJSnxAW\",\"QpZ9b8ygwameoA97h\",\"kjvgTyRFyKHv44DcH\",\"sDRY37TfoncsA2FSR\",\"9EgyK7J5SWiYXCGk4\",\"GtXBzTn4QLYRcb6J2\",\"jufL2dZQH8tBJajpr\",\"Stye5FSYwYNbhFHgR\",\"NG8PWBSjsM8mMhQEq\",\"JRacQYm77Ltir8aK8\",\"5HCu9Ydd86QgHDRNP\",\"66a9xX73nmTEuKs9k\",\"Z4dHig4b5MK4beJYs\",\"AkNdYK2xbbmDcZrjM\",\"5JyY5eDxizCH7TYT7\",\"So6PHm74mfJuY2WTs\",\"2CRF2WT69Z7T72uBj\",\"Yg5KsgKxN3tWmuEKG\",\"7Z9KdHmzkoF3TQC8s\",\"3ahu3txFTAEibkgRt\",\"Lfut9z3euZ3odxFcH\",\"H4abACFDH5t8CnnyH\",\"3eLqLYh2iPZuShtMY\",\"3sGiT8qjdkzqinpde\",\"Q6gEE9dG8ERy2Xu3c\",\"a777e8chPvJkY3tKa\",\"3cF6NXq3ZEwdkgSjb\",\"G2pMfCik8KtdaSNqr\",\"WWD6uwvCr54JJGu5S\",\"p3zah7ZzLWs9j4NyE\",\"2ptN2mhjFwFcHyPZd\",\"ai8HyfiT9DYFrRGim\",\"3BrMsGs4QZJFKuvPz\",\"KLmLKaJPfsYxp42p2\",\"Br9aaArg7qJLcNdhP\",\"aPLuemxzZ5iS57NBQ\",\"5AHe67SapnPQeESpv\",\"DrkR35NqnP9NDLbq6\",\"6C94M4PPHbBumAuja\",\"M23Yf6rufJzaSYmxL\",\"eMuCpJ2spXWkJjWNz\",\"dXK7tiXRSEm5kjitv\",\"vuGJmyKLHtAuSxWLF\",\"uouMMdEWBuLBWPbzr\",\"KdYQN3KAT2DyTzT2a\",\"dj5AyG5fWP8FdsSmZ\",\"kZApEZB6W9qkm7yC7\",\"FRN2W8RYpJ6GPhgRy\",\"mmjoLhCivx5pjfbWw\",\"dj5xjEAMBnDiXNpWN\",\"X8BW96KGWpZAiFeDg\",\"gZCBY2gP7xHRy5JzG\",\"4bnRYgbirDp5unwGQ\",\"75EzwsDHG7mD9EPTZ\",\"i5iePG5GqhJJ8HEoB\",\"oBcs8GLX2ZFLXQy8y\",\"TTgP9jcqGxCfKotZ3\",\"Xj6R2zqhgumffQCAN\",\"iojEnnY9FsMfYzp6f\",\"hRiMXDZNAzyPd5tpt\",\"TPhfpB5tzQWSSn67n\",\"SkQcb2sRn4as5KpnN\",\"iCDqhZGvszrXpDRuW\",\"DTyNcDkiScCjgJt28\",\"DJdsqmTeAGDwrgYoZ\",\"WpNHMgfjZE8aNN2MP\",\"zigHw4RqWudQvG7sv\",\"dSd7wHgXGQeG5BQ2P\",\"ta5CrWnBCRusD2WMo\",\"q6QsMYNMpPNtmyTeW\",\"aKzYNPqBqb3J3ZgyD\",\"u7i7WPM63n42r8R8o\",\"CweSNtrMCbkZLY2Zj\",\"dKpesT6tnCimdoQjw\",\"fTNQmMvTZhhiGBCMe\",\"DkeEd2uhXypnPDnNT\",\"NrRa4TS6uZR9xuXRt\",\"bmthyKcDF922zNqxK\",\"AwJD8PFqFD3Y8hy2T\",\"yjtdwc2AC4jA2RWtn\",\"HqmxnQJM66Y57twhn\",\"Q9afpRu3u8zuWuzLQ\",\"wCXRmtaqTLTT5S3ce\",\"6HgMANhu6WiGyXSGN\",\"zXgwEs94QFkLraLMH\",\"DDD5tzD2m8bcntBB8\",\"GWjEcCYSqDNZS9rQN\",\"TjeuzxKBd7b4ZajSs\",\"QPEejhBicc4eB66xF\",\"qD2LrwaDrSdiybLKY\",\"CWnZYFNAzm5K8NiiC\",\"58F4PZvbak6BGMAs2\",\"rGA5sQC5vSaqCmh6E\",\"8aEGGQPkGesWwoaom\",\"NP2RxM3eBd3drnDwP\",\"xjyixzXzqqqTfJARd\",\"CyzskHGsC6WSmYrLu\",\"TzEDcbz2PZM4Cfgit\",\"Y2Y5CRMMPmdsKCSwL\",\"Kh3Pc2ZRusurLaMyP\",\"RkyCNqfDeSrR8TLmA\",\"DPi9QGLctq2y76KuE\",\"Cybtjz3cF7RgoiqrN\",\"QRv96jmNaYsWkxQEG\",\"kNrnnMxhFZztMTBAX\",\"rrSC943cCKNG48sH4\",\"a2b7nwxfzCiM83eci\",\"RCzpsCinz5SQnBAta\",\"7K4emAv8FE9xcDNQy\",\"wRttWTM59y8m5mx7x\",\"k2Eo3wyfZZ6KxvKhN\",\"PBnvAuiKXwjqjKG33\",\"sKfrD9gjCDHuqLzSk\",\"iY25XNrJX2giBLvnd\",\"4hzd4qde3g9We8N4E\",\"NRCH4eiebS7LBjSCa\",\"RGMbFMZXJr7DhcAJy\",\"oyKcm3zqdy8Ko5P5d\",\"AaKWw8amcFYLrEpNz\",\"j7ebNFtte6fSkMWjj\",\"qaPjAANdnxFnWfj5d\",\"HuNF3xTBzmatyGSTm\",\"J3upzLHuEwXH7Z2hx\",\"FuYTQcDNjct58rqPa\",\"dky93oMkJsJjEJKk2\",\"6428wKHtwKkFdvBs5\",\"iF4tdvn5sA9CM4T6T\",\"dDFzTqzPhpkeTcG2b\",\"dYPkStFnLvAMsHSzZ\",\"YRAzEBJoLvSaiPtYx\",\"DAhoDmrLmkoRsJhRx\",\"s4YHxEDBTTq5EBMRs\",\"nJXgbSQozcoE8Wn4N\",\"EfxwqhYdapX3dMQC2\",\"CQhaiZqQcP87YteSG\",\"MnrmRMy2PP3Mk4sSY\",\"vgT3ehH2o2KC94NsY\",\"Ds7L5bksw2QRHjrKL\",\"9FCeFzjPA4jrQ7oHW\",\"rJGeRSCjGzRuYfHZS\",\"5XiuAqicKD4hBdu63\",\"Tf7TJFSPktJBgLA4k\",\"7D76ZPLjgjZideoy9\",\"HcdukZiuzgvoHjjz3\",\"cZccqzRQ9GgjQF6Az\",\"RSTdK2S8CecymSS6h\",\"wypdvuJQZB2TFyb2g\",\"igLmeTgCMEPu7fQTd\",\"uN5t57RETi5y2z5W8\",\"enmGKZK3YpeBA2rSS\",\"DpnYcMphntjsQ96qg\",\"JS3hNM3XXkxPdg3yk\",\"5hQnRWiKkhgKJXNMP\",\"QTZTmQEmkPv5sxQL4\",\"Krto2sGMfGWBLcL7n\",\"v4nbGdoqJwuDBoocS\",\"xNCLJDm9Bni6gByMz\",\"5S9nX4rKsnCcnv4Cz\",\"buX4mCQhtXCfBjeno\",\"Wp5CZXqvjwTpt5SKN\",\"MyyfuAJrdaoBE2xGk\",\"pPpmP7xeJzGgK362R\",\"LQxof8pGabGuWP7Gn\",\"5wCHxMQ5Km2bjqcGZ\",\"AFfw7cGg83uYk2Miy\",\"KEmTti9Tza8A2FLQW\",\"7KsymxNN9S8ZG5oQe\",\"F7wta4nHmabMr9dfd\",\"eYfPWvZwnJQkHbSTK\",\"srJ34BaybkQh3qRkM\",\"ZyrfhDTZHb8LymH5b\",\"TmM3AN7g3fkh69ycj\",\"PC3pLs36zNzpRDSuE\",\"T78CHCScDRZjf5Cjy\",\"fW3mQfbTKhp7enxGP\",\"vCxuabDxEv9YC3Szb\",\"q9FfWNiMDKRiaCJ5j\",\"yEvXDzXnEPNz6tTCK\",\"Cg3LKtEAJpsrdWroG\",\"YwAvPdqD6Xi2qjapZ\",\"2MjzJ7yxh3eT3xbng\",\"XD5nmvKQchKezPXhy\",\"YaybbCdfjFQmsfgtp\",\"HBuJYgW2eRBJp9FoG\",\"uvLimfW9x3bCp7huQ\",\"CHvzhtXnv8HTbPQ56\",\"2QGRoQn2dRq3scu7k\",\"gjiu8kLnHYxe4HoBN\",\"T6iBEE2jp7f7iEF2P\",\"fdyejapW3NWN7utPX\",\"4TmgHkn5vqyHK3sYC\",\"mvJBakQ35CWAnbbEZ\",\"T6Rm8mREPMZSftzrC\",\"jkbavR2ATFJcpmo8M\",\"iYXdNw7tKcgA3QwBX\",\"eHcgvkTGsH7ZziqBo\",\"8PwfYqoDQFThzNtvf\",\"sbJcFfQjQ59Wfg4Cd\",\"a2Kmh6ekWqQQooHiQ\",\"DFpZcskPncmo7fuzR\",\"FxbTzThBiTnRzfirA\",\"sHjfbGQGLHE6JR6qu\",\"JiSpvq6C7azQEmENc\",\"Afnps7TJQuS9sipMb\",\"gKnWjDjwrJh7MK2df\",\"cdXmwjupCXSvJTSNo\",\"yXGiiSAR5nBHnH3yr\",\"d9LBRxvADNBB5QJMB\",\"x2Cz7S8rCKJqCE3Xe\",\"7q8oBsCHwn48Ppnrq\",\"PTDFuxAzou7W6asWt\",\"5QN8R22z43SrwoHDz\",\"B4y8aoyXJtskYPFEL\",\"dzS6WBTMHyFEag6Fp\",\"5nbHH4eApn6So9h2n\",\"uK58g2EXxqxTaB2iA\",\"arWdYjT3J9QKzoPLd\",\"wjc4iejpErBhxWwHo\",\"suArq5BbSy7gD6xri\",\"rF97GDLqCgynr7BaD\",\"afvP29FhRou2bTaav\",\"vAbK8sCfKyFC78HYg\",\"BdnE4RS5puoxo92mA\",\"hRfdHT8bWztZuCqzi\",\"mw9464S5dnenqzvpm\",\"tR9grPBLncwacBTzr\",\"Ne8mK9DDHG8TRkoxG\",\"fMp8sPsKSECdfgF9j\",\"M2gFMJkocQSY6bsFR\",\"gbGzZz5Yq5hT357v8\",\"r83jJeskFETo3RLhZ\",\"jWbd7SYDzLPjc9EDh\",\"NzbRqGWspQnWMoDrF\",\"Wi4H6ayKsNDWWQCG5\",\"M4vq8ATaS9Jg5X7iP\",\"4akHBgnDEDj3Rkv5n\",\"mSXdgt48tnZ2xWAuG\",\"K6S8HCswXg68EWHmo\",\"3SgSNoAB3sxaYeT3w\"],\"total\":434,\"quality\":[1,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,4,5,5,5,5,5,5,5,5,5,5,2,5,5,5,1,5,1,5,5,5,5]},\"flags\":0},\"summary\":\"Given a dictionary of people and their ages, return how old the people would be after n years have passed. Use the absolute value of n.\\n\\nExamples\\nafternyears({\\n  \\\"Joel\\\" : 32,\\n  \\\"Fred\\\" : 44,\\n  \\\"Reginald\\\" : 65,\\n  \\\"Susan\\\" : 33,\\n  \\\"Julian\\\" : 13\\n}, 1) ➞ {\\n  \\\"Joel\\\" : 33,\\n  \\\"Fred\\\" : 45,\\n  \\\"Reginald\\\" : 66,\\n  \\\"Susan\\\" : 34,\\n  \\\"Julian\\\" : 14\\n}\\n\\nafternyears({\\n  \\\"Baby\\\" : 2,\",\"tags\":[\"arrays\",\"numbers\"],\"timestamp\":{\"$date\":1579815197475},\"title\":\"Ageing the Population...\",\"quality\":4.558139534883721,\"family\":[{\"_id\":\"xtDkfWxEh2hbmAHvn\",\"language\":\"javascript\"},{\"_id\":\"zY8WSKGcqmkGd73Wr\",\"language\":\"python3\"},{\"_id\":\"5KybGucErnEndcS5j\",\"language\":\"ruby\"}]}}"]