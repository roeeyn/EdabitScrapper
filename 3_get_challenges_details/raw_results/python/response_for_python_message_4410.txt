a["{\"msg\":\"result\",\"id\":\"923\",\"result\":{\"_id\":\"T2G9LR2qNw4rFNu9t\",\"author\":\"i_iMatt\",\"authorId\":\"yr822PZmmiDDenxpB\",\"code\":\"def chunk(array, size):\\n\\t\",\"difficulty\":1.4666666666666666,\"familyId\":\"SMLRe6KYy7xTS4wwR\",\"instructions\":\"Given a list and chunk size \\\"n\\\", create a function such that it divides the list into many sublists where each sublist is of length size \\\"n\\\".\\n\\n### Examples\\n```\\nchunk([1, 2, 3, 4], 2) ➞ [\\n  [1, 2], [3, 4]\\n]\\n\\nchunk([1, 2, 3, 4, 5, 6, 7], 3) ➞ [\\n  [1, 2, 3], [4, 5, 6], [7]\\n]\\n\\nchunk([1, 2, 3, 4 ,5], 10) ➞ [\\n  [1, 2, 3, 4, 5]\\n]\\n```\\n\\n### Notes\\nRemember that number of sublists may not be equal to chunk size.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(chunk([1, 2, 3, 4], 2), [[1, 2], [3, 4]])\\nTest.assert_equals(chunk([1, 2, 3, 4, 5], 2), [[ 1, 2], [3, 4], [5]])\\nTest.assert_equals(chunk([1, 2, 3, 4, 5, 6, 7, 8], 3), [[ 1, 2, 3], [4, 5, 6], [7, 8]])\\nTest.assert_equals(chunk([1, 2, 3, 4, 5], 4), [[ 1, 2, 3, 4], [5]])\\nTest.assert_equals(chunk([1, 2, 3, 4, 5], 10), [[ 1, 2, 3, 4, 5]])\",\"language\":\"python3\",\"quality\":4.954545454545454,\"summary\":\"Given a list and chunk size \\\"n\\\", create a function such that it divides the list into many sublists where each sublist is of length size \\\"n\\\".\\n\\nExamples\\nchunk([1, 2, 3, 4], 2) ➞ [\\n  [1, 2], [3, 4]\\n]\\n\\nchunk([1, 2, 3, 4, 5, 6, 7], 3) ➞ [\\n  [1, 2, 3], [4, 5, 6], [7]\\n]\\n\\nchunk([1, 2, 3, 4 ,5], 10) ➞ [\\n  [1, 2, 3, 4, 5]\\n]\\n\\nNotes\\nRemember that number of sublists may n\",\"tags\":[\"arrays\",\"conditions\",\"loops\"],\"timestamp\":{\"$date\":1604936618163},\"title\":\"List Chunking\",\"stats\":{\"completed\":{\"total\":118,\"ratings\":[2,2,2,2,2,1,2,2,3,1,0,1,2,1,2,2,1,0,2,1,2,3,2,2,2,2,0,3,2,2,0,1,2,1,2,1,2,2,2,1,2,1,0,1,1,2,1,2,1,0,1,2,2,2,2,1,3,2,2,2,0,1,2,1,0,2,2,1,2,1,2,2,1,1,2,1,2,1,2,0,0,2,1,1,1,2,1,0,1,2],\"quality\":[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5],\"rators\":[\"yr822PZmmiDDenxpB\",\"Yp7uvStL97cC9fKkY\",\"3pxHTZBsv7MKzFG6Y\",\"8PwfYqoDQFThzNtvf\",\"8JyqsSbN2FJXPr3cw\",\"cAP3n5NY64uoMwzRR\",\"aEm3Wvj2rFYRL8Lrb\",\"s5M5RvgqR9BhB9JoC\",\"fznzd3qnvtbFkkizz\",\"RGMbFMZXJr7DhcAJy\",\"J3upzLHuEwXH7Z2hx\",\"gb9rvGus2Jv7bjZSs\",\"QRv96jmNaYsWkxQEG\",\"zd9FLSzsGz3evKafy\",\"FEYpu9RWysAgW3XnP\",\"oBcs8GLX2ZFLXQy8y\",\"rfyEkETeoS96QNH4e\",\"iS5BrkGLzJyPK7nKt\",\"gXTAie79kiw28tx5u\",\"gJYuGdkXEWWmGRLzu\",\"DPi9QGLctq2y76KuE\",\"HF28xZKSLM9wEuqNg\",\"w2HhxvSLmDhaGCAjE\",\"PXAcsKkssS2yLyDv2\",\"p8qqFdJ3FSk5x9z3G\",\"buX4mCQhtXCfBjeno\",\"HqmxnQJM66Y57twhn\",\"5S9nX4rKsnCcnv4Cz\",\"eYfPWvZwnJQkHbSTK\",\"Jqk2uJZZxEv5wZFze\",\"yjtdwc2AC4jA2RWtn\",\"GGdmhAvxXhqhhibJN\",\"qAby4AWXmTNeusvg3\",\"KJCDwGkoXh8qtbbKr\",\"CHvzhtXnv8HTbPQ56\",\"T2vhHPhRR96hRizq8\",\"YcCLwitFMAEJSnxAW\",\"cR3ibTMxLyEdDFCHY\",\"J5T8gZqiZXFuFDTQ7\",\"Ds7L5bksw2QRHjrKL\",\"iojEnnY9FsMfYzp6f\",\"srJ34BaybkQh3qRkM\",\"2EbDCCJJvCfKkbYia\",\"PWgzeK859suojbrRx\",\"ft2ZBwQnre9WQA4js\",\"sbJcFfQjQ59Wfg4Cd\",\"jL4y5fTJAMBjhZmko\",\"5HCu9Ydd86QgHDRNP\",\"66a9xX73nmTEuKs9k\",\"o4ixjQGSaYqA2JoM4\",\"T6iBEE2jp7f7iEF2P\",\"DEDniTrstQYGounXT\",\"PC3pLs36zNzpRDSuE\",\"ADycYubh8WTMCXhgR\",\"yod5YhKtPqw2GfG9B\",\"jkys684AAfPRxrYaD\",\"AasGs8AeX9Lcb9xJn\",\"eHcgvkTGsH7ZziqBo\",\"AJexRBN9cYQmqvYu6\",\"5XiuAqicKD4hBdu63\",\"9Ly8afdtofp8DXzrt\",\"hWWxyRsd4B8GXAn3A\",\"JhX7jvtpwNyxcc39m\",\"3cF6NXq3ZEwdkgSjb\",\"mvJBakQ35CWAnbbEZ\",\"8BFSTCnoe2QggN64c\",\"sHjfbGQGLHE6JR6qu\",\"BrTDhPJcACL2bsrpJ\",\"tAF9Gf6PiGogbZuWs\",\"E9cFrAcqJKTohtX2J\",\"Afnps7TJQuS9sipMb\",\"ey3CASd6Je5LEJzfB\",\"ZM482kJ3XN2A9pmgB\",\"AdWGcns9dFC3azGKp\",\"EfxwqhYdapX3dMQC2\",\"8LqTJugTk5Sn2ZAS7\",\"AFfw7cGg83uYk2Miy\",\"QvEXmSEo3ANp3yPyH\",\"eMuCpJ2spXWkJjWNz\",\"2PufnQcsHsfymufX3\",\"T6Rm8mREPMZSftzrC\",\"dzS6WBTMHyFEag6Fp\",\"4TmgHkn5vqyHK3sYC\",\"d9LBRxvADNBB5QJMB\",\"4Lwjr34ypKNQNQCar\",\"MKT7khMBGXzA22ykf\",\"pduNK68oazqQTtbLp\",\"wjc4iejpErBhxWwHo\",\"yAouD3PxzED8a4gap\",\"NzbRqGWspQnWMoDrF\",\"mxX4rH5ELYkdZ2Mbw\",\"RoGGD5cpHb4ftdLDv\",\"3nied3n8KG8RSNixH\",\"2fxapKr8XGdNeaKi2\",\"mw9464S5dnenqzvpm\",\"LWCzZ8mb8gwrRNGfq\",\"5QN8R22z43SrwoHDz\",\"9pzFiFK3ANLjQfnr2\",\"X4rzfxGgxx6CS7Bpz\",\"Wi4H6ayKsNDWWQCG5\",\"uGuS9YRXW2nj4p6zf\",\"rCrbqMiaGPgHYTNxu\",\"Qyfyyw6oC4EHAndzo\",\"rrSC943cCKNG48sH4\",\"ruzwBPphPDRgLXdnP\",\"E2hpke7mHxAWsw5t9\",\"8uiLiJcmWxWe6qw65\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"NWCnTEAA5Bqm8Gzk6\",\"language\":\"cpp\"},{\"_id\":\"AWEX2eYNWGEsig4Fc\",\"language\":\"javascript\"},{\"_id\":\"T2G9LR2qNw4rFNu9t\",\"language\":\"python3\"},{\"_id\":\"pHKhdWfkz6DiFEjN9\",\"language\":\"ruby\"}]}}"]