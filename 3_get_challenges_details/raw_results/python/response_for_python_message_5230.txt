a["{\"msg\":\"result\",\"id\":\"1329\",\"result\":{\"_id\":\"zkKNmC66ASvSm5wJA\",\"author\":\"MyName\",\"authorId\":\"P7NmFbCJ5offXMRvB\",\"code\":\"def perimeter(l, num):\\n\\t\",\"difficulty\":2,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"xg6u2HRx8WAqH8RMc\",\"instructions\":\"Write a function that takes a number and returns the perimeter of either a circle or a square. The input will be in the form (letter `l`, number `num`) where the letter will be either `\\\"s\\\"` for _square_, or `\\\"c\\\"` for _circle_, and the number will be the side of the square or the radius of the circle.\\n\\nUse the following formulas:\\n\\n- Perimeter of a square: 4 * side.\\n- Perimeter of a circle: 6.28 * radius.\\n\\nThe catch is you can only use **arithmetic** or **comparison operators**, which means:\\n\\n- No if... else statements.\\n- No dictionaries.\\n- No lambdas.\\n- No formatting methods, etc.\\n\\nThe goal is to write a short, [branch-free](https://en.wikipedia.org/wiki/Branch_(computer_science)#Branch-free_code) piece of code.\\n\\n### Examples\\n```\\nperimeter(\\\"s\\\", 7) ➞ 28\\n\\nperimeter(\\\"c\\\", 4) ➞ 25.12\\n\\nperimeter(\\\"c\\\", 9) ➞ 56.52\\n```\\n\\n### Notes\\n- No rounding is needed.\\n- Hint: The Boolean `True`, used with arithmetic operators, counts as `1`, while `False` counts as  `0`. That means _(a>b)+1_ will return _1_ or _2_, depending on the values of _a_ and _b_.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(perimeter(\\\"s\\\", 1), 4)\\nTest.assert_equals(perimeter(\\\"s\\\", 4), 16)\\nTest.assert_equals(perimeter(\\\"s\\\", 9), 36)\\nTest.assert_equals(perimeter(\\\"s\\\", 13), 52)\\nTest.assert_equals(perimeter(\\\"s\\\", 30), 120)\\nTest.assert_equals(perimeter(\\\"c\\\", 1), 6.28)\\nTest.assert_equals(perimeter(\\\"c\\\", 4), 25.12)\\nTest.assert_equals(perimeter(\\\"c\\\", 9), 56.52)\\nTest.assert_equals(perimeter(\\\"c\\\", 13), 81.64)\\nTest.assert_equals(perimeter(\\\"c\\\", 30), 188.4)\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[3,3,3,3,3,3,3,3,5,0,2,2,3,4,2,4,4,4,3,1,2,2,3,1,2,2,2,2,0,4,2,1,3,2,2,2,2,3,1,3,3,0,1,3,1,0,3,1,2,2,2,1,3,0,1,1,0,3,0,1,3,0,1,5,2,0,4,1,2,3,0,2,2,3,2,1,3,1,0,1,3,3,3,0,1,3,0,0],\"rators\":[\"8PwfYqoDQFThzNtvf\",\"8JyqsSbN2FJXPr3cw\",\"tAF9Gf6PiGogbZuWs\",\"heJWwFB8uHebYcFGx\",\"J23RcmzbdtBbPCTjT\",\"TM2t3Le4qPcqSnzKX\",\"Kf2z6kZ7hfzg2YyEJ\",\"aEm3Wvj2rFYRL8Lrb\",\"oiXKoeuNNMtG3ixaF\",\"yyDYNCFnvD7DHRgCG\",\"tytQfvk4jvE4dyFGk\",\"mDWNyaaQ9hvPCRzSd\",\"Nb6LYPoQP6KJZt8mz\",\"62agN2oNiy8R7CxLy\",\"4fhjJBvLBWh6QeSih\",\"NojQykDfP7WjHckg4\",\"KZ2xddpM2f9JRaryB\",\"qzmgeTd3jwjKtrAgn\",\"s5M5RvgqR9BhB9JoC\",\"w3xpYGxSeu2yKJ5mm\",\"WzEhzQcMwc4sw8z7T\",\"gb9rvGus2Jv7bjZSs\",\"8sNv5PTHa7XQ8bNqR\",\"SgZ2t9xFuRqdJGofp\",\"5dHucvf2qBYyKim7X\",\"xn7uGNKeAwPEkP9oA\",\"Ecg4m7srYGgZsb4Ck\",\"ywk3XGvcmpTgRxwZa\",\"ypagZTh36kMRyJTxF\",\"gJYuGdkXEWWmGRLzu\",\"RuvsqfBoAzmjPyoSW\",\"pPtmnJ7q9QchoG2Jq\",\"SSqGKf3pKQZtjhaSe\",\"ZD3sFkhuCNoEHEekx\",\"5Z4o2pWDzmbpw4JHJ\",\"xhCe8aAuimqGyiWQe\",\"DNACg4rcgZsPtYGZ8\",\"cvnFeJtbpdk5AyAMM\",\"jPMSEiSadrnrAGNeG\",\"6428wKHtwKkFdvBs5\",\"yjtdwc2AC4jA2RWtn\",\"HF28xZKSLM9wEuqNg\",\"585XRBCotKx6wh96Q\",\"iS5BrkGLzJyPK7nKt\",\"erEunWkRveQoPZyTC\",\"QRv96jmNaYsWkxQEG\",\"pDvFWMCD9fQwoBPcu\",\"KEmTti9Tza8A2FLQW\",\"Jqk2uJZZxEv5wZFze\",\"BrTDhPJcACL2bsrpJ\",\"J3upzLHuEwXH7Z2hx\",\"a777e8chPvJkY3tKa\",\"Yp7uvStL97cC9fKkY\",\"gXTAie79kiw28tx5u\",\"uJvcvnJDboT6hARXq\",\"R29kgJ9M7R4qqwjcE\",\"iojEnnY9FsMfYzp6f\",\"srJ34BaybkQh3qRkM\",\"xsDyJstYoBZRS8pJH\",\"oBcs8GLX2ZFLXQy8y\",\"cAP3n5NY64uoMwzRR\",\"cR3ibTMxLyEdDFCHY\",\"XujK3rHd3JcM9TLJy\",\"AFfw7cGg83uYk2Miy\",\"GGdmhAvxXhqhhibJN\",\"RnY25enEBE8T9P5GS\",\"AasGs8AeX9Lcb9xJn\",\"H9KZi2cjt4FwH7qog\",\"DEDniTrstQYGounXT\",\"HqmxnQJM66Y57twhn\",\"rfyEkETeoS96QNH4e\",\"J5T8gZqiZXFuFDTQ7\",\"MpfytGFYF77emJ3cT\",\"gKnWjDjwrJh7MK2df\",\"FuKzya2SdA4dfLWFi\",\"yod5YhKtPqw2GfG9B\",\"2PufnQcsHsfymufX3\",\"CdXigydGTBLgA577m\",\"T6iBEE2jp7f7iEF2P\",\"5NZEGBAe96KjpQS2C\",\"pPpmP7xeJzGgK362R\",\"5Dd7XwALvvMMwS4Fb\",\"e82D3DPDDHKj5xenA\",\"SmhY5Z5bm4EteTujv\",\"Ds7L5bksw2QRHjrKL\",\"9ivvGvJGvtQfigQaZ\",\"JPtcouLdRA7Han3px\",\"5HCu9Ydd86QgHDRNP\",\"gpGXTvjS2HrY9Skq5\",\"DPi9QGLctq2y76KuE\",\"Qyfyyw6oC4EHAndzo\",\"3FmgWjmYbvdHnNfxZ\",\"SFYgvsreMQixDnBeu\",\"jkbavR2ATFJcpmo8M\",\"9pzFiFK3ANLjQfnr2\",\"CHvzhtXnv8HTbPQ56\"],\"total\":100,\"quality\":[4,5,5,5,5,4,5,5,4,5,5,5,5]},\"flags\":0},\"summary\":\"Write a function that takes a number and returns the perimeter of either a circle or a square. The input will be in the form (letter l, number num) where the letter will be either \\\"s\\\" for square, or \\\"c\\\" for circle, and the number will be the side of the square or the radius of the circle.\\n\\nUse the following formulas:\\n\\nPerimeter of a square: 4 * side.\\nPerimeter\",\"tags\":[\"numbers\",\"logic\",\"conditions\",\"geometry\",\"math\"],\"timestamp\":{\"$date\":1598463418297},\"title\":\"Perimeters with a Catch\",\"quality\":4.769230769230769,\"family\":[{\"_id\":\"McqmxqdaKiBDFnnPj\",\"language\":\"cpp\"},{\"_id\":\"WEvqZTFcHeYzFn74c\",\"language\":\"javascript\"},{\"_id\":\"zkKNmC66ASvSm5wJA\",\"language\":\"python3\"},{\"_id\":\"YnZ7neYxtyQd647Yy\",\"language\":\"ruby\"}]}}"]