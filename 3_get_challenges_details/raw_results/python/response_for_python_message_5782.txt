a["{\"msg\":\"result\",\"id\":\"1603\",\"result\":{\"_id\":\"536BN4JhtgLb65TXr\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def switch_notation(scores, desired_notation):\\n\\t\",\"difficulty\":2.1095890410958904,\"familyId\":\"7q65rSQhzuymRYX9o\",\"instructions\":\"Create a function that can convert from **normal notation** to **tally-mark notation** and vice versa. In tally-mark notation, a number can be decomposed as the sum of `5`s + `remainder`.\\n\\nThe function will look like this: `switch_notation([current scores], desired notation)`\\n\\n```\\nEx.1 Normal: 3, 24, 4, 9\\nEx.1 Tally: 3, 55554, 4, 54\\n\\nEx.2 Normal: 2, 12, 2, 4\\nEx.2 Tally: 2, 552, 2, 4\\n```\\n\\n### Examples\\n```\\nswitch_notation([51], \\\"normal\\\") ➞ [6]\\n\\nswitch_notation([3, 55, 55551], \\\"normal\\\") ➞ [3, 10, 21]\\n\\nswitch_notation([15, 29, 5, 3], \\\"tally\\\") ➞ [555, 555554, 5, 3]\\n```\\n\\n### Notes\\nN/A\",\"lab\":\"Test.assert_equals(switch_notation([3, 55, 55551], 'normal'), [3, 10, 21])\\nTest.assert_equals(switch_notation([553, 55, 51], 'normal'), [13, 10, 6])\\nTest.assert_equals(switch_notation([51], 'normal'), [6])\\nTest.assert_equals(switch_notation([555, 55, 5], 'normal'), [15, 10, 5])\\nTest.assert_equals(switch_notation([15, 29, 5, 3], 'tally'), [555, 555554, 5, 3])\\nTest.assert_equals(switch_notation([3, 8, 8, 6], 'tally'), [3, 53, 53, 51])\\nTest.assert_equals(switch_notation([3, 44, 8, 21], 'tally'), [3, 555555554, 53, 55551])\",\"language\":\"python3\",\"summary\":\"Create a function that can convert from normal notation to tally-mark notation and vice versa. In tally-mark notation, a number can be decomposed as the sum of 5s + remainder.\\n\\nThe function will look like this: switch_notation([current scores], desired notation)\\n\\nEx.1 Normal: 3, 24, 4, 9\\nEx.1 Tally: 3, 55554, 4, 54\\n\\nEx.2 Normal: 2, 12, 2, 4\\nEx.2 Tally: 2, 552,\",\"tags\":[\"arrays\",\"strings\"],\"timestamp\":{\"$date\":1553212587667},\"title\":\"Tally Marks\",\"stats\":{\"completed\":{\"total\":152,\"ratings\":[2,2,2,2,2,2,2,2,2,2,1,3,1,2,3,2,3,3,2,3,3,3,1,2,2,2,0,2,2,1,0,3,3,3,1,2,1,2,1,2,2,0,3,2,3,3,3,3,1,2,0,1,3,1,2,3,3,3,2,3,2,2,3,3,0,2,2,2,3,3,3,2,0,3,1,2,3,3,2,0,2,1,3,3,2,3,3,2,3,3,2,3,2,2,2,2,2,2,2,2,3,3,3,3,2,0,1,2,4,2,3,0,3,3,1,3,3,3,3,2,0,1,3,1,3,0,3,3,3,3,3,2,3,2,2,0,0,3,0,3,2,3,3,2,1,3],\"rators\":[\"BkPgkDQGHm66X4Qai\",\"Jqk2uJZZxEv5wZFze\",\"8JyqsSbN2FJXPr3cw\",\"yZvzB3qFb8pkHy4dg\",\"gb9rvGus2Jv7bjZSs\",\"mNMQvcxKSSvqqMYCH\",\"tAF9Gf6PiGogbZuWs\",\"M8jrv2FfpMQp9Qzpx\",\"T3ZAuoMrJjvZwN55B\",\"ab7BsQuhDo3QgE6bh\",\"FikSPhcrHBpQ4CyGC\",\"MXjxGML2X75x64vJo\",\"kQH5b8MXJunh84Czq\",\"PFjMZGHNAPTkgd7tq\",\"B4pnNt3Se9GA4oy6W\",\"Wpn95NqWxncQrwNgz\",\"C9LKGu2g5hSijvDzA\",\"6u7yc9m6HuHGbHzph\",\"aXCm9vWqKwL9XFYoj\",\"AF6LgdKhEdzwgRJom\",\"yrCNkFYQBEDE76eFS\",\"td7qPZ7Lv4pEWT2Ya\",\"7g3vZaQXhLpxrajyg\",\"jYJ26SiLKBu5GRumq\",\"BFNm9gacwba9KyLFW\",\"jHrtWDGBhkbuWa7fG\",\"WkWyq9wMkZhXB6zsD\",\"AYaEkTWLMmfzpwejr\",\"JEAi9mG3vvBomJ3Yu\",\"uSh3aNxzD28jBuhxa\",\"ahWFxnaxt9bXSA4f3\",\"Xy2WidG4rw5Qy4tQz\",\"gMJhLdyw3tH7L96X2\",\"ctsv5RE4zm3PTub2y\",\"XKi8iZXBCHCaebSHh\",\"3XWw4ui5Tipb2Qz8o\",\"tKCgSWX7X4CWHMWGw\",\"x9A83cZkyA7E7utn3\",\"aCNWav8S8Try9RkC6\",\"cR3ibTMxLyEdDFCHY\",\"nfXGHENb5md7m355s\",\"T2vhHPhRR96hRizq8\",\"vuwheqp25x7RkBHXn\",\"9qNybX7WH2t32BBry\",\"TgjcWxsTjar7snQx9\",\"FgkYtHLxeD8pETJ8T\",\"nmeyrFbZpLR74iC7j\",\"BLSGCTrLcvRHndFjo\",\"Nj6FwgBtAXsaQwsM2\",\"HhnEZJXhdiaQeSDMd\",\"dvmrZXzqS7b6ruPXP\",\"2fxapKr8XGdNeaKi2\",\"EXZfPb8YH28EL8Rh9\",\"ouPtoRyNq8hKH2WkT\",\"hSfK7dhSiKdNjMbLr\",\"otXtuQygbcYATMZoP\",\"Jg8ZSRXe3NoDMCqGu\",\"oqGkxvASXq52iTDvp\",\"s5M5RvgqR9BhB9JoC\",\"HQxp7NcdvF92G7bYS\",\"qBaLGrm952ii9K23M\",\"HqmxnQJM66Y57twhn\",\"dLMwA7bAx3ArJoqC5\",\"Dw8RZgg5iHBuFrWwQ\",\"8aPJNKDxXq7884eJb\",\"dG5NsDpoWnGnKct2Z\",\"C4QntmkYtB89GNtpd\",\"8PwfYqoDQFThzNtvf\",\"K96FwtfDDN5WM4Bb7\",\"JKb5rhL6DKcCAypF9\",\"yoYQqaY6GszuTkNSs\",\"DLai9DxpZN6p5TPRX\",\"6Gndn45vMc9KrfEpq\",\"6ShafRStcvew4GfCh\",\"tK9oBgXjqPsPrGowj\",\"2innwjWqxJHo4eRGh\",\"u5u2YpHXiNgzDNJdX\",\"5J4tAkdA45c76xAfk\",\"4fctAnxyFRB8stPRQ\",\"MgwZXHsHk6rKhFxoT\",\"PytNZK9mNiRiZxPrm\",\"AasGs8AeX9Lcb9xJn\",\"4CFzv558qbGcpQwc4\",\"w3A7cBWyAfukk6xEQ\",\"aAFKLxcnBD2ZrdDnJ\",\"wZoxzQDbso9SMAPkY\",\"aEm3Wvj2rFYRL8Lrb\",\"mDWNyaaQ9hvPCRzSd\",\"ZNnsMeNkdDhHjSrZb\",\"YRstQuthRkFeBiXug\",\"EjbDDFRECrzQDkzrX\",\"kYWb8BwpKwunQkxeX\",\"Yp7uvStL97cC9fKkY\",\"gJYuGdkXEWWmGRLzu\",\"EXCpDkk5BLif3i5YE\",\"KdNDysEsy2TW5QRJ2\",\"gypNFmvBCE3xq5iNn\",\"HF28xZKSLM9wEuqNg\",\"yr822PZmmiDDenxpB\",\"9pzFiFK3ANLjQfnr2\",\"rgvAJFwfCeYoYnFTK\",\"n2BRY9X8899dcG8Bw\",\"v9KtC8YLbMWmXiW2H\",\"hnyhBFWwNCz9mDfSi\",\"DEDniTrstQYGounXT\",\"bJxaKHJqR82EWw8Su\",\"DrkR35NqnP9NDLbq6\",\"iojEnnY9FsMfYzp6f\",\"ekQh3jzgGLsEMbKo3\",\"ra7a6S3WLnLbXYq7Q\",\"zZDaXBxMzTCBhNkgL\",\"Ecg4m7srYGgZsb4Ck\",\"yjtdwc2AC4jA2RWtn\",\"ZrKCkX7xxGGZzauFW\",\"gSFJPsMXnqAog3Q9f\",\"iS5BrkGLzJyPK7nKt\",\"p8qqFdJ3FSk5x9z3G\",\"DPi9QGLctq2y76KuE\",\"spqXrjG3ZFa2j5uTR\",\"QRv96jmNaYsWkxQEG\",\"xn7uGNKeAwPEkP9oA\",\"dkcmCKwqApX5jBggc\",\"J3upzLHuEwXH7Z2hx\",\"gXTAie79kiw28tx5u\",\"DyjCBBvcoMytDxAr5\",\"oBcs8GLX2ZFLXQy8y\",\"cskLTASDeJiP9ozkJ\",\"cAP3n5NY64uoMwzRR\",\"RTDx9axf52kxhFjwZ\",\"f2CZ7ejHA73r9zdfH\",\"qZQxPQ2kaNKAMesHT\",\"GGdmhAvxXhqhhibJN\",\"PWgzeK859suojbrRx\",\"uw8E83imJYpQiiPpP\",\"T6iBEE2jp7f7iEF2P\",\"gKnWjDjwrJh7MK2df\",\"JhX7jvtpwNyxcc39m\",\"d8qtzoLB264iP8tdY\",\"2PufnQcsHsfymufX3\",\"o4ixjQGSaYqA2JoM4\",\"AFfw7cGg83uYk2Miy\",\"buX4mCQhtXCfBjeno\",\"yod5YhKtPqw2GfG9B\",\"8sNv5PTHa7XQ8bNqR\",\"ey3CASd6Je5LEJzfB\"],\"quality\":[4,3,5,4,5,5,5,5]},\"tests\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"instructions\":{\"score\":-23.05,\"rators\":[\"BkPgkDQGHm66X4Qai\"],\"voters\":[\"EjPLq3QSJdGQFJdgW\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.5,\"family\":[{\"_id\":\"deeB7yAgunvLKf4fJ\",\"language\":\"cpp\"},{\"_id\":\"ufYYJX5CsmSbXazcr\",\"language\":\"javascript\"},{\"_id\":\"536BN4JhtgLb65TXr\",\"language\":\"python3\"},{\"_id\":\"DkiXReuA4kBjeEu37\",\"language\":\"ruby\"}]}}"]