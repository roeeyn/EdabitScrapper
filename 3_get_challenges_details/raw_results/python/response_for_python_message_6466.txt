a["{\"msg\":\"result\",\"id\":\"1942\",\"result\":{\"_id\":\"cBzYRBbBA7gHwKpor\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"def secret_password(message):\\n\\t\",\"difficulty\":2.7088607594936707,\"familyId\":\"9azhcXsPi2oXCtF7S\",\"instructions\":\"**Mubashir** is going on a secret mission. He needs your help but you have to learn how to encode a secret password to communicate safely with other agents. Create a function that takes an argument `message` and returns the **encoded password**.\\n\\nThere are some variations on the rules of encipherment. One version of the cipher rules are outlined below:\\n\\n```\\nsecret_password(\\\"mubashirh\\\") ➞ \\\"hsajsi13u2\\\"\\n```\\n\\nStep 1: Message length should be of **nine characters** containing only lowercase letters from **'a' to 'z'**. If the argument doesn't meet this requirement you must return ``\\\"BANG! BANG! BANG!\\\"`` (Remember, there are no second chances in the spy world!)\\n\\nStep 2: Divide the string into **three equal parts** of three characters each:\\n\\n```\\n1 - mub\\n2 - ash\\n3 - irh\\n```\\n\\nStep 3: Convert the **first and third letter** to the corresponding number, according to the English alphabets (ex. a = 1, b = 2, c = 3 ... z = 26, etc).\\n\\n```\\nmub = 13u2\\n```\\n\\nStep 4: **Reverse** the fourth, fifth, and sixth letters:\\n\\n```\\nash = hsa\\n```\\n\\nStep 5: **Replace** seventh, eighth, and ninth letter with next letter (z will be substituted with a).\\n\\n```\\nirh = jsi\\n```\\n\\nStep 6: **Return** the string in the following order: \\\"Part_2+Part_3+Part_1\\\"\\n\\n```\\n\\\"hsajsi13u2\\\"\\n```\\n\\nSee the below examples for a better understanding:\\n\\n### Examples\\n```\\nsecret_password(\\\"mubashirh\\\") ➞ \\\"hsajsi13u2\\\"\\n\\nsecret_password(\\\"mattedabi\\\") ➞ \\\"detbcj13a20\\\"\\n\\nsecret_password(\\\"HeLen-eda\\\") ➞ \\\"BANG! BANG! BANG!\\\"\\n# Length is not equal to 9\\n# Contains characters other than lower alphabets\\n```\\n\\n### Notes\\nN/A\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(secret_password(\\\"mubashirh\\\"), \\\"hsajsi13u2\\\")\\nTest.assert_equals(secret_password(\\\"mattedabi\\\"), \\\"detbcj13a20\\\")\\nTest.assert_equals(secret_password(\\\"HeLen-eda\\\"), \\\"BANG! BANG! BANG!\\\")\\nTest.assert_equals(secret_password(\\\"pakistani\\\"), \\\"tsiboj16a11\\\")\\nTest.assert_equals(secret_password(\\\"airforce1\\\"), \\\"BANG! BANG! BANG!\\\")\\nTest.assert_equals(secret_password(\\\"airforces\\\"), \\\"rofdft1i18\\\")\\nTest.assert_equals(secret_password(\\\"Airforcee\\\"), \\\"BANG! BANG! BANG!\\\")\\nTest.assert_equals(secret_password(\\\"pilotmuba\\\"), \\\"mtovcb16i12\\\")\\nTest.assert_equals(secret_password(\\\"a_rforcee\\\"), \\\"BANG! BANG! BANG!\\\")\\nTest.assert_equals(secret_password(\\\"iloveherh\\\"), \\\"hevfsi9l15\\\")\\nTest.assert_equals(secret_password(\\\"airforcess\\\"), \\\"BANG! BANG! BANG!\\\")\\nTest.assert_equals(secret_password(\\\"edabit\\\"), \\\"BANG! BANG! BANG!\\\")\\n# Mubashir\",\"language\":\"python3\",\"quality\":0,\"summary\":\"Mubashir is going on a secret mission. He needs your help but you have to learn how to encode a secret password to communicate safely with other agents. Create a function that takes an argument message and returns the encoded password.\\n\\nThere are some variations on the rules of encipherment. One version of the cipher rules are outlined below:\\n\\nsecret_password(\",\"tags\":[\"algorithms\",\"cryptography\",\"strings\"],\"timestamp\":{\"$date\":1609401761466},\"title\":\"Secret Agent Password\",\"stats\":{\"completed\":{\"total\":78,\"ratings\":[4,4,4,4,4,5,1,5,3,2,2,5,4,5,1,5,2,1,3,5,1,1,3,5,3,2,3,4,5,3,2,3,2,4,1,5,3,3,3,0,5,3,4,2,1,0,4,3,1,2,5,4,3,1,5,5,1,2,3,3,2,0,2,4,1,1,0,2,1,1,2,2,1,2,3,1,3,2,2],\"quality\":[],\"rators\":[\"8PwfYqoDQFThzNtvf\",\"s5M5RvgqR9BhB9JoC\",\"iS5BrkGLzJyPK7nKt\",\"w2HhxvSLmDhaGCAjE\",\"yr822PZmmiDDenxpB\",\"fSQSHjW3e72MrWxbD\",\"5dHucvf2qBYyKim7X\",\"58M252WF7SPRinfBx\",\"XNmN6ztj36a7eChbD\",\"AJwBauGHyrbqgDYce\",\"QRv96jmNaYsWkxQEG\",\"xn7uGNKeAwPEkP9oA\",\"8sNv5PTHa7XQ8bNqR\",\"eHcgvkTGsH7ZziqBo\",\"iojEnnY9FsMfYzp6f\",\"8nE8QHnFYsHCFebte\",\"yjtdwc2AC4jA2RWtn\",\"2PufnQcsHsfymufX3\",\"J3upzLHuEwXH7Z2hx\",\"yod5YhKtPqw2GfG9B\",\"AasGs8AeX9Lcb9xJn\",\"gJYuGdkXEWWmGRLzu\",\"qNszsXx28cTxvGSNj\",\"bJaPCBx63YxdJAuTS\",\"J23RcmzbdtBbPCTjT\",\"fZXxHFkvNhA3EnBsB\",\"L3WhNnr9M5KggAxLR\",\"38txvwyNnhqg6WuxD\",\"tAF9Gf6PiGogbZuWs\",\"XogKZhczbDGZaXEZm\",\"E6sRiQd5xuyefLimm\",\"zoDHPoPn9mhXpmka7\",\"KedPjthNEouN4MDX4\",\"SRwxbsLj2X4uPctZf\",\"hR7GMiqGap4CzEWSy\",\"hed4SxEcWYbe2bK8r\",\"C28oXk6hCbo4iZnXf\",\"Mw38Sy7djjLFEKRg3\",\"fE3fuScfCwCpmToq9\",\"bCFecqKyXTCnGgPSc\",\"vhZgCDRqMncYjfFB9\",\"yGyvKr9Qntq7YDvi5\",\"RhWecL96F9KJgrFwn\",\"v95WuLKYMT54bRAMG\",\"dNBGNMKLZam4bvHuZ\",\"9ivvGvJGvtQfigQaZ\",\"QSy9nzhg4ntW8HYRR\",\"oHQ3shNGA8p8ZGJ5m\",\"97DthwdtrBLm2y2Yj\",\"tu8Qgcfi58KquBZtb\",\"7CsK6btogF22Piw8t\",\"DrTeBk3bpLqhsLS4g\",\"64TAtHLtpKDguKLcS\",\"Lfi72yhx4Q2fyDhk4\",\"RZyZpteXnziFCueQ2\",\"rJzuD6rs2EwbTXw3y\",\"mFeC4dexaEuvSWtYG\",\"r3GNSq3oReDjMQrhL\",\"CZosmbwoinXv2YY4v\",\"BpdRRfg4CJPsiPbys\",\"yTtSCvGPyYna6JuRC\",\"E2AgJ6HuCN5nar6BP\",\"NBxd82vvxG5NyqXeF\",\"QazQiuqTppQ3bukt5\",\"fz527ZicwRqCQ6RMG\",\"gXTAie79kiw28tx5u\",\"GTKsdeEihE636Le9i\",\"p8qqFdJ3FSk5x9z3G\",\"8JyqsSbN2FJXPr3cw\",\"u5u2YpHXiNgzDNJdX\",\"uTo57RRSZPx6HWBYy\",\"buX4mCQhtXCfBjeno\",\"RMCmbNydMsFrSqMzp\",\"oBcs8GLX2ZFLXQy8y\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"PtZL7XzzYko83PxS3\",\"language\":\"cpp\"},{\"_id\":\"WboAruyx4HQ3Q553q\",\"language\":\"javascript\"},{\"_id\":\"cBzYRBbBA7gHwKpor\",\"language\":\"python3\"},{\"_id\":\"ve47LfrFqzBbYYiPT\",\"language\":\"ruby\"}]}}"]