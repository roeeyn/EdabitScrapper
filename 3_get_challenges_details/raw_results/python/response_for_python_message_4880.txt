a["{\"msg\":\"result\",\"id\":\"1156\",\"result\":{\"_id\":\"xBPCwB8c4rYrGqY3v\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"def missing(lst):\\n\\t\",\"difficulty\":1.610738255033557,\"familyId\":\"mwesc5KrzFuL9LgB5\",\"instructions\":\"Your function will get a list with a number sequence. However, one item will be missing. It's your job to find out which one is not in the list.\\n\\nTo illustrate, given the list `[1, 3, 4, 5]`, `2` is missing so the output must be `2`.\\n\\n### Examples\\n```\\nmissing([1, 3, 4, 5]) ➞ 2\\n\\nmissing([2, 4, 6, 8, 10, 14, 16]) ➞ 12\\n\\nmissing([1.5, 2, 3]) ➞ 2.5\\n```\\n\\n### Notes\\n- The missing item will never be the smallest or largest number in the list.\\n- In every list, exactly one item is missing.\",\"isHidden\":false,\"lab\":\"Test.assert_equals(missing([1, 3, 4, 5]), 2)\\nTest.assert_equals(missing([2, 4, 6, 8, 10, 14, 16]), 12)\\nTest.assert_equals(missing([12, 15, 18, 21, 24, 30, 33]), 27)\\nTest.assert_equals(missing([0, 60, 180]), 120)\\nTest.assert_equals(missing([-1.25, 1.25, 2.5]), 0)\\nTest.assert_equals(missing([1, 19, 28]), 10)\\nTest.assert_equals(missing([100, 500, 900, 1300, 2100, 2500, 2900]), 1700)\\nTest.assert_equals(missing([1.5, 2, 3]), 2.5)\",\"language\":\"python3\",\"summary\":\"Your function will get a list with a number sequence. However, one item will be missing. It's your job to find out which one is not in the list.\\n\\nTo illustrate, given the list [1, 3, 4, 5], 2 is missing so the output must be 2.\\n\\nExamples\\nmissing([1, 3, 4, 5]) ➞ 2\\n\\nmissing([2, 4, 6, 8, 10, 14, 16]) ➞ 12\\n\\nmissing([1.5, 2, 3]) ➞ 2.5\\n\\nNotes\\nThe missing item will n\",\"tags\":[\"algorithms\",\"numbers\"],\"timestamp\":{\"$date\":1573426639182},\"title\":\"The Missing Link of an Arithmetic Progression\",\"stats\":{\"completed\":{\"total\":171,\"ratings\":[1,1,1,1,1,1,1,1,1,1,1,2,5,2,2,2,2,2,0,2,2,0,1,2,2,1,1,3,2,2,1,1,2,2,1,2,2,1,1,1,2,2,2,1,2,1,3,2,1,1,2,0,2,3,2,1,2,1,1,2,2,2,1,2,1,2,3,2,2,1,2,2,1,0,2,2,2,1,2,0,2,2,1,2,2,2,3,2,3,3,0,2,2,1,2,2,2,2,1,1,2,0,0,1,2,2,2,2,2,2,2,2,2,2,0,1,1,2,2,2,1,1,2,1,0,3,2,1,1,2,2,2,3,2,1,3,0,1,3,2,0,0,2,2,3,2,2,2,1],\"rators\":[\"N2wnZXkhDH86mgjQ8\",\"DLai9DxpZN6p5TPRX\",\"HqmxnQJM66Y57twhn\",\"tAF9Gf6PiGogbZuWs\",\"K96FwtfDDN5WM4Bb7\",\"qxB9bnow4EXPHwsPj\",\"4y2bxsHwifCdZXAQA\",\"EEjNW5t4XPGFLfq3k\",\"KbkTiXTM7Mkn5ZfAp\",\"v9KtC8YLbMWmXiW2H\",\"8JyqsSbN2FJXPr3cw\",\"XKi8iZXBCHCaebSHh\",\"fAoLuqbGvHn4w2PHf\",\"gMJhLdyw3tH7L96X2\",\"qJZsi5rhRnWA38FbA\",\"2fxapKr8XGdNeaKi2\",\"otXtuQygbcYATMZoP\",\"yr822PZmmiDDenxpB\",\"gb9rvGus2Jv7bjZSs\",\"Nj6FwgBtAXsaQwsM2\",\"ahWFxnaxt9bXSA4f3\",\"PSrcg6fy835R4c5CW\",\"mtRvHDpeLoSGBf8zC\",\"u5u2YpHXiNgzDNJdX\",\"SKabuq5XuhXBugKBa\",\"sKfrD9gjCDHuqLzSk\",\"3LiSLdtN58n46NEqg\",\"ksafdYcNM3SFEQoW9\",\"4tgBydK887PitgAoi\",\"pkQBaSzukotPEXmrD\",\"8PwfYqoDQFThzNtvf\",\"6ShafRStcvew4GfCh\",\"YTTTwEP9F7mBe5Xgi\",\"C4QntmkYtB89GNtpd\",\"XjyaCd8bviTitHTwa\",\"fxLjWpWbBeaYcvdgB\",\"YTwwSYtqudH2JnrBX\",\"yAouD3PxzED8a4gap\",\"Jqk2uJZZxEv5wZFze\",\"Jg8ZSRXe3NoDMCqGu\",\"uSh3aNxzD28jBuhxa\",\"XbxHXmh5ZmRN2gw3K\",\"Xj6R2zqhgumffQCAN\",\"BeFnbPbMnAM2SjBdZ\",\"orFLgPDw9H5MDzmwo\",\"yabtHTtycsWhcGBfD\",\"ab7BsQuhDo3QgE6bh\",\"Z85ajWfZ4jDPkbvR4\",\"M44nifmWzt3wtYyJx\",\"2innwjWqxJHo4eRGh\",\"aP3dk5CrAEeQkKn4k\",\"kQH5b8MXJunh84Czq\",\"Ycj4iTJGFyvC4bXek\",\"mxX4rH5ELYkdZ2Mbw\",\"AasGs8AeX9Lcb9xJn\",\"PXAcsKkssS2yLyDv2\",\"4CFzv558qbGcpQwc4\",\"s5M5RvgqR9BhB9JoC\",\"Yp7uvStL97cC9fKkY\",\"u2HofTqtf9oY8WTAz\",\"ckRXzQNZ8QXSxFoN8\",\"pMg2Zddm29zRGP6wg\",\"yZvzB3qFb8pkHy4dg\",\"LA2YneDcbtiSj5SH6\",\"cR3ibTMxLyEdDFCHY\",\"C9LKGu2g5hSijvDzA\",\"9Ly8afdtofp8DXzrt\",\"aRqQ42J5zqCmBNd8w\",\"dHZqT6h4JMwk5fPC8\",\"hnyhBFWwNCz9mDfSi\",\"jNvegJWCk5HCtEMbK\",\"ZNnsMeNkdDhHjSrZb\",\"aEm3Wvj2rFYRL8Lrb\",\"gJYuGdkXEWWmGRLzu\",\"2QGRoQn2dRq3scu7k\",\"kYWb8BwpKwunQkxeX\",\"g8G9dxwAkfvJiPkwr\",\"HF28xZKSLM9wEuqNg\",\"JZbBYihgT6m7bKvgc\",\"DEDniTrstQYGounXT\",\"KdNDysEsy2TW5QRJ2\",\"9pzFiFK3ANLjQfnr2\",\"nfXGHENb5md7m355s\",\"YpYBWqTNrmp9azJa7\",\"F2ykFxhDEEkj6N5KE\",\"ahk2qiXKJA753wAJk\",\"WvNNoxeM6KCfZdium\",\"Nua6T3dBurBy3Qfg9\",\"csERjP5tgZ6swaGAc\",\"jfeozFAYaTHXFPHYS\",\"ZrKCkX7xxGGZzauFW\",\"H4abACFDH5t8CnnyH\",\"iojEnnY9FsMfYzp6f\",\"yjtdwc2AC4jA2RWtn\",\"Pe8vWpDHRuH9nSGKW\",\"wZ22E8EXW4qasgru2\",\"Q6TW2RyMdmvSev4Sn\",\"M35nSp9motwe2cDrP\",\"NNE5HNRXAkmhrWgyQ\",\"3uxbBcR3pHapTpuso\",\"b5oEvBqHWLRnJgp22\",\"oBcs8GLX2ZFLXQy8y\",\"Kz7ee56Ht4Ns8JjBj\",\"YcCLwitFMAEJSnxAW\",\"mG8HqKiAQFTdRZthG\",\"tpxMgkGSHwBjS95Ta\",\"iS5BrkGLzJyPK7nKt\",\"gXTAie79kiw28tx5u\",\"cRoHBaA7HjePc8wb2\",\"QRv96jmNaYsWkxQEG\",\"9rhsisf8ofHavG5aT\",\"DPi9QGLctq2y76KuE\",\"FEYpu9RWysAgW3XnP\",\"J3upzLHuEwXH7Z2hx\",\"5XiuAqicKD4hBdu63\",\"cAP3n5NY64uoMwzRR\",\"5hQnRWiKkhgKJXNMP\",\"RGMbFMZXJr7DhcAJy\",\"dLc4WYdKAjc9zgq9S\",\"zd9FLSzsGz3evKafy\",\"dBzwBtRjZqB98DJeB\",\"JhX7jvtpwNyxcc39m\",\"d8qtzoLB264iP8tdY\",\"5HCu9Ydd86QgHDRNP\",\"sYt4NE4SKmWhPziYm\",\"5S9nX4rKsnCcnv4Cz\",\"eYfPWvZwnJQkHbSTK\",\"GGdmhAvxXhqhhibJN\",\"srJ34BaybkQh3qRkM\",\"PWgzeK859suojbrRx\",\"LQxof8pGabGuWP7Gn\",\"Ds7L5bksw2QRHjrKL\",\"J5T8gZqiZXFuFDTQ7\",\"3KkyQm77zsew58Dc2\",\"o4ixjQGSaYqA2JoM4\",\"66a9xX73nmTEuKs9k\",\"eMuCpJ2spXWkJjWNz\",\"AJexRBN9cYQmqvYu6\",\"yod5YhKtPqw2GfG9B\",\"PC3pLs36zNzpRDSuE\",\"mvJBakQ35CWAnbbEZ\",\"axZiCBno6T333meyj\",\"Afnps7TJQuS9sipMb\",\"sHjfbGQGLHE6JR6qu\",\"8BFSTCnoe2QggN64c\",\"T6iBEE2jp7f7iEF2P\",\"BrTDhPJcACL2bsrpJ\",\"PH32cNxBjrK4a28sn\",\"PeDy57T7TNNkdqP5M\",\"dzS6WBTMHyFEag6Fp\",\"CHvzhtXnv8HTbPQ56\",\"rhS8qXRjZcpDXkwnE\",\"2PufnQcsHsfymufX3\",\"4Lwjr34ypKNQNQCar\",\"4TmgHkn5vqyHK3sYC\",\"MKT7khMBGXzA22ykf\",\"2DQkhHC4Fv3yHbM5Z\",\"Wi4H6ayKsNDWWQCG5\"],\"quality\":[3,5,5,4,4,5,5,5,5,5,4,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"quality\":4.642857142857143,\"family\":[{\"_id\":\"PLocfPLQwWpwHrzCr\",\"language\":\"cpp\"},{\"_id\":\"M6hcm6ezCoRBbANQr\",\"language\":\"javascript\"},{\"_id\":\"xBPCwB8c4rYrGqY3v\",\"language\":\"python3\"},{\"_id\":\"aRs62RjAXDjcpxdzd\",\"language\":\"ruby\"}]}}"]