a["{\"msg\":\"result\",\"id\":\"2048\",\"result\":{\"_id\":\"sibD9TFg7pmQuzJxW\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"def stem_plot(lst):\\n\\t\",\"difficulty\":2.8636363636363638,\"familyId\":\"ST3vJ9b7mboc3Hkho\",\"instructions\":\"In statistics a stem-and-leaf plot is a graphical representation of values distribution in a dataset,  usually implemented for a small set of values. In this exercise we'll build a simple plot for positive integer values following the steps below.\\n\\n1) You must separate each value in two parts: the **stem, equal to all number digits but last** and the **leaf, equal to the last digit**. For numbers in range 0-9 you must add  a \\\"0\\\" at the start.\\n_Examples_:\\n  -  4872: stem is \\\"487\\\", leaf is \\\"2\\\".\\n  -  429: stem is \\\"42\\\",  leaf is \\\"9\\\".\\n  -  85: stem is \\\"8\\\", leaf is \\\"5\\\".\\n  -  1: stem is \\\"0\\\", leaf is \\\"1\\\".\\n\\n2) Insert in the plot the **stems without duplicate values in ascending order**, and for every stem **every proper leaf in ascending order**.\\n_Examples for a dataset containing 22, 22, 13, 11, 11_:\\n  - Stems are 1 and 2 (no duplicates in ascending order).\\n  - Leaves for stem 1 are 1, 1 and 3 (every leaf in ascending order), leaves for stem 2 are 2 and 2.\\n\\nGiven a list of positive integers you must return the stem-and-leaf plot as a list of strings, one for each stem: strings have to be formatted with **stem and leaves separated by \\\" I \\\" (spaces included)** and **leaves in ascending order separated by a space between them**.\\n\\n### Examples\\n```\\nstem_plot([111, 11, 1]) ➞ [\\\"0 | 1\\\", \\\"1 | 1\\\", \\\"11 | 1\\\"]\\n\\nstem_plot([4, 8, 75]) ➞ [\\\"0 | 4 8\\\", \\\"7 | 5\\\"]\\n\\nstem_plot([22, 22, 38, 22, 19]) ➞ [\\\"1 | 9\\\", \\\"2 | 2 2 2\\\", \\\"3 | 8\\\"]\\n```\\n\\n### Notes\\n- Every given list is valid, containing only positive integers (no exceptions to handle).\\n- Pay attention to leading and trailing zeroes.\\n- You can find more info about stem-and-leaf plots in the **Resources** tab.\",\"lab\":\"Test.assert_equals(stem_plot([111, 11, 1]), [\\\"0 | 1\\\", \\\"1 | 1\\\", \\\"11 | 1\\\"], \\\"Example #1\\\")\\nTest.assert_equals(stem_plot([4, 8, 75]), [\\\"0 | 4 8\\\", \\\"7 | 5\\\"], \\\"Example #2\\\")\\nTest.assert_equals(stem_plot([22, 22, 38, 22, 19]), [\\\"1 | 9\\\", \\\"2 | 2 2 2\\\", \\\"3 | 8\\\"], \\\"Example #3\\\")\\nTest.assert_equals(stem_plot([1062, 310, 89, 9, 16]), [\\\"0 | 9\\\", \\\"1 | 6\\\", \\\"8 | 9\\\", \\\"31 | 0\\\", \\\"106 | 2\\\"])\\nTest.assert_equals(stem_plot([48, 125, 48, 48, 20, 21, 22, 125, 48, 20]), [\\\"2 | 0 0 1 2\\\", \\\"4 | 8 8 8 8\\\", \\\"12 | 5 5\\\"])\\nTest.assert_equals(stem_plot([36, 12, 2, 4, 1062, 1062, 2, 36, 234]), [\\\"0 | 2 2 4\\\", \\\"1 | 2\\\", \\\"3 | 6 6\\\", \\\"23 | 4\\\", \\\"106 | 2 2\\\"])\\nTest.assert_equals(stem_plot([555, 555, 555, 555]), [\\\"55 | 5 5 5 5\\\"])\\nTest.assert_equals(stem_plot([10, 20, 30, 1, 2, 3]), [\\\"0 | 1 2 3\\\", \\\"1 | 0\\\", \\\"2 | 0\\\", \\\"3 | 0\\\"])\",\"language\":\"python3\",\"summary\":\"In statistics a stem-and-leaf plot is a graphical representation of values distribution in a dataset,  usually implemented for a small set of values. In this exercise we'll build a simple plot for positive integer values following the steps below.\\n\\n1) You must separate each value in two parts: the stem, equal to all number digits but last and the leaf, equal t\",\"tags\":[\"numbers\",\"data_structures\",\"formatting\"],\"timestamp\":{\"$date\":1569863826379},\"title\":\"Stems and Leaves\",\"stats\":{\"completed\":{\"total\":48,\"ratings\":[2,2,2,2,2,3,3,3,3,2,4,2,3,3,2,2,3,5,3,4,3,3,3,2,3,4,3,3,2,4,4,4,3,4,2,2,4,1,4,2,3,2,4,2],\"rators\":[\"gb9rvGus2Jv7bjZSs\",\"tAF9Gf6PiGogbZuWs\",\"8JyqsSbN2FJXPr3cw\",\"HqmxnQJM66Y57twhn\",\"8QNgZLrNbHPFRAEu5\",\"FgkYtHLxeD8pETJ8T\",\"Du863uXQ6TKWszNmA\",\"s5M5RvgqR9BhB9JoC\",\"C4QntmkYtB89GNtpd\",\"AbrJ8hMyv5fFXG6DN\",\"t6bXCX76smm7B3bEN\",\"rurh72mGpAthfGRGt\",\"hAzy9apJgLWwRFGPJ\",\"2fxapKr8XGdNeaKi2\",\"8PwfYqoDQFThzNtvf\",\"Jqk2uJZZxEv5wZFze\",\"Lw8oRc5SERsuntXMo\",\"pkQBaSzukotPEXmrD\",\"yZvzB3qFb8pkHy4dg\",\"WLFPvm65aHfgwQy7N\",\"mDWNyaaQ9hvPCRzSd\",\"aEm3Wvj2rFYRL8Lrb\",\"AasGs8AeX9Lcb9xJn\",\"ZNnsMeNkdDhHjSrZb\",\"wT5gGgvjKc5wz59AQ\",\"YRstQuthRkFeBiXug\",\"MKJhn7goNzuGtB5y9\",\"Ecg4m7srYGgZsb4Ck\",\"xn7uGNKeAwPEkP9oA\",\"Nua6T3dBurBy3Qfg9\",\"d8qtzoLB264iP8tdY\",\"pDvFWMCD9fQwoBPcu\",\"HF28xZKSLM9wEuqNg\",\"iS5BrkGLzJyPK7nKt\",\"8sNv5PTHa7XQ8bNqR\",\"p8qqFdJ3FSk5x9z3G\",\"iojEnnY9FsMfYzp6f\",\"gJYuGdkXEWWmGRLzu\",\"yjtdwc2AC4jA2RWtn\",\"GTKsdeEihE636Le9i\",\"2PufnQcsHsfymufX3\",\"gXTAie79kiw28tx5u\",\"buX4mCQhtXCfBjeno\",\"2d6HBhT6qRPPiv6Bu\"],\"quality\":[5,4,5,4,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.6,\"family\":[{\"_id\":\"9GipYjC8YSD3oaq3c\",\"language\":\"cpp\"},{\"_id\":\"ZAGhB6otwk54JB8FA\",\"language\":\"javascript\"},{\"_id\":\"sibD9TFg7pmQuzJxW\",\"language\":\"python3\"},{\"_id\":\"ma7pZDDJXTLEhhGcR\",\"language\":\"ruby\"}]}}"]