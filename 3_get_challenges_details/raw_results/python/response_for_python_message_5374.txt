a["{\"msg\":\"result\",\"id\":\"1400\",\"result\":{\"_id\":\"p5zThyFbZQMKmthxJ\",\"author\":\"Max__\",\"authorId\":\"5hhuYLyGkeqCvaSrf\",\"code\":\"def javelin_throw(v, a):\\n\\t\",\"difficulty\":2.0377358490566038,\"familyId\":\"jew93kFk8v29h88wY\",\"instructions\":\"Write a function that takes initial speed (`v` in m/s) and throw angle (`a` in degrees) and returns the maximum height and maximum range reached by javelin as a string.\\n\\n### Examples\\n```\\njavelin_throw(36.7, 45) ➞ \\\"Ymax=34m, Xmax=137m\\\"\\n\\njavelin_throw(51.3, 20) ➞ \\\"Ymax=16m, Xmax=172m\\\"\\n\\njavelin_throw(100.1, 89) ➞ \\\"Ymax=511m, Xmax=36m\\\"\\n```\\n\\n### Notes\\n- Javelin starts moving at `h=0m`.\\n- Gravitational acceleration is `g=9.81 m/s^2`.\\n- All results should be rounded to the nearest whole number.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(javelin_throw(100.0, 37), \\\"Ymax=185m, Xmax=980m\\\")\\nTest.assert_equals(javelin_throw(36.7, 45), \\\"Ymax=34m, Xmax=137m\\\")\\nTest.assert_equals(javelin_throw(51.3, 20), \\\"Ymax=16m, Xmax=172m\\\")\\nTest.assert_equals(javelin_throw(11.1, 25), \\\"Ymax=1m, Xmax=10m\\\")\\nTest.assert_equals(javelin_throw(75.5, 40), \\\"Ymax=120m, Xmax=572m\\\")\\nTest.assert_equals(javelin_throw(250.0, 42), \\\"Ymax=1426m, Xmax=6336m\\\")\\nTest.assert_equals(javelin_throw(100.1, 89), \\\"Ymax=511m, Xmax=36m\\\")\",\"language\":\"python3\",\"quality\":4.5,\"summary\":\"Write a function that takes initial speed (v in m/s) and throw angle (a in degrees) and returns the maximum height and maximum range reached by javelin as a string.\\n\\nExamples\\njavelin_throw(36.7, 45) ➞ \\\"Ymax=34m, Xmax=137m\\\"\\n\\njavelin_throw(51.3, 20) ➞ \\\"Ymax=16m, Xmax=172m\\\"\\n\\njavelin_throw(100.1, 89) ➞ \\\"Ymax=511m, Xmax=36m\\\"\\n\\nNotes\\nJavelin starts moving at h=0m.\\nGr\",\"tags\":[\"physics\",\"math\"],\"timestamp\":{\"$date\":1603490886990},\"title\":\"Javelin Parabolic Throw\",\"stats\":{\"completed\":{\"total\":51,\"ratings\":[2,2,2,2,2,2,3,2,3,3,3,2,2,3,0,3,2,2,3,2,1,3,2,2,2,1,5,3,2,3,2,2,0,0,3,2,3,3,0,0,3,2,2,2,3,1,0,1,2,3,0,3,2],\"quality\":[4,5],\"rators\":[\"5hhuYLyGkeqCvaSrf\",\"6428wKHtwKkFdvBs5\",\"qD2LrwaDrSdiybLKY\",\"xn7uGNKeAwPEkP9oA\",\"KEmTti9Tza8A2FLQW\",\"8PwfYqoDQFThzNtvf\",\"aEm3Wvj2rFYRL8Lrb\",\"gb9rvGus2Jv7bjZSs\",\"w7c8yyuyvZQdS78TM\",\"QRv96jmNaYsWkxQEG\",\"J3upzLHuEwXH7Z2hx\",\"LQxof8pGabGuWP7Gn\",\"ZJTBR5PYuKrEi8xcJ\",\"iS5BrkGLzJyPK7nKt\",\"FTXxgy4DhJmzStJs9\",\"Jqk2uJZZxEv5wZFze\",\"Yp7uvStL97cC9fKkY\",\"gXTAie79kiw28tx5u\",\"BrTDhPJcACL2bsrpJ\",\"yjtdwc2AC4jA2RWtn\",\"eQCt65ouiNH48TXFA\",\"s5M5RvgqR9BhB9JoC\",\"iojEnnY9FsMfYzp6f\",\"u5u2YpHXiNgzDNJdX\",\"gJYuGdkXEWWmGRLzu\",\"PytNZK9mNiRiZxPrm\",\"AasGs8AeX9Lcb9xJn\",\"oBcs8GLX2ZFLXQy8y\",\"HPgYwfWpHkbnoWtWv\",\"GGdmhAvxXhqhhibJN\",\"HqmxnQJM66Y57twhn\",\"rcdB9odS45qtL5eMX\",\"DYDJTyGgKFnBRLm2r\",\"63rMmimv4dDGDcYZx\",\"wLdvmLGEtjdZvsDR3\",\"ag6ESTky5egq3Jmtm\",\"gKnWjDjwrJh7MK2df\",\"2PufnQcsHsfymufX3\",\"yod5YhKtPqw2GfG9B\",\"pSNHZRZDssF9Av2zR\",\"uvJLxh6JzyHriakit\",\"buX4mCQhtXCfBjeno\",\"8sNv5PTHa7XQ8bNqR\",\"Wi4H6ayKsNDWWQCG5\",\"5HCu9Ydd86QgHDRNP\",\"eMuCpJ2spXWkJjWNz\",\"Ds7L5bksw2QRHjrKL\",\"T6iBEE2jp7f7iEF2P\",\"DEDniTrstQYGounXT\",\"9pzFiFK3ANLjQfnr2\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"cS48jymeLrkjhDZ8x\",\"language\":\"cpp\"},{\"_id\":\"YPgPqMa7adXdh2svk\",\"language\":\"java\"},{\"_id\":\"8mSYeF49nHhxoT2Yw\",\"language\":\"javascript\"},{\"_id\":\"p5zThyFbZQMKmthxJ\",\"language\":\"python3\"},{\"_id\":\"4eSCrsTKk3vXrGCJA\",\"language\":\"ruby\"}]}}"]