a["{\"msg\":\"result\",\"id\":\"1104\",\"result\":{\"_id\":\"BDcaZaqCuBCczeKZL\",\"author\":\"skrzyniarzp\",\"authorId\":\"66a9xX73nmTEuKs9k\",\"code\":\"def arrow(num):\\n\\t\",\"difficulty\":1.5789473684210527,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"DdrCK83K4mrQypNS4\",\"instructions\":\"Create a function that creates a pattern as a 2D list for a given number.\\n\\n### Examples\\n```\\n >\\n >>\\n >>>\\n >>\\n >\\n\\narrow(3) ➞ [\\\">\\\", \\\">>\\\", \\\">>>\\\", \\\">>\\\", \\\">\\\"]\\n```\\n\\n```\\n >\\n >>\\n >>>\\n >>>>\\n >>>>\\n >>>\\n >>\\n >\\n\\narrow(4) ➞ [\\\">\\\", \\\">>\\\", \\\">>>\\\", \\\">>>>\\\", \\\">>>>\\\", \\\">>>\\\", \\\">>\\\", \\\">\\\"]\\n```\\n\\n### Notes\\n- Function argument will always be a number greater than 0.\\n- Odd numbers will have a single \\\"peak\\\" (see example #1).\\n- Even numbers have two \\\"peaks\\\" (see example #2).\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(arrow(3), ['>', '>>', '>>>', '>>', '>'])\\nTest.assert_equals(arrow(4), ['>', '>>', '>>>', '>>>>', '>>>>', '>>>', '>>', '>'])\\nTest.assert_equals(arrow(7), ['>', '>>', '>>>', '>>>>', '>>>>>', '>>>>>>', '>>>>>>>', '>>>>>>', '>>>>>', '>>>>', '>>>', '>>', '>'])\\nTest.assert_equals(arrow(8), ['>', '>>', '>>>', '>>>>', '>>>>>', '>>>>>>', '>>>>>>>', '>>>>>>>>', '>>>>>>>>', '>>>>>>>', '>>>>>>', '>>>>>', '>>>>', '>>>', '>>', '>'])\\nTest.assert_equals(arrow(9), ['>', '>>', '>>>', '>>>>', '>>>>>', '>>>>>>', '>>>>>>>', '>>>>>>>>', '>>>>>>>>>', '>>>>>>>>', '>>>>>>>', '>>>>>>', '>>>>>', '>>>>', '>>>', '>>', '>'])\\nTest.assert_equals(arrow(10), ['>', '>>', '>>>', '>>>>', '>>>>>', '>>>>>>', '>>>>>>>', '>>>>>>>>', '>>>>>>>>>', '>>>>>>>>>>', '>>>>>>>>>>', '>>>>>>>>>', '>>>>>>>>', '>>>>>>>', '>>>>>>', '>>>>>', '>>>>', '>>>', '>>', '>'])\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,1,1,1,2,1,1,2,1,2,3,2,3,2,2,5,2,1,2,2,2,2,1,2,2,2,1,2,1,2,2,1,2,0,2,1,2,1,1,2,0,2,1,3,2,2,2,2,2,0,2,2,2,1,2,2,2,0,1,1,1,2,0,2,2,1,3,2,1,2,2,1,2,2,0,1,2,2,2,1,0,1,2,2,2,2,1,2,2,1,1],\"rators\":[\"66a9xX73nmTEuKs9k\",\"vxxGMZHP6gn3mLMWc\",\"HF28xZKSLM9wEuqNg\",\"a777e8chPvJkY3tKa\",\"zAppXL8MZJiNAStc5\",\"3cF6NXq3ZEwdkgSjb\",\"gJYuGdkXEWWmGRLzu\",\"aEm3Wvj2rFYRL8Lrb\",\"4rwxLqLs2mNZNg8NB\",\"9pzFiFK3ANLjQfnr2\",\"p9riYAbHXwJZ9PhWf\",\"Nb6LYPoQP6KJZt8mz\",\"AasGs8AeX9Lcb9xJn\",\"DEDniTrstQYGounXT\",\"zTZctDDRMSeqYjKQY\",\"8PwfYqoDQFThzNtvf\",\"8JyqsSbN2FJXPr3cw\",\"hnyhBFWwNCz9mDfSi\",\"tAF9Gf6PiGogbZuWs\",\"Yp7uvStL97cC9fKkY\",\"gb9rvGus2Jv7bjZSs\",\"rgvAJFwfCeYoYnFTK\",\"m6D2RuQJwrAK6WB3v\",\"RHZcTWs7asoBGydH4\",\"s5M5RvgqR9BhB9JoC\",\"orFLgPDw9H5MDzmwo\",\"ikkjHDqBHu6fT3vGL\",\"9CoqdidjM9KbeKnHY\",\"9zwRb7df96BkcfBKP\",\"rK3xSCovoqjmkgBL9\",\"jNvegJWCk5HCtEMbK\",\"NG8PWBSjsM8mMhQEq\",\"hRiMXDZNAzyPd5tpt\",\"iojEnnY9FsMfYzp6f\",\"syRNbbPdLCGXbH2Gy\",\"ZrKCkX7xxGGZzauFW\",\"Pe8vWpDHRuH9nSGKW\",\"yjtdwc2AC4jA2RWtn\",\"ra7a6S3WLnLbXYq7Q\",\"HqmxnQJM66Y57twhn\",\"YcCLwitFMAEJSnxAW\",\"NNE5HNRXAkmhrWgyQ\",\"w2HhxvSLmDhaGCAjE\",\"oBcs8GLX2ZFLXQy8y\",\"Kz7ee56Ht4Ns8JjBj\",\"6kz7jjJS8W4tikYQT\",\"iS5BrkGLzJyPK7nKt\",\"qD2LrwaDrSdiybLKY\",\"zZDaXBxMzTCBhNkgL\",\"QRv96jmNaYsWkxQEG\",\"gXTAie79kiw28tx5u\",\"mxX4rH5ELYkdZ2Mbw\",\"cRoHBaA7HjePc8wb2\",\"DYDJTyGgKFnBRLm2r\",\"p8qqFdJ3FSk5x9z3G\",\"DPi9QGLctq2y76KuE\",\"g9FyJ8yeT9ic97Qp2\",\"2QGRoQn2dRq3scu7k\",\"jL4y5fTJAMBjhZmko\",\"J3upzLHuEwXH7Z2hx\",\"FEYpu9RWysAgW3XnP\",\"dYPkStFnLvAMsHSzZ\",\"4jmcRWi7WtT5hzdP9\",\"5XiuAqicKD4hBdu63\",\"5hQnRWiKkhgKJXNMP\",\"KJCDwGkoXh8qtbbKr\",\"cAP3n5NY64uoMwzRR\",\"ihWWwoyPrvHSZeQy3\",\"qZQxPQ2kaNKAMesHT\",\"RGMbFMZXJr7DhcAJy\",\"zT9LpkiwYjLviYYW6\",\"dBzwBtRjZqB98DJeB\",\"zd9FLSzsGz3evKafy\",\"YHZMXhwkWegSJJs6S\",\"Jqk2uJZZxEv5wZFze\",\"dB6s7p6pFMEyagbn2\",\"d8qtzoLB264iP8tdY\",\"5S9nX4rKsnCcnv4Cz\",\"5HCu9Ydd86QgHDRNP\",\"eYfPWvZwnJQkHbSTK\",\"f89WBZDy3j7KZY8od\",\"GGdmhAvxXhqhhibJN\",\"srJ34BaybkQh3qRkM\",\"xsDyJstYoBZRS8pJH\",\"CHvzhtXnv8HTbPQ56\",\"PWgzeK859suojbrRx\",\"Ds7L5bksw2QRHjrKL\",\"J5T8gZqiZXFuFDTQ7\",\"qAby4AWXmTNeusvg3\",\"3KkyQm77zsew58Dc2\",\"eMuCpJ2spXWkJjWNz\",\"T6iBEE2jp7f7iEF2P\",\"o4ixjQGSaYqA2JoM4\",\"5vnWKMWz3c5HCg4bt\",\"Wpn95NqWxncQrwNgz\",\"AJexRBN9cYQmqvYu6\",\"PC3pLs36zNzpRDSuE\",\"yr822PZmmiDDenxpB\",\"yod5YhKtPqw2GfG9B\",\"8ZQcS3dPw3wepGBd4\",\"9Ly8afdtofp8DXzrt\",\"JhX7jvtpwNyxcc39m\",\"mvJBakQ35CWAnbbEZ\",\"qzXAMXsHZGT8o5hTA\",\"8BFSTCnoe2QggN64c\",\"ey3CASd6Je5LEJzfB\",\"BrTDhPJcACL2bsrpJ\",\"Afnps7TJQuS9sipMb\",\"D2ZAjHmd2ZJiWPRC5\",\"dzS6WBTMHyFEag6Fp\",\"sHjfbGQGLHE6JR6qu\",\"2PufnQcsHsfymufX3\",\"K3RacTvkWHLfzKF8i\",\"buX4mCQhtXCfBjeno\",\"d9LBRxvADNBB5QJMB\",\"4Lwjr34ypKNQNQCar\",\"4TmgHkn5vqyHK3sYC\",\"MKT7khMBGXzA22ykf\",\"3nied3n8KG8RSNixH\",\"Wi4H6ayKsNDWWQCG5\"],\"total\":127,\"quality\":[5,4,5,5,4,1,5,4,2,5,5,5,4,1,5,5,2,5,5,5,5,5,5,5,5,5,4,4,5,5]},\"flags\":0},\"summary\":\"Create a function that creates a pattern as a 2D list for a given number.\\n\\nExamples\\n >\\n >>\\n >>>\\n >>\\n >\\n\\narrow(3) ➞ [\\\">\\\", \\\">>\\\", \\\">>>\\\", \\\">>\\\", \\\">\\\"]\\n\\n >\\n >>\\n >>>\\n >>>>\\n >>>>\\n >>>\\n >>\\n >\\n\\narrow(4) ➞ [\\\">\\\", \\\">>\\\", \\\">>>\\\", \\\">>>>\\\", \\\">>>>\\\", \\\">>>\\\", \\\">>\\\", \\\">\\\"]\\n\\nNotes\\nFunction argument will always be a number greater than 0.\\nOdd numbers will have a single \\\"peak\\\" (see example\",\"tags\":[\"algorithms\",\"arrays\"],\"timestamp\":{\"$date\":1591560458369},\"title\":\"Arrow Pattern\",\"quality\":4.333333333333333,\"family\":[{\"_id\":\"dTZyx3B6RHEMG5jNL\",\"language\":\"cpp\"},{\"_id\":\"o78QKtvqsP4XTS5TJ\",\"language\":\"csharp\"},{\"_id\":\"cEcDMjnmdnYYosHzQ\",\"language\":\"javascript\"},{\"_id\":\"BDcaZaqCuBCczeKZL\",\"language\":\"python3\"},{\"_id\":\"gM77zFrwhkP9Dku9Q\",\"language\":\"ruby\"},{\"_id\":\"vviaTCpfQH6wvXwfZ\",\"language\":\"swift\"}]}}"]