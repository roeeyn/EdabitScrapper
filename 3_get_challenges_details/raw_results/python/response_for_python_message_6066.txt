a["{\"msg\":\"result\",\"id\":\"1744\",\"result\":{\"_id\":\"5FTMMxKmkQtuY9KBP\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def count(box):\\n\\t\",\"difficulty\":2.262295081967213,\"familyId\":\"aXEL8Yyw3tN4DdgKT\",\"instructions\":\"Write a function that returns the number of **distinct items** inside a box. Do **not** count items outside the box.\\n\\nThere are four boundaries for a box and those boundaries start with a \\\"#\\\" and end with a \\\"#\\\". Look for horizontal and vertical consecutive hashes.\\n\\n### Examples\\n```\\ncount([\\n  \\\"??????\\\",\\n  \\\"?####?\\\",\\n  \\\"?#&!#?\\\",\\n  \\\"@#^Z#?\\\",\\n  \\\"$####?\\\"\\n]) ➞ 4\\n\\ncount([\\n  \\\"??????\\\",\\n  \\\"?####?\\\",\\n  \\\"?#ZZ#?\\\",\\n  \\\"@#ZZ#?\\\",\\n  \\\"$####?\\\",\\n  \\\"AAAAAA\\\"\\n]) ➞ 1\\n\\ncount([\\n  \\\"AAAAA\\\",\\n  \\\"AAA##\\\",\\n  \\\"AAA##\\\",\\n  \\\"AAAAA\\\",\\n  \\\"AAAAA\\\"\\n]) ➞ 0\\n```\\n\\n### Notes\\nReturn `0` if the box is empty or too small to fit anything.\",\"lab\":\"Test.assert_equals(count(\\n[\\\"??????\\\",\\n\\\"?####?\\\",\\n\\\"?#&!#?\\\",\\n\\\"@#^Z#?\\\",\\n\\\"$####?\\\"]), 4)\\n\\nTest.assert_equals(count(\\n[\\\"??????\\\",\\n\\\"?####?\\\",\\n\\\"?#ZZ#?\\\",\\n\\\"@#ZZ#?\\\",\\n\\\"$####?\\\", \\n\\\"AAAAAA\\\"]), 1)\\n\\nTest.assert_equals(count(\\n[\\\"??????\\\",\\n\\\"?####?\\\",\\n\\\"?#  #?\\\",\\n\\\"@#  #?\\\",\\n\\\"$####?\\\", \\n\\\"AAAAAA\\\"]), 0)\\n\\nTest.assert_equals(count(\\n[\\\"??????Z\\\",\\n\\\"Z?####?V\\\",\\n\\\"$?#  #?X\\\",\\n\\\"$@#BA#?P\\\",\\n\\\"$T####?T\\\", \\n\\\"ZAAAAAAT\\\"]), 2)\\n\\nTest.assert_equals(count(\\n[\\\"??????Z\\\",\\n\\\"Z?####?V\\\",\\n\\\"$?#BB#?X\\\",\\n\\\"$@#BA#?P\\\",\\n\\\"$T####?T\\\", \\n\\\"ZAAAAAAT\\\"]), 2)\\n\\nTest.assert_equals(count(\\n[\\\"!!Z\\\",\\n\\\"###\\\",\\n\\\"#B#\\\",\\n\\\"#B#\\\",\\n\\\"###\\\"]), 1)\\n\\nTest.assert_equals(count(\\n[\\\"!!Z\\\",\\n\\\"###\\\",\\n\\\"#B#\\\",\\n\\\"# #\\\",\\n\\\"###\\\"]), 1)\\n\\nTest.assert_equals(count(\\n[\\\"AAAAA\\\",\\n\\\"AAA##\\\",\\n\\\"AAA##\\\",\\n\\\"AAAAA\\\",\\n\\\"AAAAA\\\"]), 0)\\n\\nTest.assert_equals(count(\\n[\\\"AAAAAAA\\\",\\n\\\"AAA###A\\\",\\n\\\"AAA#!#A\\\",\\n\\\"AAA###A\\\",\\n\\\"AAAAAAA\\\"]), 1)\\n\\nTest.assert_equals(count(\\n[\\\"#AAAAAABC\\\",\\n\\\"AAA#####C\\\",\\n\\\"ZAA#!%@#C\\\",\\n\\\"AAA#####C\\\",\\n\\\"#AAAAAABC\\\"]), 3)\",\"language\":\"python3\",\"summary\":\"Write a function that returns the number of distinct items inside a box. Do not count items outside the box.\\n\\nThere are four boundaries for a box and those boundaries start with a \\\"#\\\" and end with a \\\"#\\\". Look for horizontal and vertical consecutive hashes.\\n\\nExamples\\ncount([\\n  \\\"??????\\\",\\n  \\\"?####?\\\",\\n  \\\"?#&!#?\\\",\\n  \\\"@#^Z#?\\\",\\n  \\\"$####?\\\"\\n]) ➞ 4\\n\\ncount([\\n  \\\"??????\\\",\",\"tags\":[\"strings\",\"formatting\",\"regex\"],\"timestamp\":{\"$date\":1555531752442},\"title\":\"Inside, not Outside a Box\",\"stats\":{\"completed\":{\"total\":64,\"ratings\":[2,2,2,2,2,2,2,2,2,2,2,4,3,3,2,2,3,2,0,1,2,3,3,0,3,0,3,3,2,2,2,4,2,2,3,2,3,2,5,2,3,4,3,0,3,3,3,4,3,4,1,1,2,2,0,3,0,0,2,4,3],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"tAF9Gf6PiGogbZuWs\",\"yZvzB3qFb8pkHy4dg\",\"8JyqsSbN2FJXPr3cw\",\"gb9rvGus2Jv7bjZSs\",\"T3ZAuoMrJjvZwN55B\",\"ab7BsQuhDo3QgE6bh\",\"iqmPb9JuJDgTFeR8Q\",\"PFjMZGHNAPTkgd7tq\",\"jHrtWDGBhkbuWa7fG\",\"AYaEkTWLMmfzpwejr\",\"cR3ibTMxLyEdDFCHY\",\"kQH5b8MXJunh84Czq\",\"Jg8ZSRXe3NoDMCqGu\",\"gMJhLdyw3tH7L96X2\",\"HqmxnQJM66Y57twhn\",\"otXtuQygbcYATMZoP\",\"XKi8iZXBCHCaebSHh\",\"Nj6FwgBtAXsaQwsM2\",\"2fxapKr8XGdNeaKi2\",\"Jqk2uJZZxEv5wZFze\",\"C4QntmkYtB89GNtpd\",\"K96FwtfDDN5WM4Bb7\",\"2innwjWqxJHo4eRGh\",\"AasGs8AeX9Lcb9xJn\",\"8PwfYqoDQFThzNtvf\",\"aEm3Wvj2rFYRL8Lrb\",\"PytNZK9mNiRiZxPrm\",\"ZNnsMeNkdDhHjSrZb\",\"s5M5RvgqR9BhB9JoC\",\"Nua6T3dBurBy3Qfg9\",\"YRstQuthRkFeBiXug\",\"9pzFiFK3ANLjQfnr2\",\"Sk5h9RsRyCjSNKubE\",\"v9KtC8YLbMWmXiW2H\",\"gJYuGdkXEWWmGRLzu\",\"R4SjTgDnpigJYDLyL\",\"n2BRY9X8899dcG8Bw\",\"iojEnnY9FsMfYzp6f\",\"Yp7uvStL97cC9fKkY\",\"qD2LrwaDrSdiybLKY\",\"QRv96jmNaYsWkxQEG\",\"iS5BrkGLzJyPK7nKt\",\"xn7uGNKeAwPEkP9oA\",\"tGkHoSmX8oHmmpdf5\",\"8sNv5PTHa7XQ8bNqR\",\"J3upzLHuEwXH7Z2hx\",\"DPi9QGLctq2y76KuE\",\"p8qqFdJ3FSk5x9z3G\",\"PWgzeK859suojbrRx\",\"eHcgvkTGsH7ZziqBo\",\"oBcs8GLX2ZFLXQy8y\",\"JKb5rhL6DKcCAypF9\",\"T6iBEE2jp7f7iEF2P\",\"JhX7jvtpwNyxcc39m\",\"QvEXmSEo3ANp3yPyH\",\"gKnWjDjwrJh7MK2df\",\"yod5YhKtPqw2GfG9B\",\"4Lwjr34ypKNQNQCar\",\"2PufnQcsHsfymufX3\"],\"quality\":[3,5,5,3,5,3,5,5]},\"tests\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.25,\"family\":[{\"_id\":\"9Wvy5ogsYeXjyzMxo\",\"language\":\"javascript\"},{\"_id\":\"5FTMMxKmkQtuY9KBP\",\"language\":\"python3\"},{\"_id\":\"XvCXDvmskKpxNQZdN\",\"language\":\"ruby\"}]}}"]