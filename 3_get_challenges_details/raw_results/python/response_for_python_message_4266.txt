a["{\"msg\":\"result\",\"id\":\"851\",\"result\":{\"_id\":\"7ZFrHepr336TBMsF5\",\"author\":\"Cool_Kidd\",\"authorId\":\"i5iePG5GqhJJ8HEoB\",\"code\":\"def percentage_changed(old, new):\\n\\t\",\"difficulty\":1.4088050314465408,\"quality\":4.650793650793651,\"editorId\":\"i5iePG5GqhJJ8HEoB\",\"familyId\":\"po3sxv3fg2g7SHdvM\",\"instructions\":\"Create a function that takes an old price `old`, a new price `new`, and returns what percent the price decreased or increased. Round the percentage to the nearest whole percent.\\n\\n\\n### Examples\\n```\\npercentage_changed(\\\"$800\\\", \\\"$600\\\") ➞ \\\"25% decrease\\\"\\n\\npercentage_changed(\\\"$1000\\\", \\\"$840\\\") ➞ \\\"16% decrease\\\"\\n\\npercentage_changed(\\\"$100\\\", \\\"$950\\\") ➞ \\\"850% increase\\\"\\n```\\n\\n\\n### Notes\\nN/A\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(percentage_changed(\\\"$800\\\", \\\"$600\\\"), \\\"25% decrease\\\")\\nTest.assert_equals(percentage_changed(\\\"$1000\\\", \\\"$840\\\"), \\\"16% decrease\\\")\\nTest.assert_equals(percentage_changed(\\\"$700\\\", \\\"$650\\\"), \\\"7% decrease\\\")\\nTest.assert_equals(percentage_changed(\\\"$100\\\", \\\"$950\\\"), \\\"850% increase\\\")\\nTest.assert_equals(percentage_changed(\\\"$450\\\", \\\"$460\\\"), \\\"2% increase\\\")\\nTest.assert_equals(percentage_changed(\\\"$1000\\\", \\\"$1500\\\"), \\\"50% increase\\\")\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,1,1,2,1,3,2,2,2,1,1,2,0,0,1,2,1,2,1,2,0,1,1,2,1,2,0,3,2,2,2,0,2,2,1,1,2,1,2,1,0,2,0,2,1,2,1,2,2,1,0,1,2,1,2,0,1,1,2,2,2,2,0,1,2,2,2,2,2,1,1,2,2,2,0,2,2,2,1,2,2,0,2,0,2,2,2,0,2,1,0,2,2,2,2,1,2,2,2,2,0,2,2,3,0,2,1,2,2,1,2,0,2,1,1,2,0,0,2,2,1,2,2,1,2,2,2,3,2,2,2,2,0,1,2,2,1,0,2,2,1,2,1,2,0,2,2,1,1,1,1,0,0,2,1],\"quality\":[4,5,5,4,5,5,5,5,5,2,4,4,4,3,5,4,5,4,5,2,5,4,5,5,5,5,5,5,5,5,5,4,4,5,5,5,5,5,5,3,3,5,5,5,5,5,5,4,4,5,5,5,5,4,4,4,5,5,5,5,3,5,5,5,4,4,5,5,5,4,5,5,5,4,5,5,5,5,5,5,3,4,5,5,4,5,4,5,5,5,5,5,5,4,5,5,5,5,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,4,5,4,5,5,5,5,5],\"rators\":[\"i5iePG5GqhJJ8HEoB\",\"tAF9Gf6PiGogbZuWs\",\"DYDJTyGgKFnBRLm2r\",\"aEm3Wvj2rFYRL8Lrb\",\"iS5BrkGLzJyPK7nKt\",\"vkDmFjXr38ci33hdu\",\"8PwfYqoDQFThzNtvf\",\"p8qqFdJ3FSk5x9z3G\",\"gb9rvGus2Jv7bjZSs\",\"qD2LrwaDrSdiybLKY\",\"8fZxjQfuXw5HMSRJM\",\"QRv96jmNaYsWkxQEG\",\"bccs9koJxyQ9XNiLC\",\"8BFSTCnoe2QggN64c\",\"H4abACFDH5t8CnnyH\",\"eT9B9y9hN3CYgraDL\",\"6428wKHtwKkFdvBs5\",\"Kh3Pc2ZRusurLaMyP\",\"DEDniTrstQYGounXT\",\"3LiSLdtN58n46NEqg\",\"ga7aTTEThzsELuC2j\",\"YxmKxcbarjNRhrAfK\",\"4fhjJBvLBWh6QeSih\",\"JzAHBj4agJTT3J6qm\",\"6MjSiiBLPcvXbXcaZ\",\"eTJ5dxz6XaKjKJMeM\",\"Cb4JL37fqHyDrAW5N\",\"Cn9tye48LCWzCqCc5\",\"Lm6ChQCWBmaikmk5J\",\"CLypXaZksY99mpRCm\",\"w2HhxvSLmDhaGCAjE\",\"bHW2DujifaHo4YRWQ\",\"GGprTwrkjuccmrQRg\",\"HAtNvtvpTjB2DkhnG\",\"EMJ6uvBZkie429gdg\",\"Lg4t6SEWgtYz4u7Cj\",\"oyKcm3zqdy8Ko5P5d\",\"yFDL8HndbQKRbFkPk\",\"yjtdwc2AC4jA2RWtn\",\"J3upzLHuEwXH7Z2hx\",\"wRttWTM59y8m5mx7x\",\"s5M5RvgqR9BhB9JoC\",\"PXAcsKkssS2yLyDv2\",\"K4JsBLPjNKZv5LWnp\",\"cAP3n5NY64uoMwzRR\",\"2QGRoQn2dRq3scu7k\",\"g9FyJ8yeT9ic97Qp2\",\"f9nyEFTfYQxi2zkvt\",\"kXEfD7xxEyWd7oxxL\",\"dky93oMkJsJjEJKk2\",\"DPi9QGLctq2y76KuE\",\"xdgy7nWSKCekXnaJM\",\"CQhaiZqQcP87YteSG\",\"AJexRBN9cYQmqvYu6\",\"9CoqdidjM9KbeKnHY\",\"FEYpu9RWysAgW3XnP\",\"cR3ibTMxLyEdDFCHY\",\"a777e8chPvJkY3tKa\",\"Jg8ZSRXe3NoDMCqGu\",\"7K2GEb5TZRtSpyyGS\",\"pJj86xc32Bs7Frxvi\",\"axdSNLZpiCDF8RS6n\",\"GtWPwFmkp8TiobSN6\",\"NNE5HNRXAkmhrWgyQ\",\"Cybtjz3cF7RgoiqrN\",\"Yp7uvStL97cC9fKkY\",\"HF28xZKSLM9wEuqNg\",\"8JyqsSbN2FJXPr3cw\",\"rfyEkETeoS96QNH4e\",\"cE4rgfJr4yYT2dKsn\",\"d8qtzoLB264iP8tdY\",\"trkjZudN2F5HJKu7W\",\"gXTAie79kiw28tx5u\",\"sHjfbGQGLHE6JR6qu\",\"CEd9tLdXeDeNHSzys\",\"mggogirAnyXfeCQEZ\",\"EfxwqhYdapX3dMQC2\",\"zd9FLSzsGz3evKafy\",\"PTDFuxAzou7W6asWt\",\"oBcs8GLX2ZFLXQy8y\",\"CBcbixkhbQzwyZAZ3\",\"REpkEcYrskYHBmYzW\",\"RGMbFMZXJr7DhcAJy\",\"3nied3n8KG8RSNixH\",\"5f6oSeq4r5WTXLdCQ\",\"dj5AyG5fWP8FdsSmZ\",\"DrkR35NqnP9NDLbq6\",\"J5T8gZqiZXFuFDTQ7\",\"YLFHcoEWk6PzJPsnZ\",\"PJQJDjZaBxTXu4FyG\",\"GcR9CA587pfQuWHyB\",\"dYPkStFnLvAMsHSzZ\",\"YA7SDhpgEtsqynvNL\",\"Ls6f2HeQAN2khDCAc\",\"J23RcmzbdtBbPCTjT\",\"k48gQpCLSx5RFJAqA\",\"5HCu9Ydd86QgHDRNP\",\"pduNK68oazqQTtbLp\",\"6LALzas5RfirGrCBP\",\"gJYuGdkXEWWmGRLzu\",\"mmt7jwqbmSjzRSvqh\",\"zgdugy4Q75ZqZycvW\",\"gZWasw7x7u6wEhxyB\",\"rrSC943cCKNG48sH4\",\"MCw7uAcoWcSTBTmr3\",\"BvAw5WKMGAaryf5qC\",\"HMKp7iyeycYybEuGs\",\"u3exaHuZqYBnDBZh2\",\"tSCzroxbnkBqgYLNb\",\"4Kv8CNDndbmufNLGq\",\"uq6i66PuFNNww7d3G\",\"Cuy7McJ5y8BkXRRk9\",\"7scpcTEp3SEx5Wjg9\",\"r9hcWPFRkykfmBh9d\",\"nFbmNzMQ38TncmfQX\",\"PCT9BmR8G3DrXdYMc\",\"5io444mrtRMGa7eDu\",\"dBzwBtRjZqB98DJeB\",\"FJSLiBc35txbkMysH\",\"myiufZZ5sZbMf6ckA\",\"rK3xSCovoqjmkgBL9\",\"yod5YhKtPqw2GfG9B\",\"Fb2wehA7QgTFWry2x\",\"o4ixjQGSaYqA2JoM4\",\"pEnKJoTqfzhz2ph6m\",\"8aEGGQPkGesWwoaom\",\"7mmrgkvjot8qtixbh\",\"GGdmhAvxXhqhhibJN\",\"SPYSWseH56TkTzKGf\",\"Dq24MSpogRmq6L4hX\",\"RosFXZYJkcRwjkaog\",\"wJosiFATmZti3nEHG\",\"BrTDhPJcACL2bsrpJ\",\"NzbRqGWspQnWMoDrF\",\"niM4xfdLG7YRvky43\",\"QYGFGGjATDQQzzhFM\",\"FLiX537WTm25ahBek\",\"3hn2iKzAgaA4a7dF3\",\"REbXuiozZdcmS4iiJ\",\"NfMJuiBk6FN5Jc6ow\",\"dmi9KsAmriMQzsDFJ\",\"tpxMgkGSHwBjS95Ta\",\"LCZ6JTAhBZBmWLzm8\",\"k6nECzENAqxQj8drR\",\"kNrnnMxhFZztMTBAX\",\"XbxHXmh5ZmRN2gw3K\",\"NuqGt5u3s7vJ7HBGR\",\"FvFhg2wELM3SCZDZQ\",\"4fjSgcqhQQZM2ZFRP\",\"GqothajHR2vKfEHGZ\",\"sKfrD9gjCDHuqLzSk\",\"JS3hNM3XXkxPdg3yk\",\"KJCDwGkoXh8qtbbKr\",\"5XiuAqicKD4hBdu63\",\"bz883xR7WdSKXxjwY\",\"7mdKbwWEy3wKi5H4h\",\"9FCeFzjPA4jrQ7oHW\",\"c2u7qfdaYxcyuydtu\",\"nfXGHENb5md7m355s\",\"ey3CASd6Je5LEJzfB\",\"9onLFjwWr6DqyRBJw\",\"C2AfMipCicfD58WJ9\",\"R4SjTgDnpigJYDLyL\",\"utTuvGdmu2sBHWBhQ\",\"HuNF3xTBzmatyGSTm\",\"pmgq5qGsQs6CT5r2D\",\"wjc4iejpErBhxWwHo\",\"ZyrfhDTZHb8LymH5b\",\"nJXgbSQozcoE8Wn4N\",\"Jqk2uJZZxEv5wZFze\",\"WdKdsgH9gXkKgCycx\",\"2EbDCCJJvCfKkbYia\",\"Ecg4m7srYGgZsb4Ck\",\"KEmTti9Tza8A2FLQW\",\"GT9wLv8Lipyp6YYTp\",\"9Hp6Z83SwWxMQRouq\",\"iF4tdvn5sA9CM4T6T\",\"buX4mCQhtXCfBjeno\",\"MXGuntvz3byrP6WJc\",\"p7js9trz2zk2RorCR\",\"PexKJN2gNdthuHKxZ\",\"gf7u4MKcGDFiijzK9\",\"uouMMdEWBuLBWPbzr\",\"5S9nX4rKsnCcnv4Cz\",\"HqmxnQJM66Y57twhn\",\"aaJWssCWfMa63XJng\",\"DqNQn9Jsxcu5HijKE\",\"YRAzEBJoLvSaiPtYx\",\"Fk9kLwoG4Brf4KsKf\",\"5hQnRWiKkhgKJXNMP\",\"7N6c3Xu244bnQWjBs\",\"DHghRMdMFbnwMj7WW\",\"Nb6LYPoQP6KJZt8mz\",\"vCxuabDxEv9YC3Szb\",\"Ds7L5bksw2QRHjrKL\",\"LPGPHgJc8MkvcEDBc\",\"gSFJPsMXnqAog3Q9f\",\"srJ34BaybkQh3qRkM\",\"2fxapKr8XGdNeaKi2\",\"N2wnZXkhDH86mgjQ8\",\"q6QsMYNMpPNtmyTeW\",\"qQQ4hCQpzitmHSkjS\",\"nc7bRhkxgKyqusYe3\",\"YcCLwitFMAEJSnxAW\",\"eYfPWvZwnJQkHbSTK\",\"CHvzhtXnv8HTbPQ56\",\"qAby4AWXmTNeusvg3\",\"pPpmP7xeJzGgK362R\",\"9ivvGvJGvtQfigQaZ\",\"3cF6NXq3ZEwdkgSjb\",\"iojEnnY9FsMfYzp6f\",\"XD5nmvKQchKezPXhy\",\"eMuCpJ2spXWkJjWNz\",\"u5u2YpHXiNgzDNJdX\",\"AFfw7cGg83uYk2Miy\",\"66a9xX73nmTEuKs9k\",\"Wpn95NqWxncQrwNgz\",\"dJzNF59j2p8jWZxiQ\",\"GTKsdeEihE636Le9i\",\"2HfNkb2SoqdyjKW3o\",\"PC3pLs36zNzpRDSuE\",\"Cc2Cgj4MWXZxsTooC\",\"K6MfKMytoJJuSGewP\",\"2PufnQcsHsfymufX3\",\"X4rzfxGgxx6CS7Bpz\",\"qZQxPQ2kaNKAMesHT\",\"yr822PZmmiDDenxpB\",\"tdfY4iBvD7oh2ufnN\",\"c2q7mY39z5JPEMCaM\",\"mvJBakQ35CWAnbbEZ\",\"ghMkPtdFCpM6w8nax\",\"eHcgvkTGsH7ZziqBo\",\"RoGGD5cpHb4ftdLDv\",\"jWbd7SYDzLPjc9EDh\",\"9Ly8afdtofp8DXzrt\",\"AasGs8AeX9Lcb9xJn\",\"sKBGcRfEr6LrvG8A2\",\"R6YxHWAiLgKwy5YvC\",\"4Lwjr34ypKNQNQCar\",\"9pzFiFK3ANLjQfnr2\",\"sbJcFfQjQ59Wfg4Cd\",\"qzXAMXsHZGT8o5hTA\",\"4RY3zj9C2t8GGefhi\",\"JiSpvq6C7azQEmENc\",\"MKT7khMBGXzA22ykf\",\"hR7GMiqGap4CzEWSy\",\"XZKzLyDK3ywfSmyar\",\"2iFe3EHEH2YdhSKrs\",\"796v8eRqahP6wpLdL\",\"4TmgHkn5vqyHK3sYC\",\"vecmkxXCheGp2aS6o\",\"StNu7DPyTgEStZsMY\",\"T6Rm8mREPMZSftzrC\",\"jkbavR2ATFJcpmo8M\",\"uGuS9YRXW2nj4p6zf\",\"d9LBRxvADNBB5QJMB\",\"AQSqD9oNv2uPfxZCR\",\"dzS6WBTMHyFEag6Fp\",\"AMpQSjKsRqhCDyS2j\",\"yAouD3PxzED8a4gap\",\"Qyfyyw6oC4EHAndzo\",\"B4y8aoyXJtskYPFEL\",\"QWjsXnLaJ7xfL3Amq\",\"rCrbqMiaGPgHYTNxu\",\"ag8tcfPvJZWpRnwet\",\"qB6KSTYC6H2TQEQY6\",\"o2AEoyCijeNx5MEqW\",\"mxX4rH5ELYkdZ2Mbw\",\"wFucsxkob2fST5KxD\",\"5QN8R22z43SrwoHDz\",\"gpGXTvjS2HrY9Skq5\",\"8uiLiJcmWxWe6qw65\",\"vCeeMuYDbz3MB4vsk\",\"BJp2WkwLWGHHB5oQW\",\"vAbK8sCfKyFC78HYg\",\"Wi4H6ayKsNDWWQCG5\",\"rDgKHd6ZSSpboiAj7\",\"ruzwBPphPDRgLXdnP\",\"RfbjShbg8jmhyNtJh\",\"Cg3LKtEAJpsrdWroG\"],\"total\":304},\"flags\":0},\"summary\":\"Create a function that takes an old price old, a new price new, and returns what percent the price decreased or increased. Round the percentage to the nearest whole percent.\\n\\nExamples\\npercentage_changed(\\\"$800\\\", \\\"$600\\\") ➞ \\\"25% decrease\\\"\\n\\npercentage_changed(\\\"$1000\\\", \\\"$840\\\") ➞ \\\"16% decrease\\\"\\n\\npercentage_changed(\\\"$100\\\", \\\"$950\\\") ➞ \\\"850% increase\\\"\\n\\nNotes\\nN/A\",\"tags\":[\"math\"],\"timestamp\":{\"$date\":1601064138751},\"title\":\"Percentage Changed\",\"family\":[{\"_id\":\"GbpGaSuTJ37WWKdW4\",\"language\":\"cpp\"},{\"_id\":\"dETRK2YLCtEPAMvMb\",\"language\":\"java\"},{\"_id\":\"C6ytXLzadegnWtCZF\",\"language\":\"javascript\"},{\"_id\":\"7ZFrHepr336TBMsF5\",\"language\":\"python3\"},{\"_id\":\"jhyWgRvXsXbdzZgRf\",\"language\":\"ruby\"}]}}"]