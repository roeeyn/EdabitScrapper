a["{\"msg\":\"result\",\"id\":\"1677\",\"result\":{\"_id\":\"kjQGrpw9gfhMhPMF4\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def palindrome_set(lst):\\n\\t\",\"difficulty\":2.144230769230769,\"familyId\":\"Aub5h9SJPkFAQ6yoi\",\"instructions\":\"Strings can be segregated into both their letter and digit components.\\n\\n1. A **double palindrome** is when a string's letter component and digit component are both palindromes.\\n2. A **single-palindrome** is when either (but **not both**) the letter component or the digit component are palindromes.\\n\\nTo illustrate:\\n```\\n\\\"cab97ac79\\\"\\n# double-palindrome: \\\"cabac\\\" and \\\"9779\\\" are both palindromes.\\n\\n\\\"1abc4de1\\\"\\n# single-palindrome: \\\"141\\\" is a palindrome.\\n```\\n\\nWrite a function that maps **double palindromes** to the number **2**, **single palindromes** to the number **1**, and everything else to the number **0**.\\n\\n### Examples\\n```\\npalindrome_set([\\\"cb77c\\\", \\\"ccc888\\\", \\\"ccc789\\\", \\\"abc89\\\"]) ➞ [2, 2, 1, 0]\\n\\npalindrome_set([\\\"789\\\", \\\"555\\\", \\\"ccc\\\", \\\"abba\\\"]) ➞ [0, 1, 1, 1]\\n\\npalindrome_set([\\\"7a\\\", \\\"5f\\\", \\\"6c\\\"]) ➞ [2, 2, 2]\\n```\\n\\n### Notes\\n- A string is composed of only letters or only numbers, can be at most a single palindrome (see example #2).\\n- All single character components are trivially palindromes (see example #3).\\n- All letters will be lower cased.\",\"lab\":\"Test.assert_equals(palindrome_set([\\\"cb77c\\\", \\\"ccc888\\\", \\\"ccc789\\\", \\\"abc89\\\"]), [2, 2, 1, 0])\\nTest.assert_equals(palindrome_set([\\\"18a99b89cc881ba\\\", \\\"p7o8p987\\\", \\\"p7o\\\", \\\"p7o8\\\"]), [1, 2, 1, 0])\\nTest.assert_equals(palindrome_set([\\\"ab9a\\\", \\\"abba\\\", \\\"aa78bb8bbaa7\\\", \\\"a88a\\\"]), [2, 1, 2, 2])\\nTest.assert_equals(palindrome_set([\\\"789\\\", \\\"555\\\", \\\"ccc\\\", \\\"abba\\\"]), [0, 1, 1, 1])\\nTest.assert_equals(palindrome_set([\\\"7a\\\", \\\"5f\\\", \\\"6c\\\"]), [2, 2, 2])\\nTest.assert_equals(palindrome_set([\\\"7ab\\\", \\\"5fc\\\", \\\"6cd\\\"]), [1, 1, 1])\\nTest.assert_equals(palindrome_set([\\\"87ab\\\", \\\"15fc\\\", \\\"26cd\\\"]), [0, 0, 0])\\nTest.assert_equals(palindrome_set([\\\"1234ab\\\", \\\"144a441\\\"]), [0, 2])\\nTest.assert_equals(palindrome_set([\\\"\\\"]), [0])\",\"language\":\"python3\",\"summary\":\"Strings can be segregated into both their letter and digit components.\\n\\nA double palindrome is when a string's letter component and digit component are both palindromes.\\nA single-palindrome is when either (but not both) the letter component or the digit component are palindromes.\\n\\nTo illustrate:\\n\\\"cab97ac79\\\"\\ndouble-palindrome: \\\"cabac\\\" and \\\"9779\\\" are both palind\",\"tags\":[\"strings\",\"regex\"],\"timestamp\":{\"$date\":1554956081345},\"title\":\"Double Palindromes\",\"stats\":{\"completed\":{\"total\":110,\"ratings\":[2,2,2,2,2,2,2,2,2,2,2,3,2,2,2,1,3,3,2,2,3,3,3,1,2,2,0,2,2,3,1,3,2,0,2,2,3,1,2,3,3,3,3,0,2,2,2,4,4,2,1,2,3,3,2,3,2,3,0,3,1,3,1,2,3,3,2,2,3,4,2,0,2,1,1,3,3,3,3,1,0,2,1,2,3,3,2,3,3,2,3,3,3,3,0,0,1,2,3,2,3,3,1,3],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"Jqk2uJZZxEv5wZFze\",\"8JyqsSbN2FJXPr3cw\",\"M8jrv2FfpMQp9Qzpx\",\"gb9rvGus2Jv7bjZSs\",\"tAF9Gf6PiGogbZuWs\",\"XjC9ivzaAxfcFiSGj\",\"T3ZAuoMrJjvZwN55B\",\"P59rek6gvwTzHvRYa\",\"ab7BsQuhDo3QgE6bh\",\"nc7bRhkxgKyqusYe3\",\"MXjxGML2X75x64vJo\",\"kQH5b8MXJunh84Czq\",\"iqmPb9JuJDgTFeR8Q\",\"PFjMZGHNAPTkgd7tq\",\"AF6LgdKhEdzwgRJom\",\"C9LKGu2g5hSijvDzA\",\"6u7yc9m6HuHGbHzph\",\"aXCm9vWqKwL9XFYoj\",\"yrCNkFYQBEDE76eFS\",\"jYJ26SiLKBu5GRumq\",\"AYaEkTWLMmfzpwejr\",\"WkWyq9wMkZhXB6zsD\",\"cR3ibTMxLyEdDFCHY\",\"T2vhHPhRR96hRizq8\",\"nfXGHENb5md7m355s\",\"N2wnZXkhDH86mgjQ8\",\"Nj6FwgBtAXsaQwsM2\",\"gMJhLdyw3tH7L96X2\",\"k32Wnn8ptAyRfutqf\",\"XKi8iZXBCHCaebSHh\",\"oqGkxvASXq52iTDvp\",\"t6bXCX76smm7B3bEN\",\"HqmxnQJM66Y57twhn\",\"Dw8RZgg5iHBuFrWwQ\",\"2fxapKr8XGdNeaKi2\",\"L8fNe7CzxwQAESjET\",\"EXZfPb8YH28EL8Rh9\",\"7ruSdfLTRKgEXhhvA\",\"6ShafRStcvew4GfCh\",\"C4QntmkYtB89GNtpd\",\"s5M5RvgqR9BhB9JoC\",\"2innwjWqxJHo4eRGh\",\"AnjjyuE9aWLzK3nkg\",\"AasGs8AeX9Lcb9xJn\",\"pmgFEciNrd3ES9tuu\",\"8PwfYqoDQFThzNtvf\",\"aEm3Wvj2rFYRL8Lrb\",\"Y2Bt4re9LEZ9eSXWC\",\"Z85ajWfZ4jDPkbvR4\",\"mDWNyaaQ9hvPCRzSd\",\"ZNnsMeNkdDhHjSrZb\",\"gPvrBxxySDP2vpux3\",\"YRstQuthRkFeBiXug\",\"55RQznnuTGpsj3EXd\",\"KdNDysEsy2TW5QRJ2\",\"gJYuGdkXEWWmGRLzu\",\"HF28xZKSLM9wEuqNg\",\"rgvAJFwfCeYoYnFTK\",\"hnyhBFWwNCz9mDfSi\",\"a777e8chPvJkY3tKa\",\"PCTGbXBpNgYbFf48T\",\"v9KtC8YLbMWmXiW2H\",\"Ecg4m7srYGgZsb4Ck\",\"R4SjTgDnpigJYDLyL\",\"cykCKNJcqFBxz4T8s\",\"DEDniTrstQYGounXT\",\"n2BRY9X8899dcG8Bw\",\"9CYPZtZepq7HM9ckH\",\"iojEnnY9FsMfYzp6f\",\"zZDaXBxMzTCBhNkgL\",\"yjtdwc2AC4jA2RWtn\",\"KZ2xddpM2f9JRaryB\",\"d8qtzoLB264iP8tdY\",\"Yp7uvStL97cC9fKkY\",\"XjajdyybZZbkz8o5x\",\"QRv96jmNaYsWkxQEG\",\"p8qqFdJ3FSk5x9z3G\",\"qD2LrwaDrSdiybLKY\",\"DPi9QGLctq2y76KuE\",\"xn7uGNKeAwPEkP9oA\",\"J3upzLHuEwXH7Z2hx\",\"dkcmCKwqApX5jBggc\",\"gXTAie79kiw28tx5u\",\"5f6oSeq4r5WTXLdCQ\",\"PXAcsKkssS2yLyDv2\",\"cAP3n5NY64uoMwzRR\",\"oBcs8GLX2ZFLXQy8y\",\"CTKmXtrqDYqJBnuy8\",\"Ybz7Ys4eKpAC6mZgx\",\"GGdmhAvxXhqhhibJN\",\"srJ34BaybkQh3qRkM\",\"JKb5rhL6DKcCAypF9\",\"MpfytGFYF77emJ3cT\",\"T6iBEE2jp7f7iEF2P\",\"gKnWjDjwrJh7MK2df\",\"eHcgvkTGsH7ZziqBo\",\"yod5YhKtPqw2GfG9B\",\"buX4mCQhtXCfBjeno\",\"4Lwjr34ypKNQNQCar\",\"2PufnQcsHsfymufX3\",\"JhX7jvtpwNyxcc39m\",\"8sNv5PTHa7XQ8bNqR\",\"DQskEvAv5KiJDPtGF\"],\"quality\":[5,3,5,4,5,5,5,5,5]},\"tests\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"editorId\":\"mNMQvcxKSSvqqMYCH\",\"isHidden\":false,\"quality\":4.666666666666667,\"family\":[{\"_id\":\"XqbL6onu8MNJPqyg9\",\"language\":\"cpp\"},{\"_id\":\"KsbT9c2zf7jczanTt\",\"language\":\"javascript\"},{\"_id\":\"WrdByTa9tj7jgWfgP\",\"language\":\"php\"},{\"_id\":\"kjQGrpw9gfhMhPMF4\",\"language\":\"python3\"},{\"_id\":\"BFR5R4426YWoHtrqq\",\"language\":\"ruby\"}]}}"]