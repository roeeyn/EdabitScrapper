a["{\"msg\":\"result\",\"id\":\"410\",\"result\":{\"_id\":\"swRynR33w7ycQemyc\",\"author\":\"Werdna\",\"authorId\":\"buX4mCQhtXCfBjeno\",\"code\":\"def multi_sum(n, ten = 10):\\n\\t\",\"difficulty\":0.808695652173913,\"familyId\":\"LLd9vH6TGkMXZ4KFB\",\"instructions\":\"Given a number, return the total sum of that number multiplied by every number between 1 and 10. Do not use the `sum()` built-in function.\\n\\n### Examples\\n```\\nmulti_sum(1) ➞ 55\\n# 1 x 1 + 1 x 2 + 1 x 3 ...... 1 x 9 + 1 x 10 = 55\\n\\nmulti_sum(6) ➞ 330\\n# 6 x 1 + 6 x 2 + 6 x 3 ...... 6 x 9 + 6 x 10 = 330\\n\\nmulti_sum(10) ➞ 550\\n\\nmulti_sum(8) ➞ 440\\n\\nmulti_sum(2) ➞ 110\\n```\\n\\n### Notes\\nUse recursion to solve this challenge.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(multi_sum(1), 55)\\nTest.assert_equals(multi_sum(2), 110)\\nTest.assert_equals(multi_sum(3), 165)\\nTest.assert_equals(multi_sum(4), 220)\\nTest.assert_equals(multi_sum(5), 275)\\nTest.assert_equals(multi_sum(6), 330)\\nTest.assert_equals(multi_sum(7), 385)\\nTest.assert_equals(multi_sum(8), 440)\\nTest.assert_equals(multi_sum(9), 495)\\nTest.assert_equals(multi_sum(10), 550)\\n\\n# Author: ben3297\",\"language\":\"python3\",\"quality\":4.708333333333333,\"summary\":\"Given a number, return the total sum of that number multiplied by every number between 1 and 10. Do not use the sum() built-in function.\\n\\nExamples\\nmulti_sum(1) ➞ 55\\n1 x 1 + 1 x 2 + 1 x 3 ...... 1 x 9 + 1 x 10 = 55\\n\\nmulti_sum(6) ➞ 330\\n6 x 1 + 6 x 2 + 6 x 3 ...... 6 x 9 + 6 x 10 = 330\\n\\nmulti_sum(10) ➞ 550\\n\\nmulti_sum(8) ➞ 440\\n\\nmulti_sum(2) ➞ 110\\n\\nNotes\\nUse recurs\",\"tags\":[\"math\",\"numbers\",\"recursion\"],\"timestamp\":{\"$date\":1611335094393},\"title\":\"Recursion: Sum of Multiplication\",\"stats\":{\"completed\":{\"total\":152,\"ratings\":[1,1,1,1,1,1,0,1,1,0,0,1,2,0,0,2,0,1,0,1,2,1,0,0,0,5,0,0,0,3,0,1,0,2,0,0,0,2,0,3,3,0,0,0,0,0,2,2,0,1,1,0,2,0,1,0,1,2,1,2,1,0,0,0,0,1,1,0,0,0,0,0,2,1,0,0,3,1,2,0,1,0,1,1,1,0,2,2,1,1,1,1,1,2,0,1,0,0,1,1,0,0,2,0,2,1,0,0,2,2,0,1,1,0,0],\"quality\":[5,5,5,5,5,4,4,5,5,5,5,5,5,5,5,4,3,3,5,5,5,5,5,5],\"rators\":[\"buX4mCQhtXCfBjeno\",\"Jqk2uJZZxEv5wZFze\",\"umE8dRTGWzrZFp755\",\"DDD5tzD2m8bcntBB8\",\"pPpmP7xeJzGgK362R\",\"6gHaCTMvjCk5ggBFm\",\"ghMkPtdFCpM6w8nax\",\"rfyEkETeoS96QNH4e\",\"iS5BrkGLzJyPK7nKt\",\"Ds7L5bksw2QRHjrKL\",\"PXAcsKkssS2yLyDv2\",\"gb9rvGus2Jv7bjZSs\",\"DEDniTrstQYGounXT\",\"srJ34BaybkQh3qRkM\",\"QRv96jmNaYsWkxQEG\",\"T6iBEE2jp7f7iEF2P\",\"7dQYiDeTcMztbGyso\",\"wRttWTM59y8m5mx7x\",\"eYfPWvZwnJQkHbSTK\",\"YRAzEBJoLvSaiPtYx\",\"J5T8gZqiZXFuFDTQ7\",\"DPi9QGLctq2y76KuE\",\"cR3ibTMxLyEdDFCHY\",\"CHvzhtXnv8HTbPQ56\",\"JS3hNM3XXkxPdg3yk\",\"yjtdwc2AC4jA2RWtn\",\"AFfw7cGg83uYk2Miy\",\"HBuJYgW2eRBJp9FoG\",\"oBcs8GLX2ZFLXQy8y\",\"uvLimfW9x3bCp7huQ\",\"gJYuGdkXEWWmGRLzu\",\"AXcnPX68zdMiLNSmu\",\"FEYpu9RWysAgW3XnP\",\"7q8oBsCHwn48Ppnrq\",\"zd9FLSzsGz3evKafy\",\"XD5nmvKQchKezPXhy\",\"PC3pLs36zNzpRDSuE\",\"fTNQmMvTZhhiGBCMe\",\"5HCu9Ydd86QgHDRNP\",\"qAby4AWXmTNeusvg3\",\"GdKtjPh8TcfmJuduv\",\"3cF6NXq3ZEwdkgSjb\",\"8JyqsSbN2FJXPr3cw\",\"Dq24MSpogRmq6L4hX\",\"aEm3Wvj2rFYRL8Lrb\",\"Yp7uvStL97cC9fKkY\",\"dJzNF59j2p8jWZxiQ\",\"yAouD3PxzED8a4gap\",\"YcCLwitFMAEJSnxAW\",\"J3upzLHuEwXH7Z2hx\",\"4bb7pim4ewTwrMTEA\",\"Nb6LYPoQP6KJZt8mz\",\"iojEnnY9FsMfYzp6f\",\"N2wnZXkhDH86mgjQ8\",\"AHxeLzhhZHHAgYwuL\",\"kjvgTyRFyKHv44DcH\",\"eMuCpJ2spXWkJjWNz\",\"66a9xX73nmTEuKs9k\",\"JKbEBybAsiKrmcqof\",\"dRcJRaXpzeBQKyYtF\",\"fw8yNarAm6zcv6cvv\",\"2QGRoQn2dRq3scu7k\",\"XrqNzJ2FRG8HnGiR6\",\"tAF9Gf6PiGogbZuWs\",\"M6fxKEh6am7YajPiT\",\"XujK3rHd3JcM9TLJy\",\"Qa5JtcCBvYBGLwsMB\",\"4TmgHkn5vqyHK3sYC\",\"9Ly8afdtofp8DXzrt\",\"mvJBakQ35CWAnbbEZ\",\"FgMe2gzbxog9WzaRr\",\"jgyuzt5BpA3ohHG96\",\"dvj7QJQ2merTtndan\",\"H9KZi2cjt4FwH7qog\",\"FQ2u72N38dcoDubRq\",\"T6Rm8mREPMZSftzrC\",\"JiSpvq6C7azQEmENc\",\"d8qtzoLB264iP8tdY\",\"j7ebNFtte6fSkMWjj\",\"2MjzJ7yxh3eT3xbng\",\"zC8WrPp5BC6c2exrW\",\"pwWtbXEjzuvrhEGwt\",\"DTyNcDkiScCjgJt28\",\"Ju76wMJs7kL7o6Ybt\",\"9pzFiFK3ANLjQfnr2\",\"HqmxnQJM66Y57twhn\",\"hPMgnPPjNSfMkH46u\",\"Afnps7TJQuS9sipMb\",\"FRN2W8RYpJ6GPhgRy\",\"XbxHXmh5ZmRN2gw3K\",\"gKnWjDjwrJh7MK2df\",\"7tbtTx6uxePv6eQwP\",\"MKT7khMBGXzA22ykf\",\"SkQcb2sRn4as5KpnN\",\"sZThi4jGYDhZrt5FW\",\"9B7EDC5ZfNaNibmiX\",\"Fk9kLwoG4Brf4KsKf\",\"dYPkStFnLvAMsHSzZ\",\"d9LBRxvADNBB5QJMB\",\"29gjd96MmCApubR7n\",\"9LrF5o2TK2iE8BZJh\",\"sbJcFfQjQ59Wfg4Cd\",\"sHjfbGQGLHE6JR6qu\",\"TCvpT4EPb8qNssNB7\",\"eHcgvkTGsH7ZziqBo\",\"5QN8R22z43SrwoHDz\",\"B4y8aoyXJtskYPFEL\",\"rhS8qXRjZcpDXkwnE\",\"mxX4rH5ELYkdZ2Mbw\",\"ZvoqkwZQC52on5hpY\",\"baynZKH4tv7SGb8qL\",\"wjc4iejpErBhxWwHo\",\"Cg3LKtEAJpsrdWroG\",\"PTDFuxAzou7W6asWt\",\"vAbK8sCfKyFC78HYg\",\"NJqamrQSnhuYcGL2s\",\"8PwfYqoDQFThzNtvf\",\"tR9grPBLncwacBTzr\",\"x2Cz7S8rCKJqCE3Xe\",\"pWD2YC5s4YRCxFc2i\",\"KEmTti9Tza8A2FLQW\",\"5nbHH4eApn6So9h2n\",\"PmRyaLmhAF4MMLBtM\",\"rF97GDLqCgynr7BaD\",\"Wi4H6ayKsNDWWQCG5\",\"rrSC943cCKNG48sH4\",\"hgEPnitaC2QZPJT6t\",\"Ne8mK9DDHG8TRkoxG\",\"FiaTpm7ehfDv43wSG\",\"mdRQaGT98ycMt87S2\",\"sMcFMPkMJC4Kh6ymj\",\"x6zWWvmst3aGNr3Cr\",\"dRsW64NZ24uurTpqv\",\"7HAL7H6NJmc4NC8Q5\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"tBE5DRbLesaR3SBxF\",\"language\":\"cpp\"},{\"_id\":\"W8R9CPBThreBBXYLS\",\"language\":\"javascript\"},{\"_id\":\"YcjDGjuYmFPfHKPkG\",\"language\":\"php\"},{\"_id\":\"swRynR33w7ycQemyc\",\"language\":\"python3\"},{\"_id\":\"ebZsHxndC2ZqE4jhY\",\"language\":\"ruby\"}]}}"]