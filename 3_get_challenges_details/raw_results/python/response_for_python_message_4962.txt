a["{\"msg\":\"result\",\"id\":\"1196\",\"result\":{\"_id\":\"tMiJJkuAFDfsdmdZK\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"def to_snake_case(txt):\\n\\t\\n\\ndef to_camel_case(txt):\\n\\t\",\"difficulty\":1.6588235294117648,\"familyId\":\"rJeHMN6JMpfhyZGiy\",\"instructions\":\"Create two functions `to_camel_case()` and `to_snake_case()` that each take a single string and convert it into either camelCase or snake_case. If you're not sure what these terms mean, check the **Resources** tab above.\\n\\n### Examples\\n```\\nto_camel_case(\\\"hello_edabit\\\") ➞ \\\"helloEdabit\\\"\\n\\nto_snake_case(\\\"helloEdabit\\\") ➞ \\\"hello_edabit\\\"\\n\\nto_camel_case(\\\"is_modal_open\\\") ➞ \\\"isModalOpen\\\"\\n\\nto_snake_case(\\\"getColor\\\") ➞ \\\"get_color\\\"\\n```\\n\\n### Notes\\nTest input will always be appropriately formatted as either camelCase or snake_case, depending on the function being called.\",\"lab\":\"# camelCase to snake_case tests\\nTest.assert_equals(to_snake_case(\\\"edabit\\\"), \\\"edabit\\\")\\nTest.assert_equals(to_snake_case(\\\"helloEdabit\\\"), \\\"hello_edabit\\\")\\nTest.assert_equals(to_snake_case(\\\"isModalOpen\\\"), \\\"is_modal_open\\\")\\nTest.assert_equals(to_snake_case(\\\"getBackgroundColor\\\"), \\\"get_background_color\\\")\\nTest.assert_equals(to_snake_case(\\\"isLoading\\\"), \\\"is_loading\\\")\\nTest.assert_equals(to_snake_case(\\\"x\\\"), \\\"x\\\")\\n\\n# snake_case to camelCase tests\\nTest.assert_equals(to_camel_case(\\\"edabit\\\"), \\\"edabit\\\")\\nTest.assert_equals(to_camel_case(\\\"hello_edabit\\\"), \\\"helloEdabit\\\")\\nTest.assert_equals(to_camel_case(\\\"is_modal_open\\\"), \\\"isModalOpen\\\")\\nTest.assert_equals(to_camel_case(\\\"get_background_color\\\"), \\\"getBackgroundColor\\\")\\nTest.assert_equals(to_camel_case(\\\"is_loading\\\"), \\\"isLoading\\\")\\nTest.assert_equals(to_camel_case(\\\"x\\\"), \\\"x\\\")\",\"language\":\"python3\",\"summary\":\"Create two functions tocamelcase() and tosnakecase() that each take a single string and convert it into either camelCase or snake_case. If you're not sure what these terms mean, check the Resources tab above.\\n\\nExamples\\ntocamelcase(\\\"hello_edabit\\\") ➞ \\\"helloEdabit\\\"\\n\\ntosnakecase(\\\"helloEdabit\\\") ➞ \\\"hello_edabit\\\"\\n\\ntocamelcase(\\\"ismodalopen\\\") ➞ \\\"isModalOpen\\\"\\n\\ntosnakeca\",\"tags\":[\"algorithms\",\"regex\",\"formatting\",\"strings\"],\"timestamp\":{\"$date\":1539811267330},\"title\":\"camelCase  ⇄  snake_case\",\"stats\":{\"completed\":{\"total\":280,\"ratings\":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,1,2,3,2,2,2,2,1,1,2,2,2,2,2,1,2,2,1,1,2,3,2,2,1,0,2,2,2,2,3,2,2,2,1,1,1,2,4,2,2,0,2,2,2,2,1,2,2,0,3,2,2,5,2,2,0,2,3,1,2,2,1,2,2,1,3,2,2,1,2,2,2,2,1,2,2,2,2,2,2,1,2,2,2,2,1,2,1,2,1,1,0,2,2,1,0,1,0,2,2,0,2,1,2,4,0,0,2,1,2,2,2,0,1,1,2,2,1,1,2,2,1,2,3,2,2,2,2,0,2,2,3,2,2,1,2,2,2,1,2,2,2,2,1,2,2,3,0,2,3,2,0,2,2,1,1,2,2,3,2,2,2,1,2,2,2,2,2,2,0,0,1,2,1,2,2,2,2,3,2,1,2,2,2,2,2,2,2,1,2,1,1,2,2,1,2,2,3,2,2,0,2,2,1,2,1,2,3,2,0,2,2,2,3,1,1,2,2,1,2,0,1,2,0,3,1,2,2,2,2,1,1,1,1,1],\"rators\":[\"BkPgkDQGHm66X4Qai\",\"5Cbk6ahoBh6HNYkzZ\",\"M8jrv2FfpMQp9Qzpx\",\"T2W32kBnES6zya9Bv\",\"BB5JZjLtpcrk2AJXb\",\"2GuzKEuE5QK5nDyrQ\",\"pzvkvJTaKRQthRjo2\",\"Qm7WibLuCP7hW3iXi\",\"tAF9Gf6PiGogbZuWs\",\"NfMJuiBk6FN5Jc6ow\",\"woL3gGTZHTMhmCi26\",\"THD2EHgtJa2ooivJK\",\"pERQZF4Ss55QuXsj9\",\"9j8nvw7NhJoMm34HF\",\"8yXcdARsCtaYrQaNc\",\"GBm7coD9fKczoq3NQ\",\"nZ58gDWFhqXiZpmZQ\",\"2tCCFm5iefjrRSaxv\",\"mJvkMXND2BjRvtped\",\"WKsvry6M74GDrtqHQ\",\"T82JyZFPNz8maF8f8\",\"jeuoearPPTcGPgXhf\",\"ktw5fXRXnoY9em4wd\",\"SK3kJggzuets9AFj6\",\"ku6MeoHXoHwHkChpg\",\"QgdwHjy4x6MCPwfh9\",\"nc7bRhkxgKyqusYe3\",\"6fJpRpAgiWD5zX9qB\",\"Kzom5ikn7BRrRgiES\",\"RsX6W2ddWM8ajHzss\",\"eW5cHd5p5nv9XoLr4\",\"e8rN3eRBu8goBosnx\",\"7CwgH38hHpiGdu2zT\",\"cBCgxKeWmdcPwz4MH\",\"Nj6FwgBtAXsaQwsM2\",\"uJ5A3zjLi9iN5eeXX\",\"n9PZCXcWTygjaDsXs\",\"aTNWfAYfTZn2Ejn63\",\"jwgBL9AKmfxPCFoTo\",\"owKPDRTN8gi9CcPW2\",\"pT7ESkjcQTjmmaTXv\",\"PAjQoyYKAkYAXERhf\",\"W959nYTsTvFf9stJj\",\"sugzbfJyLjWxmx2pq\",\"6QwHpeajrbLQAm64L\",\"d2XCAmNhp79ea8a65\",\"hR7GMiqGap4CzEWSy\",\"uSiHKggtKNw9CLzyJ\",\"SKabuq5XuhXBugKBa\",\"FHzvDACEZuAjRwL7v\",\"TJQcScCtNRobD8P4k\",\"xQ7uLC6QTtEyKENv9\",\"RS7z6xJFR4ZAx6zZA\",\"nusQQTi9vR569v4b5\",\"FjLPxCcT7urtALbos\",\"zgoEhAyhrjnsSLPGw\",\"ycZbLj5WRWuGWR8oK\",\"83i7PKDRGfBw5DLst\",\"q5s7yTnMdEoeXRTnH\",\"jtB5tDvfCunf2Ep2X\",\"6W2GSzrYjMD9ANBFY\",\"vjgbYJGLr39bACXND\",\"8JyqsSbN2FJXPr3cw\",\"vwmjqntQ9FvszKRye\",\"j3XimmYb3NEL5gLxX\",\"z7KAn4vEJTcrDKaum\",\"qvEvDcL32a5F4Tg6c\",\"FyDah3MTRW8vXTB6G\",\"mGmoXwXiopnnnqYdh\",\"DngKYE9GzXrRNyCPr\",\"Jqk2uJZZxEv5wZFze\",\"gb9rvGus2Jv7bjZSs\",\"PRPv763woB2EqjWvZ\",\"p6MPFLtmJ2z8EQT4Q\",\"qaR8DnWrTk8Mus5Q2\",\"yZvzB3qFb8pkHy4dg\",\"k66z8NfCwxStFg2qz\",\"4HC75a4BAtjSd8jPv\",\"X9NeqaKpfykoscpYr\",\"uSh3aNxzD28jBuhxa\",\"Y3KkPrBzMBgMiqaQ6\",\"T3ZAuoMrJjvZwN55B\",\"FikSPhcrHBpQ4CyGC\",\"ab7BsQuhDo3QgE6bh\",\"AF6LgdKhEdzwgRJom\",\"byHBadxxhnF5Ht7xH\",\"kQH5b8MXJunh84Czq\",\"6ckDJWbyznyQQLkrP\",\"iqmPb9JuJDgTFeR8Q\",\"gGnDsJz5hr2t9MKCF\",\"Rgdjr9tBGabXFdoXL\",\"PFjMZGHNAPTkgd7tq\",\"TNQ7ixK78HHTLP7it\",\"ahWFxnaxt9bXSA4f3\",\"tHEH9MBHBAGvhgJGd\",\"P6XMt2GRRvJiKppvJ\",\"C9LKGu2g5hSijvDzA\",\"4kJMafuJWxzhDht2w\",\"TNMAJidLpPdH4kmBv\",\"yrCNkFYQBEDE76eFS\",\"o5pRKAbyH9TjiB59q\",\"PSrcg6fy835R4c5CW\",\"6u7yc9m6HuHGbHzph\",\"WkWyq9wMkZhXB6zsD\",\"mecEbrAmatXjb29FL\",\"N2wnZXkhDH86mgjQ8\",\"td7qPZ7Lv4pEWT2Ya\",\"jHrtWDGBhkbuWa7fG\",\"7PTKd4xtWnbL7BzL2\",\"nfXGHENb5md7m355s\",\"JEAi9mG3vvBomJ3Yu\",\"3fjCCrpR2aD32sTrc\",\"XKi8iZXBCHCaebSHh\",\"tADjEJQCYFvZtjPKS\",\"cR3ibTMxLyEdDFCHY\",\"8ZSLfiJZfDgeh745T\",\"T2vhHPhRR96hRizq8\",\"6opWr6XoKoo6CziTg\",\"3LiSLdtN58n46NEqg\",\"gMJhLdyw3tH7L96X2\",\"HQxp7NcdvF92G7bYS\",\"3SKmXhcLPPkmQhjip\",\"Jg8ZSRXe3NoDMCqGu\",\"otXtuQygbcYATMZoP\",\"jYypgEfhDWb9syYP7\",\"HqmxnQJM66Y57twhn\",\"2fxapKr8XGdNeaKi2\",\"qJZsi5rhRnWA38FbA\",\"SqZGTR952w2XgymqL\",\"DLai9DxpZN6p5TPRX\",\"K96FwtfDDN5WM4Bb7\",\"yabtHTtycsWhcGBfD\",\"RnwQLPwyQABqBqHhd\",\"K3RacTvkWHLfzKF8i\",\"6ShafRStcvew4GfCh\",\"sz5duKFGpqN74k7SY\",\"C4QntmkYtB89GNtpd\",\"JhF96CoChAEaRZnrf\",\"SmP5gFFTDvYxCYygY\",\"vgTvCCxgvbCTDvaRT\",\"4tgBydK887PitgAoi\",\"KdNhsHAQg83SsBTgg\",\"7b5t29Hsd7iD9c5CT\",\"BeFnbPbMnAM2SjBdZ\",\"2innwjWqxJHo4eRGh\",\"KLFvDWHZAnYgxioJi\",\"QnPD4Sv6W4LHc2Qng\",\"PXAcsKkssS2yLyDv2\",\"9o3TRDwE7jYs4vPLw\",\"orFLgPDw9H5MDzmwo\",\"AasGs8AeX9Lcb9xJn\",\"sbJcFfQjQ59Wfg4Cd\",\"4CFzv558qbGcpQwc4\",\"3efW5qCKraPjzEfiX\",\"v3fjGuc7Pq4yjFygS\",\"aEm3Wvj2rFYRL8Lrb\",\"p3dsCFdWGzWGhFrSQ\",\"QKtxPPRK5h3eqno6p\",\"mxX4rH5ELYkdZ2Mbw\",\"vLrq4dEDMM2wd68Dc\",\"y3jMuL7y6jd9JrERs\",\"Yp7uvStL97cC9fKkY\",\"dHZqT6h4JMwk5fPC8\",\"jNvegJWCk5HCtEMbK\",\"8PwfYqoDQFThzNtvf\",\"ZNnsMeNkdDhHjSrZb\",\"6c4xjEdFxdYw5xGrt\",\"hnyhBFWwNCz9mDfSi\",\"JZbBYihgT6m7bKvgc\",\"6ZapS9L6t66jQCqxA\",\"gJYuGdkXEWWmGRLzu\",\"s5M5RvgqR9BhB9JoC\",\"DEDniTrstQYGounXT\",\"HF28xZKSLM9wEuqNg\",\"ijDkrdZLoL5Cfqco3\",\"KdNDysEsy2TW5QRJ2\",\"9pzFiFK3ANLjQfnr2\",\"EjbDDFRECrzQDkzrX\",\"FzxTj4GuujhwpZM7y\",\"mDWNyaaQ9hvPCRzSd\",\"ahk2qiXKJA753wAJk\",\"586FdBhazpwJfnRYR\",\"yh5MwZbc8z28fyeay\",\"a777e8chPvJkY3tKa\",\"H9KZi2cjt4FwH7qog\",\"PytNZK9mNiRiZxPrm\",\"DWp2uozZmattoNS87\",\"LjoNTyGEMfBpMHHus\",\"n2BRY9X8899dcG8Bw\",\"R4SjTgDnpigJYDLyL\",\"iojEnnY9FsMfYzp6f\",\"syRNbbPdLCGXbH2Gy\",\"MKT7khMBGXzA22ykf\",\"YcCLwitFMAEJSnxAW\",\"ZrKCkX7xxGGZzauFW\",\"pWYjN62ZAKQZ7Xp3W\",\"Pe8vWpDHRuH9nSGKW\",\"yjtdwc2AC4jA2RWtn\",\"PTDFuxAzou7W6asWt\",\"J7vxgYJinpo4N7SBv\",\"Kz7ee56Ht4Ns8JjBj\",\"NNE5HNRXAkmhrWgyQ\",\"j49s8dHmmiyPxZmWj\",\"oBcs8GLX2ZFLXQy8y\",\"yJKsrbZs7koZHuJm4\",\"zZDaXBxMzTCBhNkgL\",\"7K2GEb5TZRtSpyyGS\",\"v9KtC8YLbMWmXiW2H\",\"gXTAie79kiw28tx5u\",\"QRv96jmNaYsWkxQEG\",\"DYDJTyGgKFnBRLm2r\",\"H4abACFDH5t8CnnyH\",\"jSaW4kdeAAGoLxcuP\",\"DPi9QGLctq2y76KuE\",\"p8qqFdJ3FSk5x9z3G\",\"2QGRoQn2dRq3scu7k\",\"9qZCkf7gio5b4voFF\",\"J3upzLHuEwXH7Z2hx\",\"dYPkStFnLvAMsHSzZ\",\"FEYpu9RWysAgW3XnP\",\"cZccqzRQ9GgjQF6Az\",\"5XiuAqicKD4hBdu63\",\"5hQnRWiKkhgKJXNMP\",\"DpnYcMphntjsQ96qg\",\"cAP3n5NY64uoMwzRR\",\"RGMbFMZXJr7DhcAJy\",\"zT9LpkiwYjLviYYW6\",\"dBzwBtRjZqB98DJeB\",\"zd9FLSzsGz3evKafy\",\"YRAzEBJoLvSaiPtYx\",\"rfyEkETeoS96QNH4e\",\"5S9nX4rKsnCcnv4Cz\",\"GGdmhAvxXhqhhibJN\",\"xn7uGNKeAwPEkP9oA\",\"srJ34BaybkQh3qRkM\",\"Nua6T3dBurBy3Qfg9\",\"qAby4AWXmTNeusvg3\",\"BaMPABEaxuPNCA8G8\",\"d8qtzoLB264iP8tdY\",\"Ds7L5bksw2QRHjrKL\",\"LQxof8pGabGuWP7Gn\",\"hiGXnxds6zo7XsfTw\",\"J5T8gZqiZXFuFDTQ7\",\"M6fxKEh6am7YajPiT\",\"66a9xX73nmTEuKs9k\",\"o4ixjQGSaYqA2JoM4\",\"AJexRBN9cYQmqvYu6\",\"5HCu9Ydd86QgHDRNP\",\"jkys684AAfPRxrYaD\",\"eHcgvkTGsH7ZziqBo\",\"JKb5rhL6DKcCAypF9\",\"PC3pLs36zNzpRDSuE\",\"CHvzhtXnv8HTbPQ56\",\"qzXAMXsHZGT8o5hTA\",\"mvJBakQ35CWAnbbEZ\",\"T6iBEE2jp7f7iEF2P\",\"BrTDhPJcACL2bsrpJ\",\"sHjfbGQGLHE6JR6qu\",\"yod5YhKtPqw2GfG9B\",\"d9LBRxvADNBB5QJMB\",\"ey3CASd6Je5LEJzfB\",\"2PufnQcsHsfymufX3\",\"2GqwLSFTistwsztkX\",\"eMuCpJ2spXWkJjWNz\",\"4Lwjr34ypKNQNQCar\",\"3nied3n8KG8RSNixH\",\"Wi4H6ayKsNDWWQCG5\"],\"quality\":[4,5,5,5,5,3,4,5,5,5,5,5,5,5,4,5,5,5,5,5,5]},\"tests\":{\"score\":-13.85,\"rators\":[\"BkPgkDQGHm66X4Qai\"],\"voters\":[\"7CwgH38hHpiGdu2zT\"]},\"instructions\":{\"score\":9.950000000000001,\"rators\":[\"BkPgkDQGHm66X4Qai\"],\"voters\":[\"iMgXdDCgeaSRogeN3\",\"LfR9Bopm57BMNNnkp\"]},\"flags\":0},\"isHidden\":false,\"quality\":4.761904761904762,\"family\":[{\"_id\":\"mEEsMKznTCq25PWvD\",\"language\":\"cpp\"},{\"_id\":\"RBqvKrYLxtM57G5FQ\",\"language\":\"csharp\"},{\"_id\":\"HjvecTb3aFMjJ59sB\",\"language\":\"java\"},{\"_id\":\"uts8XsD5zGHdHr32u\",\"language\":\"javascript\"},{\"_id\":\"tMiJJkuAFDfsdmdZK\",\"language\":\"python3\"},{\"_id\":\"wyekSPQ6XgGefuiiy\",\"language\":\"ruby\"},{\"_id\":\"mcFMfwEQscSTZTHsT\",\"language\":\"swift\"}]}}"]