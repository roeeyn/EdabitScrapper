a["{\"msg\":\"result\",\"id\":\"2320\",\"result\":{\"_id\":\"rX9ZdzWuj3ZbyCCd5\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"def multiply_by_11(s):\\n\\t# recursive code here\",\"difficulty\":3.7,\"familyId\":\"f2L9aTQPqAsxHpb7F\",\"instructions\":\"Given a **positive** number as a string, multiply the number by **11** and also return it as a **string**. However, there is a catch:\\n\\n**You are NOT ALLOWED to simply cast the numeric string into an integer!**\\n\\nNow, how is this challenge even possible? Despite this, there is still a way to solve it, and it involves thinking about how someone might multiply by 11 in their head. See the tips below for guidance.\\n\\n### Examples\\n```\\nmultiply_by_11(\\\"11\\\") ➞ \\\"121\\\"\\n\\nmultiply_by_11(\\\"111111111\\\") ➞ \\\"1222222221\\\"\\n\\nmultiply_by_11(\\\"1213200020\\\") ➞ \\\"13345200220\\\"\\n\\nmultiply_by_11(\\\"1217197941\\\") ➞ \\\"13389177351\\\"\\n\\nmultiply_by_11(\\\"9473745364784876253253263723\\\") ➞ \\\"104211199012633638785785900953\\\"\\n```\\n\\n### Tip\\nThere is a simple trick to multiplying any two-digit number by 11 in your head:\\n\\n1. Add the two digits together\\n2. Place the sum between the two digits!\\n3. Note if the total goes over, carry the sum on to the next digit\\n\\n```\\n# 23 * 11\\n# Add together 2 and 3 to make 5\\n# Place 5 between the two digits to make 253\\n```\\n\\n```\\n# 77 * 11\\n# Add together 7 and 7 to make 14\\n# Place 4 between the two digits to make 747\\n# Carry the 1 to make 847\\n```\\n\\n### Notes\\n- See this [resource](https://trachtenbergspeedmath.com/multiplication/basic-multiplication/multiplying-by-eleven/) to find out how this process can be utilized for numbers of any length.\\n- This challenge was heavily inspired by **Mubashir Hassan**'s [challenge](https://edabit.com/challenge/aHGLnfW7xdMrhJZpo) on adding two numbers together.\\n- You are expected to solve this challenge **recursively**.\\n- An **iterative** versioin of this challenge can be found via this [link](https://edabit.com/challenge/hY6BMxxEYycT83GPs).\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"from inspect import getsource\\nfrom re import findall, MULTILINE as M\\n\\ndef is_recursive(src):\\n\\ttry:\\n\\t\\tn = getsource(src).split(\\\"=\\\")[0].strip() if src.__name__ == \\\"<lambda>\\\" else src.__name__\\n\\t\\treturn len(findall(n, getsource(src), flags=M)) > 1\\n\\texcept OSError: return True\\n\\nTest.assert_not_equals(is_recursive(multiply_by_11), False, 'Recursion is required!')\\n\\nactual_param = [\\n  \\\"11\\\", \\\"113434\\\", \\\"111111111\\\", \\\"1213200020\\\", \\\"1217197941\\\", \\\"12345678987654321\\\", \\\"9473745364784876253253263723\\\",\\n  \\\"57798475537262775664949793178544410084322125871112100873888108368764143479609636230947305905435344501732127613092539526132478297050231140298675968743242036743911849895415821806568888540371506471898980622461341526051319836717892341981184041251420949699402992990039646759030590473730159880164726562551837027321585062972130328324427060636687637549685519707281109006818275101108700527287692750795014581999611840743604415714313247263830886107561336757943548272922950996455097654414521769924004347236729944\\\"\\n]\\nexpected_param = [\\n  \\\"121\\\", \\\"1247774\\\", \\\"1222222221\\\", \\\"13345200220\\\", \\\"13389177351\\\", \\\"135802468864197531\\\", \\\"104211199012633638785785900953\\\",\\n  \\\"635783230909890532314447724963988510927543384582233109612769192056405578275705998540420364959788789519053403744017934787457261267552542543285435656175662404183030348849574039872257773944086571190888786847074756786564518203896815761793024453765630446693432922890436114349336495211031758681811992188070207300537435692693433611568697667003564013046540716780092199075001026112195705800164620258745160401995730248179648572857445719902139747183174704337379031002152460961006074198559739469164047819604029384\\\"\\n]\\nfor i in range(85, 101): Test.assert_equals(multiply_by_11(str(i)), str(i*11))\\nfor i, x in enumerate(actual_param): Test.assert_equals(multiply_by_11(x), expected_param[i])\",\"language\":\"python3\",\"quality\":0,\"summary\":\"Given a positive number as a string, multiply the number by 11 and also return it as a string. However, there is a catch:\\n\\nYou are NOT ALLOWED to simply cast the numeric string into an integer!\\n\\nNow, how is this challenge even possible? Despite this, there is still a way to solve it, and it involves thinking about how someone might multiply by 11 in their head\",\"tags\":[\"recursion\",\"strings\",\"logic\",\"math\",\"numbers\"],\"timestamp\":{\"$date\":1606872182679},\"title\":\"Recursion: Multiply By 11\",\"stats\":{\"completed\":{\"total\":16,\"ratings\":[4,4,4,4,4,4,5,1,3,5,5,5,5,4,1,5,1,5,5,0],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"8PwfYqoDQFThzNtvf\",\"aEm3Wvj2rFYRL8Lrb\",\"s5M5RvgqR9BhB9JoC\",\"mDWNyaaQ9hvPCRzSd\",\"iS5BrkGLzJyPK7nKt\",\"5dHucvf2qBYyKim7X\",\"58M252WF7SPRinfBx\",\"eHcgvkTGsH7ZziqBo\",\"8sNv5PTHa7XQ8bNqR\",\"iojEnnY9FsMfYzp6f\",\"yjtdwc2AC4jA2RWtn\",\"gJYuGdkXEWWmGRLzu\",\"tAF9Gf6PiGogbZuWs\",\"T6iBEE2jp7f7iEF2P\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"745DLsFEmEQqdA6m3\",\"language\":\"java\"},{\"_id\":\"DQKQ4N87t2aN5NDX6\",\"language\":\"javascript\"},{\"_id\":\"rX9ZdzWuj3ZbyCCd5\",\"language\":\"python3\"}]}}"]