a["{\"msg\":\"result\",\"id\":\"2020\",\"result\":{\"_id\":\"X9CsA6955cKRApBNH\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def longest_run(lst):\\n\\t\",\"difficulty\":2.7884615384615383,\"familyId\":\"Ymm75mEm9qZx3nsuF\",\"instructions\":\"A **consecutive-run** is a list of adjacent, consecutive integers. This list can be either increasing or decreasing. Create a function that takes a list of numbers and returns the length of the longest **consecutive-run**.\\n\\nTo illustrate:\\n\\n```\\nlongestRun([1, 2, 3, 5, 6, 7, 8, 9]) ➞ 5\\n# Two consecutive runs: [1, 2, 3] and [5, 6, 7, 8, 9] (longest).\\n```\\n\\n### Examples\\n```\\nlongest_run([1, 2, 3, 10, 11, 15]) ➞ 3\\n# Longest consecutive-run: [1, 2, 3].\\n\\nlongest_run([5, 4, 2, 1]) ➞ 2\\n# Longest consecutive-run: [5, 4] and [2, 1].\\n\\nlongest_run([3, 5, 7, 10, 15]) ➞ 1\\n# No consecutive runs, so we return 1.\\n```\\n\\n### Notes\\nIf there aren't any consecutive runs (there is a gap between each integer), return `1`.\",\"lab\":\"Test.assert_equals(longest_run([1, 2, 3, 5, 6, 7, 8, 9]), 5)\\nTest.assert_equals(longest_run([1, 2, 3, 10, 11, 15]), 3)\\nTest.assert_equals(longest_run([-7, -6, -5, -4, -3, -2, -1]), 7)\\nTest.assert_equals(longest_run([3, 5, 6, 10, 15]), 2)\\nTest.assert_equals(longest_run([3, 5, 7, 10, 15]), 1)\\nTest.assert_equals(longest_run([5, 4, 3, 2, 1]), 5)\\nTest.assert_equals(longest_run([5, 4, 2, 1]), 2)\\nTest.assert_equals(longest_run([10, 9, 0, 5]), 2)\\nTest.assert_equals(longest_run([1, 2, 3, 2, 1]), 3)\\nTest.assert_equals(longest_run([10, 9, 8, 7, 6, 2, 1]), 5)\",\"language\":\"python3\",\"summary\":\"A consecutive-run is a list of adjacent, consecutive integers. This list can be either increasing or decreasing. Create a function that takes a list of numbers and returns the length of the longest consecutive-run.\\n\\nTo illustrate:\\n\\nlongestRun([1, 2, 3, 5, 6, 7, 8, 9]) ➞ 5\\nTwo consecutive runs: [1, 2, 3] and [5, 6, 7, 8, 9] (longest).\\n\\nExamples\\nlongest_run([1, \",\"tags\":[\"arrays\",\"control_flow\",\"logic\",\"loops\"],\"timestamp\":{\"$date\":1553225959332},\"title\":\"Longest Consecutive Run\",\"stats\":{\"completed\":{\"total\":110,\"ratings\":[2,2,2,2,2,2,2,2,2,2,3,3,3,4,3,4,2,4,2,3,3,3,3,3,3,1,4,3,4,2,3,4,4,4,3,4,3,2,3,4,4,3,3,3,4,4,3,3,3,3,2,4,4,1,3,2,4,4,4,1,1,4,2,4,4,2,1,2,4,2,3,3,4,0,4,4,3,3,1,4,3,2,3,4,1,3,2,3,1,3,2,1,3,3,4,1,3,3,2,3,4,3,2,0],\"rators\":[\"BkPgkDQGHm66X4Qai\",\"Jqk2uJZZxEv5wZFze\",\"qaR8DnWrTk8Mus5Q2\",\"8JyqsSbN2FJXPr3cw\",\"nydW2HwDGZuk8XaEL\",\"yZvzB3qFb8pkHy4dg\",\"W2RBjMJ9KQPg4tjNZ\",\"gywTMxnFaA59QnQvz\",\"M8jrv2FfpMQp9Qzpx\",\"XjC9ivzaAxfcFiSGj\",\"jdQrck9YLmJQFPb7N\",\"tAF9Gf6PiGogbZuWs\",\"T3ZAuoMrJjvZwN55B\",\"4kZeR3xpJAcjnsfMe\",\"cF8nvyGwfFKE5b2iy\",\"nrA8Pacm3A6GqGzq4\",\"ab7BsQuhDo3QgE6bh\",\"QzqL4jkcY4BMmNuS8\",\"GMbZRE4gvgfkDxSvY\",\"EPgZSeQrPkXKnTqdG\",\"W2wFFFx9pqgwmkFi3\",\"P59rek6gvwTzHvRYa\",\"QaE2QnnBbzdiExxPH\",\"pkZ2pAaDxWo6Nwur4\",\"MXjxGML2X75x64vJo\",\"FikSPhcrHBpQ4CyGC\",\"7g3vZaQXhLpxrajyg\",\"gb9rvGus2Jv7bjZSs\",\"AYaEkTWLMmfzpwejr\",\"PFjMZGHNAPTkgd7tq\",\"hsrNYf3WbexXJKhCq\",\"pci5yjeqMeYpPhfhL\",\"BFNm9gacwba9KyLFW\",\"LFXa8d8wqE3nWYFeP\",\"zrTMJSGALvxyWjpSt\",\"GgLd4eWBu79mdjtkP\",\"HQxp7NcdvF92G7bYS\",\"2NJuDfSqdrF8kHHni\",\"fAoLuqbGvHn4w2PHf\",\"PuJDHtAaX6vXeJJTC\",\"hrzGaJc9KZqgjAvew\",\"s5M5RvgqR9BhB9JoC\",\"HqmxnQJM66Y57twhn\",\"wT5gGgvjKc5wz59AQ\",\"ydEdzuCCZt4yny9Rq\",\"2innwjWqxJHo4eRGh\",\"8AipP2ZKTAhvzfQAr\",\"8PwfYqoDQFThzNtvf\",\"pmgFEciNrd3ES9tuu\",\"WLFPvm65aHfgwQy7N\",\"orFLgPDw9H5MDzmwo\",\"aEm3Wvj2rFYRL8Lrb\",\"AasGs8AeX9Lcb9xJn\",\"bBDRPg36HWtc9tqb6\",\"fznzd3qnvtbFkkizz\",\"kYWb8BwpKwunQkxeX\",\"aLwJNALj2MpjAGZz4\",\"Sj4iamMmNvxwWJBiF\",\"ZNnsMeNkdDhHjSrZb\",\"PtaiHYXnMwb2rWqQW\",\"cR2YL369v9ifrcw2v\",\"eHhL37DG7oW3vTcg7\",\"gJYuGdkXEWWmGRLzu\",\"ebPYSECG97bnpAp7s\",\"W5TajitmCyxz87zAC\",\"5dHucvf2qBYyKim7X\",\"a777e8chPvJkY3tKa\",\"ACEZh39brWjdGkZXb\",\"f2BoqyCpgnmjEjLqx\",\"HsWdmsRPfzYvXd6j4\",\"Z4M3NAa4TXquMNkHe\",\"mDWNyaaQ9hvPCRzSd\",\"KAE5csCXsqwzSCQqP\",\"dzS6WBTMHyFEag6Fp\",\"xn7uGNKeAwPEkP9oA\",\"KBxTPknCRmB2b5y3i\",\"DNGkwLuAzEACszkAx\",\"Ecg4m7srYGgZsb4Ck\",\"8fZxjQfuXw5HMSRJM\",\"D62kvgDJ6asnsFaEw\",\"gSFJPsMXnqAog3Q9f\",\"rGpPd6PvpzLaqps4g\",\"iS5BrkGLzJyPK7nKt\",\"HF28xZKSLM9wEuqNg\",\"LW8PqW4HFXWfoJGo6\",\"yTtSCvGPyYna6JuRC\",\"8sNv5PTHa7XQ8bNqR\",\"p8qqFdJ3FSk5x9z3G\",\"DPi9QGLctq2y76KuE\",\"c7uBxu2rgY77H5d79\",\"oXJbZzDbT6N2qgqR3\",\"iojEnnY9FsMfYzp6f\",\"J3upzLHuEwXH7Z2hx\",\"yjtdwc2AC4jA2RWtn\",\"GTKsdeEihE636Le9i\",\"DQCt4iuj2pdQ7LPAX\",\"BrTDhPJcACL2bsrpJ\",\"2PufnQcsHsfymufX3\",\"MpfytGFYF77emJ3cT\",\"Yp7uvStL97cC9fKkY\",\"gXTAie79kiw28tx5u\",\"n2qKKxomPnb4zez5M\"],\"quality\":[5,4,5,5,3,5,5]},\"tests\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"instructions\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.571428571428571,\"family\":[{\"_id\":\"ivgSXDHDJ2oLhbR4c\",\"language\":\"cpp\"},{\"_id\":\"NwSd26PwgggJquov3\",\"language\":\"java\"},{\"_id\":\"J3HA3p3enpxnMJCmd\",\"language\":\"javascript\"},{\"_id\":\"X9CsA6955cKRApBNH\",\"language\":\"python3\"},{\"_id\":\"jg6pGB2REnk5PzCsm\",\"language\":\"ruby\"}]}}"]