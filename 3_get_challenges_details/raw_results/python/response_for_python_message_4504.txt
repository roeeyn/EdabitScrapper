a["{\"msg\":\"result\",\"id\":\"968\",\"result\":{\"_id\":\"x3pW72MfFLi2GYh6g\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"def is_scalable(lst):\\n\\t\",\"difficulty\":1.4917127071823204,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"47SrSh9CobgLFTWAm\",\"instructions\":\"Given a list of numbers, representing the height of a mountain in certain\\t intervals, return whether this mountain is **scalable**.\\n\\nA mountain can be considered *scalable* if each number is within **5** units of the next number in either direction.\\n\\n### Examples\\n```\\nis_scalable([1, 2, 4, 6, 7, 8]) ➞ True\\n\\nis_scalable([40, 45, 50, 45, 47, 52]) ➞ True\\n\\nis_scalable([2, 9, 11, 10, 18, 21]) ➞ False\\n```\\n\\n### Notes\\nThe list may start at any number and can be any length.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(is_scalable([1, 2, 4, 6, 7, 8]), True)\\nTest.assert_equals(is_scalable([40, 45, 50, 48, 47, 52]), True)\\nTest.assert_equals(is_scalable([2, 9, 11, 10, 18, 21]), False)\\nTest.assert_equals(is_scalable([200, 200, 200, 200]), True)\\nTest.assert_equals(is_scalable([30, 29, 24, 19, 16, 11]), True)\\nTest.assert_equals(is_scalable([22, 22, 22, 29, 29, 29, 29]), False)\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,2,3,2,1,0,1,5,1,2,2,2,0,2,1,1,2,2,1,2,1,2,1,1,0,1,2,1,2,0,2,2,0,2,0,2,1,2,1,1,2,2,1,0,1,0,2,1,2,1,2,2,2,1,2,1,2,2,2,2,1,1,0,2,2,2,2,1,2,0,2,1,2,2,2,2,2,1,2,2,1,1,2,1,0,2,2,1,0,0,1,0,2,2,2,3,1,2,0,1,2,1,2,2,1,2,2,2,2,2,2,1,2,0,2,2,2,2,2,2,1,2,2,2,0,0,0,2,2,0,5,2,2,0,2,0,2,2,0,0,2,1,2,2,1,2,2,2,2,2,2,2,0,2,2,2,0,2,1,2,2,2,2,2,0,2,1,2,1,1,2,1,1,1,0,3],\"rators\":[\"PXAcsKkssS2yLyDv2\",\"tAF9Gf6PiGogbZuWs\",\"8PwfYqoDQFThzNtvf\",\"AasGs8AeX9Lcb9xJn\",\"gb9rvGus2Jv7bjZSs\",\"aEm3Wvj2rFYRL8Lrb\",\"8Tikd2acFcCBT8YeQ\",\"J5T8gZqiZXFuFDTQ7\",\"8JyqsSbN2FJXPr3cw\",\"SBoDxhFzmTha4YeMe\",\"uQBhQarDwFhja3sAf\",\"9pzFiFK3ANLjQfnr2\",\"tf3bCG9amo7iguT5a\",\"YzaMuXsKkut8nSNDH\",\"wPxeazAYct9gG2eRM\",\"DERsW7XTpCRaWsHtR\",\"AdskwgPdbteQrpLAe\",\"vLrq4dEDMM2wd68Dc\",\"w3A7cBWyAfukk6xEQ\",\"s5M5RvgqR9BhB9JoC\",\"2fxapKr8XGdNeaKi2\",\"dHZqT6h4JMwk5fPC8\",\"Yp7uvStL97cC9fKkY\",\"CRoY655aiRDBDq3uM\",\"cR3ibTMxLyEdDFCHY\",\"Jg8ZSRXe3NoDMCqGu\",\"jNvegJWCk5HCtEMbK\",\"yZvzB3qFb8pkHy4dg\",\"hnyhBFWwNCz9mDfSi\",\"2QGRoQn2dRq3scu7k\",\"gJYuGdkXEWWmGRLzu\",\"hiGXnxds6zo7XsfTw\",\"HF28xZKSLM9wEuqNg\",\"DEDniTrstQYGounXT\",\"aRqQ42J5zqCmBNd8w\",\"N2wnZXkhDH86mgjQ8\",\"KdNDysEsy2TW5QRJ2\",\"8LfTheFzvicameoz9\",\"zrKW9g4QaF555zmgJ\",\"C9LKGu2g5hSijvDzA\",\"rgvAJFwfCeYoYnFTK\",\"FzxTj4GuujhwpZM7y\",\"nQRzZKeDKuLRf9chX\",\"4rwxLqLs2mNZNg8NB\",\"FEYpu9RWysAgW3XnP\",\"ahk2qiXKJA753wAJk\",\"MKT7khMBGXzA22ykf\",\"XrqNzJ2FRG8HnGiR6\",\"ENsSYogEHHeDSrFod\",\"WHR8EHPPEpghNnpXt\",\"kQH5b8MXJunh84Czq\",\"DrkR35NqnP9NDLbq6\",\"yr822PZmmiDDenxpB\",\"YA7SDhpgEtsqynvNL\",\"Nua6T3dBurBy3Qfg9\",\"DWp2uozZmattoNS87\",\"4yNLEwL2rsx4EE5Nt\",\"a777e8chPvJkY3tKa\",\"So6PHm74mfJuY2WTs\",\"H9KZi2cjt4FwH7qog\",\"m6D2RuQJwrAK6WB3v\",\"orFLgPDw9H5MDzmwo\",\"eMuCpJ2spXWkJjWNz\",\"2ptN2mhjFwFcHyPZd\",\"s9GzySPz9vpMNQ2vj\",\"NG8PWBSjsM8mMhQEq\",\"H4abACFDH5t8CnnyH\",\"3cF6NXq3ZEwdkgSjb\",\"ZrKCkX7xxGGZzauFW\",\"Ecg4m7srYGgZsb4Ck\",\"n2BRY9X8899dcG8Bw\",\"syRNbbPdLCGXbH2Gy\",\"zd9FLSzsGz3evKafy\",\"JS3hNM3XXkxPdg3yk\",\"jN3vmzf6ad7EubAjQ\",\"iS5BrkGLzJyPK7nKt\",\"iojEnnY9FsMfYzp6f\",\"iBTooWAGe7dD9svva\",\"6D8i8x8Jg6cbCvMd9\",\"YcCLwitFMAEJSnxAW\",\"NNE5HNRXAkmhrWgyQ\",\"2innwjWqxJHo4eRGh\",\"CwXsu25ygLEwQbmQC\",\"Pe8vWpDHRuH9nSGKW\",\"mxX4rH5ELYkdZ2Mbw\",\"R4SjTgDnpigJYDLyL\",\"Wv2vJnEj8ywNmARoF\",\"pWYjN62ZAKQZ7Xp3W\",\"yjtdwc2AC4jA2RWtn\",\"hRiMXDZNAzyPd5tpt\",\"6SKDJwXpev4qPSzgM\",\"HqmxnQJM66Y57twhn\",\"oBcs8GLX2ZFLXQy8y\",\"8BFSTCnoe2QggN64c\",\"ta5CrWnBCRusD2WMo\",\"BwKEyzyW3pA97iQ2b\",\"Q9afpRu3u8zuWuzLQ\",\"6gS4E2C84vBYTYeDZ\",\"M8dQuMrEpP8Hc3tHN\",\"RehJGBFS6CYiWdjZx\",\"TPhfpB5tzQWSSn67n\",\"d8qtzoLB264iP8tdY\",\"EMJ6uvBZkie429gdg\",\"QDrLtnBsA2LJfptvT\",\"p8qqFdJ3FSk5x9z3G\",\"i5iePG5GqhJJ8HEoB\",\"ji5f27FPz4wRRF6Ls\",\"KLmLKaJPfsYxp42p2\",\"FvFhg2wELM3SCZDZQ\",\"k2Eo3wyfZZ6KxvKhN\",\"Kh3Pc2ZRusurLaMyP\",\"tpxMgkGSHwBjS95Ta\",\"mG8HqKiAQFTdRZthG\",\"9CoqdidjM9KbeKnHY\",\"gXTAie79kiw28tx5u\",\"7K2GEb5TZRtSpyyGS\",\"GGprTwrkjuccmrQRg\",\"b5zo7s6xrqWgQnPao\",\"3nied3n8KG8RSNixH\",\"cZccqzRQ9GgjQF6Az\",\"5HCu9Ydd86QgHDRNP\",\"DPi9QGLctq2y76KuE\",\"wRttWTM59y8m5mx7x\",\"8WpvgSbQciTQWdd8T\",\"QRv96jmNaYsWkxQEG\",\"dj5AyG5fWP8FdsSmZ\",\"J3upzLHuEwXH7Z2hx\",\"9FCeFzjPA4jrQ7oHW\",\"8fZxjQfuXw5HMSRJM\",\"dYPkStFnLvAMsHSzZ\",\"KJCDwGkoXh8qtbbKr\",\"cAP3n5NY64uoMwzRR\",\"RGMbFMZXJr7DhcAJy\",\"DYDJTyGgKFnBRLm2r\",\"5XiuAqicKD4hBdu63\",\"sHjfbGQGLHE6JR6qu\",\"Jqk2uJZZxEv5wZFze\",\"axdSNLZpiCDF8RS6n\",\"HuNF3xTBzmatyGSTm\",\"K3RacTvkWHLfzKF8i\",\"8we49y2cXuirbyGZg\",\"A2s3kZBihpquE9hnt\",\"vD6KFppvxCPu6ywps\",\"WJ8vMQsx4eSPWcQd5\",\"RDdowRq5HwvTkAGCB\",\"SrtSFictS6zShzpxY\",\"buX4mCQhtXCfBjeno\",\"R29kgJ9M7R4qqwjcE\",\"eYfPWvZwnJQkHbSTK\",\"5S9nX4rKsnCcnv4Cz\",\"5hQnRWiKkhgKJXNMP\",\"GGdmhAvxXhqhhibJN\",\"o4ixjQGSaYqA2JoM4\",\"srJ34BaybkQh3qRkM\",\"GqothajHR2vKfEHGZ\",\"Ds7L5bksw2QRHjrKL\",\"4RsakkyRXyYGwFxEa\",\"CHvzhtXnv8HTbPQ56\",\"T2vhHPhRR96hRizq8\",\"qAby4AWXmTNeusvg3\",\"T6iBEE2jp7f7iEF2P\",\"ey3CASd6Je5LEJzfB\",\"wjc4iejpErBhxWwHo\",\"7txFzDQ43vJ7qCY88\",\"66a9xX73nmTEuKs9k\",\"PC3pLs36zNzpRDSuE\",\"AFfw7cGg83uYk2Miy\",\"NzbRqGWspQnWMoDrF\",\"yod5YhKtPqw2GfG9B\",\"fKHMppG37yHQkHYHM\",\"BrTDhPJcACL2bsrpJ\",\"AJexRBN9cYQmqvYu6\",\"LQxof8pGabGuWP7Gn\",\"Wpn95NqWxncQrwNgz\",\"mvJBakQ35CWAnbbEZ\",\"c2q7mY39z5JPEMCaM\",\"9Ly8afdtofp8DXzrt\",\"R6YxHWAiLgKwy5YvC\",\"rrSC943cCKNG48sH4\",\"sbJcFfQjQ59Wfg4Cd\",\"Cc2Cgj4MWXZxsTooC\",\"JhX7jvtpwNyxcc39m\",\"tdfY4iBvD7oh2ufnN\",\"qzXAMXsHZGT8o5hTA\",\"RoGGD5cpHb4ftdLDv\",\"2PufnQcsHsfymufX3\",\"XD5nmvKQchKezPXhy\",\"2iFe3EHEH2YdhSKrs\",\"X4rzfxGgxx6CS7Bpz\",\"hR7GMiqGap4CzEWSy\",\"StNu7DPyTgEStZsMY\",\"4TmgHkn5vqyHK3sYC\",\"4Lwjr34ypKNQNQCar\",\"T6Rm8mREPMZSftzrC\",\"d9LBRxvADNBB5QJMB\",\"dzS6WBTMHyFEag6Fp\",\"u5u2YpHXiNgzDNJdX\",\"rhS8qXRjZcpDXkwnE\",\"Knfhemp6kMWgjwJX9\",\"pduNK68oazqQTtbLp\",\"suArq5BbSy7gD6xri\",\"yAouD3PxzED8a4gap\",\"uGuS9YRXW2nj4p6zf\",\"5QN8R22z43SrwoHDz\",\"Wi4H6ayKsNDWWQCG5\",\"rCrbqMiaGPgHYTNxu\",\"AQSqD9oNv2uPfxZCR\"],\"total\":224,\"quality\":[5,5,4,5,5,5,5,5,5,5,5,4,2,5,1,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5]},\"flags\":0},\"summary\":\"Given a list of numbers, representing the height of a mountain a certain intervals, return whether this mountain is scalable.\\n\\nA mountain can be considered scalable if each number is within 5 units of the next number in either direction.\\n\\nExamples\\nis_scalable([1, 2, 4, 6, 7, 8]) ➞ True\\n\\nis_scalable([40, 45, 50, 45, 47, 52]) ➞ True\\n\\nis_scalable([2, 9, 11, 10, 1\",\"tags\":[\"loops\",\"arrays\",\"numbers\",\"validation\"],\"timestamp\":{\"$date\":1585736899275},\"title\":\"Scalable Mountain?\",\"quality\":4.67741935483871,\"family\":[{\"_id\":\"ZqozqRNCLhT4oTMYZ\",\"language\":\"cpp\"},{\"_id\":\"LSPPZKTuQJhqW2Rwb\",\"language\":\"javascript\"},{\"_id\":\"x3pW72MfFLi2GYh6g\",\"language\":\"python3\"},{\"_id\":\"Yc2TEHQZq5AKGNwuS\",\"language\":\"ruby\"}]}}"]