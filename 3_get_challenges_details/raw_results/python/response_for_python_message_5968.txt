a["{\"msg\":\"result\",\"id\":\"1695\",\"result\":{\"_id\":\"Be4gGbqXMcjpkhfQg\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"def convert_date(date):\\n\\t\",\"difficulty\":2.161290322580645,\"familyId\":\"fAeqdyBZ5w9qdM5dj\",\"instructions\":\"Create a function that converts dates from one of five string formats:\\n\\n1. \\\"January 9, 2019\\\" (MM D, YYYY)\\n2. \\\"Jan 9, 2019\\\" (MM D, YYYY)\\n3. \\\"01/09/2019\\\"  (MM/DD/YYYY)\\n4. \\\"01-09-2019\\\"  (MM-DD-YYYY)\\n5. \\\"01.09.2019\\\" (MM.DD.YYYY)\\n\\nThe return value will be a list formatted like: `[MM, DD, YYYY]`, where `MM`, `DD`, and `YYYY` are all integers. Using the examples above:\\n\\n### Examples\\n```\\nconvert_date(\\\"January 9, 2019\\\") ➞ [1, 9, 2019]\\n\\nconvert_date(\\\"Jan 9, 2019\\\") ➞ [1, 9, 2019]\\n\\nconvert_date(\\\"01/09/2019\\\") ➞ [1, 9, 2019]\\n\\nconvert_date(\\\"01-09-2019\\\") ➞ [1, 9, 2019]\\n\\nconvert_date(\\\"01.09.2019\\\") ➞ [1, 9, 2019]\\n```\\n\\n### Notes\\nN/A\",\"isHidden\":false,\"lab\":\"Test.assert_equals(convert_date(\\\"January 9, 2019\\\"), [1, 9, 2019])\\nTest.assert_equals(convert_date(\\\"Jan 9, 2019\\\"), [1, 9, 2019])\\nTest.assert_equals(convert_date(\\\"01/09/2019\\\"), [1, 9, 2019])\\nTest.assert_equals(convert_date(\\\"01-09-2019\\\"), [1, 9, 2019])\\nTest.assert_equals(convert_date(\\\"01.09.2019\\\"), [1, 9, 2019])\\nTest.assert_equals(convert_date(\\\"March 3, 1901\\\"), [3, 3, 1901])\\nTest.assert_equals(convert_date(\\\"Mar 3, 1901\\\"), [3, 3, 1901])\\nTest.assert_equals(convert_date(\\\"03/03/1901\\\"), [3, 3, 1901])\\nTest.assert_equals(convert_date(\\\"03-03-1901\\\"), [3, 3, 1901])\\nTest.assert_equals(convert_date(\\\"03.03.1901\\\"), [3, 3, 1901])\\nTest.assert_equals(convert_date(\\\"August 8, 1666\\\"), [8, 8, 1666])\\nTest.assert_equals(convert_date(\\\"Nov 13, 1533\\\"), [11, 13, 1533])\\nTest.assert_equals(convert_date(\\\"04/15/1789\\\"), [4, 15, 1789])\\nTest.assert_equals(convert_date(\\\"12-23-1111\\\"), [12, 23, 1111])\\nTest.assert_equals(convert_date(\\\"02.28.1832\\\"), [2, 28, 1832])\",\"language\":\"python3\",\"summary\":\"Create a function that converts dates from one of five string formats:\\n\\n\\\"January 9, 2019\\\" (MM D, YYYY)\\n\\\"Jan 9, 2019\\\" (MM D, YYYY)\\n\\\"01/09/2019\\\"  (MM/DD/YYYY)\\n\\\"01-09-2019\\\"  (MM-DD-YYYY)\\n\\\"01.09.2019\\\" (MM.DD.YYYY)\\n\\nThe return value will be a list formatted like: [MM, DD, YYYY], where MM, DD, and YYYY are all integers. Using the examples above:\\n\\nExamples\\nconvert_da\",\"tags\":[\"strings\",\"regex\",\"dates\"],\"timestamp\":{\"$date\":1573455039793},\"title\":\"Reformatting the Date\",\"stats\":{\"completed\":{\"total\":67,\"ratings\":[2,2,2,2,2,2,3,2,2,0,3,0,3,2,2,2,3,2,2,3,3,2,2,3,0,2,3,3,2,3,3,3,2,2,2,1,3,3,3,2,2,3,2,1,3,3,2,1,3,2,3,3,2,3,1,0,0,3,2,3,1,3],\"rators\":[\"HqmxnQJM66Y57twhn\",\"tAF9Gf6PiGogbZuWs\",\"gb9rvGus2Jv7bjZSs\",\"8JyqsSbN2FJXPr3cw\",\"gMJhLdyw3tH7L96X2\",\"u5u2YpHXiNgzDNJdX\",\"otXtuQygbcYATMZoP\",\"bLQYFBhBthDLQE3LN\",\"AYaEkTWLMmfzpwejr\",\"d2XCAmNhp79ea8a65\",\"ku7RM5GAzTssNDu6u\",\"3ECpdeExhBmkYXtba\",\"s5M5RvgqR9BhB9JoC\",\"2fxapKr8XGdNeaKi2\",\"XKi8iZXBCHCaebSHh\",\"K96FwtfDDN5WM4Bb7\",\"Jqk2uJZZxEv5wZFze\",\"rEWQdNHK6YjuBqmrR\",\"6ShafRStcvew4GfCh\",\"ab7BsQuhDo3QgE6bh\",\"C4QntmkYtB89GNtpd\",\"8PwfYqoDQFThzNtvf\",\"4CFzv558qbGcpQwc4\",\"aEm3Wvj2rFYRL8Lrb\",\"kQH5b8MXJunh84Czq\",\"AasGs8AeX9Lcb9xJn\",\"mDWNyaaQ9hvPCRzSd\",\"6c4xjEdFxdYw5xGrt\",\"ZNnsMeNkdDhHjSrZb\",\"sbJcFfQjQ59Wfg4Cd\",\"5eRdoeYxS97AFS8ra\",\"gJYuGdkXEWWmGRLzu\",\"YRstQuthRkFeBiXug\",\"gPvrBxxySDP2vpux3\",\"sz8ufn9i8zeiGWpAy\",\"55RQznnuTGpsj3EXd\",\"R4SjTgDnpigJYDLyL\",\"cykCKNJcqFBxz4T8s\",\"HF28xZKSLM9wEuqNg\",\"iojEnnY9FsMfYzp6f\",\"DEDniTrstQYGounXT\",\"zfGYZ7gpR8fxJpagh\",\"yjtdwc2AC4jA2RWtn\",\"Yp7uvStL97cC9fKkY\",\"qD2LrwaDrSdiybLKY\",\"b5p2BRxyHrrpGC5J3\",\"xn7uGNKeAwPEkP9oA\",\"DPi9QGLctq2y76KuE\",\"J3upzLHuEwXH7Z2hx\",\"gXTAie79kiw28tx5u\",\"QRv96jmNaYsWkxQEG\",\"srJ34BaybkQh3qRkM\",\"cAP3n5NY64uoMwzRR\",\"oBcs8GLX2ZFLXQy8y\",\"JKb5rhL6DKcCAypF9\",\"AFfw7cGg83uYk2Miy\",\"fbr22rabEJMfBp7vD\",\"GGdmhAvxXhqhhibJN\",\"gKnWjDjwrJh7MK2df\",\"MpfytGFYF77emJ3cT\",\"yod5YhKtPqw2GfG9B\",\"2PufnQcsHsfymufX3\",\"8sNv5PTHa7XQ8bNqR\",\"rfyEkETeoS96QNH4e\"],\"quality\":[5,5,1,5,3,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"quality\":4.142857142857143,\"family\":[{\"_id\":\"CJo2NPyHDb5YyDu2S\",\"language\":\"javascript\"},{\"_id\":\"Be4gGbqXMcjpkhfQg\",\"language\":\"python3\"},{\"_id\":\"XXsNEZkiYuKXurNTA\",\"language\":\"ruby\"}]}}"]