a["{\"msg\":\"result\",\"id\":\"393\",\"result\":{\"_id\":\"HhmkKonCLTyAhAcwK\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"def string_cycling(a, b):\\n\\t\",\"difficulty\":0.7,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"qLnxWBnwqLcajaaRS\",\"instructions\":\"Given two strings, repeatedly cycle through all of the letters in the first string until it is the same length as the second string.\\n\\n### Examples\\n```\\nstring_cycling(\\\"abc\\\", \\\"hello\\\") ➞ \\\"abcab\\\"\\n\\nstring_cycling(\\\"programming\\\", \\\"edabit\\\") ➞ \\\"progra\\\"\\n\\nstring_cycling(\\\"ha\\\", \\\"good morning\\\") ➞ \\\"hahahahahaha\\\"\\n```\\n\\n### Notes\\nAll tests will include valid strings.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(string_cycling('abc', 'hello'), 'abcab')\\nTest.assert_equals(string_cycling('programming', 'edabit'), 'progra')\\nTest.assert_equals(string_cycling('ha', 'good morning'), 'hahahahahaha')\\nTest.assert_equals(string_cycling(' ', 'python'), '      ')\\nTest.assert_equals(string_cycling('the quick brown fox jumps over the lazy dog', 'abcde'), 'the q')\",\"language\":\"python3\",\"quality\":4.705882352941177,\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,1,0,1,1,1,0,2,0,1,0,0,0,2,2,0,0,1,1,1,1,0,1,0,0,2,1,1,0,0,1,2,0,1,1,2,0,0,1,0,2,1,0,0,1,1,1,1,1,0,0,2,0,1,0,0,0,1,0,0,0,0,0,2,0,1,1,0,1,1,1,1,0,0,2,0,0,1,1,0,0,0,0,1,1,0,0,1,0,3,1,0,1,0,2,1,0,0,3,0,1,0,1,0,2,2],\"quality\":[5,4,5,5,3,5,5,5,5,3,5,4,5,5,5,5,5,5,5,5,5,5,2,5,5,5,5,5,5,4,5,5,5,5],\"rators\":[\"PXAcsKkssS2yLyDv2\",\"YRAzEBJoLvSaiPtYx\",\"srJ34BaybkQh3qRkM\",\"Yp7uvStL97cC9fKkY\",\"gJYuGdkXEWWmGRLzu\",\"Ds7L5bksw2QRHjrKL\",\"N2wnZXkhDH86mgjQ8\",\"iS5BrkGLzJyPK7nKt\",\"a777e8chPvJkY3tKa\",\"pPpmP7xeJzGgK362R\",\"Jqk2uJZZxEv5wZFze\",\"DPi9QGLctq2y76KuE\",\"J3upzLHuEwXH7Z2hx\",\"MKT7khMBGXzA22ykf\",\"AXcnPX68zdMiLNSmu\",\"FEYpu9RWysAgW3XnP\",\"T6iBEE2jp7f7iEF2P\",\"GdKtjPh8TcfmJuduv\",\"2MjzJ7yxh3eT3xbng\",\"XrqNzJ2FRG8HnGiR6\",\"yjtdwc2AC4jA2RWtn\",\"QRv96jmNaYsWkxQEG\",\"wRttWTM59y8m5mx7x\",\"5HCu9Ydd86QgHDRNP\",\"xn7uGNKeAwPEkP9oA\",\"di2hhADLx59Bj4ewM\",\"zd9FLSzsGz3evKafy\",\"oBcs8GLX2ZFLXQy8y\",\"gb9rvGus2Jv7bjZSs\",\"5f6oSeq4r5WTXLdCQ\",\"mxX4rH5ELYkdZ2Mbw\",\"MXGuntvz3byrP6WJc\",\"eYfPWvZwnJQkHbSTK\",\"ZdZJDMpF3WcF9RBwS\",\"buX4mCQhtXCfBjeno\",\"9pzFiFK3ANLjQfnr2\",\"DEDniTrstQYGounXT\",\"JS3hNM3XXkxPdg3yk\",\"fTNQmMvTZhhiGBCMe\",\"HBuJYgW2eRBJp9FoG\",\"Fk9kLwoG4Brf4KsKf\",\"YcCLwitFMAEJSnxAW\",\"ghMkPtdFCpM6w8nax\",\"7dQYiDeTcMztbGyso\",\"rfyEkETeoS96QNH4e\",\"tAF9Gf6PiGogbZuWs\",\"jNvegJWCk5HCtEMbK\",\"AFfw7cGg83uYk2Miy\",\"q6QsMYNMpPNtmyTeW\",\"J5T8gZqiZXFuFDTQ7\",\"cR3ibTMxLyEdDFCHY\",\"XujK3rHd3JcM9TLJy\",\"uvLimfW9x3bCp7huQ\",\"XD5nmvKQchKezPXhy\",\"3cF6NXq3ZEwdkgSjb\",\"2eEkuE5ZRvbX9q7R8\",\"QTJvghkPpGKnKvZ5R\",\"qAby4AWXmTNeusvg3\",\"8JyqsSbN2FJXPr3cw\",\"PC3pLs36zNzpRDSuE\",\"oaJbwGAbtpgYhMEgd\",\"CHvzhtXnv8HTbPQ56\",\"iojEnnY9FsMfYzp6f\",\"kjvgTyRFyKHv44DcH\",\"aEm3Wvj2rFYRL8Lrb\",\"gjiu8kLnHYxe4HoBN\",\"2QGRoQn2dRq3scu7k\",\"JhX7jvtpwNyxcc39m\",\"66a9xX73nmTEuKs9k\",\"sbJcFfQjQ59Wfg4Cd\",\"eMuCpJ2spXWkJjWNz\",\"jgyuzt5BpA3ohHG96\",\"Q6gEE9dG8ERy2Xu3c\",\"4TmgHkn5vqyHK3sYC\",\"9Ly8afdtofp8DXzrt\",\"sX9GZp3fYyQLrBKMJ\",\"eHcgvkTGsH7ZziqBo\",\"pwWtbXEjzuvrhEGwt\",\"zC8WrPp5BC6c2exrW\",\"H9KZi2cjt4FwH7qog\",\"T6Rm8mREPMZSftzrC\",\"jkbavR2ATFJcpmo8M\",\"AasGs8AeX9Lcb9xJn\",\"mDWNyaaQ9hvPCRzSd\",\"8teSHp77vHhhvJWiS\",\"HqmxnQJM66Y57twhn\",\"BdnE4RS5puoxo92mA\",\"JiSpvq6C7azQEmENc\",\"sHjfbGQGLHE6JR6qu\",\"8PwfYqoDQFThzNtvf\",\"pQwhNKiCne4gEZgcn\",\"Afnps7TJQuS9sipMb\",\"PH32cNxBjrK4a28sn\",\"Dq24MSpogRmq6L4hX\",\"XbxHXmh5ZmRN2gw3K\",\"gKnWjDjwrJh7MK2df\",\"cdXmwjupCXSvJTSNo\",\"j7ebNFtte6fSkMWjj\",\"yXGiiSAR5nBHnH3yr\",\"dYPkStFnLvAMsHSzZ\",\"d9LBRxvADNBB5QJMB\",\"9LrF5o2TK2iE8BZJh\",\"539z79PdEA96pmrZ5\",\"qaPjAANdnxFnWfj5d\",\"Cg3LKtEAJpsrdWroG\",\"dzS6WBTMHyFEag6Fp\",\"TCvpT4EPb8qNssNB7\",\"5QN8R22z43SrwoHDz\",\"B4y8aoyXJtskYPFEL\",\"9bQyb6rW7xfE4vgrR\",\"AMpQSjKsRqhCDyS2j\",\"x2Cz7S8rCKJqCE3Xe\",\"wjc4iejpErBhxWwHo\",\"FiaTpm7ehfDv43wSG\",\"uK58g2EXxqxTaB2iA\",\"afvP29FhRou2bTaav\",\"yAouD3PxzED8a4gap\",\"5nbHH4eApn6So9h2n\",\"PTDFuxAzou7W6asWt\",\"rF97GDLqCgynr7BaD\",\"vAbK8sCfKyFC78HYg\",\"PmRyaLmhAF4MMLBtM\",\"Zyg9xAm6EuH4u3Lo5\",\"tR9grPBLncwacBTzr\",\"M2gFMJkocQSY6bsFR\",\"PBnvAuiKXwjqjKG33\",\"fMp8sPsKSECdfgF9j\",\"Ne8mK9DDHG8TRkoxG\",\"suArq5BbSy7gD6xri\",\"QN4FPwhiak7Pf8kn6\",\"rrSC943cCKNG48sH4\",\"r83jJeskFETo3RLhZ\",\"Wi4H6ayKsNDWWQCG5\",\"sMcFMPkMJC4Kh6ymj\",\"mdRQaGT98ycMt87S2\",\"rraTtctZqnjXu2L2x\",\"7q8oBsCHwn48Ppnrq\",\"K6S8HCswXg68EWHmo\",\"7HAL7H6NJmc4NC8Q5\"],\"total\":147},\"flags\":0},\"summary\":\"Given two strings, repeatedly cycle through all of the letters in the first string until it is the same length as the second string.\\n\\nExamples\\nstring_cycling(\\\"abc\\\", \\\"hello\\\") ➞ \\\"abcab\\\"\\n\\nstring_cycling(\\\"programming\\\", \\\"edabit\\\") ➞ \\\"progra\\\"\\n\\nstring_cycling(\\\"ha\\\", \\\"good morning\\\") ➞ \\\"hahahahahaha\\\"\\n\\nNotes\\nAll tests will include valid strings.\",\"tags\":[\"loops\",\"strings\"],\"timestamp\":{\"$date\":1608382473637},\"title\":\"Cycling Through Strings\",\"family\":[{\"_id\":\"Mn3AmEB8WwSguiqri\",\"language\":\"cpp\"},{\"_id\":\"ZiuuBqBWYBRtPaKKR\",\"language\":\"java\"},{\"_id\":\"gfm9nQFzogSYTE24t\",\"language\":\"javascript\"},{\"_id\":\"HhmkKonCLTyAhAcwK\",\"language\":\"python3\"},{\"_id\":\"Y8Yohphw2L5pHvBeG\",\"language\":\"ruby\"}]}}"]