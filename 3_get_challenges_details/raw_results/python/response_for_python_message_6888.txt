a["{\"msg\":\"result\",\"id\":\"2152\",\"result\":{\"_id\":\"rFK7WftrcrEu6rbu8\",\"author\":\"Shreeansh\",\"authorId\":\"Fhwnime223hGiaHaA\",\"code\":\"# Please don't modify the code below the traverse function is in BST class\\n\\n# Node class\\nclass Node:\\n  def __init__(self, data):\\n    self.data = data\\n    self.left = None\\n    self.right = None    \\n# BST Class\\t\\t\\nclass BST:\\n  def __init__(self):\\n    self.head = None\\n     \\n  def insert(self, data):\\n    new_node = Node(data)\\n    if self.head == None:\\n      self.head = new_node\\n    else:\\n      current = self.head\\n      while True:\\n        if data > current.data and current.right:\\n          current = current.right\\n        elif data < current.data and current.left:\\n          current = current.left\\n        elif data > current.data:\\n          current.right = new_node\\n          break\\n        else:\\n          current.left = new_node\\n          break\\n    return self.head\\n  \\n  def traverse(self):\\n\\t\\t# Complete the code here\",\"difficulty\":3.261904761904762,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"NPggnk94hHe8SGCvJ\",\"instructions\":\"Given a **Binary Search Tree** (BST) implementation, complete the traverse function which is present in the BST class. Here you have to perform the level-order traversal on BST which is another term for **Breadth First Traversal**.\\n\\n\\n### Examples\\n```\\ntraverse() ➞  [10, 4, 20, 1, 5]\\n\\n      10\\n      /   \\\\\\n    4    20\\n  /  \\\\\\n1    5\\n\\ntraverse() ➞ [100, 70, 200, 34, 80, 300]\\n\\n       100\\n       /    \\\\\\n    70    200\\n  /    \\\\          \\\\\\n34   80      300\\n```\\n\\n### Notes\\nMake sure you don't modify the code that is already in the **Code** tab. Only complete the `traverse()` function and return an array.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"b = BST()\\nb.insert(100)\\nb.insert(200)\\nb.insert(70)\\nb.insert(34)\\nb.insert(80)\\nb.insert(85)\\nb.insert(85)\\nb.insert(111)\\nTest.assert_equals(b.traverse(), [100, 70, 200, 34, 80, 111, 85, 85])\\n\\nb1 = BST()\\nb1.insert(1)\\nTest.assert_equals(b1.traverse(), [1])\\n\\nb2 = BST()\\nb2.insert(100)\\nb2.insert(25)\\nb2.insert(22)\\nb2.insert(75)\\nb2.insert(122)\\nb2.insert(111)\\nb2.insert(112)\\nb2.insert(55)\\nTest.assert_equals(b2.traverse(), [100, 25, 122, 22, 75, 111, 55, 112])\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,3,2,5,2,3,4,2,3,4,5,5,5,4,2,5,1,0,3,4,5,4,3,1,5,5,5,3,4,2,5,5,5,0,3,3,5],\"rators\":[\"HF28xZKSLM9wEuqNg\",\"8PwfYqoDQFThzNtvf\",\"aEm3Wvj2rFYRL8Lrb\",\"gJYuGdkXEWWmGRLzu\",\"xn7uGNKeAwPEkP9oA\",\"yWwASsv3iZzfQTbzx\",\"sXiaXBEpxCpPGR6mP\",\"SGhPxX5bHGL8zZqtt\",\"ZNnsMeNkdDhHjSrZb\",\"BN4h4ePZYnRpXJYWN\",\"riS283qxkB5uHwcHw\",\"gYzwMTmgLbi55ebCZ\",\"Nb6LYPoQP6KJZt8mz\",\"8WpvgSbQciTQWdd8T\",\"xjwYSw7ABvAWhTXWo\",\"GgLd4eWBu79mdjtkP\",\"fznzd3qnvtbFkkizz\",\"RxjsoBmCqZgg5Fq5a\",\"Xee5tZbXofdLqNTZP\",\"Wv2vJnEj8ywNmARoF\",\"mDWNyaaQ9hvPCRzSd\",\"kWobGYgZWJxN6ZddF\",\"cvgEJm7NBiD78aTxM\",\"964Ys5HHQ35Er6zDY\",\"fSQSHjW3e72MrWxbD\",\"GfRdi6igaRfMQ4QiR\",\"4sHkH3t9CJYhbDwjM\",\"83jzX2JKBruiFRzjT\",\"g3Jh47H2g9xtZGxqK\",\"yr822PZmmiDDenxpB\",\"T2vhHPhRR96hRizq8\",\"bJWAczWDrRZF7a3uJ\",\"foytX6kH9wiSYqLtT\",\"Jqk2uJZZxEv5wZFze\",\"mH5AfrrfASMdRvhtK\",\"2PufnQcsHsfymufX3\",\"J23RcmzbdtBbPCTjT\",\"eHcgvkTGsH7ZziqBo\",\"QRv96jmNaYsWkxQEG\",\"8sNv5PTHa7XQ8bNqR\",\"iojEnnY9FsMfYzp6f\",\"iS5BrkGLzJyPK7nKt\",\"yjtdwc2AC4jA2RWtn\",\"bJaPCBx63YxdJAuTS\",\"PH32cNxBjrK4a28sn\",\"2iFe3EHEH2YdhSKrs\",\"KzjKprh7wW3dzLGF6\",\"BFffHEbR5WPnfmvXb\"],\"total\":52,\"quality\":[4,5,5,5,3,3,5,5,5,5,5]},\"flags\":1},\"summary\":\"Given a Binary Search Tree (BST) implementation, complete the traverse function which is present in the BST class. Here you have to perform the level-order traversal on BST which is another term for Breadth First Traversal.\\n\\nExamples\\ntraverse() ➞  [10, 4, 20, 1, 5]\\n\\n      10\\n      /   \\\\\\n    4    20\\n  /  \\\\\\n1    5\\n\\ntraverse() ➞ [100, 70, 200, 34, 80, 300]\",\"tags\":[\"loops\",\"logic\",\"data_structures\"],\"timestamp\":{\"$date\":1594127690760},\"title\":\"Level Order Traversal\",\"quality\":4.545454545454546,\"family\":[{\"_id\":\"o7WSAxLni29m6iKBQ\",\"language\":\"javascript\"},{\"_id\":\"rFK7WftrcrEu6rbu8\",\"language\":\"python3\"}]}}"]