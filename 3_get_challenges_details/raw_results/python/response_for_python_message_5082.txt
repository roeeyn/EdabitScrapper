a["{\"msg\":\"result\",\"id\":\"1255\",\"result\":{\"_id\":\"KHPFPaKpXmDeRoYQ3\",\"author\":\"Alex_the_Destroyer\",\"authorId\":\"SijL7Kxx89h4p65Py\",\"code\":\"def check_score(s):\\n\\t\",\"difficulty\":1.9364705882352942,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"pMmZyKuZgqpsmf5ya\",\"instructions\":\"Write a function that takes a list of lists and returns the value of all of the symbols in it, where each symbol adds or takes something from the total score. Symbol values:\\n\\n- `#` = 5\\n- `O` = 3\\n- `X` = 1\\n- `!` = -1\\n- `!!` = -3\\n- `!!!` = -5\\n\\nA list of lists containing 2 `#`s, a `O`, and a `!!!` would equal (0 + 5 + 5 + 3 - 5) 8.\\n\\nIf the final score is negative, return `0` (e.g. 3 `#`s, 3 `!!`s, 2 `!!!`s and a `X` would be (0 + 5 + 5 + 5 - 3 - 3 - 3 - 5 - 5 + 1) -3, so return `0`.\\n\\n### Examples\\n```\\ncheck_score([\\n  [\\\"#\\\", \\\"!\\\"],\\n  [\\\"!!\\\", \\\"X\\\"]\\n]) ➞ 2\\n\\ncheck_score([\\n  [\\\"!!!\\\", \\\"O\\\", \\\"!\\\"],\\n  [\\\"X\\\", \\\"#\\\", \\\"!!!\\\"],\\n  [\\\"!!\\\", \\\"X\\\", \\\"O\\\"]\\n]) ➞ 0\\n\\ncheck_score([\\n  [\\\"#\\\", \\\"O\\\", \\\"#\\\", \\\"!!\\\", \\\"X\\\", \\\"!!\\\", \\\"#\\\", \\\"O\\\", \\\"O\\\", \\\"!!\\\", \\\"#\\\", \\\"X\\\", \\\"#\\\", \\\"O\\\"],\\n  [\\\"!!!\\\", \\\"!!!\\\", \\\"!!\\\", \\\"!!\\\", \\\"!\\\", \\\"!\\\", \\\"X\\\", \\\"!\\\", \\\"!!!\\\", \\\"O\\\", \\\"!\\\", \\\"!!!\\\", \\\"X\\\", \\\"#\\\"],\\n  [\\\"#\\\", \\\"X\\\", \\\"#\\\", \\\"!!!\\\", \\\"!\\\", \\\"!!\\\", \\\"#\\\", \\\"#\\\", \\\"!!\\\", \\\"X\\\", \\\"!!\\\", \\\"!!!\\\", \\\"X\\\", \\\"O\\\"],\\n  [\\\"!!\\\", \\\"X\\\", \\\"!!\\\", \\\"!!\\\", \\\"!!!\\\", \\\"#\\\", \\\"O\\\", \\\"O\\\", \\\"!!!\\\", \\\"#\\\", \\\"O\\\", \\\"O\\\", \\\"#\\\", \\\"!!\\\"],\\n  [\\\"O\\\", \\\"X\\\", \\\"#\\\", \\\"!\\\", \\\"!\\\", \\\"X\\\", \\\"!!!\\\", \\\"O\\\", \\\"!!!\\\", \\\"!!\\\", \\\"O\\\", \\\"!\\\", \\\"O\\\", \\\"X\\\"],\\n  [\\\"!!\\\", \\\"!!!\\\", \\\"X\\\", \\\"!!!\\\", \\\"!!\\\", \\\"!!\\\", \\\"!!!\\\", \\\"X\\\", \\\"O\\\", \\\"!\\\", \\\"#\\\", \\\"!!\\\", \\\"!!\\\", \\\"!!!\\\"],\\n  [\\\"!!\\\", \\\"!!\\\", \\\"#\\\", \\\"O\\\", \\\"!\\\", \\\"!!\\\", \\\"!\\\", \\\"!!!\\\", \\\"#\\\", \\\"O\\\", \\\"#\\\", \\\"!\\\", \\\"#\\\", \\\"!!\\\"],\\n  [\\\"X\\\", \\\"X\\\", \\\"O\\\", \\\"X\\\", \\\"!!!\\\", \\\"#\\\", \\\"!!!\\\", \\\"!!!\\\", \\\"X\\\", \\\"X\\\", \\\"X\\\", \\\"!\\\", \\\"#\\\", \\\"!!\\\"],\\n  [\\\"O\\\", \\\"!!!\\\", \\\"!\\\", \\\"O\\\", \\\"#\\\", \\\"!\\\", \\\"!\\\", \\\"#\\\", \\\"X\\\", \\\"X\\\", \\\"#\\\", \\\"O\\\", \\\"!!\\\", \\\"!\\\"],\\n  [\\\"X\\\", \\\"!\\\", \\\"!!\\\", \\\"#\\\", \\\"#\\\", \\\"X\\\", \\\"!!\\\", \\\"O\\\", \\\"!!\\\", \\\"X\\\", \\\"X\\\", \\\"!!\\\", \\\"#\\\", \\\"X\\\"],\\n  [\\\"!\\\", \\\"!!\\\", \\\"!!\\\", \\\"O\\\", \\\"!!\\\", \\\"!!\\\", \\\"#\\\", \\\"#\\\", \\\"!\\\", \\\"!!!\\\", \\\"O\\\", \\\"!\\\", \\\"#\\\", \\\"#\\\"],\\n  [\\\"!\\\", \\\"!!!\\\", \\\"!!\\\", \\\"X\\\", \\\"!!\\\", \\\"!!\\\", \\\"#\\\", \\\"!!!\\\", \\\"O\\\", \\\"!!\\\", \\\"!!!\\\", \\\"!\\\", \\\"!\\\", \\\"!\\\"],\\n  [\\\"!!!\\\", \\\"!!!\\\", \\\"!!\\\", \\\"O\\\", \\\"!\\\", \\\"!\\\", \\\"!!!\\\", \\\"!!!\\\", \\\"!!\\\", \\\"!!\\\", \\\"X\\\", \\\"!\\\", \\\"#\\\", \\\"#\\\"],\\n  [\\\"O\\\", \\\"O\\\", \\\"#\\\", \\\"O\\\", \\\"#\\\", \\\"!\\\", \\\"!!!\\\", \\\"X\\\", \\\"X\\\", \\\"O\\\", \\\"!\\\", \\\"!!!\\\", \\\"X\\\", \\\"O\\\"]\\n]) ➞ 12\\n```\\n\\n### Notes\\nStrings in the lists will only be `#`, `O`, `X`, `!`, `!!` and `!!!`.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(check_scorenTest.assert_equals(check_scorenTest.assert_equals(check_score([['!', '!!!', '!', '!', '!!!', '!', 'X', '!!!', '!!!', 'X', '!!', 'X', 'O', '!!!', '!!!', '!', '#'], ['!!', 'X', '!!!', 'X', 'X', 'O', '!!!', '!!!', 'X', '!!', '!!', '!', 'X', '!!', '!!', 'X', '!!!'], ['!!', '#', '#', '!', 'X', 'X', 'X', '#', '!!', '#', 'X', '!!', '!!!', '!', 'X', '!!!', 'X'], ['!!!', '!!', 'O', '#', 'O', '!', '!!!', '!!', 'X', '#', 'X', '!!!', '!!!', 'X', '#', 'X', 'O'], ['X', 'O', '!', '!!', '#', '!', 'X', '#', '!!!', '!!!', 'O', '!', 'X', '!', '!', '!!', '#'], ['#', '!', '!!', '!!!', '!!!', '!!!', 'O', '!!', '!', '!', '!!', '!', '!!!', '#', 'O', '!!!', 'O'], ['!', '!', '!!', 'X', 'O', '!', '!!', '!!!', '!!', '!!!', '!!!', '!', 'X', 'X', '!!!', '!', 'O'], ['#', 'X', '!!!', '!!', '!', '!!', '!!!', 'X', 'O', '#', '!!!', 'O', 'X', 'X', '!!!', 'O', '!!'], ['!', '!!', '!!!', '!!!', '!', '!!!', '!', '!!!', 'X', '!!!', 'O', '#', '#', '!', 'O', 'O', 'X'], ['O', 'X', '!', 'O', 'X', '!', 'O', '!', '!!!', '#', '#', '!!', '#', '#', 'X', 'X', '#'], ['#', '#', 'X', '#', '!!!', '!!', '!!!', '!!', 'X', 'O', 'O', '!', '!!!', 'O', '!!', '!!', 'O'], ['#', 'O', 'O', 'O', '#', '!', '!', 'O', '!!!', '!!!', '!!', '!!', 'O', '!!!', '!!!', 'X', 'O'], ['O', 'X', '!!', 'O', '!!', '!', '!!!', 'X', '#', '!!', '!!!', 'O', '#', '!', '!!', '#', 'O'], ['!', '!', 'X', '!!!', 'O', '#', '#', 'X', 'X', '!!', '!', '!!', '!', '!!', '!!!', '!', '!!'], ['!!!', '!', 'X', '!', 'O', '!!!', 'O', '!!', 'O', '#', 'X', '!!', 'O', '!', 'X', 'O', 'O'], ['#', 'X', '!', 'O', '!!!', '!!', '!', 'X', '!', 'X', '!!!', '!', 'X', '!', '!', 'X', 'X'], ['!', 'O', 'X', '#', '#', '#', 'X', '!!!', '!', '!!', '!!!', 'O', '#', '!', '!!!', '!!!', 'X']]), 0)\\nTest.assert_equals(check_score([['X', '!!!', '#', '#', '!', '#', '!'], ['!', '!', 'X', 'X', '#', 'O', '!!!'], ['#', '!', '!!!', 'X', 'O', '!!!', '#'], ['!!!', 'O', '#', 'O', '#', 'O', '!!!'], ['!!!', '!!', '!', 'X', '#', '!!!', '!!!'], ['O', '!!', '!!!', '!!!', 'X', '#', 'X'], ['O', 'X', '!', '!!!', '!!!', '#', 'X']]), 7)\\nTest.assert_equals(check_scorenTest.assert_equals(check_score([['O', '!!!', '!', '!', '!!!', '!', '#', '!!'], ['!!', '#', 'O', '!!', 'X', '#', '!!!', '!!'], ['!!!', '#', '!!!', '!!!', '!!!', '!!!', '!!!', '!!'], ['!', '!!', 'X', 'O', '!', 'O', '#', '#'], ['#', '!!!', '#', 'O', 'X', '!!', 'X', '#'], ['!!!', '!!', '#', 'O', '!!!', 'X', '!!', '!'], ['#', '!!!', 'O', 'X', '#', '#', '!!!', '!!!'], ['!!', '#', '!!!', '!', 'X', '!!!', '!', 'O']]), 0)\\nTest.assert_equals(check_scorenTest.assert_equals(check_scorenTest.assert_equals(check_scorenTest.assert_equals(check_score([['!!!', '!!', 'X', '!!', '#', '!', 'O'], ['!!', '!!!', '!!!', 'O', '!!', '!!', '!'], ['!!!', 'O', '!!!', '!', '!!!', '!!', 'X'], ['!', '!!', '!', '!!', '!!!', 'X', '#'], ['#', '!!', '!!!', 'X', 'O', '#', 'X'], ['X', 'X', '!', 'X', '!!!', 'X', 'O'], ['O', '!', '!', '!!!', '#', 'X', 'O']]), 0)\\nTest.assert_equals(check_score([['!!', '!', '!!!', '!!!', '!!', '!', 'X'], ['#', '!!', '!!', '#', '#', '!', '!!!'], ['X', 'O', 'X', '!', '!', '!', 'X'], ['!!', 'X', '!!', '!', 'O', '!', '#'], ['!', 'X', '!', 'O', 'O', '#', 'O'], ['X', '!!!', 'O', 'X', 'X', '#', '!'], ['!', '!', '#', '!!!', 'O', '#', '!']]), 13)\\nTest.assert_equals(check_scorenTest.assert_equals(check_score([['!!!', 'X', '#', '!', 'O', '!!', 'X', 'O', 'X', 'X', 'O', 'X'], ['#', 'X', 'X', 'X', 'X', '!!!', '!!!', '!!', '!!!', 'O', 'X', '!!!'], ['!!!', '#', '!', 'O', '!', '#', '!!', '!', '!!', 'X', 'X', '!!'], ['X', 'X', '!', 'X', '!!!', '!', 'O', 'X', 'X', 'O', 'X', 'O'], ['!!', '!', '!!!', 'O', 'X', '#', '!!', '!!!', '!!!', '#', '!', 'O'], ['#', '#', 'O', '!!', 'O', '#', '#', '!!', 'O', '#', 'X', 'X'], ['O', '#', '#', '!!', '#', '!', '!!', '!!!', '!!', 'O', '!', '!'], ['!!!', 'O', 'X', '!!', '#', 'O', 'O', '!!', '!!!', 'X', '#', '#'], ['O', '#', '!!', '!', 'O', '!!!', 'X', 'X', '!!!', 'O', '!', '!!!'], ['X', 'O', '#', '!!!', '!!', 'X', '!', '#', '!!!', '!!!', '!!', '!!!'], ['#', 'O', 'O', '!!!', '!!', '!!', '!', 'O', '!', 'O', '#', '!!'], ['O', '#', '!', '!!!', '#', 'X', '#', '#', '#', '!!', 'O', '#']]), 62)\\nTest.assert_equals(check_score([['O', '#', 'X', 'X', 'O', '!!!', '#', 'X', 'O', '!!!', '!', '!!', 'X', 'X', 'O', 'X', '!!'], ['O', 'O', 'O', '!', '!!', 'O', 'X', '#', 'O', 'O', '!', '#', '!!', '!!!', '!', '!', 'X'], ['X', 'O', '#', '!!!', '#', '!', '!!!', '!!', '!!', '!', 'O', '!!!', '!', '!', 'X', 'X', 'O'], ['O', '!', '#', '!!!', '!!!', '#', 'X', 'O', '!!!', '!!!', '!!!', 'O', '!', '!!', '#', '#', 'O'], ['!', '!!!', '!!', '#', '!!', '!', '!!!', '!', 'O', '!!', 'X', 'X', '!', '#', 'O', 'X', '#'], ['X', '!', '#', '!!!', '!', '!!!', 'O', 'X', 'X', '!!', '!', 'O', 'O', 'X', 'O', 'X', '!!!'], ['#', 'X', 'X', 'O', '!', '#', '!!!', '#', '#', '!!!', '!!!', '!', '!!', '!', '!!', '!!', '!!!'], ['!!!', '#', 'X', '!!!', '!!!', 'O', '!', 'O', 'O', 'X', 'O', 'O', 'O', '!!', 'X', '!', 'X'], ['!', 'X', 'X', '!!!', 'O', '!', '!', '!', '!!', 'O', '!!', '!!!', '#', '#', '!!', '!!', '!'], ['!', '!!', 'O', 'X', '!!!', 'X', 'X', '!!!', '!!!', 'X', '!', 'O', 'O', '!!', '!!', '#', 'O'], ['!!', '#', 'X', 'X', '#', '#', 'O', '!', 'O', '!!!', '!!', '!', '!!!', '!', '!', '!!!', '!'], ['X', '!', '!!', '!!', 'O', '!!!', '!!!', '!!!', 'X', '!!', '!!', '!!', '#', 'X', 'X', '!', 'X'], ['!!!', '!', 'X', 'X', '#', 'O', '!', '!!', '#', '!!', '!', '!!', '!', '!!', 'O', 'X', '!!!'], ['#', '!', '!!', '#', 'O', '!', '!', '!', 'X', '!', '!', 'O', 'X', '!', 'X', 'X', '!'], ['#', 'X', '!!!', '!!', 'O', '#', '#', '!!!', '!!!', '!!!', 'O', 'X', '!!', '!!', '!!!', '!!', 'X'], ['!!', 'X', '!!', 'X', 'O', '!', '!!!', 'O', '!!', '!', 'X', '!', '!', 'O', 'X', 'O', '#'], ['!!', '#', 'X', 'X', 'X', 'O', 'X', '!!', '!!!', '!', '!!!', 'X', '!!!', '!!', 'X', 'X', '!!']]), 0)\\nTest.assert_equals(check_score([['X', '!', '!!!', 'O', '!!!', '!!', '!', '#', 'X', 'O', 'X', 'O', '!', 'O', 'O', '!!', 'O'], ['!', 'O', '#', '!!!', 'X', 'X', '#', '!!!', '!', '!', '!', '!!', 'O', '!!!', 'X', 'X', 'O'], ['!!!', '!', 'O', 'X', 'X', '#', '!', '#', '!!', '#', '!!', 'O', 'X', 'O', '!!!', '#', '!!'], ['!!', 'X', '!!!', '!!!', 'X', 'O', '#', '!', 'O', '!!!', '!', '!', 'O', '!!!', '!!!', '!', '#'], ['!', '!!', '#', '#', 'O', '#', 'X', '!!!', 'O', '!', '!!!', 'O', 'X', '!', '!!', 'X', 'X'], ['!', 'X', '!', 'O', '#', '!', '!', 'X', '!', '!!', '!', 'X', '#', '#', '!', '!!!', '!!!'], ['X', '!!', '!!', '!!!', '!!!', '#', '!', '!!', '#', 'O', '!!!', 'X', 'X', '#', '!!!', '#', '#'], ['O', '!!!', 'X', '!!', 'X', 'X', '!', 'O', '!!', 'O', '!!', 'O', '!', '!!!', '!!', '!!!', '!!'], ['!', '!!!', 'O', '!', '#', 'X', 'X', 'O', '!', '#', '!!', '!!', 'O', '!!', '!!', '!!', '!!'], ['!!!', '!!!', 'O', '#', '!!!', '!!', '!!!', 'X', 'X', '!!', '#', '!!!', '#', 'O', 'X', 'X', 'X'], ['!!!', 'O', '!!', '#', '!', '!!', '!!!', '!', '!', '#', '!!!', 'O', 'X', '!!!', '!!', 'O', '!!!'], ['!!', 'O', '!!', '!', '!', '!!', '#', '#', '#', '!!', '!!!', '!!', 'X', '!!', '#', 'O', '!!'], ['O', 'O', 'O', '#', 'O', 'O', '#', '!!!', '#', 'O', '#', '!!!', '#', 'X', '!!!', '!!', 'O'], ['X', '!!!', 'O', '!', 'X', 'X', 'X', '!', '#', '!!!', '!!', '!!', '!!!', 'O', '!!!', '!!', '!!!'], ['!!!', 'O', '#', '!!', '#', '!!', 'X', 'O', '!!!', 'O', '#', '!', 'O', '!!', 'X', '!', '#'], ['!!', '!', '!!', '!', '!!!', '#', 'O', '!!', 'O', 'X', '#', 'X', '#', '#', '!!!', '!!', 'O'], ['!!', 'X', 'O', '!!', 'O', '#', '!', '!!', '#', '!!', 'O', '#', '#', '#', '#', '!!!', 'X']]), 25)\",\"language\":\"python3\",\"quality\":4.552147239263804,\"stats\":{\"completed\":{\"ratings\":[3,3,3,3,3,4,5,1,3,0,2,1,1,3,2,1,2,2,2,1,1,2,1,3,3,2,2,1,2,3,0,2,2,3,1,0,2,0,2,0,2,1,3,1,3,2,2,0,1,3,2,2,2,2,1,2,2,2,3,2,2,2,0,1,2,2,2,1,2,1,2,0,2,2,0,2,3,1,1,2,2,3,2,3,2,2,2,1,3,0,1,2,3,1,2,1,2,2,1,1,2,1,3,3,2,2,1,3,2,2,2,4,3,2,2,1,2,2,3,1,2,2,0,0,3,3,3,2,1,3,1,1,3,2,3,1,2,2,4,2,2,1,1,3,0,2,3,4,2,3,5,3,0,2,1,2,2,2,3,2,2,2,4,0,1,0,1,2,1,2,2,3,2,2,2,1,5,3,2,1,2,2,2,2,1,1,3,2,2,4,3,2,1,3,1,3,2,1,2,0,0,0,1,3,3,0,0,1,3,2,0,3,1,2,3,3,1,3,3,2,1,2,2,0,2,1,3,3,3,2,2,2,1,3,2,2,3,1,2,1,1,2,3,3,1,2,0,3,0,3,1,1,2,2,2,0,2,1,2,2,2,2,1,0,1,2,4,2,2,2,3,0,2,1,4,1,3,0,3,3,1,2,2,3,2,3,3,2,2,3,2,3,2,2,1,3,3,2,2,2,3,0,1,1,1,3,1,2,0,4,1,2,2,0,1,2,3,1,3,2,3,2,2,5,2,3,0,3,2,0,2,2,3,2,3,1,3,2,2,1,2,2,1,1,3,3,3,1,2,3,3,2,3,3,1,2,3,2,3,2,1,0,2,2,2,1,2,2,2,2,4,2,2,2,0,3,3,3,2,3,2,3,1,2,2,1,2,2,1,2,3,3,3,3,3,1,2,1,1,2,2,1,1,1,2,4,3,1,2,3,2,3,2,1,2,1,3,1,3,2,1,2,2,3,2],\"quality\":[5,5,5,5,4,5,4,5,5,5,5,5,5,4,5,5,5,4,5,5,5,5,4,5,5,5,5,5,5,4,5,5,4,5,5,5,5,5,5,3,4,2,5,4,5,4,5,5,5,4,5,4,5,5,4,5,4,5,5,5,5,4,4,3,5,5,5,4,5,3,5,5,4,5,4,3,5,3,4,5,5,4,5,3,4,5,5,4,5,4,5,3,5,3,5,5,5,4,5,5,4,5,5,4,5,5,5,5,5,5,3,5,5,5,2,5,4,3,5,3,5,5,4,5,3,5,5,5,5,5,4,4,4,5,5,5,5,4,5,3,5,5,4,4,5,5,5,5,5,4,5,4,5,5,5,5,5,3,5,5,4,5,4],\"rators\":[\"SijL7Kxx89h4p65Py\",\"8PwfYqoDQFThzNtvf\",\"aEm3Wvj2rFYRL8Lrb\",\"tAF9Gf6PiGogbZuWs\",\"E6M5TWTt6zS4gfa4z\",\"mDWNyaaQ9hvPCRzSd\",\"gb9rvGus2Jv7bjZSs\",\"55RQznnuTGpsj3EXd\",\"uZJqBoqeZRX3RncAR\",\"s5M5RvgqR9BhB9JoC\",\"yjtdwc2AC4jA2RWtn\",\"HF28xZKSLM9wEuqNg\",\"8JyqsSbN2FJXPr3cw\",\"xn7uGNKeAwPEkP9oA\",\"CTKmXtrqDYqJBnuy8\",\"cR3ibTMxLyEdDFCHY\",\"qD2LrwaDrSdiybLKY\",\"d8qtzoLB264iP8tdY\",\"iS5BrkGLzJyPK7nKt\",\"J3upzLHuEwXH7Z2hx\",\"XAQm7Z89ZNKgRJQEe\",\"p8qqFdJ3FSk5x9z3G\",\"DPi9QGLctq2y76KuE\",\"Yp7uvStL97cC9fKkY\",\"dkcmCKwqApX5jBggc\",\"gJYuGdkXEWWmGRLzu\",\"Jqk2uJZZxEv5wZFze\",\"LQxof8pGabGuWP7Gn\",\"gXTAie79kiw28tx5u\",\"qZQxPQ2kaNKAMesHT\",\"QRv96jmNaYsWkxQEG\",\"eYfPWvZwnJQkHbSTK\",\"q2tzvkrLASvSjkek9\",\"oBcs8GLX2ZFLXQy8y\",\"hnyhBFWwNCz9mDfSi\",\"cAP3n5NY64uoMwzRR\",\"n2BRY9X8899dcG8Bw\",\"T2vhHPhRR96hRizq8\",\"PWgzeK859suojbrRx\",\"3LiSLdtN58n46NEqg\",\"CHvzhtXnv8HTbPQ56\",\"ppxNdL4gjANz8oJLQ\",\"9ivvGvJGvtQfigQaZ\",\"2QziknsznNeMPRh3g\",\"GGdmhAvxXhqhhibJN\",\"DQskEvAv5KiJDPtGF\",\"K6MfKMytoJJuSGewP\",\"8K2JYKkwHJszwrATg\",\"XHShZ3WMPgGEA2vkR\",\"2PufnQcsHsfymufX3\",\"Hhvy3EGqWBXt3nFPA\",\"fznzd3qnvtbFkkizz\",\"dqwatKFAeGpjmf5dm\",\"hkiz2Nv927cYGrA86\",\"ijNKM8DuspXuAnC4y\",\"KBxTPknCRmB2b5y3i\",\"iP7wNofhZXTkJ9ryG\",\"kQH5b8MXJunh84Czq\",\"yyo6YLQN2of6fxp49\",\"FEYpu9RWysAgW3XnP\",\"PXAcsKkssS2yLyDv2\",\"FnWATKutkvp7u9jjg\",\"BJp2WkwLWGHHB5oQW\",\"vHve49Hmpgue4q43t\",\"kj6F29CacmdwBSSzx\",\"QHcNEadRcCStpv7dj\",\"QHS7Lm9u8CHqvXRc8\",\"iojEnnY9FsMfYzp6f\",\"a9pa76X2EYAaqyHuH\",\"d64ZNbBce9pva8CJK\",\"6daecm7mtqzp7mKso\",\"BrTDhPJcACL2bsrpJ\",\"cj4mwpNSnjrWCaPeE\",\"buX4mCQhtXCfBjeno\",\"6FgGiXBT8RDznKuAE\",\"Wpn95NqWxncQrwNgz\",\"qsuE9bW29L5rGyat9\",\"eHcgvkTGsH7ZziqBo\",\"zd9FLSzsGz3evKafy\",\"2oM2gF7qFJtNjhsWr\",\"xSfiyJQux3iYF6wkr\",\"dJzNF59j2p8jWZxiQ\",\"no46qNkTbNeHepe64\",\"ey3CASd6Je5LEJzfB\",\"LFSASkxgw9hr3KqmC\",\"fRfRrzsEDETovTDzT\",\"Fb2wehA7QgTFWry2x\",\"u5u2YpHXiNgzDNJdX\",\"4Lwjr34ypKNQNQCar\",\"Cuy7McJ5y8BkXRRk9\",\"iWmQ2tyuDFmChQRTu\",\"uK4sTJCNkeGLbzPps\",\"NG5sB6mWyqMsiBZd2\",\"KowRDEbvXcNBanqav\",\"Bmb3scffZ5SujLMmd\",\"oHpBTmfptRgL34mQu\",\"KJCDwGkoXh8qtbbKr\",\"h9RRjZqDymieWayne\",\"NjcpoityntQ24k8Za\",\"yFwe2WiDP4qSjJYXn\",\"9txsfCnEHsCmSBb2D\",\"JQE4ffyy7Pj9xfPtq\",\"ZYCaR9q6g5qgHP2ia\",\"JpTSNtaXKdx2is7Sr\",\"PEMp2zRed5nFSxfMY\",\"c2q7mY39z5JPEMCaM\",\"BtzmMsFmWSanZto6i\",\"QAfHb4u2Afp6pw5om\",\"nc7bRhkxgKyqusYe3\",\"23oi2a3vQwhtLEbSj\",\"AQSqD9oNv2uPfxZCR\",\"jkXpPyEzMPqYm2XnH\",\"9pzFiFK3ANLjQfnr2\",\"8LfTheFzvicameoz9\",\"zABTt5YDEC3BfoBZm\",\"xNBn8rA23TrkKR5M4\",\"yyB34zBZKSWCqRAcb\",\"7ZSSf74hx3Kj4kSZk\",\"RJQ2xpCr6Wbb9hPqg\",\"iyxrq5NfmfWpRAnG9\",\"YcCLwitFMAEJSnxAW\",\"2ZWkjRRjqvcRSMFJd\",\"dSd7wHgXGQeG5BQ2P\",\"S7J6e8Sh9CEzyw4ed\",\"LabfGDTnJi9Xpa6Cc\",\"vxbJT9DhcnL24jbtW\",\"9izxzCBrsRCbD9ajK\",\"hhSKYujojYnHiKFy7\",\"vA3sBoGvJmYKZHdmE\",\"fMqynfgCLDdQhkcKF\",\"WSsSbW3Mv3n7P3CKC\",\"C8Gd66wwGagHmj2t8\",\"8uiLiJcmWxWe6qw65\",\"c3X859Jnh9pYAk96f\",\"Ps5P4cFSdqSHEzHng\",\"xqYQMujmvgQ78bnJc\",\"NchnDcEmsLTeFZ4FH\",\"ix8TAL7oosoNYuPT5\",\"pjABtai3pWqgATpnf\",\"oDZaopxpPAdqWXLqz\",\"DSMWdbMzJaFCEEDJt\",\"3KkyQm77zsew58Dc2\",\"2QGRoQn2dRq3scu7k\",\"TJtMGJGQAed3Jk8Ha\",\"arNvKTXjF3EdHsxXz\",\"nPrsjLtBuTaivPQhh\",\"9s8grMKsyuYgs2YeP\",\"uGuS9YRXW2nj4p6zf\",\"KXkXtNhmoc6FGGzdX\",\"nEkMHvTSrLpqLTF8g\",\"NzJYdcNo5TBijAAWG\",\"yC4Dt6994bJGkwd6d\",\"6TH3SG6k5PTbb7zzQ\",\"yZxZzbj8oAfzqSWGC\",\"LsTTfLJdbydcZxrLi\",\"xfftcHHe5riRf4T93\",\"PTDFuxAzou7W6asWt\",\"4oJg4noyTi6b8J8A4\",\"unBKF3o26fPR3hrbk\",\"vFygc5PwZa5CbYufY\",\"6BpQP3ubeg48Q65ya\",\"NGZ8NiyozrKCuJscH\",\"AasGs8AeX9Lcb9xJn\",\"5JFFKSCZBGr5scPEn\",\"cCfa6fEwhRtaEzCHp\",\"pGyd6kbsz3R2HF9an\",\"ZFaCSKZ6HnmKtRe52\",\"hsmJoLFAvFWMYSL6J\",\"qTQGbqpJsx3SRcHZq\",\"etZqjzvLf75C4Kr89\",\"MMhXHdEE3XyLhHfNh\",\"YatXwYx4S2X5PCwFy\",\"wavm6X7ABEWPz4X6G\",\"WBnRQm5kqSB7L8reY\",\"W7Jv9JtDm5TEsec4z\",\"PY9DWKGqQkf8iGMoK\",\"YwbttJ7QZjBMmeSS9\",\"6sSHqXq7g9nX6KYke\",\"X4rzfxGgxx6CS7Bpz\",\"NzbRqGWspQnWMoDrF\",\"4Rzdf6wTFnSeiYBit\",\"zKfgYgdH6n7X94seZ\",\"wQ5XcMzmJ6qNy94L5\",\"Ds7L5bksw2QRHjrKL\",\"Fpr5xsqFYhgooHPdM\",\"XsLWJqgdYrJkKuxg7\",\"oNrzBuQ563eLYkuKE\",\"kPyq5pQ3oQKayohfv\",\"L3KXZhRGpFoN4QX8D\",\"fbr22rabEJMfBp7vD\",\"GXXh2QNxpgA632xcs\",\"bP4f5cyX9k8vLHfoy\",\"HcYxcQ5J6dM4WkWHd\",\"qNszsXx28cTxvGSNj\",\"ubngp6Yq8F4y8FwG9\",\"b6dDPCFzttKobEBe5\",\"oig8ig9SE9RZa8ttL\",\"PdbLarGzyFR7ZdJ62\",\"8nE8QHnFYsHCFebte\",\"vBJhjd3CjiJJFACBb\",\"9WZGiknRRJD3b93X2\",\"Ynx5TBWkGRukJ8yzR\",\"AQ37LHRyJyMn6ovRb\",\"FsbKReEb9K8ywGbXg\",\"82nyWEcznkx7ZA9ip\",\"AmdiwjipTnwSfFNxD\",\"m4TRvqmF3kQtZLyCC\",\"8FDr3RAEEoBM65b2W\",\"zLtKyz5etqbJ3Dw85\",\"RnTBbuFCrJWW6Ayvj\",\"Qad4u2BjtZCtECofd\",\"ngfS4L45DsrhRozho\",\"Lkcku4D8wh449piQh\",\"we9k633fXxeB3CLJP\",\"Dh3qTd94ZAtrFt5va\",\"GJmKcqu7xppQyBaTt\",\"8tseMpr9eC9HApLmD\",\"tEZcAbPYg95nfAJbJ\",\"55hdxpBY5FmE73W9P\",\"dWDtfhvaP8cBHhzFq\",\"PC3pLs36zNzpRDSuE\",\"hikeWkLJNay9AdAy6\",\"wYCDikom95dAuCcnj\",\"kRLZtRJwJEBZkFBxd\",\"hjzMfExjrppc4bPGu\",\"X39RceBetQ2enmw8o\",\"SwvC89JAm2xu2NB67\",\"mKCaR2pbcRQAdgZYE\",\"asguA7Whh6va3WAPJ\",\"5JFQgt6KFihmXfHKm\",\"zQS6Fj4CwLkuJcrRB\",\"z3qGbhYcYpBsBa35z\",\"hsrNYf3WbexXJKhCq\",\"r8fEEujGjzSS6waoy\",\"sbxProaYcGTtxEPpP\",\"7pBPqZRPETK3Xa7oQ\",\"j8ZhfpkTiK37goJkz\",\"jw486FE54gNCYTx29\",\"xBQC5uQdx6WndJ3iM\",\"bTcLjgCPExbpFQJ7B\",\"TLfBfYJw64TQCjY5i\",\"9DTM6qPLGoEit8XZx\",\"fRidsL65piFuLJ8YT\",\"hea3MCQxJWKD8h32B\",\"YmQb9Mo4Xcg2vzgbn\",\"WrEnrHTvnhZnTdiDH\",\"yFsT4nhJX3d9vX9Cy\",\"H8ob4bbKy27vWp9Ev\",\"aiPq9uFZGF8FDEZz8\",\"xjokBrz66LBxwzhbA\",\"Ewq4HD83cGQskcXxB\",\"5Yr5z3eNtkRXPaDRH\",\"gdndm3hHunARcYWow\",\"NNE5HNRXAkmhrWgyQ\",\"nuEke66Zz8Qk5vLkP\",\"ENsSYogEHHeDSrFod\",\"XWcgpC5eumoY9JgCJ\",\"4AHkJM6aaf3xAWPtP\",\"wqfcs5nZiCoPtoqfz\",\"HSg2z3ZSdrtv2pkSh\",\"zhGQzsMpKPifPkZcE\",\"ccDJ6oKupLA5aWddY\",\"3tRbAveSTDeS4imkf\",\"ZDu7GyHxgkxiP6TL8\",\"5rEiiwNW8YGxvWuH5\",\"7vpQsMQ2RdKLxmzsh\",\"yBuAy8rQNBkPArsi3\",\"LYPc7PezmGcJ5JWwK\",\"r9NLKFc4Jha46Rgon\",\"MKT7khMBGXzA22ykf\",\"WWS37MrHbt2NBFNXm\",\"wXMJMsQtoGWL8chxv\",\"9AyBHGWkdovTuwbdv\",\"hRAd998MG8Jzdpxj6\",\"uYzf3RSvvFk7vuEXi\",\"J5T8gZqiZXFuFDTQ7\",\"E2GxwgrF7N7pygnj7\",\"ghMkPtdFCpM6w8nax\",\"fEKYxcHjk7rvpjSRJ\",\"iC3KzMHEFWKi2G54H\",\"JC8xt2rJtqR7PeLwN\",\"2xzxyjwpLAG3iKddv\",\"SGhPxX5bHGL8zZqtt\",\"8BFSTCnoe2QggN64c\",\"zJjKEtM2EWoBwu3ke\",\"yr822PZmmiDDenxpB\",\"qaR8DnWrTk8Mus5Q2\",\"yJztfbra8TLW5JkB5\",\"p9riYAbHXwJZ9PhWf\",\"MW4gsgPJfaMEMyXPy\",\"MujPrz6mzAbjzCFsA\",\"sczXfM8DeE3EojgtB\",\"mq2W9FwPgf4w75dZi\",\"w7c8yyuyvZQdS78TM\",\"bY3AtfNfWpC2peHjS\",\"BMEud9eeJnPDC8A2k\",\"o4ixjQGSaYqA2JoM4\",\"LNCb5rksJLJ43L4Nw\",\"bCDTKAoS4biDmQ64Y\",\"8sNv5PTHa7XQ8bNqR\",\"oJx5acEiYhhKXT496\",\"y2LbZHNYwjoJPWaFv\",\"CqoDZaJGarmKbvfQd\",\"9CnvtZxBCJvWApmT2\",\"MBnFAXCG3ST9DBZQC\",\"RErqK2yM94wYyD2hk\",\"Yp4Jtxj7pHqZjheN7\",\"CDtzWARyt8eStMWjP\",\"2k5TGbjanP88axTgX\",\"HqpbA6C6zkAmDsaEm\",\"QpD4vLPETuJb6pP9p\",\"a2Kmh6ekWqQQooHiQ\",\"nGeYtWGMWf8YRNC7h\",\"iH37fsFnBFWv73ocd\",\"3bMccubDec5bZndEq\",\"hcAeJ5mhA7KTA6wkd\",\"DEDniTrstQYGounXT\",\"xoENo6sf5je5fa7Ej\",\"YXQvrgeiGzLd6cTW9\",\"d6C2ih7Ljpzyxcc3G\",\"ZuGpphwCoES34GjvB\",\"jN3WA5Dgox6MGvsZ5\",\"QR9XDDz9w7g2irPka\",\"m7kMANAKbQxHfueLC\",\"japE53nDCwpqhH6K3\",\"AFfw7cGg83uYk2Miy\",\"pCggmfGmHLDpJZjtn\",\"z2qiAB9MQH9KpJmLf\",\"4z4h4Ljr575FyeZqT\",\"sKfrD9gjCDHuqLzSk\",\"KcLaubZxELoaLQrRW\",\"joxsWNqkSudzBYLpw\",\"Fw2iPNuKCrYjzQhwP\",\"HtoMhm3R7D2AoPqvX\",\"WL33oTDaWfCQD4SmP\",\"RmwYNt4oSLCLLd8a5\",\"DYDJTyGgKFnBRLm2r\",\"fKzJMR2LLbiRtGetj\",\"tYsRGm9Q9JHkowSAL\",\"3BoKh3nDrvJxzBkMS\",\"rkSWGGPmrHZ5J3Ndc\",\"kc27cpmSvHZiv8LBk\",\"NYr7Z295QJHtd6dd2\",\"R6YxHWAiLgKwy5YvC\",\"jWbd7SYDzLPjc9EDh\",\"Smo6K2hui4JCnKLHG\",\"srJ34BaybkQh3qRkM\",\"CHFEqsRsNQLR8De9F\",\"FgA9hxXkjxe2pH6Af\",\"ctbThYbufFCYbRK4f\",\"EfxwqhYdapX3dMQC2\",\"kjvgTyRFyKHv44DcH\",\"eaZDrk7eXuuKjtawS\",\"449J2nqrwST39ehci\",\"E6sRiQd5xuyefLimm\",\"yhPBcN6xM7xdZJH9x\",\"WsCqifua4yHhKp6N9\",\"HqmxnQJM66Y57twhn\",\"4RY3zj9C2t8GGefhi\",\"4jXpf3D5uybKzYbZB\",\"qA9RqmHcdc5qft4SN\",\"TCvpT4EPb8qNssNB7\",\"gua4DkYYAXFB9Qe2b\",\"PH32cNxBjrK4a28sn\",\"5HCu9Ydd86QgHDRNP\",\"W8rEupxmpGMPXn2Ty\",\"XdaQbHty4sZkvopco\",\"puBhxcun5vXYSSFi3\",\"dNBGNMKLZam4bvHuZ\",\"54BFnXEjY3FuRNYpN\",\"BZQX4ApZSYEsQWywK\",\"7wEd3pvkQCeixZ4mn\",\"Ytsps3mDbhnbG9hBy\",\"XCnbSuZF8gdA7Lc8o\",\"DKZaJwNKi9fAaMwST\",\"chRdXAA6chuTg7K6C\",\"A6FHjEuYkzEx6quL9\",\"bMnabqZCgJbzY4294\",\"BZjjdBtsk8LFfu97o\",\"RoGGD5cpHb4ftdLDv\",\"aR8QMtScGsMaeQiPD\",\"MpfytGFYF77emJ3cT\",\"nsidNASvyX947rRbD\",\"qzXAMXsHZGT8o5hTA\",\"CaHAFAqYkqt4x32vm\",\"mTF6oWX2WhFR4M3QK\",\"nkL2knkcNaiHCerW2\",\"vmX8qctw5EoBWocYZ\",\"oFEG3RDs5J99JYtkZ\",\"tvXbjYMfHY9E4DAhY\",\"qyc3hwgf5pASwujyY\",\"KryBMchG2sXLPrQPq\",\"jZkHjKX7FwTyfy7w3\",\"jYqpPGXBWgDtiD9rf\",\"i5Nn7L8wRjX4fAZNN\",\"qHviE3a9APdzMShpT\",\"3rvsLmA5gN5uB6PdE\",\"u4x9cJSMdiQ2dJBS9\",\"J23RcmzbdtBbPCTjT\",\"DczXTd8L56smpFBqz\",\"HuXoFi2ybFnQemLcW\",\"iqmPb9JuJDgTFeR8Q\",\"cA6ALDreRTFs8k4MM\",\"ydBkEk36ZugnJcxnE\",\"TCp6RbbthXfRJzNEJ\",\"tT69XJYvM8FFBycwz\",\"HFq5Yqn7Svq9bxYdt\",\"Y2mmXq3t9QFNjFhXt\",\"nsdZKXkJMfdwmBR22\",\"D2M5hXca8SQfBkFZG\",\"Qp3zERXPGpahxJP9C\",\"ysfPsvBH8hxwiofuj\",\"HRrFLegfMkkKT4ZBh\",\"jCjCvyhqhpebkJn34\",\"Wvu3LxHBMy8dv2Sq8\",\"aaMzhEeTRmKM5X7Mv\",\"ADycYubh8WTMCXhgR\",\"ByE7WsdWH3KfKWkuR\",\"pQwhNKiCne4gEZgcn\",\"mqp9S59bENMRLyz8y\",\"uBXzq8ZaZMYkn4wW5\",\"P9uph6txcSzwMJWv8\",\"y5aiHcLmXRYR2Hsty\",\"rtEH6z8WydcCETQoL\",\"5ZsK8WwBTCsP3qJjd\",\"mFeC4dexaEuvSWtYG\",\"RoErKvc4oJyj4FZ8J\",\"kmQgdFtw5acdCpudA\",\"C2tm2bxEnJej6btsG\",\"RT2F5THkSKcdmPgBb\",\"nQRzZKeDKuLRf9chX\",\"8mw8fh6iCtdmR5uK9\",\"Diyz4XjYybMb7p4xE\",\"QpJLnPEFzJxCZwYAt\",\"NfMJuiBk6FN5Jc6ow\",\"cEJh9fCzvd38hpyQo\",\"Z24CkwejPKWotqCq4\",\"mfm3gB39arY8Rjb2y\",\"dyAGqDRkFZog24SWA\",\"AMpQSjKsRqhCDyS2j\",\"998kcLEWyeqnKdyBu\",\"X6NSd93QQie6sBrot\",\"iYDpvfvpGcTxnBnsf\",\"i2fyoxnNfhqyXRe8a\",\"EAkaxGi8WdbHfLrnc\",\"M8d3nCSCRX3Z4CvwY\",\"BuGWvGZGiJELoMy5G\",\"GqRznsaA4rdjP45yz\",\"xZ9MRfSkrB8XFeZfz\",\"8KFGnKmPy6C4oavH9\",\"qYnPWpryjKuLTsveJ\",\"8FNaH4YaFn8isxT8R\",\"zHik8yyagMX6RTN8y\",\"kT9D2JCGBp7AmZFHe\",\"8NvGXadvQEppXXZD7\",\"LhYqv6wKWuF639An9\",\"SBzZXaahGicGuPtYT\",\"J2GDeGbLmyXzQroqc\",\"HHadGcq7F3XZvjn37\",\"mvJBakQ35CWAnbbEZ\",\"CRs7cqZGGAhYBy3FJ\",\"84BPLiup4RJeymNmJ\",\"fhAQbzS6a4jhB6vFB\",\"R4PgA5WhDKRXvP4dJ\",\"vyaFTJDKChqYfczdu\",\"tm3R3qmjwwqy2Kj6T\",\"73nAqR269FLFMZwnQ\",\"5QN8R22z43SrwoHDz\",\"ywyHrY9aEgiBaqCyA\",\"p5EN3tadeCfPkW3CB\",\"hd4Xi33yjyGzgZsux\",\"DrXeuSu866MAYLhhP\",\"4RHvXjHa7r5bD46m9\",\"JhX7jvtpwNyxcc39m\",\"ZFuRxFLawEikh87jL\",\"4kGEQP2Ftfu5yCQWx\",\"X59Ty5KeX4fXXJK4K\",\"hTCiwfzuxWkvmDgxQ\",\"uWAGKMbtcBquhExAf\",\"ufhqFyS2kN9szbx8n\",\"j2hKJg9sh9m3HWFgo\",\"DZvz6WY5bQEneYzvv\",\"4oivhmYjADXsfvXab\",\"kBNCPDJxWtLYE3pp5\",\"YZsZjfvd3PnLhDJrR\",\"uEoowa9JRdMYp3nNF\",\"Wv3z8iyvYsXKuaZFR\",\"2v9KAsCFuqtJagK45\",\"szbQRQnQ44hmgMNxh\",\"PjSSjHCqbEYr8mu6u\",\"Ci7kchMSbS5yKiJje\",\"qmtoFxLkGDQMwcBr6\",\"mw9464S5dnenqzvpm\",\"7ajSwbNMNp9ggPewT\",\"jpwpZ6waYptcaHzXu\",\"yod5YhKtPqw2GfG9B\",\"qM4cFjDW9EBf6BNsA\",\"bWBtP6bgSkZ72iMwg\",\"LwyP9vk3PD8ZqDGZN\",\"AhZwrR5qRuHYSxCd9\",\"rGMaJJGM8fTxynmg9\",\"xD9GELXrPmxqfTqE2\",\"CtWgFBpZ6ZkSt4ybw\",\"Je8xN7ozQDLxS7xKx\",\"ypr6euKn2aszY7ChL\",\"zoPKKgKubrmoZGt5C\",\"b4kSuDyNJsW29K33T\",\"wc8WKyus4tSBfimGz\",\"p7ewAeXZYFGuPAkjc\",\"8fZxjQfuXw5HMSRJM\",\"rwu8XFS5o9L77Gisi\",\"vNzfEERRCWWpzMzQH\",\"JK5cqTokykN9wmwuP\",\"Cy34THXNefcoyNNY4\",\"sbJcFfQjQ59Wfg4Cd\",\"5EBKn3p2cidKXTWmj\",\"u7FAeNbKeLhGsJaS6\",\"fwM6FQ9GTasuEsGPP\",\"j7BAFKZx7DpeF4Xrx\",\"yTtSCvGPyYna6JuRC\",\"fzJ86D3jYP6Wv5Hks\",\"dfC4khxpH5jw3RThP\",\"2fxapKr8XGdNeaKi2\",\"bSozprqjovriShQ9d\",\"JKb5rhL6DKcCAypF9\",\"Qyfyyw6oC4EHAndzo\",\"wv2iQkTH6uH4dTSb4\",\"DdHnWE8gjciwCXhSL\",\"azJGtZABF89kadHp5\",\"hHbCmqsRk3E2KmB27\",\"K42ijC8Jy8GHBnobP\",\"5xcPnT7ttWbvRPN6t\",\"QgXPECiiNNgE78HpE\",\"MXi8ecLx4gpwR6HdP\",\"RbRoa7RJ5nEooSYd7\",\"jkbavR2ATFJcpmo8M\",\"XgR6uTaGimtE6RBnt\",\"5Dd7XwALvvMMwS4Fb\",\"xjyixzXzqqqTfJARd\",\"XNmN6ztj36a7eChbD\",\"Hu4SkoNyWCP4vmsZE\",\"StNu7DPyTgEStZsMY\",\"S9hHPiybdTKyuELsn\",\"Rk54WG323KeT6odSb\",\"P7NmFbCJ5offXMRvB\",\"eXW8reZCCZHQzJjQi\",\"si7mLchEjdD8bHDN6\",\"p7cCXgBosH3DjjRYu\",\"h8AZ2M494u7ycb9Ju\",\"MdPXcNRBtdHqjAzLp\",\"F5wNNiFSC7k9mSaBC\",\"GNJMTgowjwubpi6XE\",\"c5PF4DaFHhKDWTnyh\",\"eMuCpJ2spXWkJjWNz\",\"m3R9aaRoEbaxRsSNA\",\"zaQY7JkGGyvrZf9ux\",\"5zm7YeQ2reK3wrL7H\",\"wrL4iX2CCSqDCCty3\",\"NHp9cXgWCyX6KqyMT\",\"b4oAnTcLpo2sErJM9\",\"3Kgtr8FytbE9FnJxH\",\"RfbjShbg8jmhyNtJh\",\"WLaN7dz26FJ46i4Zq\",\"rN7ZbwK7JqBzAPjmT\",\"bNENiqqEDxM5a5JBf\",\"uZoqtQySNJ9yKqnpF\",\"vw4Byxdm9XQwbDtGC\",\"9Gf6g4fuKc3uou9w2\",\"Co8eCrdMTL6BrYNyk\",\"aeLZocuWERaqMkXTs\",\"zes4rGMW52vnJfzTK\",\"mRxzx46ebMkN3gBLx\",\"2HfNkb2SoqdyjKW3o\",\"o4vp9otoT2z2JpJqp\",\"eqK6tD9LJGzqGzbai\",\"Wi4H6ayKsNDWWQCG5\",\"iimzNJdzfYSWmCikT\",\"PoPjZNDrJGk3KPEyj\",\"2MjzJ7yxh3eT3xbng\",\"nxwCaXcB5PXDkhtX3\",\"cxw3M4jjZrm68S2oT\",\"mk4gQ3ejioE39uYLQ\",\"qcNyEde4gfzjhZQ4p\"],\"total\":630},\"flags\":1},\"summary\":\"Write a function that takes a list of lists and returns the value of all of the symbols in it, where each symbol adds or takes something from the total score. Symbol values:\\n\\n# = 5\\nO = 3\\nX = 1\\n! = -1\\n!! = -3\\n!!! = -5\\n\\nA list of lists containing 2 #s, a O, and a !!! would equal (0 + 5 + 5 + 3 - 5) 8.\\n\\nIf the final score is negative, return 0 (e.g. 3 #s, 3 !!s,\",\"tags\":[\"strings\",\"numbers\",\"math\",\"functional_programming\"],\"timestamp\":{\"$date\":1602160657259},\"title\":\"Add the Values of the Symbols in a Matrix\",\"family\":[{\"_id\":\"oHzcB8vErNHXR3NhE\",\"language\":\"cpp\"},{\"_id\":\"sE7z8FkWycJHrAvu9\",\"language\":\"javascript\"},{\"_id\":\"KHPFPaKpXmDeRoYQ3\",\"language\":\"python3\"},{\"_id\":\"kgAbjYEP53NNLRzv8\",\"language\":\"ruby\"}]}}"]