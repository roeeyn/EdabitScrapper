a["{\"msg\":\"result\",\"id\":\"1553\",\"result\":{\"_id\":\"xng23q8WgoRFNnZM4\",\"author\":\"zatoichi49\",\"authorId\":\"tAF9Gf6PiGogbZuWs\",\"code\":\"def word_groups(lst):\\n\\t\",\"difficulty\":2.0919540229885056,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"Zz2fniPnRcBmJSMpw\",\"instructions\":\"Words can be grouped together when one word can be found within another (e.g. **eat** is in h**eat** and th**eat**er). Given a list of words, return a *dictionary* that groups together each word with a list of all other words that contain it. Each group of words should be returned in alphabetical order.\\n\\n### Examples\\n```\\nword_groups([\\\"grates\\\", \\\"rat\\\", \\\"rates\\\", \\\"rations\\\"]) ➞ {\\n  \\\"rates\\\": [\\\"grates\\\"],\\n  \\\"rat\\\": [\\\"grates\\\", \\\"rates\\\", \\\"rations\\\"]\\n}\\n\\nword_groups([\\\"duct\\\", \\\"produce\\\", \\\"product\\\", \\\"rod\\\"]) ➞ {\\n  \\\"duct\\\": [\\\"product\\\"],\\n  \\\"rod\\\": [\\\"produce\\\", \\\"product\\\"]\\n}\\n\\nword_groups([\\\"her\\\", \\\"the\\\", \\\"here\\\", \\\"other\\\", \\\"there\\\"]) ➞ {\\n  \\\"the\\\": [\\\"other\\\", \\\"there\\\"],\\n  \\\"here\\\": [\\\"there\\\"],\\n  \\\"her\\\": [\\\"here\\\", \\\"other\\\", \\\"there\\\"]\\n}\\n```\\n\\n### Notes\\nWords can belong to more than one group.\",\"lab\":\"Test.assert_equals(word_groups(['eve', 'even', 'events', 'level', 'vent']), {'vent': ['events'], 'even': ['events'], 'eve': ['even', 'events', 'level']})\\nTest.assert_equals(word_groups(['air', 'dairy', 'despair', 'fair', 'lair', 'pair']), {'air': ['dairy', 'despair', 'fair', 'lair', 'pair'], 'pair': ['despair']})\\nTest.assert_equals(word_groups(['ant', 'antelope', 'cantelope', 'install', 'metallic', 'plan', 'plant', 'tall']), {'tall': ['install', 'metallic'], 'plan': ['plant'], 'ant': ['antelope', 'cantelope', 'plant'], 'antelope': ['cantelope']})\\nTest.assert_equals(word_groups(['her', 'the', 'here', 'other', 'there']), {'the': ['other', 'there'], 'here': ['there'], 'her': ['here', 'other', 'there']})\\nTest.assert_equals(word_groups(['pro', 'protect', 'protein', 'enlighten', 'rot', 'rotten', 'ten']), {'rot': ['protect', 'protein', 'rotten'], 'pro': ['protect', 'protein'], 'ten': ['enlighten', 'rotten']})\\nTest.assert_equals(word_groups(['dice', 'ice', 'iced', 'indices', 'voice']), {'dice': ['indices'], 'ice': ['dice', 'iced', 'indices', 'voice']})\\nTest.assert_equals(word_groups(['anthem', 'rant', 'rest', 'restaurant', 'them', 'theme', 'ant']), {'them': ['anthem', 'theme'], 'ant': ['anthem', 'rant', 'restaurant'], 'rest': ['restaurant'], 'rant': ['restaurant']})\\nTest.assert_equals(word_groups(['cargo', 'are', 'bar', 'car', 'careful', 'embargo']), {'bar': ['embargo'], 'car': ['careful', 'cargo'], 'are': ['careful']})\",\"language\":\"python3\",\"summary\":\"Words can be grouped together when one word can be found within another (e.g. eat is in heat and theater). Given a list of words, return a dictionary that groups together each word with a list of all other words that contain it. Each group of words should be returned in alphabetical order.\\n\\nExamples\\nword_groups([\\\"grates\\\", \\\"rat\\\", \\\"rates\\\", \\\"rations\\\"]) ➞ {\\n  \\\"rat\",\"tags\":[\"arrays\",\"conditions\"],\"timestamp\":{\"$date\":1559298947482},\"title\":\"Words Inside Words\",\"stats\":{\"completed\":{\"total\":90,\"ratings\":[2,2,2,2,2,2,2,2,2,2,2,4,3,3,3,3,1,2,2,3,3,2,3,2,2,0,1,0,2,4,1,0,3,2,3,2,3,3,2,3,1,1,3,2,2,2,3,2,2,3,0,3,2,0,3,3,2,3,1,3,2,2,2,2,3,3,3,3,2,3,0,3,1,2,3,2,0,3,0,0,3,2,2,2,2,1,3],\"rators\":[\"8JyqsSbN2FJXPr3cw\",\"yZvzB3qFb8pkHy4dg\",\"Y3KkPrBzMBgMiqaQ6\",\"tAF9Gf6PiGogbZuWs\",\"gb9rvGus2Jv7bjZSs\",\"4HC75a4BAtjSd8jPv\",\"PFjMZGHNAPTkgd7tq\",\"AF6LgdKhEdzwgRJom\",\"jHrtWDGBhkbuWa7fG\",\"kQH5b8MXJunh84Czq\",\"jYJ26SiLKBu5GRumq\",\"fAoLuqbGvHn4w2PHf\",\"HqmxnQJM66Y57twhn\",\"2fxapKr8XGdNeaKi2\",\"vgTvCCxgvbCTDvaRT\",\"gMJhLdyw3tH7L96X2\",\"Jqk2uJZZxEv5wZFze\",\"ab7BsQuhDo3QgE6bh\",\"s5M5RvgqR9BhB9JoC\",\"K96FwtfDDN5WM4Bb7\",\"C4QntmkYtB89GNtpd\",\"fBqQjriC4QEtFNxFe\",\"AasGs8AeX9Lcb9xJn\",\"4CFzv558qbGcpQwc4\",\"8PwfYqoDQFThzNtvf\",\"nbEdn8qsrBJsaYCzL\",\"w3A7cBWyAfukk6xEQ\",\"LjoNTyGEMfBpMHHus\",\"v3fjGuc7Pq4yjFygS\",\"PytNZK9mNiRiZxPrm\",\"wZoxzQDbso9SMAPkY\",\"aEm3Wvj2rFYRL8Lrb\",\"mDWNyaaQ9hvPCRzSd\",\"ZNnsMeNkdDhHjSrZb\",\"YRstQuthRkFeBiXug\",\"KdNDysEsy2TW5QRJ2\",\"gJYuGdkXEWWmGRLzu\",\"HF28xZKSLM9wEuqNg\",\"pkQBaSzukotPEXmrD\",\"6BZMSxML2SjRgRCZn\",\"v9KtC8YLbMWmXiW2H\",\"hnyhBFWwNCz9mDfSi\",\"m6D2RuQJwrAK6WB3v\",\"W5TajitmCyxz87zAC\",\"DEDniTrstQYGounXT\",\"2innwjWqxJHo4eRGh\",\"JS3hNM3XXkxPdg3yk\",\"P2W2p3hXTJLZGR46F\",\"cR3ibTMxLyEdDFCHY\",\"DrkR35NqnP9NDLbq6\",\"zZDaXBxMzTCBhNkgL\",\"Ecg4m7srYGgZsb4Ck\",\"yjtdwc2AC4jA2RWtn\",\"hab8YixsXxe4CcZpP\",\"f2BoqyCpgnmjEjLqx\",\"KZ2xddpM2f9JRaryB\",\"585XRBCotKx6wh96Q\",\"spqXrjG3ZFa2j5uTR\",\"xn7uGNKeAwPEkP9oA\",\"iS5BrkGLzJyPK7nKt\",\"DPi9QGLctq2y76KuE\",\"p8qqFdJ3FSk5x9z3G\",\"J3upzLHuEwXH7Z2hx\",\"QRv96jmNaYsWkxQEG\",\"dkcmCKwqApX5jBggc\",\"Yp7uvStL97cC9fKkY\",\"d8qtzoLB264iP8tdY\",\"gXTAie79kiw28tx5u\",\"qZQxPQ2kaNKAMesHT\",\"KJCDwGkoXh8qtbbKr\",\"cAP3n5NY64uoMwzRR\",\"oBcs8GLX2ZFLXQy8y\",\"iojEnnY9FsMfYzp6f\",\"GGdmhAvxXhqhhibJN\",\"eHcgvkTGsH7ZziqBo\",\"PWgzeK859suojbrRx\",\"T6iBEE2jp7f7iEF2P\",\"gKnWjDjwrJh7MK2df\",\"2PufnQcsHsfymufX3\",\"o4ixjQGSaYqA2JoM4\",\"yod5YhKtPqw2GfG9B\",\"mvJBakQ35CWAnbbEZ\",\"fznzd3qnvtbFkkizz\",\"8sNv5PTHa7XQ8bNqR\",\"Ds7L5bksw2QRHjrKL\"],\"quality\":[4,5,5,5,5,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"isHidden\":false,\"quality\":4.875,\"family\":[{\"_id\":\"xng23q8WgoRFNnZM4\",\"language\":\"python3\"}]}}"]