a["{\"msg\":\"result\",\"id\":\"944\",\"result\":{\"_id\":\"wZzZ9NtugwsnQEQeM\",\"author\":\"zatoichi49\",\"authorId\":\"tAF9Gf6PiGogbZuWs\",\"code\":\"def golf_score(course, result):\\n\\t\",\"difficulty\":1.4810996563573884,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"w48Axur3otjkr424Q\",\"instructions\":\"A standard-sized golf course has 18 holes. Each hole is given a *par*, which is the expected number of strokes (hits) that a good player would use to complete a hole. Golf also uses different terms for a player being over/under par for a particular hole:\\n\\n- \\\"eagle\\\" = 2 under par (-2)\\n- \\\"birdie\\\" = 1 under par (-1)\\n- \\\"bogey\\\" = 1 over par (+1)\\n- \\\"double-bogey\\\" = 2 over par (+2)\\n\\nExample scores:\\n\\n- \\\"birdie\\\" on a par 3 hole = 2\\n- \\\"eagle\\\" on a par 5 hole = 3\\n- \\\"par\\\" on a par 3 hole = 3\\n- \\\"bogey\\\" on a par 4 hole = 5\\n\\nGiven a list of pars for an 18-hole golf course, and another list containing the player result for each hole, return the **total score** for the round of golf.\\n\\n### Example\\n```\\ncourse = [4, 4, 5, 3, 4, 4, 3, 5, 5, 3, 5, 4, 4, 4, 4, 3, 4, 4]\\n\\nresult = [\\\"eagle\\\", \\\"bogey\\\", \\\"par\\\", \\\"bogey\\\", \\\"double-bogey\\\", \\\"birdie\\\", \\\"bogey\\\", \\\"par\\\", \\\"birdie\\\", \\\"par\\\", \\\"par\\\", \\\"par\\\", \\\"par\\\", \\\"par\\\", \\\"bogey\\\", \\\"eagle\\\", \\\"bogey\\\", \\\"par\\\"]\\n\\nscore = 2+5+5+4+6+3+4+5+4+3+5+4+4+4+5+1+5+4 = 73\\n```\\n\\n### Notes\\nFor this challenge, there will be no *holes-in-one*, *albatrosses* (-3), or anything worse than a double-bogey.\",\"lab\":\"Test.assert_equals(golf_score([4, 4, 4, 4, 5, 3, 3, 4, 3, 5, 4, 4, 3, 4, 5, 4, 4, 5], ['double-bogey', 'par', 'par', 'double-bogey', 'eagle', 'par', 'bogey', 'birdie', 'birdie', 'bogey', 'par', 'birdie', 'par', 'par', 'par', 'par', 'bogey', 'par']), 74)\\nTest.assert_equals(golf_score([5, 4, 4, 4, 4, 4, 5, 4, 3, 3, 4, 5, 3, 4, 4, 3, 5, 4], ['par', 'bogey', 'birdie', 'bogey', 'par', 'birdie', 'par', 'bogey', 'eagle', 'par', 'par', 'birdie', 'par', 'eagle', 'double-bogey', 'birdie', 'par', 'birdie']), 68)\\nTest.assert_equals(golf_score([4, 3, 4, 4, 5, 4, 5, 4, 4, 4, 3, 5, 4, 4, 3, 4, 3, 5], ['bogey', 'par', 'birdie', 'par', 'par', 'birdie', 'bogey', 'par', 'par', 'double-bogey', 'par', 'double-bogey', 'par', 'eagle', 'par', 'par', 'par', 'par']), 74)\\nTest.assert_equals(golf_score([4, 5, 4, 4, 4, 5, 5, 3, 4, 5, 4, 3, 4, 3, 3, 4, 4, 4], ['par', 'par', 'eagle', 'bogey', 'birdie', 'par', 'par', 'par', 'birdie', 'eagle', 'bogey', 'bogey', 'par', 'par', 'par', 'par', 'birdie', 'bogey']), 69)\\nTest.assert_equals(golf_score([5, 5, 3, 5, 4, 4, 3, 4, 4, 4, 3, 3, 4, 4, 4, 5, 4, 4], ['birdie', 'par', 'par', 'par', 'bogey', 'bogey', 'bogey', 'double-bogey', 'par', 'par', 'par', 'par', 'eagle', 'par', 'double-bogey', 'par', 'birdie', 'par']), 75)\\nTest.assert_equals(golf_score([4, 4, 4, 4, 5, 3, 4, 4, 3, 5, 3, 4, 5, 3, 4, 5, 4, 4], ['eagle', 'par', 'birdie', 'par', 'par', 'par', 'bogey', 'birdie', 'par', 'bogey', 'birdie', 'double-bogey', 'par', 'par', 'par', 'par', 'par', 'par']), 71)\\nTest.assert_equals(golf_score([4, 5, 4, 4, 4, 4, 3, 5, 4, 3, 5, 5, 4, 3, 3, 4, 4, 4], ['par', 'par', 'bogey', 'birdie', 'birdie', 'par', 'par', 'par', 'par', 'bogey', 'par', 'par', 'birdie', 'par', 'birdie', 'bogey', 'birdie', 'double-bogey']), 72)\\nTest.assert_equals(golf_score([4, 5, 3, 4, 4, 4, 4, 3, 4, 5, 4, 5, 4, 4, 4, 3, 5, 3], ['double-bogey', 'birdie', 'eagle', 'par', 'par', 'birdie', 'par', 'par', 'double-bogey', 'par', 'par', 'par', 'birdie', 'par', 'bogey', 'par', 'birdie', 'par']), 71)\\nTest.assert_equals(golf_score([5, 5, 4, 5, 3, 4, 3, 4, 5, 3, 4, 4, 4, 4, 4, 4, 3, 4], ['par', 'par', 'eagle', 'bogey', 'bogey', 'par', 'birdie', 'par', 'par', 'par', 'par', 'birdie', 'birdie', 'eagle', 'par', 'birdie', 'par', 'birdie']), 65)\\nTest.assert_equals(golf_score([5, 3, 4, 4, 4, 4, 5, 3, 4, 4, 4, 3, 4, 5, 4, 5, 4, 3], ['bogey', 'eagle', 'par', 'eagle', 'bogey', 'birdie', 'par', 'par', 'birdie', 'birdie', 'eagle', 'birdie', 'par', 'double-bogey', 'par', 'bogey', 'bogey', 'par']), 68)\\nTest.assert_equals(golf_score([5, 4, 4, 3, 5, 4, 4, 4, 4, 5, 4, 3, 4, 3, 4, 5, 4, 3], ['birdie', 'par', 'par', 'par', 'par', 'par', 'par', 'eagle', 'birdie', 'par', 'bogey', 'birdie', 'bogey', 'birdie', 'par', 'par', 'birdie', 'par']), 67)\\nTest.assert_equals(golf_score([4, 4, 4, 3, 4, 4, 4, 5, 4, 3, 4, 3, 5, 3, 4, 5, 4, 5], ['double-bogey', 'par', 'bogey', 'birdie', 'par', 'par', 'birdie', 'par', 'par', 'par', 'par', 'par', 'bogey', 'par', 'par', 'birdie', 'birdie', 'par']), 72)\\nTest.assert_equals(golf_score([4, 3, 4, 4, 3, 5, 4, 4, 5, 3, 4, 3, 5, 4, 4, 4, 5, 4], ['par', 'eagle', 'bogey', 'par', 'birdie', 'bogey', 'par', 'par', 'birdie', 'par', 'par', 'double-bogey', 'par', 'bogey', 'bogey', 'double-bogey', 'par', 'bogey']), 77)\\nTest.assert_equals(golf_score([3, 4, 5, 3, 4, 5, 3, 5, 4, 4, 4, 4, 4, 3, 5, 4, 4, 4], ['double-bogey', 'par', 'par', 'par', 'bogey', 'par', 'par', 'par', 'par', 'birdie', 'par', 'eagle', 'eagle', 'bogey', 'par', 'birdie', 'bogey', 'double-bogey']), 73)\\nTest.assert_equals(golf_score([3, 4, 5, 4, 4, 3, 5, 4, 4, 4, 4, 4, 5, 3, 5, 3, 4, 4], ['double-bogey', 'par', 'par', 'par', 'par', 'birdie', 'par', 'bogey', 'bogey', 'par', 'par', 'birdie', 'par', 'par', 'par', 'par', 'birdie', 'bogey']), 74)\\nTest.assert_equals(golf_score([5, 3, 4, 3, 4, 5, 4, 4, 4, 4, 4, 3, 4, 5, 5, 4, 3, 4], ['par', 'double-bogey', 'par', 'birdie', 'eagle', 'eagle', 'birdie', 'birdie', 'eagle', 'par', 'par', 'par', 'par', 'par', 'eagle', 'birdie', 'bogey', 'bogey']), 64)\\nTest.assert_equals(golf_score([5, 4, 4, 3, 4, 5, 4, 3, 3, 4, 4, 4, 4, 5, 3, 5, 4, 4], ['bogey', 'birdie', 'birdie', 'par', 'eagle', 'par', 'birdie', 'par', 'par', 'eagle', 'par', 'bogey', 'par', 'par', 'par', 'eagle', 'par', 'par']), 65)\\nTest.assert_equals(golf_score([4, 4, 4, 4, 5, 3, 5, 4, 4, 4, 3, 3, 3, 5, 4, 5, 4, 4], ['par', 'par', 'par', 'eagle', 'birdie', 'birdie', 'bogey', 'eagle', 'bogey', 'eagle', 'par', 'birdie', 'bogey', 'bogey', 'par', 'bogey', 'par', 'par']), 68)\\nTest.assert_equals(golf_score([4, 5, 5, 3, 3, 4, 5, 3, 5, 4, 3, 4, 4, 4, 4, 4, 4, 4], ['par', 'bogey', 'par', 'par', 'bogey', 'par', 'birdie', 'birdie', 'eagle', 'bogey', 'par', 'par', 'par', 'eagle', 'bogey', 'double-bogey', 'par', 'eagle']), 70)\\nTest.assert_equals(golf_score([4, 5, 3, 4, 4, 4, 5, 5, 4, 4, 4, 3, 4, 4, 3, 5, 3, 4], ['par', 'birdie', 'par', 'birdie', 'eagle', 'birdie', 'par', 'par', 'par', 'par', 'par', 'birdie', 'par', 'double-bogey', 'par', 'birdie', 'bogey', 'eagle']), 66)\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,1,2,0,2,2,1,2,1,1,2,0,2,2,1,1,0,1,0,1,2,0,2,2,0,2,1,2,1,2,2,1,2,1,1,2,2,2,0,1,1,2,1,1,1,0,2,1,2,1,3,2,2,2,1,1,2,1,2,2,1,1,2,1,1,2,2,2,2,1,0,1,2,1,3,2,2,2,1,1,2,1,2,2,2,1,1,2,0,1,0,2,3,2,1,2,0,2,2,2,0,2,2,2,2,1,2,2,2,1,2,1,1,2,2,1,2,2,1,2,2,1,2,1,1,0,1,1,2,1,3,1,2,1,2,3,0,2,1,1,2,0,2,2,0,2,2,2,2,2,2,2,2,2,1,1,1,2,0,2,0,3,2,2,2,2,3,1,0,0,2,1,2,1,1,1,0,2,1,2,2,2,0,1,1,0,2,2,2,2,0,2,1,2,2,3,0,5,1,2,2,2,2,2,2,2,1,2,2,2,1,2,2,0,1,1,2,3,0,2,2,0,2,2,2,1,2,2,1,2,1,0,2,2,2,1,2,2,2,1,2,0,1,2,2,1,2,1,2,0,0,1,0,0,2,1,0,2,1,2,2,2,2,1,2,1,5,2,1,2,0,2,2,1,1,2,2,1,1,1,2,2,2,2,1,1,1],\"rators\":[\"tiETrb6KmarBWK5fD\",\"tDcFFDWptJb2o3ZG9\",\"hMdws8GhX4FNPPb2a\",\"kmaNtPidHyrArCTxk\",\"yZvzB3qFb8pkHy4dg\",\"C9LKGu2g5hSijvDzA\",\"ahWFxnaxt9bXSA4f3\",\"gb9rvGus2Jv7bjZSs\",\"AF6LgdKhEdzwgRJom\",\"XKi8iZXBCHCaebSHh\",\"4kJMafuJWxzhDht2w\",\"TNQ7ixK78HHTLP7it\",\"tAF9Gf6PiGogbZuWs\",\"TNMAJidLpPdH4kmBv\",\"WkWyq9wMkZhXB6zsD\",\"yrCNkFYQBEDE76eFS\",\"68qCtCndRYP4jPbCN\",\"uSh3aNxzD28jBuhxa\",\"nzx4uAPg3hCceyFPE\",\"ppJxGxjP9BHgq3DE7\",\"td7qPZ7Lv4pEWT2Ya\",\"qcbdDGrrf5HzPLRvQ\",\"e7hZa9EqDzpwivGPH\",\"cXaojnX4FS2XbDeMy\",\"JdfQpGCvHgKHFz89X\",\"zjZe8FuGZYPTDLzta\",\"RDydmpNu7ksbh4d7w\",\"jeuoearPPTcGPgXhf\",\"8JyqsSbN2FJXPr3cw\",\"nc7bRhkxgKyqusYe3\",\"EQxW3d7Xsm5ojpHT9\",\"Fv3AEnW3RoRDbY3FW\",\"N2wnZXkhDH86mgjQ8\",\"3fmH5qZCYo98oxJeD\",\"DacrquhhxfCimTK2M\",\"dpfvvzmTFWQbY2Xda\",\"rLcWPy6Eyppzkc7hT\",\"hmJar7wTPM99rX4HB\",\"qvEvDcL32a5F4Tg6c\",\"WYCQt5qMw82RczA5K\",\"5F8mznSAtBEoRhez4\",\"o5pRKAbyH9TjiB59q\",\"hmmA5upX3a27jdPFe\",\"GAMLghpc9JMXz3jvs\",\"6u7yc9m6HuHGbHzph\",\"JEAi9mG3vvBomJ3Yu\",\"5JFQgt6KFihmXfHKm\",\"ae2bb4Zr7YAdN3dMu\",\"CDGHrSPaEX56xEuSF\",\"nyWQFMDZdFCsQpqpM\",\"5XJHB8u6A25k3uF2H\",\"cmwasetrBzbwJQbks\",\"yAouD3PxzED8a4gap\",\"M8jrv2FfpMQp9Qzpx\",\"4y2bxsHwifCdZXAQA\",\"ZzwR8m8Q6Gozo9ofz\",\"WBAKsQ3cdcrKxeAcp\",\"Rgdjr9tBGabXFdoXL\",\"9DZaiAD2RHxo4FTRy\",\"nfXGHENb5md7m355s\",\"sCnrfER8vCe4xhpB2\",\"P59rek6gvwTzHvRYa\",\"jHrtWDGBhkbuWa7fG\",\"35BCzitC9L54ceH4c\",\"Nj6FwgBtAXsaQwsM2\",\"gMJhLdyw3tH7L96X2\",\"s5M5RvgqR9BhB9JoC\",\"FgkYtHLxeD8pETJ8T\",\"tczr8H3zHk2kwp8br\",\"gng2hMJGaScAnnX87\",\"SKabuq5XuhXBugKBa\",\"498CxrZQdThLMa7ki\",\"vkwPoXwJXZjXepHXx\",\"JjqmCRDbtCqq254Sm\",\"tKCgSWX7X4CWHMWGw\",\"moFrJ4vxzxPynByzB\",\"Xy2WidG4rw5Qy4tQz\",\"cecRRLKKu5R62D5xE\",\"TChZRiHktaMCpoyru\",\"Ww75pCpAW47jbSd5H\",\"cR3ibTMxLyEdDFCHY\",\"HQxp7NcdvF92G7bYS\",\"RErqK2yM94wYyD2hk\",\"GR5P7gLKtxGyTAZTB\",\"FGC6W9fAKvaB7jPdt\",\"sKfrD9gjCDHuqLzSk\",\"xRD8qBgJpfpr8buJv\",\"Tin42WiZ4JTDEnS7b\",\"vM3NzgHD8sQyT4WyM\",\"XbxHXmh5ZmRN2gw3K\",\"6QEhBfzWmuYwm34zz\",\"mtRvHDpeLoSGBf8zC\",\"i3KxTdoXY7KH88FFh\",\"9YtQPAffoq4WJLcAP\",\"aCNWav8S8Try9RkC6\",\"6fbavLhJREvHXvnaY\",\"FNJ8pDJ8SzvcbG5Pg\",\"2fxapKr8XGdNeaKi2\",\"ZbunZ3ASwaBpgteiZ\",\"otXtuQygbcYATMZoP\",\"Hz9BzmNzg9dnMhSB2\",\"3efW5qCKraPjzEfiX\",\"ksafdYcNM3SFEQoW9\",\"HqmxnQJM66Y57twhn\",\"W2wFFFx9pqgwmkFi3\",\"Tka7TisJy5pZmvv6a\",\"K96FwtfDDN5WM4Bb7\",\"p6oXjCj4iX2YGymJz\",\"CEd9tLdXeDeNHSzys\",\"u5u2YpHXiNgzDNJdX\",\"qxB9bnow4EXPHwsPj\",\"oqGkxvASXq52iTDvp\",\"qJZsi5rhRnWA38FbA\",\"tYjQweAK2k8goR4Bq\",\"4tgBydK887PitgAoi\",\"ejZ8XtTkSNEAuw64s\",\"qt9Bvtp2h9pPoB4im\",\"x9A83cZkyA7E7utn3\",\"yabtHTtycsWhcGBfD\",\"8PwfYqoDQFThzNtvf\",\"C4QntmkYtB89GNtpd\",\"aP3dk5CrAEeQkKn4k\",\"L7nzdjbYNZLLRrwmq\",\"cXp7BXyiNJzBWdvYY\",\"PqEKjCDkJtYoYuZfj\",\"XjyaCd8bviTitHTwa\",\"QH3B8zogvc7moSTHB\",\"rJGeRSCjGzRuYfHZS\",\"Jqk2uJZZxEv5wZFze\",\"DryNRN98Dj24BpgrL\",\"TePz42wc3ZZ5CKA6L\",\"rEWQdNHK6YjuBqmrR\",\"BeFnbPbMnAM2SjBdZ\",\"Xj6R2zqhgumffQCAN\",\"PXAcsKkssS2yLyDv2\",\"mxX4rH5ELYkdZ2Mbw\",\"wwz3ixWSv8rFDHBXd\",\"Yp7uvStL97cC9fKkY\",\"2innwjWqxJHo4eRGh\",\"sKngDTQT4c77dXGqW\",\"ab7BsQuhDo3QgE6bh\",\"4CFzv558qbGcpQwc4\",\"4fctAnxyFRB8stPRQ\",\"j2wcHGHmPCHbaQEye\",\"Ycj4iTJGFyvC4bXek\",\"zHdcQydaKdxckwcEo\",\"CGxLTzbLgBtGhE5An\",\"4yMggPMnAMqJN6TeR\",\"AasGs8AeX9Lcb9xJn\",\"M44nifmWzt3wtYyJx\",\"SK5NXi2SD2eEDNAF9\",\"pMg2Zddm29zRGP6wg\",\"hnyhBFWwNCz9mDfSi\",\"aRqQ42J5zqCmBNd8w\",\"LQxof8pGabGuWP7Gn\",\"N7GPFEhCaiQ79MKjz\",\"9Ly8afdtofp8DXzrt\",\"cZGJGxM65Nq6oCevW\",\"zQ7vxc2qQS47js8iY\",\"dHZqT6h4JMwk5fPC8\",\"yKttxy9JGn5Jzwuj6\",\"sz8ufn9i8zeiGWpAy\",\"axFGc8QrcLfdPgmhi\",\"jNvegJWCk5HCtEMbK\",\"vLrq4dEDMM2wd68Dc\",\"8LfTheFzvicameoz9\",\"HDksZLiRAmpnCKHta\",\"2QGRoQn2dRq3scu7k\",\"2iFe3EHEH2YdhSKrs\",\"M9DhkxE77ztbJWz6e\",\"ZNnsMeNkdDhHjSrZb\",\"So6PHm74mfJuY2WTs\",\"q5a96XumccZyhQNyL\",\"gJYuGdkXEWWmGRLzu\",\"KRSKj7ikX2ytWFmod\",\"9uZpgAtSuPZ7W7DL6\",\"aEm3Wvj2rFYRL8Lrb\",\"HF28xZKSLM9wEuqNg\",\"kYWb8BwpKwunQkxeX\",\"DEDniTrstQYGounXT\",\"Cc2Cgj4MWXZxsTooC\",\"KdNDysEsy2TW5QRJ2\",\"M8dQuMrEpP8Hc3tHN\",\"EeuZMvxeE9dzsbxc4\",\"9pzFiFK3ANLjQfnr2\",\"FS78GK2Ysu7u8ndMs\",\"NCkkSGJstQXcX2MiM\",\"qLWd2wdTMff5tX9uc\",\"CQcocSYzY8MDu8nkD\",\"eMuCpJ2spXWkJjWNz\",\"MKT7khMBGXzA22ykf\",\"FEYpu9RWysAgW3XnP\",\"DwetpbChQM4r6Gwah\",\"TR5aWdDKP6iaL6mGK\",\"uiEuENARwFpnNMfFs\",\"ahk2qiXKJA753wAJk\",\"J5T8gZqiZXFuFDTQ7\",\"XrqNzJ2FRG8HnGiR6\",\"a777e8chPvJkY3tKa\",\"4yNLEwL2rsx4EE5Nt\",\"ekQh3jzgGLsEMbKo3\",\"2ptN2mhjFwFcHyPZd\",\"NG8PWBSjsM8mMhQEq\",\"n2BRY9X8899dcG8Bw\",\"H4abACFDH5t8CnnyH\",\"3cF6NXq3ZEwdkgSjb\",\"9dgvEreRDYRiwLmYv\",\"YcCLwitFMAEJSnxAW\",\"iojEnnY9FsMfYzp6f\",\"NNE5HNRXAkmhrWgyQ\",\"qTQGbqpJsx3SRcHZq\",\"CwXsu25ygLEwQbmQC\",\"JijDKY284YP3xWcZx\",\"Pe8vWpDHRuH9nSGKW\",\"R4SjTgDnpigJYDLyL\",\"yNjkHfHESBAnCssPB\",\"iS5BrkGLzJyPK7nKt\",\"yjtdwc2AC4jA2RWtn\",\"wJosiFATmZti3nEHG\",\"oBcs8GLX2ZFLXQy8y\",\"hRiMXDZNAzyPd5tpt\",\"ta5CrWnBCRusD2WMo\",\"Q9afpRu3u8zuWuzLQ\",\"zd9FLSzsGz3evKafy\",\"Wv2vJnEj8ywNmARoF\",\"JS3hNM3XXkxPdg3yk\",\"6gS4E2C84vBYTYeDZ\",\"YA7SDhpgEtsqynvNL\",\"7K2GEb5TZRtSpyyGS\",\"RehJGBFS6CYiWdjZx\",\"p8qqFdJ3FSk5x9z3G\",\"TPhfpB5tzQWSSn67n\",\"KLmLKaJPfsYxp42p2\",\"k2Eo3wyfZZ6KxvKhN\",\"tpxMgkGSHwBjS95Ta\",\"EMJ6uvBZkie429gdg\",\"mG8HqKiAQFTdRZthG\",\"gXTAie79kiw28tx5u\",\"9CoqdidjM9KbeKnHY\",\"b5zo7s6xrqWgQnPao\",\"DYDJTyGgKFnBRLm2r\",\"DPi9QGLctq2y76KuE\",\"5HCu9Ydd86QgHDRNP\",\"8BFSTCnoe2QggN64c\",\"xJkxy8YChAPzmRGkg\",\"wRttWTM59y8m5mx7x\",\"dBzwBtRjZqB98DJeB\",\"3LiSLdtN58n46NEqg\",\"8WpvgSbQciTQWdd8T\",\"6ki4yYXmxm5hF2otC\",\"NzbRqGWspQnWMoDrF\",\"J3upzLHuEwXH7Z2hx\",\"cAP3n5NY64uoMwzRR\",\"8fZxjQfuXw5HMSRJM\",\"dYPkStFnLvAMsHSzZ\",\"29MTvBZopCWjotnc5\",\"d8qtzoLB264iP8tdY\",\"RGMbFMZXJr7DhcAJy\",\"ArpehwnmJKxAtQDyF\",\"sHjfbGQGLHE6JR6qu\",\"5XiuAqicKD4hBdu63\",\"iBsN2jda8GGPgqj3u\",\"HuNF3xTBzmatyGSTm\",\"C2AfMipCicfD58WJ9\",\"ey3CASd6Je5LEJzfB\",\"5hQnRWiKkhgKJXNMP\",\"vCxuabDxEv9YC3Szb\",\"o4ixjQGSaYqA2JoM4\",\"abCKW9EmBinFsr7KG\",\"6ciNvoAPMGrZhWYC3\",\"5S9nX4rKsnCcnv4Cz\",\"eYfPWvZwnJQkHbSTK\",\"utTuvGdmu2sBHWBhQ\",\"GGdmhAvxXhqhhibJN\",\"buX4mCQhtXCfBjeno\",\"KJCDwGkoXh8qtbbKr\",\"yod5YhKtPqw2GfG9B\",\"Ds7L5bksw2QRHjrKL\",\"axdSNLZpiCDF8RS6n\",\"qQQ4hCQpzitmHSkjS\",\"wjc4iejpErBhxWwHo\",\"srJ34BaybkQh3qRkM\",\"2EbDCCJJvCfKkbYia\",\"xn7uGNKeAwPEkP9oA\",\"XD5nmvKQchKezPXhy\",\"Wpn95NqWxncQrwNgz\",\"66a9xX73nmTEuKs9k\",\"CHvzhtXnv8HTbPQ56\",\"PC3pLs36zNzpRDSuE\",\"BrTDhPJcACL2bsrpJ\",\"AFfw7cGg83uYk2Miy\",\"EfxwqhYdapX3dMQC2\",\"PytNZK9mNiRiZxPrm\",\"AJexRBN9cYQmqvYu6\",\"c2q7mY39z5JPEMCaM\",\"AcqxyLsLSMMkBWrfK\",\"R6YxHWAiLgKwy5YvC\",\"rrSC943cCKNG48sH4\",\"2PufnQcsHsfymufX3\",\"X4rzfxGgxx6CS7Bpz\",\"bv4ycSophchSEFoK9\",\"RoGGD5cpHb4ftdLDv\",\"qzXAMXsHZGT8o5hTA\",\"JhX7jvtpwNyxcc39m\",\"pduNK68oazqQTtbLp\",\"hR7GMiqGap4CzEWSy\",\"StNu7DPyTgEStZsMY\",\"2FCRyJqwqzFTKSTgJ\",\"4TmgHkn5vqyHK3sYC\",\"qRvDC2EPb5HMjEgGX\",\"dzS6WBTMHyFEag6Fp\",\"RZssSMwJcvA6JDnDD\",\"zgoEhAyhrjnsSLPGw\",\"mw9464S5dnenqzvpm\",\"uGuS9YRXW2nj4p6zf\",\"hpT9yYe5R45poHrYR\",\"Wi4H6ayKsNDWWQCG5\",\"rCrbqMiaGPgHYTNxu\",\"5QN8R22z43SrwoHDz\"],\"total\":337,\"quality\":[5,3,5,4,4,4,5,5,5,4,4,5,5,5,4,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5]},\"flags\":0},\"subscribers\":[\"tAF9Gf6PiGogbZuWs\"],\"summary\":\"A standard-sized golf course has 18 holes. Each hole is given a par, which is the expected number of strokes (hits) that a good player would use to complete a hole. Golf also uses different terms for a player being over/under par for a particular hole:\\n\\n\\\"eagle\\\" = 2 under par (-2)\\n\\\"birdie\\\" = 1 under par (-1)\\n\\\"bogey\\\" = 1 over par (+1)\\n\\\"double-bogey\\\" = 2 over par\",\"tags\":[\"arrays\",\"conditions\",\"language_fundamentals\"],\"timestamp\":{\"$date\":1562608020149},\"title\":\"What's My Golf Score?\",\"isHidden\":false,\"quality\":4.7272727272727275,\"family\":[{\"_id\":\"eYZJpApDcuy8X76Yk\",\"language\":\"cpp\"},{\"_id\":\"NENuEMyxCoPzxwq5D\",\"language\":\"javascript\"},{\"_id\":\"wZzZ9NtugwsnQEQeM\",\"language\":\"python3\"},{\"_id\":\"BDMYwMvw7fp2RtqQj\",\"language\":\"ruby\"}]}}"]