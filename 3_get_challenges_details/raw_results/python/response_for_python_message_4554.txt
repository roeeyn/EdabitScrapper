a["{\"msg\":\"result\",\"id\":\"993\",\"result\":{\"_id\":\"3JX75W5Xvun63RH9H\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"def describe_num(n):\\n\\t\",\"difficulty\":1.5027932960893855,\"editorId\":\"PXAcsKkssS2yLyDv2\",\"familyId\":\"s3pKPBy8eGQBrf7Ce\",\"instructions\":\"Given a number `n`, return a sentence which describes the number in the following ways.\\n\\n- Always start the string with **\\\"The most\\\"**.\\n- If `n` is evenly divisible by 1, add **\\\"brilliant\\\"** to the sentence.\\n- If `n` is evenly divisble by 2, add **\\\"exciting\\\"** to the sentence.\\n- ... 3, add **\\\"fantastic\\\"** to the sentence.\\n- ... 4, add **\\\"virtuous\\\"** to the sentence.\\n- ... 5, add **\\\"heart-warming\\\"** ...\\n- ... 6, add **\\\"tear-jerking\\\"** ...\\n- ... 7, add **\\\"beautiful\\\"** ...\\n- ... 8, add **\\\"exhilarating\\\"** ...\\n- ... 9, add **\\\"emotional\\\"** ...\\n- If `n` is evenly divisible by 10, add **inspiring** to the sentence.\\n- Always end the string with **\\\"number is\\\"** `n`!\\n\\n### Examples\\n```\\ndescribe_num(13) ➞ \\\"The most brilliant number is 13!\\\"\\n# 13 is evenly divisble by 1 only\\n\\ndescribe_num(4) ➞ \\\"The most brilliant exciting virtuous number is 4!\\\"\\n# 4 is evenly divisible by 1, 2 and 4\\n\\ndescribe_num(21) ➞ \\\"The most brilliant fantastic beautiful number is 21!\\\"\\n# 21 is evenly divisible by 1, 3 and 7\\n\\ndescribe_num(60) ➞ \\\"The most brilliant exciting fantastic virtuous heart-warming tear-jerking inspiring number is 60!\\\"\\n# 60 is evenly divisible by 1, 2, 3, 4, 5, 6 and 10\\n```\\n\\n### Notes\\n- Add words to the sentence in the order going down the list.\\n- **BONUS:** Try to find the lowest number which uses all possible words in the sentence!\",\"isHidden\":false,\"lab\":\"Test.assert_equals(describe_num(13), 'The most brilliant number is 13!')\\nTest.assert_equals(describe_num(4), 'The most brilliant exciting virtuous number is 4!')\\nTest.assert_equals(describe_num(21), 'The most brilliant fantastic beautiful number is 21!')\\nTest.assert_equals(describe_num(60), 'The most brilliant exciting fantastic virtuous heart-warming tear-jerking inspiring number is 60!')\\nTest.assert_equals(describe_num(56), \\\"The most brilliant exciting virtuous beautiful exhilarating number is 56!\\\")\\nTest.assert_equals(describe_num(47), \\\"The most brilliant number is 47!\\\")\\nTest.assert_equals(describe_num(115), \\\"The most brilliant heart-warming number is 115!\\\")\\nTest.assert_equals(describe_num(300), \\\"The most brilliant exciting fantastic virtuous heart-warming tear-jerking inspiring number is 300!\\\")\\nTest.assert_equals(describe_num(201), \\\"The most brilliant fantastic number is 201!\\\")\\nTest.assert_equals(describe_num(224), \\\"The most brilliant exciting virtuous beautiful exhilarating number is 224!\\\")\\nTest.assert_equals(describe_num(42), \\\"The most brilliant exciting fantastic tear-jerking beautiful number is 42!\\\")\\nTest.assert_equals(describe_num(22), \\\"The most brilliant exciting number is 22!\\\")\\nTest.assert_equals(describe_num(23), \\\"The most brilliant number is 23!\\\")\\nTest.assert_equals(describe_num(108), \\\"The most brilliant exciting fantastic virtuous tear-jerking emotional number is 108!\\\")\\nTest.assert_equals(describe_num(58), \\\"The most brilliant exciting number is 58!\\\")\\nTest.assert_equals(describe_num(184), \\\"The most brilliant exciting virtuous exhilarating number is 184!\\\")\\nTest.assert_equals(describe_num(46), \\\"The most brilliant exciting number is 46!\\\")\\nTest.assert_equals(describe_num(43), \\\"The most brilliant number is 43!\\\")\\nTest.assert_equals(describe_num(178), \\\"The most brilliant exciting number is 178!\\\")\\nTest.assert_equals(describe_num(191), \\\"The most brilliant number is 191!\\\")\\nTest.assert_equals(describe_num(175), \\\"The most brilliant heart-warming beautiful number is 175!\\\")\\nTest.assert_equals(describe_num(264), \\\"The most brilliant exciting fantastic virtuous tear-jerking exhilarating number is 264!\\\")\\nTest.assert_equals(describe_num(130), \\\"The most brilliant exciting heart-warming inspiring number is 130!\\\")\\nTest.assert_equals(describe_num(213), \\\"The most brilliant fantastic number is 213!\\\")\\nTest.assert_equals(describe_num(25), \\\"The most brilliant heart-warming number is 25!\\\")\\nTest.assert_equals(describe_num(219), \\\"The most brilliant fantastic number is 219!\\\")\\nTest.assert_equals(describe_num(173), \\\"The most brilliant number is 173!\\\")\\nTest.assert_equals(describe_num(212), \\\"The most brilliant exciting virtuous number is 212!\\\")\\nTest.assert_equals(describe_num(116), \\\"The most brilliant exciting virtuous number is 116!\\\")\\nTest.assert_equals(describe_num(103), \\\"The most brilliant number is 103!\\\")\\nTest.assert_equals(describe_num(34), \\\"The most brilliant exciting number is 34!\\\")\\nTest.assert_equals(describe_num(89), \\\"The most brilliant number is 89!\\\")\\nTest.assert_equals(describe_num(40), \\\"The most brilliant exciting virtuous heart-warming exhilarating inspiring number is 40!\\\")\\nTest.assert_equals(describe_num(138), \\\"The most brilliant exciting fantastic tear-jerking number is 138!\\\")\\nTest.assert_equals(describe_num(153), \\\"The most brilliant fantastic emotional number is 153!\\\")\\nTest.assert_equals(describe_num(201), \\\"The most brilliant fantastic number is 201!\\\")\\nTest.assert_equals(describe_num(262), \\\"The most brilliant exciting number is 262!\\\")\\nTest.assert_equals(describe_num(232), \\\"The most brilliant exciting virtuous exhilarating number is 232!\\\")\\nTest.assert_equals(describe_num(128), \\\"The most brilliant exciting virtuous exhilarating number is 128!\\\")\\nTest.assert_equals(describe_num(129), \\\"The most brilliant fantastic number is 129!\\\")\\nTest.assert_equals(describe_num(264), \\\"The most brilliant exciting fantastic virtuous tear-jerking exhilarating number is 264!\\\")\\nTest.assert_equals(describe_num(24), \\\"The most brilliant exciting fantastic virtuous tear-jerking exhilarating number is 24!\\\")\\nTest.assert_equals(describe_num(124), \\\"The most brilliant exciting virtuous number is 124!\\\")\\nTest.assert_equals(describe_num(163), \\\"The most brilliant number is 163!\\\")\\nTest.assert_equals(describe_num(80), \\\"The most brilliant exciting virtuous heart-warming exhilarating inspiring number is 80!\\\")\\nTest.assert_equals(describe_num(130), \\\"The most brilliant exciting heart-warming inspiring number is 130!\\\")\\nTest.assert_equals(describe_num(46), \\\"The most brilliant exciting number is 46!\\\")\\nTest.assert_equals(describe_num(247), \\\"The most brilliant number is 247!\\\")\\nTest.assert_equals(describe_num(89), \\\"The most brilliant number is 89!\\\")\\nTest.assert_equals(describe_num(127), \\\"The most brilliant number is 127!\\\")\\nTest.assert_equals(describe_num(169), \\\"The most brilliant number is 169!\\\")\\nTest.assert_equals(describe_num(195), \\\"The most brilliant fantastic heart-warming number is 195!\\\")\\nTest.assert_equals(describe_num(192), \\\"The most brilliant exciting fantastic virtuous tear-jerking exhilarating number is 192!\\\")\\nTest.assert_equals(describe_num(146), \\\"The most brilliant exciting number is 146!\\\")\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,2,0,0,2,2,1,0,1,2,2,2,2,2,2,2,2,1,0,2,1,1,2,1,2,2,1,0,1,2,1,1,3,2,1,0,2,1,2,1,1,1,0,3,2,1,2,1,1,1,2,2,1,5,0,0,2,2,2,2,1,2,0,1,1,1,2,0,0,1,2,0,1,3,2,2,2,2,1,2,2,1,2,2,1,1,1,2,2,2,2,1,2,0,3,0,0,2,2,2,2,2,1,1,0,2,3,1,2,1,0,2,2,2,2,2,2,1,1,2,2,2,2,2,3,2,1,1,2,2,0,1,2,1,1,1,2,2,2,3,1,2,0,2,2,1,2,3,2,1,1,1,0,2,2,2,0,2,2,1,2,2,2,2,2,0,2,2,2,0,1,2,2,1],\"rators\":[\"tAF9Gf6PiGogbZuWs\",\"K96FwtfDDN5WM4Bb7\",\"Jqk2uJZZxEv5wZFze\",\"gb9rvGus2Jv7bjZSs\",\"2innwjWqxJHo4eRGh\",\"u5u2YpHXiNgzDNJdX\",\"8JyqsSbN2FJXPr3cw\",\"ab7BsQuhDo3QgE6bh\",\"N2wnZXkhDH86mgjQ8\",\"4CFzv558qbGcpQwc4\",\"2fxapKr8XGdNeaKi2\",\"HQxp7NcdvF92G7bYS\",\"BeFnbPbMnAM2SjBdZ\",\"Yp7uvStL97cC9fKkY\",\"C4QntmkYtB89GNtpd\",\"myXAR5qDJsBaPnff2\",\"AasGs8AeX9Lcb9xJn\",\"s5M5RvgqR9BhB9JoC\",\"mxX4rH5ELYkdZ2Mbw\",\"yabtHTtycsWhcGBfD\",\"JYbyC7EiD3PuwuxEv\",\"v3fjGuc7Pq4yjFygS\",\"Ycj4iTJGFyvC4bXek\",\"jeuoearPPTcGPgXhf\",\"pMg2Zddm29zRGP6wg\",\"hnyhBFWwNCz9mDfSi\",\"4tgBydK887PitgAoi\",\"brpsfPhwmfgbGgQSx\",\"N7GPFEhCaiQ79MKjz\",\"9Ly8afdtofp8DXzrt\",\"cR3ibTMxLyEdDFCHY\",\"aRqQ42J5zqCmBNd8w\",\"sz8ufn9i8zeiGWpAy\",\"vLrq4dEDMM2wd68Dc\",\"aEm3Wvj2rFYRL8Lrb\",\"2QGRoQn2dRq3scu7k\",\"So6PHm74mfJuY2WTs\",\"jNvegJWCk5HCtEMbK\",\"8PwfYqoDQFThzNtvf\",\"ZNnsMeNkdDhHjSrZb\",\"2iFe3EHEH2YdhSKrs\",\"HF28xZKSLM9wEuqNg\",\"9uZpgAtSuPZ7W7DL6\",\"eLkj3Zb2DqiW4AEEh\",\"gJYuGdkXEWWmGRLzu\",\"KRSKj7ikX2ytWFmod\",\"CEd9tLdXeDeNHSzys\",\"fQPySkv8H8YEyNBqT\",\"kYWb8BwpKwunQkxeX\",\"M8dQuMrEpP8Hc3tHN\",\"DEDniTrstQYGounXT\",\"Cc2Cgj4MWXZxsTooC\",\"9pzFiFK3ANLjQfnr2\",\"J5T8gZqiZXFuFDTQ7\",\"5cmvoGYHLNmT8n6jP\",\"YsAz93yZw8KKPupKv\",\"DwetpbChQM4r6Gwah\",\"MKT7khMBGXzA22ykf\",\"QDrLtnBsA2LJfptvT\",\"FzxTj4GuujhwpZM7y\",\"nfXGHENb5md7m355s\",\"FEYpu9RWysAgW3XnP\",\"ahk2qiXKJA753wAJk\",\"j57Xos8wYZWcwqMrt\",\"XrqNzJ2FRG8HnGiR6\",\"WHR8EHPPEpghNnpXt\",\"s2ZMtR9deh6Kia7pb\",\"aPLuemxzZ5iS57NBQ\",\"dKKMvaYoJunNPk5Wa\",\"E8TMSMSamEbBtf9Lo\",\"a777e8chPvJkY3tKa\",\"bCDTKAoS4biDmQ64Y\",\"RDAijeuBkgHgZfPrG\",\"ekQh3jzgGLsEMbKo3\",\"zd9FLSzsGz3evKafy\",\"4yNLEwL2rsx4EE5Nt\",\"djeesDJQwNJay4RTe\",\"n2BRY9X8899dcG8Bw\",\"zAsNgFHdyiHeiHB8C\",\"2ptN2mhjFwFcHyPZd\",\"sbJcFfQjQ59Wfg4Cd\",\"3cF6NXq3ZEwdkgSjb\",\"7txFzDQ43vJ7qCY88\",\"H4abACFDH5t8CnnyH\",\"iQx6PmRfjXYBq27Y4\",\"syRNbbPdLCGXbH2Gy\",\"NNE5HNRXAkmhrWgyQ\",\"DoDsp3ets8frF9W3C\",\"YcCLwitFMAEJSnxAW\",\"CwXsu25ygLEwQbmQC\",\"iojEnnY9FsMfYzp6f\",\"Pe8vWpDHRuH9nSGKW\",\"R4SjTgDnpigJYDLyL\",\"yjtdwc2AC4jA2RWtn\",\"ka3mNZM8TnYDyqMEn\",\"PhceyfmFntJcn5Fhf\",\"HqmxnQJM66Y57twhn\",\"oBcs8GLX2ZFLXQy8y\",\"yAouD3PxzED8a4gap\",\"ta5CrWnBCRusD2WMo\",\"YA7SDhpgEtsqynvNL\",\"6gS4E2C84vBYTYeDZ\",\"sX9GZp3fYyQLrBKMJ\",\"nBpKXTKkBEJQPNS9x\",\"5L4LW4BWiYGAqbM4c\",\"TPhfpB5tzQWSSn67n\",\"w2HhxvSLmDhaGCAjE\",\"RehJGBFS6CYiWdjZx\",\"EMJ6uvBZkie429gdg\",\"s3p7iygyPJvsCaWSR\",\"u7i7WPM63n42r8R8o\",\"p8qqFdJ3FSk5x9z3G\",\"E4KGguXaWuR4bd2n7\",\"KLmLKaJPfsYxp42p2\",\"ji5f27FPz4wRRF6Ls\",\"b5oEvBqHWLRnJgp22\",\"FvFhg2wELM3SCZDZQ\",\"k2Eo3wyfZZ6KxvKhN\",\"9CoqdidjM9KbeKnHY\",\"tpxMgkGSHwBjS95Ta\",\"7K2GEb5TZRtSpyyGS\",\"mG8HqKiAQFTdRZthG\",\"dfAhBDprqHtbX5sn3\",\"gXTAie79kiw28tx5u\",\"skG34HkAFoQiHk7gg\",\"QRv96jmNaYsWkxQEG\",\"kXEfD7xxEyWd7oxxL\",\"Kh3Pc2ZRusurLaMyP\",\"DPi9QGLctq2y76KuE\",\"8WpvgSbQciTQWdd8T\",\"5HCu9Ydd86QgHDRNP\",\"wRttWTM59y8m5mx7x\",\"dBzwBtRjZqB98DJeB\",\"J3upzLHuEwXH7Z2hx\",\"dj5AyG5fWP8FdsSmZ\",\"8fZxjQfuXw5HMSRJM\",\"cAP3n5NY64uoMwzRR\",\"9bQyb6rW7xfE4vgrR\",\"dYPkStFnLvAMsHSzZ\",\"d8qtzoLB264iP8tdY\",\"RGMbFMZXJr7DhcAJy\",\"5XiuAqicKD4hBdu63\",\"dxBXbyMzwkWXN84yy\",\"KJCDwGkoXh8qtbbKr\",\"5hQnRWiKkhgKJXNMP\",\"sHjfbGQGLHE6JR6qu\",\"7wifKGhuAuiBMpqkn\",\"NzbRqGWspQnWMoDrF\",\"HuNF3xTBzmatyGSTm\",\"C2AfMipCicfD58WJ9\",\"tEymgSzQSfcoYh9Hg\",\"Ba7nXvxBcNaWdKb2Y\",\"2H7qphwdz7PPoFKgc\",\"74TSFjstD2L2Yf53W\",\"fqhWijqQEhnu39WwQ\",\"buX4mCQhtXCfBjeno\",\"eYfPWvZwnJQkHbSTK\",\"yh5MwZbc8z28fyeay\",\"5S9nX4rKsnCcnv4Cz\",\"o4ixjQGSaYqA2JoM4\",\"GGdmhAvxXhqhhibJN\",\"cZccqzRQ9GgjQF6Az\",\"Ds7L5bksw2QRHjrKL\",\"gjiu8kLnHYxe4HoBN\",\"5MkRziCvQYQzqrxMY\",\"KvgSTGubMir4Svqmw\",\"T6iBEE2jp7f7iEF2P\",\"66a9xX73nmTEuKs9k\",\"GTKsdeEihE636Le9i\",\"AFfw7cGg83uYk2Miy\",\"yod5YhKtPqw2GfG9B\",\"JhX7jvtpwNyxcc39m\",\"PC3pLs36zNzpRDSuE\",\"CGAknSQ8ZBJtLoRaC\",\"ojCChKDFJqHJc5pcK\",\"Yu4cekeDL2jM2WzSw\",\"mJEdL8CeveRMQtLX2\",\"CHvzhtXnv8HTbPQ56\",\"mvJBakQ35CWAnbbEZ\",\"c2q7mY39z5JPEMCaM\",\"ey3CASd6Je5LEJzfB\",\"rrSC943cCKNG48sH4\",\"AJexRBN9cYQmqvYu6\",\"BrTDhPJcACL2bsrpJ\",\"8BFSTCnoe2QggN64c\",\"qzXAMXsHZGT8o5hTA\",\"2PufnQcsHsfymufX3\",\"RoGGD5cpHb4ftdLDv\",\"Afnps7TJQuS9sipMb\",\"XD5nmvKQchKezPXhy\",\"pduNK68oazqQTtbLp\",\"4Lwjr34ypKNQNQCar\",\"4TmgHkn5vqyHK3sYC\",\"T6Rm8mREPMZSftzrC\",\"dzS6WBTMHyFEag6Fp\",\"d9LBRxvADNBB5QJMB\",\"Z7SASxty4CGrnH5oF\",\"wjc4iejpErBhxWwHo\",\"Fgy6rDpb6rzJcng5W\",\"oG6ogzo5692C8eFay\",\"FGEeCTorXbX3WvjFW\",\"Wi4H6ayKsNDWWQCG5\",\"uGuS9YRXW2nj4p6zf\"],\"total\":219,\"quality\":[5,4,5,2,4,5,5,5,5,5,5,5,5,5,4,5,5,4,5,4,5,5,5,5,5,5,1,5,5]},\"flags\":0},\"summary\":\"Given a number n, return a sentence which describes the number in the following ways.\\n\\nAlways start the string with \\\"The most\\\".\\nIf n is evenly divisible by 1, add \\\"brilliant\\\" to the sentence.\\nIf n is evenly divisble by 2, add \\\"exciting\\\" to the sentence.\\n... 3, add \\\"fantastic\\\" to the sentence.\\n... 4, add \\\"virtuous\\\" to the sentence.\\n... 5, add \\\"heart-warming\\\" ..\",\"tags\":[\"control_flow\",\"numbers\",\"strings\",\"math\"],\"timestamp\":{\"$date\":1579804412784},\"title\":\"The Most Brilliant Exciting Fantastic Number\",\"quality\":4.586206896551724,\"family\":[{\"_id\":\"3RpFmycmCMgZcXaoQ\",\"language\":\"cpp\"},{\"_id\":\"B4SRZm9TLgeYrgPtT\",\"language\":\"javascript\"},{\"_id\":\"3JX75W5Xvun63RH9H\",\"language\":\"python3\"},{\"_id\":\"4BQaPRh9vyLD6j5xY\",\"language\":\"ruby\"}]}}"]