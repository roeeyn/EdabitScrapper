a["{\"msg\":\"result\",\"id\":\"1551\",\"result\":{\"_id\":\"ZsCu4cAeZ2b9n59AH\",\"author\":\"Arthur Yamato\",\"authorId\":\"C8D598rzLvDzHosq6\",\"code\":\"def lost_dog():\\n\\t\",\"difficulty\":2.090909090909091,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"2a9oom8NQykjhs7L5\",\"instructions\":\"- `0` represents the dog.\\n- Each list represents a house and each `1` represents an empty room.\\n- Return the house and the room where it is located, there can be only one dog lost per building.\\n\\n### Examples\\n```\\nlost_dog([1, 1, 1, 1, 1, 1],  [1, 1, 1, 1, 1, 1],  [1, 1, 1, 1, 1, 1],  [1, 1, 1, 1, 1, 1])\\n➞ \\\"Dog not found!\\\"\\n\\nlost_dog([1, 1, 1, 1, 1, 1],  [0, 1, 1, 1, 1, 1],  [1, 0, 1, 1, 1, 1],  [1, 1, 1, 1, 1, 1])\\n➞ {\\\"Dog1\\\": \\\"House (2) and Room (1)\\\", \\\"Dog2\\\": \\\"House (3) and Room (2)\\\"}\\n\\nlost_dog([1, 1, 1, 1, 1, 0],  [0, 1, 1, 1, 1, 1],  [1, 0, 1, 1, 1, 1],  [1, 1, 0, 1, 1, 1])\\n➞ {\\\"Dog1\\\": \\\"House (1) and Room (6)\\\", \\\"Dog2\\\": \\\"House (2) and Room (1)\\\", \\\"Dog3\\\": \\\"House (3) and Room (2)\\\", \\\"Dog4\\\": \\\"House (4) and Room (3)\\\"}\\n```\\n\\n### Notes\\nCheck the **Resources** if you're stuck.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(lost_dog([1,1,1,1,1,0], [0,1,1,1,1,1], [1,0,1,1,1,1], [1,1,0,1,1,1]), {'Dog1': 'House (1) and Room (6)', 'Dog2': 'House (2) and Room (1)', 'Dog3': 'House (3) and Room (2)', 'Dog4': 'House (4) and Room (3)'})\\nTest.assert_equals(lost_dog([1,1,0,1,1,1], [1,1,1,1,1,1], [1,1,1,1,1,1], [1,1,0,1,1,1]), {'Dog1': 'House (1) and Room (3)', 'Dog2': 'House (4) and Room (3)'})\\nTest.assert_equals(lost_dog([1,1,0,1,1,1], [1,1,1,1,1,1], [1,1,1,1,1,1], [1,1,1,1,1,1]), {'Dog1': 'House (1) and Room (3)'})\\nTest.assert_equals(lost_dog([1,1,1,1,1,1], [0,1,1,1,1,1], [0,1,1,1,1,1], [1,1,1,1,1,1]),{'Dog1': 'House (2) and Room (1)', 'Dog2': 'House (3) and Room (1)'})\\nTest.assert_equals(lost_dog([1,1,1,1,1,1], [1,1,1,1,1,1], [1,1,1,1,1,1], [1,1,1,1,1,1]), 'Dog not found!')\\nTest.assert_equals(lost_dog([1,1,1,1,1,1], [1,1,1,1,1,1], [1,1,1,1,1,1], [1,1,1,0,1,1]), {'Dog1': 'House (4) and Room (4)'})\",\"language\":\"python3\",\"quality\":4.857142857142857,\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,3,3,3,2,2,1,2,2,1,2,3,2,4,1,2,2,3,1,0,1,3,0,1,2,2,3,2,2,2,0,1,2,3,5,2,3,4,3,5,1,3,0,1,3,3,2,3,2,2,0,3,3,0,2,3,2,2,2,1,3,2],\"quality\":[4,5,5,4,5,5,5,5,5,5,5,5,5,5],\"rators\":[\"iS5BrkGLzJyPK7nKt\",\"iojEnnY9FsMfYzp6f\",\"8PwfYqoDQFThzNtvf\",\"s5M5RvgqR9BhB9JoC\",\"p8qqFdJ3FSk5x9z3G\",\"QRv96jmNaYsWkxQEG\",\"gb9rvGus2Jv7bjZSs\",\"gXTAie79kiw28tx5u\",\"55RQznnuTGpsj3EXd\",\"8JyqsSbN2FJXPr3cw\",\"hnyhBFWwNCz9mDfSi\",\"cR3ibTMxLyEdDFCHY\",\"gJYuGdkXEWWmGRLzu\",\"yjtdwc2AC4jA2RWtn\",\"oBcs8GLX2ZFLXQy8y\",\"Yp7uvStL97cC9fKkY\",\"J3upzLHuEwXH7Z2hx\",\"BdnE4RS5puoxo92mA\",\"T6iBEE2jp7f7iEF2P\",\"FEYpu9RWysAgW3XnP\",\"Wpn95NqWxncQrwNgz\",\"3LiSLdtN58n46NEqg\",\"8nE8QHnFYsHCFebte\",\"2PufnQcsHsfymufX3\",\"K6MfKMytoJJuSGewP\",\"AQSqD9oNv2uPfxZCR\",\"fznzd3qnvtbFkkizz\",\"zd9FLSzsGz3evKafy\",\"XHShZ3WMPgGEA2vkR\",\"YcCLwitFMAEJSnxAW\",\"nc7bRhkxgKyqusYe3\",\"ey3CASd6Je5LEJzfB\",\"hsrNYf3WbexXJKhCq\",\"PXAcsKkssS2yLyDv2\",\"4Lwjr34ypKNQNQCar\",\"wLDZW9Gv28radJb7Q\",\"GGdmhAvxXhqhhibJN\",\"dHkXWFAxJFD2QfvwY\",\"4AHkJM6aaf3xAWPtP\",\"X4rzfxGgxx6CS7Bpz\",\"MKT7khMBGXzA22ykf\",\"PC3pLs36zNzpRDSuE\",\"Z2PunTyHYZbeNAJm2\",\"5rEiiwNW8YGxvWuH5\",\"zoDHPoPn9mhXpmka7\",\"bvmTE46bfcM4ogj34\",\"xn7uGNKeAwPEkP9oA\",\"fSQSHjW3e72MrWxbD\",\"LQxof8pGabGuWP7Gn\",\"NfMJuiBk6FN5Jc6ow\",\"CHvzhtXnv8HTbPQ56\",\"AasGs8AeX9Lcb9xJn\",\"J5T8gZqiZXFuFDTQ7\",\"qD2LrwaDrSdiybLKY\",\"DEDniTrstQYGounXT\",\"HqmxnQJM66Y57twhn\",\"PWgzeK859suojbrRx\",\"tAF9Gf6PiGogbZuWs\",\"DPi9QGLctq2y76KuE\",\"fbr22rabEJMfBp7vD\",\"8FDiWnaKCtbd2qDEK\",\"StNu7DPyTgEStZsMY\",\"Jqk2uJZZxEv5wZFze\",\"gKnWjDjwrJh7MK2df\",\"kBNCPDJxWtLYE3pp5\",\"nQRzZKeDKuLRf9chX\",\"QvEXmSEo3ANp3yPyH\",\"o4ixjQGSaYqA2JoM4\",\"buX4mCQhtXCfBjeno\",\"yod5YhKtPqw2GfG9B\",\"nkH3HfJXLMNcBMM79\",\"eHcgvkTGsH7ZziqBo\",\"8sNv5PTHa7XQ8bNqR\",\"Ds7L5bksw2QRHjrKL\",\"aEm3Wvj2rFYRL8Lrb\"],\"total\":80},\"flags\":2},\"summary\":\"0 represents the dog.\\nEach list represents a house and each 1 represents an empty room.\\nReturn the house and the room where it is located, there can be only one dog lost per building.\\n\\nExamples\\nlost_dog([1, 1, 1, 1, 1, 1],  [1, 1, 1, 1, 1, 1],  [1, 1, 1, 1, 1, 1],  [1, 1, 1, 1, 1, 1])\\n➞ \\\"Dog not found!\\\"\\n\\nlost_dog([1, 1, 1, 1, 1, 1],  [0, 1, 1, 1, 1, 1],  [1, 0\",\"tags\":[\"loops\",\"math\",\"language_fundamentals\",\"logic\",\"arrays\"],\"timestamp\":{\"$date\":1615534852166},\"title\":\"Find the Lost Dog\",\"family\":[{\"_id\":\"3zx9SHGic8mpoMhQs\",\"language\":\"javascript\"},{\"_id\":\"ZsCu4cAeZ2b9n59AH\",\"language\":\"python3\"},{\"_id\":\"L9d9RGJ6x7MakGvJp\",\"language\":\"ruby\"}]}}"]