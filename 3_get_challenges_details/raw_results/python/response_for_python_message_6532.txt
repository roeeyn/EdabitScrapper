a["{\"msg\":\"result\",\"id\":\"1975\",\"result\":{\"_id\":\"z9tnydD5Fix3g3mas\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def check_pattern(lst, pattern):\\n\\t\",\"difficulty\":2.753086419753086,\"familyId\":\"s9ZvpN2B9EgiiATTo\",\"instructions\":\"Create a function that checks if the sub-lists in a list adhere to the specified pattern.\\n\\n### Examples\\n```\\ncheck_pattern([[1, 1], [2, 2], [1, 1], [2, 2]], \\\"ABAB\\\") ➞ True\\n\\ncheck_pattern([[1, 2], [1, 3], [1, 4], [1, 2]], \\\"ABCA\\\") ➞ True\\n\\ncheck_pattern([[1, 2, 3], [1, 2, 3], [3, 2, 1], [3, 2, 1]], \\\"AABB\\\") ➞ True\\n\\ncheck_pattern([[8, 8, 8, 8], [7, 7, 7, 7], [6, 6, 6, 6], [5, 5, 5, 5]], \\\"ABCD\\\") ➞ True\\n\\ncheck_pattern([[8, 8, 8, 8], [7, 7, 7, 7], [6, 6, 6, 6], [5, 5, 5, 5]], \\\"DCBA\\\") ➞ True\\n```\\n\\n### Notes\\n- The length of the pattern will always be the same as the length of the (main) list.\\n- The pattern does not necessarily have to be alphabetically ordered (see last example).\",\"lab\":\"Test.assert_equals(check_pattern([[1, 1], [2, 2], [1, 1], [2, 2]], \\\"ABAB\\\"), True)\\nTest.assert_equals(check_pattern([[1, 2], [1, 2], [1, 2], [1, 2]], \\\"AAAA\\\"), True)\\nTest.assert_equals(check_pattern([[1, 2], [1, 3], [1, 4], [1, 2]], \\\"ABCA\\\"), True)\\nTest.assert_equals(check_pattern([[1, 2, 3], [1, 2, 3], [3, 2, 1], [3, 2, 1]], \\\"AABB\\\"), True)\\nTest.assert_equals(check_pattern([[8, 8, 8, 8], [7, 7, 7, 7], [6, 6, 6, 6], [5, 5, 5, 5]], \\\"ABCD\\\"), True)\\nTest.assert_equals(check_pattern([[8, 8, 8, 8], [7, 7, 7, 7], [6, 6, 6, 6], [5, 5, 5, 5]], \\\"DCBA\\\"), True)\\nTest.assert_equals(check_pattern([[8], [7], [6], [6]], \\\"ABCC\\\"), True)\\nTest.assert_equals(check_pattern([[8], [9], [9], [9]], \\\"ABBB\\\"), True)\\nTest.assert_equals(check_pattern([[1, 1], [2, 2], [1, 1], [1, 2]], \\\"ABAB\\\"), False)\\nTest.assert_equals(check_pattern([[1, 2], [1, 2], [2, 2], [3, 2]], \\\"AAAA\\\"), False)\\nTest.assert_equals(check_pattern([[8], [9], [9], [8]], \\\"ABBB\\\"), False)\\nTest.assert_equals(check_pattern([[8], [7], [6], [5]], \\\"ABCC\\\"), False)\\nTest.assert_equals(check_pattern([[8, 8, 8, 8], [7, 7, 7, 7], [6, 6, 6, 6], [5, 5, 5, 5]], \\\"DDBA\\\"), False)\\nTest.assert_equals(check_pattern([[1, 2], [1, 2], [1, 2], [1, 2]], \\\"AABA\\\"), False)\",\"language\":\"python3\",\"summary\":\"Create a function that checks if the sub-lists in a list adhere to the specified pattern.\\n\\nExamples\\ncheck_pattern([[1, 1], [2, 2], [1, 1], [2, 2]], \\\"ABAB\\\") ➞ True\\n\\ncheck_pattern([[1, 2], [1, 3], [1, 4], [1, 2]], \\\"ABCA\\\") ➞ True\\n\\ncheck_pattern([[1, 2, 3], [1, 2, 3], [3, 2, 1], [3, 2, 1]], \\\"AABB\\\") ➞ True\\n\\ncheck_pattern([[8, 8, 8, 8], [7, 7, 7, 7], [6, 6, 6, 6], [\",\"tags\":[\"arrays\",\"functional_programming\"],\"timestamp\":{\"$date\":1553570960896},\"title\":\"Fit the Pattern\",\"stats\":{\"completed\":{\"total\":79,\"ratings\":[4,4,4,4,4,4,4,4,4,4,3,1,3,2,3,3,1,3,4,3,2,3,3,0,3,1,5,2,1,2,3,1,4,3,4,3,2,3,4,2,3,2,2,2,3,3,3,3,3,2,4,4,2,4,0,5,2,4,3,0,4,3,1,2,4,3,4,4,2,3,2,3,0,4,2,0,2,3,3,3,0],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"yZvzB3qFb8pkHy4dg\",\"AYaEkTWLMmfzpwejr\",\"HfMvisxLQgvgFG9nJ\",\"gghyGRFrEu3ha49Kz\",\"8JyqsSbN2FJXPr3cw\",\"tAF9Gf6PiGogbZuWs\",\"T3ZAuoMrJjvZwN55B\",\"gb9rvGus2Jv7bjZSs\",\"B9kgBbvFEFSMvb6ir\",\"6W2GSzrYjMD9ANBFY\",\"aW2AfRdBxWt3K9AaH\",\"nrA8Pacm3A6GqGzq4\",\"ab7BsQuhDo3QgE6bh\",\"WHSnBonknsgyuJsFE\",\"MXjxGML2X75x64vJo\",\"8XkaLLpmbnqwB7ZTp\",\"QaE2QnnBbzdiExxPH\",\"6fJpRpAgiWD5zX9qB\",\"7g3vZaQXhLpxrajyg\",\"PFjMZGHNAPTkgd7tq\",\"BFNm9gacwba9KyLFW\",\"h47zE2JaXAZBwxR9d\",\"3ifAHQzsMasfQySoL\",\"PuJDHtAaX6vXeJJTC\",\"HqmxnQJM66Y57twhn\",\"5Fyk8T52QMfxPNqAg\",\"s5M5RvgqR9BhB9JoC\",\"KkQLhG5bps9BKQdx2\",\"8PwfYqoDQFThzNtvf\",\"SgZ2t9xFuRqdJGofp\",\"aEm3Wvj2rFYRL8Lrb\",\"9zBQ4k7pWXa8Jfro4\",\"AasGs8AeX9Lcb9xJn\",\"YRstQuthRkFeBiXug\",\"55RQznnuTGpsj3EXd\",\"uw8E83imJYpQiiPpP\",\"4BHrt3NoCQECjvFJC\",\"zT9LpkiwYjLviYYW6\",\"mDWNyaaQ9hvPCRzSd\",\"PT5pu7kJsgp9TDNGv\",\"3pxHTZBsv7MKzFG6Y\",\"S6Zd8mPuvhuh3MFRt\",\"ZNnsMeNkdDhHjSrZb\",\"gJYuGdkXEWWmGRLzu\",\"W5TajitmCyxz87zAC\",\"aCNWav8S8Try9RkC6\",\"Ecg4m7srYGgZsb4Ck\",\"f2BoqyCpgnmjEjLqx\",\"x4dfavjLEcrvAF3QQ\",\"hRiMXDZNAzyPd5tpt\",\"xn7uGNKeAwPEkP9oA\",\"5ohxTv2E3rc3LS7RQ\",\"HF28xZKSLM9wEuqNg\",\"8sNv5PTHa7XQ8bNqR\",\"yTtSCvGPyYna6JuRC\",\"iS5BrkGLzJyPK7nKt\",\"DPi9QGLctq2y76KuE\",\"p8qqFdJ3FSk5x9z3G\",\"J3upzLHuEwXH7Z2hx\",\"iojEnnY9FsMfYzp6f\",\"2xDMocxpbAeWeg6pP\",\"yjtdwc2AC4jA2RWtn\",\"PH32cNxBjrK4a28sn\",\"LQxof8pGabGuWP7Gn\",\"v74fPhegePGxCm2uk\",\"gKnWjDjwrJh7MK2df\",\"2PufnQcsHsfymufX3\",\"gXTAie79kiw28tx5u\",\"T6iBEE2jp7f7iEF2P\",\"GTKsdeEihE636Le9i\",\"aFYzioHvZPvPaunsg\",\"buX4mCQhtXCfBjeno\",\"umANkTMkrv4KpWH9t\",\"n2qKKxomPnb4zez5M\"],\"quality\":[5,3,5]},\"tests\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":-6.1,\"rators\":[\"mNMQvcxKSSvqqMYCH\"],\"voters\":[\"bcchjLba9b5wTpnW7\",\"RT2F5THkSKcdmPgBb\"]},\"flags\":0},\"isHidden\":false,\"quality\":4.333333333333333,\"family\":[{\"_id\":\"dXjES9gNN3RXgokRq\",\"language\":\"cpp\"},{\"_id\":\"oXWwHkutPD5Aer6Db\",\"language\":\"javascript\"},{\"_id\":\"z9tnydD5Fix3g3mas\",\"language\":\"python3\"},{\"_id\":\"cyqywEWWmJkkWDdwC\",\"language\":\"ruby\"}]}}"]