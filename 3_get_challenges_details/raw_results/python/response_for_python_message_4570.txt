a["{\"msg\":\"result\",\"id\":\"1001\",\"result\":{\"_id\":\"928sxbEt8gyZ5uBBt\",\"archived\":false,\"author\":\"kochug\",\"authorId\":\"vQEmjTRgmdGNYB7yk\",\"code\":\"def wurst_is_better(txt):\\n\\t\",\"difficulty\":1.5087209302325582,\"familyId\":\"j3JXuG4rRgF5PXaHf\",\"instructions\":\"Wurst is the best. Create a function that takes a string and replaces every mention of any type of sausage with the German word \\\"Wurst,\\\" unless—of course—the sausage is already a type of German \\\"Wurst\\\" (i.e. \\\"Bratwurst\\\", see below), then leave the sausage name unchanged.\\n\\nGerman Wursts   | Convert to Wurst\\n--- | ---\\nBratwurst | Kielbasa\\nKochwurst | Chorizo\\nLeberwurst | Moronga\\nMettwurst | Salami\\nRostbratwurst | Sausage\\n~ | Andouille\\n~ | Naem\\n~ | Merguez\\n~ | Gurka\\n~ | Snorkers\\n~ | Pepperoni\\n\\n### Rules\\n- Append sausages from the \\\"Convert to Wurst\\\" column with \\\"wurst\\\".\\n- Do not replace any German sausage with the word \\\"Wurst\\\".\\n- The word \\\"Wurst\\\" must be title case.\\n\\n### Examples\\n```\\nwurst_is_better(\\\"I like chorizos, but not sausages\\\") ➞ \\\"I like Wursts, but not Wursts\\\"\\n\\nwurst_is_better(\\\"sich die Wurst vom Brot nehmen lassen\\\") ➞ \\\"sich die Wurst vom Brot nehmen lassen\\\"\\n\\nwurst_is_better(\\\"Bratwurst and Rostbratwurst are sausages\\\") ➞ \\\"Bratwurst and Rostbratwurst are Wursts\\\"\\n```\\n\\n### Notes\\nAll German sausage names contain the word \\\"wurst\\\".\",\"lab\":\"Test.assert_equals(wurst_is_better(\\\"Sausage fests are like salami fests\\\"), \\\"Wurst fests are like Wurst fests\\\")\\nTest.assert_equals(wurst_is_better(\\\"Add the kielbasa and the reserved potatoes and stir through\\\"), \\\"Add the Wurst and the reserved potatoes and stir through\\\")\\nTest.assert_equals(wurst_is_better(\\\"Salami sandwiches, salami and cheese, salami on crackers - I couldn't get enough of the salty, spicy sausage\\\"), \\\"Wurst sandwiches, Wurst and cheese, Wurst on crackers - I couldn't get enough of the salty, spicy Wurst\\\")\\nTest.assert_equals(wurst_is_better(\\\"sich die Wurst vom Brot nehmen lassen\\\"), \\\"sich die Wurst vom Brot nehmen lassen\\\")\\nTest.assert_equals(wurst_is_better(\\\"Bratwurst and Rostbratwurst is a sausage made from finely minced pork and beef and usually grilled and served with sweet German mustard and a piece of bread or hard roll. It can be sliced and made into Currywurst by slathering it in a catchup-curry sauce.\\\"), \\\"Bratwurst and Rostbratwurst is a Wurst made from finely minced pork and beef and usually grilled and served with sweet German mustard and a piece of bread or hard roll. It can be sliced and made into Currywurst by slathering it in a catchup-curry sauce.\\\")\\nTest.assert_equals(wurst_is_better(\\\"Naem is a common way of preserving pork meat in several Southeast Asian countries, including Thailand, Laos, Cambodia and Vietnam\\\"), \\\"Wurst is a common way of preserving pork meat in several Southeast Asian countries, including Thailand, Laos, Cambodia and Vietnam\\\")\\nTest.assert_equals(wurst_is_better(\\\"The chipper group over at Orangatang recently dropped another wheel sensation; the Moronga\\\"), \\\"The chipper group over at Orangatang recently dropped another wheel sensation; the Wurst\\\")\",\"language\":\"python3\",\"summary\":\"Wurst is the best. Create a function that takes a string and replaces every mention of any type of sausage with the German word \\\"Wurst,\\\" unless—of course—the sausage is already a type of German \\\"Wurst\\\" (i.e. \\\"Bratwurst\\\", see below), then leave the sausage name unchanged.\\n\\nGerman Wursts   | Convert to Wurst\\n--- | ---\\nBratwurst | Kielbasa\\nKochwurst | Chorizo\\nLeb\",\"tags\":[\"regex\",\"strings\"],\"timestamp\":{\"$date\":1524288059957},\"title\":\"Wurst Is Better\",\"stats\":{\"completed\":{\"total\":377,\"ratings\":[1,1,1,1,1,0,1,1,3,1,2,1,2,0,0,1,2,2,1,0,1,1,2,1,2,1,1,2,1,1,2,2,1,1,2,1,0,1,2,1,1,1,2,2,1,2,0,1,2,2,1,1,2,1,2,2,1,1,1,2,2,2,1,1,2,0,2,1,2,1,1,2,0,0,1,3,1,2,2,1,2,1,1,2,1,3,1,2,1,0,2,2,1,1,2,1,1,1,2,2,2,1,2,1,1,1,2,1,3,2,1,2,0,1,2,2,2,1,2,1,2,1,2,0,2,2,2,1,2,2,2,2,2,5,2,3,1,2,1,2,1,2,1,1,1,1,1,1,2,1,0,1,1,1,2,1,1,2,1,1,1,2,3,1,1,2,2,2,2,0,1,4,3,2,2,2,0,3,0,1,2,2,1,0,1,1,1,1,2,1,2,3,1,2,2,1,2,2,0,2,2,2,1,2,3,0,2,2,2,1,2,2,2,1,2,2,1,1,1,2,2,0,2,2,2,3,2,2,2,1,5,2,2,2,2,1,2,2,2,0,1,0,2,2,2,2,2,2,2,1,2,1,0,2,0,2,2,0,1,1,1,2,4,1,3,2,2,1,2,3,2,1,3,1,2,1,0,0,2,1,1,1,2,2,2,0,5,2,1,2,2,2,2,1,1,1,2,2,1,0,2,1,1,2,2,3,2,2,2,2,0,2,1,2,2,2,2,0,2,2,2,0,2,2,1,2,1,0,0,2,2,2,1,2,1,2,2,2,1,1,3,2,1,1],\"rators\":[\"vQEmjTRgmdGNYB7yk\",\"HK3RW4kr7acFSAyL4\",\"T9qTZqi8X2Pupk4Fz\",\"iAt8EN8Z4WDG9FLWQ\",\"BpYaeFEhheR6ZafMu\",\"uAohPNzs9ZeTzwqWP\",\"Ws72RoCASTFuTyokF\",\"7CwgH38hHpiGdu2zT\",\"tuyDaJzFy78jxvhCY\",\"iEMnJaXXfa6dzdQzb\",\"2PGyaiL22k4dfMGJf\",\"23oi2a3vQwhtLEbSj\",\"LfR9Bopm57BMNNnkp\",\"m2iiZZHTpzHcEKJMn\",\"6fJpRpAgiWD5zX9qB\",\"5JXnPbYC8RuBG6FkM\",\"GRZzKCbeb4xKHFCrZ\",\"ZxF3LkWqeo4fe4ziK\",\"ewyPo746vdNES9LwS\",\"jDoFYBX4iQiTXFEdf\",\"xavnCy7CjcNLodciA\",\"QjpzasKxy3xBakLzz\",\"gQwkudXwZ2iqDRMDD\",\"3Yxorwk6ABadbgX5m\",\"pGXXGXyDu6FGErkSo\",\"2innwjWqxJHo4eRGh\",\"WKsvry6M74GDrtqHQ\",\"4NnRqrPwSGKGKT4Nb\",\"mgJoduE8pStdjNmPD\",\"GezDEmXjMHk85D3MC\",\"NtYYXX2xhtZx5FsoT\",\"tEZYGGHp8ux3TrPy6\",\"nbmdkwFpFjSSdrtyz\",\"PwHLy9Fe5uctkKote\",\"mqXfzC24CdThpCaGd\",\"5nSgmjSpzDAHwQMaH\",\"JQNBZeWmp6YuKvMb2\",\"pdcaC4fEtsubBz4Wo\",\"aW8Qb8d3hAsWp2rWn\",\"FjzEmrkRd6DNtHFK6\",\"tCyBCJn6eDFQLWmTr\",\"xeQgp6bCbArkSYXKg\",\"mCMD9CNp9rA7tbYoB\",\"7EtepxmKZfunxFMF4\",\"nZ58gDWFhqXiZpmZQ\",\"eund9JckY6u2A96db\",\"5sGnqBqu5k2LCwGxh\",\"wPhd86JGzcCkkQdyy\",\"geyG5Prcud3n6CCMA\",\"Ptj85CSR8x8PydByW\",\"j9gg82Bp2L7nw7DyJ\",\"HQ22rsRQRSgBc2uPy\",\"ypWML44Ps9ysofjD6\",\"3EdroMxx96SL4GKyv\",\"W85mj6bXaFqcshNxm\",\"JxADc5CTg3NZvRR74\",\"eEMN7au2rb8mivhaX\",\"frcf2YeMN2DeupqZH\",\"sbbmKmrBrszLvWqqC\",\"EGnC3WqHX4YddCrRW\",\"NfMJuiBk6FN5Jc6ow\",\"YG776yzpLWoxa5GJs\",\"FHzvDACEZuAjRwL7v\",\"tAF9Gf6PiGogbZuWs\",\"3hnNN45MzxXW7uPR8\",\"eZ9oRoqZ6mpPRJjHH\",\"mdfg7jzShpAzFi2Bb\",\"z9FqvdkSb7hYJ63p5\",\"2GuzKEuE5QK5nDyrQ\",\"5KskveLGWHN8eam53\",\"xozjHBtj9egBmAuuY\",\"9j8nvw7NhJoMm34HF\",\"8yXcdARsCtaYrQaNc\",\"eXaGygfSMr2DBT2Y8\",\"BB5JZjLtpcrk2AJXb\",\"THD2EHgtJa2ooivJK\",\"Qm7WibLuCP7hW3iXi\",\"QgdwHjy4x6MCPwfh9\",\"cBCgxKeWmdcPwz4MH\",\"eMaBsjDKQC4XMNi3M\",\"jeuoearPPTcGPgXhf\",\"SKabuq5XuhXBugKBa\",\"mJvkMXND2BjRvtped\",\"T82JyZFPNz8maF8f8\",\"c7MnTtsQvL3atT7NT\",\"taNkYYB6myvcZPHn9\",\"eW5cHd5p5nv9XoLr4\",\"SK3kJggzuets9AFj6\",\"nc7bRhkxgKyqusYe3\",\"Kzom5ikn7BRrRgiES\",\"huXv4webPXRnp7ihN\",\"jvsCquRiNxGYK7oyy\",\"Nj6FwgBtAXsaQwsM2\",\"d2XCAmNhp79ea8a65\",\"RsX6W2ddWM8ajHzss\",\"M8jrv2FfpMQp9Qzpx\",\"35Z2Qy2cjicZMkSzn\",\"PAjQoyYKAkYAXERhf\",\"aTNWfAYfTZn2Ejn63\",\"EBDnngBiJNPkKK5JL\",\"n9PZCXcWTygjaDsXs\",\"uJ5A3zjLi9iN5eeXX\",\"W959nYTsTvFf9stJj\",\"jwgBL9AKmfxPCFoTo\",\"RAwFP7yZk9niA7KAX\",\"pT7ESkjcQTjmmaTXv\",\"PTcHSgSb3S9gHsJhP\",\"jj3tN4LhX8Rgs3DKB\",\"6QwHpeajrbLQAm64L\",\"hR7GMiqGap4CzEWSy\",\"nRNrCgAwhtMMyS6fC\",\"TJQcScCtNRobD8P4k\",\"p6MPFLtmJ2z8EQT4Q\",\"83i7PKDRGfBw5DLst\",\"FyDah3MTRW8vXTB6G\",\"oESR33eXHntMJxp2Q\",\"FjLPxCcT7urtALbos\",\"J3RFGrYLugHTTDxww\",\"CLKnKSGEviZPFLqkC\",\"6W2GSzrYjMD9ANBFY\",\"zgoEhAyhrjnsSLPGw\",\"oQ6PP8xC4yEe3oPve\",\"WFNJLTC9a3xZrbgcF\",\"q5s7yTnMdEoeXRTnH\",\"nusQQTi9vR569v4b5\",\"k66z8NfCwxStFg2qz\",\"vjgbYJGLr39bACXND\",\"eq6bWgNCAXLkFj4tx\",\"8JyqsSbN2FJXPr3cw\",\"vwmjqntQ9FvszKRye\",\"2RcMmxawiXaAWGida\",\"j3XimmYb3NEL5gLxX\",\"GhPsce93TtsT45o8z\",\"XBmvGz2a28Wtuhj3N\",\"DSE9iBAeDYfb2LMwM\",\"mGmoXwXiopnnnqYdh\",\"gb9rvGus2Jv7bjZSs\",\"PRPv763woB2EqjWvZ\",\"vEHDjxx5FuYiPCaXs\",\"Jqk2uJZZxEv5wZFze\",\"X9NeqaKpfykoscpYr\",\"jPpfWknjsoJcZkin2\",\"KpXzNmd3gyz2Mwka5\",\"LWT2TDou5RKQuKpqv\",\"3rt9Yc6qYctx4ep6v\",\"qvEvDcL32a5F4Tg6c\",\"tRA43bWeW9bLciKEh\",\"yZvzB3qFb8pkHy4dg\",\"Ge525X3sT75K74LoD\",\"KrESx9wBdxJ4RTwPH\",\"W2RBjMJ9KQPg4tjNZ\",\"uSh3aNxzD28jBuhxa\",\"XjC9ivzaAxfcFiSGj\",\"S3YQzy9vCFMmcQ4D4\",\"nQRzZKeDKuLRf9chX\",\"byHBadxxhnF5Ht7xH\",\"Rgdjr9tBGabXFdoXL\",\"Y3KkPrBzMBgMiqaQ6\",\"mNMQvcxKSSvqqMYCH\",\"PxsyPpvzdtJJmTr56\",\"7PTKd4xtWnbL7BzL2\",\"yrmiF5oKPR5rQYCRJ\",\"5J4tAkdA45c76xAfk\",\"T3ZAuoMrJjvZwN55B\",\"FikSPhcrHBpQ4CyGC\",\"hmJar7wTPM99rX4HB\",\"AF6LgdKhEdzwgRJom\",\"6ckDJWbyznyQQLkrP\",\"P59rek6gvwTzHvRYa\",\"CioWqrzmDwyunW5zS\",\"TNQ7ixK78HHTLP7it\",\"JEAi9mG3vvBomJ3Yu\",\"tokJAsQPt7Gnxhxur\",\"7dEgxuYSRr3uYijWT\",\"rMa8q8fB7xyTN5R2e\",\"XKi8iZXBCHCaebSHh\",\"gxdjEjj4AdrZv7jCa\",\"tHEH9MBHBAGvhgJGd\",\"aXCm9vWqKwL9XFYoj\",\"SkmxBGyasZvkextud\",\"zjZe8FuGZYPTDLzta\",\"byqTp7CX5oWSEZp4S\",\"PFjMZGHNAPTkgd7tq\",\"WkWyq9wMkZhXB6zsD\",\"xJdmLNL3Qoz24byZw\",\"PSrcg6fy835R4c5CW\",\"yrCNkFYQBEDE76eFS\",\"t6LCZAGzdTFzxRJJ8\",\"jYJ26SiLKBu5GRumq\",\"yAouD3PxzED8a4gap\",\"pr3B4hTse57s3QcZJ\",\"TNMAJidLpPdH4kmBv\",\"X2F55NHWPPEcpBaaR\",\"N2wnZXkhDH86mgjQ8\",\"3fjCCrpR2aD32sTrc\",\"C9LKGu2g5hSijvDzA\",\"nfXGHENb5md7m355s\",\"sCnrfER8vCe4xhpB2\",\"4y2bxsHwifCdZXAQA\",\"e7hZa9EqDzpwivGPH\",\"CssdRyc8mNPgPxsy4\",\"gMJhLdyw3tH7L96X2\",\"ae2bb4Zr7YAdN3dMu\",\"FgkYtHLxeD8pETJ8T\",\"498CxrZQdThLMa7ki\",\"tczr8H3zHk2kwp8br\",\"hexGeeK7zv9mQJgLe\",\"tADjEJQCYFvZtjPKS\",\"vkwPoXwJXZjXepHXx\",\"moFrJ4vxzxPynByzB\",\"cecRRLKKu5R62D5xE\",\"cR3ibTMxLyEdDFCHY\",\"HQxp7NcdvF92G7bYS\",\"T2vhHPhRR96hRizq8\",\"KauecksBkbp4fdnZJ\",\"9YtQPAffoq4WJLcAP\",\"3SKmXhcLPPkmQhjip\",\"otXtuQygbcYATMZoP\",\"yr822PZmmiDDenxpB\",\"6QEhBfzWmuYwm34zz\",\"HqmxnQJM66Y57twhn\",\"K96FwtfDDN5WM4Bb7\",\"ksafdYcNM3SFEQoW9\",\"qJZsi5rhRnWA38FbA\",\"2fxapKr8XGdNeaKi2\",\"sKfrD9gjCDHuqLzSk\",\"H9KZi2cjt4FwH7qog\",\"4tgBydK887PitgAoi\",\"yabtHTtycsWhcGBfD\",\"mtRvHDpeLoSGBf8zC\",\"C4QntmkYtB89GNtpd\",\"XbxHXmh5ZmRN2gw3K\",\"Xj6R2zqhgumffQCAN\",\"BeFnbPbMnAM2SjBdZ\",\"mKJuoa2SZSDNhvhk9\",\"ab7BsQuhDo3QgE6bh\",\"rEWQdNHK6YjuBqmrR\",\"mxX4rH5ELYkdZ2Mbw\",\"4fctAnxyFRB8stPRQ\",\"Ycj4iTJGFyvC4bXek\",\"4CFzv558qbGcpQwc4\",\"AasGs8AeX9Lcb9xJn\",\"2ahpwvBErWo33rdBH\",\"LQxof8pGabGuWP7Gn\",\"9Ly8afdtofp8DXzrt\",\"xBTYY2MfjhEwbjdwD\",\"GHvfFGbwqtKMGhHt6\",\"aEm3Wvj2rFYRL8Lrb\",\"aRqQ42J5zqCmBNd8w\",\"sz8ufn9i8zeiGWpAy\",\"Fk9kLwoG4Brf4KsKf\",\"vLrq4dEDMM2wd68Dc\",\"hnyhBFWwNCz9mDfSi\",\"2QGRoQn2dRq3scu7k\",\"jNvegJWCk5HCtEMbK\",\"ZNnsMeNkdDhHjSrZb\",\"HF28xZKSLM9wEuqNg\",\"gJYuGdkXEWWmGRLzu\",\"Yp7uvStL97cC9fKkY\",\"KRSKj7ikX2ytWFmod\",\"kYWb8BwpKwunQkxeX\",\"8PwfYqoDQFThzNtvf\",\"DEDniTrstQYGounXT\",\"6c4xjEdFxdYw5xGrt\",\"wT5gGgvjKc5wz59AQ\",\"9pzFiFK3ANLjQfnr2\",\"wf98HW4sLSE4F4N6z\",\"KdNDysEsy2TW5QRJ2\",\"dHZqT6h4JMwk5fPC8\",\"s5M5RvgqR9BhB9JoC\",\"tSFYadMLQgCqx3mnM\",\"ySiDrAad7S23QsEN6\",\"ahk2qiXKJA753wAJk\",\"586FdBhazpwJfnRYR\",\"MKT7khMBGXzA22ykf\",\"a777e8chPvJkY3tKa\",\"XrqNzJ2FRG8HnGiR6\",\"B4G2FKcFpvbzriGAG\",\"4yNLEwL2rsx4EE5Nt\",\"sbJcFfQjQ59Wfg4Cd\",\"2ptN2mhjFwFcHyPZd\",\"eMuCpJ2spXWkJjWNz\",\"J5T8gZqiZXFuFDTQ7\",\"H4abACFDH5t8CnnyH\",\"3cF6NXq3ZEwdkgSjb\",\"ZrKCkX7xxGGZzauFW\",\"n2BRY9X8899dcG8Bw\",\"NG8PWBSjsM8mMhQEq\",\"FEYpu9RWysAgW3XnP\",\"R4SjTgDnpigJYDLyL\",\"4hWjYDZsdixzvKbqQ\",\"Pe8vWpDHRuH9nSGKW\",\"YcCLwitFMAEJSnxAW\",\"K4JsBLPjNKZv5LWnp\",\"yjtdwc2AC4jA2RWtn\",\"DJdsqmTeAGDwrgYoZ\",\"KZvaNQrXBFJ9bKLYx\",\"PTDFuxAzou7W6asWt\",\"6kz7jjJS8W4tikYQT\",\"oBcs8GLX2ZFLXQy8y\",\"ta5CrWnBCRusD2WMo\",\"w2HhxvSLmDhaGCAjE\",\"NuqGt5u3s7vJ7HBGR\",\"6428wKHtwKkFdvBs5\",\"zd9FLSzsGz3evKafy\",\"ihWWwoyPrvHSZeQy3\",\"RehJGBFS6CYiWdjZx\",\"k2Eo3wyfZZ6KxvKhN\",\"tpxMgkGSHwBjS95Ta\",\"KLmLKaJPfsYxp42p2\",\"mG8HqKiAQFTdRZthG\",\"gXTAie79kiw28tx5u\",\"9CoqdidjM9KbeKnHY\",\"7K2GEb5TZRtSpyyGS\",\"DPi9QGLctq2y76KuE\",\"wRttWTM59y8m5mx7x\",\"5HCu9Ydd86QgHDRNP\",\"KJCDwGkoXh8qtbbKr\",\"dYPkStFnLvAMsHSzZ\",\"d8qtzoLB264iP8tdY\",\"cAP3n5NY64uoMwzRR\",\"RGMbFMZXJr7DhcAJy\",\"J3upzLHuEwXH7Z2hx\",\"5XiuAqicKD4hBdu63\",\"dQK2T76aHcRJkrbKB\",\"iS5BrkGLzJyPK7nKt\",\"cZccqzRQ9GgjQF6Az\",\"HuNF3xTBzmatyGSTm\",\"sHjfbGQGLHE6JR6qu\",\"C2AfMipCicfD58WJ9\",\"5S9nX4rKsnCcnv4Cz\",\"5hQnRWiKkhgKJXNMP\",\"GGdmhAvxXhqhhibJN\",\"Ds7L5bksw2QRHjrKL\",\"o4ixjQGSaYqA2JoM4\",\"AFfw7cGg83uYk2Miy\",\"CHvzhtXnv8HTbPQ56\",\"yod5YhKtPqw2GfG9B\",\"ey3CASd6Je5LEJzfB\",\"8BFSTCnoe2QggN64c\",\"BrTDhPJcACL2bsrpJ\",\"JKb5rhL6DKcCAypF9\",\"PC3pLs36zNzpRDSuE\",\"rrSC943cCKNG48sH4\",\"qzXAMXsHZGT8o5hTA\",\"PH32cNxBjrK4a28sn\",\"RoGGD5cpHb4ftdLDv\",\"2PufnQcsHsfymufX3\",\"Cc2Cgj4MWXZxsTooC\",\"YA7SDhpgEtsqynvNL\",\"pduNK68oazqQTtbLp\",\"X4rzfxGgxx6CS7Bpz\",\"4TmgHkn5vqyHK3sYC\",\"T6Rm8mREPMZSftzrC\",\"d9LBRxvADNBB5QJMB\",\"wjc4iejpErBhxWwHo\",\"NzbRqGWspQnWMoDrF\",\"Zyg9xAm6EuH4u3Lo5\",\"5aQYQ7ugCF4QYsxy5\",\"Wi4H6ayKsNDWWQCG5\",\"uGuS9YRXW2nj4p6zf\"],\"quality\":[3,4,2,4,5,4,5,5,5,4,5,5,5,5,5,5,4,5,5,4,5]},\"complaints\":{\"total\":0,\"reasons\":[],\"skippers\":[\"vQEmjTRgmdGNYB7yk\"]},\"instructions\":{\"score\":8.8,\"voters\":[\"LfR9Bopm57BMNNnkp\",\"2innwjWqxJHo4eRGh\",\"qdo6qdNw3mMzxwJxH\",\"wFNPrwMtMZAJDRyAs\",\"EZXooNtEBWjNvjG6i\",\"yF2yyeA4CMSgQaxur\",\"FPkESBrrZwYqkeRBT\",\"KbXFnyq7KMRgqA9aX\",\"4QHj4RGQ7CgGdYBzq\",\"Z8WFmzQRYcHDxPqX7\",\"q8EdjfGRqRpzZxmBG\",\"YidXFQ8GDeKoP8Eto\",\"zzCiteHswn39tScah\",\"ir3FrSjSfp64n7KZB\"]},\"tests\":{\"score\":-6,\"voters\":[\"j9gg82Bp2L7nw7DyJ\",\"ZdqpuRnTRSJaXnYPF\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.476190476190476,\"family\":[{\"_id\":\"o49GYWqMvd5Ek9Pm6\",\"language\":\"cpp\"},{\"_id\":\"YxRSS8DEue6WNQqya\",\"language\":\"csharp\"},{\"_id\":\"o9nESkofDnfXJ5m7a\",\"language\":\"java\"},{\"_id\":\"j7s4LTKexAEazQApv\",\"language\":\"javascript\"},{\"_id\":\"nTvFXnuMt8Ej2vwXY\",\"language\":\"php\"},{\"_id\":\"928sxbEt8gyZ5uBBt\",\"language\":\"python3\"},{\"_id\":\"A4e2gLPubg4LmYZKa\",\"language\":\"ruby\"}]}}"]