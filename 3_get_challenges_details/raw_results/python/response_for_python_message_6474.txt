a["{\"msg\":\"result\",\"id\":\"1946\",\"result\":{\"_id\":\"cvsGAmtHJBNDJFBpB\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def can_traverse(x):\\n\\t\",\"difficulty\":2.7154471544715446,\"familyId\":\"yHua55oaFxLnJrkyi\",\"instructions\":\"In **Block Dude**, the main character can climb boxes, but only if they are stacked in a particular way so that he is able to climb them one at a time. More specifically, **he can only climb UP or DOWN one box at a time**.\\n\\nLet `1`s represent the boxes, and `0` represent the background. Write a function that returns `True` if block dude **can travel from the left side to the right side of the screen** given his constraints.\\n\\nFor example, the sample layout below should return `True`.\\n\\n```\\n[\\n  [0, 0, 0, 0, X, 0, 0, 0, 0],\\n  [0, 0, 0, X, 1, X, X, 0, 0],\\n  [0, X, X, 1, 1, 1, 1, X, 0],\\n  [X, 1, 1, 1, 1, 1, 1, 1, X]\\n]\\n```\\n\\nSince block dude can travel across these boxes (Note: X's are just to show walking path and are **not** part of the actual input). On the other hand:\\n\\n```\\n[\\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\\n  [0, 0, 0, 1, 1, 0, 0, 0, 0],\\n  [0, X, X, 1, 1, 1, 1, 0, 0],\\n  [X, 1, 1, 1, 1, 1, 1, 1, 0]\\n]\\n```\\n\\nShould return `False`, since block dude is stuck at column 3, being unable to climb 2 boxes at once.\\n\\n### Examples\\n```\\ncan_traverse([\\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\\n  [0, 0, 0, 1, 0, 0, 0, 0, 0],\\n  [0, 0, 1, 1, 0, 0, 1, 0, 0],\\n  [0, 1, 1, 1, 1, 1, 1, 1, 0]\\n]) ➞ False\\n\\n# Block dude can't jump down 2 blocks.\\n\\ncan_traverse([\\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\\n  [0, 0, 0, 1, 0, 0, 0, 0, 1],\\n  [0, 0, 1, 1, 1, 0, 1, 1, 1],\\n  [0, 1, 1, 1, 1, 1, 1, 1, 1]\\n]) ➞ True\\n\\n# Note: Sometimes the exit is at the top!\\n\\ncan_traverse([\\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\\n  [0, 0, 0, 1, 0, 0, 0, 0, 0],\\n  [0, 0, 1, 1, 1, 1, 1, 0, 0],\\n  [0, 1, 1, 1, 1, 1, 1, 1, 0]\\n]) ➞ True\\n\\ncan_traverse([\\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\\n  [0, 0, 0, 1, 0, 0, 0, 0, 0],\\n  [0, 1, 1, 1, 1, 1, 1, 0, 0],\\n  [0, 1, 1, 1, 1, 1, 1, 1, 0]\\n]) ➞ False\\n\\n# Block dude can't climb 2 blocks.\\n```\\n\\n### Notes\\nCheck the **Resources** tab for a link to play block dude.\",\"lab\":\"Test.assert_equals(can_traverse([\\n\\t[0, 0, 0, 0, 0, 0, 0, 0, 0], \\n\\t[0, 0, 0, 1, 0, 0, 0, 0, 0], \\n\\t[0, 0, 1, 1, 0, 0, 1, 0, 0], \\n\\t[0, 1, 1, 1, 1, 1, 1, 1, 0]\\n]), False)\\n\\nTest.assert_equals(can_traverse([\\n\\t[0, 0, 0, 0, 0, 0, 0, 0, 0], \\n\\t[0, 0, 0, 1, 0, 0, 0, 0, 0], \\n\\t[0, 0, 1, 1, 1, 0, 1, 0, 0], \\n\\t[0, 1, 1, 1, 1, 1, 1, 1, 0]\\n]), True)\\n\\nTest.assert_equals(can_traverse([\\n\\t[0, 0, 0, 0, 0, 0, 0, 0, 0], \\n\\t[0, 0, 0, 1, 0, 0, 0, 0, 0], \\n\\t[0, 0, 1, 1, 1, 1, 1, 0, 0], \\n\\t[0, 1, 1, 1, 1, 1, 1, 1, 0]\\n]), True)\\n\\nTest.assert_equals(can_traverse([\\n\\t[0, 0, 0, 0, 0, 0, 0, 0, 0], \\n\\t[0, 0, 0, 1, 0, 0, 0, 0, 0], \\n\\t[0, 1, 1, 1, 1, 1, 1, 0, 0], \\n\\t[0, 1, 1, 1, 1, 1, 1, 1, 0]\\n]), False)\\n\\nTest.assert_equals(can_traverse([\\n\\t[0, 0, 0, 0, 0, 0, 0, 0, 0], \\n\\t[0, 0, 0, 1, 1, 0, 0, 0, 0], \\n\\t[0, 0, 1, 1, 1, 1, 1, 0, 0], \\n\\t[0, 1, 1, 1, 1, 1, 1, 1, 0]\\n]), True)\\n\\nTest.assert_equals(can_traverse([\\n\\t[0, 0, 0, 0, 0, 0, 0, 0, 0], \\n\\t[0, 0, 0, 0, 0, 0, 0, 0, 0], \\n\\t[0, 0, 1, 0, 0, 0, 1, 0, 0], \\n\\t[0, 1, 1, 1, 0, 1, 1, 1, 0]\\n]), True)\\n\\nTest.assert_equals(can_traverse([\\n\\t[0, 0, 0, 0, 0, 0, 0, 0, 0], \\n\\t[0, 0, 0, 0, 0, 0, 0, 0, 0], \\n\\t[0, 0, 0, 0, 0, 0, 0, 0, 0], \\n\\t[0, 1, 1, 1, 0, 1, 1, 1, 0]\\n]), True)\\n\\nTest.assert_equals(can_traverse([\\n\\t[0, 0, 0, 0, 0, 0, 0, 0, 0], \\n\\t[0, 0, 0, 1, 0, 0, 0, 0, 1], \\n\\t[0, 0, 1, 1, 1, 0, 1, 1, 1], \\n\\t[0, 1, 1, 1, 1, 1, 1, 1, 1]\\n]), True)\\n\\nTest.assert_equals(can_traverse([\\n\\t[0, 0, 0, 0, 0, 0, 0, 0, 0], \\n\\t[0, 0, 0, 1, 0, 0, 0, 0, 1], \\n\\t[0, 0, 1, 1, 1, 0, 1, 0, 1], \\n\\t[0, 1, 1, 1, 1, 1, 1, 1, 1]\\n]), False)\",\"language\":\"python3\",\"summary\":\"In Block Dude, the main character can climb boxes, but only if they are stacked in a particular way so that he is able to climb them one at a time. More specifically, he can only climb UP or DOWN one box at a time.\\n\\nLet 1s represent the boxes, and 0 represent the background. Write a function that returns True if block dude can travel from the left side to the\",\"tags\":[\"arrays\",\"games\",\"higher_order_functions\",\"validation\"],\"timestamp\":{\"$date\":1554526269655},\"title\":\"Block Dude\",\"stats\":{\"completed\":{\"total\":127,\"ratings\":[3,3,3,3,3,3,3,3,3,3,5,3,4,3,3,2,5,2,2,2,1,2,2,3,2,3,0,3,2,4,3,3,1,5,3,2,4,0,3,3,3,4,4,4,4,2,1,1,1,2,3,3,2,3,3,2,3,4,2,3,3,1,2,3,2,2,3,2,3,2,3,4,3,4,3,3,2,4,3,2,3,4,4,3,4,2,2,4,4,2,1,4,0,2,2,3,4,4,0,2,4,3,1,2,4,0,4,3,2,1,4,1,3,4,4,3,4,4,3,2,4,0,2],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"yZvzB3qFb8pkHy4dg\",\"8JyqsSbN2FJXPr3cw\",\"oY74FZqt3CFiRqeyA\",\"6W2GSzrYjMD9ANBFY\",\"WDaGgs2zcdz2aJ4Km\",\"yQgD7dzqCqA9mwEgT\",\"pJtD3KZ94Jz29j6X5\",\"tAF9Gf6PiGogbZuWs\",\"T3ZAuoMrJjvZwN55B\",\"XjC9ivzaAxfcFiSGj\",\"APqoCF4BeiPd6ZcFt\",\"ab7BsQuhDo3QgE6bh\",\"gb9rvGus2Jv7bjZSs\",\"AYaEkTWLMmfzpwejr\",\"PFjMZGHNAPTkgd7tq\",\"7g3vZaQXhLpxrajyg\",\"td7qPZ7Lv4pEWT2Ya\",\"BFNm9gacwba9KyLFW\",\"r45DETkNsmXquKgcf\",\"3ifAHQzsMasfQySoL\",\"cmwasetrBzbwJQbks\",\"jYJ26SiLKBu5GRumq\",\"nfXGHENb5md7m355s\",\"D6Z9oT2ZhjBCxuL2o\",\"ZpK6Mj8GGN3svqi3m\",\"TgjcWxsTjar7snQx9\",\"RErqK2yM94wYyD2hk\",\"PuJDHtAaX6vXeJJTC\",\"9YtQPAffoq4WJLcAP\",\"S8nRnCyqEdKAr7Rap\",\"7BvK9WWXi9Arqh63Q\",\"dLMwA7bAx3ArJoqC5\",\"Tin42WiZ4JTDEnS7b\",\"4rg9g6TKYZ8aifrYc\",\"HqmxnQJM66Y57twhn\",\"hrzGaJc9KZqgjAvew\",\"s5M5RvgqR9BhB9JoC\",\"AbrJ8hMyv5fFXG6DN\",\"X5rQz4tpncjYZ6uZr\",\"73rmKyTQp7oWvRcgq\",\"FgkYtHLxeD8pETJ8T\",\"e8eNT56Mdz6naTE3x\",\"2fxapKr8XGdNeaKi2\",\"6ShafRStcvew4GfCh\",\"aCNWav8S8Try9RkC6\",\"Jqk2uJZZxEv5wZFze\",\"ftRou9zcw69GCx4iv\",\"8PwfYqoDQFThzNtvf\",\"EQbnbkkPYtGxiviTp\",\"2innwjWqxJHo4eRGh\",\"dMnE8vgYgSmqJTXFB\",\"apiyfPkZX9v9EmJrq\",\"sWX2tYC7J4m2GkcRC\",\"JKb5rhL6DKcCAypF9\",\"aEm3Wvj2rFYRL8Lrb\",\"SGhPxX5bHGL8zZqtt\",\"pQKacoMccp6HYmWZ8\",\"pAC5jpwEjjvjevyiH\",\"TyEeGAgsF7tG3fubX\",\"7tbM7oMYc5oDvD88Z\",\"AasGs8AeX9Lcb9xJn\",\"pmgFEciNrd3ES9tuu\",\"Nua6T3dBurBy3Qfg9\",\"EjbDDFRECrzQDkzrX\",\"aP7JkkYer28YWrPvC\",\"5zBmcs43Gc7jkoTEc\",\"ywk3XGvcmpTgRxwZa\",\"DwetpbChQM4r6Gwah\",\"YRstQuthRkFeBiXug\",\"tFHNPXCmM77ooz7ga\",\"C3GBEjPfwC5wxmfne\",\"PytNZK9mNiRiZxPrm\",\"fznzd3qnvtbFkkizz\",\"mDWNyaaQ9hvPCRzSd\",\"gJYuGdkXEWWmGRLzu\",\"8LfTheFzvicameoz9\",\"ZNnsMeNkdDhHjSrZb\",\"bJaPCBx63YxdJAuTS\",\"aLwJNALj2MpjAGZz4\",\"hcHvBjqkn4XKgF4EH\",\"Sj4iamMmNvxwWJBiF\",\"wT5gGgvjKc5wz59AQ\",\"W5TajitmCyxz87zAC\",\"mq2W9FwPgf4w75dZi\",\"44dAzThMuyGZ5StXB\",\"AGMQqooexrFXgMnET\",\"ekQh3jzgGLsEMbKo3\",\"nLpdvK7EcahCqNe8X\",\"Ecg4m7srYGgZsb4Ck\",\"bJxaKHJqR82EWw8Su\",\"f2BoqyCpgnmjEjLqx\",\"YLtspA8ec6ntcoMMf\",\"xn7uGNKeAwPEkP9oA\",\"S6ipW8Xzds8QDszn9\",\"B5oFyC6oyQa9fE8rx\",\"qPpQfR5KyDb5Y3EFf\",\"vTfyrr4pGddp8rbXc\",\"p8qqFdJ3FSk5x9z3G\",\"8sNv5PTHa7XQ8bNqR\",\"4fhjJBvLBWh6QeSih\",\"P7NmFbCJ5offXMRvB\",\"DNACg4rcgZsPtYGZ8\",\"XjajdyybZZbkz8o5x\",\"yjtdwc2AC4jA2RWtn\",\"c2u7qfdaYxcyuydtu\",\"HF28xZKSLM9wEuqNg\",\"QGmp3LSCSoWAbcTjs\",\"J3upzLHuEwXH7Z2hx\",\"iS5BrkGLzJyPK7nKt\",\"amfj3y4oZMprJ96fg\",\"Wv2vJnEj8ywNmARoF\",\"nPRDLtMR8iztbB7Es\",\"yTtSCvGPyYna6JuRC\",\"RTDx9axf52kxhFjwZ\",\"iojEnnY9FsMfYzp6f\",\"gXTAie79kiw28tx5u\",\"2PufnQcsHsfymufX3\",\"GTKsdeEihE636Le9i\",\"H9KZi2cjt4FwH7qog\",\"T6iBEE2jp7f7iEF2P\",\"Yp7uvStL97cC9fKkY\"],\"quality\":[5,5,5,5,5,5,5,4]},\"tests\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.875,\"family\":[{\"_id\":\"K8ydJQoJTq7yEJyk2\",\"language\":\"javascript\"},{\"_id\":\"cvsGAmtHJBNDJFBpB\",\"language\":\"python3\"},{\"_id\":\"946axfHGhku9vYWC2\",\"language\":\"ruby\"}]}}"]