a["{\"msg\":\"result\",\"id\":\"1524\",\"result\":{\"_id\":\"uxCqPKsjtxCCqvCZJ\",\"author\":\"Lógó\",\"authorId\":\"hRAd998MG8Jzdpxj6\",\"code\":\"def has_consecutive_series(v1, v2):\\n\\t\",\"difficulty\":2.08,\"familyId\":\"qYyCorenFGiXZQWMP\",\"instructions\":\"The goal is to test if a **consecutive sequence** is formed. A consecutive sequence is defined as sequence of incrementing numbers (e.g. 1, 2, 3 or 5, 6, 7, 8). The twist is that you have to consider the combination of vectors as shown.\\n\\n```\\n[3 5 1 -5 ]  =>  [3+4  5+3  1+8  15-5]  =  [7 8 9 10]  =>  true\\n[4 3 8 15]\\n```\\n\\nAlso important is that the vectors can be of different sizes, where excess numbers on the larger one will be paired with 0s from the other ones.\\n\\n```\\n[2 2 2  ]  =>  [2+5  2+6  2+7  10+0]  = [ 7 8 9 10]  =>  true\\n[5 6 7 10]\\n```\\n\\n### Notes\\n- Each array has at least two elements.\\n- Try the [harder version](https://edabit.com/challenge/xo6qTjB8GMDcvzu59).\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(has_consecutive_series([1, 2, 3], [1, 1, 1]), True)\\nTest.assert_equals(has_consecutive_series([1, 2, 3], [1, 2, 1]), False)\\nTest.assert_equals(has_consecutive_series([4, 6, -5, 8, 4], [-2, -3, 9, -3, 2]), True)\\nTest.assert_equals(has_consecutive_series([12, 3], [0, 10, 14, 15, 16]), True)\\nTest.assert_equals(has_consecutive_series([8, 6, 10], [25, 28, 25, 26, 28, 29]), False)\\nTest.assert_equals(has_consecutive_series([11, 5, 3], [-2, 5, 8, 12]), True)\\nTest.assert_equals(has_consecutive_series([11, 5, 3], [-2, 5, 8, 11]), False)\",\"language\":\"python3\",\"quality\":4.333333333333333,\"summary\":\"The goal is to test if a consecutive sequence is formed. A consecutive sequence is defined as sequence of incrementing numbers (e.g. 1, 2, 3 or 5, 6, 7, 8). The twist is that you have to consider the combination of vectors as shown.\\n\\n[3 5 1 -5 ]  =>  [3+4  5+3  1+8  15-5]  =  [7 8 9 10]  =>  true\\n[4 3 8 15]\\n\\nAlso important is that the vectors can be of differe\",\"tags\":[\"arrays\",\"logic\",\"validation\"],\"timestamp\":{\"$date\":1605147917593},\"title\":\"Combined Vector Sequence\",\"stats\":{\"completed\":{\"total\":54,\"ratings\":[4,4,4,4,4,1,0,2,4,2,2,0,2,1,1,2,3,0,2,2,3,3,0,2,2,3,1,1,2,3,1,3,3,3,3,3,0,0,2,5,0,4,0,0,3,2,3,2,0,3],\"quality\":[5,4,3,5,4,5],\"rators\":[\"aEm3Wvj2rFYRL8Lrb\",\"hRAd998MG8Jzdpxj6\",\"A3pBp3qBMnYZpQKZu\",\"8PwfYqoDQFThzNtvf\",\"8JyqsSbN2FJXPr3cw\",\"HF28xZKSLM9wEuqNg\",\"QRv96jmNaYsWkxQEG\",\"s5M5RvgqR9BhB9JoC\",\"8sNv5PTHa7XQ8bNqR\",\"Ecg4m7srYGgZsb4Ck\",\"gb9rvGus2Jv7bjZSs\",\"J3upzLHuEwXH7Z2hx\",\"AXcnPX68zdMiLNSmu\",\"DPi9QGLctq2y76KuE\",\"Yp7uvStL97cC9fKkY\",\"iS5BrkGLzJyPK7nKt\",\"qZQxPQ2kaNKAMesHT\",\"yTtSCvGPyYna6JuRC\",\"p8qqFdJ3FSk5x9z3G\",\"gXTAie79kiw28tx5u\",\"gJYuGdkXEWWmGRLzu\",\"yjtdwc2AC4jA2RWtn\",\"Jqk2uJZZxEv5wZFze\",\"oBcs8GLX2ZFLXQy8y\",\"n2BRY9X8899dcG8Bw\",\"DQskEvAv5KiJDPtGF\",\"cAP3n5NY64uoMwzRR\",\"iojEnnY9FsMfYzp6f\",\"Afnps7TJQuS9sipMb\",\"eHcgvkTGsH7ZziqBo\",\"GTKsdeEihE636Le9i\",\"Z85ajWfZ4jDPkbvR4\",\"cR3ibTMxLyEdDFCHY\",\"xn7uGNKeAwPEkP9oA\",\"srJ34BaybkQh3qRkM\",\"mDWNyaaQ9hvPCRzSd\",\"AasGs8AeX9Lcb9xJn\",\"HqmxnQJM66Y57twhn\",\"GGdmhAvxXhqhhibJN\",\"WKLd87Z3m2ohnMw57\",\"J5T8gZqiZXFuFDTQ7\",\"PWgzeK859suojbrRx\",\"rfyEkETeoS96QNH4e\",\"T6iBEE2jp7f7iEF2P\",\"gKnWjDjwrJh7MK2df\",\"2PufnQcsHsfymufX3\",\"o4ixjQGSaYqA2JoM4\",\"tAF9Gf6PiGogbZuWs\",\"yod5YhKtPqw2GfG9B\",\"CHvzhtXnv8HTbPQ56\",\"Ds7L5bksw2QRHjrKL\"]},\"flags\":0},\"editorId\":\"hRAd998MG8Jzdpxj6\",\"family\":[{\"_id\":\"5DMZLvxuKtCLQw4ti\",\"language\":\"cpp\"},{\"_id\":\"oX9kdz2h6pQH7NJ2m\",\"language\":\"javascript\"},{\"_id\":\"uxCqPKsjtxCCqvCZJ\",\"language\":\"python3\"},{\"_id\":\"a75oBCpabZfMsdnsp\",\"language\":\"ruby\"}]}}"]