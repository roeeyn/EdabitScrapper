a["{\"msg\":\"result\",\"id\":\"1113\",\"result\":{\"_id\":\"PGqy3SRaobbtFfspW\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"def simple_pair(lst, n):\\n\\t\",\"difficulty\":1.576086956521739,\"familyId\":\"vJ4hi5sm4ujFhyXsJ\",\"instructions\":\"**Mubashir** needs your help to write a simple algorithm of multiplication.\\n\\nGiven an array of integers `lst` and an integer `n`, find out a pair of numbers `[x, y]` from a given array such that **x * y = n **.\\n\\nIf the pair is not found, return `None`.\\n\\n### Examples\\n```\\nsimple_pair([1, 2, 3], 3) ➞ [1, 3]\\n\\nsimple_pair([1, 2, 3], 6) ➞ [2, 3]\\n\\nsimple_pair([1, 2, 3], 9) ➞ None\\n```\\n### Notes\\nN/A\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(simple_pair([1, 2, 3], 3), [1, 3])\\nTest.assert_equals(simple_pair([1, 2, 3], 6), [2, 3])\\nTest.assert_equals(simple_pair([1, 2, 3], 7), None)\\nTest.assert_equals(simple_pair([1, 2, 3, 6], 6), [1, 6])\\nTest.assert_equals(simple_pair([1, 2, 3, 4, 5, 6], 15), [3, 5])\\nTest.assert_equals(simple_pair([0, 0, 2], 4), None)\\nTest.assert_equals(simple_pair([0, 0, 2, 2], 4), [2, 2])\\nTest.assert_equals(simple_pair([-3, -2, -2, -1, 0, 1, 2, 3, 4], 4), [-2, -2])\\nTest.assert_equals(simple_pair([-3, -2, -2, -1, 0, 1, 2, 3, 4], 0), [-3, 0])\\nTest.assert_equals(simple_pair([-3, -2, -1, 0, 1, 2, 3, 4], 4), [1, 4])\\n# Mubashir\",\"language\":\"python3\",\"quality\":4.705882352941177,\"summary\":\"Mubashir needs your help to write a simple algorithm of multiplication.\\n\\nGiven an array of integers lst and an integer n, find out a pair of numbers [x, y] from a given array such that x * y = n .\\n\\nIf the pair is not found, return None.\\n\\nExamples\\nsimple_pair([1, 2, 3], 3) ➞ [1, 3]\\n\\nsimple_pair([1, 2, 3], 6) ➞ [2, 3]\\n\\nsimple_pair([1, 2, 3], 9) ➞ None\\nNotes\\nN/A\",\"tags\":[\"algebra\",\"interview\",\"math\",\"numbers\"],\"timestamp\":{\"$date\":1611402097167},\"title\":\"A Simple Pair\",\"stats\":{\"completed\":{\"total\":132,\"ratings\":[1,1,1,1,1,1,1,1,0,5,2,1,2,2,2,2,2,2,0,0,1,0,2,2,2,1,2,0,0,0,1,2,2,1,2,0,2,1,3,3,2,2,0,2,2,2,2,2,2,1,2,2,2,2,3,2,2,1,1,2,2,2,1,1,1,0,2,3,3,2,2,2,2,0,2,1,2,2,2,3,2,1,2,2,1,3,2,2,1,2,0,1],\"quality\":[5,5,5,5,5,5,5,4,5,4,5,5,4,5,4,5,5,5,2,5,5,5,5,5,5,3,5,5,5,5,5,5,5,4],\"rators\":[\"T6iBEE2jp7f7iEF2P\",\"cR3ibTMxLyEdDFCHY\",\"wfspjH3pMjTpXaiyp\",\"eYfPWvZwnJQkHbSTK\",\"J5T8gZqiZXFuFDTQ7\",\"8PwfYqoDQFThzNtvf\",\"cAP3n5NY64uoMwzRR\",\"buX4mCQhtXCfBjeno\",\"xARnoqBFpQsz7QxJg\",\"iS5BrkGLzJyPK7nKt\",\"srJ34BaybkQh3qRkM\",\"p8qqFdJ3FSk5x9z3G\",\"s5M5RvgqR9BhB9JoC\",\"yjtdwc2AC4jA2RWtn\",\"GGdmhAvxXhqhhibJN\",\"QRv96jmNaYsWkxQEG\",\"Jqk2uJZZxEv5wZFze\",\"pPpmP7xeJzGgK362R\",\"mAtnSZ7HfvMANcRoj\",\"K6MfKMytoJJuSGewP\",\"oBcs8GLX2ZFLXQy8y\",\"Ds7L5bksw2QRHjrKL\",\"gb9rvGus2Jv7bjZSs\",\"kXEfD7xxEyWd7oxxL\",\"axdSNLZpiCDF8RS6n\",\"f5xd6EFHgPprS4Cib\",\"wjc4iejpErBhxWwHo\",\"kJJENbYrcwG3JjYkK\",\"YP5Cu4obrCJbEY8oQ\",\"6vT2fMrAzSR5cYyri\",\"BJp2WkwLWGHHB5oQW\",\"5MBAkuTt6ytvZCphX\",\"zd9FLSzsGz3evKafy\",\"SzAvJ93idxj5NFnsJ\",\"Lkcku4D8wh449piQh\",\"HF28xZKSLM9wEuqNg\",\"PXAcsKkssS2yLyDv2\",\"d8qtzoLB264iP8tdY\",\"2QGRoQn2dRq3scu7k\",\"m65nZXbagCHhHvezb\",\"eMuCpJ2spXWkJjWNz\",\"xhN8oEtSyCk5vMy4j\",\"FEYpu9RWysAgW3XnP\",\"JwLKvWBSQcLs9R9vv\",\"Cuy7McJ5y8BkXRRk9\",\"q6QsMYNMpPNtmyTeW\",\"sHjfbGQGLHE6JR6qu\",\"gJYuGdkXEWWmGRLzu\",\"gXTAie79kiw28tx5u\",\"YcCLwitFMAEJSnxAW\",\"CHvzhtXnv8HTbPQ56\",\"8BFSTCnoe2QggN64c\",\"wRttWTM59y8m5mx7x\",\"8JyqsSbN2FJXPr3cw\",\"ouD6cs7ZdxzPfKRKt\",\"AQSqD9oNv2uPfxZCR\",\"MfKe55snfKsdnDejs\",\"qAby4AWXmTNeusvg3\",\"Yp7uvStL97cC9fKkY\",\"XujK3rHd3JcM9TLJy\",\"DPi9QGLctq2y76KuE\",\"sbJcFfQjQ59Wfg4Cd\",\"iojEnnY9FsMfYzp6f\",\"5HCu9Ydd86QgHDRNP\",\"3cF6NXq3ZEwdkgSjb\",\"tAF9Gf6PiGogbZuWs\",\"CBbfsdN6yGz2DSA99\",\"sJKjqocSgzdo5KD9K\",\"ey3CASd6Je5LEJzfB\",\"J3upzLHuEwXH7Z2hx\",\"XD5nmvKQchKezPXhy\",\"qhcDNrbFkHYLXLQTk\",\"u5u2YpHXiNgzDNJdX\",\"bvmTE46bfcM4ogj34\",\"DEDniTrstQYGounXT\",\"JhX7jvtpwNyxcc39m\",\"66a9xX73nmTEuKs9k\",\"PC3pLs36zNzpRDSuE\",\"yod5YhKtPqw2GfG9B\",\"AJexRBN9cYQmqvYu6\",\"TtrXnGzi9MyhLvWiz\",\"yr822PZmmiDDenxpB\",\"5XiuAqicKD4hBdu63\",\"jkys684AAfPRxrYaD\",\"9Ly8afdtofp8DXzrt\",\"mvJBakQ35CWAnbbEZ\",\"9SLMpDkubxMw24Dg4\",\"BrTDhPJcACL2bsrpJ\",\"AasGs8AeX9Lcb9xJn\",\"XHShZ3WMPgGEA2vkR\",\"LQxof8pGabGuWP7Gn\",\"BdnE4RS5puoxo92mA\",\"rrSC943cCKNG48sH4\",\"aEm3Wvj2rFYRL8Lrb\",\"HqmxnQJM66Y57twhn\",\"RoGGD5cpHb4ftdLDv\",\"2PufnQcsHsfymufX3\",\"2FCRyJqwqzFTKSTgJ\",\"Afnps7TJQuS9sipMb\",\"AFfw7cGg83uYk2Miy\",\"GJmKcqu7xppQyBaTt\",\"SxzqqQZ4HEwY9oCzE\",\"dzS6WBTMHyFEag6Fp\",\"T6Rm8mREPMZSftzrC\",\"suArq5BbSy7gD6xri\",\"AMpQSjKsRqhCDyS2j\",\"4TmgHkn5vqyHK3sYC\",\"qaPjAANdnxFnWfj5d\",\"rhS8qXRjZcpDXkwnE\",\"d9LBRxvADNBB5QJMB\",\"sBoNkD5c6zGSZNbqL\",\"pduNK68oazqQTtbLp\",\"4Lwjr34ypKNQNQCar\",\"mxX4rH5ELYkdZ2Mbw\",\"NccTYYtqoxuo9yu7T\",\"MKT7khMBGXzA22ykf\",\"9pzFiFK3ANLjQfnr2\",\"Wi4H6ayKsNDWWQCG5\",\"FQoDbW3f7viY9x6xq\",\"Ncn7Qn2LbdsiJnfFk\",\"RGN3QTb5LXj4ZPPkj\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"FShPuPwiMf4pvEjMB\",\"language\":\"cpp\"},{\"_id\":\"ZRTs8xSSsiurhHLEo\",\"language\":\"javascript\"},{\"_id\":\"98TWNvuCsK8tG4tGQ\",\"language\":\"php\"},{\"_id\":\"PGqy3SRaobbtFfspW\",\"language\":\"python3\"},{\"_id\":\"BEvvF7ta6GgmKcMjJ\",\"language\":\"ruby\"}]}}"]