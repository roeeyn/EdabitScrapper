a["{\"msg\":\"result\",\"id\":\"2289\",\"result\":{\"_id\":\"MfZWgFzoc5Je3g56z\",\"author\":\"javierdariomartin\",\"authorId\":\"6428wKHtwKkFdvBs5\",\"code\":\"def translate(ran, num):\\n\\t\",\"difficulty\":3.588235294117647,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"5zz4uv4CewNp76xL8\",\"instructions\":\"Create a function that takes two numbers as an argument and returns the minimum number of steps that we need to do inside a range of numbers to obtain a secret number.\\n\\nThe first number, `ran`, allow us to define the range of numbers that will be used to determine the secret number. The range runs from `0` up to `ran**2` (the number `ran**2` is part of the range).\\n\\nThe second number, `num`, is the number we will use to determine the secret number. The secret number will be the mirror of `num` in the range previously defined. \\n\\nFinally, we need to determine the minimum number of steps we need to do from `num` to the secret number. We can move forward of backwards through the range.\\n\\n### Examples\\n```\\ntranslate(3, 0) ➞ \\\"-1 ---> 9\\\"\\n# Here the range of numbers will be 0, 1, 2, 3, 4, 5, 6, 7, 8, 9.\\n# The secret number will be 9, since 9 is the mirror of 0 in the defined range.\\n# The minimum number of steps to go from 0 to 9 is -1 (-1 < 9, being 9 the\\n# number of required steps if we move forward).\\n\\ntranslate(3, 2) ➞ \\\"+5 or -5 ---> 7\\\"\\n# In this case, we can move to the secret number doing 5 setps forward or 5\\n# steps backwards, starting from 2.\\n\\ntranslate(3, 4) ➞ \\\"+1 ---> 5\\\"\\n\\ntranslate(9, 100) ➞ \\\"100 is not in the range [0:81]\\\"\\n\\ntranslate(10, 50) ➞ \\\"+0 ---> 50\\\"\\n```\\n\\n### Notes\\nN/A\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(translate(3, 0), \\\"-1 ---> 9\\\")\\nTest.assert_equals(translate(3, 1), \\\"-3 ---> 8\\\")\\nTest.assert_equals(translate(3, 2), \\\"+5 or -5 ---> 7\\\")\\nTest.assert_equals(translate(3, 3), \\\"+3 ---> 6\\\")\\nTest.assert_equals(translate(3, 4), \\\"+1 ---> 5\\\")\\nTest.assert_equals(translate(3, 5), \\\"-1 ---> 4\\\")\\nTest.assert_equals(translate(3, 6), \\\"-3 ---> 3\\\")\\nTest.assert_equals(translate(3, 7), \\\"+5 or -5 ---> 2\\\")\\nTest.assert_equals(translate(3, 8), \\\"+3 ---> 1\\\")\\nTest.assert_equals(translate(3, 9), \\\"+1 ---> 0\\\")\\nTest.assert_equals(translate(3, 10), \\\"10 is not in the range [0:9]\\\")\\nTest.assert_equals(translate(10, 50), \\\"+0 ---> 50\\\")\\nTest.assert_equals(translate(100, 2001), \\\"-4003 ---> 7999\\\")\\nTest.assert_equals(translate(111, 10000), \\\"+4643 ---> 2321\\\")\\nTest.assert_equals(translate(2001, 75000), \\\"-150001 ---> 3929001\\\")\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[5,5,5,5,5,1,5,4,0,3,4,5,1,1,4,5,3],\"rators\":[\"aEm3Wvj2rFYRL8Lrb\",\"6428wKHtwKkFdvBs5\",\"8PwfYqoDQFThzNtvf\",\"AraFx3EGW7PsqMPWt\",\"Ecg4m7srYGgZsb4Ck\",\"ygDJ7HEzRoJZyPEF4\",\"iS5BrkGLzJyPK7nKt\",\"8sNv5PTHa7XQ8bNqR\",\"yjtdwc2AC4jA2RWtn\",\"2PufnQcsHsfymufX3\",\"gJYuGdkXEWWmGRLzu\",\"s5M5RvgqR9BhB9JoC\"],\"total\":14,\"quality\":[]},\"flags\":0},\"summary\":\"Create a function that takes two numbers as an argument and returns the minimum number of steps that we need to do inside a range of numbers to obtain a secret number.\\n\\nThe first number, ran, allow us to define the range of numbers that will be used to determine the secret number. The range runs from 0 up to ran2 (the number ran2 is part of the range).\\n\\nThe se\",\"tags\":[\"math\",\"numbers\"],\"timestamp\":{\"$date\":1594490105611},\"title\":\"Number Translation\",\"quality\":0,\"family\":[{\"_id\":\"MfZWgFzoc5Je3g56z\",\"language\":\"python3\"}]}}"]