a["{\"msg\":\"result\",\"id\":\"1660\",\"result\":{\"_id\":\"pboAYDuTv7ziJgtxC\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def min_turns(current, target):\\n\\t\",\"difficulty\":2.1349693251533743,\"familyId\":\"LZR835J2FrDyKvTqD\",\"instructions\":\"A briefcase has a 4-digit **rolling-lock**. Each digit is a number from `0-9` that can be rolled either forwards or backwards.\\n\\nCreate a function that returns the smallest number of turns it takes to transform the lock from the current combination to the target combination. One turn is equivalent to rolling a number forwards or backwards by one.\\n\\nTo illustrate:\\n\\n- **current-lock**: 4089\\n- **target-lock**: 5672\\n\\nWhat is the minimum number of turns it takes to transform `4089` to `5672`? \\n\\n``` \\n4 ➞ 5\\n4 ➞ 5  # Forward Turns: 1 <- Min\\n4 ➞ 3 ➞ 2 ➞ 1 ➞ 0 ➞ 9 ➞ 8 ➞ 7 ➞ 6 ➞ 5  # Backward Turns: 9\\n\\n0 ➞ 6\\n0 ➞ 1 ➞ 2 ➞ 3 ➞ 4 ➞ 5 ➞ 6  # Forward Turns: 6\\n0 ➞ 9 ➞ 8 ➞ 7 ➞ 6  # Backward Turns: 4  <- Min\\n\\n8 ➞ 7\\n8 ➞ 9 ➞ 0 ➞ 1 ➞ 2 ➞ 3 ➞ 4 ➞ 5 ➞ 6 ➞ 7  # Forward Turns: 9\\n8 ➞ 7  # Backward Turns: 1  <- Min\\n\\n9 ➞ 2\\n9 ➞ 0 ➞ 1 ➞ 2  # Forward Turns: 3  <- Min\\n9 ➞ 8 ➞ 7 ➞ 6 ➞ 5 ➞ 4 ➞ 3 ➞ 2  # Backward Turns: 7\\n```\\nIt takes `1 + 4 + 1 + 3 = 9` minimum turns to change the lock from `4089` to `5672`. \\n\\n### Examples\\n```\\nmin_turns(\\\"4089\\\", \\\"5672\\\") ➞ 9\\n\\nmin_turns(\\\"1111\\\", \\\"1100\\\") ➞ 2\\n\\nmin_turns(\\\"2391\\\", \\\"4984\\\") ➞ 10\\n```\\n\\n### Notes\\n- Both locks are in string format.\\n- A `9` rolls forward to `0`, and a `0` rolls backwards to a `9`.\",\"lab\":\"Test.assert_equals(min_turns(\\\"4089\\\", \\\"5672\\\"), 9)\\nTest.assert_equals(min_turns(\\\"1732\\\", \\\"4444\\\"), 9)\\nTest.assert_equals(min_turns(\\\"7109\\\", \\\"2332\\\"), 13)\\nTest.assert_equals(min_turns(\\\"2391\\\", \\\"4984\\\"), 10)\\nTest.assert_equals(min_turns(\\\"1234\\\", \\\"3456\\\"), 8)\\nTest.assert_equals(min_turns(\\\"1111\\\", \\\"1100\\\"), 2)\\nTest.assert_equals(min_turns(\\\"1111\\\", \\\"0000\\\"), 4)\\nTest.assert_equals(min_turns(\\\"0000\\\", \\\"9999\\\"), 4)\",\"language\":\"python3\",\"summary\":\"A briefcase has a 4-digit rolling-lock. Each digit is a number from 0-9 that can be rolled either forwards or backwards.\\n\\nCreate a function that returns the smallest number of turns it takes to transform the lock from the current combination to the target combination. One turn is equivalent to rolling a number forwards or backwards by one.\\n\\nTo illustrate:\\n\\ncur\",\"tags\":[\"arrays\",\"higher_order_functions\"],\"timestamp\":{\"$date\":1553213753277},\"title\":\"Briefcase Lock\",\"stats\":{\"completed\":{\"total\":176,\"ratings\":[2,2,2,2,2,2,2,2,2,2,0,2,1,2,1,2,2,1,0,3,2,2,2,2,2,2,2,2,3,3,2,2,3,2,3,1,3,3,4,2,2,3,4,3,2,3,3,2,0,2,1,3,3,2,1,0,0,3,2,2,2,3,2,0,1,1,3,2,0,3,2,3,3,1,4,2,0,2,1,3,2,2,3,3,3,2,1,3,0,3,2,2,2,3,4,0,2,2,3,1,3,4,2,3,1,3,2,2,5,2,2,3,3,2,3,3,1,2,3,2,3,2,3,3,3,2,3,1,2,3,1,0,3,3,3,2,1,2,3,2,2,2,2,1,3,3,3,0,2,2,5,3,3,0,2,2,2,0,3,2,3,1,3],\"rators\":[\"BkPgkDQGHm66X4Qai\",\"Jqk2uJZZxEv5wZFze\",\"8JyqsSbN2FJXPr3cw\",\"yZvzB3qFb8pkHy4dg\",\"M8jrv2FfpMQp9Qzpx\",\"qvEvDcL32a5F4Tg6c\",\"SKabuq5XuhXBugKBa\",\"X9NeqaKpfykoscpYr\",\"nc7bRhkxgKyqusYe3\",\"uSh3aNxzD28jBuhxa\",\"tAF9Gf6PiGogbZuWs\",\"gb9rvGus2Jv7bjZSs\",\"T3ZAuoMrJjvZwN55B\",\"Y3KkPrBzMBgMiqaQ6\",\"FikSPhcrHBpQ4CyGC\",\"ab7BsQuhDo3QgE6bh\",\"GMbZRE4gvgfkDxSvY\",\"6ckDJWbyznyQQLkrP\",\"Rgdjr9tBGabXFdoXL\",\"gxdjEjj4AdrZv7jCa\",\"cecRRLKKu5R62D5xE\",\"byqTp7CX5oWSEZp4S\",\"Exi2G66wgyhWaknKD\",\"49mPu5czAbAhiXf7S\",\"mBGpSNpLxBmS68CET\",\"5s4qhuRJijYaDNXva\",\"5JFQgt6KFihmXfHKm\",\"4LYkRKwgAzdJJ9Kbv\",\"ahMz2A4pnX8KTfv9Z\",\"7g3vZaQXhLpxrajyg\",\"PFjMZGHNAPTkgd7tq\",\"RkpDGH3gMkJivXBvm\",\"ahWFxnaxt9bXSA4f3\",\"c89SxuYYjfeRh4toG\",\"wSC3ZqHpPwKqc5oxr\",\"tHEH9MBHBAGvhgJGd\",\"AF6LgdKhEdzwgRJom\",\"nF9pCCzbGDhzvWgaw\",\"C9LKGu2g5hSijvDzA\",\"6u7yc9m6HuHGbHzph\",\"yrCNkFYQBEDE76eFS\",\"AYaEkTWLMmfzpwejr\",\"jYJ26SiLKBu5GRumq\",\"WkWyq9wMkZhXB6zsD\",\"nzx4uAPg3hCceyFPE\",\"cR3ibTMxLyEdDFCHY\",\"T2vhHPhRR96hRizq8\",\"gMJhLdyw3tH7L96X2\",\"Nj6FwgBtAXsaQwsM2\",\"k32Wnn8ptAyRfutqf\",\"XKi8iZXBCHCaebSHh\",\"2fxapKr8XGdNeaKi2\",\"dvmrZXzqS7b6ruPXP\",\"3d4dKK5i3KAkRLQJY\",\"otXtuQygbcYATMZoP\",\"Jg8ZSRXe3NoDMCqGu\",\"w3e8tA7cxpYDfSmWM\",\"8aPJNKDxXq7884eJb\",\"eb5XAGpwKA48ya99p\",\"BTz4hrBKeHYwDHGMW\",\"PXSFa2Cvyy7nxcv5T\",\"Jmt7w6aiCvJ8XuBo6\",\"PGdhAe5R8FdSmwoP6\",\"ZuDf2ZkHjN8s27msY\",\"eDmE2DscmShjauARX\",\"RyCu8LFdoba6Gvzp9\",\"oqGkxvASXq52iTDvp\",\"Dw8RZgg5iHBuFrWwQ\",\"EXZfPb8YH28EL8Rh9\",\"sfHsh5gna2QYuwsRP\",\"8PE2cfZEhQBPhe8LG\",\"3bkCjbHpN3Lgp29y3\",\"7vyub5zTHNfMfQWoW\",\"qBaLGrm952ii9K23M\",\"6n3Pb8mbxebuhjz7x\",\"rurh72mGpAthfGRGt\",\"MJMWfiW978otApbcG\",\"vuwheqp25x7RkBHXn\",\"JiDXhxGzzSuXrBnmE\",\"v9KtC8YLbMWmXiW2H\",\"dZGNAJXB24zNh2tsD\",\"HqmxnQJM66Y57twhn\",\"PuJDHtAaX6vXeJJTC\",\"Ei2heuE9HWGMHqfGd\",\"CZeLyDD2BQL3jrzzj\",\"ZnWyAsqYcD4G8aqMF\",\"YTTTwEP9F7mBe5Xgi\",\"WX6R5brerMTrHs5ZM\",\"aCNWav8S8Try9RkC6\",\"Qcv3kqBdyGHHbzWY5\",\"C4QntmkYtB89GNtpd\",\"aMCK6QtaGMR46obgb\",\"5uA8xmgifmiJrqbzy\",\"K96FwtfDDN5WM4Bb7\",\"8PwfYqoDQFThzNtvf\",\"yoYQqaY6GszuTkNSs\",\"6ShafRStcvew4GfCh\",\"cXp7BXyiNJzBWdvYY\",\"2innwjWqxJHo4eRGh\",\"s5M5RvgqR9BhB9JoC\",\"Yp7uvStL97cC9fKkY\",\"pmgFEciNrd3ES9tuu\",\"AasGs8AeX9Lcb9xJn\",\"4CFzv558qbGcpQwc4\",\"w3A7cBWyAfukk6xEQ\",\"mDWNyaaQ9hvPCRzSd\",\"Cc2Cgj4MWXZxsTooC\",\"aEm3Wvj2rFYRL8Lrb\",\"FxJxxwowtXYCaLaeD\",\"LjoNTyGEMfBpMHHus\",\"ZNnsMeNkdDhHjSrZb\",\"YRstQuthRkFeBiXug\",\"EjbDDFRECrzQDkzrX\",\"gJYuGdkXEWWmGRLzu\",\"55RQznnuTGpsj3EXd\",\"wT5gGgvjKc5wz59AQ\",\"HF28xZKSLM9wEuqNg\",\"n2BRY9X8899dcG8Bw\",\"PBxCmhZq8ENRjtvMA\",\"hX2iktknBz6it4BwK\",\"k4pSrEv4r8KnAdGXb\",\"ACEZh39brWjdGkZXb\",\"Ecg4m7srYGgZsb4Ck\",\"DEDniTrstQYGounXT\",\"hnyhBFWwNCz9mDfSi\",\"iojEnnY9FsMfYzp6f\",\"zZDaXBxMzTCBhNkgL\",\"yjtdwc2AC4jA2RWtn\",\"CWWopsBKq2F5HznXQ\",\"Jsrfs8nEy37mJxbqD\",\"KZ2xddpM2f9JRaryB\",\"WwMjW4MJRuNFExoPc\",\"KGnpATngtc3wruT89\",\"iS5BrkGLzJyPK7nKt\",\"QRv96jmNaYsWkxQEG\",\"spqXrjG3ZFa2j5uTR\",\"p8qqFdJ3FSk5x9z3G\",\"DPi9QGLctq2y76KuE\",\"xn7uGNKeAwPEkP9oA\",\"J3upzLHuEwXH7Z2hx\",\"dkcmCKwqApX5jBggc\",\"t5sZF4aR7a28Bm56W\",\"gXTAie79kiw28tx5u\",\"iYz8w4RCMWR6H7Wyc\",\"oBcs8GLX2ZFLXQy8y\",\"dLHj72AadNKDqG6QX\",\"cAP3n5NY64uoMwzRR\",\"RTDx9axf52kxhFjwZ\",\"GTKsdeEihE636Le9i\",\"9BmspneW8gB3rPbvH\",\"PytNZK9mNiRiZxPrm\",\"PWgzeK859suojbrRx\",\"AFfw7cGg83uYk2Miy\",\"GGdmhAvxXhqhhibJN\",\"H9KZi2cjt4FwH7qog\",\"fbr22rabEJMfBp7vD\",\"rfyEkETeoS96QNH4e\",\"MpfytGFYF77emJ3cT\",\"Gvk2fnrnZjXgjuxsJ\",\"gKnWjDjwrJh7MK2df\",\"suArq5BbSy7gD6xri\",\"yod5YhKtPqw2GfG9B\",\"rhS8qXRjZcpDXkwnE\",\"T6iBEE2jp7f7iEF2P\",\"2PufnQcsHsfymufX3\",\"4Lwjr34ypKNQNQCar\",\"buX4mCQhtXCfBjeno\",\"8sNv5PTHa7XQ8bNqR\",\"nxY2fFzGDDQdyyKFA\"],\"quality\":[4,5,5,5,4,3,5,5,5,4,5,3,5,5,4]},\"tests\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"instructions\":{\"score\":0,\"rators\":[\"BkPgkDQGHm66X4Qai\"]},\"flags\":0},\"isHidden\":false,\"quality\":4.466666666666667,\"family\":[{\"_id\":\"oKwYyH4Xk4cktFodW\",\"language\":\"cpp\"},{\"_id\":\"hp4extG9YzmZWGsrw\",\"language\":\"csharp\"},{\"_id\":\"sWo3y2WgtGDDtRtrB\",\"language\":\"javascript\"},{\"_id\":\"pboAYDuTv7ziJgtxC\",\"language\":\"python3\"},{\"_id\":\"F2RGDkfqYgY9c3G4e\",\"language\":\"ruby\"},{\"_id\":\"tM4f8G39ipX2Yo76Y\",\"language\":\"swift\"}]}}"]