a["{\"msg\":\"result\",\"id\":\"2273\",\"result\":{\"_id\":\"PzyssSgqopkBjzTY2\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def can_exit(lst):\\n\\t\",\"difficulty\":3.5588235294117645,\"familyId\":\"hpJkzKvSXyfSMq8ww\",\"instructions\":\"A maze can be represented by a 2D matrix, where `0`s represent **walkeable** areas, and `1`s represent walls. You start on the upper left corner and the exit is on the most lower right cell.\\n\\nCreate a function that returns `true` if you can walk from one end of the maze to the other. You can only move up, down, left and right. You **cannot move diagonally**.\\n\\n### Examples\\n```\\ncan_exit([\\n  [0, 1, 1, 1, 1, 1, 1],\\n  [0, 0, 1, 1, 0, 1, 1],\\n  [1, 0, 0, 0, 0, 1, 1],\\n  [1, 1, 1, 1, 0, 0, 1],\\n  [1, 1, 1, 1, 1, 0, 0]\\n]) ➞ true\\n\\ncan_exit([\\n  [0, 1, 1, 1, 1, 1, 1],\\n  [0, 0, 1, 0, 0, 1, 1],\\n  [1, 0, 0, 0, 0, 1, 1],\\n  [1, 1, 0, 1, 0, 0, 1],\\n  [1, 1, 0, 0, 1, 1, 1]\\n]) ➞ false\\n\\n# This maze only has dead ends!\\n\\ncan_exit([\\n  [0, 1, 1, 1, 1, 0, 0],\\n  [0, 0, 0, 0, 1, 0, 0],\\n  [1, 1, 1, 0, 0, 0, 0],\\n  [1, 1, 1, 1, 1, 1, 0],\\n  [1, 1, 1, 1, 1, 1, 1]\\n]) ➞ false\\n\\n# Exit only one block away, but unreachable!\\n\\ncan_exit([\\n  [0, 1, 1, 1, 1, 0, 0],\\n  [0, 0, 0, 0, 1, 0, 0],\\n  [1, 1, 1, 0, 0, 0, 0],\\n  [1, 0, 0, 0, 1, 1, 0],\\n  [1, 1, 1, 1, 1, 1, 0]\\n]) ➞ true\\n```\\n\\n### Notes\\n- In a maze of size `m x n`, you enter at `[0, 0]` and exit at `[m-1, n-1]`.\\n- There can be dead ends in a maze - one exit path is sufficient.\",\"lab\":\"Test.assert_equals(can_exit([\\n\\t[0, 1, 1, 1, 1, 1, 1], \\n\\t[0, 0, 1, 1, 0, 1, 1], \\n\\t[1, 0, 0, 0, 0, 1, 1], \\n\\t[1, 1, 1, 1, 0, 0, 1], \\n\\t[1, 1, 1, 1, 1, 0, 0]\\n]), True)\\n\\nTest.assert_equals(can_exit([\\n\\t[0, 1, 1, 1, 1, 1, 1], \\n\\t[0, 0, 1, 0, 0, 1, 1], \\n\\t[1, 0, 0, 0, 0, 1, 1], \\n\\t[1, 1, 0, 1, 0, 0, 1], \\n\\t[1, 1, 0, 0, 1, 1, 1]\\n]), False)\\n\\nTest.assert_equals(can_exit([\\n\\t[0, 1, 1, 1, 1, 0, 0], \\n\\t[0, 0, 0, 0, 1, 0, 0], \\n\\t[1, 1, 1, 0, 0, 0, 0], \\n\\t[1, 1, 1, 1, 1, 1, 0], \\n\\t[1, 1, 1, 1, 1, 1, 1]\\n]), False)\\n\\nTest.assert_equals(can_exit([\\n\\t[0, 1, 1, 1, 1, 0, 0], \\n\\t[0, 0, 0, 0, 1, 0, 0], \\n\\t[1, 1, 1, 0, 0, 0, 0], \\n\\t[1, 0, 0, 0, 1, 1, 0], \\n\\t[1, 1, 1, 1, 1, 1, 0]\\n]), True)\\n\\nTest.assert_equals(can_exit([\\n\\t[0, 1, 1, 1, 1, 0, 0], \\n\\t[0, 0, 0, 0, 1, 0, 0], \\n\\t[1, 1, 1, 0, 0, 0, 0], \\n\\t[1, 0, 0, 0, 0, 1, 1], \\n\\t[1, 1, 1, 1, 0, 0, 0]\\n]), True)\\n\\nTest.assert_equals(can_exit([\\n\\t[0, 1, 1, 1, 1, 0, 1], \\n\\t[0, 0, 0, 0, 1, 0, 1], \\n\\t[1, 1, 1, 0, 0, 0, 1], \\n\\t[1, 0, 0, 0, 0, 1, 1], \\n\\t[1, 1, 1, 1, 0, 1, 1]\\n]), False)\\n\\nTest.assert_equals(can_exit([\\n\\t[0, 0, 0, 0, 0, 0, 0], \\n\\t[0, 0, 0, 0, 1, 0, 0], \\n\\t[1, 1, 1, 0, 0, 0, 0], \\n\\t[1, 0, 0, 0, 0, 1, 0], \\n\\t[1, 1, 1, 1, 0, 1, 0]\\n]), True)\\n\\nTest.assert_equals(can_exit([\\n\\t[0, 0, 0, 0, 0, 0, 0], \\n\\t[0, 1, 1, 1, 1, 1, 0], \\n\\t[0, 1, 1, 1, 1, 1, 0], \\n\\t[0, 1, 1, 1, 1, 1, 0], \\n\\t[0, 0, 0, 0, 0, 0, 1]\\n]), False)\\n\\nTest.assert_equals(can_exit([\\n\\t[0, 0, 1, 1, 1, 1, 1], \\n\\t[1, 0, 0, 1, 1, 1, 1], \\n\\t[1, 1, 0, 0, 1, 1, 1], \\n\\t[1, 1, 1, 0, 0, 0, 0], \\n\\t[1, 1, 1, 1, 1, 1, 0]\\n]), True)\\n\\n## More False Tests\\nTest.assert_equals(can_exit([\\n\\t[0, 0, 0, 0, 0, 0, 0], \\n\\t[0, 1, 1, 1, 1, 1, 0], \\n\\t[0, 1, 1, 1, 1, 1, 0], \\n\\t[0, 1, 1, 1, 1, 1, 1], \\n\\t[0, 0, 0, 0, 0, 1, 0]\\n]), False)\\n\\nTest.assert_equals(can_exit([\\n\\t[0, 1, 0, 0, 0, 0, 0], \\n\\t[0, 1, 1, 1, 1, 1, 0], \\n\\t[0, 1, 1, 1, 1, 1, 0], \\n\\t[0, 1, 1, 1, 1, 1, 0], \\n\\t[0, 0, 0, 0, 0, 1, 0]\\n]), False)\",\"language\":\"python3\",\"summary\":\"A maze can be represented by a 2D matrix, where 0s represent walkeable areas, and 1s represent walls. You start on the upper left corner and the exit is on the most lower right cell.\\n\\nCreate a function that returns true if you can walk from one end of the maze to the other. You can only move up, down, left and right. You cannot move diagonally.\\n\\nExamples\\ncan_e\",\"tags\":[\"arrays\",\"functional_programming\",\"higher_order_functions\",\"games\"],\"timestamp\":{\"$date\":1554574557749},\"title\":\"Can You Exit the Maze?\",\"stats\":{\"completed\":{\"total\":105,\"ratings\":[4,4,4,4,4,4,4,4,4,4,4,5,5,5,4,3,5,2,5,1,2,5,2,2,0,0,0,5,5,2,5,1,5,5,3,0,5,4,5,5,1,5,4,4,2,5,5,2,3,4,2,5,5,3,4,5,5,5,2,4,2,5,4,0,5,5,4,3,2,5,4,0,3,4,2,3,2,3,1,5,0,4,5,5,4,2,3,5,2,5,2,5,4,5,5,4,5,3,4,5,5,4],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"WDaGgs2zcdz2aJ4Km\",\"8JyqsSbN2FJXPr3cw\",\"T3ZAuoMrJjvZwN55B\",\"hkB99Rfsg7cpuHn7P\",\"tAF9Gf6PiGogbZuWs\",\"FkCM6nNgxYepHvWvM\",\"6W2GSzrYjMD9ANBFY\",\"WZxCpoREvQqJJ35bs\",\"nrA8Pacm3A6GqGzq4\",\"WEsTtgWsLWeYmryTR\",\"tsHLih5WxvYR7wCeu\",\"MXjxGML2X75x64vJo\",\"AYaEkTWLMmfzpwejr\",\"qcFP5oJG6rvbhRPTb\",\"R9QrgbRjec9DByk8X\",\"mzkepYhTvxWGHNtTM\",\"7uvhdgHLGskuQDXqc\",\"cdvwuSNJYydmwJu3D\",\"kkNuxk9p55ASzfEpG\",\"QKYi6pYeaYFovNHX4\",\"BFNm9gacwba9KyLFW\",\"WbrjyJnhqo6xKo6Tc\",\"ZgdejAm3u2Q6tFpfg\",\"ZatR59KfT8s4Z3JTQ\",\"duygm2Ffue3bjb3MS\",\"FHSJnAYTbcsKFgeQa\",\"k66z8NfCwxStFg2qz\",\"RZNCqxxJy3Lsw6a9y\",\"pdZMdmGowou47HESt\",\"3j8k2cNmgW8bJAqYM\",\"tAzKDfb3oztBwzNo3\",\"ogyeeaEAjmdSBsnta\",\"dRLHomguvjwAji7xX\",\"wadXYaQi9osoDvsc5\",\"5Qvy7fNM2YEQ6PtbY\",\"aCNWav8S8Try9RkC6\",\"RHSuurSWTrogyYJGk\",\"NGXcBDtMkQ9TmQsSJ\",\"5Sx6DjWo6jCtj53og\",\"P7biohAXKnX6pfuDZ\",\"6qJ8mFbGC9NfjsuKM\",\"s5M5RvgqR9BhB9JoC\",\"HqmxnQJM66Y57twhn\",\"6niWwTvL2kcpBqArR\",\"nLpdvK7EcahCqNe8X\",\"caoRMhfqpPEKnPz8z\",\"jDgJ2fdFS76TSorNc\",\"qDD4QEj8KyW9mbweG\",\"BEAA3juw8TQHkhexv\",\"eHcgvkTGsH7ZziqBo\",\"cMGTQmbpzJJdF53ij\",\"8PwfYqoDQFThzNtvf\",\"2NJuDfSqdrF8kHHni\",\"fMR9RcfgPJWiLgx7k\",\"de3DhFz9dW8vdPanZ\",\"X4iqEdg7dPjFpoASw\",\"iMHrN3Wiefh9Ame38\",\"GiK8LZt3JRKNJjj5W\",\"SGhPxX5bHGL8zZqtt\",\"SuJeLnhfR3smGu3WZ\",\"BByKDngfPvW6w4m7d\",\"zxmtE2mYR4xQzTHoy\",\"aEm3Wvj2rFYRL8Lrb\",\"oTm8JAxW6Kxed8P6B\",\"DwetpbChQM4r6Gwah\",\"ZXRMRAJNP6eseLdbR\",\"mDWNyaaQ9hvPCRzSd\",\"vTfyrr4pGddp8rbXc\",\"8L4WnF9WLDki482Rd\",\"Cfx3cu6CedA3Hi6Fw\",\"W5TajitmCyxz87zAC\",\"fznzd3qnvtbFkkizz\",\"diaiQeWEE8GbMnKue\",\"PWAySsq7gkZWHjaZm\",\"6428wKHtwKkFdvBs5\",\"bJxaKHJqR82EWw8Su\",\"2PK6phGrsbb22AXfo\",\"eoepTq5ES5tfgY9XT\",\"4fhjJBvLBWh6QeSih\",\"xn7uGNKeAwPEkP9oA\",\"fSgCtTbtfBQBmGM2m\",\"GDcZ8xLorv7c8tgkq\",\"h4x2jaMdj5aQZbW5g\",\"d6iEb2BDDofyeePh9\",\"b6NLccZmmaAanzEZ4\",\"iS5BrkGLzJyPK7nKt\",\"kPSTjCWkuJPgHBMpw\",\"Mw8yqSDFdQui28w5N\",\"duRSzSa8CnfJ25Ewe\",\"hpZARXGLAJt2EDmcf\",\"6ruzomkciKSXiW5pu\",\"7xtPMWcPabJjJ9WWA\",\"8sNv5PTHa7XQ8bNqR\",\"kXEfD7xxEyWd7oxxL\",\"yjtdwc2AC4jA2RWtn\",\"gJYuGdkXEWWmGRLzu\",\"vZFTbprPhNvaZvhqJ\",\"2PufnQcsHsfymufX3\"],\"quality\":[5,5,5,5,4,5]},\"tests\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"editorId\":\"mNMQvcxKSSvqqMYCH\",\"isHidden\":false,\"quality\":4.833333333333333,\"family\":[{\"_id\":\"PR5D7Lp42FGtE5tqD\",\"language\":\"cpp\"},{\"_id\":\"ogDHjfpAcE896kN4H\",\"language\":\"javascript\"},{\"_id\":\"PzyssSgqopkBjzTY2\",\"language\":\"python3\"},{\"_id\":\"NhbQ9Qcci9GeGRQBy\",\"language\":\"ruby\"}]}}"]