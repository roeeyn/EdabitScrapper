a["{\"msg\":\"result\",\"id\":\"595\",\"result\":{\"_id\":\"6LwzPRc6LrauEgr7H\",\"author\":\"Cool_Kidd\",\"authorId\":\"i5iePG5GqhJJ8HEoB\",\"code\":\"def worm_length(worm):\\n\\t\",\"difficulty\":1.0836653386454183,\"editorId\":\"i5iePG5GqhJJ8HEoB\",\"familyId\":\"g4rRFr27u44gT7CQr\",\"instructions\":\"Given a string `worm` create a function that takes the length of the worm and converts it into millimeters. Each `-` represents one centimeter.\\n\\n### Examples\\n```\\nworm_length(\\\"----------\\\") ➞ \\\"100 mm.\\\"\\n\\nworm_length(\\\"\\\") ➞ \\\"invalid\\\"\\n\\nworm_length(\\\"---_-___---_\\\") ➞ \\\"invalid\\\"\\n```\\n\\n### Notes\\nReturn `\\\"invalid\\\"` if an empty string is given or if the string has characters other than `-`.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(worm_length(\\\"----------\\\"), \\\"100 mm.\\\")\\nTest.assert_equals(worm_length(\\\"\\\"), \\\"invalid\\\")\\nTest.assert_equals(worm_length(\\\"---_-___---_\\\"), \\\"invalid\\\")\\nTest.assert_equals(worm_length(\\\"------\\\"), \\\"60 mm.\\\")\\nTest.assert_equals(worm_length(\\\"iwheguawhpvpaiehpiuwwega\\\"), \\\"invalid\\\")\\nTest.assert_equals(worm_length(\\\"QWERTYUIOPASDFGHJKL\\\"), \\\"invalid\\\")\\nTest.assert_equals(worm_length(\\\"------------\\\"), \\\"120 mm.\\\")\",\"language\":\"python3\",\"quality\":4.7,\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,1,2,1,0,1,0,1,0,1,0,1,2,2,0,1,0,1,1,1,0,0,2,0,1,0,3,0,2,1,1,4,1,2,0,1,2,0,0,0,1,2,1,1,2,1,2,2,1,0,2,0,2,0,1,2,1,2,0,2,2,2,2,1,1,2,2,3,1,2,0,1,2,2,0,0,0,0,1,1,0,0,2,0,2,2,0,2,1,1,1,1,1,2,1,1,1,2,1,0,1,1,1,0,1,2,1,1,2,0,2,1,0,1,1,1,1,1,1,1,2,1,0,1,2,0,1,1,3,2,2,1,1,1,1,1,2,1,1,0,0,2,1,0,1,2,1,1,2,2,2,1,1,2,1,2,1,1,0,0,0,1,2,1,0,1,0,2,0,1,0,1,2,1,2,1,1,2,2,0,1,1,1,1,1,1,3,1,0,1,1,1,0,2,2,0,0,1,1,3,2,3,1,0,1,1,1,1,2,1,1,1,1,0,1,2,1,2,1,0,0,1,1,1,2,1,1,1,1,1,1,1,1,2,1,2,1,0,2,1,0,1,1,0,1,2,1],\"quality\":[2,4,5,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,4,5,4,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,4,4,4,5,4,5,5,5,5,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,5,5,5,5,5,1,4,5,5,3,5,5,5,5,5,5,4,5,5,5,5,5,5,5,4,5,4,5,5,3,4,5,5,5,5,5,5,5,5,5,4,5,5,5,3,5,3,5,5,5,4,5,5,4,5,5,5,5,5,5,4,5,5,5,5,2,5,5,5,5,5,5,4,4,5,5,5,4,5,5,4,5],\"rators\":[\"i5iePG5GqhJJ8HEoB\",\"ik2dsFgXbyNwQEvt8\",\"Yp7uvStL97cC9fKkY\",\"5XiuAqicKD4hBdu63\",\"5HTSi5wQNAdLm57LB\",\"8X8Ba6Q5WNNWyEEjJ\",\"MKT7khMBGXzA22ykf\",\"QRv96jmNaYsWkxQEG\",\"wPpco9rPHqyfBntwp\",\"sHjfbGQGLHE6JR6qu\",\"nfXGHENb5md7m355s\",\"C7YAgphAk9vNEApyo\",\"Q6gEE9dG8ERy2Xu3c\",\"yjtdwc2AC4jA2RWtn\",\"xygE63XtvXatGvuzd\",\"5f6oSeq4r5WTXLdCQ\",\"J3upzLHuEwXH7Z2hx\",\"GsqNXp7AmynB6ahw3\",\"gJYuGdkXEWWmGRLzu\",\"Kh3Pc2ZRusurLaMyP\",\"oyKcm3zqdy8Ko5P5d\",\"BrTDhPJcACL2bsrpJ\",\"5hQnRWiKkhgKJXNMP\",\"cKYmvcjAL8yT6KSy2\",\"FEYpu9RWysAgW3XnP\",\"NAE7658g6DBYrphoC\",\"brBkqpqkRarKALzgv\",\"wRttWTM59y8m5mx7x\",\"9onLFjwWr6DqyRBJw\",\"DPi9QGLctq2y76KuE\",\"5HCu9Ydd86QgHDRNP\",\"hz3C4umnrHQcgA9YE\",\"ggbLRzWYAShjFhNvP\",\"4xN6RDc8Ak8vzsbQ9\",\"wZxzyLn7v5NMCc9mj\",\"7D76ZPLjgjZideoy9\",\"RSTdK2S8CecymSS6h\",\"utdj2v4ruJdN644DR\",\"Ds7L5bksw2QRHjrKL\",\"YmQb9Mo4Xcg2vzgbn\",\"6428wKHtwKkFdvBs5\",\"wZ5BAzSENtS2jn3n4\",\"c2u7qfdaYxcyuydtu\",\"WdKdsgH9gXkKgCycx\",\"uN5t57RETi5y2z5W8\",\"KdYQN3KAT2DyTzT2a\",\"Cybtjz3cF7RgoiqrN\",\"FHhrLhxKMZPQvAYPb\",\"H4abACFDH5t8CnnyH\",\"FNszm4weBdxjv5sZr\",\"HuNF3xTBzmatyGSTm\",\"CsJKoPjBsdQ4mBked\",\"ZqjP4M6dzu32To33K\",\"ubNzSj3pDRcF6tqQg\",\"4FS9W9DuBFAAAYpEX\",\"oBcs8GLX2ZFLXQy8y\",\"4fjSgcqhQQZM2ZFRP\",\"utTuvGdmu2sBHWBhQ\",\"eknMbqHMip6BhtACW\",\"8JyqsSbN2FJXPr3cw\",\"Rhtns9ovZZd9HmM54\",\"p8qqFdJ3FSk5x9z3G\",\"rK3jDTeWJgQBNG53r\",\"vDicH69i38E3H4kW4\",\"8Ni269XqCJJhs65Kw\",\"mjJ9SdCzug5JtT88w\",\"22RH9MqqPaJmWAjGW\",\"tCmiLknrWuTA4DbMg\",\"psJDHmAXhgnJfiPYg\",\"7ws5HaSof5kkoRwTM\",\"dcuCtzKDASzoAJKsd\",\"aEm3Wvj2rFYRL8Lrb\",\"qMxzbQiRAXWq23Duq\",\"cKMFeBZF2TNAjgD3Y\",\"xj6EKAGxYpi5aa9CC\",\"Dq24MSpogRmq6L4hX\",\"i9ZoySkaoX8uNsLkM\",\"j9DsgX5BQ3aKiNsLD\",\"7FrFTMBgyqucNiZCj\",\"ynD2APTJiL7gZzMBT\",\"CijyKA3KGtJnwYKoB\",\"7Hqh6FYESANWf7qXQ\",\"nPfdEqn8RZmDzAeMW\",\"tXcqs5WDEoK3Gie7m\",\"CyerWMQRXmJmFM3hf\",\"mzP65GWxAB7ugYdi4\",\"KJCDwGkoXh8qtbbKr\",\"68xmZfqgcC5MzTm62\",\"dYPkStFnLvAMsHSzZ\",\"FzTLWRMSnjgMk99qc\",\"FuYTQcDNjct58rqPa\",\"WiSWwNo7HzgAZQsLc\",\"tyLS9T6YMfg9fMtYJ\",\"YcCLwitFMAEJSnxAW\",\"hNn94W488mJCYZEB6\",\"9FCeFzjPA4jrQ7oHW\",\"qD2LrwaDrSdiybLKY\",\"Xee7p48WP4ct2ZMJn\",\"ScaZG69jog5kcqGtQ\",\"FSe2mfd98g84k5DW6\",\"kWobGYgZWJxN6ZddF\",\"JZ2eTbtNLQXApvmHJ\",\"i86RoCCnejKoCTR38\",\"gXTAie79kiw28tx5u\",\"w2HhxvSLmDhaGCAjE\",\"HF28xZKSLM9wEuqNg\",\"RGMbFMZXJr7DhcAJy\",\"g9FyJ8yeT9ic97Qp2\",\"nJXgbSQozcoE8Wn4N\",\"C2AfMipCicfD58WJ9\",\"gb9rvGus2Jv7bjZSs\",\"PXAcsKkssS2yLyDv2\",\"XMYbe9cezEyMp2QMo\",\"zd9FLSzsGz3evKafy\",\"a777e8chPvJkY3tKa\",\"j566eL9SKHK89ecND\",\"eMuCpJ2spXWkJjWNz\",\"cR3ibTMxLyEdDFCHY\",\"o4ixjQGSaYqA2JoM4\",\"J5T8gZqiZXFuFDTQ7\",\"iS5BrkGLzJyPK7nKt\",\"kNrnnMxhFZztMTBAX\",\"cAP3n5NY64uoMwzRR\",\"cZccqzRQ9GgjQF6Az\",\"Fk9kLwoG4Brf4KsKf\",\"d8qtzoLB264iP8tdY\",\"N2wnZXkhDH86mgjQ8\",\"dBzwBtRjZqB98DJeB\",\"wjc4iejpErBhxWwHo\",\"rEecHXXCTwgG5wWNA\",\"pDvFWMCD9fQwoBPcu\",\"EAbwXY89MiXwDu23f\",\"uSfXZWGCZSvmJnQ6s\",\"J8gFbDx2MLJzJNNBB\",\"NwXtaBc8xxL98hkyM\",\"DqNQn9Jsxcu5HijKE\",\"DpnYcMphntjsQ96qg\",\"RnTBbuFCrJWW6Ayvj\",\"F9kmWdPuR7wPwZzLh\",\"KDfmGkQoajgNwwAm3\",\"Ab8jnHBvLYb6JDbMp\",\"CTKmXtrqDYqJBnuy8\",\"AaKWw8amcFYLrEpNz\",\"LWCzZ8mb8gwrRNGfq\",\"6afLygh5LEDgwckNP\",\"fTNQmMvTZhhiGBCMe\",\"3cF6NXq3ZEwdkgSjb\",\"ZuuRwv4HkeT54MwA9\",\"uGuS9YRXW2nj4p6zf\",\"cRoHBaA7HjePc8wb2\",\"R4SjTgDnpigJYDLyL\",\"rfyEkETeoS96QNH4e\",\"Lg4t6SEWgtYz4u7Cj\",\"4fhjJBvLBWh6QeSih\",\"NzbRqGWspQnWMoDrF\",\"8BFSTCnoe2QggN64c\",\"YRAzEBJoLvSaiPtYx\",\"BdnE4RS5puoxo92mA\",\"GGdmhAvxXhqhhibJN\",\"fKsHKQ9ZTyEgmcQmQ\",\"ga7aTTEThzsELuC2j\",\"nFbmNzMQ38TncmfQX\",\"dNErCjyFobE5sn4Zh\",\"ov3aMrAbjhfD7uuMK\",\"yod5YhKtPqw2GfG9B\",\"axKxTApLgC8YovNNe\",\"ygDJ7HEzRoJZyPEF4\",\"5S9nX4rKsnCcnv4Cz\",\"Jqk2uJZZxEv5wZFze\",\"xP8kzdvDHBaDRGJfb\",\"WgwMhf3FtH3SfGnC5\",\"FtjrSJpj7syYyQAFz\",\"69JpNSZCbkrPhZmMw\",\"gCcqDKff6wz5Sj4xr\",\"KkTpHkBQHBSCQGm7o\",\"BajWtLookqBgcwmyv\",\"iF4tdvn5sA9CM4T6T\",\"tW7TaC7bjNajLGH5Y\",\"sJCkx3KCgbAKzdPJv\",\"CyzskHGsC6WSmYrLu\",\"AHodQW2h6YM7p4vSw\",\"agb6ou9deennRxzhv\",\"R8HfPE3kgrwButJ8L\",\"axdSNLZpiCDF8RS6n\",\"xdgy7nWSKCekXnaJM\",\"eL7Yv8HjSi6WBy3gq\",\"8rcaEyJW2rpzsK9Jb\",\"HKXLaSFXn8Xe6c4xz\",\"MZadzWAkLL5YYKMhT\",\"EfxwqhYdapX3dMQC2\",\"pWJWQDhqzDSmfaFam\",\"AXcnPX68zdMiLNSmu\",\"AYZrBpxmaHxq9th3T\",\"Cg3LKtEAJpsrdWroG\",\"R2qyrLYdka9gW3Zhh\",\"D2B5zXAoub33DEC86\",\"vkxXy4HA5zju68Pz5\",\"aXx8tRSKQw65RwBAB\",\"2bW8ZPE6Yzhr8gwJ8\",\"ywDSobPgL4ZqsuXyM\",\"TSvrS9F32gAjLH6wk\",\"cHQu4YYGymPFk36x2\",\"uo7MdTu2FWZhYE7nL\",\"rK3xSCovoqjmkgBL9\",\"8XBKbizkoNWG6NdHp\",\"tuRS8cMQqjckJ2vrf\",\"27pFuJpynEdft2Aag\",\"aKFKBn6sYqMB52ETX\",\"PQ7C5HXpmhx3QHxkN\",\"N9s9bkuJRsHaPxp9m\",\"GT9wLv8Lipyp6YYTp\",\"89AgcA2YrcNjbFjnD\",\"NswZ6bt26cnTWq3TZ\",\"yJuHs23hjbgjACcBH\",\"AwsLwdgLxzPRLoh9L\",\"PTDFuxAzou7W6asWt\",\"ambkvthmJjRB82EQZ\",\"mHvoroWGDLYbJqQJa\",\"pveK5gtGcm8k4wScM\",\"974cv448kw6Wu2JF6\",\"s5M5RvgqR9BhB9JoC\",\"KEmTti9Tza8A2FLQW\",\"9CoqdidjM9KbeKnHY\",\"LQxof8pGabGuWP7Gn\",\"7K2GEb5TZRtSpyyGS\",\"buX4mCQhtXCfBjeno\",\"pduNK68oazqQTtbLp\",\"Fb2wehA7QgTFWry2x\",\"RAwa3cQqjukpDSSZ2\",\"DYDJTyGgKFnBRLm2r\",\"ffjnHrx8Ym7A7pQWe\",\"no46qNkTbNeHepe64\",\"dj5AyG5fWP8FdsSmZ\",\"fSQSHjW3e72MrWxbD\",\"uTHfpJjGDdefX3zwT\",\"2QGRoQn2dRq3scu7k\",\"5wCHxMQ5Km2bjqcGZ\",\"qTQGbqpJsx3SRcHZq\",\"eXMad2WaEe3dMK85F\",\"MXGuntvz3byrP6WJc\",\"6dZFWNGPH8GKYA8sN\",\"LCuvvWMwiGuqTwNRi\",\"jWbd7SYDzLPjc9EDh\",\"qAby4AWXmTNeusvg3\",\"ZgWwEdWxjy83WpPQX\",\"mzbfEWpDFFJzLehvY\",\"5rX3qPFdvRQ9G7xZQ\",\"LqfyDRqkEKMrrjA9y\",\"eFh8z7sMmxkrFWZv9\",\"JS3hNM3XXkxPdg3yk\",\"p7js9trz2zk2RorCR\",\"oDN67zoApxcztnYdu\",\"eYfPWvZwnJQkHbSTK\",\"2HfNkb2SoqdyjKW3o\",\"2ptN2mhjFwFcHyPZd\",\"srJ34BaybkQh3qRkM\",\"di2hhADLx59Bj4ewM\",\"YaybbCdfjFQmsfgtp\",\"rrSC943cCKNG48sH4\",\"DEDniTrstQYGounXT\",\"pCMhfoZ5c6eBuCqbp\",\"B8n7KqbvEDjZzgj2D\",\"Nb6LYPoQP6KJZt8mz\",\"q9FfWNiMDKRiaCJ5j\",\"TmM3AN7g3fkh69ycj\",\"qQQ4hCQpzitmHSkjS\",\"pPpmP7xeJzGgK362R\",\"hkJGLuib5md8vZ9HD\",\"Lm6ChQCWBmaikmk5J\",\"7dQYiDeTcMztbGyso\",\"AFfw7cGg83uYk2Miy\",\"XD5nmvKQchKezPXhy\",\"sbJcFfQjQ59Wfg4Cd\",\"q6QsMYNMpPNtmyTeW\",\"iYXdNw7tKcgA3QwBX\",\"ghMkPtdFCpM6w8nax\",\"BJp2WkwLWGHHB5oQW\",\"T6iBEE2jp7f7iEF2P\",\"GdKtjPh8TcfmJuduv\",\"iojEnnY9FsMfYzp6f\",\"CHvzhtXnv8HTbPQ56\",\"Dwpiei4miJi7ry8W4\",\"ey3CASd6Je5LEJzfB\",\"iP7wNofhZXTkJ9ryG\",\"jBo3xAopr37GFzY8g\",\"NrRa4TS6uZR9xuXRt\",\"CKHKhvJcq9jNMqrmd\",\"7tbtTx6uxePv6eQwP\",\"PC3pLs36zNzpRDSuE\",\"c2q7mY39z5JPEMCaM\",\"u5u2YpHXiNgzDNJdX\",\"66a9xX73nmTEuKs9k\",\"yyo6YLQN2of6fxp49\",\"HBuJYgW2eRBJp9FoG\",\"FiaTpm7ehfDv43wSG\",\"Jzsn4jD7HHR9Dd7xt\",\"X4rzfxGgxx6CS7Bpz\",\"GGprTwrkjuccmrQRg\",\"dJzNF59j2p8jWZxiQ\",\"o8QeiBKMd7uQuZC5a\",\"mpiBDWsPrfX2ntudF\",\"9izxzCBrsRCbD9ajK\",\"4HLwjX6vwQehzdzER\",\"ghW3Nvg42xRxFzjPi\",\"deKGc49YpajMGhRAK\",\"SNjYcnXgeCMEdoSRs\",\"K6MfKMytoJJuSGewP\",\"8HAR8XNbN69nuEDFd\",\"w67KfQgZ6WAeY7K4Y\",\"tdfY4iBvD7oh2ufnN\",\"vA3sBoGvJmYKZHdmE\",\"F5PsTyZJoX6gF7DeH\",\"mMccJLRWf8sJxkg6P\",\"Fqt42JJ386rri8x9t\",\"XrqNzJ2FRG8HnGiR6\",\"w3QDkmjZj2dAFDsjq\",\"vCeeMuYDbz3MB4vsk\",\"2EbDCCJJvCfKkbYia\",\"tAF9Gf6PiGogbZuWs\",\"ScCZHcDBzx6LrFCyZ\",\"noZDgMMXkcPCLN8Ye\",\"mfJcJtAYaK9TN6mHg\",\"vRsovmMfvfvnR5miw\",\"5kazQPq8ZdDsx6kjf\",\"4yMggPMnAMqJN6TeR\",\"AJexRBN9cYQmqvYu6\",\"zMrNuQsBHWMJtaEhM\",\"9Ly8afdtofp8DXzrt\",\"hEpaAYfTpAp7xunYa\",\"XbxHXmh5ZmRN2gw3K\",\"4iGeoajtKD7rRRttr\",\"zC8WrPp5BC6c2exrW\",\"mvJBakQ35CWAnbbEZ\",\"StNu7DPyTgEStZsMY\",\"XujK3rHd3JcM9TLJy\",\"M2gFMJkocQSY6bsFR\",\"JwkwCHcXthnGDsdFr\",\"4TmgHkn5vqyHK3sYC\",\"mxX4rH5ELYkdZ2Mbw\",\"H9KZi2cjt4FwH7qog\",\"8PwfYqoDQFThzNtvf\",\"jNE5AHcJQWXz7efuP\",\"93ADqsBQnwTEosjbq\",\"C9LKGu2g5hSijvDzA\",\"B6476f5RCNomn6WRE\",\"BMEud9eeJnPDC8A2k\",\"7nq2NYeZbTh8ym4jk\",\"YXQvrgeiGzLd6cTW9\",\"AasGs8AeX9Lcb9xJn\",\"T6Rm8mREPMZSftzrC\",\"JiSpvq6C7azQEmENc\",\"X47NhQpbYhExFbv83\",\"g72DjnE5xwYbfDTcX\",\"Xudyhx2zwxBMHjtEF\",\"4Lwjr34ypKNQNQCar\",\"s246romvmahzaG9Xk\",\"XHShZ3WMPgGEA2vkR\",\"eDtaSCRGmPPER2wkH\",\"8YdAsw9XvwAgKKQnu\",\"hx7QfeGYMrvv3eJQ8\",\"jkbavR2ATFJcpmo8M\",\"5bLtjpWFFcBqe7ovM\",\"eHcgvkTGsH7ZziqBo\",\"yr822PZmmiDDenxpB\",\"qB6KSTYC6H2TQEQY6\",\"9pzFiFK3ANLjQfnr2\",\"eW9R2SCoYnY8HBAdL\",\"wwz3ixWSv8rFDHBXd\",\"g2mqHYvQmr78mET8i\",\"NGvCPuMiAP3xrRLfB\",\"Afnps7TJQuS9sipMb\",\"2MjzJ7yxh3eT3xbng\",\"gKnWjDjwrJh7MK2df\",\"CLypXaZksY99mpRCm\",\"E9ttMPTkLkKG6nZrg\",\"d9LBRxvADNBB5QJMB\",\"rCrbqMiaGPgHYTNxu\",\"9LrF5o2TK2iE8BZJh\",\"uK58g2EXxqxTaB2iA\",\"dzS6WBTMHyFEag6Fp\",\"B4y8aoyXJtskYPFEL\",\"FMyZPN6odEFtfuimF\",\"gbGzZz5Yq5hT357v8\",\"jEfGxSSmxvNTzBoRc\",\"ahWFxnaxt9bXSA4f3\",\"qaPjAANdnxFnWfj5d\",\"Qyfyyw6oC4EHAndzo\",\"kwR2mPo4qTLwRaspJ\",\"mw9464S5dnenqzvpm\",\"5QN8R22z43SrwoHDz\",\"yAouD3PxzED8a4gap\",\"pwWtbXEjzuvrhEGwt\",\"cdXmwjupCXSvJTSNo\",\"vAbK8sCfKyFC78HYg\",\"5nbHH4eApn6So9h2n\",\"GgQqni8TkbqEBGcsy\",\"Wi4H6ayKsNDWWQCG5\",\"sMcFMPkMJC4Kh6ymj\",\"tR9grPBLncwacBTzr\",\"mdRQaGT98ycMt87S2\",\"wrL4iX2CCSqDCCty3\",\"7txFzDQ43vJ7qCY88\",\"x6zWWvmst3aGNr3Cr\",\"rraTtctZqnjXu2L2x\",\"Ne8mK9DDHG8TRkoxG\",\"K42ijC8Jy8GHBnobP\"],\"total\":426},\"flags\":0},\"summary\":\"Given a string worm create a function that takes the length of the worm and converts it into millimeters. Each - represents one centimeter.\\n\\nExamples\\nworm_length(\\\"----------\\\") ➞ \\\"100 mm.\\\"\\n\\nworm_length(\\\"\\\") ➞ \\\"invalid\\\"\\n\\nwormlength(\\\"-------\\\") ➞ \\\"invalid\\\"\\n\\nNotes\\nReturn \\\"invalid\\\" if an empty string is given or if the string has characters other than -.\",\"tags\":[\"strings\"],\"timestamp\":{\"$date\":1603046334818},\"title\":\"Length of Worm\",\"family\":[{\"_id\":\"Qs75Qjvw4TWiBDyh2\",\"language\":\"cpp\"},{\"_id\":\"5aGCby28ZfsSZr4cH\",\"language\":\"java\"},{\"_id\":\"Qt2F2qW9ZMMMqrrNT\",\"language\":\"javascript\"},{\"_id\":\"6LwzPRc6LrauEgr7H\",\"language\":\"python3\"},{\"_id\":\"qub7ErYAJH35t5FiM\",\"language\":\"ruby\"}]}}"]