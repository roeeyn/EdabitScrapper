a["{\"msg\":\"result\",\"id\":\"133\",\"result\":{\"_id\":\"68KgdtdwabrXydZFM\",\"author\":\"BijogFc24\",\"authorId\":\"Nb6LYPoQP6KJZt8mz\",\"code\":\"def generation(x, y):\\n\\tg = {\\n\\t\\t-3: {\\n\\t\\t\\t\\\"m\\\": \\\"great grandfather\\\",\\n\\t\\t\\t\\\"f\\\": \\\"great grandmother\\\",\\n\\t\\t},\\n\\t\\t-2: {\\n\\t\\t\\t\\\"m\\\": \\\"grandfather\\\",\\n\\t\\t\\t\\\"f\\\": \\\"grandmother\\\",\\n\\t\\t},\\n\\t\\t-1: {\\n\\t\\t\\t\\\"m\\\": \\\"father\\\",\\n\\t\\t\\t\\\"f\\\": \\\"mother\\\",\\n\\t\\t},\\n\\t\\t0: {\\n\\t\\t\\t\\\"m\\\": \\\"me!\\\",\\n\\t\\t\\t\\\"f\\\": \\\"me!\\\",\\n\\t\\t},\\n\\t\\t1: {\\n\\t\\t\\t\\\"m\\\": \\\"son\\\",\\n\\t\\t\\t\\\"f\\\": \\\"daughter\\\",\\n\\t\\t},\\n\\t\\t2: {\\n\\t\\t\\t\\\"m\\\": \\\"grandson\\\",\\n\\t\\t\\t\\\"f\\\": \\\"granddaughter\\\",\\n\\t\\t},\\n\\t\\t3: {\\n\\t\\t\\t\\\"m\\\": \\\"great grandson\\\",\\n\\t\\t\\t\\\"f\\\": \\\"great granddaughter\\\",\\n\\t\\t}\\n\\t}\",\"difficulty\":0.5089285714285714,\"familyId\":\"fTASkrYSaZN5xFpcy\",\"instructions\":\"Try finding your ancestors and offspring with code.\\n\\nCreate a function that takes a number `x` and a character `y` (`\\\"m\\\"` for male, `\\\"f\\\"` for female), and returns the **name of an ancestor (m/f)** or **descendant (m/f)**.\\n\\n- If the number is **negative**, return the **related ancestor**.\\n- If **positive**, return the **related descendant**.\\n- You are generation `0`. In the case of `0` (male or female), return `\\\"me!\\\"`.\\n\\n### Examples\\n```\\ngeneration(2, \\\"f\\\") ➞ \\\"granddaughter\\\"\\n\\ngeneration(-3, \\\"m\\\") ➞ \\\"great grandfather\\\"\\n\\ngeneration(1, \\\"f\\\") ➞ \\\"daughter\\\"\\n```\\n\\n### Notes\\nCheck the **Resources** tab for helpful hints.\\n\\nGeneration | Male | Female\\n:--- | :--- | :---\\n-3 | great grandfather | great grandmother\\n-2 | grandfather | grandmother\\n-1 | father | mother\\n0 | me! | me!\\n1 | son | daughter\\n2 | grandson | granddaughter\\n3 | great grandson | great granddaughter\",\"isHidden\":false,\"lab\":\"Test.assert_equals(generation(-3, \\\"m\\\"), \\\"great grandfather\\\", \\\"3 generations before you, male...\\\\n\\\")\\nTest.assert_equals(generation(1, \\\"f\\\"), \\\"daughter\\\", \\\"1 generation after you, female...\\\\n\\\")\\nTest.assert_equals(generation(-3, \\\"f\\\"), \\\"great grandmother\\\")\\nTest.assert_equals(generation(-2, \\\"m\\\"), \\\"grandfather\\\")\\nTest.assert_equals(generation(-2, \\\"f\\\"), \\\"grandmother\\\")\\nTest.assert_equals(generation(-1, \\\"m\\\"), \\\"father\\\")\\nTest.assert_equals(generation(-1, \\\"f\\\"), \\\"mother\\\")\\nTest.assert_equals(generation(0, \\\"f\\\"), \\\"me!\\\")\\nTest.assert_equals(generation(1, \\\"m\\\"), \\\"son\\\")\\nTest.assert_equals(generation(1, \\\"f\\\"), \\\"daughter\\\")\\nTest.assert_equals(generation(2, \\\"m\\\"), \\\"grandson\\\")\\nTest.assert_equals(generation(2, \\\"f\\\"), \\\"granddaughter\\\")\\nTest.assert_equals(generation(3, \\\"m\\\"), \\\"great grandson\\\")\\nTest.assert_equals(generation(3, \\\"f\\\"), \\\"great granddaughter\\\")\\nTest.assert_equals(generation(0, \\\"m\\\"), \\\"me!\\\")\\n# Author: Jeroen Ndh\",\"language\":\"python3\",\"summary\":\"Try finding your ancestors and offspring with code.\\n\\nCreate a function that takes a number x and a character y (\\\"m\\\" for male, \\\"f\\\" for female), and returns the name of an ancestor (m/f) or descendant (m/f).\\n\\nIf the number is negative, return the related ancestor.\\nIf positive, return the related descendant.\\nYou are generation 0. In the case of 0 (male or female)\",\"tags\":[\"strings\",\"logic\",\"conditions\",\"objects\"],\"timestamp\":{\"$date\":1599020512608},\"title\":\"Which Generation Are You?\",\"stats\":{\"completed\":{\"total\":395,\"ratings\":[1,1,1,1,1,0,0,1,1,1,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,1,2,1,0,0,0,2,0,2,1,1,0,0,2,0,0,0,0,3,1,0,0,1,0,0,0,0,0,0,2,1,0,0,0,0,0,2,1,5,0,0,1,0,1,0,0,1,0,5,0,0,0,0,2,2,1,2,0,0,0,2,0,0,1,0,0,2,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,2,1,0,0,0,0,1,0,1,0,2,1,3,0,1,1,0,0,1,1,0,0,0,0,1,0,0,0,0,1,1,0,2,0,1,1,0,0,2,1,0,0,0,0,0,1,0,0,2,1,0,0,0,0,2,0,2,1,0,1,0,0,1,0,0,0,0,1,2,0,0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,1,0,0,1,0,1,0,1,0,0,0,0,1,0,0,0,2,0,0,0],\"rators\":[\"Nb6LYPoQP6KJZt8mz\",\"KZ2xddpM2f9JRaryB\",\"rrSC943cCKNG48sH4\",\"qD2LrwaDrSdiybLKY\",\"DvquuxqkkE5DzrcZe\",\"QRv96jmNaYsWkxQEG\",\"wRttWTM59y8m5mx7x\",\"5HCu9Ydd86QgHDRNP\",\"Kh3Pc2ZRusurLaMyP\",\"g4NCSxxHqHCGMpWwT\",\"DEDniTrstQYGounXT\",\"zd9FLSzsGz3evKafy\",\"aEm3Wvj2rFYRL8Lrb\",\"oHbErJxjYJhD66d5w\",\"72oyXuXwKRY95fpkt\",\"6428wKHtwKkFdvBs5\",\"XCskQeAJHrYmAqmoh\",\"NP2RxM3eBd3drnDwP\",\"6HgMANhu6WiGyXSGN\",\"tAF9Gf6PiGogbZuWs\",\"HAtNvtvpTjB2DkhnG\",\"PnzR8TWfcT5QHrek8\",\"9CoqdidjM9KbeKnHY\",\"wK5sphfnnMwsrA8Qh\",\"oBcs8GLX2ZFLXQy8y\",\"iBsN2jda8GGPgqj3u\",\"A4qzbaZ9gapHzgnes\",\"aKzYNPqBqb3J3ZgyD\",\"NvGzoJLRw3s4MxsDR\",\"gJYuGdkXEWWmGRLzu\",\"gb9rvGus2Jv7bjZSs\",\"RGMbFMZXJr7DhcAJy\",\"AaKWw8amcFYLrEpNz\",\"hMfTqkovE8pApFYJN\",\"xjyixzXzqqqTfJARd\",\"PPhq9DcoWd4auHM4s\",\"jNvegJWCk5HCtEMbK\",\"8JyqsSbN2FJXPr3cw\",\"HuNF3xTBzmatyGSTm\",\"htJ2fQTJiztMfztKz\",\"N7P4AnS8nzK4oupHv\",\"4hzd4qde3g9We8N4E\",\"7HAL7H6NJmc4NC8Q5\",\"gafZiQRyiKZYGgdFx\",\"FEYpu9RWysAgW3XnP\",\"DPi9QGLctq2y76KuE\",\"Yp7uvStL97cC9fKkY\",\"ta7nX75vFWxCZhcMR\",\"yjtdwc2AC4jA2RWtn\",\"oyKcm3zqdy8Ko5P5d\",\"KdYQN3KAT2DyTzT2a\",\"PXAcsKkssS2yLyDv2\",\"MnrmRMy2PP3Mk4sSY\",\"qaPjAANdnxFnWfj5d\",\"yEvXDzXnEPNz6tTCK\",\"j7ebNFtte6fSkMWjj\",\"LqTWjkqo9irQzGSL2\",\"aoorhaj8t7imRsEiE\",\"CccXoqbXeoMydtEhh\",\"cR3ibTMxLyEdDFCHY\",\"7K4emAv8FE9xcDNQy\",\"AYZrBpxmaHxq9th3T\",\"b8CeGDxWQWNNdeShA\",\"WgAYYEMrxB6NDWQAn\",\"M96izkMGC6hpbxnTx\",\"jAW7GX9qk5vYuLrYi\",\"cZccqzRQ9GgjQF6Az\",\"AGGpkckh9tB3vYJAW\",\"xF3FiAL2KJL4kuWdp\",\"RCzpsCinz5SQnBAta\",\"dSd7wHgXGQeG5BQ2P\",\"9qoWqLcHGiDX429rE\",\"wHYNoKpbFrEybjfd8\",\"HCDX4KJ9gkppzPoEa\",\"yiw24yGeMz8xWzLGt\",\"Q9afpRu3u8zuWuzLQ\",\"8JDkF84xzTWTbTwak\",\"PHYPYQ8bXGY6nYKwN\",\"DBKFm4dNgrseHCoiR\",\"csxCzWqzHW8JsrzQq\",\"M8dQuMrEpP8Hc3tHN\",\"NzbRqGWspQnWMoDrF\",\"J3upzLHuEwXH7Z2hx\",\"JoKQzpY7E7muQ8WYe\",\"JYvJJKjerbQYjNG9b\",\"EfxwqhYdapX3dMQC2\",\"jWbd7SYDzLPjc9EDh\",\"q8g2t2bZpgoh6zTYN\",\"hHJRE5Mb2yhF5bkiD\",\"PDK3Bb98sENmo5wnT\",\"iKCnQydNKZp3KoCoP\",\"MCw7uAcoWcSTBTmr3\",\"dDFzTqzPhpkeTcG2b\",\"vfTKm6ChiZFd3cDDy\",\"t8rFyZcxp3rn9tzka\",\"s4YHxEDBTTq5EBMRs\",\"iY25XNrJX2giBLvnd\",\"sKfrD9gjCDHuqLzSk\",\"Ds7L5bksw2QRHjrKL\",\"KGghHK93Tt56gi92A\",\"EY5eF3aLFxaRM3gJh\",\"N2wnZXkhDH86mgjQ8\",\"dky93oMkJsJjEJKk2\",\"6ki4yYXmxm5hF2otC\",\"RxXWs2ZStJTvaNfaD\",\"3ukSjjy2zHNnMTYB5\",\"nTiHKkA74LNuZmZAB\",\"kExLqWhAWTsapTqEW\",\"tjwZc6m8ScsbxkaMg\",\"7D76ZPLjgjZideoy9\",\"4CZKpF7WcHZLbQS9Z\",\"F9kmWdPuR7wPwZzLh\",\"HcdukZiuzgvoHjjz3\",\"wypdvuJQZB2TFyb2g\",\"Lg4t6SEWgtYz4u7Cj\",\"Ne8mK9DDHG8TRkoxG\",\"4EWT5veSFPbCaowty\",\"XbxHXmh5ZmRN2gw3K\",\"dYPkStFnLvAMsHSzZ\",\"YRAzEBJoLvSaiPtYx\",\"9XNbjEKxsC89aX6ae\",\"AFfw7cGg83uYk2Miy\",\"rJGeRSCjGzRuYfHZS\",\"Amg84cBAt8p7GX34n\",\"vgT3ehH2o2KC94NsY\",\"gEqTEX2vrEzoYcFas\",\"Sq6otkoabSgCLqsut\",\"YoWyETmZcgAii9jyW\",\"zFL4DfdwXCdyGLMz9\",\"migNc2HGygHufcxYn\",\"Fb2wehA7QgTFWry2x\",\"RHEs8vmc8bCL4hYHq\",\"Th5JTNFvia5ksvSc7\",\"Yg5KsgKxN3tWmuEKG\",\"3LiSLdtN58n46NEqg\",\"J5T8gZqiZXFuFDTQ7\",\"Jqk2uJZZxEv5wZFze\",\"NMe4bCB88DQ8F8Nj9\",\"5S9nX4rKsnCcnv4Cz\",\"vDuJoZJRFbGyzLJ3d\",\"RosFXZYJkcRwjkaog\",\"PBnvAuiKXwjqjKG33\",\"iS5BrkGLzJyPK7nKt\",\"5XiuAqicKD4hBdu63\",\"RSTdK2S8CecymSS6h\",\"AXcnPX68zdMiLNSmu\",\"igLmeTgCMEPu7fQTd\",\"CkcqajsaNu4nso9oY\",\"5HTSi5wQNAdLm57LB\",\"xNCLJDm9Bni6gByMz\",\"uN5t57RETi5y2z5W8\",\"JS3hNM3XXkxPdg3yk\",\"kAkLAF9T5McSxXJCT\",\"d8qtzoLB264iP8tdY\",\"PC3pLs36zNzpRDSuE\",\"QTZTmQEmkPv5sxQL4\",\"PexKJN2gNdthuHKxZ\",\"fW3mQfbTKhp7enxGP\",\"nfXGHENb5md7m355s\",\"DpnYcMphntjsQ96qg\",\"YTK48HPYMZfyn3eNb\",\"5hQnRWiKkhgKJXNMP\",\"Krto2sGMfGWBLcL7n\",\"buX4mCQhtXCfBjeno\",\"Nw5Co4WxYtGovKnmA\",\"MXGuntvz3byrP6WJc\",\"3YDiP56vf8NysvNpX\",\"DDFvEXnueWTSBn7EX\",\"Wp5CZXqvjwTpt5SKN\",\"qAby4AWXmTNeusvg3\",\"MyyfuAJrdaoBE2xGk\",\"mQjpf5TyF358J8Anz\",\"8PwfYqoDQFThzNtvf\",\"qkuvEvJycTXvF22cy\",\"F7wta4nHmabMr9dfd\",\"Fk9kLwoG4Brf4KsKf\",\"5wCHxMQ5Km2bjqcGZ\",\"ZyrfhDTZHb8LymH5b\",\"iZhkeyxpRsrNhmznM\",\"mzbfEWpDFFJzLehvY\",\"eYfPWvZwnJQkHbSTK\",\"srJ34BaybkQh3qRkM\",\"2MjzJ7yxh3eT3xbng\",\"HqmxnQJM66Y57twhn\",\"6LbPw9yW6HHDfn8B8\",\"vCxuabDxEv9YC3Szb\",\"q9FfWNiMDKRiaCJ5j\",\"YwAvPdqD6Xi2qjapZ\",\"XD5nmvKQchKezPXhy\",\"GZgFDSZdgKBuixp22\",\"zERid8pE9JnysiN5Q\",\"k2Eo3wyfZZ6KxvKhN\",\"ZMer84RtaKiXhLoeW\",\"cCFRcwA8Z4TCwsMGo\",\"XrqNzJ2FRG8HnGiR6\",\"9pzFiFK3ANLjQfnr2\",\"m7KZ5donpz5F6AR3z\",\"pPpmP7xeJzGgK362R\",\"DTyNcDkiScCjgJt28\",\"6LhWEvsGQm4iL9Hei\",\"7dQYiDeTcMztbGyso\",\"7q8oBsCHwn48Ppnrq\",\"q6QsMYNMpPNtmyTeW\",\"Afnps7TJQuS9sipMb\",\"3cF6NXq3ZEwdkgSjb\",\"XujK3rHd3JcM9TLJy\",\"2QGRoQn2dRq3scu7k\",\"C5h42RTzbdrpPfeZo\",\"kjvgTyRFyKHv44DcH\",\"4bb7pim4ewTwrMTEA\",\"CHvzhtXnv8HTbPQ56\",\"DfHHpvnubuFmeNky9\",\"iojEnnY9FsMfYzp6f\",\"DFpZcskPncmo7fuzR\",\"zC8WrPp5BC6c2exrW\",\"pwWtbXEjzuvrhEGwt\",\"XEjiqMFvDTLTo2X9G\",\"s5M5RvgqR9BhB9JoC\",\"XxLKk8pkJnSjfZNHx\",\"SgPjF69J25jT3dn4X\",\"T6iBEE2jp7f7iEF2P\",\"a2Kmh6ekWqQQooHiQ\",\"66a9xX73nmTEuKs9k\",\"x2Cz7S8rCKJqCE3Xe\",\"4TmgHkn5vqyHK3sYC\",\"jL4y5fTJAMBjhZmko\",\"eMuCpJ2spXWkJjWNz\",\"YZL9ec49hQdqcwu2j\",\"9Ly8afdtofp8DXzrt\",\"mvJBakQ35CWAnbbEZ\",\"T6Rm8mREPMZSftzrC\",\"wjc4iejpErBhxWwHo\",\"jkbavR2ATFJcpmo8M\",\"M2gFMJkocQSY6bsFR\",\"FxbTzThBiTnRzfirA\",\"sHjfbGQGLHE6JR6qu\",\"5PaQgfQznXjaF9e6F\",\"sbJcFfQjQ59Wfg4Cd\",\"kqYkfcZMkp5u2EdXZ\",\"AasGs8AeX9Lcb9xJn\",\"vhmyKoH2TxNHKuFzF\",\"bur3yQ8s34zqKGEro\",\"FiaTpm7ehfDv43wSG\",\"hZ2JDAEG2P5rMLWEW\",\"Cg3LKtEAJpsrdWroG\",\"NYyhWY7soeTZ6ymd5\",\"cdXmwjupCXSvJTSNo\",\"JiSpvq6C7azQEmENc\",\"TCvpT4EPb8qNssNB7\",\"syRNbbPdLCGXbH2Gy\",\"KypQdzThzogKXwkXE\",\"sDRY37TfoncsA2FSR\",\"9NcZ23yufhtou68dT\",\"pQwhNKiCne4gEZgcn\",\"zBk2cwJ9SLAhFuM3K\",\"hs8WbxhNtYBiqEj9C\",\"54BFnXEjY3FuRNYpN\",\"iYXdNw7tKcgA3QwBX\",\"gGXghWEN4u5vuoXcR\",\"s2Y76rR2h2fPKibsK\",\"gKnWjDjwrJh7MK2df\",\"j22fPdGZvaryte8j5\",\"PTDFuxAzou7W6asWt\",\"Nv8HhfMn2Rddq6Bei\",\"YmQb9Mo4Xcg2vzgbn\",\"dqwatKFAeGpjmf5dm\",\"hy4yeoAbZcrTQwkPZ\",\"AQSqD9oNv2uPfxZCR\",\"5nbHH4eApn6So9h2n\",\"reSPwrcdzBAnDWs2E\",\"b7yQWr6eJFxYTmt3j\",\"PmRyaLmhAF4MMLBtM\",\"ecytnKJxjCPk8Kbif\",\"8ynPy35NQFsnh4WqC\",\"9LrF5o2TK2iE8BZJh\",\"LWCzZ8mb8gwrRNGfq\",\"fGvJRtjbJFJJZLCnW\",\"5QN8R22z43SrwoHDz\",\"B4y8aoyXJtskYPFEL\",\"o2Q8uM5DwJnSRmerd\",\"YZsZjfvd3PnLhDJrR\",\"yAouD3PxzED8a4gap\",\"WHKWwP3BstndGzwTM\",\"rnwbnaczeRqK88Nkw\",\"dzS6WBTMHyFEag6Fp\",\"hRfdHT8bWztZuCqzi\",\"5bXJ7R7pbwthZ8T3H\",\"arWdYjT3J9QKzoPLd\",\"rF97GDLqCgynr7BaD\",\"3SgSNoAB3sxaYeT3w\",\"Q7de4prB7j2RN7TCJ\",\"ZvoqkwZQC52on5hpY\",\"afvP29FhRou2bTaav\",\"vAbK8sCfKyFC78HYg\",\"N2sNut8aET59YNhAy\",\"r83jJeskFETo3RLhZ\",\"tR9grPBLncwacBTzr\",\"fMp8sPsKSECdfgF9j\",\"GokscN3Q3fyhABWgC\",\"QWjsXnLaJ7xfL3Amq\",\"uEwJFW6WwqT2KDT42\",\"BrTDhPJcACL2bsrpJ\",\"4sSXLSBZDxK2Swoo7\",\"PKu9i6fmR67WGCgad\",\"FRN2W8RYpJ6GPhgRy\",\"Si3HYCLMe8PM47rRt\",\"FT2wBacm3JxrYmZDW\",\"acENs2fSF9d7hkTZx\",\"rQA9SE8nuwFueaHsR\",\"AwXQLqnTYzcCQrnqQ\",\"EE6qCDCRphjXXdE3n\",\"quYcmxS33qHALzb4Z\",\"E45zy9qvm9DeJhDWL\",\"SjPPNc7xzsHhmiBdG\",\"dCHJHgKdWNMGaAA7W\",\"rraTtctZqnjXu2L2x\",\"F8dA24AosSC8XXb7D\",\"DhfJpC3Y72teNfiKE\",\"oaJbwGAbtpgYhMEgd\",\"4akHBgnDEDj3Rkv5n\",\"FGYBMbExbwHLD2Wdn\",\"NioGGZL9KCn5Ln96t\",\"XYwCvWPkjJu4Zn5Qu\",\"PwZPGSrYmD8nq7fmv\",\"Lkck3xcTazL6zviss\",\"5SzsELPGd4mcE3XvC\",\"Wi4H6ayKsNDWWQCG5\",\"ta3DbDAhs5SZMzQYL\",\"NwczjpfNN8jXy5RF6\",\"xT2YiBTkgtZ9t6XPA\",\"mdRQaGT98ycMt87S2\",\"q8QGySvjPML3PWtw7\",\"u5u2YpHXiNgzDNJdX\",\"bM2eBtpFQCv8632C9\",\"PysASL3tetsgX6Yd5\",\"zLZPR575DHBctqpMF\",\"Hu4GorJ4NSqYP9Qfh\",\"cCgyd9hGpvWkuvvRP\",\"CTW3MRyc4wNkcjGZQ\",\"qjd7Y3B7nNxdx5PgM\",\"DaNtATvbvxySCNfax\",\"M4vq8ATaS9Jg5X7iP\",\"i4dQDnvu65fkvNpCu\",\"vFxjNmdwGWXmkxq5X\"],\"quality\":[5,5,5,5,4,5,4,4,1,5,5,5,4,4,5,5,5,5,5,5,4,5,4,5,2,5,5,2,5,3,5,5,3,5,5,5,5,5,5,5,5,5,5,3,5,5,5,5,4,5,3,2,5,4,5,5,5,3,5,5,5,4,5,5,5,5,4,4,5,4,5,5,5,2,5,4,5,5,5,5,5,5,5,5,5,5,5,4,3,5,5,5,5,5,5,4,5,5,5,5,2,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,5,5,5,5,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":4.592,\"family\":[{\"_id\":\"AFM3cE9cdEPGc6rh9\",\"language\":\"cpp\"},{\"_id\":\"48EJWLhF224na8po3\",\"language\":\"javascript\"},{\"_id\":\"68KgdtdwabrXydZFM\",\"language\":\"python3\"},{\"_id\":\"jTHCGQmrsJNRR2ioX\",\"language\":\"ruby\"}]}}"]