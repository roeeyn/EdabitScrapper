a["{\"msg\":\"result\",\"id\":\"791\",\"result\":{\"_id\":\"2FR33kRmz87xRMZuq\",\"author\":\"Alfre2000\",\"authorId\":\"HRdtZBvxDh8YzkvQk\",\"code\":\"def histogram(lst, char):\\n\\t\",\"difficulty\":1.3693181818181819,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"mwyyCgYYjinsAv39Q\",\"instructions\":\"Build a function that creates histograms. Every bar needs to be on a new line and its length corresponds to the numbers in the list passed as an argument. The  second argument of the function represents the character that needs to be used.\\n\\n```\\nhistogram(lst, char) -> str\\n```\\n\\n### Examples\\n```\\nhistogram([1, 3, 4], \\\"#\\\") ➞ \\\"#\\\\n###\\\\n####\\\"\\n\\n#\\n###\\n####\\n\\nhistogram([6, 2, 15, 3], \\\"=\\\") ➞ \\\"======\\\\n==\\\\n===============\\\\n===\\\"\\n\\n======\\n==\\n===============\\n===\\n\\nhistogram([1, 10], \\\"+\\\") ➞ \\\"+\\\\n++++++++++\\\"\\n\\n+\\n++++++++++\\n```\\n\\n### Notes\\nFor better understanding try printing out the result.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(histogram([2,4,5,6], \\\"o\\\"), 'oo\\\\noooo\\\\nooooo\\\\noooooo')\\nTest.assert_equals(histogram([4,2], \\\"*\\\"), '****\\\\n**')\\nTest.assert_equals(histogram([20,1,12], \\\"H\\\"), 'HHHHHHHHHHHHHHHHHHHH\\\\nH\\\\nHHHHHHHHHHHH')\\nTest.assert_equals(histogram([2,1,2,4,5,2,3], \\\"#\\\"), '##\\\\n#\\\\n##\\\\n####\\\\n#####\\\\n##\\\\n###')\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,2,0,1,2,1,1,1,2,2,1,3,1,1,1,1,2,2,0,2,1,0,2,1,1,1,2,2,2,2,1,2,3,0,1,0,0,2,1,1,2,2,0,1,1,0,0,2,1,1,2,2,0,1,2,2,2,0,2,1,3,3,1,1,2,1,1,2,1,2,2,2,2,2,0,1,2,2,2,2,2,2,0,2,0,2,2,1,2,0,2,1,0,2,1,2,2,1,2,1,2,1,2,1,1,2,1,1,3,2,2,2,2,1,1,0,1,2,0,2,0,1,1,0,0,1,3,0,2,2,0,0,3,1,0,2,2,0,2,2,1,2,1,2,2,2,2,2,1,1,0,2,2,2,0,4,1,2,0,2,1,2,2,1,2,1,2,0,1,2,2,1,2,2,0,0,1,0,1,2,2,1,2,2,1,0,2,0,2,1,0,0,1,1,2,0,2,0,1,2,1,2,3,2,2,2,1,1,0,2,0,1,2,1,2,2,2,1,2,2,1,2,2,2,0,0,2,3,2,3,1,1,2,2,1,2,1,2,2,2,1,0,2,1,2,2,2,2,1,2,0,0,1,0,2,1,1,1,2,2,2,0,2,1,3,2,1,1,2,1,3,2,2,1,1,1,1,2,1,1,1,2,0,2,1,1,1,2,2,2,2,1,0,2,2,2,0,2,1,2,2,4,1,2,1,1,0,2,1,2,1,2,2,2,2,2,2,2,1,0,2,1,0,0,1,0,1,0,1,0,0,2,1,1,1,1,2,1,0,2,1,1,1,1,2,2,1],\"rators\":[\"HRdtZBvxDh8YzkvQk\",\"8PwfYqoDQFThzNtvf\",\"W5TajitmCyxz87zAC\",\"tAF9Gf6PiGogbZuWs\",\"DEDniTrstQYGounXT\",\"s5M5RvgqR9BhB9JoC\",\"gb9rvGus2Jv7bjZSs\",\"KdNDysEsy2TW5QRJ2\",\"a777e8chPvJkY3tKa\",\"4yNLEwL2rsx4EE5Nt\",\"gJYuGdkXEWWmGRLzu\",\"Nb6LYPoQP6KJZt8mz\",\"8JyqsSbN2FJXPr3cw\",\"jvpNtwqdbTuh6c4oe\",\"DWp2uozZmattoNS87\",\"aEm3Wvj2rFYRL8Lrb\",\"ZrKCkX7xxGGZzauFW\",\"H4abACFDH5t8CnnyH\",\"HF28xZKSLM9wEuqNg\",\"2ptN2mhjFwFcHyPZd\",\"3cF6NXq3ZEwdkgSjb\",\"Ecg4m7srYGgZsb4Ck\",\"n2BRY9X8899dcG8Bw\",\"AasGs8AeX9Lcb9xJn\",\"syRNbbPdLCGXbH2Gy\",\"FEYpu9RWysAgW3XnP\",\"FjFasnZRHBKhKBoTJ\",\"DoDsp3ets8frF9W3C\",\"DrkR35NqnP9NDLbq6\",\"YcCLwitFMAEJSnxAW\",\"Yp7uvStL97cC9fKkY\",\"zd9FLSzsGz3evKafy\",\"mDWNyaaQ9hvPCRzSd\",\"aRqQ42J5zqCmBNd8w\",\"PXAcsKkssS2yLyDv2\",\"eMuCpJ2spXWkJjWNz\",\"6SKDJwXpev4qPSzgM\",\"8zWoQQvtYdg5yoweM\",\"8BFSTCnoe2QggN64c\",\"jNvegJWCk5HCtEMbK\",\"GGprTwrkjuccmrQRg\",\"iQx6PmRfjXYBq27Y4\",\"2QGRoQn2dRq3scu7k\",\"MKT7khMBGXzA22ykf\",\"Lfut9z3euZ3odxFcH\",\"bJxaKHJqR82EWw8Su\",\"R4SjTgDnpigJYDLyL\",\"NfMJuiBk6FN5Jc6ow\",\"NNE5HNRXAkmhrWgyQ\",\"yNjkHfHESBAnCssPB\",\"rfyEkETeoS96QNH4e\",\"nC4sPB69yYuTSks9T\",\"PhceyfmFntJcn5Fhf\",\"PTDFuxAzou7W6asWt\",\"jNE5AHcJQWXz7efuP\",\"wi6FPhs9Te7P8xzqx\",\"9pzFiFK3ANLjQfnr2\",\"M35nSp9motwe2cDrP\",\"KQibXmPD86WnYBrBj\",\"yr822PZmmiDDenxpB\",\"iojEnnY9FsMfYzp6f\",\"wLo92QNAEHLjcrx2M\",\"3DkavJuknW2fMtmdQ\",\"KGiM2KiXnNJYfSzBF\",\"KBfJFkYQ2RbnYd3hL\",\"AxR4Ee5stq5eJdLAz\",\"yYxPzFqBgtQ9fsyHM\",\"FvFhg2wELM3SCZDZQ\",\"LFSASkxgw9hr3KqmC\",\"uM6QQ6mE546xYRHeH\",\"GSoEdG3NzkmwFHr9D\",\"uouMMdEWBuLBWPbzr\",\"2innwjWqxJHo4eRGh\",\"rqeHYkD4nZpboXkFe\",\"NzbRqGWspQnWMoDrF\",\"Pe8vWpDHRuH9nSGKW\",\"sbJcFfQjQ59Wfg4Cd\",\"iS5BrkGLzJyPK7nKt\",\"bAH58r7WHNxfiJzor\",\"q4vhNKvdnjB6XTmxE\",\"GM2X83qnuLXTHe5zA\",\"r3hY3XhLXZ8bgj9tZ\",\"mxX4rH5ELYkdZ2Mbw\",\"yAouD3PxzED8a4gap\",\"dzS6WBTMHyFEag6Fp\",\"iBTooWAGe7dD9svva\",\"Q9afpRu3u8zuWuzLQ\",\"ssGSikKpzBezNd2od\",\"p5EN3tadeCfPkW3CB\",\"yjtdwc2AC4jA2RWtn\",\"3tPSdXsEsEGnBRDsY\",\"CTKmXtrqDYqJBnuy8\",\"HqmxnQJM66Y57twhn\",\"oBcs8GLX2ZFLXQy8y\",\"ypGdjKLkswPZXo89K\",\"6gS4E2C84vBYTYeDZ\",\"SkQcb2sRn4as5KpnN\",\"pWYjN62ZAKQZ7Xp3W\",\"5cvXbqKvSuFH2K5bd\",\"EMJ6uvBZkie429gdg\",\"ekQh3jzgGLsEMbKo3\",\"6HgMANhu6WiGyXSGN\",\"ta5CrWnBCRusD2WMo\",\"cR3ibTMxLyEdDFCHY\",\"YA7SDhpgEtsqynvNL\",\"i2ZyBQDbgjH3xEBn8\",\"p8qqFdJ3FSk5x9z3G\",\"nys6kJatAFrKL59Pf\",\"4ZicxybyvEsuA9iET\",\"JS3hNM3XXkxPdg3yk\",\"XrqNzJ2FRG8HnGiR6\",\"ji5f27FPz4wRRF6Ls\",\"WoztrMk8bJqBAei2w\",\"RehJGBFS6CYiWdjZx\",\"C9LKGu2g5hSijvDzA\",\"M8dQuMrEpP8Hc3tHN\",\"H9KZi2cjt4FwH7qog\",\"TPhfpB5tzQWSSn67n\",\"kNrnnMxhFZztMTBAX\",\"2j3dYApeb9FZ5eP6d\",\"u7i7WPM63n42r8R8o\",\"Wv2vJnEj8ywNmARoF\",\"3nied3n8KG8RSNixH\",\"3LiSLdtN58n46NEqg\",\"5HCu9Ydd86QgHDRNP\",\"q6QsMYNMpPNtmyTeW\",\"w2HhxvSLmDhaGCAjE\",\"9CoqdidjM9KbeKnHY\",\"AgY6WsWyt69H9sC8C\",\"wJosiFATmZti3nEHG\",\"Ey9pB2PRqejNubQmf\",\"Y9zyHwuyA7MJ8SPDh\",\"sHDcTJTsrxM3QnJij\",\"Jg8ZSRXe3NoDMCqGu\",\"sHjfbGQGLHE6JR6qu\",\"oig8ig9SE9RZa8ttL\",\"XnnRQdbeBCKBH9KHa\",\"HnJuYrgwLJwXtboE3\",\"b3BWzq6Yu8nswak5u\",\"oNBNrPGYAhQiwbeDv\",\"8cn2KbG4SSj8S5crR\",\"NchnDcEmsLTeFZ4FH\",\"i5iePG5GqhJJ8HEoB\",\"wYBLRB4YuWXE3HRp9\",\"KLmLKaJPfsYxp42p2\",\"sX9GZp3fYyQLrBKMJ\",\"vW8dPw4aRygenERwp\",\"k2Eo3wyfZZ6KxvKhN\",\"Wv9XxYAmCLZdhrTMF\",\"zfGYZ7gpR8fxJpagh\",\"axdSNLZpiCDF8RS6n\",\"MfKe55snfKsdnDejs\",\"Kh3Pc2ZRusurLaMyP\",\"7K2GEb5TZRtSpyyGS\",\"qD2LrwaDrSdiybLKY\",\"Lm6ChQCWBmaikmk5J\",\"tpxMgkGSHwBjS95Ta\",\"mG8HqKiAQFTdRZthG\",\"Ssr948vrCsf2WrY9D\",\"nzAG9wfxxReP68Tht\",\"hkJGLuib5md8vZ9HD\",\"gXTAie79kiw28tx5u\",\"aKzYNPqBqb3J3ZgyD\",\"8vWWL8Tx2yDai4ydm\",\"NuqGt5u3s7vJ7HBGR\",\"8WpvgSbQciTQWdd8T\",\"wniy5aKNkwYTNAkrz\",\"QRv96jmNaYsWkxQEG\",\"oXdhczMThyirgM2eN\",\"DCLoZNDf8h6TB7gxn\",\"rrSC943cCKNG48sH4\",\"377aXz9FPFSZxyrSv\",\"wRttWTM59y8m5mx7x\",\"5Z4o2pWDzmbpw4JHJ\",\"JE5u6TYvmSfjzDMhh\",\"hkiz2Nv927cYGrA86\",\"KTFxMsjaW4xgo5ajY\",\"dj5AyG5fWP8FdsSmZ\",\"orFLgPDw9H5MDzmwo\",\"R2P4K64GKHWiuRtGS\",\"BfwbCTRtW4wG2bsnH\",\"hXoTNPPmJLzkZnkSX\",\"zZDaXBxMzTCBhNkgL\",\"hueNJXvGX8Ex6mZCv\",\"TFqRD3zervh8PT8op\",\"8fZxjQfuXw5HMSRJM\",\"bccs9koJxyQ9XNiLC\",\"KJCDwGkoXh8qtbbKr\",\"J3upzLHuEwXH7Z2hx\",\"g9FyJ8yeT9ic97Qp2\",\"pJj86xc32Bs7Frxvi\",\"CyzskHGsC6WSmYrLu\",\"d8qtzoLB264iP8tdY\",\"Cuy7McJ5y8BkXRRk9\",\"cAP3n5NY64uoMwzRR\",\"YLFHcoEWk6PzJPsnZ\",\"NttvLFuWLxkLDjjWZ\",\"RGMbFMZXJr7DhcAJy\",\"6MjSiiBLPcvXbXcaZ\",\"BrTDhPJcACL2bsrpJ\",\"J5T8gZqiZXFuFDTQ7\",\"dYPkStFnLvAMsHSzZ\",\"7txFzDQ43vJ7qCY88\",\"dky93oMkJsJjEJKk2\",\"Ls6f2HeQAN2khDCAc\",\"Cybtjz3cF7RgoiqrN\",\"pduNK68oazqQTtbLp\",\"AJexRBN9cYQmqvYu6\",\"4Kv8CNDndbmufNLGq\",\"BHCvGYaeSE6R7YBRq\",\"yod5YhKtPqw2GfG9B\",\"Fb2wehA7QgTFWry2x\",\"CEd9tLdXeDeNHSzys\",\"6428wKHtwKkFdvBs5\",\"N8hdjrsw2o7gyjsuv\",\"c2u7qfdaYxcyuydtu\",\"7scpcTEp3SEx5Wjg9\",\"YRAzEBJoLvSaiPtYx\",\"9bQyb6rW7xfE4vgrR\",\"FDqfqHn8ww9QoSFhb\",\"XmThR9XBSHSdToYYX\",\"4fjSgcqhQQZM2ZFRP\",\"PJQJDjZaBxTXu4FyG\",\"5XiuAqicKD4hBdu63\",\"ga7aTTEThzsELuC2j\",\"oyKcm3zqdy8Ko5P5d\",\"Tf7TJFSPktJBgLA4k\",\"qAby4AWXmTNeusvg3\",\"bz883xR7WdSKXxjwY\",\"nfXGHENb5md7m355s\",\"C2AfMipCicfD58WJ9\",\"utTuvGdmu2sBHWBhQ\",\"22kSvGZ9z9J2KK8nc\",\"3pxHTZBsv7MKzFG6Y\",\"o4ixjQGSaYqA2JoM4\",\"wjc4iejpErBhxWwHo\",\"gKsunaX2kCGC5CcbC\",\"nJXgbSQozcoE8Wn4N\",\"bC49w5JpRaqtjd3Rt\",\"pDvFWMCD9fQwoBPcu\",\"HuNF3xTBzmatyGSTm\",\"5zGMciq3fB4aeu9uj\",\"oriWwkSDoejDH9ru5\",\"iTYYSCoCZECksWJRu\",\"2EbDCCJJvCfKkbYia\",\"9MER8SZ9Xo6xNYMj8\",\"kAkLAF9T5McSxXJCT\",\"DpnYcMphntjsQ96qg\",\"pZMcixurx47FDeCWq\",\"DqNQn9Jsxcu5HijKE\",\"2shZiXpPwQTNwueXk\",\"WdKdsgH9gXkKgCycx\",\"CLypXaZksY99mpRCm\",\"8zQnyekbSwzhoJymu\",\"Jqk2uJZZxEv5wZFze\",\"csFCABy3kwwpoQXNy\",\"agb6ou9deennRxzhv\",\"jKZ8h9e2sRHfE79LB\",\"vCxuabDxEv9YC3Szb\",\"GT9wLv8Lipyp6YYTp\",\"9Hp6Z83SwWxMQRouq\",\"ey3CASd6Je5LEJzfB\",\"nb2QchJrdRJdv4pfE\",\"hERDiXzMt3bagzfKp\",\"nc7bRhkxgKyqusYe3\",\"5wCHxMQ5Km2bjqcGZ\",\"PRCy9gHjEN2KKgukx\",\"wjt5iyzrjjAxzMbdK\",\"dNErCjyFobE5sn4Zh\",\"XBTeQ9TMCFZQ2eMNQ\",\"Fk9kLwoG4Brf4KsKf\",\"GGdmhAvxXhqhhibJN\",\"iF4tdvn5sA9CM4T6T\",\"u3exaHuZqYBnDBZh2\",\"JMAmMMBMrQqRy72Cc\",\"6P66oZKKgeb36q6dp\",\"BgQGXorPgFysSbvvL\",\"5EPe7bdNQ69vjsKv7\",\"xumt4h8jvh7o4xkhr\",\"Lg4t6SEWgtYz4u7Cj\",\"ZyrfhDTZHb8LymH5b\",\"5N699mc5WNjWowwoK\",\"5prBnBm3YszWAYPTp\",\"buX4mCQhtXCfBjeno\",\"nmMiWvyJKp6nZEpve\",\"MXGuntvz3byrP6WJc\",\"2H7qphwdz7PPoFKgc\",\"ttAQuoHpCGacfBcoe\",\"p7js9trz2zk2RorCR\",\"gf7u4MKcGDFiijzK9\",\"eYfPWvZwnJQkHbSTK\",\"5S9nX4rKsnCcnv4Cz\",\"FNSLZEtiLEeh2KgGy\",\"7N6c3Xu244bnQWjBs\",\"mAGNTzpy5X9etQNZm\",\"pPzeFmRngFu3hqqfY\",\"gWebsnHK6P9vyeq72\",\"5hQnRWiKkhgKJXNMP\",\"H5kBwTZs2LkndHeLp\",\"6xTu4r8NMczBFvmtz\",\"srJ34BaybkQh3qRkM\",\"B8n7KqbvEDjZzgj2D\",\"di2hhADLx59Bj4ewM\",\"Ds7L5bksw2QRHjrKL\",\"LPGPHgJc8MkvcEDBc\",\"6BTXDH2xdbYLsvjsz\",\"nFbmNzMQ38TncmfQX\",\"q9FfWNiMDKRiaCJ5j\",\"2fxapKr8XGdNeaKi2\",\"Wccd4ZBBDq9Em3Dxg\",\"5DnJBgaYWgYh2hcji\",\"PeZM7T45sSB7yN4o8\",\"N2wnZXkhDH86mgjQ8\",\"qQQ4hCQpzitmHSkjS\",\"T2vhHPhRR96hRizq8\",\"pPpmP7xeJzGgK362R\",\"4v8pnvxe8XSWMawR6\",\"9ivvGvJGvtQfigQaZ\",\"sKfrD9gjCDHuqLzSk\",\"2NGSwAJk9NHt3toCo\",\"T6iBEE2jp7f7iEF2P\",\"XD5nmvKQchKezPXhy\",\"dYgxQgSzJNMnWzhhE\",\"BJp2WkwLWGHHB5oQW\",\"AFfw7cGg83uYk2Miy\",\"x3BAyM3Q3WqnF2wua\",\"HNT9Xx6pnQS7wigCp\",\"yyo6YLQN2of6fxp49\",\"AQSqD9oNv2uPfxZCR\",\"dJzNF59j2p8jWZxiQ\",\"qFDbdsjhDBj2MbSHo\",\"Wpn95NqWxncQrwNgz\",\"enbiANzN2EtML9vNX\",\"u5u2YpHXiNgzDNJdX\",\"66a9xX73nmTEuKs9k\",\"K6MfKMytoJJuSGewP\",\"DfHHpvnubuFmeNky9\",\"2HfNkb2SoqdyjKW3o\",\"YmQb9Mo4Xcg2vzgbn\",\"jL4y5fTJAMBjhZmko\",\"2PufnQcsHsfymufX3\",\"8mGWypY7S2RcGcAPR\",\"Cc2Cgj4MWXZxsTooC\",\"bvmTE46bfcM4ogj34\",\"c2q7mY39z5JPEMCaM\",\"PC3pLs36zNzpRDSuE\",\"X4rzfxGgxx6CS7Bpz\",\"ft2ZBwQnre9WQA4js\",\"RoGGD5cpHb4ftdLDv\",\"XHShZ3WMPgGEA2vkR\",\"jWbd7SYDzLPjc9EDh\",\"CKHKhvJcq9jNMqrmd\",\"ghMkPtdFCpM6w8nax\",\"CHvzhtXnv8HTbPQ56\",\"LQxof8pGabGuWP7Gn\",\"u4KH6LGQ95qQMHBut\",\"QFZcdxGKBaFZb7Zbk\",\"mvJBakQ35CWAnbbEZ\",\"uGuS9YRXW2nj4p6zf\",\"9Ly8afdtofp8DXzrt\",\"J23RcmzbdtBbPCTjT\",\"WQubx7DAkG6WZE8FA\",\"w3QDkmjZj2dAFDsjq\",\"mCKqRAPMTht5QBnXo\",\"dZzdZbg3QCAbqXuEw\",\"8ymhFStSzaoZ5ptAu\",\"szhbxxYmug92m3cpG\",\"R6YxHWAiLgKwy5YvC\",\"H4LqzfSad6d4BCgwy\",\"StNu7DPyTgEStZsMY\",\"wwMcJQRvf3X59Jyev\",\"ij2DPkwTsR9LEkoKg\",\"aGdvaeedrupLdjXQp\",\"2qGAf4ktagymJeP3F\",\"TREYBvjhoAisjLcY5\",\"w67KfQgZ6WAeY7K4Y\",\"4RY3zj9C2t8GGefhi\",\"fKzJMR2LLbiRtGetj\",\"hR7GMiqGap4CzEWSy\",\"2iFe3EHEH2YdhSKrs\",\"2NDSt8HyP33cFRHsu\",\"4TmgHkn5vqyHK3sYC\",\"T6Rm8mREPMZSftzrC\",\"Afnps7TJQuS9sipMb\",\"iBHx7eL6anoBnF7yQ\",\"wyPpeRFRqQ5LYM9ws\",\"jkbavR2ATFJcpmo8M\",\"pQwhNKiCne4gEZgcn\",\"zhFFAvswGdNaMdbJt\",\"8uiLiJcmWxWe6qw65\",\"4Lwjr34ypKNQNQCar\",\"xdgy7nWSKCekXnaJM\",\"7ajSwbNMNp9ggPewT\",\"a2Kmh6ekWqQQooHiQ\",\"PH32cNxBjrK4a28sn\",\"zEiHincPELnvffKbq\",\"RnY25enEBE8T9P5GS\",\"3KkyQm77zsew58Dc2\",\"SBNdAEEGJSzSuqvqr\",\"uK58g2EXxqxTaB2iA\",\"d9LBRxvADNBB5QJMB\",\"qaR8DnWrTk8Mus5Q2\",\"hpT9yYe5R45poHrYR\",\"dSd7wHgXGQeG5BQ2P\",\"Si6jT3DnRMXYd27k9\",\"AMpQSjKsRqhCDyS2j\",\"rCrbqMiaGPgHYTNxu\",\"APm7XtwYtukQ2kB7i\",\"TCvpT4EPb8qNssNB7\",\"m2DoMHw5bQb52qF5Z\",\"vAh63eGRwkuJtoP8v\",\"B4y8aoyXJtskYPFEL\",\"Qyfyyw6oC4EHAndzo\",\"vCeeMuYDbz3MB4vsk\",\"M2gFMJkocQSY6bsFR\",\"ctbThYbufFCYbRK4f\",\"Cg3LKtEAJpsrdWroG\",\"xjyixzXzqqqTfJARd\",\"ucZ9bQzygDAXDgMoP\",\"trRQk8Smm8ofdbKko\",\"eW9R2SCoYnY8HBAdL\",\"qB6KSTYC6H2TQEQY6\",\"jM3BkWGwNQ2K43Eqb\",\"gjiu8kLnHYxe4HoBN\",\"5QN8R22z43SrwoHDz\",\"Hu4SkoNyWCP4vmsZE\",\"rDgKHd6ZSSpboiAj7\",\"vAbK8sCfKyFC78HYg\",\"54BFnXEjY3FuRNYpN\",\"RGN3QTb5LXj4ZPPkj\",\"7DXJ3mvKMHHqBLt92\",\"5Dd7XwALvvMMwS4Fb\",\"ruzwBPphPDRgLXdnP\",\"Ncn7Qn2LbdsiJnfFk\",\"vw4Byxdm9XQwbDtGC\",\"NHp9cXgWCyX6KqyMT\",\"XbxHXmh5ZmRN2gw3K\",\"Wi4H6ayKsNDWWQCG5\",\"RfbjShbg8jmhyNtJh\",\"dqwatKFAeGpjmf5dm\",\"Fkb5sQNcrKt3Tx4kd\",\"FiaTpm7ehfDv43wSG\",\"a2PQbkxH2NhSWQ4SL\",\"SSrcPY45FJLrjPMK9\",\"wrL4iX2CCSqDCCty3\",\"YXQvrgeiGzLd6cTW9\",\"2MjzJ7yxh3eT3xbng\",\"naZ3i6sSDPwsieDH7\",\"PBuJo62j782fEoH4w\",\"GgQqni8TkbqEBGcsy\"],\"total\":497,\"quality\":[5,5,4,5,4,5,5,5,5,5,5,5,4,5,3,4,3,4,4,5,3,5,5,5,5,5,5,5,5,4,5,5,4,3,5,4,5,1,5,5,5,5,5,5,5,5,3,5,5,5,5,5,5,5,5,5,5,4,4,5,5,5,5,5,5,3,5,5,4,4,5,5,4,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,5,5,1,5,5,5,3,5,5,4,5]},\"flags\":0},\"summary\":\"Build a function that creates histograms. Every bar needs to be on a new line and its lenght corresponds to the numbers in the list passed as an argument. The  second argument of the function represents the character that needs to be used.\\n\\nhistogram(lst, char) -> str\\n\\nExamples\\nhistogram([1, 3, 4], \\\"#\\\") ➞ \\\"#\\\\n###\\\\n####\\\"\\n\\nhistogram([6, 2, 15, 3], \\\"=\\\") ➞ \\\"======\",\"tags\":[\"data_structures\",\"logic\",\"strings\"],\"timestamp\":{\"$date\":1593187460677},\"title\":\"Histogram Function\",\"quality\":4.611650485436893,\"family\":[{\"_id\":\"YLwQGrA24g9TmiGXf\",\"language\":\"java\"},{\"_id\":\"st8SZGoa3WE8Xrhf7\",\"language\":\"javascript\"},{\"_id\":\"2FR33kRmz87xRMZuq\",\"language\":\"python3\"},{\"_id\":\"BmYtZbKd4a5dK6EZG\",\"language\":\"ruby\"}]}}"]