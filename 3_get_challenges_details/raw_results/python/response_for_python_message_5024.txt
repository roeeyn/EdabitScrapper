a["{\"msg\":\"result\",\"id\":\"1227\",\"result\":{\"_id\":\"vfuZia9ufckGzhGZh\",\"author\":\"Andrew Zmurowski\",\"authorId\":\"AbrJ8hMyv5fFXG6DN\",\"code\":\"def seq_level(lst):\\n\\t\",\"difficulty\":1.723809523809524,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"PfiG8gwa6kFeoLfDs\",\"instructions\":\"Create a function that determines if a given sequence is _linear_, _quadratic_ or _cubic_. The input will be a list of numbers of varying lengths. The function should return `\\\"Linear\\\"`, `\\\"Quadratic\\\"` or `\\\"Cubic\\\"`.\\n\\n### Examples\\n```\\nseq_level(1, 2, 3, 4, 5) ➞ \\\"Linear\\\"\\n\\nseq_level(3, 6, 10, 15, 21) ➞ \\\"Quadratic\\\"\\n\\nseq_level(4, 14, 40, 88, 164) ➞ \\\"Cubic\\\"\\n```\\n\\n### Notes\\nN/A\",\"isHidden\":false,\"lab\":\"Test.assert_equals(seq_level([1, 2, 3, 4, 5]), \\\"Linear\\\")\\nTest.assert_equals(seq_level([2, 1, 0, -1, -2]), \\\"Linear\\\")\\nTest.assert_equals(seq_level([3, 6, 10, 15, 21]), \\\"Quadratic\\\")\\nTest.assert_equals(seq_level([4, 9, 16, 25, 36]), \\\"Quadratic\\\")\\nTest.assert_equals(seq_level([7, 17, 31, 49, 71]), \\\"Quadratic\\\")\\nTest.assert_equals(seq_level([2, 10, 26, 50, 82]), \\\"Quadratic\\\")\\nTest.assert_equals(seq_level([-6, -4, 10, 42, 98, 184]), \\\"Cubic\\\")\\nTest.assert_equals(seq_level([17, 59, 143, 287, 509, 827]), \\\"Cubic\\\")\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,1,2,1,1,2,2,2,1,0,1,2,2,3,2,2,3,2,2,1,2,2,3,2,0,2,1,2,2,1,0,2,3,2,3,2,2,2,3,1,2,2,2,2,1,2,1,1,3,2,3,2,2,2,1,2,2,2,0,3,2,4,1,3,2,2,0,2,2,3,1,2,0,2,0,2,2,2,0,2,2,0,2,5,2,0,2,1,2,2,0,2,2,2,2,2,1,2,2,1,2],\"rators\":[\"HqmxnQJM66Y57twhn\",\"2fxapKr8XGdNeaKi2\",\"moFrJ4vxzxPynByzB\",\"gb9rvGus2Jv7bjZSs\",\"N2wnZXkhDH86mgjQ8\",\"u5u2YpHXiNgzDNJdX\",\"AbrJ8hMyv5fFXG6DN\",\"sKfrD9gjCDHuqLzSk\",\"otXtuQygbcYATMZoP\",\"wD6H96mn76rrdnsv9\",\"xmEiF7KSH6Gaximmd\",\"tAF9Gf6PiGogbZuWs\",\"sagYhsovkPhEse8FH\",\"8PwfYqoDQFThzNtvf\",\"C4QntmkYtB89GNtpd\",\"ahWFxnaxt9bXSA4f3\",\"YTTTwEP9F7mBe5Xgi\",\"K96FwtfDDN5WM4Bb7\",\"Jqk2uJZZxEv5wZFze\",\"CEd9tLdXeDeNHSzys\",\"ntaMdjpnbYmFLuaMR\",\"s5M5RvgqR9BhB9JoC\",\"Xj6R2zqhgumffQCAN\",\"ab7BsQuhDo3QgE6bh\",\"BeFnbPbMnAM2SjBdZ\",\"wvaRmNEgMPcpQpr9G\",\"2innwjWqxJHo4eRGh\",\"QnPD4Sv6W4LHc2Qng\",\"aRqQ42J5zqCmBNd8w\",\"mxX4rH5ELYkdZ2Mbw\",\"AasGs8AeX9Lcb9xJn\",\"Ycj4iTJGFyvC4bXek\",\"zHdcQydaKdxckwcEo\",\"4CFzv558qbGcpQwc4\",\"Wv5c7WsK6R8yb4mTt\",\"v3fjGuc7Pq4yjFygS\",\"QKtxPPRK5h3eqno6p\",\"hKrY8hWMgToBavfhD\",\"cR3ibTMxLyEdDFCHY\",\"vLrq4dEDMM2wd68Dc\",\"Yp7uvStL97cC9fKkY\",\"dHZqT6h4JMwk5fPC8\",\"9Ly8afdtofp8DXzrt\",\"RiwS9QTek4bMS3wtA\",\"jNvegJWCk5HCtEMbK\",\"ZNnsMeNkdDhHjSrZb\",\"aEm3Wvj2rFYRL8Lrb\",\"k6ip3mFoRww77xgKx\",\"8JyqsSbN2FJXPr3cw\",\"Jsrfs8nEy37mJxbqD\",\"nzqwymsdwC7gxAmip\",\"gJYuGdkXEWWmGRLzu\",\"hnyhBFWwNCz9mDfSi\",\"HF28xZKSLM9wEuqNg\",\"DEDniTrstQYGounXT\",\"EjbDDFRECrzQDkzrX\",\"9pzFiFK3ANLjQfnr2\",\"ahk2qiXKJA753wAJk\",\"wS2o3x4nrsadtC3xP\",\"vhLJwgSRY2J7aGD2i\",\"gkqp3EuvuiFXFAFtW\",\"yoLy2DcMG3nZXNwv2\",\"GypbCPC7MaMm8Pfpx\",\"3ggFDfZhCA5sxmac4\",\"FNDfvcrS9kXSemdE2\",\"Ecg4m7srYGgZsb4Ck\",\"NG8PWBSjsM8mMhQEq\",\"ZrKCkX7xxGGZzauFW\",\"njsDKiheWZcbuDayg\",\"yjtdwc2AC4jA2RWtn\",\"ekQh3jzgGLsEMbKo3\",\"SgZ2t9xFuRqdJGofp\",\"Kz7ee56Ht4Ns8JjBj\",\"iS5BrkGLzJyPK7nKt\",\"oBcs8GLX2ZFLXQy8y\",\"tpxMgkGSHwBjS95Ta\",\"zZDaXBxMzTCBhNkgL\",\"QRv96jmNaYsWkxQEG\",\"mDzReRELNxXWY6xTW\",\"gXTAie79kiw28tx5u\",\"mWaFhhivdpRFiJhH4\",\"p8qqFdJ3FSk5x9z3G\",\"cZccqzRQ9GgjQF6Az\",\"DPi9QGLctq2y76KuE\",\"5XiuAqicKD4hBdu63\",\"5hQnRWiKkhgKJXNMP\",\"cAP3n5NY64uoMwzRR\",\"FEYpu9RWysAgW3XnP\",\"zd9FLSzsGz3evKafy\",\"J3upzLHuEwXH7Z2hx\",\"ddyTp8rr9m4pNuASn\",\"dBzwBtRjZqB98DJeB\",\"GqothajHR2vKfEHGZ\",\"5S9nX4rKsnCcnv4Cz\",\"GGdmhAvxXhqhhibJN\",\"YcCLwitFMAEJSnxAW\",\"Ds7L5bksw2QRHjrKL\",\"J5T8gZqiZXFuFDTQ7\",\"AJexRBN9cYQmqvYu6\",\"d8qtzoLB264iP8tdY\",\"u94AhAdwabXgtbyLm\",\"5HCu9Ydd86QgHDRNP\",\"bZEYgddqd3Xm8yd2j\",\"Afnps7TJQuS9sipMb\",\"T6iBEE2jp7f7iEF2P\",\"mvJBakQ35CWAnbbEZ\",\"yod5YhKtPqw2GfG9B\",\"T6Rm8mREPMZSftzrC\",\"buX4mCQhtXCfBjeno\",\"r6fRptd7bek2sNCux\",\"BrTDhPJcACL2bsrpJ\",\"rhS8qXRjZcpDXkwnE\",\"2PufnQcsHsfymufX3\",\"3nied3n8KG8RSNixH\",\"Wi4H6ayKsNDWWQCG5\"],\"total\":125,\"quality\":[5,5,5,4,4,5,5,5,5,5,4,5,5,5,5]},\"flags\":0},\"summary\":\"Create a function that determins if a given sequence is linear, quadratic or cubic. The input will be a list of numbers of varied lengths. The function should return \\\"Linear\\\", \\\"Quadratic\\\" or \\\"Cubic\\\".\\n\\nExamples\\nseq_level(1, 2, 3, 4, 5) ➞ \\\"Linear\\\"\\n\\nseq_level(3, 6, 10, 15, 21) ➞ \\\"Quadratic\\\"\\n\\nseq_level(4, 14, 40, 88, 164) ➞ \\\"Cubic\\\"\\n\\nNotes\\nN/A\",\"tags\":[\"recursion\",\"algorithms\",\"math\"],\"timestamp\":{\"$date\":1575885883901},\"title\":\"Is the Sequence Linear, Quadratic or Cubic?\",\"quality\":4.8,\"family\":[{\"_id\":\"Q4dpEcakxSK2G3NrE\",\"language\":\"cpp\"},{\"_id\":\"N7p2XeHgkXejEgoap\",\"language\":\"javascript\"},{\"_id\":\"vfuZia9ufckGzhGZh\",\"language\":\"python3\"},{\"_id\":\"JRYinDccD7PmgqLrP\",\"language\":\"ruby\"}]}}"]