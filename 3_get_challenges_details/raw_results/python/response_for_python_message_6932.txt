a["{\"msg\":\"result\",\"id\":\"2174\",\"result\":{\"_id\":\"F9r7cuye3EbNRBtjx\",\"author\":\"Evgeny SH\",\"authorId\":\"8PwfYqoDQFThzNtvf\",\"code\":\"def string_builder(s):\\n\\t\",\"difficulty\":3.3333333333333335,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"D5imaC4D8pKzfuLxx\",\"instructions\":\"The function is given a string with some square brackets in it. You need to build the outcome string using the rule: `k[substring]` is replaced by the `substring` inside the square brackets being repeated exactly `k` times.\\n\\n### Examples\\n```\\nstring_builder(\\\"3[a]2[bc]\\\") ➞ \\\"aaabcbc\\\"\\n\\nstring_builder(\\\"3[a2[c]]\\\") ➞ \\\"accaccacc\\\"\\n\\nstring_builder(\\\"2[abc]3[cd]ef\\\") ➞ \\\"abcabccdcdcdef\\\"\\n```\\n\\n### Notes\\n`k` is a positive integer.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"from time import perf_counter\\ntic = perf_counter()\\n\\nTest.assert_equals(string_builder(\\\"3[a]2[bc]\\\"), \\\"aaabcbc\\\")\\nTest.assert_equals(string_builder(\\\"3[a2[c]]\\\"), \\\"accaccacc\\\")\\nTest.assert_equals(string_builder(\\\"2[abc]3[cd]ef\\\"), \\\"abcabccdcdcdef\\\")\\nTest.assert_equals(string_builder(\\\"abc3[cd]xyz\\\"), \\\"abccdcdcdxyz\\\")\\nTest.assert_equals(string_builder(\\\"1[Mubashir_]i3[s]1[_Air]1[_Force]1[_Fan]\\\"), \\\"Mubashir_isss_Air_Force_Fan\\\")\\nTest.assert_equals(string_builder(\\\"2[a4[bc5[x2[o]]]]\\\"), \\\"abcxooxooxooxooxoobcxooxooxooxooxoobcxooxooxooxooxoobcxooxooxooxooxooabcxooxooxooxooxoobcxooxooxooxooxoobcxooxooxooxooxoobcxooxooxooxooxoo\\\")\\nTest.assert_equals(string_builder(\\\"Dorothy_3[sings_]2[sl2[e]py_]1[tunes]\\\"), \\\"Dorothy_sings_sings_sings_sleepy_sleepy_tunes\\\")\\nTest.assert_equals(string_builder(\\\"weg2[a]2[Bc3[y]2[z]]drop\\\"), \\\"wegaaBcyyyzzBcyyyzzdrop\\\")\\nTest.assert_equals(string_builder(\\\"g2[o]d_13[Eda2[bit]]_for_a2[l]\\\"), \\\"good_EdabitbitEdabitbitEdabitbitEdabitbitEdabitbitEdabitbitEdabitbitEdabitbitEdabitbitEdabitbitEdabitbitEdabitbitEdabitbit_for_all\\\")\\nTest.assert_equals(string_builder(\\\"a_2[1[z]2[o]k2[e]per_]l2[o]ks\\\"), \\\"a_zookeeper_zookeeper_looks\\\")\\n\\nprint('t_sec = {:.6f}'.format(perf_counter() - tic))\",\"language\":\"python3\",\"quality\":0,\"stats\":{\"completed\":{\"ratings\":[3,3,3,3,3,4,3,5,1,2,5,3,5,3,3,5,4,3,4,4,1,5,5,3,3,5,1,4,2,2],\"quality\":[],\"rators\":[\"8PwfYqoDQFThzNtvf\",\"mDWNyaaQ9hvPCRzSd\",\"iS5BrkGLzJyPK7nKt\",\"T6iBEE2jp7f7iEF2P\",\"8sNv5PTHa7XQ8bNqR\",\"gbk9zyC3tGrQpG2BZ\",\"HF28xZKSLM9wEuqNg\",\"g3Jh47H2g9xtZGxqK\",\"SGhPxX5bHGL8zZqtt\",\"eHcgvkTGsH7ZziqBo\",\"8pBm6An63TSSA89YB\",\"tAF9Gf6PiGogbZuWs\",\"Cc2Cgj4MWXZxsTooC\",\"xn7uGNKeAwPEkP9oA\",\"8JyqsSbN2FJXPr3cw\",\"yjtdwc2AC4jA2RWtn\",\"QRv96jmNaYsWkxQEG\",\"gJYuGdkXEWWmGRLzu\",\"J23RcmzbdtBbPCTjT\",\"JKb5rhL6DKcCAypF9\",\"2PufnQcsHsfymufX3\",\"hR7GMiqGap4CzEWSy\",\"Sh7oCvsWeiAt6TYFx\",\"BByKDngfPvW6w4m7d\",\"aEm3Wvj2rFYRL8Lrb\"],\"total\":26},\"flags\":0},\"summary\":\"The function is given a string with some square brackets in it. You need to build the outcome string using the rule: k[substring] is replaced by the substring inside the square brackets being repeated exactly k times.\\n\\nExamples\\nstring_builder(\\\"3[a]2[bc]\\\") ➞ \\\"aaabcbc\\\"\\n\\nstring_builder(\\\"3[a2[c]]\\\") ➞ \\\"accaccacc\\\"\\n\\nstring_builder(\\\"2[abc]3[cd]ef\\\") ➞ \\\"abcabccdcdcdef\\\"\",\"tags\":[\"conditions\",\"formatting\",\"regex\",\"strings\"],\"timestamp\":{\"$date\":1609192657863},\"title\":\"Casual String Builder\",\"family\":[{\"_id\":\"Gv9NzpuYinnfXycrF\",\"language\":\"cpp\"},{\"_id\":\"vZ5fXMmqfzXQ5dQBv\",\"language\":\"javascript\"},{\"_id\":\"F9r7cuye3EbNRBtjx\",\"language\":\"python3\"},{\"_id\":\"EkhfHPGDcE3jLD6Wc\",\"language\":\"ruby\"}]}}"]