a["{\"msg\":\"result\",\"id\":\"1347\",\"result\":{\"_id\":\"gzhiy45fsNGW4sJKc\",\"author\":\"Alessandro Manicone\",\"authorId\":\"AasGs8AeX9Lcb9xJn\",\"code\":\"import re\\n\\npattern = \\\"yourregularexpressionhere\\\"\",\"difficulty\":2.013157894736842,\"familyId\":\"9C4cpXdDrmrjMNhCv\",\"instructions\":\"You might get text that looks like it's all English characters but it very well may not be: `pànts != pants`\\n\\nTo ensure that you only get the characters you want in a string you will need to use the character classes that accept **hexadecimal** digits.\\n\\nWrite a **regular expression** that will match the word \\\"edabit\\\". Use the hexadecimal character classes `\\\\x` or `\\\\u` in your expression.\\n\\nYou are not allowed to use any of the following characters: `\\\\w`, `\\\\W`, `\\\\d`, `\\\\D`, `\\\\t`, `\\\\T`, `\\\\S`, `\\\\c`, `.`, `[`, `]` as well as any of the letters in the word `edabit`.\\n\\n### Example\\n```\\ntxt = \\\"edabit\\\"\\npattern = \\\"yourregularexpressionhere\\\"\\n\\nbool(re.match(\\\"^{}$\\\".format(pattern), txt)) ➞ True\\n```\\n\\n### Notes\\n- You **don't** need to write a function, just the pattern.\\n- Do **not** remove `import re` from the code.\\n- You might want to use a **raw string** for this challenge.\\n- Find more info on RegEx and character classes in **Resources**.\\n- You can find all the challenges of this series in my [Basic RegEx](https://edabit.com/collection/8PEq2azWDtAZWPFe2) collection.\",\"isHidden\":false,\"lab\":\"txt = 'edabit'\\nnot_allowed = ['\\\\w', '\\\\W', '\\\\d', '\\\\D', '\\\\t', '\\\\T', '\\\\S', '\\\\c', '.', '[', ']', 'e', 'd', 'a', 'b', 'i', 't']\\n\\nTest.assert_equals(all(i not in pattern for i in not_allowed), True, 'You cannot use letters or any restricted character class in your expression.')\\nTest.assert_equals(r'\\\\x' in pattern or r'\\\\u' in pattern, True, r'You must use the character classes \\\\u or \\\\x in your expression.')\\nTest.assert_equals(bool(re.match('^{}$'.format(pattern), txt)), True)\\n\\n# Translated from JavaScript.\\n# The RegEx series was originally posted by Isaac Pak.\",\"language\":\"python3\",\"summary\":\"You might get text that looks like it's all English characters but it very well may not be: pànts != pants\\n\\nTo ensure that you only get the characters you want in a string you will need to use the character classes that accept hexadecimal digits.\\n\\nWrite a regular expression that will match the word \\\"edabit\\\". Use the hexadecimal character classes \\\\x or \\\\u in yo\",\"tags\":[\"regex\",\"formatting\",\"validation\"],\"timestamp\":{\"$date\":1586943398996},\"title\":\"RegEx XIII: Hexadecimal Character Class\",\"stats\":{\"completed\":{\"total\":95,\"ratings\":[1,1,1,1,1,3,2,3,2,2,1,0,2,2,2,3,3,0,3,2,2,1,3,3,2,1,2,3,1,3,1,1,3,3,3,3,1,1,1,0,3,4,1,2,2,1,3,3,3,0,3,2,3,1,2,3,2,2,3,3,3,2,3,1,0,3,1,3,1,2,3,4,3,3,2,0],\"rators\":[\"AasGs8AeX9Lcb9xJn\",\"Jqk2uJZZxEv5wZFze\",\"aEm3Wvj2rFYRL8Lrb\",\"tAF9Gf6PiGogbZuWs\",\"jNvegJWCk5HCtEMbK\",\"pWD2YC5s4YRCxFc2i\",\"2QGRoQn2dRq3scu7k\",\"DEDniTrstQYGounXT\",\"dHZqT6h4JMwk5fPC8\",\"8PwfYqoDQFThzNtvf\",\"Yp7uvStL97cC9fKkY\",\"gb9rvGus2Jv7bjZSs\",\"586FdBhazpwJfnRYR\",\"a777e8chPvJkY3tKa\",\"hnyhBFWwNCz9mDfSi\",\"9pzFiFK3ANLjQfnr2\",\"ahk2qiXKJA753wAJk\",\"vyaFTJDKChqYfczdu\",\"R4SjTgDnpigJYDLyL\",\"BtdZezHfckxRLm7xR\",\"73RqHLQR4Chh3CPXB\",\"4sHkH3t9CJYhbDwjM\",\"iojEnnY9FsMfYzp6f\",\"cRpaCxYRmGcN3Nsoj\",\"GdePwFjEsuv7Ymf3N\",\"MCw7uAcoWcSTBTmr3\",\"yjtdwc2AC4jA2RWtn\",\"5Jjtec3Bg8cP43dEW\",\"JJmKj7ACC2P52uo95\",\"ji5f27FPz4wRRF6Ls\",\"ZpjYqnL4FXAF4Fvtx\",\"pscBduNyf8TDHe2Km\",\"8BFSTCnoe2QggN64c\",\"Pe8vWpDHRuH9nSGKW\",\"xygLZ8zXLzsKkvSRW\",\"qqqn6konMMH6m5J3M\",\"8WpvgSbQciTQWdd8T\",\"RehJGBFS6CYiWdjZx\",\"4fhjJBvLBWh6QeSih\",\"2PufnQcsHsfymufX3\",\"mBtSsKTHdQniYAfsZ\",\"xn7uGNKeAwPEkP9oA\",\"mNYiFFnf5MdGsBDrt\",\"Sy5XanBuQvdqGD4wJ\",\"uN5t57RETi5y2z5W8\",\"oBcs8GLX2ZFLXQy8y\",\"2QziknsznNeMPRh3g\",\"J3upzLHuEwXH7Z2hx\",\"c2u7qfdaYxcyuydtu\",\"QRv96jmNaYsWkxQEG\",\"YtuEYsCMYJa8CcTyN\",\"xtEQnmTdT8sBF8zE6\",\"incG8tH2dwThHg35f\",\"dYPkStFnLvAMsHSzZ\",\"h4x2jaMdj5aQZbW5g\",\"dQK2T76aHcRJkrbKB\",\"DpnYcMphntjsQ96qg\",\"3LiSLdtN58n46NEqg\",\"6xTu4r8NMczBFvmtz\",\"SExX3m5YftBWmsk2e\",\"Lg4t6SEWgtYz4u7Cj\",\"StNu7DPyTgEStZsMY\",\"m9Dj3WvWDwiu73PRh\",\"zd9FLSzsGz3evKafy\",\"5S9nX4rKsnCcnv4Cz\",\"wRttWTM59y8m5mx7x\",\"GGdmhAvxXhqhhibJN\",\"PXAcsKkssS2yLyDv2\",\"QNC6ErTx4ca2H3rD7\",\"qAby4AWXmTNeusvg3\",\"FEYpu9RWysAgW3XnP\",\"CipP6YKLHpnfc6PSE\",\"YcCLwitFMAEJSnxAW\",\"qNszsXx28cTxvGSNj\",\"JwkwCHcXthnGDsdFr\",\"97DthwdtrBLm2y2Yj\",\"gKnWjDjwrJh7MK2df\",\"RoGGD5cpHb4ftdLDv\",\"8sNv5PTHa7XQ8bNqR\",\"Ds7L5bksw2QRHjrKL\",\"yod5YhKtPqw2GfG9B\",\"jWbd7SYDzLPjc9EDh\",\"ag8tcfPvJZWpRnwet\",\"MHiQx9E8rPgzJfsJy\",\"Qyfyyw6oC4EHAndzo\",\"jkbavR2ATFJcpmo8M\",\"Wi4H6ayKsNDWWQCG5\",\"CHvzhtXnv8HTbPQ56\"],\"quality\":[5,2,5,5,5,3,3,5,5,3,4,5,4,5,5,5,4]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":2},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":4.294117647058823,\"family\":[{\"_id\":\"fdDprqnJyvFb2QLsu\",\"language\":\"javascript\"},{\"_id\":\"gzhiy45fsNGW4sJKc\",\"language\":\"python3\"}]}}"]