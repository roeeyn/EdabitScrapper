a["{\"msg\":\"result\",\"id\":\"2408\",\"result\":{\"_id\":\"FKfPSYG6q7qko9i8b\",\"author\":\"javierdariomartin\",\"authorId\":\"6428wKHtwKkFdvBs5\",\"code\":\"def weird(n):\\n\\t\",\"difficulty\":4.083333333333333,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"dv6JxtLTayf9voTQL\",\"instructions\":\"A **weird** number is a natural number that is abundant but **not semiperfect**. An **abundant** number is a number for which the sum of its proper divisors is greater than the number itself. A positive divisor of `n` which is different from `n` is called a **proper divisor**  of `n`. A **semiperfect number** is a natural number `n` that is equal to the sum of all or some of its proper divisors.\\n\\n### Objective\\nCreate a function that takes a number as an argument and returns:\\n- If the number is prime and not abundant.\\n- If the number is not abundant.\\n- If the number is abundant but not weird.\\n- If the number is weird.\\n\\n### Examples\\n```\\nweird(1) ➞ \\\"1 is not abundant because the sum of its proper divisors - no proper divisors - is 0.\\\"\\n\\nweird(2) ➞ \\\"2 is prime and not abundant.\\\"\\n\\nweird(9) ➞ \\\"9 is not abundant because the sum of its proper divisors 1, 3 is 4.\\\"\\n\\nweird(12) ➞ \\\"12 is abundant but not weird because it can be obtained from the sum of its proper divisors: 2, 4, 6.\\\"\\n\\nweird(70) ➞ \\\"70 is weird.\\\"\\n```\\n\\n### Notes\\n- The number will always be greater than 0.\\n- If the number is abundant, print the proper divisors with which you get the number, always running through the divisors from the smallest to the biggest, covering all possible combinations from the smallest possible lenght to the biggest possible lenght.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(weird(1), '1 is not abundant because the sum of its proper divisors - no proper divisors - is 0.')\\nTest.assert_equals(weird(2), '2 is prime and not abundant.')\\nTest.assert_equals(weird(6), '6 is not abundant because the sum of its proper divisors 1, 2, 3 is 6.')\\nTest.assert_equals(weird(9), '9 is not abundant because the sum of its proper divisors 1, 3 is 4.')\\nTest.assert_equals(weird(12), '12 is abundant but not weird because it can be obtained from the sum of its proper divisors: 2, 4, 6.')\\nTest.assert_equals(weird(70), '70 is weird.')\\nTest.assert_equals(weird(114), '114 is abundant but not weird because it can be obtained from the sum of its proper divisors: 19, 38, 57.')\\nTest.assert_equals(weird(220), '220 is abundant but not weird because it can be obtained from the sum of its proper divisors: 11, 44, 55, 110.')\\nTest.assert_equals(weird(836), '836 is weird.')\\nTest.assert_equals(weird(5023), '5023 is prime and not abundant.')\\nTest.assert_equals(weird(5830), '5830 is weird.')\\nTest.assert_equals(weird(7192), '7192 is weird.')\\nTest.assert_equals(weird(8900), '8900 is abundant but not weird because it can be obtained from the sum of its proper divisors: 445, 1780, 2225, 4450.')\\nTest.assert_equals(weird(12110), '12110 is weird.')\\nTest.assert_equals(weird(12119), '12119 is prime and not abundant.')\\nTest.assert_equals(weird(14770), '14770 is weird.')\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[5,5,5,5,5,4,5,3,4,3,5,0],\"rators\":[\"8PwfYqoDQFThzNtvf\",\"6428wKHtwKkFdvBs5\",\"aEm3Wvj2rFYRL8Lrb\",\"KZ2xddpM2f9JRaryB\",\"yjtdwc2AC4jA2RWtn\",\"iS5BrkGLzJyPK7nKt\",\"T6iBEE2jp7f7iEF2P\"],\"total\":9,\"quality\":[]},\"flags\":0},\"summary\":\"A weird number is a natural number that is abundant but not semiperfect. An abundant number is a number for which the sum of its proper divisors is greater than the number itself. A positive divisor of n which is different from n is called a proper divisor  of n. A semiperfect number is a natural number n that is equal to the sum of all or some of its proper d\",\"tags\":[\"numbers\",\"math\"],\"timestamp\":{\"$date\":1593744805633},\"title\":\"Weird Numbers\",\"quality\":0,\"family\":[{\"_id\":\"eictX3JfNzjzkLq3Z\",\"language\":\"cpp\"},{\"_id\":\"6BEEC2C6fxeFDCEds\",\"language\":\"javascript\"},{\"_id\":\"FKfPSYG6q7qko9i8b\",\"language\":\"python3\"},{\"_id\":\"oA4oZov7vG7fasJj5\",\"language\":\"ruby\"}]}}"]