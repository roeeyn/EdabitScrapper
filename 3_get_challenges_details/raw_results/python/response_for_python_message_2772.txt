a["{\"msg\":\"result\",\"id\":\"112\",\"result\":{\"_id\":\"MKpSfBCXargD35J8p\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"def journey_distance(n):\\n\\t\",\"difficulty\":0.5043478260869565,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"rRLbBYDNK5pkhKBkf\",\"instructions\":\"A taxi journey costs **$3** for the first kilometer travelled. However, all kilometers travelled after that will cost **$2** each.\\n\\nCreate a function which returns the **distance** that the taxi must've travelled, given the **cost** as a parameter.\\n\\n### Examples\\n```\\njourney_distance(3) ➞ 1\\n# The first kilometer costs $3\\n\\njourney_distance(9) ➞ 4\\n# The first kilometer costs $3 plus the other three kilometers (costing $2 each)\\n\\njourney_distance(5) ➞ 2\\n```\\n\\n### Notes\\n* The input tests are valid integers >= 0.\\n* The output will always be a whole number.\\n* Remember that you are calculating the distance from the cost, not the other way around!\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(journey_distance(0), 0)\\nTest.assert_equals(journey_distance(3), 1)\\nTest.assert_equals(journey_distance(5), 2)\\nTest.assert_equals(journey_distance(9), 4)\\nTest.assert_equals(journey_distance(15), 7)\\nTest.assert_equals(journey_distance(99), 49)\\nTest.assert_equals(journey_distance(11037), 5518)\",\"language\":\"python3\",\"quality\":4.7894736842105265,\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,1,1,0,2,0,0,1,1,0,2,0,0,2,1,0,0,0,0,0,0,0,1,1,0,2,0,1,0,0,0,0,0,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,0,1,0,0,2,0,0,2,0,1,0,0,1,5,1,1,0,0,0,1,1,0,2,0,0,3,0,0,0,0,1,1,2,0,0,0,1,0,0,0,0,0,0,0,1,0,1,1,2,1,0,0,1,0,2,0,0,0,1,1,0,0,1,0,1,1,0,1,0,0,1,0,0,0,0,1,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,2,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,1,0,0,2,1,1,0,0,2,1,0,1,0,2,0,0,0,0,1,1,0,1,0,1,0,1,0,0,0,1,0,0,0,2,0,0,1,0,0,0,1,2,0,1,0,0,1,0,0,0,0,2,1,0,0,1,1],\"quality\":[5,5,4,5,5,5,5,5,5,4,5,5,5,5,4,5,4,5,5,5,5,4,5,4,5,5,5,5,5,4,5,5,5,5,5,4,5,5],\"rators\":[\"PXAcsKkssS2yLyDv2\",\"dJzNF59j2p8jWZxiQ\",\"FEYpu9RWysAgW3XnP\",\"gNgykEx87XN98q5xB\",\"c2q7mY39z5JPEMCaM\",\"buX4mCQhtXCfBjeno\",\"YcCLwitFMAEJSnxAW\",\"XD5nmvKQchKezPXhy\",\"iS5BrkGLzJyPK7nKt\",\"rfyEkETeoS96QNH4e\",\"Yp7uvStL97cC9fKkY\",\"DEDniTrstQYGounXT\",\"JKbEBybAsiKrmcqof\",\"gb9rvGus2Jv7bjZSs\",\"iojEnnY9FsMfYzp6f\",\"cR3ibTMxLyEdDFCHY\",\"T6iBEE2jp7f7iEF2P\",\"Ds7L5bksw2QRHjrKL\",\"66a9xX73nmTEuKs9k\",\"DPi9QGLctq2y76KuE\",\"srJ34BaybkQh3qRkM\",\"QRv96jmNaYsWkxQEG\",\"pPpmP7xeJzGgK362R\",\"3cF6NXq3ZEwdkgSjb\",\"NrRa4TS6uZR9xuXRt\",\"CHvzhtXnv8HTbPQ56\",\"PC3pLs36zNzpRDSuE\",\"AFfw7cGg83uYk2Miy\",\"N2wnZXkhDH86mgjQ8\",\"gJYuGdkXEWWmGRLzu\",\"zd9FLSzsGz3evKafy\",\"yjtdwc2AC4jA2RWtn\",\"eYfPWvZwnJQkHbSTK\",\"2QGRoQn2dRq3scu7k\",\"oBcs8GLX2ZFLXQy8y\",\"YRAzEBJoLvSaiPtYx\",\"a2Kmh6ekWqQQooHiQ\",\"J5T8gZqiZXFuFDTQ7\",\"Cg3LKtEAJpsrdWroG\",\"s5M5RvgqR9BhB9JoC\",\"fTNQmMvTZhhiGBCMe\",\"PAzNgJF54C2mYPkR9\",\"5HCu9Ydd86QgHDRNP\",\"8PwfYqoDQFThzNtvf\",\"mxX4rH5ELYkdZ2Mbw\",\"4TmgHkn5vqyHK3sYC\",\"XrqNzJ2FRG8HnGiR6\",\"fdyejapW3NWN7utPX\",\"zC8WrPp5BC6c2exrW\",\"pwWtbXEjzuvrhEGwt\",\"XEjiqMFvDTLTo2X9G\",\"wjc4iejpErBhxWwHo\",\"sX9GZp3fYyQLrBKMJ\",\"5Ti9ZK75zbT9PoQLZ\",\"Q6gEE9dG8ERy2Xu3c\",\"9qoWqLcHGiDX429rE\",\"CyzskHGsC6WSmYrLu\",\"ghMkPtdFCpM6w8nax\",\"Dwpiei4miJi7ry8W4\",\"RTER5uJdW4khkiNbY\",\"x2Cz7S8rCKJqCE3Xe\",\"8JyqsSbN2FJXPr3cw\",\"DFpZcskPncmo7fuzR\",\"YZL9ec49hQdqcwu2j\",\"GC9LB7vyQwSrQXoqt\",\"J3upzLHuEwXH7Z2hx\",\"jcPZ5ySXseCB7Ec3x\",\"9Ly8afdtofp8DXzrt\",\"KEmTti9Tza8A2FLQW\",\"8teSHp77vHhhvJWiS\",\"AXcnPX68zdMiLNSmu\",\"H9KZi2cjt4FwH7qog\",\"aEm3Wvj2rFYRL8Lrb\",\"FgMe2gzbxog9WzaRr\",\"jWbd7SYDzLPjc9EDh\",\"Fk9kLwoG4Brf4KsKf\",\"iYXdNw7tKcgA3QwBX\",\"tAF9Gf6PiGogbZuWs\",\"PqFpDvmcaPk4yE5xm\",\"3LiSLdtN58n46NEqg\",\"mvJBakQ35CWAnbbEZ\",\"iBHx7eL6anoBnF7yQ\",\"KypQdzThzogKXwkXE\",\"EfxwqhYdapX3dMQC2\",\"T6Rm8mREPMZSftzrC\",\"aXx8tRSKQw65RwBAB\",\"TiDFmxf3QEpbfXi4f\",\"5PaQgfQznXjaF9e6F\",\"6LbPw9yW6HHDfn8B8\",\"peCvTbjQBgdWo53Wv\",\"NP2RxM3eBd3drnDwP\",\"JiSpvq6C7azQEmENc\",\"SBNdAEEGJSzSuqvqr\",\"DTyNcDkiScCjgJt28\",\"qzXAMXsHZGT8o5hTA\",\"sbJcFfQjQ59Wfg4Cd\",\"AasGs8AeX9Lcb9xJn\",\"2MjzJ7yxh3eT3xbng\",\"sHjfbGQGLHE6JR6qu\",\"eHcgvkTGsH7ZziqBo\",\"KH4Wr3YSvNddCSRJ2\",\"9pzFiFK3ANLjQfnr2\",\"kjvgTyRFyKHv44DcH\",\"hZ2JDAEG2P5rMLWEW\",\"MKT7khMBGXzA22ykf\",\"HqmxnQJM66Y57twhn\",\"jCjCvyhqhpebkJn34\",\"TCvpT4EPb8qNssNB7\",\"JS3hNM3XXkxPdg3yk\",\"Afnps7TJQuS9sipMb\",\"Ki9t2KmA5MWfGJXD8\",\"XbxHXmh5ZmRN2gw3K\",\"hRfdHT8bWztZuCqzi\",\"gKnWjDjwrJh7MK2df\",\"PTDFuxAzou7W6asWt\",\"FiaTpm7ehfDv43wSG\",\"pQwhNKiCne4gEZgcn\",\"cdXmwjupCXSvJTSNo\",\"FRN2W8RYpJ6GPhgRy\",\"Jqk2uJZZxEv5wZFze\",\"C9LKGu2g5hSijvDzA\",\"7q8oBsCHwn48Ppnrq\",\"dYPkStFnLvAMsHSzZ\",\"wRttWTM59y8m5mx7x\",\"aN6owKqBeZj7ZefFR\",\"d9LBRxvADNBB5QJMB\",\"AQSqD9oNv2uPfxZCR\",\"PmRyaLmhAF4MMLBtM\",\"9HPB28hBoTnZnspQE\",\"rrSC943cCKNG48sH4\",\"b7yQWr6eJFxYTmt3j\",\"5nbHH4eApn6So9h2n\",\"PBnvAuiKXwjqjKG33\",\"ecytnKJxjCPk8Kbif\",\"BdnE4RS5puoxo92mA\",\"fGvJRtjbJFJJZLCnW\",\"uK58g2EXxqxTaB2iA\",\"B4y8aoyXJtskYPFEL\",\"YZsZjfvd3PnLhDJrR\",\"Ne8mK9DDHG8TRkoxG\",\"gbGzZz5Yq5hT357v8\",\"5QN8R22z43SrwoHDz\",\"qaPjAANdnxFnWfj5d\",\"o2Q8uM5DwJnSRmerd\",\"rhS8qXRjZcpDXkwnE\",\"dzS6WBTMHyFEag6Fp\",\"qAby4AWXmTNeusvg3\",\"dqwatKFAeGpjmf5dm\",\"arWdYjT3J9QKzoPLd\",\"rF97GDLqCgynr7BaD\",\"3SgSNoAB3sxaYeT3w\",\"xjyixzXzqqqTfJARd\",\"TNMAJidLpPdH4kmBv\",\"afvP29FhRou2bTaav\",\"B4LpueSJhLDYMEQAW\",\"vAbK8sCfKyFC78HYg\",\"yAouD3PxzED8a4gap\",\"M4vq8ATaS9Jg5X7iP\",\"H469XosMjfNu8Fop7\",\"FGEeCTorXbX3WvjFW\",\"gjiu8kLnHYxe4HoBN\",\"tR9grPBLncwacBTzr\",\"5jC6kt3SXoABZBwsY\",\"NzbRqGWspQnWMoDrF\",\"5H6WybGSZcsxZnLAW\",\"QWjsXnLaJ7xfL3Amq\",\"pduNK68oazqQTtbLp\",\"BrTDhPJcACL2bsrpJ\",\"FT2wBacm3JxrYmZDW\",\"mw9464S5dnenqzvpm\",\"pAZbgFZXcRXfLifk8\",\"fMp8sPsKSECdfgF9j\",\"pnfwbXY4dgrSKq2Fv\",\"uEwJFW6WwqT2KDT42\",\"dfHPL2A5SYuxyhs99\",\"PKu9i6fmR67WGCgad\",\"4sSXLSBZDxK2Swoo7\",\"DjPJydd2cAviPyDjJ\",\"rQA9SE8nuwFueaHsR\",\"gpGXTvjS2HrY9Skq5\",\"9kSvkZZMLXeH97aT7\",\"NioGGZL9KCn5Ln96t\",\"Zs44kXd2Kn6h67fHr\",\"E45zy9qvm9DeJhDWL\",\"Si3HYCLMe8PM47rRt\",\"N2ar5QmkbP9aFYop9\",\"SjPPNc7xzsHhmiBdG\",\"WcoNK8b7rMB2co3Sv\",\"xPuNFkxdxLYTccAZp\",\"Cnx3Ss6zhhKExXxbC\",\"GktgG4zuF225EApih\",\"DiPDbb767ot3GayXM\",\"M8dQuMrEpP8Hc3tHN\",\"w3QDkmjZj2dAFDsjq\",\"acENs2fSF9d7hkTZx\",\"ta3DbDAhs5SZMzQYL\",\"32R8afuvC6Jbc5cPk\",\"FGYBMbExbwHLD2Wdn\",\"5LDvZHCDJqePeBrCg\",\"AwXQLqnTYzcCQrnqQ\",\"nFbmNzMQ38TncmfQX\",\"xEcNtxzHMzzzNrisj\",\"EE6qCDCRphjXXdE3n\",\"i5djDRw7ELRgXrkDD\",\"FJur4D6hBgTQZqmDQ\",\"dCHJHgKdWNMGaAA7W\",\"4akHBgnDEDj3Rkv5n\",\"5Dd7XwALvvMMwS4Fb\",\"w2vGA6QoYXnba3v7Z\",\"5Zi5vAdd95nrwgNp3\",\"qRCzNXxJtEwCEHnCq\",\"nEJr26JfWz7zXbTk2\",\"F8dA24AosSC8XXb7D\",\"xT2YiBTkgtZ9t6XPA\",\"PnY8JW7qMT3NYN5oc\",\"FtuianggdMvAxG43T\",\"acFDzp9EJzHg8c2rD\",\"DhfJpC3Y72teNfiKE\",\"a2PQbkxH2NhSWQ4SL\",\"4ZyLqTQ9e6hrh26H5\",\"oaJbwGAbtpgYhMEgd\",\"C5h42RTzbdrpPfeZo\",\"sMcFMPkMJC4Kh6ymj\",\"u5u2YpHXiNgzDNJdX\",\"dj5AyG5fWP8FdsSmZ\",\"BgZcBs3KWeYCRKChr\",\"JzzNCzWjcGrqDdAd5\",\"5CsHudxuDESxmjTPW\",\"bM2eBtpFQCv8632C9\",\"PwZPGSrYmD8nq7fmv\",\"BFSAXBzoaEJ3Wshj8\",\"sCSpEe9msoToswZWB\",\"kJMAAWPWEG6qFouEh\",\"Wi4H6ayKsNDWWQCG5\",\"szQg8dxKNNre3v3Jk\",\"FMyZPN6odEFtfuimF\",\"NwczjpfNN8jXy5RF6\",\"d8qtzoLB264iP8tdY\",\"mdRQaGT98ycMt87S2\",\"q8QGySvjPML3PWtw7\",\"PJu3WcTpfRrvHfQiS\",\"XgRXeb4YyZqmiMTLe\",\"jzYbGnnTmdTkuX9bC\",\"htXCitorobtqYymjN\",\"yBMYAkMG3NNgEtYMA\",\"WXjFLCky2KqQNtqZb\",\"Hu4GorJ4NSqYP9Qfh\",\"naZ3i6sSDPwsieDH7\",\"zLZPR575DHBctqpMF\",\"sKfrD9gjCDHuqLzSk\",\"ff2GzeeLwAfuL8PwP\",\"vFxjNmdwGWXmkxq5X\",\"ZAGj4NWbX2KaHLWGW\",\"cCgyd9hGpvWkuvvRP\",\"xrXuJJ2SyM7TaoZAc\",\"i4dQDnvu65fkvNpCu\",\"CTW3MRyc4wNkcjGZQ\",\"7HAL7H6NJmc4NC8Q5\",\"63wBQ9L6hLJtHvZFb\",\"qjd7Y3B7nNxdx5PgM\",\"m7hHWJrBub7ueaokh\",\"5jCaEJFw2W2qvcE55\",\"9NcZ23yufhtou68dT\"],\"total\":288},\"flags\":0},\"summary\":\"A taxi journey costs $3 for the first kilometer travelled. However, all kilometers travelled after that will cost $2 each.\\n\\nCreate a function which returns the distance that the taxi must've travelled, given the cost as a parameter.\\n\\nExamples\\njourney_distance(3) ➞ 1\\nThe first kilometer costs $3\\n\\njourney_distance(9) ➞ 4\\nThe first kilometer costs $3 plus the oth\",\"tags\":[\"numbers\",\"math\",\"conditions\"],\"timestamp\":{\"$date\":1614946948582},\"title\":\"Taxi Journey\",\"family\":[{\"_id\":\"uHPkhYQ9jDMaZXsYM\",\"language\":\"cpp\"},{\"_id\":\"cMLjrLbhFAswxhtFL\",\"language\":\"javascript\"},{\"_id\":\"sttiN2u32cXdCbBYc\",\"language\":\"php\"},{\"_id\":\"MKpSfBCXargD35J8p\",\"language\":\"python3\"},{\"_id\":\"GHNiXWJTRDoj7GxQR\",\"language\":\"ruby\"}]}}"]