a["{\"msg\":\"result\",\"id\":\"398\",\"result\":{\"_id\":\"MpaWRHpnu7uK7nYgB\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"def doubleton(n):\\n\\t\",\"difficulty\":0.6947368421052632,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"LgbrwaZD4LDor3rNE\",\"instructions\":\"**Mubashir** was reading about [Doubleton Numbers](https://proofwiki.org/wiki/Definition:Doubleton) on Wikipedia.\\n\\nA natural number is a **\\\"Doubleton Number\\\"**, if it contains _exactly two distinct digits_. For example, 23, 35, 100, 12121 are doubleton numbers, and 123 and 114455 are not.\\n\\nCreate a function which takes a number `n` and finds the **next doubleton number**.\\n\\n### Examples\\n```\\ndoubleton(10) ➞ 12\\n# 12 has only two distinct numbers 1 and 2\\n\\ndoubleton(120) ➞ 121\\n# 121 has only two distinct numbers 1 and 2\\n\\ndoubleton(1234) ➞ 1311\\n# 1311 has only two distinct numbers 1 and 3\\n```\\n\\n### Notes\\nN/A\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(doubleton(130), 131)\\nTest.assert_equals(doubleton(1434), 1441)\\nTest.assert_equals(doubleton(20), 21)\\nTest.assert_equals(doubleton(5), 10)\\nTest.assert_equals(doubleton(131), 133)\\nTest.assert_equals(doubleton(1000000), 1000001)\\n#Mubashir\",\"language\":\"python3\",\"quality\":4.862068965517241,\"stats\":{\"completed\":{\"ratings\":[0,0,0,0,0,0,0,2,0,0,1,0,0,2,0,1,1,0,0,0,0,0,1,1,1,0,0,2,0,0,1,1,1,0,0,1,0,1,0,1,1,1,2,0,0,1,2,1,1,1,1,0,1,0,0,1,2,1,1,2,0,0,2,0,3,0,0,0,1,0,0,0,0,1,1,2,2,0,1,0,1,1,1,2,1,1,1,2,0,0,2,1,1,1,1],\"quality\":[5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,3,5,5,5],\"rators\":[\"T6iBEE2jp7f7iEF2P\",\"iS5BrkGLzJyPK7nKt\",\"jWbd7SYDzLPjc9EDh\",\"iojEnnY9FsMfYzp6f\",\"9pzFiFK3ANLjQfnr2\",\"Dr87ueAXbDSrEgfp2\",\"srJ34BaybkQh3qRkM\",\"hRAd998MG8Jzdpxj6\",\"T4EDBckvvv9EzZt3N\",\"DEDniTrstQYGounXT\",\"N2wnZXkhDH86mgjQ8\",\"mxX4rH5ELYkdZ2Mbw\",\"FEYpu9RWysAgW3XnP\",\"8JyqsSbN2FJXPr3cw\",\"Ds7L5bksw2QRHjrKL\",\"XD5nmvKQchKezPXhy\",\"sbJcFfQjQ59Wfg4Cd\",\"sKfrD9gjCDHuqLzSk\",\"zd9FLSzsGz3evKafy\",\"dJzNF59j2p8jWZxiQ\",\"gb9rvGus2Jv7bjZSs\",\"CHvzhtXnv8HTbPQ56\",\"H9KZi2cjt4FwH7qog\",\"QRv96jmNaYsWkxQEG\",\"Q6gEE9dG8ERy2Xu3c\",\"wRttWTM59y8m5mx7x\",\"X4rzfxGgxx6CS7Bpz\",\"J5T8gZqiZXFuFDTQ7\",\"PXAcsKkssS2yLyDv2\",\"gJYuGdkXEWWmGRLzu\",\"s5M5RvgqR9BhB9JoC\",\"66a9xX73nmTEuKs9k\",\"3cF6NXq3ZEwdkgSjb\",\"yjtdwc2AC4jA2RWtn\",\"eMuCpJ2spXWkJjWNz\",\"5HCu9Ydd86QgHDRNP\",\"cR3ibTMxLyEdDFCHY\",\"DFpZcskPncmo7fuzR\",\"tAF9Gf6PiGogbZuWs\",\"uvLimfW9x3bCp7huQ\",\"buX4mCQhtXCfBjeno\",\"u5u2YpHXiNgzDNJdX\",\"wjc4iejpErBhxWwHo\",\"a2Kmh6ekWqQQooHiQ\",\"s7PAdYARQvr8scq84\",\"oBcs8GLX2ZFLXQy8y\",\"2QGRoQn2dRq3scu7k\",\"Yp7uvStL97cC9fKkY\",\"eYfPWvZwnJQkHbSTK\",\"XbxHXmh5ZmRN2gw3K\",\"YcCLwitFMAEJSnxAW\",\"zC8WrPp5BC6c2exrW\",\"pwWtbXEjzuvrhEGwt\",\"XrqNzJ2FRG8HnGiR6\",\"PC3pLs36zNzpRDSuE\",\"9qoWqLcHGiDX429rE\",\"YRAzEBJoLvSaiPtYx\",\"9ivvGvJGvtQfigQaZ\",\"LQxof8pGabGuWP7Gn\",\"fTNQmMvTZhhiGBCMe\",\"qNszsXx28cTxvGSNj\",\"9Ly8afdtofp8DXzrt\",\"KEmTti9Tza8A2FLQW\",\"AXcnPX68zdMiLNSmu\",\"Fk9kLwoG4Brf4KsKf\",\"jgyuzt5BpA3ohHG96\",\"x2Cz7S8rCKJqCE3Xe\",\"mvJBakQ35CWAnbbEZ\",\"T6Rm8mREPMZSftzrC\",\"J3upzLHuEwXH7Z2hx\",\"AQSqD9oNv2uPfxZCR\",\"d8qtzoLB264iP8tdY\",\"FgMe2gzbxog9WzaRr\",\"jkbavR2ATFJcpmo8M\",\"NzbRqGWspQnWMoDrF\",\"NP2RxM3eBd3drnDwP\",\"aEm3Wvj2rFYRL8Lrb\",\"5PaQgfQznXjaF9e6F\",\"DTyNcDkiScCjgJt28\",\"FxbTzThBiTnRzfirA\",\"Cg3LKtEAJpsrdWroG\",\"8PwfYqoDQFThzNtvf\",\"AasGs8AeX9Lcb9xJn\",\"sHjfbGQGLHE6JR6qu\",\"yAouD3PxzED8a4gap\",\"kjvgTyRFyKHv44DcH\",\"MKT7khMBGXzA22ykf\",\"JS3hNM3XXkxPdg3yk\",\"TCvpT4EPb8qNssNB7\",\"Afnps7TJQuS9sipMb\",\"iYXdNw7tKcgA3QwBX\",\"gKnWjDjwrJh7MK2df\",\"DPi9QGLctq2y76KuE\",\"j7ebNFtte6fSkMWjj\",\"PTDFuxAzou7W6asWt\",\"Jqk2uJZZxEv5wZFze\",\"dYPkStFnLvAMsHSzZ\",\"FiaTpm7ehfDv43wSG\",\"PBnvAuiKXwjqjKG33\",\"5nbHH4eApn6So9h2n\",\"Cc2Cgj4MWXZxsTooC\",\"qaPjAANdnxFnWfj5d\",\"5QN8R22z43SrwoHDz\",\"dzS6WBTMHyFEag6Fp\",\"B4y8aoyXJtskYPFEL\",\"rhS8qXRjZcpDXkwnE\",\"AMpQSjKsRqhCDyS2j\",\"rF97GDLqCgynr7BaD\",\"vAbK8sCfKyFC78HYg\",\"mw9464S5dnenqzvpm\",\"fMp8sPsKSECdfgF9j\",\"pPpmP7xeJzGgK362R\",\"3LiSLdtN58n46NEqg\",\"FRN2W8RYpJ6GPhgRy\",\"rrSC943cCKNG48sH4\",\"gjiu8kLnHYxe4HoBN\",\"Wi4H6ayKsNDWWQCG5\",\"eHcgvkTGsH7ZziqBo\",\"NrRa4TS6uZR9xuXRt\"],\"total\":132},\"flags\":1},\"summary\":\"Mubashir was reading about Doubleton Numbers on Wikipedia.\\n\\nA natural number is a \\\"Doubleton Number\\\", if it contains exactly two distinct digits. For example, 23, 35, 100, 12121 are doubleton numbers, and 123 and 114455 are not.\\n\\nCreate a function which takes a number n and finds the next doubleton number.\\n\\nExamples\\ndoubleton(10) ➞ 12\\n12 has only two distinct\",\"tags\":[\"numbers\",\"validation\",\"strings\",\"interview\"],\"timestamp\":{\"$date\":1615201724874},\"title\":\"Doubleton Number\",\"family\":[{\"_id\":\"3u6jfbdT395GANAm9\",\"language\":\"cpp\"},{\"_id\":\"wSJcHGp3SRKsFAS9K\",\"language\":\"javascript\"},{\"_id\":\"tHF5GxWqPH69y3YsY\",\"language\":\"php\"},{\"_id\":\"MpaWRHpnu7uK7nYgB\",\"language\":\"python3\"},{\"_id\":\"6mEXhvMWxF252HcxE\",\"language\":\"ruby\"}]}}"]