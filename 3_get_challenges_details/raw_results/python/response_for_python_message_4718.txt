a["{\"msg\":\"result\",\"id\":\"1075\",\"result\":{\"_id\":\"4bX7qAqELq9XJeB26\",\"author\":\"oeharel\",\"authorId\":\"TxB4ECYdoXP7zFj3Y\",\"code\":\"def to_camel_case(txt):\\n\\t\",\"difficulty\":1.560693641618497,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"X2BzLnXFy2Pi8RgDx\",\"instructions\":\"Create a function that converts dash/underscore delimited words into camel casing. The first word within the output should be capitalized only if the original word was capitalized.\\n\\n### Examples\\n```\\nto_camel_case(\\\"A-B-C\\\") ➞ \\\"ABC\\\"\\n\\nto_camel_case(\\\"the-stealth-warrior\\\") ➞ \\\"theStealthWarrior\\\"\\n\\nto_camel_case(\\\"The_Stealth_Warrior\\\") ➞ \\\"TheStealthWarrior\\\"\\n```\\n\\n### Notes\\nAn empty string as input `\\\"\\\"` should return an empty string.\",\"lab\":\"Test.assert_equals(to_camel_case(\\\"the_stealth_warrior\\\"), \\\"theStealthWarrior\\\", \\\"Did not return correct value\\\")\\nTest.assert_equals(to_camel_case(\\\"The-Stealth-Warrior\\\"), \\\"TheStealthWarrior\\\", \\\"Did not return correct value\\\")\\nTest.assert_equals(to_camel_case(\\\"A-B-C\\\"), \\\"ABC\\\", \\\"Did not return correct value.\\\")\\nTest.assert_equals(to_camel_case(''), '', \\\"An empty string was provided but not returned.\\\")\",\"language\":\"python3\",\"summary\":\"Create a function that converts dash/underscore delimited words into camel casing. The first word within the output should be capitalized only if the original word was capitalized.\\n\\nExamples\\ntocamelcase(\\\"A-B-C\\\") ➞ \\\"ABC\\\"\\n\\ntocamelcase(\\\"the-stealth-warrior\\\") ➞ \\\"theStealthWarrior\\\"\\n\\ntocamelcase(\\\"TheStealthWarrior\\\") ➞ \\\"TheStealthWarrior\\\"\\n\\nNotes\\nAn empty string as in\",\"tags\":[\"strings\",\"formatting\",\"regex\"],\"timestamp\":{\"$date\":1557505437944},\"title\":\"Convert String to camelCase\",\"stats\":{\"completed\":{\"total\":202,\"ratings\":[2,2,2,2,2,2,2,2,2,2,1,2,3,1,2,0,1,0,2,2,2,2,2,1,2,2,2,1,1,3,1,2,2,1,2,1,1,1,1,2,0,0,2,2,1,1,2,2,1,0,2,1,2,2,2,1,3,0,2,2,2,0,2,1,2,1,2,2,2,2,2,2,2,2,2,3,1,2,1,2,1,2,2,2,2,4,2,2,3,1,2,0,2,1,2,0,3,2,1,2,2,2,2,1,1,2,1,1,2,0,2,0,1,0,0,2,2,2,2,1,2,2,2,2,1,1,2,1,2,1,3,2,1,1,2,2,2,2,1,2,3,0,1,1,2,1,2,0,0,2,1,2,2,1,2,2,0,2,1,0,2,2,2,2,0,2,2,1,0,1,3,1,2],\"rators\":[\"gb9rvGus2Jv7bjZSs\",\"yZvzB3qFb8pkHy4dg\",\"tAF9Gf6PiGogbZuWs\",\"ab7BsQuhDo3QgE6bh\",\"M8jrv2FfpMQp9Qzpx\",\"dYcLx67ZiHskdxEzS\",\"wGBmBJTfhhzFe9Lx5\",\"qvEvDcL32a5F4Tg6c\",\"8JyqsSbN2FJXPr3cw\",\"kQH5b8MXJunh84Czq\",\"SKabuq5XuhXBugKBa\",\"byHBadxxhnF5Ht7xH\",\"6ckDJWbyznyQQLkrP\",\"nc7bRhkxgKyqusYe3\",\"7PTKd4xtWnbL7BzL2\",\"Rgdjr9tBGabXFdoXL\",\"4HC75a4BAtjSd8jPv\",\"PFjMZGHNAPTkgd7tq\",\"TNQ7ixK78HHTLP7it\",\"ahWFxnaxt9bXSA4f3\",\"AF6LgdKhEdzwgRJom\",\"tHEH9MBHBAGvhgJGd\",\"C9LKGu2g5hSijvDzA\",\"TNMAJidLpPdH4kmBv\",\"yrCNkFYQBEDE76eFS\",\"3fjCCrpR2aD32sTrc\",\"PSrcg6fy835R4c5CW\",\"o5pRKAbyH9TjiB59q\",\"uSh3aNxzD28jBuhxa\",\"WkWyq9wMkZhXB6zsD\",\"6u7yc9m6HuHGbHzph\",\"td7qPZ7Lv4pEWT2Ya\",\"XKi8iZXBCHCaebSHh\",\"jYJ26SiLKBu5GRumq\",\"nfXGHENb5md7m355s\",\"sCnrfER8vCe4xhpB2\",\"N2wnZXkhDH86mgjQ8\",\"Nj6FwgBtAXsaQwsM2\",\"jHrtWDGBhkbuWa7fG\",\"gMJhLdyw3tH7L96X2\",\"yAouD3PxzED8a4gap\",\"JEAi9mG3vvBomJ3Yu\",\"jeuoearPPTcGPgXhf\",\"FgkYtHLxeD8pETJ8T\",\"498CxrZQdThLMa7ki\",\"cR3ibTMxLyEdDFCHY\",\"8ZSLfiJZfDgeh745T\",\"T2vhHPhRR96hRizq8\",\"3LiSLdtN58n46NEqg\",\"9DZaiAD2RHxo4FTRy\",\"HQxp7NcdvF92G7bYS\",\"otXtuQygbcYATMZoP\",\"2fxapKr8XGdNeaKi2\",\"HqmxnQJM66Y57twhn\",\"4y2bxsHwifCdZXAQA\",\"qJZsi5rhRnWA38FbA\",\"DLai9DxpZN6p5TPRX\",\"K96FwtfDDN5WM4Bb7\",\"scaHi5qjAWPvNTYFE\",\"DDsgAKZYqZ6tyZEwF\",\"8PE2cfZEhQBPhe8LG\",\"u5u2YpHXiNgzDNJdX\",\"yabtHTtycsWhcGBfD\",\"3SKmXhcLPPkmQhjip\",\"4tgBydK887PitgAoi\",\"tYjQweAK2k8goR4Bq\",\"C4QntmkYtB89GNtpd\",\"K3RacTvkWHLfzKF8i\",\"Jqk2uJZZxEv5wZFze\",\"Xj6R2zqhgumffQCAN\",\"Yp7uvStL97cC9fKkY\",\"BeFnbPbMnAM2SjBdZ\",\"2innwjWqxJHo4eRGh\",\"jkBTJPGPb35c3ujbo\",\"QnPD4Sv6W4LHc2Qng\",\"H9KZi2cjt4FwH7qog\",\"AasGs8AeX9Lcb9xJn\",\"4CFzv558qbGcpQwc4\",\"XCKP6XQSXeu4C2Wbz\",\"v3fjGuc7Pq4yjFygS\",\"w3A7cBWyAfukk6xEQ\",\"mxX4rH5ELYkdZ2Mbw\",\"vLrq4dEDMM2wd68Dc\",\"aEm3Wvj2rFYRL8Lrb\",\"9Ly8afdtofp8DXzrt\",\"dHZqT6h4JMwk5fPC8\",\"M9DhkxE77ztbJWz6e\",\"jNvegJWCk5HCtEMbK\",\"ZNnsMeNkdDhHjSrZb\",\"8PwfYqoDQFThzNtvf\",\"hnyhBFWwNCz9mDfSi\",\"gJYuGdkXEWWmGRLzu\",\"ci6cko4hFoAhrTpod\",\"YPoXQyWruLC8KTKgp\",\"HF28xZKSLM9wEuqNg\",\"DEDniTrstQYGounXT\",\"KdNDysEsy2TW5QRJ2\",\"9pzFiFK3ANLjQfnr2\",\"mfsaETo7uA4x5vqLD\",\"2QGRoQn2dRq3scu7k\",\"rrNComrAKsGM6iaLh\",\"ahk2qiXKJA753wAJk\",\"m6D2RuQJwrAK6WB3v\",\"eMuCpJ2spXWkJjWNz\",\"4rwxLqLs2mNZNg8NB\",\"MKT7khMBGXzA22ykf\",\"H4abACFDH5t8CnnyH\",\"ZrKCkX7xxGGZzauFW\",\"NG8PWBSjsM8mMhQEq\",\"syRNbbPdLCGXbH2Gy\",\"mDWNyaaQ9hvPCRzSd\",\"iojEnnY9FsMfYzp6f\",\"mkpF59RggjfgD9Qm9\",\"s5M5RvgqR9BhB9JoC\",\"Pe8vWpDHRuH9nSGKW\",\"yjtdwc2AC4jA2RWtn\",\"zT9LpkiwYjLviYYW6\",\"NNE5HNRXAkmhrWgyQ\",\"XrqNzJ2FRG8HnGiR6\",\"oBcs8GLX2ZFLXQy8y\",\"w2HhxvSLmDhaGCAjE\",\"mG8HqKiAQFTdRZthG\",\"tpxMgkGSHwBjS95Ta\",\"QRv96jmNaYsWkxQEG\",\"gXTAie79kiw28tx5u\",\"DYDJTyGgKFnBRLm2r\",\"FEYpu9RWysAgW3XnP\",\"DPi9QGLctq2y76KuE\",\"c7uBxu2rgY77H5d79\",\"J3upzLHuEwXH7Z2hx\",\"iS5BrkGLzJyPK7nKt\",\"Ecg4m7srYGgZsb4Ck\",\"PpnKYDFsc2Cs6ak5v\",\"dYPkStFnLvAMsHSzZ\",\"5XiuAqicKD4hBdu63\",\"JS3hNM3XXkxPdg3yk\",\"cAP3n5NY64uoMwzRR\",\"22kSvGZ9z9J2KK8nc\",\"shdSrDq5ZKqfpgjmu\",\"KJCDwGkoXh8qtbbKr\",\"RGMbFMZXJr7DhcAJy\",\"zd9FLSzsGz3evKafy\",\"dBzwBtRjZqB98DJeB\",\"rfyEkETeoS96QNH4e\",\"d8qtzoLB264iP8tdY\",\"Wv2vJnEj8ywNmARoF\",\"7txFzDQ43vJ7qCY88\",\"r579vsQvT57bCxrE5\",\"5HCu9Ydd86QgHDRNP\",\"5S9nX4rKsnCcnv4Cz\",\"eYfPWvZwnJQkHbSTK\",\"GGdmhAvxXhqhhibJN\",\"gSFJPsMXnqAog3Q9f\",\"srJ34BaybkQh3qRkM\",\"Ds7L5bksw2QRHjrKL\",\"J5T8gZqiZXFuFDTQ7\",\"o4ixjQGSaYqA2JoM4\",\"CHvzhtXnv8HTbPQ56\",\"66a9xX73nmTEuKs9k\",\"T6iBEE2jp7f7iEF2P\",\"PC3pLs36zNzpRDSuE\",\"kdcWyvQAs27aCfbr8\",\"yr822PZmmiDDenxpB\",\"yod5YhKtPqw2GfG9B\",\"JhX7jvtpwNyxcc39m\",\"eHcgvkTGsH7ZziqBo\",\"Z7mDto6WsmGCtWZmA\",\"sbJcFfQjQ59Wfg4Cd\",\"AJexRBN9cYQmqvYu6\",\"sHjfbGQGLHE6JR6qu\",\"8BFSTCnoe2QggN64c\",\"mvJBakQ35CWAnbbEZ\",\"qzXAMXsHZGT8o5hTA\",\"ey3CASd6Je5LEJzfB\",\"BrTDhPJcACL2bsrpJ\",\"YRAzEBJoLvSaiPtYx\",\"buX4mCQhtXCfBjeno\",\"2PufnQcsHsfymufX3\",\"KsYk4jsRLMz2ToPco\",\"d9LBRxvADNBB5QJMB\",\"dzS6WBTMHyFEag6Fp\",\"4TmgHkn5vqyHK3sYC\",\"pduNK68oazqQTtbLp\",\"3nied3n8KG8RSNixH\",\"4Lwjr34ypKNQNQCar\",\"NzbRqGWspQnWMoDrF\",\"X4rzfxGgxx6CS7Bpz\",\"Wi4H6ayKsNDWWQCG5\",\"5QN8R22z43SrwoHDz\"],\"quality\":[5,4,5,2,5,5,4,5,5,5,3,4,3,5,5,5,5,5,5,4,5,5,5,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"isHidden\":false,\"quality\":4.576923076923077,\"family\":[{\"_id\":\"9PsMWfD9Zr66Lgoot\",\"language\":\"cpp\"},{\"_id\":\"sF6Lm5LQsy6u2ZKeZ\",\"language\":\"java\"},{\"_id\":\"xt4CMLpfFRuDTsJgC\",\"language\":\"javascript\"},{\"_id\":\"4bX7qAqELq9XJeB26\",\"language\":\"python3\"},{\"_id\":\"fytyzsQXmHCNw6Nhn\",\"language\":\"ruby\"}]}}"]