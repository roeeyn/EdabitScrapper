a["{\"msg\":\"result\",\"id\":\"1772\",\"result\":{\"_id\":\"vfJujzoYBtgLC8frK\",\"author\":\"Luis Pereira\",\"authorId\":\"aEm3Wvj2rFYRL8Lrb\",\"code\":\"def word_to_decimal(word):\\n\\t\",\"difficulty\":2.3404255319148937,\"familyId\":\"wB7JZogWKQjdhpYFb\",\"instructions\":\"In this challenge, you have to find the numeric value of a given word. Instead of the usual sum of Unicode values, you have to convert the whole word into a decimal number from a base equal to ten plus the position in the alphabet of the \\\"highest\\\" letter of the word (counting from `a = 1` to `z = 26`).\\n\\nHere's an illustrative example. In the word `\\\"Edabit\\\"` the highest letter in the alphabet is `t`. Since `t` is the 20th letter of the alphabet, we thus regard `\\\"Edabit\\\"` as a number in base-30 (since 10+20=30). Next, we note that in base-30 the letters `e`, `d`, `a`, `b`, `i`, `t` represent, respectively, the numbers `14`, `13`, `10`, `11`, `18`, `29`. Thus, we compute:\\n\\n```\\n14 * 30**5 + 13 * 30**4 + 10 * 30**3 + 11 * 30**2 + 18 * 30 + 29 = 351010469\\n```\\n\\n... which shows that `\\\"Edabit\\\"` regarded as a number in base-30 is the number `351010469` in base-10.\\n\\n### Goal\\nImplement a function that, given a `word`, returns an integer being the decimal value obtained after the conversion from the `word` specific base, according to the instructions above.\\n\\n### Examples\\n```\\nword_to_decimal(\\\"Edabit\\\") ➞ 351010469\\n# The highest letter of \\\"Edabit\\\" in the alphabet is \\\"t\\\"\\n# \\\"t\\\" is the 20th letter of the alphabet: adding 10 the result is 30\\n# \\\"Edabit\\\" in base-30 is equal to 351010469 in base-10\\n\\nword_to_decimal(\\\"Python\\\") ➞ 1365333188\\n# The highest letter of \\\"Python\\\" in the alphabet is \\\"y\\\"\\n# \\\"y\\\" is the 25th letter of the alphabet: adding 10 the result is 35\\n# \\\"Python\\\" in base-35 is equal to 1365333188 in base-10\\n\\nword_to_decimal(\\\"ZERO\\\") ➞ 1652100\\n# The highest letter of \\\"ZERO\\\" in the alphabet is \\\"Z\\\"\\n# \\\"Z\\\" is the 26th letter of the alphabet: adding 10 the result is 36\\n# \\\"ZERO\\\" in base-36 is equal to 1652100 in base-10\\n```\\n\\n### Notes\\n- The bases that accept letters in their representation are those starting from 11 (using 10 digits and 1 letter) up to 36 (using 10 digits and 26 letters).\\n- Every given `word` will be a valid one made of just letters, either lowercase or uppercase. Note, however, that uppercase and lowercase do not affect the value of each letter.\",\"isHidden\":false,\"lab\":\"Test.assert_equals(word_to_decimal(\\\"Edabit\\\"), 351010469, \\\"Example #1\\\")\\nTest.assert_equals(word_to_decimal(\\\"Python\\\"), 1365333188, \\\"Example #2\\\")\\nTest.assert_equals(word_to_decimal(\\\"ZERO\\\"), 1652100, \\\"Example #3\\\")\\nTest.assert_equals(word_to_decimal(\\\"oNe\\\"), 15589)\\nTest.assert_equals(word_to_decimal(\\\"TwO\\\"), 32661)\\nTest.assert_equals(word_to_decimal(\\\"THRee\\\"), 23973734)\\nTest.assert_equals(word_to_decimal(\\\"Four\\\"), 470886)\\nTest.assert_equals(word_to_decimal(\\\"fIVe\\\"), 510958)\\nTest.assert_equals(word_to_decimal(\\\"SIx\\\"), 33013)\\nTest.assert_equals(word_to_decimal(\\\"seven\\\"), 29851095)\\nTest.assert_equals(word_to_decimal(\\\"eigHt\\\"), 11840939)\\n\\n# Original JavaScript challenge by er0s\",\"language\":\"python3\",\"summary\":\"In this challenge, you have to find the numeric value of a given word. Instead of the usual sum of Unicode values, you have to convert the whole word into a decimal number from a base equal to ten plus the position in the alphabet of the \\\"highest\\\" letter of the word (counting from a = 1 to z = 26).\\n\\nHere's an illustrative example. In the word \\\"Edabit\\\" the high\",\"tags\":[\"numbers\",\"strings\",\"formatting\"],\"timestamp\":{\"$date\":1599053224797},\"title\":\"The Secret Bases of Words\",\"stats\":{\"completed\":{\"total\":47,\"ratings\":[2,2,2,2,2,2,3,3,3,2,3,2,2,3,2,3,3,1,3,4,3,1,4,4,4,2,3,4,2,4,2,2,0,0,2,2,3,3,0,2,2,2,2,2,3,0,3],\"rators\":[\"aEm3Wvj2rFYRL8Lrb\",\"8PwfYqoDQFThzNtvf\",\"tAF9Gf6PiGogbZuWs\",\"s5M5RvgqR9BhB9JoC\",\"KZ2xddpM2f9JRaryB\",\"iS5BrkGLzJyPK7nKt\",\"8JyqsSbN2FJXPr3cw\",\"gb9rvGus2Jv7bjZSs\",\"gJYuGdkXEWWmGRLzu\",\"qD2LrwaDrSdiybLKY\",\"xn7uGNKeAwPEkP9oA\",\"J3upzLHuEwXH7Z2hx\",\"Jqk2uJZZxEv5wZFze\",\"Yp7uvStL97cC9fKkY\",\"buX4mCQhtXCfBjeno\",\"p7js9trz2zk2RorCR\",\"8sNv5PTHa7XQ8bNqR\",\"DQskEvAv5KiJDPtGF\",\"p8qqFdJ3FSk5x9z3G\",\"fSQSHjW3e72MrWxbD\",\"QRv96jmNaYsWkxQEG\",\"n2BRY9X8899dcG8Bw\",\"iojEnnY9FsMfYzp6f\",\"2PufnQcsHsfymufX3\",\"AasGs8AeX9Lcb9xJn\",\"P7NmFbCJ5offXMRvB\",\"GTKsdeEihE636Le9i\",\"LQxof8pGabGuWP7Gn\",\"d8qtzoLB264iP8tdY\",\"HqmxnQJM66Y57twhn\",\"fznzd3qnvtbFkkizz\",\"DrTeBk3bpLqhsLS4g\",\"etoxSpG4fGKThLozM\",\"7wEd3pvkQCeixZ4mn\",\"LNCb5rksJLJ43L4Nw\",\"vENChrv7iXxTzJ4pw\",\"TCp6RbbthXfRJzNEJ\",\"v23Ft2Ye7zzEn7Hmd\",\"3KkyQm77zsew58Dc2\",\"oBcs8GLX2ZFLXQy8y\",\"AFfw7cGg83uYk2Miy\",\"T6iBEE2jp7f7iEF2P\",\"yod5YhKtPqw2GfG9B\"],\"quality\":[5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"aEm3Wvj2rFYRL8Lrb\",\"quality\":5,\"family\":[{\"_id\":\"fxMe9pKFgfHgujahQ\",\"language\":\"javascript\"},{\"_id\":\"vfJujzoYBtgLC8frK\",\"language\":\"python3\"},{\"_id\":\"yJEXdkWCuaH7SvGhQ\",\"language\":\"ruby\"}]}}"]