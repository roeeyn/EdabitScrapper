a["{\"msg\":\"result\",\"id\":\"2025\",\"result\":{\"_id\":\"BpKbaegMQJ5xRADtb\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"def is_unprimeable(num):\\n\\t\",\"difficulty\":2.8225806451612905,\"familyId\":\"x96wyRD3B8avbf5gM\",\"instructions\":\"In this challenge, you have to establish if an integer is an Unprimeable number. To be Unprimeable, when a single digit of a composite number is exchanged with any digit from `0` up to `9`, the new number obtained **must not be** a prime:\\n\\n```\\nnumber = 14\\n\\nNumbers obtained changing the first digit (1):\\n\\n04 (4), 14, 24, 34, 44, 54, 64, 74, 84, 94\\n# Leading zeros are not considered\\n\\nNumbers obtained changing the second digit (4):\\n\\n10, 11, 12, 13, 14, 15, 16, 17, 18, 19\\n\\n# Among the two series, 11, 13, 17 and 19 are primes\\n# 14 is not an unprimeable number\\n\\nnumber = 200\\n\\nNumbers obtained changing the first digit (2):\\n\\n000 (0), 100, 200, 300, 400, 500, 600, 700, 800, 900\\n# Leading zeros are not considered\\n\\nNumbers obtained changing the second digit (0):\\n\\n200, 210, 220, 230, 240, 250, 260, 270, 280, 290\\n\\nNumbers obtained changing the third digit (0):\\n\\n200, 201, 202, 203, 204, 205, 206, 207, 208, 209\\n\\n# Among the three series, there aren't primes\\n# 200 is an unprimeable number (the first of the series)\\n```\\n\\nGiven a non-negative integer `num`, implement a function that returns:\\n- The string `\\\"Prime Input\\\"` if `num` is prime.\\n- The string `\\\"Unprimeable\\\"` if `num` is Unprimeable (accordingly to the above instructions).\\n- If `num` is not Unprimeable, an array containing all the primes obtained after exchanging its digits, without duplicates and sorted ascendingly.\\n\\n### Examples\\n```\\nis_unprimeable(200) ➞ \\\"Unprimeable\\\"\\n\\nis_unprimeable(14) ➞ [11, 13, 17, 19]\\n\\nis_unprimeable(2) ➞ \\\"Prime Input\\\"\\n```\\n\\n### Notes\\n- When changing the first digit, leading zeros are not considered part of the new number obtained.\\n- Despite is still an unproofed theory, as far as we know every even number (except `2`) is not prime. You are free to choose to use this discriminant when you check the number obtained after the change of a digit.\\n- The same concept can be applied also to primes. Primes that do not return other primes when their single digits are changed (apart from the number itself)  are called _Weakly Primes_: the first prime of this series is `294001`.\",\"isHidden\":false,\"lab\":\"Test.assert_equals(is_unprimeable(200), \\\"Unprimeable\\\", \\\"Example #1\\\")\\nTest.assert_equals(is_unprimeable(14), [11, 13, 17, 19], \\\"Example #2\\\")\\nTest.assert_equals(is_unprimeable(2), \\\"Prime Input\\\", \\\"Example #3\\\")\\nTest.assert_equals(is_unprimeable(839), \\\"Prime Input\\\")\\nTest.assert_equals(is_unprimeable(4065), \\\"Unprimeable\\\")\\nTest.assert_equals(is_unprimeable(5042), \\\"Unprimeable\\\")\\nTest.assert_equals(is_unprimeable(1), [2, 3, 5, 7])\\nTest.assert_equals(is_unprimeable(5137), [137, 2137, 3137, 5107, 5147, 5167, 5197, 5237, 5437, 5737, 9137])\\nTest.assert_equals(is_unprimeable(666), [661])\\nTest.assert_equals(is_unprimeable(13490), [13499])\\nTest.assert_equals(is_unprimeable(294001), \\\"Prime Input\\\")\",\"language\":\"python3\",\"summary\":\"In this challenge, you have to establish if an integer is an Unprimeable number. To be Unprimeable, when a single digit of a composite number is exchanged with any digit from 0 up to 9, the new number obtained must not be a prime:\\n\\nnumber = 14\\n\\nNumbers obtained changing the first digit (1):\\n\\n04 (4), 14, 24, 34, 44, 54, 64, 74, 84, 94\\nLeading zeros are not cons\",\"tags\":[\"loops\",\"numbers\",\"conditions\"],\"timestamp\":{\"$date\":1580351439036},\"title\":\"The Unprimeables\",\"stats\":{\"completed\":{\"total\":68,\"ratings\":[2,2,2,2,2,2,3,2,3,3,3,3,4,4,2,3,3,4,2,2,2,1,3,2,3,2,2,1,4,4,4,4,4,3,3,4,3,2,2,4,4,4,4,4,3,2,2,3,0,2,4,2,4,3,4,4,4,2,4,0,4,2],\"rators\":[\"Jqk2uJZZxEv5wZFze\",\"gb9rvGus2Jv7bjZSs\",\"2innwjWqxJHo4eRGh\",\"tAF9Gf6PiGogbZuWs\",\"8JyqsSbN2FJXPr3cw\",\"s5M5RvgqR9BhB9JoC\",\"C4QntmkYtB89GNtpd\",\"8PwfYqoDQFThzNtvf\",\"JKb5rhL6DKcCAypF9\",\"sWX2tYC7J4m2GkcRC\",\"aCNWav8S8Try9RkC6\",\"fBqQjriC4QEtFNxFe\",\"WLFPvm65aHfgwQy7N\",\"aEm3Wvj2rFYRL8Lrb\",\"yZvzB3qFb8pkHy4dg\",\"2fxapKr8XGdNeaKi2\",\"vuwheqp25x7RkBHXn\",\"AasGs8AeX9Lcb9xJn\",\"pHpGCimfadYznq5Wb\",\"xocwRwFQ7rgFspDF9\",\"wPxeazAYct9gG2eRM\",\"BByKDngfPvW6w4m7d\",\"zQDpJRC4nnCG56j8S\",\"6E8GoWCrHpDvHZjWG\",\"Phd2FdPjo9BhBfvKh\",\"bLpgu8xTdpDPFSAsM\",\"5JZNWts9XEHejpvur\",\"3CddxEkvCvRoCLQ7b\",\"aP7JkkYer28YWrPvC\",\"DwetpbChQM4r6Gwah\",\"fznzd3qnvtbFkkizz\",\"gJYuGdkXEWWmGRLzu\",\"ZNnsMeNkdDhHjSrZb\",\"55RQznnuTGpsj3EXd\",\"bJaPCBx63YxdJAuTS\",\"FgkYtHLxeD8pETJ8T\",\"T6xRoSqcSHjvP2Tik\",\"n2BRY9X8899dcG8Bw\",\"YLtspA8ec6ntcoMMf\",\"cykCKNJcqFBxz4T8s\",\"Ecg4m7srYGgZsb4Ck\",\"xn7uGNKeAwPEkP9oA\",\"KZ2xddpM2f9JRaryB\",\"qPpQfR5KyDb5Y3EFf\",\"foytX6kH9wiSYqLtT\",\"f2BoqyCpgnmjEjLqx\",\"zZDaXBxMzTCBhNkgL\",\"vTfyrr4pGddp8rbXc\",\"SGhPxX5bHGL8zZqtt\",\"yjtdwc2AC4jA2RWtn\",\"HF28xZKSLM9wEuqNg\",\"8ZhzKvdhsdKgpf6BT\",\"8sNv5PTHa7XQ8bNqR\",\"iS5BrkGLzJyPK7nKt\",\"p8qqFdJ3FSk5x9z3G\",\"J3upzLHuEwXH7Z2hx\",\"iojEnnY9FsMfYzp6f\",\"QRv96jmNaYsWkxQEG\",\"GTKsdeEihE636Le9i\",\"DPi9QGLctq2y76KuE\",\"T6iBEE2jp7f7iEF2P\",\"2PufnQcsHsfymufX3\",\"gXTAie79kiw28tx5u\"],\"quality\":[5,5,5,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":1},\"quality\":5,\"family\":[{\"_id\":\"nPDQ5rYH8WccdQx33\",\"language\":\"javascript\"},{\"_id\":\"BpKbaegMQJ5xRADtb\",\"language\":\"python3\"},{\"_id\":\"jKQ9KDzeBpiLkWpQA\",\"language\":\"ruby\"}]}}"]