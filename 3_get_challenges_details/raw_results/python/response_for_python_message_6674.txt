a["{\"msg\":\"result\",\"id\":\"2045\",\"result\":{\"_id\":\"i5KL9xzKt6WSBsds9\",\"author\":\"Kavin Umasankar\",\"authorId\":\"td7qPZ7Lv4pEWT2Ya\",\"code\":\"def can_move(piece, current, target):\\n\\t\",\"difficulty\":2.88,\"editorId\":\"td7qPZ7Lv4pEWT2Ya\",\"familyId\":\"Fw5iKeZRJ53jey8hx\",\"instructions\":\"Create a function that takes the name of a chess piece, its position and a target position. The function should return `True` if the piece can move to the target and `False` if it can't.\\n\\nThe possible inputs are \\\"Pawn\\\", \\\"Knight\\\", \\\"Bishop\\\", \\\"Rook\\\", \\\"Queen\\\" and \\\"King\\\".\\n\\n### Examples\\n```\\ncan_move(\\\"Rook\\\", \\\"A8\\\", \\\"H8\\\") ➞ True\\n\\ncan_move(\\\"Bishop\\\", \\\"A7\\\", \\\"G1\\\") ➞ True\\n\\ncan_move(\\\"Queen\\\", \\\"C4\\\", \\\"D6\\\") ➞ False\\n```\\n\\n### Notes\\n- Do not include pawn capture moves and en passant.\\n- Do not include castling.\\n- Remember to include pawns' two-square move on the second rank!\\n- Look for patterns in the movement of the pieces.\",\"lab\":\"Test.assert_equals(can_move(\\\"Pawn\\\", \\\"A5\\\", \\\"A6\\\"), True)\\nTest.assert_equals(can_move(\\\"Pawn\\\", \\\"G2\\\", \\\"G4\\\"), True)\\nTest.assert_equals(can_move(\\\"Pawn\\\", \\\"C6\\\", \\\"D7\\\"), False)\\nTest.assert_equals(can_move(\\\"Knight\\\", \\\"F5\\\", \\\"E3\\\"), True)\\nTest.assert_equals(can_move(\\\"Knight\\\", \\\"F6\\\", \\\"E5\\\"), False)\\nTest.assert_equals(can_move(\\\"Bishop\\\", \\\"B4\\\", \\\"E7\\\"), True)\\nTest.assert_equals(can_move(\\\"Bishop\\\", \\\"B6\\\", \\\"F5\\\"), False)\\nTest.assert_equals(can_move(\\\"Rook\\\", \\\"A8\\\", \\\"H8\\\"), True)\\nTest.assert_equals(can_move(\\\"Rook\\\", \\\"A8\\\", \\\"H7\\\"), False)\\nTest.assert_equals(can_move(\\\"Queen\\\", \\\"A8\\\", \\\"H1\\\"), True)\\nTest.assert_equals(can_move(\\\"Queen\\\", \\\"A6\\\", \\\"H4\\\"), False)\\nTest.assert_equals(can_move(\\\"King\\\", \\\"C4\\\", \\\"D5\\\"), True)\\nTest.assert_equals(can_move(\\\"King\\\", \\\"B7\\\", \\\"B5\\\"), False)\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[3,3,3,3,3,3,3,2,0,2,3,3,4,3,4,3,3,4,1,3,4,4,4,2,4,2,2,3,4,4,2,0,3,3,4,2,3,4,4,4,4,1,1,3,4,1,3,3,2,4],\"rators\":[\"AYaEkTWLMmfzpwejr\",\"tAF9Gf6PiGogbZuWs\",\"yZvzB3qFb8pkHy4dg\",\"td7qPZ7Lv4pEWT2Ya\",\"gb9rvGus2Jv7bjZSs\",\"8JyqsSbN2FJXPr3cw\",\"BFNm9gacwba9KyLFW\",\"nrA8Pacm3A6GqGzq4\",\"7g3vZaQXhLpxrajyg\",\"9Gf6g4fuKc3uou9w2\",\"pMuvoqcmxHbuRSfb9\",\"cmwasetrBzbwJQbks\",\"nF9pCCzbGDhzvWgaw\",\"5airAWy8rSJDRewDR\",\"eDmE2DscmShjauARX\",\"cXdji3zveDkuNo9ch\",\"Tin42WiZ4JTDEnS7b\",\"HqmxnQJM66Y57twhn\",\"s5M5RvgqR9BhB9JoC\",\"8PwfYqoDQFThzNtvf\",\"oDZaopxpPAdqWXLqz\",\"uw8E83imJYpQiiPpP\",\"aEm3Wvj2rFYRL8Lrb\",\"AasGs8AeX9Lcb9xJn\",\"fznzd3qnvtbFkkizz\",\"ZNnsMeNkdDhHjSrZb\",\"diaiQeWEE8GbMnKue\",\"YRstQuthRkFeBiXug\",\"SGhPxX5bHGL8zZqtt\",\"Tb2m9eGdTuSG8RbyD\",\"Nfsj4eNFDjaFa39ga\",\"xn7uGNKeAwPEkP9oA\",\"gJYuGdkXEWWmGRLzu\",\"wm7WXKmj7RN9TQjwZ\",\"HF28xZKSLM9wEuqNg\",\"fjo64MWRERriEhtqc\",\"qPpQfR5KyDb5Y3EFf\",\"Afnps7TJQuS9sipMb\",\"iojEnnY9FsMfYzp6f\",\"J3upzLHuEwXH7Z2hx\",\"yjtdwc2AC4jA2RWtn\",\"8sNv5PTHa7XQ8bNqR\",\"GTKsdeEihE636Le9i\",\"iS5BrkGLzJyPK7nKt\",\"MpfytGFYF77emJ3cT\",\"DPi9QGLctq2y76KuE\",\"2PufnQcsHsfymufX3\",\"gXTAie79kiw28tx5u\",\"6eRm9ycMujNDWoTyL\"],\"total\":51,\"quality\":[5,5,5,5]},\"flags\":0},\"subscribers\":[\"td7qPZ7Lv4pEWT2Ya\"],\"summary\":\"Create a function that takes the name of a chess piece, its position and a target position. The function should return True if the piece can move to the target and False if it can't.\\n\\nThe possible inputs are \\\"Pawn\\\", \\\"Knight\\\", \\\"Bishop\\\", \\\"Rook\\\", \\\"Queen\\\" and \\\"King\\\".\\n\\nExamples\\ncan_move(\\\"Rook\\\", \\\"A8\\\", \\\"H8\\\") ➞ True\\n\\ncan_move(\\\"Bishop\\\", \\\"A7\\\", \\\"G1\\\") ➞ True\\n\\ncan_move(\\\"Qu\",\"tags\":[\"games\",\"logic\",\"algorithms\",\"validation\"],\"timestamp\":{\"$date\":1563902899813},\"title\":\"Chess Pieces\",\"isHidden\":false,\"quality\":5,\"family\":[{\"_id\":\"DqaLizN7DtKDRRrxv\",\"language\":\"cpp\"},{\"_id\":\"A8xQZTqzkn88cLCmj\",\"language\":\"java\"},{\"_id\":\"XyLRwKkiZnaAKAbXM\",\"language\":\"javascript\"},{\"_id\":\"i5KL9xzKt6WSBsds9\",\"language\":\"python3\"},{\"_id\":\"ze3FSebL3fiWx3K4D\",\"language\":\"ruby\"}]}}"]