a["{\"msg\":\"result\",\"id\":\"1480\",\"result\":{\"_id\":\"JAdCy7nMK8urjv9rL\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def can_partition(lst):\\n\\t\",\"difficulty\":2.0704225352112675,\"familyId\":\"Xspw3uxQ9zjYCwfwg\",\"instructions\":\"Write a function that returns `True` if you can partition a list into **one element and the rest**, such that this element is equal to the **product** of all other elements **excluding itself**.\\n\\n### Examples\\n```\\ncan_partition([2, 8, 4, 1]) ➞ True\\n# 8 = 2 x 4 x 1\\n\\ncan_partition([-1, -10, 1, -2, 20]) ➞ False\\n\\ncan_partition([-1, -20, 5, -1, -2, 2]) ➞ True\\n```\\n\\n### Notes\\n- The list may contain duplicates.\\n- Multiple solutions can exist, any solution is sufficient to return `True`.\",\"lab\":\"Test.assert_equals(can_partition([-1, -10, 1, -2, 20]), False)\\nTest.assert_equals(can_partition([-1, -20, 5, -1, -2, 2]), True)\\nTest.assert_equals(can_partition([2, 8, 4, 1]), True)\\nTest.assert_equals(can_partition([1, 1, -1, 1]), False)\\nTest.assert_equals(can_partition([-1, -1, 1, 1]), True)\\nTest.assert_equals(can_partition([0, 5, 1, -1]), False)\\nTest.assert_equals(can_partition([0, 1, 1, -1]), False)\\nTest.assert_equals(can_partition([0, 1, 1, 1]), False)\\nTest.assert_equals(can_partition([0, 0, 1, 1]), True)\\nTest.assert_equals(can_partition([0, 0, 1]), True)\\nTest.assert_equals(can_partition([0, 0, 0]), True)\\nTest.assert_equals(can_partition([5, 5, 25, 100]), False)\\nTest.assert_equals(can_partition([-1, 5, 20, 100]), False)\\nTest.assert_equals(can_partition([1, 1, 1, 1]), True)\\nTest.assert_equals(can_partition([-1, 1, -1]), True)\\nTest.assert_equals(can_partition([-1, 1, 1]), False)\",\"language\":\"python3\",\"summary\":\"Write a function that returns True if you can partition a list into one element and the rest, such that this element is equal to the product of all other elements excluding itself.\\n\\nExamples\\ncan_partition([2, 8, 4, 1]) ➞ True\\n8 = 2 x 4 x 1\\n\\ncan_partition([-1, -10, 1, -2, 20]) ➞ False\\n\\ncan_partition([-1, -20, 5, -1, -2, 2]) ➞ True\\n\\nNotes\\nThe list may contain du\",\"tags\":[\"arrays\",\"logic\",\"loops\"],\"timestamp\":{\"$date\":1555480789260},\"title\":\"Product of Remaining Elements\",\"stats\":{\"completed\":{\"total\":157,\"ratings\":[2,2,2,2,2,2,2,2,2,2,3,2,3,1,2,3,2,2,3,3,3,1,2,0,3,2,2,1,3,2,3,2,3,2,1,2,3,2,2,3,3,0,2,2,1,1,3,3,2,2,2,1,3,3,2,3,3,3,2,3,2,0,2,3,0,2,2,2,1,2,3,2,2,2,2,2,0,3,5,1,3,3,2,2,2,2,2,3,2,0,3,3,3,2,1,2,3,0,3,2,2,2,1,3,2,3,2,3,1,0,3,3,2,2,3,4,1,2,3,3,1,3,1,2,2,0,2,0,3,2,2,2,2,2,1,2,3,0,0,3,2,3],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"yZvzB3qFb8pkHy4dg\",\"tAF9Gf6PiGogbZuWs\",\"8JyqsSbN2FJXPr3cw\",\"gb9rvGus2Jv7bjZSs\",\"T3ZAuoMrJjvZwN55B\",\"M8jrv2FfpMQp9Qzpx\",\"ab7BsQuhDo3QgE6bh\",\"FikSPhcrHBpQ4CyGC\",\"kQH5b8MXJunh84Czq\",\"9Gf6g4fuKc3uou9w2\",\"MXjxGML2X75x64vJo\",\"PFjMZGHNAPTkgd7tq\",\"C9LKGu2g5hSijvDzA\",\"6u7yc9m6HuHGbHzph\",\"nF9pCCzbGDhzvWgaw\",\"AF6LgdKhEdzwgRJom\",\"kB33rv8vc7mgoaMHG\",\"jHrtWDGBhkbuWa7fG\",\"WkWyq9wMkZhXB6zsD\",\"AYaEkTWLMmfzpwejr\",\"jYJ26SiLKBu5GRumq\",\"nzx4uAPg3hCceyFPE\",\"hsrNYf3WbexXJKhCq\",\"cR3ibTMxLyEdDFCHY\",\"gMJhLdyw3tH7L96X2\",\"6kmq69yr7F5bW5ygQ\",\"Nj6FwgBtAXsaQwsM2\",\"2fxapKr8XGdNeaKi2\",\"s5M5RvgqR9BhB9JoC\",\"Jg8ZSRXe3NoDMCqGu\",\"HqmxnQJM66Y57twhn\",\"otXtuQygbcYATMZoP\",\"DDsgAKZYqZ6tyZEwF\",\"GZY9f5KnQSfGuuHwb\",\"XjyaCd8bviTitHTwa\",\"Jqk2uJZZxEv5wZFze\",\"8PwfYqoDQFThzNtvf\",\"6ShafRStcvew4GfCh\",\"C4QntmkYtB89GNtpd\",\"K96FwtfDDN5WM4Bb7\",\"2innwjWqxJHo4eRGh\",\"orFLgPDw9H5MDzmwo\",\"Yp7uvStL97cC9fKkY\",\"sJWTa7iWeRoRtqJ8N\",\"4fctAnxyFRB8stPRQ\",\"FiaTpm7ehfDv43wSG\",\"pmgFEciNrd3ES9tuu\",\"AasGs8AeX9Lcb9xJn\",\"pkQBaSzukotPEXmrD\",\"PytNZK9mNiRiZxPrm\",\"mDWNyaaQ9hvPCRzSd\",\"Z85ajWfZ4jDPkbvR4\",\"w3A7cBWyAfukk6xEQ\",\"y8ci4crEusJKj7uj4\",\"TccnEKGqp7fbL3KxN\",\"aEm3Wvj2rFYRL8Lrb\",\"r5GGrGb3G47LHmPWF\",\"ZNnsMeNkdDhHjSrZb\",\"cuAeJFK5w7BJtnmux\",\"3Zceb8GudqAG3onG3\",\"kYWb8BwpKwunQkxeX\",\"YRstQuthRkFeBiXug\",\"55RQznnuTGpsj3EXd\",\"EjbDDFRECrzQDkzrX\",\"gJYuGdkXEWWmGRLzu\",\"ivY4f9qjLwqzwPA5D\",\"FRN2W8RYpJ6GPhgRy\",\"ekQh3jzgGLsEMbKo3\",\"J5T8gZqiZXFuFDTQ7\",\"zT9LpkiwYjLviYYW6\",\"aCNWav8S8Try9RkC6\",\"k3fNrZ7BGs2PdLSuZ\",\"KdNDysEsy2TW5QRJ2\",\"HF28xZKSLM9wEuqNg\",\"JS3hNM3XXkxPdg3yk\",\"Fhwnime223hGiaHaA\",\"yr822PZmmiDDenxpB\",\"hab8YixsXxe4CcZpP\",\"4rwxLqLs2mNZNg8NB\",\"W5TajitmCyxz87zAC\",\"n2BRY9X8899dcG8Bw\",\"DEDniTrstQYGounXT\",\"hnyhBFWwNCz9mDfSi\",\"hX2iktknBz6it4BwK\",\"KAE5csCXsqwzSCQqP\",\"rzX5PujzJGJK7mMCi\",\"iojEnnY9FsMfYzp6f\",\"dEuJGZbBQkveCXEFk\",\"f2BoqyCpgnmjEjLqx\",\"zZDaXBxMzTCBhNkgL\",\"dH78a2Z5xtrw5Q77t\",\"bJxaKHJqR82EWw8Su\",\"ACEZh39brWjdGkZXb\",\"iS5BrkGLzJyPK7nKt\",\"Ecg4m7srYGgZsb4Ck\",\"9pzFiFK3ANLjQfnr2\",\"7saJ6s2T8HRDfThbx\",\"DrkR35NqnP9NDLbq6\",\"yjtdwc2AC4jA2RWtn\",\"YpxSM6GfSDD3kf9nu\",\"CwXsu25ygLEwQbmQC\",\"ZrKCkX7xxGGZzauFW\",\"jL4y5fTJAMBjhZmko\",\"p8qqFdJ3FSk5x9z3G\",\"QyYmR6GqGSiw8KXYc\",\"8fZxjQfuXw5HMSRJM\",\"QRv96jmNaYsWkxQEG\",\"DPi9QGLctq2y76KuE\",\"9FCeFzjPA4jrQ7oHW\",\"xn7uGNKeAwPEkP9oA\",\"dkcmCKwqApX5jBggc\",\"J3upzLHuEwXH7Z2hx\",\"d8qtzoLB264iP8tdY\",\"gXTAie79kiw28tx5u\",\"Wv2vJnEj8ywNmARoF\",\"6XBFEzEaMxZbYJwJS\",\"oBcs8GLX2ZFLXQy8y\",\"cAP3n5NY64uoMwzRR\",\"GTKsdeEihE636Le9i\",\"srJ34BaybkQh3qRkM\",\"GGdmhAvxXhqhhibJN\",\"eHcgvkTGsH7ZziqBo\",\"5cwvQQnT66ArTLRjj\",\"buX4mCQhtXCfBjeno\",\"PWgzeK859suojbrRx\",\"H9KZi2cjt4FwH7qog\",\"5HH239FpCsu6fTr5R\",\"gKnWjDjwrJh7MK2df\",\"StNu7DPyTgEStZsMY\",\"T6iBEE2jp7f7iEF2P\",\"2PufnQcsHsfymufX3\",\"o4ixjQGSaYqA2JoM4\",\"yod5YhKtPqw2GfG9B\",\"suArq5BbSy7gD6xri\",\"4Lwjr34ypKNQNQCar\",\"rhS8qXRjZcpDXkwnE\",\"8sNv5PTHa7XQ8bNqR\",\"nkH3HfJXLMNcBMM79\",\"Ds7L5bksw2QRHjrKL\",\"CHvzhtXnv8HTbPQ56\",\"5HCu9Ydd86QgHDRNP\",\"Qyfyyw6oC4EHAndzo\",\"3KkyQm77zsew58Dc2\",\"JhX7jvtpwNyxcc39m\"],\"quality\":[4,5,5,4,5,5,3,5,5,5,5,4]},\"tests\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.583333333333333,\"family\":[{\"_id\":\"aQnur99HSdYbyypLd\",\"language\":\"cpp\"},{\"_id\":\"EjQM5woRAhYEmuGFp\",\"language\":\"java\"},{\"_id\":\"WuoMiJRr69hPRQJYx\",\"language\":\"javascript\"},{\"_id\":\"J42P5y3pBdznmApgh\",\"language\":\"php\"},{\"_id\":\"JAdCy7nMK8urjv9rL\",\"language\":\"python3\"},{\"_id\":\"sSF45kJRKw7EJGta8\",\"language\":\"ruby\"}]}}"]