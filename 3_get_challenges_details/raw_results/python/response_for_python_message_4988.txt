a["{\"msg\":\"result\",\"id\":\"1210\",\"result\":{\"_id\":\"pSrCZFim6Y8HcS9Yc\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"def convert(deg):\\n\\t\",\"difficulty\":1.6887417218543046,\"familyId\":\"YBQ5GieCskD67uSoK\",\"instructions\":\"Create a function that converts Celsius to Fahrenheit and vice versa.\\n\\n### Examples\\n```\\nconvert(\\\"35*C\\\") ➞ \\\"95*F\\\"\\n\\nconvert(\\\"19*F\\\") ➞ \\\"-7*C\\\"\\n\\nconvert(\\\"33\\\") ➞ \\\"Error\\\"\\n```\\n\\n### Notes\\n- Round to the nearest integer.\\n- If the input is incorrect, return `\\\"Error\\\"`.\\n- For the formulae to convert back and forth, check the **Resources** tab.\",\"lab\":\"Test.assert_equals(convert('35*C'), '95*F')\\nTest.assert_equals(convert('18*C'), '64*F')\\nTest.assert_equals(convert('0*F'), '-18*C')\\nTest.assert_equals(convert('100*C'), '212*F')\\nTest.assert_equals(convert('69*F'), '21*C')\\nTest.assert_equals(convert('159*C'), '318*F')\\nTest.assert_equals(convert('-40*C'), '-40*F')\\nTest.assert_equals(convert('-40*F'), '-40*C')\\nTest.assert_equals(convert('16*C'), '61*F')\\nTest.assert_equals(convert('500*C'), '932*F')\\nTest.assert_equals(convert('33'), 'Error')\\nTest.assert_equals(convert('19*F'), '-7*C')\\nTest.assert_equals(convert('85*C'), '185*F')\\nTest.assert_equals(convert('0*C'), '32*F')\\nTest.assert_equals(convert('1777*F'), '969*C')\\nTest.assert_equals(convert('-90*C'), '-130*F')\\nTest.assert_equals(convert('16*F'), '-9*C')\\nTest.assert_equals(convert('180*C'), '356*F')\\nTest.assert_equals(convert('7K'), 'Error')\\nTest.assert_equals(convert('100*F'), '38*C')\",\"language\":\"python3\",\"summary\":\"Create a function that converts Celsius to Fahrenheit and vice versa.\\n\\nExamples\\nconvert(\\\"35C\\\") ➞ \\\"95F\\\"\\n\\nconvert(\\\"19F\\\") ➞ \\\"-7C\\\"\\n\\nconvert(\\\"33\\\") ➞ \\\"Error\\\"\\n\\nNotes\\nRound to the nearest integer.\\nIf the input is incorrect, return \\\"Error\\\".\\nFor the formulae to convert back and forth, check the Resources tab.\",\"tags\":[\"algorithms\",\"numbers\",\"math\",\"control_flow\"],\"timestamp\":{\"$date\":1567137534473},\"title\":\"Temperature Converter\",\"stats\":{\"completed\":{\"total\":186,\"ratings\":[2,2,2,2,2,2,2,1,2,2,0,3,3,3,3,2,2,1,1,2,2,3,0,0,2,1,2,2,2,2,3,1,1,0,2,1,1,2,2,1,3,0,4,2,2,2,2,2,2,2,1,2,3,2,2,0,2,2,2,2,2,2,0,3,1,2,1,0,2,2,2,2,2,2,2,2,2,2,1,2,1,1,2,2,2,2,1,2,1,2,2,2,0,2,2,2,1,2,1,1,2,2,3,0,0,3,2,2,3,2,2,1,0,2,1,1,0,2,2,3,2,5,1,2,3,0,2,2,2,2,2,0,1,2,2,2,2,2,0,1,3,0,2,0,1,2,1,2,1,1,1],\"rators\":[\"gb9rvGus2Jv7bjZSs\",\"tAF9Gf6PiGogbZuWs\",\"AYaEkTWLMmfzpwejr\",\"XKi8iZXBCHCaebSHh\",\"t8GRbY5ME64BcgWQk\",\"JY8bKAMCAWjPiRkG3\",\"N2wnZXkhDH86mgjQ8\",\"M3kR2XRNMpQhoozuZ\",\"x9A83cZkyA7E7utn3\",\"hsrNYf3WbexXJKhCq\",\"8JyqsSbN2FJXPr3cw\",\"yZvzB3qFb8pkHy4dg\",\"jHrtWDGBhkbuWa7fG\",\"gMJhLdyw3tH7L96X2\",\"Dd4MibaSEPy7br7fE\",\"CroM4rS3zbmdrB8Mf\",\"HQxp7NcdvF92G7bYS\",\"td7qPZ7Lv4pEWT2Ya\",\"yLv4oiEKBxT6R5QtL\",\"E2MgQfJtPehQHuSiB\",\"S3Y7xM7SR3RjJPFnM\",\"Hft3sNyZnLhZjbLTQ\",\"FgkYtHLxeD8pETJ8T\",\"GR5P7gLKtxGyTAZTB\",\"cR3ibTMxLyEdDFCHY\",\"9YtQPAffoq4WJLcAP\",\"KHvvJc4ZWGmG9HfuA\",\"vuwheqp25x7RkBHXn\",\"xonkKdAAgaoZnDSmP\",\"kQH5b8MXJunh84Czq\",\"nfXGHENb5md7m355s\",\"SKabuq5XuhXBugKBa\",\"jeuoearPPTcGPgXhf\",\"Nj6FwgBtAXsaQwsM2\",\"3iw4k5Dc9SSbjrYBL\",\"2fxapKr8XGdNeaKi2\",\"otXtuQygbcYATMZoP\",\"fP7mHD7yL42xBFNgw\",\"HqmxnQJM66Y57twhn\",\"y8jYqamfAeee8phS7\",\"os5fTqt6cAMS8jmt5\",\"qJZsi5rhRnWA38FbA\",\"DLai9DxpZN6p5TPRX\",\"u5u2YpHXiNgzDNJdX\",\"C4QntmkYtB89GNtpd\",\"s5M5RvgqR9BhB9JoC\",\"bpq5gHHuEiKELZtcM\",\"6ShafRStcvew4GfCh\",\"PqEKjCDkJtYoYuZfj\",\"D6MEecBL9m7iXEfK8\",\"tAeWvXWeHNcrwbTPk\",\"K96FwtfDDN5WM4Bb7\",\"Jqk2uJZZxEv5wZFze\",\"vv5RCfZcDPSCK3wxK\",\"mKJuoa2SZSDNhvhk9\",\"uTuqmFKNhGQNgFYF4\",\"7hzSvcYdq6QjoRnJY\",\"KMfDGWCF375aw6ntJ\",\"KcpfY4XZ7fNamyLd3\",\"A6s6FCqN6RrunjuSy\",\"ZvK8bvvz922hF2ztw\",\"Xj6R2zqhgumffQCAN\",\"ab7BsQuhDo3QgE6bh\",\"2innwjWqxJHo4eRGh\",\"QnPD4Sv6W4LHc2Qng\",\"AasGs8AeX9Lcb9xJn\",\"PXAcsKkssS2yLyDv2\",\"4CFzv558qbGcpQwc4\",\"w3A7cBWyAfukk6xEQ\",\"vLrq4dEDMM2wd68Dc\",\"dHZqT6h4JMwk5fPC8\",\"Yp7uvStL97cC9fKkY\",\"jNvegJWCk5HCtEMbK\",\"ZNnsMeNkdDhHjSrZb\",\"8PwfYqoDQFThzNtvf\",\"aEm3Wvj2rFYRL8Lrb\",\"TR5aWdDKP6iaL6mGK\",\"gSFJPsMXnqAog3Q9f\",\"nzqwymsdwC7gxAmip\",\"hnyhBFWwNCz9mDfSi\",\"gJYuGdkXEWWmGRLzu\",\"DtMuKf5LHWYpdHXBg\",\"DEDniTrstQYGounXT\",\"HF28xZKSLM9wEuqNg\",\"KdNDysEsy2TW5QRJ2\",\"9pzFiFK3ANLjQfnr2\",\"GmnxPhfiD7roRhsRX\",\"4rwxLqLs2mNZNg8NB\",\"LWCzZ8mb8gwrRNGfq\",\"NG8PWBSjsM8mMhQEq\",\"iojEnnY9FsMfYzp6f\",\"syRNbbPdLCGXbH2Gy\",\"ZrKCkX7xxGGZzauFW\",\"yjtdwc2AC4jA2RWtn\",\"Pe8vWpDHRuH9nSGKW\",\"kTCjGr4RJvjqaJasq\",\"i5iePG5GqhJJ8HEoB\",\"H9KZi2cjt4FwH7qog\",\"hRiMXDZNAzyPd5tpt\",\"KBxTPknCRmB2b5y3i\",\"TNXJSi6HYQknz2s2g\",\"tcn2oAsxPQDmCxGmg\",\"Kz7ee56Ht4Ns8JjBj\",\"w2HhxvSLmDhaGCAjE\",\"mSjddMnY7SYC7gCoH\",\"YcCLwitFMAEJSnxAW\",\"3cF6NXq3ZEwdkgSjb\",\"oBcs8GLX2ZFLXQy8y\",\"NNE5HNRXAkmhrWgyQ\",\"qD2LrwaDrSdiybLKY\",\"zZDaXBxMzTCBhNkgL\",\"DYDJTyGgKFnBRLm2r\",\"v9KtC8YLbMWmXiW2H\",\"gXTAie79kiw28tx5u\",\"QRv96jmNaYsWkxQEG\",\"DxxNN37iEz7b8t2nf\",\"DPi9QGLctq2y76KuE\",\"cRoHBaA7HjePc8wb2\",\"kXEfD7xxEyWd7oxxL\",\"J3upzLHuEwXH7Z2hx\",\"dYPkStFnLvAMsHSzZ\",\"22kSvGZ9z9J2KK8nc\",\"5hQnRWiKkhgKJXNMP\",\"xGpqoGZ47sYLJ4ty9\",\"iS5BrkGLzJyPK7nKt\",\"5XiuAqicKD4hBdu63\",\"cAP3n5NY64uoMwzRR\",\"FEYpu9RWysAgW3XnP\",\"RGMbFMZXJr7DhcAJy\",\"zd9FLSzsGz3evKafy\",\"dBzwBtRjZqB98DJeB\",\"B4qAuGanGLg4FKRq5\",\"t6uYPB3GvZxBeTE4B\",\"2H7qphwdz7PPoFKgc\",\"Mw8yqSDFdQui28w5N\",\"eYfPWvZwnJQkHbSTK\",\"EXbD3ZjgP9oaoFLYw\",\"5S9nX4rKsnCcnv4Cz\",\"MXGuntvz3byrP6WJc\",\"wKRCFPe3BEEbdkhAk\",\"GGdmhAvxXhqhhibJN\",\"srJ34BaybkQh3qRkM\",\"qZQxPQ2kaNKAMesHT\",\"gjiu8kLnHYxe4HoBN\",\"qAby4AWXmTNeusvg3\",\"sbJcFfQjQ59Wfg4Cd\",\"ix8TAL7oosoNYuPT5\",\"Ds7L5bksw2QRHjrKL\",\"M6fxKEh6am7YajPiT\",\"J5T8gZqiZXFuFDTQ7\",\"sq9Age6NQMcxQAHAK\",\"EfxwqhYdapX3dMQC2\",\"AJexRBN9cYQmqvYu6\",\"M2gFMJkocQSY6bsFR\",\"o4ixjQGSaYqA2JoM4\",\"CHvzhtXnv8HTbPQ56\",\"5HCu9Ydd86QgHDRNP\",\"3awKRE8gg7tjqubXF\",\"Kv92AoBe3KjTCfiBD\",\"buX4mCQhtXCfBjeno\",\"bv4ycSophchSEFoK9\",\"Afnps7TJQuS9sipMb\",\"qzXAMXsHZGT8o5hTA\",\"sHjfbGQGLHE6JR6qu\",\"HMfeNhbwykJyDFrCC\",\"T6iBEE2jp7f7iEF2P\",\"yod5YhKtPqw2GfG9B\",\"dzS6WBTMHyFEag6Fp\",\"BrTDhPJcACL2bsrpJ\",\"2PufnQcsHsfymufX3\",\"4Lwjr34ypKNQNQCar\",\"gpGXTvjS2HrY9Skq5\",\"mxX4rH5ELYkdZ2Mbw\",\"Wi4H6ayKsNDWWQCG5\",\"3nied3n8KG8RSNixH\"],\"quality\":[5,5,5,4,5,4,5,3,2,4,5,5,4,5,5,5,5,4,1,5,5,4,5,5,5,5,5,5,4]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.448275862068965,\"family\":[{\"_id\":\"N4h5rzEYxNnmmqhSB\",\"language\":\"cpp\"},{\"_id\":\"gBNu2G5Lk5iv22pye\",\"language\":\"java\"},{\"_id\":\"9CNJtMXaw2K5NwMLJ\",\"language\":\"javascript\"},{\"_id\":\"pSrCZFim6Y8HcS9Yc\",\"language\":\"python3\"},{\"_id\":\"z5MWDPmiQBCWY5ZxT\",\"language\":\"ruby\"}]}}"]