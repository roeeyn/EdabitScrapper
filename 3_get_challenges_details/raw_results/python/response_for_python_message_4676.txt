a["{\"msg\":\"result\",\"id\":\"1054\",\"result\":{\"_id\":\"yqeCTqSemWx5rJ7LZ\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"def full_key_name(piece):\\n\\t\",\"difficulty\":1.5490196078431373,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"HKbDJCXsEkD2MhMLY\",\"instructions\":\"Given a string containing a *key signature* **written in shorthand**, create a function which replaces the *shorthand* with its **full written name**.\\n\\n- A **lowercase** letter denotes a **minor key**.\\n- An **uppercase** letter denotes a **major key**.\\n\\nSee the examples below for a more helpful guide!\\n\\n### Examples\\n```\\nfull_key_name(\\\"Prelude in C\\\") ➞ \\\"Prelude in C major\\\"\\n\\nfull_key_name(\\\"Fugue in c\\\") ➞ \\\"Fugue in C minor\\\"\\n\\nfull_key_name(\\\"Toccata and Fugue in d\\\") ➞ \\\"Toccata and Fugue in D minor\\\"\\n\\nfull_key_name(\\\"Sonata in eb\\\") ➞ \\\"Sonata in Eb minor\\\"\\n```\\n\\n### Notes\\n- Write the *letter* name in **uppercase** (ignore **b** and **#**).\\n- Write `\\\"major\\\"` or `\\\"minor\\\"` in all **lowercase** (rather than `\\\"Major\\\"` or `\\\"Minor\\\"`).\\n\\n### Hint\\nThe first letter of the term should always be capital, even if it's \\\"b\\\".\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(full_key_name(\\\"Prelude in C\\\"), \\\"Prelude in C major\\\")\\nTest.assert_equals(full_key_name(\\\"Fugue in c\\\"), \\\"Fugue in C minor\\\")\\nTest.assert_equals(full_key_name(\\\"Toccata and Fugue in d\\\"), \\\"Toccata and Fugue in D minor\\\")\\nTest.assert_equals(full_key_name(\\\"a Fugue in c\\\"), \\\"a Fugue in C minor\\\")\\nTest.assert_equals(full_key_name(\\\"Sonata in D\\\"), \\\"Sonata in D major\\\")\\nTest.assert_equals(full_key_name(\\\"Opera in eb\\\"), \\\"Opera in Eb minor\\\")\\nTest.assert_equals(full_key_name(\\\"Toccata in ab\\\"), \\\"Toccata in Ab minor\\\")\\nTest.assert_equals(full_key_name(\\\"Toccata in f\\\"), \\\"Toccata in F minor\\\")\\nTest.assert_equals(full_key_name(\\\"Symphony in C#\\\"), \\\"Symphony in C# major\\\")\\nTest.assert_equals(full_key_name(\\\"Mass in c\\\"), \\\"Mass in C minor\\\")\\nTest.assert_equals(full_key_name(\\\"Toccata in c\\\"), \\\"Toccata in C minor\\\")\\nTest.assert_equals(full_key_name(\\\"Prelude in Ab\\\"), \\\"Prelude in Ab major\\\")\\nTest.assert_equals(full_key_name(\\\"Concerto in f#\\\"), \\\"Concerto in F# minor\\\")\\nTest.assert_equals(full_key_name(\\\"Symphony in eb\\\"), \\\"Symphony in Eb minor\\\")\\nTest.assert_equals(full_key_name(\\\"Sonata in a\\\"), \\\"Sonata in A minor\\\")\\nTest.assert_equals(full_key_name(\\\"Sonata in e\\\"), \\\"Sonata in E minor\\\")\\nTest.assert_equals(full_key_name(\\\"Concerto in c#\\\"), \\\"Concerto in C# minor\\\")\\nTest.assert_equals(full_key_name(\\\"Opera in f\\\"), \\\"Opera in F minor\\\")\\nTest.assert_equals(full_key_name(\\\"Mass in c\\\"), \\\"Mass in C minor\\\")\\nTest.assert_equals(full_key_name(\\\"Symphony in D\\\"), \\\"Symphony in D major\\\")\\nTest.assert_equals(full_key_name(\\\"Fugue in d\\\"), \\\"Fugue in D minor\\\")\\nTest.assert_equals(full_key_name(\\\"Fugue in eb\\\"), \\\"Fugue in Eb minor\\\")\\nTest.assert_equals(full_key_name(\\\"Fugue in F\\\"), \\\"Fugue in F major\\\")\\nTest.assert_equals(full_key_name(\\\"Mass in c#\\\"), \\\"Mass in C# minor\\\")\\nTest.assert_equals(full_key_name(\\\"Requiem in C\\\"), \\\"Requiem in C major\\\")\\nTest.assert_equals(full_key_name(\\\"Prelude in Eb\\\"), \\\"Prelude in Eb major\\\")\\nTest.assert_equals(full_key_name(\\\"Prelude in Bb\\\"), \\\"Prelude in Bb major\\\")\\nTest.assert_equals(full_key_name(\\\"Fugue in g\\\"), \\\"Fugue in G minor\\\")\\nTest.assert_equals(full_key_name(\\\"Requiem in c#\\\"), \\\"Requiem in C# minor\\\")\\nTest.assert_equals(full_key_name(\\\"Opera in f\\\"), \\\"Opera in F minor\\\")\\nTest.assert_equals(full_key_name(\\\"Prelude in G\\\"), \\\"Prelude in G major\\\")\\nTest.assert_equals(full_key_name(\\\"Symphony in Eb\\\"), \\\"Symphony in Eb major\\\")\\nTest.assert_equals(full_key_name(\\\"Symphony in eb\\\"), \\\"Symphony in Eb minor\\\")\\nTest.assert_equals(full_key_name(\\\"Sonata in e\\\"), \\\"Sonata in E minor\\\")\\nTest.assert_equals(full_key_name(\\\"Fugue in g\\\"), \\\"Fugue in G minor\\\")\\nTest.assert_equals(full_key_name(\\\"Sonata in A\\\"), \\\"Sonata in A major\\\")\\nTest.assert_equals(full_key_name(\\\"Requiem in b\\\"), \\\"Requiem in B minor\\\")\\nTest.assert_equals(full_key_name(\\\"Sonata in eb\\\"), \\\"Sonata in Eb minor\\\")\\nTest.assert_equals(full_key_name(\\\"Prelude in c#\\\"), \\\"Prelude in C# minor\\\")\\nTest.assert_equals(full_key_name(\\\"Fugue in F\\\"), \\\"Fugue in F major\\\")\\nTest.assert_equals(full_key_name(\\\"Concerto in ab\\\"), \\\"Concerto in Ab minor\\\")\\nTest.assert_equals(full_key_name(\\\"Toccata in F#\\\"), \\\"Toccata in F# major\\\")\\nTest.assert_equals(full_key_name(\\\"Symphony in Bb\\\"), \\\"Symphony in Bb major\\\")\\nTest.assert_equals(full_key_name(\\\"Waltz in f#\\\"), \\\"Waltz in F# minor\\\")\\nTest.assert_equals(full_key_name(\\\"Prelude in Eb\\\"), \\\"Prelude in Eb major\\\")\\nTest.assert_equals(full_key_name(\\\"Requiem in b\\\"), \\\"Requiem in B minor\\\")\\nTest.assert_equals(full_key_name(\\\"Concerto in Bb\\\"), \\\"Concerto in Bb major\\\")\\nTest.assert_equals(full_key_name(\\\"Fugue in G\\\"), \\\"Fugue in G major\\\")\\nTest.assert_equals(full_key_name(\\\"Mass in eb\\\"), \\\"Mass in Eb minor\\\")\\nTest.assert_equals(full_key_name(\\\"Symphony in Ab\\\"), \\\"Symphony in Ab major\\\")\\nTest.assert_equals(full_key_name(\\\"Symphony in f\\\"), \\\"Symphony in F minor\\\")\\nTest.assert_equals(full_key_name(\\\"Fugue in f#\\\"), \\\"Fugue in F# minor\\\")\\nTest.assert_equals(full_key_name(\\\"Prelude in D\\\"), \\\"Prelude in D major\\\")\\nTest.assert_equals(full_key_name(\\\"Concerto in bb\\\"), \\\"Concerto in Bb minor\\\")\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,2,1,3,2,1,0,2,2,2,2,1,2,1,2,2,2,2,1,1,2,2,0,1,0,2,2,2,2,1,1,1,2,2,2,2,2,1,2,3,2,0,1,2,2,1,2,1,2,1,1,1,0,2,1,2,2,2,2,2,1,1,2,2,1,1,2,3,2,2,2,2,2,0,2,0,2,1,0,0,2,1,2,2,1,2,2,2,1,1,2,1,1,2,1,1,2],\"rators\":[\"PXAcsKkssS2yLyDv2\",\"tAF9Gf6PiGogbZuWs\",\"gb9rvGus2Jv7bjZSs\",\"M44nifmWzt3wtYyJx\",\"JYbyC7EiD3PuwuxEv\",\"s5M5RvgqR9BhB9JoC\",\"fBqQjriC4QEtFNxFe\",\"C4QntmkYtB89GNtpd\",\"QnPD4Sv6W4LHc2Qng\",\"AasGs8AeX9Lcb9xJn\",\"CuY5BaTCcu7Mp9tDu\",\"aRqQ42J5zqCmBNd8w\",\"Jqk2uJZZxEv5wZFze\",\"8JyqsSbN2FJXPr3cw\",\"BeFnbPbMnAM2SjBdZ\",\"4CFzv558qbGcpQwc4\",\"2fxapKr8XGdNeaKi2\",\"A5g5PhdQpmF7ohwsC\",\"v3fjGuc7Pq4yjFygS\",\"u5u2YpHXiNgzDNJdX\",\"yZvzB3qFb8pkHy4dg\",\"w3A7cBWyAfukk6xEQ\",\"Z85ajWfZ4jDPkbvR4\",\"cR3ibTMxLyEdDFCHY\",\"dHZqT6h4JMwk5fPC8\",\"9Ly8afdtofp8DXzrt\",\"Yp7uvStL97cC9fKkY\",\"jNvegJWCk5HCtEMbK\",\"8PwfYqoDQFThzNtvf\",\"ZNnsMeNkdDhHjSrZb\",\"aEm3Wvj2rFYRL8Lrb\",\"2QGRoQn2dRq3scu7k\",\"gJYuGdkXEWWmGRLzu\",\"hiGXnxds6zo7XsfTw\",\"HF28xZKSLM9wEuqNg\",\"hnyhBFWwNCz9mDfSi\",\"DEDniTrstQYGounXT\",\"yr822PZmmiDDenxpB\",\"9bQyb6rW7xfE4vgrR\",\"9pzFiFK3ANLjQfnr2\",\"a777e8chPvJkY3tKa\",\"ahk2qiXKJA753wAJk\",\"jL4y5fTJAMBjhZmko\",\"NG8PWBSjsM8mMhQEq\",\"H4abACFDH5t8CnnyH\",\"MKT7khMBGXzA22ykf\",\"iojEnnY9FsMfYzp6f\",\"syRNbbPdLCGXbH2Gy\",\"ZrKCkX7xxGGZzauFW\",\"Pe8vWpDHRuH9nSGKW\",\"yjtdwc2AC4jA2RWtn\",\"6kz7jjJS8W4tikYQT\",\"HqmxnQJM66Y57twhn\",\"Wv2vJnEj8ywNmARoF\",\"NNE5HNRXAkmhrWgyQ\",\"FEYpu9RWysAgW3XnP\",\"XrqNzJ2FRG8HnGiR6\",\"oBcs8GLX2ZFLXQy8y\",\"YcCLwitFMAEJSnxAW\",\"mG8HqKiAQFTdRZthG\",\"tpxMgkGSHwBjS95Ta\",\"mxX4rH5ELYkdZ2Mbw\",\"qD2LrwaDrSdiybLKY\",\"KLmLKaJPfsYxp42p2\",\"DYDJTyGgKFnBRLm2r\",\"QRv96jmNaYsWkxQEG\",\"DPi9QGLctq2y76KuE\",\"9rhsisf8ofHavG5aT\",\"J3upzLHuEwXH7Z2hx\",\"dYPkStFnLvAMsHSzZ\",\"iS5BrkGLzJyPK7nKt\",\"cAP3n5NY64uoMwzRR\",\"5XiuAqicKD4hBdu63\",\"RGMbFMZXJr7DhcAJy\",\"zd9FLSzsGz3evKafy\",\"D3QHw6x5fRmPNmwPq\",\"rfyEkETeoS96QNH4e\",\"cZccqzRQ9GgjQF6Az\",\"dBzwBtRjZqB98DJeB\",\"d8qtzoLB264iP8tdY\",\"5HCu9Ydd86QgHDRNP\",\"5S9nX4rKsnCcnv4Cz\",\"GGdmhAvxXhqhhibJN\",\"srJ34BaybkQh3qRkM\",\"J5T8gZqiZXFuFDTQ7\",\"Ds7L5bksw2QRHjrKL\",\"buX4mCQhtXCfBjeno\",\"qAby4AWXmTNeusvg3\",\"o4ixjQGSaYqA2JoM4\",\"66a9xX73nmTEuKs9k\",\"mDWNyaaQ9hvPCRzSd\",\"qZQxPQ2kaNKAMesHT\",\"bv4ycSophchSEFoK9\",\"sbJcFfQjQ59Wfg4Cd\",\"AJexRBN9cYQmqvYu6\",\"CHvzhtXnv8HTbPQ56\",\"mvJBakQ35CWAnbbEZ\",\"qzXAMXsHZGT8o5hTA\",\"8BFSTCnoe2QggN64c\",\"LQxof8pGabGuWP7Gn\",\"T6iBEE2jp7f7iEF2P\",\"sHjfbGQGLHE6JR6qu\",\"XD5nmvKQchKezPXhy\",\"BrTDhPJcACL2bsrpJ\",\"2PufnQcsHsfymufX3\",\"yod5YhKtPqw2GfG9B\",\"dzS6WBTMHyFEag6Fp\",\"d9LBRxvADNBB5QJMB\",\"4TmgHkn5vqyHK3sYC\",\"pduNK68oazqQTtbLp\",\"ey3CASd6Je5LEJzfB\",\"eHcgvkTGsH7ZziqBo\",\"yaCu2vXXLmdW5Q4bb\",\"3nied3n8KG8RSNixH\",\"NzbRqGWspQnWMoDrF\",\"X4rzfxGgxx6CS7Bpz\",\"4Lwjr34ypKNQNQCar\",\"Wi4H6ayKsNDWWQCG5\",\"RoGGD5cpHb4ftdLDv\"],\"total\":131,\"quality\":[5,5,5,5,5,5,5,5,5,5,3,4,5,5,5,5,5,5,4,5,5,5]},\"flags\":0},\"summary\":\"Given a string containing a key signature written in shorthand, create a function which replaces the shorthand with its full written name.\\n\\nA lowercase letter denotes a minor key.\\nAn uppercase letter denotes a major key.\\n\\nSee the examples below for a more helpful guide!\\n\\nExamples\\nfullkeyname(\\\"Prelude in C\\\") ➞ \\\"Prelude in C major\\\"\\n\\nfullkeyname(\\\"Fugue in c\\\") ➞ \\\"\",\"tags\":[\"strings\",\"formatting\"],\"timestamp\":{\"$date\":1581796406243},\"title\":\"Shorthand for Key Signatures\",\"quality\":4.818181818181818,\"family\":[{\"_id\":\"fEi6b88Yugymk6yti\",\"language\":\"cpp\"},{\"_id\":\"mTT8M47D6EuEdTXLv\",\"language\":\"javascript\"},{\"_id\":\"zPWJNuuGGM6Sxbmgn\",\"language\":\"php\"},{\"_id\":\"yqeCTqSemWx5rJ7LZ\",\"language\":\"python3\"},{\"_id\":\"Qkk4FxKtZakn4H7sg\",\"language\":\"ruby\"}]}}"]