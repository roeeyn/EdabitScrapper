a["{\"msg\":\"result\",\"id\":\"2446\",\"result\":{\"_id\":\"rTAPCmsCJdnW6FEnc\",\"author\":\"Evgeny SH\",\"authorId\":\"8PwfYqoDQFThzNtvf\",\"code\":\"def sum_up(begin_k, end_k):\\n\\t\",\"difficulty\":4.5,\"editorId\":\"8PwfYqoDQFThzNtvf\",\"familyId\":\"73ERmSpWnWi6KFgPF\",\"instructions\":\"Write a function that computes the sum of `k*sign(sin(k*k))` with `begin_k <= k <= end_k`. Python does not have a `sign` function but it's easy to implement the required logic: `1 if x > 0 else -1`, ( `sine` of _natural_num_ equal to zero only for `n=0`). Sum of consecutive numbers can be computed by the formula `(n1 + n2) * (n2 – n1 + 1) / 2` when all numbers have the same sign.\\n\\nThe main point of this challenge is that it's hard to predict the sign of `sin(k*k)` for `k`. The sum of consecutive numbers between `n1` and `n2` with the specified sign can be positive or negative, large or small, as illustrated here:\\n\\n![Alternative Text](https://edabit-challenges.s3.amazonaws.com/Sum-Up-Figure-1.png)\\n\\n### Examples\\n```\\nsum_up(1, 101) ➞ 65\\n\\nsum_up(200, 911) ➞ -456\\n```\\n\\n### Notes\\n- The function must be efficient because the intervals are large (be inventive).\\n- For comparison, my solution takes 7 seconds to compute all tests, which is still under the server limit of 12 seconds.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"import time\\nif __name__ == \\\"__main__\\\":\\n    lst_test = [(1, 101, 65),\\n                (200, 911, -456),\\n                (1000, 466666, 6857389),\\n                (1000000, 9000009, 2384956067),\\n                (11000000, 20000222, -42222922897),\\n                (19000000, 36530150, 29325971)]\\n\\n    tic = time.perf_counter()\\n    for t in lst_test:\\n        Test.assert_equals(sum_up(t[0], t[1]), t[2])\\n    print('Runtime(sec) = {:.3f}\\\\n'.format(time.perf_counter() - tic))\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[5,5,5,5,5,5,5,5,5,2,2,5],\"rators\":[\"8PwfYqoDQFThzNtvf\",\"aEm3Wvj2rFYRL8Lrb\",\"5dHucvf2qBYyKim7X\",\"vTfyrr4pGddp8rbXc\",\"XjrgSFNFz5Hg2mo5o\",\"yjtdwc2AC4jA2RWtn\",\"iS5BrkGLzJyPK7nKt\"],\"total\":7,\"quality\":[]},\"flags\":0},\"summary\":\"Write a function that computes the sum of ksign(sin(kk)) with begink  0 else -1, ( sine of naturalnum equal to zero only for n=0). Sum of consecutive numbers can be computed by the formula (n1 + n2) * (n2 – n1 + 1) / 2 when all numbers have the same sign.\\n\\nThe main point of this challenge is that it's hard to predict the sign of sin(k*k) for k. The sum of cons\",\"tags\":[\"algorithms\",\"loops\",\"numbers\"],\"timestamp\":{\"$date\":1593641795104},\"title\":\"Sum up Sequence of Numbers\",\"quality\":0,\"family\":[{\"_id\":\"cLKsxbibXZAYr2cN6\",\"language\":\"javascript\"},{\"_id\":\"rTAPCmsCJdnW6FEnc\",\"language\":\"python3\"},{\"_id\":\"8RHEmR9Gw2QwkLn2D\",\"language\":\"ruby\"}]}}"]