a["{\"msg\":\"result\",\"id\":\"2441\",\"result\":{\"_id\":\"4cZ5G3vt85S4BeXen\",\"author\":\"jota\",\"authorId\":\"vTfyrr4pGddp8rbXc\",\"code\":\"def hack(main_key, main_lock, lock_x):\\n\\t\",\"difficulty\":4.454545454545454,\"editorId\":\"vTfyrr4pGddp8rbXc\",\"familyId\":\"FEZngNjZFta6EezWC\",\"instructions\":\"A certain security system is responsible for maintaining a `code` capable of generating a key for each respective lock `key = code % lock` .This security system  has a key ( `main_key `) and its respective lock( `main_lock `) that are fixed  and serve as a base to update all the others. To maintain security, after a certain lock is accessed 10 times with the wrong key they update its lock value `lock = lock + main_key`.\\n\\n A hacker was able to steal the `main_key` and the `main_lock` but he has no idea what the `code` is. Write a function that returns how many attempts  the hacker needs to be sure he is  able to find certain lock key, if that is impossible **return**  `\\\"system with a high level of security\\\"`.\\n\\nWill be provided:  `main_key`, `main_lock` and `lock_x` (the one you have to find how many attempts to figure the `key_x`).\\n\\n### Examples\\n```\\nhack(1, 2, 8) ➞ 4\\n# With only four attempts it is possible to access the lock.\\n\\nhack(1, 2, 13) ➞ 17\\n\\nhack(5, 101, 111) ➞ 996\\n\\nhack(10, 101, 111) ➞ \\\"system with a high level of security\\\"\\n```\\n\\n### Notes\\nAll the inputs will be positive integers less than 10^6.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"import time\\ntic = time.perf_counter()\\nTest.assert_equals(hack(1, 2, 8), 4)\\nTest.assert_equals(hack(1, 2, 13), 17)\\nTest.assert_equals(hack(5, 101, 111) , 996)\\nTest.assert_equals(hack(10, 101, 111), 'system with a high level of security')\\nTest.assert_equals(hack(13, 125, 111) , 36)\\nTest.assert_equals(hack(13, 125, 34) , 71)\\nTest.assert_equals(hack(71, 12345, 354) , 13868)\\nTest.assert_equals(hack(72, 12345, 354) , 3382)\\nTest.assert_equals(hack(720, 12345, 354) , 'system with a high level of security')\\nTest.assert_equals(hack(3, 997, 34) , 3211)\\nTest.assert_equals(hack(4, 11, 1) , 1)\\nTest.assert_equals(hack(17, 43234, 43233) , 63587)\\nTest.assert_equals(hack(1, 6, 57) , 40)\\nprint('t = {:.9f} sec'.format(time.perf_counter() - tic))\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[5,5,5,5,5,5,5,5,0,4,5],\"rators\":[\"vTfyrr4pGddp8rbXc\",\"aEm3Wvj2rFYRL8Lrb\",\"8PwfYqoDQFThzNtvf\",\"gojReckJvzYvoHqSu\",\"xn7uGNKeAwPEkP9oA\",\"yjtdwc2AC4jA2RWtn\"],\"total\":6,\"quality\":[]},\"flags\":0},\"summary\":\"A certain security system is responsible for maintaining a code capable of generating a key for each respective lock key = code % lock .This security system  has a key ( mainkey ) and its respective lock( mainlock ) that are fixed  and serve as a base to update all the others. To maintain security, after a certain lock is accessed 10 times with the wrong key t\",\"tags\":[\"logic\",\"cryptography\"],\"timestamp\":{\"$date\":1595095379048},\"title\":\"Password Challenge\",\"quality\":0,\"family\":[{\"_id\":\"5REXcc7iwGrTCspJ4\",\"language\":\"javascript\"},{\"_id\":\"4cZ5G3vt85S4BeXen\",\"language\":\"python3\"},{\"_id\":\"Le4odrsiBmPDAZ4hL\",\"language\":\"ruby\"}]}}"]