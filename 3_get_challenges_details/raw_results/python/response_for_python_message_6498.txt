a["{\"msg\":\"result\",\"id\":\"1958\",\"result\":{\"_id\":\"7WpdYfZPNFCM4oBvd\",\"author\":\"AniXDownLoe\",\"authorId\":\"incG8tH2dwThHg35f\",\"code\":\"def is_magic(square):\\n\\t\",\"difficulty\":2.736842105263158,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"CvyBPtrPQfvMdj8YP\",\"instructions\":\"Make a function that takes a 2D list and returns `True` if it is a Magic Square and `False` if it is not. A Magic Square is an arrangement of numbers in a square in such a way that the sum of each row, column, and diagonal is one constant number, the \\\"magic constant\\\".\\n\\n### Examples\\n```\\nis_magic([[2, 7, 6], [9, 5, 1], [4, 3, 8]]) ➞ True\\n\\n# Rows: 2+7+6 = 9+5+1 = 4+3+8 = 15\\n# Columns: 2+9+4 = 7+5+3 = 6+1+8 = 15\\n# Diagonals: 2+5+8 = 6+5+4 = 15\\n```\\n\\n```\\nis_magic([[1, 2], [3, 4]]) ➞ False\\n\\n# Rows: 1+2 = 3 != 3+4 = 7\\n# Columns: 1+3 = 4 != 2+4 = 6\\n# Diagonals: 1+4 = 2+3 = 5\\n```\\n\\n### Notes\\nFor this challenge, I will only be testing with magic squares made with whole numbers ranging from 1 to n^2.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(is_magic([]), True, \\\"I guess an empty square is magical, kinda\\\")\\nTest.assert_equals(is_magic([[1]]), True, \\\"You should be able verify this one by hand\\\")\\nTest.assert_equals(is_magic([[2]]), False, \\\"For this challenge a magic square has all whole numbers from 1 - n^2\\\")\\nTest.assert_equals(is_magic([[1,2],[3,4]]), False, \\\"There actually aren't any magic square of size 2\\\")\\nTest.assert_equals(is_magic([[2,7,6],[9,5,1],[4,3,8]]), True, \\\"Finaly a real magic square\\\")\\nTest.assert_equals(is_magic([[4,3,8],[9,5,1],[2,7,6]]), True, \\\"Technicaly the same as the last\\\")\\nTest.assert_equals(is_magic([[9,5,1],[4,3,8],[2,7,6]]), False, \\\"Can't switch the mid row or colum\\\")\\nTest.assert_equals(is_magic([[5,15,16,2],[10,8,7,13],[6,12,11,9],[17,3,4,14]]), False,\\\"For this challenge a magic square has all whole numbers from 1 - n^2\\\")\\nTest.assert_equals(is_magic([[1,15,14,4],[10,11,8,5],[7,6,9,12],[16,2,3,13]]), True)\\nTest.assert_equals(is_magic([[4,15,14,1],[5,11,8,10],[12,6,9,7],[13,2,3,16]]), False)\\nTest.assert_equals(is_magic([[1,15,4,14],[10,11,5,8],[7,6,12,9],[16,2,13,3]]), False)\\nTest.assert_equals(is_magic([[1,15,14,4],[10,11,8,5],[7,6,9,12],[16,2,3,13],[1,7,7,1,0,3]]), False)\\nTest.assert_equals(is_magic([[25,13,1,19,7],[16,9,22,15,3],[12,5,18,6,24],[8,21,14,2,20],[4,17,10,23,11]]), True)\\nTest.assert_equals(is_magic([\\n[93, 108, 123, 138, 153, 168, 1, 16, 31, 46, 61, 76, 91],\\n[107, 122, 137, 152, 167, 13, 15, 30, 45, 60, 75, 90, 92],\\n[121, 136, 151, 166, 12, 14, 29, 44, 59, 74, 89, 104, 106],\\n[135, 150, 165, 11, 26, 28, 43, 58, 73, 88, 103, 105, 120],\\n[149, 164, 10, 25, 27, 42, 57, 72, 87, 102, 117, 119, 134],\\n[163, 9, 24, 39, 41, 56, 71, 86, 101, 116, 118, 133, 148],\\n[8, 23, 38, 40, 55, 70, 85, 100, 115, 130, 132, 147, 162],\\n[22, 37, 52, 54, 69, 84, 99, 114, 129, 131, 146, 161, 7],\\n[36, 51, 53, 68, 83, 98, 113, 128, 143, 145, 160, 6, 21],\\n[50, 65, 67, 82, 97, 112, 127, 142, 144, 159, 5, 20, 35],\\n[64, 66, 81, 96, 111, 126, 141, 156, 158, 4, 19, 34, 49],\\n[78, 80, 95, 110, 125, 140, 155, 157, 3, 18, 33, 48, 63],\\n[79, 94, 109, 124, 139, 154, 169, 2, 17, 32, 47, 62, 77]\\n]),True)\\nTest.assert_equals(is_magic([\\n[93, 108, 123, 138, 153, 168, 1, 16, 31, 46, 61, 76, 91],\\n[107, 122, 137, 152, 167, 13, 15, 30, 45, 60, 75, 90, 92],\\n[121, 136, 151, 166, 12, 14, 29, 44, 59, 74, 89, 104, 106],\\n[135, 150, 165, 11, 26, 28, 43, 58, 73, 88, 103, 105, 120],\\n[149, 164, 10, 25, 27, 42, 57, 72, 87, 102, 117, 119, 134],\\n[163, 9, 24, 39, 41, 56, 71, 86, 101, 116, 118, 133, 148],\\n[8, 23, 38, 40, 55, 70, 85, 100, 115, 130, 132, 147, 162],\\n[22, 37, 52, 54, 69, 84, 99, 114, 129, 131, 146, 161, 7],\\n[36, 51, 53, 68, 83, 98, 113, 128, 143, 145, 160, 6, 21],\\n[50, 65, 67, 82, 97, 112, 127, 142, 144, 159, 5, 20, 35],\\n[64, 66, 81, 96, 111, 126, 141, 156, 158, 4, 19, 34, 49],\\n[78, 80, 95, 110, 125, 140, 155, 157, 3, 18, 33, 48, 63],\\n[77, 94, 109, 124, 139, 154, 169, 2, 17, 32, 47, 62, 79]\\n]),False)\",\"language\":\"python3\",\"quality\":5,\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,3,3,4,2,5,3,2,3,4,5,5,0,3,3,3,1,4,0,4,2,4,4,3,3,3,5,1,2,3,1,1,3],\"quality\":[5,5,5],\"rators\":[\"incG8tH2dwThHg35f\",\"8PwfYqoDQFThzNtvf\",\"aEm3Wvj2rFYRL8Lrb\",\"mDWNyaaQ9hvPCRzSd\",\"qYDRywWRZdswy4b6e\",\"5dHucvf2qBYyKim7X\",\"s5M5RvgqR9BhB9JoC\",\"yjtdwc2AC4jA2RWtn\",\"tAF9Gf6PiGogbZuWs\",\"HF28xZKSLM9wEuqNg\",\"xn7uGNKeAwPEkP9oA\",\"7fJvDZzmtsoLXhmje\",\"g6rd7oTEdiFxHQ6on\",\"8JyqsSbN2FJXPr3cw\",\"BrTDhPJcACL2bsrpJ\",\"gJYuGdkXEWWmGRLzu\",\"8sNv5PTHa7XQ8bNqR\",\"iS5BrkGLzJyPK7nKt\",\"Jqk2uJZZxEv5wZFze\",\"p8qqFdJ3FSk5x9z3G\",\"DPi9QGLctq2y76KuE\",\"iojEnnY9FsMfYzp6f\",\"QRv96jmNaYsWkxQEG\",\"Wpn95NqWxncQrwNgz\",\"J3upzLHuEwXH7Z2hx\",\"GTKsdeEihE636Le9i\",\"gb9rvGus2Jv7bjZSs\",\"PytNZK9mNiRiZxPrm\",\"AasGs8AeX9Lcb9xJn\",\"MpfytGFYF77emJ3cT\",\"eHcgvkTGsH7ZziqBo\",\"gXTAie79kiw28tx5u\",\"2PufnQcsHsfymufX3\",\"yTtSCvGPyYna6JuRC\",\"Z85ajWfZ4jDPkbvR4\",\"rhS8qXRjZcpDXkwnE\"],\"total\":38},\"flags\":1},\"summary\":\"Make a function that takes a 2D list and returns True if it is a Magic Square and False if it is not. A Magic Square is an arrangement of numbers in a square in such a way that the sum of each row, column, and diagonal is one constant number, the \\\"magic constant\\\".\\n\\nExamples\\nis_magic([[2, 7, 6], [9, 5, 1], [4, 3, 8]]) ➞ True\\n\\nRows: 2+7+6 = 9+5+1 = 4+3+8 = 15\\nCo\",\"tags\":[\"arrays\",\"validation\",\"numbers\",\"geometry\",\"games\"],\"timestamp\":{\"$date\":1602190046128},\"title\":\"Magic Square Check\",\"family\":[{\"_id\":\"foBRTDS8zngwTmYtX\",\"language\":\"javascript\"},{\"_id\":\"7WpdYfZPNFCM4oBvd\",\"language\":\"python3\"},{\"_id\":\"87MhSSTkyqTzDAYFi\",\"language\":\"ruby\"}]}}"]