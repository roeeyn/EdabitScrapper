a["{\"msg\":\"result\",\"id\":\"956\",\"result\":{\"_id\":\"zYr4v5gb43kJPje9g\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def moving_partition(lst):\\n\\t\",\"difficulty\":1.4880382775119618,\"familyId\":\"gssnDZxMt8eaaLnTk\",\"instructions\":\"Create a function to partition a list from left to right.\\n\\n### Examples\\n```\\nmoving_partition([-1, -1, -1, -1])\\n➞ [[[-1], [-1, -1, -1]], [[-1, -1], [-1, -1]], [[-1, -1, -1], [-1]]]\\n\\nmoving_partition([1, 2, 3, 4, 5])\\n➞ [[[1], [2, 3, 4, 5]], [[1, 2], [3, 4, 5]], [[1, 2, 3], [4, 5]], [[1, 2, 3, 4], [5]]]\\n\\nmoving_partition([]) ➞ []\\n```\\n\\n### Notes\\n- With an `n` input, your output should be a list containing `n-1` sublists. Each sublist should have two elements: the left and the right side of the partition (both should be non-empty, unless the input list is empty).\\n- An empty list should return an empty list: `[]`\",\"lab\":\"Test.assert_equals(moving_partition([1, 2, 3, 4, 5]), [[[1], [2, 3, 4, 5]], [[1, 2], [3, 4, 5]], [[1, 2, 3], [4, 5]], [[1, 2, 3, 4], [5]]])\\nTest.assert_equals(moving_partition([-1, -1, -1, -1]), [[[-1], [-1, -1, -1]], [[-1, -1], [-1, -1]], [[-1, -1, -1], [-1]]])\\nTest.assert_equals(moving_partition([8, 9, 10]), [[[8], [9, 10]], [[8, 9], [10]]])\\nTest.assert_equals(moving_partition([]), [])\",\"language\":\"python3\",\"summary\":\"Create a function to partition a list from left to right.\\n\\nExamples\\nmoving_partition([-1, -1, -1, -1])\\n➞ [[[-1], [-1, -1, -1]], [[-1, -1], [-1, -1]], [[-1, -1, -1], [-1]]]\\n\\nmoving_partition([1, 2, 3, 4, 5])\\n➞ [[[1], [2, 3, 4, 5]], [[1, 2], [3, 4, 5]], [[1, 2, 3], [4, 5]], [[1, 2, 3, 4], [5]]]\\n\\nmoving_partition([]) ➞ []\\n\\nNotes\\nWith an n input, your output shoul\",\"tags\":[\"arrays\",\"higher_order_functions\"],\"timestamp\":{\"$date\":1554785004478},\"title\":\"Moving Partition\",\"stats\":{\"completed\":{\"total\":240,\"ratings\":[2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,1,2,1,2,1,1,0,2,2,2,1,2,2,1,2,2,2,1,2,2,1,1,1,1,1,2,0,1,1,1,1,2,2,1,1,2,2,1,0,2,2,0,2,2,0,2,1,1,1,2,1,2,1,2,2,1,2,2,2,2,2,1,2,3,2,2,2,2,2,1,2,2,2,2,2,2,2,1,2,2,2,2,1,1,1,1,2,1,0,2,0,2,2,1,1,2,1,1,0,2,2,1,1,2,2,2,2,0,2,2,2,0,2,2,2,1,3,2,2,2,2,1,2,2,0,3,0,1,2,0,2,1,0,2,0,2,1,3,1,1,2,1,2,2,2,2,2,2,0,2,2,2,1,1,0,2,0,2,0,0,2,1,0,0,0,1,2,2,0,1,2,2,1,2,1,1,1,2,2,2,2,2,0,2,1,2,2,1,2,2,1,2,1,2],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"yZvzB3qFb8pkHy4dg\",\"Jqk2uJZZxEv5wZFze\",\"8JyqsSbN2FJXPr3cw\",\"SKabuq5XuhXBugKBa\",\"6W2GSzrYjMD9ANBFY\",\"qvEvDcL32a5F4Tg6c\",\"XjC9ivzaAxfcFiSGj\",\"gb9rvGus2Jv7bjZSs\",\"mcQGrPPJydYWCs43y\",\"tAF9Gf6PiGogbZuWs\",\"zQkgHuvkmLyu8HZ7X\",\"uSh3aNxzD28jBuhxa\",\"M8jrv2FfpMQp9Qzpx\",\"nc7bRhkxgKyqusYe3\",\"Y3KkPrBzMBgMiqaQ6\",\"T3ZAuoMrJjvZwN55B\",\"FikSPhcrHBpQ4CyGC\",\"ab7BsQuhDo3QgE6bh\",\"AF6LgdKhEdzwgRJom\",\"kQH5b8MXJunh84Czq\",\"6ckDJWbyznyQQLkrP\",\"PFjMZGHNAPTkgd7tq\",\"TNQ7ixK78HHTLP7it\",\"ahWFxnaxt9bXSA4f3\",\"tHEH9MBHBAGvhgJGd\",\"TNMAJidLpPdH4kmBv\",\"PSrcg6fy835R4c5CW\",\"yrCNkFYQBEDE76eFS\",\"C9LKGu2g5hSijvDzA\",\"6u7yc9m6HuHGbHzph\",\"WkWyq9wMkZhXB6zsD\",\"td7qPZ7Lv4pEWT2Ya\",\"nfXGHENb5md7m355s\",\"XKi8iZXBCHCaebSHh\",\"sCnrfER8vCe4xhpB2\",\"JEAi9mG3vvBomJ3Yu\",\"yAouD3PxzED8a4gap\",\"Nj6FwgBtAXsaQwsM2\",\"jHrtWDGBhkbuWa7fG\",\"gMJhLdyw3tH7L96X2\",\"N2wnZXkhDH86mgjQ8\",\"FgkYtHLxeD8pETJ8T\",\"cR3ibTMxLyEdDFCHY\",\"T2vhHPhRR96hRizq8\",\"HQxp7NcdvF92G7bYS\",\"2fxapKr8XGdNeaKi2\",\"otXtuQygbcYATMZoP\",\"RXb6cmCNaYbczuDwy\",\"HqmxnQJM66Y57twhn\",\"AxDfHRFgQ8jfFbF5p\",\"4y2bxsHwifCdZXAQA\",\"qJZsi5rhRnWA38FbA\",\"whxg3NqYEJbvZStgc\",\"jeuoearPPTcGPgXhf\",\"K3RacTvkWHLfzKF8i\",\"3SKmXhcLPPkmQhjip\",\"u5u2YpHXiNgzDNJdX\",\"DLai9DxpZN6p5TPRX\",\"7CwgH38hHpiGdu2zT\",\"ksafdYcNM3SFEQoW9\",\"sKfrD9gjCDHuqLzSk\",\"K96FwtfDDN5WM4Bb7\",\"4tgBydK887PitgAoi\",\"8PwfYqoDQFThzNtvf\",\"6ShafRStcvew4GfCh\",\"nYoc6fEraRbFYbESd\",\"C4QntmkYtB89GNtpd\",\"cXp7BXyiNJzBWdvYY\",\"Qn2cXjNudoyxw5FnA\",\"fxLjWpWbBeaYcvdgB\",\"PTcm3qFvxvLnaKttM\",\"CEd9tLdXeDeNHSzys\",\"4WgxcywfLRdxZ4gzP\",\"3LiSLdtN58n46NEqg\",\"vgTvCCxgvbCTDvaRT\",\"Xj6R2zqhgumffQCAN\",\"huEPpfPHkupH9XqDJ\",\"BeFnbPbMnAM2SjBdZ\",\"2innwjWqxJHo4eRGh\",\"PXAcsKkssS2yLyDv2\",\"p3dsCFdWGzWGhFrSQ\",\"QnPD4Sv6W4LHc2Qng\",\"Yp7uvStL97cC9fKkY\",\"KMrasP2mhRSPpZxjf\",\"Ycj4iTJGFyvC4bXek\",\"AasGs8AeX9Lcb9xJn\",\"4CFzv558qbGcpQwc4\",\"v3fjGuc7Pq4yjFygS\",\"w3A7cBWyAfukk6xEQ\",\"aEm3Wvj2rFYRL8Lrb\",\"orFLgPDw9H5MDzmwo\",\"9Ly8afdtofp8DXzrt\",\"mxX4rH5ELYkdZ2Mbw\",\"aRqQ42J5zqCmBNd8w\",\"vLrq4dEDMM2wd68Dc\",\"dHZqT6h4JMwk5fPC8\",\"hnyhBFWwNCz9mDfSi\",\"jNvegJWCk5HCtEMbK\",\"ZNnsMeNkdDhHjSrZb\",\"s5M5RvgqR9BhB9JoC\",\"Ro3ppqamSxiJv2wxP\",\"gJYuGdkXEWWmGRLzu\",\"HF28xZKSLM9wEuqNg\",\"2QGRoQn2dRq3scu7k\",\"kYWb8BwpKwunQkxeX\",\"DEDniTrstQYGounXT\",\"gSFJPsMXnqAog3Q9f\",\"KdNDysEsy2TW5QRJ2\",\"8LfTheFzvicameoz9\",\"9pzFiFK3ANLjQfnr2\",\"qZQxPQ2kaNKAMesHT\",\"FzxTj4GuujhwpZM7y\",\"ahk2qiXKJA753wAJk\",\"Mjqxm4q6uEtZCnMzn\",\"Tb2m9eGdTuSG8RbyD\",\"s9GzySPz9vpMNQ2vj\",\"n2ck2WGuM35vbZiFz\",\"Sk5h9RsRyCjSNKubE\",\"a777e8chPvJkY3tKa\",\"XrqNzJ2FRG8HnGiR6\",\"yr822PZmmiDDenxpB\",\"DrkR35NqnP9NDLbq6\",\"2ptN2mhjFwFcHyPZd\",\"H4abACFDH5t8CnnyH\",\"ZrKCkX7xxGGZzauFW\",\"NG8PWBSjsM8mMhQEq\",\"syRNbbPdLCGXbH2Gy\",\"TwKZ3835iFLog2RuQ\",\"iojEnnY9FsMfYzp6f\",\"5s4qhuRJijYaDNXva\",\"WwMjW4MJRuNFExoPc\",\"Ecg4m7srYGgZsb4Ck\",\"Pe8vWpDHRuH9nSGKW\",\"FEYpu9RWysAgW3XnP\",\"yjtdwc2AC4jA2RWtn\",\"YcCLwitFMAEJSnxAW\",\"NNE5HNRXAkmhrWgyQ\",\"hRiMXDZNAzyPd5tpt\",\"oBcs8GLX2ZFLXQy8y\",\"M8dQuMrEpP8Hc3tHN\",\"n2BRY9X8899dcG8Bw\",\"YA7SDhpgEtsqynvNL\",\"w2HhxvSLmDhaGCAjE\",\"iS5BrkGLzJyPK7nKt\",\"3cF6NXq3ZEwdkgSjb\",\"zd9FLSzsGz3evKafy\",\"tpxMgkGSHwBjS95Ta\",\"mG8HqKiAQFTdRZthG\",\"KLmLKaJPfsYxp42p2\",\"k2Eo3wyfZZ6KxvKhN\",\"gXTAie79kiw28tx5u\",\"DPi9QGLctq2y76KuE\",\"9CoqdidjM9KbeKnHY\",\"DYDJTyGgKFnBRLm2r\",\"QRv96jmNaYsWkxQEG\",\"7txFzDQ43vJ7qCY88\",\"J3upzLHuEwXH7Z2hx\",\"dYPkStFnLvAMsHSzZ\",\"KJCDwGkoXh8qtbbKr\",\"cAP3n5NY64uoMwzRR\",\"5XiuAqicKD4hBdu63\",\"RGMbFMZXJr7DhcAJy\",\"dBzwBtRjZqB98DJeB\",\"5HCu9Ydd86QgHDRNP\",\"d8qtzoLB264iP8tdY\",\"Wv2vJnEj8ywNmARoF\",\"cZccqzRQ9GgjQF6Az\",\"J5T8gZqiZXFuFDTQ7\",\"HuNF3xTBzmatyGSTm\",\"wRttWTM59y8m5mx7x\",\"3nied3n8KG8RSNixH\",\"R4SjTgDnpigJYDLyL\",\"5S9nX4rKsnCcnv4Cz\",\"5hQnRWiKkhgKJXNMP\",\"eYfPWvZwnJQkHbSTK\",\"buX4mCQhtXCfBjeno\",\"GGdmhAvxXhqhhibJN\",\"Ds7L5bksw2QRHjrKL\",\"4RsakkyRXyYGwFxEa\",\"sHjfbGQGLHE6JR6qu\",\"srJ34BaybkQh3qRkM\",\"CHvzhtXnv8HTbPQ56\",\"PWgzeK859suojbrRx\",\"qAby4AWXmTNeusvg3\",\"mZSpRtDpHMvGQHpAD\",\"eMuCpJ2spXWkJjWNz\",\"T6iBEE2jp7f7iEF2P\",\"AFfw7cGg83uYk2Miy\",\"66a9xX73nmTEuKs9k\",\"PC3pLs36zNzpRDSuE\",\"xn7uGNKeAwPEkP9oA\",\"yod5YhKtPqw2GfG9B\",\"8BFSTCnoe2QggN64c\",\"NzbRqGWspQnWMoDrF\",\"BrTDhPJcACL2bsrpJ\",\"Wpn95NqWxncQrwNgz\",\"AJexRBN9cYQmqvYu6\",\"mvJBakQ35CWAnbbEZ\",\"c2q7mY39z5JPEMCaM\",\"utTuvGdmu2sBHWBhQ\",\"2PufnQcsHsfymufX3\",\"rrSC943cCKNG48sH4\",\"K6MfKMytoJJuSGewP\",\"RoGGD5cpHb4ftdLDv\",\"PytNZK9mNiRiZxPrm\",\"XD5nmvKQchKezPXhy\",\"2iFe3EHEH2YdhSKrs\",\"pduNK68oazqQTtbLp\",\"hR7GMiqGap4CzEWSy\",\"MKZphRBjevaMC2RDS\",\"4TmgHkn5vqyHK3sYC\",\"v74fPhegePGxCm2uk\",\"MKT7khMBGXzA22ykf\",\"T6Rm8mREPMZSftzrC\",\"dzS6WBTMHyFEag6Fp\",\"d9LBRxvADNBB5QJMB\",\"wjc4iejpErBhxWwHo\",\"qaR8DnWrTk8Mus5Q2\",\"ey3CASd6Je5LEJzfB\",\"uGuS9YRXW2nj4p6zf\",\"hpT9yYe5R45poHrYR\",\"Qyfyyw6oC4EHAndzo\",\"5QN8R22z43SrwoHDz\",\"mw9464S5dnenqzvpm\",\"Wi4H6ayKsNDWWQCG5\",\"DQskEvAv5KiJDPtGF\"],\"quality\":[2,4,5,5,5,3,5,5,2,5,4,5,4,5,5,5,5,5,4,5,5,5,4,5,5,5,5]},\"tests\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.518518518518518,\"family\":[{\"_id\":\"MJKYcPsw34sWbcqP8\",\"language\":\"javascript\"},{\"_id\":\"5ocRqXFRgKZD57fgg\",\"language\":\"php\"},{\"_id\":\"zYr4v5gb43kJPje9g\",\"language\":\"python3\"},{\"_id\":\"ncWc8cX2pzYtv6wbJ\",\"language\":\"ruby\"}]}}"]