a["{\"msg\":\"result\",\"id\":\"329\",\"result\":{\"_id\":\"vsBznidKiKA96gp2J\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"def has_hidden_fee(prices, t):\\n\\t\",\"difficulty\":0.6409638554216868,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"PEAWKNGNi3H6YupZB\",\"instructions\":\"Given a list of prices `prices` and a \\\"supposed\\\" total `t`, return `True` if there is a **hidden fee** added to the total (i.e. *the total is greater than the sum of prices*), otherwise return `False`.\\n\\n### Examples\\n```\\nhas_hidden_fee([\\\"$2\\\", \\\"$4\\\", \\\"$1\\\", \\\"$8\\\"], \\\"$15\\\") ➞ False\\n\\nhas_hidden_fee([\\\"$1\\\", \\\"$2\\\", \\\"$3\\\"], \\\"$6\\\") ➞ False\\n\\nhas_hidden_fee([\\\"$1\\\"], \\\"$4\\\") ➞ True\\n```\\n\\n### Notes\\n- Remember that each price is given as a string.\\n- All $ signs will be at the beginning of the number.\",\"isHidden\":false,\"lab\":\"Test.assert_equals(has_hidden_fee([\\\"$2\\\", \\\"$4\\\", \\\"$1\\\", \\\"$8\\\"], \\\"$15\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$1\\\", \\\"$2\\\", \\\"$3\\\"], \\\"$6\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$15\\\", \\\"$40\\\", \\\"$19\\\", \\\"$50\\\", \\\"$22\\\", \\\"$41\\\", \\\"$35\\\", \\\"$10\\\", \\\"$38\\\", \\\"$41\\\"], \\\"$311\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$25\\\", \\\"$6\\\", \\\"$19\\\", \\\"$9\\\", \\\"$32\\\", \\\"$15\\\", \\\"$10\\\", \\\"$9\\\", \\\"$7\\\", \\\"$8\\\", \\\"$37\\\", \\\"$23\\\", \\\"$18\\\"], \\\"$232\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$31\\\", \\\"$30\\\", \\\"$21\\\", \\\"$12\\\", \\\"$10\\\", \\\"$38\\\", \\\"$42\\\", \\\"$27\\\", \\\"$51\\\"], \\\"$297\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$9\\\", \\\"$37\\\", \\\"$21\\\", \\\"$4\\\", \\\"$14\\\", \\\"$10\\\", \\\"$36\\\", \\\"$33\\\", \\\"$17\\\", \\\"$41\\\", \\\"$50\\\", \\\"$48\\\", \\\"$2\\\", \\\"$45\\\", \\\"$6\\\", \\\"$22\\\", \\\"$23\\\"], \\\"$499\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$15\\\", \\\"$30\\\", \\\"$34\\\"], \\\"$79\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$35\\\", \\\"$29\\\", \\\"$9\\\", \\\"$47\\\", \\\"$43\\\", \\\"$4\\\", \\\"$37\\\", \\\"$32\\\", \\\"$49\\\", \\\"$37\\\", \\\"$32\\\", \\\"$38\\\", \\\"$43\\\", \\\"$19\\\", \\\"$26\\\", \\\"$46\\\", \\\"$46\\\", \\\"$31\\\", \\\"$24\\\", \\\"$6\\\"], \\\"$696\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$50\\\", \\\"$28\\\", \\\"$11\\\", \\\"$51\\\", \\\"$8\\\", \\\"$44\\\"], \\\"$192\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$50\\\", \\\"$14\\\", \\\"$45\\\", \\\"$43\\\", \\\"$7\\\", \\\"$45\\\", \\\"$34\\\", \\\"$28\\\", \\\"$46\\\", \\\"$50\\\", \\\"$36\\\", \\\"$23\\\"], \\\"$432\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$45\\\", \\\"$50\\\", \\\"$45\\\", \\\"$16\\\", \\\"$6\\\", \\\"$45\\\", \\\"$33\\\", \\\"$18\\\", \\\"$12\\\", \\\"$3\\\", \\\"$40\\\", \\\"$51\\\"], \\\"$364\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$33\\\", \\\"$26\\\", \\\"$40\\\", \\\"$10\\\", \\\"$24\\\", \\\"$48\\\"], \\\"$181\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$21\\\", \\\"$45\\\", \\\"$6\\\", \\\"$43\\\", \\\"$39\\\"], \\\"$207\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$18\\\", \\\"$44\\\", \\\"$51\\\", \\\"$31\\\", \\\"$22\\\", \\\"$8\\\", \\\"$21\\\", \\\"$27\\\", \\\"$21\\\", \\\"$3\\\", \\\"$42\\\", \\\"$10\\\", \\\"$47\\\", \\\"$29\\\", \\\"$32\\\", \\\"$47\\\"], \\\"$517\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$17\\\", \\\"$31\\\", \\\"$42\\\", \\\"$20\\\", \\\"$28\\\", \\\"$13\\\", \\\"$17\\\", \\\"$4\\\", \\\"$13\\\", \\\"$1\\\", \\\"$29\\\", \\\"$20\\\", \\\"$30\\\", \\\"$34\\\", \\\"$14\\\", \\\"$18\\\", \\\"$20\\\", \\\"$14\\\", \\\"$38\\\", \\\"$30\\\"], \\\"$456\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$48\\\", \\\"$24\\\", \\\"$11\\\"], \\\"$83\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$14\\\", \\\"$15\\\", \\\"$12\\\", \\\"$18\\\", \\\"$29\\\", \\\"$3\\\", \\\"$29\\\", \\\"$9\\\", \\\"$7\\\", \\\"$2\\\", \\\"$15\\\", \\\"$8\\\", \\\"$50\\\", \\\"$4\\\", \\\"$3\\\"], \\\"$218\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$30\\\", \\\"$40\\\", \\\"$2\\\", \\\"$25\\\", \\\"$48\\\", \\\"$42\\\", \\\"$22\\\", \\\"$6\\\", \\\"$48\\\", \\\"$14\\\", \\\"$15\\\", \\\"$2\\\", \\\"$46\\\", \\\"$20\\\", \\\"$5\\\", \\\"$10\\\", \\\"$35\\\"], \\\"$412\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$43\\\", \\\"$49\\\", \\\"$2\\\", \\\"$15\\\", \\\"$6\\\", \\\"$20\\\", \\\"$31\\\", \\\"$7\\\", \\\"$38\\\", \\\"$40\\\", \\\"$17\\\", \\\"$25\\\", \\\"$21\\\", \\\"$29\\\", \\\"$12\\\", \\\"$34\\\", \\\"$22\\\", \\\"$45\\\", \\\"$18\\\", \\\"$19\\\", \\\"$31\\\"], \\\"$524\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$25\\\", \\\"$16\\\"], \\\"$56\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$28\\\", \\\"$11\\\", \\\"$2\\\", \\\"$12\\\", \\\"$22\\\", \\\"$7\\\", \\\"$30\\\", \\\"$46\\\", \\\"$25\\\", \\\"$17\\\", \\\"$28\\\", \\\"$44\\\", \\\"$14\\\", \\\"$43\\\", \\\"$6\\\", \\\"$11\\\", \\\"$23\\\", \\\"$6\\\", \\\"$46\\\"], \\\"$459\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$24\\\", \\\"$31\\\", \\\"$6\\\", \\\"$20\\\", \\\"$35\\\", \\\"$33\\\", \\\"$1\\\", \\\"$46\\\", \\\"$45\\\", \\\"$36\\\", \\\"$43\\\"], \\\"$394\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$18\\\", \\\"$25\\\", \\\"$44\\\", \\\"$36\\\", \\\"$50\\\", \\\"$32\\\", \\\"$7\\\", \\\"$42\\\", \\\"$23\\\", \\\"$38\\\", \\\"$43\\\", \\\"$9\\\", \\\"$7\\\", \\\"$22\\\", \\\"$51\\\", \\\"$35\\\", \\\"$8\\\"], \\\"$557\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$17\\\", \\\"$37\\\", \\\"$43\\\", \\\"$6\\\", \\\"$22\\\", \\\"$39\\\", \\\"$11\\\", \\\"$29\\\", \\\"$11\\\", \\\"$1\\\", \\\"$7\\\", \\\"$30\\\", \\\"$1\\\", \\\"$30\\\", \\\"$42\\\", \\\"$27\\\", \\\"$12\\\", \\\"$16\\\", \\\"$13\\\", \\\"$42\\\", \\\"$19\\\"], \\\"$455\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$40\\\", \\\"$39\\\", \\\"$22\\\", \\\"$19\\\", \\\"$24\\\", \\\"$40\\\", \\\"$16\\\", \\\"$47\\\", \\\"$28\\\", \\\"$23\\\", \\\"$45\\\", \\\"$2\\\", \\\"$45\\\"], \\\"$428\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$32\\\", \\\"$22\\\", \\\"$16\\\", \\\"$34\\\", \\\"$6\\\", \\\"$10\\\", \\\"$19\\\", \\\"$25\\\", \\\"$46\\\"], \\\"$282\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$49\\\", \\\"$43\\\", \\\"$3\\\", \\\"$7\\\", \\\"$35\\\", \\\"$48\\\", \\\"$5\\\", \\\"$47\\\", \\\"$45\\\", \\\"$10\\\", \\\"$18\\\", \\\"$13\\\", \\\"$17\\\", \\\"$32\\\", \\\"$26\\\"], \\\"$398\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$37\\\", \\\"$29\\\", \\\"$22\\\", \\\"$32\\\", \\\"$32\\\", \\\"$51\\\", \\\"$18\\\", \\\"$49\\\", \\\"$19\\\", \\\"$15\\\", \\\"$6\\\", \\\"$18\\\", \\\"$8\\\", \\\"$2\\\", \\\"$36\\\", \\\"$39\\\", \\\"$48\\\", \\\"$25\\\", \\\"$32\\\"], \\\"$518\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$49\\\", \\\"$2\\\", \\\"$10\\\", \\\"$47\\\", \\\"$1\\\", \\\"$5\\\", \\\"$38\\\", \\\"$33\\\", \\\"$7\\\", \\\"$12\\\", \\\"$44\\\", \\\"$50\\\", \\\"$47\\\", \\\"$45\\\", \\\"$37\\\", \\\"$8\\\", \\\"$30\\\"], \\\"$465\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$41\\\", \\\"$38\\\", \\\"$12\\\", \\\"$33\\\", \\\"$34\\\", \\\"$7\\\", \\\"$40\\\", \\\"$19\\\", \\\"$17\\\", \\\"$48\\\", \\\"$41\\\", \\\"$30\\\", \\\"$1\\\", \\\"$38\\\"], \\\"$399\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$30\\\", \\\"$38\\\", \\\"$37\\\", \\\"$13\\\", \\\"$8\\\", \\\"$2\\\", \\\"$43\\\", \\\"$23\\\", \\\"$48\\\", \\\"$50\\\", \\\"$25\\\", \\\"$12\\\", \\\"$34\\\"], \\\"$431\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$11\\\", \\\"$41\\\", \\\"$4\\\", \\\"$6\\\", \\\"$37\\\", \\\"$51\\\", \\\"$1\\\", \\\"$23\\\", \\\"$41\\\", \\\"$18\\\", \\\"$6\\\", \\\"$36\\\", \\\"$40\\\", \\\"$36\\\", \\\"$16\\\", \\\"$10\\\"], \\\"$377\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$45\\\", \\\"$22\\\", \\\"$18\\\", \\\"$3\\\", \\\"$5\\\", \\\"$10\\\", \\\"$30\\\", \\\"$39\\\", \\\"$32\\\"], \\\"$263\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$49\\\", \\\"$32\\\", \\\"$47\\\", \\\"$14\\\", \\\"$47\\\", \\\"$51\\\", \\\"$27\\\", \\\"$51\\\", \\\"$18\\\", \\\"$44\\\", \\\"$16\\\", \\\"$29\\\", \\\"$39\\\", \\\"$16\\\", \\\"$1\\\", \\\"$12\\\", \\\"$16\\\", \\\"$48\\\", \\\"$44\\\", \\\"$41\\\"], \\\"$642\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$37\\\", \\\"$3\\\", \\\"$7\\\", \\\"$5\\\", \\\"$23\\\", \\\"$1\\\", \\\"$11\\\", \\\"$50\\\", \\\"$9\\\", \\\"$5\\\", \\\"$16\\\", \\\"$30\\\"], \\\"$197\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$50\\\", \\\"$12\\\", \\\"$43\\\", \\\"$45\\\", \\\"$44\\\", \\\"$38\\\", \\\"$17\\\", \\\"$2\\\", \\\"$42\\\", \\\"$9\\\", \\\"$37\\\", \\\"$25\\\", \\\"$33\\\", \\\"$35\\\", \\\"$51\\\"], \\\"$510\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$35\\\", \\\"$17\\\", \\\"$35\\\", \\\"$24\\\", \\\"$29\\\", \\\"$21\\\", \\\"$50\\\", \\\"$8\\\", \\\"$44\\\", \\\"$45\\\", \\\"$13\\\", \\\"$44\\\", \\\"$17\\\", \\\"$42\\\", \\\"$51\\\", \\\"$10\\\", \\\"$47\\\", \\\"$46\\\", \\\"$47\\\", \\\"$18\\\"], \\\"$643\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$37\\\", \\\"$29\\\", \\\"$5\\\", \\\"$2\\\", \\\"$27\\\", \\\"$7\\\", \\\"$4\\\", \\\"$32\\\", \\\"$6\\\", \\\"$27\\\", \\\"$24\\\", \\\"$43\\\", \\\"$41\\\", \\\"$15\\\", \\\"$13\\\", \\\"$25\\\", \\\"$27\\\", \\\"$44\\\"], \\\"$501\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$1\\\", \\\"$5\\\", \\\"$19\\\", \\\"$26\\\", \\\"$14\\\", \\\"$51\\\", \\\"$51\\\", \\\"$27\\\", \\\"$6\\\", \\\"$13\\\", \\\"$28\\\", \\\"$40\\\", \\\"$21\\\", \\\"$20\\\", \\\"$10\\\", \\\"$27\\\"], \\\"$412\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$4\\\"], \\\"$84\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$13\\\", \\\"$9\\\", \\\"$49\\\", \\\"$2\\\", \\\"$18\\\"], \\\"$91\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$23\\\", \\\"$14\\\", \\\"$42\\\", \\\"$28\\\", \\\"$18\\\", \\\"$35\\\", \\\"$22\\\", \\\"$37\\\", \\\"$6\\\", \\\"$35\\\", \\\"$33\\\", \\\"$37\\\", \\\"$12\\\", \\\"$45\\\", \\\"$6\\\", \\\"$27\\\", \\\"$3\\\", \\\"$9\\\"], \\\"$530\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$21\\\", \\\"$2\\\", \\\"$16\\\", \\\"$49\\\", \\\"$26\\\", \\\"$32\\\", \\\"$7\\\", \\\"$33\\\", \\\"$4\\\", \\\"$28\\\", \\\"$12\\\", \\\"$24\\\", \\\"$39\\\", \\\"$39\\\", \\\"$28\\\", \\\"$13\\\", \\\"$27\\\", \\\"$33\\\"], \\\"$490\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$9\\\", \\\"$20\\\", \\\"$46\\\", \\\"$36\\\", \\\"$14\\\"], \\\"$151\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$50\\\", \\\"$37\\\", \\\"$27\\\", \\\"$39\\\", \\\"$3\\\", \\\"$10\\\", \\\"$18\\\", \\\"$39\\\", \\\"$27\\\", \\\"$24\\\", \\\"$18\\\", \\\"$6\\\", \\\"$23\\\", \\\"$36\\\", \\\"$33\\\", \\\"$3\\\", \\\"$20\\\"], \\\"$413\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$3\\\", \\\"$15\\\", \\\"$8\\\", \\\"$24\\\", \\\"$41\\\", \\\"$22\\\", \\\"$5\\\", \\\"$21\\\", \\\"$51\\\", \\\"$9\\\", \\\"$45\\\", \\\"$25\\\", \\\"$26\\\", \\\"$9\\\", \\\"$18\\\", \\\"$34\\\", \\\"$16\\\", \\\"$12\\\", \\\"$5\\\", \\\"$24\\\", \\\"$12\\\"], \\\"$438\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$48\\\", \\\"$44\\\", \\\"$15\\\", \\\"$3\\\", \\\"$22\\\", \\\"$33\\\", \\\"$18\\\", \\\"$28\\\", \\\"$12\\\", \\\"$34\\\", \\\"$20\\\", \\\"$21\\\", \\\"$48\\\", \\\"$28\\\", \\\"$6\\\", \\\"$2\\\", \\\"$40\\\", \\\"$49\\\", \\\"$6\\\"], \\\"$477\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$6\\\", \\\"$4\\\", \\\"$27\\\", \\\"$8\\\", \\\"$7\\\", \\\"$48\\\", \\\"$41\\\"], \\\"$236\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$38\\\", \\\"$30\\\", \\\"$24\\\", \\\"$15\\\", \\\"$5\\\", \\\"$1\\\", \\\"$50\\\", \\\"$41\\\", \\\"$20\\\", \\\"$12\\\", \\\"$18\\\", \\\"$48\\\", \\\"$18\\\"], \\\"$320\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$31\\\", \\\"$48\\\", \\\"$15\\\", \\\"$7\\\", \\\"$36\\\", \\\"$32\\\", \\\"$15\\\"], \\\"$184\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$3\\\", \\\"$10\\\", \\\"$39\\\", \\\"$51\\\", \\\"$40\\\", \\\"$21\\\", \\\"$23\\\", \\\"$39\\\", \\\"$1\\\", \\\"$39\\\", \\\"$49\\\", \\\"$47\\\", \\\"$32\\\", \\\"$45\\\", \\\"$37\\\", \\\"$34\\\", \\\"$20\\\", \\\"$33\\\"], \\\"$563\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$51\\\", \\\"$1\\\", \\\"$14\\\", \\\"$26\\\", \\\"$10\\\", \\\"$31\\\", \\\"$25\\\"], \\\"$158\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$2\\\", \\\"$12\\\", \\\"$14\\\", \\\"$50\\\", \\\"$16\\\", \\\"$24\\\", \\\"$9\\\", \\\"$19\\\", \\\"$50\\\", \\\"$3\\\", \\\"$16\\\", \\\"$26\\\", \\\"$31\\\", \\\"$41\\\"], \\\"$317\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$38\\\", \\\"$5\\\", \\\"$4\\\", \\\"$16\\\", \\\"$13\\\", \\\"$2\\\", \\\"$39\\\", \\\"$28\\\", \\\"$35\\\", \\\"$50\\\", \\\"$32\\\", \\\"$26\\\", \\\"$39\\\"], \\\"$327\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$17\\\", \\\"$41\\\", \\\"$26\\\", \\\"$40\\\", \\\"$50\\\", \\\"$36\\\", \\\"$6\\\", \\\"$2\\\", \\\"$28\\\", \\\"$42\\\", \\\"$7\\\", \\\"$35\\\", \\\"$39\\\", \\\"$31\\\", \\\"$33\\\", \\\"$43\\\"], \\\"$476\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$1\\\", \\\"$23\\\", \\\"$46\\\", \\\"$20\\\", \\\"$37\\\", \\\"$42\\\", \\\"$19\\\"], \\\"$188\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$25\\\", \\\"$41\\\"], \\\"$66\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$13\\\", \\\"$1\\\", \\\"$23\\\", \\\"$12\\\"], \\\"$49\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$49\\\", \\\"$38\\\", \\\"$16\\\", \\\"$40\\\", \\\"$20\\\", \\\"$36\\\", \\\"$39\\\", \\\"$46\\\"], \\\"$353\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$33\\\"], \\\"$84\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$40\\\", \\\"$49\\\", \\\"$21\\\", \\\"$14\\\", \\\"$48\\\", \\\"$40\\\", \\\"$13\\\"], \\\"$307\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$38\\\", \\\"$25\\\", \\\"$51\\\", \\\"$30\\\", \\\"$25\\\", \\\"$14\\\", \\\"$39\\\", \\\"$9\\\", \\\"$6\\\", \\\"$46\\\"], \\\"$283\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$3\\\", \\\"$44\\\", \\\"$7\\\", \\\"$33\\\", \\\"$46\\\", \\\"$13\\\", \\\"$8\\\", \\\"$40\\\", \\\"$2\\\"], \\\"$196\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$4\\\", \\\"$23\\\", \\\"$2\\\", \\\"$40\\\", \\\"$35\\\", \\\"$40\\\", \\\"$39\\\", \\\"$18\\\", \\\"$28\\\", \\\"$49\\\", \\\"$15\\\", \\\"$16\\\", \\\"$12\\\", \\\"$3\\\", \\\"$30\\\", \\\"$29\\\", \\\"$38\\\"], \\\"$421\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$47\\\", \\\"$35\\\", \\\"$4\\\", \\\"$49\\\", \\\"$31\\\", \\\"$40\\\", \\\"$48\\\", \\\"$47\\\", \\\"$22\\\", \\\"$51\\\", \\\"$33\\\", \\\"$46\\\", \\\"$50\\\"], \\\"$535\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$42\\\"], \\\"$136\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$18\\\", \\\"$28\\\", \\\"$50\\\", \\\"$1\\\"], \\\"$97\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$25\\\", \\\"$30\\\", \\\"$28\\\", \\\"$17\\\", \\\"$4\\\", \\\"$7\\\", \\\"$24\\\", \\\"$12\\\", \\\"$15\\\", \\\"$15\\\", \\\"$44\\\", \\\"$26\\\", \\\"$47\\\", \\\"$16\\\"], \\\"$310\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$10\\\", \\\"$38\\\", \\\"$7\\\", \\\"$49\\\", \\\"$33\\\", \\\"$18\\\", \\\"$25\\\", \\\"$16\\\", \\\"$2\\\", \\\"$17\\\", \\\"$35\\\", \\\"$11\\\", \\\"$44\\\", \\\"$35\\\", \\\"$49\\\", \\\"$22\\\"], \\\"$411\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$8\\\", \\\"$3\\\", \\\"$28\\\", \\\"$19\\\", \\\"$18\\\", \\\"$28\\\", \\\"$24\\\", \\\"$8\\\", \\\"$20\\\", \\\"$36\\\", \\\"$28\\\", \\\"$37\\\"], \\\"$320\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$7\\\", \\\"$6\\\", \\\"$34\\\", \\\"$10\\\", \\\"$31\\\", \\\"$5\\\", \\\"$29\\\", \\\"$13\\\", \\\"$40\\\", \\\"$30\\\", \\\"$21\\\", \\\"$49\\\", \\\"$44\\\", \\\"$4\\\", \\\"$2\\\", \\\"$10\\\", \\\"$3\\\", \\\"$1\\\", \\\"$7\\\", \\\"$12\\\", \\\"$50\\\"], \\\"$487\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$11\\\", \\\"$51\\\", \\\"$46\\\", \\\"$19\\\", \\\"$25\\\", \\\"$51\\\", \\\"$48\\\", \\\"$18\\\", \\\"$17\\\", \\\"$16\\\", \\\"$18\\\", \\\"$6\\\", \\\"$6\\\", \\\"$48\\\", \\\"$41\\\", \\\"$20\\\", \\\"$7\\\"], \\\"$489\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$6\\\", \\\"$20\\\", \\\"$25\\\", \\\"$41\\\", \\\"$24\\\", \\\"$26\\\", \\\"$41\\\", \\\"$47\\\", \\\"$6\\\", \\\"$17\\\", \\\"$22\\\", \\\"$7\\\", \\\"$3\\\", \\\"$23\\\", \\\"$48\\\", \\\"$48\\\"], \\\"$456\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$15\\\", \\\"$26\\\", \\\"$26\\\", \\\"$23\\\"], \\\"$93\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$21\\\", \\\"$14\\\", \\\"$45\\\", \\\"$20\\\", \\\"$24\\\", \\\"$36\\\", \\\"$34\\\"], \\\"$194\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$5\\\", \\\"$26\\\", \\\"$16\\\", \\\"$47\\\", \\\"$42\\\", \\\"$24\\\", \\\"$40\\\", \\\"$20\\\", \\\"$22\\\", \\\"$20\\\", \\\"$43\\\"], \\\"$305\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$13\\\", \\\"$19\\\", \\\"$36\\\", \\\"$43\\\", \\\"$18\\\"], \\\"$129\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$11\\\", \\\"$19\\\", \\\"$25\\\", \\\"$5\\\", \\\"$11\\\", \\\"$35\\\", \\\"$21\\\"], \\\"$138\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$7\\\", \\\"$42\\\", \\\"$27\\\", \\\"$17\\\", \\\"$13\\\"], \\\"$123\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$41\\\"], \\\"$41\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$3\\\", \\\"$15\\\", \\\"$4\\\", \\\"$7\\\", \\\"$2\\\", \\\"$7\\\", \\\"$4\\\", \\\"$6\\\", \\\"$16\\\", \\\"$24\\\", \\\"$30\\\", \\\"$20\\\", \\\"$8\\\", \\\"$14\\\", \\\"$35\\\", \\\"$15\\\", \\\"$13\\\", \\\"$34\\\", \\\"$26\\\", \\\"$11\\\", \\\"$37\\\"], \\\"$331\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$1\\\", \\\"$24\\\", \\\"$43\\\", \\\"$26\\\", \\\"$32\\\", \\\"$11\\\", \\\"$49\\\", \\\"$20\\\", \\\"$15\\\", \\\"$37\\\", \\\"$24\\\", \\\"$12\\\", \\\"$34\\\", \\\"$41\\\", \\\"$41\\\", \\\"$23\\\", \\\"$32\\\", \\\"$44\\\", \\\"$23\\\", \\\"$42\\\", \\\"$42\\\"], \\\"$681\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$24\\\", \\\"$9\\\", \\\"$27\\\"], \\\"$128\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$25\\\", \\\"$14\\\", \\\"$21\\\", \\\"$26\\\", \\\"$20\\\", \\\"$50\\\", \\\"$26\\\", \\\"$43\\\", \\\"$27\\\", \\\"$16\\\", \\\"$49\\\", \\\"$51\\\", \\\"$33\\\", \\\"$26\\\", \\\"$39\\\", \\\"$29\\\", \\\"$4\\\", \\\"$35\\\", \\\"$39\\\"], \\\"$645\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$9\\\", \\\"$20\\\", \\\"$36\\\", \\\"$51\\\", \\\"$15\\\", \\\"$26\\\"], \\\"$157\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$16\\\", \\\"$28\\\", \\\"$28\\\", \\\"$26\\\", \\\"$22\\\", \\\"$23\\\", \\\"$33\\\", \\\"$8\\\", \\\"$38\\\", \\\"$21\\\", \\\"$4\\\", \\\"$13\\\"], \\\"$302\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$28\\\", \\\"$2\\\"], \\\"$30\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$50\\\", \\\"$44\\\", \\\"$51\\\", \\\"$17\\\", \\\"$29\\\", \\\"$9\\\", \\\"$6\\\", \\\"$14\\\", \\\"$6\\\", \\\"$5\\\", \\\"$38\\\", \\\"$51\\\", \\\"$34\\\", \\\"$18\\\", \\\"$40\\\", \\\"$20\\\", \\\"$7\\\"], \\\"$512\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$37\\\"], \\\"$132\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$38\\\", \\\"$40\\\", \\\"$26\\\", \\\"$51\\\"], \\\"$203\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$8\\\", \\\"$5\\\", \\\"$5\\\"], \\\"$70\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$29\\\", \\\"$16\\\", \\\"$36\\\", \\\"$25\\\"], \\\"$161\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$40\\\", \\\"$7\\\", \\\"$8\\\", \\\"$47\\\", \\\"$19\\\", \\\"$7\\\"], \\\"$128\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$33\\\", \\\"$2\\\", \\\"$43\\\", \\\"$1\\\", \\\"$36\\\", \\\"$33\\\", \\\"$3\\\"], \\\"$220\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$11\\\", \\\"$17\\\", \\\"$43\\\", \\\"$4\\\", \\\"$6\\\", \\\"$8\\\", \\\"$51\\\", \\\"$32\\\", \\\"$15\\\", \\\"$20\\\", \\\"$2\\\", \\\"$41\\\", \\\"$12\\\", \\\"$5\\\"], \\\"$267\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$28\\\", \\\"$2\\\", \\\"$7\\\", \\\"$50\\\", \\\"$28\\\", \\\"$40\\\", \\\"$51\\\", \\\"$29\\\", \\\"$18\\\", \\\"$49\\\", \\\"$18\\\", \\\"$44\\\", \\\"$39\\\", \\\"$44\\\", \\\"$3\\\", \\\"$16\\\", \\\"$10\\\", \\\"$19\\\", \\\"$7\\\"], \\\"$502\\\"), False)\\nTest.assert_equals(has_hidden_fee([\\\"$40\\\", \\\"$37\\\", \\\"$36\\\", \\\"$50\\\", \\\"$33\\\", \\\"$27\\\", \\\"$27\\\", \\\"$50\\\", \\\"$39\\\", \\\"$29\\\", \\\"$3\\\", \\\"$40\\\", \\\"$13\\\", \\\"$10\\\", \\\"$2\\\", \\\"$37\\\", \\\"$35\\\", \\\"$33\\\"], \\\"$641\\\"), True)\\nTest.assert_equals(has_hidden_fee([\\\"$23\\\", \\\"$13\\\", \\\"$5\\\", \\\"$12\\\", \\\"$28\\\"], \\\"$81\\\"), False)\\nTest.assert_equals(has_hidden_fee(['$1'], '$4'), True)\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[0,0,0,0,0,0,1,0,1,5,1,2,0,0,0,1,1,0,0,1,0,1,0,0,1,0,1,0,0,1,0,2,0,0,1,2,2,1,0,2,1,0,1,0,1,0,0,0,1,0,0,0,2,1,0,1,1,0,0,2,1,0,3,0,1,0,0,0,0,1,1,1,0,0,1,0,0,0,1,1,2,0,0,2,0,0,0,1,3,2,0,0,0,1,2,0,1,1,2,0,1,0,2,1,0,0,0,0,0,0,0,2,0,0,0,1,2,0,1,0,1,0,5,0,0,0,0,2,1,0,0,1,2,0,0,2,0,1,0,0,1,1,1,1,0,1,3,0,1,0,5,0,1,1,1,0,2,0,0,1,1,3,1,0,2,2,2,1,0,0,0,3,0,0,1,0,0,0,1,0,0,1,1,0,0,1,0,0,2,0,1,0,1,2,0,1,1,0,2,1,1,0,0,0,0,0,1,0,0,2,0,3,0,2,0,0,0,0,0,3,0,2,0,1,0,0,0,1,1,1,1,0,1,0,0,1,0,0,1,2,0,0,0,0,0,0,0,1,1,0,0,0,3,0,1,0,1,3,1,1,0,0,0,1,0,0,0,0,1,0,1,1,0,2,0,0,0,0,1,0,2,0,0,1,0,0,2,0,0,1,0,0,2,2,2,0,1,0,0,0,1,0,1,0,1,2,0,0,0,1,2,0,0,0,0,1,1,0,0,2,1,1,1,3,0,1,1,0,0,1,0,1,0,2,0,0,2,0,0,0,0,1,1,0,5,1,0,0,1,0,1,0,1,1,1,0,1,0,2,0,1,0,0,1,1,1,1,0,0,0,1,0,0,0,0,0,0,2,1,0,0,0,1,0,0,1,0,2,0,0,0,1,0,0,0,0,0,0,2,0,0,1,1,0,2,0,0,1,0,0,1,1,0,1,2],\"rators\":[\"ZQSG2DF9TjmBGXPwu\",\"N2wnZXkhDH86mgjQ8\",\"6abffx8jQDCf7kgvb\",\"zd9FLSzsGz3evKafy\",\"H9KZi2cjt4FwH7qog\",\"R3YoPdvDu9rxbLDya\",\"AasGs8AeX9Lcb9xJn\",\"u5u2YpHXiNgzDNJdX\",\"eebeY4dPvLYcmzy2v\",\"gudC5KZrykfdfGD3J\",\"u5jLXaWAKo7K4JvTR\",\"4uPCFC6LBJYZ74uYu\",\"4tgBydK887PitgAoi\",\"dHZqT6h4JMwk5fPC8\",\"Cyd66Eo9xMehZzgvo\",\"Ycj4iTJGFyvC4bXek\",\"C4QntmkYtB89GNtpd\",\"zg8GmMSP2LkHBtAzy\",\"ArWzhxZEjsxjGF77p\",\"HDksZLiRAmpnCKHta\",\"Zjf44RRC7i3xHEaiJ\",\"Jqk2uJZZxEv5wZFze\",\"PXAcsKkssS2yLyDv2\",\"yKttxy9JGn5Jzwuj6\",\"NnT63f7QNZ8sWv3fc\",\"gAy3PaMpC5gjDZhKh\",\"J5T8gZqiZXFuFDTQ7\",\"yAouD3PxzED8a4gap\",\"jeuoearPPTcGPgXhf\",\"hnyhBFWwNCz9mDfSi\",\"tAF9Gf6PiGogbZuWs\",\"oKNAZ5BNeNWyvkiiB\",\"Fk9kLwoG4Brf4KsKf\",\"myXAR5qDJsBaPnff2\",\"boMXxa5zxP6yJHTje\",\"iYgYbusfgvRAJ6wkF\",\"gb9rvGus2Jv7bjZSs\",\"2fxapKr8XGdNeaKi2\",\"mxX4rH5ELYkdZ2Mbw\",\"76uLRmw8PScNMcszK\",\"9Ly8afdtofp8DXzrt\",\"PweZwtXTDkEwxZXQ4\",\"9f9LG2exEqL5gNrA7\",\"NMEDQhGCKoQQwbmez\",\"PpPpGAiMMQgX8uaJh\",\"4CFzv558qbGcpQwc4\",\"Yp7uvStL97cC9fKkY\",\"8BFSTCnoe2QggN64c\",\"srC8SN3W4FT2Z26zp\",\"kvR2cWXYZYR7TiLXx\",\"bC7yAKktHb63ReMBf\",\"pwWtbXEjzuvrhEGwt\",\"zC8WrPp5BC6c2exrW\",\"N57qgAhDZ2fsRtmqq\",\"MKT7khMBGXzA22ykf\",\"NuGmh6n9XMuuBLC4r\",\"BKjhZeZp8YLhd7ynb\",\"MxcAyZdGHd4knaoAe\",\"Lfut9z3euZ3odxFcH\",\"pfgcN6p9AtBZE7DEL\",\"8JyqsSbN2FJXPr3cw\",\"N7P4AnS8nzK4oupHv\",\"yabtHTtycsWhcGBfD\",\"PhceyfmFntJcn5Fhf\",\"hS8WBiFoAjP5Js6Wv\",\"23oi2a3vQwhtLEbSj\",\"8WeJLyNE4h6nJ2dNh\",\"zGBTg8pHNJjuPXAA5\",\"v8iedwMBcGiN2PHGM\",\"qAEumdjLRx2AGAmzw\",\"jNvegJWCk5HCtEMbK\",\"f9cFSNJgCPLNoi73Q\",\"ZcdJHAurGaZj8BRfB\",\"7jJ3oxMsq7qxqp49r\",\"ZEjaJfFNNtjY85eue\",\"9LLN4tbHA92uRLfHq\",\"AXcnPX68zdMiLNSmu\",\"KMze4vkbmvnL2aDsi\",\"BxgFErrhhNWtBfLRm\",\"7jL3ijPqP46GJ4cfJ\",\"HQxp7NcdvF92G7bYS\",\"aRqQ42J5zqCmBNd8w\",\"6LhWEvsGQm4iL9Hei\",\"wmiKeocyx5AvLxRbi\",\"HPMiZMZ2WGu4FWaRH\",\"wdoG642oE9cm8y9aH\",\"T2vQkL6e2qiRnuLLX\",\"j2wcHGHmPCHbaQEye\",\"5kEyLPjTLrt7z2YJZ\",\"gv5xGeXBT73oknz9p\",\"vLrq4dEDMM2wd68Dc\",\"TMxg4W7Xyu7t8R8iR\",\"WtFQigNmNZ5EREPzo\",\"g5HmbDCH36PdPd6aR\",\"Wv5c7WsK6R8yb4mTt\",\"orFLgPDw9H5MDzmwo\",\"XgRXeb4YyZqmiMTLe\",\"KvcKs5bmWo5fK4GFj\",\"5LRGQaYAufQtg8B5Q\",\"geZ3oLjhh9KAw7yHs\",\"bg4G79DdkMaDxXvdv\",\"puCobPgduCEZMXu69\",\"yZvzB3qFb8pkHy4dg\",\"cR3ibTMxLyEdDFCHY\",\"g4NCSxxHqHCGMpWwT\",\"F2aeZ4zqupp7a8SkW\",\"jG47JgqiQsxNbd83s\",\"3LiSLdtN58n46NEqg\",\"YZsZjfvd3PnLhDJrR\",\"d4Myxr6T992RFYJnx\",\"HMweSoHkGZN6tfew7\",\"E9ttMPTkLkKG6nZrg\",\"6SoXdn2Gcw6AHRxFG\",\"SB8QRjuWA9viDms5n\",\"JizHCRcwLzRzNfsPK\",\"GJfqjgFShBiHSTiaP\",\"9YtQPAffoq4WJLcAP\",\"sFdLT2Zh9n6De85f6\",\"Nw5Co4WxYtGovKnmA\",\"BJTPDwCaPoZaukX7C\",\"s2ZMtR9deh6Kia7pb\",\"erEunWkRveQoPZyTC\",\"AqgCu4a5vd4nahhJd\",\"68r3J5vGtfW7p7qko\",\"C9LKGu2g5hSijvDzA\",\"rJGeRSCjGzRuYfHZS\",\"qrZB59AcTKF4SkrKr\",\"zCdKrzmCNvjsJz4hL\",\"kHMvbWa69czPnSKWg\",\"dcRvbcRWti6DWDZQc\",\"SEjhBYzri4HHmm5Fv\",\"obgiitvusGnJyzhGP\",\"c9nu6dMCYHn5NoGFZ\",\"KRSKj7ikX2ytWFmod\",\"CtcMetTXaFgX6Evvf\",\"gJYuGdkXEWWmGRLzu\",\"94FLQj5fEsSg4E498\",\"6BQLjjAsf9hasbK9g\",\"FEYpu9RWysAgW3XnP\",\"ffjnHrx8Ym7A7pQWe\",\"YTRAyZFtn9m68HBLK\",\"TR5aWdDKP6iaL6mGK\",\"xG4jFH32NX5WP3aMx\",\"PWJq8oJNMEhwRGD4M\",\"hKrY8hWMgToBavfhD\",\"hqiTnCHZxYu2nvNK5\",\"X74H8PYX8XYkrGRQc\",\"DghD3McairtxGn8wa\",\"XrqNzJ2FRG8HnGiR6\",\"moFrJ4vxzxPynByzB\",\"aEm3Wvj2rFYRL8Lrb\",\"q5a96XumccZyhQNyL\",\"PeK3KRQZZYEWNXBxf\",\"DEDniTrstQYGounXT\",\"6SKDJwXpev4qPSzgM\",\"B7xNs2GQLTqNcHhgf\",\"veAhgEKubmGCuoCyh\",\"XbxHXmh5ZmRN2gw3K\",\"M8dQuMrEpP8Hc3tHN\",\"rzF2F7DgSjgJrneo8\",\"EfuBzbisdKE5weiHa\",\"x5wvJ6prnNcY3A3rg\",\"9pzFiFK3ANLjQfnr2\",\"SzdT9nsTbXE4ahFsv\",\"YcCLwitFMAEJSnxAW\",\"FzxTj4GuujhwpZM7y\",\"7dQYiDeTcMztbGyso\",\"AF6LgdKhEdzwgRJom\",\"kjvgTyRFyKHv44DcH\",\"6RjvoM4ZdPyYQWaRX\",\"586FdBhazpwJfnRYR\",\"sDRY37TfoncsA2FSR\",\"So6PHm74mfJuY2WTs\",\"jufL2dZQH8tBJajpr\",\"NG8PWBSjsM8mMhQEq\",\"Stye5FSYwYNbhFHgR\",\"TTgP9jcqGxCfKotZ3\",\"JRacQYm77Ltir8aK8\",\"66a9xX73nmTEuKs9k\",\"7Z9KdHmzkoF3TQC8s\",\"Y9SPwnGra4STbviL4\",\"5HCu9Ydd86QgHDRNP\",\"usRAT3gR3GFus28mo\",\"AkNdYK2xbbmDcZrjM\",\"mGzrqcrJYviuy5qn4\",\"QpZ9b8ygwameoA97h\",\"nfXGHENb5md7m355s\",\"CBXLutgEKHKvbgE3h\",\"cf5WufFztCqXiCi3M\",\"a777e8chPvJkY3tKa\",\"5JyY5eDxizCH7TYT7\",\"Yg5KsgKxN3tWmuEKG\",\"Z4dHig4b5MK4beJYs\",\"4fzeRjnFLb3g2v3XK\",\"2ZFoLTxcCARhwc8xX\",\"64ZBqm6Z6S3wgXaF6\",\"H4abACFDH5t8CnnyH\",\"c4SCmmZJEL6yvGfZb\",\"G2pMfCik8KtdaSNqr\",\"FRN2W8RYpJ6GPhgRy\",\"WWD6uwvCr54JJGu5S\",\"3sGiT8qjdkzqinpde\",\"ai8HyfiT9DYFrRGim\",\"4yNLEwL2rsx4EE5Nt\",\"X8BW96KGWpZAiFeDg\",\"p3zah7ZzLWs9j4NyE\",\"Br9aaArg7qJLcNdhP\",\"k5mp7Hkg8w5rwiXpe\",\"b9YQPLb9ZPSADdHXX\",\"qMfpXAFRSMc6gEzCh\",\"aPLuemxzZ5iS57NBQ\",\"yNjkHfHESBAnCssPB\",\"6C94M4PPHbBumAuja\",\"PMTfF8TMyy9psw6ai\",\"n5P3xDbGTAQR4h8HC\",\"FiaTpm7ehfDv43wSG\",\"5AHe67SapnPQeESpv\",\"syRNbbPdLCGXbH2Gy\",\"toYJbQhARDz3RXf5W\",\"2ptN2mhjFwFcHyPZd\",\"eMuCpJ2spXWkJjWNz\",\"mmjoLhCivx5pjfbWw\",\"DrkR35NqnP9NDLbq6\",\"2innwjWqxJHo4eRGh\",\"8vWWL8Tx2yDai4ydm\",\"KdYQN3KAT2DyTzT2a\",\"i5iePG5GqhJJ8HEoB\",\"KJCDwGkoXh8qtbbKr\",\"YnvEysTMLBk2KMSe4\",\"dj5AyG5fWP8FdsSmZ\",\"JS3hNM3XXkxPdg3yk\",\"oBcs8GLX2ZFLXQy8y\",\"uouMMdEWBuLBWPbzr\",\"iS5BrkGLzJyPK7nKt\",\"4bnRYgbirDp5unwGQ\",\"Xj6R2zqhgumffQCAN\",\"iojEnnY9FsMfYzp6f\",\"TPhfpB5tzQWSSn67n\",\"hRiMXDZNAzyPd5tpt\",\"DJdsqmTeAGDwrgYoZ\",\"SkQcb2sRn4as5KpnN\",\"DTyNcDkiScCjgJt28\",\"KLmLKaJPfsYxp42p2\",\"iCDqhZGvszrXpDRuW\",\"WpNHMgfjZE8aNN2MP\",\"whfykmA3bBzqJKzTf\",\"mKJuoa2SZSDNhvhk9\",\"zigHw4RqWudQvG7sv\",\"u7i7WPM63n42r8R8o\",\"MNKE5PyqhNdFJgm6S\",\"dSd7wHgXGQeG5BQ2P\",\"q6QsMYNMpPNtmyTeW\",\"dKpesT6tnCimdoQjw\",\"aKzYNPqBqb3J3ZgyD\",\"ta5CrWnBCRusD2WMo\",\"F9GLWPxRrMSdP66Y5\",\"CweSNtrMCbkZLY2Zj\",\"bmthyKcDF922zNqxK\",\"fTNQmMvTZhhiGBCMe\",\"yjtdwc2AC4jA2RWtn\",\"TjeuzxKBd7b4ZajSs\",\"DkeEd2uhXypnPDnNT\",\"XpRh7W7jGst278HTG\",\"AwJD8PFqFD3Y8hy2T\",\"mzhrQ8vWtqTf9azwo\",\"vAbK8sCfKyFC78HYg\",\"Q9afpRu3u8zuWuzLQ\",\"HqmxnQJM66Y57twhn\",\"GEDsDpNX4QMhZAxtJ\",\"wCXRmtaqTLTT5S3ce\",\"6HgMANhu6WiGyXSGN\",\"rGA5sQC5vSaqCmh6E\",\"7K4emAv8FE9xcDNQy\",\"zyFPLXxJzpku4xZYt\",\"CWnZYFNAzm5K8NiiC\",\"RkyCNqfDeSrR8TLmA\",\"kQ86mSGBiBQQvXzQR\",\"GWjEcCYSqDNZS9rQN\",\"DDD5tzD2m8bcntBB8\",\"qD2LrwaDrSdiybLKY\",\"QPEejhBicc4eB66xF\",\"DPi9QGLctq2y76KuE\",\"NP2RxM3eBd3drnDwP\",\"7h6RQYLtSmZdwkrpP\",\"wNuGsAdwdPtRn9JXz\",\"Y2Y5CRMMPmdsKCSwL\",\"Kh3Pc2ZRusurLaMyP\",\"skbp3mauBhvs2Pjee\",\"PBnvAuiKXwjqjKG33\",\"AgY6WsWyt69H9sC8C\",\"Cybtjz3cF7RgoiqrN\",\"a2b7nwxfzCiM83eci\",\"QRv96jmNaYsWkxQEG\",\"iY25XNrJX2giBLvnd\",\"u72ipcjbNDSkWX8Gw\",\"rrSC943cCKNG48sH4\",\"capjEKEghfZ2tj5pC\",\"nC4sPB69yYuTSks9T\",\"RCzpsCinz5SQnBAta\",\"AYZrBpxmaHxq9th3T\",\"omTzG6P3YKpb64LmZ\",\"wRttWTM59y8m5mx7x\",\"iQ98ogih3WYqf6gZx\",\"j7ebNFtte6fSkMWjj\",\"kNrnnMxhFZztMTBAX\",\"7HAL7H6NJmc4NC8Q5\",\"XQLWqRFMeR3dqqMmc\",\"xjyixzXzqqqTfJARd\",\"k2Eo3wyfZZ6KxvKhN\",\"NRCH4eiebS7LBjSCa\",\"6akGaXW83HnSC5PSy\",\"sKfrD9gjCDHuqLzSk\",\"RnY25enEBE8T9P5GS\",\"4hzd4qde3g9We8N4E\",\"RGMbFMZXJr7DhcAJy\",\"AaKWw8amcFYLrEpNz\",\"oyKcm3zqdy8Ko5P5d\",\"8teSHp77vHhhvJWiS\",\"iBsN2jda8GGPgqj3u\",\"PPhq9DcoWd4auHM4s\",\"qaPjAANdnxFnWfj5d\",\"g9FyJ8yeT9ic97Qp2\",\"R8HfPE3kgrwButJ8L\",\"j3xjkcQ7o4ERPBjwh\",\"HuNF3xTBzmatyGSTm\",\"csxCzWqzHW8JsrzQq\",\"J3upzLHuEwXH7Z2hx\",\"n4kkJWa3ffPQK3qhm\",\"FuYTQcDNjct58rqPa\",\"jJK4tebLdj4SsggZz\",\"dDFzTqzPhpkeTcG2b\",\"iF4tdvn5sA9CM4T6T\",\"DAhoDmrLmkoRsJhRx\",\"s4YHxEDBTTq5EBMRs\",\"YRAzEBJoLvSaiPtYx\",\"dYPkStFnLvAMsHSzZ\",\"nJXgbSQozcoE8Wn4N\",\"CQhaiZqQcP87YteSG\",\"EfxwqhYdapX3dMQC2\",\"MnrmRMy2PP3Mk4sSY\",\"mEvwXi4fm6Hm49GBk\",\"Ds7L5bksw2QRHjrKL\",\"vgT3ehH2o2KC94NsY\",\"PHYPYQ8bXGY6nYKwN\",\"5XiuAqicKD4hBdu63\",\"9FCeFzjPA4jrQ7oHW\",\"7D76ZPLjgjZideoy9\",\"RSTdK2S8CecymSS6h\",\"PnzR8TWfcT5QHrek8\",\"wypdvuJQZB2TFyb2g\",\"HcdukZiuzgvoHjjz3\",\"5HTSi5wQNAdLm57LB\",\"igLmeTgCMEPu7fQTd\",\"uN5t57RETi5y2z5W8\",\"DpnYcMphntjsQ96qg\",\"5hQnRWiKkhgKJXNMP\",\"qAby4AWXmTNeusvg3\",\"QTZTmQEmkPv5sxQL4\",\"Krto2sGMfGWBLcL7n\",\"xNCLJDm9Bni6gByMz\",\"XanFBoer6Lw9KXvuE\",\"CkcqajsaNu4nso9oY\",\"5S9nX4rKsnCcnv4Cz\",\"MXGuntvz3byrP6WJc\",\"AFfw7cGg83uYk2Miy\",\"buX4mCQhtXCfBjeno\",\"DDFvEXnueWTSBn7EX\",\"Wp5CZXqvjwTpt5SKN\",\"MyyfuAJrdaoBE2xGk\",\"LQxof8pGabGuWP7Gn\",\"pPpmP7xeJzGgK362R\",\"5wCHxMQ5Km2bjqcGZ\",\"ZyrfhDTZHb8LymH5b\",\"fHeYpHLgzDPqcoDh6\",\"PC3pLs36zNzpRDSuE\",\"CN2Jg7GX3c57eXiCp\",\"eFh8z7sMmxkrFWZv9\",\"F7wta4nHmabMr9dfd\",\"eYfPWvZwnJQkHbSTK\",\"srJ34BaybkQh3qRkM\",\"TmM3AN7g3fkh69ycj\",\"T78CHCScDRZjf5Cjy\",\"7KsymxNN9S8ZG5oQe\",\"vCxuabDxEv9YC3Szb\",\"q9FfWNiMDKRiaCJ5j\",\"fe3gsFT3MbZ4azEC9\",\"YwAvPdqD6Xi2qjapZ\",\"yEvXDzXnEPNz6tTCK\",\"XD5nmvKQchKezPXhy\",\"EXbD3ZjgP9oaoFLYw\",\"2MjzJ7yxh3eT3xbng\",\"ghMkPtdFCpM6w8nax\",\"jL4y5fTJAMBjhZmko\",\"YaybbCdfjFQmsfgtp\",\"fW3mQfbTKhp7enxGP\",\"HBuJYgW2eRBJp9FoG\",\"6gHaCTMvjCk5ggBFm\",\"gjiu8kLnHYxe4HoBN\",\"uvLimfW9x3bCp7huQ\",\"4bb7pim4ewTwrMTEA\",\"CHvzhtXnv8HTbPQ56\",\"2QGRoQn2dRq3scu7k\",\"T6iBEE2jp7f7iEF2P\",\"YmQb9Mo4Xcg2vzgbn\",\"sX9GZp3fYyQLrBKMJ\",\"4TmgHkn5vqyHK3sYC\",\"jgyuzt5BpA3ohHG96\",\"RTER5uJdW4khkiNbY\",\"mvJBakQ35CWAnbbEZ\",\"fdyejapW3NWN7utPX\",\"T6Rm8mREPMZSftzrC\",\"jkbavR2ATFJcpmo8M\",\"M2gFMJkocQSY6bsFR\",\"JiSpvq6C7azQEmENc\",\"eHcgvkTGsH7ZziqBo\",\"sbJcFfQjQ59Wfg4Cd\",\"DFpZcskPncmo7fuzR\",\"iYXdNw7tKcgA3QwBX\",\"sHjfbGQGLHE6JR6qu\",\"8PwfYqoDQFThzNtvf\",\"Afnps7TJQuS9sipMb\",\"gKnWjDjwrJh7MK2df\",\"cdXmwjupCXSvJTSNo\",\"Dq24MSpogRmq6L4hX\",\"yXGiiSAR5nBHnH3yr\",\"d9LBRxvADNBB5QJMB\",\"TCvpT4EPb8qNssNB7\",\"x2Cz7S8rCKJqCE3Xe\",\"PTDFuxAzou7W6asWt\",\"B4y8aoyXJtskYPFEL\",\"5QN8R22z43SrwoHDz\",\"dzS6WBTMHyFEag6Fp\",\"7q8oBsCHwn48Ppnrq\",\"uK58g2EXxqxTaB2iA\",\"arWdYjT3J9QKzoPLd\",\"wjc4iejpErBhxWwHo\",\"5nbHH4eApn6So9h2n\",\"a2Kmh6ekWqQQooHiQ\",\"K3RacTvkWHLfzKF8i\",\"rF97GDLqCgynr7BaD\",\"afvP29FhRou2bTaav\",\"suArq5BbSy7gD6xri\",\"PmRyaLmhAF4MMLBtM\",\"Ne8mK9DDHG8TRkoxG\",\"hRfdHT8bWztZuCqzi\",\"mw9464S5dnenqzvpm\",\"tR9grPBLncwacBTzr\",\"fMp8sPsKSECdfgF9j\",\"gbGzZz5Yq5hT357v8\",\"r83jJeskFETo3RLhZ\",\"jWbd7SYDzLPjc9EDh\",\"FR8eeRZd7juwZBDT7\",\"NzbRqGWspQnWMoDrF\",\"4Lwjr34ypKNQNQCar\",\"Wi4H6ayKsNDWWQCG5\",\"4akHBgnDEDj3Rkv5n\",\"5CsHudxuDESxmjTPW\",\"3SgSNoAB3sxaYeT3w\",\"Cnx3Ss6zhhKExXxbC\",\"szQg8dxKNNre3v3Jk\"],\"total\":484,\"quality\":[5,5,4,5,4,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,1,5,4,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,1,5,5,5,4,5,1,5,5]},\"flags\":0},\"summary\":\"Given a list of prices prices and a \\\"supposed\\\" total t, return True if there is a hidden fee added to the total (i.e. the total is greater than the sum of prices), otherwise return False.\\n\\nExamples\\nhashiddenfee([\\\"$2\\\", \\\"$4\\\", \\\"$1\\\", \\\"$8\\\"], \\\"$15\\\") ➞ False\\n\\nhashiddenfee([\\\"$1\\\", \\\"$2\\\", \\\"$3\\\"], \\\"$6\\\") ➞ False\\n\\nhashiddenfee([\\\"$1\\\"], \\\"$4\\\") ➞ True\\n\\nNotes\\nRemember that each p\",\"tags\":[\"arrays\",\"numbers\",\"language_fundamentals\",\"validation\"],\"timestamp\":{\"$date\":1581546791134},\"title\":\"No Hidden Fees\",\"quality\":4.64,\"family\":[{\"_id\":\"scJCohhqLBcJGGbyS\",\"language\":\"cpp\"},{\"_id\":\"LSw9Tgs6yMgQ4JfdX\",\"language\":\"javascript\"},{\"_id\":\"jZJEz73eALFAyx3j9\",\"language\":\"php\"},{\"_id\":\"vsBznidKiKA96gp2J\",\"language\":\"python3\"},{\"_id\":\"wt4aqbMiENQeghTsF\",\"language\":\"ruby\"}]}}"]