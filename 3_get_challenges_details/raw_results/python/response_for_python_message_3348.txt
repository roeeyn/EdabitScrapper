a["{\"msg\":\"result\",\"id\":\"397\",\"result\":{\"_id\":\"H4m227Nz2fXoxYHNg\",\"author\":\"Werdna\",\"authorId\":\"buX4mCQhtXCfBjeno\",\"code\":\"def list_values_types(lst):\\n\\t\",\"difficulty\":0.6896551724137931,\"familyId\":\"7DY4vsxcpRpetk9AK\",\"instructions\":\"Create a function that takes a list `lst` and returns the types of values (data types) in a new list.\\n\\n### Examples\\n```\\nlist_values_types([1, 10]) ➞ [\\\"int\\\", \\\"int\\\"])\\n\\nlist_values_types([[\\\"hello\\\" , 1] , 10]) ➞ [\\\"list\\\", \\\"int\\\"])\\n\\nlist_values_types([\\\"shashwat\\\", 10, 90]) ➞ [\\\"str\\\", \\\"int\\\", \\\"int\\\"])\\n```\\n\\n### Notes\\nCheck the **Resources** tab for help if needed.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(list_values_types([1, 10]), ['int', 'int'])\\nTest.assert_equals(list_values_types([[\\\"hello\\\" , 1]  , 10]), ['list', 'int'])\\nTest.assert_equals(list_values_types([\\\"shashwat\\\", 10, 90]), ['str', 'int', 'int'])\\nTest.assert_equals(list_values_types([[], True]), ['list', 'bool'])\\nTest.assert_equals(list_values_types([False, False, \\\"true\\\"]), ['bool', 'bool', \\\"str\\\"])\\nTest.assert_equals(list_values_types([1, 10]), ['int', 'int'])\\nTest.assert_equals(list_values_types([[], None]), ['list', 'NoneType'])\\nTest.assert_equals(list_values_types([1.23, 10]), ['float', 'int'])\\nTest.assert_equals(list_values_types([{1: 'one', 2: 'two'}, []]), ['dict', 'list'])\\n\\n# Author: zippytyro\",\"language\":\"python3\",\"quality\":4.555555555555555,\"summary\":\"Create a function that takes a list lst and returns the types of values (data types) in a new list.\\n\\nExamples\\nlistvaluestypes([1, 10]) ➞ [\\\"int\\\", \\\"int\\\"])\\n\\nlistvaluestypes([[\\\"hello\\\" , 1] , 10]) ➞ [\\\"list\\\", \\\"int\\\"])\\n\\nlistvaluestypes([\\\"shashwat\\\", 10, 90]) ➞ [\\\"str\\\", \\\"int\\\", \\\"int\\\"])\\n\\nNotes\\nCheck the Resources tab for help if needed.\",\"tags\":[\"higher_order_functions\",\"sorting\",\"arrays\",\"algorithms\",\"loops\"],\"timestamp\":{\"$date\":1613959016212},\"title\":\"Return Types\",\"stats\":{\"completed\":{\"total\":148,\"ratings\":[0,0,0,0,0,0,0,3,0,0,1,0,2,0,1,0,0,0,0,2,0,1,2,0,0,0,0,1,0,0,1,1,3,0,1,0,5,2,0,1,1,0,0,0,0,1,1,0,1,2,1,2,1,0,3,1,2,0,0,0,2,1,1,0,1,0,1,0,2,0,0,0,1,0,1,0,1,1,0,1,0,0,1,0,0,2,0,1,0,1,0,1,0,2,0,2,0,2,0,2,0,0,0,1,0,2,0,1,2,1,0,0,1,1,1,0],\"quality\":[5,5,4,5,5,5,5,5,5,5,1,3,5,5,3,2,5,5,5,5,5,5,5,5,5,5,5],\"rators\":[\"buX4mCQhtXCfBjeno\",\"qD2LrwaDrSdiybLKY\",\"i3qMuXgmgBSq9M6Nk\",\"Yp7uvStL97cC9fKkY\",\"iojEnnY9FsMfYzp6f\",\"QRv96jmNaYsWkxQEG\",\"9ivvGvJGvtQfigQaZ\",\"gJYuGdkXEWWmGRLzu\",\"wRttWTM59y8m5mx7x\",\"9qoWqLcHGiDX429rE\",\"T6iBEE2jp7f7iEF2P\",\"FEYpu9RWysAgW3XnP\",\"srJ34BaybkQh3qRkM\",\"gb9rvGus2Jv7bjZSs\",\"DfHHpvnubuFmeNky9\",\"iS5BrkGLzJyPK7nKt\",\"3cF6NXq3ZEwdkgSjb\",\"zd9FLSzsGz3evKafy\",\"cR3ibTMxLyEdDFCHY\",\"kjvgTyRFyKHv44DcH\",\"AFfw7cGg83uYk2Miy\",\"pPpmP7xeJzGgK362R\",\"PC3pLs36zNzpRDSuE\",\"eYfPWvZwnJQkHbSTK\",\"8JyqsSbN2FJXPr3cw\",\"szQg8dxKNNre3v3Jk\",\"sbJcFfQjQ59Wfg4Cd\",\"XD5nmvKQchKezPXhy\",\"J3upzLHuEwXH7Z2hx\",\"s5M5RvgqR9BhB9JoC\",\"eMuCpJ2spXWkJjWNz\",\"PXAcsKkssS2yLyDv2\",\"viKbxg5fKfAkEtTP7\",\"Zk7zYsonf4TQ6d27R\",\"JS3hNM3XXkxPdg3yk\",\"2QGRoQn2dRq3scu7k\",\"J5T8gZqiZXFuFDTQ7\",\"HBuJYgW2eRBJp9FoG\",\"5HCu9Ydd86QgHDRNP\",\"oBcs8GLX2ZFLXQy8y\",\"YcCLwitFMAEJSnxAW\",\"Ds7L5bksw2QRHjrKL\",\"GC9LB7vyQwSrQXoqt\",\"ghMkPtdFCpM6w8nax\",\"AXcnPX68zdMiLNSmu\",\"N2wnZXkhDH86mgjQ8\",\"yjtdwc2AC4jA2RWtn\",\"gjiu8kLnHYxe4HoBN\",\"DEDniTrstQYGounXT\",\"YRAzEBJoLvSaiPtYx\",\"66a9xX73nmTEuKs9k\",\"i5iePG5GqhJJ8HEoB\",\"fTNQmMvTZhhiGBCMe\",\"fdyejapW3NWN7utPX\",\"XrqNzJ2FRG8HnGiR6\",\"4bb7pim4ewTwrMTEA\",\"zC8WrPp5BC6c2exrW\",\"pwWtbXEjzuvrhEGwt\",\"zMrNuQsBHWMJtaEhM\",\"Q6gEE9dG8ERy2Xu3c\",\"CyzskHGsC6WSmYrLu\",\"tAF9Gf6PiGogbZuWs\",\"DPi9QGLctq2y76KuE\",\"mxX4rH5ELYkdZ2Mbw\",\"YmQb9Mo4Xcg2vzgbn\",\"HYhh24SE73zRFafog\",\"8teSHp77vHhhvJWiS\",\"ZpLEmGnaRkQxf8Hfi\",\"jgyuzt5BpA3ohHG96\",\"aEm3Wvj2rFYRL8Lrb\",\"CHvzhtXnv8HTbPQ56\",\"9Ly8afdtofp8DXzrt\",\"mvJBakQ35CWAnbbEZ\",\"LQxof8pGabGuWP7Gn\",\"6LbPw9yW6HHDfn8B8\",\"j7ebNFtte6fSkMWjj\",\"T6Rm8mREPMZSftzrC\",\"jkbavR2ATFJcpmo8M\",\"JiSpvq6C7azQEmENc\",\"DTyNcDkiScCjgJt28\",\"AasGs8AeX9Lcb9xJn\",\"2MjzJ7yxh3eT3xbng\",\"NYyhWY7soeTZ6ymd5\",\"9pzFiFK3ANLjQfnr2\",\"eHcgvkTGsH7ZziqBo\",\"HqmxnQJM66Y57twhn\",\"Cg3LKtEAJpsrdWroG\",\"sHjfbGQGLHE6JR6qu\",\"sDRY37TfoncsA2FSR\",\"Afnps7TJQuS9sipMb\",\"pQwhNKiCne4gEZgcn\",\"XbxHXmh5ZmRN2gw3K\",\"54BFnXEjY3FuRNYpN\",\"C9LKGu2g5hSijvDzA\",\"MKT7khMBGXzA22ykf\",\"FGEeCTorXbX3WvjFW\",\"Dq24MSpogRmq6L4hX\",\"gKnWjDjwrJh7MK2df\",\"a2Kmh6ekWqQQooHiQ\",\"qAby4AWXmTNeusvg3\",\"d8qtzoLB264iP8tdY\",\"Fk9kLwoG4Brf4KsKf\",\"SkQcb2sRn4as5KpnN\",\"Jqk2uJZZxEv5wZFze\",\"dYPkStFnLvAMsHSzZ\",\"d9LBRxvADNBB5QJMB\",\"BdnE4RS5puoxo92mA\",\"cdXmwjupCXSvJTSNo\",\"539z79PdEA96pmrZ5\",\"qaPjAANdnxFnWfj5d\",\"Hg3no4KKLHSiMrKdP\",\"TCvpT4EPb8qNssNB7\",\"dzS6WBTMHyFEag6Fp\",\"rhS8qXRjZcpDXkwnE\",\"FiaTpm7ehfDv43wSG\",\"5QN8R22z43SrwoHDz\",\"B4y8aoyXJtskYPFEL\",\"x2Cz7S8rCKJqCE3Xe\",\"wjc4iejpErBhxWwHo\",\"yAouD3PxzED8a4gap\",\"afvP29FhRou2bTaav\",\"5nbHH4eApn6So9h2n\",\"PTDFuxAzou7W6asWt\",\"mw9464S5dnenqzvpm\",\"rF97GDLqCgynr7BaD\",\"vAbK8sCfKyFC78HYg\",\"FT2wBacm3JxrYmZDW\",\"suArq5BbSy7gD6xri\",\"fMp8sPsKSECdfgF9j\",\"tR9grPBLncwacBTzr\",\"Ne8mK9DDHG8TRkoxG\",\"DhfJpC3Y72teNfiKE\",\"rrSC943cCKNG48sH4\",\"mdRQaGT98ycMt87S2\",\"7q8oBsCHwn48Ppnrq\",\"K6S8HCswXg68EWHmo\",\"7HAL7H6NJmc4NC8Q5\",\"jWbd7SYDzLPjc9EDh\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"QWmvQsrSuQRmEN8ne\",\"language\":\"javascript\"},{\"_id\":\"dktPqqgwRuq3eeCPX\",\"language\":\"php\"},{\"_id\":\"H4m227Nz2fXoxYHNg\",\"language\":\"python3\"},{\"_id\":\"8amGr4CEBtsJbyTqm\",\"language\":\"ruby\"}]}}"]