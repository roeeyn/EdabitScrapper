a["{\"msg\":\"result\",\"id\":\"1726\",\"result\":{\"_id\":\"JeuzbpbwnbNx5oszm\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"def track_robot(steps):\\n\\t\",\"difficulty\":2.2083333333333335,\"familyId\":\"gE68KSiCR2WXgN4dc\",\"instructions\":\"A robot moves around a 2D grid. At the start, it is at `[0, 0]`, facing east. It is controlled by a sequence of instructions:\\n- `.` means take one step forwards in the current direction.\\n- `<` means turn 90 degrees anticlockwise.\\n- `>` means turn 90 degrees clockwise.\\n\\nYour job is to process the instructions and return the final position of the robot.\\n\\n### Example\\nFor example, if the robot is given the sequence of instructions `..<.<.`, then:\\n\\n- Step 1: `.` It still faces east, and is at `[1, 0]`.\\n- Step 2: `.` It still faces east, and is at `[2, 0]`.\\n- Step 3: `<` It now faces north, and is still at  `[2, 0]`.\\n- Step 4: `.` It still faces north, and is at `[2, 1]`.\\n- Step 5: `<` It now faces west, and is still at `[2, 1]`.\\n- Step 6: `.` It still faces west, and is now at `[1, 1]`.\\n\\nSo, `track_robot(\\\"..<.<.\\\")` returns `[1, 1]`.\\n\\n### Notes\\n- The instruction strings will only contain the three valid characters `.`, `<` or `>`.\\n- You will always be passed a string (but the string might be empty).\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(track_robot(\\\"..<.<.\\\"), [ 1, 1 ])\\nTest.assert_equals(track_robot(\\\"<>>>><><<<><>>>><><<<><>>><>\\\"), [ 0, 0 ])\\nTest.assert_equals(track_robot(\\\".<..<...<....<.....<......\\\"), [ 3, 4 ])\\nTest.assert_equals(track_robot(\\\">>..\\\"), [ -2, 0 ])\\nTest.assert_equals(track_robot(\\\"..<<..>>..<<..>>..\\\"), [ 2, 0 ])\",\"language\":\"python3\",\"quality\":5,\"summary\":\"A robot moves around a 2D grid. At the start, it is at [0, 0], facing east. It is controlled by a sequence of instructions:\\n. means take one step forwards in the current direction.\\n`` means turn 90 degrees clockwise.\\n\\nYour job is to process the instructions and return the final position of the robot.\\n\\nExample\\nFor example, if the robot is given the sequence of\",\"tags\":[\"loops\",\"logic\",\"algorithms\"],\"timestamp\":{\"$date\":1604911434200},\"title\":\"Track the Robot (Part 3)\",\"stats\":{\"completed\":{\"total\":49,\"ratings\":[3,3,3,3,3,2,4,0,3,2,1,2,1,3,1,3,2,3,3,3,3,2,2,3,3,3,2,2,3,1,2,1,2,2,3,3,2,2,2,0,3,2,2,2,0,2,3,1],\"quality\":[5,5,5,5],\"rators\":[\"aEm3Wvj2rFYRL8Lrb\",\"8PwfYqoDQFThzNtvf\",\"aaotFPYKJpeDdBmK5\",\"mDWNyaaQ9hvPCRzSd\",\"HF28xZKSLM9wEuqNg\",\"8sNv5PTHa7XQ8bNqR\",\"s5M5RvgqR9BhB9JoC\",\"p7js9trz2zk2RorCR\",\"J3upzLHuEwXH7Z2hx\",\"gb9rvGus2Jv7bjZSs\",\"xn7uGNKeAwPEkP9oA\",\"8JyqsSbN2FJXPr3cw\",\"Wv2vJnEj8ywNmARoF\",\"qZQxPQ2kaNKAMesHT\",\"Yp7uvStL97cC9fKkY\",\"p8qqFdJ3FSk5x9z3G\",\"W5d8SJGpWNwvgCztM\",\"3ECpdeExhBmkYXtba\",\"iS5BrkGLzJyPK7nKt\",\"zYMAWB6trtkzfon8y\",\"Wnom3NDu29r6odkah\",\"NaPpyhnXZ2XLtug83\",\"DCY34cfeCDFan6BgQ\",\"suaEBYJRrEGzyWnku\",\"fseoLFhBDfanWfCia\",\"okwcd3SkNDyoFTFf4\",\"Jqk2uJZZxEv5wZFze\",\"gXTAie79kiw28tx5u\",\"X38G6ixh6YGvLhnmi\",\"RTDx9axf52kxhFjwZ\",\"iojEnnY9FsMfYzp6f\",\"Wpn95NqWxncQrwNgz\",\"gJYuGdkXEWWmGRLzu\",\"yjtdwc2AC4jA2RWtn\",\"M6fxKEh6am7YajPiT\",\"AasGs8AeX9Lcb9xJn\",\"oBcs8GLX2ZFLXQy8y\",\"cR3ibTMxLyEdDFCHY\",\"HqmxnQJM66Y57twhn\",\"DPi9QGLctq2y76KuE\",\"uw8E83imJYpQiiPpP\",\"nkH3HfJXLMNcBMM79\",\"v39g8eNsCQLNfXQwg\",\"gKnWjDjwrJh7MK2df\",\"yod5YhKtPqw2GfG9B\",\"2PufnQcsHsfymufX3\",\"3CfaqLTeA9Wcpx9cJ\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"B8fmfvRkaPyzHzZtS\",\"language\":\"cpp\"},{\"_id\":\"6S2aJYTjAka94muDT\",\"language\":\"csharp\"},{\"_id\":\"WRB33HsHBFDEfx4EA\",\"language\":\"javascript\"},{\"_id\":\"JeuzbpbwnbNx5oszm\",\"language\":\"python3\"},{\"_id\":\"myDW4khzN8qYZqsCm\",\"language\":\"ruby\"},{\"_id\":\"Nq5v7nX79TRxXjXJN\",\"language\":\"swift\"}]}}"]