a["{\"msg\":\"result\",\"id\":\"2347\",\"result\":{\"_id\":\"WY7r2XtarpupNDWE8\",\"author\":\"MASON KELLER\",\"authorId\":\"iMHrN3Wiefh9Ame38\",\"code\":\"def tower_of_hanoi(disks, move):\\n\\t\",\"difficulty\":3.8125,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"d5KxFt4pq4hh5inDi\",\"instructions\":\"Create a function (given the number of discs and the move number) that returns as a tuple the towers with their correct disks in order.\\n\\n### What is Tower of Hanoi?\\nTower of Hanoi is a problem in occursion, where you have to move a certain amount of discs from one peg (or tower) to the final peg. The discs are stacked on pegs with each disc being smaller than the last, as to create a pyramid like shape.\\n\\n![Alternative Text](https://edabit-challenges.s3.amazonaws.com/tower.png)\\n\\nTo illustrate, lets take `tower_of_hanoi(4, 3)`. The first move you would make would be to move the 1 disc from the 1st tower to the 3rd tower. So move one would result in:\\n\\n```\\n([4, 3, 2], [], [1])\\n```\\n\\nThen you would move the 2 disk from the 1st tower to the 2nd peg. Resulting in:\\n\\n```\\n([4, 3], [2], [1])\\n```\\n\\nThen the final move would be to move the 1 disk onto the 2nd peg:\\n\\n```\\n([4, 3], [2, 1], [])\\n```\\n\\nThen that would be your answer!\\n\\n### Examples\\n```\\ntower_of_hanoi(1, 1) ➞ ([], [], [1])\\n\\ntower_of_hanoi(4, 3) ➞ ([4, 3], [], [2, 1])\\n\\ntower_of_hanoi(7, 12) ➞ ([7, 6, 5, 2, 1], [4, 3], [])\\n```\\n\\n### Notes\\nThe universal solution for the Tower of Hanoi differs if the number of discs is even or odd (check the **Resources** tab for help).\",\"isHidden\":false,\"lab\":\"Test.assert_equals(tower_of_hanoi(1, 1), ([], [], [1]), \\\"Should work for 1 tower\\\")\\nTest.assert_equals(tower_of_hanoi(12, 1), ([12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2], [1], []))\\nTest.assert_equals(tower_of_hanoi(4, 3), ([4, 3], [], [2, 1]))\\nTest.assert_equals(tower_of_hanoi(5, 3), ([5, 4, 3], [2, 1], []))\\nTest.assert_equals(tower_of_hanoi(7, 12), ([7, 6, 5, 2, 1], [4, 3], []))\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[4,4,4,4,4,3,5,5,3,5,2,2,4,5,5,2],\"rators\":[\"iMHrN3Wiefh9Ame38\",\"aCNWav8S8Try9RkC6\",\"tAF9Gf6PiGogbZuWs\",\"aEm3Wvj2rFYRL8Lrb\",\"8PwfYqoDQFThzNtvf\",\"NfjRbDz5psWSrE836\",\"4fhjJBvLBWh6QeSih\",\"mDWNyaaQ9hvPCRzSd\",\"s5M5RvgqR9BhB9JoC\",\"iS5BrkGLzJyPK7nKt\",\"yjtdwc2AC4jA2RWtn\"],\"total\":14,\"quality\":[]},\"flags\":0},\"summary\":\"Create a function (given the number of discs and the move number) that returns as a tuple the towers with their correct disks in order.\\n\\nWhat is Tower of Hanoi?\\nTower of Hanoi is a problem in occursion, where you have to move a certain amount of discs from one peg (or tower) to the final peg. The discs are stacked on pegs with each disc being smaller than the\",\"tags\":[\"algebra\",\"recursion\"],\"timestamp\":{\"$date\":1580836542619},\"title\":\"Tower of Hanoi Moves\",\"quality\":0,\"family\":[{\"_id\":\"WY7r2XtarpupNDWE8\",\"language\":\"python3\"}]}}"]