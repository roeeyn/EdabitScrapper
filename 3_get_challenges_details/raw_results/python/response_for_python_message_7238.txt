a["{\"msg\":\"result\",\"id\":\"2325\",\"result\":{\"_id\":\"vSo5XWNqKiBuN5zGr\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"def divide(x, y):\\n\\t# Your recursive solution here.\\n\\treturn divide(x, y)\",\"difficulty\":3.7096774193548385,\"familyId\":\"MEamRggQ4SNxoLSpE\",\"instructions\":\"Create a function that returns the **integral** part from the result of a division between two numbers. This process of division can be achieved via **repetitive subtraction**, thus, it can be done **recursively**.\\n\\n### Examples\\n```\\ndivide(10, 2) ➞ 5\\n\\ndivide(-51, -4) ➞ 12\\n\\ndivide(3, 9) ➞ 0\\n\\ndivide(-21, 5) ➞ -4\\n\\ndivide(1024, 7) ➞ 146\\n\\ndivide(273, -6) ➞ -45\\n```\\n\\n### Notes\\n- There will be no **zero-values** for the *divisor*.\\n- You're expected to solve this challenge using a **recursive approach**.\\n- You can read on more topics about recursion (see **Resources** tab) if you aren't familiar with it yet or haven't fully understood the concept behind it before taking up this challenge.\",\"isHidden\":false,\"lab\":\"from inspect import getsource\\nfrom re import findall, MULTILINE\\n\\ndef check_recursive(fn):\\n  try:\\n    src, n = getsource(fn), fn.__name__\\n    if n == '<lambda>': n = src.split('=')[0].strip()\\n    return len(findall(n, src, flags=MULTILINE)) > 1\\n  except OSError: return True\\n\\nfor v in [True, False]:\\n  if v: Test.assert_equals(check_recursive(divide), v)\\n  else: Test.assert_not_equals(check_recursive(divide), v, 'Recursion is required!')\\n\\nnum_vector = [[10, 2], [-51, -4], [3, 9], [-21, 5], [1024, 7], [273, -6], [0, 4]]\\nres_vector = [5, 12, 0, -4, 146, -45, 0]\\n\\nfor i, x in enumerate(num_vector):\\n  Test.assert_equals(divide(*x), res_vector[i])\",\"language\":\"python3\",\"summary\":\"Create a function that returns the integral part from the result of a division between two numbers. This process of division can be achieved via repetitive subtraction, thus, it can be done recursively.\\n\\nExamples\\ndivide(10, 2) ➞ 5\\n\\ndivide(-51, -4) ➞ 12\\n\\ndivide(3, 9) ➞ 0\\n\\ndivide(-21, 5) ➞ -4\\n\\ndivide(1024, 7) ➞ 146\\n\\ndivide(273, -6) ➞ -45\\n\\nNotes\\nThere will be no\",\"tags\":[\"recursion\",\"numbers\"],\"timestamp\":{\"$date\":1595361164363},\"title\":\"Recursion: Integer Division\",\"stats\":{\"completed\":{\"total\":29,\"ratings\":[5,5,5,5,5,5,4,1,5,1,5,3,5,5,5,5,3,4,1,5,5,4,3,1,5,0,3,5,5,2,0],\"rators\":[\"a777e8chPvJkY3tKa\",\"8PwfYqoDQFThzNtvf\",\"aEm3Wvj2rFYRL8Lrb\",\"vTfyrr4pGddp8rbXc\",\"bJxaKHJqR82EWw8Su\",\"9XNbjEKxsC89aX6ae\",\"Pe8vWpDHRuH9nSGKW\",\"bytuztnmvXdvKAHN9\",\"xn7uGNKeAwPEkP9oA\",\"mDWNyaaQ9hvPCRzSd\",\"5dHucvf2qBYyKim7X\",\"s5M5RvgqR9BhB9JoC\",\"DPi9QGLctq2y76KuE\",\"yr822PZmmiDDenxpB\",\"5rX3qPFdvRQ9G7xZQ\",\"iS5BrkGLzJyPK7nKt\",\"XNmN6ztj36a7eChbD\",\"eHcgvkTGsH7ZziqBo\",\"8sNv5PTHa7XQ8bNqR\",\"QRv96jmNaYsWkxQEG\",\"yjtdwc2AC4jA2RWtn\",\"XHShZ3WMPgGEA2vkR\",\"gJYuGdkXEWWmGRLzu\",\"tAF9Gf6PiGogbZuWs\",\"rhS8qXRjZcpDXkwnE\",\"T6iBEE2jp7f7iEF2P\"],\"quality\":[]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":0,\"family\":[{\"_id\":\"LgtPsasXbKQ9K46FN\",\"language\":\"javascript\"},{\"_id\":\"vSo5XWNqKiBuN5zGr\",\"language\":\"python3\"}]}}"]