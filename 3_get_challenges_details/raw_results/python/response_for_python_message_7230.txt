a["{\"msg\":\"result\",\"id\":\"2321\",\"result\":{\"_id\":\"nimEZ6nfJ2vqzYBTL\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"def multiply(x, y):\\n\\t# your recursive solution here\\n\\t\",\"difficulty\":3.7027027027027026,\"editorId\":\"a777e8chPvJkY3tKa\",\"familyId\":\"ZitTsoCMLbfBHbS64\",\"instructions\":\"Create a function that returns the **product** of two integers. This process of multiplication can be achieved via repetitive addition, thus, the process can be done **recursively**.\\n\\n### Examples\\n```\\nmultiply(10, 2) ➞ 20\\n\\nmultiply(-51, -4) ➞ 204\\n\\nmultiply(3, 9) ➞ 27\\n\\nmultiply(-21, 5) ➞ -105\\n\\nmultiply(1024, 7) ➞ 7168\\n\\nmultiply(273, -6) ➞ -1638\\n```\\n\\n### Notes\\n- You're expected to solve this challenge using a **recursive approach**.\\n- You can read on more topics about recursion (see **Resources** tab) if you aren't familiar with it yet or haven't fully understood the concept behind it before taking up this challenge.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"from inspect import getsource\\nfrom re import findall, MULTILINE\\n\\ndef check_recursive(fn):\\n  try:\\n    src, n = getsource(fn), fn.__name__\\n    if n == '<lambda>': n = src.split('=')[0].strip()\\n    return len(findall(n, src, flags=MULTILINE)) > 1\\n  except OSError: return True\\n\\nfor v in [True, False]:\\n  Test.assert_equals(check_recursive(multiply), v) if v else \\\\\\n  Test.assert_not_equals(check_recursive(multiply), v, 'Recursion is required!')\\n\\nnum_vector = [[10, 2], [-51, -4], [3, 9], [-21, 5], [1024, 7], [273, -6], [0, 4]]\\nres_vector = [20, 204, 27, -105, 7168, -1638, 0]\\n\\nfor i, x in enumerate(num_vector):\\n  Test.assert_equals(multiply(*x), res_vector[i])\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[5,5,5,5,5,5,1,5,5,2,5,4,4,5,5,5,4,2,4,5,5,5,4,5,3,5,5,5,1,1,4,4,0,0,2,2,0],\"rators\":[\"a777e8chPvJkY3tKa\",\"aEm3Wvj2rFYRL8Lrb\",\"8PwfYqoDQFThzNtvf\",\"vTfyrr4pGddp8rbXc\",\"bJxaKHJqR82EWw8Su\",\"eoepTq5ES5tfgY9XT\",\"gGGbkS9jjjskGEhxX\",\"s5M5RvgqR9BhB9JoC\",\"tAF9Gf6PiGogbZuWs\",\"oZiGwL535nJ5ZMJr7\",\"mDWNyaaQ9hvPCRzSd\",\"S6Zd8mPuvhuh3MFRt\",\"d8qtzoLB264iP8tdY\",\"DPi9QGLctq2y76KuE\",\"XNmN6ztj36a7eChbD\",\"iS5BrkGLzJyPK7nKt\",\"5dHucvf2qBYyKim7X\",\"CZeLyDD2BQL3jrzzj\",\"i5vBMfK6ciHrsREgE\",\"eHcgvkTGsH7ZziqBo\",\"QRv96jmNaYsWkxQEG\",\"iojEnnY9FsMfYzp6f\",\"wZ22E8EXW4qasgru2\",\"yjtdwc2AC4jA2RWtn\",\"8sNv5PTHa7XQ8bNqR\",\"buX4mCQhtXCfBjeno\",\"gJYuGdkXEWWmGRLzu\",\"T6iBEE2jp7f7iEF2P\",\"gKnWjDjwrJh7MK2df\",\"rhS8qXRjZcpDXkwnE\",\"K3RacTvkWHLfzKF8i\",\"T2vhHPhRR96hRizq8\"],\"total\":35,\"quality\":[]},\"flags\":0},\"summary\":\"Create a function that returns the product of two integers. This process of multiplication can be achieved via repetitive addition, thus, the process can be done recursively.\\n\\nExamples\\nmultiply(10, 2) ➞ 20\\n\\nmultiply(-51, -4) ➞ 204\\n\\nmultiply(3, 9) ➞ 27\\n\\nmultiply(-21, 5) ➞ -105\\n\\nmultiply(1024, 7) ➞ 7168\\n\\nmultiply(273, -6) ➞ -1638\\n\\nNotes\\nYou're expected to solve\",\"tags\":[\"recursion\",\"math\"],\"timestamp\":{\"$date\":1595420152636},\"title\":\"Recursion: Multiplication by Addition\",\"quality\":0,\"family\":[{\"_id\":\"DeZSpmYFRDzqsP7Qi\",\"language\":\"java\"},{\"_id\":\"jGmeGgnAyPCZKrhFE\",\"language\":\"javascript\"},{\"_id\":\"nimEZ6nfJ2vqzYBTL\",\"language\":\"python3\"}]}}"]