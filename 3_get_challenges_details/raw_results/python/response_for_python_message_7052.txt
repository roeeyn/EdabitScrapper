a["{\"msg\":\"result\",\"id\":\"2232\",\"result\":{\"_id\":\"FWh2fGH7aRWALMf3o\",\"author\":\"Donnamae\",\"authorId\":\"yZvzB3qFb8pkHy4dg\",\"code\":\"def cleave(string, lst):\\n\\t\",\"difficulty\":3.466666666666667,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"STvRTZX5WRZua4DAv\",\"instructions\":\"Create a function that takes a string (without spaces) and a word list, cleaves the string into words based on the list, and returns the correctly spaced version of the string (a sentence). If a section of the string is encountered that can't be found on the word list, return `\\\"Cleaving stalled: Word not found\\\"`.\\n\\n### Examples\\n```\\nword_list = [\\\"about\\\", \\\"be\\\", \\\"hell\\\", \\\"if\\\", \\\"is\\\", \\\"it\\\", \\\"me\\\", \\\"other\\\", \\\"outer\\\", \\\"people\\\", \\\"the\\\", \\\"to\\\", \\\"up\\\", \\\"where\\\"]\\n\\n\\ncleave(\\\"ifitistobeitisuptome\\\", word_list) ➞ \\\"if it is to be it is up to me\\\"\\n\\ncleave(\\\"hellisotherpeople\\\", word_list) ➞ \\\"hell is other people\\\"\\n\\ncleave(\\\"hellisotterpeople\\\", word_list) ➞ \\\"Cleaving stalled: Word not found\\\"\\n```\\n\\n### Notes\\nWords on the `word_list` can appear more than once in the string. The `word_list` is a reference guide, kind of like a dictionary that lists which words are allowed.\",\"lab\":\"word_list = ['a', 'after', 'all', 'an', 'and', 'are', 'as', 'by', 'continued', 'deadlines', 'doubly', 'fish', 'for', 'go', 'happen', 'happened', 'i', 'illusion', 'is', 'long', 'love', 'lunchtime', 'make', 'moment', 'noise', 'nothing', 'of', 'or', 'people', 'problem', 'second', 'so', 'summarize', 'summary', 'thanks', 'the', 'then', 'they', 'time', 'to', 'whooshing']\\ns1='solongandthanksforallthefish'\\ns2= 'solongandthanksforalllthefish'\\ns3= 'tosummarizethesummaryofthesummarypeopleareaproblem'\\ns4= 'timeisanillusionlunchtimedoublyso'\\ns5= 'ilovedeadlinesilovethewhooshingnoisetheymakeastheygoby'\\ns6= 'ilovedeadlinesilovethewheezingnoisetheymakeastheygoby'\\ns7= 'foramomentnothinghappenedthenafterasecondorsonothingcontinuedtohappen'\\n\\nTest.assert_equals(cleave(s1, word_list), 'so long and thanks for all the fish')\\nTest.assert_equals(cleave(s2, word_list), \\\"Cleaving stalled: Word not found\\\")\\nTest.assert_equals(cleave(s3, word_list), 'to summarize the summary of the summary people are a problem')\\nTest.assert_equals(cleave(s4, word_list), 'time is an illusion lunchtime doubly so')\\nTest.assert_equals(cleave(s5, word_list), 'i love deadlines i love the whooshing noise they make as they go by')\\nTest.assert_equals(cleave(s6, word_list), \\\"Cleaving stalled: Word not found\\\")\\nTest.assert_equals(cleave(s7, word_list), 'for a moment nothing happened then after a second or so nothing continued to happen')\\n\\n#Quotes credit: Douglas Adams\",\"language\":\"python3\",\"summary\":\"Create a function that takes a string (without spaces) and a word list, cleaves the string into words based on the list, and returns the correctly spaced version of the string (a sentence). If a section of the string is encountered that can't be found on the word list, return \\\"Cleaving stalled: Word not found\\\".\\n\\nExamples\\nword_list = [\\\"about\\\", \\\"be\\\", \\\"hell\\\", \\\"if\",\"tags\":[\"strings\",\"validation\"],\"timestamp\":{\"$date\":1559578785402},\"title\":\"String Cleaver\",\"stats\":{\"completed\":{\"total\":59,\"ratings\":[3,3,3,3,3,3,3,3,3,3,2,3,3,4,3,5,5,0,2,5,0,4,5,5,5,5,4,3,4,4,0,5,5,5,5,5,5,5,5,0,5,5,5,3,4,2,5,5,4,1,4,3,2,5,5,0,5,2,2,0],\"rators\":[\"AYaEkTWLMmfzpwejr\",\"tAF9Gf6PiGogbZuWs\",\"8JyqsSbN2FJXPr3cw\",\"gb9rvGus2Jv7bjZSs\",\"QKYi6pYeaYFovNHX4\",\"ZgdejAm3u2Q6tFpfg\",\"BFNm9gacwba9KyLFW\",\"FHSJnAYTbcsKFgeQa\",\"6W2GSzrYjMD9ANBFY\",\"duygm2Ffue3bjb3MS\",\"dNLyEFN867SPrTZKm\",\"8ZSLfiJZfDgeh745T\",\"pYgorHTLHPChinFCm\",\"pdZMdmGowou47HESt\",\"RErqK2yM94wYyD2hk\",\"ToTyoZx9QFGFn2BKE\",\"NRTW97oaiRB6WiEPc\",\"5Qvy7fNM2YEQ6PtbY\",\"aCNWav8S8Try9RkC6\",\"dLMwA7bAx3ArJoqC5\",\"6gsMupsCZJQgiwzJi\",\"XAv3Wmo34EtayqFJT\",\"XvPGDkBQqCMosrFY7\",\"fAoLuqbGvHn4w2PHf\",\"qJZsi5rhRnWA38FbA\",\"BBP9BE5mKHRzaRpJr\",\"HqmxnQJM66Y57twhn\",\"jDgJ2fdFS76TSorNc\",\"8PwfYqoDQFThzNtvf\",\"fMR9RcfgPJWiLgx7k\",\"de3DhFz9dW8vdPanZ\",\"3GhZpJLhhrm6AR3aM\",\"n5xGypteaCL2bRGWM\",\"azHSATBuuQ5wz9bvB\",\"kDq2TnPdy7hGKdAD5\",\"aEm3Wvj2rFYRL8Lrb\",\"DwetpbChQM4r6Gwah\",\"uwxKsMjTn2GDEcF76\",\"vTfyrr4pGddp8rbXc\",\"W5TajitmCyxz87zAC\",\"RHZcTWs7asoBGydH4\",\"4xwButZn34q92d9Yn\",\"2dAt4J5XPniWBuzaB\",\"X6G8jvpoas5oyWBD4\",\"xn7uGNKeAwPEkP9oA\",\"TDbKH2DTgKo63hAiu\",\"s5M5RvgqR9BhB9JoC\",\"fSgCtTbtfBQBmGM2m\",\"iS5BrkGLzJyPK7nKt\",\"fSQSHjW3e72MrWxbD\",\"mDWNyaaQ9hvPCRzSd\",\"eHcgvkTGsH7ZziqBo\",\"J3upzLHuEwXH7Z2hx\",\"yjtdwc2AC4jA2RWtn\",\"8sNv5PTHa7XQ8bNqR\",\"T6iBEE2jp7f7iEF2P\"],\"quality\":[4,5,5,3,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"isHidden\":false,\"quality\":4.5,\"family\":[{\"_id\":\"3QqJ3HLpeuKusdofS\",\"language\":\"cpp\"},{\"_id\":\"i4SSMeuxhnSR2QKtx\",\"language\":\"java\"},{\"_id\":\"y7xoBP9bgHRNTcELK\",\"language\":\"javascript\"},{\"_id\":\"FWh2fGH7aRWALMf3o\",\"language\":\"python3\"},{\"_id\":\"vaRiisYhMmaEndKCs\",\"language\":\"ruby\"}]}}"]