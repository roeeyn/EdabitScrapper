a["{\"msg\":\"result\",\"id\":\"1781\",\"result\":{\"_id\":\"zXACKeaEzLK9XwBwp\",\"author\":\"lllll\",\"authorId\":\"DNACg4rcgZsPtYGZ8\",\"code\":\"def split_bunches(bunches):\\n\\t\",\"difficulty\":2.3636363636363638,\"familyId\":\"JMrQcuAA9rkvK29L9\",\"instructions\":\"You bought a few bunches of fruit over the weekend. Create a function that splits a bunch into singular objects inside a list.\\n\\n### Examples\\n```\\nsplit_bunches([\\n  { \\\"name\\\": \\\"grapes\\\", \\\"quantity\\\": 2 }\\n]) ➞ [\\n  { \\\"name\\\": \\\"grapes\\\", \\\"quantity\\\": 1 },\\n  { \\\"name\\\": \\\"grapes\\\", \\\"quantity\\\": 1 }\\n]\\n\\n\\nsplit_bunches([\\n  { \\\"name\\\": \\\"currants\\\", \\\"quantity\\\": 1 },\\n  { \\\"name\\\": \\\"grapes\\\", \\\"quantity\\\": 2 },\\n  { \\\"name\\\": \\\"bananas\\\", \\\"quantity\\\": 2 }\\n]) ➞ [\\n  { \\\"name\\\": \\\"currants\\\", \\\"quantity\\\": 1},\\n  { \\\"name\\\": \\\"grapes\\\", \\\"quantity\\\": 1 },\\n  { \\\"name\\\": \\\"grapes\\\", \\\"quantity\\\": 1 },\\n  { \\\"name\\\": \\\"bananas\\\", \\\"quantity\\\": 1 },\\n  { \\\"name\\\": \\\"bananas\\\", \\\"quantity\\\": 1 }\\n]\\n```\\n\\n### Notes\\n- The input list will never be empty.\\n- Objects will always have a `name` and `quantity` over `0`.\\n- The returned object should have each fruit in the same order as the original.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(split_bunches([{ \\\"name\\\": 'bananas', \\\"quantity\\\": 1 }]), [{ \\\"name\\\": 'bananas', \\\"quantity\\\": 1 }])\\nTest.assert_equals(split_bunches([{ \\\"name\\\": 'bananas', \\\"quantity\\\": 2 }, { \\\"name\\\": 'grapes', \\\"quantity\\\": 2 }]), [{ \\\"name\\\": 'bananas', \\\"quantity\\\": 1 }, { \\\"name\\\": 'bananas', \\\"quantity\\\": 1 }, { \\\"name\\\": 'grapes', \\\"quantity\\\": 1 }, { \\\"name\\\": 'grapes', \\\"quantity\\\": 1 }])\\nTest.assert_equals(split_bunches([{ \\\"name\\\": 'cherry tomatoes', \\\"quantity\\\": 3}, { \\\"name\\\": 'bananas', \\\"quantity\\\": 1 }, { \\\"name\\\": 'grapes', \\\"quantity\\\": 2 }, { \\\"name\\\": 'cherry tomatoes', \\\"quantity\\\": 3}]), [{ \\\"name\\\": 'cherry tomatoes', \\\"quantity\\\": 1}, { \\\"name\\\": 'cherry tomatoes', \\\"quantity\\\": 1}, { \\\"name\\\": 'cherry tomatoes', \\\"quantity\\\": 1}, { \\\"name\\\": 'bananas', \\\"quantity\\\": 1 }, { \\\"name\\\": 'grapes', \\\"quantity\\\": 1 }, { \\\"name\\\": 'grapes', \\\"quantity\\\": 1 }, { \\\"name\\\": 'cherry tomatoes', \\\"quantity\\\": 1}, { \\\"name\\\": 'cherry tomatoes', \\\"quantity\\\": 1}, { \\\"name\\\": 'cherry tomatoes', \\\"quantity\\\": 1}])\\nTest.assert_equals(split_bunches([{ \\\"name\\\": \\\"currants\\\", \\\"quantity\\\": 1 }, {\\\"name\\\": \\\"grapes\\\", \\\"quantity\\\": 2 }, {\\\"name\\\": \\\"bananas\\\", \\\"quantity\\\": 2 }]), [{\\\"name\\\": \\\"currants\\\", \\\"quantity\\\": 1},{\\\"name\\\": \\\"grapes\\\", \\\"quantity\\\": 1 },{\\\"name\\\": \\\"grapes\\\", \\\"quantity\\\": 1 },{\\\"name\\\": \\\"bananas\\\", \\\"quantity\\\": 1 },{\\\"name\\\": \\\"bananas\\\", \\\"quantity\\\": 1 }])\",\"language\":\"python3\",\"quality\":4.75,\"summary\":\"You bought a few bunches of fruit over the weekend. Create a function that splits a bunch into singular objects inside a list.\\n\\nExamples\\nsplit_bunches([\\n  { \\\"name\\\": \\\"grapes\\\", \\\"quantity\\\": 2 }\\n]) ➞ [\\n  { \\\"name\\\": \\\"grapes\\\", \\\"quantity\\\": 1 },\\n  { \\\"name\\\": \\\"grapes\\\", \\\"quantity\\\": 1 }\\n]\\n\\nsplit_bunches([\\n  { \\\"name\\\": \\\"currants\\\", \\\"quantity\\\": 1 },\\n  { \\\"name\\\": \\\"grapes\\\", \\\"quan\",\"tags\":[\"arrays\",\"objects\",\"loops\"],\"timestamp\":{\"$date\":1602961506571},\"title\":\"Splitting Objects Inside a List\",\"stats\":{\"completed\":{\"total\":99,\"ratings\":[4,4,4,4,4,4,5,3,2,3,1,2,5,3,1,3,5,4,2,1,2,5,2,1,5,4,5,0,4,0,0,0,2,2,3,4,3,1,1,3,0,4,1,0,0,2,3,1,2,2,2,2,3,1,3,0,3,1,5,0,3,1,3,4,3,2,1,3,4,4,2,1,3,2,3,2,2,0,2,2,2,4,0,2,2,3,2,0],\"quality\":[5,5,5,5,5,5,3,5,5,4,5,5],\"rators\":[\"DNACg4rcgZsPtYGZ8\",\"8PwfYqoDQFThzNtvf\",\"mDWNyaaQ9hvPCRzSd\",\"aEm3Wvj2rFYRL8Lrb\",\"tAF9Gf6PiGogbZuWs\",\"s5M5RvgqR9BhB9JoC\",\"C68wbGv7NXkBvQyLm\",\"J23RcmzbdtBbPCTjT\",\"a777e8chPvJkY3tKa\",\"QRv96jmNaYsWkxQEG\",\"xn7uGNKeAwPEkP9oA\",\"7ifh8r4gvyYMhKB94\",\"8nE8QHnFYsHCFebte\",\"4fhjJBvLBWh6QeSih\",\"Ecg4m7srYGgZsb4Ck\",\"h4x2jaMdj5aQZbW5g\",\"fSgCtTbtfBQBmGM2m\",\"8JyqsSbN2FJXPr3cw\",\"C28oXk6hCbo4iZnXf\",\"5dHucvf2qBYyKim7X\",\"dkpp45brwPQsYXoun\",\"iS5BrkGLzJyPK7nKt\",\"qPpQfR5KyDb5Y3EFf\",\"fECdwynR7aZZTmDno\",\"aaotFPYKJpeDdBmK5\",\"xumt4h8jvh7o4xkhr\",\"roHTHRWkWPoCy9eLn\",\"Xk2g4CNFAnYcvxiSr\",\"Wp5CZXqvjwTpt5SKN\",\"XpWiAfpGjsqJvngqM\",\"hRAd998MG8Jzdpxj6\",\"w2HhxvSLmDhaGCAjE\",\"HF28xZKSLM9wEuqNg\",\"yTtSCvGPyYna6JuRC\",\"FTTQzozPEohokZAST\",\"8sNv5PTHa7XQ8bNqR\",\"PXAcsKkssS2yLyDv2\",\"eHcgvkTGsH7ZziqBo\",\"p8qqFdJ3FSk5x9z3G\",\"gb9rvGus2Jv7bjZSs\",\"iojEnnY9FsMfYzp6f\",\"gJYuGdkXEWWmGRLzu\",\"J3upzLHuEwXH7Z2hx\",\"55RQznnuTGpsj3EXd\",\"yjtdwc2AC4jA2RWtn\",\"AasGs8AeX9Lcb9xJn\",\"2PufnQcsHsfymufX3\",\"HqmxnQJM66Y57twhn\",\"n7exeKEp4vQkppRrd\",\"fznzd3qnvtbFkkizz\",\"T6iBEE2jp7f7iEF2P\",\"gKnWjDjwrJh7MK2df\",\"gXTAie79kiw28tx5u\",\"nQRzZKeDKuLRf9chX\",\"oBcs8GLX2ZFLXQy8y\",\"cA6ALDreRTFs8k4MM\",\"oW3fuR7ruJEA2cwHM\",\"HYdcFMMetnDh2TNrq\",\"eMuCpJ2spXWkJjWNz\",\"P7NmFbCJ5offXMRvB\",\"hR7GMiqGap4CzEWSy\",\"dSd7wHgXGQeG5BQ2P\",\"QvEXmSEo3ANp3yPyH\",\"6tqnJeeNKT7Weo8eE\",\"Yp7uvStL97cC9fKkY\",\"2Asob8QsSfXRkvkDq\",\"T2vhHPhRR96hRizq8\",\"wKuNwxCtKvMRw9mnc\",\"BrTDhPJcACL2bsrpJ\",\"d9vyukL4SPP9SAYrJ\",\"sbJcFfQjQ59Wfg4Cd\",\"iqmPb9JuJDgTFeR8Q\",\"5QN8R22z43SrwoHDz\",\"WYcMHM8JKipvPRhjP\",\"E9ttMPTkLkKG6nZrg\",\"WdgbbF86JcnqM8pkX\",\"Si6jT3DnRMXYd27k9\",\"qaR8DnWrTk8Mus5Q2\",\"uGuS9YRXW2nj4p6zf\",\"Nub6XnAgFtegmmWb4\",\"qRfAEHwBqZZwo4tBC\",\"CTNiefcqRj2xcpmTz\",\"Q4xLH22PxZBQevSD5\",\"CTozKCRjnTh6kXfna\",\"dunQXB3XYz46fMcSE\",\"MoJmguQFX7yAAxNBb\",\"TAdq43AomzoByMn6b\",\"7g3vZaQXhLpxrajyg\",\"jWbd7SYDzLPjc9EDh\",\"Dj89Gue6KSiQDdC5E\",\"m7kMANAKbQxHfueLC\",\"yod5YhKtPqw2GfG9B\",\"suArq5BbSy7gD6xri\",\"Nsnt7WJuREHjzZmjE\",\"CHvzhtXnv8HTbPQ56\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"2seaqQz4fvLDCLJz2\",\"language\":\"java\"},{\"_id\":\"FrFkH5BPnqz4pYpqD\",\"language\":\"javascript\"},{\"_id\":\"zXACKeaEzLK9XwBwp\",\"language\":\"python3\"}]}}"]