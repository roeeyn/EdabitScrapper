a["{\"msg\":\"result\",\"id\":\"846\",\"result\":{\"_id\":\"EWgdCtSDmRqJPrzoz\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"def peel_layer_off(lst):\\n\\t\",\"difficulty\":1.4066985645933014,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"ygoHWv9MSAg7mQ35i\",\"instructions\":\"Given a list of lists, return a new list of lists containing every element, **except for the outer elements**.\\n\\n### Examples\\n```\\npeel_layer_off([\\n  [\\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"d\\\"],\\n  [\\\"e\\\", \\\"f\\\", \\\"g\\\", \\\"h\\\"],\\n  [\\\"i\\\", \\\"j\\\", \\\"k\\\", \\\"l\\\"],\\n  [\\\"m\\\", \\\"n\\\", \\\"o\\\", \\\"p\\\"]\\n]) ➞ [\\n  [\\\"f\\\", \\\"g\\\"],\\n  [\\\"j\\\", \\\"k\\\"]\\n]\\n\\npeel_layer_off([\\n  [1, 2, 3, 4, 5],\\n  [6, 7, 8, 9, 10],\\n  [11, 12, 13, 14, 15],\\n  [16, 17, 18, 19, 20],\\n  [21, 22, 23, 24, 25],\\n  [26, 27, 28, 29, 30],\\n  [31, 32, 33, 34, 35]\\n]) ➞ [\\n  [7, 8, 9],\\n  [12, 13, 14],\\n  [17, 18, 19],\\n  [22, 23, 24],\\n  [27, 28, 29]\\n]\\n\\npeel_layer_off([\\n  [True, False, True],\\n  [False, False, True],\\n  [True, True, True]\\n]) ➞ [[False]]\\n\\npeel_layer_off([\\n  [\\\"hello\\\", \\\"world\\\"],\\n  [\\\"hello\\\", \\\"world\\\"]\\n]) ➞ []\\n```\\n\\n### Notes\\n- The 2D grid is always a rectangular/square shape.\\n- Always return some form of nested list, unless there are no elements. In that case, return an empty list.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(peel_layer_off([\\n\\t['a', 'b', 'c', 'd'],\\n\\t['e', 'f', 'g', 'h'],\\n\\t['i', 'j', 'k', 'l'],\\n\\t['m', 'n', 'o', 'p']\\n]), [\\n\\t['f', 'g'],\\n\\t['j', 'k']\\n])\\n\\nTest.assert_equals(peel_layer_off([\\n\\t[1, 2, 3, 4, 5], \\n\\t[6, 7, 8, 9, 10], \\n\\t[11, 12, 13, 14, 15],\\n\\t[16, 17, 18, 19, 20], \\n\\t[21, 22, 23, 24, 25], \\n\\t[26, 27, 28, 29, 30],\\n\\t[31, 32, 33, 34, 35]\\n]), [\\n\\t[7, 8, 9], \\n\\t[12, 13, 14], \\n\\t[17, 18, 19],\\n\\t[22, 23, 24], \\n\\t[27, 28, 29],\\n])\\n\\nTest.assert_equals(peel_layer_off([\\n\\t[True, False, True],\\n\\t[False, False, True],\\n\\t[True, True, True]\\n]), [[False]])\\n\\nTest.assert_equals(peel_layer_off([\\n\\t['hello', 'world'],\\n\\t['hello', 'world']\\n]), [])\\n\\nTest.assert_equals(peel_layer_off([\\n\\t[True, False, True, 1, 2, 3, 4],\\n\\t[False, False, True, 5, 6, 7, 8],\\n\\t[True, True, True, 9, 10, 11, 12]\\n]), [[False, True, 5, 6, 7]])\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,1,1,1,1,0,1,0,1,1,2,2,1,0,1,2,3,2,1,2,1,1,1,2,1,1,1,2,3,2,2,2,1,1,0,1,1,1,2,1,2,2,2,1,2,2,1,2,1,2,0,2,2,0,1,2,1,2,2,0,2,0,5,3,3,2,0,1,0,0,1,2,1,0,2,1,2,2,1,1,0,0,1,1,2,3,1,0,1,2,2,3,2,2,2,1,2,1,2,2,1,1,2,2,2,0,2,2,0,0,3,0,2,2,2,2,1,2,2,2,1,0,0,1,1,0,2,1,0,2,1,2,1,2,2,2,1,2,4,2,2,0,2,3,2,2,2,1,2,2,2,1,2,0,0,2,2,2,2,2,2,2,2,2,2,0,1,2,0,1,2,2,3,2,1,2,1,2,2,2,0,2,1,1,2,2,1,0,1,0,2,1,2,1,0,1,2,1,0,4,1,0,0,1,2],\"rators\":[\"PXAcsKkssS2yLyDv2\",\"tAF9Gf6PiGogbZuWs\",\"5taT2WDkibvXLHYyo\",\"byTakJsiBtnT56Zby\",\"ZgWwEdWxjy83WpPQX\",\"JywgzpeYh3MeehChT\",\"iQ98ogih3WYqf6gZx\",\"E4MLa7tfR5zAFGgPE\",\"aEm3Wvj2rFYRL8Lrb\",\"GcR9CA587pfQuWHyB\",\"DPi9QGLctq2y76KuE\",\"qEyYdgisv7FoxLBjH\",\"RnY25enEBE8T9P5GS\",\"hnSJcN59omGX4TM2P\",\"gJYuGdkXEWWmGRLzu\",\"iTTCBEHSBXS43J87f\",\"PtSLjkm9uLGH2MYys\",\"Yp7uvStL97cC9fKkY\",\"gXTAie79kiw28tx5u\",\"qD2LrwaDrSdiybLKY\",\"KZ2xddpM2f9JRaryB\",\"gb9rvGus2Jv7bjZSs\",\"xn7uGNKeAwPEkP9oA\",\"DEDniTrstQYGounXT\",\"YcCLwitFMAEJSnxAW\",\"H4abACFDH5t8CnnyH\",\"DYDJTyGgKFnBRLm2r\",\"w2HhxvSLmDhaGCAjE\",\"Tpg3ek75vt9MrhEHZ\",\"mG8HqKiAQFTdRZthG\",\"8PvbBWi3WPkJNxdMb\",\"Wv2vJnEj8ywNmARoF\",\"8WpvgSbQciTQWdd8T\",\"eMuCpJ2spXWkJjWNz\",\"tpxMgkGSHwBjS95Ta\",\"gJPdWYrK5qCTezEhB\",\"rxr3nwpDGDEkBJRgD\",\"xuhzk6HxLWryHMGAQ\",\"AJexRBN9cYQmqvYu6\",\"zd9FLSzsGz3evKafy\",\"j49s8dHmmiyPxZmWj\",\"8PwfYqoDQFThzNtvf\",\"s5M5RvgqR9BhB9JoC\",\"Dq24MSpogRmq6L4hX\",\"6nf7iwfwuF2pDJFBa\",\"8BFSTCnoe2QggN64c\",\"6428wKHtwKkFdvBs5\",\"NNE5HNRXAkmhrWgyQ\",\"p8qqFdJ3FSk5x9z3G\",\"3LiSLdtN58n46NEqg\",\"5Z4o2pWDzmbpw4JHJ\",\"9FCeFzjPA4jrQ7oHW\",\"qXjJ4nmQjaTuPhnD2\",\"RehJGBFS6CYiWdjZx\",\"J23RcmzbdtBbPCTjT\",\"xges5rijESfvNfJ7w\",\"7K2GEb5TZRtSpyyGS\",\"orrHiRCtAvLf4M3QD\",\"yjtdwc2AC4jA2RWtn\",\"a777e8chPvJkY3tKa\",\"4fhjJBvLBWh6QeSih\",\"Nb6LYPoQP6KJZt8mz\",\"DfMcEs6XsfGtTpQ26\",\"KLmLKaJPfsYxp42p2\",\"b5zo7s6xrqWgQnPao\",\"5HCu9Ydd86QgHDRNP\",\"8JyqsSbN2FJXPr3cw\",\"6HgMANhu6WiGyXSGN\",\"9CoqdidjM9KbeKnHY\",\"8vWWL8Tx2yDai4ydm\",\"BtdZezHfckxRLm7xR\",\"PcfcAbTJPrdzJN2FW\",\"QRv96jmNaYsWkxQEG\",\"iS5BrkGLzJyPK7nKt\",\"HyrM8hZDo3dvrq82k\",\"Kz7ee56Ht4Ns8JjBj\",\"RErqK2yM94wYyD2hk\",\"nc7bRhkxgKyqusYe3\",\"JS3hNM3XXkxPdg3yk\",\"oBcs8GLX2ZFLXQy8y\",\"knz7eBErwWuCZivQv\",\"377aXz9FPFSZxyrSv\",\"rrSC943cCKNG48sH4\",\"kYWb8BwpKwunQkxeX\",\"SPYSWseH56TkTzKGf\",\"EMJ6uvBZkie429gdg\",\"jNvegJWCk5HCtEMbK\",\"mxX4rH5ELYkdZ2Mbw\",\"Jg8ZSRXe3NoDMCqGu\",\"HF28xZKSLM9wEuqNg\",\"aPmgDEZvMAvD8pSqj\",\"FJSLiBc35txbkMysH\",\"8Ni269XqCJJhs65Kw\",\"dWXHFmTpF8PnGJQL3\",\"bccs9koJxyQ9XNiLC\",\"N8XaZbcznBdDx4vRT\",\"YLFHcoEWk6PzJPsnZ\",\"qH586ETmMdtjhAoBc\",\"q6peoEWzrwZzogT5w\",\"GykYGfSqrqzvyz2jB\",\"m6TC9gshrwufWqAYn\",\"TEN7AF5j6oEocKzwE\",\"CTKmXtrqDYqJBnuy8\",\"dBzwBtRjZqB98DJeB\",\"n2BRY9X8899dcG8Bw\",\"oig8ig9SE9RZa8ttL\",\"meS77LKqRswhF5LAy\",\"FK2fEQ3F6DD3buSLJ\",\"rfyEkETeoS96QNH4e\",\"sHjfbGQGLHE6JR6qu\",\"bKBWZPYR4HcvKAb2r\",\"R2P4K64GKHWiuRtGS\",\"MKT7khMBGXzA22ykf\",\"BiXxBRkJYKTaECqba\",\"vSvippNru5pBnJQJn\",\"rqga4wpWG2uiduNbF\",\"yv7c4H2jimSKHEjtG\",\"SGhPxX5bHGL8zZqtt\",\"hXoTNPPmJLzkZnkSX\",\"8fZxjQfuXw5HMSRJM\",\"s2vkRSndstqE3X73G\",\"mmt7jwqbmSjzRSvqh\",\"M8dQuMrEpP8Hc3tHN\",\"2QGRoQn2dRq3scu7k\",\"NfMJuiBk6FN5Jc6ow\",\"mDWNyaaQ9hvPCRzSd\",\"d8qtzoLB264iP8tdY\",\"qRMyPsTjFp255TrrK\",\"QNb9Rx8BJgCWn3qgR\",\"zfGYZ7gpR8fxJpagh\",\"KJCDwGkoXh8qtbbKr\",\"pJj86xc32Bs7Frxvi\",\"ey3CASd6Je5LEJzfB\",\"c2u7qfdaYxcyuydtu\",\"J3upzLHuEwXH7Z2hx\",\"hKqn2TRhqwwyLcE66\",\"Cybtjz3cF7RgoiqrN\",\"J5T8gZqiZXFuFDTQ7\",\"NuqGt5u3s7vJ7HBGR\",\"Cuy7McJ5y8BkXRRk9\",\"RGMbFMZXJr7DhcAJy\",\"6MjSiiBLPcvXbXcaZ\",\"cAP3n5NY64uoMwzRR\",\"idjmFCuqPacBPvCzw\",\"dky93oMkJsJjEJKk2\",\"kQH5b8MXJunh84Czq\",\"YA7SDhpgEtsqynvNL\",\"dYPkStFnLvAMsHSzZ\",\"pduNK68oazqQTtbLp\",\"yod5YhKtPqw2GfG9B\",\"Nfi64Lq3Ynfqrxt5P\",\"oyKcm3zqdy8Ko5P5d\",\"CBcbixkhbQzwyZAZ3\",\"7scpcTEp3SEx5Wjg9\",\"vSPc7MGK5Poy8tSFp\",\"Fb2wehA7QgTFWry2x\",\"XbxHXmh5ZmRN2gw3K\",\"CQhaiZqQcP87YteSG\",\"FvFhg2wELM3SCZDZQ\",\"ga7aTTEThzsELuC2j\",\"GqothajHR2vKfEHGZ\",\"4fjSgcqhQQZM2ZFRP\",\"YRAzEBJoLvSaiPtYx\",\"i5iePG5GqhJJ8HEoB\",\"jWQefsikqLckkRjQ2\",\"GbZSivvGjmbvqMW2d\",\"29MTvBZopCWjotnc5\",\"5XiuAqicKD4hBdu63\",\"Ecg4m7srYGgZsb4Ck\",\"bz883xR7WdSKXxjwY\",\"cZccqzRQ9GgjQF6Az\",\"nfXGHENb5md7m355s\",\"X5MqeHyPh6cSQCXnk\",\"C2AfMipCicfD58WJ9\",\"3pxHTZBsv7MKzFG6Y\",\"utTuvGdmu2sBHWBhQ\",\"R4SjTgDnpigJYDLyL\",\"HuNF3xTBzmatyGSTm\",\"wjc4iejpErBhxWwHo\",\"nzAG9wfxxReP68Tht\",\"Jqk2uJZZxEv5wZFze\",\"WdKdsgH9gXkKgCycx\",\"DqNQn9Jsxcu5HijKE\",\"2EbDCCJJvCfKkbYia\",\"ZyrfhDTZHb8LymH5b\",\"5zGMciq3fB4aeu9uj\",\"GT9wLv8Lipyp6YYTp\",\"hhKk4joR6kJnua63z\",\"nJXgbSQozcoE8Wn4N\",\"xumt4h8jvh7o4xkhr\",\"GGdmhAvxXhqhhibJN\",\"vCxuabDxEv9YC3Szb\",\"iF4tdvn5sA9CM4T6T\",\"5hQnRWiKkhgKJXNMP\",\"Lg4t6SEWgtYz4u7Cj\",\"uouMMdEWBuLBWPbzr\",\"buX4mCQhtXCfBjeno\",\"8ZhzKvdhsdKgpf6BT\",\"MCWtrajfWFw2wizuS\",\"2H7qphwdz7PPoFKgc\",\"MXGuntvz3byrP6WJc\",\"5HTSi5wQNAdLm57LB\",\"83estQegwgR4TXKk6\",\"p7js9trz2zk2RorCR\",\"uTHfpJjGDdefX3zwT\",\"gf7u4MKcGDFiijzK9\",\"vXf7ssEAHmRsogPfr\",\"ekQh3jzgGLsEMbKo3\",\"HqmxnQJM66Y57twhn\",\"iTYYSCoCZECksWJRu\",\"gg4hgFGgmvK9ZxENE\",\"no46qNkTbNeHepe64\",\"5S9nX4rKsnCcnv4Cz\",\"Y5dqK8G2u6tfqgjR5\",\"rp78xovPotpBHRXxR\",\"FuYTQcDNjct58rqPa\",\"tyLS9T6YMfg9fMtYJ\",\"qEwpcQ9aNCCzQnPaW\",\"7TcRCKM5WY3PcMcvQ\",\"eYfPWvZwnJQkHbSTK\",\"FAwdumxwGGHfp6jky\",\"Fk9kLwoG4Brf4KsKf\",\"srJ34BaybkQh3qRkM\",\"aaJWssCWfMa63XJng\",\"oDN67zoApxcztnYdu\",\"LPGPHgJc8MkvcEDBc\",\"33boaDzGiY28bCDy6\",\"mQjpf5TyF358J8Anz\",\"sftR9DgM4jpwtxfAM\",\"rAfkXcFyvbbtuDMRA\",\"B8n7KqbvEDjZzgj2D\",\"Ds7L5bksw2QRHjrKL\",\"nFbmNzMQ38TncmfQX\",\"ttAQuoHpCGacfBcoe\",\"2fxapKr8XGdNeaKi2\",\"f89WBZDy3j7KZY8od\",\"4RsakkyRXyYGwFxEa\",\"CHvzhtXnv8HTbPQ56\",\"qAby4AWXmTNeusvg3\",\"q6QsMYNMpPNtmyTeW\",\"qQQ4hCQpzitmHSkjS\",\"GTKsdeEihE636Le9i\",\"7txFzDQ43vJ7qCY88\",\"pPpmP7xeJzGgK362R\",\"T6iBEE2jp7f7iEF2P\",\"c7uBxu2rgY77H5d79\",\"iojEnnY9FsMfYzp6f\",\"3cF6NXq3ZEwdkgSjb\",\"XD5nmvKQchKezPXhy\",\"BrTDhPJcACL2bsrpJ\",\"BJp2WkwLWGHHB5oQW\",\"H9KZi2cjt4FwH7qog\",\"AFfw7cGg83uYk2Miy\",\"dJzNF59j2p8jWZxiQ\",\"66a9xX73nmTEuKs9k\",\"CyzskHGsC6WSmYrLu\",\"Wpn95NqWxncQrwNgz\",\"PC3pLs36zNzpRDSuE\",\"sbJcFfQjQ59Wfg4Cd\",\"DfHHpvnubuFmeNky9\",\"c2q7mY39z5JPEMCaM\",\"K6MfKMytoJJuSGewP\",\"Cc2Cgj4MWXZxsTooC\",\"2PufnQcsHsfymufX3\",\"X4rzfxGgxx6CS7Bpz\",\"yr822PZmmiDDenxpB\",\"tdfY4iBvD7oh2ufnN\",\"mvJBakQ35CWAnbbEZ\",\"9Ly8afdtofp8DXzrt\",\"RoGGD5cpHb4ftdLDv\",\"AasGs8AeX9Lcb9xJn\",\"JhX7jvtpwNyxcc39m\",\"R6YxHWAiLgKwy5YvC\",\"utyt9o5BYPWRbXf2X\",\"w67KfQgZ6WAeY7K4Y\",\"4Lwjr34ypKNQNQCar\",\"9pzFiFK3ANLjQfnr2\",\"hR7GMiqGap4CzEWSy\",\"Afnps7TJQuS9sipMb\",\"4RY3zj9C2t8GGefhi\",\"2iFe3EHEH2YdhSKrs\",\"4TmgHkn5vqyHK3sYC\",\"T6Rm8mREPMZSftzrC\",\"P4M69Q4b3aKDDoskW\",\"jWbd7SYDzLPjc9EDh\",\"9gJsF5apWJGWZJprn\",\"u5u2YpHXiNgzDNJdX\",\"uGuS9YRXW2nj4p6zf\",\"d9LBRxvADNBB5QJMB\",\"AQSqD9oNv2uPfxZCR\",\"K9SQzAQy72GMMgJAi\",\"dzS6WBTMHyFEag6Fp\",\"hpT9yYe5R45poHrYR\",\"ytjKfYakfFNJBnPNY\",\"AMpQSjKsRqhCDyS2j\",\"yAouD3PxzED8a4gap\",\"Qyfyyw6oC4EHAndzo\",\"B4y8aoyXJtskYPFEL\",\"qB6KSTYC6H2TQEQY6\",\"rCrbqMiaGPgHYTNxu\",\"QWjsXnLaJ7xfL3Amq\",\"DHXQEnTF6RANkv3oN\",\"XBsKSKHE6o8L89NeJ\",\"8uiLiJcmWxWe6qw65\",\"3KkyQm77zsew58Dc2\",\"5QN8R22z43SrwoHDz\",\"vCeeMuYDbz3MB4vsk\",\"eW9R2SCoYnY8HBAdL\",\"StNu7DPyTgEStZsMY\",\"rDgKHd6ZSSpboiAj7\",\"suArq5BbSy7gD6xri\",\"Wi4H6ayKsNDWWQCG5\",\"ruzwBPphPDRgLXdnP\",\"RfbjShbg8jmhyNtJh\",\"wrL4iX2CCSqDCCty3\",\"WQubx7DAkG6WZE8FA\"],\"total\":360,\"quality\":[5,4,1,4,4,2,3,5,4,3,5,4,5,4,3,4,4,5,4,5,5,5,5,5,5,5,4,5,5,5,3,5,5,5,5,5,5,4,5,5,5,5,4,5,5,4,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,2,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5]},\"flags\":0},\"summary\":\"Given a list of lists, return a new list of lists containing every element, except for the outer elements.\\n\\nExamples\\npeellayeroff([\\n  [\\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"d\\\"],\\n  [\\\"e\\\", \\\"f\\\", \\\"g\\\", \\\"h\\\"],\\n  [\\\"i\\\", \\\"j\\\", \\\"k\\\", \\\"l\\\"],\\n  [\\\"m\\\", \\\"n\\\", \\\"o\\\", \\\"p\\\"]\\n]) ➞ [\\n  [\\\"f\\\", \\\"g\\\"],\\n  [\\\"j\\\", \\\"k\\\"]\\n]\\n\\npeellayeroff([\\n  [1, 2, 3, 4, 5],\\n  [6, 7, 8, 9, 10],\\n  [11, 12, 13, 14, 15],\\n  [16, 17, 18, 19, 2\",\"tags\":[\"arrays\",\"loops\",\"language_fundamentals\"],\"timestamp\":{\"$date\":1598726671765},\"title\":\"Peeling off the Outer Layers\",\"quality\":4.696428571428571,\"family\":[{\"_id\":\"Nwq8yK3Eq2DqbxDsL\",\"language\":\"java\"},{\"_id\":\"mQznJjH2mtaybMCG8\",\"language\":\"javascript\"},{\"_id\":\"EWgdCtSDmRqJPrzoz\",\"language\":\"python3\"},{\"_id\":\"n8xstAeimSbRBcSsN\",\"language\":\"ruby\"}]}}"]