a["{\"msg\":\"result\",\"id\":\"313\",\"result\":{\"_id\":\"gKQ9E956yQujqSTZw\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"def num_to_dict(lst):\\n\\t\",\"difficulty\":0.6311475409836066,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"t3MjoGXw6YRSFoEhr\",\"instructions\":\"**Mubashir** needs your help in a simple task.\\n\\nGiven a list of numbers `lst`:\\n\\n- Create a dictionary for each given number.\\n- The dictionary key will be the **number converted to a string**.\\n- The value will be the corresponding **character code converted to a string** (check ASCII table).\\n- Return a list of the resulting dictionaries.\\n\\n### Examples\\n```\\nnum_to_dict([118, 117, 120]) ➞ [{\\\"118\\\":\\\"v\\\"}, {\\\"117\\\":\\\"u\\\"}, {\\\"120\\\":\\\"x\\\"}]\\n\\nnum_to_dict([101, 121, 110, 113, 103]) ➞ [{\\\"101\\\":\\\"e\\\"}, {\\\"121\\\":\\\"y\\\"}, {\\\"110\\\":\\\"n\\\"}, {\\\"113\\\":\\\"q\\\"}, {\\\"103\\\":\\\"g\\\"}]\\n\\nnum_to_dict([118, 103, 110]) ➞ [{\\\"118\\\":\\\"v\\\"}, {\\\"103\\\":\\\"g\\\"}, {\\\"110\\\":\\\"n\\\"}]\\n```\\n\\n### Notes\\n- All inputs will be a list of numbers.\\n- All character codes are valid lower case letters.\\n- The input array will not be empty.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(num_to_dict([118,117,120]),[{'118':'v'}, {'117':'u'}, {'120':'x'}])\\nTest.assert_equals(num_to_dict([101,121,110,113,113,103]),[{'101':'e'}, {'121':'y'}, {'110':'n'}, {'113':'q'}, {'113':'q'}, {'103':'g'}])\\nTest.assert_equals(num_to_dict([118,103,110,109,104,106]),[{\\\"118\\\":\\\"v\\\"},{\\\"103\\\":\\\"g\\\"},{\\\"110\\\":\\\"n\\\"},{\\\"109\\\":\\\"m\\\"},{\\\"104\\\":\\\"h\\\"},{\\\"106\\\":\\\"j\\\"}])\\nTest.assert_equals(num_to_dict([107,99,110,107,118,106,112,102]),[{\\\"107\\\":\\\"k\\\"},{\\\"99\\\":\\\"c\\\"},{\\\"110\\\":\\\"n\\\"},{\\\"107\\\":\\\"k\\\"},{\\\"118\\\":\\\"v\\\"},{\\\"106\\\":\\\"j\\\"},{\\\"112\\\":\\\"p\\\"},{\\\"102\\\":\\\"f\\\"}])\\nTest.assert_equals(num_to_dict([100,100,116,105,117,121 ]),[{\\\"100\\\":\\\"d\\\"},{\\\"100\\\":\\\"d\\\"},{\\\"116\\\":\\\"t\\\"},{\\\"105\\\":\\\"i\\\"},{\\\"117\\\":\\\"u\\\"},{\\\"121\\\":\\\"y\\\"}])\\n# Mubashir\",\"language\":\"python3\",\"quality\":4.82051282051282,\"stats\":{\"completed\":{\"ratings\":[0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,5,0,0,0,1,0,1,1,0,0,0,0,0,0,5,0,1,0,0,1,1,1,0,0,2,1,1,1,2,0,0,1,2,1,1,2,0,0,0,0,2,0,1,0,0,2,1,0,0,0,2,0,0,0,1,0,1,2,0,0,0,1,0,1,1,0,2,0,0,0,2,1,0,2,0,0,0,2,1,0,1,1,0,1,2,1,0,0,0,1,0,2,0,1,2,0,0,1,2,0,1,0,2],\"quality\":[5,5,5,5,5,4,5,4,5,5,5,4,5,5,5,4,5,5,5,5,5,5,4,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,4],\"rators\":[\"T6iBEE2jp7f7iEF2P\",\"6oABh8e5vpJJ8utgm\",\"tAF9Gf6PiGogbZuWs\",\"wjc4iejpErBhxWwHo\",\"5HCu9Ydd86QgHDRNP\",\"YcCLwitFMAEJSnxAW\",\"Fb2wehA7QgTFWry2x\",\"mgphBhFS86wdwmZas\",\"CHvzhtXnv8HTbPQ56\",\"aBtHZG9CaYC6r548Y\",\"eMuCpJ2spXWkJjWNz\",\"iS5BrkGLzJyPK7nKt\",\"PC3pLs36zNzpRDSuE\",\"iojEnnY9FsMfYzp6f\",\"9pzFiFK3ANLjQfnr2\",\"DFpZcskPncmo7fuzR\",\"srJ34BaybkQh3qRkM\",\"hRAd998MG8Jzdpxj6\",\"AFfw7cGg83uYk2Miy\",\"DEDniTrstQYGounXT\",\"oRYRmfvvAiTmfuR34\",\"N2wnZXkhDH86mgjQ8\",\"mxX4rH5ELYkdZ2Mbw\",\"buX4mCQhtXCfBjeno\",\"FEYpu9RWysAgW3XnP\",\"8JyqsSbN2FJXPr3cw\",\"eYfPWvZwnJQkHbSTK\",\"Ds7L5bksw2QRHjrKL\",\"szQg8dxKNNre3v3Jk\",\"i5iePG5GqhJJ8HEoB\",\"sbJcFfQjQ59Wfg4Cd\",\"zd9FLSzsGz3evKafy\",\"gb9rvGus2Jv7bjZSs\",\"hCJJcRMnar35s2X2b\",\"c3tSupXpsdcZAxJxH\",\"QRv96jmNaYsWkxQEG\",\"wRttWTM59y8m5mx7x\",\"J5T8gZqiZXFuFDTQ7\",\"cR3ibTMxLyEdDFCHY\",\"PXAcsKkssS2yLyDv2\",\"XD5nmvKQchKezPXhy\",\"rNzCZ5eYDtgk3peJn\",\"yjtdwc2AC4jA2RWtn\",\"Wpn95NqWxncQrwNgz\",\"ghMkPtdFCpM6w8nax\",\"3cF6NXq3ZEwdkgSjb\",\"u5u2YpHXiNgzDNJdX\",\"kjvgTyRFyKHv44DcH\",\"gJYuGdkXEWWmGRLzu\",\"9qoWqLcHGiDX429rE\",\"2QGRoQn2dRq3scu7k\",\"Yp7uvStL97cC9fKkY\",\"Q6gEE9dG8ERy2Xu3c\",\"jWbd7SYDzLPjc9EDh\",\"s5M5RvgqR9BhB9JoC\",\"oBcs8GLX2ZFLXQy8y\",\"YRAzEBJoLvSaiPtYx\",\"pwWtbXEjzuvrhEGwt\",\"zC8WrPp5BC6c2exrW\",\"XrqNzJ2FRG8HnGiR6\",\"fTNQmMvTZhhiGBCMe\",\"CyzskHGsC6WSmYrLu\",\"Cg3LKtEAJpsrdWroG\",\"LQxof8pGabGuWP7Gn\",\"aEm3Wvj2rFYRL8Lrb\",\"a2Kmh6ekWqQQooHiQ\",\"RTER5uJdW4khkiNbY\",\"EfxwqhYdapX3dMQC2\",\"qNszsXx28cTxvGSNj\",\"NrRa4TS6uZR9xuXRt\",\"fdyejapW3NWN7utPX\",\"NP2RxM3eBd3drnDwP\",\"jgyuzt5BpA3ohHG96\",\"9Ly8afdtofp8DXzrt\",\"Fk9kLwoG4Brf4KsKf\",\"pPpmP7xeJzGgK362R\",\"mvJBakQ35CWAnbbEZ\",\"6LbPw9yW6HHDfn8B8\",\"AQSqD9oNv2uPfxZCR\",\"8PwfYqoDQFThzNtvf\",\"T6Rm8mREPMZSftzrC\",\"AXcnPX68zdMiLNSmu\",\"7zTHEesuAsEaDjS7w\",\"J3upzLHuEwXH7Z2hx\",\"iYXdNw7tKcgA3QwBX\",\"j7ebNFtte6fSkMWjj\",\"JiSpvq6C7azQEmENc\",\"XujK3rHd3JcM9TLJy\",\"AasGs8AeX9Lcb9xJn\",\"sHjfbGQGLHE6JR6qu\",\"GGdmhAvxXhqhhibJN\",\"MKT7khMBGXzA22ykf\",\"FiaTpm7ehfDv43wSG\",\"93ADqsBQnwTEosjbq\",\"HqmxnQJM66Y57twhn\",\"DTyNcDkiScCjgJt28\",\"JS3hNM3XXkxPdg3yk\",\"Afnps7TJQuS9sipMb\",\"tm3R3qmjwwqy2Kj6T\",\"W3esi7nZLHyXmyZSd\",\"XbxHXmh5ZmRN2gw3K\",\"zBk2cwJ9SLAhFuM3K\",\"PTDFuxAzou7W6asWt\",\"ecytnKJxjCPk8Kbif\",\"C9LKGu2g5hSijvDzA\",\"54BFnXEjY3FuRNYpN\",\"gKnWjDjwrJh7MK2df\",\"pQwhNKiCne4gEZgcn\",\"HsEqBz8kiBNZJA3Qw\",\"DPi9QGLctq2y76KuE\",\"cdXmwjupCXSvJTSNo\",\"qAby4AWXmTNeusvg3\",\"syRNbbPdLCGXbH2Gy\",\"Jqk2uJZZxEv5wZFze\",\"5nbHH4eApn6So9h2n\",\"FRN2W8RYpJ6GPhgRy\",\"StNu7DPyTgEStZsMY\",\"aN6owKqBeZj7ZefFR\",\"dYPkStFnLvAMsHSzZ\",\"7q8oBsCHwn48Ppnrq\",\"hRfdHT8bWztZuCqzi\",\"YZsZjfvd3PnLhDJrR\",\"gbGzZz5Yq5hT357v8\",\"B4y8aoyXJtskYPFEL\",\"b7yQWr6eJFxYTmt3j\",\"fGvJRtjbJFJJZLCnW\",\"5QN8R22z43SrwoHDz\",\"d9LBRxvADNBB5QJMB\",\"dzS6WBTMHyFEag6Fp\",\"qaPjAANdnxFnWfj5d\",\"PBnvAuiKXwjqjKG33\",\"PytNZK9mNiRiZxPrm\",\"858b7KAn3NyWjGR84\",\"suArq5BbSy7gD6xri\",\"AMpQSjKsRqhCDyS2j\",\"rF97GDLqCgynr7BaD\",\"yAouD3PxzED8a4gap\",\"Ne8mK9DDHG8TRkoxG\",\"vAbK8sCfKyFC78HYg\",\"M2gFMJkocQSY6bsFR\",\"NzbRqGWspQnWMoDrF\",\"fMp8sPsKSECdfgF9j\",\"r83jJeskFETo3RLhZ\",\"M8dQuMrEpP8Hc3tHN\",\"4sSXLSBZDxK2Swoo7\",\"3LiSLdtN58n46NEqg\",\"rrSC943cCKNG48sH4\",\"5CsHudxuDESxmjTPW\",\"Wi4H6ayKsNDWWQCG5\",\"M4vq8ATaS9Jg5X7iP\",\"4akHBgnDEDj3Rkv5n\",\"L5476WNbRyEEpLTFK\",\"d8qtzoLB264iP8tdY\",\"Cnx3Ss6zhhKExXxbC\",\"3SgSNoAB3sxaYeT3w\",\"7HAL7H6NJmc4NC8Q5\"],\"total\":171},\"flags\":0},\"summary\":\"Mubashir needs your help in a simple task.\\n\\nGiven a list of numbers lst:\\n\\nCreate a dictionary for each given number.\\nThe dictionary key will be the number converted to a string.\\nThe value will be the corresponding character code converted to a string (check ASCII table).\\nReturn a list of the resulting dictionaries.\\n\\nExamples\\nnumtodict([118, 117, 120]) ➞ [{\\\"118\",\"tags\":[\"arrays\",\"interview\",\"strings\"],\"timestamp\":{\"$date\":1615192786208},\"title\":\"Numbers to Dictionaries\",\"family\":[{\"_id\":\"QXs9gtArh9nvnP3oy\",\"language\":\"javascript\"},{\"_id\":\"gKQ9E956yQujqSTZw\",\"language\":\"python3\"},{\"_id\":\"FKdMApc3KMP7PLBng\",\"language\":\"ruby\"}]}}"]