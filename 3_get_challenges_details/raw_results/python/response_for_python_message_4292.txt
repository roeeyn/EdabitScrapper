a["{\"msg\":\"result\",\"id\":\"864\",\"result\":{\"_id\":\"xzfmTCRFAvDeSetCJ\",\"author\":\"Alessandro Manicone\",\"authorId\":\"AasGs8AeX9Lcb9xJn\",\"code\":\"dic1 = {\\\"yourkeys\\\": \\\"yourvalues\\\"}\\ndic2 = {\\\"yourkeys\\\": \\\"yourvalues\\\"}\\ndic3 = {\\\"yourkeys\\\": \\\"yourvalues\\\"}\\n\\ntemplate = \\\"yourtemplatestringhere\\\"\",\"difficulty\":1.4174757281553398,\"editorId\":\"AasGs8AeX9Lcb9xJn\",\"familyId\":\"vwcpXthtydTgCeXsw\",\"instructions\":\"For each challenge of this series you **do not** need to submit a function. Instead, you need to submit a **template string** that can formatted in order to get a certain outcome.\\n\\nWrite **three dictionaries** and a template string according to the following example. Notice the article \\\"a\\\" in the third example:\\n\\n### Example\\n```\\ndic1 = {\\\"yourkeys\\\": \\\"yourvalues\\\"}\\ndic2 = {\\\"yourkeys\\\": \\\"yourvalues\\\"}\\ndic3 = {\\\"yourkeys\\\": \\\"yourvalues\\\"}\\ntemplate = \\\"yourtemplatestringhere\\\"\\n\\ntemplate.format(**dic1) ➞ \\\"I like Mary, I don't like May.\\\"\\ntemplate.format(**dic2) ➞ \\\"I love Eda, I don't love Bit.\\\"\\ntemplate.format(**dic3) ➞ \\\"I have a Pidgey, I don't have a Rattata.\\\"\\n```\\n\\n### Tips\\nThe elements of a dictionary can be unpacked and passed to `.format()` as keyword arguments using a double star operator `**`:\\n\\n```\\nproduct = {\\\"name\\\": \\\"pokeball\\\", \\\"price\\\": 20}\\n\\\"One {name} is ${price:.2f}\\\".format(**product) ➞ \\\"One pokeball is $20.00\\\"\\n```\\n\\n### Notes\\n- Submit a string, not a function.\\n- Do not change the names of the variables `template`, `dic1`, `dic2` and `dic3`.\\n- You can find all the exercises in this series [over here] (https://edabit.com/collection/hCYFNwxGwnAYzq497).\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(template.format(**dic1), \\\"I like Mary, I don't like May.\\\")\\nTest.assert_equals(template.format(**dic2), \\\"I love Eda, I don't love Bit.\\\")\\nTest.assert_equals(template.format(**dic3), \\\"I have a Pidgey, I don't have a Rattata.\\\")\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,2,1,1,2,2,1,1,1,1,1,2,0,1,1,2,0,1,1,1,1,2,2,1,0,2,5,1,0,2,2,2,1,2,2,1,1,1,1,1,0,2,0,1,1,2,2,1,2,2,1,1,2,1,2,2,2,1,1,2,2,2,1,2,0,0,2,2,3,1,1,2,2,1,1,1,2,2,1,0,1,1,2,2,0,2,1,2,2,1,2,3,0,0,1,0,2,2,0,2,2,2,2,0,2,2,2,1,1,1,1,2,2,2,1,0,2,1,3,1,2,2,1,2,1,2,3,0,2,0,2,2,2,2,1,2,1,1,2,2,2,1,1,2,1,2,1,2,1,1,1,2,2,2,2,0,2,2,0,0,2,1,2,2,0,2,2,0,2,1,2,2,2,2,2,2,2,2,1,0,1,2,2,2,2,1,1,2,2,2,1,1,2,2,0,2,2,2,0,0,2,2],\"rators\":[\"AasGs8AeX9Lcb9xJn\",\"ZNnsMeNkdDhHjSrZb\",\"tAF9Gf6PiGogbZuWs\",\"KdNDysEsy2TW5QRJ2\",\"8PwfYqoDQFThzNtvf\",\"DEDniTrstQYGounXT\",\"NNE5HNRXAkmhrWgyQ\",\"b5bi9DAZJtv6YT7Wt\",\"b4rgHfvBFcNnWjhvN\",\"s9DkRuc43pjPqNWnE\",\"n2BRY9X8899dcG8Bw\",\"ahk2qiXKJA753wAJk\",\"zd9FLSzsGz3evKafy\",\"XrqNzJ2FRG8HnGiR6\",\"7tbtTx6uxePv6eQwP\",\"s82udQhNTKHs5iNR6\",\"gb9rvGus2Jv7bjZSs\",\"a777e8chPvJkY3tKa\",\"FvFhg2wELM3SCZDZQ\",\"FEYpu9RWysAgW3XnP\",\"FzxTj4GuujhwpZM7y\",\"9pzFiFK3ANLjQfnr2\",\"NG8PWBSjsM8mMhQEq\",\"TP8xuSLNax26Czg7v\",\"Yp7uvStL97cC9fKkY\",\"J5T8gZqiZXFuFDTQ7\",\"E8TMSMSamEbBtf9Lo\",\"dHZqT6h4JMwk5fPC8\",\"atWzkW6mFPc7Gw97m\",\"WH4KK6NdhDZuCTGyj\",\"hFYWNWgoipTZunHzB\",\"DxxNN37iEz7b8t2nf\",\"yZvzB3qFb8pkHy4dg\",\"j57Xos8wYZWcwqMrt\",\"aEm3Wvj2rFYRL8Lrb\",\"wS2o3x4nrsadtC3xP\",\"NzbRqGWspQnWMoDrF\",\"b5p2BRxyHrrpGC5J3\",\"8JyqsSbN2FJXPr3cw\",\"mxX4rH5ELYkdZ2Mbw\",\"hnyhBFWwNCz9mDfSi\",\"aRqQ42J5zqCmBNd8w\",\"awK73Qku8BcNGQ4Mm\",\"TedGr4b6dqd3EKvRK\",\"vhLJwgSRY2J7aGD2i\",\"inJtWyK7wrXsFRq6t\",\"yYxPzFqBgtQ9fsyHM\",\"vEm9xLGsLm9ZAxHdL\",\"vyroaSNtdE8vJP4Bd\",\"zAppXL8MZJiNAStc5\",\"Cp4WteiP4i2eoKhvB\",\"DpqiRAm2yo3W2x4HX\",\"yXuZh6CF6GqKYHzoT\",\"kch5ukGsAcRJynWQd\",\"Z6eqrAatHZjffx4s3\",\"2rc86eoe88DLhFeJD\",\"2ptN2mhjFwFcHyPZd\",\"RQvQLnbRxGx6yrdHi\",\"H4abACFDH5t8CnnyH\",\"Ne8mK9DDHG8TRkoxG\",\"RHZcTWs7asoBGydH4\",\"CLypXaZksY99mpRCm\",\"TjeuzxKBd7b4ZajSs\",\"TEN7AF5j6oEocKzwE\",\"bCDTKAoS4biDmQ64Y\",\"Z4M3NAa4TXquMNkHe\",\"7j5WZYiP4uoE7AqYC\",\"Gg5cCatmHqYorEbcu\",\"3LiSLdtN58n46NEqg\",\"PXAcsKkssS2yLyDv2\",\"Ba23uS2eT4sEduZ5x\",\"uouMMdEWBuLBWPbzr\",\"8BFSTCnoe2QggN64c\",\"2innwjWqxJHo4eRGh\",\"4hWjYDZsdixzvKbqQ\",\"gyDmrAsn8xGo8YRS2\",\"gA665h7JhxfMBRBxH\",\"syRNbbPdLCGXbH2Gy\",\"R4SjTgDnpigJYDLyL\",\"k7f82n7oxaWsmhdzT\",\"yNjkHfHESBAnCssPB\",\"uDbfE9Y4ZogkjjoiX\",\"4oNjCoTNbLKhPJYAE\",\"AtoBC3LqE89p3xhYC\",\"8zWoQQvtYdg5yoweM\",\"qfMp7bnDbgYZ95WCn\",\"KQibXmPD86WnYBrBj\",\"WzEhzQcMwc4sw8z7T\",\"mmt7jwqbmSjzRSvqh\",\"jNvegJWCk5HCtEMbK\",\"iojEnnY9FsMfYzp6f\",\"p8qqFdJ3FSk5x9z3G\",\"sHjfbGQGLHE6JR6qu\",\"n38B6QDapPX8bZfSt\",\"M8dQuMrEpP8Hc3tHN\",\"s6qiPXptvyxxEy3vm\",\"ji5f27FPz4wRRF6Ls\",\"HqmxnQJM66Y57twhn\",\"oHbErJxjYJhD66d5w\",\"koMGknitsCpM7Jtuu\",\"sHDcTJTsrxM3QnJij\",\"BnpWyXfazst6K6u47\",\"yjtdwc2AC4jA2RWtn\",\"gTR97wEtpYiMAPpLd\",\"oBcs8GLX2ZFLXQy8y\",\"DDD5tzD2m8bcntBB8\",\"JijDKY284YP3xWcZx\",\"JJmKj7ACC2P52uo95\",\"crftT5nioy8kdaHyw\",\"dj5AyG5fWP8FdsSmZ\",\"SkQcb2sRn4as5KpnN\",\"JS3hNM3XXkxPdg3yk\",\"YcCLwitFMAEJSnxAW\",\"6428wKHtwKkFdvBs5\",\"6HgMANhu6WiGyXSGN\",\"ta5CrWnBCRusD2WMo\",\"wymkBJ3ePhAkti3ZM\",\"NrRa4TS6uZR9xuXRt\",\"9CoqdidjM9KbeKnHY\",\"WQubx7DAkG6WZE8FA\",\"MCw7uAcoWcSTBTmr3\",\"RehJGBFS6CYiWdjZx\",\"TPhfpB5tzQWSSn67n\",\"XkJ9G89xpZiTj58Eq\",\"m7hHWJrBub7ueaokh\",\"w2HhxvSLmDhaGCAjE\",\"HnJuYrgwLJwXtboE3\",\"8WpvgSbQciTQWdd8T\",\"pWYjN62ZAKQZ7Xp3W\",\"KLmLKaJPfsYxp42p2\",\"ZPfMiGmjtiGpzozG2\",\"Kz7ee56Ht4Ns8JjBj\",\"5Z4o2pWDzmbpw4JHJ\",\"PcfcAbTJPrdzJN2FW\",\"Wv9XxYAmCLZdhrTMF\",\"NuqGt5u3s7vJ7HBGR\",\"tpxMgkGSHwBjS95Ta\",\"mG8HqKiAQFTdRZthG\",\"aKzYNPqBqb3J3ZgyD\",\"ZwvmkkEYoJvy2tCPc\",\"c7uBxu2rgY77H5d79\",\"rrSC943cCKNG48sH4\",\"wRttWTM59y8m5mx7x\",\"4fhjJBvLBWh6QeSih\",\"m6TC9gshrwufWqAYn\",\"MwXAkJ4y2RnST8hTc\",\"qD2LrwaDrSdiybLKY\",\"bccs9koJxyQ9XNiLC\",\"2QziknsznNeMPRh3g\",\"d8qtzoLB264iP8tdY\",\"c2u7qfdaYxcyuydtu\",\"QRv96jmNaYsWkxQEG\",\"oDN67zoApxcztnYdu\",\"J3upzLHuEwXH7Z2hx\",\"2QGRoQn2dRq3scu7k\",\"6MjSiiBLPcvXbXcaZ\",\"RGMbFMZXJr7DhcAJy\",\"Cuy7McJ5y8BkXRRk9\",\"pduNK68oazqQTtbLp\",\"dYPkStFnLvAMsHSzZ\",\"yod5YhKtPqw2GfG9B\",\"xSNdn3XovWh6c6Bjd\",\"CEd9tLdXeDeNHSzys\",\"mxgQ9Jt29CNkP9qa5\",\"4fjSgcqhQQZM2ZFRP\",\"qAby4AWXmTNeusvg3\",\"5XiuAqicKD4hBdu63\",\"uwQvy9tNNxDYqgu7g\",\"NyMjb994ykb5bdCtS\",\"C2AfMipCicfD58WJ9\",\"BMJffXrypJSAzTG7w\",\"Jqk2uJZZxEv5wZFze\",\"GbsnjyJxYDd5q4bGC\",\"XeNskNoh5DcHuKTWX\",\"WdKdsgH9gXkKgCycx\",\"icsLTze3op3SPQbzy\",\"5zGMciq3fB4aeu9uj\",\"Lg4t6SEWgtYz4u7Cj\",\"LW8PqW4HFXWfoJGo6\",\"GGdmhAvxXhqhhibJN\",\"Tuqd4EysQpZLYA6be\",\"buX4mCQhtXCfBjeno\",\"5hQnRWiKkhgKJXNMP\",\"p7js9trz2zk2RorCR\",\"5S9nX4rKsnCcnv4Cz\",\"DqNQn9Jsxcu5HijKE\",\"7N6c3Xu244bnQWjBs\",\"Ds7L5bksw2QRHjrKL\",\"nFbmNzMQ38TncmfQX\",\"vCxuabDxEv9YC3Szb\",\"LPGPHgJc8MkvcEDBc\",\"axdSNLZpiCDF8RS6n\",\"srJ34BaybkQh3qRkM\",\"StNu7DPyTgEStZsMY\",\"pPpmP7xeJzGgK362R\",\"9ivvGvJGvtQfigQaZ\",\"BrTDhPJcACL2bsrpJ\",\"Fb2wehA7QgTFWry2x\",\"XD5nmvKQchKezPXhy\",\"dJzNF59j2p8jWZxiQ\",\"AFfw7cGg83uYk2Miy\",\"2EbDCCJJvCfKkbYia\",\"Cc2Cgj4MWXZxsTooC\",\"c2q7mY39z5JPEMCaM\",\"2PufnQcsHsfymufX3\",\"fznzd3qnvtbFkkizz\",\"RoGGD5cpHb4ftdLDv\",\"R6YxHWAiLgKwy5YvC\",\"PC3pLs36zNzpRDSuE\",\"9Ly8afdtofp8DXzrt\",\"w67KfQgZ6WAeY7K4Y\",\"4Lwjr34ypKNQNQCar\",\"hR7GMiqGap4CzEWSy\",\"54BFnXEjY3FuRNYpN\",\"2iFe3EHEH2YdhSKrs\",\"4TmgHkn5vqyHK3sYC\",\"jkbavR2ATFJcpmo8M\",\"pQwhNKiCne4gEZgcn\",\"MKT7khMBGXzA22ykf\",\"vCeeMuYDbz3MB4vsk\",\"rCrbqMiaGPgHYTNxu\",\"u5u2YpHXiNgzDNJdX\",\"sbJcFfQjQ59Wfg4Cd\",\"AMpQSjKsRqhCDyS2j\",\"dzS6WBTMHyFEag6Fp\",\"CHvzhtXnv8HTbPQ56\",\"2fxapKr8XGdNeaKi2\",\"Qyfyyw6oC4EHAndzo\",\"B4y8aoyXJtskYPFEL\",\"AQSqD9oNv2uPfxZCR\",\"acENs2fSF9d7hkTZx\",\"5QN8R22z43SrwoHDz\",\"Wi4H6ayKsNDWWQCG5\",\"ruzwBPphPDRgLXdnP\",\"reNwCbDbpcz6bdTxz\",\"RfbjShbg8jmhyNtJh\"],\"total\":258,\"quality\":[5,4,4,4,4,5,4,5,5,4,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2,5,5,4,5,5,4,5]},\"flags\":0},\"summary\":\"For each challenge of this series you do not need to submit a function. Instead, you need to submit a template string that can formatted in order to get a certain outcome.\\n\\nWrite three dictionaries and a template string according to the following example. Notice the article \\\"a\\\" in the third example:\\n\\nExample\\ndic1 = {\\\"yourkeys\\\": \\\"yourvalues\\\"}\\ndic2 = {\\\"yourkeys\\\"\",\"tags\":[\"strings\",\"language_fundamentals\",\"formatting\"],\"timestamp\":{\"$date\":1590389070503},\"title\":\"Format X: Unpacking Dictionaries\",\"quality\":4.6571428571428575,\"family\":[{\"_id\":\"xzfmTCRFAvDeSetCJ\",\"language\":\"python3\"}]}}"]