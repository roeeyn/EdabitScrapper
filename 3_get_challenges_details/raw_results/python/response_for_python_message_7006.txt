a["{\"msg\":\"result\",\"id\":\"2209\",\"result\":{\"_id\":\"WH8AfHodqyj4gSB8K\",\"author\":\"Joshua Señoron\",\"authorId\":\"PXAcsKkssS2yLyDv2\",\"code\":\"def is_authentic_skewer(s):\\n\\t\",\"difficulty\":3.357142857142857,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"osdkJd4S3g2sbyfY2\",\"instructions\":\"An *authentic* vowel skewer is a skewer with a delicious and juicy mix of consonants and vowels. However, the way they are made must be *just right*:\\n- Skewers must begin and end with a **consonant**.\\n- Skewers must **alternate** between consonants and vowels.\\n- There must be an **even spacing** between each letter on the skewer, so that there is a consistent flavour throughout.\\n\\nCreate a function which returns whether a given vowel skewer is **authentic**.\\n\\n### Examples\\n```\\nis_authentic_skewer(\\\"B--A--N--A--N--A--S\\\") ➞ True\\n\\nis_authentic_skewer(\\\"A--X--E\\\") ➞ False\\n# Should start and end with a consonant.\\n\\nis_authentic_skewer(\\\"C-L-A-P\\\") ➞ False\\n# Should alternate between consonants and vowels.\\n\\nis_authentic_skewer(\\\"M--A---T-E-S\\\") ➞ False\\n# Should have consistent spacing between letters.\\n```\\n\\n### Notes\\n- All tests will be given in uppercase.\\n- Strings without any actual skewer `\\\"-\\\"` or letters should return `False`.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(is_authentic_skewer(\\\"B--A--N--A--N--A--S\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"L-A-B-O-R-A-T-O-R\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"M-----E-----M-----E-----S\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"A--X--E\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"C-L-A-P\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"M--A---T-E-S\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"C--H----E---E-S-E\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"B-E-L-L\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"T-I-T-A-N-I-C\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"J--E--Q--A--H--E--K--A--Y--U--X--A--P--I--F\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"F-U-W\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"C-----O-----K-----O-----Z-----O-----D-----E-----W-----O-----T\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"T----O----M----O----R\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"OZAEZ-----EE\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"--UXGV\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"W-E-D-A-X-E-P-I-Y-O-L-E-V-A-W\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"J---U---X---O---G---O---G---I---D---U---J---O---K---U---V\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"APU---V\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"U---WIE--------------UACO\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"EOAOTJCUE-----U----K-----\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"S---O---S---I---W---A---H---U---W---I---J---I---Q---A---C\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"R-O-D-U-P-U-C-A-M-A-R-A-T-I-V-U-R\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"C----A----T----A----Q----O----M----A----F\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"C---A---P---I---B---A---R---O---Z---E---W---A---L---O---J\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"H---------O-------\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"----------------\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"-----OA-------AOP-EJE-UIE---WH\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"VKIQYQO----OI----IFII\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"GOXXOC--GLYO--BS----------AO----\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"R--I--G--A--J--A--N--A--H--O--K--A--L--U--Q--O--W--A--W--E--R\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"Q-----E-----P-----U-----X\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"EOE----\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"CEQEE-----ETUOYXL\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"EOOJSI-ER------Z\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"--OU\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"----KWVEGUMDDI-MNED\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"B---A---X---I---N---O---Z---O---D---O---Q\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"A---O------FGOK-------EU---EU\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"KG----O-----------\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"Z---I---T---U---H---O---G---U---R---A---W---E---G---U---W\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"H--I--K--U--Q--A--L--O--L--O--H--A--B--E--Z\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"ICU-----TA---L-------O--FE----REE\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"C-----A-----W-----U-----H-----I-----Z-----U-----J-----I-----L-----O-----C-----I-----K-----E-----R\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"H-----I-----R-----A-----Q-----A-----S-----O-----F-----O-----N-----A-----R\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"AA----IWEU\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"Z----E----S----A----V----A----M----I----V----O----V----E----G----U----G----A----M\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"---YAAT--E\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"K---O---L---A---D---I---Y---O---G\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"J-O-W-E-C-E-D-A-C-U-V-E-V\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"UKMU\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"D-I-F\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"K----O----B----I----F----O----S----A----H----I----W----A----V----I----P----O----P\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"-EUUFPV-------\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"Z-O-F-I-P-A-K-I-Z-I-H-U-B-E-R-A-W-U-K\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"B-----E-----R-----E-----K-----I-----X-----I-----V-----E-----P-----I-----F-----I-----Y-----A-----C-----U-----Q\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"Y-----A-----K-----O-----T-----O-----B-----O-----Q-----A-----M-----O-----H-----E-----Y-----O-----D-----A-----H-----A-----T\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"Q-I-F\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"-----D-----EKGAO\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"T--E--X--I--S--I--T--O--K--O--Z--O--M\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"C-U-D-I-N-I-N-O-H-I-J\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"P--O--D--U--Q--E--G--A--R--I--J--U--V--A--Y\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"--------EU\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"V----I----L----A----L----U----Z----U----T----E----R----E----X----A----G----O----W----O----H----E----L\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"F--E--S--I--K--O--X--U--D--I--J--A--Q--I--Y--E--M\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"WL\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"Z---NDIA---O-----KV--HTM----A\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"S-O-F-A-D-E-J-O-X-E-C-O-M-U-B-E-D-E-D\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"F-E-B-E-B-O-K-O-D-I-K-O-J-E-S-I-D\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"L-A-B-A-F-A-D-I-P-I-P\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"QOM--IBI\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"---P---P---A-----GAG-----KUVL\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"IXJ---Q\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"DA-----XPZER--PO----PIHUR\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"UNOO-------\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"S-----A-----Z-----O-----J-----U-----Q-----O-----C-----O-----V\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"DA-------E---A--GLU---------O-----D\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"J--A--D--U--N--A--W--O--H--O--Q--A--Z--E--V--U--S--O--Y--O--R\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"UE----Q--DBZA--\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"K-----A-----N-----A-----Q-----I-----L-----U-----X-----E-----H-----A-----S-----I-----Y-----A-----M\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"X--E--V--U--Y--U--T--O--D--I--P--O--T--U--Q--I--D--A--R\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"I--HWT----YB----UUTEIZ-TI\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"IA\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"E-----E---RXU\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"RM-ITU-----\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"----PODEUZU--ZSCTI\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"----M---I-\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"W----I----J----A----Y----O----G----U----Y----I----S----A----B----E----R----I----H----E----M----U----J\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"V----I----K----O----B----I----N----E----H----U----B\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"R-A-S-E-J-I-M-E-W-E-H-A-B-U-R-E-P-A-T-U-M\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"W----U----G\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"F--A--V--E--B--I--G--I--G\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"E-----------JXA---AXU------MIRIX\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"IWZI-----OB----U-----EAI\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"CEP--RP---OP-MIE-----G---\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"U-----------ZY-PASUEA---\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"PA\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"ZAN----LKAM\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"J-RZR--------U-------O-----\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"K----I----Z\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"L--U--C--E--S--I--Z--U--Z--I--H--A--F--O--L--I--C--A--K\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"UN----V\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"A-------DZM---OCQL---UE-----U\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"M---E---M\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"L-A-C-O-X-O-Z-O-F-A-Z-E-H-U-L-A-L-U-N-U-Z\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"AY\\\"), False)\\nTest.assert_equals(is_authentic_skewer(\\\"R--I--S--U--K--E--B--A--F\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"H--E--K--A--C--I--N--A--X--U--J--A--P\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"Y-----A-----L-----U-----V-----A-----V-----E-----J\\\"), True)\\nTest.assert_equals(is_authentic_skewer(\\\"K---I---D---A---B---E---X---U---K---U---H\\\"), True)\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[3,3,3,3,3,4,4,3,5,5,2,5,4,3,4,4,2,4,4,0,2,4,3,5,4,3,2,5,4,3,5,5,5,1,5,1,5,2,4,0,4,1],\"rators\":[\"tAF9Gf6PiGogbZuWs\",\"oTm8JAxW6Kxed8P6B\",\"aEm3Wvj2rFYRL8Lrb\",\"aCNWav8S8Try9RkC6\",\"8PwfYqoDQFThzNtvf\",\"gb9rvGus2Jv7bjZSs\",\"S6Zd8mPuvhuh3MFRt\",\"F7R6kDnFGGWugpg4C\",\"8JyqsSbN2FJXPr3cw\",\"DwetpbChQM4r6Gwah\",\"Ftqr6ecGF6nfjMjgi\",\"jfb9j3YRnbxdZSsYS\",\"AasGs8AeX9Lcb9xJn\",\"DpqiRAm2yo3W2x4HX\",\"W5TajitmCyxz87zAC\",\"asAjc8npPT8WcozjN\",\"fznzd3qnvtbFkkizz\",\"S6ipW8Xzds8QDszn9\",\"5dHucvf2qBYyKim7X\",\"s5M5RvgqR9BhB9JoC\",\"ya2ofFqYRC57bfbND\",\"R4SjTgDnpigJYDLyL\",\"oHbErJxjYJhD66d5w\",\"xn7uGNKeAwPEkP9oA\",\"Nua6T3dBurBy3Qfg9\",\"AaKWw8amcFYLrEpNz\",\"4fhjJBvLBWh6QeSih\",\"fSgCtTbtfBQBmGM2m\",\"fSQSHjW3e72MrWxbD\",\"iS5BrkGLzJyPK7nKt\",\"DPi9QGLctq2y76KuE\",\"b3Dk2LqoEgripS3Y3\",\"eHcgvkTGsH7ZziqBo\",\"8sNv5PTHa7XQ8bNqR\",\"iojEnnY9FsMfYzp6f\",\"J3upzLHuEwXH7Z2hx\",\"yjtdwc2AC4jA2RWtn\",\"gJYuGdkXEWWmGRLzu\",\"G44KZybNLHkjuaTe7\",\"2PufnQcsHsfymufX3\",\"gKnWjDjwrJh7MK2df\",\"buX4mCQhtXCfBjeno\",\"8nE8QHnFYsHCFebte\"],\"total\":47,\"quality\":[5,5,4,5,5,5]},\"flags\":1},\"summary\":\"An authentic vowel skewer is a skewer with a delicious and juicy mix of consonants and vowels. However, the way they are made must be just right:\\nSkewers must begin and end with a consonant.\\nSkewers must alternate between consonants and vowels.\\nThere must be an even spacing between each letter on the skewer, so that there is a consistent flavour throughout.\\n\\nC\",\"tags\":[\"strings\",\"algorithms\",\"validation\",\"loops\"],\"timestamp\":{\"$date\":1584741665785},\"title\":\"Vowel Skewers\",\"quality\":4.833333333333333,\"family\":[{\"_id\":\"yAxavtyQX2ETtqRFQ\",\"language\":\"cpp\"},{\"_id\":\"pamfQKTuXPf7u6yne\",\"language\":\"javascript\"},{\"_id\":\"WH8AfHodqyj4gSB8K\",\"language\":\"python3\"},{\"_id\":\"5rm6uiwuZTCJYyL6R\",\"language\":\"ruby\"}]}}"]