a["{\"msg\":\"result\",\"id\":\"937\",\"result\":{\"_id\":\"K4ifFgsgRitT7MDiz\",\"author\":\"Alessandro Manicone\",\"authorId\":\"AasGs8AeX9Lcb9xJn\",\"code\":\"template = \\\"yourtemplatestringhere\\\"\",\"difficulty\":1.48,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"QHvgikpRpHtCmypvN\",\"instructions\":\"For each challenge of this series you **do not** need to submit a function. Instead, you need to submit a **template string** that can formatted in order to get a certain outcome.\\n\\nWrite a template string according to the following example. Notice the period `.` at the end of the strings:\\n\\n### Example\\n```\\ntemplate = \\\"yourtemplatestringhere\\\"\\ntemplate.format(\\\"name\\\", \\\"Johnny\\\", \\\"$\\\", \\\"<\\\", 10)) ➞ \\\"My name is: Johnny$$$$.\\\"\\n```\\n\\n### Tips\\nThe content of a placeholder can be formatted dynamically by positional or keyword arguments:\\n\\n```\\n\\\"{:{align}{width}.{length}}.\\\".format(\\\"Peter\\\", align=\\\">\\\", width=5, length=2) ➞ \\\"   Pe.\\\"\\n```\\n\\n### Notes\\n- Submit a string, not a function.\\n- Do not change the name of the variable `template`.\\n- You can find all the exercises in this series [over here] (https://edabit.com/collection/hCYFNwxGwnAYzq497).\",\"isFree\":false,\"isHidden\":false,\"lab\":\"Test.assert_equals(template.format(\\\"name\\\", \\\"Johnny\\\", '$', '<', 10), \\\"My name is: Johnny$$$$.\\\")\\nTest.assert_equals(template.format(\\\"last name\\\", \\\"Doe\\\", '*', '^', 5), \\\"My last name is: *Doe*.\\\")\\nTest.assert_equals(template.format(\\\"favorite place\\\", \\\"Edabit\\\", '', '', ''), \\\"My favorite place is: Edabit.\\\")\\nTest.assert_equals(template.format(\\\"pokemon\\\", \\\"Arcanine\\\", '', '>', 10), \\\"My pokemon is:   Arcanine.\\\")\",\"language\":\"python3\",\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,1,0,2,3,2,3,2,3,2,2,1,2,1,1,3,1,2,1,0,0,0,2,2,0,2,0,0,3,1,2,2,1,2,5,1,1,2,1,2,1,0,1,1,0,2,0,0,2,2,2,2,2,1,2,1,1,0,1,2,0,2,0,2,2,2,2,2,3,2,2,2,3,1,0,2,2,0,2,3,1,2,2,2,3,2,2,0,1,2,2,1,1,2,0,2],\"rators\":[\"AasGs8AeX9Lcb9xJn\",\"tAF9Gf6PiGogbZuWs\",\"nfXGHENb5md7m355s\",\"yXuZh6CF6GqKYHzoT\",\"8PwfYqoDQFThzNtvf\",\"gJYuGdkXEWWmGRLzu\",\"hnyhBFWwNCz9mDfSi\",\"9pzFiFK3ANLjQfnr2\",\"DEDniTrstQYGounXT\",\"NRCH4eiebS7LBjSCa\",\"ZNnsMeNkdDhHjSrZb\",\"a777e8chPvJkY3tKa\",\"7tbtTx6uxePv6eQwP\",\"gb9rvGus2Jv7bjZSs\",\"FvFhg2wELM3SCZDZQ\",\"pwLQRwxrSAve2zdyQ\",\"FzxTj4GuujhwpZM7y\",\"NG8PWBSjsM8mMhQEq\",\"ahk2qiXKJA753wAJk\",\"dHZqT6h4JMwk5fPC8\",\"RgWhcJMQRoJP6b8Wg\",\"FEYpu9RWysAgW3XnP\",\"yZvzB3qFb8pkHy4dg\",\"aEm3Wvj2rFYRL8Lrb\",\"XrqNzJ2FRG8HnGiR6\",\"dKKMvaYoJunNPk5Wa\",\"yYxPzFqBgtQ9fsyHM\",\"Yp7uvStL97cC9fKkY\",\"2ptN2mhjFwFcHyPZd\",\"n2BRY9X8899dcG8Bw\",\"zd9FLSzsGz3evKafy\",\"CLypXaZksY99mpRCm\",\"H4abACFDH5t8CnnyH\",\"J5T8gZqiZXFuFDTQ7\",\"R4SjTgDnpigJYDLyL\",\"k7f82n7oxaWsmhdzT\",\"jNvegJWCk5HCtEMbK\",\"syRNbbPdLCGXbH2Gy\",\"iojEnnY9FsMfYzp6f\",\"p8qqFdJ3FSk5x9z3G\",\"Pe8vWpDHRuH9nSGKW\",\"oHbErJxjYJhD66d5w\",\"JJmKj7ACC2P52uo95\",\"yjtdwc2AC4jA2RWtn\",\"oBcs8GLX2ZFLXQy8y\",\"6428wKHtwKkFdvBs5\",\"HqmxnQJM66Y57twhn\",\"SkQcb2sRn4as5KpnN\",\"YcCLwitFMAEJSnxAW\",\"6gS4E2C84vBYTYeDZ\",\"GpobkaeudKjYdotzG\",\"ta5CrWnBCRusD2WMo\",\"YA7SDhpgEtsqynvNL\",\"MCw7uAcoWcSTBTmr3\",\"XkJ9G89xpZiTj58Eq\",\"RehJGBFS6CYiWdjZx\",\"M8dQuMrEpP8Hc3tHN\",\"3LiSLdtN58n46NEqg\",\"9CoqdidjM9KbeKnHY\",\"sHjfbGQGLHE6JR6qu\",\"TPhfpB5tzQWSSn67n\",\"HnJuYrgwLJwXtboE3\",\"yZMHS95vJhb7xa3A3\",\"nC4sPB69yYuTSks9T\",\"8WpvgSbQciTQWdd8T\",\"KLmLKaJPfsYxp42p2\",\"Kz7ee56Ht4Ns8JjBj\",\"8BFSTCnoe2QggN64c\",\"ji5f27FPz4wRRF6Ls\",\"tpxMgkGSHwBjS95Ta\",\"5f6oSeq4r5WTXLdCQ\",\"aKzYNPqBqb3J3ZgyD\",\"qD2LrwaDrSdiybLKY\",\"wRttWTM59y8m5mx7x\",\"2QziknsznNeMPRh3g\",\"c2u7qfdaYxcyuydtu\",\"mzsaCBQP3e6YourDN\",\"J3upzLHuEwXH7Z2hx\",\"6MjSiiBLPcvXbXcaZ\",\"d8qtzoLB264iP8tdY\",\"cAP3n5NY64uoMwzRR\",\"RGMbFMZXJr7DhcAJy\",\"dYPkStFnLvAMsHSzZ\",\"xSNdn3XovWh6c6Bjd\",\"CEd9tLdXeDeNHSzys\",\"mxgQ9Jt29CNkP9qa5\",\"qAby4AWXmTNeusvg3\",\"uwQvy9tNNxDYqgu7g\",\"5XiuAqicKD4hBdu63\",\"PXAcsKkssS2yLyDv2\",\"NyMjb994ykb5bdCtS\",\"4fjSgcqhQQZM2ZFRP\",\"C2AfMipCicfD58WJ9\",\"BMJffXrypJSAzTG7w\",\"XeNskNoh5DcHuKTWX\",\"pduNK68oazqQTtbLp\",\"P75dsyFTBr7DQr8No\",\"Jqk2uJZZxEv5wZFze\",\"icsLTze3op3SPQbzy\",\"o4ixjQGSaYqA2JoM4\",\"LW8PqW4HFXWfoJGo6\",\"JS3hNM3XXkxPdg3yk\",\"Tuqd4EysQpZLYA6be\",\"5hQnRWiKkhgKJXNMP\",\"5S9nX4rKsnCcnv4Cz\",\"QRv96jmNaYsWkxQEG\",\"Ds7L5bksw2QRHjrKL\",\"StNu7DPyTgEStZsMY\",\"8JyqsSbN2FJXPr3cw\",\"2EbDCCJJvCfKkbYia\",\"yod5YhKtPqw2GfG9B\",\"AFfw7cGg83uYk2Miy\",\"BrTDhPJcACL2bsrpJ\",\"c2q7mY39z5JPEMCaM\",\"PC3pLs36zNzpRDSuE\",\"RoGGD5cpHb4ftdLDv\",\"2PufnQcsHsfymufX3\",\"54BFnXEjY3FuRNYpN\",\"hR7GMiqGap4CzEWSy\",\"4TmgHkn5vqyHK3sYC\",\"4Lwjr34ypKNQNQCar\",\"dzS6WBTMHyFEag6Fp\",\"CHvzhtXnv8HTbPQ56\",\"Qyfyyw6oC4EHAndzo\",\"Wi4H6ayKsNDWWQCG5\",\"8uiLiJcmWxWe6qw65\"],\"total\":141,\"quality\":[5,4,5,4,5,5,5,5,5,5,5,5,3,5,4,5,5,4,5,5,5,5,5,5,5,5,5,5,4,5,5]},\"flags\":0},\"summary\":\"For each challenge of this series you do not need to submit a function. Instead, you need to submit a template string that can formatted in order to get a certain outcome.\\n\\nWrite a template string according to the following example. Notice the period . at the end of the strings:\\n\\nExample\\ntemplate = \\\"yourtemplatestringhere\\\"\\ntemplate.format(\\\"name\\\", \\\"Johnny\\\", \\\"$\\\"\",\"tags\":[\"formatting\",\"strings\",\"language_fundamentals\"],\"timestamp\":{\"$date\":1590308071107},\"title\":\"Format VIII: Dynamic Formatting\",\"quality\":4.774193548387097,\"family\":[{\"_id\":\"K4ifFgsgRitT7MDiz\",\"language\":\"python3\"}]}}"]