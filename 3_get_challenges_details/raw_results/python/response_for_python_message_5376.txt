a["{\"msg\":\"result\",\"id\":\"1401\",\"result\":{\"_id\":\"7DjphCrJvFiKRcpdm\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"def covered_integers(lst):\\n\\t\",\"difficulty\":2.037974683544304,\"familyId\":\"aRAcLh6DkfscZ5hGT\",\"instructions\":\"Write a function that returns the total number of **integers** covered from a list of intervals (**inclusive**). In other words, return the number of different integers in the lists.\\n\\n### Examples\\n```\\ncovered_integers([[80, 81], [1, 2], [9, 11]]) ➞ 7\\n# Seven integers are covered: 1, 2, 9, 10, 11, 80, 81\\n\\ncovered_integers([[3, 6], [4, 6], [5, 6]]) ➞ 4\\n\\ncovered_integers([[1, 2], [1, 2]]) ➞ 2\\n```\\n\\n### Notes\\n- Intervals may overlap, be subintervals of each other, or be identical.\\n- For each interval `[l, u]`, `l` and `u` will be integers, and `l <= u` will always be true.\",\"lab\":\"Test.assert_equals(covered_integers([[80, 81], [1, 2], [9, 11]]), 7)\\nTest.assert_equals(covered_integers([[3, 6], [4, 6], [5, 6]]), 4)\\nTest.assert_equals(covered_integers([[1, 2], [1, 2]]), 2)\\nTest.assert_equals(covered_integers([[1, 11]]), 11)\\nTest.assert_equals(covered_integers([[8, 9], [102, 104]]), 5)\\nTest.assert_equals(covered_integers([[1, 1], [5, 5], [8, 8]]), 3)\\nTest.assert_equals(covered_integers([[0, 5], [5, 5], [8, 8]]), 7)\\nTest.assert_equals(covered_integers([[1, 5], [3, 5], [4, 6], [5, 7]]), 7)\\nTest.assert_equals(covered_integers([[-3, 10], [-2, 9], [-1, 8], [0, 7], [1, 6], [2, 5], [3, 4]]), 14)\",\"language\":\"python3\",\"summary\":\"Write a function that returns the total number of integers covered from a list of intervals (inclusive). In other words, return the number of different inteters in the lists.\\n\\nExamples\\ncovered_integers([[80, 81], [1, 2], [9, 11]]) ➞ 7\\nSeven integers are covered: 1, 2, 9, 10, 11, 80, 81\\n\\ncovered_integers([[3, 6], [4, 6], [5, 6]]) ➞ 4\\n\\ncovered_integers([[1, 2],\",\"tags\":[\"arrays\",\"higher_order_functions\"],\"timestamp\":{\"$date\":1556082189578},\"title\":\"Number of Covered Integers\",\"stats\":{\"completed\":{\"total\":268,\"ratings\":[2,2,2,2,2,2,2,2,2,2,3,1,3,3,3,2,2,2,3,1,1,3,2,0,0,2,2,3,1,1,1,3,3,0,3,2,3,0,2,1,3,2,2,3,3,4,1,2,3,1,2,2,2,2,1,1,2,2,2,3,2,3,0,2,3,2,2,1,2,1,2,3,2,3,2,3,2,3,3,3,2,2,0,3,3,2,2,3,0,1,3,2,4,1,2,0,3,0,2,2,3,3,2,2,3,2,0,2,2,3,3,2,3,1,3,2,3,3,3,1,1,1,3,3,1,2,2,3,2,2,1,1,2,1,2,3,2,2,2,1,2,2,5,3,3,3,1,2,2,2,3,2,3,0,1,3,3,3,3,3,1,1,2,1,3,1,3,2,3,3,3,2,3,4,0,2,2,1,3,3,2,3,2,2,3,2,2,1,3,2,3,2,1,2,3,3,2,2,2,1,0,2,1,2,3,2,3,1,2,1,1,3,0,0,2,2,1,2,1,3,0,0,3,2,2,2,2,3,3,2,2,2,2,0,3,3,2],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"yZvzB3qFb8pkHy4dg\",\"tAF9Gf6PiGogbZuWs\",\"8JyqsSbN2FJXPr3cw\",\"M8jrv2FfpMQp9Qzpx\",\"gb9rvGus2Jv7bjZSs\",\"T3ZAuoMrJjvZwN55B\",\"ab7BsQuhDo3QgE6bh\",\"FikSPhcrHBpQ4CyGC\",\"Mb5sjE2qnvjL2xcBG\",\"PFjMZGHNAPTkgd7tq\",\"AF6LgdKhEdzwgRJom\",\"7g3vZaQXhLpxrajyg\",\"C9LKGu2g5hSijvDzA\",\"6u7yc9m6HuHGbHzph\",\"td7qPZ7Lv4pEWT2Ya\",\"jYJ26SiLKBu5GRumq\",\"aXCm9vWqKwL9XFYoj\",\"PYg2boGDLrEcF3i4j\",\"uSh3aNxzD28jBuhxa\",\"GAMLghpc9JMXz3jvs\",\"PSrcg6fy835R4c5CW\",\"vLkNd9BegNd7NKqtB\",\"GjHaK5ioX4xNYxPMa\",\"yrCNkFYQBEDE76eFS\",\"3ShPMJeCcBLfBGqBX\",\"ahMz2A4pnX8KTfv9Z\",\"kQH5b8MXJunh84Czq\",\"5s4qhuRJijYaDNXva\",\"4HC75a4BAtjSd8jPv\",\"jHrtWDGBhkbuWa7fG\",\"e7hZa9EqDzpwivGPH\",\"Z8T9LqguEJ8f6ocuk\",\"XKi8iZXBCHCaebSHh\",\"Pa5CZXXuHDLNzyXqA\",\"QKYi6pYeaYFovNHX4\",\"xBnqu9K2pDaMw9G5o\",\"icMfxPCiep8MLWPnX\",\"BFNm9gacwba9KyLFW\",\"WkWyq9wMkZhXB6zsD\",\"ZGhZhnqAHiQypqZrp\",\"MJMWfiW978otApbcG\",\"hsrNYf3WbexXJKhCq\",\"gMJhLdyw3tH7L96X2\",\"AYaEkTWLMmfzpwejr\",\"ekbfbYdyZeXHvaG8c\",\"JEAi9mG3vvBomJ3Yu\",\"aCNWav8S8Try9RkC6\",\"nzx4uAPg3hCceyFPE\",\"x9A83cZkyA7E7utn3\",\"tKCgSWX7X4CWHMWGw\",\"CroM4rS3zbmdrB8Mf\",\"nF9pCCzbGDhzvWgaw\",\"T2vhHPhRR96hRizq8\",\"vtBrNNcQn8TFSs275\",\"ToTyoZx9QFGFn2BKE\",\"iqmPb9JuJDgTFeR8Q\",\"Dd4MibaSEPy7br7fE\",\"cR3ibTMxLyEdDFCHY\",\"EjbrnYyrH8FW4Foju\",\"7G4BWvmKhTvXg8Mei\",\"vF7SNNRvLK3mu4W4H\",\"m6YXN9vH959zn3BJB\",\"GR5P7gLKtxGyTAZTB\",\"FgkYtHLxeD8pETJ8T\",\"jBrfDR9DzqxL2Ca5H\",\"ozqX8HKbqPZnrjjaN\",\"nfXGHENb5md7m355s\",\"Nj6FwgBtAXsaQwsM2\",\"KQNQFywtuLLdpBseS\",\"2fxapKr8XGdNeaKi2\",\"EXZfPb8YH28EL8Rh9\",\"7hzSvcYdq6QjoRnJY\",\"Jg8ZSRXe3NoDMCqGu\",\"ZbunZ3ASwaBpgteiZ\",\"hSfK7dhSiKdNjMbLr\",\"8aPJNKDxXq7884eJb\",\"HQxp7NcdvF92G7bYS\",\"RXb6cmCNaYbczuDwy\",\"otXtuQygbcYATMZoP\",\"s5M5RvgqR9BhB9JoC\",\"3efW5qCKraPjzEfiX\",\"N2wnZXkhDH86mgjQ8\",\"RyCu8LFdoba6Gvzp9\",\"oqGkxvASXq52iTDvp\",\"fAoLuqbGvHn4w2PHf\",\"v9KtC8YLbMWmXiW2H\",\"qBaLGrm952ii9K23M\",\"Dw8RZgg5iHBuFrWwQ\",\"PBqNfWQpXX8co9tKS\",\"qSf5gxf5TrdadBfnA\",\"HqmxnQJM66Y57twhn\",\"hJkX94ypDvaMPFCdw\",\"i8YPbosHqqhtQgfc8\",\"u5u2YpHXiNgzDNJdX\",\"bLQYFBhBthDLQE3LN\",\"tsgTLnTRSv6ojieBh\",\"kBmhcwkCqxiy4GwiZ\",\"JiDXhxGzzSuXrBnmE\",\"ySRnygsLwGGsmZhfa\",\"hAzy9apJgLWwRFGPJ\",\"r5YeFXWikthQXogSb\",\"6uBnSGvibaiNFkeKF\",\"qm75TsDNyQetyWWJ3\",\"WX6R5brerMTrHs5ZM\",\"JKb5rhL6DKcCAypF9\",\"6ShafRStcvew4GfCh\",\"5uA8xmgifmiJrqbzy\",\"K96FwtfDDN5WM4Bb7\",\"8PwfYqoDQFThzNtvf\",\"Jqk2uJZZxEv5wZFze\",\"C4QntmkYtB89GNtpd\",\"yoYQqaY6GszuTkNSs\",\"AnjjyuE9aWLzK3nkg\",\"ftRou9zcw69GCx4iv\",\"ydEdzuCCZt4yny9Rq\",\"2innwjWqxJHo4eRGh\",\"5J4tAkdA45c76xAfk\",\"PytNZK9mNiRiZxPrm\",\"Yp7uvStL97cC9fKkY\",\"AasGs8AeX9Lcb9xJn\",\"pmgFEciNrd3ES9tuu\",\"4CFzv558qbGcpQwc4\",\"WLFPvm65aHfgwQy7N\",\"w3A7cBWyAfukk6xEQ\",\"CEd9tLdXeDeNHSzys\",\"euPBBaYXyS8RBr9KB\",\"boMXxa5zxP6yJHTje\",\"mDWNyaaQ9hvPCRzSd\",\"rzX5PujzJGJK7mMCi\",\"orFLgPDw9H5MDzmwo\",\"8LfTheFzvicameoz9\",\"aEm3Wvj2rFYRL8Lrb\",\"J5T8gZqiZXFuFDTQ7\",\"jpiYk9LbC3oDg84dz\",\"dXMbkgQFoN37BhruB\",\"esY84P5NBKF8TWHDv\",\"ZNnsMeNkdDhHjSrZb\",\"3Zceb8GudqAG3onG3\",\"gJYuGdkXEWWmGRLzu\",\"YRstQuthRkFeBiXug\",\"kYWb8BwpKwunQkxeX\",\"EjbDDFRECrzQDkzrX\",\"So6PHm74mfJuY2WTs\",\"yYxPzFqBgtQ9fsyHM\",\"3pxHTZBsv7MKzFG6Y\",\"dHZqT6h4JMwk5fPC8\",\"n2BRY9X8899dcG8Bw\",\"ekQh3jzgGLsEMbKo3\",\"xXxcBvT3poSuSCgBN\",\"ahShRaM3SEFT33gvS\",\"KBzzKtGw9NxkqD2FE\",\"KRmxvA4mWgfKvHmYN\",\"rgvAJFwfCeYoYnFTK\",\"KdNDysEsy2TW5QRJ2\",\"qS5Xbh5sBC28e6j7E\",\"HF28xZKSLM9wEuqNg\",\"wT5gGgvjKc5wz59AQ\",\"yr822PZmmiDDenxpB\",\"GM2X83qnuLXTHe5zA\",\"GamaMNrnhrjj5tXTx\",\"hnyhBFWwNCz9mDfSi\",\"Nua6T3dBurBy3Qfg9\",\"DEDniTrstQYGounXT\",\"yKttxy9JGn5Jzwuj6\",\"Ecg4m7srYGgZsb4Ck\",\"DrkR35NqnP9NDLbq6\",\"pkQBaSzukotPEXmrD\",\"bJxaKHJqR82EWw8Su\",\"C75Nyf5jotZJ9TfPW\",\"iojEnnY9FsMfYzp6f\",\"zZDaXBxMzTCBhNkgL\",\"CwXsu25ygLEwQbmQC\",\"WwMjW4MJRuNFExoPc\",\"xdgy7nWSKCekXnaJM\",\"iS5BrkGLzJyPK7nKt\",\"5qpAGt7e3P89JJvNe\",\"zZaiKmWyThq62RLdR\",\"yjtdwc2AC4jA2RWtn\",\"ZrKCkX7xxGGZzauFW\",\"4ZicxybyvEsuA9iET\",\"f2BoqyCpgnmjEjLqx\",\"KZ2xddpM2f9JRaryB\",\"jL4y5fTJAMBjhZmko\",\"DYDJTyGgKFnBRLm2r\",\"gSFJPsMXnqAog3Q9f\",\"8fZxjQfuXw5HMSRJM\",\"GGprTwrkjuccmrQRg\",\"QRv96jmNaYsWkxQEG\",\"DPi9QGLctq2y76KuE\",\"qD2LrwaDrSdiybLKY\",\"xn7uGNKeAwPEkP9oA\",\"dkcmCKwqApX5jBggc\",\"9FCeFzjPA4jrQ7oHW\",\"J3upzLHuEwXH7Z2hx\",\"6MjSiiBLPcvXbXcaZ\",\"oBcs8GLX2ZFLXQy8y\",\"7scpcTEp3SEx5Wjg9\",\"MDzhpCFApGZvzoSt9\",\"dLHj72AadNKDqG6QX\",\"4RsakkyRXyYGwFxEa\",\"cAP3n5NY64uoMwzRR\",\"qAby4AWXmTNeusvg3\",\"CHvzhtXnv8HTbPQ56\",\"KJCDwGkoXh8qtbbKr\",\"CTKmXtrqDYqJBnuy8\",\"GGdmhAvxXhqhhibJN\",\"FEYpu9RWysAgW3XnP\",\"EfxwqhYdapX3dMQC2\",\"Wpn95NqWxncQrwNgz\",\"bvmTE46bfcM4ogj34\",\"NfMJuiBk6FN5Jc6ow\",\"H9KZi2cjt4FwH7qog\",\"2PufnQcsHsfymufX3\",\"8BFSTCnoe2QggN64c\",\"fznzd3qnvtbFkkizz\",\"fbr22rabEJMfBp7vD\",\"qzXAMXsHZGT8o5hTA\",\"AFfw7cGg83uYk2Miy\",\"gKnWjDjwrJh7MK2df\",\"T6iBEE2jp7f7iEF2P\",\"o4ixjQGSaYqA2JoM4\",\"yod5YhKtPqw2GfG9B\",\"8sNv5PTHa7XQ8bNqR\",\"rhS8qXRjZcpDXkwnE\",\"9BCfqtLdPhJBzL9NR\",\"buX4mCQhtXCfBjeno\",\"d8qtzoLB264iP8tdY\",\"5HCu9Ydd86QgHDRNP\",\"Ds7L5bksw2QRHjrKL\",\"ey3CASd6Je5LEJzfB\",\"mvJBakQ35CWAnbbEZ\",\"JhX7jvtpwNyxcc39m\",\"BrTDhPJcACL2bsrpJ\",\"Qyfyyw6oC4EHAndzo\",\"nkH3HfJXLMNcBMM79\",\"3KkyQm77zsew58Dc2\",\"KfGmizjwhtMAaXspt\",\"RErqK2yM94wYyD2hk\",\"eMuCpJ2spXWkJjWNz\",\"eYisiNCtyfk7Kg4Yr\",\"AQSqD9oNv2uPfxZCR\",\"jkbavR2ATFJcpmo8M\",\"9pzFiFK3ANLjQfnr2\"],\"quality\":[5,5,5,5,2,5,5,5,5,5,5,5,5,5,5,5]},\"tests\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.8125,\"family\":[{\"_id\":\"Tf9f6YxD9XMYxHXxM\",\"language\":\"cpp\"},{\"_id\":\"Jaox8TDLREobGf9oJ\",\"language\":\"javascript\"},{\"_id\":\"7DjphCrJvFiKRcpdm\",\"language\":\"python3\"},{\"_id\":\"zj84rPbkhgNTTPZk7\",\"language\":\"ruby\"},{\"_id\":\"MgMLYrp9T96NXbXAj\",\"language\":\"swift\"}]}}"]