a["{\"msg\":\"result\",\"id\":\"627\",\"result\":{\"_id\":\"MYtinBHDSk4Bk7HnH\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class WordsInSentence {\\n\\tpublic static String findLongest(String sentence) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":2.257142857142857,\"familyId\":\"RNe4kWDMLPviBPFQ6\",\"instructions\":\"Write a **recursive** function that will return the longest word in a sentence. In cases where more than one word is found, return the first one.\\n\\n### Examples\\n```\\nfindLongest(\\\"I will and ever will be gratefully and perpetually loving you Tesh!\ud83d\ude18\\\") ➞ \\\"perpetually\\\"\\n\\nfindLongest(\\\"A thing of beauty is a joy forever.\\\") ➞ \\\"forever\\\"\\n\\nfindLongest(\\\"Forgetfulness is by all means powerless!\\\") ➞ \\\"forgetfulness\\\"\\n\\nfindLongest(\\\"The word strengths is the longest and most commonly used word with a single vowel.\\\") ➞ \\\"strengths\\\"\\n```\\n\\n### Notes\\n- Special characters and symbols *don't count* as part of the word.\\n- Return the longest word found in **lowercase** letters.\\n- A **recursive** version of this challenge can be found via this [link](https://edabit.com/challenge/e3GaeWuJQ38fsFKS2).\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"/** \\n======================================= \\nTestGen 3.1 for JUnit 4.13.0 \\t\\t\\nTest Case: WordsInSentence::findLongest \\nTimestamp: 10/18/2020 04:17:33 PM\\n--------------------------------------- \\n® DARKKO 2020 © \\n======================================= \\n\\n**/ \\n\\nimport static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class WordsInSentenceTest { \\n\\t\\n\\t@Test\\n\\tpublic void test1() { \\n\\t\\tassertEquals(\\\"perpetually\\\", WordsInSentence.findLongest(\\\"I will and ever will be gratefully and perpetually loving you Tesh!\ud83d\ude18\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test2() { \\n\\t\\tassertEquals(\\\"darkness\\\", WordsInSentence.findLongest(\\\"Hello darkness my old friend.\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test3() { \\n\\t\\tassertEquals(\\\"yourself\\\", WordsInSentence.findLongest(\\\"Yourself is your soul's captain and fate's master.\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test4() { \\n\\t\\tassertEquals(\\\"daughter\\\", WordsInSentence.findLongest(\\\"The pretty daughter's toy, a doll, is as pretty as her.\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test5() { \\n\\t\\tassertEquals(\\\"forever\\\", WordsInSentence.findLongest(\\\"A thing of beauty is a joy forever.\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test6() { \\n\\t\\tassertEquals(\\\"forgetfulness\\\", WordsInSentence.findLongest(\\\"Forgetfulness is by all means powerless!\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test7() { \\n\\t\\tassertEquals(\\\"strengths\\\", WordsInSentence.findLongest(\\\"\\\\\\\"Strengths\\\\\\\" is the longest and most commonly used word that contains only a single vowel.\\\"));\\n\\t}\\n\\n}\\n// end of tests\",\"language\":\"java\",\"quality\":0,\"summary\":\"Write a recursive function that will return the longest word in a sentence. In cases where more than one word is found, return the first one.\\n\\nExamples\\nfindLongest(\\\"I will and ever will be gratefully and perpetually loving you Tesh!\ud83d\ude18\\\") ➞ \\\"perpetually\\\"\\n\\nfindLongest(\\\"A thing of beauty is a joy forever.\\\") ➞ \\\"forever\\\"\\n\\nfindLongest(\\\"Forgetfulness is by all means p\",\"tags\":[\"arrays\",\"strings\",\"validation\",\"recursion\"],\"timestamp\":{\"$date\":1603034123900},\"title\":\"Find The Longest Word\",\"stats\":{\"completed\":{\"total\":30,\"ratings\":[2,2,2,2,2,2,3,1,3,1,3,3,2,3,2,4,2,2,0,0,2,2,1,3,4,0,3,5,3,3,2,3,2,3,2],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"rehehi2Tr2mwaEoJE\",\"rvojHhKH3DaxotefQ\",\"PnpLFxGKMRQyEebug\",\"azAzSkvJd7eyXY9x9\",\"C9yBWYcZsjmJYww3K\",\"3pdgguqZgNDSAJSGm\",\"DzvdGwHEjqsX7wyKr\",\"gXTAie79kiw28tx5u\",\"yXGiiSAR5nBHnH3yr\",\"qWEz8tGrQeTexjyxA\",\"FTHXj9Rfx9wdujSzy\",\"fbgn5575LS3jsxABM\",\"jyoLggHk8xQKZuoQC\",\"jXTnL3JatkKjoifyb\",\"mQKWauR6b252TmdX4\",\"8Xx8nWXRydHDBGfQf\",\"a82zHoDpGHXb8rBZX\",\"Ym8AjbKGSJooun3nt\",\"vRXuYYBNuHEQ29fbm\",\"82weQfHHmno4Mq4X7\",\"7YbGHKwApShJ7J4NK\",\"buX4mCQhtXCfBjeno\",\"oMZovHkR6QqNvQwyc\",\"rhS8qXRjZcpDXkwnE\",\"qaPjAANdnxFnWfj5d\",\"sxci7DYKNa6q22Sjq\",\"KMR6vNzvSKMA2cXnK\",\"PAEWysAAFheYiYPBp\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"MYtinBHDSk4Bk7HnH\",\"language\":\"java\"},{\"_id\":\"cq8taH4P7NkTm3hL2\",\"language\":\"javascript\"},{\"_id\":\"Z6kRGLpYgSuFQJ7Rx\",\"language\":\"python3\"}]}}"]