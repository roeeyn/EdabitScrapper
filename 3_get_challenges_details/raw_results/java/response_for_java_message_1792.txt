a["{\"msg\":\"result\",\"id\":\"453\",\"result\":{\"_id\":\"9SxN2Mh85B5SBTFWP\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class StringAddition {\\n\\tpublic static int addNums(String nums) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.64,\"familyId\":\"BWxTxEyZZeu2wK8jn\",\"instructions\":\"Given a string of numbers separated by a *comma and space*, return the **total** sum of all the numbers.\\n\\n### Examples\\n```\\naddNums(\\\"2,  5,  1,  8,  4\\\") ➞ 20\\n\\naddNums(\\\"-12,  -13, 12, 17\\\") ➞ 4\\n\\naddNums(\\\"1,  2,  3,  4,  5,  6,  7\\\") ➞ 28\\n\\naddNums(\\\"10\\\") ➞ 10\\n```\\n\\n### Notes\\n- Numbers will always be separated by a comma and space.\\n- Your function should accept negative numbers.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"import static org.junit.Assert.assertEquals;\\nimport org.junit.Test; \\nimport java.util.stream.Collectors;\\nimport java.util.stream.IntStream;\\n\\npublic class StringAdditionTest {\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertEquals(20, StringAddition.addNums(\\\"2, 5, 1, 8, 4\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertEquals(28, StringAddition.addNums(\\\"1, 2, 3, 4, 5, 6, 7\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertEquals(10, StringAddition.addNums(\\\"10\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertEquals(-7, StringAddition.addNums(\\\"-12, -8, 2, 11, -16, 16\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertEquals(90, StringAddition.addNums(\\\"25, -4, -15, -7, 27, 12, 29, -6, 20, 9\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertEquals(-51, StringAddition.addNums(\\\"24, 7, -15, -28, -21, 6, 5, -6, 23, 24, -22, 30, -21, -10, -10, -12, 24, -18, -13, -27, 22, -30, -11, -13, 6, 7, 27, 1\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertEquals(-81, StringAddition.addNums(\\\"-17, -18, -18, -14, -8, 0, 12, 2, 10, 5, -8, 12, -17, 8, -5, -23, 2, 29, -30, 13, -22, 19, 13, -18, -8\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertEquals(128, StringAddition.addNums(\\\"16, 8, 19, 25, 18, 26, 2, 14\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test09() { \\n\\t\\tassertEquals(-38, StringAddition.addNums(\\\"-18, -10, 9, 12, -16, 22, 2, 17, 10, -25, 1, -25, -15, -29, 12, 11, 4\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test10() { \\n\\t\\tassertEquals(-94, StringAddition.addNums(\\\"12, -30, 26, -18, -4, 25, 19, -22, 7, -17, 3, -30, -27, 10, -12, -12, -24\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test11() { \\n\\t\\tassertEquals(81, StringAddition.addNums(\\\"0, 21, 20, 0, 26, -9, 12, -9, 20\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test12() { \\n\\t\\tassertEquals(28, StringAddition.addNums(\\\"-27, 28, -9, -9, 4, -22, -13, 0, -2, 19, 9, 5, 20, 21, -3, 22, 6, -10, -1, -12, 2\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test13() { \\n\\t\\tassertEquals(58, StringAddition.addNums(\\\"13, -29, 13, 22, 23, 14, 2\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test14() { \\n\\t\\tassertEquals(-113, StringAddition.addNums(\\\"-18, 3, 30, 13, 20, -23, -18, -27, -30, 1, -19, -3, -19, -22, -1\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test15() { \\n\\t\\tassertEquals(82, StringAddition.addNums(\\\"18, 20, 11, -7, -1, -7, -17, -3, 25, 23, 25, 6, 7, -1, -11, -24, -19, -18, 8, 24, 29, 19, 13, 0, -19, -25, -2, 8\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test16() { \\n\\t\\tassertEquals(-154, StringAddition.addNums(\\\"-13, -30, -1, -9, -25, -9, 11, -28, 0, 10, -23, -20, -5, 21, -29, 6, 20, -23, -23, -24, 30, -14, 24\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test17() { \\n\\t\\tassertEquals(-11, StringAddition.addNums(\\\"5, -16\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test18() { \\n\\t\\tassertEquals(26, StringAddition.addNums(\\\"-28, -1, 12, 15, 16, -11, 23\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test19() { \\n\\t\\tassertEquals(8, StringAddition.addNums(\\\"16, -3, 15, -20\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test20() { \\n\\t\\tassertEquals(25, StringAddition.addNums(\\\"10, -2, -3, 6, -17, -8, -4, -9, -19, -13, 9, 19, 26, 26, -23, 5, 4, 2, -22, -10, 3, 11, -1, 10, 2, 23\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test21() { \\n\\t\\tassertEquals(-118, StringAddition.addNums(\\\"-19, -25, -27, 27, -16, -29, 19, -30, -18\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test22() { \\n\\t\\tassertEquals(-113, StringAddition.addNums(\\\"-28, 14, -19, -24, -17, 30, -1, 8, -13, -21, -4, 29, 4, 6, 29, -23, -9, -26, 8, -20, -14, -22\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test23() { \\n\\t\\tassertEquals(-68, StringAddition.addNums(\\\"-28, -11, -29\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test24() { \\n\\t\\tassertEquals(-87, StringAddition.addNums(\\\"18, -10, 22, -17, -6, -20, -25, -23, -1, 22, -16, 0, -24, 26, 20, 21, 3, -27, -24, -5, -28, -4, -3, 16, -18, 19, 26, -29\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test25() { \\n\\t\\tassertEquals(-80, StringAddition.addNums(\\\"-14, -25, -29, 3, 7, 11, 27, 12, -23, -12, 1, -17, -17, 4, 21, -29\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test26() { \\n\\t\\tassertEquals(90, StringAddition.addNums(\\\"-4, 4, 11, 18, 3, -15, 19, 25, 29\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test27() { \\n\\t\\tassertEquals(36, StringAddition.addNums(\\\"14, 7, -24, -25, 6, 5, 13, -7, -9, -3, 15, -20, 28, -19, 29, -5, -10, 12, -22, 15, -30, 3, 11, 27, 4, 21\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test28() { \\n\\t\\tassertEquals(-83, StringAddition.addNums(\\\"-28, -10, 19, 25, -27, -26, 25, -18, 10, 13, 0, 30, -4, 8, 21, -27, -25, -6, -25, -9, -14, -7, -19, 3, 8\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test29() { \\n\\t\\tassertEquals(-24, StringAddition.addNums(\\\"23, -25, 27, -15, -5, -9, -17, -9, 1, -11, -12, -17, 18, 4, -30, -15, -13, 16, -21, -7, 10, 20, 19, 27, 24, -17, 10\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test30() { \\n\\t\\tassertEquals(63, StringAddition.addNums(\\\"14, -6, -22, 12, 4, 20, -1, -22, 9, 26, 12, -17, 29, -28, 17, -10, 26\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test31() { \\n\\t\\tassertEquals(-106, StringAddition.addNums(\\\"-3, -25, 3, -2, -30, -16, -12, 3, -10, 15, -2, 15, -4, -3, 16, -8, -5, -14, -10, -14\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test32() { \\n\\t\\tassertEquals(9, StringAddition.addNums(\\\"27, 28, -18, -19, -25, 2, 24, -2, -10, 5, -12, 9\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test33() { \\n\\t\\tassertEquals(18, StringAddition.addNums(\\\"18\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test34() { \\n\\t\\tassertEquals(-14, StringAddition.addNums(\\\"-16, -13, 11, 4, 26, -26\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test35() { \\n\\t\\tassertEquals(21, StringAddition.addNums(\\\"25, -5, 11, -23, -1, 14\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test36() { \\n\\t\\tassertEquals(4, StringAddition.addNums(\\\"-6, 29, 15, 9, -28, 11, -16, 10, 7, -9, -3, -1, 11, -29, 9, 6, -7, -30, -6, 26, 6\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test37() { \\n\\t\\tassertEquals(79, StringAddition.addNums(\\\"30, 6, 22, 12, 21, -2, -1, -14, 5\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test38() { \\n\\t\\tassertEquals(-167, StringAddition.addNums(\\\"-28, -12, -8, 17, -23, -7, -26, -30, 11, -18, -16, 23, 26, 4, 24, 10, 24, -19, -22, -29, 6, -26, 16, -10, -25, -27, -28, 26\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test39() { \\n\\t\\tassertEquals(-2, StringAddition.addNums(\\\"12, -18, 18, -21, -8, 21, 24, -27, 29, -22, -16, -30, -13, 3, 14, 3, 20, 29, 30, -20, 6, -15, 0, -4, -17\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test40() { \\n\\t\\tassertEquals(-67, StringAddition.addNums(\\\"-9, -18, -26, -2, -12, 0, 3, -3\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test41() { \\n\\t\\tassertEquals(35, StringAddition.addNums(\\\"-28, 23, 30, -26, -2, 14, 4, 20\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test42() { \\n\\t\\tassertEquals(-34, StringAddition.addNums(\\\"-8, -21, -9, 25, -20, 10, -20, -9, -3, -9, 2, 20, 29, -21\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test43() { \\n\\t\\tassertEquals(69, StringAddition.addNums(\\\"20, 7, -26, -12, -10, 27, 0, -12, 11, -5, 30, 7, -9, -6, -1, 27, 21\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test44() { \\n\\t\\tassertEquals(4, StringAddition.addNums(\\\"17, -12, -15, -9, -19, 29, 13\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test45() { \\n\\t\\tassertEquals(-44, StringAddition.addNums(\\\"-7, -23, -3, -26, 10, -10, -2, -19, 6, 22, 8\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test46() { \\n\\t\\tassertEquals(10, StringAddition.addNums(\\\"11, 21, -27, 28, -30, 23, -10, 19, -13, 30, -6, -9, 28, -24, 25, 30, -23, -3, -10, 15, -29, -17, 16, -19, -16\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test47() { \\n\\t\\tassertEquals(-13, StringAddition.addNums(\\\"8, -10, 29, -29, -6, -7, 4, 16, 5, -23\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test48() { \\n\\t\\tassertEquals(-61, StringAddition.addNums(\\\"-5, -13, -17, -21, -14, -14, 30, -5, -3, -9, -18, -29, 14, -29, 20, 21, 10, 30, 13, -5, -24, -11, 11, 7\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test49() { \\n\\t\\tassertEquals(16, StringAddition.addNums(\\\"-11, -22, 19, -6, 14, 27, -22, 26, -29, -4, 14, 10\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test50() { \\n\\t\\tassertEquals(-25, StringAddition.addNums(\\\"18, 19, 9, -25, 8, -21, 5, -3, -5, 23, -28, -27, 6, 28, 24, 2, -17, -14, -12, 26, -15, -26\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test51() { \\n\\t\\tassertEquals(11, StringAddition.addNums(\\\"19, 23, -17, 13, -28, 28, -26, -8, -5, 10, -7, -11, 28, -8\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test52() { \\n\\t\\tassertEquals(-36, StringAddition.addNums(\\\"-4, -4, -28\\\"));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void randomTest01() {\\n\\t\\tint[] n = new int[10];\\n\\t\\tfor (int i = 0; i < 10; i++) n[i] = (int)(Math.random()*(200))-100;\\n\\t\\tassertEquals(IntStream.of(n).sum(), StringAddition.addNums(IntStream.of(n)\\n\\t\\t\\t  .mapToObj(String::valueOf).collect(Collectors.joining(\\\", \\\"))));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void randomTest02() {\\n\\t\\tint[] n = new int[10];\\n\\t\\tfor (int i = 0; i < 10; i++) n[i] = (int)(Math.random()*(600))-300;\\n\\t\\tassertEquals(IntStream.of(n).sum(), StringAddition.addNums(IntStream.of(n)\\n\\t\\t\\t  .mapToObj(String::valueOf).collect(Collectors.joining(\\\", \\\"))));\\n\\t}\\n}\",\"language\":\"java\",\"quality\":0,\"summary\":\"Given a string of numbers separated by a comma and space, return the total sum of all the numbers.\\n\\nExamples\\naddNums(\\\"2,  5,  1,  8,  4\\\") ➞ 20\\n\\naddNums(\\\"-12,  -13, 12, 17\\\") ➞ 4\\n\\naddNums(\\\"1,  2,  3,  4,  5,  6,  7\\\") ➞ 28\\n\\naddNums(\\\"10\\\") ➞ 10\\n\\nNotes\\nNumbers will always be separated by a comma and space.\\nYour function should accept negative numbers.\",\"tags\":[\"language_fundamentals\",\"numbers\"],\"timestamp\":{\"$date\":1607364609501},\"title\":\"Adding Numbers In A String\",\"stats\":{\"completed\":{\"total\":50,\"ratings\":[1,1,1,1,1,2,1,2,0,2,2,3,1,1,2,2,5,2,2,3,2,2,2,0,3,1,2,1,1,1,2,3,2,2,3,2,2,1,0,2,1,2,1,2,1,0,1,2,1,2],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"C9yBWYcZsjmJYww3K\",\"SExX3m5YftBWmsk2e\",\"jXTnL3JatkKjoifyb\",\"qJ2TgHitgMYZRTZ5d\",\"hDeaTsprkH6CmvSAR\",\"8Xx8nWXRydHDBGfQf\",\"kabqCExooax4JEQHE\",\"W56bWmpQeLJ9JEDsa\",\"dcW9oK2uRo8h8mBe2\",\"Ym8AjbKGSJooun3nt\",\"rWhXHhzF4W8bea6LP\",\"gXTAie79kiw28tx5u\",\"azAzSkvJd7eyXY9x9\",\"2g8JFp2gJiNGGYEFr\",\"buX4mCQhtXCfBjeno\",\"jyoLggHk8xQKZuoQC\",\"GaJNJwcdyB9ueYFst\",\"r763cST6jKTknxxuN\",\"vRXuYYBNuHEQ29fbm\",\"qaPjAANdnxFnWfj5d\",\"a49eNnfRwSMxsDJXf\",\"mG8HqKiAQFTdRZthG\",\"c7uBxu2rgY77H5d79\",\"jwQWPLoqLqwBhkpPG\",\"rhS8qXRjZcpDXkwnE\",\"4ySzqKC5s3ZRpG9di\",\"MpfytGFYF77emJ3cT\",\"srJ34BaybkQh3qRkM\",\"htXCitorobtqYymjN\",\"5yM5NJyPxM9PvSWaW\",\"PJu3WcTpfRrvHfQiS\",\"sxci7DYKNa6q22Sjq\",\"vAh63eGRwkuJtoP8v\",\"T9Cd4cvzYK7PvBf8m\",\"KMR6vNzvSKMA2cXnK\",\"unqzSsxpxj9sZ7rbD\",\"LKSXRiK4KkBcHT6JN\",\"wy7AvDwMeujSybWNY\",\"xEX3TDY6C2h82dJTn\",\"FxPDKKibxnZjGJLs6\",\"jyjKaFsAbJXdTCePh\",\"uw47663LqPME8btaA\",\"PAEWysAAFheYiYPBp\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"9SxN2Mh85B5SBTFWP\",\"language\":\"java\"},{\"_id\":\"qKQ8Bn6ontrLTTNsr\",\"language\":\"javascript\"},{\"_id\":\"stAFzKqQnWHztzrAW\",\"language\":\"python3\"},{\"_id\":\"3ta5jiGmBDXhKNNne\",\"language\":\"ruby\"}]}}"]