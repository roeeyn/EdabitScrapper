a["{\"msg\":\"result\",\"id\":\"516\",\"result\":{\"_id\":\"E9AHcnWg7fDfardLF\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n  public static boolean almostPalindrome(String str) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":2.0748129675810474,\"familyId\":\"4izvXQcJSuzwabryu\",\"instructions\":\"A string is an **almost-palindrome** if, by changing **only one character**, you can make it a palindrome. Create a function that returns `true` if a string is an **almost-palindrome** and `false` otherwise.\\n\\n### Examples\\n```\\nalmostPalindrome(\\\"abcdcbg\\\") ➞ true\\n// Transformed to \\\"abcdcba\\\" by changing \\\"g\\\" to \\\"a\\\".\\n\\nalmostPalindrome(\\\"abccia\\\") ➞ true\\n// Transformed to \\\"abccba\\\" by changing \\\"i\\\" to \\\"b\\\".\\n\\nalmostPalindrome(\\\"abcdaaa\\\") ➞ false\\n// Can't be transformed to a palindrome in exactly 1 turn.\\n\\nalmostPalindrome(\\\"1234312\\\") ➞ false\\n```\\n\\n### Notes\\nReturn `false` if the string is already a palindrome.\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(true, Challenge.almostPalindrome(\\\"abcdcbg\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(true, Challenge.almostPalindrome(\\\"abccia\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(false, Challenge.almostPalindrome(\\\"abcdaaa\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(true, Challenge.almostPalindrome(\\\"gggfgig\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(false, Challenge.almostPalindrome(\\\"gggffff\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(true, Challenge.almostPalindrome(\\\"GIGGG\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(true, Challenge.almostPalindrome(\\\"ggggi\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n\\t\\tSystem.out.println(\\\"Should return false if already palindrome.\\\");\\n    assertEquals(false, Challenge.almostPalindrome(\\\"ggggg\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test9() {\\n\\t\\tSystem.out.println(\\\"Should return false if already palindrome.\\\");\\n    assertEquals(false, Challenge.almostPalindrome(\\\"gggfggg\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test10() {\\n    assertEquals(false, Challenge.almostPalindrome(\\\"1234312\\\"));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"A string is an almost-palindrome if, by changing only one character, you can make it a palindrome. Create a function that returns true if a string is an almost-palindrome and false otherwise.\\n\\nExamples\\nalmostPalindrome(\\\"abcdcbg\\\") ➞ true\\n// Transformed to \\\"abcdcba\\\" by changing \\\"g\\\" to \\\"a\\\".\\n\\nalmostPalindrome(\\\"abccia\\\") ➞ true\\n// Transformed to \\\"abccba\\\" by changing\",\"tags\":[\"strings\",\"validation\"],\"timestamp\":{\"$date\":1568151220470},\"title\":\"Almost Palindrome\",\"stats\":{\"completed\":{\"total\":542,\"ratings\":[2,2,2,2,2,3,2,3,2,0,2,2,3,1,3,1,0,1,3,3,0,2,1,1,2,2,3,3,4,2,1,1,3,2,2,1,3,1,3,3,2,2,2,2,3,2,2,2,3,2,4,3,0,1,0,2,1,2,1,3,2,2,3,3,1,1,0,0,1,2,1,3,0,3,1,1,2,2,0,3,3,2,1,1,1,3,3,3,4,1,0,3,0,2,2,3,2,1,3,3,0,2,2,0,2,2,2,2,2,0,3,2,1,1,2,2,3,0,2,3,3,2,1,1,1,1,1,1,2,2,1,1,2,2,1,2,3,3,3,3,2,1,2,3,3,2,2,3,2,0,3,2,2,1,1,2,2,3,3,3,2,2,2,3,2,2,1,5,3,0,2,2,3,1,1,2,3,2,3,3,2,2,2,2,2,3,2,3,3,2,1,2,2,3,3,2,1,3,3,2,2,3,3,3,1,2,2,1,3,3,1,1,1,1,3,2,1,1,2,3,3,1,2,3,2,3,2,3,3,3,1,2,3,2,3,2,2,3,2,1,2,2,2,1,3,2,1,3,3,3,2,2,3,3,2,2,0,4,2,1,2,0,1,0,1,2,2,2,3,2,4,3,2,2,3,0,2,1,1,3,1,2,3,3,3,3,2,2,3,3,1,3,2,4,3,0,2,3,2,2,2,3,0,3,2,3,1,2,3,2,3,3,0,2,1,2,3,3,2,2,2,3,3,2,1,3,3,1,3,1,3,2,3,5,2,2,2,3,1,2,1,2,2,3,2,3,3,2,2,2,2,1,3,3,1,1,3,2,2,2,3,2,3,2,2,2,2,3,2,2,3,3,1,2,2,2,3,2,4,3,3,2,2,3,3,3,2,3,1,2,2,3,2,4,3,3,3,2,2,2,2],\"rators\":[\"3pdgguqZgNDSAJSGm\",\"sxci7DYKNa6q22Sjq\",\"eXW8reZCCZHQzJjQi\",\"QPSwhNevikT7q8mz8\",\"SnY7WidXJoAyyuPuA\",\"GocLTC5bMyZXHQ4zs\",\"qJZsi5rhRnWA38FbA\",\"Y4s5LuGr288y4QrN8\",\"yazNfwgLx7jSAZ8Tv\",\"2NJuDfSqdrF8kHHni\",\"fxaS5K7ZXo4FbTe36\",\"oDZaopxpPAdqWXLqz\",\"rehehi2Tr2mwaEoJE\",\"qRhXvCaA7qgDoeFnr\",\"r9hHZYPQAqJ9DbwLX\",\"XA2QfKNqbWYPcvoCH\",\"W347YkKWzfvMbkuHr\",\"J9zJq7PMGb6mqzcHW\",\"EMwdY2cLntAGABpjC\",\"AvkuNSaBw4vPM6Kae\",\"mQqXtagpD5iMw64Hf\",\"QmbMN88R2WWHbT6aX\",\"toZsDEaLL7ptnFskQ\",\"AzERMCwmKzy5zXJ3S\",\"Apx556jZqyYGFRMkD\",\"t9qQ5fTsTdPYNCw5f\",\"F9YrmbE5JY5e7233v\",\"4RHx3H8EwP2oboW8e\",\"HX6wTRoi3vN9GDtzG\",\"oeEDPQaCwHFFXsrny\",\"ko7oJ85JMftgcbkrr\",\"8saKeMSFxiE8mphQy\",\"qb2DTmzQj4vNfq5K7\",\"eZjHwgBfkQPCxmutr\",\"xEuitW7gMaqzhq6x8\",\"2PR653L4KSN97r534\",\"6hsLDaXbCCEsiBr37\",\"D9tfoBpEAnP7BSDZb\",\"DD5a6RAAY8GbXvbow\",\"ZXCJz6Add4aZAavhn\",\"QkWwESLErtonmHrNa\",\"Es4eX2stRpyoXeC7f\",\"XhjKHWhjS69Xk5CPv\",\"D7dpRtRQDmteDSAXv\",\"cjxsqXfkAPoadmppi\",\"D7Z9gmn2Kr2RRXcNj\",\"gGnDsJz5hr2t9MKCF\",\"8J2Dqqz9PaFufQzwY\",\"fZjkX29nhRTWWb75k\",\"gBGjCfJvPHswDM5JQ\",\"kkyZ4oyYQC898Nttj\",\"YLwJkF2wuL3n9o6a2\",\"PErEzX9YFvY2Yzfh2\",\"vRXuYYBNuHEQ29fbm\",\"HcPmxj2eR5enFozo8\",\"Wf7nCHS4Gq5tx659h\",\"dQXbAS8DBSRGDpY33\",\"Y8fG59oLxqYKDNSsH\",\"TrquEHytntLKHA4m2\",\"5seiNqw6ZXoF2GRRd\",\"zbGJGwm2a7un8F5T5\",\"jyoLggHk8xQKZuoQC\",\"oMLSgpSFQnY4ui8cB\",\"waz46PhT8QwnTWMBR\",\"LZSxphM8vH4A6Deqn\",\"82weQfHHmno4Mq4X7\",\"NaLEipHrg493EpHvC\",\"dMA6ww3bWRenGjLuL\",\"8zZ6xmzpiFair25qr\",\"gJbvbqosimaP4ZAYb\",\"ojmmLWL7Hvi6yYWeJ\",\"Hhvy3EGqWBXt3nFPA\",\"oFgsx4qidskXoD6N6\",\"WZujpe8yQAyZmpWHg\",\"ePzmFoJvWZQ8MoNGg\",\"ujER6DyJuNvH7EMSR\",\"m5Qm2iGKJxhzzsNeu\",\"zurh88ELCSbkS56oZ\",\"etoSR23iELGGgs9rA\",\"cNkiQaAx5iZZy7wz5\",\"RPzzGas8bEQ4X9pBy\",\"o7TYgYpWCCaxvwWbi\",\"6ZxpGyg7iviX9cPAy\",\"chPztQ2Cmh27Bmp7J\",\"DkSMZ3jZLkwviKb9g\",\"EpdxBe6nRuA9Ht7pm\",\"PJdyTJ9qwF4TCg4pG\",\"KyatAfNTkpywDjuqm\",\"BEjoBzgdBkGbGHJkv\",\"Nn69s9PCqZXN4Tecw\",\"oxCimQTS99m4yi9io\",\"kWobGYgZWJxN6ZddF\",\"D59AqZG2SoMR3nbpx\",\"mwcjmxMW9msmCFibs\",\"imoNrk36ozReP939p\",\"3iM7dNRZKEQoEZA9K\",\"RXgLif2vM276W4tgZ\",\"D7hyYZmgk2MTGcMci\",\"pBMXMQem6BpSeooYT\",\"htXCitorobtqYymjN\",\"AJx78AbueSMrJ5PSS\",\"JQGw9jsJPEasdwhNJ\",\"dcW9oK2uRo8h8mBe2\",\"wMvNbysArkmmqZBy4\",\"XuWAv9pC8zvZxjXAD\",\"mfm3gB39arY8Rjb2y\",\"wsjr8C33NPyGYAqKu\",\"JwQviySv63dgkQdhQ\",\"yAvAkMSRbfueBcbLd\",\"9xJpSQm6BFmgL3ee9\",\"6fWwjSDuMGwbDDAkD\",\"Q4HXoXTabo2dKgxwy\",\"T2vhHPhRR96hRizq8\",\"uuN5sdoMNjtRZwXiL\",\"tnYXC3cGqycxRzCgT\",\"pWtxhELmYYppvBoBh\",\"fRhyffuFFdj8dmJwX\",\"7Swig3RZXA5k5vrm9\",\"aH9yER5QQ4bFBN8SR\",\"tkceEfLGtDB5RsYdE\",\"yss2NdpwJ4mLa75uG\",\"ndhNYA8YmwHWvh3xs\",\"osXNzc2aCxspRwheS\",\"4FYe2Q6Gh47nj2XPP\",\"5sE68oxntRYoeAEMF\",\"Djm5PrsodCCK7a7Ti\",\"LxxkHoSqCegxb256J\",\"RNayPYK5a3jQw5jAc\",\"8TJGGGBCv3dstpXQ2\",\"qfuLLBNtHEXXhQ6ij\",\"TSnNnNTC9XNnHyJmr\",\"yqA89JNXhhEXyeqPH\",\"FhihuG857NbWqrHSG\",\"XFAakMetBbgqpHPWB\",\"tDmpZXS4jiZdaYBxY\",\"d8h8RgqHo7De8a3Cx\",\"5WQZzuHZBGqFeNQi3\",\"ZMZXaTqcALZ3wLvgg\",\"QWpSRiqacSshJxBKK\",\"ji5f27FPz4wRRF6Ls\",\"MCw7uAcoWcSTBTmr3\",\"LrfNQB6PsfDB5dJcM\",\"R8YWhHoXoasSsLJs4\",\"o7kxgQupXQCTusjZo\",\"kXEfD7xxEyWd7oxxL\",\"7amNEuZodjynhaDQq\",\"SDPg9kQCcJtdWF8n5\",\"KxLMWekCxzy2Eem7u\",\"28QJrwesEdbm666F3\",\"9rK2eEYTWWduLHG97\",\"C9hqkN7gYyRDcJegm\",\"NzJKK8Cuf3bcqZfcw\",\"QXkrEiAuhuXaZmL4C\",\"3tgo2FkCgeaStSvkC\",\"xzmfkwskjWqjsrRzb\",\"sE5AFRFSBy8Zkm6dg\",\"xfBNwchgroBX6XhKu\",\"xeYtKtzKFm5RvEXMr\",\"Ddj8RHEHYRJTcAwa2\",\"5r8vhoA5DnyqduYNc\",\"QZjPkugGZF8SNjZ2L\",\"5nugKwaWBJKTy6cL3\",\"T6xRoSqcSHjvP2Tik\",\"ekQh3jzgGLsEMbKo3\",\"PP5orY9GrRyMfeFar\",\"QnMJpQ9efTeuR7uiG\",\"c7uBxu2rgY77H5d79\",\"zyi5hztfAPRFnazGR\",\"rWhXHhzF4W8bea6LP\",\"8wDncskjcNW8ryghP\",\"xuybHrRrEAKCPrpB7\",\"32GLvDCL9FqXP5dJv\",\"hPx9H3YM8j2k94DNW\",\"rtkjBpKmjmbegRAHL\",\"rGJc58P2s2CgReb4P\",\"LyTxzdABBkz7u9pBW\",\"m3PZ7Z7xEGDuKQQmD\",\"9pqtNWrsTJdZcRbEZ\",\"KQTq9W7Pqg73ETYcK\",\"jRqY4i8gPemsZMBGf\",\"SCRed2mdqyWNKsfZc\",\"qNLv2R8DeTEHW8vvQ\",\"f6uGKbmMdBYCjrMBh\",\"nQfyptEov9qEHtaGc\",\"itoJJQ6NNpdp4xTDb\",\"6kz7jjJS8W4tikYQT\",\"mGaEDPw5FsDb3vdnq\",\"ZwGNXSMAER9XjKsFZ\",\"7vFrMB4Qg97tgD5TP\",\"azAzSkvJd7eyXY9x9\",\"GwDPTr6D2YpFzDNty\",\"ELbyHW5rko7fMzhdJ\",\"xWh8GpcK2dTMot4WN\",\"QS45qu2DFXcCqpAnB\",\"DzvdGwHEjqsX7wyKr\",\"Za3F5gGPy2Rzp4rfG\",\"eSYGda5XebPyQeG2a\",\"aJNFEXviXgWQsSpAE\",\"bjKYBdDcGMRTfooBs\",\"cGXpNXagsz9LCqMBS\",\"nLb2L7vY7vd9k5L4w\",\"Jispny3zgXyWsReWX\",\"4EgvAetsugpzG8HGh\",\"TgWxtdDENaq5K3FgH\",\"MBEwq8srjd2oA5W58\",\"6QHXQkQAcXMJ7C2kK\",\"zguToFXi7WtKBGaHF\",\"GG8uNMCjcttd35va7\",\"qTXNwXBDtH3j6t7hw\",\"KCEsMas5BbmiD2Q9K\",\"gSmf26ac9rrmXLxwN\",\"XqLRkScChkakbwd5z\",\"2xFvy6u3hE4LtCXMD\",\"KooD342x6eT6YiQn8\",\"eBgN48uPauTRcPpRb\",\"yXGiiSAR5nBHnH3yr\",\"iZhTdp2KS3SnZTncb\",\"gXTAie79kiw28tx5u\",\"dPeaG87LMdYeD5xLB\",\"eSewzYmhWeS4HWutm\",\"jhEgpqsboiWai8sLJ\",\"QfjvAWZnumxpSYpzQ\",\"qWEz8tGrQeTexjyxA\",\"HGk3YmKNyEWvRJywJ\",\"YL9pqyCu8xsds8J49\",\"iq55QasecYJXKz8rx\",\"GiqPq82is4HGWdZHA\",\"p8qqFdJ3FSk5x9z3G\",\"wqctmuLWeXtFnB6Ks\",\"bTCq6CQ3SGjrRfZeQ\",\"9o7Sp5AvxK75cQ3jD\",\"qMds9ppJy2Tn9wxEp\",\"mQKWauR6b252TmdX4\",\"jGGZ3bryxsN7q9Gna\",\"P5BhjZxyeHQYTNyB9\",\"xu2Zm9ktz45LtiJZr\",\"hcFuudsqE6jKFyavN\",\"jXTnL3JatkKjoifyb\",\"SDSvWibEfFvh3mFaQ\",\"FCkjDL4WAu3d6rAkC\",\"2Kzz5CubctKWfpPBp\",\"ahFjZxeyofoRq9oRw\",\"8Xx8nWXRydHDBGfQf\",\"zTM2NbjE6q5Q2HSeF\",\"eqjXExxJKYth4CT8j\",\"rjW8KKnKFkRa6BPxz\",\"FTHXj9Rfx9wdujSzy\",\"ymggGjk5woALZEbCC\",\"j5QzY7Rc4fqdTdxuv\",\"9YQWoCjETbKsajJnu\",\"yd5PakB2z33q2JrTZ\",\"hAyMFGbDEaqyHCFev\",\"mxjrvQP2vPFBjAGxu\",\"r3LXC9Z9sHHshTKtq\",\"btabi3PdyisuY5tn9\",\"zE46SymvixkeFJmPM\",\"p2woPCQKXuWJCwffJ\",\"4n4gPJDy5pGLkZfBi\",\"hD6sfDtntpqT8NR2o\",\"5R9nW7JC9PH4Pdsk5\",\"cRXX4tFmtXEfjdHk5\",\"f4zCPbQHwBfi9YueC\",\"qS6FKzrwGXKLBLgCw\",\"pzz8vFouna6JTTAiW\",\"mfbLESREogN29CYSP\",\"mMBuEpu4HJapyPECj\",\"v8ATrEFF8WHtwebDi\",\"rAvf4buALZgGJPJgR\",\"YLqdr7bYjwew2KM4N\",\"738w5PhcgyQQdnza9\",\"E8Q6h8ogLP679bvGA\",\"4F4zKYeJTDaAeAjsz\",\"Jj8ixpjhDsjpjXvqz\",\"9RjPxa9gtAe8Rspre\",\"YqwTDpXzZxtpStdQY\",\"ByYFSJTpbzeEogAJH\",\"YKc7ARi9LrP7hwP2t\",\"ZtTRS7aCHhgcJtcvN\",\"74H6JGSiskcQdvvX6\",\"S5be2eGrdCkbhWGit\",\"eExcg2NZs4EvioZ4p\",\"xAGrWcrXeeTNTEhLo\",\"uvb3PvJKi7sYziP3N\",\"h28wHSzPAjA8dt9DD\",\"FdsNxkWQ7kzfHdfyH\",\"YNR2PAWqhpSMexy47\",\"Xg3qitivyj3F2JPay\",\"TJKGcBJJQbnq7G8mo\",\"Jfxk76gKXppf6jWRE\",\"GByiumxWy7aWN63Bd\",\"Eb9MfWjXCKgtHXARu\",\"oChsWBagrJCZFGBET\",\"hFv4BuqgsJtNyvyNF\",\"yLxPKCW9rfJ4KEhbM\",\"wdhDRv4cvmPT5rfKn\",\"qSmKW4BmuYqJEtjEC\",\"DWg3CtZdqQ3aASH6m\",\"W9taP3X4xztgWsS3e\",\"NXtM3si2K3i4DySMn\",\"jyeZPhmfLtysXHswN\",\"j5RgGMHJF4QKfZpRF\",\"WTLPoP6k8HGBYqwjp\",\"Cn5dhL9883DPbhX6x\",\"tDjDygopNyXLZnjAH\",\"qMLcj34kutmNNy9Zs\",\"JF3vjca55FK3rh2kA\",\"rd2jPqFYHJDntBJnL\",\"4pagg6vw2Cjepv7tN\",\"2tadaMF3dCdqpj4xF\",\"LMQD8brbBgXD4MnzR\",\"X3woFjDPGmNSRTzWb\",\"9Rn4CZGLt7WZzprWv\",\"BAXQYFC46bxoDjEg4\",\"aykgiHhHvd2fYho4d\",\"jn7Z7SYuprezvpFuY\",\"TxD5qx2hqQa6pixAP\",\"oywrSyeq3eokKsrG6\",\"5fP4baBwLLr4qoFmQ\",\"CRMSuRGAy3MgTBwA9\",\"wwMAAxnxu4kG2PiNq\",\"wB47dmNBe3aFZZcFr\",\"sZNyyAF4C36ncsvCC\",\"EazNMSLzzFzZzEDSf\",\"zkBkzdtSEQgRWx4N5\",\"agRCzphqoW9Hw7FgK\",\"gmu2oGPZMfAs4Y7XX\",\"Fgr6vaapRcjyo3WZs\",\"HkGx7Cq3byChBSXSd\",\"pCbFsvyiooabCFEgd\",\"mYnGej9YftATPpekN\",\"bCqLPh88EXsswRvJF\",\"srX7BxDt5GoPC3PP6\",\"3zMcWxb3jzBzhfmJn\",\"37NehZqRKh7PFcjc4\",\"4CryJmbEsruAELrDt\",\"oAHPbMMdHJGSmuFBb\",\"HzcnzCKenkjx9EbiB\",\"ADJX4btYGu2BGREzT\",\"GBqLEKP5xHXJrgAjM\",\"rsN55NtmXwxFrpZKN\",\"27CbQy6BcxBvHpvsP\",\"ZXFNAqCJWG7XPJmsm\",\"wT5gGgvjKc5wz59AQ\",\"zZfMwLuoERGmybgib\",\"LCJthtzqG6bQqNeDr\",\"iwPwuaaE86cYuE7wM\",\"hnBH8gJ5QSdziMvsS\",\"bjzFGoSsiYDbyQJKD\",\"2m4ZQTKdKMDvzmKg4\",\"aZiSuYmhDKjWRSQmi\",\"ip5NJFp68Ri8eKzby\",\"gQSMPb5XmYNZbmBmw\",\"iuR277vYsG792QaST\",\"GFCJ7dYeyTKWRXiaJ\",\"zvJmG69i6mFm2hHLG\",\"Ag5fRrZ9MrAZc9vpj\",\"mDWNyaaQ9hvPCRzSd\",\"wLCKd8YmRpLqu9AjJ\",\"ct3CpGguivudLfbXF\",\"BS7gCCdCBhSaYFqbr\",\"k2KTSmL64eCeTHjKD\",\"GHQuR44txaR4BGrye\",\"tkXkji8hgdmScvPJH\",\"XbbcA7iXFz9y2XneB\",\"MnBormeR9svXZsiPx\",\"7nu8jXGs8hh7duK6o\",\"buX4mCQhtXCfBjeno\",\"KatuyrSLBmCQLD5qC\",\"7B7WkSDXu54JsefQp\",\"Zvjd7iaYRciELBpWG\",\"5quM7CEWDntcu7gSp\",\"jgwfCrxsBTx3pQRD5\",\"Aq7wRXeG9EChyLz2z\",\"vzJsLp4NdZSoTEsjH\",\"rLSB6bqHgB7ScnFLH\",\"LNCb5rksJLJ43L4Nw\",\"DGpWmyginyLs67GK3\",\"tdxi2QkC26vf5P3vG\",\"XTuxCoKrN9DZ7zaQx\",\"JYtMKrdG3SmmywsWy\",\"bw6RKcDMfTecCHwXv\",\"iAkFghEnCswmTmgwN\",\"87zxK3Q9xj7ZMoCMk\",\"wf5YBSQcRYEQjE2Ho\",\"RBGgeqf6Hiv9XaaML\",\"NFiGdq4NgKTfh8iZT\",\"72m5uJZhkRRJ4KL8p\",\"bGQ28M4RKBqRwrwca\",\"pHp9XWwL6QBTRSWPY\",\"da7s7CWyYHAXzoxkB\",\"tdinF6MRzC6AdNX8g\",\"YsMT67aKF2jmFKqur\",\"qx6yvahdH8aw4Jnm7\",\"nek28gfxXJFKKP4LL\",\"D6M23EcDXQfAk4Lag\",\"bNfsHPfcGWEBeoqkj\",\"EeaCk7N6iWuj9c76N\",\"N735m9s7a53x3oFf3\",\"Fb8e6AP6cmYPfYfy7\",\"nAuhwzeaxm62fF6Mi\",\"wFRLGjA56kj7xyhmv\",\"XKfTKW43MXDBZLCLs\",\"9RGf5tSzEwSmBkAjq\",\"Jj9kzmWpPPyWWT5dY\",\"Xuus7HhF2rdDQioTT\",\"PSijzJaZLJcLvYF5t\",\"d5NNXhhhxE98rXs6z\",\"fiyJkMrHgtkAzCPvA\",\"KgrtpAQRXCBDhpiSJ\",\"Zx9X2Ctc6RYe8WRFg\",\"gvPRkxN6Cck82Htx9\",\"gv4bqC3p7vNDn6uFi\",\"543nSRBoM8rvtKXRT\",\"P9iAdQpAKG8JKEaGp\",\"3gsWiPmwy8qEtXfZw\",\"zQswJpknkTEgsPET7\",\"t3aHKbhtAebzSDeqM\",\"SE5G2Caf3btnuGmz6\",\"9fuH5ssdjtrmSdLKA\",\"dik7wis3hBJJBkYwK\",\"hKqB9EwWMqPmSvrFi\",\"HXbTKW3jmmyRAsKrr\",\"sNLMGC3KSC2urwbNh\",\"TCgSPJ2TSmRcGL8mc\",\"Wf7QXF7pdRca5sJwA\",\"zASzEtwphbBZ3ZmX4\",\"TPCX3inKrTkTNAfYW\",\"mFwqSKyDPwd3RSduj\",\"z6qWrCrv4Z5j2nX2x\",\"Jy5en529PLnk2H4ho\",\"vCpbP2ghNSFoHq9cn\",\"h7KNnLWPKhg63dkra\",\"mG8HqKiAQFTdRZthG\",\"EKGhdj2KQRwswo3Zw\",\"rhS8qXRjZcpDXkwnE\",\"MHbjNSPKXuigcWiCK\",\"a49eNnfRwSMxsDJXf\",\"8uzjS2hsdjAGo83XZ\",\"nJqiRw6zmY9u3MPWy\",\"563onSvqgjToY79ah\",\"THPpsQQeztzCue6uh\",\"G6pnjNLxaCpiYdsET\",\"9j3MDLXnvJZLp3PYk\",\"F3sGWSif8LgZAdgjn\",\"4ySzqKC5s3ZRpG9di\",\"Ep7ktG6Kxr4dG4nur\",\"at3ewEBHoK6rNanmH\",\"RDByBQ3kdfxSoujZK\",\"FE7ewefzRiHZJ88Cc\",\"CggGfsERnPKGupFWp\",\"AeSmk2XWGcTLHB7PJ\",\"HFZrHdmpDptLWmjhz\",\"XFCd278fnpY8pYsno\",\"yjeAjSXtgLraxJiPX\",\"pxtS64qWi6waBH5BR\",\"XLs4BAJhxAydcF5e8\",\"Ej8MsG44TGHQbGC6Z\",\"J9RJf8bBmB7MpzF3m\",\"xC9XKgdhp9AqDYngr\",\"cgGGHpS5GJJi7W9xA\",\"6rvJwN4mcX7iYGjY7\",\"MqurNKkZwFQzCLMe9\",\"oWfmge7pbXXpZRogN\",\"4XkodTpxqZq3SsJJL\",\"TA9dwvnSdta7rTynz\",\"7bi35WnrMRXZbgpL9\",\"5FTQhvh8zTRWhAene\",\"9yegb3yvroNMdFnyo\",\"azMvjYE9qwKnhvaBQ\",\"pmbBNja9d3zha93MS\",\"cn6vM4DjzKNQkDFtq\",\"8g6Cm2eZ2KMQ8ajv4\",\"4GAmyE7eLRJ49XkkM\",\"GsrjAqoAdLATJH9qD\",\"JFodQijHHdRkkrZvT\",\"cmvimuNg3DzqGiFwS\",\"jCjCvyhqhpebkJn34\",\"9vyjn4WyWtJ6o2wop\",\"2NJZbusRvu3eJ4tHu\",\"KMR6vNzvSKMA2cXnK\",\"wwMcJQRvf3X59Jyev\",\"WczJXQaJ3gkxTE63v\",\"zb9xwPxJCeRiHiYpy\",\"pA3z2aLYh9fyZhJMi\",\"uLqaQvmvFbhBia4fD\",\"vKuPKDhMonmhqERkC\",\"JJbvewX2tn7aQXHqu\",\"dELmKkznAydytJTQ2\",\"WFiKrYeEs4bKFBcFR\",\"AWDDnJJ27u8bRGcZQ\",\"zTtKiCbLWzaf2Yjo4\",\"unqzSsxpxj9sZ7rbD\",\"KynKKsWLhhes3ZGiu\",\"AAZHbmDMvKPTgw2xy\",\"uw47663LqPME8btaA\"],\"quality\":[4,4,5,5,4,5,5,5,5,4,5,5,5,5,5,5,4,5,5,5,5,3,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,5,5,5,5,5,4,3,5,5,5,3,4,5,5,4,5,5,5,5,5,5,4,4,5,5,5,4,4,5,5,5,5,5,5,5,5,5,5,5,3,4,5,5,5,5,5,5,5,5,5,5,5,5,5,4]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"isHidden\":false,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":4.747474747474747,\"family\":[{\"_id\":\"AHJDxNA4GxDxKnjcL\",\"language\":\"cpp\"},{\"_id\":\"t6R99zCQ7nesR7Rdk\",\"language\":\"csharp\"},{\"_id\":\"E9AHcnWg7fDfardLF\",\"language\":\"java\"},{\"_id\":\"rm5MSuzTPGr4t3X7h\",\"language\":\"javascript\"},{\"_id\":\"APNhiaMCuRSwALN63\",\"language\":\"python3\"},{\"_id\":\"HtLDdyfKG6Fc7aNkv\",\"language\":\"ruby\"},{\"_id\":\"4QCBvB29rXBHm2yAv\",\"language\":\"swift\"}]}}"]