a["{\"msg\":\"result\",\"id\":\"709\",\"result\":{\"_id\":\"7gaPYwZiZzAwQvi2q\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class PerfectShuffle {\\n\\tpublic static int shuffleCount(int num) {\\n\\t\\t\\n\\t}\\n} \",\"difficulty\":2.75,\"familyId\":\"f35PXuaSWQeNaHkno\",\"instructions\":\"An out-shuffle, also known as an out Faro shuffle or a perfect shuffle, is a controlled method for shuffling playing cards. It is performed by splitting the deck into two equal halves and interleaving them together perfectly, with the condition that the top card of the deck remains in place.\\n\\nUsing an array to represent a deck of cards, an out-shuffle looks like:\\n\\n```\\n[1, 2, 3, 4, 5, 6, 7, 8] ➞ [1, 5, 2, 6, 3, 7, 4, 8]\\n// Card 1 remains in the first position.\\n```\\n\\nIf we repeat the process, the deck eventually returns to original order:\\n\\nShuffle 1:\\n```\\n[1, 2, 3, 4, 5, 6, 7, 8] ➞ [1, 5, 2, 6, 3, 7, 4, 8]\\n```\\n\\nShuffle 2:\\n```\\n[1, 5, 2, 6, 3, 7, 4, 8] ➞ [1, 3, 5, 7, 2, 4, 6, 8]\\n```\\n\\nShuffle 3:\\n```\\n[1, 3, 5, 7, 2, 4, 6, 8] ➞ [1, 2, 3, 4, 5, 6, 7, 8]\\n// Back where we started.\\n```\\n\\nWrite a function that takes a positive even integer representing the number of the cards in a deck, and returns the number of out-shuffles required to return the deck to its original order.\\n\\n### Examples\\n```\\nshuffleCount(8) ➞ 3\\n\\nshuffleCount(14) ➞ 12\\n\\nshuffleCount(52) ➞ 8\\n```\\n\\n### Notes\\nThe number of cards is always greater than **one**. Thus, the smallest possible deck size is **two**.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"/** \\n========================================= \\nTestGen 2.1 for JUnit 4.13.0 \\t\\t\\nTest Case: PerfectShuffle::shuffleCount \\nTimestamp: 11/5/2020 12:08:20 AM \\n----------------------------------------- \\n® DARKKO 2020 © \\n=========================================\\n**/ \\n\\nimport static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class PerfectShuffleTest {\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertEquals(1, PerfectShuffle.shuffleCount(2));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertEquals(3, PerfectShuffle.shuffleCount(8));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertEquals(12, PerfectShuffle.shuffleCount(14));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertEquals(20, PerfectShuffle.shuffleCount(26));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertEquals(8, PerfectShuffle.shuffleCount(52));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertEquals(22, PerfectShuffle.shuffleCount(70));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertEquals(51, PerfectShuffle.shuffleCount(104));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertEquals(66, PerfectShuffle.shuffleCount(208));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test09() { \\n\\t\\tassertEquals(6, PerfectShuffle.shuffleCount(64));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test10() { \\n\\t\\tassertEquals(7, PerfectShuffle.shuffleCount(128));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test11() { \\n\\t\\tassertEquals(8, PerfectShuffle.shuffleCount(256));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test12() { \\n\\t\\tassertEquals(9, PerfectShuffle.shuffleCount(512));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test13() { \\n\\t\\tassertEquals(10, PerfectShuffle.shuffleCount(1024));\\n\\t}\\n}\",\"language\":\"java\",\"quality\":0,\"summary\":\"An out-shuffle, also known as an out Faro shuffle or a perfect shuffle, is a controlled method for shuffling playing cards. It is performed by splitting the deck into two equal halves and interleaving them together perfectly, with the condition that the top card of the deck remains in place.\\n\\nUsing an array to represent a deck of cards, an out-shuffle looks li\",\"tags\":[\"arrays\",\"math\",\"loops\"],\"timestamp\":{\"$date\":1604506464437},\"title\":\"How Many Shuffles?\",\"stats\":{\"completed\":{\"total\":16,\"ratings\":[2,2,2,2,2,2,4,2,3,3,2,3,5,4,0,3,4,3,3,4],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"gXTAie79kiw28tx5u\",\"azAzSkvJd7eyXY9x9\",\"gYWkbC9XQRNAmAjoE\",\"TJKGcBJJQbnq7G8mo\",\"jyoLggHk8xQKZuoQC\",\"nHj7SC5cnmkTApbgY\",\"Yx9tWxJaqHnzGC83X\",\"LNCb5rksJLJ43L4Nw\",\"rhS8qXRjZcpDXkwnE\",\"rpRETBr9s4hgFNtPb\",\"Su3vDnttRBpxeyDen\",\"9rTzn5CuEdbTxfemP\",\"2NJZbusRvu3eJ4tHu\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"xezZ5ihMZQhdEmjQe\",\"language\":\"cpp\"},{\"_id\":\"7gaPYwZiZzAwQvi2q\",\"language\":\"java\"},{\"_id\":\"KX4Q6hAd4uMLrwrMQ\",\"language\":\"javascript\"},{\"_id\":\"quMt6typruySiNSAJ\",\"language\":\"python3\"},{\"_id\":\"q3NEzFEAguimW8zPt\",\"language\":\"ruby\"}]}}"]