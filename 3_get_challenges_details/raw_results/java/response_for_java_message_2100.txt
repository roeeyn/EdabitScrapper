a["{\"msg\":\"result\",\"id\":\"607\",\"result\":{\"_id\":\"EhX7SGqPTyxQc4pb2\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class Centric {\\n  public static int closingInSum(long num) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":2.2222222222222223,\"familyId\":\"dtjKua326LKEzxigY\",\"instructions\":\"Create a function that returns the sum of the digits formed from the first and last digits, all the way to the center of the number.\\n\\n### Worked Example\\n```\\nclosingInSum(2520) ➞ 72\\n\\n// The first and last digits are 2 and 0.\\n// 2 and 0 form 20.\\n// The second digit is 5 and the second to last digit is 2.\\n// 5 and 2 form 52.\\n\\n// 20 + 52 = 72\\n```\\n\\n### Examples\\n```\\nclosingInSum(121) ➞ 13\\n// 11 + 2\\n\\nclosingInSum(1039) ➞ 22\\n// 19 + 3\\n\\nclosingInSum(22225555) ➞ 100\\n// 25 + 25 + 25 + 25\\n```\\n\\n### Notes\\n- If the number has an **odd** number of digits, simply add on the single-digit number in the center (see example #1).\\n- Any number which is **zero-padded** counts as a single digit (see example #2).\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"/** \\n================================= \\nTestGen 3.1 for JUnit 4.13.0 \\t\\t\\nTest Case: Centric::closingInSum \\nTimestamp: 01/03/2021 12:06:32 PM \\n--------------------------------- \\n® DARKKO 2021 © \\n================================= \\n\\n**/ \\n\\nimport static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class CentricTest { \\n\\t\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertEquals(13, Centric.closingInSum(121));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertEquals(22, Centric.closingInSum(1039));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertEquals(100, Centric.closingInSum(22225555));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertEquals(72, Centric.closingInSum(2520));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertEquals(331, Centric.closingInSum(5332824166496569L));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertEquals(485, Centric.closingInSum(1979672314137318116L));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertEquals(548, Centric.closingInSum(1795459644013947776L));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertEquals(426, Centric.closingInSum(2801980378842185820L));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test09() { \\n\\t\\tassertEquals(430, Centric.closingInSum(3440584288422776554L));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test10() { \\n\\t\\tassertEquals(342, Centric.closingInSum(1985124000275401986L));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test11() { \\n\\t\\tassertEquals(355, Centric.closingInSum(1807452600132227071L));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test12() { \\n\\t\\tassertEquals(389, Centric.closingInSum(4319109703929506546L));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test13() { \\n\\t\\tassertEquals(453, Centric.closingInSum(7617065707454878893L));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test14() { \\n\\t\\tassertEquals(316, Centric.closingInSum(6332019057820232020L));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test15() { \\n\\t\\tassertEquals(452, Centric.closingInSum(901916905437689753L));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test16() { \\n\\t\\tassertEquals(627, Centric.closingInSum(8574963792985202586L));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test17() { \\n\\t\\tassertEquals(406, Centric.closingInSum(1827923410871280811L));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test18() { \\n\\t\\tassertEquals(454, Centric.closingInSum(1192239769354257577L));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test19() { \\n\\t\\tassertEquals(479, Centric.closingInSum(7565666227181120333L));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test20() { \\n\\t\\tassertEquals(418, Centric.closingInSum(4456731446833112446L));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test21() { \\n\\t\\tassertEquals(353, Centric.closingInSum(6649112211153605642L));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test22() { \\n\\t\\tassertEquals(302, Centric.closingInSum(6043414146315434510L));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test23() { \\n\\t\\tassertEquals(403, Centric.closingInSum(2154880710356439481L));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test24() { \\n\\t\\tassertEquals(560, Centric.closingInSum(987940367202343565L));\\n\\t}\\n\\n}\\n// end of tests\\n// Author: @Joshua Señoron\",\"language\":\"java\",\"quality\":0,\"summary\":\"Create a function that returns the sum of the digits formed from the first and last digits, all the way to the center of the number.\\n\\nWorked Example\\nclosingInSum(2520) ➞ 72\\n\\n// The first and last digits are 2 and 0.\\n// 2 and 0 form 20.\\n// The second digit is 5 and the second to last digit is 2.\\n// 5 and 2 form 52.\\n\\n// 20 + 52 = 72\\n\\nExamples\\nclosingInSum(121) ➞\",\"tags\":[\"algorithms\",\"recursion\",\"loops\",\"numbers\"],\"timestamp\":{\"$date\":1609647602604},\"title\":\"Closing in Sum\",\"stats\":{\"completed\":{\"total\":24,\"ratings\":[2,2,2,2,2,2,2,3,2,0,3,3,2,3,2,3,2,2,3,2,2,3,1,2,3,3,2],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"gXTAie79kiw28tx5u\",\"Es4eX2stRpyoXeC7f\",\"82weQfHHmno4Mq4X7\",\"vRXuYYBNuHEQ29fbm\",\"vzJsLp4NdZSoTEsjH\",\"Aq7wRXeG9EChyLz2z\",\"LNCb5rksJLJ43L4Nw\",\"jyoLggHk8xQKZuoQC\",\"oMZovHkR6QqNvQwyc\",\"buX4mCQhtXCfBjeno\",\"mfm3gB39arY8Rjb2y\",\"rhS8qXRjZcpDXkwnE\",\"qaPjAANdnxFnWfj5d\",\"2NJZbusRvu3eJ4tHu\",\"sxci7DYKNa6q22Sjq\",\"KMR6vNzvSKMA2cXnK\",\"DmfS648aGGhQwkpoZ\",\"a49eNnfRwSMxsDJXf\",\"htXCitorobtqYymjN\",\"rWhXHhzF4W8bea6LP\",\"wFRLGjA56kj7xyhmv\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"Rsyy8g5FJ3AG39Xdz\",\"language\":\"cpp\"},{\"_id\":\"EhX7SGqPTyxQc4pb2\",\"language\":\"java\"},{\"_id\":\"vrHDieytY657gYTcT\",\"language\":\"javascript\"},{\"_id\":\"ANdoCvhhaEibypkDE\",\"language\":\"python3\"},{\"_id\":\"jfb8h54WiMZvdKnzs\",\"language\":\"ruby\"}]}}"]