a["{\"msg\":\"result\",\"id\":\"405\",\"result\":{\"_id\":\"Sj3pLPPLpnF8DNGQD\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n\\tpublic static int sumDigits(int a, int b) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":1.5203252032520325,\"familyId\":\"tDPDzHXFNnZLzkz4S\",\"instructions\":\"Create a function that sums the total number of digits between two numbers, **inclusive**. For example, between the numbers `19` and `22` we have:\\n\\n```\\n// 19, 20, 21, 22\\n(1 + 9) + (2 + 0) + (2 + 1) + (2 + 2) = 19\\n```\\n\\n### Examples\\n```\\nsumDigits(7, 8) ➞ 15\\n\\nsumDigits(17, 20) ➞ 29\\n\\nsumDigits(10, 12) ➞ 6\\n```\\n\\n### Notes\\nN/A\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(15, Challenge.sumDigits(7, 8));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(29, Challenge.sumDigits(17, 20));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(6, Challenge.sumDigits(10, 12));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(56, Challenge.sumDigits(500, 506));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(9324, Challenge.sumDigits(66, 789));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"Create a function that sums the total number of digits between two numbers, inclusive. For example, between the numbers 19 and 22 we have:\\n\\n// 19, 20, 21, 22\\n(1 + 9) + (2 + 0) + (2 + 1) + (2 + 2) = 19\\n\\nExamples\\nsumDigits(7, 8) ➞ 15\\n\\nsumDigits(17, 20) ➞ 29\\n\\nsumDigits(10, 12) ➞ 6\\n\\nNotes\\nN/A\",\"tags\":[\"numbers\",\"loops\"],\"timestamp\":{\"$date\":1567984918749},\"title\":\"Sum of Digits Between Two Numbers\",\"stats\":{\"completed\":{\"total\":168,\"ratings\":[2,2,2,2,2,0,1,1,2,2,1,0,1,0,2,2,2,2,2,2,2,2,0,1,1,2,3,1,3,2,1,2,2,0,2,2,0,2,1,3,1,2,3,2,2,1,1,0,0,2,2,1,1,2,0,3,2,0,2,0,1,1,0,2,1,2,2,0,2,2,2,0,2,2,0,1,2,1,0,1,1,2,1,2,2,1,2,1,2,1,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,1,2,2,0,1,2,1,2,1,2,2,2,1,1,5,2,2,1],\"rators\":[\"vRXuYYBNuHEQ29fbm\",\"3pdgguqZgNDSAJSGm\",\"sxci7DYKNa6q22Sjq\",\"9c8n7ti5vCjTRgiGN\",\"FocLpCB2WEiK2gGni\",\"t2kdBPj9qQAXY2Ehd\",\"zSDmyqjYWQBZtWrh8\",\"ftLjxs2MetQiNzXhZ\",\"3gxJoNp59B4eoyyed\",\"vjDq7atfLrRY6iYx6\",\"vMJPYa4KMw7QGjNjD\",\"vnAs3y7hJY7X6JE6j\",\"zbQp6JhznkqyyLJTZ\",\"88zddpfgiA8N8om4r\",\"HsFc9PgmpP2X9Fwh9\",\"ypguHjGNSFk5TXnjJ\",\"Ha5J49rhojBRy3BaM\",\"yazNfwgLx7jSAZ8Tv\",\"79ZbLzp7xepvkonoh\",\"KCxLCqujaFCs9c8jd\",\"Yohr2MmAyaWGMbB35\",\"QPSwhNevikT7q8mz8\",\"a49eNnfRwSMxsDJXf\",\"r9hHZYPQAqJ9DbwLX\",\"CLmJduqJHX83dM4Pd\",\"phA6MomRzh9oz3eqn\",\"3KjxQu9RZ8ZSywvLz\",\"HBgPTjhMkJ2WCcBP7\",\"J9zJq7PMGb6mqzcHW\",\"Es4eX2stRpyoXeC7f\",\"u4yanfWeeZsN3xWgc\",\"8J2Dqqz9PaFufQzwY\",\"AyrEvM2GLX2jqM772\",\"8JyqsSbN2FJXPr3cw\",\"C9yBWYcZsjmJYww3K\",\"9gJsF5apWJGWZJprn\",\"4RHx3H8EwP2oboW8e\",\"MuXG56wJ4eaeHPHLa\",\"NsbHPeWBtAonYNXZc\",\"DNvEv5A3JcWR5MdBJ\",\"wYYMNPe8nSiJFbvJw\",\"hB5mgzMwQSnhBzi7P\",\"Fdq6CxMWZL8WZiNaM\",\"fZjkX29nhRTWWb75k\",\"Kso7rzAKB4TTCPKgM\",\"jyoLggHk8xQKZuoQC\",\"5seiNqw6ZXoF2GRRd\",\"82weQfHHmno4Mq4X7\",\"TrquEHytntLKHA4m2\",\"Zhy5X7BZnqk8hacEw\",\"8zZ6xmzpiFair25qr\",\"mfm3gB39arY8Rjb2y\",\"WZujpe8yQAyZmpWHg\",\"Wf7nCHS4Gq5tx659h\",\"etoSR23iELGGgs9rA\",\"meS77LKqRswhF5LAy\",\"htXCitorobtqYymjN\",\"ByXaraYa5tzFG8Gmj\",\"rvojHhKH3DaxotefQ\",\"DePiAS7u5Pk9d6SLr\",\"Yp7uvStL97cC9fKkY\",\"Yom3RzkMYpweE8cbS\",\"cjxsqXfkAPoadmppi\",\"DzvdGwHEjqsX7wyKr\",\"B4pxRqzo43M7S8FbP\",\"CggGfsERnPKGupFWp\",\"zwruFCmuHkwJTpYqg\",\"dcW9oK2uRo8h8mBe2\",\"TKFCGspt9wzQKmneX\",\"g4NCSxxHqHCGMpWwT\",\"jRqY4i8gPemsZMBGf\",\"k2tXkx7AyX77tQDRo\",\"rWhXHhzF4W8bea6LP\",\"Fd9765rksgPK4E2Zy\",\"muXMnzQwGLzN6j2Jr\",\"h6qxsauFhmQnC5QkM\",\"S6n5P7pGiEu2mQuFD\",\"nLb2L7vY7vd9k5L4w\",\"pzQKDh47YoBNhJCiG\",\"zTEKMLMevG8xfxEj6\",\"yXGiiSAR5nBHnH3yr\",\"oMZovHkR6QqNvQwyc\",\"yMp9cFjuZErN3rqhy\",\"8c8P2NGJisyn2QepD\",\"kQRtmSZfHdSzFserc\",\"oMfq73A434YWhSuWQ\",\"yd5PakB2z33q2JrTZ\",\"Tf7TJFSPktJBgLA4k\",\"mG8HqKiAQFTdRZthG\",\"P5BhjZxyeHQYTNyB9\",\"8Xx8nWXRydHDBGfQf\",\"jXTnL3JatkKjoifyb\",\"kabqCExooax4JEQHE\",\"BbcH2NLjE4tKAZ3wR\",\"hDeaTsprkH6CmvSAR\",\"zE46SymvixkeFJmPM\",\"unNqQjSHzkb4pCzEu\",\"RBJ84PMP5vguNXGYQ\",\"tyLS9T6YMfg9fMtYJ\",\"W56bWmpQeLJ9JEDsa\",\"hD6sfDtntpqT8NR2o\",\"mQKWauR6b252TmdX4\",\"YqCCpaAu6ecGxxwJ5\",\"RGN3QTb5LXj4ZPPkj\",\"gBGjCfJvPHswDM5JQ\",\"pi76g3eRpnKrhee2a\",\"9vyjn4WyWtJ6o2wop\",\"wizPoEWGnLvZMnruh\",\"GkYtSbQuheBF4Enys\",\"bur3yQ8s34zqKGEro\",\"buX4mCQhtXCfBjeno\",\"zZfMwLuoERGmybgib\",\"8qNSPHZBpmjSTt3tH\",\"GaJNJwcdyB9ueYFst\",\"BnaE25vvCGcfL3jiQ\",\"4ySzqKC5s3ZRpG9di\",\"6rvJwN4mcX7iYGjY7\",\"wFRLGjA56kj7xyhmv\",\"rhS8qXRjZcpDXkwnE\",\"srJ34BaybkQh3qRkM\",\"zEiHincPELnvffKbq\",\"xEX3TDY6C2h82dJTn\",\"jCjCvyhqhpebkJn34\",\"PJu3WcTpfRrvHfQiS\",\"J7epB3qSQJ2E8vWkY\",\"KMR6vNzvSKMA2cXnK\",\"hhxjQREtmHSheH9Pj\",\"563onSvqgjToY79ah\",\"GRSgodNrGhekHtCun\",\"unqzSsxpxj9sZ7rbD\",\"FxPDKKibxnZjGJLs6\",\"7smDHfW5LwRGrpfQ3\",\"uw47663LqPME8btaA\",\"NCKniEuXDCP2Y94iW\",\"PAEWysAAFheYiYPBp\",\"nFbmNzMQ38TncmfQX\"],\"quality\":[5,4,5,5,5,5,5,5,5,4,1,5,5,5,4,5,5,3]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"isHidden\":false,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":4.5,\"family\":[{\"_id\":\"jwcuCiTMpeMQvfHkm\",\"language\":\"cpp\"},{\"_id\":\"Sj3pLPPLpnF8DNGQD\",\"language\":\"java\"},{\"_id\":\"uryLqjondNYMTXhBt\",\"language\":\"javascript\"},{\"_id\":\"4xssEsN8xFW8AzYan\",\"language\":\"php\"},{\"_id\":\"kmruefq3dhdqxtLeM\",\"language\":\"python3\"},{\"_id\":\"XbYbG9WqZDQCkqTES\",\"language\":\"ruby\"},{\"_id\":\"ax2GJMTKg3RbpHZWN\",\"language\":\"swift\"}]}}"]