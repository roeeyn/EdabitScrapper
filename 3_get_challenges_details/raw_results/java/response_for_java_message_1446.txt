a["{\"msg\":\"result\",\"id\":\"282\",\"result\":{\"_id\":\"dDjLzbMh2JqjTtG8J\",\"author\":\"Mateusz Mędrowski\",\"authorId\":\"hPx9H3YM8j2k94DNW\",\"code\":\"public class Challenge {\\n  public static String digitalClock(int seconds) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":1.1428571428571428,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"5RnxudjTYuWBvJyg8\",\"instructions\":\"Write a function that takes the number of `seconds` and returns the digital format clock time as a string. Time should be counted from `00:00:00`.\\n\\n### Examples\\n```\\ndigitalClock(5025) ➞ \\\"01:23:45\\\"\\n// 5025 seconds is 1 hour, 23 mins, 45 secs.\\n\\ndigitalClock(61201) ➞ \\\"17:00:01\\\"\\n// No AM/PM. 24h format.\\n\\ndigitalClock(87000) ➞ \\\"00:10:00\\\"\\n// It's 00:10 next day.\\n```\\n\\n### Notes\\n- `seconds` is always greater than or equal to 0.\\n- Check the **Resources** tab if you get stuck.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(\\\"01:23:45\\\", Challenge.digitalClock(5025));\\n  }\\n\\n\\t@Test\\n  public void test2() {\\n    assertEquals(\\\"00:10:00\\\", Challenge.digitalClock(87000));\\n  }\\n\\n\\t@Test\\n  public void test3() {\\n    assertEquals(\\\"10:10:10\\\", Challenge.digitalClock(36610));\\n  }\\n\\n\\t@Test\\n  public void test4() {\\n    assertEquals(\\\"11:11:11\\\", Challenge.digitalClock(40271));\\n  }\\n\\n\\t@Test\\n  public void test5() {\\n    assertEquals(\\\"00:00:01\\\", Challenge.digitalClock(1));\\n  }\\n\\n\\t@Test\\n  public void test6() {\\n    assertEquals(\\\"00:00:00\\\", Challenge.digitalClock(0));\\n  }\\n\\n\\t@Test\\n  public void test7() {\\n    assertEquals(\\\"23:59:59\\\", Challenge.digitalClock(86399));\\n  }\\n}\",\"language\":\"java\",\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,1,1,2,0,1,0,1,0,0,1,1,0,1,1,2,2,2,1,2,2,1,1,1,1,1,1,1,3,1,1,2,0,0,1,4,0,3,1,2,1,1,2,1,1,1,1,2,1,0,0,1,3,2,1,1,2,1,1,0,1,1,1,1,1,1],\"rators\":[\"hPx9H3YM8j2k94DNW\",\"HHXf2G47cyoEmQuiB\",\"awmJLBhJKv37f8isR\",\"g4NCSxxHqHCGMpWwT\",\"Fd9765rksgPK4E2Zy\",\"GM7Pgq5Jvh2FiMLmY\",\"gqiH4FBBcffZPnyz7\",\"AeJSxRqw2dJZuGvdk\",\"YFHkjbM6obMSj24zi\",\"cfvb8CCN3kQBqorRR\",\"rdht36nGB4s8JEYsN\",\"jyoLggHk8xQKZuoQC\",\"yXGiiSAR5nBHnH3yr\",\"fRYcPHuyEdqngMzC4\",\"35FLKaQ7LJdA7pJZG\",\"YhK4MeH3ew8fc4Pdo\",\"L8ZmxChKC4TK9PmnN\",\"cGebawowzCKcFn8gq\",\"Yom3RzkMYpweE8cbS\",\"aa3KNNd2JcEo94Asr\",\"3Tye7hbPh65e9aLgb\",\"fXdKwMg4PKuH5oBDb\",\"yA9d9etRN669nFW2B\",\"muXMnzQwGLzN6j2Jr\",\"yd5PakB2z33q2JrTZ\",\"SCRed2mdqyWNKsfZc\",\"hhxjQREtmHSheH9Pj\",\"vxqtK4M8pRzGrhN3e\",\"TrquEHytntLKHA4m2\",\"a49eNnfRwSMxsDJXf\",\"rvojHhKH3DaxotefQ\",\"etoSR23iELGGgs9rA\",\"kh7Tw42Li3AW5Jej4\",\"Yohr2MmAyaWGMbB35\",\"JXnf7Lz3zotPN365m\",\"DzvdGwHEjqsX7wyKr\",\"5seiNqw6ZXoF2GRRd\",\"82weQfHHmno4Mq4X7\",\"gpd8yji9GXJruAtje\",\"ZXWDtCrM9ev3439oi\",\"a777e8chPvJkY3tKa\",\"pi76g3eRpnKrhee2a\",\"Es4eX2stRpyoXeC7f\",\"SfmXqCfDksMb883DC\",\"gXTAie79kiw28tx5u\",\"J7epB3qSQJ2E8vWkY\",\"9amCEoE43AdSneJZ7\",\"gBGjCfJvPHswDM5JQ\",\"B4pxRqzo43M7S8FbP\",\"JszPst3958te56jFk\",\"rWhXHhzF4W8bea6LP\",\"DkSMZ3jZLkwviKb9g\",\"oMfq73A434YWhSuWQ\",\"P5BhjZxyeHQYTNyB9\",\"8Xx8nWXRydHDBGfQf\",\"tyLS9T6YMfg9fMtYJ\",\"xzrLgYmqe3PeqPZ52\",\"xv5obFhsxY93mqR5S\",\"cJmmvnmJSXvBXtydi\",\"W56bWmpQeLJ9JEDsa\",\"rojdHfAAuAYxoaEXp\",\"Wi4H6ayKsNDWWQCG5\",\"BrLjaZuPzmCNYG8ho\",\"QRv96jmNaYsWkxQEG\",\"zZfMwLuoERGmybgib\",\"3SgSNoAB3sxaYeT3w\",\"btabi3PdyisuY5tn9\",\"vRXuYYBNuHEQ29fbm\",\"sxci7DYKNa6q22Sjq\",\"tdinF6MRzC6AdNX8g\",\"buX4mCQhtXCfBjeno\",\"xxyxCs8Hr7MQAsFvv\",\"srJ34BaybkQh3qRkM\",\"5LDvZHCDJqePeBrCg\",\"htXCitorobtqYymjN\",\"cR3ibTMxLyEdDFCHY\",\"afvP29FhRou2bTaav\",\"KMR6vNzvSKMA2cXnK\",\"GDNsAq2snvJuwFa88\",\"unqzSsxpxj9sZ7rbD\",\"nSLvkGEpiYCtcBLaa\",\"jCjCvyhqhpebkJn34\",\"H3XLNCWB5yXt5YYXn\"],\"total\":90,\"quality\":[5,5,5,5,3,5,5,4,5,4,5,4,4,5,5,5,3,3]},\"flags\":1},\"summary\":\"Write a function that takes the number of seconds and returns the digital format clock time as a string. Time should be counted from 00:00:00.\\n\\nExamples\\ndigitalClock(5025) ➞ \\\"01:23:45\\\"\\n// 5025 seconds is 1 hour, 23 mins, 45 secs.\\n\\ndigitalClock(61201) ➞ \\\"17:00:01\\\"\\n// No AM/PM. 24h format.\\n\\ndigitalClock(87000) ➞ \\\"00:10:00\\\"\\n// It's 00:10 next day.\\n\\nNotes\\nseconds\",\"tags\":[\"algebra\",\"strings\",\"math\",\"numbers\"],\"timestamp\":{\"$date\":1598481334646},\"title\":\"Time Conversion\",\"quality\":4.444444444444445,\"family\":[{\"_id\":\"dDjLzbMh2JqjTtG8J\",\"language\":\"java\"},{\"_id\":\"vGg5Q5WGHw5fNgwr7\",\"language\":\"javascript\"},{\"_id\":\"LgvppFDZoMpBKf8JW\",\"language\":\"python3\"},{\"_id\":\"KDaWiwnxLav4dRQkC\",\"language\":\"ruby\"}]}}"]