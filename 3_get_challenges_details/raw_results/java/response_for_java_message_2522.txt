a["{\"msg\":\"result\",\"id\":\"816\",\"result\":{\"_id\":\"cDhtEXjmyrKj9etsZ\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class PersianWord {\\n  public static String syllabification(String word) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":3.6666666666666665,\"familyId\":\"jxzaLNkECAdzroFDq\",\"instructions\":\"The syllabic structure of the Persian language is CV(C)(C). C stands for Consonants and V stands for Vowels. The CV(C)(C) means that there are three types of syllables in Persian:\\n- CV\\n- CVC\\n- CVCC\\n\\nWrite a function that takes the phonetic transcription of a Persian word as an argument and returns the syllabified word based on the syllabic structure. In other words, put a period between syllables.\\n\\n### Examples\\n```\\nsyllabification(\\\"tesh\\\") ➞ \\\"tesh\\\"\\n\\nsyllabification(\\\"kAr\\\") ➞ \\\"kAr\\\"\\n\\nsyllabification(\\\"bArAn\\\") ➞ \\\"bA.rAn\\\"\\n\\nsyllabification(\\\"tA\\\") ➞ \\\"tA\\\"\\n\\nsyllabification(\\\"deraxt\\\") ➞ \\\"de.raxt\\\"\\n\\nsyllabification(\\\"pust\\\") ➞ \\\"pust\\\"\\n\\nsyllabification(\\\"lAjevard\\\") ➞ \\\"lA.je.vard\\\"\\n```\\n\\n### Notes\\n- Mono-syllabic words don't need syllabification.\\n- Persian has six vowels: `a, A, e, i, o, u`\\n- Persian has 23 consonants: `p, b, t, d, k, g, G, ?, f, v, s, z, S, Z, x, h, c, j, m, n, r, l, y`\\n- You can also solve this challenge using **RegEx** (easily if you are familiar with).\\n\\n### Hint\\nSince each syllable has only one vowel, it's not necessary to know the consonants. Just knowing that there is only one consonant before the vowel and 0 to 2 consonants after the vowel is enough to solve the challenge.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"/** \\n======================================= \\nTestGen 2.3 for JUnit 4.13.0 \\t\\t\\nTest Case: PersianWord::syllabification \\nTimestamp: 11/17/2020 3:01:16 PM \\n---------------------------------------\\n® DARKKO 2020 © \\n=======================================\\n**/ \\n\\nimport static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class PersianWordTest {\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertEquals(\\\"tesh\\\", PersianWord.syllabification(\\\"tesh\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertEquals(\\\"kAr\\\", PersianWord.syllabification(\\\"kAr\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertEquals(\\\"bA.rAn\\\", PersianWord.syllabification(\\\"bArAn\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertEquals(\\\"tA\\\", PersianWord.syllabification(\\\"tA\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertEquals(\\\"de.raxt\\\", PersianWord.syllabification(\\\"deraxt\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertEquals(\\\"pust\\\", PersianWord.syllabification(\\\"pust\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertEquals(\\\"lA.je.vard\\\", PersianWord.syllabification(\\\"lAjevard\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertEquals(\\\"ba.rA.bar\\\", PersianWord.syllabification(\\\"barAbar\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test09() { \\n\\t\\tassertEquals(\\\"pan.ja.re\\\", PersianWord.syllabification(\\\"panjare\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test10() { \\n\\t\\tassertEquals(\\\"?eZ.de.hA\\\", PersianWord.syllabification(\\\"?eZdehA\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test11() { \\n\\t\\tassertEquals(\\\"?A.hes.te\\\", PersianWord.syllabification(\\\"?Aheste\\\"));\\n\\t}\\n}\",\"language\":\"java\",\"quality\":0,\"summary\":\"The syllabic structure of the Persian language is CV(C)(C). C stands for Consonants and V stands for Vowels. The CV(C)(C) means that there are three types of syllables in Persian:\\nCV\\nCVC\\nCVCC\\n\\nWrite a function that takes the phonetic transcription of a Persian word as an argument and returns the syllabified word based on the syllabic structure. In other words,\",\"tags\":[\"regex\",\"strings\"],\"timestamp\":{\"$date\":1605700990590},\"title\":\"Syllabification\",\"stats\":{\"completed\":{\"total\":9,\"ratings\":[4,4,4,4,4,5,2,2,5,3,2,5],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"gXTAie79kiw28tx5u\",\"mDWNyaaQ9hvPCRzSd\",\"7YbGHKwApShJ7J4NK\",\"v5H82mo7L4NCGTnSt\",\"sxci7DYKNa6q22Sjq\",\"KMR6vNzvSKMA2cXnK\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"8fuSpipSLz7ubD2un\",\"language\":\"cpp\"},{\"_id\":\"cDhtEXjmyrKj9etsZ\",\"language\":\"java\"},{\"_id\":\"5kKM5pdWTWfbh2Nfe\",\"language\":\"javascript\"},{\"_id\":\"TsRjbMRoNCM3GHuDk\",\"language\":\"python3\"},{\"_id\":\"tv44hHaGSJwcihni8\",\"language\":\"ruby\"}]}}"]