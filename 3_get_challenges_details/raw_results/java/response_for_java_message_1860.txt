a["{\"msg\":\"result\",\"id\":\"489\",\"result\":{\"_id\":\"LyytqgmYKzCgBGbxE\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n\\tpublic static int rectangles(int step) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":1.7623762376237624,\"familyId\":\"Ju44wvoo9BvrCuJGz\",\"instructions\":\"Let there be a square matrix, where each square is a rectangle, and a combination of more squares are also rectangles. To find the number of rectangles, Pete sat down and started counting... but that's highly inefficient.\\n\\nCreate a function that takes the order of the matrix as input and returns the number of rectangles in them.\\n\\n### Examples\\n```\\nrectangles(1) ➞ 1\\n\\nrectangles(2) ➞ 9\\n\\nrectangles(3) ➞ 36\\n```\\n\\n### Notes\\n- The input will always be an integer.\\n- Number of rectangles are given by: `((n(n+1))/2)^2`\\n- Watch the video listed in the **Resources** tab to get three different formulas.\",\"isHidden\":false,\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(4326400, Challenge.rectangles(64));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(8561476, Challenge.rectangles(76));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(3025, Challenge.rectangles(10));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(9985600, Challenge.rectangles(79));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(12744900, Challenge.rectangles(84));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(0, Challenge.rectangles(0));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(3348900, Challenge.rectangles(60));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n    assertEquals(189225, Challenge.rectangles(29));\\n  }\\n\\t\\n\\t@Test\\n  public void test9() {\\n    assertEquals(29241, Challenge.rectangles(18));\\n  }\\n\\t\\n\\t@Test\\n  public void test10() {\\n    assertEquals(7700625, Challenge.rectangles(74));\\n  }\\n\\t\\n\\t@Test\\n  public void test11() {\\n    assertEquals(18496, Challenge.rectangles(16));\\n  }\\n\\t\\n\\t@Test\\n  public void test12() {\\n    assertEquals(4326400, Challenge.rectangles(64));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"Let there be a square matrix, where each square is a rectangle, and a combination of more squares are also rectangles. To find the number of rectangles, Pete sat down and started counting... but that's highly inefficient.\\n\\nCreate a function that takes the order of the matrix as input and returns the number of rectangles in them.\\n\\nExamples\\nrectangles(1) ➞ 1\\n\\nre\",\"tags\":[\"algorithms\",\"math\",\"numbers\"],\"timestamp\":{\"$date\":1573458004117},\"title\":\"How Many Rectangles?\",\"stats\":{\"completed\":{\"total\":150,\"ratings\":[2,2,2,2,2,2,0,1,2,3,0,3,2,3,1,5,4,3,0,0,5,3,1,1,0,0,2,1,3,3,2,1,1,3,1,3,1,1,3,2,3,3,2,2,2,2,3,2,5,3,3,1,1,0,1,0,1,0,1,2,1,3,0,3,2,3,1,2,1,3,0,0,3,3,2,2,3,1,1,3,2,2,0,0,1,1,0,1,2,1,1,2,2,2,2,2,2,1,1,1,2],\"rators\":[\"9c8n7ti5vCjTRgiGN\",\"3gxJoNp59B4eoyyed\",\"79ZbLzp7xepvkonoh\",\"sxci7DYKNa6q22Sjq\",\"CLmJduqJHX83dM4Pd\",\"SnY7WidXJoAyyuPuA\",\"phA6MomRzh9oz3eqn\",\"Xwu7yQJzMsErCa9X7\",\"Es4eX2stRpyoXeC7f\",\"8J2Dqqz9PaFufQzwY\",\"AyrEvM2GLX2jqM772\",\"jhoZyJtWj7sy7YYjj\",\"gGnDsJz5hr2t9MKCF\",\"cjxsqXfkAPoadmppi\",\"fZjkX29nhRTWWb75k\",\"jyoLggHk8xQKZuoQC\",\"TrquEHytntLKHA4m2\",\"etoSR23iELGGgs9rA\",\"5seiNqw6ZXoF2GRRd\",\"3qggY3TrN3xNaMDBp\",\"pBMXMQem6BpSeooYT\",\"QQa3ahXPP8MHP9QHv\",\"D59AqZG2SoMR3nbpx\",\"8zZ6xmzpiFair25qr\",\"dsXjNcprZLvMKXTB8\",\"LTxPfYyzLtPRZhFvR\",\"BmMA5FBX7NKpLj8ur\",\"XuWAv9pC8zvZxjXAD\",\"k63LjKkX5p7SYng7C\",\"DePiAS7u5Pk9d6SLr\",\"4RsakkyRXyYGwFxEa\",\"y6kfyYmydcD8tkBk7\",\"9pCPyhvQmbkWyD2LL\",\"4XYtb6wNqvGfpBbDX\",\"JQGw9jsJPEasdwhNJ\",\"aH9yER5QQ4bFBN8SR\",\"mfm3gB39arY8Rjb2y\",\"fdivtDieZJeT8JPxL\",\"dN3DnJXL5cK7NZjem\",\"imoNrk36ozReP939p\",\"ji5f27FPz4wRRF6Ls\",\"5Rr75sFqhpkowFk3k\",\"rvojHhKH3DaxotefQ\",\"i3TRCkidxKop3WtE2\",\"us3vKpDScdvXTHvb2\",\"EFPtxygQnsXQzHni3\",\"DLoPWdabPsDB2XSnH\",\"kiRkuN7JXqvWBa4SG\",\"87otmbdqNT3bHsQFu\",\"qraDA47Ewou5mzvrL\",\"yXGiiSAR5nBHnH3yr\",\"azAzSkvJd7eyXY9x9\",\"82weQfHHmno4Mq4X7\",\"Yp7uvStL97cC9fKkY\",\"p8qqFdJ3FSk5x9z3G\",\"BbcH2NLjE4tKAZ3wR\",\"jhEgpqsboiWai8sLJ\",\"iRPmeZh825mMac4rD\",\"oRi93mrm7DLdeiFjf\",\"9o7Sp5AvxK75cQ3jD\",\"hseQSt2EJ5uvb2pQv\",\"R9k3kpgzXHLgaQddY\",\"Nu8yT4MHSneG8uWin\",\"NQ4btGLfcvAnXjAyP\",\"2Kzz5CubctKWfpPBp\",\"aHqxyQCEtWZgczYEv\",\"DrkR35NqnP9NDLbq6\",\"mQKWauR6b252TmdX4\",\"SDSvWibEfFvh3mFaQ\",\"qMds9ppJy2Tn9wxEp\",\"wrWSBhn6PoFcuYrzD\",\"vTkAh25siRQwqwBjc\",\"sJuq37PFQozqB4C7k\",\"oth47e7A8TopBYdjr\",\"rWhXHhzF4W8bea6LP\",\"FCkjDL4WAu3d6rAkC\",\"ZiQyxnWoRfgdX65Zs\",\"P5BhjZxyeHQYTNyB9\",\"ymggGjk5woALZEbCC\",\"x6YYzxnJxMhNrAvs8\",\"GKuFLr7o2ntqggTPi\",\"YZJNEiHeshGk5riQv\",\"QRWdqFpjPr4etPwdi\",\"C5x6MtLFJvaFA79MP\",\"kNM9TYEJhjApd2cHi\",\"myB4BS5fxL5TwtezK\",\"PRF7EryjyRyoSCGFj\",\"RNZbWccE6Q5BDKxcy\",\"gzqN6cZqYYPTer9im\",\"oxoar3aYJt7CoPZqj\",\"4n4gPJDy5pGLkZfBi\",\"YT7Sqaesgvab6GW9y\",\"KCEsMas5BbmiD2Q9K\",\"4NHyP9TLFudCGghZQ\",\"QuBz2FQ7o7STQQGYP\",\"EFqhE7GRf6PSKMSg6\",\"PmfzvaX5ZJscpvHXc\",\"pj56bybZeAa4Xbdn4\",\"zTM2NbjE6q5Q2HSeF\",\"jXTnL3JatkKjoifyb\",\"3Qm6aPSprCpZCBRLw\",\"STAZWrmtsNXun5pGd\",\"eHTHv5FyLkpGTBJJr\",\"2CLvCKwQvRQC8NHXp\",\"zGzQoSwgdwDi299KG\",\"osXNzc2aCxspRwheS\",\"yd5PakB2z33q2JrTZ\",\"XEyiea99FuX73HH95\",\"FTHXj9Rfx9wdujSzy\",\"FEZ2KczS68C6CrbJF\",\"srJ34BaybkQh3qRkM\",\"twW8P5GtEjgyWTm3P\",\"buX4mCQhtXCfBjeno\",\"ivwcFTPLxBixotu2F\",\"rhS8qXRjZcpDXkwnE\",\"a49eNnfRwSMxsDJXf\",\"mG8HqKiAQFTdRZthG\",\"wFRLGjA56kj7xyhmv\",\"xW9nC9h6p77YT2iso\",\"KMR6vNzvSKMA2cXnK\",\"htXCitorobtqYymjN\",\"unqzSsxpxj9sZ7rbD\",\"PJu3WcTpfRrvHfQiS\",\"FxPDKKibxnZjGJLs6\",\"nFbmNzMQ38TncmfQX\"],\"quality\":[3,4,5,4,4,3,5,5,1,5,5,5,5,5,5,4,5,5,5,4,5,4,5,5,5,5,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":4.517241379310345,\"family\":[{\"_id\":\"EePutMiQcitWdEA5s\",\"language\":\"cpp\"},{\"_id\":\"LyytqgmYKzCgBGbxE\",\"language\":\"java\"},{\"_id\":\"fgjtbbeZSy55ftXwa\",\"language\":\"javascript\"},{\"_id\":\"zRm6YDfQHoesdc3rb\",\"language\":\"python3\"},{\"_id\":\"tBfH2RdzwD98xW4rT\",\"language\":\"ruby\"}]}}"]