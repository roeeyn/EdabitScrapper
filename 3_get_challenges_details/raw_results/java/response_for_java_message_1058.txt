a["{\"msg\":\"result\",\"id\":\"85\",\"result\":{\"_id\":\"3NTH452EBsJZ2ARsu\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class CharBetweenWords {\\n\\tpublic static String add(String c, String str) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":0.5414364640883977,\"familyId\":\"yMNswgcj7CarqXdTP\",\"instructions\":\"Create a function that will put the first argument, a character, between every word in the second argument, a string.\\n\\n### Examples\\n```\\nadd(\\\"❤\\\", \\\"I love Tesh!\\\") ➞ \\\"I❤love❤Tesh!\\\"\\n\\nadd(\\\"\ud83d\udc4d\\\", \\\"Java is a lot of fun.\\\") ➞ \\\"Java\ud83d\udc4dis\ud83d\udc4da\ud83d\udc4dlot\ud83d\udc4dof\ud83d\udc4dfun.\\\"\\n\\nadd(\\\"#\\\", \\\"hello world!\\\") ➞ \\\"hello#world!\\\"\\n\\nadd(\\\"&\\\", \\\"you me world\\\") ➞ \\\"you&me&world\\\"\\n```\\n\\n### Notes\\nMake sure there are no spaces between words when returning the function.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"/** \\n================================ \\nTestGen 2.3 for JUnit 4.13.0 \\t\\t\\nTest Case: CharBetweenWords::add \\nTimestamp: 11/9/2020 10:13:54 AM \\n-------------------------------- \\n® DARKKO 2020 © \\n================================\\n**/ \\n\\nimport static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class CharBetweenWordsTest {\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertEquals(\\\"I❤love❤Tesh!\\\", CharBetweenWords.add(\\\"❤\\\", \\\"I love Tesh!\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertEquals(\\\"Java\ud83d\udc4dis\ud83d\udc4da\ud83d\udc4dlot\ud83d\udc4dof\ud83d\udc4dfun.\\\", CharBetweenWords.add(\\\"\ud83d\udc4d\\\", \\\"Java is a lot of fun.\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertEquals(\\\"Hello\ud83d\ude0aworld!\\\", CharBetweenWords.add(\\\"\ud83d\ude0a\\\", \\\"Hello world!\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertEquals(\\\"you&me&world\\\", CharBetweenWords.add(\\\"&\\\", \\\"you me world\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertEquals(\\\"hash#or#pound#sign#and#symbol\\\", CharBetweenWords.add(\\\"#\\\", \\\"hash or pound sign and symbol\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertEquals(\\\"replaceAll()-replace()-or-String.join-methods\\\", CharBetweenWords.add(\\\"-\\\", \\\"replaceAll() replace() or String.join methods\\\"));\\n\\t}\\n}\",\"language\":\"java\",\"quality\":4.782608695652174,\"summary\":\"Create a function that will put the first argument, a character, between every word in the second argument, a string.\\n\\nExamples\\nadd(\\\"❤\\\", \\\"I love Tesh!\\\") ➞ \\\"I❤love❤Tesh!\\\"\\n\\nadd(\\\"\ud83d\udc4d\\\", \\\"Java is a lot of fun.\\\") ➞ \\\"Java\ud83d\udc4dis\ud83d\udc4da\ud83d\udc4dlot\ud83d\udc4dof\ud83d\udc4dfun.\\\"\\n\\nadd(\\\"#\\\", \\\"hello world!\\\") ➞ \\\"hello#world!\\\"\\n\\nadd(\\\"&\\\", \\\"you me world\\\") ➞ \\\"you&me&world\\\"\\n\\nNotes\\nMake sure there are no spaces be\",\"tags\":[\"strings\",\"formatting\"],\"timestamp\":{\"$date\":1604888197828},\"title\":\"WordCharWord\",\"stats\":{\"completed\":{\"total\":263,\"ratings\":[1,1,1,1,1,0,1,0,0,0,0,0,1,0,0,0,1,1,2,0,1,1,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,1,0,0,0,0,1,1,1,1,1,1,0,0,2,0,1,1,1,2,0,0,0,0,1,1,0,0,1,1,0,2,0,1,0,5,0,2,2,1,0,0,1,0,0,0,3,0,0,0,2,0,1,0,0,0,1,0,0,0,0,0,1,0,0,1,1,0,0,0,0,0,1,0,1,2,0,5,0,0,1,0,1,0,1,0,0,0,0,0,1,1,0,1,0,0,1,0,0,0,1,0,1,1,2,0,1,0,1,1,0,0,1,0,1,0,1,0,0,1,1,0,0,0,1,0,0,1,0,0,2,1,0,3,0,0,1,0],\"quality\":[5,5,3,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2,5,3,5,5,5,4,5,5,4,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,3,4,5,5,4,5,5,5,5,5,5,5,5],\"rators\":[\"a777e8chPvJkY3tKa\",\"xv5obFhsxY93mqR5S\",\"J7epB3qSQJ2E8vWkY\",\"Es4eX2stRpyoXeC7f\",\"AeJSxRqw2dJZuGvdk\",\"8Xx8nWXRydHDBGfQf\",\"jZnryXuqhJFwusWTW\",\"7PeqEQqPK9xBWmFw4\",\"5TaPWyRv9DZWWodp8\",\"C9yBWYcZsjmJYww3K\",\"44arJN5SYx3HyfetA\",\"hXArd94zyjgA6crBh\",\"zQaMPKMwHF2GMjWj4\",\"jXTnL3JatkKjoifyb\",\"umcNKSZ597NfCXiyy\",\"unNqQjSHzkb4pCzEu\",\"oMZovHkR6QqNvQwyc\",\"qkxmwQPzuiCNB4eB8\",\"cueHAmTrcWuowXf58\",\"ikxSkiQjCjYPsFwMT\",\"rWhXHhzF4W8bea6LP\",\"qWv9Ns8HH5rb8E5Xi\",\"Yohr2MmAyaWGMbB35\",\"3EfDGZ9Sgz5zxzD7a\",\"uFfEio8nzDvL8emhp\",\"3eXqMKuakNTN5SApa\",\"NioGGZL9KCn5Ln96t\",\"p7S65SrYRpA5bcJ5Y\",\"CNc6rmwhbxkxEhHAp\",\"CggGfsERnPKGupFWp\",\"5ajfni3ATHd4bKiTy\",\"YRvns3uQh3bEaNoTH\",\"fD2vkjhwWmxbs3aAn\",\"3h5dGS6W8akioYnWD\",\"47PyFbZyxWuP9Bgga\",\"geZ3oLjhh9KAw7yHs\",\"mEs5n8hD6dXiwBMgH\",\"hhxjQREtmHSheH9Pj\",\"8j3CcTyaDMm7mGn3K\",\"yBeWtGNg9yuECLqGQ\",\"DarKtzKL7L9ZxsaLy\",\"JwBT2xYDafcNG9eKr\",\"r579vsQvT57bCxrE5\",\"bWWFscsAr66ZWHo28\",\"RAEFpazbe6mhx3PLb\",\"W56bWmpQeLJ9JEDsa\",\"M3fTYWJX2hb3vuEGJ\",\"4SBj9cygDMHj6PPRP\",\"Rn5YNvYdY468a7vRp\",\"gBGjCfJvPHswDM5JQ\",\"RQL2PAWda9Bh79GNi\",\"pokBD5HvY58t8Aicu\",\"6hf7rmQ2fQGBG6ns7\",\"4GT8G2sSSTN9RDBsf\",\"G5p6ZdpwTf97i4cf4\",\"2X23EB8EciTGTm4dZ\",\"obp7gd5w8sCAPGjnr\",\"CgoCcBmyBozMP9hfc\",\"tnYXC3cGqycxRzCgT\",\"w2rPvPbskuhndnDRG\",\"TuoCjRBc7HaFtdg4C\",\"dAPrAmeeaMKNdRsSE\",\"8DfhSneJpsw5uqLeM\",\"hseQSt2EJ5uvb2pQv\",\"2ptN2mhjFwFcHyPZd\",\"gzZQ6EJkscZJWwiSL\",\"8BFSTCnoe2QggN64c\",\"4Twsxfa3LZpXz2mJH\",\"hDeaTsprkH6CmvSAR\",\"h2yXpirPH3qa3LyoY\",\"MzAsB27wKkPe9Sv78\",\"ATCbF72Lo628BKgac\",\"bEBcGa3X5RruawtbZ\",\"jyoLggHk8xQKZuoQC\",\"2wS9Wm3Nj5ZFcMnfA\",\"Pt9ZDaGkxicXDCnfC\",\"9ShXSwHycr8XCNWzo\",\"kaSirKnRwXvGfe6ru\",\"qzRBHtdFfnDDSKk4M\",\"rvYTnqG95pm3GG8xD\",\"mLPfS53i3c4Yf3jQ3\",\"GnnrvHNTXHgxx8Hd5\",\"eQXwk5zGckM8tCWYH\",\"a2LqH6puhNvLCXjxj\",\"pPucbWu53MvGtgpJc\",\"kX4SqmzQs4E9Cm3hb\",\"82weQfHHmno4Mq4X7\",\"Q9vt2yJB4HNeegbY9\",\"ZjEdErENicjeqKZ8g\",\"64rAKvtcpkTk357GZ\",\"oEfHwicCdt946rTWY\",\"MSa5iqebmdK5C3Bpx\",\"ePuFgELnGfwenQv6e\",\"69K8S2NbzkqE9pAe5\",\"hSGA99ySG5ePGK7CJ\",\"sacPXRKX59BE495oz\",\"dBexp26HAHeucxKP7\",\"2bemiz7sjLjCbA5ui\",\"wrYbGuhfFbNjwEtim\",\"LbKZsAzkey9k7ifnz\",\"4vFJf9BEaAh899bAW\",\"84PnX6PD8izkkTcxT\",\"FrorBN8wRAoptuxtR\",\"4BFwFhcFZqL4Aepgn\",\"9D3CTgPmcWY6hEvyD\",\"Pg2THxSCX9jBFTj8v\",\"y6kfyYmydcD8tkBk7\",\"MYvg49zHaPkRyRHx6\",\"64Hrf4Kzaf6d2nkrC\",\"oWSpzbikwd8N3N2YA\",\"M8u5Pf7PK85S8cd9b\",\"bWXyzXXm3dnAZ9Cwv\",\"Nb6LYPoQP6KJZt8mz\",\"8WeJLyNE4h6nJ2dNh\",\"XZCWhj8dfcs5wnkMx\",\"un6GQBQkjrrajT8EA\",\"omdomFs6EQoKCMMzr\",\"awqMLkb2D9QNeBiFS\",\"7ypuw2RbuSADSg4kN\",\"N3tyYcBfjKQmSmDvf\",\"rfTsjeNPWYQ6vngcs\",\"2ScA9s5nu35nSMDpt\",\"3kfGbGFuhCoXg3WiS\",\"S2E7tAXT57Fu2f3oz\",\"5jDgvkGd4JwatrYXg\",\"pRJ4S2bFKo6XKiH59\",\"Yj7ftjzyP67R5NFrH\",\"a49eNnfRwSMxsDJXf\",\"sYKPxZX5xJZ2GTp6Q\",\"rZL5a49P5wSMjdhfH\",\"v5gjriMxaA3pitLyY\",\"uD86CBz3A3yjirhGG\",\"Ln5Ktpm8Zgxgdtgww\",\"PJu3WcTpfRrvHfQiS\",\"btabi3PdyisuY5tn9\",\"SbDRsLR6yfZXETyKN\",\"MCw7uAcoWcSTBTmr3\",\"A3KrxZk4FiSymY6f2\",\"LCuvvWMwiGuqTwNRi\",\"tuD6GTaiyfWm87uvh\",\"nXw9eTHFraWQtwJtY\",\"Wi4H6ayKsNDWWQCG5\",\"EcBw39vkywQsT3Y2Z\",\"QRv96jmNaYsWkxQEG\",\"3SgSNoAB3sxaYeT3w\",\"NXtM3si2K3i4DySMn\",\"kiq3z4o9ABhQd7aXJ\",\"b6PEkvr66YeCamroN\",\"Q7fQT4XeoY23TpkW7\",\"6MgG8N9rkmAZKYrJ3\",\"GkYtSbQuheBF4Enys\",\"x9CWxL7Q7yCHdrAmq\",\"buX4mCQhtXCfBjeno\",\"dD3Aja8PZSMXMFSDY\",\"XNgW94PSq5kkXhojm\",\"c96gH88NsjR3MycAj\",\"MYaqDq32HkAjdYEbo\",\"yb8T3nuL4evaeJW6k\",\"umE8dRTGWzrZFp755\",\"gbAGaynei4oA7DtWs\",\"6rvJwN4mcX7iYGjY7\",\"FEGpESiobxcqjMqF3\",\"t55QWHi8o4teZxqqE\",\"fGSQQds3A8gP6rc5h\",\"qat6GsLjQbgGc96JD\",\"xEX3TDY6C2h82dJTn\",\"AQSqD9oNv2uPfxZCR\",\"ztrfkKRfYBWokFwkf\",\"p8hkfoXChHNEFDNbM\",\"4ySzqKC5s3ZRpG9di\",\"khdCaD6AGBiR6txLQ\",\"KdYQN3KAT2DyTzT2a\",\"5LDvZHCDJqePeBrCg\",\"Reyq7sSccAZJvJrmB\",\"peSPGkvA444dd9mmJ\",\"TCvpT4EPb8qNssNB7\",\"sxci7DYKNa6q22Sjq\",\"vRXuYYBNuHEQ29fbm\",\"fdyejapW3NWN7utPX\",\"rhS8qXRjZcpDXkwnE\",\"3qgJpdhyi4tKuqMdm\",\"Qv2jEtTnFCXX7cdd3\",\"9RJpt5ec2KMLuac4w\",\"H469XosMjfNu8Fop7\",\"D3ASM3aWpcQ8gvnin\",\"nSLvkGEpiYCtcBLaa\",\"uw47663LqPME8btaA\",\"RSombfrtxS5PSXnyJ\",\"Gn8rShvWCKLX3cxzx\",\"srJ34BaybkQh3qRkM\",\"gZj6HTKJdPGJwPe2D\",\"iCtBPtyhn5PGqTTcK\",\"cR3ibTMxLyEdDFCHY\",\"afvP29FhRou2bTaav\",\"DZvz6WY5bQEneYzvv\",\"aYCB22cDSkNpoGeD7\",\"ckQwFFWyLXmDQAaCn\",\"PCsT29KNEX8ufEawi\",\"mAYRXjKDkXauHcATL\",\"2v8daNMFLCPvSNaX5\",\"6KDZNmtgvb6PCaWQE\",\"yGDSvLJXXz5ZmaS4h\",\"iceFyx5uEhQ2G3TMh\",\"htXCitorobtqYymjN\",\"DEDniTrstQYGounXT\",\"qGyhayAwAgpwvK8Kg\",\"aKffMfkHuGunEGWFz\",\"KMR6vNzvSKMA2cXnK\",\"f6CBJntX2RFd2zAjR\",\"YrZxRMm5KrrC5bsZa\",\"RsujLHaML6L3KinzK\",\"eXQziXGcpwekMyABQ\",\"PPdaczxSt2u5cmZYG\",\"YuA7rdrQTzpfFLGJq\",\"pyZG6wgFRiZsSEaTE\",\"QMcxci638CgTJ54bH\",\"wE4roswN4ggiieGHs\",\"6kB5qypxcm62PHsEJ\",\"GD9Jqmu93vB4LTT8F\",\"9moo5f7g8KrZieT2K\",\"unqzSsxpxj9sZ7rbD\",\"rd57KDjWbqx3HLEo3\",\"xLy94bAjaLwokPcZZ\",\"QgGGow8Ynnq2YkGXX\",\"w99WfQNYsNAyJRM4C\",\"GSs7rtv3hBbJA3aCF\",\"x2Cz7S8rCKJqCE3Xe\",\"F8dA24AosSC8XXb7D\",\"9du58gNDkWQEWivbB\",\"B4y8aoyXJtskYPFEL\",\"5HGyJtoZ3AffzAZAv\",\"8YqEzJJLFtLkx5fHc\",\"h6q2JS8Mwtk5KoRve\",\"4To7THbHADdtXbewx\",\"5kMuNZuxiFcNRDkG4\",\"5QN8R22z43SrwoHDz\",\"NwczjpfNN8jXy5RF6\",\"hF9icm7GxAnAGSjAD\",\"nFbmNzMQ38TncmfQX\",\"r72oFMcCQh4rBsKHb\",\"J8GhL9EX5zZcrgyBt\",\"3Gf7ikLijfoxabiPY\",\"eANW47mfA359Y6JyP\",\"FgaXeuBoJFBoDWZGL\",\"YEMQNE333gAXhGE4c\"]},\"flags\":0},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"nXDY8Tt7jPftvKkGX\",\"language\":\"cpp\"},{\"_id\":\"3NTH452EBsJZ2ARsu\",\"language\":\"java\"},{\"_id\":\"ep3sJHtww6PdgGszH\",\"language\":\"javascript\"},{\"_id\":\"fBzF8TuQQxx6C7dWm\",\"language\":\"python3\"},{\"_id\":\"gDpYH3MwF6qbYNtyE\",\"language\":\"ruby\"}]}}"]