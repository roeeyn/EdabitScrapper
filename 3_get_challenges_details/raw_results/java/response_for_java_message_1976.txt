a["{\"msg\":\"result\",\"id\":\"545\",\"result\":{\"_id\":\"YuZYMkwnJpALmHELB\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n\\tpublic static int waysToClimb(int num) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":2.118279569892473,\"familyId\":\"N9pDuxmGbkhZQHwAX\",\"instructions\":\"Write a function that returns the number of ways a person can climb **n stairs**, where the person may only climb **1** or **2** steps at a time.\\n\\nTo illustrate, if **n = 4** there are **5** ways to climb:\\n```\\n[1, 1, 1, 1]\\n[2, 1, 1]\\n[1, 2, 1]\\n[1, 1, 2]\\n[2, 2]\\n```\\n\\n### Examples\\n```\\nwaysToClimb(1) ➞ 1\\n\\nwaysToClimb(2) ➞ 2\\n\\nwaysToClimb(5) ➞ 8\\n```\\n\\n### Notes\\nA staircase of height `0` should return `1`.\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(1, Challenge.waysToClimb(0));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(1, Challenge.waysToClimb(1));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(2, Challenge.waysToClimb(2));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(3, Challenge.waysToClimb(3));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(5, Challenge.waysToClimb(4));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(8, Challenge.waysToClimb(5));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(13, Challenge.waysToClimb(6));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n    assertEquals(21, Challenge.waysToClimb(7));\\n  }\\n\\t\\n\\t@Test\\n  public void test9() {\\n    assertEquals(987, Challenge.waysToClimb(15));\\n  }\\n\\t\\n\\t@Test\\n  public void test10() {\\n    assertEquals(46368, Challenge.waysToClimb(23));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"Write a function that returns the number of ways a person can climb n stairs, where the person may only climb 1 or 2 steps at a time.\\n\\nTo illustrate, if n = 4 there are 5 ways to climb:\\n[1, 1, 1, 1]\\n[2, 1, 1]\\n[1, 2, 1]\\n[1, 1, 2]\\n[2, 2]\\n\\nExamples\\nwaysToClimb(1) ➞ 1\\n\\nwaysToClimb(2) ➞ 2\\n\\nwaysToClimb(5) ➞ 8\\n\\nNotes\\nA staircase of height 0 should return 1.\",\"tags\":[\"recursion\",\"algorithms\"],\"timestamp\":{\"$date\":1568488425267},\"title\":\"Staircase of Recursion\",\"stats\":{\"completed\":{\"total\":126,\"ratings\":[2,2,2,2,2,2,2,3,1,2,1,4,0,2,3,1,2,3,3,3,1,1,4,1,3,3,1,2,3,1,3,1,1,1,1,1,1,3,5,2,2,2,1,2,1,1,1,3,3,1,1,1,1,1,0,2,3,2,2,2,3,1,2,3,2,3,3,3,3,3,2,4,2,3,2,3,2,3,2,2,3,3,3,2,1,2,2,3,3,3,3,3,2],\"rators\":[\"3pdgguqZgNDSAJSGm\",\"xF2KaebJZekTjXDGF\",\"fPqm26KzmBhPe5Lhc\",\"2XWtHPKyQwLHZEHjc\",\"G4AQcFobJfmy5s8xL\",\"BSDtieYGg6H7evesT\",\"Prw5Jq38wrSoj5QSF\",\"SnY7WidXJoAyyuPuA\",\"2NJuDfSqdrF8kHHni\",\"5MuT2gPpME6LbfwoY\",\"28GnGmft835XWqNNW\",\"i3dZWGMzDqbkhiQan\",\"qRhXvCaA7qgDoeFnr\",\"r9hHZYPQAqJ9DbwLX\",\"eXW8reZCCZHQzJjQi\",\"fZjkX29nhRTWWb75k\",\"i5QeAsrM4m6hzPTku\",\"yK7zzK2aGJwuWKHRL\",\"tbrMZvX8kgQ6Zm5Jj\",\"4RHx3H8EwP2oboW8e\",\"Es4eX2stRpyoXeC7f\",\"RsbLaSsrznMfRGJQ2\",\"2PR653L4KSN97r534\",\"FTJRgJAQA6F4f8cNp\",\"cjxsqXfkAPoadmppi\",\"gGnDsJz5hr2t9MKCF\",\"KBzzKtGw9NxkqD2FE\",\"Kfr4mphodbPQMuHpy\",\"rTj67TTydxqkpwFtN\",\"8J2Dqqz9PaFufQzwY\",\"EJQPgeRdECTFpBxQd\",\"ckRXzQNZ8QXSxFoN8\",\"NTcaQZ6ZGXMXWGR7h\",\"2y3DQSYBRFDNCqWsW\",\"fsrrknCkSypFeE9Yc\",\"TrquEHytntLKHA4m2\",\"jyoLggHk8xQKZuoQC\",\"5seiNqw6ZXoF2GRRd\",\"HcPmxj2eR5enFozo8\",\"WZujpe8yQAyZmpWHg\",\"etoSR23iELGGgs9rA\",\"RPzzGas8bEQ4X9pBy\",\"7r73GTbW9nNnQWGKP\",\"AX4myvP8gZRqw5avs\",\"rehehi2Tr2mwaEoJE\",\"rwETZ6XCNoHCEyB66\",\"XuWAv9pC8zvZxjXAD\",\"4RsakkyRXyYGwFxEa\",\"DkSMZ3jZLkwviKb9g\",\"cNkiQaAx5iZZy7wz5\",\"hpDwPvZNzMSfxBDcE\",\"htXCitorobtqYymjN\",\"kEu35nmaMfSGqMRfH\",\"qqgGhKmmNaxcg7BBH\",\"3Lh2dvGeuXqhRHu9j\",\"YxPHFizsq4sdDFGeX\",\"b6MNGsFS2ZvwCpEn9\",\"hMA4FndqKHMYCArTv\",\"h4ZwRv8kiPnQogizz\",\"otDv5SDippDbmP9XF\",\"NzTup4ZEiRXWczqxL\",\"aH9yER5QQ4bFBN8SR\",\"nzmGPn6f2ceHnqFPE\",\"xeYtKtzKFm5RvEXMr\",\"R8YWhHoXoasSsLJs4\",\"5nugKwaWBJKTy6cL3\",\"qNLv2R8DeTEHW8vvQ\",\"mGaEDPw5FsDb3vdnq\",\"itoJJQ6NNpdp4xTDb\",\"tN9TQx9q5AQJEQZD5\",\"dcW9oK2uRo8h8mBe2\",\"T6iBEE2jp7f7iEF2P\",\"azAzSkvJd7eyXY9x9\",\"yXGiiSAR5nBHnH3yr\",\"gXTAie79kiw28tx5u\",\"Ph5T8dq7mfodHywaQ\",\"8Xx8nWXRydHDBGfQf\",\"yd5PakB2z33q2JrTZ\",\"oaAQrSKk3QhpCjocn\",\"p2woPCQKXuWJCwffJ\",\"DrkR35NqnP9NDLbq6\",\"cvr6YL5nEJcMon484\",\"9YGY6sGf5Mf9Pjvxf\",\"qb2DTmzQj4vNfq5K7\",\"p8qqFdJ3FSk5x9z3G\",\"yLxPKCW9rfJ4KEhbM\",\"ogRK4SgqzQH3phLwS\",\"pCbFsvyiooabCFEgd\",\"gmu2oGPZMfAs4Y7XX\",\"LNCb5rksJLJ43L4Nw\",\"GBqLEKP5xHXJrgAjM\",\"YLqdr7bYjwew2KM4N\",\"srJ34BaybkQh3qRkM\",\"Yfjwa5JBYcjRBmQAB\",\"ojykfC9SjTkRstbbS\",\"buX4mCQhtXCfBjeno\",\"qx6yvahdH8aw4Jnm7\",\"BnaE25vvCGcfL3jiQ\",\"dvqtXvh3qKT3HbgJz\",\"rhS8qXRjZcpDXkwnE\",\"dDJg3ZwX9c3CsfZNR\",\"a49eNnfRwSMxsDJXf\",\"r43Gfvd3E4khAXhNW\",\"GArCerEapdotZYMDy\",\"sxci7DYKNa6q22Sjq\",\"KMR6vNzvSKMA2cXnK\",\"rWhXHhzF4W8bea6LP\",\"xNwRx7v44XnPwa3qm\"],\"quality\":[4,5,5,5,4,4,5,5,5,5,5,5,5,4,5,5,5,5,4,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"isHidden\":false,\"quality\":4.75,\"family\":[{\"_id\":\"JR3T5o6PwzvuGnRge\",\"language\":\"cpp\"},{\"_id\":\"YuZYMkwnJpALmHELB\",\"language\":\"java\"},{\"_id\":\"APCAgm5FRnnC7ar87\",\"language\":\"javascript\"},{\"_id\":\"pRXTJpQmgSBwPYFdW\",\"language\":\"php\"},{\"_id\":\"9S8qp4XKG2qwQMdrb\",\"language\":\"python3\"},{\"_id\":\"x5fQibzhydCP7E8iJ\",\"language\":\"ruby\"},{\"_id\":\"t9sjvtYkgzvuXecbL\",\"language\":\"swift\"}]}}"]