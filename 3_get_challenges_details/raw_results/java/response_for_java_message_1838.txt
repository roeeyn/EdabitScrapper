a["{\"msg\":\"result\",\"id\":\"476\",\"result\":{\"_id\":\"uemLKqbbbfqvwB8ke\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n\\tpublic static String flip(String str, String spec) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.703125,\"familyId\":\"F7qv5qgsAp3Pys3Xs\",\"instructions\":\"Create a function that takes a string as the first argument, and a (string) specification as a second argument. If the specification is `\\\"word\\\"`, return a string with each word reversed while maintaining their original order. If the specification is `\\\"sentence\\\"`, reverse the order of the words in the string, while keeping the words intact.\\n\\n### Examples\\n```\\nstr = \\\"There's never enough time to do all the nothing you want\\\"\\n\\n\\nflip(\\\"Hello\\\", \\\"word\\\") ➞ \\\"olleH\\\"\\n\\nflip(\\\"Hello\\\", \\\"sentence\\\") ➞ \\\"Hello\\\"\\n\\nflip(str, \\\"word\\\") ➞ \\\"s'erehT reven hguone emit ot od lla eht gnihton uoy tnaw\\\"\\n\\nflip(str, \\\"sentence\\\") ➞ \\\"want you nothing the all do to time enough never There's\\\"\\n```\\n\\n### Notes\\nN/A\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(\\\"olleH\\\", Challenge.flip(\\\"Hello\\\", \\\"word\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(\\\"Hello\\\", Challenge.flip(\\\"Hello\\\", \\\"sentence\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(\\\"s'erehT reven hguone emit ot od lla eht gnihton uoy tnaw\\\", Challenge.flip(\\\"There's never enough time to do all the nothing you want\\\", \\\"word\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(\\\"want you nothing the all do to time enough never There's\\\", Challenge.flip(\\\"There's never enough time to do all the nothing you want\\\", \\\"sentence\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(\\\"I evah lla eseht taerg seneg tub er'yeht evissecer\\\", Challenge.flip(\\\"I have all these great genes but they're recessive\\\", \\\"word\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(\\\"recessive they're but genes great these all have I\\\", Challenge.flip(\\\"I have all these great genes but they're recessive\\\", \\\"sentence\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(\\\"I ekil smixam taht t'nod egaruocne roivaheb noitacifidom\\\", Challenge.flip(\\\"I like maxims that don't encourage behavior modification\\\", \\\"word\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n    assertEquals(\\\"modification behavior encourage don't that maxims like I\\\", Challenge.flip(\\\"I like maxims that don't encourage behavior modification\\\", \\\"sentence\\\"));\\n  }\\n}\\n\\n// Quotes credit: Bill Watterson\",\"language\":\"java\",\"summary\":\"Create a function that takes a string as the first argument, and a (string) specification as a second argument. If the specification is \\\"word\\\", return a string with each word reversed while maintaining their original order. If the specification is \\\"sentence\\\", reverse the order of the words in the string, while keeping the words intact.\\n\\nExamples\\nstr = \\\"There's\",\"tags\":[\"language_fundamentals\",\"strings\"],\"timestamp\":{\"$date\":1568480736581},\"title\":\"String Flips\",\"stats\":{\"completed\":{\"total\":73,\"ratings\":[2,2,2,2,2,0,2,2,3,3,2,1,0,2,1,2,2,0,2,0,2,3,2,2,1,2,1,2,2,1,0,1,1,2,1,2,1,1,1,2,3,3,3,1,2,0,2,2,2,2,1,2,2,2,2,2,2,2,3,1,2,2,2,2],\"rators\":[\"vRXuYYBNuHEQ29fbm\",\"3pdgguqZgNDSAJSGm\",\"sxci7DYKNa6q22Sjq\",\"9c8n7ti5vCjTRgiGN\",\"YF79LnTdprobbYY5v\",\"ct699TXH59y7Fhyh4\",\"t2kdBPj9qQAXY2Ehd\",\"3gxJoNp59B4eoyyed\",\"6KcnCdQ3zEnARWogF\",\"C6SHNpJDxTRmF4cs3\",\"Yohr2MmAyaWGMbB35\",\"u4yanfWeeZsN3xWgc\",\"J9zJq7PMGb6mqzcHW\",\"phA6MomRzh9oz3eqn\",\"8J2Dqqz9PaFufQzwY\",\"r9hHZYPQAqJ9DbwLX\",\"AyrEvM2GLX2jqM772\",\"Es4eX2stRpyoXeC7f\",\"HawgpaWZnHrBtve4P\",\"9gJsF5apWJGWZJprn\",\"4RHx3H8EwP2oboW8e\",\"TsbYd2EDGJn9X6SZb\",\"hB5mgzMwQSnhBzi7P\",\"Kso7rzAKB4TTCPKgM\",\"5seiNqw6ZXoF2GRRd\",\"fZjkX29nhRTWWb75k\",\"jyoLggHk8xQKZuoQC\",\"82weQfHHmno4Mq4X7\",\"TrquEHytntLKHA4m2\",\"WZujpe8yQAyZmpWHg\",\"C9yBWYcZsjmJYww3K\",\"etoSR23iELGGgs9rA\",\"DePiAS7u5Pk9d6SLr\",\"htXCitorobtqYymjN\",\"Yom3RzkMYpweE8cbS\",\"dpJTai3i9aNkCS3sa\",\"8zZ6xmzpiFair25qr\",\"Witn99Xo8Anbjpakg\",\"y6kfyYmydcD8tkBk7\",\"DzvdGwHEjqsX7wyKr\",\"g4NCSxxHqHCGMpWwT\",\"yHvCCNugSDhWTmiEJ\",\"YcjwCvYut6834Jzd8\",\"rvojHhKH3DaxotefQ\",\"azAzSkvJd7eyXY9x9\",\"yXGiiSAR5nBHnH3yr\",\"gXTAie79kiw28tx5u\",\"8Xx8nWXRydHDBGfQf\",\"jXTnL3JatkKjoifyb\",\"iZHowotDLiZumkTqy\",\"a49eNnfRwSMxsDJXf\",\"buX4mCQhtXCfBjeno\",\"4ySzqKC5s3ZRpG9di\",\"vAh63eGRwkuJtoP8v\",\"KMR6vNzvSKMA2cXnK\",\"rWhXHhzF4W8bea6LP\",\"PJu3WcTpfRrvHfQiS\",\"unqzSsxpxj9sZ7rbD\",\"xEX3TDY6C2h82dJTn\",\"FxPDKKibxnZjGJLs6\",\"uw47663LqPME8btaA\",\"wMY6G2GLpcTJCe74o\",\"PgWx8FY7BGoPMDbe7\"],\"quality\":[4,4,4,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.25,\"family\":[{\"_id\":\"LcQv54kCSEwPArq5G\",\"language\":\"cpp\"},{\"_id\":\"uemLKqbbbfqvwB8ke\",\"language\":\"java\"},{\"_id\":\"DmKPX7XLSTFPBxysD\",\"language\":\"javascript\"},{\"_id\":\"QY4rnzP7RTxcEtzfy\",\"language\":\"php\"},{\"_id\":\"JsLu5qWsJtuJuBZT4\",\"language\":\"python3\"},{\"_id\":\"pBTaffJCNJP8qKXjY\",\"language\":\"ruby\"}]}}"]