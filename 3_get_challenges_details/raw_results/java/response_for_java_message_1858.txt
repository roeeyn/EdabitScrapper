a["{\"msg\":\"result\",\"id\":\"488\",\"result\":{\"_id\":\"x2mxt5c6Qp4Nr5qDv\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class RoundToMillions {\\n  public static Object[] millionsRounding(Object[] cities) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":1.75,\"familyId\":\"gSxnr8EPkyeTP2FT6\",\"instructions\":\"Given an array of cities and populations, return an array where all populations are **rounded to the nearest million**.\\n\\n### Examples\\n```\\nmillionsRounding([\\n  [\\\"Nice\\\", 942208],\\n  [\\\"Abu Dhabi\\\", 1482816],\\n  [\\\"Naples\\\", 2186853],\\n  [\\\"Vatican City\\\", 572]\\n]) ➞ [\\n  [\\\"Nice\\\", 1000000],\\n  [\\\"Abu Dhabi\\\", 1000000],\\n  [\\\"Naples\\\", 2000000],\\n  [\\\"Vatican City\\\", 0]\\n]\\n\\nmillionsRounding([\\n  [\\\"Manila\\\", 13923452],\\n  [\\\"Kuala Lumpur\\\", 7996830],\\n  [\\\"Jakarta\\\", 10770487]\\n]) ➞ [\\n  [\\\"Manila\\\", 14000000],\\n  [\\\"Kuala Lumpur\\\", 8000000],\\n  [\\\"Jakarta\\\", 11000000]\\n]\\n```\\n\\n### Notes\\nRound down to **0** if a population is below **500,000.**\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"/** \\n============================================ \\nTestGen 4.0 for JUnit 4.13.0 \\t\\t\\nTest Case: RoundToMillions::millionsRounding \\nTimestamp: 01/25/2021 07:12:44 PM \\n-------------------------------------------- \\n® DARKKO 2021 © \\n============================================ \\n\\n**/ \\n\\nimport static org.junit.Assert.assertArrayEquals; \\nimport org.junit.Test; \\n\\npublic class RoundToMillionsTest {\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertArrayEquals(new Object[] {new Object[] {\\\"Tokyo\\\", 37000000}, new Object[] {\\\"Delhi\\\", 29000000}, new Object[] {\\\"Shanghai\\\", 26000000}}, RoundToMillions.millionsRounding(new Object[] {new Object[] {\\\"Tokyo\\\", 37435191}, new Object[] {\\\"Delhi\\\", 29399141}, new Object[] {\\\"Shanghai\\\", 26317104}}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertArrayEquals(new Object[] {new Object[] {\\\"Sao Paulo\\\", 22000000}}, RoundToMillions.millionsRounding(new Object[] {new Object[] {\\\"Sao Paulo\\\", 21846507}}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertArrayEquals(new Object[] {new Object[] {\\\"London\\\", 9000000}, new Object[] {\\\"Naples\\\", 2000000}, new Object[] {\\\"Nice\\\", 1000000}, new Object[] {\\\"Abu Dhabi\\\", 1000000}, new Object[] {\\\"Riga\\\", 1000000}, new Object[] {\\\"Vatican City\\\", 0}}, RoundToMillions.millionsRounding(new Object[] {new Object[] {\\\"London\\\", 9304016}, new Object[] {\\\"Naples\\\", 2186853}, new Object[] {\\\"Nice\\\", 942208}, new Object[] {\\\"Abu Dhabi\\\", 1482816}, new Object[] {\\\"Riga\\\", 630692}, new Object[] {\\\"Vatican City\\\", 572}}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertArrayEquals(new Object[] {}, RoundToMillions.millionsRounding(new Object[] {}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertArrayEquals(new Object[] {new Object[] {\\\"Manila\\\", 14000000}, new Object[] {\\\"Kuala Lumpur\\\", 8000000}, new Object[] {\\\"Jakarta\\\", 11000000}}, RoundToMillions.millionsRounding(new Object[] {new Object[] {\\\"Manila\\\", 13923452}, new Object[] {\\\"Kuala Lumpur\\\", 7996830}, new Object[] {\\\"Jakarta\\\", 10770487}}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertArrayEquals(new Object[] {new Object[] {\\\"Macau\\\", 1000000}, new Object[] {\\\"Hong Kong\\\", 8000000}, new Object[] {\\\"Beijing\\\", 20000000}}, RoundToMillions.millionsRounding(new Object[] {new Object[] {\\\"Macau\\\", 654743}, new Object[] {\\\"Hong Kong\\\", 7530053}, new Object[] {\\\"Beijing\\\", 20462610}}));\\n\\t}\\n}\\n// end of tests\\n// credit goes to the original author/publisher @Joshua Señoron\",\"language\":\"java\",\"quality\":4,\"summary\":\"Given an array of cities and populations, return an array where all populations are rounded to the nearest million.\\n\\nExamples\\nmillionsRounding([\\n  [\\\"Nice\\\", 942208],\\n  [\\\"Abu Dhabi\\\", 1482816],\\n  [\\\"Naples\\\", 2186853],\\n  [\\\"Vatican City\\\", 572]\\n]) ➞ [\\n  [\\\"Nice\\\", 1000000],\\n  [\\\"Abu Dhabi\\\", 1000000],\\n  [\\\"Naples\\\", 2000000],\\n  [\\\"Vatican City\\\", 0]\\n]\\n\\nmillionsRounding([\\n  [\",\"tags\":[\"language_fundamentals\",\"loops\",\"numbers\",\"objects\"],\"timestamp\":{\"$date\":1611574127892},\"title\":\"Rounding In Millions\",\"stats\":{\"completed\":{\"total\":16,\"ratings\":[1,1,1,1,1,1,2,2,1,2,2,1,2,3,3,2,2,2,3,2],\"quality\":[4],\"rators\":[\"a777e8chPvJkY3tKa\",\"E4fXhT2XL4T9mXGtF\",\"a49eNnfRwSMxsDJXf\",\"26S7LH2wXiJS2NzZ3\",\"8HvXDDKWdzneFkafd\",\"G6AsKHdHH2qvpD3FT\",\"KjfdxNAYWaXhFPZLc\",\"JF9PaR8godLvhL2jJ\",\"gBGjCfJvPHswDM5JQ\",\"RmFaEddcQhYYiwaNr\",\"DkSMZ3jZLkwviKb9g\",\"sxci7DYKNa6q22Sjq\",\"gXTAie79kiw28tx5u\",\"htXCitorobtqYymjN\",\"unqzSsxpxj9sZ7rbD\",\"uw47663LqPME8btaA\"]},\"flags\":0},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"x2mxt5c6Qp4Nr5qDv\",\"language\":\"java\"},{\"_id\":\"BeTYTkLerHFtrjH5u\",\"language\":\"javascript\"},{\"_id\":\"dsAHYjkunrynEsvF9\",\"language\":\"php\"},{\"_id\":\"iLH5TYHpLZwR5MSmF\",\"language\":\"python3\"},{\"_id\":\"bnyg7GxQ74cvBMps8\",\"language\":\"ruby\"}]}}"]