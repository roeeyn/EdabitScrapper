a["{\"msg\":\"result\",\"id\":\"572\",\"result\":{\"_id\":\"Yr2kTTb6zf5PNx6DE\",\"author\":\"Edward Clark\",\"authorId\":\"3pdgguqZgNDSAJSGm\",\"code\":\"public class Challenge {\\n\\tpublic static String replace_nth(String txt, int nth, String old_char, String new_char) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":2.156862745098039,\"familyId\":\"X7HLP42E78BJpqnDg\",\"instructions\":\"Create a function that takes a string and replaces every `nth` instance of `old_char` with `new_char`. Your function will have four parameters:\\n\\n- **txt** — The original input text to be processed.\\n- **nth** — The `nth` instance to be replaced.\\n- **old_char** — The character being replaced.\\n- **new_char** — The character replacing `old_char`.\\n\\nIn other words, if `txt` is \\\"abababa\\\", `nth` is 3, `old_char` is \\\"a\\\" and `new_char` is \\\"Z\\\", you would replace the 3rd insrtance of \\\"a\\\" with \\\"Z\\\", returning \\\"ababZba\\\".\\n\\n### Examples\\n```\\nreplace_nth(\\\"A glittering gem is not enough.\\\", 0, \\\"o\\\", \\\"-\\\")\\n➞ \\\"A glittering gem is not enough.\\\"\\n\\nreplace_nth(\\\"Vader said: No, I am your father!\\\", 2, \\\"a\\\", \\\"o\\\")\\n➞ \\\"Vader soid: No, I am your fother!\\\"\\n\\nreplace_nth(\\\"Writing a list of random sentences is harder than I initially thought it would be.\\\", 2, \\\"i\\\", \\\"3\\\")\\n➞ \\\"Writ3ng a list of random sentences 3s harder than I in3tially thought 3t would be.\\\"\\n```\\n\\n### Notes\\n- If `nth` is 0, negative or larger than instances of `old_char`, return the original string.\\n- Tests are case sensitive.\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTest {\\n  @Test\\n  public void test1() {\\n    assertEquals(\\\"Sometimes it is b_tter to just walk away from things and go back to them lat_r when you're in a b_tter frame of mind.\\\", Challenge.replace_nth(\\\"Sometimes it is better to just walk away from things and go back to them later when you're in a better frame of mind.\\\", 3, \\\"e\\\", \\\"_\\\"));\\n  }\\n\\t\\n  @Test\\n  public void test2() {\\n    assertEquals(\\\"The cl@ck within this bl@g and the cl@ck @n my lapt@p are 1 h@ur different fr@m each @ther.\\\", Challenge.replace_nth(\\\"The clock within this blog and the clock on my laptop are 1 hour different from each other.\\\", 1, \\\"o\\\", \\\"@\\\"));\\n  }\\n\\t\\n  @Test\\n  public void test3() {\\n    assertEquals(\\\"Lets all be unique together until we rea#ise we are all the same.\\\", Challenge.replace_nth(\\\"Lets all be unique together until we realise we are all the same.\\\", 4, \\\"l\\\", \\\"#\\\"));\\n  }\\n\\t\\n  @Test\\n  public void test4() {\\n    System.out.println(\\\"Tests are case sensitive.\\\");\\n    assertEquals(\\\"Sometimes, all you NExD to do is completely make an ass of yourself and laugh it off to realise that LIFE isn't so bad AFTxR all.\\\", Challenge.replace_nth(\\\"Sometimes, all you NEED to do is completely make an ass of yourself and laugh it off to realise that LIFE isn't so bad AFTER all.\\\", 2, \\\"E\\\", \\\"x\\\"));\\n  }\\n\\t\\n  @Test\\n  public void test5() {\\n    assertEquals(\\\"Is it free?\\\", Challenge.replace_nth(\\\"Is it free?\\\", 100, \\\"e\\\", \\\"Y\\\"));\\n  }\\n\\t\\n  @Test\\n  public void test6() {\\n    assertEquals(\\\"A glittering gem is not enough.\\\", Challenge.replace_nth(\\\"A glittering gem is not enough.\\\", 0, \\\"o\\\", \\\"-\\\"));\\n  }\\n\\t\\n  @Test\\n  public void test7() {\\n    assertEquals(\\\"Please wait outside of the house.\\\", Challenge.replace_nth(\\\"Please wait outside of the house.\\\", -3, \\\"s\\\", \\\"s\\\"));\\n  }\\n\\t\\n  @Test\\n  public void test8() {\\n    assertEquals(\\\"Joe made the sugar cookies; Susan d*corated them.\\\", Challenge.replace_nth(\\\"Joe made the sugar cookies; Susan decorated them.\\\", 5, \\\"e\\\", \\\"*\\\"));\\n  }\\n\\t\\n  @Test\\n  public void test9() {\\n    assertEquals(\\\"Writ3ng a list of random sentences 3s harder than I in3tially thought 3t would be.\\\", Challenge.replace_nth(\\\"Writing a list of random sentences is harder than I initially thought it would be.\\\", 2, \\\"i\\\", \\\"3\\\"));\\n  }\\n\\n  @Test\\n  public void test10() {\\n    assertEquals(\\\"The book is in front of the table.\\\", Challenge.replace_nth(\\\"The book is in front of the table.\\\", 3, \\\"f\\\", \\\"K\\\"));\\n  }  \\n}\",\"language\":\"java\",\"summary\":\"Create a function that takes a string and replaces every nth instance of oldchar with newchar. Your function will have four parameters:\\n\\ntxt — The original input text to be processed.\\nnth — The nth instance to be replaced.\\nold_char — The character being replaced.\\nnewchar — The character replacing oldchar.\\n\\nIn other words, if txt is \\\"abababa\\\", nth is 3, oldchar\",\"tags\":[\"algorithms\",\"strings\",\"formatting\",\"regex\"],\"timestamp\":{\"$date\":1570371139808},\"title\":\"Replace Every Nth Instance of a Character\",\"stats\":{\"completed\":{\"total\":57,\"ratings\":[2,2,2,2,2,4,2,0,3,2,3,2,3,2,3,0,3,3,3,2,1,1,1,2,1,3,2,3,2,1,4,3,2,2,2,0,2,3,2,3,3,1,2,3,0,3,2,3,3,3,2],\"rators\":[\"3pdgguqZgNDSAJSGm\",\"sxci7DYKNa6q22Sjq\",\"3gxJoNp59B4eoyyed\",\"cG4PEDMMx8jXhWP8T\",\"gofo35rKkbyPH9jFq\",\"eXW8reZCCZHQzJjQi\",\"CLmJduqJHX83dM4Pd\",\"Y4s5LuGr288y4QrN8\",\"J9zJq7PMGb6mqzcHW\",\"Es4eX2stRpyoXeC7f\",\"8J2Dqqz9PaFufQzwY\",\"cjxsqXfkAPoadmppi\",\"TrquEHytntLKHA4m2\",\"4RHx3H8EwP2oboW8e\",\"jyoLggHk8xQKZuoQC\",\"wYYMNPe8nSiJFbvJw\",\"5seiNqw6ZXoF2GRRd\",\"rehehi2Tr2mwaEoJE\",\"imoNrk36ozReP939p\",\"k63LjKkX5p7SYng7C\",\"mfm3gB39arY8Rjb2y\",\"4RsakkyRXyYGwFxEa\",\"nzmGPn6f2ceHnqFPE\",\"q2tzvkrLASvSjkek9\",\"etoSR23iELGGgs9rA\",\"Ym8AjbKGSJooun3nt\",\"iN2eQoEbsJ6XRL5Np\",\"DzvdGwHEjqsX7wyKr\",\"N3HLmYG9RSbwEbnv8\",\"gXTAie79kiw28tx5u\",\"yXGiiSAR5nBHnH3yr\",\"YL9pqyCu8xsds8J49\",\"mQKWauR6b252TmdX4\",\"8Xx8nWXRydHDBGfQf\",\"jXTnL3JatkKjoifyb\",\"o8mBo4PFB8oMSCC89\",\"82weQfHHmno4Mq4X7\",\"LNCb5rksJLJ43L4Nw\",\"HsFc9PgmpP2X9Fwh9\",\"rhS8qXRjZcpDXkwnE\",\"C6fJvPAqKzJcetbAm\",\"buX4mCQhtXCfBjeno\",\"CggGfsERnPKGupFWp\",\"wFRLGjA56kj7xyhmv\",\"2NJZbusRvu3eJ4tHu\",\"vRXuYYBNuHEQ29fbm\",\"rWhXHhzF4W8bea6LP\",\"a49eNnfRwSMxsDJXf\",\"KMR6vNzvSKMA2cXnK\",\"htXCitorobtqYymjN\",\"DWXKZKmRWxE5R6fhj\",\"uw47663LqPME8btaA\"],\"quality\":[3,5,4,4,4,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.166666666666667,\"family\":[{\"_id\":\"FBN4ohizzRMZFyjhd\",\"language\":\"cpp\"},{\"_id\":\"Yr2kTTb6zf5PNx6DE\",\"language\":\"java\"},{\"_id\":\"FSJcckvq4rry72xCw\",\"language\":\"javascript\"},{\"_id\":\"Eou5gLqeXZu5mKjeA\",\"language\":\"python3\"},{\"_id\":\"Ag5SRav4WMCahF2bG\",\"language\":\"ruby\"}]}}"]