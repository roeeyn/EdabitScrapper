a["{\"msg\":\"result\",\"id\":\"252\",\"result\":{\"_id\":\"XD6bQFpCZWiAMPanQ\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"public class Challenge {\\n\\tpublic static int[] amplify(int num) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.119914346895075,\"familyId\":\"sKNY68bZ4wsYrqZfP\",\"instructions\":\"Create a function that takes an integer and returns an array from 1 to the given number, where:\\n\\n1. If the number **can be divided** evenly by 4, amplify it by 10 (i.e. return 10 times the number).\\n2. If the number **cannot be divided** evenly by 4, simply return the number.\\n\\n### Examples\\n```\\namplify(4) ➞ [1, 2, 3, 40]\\n\\namplify(3) ➞ [1, 2, 3]\\n\\namplify(25) ➞ [1, 2, 3, 40, 5, 6, 7, 80, 9, 10, 11, 120, 13, 14, 15, 160, 17, 18, 19, 200, 21, 22, 23, 240, 25]\\n```\\n\\n### Notes\\n- The given integer will always be equal to or greater than 1.\\n- Include the number (see example above).\",\"lab\":\"import static org.hamcrest.core.Is.is;\\nimport org.junit.Test;\\nimport static org.junit.Assert.assertThat;\\n\\npublic class ChallengeTests {\\n\\t@Test \\n\\tpublic void test1() {\\n\\t\\tassertThat(Challenge.amplify(1), is(new int[]{1}));\\n\\t}\\n\\t\\n\\t@Test \\n\\tpublic void test2() {\\n\\t\\tassertThat(Challenge.amplify(4), is(new int[]{1, 2, 3, 40}));\\n\\t}\\n\\t\\n\\t@Test \\n\\tpublic void test3() {\\n\\t\\tassertThat(Challenge.amplify(25), is(new int[]{1, 2, 3, 40, 5, 6, 7, 80, 9, 10, 11, 120, 13, 14, 15, 160, 17, 18, 19, 200, 21, 22, 23, 240, 25}));\\n\\t}\\n\\t\\n\\t@Test \\n\\tpublic void test4() {\\n\\t\\tassertThat(Challenge.amplify(100), is(new int[]{1, 2, 3, 40, 5, 6, 7, 80, 9, 10, 11, 120, 13, 14, 15, 160, 17, 18, 19, 200, 21, 22, 23, 240, 25, 26, 27, 280, 29, 30, 31, 320, 33, 34, 35, 360, 37, 38, 39, 400, 41, 42, 43, 440, 45, 46, 47, 480, 49, 50, 51, 520, 53, 54, 55, 560, 57, 58, 59, 600, 61, 62, 63, 640, 65, 66, 67, 680, 69, 70, 71, 720, 73, 74, 75, 760,77, 78, 79, 800, 81, 82, 83, 840, 85, 86, 87, 880, 89, 90, 91,920, 93, 94, 95, 960, 97, 98, 99, 1000}));\\n\\t}\\n\\t\\n\\t@Test \\n\\tpublic void test5() {\\n\\t\\tassertThat(Challenge.amplify(333), is(new int[]{1, 2, 3, 40, 5, 6, 7, 80, 9, 10, 11, 120, 13, 14, 15, 160, 17, 18, 19, 200, 21, 22, 23, 240, 25, 26, 27, 280, 29, 30, 31, 320, 33, 34, 35, 360, 37, 38, 39, 400, 41, 42, 43, 440, 45, 46, 47, 480, 49, 50, 51, 520, 53, 54, 55, 560, 57, 58, 59, 600, 61, 62, 63, 640, 65, 66, 67, 680, 69, 70, 71, 720, 73, 74, 75, 760,77, 78, 79, 800, 81, 82, 83, 840, 85, 86, 87, 880, 89, 90, 91,920, 93, 94, 95, 960, 97, 98, 99, 1000, 101, 102, 103, 1040, 105, 106, 107, 1080, 109, 110, 111, 1120, 113, 114, 115, 1160, 117, 118, 119, 1200, 121, 122, 123, 1240, 125, 126, 127, 1280, 129, 130, 131, 1320, 133, 134, 135, 1360, 137, 138, 139, 1400, 141, 142, 143, 1440, 145, 146, 147, 1480, 149, 150, 151, 1520, 153, 154, 155, 1560, 157, 158, 159, 1600, 161, 162, 163, 1640, 165, 166, 167, 1680, 169, 170, 171, 1720, 173, 174, 175, 1760, 177, 178, 179, 1800, 181, 182, 183, 1840, 185, 186, 187, 1880, 189, 190, 191, 1920, 193, 194, 195, 1960, 197, 198, 199, 2000, 201, 202, 203, 2040, 205, 206, 207, 2080, 209, 210, 211, 2120, 213, 214, 215, 2160, 217, 218, 219, 2200, 221, 222, 223, 2240, 225, 226, 227, 2280, 229, 230, 231, 2320, 233, 234, 235, 2360, 237, 238, 239, 2400, 241, 242, 243, 2440, 245, 246, 247, 2480, 249, 250, 251, 2520, 253, 254, 255, 2560, 257, 258, 259, 2600, 261, 262, 263, 2640, 265, 266, 267, 2680, 269, 270, 271, 2720, 273, 274, 275, 2760, 277, 278, 279, 2800, 281, 282, 283, 2840, 285, 286, 287, 2880, 289, 290, 291, 2920, 293, 294, 295, 2960, 297, 298, 299, 3000, 301, 302, 303, 3040, 305, 306, 307, 3080, 309, 310, 311, 3120, 313, 314, 315, 3160, 317, 318, 319, 3200, 321, 322, 323, 3240, 325, 326, 327, 3280, 329, 330, 331, 3320, 333}));\\n\\t}\\n\\t\\n\\t@Test \\n\\tpublic void test6() {\\n\\t\\tassertThat(Challenge.amplify(500), is(new int[]{1, 2, 3, 40, 5, 6, 7, 80, 9, 10, 11, 120, 13, 14, 15, 160, 17, 18, 19, 200, 21, 22, 23, 240, 25, 26, 27, 280, 29, 30, 31, 320, 33, 34, 35, 360, 37, 38, 39, 400, 41, 42, 43, 440, 45, 46, 47, 480, 49, 50, 51, 520, 53, 54, 55, 560, 57, 58, 59, 600, 61, 62, 63, 640, 65, 66, 67, 680, 69, 70, 71, 720, 73, 74, 75, 760,77, 78, 79, 800, 81, 82, 83, 840, 85, 86, 87, 880, 89, 90, 91,920, 93, 94, 95, 960, 97, 98, 99, 1000, 101, 102, 103, 1040, 105, 106, 107, 1080, 109, 110, 111, 1120, 113, 114, 115, 1160, 117, 118, 119, 1200, 121, 122, 123, 1240, 125, 126, 127, 1280, 129, 130, 131, 1320, 133, 134, 135, 1360, 137, 138, 139, 1400, 141, 142, 143, 1440, 145, 146, 147, 1480, 149, 150, 151, 1520, 153, 154, 155, 1560, 157, 158, 159, 1600, 161, 162, 163, 1640, 165, 166, 167, 1680, 169, 170, 171, 1720, 173, 174, 175, 1760, 177, 178, 179, 1800, 181, 182, 183, 1840, 185, 186, 187, 1880, 189, 190, 191, 1920, 193, 194, 195, 1960, 197, 198, 199, 2000, 201, 202, 203, 2040, 205, 206, 207, 2080, 209, 210, 211, 2120, 213, 214, 215, 2160, 217, 218, 219, 2200, 221, 222, 223, 2240, 225, 226, 227, 2280, 229, 230, 231, 2320, 233, 234, 235, 2360, 237, 238, 239, 2400, 241, 242, 243, 2440, 245, 246, 247, 2480, 249, 250, 251, 2520, 253, 254, 255, 2560, 257, 258, 259, 2600, 261, 262, 263, 2640, 265, 266, 267, 2680, 269, 270, 271, 2720, 273, 274, 275, 2760, 277, 278, 279, 2800, 281, 282, 283, 2840, 285, 286, 287, 2880, 289, 290, 291, 2920, 293, 294, 295, 2960, 297, 298, 299, 3000, 301, 302, 303, 3040, 305, 306, 307, 3080, 309, 310, 311, 3120, 313, 314, 315, 3160, 317, 318, 319, 3200, 321, 322, 323, 3240, 325, 326, 327, 3280, 329, 330, 331, 3320, 333, 334, 335, 3360, 337, 338, 339, 3400, 341, 342, 343, 3440, 345, 346, 347, 3480, 349, 350, 351, 3520, 353, 354, 355, 3560, 357, 358, 359, 3600, 361, 362, 363, 3640, 365, 366, 367, 3680, 369, 370, 371, 3720, 373, 374, 375, 3760, 377, 378, 379, 3800, 381, 382, 383, 3840, 385, 386, 387, 3880, 389, 390, 391, 3920, 393, 394, 395, 3960, 397, 398, 399, 4000, 401, 402, 403, 4040, 405, 406, 407, 4080, 409, 410, 411, 4120, 413, 414, 415, 4160, 417, 418, 419, 4200, 421, 422, 423, 4240, 425, 426, 427, 4280, 429, 430, 431, 4320, 433, 434, 435, 4360, 437, 438, 439, 4400, 441, 442, 443, 4440, 445, 446, 447, 4480, 449, 450, 451, 4520, 453, 454, 455, 4560, 457, 458, 459, 4600, 461, 462, 463, 4640, 465, 466, 467, 4680, 469, 470, 471, 4720, 473, 474, 475, 4760, 477, 478, 479, 4800, 481, 482, 483, 4840, 485, 486, 487, 4880, 489, 490, 491, 4920, 493, 494, 495, 4960, 497, 498, 499, 5000}));\\n\\t}\\n}\",\"language\":\"java\",\"summary\":\"Create a function that takes an integer and returns an array from 1 to the given number, where:\\n\\nIf the number can be divided evenly by 4, amplify it by 10 (i.e. return 10 times the number).\\nIf the number cannot be divided evenly by 4, simply return the number.\\n\\nExamples\\namplify(4) ➞ [1, 2, 3, 40]\\n\\namplify(3) ➞ [1, 2, 3]\\n\\namplify(25) ➞ [1, 2, 3, 40, 5, 6, 7, 8\",\"tags\":[\"algebra\",\"arrays\",\"math\",\"loops\"],\"timestamp\":{\"$date\":1555886841991},\"title\":\"Amplify the Multiples of Four\",\"stats\":{\"completed\":{\"total\":559,\"ratings\":[1,1,1,1,1,1,1,1,1,1,0,1,1,1,2,2,1,2,1,1,0,1,1,0,0,1,0,1,0,2,1,0,0,2,0,0,1,0,0,0,0,0,1,0,0,0,0,3,2,1,2,1,1,1,0,0,1,1,2,0,1,2,1,2,2,1,2,1,0,1,0,1,2,1,2,0,5,1,2,1,1,1,1,1,2,1,1,2,1,1,3,0,1,2,0,1,1,1,1,1,0,0,1,1,2,2,1,2,1,1,2,1,0,1,2,1,1,0,2,1,1,1,2,0,1,1,0,2,1,1,0,2,1,1,1,1,1,4,1,1,1,0,1,1,1,2,1,1,2,1,1,1,1,1,2,0,0,1,0,1,0,2,2,0,0,2,1,1,1,2,1,1,1,1,1,1,0,4,1,2,0,1,2,1,1,0,2,0,2,0,1,1,0,1,0,1,1,1,3,1,1,1,2,0,1,2,1,1,1,2,0,2,1,1,1,0,2,2,1,1,1,2,2,1,1,2,1,1,0,2,1,1,1,1,0,2,1,2,1,0,2,1,0,1,1,0,1,1,1,0,2,2,4,0,1,3,0,0,0,1,0,1,1,2,0,1,0,1,1,1,1,2,0,0,1,1,1,0,1,3,0,0,1,2,1,1,1,2,2,1,1,2,0,1,0,1,0,1,1,1,1,2,2,1,1,1,3,0,1,1,3,1,2,2,1,1,0,0,1,2,1,3,3,1,5,0,0,2,2,1,1,1,1,0,2,3,0,2,4,1,2,2,1,1,1,1,0,1,1,2,1,1,1,0,2,0,0,1,1,1,1,0,3,2,0,0,1,2,0,1,1,1,2,1,1,0,0,2,1,5,0,2,1,1,1,1,2,1,2,1,2,2,2,2,1,1,2,2,1,1,2,2,2,0,3,1,0,1,1,1,1,2,0,1,1,1,1,1,0,1,0,2,2,1,2,1,1,1,2,0,2,2,1,1,1,2,1,0,1,1,1,1,1,3,2,1,2,2,1,1,2,1,1,2,3,1,0,1,1,1,0,1,2,1,2,1,1],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"yJyjT7Z2PPQmzzWpP\",\"erJWHqarGkGtPJ3C4\",\"34rKGZYu7vEdoCu7d\",\"mL4aTn2mfeypmYJc9\",\"u437YTqDGSjh49fsY\",\"afMjsKHpEPtAKaGKq\",\"6akGaXW83HnSC5PSy\",\"r5D2QDAKARPAWYYLs\",\"5znpaFDoToJtAtF3h\",\"ydos8Ba8nZdYRNJpS\",\"QS5RGoPnapStFD5Gi\",\"T6j7qdvD37y8DLKzT\",\"CDkkdvDdqjDihTcFS\",\"veu3fKkK2DSkKTkb2\",\"cp3X8hk8yNME7qoD9\",\"NJMsHk9afHMESbfhQ\",\"JSSLvJPs8JebyfeS9\",\"yhk8G8cM3p9JAbfJN\",\"n5wubRfh6zh8QRymN\",\"WAMxBrgasiphg5QPL\",\"Soe2jeXhozMpNyrDa\",\"vRXuYYBNuHEQ29fbm\",\"a49eNnfRwSMxsDJXf\",\"qGFqqzbwxiz7kZkPW\",\"TWNRBxfRjNpQh2skr\",\"rjPTba7pjdYonCHoN\",\"Lkoo57Q2GJXjBnyMR\",\"FocLpCB2WEiK2gGni\",\"sxci7DYKNa6q22Sjq\",\"9c8n7ti5vCjTRgiGN\",\"Yohr2MmAyaWGMbB35\",\"p28tmk8bcHjXsxaAg\",\"HTdEyxtkq87EJN2Aw\",\"t2kdBPj9qQAXY2Ehd\",\"3gxJoNp59B4eoyyed\",\"ZBDiEMi7dbjRL55LB\",\"LvPcgns5Ec7wyMbMv\",\"NCB3RaRBonefnHBJD\",\"zh9GGSpmAnDvdARMv\",\"p4KXbYG8ddyCQrbAs\",\"tGFBboeb468u2mvNy\",\"kATmHTX3wYNsc7txa\",\"NTd5kJGSpLW3jcgFu\",\"Mg6qxm83nhPfRSZLg\",\"pr4Cm4A369tC9gSeT\",\"FCtas8YzE46B9BAyf\",\"SfhMTK5ykctdKbCSp\",\"5Ffhtrb9XnAy8RxFs\",\"CYt2jTCEuK9dYWruk\",\"mQCQNauuBvtmnrCLT\",\"9XAgihntsrrg6G95i\",\"NLXx55dzDY9DryZ4z\",\"3R4TwRdkvrAxkvfeq\",\"XJsankyB4bBeK2eJv\",\"xSEmRd4HzFMnoJspg\",\"7p3Btn9oRNStAZ8G6\",\"3KjxQu9RZ8ZSywvLz\",\"jXvF9KLBisysx3wG2\",\"fzmoHvQYmC83oLBTK\",\"ibMMTukRMaT6NgixP\",\"xLM7fixA2NboAPAND\",\"nMwFZCM5vT2BGvatN\",\"AgFac67AGuAuuYDTd\",\"qp2WN8enrc3JaepdK\",\"AbRtpsS7PDMMLuAfp\",\"TtHL4YeiDJx7ZtxrX\",\"6hDCMSAfmNjnA9jvw\",\"yfjeCXWoRnXQhJAvk\",\"BEZ9EWC4mzkN3GbAA\",\"gBGjCfJvPHswDM5JQ\",\"CLmJduqJHX83dM4Pd\",\"toZsDEaLL7ptnFskQ\",\"CHWjZ3SMX8vj3Hrji\",\"Juocz4FuieWbf4hYd\",\"aa9qKdZgFJzp3Qncn\",\"8JyqsSbN2FJXPr3cw\",\"9aYyBYbm8MkpeBrFG\",\"XPABiA5rmJcEZujY3\",\"HBgPTjhMkJ2WCcBP7\",\"63mo47CoSdyJs3Dgm\",\"D3ASM3aWpcQ8gvnin\",\"urckS99caSjRxPBvp\",\"3XvbdaPm47SaJtzrC\",\"CggGfsERnPKGupFWp\",\"J9zJq7PMGb6mqzcHW\",\"4fnfzhzzrxYabZcES\",\"qJZsi5rhRnWA38FbA\",\"Md3zwe6ZCp4vqdx5j\",\"bk6Sjnh52qNCYNggH\",\"u4yanfWeeZsN3xWgc\",\"CPgJteAqYJ2n9idPw\",\"tmcjBArYTgRPxCWpM\",\"ZDbtCzQttEPCTwkTR\",\"FSSM3xcaTXGcxqYGz\",\"C9yBWYcZsjmJYww3K\",\"gxQQdRAwMoSrPCRnF\",\"HsFc9PgmpP2X9Fwh9\",\"AyrEvM2GLX2jqM772\",\"2E9vrrE9CksueDvPA\",\"cwfpQQAowCJCE3zME\",\"XdK5xWaepoXj5Y3xv\",\"vsgfPe856FTF9scZG\",\"nx5kpw8WLtZwDhnqC\",\"2cdvd8yuPLSwvGj9w\",\"qx9XHErKygcLiFGhX\",\"YLwJkF2wuL3n9o6a2\",\"3HPMi9FCqRr8oxYvg\",\"fZjkX29nhRTWWb75k\",\"JMh7pkAJMA3P5B9uu\",\"fLfNZMWQXBHSM9uRr\",\"gp77RykRkHQtqbE9C\",\"NrSqKXXpaus7PGdiy\",\"Z988BnMH9vd8epArK\",\"8AN8WuwPCXqnnD8yt\",\"uw47663LqPME8btaA\",\"W347YkKWzfvMbkuHr\",\"MJMEESuirNXM2diop\",\"dm4ki3fhfE52M3AJL\",\"AGW334kSGCybcQvFz\",\"GXDR2MbzEL5aQEk6d\",\"LGxxXbZTJgx39fRLT\",\"EdX9XJTJjEDaqPDfp\",\"ejLswe9PWd9hbde75\",\"YF79LnTdprobbYY5v\",\"Fdq6CxMWZL8WZiNaM\",\"J7KyFPYWWJCnniDbQ\",\"49cBh6BKgDpX8PtBX\",\"Bo457Fm7HpxBzs5YT\",\"YLqdr7bYjwew2KM4N\",\"XPhLf7JYc6mmBYR9A\",\"AcK5ppXpcA2dtKREa\",\"5RcAXjQAbqQtWppy6\",\"PS8eGnH9Coou7kAQQ\",\"jDuY4gx4aJRp8SHbm\",\"uqNAu5PZnSDRqZKoN\",\"cfi8jhhSJ3Nq2gvqf\",\"yK7zzK2aGJwuWKHRL\",\"6hNyHPrgPqHDd2SSe\",\"xEuitW7gMaqzhq6x8\",\"fZky27mpbfX7soJKa\",\"MrNyfG8SGjjBKLvgc\",\"njhNmS8vivtvBFBoz\",\"5JjtzrfXtXzbHYJJj\",\"5ac8TJimJnCHgY8Wk\",\"eZjHwgBfkQPCxmutr\",\"ko7oJ85JMftgcbkrr\",\"c89SxuYYjfeRh4toG\",\"fJB9eLXkKWkS4GTCz\",\"sbEQDGeo3mvLJCZrE\",\"9gJsF5apWJGWZJprn\",\"n2DdqY5Ae45RunSDh\",\"F9YrmbE5JY5e7233v\",\"b4kvtfR2SqyBfbraY\",\"8J2Dqqz9PaFufQzwY\",\"FaM7yyJzG86Nok5Tb\",\"YaRwtDmew36GqkDtf\",\"M5n9zd5LtuuwJr668\",\"S8NaYMWB3aZXgRdvH\",\"mRwxbzaBc4Fg5q9Hw\",\"PqAepaMciyBb7QQRK\",\"bsXDWXhsuqgaZYCCv\",\"EZNT8B7yQnnZmuwCf\",\"5Kf9z3G9QBs9fkvLs\",\"xnhBi4BCdJNAXXRvk\",\"WuAkXKpcrQy867yCw\",\"2PR653L4KSN97r534\",\"XogKZhczbDGZaXEZm\",\"f5S62H6mn7sThRr5v\",\"9nzphJfx5TxdiqNsE\",\"Bwns2nPYLQgxYrHWT\",\"j2hKJg9sh9m3HWFgo\",\"Es4eX2stRpyoXeC7f\",\"xA7nZb76wDpxmHSt4\",\"gGnDsJz5hr2t9MKCF\",\"oeEDPQaCwHFFXsrny\",\"YFHkjbM6obMSj24zi\",\"Zk9TXKvazsev3uWwT\",\"KXYHpCQvmTtpbGXYg\",\"PgSrAtgBYoKNgYJtS\",\"g3MReD5ntBtecotoa\",\"iN2eQoEbsJ6XRL5Np\",\"fbYN9Jp46RqBqCd2K\",\"wYYMNPe8nSiJFbvJw\",\"Qy32edSg4rrbh5ftf\",\"4hYyZnCuvgfuxhd7e\",\"DzvdGwHEjqsX7wyKr\",\"etoSR23iELGGgs9rA\",\"HawgpaWZnHrBtve4P\",\"f6uGKbmMdBYCjrMBh\",\"chyo75yA6YBfW56yT\",\"RLdk87iKTTNEx4yF7\",\"PXBjtEAAwibHxNZXq\",\"feubnquqgyoq3sa3Q\",\"d5kShDFGcGBwrs2c3\",\"ye5Krzmpgt8keXCnx\",\"8aT6LTh9RLwFkmKrM\",\"NmPmNyWCPj7ck6ZkA\",\"jDTGwryGygbZiqCEg\",\"v8RN8p2B6xdebkXAY\",\"aHqxyQCEtWZgczYEv\",\"rTj67TTydxqkpwFtN\",\"cKiFZKYeEGWd6uT5p\",\"uYv96ZSpA7tBHoAGX\",\"Xc4m9Hst8SgXswpTh\",\"yv7c4H2jimSKHEjtG\",\"mdEQJ2fmGmkbhbvNw\",\"9NzAqnwdvjj7KQ369\",\"5RmiJYq455468QDbx\",\"cdcYSPc8rGJZrMnfS\",\"hgR55DYN6zxHXNeRb\",\"dYx4nRm7ynaYSgrxK\",\"PfGhnk2qyJ5Hc3q9R\",\"jhoZyJtWj7sy7YYjj\",\"Zvu2nty8qKdBDBvM4\",\"Kso7rzAKB4TTCPKgM\",\"cGebawowzCKcFn8gq\",\"82weQfHHmno4Mq4X7\",\"aGmi6SaZpcYsu5MQb\",\"bw6kHP3k8dP2qBa5v\",\"LZSxphM8vH4A6Deqn\",\"c7sE7kceskbYy3KmA\",\"hB5mgzMwQSnhBzi7P\",\"GEzaJZ2cPjENT4ERQ\",\"zeE9TvhkPfebAq9n8\",\"jyoLggHk8xQKZuoQC\",\"8SabHk4meXzHQWaLb\",\"TrquEHytntLKHA4m2\",\"DzLdw6wEL2Nt5mrsp\",\"5seiNqw6ZXoF2GRRd\",\"FfoXJ7zYXwDbyiC6M\",\"8zZ6xmzpiFair25qr\",\"Xxh4mouSqCQwxnenc\",\"gJbvbqosimaP4ZAYb\",\"tqSJxy6E4vaTyECkh\",\"Yp7uvStL97cC9fKkY\",\"n4G4b5PABdGHCaHNH\",\"ZqjP4M6dzu32To33K\",\"B4pxRqzo43M7S8FbP\",\"udjSmfH6yRHNtPM3o\",\"3EfDGZ9Sgz5zxzD7a\",\"DePiAS7u5Pk9d6SLr\",\"nkftR9uDB88zyLdGf\",\"uwkPQ7ZYQyyg6Qyre\",\"PaSg9dpK6JHre7hGF\",\"SmmkwyvSHT54PzB5B\",\"iq55QasecYJXKz8rx\",\"WZujpe8yQAyZmpWHg\",\"F4synR7Ea8yS2L576\",\"ZQEo2nzPtJHGx2cM7\",\"Dwg87a7awYWRiXFSH\",\"7ZtjCkSQimK9SnB5K\",\"tx8SEv7RZFhv7yPBi\",\"KHiSyCFP4SLMXcvfx\",\"wwLsGETp2txCdQiJa\",\"cjxsqXfkAPoadmppi\",\"gKSKvaXxL4pCoNj6m\",\"sMMZEGp5gw9KS7MJv\",\"KxLMWekCxzy2Eem7u\",\"rwETZ6XCNoHCEyB66\",\"waz46PhT8QwnTWMBR\",\"dDP6nt8ihp6FPeT27\",\"ujER6DyJuNvH7EMSR\",\"9pCPyhvQmbkWyD2LL\",\"3qggY3TrN3xNaMDBp\",\"meS77LKqRswhF5LAy\",\"z2crWv2athzYWTBMa\",\"Ctuq7Wc8QPQmzwPK3\",\"jffNbwRwxCbZaBduu\",\"htXCitorobtqYymjN\",\"nHqghrceipymrNhH9\",\"uRgbrK32AffPh4eQd\",\"x9DLdCxBCzBRCfM5E\",\"rvojHhKH3DaxotefQ\",\"raNY8F7B7kZzRQyaP\",\"hhxjQREtmHSheH9Pj\",\"AeJSxRqw2dJZuGvdk\",\"RH77XM7SqHx6E2qwB\",\"Bhm2pmsZYniJtvfK4\",\"EdMYkEJhcR45bsSZx\",\"Gnz7fQmGAHp7Mup3d\",\"mRydJsPfSY58Bwwoh\",\"y6kfyYmydcD8tkBk7\",\"45FXSeKSLChn3gEhc\",\"xvuMXeFzF7Z2JfKyg\",\"zwruFCmuHkwJTpYqg\",\"DkSMZ3jZLkwviKb9g\",\"cRzTomuHFMY955aQC\",\"RCprdTx8wN77Lqdji\",\"GEDsDpNX4QMhZAxtJ\",\"ojmmLWL7Hvi6yYWeJ\",\"Yom3RzkMYpweE8cbS\",\"kWobGYgZWJxN6ZddF\",\"RWqwvDdMSWctvc8eJ\",\"irDgkguQ8h8SPTx8o\",\"a7p4vD3eoANQYqiod\",\"EpdxBe6nRuA9Ht7pm\",\"EcKPDmD4GmeFJGDTL\",\"M72HjdFKgTaQNcGas\",\"BmMA5FBX7NKpLj8ur\",\"cR3ibTMxLyEdDFCHY\",\"smuLDcXt5RcXQQMKZ\",\"wMvNbysArkmmqZBy4\",\"q2X5hMejrpAGGd3hW\",\"NHj7tZQMAZc947RzW\",\"q2tzvkrLASvSjkek9\",\"SE5G2Caf3btnuGmz6\",\"TBamPvEAh6xARn8Kd\",\"cshxEGRktj2uFzwtA\",\"jLv4ckjWQwHRAiYKT\",\"MjSWzCTqno5fQoEbQ\",\"PTRYb5rBAmcdP4q87\",\"8paynGt66tAKJivFF\",\"b6MNGsFS2ZvwCpEn9\",\"QXkrEiAuhuXaZmL4C\",\"MxmG8Gkti7L5kXYNL\",\"CweSNtrMCbkZLY2Zj\",\"ZrXkPD45QRS4oXJmA\",\"n3t3EEpCSyPZn7bc4\",\"osXNzc2aCxspRwheS\",\"MNpQzm8CBniECBqsr\",\"vZEydfdSPu2adZLMF\",\"nbH6pjzJS9Z35JD9r\",\"PHkmuovANGzadceGW\",\"g4NCSxxHqHCGMpWwT\",\"NiepfHQF6AzFcmtXk\",\"9KAbm9niQ9Cv9LefP\",\"muXMnzQwGLzN6j2Jr\",\"ZMd8it647JSYTvx8Z\",\"ZiN6yB9rACMaYgseC\",\"DAQX9mhHdMTqyYbvh\",\"RhPg33AdzvSZmibXa\",\"5k2ij6wHTSzBpgCky\",\"kGukLA3PXkaiaXfbk\",\"YcjwCvYut6834Jzd8\",\"q8o9QP8g7gv2NifyB\",\"yb8T3nuL4evaeJW6k\",\"ZXWDtCrM9ev3439oi\",\"k2tXkx7AyX77tQDRo\",\"w8nt7MwYJg95RuuZd\",\"TCTZucJN3tJh5t7MB\",\"7Wq4ZNz5c3irDR6br\",\"hPx9H3YM8j2k94DNW\",\"R2EJfZ2yGCuFquWrM\",\"NzJKK8Cuf3bcqZfcw\",\"ovqx6WjgmuvhNaiQR\",\"Fd9765rksgPK4E2Zy\",\"uqnjMLLae4heAZNNe\",\"FrorBN8wRAoptuxtR\",\"aT4e5PXghY4r4nFto\",\"TF56N5G8CGnCTy23E\",\"fRYcPHuyEdqngMzC4\",\"ENPyXmYYuQuZZAgRz\",\"kh7Tw42Li3AW5Jej4\",\"hDeaTsprkH6CmvSAR\",\"Ker3qHbupCrZJZyfQ\",\"QqTP27sC79gmiQdzS\",\"ePioboaTtHBoYMPE7\",\"KCEsMas5BbmiD2Q9K\",\"QAr6AxMvrPhKaMA8N\",\"Tf7TJFSPktJBgLA4k\",\"3gsee8akczMZGhihG\",\"ZkvBs5oddaBfKj28G\",\"hx3ZWiCKNtqwMWFCt\",\"35FLKaQ7LJdA7pJZG\",\"yXGiiSAR5nBHnH3yr\",\"gqiH4FBBcffZPnyz7\",\"sSLCfQq6WTHJnpKF8\",\"Ym8AjbKGSJooun3nt\",\"SbDRsLR6yfZXETyKN\",\"NjnPrCrnMkqYTjK2Y\",\"j35keTRCCAaeXTEN7\",\"bvPmwuN7mvNfesHGe\",\"mwDdQwbZN6tXwAbBA\",\"kQRtmSZfHdSzFserc\",\"8AvGnwLnDrHXAwX38\",\"8qNSPHZBpmjSTt3tH\",\"tnYXC3cGqycxRzCgT\",\"azAzSkvJd7eyXY9x9\",\"YDu9cJ4koo6nqtqAt\",\"zTEKMLMevG8xfxEj6\",\"cGXpNXagsz9LCqMBS\",\"ygmKmjF4ja52BrNMR\",\"ydF8Re5wK8MmaDbLh\",\"XqCezh9tkEKaKJopQ\",\"qTXNwXBDtH3j6t7hw\",\"bjKYBdDcGMRTfooBs\",\"jb9RLyyuo565bKDzN\",\"2ZyE8mq3cJWTWSH8v\",\"SfmXqCfDksMb883DC\",\"a777e8chPvJkY3tKa\",\"JszPst3958te56jFk\",\"ymggGjk5woALZEbCC\",\"ZjEdErENicjeqKZ8g\",\"GER4cDdQbugFLAdoj\",\"unNqQjSHzkb4pCzEu\",\"gSmf26ac9rrmXLxwN\",\"J7epB3qSQJ2E8vWkY\",\"7F3i3uNDxhZM6mckM\",\"44arJN5SYx3HyfetA\",\"6ehQMeGtrhnhot5zK\",\"gXTAie79kiw28tx5u\",\"32uy2LgegdmLGpebX\",\"uPQisxgE6sgg65Ymo\",\"thA79neuEcM3J8ZHr\",\"2xFvy6u3hE4LtCXMD\",\"7gBLtxKryhTryH5zb\",\"bWWFscsAr66ZWHo28\",\"QKwzvqWHTffHsNPu6\",\"THTnW75kBggw2qqta\",\"NdLzb3BZ5J8ftnCkS\",\"cJmmvnmJSXvBXtydi\",\"ZxS3JjsysyertLJ86\",\"cueHAmTrcWuowXf58\",\"PmfzvaX5ZJscpvHXc\",\"QRWdqFpjPr4etPwdi\",\"P5BhjZxyeHQYTNyB9\",\"mG8HqKiAQFTdRZthG\",\"oMfq73A434YWhSuWQ\",\"jXTnL3JatkKjoifyb\",\"8Xx8nWXRydHDBGfQf\",\"5YcHZbmJ8uc8G5wZ5\",\"i6Pky3YAuYfC5q42a\",\"tyLS9T6YMfg9fMtYJ\",\"gGa78GqXuPgmhqaGo\",\"rcvmayp8iSXxxEyMj\",\"LcupLYmJYLitWy35W\",\"eQXwk5zGckM8tCWYH\",\"NQ4btGLfcvAnXjAyP\",\"a5Y8ZA5qq2eupPK65\",\"zTM2NbjE6q5Q2HSeF\",\"8wkQj36S6ZCH5u8d3\",\"mQKWauR6b252TmdX4\",\"zE46SymvixkeFJmPM\",\"2Kzz5CubctKWfpPBp\",\"ckMvGF5TAyCwcxJBm\",\"47PyFbZyxWuP9Bgga\",\"CNc6rmwhbxkxEhHAp\",\"ikxSkiQjCjYPsFwMT\",\"zZJnquegZvRuvFvep\",\"oth47e7A8TopBYdjr\",\"uNK8tLSseShR8wcA4\",\"mYtKxYPbLLnePeJH3\",\"YL4rQWKadY7sGGtGG\",\"PAiLeppKXAZDuRokt\",\"W56bWmpQeLJ9JEDsa\",\"AK74g2wkFLuAqmnbx\",\"RGN3QTb5LXj4ZPPkj\",\"AyR5kP5aeirPKJZRH\",\"m8RTLuXqmythXHYZt\",\"LrgQT4bdiLbHrprXu\",\"g3JutupqGCe7p3xXM\",\"2ptN2mhjFwFcHyPZd\",\"fD2vkjhwWmxbs3aAn\",\"rB6smsAC3K4LswpTK\",\"5jDgvkGd4JwatrYXg\",\"rojdHfAAuAYxoaEXp\",\"Yj7ftjzyP67R5NFrH\",\"XcLNNDa5gDSyrgKtv\",\"LCuvvWMwiGuqTwNRi\",\"rn2tcWEwYRCDuZm9Z\",\"Wi4H6ayKsNDWWQCG5\",\"pDBjKHH2azj2js4SB\",\"JHYukmrWZpRoB22nC\",\"3SgSNoAB3sxaYeT3w\",\"btabi3PdyisuY5tn9\",\"TWhtuegb8G7ka3Tvg\",\"uFfEio8nzDvL8emhp\",\"E2hpke7mHxAWsw5t9\",\"f3RAbWvE6uESq7KE5\",\"QRv96jmNaYsWkxQEG\",\"a6JzrGCC5QdZLYnn5\",\"FgEeQycsn67j9m7xK\",\"buX4mCQhtXCfBjeno\",\"zZfMwLuoERGmybgib\",\"NnymXePpDaZnp2fRd\",\"a6fgDQTddtZCKfnzR\",\"4ySzqKC5s3ZRpG9di\",\"d7PjwEf5Ff8W5eD64\",\"tdinF6MRzC6AdNX8g\",\"GaJNJwcdyB9ueYFst\",\"nAuhwzeaxm62fF6Mi\",\"SgPjF69J25jT3dn4X\",\"HXbTKW3jmmyRAsKrr\",\"rhS8qXRjZcpDXkwnE\",\"TCvpT4EPb8qNssNB7\",\"pYonfGP4u9HNL9Z32\",\"zTtKiCbLWzaf2Yjo4\",\"5LyTMADFiaSR9GQkT\",\"mfm3gB39arY8Rjb2y\",\"5LDvZHCDJqePeBrCg\",\"eW9R2SCoYnY8HBAdL\",\"fDsGG3qW8tqGBa8by\",\"srJ34BaybkQh3qRkM\",\"uw8E83imJYpQiiPpP\",\"XGngZST3B7zpotX9b\",\"wFRLGjA56kj7xyhmv\",\"jCjCvyhqhpebkJn34\",\"KPz93xbvJ9x7okGs6\",\"KMR6vNzvSKMA2cXnK\",\"tjFkD8gLHEWEpEuNL\",\"JdC3h24bKrW6KDZX5\",\"RsujLHaML6L3KinzK\",\"KBfJFkYQ2RbnYd3hL\",\"FNYPC36yqPmTKDaqR\",\"HuNwBgyGGDPCDrApb\",\"5HGyJtoZ3AffzAZAv\",\"unqzSsxpxj9sZ7rbD\",\"FxPDKKibxnZjGJLs6\",\"nSLvkGEpiYCtcBLaa\",\"ekzGKngknJdSLHM7P\",\"4kqniB4HY4nQwK2yd\",\"ckQwFFWyLXmDQAaCn\",\"Wqmbwt4n4CCxSL5Tt\",\"H3XLNCWB5yXt5YYXn\",\"nFbmNzMQ38TncmfQX\",\"r72oFMcCQh4rBsKHb\",\"3Gf7ikLijfoxabiPY\"],\"quality\":[5,5,4,5,5,3,5,5,5,5,5,4,5,5,5,4,2,5,4,5,5,5,5,4,5,5,5,5,4,5,5,4,5,5,5,4,5,5,4,5,5,3,5,5,5,5,5,5,5,5,5,4,5,2,5,4,5,5,5,5]},\"tests\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.65,\"family\":[{\"_id\":\"kKvXt3DiTrGmvFCWq\",\"language\":\"cpp\"},{\"_id\":\"XD6bQFpCZWiAMPanQ\",\"language\":\"java\"},{\"_id\":\"FPHnbisnLwrQFYyAg\",\"language\":\"javascript\"},{\"_id\":\"JdkCpPBP6fcPvWDSf\",\"language\":\"php\"},{\"_id\":\"ASpHKyuSXZL3MjL92\",\"language\":\"python3\"},{\"_id\":\"eQh2Sambn46r5RZSv\",\"language\":\"ruby\"},{\"_id\":\"Bhmc7GWfPmW3XDK9a\",\"language\":\"swift\"}]}}"]