a["{\"msg\":\"result\",\"id\":\"809\",\"result\":{\"_id\":\"3niLvRRFXTRsZ27yF\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class Eights {\\n  public static int[][] sumsUp(int[] n) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":3.6,\"familyId\":\"PBHBPFqhNwd9Sduku\",\"instructions\":\"Create a function that gets every pair of numbers from an array that **sums up to eight** and returns it as an array of pairs (sorted ascendingly). See the following examples for more details.\\n\\n### Examples\\n```\\nsumsUp({1, 2, 3, 4, 5}) ➞ {{3, 5}}\\n\\nsumsUp({1, 2, 3, 7, 9}) ➞ {1, 7}}\\n\\nsumsUp({10, 9, 7, 2, 8}) ➞ {}\\n\\nsumsUp({1, 6, 5, 4, 8, 2, 3, 7}) ➞ {{2, 6}, {3, 5}, {1, 7}}\\n// [6, 2] first to complete the cycle (to sum up to 8)\\n// [5, 3] follows\\n// [1, 7] lastly\\n// the pair that completes the cycle is always found on the left\\n// [2, 6], [3, 5], [1, 7] sorted according to cycle completeness, then pair-wise.\\n```\\n\\n### Notes\\n- Remember the idea of _\\\"completes the cycle first\\\"_ when getting the sort order of the pairs.\\n- Only unique numbers are present in the array.\\n- Return an **empty array** if nothing sums up to eight.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"import static org.junit.Assert.assertArrayEquals; \\nimport org.junit.Test; \\n\\npublic class EightsTest {\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertArrayEquals(new int[][] {{3, 5}}, Eights.sumsUp(new int[] {1, 2, 3, 4, 5}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertArrayEquals(new int[][] {{1, 7}}, Eights.sumsUp(new int[] {1, 2, 3, 7, 9}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertArrayEquals(new int[][] {}, Eights.sumsUp(new int[] {10, 9, 7, 2, 8}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertArrayEquals(new int[][] {{2, 6}, {3, 5}, {1, 7}}, Eights.sumsUp(new int[] {1, 6, 5, 4, 8, 2, 3, 7}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertArrayEquals(new int[][] {{3, 5}, {1, 7}, {2, 6}, {0, 8}}, Eights.sumsUp(new int[] {5, 7, 2, 3, 0, 1, 6, 4, 8}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertArrayEquals(new int[][] {{1, 7}, {-2, 10}, {-1, 9}, {2, 6}}, Eights.sumsUp(new int[] {10, 9, 7, 1, 8,-2,-1, 2, 6}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertArrayEquals(new int[][] {{1, 7}, {-2, 10}, {0, 8}, {-1, 9}}, Eights.sumsUp(new int[] {0, 1,-2, 7, 9, 5, 4, 10, 8,-1, 6}));\\n\\t}\\n}\",\"language\":\"java\",\"quality\":0,\"summary\":\"Create a function that gets every pair of numbers from an array that sums up to eight and returns it as an array of pairs (sorted ascendingly). See the following examples for more details.\\n\\nExamples\\nsumsUp({1, 2, 3, 4, 5}) ➞ {{3, 5}}\\n\\nsumsUp({1, 2, 3, 7, 9}) ➞ {1, 7}}\\n\\nsumsUp({10, 9, 7, 2, 8}) ➞ {}\\n\\nsumsUp({1, 6, 5, 4, 8, 2, 3, 7}) ➞ {{2, 6}, {3, 5}, {1, 7}}\\n/\",\"tags\":[\"arrays\",\"algorithms\",\"numbers\",\"objects\"],\"timestamp\":{\"$date\":1608155997827},\"title\":\"Eight Sums Up\",\"stats\":{\"completed\":{\"total\":13,\"ratings\":[3,3,3,3,3,3,5,5,3,2,5,4,5,5,2],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"iq55QasecYJXKz8rx\",\"kLMj98oTwmoibCY4v\",\"9pqtNWrsTJdZcRbEZ\",\"nHj7SC5cnmkTApbgY\",\"aQPf9M3XqpDXddzku\",\"p22yLbgtHim2rJxrE\",\"MmnszBg2CgLGZ4Rao\",\"sxci7DYKNa6q22Sjq\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"3niLvRRFXTRsZ27yF\",\"language\":\"java\"},{\"_id\":\"ZkWSacTDQ65A3gh6j\",\"language\":\"javascript\"},{\"_id\":\"uWW8cZymSkrREdDpQ\",\"language\":\"python3\"}]}}"]