a["{\"msg\":\"result\",\"id\":\"501\",\"result\":{\"_id\":\"XxS3L2wDEKhi9Hw6W\",\"author\":\"Factor\",\"authorId\":\"Kk3jdrvAbPENkw5Ft\",\"code\":\"public class Program\\n{\\n  public static String removeWord(final String sentence, final String word) \\n\\t{\\n\\t\\treturn new String();\\n  }\\n}\",\"difficulty\":2.0531914893617023,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"eeK9xNQPeB4hCmQWF\",\"instructions\":\"Implement a method `removeWord()` that takes two string parameters:\\n- `sentence` - the sentence you are to remove a word from.\\n- `word` - the word you are to remove from the sentence.\\n\\nYour method should take a string, `sentence` and remove `word` from it. It will return a new string without `word` in the sentence.\\n\\n### Examples\\n```\\nremoveWord(\\\"One two three four\\\", \\\"two\\\") ➞ \\\"One three four\\\"\\n\\nremoveWord(\\\"Bob has a kid\\\", \\\"kid\\\") ➞ \\\"Bob has a\\\"\\n```\\n\\n### Notes\\nUse the **Resources** section if you need help.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ProgramTest {\\n\\n    @Test\\n    public void test1(){\\n        assertEquals(\\n\\t\\t\\t\\t\\t\\\"The quick brown jumped over the lazy dog\\\", \\n\\t\\t\\t\\t\\tProgram.removeWord(\\n\\t\\t\\t\\t\\t\\t\\\"The quick brown fox jumped over the lazy dog\\\",\\n\\t\\t\\t\\t\\t\\t\\\"fox\\\"\\n\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t);\\n    }\\n\\t @Test\\n    public void test2(){\\n        assertEquals(\\n\\t\\t\\t\\t\\t\\\"The cow over the moon\\\", \\n\\t\\t\\t\\t\\tProgram.removeWord(\\n\\t\\t\\t\\t\\t\\t\\\"The cow jumped over the moon\\\",\\n\\t\\t\\t\\t\\t\\t\\\"jumped\\\"\\n\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t);\\n    }\\n\\t @Test\\n    public void test3(){\\n        assertEquals(\\n\\t\\t\\t\\t\\t\\\"Sally sells seashells by seashore\\\", \\n\\t\\t\\t\\t\\tProgram.removeWord(\\n\\t\\t\\t\\t\\t\\t\\\"Sally sells seashells by the seashore\\\",\\n\\t\\t\\t\\t\\t\\t\\\"the\\\"\\n\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t);\\n    }\\n\\t@Test\\n  public void test4(){\\n        assertEquals(\\n\\t\\t\\t\\t\\t\\\"I like to walk on \\\", \\n\\t\\t\\t\\t\\tProgram.removeWord(\\n\\t\\t\\t\\t\\t\\t\\\"I like to walk on Sundays\\\",\\n\\t\\t\\t\\t\\t\\t\\\"Sundays\\\"\\n\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t);\\n    }\\n}\",\"language\":\"java\",\"quality\":0,\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,2,2,2,2,2,2,1,2,0,3,1,4,3,3,1,3,2,2,3,2,2,3,1,1,2,2,3,2,2,2,1,2,2,2,3,2,1,3,2,2,2,0,3,3,2,1,3,4,2,4,2,1,2,2,2,0,2,2,3,1,2,3,2,1,2,1,2,3,2,2,3,0,2,3,3,3,2,1,3,1,1,3,2,2,2,2,1,4],\"quality\":[],\"rators\":[\"Kk3jdrvAbPENkw5Ft\",\"Es4eX2stRpyoXeC7f\",\"qb2DTmzQj4vNfq5K7\",\"e92HPbRGg9SrJrXNz\",\"R34LpjohjS5pHL2KM\",\"vRXuYYBNuHEQ29fbm\",\"mGaEDPw5FsDb3vdnq\",\"gJbvbqosimaP4ZAYb\",\"jyeZPhmfLtysXHswN\",\"J6znPN97AAxSBTKGJ\",\"p2woPCQKXuWJCwffJ\",\"82weQfHHmno4Mq4X7\",\"pNtaczpPBxfN5Z9ee\",\"X5qtgxdJfr6SXKJcp\",\"oS8PtRjcDzutDWBJW\",\"DrkR35NqnP9NDLbq6\",\"ADLB8mLX2EybTaB9g\",\"jyoLggHk8xQKZuoQC\",\"buX4mCQhtXCfBjeno\",\"LNCb5rksJLJ43L4Nw\",\"xEX3TDY6C2h82dJTn\",\"bGQ28M4RKBqRwrwca\",\"osounBSYa7tg7PoEd\",\"qx6yvahdH8aw4Jnm7\",\"3ujSBZYBrRmdFvZbb\",\"9RGf5tSzEwSmBkAjq\",\"Jj9kzmWpPPyWWT5dY\",\"KgrtpAQRXCBDhpiSJ\",\"E7acZKMtNENLBmvHE\",\"DPx5Boq5duvvw8cQL\",\"9fuH5ssdjtrmSdLKA\",\"HSejud4QbM5RNihSz\",\"dik7wis3hBJJBkYwK\",\"wRxxSwtwR7eBHP2tW\",\"dcW9oK2uRo8h8mBe2\",\"tdinF6MRzC6AdNX8g\",\"pCbFsvyiooabCFEgd\",\"Wf7QXF7pdRca5sJwA\",\"sNLMGC3KSC2urwbNh\",\"3TfXi8YesqdHNbB5o\",\"qaPjAANdnxFnWfj5d\",\"TPCX3inKrTkTNAfYW\",\"wFRLGjA56kj7xyhmv\",\"9j3MDLXnvJZLp3PYk\",\"Zi7mPxtTeTY4D2QS8\",\"mfm3gB39arY8Rjb2y\",\"Yacw5Q8YXknnY3LzH\",\"dvBv4Bdpu7kkgx89c\",\"a49eNnfRwSMxsDJXf\",\"jCjCvyhqhpebkJn34\",\"xW9nC9h6p77YT2iso\",\"kZHFd3GBs6rFkXjLe\",\"sxci7DYKNa6q22Sjq\",\"mcoHczCqRrNEX7Xih\",\"KMR6vNzvSKMA2cXnK\",\"rWhXHhzF4W8bea6LP\",\"TA9dwvnSdta7rTynz\",\"83rtSdwNQtvjmdxeS\",\"EKBHs6uxpPgxvWKir\",\"eXW8reZCCZHQzJjQi\",\"htXCitorobtqYymjN\",\"bTGhMH2tgtECdCvJi\",\"8QpyABPpTz3hWPjRN\",\"EgGxh4rEkXteeGDsC\",\"7zHPkRBtdKFQFkrc4\",\"zTtKiCbLWzaf2Yjo4\",\"AWDDnJJ27u8bRGcZQ\",\"WFiKrYeEs4bKFBcFR\",\"29SkuALTvZP92qb86\",\"fKioBvwuxHyBH2faD\",\"gZZYetkt5Sv7ggPYs\",\"CMGb4DrqCRdc2FbMa\",\"JDF2epP4JBSvyrHcu\",\"wy7AvDwMeujSybWNY\",\"unqzSsxpxj9sZ7rbD\",\"6rvJwN4mcX7iYGjY7\",\"FxPDKKibxnZjGJLs6\",\"PAEWysAAFheYiYPBp\",\"3CXSJHwL4Qihbi6LA\",\"zkzzFRwC5RzspEaXi\",\"hF9icm7GxAnAGSjAD\",\"uw47663LqPME8btaA\",\"jqLmwSB9oGb8NxYKf\",\"RCRz3knJMKQe4bDTn\",\"rvojHhKH3DaxotefQ\"],\"total\":91},\"flags\":0},\"summary\":\"Implement a method removeWord() that takes two string parameters:\\nsentence - the sentence you are to remove a word from.\\nword - the word you are to remove from the sentence.\\n\\nYour method should take a string, sentence and remove word from it. It will return a new string without word in the sentence.\\n\\nExamples\\nremoveWord(\\\"One two three four\\\", \\\"two\\\") ➞ \\\"One thre\",\"tags\":[\"strings\"],\"timestamp\":{\"$date\":1614881022055},\"title\":\"Extract a Word From a Sentence\",\"family\":[{\"_id\":\"XxS3L2wDEKhi9Hw6W\",\"language\":\"java\"}]}}"]