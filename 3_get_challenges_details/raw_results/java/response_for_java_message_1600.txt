a["{\"msg\":\"result\",\"id\":\"360\",\"result\":{\"_id\":\"faMvfHSZ6r6DbGYAc\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n\\tpublic static String conjugate(String verb, int pronoun) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.4931506849315068,\"familyId\":\"ksZtXzNZY9fA2gwNR\",\"instructions\":\"In this challenge, you must build a function that inflects an infinitive regular Italian verb of the first conjugation form to the present tense, including the personal subjective pronoun.\\n\\nAll first conjugation Italian verbs share the same suffix: **ARE**. The first thing to do is separate the verb root from the suffix.\\n- Root of \\\"programmare\\\" (_to code_) = \\\"programm\\\".\\n- Root of \\\"giocare\\\" (_to play_) = \\\"gioc\\\".\\n\\nFor each subjective pronoun the root is combined with a new suffix: see table below (pronouns are numbered for coding ease, in real grammar they are grouped in singular and plural, both from first to third):\\n\\n| # | Pronoun | Suffix |\\n|---|---|---|\\n| 1 | Io (_I_) | o\\n| 2 | Tu (_You_) | i\\n| 3 | Egli (_He_) | a\\n| 4 | Noi (_We_) | iamo\\n| 5 | Voi (_You_) | ate\\n| 6 | Essi (_They_) | ano\\n\\n- Present tense of verb \\\"parlare\\\" (_to speak_) for third pronoun:\\n  - Pronoun (\\\"Egli\\\") + Root (\\\"parl\\\") + Suffix (\\\"a\\\") = \\\"Egli parla\\\".\\n- Present tense of verb \\\"lavorare\\\" (_to work_) for fourth pronoun:\\n  - Pronoun (\\\"Noi\\\") + Root (\\\"lavor\\\") + Suffix (\\\"iamo\\\") = \\\"Noi lavoriamo\\\".\\n\\nThere are two exceptions for present tense inflection:\\n- If root ends with \\\"**c**\\\" or \\\"**g**\\\" the second and fourth pronoun suffixes add a \\\"**h**\\\" at the start:\\n  - \\\"Attaccare\\\" (_to attack_) = \\\"Tu attacchi\\\" (instead of _\\\"Tu attacci\\\"_)\\n  - \\\"Legare\\\" (_to tie_) = \\\"Noi leghiamo\\\" (instead of _\\\"Noi legiamo\\\"_)\\n- If root ends with \\\"**i**\\\" the second and fourth pronoun suffixes lose the starting \\\"**i**\\\" (so that second pronoun suffix  disappears):\\n  - \\\"Inviare\\\" (_to send_) = \\\"Noi inviamo\\\" (instead of _\\\"Noi inviiamo\\\"_)\\n  - \\\"Tagliare\\\" (_to cut_) = \\\"Tu tagli\\\" (instead of _\\\"Tu taglii\\\"_)\\n  - \\\"Mangiare\\\" (_to eat_) = \\\"Noi mangiamo\\\" (instead of _\\\"Noi mangiiamo\\\"_)\\n  - \\\"Cacciare\\\" (_to hunt_) = \\\"Tu cacci\\\" (instead of _\\\"Tu caccii\\\"_)\\n\\nGiven a string `verb` being the infinitive form of the first conjugation Italian regular verb, and an integer `pronoun` being the subjective personal pronoun, implement a function that returns the inflected form as a string.\\n\\n### Examples\\n```\\nconjugate(\\\"programmare\\\", 5) ➞ \\\"Voi programmate\\\"\\n\\nconjugate(\\\"iniziare\\\", 2) ➞ \\\"Tu inizi\\\"\\n\\nconjugate(\\\"mancare\\\", 4) ➞ \\\"Noi manchiamo\\\"\\n```\\n\\n### Notes\\n- In the returned string, pronouns must be capitalized and verbs must be in lowercase, separated by a space between them.\\n- Curious fact: first conjugation (verbs ending in \\\"are\\\") is also called \\\"the living conjugation\\\", because every new verb that enters the Italian dictionary is assigned to this category as a new regular verb; it often happens for verbs \\\"borrowed\\\" from English and for informatical neologisms: _chattare_, _twittare_, _postare_, _spammare_... will _edabittare_ be the next?\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n\\t\\tSystem.out.println(\\\"We edabit :-)\\\");\\n    assertEquals(\\\"Noi edabittiamo\\\", Challenge.conjugate(\\\"edabittare\\\", 4));\\n  }\\n\\n\\t@Test\\n  public void test2() {\\n\\t\\tSystem.out.println(\\\"You code\\\");\\n    assertEquals(\\\"Voi programmate\\\", Challenge.conjugate(\\\"programmare\\\", 5));\\n  }\\n\\n\\t@Test\\n  public void test3() {\\n\\t\\tSystem.out.println(\\\"You start\\\");\\n    assertEquals(\\\"Tu inizi\\\", Challenge.conjugate(\\\"iniziare\\\", 2));\\n  }\\n\\n\\t@Test\\n  public void test4() {\\n\\t\\tSystem.out.println(\\\"We miss\\\");\\n    assertEquals(\\\"Noi manchiamo\\\", Challenge.conjugate(\\\"mancare\\\", 4));\\n  }\\n\\n\\t@Test\\n  public void test5() {\\n\\t\\tSystem.out.println(\\\"I speak\\\");\\n    assertEquals(\\\"Io parlo\\\", Challenge.conjugate(\\\"parlare\\\", 1));\\n  }\\n\\n\\t@Test\\n  public void test6() {\\n\\t\\tSystem.out.println(\\\"He dreams\\\");\\n    assertEquals(\\\"Egli sogna\\\", Challenge.conjugate(\\\"sognare\\\", 3));\\n  }\\n\\n\\t@Test\\n  public void test7() {\\n\\t\\tSystem.out.println(\\\"You deny\\\");\\n    assertEquals(\\\"Tu neghi\\\", Challenge.conjugate(\\\"negare\\\", 2));\\n  }\\n\\n\\t@Test\\n  public void test8() {\\n\\t\\tSystem.out.println(\\\"You teach\\\");\\n    assertEquals(\\\"Voi insegnate\\\", Challenge.conjugate(\\\"insegnare\\\", 5));\\n  }\\n\\n\\t@Test\\n  public void test9() {\\n\\t\\tSystem.out.println(\\\"We cut\\\");\\n    assertEquals(\\\"Noi tagliamo\\\", Challenge.conjugate(\\\"tagliare\\\", 4));\\n  }\\n\\n\\t@Test\\n  public void test10() {\\n\\t\\tSystem.out.println(\\\"I swim\\\");\\n    assertEquals(\\\"Io nuoto\\\", Challenge.conjugate(\\\"nuotare\\\", 1));\\n  }\\n\\n\\t@Test\\n  public void test11() {\\n\\t\\tSystem.out.println(\\\"He changes\\\");\\n    assertEquals(\\\"Egli cambia\\\", Challenge.conjugate(\\\"cambiare\\\", 3));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"In this challenge, you must build a function that inflects an infinitive regular Italian verb of the first conjugation form to the present tense, including the personal subjective pronoun.\\n\\nAll first conjugation Italian verbs share the same suffix: ARE. The first thing to do is separate the verb root from the suffix.\\nRoot of \\\"programmare\\\" (to code) = \\\"programm\",\"tags\":[\"strings\",\"formatting\",\"conditions\"],\"timestamp\":{\"$date\":1571370118832},\"title\":\"Italian Grammar: Present Tense of First Conjugation Verbs\",\"stats\":{\"completed\":{\"total\":83,\"ratings\":[1,1,1,1,1,1,0,1,0,1,2,2,1,2,1,1,3,2,2,0,1,1,1,2,2,1,2,2,1,3,2,2,3,2,2,0,0,0,2,2,2,1,1,1,1,2,2,3,3,1,1,1,2,0,2,2,2,2,2,0,1,1,2,3,2,2,2,2,1,2,2,1,2],\"rators\":[\"sxci7DYKNa6q22Sjq\",\"3gxJoNp59B4eoyyed\",\"W4jpCs2jekeg5qAwc\",\"HTdEyxtkq87EJN2Aw\",\"nYSebjpPsiBXiho7y\",\"MiPadj4ePcjWjxsR2\",\"ho2xwFjGfg6WwQArS\",\"tfs6uiysC8atFan4t\",\"mKSsw54bbAX8WcPYx\",\"C46EBHSd4KE57qyei\",\"a49eNnfRwSMxsDJXf\",\"n6N2dYX8MghgDtjx7\",\"3KjxQu9RZ8ZSywvLz\",\"hzbZidzWcMgTYvat3\",\"Gjd9JNxfdfwZbmWF5\",\"vziY3nyeazkfB6m5h\",\"8JyqsSbN2FJXPr3cw\",\"J9zJq7PMGb6mqzcHW\",\"CggGfsERnPKGupFWp\",\"JMh7pkAJMA3P5B9uu\",\"x9A83cZkyA7E7utn3\",\"qEGfmqbNLrs2Qrva8\",\"stFzw945NadNHC2ap\",\"n8jm3w32BSJW8GMBp\",\"FP33dtDWeBD64hHq3\",\"awiewYXm9GR6zsqhp\",\"AyrEvM2GLX2jqM772\",\"C9yBWYcZsjmJYww3K\",\"eXW8reZCCZHQzJjQi\",\"Es4eX2stRpyoXeC7f\",\"wYYMNPe8nSiJFbvJw\",\"8J2Dqqz9PaFufQzwY\",\"fZjkX29nhRTWWb75k\",\"TrquEHytntLKHA4m2\",\"Ctuq7Wc8QPQmzwPK3\",\"Kso7rzAKB4TTCPKgM\",\"YLwJkF2wuL3n9o6a2\",\"hB5mgzMwQSnhBzi7P\",\"4GLDHD5irj4shYn5Q\",\"5seiNqw6ZXoF2GRRd\",\"M8nN25q2n8YzCxaT8\",\"jyoLggHk8xQKZuoQC\",\"Hhvy3EGqWBXt3nFPA\",\"8zZ6xmzpiFair25qr\",\"WZujpe8yQAyZmpWHg\",\"etoSR23iELGGgs9rA\",\"htXCitorobtqYymjN\",\"6ZxpGyg7iviX9cPAy\",\"B4pxRqzo43M7S8FbP\",\"Yp7uvStL97cC9fKkY\",\"DkSMZ3jZLkwviKb9g\",\"dpJTai3i9aNkCS3sa\",\"9creP9iJdnhomMXxz\",\"saYNZofE7LBjyf4Ee\",\"g4NCSxxHqHCGMpWwT\",\"muXMnzQwGLzN6j2Jr\",\"Fd9765rksgPK4E2Zy\",\"pBMXMQem6BpSeooYT\",\"Ym8AjbKGSJooun3nt\",\"AeJSxRqw2dJZuGvdk\",\"yXGiiSAR5nBHnH3yr\",\"gXTAie79kiw28tx5u\",\"oMfq73A434YWhSuWQ\",\"dcW9oK2uRo8h8mBe2\",\"bur3yQ8s34zqKGEro\",\"8qNSPHZBpmjSTt3tH\",\"TQaf5YLAgRvdCQwxD\",\"J7epB3qSQJ2E8vWkY\",\"PJu3WcTpfRrvHfQiS\",\"KMR6vNzvSKMA2cXnK\",\"563onSvqgjToY79ah\",\"uw47663LqPME8btaA\",\"FxPDKKibxnZjGJLs6\"],\"quality\":[5,5,4,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.8,\"family\":[{\"_id\":\"JtSTKKD4DdmZFryDY\",\"language\":\"cpp\"},{\"_id\":\"faMvfHSZ6r6DbGYAc\",\"language\":\"java\"},{\"_id\":\"CZhyvQg3KDhcYRJD7\",\"language\":\"javascript\"},{\"_id\":\"2nx4JCytABfczdYGt\",\"language\":\"python3\"},{\"_id\":\"eHyYZoi5eTimmTTtn\",\"language\":\"ruby\"}]}}"]