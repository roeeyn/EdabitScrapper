a["{\"msg\":\"result\",\"id\":\"113\",\"result\":{\"_id\":\"BMzs2RZDgFvyLWn29\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class LetterInArray {\\n  public static boolean forbiddenLetter(String ch, String[] words) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":0.5794392523364486,\"familyId\":\"MARtN7sMXoHTMawQf\",\"instructions\":\"Given a letter and an array of words, return whether the letter **does not appear** in any of the words.\\n\\n### Examples\\n```\\nforbiddenLetter(\\\"m\\\", [\\\"deep\\\", \\\"loves\\\", \\\"tesh\\\"]) ➞ true\\n\\nforbiddenLetter(\\\"r\\\", [\\\"rock\\\", \\\"paper\\\", \\\"scissors\\\"]) ➞ false\\n\\nforbiddenLetter(\\\"a\\\", [\\\"spoon\\\", \\\"fork\\\", \\\"knife\\\"]) ➞ true\\n\\nforbiddenLetter(\\\"m\\\", []) ➞ true\\n```\\n\\n### Notes\\n* All inputs given will be in lowercase.\\n* You will always be given a **forbidden letter**, but there may be **empty arrays**.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"import static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class LetterInArrayTest {\\n\\t@Test\\n\\tpublic void test1() { \\n\\t\\tassertEquals(true, LetterInArray.forbiddenLetter(\\\"m\\\", new String[] {\\\"deep\\\", \\\"loves\\\", \\\"tesh\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test2() { \\n\\t\\tassertEquals(false, LetterInArray.forbiddenLetter(\\\"e\\\", new String[] {\\\"deep\\\", \\\"xavier\\\", \\\"tesh\\\", \\\"tesha\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test3() { \\n\\t\\tassertEquals(false, LetterInArray.forbiddenLetter(\\\"e\\\", new String[] {\\\"rinse\\\", \\\"and\\\", \\\"repeat\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test4() { \\n\\t\\tassertEquals(true, LetterInArray.forbiddenLetter(\\\"d\\\", new String[] {\\\"python\\\", \\\"javascript\\\", \\\"ruby\\\", \\\"fortran\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test5() { \\n\\t\\tassertEquals(true, LetterInArray.forbiddenLetter(\\\"a\\\", new String[] {\\\"spoon\\\", \\\"fork\\\", \\\"knife\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test6() { \\n\\t\\tassertEquals(true, LetterInArray.forbiddenLetter(\\\"b\\\", new String[] {\\\"test\\\", \\\"dot\\\", \\\"assert\\\", \\\"equals\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test7() { \\n\\t\\tassertEquals(false, LetterInArray.forbiddenLetter(\\\"i\\\", new String[] {\\\"rock\\\", \\\"paper\\\", \\\"scissors\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test8() { \\n\\t\\tassertEquals(true, LetterInArray.forbiddenLetter(\\\"t\\\", new String[] {}));\\n\\t}\\n}\\n// credit goes to original author @Joshua Señoron\",\"language\":\"java\",\"quality\":5,\"summary\":\"Given a letter and an array of words, return whether the letter does not appear in any of the words.\\n\\nExamples\\nforbiddenLetter(\\\"m\\\", [\\\"deep\\\", \\\"loves\\\", \\\"tesh\\\"]) ➞ true\\n\\nforbiddenLetter(\\\"r\\\", [\\\"rock\\\", \\\"paper\\\", \\\"scissors\\\"]) ➞ false\\n\\nforbiddenLetter(\\\"a\\\", [\\\"spoon\\\", \\\"fork\\\", \\\"knife\\\"]) ➞ true\\n\\nforbiddenLetter(\\\"m\\\", []) ➞ true\\n\\nNotes\\nAll inputs given will be in lowercase.\",\"tags\":[\"arrays\",\"strings\",\"loops\",\"validation\"],\"timestamp\":{\"$date\":1611634584477},\"title\":\"The Forbidden Letter\",\"stats\":{\"completed\":{\"total\":116,\"ratings\":[1,1,1,1,1,0,1,0,1,0,0,1,0,1,0,0,2,1,0,1,0,1,1,0,0,0,0,0,0,1,1,1,0,1,1,0,0,1,0,1,0,0,2,0,0,1,1,1,1,1,0,0,1,0,1,1,1,0,0,1,2,0,0,1,0,0,1,0,0,0,0,2,2,1,0,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,2,0,0,0,3,1,1,0,0,1,1,1,0,1,0],\"quality\":[5,5,5,5,5,5,5],\"rators\":[\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"A3KrxZk4FiSymY6f2\",\"hhxjQREtmHSheH9Pj\",\"uFfEio8nzDvL8emhp\",\"AeJSxRqw2dJZuGvdk\",\"PJu3WcTpfRrvHfQiS\",\"btabi3PdyisuY5tn9\",\"3SgSNoAB3sxaYeT3w\",\"gBGjCfJvPHswDM5JQ\",\"J7epB3qSQJ2E8vWkY\",\"QRv96jmNaYsWkxQEG\",\"oMZovHkR6QqNvQwyc\",\"a49eNnfRwSMxsDJXf\",\"82weQfHHmno4Mq4X7\",\"HCfkcKnPs9mrJojdG\",\"kiq3z4o9ABhQd7aXJ\",\"b6PEkvr66YeCamroN\",\"eQXwk5zGckM8tCWYH\",\"vRXuYYBNuHEQ29fbm\",\"buX4mCQhtXCfBjeno\",\"x9CWxL7Q7yCHdrAmq\",\"NioGGZL9KCn5Ln96t\",\"dD3Aja8PZSMXMFSDY\",\"srJ34BaybkQh3qRkM\",\"c96gH88NsjR3MycAj\",\"yb8T3nuL4evaeJW6k\",\"SbDRsLR6yfZXETyKN\",\"ScYoZtxALtkZXKLo4\",\"TrquEHytntLKHA4m2\",\"umE8dRTGWzrZFp755\",\"nXw9eTHFraWQtwJtY\",\"HBQmq6WPmtBYegAqG\",\"6rvJwN4mcX7iYGjY7\",\"FEGpESiobxcqjMqF3\",\"jyoLggHk8xQKZuoQC\",\"Zihp9MoXiDFXwThTK\",\"xEX3TDY6C2h82dJTn\",\"qat6GsLjQbgGc96JD\",\"ztrfkKRfYBWokFwkf\",\"4ySzqKC5s3ZRpG9di\",\"nZ92XK7hzitd4d9QK\",\"sYKPxZX5xJZ2GTp6Q\",\"khdCaD6AGBiR6txLQ\",\"KdYQN3KAT2DyTzT2a\",\"R9uaMzX2Y4ND8Cosm\",\"bdXCq7koLGHkjP4G4\",\"5LDvZHCDJqePeBrCg\",\"2ptN2mhjFwFcHyPZd\",\"Reyq7sSccAZJvJrmB\",\"wFRLGjA56kj7xyhmv\",\"tejkzX5N5NeBgjdke\",\"sxci7DYKNa6q22Sjq\",\"7e595f8a4urN7ijum\",\"TCvpT4EPb8qNssNB7\",\"Yohr2MmAyaWGMbB35\",\"rhS8qXRjZcpDXkwnE\",\"2cdvd8yuPLSwvGj9w\",\"s7kgsgnTYGspwBYb5\",\"Sv9FJto8whz2sykHs\",\"9RJpt5ec2KMLuac4w\",\"YAd5SaKz9ugA2ub5k\",\"8BFSTCnoe2QggN64c\",\"Gn8rShvWCKLX3cxzx\",\"nSLvkGEpiYCtcBLaa\",\"uw47663LqPME8btaA\",\"gZj6HTKJdPGJwPe2D\",\"RSombfrtxS5PSXnyJ\",\"yHbTMNQXXdLzDkvhE\",\"fdyejapW3NWN7utPX\",\"afvP29FhRou2bTaav\",\"aYCB22cDSkNpoGeD7\",\"cR3ibTMxLyEdDFCHY\",\"PCsT29KNEX8ufEawi\",\"htXCitorobtqYymjN\",\"AaAzAySpyo99siXzm\",\"DEDniTrstQYGounXT\",\"W4TtzLajjmS8QPK3c\",\"KMR6vNzvSKMA2cXnK\",\"xrqK8P7zH83wjo3L4\",\"f6CBJntX2RFd2zAjR\",\"n62wkzjFZmdLhuuNQ\",\"RsujLHaML6L3KinzK\",\"K9sQFTWhKP4nkPQcb\",\"PPdaczxSt2u5cmZYG\",\"5QN8R22z43SrwoHDz\",\"6kB5qypxcm62PHsEJ\",\"unqzSsxpxj9sZ7rbD\",\"xLy94bAjaLwokPcZZ\",\"9moo5f7g8KrZieT2K\",\"tXJuA3dLqpLdiPzsv\",\"ygQyPnrGfAY36b4JE\",\"cDLb8ewcHcoBPmaMF\",\"w99WfQNYsNAyJRM4C\",\"2p4SjzG8EMh8iDc9K\",\"F8dA24AosSC8XXb7D\",\"9du58gNDkWQEWivbB\",\"rWhXHhzF4W8bea6LP\",\"dYzaQeQc48vWQHFQQ\",\"eXQziXGcpwekMyABQ\",\"cqBBjHssuTA736Ynw\",\"TWhcGs8Tpt3Gua5Wi\",\"5HGyJtoZ3AffzAZAv\",\"4To7THbHADdtXbewx\",\"x2Cz7S8rCKJqCE3Xe\",\"5kMuNZuxiFcNRDkG4\",\"r72oFMcCQh4rBsKHb\",\"nFbmNzMQ38TncmfQX\",\"3Gf7ikLijfoxabiPY\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"cdQxvCFqAsAYQcpFr\",\"language\":\"cpp\"},{\"_id\":\"BMzs2RZDgFvyLWn29\",\"language\":\"java\"},{\"_id\":\"AhFCvDdQeA7TnKSqe\",\"language\":\"javascript\"},{\"_id\":\"jW56ujq2Xb4fyknoh\",\"language\":\"php\"},{\"_id\":\"pfuxt3J2p2tph3LJQ\",\"language\":\"python3\"},{\"_id\":\"DFxTwaeLpC6ddwmPN\",\"language\":\"ruby\"}]}}"]