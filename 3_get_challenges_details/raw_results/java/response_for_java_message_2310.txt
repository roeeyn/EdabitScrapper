a["{\"msg\":\"result\",\"id\":\"713\",\"result\":{\"_id\":\"Jtufg4A5WJMDk4FRT\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class CountFives { \\n\\tpublic static int getLuckiest(int[] r) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":2.75,\"familyId\":\"w3RvAbztcEvjbjjhS\",\"instructions\":\"Arun is obsessed with primes, especially five. He considers a number to be luckiest if it has the highest number of five in it. If two numbers have the same frequency of five, Arun considers the larger of them to be luckiest, and if there is no five in any number, the first given number is considered luckiest. Help him choose the luckiest number.\\n\\n### Examples\\n```\\ngetLuckiest([-544, 666, -645, -445]) ➞ -445\\n\\ngetLuckiest([5, 12, 55, 11]) ➞ 55\\n\\ngetLuckiest([5, 12, -55,  11]) ➞ -55\\n\\ngetLuckiest([515, 1255, -55,  1]) ➞ 1255\\n\\ngetLuckiest([44, 12, 7, 40]) ➞ 44\\n```\\n\\n### Notes\\nReturn `0` if given an **empty array**.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"import static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class CountFivesTest {\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertEquals(-445, CountFives.getLuckiest(new int[] {-544, 666, -645, -445}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertEquals(0, CountFives.getLuckiest(new int[] {}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertEquals(-55, CountFives.getLuckiest(new int[] {-55,-155, 45, 31, 67}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertEquals(55, CountFives.getLuckiest(new int[] {5, 12, 55, 11}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertEquals(-55, CountFives.getLuckiest(new int[] {5, 12,-55, 11}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertEquals(1255, CountFives.getLuckiest(new int[] {515, 1255,-55, 1}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertEquals(44, CountFives.getLuckiest(new int[] {44, 12, 7, 40}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertEquals(-1, CountFives.getLuckiest(new int[] {-1,-43,-67, 3}));\\n\\t}\\n}\",\"language\":\"java\",\"quality\":0,\"summary\":\"Arun is obsessed with primes, especially five. He considers a number to be luckiest if it has the highest number of five in it. If two numbers have the same frequency of five, Arun considers the larger of them to be luckiest, and if there is no five in any number, the first given number is considered luckiest. Help him choose the luckiest number.\\n\\nExamples\\nget\",\"tags\":[\"algorithms\",\"arrays\"],\"timestamp\":{\"$date\":1607941892643},\"title\":\"Count 5s And Win\",\"stats\":{\"completed\":{\"total\":24,\"ratings\":[3,3,3,3,3,3,3,5,0,2,4,0,2,4,3,3,2,4,2,2,3,4,3,2],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"Ym8AjbKGSJooun3nt\",\"T2vhHPhRR96hRizq8\",\"ThsHKSoB4mXhhmmAM\",\"iq55QasecYJXKz8rx\",\"LNCb5rksJLJ43L4Nw\",\"gXmjKF8FNhsQN2wGa\",\"6orCHyAFifJGgK6Ed\",\"c7uBxu2rgY77H5d79\",\"EMcYjNHvryYScwFZg\",\"rhS8qXRjZcpDXkwnE\",\"htXCitorobtqYymjN\",\"jCjCvyhqhpebkJn34\",\"btDF9agteTb8q9eKQ\",\"sxci7DYKNa6q22Sjq\",\"KMR6vNzvSKMA2cXnK\",\"rqkMTqSmBZC8TefyN\",\"wFRLGjA56kj7xyhmv\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"uEJRLFCMhmMZpZ3MH\",\"language\":\"cpp\"},{\"_id\":\"Jtufg4A5WJMDk4FRT\",\"language\":\"java\"},{\"_id\":\"i3kofSpArqtR4jaGj\",\"language\":\"javascript\"},{\"_id\":\"hJsTYi8dL7rDWukqv\",\"language\":\"python3\"},{\"_id\":\"3Ri8bZnNeHBEj5gp6\",\"language\":\"ruby\"}]}}"]