a["{\"msg\":\"result\",\"id\":\"62\",\"result\":{\"_id\":\"hdT772EaY6ofm4ef4\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class BrokenBridge {\\n\\tpublic static boolean isSafeBridge(String bridge) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":0.49466192170818507,\"familyId\":\"uGTuRfaNL4mNKGTgK\",\"instructions\":\"Create a function which validates whether a bridge is safe to walk on (i.e. has no gaps in it to fall through).\\n\\n### Examples\\n```\\nisSafeBridge(\\\"####\\\") ➞ true\\n\\nisSafeBridge(\\\"## ####\\\") ➞ false\\n\\nisSafeBridge(\\\"#\\\") ➞ true\\n\\nisSafeBridge(\\\"### ####\\\") ➞ false\\n\\nisSafeBridge(\\\"#####\\\") ➞ true\\n```\\n\\n### Notes\\nYou can expect the bridge's ends are connected to its surrounding.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"/** \\n===================================== \\nTestGen 4.0 for JUnit 4.13.0 \\t\\t\\nTest Case: BrokenBridge::isSafeBridge \\nTimestamp: 10/15/2020 12:54:46 PM \\n------------------------------------- \\n® DARKKO 2020 © \\n===================================== \\n\\n**/ \\n\\nimport static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class BrokenBridgeTest { \\n\\t\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertEquals(true, BrokenBridge.isSafeBridge(\\\"####\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertEquals(false, BrokenBridge.isSafeBridge(\\\"###### ### ##\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertEquals(true, BrokenBridge.isSafeBridge(\\\"#\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertEquals(false, BrokenBridge.isSafeBridge(\\\"# #\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertEquals(true, BrokenBridge.isSafeBridge(\\\"######\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertEquals(true, BrokenBridge.isSafeBridge(\\\"#########\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertEquals(false, BrokenBridge.isSafeBridge(\\\"### ###\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertEquals(true, BrokenBridge.isSafeBridge(\\\"#####\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test09() { \\n\\t\\tassertEquals(false, BrokenBridge.isSafeBridge(\\\"### # ###\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test10() { \\n\\t\\tassertEquals(true, BrokenBridge.isSafeBridge(\\\"###\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test11() { \\n\\t\\tassertEquals(false, BrokenBridge.isSafeBridge(\\\"# ### #\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test12() { \\n\\t\\tassertEquals(true, BrokenBridge.isSafeBridge(\\\"#####\\\"));\\n\\t}\\n\\n}\\n// end of tests\\n// credit goes to the original author/publisher @Joshua Señoron\",\"language\":\"java\",\"quality\":4.608974358974359,\"summary\":\"Create a function which validates whether a bridge is safe to walk on (i.e. has no gaps in it to fall through).\\n\\nExamples\\nisSafeBridge(\\\"####\\\") ➞ true\\n\\nisSafeBridge(\\\"## ####\\\") ➞ false\\n\\nisSafeBridge(\\\"#\\\") ➞ true\\n\\nisSafeBridge(\\\"### ####\\\") ➞ false\\n\\nisSafeBridge(\\\"#####\\\") ➞ true\\n\\nNotes\\nYou can expect the bridge's ends are connected to its surrounding.\",\"tags\":[\"language_fundamentals\",\"strings\",\"validation\"],\"timestamp\":{\"$date\":1602711552408},\"title\":\"Broken Bridge\",\"stats\":{\"completed\":{\"total\":456,\"ratings\":[1,1,1,1,1,0,0,1,0,0,0,0,0,1,0,2,0,0,0,0,0,0,0,2,0,1,0,1,1,0,0,0,0,0,1,1,0,1,0,1,1,0,1,0,0,0,0,1,0,1,0,0,1,1,2,0,3,0,0,0,1,0,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,0,0,2,1,0,0,1,0,0,2,0,0,1,1,0,2,0,0,0,3,0,0,0,1,1,2,1,1,0,1,0,0,0,0,1,0,1,0,3,1,1,2,0,0,2,0,0,1,2,1,1,1,0,1,1,1,1,1,1,0,0,1,0,1,0,1,0,0,1,0,1,1,1,0,0,0,2,0,0,0,0,1,1,1,0,1,0,0,2,0,0,0,1,0,0,1,1,1,0,0,0,1,1,1,2,0,1,0,0,1,5,0,0,0,1,2,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0,0,0,2,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,2,3,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,2,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0],\"quality\":[5,4,5,5,5,5,5,5,3,5,4,4,5,5,5,5,2,5,5,5,4,5,5,5,5,4,4,3,5,5,5,5,4,4,5,5,5,3,5,5,5,5,5,3,3,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,4,3,3,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,4,5,4,5,5,5,4,3,4,5,5,5,4,3,1,5,2,5,4,4,5,5,5,5,4,5,5,4,4,5,5,4,5,5,5,5,5,5,4,5,5,3,5,5,5,5,5,1,3,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,4],\"rators\":[\"a777e8chPvJkY3tKa\",\"hPsKex7yhvKyu3qSR\",\"Es4eX2stRpyoXeC7f\",\"2xFvy6u3hE4LtCXMD\",\"82weQfHHmno4Mq4X7\",\"2wS9Wm3Nj5ZFcMnfA\",\"ENtEccBrSYd7oZKFZ\",\"CggGfsERnPKGupFWp\",\"FiegHuLFA8sbCoPWw\",\"yXGiiSAR5nBHnH3yr\",\"XJEuFkxFzrv7hCrmh\",\"AeJSxRqw2dJZuGvdk\",\"SmmkwyvSHT54PzB5B\",\"tnYXC3cGqycxRzCgT\",\"2X23EB8EciTGTm4dZ\",\"izdAHuFQcWY2pa3YG\",\"ShrPRFW2oBeDiHpEX\",\"eQXwk5zGckM8tCWYH\",\"6b7Xki2wH7jsxQdFn\",\"Yp7uvStL97cC9fKkY\",\"tTvpzymyf2wrFxDce\",\"RMs2qGa8BhWTvF6qK\",\"a6G3w4hPzY5xGELnR\",\"bWWFscsAr66ZWHo28\",\"fzWFZSS3zywTR8wEe\",\"mm5wPKW7S5xh9M277\",\"kNxEA78KouS78DWaP\",\"Rn5YNvYdY468a7vRp\",\"ybCFjanx9gnosSqLm\",\"k5sDJjweu8W3jsjCj\",\"ZTorATGuuTEKbwD7M\",\"puWkZTjbBBnJXH9Rd\",\"aBtHZG9CaYC6r548Y\",\"mLPfS53i3c4Yf3jQ3\",\"xiKKZ4u3ksBaNwmjH\",\"9amCEoE43AdSneJZ7\",\"fD2vkjhwWmxbs3aAn\",\"hhxjQREtmHSheH9Pj\",\"uXYPCQ7TucSbx7GM9\",\"xa3dZEQBBEpWPR3L9\",\"oMZovHkR6QqNvQwyc\",\"gBGjCfJvPHswDM5JQ\",\"AdmEZ3hvEs4bfwofu\",\"z6iXZMSWYFtPrRwdp\",\"TrquEHytntLKHA4m2\",\"CR2LdcGibyLF9A2ht\",\"cueHAmTrcWuowXf58\",\"ePuFgELnGfwenQv6e\",\"9FXFESPtZf7KWKH3u\",\"Qp59idnPYSZZfefGG\",\"5TaPWyRv9DZWWodp8\",\"yMcCkXC4GCyjvTbBC\",\"fADAnmvM4LibcQWTr\",\"k5fCmeSrWn2rmqYXL\",\"44arJN5SYx3HyfetA\",\"uJ35G8tFEARtq4ttP\",\"9uvY36FiJRWxRpE7e\",\"yBeWtGNg9yuECLqGQ\",\"hab8YixsXxe4CcZpP\",\"gjSJcfrWyf2dfBmwt\",\"5ajfni3ATHd4bKiTy\",\"JXn2vNzXfoNwbeJcH\",\"xv5obFhsxY93mqR5S\",\"6uGvzridArD3GR7sE\",\"79Wo8iNbhEr7BvrNE\",\"y6kfyYmydcD8tkBk7\",\"o49FZbfFYNE5ReszP\",\"4SBj9cygDMHj6PPRP\",\"XqjRjXcpGQ4qYLFTH\",\"G9NBKSYQKHo63Wc3v\",\"47PyFbZyxWuP9Bgga\",\"sbnXNh3YegeK42AJH\",\"99PvCnF4Qi4ez2X3Z\",\"5ij6scpyYDWiqCZPS\",\"CgoCcBmyBozMP9hfc\",\"RGHZcPpqc2ShKBZ5i\",\"geZ3oLjhh9KAw7yHs\",\"7gBLtxKryhTryH5zb\",\"yyeQ8kyxFphnx4A3h\",\"bRs4g45vFbxrbjHN5\",\"9toJmYWtyPgmyGood\",\"etoSR23iELGGgs9rA\",\"SbDRsLR6yfZXETyKN\",\"SaWxEvSjnz623GLho\",\"JpGTbK8kYLeRCaybb\",\"agReopRiQqrFmPMrS\",\"GT9Qq2tC7dNhgHwEw\",\"22FAjogvpqJKR86HQ\",\"rgkLdANtYHsa58iuk\",\"GdxMMwDfLWwqcPJTF\",\"rKS5RrGKouLQ6QzD8\",\"pChhmmrN2Huexpwfq\",\"DJK9YHENZPSSEEhJe\",\"qaPjAANdnxFnWfj5d\",\"rWhXHhzF4W8bea6LP\",\"QjKEybGRFXpuwJqCJ\",\"49N8JxsYoyFS5HvYj\",\"8Xx8nWXRydHDBGfQf\",\"BdZTCHrjGayimdiMX\",\"sYKPxZX5xJZ2GTp6Q\",\"4JboF2FH8sEsRKEvu\",\"9ShXSwHycr8XCNWzo\",\"ZjEdErENicjeqKZ8g\",\"k66Tx5vNCHFXgkMAG\",\"ofm86SimLSXQivs6y\",\"RZhnfbL35u4CtQuqp\",\"A7jCWrFZzCATJ3Qgm\",\"P5skuFzMhDR8hkdLv\",\"ZkvBs5oddaBfKj28G\",\"dALgLwQEa7okKCgY2\",\"Ntj58GMELXyJMgWqr\",\"uNWebKDz2fA7acJKJ\",\"7H959vBsGkYFCxP6b\",\"79wYKX3wpNhCepTMD\",\"W56bWmpQeLJ9JEDsa\",\"vrrRmc9BvPM69SsHX\",\"ezFbHw9SkYsCAJRhk\",\"94XQj7wutz9ySewYC\",\"WA9ByhLbKKJTiZYf5\",\"r677auwZ8Zk7qzkZg\",\"NioGGZL9KCn5Ln96t\",\"w2rPvPbskuhndnDRG\",\"kTZXLeAmivBt2zKqk\",\"JwBT2xYDafcNG9eKr\",\"iBGtM4NCr6fMT4CSe\",\"Mh4Eamonu2ueJaKqp\",\"CtcMetTXaFgX6Evvf\",\"SDFZpSFiYpKKj2fKe\",\"LcupLYmJYLitWy35W\",\"Nv5qxSrNQYMiy8q62\",\"unNqQjSHzkb4pCzEu\",\"jtwXnqgBtW84HqNpB\",\"Yohr2MmAyaWGMbB35\",\"JzbofBj8gwFCkjF38\",\"GD3he8rG7mstnb5Z5\",\"9MiYJdzhRWAJ3egPz\",\"kJyNaFFvq9DmT6eNb\",\"ikxSkiQjCjYPsFwMT\",\"EGiEQjn2ca8GHvPRo\",\"N3tyYcBfjKQmSmDvf\",\"KCEsMas5BbmiD2Q9K\",\"Tf7TJFSPktJBgLA4k\",\"CCXDC2Gu3mDqY6dki\",\"mGByE5T8DjPfkTXhP\",\"9D3CTgPmcWY6hEvyD\",\"89m2vBbM7Ngi2iStZ\",\"LuCtCuJFKzjT72MiP\",\"qNey3TboRXF9Jac9Z\",\"bEANuSuNJiNxEETTs\",\"FrorBN8wRAoptuxtR\",\"CNc6rmwhbxkxEhHAp\",\"7W8yYT7ktkAoNo3u8\",\"owhopRidz9zaDyHzx\",\"fJ78xafnN3u5YzHjB\",\"mEs5n8hD6dXiwBMgH\",\"uFfEio8nzDvL8emhp\",\"GNkQuqeW8KzhuPaGM\",\"Yj7ftjzyP67R5NFrH\",\"J7epB3qSQJ2E8vWkY\",\"BDMzcwipsJSLoaRKx\",\"qWv9Ns8HH5rb8E5Xi\",\"2cdvd8yuPLSwvGj9w\",\"cghssahZfg9j5f2H8\",\"zQaMPKMwHF2GMjWj4\",\"YRvns3uQh3bEaNoTH\",\"3CDNfFkrvcoQ4ETLf\",\"Sjjk7xmiS86QoahrY\",\"syA2xowAA2EF87bkF\",\"umcNKSZ597NfCXiyy\",\"p7S65SrYRpA5bcJ5Y\",\"2ptN2mhjFwFcHyPZd\",\"qkxmwQPzuiCNB4eB8\",\"J76WbMXGkFJiw3jRd\",\"3EfDGZ9Sgz5zxzD7a\",\"3eXqMKuakNTN5SApa\",\"Ct6fHF5JSbPzN3S8y\",\"Q9vt2yJB4HNeegbY9\",\"jKtKJxg57iNXevySc\",\"frJHt9LkTLjoNGKfa\",\"8j3CcTyaDMm7mGn3K\",\"r579vsQvT57bCxrE5\",\"RAEFpazbe6mhx3PLb\",\"uLwgorFrspAjFLke2\",\"pokBD5HvY58t8Aicu\",\"6hf7rmQ2fQGBG6ns7\",\"G5p6ZdpwTf97i4cf4\",\"ZqjP4M6dzu32To33K\",\"obp7gd5w8sCAPGjnr\",\"BS7WizB9iWC6sZSdF\",\"eM32QxQKZYcuoA4y3\",\"8DfhSneJpsw5uqLeM\",\"P7zedbjaFw8YDzLz7\",\"hseQSt2EJ5uvb2pQv\",\"TuoCjRBc7HaFtdg4C\",\"zZJnquegZvRuvFvep\",\"ATCbF72Lo628BKgac\",\"xJR4MXjbsW7be3qQR\",\"jyoLggHk8xQKZuoQC\",\"qzRBHtdFfnDDSKk4M\",\"kaSirKnRwXvGfe6ru\",\"m8RTLuXqmythXHYZt\",\"khMT2aaDGgvZHWwWR\",\"dAPrAmeeaMKNdRsSE\",\"rvYTnqG95pm3GG8xD\",\"impqGWoYDFBiP9oPg\",\"nY6dveYZDwhkFZQ6D\",\"neNNSEbgzx79GYshu\",\"9gx3GGfLHWJXKRHDo\",\"7whE9vtomegJBxws5\",\"aE9jPW5T7LtSpavh3\",\"M9fYmJcbxAvDWAaE9\",\"pPucbWu53MvGtgpJc\",\"MzAsB27wKkPe9Sv78\",\"bEBcGa3X5RruawtbZ\",\"A6yL8pYE4qQhpEdgE\",\"QNCypaYtpfxmgwYyt\",\"h2yXpirPH3qa3LyoY\",\"64rAKvtcpkTk357GZ\",\"gopnAxB63qfvgSTe9\",\"8BFSTCnoe2QggN64c\",\"H45rJJw3q2GgtTiWx\",\"MSa5iqebmdK5C3Bpx\",\"sacPXRKX59BE495oz\",\"wrYbGuhfFbNjwEtim\",\"EwDfLWizsxXftZocq\",\"dBexp26HAHeucxKP7\",\"4vFJf9BEaAh899bAW\",\"84PnX6PD8izkkTcxT\",\"3h5dGS6W8akioYnWD\",\"kX4SqmzQs4E9Cm3hb\",\"Xtp5KnWiYiBkzdFFk\",\"tDbDX97LRju8SFCgp\",\"4BFwFhcFZqL4Aepgn\",\"bWXyzXXm3dnAZ9Cwv\",\"oWSpzbikwd8N3N2YA\",\"MYvg49zHaPkRyRHx6\",\"pcLSWDiya6LhXgQGB\",\"64Hrf4Kzaf6d2nkrC\",\"LvPcgns5Ec7wyMbMv\",\"XZCWhj8dfcs5wnkMx\",\"7ypuw2RbuSADSg4kN\",\"XukHrpzdTBvX57KFP\",\"JGQazmELTxvyNxMRM\",\"8WeJLyNE4h6nJ2dNh\",\"Nb6LYPoQP6KJZt8mz\",\"2ScA9s5nu35nSMDpt\",\"3kfGbGFuhCoXg3WiS\",\"rGQobbzGMbumfHfCh\",\"5jDgvkGd4JwatrYXg\",\"pRJ4S2bFKo6XKiH59\",\"qM6CtjCdrvmC8Fmye\",\"EbRM39k7fJpTnMezH\",\"zYCRZYBfme6Tv7zp3\",\"hqwecLtgjTtnTtDy6\",\"9Yt9jpwkwYPPRBFy3\",\"3mxgSbuF2Xjm7rWXz\",\"pi76g3eRpnKrhee2a\",\"a49eNnfRwSMxsDJXf\",\"v5gjriMxaA3pitLyY\",\"QCvjeqTNCo8SLTuvh\",\"rZL5a49P5wSMjdhfH\",\"Wqaao25fqMwAb7vus\",\"Qr8RxG3b4G6ewuPYv\",\"ABkbnsiyxMxqQ4a6M\",\"uD86CBz3A3yjirhGG\",\"Ln5Ktpm8Zgxgdtgww\",\"7WwNTwyY4f3Kd8uBw\",\"btabi3PdyisuY5tn9\",\"LCuvvWMwiGuqTwNRi\",\"MCw7uAcoWcSTBTmr3\",\"rkRgHfmzcby3CNBbu\",\"PaSg9dpK6JHre7hGF\",\"A3KrxZk4FiSymY6f2\",\"tuD6GTaiyfWm87uvh\",\"xTKGEfHS6A4dCDLdi\",\"EcBw39vkywQsT3Y2Z\",\"Wi4H6ayKsNDWWQCG5\",\"W6CmXurPBcAom7HKL\",\"gLWDhgrkJzM2k2hCc\",\"6iY9kWea8jBRxWG3X\",\"mHZz7EeGdk23dBpzT\",\"QRv96jmNaYsWkxQEG\",\"3SgSNoAB3sxaYeT3w\",\"NXtM3si2K3i4DySMn\",\"HCfkcKnPs9mrJojdG\",\"yDBK5DJ9jgu8ugXdB\",\"KAGzYNik4pGts5Fj5\",\"hyXeRYdApCwnAZFag\",\"umE8dRTGWzrZFp755\",\"RSombfrtxS5PSXnyJ\",\"b6PEkvr66YeCamroN\",\"kiq3z4o9ABhQd7aXJ\",\"YuA7rdrQTzpfFLGJq\",\"6MgG8N9rkmAZKYrJ3\",\"GkYtSbQuheBF4Enys\",\"YcCLwitFMAEJSnxAW\",\"x9CWxL7Q7yCHdrAmq\",\"98499DDQYDLiQSxkK\",\"tejkzX5N5NeBgjdke\",\"XNgW94PSq5kkXhojm\",\"dD3Aja8PZSMXMFSDY\",\"KPz93xbvJ9x7okGs6\",\"TePvYdKjFgfJqexb2\",\"srJ34BaybkQh3qRkM\",\"c96gH88NsjR3MycAj\",\"buX4mCQhtXCfBjeno\",\"8jpeC6HwxGq68WPma\",\"owyG9e6x47Qzv8ASo\",\"MYaqDq32HkAjdYEbo\",\"yb8T3nuL4evaeJW6k\",\"Xc4m9Hst8SgXswpTh\",\"ScYoZtxALtkZXKLo4\",\"tqhuFrDBKPTW7Q8Gb\",\"N8WRBtQhtoqroCHh9\",\"6rvJwN4mcX7iYGjY7\",\"FEGpESiobxcqjMqF3\",\"t55QWHi8o4teZxqqE\",\"umN7yuemgaF8MLo6x\",\"s2Y76rR2h2fPKibsK\",\"fGSQQds3A8gP6rc5h\",\"xEX3TDY6C2h82dJTn\",\"vRXuYYBNuHEQ29fbm\",\"qat6GsLjQbgGc96JD\",\"tBj8qDkX8HpFjHRgu\",\"4ySzqKC5s3ZRpG9di\",\"AQSqD9oNv2uPfxZCR\",\"oPNPK8B6u6Rbxx9JG\",\"jtzNdgDCzsekkdpxA\",\"ztrfkKRfYBWokFwkf\",\"p8hkfoXChHNEFDNbM\",\"khdCaD6AGBiR6txLQ\",\"5LDvZHCDJqePeBrCg\",\"xxT6dr6je7bsPTqqc\",\"B5WC93k6tF3fSZqfQ\",\"peSPGkvA444dd9mmJ\",\"TCvpT4EPb8qNssNB7\",\"sxci7DYKNa6q22Sjq\",\"jyeZPhmfLtysXHswN\",\"rhS8qXRjZcpDXkwnE\",\"3qgJpdhyi4tKuqMdm\",\"7o35fLemrTfMDQAmx\",\"YRAzEBJoLvSaiPtYx\",\"Qv2jEtTnFCXX7cdd3\",\"H469XosMjfNu8Fop7\",\"Reyq7sSccAZJvJrmB\",\"9RJpt5ec2KMLuac4w\",\"D3ASM3aWpcQ8gvnin\",\"nSLvkGEpiYCtcBLaa\",\"uw47663LqPME8btaA\",\"QkuqcYYbQBhnCrrAf\",\"bvJDhaa7ensL7CuDW\",\"gZj6HTKJdPGJwPe2D\",\"Gn8rShvWCKLX3cxzx\",\"fdyejapW3NWN7utPX\",\"jcPZ5ySXseCB7Ec3x\",\"cR3ibTMxLyEdDFCHY\",\"afvP29FhRou2bTaav\",\"DZvz6WY5bQEneYzvv\",\"aYCB22cDSkNpoGeD7\",\"uxv5b39giPsH2LR3X\",\"ckQwFFWyLXmDQAaCn\",\"6KDZNmtgvb6PCaWQE\",\"PCsT29KNEX8ufEawi\",\"zfyRY2ZoTpJmy6EHu\",\"f6CBJntX2RFd2zAjR\",\"mAYRXjKDkXauHcATL\",\"2v8daNMFLCPvSNaX5\",\"aoB3vhvsrFhwALLm8\",\"yGDSvLJXXz5ZmaS4h\",\"JXYvMawaDwnTLuf5F\",\"K9sQFTWhKP4nkPQcb\",\"iceFyx5uEhQ2G3TMh\",\"htXCitorobtqYymjN\",\"DEDniTrstQYGounXT\",\"PAzNgJF54C2mYPkR9\",\"qGyhayAwAgpwvK8Kg\",\"KMR6vNzvSKMA2cXnK\",\"YrZxRMm5KrrC5bsZa\",\"wFRLGjA56kj7xyhmv\",\"RsujLHaML6L3KinzK\",\"ogmMA66jW6jYJTTmv\",\"svHoRdg5sR9CLzZLC\",\"QMcxci638CgTJ54bH\",\"eCKSwzE9rhxW6bmdX\",\"pyZG6wgFRiZsSEaTE\",\"KBfJFkYQ2RbnYd3hL\",\"6kB5qypxcm62PHsEJ\",\"GD9Jqmu93vB4LTT8F\",\"GSs7rtv3hBbJA3aCF\",\"9moo5f7g8KrZieT2K\",\"FJur4D6hBgTQZqmDQ\",\"XErNMHjSTD9FCrm5M\",\"unqzSsxpxj9sZ7rbD\",\"gFEpzrgWhzCZHeifj\",\"xLy94bAjaLwokPcZZ\",\"QgGGow8Ynnq2YkGXX\",\"koWGjiCmozmgwhYsb\",\"w99WfQNYsNAyJRM4C\",\"x2Cz7S8rCKJqCE3Xe\",\"F8dA24AosSC8XXb7D\",\"5HGyJtoZ3AffzAZAv\",\"9du58gNDkWQEWivbB\",\"B4y8aoyXJtskYPFEL\",\"YEMQNE333gAXhGE4c\",\"FcMu2WPvDobEbWhyr\",\"C9LKGu2g5hSijvDzA\",\"5kMuNZuxiFcNRDkG4\",\"8YqEzJJLFtLkx5fHc\",\"zo9MtKnkZegPjXvtP\",\"eXQziXGcpwekMyABQ\",\"M53dqkDAgYgKcncAM\",\"28pZTZvXDHtNfcWGv\",\"4To7THbHADdtXbewx\",\"i5QeAsrM4m6hzPTku\",\"C6prbNbCwgh4GrXdD\",\"hF9icm7GxAnAGSjAD\",\"NwczjpfNN8jXy5RF6\",\"8imyReZaRJAL8cSxX\",\"ZGMAnRqxt9iesogtR\",\"6GmG5otoNYX5qitTR\",\"5QN8R22z43SrwoHDz\",\"CipspuHopXSNosuq3\",\"uw9pWX8KAGuzDh9s7\",\"HuNwBgyGGDPCDrApb\",\"WgEpodYY8Zya5cAQJ\",\"qoZrXudcaHo8QLFsj\",\"nFbmNzMQ38TncmfQX\",\"WSrsjmSjhkfQvWyH2\",\"r72oFMcCQh4rBsKHb\",\"J8GhL9EX5zZcrgyBt\",\"ckc5sEEpgPPsxPTWp\",\"3Gf7ikLijfoxabiPY\"]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":1},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"udrQ2ckXP9cXNXiSk\",\"language\":\"cpp\"},{\"_id\":\"CtRJzrY2aPgoqSFAr\",\"language\":\"csharp\"},{\"_id\":\"hdT772EaY6ofm4ef4\",\"language\":\"java\"},{\"_id\":\"YjkNx49pk7Eois9pi\",\"language\":\"javascript\"},{\"_id\":\"3wujpfPK6KF6Tisdd\",\"language\":\"php\"},{\"_id\":\"2vvfEodtq4RYsbcrh\",\"language\":\"python3\"},{\"_id\":\"KcRZZCkiytpf9TGcj\",\"language\":\"ruby\"}]}}"]