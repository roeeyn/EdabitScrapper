a["{\"msg\":\"result\",\"id\":\"555\",\"result\":{\"_id\":\"AGoRjorDpas63gqt6\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class Abbreviated {\\n  public static boolean uniquely(String[] a, String[] w) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":2.129032258064516,\"familyId\":\"djrZHkcenA9vPg634\",\"instructions\":\"You are given two inputs:\\n\\n1. An array of abbreviations.\\n2. An array of words.\\n\\nWrite a function that returns `true` if each abbreviation **uniquely identifies** a word, and `false` otherwise.\\n\\n### Examples\\n```\\nuniquely([\\\"ho\\\", \\\"h\\\", \\\"ha\\\"], [\\\"house\\\", \\\"hope\\\", \\\"happy\\\"]) ➞ false\\n// \\\"ho\\\" and \\\"h\\\" are ambiguous and can identify either \\\"house\\\" or \\\"hope\\\"\\n\\nuniquely([\\\"x\\\", \\\"l\\\", \\\"t\\\"], [\\\"xavier\\\", \\\"loves\\\", \\\"tesh\\\"]) ➞ true\\n\\nuniquely([\\\"s\\\", \\\"t\\\", \\\"v\\\"], [\\\"stamina\\\", \\\"television\\\", \\\"vindaloo\\\"]) ➞ true\\n\\nuniquely([\\\"bi\\\", \\\"ba\\\", \\\"bat\\\"], [\\\"big\\\", \\\"bard\\\", \\\"battery\\\"]) ➞ false\\n\\nuniquely([\\\"mo\\\", \\\"ma\\\", \\\"me\\\"], [\\\"moment\\\", \\\"many\\\", \\\"mean\\\"]) ➞ true\\n```\\n\\n### Notes\\nAbbreviations will be a substring from `[0, n]` from the original string.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"import static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class AbbreviatedTest {\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertEquals(true, Abbreviated.uniquely(new String[] {\\\"x\\\", \\\"l\\\", \\\"t\\\"}, new String[] {\\\"xavier\\\", \\\"loves\\\", \\\"tesha\\\"}));\\t\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertEquals(true, Abbreviated.uniquely(new String[] {\\\"mo\\\", \\\"ma\\\", \\\"me\\\"}, new String[] {\\\"moment\\\", \\\"many\\\", \\\"mean\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertEquals(true, Abbreviated.uniquely(new String[] {\\\"at\\\", \\\"o\\\", \\\"abe\\\"}, new String[] {\\\"atom\\\", \\\"original\\\", \\\"abet\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertEquals(true, Abbreviated.uniquely(new String[] {\\\"rh\\\", \\\"par\\\", \\\"re\\\"}, new String[] {\\\"rhino\\\", \\\"parry\\\", \\\"residue\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertEquals(true, Abbreviated.uniquely(new String[] {\\\"s\\\", \\\"t\\\", \\\"v\\\"}, new String[] {\\\"stamina\\\", \\\"television\\\", \\\"vindaloo\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertEquals(false, Abbreviated.uniquely(new String[] {\\\"bi\\\", \\\"ba\\\", \\\"bat\\\"}, new String[] {\\\"big\\\", \\\"bard\\\", \\\"battery\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertEquals(false, Abbreviated.uniquely(new String[] {\\\"b\\\", \\\"c\\\", \\\"ch\\\"}, new String[] {\\\"broth\\\", \\\"chap\\\", \\\"cardigan\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertEquals(false, Abbreviated.uniquely(new String[] {\\\"to\\\", \\\"too\\\", \\\"t\\\"}, new String[] {\\\"topology\\\", \\\"took\\\", \\\"torrent\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test09() { \\n\\t\\tassertEquals(false, Abbreviated.uniquely(new String[] {\\\"ho\\\", \\\"h\\\", \\\"ha\\\"}, new String[] {\\\"house\\\", \\\"hope\\\", \\\"happy\\\"}));\\n\\t}\\n}\",\"language\":\"java\",\"quality\":0,\"summary\":\"You are given two inputs:\\n\\nAn array of abbreviations.\\nAn array of words.\\n\\nWrite a function that returns true if each abbreviation uniquely identifies a word, and false otherwise.\\n\\nExamples\\nuniquely([\\\"ho\\\", \\\"h\\\", \\\"ha\\\"], [\\\"house\\\", \\\"hope\\\", \\\"happy\\\"]) ➞ false\\n// \\\"ho\\\" and \\\"h\\\" are ambiguous and can identify either \\\"house\\\" or \\\"hope\\\"\\n\\nuniquely([\\\"x\\\", \\\"l\\\", \\\"t\\\"], [\\\"xavier\\\",\",\"tags\":[\"strings\",\"higher_order_functions\"],\"timestamp\":{\"$date\":1608292647362},\"title\":\"Abbreviations Unique?\",\"stats\":{\"completed\":{\"total\":28,\"ratings\":[2,2,2,2,2,2,2,3,3,2,0,2,3,2,3,3,0,3,2,3,2,2,1,3,3,2,1,3,2,2,2],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"NYEt8oHpnnqXKtXhN\",\"5R9nW7JC9PH4Pdsk5\",\"QrveRA7svT9YFxaSM\",\"NQf7CXM3ecoNE4uE2\",\"NXtM3si2K3i4DySMn\",\"aykgiHhHvd2fYho4d\",\"82weQfHHmno4Mq4X7\",\"jyoLggHk8xQKZuoQC\",\"buX4mCQhtXCfBjeno\",\"LNCb5rksJLJ43L4Nw\",\"qx6yvahdH8aw4Jnm7\",\"mfm3gB39arY8Rjb2y\",\"qaPjAANdnxFnWfj5d\",\"rhS8qXRjZcpDXkwnE\",\"2NJZbusRvu3eJ4tHu\",\"sxci7DYKNa6q22Sjq\",\"rWhXHhzF4W8bea6LP\",\"KMR6vNzvSKMA2cXnK\",\"a49eNnfRwSMxsDJXf\",\"wFRLGjA56kj7xyhmv\",\"htXCitorobtqYymjN\",\"unqzSsxpxj9sZ7rbD\",\"CggGfsERnPKGupFWp\",\"uw47663LqPME8btaA\"]},\"flags\":0},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"EtWMRhk6apM5y6Bb2\",\"language\":\"cpp\"},{\"_id\":\"AGoRjorDpas63gqt6\",\"language\":\"java\"},{\"_id\":\"H8JABWQfYFN4ZSAxE\",\"language\":\"javascript\"},{\"_id\":\"tjMNAEgkNvM5eyEqJ\",\"language\":\"python3\"},{\"_id\":\"Bd7bYFFCTc55aqfJM\",\"language\":\"ruby\"}]}}"]