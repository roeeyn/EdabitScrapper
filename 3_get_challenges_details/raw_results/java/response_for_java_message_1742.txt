a["{\"msg\":\"result\",\"id\":\"430\",\"result\":{\"_id\":\"ZiuuBqBWYBRtPaKKR\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class StringCycles {\\n  public static String stringCycling(String a, String b) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":1.5777777777777777,\"familyId\":\"qLnxWBnwqLcajaaRS\",\"instructions\":\"Given two strings, repeatedly cycle through all of the letters in the first string until it is the same length as the second string.\\n\\n### Examples\\n```\\nstringCycling(\\\"abc\\\", \\\"hello\\\") ➞ \\\"abcab\\\"\\n\\nstringCycling(\\\"programming\\\", \\\"edabit\\\") ➞ \\\"progra\\\"\\n\\nstringCycling(\\\"the world in me evolves in hers\\\", \\\"i love Tesh, so much so\\\") ➞ \\\"the world in me evolves\\\"\\n\\nstringCycling(\\\"a thing of beauty is a joy forever\\\", \\\"indulge me surely\\\") ➞ \\\"a thing of beauty\\\"\\n\\nstringCycling(\\\"to\\\", \\\"hide\\\") ➞ \\\"toto\\\"\\n\\nstringCycling(\\\"such a feeling coming over me\\\", \\\"top of the world\\\") ➞ \\\"such a feeling c\\\"\\n```\\n\\n### Notes\\n- All tests will include valid strings.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"/** \\n====================================== \\nTestGen 4.0 for JUnit 4.13.0 \\t\\t\\nTest Case: StringCycles::stringCycling \\nTimestamp: 12/20/2020 05:44:46 AM \\n-------------------------------------- \\n® DARKKO 2020 © \\n====================================== \\n\\n**/ \\n\\nimport static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class StringCyclesTest { \\n\\t\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertEquals(\\\"abcab\\\", StringCycles.stringCycling(\\\"abc\\\", \\\"hello\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertEquals(\\\"progra\\\", StringCycles.stringCycling(\\\"programming\\\", \\\"edabit\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertEquals(\\\"hahahahahaha\\\", StringCycles.stringCycling(\\\"ha\\\", \\\"good morning\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertEquals(\\\"      \\\", StringCycles.stringCycling(\\\" \\\", \\\"python\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertEquals(\\\"the q\\\", StringCycles.stringCycling(\\\"the quick brown fox jumps over the lazy dog\\\", \\\"abcde\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertEquals(\\\"the world in me evolves\\\", StringCycles.stringCycling(\\\"the world in me evolves in hers\\\", \\\"i love Tesh, so much so\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertEquals(\\\"a thing of beauty\\\", StringCycles.stringCycling(\\\"a thing of beauty is a joy forever\\\", \\\"indulge me surely\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertEquals(\\\"toto\\\", StringCycles.stringCycling(\\\"to\\\", \\\"hide\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test09() { \\n\\t\\tassertEquals(\\\"such a feeling c\\\", StringCycles.stringCycling(\\\"such a feeling coming over me\\\", \\\"top of the world\\\"));\\n\\t}\\n\\n}\\n// end of tests\\n// credit goes to the original author/publisher @Joshua Señoron\",\"language\":\"java\",\"quality\":0,\"summary\":\"Given two strings, repeatedly cycle through all of the letters in the first string until it is the same length as the second string.\\n\\nExamples\\nstringCycling(\\\"abc\\\", \\\"hello\\\") ➞ \\\"abcab\\\"\\n\\nstringCycling(\\\"programming\\\", \\\"edabit\\\") ➞ \\\"progra\\\"\\n\\nstringCycling(\\\"the world in me evolves in hers\\\", \\\"i love Tesh, so much so\\\") ➞ \\\"the world in me evolves\\\"\\n\\nstringCycling(\\\"a thing\",\"tags\":[\"loops\",\"strings\"],\"timestamp\":{\"$date\":1608413918463},\"title\":\"Cycling Through Strings\",\"stats\":{\"completed\":{\"total\":44,\"ratings\":[1,1,1,1,1,3,1,2,2,2,2,2,2,1,1,1,2,1,0,2,1,3,2,1,2,4,1,2,3,2,0,2,2,0,1,2,2,0,2,2,1,2,2,1,2],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"5qjDvmKyDxg2uZTzJ\",\"beSt5pzrK2WWpJpna\",\"Es4eX2stRpyoXeC7f\",\"gECk4X9iPLXBSq5CB\",\"T6iBEE2jp7f7iEF2P\",\"gXTAie79kiw28tx5u\",\"QTJvghkPpGKnKvZ5R\",\"qaPjAANdnxFnWfj5d\",\"RGN3QTb5LXj4ZPPkj\",\"a49eNnfRwSMxsDJXf\",\"mG8HqKiAQFTdRZthG\",\"82weQfHHmno4Mq4X7\",\"gBGjCfJvPHswDM5JQ\",\"bur3yQ8s34zqKGEro\",\"AeJSxRqw2dJZuGvdk\",\"R6Br35rEWAquiTjuN\",\"zZfMwLuoERGmybgib\",\"7g4CXnyHDL34QCxmw\",\"jyoLggHk8xQKZuoQC\",\"mDWNyaaQ9hvPCRzSd\",\"DkSMZ3jZLkwviKb9g\",\"yDYWHheeALMpSSwbm\",\"buX4mCQhtXCfBjeno\",\"4ySzqKC5s3ZRpG9di\",\"rhS8qXRjZcpDXkwnE\",\"sxci7DYKNa6q22Sjq\",\"srJ34BaybkQh3qRkM\",\"J9zJq7PMGb6mqzcHW\",\"wFRLGjA56kj7xyhmv\",\"htXCitorobtqYymjN\",\"KMR6vNzvSKMA2cXnK\",\"jCjCvyhqhpebkJn34\",\"PJu3WcTpfRrvHfQiS\",\"rWhXHhzF4W8bea6LP\",\"hhxjQREtmHSheH9Pj\",\"unqzSsxpxj9sZ7rbD\",\"byLcacnySm4m8FaJv\",\"uw47663LqPME8btaA\",\"PAEWysAAFheYiYPBp\"]},\"flags\":0},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"Mn3AmEB8WwSguiqri\",\"language\":\"cpp\"},{\"_id\":\"ZiuuBqBWYBRtPaKKR\",\"language\":\"java\"},{\"_id\":\"gfm9nQFzogSYTE24t\",\"language\":\"javascript\"},{\"_id\":\"HhmkKonCLTyAhAcwK\",\"language\":\"python3\"},{\"_id\":\"Y8Yohphw2L5pHvBeG\",\"language\":\"ruby\"}]}}"]