a["{\"msg\":\"result\",\"id\":\"582\",\"result\":{\"_id\":\"oXXBnHjXLAHKcvqXN\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n\\tpublic static int periodic(String str) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":2.183333333333333,\"familyId\":\"r5HPvJFoKqYX8TfaG\",\"instructions\":\"This challenge involves a series that can start with any string of digits. The next term in the series is found by adding the digits of the previous term, appending that sum to the previous term, and then truncating the leftmost digits so that the number of digits in the terms is always the same.\\n\\nLet's start with \\\"1234\\\". The sum of the digits is 10. Appending gives us \\\"123410\\\", then truncating the left two digits results in \\\"3410\\\". The next three terms are \\\"4108\\\", \\\"0813\\\", \\\"1312\\\". The series becomes periodic when a term that previously appeared occurs again.\\n\\nExample:\\n\\n```\\n\\\"124\\\", \\\"247\\\", \\\"713\\\", \\\"311\\\", \\\"115\\\", \\\"157\\\", \\\"713\\\", \\\"311\\\" ...\\n```\\n\\nThis series becomes periodic at a length of 6 before \\\"713\\\" reappears.\\n\\nCreate a function whose argument is a digit string (the first term) and returns the length of the series when it first becomes periodic.\\n\\n### Examples\\n```\\nperiodic(\\\"1\\\") ➞ 1\\n\\nperiodic(\\\"3061\\\") ➞ 7\\n\\nperiodic(\\\"02468\\\") ➞ 178\\n\\nperiodic(\\\"314159265\\\") ➞ 12210\\n```\\n\\n### Notes\\nN/A\",\"isHidden\":false,\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(1, Challenge.periodic(\\\"2\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(13, Challenge.periodic(\\\"22\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(4, Challenge.periodic(\\\"157\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(943, Challenge.periodic(\\\"1234567\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(1, Challenge.periodic(\\\"1818\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(778, Challenge.periodic(\\\"0000001\\\"));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"This challenge involves a series that can start with any string of digits. The next term in the series is found by adding the digits of the previous term, appending that sum to the previous term, and then truncating the leftmost digits so that the number of digits in the terms is always the same.\\n\\nLet's start with \\\"1234\\\". The sum of the digits is 10. Appending\",\"tags\":[\"loops\",\"strings\"],\"timestamp\":{\"$date\":1575596859199},\"title\":\"A Periodic Series\",\"stats\":{\"completed\":{\"total\":70,\"ratings\":[2,2,2,2,2,2,0,2,1,3,3,1,3,2,3,2,1,2,4,0,2,1,0,1,3,3,3,2,2,1,4,0,2,1,2,3,2,3,3,3,2,3,2,3,2,3,3,2,2,1,3,3,2,3,3,3,2,3,3,3],\"rators\":[\"BSDtieYGg6H7evesT\",\"SnY7WidXJoAyyuPuA\",\"eXW8reZCCZHQzJjQi\",\"J9zJq7PMGb6mqzcHW\",\"Es4eX2stRpyoXeC7f\",\"So2wccuRM8TQK4Cru\",\"cjxsqXfkAPoadmppi\",\"qb2DTmzQj4vNfq5K7\",\"xnhBi4BCdJNAXXRvk\",\"wbSLghDxkTjiYJrEH\",\"cAf8p3LyzuZkgSN8R\",\"zbGJGwm2a7un8F5T5\",\"2PR653L4KSN97r534\",\"imoNrk36ozReP939p\",\"fZjkX29nhRTWWb75k\",\"jyoLggHk8xQKZuoQC\",\"rehehi2Tr2mwaEoJE\",\"oMLSgpSFQnY4ui8cB\",\"zeE9TvhkPfebAq9n8\",\"Wf7nCHS4Gq5tx659h\",\"TrquEHytntLKHA4m2\",\"8zZ6xmzpiFair25qr\",\"gJbvbqosimaP4ZAYb\",\"pWR5uhd9dirgnvexP\",\"WZujpe8yQAyZmpWHg\",\"ujER6DyJuNvH7EMSR\",\"pBMXMQem6BpSeooYT\",\"etoSR23iELGGgs9rA\",\"5seiNqw6ZXoF2GRRd\",\"BEjoBzgdBkGbGHJkv\",\"Tqa3eiuYAAAjpnFSd\",\"DkSMZ3jZLkwviKb9g\",\"kWobGYgZWJxN6ZddF\",\"7TtJGGLQY26Hyf43c\",\"k63LjKkX5p7SYng7C\",\"4RsakkyRXyYGwFxEa\",\"nzmGPn6f2ceHnqFPE\",\"GamaMNrnhrjj5tXTx\",\"R8YWhHoXoasSsLJs4\",\"jRqY4i8gPemsZMBGf\",\"Ym8AjbKGSJooun3nt\",\"DzvdGwHEjqsX7wyKr\",\"gXTAie79kiw28tx5u\",\"yXGiiSAR5nBHnH3yr\",\"mQKWauR6b252TmdX4\",\"xGtxQz9WnAPPKJZxK\",\"8Xx8nWXRydHDBGfQf\",\"jXTnL3JatkKjoifyb\",\"RGN3QTb5LXj4ZPPkj\",\"LNCb5rksJLJ43L4Nw\",\"BC2ELQgWt9f3c2rCb\",\"zZfMwLuoERGmybgib\",\"a49eNnfRwSMxsDJXf\",\"jCjCvyhqhpebkJn34\",\"2NJZbusRvu3eJ4tHu\",\"wFRLGjA56kj7xyhmv\",\"sxci7DYKNa6q22Sjq\",\"KMR6vNzvSKMA2cXnK\",\"htXCitorobtqYymjN\",\"rWhXHhzF4W8bea6LP\"],\"quality\":[3,4,5,4,4]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":4,\"family\":[{\"_id\":\"XszrQMmEbnWA6ve8b\",\"language\":\"cpp\"},{\"_id\":\"oXXBnHjXLAHKcvqXN\",\"language\":\"java\"},{\"_id\":\"oxbB9va7ejSMoCf9B\",\"language\":\"javascript\"},{\"_id\":\"cx2KeDmEZDyeFsSfT\",\"language\":\"python3\"},{\"_id\":\"MbfJiGuozSAtSEJRp\",\"language\":\"ruby\"}]}}"]