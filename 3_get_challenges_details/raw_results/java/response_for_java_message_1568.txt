a["{\"msg\":\"result\",\"id\":\"342\",\"result\":{\"_id\":\"p3BhJuodwuhrNjQJ5\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class Pythagorean {\\t\\n\\tpublic static boolean isTriplet(int a, int b, int c) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.4848484848484849,\"quality\":4.857142857142857,\"familyId\":\"oyBkQ79G7tL8K3k4m\",\"instructions\":\"Create a function that validates whether the three given integers form a **Pythagorean triplet** which is defined as the sum of the squares of the *two smallest integers* must be equal to the square of the *largest integer*.\\n\\n### Examples\\n```\\nisTriplet(3, 4, 5) ➞ true\\n// 3² + 4² = 25\\n// 5² = 25\\n\\nisTriplet(13, 5, 12) ➞ true\\n// 5² + 12² = 169\\n// 13² = 169\\n\\nisTriplet(1, 2, 3) ➞ false\\n// 1² + 2² = 5\\n// 3² = 9\\n\\nisTriplet(72, 54, 90) ➞ true\\n\\nisTriplet(54, 46, 77) ➞ false\\n\\nisTriplet(80, 48, 64) ➞ true\\n```\\n\\n### Notes\\n- Numbers may not be given in a sorted order.\",\"isHidden\":false,\"lab\":\"/** \\n================================= \\nTestGen 3.1 for JUnit 4.13.0 \\t\\t\\nTest Case: Pythagorean::isTriplet \\nTimestamp: 09/21/2020 08:54:46 PM \\n--------------------------------- \\n® DARKKO 2020 © \\n================================= \\n\\n**/ \\n\\nimport static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class PythagoreanTest { \\n\\t\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertEquals(true, Pythagorean.isTriplet(3, 4, 5));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertEquals(false, Pythagorean.isTriplet(1, 2, 3));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertEquals(false, Pythagorean.isTriplet(3, 18, 8));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertEquals(false, Pythagorean.isTriplet(7, 12, 7));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertEquals(true, Pythagorean.isTriplet(13, 5, 12));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertEquals(false, Pythagorean.isTriplet(12, 20, 18));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertEquals(false, Pythagorean.isTriplet(17, 14, 2));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertEquals(false, Pythagorean.isTriplet(6, 15, 12));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test09() { \\n\\t\\tassertEquals(true, Pythagorean.isTriplet(60, 61, 11));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test10() { \\n\\t\\tassertEquals(false, Pythagorean.isTriplet(7, 13, 15));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test11() { \\n\\t\\tassertEquals(false, Pythagorean.isTriplet(12, 18, 7));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test12() { \\n\\t\\tassertEquals(true, Pythagorean.isTriplet(8, 17, 15));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test13() { \\n\\t\\tassertEquals(true, Pythagorean.isTriplet(3120, 79, 3121));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test14() { \\n\\t\\tassertEquals(true, Pythagorean.isTriplet(72, 54, 90));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test15() { \\n\\t\\tassertEquals(true, Pythagorean.isTriplet(80, 48, 64));\\n\\t}\\n\\n}\\n// end of tests\",\"language\":\"java\",\"summary\":\"Create a function that validates whether the three given integers form a Pythagorean triplet which is defined as the sum of the squares of the two smallest integers must be equal to the square of the largest integer.\\n\\nExamples\\nisTriplet(3, 4, 5) ➞ true\\n// 3² + 4² = 25\\n// 5² = 25\\n\\nisTriplet(13, 5, 12) ➞ true\\n// 5² + 12² = 169\\n// 13² = 169\\n\\nisTriplet(1, 2, 3) ➞\",\"tags\":[\"math\",\"validation\",\"numbers\",\"geometry\"],\"timestamp\":{\"$date\":1600693651459},\"title\":\"Pythagorean Triplet\",\"stats\":{\"completed\":{\"total\":113,\"ratings\":[1,1,1,1,1,2,5,2,2,2,0,0,2,2,1,2,2,2,1,2,2,1,2,2,1,2,0,2,1,2,0,2,1,2,2,1,0,2,1,1,2,1,2,1,2,2,2,0,1,1,0,1,1,4,2,2,0,2,0,2,2,1,2,2,1,1,2,2,1,1,2,1,2,1,1,1,2,1,2,2,2,2,2,0,2,1,1,1,2,1,2,1,2,2,2,1,2,2,2],\"quality\":[5,5,5,5,5,5,4],\"rators\":[\"a777e8chPvJkY3tKa\",\"azAzSkvJd7eyXY9x9\",\"DzvdGwHEjqsX7wyKr\",\"Fdq6CxMWZL8WZiNaM\",\"qaPjAANdnxFnWfj5d\",\"xsyTrEmmXy22KofZn\",\"82weQfHHmno4Mq4X7\",\"rvojHhKH3DaxotefQ\",\"YFHkjbM6obMSj24zi\",\"Es4eX2stRpyoXeC7f\",\"yXGiiSAR5nBHnH3yr\",\"oh9oCGpPKQGEFv9Ag\",\"gXTAie79kiw28tx5u\",\"etoSR23iELGGgs9rA\",\"TrquEHytntLKHA4m2\",\"oMZovHkR6QqNvQwyc\",\"jb9RLyyuo565bKDzN\",\"rWhXHhzF4W8bea6LP\",\"8Xx8nWXRydHDBGfQf\",\"jyoLggHk8xQKZuoQC\",\"jXTnL3JatkKjoifyb\",\"sacPXRKX59BE495oz\",\"mQKWauR6b252TmdX4\",\"hhxjQREtmHSheH9Pj\",\"fCTfZSgeDbRbTvDY4\",\"AeJSxRqw2dJZuGvdk\",\"a49eNnfRwSMxsDJXf\",\"HPfFF7bmMBfeozz37\",\"zza5WjC8QrHcoDZBF\",\"buX4mCQhtXCfBjeno\",\"bur3yQ8s34zqKGEro\",\"vRXuYYBNuHEQ29fbm\",\"7BjxcJvSFKXJMz6X6\",\"zZfMwLuoERGmybgib\",\"DkSMZ3jZLkwviKb9g\",\"4ySzqKC5s3ZRpG9di\",\"rhS8qXRjZcpDXkwnE\",\"pGHzaBviaAStdFXfF\",\"sxci7DYKNa6q22Sjq\",\"6rvJwN4mcX7iYGjY7\",\"xEX3TDY6C2h82dJTn\",\"mfm3gB39arY8Rjb2y\",\"HsFc9PgmpP2X9Fwh9\",\"uw47663LqPME8btaA\",\"z8RNJoYWsbtrefqnx\",\"wFRLGjA56kj7xyhmv\",\"srJ34BaybkQh3qRkM\",\"MpfytGFYF77emJ3cT\",\"Wg3AxAXHwnWmByxeb\",\"J9zJq7PMGb6mqzcHW\",\"htXCitorobtqYymjN\",\"jCjCvyhqhpebkJn34\",\"4za87fFyw9qxkD936\",\"PCAcZdg2HmDcGyeXb\",\"5FTQhvh8zTRWhAene\",\"vtr6NEkwWArTCBCb4\",\"pubaKyw9PTJvtHnJC\",\"AHmgsYBy6A66bDQFC\",\"B4pxRqzo43M7S8FbP\",\"563onSvqgjToY79ah\",\"J7epB3qSQJ2E8vWkY\",\"SNLHryxfRzMtHdKXW\",\"Qv2jEtTnFCXX7cdd3\",\"cR3ibTMxLyEdDFCHY\",\"JFodQijHHdRkkrZvT\",\"DZvz6WY5bQEneYzvv\",\"PJu3WcTpfRrvHfQiS\",\"SE5G2Caf3btnuGmz6\",\"yr822PZmmiDDenxpB\",\"KMR6vNzvSKMA2cXnK\",\"AeSmk2XWGcTLHB7PJ\",\"4hP6JDXcHtW3ErE9H\",\"nDDNHWdGDaR83aysS\",\"xW9nC9h6p77YT2iso\",\"TjEfsEyuxhqADbD2M\",\"YhjxCw66FzTmgXBEN\",\"CHuC8mjQLn2KJxZSz\",\"dCNJAT6r8CDuobBi8\",\"W2eHSqG9hbKZfgaap\",\"ox2iqixsSq7ftcGrb\",\"BBQL4QyYvvTHPopDx\",\"kFMhaBXDFKwb35d5b\",\"z74KC2CWjp4nutyQA\",\"ndreeS9YBDS7FN5xy\",\"QLbMpCmJpFNrwWey3\",\"9ttuKgRkXr8nryMKC\",\"EzAHwXXHQhfypNSug\",\"Y8CQZsyuqgKSLgAxB\",\"9QbriRWN7p5isXze6\",\"FxPDKKibxnZjGJLs6\",\"2dAi9BoKKA74f79he\",\"TTQaz8Yw4Qi76GewN\",\"RwyCNgJocHpsLMseB\",\"FT5gsh7Fu6Zx7B7n9\",\"kYDaHiL9D8QJ48zhS\",\"2NnENEWWaWPW8hZmp\",\"JDF2epP4JBSvyrHcu\",\"974cv448kw6Wu2JF6\",\"XH6378Zm3WBm679yx\",\"nFbmNzMQ38TncmfQX\",\"ckQwFFWyLXmDQAaCn\"]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"7hdRqafcFyD7ctbN5\",\"language\":\"cpp\"},{\"_id\":\"p3BhJuodwuhrNjQJ5\",\"language\":\"java\"},{\"_id\":\"qfAvihoTKivTuzapt\",\"language\":\"javascript\"},{\"_id\":\"Ns4Sjh7KK58ofAph8\",\"language\":\"python3\"},{\"_id\":\"niYYoLrvgkwXF3jcu\",\"language\":\"ruby\"}]}}"]