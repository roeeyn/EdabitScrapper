a["{\"msg\":\"result\",\"id\":\"341\",\"result\":{\"_id\":\"3mCJ3idbMqueRTa7b\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"public class Challenge {\\n\\tpublic static String[] filterStateNames(String[] arr, String type) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.4866920152091254,\"familyId\":\"Rnnsx2mGNDFvjmWDN\",\"instructions\":\"Create a function that filters out an array of state names into two categories based on the second parameter.\\n\\n1. Abbreviations `abb`\\n2. Full names `full`\\n\\n### Examples\\n```\\nfilterStateNames([\\\"Arizona\\\", \\\"CA\\\", \\\"NY\\\", \\\"Nevada\\\"], \\\"abb\\\")\\n➞ [\\\"CA\\\", \\\"NY\\\"]\\n\\nfilterStateNames([\\\"Arizona\\\", \\\"CA\\\", \\\"NY\\\", \\\"Nevada\\\"], \\\"full\\\")\\n➞ [\\\"Arizona\\\", \\\"Nevada\\\"]\\n\\nfilterStateNames([\\\"MT\\\", \\\"NJ\\\", \\\"TX\\\", \\\"ID\\\", \\\"IL\\\"], \\\"abb\\\")\\n➞ [\\\"MT\\\", \\\"NJ\\\", \\\"TX\\\", \\\"ID\\\", \\\"IL\\\"]\\n\\nfilterStateNames([\\\"MT\\\", \\\"NJ\\\", \\\"TX\\\", \\\"ID\\\", \\\"IL\\\"], \\\"full\\\")\\n➞ []\\n```\\n\\n### Notes\\nState abbreviations will always be in uppercase.\",\"lab\":\"import static org.hamcrest.core.Is.is;\\nimport org.junit.Test;\\nimport static org.junit.Assert.assertThat;\\n\\npublic class ChallengeTests {\\n\\t@Test \\n\\tpublic void test1() {\\n\\t\\tassertThat(Challenge.filterStateNames(new String[]{\\\"Arizona\\\", \\\"CA\\\", \\\"NY\\\", \\\"Nevada\\\"}, \\\"abb\\\"), is(new String[]{\\\"CA\\\", \\\"NY\\\"}));\\n\\t}\\n\\t\\n\\t@Test \\n\\tpublic void test2() {\\n\\t\\tassertThat(Challenge.filterStateNames(new String[]{\\\"Arizona\\\", \\\"CA\\\", \\\"NY\\\", \\\"Nevada\\\"}, \\\"full\\\"), is(new String[]{\\\"Arizona\\\", \\\"Nevada\\\"}));\\n\\t}\\n\\t\\n\\t@Test \\n\\tpublic void test3() {\\n\\t\\tassertThat(Challenge.filterStateNames(new String[]{\\\"MT\\\", \\\"NJ\\\", \\\"TX\\\", \\\"ID\\\", \\\"IL\\\"}, \\\"abb\\\"), is(new String[]{\\\"MT\\\", \\\"NJ\\\", \\\"TX\\\", \\\"ID\\\", \\\"IL\\\"}));\\n\\t}\\n\\t\\n\\t@Test \\n\\tpublic void test4() {\\n\\t\\tassertThat(Challenge.filterStateNames(new String[]{\\\"MT\\\", \\\"NJ\\\", \\\"TX\\\", \\\"ID\\\", \\\"IL\\\"}, \\\"full\\\"), is(new String[]{}));\\n\\t}\\n\\t\\n\\t@Test \\n\\tpublic void test5() {\\n\\t\\tassertThat(Challenge.filterStateNames(new String[]{\\\"Montana\\\", \\\"FL\\\"}, \\\"abb\\\"), is(new String[]{\\\"FL\\\"}));\\n\\t}\\n\\t\\n\\t@Test \\n\\tpublic void test6() {\\n\\t\\tassertThat(Challenge.filterStateNames(new String[]{\\\"Montana\\\", \\\"FL\\\"}, \\\"full\\\"), is(new String[]{\\\"Montana\\\"}));\\n\\t}\\n}\",\"language\":\"java\",\"summary\":\"Create a function that filters out an array of state names into two categories based on the second parameter.\\n\\nAbbreviations abb\\nFull names full\\n\\nExamples\\nfilterStateNames([\\\"Arizona\\\", \\\"CA\\\", \\\"NY\\\", \\\"Nevada\\\"], \\\"abb\\\")\\n➞ [\\\"CA\\\", \\\"NY\\\"]\\n\\nfilterStateNames([\\\"Arizona\\\", \\\"CA\\\", \\\"NY\\\", \\\"Nevada\\\"], \\\"full\\\")\\n➞ [\\\"Arizona\\\", \\\"Nevada\\\"]\\n\\nfilterStateNames([\\\"MT\\\", \\\"NJ\\\", \\\"TX\\\", \\\"ID\\\", \\\"IL\\\"]\",\"tags\":[\"arrays\",\"formatting\",\"loops\"],\"timestamp\":{\"$date\":1555826117046},\"title\":\"State Names and Abbreviations\",\"stats\":{\"completed\":{\"total\":306,\"ratings\":[1,1,1,1,1,1,1,1,1,1,0,1,0,3,2,1,1,1,0,1,1,1,1,1,2,1,0,1,1,0,1,1,1,1,1,1,2,1,1,2,1,1,1,0,1,1,5,2,1,1,1,0,0,1,1,1,1,1,2,2,3,3,2,2,2,1,1,2,2,2,2,2,2,2,0,2,2,2,2,0,0,3,2,1,2,1,1,3,2,2,2,2,1,1,2,3,2,2,1,3,1,3,2,2,2,1,2,1,2,1,1,1,0,2,1,2,1,2,1,2,0,2,1,1,2,2,2,2,2,1,2,0,2,0,0,2,0,1,1,2,1,2,1,2,2,3,2,1,1,0,1,2,1,2,2,2,3,2,1,1,1,2,2,2,1,1,1,1,0,1,2,1,2,1,2,1,2,2,2,2,1,2,2,1,0,0,2,2,1,2,2,1,0,2,2,2,2,1,2,2,2,2,2,2,2,2,2,1,2,2,0,1,2,3,1,2,2,3,2,1,2,1,2,1,2,2,2,2,2,2,2,1,1,2,1,1,2,2,2,2,2,0,5,1,0,2,2,1,2,2,0,2,2,1,3,2,1,2,2,1,2,2,2],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"erJWHqarGkGtPJ3C4\",\"34rKGZYu7vEdoCu7d\",\"yJyjT7Z2PPQmzzWpP\",\"zxS5WJMC7WnSXod9f\",\"u437YTqDGSjh49fsY\",\"5znpaFDoToJtAtF3h\",\"vew4EJaM4jGBsvnTp\",\"ydos8Ba8nZdYRNJpS\",\"QS5RGoPnapStFD5Gi\",\"CDkkdvDdqjDihTcFS\",\"veu3fKkK2DSkKTkb2\",\"cp3X8hk8yNME7qoD9\",\"yhk8G8cM3p9JAbfJN\",\"JSSLvJPs8JebyfeS9\",\"WAMxBrgasiphg5QPL\",\"ZzwR8m8Q6Gozo9ofz\",\"a49eNnfRwSMxsDJXf\",\"aMNhTh35QQAs33ycQ\",\"LTHCxsdjqzXpaXShT\",\"vRXuYYBNuHEQ29fbm\",\"H5QAneaQBQvpHrmmh\",\"o5H3aMNucmwhnsWdL\",\"Yohr2MmAyaWGMbB35\",\"FocLpCB2WEiK2gGni\",\"2oiE6qHMbW3cv7N74\",\"KBnNisBF9FoPJDGL6\",\"gBGjCfJvPHswDM5JQ\",\"3pdgguqZgNDSAJSGm\",\"sxci7DYKNa6q22Sjq\",\"9c8n7ti5vCjTRgiGN\",\"XWQLorHT57NA3NTq3\",\"t2kdBPj9qQAXY2Ehd\",\"vMXAzjzvfPaM6NejG\",\"3gxJoNp59B4eoyyed\",\"phA6MomRzh9oz3eqn\",\"cG4PEDMMx8jXhWP8T\",\"teCeoNkdeQEciPZ7H\",\"Ha5J49rhojBRy3BaM\",\"vrAjiLqKjwRddHMSR\",\"8rF6PHMSaybTDsvXr\",\"sb7Nh56pPFtPxLogT\",\"ZBDiEMi7dbjRL55LB\",\"jNcwk4jksmPTcAoTu\",\"79ZbLzp7xepvkonoh\",\"ghRADkBcGb85dhmva\",\"ZiozQXopCXKLkQMfC\",\"6TDEhHv3uQCZLQeiH\",\"8gJEpXHctGqC9ngcJ\",\"WPWBKqdkzkeGpgFR2\",\"qjh9QdweLqQDP9NHP\",\"CLmJduqJHX83dM4Pd\",\"3KjxQu9RZ8ZSywvLz\",\"8JyqsSbN2FJXPr3cw\",\"bk6Sjnh52qNCYNggH\",\"u4yanfWeeZsN3xWgc\",\"J9zJq7PMGb6mqzcHW\",\"qx9XHErKygcLiFGhX\",\"C9yBWYcZsjmJYww3K\",\"AyrEvM2GLX2jqM772\",\"ggRcNtx4xeRC2jmbZ\",\"HsFc9PgmpP2X9Fwh9\",\"qb2DTmzQj4vNfq5K7\",\"r9hHZYPQAqJ9DbwLX\",\"YF79LnTdprobbYY5v\",\"RJCTFJ9rdPrJQqxQT\",\"wCEJH8izAm2FcMbge\",\"awiewYXm9GR6zsqhp\",\"qLFYM4DTaQe9mDq6C\",\"dq4BrC2PGLuisiT9J\",\"BjnJ9t2C42SG7mYx5\",\"3cc7EvHazE8bbZFG5\",\"jhoZyJtWj7sy7YYjj\",\"n8jm3w32BSJW8GMBp\",\"i5QeAsrM4m6hzPTku\",\"yK7zzK2aGJwuWKHRL\",\"izbnbqmdaXH88jzTw\",\"Zxna6SCXWtvWuLuPs\",\"W347YkKWzfvMbkuHr\",\"2cdvd8yuPLSwvGj9w\",\"2LXLQCrwb5iaKGgZG\",\"nXEg9buBEisxp8mZ3\",\"ngRNQYczN4QJ2tDN8\",\"A7FTLhsxW9T4MiztP\",\"jDuY4gx4aJRp8SHbm\",\"cfi8jhhSJ3Nq2gvqf\",\"e4634dMuMNdf2S5ej\",\"YLqdr7bYjwew2KM4N\",\"B44GPum6opvNWXxCL\",\"9gJsF5apWJGWZJprn\",\"Ytye5oMhk6r5aaBvg\",\"kSKC3z8uoSnpJ8kAT\",\"Xbf4MXGxT6xkmDt2X\",\"eXW8reZCCZHQzJjQi\",\"heqZodGeGNNQW5wbv\",\"Lw8oRc5SERsuntXMo\",\"mRwxbzaBc4Fg5q9Hw\",\"bsXDWXhsuqgaZYCCv\",\"8km4NQkcofNuCy7jH\",\"HRN2aFfZEXorfrAGH\",\"JFodQijHHdRkkrZvT\",\"Es4eX2stRpyoXeC7f\",\"cjxsqXfkAPoadmppi\",\"wYYMNPe8nSiJFbvJw\",\"toZsDEaLL7ptnFskQ\",\"czBMGh6eheGuZTCgX\",\"xEuitW7gMaqzhq6x8\",\"5Kf9z3G9QBs9fkvLs\",\"wbSLghDxkTjiYJrEH\",\"jRqY4i8gPemsZMBGf\",\"gGnDsJz5hr2t9MKCF\",\"fbYN9Jp46RqBqCd2K\",\"j2hKJg9sh9m3HWFgo\",\"ML7bZJrM8gfGQJBJt\",\"ed3kvX7hGA42MET9x\",\"fiGvm9C6Pjir3Hb4B\",\"HZEHKBXMfRvQE4hvK\",\"FSSM3xcaTXGcxqYGz\",\"jmQSPJj4eTmaEYqs2\",\"Ags8dYCvvDAanA38Y\",\"eJxMBZBhiHyJYWkH2\",\"vsCr2J4yakyFov2eQ\",\"mdEQJ2fmGmkbhbvNw\",\"2DP9ho5CnBPwmNXGm\",\"8J2Dqqz9PaFufQzwY\",\"fZjkX29nhRTWWb75k\",\"TrquEHytntLKHA4m2\",\"mt4kmXdCCGcbatAaZ\",\"etoSR23iELGGgs9rA\",\"YLwJkF2wuL3n9o6a2\",\"Ctuq7Wc8QPQmzwPK3\",\"82weQfHHmno4Mq4X7\",\"Kso7rzAKB4TTCPKgM\",\"hB5mgzMwQSnhBzi7P\",\"ZqjP4M6dzu32To33K\",\"mfm3gB39arY8Rjb2y\",\"zRWb34MTxTJ7oiNr8\",\"M3sPbyvBvjTu8Nga8\",\"5seiNqw6ZXoF2GRRd\",\"yv7c4H2jimSKHEjtG\",\"jyoLggHk8xQKZuoQC\",\"GEzaJZ2cPjENT4ERQ\",\"uYv96ZSpA7tBHoAGX\",\"Wf7nCHS4Gq5tx659h\",\"ePzmFoJvWZQ8MoNGg\",\"Y8fG59oLxqYKDNSsH\",\"csRoCgJx5NBJzW8pX\",\"8zZ6xmzpiFair25qr\",\"c7sE7kceskbYy3KmA\",\"B4pxRqzo43M7S8FbP\",\"gDy7tg5NuCLbPaoiT\",\"WZujpe8yQAyZmpWHg\",\"6ZxpGyg7iviX9cPAy\",\"5jA4oM6nTfkjEzcvh\",\"JDB6AaW7uK4Hak2XZ\",\"rwETZ6XCNoHCEyB66\",\"Yp7uvStL97cC9fKkY\",\"htXCitorobtqYymjN\",\"DePiAS7u5Pk9d6SLr\",\"oMLSgpSFQnY4ui8cB\",\"y6kfyYmydcD8tkBk7\",\"XGAQTTa6CGePQrAqx\",\"ABNKZyZuZJnNMvy5j\",\"Yom3RzkMYpweE8cbS\",\"meS77LKqRswhF5LAy\",\"dcW9oK2uRo8h8mBe2\",\"xYhWQsAiu4QiyjGMx\",\"DzvdGwHEjqsX7wyKr\",\"LTxPfYyzLtPRZhFvR\",\"DkSMZ3jZLkwviKb9g\",\"LHJFnB3x2tX2gcnGW\",\"dpJTai3i9aNkCS3sa\",\"P7zedbjaFw8YDzLz7\",\"qG7wePQ3aoXZZTqXY\",\"q2tzvkrLASvSjkek9\",\"zwruFCmuHkwJTpYqg\",\"pBMXMQem6BpSeooYT\",\"imoNrk36ozReP939p\",\"rvojHhKH3DaxotefQ\",\"sSLCfQq6WTHJnpKF8\",\"5WQZzuHZBGqFeNQi3\",\"MCw7uAcoWcSTBTmr3\",\"muXMnzQwGLzN6j2Jr\",\"g4NCSxxHqHCGMpWwT\",\"xeYtKtzKFm5RvEXMr\",\"QnMJpQ9efTeuR7uiG\",\"yq8AdBRsz62BJvY8y\",\"MNpQzm8CBniECBqsr\",\"Fd9765rksgPK4E2Zy\",\"H5sfMFuQo6yHE8GFL\",\"Moa2JSbg9NjdbcAoG\",\"k2tXkx7AyX77tQDRo\",\"AeJSxRqw2dJZuGvdk\",\"YFHkjbM6obMSj24zi\",\"KCEsMas5BbmiD2Q9K\",\"yXGiiSAR5nBHnH3yr\",\"fRYcPHuyEdqngMzC4\",\"gXTAie79kiw28tx5u\",\"thA79neuEcM3J8ZHr\",\"yd5PakB2z33q2JrTZ\",\"Tf7TJFSPktJBgLA4k\",\"oMfq73A434YWhSuWQ\",\"mG8HqKiAQFTdRZthG\",\"P5BhjZxyeHQYTNyB9\",\"jXTnL3JatkKjoifyb\",\"8Xx8nWXRydHDBGfQf\",\"hDeaTsprkH6CmvSAR\",\"unNqQjSHzkb4pCzEu\",\"tyLS9T6YMfg9fMtYJ\",\"qJ2TgHitgMYZRTZ5d\",\"s5qoCq4dYbkHcYxyz\",\"mQKWauR6b252TmdX4\",\"hD6sfDtntpqT8NR2o\",\"W56bWmpQeLJ9JEDsa\",\"a777e8chPvJkY3tKa\",\"pi76g3eRpnKrhee2a\",\"RGN3QTb5LXj4ZPPkj\",\"mFfahhFdaoQPkzYdh\",\"9AW9qZKgc8Qx2kYAP\",\"ny3kQWx7tvRLaHmfh\",\"9vyjn4WyWtJ6o2wop\",\"sWmadTuC9PXGQ7chv\",\"GkYtSbQuheBF4Enys\",\"uFfEio8nzDvL8emhp\",\"bur3yQ8s34zqKGEro\",\"wB47dmNBe3aFZZcFr\",\"Po3v3dHCk6wYGKMwi\",\"eQXwk5zGckM8tCWYH\",\"Gkt24LnG4KBrd2AfK\",\"aeAFR9PHsy8hzchuA\",\"p8qqFdJ3FSk5x9z3G\",\"buX4mCQhtXCfBjeno\",\"QRv96jmNaYsWkxQEG\",\"zZfMwLuoERGmybgib\",\"8qNSPHZBpmjSTt3tH\",\"hhxjQREtmHSheH9Pj\",\"drAAhaSiMncZ2XcAk\",\"nHj7SC5cnmkTApbgY\",\"a6fgDQTddtZCKfnzR\",\"4ySzqKC5s3ZRpG9di\",\"3SgSNoAB3sxaYeT3w\",\"xEX3TDY6C2h82dJTn\",\"tWhHwTd6SZeoZdbNu\",\"ST9SLqmhXKemBMeXP\",\"c7uBxu2rgY77H5d79\",\"dQXE857oKWAcbD6xh\",\"BnaE25vvCGcfL3jiQ\",\"HXbTKW3jmmyRAsKrr\",\"wFRLGjA56kj7xyhmv\",\"uw47663LqPME8btaA\",\"rhS8qXRjZcpDXkwnE\",\"njdThwiLCKhH246r2\",\"TKHmoBXKsWySF8rT3\",\"QD7mPMD8gmTP56nPv\",\"yaZ7HC2tKbtCwqzNv\",\"srJ34BaybkQh3qRkM\",\"563onSvqgjToY79ah\",\"xC9XKgdhp9AqDYngr\",\"NzachEhFbHfoBqmzS\",\"4za87fFyw9qxkD936\",\"SNLHryxfRzMtHdKXW\",\"jCjCvyhqhpebkJn34\",\"J7epB3qSQJ2E8vWkY\",\"2NJZbusRvu3eJ4tHu\",\"KMR6vNzvSKMA2cXnK\",\"TueTBSgyZrKfr9SnK\",\"xW9nC9h6p77YT2iso\",\"SxWfaNpkxLLcSuZFk\",\"unqzSsxpxj9sZ7rbD\",\"WwnKMv7DmsbAKimhS\",\"EKBHs6uxpPgxvWKir\",\"HFwFdesvEt7GL47wd\",\"AeSmk2XWGcTLHB7PJ\",\"DZvz6WY5bQEneYzvv\",\"mhBMMvTFLTTcKdtdv\",\"FxPDKKibxnZjGJLs6\",\"XH6378Zm3WBm679yx\",\"nFbmNzMQ38TncmfQX\",\"Qv2jEtTnFCXX7cdd3\",\"5HGyJtoZ3AffzAZAv\",\"ckQwFFWyLXmDQAaCn\"],\"quality\":[4,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,4,5,5,5,3,5,5,5,3]},\"tests\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.7407407407407405,\"family\":[{\"_id\":\"9ugiNEhBmxSyDSPMW\",\"language\":\"cpp\"},{\"_id\":\"3mCJ3idbMqueRTa7b\",\"language\":\"java\"},{\"_id\":\"8fnEAEj5vKNqAXNYA\",\"language\":\"javascript\"},{\"_id\":\"wmxzd6C8CSsEDw8P4\",\"language\":\"php\"},{\"_id\":\"jB3EBCxPmHXYakNJu\",\"language\":\"python3\"},{\"_id\":\"2qGpJ3kSvAoESDmvZ\",\"language\":\"ruby\"},{\"_id\":\"WonK2fiQ3EjPkkMEd\",\"language\":\"swift\"}]}}"]