a["{\"msg\":\"result\",\"id\":\"385\",\"result\":{\"_id\":\"w9mNwtPZX7qimRzJr\",\"author\":\"bangyen\",\"authorId\":\"yv7c4H2jimSKHEjtG\",\"code\":\"public class Program {\\n\\tpublic static String decimator(String s) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.507936507936508,\"quality\":5,\"familyId\":\"Mz6YRWn8tbKn2Zz2K\",\"instructions\":\"Write a **_DECIMATOR_** function which takes a string and **_decimates_** it (i.e. it removes the last 1/10 of the characters).\\n\\n_Always round up_: if the string has 21 characters, 1/10 of the characters would be 2.1 characters, hence the **_DECIMATOR_** removes 3 characters. The **_DECIMATOR_** shows no mercy!\\n\\n### Examples\\n```\\ndecimator(\\\"1234567890\\\") ➞ \\\"123456789\\\"\\n// 10 characters, removed 1.\\n\\ndecimator(\\\"1234567890AB\\\") ➞ \\\"1234567890\\\"\\n// 12 characters, removed 2.\\n\\ndecimator(\\\"123\\\") ➞ \\\"12\\\"\\n// 3 characters, removed 1.\\n\\ndecimator(\\\"123456789012345678901\\\") ➞ \\\"123456789012345678\\\"\\n// 21 characters, removed 3.\\n```\\n\\n### Notes\\nMake sure to remove characters from the end of the string.\",\"isHidden\":false,\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertThat;\\nimport static org.hamcrest.core.Is.is;\\n\\npublic class ProgramTest {\\n\\t@Test\\n\\tpublic void test1() {\\n\\t\\tassertThat(Program.decimator(\\\"1234567890\\\"), is(\\\"123456789\\\"));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test2() {\\n\\t\\tassertThat(Program.decimator(\\\"1234567890AB\\\"), is(\\\"1234567890\\\"));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test3() {\\n\\t\\tassertThat(Program.decimator(\\\"123\\\"), is(\\\"12\\\"));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test4() {\\n\\t\\tassertThat(Program.decimator(\\\"123456789012345678901\\\"), is(\\\"123456789012345678\\\"));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test5() {\\n\\t\\tassertThat(Program.decimator(\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\\\"), is(\\\"ABCDEFGHIJKLMNOPQRSTUVW\\\"));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test6() {\\n\\t\\tassertThat(Program.decimator(\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\\\"), is(\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrst\\\"));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test7() {\\n\\t\\tassertThat(Program.decimator(\\\"A\\\"), is(\\\"\\\"));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test8() {\\n\\t\\tassertThat(Program.decimator(\\\"\\\"), is(\\\"\\\"));\\n\\t}\\n}\",\"language\":\"java\",\"summary\":\"Write a DECIMATOR* function which takes a string and decimates* it (i.e. it removes the last 1/10 of the characters).\\n\\nAlways round up: if the string has 21 characters, 1/10 of the characters would be 2.1 characters, hence the DECIMATOR* removes 3 characters. The DECIMATOR* shows no mercy!\\n\\nExamples\\ndecimator(\\\"1234567890\\\") ➞ \\\"123456789\\\"\\n// 10 characters, remov\",\"tags\":[\"strings\",\"language_fundamentals\"],\"timestamp\":{\"$date\":1600627732853},\"title\":\"The DECIMATOR\",\"stats\":{\"completed\":{\"total\":64,\"ratings\":[1,1,1,1,1,1,2,2,2,1,2,2,2,2,2,2,0,2,3,2,2,1,1,2,1,2,0,2,1,1,2,2,1,2,1,1,2,2,0,2,1,1,1,2,0,2,2,2,0,2,2,1,1,1,3,1,2,2,2,1,2,2,2],\"quality\":[5,5],\"rators\":[\"yv7c4H2jimSKHEjtG\",\"QiMQpf3JTEN2wnfNr\",\"qaPjAANdnxFnWfj5d\",\"gSmf26ac9rrmXLxwN\",\"yd5PakB2z33q2JrTZ\",\"ohsJnyfLcGDCWzEWM\",\"YFHkjbM6obMSj24zi\",\"H5sfMFuQo6yHE8GFL\",\"rvojHhKH3DaxotefQ\",\"azAzSkvJd7eyXY9x9\",\"Es4eX2stRpyoXeC7f\",\"vRXuYYBNuHEQ29fbm\",\"yXGiiSAR5nBHnH3yr\",\"DzvdGwHEjqsX7wyKr\",\"gXTAie79kiw28tx5u\",\"TrquEHytntLKHA4m2\",\"etoSR23iELGGgs9rA\",\"jb9RLyyuo565bKDzN\",\"C9yBWYcZsjmJYww3K\",\"8Xx8nWXRydHDBGfQf\",\"jXTnL3JatkKjoifyb\",\"AeJSxRqw2dJZuGvdk\",\"mQKWauR6b252TmdX4\",\"QTJvghkPpGKnKvZ5R\",\"RGN3QTb5LXj4ZPPkj\",\"a49eNnfRwSMxsDJXf\",\"82weQfHHmno4Mq4X7\",\"bur3yQ8s34zqKGEro\",\"buX4mCQhtXCfBjeno\",\"DkSMZ3jZLkwviKb9g\",\"4ySzqKC5s3ZRpG9di\",\"rhS8qXRjZcpDXkwnE\",\"sxci7DYKNa6q22Sjq\",\"mfm3gB39arY8Rjb2y\",\"srJ34BaybkQh3qRkM\",\"xEX3TDY6C2h82dJTn\",\"p6tGJ9dN7HZQipR2B\",\"J9zJq7PMGb6mqzcHW\",\"jCjCvyhqhpebkJn34\",\"wFRLGjA56kj7xyhmv\",\"563onSvqgjToY79ah\",\"J7epB3qSQJ2E8vWkY\",\"PJu3WcTpfRrvHfQiS\",\"rWhXHhzF4W8bea6LP\",\"KMR6vNzvSKMA2cXnK\",\"B4pxRqzo43M7S8FbP\",\"bX6tpTCjwoi6XMMbK\",\"CHuC8mjQLn2KJxZSz\",\"SE5G2Caf3btnuGmz6\",\"dCNJAT6r8CDuobBi8\",\"hhxjQREtmHSheH9Pj\",\"rcTKkjD4JqfJ7XBx2\",\"qnjc3QMTkLrHpFPkp\",\"qavdBEFYeCuSHQrN5\",\"SxWfaNpkxLLcSuZFk\",\"unqzSsxpxj9sZ7rbD\",\"FxPDKKibxnZjGJLs6\",\"G3hPZva3ZSsr3baPc\",\"uw47663LqPME8btaA\",\"XH6378Zm3WBm679yx\"]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"family\":[{\"_id\":\"yH4dqsBbvHB84SmTW\",\"language\":\"cpp\"},{\"_id\":\"w9mNwtPZX7qimRzJr\",\"language\":\"java\"},{\"_id\":\"qabZCHGmuTak57C7h\",\"language\":\"javascript\"},{\"_id\":\"LLJ2PoZ4ea5hyAeTp\",\"language\":\"python3\"},{\"_id\":\"kmrBRZiaN8hRfhKyS\",\"language\":\"ruby\"}]}}"]