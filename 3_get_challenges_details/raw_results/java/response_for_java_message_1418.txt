a["{\"msg\":\"result\",\"id\":\"269\",\"result\":{\"_id\":\"S6ScbuTciqryqTAAg\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class Averages {\\n  public static int trimmedAverages(int[] arr) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":1.1323529411764706,\"familyId\":\"ptNr6WYWcYTCWmEQ7\",\"instructions\":\"Given an array of numbers, remove the largest and smallest numbers, and calculate the average of the remaining numbers.\\n\\n### Examples\\n```\\ntrimmedAverages([4, 5, 7, 100]) ➞ 6\\n// Average of 5 and 7\\n\\ntrimmedAverages([10, 25, 5, 15, 20]) ➞ 15\\n// Average of 10, 15 and 20\\n\\ntrimmedAverages([1, 1, 1]) ➞ 1\\n// 1\\n\\ntrimmedAverages([5, 4, 54, 4, 6, 46, 56]) ➞ 23\\n```\\n\\n### Notes\\n* Round to the nearest whole number.\\n* Array size is always greater than two.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"import static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class AveragesTest {\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertEquals(6, Averages.trimmedAverages(new int[] {4, 5, 7, 100}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertEquals(15, Averages.trimmedAverages(new int[] {10, 25, 5, 15, 20}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertEquals(1, Averages.trimmedAverages(new int[] {1, 1, 1}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertEquals(8, Averages.trimmedAverages(new int[] {14, 8, 8}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertEquals(18, Averages.trimmedAverages(new int[] {18, 19, 13}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertEquals(17, Averages.trimmedAverages(new int[] {18, 16, 20, 18, 3}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertEquals(13, Averages.trimmedAverages(new int[] {10, 15, 15, 11}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertEquals(9, Averages.trimmedAverages(new int[] {4, 12, 4, 17, 11}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test09() { \\n\\t\\tassertEquals(10, Averages.trimmedAverages(new int[] {9, 1, 11, 8, 15, 20, 5}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test10() { \\n\\t\\tassertEquals(12, Averages.trimmedAverages(new int[] {13, 10, 13, 6}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test11() { \\n\\t\\tassertEquals(23, Averages.trimmedAverages(new int[] {5, 4, 54, 4, 6, 46, 56}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test12() { \\n\\t\\tassertEquals(187, Averages.trimmedAverages(new int[] {4, 6, 46, 466, 4666, 5, 54, 544}));\\n\\t}\\n}\\n// credit goes to the original author/publisher @Joshua Señoron\",\"language\":\"java\",\"quality\":0,\"summary\":\"Given an array of numbers, remove the largest and smallest numbers, and calculate the average of the remaining numbers.\\n\\nExamples\\ntrimmedAverages([4, 5, 7, 100]) ➞ 6\\n// Average of 5 and 7\\n\\ntrimmedAverages([10, 25, 5, 15, 20]) ➞ 15\\n// Average of 10, 15 and 20\\n\\ntrimmedAverages([1, 1, 1]) ➞ 1\\n// 1\\n\\ntrimmedAverages([5, 4, 54, 4, 6, 46, 56]) ➞ 23\\n\\nNotes\\nRound to th\",\"tags\":[\"numbers\",\"math\",\"arrays\"],\"timestamp\":{\"$date\":1611941220970},\"title\":\"Trimmed Averages\",\"stats\":{\"completed\":{\"total\":69,\"ratings\":[1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,2,1,0,3,3,1,3,1,2,0,1,1,0,0,1,1,2,1,2,1,0,0,1,2,2,1,2,1,1,0,0,2,2,2,1,2,1,1,1,1,2,2,1,2,1,1,1,1,1,0,1,1],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"3wbKmPnbMN2kSBH9C\",\"AeJSxRqw2dJZuGvdk\",\"hhxjQREtmHSheH9Pj\",\"Es4eX2stRpyoXeC7f\",\"btabi3PdyisuY5tn9\",\"J7epB3qSQJ2E8vWkY\",\"3SgSNoAB3sxaYeT3w\",\"a49eNnfRwSMxsDJXf\",\"HCfkcKnPs9mrJojdG\",\"gBGjCfJvPHswDM5JQ\",\"QRv96jmNaYsWkxQEG\",\"uFfEio8nzDvL8emhp\",\"F6uPamHcym9CAqYzg\",\"82weQfHHmno4Mq4X7\",\"bastxCiPF9Wwtxwpb\",\"E2hpke7mHxAWsw5t9\",\"NXtM3si2K3i4DySMn\",\"DzvdGwHEjqsX7wyKr\",\"zZfMwLuoERGmybgib\",\"Cm6t76Nv4oKi2XJ3M\",\"buX4mCQhtXCfBjeno\",\"jyoLggHk8xQKZuoQC\",\"a6fgDQTddtZCKfnzR\",\"xEX3TDY6C2h82dJTn\",\"t55QWHi8o4teZxqqE\",\"5TxFhQLhSDTc27kxH\",\"n56fSrEky889XGAh9\",\"4ySzqKC5s3ZRpG9di\",\"2WuqQ3juvMgmzgwwY\",\"ABoPZydPJsPAHXgiH\",\"DnSsxCHZLXRPh66ZJ\",\"GaJNJwcdyB9ueYFst\",\"khdCaD6AGBiR6txLQ\",\"SgPjF69J25jT3dn4X\",\"fLCBouCB9qT4DRLEz\",\"tdinF6MRzC6AdNX8g\",\"P9iAdQpAKG8JKEaGp\",\"c7uBxu2rgY77H5d79\",\"HXbTKW3jmmyRAsKrr\",\"vRXuYYBNuHEQ29fbm\",\"sxci7DYKNa6q22Sjq\",\"ivwcFTPLxBixotu2F\",\"TCvpT4EPb8qNssNB7\",\"C9yBWYcZsjmJYww3K\",\"rhS8qXRjZcpDXkwnE\",\"pYonfGP4u9HNL9Z32\",\"XaK5PzFcConAq9WXJ\",\"uw47663LqPME8btaA\",\"srJ34BaybkQh3qRkM\",\"jCjCvyhqhpebkJn34\",\"cR3ibTMxLyEdDFCHY\",\"htXCitorobtqYymjN\",\"B4pxRqzo43M7S8FbP\",\"wFRLGjA56kj7xyhmv\",\"KMR6vNzvSKMA2cXnK\",\"GDNsAq2snvJuwFa88\",\"rWhXHhzF4W8bea6LP\",\"unqzSsxpxj9sZ7rbD\",\"nSLvkGEpiYCtcBLaa\",\"nFbmNzMQ38TncmfQX\",\"ckQwFFWyLXmDQAaCn\",\"3Gf7ikLijfoxabiPY\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"5MLiWEQqEQtHNuN38\",\"language\":\"cpp\"},{\"_id\":\"S6ScbuTciqryqTAAg\",\"language\":\"java\"},{\"_id\":\"pDc7MLcGYzhCW6wRf\",\"language\":\"javascript\"},{\"_id\":\"joabH4RNigjkt6AWY\",\"language\":\"php\"},{\"_id\":\"3yPvbEjskPuuSSCAC\",\"language\":\"python3\"},{\"_id\":\"gEuPXocTbAgb5i3Yq\",\"language\":\"ruby\"}]}}"]