a["{\"msg\":\"result\",\"id\":\"757\",\"result\":{\"_id\":\"kJpXCjfuWjpLGdc5g\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n\\tpublic static String correctTitle(String str) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":2.943396226415094,\"familyId\":\"AquXE888ENJLKzmg4\",\"instructions\":\"Write a function that takes a string and returns a string with the correct case for character titles in the Game of Thrones series.\\n- The words `and`, `the`, `of` and `in` should be lowercase.\\n- All other words should have the *first* character as uppercase and the rest lowercase.\\n\\n### Examples\\n```\\ncorrectTitle(\\\"jOn SnoW, kINg IN thE noRth.\\\")\\n➞ \\\"Jon Snow, King in the North.\\\"\\n\\ncorrectTitle(\\\"sansa stark, lady of winterfell.\\\")\\n➞ \\\"Sansa Stark, Lady of Winterfell.\\\"\\n\\ncorrectTitle(\\\"TYRION LANNISTER, HAND OF THE QUEEN.\\\")\\n➞ \\\"Tyrion Lannister, Hand of the Queen.\\\"\\n```\\n\\n### Notes\\n- Punctuation and spaces must remain in their original positions.\\n- Hyphenated words are considered *separate* words.\\n- Be careful with words that contain `and`, `the`, `of` or `in`.\\n- See the **Resources** tab for more info on the various JavaScript string methods.\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(\\\"Sansa Stark, Lady of Winterfell.\\\", Challenge.correctTitle(\\\"sansa stark, lady of winterfell.\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(\\\"Lord Eddard Stark, Hand of the King.\\\", Challenge.correctTitle(\\\"lord eddard stark, hand of the king.\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(\\\"Jaime Lannister, Lord Commander of the Kingsguard.\\\", Challenge.correctTitle(\\\"jaime lannister, lord commander of the kingsguard.\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(\\\"Varys, Master of Whisperers.\\\", Challenge.correctTitle(\\\"varys, master of whisperers.\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(\\\"Doran Martell, Prince of Dorne, Lord of Sunspear.\\\", Challenge.correctTitle(\\\"doran martell, prince of dorne, lord of sunspear.\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(\\\"Tyrion Lannister, Hand of the Queen.\\\", Challenge.correctTitle(\\\"TYRION LANNISTER, HAND OF THE QUEEN.\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(\\\"Grand Maester Pycelle.\\\", Challenge.correctTitle(\\\"GRAND MAESTER PYCELLE.\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n    assertEquals(\\\"Euron Greyjoy, King of the Iron Islands, Lord Reaper of Pyke.\\\", Challenge.correctTitle(\\\"EURON GREYJOY, KING OF THE IRON ISLANDS, LORD REAPER OF PYKE.\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test9() {\\n    assertEquals(\\\"Petyr Baelish, Lord Protector of the Vale.\\\", Challenge.correctTitle(\\\"PETYR BAELISH, LORD PROTECTOR OF THE VALE.\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test10() {\\n    assertEquals(\\\"Mance Rayder, King-Beyond-the-Wall.\\\", Challenge.correctTitle(\\\"MANCE RAYDER, KING-BEYOND-THE-WALL.\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test11() {\\n    assertEquals(\\\"Jon Snow, King in the North.\\\", Challenge.correctTitle(\\\"jOn SnoW, kINg IN thE noRth.\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test12() {\\n    assertEquals(\\\"Jeor Mormont, Lord Commander of the Night's Watch.\\\", Challenge.correctTitle(\\\"Jeor MORMONT, Lord COMMANDER of the NIGHT'S WATCH.\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test13() {\\n    assertEquals(\\\"Cersei Lannister, Queen of the Andals and the First Men, Protector of the Seven Kingdoms.\\\", Challenge.correctTitle(\\\"cERSei LANnIStEr, QuEEn Of the aNdals and THE fIRSt men, PROtecTOR OF tHe SEVEN KInGdOmS.\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test14() {\\n    assertEquals(\\\"Daenerys Stormborn of House Targaryen, the First of Her Name, Queen of the Andals and the First Men, Protector of the Seven Kingdoms, the Mother of Dragons, the Khaleesi of the Great Grass Sea, the Unburnt, the Breaker of Chains.\\\", Challenge.correctTitle(\\\"DAeneRYS StOrmboRn oF hOuse TARGARYEn, ThE FirsT OF HER naMe, QUeEn OF The ANdAlS And THe FirsT mEN, PROtECtOr Of tHE SEven KinGDOmS, The MoTHeR of DrAGONS, thE KhALeEsi oF THE GReAt gRAss sEa, The UnburNT, The BReakEr of cHAInS.\\\"));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"Write a function that takes a string and returns a string with the correct case for character titles in the Game of Thrones series.\\nThe words and, the, of and in should be lowercase.\\nAll other words should have the first character as uppercase and the rest lowercase.\\n\\nExamples\\ncorrectTitle(\\\"jOn SnoW, kINg IN thE noRth.\\\")\\n➞ \\\"Jon Snow, King in the North.\\\"\\n\\ncorre\",\"tags\":[\"strings\",\"formatting\",\"language_fundamentals\"],\"timestamp\":{\"$date\":1568628461553},\"title\":\"Game of Thrones: Character Titles\",\"stats\":{\"completed\":{\"total\":59,\"ratings\":[3,3,3,3,3,4,3,4,2,0,0,3,3,2,4,2,4,4,3,1,2,3,2,4,3,4,4,5,0,3,4,4,4,4,1,4,3,3,1,4,4,3,2,3,4,3,3,5,4,2,0,3,4],\"rators\":[\"aMNhTh35QQAs33ycQ\",\"3pdgguqZgNDSAJSGm\",\"hZr4qXRsSumkpJXK9\",\"sxci7DYKNa6q22Sjq\",\"cpTAZ6r4gH5TZ6zD2\",\"3gxJoNp59B4eoyyed\",\"fJKkZN9dvjf2csx9x\",\"pzz8vFouna6JTTAiW\",\"BSDtieYGg6H7evesT\",\"dGscPdzKKe2p4qYzs\",\"k6gFxcu8xWXTFc649\",\"Prw5Jq38wrSoj5QSF\",\"KowhvsYvaqPMAf9Sf\",\"eXW8reZCCZHQzJjQi\",\"4fnfzhzzrxYabZcES\",\"fxaS5K7ZXo4FbTe36\",\"AWuZuJBDKjmM6GXm4\",\"s7iqHMchmJLu3gRn6\",\"AzERMCwmKzy5zXJ3S\",\"DjXeYHz8w7ywi84zx\",\"ngRNQYczN4QJ2tDN8\",\"Es4eX2stRpyoXeC7f\",\"AyrEvM2GLX2jqM772\",\"8J2Dqqz9PaFufQzwY\",\"XC9nQxxqYS46pgHTK\",\"LZSxphM8vH4A6Deqn\",\"gGnDsJz5hr2t9MKCF\",\"h9X4q2KLmwQS3ML9A\",\"TrquEHytntLKHA4m2\",\"rwETZ6XCNoHCEyB66\",\"jyoLggHk8xQKZuoQC\",\"imoNrk36ozReP939p\",\"pBMXMQem6BpSeooYT\",\"rehehi2Tr2mwaEoJE\",\"Ym8AjbKGSJooun3nt\",\"hAWJSZiD2FeSczR6p\",\"gXTAie79kiw28tx5u\",\"c7uBxu2rgY77H5d79\",\"h96FRTLbu79gbRLZv\",\"LrgQT4bdiLbHrprXu\",\"KNXNybZDXDXLDPTb5\",\"hibYcdCWPdTvsoudG\",\"vh8Bcpmy4J9cy648m\",\"nKkhibWxbfcGtHaku\",\"kujWgJStG2QD8LJek\",\"BbPpwoHJuDnw5Qb9v\",\"PtawsPT2Jw8gSdeZt\",\"eYT3EaRK6TmrC6jix\",\"9pqtNWrsTJdZcRbEZ\",\"LNCb5rksJLJ43L4Nw\",\"SxX3uQudokHPP7Xbo\",\"KMR6vNzvSKMA2cXnK\"],\"quality\":[4,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"isHidden\":false,\"quality\":4.75,\"isFree\":false,\"family\":[{\"_id\":\"oe4pzTCSaSMYHG6Kq\",\"language\":\"cpp\"},{\"_id\":\"kJpXCjfuWjpLGdc5g\",\"language\":\"java\"},{\"_id\":\"QudLBG2RvfePRMzDn\",\"language\":\"javascript\"},{\"_id\":\"kusqKDBnX8g2uxRj8\",\"language\":\"python3\"},{\"_id\":\"K5rBjcfMtmYQg38RG\",\"language\":\"ruby\"}]}}"]