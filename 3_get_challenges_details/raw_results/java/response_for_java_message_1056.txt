a["{\"msg\":\"result\",\"id\":\"86\",\"result\":{\"_id\":\"LYAuwTojeNTyEiHgC\",\"author\":\"Mateusz Mędrowski\",\"authorId\":\"hPx9H3YM8j2k94DNW\",\"code\":\"public class Challenge {\\n  public static double TotalDistance(double height, double length, double tower) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":0.5483870967741935,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"Dh4b3NR6sugC9pzpt\",\"instructions\":\"A snail goes up the stairs. Every step, he must go up (distance = `height` of step), then go to the next step (distance = ` length` of step). He wants to reach the top of the tower (tower height = `tower`).\\n\\nWrite a function that returns the distance the snail must travel to the top of the tower.\\n\\n### Examples\\n```\\nTotalDistance(0.2, 0.4, 100.0) ➞ 300.0\\n// Total distance is 300.\\n\\nTotalDistance(0.3, 0.2, 25.0) ➞ 41.7\\n\\nTotalDistance(0.1, 0.1, 6.0) ➞ 12\\n```\\n\\n### Notes\\n- All given values are greater than `0`.\\n- Tolerance of returned value is `0.1`.\\n- Number of steps determined by tower height divided by stair height.\\n- For the purposes of this exercise, the last step's length must be counted to complete the journey.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(300.0, Challenge.TotalDistance(0.2, 0.4, 100.0),0.1);\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(18.3, Challenge.TotalDistance(0.12, 0.1, 10.0),0.1);\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(50.0, Challenge.TotalDistance(0.5, 0.5, 25.0),0.1);\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(12.0, Challenge.TotalDistance(0.1, 0.1, 6.0),0.1);\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(3.3, Challenge.TotalDistance(0.05, 0.1, 1.1),0.1);\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(1555.4, Challenge.TotalDistance(1.0, 1.0, 777.7),0.1);\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(150.75, Challenge.TotalDistance(0.2, 0.1, 100.5),0.1);\\n  }\\n}\",\"language\":\"java\",\"stats\":{\"completed\":{\"ratings\":[0,0,0,0,0,2,1,0,0,0,0,1,0,0,1,1,0,1,0,0,2,0,0,1,1,1,1,0,0,1,0,0,1,0,1,0,0,1,1,1,1,0,1,0,1,1,1,1,0,0,0,1,0,1,1,0,1,0,1,0,0,0,1,1,0,2,1,2,1,1,0,0,1,1,1,0,1,1,0,1,1,0,2,0,0,1,1,0,0,2,2,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,1,1,0,0,0,0,1,1,3,0,0,1,1,1,5,1,0,0,0,1,0,0,2,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,1,0,1,0,0,0,1,1],\"rators\":[\"zxRHFTwSLu5m5Tr8Y\",\"9ty3Xe2fBFtMvnyB6\",\"jyoLggHk8xQKZuoQC\",\"6akKZDu2YSFbdwhPj\",\"a49eNnfRwSMxsDJXf\",\"Pzj4TXu7BYKTowKZf\",\"TrquEHytntLKHA4m2\",\"LmMjbzgdKybKRs7m6\",\"KxLMWekCxzy2Eem7u\",\"W8Fv45pcug4F2AmZN\",\"kxQpWF6gumvsfdkcn\",\"YFHkjbM6obMSj24zi\",\"HwNQvXxcj5tCbyZDy\",\"5iwbwufiHQRspBgem\",\"gqiH4FBBcffZPnyz7\",\"NvjQDrN5oK7yiKitJ\",\"AeJSxRqw2dJZuGvdk\",\"vRXuYYBNuHEQ29fbm\",\"86ruHH5H8fGuGoHFE\",\"bSMTM2fdF2JZfE9RZ\",\"CDxqHXMmiiZShn3N2\",\"JXnf7Lz3zotPN365m\",\"wqv9wS58MJjnvETHy\",\"hibYcdCWPdTvsoudG\",\"xrEc5jEBx3At6wdMA\",\"g4NCSxxHqHCGMpWwT\",\"DEDniTrstQYGounXT\",\"ATkTPpwMiw8Z8P4ey\",\"Fd9765rksgPK4E2Zy\",\"TmhJM5Bg5Wv6ZybLk\",\"L8SkHF4Cs8q3hv2Kd\",\"n5wubRfh6zh8QRymN\",\"8CCvawPLSSrFwiNQD\",\"hhxjQREtmHSheH9Pj\",\"bHrbD9BgxEiLgDFnM\",\"Eog3hCNjLgjsAGTCG\",\"o2Q8uM5DwJnSRmerd\",\"Fdq6CxMWZL8WZiNaM\",\"B4pxRqzo43M7S8FbP\",\"79Wo8iNbhEr7BvrNE\",\"8g3kzexJE49AHnjNo\",\"yXGiiSAR5nBHnH3yr\",\"QZCaxdtKtKtu7uzTH\",\"D6EHJixyyNv8d6EAb\",\"PRAJaE6pSudbzAmno\",\"9uvY36FiJRWxRpE7e\",\"M3fTYWJX2hb3vuEGJ\",\"GimSDQiQTYiT8hcpj\",\"GwDPTr6D2YpFzDNty\",\"sxBxP7og7ToRgq8aX\",\"tnYXC3cGqycxRzCgT\",\"ATCbF72Lo628BKgac\",\"QCRPMkJMFxfcqLsWN\",\"Evm56ZcY5LYSNenHi\",\"jqkZtB4n2ZgLbt5t5\",\"z38CuWAGA7v2JQP5C\",\"SDaX3xnNaoq2TbNci\",\"uYwg3vF7jaASNo7oq\",\"bn9GtntLTZcMAWsZS\",\"zn76hBxCxiqqZs69u\",\"ymggGjk5woALZEbCC\",\"CBRiWyfmtC9xzCTf4\",\"EfrK7Prsam9RWKYKf\",\"GySeuyWJa2nH4isWX\",\"eaFkKqk7bnwLomrHv\",\"2xFvy6u3hE4LtCXMD\",\"vJJLjgZNcNYYdgS8q\",\"4sA7sbNviGRdkApYa\",\"NpY2CrwGmTWXEL57H\",\"zRDJYkEo9DL8bjgB7\",\"i34zt7LasyNBwBAMX\",\"QpiCzmdkB8okXtf8i\",\"CggGfsERnPKGupFWp\",\"Fnj8FeZChejwno74c\",\"M9fYmJcbxAvDWAaE9\",\"Yv8S3o9HddqPqficq\",\"QjS3SRXLfnbj9auo2\",\"2ptN2mhjFwFcHyPZd\",\"tyeHaiw6zNeBPSBfD\",\"W399kr4mpdBrmsRWp\",\"ESxQrnn85BzHXwBrc\",\"5TaPWyRv9DZWWodp8\",\"2jrTg2YaT7F4c8g4F\",\"7YntBqzsfDx7fjprD\",\"WuEaQmoR5swzmr6BQ\",\"Swae9Q9BathWsp97q\",\"QDsGRhpwrjYwxz7A2\",\"ai4LMtdwauJEoxpYw\",\"eQXwk5zGckM8tCWYH\",\"ryCcDBQoaQfB46nwo\",\"cueHAmTrcWuowXf58\",\"Kw6RBysWHsACtEoBx\",\"J7epB3qSQJ2E8vWkY\",\"T98x52Hx8rWL5s6qs\",\"FiegHuLFA8sbCoPWw\",\"Es4eX2stRpyoXeC7f\",\"kNxEA78KouS78DWaP\",\"t8tYLq5se8GxEd69K\",\"tB79jeRB4MoLAAFoi\",\"PPHFum3dvD8pzLnGz\",\"Zz4Rn75AZHRMu5sxu\",\"RJRwPFmGEsPuLYM5u\",\"u7i7WPM63n42r8R8o\",\"CFNJuJqwhRdZ3v2Es\",\"TcRtgoatqYGnc2YLo\",\"rgkLdANtYHsa58iuk\",\"4tPnujjhWaPcxh2EY\",\"HTHTaRGeFB6tGKRCJ\",\"2cdvd8yuPLSwvGj9w\",\"YZKgv9cL7ibqh2jhJ\",\"mm5wPKW7S5xh9M277\",\"32uy2LgegdmLGpebX\",\"7gBLtxKryhTryH5zb\",\"7W8yYT7ktkAoNo3u8\",\"JpGTbK8kYLeRCaybb\",\"ENtEccBrSYd7oZKFZ\",\"syA2xowAA2EF87bkF\",\"puWkZTjbBBnJXH9Rd\",\"a6G3w4hPzY5xGELnR\",\"WbypmciJMrkrHn5Qu\",\"47PyFbZyxWuP9Bgga\",\"ShrPRFW2oBeDiHpEX\",\"gjSJcfrWyf2dfBmwt\",\"yyeQ8kyxFphnx4A3h\",\"AdmEZ3hvEs4bfwofu\",\"etoSR23iELGGgs9rA\",\"pqDn3BDBKra4zwg5F\",\"Q2u7eLt9YmNXjD9J7\",\"agReopRiQqrFmPMrS\",\"rWhXHhzF4W8bea6LP\",\"KnPDaXuCY5iwrXBne\",\"BdZTCHrjGayimdiMX\",\"8Xx8nWXRydHDBGfQf\",\"A7jCWrFZzCATJ3Qgm\",\"ezFbHw9SkYsCAJRhk\",\"Yp7uvStL97cC9fKkY\",\"Mh4Eamonu2ueJaKqp\",\"ikxSkiQjCjYPsFwMT\",\"gBGjCfJvPHswDM5JQ\",\"N3tyYcBfjKQmSmDvf\",\"CNc6rmwhbxkxEhHAp\",\"JwBT2xYDafcNG9eKr\",\"Yj7ftjzyP67R5NFrH\",\"GEwWTog2hiFQgcaWe\",\"umcNKSZ597NfCXiyy\",\"owhopRidz9zaDyHzx\",\"zQaMPKMwHF2GMjWj4\",\"W56bWmpQeLJ9JEDsa\",\"NioGGZL9KCn5Ln96t\",\"p7S65SrYRpA5bcJ5Y\",\"uFfEio8nzDvL8emhp\",\"8DfhSneJpsw5uqLeM\",\"RAEFpazbe6mhx3PLb\",\"m8RTLuXqmythXHYZt\",\"TuoCjRBc7HaFtdg4C\",\"FrorBN8wRAoptuxtR\",\"pi76g3eRpnKrhee2a\",\"7ypuw2RbuSADSg4kN\",\"sacPXRKX59BE495oz\",\"dBexp26HAHeucxKP7\",\"hSGA99ySG5ePGK7CJ\",\"bQrQGrN9iC8sbjjAM\",\"2ScA9s5nu35nSMDpt\",\"EbRM39k7fJpTnMezH\",\"mwzNRK5zfFtABDXS2\",\"64Hrf4Kzaf6d2nkrC\",\"XukHrpzdTBvX57KFP\",\"v5gjriMxaA3pitLyY\",\"Ln5Ktpm8Zgxgdtgww\",\"btabi3PdyisuY5tn9\",\"A3KrxZk4FiSymY6f2\",\"5f6oSeq4r5WTXLdCQ\",\"LCuvvWMwiGuqTwNRi\",\"K78Mo7WGsrapDYTXs\",\"nXw9eTHFraWQtwJtY\",\"8WeJLyNE4h6nJ2dNh\",\"Wi4H6ayKsNDWWQCG5\",\"EcBw39vkywQsT3Y2Z\",\"oEfHwicCdt946rTWY\",\"u6zWb2C26ZXMzGwwP\",\"3SgSNoAB3sxaYeT3w\",\"QRv96jmNaYsWkxQEG\",\"RSombfrtxS5PSXnyJ\",\"NXtM3si2K3i4DySMn\",\"HCfkcKnPs9mrJojdG\",\"DovtrH78NMjjpDNGg\",\"umE8dRTGWzrZFp755\",\"kiq3z4o9ABhQd7aXJ\",\"6MgG8N9rkmAZKYrJ3\",\"GkYtSbQuheBF4Enys\",\"ot47sjtkXfS7tmdF4\",\"x9CWxL7Q7yCHdrAmq\",\"cwwW2amYGZMkYwAxM\",\"SY5wqJS9RJYYMJ6sy\",\"dD3Aja8PZSMXMFSDY\",\"KPz93xbvJ9x7okGs6\",\"srJ34BaybkQh3qRkM\",\"buX4mCQhtXCfBjeno\",\"82weQfHHmno4Mq4X7\",\"QTJvghkPpGKnKvZ5R\",\"MYaqDq32HkAjdYEbo\",\"QgGGow8Ynnq2YkGXX\",\"8qNSPHZBpmjSTt3tH\",\"6rvJwN4mcX7iYGjY7\",\"zrk4J9JseJSk5i7nG\",\"FEGpESiobxcqjMqF3\",\"t55QWHi8o4teZxqqE\",\"FxkncxCaMfJWFp3GG\",\"xEX3TDY6C2h82dJTn\",\"oPNPK8B6u6Rbxx9JG\",\"ztrfkKRfYBWokFwkf\",\"khdCaD6AGBiR6txLQ\",\"sxci7DYKNa6q22Sjq\",\"rhS8qXRjZcpDXkwnE\",\"8BFSTCnoe2QggN64c\",\"YAd5SaKz9ugA2ub5k\",\"D3ASM3aWpcQ8gvnin\",\"uw47663LqPME8btaA\",\"Gn8rShvWCKLX3cxzx\",\"i6MDC9kdTmCvtFPy7\",\"fdyejapW3NWN7utPX\",\"cR3ibTMxLyEdDFCHY\",\"aFKWAqsLxcKtgEXJs\",\"ckQwFFWyLXmDQAaCn\",\"htXCitorobtqYymjN\",\"KMR6vNzvSKMA2cXnK\",\"RsujLHaML6L3KinzK\",\"Kvrm7Hbzgs6Jj9Rmk\",\"6kB5qypxcm62PHsEJ\",\"unqzSsxpxj9sZ7rbD\",\"F8dA24AosSC8XXb7D\",\"edkcoiA2RcGYpvSvC\",\"9du58gNDkWQEWivbB\",\"eXQziXGcpwekMyABQ\",\"5HGyJtoZ3AffzAZAv\",\"x2Cz7S8rCKJqCE3Xe\",\"5kMuNZuxiFcNRDkG4\",\"h6q2JS8Mwtk5KoRve\",\"NwczjpfNN8jXy5RF6\",\"cQP9NvgsyeLuwJfhC\",\"6KDZNmtgvb6PCaWQE\",\"PPdaczxSt2u5cmZYG\",\"xLy94bAjaLwokPcZZ\",\"9i67g75x6vQvzPFrh\",\"9moo5f7g8KrZieT2K\",\"CHvzhtXnv8HTbPQ56\",\"nFbmNzMQ38TncmfQX\",\"FgaXeuBoJFBoDWZGL\",\"5eDE9KCDnDnqBqLEK\"],\"total\":277,\"quality\":[5,5,1,5,5,5,5,5,5,4,5,5,5,3,5,5,5,5,5,2,4,5,4,5,2,5,4,4,5,5,5,3,5,5,3,5,3,4,5,5,4,5,5,5,5,5,5,4,5,5,5,4,5,5,5,3,4,4,2,4,5,3,4,5,5,5,5,5,5,5,5,1,5,5,5,5,5,5,5,5,5,5,4,4,5,5,5,5,5,5,5,4,5,5,3,5,5,5,1]},\"flags\":0},\"summary\":\"A snail goes up the stairs. Every step, he must go up (distance = height of step), then go to the next step (distance =  length of step). He wants to reach the top of the tower (tower height = tower).\\n\\nWrite a function that returns the distance the snail must travel to the top of the tower.\\n\\nExamples\\nTotalDistance(0.2, 0.4, 100.0) ➞ 300.0\\n// Total distance is\",\"tags\":[\"algebra\",\"loops\",\"math\",\"numbers\"],\"timestamp\":{\"$date\":1598287986391},\"title\":\"Snail Goes Up the Stairs\",\"quality\":4.484848484848484,\"family\":[{\"_id\":\"6ZizzQ2s89R8igkGB\",\"language\":\"cpp\"},{\"_id\":\"LYAuwTojeNTyEiHgC\",\"language\":\"java\"},{\"_id\":\"9fhT4EBbBR4BvJLwB\",\"language\":\"javascript\"},{\"_id\":\"RxHMzNBx3HHNMydno\",\"language\":\"python3\"},{\"_id\":\"sWvsBiRxTjjSLhiaR\",\"language\":\"ruby\"}]}}"]