a["{\"msg\":\"result\",\"id\":\"770\",\"result\":{\"_id\":\"2MR6qaWfxR4pYpGGo\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class FibonacciString {\\n\\tpublic static String generate(int n, String[] s) {\\n  \\t// recursive code here\\n\\t}\\n}\",\"difficulty\":3.2083333333333335,\"quality\":0,\"familyId\":\"W6uhfQfGmxKTBL32H\",\"instructions\":\"A **Fibonacci string** is a precedence of the *Fibonacci series*. It works with any two characters of the English alphabet (as opposed to the numbers `0` and `1` in the Fibonacci series) as its initial items and concatenates them together as it progresses similarly to that of the Fibonacci series.\\n\\n\\n### Examples\\n```\\ngenerate(3, [\\\"j\\\", \\\"h\\\"]) ➞ \\\"j, h, hj\\\"\\n\\ngenerate(5, [\\\"e\\\", \\\"a\\\"]) ➞ \\\"e, a, ae, aea, aeaae\\\"\\n\\ngenerate(6, [\\\"n\\\", \\\"k\\\"]) ➞ \\\"n, k, kn, knk, knkkn, knkknknk\\\"\\n\\ngenerate(1, [\\\"f\\\", \\\"g\\\"]) ➞ \\\"invalid\\\"\\n// return \\\"invalid\\\" if n is less than 2\\n```\\n\\n\\n### Notes\\n- You are expected to solve this challenge via recursion.\\n- You can check on the **Resources** tab for more details about recursion in Java.\\n- An **iterative** version of this challenge can be found via this [link](https://edabit.com/challenge/WbNwkvFJf63rTutWo).\\n- A **collection** of challenges in **recursion** can found via this [link](https://edabit.com/collection/Yx78jEBrKppHBNsoQ).\",\"isHidden\":false,\"lab\":\"/** \\n==================================== \\nTestGen 4.0 for JUnit 4.13.0 \\t\\t\\nTest Case: FibonacciString::generate \\nTimestamp: 10/01/2020 06:44:54 PM \\n------------------------------------ \\n® DARKKO 2020 © \\n==================================== \\n\\n**/ \\n\\nimport static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class FibonacciStringTest { \\n\\t\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertEquals(\\\"j, h, hj\\\", FibonacciString.generate(3, new String[] {\\\"j\\\", \\\"h\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertEquals(\\\"e, a, ae, aea, aeaae\\\", FibonacciString.generate(5, new String[] {\\\"e\\\", \\\"a\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertEquals(\\\"n, k, kn, knk, knkkn, knkknknk\\\", FibonacciString.generate(6, new String[] {\\\"n\\\", \\\"k\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertEquals(\\\"f, c, cf, cfc, cfccf, cfccfcfc, cfccfcfccfccf\\\", FibonacciString.generate(7, new String[] {\\\"f\\\", \\\"c\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertEquals(\\\"b, a, ab, aba, abaab, abaababa, abaababaabaab, abaababaabaababaababa, abaababaabaababaababaabaababaabaab\\\", FibonacciString.generate(9, new String[] {\\\"b\\\", \\\"a\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertEquals(\\\"z, x, xz, xzx, xzxxz, xzxxzxzx, xzxxzxzxxzxxz, xzxxzxzxxzxxzxzxxzxzx, xzxxzxzxxzxxzxzxxzxzxxzxxzxzxxzxxz, xzxxzxzxxzxxzxzxxzxzxxzxxzxzxxzxxzxzxxzxzxxzxxzxzxxzxzx, xzxxzxzxxzxxzxzxxzxzxxzxxzxzxxzxxzxzxxzxzxxzxxzxzxxzxzxxzxxzxzxxzxxzxzxxzxzxxzxxzxzxxzxxz\\\", FibonacciString.generate(11, new String[] {\\\"z\\\", \\\"x\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertEquals(\\\"t, d, dt, dtd, dtddt, dtddtdtd, dtddtdtddtddt, dtddtdtddtddtdtddtdtd, dtddtdtddtddtdtddtdtddtddtdtddtddt, dtddtdtddtddtdtddtdtddtddtdtddtddtdtddtdtddtddtdtddtdtd, dtddtdtddtddtdtddtdtddtddtdtddtddtdtddtdtddtddtdtddtdtddtddtdtddtddtdtddtdtddtddtdtddtddt, dtddtdtddtddtdtddtdtddtddtdtddtddtdtddtdtddtddtdtddtdtddtddtdtddtddtdtddtdtddtddtdtddtddtdtddtdtddtddtdtddtdtddtddtdtddtddtdtddtdtddtddtdtddtdtd\\\", FibonacciString.generate(12, new String[] {\\\"t\\\", \\\"d\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertEquals(\\\"x, t, tx, txt\\\", FibonacciString.generate(4, new String[] {\\\"x\\\", \\\"t\\\"}));\\n\\t}\\n\\n}\\n// end of tests\",\"language\":\"java\",\"summary\":\"A Fibonacci string is a precedence of the Fibonacci series. It works with any two characters of the English alphabet (as opposed to the numbers 0 and 1 in the Fibonacci series) as its initial items and concatenates them together as it progresses similarly to that of the Fibonacci series.\\n\\nExamples\\ngenerate(3, [\\\"j\\\", \\\"h\\\"]) ➞ \\\"j, h, hj\\\"\\n\\ngenerate(5, [\\\"e\\\", \\\"a\\\"]) ➞\",\"tags\":[\"recursion\",\"strings\"],\"timestamp\":{\"$date\":1601487679259},\"title\":\"Recursion: Fibonacci String\",\"stats\":{\"completed\":{\"total\":24,\"ratings\":[4,4,4,4,4,3,4,1,2,5,5,5,5,4,0,2,3,4,2,1,5,2,2,2],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"rehehi2Tr2mwaEoJE\",\"azAzSkvJd7eyXY9x9\",\"QXR2qGcvrK5Xkxdea\",\"Ym8AjbKGSJooun3nt\",\"yXGiiSAR5nBHnH3yr\",\"7YbGHKwApShJ7J4NK\",\"buX4mCQhtXCfBjeno\",\"LNCb5rksJLJ43L4Nw\",\"o9yCCrPKpzPFobo2z\",\"sxci7DYKNa6q22Sjq\",\"CE4qtZmpDE35AsgKy\",\"htXCitorobtqYymjN\",\"uw47663LqPME8btaA\",\"KMR6vNzvSKMA2cXnK\",\"Ys4wBL6EFvSzwa2X5\",\"Lfq2dzmGyoyMigP6f\",\"a49eNnfRwSMxsDJXf\"]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"2MR6qaWfxR4pYpGGo\",\"language\":\"java\"},{\"_id\":\"aEWotdg3r6eB2QLWK\",\"language\":\"javascript\"},{\"_id\":\"H7Z8enQWipfBMXTx7\",\"language\":\"python3\"}]}}"]