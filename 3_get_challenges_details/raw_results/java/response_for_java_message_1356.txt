a["{\"msg\":\"result\",\"id\":\"237\",\"result\":{\"_id\":\"HtruskPio7ricRvuG\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"public class Challenge {\\n\\tpublic static int incrementToTop(int[] arr) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.1090909090909091,\"familyId\":\"jSEYLiqNfoXFo9aQv\",\"instructions\":\"Create a function that returns the total number of steps it takes to transform each element to the maximal element in the array. Each step consists of incrementing a digit by one.\\n\\n### Examples\\n```\\nincrementToTop([3, 4, 5]) ➞ 3\\n// Maximal element in the array is 5.\\n// To transform 3 to 5 requires 2 steps: 3 -> 4, 4 -> 5.\\n// To transform 4 to 5 requires 1 step: 4 -> 5.\\n// Total steps required is 3.\\n\\nincrementToTop([4, 3, 4]) ➞ 1\\n// Maximal element in the array is 4.\\n// To transform 3 to 4 requires 1 steps: 3 -> 4.\\n// Total steps required is 1.\\n\\nincrementToTop([3, 3, 3]) ➞ 0\\n\\nincrementToTop([3, 10, 3]) ➞ 14\\n```\\n\\n### Notes\\n- If the array contains only the same digits, return `0` (see example #3).\\n- Bonus: Can you write a solution that achieves this by only traversing the array once? (i.e. without finding the max beforehand)\",\"lab\":\"import static org.hamcrest.core.Is.is;\\nimport org.junit.Test;\\nimport static org.junit.Assert.assertThat;\\n\\npublic class ChallengesTests {\\n\\t@Test \\n\\tpublic void test1() {\\n\\t\\tassertThat(Challenge.incrementToTop(new int[]{3, 4, 5}), is(3));\\n\\t}\\n\\t\\n\\t@Test \\n\\tpublic void test2() {\\n\\t\\tassertThat(Challenge.incrementToTop(new int[]{4, 3, 4}), is(1));\\n\\t}\\n\\t\\n\\t@Test \\n\\tpublic void test3() {\\n\\t\\tassertThat(Challenge.incrementToTop(new int[]{3, 3, 3}), is(0));\\n\\t}\\n\\t\\n\\t@Test \\n\\tpublic void test4() {\\n\\t\\tassertThat(Challenge.incrementToTop(new int[]{3, 10, 3}), is(14));\\n\\t}\\n\\t\\n\\t@Test \\n\\tpublic void test5() {\\n\\t\\tassertThat(Challenge.incrementToTop(new int[]{1, 2, 3, 4, 5}), is(10));\\n\\t}\\n}\",\"language\":\"java\",\"summary\":\"Create a function that returns the total number of steps it takes to transform each element to the maximal element in the array. Each step consists of incrementing a digit by one.\\n\\nExamples\\nincrementToTop([3, 4, 5]) ➞ 3\\n// Maximal element in the array is 5.\\n// To transform 3 to 5 requires 2 steps: 3 -> 4, 4 -> 5.\\n// To transform 4 to 5 requires 1 step: 4 -> 5.\",\"tags\":[\"arrays\",\"logic\",\"loops\"],\"timestamp\":{\"$date\":1555997744305},\"title\":\"Increment to Top\",\"stats\":{\"completed\":{\"total\":256,\"ratings\":[1,1,1,1,1,1,1,1,1,1,0,1,2,1,1,1,3,1,0,1,0,1,0,1,1,0,1,2,0,1,1,1,1,1,2,1,0,1,1,1,1,1,2,2,0,1,1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,3,1,2,0,0,0,3,1,2,0,3,1,2,2,1,3,1,1,2,0,1,2,1,2,2,1,2,1,1,1,1,1,1,1,1,1,0,1,2,2,0,2,0,1,1,1,2,0,0,0,1,1,1,1,0,1,1,2,1,1,1,2,2,1,2,1,1,1,2,1,2,0,0,1,2,0,0,0,2,2,3,0,2,0,2,0,1,1,2,1,1,5,0,1,0,0,2,2,2,1,1,0,2,3,2,1,1,0,1,1,1,1,0,1,2,2,1,0,0,1,1,1,1,2,2,1,1,1,2,1,1,0,0,1,1,2,1,0,1,1,1,1,2,1,1,1,1,0,1,1,1,1,1,1,1,2,3,0,1],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"yJyjT7Z2PPQmzzWpP\",\"MyCENLAw9vMsxcELw\",\"34rKGZYu7vEdoCu7d\",\"u437YTqDGSjh49fsY\",\"r5D2QDAKARPAWYYLs\",\"z6gRoaKmajaC6FgYb\",\"hmKA7q5Du8ijLtWwD\",\"5znpaFDoToJtAtF3h\",\"QS5RGoPnapStFD5Gi\",\"CDkkdvDdqjDihTcFS\",\"veu3fKkK2DSkKTkb2\",\"wLkbq9vZknXjLRdRu\",\"ydos8Ba8nZdYRNJpS\",\"cGwqKDCYRv6AP4GPa\",\"zLqrLL8wDweej9HCd\",\"JSSLvJPs8JebyfeS9\",\"Hkutq4KieKJYFD2vf\",\"WAMxBrgasiphg5QPL\",\"vRXuYYBNuHEQ29fbm\",\"mEPuJxqu2YMMWbBZL\",\"qsn49fybDonrhLdrA\",\"a49eNnfRwSMxsDJXf\",\"ZzwR8m8Q6Gozo9ofz\",\"pTEvwThdfyb6uqAGG\",\"Kn92GequEaXsMd6RN\",\"qGFqqzbwxiz7kZkPW\",\"pWgtZhtEXkspiS4uo\",\"CddWrNkJE3FZCxBjf\",\"LsQQ5CssWKNweWNgz\",\"PQ6tuAd6h728pAcHK\",\"4MWMwGbthkTMu3dkb\",\"puF7tgr34fjsLXiDT\",\"RXkmCFg65BEGzQveB\",\"o9Zkw6pAwfoe2s72u\",\"6e9kRii5BM2oxv42n\",\"CbD6vg5bo5ymSTyeJ\",\"aMNhTh35QQAs33ycQ\",\"o5H3aMNucmwhnsWdL\",\"mrKDTFeqRM7r9ZPJv\",\"dRaeaxMf84zbxq4ad\",\"sxci7DYKNa6q22Sjq\",\"FocLpCB2WEiK2gGni\",\"3pdgguqZgNDSAJSGm\",\"2oiE6qHMbW3cv7N74\",\"9c8n7ti5vCjTRgiGN\",\"uLqaRpZfCYpEGJJm8\",\"Yohr2MmAyaWGMbB35\",\"d4CtYYCSi23g3vSpW\",\"vMXAzjzvfPaM6NejG\",\"zZiEZEFrZyayHsrTk\",\"cG4PEDMMx8jXhWP8T\",\"teCeoNkdeQEciPZ7H\",\"phA6MomRzh9oz3eqn\",\"8rF6PHMSaybTDsvXr\",\"sb7Nh56pPFtPxLogT\",\"jNcwk4jksmPTcAoTu\",\"ZBDiEMi7dbjRL55LB\",\"Eqt2WZ9iPdhM6Ma9Q\",\"viQwZYpKbEFmfjpTe\",\"jbWjmMTs5iJY93mhy\",\"yazNfwgLx7jSAZ8Tv\",\"79ZbLzp7xepvkonoh\",\"tfs6uiysC8atFan4t\",\"WPWBKqdkzkeGpgFR2\",\"CLmJduqJHX83dM4Pd\",\"LPJpgn5s5FR5s88WE\",\"3KjxQu9RZ8ZSywvLz\",\"HBgPTjhMkJ2WCcBP7\",\"8JyqsSbN2FJXPr3cw\",\"J9zJq7PMGb6mqzcHW\",\"s2G7xhbjaNdkGbhRX\",\"supEsRyet9ow5W6qg\",\"qJZsi5rhRnWA38FbA\",\"FSSM3xcaTXGcxqYGz\",\"C9yBWYcZsjmJYww3K\",\"AyrEvM2GLX2jqM772\",\"qx9XHErKygcLiFGhX\",\"5TaPWyRv9DZWWodp8\",\"rWhXHhzF4W8bea6LP\",\"9gJsF5apWJGWZJprn\",\"Fdq6CxMWZL8WZiNaM\",\"MrNyfG8SGjjBKLvgc\",\"YLqdr7bYjwew2KM4N\",\"YLwJkF2wuL3n9o6a2\",\"mRwxbzaBc4Fg5q9Hw\",\"5Kf9z3G9QBs9fkvLs\",\"EZNT8B7yQnnZmuwCf\",\"gBGjCfJvPHswDM5JQ\",\"jRqY4i8gPemsZMBGf\",\"Es4eX2stRpyoXeC7f\",\"j2hKJg9sh9m3HWFgo\",\"wYYMNPe8nSiJFbvJw\",\"M5n9zd5LtuuwJr668\",\"mdEQJ2fmGmkbhbvNw\",\"2cdvd8yuPLSwvGj9w\",\"Kso7rzAKB4TTCPKgM\",\"82weQfHHmno4Mq4X7\",\"rTj67TTydxqkpwFtN\",\"bw6kHP3k8dP2qBa5v\",\"fZjkX29nhRTWWb75k\",\"8J2Dqqz9PaFufQzwY\",\"hB5mgzMwQSnhBzi7P\",\"jDTGwryGygbZiqCEg\",\"etoSR23iELGGgs9rA\",\"jyoLggHk8xQKZuoQC\",\"5seiNqw6ZXoF2GRRd\",\"GEzaJZ2cPjENT4ERQ\",\"yv7c4H2jimSKHEjtG\",\"8zZ6xmzpiFair25qr\",\"Yp7uvStL97cC9fKkY\",\"tqSJxy6E4vaTyECkh\",\"B4pxRqzo43M7S8FbP\",\"WZujpe8yQAyZmpWHg\",\"DzvdGwHEjqsX7wyKr\",\"meS77LKqRswhF5LAy\",\"htXCitorobtqYymjN\",\"TrquEHytntLKHA4m2\",\"Yom3RzkMYpweE8cbS\",\"y6kfyYmydcD8tkBk7\",\"DkSMZ3jZLkwviKb9g\",\"ZQEo2nzPtJHGx2cM7\",\"H5hi5mBu2LaQFxZE7\",\"zwruFCmuHkwJTpYqg\",\"Zhy5X7BZnqk8hacEw\",\"rvojHhKH3DaxotefQ\",\"QXkrEiAuhuXaZmL4C\",\"AeJSxRqw2dJZuGvdk\",\"muXMnzQwGLzN6j2Jr\",\"g4NCSxxHqHCGMpWwT\",\"ZMd8it647JSYTvx8Z\",\"DAQX9mhHdMTqyYbvh\",\"9KAbm9niQ9Cv9LefP\",\"f6uGKbmMdBYCjrMBh\",\"q2tzvkrLASvSjkek9\",\"Fd9765rksgPK4E2Zy\",\"7Wq4ZNz5c3irDR6br\",\"KxLMWekCxzy2Eem7u\",\"yXGiiSAR5nBHnH3yr\",\"fRYcPHuyEdqngMzC4\",\"35FLKaQ7LJdA7pJZG\",\"dtZZQHzQuKSEpx2yv\",\"p5ZshR8zhTqmdhKDc\",\"ZiN6yB9rACMaYgseC\",\"mwDdQwbZN6tXwAbBA\",\"soA4kKmJ6ec4DgiK3\",\"kQRtmSZfHdSzFserc\",\"jb9RLyyuo565bKDzN\",\"fADAnmvM4LibcQWTr\",\"gpd8yji9GXJruAtje\",\"SfmXqCfDksMb883DC\",\"ydF8Re5wK8MmaDbLh\",\"zTEKMLMevG8xfxEj6\",\"bjKYBdDcGMRTfooBs\",\"gXTAie79kiw28tx5u\",\"6ehQMeGtrhnhot5zK\",\"9amCEoE43AdSneJZ7\",\"JszPst3958te56jFk\",\"66AfbqGGg8oz7WWs7\",\"PmfzvaX5ZJscpvHXc\",\"NdLzb3BZ5J8ftnCkS\",\"oMfq73A434YWhSuWQ\",\"mG8HqKiAQFTdRZthG\",\"P5BhjZxyeHQYTNyB9\",\"xv5obFhsxY93mqR5S\",\"7gBLtxKryhTryH5zb\",\"22kSvGZ9z9J2KK8nc\",\"jXTnL3JatkKjoifyb\",\"8Xx8nWXRydHDBGfQf\",\"hDeaTsprkH6CmvSAR\",\"Ym8AjbKGSJooun3nt\",\"tyLS9T6YMfg9fMtYJ\",\"cJmmvnmJSXvBXtydi\",\"5YcHZbmJ8uc8G5wZ5\",\"BWqQ68pvNedARDcBN\",\"NQ4btGLfcvAnXjAyP\",\"CNc6rmwhbxkxEhHAp\",\"KCEsMas5BbmiD2Q9K\",\"unNqQjSHzkb4pCzEu\",\"W56bWmpQeLJ9JEDsa\",\"uNK8tLSseShR8wcA4\",\"47PyFbZyxWuP9Bgga\",\"rcvmayp8iSXxxEyMj\",\"YL4rQWKadY7sGGtGG\",\"m8RTLuXqmythXHYZt\",\"5jDgvkGd4JwatrYXg\",\"J7epB3qSQJ2E8vWkY\",\"Wi4H6ayKsNDWWQCG5\",\"3SgSNoAB3sxaYeT3w\",\"uFfEio8nzDvL8emhp\",\"E2hpke7mHxAWsw5t9\",\"rNAtHTutzkDkhATPu\",\"f3RAbWvE6uESq7KE5\",\"QRv96jmNaYsWkxQEG\",\"GkYtSbQuheBF4Enys\",\"hhxjQREtmHSheH9Pj\",\"zZfMwLuoERGmybgib\",\"buX4mCQhtXCfBjeno\",\"BdLcWEA24injbAawz\",\"NnymXePpDaZnp2fRd\",\"hi8JEuBS3qcDtRoki\",\"a6fgDQTddtZCKfnzR\",\"btabi3PdyisuY5tn9\",\"FgEeQycsn67j9m7xK\",\"xEX3TDY6C2h82dJTn\",\"4ySzqKC5s3ZRpG9di\",\"d7PjwEf5Ff8W5eD64\",\"HXbTKW3jmmyRAsKrr\",\"tdinF6MRzC6AdNX8g\",\"pYonfGP4u9HNL9Z32\",\"5LDvZHCDJqePeBrCg\",\"GaJNJwcdyB9ueYFst\",\"YEgjigFpp6bNjTyYA\",\"uw47663LqPME8btaA\",\"rhS8qXRjZcpDXkwnE\",\"srJ34BaybkQh3qRkM\",\"cR3ibTMxLyEdDFCHY\",\"jCjCvyhqhpebkJn34\",\"TA9dwvnSdta7rTynz\",\"TCTZucJN3tJh5t7MB\",\"KPz93xbvJ9x7okGs6\",\"KMR6vNzvSKMA2cXnK\",\"afvP29FhRou2bTaav\",\"tjFkD8gLHEWEpEuNL\",\"RsujLHaML6L3KinzK\",\"PPdaczxSt2u5cmZYG\",\"5HGyJtoZ3AffzAZAv\",\"FNYPC36yqPmTKDaqR\",\"fNCE83jwoYxkaQeAi\",\"XH6378Zm3WBm679yx\",\"HQLqoyCuvdb2usxEe\",\"ckQwFFWyLXmDQAaCn\",\"unqzSsxpxj9sZ7rbD\",\"GD9Jqmu93vB4LTT8F\",\"nSLvkGEpiYCtcBLaa\",\"ekzGKngknJdSLHM7P\",\"FxPDKKibxnZjGJLs6\",\"H3XLNCWB5yXt5YYXn\",\"9du58gNDkWQEWivbB\",\"TWZabB8LPeRzBA5cx\",\"wy7AvDwMeujSybWNY\",\"iLrtRGuyCBMzBot9X\",\"r72oFMcCQh4rBsKHb\",\"nFbmNzMQ38TncmfQX\"],\"quality\":[5,4,5,5,5,5,4,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5]},\"tests\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.909090909090909,\"family\":[{\"_id\":\"433u4ZLXjR6DnNhnK\",\"language\":\"cpp\"},{\"_id\":\"HtruskPio7ricRvuG\",\"language\":\"java\"},{\"_id\":\"aR66JfnFDXod5FpbS\",\"language\":\"javascript\"},{\"_id\":\"idn3TgAbabaaCt8na\",\"language\":\"php\"},{\"_id\":\"ojTbScdCu9DQ6MCEa\",\"language\":\"python3\"},{\"_id\":\"kNmYnTdEz4LZRMb3D\",\"language\":\"ruby\"},{\"_id\":\"kysZPEy8EAXb74qYn\",\"language\":\"swift\"}]}}"]