a["{\"msg\":\"result\",\"id\":\"518\",\"result\":{\"_id\":\"gBNu2G5Lk5iv22pye\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n\\tpublic static String convert(String deg) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":2.075268817204301,\"familyId\":\"YBQ5GieCskD67uSoK\",\"instructions\":\"Create a function that converts Celsius to Fahrenheit and vice versa.\\n\\n### Examples\\n```\\nconvert(\\\"35*C\\\") ➞ \\\"95*F\\\"\\n\\nconvert(\\\"19*F\\\") ➞ \\\"-7*C\\\"\\n\\nconvert(\\\"33\\\") ➞ \\\"Error\\\"\\n```\\n\\n### Notes\\n- Round to the nearest integer.\\n- If the input is incorrect, return `\\\"Error\\\"`.\\n- For the formulae to convert back and forth, check the **Resources** tab.\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(\\\"95*F\\\", Challenge.convert(\\\"35*C\\\"));\\n  }\\n\\n\\t@Test\\n  public void test2() {\\n    assertEquals(\\\"64*F\\\", Challenge.convert(\\\"18*C\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(\\\"-18*C\\\", Challenge.convert(\\\"0*F\\\"));\\n  }\\n\\n\\t@Test\\n  public void test4() {\\n    assertEquals(\\\"212*F\\\", Challenge.convert(\\\"100*C\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(\\\"21*C\\\", Challenge.convert(\\\"69*F\\\"));\\n  }\\n\\n\\t@Test\\n  public void test6() {\\n    assertEquals(\\\"318*F\\\", Challenge.convert(\\\"159*C\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(\\\"-40*F\\\", Challenge.convert(\\\"-40*C\\\"));\\n  }\\n\\n\\t@Test\\n  public void test8() {\\n    assertEquals(\\\"-40*C\\\", Challenge.convert(\\\"-40*F\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test9() {\\n    assertEquals(\\\"61*F\\\", Challenge.convert(\\\"16*C\\\"));\\n  }\\n\\n\\t@Test\\n  public void test10() {\\n    assertEquals(\\\"932*F\\\", Challenge.convert(\\\"500*C\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test11() {\\n    assertEquals(\\\"Error\\\", Challenge.convert(\\\"33\\\"));\\n  }\\n\\n\\t@Test\\n  public void test12() {\\n    assertEquals(\\\"-7*C\\\", Challenge.convert(\\\"19*F\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test13() {\\n    assertEquals(\\\"185*F\\\", Challenge.convert(\\\"85*C\\\"));\\n  }\\n\\n\\t@Test\\n  public void test14() {\\n    assertEquals(\\\"32*F\\\", Challenge.convert(\\\"0*C\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test15() {\\n    assertEquals(\\\"969*C\\\", Challenge.convert(\\\"1777*F\\\"));\\n  }\\n\\n\\t@Test\\n  public void test16() {\\n    assertEquals(\\\"-130*F\\\", Challenge.convert(\\\"-90*C\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test17() {\\n    assertEquals(\\\"-9*C\\\", Challenge.convert(\\\"16*F\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test18() {\\n    assertEquals(\\\"356*F\\\", Challenge.convert(\\\"180*C\\\"));\\n  }\\n\\n\\t@Test\\n  public void test19() {\\n    assertEquals(\\\"Error\\\", Challenge.convert(\\\"7K\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test20() {\\n    assertEquals(\\\"38*C\\\", Challenge.convert(\\\"100*F\\\"));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"Create a function that converts Celsius to Fahrenheit and vice versa.\\n\\nExamples\\nconvert(\\\"35C\\\") ➞ \\\"95F\\\"\\n\\nconvert(\\\"19F\\\") ➞ \\\"-7C\\\"\\n\\nconvert(\\\"33\\\") ➞ \\\"Error\\\"\\n\\nNotes\\nRound to the nearest integer.\\nIf the input is incorrect, return \\\"Error\\\".\\nFor the formulae to convert back and forth, check the Resources tab.\",\"tags\":[\"algorithms\",\"numbers\",\"math\",\"control_flow\"],\"timestamp\":{\"$date\":1567991891949},\"title\":\"Temperature Converter\",\"stats\":{\"completed\":{\"total\":106,\"ratings\":[2,2,2,2,2,2,2,2,2,2,0,0,2,1,2,0,5,2,2,2,3,3,1,0,2,3,2,4,3,3,2,1,1,3,2,0,2,3,2,1,2,3,2,2,1,2,1,3,3,2,2,3,3,4,2,2,2,2,1,3,3,2,4,3,2,2,2,2,2,2,3,3,2,2,3,1,2,0,1,3,2,1,3,2,2,1,2,3,3,3,1,3,1],\"rators\":[\"BkPgkDQGHm66X4Qai\",\"8J2Dqqz9PaFufQzwY\",\"rehehi2Tr2mwaEoJE\",\"3KjxQu9RZ8ZSywvLz\",\"J9zJq7PMGb6mqzcHW\",\"Es4eX2stRpyoXeC7f\",\"vRXuYYBNuHEQ29fbm\",\"AyrEvM2GLX2jqM772\",\"HsFc9PgmpP2X9Fwh9\",\"hB5mgzMwQSnhBzi7P\",\"Kso7rzAKB4TTCPKgM\",\"TrquEHytntLKHA4m2\",\"FJzZTZo7CmAyN5ajr\",\"5seiNqw6ZXoF2GRRd\",\"fZjkX29nhRTWWb75k\",\"jyoLggHk8xQKZuoQC\",\"8zZ6xmzpiFair25qr\",\"waz46PhT8QwnTWMBR\",\"9RjPxa9gtAe8Rspre\",\"ujER6DyJuNvH7EMSR\",\"Wf7nCHS4Gq5tx659h\",\"cjxsqXfkAPoadmppi\",\"WZujpe8yQAyZmpWHg\",\"etoSR23iELGGgs9rA\",\"Juh3MsuqdQjMvQmuw\",\"z5CKFRAYkNbEZomHG\",\"pBMXMQem6BpSeooYT\",\"xYhWQsAiu4QiyjGMx\",\"imoNrk36ozReP939p\",\"LTxPfYyzLtPRZhFvR\",\"82weQfHHmno4Mq4X7\",\"htXCitorobtqYymjN\",\"3y5tFL62qdCLw99zS\",\"k63LjKkX5p7SYng7C\",\"4RsakkyRXyYGwFxEa\",\"9pCPyhvQmbkWyD2LL\",\"nzmGPn6f2ceHnqFPE\",\"RtGQTJYN5ToH3pnGT\",\"FnjedpdLv8QskqNQj\",\"vZnqZqAz3vxZnQaNE\",\"8yyfRwCsP5ovSFT5p\",\"Bdho2WnsER6awbbEM\",\"rvojHhKH3DaxotefQ\",\"R8YWhHoXoasSsLJs4\",\"TF56N5G8CGnCTy23E\",\"GamaMNrnhrjj5tXTx\",\"5p6bwXayfAp7Y4WQ7\",\"87otmbdqNT3bHsQFu\",\"j428nMyNKY8g2dcCi\",\"qraDA47Ewou5mzvrL\",\"HDNfL5LCyDBBx58qy\",\"sJaSeR649EEMX9F4v\",\"kiRkuN7JXqvWBa4SG\",\"Ym8AjbKGSJooun3nt\",\"azAzSkvJd7eyXY9x9\",\"6kz7jjJS8W4tikYQT\",\"QTxZPwJg5GPmgpGFH\",\"iN2eQoEbsJ6XRL5Np\",\"gXTAie79kiw28tx5u\",\"oRi93mrm7DLdeiFjf\",\"yXGiiSAR5nBHnH3yr\",\"mQKWauR6b252TmdX4\",\"jXTnL3JatkKjoifyb\",\"zGzQoSwgdwDi299KG\",\"hD6sfDtntpqT8NR2o\",\"sgKJeTKjP9Y94CEAP\",\"atTPXmXdX86EWdF65\",\"2QpQKbJFAcJhuEzHL\",\"oMZovHkR6QqNvQwyc\",\"8qNSPHZBpmjSTt3tH\",\"chpshc6JsfpbEMThx\",\"buX4mCQhtXCfBjeno\",\"zwvtLXprhAPo9Ln79\",\"xEX3TDY6C2h82dJTn\",\"rhS8qXRjZcpDXkwnE\",\"jCjCvyhqhpebkJn34\",\"a49eNnfRwSMxsDJXf\",\"xW9nC9h6p77YT2iso\",\"sxci7DYKNa6q22Sjq\",\"KMR6vNzvSKMA2cXnK\",\"wFRLGjA56kj7xyhmv\",\"DmfS648aGGhQwkpoZ\",\"F88hziJhJA7k4Gx2W\",\"rWhXHhzF4W8bea6LP\",\"PFn4mc8BuavixoPGS\",\"evq99nYD69bpbFG9f\",\"D2G6Z2sbZRjXjxiyo\",\"Bv4EhvviTn9ynxu2c\",\"WFiKrYeEs4bKFBcFR\",\"KnJsGtPq4McAfr23H\",\"FxPDKKibxnZjGJLs6\",\"unqzSsxpxj9sZ7rbD\",\"uw47663LqPME8btaA\"],\"quality\":[3,1,5,4,5,4,3,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"isHidden\":false,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":3.888888888888889,\"family\":[{\"_id\":\"N4h5rzEYxNnmmqhSB\",\"language\":\"cpp\"},{\"_id\":\"gBNu2G5Lk5iv22pye\",\"language\":\"java\"},{\"_id\":\"9CNJtMXaw2K5NwMLJ\",\"language\":\"javascript\"},{\"_id\":\"pSrCZFim6Y8HcS9Yc\",\"language\":\"python3\"},{\"_id\":\"z5MWDPmiQBCWY5ZxT\",\"language\":\"ruby\"}]}}"]