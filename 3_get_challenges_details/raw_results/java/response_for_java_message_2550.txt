a["{\"msg\":\"result\",\"id\":\"830\",\"result\":{\"_id\":\"Zg5gHdtBMx2knzrdE\",\"author\":\"nihiltres\",\"authorId\":\"htXCitorobtqYymjN\",\"code\":\"public class Challenge {\\n\\tpublic static int sum() {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":3.875,\"editorId\":\"htXCitorobtqYymjN\",\"familyId\":\"2bibZsQFfN6HBic9Z\",\"instructions\":\"Create a function that takes an array of strings of arbitrary dimensionality (`String[]`, `String[][]`, `String[][][]`, etc) and returns the sum of every separate number in each string in the array.\\n\\n### Examples\\n```\\nsum({\\\"1\\\", \\\"five\\\", \\\"2wenty\\\", \\\"thr33\\\"}) ➞ 36\\n\\nsum({\\n  {\\\"1X2\\\", \\\"t3n\\\"},\\n  {\\\"1024\\\", \\\"5\\\", \\\"64\\\"}\\n}) ➞ 1099\\n\\nsum({\\n  {\\n    {\\\"0\\\", \\\"0x2\\\", \\\"z3r1\\\"},\\n    {\\\"1\\\", \\\"55a46\\\"}\\n  },\\n  {\\n    {\\\"1\\\", \\\"2\\\", \\\"4\\\"},\\n    {\\\"0x5fp-2\\\", \\\"nine\\\", \\\"9\\\"},\\n    {\\\"4\\\", \\\"4\\\", \\\"4\\\"}\\n  },\\n  {\\n    {\\\"03\\\"}\\n  },\\n  {}\\n}) ➞ 142\\n```\\n\\n### Notes\\n- Numbers in strings can be negative, but will all be base-10 integers.\\n- Negative numbers may directly follow another number.\\n- The hyphen-minus character (\\\"-\\\") does not only occur in numbers.\\n- Arrays may be ragged or empty.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n\\t@Test\\n\\tpublic void test1() {\\n\\t\\tassertEquals(36, Challenge.sum(\\n\\t\\t\\tnew String[]{\\\"1\\\", \\\"five\\\", \\\"2wenty\\\", \\\"thr33\\\"}\\n\\t\\t));\\n\\t}\\n\\n  @Test\\n\\tpublic void test2() {\\n\\t\\tassertEquals(1099, Challenge.sum(\\n\\t\\t\\tnew String[][]{\\n\\t\\t\\t\\t{\\\"1X2\\\", \\\"t3n\\\"},\\n\\t\\t\\t\\t{\\\"1024\\\", \\\"5\\\", \\\"64\\\"}\\n\\t\\t\\t}\\n\\t\\t));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test3() {\\n\\t\\tassertEquals(142, Challenge.sum(\\n\\t\\t\\tnew String[][][]{\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t{\\\"0\\\", \\\"0x2\\\", \\\"z3r1\\\"},\\n\\t\\t\\t\\t\\t{\\\"1\\\", \\\"55a46\\\"}\\n\\t\\t\\t\\t},\\n    \\t\\t{\\n\\t\\t\\t\\t\\t{\\\"1\\\", \\\"0b2\\\", \\\"4\\\"},\\n\\t\\t\\t\\t\\t{\\\"0x5fp-2\\\", \\\"nine\\\", \\\"09\\\"},\\n\\t\\t\\t\\t\\t{\\\"4\\\", \\\"4\\\", \\\"4\\\"}\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t{\\\"03\\\"}\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{}\\n\\t\\t\\t}\\n\\t\\t));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test4() {\\n\\t\\tassertEquals(3, Challenge.sum(\\n\\t\\t\\tnew String[][][][][][][][][][][][][][][][]{\\n\\t\\t\\t\\t{{{{{{{{{{{{{{{\\\"-1\\\", \\\"1\\\"}, {\\\"3\\\"}, {\\\"\\\"}, {}}}}}}}}}}}}}}}\\n\\t\\t\\t}\\n\\t\\t));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test5() {\\n\\t\\tassertEquals(0, Challenge.sum(\\n\\t\\t\\tnew String[][][][][][][][][][][][][][][][]{\\n\\t\\t\\t\\t{{{{{{{{{{{{{{{}}}}}}}}}}}}}}}\\n\\t\\t\\t}\\n\\t\\t));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test6() {\\n\\t\\tassertEquals(-96, Challenge.sum(\\n\\t\\t\\tnew String[][][][][][]{\\n\\t\\t\\t\\t{{{{{\\\"-32-64\\\", \\\"a-zA-Z\\\"}, {\\\"01-1\\\"}}}}}\\n\\t\\t\\t}\\n\\t\\t));\\n\\t}\\n}\",\"language\":\"java\",\"stats\":{\"completed\":{\"ratings\":[5,5,5,5,5,3,5,1,3,5,4,2,2,4,5,3],\"rators\":[\"htXCitorobtqYymjN\",\"TrquEHytntLKHA4m2\",\"rehehi2Tr2mwaEoJE\",\"k63LjKkX5p7SYng7C\",\"Es4eX2stRpyoXeC7f\",\"vTMyc3otxo9jPDpTZ\",\"gXTAie79kiw28tx5u\",\"WqFW3SDvjaxNPdtcB\",\"a777e8chPvJkY3tKa\",\"p22yLbgtHim2rJxrE\",\"MpcWxeeqQkfbnp5PY\"],\"total\":13,\"quality\":[]},\"flags\":0},\"summary\":\"Create a function that takes an array of strings of arbitrary dimensionality (String], String[, String[], etc) and returns the sum of every separate number in each string in the array.\\n\\nExamples\\nsum({\\\"1\\\", \\\"five\\\", \\\"2wenty\\\", \\\"thr33\\\"}) ➞ 36\\n\\nsum({\\n  {\\\"1X2\\\", \\\"t3n\\\"},\\n  {\\\"1024\\\", \\\"5\\\", \\\"64\\\"}\\n}) ➞ 1099\\n\\nsum({\\n  {\\n    {\\\"0\\\", \\\"0x2\\\", \\\"z3r1\\\"},\\n    {\\\"1\\\", \\\"55a46\\\"}\\n  },\\n  {\",\"tags\":[\"language_fundamentals\",\"objects\",\"recursion\",\"arrays\"],\"timestamp\":{\"$date\":1595220814876},\"title\":\"Deep Arithmetic\",\"quality\":0,\"family\":[{\"_id\":\"Zg5gHdtBMx2knzrdE\",\"language\":\"java\"},{\"_id\":\"E8WcotHKRGfYodchW\",\"language\":\"javascript\"},{\"_id\":\"FgAsxMCaEzvKhnuAH\",\"language\":\"python3\"}]}}"]