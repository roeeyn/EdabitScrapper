a["{\"msg\":\"result\",\"id\":\"774\",\"result\":{\"_id\":\"Mgrj26S3LwM8CLAdL\",\"author\":\"Edward Clark\",\"authorId\":\"3pdgguqZgNDSAJSGm\",\"code\":\"public class Challenge {\\n  public static String isValid(String str) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":3.234042553191489,\"editorId\":\"3pdgguqZgNDSAJSGm\",\"familyId\":\"W4wK2qCR7tD8NdXDF\",\"instructions\":\"Sherlock considers a string to be valid if all characters of the string appear the same number of times. It is also valid if he can remove just 1 character at 1 index in the string, and the remaining characters will occur the same number of times. Given a string `str`, determine if it is valid. If so, return `\\\"YES\\\"`, otherwise return `\\\"NO\\\"`.\\n\\nFor example, If `str = \\\"abc\\\"`, the string is valid because the frequencies of characters are all the same.  If `str = \\\"abcc\\\"`, the string is also valid, because we can remove 1 \\\"c\\\" and have one of each character remaining in the string.  However, if `str = \\\"abccc\\\"`, the string is not valid, because removing one character does not result in the same frequency of characters.\\n\\n### Examples\\n```\\nisValid(\\\"aabbcd\\\") ➞ \\\"NO\\\"\\n// We would need to remove two characters, both c and d  -> aabb or a and b -> abcd, to make it valid.\\n// We are limited to removing only one character, so it is invalid.\\n\\nisValid(\\\"aabbccddeefghi\\\") ➞ \\\"NO\\\"\\n// Frequency counts for the letters are as follows:\\n// {\\\"a\\\": 2, \\\"b\\\": 2, \\\"c\\\": 2, \\\"d\\\": 2, \\\"e\\\": 2, \\\"f\\\": 1, \\\"g\\\": 1, \\\"h\\\": 1, \\\"i\\\": 1}\\n// There are two ways to make the valid string:\\n// Remove 4 characters with a frequency of 1: {f, g, h, i}.\\n// Remove 5 characters of frequency 2: {a, b, c, d, e}.\\n// Neither of these is an option.\\n\\nisValid(\\\"abcdefghhgfedecba\\\") ➞ \\\"YES\\\"\\n// All characters occur twice except for e which occurs 3 times.\\n// We can delete one instance of e to have a valid string.\\n```\\n\\n### [Video Description & Solution](https://youtu.be/ArkNCYaRde4)\",\"isFree\":false,\"isHidden\":false,\"lab\":\"/**\\n *\\n * @author edwardclark\\n */\\nimport static org.hamcrest.core.Is.is;\\nimport org.junit.Test;\\nimport static org.junit.Assert.assertThat;\\n\\npublic class ChallengeTest {    \\n    @Test\\n    public void test1() {\\n        assertThat(Challenge.isValid(\\\"aabbccddeefghi\\\"), is(\\\"NO\\\"));\\n    }\\n    @Test\\n    public void test2() {\\n        assertThat(Challenge.isValid(\\\"aabbcd\\\"), is(\\\"NO\\\"));           \\n    }\\n    @Test\\n    public void test3() {\\n        assertThat(Challenge.isValid(\\\"abcdefghhgfedecba\\\"), is(\\\"YES\\\"));           \\n    } \\n    @Test\\n    public void test4() {\\n        assertThat(Challenge.isValid(\\\"abc\\\"), is(\\\"YES\\\"));           \\n    }      \\n    @Test\\n    public void test5() {\\n        assertThat(Challenge.isValid(\\\"abcc\\\"), is(\\\"YES\\\"));            \\n    } \\n    @Test\\n    public void test6() {\\n        assertThat(Challenge.isValid(\\\"abccc\\\"), is(\\\"NO\\\"));            \\n    }   \\n}\",\"language\":\"java\",\"stats\":{\"completed\":{\"ratings\":[4,4,4,4,4,4,1,5,3,2,2,3,4,3,2,5,2,3,3,4,5,5,0,3,4,2,2,5,5,3,5,5,0,0,5,3,3,4,2,3,3,3,4,2,5,3,2],\"rators\":[\"3pdgguqZgNDSAJSGm\",\"rehehi2Tr2mwaEoJE\",\"TrquEHytntLKHA4m2\",\"JQGw9jsJPEasdwhNJ\",\"GSts5JvHWejsPgfEd\",\"2PR653L4KSN97r534\",\"ePioboaTtHBoYMPE7\",\"ZwGNXSMAER9XjKsFZ\",\"AjzZS7MouArr5Zgdh\",\"5WQZzuHZBGqFeNQi3\",\"jyoLggHk8xQKZuoQC\",\"GoPyN7LaxcbcnwKq9\",\"SfhMTK5ykctdKbCSp\",\"jvPmRfcxMNSkskRSg\",\"QS45qu2DFXcCqpAnB\",\"oBCStgAyNK7z8C4WA\",\"tN9TQx9q5AQJEQZD5\",\"Es4eX2stRpyoXeC7f\",\"zKdb3cDytehHruckw\",\"QXR2qGcvrK5Xkxdea\",\"m6EqR6FY65MGzo7vb\",\"FE3GAhxNSKRR2ti3i\",\"KooD342x6eT6YiQn8\",\"ecyYaPZLMBMGGrfrJ\",\"bGZhHGbf7tzCJFBAH\",\"87Q3XMWaxYqQfFJzm\",\"x3WsGCnE38anLjJqh\",\"DkSMZ3jZLkwviKb9g\",\"TJzaQEP7FtYyM2RZf\",\"YT7Sqaesgvab6GW9y\",\"tM23YkTThh5DFiKnq\",\"iq55QasecYJXKz8rx\",\"pNtaczpPBxfN5Z9ee\",\"dfQntx8ifmHPs6xYj\",\"nHj7SC5cnmkTApbgY\",\"XTuxCoKrN9DZ7zaQx\",\"p22yLbgtHim2rJxrE\",\"HsFc9PgmpP2X9Fwh9\",\"cqLEjfmmutsrc6KXZ\",\"LNCb5rksJLJ43L4Nw\",\"6G4feiT2AjsE57F3m\",\"rhS8qXRjZcpDXkwnE\",\"GvLLKHi7NwAjutdDk\",\"rauwH7yancr84Lris\",\"dGJhADFMNr9is6GRP\",\"hN5hfgBocCJuBeBo8\",\"qg94wqTGMA6K5Caj3\",\"sxci7DYKNa6q22Sjq\",\"FqM5LAu594mH3Hdir\",\"uw47663LqPME8btaA\",\"KMR6vNzvSKMA2cXnK\",\"s5fyweTKL8nMiNbf4\",\"B46GRBJmNSejfkiW7\"],\"total\":59,\"quality\":[5,5,5,5,4,2,4,5,5,5,5]},\"flags\":0},\"summary\":\"Sherlock considers a string to be valid if all characters of the string appear the same number of times. It is also valid if he can remove just 1 character at 1 index in the string, and the remaining characters will occur the same number of times. Given a string str, determine if it is valid. If so, return \\\"YES\\\", otherwise return \\\"NO\\\".\\n\\nFor example, If str = \\\"\",\"tags\":[\"algorithms\",\"strings\",\"validation\"],\"timestamp\":{\"$date\":1592143603239},\"title\":\"Sherlock and the Valid String\",\"quality\":4.545454545454546,\"family\":[{\"_id\":\"CEsNg38svzLP4iG8E\",\"language\":\"cpp\"},{\"_id\":\"Mgrj26S3LwM8CLAdL\",\"language\":\"java\"},{\"_id\":\"WtECAHJYzoXKy9m4v\",\"language\":\"javascript\"},{\"_id\":\"738WMYrYWPXeBgzFs\",\"language\":\"python3\"},{\"_id\":\"HYbjNex286x3Snn3Q\",\"language\":\"ruby\"}]}}"]