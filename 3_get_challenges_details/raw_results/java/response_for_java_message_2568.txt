a["{\"msg\":\"result\",\"id\":\"839\",\"result\":{\"_id\":\"zARWST6dTceWpoeA7\",\"author\":\"_fluffyy\",\"authorId\":\"foytX6kH9wiSYqLtT\",\"code\":\"import java.lang.reflect.Field;\\npublic final class Challenge {\\n  public static int getSecretVar(NonSuspiciousObject obj) {\\n\\treturn obj.secretVar;   // this will fail\\n  }\\n}\",\"difficulty\":4.363636363636363,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"hnRSJftaFwRPteMmL\",\"instructions\":\"Given an instance of the `NonSuspiciousObject` class, return its `secretVar` attribute.\\n\\n### Examples\\n```\\ngetSecretVar(new NonSuspiciousObject(9)) ➞ 9\\n\\ngetSecretVar(new NonSuspiciousObject(31)) ➞ 31\\n\\ngetSecretVar(new NonSuspiciousObject(-497)) ➞ -497\\n```\\n\\n### Notes\\n- **The `secretVar` attribute is private!**\\n- The tests are randomized; the challenge isn't to reverse engineer the PRNG.\\n- The import statement at the top of the \\\"Code\\\" tab should give you a hint.\\n- If you're stuck, try looking at the docs for the imported class mentioned above — it has some handy methods! ;)\",\"isFree\":false,\"isHidden\":false,\"lab\":\"import static org.junit.Assert.assertEquals;\\nimport org.junit.Test;\\nimport java.util.Random;\\npublic final class Tests {\\n  private static final Random rand = new Random();   @Test public void test1()\\n  { runTest(); }                                    @Test public void test2()\\n  { runTest(); }                                    @Test public void test3()\\n  { runTest(); }                                    @Test public void test4()\\n  { runTest(); }                                    @Test public void test5()\\n  { runTest(); }\\n  private static void runTest() {\\n\\tint value = rand.nextInt();\\n\\tassertEquals(value, Challenge.getSecretVar(new NonSuspiciousObject(value)));\\n  }\\n}\\nfinal class NonSuspiciousObject {\\n  private final int secretVar;\\n  NonSuspiciousObject(int value) {\\n\\tsecretVar = value;\\n  }\\n}\",\"language\":\"java\",\"quality\":0,\"stats\":{\"completed\":{\"ratings\":[5,5,5,5,5,5,3,5,3,3,4],\"quality\":[],\"rators\":[\"foytX6kH9wiSYqLtT\",\"Es4eX2stRpyoXeC7f\",\"7YbGHKwApShJ7J4NK\",\"XbbcA7iXFz9y2XneB\",\"ujjoxHz9QrhnmH7ok\",\"htXCitorobtqYymjN\"],\"total\":8},\"flags\":0},\"summary\":\"Given an instance of the NonSuspiciousObject class, return its secretVar attribute.\\n\\nExamples\\ngetSecretVar(new NonSuspiciousObject(9)) ➞ 9\\n\\ngetSecretVar(new NonSuspiciousObject(31)) ➞ 31\\n\\ngetSecretVar(new NonSuspiciousObject(-497)) ➞ -497\\n\\nNotes\\nThe secretVar attribute is private!\\nThe tests are randomized; the challenge isn't to reverse engineer the PRNG.\\nThe\",\"tags\":[\"language_fundamentals\",\"objects\"],\"timestamp\":{\"$date\":1612650503511},\"title\":\"It's a Secret... or is it?\",\"family\":[{\"_id\":\"zARWST6dTceWpoeA7\",\"language\":\"java\"}]}}"]