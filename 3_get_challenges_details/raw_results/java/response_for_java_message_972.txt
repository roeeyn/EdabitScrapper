a["{\"msg\":\"result\",\"id\":\"46\",\"result\":{\"_id\":\"b3wgTSBnd2HH44qzr\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class Numeric { \\n\\tpublic static int returnNegative(int n) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":0.4362934362934363,\"familyId\":\"q5Bp4cxk7EinT4GAA\",\"instructions\":\"Create a function that takes a number as an argument and returns negative of that number. Return negative numbers without any change.\\n\\n### Examples\\n```\\nreturnNegative(4) ➞ -4\\n\\nreturnNegative(5) ➞ -5\\n\\nreturnNegative(-54) ➞ -54\\n\\nreturnNegative(0) ➞ 0\\n```\\n\\n### Notes\\nN/A\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"/** \\n================================== \\nTestGen 3.1 for JUnit 4.13.0 \\t\\t\\nTest Case: Numeric::returnNegative \\nTimestamp: 02/08/2021 08:55:28 PM \\n---------------------------------- \\n® DARKKO 2021 © \\n================================== \\n\\n**/ \\n\\nimport static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class NumericTest { \\n\\t\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertEquals(-5, Numeric.returnNegative(-5));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertEquals(-54, Numeric.returnNegative(54));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertEquals(-46, Numeric.returnNegative(46));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertEquals(-4, Numeric.returnNegative(-4));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertEquals(-15, Numeric.returnNegative(15));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertEquals(-466, Numeric.returnNegative(466));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertEquals(-544, Numeric.returnNegative(544));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertEquals(0, Numeric.returnNegative(0));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test09() { \\n\\t\\tassertEquals(-666, Numeric.returnNegative(-666));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test10() { \\n\\t\\tassertEquals(-12, Numeric.returnNegative(-12));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test11() { \\n\\t\\tassertEquals(-13, Numeric.returnNegative(13));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test12() { \\n\\t\\tassertEquals(-17, Numeric.returnNegative(17));\\n\\t}\\n\\n}\\n// end of tests\",\"language\":\"java\",\"quality\":4.733333333333333,\"summary\":\"Create a function that takes a number as an argument and returns negative of that number. Return negative numbers without any change.\\n\\nExamples\\nreturnNegative(4) ➞ -4\\n\\nreturnNegative(5) ➞ -5\\n\\nreturnNegative(-54) ➞ -54\\n\\nreturnNegative(0) ➞ 0\\n\\nNotes\\nN/A\",\"tags\":[\"numbers\",\"logic\",\"language_fundamentals\"],\"timestamp\":{\"$date\":1609409268681},\"title\":\"Return Negative\",\"stats\":{\"completed\":{\"total\":332,\"ratings\":[0,0,0,0,0,0,0,2,0,1,2,0,0,0,2,0,1,5,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,1,0,0,0,1,0,1,1,1,1,0,1,0,0,0,1,0,1,0,0,1,0,0,0,0,1,2,0,3,0,0,1,1,0,0,0,0,0,0,0,1,1,0,1,1,0,0,1,0,1,0,1,0,2,0,4,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,3,1,0,1,0,1,0,0,0,0,5,0,0,0,0,1,0,1,0,0,0,0,1,0,1,0,0,1,2,0,0,0,1,0,0,0,0,0,1,1,0,0,1,2,0,0,1,1,1,0,0,0,0,0,0,0,1,1,0,0,3,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,2,0,3,0,0,1,0,0,1,0,0,0,0,1,0,2,1,1,0,1,1,0,1,0,0,2,0,2,0,0,1,0,0],\"quality\":[5,3,5,4,5,5,5,3,5,5,5,4,5,5,5,5,1,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5],\"rators\":[\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"qBYWPmNdKArYXXtLp\",\"m9XYc82QWBnegoazy\",\"mDs8c5YJqkMm2ogav\",\"bkq5d5i759SM49gi9\",\"A3KrxZk4FiSymY6f2\",\"2cdvd8yuPLSwvGj9w\",\"cp3X8hk8yNME7qoD9\",\"xNjawjFBJqZ8jvbWQ\",\"a49eNnfRwSMxsDJXf\",\"LCuvvWMwiGuqTwNRi\",\"tuD6GTaiyfWm87uvh\",\"9gx3GGfLHWJXKRHDo\",\"hhxjQREtmHSheH9Pj\",\"PJu3WcTpfRrvHfQiS\",\"oMZovHkR6QqNvQwyc\",\"gBGjCfJvPHswDM5JQ\",\"buX4mCQhtXCfBjeno\",\"uFfEio8nzDvL8emhp\",\"J7epB3qSQJ2E8vWkY\",\"btabi3PdyisuY5tn9\",\"8WeJLyNE4h6nJ2dNh\",\"AeJSxRqw2dJZuGvdk\",\"Wi4H6ayKsNDWWQCG5\",\"srJ34BaybkQh3qRkM\",\"pi76g3eRpnKrhee2a\",\"jyoLggHk8xQKZuoQC\",\"mHZz7EeGdk23dBpzT\",\"6iY9kWea8jBRxWG3X\",\"oEfHwicCdt946rTWY\",\"LvPcgns5Ec7wyMbMv\",\"EcBw39vkywQsT3Y2Z\",\"ovJ6ynryyzPJdKmjd\",\"QRv96jmNaYsWkxQEG\",\"NBjzJieP4mm4WjEwj\",\"Q7fQT4XeoY23TpkW7\",\"vRXuYYBNuHEQ29fbm\",\"hSGA99ySG5ePGK7CJ\",\"wRttWTM59y8m5mx7x\",\"3SgSNoAB3sxaYeT3w\",\"NioGGZL9KCn5Ln96t\",\"nvzRzs5w4qs79Xj2a\",\"JzzNCzWjcGrqDdAd5\",\"tejkzX5N5NeBgjdke\",\"Tz6J73FvF3XRXiiKf\",\"Nb6LYPoQP6KJZt8mz\",\"gAy3PaMpC5gjDZhKh\",\"SKTYTeXewoF7uJwda\",\"8BFSTCnoe2QggN64c\",\"HCfkcKnPs9mrJojdG\",\"5TaPWyRv9DZWWodp8\",\"NXtM3si2K3i4DySMn\",\"u4GWb92ZGsYg9zzxF\",\"DovtrH78NMjjpDNGg\",\"yDBK5DJ9jgu8ugXdB\",\"u6KspJ68EjcR5RF6x\",\"umE8dRTGWzrZFp755\",\"RSombfrtxS5PSXnyJ\",\"82weQfHHmno4Mq4X7\",\"b6PEkvr66YeCamroN\",\"TWhtuegb8G7ka3Tvg\",\"kiq3z4o9ABhQd7aXJ\",\"8QYNFnSwFGmRRacAT\",\"YcCLwitFMAEJSnxAW\",\"ZqjP4M6dzu32To33K\",\"u5jLXaWAKo7K4JvTR\",\"Yp7uvStL97cC9fKkY\",\"YuA7rdrQTzpfFLGJq\",\"6MgG8N9rkmAZKYrJ3\",\"3h5dGS6W8akioYnWD\",\"x9CWxL7Q7yCHdrAmq\",\"zkHMTSGrJ8BEKReYE\",\"Z6uSgpQu7xhA7qHh9\",\"GkYtSbQuheBF4Enys\",\"XNgW94PSq5kkXhojm\",\"w2rPvPbskuhndnDRG\",\"FSSM3xcaTXGcxqYGz\",\"kYWb8BwpKwunQkxeX\",\"bkydB65DMkNNNmznA\",\"fi6Drmv5pdGcbAEYM\",\"98499DDQYDLiQSxkK\",\"z6KN9CFWcS7qjAxwv\",\"cwwW2amYGZMkYwAxM\",\"r9htEy7di6YK7gu8v\",\"sYKPxZX5xJZ2GTp6Q\",\"Xc4m9Hst8SgXswpTh\",\"dqMnG8xEhhtCPoGEj\",\"C9gr57CeoaozSvXYy\",\"H469XosMjfNu8Fop7\",\"dD3Aja8PZSMXMFSDY\",\"i5iePG5GqhJJ8HEoB\",\"QgGGow8Ynnq2YkGXX\",\"owyG9e6x47Qzv8ASo\",\"yb8T3nuL4evaeJW6k\",\"yP8W3BqRnnwuZjiFJ\",\"8jpeC6HwxGq68WPma\",\"c96gH88NsjR3MycAj\",\"fdyejapW3NWN7utPX\",\"xEX3TDY6C2h82dJTn\",\"SY5wqJS9RJYYMJ6sy\",\"MYaqDq32HkAjdYEbo\",\"F4JPXKWNJpPjuCFAn\",\"8Krfb7YcocdPHB7gP\",\"ScYoZtxALtkZXKLo4\",\"SbDRsLR6yfZXETyKN\",\"JjHoGWfzGBLKo8jTg\",\"zrk4J9JseJSk5i7nG\",\"4ySzqKC5s3ZRpG9di\",\"TrquEHytntLKHA4m2\",\"y6kfyYmydcD8tkBk7\",\"cXaojnX4FS2XbDeMy\",\"mDWNyaaQ9hvPCRzSd\",\"s2Y76rR2h2fPKibsK\",\"CtcMetTXaFgX6Evvf\",\"N8WRBtQhtoqroCHh9\",\"umN7yuemgaF8MLo6x\",\"6rvJwN4mcX7iYGjY7\",\"HdqP6rBFRWXzsGhhb\",\"TqbGoapPogWYjTjyc\",\"hqvExZcs9dqew7Bm2\",\"FEGpESiobxcqjMqF3\",\"t55QWHi8o4teZxqqE\",\"9qoWqLcHGiDX429rE\",\"mkem4awRiMRkZbrFG\",\"2ptN2mhjFwFcHyPZd\",\"5f6oSeq4r5WTXLdCQ\",\"dQd664XYR6QKHFvHW\",\"sYM6qQN6pepWg3B2t\",\"FY8hYj3gS5XKgszKp\",\"EFypyTrBDJhHKx3PA\",\"sYBSqEmJuGmNJJ3J6\",\"M8dQuMrEpP8Hc3tHN\",\"jcPZ5ySXseCB7Ec3x\",\"jtzNdgDCzsekkdpxA\",\"AQSqD9oNv2uPfxZCR\",\"oPNPK8B6u6Rbxx9JG\",\"xxT6dr6je7bsPTqqc\",\"ztrfkKRfYBWokFwkf\",\"5LDvZHCDJqePeBrCg\",\"7oiee7EdL8i6KTpFW\",\"p8hkfoXChHNEFDNbM\",\"khdCaD6AGBiR6txLQ\",\"Bfghe5tAMfEFe8oco\",\"XnKGy6zSYPRaDXdqS\",\"8uZ7BQBFbL7bdjivT\",\"wFRLGjA56kj7xyhmv\",\"HXbTKW3jmmyRAsKrr\",\"HsFc9PgmpP2X9Fwh9\",\"gmWhJEuPq3zcseMTQ\",\"DzLdw6wEL2Nt5mrsp\",\"TCvpT4EPb8qNssNB7\",\"sRPJg9w9sKEyvHRzd\",\"jppr4zWvAWWno7vDF\",\"sxci7DYKNa6q22Sjq\",\"Sbu8b3LfasnQRFhPm\",\"rhS8qXRjZcpDXkwnE\",\"Yohr2MmAyaWGMbB35\",\"3qgJpdhyi4tKuqMdm\",\"3o9xehumCaHZ4upFo\",\"wmSfAsJBA9kaEkDAd\",\"Qv2jEtTnFCXX7cdd3\",\"sEneKbzPrRSstXsDK\",\"2KFmu2sjquKTj6rrD\",\"YRAzEBJoLvSaiPtYx\",\"9RJpt5ec2KMLuac4w\",\"XhzKztoQYYQzZ2c7o\",\"D3ASM3aWpcQ8gvnin\",\"nSLvkGEpiYCtcBLaa\",\"Gn8rShvWCKLX3cxzx\",\"cueHAmTrcWuowXf58\",\"PCsT29KNEX8ufEawi\",\"gZj6HTKJdPGJwPe2D\",\"9WRAZh4hz26oAifhu\",\"uw47663LqPME8btaA\",\"RQTa9rPQ3AboLtdzj\",\"QkuqcYYbQBhnCrrAf\",\"A74BfWasj4b6kZf3p\",\"PAzNgJF54C2mYPkR9\",\"f6CBJntX2RFd2zAjR\",\"iCtBPtyhn5PGqTTcK\",\"i6MDC9kdTmCvtFPy7\",\"zo9MtKnkZegPjXvtP\",\"dChYBBQppDPovNzjz\",\"hF9icm7GxAnAGSjAD\",\"a6QL2MKuP9QuLk3jY\",\"PYtJa46RKyESxNK5W\",\"9moo5f7g8KrZieT2K\",\"e9nWPhbRGEqBsK3p2\",\"p4mQDDJ544WGA5z5M\",\"mAYRXjKDkXauHcATL\",\"Pkp6YEMajsinJAe3B\",\"afvP29FhRou2bTaav\",\"ebuS9KQRLamMCdKJz\",\"mTiQejebRqeCzHdsc\",\"cR3ibTMxLyEdDFCHY\",\"nLz3viEt7RvQA9Y9u\",\"xZDZC6MHWcLJsqTyZ\",\"6KDZNmtgvb6PCaWQE\",\"GyqXoRcaYYQ4xTiPX\",\"HRL484J5ssorZkxWJ\",\"DsydxhadPpp6uEoRd\",\"KErqnAN2cHNmDmP6d\",\"ckQwFFWyLXmDQAaCn\",\"zfyRY2ZoTpJmy6EHu\",\"xuk3BredcNSZEaj25\",\"yGDSvLJXXz5ZmaS4h\",\"pjhf5ZYDnZz9PP8ym\",\"aoB3vhvsrFhwALLm8\",\"qGyhayAwAgpwvK8Kg\",\"K9sQFTWhKP4nkPQcb\",\"JXYvMawaDwnTLuf5F\",\"iceFyx5uEhQ2G3TMh\",\"htXCitorobtqYymjN\",\"DEDniTrstQYGounXT\",\"PwsYPKQ2Z7RicuuAY\",\"aKffMfkHuGunEGWFz\",\"6kB5qypxcm62PHsEJ\",\"g9fi4rz27ZqJcSgTn\",\"KMR6vNzvSKMA2cXnK\",\"7kENXQQ8ABiPGfBRD\",\"FcMu2WPvDobEbWhyr\",\"YrZxRMm5KrrC5bsZa\",\"P7zedbjaFw8YDzLz7\",\"hz99uPCwGhySXWAta\",\"eXQziXGcpwekMyABQ\",\"qpYxX6CkukbmxRaKn\",\"RsujLHaML6L3KinzK\",\"wE4roswN4ggiieGHs\",\"PPdaczxSt2u5cmZYG\",\"svHoRdg5sR9CLzZLC\",\"KBfJFkYQ2RbnYd3hL\",\"qoZrXudcaHo8QLFsj\",\"TWhcGs8Tpt3Gua5Wi\",\"5QN8R22z43SrwoHDz\",\"H3yM3F3mukfdq9fit\",\"GSs7rtv3hBbJA3aCF\",\"QMcxci638CgTJ54bH\",\"pyZG6wgFRiZsSEaTE\",\"mJXSJntigs8bvFjwk\",\"x2Cz7S8rCKJqCE3Xe\",\"s8SC2YJjTMiaeXNvc\",\"dFX3Yavez6WvHKsSA\",\"BADPWDcKtuiJ76NnH\",\"GD9Jqmu93vB4LTT8F\",\"YsodJsnbGjZD2ahyo\",\"5kMuNZuxiFcNRDkG4\",\"ekzGKngknJdSLHM7P\",\"eE8onuEHqLPTk63TS\",\"yX8wtFFJDxJFjdvqJ\",\"FJur4D6hBgTQZqmDQ\",\"hGdKgFgA9CxFSk8bz\",\"unqzSsxpxj9sZ7rbD\",\"gFEpzrgWhzCZHeifj\",\"xLy94bAjaLwokPcZZ\",\"5pSL2QJi2DgohpQYH\",\"w99WfQNYsNAyJRM4C\",\"5HGyJtoZ3AffzAZAv\",\"HuNwBgyGGDPCDrApb\",\"khty3X87bbNXvWQ73\",\"aJQeYG7iAeEQNhRx9\",\"WgEpodYY8Zya5cAQJ\",\"rF97GDLqCgynr7BaD\",\"4iMe865JrPvg2uaqA\",\"B4y8aoyXJtskYPFEL\",\"F8dA24AosSC8XXb7D\",\"9du58gNDkWQEWivbB\",\"GkTeiXSfowYaXTESS\",\"rWhXHhzF4W8bea6LP\",\"3exyrcibvzm6oe8eq\",\"C6prbNbCwgh4GrXdD\",\"7t5k4TzBWCa2iaj7v\",\"28pZTZvXDHtNfcWGv\",\"2mTYrwqEabB4NHPCY\",\"h6q2JS8Mwtk5KoRve\",\"4g29SMjQpkiX5FCQg\",\"YEMQNE333gAXhGE4c\",\"inmhTFEqt5h325MyN\",\"C9LKGu2g5hSijvDzA\",\"iqoFCrHypgAw9qAGX\",\"EDFbQDNWK9kLrpxMz\",\"CPwhzFYmBnrMKygZg\",\"NwczjpfNN8jXy5RF6\",\"gZZYetkt5Sv7ggPYs\",\"PB3nTGxtZYDmYx29L\",\"JDF2epP4JBSvyrHcu\",\"6GmG5otoNYX5qitTR\",\"8imyReZaRJAL8cSxX\",\"FgaXeuBoJFBoDWZGL\",\"2ZWbj8vSRi5J8JyKe\",\"bCruaEbKiLzqK2Bj9\",\"94XQj7wutz9ySewYC\",\"CipspuHopXSNosuq3\",\"AoWRbyAGwoieTHmqN\",\"t77eTffGopk7MkEZ4\",\"aJLTQjSMpFy6dvom5\",\"5eDE9KCDnDnqBqLEK\",\"8L3NX2qHknEWtB7cd\",\"9i67g75x6vQvzPFrh\",\"uw9pWX8KAGuzDh9s7\",\"zMbdCLm68bzp2PKPG\",\"vRfhB7mCKLAFSsPu3\",\"r72oFMcCQh4rBsKHb\",\"bCfH2qFkdw6eG7bst\",\"CHvzhtXnv8HTbPQ56\",\"ckc5sEEpgPPsxPTWp\",\"5SFF2xjZxxwDciGfn\",\"kJMAAWPWEG6qFouEh\",\"3xGMym7YZPeoAjsfz\",\"nFbmNzMQ38TncmfQX\",\"3Gf7ikLijfoxabiPY\",\"vvDJQPfWkyrWkMmJf\",\"bg4G79DdkMaDxXvdv\",\"krYm4tDix6dKg6oWu\"]},\"flags\":0},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"CK8njiYG875azaPZh\",\"language\":\"cpp\"},{\"_id\":\"tYMRxtwDZAeyGnqaL\",\"language\":\"csharp\"},{\"_id\":\"b3wgTSBnd2HH44qzr\",\"language\":\"java\"},{\"_id\":\"iDxwkarcJcmkDA8tq\",\"language\":\"javascript\"},{\"_id\":\"kA4py7cnTuWoYZJmo\",\"language\":\"php\"},{\"_id\":\"j9hv6sXmfvqkicLJC\",\"language\":\"python3\"},{\"_id\":\"mgzvB9JkfraFo3Fwv\",\"language\":\"ruby\"},{\"_id\":\"QgtbbPoHom5dDENpy\",\"language\":\"swift\"}]}}"]