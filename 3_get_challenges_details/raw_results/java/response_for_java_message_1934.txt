a["{\"msg\":\"result\",\"id\":\"525\",\"result\":{\"_id\":\"vuxkHGZg8fuWCivPH\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n  public static boolean canBuild(String str1, String str2) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":2.0795454545454546,\"familyId\":\"6JsARhnCWPJWy6X9T\",\"instructions\":\"Write a function that returns `true` if you can use the letters of the first string to create the second string. Letters are **case sensitive**.\\n\\n### Examples\\n```\\ncanBuild(\\\"aPPleAL\\\", \\\"PAL\\\") ➞ true\\n\\ncanBuild(\\\"aPPleAL\\\", \\\"apple\\\") ➞ false\\n\\ncanBuild(\\\"a\\\", \\\"\\\") ➞ true\\n\\ncanBuild(\\\"aa\\\", \\\"aaa\\\") ➞ false\\n```\\n\\n### Notes\\nLetters in the first string can be used only once.\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(true, Challenge.canBuild(\\\"aPPleAL\\\", \\\"PAL\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(true, Challenge.canBuild(\\\"OAT\\\", \\\"OAT\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(true, Challenge.canBuild(\\\"maybelLINE\\\", \\\"maybe\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(true, Challenge.canBuild(\\\"topsh\\\", \\\"shop\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(true, Challenge.canBuild(\\\"topshSHP\\\", \\\"SHoP\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(true, Challenge.canBuild(\\\"DAISIES\\\", \\\"SAID\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(true, Challenge.canBuild(\\\"ToporP\\\", \\\"porT\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n    assertEquals(true, Challenge.canBuild(\\\"PoTluCK\\\", \\\"PuCK\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test9() {\\n    assertEquals(true, Challenge.canBuild(\\\"pATS\\\", \\\"p\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test10() {\\n    assertEquals(true, Challenge.canBuild(\\\"blah\\\", \\\"\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test11() {\\n    assertEquals(false, Challenge.canBuild(\\\"aPPleAL\\\", \\\"apple\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test12() {\\n    assertEquals(false, Challenge.canBuild(\\\"shortCAKE\\\", \\\"cakey\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test13() {\\n    assertEquals(false, Challenge.canBuild(\\\"maybeLINE\\\", \\\"lINE\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test14() {\\n    assertEquals(false, Challenge.canBuild(\\\"teaPOT\\\", \\\"lINE\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test15() {\\n    assertEquals(false, Challenge.canBuild(\\\"\\\", \\\"a\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test16() {\\n    assertEquals(false, Challenge.canBuild(\\\"a\\\", \\\"aA\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test17() {\\n    assertEquals(false, Challenge.canBuild(\\\"a\\\", \\\"A\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test18() {\\n    assertEquals(false, Challenge.canBuild(\\\"AAAAAA\\\", \\\"AAAAAAa\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test19() {\\n    assertEquals(false, Challenge.canBuild(\\\"apple\\\", \\\"appleY\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test20() {\\n    assertEquals(false, Challenge.canBuild(\\\"xxYYzZ\\\", \\\"zzZxYxY\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test21() {\\n    assertEquals(false, Challenge.canBuild(\\\"abCD\\\", \\\"aBCD\\\"));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"Write a function that returns true if you can use the letters of the first string to create the second string. Letters are case sensitive.\\n\\nExamples\\ncanBuild(\\\"aPPleAL\\\", \\\"PAL\\\") ➞ true\\n\\ncanBuild(\\\"aPPleAL\\\", \\\"apple\\\") ➞ false\\n\\ncanBuild(\\\"shortCAKE\\\", \\\"cakey\\\") ➞ false\\n\\ncanBuild(\\\"a\\\", \\\"\\\") ➞ true\\n\\nNotes\\nN/A\",\"tags\":[\"strings\",\"validation\"],\"timestamp\":{\"$date\":1568089511184},\"title\":\"Ransom Letter\",\"stats\":{\"completed\":{\"total\":111,\"ratings\":[2,2,2,2,2,3,3,3,2,1,3,3,3,0,1,3,3,2,2,0,1,2,1,1,1,2,2,2,1,2,3,3,1,0,1,1,2,3,1,2,2,2,3,3,2,3,3,1,3,2,3,4,3,1,0,2,3,3,3,2,2,3,2,2,2,2,3,2,3,3,2,3,3,1,0,1,2,3,3,2,3,3,2,2,2,2,2,1],\"rators\":[\"3pdgguqZgNDSAJSGm\",\"sxci7DYKNa6q22Sjq\",\"CYt2jTCEuK9dYWruk\",\"fxaS5K7ZXo4FbTe36\",\"J9zJq7PMGb6mqzcHW\",\"r9hHZYPQAqJ9DbwLX\",\"Es4eX2stRpyoXeC7f\",\"TuDy7apLgWD8aQA9s\",\"8J2Dqqz9PaFufQzwY\",\"cjxsqXfkAPoadmppi\",\"imoNrk36ozReP939p\",\"TrquEHytntLKHA4m2\",\"jyoLggHk8xQKZuoQC\",\"RvdjvXACaafw8f5ED\",\"pBMXMQem6BpSeooYT\",\"5seiNqw6ZXoF2GRRd\",\"rvojHhKH3DaxotefQ\",\"rehehi2Tr2mwaEoJE\",\"82weQfHHmno4Mq4X7\",\"k63LjKkX5p7SYng7C\",\"dcW9oK2uRo8h8mBe2\",\"LTxPfYyzLtPRZhFvR\",\"mfm3gB39arY8Rjb2y\",\"9pCPyhvQmbkWyD2LL\",\"JwQviySv63dgkQdhQ\",\"JQGw9jsJPEasdwhNJ\",\"ePzmFoJvWZQ8MoNGg\",\"wsjr8C33NPyGYAqKu\",\"T2vhHPhRR96hRizq8\",\"y6kfyYmydcD8tkBk7\",\"uuN5sdoMNjtRZwXiL\",\"yZApLq3yg6gyqDKwz\",\"cshxEGRktj2uFzwtA\",\"8yyfRwCsP5ovSFT5p\",\"4CryJmbEsruAELrDt\",\"dCQC9E8RfYEDBeqoo\",\"hx3ZWiCKNtqwMWFCt\",\"9qgzstnjWXe7aMKEq\",\"9wAaYb58GtzajgFvi\",\"q2tzvkrLASvSjkek9\",\"kWobGYgZWJxN6ZddF\",\"mAwnTjFhygFB4MdeL\",\"4RsakkyRXyYGwFxEa\",\"SDPg9kQCcJtdWF8n5\",\"RroghSsW6MgCNEcFz\",\"3tgo2FkCgeaStSvkC\",\"i3TRCkidxKop3WtE2\",\"R8YWhHoXoasSsLJs4\",\"jRqY4i8gPemsZMBGf\",\"7amNEuZodjynhaDQq\",\"azAzSkvJd7eyXY9x9\",\"eN9PSgutrq2hjTYMX\",\"E5pJWS3yw3wkpZC55\",\"eSYGda5XebPyQeG2a\",\"Jispny3zgXyWsReWX\",\"MBEwq8srjd2oA5W58\",\"DzvdGwHEjqsX7wyKr\",\"qRhXvCaA7qgDoeFnr\",\"2NJuDfSqdrF8kHHni\",\"x3WsGCnE38anLjJqh\",\"gXTAie79kiw28tx5u\",\"yXGiiSAR5nBHnH3yr\",\"BbcH2NLjE4tKAZ3wR\",\"YL9pqyCu8xsds8J49\",\"mQKWauR6b252TmdX4\",\"P5BhjZxyeHQYTNyB9\",\"jXTnL3JatkKjoifyb\",\"hD6sfDtntpqT8NR2o\",\"a777e8chPvJkY3tKa\",\"kS4qM8nBd4gXkJSWH\",\"NYEt8oHpnnqXKtXhN\",\"obKQJXJNv37kPek7h\",\"p8qqFdJ3FSk5x9z3G\",\"buX4mCQhtXCfBjeno\",\"QD7mPMD8gmTP56nPv\",\"LNCb5rksJLJ43L4Nw\",\"SSP94pK7RmENiEKFu\",\"HsFc9PgmpP2X9Fwh9\",\"c7uBxu2rgY77H5d79\",\"4ySzqKC5s3ZRpG9di\",\"CoQTHAsXDxn6oot3H\",\"CggGfsERnPKGupFWp\",\"vRXuYYBNuHEQ29fbm\",\"TA9dwvnSdta7rTynz\",\"a49eNnfRwSMxsDJXf\",\"jCjCvyhqhpebkJn34\",\"WN9Gn8fyStG57qzGC\",\"wFRLGjA56kj7xyhmv\",\"KMR6vNzvSKMA2cXnK\",\"rWhXHhzF4W8bea6LP\",\"htXCitorobtqYymjN\",\"6rvJwN4mcX7iYGjY7\",\"PAEWysAAFheYiYPBp\",\"unqzSsxpxj9sZ7rbD\",\"uw47663LqPME8btaA\",\"FxPDKKibxnZjGJLs6\"],\"quality\":[5,1,3,5,3,1,5,5,5,5,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":1},\"isHidden\":false,\"quality\":4.076923076923077,\"family\":[{\"_id\":\"3mMshRSaigCtL5EcT\",\"language\":\"cpp\"},{\"_id\":\"vuxkHGZg8fuWCivPH\",\"language\":\"java\"},{\"_id\":\"XdPy5mwG9g6J9DdEw\",\"language\":\"javascript\"},{\"_id\":\"EHzL3v25wYp7E4AFC\",\"language\":\"python3\"},{\"_id\":\"nctfGaectuTPYqK5j\",\"language\":\"ruby\"}]}}"]