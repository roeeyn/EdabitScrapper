a["{\"msg\":\"result\",\"id\":\"311\",\"result\":{\"_id\":\"L5uwyF4SsAG4DmPpJ\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class NumberOfSpins {\\n\\tpublic static int spinAround(String[] turns) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.4676258992805755,\"familyId\":\"EMfwAJ6r75Js6MDAQ\",\"instructions\":\"Given a list of directions to spin, `\\\"left\\\"` or `\\\"right\\\"`, return an integer of how many full **360°** rotations were made. Note that each word in the array counts as a **90°** rotation in that direction.\\n\\n### Examples\\n```\\nspinAround([\\\"right\\\", \\\"right\\\", \\\"right\\\", \\\"right\\\", \\\"left\\\", \\\"right\\\"]) ➞ 1\\n# You spun right 4 times (90 * 4 = 360)\\n# You spun left once (360 - 90 = 270)\\n# But you spun right once more to make a full rotation (270 + 90 = 360)\\n\\nspinAround([\\\"left\\\", \\\"right\\\", \\\"left\\\", \\\"right\\\"]) ➞ 0\\n\\nspinAround([\\\"right\\\", \\\"right\\\", \\\"right\\\", \\\"right\\\", \\\"right\\\", \\\"right\\\", \\\"right\\\", \\\"right\\\"]) ➞ 2\\n\\nspinAround([\\\"left\\\", \\\"left\\\", \\\"left\\\", \\\"left\\\"]) ➞ 1\\n```\\n\\n### Notes\\n- Return a positive number.\\n- All tests will only include the words `\\\"right\\\"` and `\\\"left\\\"`.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"/** \\n====================================== \\nTestGen 2.1 for JUnit 4.13.0 \\t\\t\\nTest Case: NumberOfSpins::spinAround \\nTimestamp: 10/22/2020 1:16:31 PM \\n-------------------------------------- \\n® DARKKO 2020 © \\n====================================== \\n\\n**/ \\n\\nimport static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class NumberOfSpinsTest { \\n\\t\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertEquals(0, NumberOfSpins.spinAround(new String[] {\\\"left\\\",\\\"right\\\",\\\"left\\\",\\\"right\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertEquals(2, NumberOfSpins.spinAround(new String[] {\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertEquals(1, NumberOfSpins.spinAround(new String[] {\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertEquals(0, NumberOfSpins.spinAround(new String[] {}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertEquals(0, NumberOfSpins.spinAround(new String[] {\\\"left\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertEquals(0, NumberOfSpins.spinAround(new String[] {\\\"right\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertEquals(1, NumberOfSpins.spinAround(new String[] {\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"left\\\",\\\"right\\\",\\\"right\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertEquals(1, NumberOfSpins.spinAround(new String[] {\\\"left\\\",\\\"left\\\",\\\"right\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"right\\\",\\\"left\\\",\\\"left\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"left\\\",\\\"left\\\",\\\"right\\\",\\\"right\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test09() { \\n\\t\\tassertEquals(0, NumberOfSpins.spinAround(new String[] {\\\"right\\\",\\\"left\\\",\\\"left\\\",\\\"right\\\",\\\"left\\\",\\\"left\\\",\\\"right\\\",\\\"left\\\",\\\"right\\\",\\\"right\\\",\\\"left\\\",\\\"left\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"left\\\",\\\"left\\\",\\\"right\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test10() { \\n\\t\\tassertEquals(10, NumberOfSpins.spinAround(new String[] {\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\",\\\"right\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test11() { \\n\\t\\tassertEquals(10, NumberOfSpins.spinAround(new String[] {\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\",\\\"left\\\"}));\\n\\t}\\n\\n}\\n// end of tests\\n// credit goes to the original author/publisher @Joshua Señoron\",\"language\":\"java\",\"quality\":4.9411764705882355,\"summary\":\"Given a list of directions to spin, \\\"left\\\" or \\\"right\\\", return an integer of how many full 360° rotations were made. Note that each word in the array counts as a 90° rotation in that direction.\\n\\nExamples\\nspinAround([\\\"right\\\", \\\"right\\\", \\\"right\\\", \\\"right\\\", \\\"left\\\", \\\"right\\\"]) ➞ 1\\nYou spun right 4 times (90 * 4 = 360)\\nYou spun left once (360 - 90 = 270)\\nBut you spun ri\",\"tags\":[\"arrays\",\"language_fundamentals\"],\"timestamp\":{\"$date\":1603326246115},\"title\":\"Spin Around, Touch the Ground\",\"stats\":{\"completed\":{\"total\":179,\"ratings\":[1,1,1,1,1,1,2,1,1,0,1,2,1,1,1,1,1,2,2,2,1,0,2,1,2,2,2,2,1,2,2,1,2,2,1,2,2,2,1,3,2,1,0,1,2,1,0,1,1,2,1,1,1,1,2,0,2,2,2,1,4,5,2,2,2,2,1,2,1,1,0,1,1,2,4,1,2,2,2,2,0,0,1,1,2,1,2,2,0,1,1,1,2,1,5,0,0,2,1,2,1,2,2,1,0,1,2,2,3,0,1,2,0,2,2,2,1,3,2,2,2,2,1,1,2,2,1,2,2,1,1,1,1,2,2,2,1,0,2],\"quality\":[5,5,4,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],\"rators\":[\"usuyZtrRPRFTqW9jj\",\"a777e8chPvJkY3tKa\",\"etoSR23iELGGgs9rA\",\"Es4eX2stRpyoXeC7f\",\"AeJSxRqw2dJZuGvdk\",\"4NsCTpQDS2RFaycuo\",\"RN5n72zLo8bHurW2D\",\"fdgaaD4Ec9n9HbfQ5\",\"oMZovHkR6QqNvQwyc\",\"q8NixmnuQQ2o5PeRt\",\"hPsKex7yhvKyu3qSR\",\"7k7Dhxkjbb4nYfkQc\",\"THTnW75kBggw2qqta\",\"gXTAie79kiw28tx5u\",\"C9yBWYcZsjmJYww3K\",\"jb9RLyyuo565bKDzN\",\"gBGjCfJvPHswDM5JQ\",\"gpd8yji9GXJruAtje\",\"DkSMZ3jZLkwviKb9g\",\"9amCEoE43AdSneJZ7\",\"PmfzvaX5ZJscpvHXc\",\"89pv8CdzA6A7fB4hC\",\"yuAHgMXRcbo2qBwEY\",\"sS9NCRPPntsscnGvm\",\"QjLAPemXmmRwFrfRe\",\"KLKaWJtjNttK8LBkw\",\"PwiESad53XYyzC8SD\",\"jXTnL3JatkKjoifyb\",\"JRD5cJaNshqobb7eS\",\"p7E4zgK8iGPwvfD4t\",\"aHqxyQCEtWZgczYEv\",\"9uvY36FiJRWxRpE7e\",\"kabqCExooax4JEQHE\",\"9pCPyhvQmbkWyD2LL\",\"dcW9oK2uRo8h8mBe2\",\"fassNAnqipP8pkn4X\",\"3uBTPjN6mDavuBYmt\",\"jhEgpqsboiWai8sLJ\",\"sAdpvrN5y9fNJhQQv\",\"hmn6qe4B7Nrh6oSGn\",\"DzvdGwHEjqsX7wyKr\",\"oMfq73A434YWhSuWQ\",\"mG8HqKiAQFTdRZthG\",\"8Xx8nWXRydHDBGfQf\",\"P5BhjZxyeHQYTNyB9\",\"jyoLggHk8xQKZuoQC\",\"qaPjAANdnxFnWfj5d\",\"tyLS9T6YMfg9fMtYJ\",\"4n4gPJDy5pGLkZfBi\",\"zE46SymvixkeFJmPM\",\"DNACg4rcgZsPtYGZ8\",\"qicBKyqSkusj8jEvr\",\"zTM2NbjE6q5Q2HSeF\",\"kh7Tw42Li3AW5Jej4\",\"s2ZMtR9deh6Kia7pb\",\"QAeGp6MWj6fMBMyrE\",\"YzLMKaHE2cyZYKxLe\",\"unNqQjSHzkb4pCzEu\",\"RGN3QTb5LXj4ZPPkj\",\"LrxmC8RNrrwRyNqfb\",\"uyMTkScnJC2b8nJMp\",\"8paynGt66tAKJivFF\",\"2CLvCKwQvRQC8NHXp\",\"2bemiz7sjLjCbA5ui\",\"D2SQv5iDBfuj8WQAe\",\"L23hXCKLuxXL6b9Et\",\"p2woPCQKXuWJCwffJ\",\"vGMyM3QjLCMcPLi6D\",\"udHFfcqNNej6udnpP\",\"Niu8fko5o4JjSKBQA\",\"fzNvKett5PLkJz2Fp\",\"fJAnQriWjfZA5EFCK\",\"btabi3PdyisuY5tn9\",\"YuRnAAhqjaHg8ZcRT\",\"hJnfhtbiGBWFsxXNC\",\"cYcENRkajQioCLH9u\",\"bc2GyS4wrrowsz4yi\",\"62qNJjtmkRYvX5kKB\",\"D6YyepY3okHGgBkAy\",\"iWNjo5pQTdqoBwfRv\",\"N7avy6uzsmrpxNioD\",\"fbgn5575LS3jsxABM\",\"SBu6RJRcLCsN2gN6P\",\"7EMHzCc9SKf8NMKpM\",\"hD6sfDtntpqT8NR2o\",\"mQKWauR6b252TmdX4\",\"pi76g3eRpnKrhee2a\",\"Cczga7ES9qthpBPBf\",\"a49eNnfRwSMxsDJXf\",\"82weQfHHmno4Mq4X7\",\"GkYtSbQuheBF4Enys\",\"bur3yQ8s34zqKGEro\",\"uFfEio8nzDvL8emhp\",\"buX4mCQhtXCfBjeno\",\"zZfMwLuoERGmybgib\",\"hhxjQREtmHSheH9Pj\",\"4ySzqKC5s3ZRpG9di\",\"sxci7DYKNa6q22Sjq\",\"bdXCq7koLGHkjP4G4\",\"mfm3gB39arY8Rjb2y\",\"RBjTdBYHmyoPMvAow\",\"6rvJwN4mcX7iYGjY7\",\"R59WsfpdtghPxgNzb\",\"XXR58S7QFpNRmfaPd\",\"wFRLGjA56kj7xyhmv\",\"HsFc9PgmpP2X9Fwh9\",\"ewPGFzszLXygWHMET\",\"s7kgsgnTYGspwBYb5\",\"srJ34BaybkQh3qRkM\",\"xEX3TDY6C2h82dJTn\",\"J9zJq7PMGb6mqzcHW\",\"zTtKiCbLWzaf2Yjo4\",\"6W5Ff46e5LYMZs48M\",\"mLMB6d7jTF7jhxzvt\",\"B6GcCAmmFzAR3bPEo\",\"htXCitorobtqYymjN\",\"PJu3WcTpfRrvHfQiS\",\"4za87fFyw9qxkD936\",\"cR3ibTMxLyEdDFCHY\",\"PCAcZdg2HmDcGyeXb\",\"8b7kswLypEnXrswkw\",\"T9qdZjNzPaESdJsdC\",\"qdKMTPNkRgdjTr4zf\",\"vtr6NEkwWArTCBCb4\",\"vRXuYYBNuHEQ29fbm\",\"jCjCvyhqhpebkJn34\",\"AHmgsYBy6A66bDQFC\",\"QwkJidQW7vvEY6TLp\",\"gJFAZq64GANReLy7p\",\"7BAMYbgFwtA8gyDy8\",\"u9CXkXMyoxEPvLXCW\",\"G9gfxGLmj9KtLBAup\",\"RsujLHaML6L3KinzK\",\"E6r2kaBT45TfvfN7y\",\"NTAzREcetmyXWSAx5\",\"4N8d2o4FgzFbFck7v\",\"fT6bZfGCXMsscbwRn\",\"ZjKrn5xeE33znMr4S\",\"J7epB3qSQJ2E8vWkY\",\"gSrqu8MsZMFSxxWAZ\",\"Qv2jEtTnFCXX7cdd3\",\"B4pxRqzo43M7S8FbP\",\"cuMRsGTfYHfg3RSw2\",\"DZvz6WY5bQEneYzvv\",\"ec7iBYoXXeTYMBQXs\",\"CZAymi5hrfbojN3ta\",\"AeSmk2XWGcTLHB7PJ\",\"xLKhtL3T4LhgT9QiL\",\"9vyjn4WyWtJ6o2wop\",\"KMR6vNzvSKMA2cXnK\",\"rWhXHhzF4W8bea6LP\",\"xW9nC9h6p77YT2iso\",\"SE5G2Caf3btnuGmz6\",\"9xzk7TQqCRBWcMHu9\",\"qrnWDaKLCXAdCfPhJ\",\"unqzSsxpxj9sZ7rbD\",\"q2tzvkrLASvSjkek9\",\"cFkePEtcx7fvMRX98\",\"FxPDKKibxnZjGJLs6\",\"uw47663LqPME8btaA\",\"974cv448kw6Wu2JF6\",\"ZhF3mjNQjxYa5kSh8\",\"PAEWysAAFheYiYPBp\",\"59Rn5sjPrLXkkLLDK\",\"nFbmNzMQ38TncmfQX\",\"5HGyJtoZ3AffzAZAv\",\"8EJ4j2fcfjTJ7Zrzu\",\"ckQwFFWyLXmDQAaCn\"]},\"flags\":1},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"wAzyjX566tAbneD4E\",\"language\":\"cpp\"},{\"_id\":\"L5uwyF4SsAG4DmPpJ\",\"language\":\"java\"},{\"_id\":\"Z8QZZJzLF4LWPA5Xw\",\"language\":\"javascript\"},{\"_id\":\"X4v5Bh89P3inLEHH4\",\"language\":\"python3\"},{\"_id\":\"F3TKYgfAHDZu6ANSK\",\"language\":\"ruby\"}]}}"]