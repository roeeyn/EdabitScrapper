a["{\"msg\":\"result\",\"id\":\"280\",\"result\":{\"_id\":\"gPWZDe6rciBzYdz3B\",\"author\":\"Bonunu\",\"authorId\":\"av5QexsdPza9FsRCq\",\"code\":\"public class Challenge {\\n  public static String reverse(String text) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":1.1428571428571428,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"YeMP6QRLrrhMA9D8Z\",\"instructions\":\"The \\\"Reverser\\\" takes a string as input and returns that string in reverse order, with the opposite case.\\n\\n### Examples\\n```\\nreverse(\\\"Hello World\\\") ➞ \\\"DLROw OLLEh\\\"\\n\\nreverse(\\\"ReVeRsE\\\") ➞ \\\"eSrEvEr\\\"\\n\\nreverse(\\\"Java compiler\\\") ➞ \\\"RELIPMOC AVAj\\\"\\n```\\n\\n### Notes\\nThere will be no punctuation in any of the test cases.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(\\\"DLROw OLLEh\\\", Challenge.reverse(\\\"Hello World\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(\\\"eSrEvEr\\\", Challenge.reverse(\\\"ReVeRsE\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(\\\"RELIPMOC AVAj\\\", Challenge.reverse(\\\"Java compiler\\\"));\\n  }\\n\\t\\n}\",\"language\":\"java\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,0,0,0,1,0,1,0,2,0,1,3,1,1,1,1,2,1,2,1,1,1,0,1,1,2,1,0,0,0,1,2,3,2,1,2,1,2,0,0,1,1,2,3,1,0,1,0,0,3,1,2,2,0,1,1,1,3,0,1,0,2,1,2,2,2,1,0,2,2,1,1,0,1,1,1,1,1,1,2,2,0,1,1,3,1,2,0,1,0,1,2,2,1,1,1,1,1,1,0,1],\"rators\":[\"av5QexsdPza9FsRCq\",\"WZujpe8yQAyZmpWHg\",\"jyoLggHk8xQKZuoQC\",\"DePiAS7u5Pk9d6SLr\",\"cjxsqXfkAPoadmppi\",\"htXCitorobtqYymjN\",\"vRXuYYBNuHEQ29fbm\",\"k63LR5zQ8hLRafGH5\",\"8J2Dqqz9PaFufQzwY\",\"etoSR23iELGGgs9rA\",\"8zZ6xmzpiFair25qr\",\"5seiNqw6ZXoF2GRRd\",\"CggGfsERnPKGupFWp\",\"82weQfHHmno4Mq4X7\",\"TrquEHytntLKHA4m2\",\"C9yBWYcZsjmJYww3K\",\"gBGjCfJvPHswDM5JQ\",\"B4pxRqzo43M7S8FbP\",\"y6kfyYmydcD8tkBk7\",\"NsQ8qYQQ47gSPtQkK\",\"meS77LKqRswhF5LAy\",\"J9zJq7PMGb6mqzcHW\",\"DzvdGwHEjqsX7wyKr\",\"Yp7uvStL97cC9fKkY\",\"P7zedbjaFw8YDzLz7\",\"Yohr2MmAyaWGMbB35\",\"wYYMNPe8nSiJFbvJw\",\"HBgPTjhMkJ2WCcBP7\",\"3qggY3TrN3xNaMDBp\",\"rvojHhKH3DaxotefQ\",\"DkSMZ3jZLkwviKb9g\",\"dpJTai3i9aNkCS3sa\",\"cHg5uobyrjxnQSfcc\",\"a49eNnfRwSMxsDJXf\",\"JQGw9jsJPEasdwhNJ\",\"uYv96ZSpA7tBHoAGX\",\"q2tzvkrLASvSjkek9\",\"zwruFCmuHkwJTpYqg\",\"Zhy5X7BZnqk8hacEw\",\"PytNZK9mNiRiZxPrm\",\"YLwJkF2wuL3n9o6a2\",\"QXkrEiAuhuXaZmL4C\",\"ZMd8it647JSYTvx8Z\",\"rWhXHhzF4W8bea6LP\",\"muXMnzQwGLzN6j2Jr\",\"Ha5J49rhojBRy3BaM\",\"AeJSxRqw2dJZuGvdk\",\"f6uGKbmMdBYCjrMBh\",\"hx3ZWiCKNtqwMWFCt\",\"M5n9zd5LtuuwJr668\",\"oMZovHkR6QqNvQwyc\",\"Fd9765rksgPK4E2Zy\",\"ZXWDtCrM9ev3439oi\",\"YFHkjbM6obMSj24zi\",\"osXNzc2aCxspRwheS\",\"yXGiiSAR5nBHnH3yr\",\"fRYcPHuyEdqngMzC4\",\"gpd8yji9GXJruAtje\",\"Es4eX2stRpyoXeC7f\",\"kQRtmSZfHdSzFserc\",\"44arJN5SYx3HyfetA\",\"pi76g3eRpnKrhee2a\",\"jb9RLyyuo565bKDzN\",\"a777e8chPvJkY3tKa\",\"J7epB3qSQJ2E8vWkY\",\"gXTAie79kiw28tx5u\",\"9amCEoE43AdSneJZ7\",\"WHSB76uqJrCf2XKsw\",\"JszPst3958te56jFk\",\"NdLzb3BZ5J8ftnCkS\",\"5TaPWyRv9DZWWodp8\",\"oMfq73A434YWhSuWQ\",\"mG8HqKiAQFTdRZthG\",\"P5BhjZxyeHQYTNyB9\",\"Tf7TJFSPktJBgLA4k\",\"8Xx8nWXRydHDBGfQf\",\"jXTnL3JatkKjoifyb\",\"tyLS9T6YMfg9fMtYJ\",\"Ym8AjbKGSJooun3nt\",\"hDeaTsprkH6CmvSAR\",\"W56bWmpQeLJ9JEDsa\",\"xv5obFhsxY93mqR5S\",\"umcNKSZ597NfCXiyy\",\"uNK8tLSseShR8wcA4\",\"5jDgvkGd4JwatrYXg\",\"PcuKxaPmEFpMatXB2\",\"2cdvd8yuPLSwvGj9w\",\"Wi4H6ayKsNDWWQCG5\",\"PJu3WcTpfRrvHfQiS\",\"hhxjQREtmHSheH9Pj\",\"uFfEio8nzDvL8emhp\",\"QRv96jmNaYsWkxQEG\",\"GkYtSbQuheBF4Enys\",\"E2hpke7mHxAWsw5t9\",\"zZfMwLuoERGmybgib\",\"buX4mCQhtXCfBjeno\",\"3SgSNoAB3sxaYeT3w\",\"d7PjwEf5Ff8W5eD64\",\"4ySzqKC5s3ZRpG9di\",\"btabi3PdyisuY5tn9\",\"sxci7DYKNa6q22Sjq\",\"HXbTKW3jmmyRAsKrr\",\"rhS8qXRjZcpDXkwnE\",\"pYonfGP4u9HNL9Z32\",\"xEX3TDY6C2h82dJTn\",\"mwCevFK3TmHpw6J6N\",\"uw47663LqPME8btaA\",\"c7uBxu2rgY77H5d79\",\"srJ34BaybkQh3qRkM\",\"TCTZucJN3tJh5t7MB\",\"jCjCvyhqhpebkJn34\",\"AaAzAySpyo99siXzm\",\"cR3ibTMxLyEdDFCHY\",\"fjHcMtemHEhGroPSr\",\"wFRLGjA56kj7xyhmv\",\"JdC3h24bKrW6KDZX5\",\"KMR6vNzvSKMA2cXnK\",\"GDNsAq2snvJuwFa88\",\"unqzSsxpxj9sZ7rbD\",\"FxPDKKibxnZjGJLs6\",\"nSLvkGEpiYCtcBLaa\",\"H3XLNCWB5yXt5YYXn\",\"nFbmNzMQ38TncmfQX\",\"3Gf7ikLijfoxabiPY\"],\"total\":143,\"quality\":[5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,3,5,5,5,5,5,3,5]},\"flags\":0},\"summary\":\"The \\\"Reverser\\\" takes a string as input and returns that string in reverse order, with the opposite case.\\n\\nExamples\\nreverse(\\\"Hello World\\\") ➞ \\\"DLROw OLLEh\\\"\\n\\nreverse(\\\"ReVeRsE\\\") ➞ \\\"eSrEvEr\\\"\\n\\nreverse(\\\"Java compiler\\\") ➞ \\\"RELIPMOC AVAj\\\"\\n\\nNotes\\nThere will be no punctuation in any of the test cases.\",\"tags\":[\"strings\",\"formatting\",\"language_fundamentals\"],\"timestamp\":{\"$date\":1593147757045},\"title\":\"The Reverser!\",\"quality\":4.791666666666667,\"family\":[{\"_id\":\"KYCMbmAtenBQZTsYf\",\"language\":\"cpp\"},{\"_id\":\"gPWZDe6rciBzYdz3B\",\"language\":\"java\"},{\"_id\":\"m3Ho3E9KDE7i8XKCn\",\"language\":\"javascript\"},{\"_id\":\"9hQogtkbZSSJ8tYsG\",\"language\":\"python3\"},{\"_id\":\"TokAtqgBqTP4yX77v\",\"language\":\"ruby\"}]}}"]