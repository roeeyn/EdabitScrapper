a["{\"msg\":\"result\",\"id\":\"106\",\"result\":{\"_id\":\"ZYfF9BDSSKeCEtkiC\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class BaseNumberAge {\\n  public static String happyBirthday(int age) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":0.5740740740740741,\"familyId\":\"nasKN43eZddrMwaed\",\"instructions\":\"**Tesha** is getting old but she wants to celebrate her **20th** or **21st** birthday only. It is possible with some basic maths skills. She just needs to select the correct number base with your help!\\n\\nFor example, if her current age is 22, that's exactly 20 - in base 11.  Similarly, 65 is exactly 21 - in base 32 and so on.\\n\\nCreate a function that takes her current `age` and returns the given age **20 (or 21) years, with number base** in the format specified in the below examples.\\n\\n### Examples\\n```\\nhappyBirthday(54) ➞ \\\"Tesha is just 20, in base 27!\\\"\\n\\nhappyBirthday(46) ➞ \\\"Tesha is just 20, in base 23!\\\"\\n\\nhappyBirthday(65) ➞ \\\"Tesha is just 21, in base 32!\\\"\\n\\nhappyBirthday(83) ➞ \\\"Tesha is just 21, in base 41!\\\"\\n\\nhappyBirthday(66) ➞ \\\"Tesha is just 20, in base 33!\\\"\\n\\nhappyBirthday(22) ➞ \\\"Tesha is just 20, in base 11!\\\"\\n```\\n\\n### Notes\\nGiven age will always be greater than 20.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"import static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class BaseNumberAgeTest {\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertEquals(\\\"Tesha is just 20, in base 16!\\\", BaseNumberAge.happyBirthday(32));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertEquals(\\\"Tesha is just 21, in base 19!\\\", BaseNumberAge.happyBirthday(39));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertEquals(\\\"Tesha is just 20, in base 11!\\\", BaseNumberAge.happyBirthday(22));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertEquals(\\\"Tesha is just 21, in base 32!\\\", BaseNumberAge.happyBirthday(65));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertEquals(\\\"Tesha is just 21, in base 41!\\\", BaseNumberAge.happyBirthday(83));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertEquals(\\\"Tesha is just 21, in base 47!\\\", BaseNumberAge.happyBirthday(95));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertEquals(\\\"Tesha is just 20, in base 50!\\\", BaseNumberAge.happyBirthday(100));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertEquals(\\\"Tesha is just 20, in base 60!\\\", BaseNumberAge.happyBirthday(120));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test09() { \\n\\t\\tassertEquals(\\\"Tesha is just 21, in base 10!\\\", BaseNumberAge.happyBirthday(21));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test10() { \\n\\t\\tassertEquals(\\\"Tesha is just 21, in base 73!\\\", BaseNumberAge.happyBirthday(147));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test11() { \\n\\t\\tassertEquals(\\\"Tesha is just 20, in base 27!\\\", BaseNumberAge.happyBirthday(54));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test12() { \\n\\t\\tassertEquals(\\\"Tesha is just 20, in base 23!\\\", BaseNumberAge.happyBirthday(46));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test13() { \\n\\t\\tassertEquals(\\\"Tesha is just 20, in base 33!\\\", BaseNumberAge.happyBirthday(66));\\n\\t}\\n}\",\"language\":\"java\",\"quality\":0,\"summary\":\"Tesha is getting old but she wants to celebrate her 20th or 21st birthday only. It is possible with some basic maths skills. She just needs to select the correct number base with your help!\\n\\nFor example, if her current age is 22, that's exactly 20 - in base 11.  Similarly, 65 is exactly 21 - in base 32 and so on.\\n\\nCreate a function that takes her current age a\",\"tags\":[\"algorithms\",\"logic\",\"math\",\"numbers\"],\"timestamp\":{\"$date\":1610529971693},\"title\":\"Happy Birthday! \ud83c\udf69\",\"stats\":{\"completed\":{\"total\":51,\"ratings\":[1,1,1,1,1,1,1,1,0,0,1,1,0,0,1,0,0,0,0,1,1,0,1,1,1,1,1,1,0,0,0,1,2,1,1,1,0,0,0,1,2,0,1,0,0,0,0,0,0,0,1,0,1,0],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"sik7ms4p6WhS7suv8\",\"B5yPWex5Pww52wD5b\",\"xzd9qc8Aq9PEdr3w2\",\"A3KrxZk4FiSymY6f2\",\"Es4eX2stRpyoXeC7f\",\"uFfEio8nzDvL8emhp\",\"Wi4H6ayKsNDWWQCG5\",\"PJu3WcTpfRrvHfQiS\",\"hhxjQREtmHSheH9Pj\",\"btabi3PdyisuY5tn9\",\"AeJSxRqw2dJZuGvdk\",\"gBGjCfJvPHswDM5JQ\",\"3SgSNoAB3sxaYeT3w\",\"a49eNnfRwSMxsDJXf\",\"HCfkcKnPs9mrJojdG\",\"82weQfHHmno4Mq4X7\",\"GkYtSbQuheBF4Enys\",\"QRv96jmNaYsWkxQEG\",\"buX4mCQhtXCfBjeno\",\"KPz93xbvJ9x7okGs6\",\"t55QWHi8o4teZxqqE\",\"fGSQQds3A8gP6rc5h\",\"sYKPxZX5xJZ2GTp6Q\",\"xEX3TDY6C2h82dJTn\",\"sxci7DYKNa6q22Sjq\",\"2cdvd8yuPLSwvGj9w\",\"rhS8qXRjZcpDXkwnE\",\"uw47663LqPME8btaA\",\"srJ34BaybkQh3qRkM\",\"nSLvkGEpiYCtcBLaa\",\"cR3ibTMxLyEdDFCHY\",\"BcLXzKWQpnj5NoXYd\",\"fdyejapW3NWN7utPX\",\"5LDvZHCDJqePeBrCg\",\"htXCitorobtqYymjN\",\"DEDniTrstQYGounXT\",\"KMR6vNzvSKMA2cXnK\",\"RsujLHaML6L3KinzK\",\"J7epB3qSQJ2E8vWkY\",\"NioGGZL9KCn5Ln96t\",\"ckQwFFWyLXmDQAaCn\",\"unqzSsxpxj9sZ7rbD\",\"F8dA24AosSC8XXb7D\",\"eXQziXGcpwekMyABQ\",\"PPdaczxSt2u5cmZYG\",\"rWhXHhzF4W8bea6LP\",\"4To7THbHADdtXbewx\",\"nFbmNzMQ38TncmfQX\"]},\"flags\":0},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"mo9GpnxxGSasw7Gch\",\"language\":\"cpp\"},{\"_id\":\"ZYfF9BDSSKeCEtkiC\",\"language\":\"java\"},{\"_id\":\"Fo8PEd7eZsWNsMrpH\",\"language\":\"javascript\"},{\"_id\":\"MSnPDSTjard5LyixY\",\"language\":\"php\"},{\"_id\":\"Sdu9JRQtL45qXmJtr\",\"language\":\"python3\"},{\"_id\":\"eg3nhNZWkCr6WfhLu\",\"language\":\"ruby\"}]}}"]