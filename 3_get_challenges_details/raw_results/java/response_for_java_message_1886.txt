a["{\"msg\":\"result\",\"id\":\"500\",\"result\":{\"_id\":\"7r3uQADjtXEk7qirj\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class CurrencyFormat {\\n\\tpublic static String dolladollaBills(double money) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":2.0294117647058822,\"familyId\":\"hJhounx6TAeDgpYFQ\",\"instructions\":\"Given a number, return a string which is formatted into **US Dollars and cents!**\\n\\nRemember that:\\n- You should round to two digits after the decimal point (even for integers).\\n- Thousandths should be separated by commas.\\n\\n### Examples\\n```\\ndolladollaBills(10) ➞ \\\"$10.00\\\"\\n\\ndolladollaBills(1000000) ➞ \\\"$1,000,000.00\\\"\\n\\ndolladollaBills(-314159.2653) ➞ \\\"-$314,159.27\\\"\\n\\ndolladollaBills(-56.99) ➞ \\\"-$56.99\\\"\\n```\\n\\n### Notes\\nThere will be both negative and positive inputs.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"import static org.junit.Assert.assertEquals;\\nimport org.junit.Test;\\n\\npublic class CurrencyFormatTests {\\n\\tprivate double[] numVector = new double[] {10, 31.4159, -56.99, -0.008, 0.05, 1000000, -314159.2653};\\n\\tprivate String[] resVector = new String[] {\\\"$10.00\\\", \\\"$31.42\\\", \\\"-$56.99\\\", \\\"-$0.01\\\", \\\"$0.05\\\", \\\"$1,000,000.00\\\", \\\"-$314,159.27\\\"};\\n\\t\\n\\t@Test\\n\\tpublic void test01() {\\n\\t\\tassertEquals(CurrencyFormat.dolladollaBills(numVector[0]), resVector[0]);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test02() {\\n\\t\\tassertEquals(CurrencyFormat.dolladollaBills(numVector[1]), resVector[1]);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test03() {\\n\\t\\tassertEquals(CurrencyFormat.dolladollaBills(numVector[2]), resVector[2]);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test04() {\\n\\t\\tassertEquals(CurrencyFormat.dolladollaBills(numVector[3]), resVector[3]);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test05() {\\n\\t\\tassertEquals(CurrencyFormat.dolladollaBills(numVector[4]), resVector[4]);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test06() {\\n\\t\\tassertEquals(CurrencyFormat.dolladollaBills(numVector[5]), resVector[5]);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test07() {\\n\\t\\tassertEquals(CurrencyFormat.dolladollaBills(numVector[6]), resVector[6]);\\n\\t}\\n}\",\"language\":\"java\",\"quality\":0,\"summary\":\"Given a number, return a string which is formatted into US Dollars and cents!\\n\\nRemember that:\\nYou should round to two digits after the decimal point (even for integers).\\nThousandths should be separated by commas.\\n\\nExamples\\ndolladollaBills(10) ➞ \\\"$10.00\\\"\\n\\ndolladollaBills(1000000) ➞ \\\"$1,000,000.00\\\"\\n\\ndolladollaBills(-314159.2653) ➞ \\\"-$314,159.27\\\"\\n\\ndolladollaBills\",\"tags\":[\"formatting\",\"strings\",\"numbers\"],\"timestamp\":{\"$date\":1603088440735},\"title\":\"Money Formatting\",\"stats\":{\"completed\":{\"total\":30,\"ratings\":[1,1,1,1,1,1,2,3,2,1,3,2,3,2,2,3,3,3,2,3,3,5,3,0,2,2,0,3,1,3,2,1,3,1],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"gXTAie79kiw28tx5u\",\"Es4eX2stRpyoXeC7f\",\"azAzSkvJd7eyXY9x9\",\"etoSR23iELGGgs9rA\",\"rvojHhKH3DaxotefQ\",\"AeJSxRqw2dJZuGvdk\",\"C9yBWYcZsjmJYww3K\",\"jXTnL3JatkKjoifyb\",\"jyoLggHk8xQKZuoQC\",\"DzvdGwHEjqsX7wyKr\",\"mQKWauR6b252TmdX4\",\"mwcjmxMW9msmCFibs\",\"tyLS9T6YMfg9fMtYJ\",\"ymggGjk5woALZEbCC\",\"yXGiiSAR5nBHnH3yr\",\"Ym8AjbKGSJooun3nt\",\"qaPjAANdnxFnWfj5d\",\"vRXuYYBNuHEQ29fbm\",\"htXCitorobtqYymjN\",\"jCjCvyhqhpebkJn34\",\"sxci7DYKNa6q22Sjq\",\"KMR6vNzvSKMA2cXnK\",\"a49eNnfRwSMxsDJXf\",\"rWhXHhzF4W8bea6LP\",\"unqzSsxpxj9sZ7rbD\",\"FxPDKKibxnZjGJLs6\",\"3CXSJHwL4Qihbi6LA\",\"uw47663LqPME8btaA\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"7r3uQADjtXEk7qirj\",\"language\":\"java\"},{\"_id\":\"F9aetoMuYmWrALjxh\",\"language\":\"javascript\"},{\"_id\":\"eKJ8E6wnd9GMWxGaZ\",\"language\":\"python3\"},{\"_id\":\"FdTnkGg3MbHRMtQmy\",\"language\":\"ruby\"}]}}"]