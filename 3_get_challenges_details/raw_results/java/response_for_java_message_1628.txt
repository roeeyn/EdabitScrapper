a["{\"msg\":\"result\",\"id\":\"373\",\"result\":{\"_id\":\"WrHfLyMXCMuGjxf2s\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class StringIndexes {\\n\\tpublic static String indexFilter(int[] idx, String str) {\\n\\t\\t\\n\\t}\\t\\n}\",\"difficulty\":1.5,\"familyId\":\"QkYu6DniT9k7KWoT6\",\"instructions\":\"Create a function that takes two inputs: `idx` (an array of integers) and `str` (a string). The function should return another string with the letters of `str` at each index in `idx` in order.\\n\\n### Examples\\n```\\nindexFilter([7, -1, 5, 1], \\\"She is the love of my love\\\") ➞ \\\"tesh\\\"\\n\\nindexFilter([4, -7, -13, -11, -2, 0], \\\"Relax and stay calm to avoid failures\\\") ➞ \\\"xavier\\\"\\n\\nindexFilter([9, -9, 2, 27, 36, 6, 5, 13, -1, 2, 0, 30, 2], \\n  \\\"That's life, I've got you under my skin\\\") ➞ \\\"frank sinatra\\\"\\n```\\n\\n### Notes\\n- Indexes may not be in order or may be negative (see examples).\\n- The output string must always be lowercase, but the input `str` may not be (as in the above examples).\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"/** \\n===================================== \\nTestGen 4.0 for JUnit 4.13.0 \\t\\t\\nTest Case: StringIndexes::indexFilter \\nTimestamp: 11/03/2020 09:46:54 AM \\n------------------------------------- \\n® DARKKO 2020 © \\n===================================== \\n\\n**/ \\n\\nimport static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class StringIndexesTest { \\n\\t\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertEquals(\\\"tesh\\\", StringIndexes.indexFilter(new int[] {7, -1, 5, 1}, \\\"She is the love of my love\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertEquals(\\\"xavier\\\", StringIndexes.indexFilter(new int[] {4, -7, -13, -11, -2, 0}, \\\"Relax and stay calm to avoid failures\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertEquals(\\\"tune\\\", StringIndexes.indexFilter(new int[] {2, 3, 8, 11}, \\\"Autumn in New York\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertEquals(\\\"creamy\\\", StringIndexes.indexFilter(new int[] {0, 1, 5, 7, 4, 2}, \\\"Cry me a river\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertEquals(\\\"frank sinatra\\\", StringIndexes.indexFilter(new int[] {9, -9, 2, 27, 36, 6, 5, 13, -1, 2, 0, 30, 2}, \\\"That's life, I've got you under my skin\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertEquals(\\\"ella\\\", StringIndexes.indexFilter(new int[] {-1, 8, 8, 3}, \\\"Dream a Little Dream of Me\\\"));\\n\\t}\\n\\n}\\n// end of tests\",\"language\":\"java\",\"quality\":4.5,\"summary\":\"Create a function that takes two inputs: idx (an array of integers) and str (a string). The function should return another string with the letters of str at each index in idx in order.\\n\\nExamples\\nindexFilter([7, -1, 5, 1], \\\"She is the love of my love\\\") ➞ \\\"tesh\\\"\\n\\nindexFilter([4, -7, -13, -11, -2, 0], \\\"Relax and stay calm to avoid failures\\\") ➞ \\\"xavier\\\"\\n\\nindexFilt\",\"tags\":[\"arrays\",\"strings\"],\"timestamp\":{\"$date\":1603247969932},\"title\":\"Index Filtering\",\"stats\":{\"completed\":{\"total\":53,\"ratings\":[1,1,1,1,1,1,2,1,2,3,2,2,1,0,1,2,2,1,2,1,3,2,3,1,2,2,2,2,1,1,1,2,0,2,1,1,2,1,1,2,2,2,1,2,1,1,2,1,1,2,2,1,1,2],\"quality\":[5,4],\"rators\":[\"a777e8chPvJkY3tKa\",\"C9yBWYcZsjmJYww3K\",\"etoSR23iELGGgs9rA\",\"gXTAie79kiw28tx5u\",\"Es4eX2stRpyoXeC7f\",\"TrquEHytntLKHA4m2\",\"azAzSkvJd7eyXY9x9\",\"jb9RLyyuo565bKDzN\",\"AeJSxRqw2dJZuGvdk\",\"yd5PakB2z33q2JrTZ\",\"hmn6qe4B7Nrh6oSGn\",\"jXTnL3JatkKjoifyb\",\"rWhXHhzF4W8bea6LP\",\"gSmf26ac9rrmXLxwN\",\"DkSMZ3jZLkwviKb9g\",\"BbcH2NLjE4tKAZ3wR\",\"sAdpvrN5y9fNJhQQv\",\"DzvdGwHEjqsX7wyKr\",\"8Xx8nWXRydHDBGfQf\",\"hD6sfDtntpqT8NR2o\",\"BWqQ68pvNedARDcBN\",\"mQKWauR6b252TmdX4\",\"iZHowotDLiZumkTqy\",\"qaPjAANdnxFnWfj5d\",\"a49eNnfRwSMxsDJXf\",\"82weQfHHmno4Mq4X7\",\"bMvDffiK4qxvhae8m\",\"buX4mCQhtXCfBjeno\",\"bur3yQ8s34zqKGEro\",\"jCjCvyhqhpebkJn34\",\"4ySzqKC5s3ZRpG9di\",\"sxci7DYKNa6q22Sjq\",\"mfm3gB39arY8Rjb2y\",\"6rvJwN4mcX7iYGjY7\",\"Yohr2MmAyaWGMbB35\",\"rhS8qXRjZcpDXkwnE\",\"srJ34BaybkQh3qRkM\",\"wFRLGjA56kj7xyhmv\",\"p6tGJ9dN7HZQipR2B\",\"J9zJq7PMGb6mqzcHW\",\"htXCitorobtqYymjN\",\"xEX3TDY6C2h82dJTn\",\"9vyjn4WyWtJ6o2wop\",\"KMR6vNzvSKMA2cXnK\",\"B4pxRqzo43M7S8FbP\",\"hhxjQREtmHSheH9Pj\",\"GRSgodNrGhekHtCun\",\"unqzSsxpxj9sZ7rbD\",\"FxPDKKibxnZjGJLs6\",\"uw47663LqPME8btaA\",\"XH6378Zm3WBm679yx\"]},\"flags\":0},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"Y7cwWdPPbrkLXDtA6\",\"language\":\"cpp\"},{\"_id\":\"WrHfLyMXCMuGjxf2s\",\"language\":\"java\"},{\"_id\":\"q5N9n3ZjKq5Fn2hzg\",\"language\":\"javascript\"},{\"_id\":\"XrQnBBLaGRkXZuM8n\",\"language\":\"python3\"},{\"_id\":\"czhcLLwktc57NNDQj\",\"language\":\"ruby\"}]}}"]