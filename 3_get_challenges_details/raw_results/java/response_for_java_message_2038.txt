a["{\"msg\":\"result\",\"id\":\"576\",\"result\":{\"_id\":\"drRFWCuz8jWAPmFRj\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class Sequence {\\n  public static boolean consecutiveCombo(int[] r,int[] s) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":2.15625,\"familyId\":\"bNh9bz2qG9CSA2QvJ\",\"instructions\":\"Write a function that returns `true` if two arrays, when combined, form a **consecutive sequence**. A consecutive sequence is a sequence without any gaps in the integers, e.g. `1, 2, 3, 4, 5` is a consecutive sequence, but `1, 2, 4, 5` is not.\\n\\n### Examples\\n```\\nconsecutiveCombo([12, 13, 17, 19], [14, 16, 15, 18]) ➞ true\\n\\nconsecutiveCombo([7, 4, 5, 1], [2, 3, 6]) ➞ true\\n\\nconsecutiveCombo([1, 4, 6, 5], [2, 7, 8, 9]) ➞ false\\n\\nconsecutiveCombo([1, 4, 5, 6], [2, 3, 7, 8, 10]) ➞ false\\n\\nconsecutiveCombo([44, 46], [45]) ➞ true\\n```\\n\\n### Notes\\n- The input arrays will have unique values.\\n- The input arrays can be in any order.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"import static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class SequenceTest {\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertEquals(true, Sequence.consecutiveCombo(new int[] {12, 13, 17, 19}, new int[] {14, 16, 15, 18}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertEquals(true, Sequence.consecutiveCombo(new int[] {1, 4, 5, 7}, new int[] {2, 3, 6}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertEquals(false, Sequence.consecutiveCombo(new int[] {1, 4, 5, 6}, new int[] {2, 7, 8, 9}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertEquals(false, Sequence.consecutiveCombo(new int[] {1, 4, 5, 6}, new int[] {2, 3, 7, 8, 10}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertEquals(true, Sequence.consecutiveCombo(new int[] {7, 5, 4, 1}, new int[] {2, 3, 6, 8}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertEquals(true, Sequence.consecutiveCombo(new int[] {33, 34, 40}, new int[] {39, 38, 37, 36, 35, 32, 31, 30}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertEquals(false, Sequence.consecutiveCombo(new int[] {1, 4, 5, 6}, new int[] {2, 3, 7, 8, 10}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertEquals(true, Sequence.consecutiveCombo(new int[] {44, 46}, new int[] {45}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test09() { \\n\\t\\tassertEquals(true, Sequence.consecutiveCombo(new int[] {4, 3, 1}, new int[] {2, 5}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test10() { \\n\\t\\tassertEquals(true, Sequence.consecutiveCombo(new int[] {4, 3, 1}, new int[] {2, 5, 7, 6}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test11() { \\n\\t\\tassertEquals(false, Sequence.consecutiveCombo(new int[] {4, 3, 1}, new int[] {7, 6, 5}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test12() { \\n\\t\\tassertEquals(false, Sequence.consecutiveCombo(new int[] {4, 3, 1}, new int[] {0, 7, 6, 5}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test13() { \\n\\t\\tassertEquals(true, Sequence.consecutiveCombo(new int[] {44, 46}, new int[] {45}));\\n\\t}\\n}\",\"language\":\"java\",\"quality\":0,\"summary\":\"Write a function that returns true if two arrays, when combined, form a consecutive sequence. A consecutive sequence is a sequence without any gaps in the integers, e.g. 1, 2, 3, 4, 5 is a consecutive sequence, but 1, 2, 4, 5 is not.\\n\\nExamples\\nconsecutiveCombo([12, 13, 17, 19], [14, 16, 15, 18]) ➞ true\\n\\nconsecutiveCombo([7, 4, 5, 1], [2, 3, 6]) ➞ true\\n\\nconsecu\",\"tags\":[\"arrays\",\"validation\"],\"timestamp\":{\"$date\":1607416257378},\"title\":\"Combined Consecutive Sequence\",\"stats\":{\"completed\":{\"total\":31,\"ratings\":[2,2,2,2,2,2,3,3,2,2,3,3,2,3,2,2,3,1,2,3,2,1,2,0,1,3,2,2,3,2,3,2],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"azAzSkvJd7eyXY9x9\",\"gXTAie79kiw28tx5u\",\"RGN3QTb5LXj4ZPPkj\",\"mDWNyaaQ9hvPCRzSd\",\"buX4mCQhtXCfBjeno\",\"Yx9tWxJaqHnzGC83X\",\"jyoLggHk8xQKZuoQC\",\"GaJNJwcdyB9ueYFst\",\"rhS8qXRjZcpDXkwnE\",\"qaPjAANdnxFnWfj5d\",\"jCjCvyhqhpebkJn34\",\"2NJZbusRvu3eJ4tHu\",\"KMR6vNzvSKMA2cXnK\",\"sxci7DYKNa6q22Sjq\",\"FZihmAsE7BenpXdej\",\"wFRLGjA56kj7xyhmv\",\"AHccFyf5Xzk9qEcvR\",\"a49eNnfRwSMxsDJXf\",\"rWhXHhzF4W8bea6LP\",\"htXCitorobtqYymjN\",\"5HGyJtoZ3AffzAZAv\",\"6rvJwN4mcX7iYGjY7\",\"CggGfsERnPKGupFWp\",\"uw47663LqPME8btaA\",\"PAEWysAAFheYiYPBp\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"x53tYzk6gsy5kmRit\",\"language\":\"cpp\"},{\"_id\":\"drRFWCuz8jWAPmFRj\",\"language\":\"java\"},{\"_id\":\"HqWmsX885jpZqMkdL\",\"language\":\"javascript\"},{\"_id\":\"BEhn4rsAhiuxwGFfv\",\"language\":\"php\"},{\"_id\":\"mHLAmj4vmRuXrT8Nb\",\"language\":\"python3\"},{\"_id\":\"iiL7sf4iTfcnXZL3T\",\"language\":\"ruby\"}]}}"]