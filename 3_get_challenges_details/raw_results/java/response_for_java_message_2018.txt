a["{\"msg\":\"result\",\"id\":\"566\",\"result\":{\"_id\":\"PkqSq3ea2bfJvF6Tk\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class LetterGroup {\\n\\tpublic static String[] threeLetterCollection(String s) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":2.150943396226415,\"familyId\":\"SsD52eFxbqXCZbcKz\",\"instructions\":\"Given a string, return a **sorted array** of words formed from the first three letters, then the next three letters, shifting by only one.\\n\\n### Worked Example\\n```\\nthreeLetterCollection(\\\"edabit\\\") ➞ [\\\"abi\\\", \\\"bit\\\", \\\"dab\\\", \\\"eda\\\"]\\n// 1st word: \\\"eda\\\"\\n// 2nd word: \\\"dab\\\"\\n// 3rd word: \\\"abi\\\"\\n// 4th word: \\\"bit\\\"\\n// Remember to sort the array!\\n```\\n\\n### Examples\\n```\\nthreeLetterCollection(\\\"tesha\\\") ➞ [\\\"esh\\\", \\\"sha\\\", \\\"tes\\\"]\\n\\nthreeLetterCollection(\\\"click\\\") ➞ [\\\"cli\\\", \\\"ick\\\", \\\"lic\\\"]\\n\\nthreeLetterCollection(\\\"cat\\\") ➞ [\\\"cat\\\"]\\n\\nthreeLetterCollection(\\\"hi\\\") ➞ []\\n\\nthreeLetterCollection(\\\"slap\\\") ➞ [\\\"lap\\\", \\\"sla\\\"]\\n```\\n\\n### Notes\\nReturn an *empty array*  if given a word is **less** than **3 letters**.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"/** \\n============================================= \\nTestGen 3.1 for JUnit 4.13.0 \\t\\t\\nTest Case: LetterGroup::threeLetterCollection \\nTimestamp: 10/17/2020 5:22:00 PM \\n--------------------------------------------- \\n® DARKKO 2020 © \\n=============================================  \\n\\n**/ \\n\\nimport static org.junit.Assert.assertArrayEquals; \\nimport org.junit.Test; \\n\\npublic class LetterGroupTest { \\n\\t\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertArrayEquals(new String[] {\\\"esh\\\", \\\"sha\\\", \\\"tes\\\"}, LetterGroup.threeLetterCollection(\\\"tesha\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertArrayEquals(new String[] {\\\"lap\\\", \\\"sla\\\"}, LetterGroup.threeLetterCollection(\\\"slap\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertArrayEquals(new String[] {\\\"cli\\\", \\\"ick\\\", \\\"lic\\\"}, LetterGroup.threeLetterCollection(\\\"click\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertArrayEquals(new String[] {\\\"cat\\\"}, LetterGroup.threeLetterCollection(\\\"cat\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertArrayEquals(new String[] {}, LetterGroup.threeLetterCollection(\\\"hi\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertArrayEquals(new String[] {}, LetterGroup.threeLetterCollection(\\\"e\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertArrayEquals(new String[] {}, LetterGroup.threeLetterCollection(\\\"\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertArrayEquals(new String[] {\\\"amm\\\", \\\"gra\\\", \\\"ing\\\", \\\"min\\\", \\\"mmi\\\", \\\"ogr\\\", \\\"pro\\\", \\\"ram\\\", \\\"rog\\\"}, LetterGroup.threeLetterCollection(\\\"programming\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test09() { \\n\\t\\tassertArrayEquals(new String[] {\\\"abl\\\", \\\"ani\\\", \\\"ant\\\", \\\"ari\\\", \\\"bli\\\", \\\"dis\\\", \\\"ent\\\", \\\"est\\\", \\\"hme\\\", \\\"ian\\\", \\\"idi\\\", \\\"ise\\\", \\\"ish\\\", \\\"ism\\\", \\\"lis\\\", \\\"men\\\", \\\"nis\\\", \\\"nta\\\", \\\"nti\\\", \\\"ria\\\", \\\"ses\\\", \\\"shm\\\", \\\"sta\\\", \\\"tab\\\", \\\"tar\\\", \\\"tid\\\"}, LetterGroup.threeLetterCollection(\\\"antidisestablishmentarianism\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test10() { \\n\\t\\tassertArrayEquals(new String[] {\\\"log\\\", \\\"ogy\\\", \\\"olo\\\", \\\"ool\\\", \\\"zoo\\\"}, LetterGroup.threeLetterCollection(\\\"zoology\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test11() { \\n\\t\\tassertArrayEquals(new String[] {\\\"ass\\\", \\\"ass\\\", \\\"ati\\\", \\\"ina\\\", \\\"ion\\\", \\\"nat\\\", \\\"sas\\\", \\\"sin\\\", \\\"ssa\\\", \\\"ssi\\\", \\\"tio\\\"}, LetterGroup.threeLetterCollection(\\\"assassination\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test12() { \\n\\t\\tassertArrayEquals(new String[] {\\\"boo\\\", \\\"eep\\\", \\\"epe\\\", \\\"kee\\\", \\\"kke\\\", \\\"okk\\\", \\\"ook\\\", \\\"per\\\"}, LetterGroup.threeLetterCollection(\\\"bookkeeper\\\"));\\n\\t}\\n\\n}\\n// end of tests\",\"language\":\"java\",\"quality\":5,\"summary\":\"Given a string, return a sorted array of words formed from the first three letters, then the next three letters, shifting by only one.\\n\\nWorked Example\\nthreeLetterCollection(\\\"edabit\\\") ➞ [\\\"abi\\\", \\\"bit\\\", \\\"dab\\\", \\\"eda\\\"]\\n// 1st word: \\\"eda\\\"\\n// 2nd word: \\\"dab\\\"\\n// 3rd word: \\\"abi\\\"\\n// 4th word: \\\"bit\\\"\\n// Remember to sort the array!\\n\\nExamples\\nthreeLetterCollection(\\\"tesha\\\")\",\"tags\":[\"loops\",\"strings\",\"arrays\",\"algorithms\"],\"timestamp\":{\"$date\":1602707520157},\"title\":\"Triple Letter Groupings\",\"stats\":{\"completed\":{\"total\":58,\"ratings\":[2,2,2,2,2,2,3,1,0,3,2,2,3,2,3,1,3,1,2,3,2,2,2,2,3,2,1,2,3,3,0,1,3,3,3,3,3,1,1,3,2,1,1,2,2,3,3,2,3,2,4,3,2],\"quality\":[5,5,5,5],\"rators\":[\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"rehehi2Tr2mwaEoJE\",\"vRXuYYBNuHEQ29fbm\",\"DzvdGwHEjqsX7wyKr\",\"5gomSqYbjj3pFHynm\",\"rWhXHhzF4W8bea6LP\",\"xGtxQz9WnAPPKJZxK\",\"gXTAie79kiw28tx5u\",\"Ym8AjbKGSJooun3nt\",\"etoSR23iELGGgs9rA\",\"yXGiiSAR5nBHnH3yr\",\"82weQfHHmno4Mq4X7\",\"e5c4uxBeto5PZN5Mg\",\"dcW9oK2uRo8h8mBe2\",\"bTCq6CQ3SGjrRfZeQ\",\"RAEFpazbe6mhx3PLb\",\"P5BhjZxyeHQYTNyB9\",\"mQKWauR6b252TmdX4\",\"jyoLggHk8xQKZuoQC\",\"jXTnL3JatkKjoifyb\",\"8Xx8nWXRydHDBGfQf\",\"hD6sfDtntpqT8NR2o\",\"Nb6LYPoQP6KJZt8mz\",\"T2vhHPhRR96hRizq8\",\"RGN3QTb5LXj4ZPPkj\",\"wT5gGgvjKc5wz59AQ\",\"buX4mCQhtXCfBjeno\",\"nHj7SC5cnmkTApbgY\",\"LNCb5rksJLJ43L4Nw\",\"GoaL6nod4xg4NHo9e\",\"HD5WrhTfZYZjC6Yk4\",\"7nu8jXGs8hh7duK6o\",\"qx6yvahdH8aw4Jnm7\",\"tdinF6MRzC6AdNX8g\",\"qaPjAANdnxFnWfj5d\",\"mfm3gB39arY8Rjb2y\",\"wFRLGjA56kj7xyhmv\",\"GArCerEapdotZYMDy\",\"htXCitorobtqYymjN\",\"jCjCvyhqhpebkJn34\",\"a49eNnfRwSMxsDJXf\",\"sxci7DYKNa6q22Sjq\",\"SE5G2Caf3btnuGmz6\",\"KMR6vNzvSKMA2cXnK\",\"eXW8reZCCZHQzJjQi\",\"FxPDKKibxnZjGJLs6\",\"unqzSsxpxj9sZ7rbD\",\"CggGfsERnPKGupFWp\",\"XwN6ttk98AAdp7roC\",\"PAEWysAAFheYiYPBp\",\"uw47663LqPME8btaA\"]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]}},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"PkqSq3ea2bfJvF6Tk\",\"language\":\"java\"},{\"_id\":\"LoBo2DoWQuuzSr6Ft\",\"language\":\"javascript\"},{\"_id\":\"NybeH5L7wFPYeynCn\",\"language\":\"python3\"},{\"_id\":\"FwpmJZ9LLQcxMk5Yi\",\"language\":\"ruby\"}]}}"]