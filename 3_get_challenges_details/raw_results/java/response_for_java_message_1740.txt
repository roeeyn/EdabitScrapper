a["{\"msg\":\"result\",\"id\":\"429\",\"result\":{\"_id\":\"pkMPzrmsNN9RRnMqx\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class CupSwaps {\\n  public static String cupSwapping(String[] cups) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.558139534883721,\"familyId\":\"2q6tBd4rWoKKet9FG\",\"instructions\":\"There are three cups on a table, at positions **A, B, and C.** At the start, there is a ball hidden under the cup at **position B**.\\n\\n![Image of cups where ball is under middle cup](https://edabit-challenges.s3.amazonaws.com/kfnerNJDNn.png)\\n\\nHowever, I perform several swaps on the cups, which is notated as two letters. For example, if I swap the cups at positions **A and B**, I could notate this as `AB` or `BA`.\\n\\nCreate a function that returns the letter position that the ball is at, once I finish swapping the cups. The swaps will be given to you as an array.\\n\\n### Worked Example\\n```\\ncupSwapping([\\\"AB\\\", \\\"CA\\\", \\\"AB\\\"]) ➞ \\\"C\\\"\\n\\n// Ball begins at position B.\\n// Cups A and B swap, so the ball is at position A.\\n// Cups C and A swap, so the ball is at position C.\\n// Cups A and B swap, but the ball is at position C, so it doesn't move.\\n```\\n\\n### Examples\\n```\\ncupSwapping([\\\"AB\\\", \\\"CA\\\"]) ➞ \\\"C\\\"\\n\\ncupSwapping([\\\"AC\\\", \\\"CA\\\", \\\"CA\\\", \\\"AC\\\"]) ➞ \\\"B\\\"\\n\\ncupSwapping([\\\"BA\\\", \\\"AC\\\", \\\"CA\\\", \\\"BC\\\"]) ➞ \\\"A\\\"\\n```\\n\\n### Notes\\n* A swap could be notated in two different ways, since both ways end up with the same outcome.\\n* All swaps will be notated as capital letters and will be valid.\\n* You cannot swap a cup with itself.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"import static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class CupSwapsTest {\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertEquals(\\\"C\\\", CupSwaps.cupSwapping(new String[] {\\\"AB\\\", \\\"CA\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertEquals(\\\"C\\\", CupSwaps.cupSwapping(new String[] {\\\"AB\\\", \\\"CA\\\", \\\"AB\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertEquals(\\\"B\\\", CupSwaps.cupSwapping(new String[] {\\\"AC\\\", \\\"CA\\\", \\\"CA\\\", \\\"AC\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertEquals(\\\"A\\\", CupSwaps.cupSwapping(new String[] {\\\"BA\\\", \\\"AC\\\", \\\"CA\\\", \\\"BC\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertEquals(\\\"A\\\", CupSwaps.cupSwapping(new String[] {\\\"BC\\\", \\\"CB\\\", \\\"CA\\\", \\\"BA\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertEquals(\\\"C\\\", CupSwaps.cupSwapping(new String[] {\\\"BC\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertEquals(\\\"B\\\", CupSwaps.cupSwapping(new String[] {\\\"BA\\\", \\\"CA\\\", \\\"CB\\\", \\\"CA\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertEquals(\\\"B\\\", CupSwaps.cupSwapping(new String[] {}));\\n\\t}\\n}\\n// credit goes to the original author @Joshua Señoron\",\"language\":\"java\",\"quality\":0,\"summary\":\"There are three cups on a table, at positions A, B, and C. At the start, there is a ball hidden under the cup at position B.\\n\\nImage of cups where ball is under middle cup\\n\\nHowever, I perform several swaps on the cups, which is notated as two letters. For example, if I swap the cups at positions A and B, I could notate this as AB or BA.\\n\\nCreate a function that\",\"tags\":[\"algorithms\",\"logic\",\"interview\"],\"timestamp\":{\"$date\":1611743302024},\"title\":\"Cup Swapping\",\"stats\":{\"completed\":{\"total\":39,\"ratings\":[2,2,2,2,2,0,2,2,1,0,2,3,2,2,1,2,2,1,1,0,2,2,2,2,3,0,1,0,1,2,2,3,3,1,2,0,1,2,2,1,1,2,1],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"gXTAie79kiw28tx5u\",\"Es4eX2stRpyoXeC7f\",\"fCTfZSgeDbRbTvDY4\",\"gJbvbqosimaP4ZAYb\",\"a8egTkSCssTfQpWze\",\"atTPXmXdX86EWdF65\",\"E2nAwyubcNWBcPZJP\",\"NchnDcEmsLTeFZ4FH\",\"82weQfHHmno4Mq4X7\",\"saf3nERNrf7iQJi95\",\"jyoLggHk8xQKZuoQC\",\"EBTHjFAoBhJxb9FcP\",\"a49eNnfRwSMxsDJXf\",\"GaJNJwcdyB9ueYFst\",\"rhS8qXRjZcpDXkwnE\",\"qaPjAANdnxFnWfj5d\",\"JWdhp42Lsm2m3JPwL\",\"ybXuwvrytgEph66ea\",\"mG8HqKiAQFTdRZthG\",\"c7uBxu2rgY77H5d79\",\"sxci7DYKNa6q22Sjq\",\"vRXuYYBNuHEQ29fbm\",\"p5ZshR8zhTqmdhKDc\",\"6rvJwN4mcX7iYGjY7\",\"J9zJq7PMGb6mqzcHW\",\"htXCitorobtqYymjN\",\"buX4mCQhtXCfBjeno\",\"335vfhEhjduPYp8fs\",\"KMR6vNzvSKMA2cXnK\",\"8XobxQFtKLzNifDq2\",\"hhxjQREtmHSheH9Pj\",\"GttCrAdrNvAw8r3kk\",\"unqzSsxpxj9sZ7rbD\",\"FxPDKKibxnZjGJLs6\",\"uw47663LqPME8btaA\",\"nFbmNzMQ38TncmfQX\",\"QrR9nt3ce6bSAougK\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"DZqt3GzYoPNWxHhWv\",\"language\":\"cpp\"},{\"_id\":\"X3btpQQEBeezX4jhK\",\"language\":\"csharp\"},{\"_id\":\"pkMPzrmsNN9RRnMqx\",\"language\":\"java\"},{\"_id\":\"5DCC9SzA2FTcCTvkd\",\"language\":\"javascript\"},{\"_id\":\"JL4vXxvwJX4seg76j\",\"language\":\"php\"},{\"_id\":\"M47FDJLjfNoZ6k6gF\",\"language\":\"python3\"},{\"_id\":\"z5cKH8x228JxemFLx\",\"language\":\"ruby\"},{\"_id\":\"4449BwgJYXZxNyDmX\",\"language\":\"swift\"}]}}"]