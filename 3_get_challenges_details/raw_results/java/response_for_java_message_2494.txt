a["{\"msg\":\"result\",\"id\":\"803\",\"result\":{\"_id\":\"HH3FuLpBAf6gkb9L4\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n\\tpublic static int knightBFS(int a, int b, int c, int d) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":3.5454545454545454,\"familyId\":\"cC4AFxgmXNocekhhh\",\"instructions\":\"You will be given the location of a knight, and an end location. The knight can move in a \\\"L\\\" shape. \\\"L\\\" shape movement means that the knight can change it's `x` coordinate by 2 and it's `y` coordinate by 1 or it can change it's `y` coordinate by 2 and it's `x` coordinate by 1 (you can add and subtract from the x/y).\\n\\nFor example, if the knight is at the position (0, 0), it can move to:\\n\\n```\\n(1,2), (1,-2), (2,1), (2,-1), (-1,2), (-1,-2), (-2,1), (-2, -1)\\n```\\n\\nYour job is to return the least amount of steps needed to go from the position K (knight's start position) to E (end). You will only be given the knight starter coordinates (x1, y1) and the end coordinates (x2, y2).\\n\\nConstrains:\\n`1 <= x1,y1,x2,y2 <= 8`\\n\\n### Examples\\n```\\nknightBFS(1, 1, 8, 8) ➞ 6\\n\\nknightBFS(1, 1, 3, 2) ➞ 1\\n\\nknightBFS(8, 8, 3, 3) ➞ 4\\n```\\n\\n### Notes\\n- This is a simplified version of [this problem](https://www.spoj.com/problems/NAKANJ/).\\n- This travel will always be possible.\\n- The chess board is 8x8.\",\"isHidden\":false,\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(6, Challenge.knightBFS(1, 1, 8, 8));\\n  }\\n\\n\\t@Test\\n  public void test2() {\\n    assertEquals(1, Challenge.knightBFS(1, 1, 3, 2));\\n  }\\n\\n\\t@Test\\n  public void test3() {\\n    assertEquals(4, Challenge.knightBFS(8, 8, 3, 3));\\n  }\\n\\n\\t@Test\\n  public void test4() {\\n    assertEquals(2, Challenge.knightBFS(5, 5, 7, 1));\\n  }\\n\\n\\t@Test\\n  public void test5() {\\n    assertEquals(4, Challenge.knightBFS(4, 8, 1, 1));\\n  }\\n\\n\\t@Test\\n  public void test6() {\\n    assertEquals(3, Challenge.knightBFS(1, 1, 1, 2));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"You will be given the location of a knight, and an end location. The knight can move in a \\\"L\\\" shape. \\\"L\\\" shape movement means that the knight can change it's x coordinate by 2 and it's y coordinate by 1 or it can change it's y coordinate by 2 and it's x coordinate by 1 (you can add and subtract from the x/y).\\n\\nFor example, if the knight is at the position (0, \",\"tags\":[\"algorithms\",\"games\"],\"timestamp\":{\"$date\":1575468175093},\"title\":\"BFS Chess!\",\"stats\":{\"completed\":{\"total\":27,\"ratings\":[3,3,3,3,3,1,5,5,0,3,5,3,5,3,5,5,5,5,5,5,0,3],\"rators\":[\"rehehi2Tr2mwaEoJE\",\"JpjuqGXmqhqP2Tx92\",\"muDC7Z5mKSdfkn5ny\",\"vG3Bnm9ShCzemSMni\",\"dCQC9E8RfYEDBeqoo\",\"TrquEHytntLKHA4m2\",\"bapQtP2qYwFYPyayo\",\"cE9dgDxfDsGJ4Kf9M\",\"rwETZ6XCNoHCEyB66\",\"j2MGy7uBRof53S6Gm\",\"Z372Y4D7npNKWHawZ\",\"QXR2qGcvrK5Xkxdea\",\"Ym8AjbKGSJooun3nt\",\"Es4eX2stRpyoXeC7f\",\"RQL2PAWda9Bh79GNi\",\"gXTAie79kiw28tx5u\",\"5etxnWM9LfbDDW9A6\",\"aA42FZ2QiEgwHrvzz\"],\"quality\":[5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"quality\":5,\"family\":[{\"_id\":\"mfYa6dqC8SAZjmKF5\",\"language\":\"cpp\"},{\"_id\":\"HH3FuLpBAf6gkb9L4\",\"language\":\"java\"},{\"_id\":\"JAihKzAwjFb2BL8cx\",\"language\":\"javascript\"},{\"_id\":\"7WZhxYTBCHzMbyhfL\",\"language\":\"python3\"},{\"_id\":\"FGb3QXc7p6yxnG6he\",\"language\":\"ruby\"}]}}"]