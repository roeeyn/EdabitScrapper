a["{\"msg\":\"result\",\"id\":\"296\",\"result\":{\"_id\":\"J26bZ6Fv6bWEisDYj\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class SideLengths {\\n  public static double[] otherSides(int n) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":1.3612774451097804,\"familyId\":\"8t9p2grvH9AhYXFv4\",\"instructions\":\"Given the shortest side of a `30° by 60° by 90°` triangle, find out the other two sides. Return the longest side and medium-length side in that order.\\n\\n### Examples\\n```\\notherSides(1) ➞ [2.0, 1.73]\\n\\notherSides(12) ➞ [24.0, 20.0]\\n\\notherSides(2) ➞ [4.0, 3.46]\\n\\notherSides(3) ➞ [6.0, 5.2]\\n```\\n\\n### Notes\\n- `30° by 60° by 90°` triangles always follow this rule: let's say the shortest side length is x units, the hypotenuse would be 2x units and the other side would be x * square root of 3.\\n- The **results** in the **Tests** are rounded up to `2` decimal places.\\n- Return the **result** as an **array**.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"import static org.junit.Assert.assertArrayEquals; \\nimport org.junit.Test; \\n\\npublic class SideLengthsTest {\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertArrayEquals(new double[] {2, 1.73}, SideLengths.otherSides(1), 6);\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertArrayEquals(new double[] {24, 20.78}, SideLengths.otherSides(12), 6);\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertArrayEquals(new double[] {6, 5.2}, SideLengths.otherSides(3), 6);\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertArrayEquals(new double[] {10, 8.66}, SideLengths.otherSides(5), 6);\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertArrayEquals(new double[] {14, 12.12}, SideLengths.otherSides(7), 6);\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertArrayEquals(new double[] {34, 29.44}, SideLengths.otherSides(17), 6);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tint r = SCTC.randomInt(0b101, 0x63);\\n\\t\\tassertArrayEquals(new double[] {SCTC.adhc(r), SCTC.odhs(SCTC.adhc(r))}, SideLengths.otherSides(r), 6);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tint r = SCTC.randomInt(0b101, 0x63);\\n\\t\\tassertArrayEquals(new double[] {SCTC.adhc(r), SCTC.odhs(SCTC.adhc(r))}, SideLengths.otherSides(r), 6);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test09() { \\n\\t\\tint r = SCTC.randomInt(0b101, 0x63);\\n\\t\\tassertArrayEquals(new double[] {SCTC.adhc(r), SCTC.odhs(SCTC.adhc(r))}, SideLengths.otherSides(r), 6);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test10() { \\n\\t\\tint r = SCTC.randomInt(0b101, 0x63);\\n\\t\\tassertArrayEquals(new double[] {SCTC.adhc(r), SCTC.odhs(SCTC.adhc(r))}, SideLengths.otherSides(r), 6);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test11() { \\n\\t\\tint r = SCTC.randomInt(0b101, 0x63);\\n\\t\\tassertArrayEquals(new double[] {SCTC.adhc(r), SCTC.odhs(SCTC.adhc(r))}, SideLengths.otherSides(r), 6);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test12() { \\n\\t\\tint r = SCTC.randomInt(0b101, 0x63);\\n\\t\\tassertArrayEquals(new double[] {SCTC.adhc(r), SCTC.odhs(SCTC.adhc(r))}, SideLengths.otherSides(r), 6);\\n\\t}\\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nclass SCTC {\\n\\tpublic static int randomInt(int... i) {\\n\\t\\treturn (int)(Math.random()*((i[01]-i[00])+0b1))+i[0x0];\\n\\t}\\n\\t\\n\\tpublic static int adhc(int b) {\\n\\t\\treturn (int)(b/StrictMath.cos(Math.toRadians(0x3c/074*0b111100))+0b0001);\\n\\t}\\n\\t\\n\\tpublic static double odhs(int c) {\\n\\t\\treturn Math.round(StrictMath.sin(((074*0b0001)*Math.PI)/(0x3c*3))*c*100.0)/100.0;\\n\\t}\\n}\",\"language\":\"java\",\"quality\":4.463414634146342,\"summary\":\"Given the shortest side of a 30° by 60° by 90° triangle, find out the other two sides. Return the longest side and medium-length side in that order.\\n\\nExamples\\notherSides(1) ➞ [2.0, 1.73]\\n\\notherSides(12) ➞ [24.0, 20.0]\\n\\notherSides(2) ➞ [4.0, 3.46]\\n\\notherSides(3) ➞ [6.0, 5.2]\\n\\nNotes\\n30° by 60° by 90° triangles always follow this rule: let's say the shortest side\",\"tags\":[\"geometry\",\"math\"],\"timestamp\":{\"$date\":1608207950205},\"title\":\"Find the Other Two Side Lengths\",\"stats\":{\"completed\":{\"total\":647,\"ratings\":[1,1,1,1,1,1,2,2,1,2,1,1,2,2,1,2,1,1,2,1,1,2,2,0,1,0,2,1,1,1,0,2,1,1,2,0,2,1,2,1,1,1,2,2,3,2,1,0,2,2,2,2,2,1,2,1,1,3,2,1,2,0,2,2,0,0,2,0,0,1,2,1,1,1,0,1,2,1,2,0,2,2,1,2,1,2,1,2,1,2,2,2,1,0,1,2,2,1,2,0,3,2,2,1,2,1,1,1,2,2,2,1,1,2,1,2,1,0,2,2,2,0,2,2,2,1,2,2,2,0,2,3,1,2,1,2,2,5,2,1,2,2,2,0,2,0,0,2,2,1,2,2,2,2,2,2,1,0,1,1,1,2,0,3,1,2,1,1,2,2,5,0,0,2,2,1,1,1,1,2,2,2,3,0,1,1,0,2,2,2,2,3,1,1,2,2,2,2,1,1,0,1,2,1,2,0,0,5,1,1,2,2,1,1,2,1,0,0,0,2,2,2,2,3,0,1,0,2,1,0,2,2,2,0,1,2,1,2,1,0,2,2,1,2,5,2,2,0,1,1,2,2,1,1,2,2,2,3,0,0,1,1,2,1,2,2,1,0,1,1,0,0,1,1,1,0,2,2,0,1,1,4,0,1,2,1,0,3,2,1,1,2,2,0,1,2,1,2,1,1,3,0,1,0,2,1,1,1,1,3,1,0,2,5,3,1,1,2,0,2,0,1,0,2,2,2,1,2,2,1,2,1,2,0,1,1,0,1,2,1,2,2,2,2,0,2,2,0,0,2,0,1,1,2,1,0,1,1,2,2,2,2,1,3,0,0,2,1,3,1,0,1,2,1,1,1,2,3,1,2,1,2,3,1,1,0,2,2,1,0,1,0,2,2,1,2,1,1,2,1,1,3,0,1,1,1,2,1,1,2,1,1,4,2,2,0,2,1,2,2,2,2,0,2,2,0,1,2,1,0,0,1,0,2,1,1,0,2,1,2,2,0,0,2,0,0,1,2,2,1,2,1,2,0,2,1,2,1,3,1,2,1,2,2,1,2,2,1,2,2,2,0,1,1,2,2,1,2,2,1,1,0,1,1,2,2,2,0,2,1,0,0,1,2,2,0,0,2,0,0,1],\"quality\":[5,5,5,5,5,3,5,3,5,4,5,4,5,4,5,3,5,4,5,4,4,3,5,5,5,5,5,5,3,5,5,2,5,5,3,5,5,4,5,5,5,5,4,5,5,5,5,5,5,5,5,1,5,4,5,4,5,4,4,5,5,4,5,5,5,4,5,3,4,5,5,5,4,5,5,5,4,5,3,3,5,5,5,4,5,3,5,4,3,2,5,5,4,5,5,5,5,5,5,5,4,5,4,5,5,5,5,4,5,5,4,5,4,5,5,5,2,5,2,5,5,4,3],\"rators\":[null,\"Es4eX2stRpyoXeC7f\",\"SE5G2Caf3btnuGmz6\",\"aRTLFCvovQ9MfSRsP\",\"DLzzSngQesF45TdC4\",\"xqSGQoYxSxRAe49SP\",\"beSt5pzrK2WWpJpna\",\"yKQuoK4KApPSziTJk\",\"iq55QasecYJXKz8rx\",\"gBGjCfJvPHswDM5JQ\",\"f4zCPbQHwBfi9YueC\",\"vXcXYx92QnTPCJ4T5\",\"AzrTAFAXhhkQsvj8A\",\"YLqdr7bYjwew2KM4N\",\"ThsHKSoB4mXhhmmAM\",\"wKcNyzPRrFEKrw7zL\",\"gXTAie79kiw28tx5u\",\"rWhXHhzF4W8bea6LP\",\"pi76g3eRpnKrhee2a\",\"6QRdEoF3Avciicf97\",\"btabi3PdyisuY5tn9\",\"6asyTYvz7kMPee8Tz\",\"Hhvy3EGqWBXt3nFPA\",\"Hj3RJSopq2NDd4Ca9\",\"r7f6nejvdStMKbk6y\",\"M5uLgawsBcfTePnsL\",\"FcsLQwSrqQL9PLaSL\",\"aH9yER5QQ4bFBN8SR\",\"oMZovHkR6QqNvQwyc\",\"hqDHXpWD7q92vpcnY\",\"mMBuEpu4HJapyPECj\",\"bh9z9vH69kxnLAb7K\",\"jSj6vcM6H5EXvozFp\",\"AxLstTKkdC2TBk8mJ\",\"Km9wzTx6KLYSrKzLN\",\"PtzP3r4nmXpzTqbi6\",\"9jasWuRGFtEtSYh76\",\"opeNyowQErAgvjZ7x\",\"AmfkCEXMowTH9xtJ4\",\"NjdrdSzHsS6qiS5pA\",\"H9RKWBtSnZxAHdgPD\",\"aHmA392v84GW2Ke8b\",\"rC9QhiC7Wc5kMtXpe\",\"MDhcNwnFPjPb6fHSQ\",\"49ptiirh7uMh2pzBR\",\"gGGAAEGLdXLb7zCsT\",\"C98hjCATXbdzAKsP3\",\"iaBakrrPJcyecakum\",\"GCK8Zpht32cxeocpc\",\"RhWecL96F9KJgrFwn\",\"Wcfj5749oy3SsBaQX\",\"feJq2mWJjLMA7MDzp\",\"geG5rf2eAukJudzow\",\"jxeDegnzpCQMcRz6Q\",\"nZjJ5KsypYqAyAHRe\",\"enJNeicq7EMgFNsT5\",\"mG8HqKiAQFTdRZthG\",\"JAezJEx3rhCeb8vjE\",\"o7xEZ5bRMMecToiTT\",\"WdFdxvoDg8q8N7NqM\",\"cWfRn8q8cgf42ZRYt\",\"E8Q6h8ogLP679bvGA\",\"HHLoTxGgvD82ksQ4x\",\"p8qqFdJ3FSk5x9z3G\",\"XRvBbYnrHgbicQy8M\",\"sQxRs2zEC43J8uN2e\",\"tn9LJD37iaKTHNLpt\",\"JazMRqJS77pfKFH2t\",\"iumiEEzgPfm2oJSA2\",\"YmMgWhzhHhQLmGGgH\",\"PrnM884nRSA9gX6z8\",\"2cdvd8yuPLSwvGj9w\",\"r46xGiqGWPgGKi9xs\",\"FErb6aDaYTL6mNA4S\",\"iqP3rQ6sqsuryLxQ4\",\"BPW2Jy9MT5vLeWwcJ\",\"bKYRtQDE7fSXjsEwA\",\"zAuRX6uj2EKMHh6oP\",\"DrkR35NqnP9NDLbq6\",\"p5QkcqbZ5sHXoQMt8\",\"YRSAk8oDy2PyNndzK\",\"XAEZwNdFPMswpR5Rj\",\"ESjBcTLTBSz3EkcCF\",\"L5hG4Gfr5523NQRsL\",\"EB3bYMEaP87Zf5sLN\",\"EF7uncLG8eD2mHbbz\",\"L5BdseFprSQq4GE4R\",\"jfBuvNcWa9n75FnDv\",\"4JHT6DjpoMZgS9PxQ\",\"tttmkGWkFdGQTtKzq\",\"CyY7F6NTMLMHThef9\",\"9pCPyhvQmbkWyD2LL\",\"Gm3gEf55uxaL6pFNg\",\"Wi4H6ayKsNDWWQCG5\",\"hhxjQREtmHSheH9Pj\",\"8pWL5qx5eWfmFBnzQ\",\"ddvkHs8QYknctjST9\",\"qb2DTmzQj4vNfq5K7\",\"2mkNStLXYqJHKWg7i\",\"SbZxPgbvbkNwhfhM8\",\"ny2itLDKR4RkEiKAQ\",\"AeJSxRqw2dJZuGvdk\",\"xkv4JqY5BLb3JbC3C\",\"XHDfgrpqcvCJKSPt9\",\"r9hHZYPQAqJ9DbwLX\",\"DNfqzcWoQsucbgeuc\",\"HEaNAWK5KzRqsLPkq\",\"pHp9XWwL6QBTRSWPY\",\"KCgGHbKRJ94EZNYnp\",\"cMc7DqBvwRneT9Fte\",\"9Wdhow5kqFEuWPZ4r\",\"fF4kNoDjAd6jwve8b\",\"hSGA99ySG5ePGK7CJ\",\"PACzKzRcetPFikW9A\",\"LJHqtiqLzCYdWEzzc\",\"WWjfmrcYkp8BukJMK\",\"qaPjAANdnxFnWfj5d\",\"LoBusTzu9YKvsj4tH\",\"AyNShHzRFSQLChQLb\",\"iY7Hu2p3miMKsCbrn\",\"8WeJLyNE4h6nJ2dNh\",\"uFfEio8nzDvL8emhp\",\"anq687oY8v8nNGtsM\",\"kCE9JknwngM6oqpSF\",\"ZTRSyqnk6uHJvrF2m\",\"82weQfHHmno4Mq4X7\",\"s8c7Cu8q7rudypmPM\",\"6Ftue3GC5bpH6GQy7\",\"LkkSjQPbjQEr4dqNj\",\"ZLionuDPjKQGG58Pv\",\"x2rocrTaTpLCDR24d\",\"WPyaK4eZ33hzstq28\",\"N6zaoTHFt8f8Zkeri\",\"TrdLrz3CDQqe6oSSK\",\"7JvSKtxg4JJ42QnmN\",\"R2kFe3iPafacJcWtR\",\"TWhtuegb8G7ka3Tvg\",\"9vyjn4WyWtJ6o2wop\",\"Po3v3dHCk6wYGKMwi\",\"CD7KH8tFrzyhs9fj6\",\"xuf2jRxTgubCfweXP\",\"rPYYRMqhAoADHNetw\",\"vq79zkvXpJSGSHdk7\",\"XZXmHE7uyz9a2zJdo\",\"BrJz2HEc8cuoCjC5h\",\"a8cszayxLWd8JZ5X2\",\"85MZxLby9c4dRJhsb\",\"kSWboREiBCy9ytrXC\",\"gBNyD9imKSugp2vGv\",\"xhTWsXurwTJYYAoZS\",\"Cu42pFbnmM8pBfzSy\",\"RmFaEddcQhYYiwaNr\",\"9pvZWS3WedxxBkCHb\",\"682AB4HGc6WTX3EYJ\",\"9WRBCx9A9CHxgZWas\",\"QSZZZKPdCcT2sYvek\",\"x9CWxL7Q7yCHdrAmq\",\"twW8P5GtEjgyWTm3P\",\"r2Cr74L2qNRW8oXJB\",\"4NBjGwGhv3mt8kszG\",\"HDA4Dor7DhHsH2KMJ\",\"nRawx2mK5SJkaeKES\",\"fF4i6npzpw2nEcEDN\",\"C9MDYYvASaeXu8Rmq\",\"LxnWCf3Pt7TTgBC8J\",\"LPt8WWo9vGouKvZzb\",\"PeRS9RQbET8oqvAwY\",\"3hNkSdy3gSuExARJ3\",\"GkYtSbQuheBF4Enys\",\"4pagg6vw2Cjepv7tN\",\"7LMMvwPB8dfWNvaGm\",\"3fFQ4XkdL2WywELg9\",\"Cc4d6DCohzmysu3Eg\",\"LFSASkxgw9hr3KqmC\",\"A7Z9ohZj74WNoXsdW\",\"r4H9NHCZ9Zz5MAh7x\",\"ZMd8it647JSYTvx8Z\",\"L6STJXpzLQbcMjBTW\",\"mtMBckCxzcuMjTSWq\",\"JttXvg9LhuMasDbTe\",\"bur3yQ8s34zqKGEro\",\"QRv96jmNaYsWkxQEG\",\"4R3RZ6v5Lyp7MYN2H\",\"xhBmKfR8bBWtAqBM9\",\"NXtM3si2K3i4DySMn\",\"mmfuJ3ZR8NMvdDvaN\",\"vpCf2JDhhrBkzeRLY\",\"eSHMq8bEJMQr5FfnW\",\"xfoqta2hyAk7eK8ZC\",\"RqyYTYFCxB97XhKhq\",\"5ugSpfvW2FHkxqsn8\",\"Peod8ANXrPDnZFDKj\",\"NXEuqWmmtyM5BeLyB\",\"c2KDufFGPes2gHEJG\",\"hog2ehRsuf7eqEiNv\",\"T6YdPgzzpGruodS48\",\"563onSvqgjToY79ah\",\"rhh2bYED6Lgi6rBB9\",\"bt6HLCdrhigy3mQWe\",\"ufzq37dYmCMgM9BFH\",\"FxHrfuezGxpzjKFoa\",\"wB47dmNBe3aFZZcFr\",\"cuNF8tCzTzcrckYFr\",\"dvCcD7fQKsTdf9ahZ\",\"CFa83w8i4ymn4BEdC\",\"Mu4zH7nxbkhvpgNmr\",\"a9RQe5ZZxg4CAwy5m\",\"Phey8FT7ud7FzQHSd\",\"vuRCjZg3yvLig4LG3\",\"3hDoWNzc5YGyyMRaG\",\"fGGSRS9iELY6ZbWae\",\"4ctMP5wPWak3SBsw3\",\"MQwqRxatD83h4Pgca\",\"vG89NQSMtx6Md8QQ4\",\"XH4qG3FHHZqchfKWd\",\"9z5riYDjvsfh2q5ya\",\"3imMJs5N7p3rDoFHo\",\"eDxo7x3CaYvnb3nQB\",\"a9nWyx6xBPy6xepuS\",\"KQBvMv88o9M8eJrKL\",\"srX7BxDt5GoPC3PP6\",\"r8WfKzz9m2WHYTvNx\",\"6jQjvCqLZMti5CqDv\",\"45CKA7NjKNYd464Fj\",\"buX4mCQhtXCfBjeno\",\"TSguHP5Y6JiBH6Kxx\",\"4ySzqKC5s3ZRpG9di\",\"NavQ8rqvi3CgHkPjJ\",\"henkXNsBPpiwZxqmu\",\"R6Br35rEWAquiTjuN\",\"N7vpEM6gnyAxtDaKJ\",\"xim7rYFput3PcqH8q\",\"x4RXWxXdpiBNX3cYQ\",\"co4iSNcqpFK9rXM7s\",\"ckMvGF5TAyCwcxJBm\",\"qFDHZokQQSkqKeTES\",\"Z6zezjFjr7e5DrmdN\",\"R2ZwtraCp4iWkETB2\",\"nSQh85oi5P26GsCew\",\"yRj5yxAy3L5uqzcDy\",\"nt5JdfvC89XfxkkZa\",\"LB9h9BGHHmXRRzDBq\",\"Z5yx2PADNWHXWkq48\",\"RKDisWCPypAEasY9j\",\"Ag5fRrZ9MrAZc9vpj\",\"jkxZy3n2bkEMzCyRz\",\"8jCyc6uxRuJyoeKX6\",\"5pSn2sYdGgT8ERzhp\",\"oBGTbTXvsKJyHrKxt\",\"JWMdYcewDGTmwPNgp\",\"v4KDFrk48wGbxtf7N\",\"TBFo8A2GMaYiPBTiW\",\"85HkDnzuuK24reaJL\",\"LAdTyvsotBQPvBJnK\",\"vitL97me5hYW9rY3L\",\"dpBWvbfiCuCE2gw4Q\",\"mTF6oWX2WhFR4M3QK\",\"ThKRnrQ3c9wDYiAq7\",\"gHZi2PHEWpMTEuLKF\",\"HsFc9PgmpP2X9Fwh9\",\"hLxZcZuYW7rNPJmx8\",\"hnPmCMcx6ra9Jx6L2\",\"mxw4ZnGfysyrnL4G2\",\"p8Q29Z49dtYtkN3QE\",\"nTpc7JJzFfy9o3DRD\",\"5oRAePptFfkEN7hcR\",\"nHj7SC5cnmkTApbgY\",\"jyoLggHk8xQKZuoQC\",\"c3NRnPSDorM6Sshcz\",\"ic8cXMkEM5B97GsT6\",\"KatuyrSLBmCQLD5qC\",\"txArt4JLGHZHT5cS6\",\"TqwrYcf6CCtFvR5WM\",\"GZYScPXWH7LCShhgJ\",\"jnG2aAkjDttAz9r7k\",\"DkSMZ3jZLkwviKb9g\",\"kmuz7z8uXFRGPPYFf\",\"d7PjwEf5Ff8W5eD64\",\"zKJkdgWh4EBMK4LmB\",\"BtWreKc8uJkdoKpP5\",\"uRTnsbnSDC9a7KdbH\",\"XHFDWDJCJ6MpiwmvE\",\"LT24D8s552BJseSbA\",\"PJ7Dx5BRQucM6W5a8\",\"3SgSNoAB3sxaYeT3w\",\"wo4zLTAeZcmaJzH2Y\",\"fRzoyTATm7ib9EPmA\",\"3cQZGMf2zy7vE3GAG\",\"m32RSd5YW6fW2uvrK\",\"ragM7n6otwD7oR2tf\",\"YgMcDT34dLkENKnT8\",\"tdinF6MRzC6AdNX8g\",\"Xk2g4CNFAnYcvxiSr\",\"Dptt7WnqcjbA5KfBy\",\"tXbdfizierPihk9oH\",\"DwZ3DCuTc9APyj4ft\",\"xEX3TDY6C2h82dJTn\",\"tWhHwTd6SZeoZdbNu\",\"SgPjF69J25jT3dn4X\",\"W4TtzLajjmS8QPK3c\",\"dQXE857oKWAcbD6xh\",\"qx6yvahdH8aw4Jnm7\",\"TAo4oPKjMDxxhaY6X\",\"rLMeCAzEE9Grp3yce\",\"zPn2GuRK2CdAxA7T6\",\"9RPK7inRF9bnkkuNd\",\"N735m9s7a53x3oFf3\",\"7YoyZffg2y8dvgWk7\",\"m4y7ZJtQ5FR8gqig2\",\"REphA8bTxDrFEkquS\",\"S79XKxKQapWwQEjzJ\",\"9tRwPP6gQBJK8Jmtn\",\"yPxmJuEapqT6jHZ7Y\",\"QPmpRHRhpFZufGEZS\",\"vcqtRyT5evsbR9nhW\",\"g6TTfNoMw4WvaZjgv\",\"fc39bfkfrkMXpYv96\",\"9BMCFLD5EioxH8Qvq\",\"L23hXCKLuxXL6b9Et\",\"HXbTKW3jmmyRAsKrr\",\"DLF6e8RDh8xwFKnra\",\"u78bEQrnSiQhTsdR3\",\"EceHmvBnKvSS7SzZy\",\"QjozPpjcpLH5GoEpe\",\"sxci7DYKNa6q22Sjq\",\"fh6HyzjehYnophwpP\",\"RBjTdBYHmyoPMvAow\",\"rBZvD2gjKuWuRJu4G\",\"2F5DQqJ86GARv2ko9\",\"Cv96JXzHZvMoA7ALP\",\"c7uBxu2rgY77H5d79\",\"rhS8qXRjZcpDXkwnE\",\"Tb4wmyd6C3jnd9BH3\",\"a49eNnfRwSMxsDJXf\",\"4tDcimzxSmkfHEwBE\",\"mfm3gB39arY8Rjb2y\",\"gQ8D7KsdDcAC3YCvT\",\"R59WsfpdtghPxgNzb\",\"34bE6mric984YYLZQ\",\"XDLRs9c7kckNxZ5zE\",\"5MErqygHnucz8JfQc\",\"J95GvNKNpppDF48xQ\",\"NPYZ3P4dhayiqn778\",\"gDErzmctwWubCxKrQ\",\"rLrp94eTvY3ZPHh5n\",\"qC6DzLFc5JAnh4Bkx\",\"9BrYCjw7SXecp32h8\",\"YwGRwStQygfi4saS6\",\"aomWW6ubgH6zvmWG4\",\"z3tcMuGJXxXZraJvJ\",\"uw47663LqPME8btaA\",\"ebpgpe44AqbHdSSC7\",\"GvLLKHi7NwAjutdDk\",\"ZMdLvKF9PSmmHCnry\",\"TA9dwvnSdta7rTynz\",\"9azx6pJHMGK7dvDzQ\",\"zTtKiCbLWzaf2Yjo4\",\"QyJn8axbkgXJ9fKTp\",\"D49KybvhAEwK2iDRK\",\"YS2vn4mFRcHprdtWC\",\"QD7mPMD8gmTP56nPv\",\"o2DvRBDJDEuKg5q6F\",\"ivSS53mqFYmcQW8ru\",\"s2LcT4kjpj4Rwcusc\",\"osRNCTvFE8WJ57S6x\",\"Wgp94thinHgqS9nBy\",\"srJ34BaybkQh3qRkM\",\"KKvyCXk9tMxooo77Q\",\"kFjodpwa3KSJZqn3X\",\"dcW9oK2uRo8h8mBe2\",\"XmWJPAXHZLbvsk9r3\",\"Bb9zKaogmFdD9vaLY\",\"GArCerEapdotZYMDy\",\"AeSmk2XWGcTLHB7PJ\",\"2zCYcc8oYxZjSjTQN\",\"wTc283wowqsFisKNC\",\"GBwGqTWbfaanB5PnE\",\"H2TNggjJLpTbGXuDF\",\"gomEZD3NXgS8JRHzE\",\"gj87yXyoJxhoQLetq\",\"uFtGHzbNunJXHPy6g\",\"ikkjHDqBHu6fT3vGL\",\"dQQ5ysyheYPMYF6QK\",\"QfGmQTXSS2njqbayy\",\"mc8vKAScDCm4SQXd4\",\"NdG6nDvrSPKy6RjNP\",\"uCt83rv4KorFneZko\",\"fDsGG3qW8tqGBa8by\",\"84Hgc5nEYKTJkfzr7\",\"CHjz2aeAERPRe6yzb\",\"2zFNsooyzbRARd4Rg\",\"ARsbWxnYLRs4xD7xs\",\"5Kf9z3G9QBs9fkvLs\",\"cjGxs2rDhS3tyhh5L\",\"54438nr5aHzFGfSox\",\"qDvXiyn6YpbTJ7hsy\",\"J9zJq7PMGb6mqzcHW\",\"btigoA2nx8vNAG2Fz\",\"jCjCvyhqhpebkJn34\",\"wPowfj5nHPZcqQucb\",\"mLMB6d7jTF7jhxzvt\",\"e5otnfD2mfu3pm7AS\",\"T9qdZjNzPaESdJsdC\",\"EtBhaLQKHesEeLfi5\",\"8tQomEET4qSWPgWkF\",\"xdMtQbhqQ8EBa53jg\",\"XkBC3xiEQaiGLSw7j\",\"htXCitorobtqYymjN\",\"igyddxoWhf6FPnRr6\",\"Z3JZpmrNTwzgpob2n\",\"qdKMTPNkRgdjTr4zf\",\"cR3ibTMxLyEdDFCHY\",\"YEhYjuth3z9P5kBXu\",\"Ke6Q7zjiyZtSjzrXF\",\"JJGPzkqHJnd5Nhfun\",\"nEToGNYALCyFyzjQo\",\"AHmgsYBy6A66bDQFC\",\"J9RJf8bBmB7MpzF3m\",\"dXJxmZLzFZtHay7Pi\",\"M3FuRmfxX6HG6q8Gd\",\"a6QyecnvcLFAMWq7e\",\"HGMBWNunPBbRybGQj\",\"478iCTPiXNjoHXwHD\",\"WNAstuoBy6yyd2YLp\",\"Ac6nvFJKAddyEYG5T\",\"iqov9jKw2ghQLYkJs\",\"QwkJidQW7vvEY6TLp\",\"ZjKrn5xeE33znMr4S\",\"u9CXkXMyoxEPvLXCW\",\"TAYCEE8zNN9aBTR7F\",\"owBPW8bCQr2LWEq5f\",\"an6viPsaeJYDWsjP9\",\"iDMi5Qa4Z2PcthpJA\",\"hFciPGadYA9rMWyeQ\",\"RsujLHaML6L3KinzK\",\"wFRLGjA56kj7xyhmv\",\"pydFoTLL83fpxP7d8\",\"dyhFkpNebHYrMfT9f\",\"J7epB3qSQJ2E8vWkY\",\"yH4nRecpbYeYiC3fo\",\"B4pxRqzo43M7S8FbP\",\"EcRHo3A9NYXcX3awP\",\"pCwLLWTaaiRrFXGea\",\"f8CaQftToDh2DQSXe\",\"EminuXosFaHQhYKyK\",\"ec7iBYoXXeTYMBQXs\",\"ZDqPHY2Lr9Zjd34Y7\",\"wNiBiGTS9u6CgCy3E\",\"Qv2jEtTnFCXX7cdd3\",\"KantmrimRrDJz2YCT\",\"PPdaczxSt2u5cmZYG\",\"ociS5FqneHvsDvgNu\",\"diKKf3JizSk7Lx8vd\",\"vSQfYja9HWjDw5DFK\",\"yr822PZmmiDDenxpB\",\"KfT8BNBLxDGusTzAq\",\"b9Tkkzxek5jj7eytm\",\"q3qsz5ZW6JkpuGfKK\",\"KMR6vNzvSKMA2cXnK\",\"ckQwFFWyLXmDQAaCn\",\"6SW5H5q5dozh89vkt\",\"bgMGmeRH2MdkxxkzH\",\"bLJZFxCSvjHHuQWuQ\",\"KFJcByegzEdeYtCv2\",\"M9P2Ypoz7C5chALrb\",\"xW9nC9h6p77YT2iso\",\"QWZ7Tv7Pfm6uvMYpN\",\"xrfheqw4TpqnkwRR3\",\"ST84DxQjvHtGQLyjy\",\"xhqEfXmysQwDdrg35\",\"4ksmdioSzhEvJjupQ\",\"nDDNHWdGDaR83aysS\",\"F7nPtYMuTgvX2aa7x\",\"Egc4E8QQSDDyW3aqk\",\"DYwXXSr99MMoP6qWj\",\"BavjTwXsQ9N3FQqwN\",\"FNYPC36yqPmTKDaqR\",\"dCNJAT6r8CDuobBi8\",\"rSShcYZxkhTXkcjg9\",\"2twesAHRX5rmXCG8s\",\"QeQndo5Q2aziQNXzD\",\"oQJtGYRDKChALMS7B\",\"YeJAuXztdrCmv8EB3\",\"hN5hfgBocCJuBeBo8\",\"uWPFTkMhkaDFiK7Bw\",\"D5iRjnwQXaMPQhQ5x\",\"CtqFC97C8GJXHHd4c\",\"BrZt2ysZHNFBZjJ9Y\",\"87vZ2fJhHjMEyEG26\",\"rm3v3PEEcmjwtY3vF\",\"NNBEjiYw72hQ6GgSh\",\"vaNNtRHrD7i3a2hEJ\",\"Nd4MtNDweG8qM78QF\",\"DbGqnKakhW4EJnLM5\",\"ZGmwM9yd9r3eKrEYw\",\"9bQSnAjKhDYDAWMyv\",\"pL7YcMW3tGSvzqkhF\",\"ndreeS9YBDS7FN5xy\",\"o4mRM6utdDDbrTW6x\",\"a4dLesdChqyPP4Kez\",\"tftzEfLQ8TmGPFzP2\",\"XEpYY4xBCa8CFLw2a\",\"8wWgzu28KJRvr5WbP\",\"7ddZQ7LiHcoq6WX3W\",\"f6CBJntX2RFd2zAjR\",\"4E3RyLGHQbLuhtXLz\",\"78CRDqYzF9BY7ZaEC\",\"4iMe865JrPvg2uaqA\",\"ATFw2prqKTfNXFzQc\",\"unqzSsxpxj9sZ7rbD\",\"8DgmqHSnn223yJB48\",\"eE8onuEHqLPTk63TS\",\"WwnKMv7DmsbAKimhS\",\"EKBHs6uxpPgxvWKir\",\"jYYyMR2dT3W23YBvu\",\"NLAef4xXPc688Brfa\",\"ey96tARdDQaEfcZgg\",\"KDt2jSkMNEM3br7Hi\",\"g3AdgRjBLznpujQiD\",\"3KBmDpiXcgL5XcKkR\",\"XCTNsQtDAfJDQ5FZy\",\"wQ4Q5aJMh2KFCXKfK\",\"FxPDKKibxnZjGJLs6\",\"E2v7angmkBNz3F5A5\",\"i358yh76uKN3vXcCM\",\"KjuLHyY6wQzE2E8BH\",\"WpmY4NWwjaxneS6va\",\"dELmKkznAydytJTQ2\",\"2CGXWvm8mjx7qH66h\",\"TPDXhE4YcBwCdmgBD\",\"7AtBFcpwAeEoFnzDo\",\"Ks8PxaoYJgF3PMGcc\",\"2dAi9BoKKA74f79he\",\"YLwJkF2wuL3n9o6a2\",\"MQuoR6apoHs3zqPb3\",\"RwyCNgJocHpsLMseB\",\"kYDaHiL9D8QJ48zhS\",\"2NnENEWWaWPW8hZmp\",\"nAL237dFgqwCwagaG\",\"rMqX4i9CAJzrfD4K4\",\"RLBLTvS2XwrKZBZaH\",\"2mTYrwqEabB4NHPCY\",\"k5BGLagHGWfmz8h2W\",\"B4XhF43cZjCva56bj\",\"5HGyJtoZ3AffzAZAv\",\"Z29qkwGaKp3A5xJvw\",\"pf9XmkWS3RNJnC9Na\",\"gG8T24b2MdRwuGDAN\",\"q97ZAYfseBRXum4bi\",\"mqJxbDfWSSsrpsaDG\",\"Ab4PkkrQDTNK3s8z5\",\"Z8Rr9mbM9rAfXgPTZ\",\"uNhrucxp45LTahjpx\",\"fPGY38rmzX2grhhnW\",\"JgJ33Hpym9HZ47irc\",\"toopiWz4xtPcTAeWk\",\"AtHqP3zgmiaYCr6Hk\",\"cDKG5PYjAQojyGrMC\",\"yaMPPK5DrHcXQdNpz\",\"Lbx5E2YGNmFyyJrF3\",\"sJmcjnzQcxSWhy3hL\",\"hHfzDmhCbrHG359k6\",\"329Qq4BmraTimfkAs\",\"eQXwk5zGckM8tCWYH\",\"vQ5hLK96ptfC2GvM9\",\"6e7EwhH7NHxnjr78S\",\"Q58XdiSAmGnmaT27b\",\"gK9ms9FQNkjXTnoiD\",\"FmHfRwqADWPBinPfZ\",\"hF9icm7GxAnAGSjAD\",\"8Nrx9wnebk8zYPP2E\",\"S5ey9tZm55X68JoQh\",\"MH9krSADDw3FqyCu5\",\"PqzzqqjP4NJwc9JsH\",\"nFbmNzMQ38TncmfQX\",\"fkrGFAnj5Zvqkcmay\",\"Zchyy6CozovknXzGm\",\"acYbQoTDnFqXGgTid\",\"v32GEQfNRbuX3iK46\",\"6EKjQGhH23tmPtba8\",\"AAZHbmDMvKPTgw2xy\",\"G4ugp6cZbXbe9EpGG\",\"jCQPKmWmy7BvzF5Yo\",\"T4vKKB8bFPFNNBT9h\",\"5eDE9KCDnDnqBqLEK\",\"fhhMtwEpxKSgMjCdi\",\"sPhS6mpCatHG7JMtP\",\"GZqsbAxnzxczrdWEM\",\"W4EhA7Q2ts3LqtPqo\",\"GEyeZEEu3iXHfMEhj\",\"kvCa4YPsogYvN6Evv\",\"cCPvPqGF4queA5vvb\",\"bNNzujyLbK9o4sRwu\",\"iY7vojYzCu5WSnvrw\",\"zJSJkkarPx4xGBAJy\",\"AzzzwpNTQgGrMyatx\",\"MLar5tzRdfSgCpGNr\",\"6XZcNTkX7TsdhB3oh\",\"HTz9nRyzAw4BCi7xD\",\"Eaz5yswbYPBah2oLr\",\"NjHK6iDsbc3ipaFqh\",\"HScdDvAcHmgycMWer\",\"tdxi2QkC26vf5P3vG\",\"SKmcuEwNkajLT6WYP\",\"Mug7TQSjQfZKAZdzF\",\"LAtZJQCWsqQGxMceP\",\"EMn63hd4ZpvAThFfu\",\"gnF2ZT2WFAnJ8xxkv\",\"dETkZ4fGSKoaifGCb\",\"RJ6mfGK5N6pRrGRm9\",\"BYcLTueiCeWKHujEg\",\"rvojHhKH3DaxotefQ\",\"shhsBFiiuKM3FnH4A\",\"cBZPSshztBZAEjpfc\",\"ompzzoXiFiYsWmHXr\",\"z2Nizo45tifz6M8Jw\",\"JLwK4Bvwe9nbefDoQ\",\"hJJWP5mvnF7JEsQHq\",\"BoFpgjkK23LBT9n7w\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"WGS8wrCpPjDJt49m6\",\"language\":\"cpp\"},{\"_id\":\"J26bZ6Fv6bWEisDYj\",\"language\":\"java\"},{\"_id\":\"8QXJ2k4oRtDTgKizS\",\"language\":\"javascript\"},{\"_id\":\"Tr3thLMCT6zAghRom\",\"language\":\"php\"},{\"_id\":\"xrR8zHmdTvEWqdr5g\",\"language\":\"python3\"},{\"_id\":\"8dYqi9GtqAYf5jaWM\",\"language\":\"ruby\"}]}}"]