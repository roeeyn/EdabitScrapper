a["{\"msg\":\"result\",\"id\":\"402\",\"result\":{\"_id\":\"FtoNXq7DTCAiZ3z9T\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n  public static boolean isSmooth(String sentence) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":1.5321100917431192,\"familyId\":\"yf3Cc9cyQJYcax2ZP\",\"instructions\":\"Carlos is a huge fan of something he calls **smooth sentences**.\\n\\nA smooth sentence is one where the last letter of each word is identical to the first letter the following word (and not case sensitive, so \\\"A\\\" would be the same as \\\"a\\\").\\n\\nThe following would be a smooth sentence _\\\"Carlos swam masterfully\\\"_ because \\\"Carlos\\\" ends with an \\\"s\\\" and swam begins with an \\\"s\\\" and swam ends with an \\\"m\\\" and masterfully begins with an \\\"m\\\".\\n\\nCreate a function that determines whether the input sentence is a smooth sentence, returning a boolean value `true` if it is, `false` if it is not.\\n\\n### Examples\\n```\\nisSmooth(\\\"Marta appreciated deep perpendicular right trapezoids\\\") ➞ true\\n\\nisSmooth(\\\"Someone is outside the doorway\\\") ➞ false\\n\\nisSmooth(\\\"She eats super righteously\\\") ➞ true\\n```\\n\\n### Notes\\n- The last and  first letters are case insensitive.\\n- There will be no punctuation in each sentence.\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(true, Challenge.isSmooth(\\\"Marta appreciated deep perpendicular right trapezoids\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(false, Challenge.isSmooth(\\\"Someone is outside the doorway\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(true, Challenge.isSmooth(\\\"She eats super righteously\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(true, Challenge.isSmooth(\\\"Ben naps so often\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(false, Challenge.isSmooth(\\\"Cute triangles are cute\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(true, Challenge.isSmooth(\\\"Mad dislikes sharp pointy yoyos\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(true, Challenge.isSmooth(\\\"Rita asks Sam mean numbered dilemmas\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n    assertEquals(false, Challenge.isSmooth(\\\"Marigold daffodils streaming happily.\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test9() {\\n    assertEquals(false, Challenge.isSmooth(\\\"Simply wonderful laughing.\\\"));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"Carlos is a huge fan of something he calls smooth sentences.\\n\\nA smooth sentence is one where the last letter of each word is identical to the first letter the following word (and not case sensitive, so \\\"A\\\" would be the same as \\\"a\\\").\\n\\nThe following would be a smooth sentence \\\"Carlos swam masterfully\\\" because \\\"Carlos\\\" ends with an \\\"s\\\" and swam begins with an \\\"s\\\"\",\"tags\":[\"strings\",\"validation\"],\"timestamp\":{\"$date\":1567983913957},\"title\":\"Smooth Sentences\",\"stats\":{\"completed\":{\"total\":126,\"ratings\":[2,2,2,2,2,0,0,1,2,1,2,2,0,1,2,2,2,2,3,2,0,2,2,2,0,3,1,2,1,2,2,1,2,2,2,2,0,2,0,2,3,1,2,2,1,1,0,1,2,1,0,1,2,1,2,2,0,3,1,2,2,2,2,1,2,0,2,1,2,2,0,2,1,2,1,1,1,2,2,1,2,2,0,2,2,2,2,1,2,2,2,2,2,2,2,1,2,2,1,2,1,2,0,2,1,1,2,2,2],\"rators\":[\"vRXuYYBNuHEQ29fbm\",\"3pdgguqZgNDSAJSGm\",\"cp3X8hk8yNME7qoD9\",\"H5QAneaQBQvpHrmmh\",\"sxci7DYKNa6q22Sjq\",\"2xzY4DxG7jo5cuXfi\",\"RykozSgfaFDDRZ9AH\",\"3KyZcHpTtp3ETCocW\",\"knL2G536WWm6WLCm9\",\"9c8n7ti5vCjTRgiGN\",\"FocLpCB2WEiK2gGni\",\"xF2KaebJZekTjXDGF\",\"jkBTJPGPb35c3ujbo\",\"aMNhTh35QQAs33ycQ\",\"t2kdBPj9qQAXY2Ehd\",\"3gxJoNp59B4eoyyed\",\"vnAs3y7hJY7X6JE6j\",\"cG4PEDMMx8jXhWP8T\",\"Ha5J49rhojBRy3BaM\",\"yazNfwgLx7jSAZ8Tv\",\"tQatuCqYXLqvQ2rDh\",\"EQA7goKX8ssgyNf5T\",\"jHXJPfu5WXh9YN97E\",\"QPSwhNevikT7q8mz8\",\"CLmJduqJHX83dM4Pd\",\"r9hHZYPQAqJ9DbwLX\",\"3wQr9gbcKL2i26zAx\",\"phA6MomRzh9oz3eqn\",\"3KjxQu9RZ8ZSywvLz\",\"eXW8reZCCZHQzJjQi\",\"u4yanfWeeZsN3xWgc\",\"J9zJq7PMGb6mqzcHW\",\"Es4eX2stRpyoXeC7f\",\"8J2Dqqz9PaFufQzwY\",\"8JyqsSbN2FJXPr3cw\",\"AyrEvM2GLX2jqM772\",\"9gJsF5apWJGWZJprn\",\"C9yBWYcZsjmJYww3K\",\"4RHx3H8EwP2oboW8e\",\"wYYMNPe8nSiJFbvJw\",\"pCQJhR7WyxYmF6CLL\",\"82weQfHHmno4Mq4X7\",\"hB5mgzMwQSnhBzi7P\",\"Kso7rzAKB4TTCPKgM\",\"5seiNqw6ZXoF2GRRd\",\"fZjkX29nhRTWWb75k\",\"jyoLggHk8xQKZuoQC\",\"TrquEHytntLKHA4m2\",\"jDTGwryGygbZiqCEg\",\"mfm3gB39arY8Rjb2y\",\"uYv96ZSpA7tBHoAGX\",\"WZujpe8yQAyZmpWHg\",\"8zZ6xmzpiFair25qr\",\"etoSR23iELGGgs9rA\",\"meS77LKqRswhF5LAy\",\"y7NyT6FnDzPhAzkjF\",\"htXCitorobtqYymjN\",\"Witn99Xo8Anbjpakg\",\"y6kfyYmydcD8tkBk7\",\"DzvdGwHEjqsX7wyKr\",\"B4pxRqzo43M7S8FbP\",\"rvojHhKH3DaxotefQ\",\"8yyfRwCsP5ovSFT5p\",\"q2tzvkrLASvSjkek9\",\"dcW9oK2uRo8h8mBe2\",\"g4NCSxxHqHCGMpWwT\",\"ce5bSQrMmuRF9f8yi\",\"jRqY4i8gPemsZMBGf\",\"k2tXkx7AyX77tQDRo\",\"Yom3RzkMYpweE8cbS\",\"Fd9765rksgPK4E2Zy\",\"YcjwCvYut6834Jzd8\",\"YFHkjbM6obMSj24zi\",\"azAzSkvJd7eyXY9x9\",\"yXGiiSAR5nBHnH3yr\",\"a49eNnfRwSMxsDJXf\",\"LTX3dKDR6XeM533e6\",\"gXTAie79kiw28tx5u\",\"AeJSxRqw2dJZuGvdk\",\"oMZovHkR6QqNvQwyc\",\"mG8HqKiAQFTdRZthG\",\"oMfq73A434YWhSuWQ\",\"rWhXHhzF4W8bea6LP\",\"8Xx8nWXRydHDBGfQf\",\"jXTnL3JatkKjoifyb\",\"mQKWauR6b252TmdX4\",\"hD6sfDtntpqT8NR2o\",\"9aurcvJhcA68BC9nY\",\"zbP2a97teg8aETaXu\",\"RGN3QTb5LXj4ZPPkj\",\"zm3EbmaR7omaRmxoi\",\"3fFNDjDWHMfcvwidT\",\"bur3yQ8s34zqKGEro\",\"zZfMwLuoERGmybgib\",\"DkSMZ3jZLkwviKb9g\",\"4ySzqKC5s3ZRpG9di\",\"buX4mCQhtXCfBjeno\",\"rhS8qXRjZcpDXkwnE\",\"wFRLGjA56kj7xyhmv\",\"49BpSbbPwJBpfHkMg\",\"jCjCvyhqhpebkJn34\",\"KMR6vNzvSKMA2cXnK\",\"hhxjQREtmHSheH9Pj\",\"JJFPy22rhWmioEDwN\",\"L4tx8QExmr3MTE9TX\",\"unqzSsxpxj9sZ7rbD\",\"FxPDKKibxnZjGJLs6\",\"uw47663LqPME8btaA\",\"PAEWysAAFheYiYPBp\",\"nFbmNzMQ38TncmfQX\",\"XH6378Zm3WBm679yx\"],\"quality\":[3,5,5,5,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"isHidden\":false,\"quality\":4.714285714285714,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"JzBXWheBF6Fs8sbkW\",\"language\":\"cpp\"},{\"_id\":\"SkY5Nw3rS7WvkQmFc\",\"language\":\"csharp\"},{\"_id\":\"FtoNXq7DTCAiZ3z9T\",\"language\":\"java\"},{\"_id\":\"wRX9cFtAxPZj86Drp\",\"language\":\"javascript\"},{\"_id\":\"veFgC7QFEBmG6xE3G\",\"language\":\"python3\"},{\"_id\":\"9kWY3B5jd7LSaue5w\",\"language\":\"ruby\"},{\"_id\":\"RDSwe6sjgvkCai4GX\",\"language\":\"swift\"}]}}"]