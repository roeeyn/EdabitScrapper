a["{\"msg\":\"result\",\"id\":\"381\",\"result\":{\"_id\":\"LzY7r73f9xKhKvtki\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class WordLengths {\\n\\tpublic static String longestWord(String phrase) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.5083333333333333,\"familyId\":\"kMK8BXPxqpoqpxXNZ\",\"instructions\":\"Write a function that finds the **longest word** in a sentence. If two or more words are found, return the first longest word. Characters such as apostrophe, comma, period (and the like) count as part of the word (e.g. _O'Connor_ is 8 characters long).\\n\\n### Examples\\n```\\nlongestWord(\\\"Margaret's toy is a pretty doll.\\\") ➞ \\\"Margaret's\\\"\\n\\nlongestWord(\\\"A thing of beauty is a joy forever.\\\") ➞ \\\"forever.\\\"\\n\\nlongestWord(\\\"Forgetfulness is by all means powerless!\\\") ➞ \\\"Forgetfulness\\\"\\n```\\n\\n### Notes\\n- A **recursive** version of this challenge can be found via this  [link](https://edabit.com/challenge/e3GaeWuJQ38fsFKS2).\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"/** \\n------------------------------------- \\nCodeGen 1.3 for JUnit 4.13.0 \\t\\t\\nTest Case: WordLengths::longestWord \\nTimestamp: 10/18/2020 7:27:24 PM \\n------------------------------------- \\n® DARKKO 2020 © \\n\\n**/ \\n\\nimport static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class WordLengthsTests { \\n\\t\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertEquals(\\\"darkness\\\", WordLengths.longestWord(\\\"Hello darkness my old friend.\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertEquals(\\\"Hello\\\", WordLengths.longestWord(\\\"Hello there mate.\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertEquals(\\\"Margaret's\\\", WordLengths.longestWord(\\\"Margaret's toy is a pretty doll.\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertEquals(\\\"forever.\\\", WordLengths.longestWord(\\\"A thing of beauty is a joy forever.\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertEquals(\\\"Forgetfulness\\\", WordLengths.longestWord(\\\"Forgetfulness is by all means powerless!\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertEquals(\\\"'strengths'\\\", WordLengths.longestWord(\\\"The word 'strengths' is the longest and most commonly used word with a single vowel.\\\"));\\n\\t}\\n\\n}\\n// end of tests\",\"language\":\"java\",\"quality\":4.666666666666667,\"summary\":\"Write a function that finds the longest word in a sentence. If two or more words are found, return the first longest word. Characters such as apostrophe, comma, period (and the like) count as part of the word (e.g. O'Connor is 8 characters long).\\n\\nExamples\\nlongestWord(\\\"Margaret's toy is a pretty doll.\\\") ➞ \\\"Margaret's\\\"\\n\\nlongestWord(\\\"A thing of beauty is a joy f\",\"tags\":[\"arrays\",\"language_fundamentals\",\"strings\"],\"timestamp\":{\"$date\":1602962618363},\"title\":\"Longest Word\",\"stats\":{\"completed\":{\"total\":180,\"ratings\":[1,1,1,1,1,2,1,1,1,1,0,1,3,2,1,2,2,2,2,1,2,2,2,2,1,0,1,1,2,2,1,1,1,2,1,2,2,1,1,0,2,1,2,2,2,1,3,3,1,2,1,2,2,0,0,1,1,0,1,1,2,3,1,2,2,2,0,2,1,2,1,2,2,2,2,2,2,2,1,2,2,2,1,1,1,2,2,1,0,2,1,2,1,1,0,5,3,2,2,0,2,2,0,2,0,2,2,2,0,2,2,2,2,2,2,1,2,2,2,2],\"quality\":[5,5,5,5,5,4,4,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,2,5,4,5,1,4,4,5,5,4,5,5,5,5,5,3,5,5,5,5,5,5,5,4,5,5],\"rators\":[\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"Fdq6CxMWZL8WZiNaM\",\"etoSR23iELGGgs9rA\",\"TrquEHytntLKHA4m2\",\"AeJSxRqw2dJZuGvdk\",\"JszPst3958te56jFk\",\"QKwzvqWHTffHsNPu6\",\"jb9RLyyuo565bKDzN\",\"XEkEcNqgaBDaXWxRY\",\"8X3noJctwEu2rTshK\",\"32uy2LgegdmLGpebX\",\"ApHDhTkt2DMocoaRr\",\"gXTAie79kiw28tx5u\",\"yd5PakB2z33q2JrTZ\",\"ymggGjk5woALZEbCC\",\"yXGiiSAR5nBHnH3yr\",\"azAzSkvJd7eyXY9x9\",\"zTEKMLMevG8xfxEj6\",\"82weQfHHmno4Mq4X7\",\"sfeeJr28qAH5d4TxC\",\"B4pxRqzo43M7S8FbP\",\"thA79neuEcM3J8ZHr\",\"9uvY36FiJRWxRpE7e\",\"fJAnQriWjfZA5EFCK\",\"YL9pqyCu8xsds8J49\",\"C9yBWYcZsjmJYww3K\",\"kabqCExooax4JEQHE\",\"XidTeigRWYbW78hLT\",\"bC49w5JpRaqtjd3Rt\",\"nawfTcPD4Z6krbJjZ\",\"rAwyBbput6yGyDazr\",\"oMZovHkR6QqNvQwyc\",\"rWhXHhzF4W8bea6LP\",\"DkSMZ3jZLkwviKb9g\",\"GxxuQ57rMYN5o639c\",\"mt4kmXdCCGcbatAaZ\",\"3uBTPjN6mDavuBYmt\",\"sAdpvrN5y9fNJhQQv\",\"JDPHRTDLjtmCFg5qX\",\"Q5Ds89R3uomnzyBab\",\"DzvdGwHEjqsX7wyKr\",\"jhEgpqsboiWai8sLJ\",\"tzw3HZGwwPNYeWKFb\",\"gBGjCfJvPHswDM5JQ\",\"5TaPWyRv9DZWWodp8\",\"Tf7TJFSPktJBgLA4k\",\"mG8HqKiAQFTdRZthG\",\"pPtmnJ7q9QchoG2Jq\",\"aHqxyQCEtWZgczYEv\",\"FHGtaGMKBg5knAvF4\",\"eCfmEkR6uEgg49KoG\",\"u3SF4o7sjWKgMenxF\",\"mChDtkBYawRz4mCdc\",\"TZk7ZK6ejLsTr6Bgz\",\"4xMFiwnDm6t8NgbKD\",\"muQan4WvyZu8K29JD\",\"P5BhjZxyeHQYTNyB9\",\"5kwTK3i26ubpqwtrf\",\"dcW9oK2uRo8h8mBe2\",\"rvojHhKH3DaxotefQ\",\"8c8P2NGJisyn2QepD\",\"8Xx8nWXRydHDBGfQf\",\"Ym8AjbKGSJooun3nt\",\"Yohr2MmAyaWGMbB35\",\"jyoLggHk8xQKZuoQC\",\"qaPjAANdnxFnWfj5d\",\"69K8S2NbzkqE9pAe5\",\"hDeaTsprkH6CmvSAR\",\"tyLS9T6YMfg9fMtYJ\",\"mQKWauR6b252TmdX4\",\"hD6sfDtntpqT8NR2o\",\"uYv96ZSpA7tBHoAGX\",\"JFodQijHHdRkkrZvT\",\"pi76g3eRpnKrhee2a\",\"a49eNnfRwSMxsDJXf\",\"vRXuYYBNuHEQ29fbm\",\"ny3kQWx7tvRLaHmfh\",\"LYAeQzfkv6NYPQrqY\",\"eQXwk5zGckM8tCWYH\",\"bESv4qzXhK9iYj2Sn\",\"GRCNFz4RR4JfNTeWD\",\"pjBtxB6iBPrQs6RFE\",\"WknSpEAt3FsQ6PG56\",\"pHp9XWwL6QBTRSWPY\",\"LFSASkxgw9hr3KqmC\",\"fF4kNoDjAd6jwve8b\",\"3ucKbG5cZ2JBDfCNh\",\"uFfEio8nzDvL8emhp\",\"LJrPEt32DQjZ5qBJo\",\"sWmadTuC9PXGQ7chv\",\"2MhbRQkoHJjeLvBG4\",\"zKZBHX2bCZMrKHFJB\",\"E2hpke7mHxAWsw5t9\",\"wvywkqAHFiZebaYZk\",\"scbbqZ6reSMXf6hfy\",\"FSSM3xcaTXGcxqYGz\",\"RmFaEddcQhYYiwaNr\",\"ezFRGgcYHDbRGJQHq\",\"NJFuaNdMBAJngzH9X\",\"XiSGAWkppJEnzA42X\",\"DfayAjmsi8CSSGodp\",\"EDesqdifGoa84QB6f\",\"SMpajHAFTh6C4Gidb\",\"iLQ5MN4oQ3xrtRoi7\",\"HjqsykdTaaseya2a8\",\"MG7Xf33dCze8ZA9LR\",\"RPhgk5Ku7YyzFARZ9\",\"nwMkWtzmNicb5ibTd\",\"vK5awYW6uyC2ut574\",\"GkYtSbQuheBF4Enys\",\"BrLjaZuPzmCNYG8ho\",\"9vyjn4WyWtJ6o2wop\",\"AP24KE48LDy4gP5eA\",\"6BMM7jc5FXNof53r7\",\"hhxjQREtmHSheH9Pj\",\"Po3v3dHCk6wYGKMwi\",\"bur3yQ8s34zqKGEro\",\"buX4mCQhtXCfBjeno\",\"zZfMwLuoERGmybgib\",\"aFnQPbZWBE7RdbJKv\",\"27qiJtdrfNjcePhwp\",\"8qNSPHZBpmjSTt3tH\",\"YLwJkF2wuL3n9o6a2\",\"4ySzqKC5s3ZRpG9di\",\"Ag5fRrZ9MrAZc9vpj\",\"BnaE25vvCGcfL3jiQ\",\"6rvJwN4mcX7iYGjY7\",\"sxci7DYKNa6q22Sjq\",\"wFRLGjA56kj7xyhmv\",\"mfm3gB39arY8Rjb2y\",\"rhS8qXRjZcpDXkwnE\",\"HXbTKW3jmmyRAsKrr\",\"c7uBxu2rgY77H5d79\",\"xEX3TDY6C2h82dJTn\",\"HsFc9PgmpP2X9Fwh9\",\"uw47663LqPME8btaA\",\"hFHm4XzA8NcDpD9Wy\",\"YkRtNxs3nqT9dW2Dg\",\"YS2vn4mFRcHprdtWC\",\"NGKXuPYdvtwtSf2m7\",\"mAq2cFAyPrHqugSQR\",\"wY23YQtK2T3T4N47P\",\"srJ34BaybkQh3qRkM\",\"wvQJKkb5bvTBc4zwY\",\"J9zJq7PMGb6mqzcHW\",\"r4pHuKx4XcFPWCJHE\",\"htXCitorobtqYymjN\",\"jCjCvyhqhpebkJn34\",\"zTtKiCbLWzaf2Yjo4\",\"J7epB3qSQJ2E8vWkY\",\"563onSvqgjToY79ah\",\"KMR6vNzvSKMA2cXnK\",\"vAh63eGRwkuJtoP8v\",\"fADAnmvM4LibcQWTr\",\"2jcGem5hWH9SAQHbT\",\"sRPM2cDXPjE9TefSu\",\"CJNyy2qPh76QbXr94\",\"fYhKdTWndeZpmcKoz\",\"LKSXRiK4KkBcHT6JN\",\"unqzSsxpxj9sZ7rbD\",\"FxPDKKibxnZjGJLs6\",\"PAEWysAAFheYiYPBp\",\"XH6378Zm3WBm679yx\",\"Qv2jEtTnFCXX7cdd3\",\"nFbmNzMQ38TncmfQX\"]},\"flags\":1},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"Nbb5Jz64qJzCgcP4d\",\"language\":\"cpp\"},{\"_id\":\"LzY7r73f9xKhKvtki\",\"language\":\"java\"},{\"_id\":\"GL628YEyxRzSNKRxJ\",\"language\":\"javascript\"},{\"_id\":\"SAjHeotmGMrQ3QqSF\",\"language\":\"php\"},{\"_id\":\"Aw2QK8vHY7Xk8Keto\",\"language\":\"python3\"},{\"_id\":\"mywAnTMFyvNvD78qT\",\"language\":\"ruby\"}]}}"]