a["{\"msg\":\"result\",\"id\":\"273\",\"result\":{\"_id\":\"AwHcrbtX9vXXbARmX\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class FilterDigits {\\n\\tpublic static int[] filterByLength(int[] numbers, int length) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.1333333333333333,\"familyId\":\"tngpkQi6mAEBCqrqn\",\"instructions\":\"Write a function that filters an array of numbers based on the criteria set for the number of digits.\\n\\n### Examples\\n```\\nfilterByLength([12, 2000, 13, 1979, 12, 17], 2)  ➞ [12, 13, 12, 17]\\n// An array of only the numbers with 2 digits.\\n\\nfilterByLength([88, 232, 4, 9721, 555], 3) ➞ [232, 555]\\n// An array of only the numbers with 3 digits.\\n\\nfilterByLength([2, 7, 8, 9, 1012], 1) ➞ [2, 7, 8, 9]\\n// An array of only the numbers with a single digit.\\n\\nfilterByLength([32, 88, 74, 91, 300, 4050], 1) ➞ []\\n// No numbers with only 1 digit exist, thus, an empty array.\\n\\nfilterByLength([5, 6, 8, 9], 1) ➞ [5, 6, 8, 9]\\n// All numbers in the array have 1 digit only, thus, the original array.\\n```\\n\\n### Notes\\n- If no numbers of the specified digit length exist, return an **empty** array.\\n- If all numbers in the array have the specified digit length, return the **original** array.\\n- The `returned sub-array` should have **the same relative order** as the **original** array.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"/** \\n========================================= \\nTestGen 2.3 for JUnit 4.13.0 \\t\\t\\nTest Case: FilteredLength::filterByLength \\nTimestamp: 10/15/2020 1:29:29 AM \\n----------------------------------------- \\n® DARKKO 2020 © \\n========================================= \\n\\n**/ \\n\\nimport static org.junit.Assert.assertArrayEquals; \\nimport org.junit.Test; \\n\\npublic class FilterDigitsTest { \\n\\t\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertArrayEquals(new int[] {12, 13, 12, 17}, FilterDigits.filterByLength(new int[] {12, 2000, 13, 1979, 12, 17}, 2));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertArrayEquals(new int[] {232, 555}, FilterDigits.filterByLength(new int[] {88, 232, 4, 9721, 555}, 3));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertArrayEquals(new int[] {2, 7, 8, 9}, FilterDigits.filterByLength(new int[] {2, 7, 8, 9, 1012}, 1));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertArrayEquals(new int[] {}, FilterDigits.filterByLength(new int[] {32, 88, 74, 91, 300, 4050}, 1));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertArrayEquals(new int[] {5, 6, 8, 9}, FilterDigits.filterByLength(new int[] {5, 6, 8, 9}, 1));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertArrayEquals(new int[] {838, 435, 989, 431}, FilterDigits.filterByLength(new int[] {99, 838, 435, 7666, 989, 431}, 3));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertArrayEquals(new int[] {99}, FilterDigits.filterByLength(new int[] {99, 838, 435, 7666, 989, 431}, 2));\\n\\t}\\n\\n}\\n// end of tests\",\"language\":\"java\",\"quality\":4.76,\"summary\":\"Write a function that filters an array of numbers based on the criteria set for the number of digits.\\n\\nExamples\\nfilterByLength([12, 2000, 13, 1979, 12, 17], 2)  ➞ [12, 13, 12, 17]\\n// An array of only the numbers with 2 digits.\\n\\nfilterByLength([88, 232, 4, 9721, 555], 3) ➞ [232, 555]\\n// An array of only the numbers with 3 digits.\\n\\nfilterByLength([2, 7, 8, 9, 10\",\"tags\":[\"arrays\",\"higher_order_functions\",\"numbers\"],\"timestamp\":{\"$date\":1602696311686},\"title\":\"Filter by Digit Length\",\"stats\":{\"completed\":{\"total\":104,\"ratings\":[1,1,1,1,1,0,2,1,1,0,2,1,1,0,2,1,0,1,1,0,2,1,1,1,1,1,0,1,1,1,2,0,2,2,1,2,2,3,2,1,2,1,2,1,1,1,1,1,1,2,1,1,0,1,2,1,2,1,1,1,1,0,1,1,1,2,1,1,1,1,2,1,1,1,1],\"quality\":[5,5,4,5,5,5,5,5,4,5,5,5,4,5,5,5,5,5,5,5,5,5,5,4,3],\"rators\":[\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"yXGiiSAR5nBHnH3yr\",\"hab8YixsXxe4CcZpP\",\"vRXuYYBNuHEQ29fbm\",\"C9yBWYcZsjmJYww3K\",\"HTHTaRGeFB6tGKRCJ\",\"82weQfHHmno4Mq4X7\",\"7gBLtxKryhTryH5zb\",\"fzWFZSS3zywTR8wEe\",\"2xFvy6u3hE4LtCXMD\",\"deT73owASxwoxcZXS\",\"p2woPCQKXuWJCwffJ\",\"CggGfsERnPKGupFWp\",\"AeJSxRqw2dJZuGvdk\",\"2gigq5ge95e4u7akH\",\"jb9RLyyuo565bKDzN\",\"o5xSZjgFW6dGfSqrg\",\"BSJAuSLSs5Sv5SYAf\",\"uPQisxgE6sgg65Ymo\",\"9amCEoE43AdSneJZ7\",\"Yohr2MmAyaWGMbB35\",\"whNspBK7RpYGgaQfS\",\"8c8P2NGJisyn2QepD\",\"JszPst3958te56jFk\",\"kabqCExooax4JEQHE\",\"hDeaTsprkH6CmvSAR\",\"k8yJnkTqSWfgKAfZW\",\"TrquEHytntLKHA4m2\",\"rvojHhKH3DaxotefQ\",\"Jh6fxjjWqp6kgFQdi\",\"rGeN7HYDjNzBwCN8A\",\"Fqkiyu658SqKjw2zw\",\"etoSR23iELGGgs9rA\",\"gzTs5oFrfZwh3Kfze\",\"AYumLbifXQtQ6knE3\",\"thA79neuEcM3J8ZHr\",\"3B87tiNcZ9QZdcbaM\",\"8qtXF58mQryPRwvJC\",\"zTEKMLMevG8xfxEj6\",\"DzvdGwHEjqsX7wyKr\",\"B4pxRqzo43M7S8FbP\",\"rWhXHhzF4W8bea6LP\",\"DkSMZ3jZLkwviKb9g\",\"NdLzb3BZ5J8ftnCkS\",\"oMfq73A434YWhSuWQ\",\"mG8HqKiAQFTdRZthG\",\"Tf7TJFSPktJBgLA4k\",\"P5BhjZxyeHQYTNyB9\",\"jXTnL3JatkKjoifyb\",\"8Xx8nWXRydHDBGfQf\",\"J7epB3qSQJ2E8vWkY\",\"tyLS9T6YMfg9fMtYJ\",\"Ym8AjbKGSJooun3nt\",\"qaPjAANdnxFnWfj5d\",\"jyoLggHk8xQKZuoQC\",\"RGN3QTb5LXj4ZPPkj\",\"uNK8tLSseShR8wcA4\",\"W56bWmpQeLJ9JEDsa\",\"uYv96ZSpA7tBHoAGX\",\"a49eNnfRwSMxsDJXf\",\"2cdvd8yuPLSwvGj9w\",\"Wi4H6ayKsNDWWQCG5\",\"gBGjCfJvPHswDM5JQ\",\"QRv96jmNaYsWkxQEG\",\"uFfEio8nzDvL8emhp\",\"buX4mCQhtXCfBjeno\",\"zZfMwLuoERGmybgib\",\"hhxjQREtmHSheH9Pj\",\"8qNSPHZBpmjSTt3tH\",\"3SgSNoAB3sxaYeT3w\",\"4ySzqKC5s3ZRpG9di\",\"btabi3PdyisuY5tn9\",\"xEX3TDY6C2h82dJTn\",\"HXbTKW3jmmyRAsKrr\",\"sxci7DYKNa6q22Sjq\",\"pYonfGP4u9HNL9Z32\",\"wnxb99NiXep2TSFFz\",\"uw47663LqPME8btaA\",\"rhS8qXRjZcpDXkwnE\",\"srJ34BaybkQh3qRkM\",\"c7uBxu2rgY77H5d79\",\"wFRLGjA56kj7xyhmv\",\"cR3ibTMxLyEdDFCHY\",\"jCjCvyhqhpebkJn34\",\"htXCitorobtqYymjN\",\"KMR6vNzvSKMA2cXnK\",\"3AmkPEiGKNaSFi9Ji\",\"unqzSsxpxj9sZ7rbD\",\"FxPDKKibxnZjGJLs6\",\"5HGyJtoZ3AffzAZAv\",\"nSLvkGEpiYCtcBLaa\",\"ckQwFFWyLXmDQAaCn\",\"nFbmNzMQ38TncmfQX\",\"H3XLNCWB5yXt5YYXn\"]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":1},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"a5uCzYhMuENz4BvgT\",\"language\":\"cpp\"},{\"_id\":\"AwHcrbtX9vXXbARmX\",\"language\":\"java\"},{\"_id\":\"RXNybvGHLuvFiWKvq\",\"language\":\"javascript\"},{\"_id\":\"9h8dehaE24aW2xwcu\",\"language\":\"php\"},{\"_id\":\"WAyXZpuqxtXG9swb3\",\"language\":\"python3\"},{\"_id\":\"cHbmuFG9z3Hv3uRoN\",\"language\":\"ruby\"},{\"_id\":\"eH9LFusviBjeP3woW\",\"language\":\"swift\"}]}}"]