a["{\"msg\":\"result\",\"id\":\"71\",\"result\":{\"_id\":\"ZGzabS3xzpPcT55E6\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class ExperiencePoints {\\n\\tpublic static String getXP(int[] c) {\\n\\t\\t\\n\\t}\\t\\n}\",\"difficulty\":0.535031847133758,\"familyId\":\"FWt59ngtn6ktkxgLd\",\"instructions\":\"As you complete challenges on Edabit, you gain experience points depending on the level of difficulty of the challenge. The points for each level of difficulty are as follows:\\n\\nDifficulty | Experience Points\\n--- | ---\\nVery Easy | 5XP\\nEasy | 10XP\\nMedium | 20XP\\nHard | 40XP\\nVery Hard | 80XP\\n\\nGiven an array of how many challenges a person has completed per level of difficulty, return **how many experience points** they'll have.\\n\\n### Examples\\n```\\ngetXP([89, 77, 30, 4, 1]) ➞ \\\"2055XP\\\"\\n// Very Easy: 89 * 5 = 445\\n// Easy: 77 * 10 = 770\\n// Medium: 30 * 20 = 600\\n// Hard: 4 * 40 = 160\\n// Very Hard: 1 * 80 = 80\\n// 445 + 770 + 600 + 160 + 80 = 2055\\n\\ngetXP([254, 32, 65, 51, 34]) ➞ \\\"7650XP\\\"\\n\\ngetXP([11, 0, 2, 0, 27]) ➞ \\\"2255XP\\\"\\n```\\n\\n### Notes\\nReturn the values as a string and make sure to add \\\"XP\\\" at the end.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"import static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class ExperiencePointsTest {\\n\\t@Test\\n\\tpublic void test1() { \\n\\t\\tassertEquals(\\\"2055XP\\\", ExperiencePoints.getXP(new int[] {89, 77, 30, 4, 1}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test2() { \\n\\t\\tassertEquals(\\\"7650XP\\\", ExperiencePoints.getXP(new int[] {254, 32, 65, 51, 34}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test3() { \\n\\t\\tassertEquals(\\\"2255XP\\\", ExperiencePoints.getXP(new int[] {11, 0, 2, 0, 27}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test4() { \\n\\t\\tassertEquals(\\\"6170XP\\\", ExperiencePoints.getXP(new int[] {94, 54, 46, 66, 20}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test5() { \\n\\t\\tassertEquals(\\\"2180XP\\\", ExperiencePoints.getXP(new int[] {200, 12, 13, 20, 0}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test6() { \\n\\t\\tassertEquals(\\\"5755XP\\\", ExperiencePoints.getXP(new int[] {197, 19, 79, 41, 17}));\\n\\t}\\n}\",\"language\":\"java\",\"quality\":4.92,\"summary\":\"As you complete challenges on Edabit, you gain experience points depending on the level of difficulty of the challenge. The points for each level of difficulty are as follows:\\n\\nDifficulty | Experience Points\\n--- | ---\\nVery Easy | 5XP\\nEasy | 10XP\\nMedium | 20XP\\nHard | 40XP\\nVery Hard | 80XP\\n\\nGiven an array of how many challenges a person has completed per level o\",\"tags\":[\"arrays\",\"numbers\",\"strings\"],\"timestamp\":{\"$date\":1610930263735},\"title\":\"Edabit Experience Points\",\"stats\":{\"completed\":{\"total\":187,\"ratings\":[1,1,1,1,1,1,0,1,1,0,0,0,0,1,0,0,0,0,1,1,0,1,0,0,0,0,1,0,0,2,1,0,1,0,0,0,1,1,2,1,1,0,0,1,0,1,0,1,0,1,0,0,0,0,0,1,0,1,1,2,0,0,0,0,0,2,1,0,1,0,2,0,2,0,5,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,1,1,0,1,1,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,1,0,0,2,0,0,1,0,0,0,0,1,1,2,0,0,1,0,0,2,2,0,2,0,0,0,0,1,0,0,1,0,1,2,0,2,1,0,1,2],\"quality\":[5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5],\"rators\":[\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"Wi4H6ayKsNDWWQCG5\",\"hhxjQREtmHSheH9Pj\",\"PJu3WcTpfRrvHfQiS\",\"AeJSxRqw2dJZuGvdk\",\"uFfEio8nzDvL8emhp\",\"btabi3PdyisuY5tn9\",\"gBGjCfJvPHswDM5JQ\",\"A3KrxZk4FiSymY6f2\",\"pi76g3eRpnKrhee2a\",\"J7epB3qSQJ2E8vWkY\",\"3SgSNoAB3sxaYeT3w\",\"QRv96jmNaYsWkxQEG\",\"a49eNnfRwSMxsDJXf\",\"RSombfrtxS5PSXnyJ\",\"oMZovHkR6QqNvQwyc\",\"5TaPWyRv9DZWWodp8\",\"NXtM3si2K3i4DySMn\",\"HCfkcKnPs9mrJojdG\",\"DovtrH78NMjjpDNGg\",\"yDBK5DJ9jgu8ugXdB\",\"b6PEkvr66YeCamroN\",\"TWhtuegb8G7ka3Tvg\",\"82weQfHHmno4Mq4X7\",\"umE8dRTGWzrZFp755\",\"ZqjP4M6dzu32To33K\",\"uNGztFFaAGh8bYngz\",\"6MgG8N9rkmAZKYrJ3\",\"YuA7rdrQTzpfFLGJq\",\"3h5dGS6W8akioYnWD\",\"PSQGZYok5xskqNgGh\",\"GkYtSbQuheBF4Enys\",\"EcBw39vkywQsT3Y2Z\",\"x9CWxL7Q7yCHdrAmq\",\"fi6Drmv5pdGcbAEYM\",\"NioGGZL9KCn5Ln96t\",\"z6KN9CFWcS7qjAxwv\",\"buX4mCQhtXCfBjeno\",\"tejkzX5N5NeBgjdke\",\"vRXuYYBNuHEQ29fbm\",\"6jfFmjmmvW5XYyePJ\",\"dD3Aja8PZSMXMFSDY\",\"c96gH88NsjR3MycAj\",\"xEX3TDY6C2h82dJTn\",\"77yYH6MXHNFSKYiSe\",\"tuD6GTaiyfWm87uvh\",\"eQXwk5zGckM8tCWYH\",\"8jpeC6HwxGq68WPma\",\"H469XosMjfNu8Fop7\",\"SbDRsLR6yfZXETyKN\",\"ScYoZtxALtkZXKLo4\",\"TrquEHytntLKHA4m2\",\"4ySzqKC5s3ZRpG9di\",\"8qNSPHZBpmjSTt3tH\",\"CtcMetTXaFgX6Evvf\",\"nXw9eTHFraWQtwJtY\",\"HBQmq6WPmtBYegAqG\",\"6rvJwN4mcX7iYGjY7\",\"FEGpESiobxcqjMqF3\",\"t55QWHi8o4teZxqqE\",\"jyoLggHk8xQKZuoQC\",\"s2Y76rR2h2fPKibsK\",\"a6n3a7iJydq97vTnu\",\"fGSQQds3A8gP6rc5h\",\"dQd664XYR6QKHFvHW\",\"qat6GsLjQbgGc96JD\",\"oPNPK8B6u6Rbxx9JG\",\"Jbgtqh3TTASWyWdR9\",\"ztrfkKRfYBWokFwkf\",\"jtzNdgDCzsekkdpxA\",\"p8hkfoXChHNEFDNbM\",\"sYKPxZX5xJZ2GTp6Q\",\"khdCaD6AGBiR6txLQ\",\"KdYQN3KAT2DyTzT2a\",\"Reyq7sSccAZJvJrmB\",\"2ptN2mhjFwFcHyPZd\",\"5LDvZHCDJqePeBrCg\",\"wFRLGjA56kj7xyhmv\",\"Kn5jGPkzjMTaFTCxH\",\"peSPGkvA444dd9mmJ\",\"TCvpT4EPb8qNssNB7\",\"sxci7DYKNa6q22Sjq\",\"fdyejapW3NWN7utPX\",\"Yohr2MmAyaWGMbB35\",\"8BFSTCnoe2QggN64c\",\"3qgJpdhyi4tKuqMdm\",\"R9uaMzX2Y4ND8Cosm\",\"rhS8qXRjZcpDXkwnE\",\"2cdvd8yuPLSwvGj9w\",\"RZ5TfdQhm4ekxmzpJ\",\"kDfdhZS5NsaKtPNWz\",\"9RJpt5ec2KMLuac4w\",\"XhzKztoQYYQzZ2c7o\",\"D3ASM3aWpcQ8gvnin\",\"uw47663LqPME8btaA\",\"gZj6HTKJdPGJwPe2D\",\"Gn8rShvWCKLX3cxzx\",\"srJ34BaybkQh3qRkM\",\"nSLvkGEpiYCtcBLaa\",\"yHbTMNQXXdLzDkvhE\",\"iCtBPtyhn5PGqTTcK\",\"CnssujeEPLbqShFtY\",\"cR3ibTMxLyEdDFCHY\",\"afvP29FhRou2bTaav\",\"p4mQDDJ544WGA5z5M\",\"N9Gez7PsRJZGn5h7B\",\"GSgr8hLGHeZPde7WJ\",\"6KDZNmtgvb6PCaWQE\",\"ckQwFFWyLXmDQAaCn\",\"yGDSvLJXXz5ZmaS4h\",\"htXCitorobtqYymjN\",\"AaAzAySpyo99siXzm\",\"DEDniTrstQYGounXT\",\"aKffMfkHuGunEGWFz\",\"KMR6vNzvSKMA2cXnK\",\"xrqK8P7zH83wjo3L4\",\"RsujLHaML6L3KinzK\",\"wE4roswN4ggiieGHs\",\"PPdaczxSt2u5cmZYG\",\"yr822PZmmiDDenxpB\",\"svHoRdg5sR9CLzZLC\",\"KBfJFkYQ2RbnYd3hL\",\"5QN8R22z43SrwoHDz\",\"QMcxci638CgTJ54bH\",\"kjq3gYp4TDMCQZJsH\",\"dFX3Yavez6WvHKsSA\",\"GD9Jqmu93vB4LTT8F\",\"6kB5qypxcm62PHsEJ\",\"GSs7rtv3hBbJA3aCF\",\"FcMu2WPvDobEbWhyr\",\"rd57KDjWbqx3HLEo3\",\"x2Cz7S8rCKJqCE3Xe\",\"yCKdsyn8qA4fX3H5q\",\"zo9MtKnkZegPjXvtP\",\"unqzSsxpxj9sZ7rbD\",\"xLy94bAjaLwokPcZZ\",\"5kMuNZuxiFcNRDkG4\",\"w99WfQNYsNAyJRM4C\",\"pvLrmjpfsPRQLQAL8\",\"tN8QWy3aaEzC2MnfA\",\"5HGyJtoZ3AffzAZAv\",\"rF97GDLqCgynr7BaD\",\"F8dA24AosSC8XXb7D\",\"9du58gNDkWQEWivbB\",\"rWhXHhzF4W8bea6LP\",\"YEMQNE333gAXhGE4c\",\"B4y8aoyXJtskYPFEL\",\"3exyrcibvzm6oe8eq\",\"eXQziXGcpwekMyABQ\",\"28pZTZvXDHtNfcWGv\",\"HY33ExBZtiiCoAomj\",\"4To7THbHADdtXbewx\",\"aXdxuxnmtdxGGPujv\",\"i5QeAsrM4m6hzPTku\",\"iqoFCrHypgAw9qAGX\",\"C6prbNbCwgh4GrXdD\",\"cqBBjHssuTA736Ynw\",\"NwczjpfNN8jXy5RF6\",\"6GmG5otoNYX5qitTR\",\"ZGMAnRqxt9iesogtR\",\"vRfhB7mCKLAFSsPu3\",\"cQP9NvgsyeLuwJfhC\",\"nYDWfDMhZy9r72h59\",\"aJLTQjSMpFy6dvom5\",\"Bm5z4ccgCsBdPwWoP\",\"WgEpodYY8Zya5cAQJ\",\"hF9icm7GxAnAGSjAD\",\"qoZrXudcaHo8QLFsj\",\"9i67g75x6vQvzPFrh\",\"nFbmNzMQ38TncmfQX\",\"r72oFMcCQh4rBsKHb\",\"YCQueyAK97GdiXwyS\",\"5SFF2xjZxxwDciGfn\",\"3Gf7ikLijfoxabiPY\",\"4ahuXwr735779vQ9W\",\"5eDE9KCDnDnqBqLEK\"]},\"flags\":0},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"ZGzabS3xzpPcT55E6\",\"language\":\"java\"},{\"_id\":\"yX9LqcQ43nEXo5GS2\",\"language\":\"javascript\"},{\"_id\":\"yvwdxFcxkT5hiTgfr\",\"language\":\"python3\"}]}}"]