a["{\"msg\":\"result\",\"id\":\"641\",\"result\":{\"_id\":\"3SdTEG59DAA4cPBFR\",\"author\":\"Edward Clark\",\"authorId\":\"3pdgguqZgNDSAJSGm\",\"code\":\"public class Challenge {\\n\\tpublic static boolean[] validateSwaps(String[] arr, String str) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":2.3076923076923075,\"familyId\":\"WeAQt8coonWNKBRnT\",\"instructions\":\"Given an array of strings and an original string, write a function to output an array of boolean values - `true` if the word can be formed from the original word by swapping two letters **only once** and `false` otherwise.\\n\\n### Examples\\n```\\nvalidateSwaps([\\\"BACDE\\\", \\\"EBCDA\\\", \\\"BCDEA\\\", \\\"ACBED\\\"], \\\"ABCDE\\\")\\n➞ [true, true, false, false]\\n\\n// Swap \\\"A\\\" and \\\"B\\\" from \\\"ABCDE\\\" to get \\\"BACDE\\\".\\n// Swap \\\"A\\\" and \\\"E\\\" from \\\"ABCDE\\\" to get \\\"EBCDA\\\".\\n// Both \\\"BCDEA\\\" and \\\"ACBED\\\" cannot be formed from \\\"ABCDE\\\" using only a single swap.\\n\\nvalidateSwaps([\\\"32145\\\", \\\"12354\\\", \\\"15342\\\", \\\"12543\\\"], \\\"12345\\\")\\n➞ [true, true, true, true]\\n\\nvalidateSwaps([\\\"9786\\\", \\\"9788\\\", \\\"97865\\\", \\\"7689\\\"], \\\"9768\\\")\\n➞ [true, false, false, false]\\n```\\n\\n### Notes\\nOriginal string will consist of unique characters.\",\"lab\":\"import static org.hamcrest.core.Is.is;\\nimport org.junit.Test;\\nimport static org.junit.Assert.assertThat;\\n\\npublic class ChallengeTest {\\n\\t@Test\\n\\tpublic void test1() {\\n\\t\\tassertThat(Challenge.validateSwaps(new String[]{\\\"BACDE\\\", \\\"EBCDA\\\", \\\"BCDEA\\\", \\\"ACBED\\\"}, \\\"ABCDE\\\"), is(new boolean[]{true, true, false, false}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test2() {\\n\\t\\tassertThat(Challenge.validateSwaps(new String[]{\\\"32145\\\", \\\"12354\\\", \\\"15342\\\", \\\"12543\\\"}, \\\"12345\\\"), is(new boolean[]{true, true, true, true}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test3() {\\n\\t\\tassertThat(Challenge.validateSwaps(new String[]{\\\"9786\\\", \\\"9788\\\", \\\"97865\\\", \\\"7689\\\"}, \\\"9768\\\"), is(new boolean[]{true, false, false, false}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test4() {\\n\\t\\tassertThat(Challenge.validateSwaps(new String[]{\\\"123\\\", \\\"321\\\", \\\"132\\\", \\\"13\\\", \\\"12\\\"}, \\\"213\\\"), is(new boolean[]{true, false, false, false, false}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test5() {\\n\\t\\tassertThat(Challenge.validateSwaps(new String[]{\\\"123\\\", \\\"1234\\\", \\\"1235\\\"}, \\\"12\\\"), is(new boolean[]{false, false, false}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test6() {\\n\\t\\tassertThat(Challenge.validateSwaps(new String[]{\\\"123\\\", \\\"123\\\", \\\"123\\\"}, \\\"133\\\"), is(new boolean[]{false, false, false}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test7() {\\n\\t\\tassertThat(Challenge.validateSwaps(new String[]{\\\"132\\\", \\\"321\\\", \\\"213\\\"}, \\\"123\\\"), is(new boolean[]{true, true, true}));\\n\\t}\\n}\",\"language\":\"java\",\"summary\":\"Given an array of strings and an original string, write a function to output an array of boolean values - true if the word can be formed from the original word by swapping two letters only once and false otherwise.\\n\\nExamples\\nvalidateSwaps([\\\"BACDE\\\", \\\"EBCDA\\\", \\\"BCDEA\\\", \\\"ACBED\\\"], \\\"ABCDE\\\")\\n➞ [true, true, false, false]\\n\\n// Swap \\\"A\\\" and \\\"B\\\" from \\\"ABCDE\\\" to get \\\"BACDE\",\"tags\":[\"arrays\",\"validation\",\"loops\"],\"timestamp\":{\"$date\":1570489990735},\"title\":\"Single Letter Swaps\",\"stats\":{\"completed\":{\"total\":59,\"ratings\":[3,3,3,3,3,4,0,4,3,2,2,2,3,4,0,3,2,2,4,1,3,0,2,2,3,2,4,2,2,2,1,3,2,2,2,1,1,4,0,3,1,3,1,2,3,1,3,3,3,3,2,3],\"rators\":[\"3pdgguqZgNDSAJSGm\",\"SnY7WidXJoAyyuPuA\",\"YF79LnTdprobbYY5v\",\"sxci7DYKNa6q22Sjq\",\"yazNfwgLx7jSAZ8Tv\",\"Prw5Jq38wrSoj5QSF\",\"vqmnzoMrts32Bx2J9\",\"eXW8reZCCZHQzJjQi\",\"k7X73S9g4ZEqtjk2K\",\"XbBsZ7vSHdw88tibi\",\"TBYzu4y9Ji8xXX9N8\",\"J9zJq7PMGb6mqzcHW\",\"s7iqHMchmJLu3gRn6\",\"McvYamfoJvWsSXWsK\",\"rehehi2Tr2mwaEoJE\",\"9aHkSrEhWL7Tp928N\",\"kXEfD7xxEyWd7oxxL\",\"M5n9zd5LtuuwJr668\",\"SNiXMrGpyjDGPaaeG\",\"5Ep7ALRbdgGDo3hK6\",\"ko7oJ85JMftgcbkrr\",\"4RHx3H8EwP2oboW8e\",\"2PR653L4KSN97r534\",\"hhSKYujojYnHiKFy7\",\"xnhBi4BCdJNAXXRvk\",\"3ZyEgCXkYJXybwQEm\",\"Es4eX2stRpyoXeC7f\",\"XKKhGLnab6G6kHpH2\",\"GjyqnJEkWTSQHJTKY\",\"YLqdr7bYjwew2KM4N\",\"dDP6nt8ihp6FPeT27\",\"jyoLggHk8xQKZuoQC\",\"TrquEHytntLKHA4m2\",\"pBMXMQem6BpSeooYT\",\"C9yBWYcZsjmJYww3K\",\"5seiNqw6ZXoF2GRRd\",\"k63LjKkX5p7SYng7C\",\"PnpLFxGKMRQyEebug\",\"oBCStgAyNK7z8C4WA\",\"yXGiiSAR5nBHnH3yr\",\"gXTAie79kiw28tx5u\",\"mxjrvQP2vPFBjAGxu\",\"mQKWauR6b252TmdX4\",\"4hbdSgMnhZC7C9mRv\",\"RGN3QTb5LXj4ZPPkj\",\"qaPjAANdnxFnWfj5d\",\"buX4mCQhtXCfBjeno\",\"KMR6vNzvSKMA2cXnK\",\"wFRLGjA56kj7xyhmv\",\"rWhXHhzF4W8bea6LP\"],\"quality\":[5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":5,\"family\":[{\"_id\":\"oifX6z3a36urd2Z7p\",\"language\":\"cpp\"},{\"_id\":\"3SdTEG59DAA4cPBFR\",\"language\":\"java\"},{\"_id\":\"xukQmQoGopXbQMdZj\",\"language\":\"javascript\"},{\"_id\":\"QwAwAC4xgahcCTjPo\",\"language\":\"php\"},{\"_id\":\"di7ZjxgvLgz72PvCS\",\"language\":\"python3\"},{\"_id\":\"JBTBPYJis3ejnYcFt\",\"language\":\"ruby\"}]}}"]