a["{\"msg\":\"result\",\"id\":\"240\",\"result\":{\"_id\":\"bL2E8p5DGWSNmEtAE\",\"archived\":false,\"author\":\"kochug\",\"authorId\":\"vQEmjTRgmdGNYB7yk\",\"code\":\"public class Program {\\n\\tpublic static boolean validatePIN(String s) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.1102150537634408,\"familyId\":\"XwQTQAFpgjWog9pr8\",\"instructions\":\"ATM machines allow 4 or 6 digit PIN codes and PIN codes cannot contain anything but exactly 4 digits or exactly 6 digits. Your task is to create a method that takes a string and returns `true` if the PIN is valid and `false` if it's not.\\n\\n### Examples\\n```\\nvalidatePIN(\\\"1234\\\") ➞ true\\n\\nvalidatePIN(\\\"12345\\\") ➞ false\\n\\nvalidatePIN(\\\"a234\\\") ➞ false\\n\\nvalidatePIN(\\\"\\\") ➞ false\\n```\\n\\n### Notes\\n- Some test cases contain special characters.\\n- Empty strings must return false.\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(true, Program.validatePIN(\\\"1234\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(false, Program.validatePIN(\\\"12345\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(false, Program.validatePIN(\\\"a234\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(false, Program.validatePIN(\\\"\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(false, Program.validatePIN(\\\"%234\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(false, Program.validatePIN(\\\"`234\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(false, Program.validatePIN(\\\"@234\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n    assertEquals(false, Program.validatePIN(\\\"#234\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test9() {\\n    assertEquals(false, Program.validatePIN(\\\"$234\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test10() {\\n    assertEquals(false, Program.validatePIN(\\\"*234\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test11() {\\n    assertEquals(true, Program.validatePIN(\\\"5678\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test12() {\\n    assertEquals(false, Program.validatePIN(\\\"^234\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test13() {\\n    assertEquals(false, Program.validatePIN(\\\"(234\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test14() {\\n    assertEquals(false, Program.validatePIN(\\\")234\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test15() {\\n    assertEquals(true, Program.validatePIN(\\\"123456\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test16() {\\n    assertEquals(false, Program.validatePIN(\\\"-234\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test17() {\\n    assertEquals(false, Program.validatePIN(\\\"_234\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test18() {\\n    assertEquals(false, Program.validatePIN(\\\"+234\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test19() {\\n    assertEquals(false, Program.validatePIN(\\\"=234\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test20() {\\n    assertEquals(false, Program.validatePIN(\\\"?234\\\"));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"ATM machines allow 4 or 6 digit PIN codes and PIN codes cannot contain anything but exactly 4 digits or exactly 6 digits. Your task is to create a method that takes a string and returns true if the PIN is valid and false if it's not.\\n\\nExamples\\nvalidatePIN(\\\"1234\\\") ➞ true\\n\\nvalidatePIN(\\\"12345\\\") ➞ false\\n\\nvalidatePIN(\\\"a234\\\") ➞ false\\n\\nvalidatePIN(\\\"\\\") ➞ false\\n\\nNotes\",\"tags\":[\"regex\",\"validation\"],\"timestamp\":{\"$date\":1523654267242},\"title\":\"ATM PIN Code Validation\",\"stats\":{\"completed\":{\"total\":427,\"ratings\":[1,1,1,1,1,0,2,1,1,0,1,2,2,1,1,2,1,1,1,0,1,1,0,1,1,5,1,0,1,1,1,0,2,0,1,1,2,0,1,0,1,0,2,1,2,1,1,1,1,1,1,0,0,0,1,2,1,2,1,1,2,2,2,1,2,1,1,1,2,0,2,1,0,0,2,2,1,1,1,0,1,0,1,1,1,0,1,1,1,0,1,2,0,1,2,0,1,1,2,1,1,0,3,1,1,0,1,1,1,0,3,2,0,2,1,1,2,1,1,0,2,0,1,2,1,0,1,0,2,0,1,2,1,1,1,1,2,2,1,0,2,1,0,0,3,5,1,1,1,2,1,1,0,2,2,1,0,1,3,0,2,0,1,0,1,0,2,2,1,1,1,3,2,1,1,1,0,1,1,1,2,0,1,0,2,1,1,1,0,1,1,2,2,5,1,0,0,1,0,2,2,0,2,1,1,0,1,4,0,1,0,2,1,0,0,1,2,0,1,1,2,0,1,1,0,1,0,0,1,1,1,0,1,1,2,1,2,1,0,1,1,1,1,1,2,1,0,1,1,1,0,2,0,2,2,2,1,0,1,1,1,1,1,1,1,2,3,1,0,2,1,3,1,3,1,0,0,2,5,1,2,1,2,0,0,1,1,2,1,0,1,1,5,2,1,1,1,1,2,1,1,2,0,3,1,1,2,2,2,0,2,2,1,0,1,0,2,1,1,1,1,1,1,1,1,0,1,0,1,2,1,2,2,0,0,1,0,1,2,2,1,2,0,1,1,1,1,3,1,2,1,3,1,1,0,1,1,1,1,1,2,1,1,1,1,1,1,1,1,0,1,1],\"rators\":[\"vQEmjTRgmdGNYB7yk\",\"X4ww4EcFsrfbmgMdD\",\"hcti8afrkC4abdpqe\",\"z6nQSSKTnJoTJG6GR\",\"5PXxhR3Bctqox3PE6\",\"RkXfoeQFNzfw5rdug\",\"iRgkGNCNtoPKC25EY\",\"LqrptEcAZ3tbdZ8b4\",\"ogAtfiy94gCF9742d\",\"dJcfh6gASjPCWEBoe\",\"uF5SXzwu7zEbcoCLM\",\"agtC5JGNqaWBAWCzz\",\"vz5LbqWPwpxAejP5k\",\"M3mkzSYXCpCt2HhC3\",\"7LrgrixSzJxiGaF66\",\"GRZzKCbeb4xKHFCrZ\",\"fskHo2C2gMKZxPZ5i\",\"79ZbLzp7xepvkonoh\",\"kxP2G9dmiRzxLuYoB\",\"CaoBNxekPwAD9Lsyc\",\"R3Yvf7z4HzQo2fBFb\",\"WXLd6Yr7iWjTpJDRA\",\"rQpthoJte6rreQd4j\",\"fbNWxXTqZy2mXNbGJ\",\"m7S7Zbzp9TPSZ7jgR\",\"x5JEs23Tc8ZWw3YAY\",\"BuFw8zHWYAsMvz7k8\",\"z3HbZkmL5echimwFQ\",\"sBAQgme9imkPrH2Xm\",\"ddfeZ4pbbcXFXqZmY\",\"tW2XYfMDPBbMknTmo\",\"Sm2J8ZvpXARgFy9WJ\",\"AfiYSAkd4PtCAq6MF\",\"7yTWwspi6f7maXWRj\",\"74zXNB4jwSQ7agXCe\",\"GEsPJxMjAL3iWYZRy\",\"HWzxKZb2QLFSNMTmY\",\"KMdpTq6EfLsCFGZE4\",\"xGJnf5K4RWz9cozQk\",\"79x9hFu3rkQXNRpG4\",\"sjngWfShdeS3jYEpZ\",\"aSvAujPRADKbk9p8A\",\"zovXwG27gzSSW7cia\",\"acQqozPi6NiCFqMGY\",\"9w8LWqMrSHrxxZXZx\",\"6txZnj8BuNWvnZacj\",\"RHr6NLgaGSGh6NWea\",\"vTxMZ7yTfdSqGovhZ\",\"YGYf9GKzaF8CWnDHE\",\"mvW59RPBJnoZNhxnP\",\"dYx4nRm7ynaYSgrxK\",\"DQBWgmS6xJiikttqq\",\"QWRRB6gHnYwEXLNYb\",\"L8TD5m6QcbJG7FzjG\",\"bGHDgwkiAp7RjBiYo\",\"eZQ7uz8hhE5gESjXH\",\"zP84vhK6yKs3q7xtk\",\"YF9fxqCgeoe6Mzee4\",\"NQ287FZrfSY9Swn2F\",\"CDc255P9KitqXNeXr\",\"3riR3H5ei3T86EEzz\",\"vtosp2wmv3bJ9Qgio\",\"qzFMJGxMErfBhExMm\",\"uK99RLh3CQ3yur6BQ\",\"EJFJQdyqNvcH3zBS4\",\"g4K6nM72TtXLKog5x\",\"29s9dWyag5m6phKrM\",\"hCoyBFeNMdaC88ZFi\",\"niz9xRvhYCLYvGJnW\",\"88emZQA5hCW2caTYn\",\"Prh5nSZtBPR3cJkaq\",\"mNMQvcxKSSvqqMYCH\",\"yJyjT7Z2PPQmzzWpP\",\"2uaNy5h4xatNb5Mww\",\"Ss6c4XQXgxD5kS3wW\",\"erJWHqarGkGtPJ3C4\",\"34rKGZYu7vEdoCu7d\",\"oMZovHkR6QqNvQwyc\",\"6akGaXW83HnSC5PSy\",\"5znpaFDoToJtAtF3h\",\"vew4EJaM4jGBsvnTp\",\"QS5RGoPnapStFD5Gi\",\"T6j7qdvD37y8DLKzT\",\"ydos8Ba8nZdYRNJpS\",\"CDkkdvDdqjDihTcFS\",\"veu3fKkK2DSkKTkb2\",\"yhk8G8cM3p9JAbfJN\",\"WAMxBrgasiphg5QPL\",\"JSSLvJPs8JebyfeS9\",\"ZzwR8m8Q6Gozo9ofz\",\"qGFqqzbwxiz7kZkPW\",\"TWNRBxfRjNpQh2skr\",\"a49eNnfRwSMxsDJXf\",\"LQ9T6dPa3nXcZdbZq\",\"aMNhTh35QQAs33ycQ\",\"H5QAneaQBQvpHrmmh\",\"o5H3aMNucmwhnsWdL\",\"vRXuYYBNuHEQ29fbm\",\"xHosFNDAqePRmpuNC\",\"xEetS7qkGqmkoKpt8\",\"FocLpCB2WEiK2gGni\",\"3pdgguqZgNDSAJSGm\",\"sxci7DYKNa6q22Sjq\",\"9c8n7ti5vCjTRgiGN\",\"uLqaRpZfCYpEGJJm8\",\"Yohr2MmAyaWGMbB35\",\"jb9RLyyuo565bKDzN\",\"t2kdBPj9qQAXY2Ehd\",\"3gxJoNp59B4eoyyed\",\"cG4PEDMMx8jXhWP8T\",\"Ha5J49rhojBRy3BaM\",\"5MuT2gPpME6LbfwoY\",\"fJKkZN9dvjf2csx9x\",\"8rF6PHMSaybTDsvXr\",\"phA6MomRzh9oz3eqn\",\"sb7Nh56pPFtPxLogT\",\"Eqt2WZ9iPdhM6Ma9Q\",\"jNcwk4jksmPTcAoTu\",\"fnCSoGvytLcNbjekC\",\"jbWjmMTs5iJY93mhy\",\"viQwZYpKbEFmfjpTe\",\"yazNfwgLx7jSAZ8Tv\",\"tfs6uiysC8atFan4t\",\"W4jpCs2jekeg5qAwc\",\"qgWvEan879XKFKiCA\",\"ho2xwFjGfg6WwQArS\",\"MiPadj4ePcjWjxsR2\",\"dm4ki3fhfE52M3AJL\",\"ZiozQXopCXKLkQMfC\",\"6TDEhHv3uQCZLQeiH\",\"8gJEpXHctGqC9ngcJ\",\"gXMfzkYnoTZXXemY8\",\"WPWBKqdkzkeGpgFR2\",\"hx3ZWiCKNtqwMWFCt\",\"qjh9QdweLqQDP9NHP\",\"FCtas8YzE46B9BAyf\",\"XJsankyB4bBeK2eJv\",\"CLmJduqJHX83dM4Pd\",\"8J2Dqqz9PaFufQzwY\",\"pr4Cm4A369tC9gSeT\",\"ybKny9NBc3i9fATk6\",\"MT84gXgTBztC2NLpu\",\"n6N2dYX8MghgDtjx7\",\"qp2WN8enrc3JaepdK\",\"3KjxQu9RZ8ZSywvLz\",\"7p3Btn9oRNStAZ8G6\",\"3XvbdaPm47SaJtzrC\",\"8JyqsSbN2FJXPr3cw\",\"nWviytG3HcAYxGjg7\",\"J9zJq7PMGb6mqzcHW\",\"EWFgr2v9oDE3orajD\",\"pzz8vFouna6JTTAiW\",\"s2G7xhbjaNdkGbhRX\",\"qJZsi5rhRnWA38FbA\",\"Xf5mRzAb6BoGp7daC\",\"supEsRyet9ow5W6qg\",\"HdZ55zdNW4gQ45q5R\",\"Md3zwe6ZCp4vqdx5j\",\"u4yanfWeeZsN3xWgc\",\"s8o9ptNnpNGktBWdX\",\"YLwJkF2wuL3n9o6a2\",\"2P6nZG3PQWdErgjL9\",\"C9yBWYcZsjmJYww3K\",\"5TaPWyRv9DZWWodp8\",\"fBmfMBKNcbZ4zDuEq\",\"rWhXHhzF4W8bea6LP\",\"cwfpQQAowCJCE3zME\",\"D3ASM3aWpcQ8gvnin\",\"AyrEvM2GLX2jqM772\",\"W347YkKWzfvMbkuHr\",\"o4G8juvJ3DjYYQsjh\",\"5RcAXjQAbqQtWppy6\",\"ko7oJ85JMftgcbkrr\",\"MrNyfG8SGjjBKLvgc\",\"M5n9zd5LtuuwJr668\",\"NsQ8qYQQ47gSPtQkK\",\"EZNT8B7yQnnZmuwCf\",\"5Kf9z3G9QBs9fkvLs\",\"gBGjCfJvPHswDM5JQ\",\"DbosKrTmLSChMGhim\",\"zKL5RCpX4Gt7Rn2kB\",\"i5QeAsrM4m6hzPTku\",\"eNAauiLf5f9KM6WyZ\",\"Es4eX2stRpyoXeC7f\",\"j2hKJg9sh9m3HWFgo\",\"2PR653L4KSN97r534\",\"WuAkXKpcrQy867yCw\",\"eZjHwgBfkQPCxmutr\",\"we4DCPstpD5urDitR\",\"QQxapjEoxbnJ3TvJM\",\"uqNAu5PZnSDRqZKoN\",\"tbrMZvX8kgQ6Zm5Jj\",\"g3MReD5ntBtecotoa\",\"DzvdGwHEjqsX7wyKr\",\"fbYN9Jp46RqBqCd2K\",\"Qy32edSg4rrbh5ftf\",\"xEuitW7gMaqzhq6x8\",\"wYYMNPe8nSiJFbvJw\",\"PXBjtEAAwibHxNZXq\",\"aaR6ok3gaswen9MNk\",\"rTj67TTydxqkpwFtN\",\"mdEQJ2fmGmkbhbvNw\",\"cufCWKKLntgt5vKtW\",\"uYv96ZSpA7tBHoAGX\",\"bw6kHP3k8dP2qBa5v\",\"Kso7rzAKB4TTCPKgM\",\"fZjkX29nhRTWWb75k\",\"X8iWCqQ7mQG3DJ5Wr\",\"hB5mgzMwQSnhBzi7P\",\"etoSR23iELGGgs9rA\",\"YFHkjbM6obMSj24zi\",\"jDTGwryGygbZiqCEg\",\"5seiNqw6ZXoF2GRRd\",\"jyoLggHk8xQKZuoQC\",\"tqSJxy6E4vaTyECkh\",\"Yp7uvStL97cC9fKkY\",\"8zZ6xmzpiFair25qr\",\"B4pxRqzo43M7S8FbP\",\"DzLdw6wEL2Nt5mrsp\",\"4RHx3H8EwP2oboW8e\",\"WZujpe8yQAyZmpWHg\",\"F4synR7Ea8yS2L576\",\"Zhy5X7BZnqk8hacEw\",\"3qggY3TrN3xNaMDBp\",\"3EfDGZ9Sgz5zxzD7a\",\"DePiAS7u5Pk9d6SLr\",\"P7zedbjaFw8YDzLz7\",\"cjxsqXfkAPoadmppi\",\"Dwg87a7awYWRiXFSH\",\"htXCitorobtqYymjN\",\"KxLMWekCxzy2Eem7u\",\"uRgbrK32AffPh4eQd\",\"y6kfyYmydcD8tkBk7\",\"TrquEHytntLKHA4m2\",\"zwruFCmuHkwJTpYqg\",\"Yom3RzkMYpweE8cbS\",\"DkSMZ3jZLkwviKb9g\",\"PaSg9dpK6JHre7hGF\",\"meS77LKqRswhF5LAy\",\"WkBmufs74SDQMo9Gr\",\"LJJa6DogJYWfiBAia\",\"sMMZEGp5gw9KS7MJv\",\"45FXSeKSLChn3gEhc\",\"Bj9Qvjt7MX2mGSuN7\",\"EcKPDmD4GmeFJGDTL\",\"cR3ibTMxLyEdDFCHY\",\"AeJSxRqw2dJZuGvdk\",\"rvojHhKH3DaxotefQ\",\"wMvNbysArkmmqZBy4\",\"uiNnMdQbp8fj3Zdv8\",\"8SabHk4meXzHQWaLb\",\"smuLDcXt5RcXQQMKZ\",\"q2tzvkrLASvSjkek9\",\"9pCPyhvQmbkWyD2LL\",\"A4PkKCWXffBTbMJdP\",\"Ctuq7Wc8QPQmzwPK3\",\"ycnB9Mob2aZR3uYQ5\",\"myPiB7Efg4e8kLtkx\",\"fADAnmvM4LibcQWTr\",\"osXNzc2aCxspRwheS\",\"EXFQFCRRRfdazM9uJ\",\"rvYTnqG95pm3GG8xD\",\"jLv4ckjWQwHRAiYKT\",\"QXkrEiAuhuXaZmL4C\",\"ZrXkPD45QRS4oXJmA\",\"vEN56nHw7hTxbyHhp\",\"nbH6pjzJS9Z35JD9r\",\"aFmJuByQG29363Qh2\",\"vZEydfdSPu2adZLMF\",\"3unLGuwC6Tnoy8BtK\",\"RroghSsW6MgCNEcFz\",\"g4NCSxxHqHCGMpWwT\",\"muXMnzQwGLzN6j2Jr\",\"ZMd8it647JSYTvx8Z\",\"MxmG8Gkti7L5kXYNL\",\"YcjwCvYut6834Jzd8\",\"DAQX9mhHdMTqyYbvh\",\"RhPg33AdzvSZmibXa\",\"9KAbm9niQ9Cv9LefP\",\"f6uGKbmMdBYCjrMBh\",\"ZXWDtCrM9ev3439oi\",\"SE5G2Caf3btnuGmz6\",\"k2tXkx7AyX77tQDRo\",\"TCTZucJN3tJh5t7MB\",\"hPx9H3YM8j2k94DNW\",\"NzJKK8Cuf3bcqZfcw\",\"FrorBN8wRAoptuxtR\",\"Fd9765rksgPK4E2Zy\",\"ZiN6yB9rACMaYgseC\",\"7Wq4ZNz5c3irDR6br\",\"yXGiiSAR5nBHnH3yr\",\"Tf7TJFSPktJBgLA4k\",\"fRYcPHuyEdqngMzC4\",\"35FLKaQ7LJdA7pJZG\",\"yb8T3nuL4evaeJW6k\",\"LvPcgns5Ec7wyMbMv\",\"azAzSkvJd7eyXY9x9\",\"pi76g3eRpnKrhee2a\",\"bjKYBdDcGMRTfooBs\",\"8AvGnwLnDrHXAwX38\",\"gpd8yji9GXJruAtje\",\"xv5obFhsxY93mqR5S\",\"qTXNwXBDtH3j6t7hw\",\"a777e8chPvJkY3tKa\",\"SfmXqCfDksMb883DC\",\"ygmKmjF4ja52BrNMR\",\"J7epB3qSQJ2E8vWkY\",\"gXTAie79kiw28tx5u\",\"9amCEoE43AdSneJZ7\",\"6ehQMeGtrhnhot5zK\",\"7F3i3uNDxhZM6mckM\",\"WHSB76uqJrCf2XKsw\",\"hDeaTsprkH6CmvSAR\",\"yBeWtGNg9yuECLqGQ\",\"uPQisxgE6sgg65Ymo\",\"7gBLtxKryhTryH5zb\",\"NdLzb3BZ5J8ftnCkS\",\"cJmmvnmJSXvBXtydi\",\"PmfzvaX5ZJscpvHXc\",\"cueHAmTrcWuowXf58\",\"P5BhjZxyeHQYTNyB9\",\"oMfq73A434YWhSuWQ\",\"mG8HqKiAQFTdRZthG\",\"jXTnL3JatkKjoifyb\",\"8Xx8nWXRydHDBGfQf\",\"QKwzvqWHTffHsNPu6\",\"Q2u7eLt9YmNXjD9J7\",\"tyLS9T6YMfg9fMtYJ\",\"Ym8AjbKGSJooun3nt\",\"RZhnfbL35u4CtQuqp\",\"rcvmayp8iSXxxEyMj\",\"NQ4btGLfcvAnXjAyP\",\"zTM2NbjE6q5Q2HSeF\",\"8wkQj36S6ZCH5u8d3\",\"gGa78GqXuPgmhqaGo\",\"mQKWauR6b252TmdX4\",\"CNc6rmwhbxkxEhHAp\",\"47PyFbZyxWuP9Bgga\",\"ikxSkiQjCjYPsFwMT\",\"uNK8tLSseShR8wcA4\",\"oth47e7A8TopBYdjr\",\"bWWFscsAr66ZWHo28\",\"zE46SymvixkeFJmPM\",\"AK74g2wkFLuAqmnbx\",\"W56bWmpQeLJ9JEDsa\",\"PAiLeppKXAZDuRokt\",\"GiqPq82is4HGWdZHA\",\"LrgQT4bdiLbHrprXu\",\"m8RTLuXqmythXHYZt\",\"fD2vkjhwWmxbs3aAn\",\"rB6smsAC3K4LswpTK\",\"5jDgvkGd4JwatrYXg\",\"JhjDnd5WKgXy3hsi8\",\"44arJN5SYx3HyfetA\",\"Yj7ftjzyP67R5NFrH\",\"hhxjQREtmHSheH9Pj\",\"LCuvvWMwiGuqTwNRi\",\"PJu3WcTpfRrvHfQiS\",\"Wi4H6ayKsNDWWQCG5\",\"3SgSNoAB3sxaYeT3w\",\"uFfEio8nzDvL8emhp\",\"btabi3PdyisuY5tn9\",\"E2hpke7mHxAWsw5t9\",\"f3RAbWvE6uESq7KE5\",\"GkYtSbQuheBF4Enys\",\"QRv96jmNaYsWkxQEG\",\"buX4mCQhtXCfBjeno\",\"zZfMwLuoERGmybgib\",\"eQXwk5zGckM8tCWYH\",\"2Aaep5Eka6tyyceLa\",\"NnymXePpDaZnp2fRd\",\"a6fgDQTddtZCKfnzR\",\"DMfESfk78syhbaowb\",\"SbQYdZqWzXnYmcNPT\",\"4ySzqKC5s3ZRpG9di\",\"xEX3TDY6C2h82dJTn\",\"nXw9eTHFraWQtwJtY\",\"tdinF6MRzC6AdNX8g\",\"SgPjF69J25jT3dn4X\",\"GaJNJwcdyB9ueYFst\",\"pYonfGP4u9HNL9Z32\",\"5LyTMADFiaSR9GQkT\",\"TCvpT4EPb8qNssNB7\",\"rhS8qXRjZcpDXkwnE\",\"eW9R2SCoYnY8HBAdL\",\"uw47663LqPME8btaA\",\"3Z6qkgsBm29D77qPi\",\"srJ34BaybkQh3qRkM\",\"wTc283wowqsFisKNC\",\"wFRLGjA56kj7xyhmv\",\"uw8E83imJYpQiiPpP\",\"jCjCvyhqhpebkJn34\",\"jc9BEHPG35eWBYcR9\",\"afvP29FhRou2bTaav\",\"KMR6vNzvSKMA2cXnK\",\"tjFkD8gLHEWEpEuNL\",\"RsujLHaML6L3KinzK\",\"PPdaczxSt2u5cmZYG\",\"c7uBxu2rgY77H5d79\",\"FNYPC36yqPmTKDaqR\",\"5HGyJtoZ3AffzAZAv\",\"fNCE83jwoYxkaQeAi\",\"unqzSsxpxj9sZ7rbD\",\"nSLvkGEpiYCtcBLaa\",\"FxPDKKibxnZjGJLs6\",\"iLrtRGuyCBMzBot9X\",\"8Rau64SCERgjtFbFM\",\"ckQwFFWyLXmDQAaCn\",\"r72oFMcCQh4rBsKHb\",\"nFbmNzMQ38TncmfQX\",\"3Gf7ikLijfoxabiPY\"],\"quality\":[5,5,4,4,5,5,5,4,5,5,5,5,4,5,5,4,5,5,4,5,5,5,5,5,3,5,5,5,3,4,5,5,5,5,5,4,5,5,5,5,5,5,4]},\"complaints\":{\"total\":0,\"reasons\":[],\"skippers\":[\"vQEmjTRgmdGNYB7yk\"]},\"instructions\":{\"score\":23.700000000000003,\"voters\":[\"LfR9Bopm57BMNNnkp\",\"TnCNDXN7FkjmFihL8\",\"N7wbentX5t42jfPRh\",\"8ShTPp8oqaXm4hKQ5\",\"muXapDQzqtqsguWxp\",\"LciJ4idx29gFiwMDz\",\"yAnR473zEjnPoCPhf\",\"kYXqya7gETZYLdCpg\",\"yfX9auesPmnc8XYkR\",\"PekaZnvr5zPiEaGCv\",\"nxCRcZQknHp8wP2v4\",\"9qoWqLcHGiDX429rE\"]},\"tests\":{\"score\":-1.3,\"voters\":[\"RHr6NLgaGSGh6NWea\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.6976744186046515,\"family\":[{\"_id\":\"ABu9G23LkaAhtTZsz\",\"language\":\"cpp\"},{\"_id\":\"gBYEFXeD9G2JMZ9dD\",\"language\":\"csharp\"},{\"_id\":\"bL2E8p5DGWSNmEtAE\",\"language\":\"java\"},{\"_id\":\"RhvdtEWHAMAqkdugn\",\"language\":\"javascript\"},{\"_id\":\"YXX2raxZL7mhiB4B8\",\"language\":\"php\"},{\"_id\":\"K4Pqh67Y9gpixPfjo\",\"language\":\"python3\"},{\"_id\":\"w5b72hSvQpfMnEjCr\",\"language\":\"ruby\"},{\"_id\":\"Fgqc4sWwtzGK6abX5\",\"language\":\"swift\"}]}}"]