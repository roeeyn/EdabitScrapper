a["{\"msg\":\"result\",\"id\":\"366\",\"result\":{\"_id\":\"Tyzp6S67dtXPAAQan\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n\\tpublic static int primorial(int n) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":1.5,\"familyId\":\"bxDXq99phWuzopvLR\",\"instructions\":\"A _Primorial_ is a product of the first `n` prime numbers (e.g. `2 x 3 x 5 = 30`). `2, 3, 5, 7, 11, 13` are prime numbers. If `n` was `3`, you'd multiply `2 x 3 x 5 = 30` or Primorial = `30`.\\n\\nCreate a function that returns the Primorial of a number.\\n\\n### Examples\\n```\\nprimorial(1) ➞ 2\\n\\nprimorial(2) ➞ 6\\n\\nprimorial(8) ➞ 9699690\\n```\\n\\n### Notes\\nN/A\",\"isHidden\":false,\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(2, Challenge.primorial(1));\\n  }\\n\\n\\t@Test\\n  public void test2() {\\n    assertEquals(6, Challenge.primorial(2));\\n  }\\n\\n\\t@Test\\n  public void test3() {\\n    assertEquals(30, Challenge.primorial(3));\\n  }\\n\\n\\t@Test\\n  public void test4() {\\n    assertEquals(9699690, Challenge.primorial(8));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"A Primorial is a product of the first n prime numbers (e.g. 2 x 3 x 5 = 30). 2, 3, 5, 7, 11, 13 are prime numbers. If n was 3, you'd multiply 2 x 3 x 5 = 30 or Primorial = 30.\\n\\nCreate a function that returns the Primorial of a number.\\n\\nExamples\\nprimorial(1) ➞ 2\\n\\nprimorial(2) ➞ 6\\n\\nprimorial(8) ➞ 9699690\\n\\nNotes\\nN/A\",\"tags\":[\"algorithms\",\"loops\",\"numbers\"],\"timestamp\":{\"$date\":1575464458615},\"title\":\"Find the Primorial\",\"stats\":{\"completed\":{\"total\":142,\"ratings\":[2,2,2,2,2,2,2,2,0,1,2,0,2,0,2,2,3,2,2,0,2,2,2,2,1,0,0,1,2,0,1,2,0,1,2,2,2,0,1,2,2,0,3,2,0,2,1,2,2,2,0,2,1,1,1,1,2,2,1,1,1,2,2,0,2,2,2,1,1,1,1,2,2,2,2,2,1,2,2,2,1,2,1,2,2,3,1,1,2,1,1,1,1,1,0,1,2,1,3,0,1,2,1,1,3,1,3,3,1,2,2,2,2,2,2,2,1,2],\"rators\":[\"sxci7DYKNa6q22Sjq\",\"yazNfwgLx7jSAZ8Tv\",\"jHXJPfu5WXh9YN97E\",\"3gxJoNp59B4eoyyed\",\"C46EBHSd4KE57qyei\",\"phA6MomRzh9oz3eqn\",\"8J2Dqqz9PaFufQzwY\",\"r9hHZYPQAqJ9DbwLX\",\"J9zJq7PMGb6mqzcHW\",\"u4yanfWeeZsN3xWgc\",\"8JyqsSbN2FJXPr3cw\",\"AyrEvM2GLX2jqM772\",\"Es4eX2stRpyoXeC7f\",\"f3hFmYCt9zB4YFvej\",\"wYYMNPe8nSiJFbvJw\",\"mt4kmXdCCGcbatAaZ\",\"TrquEHytntLKHA4m2\",\"hB5mgzMwQSnhBzi7P\",\"Kso7rzAKB4TTCPKgM\",\"5seiNqw6ZXoF2GRRd\",\"fZjkX29nhRTWWb75k\",\"jyoLggHk8xQKZuoQC\",\"vRXuYYBNuHEQ29fbm\",\"mfm3gB39arY8Rjb2y\",\"WZujpe8yQAyZmpWHg\",\"etoSR23iELGGgs9rA\",\"htXCitorobtqYymjN\",\"oMLSgpSFQnY4ui8cB\",\"meS77LKqRswhF5LAy\",\"6ZxpGyg7iviX9cPAy\",\"Yohr2MmAyaWGMbB35\",\"Yp7uvStL97cC9fKkY\",\"cjxsqXfkAPoadmppi\",\"GjwGKhmK2Trg6tRS2\",\"DkSMZ3jZLkwviKb9g\",\"B4pxRqzo43M7S8FbP\",\"pBMXMQem6BpSeooYT\",\"aH9yER5QQ4bFBN8SR\",\"rvojHhKH3DaxotefQ\",\"zwruFCmuHkwJTpYqg\",\"XPDqgbh7XuX7Yfpuq\",\"a49eNnfRwSMxsDJXf\",\"xuAdo3MPCrwHA2Z2K\",\"DzvdGwHEjqsX7wyKr\",\"dcW9oK2uRo8h8mBe2\",\"g4NCSxxHqHCGMpWwT\",\"5p6bwXayfAp7Y4WQ7\",\"n9pbsKYTbTLp2CKPh\",\"DLoPWdabPsDB2XSnH\",\"kiRkuN7JXqvWBa4SG\",\"ZPNk8KwpqXDgu3ALt\",\"87otmbdqNT3bHsQFu\",\"j428nMyNKY8g2dcCi\",\"qraDA47Ewou5mzvrL\",\"MCjdtAAjL6sGLukPr\",\"sJaSeR649EEMX9F4v\",\"hWmgLftXQDzfd4Tjq\",\"TLgJebKMDSvJFbWrD\",\"wbs8qdwdr325vJ2uT\",\"GamaMNrnhrjj5tXTx\",\"Ha5J49rhojBRy3BaM\",\"muXMnzQwGLzN6j2Jr\",\"rWhXHhzF4W8bea6LP\",\"jRqY4i8gPemsZMBGf\",\"Fd9765rksgPK4E2Zy\",\"AeJSxRqw2dJZuGvdk\",\"azAzSkvJd7eyXY9x9\",\"ohsJnyfLcGDCWzEWM\",\"yXGiiSAR5nBHnH3yr\",\"jb9RLyyuo565bKDzN\",\"EZAzJw3EcybNx4yZQ\",\"gXTAie79kiw28tx5u\",\"fJAnQriWjfZA5EFCK\",\"oMZovHkR6QqNvQwyc\",\"oMfq73A434YWhSuWQ\",\"P5BhjZxyeHQYTNyB9\",\"BWqQ68pvNedARDcBN\",\"unNqQjSHzkb4pCzEu\",\"hDeaTsprkH6CmvSAR\",\"tyLS9T6YMfg9fMtYJ\",\"mQKWauR6b252TmdX4\",\"g6NwjgQyGbhJQj9EL\",\"pi76g3eRpnKrhee2a\",\"gBGjCfJvPHswDM5JQ\",\"v2ZBg6YE5qcYy3CYE\",\"bur3yQ8s34zqKGEro\",\"zZfMwLuoERGmybgib\",\"buX4mCQhtXCfBjeno\",\"ojykfC9SjTkRstbbS\",\"hhxjQREtmHSheH9Pj\",\"YLwJkF2wuL3n9o6a2\",\"4ySzqKC5s3ZRpG9di\",\"Ag5fRrZ9MrAZc9vpj\",\"JWdhp42Lsm2m3JPwL\",\"mc7wRrHbq7QgShSTH\",\"rhS8qXRjZcpDXkwnE\",\"CggGfsERnPKGupFWp\",\"wFRLGjA56kj7xyhmv\",\"xEX3TDY6C2h82dJTn\",\"5jWnDgiwNNjGwwZ52\",\"cWCejoZfLmnrNJ7xb\",\"rDM4cGBdoftexQWAZ\",\"qbKwWs6Ntz9tBtmTZ\",\"jgYxpLNnEqSh4nhRJ\",\"qyzmffxacHfwMDLBY\",\"PoSsqtY7LvHznsxX8\",\"t6JbQLDwubL85tZKX\",\"WThE7Rmc4qTebF39H\",\"6QZCGcX6St8BbJWKw\",\"CcWp3x5ycxLS4awvv\",\"jTWg7q3LZjZGkcFKn\",\"cR3ibTMxLyEdDFCHY\",\"So87KD73GtQForRzq\",\"qErjDvAq3xwtwBWuD\",\"5LDvZHCDJqePeBrCg\",\"563onSvqgjToY79ah\",\"AHmgsYBy6A66bDQFC\",\"jCjCvyhqhpebkJn34\",\"J7epB3qSQJ2E8vWkY\",\"R8uAJk89MupgKqyJS\",\"AeSmk2XWGcTLHB7PJ\",\"KMR6vNzvSKMA2cXnK\",\"c7uBxu2rgY77H5d79\",\"bPRkGASs9fgjhvYA8\",\"unqzSsxpxj9sZ7rbD\",\"uw47663LqPME8btaA\",\"nFbmNzMQ38TncmfQX\"],\"quality\":[3,4,4,5,5,5,5,5,5,5,4,4,4,4]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":4.428571428571429,\"family\":[{\"_id\":\"wm7QaM3LF6owGdKSA\",\"language\":\"cpp\"},{\"_id\":\"Tyzp6S67dtXPAAQan\",\"language\":\"java\"},{\"_id\":\"86Dbfov3HDpKTArwo\",\"language\":\"javascript\"},{\"_id\":\"fRjfrCYXWJAaQqFXF\",\"language\":\"python3\"},{\"_id\":\"Gyz4uB6j5mQpaJaMp\",\"language\":\"ruby\"}]}}"]