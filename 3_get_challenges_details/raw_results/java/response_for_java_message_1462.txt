a["{\"msg\":\"result\",\"id\":\"290\",\"result\":{\"_id\":\"3ZooM5R5P63w5bPCv\",\"archived\":false,\"author\":\"kochug\",\"authorId\":\"vQEmjTRgmdGNYB7yk\",\"code\":\"public class Program {\\n\\tpublic static int[] indexOfCaps(String s) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.1666666666666667,\"familyId\":\"Nqc2tgbCzsfLQAsmM\",\"instructions\":\"Create a method that takes a single string as argument and returns an ordered array containing the indices of all capital letters in the string.\\n\\n### Examples\\n```\\nindexOfCaps(\\\"eDaBiT\\\") ➞ [1, 3, 5]\\n\\nindexOfCaps(\\\"eQuINoX\\\") ➞ [1, 3, 4, 6]\\n\\nindexOfCaps(\\\"determine\\\") ➞ []\\n\\nindexOfCaps(\\\"STRIKE\\\") ➞ [0, 1, 2, 3, 4, 5]\\n\\nindexOfCaps(\\\"sUn\\\") ➞ [1]\\n```\\n\\n### Notes\\n- Return an empty array if no uppercase letters are found in the string.\\n- Special characters ($#@%) and numbers will be included in some test cases.\\n- Assume all words do not have duplicate letters.\",\"lab\":\"import static org.hamcrest.core.Is.is;\\nimport org.junit.Test;\\nimport static org.junit.Assert.assertThat;\\n\\npublic class ChallengeTests {\\n\\t@Test\\n\\tpublic void test1() {\\n\\t\\tassertThat(Program.indexOfCaps(\\\"eDaBiT\\\"), is(new int[]{1, 3, 5}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test2() {\\n\\t\\tassertThat(Program.indexOfCaps(\\\"eQuINoX\\\"), is(new int[]{1, 3, 4, 6}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test3() {\\n\\t\\tassertThat(Program.indexOfCaps(\\\"determine\\\"), is(new int[]{}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test4() {\\n\\t\\tassertThat(Program.indexOfCaps(\\\"STRIKE\\\"), is(new int[]{0, 1, 2, 3, 4, 5}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test5() {\\n\\t\\tassertThat(Program.indexOfCaps(\\\"sUn\\\"), is(new int[]{1}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test6() {\\n\\t\\tassertThat(Program.indexOfCaps(\\\"SpiDer\\\"), is(new int[]{0, 3}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test7() {\\n\\t\\tassertThat(Program.indexOfCaps(\\\"accOmpAnY\\\"), is(new int[]{3, 6, 8}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test8() {\\n\\t\\tassertThat(Program.indexOfCaps(\\\"@xCE#8S#i*$en\\\"), is(new int[]{2, 3, 6}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test9() {\\n\\t\\tassertThat(Program.indexOfCaps(\\\"1854036297\\\"), is(new int[]{}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test10() {\\n\\t\\tassertThat(Program.indexOfCaps(\\\"Fo?.arg~{86tUx=|OqZ!\\\"), is(new int[]{0, 12, 16, 18}));\\n\\t}\\n}\",\"language\":\"java\",\"summary\":\"Create a method that takes a single string as argument and returns an ordered array containing the indices of all capital letters in the string.\\n\\nExamples\\nindexOfCaps(\\\"eDaBiT\\\") ➞ [1, 3, 5]\\n\\nindexOfCaps(\\\"eQuINoX\\\") ➞ [1, 3, 4, 6]\\n\\nindexOfCaps(\\\"determine\\\") ➞ []\\n\\nindexOfCaps(\\\"STRIKE\\\") ➞ [0, 1, 2, 3, 4, 5]\\n\\nindexOfCaps(\\\"sUn\\\") ➞ [1]\\n\\nNotes\\nReturn an empty array if n\",\"tags\":[\"strings\",\"formatting\"],\"timestamp\":{\"$date\":1523722246797},\"title\":\"Return the Index of All Capital Letters\",\"stats\":{\"completed\":{\"total\":217,\"ratings\":[1,1,1,1,1,1,1,1,0,0,2,1,1,1,2,1,1,1,1,2,1,0,1,5,1,0,2,0,1,2,1,2,1,1,1,1,1,1,1,1,1,2,0,1,0,5,1,1,1,0,1,1,1,1,0,0,1,1,1,1,0,1,1,3,0,0,1,0,1,0,3,1,2,1,1,2,2,2,1,2,2,0,0,2,1,2,1,2,1,4,1,2,0,0,1,1,1,0,2,1,1,0,1,0,0,1,1,1,1,0,1,0,2,1,3,0,1,1,0,1,1,1,1,1,1,1,2,1,1,2,0,2,0,2,1,0,4,3,0,3,5,1,1,1,2,0,0,2,2,2,1,1,0,2,1,1,0,1,1,2,1,1,2,1,1,3,1,2,1,2,1,2,1,1,1,0,1,2,1,1,2,1,2,2,1,1],\"rators\":[\"vQEmjTRgmdGNYB7yk\",\"zMEyen5f2qNu44YaN\",\"z6nQSSKTnJoTJG6GR\",\"5PXxhR3Bctqox3PE6\",\"RkXfoeQFNzfw5rdug\",\"iRgkGNCNtoPKC25EY\",\"dJcfh6gASjPCWEBoe\",\"W7hFKdAxeYd2zPZFN\",\"M3mkzSYXCpCt2HhC3\",\"uF5SXzwu7zEbcoCLM\",\"agtC5JGNqaWBAWCzz\",\"h3cMyEyB72ygAQnx4\",\"vz5LbqWPwpxAejP5k\",\"7LrgrixSzJxiGaF66\",\"6gKgLfS6kC9GQgDJn\",\"GRZzKCbeb4xKHFCrZ\",\"fskHo2C2gMKZxPZ5i\",\"79ZbLzp7xepvkonoh\",\"CaoBNxekPwAD9Lsyc\",\"WXLd6Yr7iWjTpJDRA\",\"rQpthoJte6rreQd4j\",\"fbNWxXTqZy2mXNbGJ\",\"sBAQgme9imkPrH2Xm\",\"z3HbZkmL5echimwFQ\",\"ddfeZ4pbbcXFXqZmY\",\"Sm2J8ZvpXARgFy9WJ\",\"74zXNB4jwSQ7agXCe\",\"xGJnf5K4RWz9cozQk\",\"2XPSxbjbkM9NRcxZT\",\"79x9hFu3rkQXNRpG4\",\"YGYf9GKzaF8CWnDHE\",\"ZrJwpZKQoWygGAHvy\",\"bGHDgwkiAp7RjBiYo\",\"Kc2foqht8pXCDuQPh\",\"3riR3H5ei3T86EEzz\",\"qzFMJGxMErfBhExMm\",\"uK99RLh3CQ3yur6BQ\",\"EJFJQdyqNvcH3zBS4\",\"ywgSbAqkCj38KuaW8\",\"hCoyBFeNMdaC88ZFi\",\"niz9xRvhYCLYvGJnW\",\"mNMQvcxKSSvqqMYCH\",\"yJyjT7Z2PPQmzzWpP\",\"ydos8Ba8nZdYRNJpS\",\"5znpaFDoToJtAtF3h\",\"QS5RGoPnapStFD5Gi\",\"CDkkdvDdqjDihTcFS\",\"T6j7qdvD37y8DLKzT\",\"cp3X8hk8yNME7qoD9\",\"a49eNnfRwSMxsDJXf\",\"vRXuYYBNuHEQ29fbm\",\"3pdgguqZgNDSAJSGm\",\"sxci7DYKNa6q22Sjq\",\"9c8n7ti5vCjTRgiGN\",\"t2kdBPj9qQAXY2Ehd\",\"Yohr2MmAyaWGMbB35\",\"3gxJoNp59B4eoyyed\",\"teCeoNkdeQEciPZ7H\",\"Ha5J49rhojBRy3BaM\",\"8rF6PHMSaybTDsvXr\",\"ZBDiEMi7dbjRL55LB\",\"jNcwk4jksmPTcAoTu\",\"phA6MomRzh9oz3eqn\",\"yazNfwgLx7jSAZ8Tv\",\"ghRADkBcGb85dhmva\",\"ho2xwFjGfg6WwQArS\",\"mP3xxS7JxmPfbE2Hb\",\"ZiozQXopCXKLkQMfC\",\"HsFc9PgmpP2X9Fwh9\",\"6TDEhHv3uQCZLQeiH\",\"8gJEpXHctGqC9ngcJ\",\"WPWBKqdkzkeGpgFR2\",\"CLmJduqJHX83dM4Pd\",\"3KjxQu9RZ8ZSywvLz\",\"8JyqsSbN2FJXPr3cw\",\"3XvbdaPm47SaJtzrC\",\"J9zJq7PMGb6mqzcHW\",\"s2G7xhbjaNdkGbhRX\",\"s8o9ptNnpNGktBWdX\",\"u4yanfWeeZsN3xWgc\",\"FSSM3xcaTXGcxqYGz\",\"AyrEvM2GLX2jqM772\",\"qx9XHErKygcLiFGhX\",\"YLwJkF2wuL3n9o6a2\",\"ko7oJ85JMftgcbkrr\",\"EZNT8B7yQnnZmuwCf\",\"5Kf9z3G9QBs9fkvLs\",\"Es4eX2stRpyoXeC7f\",\"fbYN9Jp46RqBqCd2K\",\"gBGjCfJvPHswDM5JQ\",\"wYYMNPe8nSiJFbvJw\",\"mdEQJ2fmGmkbhbvNw\",\"2cdvd8yuPLSwvGj9w\",\"8J2Dqqz9PaFufQzwY\",\"PXBjtEAAwibHxNZXq\",\"uYv96ZSpA7tBHoAGX\",\"rTj67TTydxqkpwFtN\",\"82weQfHHmno4Mq4X7\",\"Kso7rzAKB4TTCPKgM\",\"bw6kHP3k8dP2qBa5v\",\"fZjkX29nhRTWWb75k\",\"jDTGwryGygbZiqCEg\",\"Zvu2nty8qKdBDBvM4\",\"hB5mgzMwQSnhBzi7P\",\"GEzaJZ2cPjENT4ERQ\",\"YFHkjbM6obMSj24zi\",\"jyoLggHk8xQKZuoQC\",\"5seiNqw6ZXoF2GRRd\",\"8zZ6xmzpiFair25qr\",\"Yp7uvStL97cC9fKkY\",\"eWaq9hCBYq4oQYgEx\",\"B4pxRqzo43M7S8FbP\",\"WZujpe8yQAyZmpWHg\",\"TrquEHytntLKHA4m2\",\"dDP6nt8ihp6FPeT27\",\"DzvdGwHEjqsX7wyKr\",\"htXCitorobtqYymjN\",\"meS77LKqRswhF5LAy\",\"3EfDGZ9Sgz5zxzD7a\",\"etoSR23iELGGgs9rA\",\"3qggY3TrN3xNaMDBp\",\"Yom3RzkMYpweE8cbS\",\"DkSMZ3jZLkwviKb9g\",\"DzLdw6wEL2Nt5mrsp\",\"PytNZK9mNiRiZxPrm\",\"rvojHhKH3DaxotefQ\",\"EcKPDmD4GmeFJGDTL\",\"q2tzvkrLASvSjkek9\",\"AeJSxRqw2dJZuGvdk\",\"QXkrEiAuhuXaZmL4C\",\"osXNzc2aCxspRwheS\",\"g4NCSxxHqHCGMpWwT\",\"9KAbm9niQ9Cv9LefP\",\"MjSWzCTqno5fQoEbQ\",\"muXMnzQwGLzN6j2Jr\",\"ZMd8it647JSYTvx8Z\",\"RhPg33AdzvSZmibXa\",\"YcjwCvYut6834Jzd8\",\"Fd9765rksgPK4E2Zy\",\"yXGiiSAR5nBHnH3yr\",\"eBvaFfPnWq4FiB8bk\",\"fRYcPHuyEdqngMzC4\",\"gpd8yji9GXJruAtje\",\"pi76g3eRpnKrhee2a\",\"fADAnmvM4LibcQWTr\",\"ydF8Re5wK8MmaDbLh\",\"jb9RLyyuo565bKDzN\",\"J7epB3qSQJ2E8vWkY\",\"gXTAie79kiw28tx5u\",\"a777e8chPvJkY3tKa\",\"9amCEoE43AdSneJZ7\",\"JszPst3958te56jFk\",\"NdLzb3BZ5J8ftnCkS\",\"mG8HqKiAQFTdRZthG\",\"P5BhjZxyeHQYTNyB9\",\"Tf7TJFSPktJBgLA4k\",\"8Xx8nWXRydHDBGfQf\",\"jXTnL3JatkKjoifyb\",\"tyLS9T6YMfg9fMtYJ\",\"Ym8AjbKGSJooun3nt\",\"xv5obFhsxY93mqR5S\",\"hDeaTsprkH6CmvSAR\",\"5YcHZbmJ8uc8G5wZ5\",\"BWqQ68pvNedARDcBN\",\"uNK8tLSseShR8wcA4\",\"47PyFbZyxWuP9Bgga\",\"5jDgvkGd4JwatrYXg\",\"YL4rQWKadY7sGGtGG\",\"44arJN5SYx3HyfetA\",\"W56bWmpQeLJ9JEDsa\",\"LCuvvWMwiGuqTwNRi\",\"Wi4H6ayKsNDWWQCG5\",\"Mmi7ByNfsjNBBo6uQ\",\"3SgSNoAB3sxaYeT3w\",\"btabi3PdyisuY5tn9\",\"f3RAbWvE6uESq7KE5\",\"QRv96jmNaYsWkxQEG\",\"E2hpke7mHxAWsw5t9\",\"hhxjQREtmHSheH9Pj\",\"uFfEio8nzDvL8emhp\",\"zZfMwLuoERGmybgib\",\"buX4mCQhtXCfBjeno\",\"4ySzqKC5s3ZRpG9di\",\"HXbTKW3jmmyRAsKrr\",\"rhS8qXRjZcpDXkwnE\",\"pYonfGP4u9HNL9Z32\",\"xEX3TDY6C2h82dJTn\",\"wnxb99NiXep2TSFFz\",\"uw47663LqPME8btaA\",\"srJ34BaybkQh3qRkM\",\"zTtKiCbLWzaf2Yjo4\",\"cR3ibTMxLyEdDFCHY\",\"wFRLGjA56kj7xyhmv\",\"jCjCvyhqhpebkJn34\",\"KMR6vNzvSKMA2cXnK\",\"GDNsAq2snvJuwFa88\",\"GCTAj8m9BmoF8kxEL\",\"unqzSsxpxj9sZ7rbD\",\"FxPDKKibxnZjGJLs6\",\"keJgCH4Xx9tA92uxu\",\"ckQwFFWyLXmDQAaCn\",\"nFbmNzMQ38TncmfQX\"],\"quality\":[4,5,5,4,5,5,5,5,5,3,4,5,5,5,5,5,5,5,5,5]},\"complaints\":{\"total\":0,\"reasons\":[],\"skippers\":[\"vQEmjTRgmdGNYB7yk\"]},\"instructions\":{\"score\":7.300000000000001,\"voters\":[\"CkugLk6JLRdoAcxcc\",\"AkAT3rktJMRB4Rd5e\",\"Y2gKLaenHpHFmjQco\",\"Fd6ZnE6x3MrMYKuk2\",\"YrGC9iGquFmgJfjm6\",\"Mrfb8vfJbtmzNjSMn\",\"ebndzZQAJZFykHqiE\"]},\"tests\":{\"score\":0,\"voters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.75,\"family\":[{\"_id\":\"NAyBq3PvcMGaLmoNA\",\"language\":\"cpp\"},{\"_id\":\"6qFnpAhd3kdmYcNG2\",\"language\":\"csharp\"},{\"_id\":\"3ZooM5R5P63w5bPCv\",\"language\":\"java\"},{\"_id\":\"cRAqXCgyYnjdgktEq\",\"language\":\"javascript\"},{\"_id\":\"hyTimGp77mkcbpjSx\",\"language\":\"php\"},{\"_id\":\"rQkriLJBc9CbfRbJb\",\"language\":\"python3\"},{\"_id\":\"pQ9zBTWkAoAREwA8n\",\"language\":\"ruby\"},{\"_id\":\"iCZjsWD5FDbjqNyM2\",\"language\":\"swift\"}]}}"]