a["{\"msg\":\"result\",\"id\":\"422\",\"result\":{\"_id\":\"6THnWXvQrhRrEErtb\",\"author\":\"Edward Clark\",\"authorId\":\"3pdgguqZgNDSAJSGm\",\"code\":\"public class Challenge {\\n\\tpublic static String[] findBrokenKeys(String str1, String str2) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.5588235294117647,\"familyId\":\"aTYQbPQinvLDPGwfT\",\"instructions\":\"Given what is supposed to be typed and what is actually typed, write a function that returns the broken key(s). The function looks like:\\n\\n```\\nfindBrokenKeys(correct phrase, what you actually typed)\\n```\\n\\n### Examples\\n```\\nfindBrokenKeys(\\\"happy birthday\\\", \\\"hawwy birthday\\\") ➞ [\\\"p\\\"]\\n\\nfindBrokenKeys(\\\"starry night\\\", \\\"starrq light\\\") ➞ [\\\"y\\\", \\\"n\\\"]\\n\\nfindBrokenKeys(\\\"beethoven\\\", \\\"affthoif5\\\") ➞ [\\\"b\\\", \\\"e\\\", \\\"v\\\", \\\"n\\\"]\\n```\\n\\n### Notes\\n- Broken keys should be ordered by when they first appear in the sentence.\\n- Only one broken key per letter should be listed.\\n- Letters will all be in lower case.\",\"lab\":\"import static org.hamcrest.core.Is.is;\\nimport org.junit.Test;\\nimport static org.junit.Assert.assertThat;\\n\\npublic class ChallengeTest {\\n    @Test\\n    public void test1() {\\n      assertThat(Challenge.findBrokenKeys(\\\"happy birthday\\\", \\\"hawwy birthday\\\"), is(new String[]{\\\"p\\\"}));\\n    }\\n\\n    @Test\\n    public void test2() {\\n      assertThat(Challenge.findBrokenKeys(\\\"starry night\\\", \\\"starrq light\\\"), is(new String[]{\\\"y\\\", \\\"n\\\"}));            \\n    }\\n\\n    @Test\\n    public void test3() {\\n      assertThat(Challenge.findBrokenKeys(\\\"beethoven\\\", \\\"affthoif5\\\"), is(new String[]{\\\"b\\\", \\\"e\\\", \\\"v\\\", \\\"n\\\"}));            \\n    }\\n\\n    @Test\\n    public void test4() {\\n      assertThat(Challenge.findBrokenKeys(\\\"mozart\\\", \\\"aiwgvx\\\"), is(new String[]{\\\"m\\\", \\\"o\\\", \\\"z\\\", \\\"a\\\", \\\"r\\\", \\\"t\\\"}));            \\n\\t\\t}\\n\\n    @Test\\n    public void test5() {\\n      System.out.println(\\\"It should work for numbers.\\\");\\n      assertThat(Challenge.findBrokenKeys(\\\"5678\\\", \\\"4678\\\"), is(new String[]{\\\"5\\\"}));            \\n    }\\n\\n\\t\\t@Test\\n    public void test6() {\\n    \\tSystem.out.println(\\\"It should work for punctuation.\\\");\\n      assertThat(Challenge.findBrokenKeys(\\\"!!??$$\\\", \\\"$$!!??\\\"), is(new String[]{\\\"!\\\", \\\"?\\\", \\\"$\\\"}));            \\n    }\\n}\",\"language\":\"java\",\"summary\":\"Given what is supposed to be typed and what is actually typed, write a function that returns the broken key(s). The function looks like:\\n\\nfindBrokenKeys(correct phrase, what you actually typed)\\n\\nExamples\\nfindBrokenKeys(\\\"happy birthday\\\", \\\"hawwy birthday\\\") ➞ [\\\"p\\\"]\\n\\nfindBrokenKeys(\\\"starry night\\\", \\\"starrq light\\\") ➞ [\\\"y\\\", \\\"n\\\"]\\n\\nfindBrokenKeys(\\\"beethoven\\\", \\\"affthoif\",\"tags\":[\"strings\",\"arrays\"],\"timestamp\":{\"$date\":1570188737035},\"title\":\"Broken Keyboard\",\"stats\":{\"completed\":{\"total\":135,\"ratings\":[2,2,2,2,2,0,1,2,2,2,0,0,2,2,2,2,2,2,1,0,2,1,0,0,2,0,2,2,1,3,1,2,2,2,2,2,1,3,1,2,2,1,2,2,2,1,2,1,0,1,3,0,1,2,0,2,2,0,1,1,0,0,2,2,2,0,1,1,1,3,1,1,2,0,2,2,2,2,4,0,2,3,1,0,0,3,2,1,2,2,2,3,5,2,2,2,1,2,3,2,2,2],\"rators\":[\"3pdgguqZgNDSAJSGm\",\"sxci7DYKNa6q22Sjq\",\"ZYT9LjgocbP4hzQK5\",\"jb9RLyyuo565bKDzN\",\"t2kdBPj9qQAXY2Ehd\",\"3gxJoNp59B4eoyyed\",\"yazNfwgLx7jSAZ8Tv\",\"79ZbLzp7xepvkonoh\",\"KCxLCqujaFCs9c8jd\",\"tQatuCqYXLqvQ2rDh\",\"r9hHZYPQAqJ9DbwLX\",\"CLmJduqJHX83dM4Pd\",\"HBgPTjhMkJ2WCcBP7\",\"Yohr2MmAyaWGMbB35\",\"vRXuYYBNuHEQ29fbm\",\"u4yanfWeeZsN3xWgc\",\"8JyqsSbN2FJXPr3cw\",\"8J2Dqqz9PaFufQzwY\",\"J9zJq7PMGb6mqzcHW\",\"2cdvd8yuPLSwvGj9w\",\"MJMEESuirNXM2diop\",\"uw47663LqPME8btaA\",\"eXW8reZCCZHQzJjQi\",\"a49eNnfRwSMxsDJXf\",\"W347YkKWzfvMbkuHr\",\"yK7zzK2aGJwuWKHRL\",\"jDuY4gx4aJRp8SHbm\",\"YLqdr7bYjwew2KM4N\",\"4RHx3H8EwP2oboW8e\",\"HsFc9PgmpP2X9Fwh9\",\"bsXDWXhsuqgaZYCCv\",\"mRwxbzaBc4Fg5q9Hw\",\"JFodQijHHdRkkrZvT\",\"wYYMNPe8nSiJFbvJw\",\"Es4eX2stRpyoXeC7f\",\"gGnDsJz5hr2t9MKCF\",\"eJxMBZBhiHyJYWkH2\",\"v8RN8p2B6xdebkXAY\",\"hB5mgzMwQSnhBzi7P\",\"Kso7rzAKB4TTCPKgM\",\"5seiNqw6ZXoF2GRRd\",\"TrquEHytntLKHA4m2\",\"jyoLggHk8xQKZuoQC\",\"fZjkX29nhRTWWb75k\",\"82weQfHHmno4Mq4X7\",\"8zZ6xmzpiFair25qr\",\"WZujpe8yQAyZmpWHg\",\"etoSR23iELGGgs9rA\",\"htXCitorobtqYymjN\",\"oMLSgpSFQnY4ui8cB\",\"y6kfyYmydcD8tkBk7\",\"DzvdGwHEjqsX7wyKr\",\"B4pxRqzo43M7S8FbP\",\"q2tzvkrLASvSjkek9\",\"yyNpL4ogJHEtWHfyP\",\"zwruFCmuHkwJTpYqg\",\"pBMXMQem6BpSeooYT\",\"dcW9oK2uRo8h8mBe2\",\"CggGfsERnPKGupFWp\",\"YLwJkF2wuL3n9o6a2\",\"g4NCSxxHqHCGMpWwT\",\"muXMnzQwGLzN6j2Jr\",\"jRqY4i8gPemsZMBGf\",\"Yom3RzkMYpweE8cbS\",\"9KAbm9niQ9Cv9LefP\",\"XcLNNDa5gDSyrgKtv\",\"YcjwCvYut6834Jzd8\",\"rWhXHhzF4W8bea6LP\",\"Fd9765rksgPK4E2Zy\",\"k2tXkx7AyX77tQDRo\",\"m3PZ7Z7xEGDuKQQmD\",\"NjnPrCrnMkqYTjK2Y\",\"DkSMZ3jZLkwviKb9g\",\"nLb2L7vY7vd9k5L4w\",\"yv7c4H2jimSKHEjtG\",\"yXGiiSAR5nBHnH3yr\",\"zTEKMLMevG8xfxEj6\",\"deT73owASxwoxcZXS\",\"mG8HqKiAQFTdRZthG\",\"oMfq73A434YWhSuWQ\",\"8Xx8nWXRydHDBGfQf\",\"P5BhjZxyeHQYTNyB9\",\"BbcH2NLjE4tKAZ3wR\",\"BWqQ68pvNedARDcBN\",\"tyLS9T6YMfg9fMtYJ\",\"mQKWauR6b252TmdX4\",\"zbP2a97teg8aETaXu\",\"RGN3QTb5LXj4ZPPkj\",\"pi76g3eRpnKrhee2a\",\"mFfahhFdaoQPkzYdh\",\"MxRiNfgst8jWvHPGZ\",\"gBGjCfJvPHswDM5JQ\",\"p8qqFdJ3FSk5x9z3G\",\"GkYtSbQuheBF4Enys\",\"Po3v3dHCk6wYGKMwi\",\"bur3yQ8s34zqKGEro\",\"zZfMwLuoERGmybgib\",\"buX4mCQhtXCfBjeno\",\"hcob8rttYDB9ANCJF\",\"hhxjQREtmHSheH9Pj\",\"drAAhaSiMncZ2XcAk\",\"8qNSPHZBpmjSTt3tH\",\"4ySzqKC5s3ZRpG9di\",\"GTBcrT5JsdTfSYcK7\",\"pGHzaBviaAStdFXfF\",\"6rvJwN4mcX7iYGjY7\",\"387qpAxxutDJcrcoD\",\"XnaFh4pmscFcpAHXp\",\"jCjCvyhqhpebkJn34\",\"KMR6vNzvSKMA2cXnK\",\"PJu3WcTpfRrvHfQiS\",\"unqzSsxpxj9sZ7rbD\",\"byLcacnySm4m8FaJv\",\"FxPDKKibxnZjGJLs6\"],\"quality\":[5,5,5,5,5,4,5,5,5,5,5,4,5,5,3,5,3]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.647058823529412,\"family\":[{\"_id\":\"HBa85u8WfGSNfyWrf\",\"language\":\"cpp\"},{\"_id\":\"6THnWXvQrhRrEErtb\",\"language\":\"java\"},{\"_id\":\"pbK3wzLDvdwfEKgMt\",\"language\":\"javascript\"},{\"_id\":\"J2apiSnJE4RaGTj6x\",\"language\":\"python3\"},{\"_id\":\"Lau86uAZbaYcGnb27\",\"language\":\"ruby\"}]}}"]