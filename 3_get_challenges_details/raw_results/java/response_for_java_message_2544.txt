a["{\"msg\":\"result\",\"id\":\"825\",\"result\":{\"_id\":\"9PfRkNR2Ersu2CwTG\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class MessageEncrypt {\\n  public static String nicoCipher(String message, String key) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":3.7857142857142856,\"familyId\":\"796x8NMWNMite3aNA\",\"instructions\":\"In **Nico Cipher**, encoding is done by creating a numeric key and assigning each letter position of the message with the provided key.\\n\\nCreate a function that takes two arguments, `message` and `key`, and returns the **encoded message**.\\n\\nThere are some variations on the rules of encipherment. One version of the cipher rules are outlined below:\\n\\n```\\nmessage = \\\"mubashirhassan\\\"\\nkey = \\\"crazy\\\"\\n\\nnicoCipher(message, key) ➞ \\\"bmusarhiahass n\\\"\\n```\\n\\n**Step 1:** Assign numbers to sorted letters from the key:\\n\\n```\\n\\\"crazy\\\" = 23154\\n```\\n\\n**Step 2:** Assign numbers to the letters of the given message:\\n\\n```\\n2 3 1 5 4\\n---------\\nm u b a s\\nh i r h a\\ns s a n\\n```\\n\\n**Step 3:** Sort columns as per assigned numbers:\\n\\n```\\n1 2 3 4 5\\n---------\\nb m u s a\\nr h i a h\\na s s   n\\n```\\n\\n**Step 4:** Return encoded message **Rows-wise**:\\n\\n```\\neMessage = \\\"bmusarhiahass n\\\"\\n```\\n\\n### Examples\\n```\\nnicoCipher(\\\"myworldevolvesinhers\\\", \\\"tesh\\\") ➞ \\\"yowmledrovlvsnieesrh\\\"\\n\\nnicoCipher(\\\"andiloveherso\\\", \\\"tesha\\\") ➞ \\\"lnidaevheo s or\\\"\\n\\nnicoCipher(\\\"mubashirhassan\\\", \\\"crazy\\\") ➞ \\\"bmusarhiahass n\\\"\\n\\nnicoCipher(\\\"edabitisamazing\\\", \\\"matt\\\") ➞ \\\"deabtiismaaznig \\\"\\n\\nnicoCipher(\\\"iloveher\\\", \\\"612345\\\") ➞ \\\"lovehir    e\\\"\\n```\\n\\n### Notes\\nKeys will have alphabets or numbers only.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"import static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class MessageEncryptTest {\\n\\t@Test\\n\\tpublic void test1() { \\n\\t\\tassertEquals(\\\"yowmledrovlvsnieesrh\\\", MessageEncrypt.nicoCipher(\\\"myworldevolvesinhers\\\", \\\"tesh\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test2() { \\n\\t\\tassertEquals(\\\"lnidaevheo s or\\\", MessageEncrypt.nicoCipher(\\\"andiloveherso\\\", \\\"tesha\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test3() { \\n\\t\\tassertEquals(\\\"eihsstholvetoymlfef   ei\\\", MessageEncrypt.nicoCipher(\\\"teshistheloveofmylife\\\", \\\"xavier\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test4() { \\n\\t\\tassertEquals(\\\"bmusarhiahass n\\\", MessageEncrypt.nicoCipher(\\\"mubashirhassan\\\", \\\"crazy\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test5() { \\n\\t\\tassertEquals(\\\"deabtiismaaznig \\\", MessageEncrypt.nicoCipher(\\\"edabitisamazing\\\", \\\"matt\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test6() { \\n\\t\\tassertEquals(\\\"yolmeiwvleslyuoehortg hu\\\", MessageEncrypt.nicoCipher(\\\"mylovewillseeyouthrough\\\", \\\"tesh\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test7() { \\n\\t\\tassertEquals(\\\"lovehir    e\\\", MessageEncrypt.nicoCipher(\\\"iloveher\\\", \\\"612345\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test8() { \\n\\t\\tassertEquals(\\\"iiiulwqtl os no   \\\", MessageEncrypt.nicoCipher(\\\"iwillquitsoon\\\", \\\"endisnear\\\"));\\n\\t}\\n}\\n// end of tests\",\"language\":\"java\",\"quality\":0,\"summary\":\"In Nico Cipher, encoding is done by creating a numeric key and assigning each letter position of the message with the provided key.\\n\\nCreate a function that takes two arguments, message and key, and returns the encoded message.\\n\\nThere are some variations on the rules of encipherment. One version of the cipher rules are outlined below:\\n\\nmessage = \\\"mubashirhassan\",\"tags\":[\"cryptography\",\"logic\",\"strings\",\"algorithms\"],\"timestamp\":{\"$date\":1611656344495},\"title\":\"Nico Cipher\",\"stats\":{\"completed\":{\"total\":11,\"ratings\":[3,3,3,3,3,4,3,5,3,5,5,3,5,5],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"gXTAie79kiw28tx5u\",\"hFv4BuqgsJtNyvyNF\",\"9pqtNWrsTJdZcRbEZ\",\"oGqs9g6LG6FMJC8Xr\",\"nHj7SC5cnmkTApbgY\",\"rhS8qXRjZcpDXkwnE\",\"jwQWPLoqLqwBhkpPG\",\"KMR6vNzvSKMA2cXnK\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"aFsuzdw7iWdSTfHiX\",\"language\":\"cpp\"},{\"_id\":\"8n43m5c64BKfGCWr3\",\"language\":\"csharp\"},{\"_id\":\"9PfRkNR2Ersu2CwTG\",\"language\":\"java\"},{\"_id\":\"MvjvGjhm8haxACN3o\",\"language\":\"javascript\"},{\"_id\":\"L2CW7yoxZK3RWB2Kc\",\"language\":\"python3\"},{\"_id\":\"WbfDsCFrXBPSWnFT9\",\"language\":\"ruby\"},{\"_id\":\"wiGuBNCHkcLkPPG3W\",\"language\":\"swift\"}]}}"]