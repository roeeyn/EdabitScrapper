a["{\"msg\":\"result\",\"id\":\"187\",\"result\":{\"_id\":\"pbK6j5Try2TuDeSwK\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class RemoveLetters {\\n  public static String removeABC(String words) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":1.07,\"familyId\":\"FyH7wYpXjLiGYxPuT\",\"instructions\":\"Create a function that will remove the letters \\\"a\\\", \\\"b\\\" and \\\"c\\\" from the given string and return the modified version. If the given string does not contain \\\"a\\\", \\\"b\\\", or \\\"c\\\", return `null`.\\n\\n### Examples\\n```\\nremoveABC(\\\"Tesha is my world\\\") ➞ \\\"Tesh is my world\\\"\\n\\nremoveABC(\\\"This might be a bit hard\\\") ➞ \\\"This might e  it hrd\\\"\\n\\nremoveABC(\\\"hello world!\\\") ➞ null\\n\\nremoveABC(\\\"\\\") ➞ null\\n```\\n\\n### Notes\\nIf the given string does not contain \\\"a\\\", \\\"b\\\", or \\\"c\\\", return `null`.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"\\n/** \\n=================================== \\nTestGen 3.1 for JUnit 4.13.0 \\t\\t\\nTest Case: RemoveLetters::removeABC \\nTimestamp: 11/29/2020 02:38:07 AM \\n----------------------------------- \\n® DARKKO 2020 © \\n=================================== \\n\\n**/ \\n\\nimport static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class RemoveLettersTest { \\n\\t\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertEquals(\\\"Tesh is my world\\\", RemoveLetters.removeABC(\\\"Tesha is my world\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertEquals(\\\"I just n't stop wnting you\\\", RemoveLetters.removeABC(\\\"I just can't stop wanting you\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertEquals(\\\"This might e  it hrd\\\", RemoveLetters.removeABC(\\\"This might be a bit hard\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertEquals(\\\"This is wesome\\\", RemoveLetters.removeABC(\\\"This is awesome\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertEquals(null, RemoveLetters.removeABC(\\\"hello world!\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertEquals(\\\"oding is fun!\\\", RemoveLetters.removeABC(\\\"coding is fun!\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertEquals(null, RemoveLetters.removeABC(\\\"\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertEquals(null, RemoveLetters.removeABC(\\\"The world is not enough\\\"));\\n\\t}\\n\\n}\\n// end of tests\",\"language\":\"java\",\"quality\":4.666666666666667,\"summary\":\"Create a function that will remove the letters \\\"a\\\", \\\"b\\\" and \\\"c\\\" from the given string and return the modified version. If the given string does not contain \\\"a\\\", \\\"b\\\", or \\\"c\\\", return null.\\n\\nExamples\\nremoveABC(\\\"Tesha is my world\\\") ➞ \\\"Tesh is my world\\\"\\n\\nremoveABC(\\\"This might be a bit hard\\\") ➞ \\\"This might e  it hrd\\\"\\n\\nremoveABC(\\\"hello world!\\\") ➞ null\\n\\nremoveABC(\\\"\\\") \",\"tags\":[\"strings\",\"loops\",\"regex\"],\"timestamp\":{\"$date\":1606589367020},\"title\":\"Remove The Letters ABC\",\"stats\":{\"completed\":{\"total\":137,\"ratings\":[1,1,1,1,1,2,1,1,2,0,1,1,2,1,3,0,0,0,1,2,1,1,1,0,1,1,0,1,1,1,1,3,3,1,0,0,2,1,2,2,1,1,2,2,1,1,1,2,1,2,1,0,1,1,0,2,0,0,2,2,1,2,1,1,1,1,1,1,1,1,2,0,1,1,1,1,2,1,1,1,1,1,1,1,1,0,1,2,1,0,1,0,1,1,0,1,0,2,1,1],\"quality\":[4,5,4,5,5,5,5,5,5,4,4,5,5,5,3,5,3,5,5,5,4,5,5,5,4,5,4,5,5,5,4,5,5,5,5,5],\"rators\":[\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"osXNzc2aCxspRwheS\",\"jXTnL3JatkKjoifyb\",\"4NHyP9TLFudCGghZQ\",\"qaPjAANdnxFnWfj5d\",\"m8RTLuXqmythXHYZt\",\"hDeaTsprkH6CmvSAR\",\"unNqQjSHzkb4pCzEu\",\"DzvdGwHEjqsX7wyKr\",\"8Xx8nWXRydHDBGfQf\",\"AeJSxRqw2dJZuGvdk\",\"jyoLggHk8xQKZuoQC\",\"6TYA325y68cEZjSvJ\",\"62qNJjtmkRYvX5kKB\",\"44arJN5SYx3HyfetA\",\"jrHy3YPT6EvJLxxst\",\"wWQeqN3yeyS26twni\",\"fD2vkjhwWmxbs3aAn\",\"47PyFbZyxWuP9Bgga\",\"xSL6m32DBNKvcZa2W\",\"FrorBN8wRAoptuxtR\",\"pLbKctdZ6zMDWWubr\",\"Ym8AjbKGSJooun3nt\",\"HLiyvdhyuwc6odWjw\",\"cJmmvnmJSXvBXtydi\",\"Qp6kCCv9GJTEBfRM8\",\"awz3fmxRHXYuvuzNA\",\"LCuvvWMwiGuqTwNRi\",\"FrqMhZ8gxxPQvf7PH\",\"idgdgsthLWjKPjdMF\",\"oeC4znBTiPn8ioP6P\",\"XCnhJbgt5vEGKXMej\",\"vYRHF83i8ie6YJMST\",\"4ocXv6asMQDvx9N5D\",\"ZKJkyGDWFzXWiszjw\",\"SfmXqCfDksMb883DC\",\"HqaicPytNZgkGs7JD\",\"uvjojfu9nKd5s4eLW\",\"i7dxBfYJedCqt4AMp\",\"EBXw6mfcjgCGyjGoj\",\"W56bWmpQeLJ9JEDsa\",\"bWWFscsAr66ZWHo28\",\"xv5obFhsxY93mqR5S\",\"aYWQQpG2qrhESgkCP\",\"NynkdFd43TQR7RFbe\",\"rcvmayp8iSXxxEyMj\",\"C9yBWYcZsjmJYww3K\",\"Nb6LYPoQP6KJZt8mz\",\"fRYcPHuyEdqngMzC4\",\"SZa9cCkLfdbFMs44A\",\"btabi3PdyisuY5tn9\",\"8BFSTCnoe2QggN64c\",\"KFnnHixARYLZWfwqe\",\"AFnzzwCbnFvtQaAp9\",\"RGN3QTb5LXj4ZPPkj\",\"JeSHEyHLRmScypBNw\",\"rvojHhKH3DaxotefQ\",\"keg7bkQ9PLb3JWzgZ\",\"rWhXHhzF4W8bea6LP\",\"LrgQT4bdiLbHrprXu\",\"5jDgvkGd4JwatrYXg\",\"gBGjCfJvPHswDM5JQ\",\"Yj7ftjzyP67R5NFrH\",\"uYv96ZSpA7tBHoAGX\",\"a49eNnfRwSMxsDJXf\",\"oMZovHkR6QqNvQwyc\",\"2cdvd8yuPLSwvGj9w\",\"mG8HqKiAQFTdRZthG\",\"gXTAie79kiw28tx5u\",\"J7epB3qSQJ2E8vWkY\",\"Wi4H6ayKsNDWWQCG5\",\"uFfEio8nzDvL8emhp\",\"WYuk2NhLmw33turqz\",\"82weQfHHmno4Mq4X7\",\"B4pxRqzo43M7S8FbP\",\"QRv96jmNaYsWkxQEG\",\"GkYtSbQuheBF4Enys\",\"hhxjQREtmHSheH9Pj\",\"E2hpke7mHxAWsw5t9\",\"zZfMwLuoERGmybgib\",\"buX4mCQhtXCfBjeno\",\"a6fgDQTddtZCKfnzR\",\"3SgSNoAB3sxaYeT3w\",\"4ySzqKC5s3ZRpG9di\",\"xEX3TDY6C2h82dJTn\",\"HXbTKW3jmmyRAsKrr\",\"vRXuYYBNuHEQ29fbm\",\"sxci7DYKNa6q22Sjq\",\"tdinF6MRzC6AdNX8g\",\"rhS8qXRjZcpDXkwnE\",\"cCisAS7tXc9QYbDpA\",\"pYonfGP4u9HNL9Z32\",\"wnxb99NiXep2TSFFz\",\"Yohr2MmAyaWGMbB35\",\"uw47663LqPME8btaA\",\"zTtKiCbLWzaf2Yjo4\",\"srJ34BaybkQh3qRkM\",\"Qv2jEtTnFCXX7cdd3\",\"5LDvZHCDJqePeBrCg\",\"wFRLGjA56kj7xyhmv\",\"D3ASM3aWpcQ8gvnin\",\"cR3ibTMxLyEdDFCHY\",\"jCjCvyhqhpebkJn34\",\"TCTZucJN3tJh5t7MB\",\"htXCitorobtqYymjN\",\"AaAzAySpyo99siXzm\",\"nn4TvizidLSW4pX5h\",\"KMR6vNzvSKMA2cXnK\",\"3AmkPEiGKNaSFi9Ji\",\"unqzSsxpxj9sZ7rbD\",\"FxPDKKibxnZjGJLs6\",\"nSLvkGEpiYCtcBLaa\",\"ckQwFFWyLXmDQAaCn\",\"9H7iRF4Fqihm4zb6W\",\"5HGyJtoZ3AffzAZAv\",\"8Rau64SCERgjtFbFM\",\"H3XLNCWB5yXt5YYXn\",\"eXQziXGcpwekMyABQ\",\"NnymXePpDaZnp2fRd\",\"r72oFMcCQh4rBsKHb\",\"fdyejapW3NWN7utPX\",\"nFbmNzMQ38TncmfQX\",\"3Gf7ikLijfoxabiPY\",\"PPdaczxSt2u5cmZYG\",\"2G2sRb3WuErMAPQ6p\",\"pWtXpgEovzBZMXbhJ\",\"NioGGZL9KCn5Ln96t\",\"n7ASCbayWEzjZfcH5\",\"AbQYh5EPr8eyr4Byb\",\"xsg8y3k9fPwLyAMMm\"]},\"flags\":0},\"family\":[{\"_id\":\"5Na4YnN4MY9x6W5Gc\",\"language\":\"cpp\"},{\"_id\":\"pbK6j5Try2TuDeSwK\",\"language\":\"java\"},{\"_id\":\"RftQjZs3srJnRBEH8\",\"language\":\"javascript\"},{\"_id\":\"QB6kPXQkFgMkzcc2h\",\"language\":\"python3\"},{\"_id\":\"BT4A4TMPKWjtsWygP\",\"language\":\"ruby\"}]}}"]