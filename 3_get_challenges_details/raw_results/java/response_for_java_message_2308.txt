a["{\"msg\":\"result\",\"id\":\"710\",\"result\":{\"_id\":\"JyskomdFw4tYgAELT\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n  public static boolean isNew(int num) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":2.75,\"familyId\":\"kPYtEn6nFXjjzg8A8\",\"instructions\":\"A new number is a number that is not a permutation of any smaller number.  869 is **not** a new number because it is just a permutation of smaller numbers, 689 and 698. 509 is a new number because it can't be formed by a permutation of any smaller number (leading zeros not allowed).\\n\\nWrite a function that takes a non-negative integer and returns `true` if the integer is a new number and `false` if it is not.\\n\\n### Examples\\n```\\nisNew(3) ➞ true\\n\\nisNew(30) ➞ true\\n\\nisNew(321) ➞ false\\n\\nisNew(123) ➞ true\\n```\\n\\n### Notes\\nA curious fact: out of the first one million integers, only 8002 are new.\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(true, Challenge.isNew(0));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(true, Challenge.isNew(90));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(false, Challenge.isNew(601));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(true, Challenge.isNew(123));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(false, Challenge.isNew(321));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(true, Challenge.isNew(40567));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(false, Challenge.isNew(10783));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n    assertEquals(true, Challenge.isNew(4444));\\n  }\\n\\t\\n\\t@Test\\n  public void test9() {\\n    assertEquals(true, Challenge.isNew(102));\\n  }\\n\\t\\n\\t@Test\\n  public void test10() {\\n    assertEquals(true, Challenge.isNew(30004));\\n  }\\n\\t\\n\\t@Test\\n  public void test11() {\\n    assertEquals(false, Challenge.isNew(40003));\\n  }\\n\\t\\n\\t@Test\\n  public void test12() {\\n    assertEquals(false, Challenge.isNew(125609));\\n  }\\n\\t\\n\\t@Test\\n  public void test13() {\\n    assertEquals(false, Challenge.isNew(23401));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"A new number is a number that is not a permutation of any smaller number.  869 is not a new number because it is just a permutation of smaller numbers, 689 and 698. 509 is a new number because it can't be formed by a permutation of any smaller number (leading zeros not allowed).\\n\\nWrite a function that takes a non-negative integer and returns true if the intege\",\"tags\":[\"numbers\",\"validation\",\"math\"],\"timestamp\":{\"$date\":1570063200575},\"title\":\"New Numbers\",\"stats\":{\"completed\":{\"total\":27,\"ratings\":[2,2,2,2,2,4,2,3,3,5,4,2,4,1,3,3,3,2,4,2,4,3,0,4],\"rators\":[\"3pdgguqZgNDSAJSGm\",\"sxci7DYKNa6q22Sjq\",\"NrSqKXXpaus7PGdiy\",\"Es4eX2stRpyoXeC7f\",\"AyrEvM2GLX2jqM772\",\"wpvJWmW9TxQQAZk4J\",\"2PR653L4KSN97r534\",\"TrquEHytntLKHA4m2\",\"rwETZ6XCNoHCEyB66\",\"jyoLggHk8xQKZuoQC\",\"htXCitorobtqYymjN\",\"AcZdvmSFKyRN6EJQs\",\"k63LjKkX5p7SYng7C\",\"QS45qu2DFXcCqpAnB\",\"mGaEDPw5FsDb3vdnq\",\"jRqY4i8gPemsZMBGf\",\"E5pJWS3yw3wkpZC55\",\"oBCStgAyNK7z8C4WA\",\"rWhXHhzF4W8bea6LP\",\"gXTAie79kiw28tx5u\",\"mQKWauR6b252TmdX4\",\"LNCb5rksJLJ43L4Nw\",\"KMR6vNzvSKMA2cXnK\"],\"quality\":[5,1,5,3]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"isHidden\":false,\"quality\":3.5,\"family\":[{\"_id\":\"xFymdYS9bnmspEyYA\",\"language\":\"cpp\"},{\"_id\":\"JyskomdFw4tYgAELT\",\"language\":\"java\"},{\"_id\":\"dydxdTCEpELGMRWeB\",\"language\":\"javascript\"},{\"_id\":\"9WZcCNNCbaLvmHR3P\",\"language\":\"python3\"},{\"_id\":\"sS5mgMgyj7Fs9rRAC\",\"language\":\"ruby\"}]}}"]