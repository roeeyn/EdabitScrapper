a["{\"msg\":\"result\",\"id\":\"696\",\"result\":{\"_id\":\"d9DKamDvmX6TiSd5u\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n\\tpublic static String timeDifference(String cityA, String timestamp, String cityB) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":2.7058823529411766,\"familyId\":\"cmAGteXLYkK3asJws\",\"instructions\":\"In this challenge, the goal is to calculate what time it is in two different cities. You're given a string `cityA` and the related string `timestamp` (time in `cityA`) with the date formatted in full **U.S. notation**, as in this example:\\n\\n```\\n\\\"July 21, 1983 23:01\\\"\\n```\\n\\nYou have to return a new timestamp with date and corresponding time in `cityB`, formatted as in this example:\\n\\n```\\n\\\"1983-7-22 23:01\\\"\\n```\\n\\nSee the table below for a list of given cities and their **GMT** (_Greenwich Mean Time_) hours offsets.\\n\\n|GMT|City|\\n|---|---|\\n| - 08:00 | Los Angeles\\n| - 05:00 | New York\\n| - 04:30 | Caracas\\n| - 03:00 | Buenos Aires\\n|   00:00 | London\\n| + 01:00 | Rome\\n| + 03:00 | Moscow\\n| + 03:30 | Tehran\\n| + 05:30 | New Delhi\\n| + 08:00 | Beijing\\n| + 10:00 | Canberra\\n\\n### Examples\\n```\\ntimeDifference(\\\"Los Angeles\\\", \\\"April 1, 2011 23:23\\\", \\\"Canberra\\\") ➞ \\\"2011-4-2 17:23\\\"\\n// Can be a new day.\\n\\ntimeDifference(\\\"London\\\", \\\"July 31, 1983 23:01\\\", \\\"Rome\\\") ➞ \\\"1983-8-1 00:01\\\"\\n// Can be a new month.\\n\\ntimeDifference(\\\"New York\\\", \\\"December 31, 1970 13:40\\\", \\\"Beijing\\\") ➞ \\\"1971-1-1 02:40\\\"\\n// Can be a new year.\\n```\\n### Notes\\n- Pay attention to hours and minutes, a leading `0` is needed in the returned timestamp when they're a single digit.\\n- Pay attention to cities with half hours offsets.\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(\\\"2011-4-2 17:23\\\", Challenge.timeDifference(\\\"Los Angeles\\\", \\\"April 1, 2011 23:23\\\", \\\"Canberra\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(\\\"1983-8-1 00:01\\\", Challenge.timeDifference(\\\"London\\\", \\\"July 31, 1983 23:01\\\", \\\"Rome\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(\\\"1971-1-1 02:40\\\", Challenge.timeDifference(\\\"New York\\\", \\\"December 31, 1970 13:40\\\", \\\"Beijing\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(\\\"1985-8-20 09:23\\\", Challenge.timeDifference(\\\"London\\\", \\\"August 20, 1985 12:23\\\", \\\"Buenos Aires\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(\\\"1987-12-21 19:41\\\", Challenge.timeDifference(\\\"Rome\\\", \\\"December 21, 1987 15:11\\\", \\\"New Delhi\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(\\\"2009-3-1 04:02\\\", Challenge.timeDifference(\\\"Canberra\\\", \\\"March 1, 2009 18:32\\\", \\\"Caracas\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(\\\"1953-9-14 11:54\\\", Challenge.timeDifference(\\\"Moscow\\\", \\\"September 14, 1953 19:54\\\", \\\"New York\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n    assertEquals(\\\"1999-11-17 23:33\\\", Challenge.timeDifference(\\\"Beijing\\\", \\\"November 18, 1999 02:03\\\", \\\"New Delhi\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test9() {\\n    assertEquals(\\\"1977-6-3 10:48\\\", Challenge.timeDifference(\\\"Tehran\\\", \\\"June 3, 1977 11:18\\\", \\\"Moscow\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test10() {\\n    assertEquals(\\\"1990-1-21 17:14\\\", Challenge.timeDifference(\\\"Caracas\\\", \\\"January 21, 1990 12:44\\\", \\\"London\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test11() {\\n    assertEquals(\\\"2016-2-21 23:56\\\", Challenge.timeDifference(\\\"New York\\\", \\\"February 21, 2016 17:56\\\", \\\"Rome\\\"));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"In this challenge, the goal is to calculate what time it is in two different cities. You're given a string cityA and the related string timestamp (time in cityA) with the date formatted in full U.S. notation, as in this example:\\n\\n\\\"July 21, 1983 23:01\\\"\\n\\nYou have to return a new timestamp with date and corresponding time in cityB, formatted as in this example:\",\"tags\":[\"dates\",\"formatting\"],\"timestamp\":{\"$date\":1571527304423},\"title\":\"Time Around the World\",\"stats\":{\"completed\":{\"total\":17,\"ratings\":[2,2,2,2,2,2,3,3,4,3,3,3,2,5,2,4,2],\"rators\":[\"AzERMCwmKzy5zXJ3S\",\"teqbjTHTg6ScWbPgE\",\"Es4eX2stRpyoXeC7f\",\"TrquEHytntLKHA4m2\",\"DkSMZ3jZLkwviKb9g\",\"BEjoBzgdBkGbGHJkv\",\"k63LjKkX5p7SYng7C\",\"NzJKK8Cuf3bcqZfcw\",\"Jm4CXufA2GcS2X9Ar\",\"gXTAie79kiw28tx5u\",\"4fpPZ59wamBBPuBdz\",\"P9iAdQpAKG8JKEaGp\"],\"quality\":[]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":0,\"family\":[{\"_id\":\"TaFvkCoHo5Y25zwxX\",\"language\":\"cpp\"},{\"_id\":\"d9DKamDvmX6TiSd5u\",\"language\":\"java\"},{\"_id\":\"5fN46pGqkjd9EQXca\",\"language\":\"javascript\"},{\"_id\":\"fRB5QRYn5WC8jMGTe\",\"language\":\"python3\"},{\"_id\":\"42Yvs3M93PJTJhRkJ\",\"language\":\"ruby\"}]}}"]