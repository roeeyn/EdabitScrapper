a["{\"msg\":\"result\",\"id\":\"562\",\"result\":{\"_id\":\"gskWj3Zj45ovAomTb\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class StringParser {\\n\\tpublic static Map<String, String> parseCode(String s) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":2.1463414634146343,\"familyId\":\"kfkyD6DWgpSEvNf6h\",\"instructions\":\"Create a function which takes in an encoded string and returns an object according to the following example:\\n\\n### Examples\\n```\\nparseCode(\\\"Tesha000Deep00014344\\\") ➞ {\\n  \\\"firstName\\\"=\\\"Tesha\\\",\\n  \\\"lastName\\\"=\\\"Deep\\\",\\n  \\\"id\\\"=\\\"14344\\\"\\n}\\n\\nparseCode(\\\"John000Doe000123\\\") ➞ {\\n  \\\"firstName\\\"=\\\"John\\\",\\n  \\\"lastName\\\"=\\\"Doe\\\",\\n  \\\"id\\\"=\\\"123\\\"\\n}\\n\\nparseCode(\\\"kevin0smith004331\\\") ➞ {\\n  \\\"firstName\\\"=\\\"kevin\\\",\\n  \\\"lastName\\\"=\\\"smith\\\",\\n  \\\"id\\\"=\\\"4331\\\"\\n}\\n\\nparseCode(\\\"Thomas00LEE0000043\\\") ➞ {\\n  \\\"firstName\\\"=\\\"Thomas\\\",\\n  \\\"lastName\\\"=\\\"LEE\\\",\\n  \\\"id\\\"=\\\"43\\\"\\n}\\n\\nparseCode(\\\"Madsy0Jupiter0321\\\") ➞ {\\n  \\\"firstName\\\"=\\\"Madsy\\\",\\n  \\\"lastName\\\"=\\\"Jupiter\\\",\\n  \\\"id\\\"=\\\"321\\\"\\n}\\n```\\n\\n### Notes\\n- The string will always be in the same format, first name, last name and id with zeros between them.\\n- `id` numbers will not contain any zeros.\\n- **Bonus:** Try solving this without RegEx.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"/** \\n================================== \\nTestGen 2.3 for JUnit 4.13.0 \\t\\t\\nTest Case: StringParser::parseCode \\nTimestamp: 10/14/2020 11:08:20 PM \\n---------------------------------- \\n® DARKKO 2020 © \\n================================== \\n\\n**/ \\n\\nimport static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\nimport java.util.stream.Stream;\\nimport java.util.LinkedHashMap;\\n\\npublic class StringParserTest { \\n\\t\\n\\t@Test\\n\\tpublic void test01() {\\n\\t\\tString[][] e = new String[][] {{\\\"firstName\\\", \\\"Tesha\\\"}, {\\\"lastName\\\", \\\"Xavier\\\"}, {\\\"id\\\", \\\"14344\\\"}};\\n\\t\\tLinkedHashMap<String, String> map = new LinkedHashMap<>();\\n\\t\\tStream.of(e).forEach(k -> map.put(k[0], k[1]));\\n\\t\\tassertEquals(map, StringParser.parseCode(\\\"Tesha000Xavier00014344\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() {\\n\\t\\tString[][] e = new String[][] {{\\\"firstName\\\", \\\"John\\\"}, {\\\"lastName\\\", \\\"Doe\\\"}, {\\\"id\\\", \\\"123\\\"}};\\n\\t\\tLinkedHashMap<String, String> map = new LinkedHashMap<>();\\n\\t\\tStream.of(e).forEach(k -> map.put(k[0], k[1]));\\n\\t\\tassertEquals(map, StringParser.parseCode(\\\"John000Doe000123\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() {\\n\\t\\tString[][] e = new String[][] {{\\\"firstName\\\", \\\"kevin\\\"}, {\\\"lastName\\\", \\\"smith\\\"}, {\\\"id\\\", \\\"4331\\\"}};\\n\\t\\tLinkedHashMap<String, String> map = new LinkedHashMap<>();\\n\\t\\tStream.of(e).forEach(k -> map.put(k[0], k[1]));\\n\\t\\tassertEquals(map, StringParser.parseCode(\\\"kevin0smith004331\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tString[][] e = new String[][] {{\\\"firstName\\\", \\\"Thomas\\\"}, {\\\"lastName\\\", \\\"LEE\\\"}, {\\\"id\\\", \\\"43\\\"}};\\n\\t\\tLinkedHashMap<String, String> map = new LinkedHashMap<>();\\n\\t\\tStream.of(e).forEach(k -> map.put(k[0], k[1]));\\n\\t\\tassertEquals(map, StringParser.parseCode(\\\"Thomas00LEE0000043\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tString[][] e = new String[][] {{\\\"firstName\\\", \\\"Madsy\\\"}, {\\\"lastName\\\", \\\"Jupiter\\\"}, {\\\"id\\\", \\\"321\\\"}};\\n\\t\\tLinkedHashMap<String, String> map = new LinkedHashMap<>();\\n\\t\\tStream.of(e).forEach(k -> map.put(k[0], k[1]));\\n\\t\\tassertEquals(map, StringParser.parseCode(\\\"Madsy0Jupiter0321\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tString[][] e = new String[][] {{\\\"firstName\\\", \\\"Tesh\\\"}, {\\\"lastName\\\", \\\"Deep\\\"}, {\\\"id\\\", \\\"143\\\"}};\\n\\t\\tLinkedHashMap<String, String> map = new LinkedHashMap<>();\\n\\t\\tStream.of(e).forEach(k -> map.put(k[0], k[1]));\\n\\t\\tassertEquals(map, StringParser.parseCode(\\\"Tesh000Deep000143\\\"));\\n\\t}\\n\\n}\\n// end of tests\",\"language\":\"java\",\"quality\":0,\"summary\":\"Create a function which takes in an encoded string and returns an object according to the following example:\\n\\nExamples\\nparseCode(\\\"Tesha000Deep00014344\\\") ➞ {\\n  \\\"firstName\\\"=\\\"Tesha\\\",\\n  \\\"lastName\\\"=\\\"Deep\\\",\\n  \\\"id\\\"=\\\"14344\\\"\\n}\\n\\nparseCode(\\\"John000Doe000123\\\") ➞ {\\n  \\\"firstName\\\"=\\\"John\\\",\\n  \\\"lastName\\\"=\\\"Doe\\\",\\n  \\\"id\\\"=\\\"123\\\"\\n}\\n\\nparseCode(\\\"kevin0smith004331\\\") ➞ {\\n  \\\"firstName\\\"=\\\"k\",\"tags\":[\"strings\",\"formatting\",\"sorting\",\"objects\"],\"timestamp\":{\"$date\":1602609314850},\"title\":\"Encoded String Parse\",\"stats\":{\"completed\":{\"total\":38,\"ratings\":[2,2,2,2,2,3,1,1,1,2,2,3,2,2,2,3,2,3,3,2,2,2,2,3,0,3,2,2,3,3,1,3,3,1,1,2,2,3,2,3,3],\"quality\":[],\"rators\":[\"Es4eX2stRpyoXeC7f\",\"a777e8chPvJkY3tKa\",\"azAzSkvJd7eyXY9x9\",\"rehehi2Tr2mwaEoJE\",\"yXGiiSAR5nBHnH3yr\",\"5zbtZPCHNi2D8szdC\",\"3GAHtEe5sPNEKNy6J\",\"x3WsGCnE38anLjJqh\",\"rvojHhKH3DaxotefQ\",\"Pxv23QsobqWPvMDKm\",\"BSJAuSLSs5Sv5SYAf\",\"gXTAie79kiw28tx5u\",\"TrquEHytntLKHA4m2\",\"Ym8AjbKGSJooun3nt\",\"PRpHJh9yrYyj6hBFi\",\"jyoLggHk8xQKZuoQC\",\"mQKWauR6b252TmdX4\",\"8Xx8nWXRydHDBGfQf\",\"4fpPZ59wamBBPuBdz\",\"gJbvbqosimaP4ZAYb\",\"qb2DTmzQj4vNfq5K7\",\"82weQfHHmno4Mq4X7\",\"LNCb5rksJLJ43L4Nw\",\"YLqdr7bYjwew2KM4N\",\"BnaE25vvCGcfL3jiQ\",\"mfm3gB39arY8Rjb2y\",\"qaPjAANdnxFnWfj5d\",\"xBQC5uQdx6WndJ3iM\",\"xEX3TDY6C2h82dJTn\",\"CggGfsERnPKGupFWp\",\"htXCitorobtqYymjN\",\"a49eNnfRwSMxsDJXf\",\"wFRLGjA56kj7xyhmv\",\"sxci7DYKNa6q22Sjq\",\"KMR6vNzvSKMA2cXnK\",\"rWhXHhzF4W8bea6LP\"]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]}},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"gskWj3Zj45ovAomTb\",\"language\":\"java\"},{\"_id\":\"qPK2Cz8LS2rGKYz7h\",\"language\":\"javascript\"},{\"_id\":\"7vN8ZRw43yuWNoy3Y\",\"language\":\"python3\"}]}}"]