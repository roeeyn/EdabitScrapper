a["{\"msg\":\"result\",\"id\":\"275\",\"result\":{\"_id\":\"NWtZJ2wHGB7hz9iSd\",\"archived\":false,\"author\":\"kochug\",\"authorId\":\"vQEmjTRgmdGNYB7yk\",\"code\":\"public class Program {\\n\\tpublic static boolean isValidPhoneNumber(String s) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.1342281879194631,\"familyId\":\"k6RsurxMhkYxCCAPG\",\"instructions\":\"Create a method that accepts a string and returns `true` if it's in the format of a proper phone number and `false` if it's not. Assume any number between 0-9 (in the appropriate spots) will produce a valid phone number.\\n\\nThis is what a valid phone number looks like:\\n\\n```\\n(123) 456-7890\\n```\\n\\n### Examples\\n```\\nisValidPhoneNumber(\\\"(123) 456-7890\\\") ➞ true\\n\\nisValidPhoneNumber(\\\"1111)555 2345\\\") ➞ false\\n\\nisValidPhoneNumber(\\\"098) 123 4567\\\") ➞ false\\n```\\n\\n### Notes\\nDon't forget the space after the closing parentheses.\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(true, Program.isValidPhoneNumber(\\\"(123) 456-7890\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(false, Program.isValidPhoneNumber(\\\"(1111)555 2345\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(false, Program.isValidPhoneNumber(\\\"(098) 123 4567\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(false, Program.isValidPhoneNumber(\\\"(123)456-7890\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(false, Program.isValidPhoneNumber(\\\"abc(123)456-7890\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(false, Program.isValidPhoneNumber(\\\"(123)456-7890abc\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(false, Program.isValidPhoneNumber(\\\"abc(123)456-7890abc\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n    assertEquals(false, Program.isValidPhoneNumber(\\\"abc(123) 456-7890\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test9() {\\n    assertEquals(false, Program.isValidPhoneNumber(\\\"(123) 456-7890abc\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test10() {\\n    assertEquals(false, Program.isValidPhoneNumber(\\\"abc(123) 456-7890abc\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test11() {\\n    assertEquals(false, Program.isValidPhoneNumber(\\\"(123)-456-7890\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test12() {\\n    assertEquals(false, Program.isValidPhoneNumber(\\\"(123)_456-7890\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test13() {\\n    assertEquals(false, Program.isValidPhoneNumber(\\\"-123) 456-7890\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test14() {\\n    assertEquals(true, Program.isValidPhoneNumber(\\\"(519) 505-6498\\\"));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"Create a method that accepts a string and returns true if it's in the format of a proper phone number and false if it's not. Assume any number between 0-9 (in the appropriate spots) will produce a valid phone number.\\n\\nThis is what a valid phone number looks like:\\n\\n(123) 456-7890\\n\\nExamples\\nisValidPhoneNumber(\\\"(123) 456-7890\\\") ➞ true\\n\\nisValidPhoneNumber(\\\"1111)55\",\"tags\":[\"strings\",\"validation\",\"regex\",\"formatting\"],\"timestamp\":{\"$date\":1523686938568},\"title\":\"Is the Phone Number Formatted Correctly?\",\"stats\":{\"completed\":{\"total\":178,\"ratings\":[1,1,1,1,1,1,3,1,1,2,2,1,1,1,2,0,2,0,1,1,1,2,1,0,1,1,2,1,1,0,1,0,1,0,2,1,2,1,1,1,0,1,2,1,1,1,0,2,1,1,0,3,2,1,1,2,1,0,0,1,2,2,0,2,2,1,1,2,2,2,1,1,3,1,1,0,1,0,0,0,1,1,0,1,3,1,0,1,1,1,1,1,0,1,1,1,1,0,1,0,2,2,0,3,1,1,1,2,1,1,5,0,0,1,1,0,2,2,1,3,1,2,2,2,3,1,2,1,2,1,2,1,0,1,2,2,1,1,0,0,0,1,1,1,1,1,0,1,1],\"rators\":[\"vQEmjTRgmdGNYB7yk\",\"CotyEj3eY9CbwBs2t\",\"dJcfh6gASjPCWEBoe\",\"M3mkzSYXCpCt2HhC3\",\"h3cMyEyB72ygAQnx4\",\"7LrgrixSzJxiGaF66\",\"GRZzKCbeb4xKHFCrZ\",\"79ZbLzp7xepvkonoh\",\"rQpthoJte6rreQd4j\",\"fbNWxXTqZy2mXNbGJ\",\"dKfW4G6srmPweYgPn\",\"x5JEs23Tc8ZWw3YAY\",\"7aFiTKgeaqixEJDqR\",\"ddfeZ4pbbcXFXqZmY\",\"tW2XYfMDPBbMknTmo\",\"sBAQgme9imkPrH2Xm\",\"YGYf9GKzaF8CWnDHE\",\"NQ287FZrfSY9Swn2F\",\"3riR3H5ei3T86EEzz\",\"qzFMJGxMErfBhExMm\",\"uK99RLh3CQ3yur6BQ\",\"niz9xRvhYCLYvGJnW\",\"mNMQvcxKSSvqqMYCH\",\"yJyjT7Z2PPQmzzWpP\",\"5znpaFDoToJtAtF3h\",\"QS5RGoPnapStFD5Gi\",\"CDkkdvDdqjDihTcFS\",\"ydos8Ba8nZdYRNJpS\",\"T6j7qdvD37y8DLKzT\",\"JSSLvJPs8JebyfeS9\",\"WAMxBrgasiphg5QPL\",\"a49eNnfRwSMxsDJXf\",\"LTHCxsdjqzXpaXShT\",\"sxci7DYKNa6q22Sjq\",\"9c8n7ti5vCjTRgiGN\",\"t2kdBPj9qQAXY2Ehd\",\"3gxJoNp59B4eoyyed\",\"Ha5J49rhojBRy3BaM\",\"sb7Nh56pPFtPxLogT\",\"8rF6PHMSaybTDsvXr\",\"ZBDiEMi7dbjRL55LB\",\"hSrFWemiugfHeL9Fm\",\"yazNfwgLx7jSAZ8Tv\",\"tfs6uiysC8atFan4t\",\"8gJEpXHctGqC9ngcJ\",\"HBgPTjhMkJ2WCcBP7\",\"W4jpCs2jekeg5qAwc\",\"CLmJduqJHX83dM4Pd\",\"3KjxQu9RZ8ZSywvLz\",\"Yohr2MmAyaWGMbB35\",\"8JyqsSbN2FJXPr3cw\",\"CggGfsERnPKGupFWp\",\"riY7SYcedzHYCW67d\",\"s2G7xhbjaNdkGbhRX\",\"s8o9ptNnpNGktBWdX\",\"u4yanfWeeZsN3xWgc\",\"cwfpQQAowCJCE3zME\",\"AyrEvM2GLX2jqM772\",\"J9zJq7PMGb6mqzcHW\",\"5TaPWyRv9DZWWodp8\",\"5RcAXjQAbqQtWppy6\",\"YLwJkF2wuL3n9o6a2\",\"ko7oJ85JMftgcbkrr\",\"M5n9zd5LtuuwJr668\",\"PqAepaMciyBb7QQRK\",\"EZNT8B7yQnnZmuwCf\",\"NsQ8qYQQ47gSPtQkK\",\"Es4eX2stRpyoXeC7f\",\"N8vmwLrzeB9quuw4J\",\"gBGjCfJvPHswDM5JQ\",\"2cdvd8yuPLSwvGj9w\",\"rTj67TTydxqkpwFtN\",\"Kso7rzAKB4TTCPKgM\",\"8J2Dqqz9PaFufQzwY\",\"fZjkX29nhRTWWb75k\",\"YFHkjbM6obMSj24zi\",\"hB5mgzMwQSnhBzi7P\",\"jyoLggHk8xQKZuoQC\",\"5seiNqw6ZXoF2GRRd\",\"GEzaJZ2cPjENT4ERQ\",\"8zZ6xmzpiFair25qr\",\"Yp7uvStL97cC9fKkY\",\"B4pxRqzo43M7S8FbP\",\"WZujpe8yQAyZmpWHg\",\"TrquEHytntLKHA4m2\",\"DzvdGwHEjqsX7wyKr\",\"etoSR23iELGGgs9rA\",\"meS77LKqRswhF5LAy\",\"htXCitorobtqYymjN\",\"Yom3RzkMYpweE8cbS\",\"WkBmufs74SDQMo9Gr\",\"DkSMZ3jZLkwviKb9g\",\"uiNnMdQbp8fj3Zdv8\",\"EcKPDmD4GmeFJGDTL\",\"Ctuq7Wc8QPQmzwPK3\",\"AeJSxRqw2dJZuGvdk\",\"osXNzc2aCxspRwheS\",\"rvojHhKH3DaxotefQ\",\"g4NCSxxHqHCGMpWwT\",\"QAr6AxMvrPhKaMA8N\",\"nbH6pjzJS9Z35JD9r\",\"muXMnzQwGLzN6j2Jr\",\"DAQX9mhHdMTqyYbvh\",\"3unLGuwC6Tnoy8BtK\",\"RhPg33AdzvSZmibXa\",\"SmmkwyvSHT54PzB5B\",\"ZiN6yB9rACMaYgseC\",\"f6uGKbmMdBYCjrMBh\",\"Fd9765rksgPK4E2Zy\",\"fRYcPHuyEdqngMzC4\",\"yXGiiSAR5nBHnH3yr\",\"pi76g3eRpnKrhee2a\",\"SfmXqCfDksMb883DC\",\"a777e8chPvJkY3tKa\",\"fADAnmvM4LibcQWTr\",\"J7epB3qSQJ2E8vWkY\",\"TCTZucJN3tJh5t7MB\",\"gXTAie79kiw28tx5u\",\"6ehQMeGtrhnhot5zK\",\"7F3i3uNDxhZM6mckM\",\"WHSB76uqJrCf2XKsw\",\"JszPst3958te56jFk\",\"PmfzvaX5ZJscpvHXc\",\"hDeaTsprkH6CmvSAR\",\"P5BhjZxyeHQYTNyB9\",\"oMfq73A434YWhSuWQ\",\"mG8HqKiAQFTdRZthG\",\"jXTnL3JatkKjoifyb\",\"8Xx8nWXRydHDBGfQf\",\"Ym8AjbKGSJooun3nt\",\"tyLS9T6YMfg9fMtYJ\",\"BWqQ68pvNedARDcBN\",\"CNc6rmwhbxkxEhHAp\",\"uNK8tLSseShR8wcA4\",\"W56bWmpQeLJ9JEDsa\",\"cJmmvnmJSXvBXtydi\",\"Wi4H6ayKsNDWWQCG5\",\"PJu3WcTpfRrvHfQiS\",\"uFfEio8nzDvL8emhp\",\"QRv96jmNaYsWkxQEG\",\"GkYtSbQuheBF4Enys\",\"hhxjQREtmHSheH9Pj\",\"zZfMwLuoERGmybgib\",\"buX4mCQhtXCfBjeno\",\"drAAhaSiMncZ2XcAk\",\"mDWNyaaQ9hvPCRzSd\",\"3SgSNoAB3sxaYeT3w\",\"btabi3PdyisuY5tn9\",\"rhS8qXRjZcpDXkwnE\",\"pYonfGP4u9HNL9Z32\",\"xxyxCs8Hr7MQAsFvv\",\"uw47663LqPME8btaA\",\"srJ34BaybkQh3qRkM\",\"xEX3TDY6C2h82dJTn\",\"cR3ibTMxLyEdDFCHY\",\"jCjCvyhqhpebkJn34\",\"KMR6vNzvSKMA2cXnK\",\"GDNsAq2snvJuwFa88\",\"unqzSsxpxj9sZ7rbD\",\"nSLvkGEpiYCtcBLaa\",\"ckQwFFWyLXmDQAaCn\",\"nFbmNzMQ38TncmfQX\",\"3Gf7ikLijfoxabiPY\",\"H3XLNCWB5yXt5YYXn\"],\"quality\":[4,5,5,5,5,5,5,5,5,5,5,4,5,3,5,4,5,5,3]},\"complaints\":{\"total\":0,\"reasons\":[],\"skippers\":[\"vQEmjTRgmdGNYB7yk\"]},\"instructions\":{\"score\":14.2,\"voters\":[\"yPFjYWAKibvfgSHDD\",\"CHk394XX3hXsCz5Sg\",\"XcHCqYmeoqxDsoucx\",\"NQ287FZrfSY9Swn2F\",\"eq6bWgNCAXLkFj4tx\"]},\"tests\":{\"score\":-2.4,\"voters\":[\"NQ287FZrfSY9Swn2F\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.631578947368421,\"family\":[{\"_id\":\"Xoqsvq3fzz3qXcimL\",\"language\":\"cpp\"},{\"_id\":\"n5Q8vWopD3Kmc8ADi\",\"language\":\"csharp\"},{\"_id\":\"NWtZJ2wHGB7hz9iSd\",\"language\":\"java\"},{\"_id\":\"nHaKL55KwW3XaGrAw\",\"language\":\"javascript\"},{\"_id\":\"9uQkkwjFtZJHNSNvN\",\"language\":\"php\"},{\"_id\":\"B2jcSh2RG4GpQYuBz\",\"language\":\"python3\"},{\"_id\":\"oBGQkzexbACN7MvNh\",\"language\":\"ruby\"},{\"_id\":\"6CxmaPJYdWRA65MXT\",\"language\":\"swift\"}]}}"]