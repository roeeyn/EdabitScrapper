a["{\"msg\":\"result\",\"id\":\"160\",\"result\":{\"_id\":\"Hu3HxFH3Gnv2CwCeH\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n\\tpublic static String findNemo(String sentence) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":0.7317073170731707,\"familyId\":\"YuoEPMDc4kuhtYkJY\",\"instructions\":\"You're given a string of words. You need to find the word \\\"Nemo\\\", and return a string like this: `\\\"I found Nemo at [the order of the word you find Nemo]!\\\"`.\\n\\nIf you can't find Nemo, return `\\\"I can't find Nemo :(\\\"`.\\n\\n### Examples\\n```\\nfindNemo(\\\"I am finding Nemo !\\\") ➞ \\\"I found Nemo at 4!\\\"\\n\\nfindNemo(\\\"Nemo is me\\\") ➞ \\\"I found Nemo at 1!\\\"\\n\\nfindNemo(\\\"I Nemo am\\\") ➞ \\\"I found Nemo at 2!\\\"\\n```\\n\\n### Notes\\n- `! , ? .` are always separated from the last word.\\n- Nemo will always look like _Nemo_, and not _NeMo_ or other capital variations.\\n- _Nemo's_, or anything that says _Nemo_ with something behind it, doesn't count as _Finding Nemo_.\\n- If there are multiple _Nemo's_ in the sentence, only return the first one.\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(\\\"I found Nemo at 5!\\\", Challenge.findNemo(\\\"I am Ne mo Nemo !\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(\\\"I found Nemo at 8!\\\", Challenge.findNemo(\\\"N e m o is NEMO NeMo Nemo !\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(\\\"I found Nemo at 5!\\\", Challenge.findNemo(\\\"I am Nemo's dad Nemo senior .\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(\\\"I can't find Nemo :(\\\", Challenge.findNemo(\\\"Oh, hello !\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(\\\"I can't find Nemo :(\\\", Challenge.findNemo(\\\"Is it Nemos, Nemona, Nemoor or Garfield?\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(\\\"I found Nemo at 1!\\\", Challenge.findNemo(\\\"Nemo is a clown fish, he has white and orange stripes. Nemo , come back!\\\"));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"You're given a string of words. You need to find the word \\\"Nemo\\\", and return a string like this: \\\"I found Nemo at [the order of the word you find Nemo]!\\\".\\n\\nIf you can't find Nemo, return \\\"I can't find Nemo :(\\\".\\n\\nExamples\\nfindNemo(\\\"I am finding Nemo !\\\") ➞ \\\"I found Nemo at 4!\\\"\\n\\nfindNemo(\\\"Nemo is me\\\") ➞ \\\"I found Nemo at 1!\\\"\\n\\nfindNemo(\\\"I Nemo am\\\") ➞ \\\"I found Nemo\",\"tags\":[\"arrays\",\"formatting\",\"strings\"],\"timestamp\":{\"$date\":1568272599873},\"title\":\"Finding Nemo\",\"stats\":{\"completed\":{\"total\":260,\"ratings\":[1,1,1,1,1,0,0,1,0,0,1,0,1,1,0,1,1,0,0,2,0,0,0,0,0,1,2,0,1,1,1,0,0,0,0,1,0,2,0,1,1,0,0,3,2,1,0,2,0,0,0,2,2,1,0,0,2,1,0,0,0,1,2,2,0,0,2,1,1,1,0,1,0,0,0,0,1,1,1,0,0,0,0,0,1,0,0,2,0,0,1,2,0,0,0,0,1,2,1,0,0,2,3,0,2,0,0,1,0,2,0,2,0,1,5,0,0,1,0,0,0,2,0,1,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,0,1,3,1,0,0,1,0,1,2,1,1,0,1,0,0,3,1,2,1,2,2,1,2,1,2,0,2,1,2,3,1,2,2,2,0,1,1,2,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1],\"rators\":[\"vRXuYYBNuHEQ29fbm\",\"3pdgguqZgNDSAJSGm\",\"FocLpCB2WEiK2gGni\",\"9c8n7ti5vCjTRgiGN\",\"sxci7DYKNa6q22Sjq\",\"gBGjCfJvPHswDM5JQ\",\"cp3X8hk8yNME7qoD9\",\"Yohr2MmAyaWGMbB35\",\"mrKDTFeqRM7r9ZPJv\",\"TsTBDzjPctPWdaDGy\",\"RW2wFPbMQniZWPmw4\",\"HTdEyxtkq87EJN2Aw\",\"ZBDiEMi7dbjRL55LB\",\"jkBTJPGPb35c3ujbo\",\"2oiE6qHMbW3cv7N74\",\"qgc3hgPcSduWfwkSj\",\"Gxm6CjQLyYkpv7bW4\",\"3gxJoNp59B4eoyyed\",\"t2kdBPj9qQAXY2Ehd\",\"ePoT9DSPMQWhH46Z5\",\"42kigKMsZkbGAYDhw\",\"YF79LnTdprobbYY5v\",\"a49eNnfRwSMxsDJXf\",\"vnAs3y7hJY7X6JE6j\",\"RPXWRJBL2b2CZk7hy\",\"7v5XEd4wjiJjwSHio\",\"LvPcgns5Ec7wyMbMv\",\"45zNYikBk2Wsrn2eM\",\"EESLEZPRiuTZmEJLw\",\"x6H9Nsj8w5F3tvuD7\",\"fJKkZN9dvjf2csx9x\",\"NCB3RaRBonefnHBJD\",\"kuMsHTCmg7uPeYArA\",\"qJZsi5rhRnWA38FbA\",\"ghRADkBcGb85dhmva\",\"t5gr8nEXaWqrtgq6r\",\"pr4Cm4A369tC9gSeT\",\"SwfCRPtZdPZendiP7\",\"5QN8R22z43SrwoHDz\",\"7p3Btn9oRNStAZ8G6\",\"3KjxQu9RZ8ZSywvLz\",\"PHkmuovANGzadceGW\",\"D3ASM3aWpcQ8gvnin\",\"44WBSE7ZbL5sukcJv\",\"s2ZMtR9deh6Kia7pb\",\"8JyqsSbN2FJXPr3cw\",\"XPhLf7JYc6mmBYR9A\",\"2cdvd8yuPLSwvGj9w\",\"5RcAXjQAbqQtWppy6\",\"fX88wbEuJRZxti6Ji\",\"HBgPTjhMkJ2WCcBP7\",\"njhNmS8vivtvBFBoz\",\"gJYHiyyMv6mhqFehP\",\"n5wubRfh6zh8QRymN\",\"ur2v2gqNn9YGcwEtB\",\"SdMTrmB3qSGBwHTKo\",\"bsXDWXhsuqgaZYCCv\",\"EZNT8B7yQnnZmuwCf\",\"NsQ8qYQQ47gSPtQkK\",\"WuAkXKpcrQy867yCw\",\"TFHfNrmG9a3m6tbKo\",\"afMjsKHpEPtAKaGKq\",\"pCmeZpDvn4Y9Xczwk\",\"9XxsZapHq9HDnxkNb\",\"Es4eX2stRpyoXeC7f\",\"YFHkjbM6obMSj24zi\",\"YLqdr7bYjwew2KM4N\",\"wYYMNPe8nSiJFbvJw\",\"mdEQJ2fmGmkbhbvNw\",\"Kso7rzAKB4TTCPKgM\",\"8J2Dqqz9PaFufQzwY\",\"st6dHoprA7daEGcQr\",\"DzLdw6wEL2Nt5mrsp\",\"cdcYSPc8rGJZrMnfS\",\"vTeLaYpGiXBy9tr5R\",\"hB5mgzMwQSnhBzi7P\",\"3EfDGZ9Sgz5zxzD7a\",\"jyoLggHk8xQKZuoQC\",\"e85WYqSpXbCb3iH4H\",\"odEDhaxWuAGXxEswA\",\"Yp7uvStL97cC9fKkY\",\"TrquEHytntLKHA4m2\",\"Gnz7fQmGAHp7Mup3d\",\"B4pxRqzo43M7S8FbP\",\"GbZMSzydgNZKYoQ3c\",\"EXFQFCRRRfdazM9uJ\",\"WZujpe8yQAyZmpWHg\",\"4nFXeGakoCjm5GXYa\",\"A4PkKCWXffBTbMJdP\",\"AeJSxRqw2dJZuGvdk\",\"htXCitorobtqYymjN\",\"ojmmLWL7Hvi6yYWeJ\",\"y6kfyYmydcD8tkBk7\",\"hhxjQREtmHSheH9Pj\",\"GEDsDpNX4QMhZAxtJ\",\"bCLgcPTHSkG82r5o7\",\"xLTGN8Mg7Q6mDWYDi\",\"6asyTYvz7kMPee8Tz\",\"cR3ibTMxLyEdDFCHY\",\"Fs5LERLmurcKXP4N5\",\"45MHqHC33PyeZfzhA\",\"ZjEdErENicjeqKZ8g\",\"SbDRsLR6yfZXETyKN\",\"Mbmx3ErK8qQdJvcpc\",\"tPf5nXX3wPbdTewqX\",\"g4NCSxxHqHCGMpWwT\",\"Tf7TJFSPktJBgLA4k\",\"TBamPvEAh6xARn8Kd\",\"nbH6pjzJS9Z35JD9r\",\"MxmG8Gkti7L5kXYNL\",\"SFjyHZBEqzthL9Bzy\",\"sYKPxZX5xJZ2GTp6Q\",\"rvojHhKH3DaxotefQ\",\"3PttJMEMgnEdCZ9xv\",\"ikxSkiQjCjYPsFwMT\",\"umcNKSZ597NfCXiyy\",\"p3tkuLoxm3TzJNj2D\",\"yXGiiSAR5nBHnH3yr\",\"R2EJfZ2yGCuFquWrM\",\"f6uGKbmMdBYCjrMBh\",\"3mXBfmwykLEuqR9cC\",\"Fd9765rksgPK4E2Zy\",\"6akKZDu2YSFbdwhPj\",\"v9qTRmiCsjoeAAiyc\",\"JXnf7Lz3zotPN365m\",\"rqq7L69PdSusM6YY5\",\"HHXf2G47cyoEmQuiB\",\"avXoZmD8SSpqsLST2\",\"TTgP9jcqGxCfKotZ3\",\"9ty3Xe2fBFtMvnyB6\",\"ahAg7BF8qMmSR3cbv\",\"GimSDQiQTYiT8hcpj\",\"puCobPgduCEZMXu69\",\"79Wo8iNbhEr7BvrNE\",\"J7epB3qSQJ2E8vWkY\",\"ZqjP4M6dzu32To33K\",\"WHSB76uqJrCf2XKsw\",\"2xFvy6u3hE4LtCXMD\",\"7gBLtxKryhTryH5zb\",\"2wS9Wm3Nj5ZFcMnfA\",\"ENtEccBrSYd7oZKFZ\",\"etoSR23iELGGgs9rA\",\"cueHAmTrcWuowXf58\",\"8Xx8nWXRydHDBGfQf\",\"47PyFbZyxWuP9Bgga\",\"RZhnfbL35u4CtQuqp\",\"CNc6rmwhbxkxEhHAp\",\"W56bWmpQeLJ9JEDsa\",\"8DfhSneJpsw5uqLeM\",\"m8RTLuXqmythXHYZt\",\"bWWFscsAr66ZWHo28\",\"uFfEio8nzDvL8emhp\",\"4SBj9cygDMHj6PPRP\",\"rojdHfAAuAYxoaEXp\",\"neNNSEbgzx79GYshu\",\"hseQSt2EJ5uvb2pQv\",\"NLijbfPqDkaxxBe6g\",\"Yj7ftjzyP67R5NFrH\",\"Wi4H6ayKsNDWWQCG5\",\"h96FRTLbu79gbRLZv\",\"kaSirKnRwXvGfe6ru\",\"FbaQoMJPTNFFRLcd5\",\"btabi3PdyisuY5tn9\",\"GDQNakhHMtureqf3c\",\"7LzbahrBpunnAMg4M\",\"nhppnmu2Nn2bxmLph\",\"WMnB4KYRg37wEXxMG\",\"hibYcdCWPdTvsoudG\",\"aBQAJwaHTY4pLzzYt\",\"LrgQT4bdiLbHrprXu\",\"HmsQ4aHCjj2HmAnoa\",\"NTKM7uBiackQQKrmN\",\"KNXNybZDXDXLDPTb5\",\"Y6N5mCB4KjcLeFFDK\",\"K22DPvEdwdbAAgFP5\",\"vh8Bcpmy4J9cy648m\",\"aM3WCKPbmydYEpCRv\",\"ZSRKo4wtwAAdSrxip\",\"JYsASoJtjpG6yiesT\",\"rSpyFwaEPSCZMryBS\",\"3SgSNoAB3sxaYeT3w\",\"6hf7rmQ2fQGBG6ns7\",\"yd5PakB2z33q2JrTZ\",\"Ln5Ktpm8Zgxgdtgww\",\"xiDWh3BpG467GzETd\",\"vv9y4bu7PzbFgimpN\",\"9WPccoaddNszbFrGf\",\"CZPjJRnvSC59BB5Lw\",\"Yx7zHuHdCDRMFpKhs\",\"NnymXePpDaZnp2fRd\",\"Pnv2sDh2Q9FCgkM4s\",\"BYKYBqFgdNJ9unogL\",\"d6wdwygWKkCLuDdij\",\"MGojDC6LGPeeMb39r\",\"AuhEnvXWL72cDtAQQ\",\"BbBPMeJ9ckxCoc9my\",\"EuAbxcNEKxbzZQTWx\",\"FDDHFt62oyCbw7QWE\",\"iY7Hu2p3miMKsCbrn\",\"BbPpwoHJuDnw5Qb9v\",\"xv5obFhsxY93mqR5S\",\"P5qFWmHtGZip3KyHr\",\"LhoSXZgLwXDPdFTY6\",\"QRv96jmNaYsWkxQEG\",\"KCgGHbKRJ94EZNYnp\",\"5jdFvEEbJXLyMwzfc\",\"WGbocjGEmNvSdw6jK\",\"buX4mCQhtXCfBjeno\",\"eQXwk5zGckM8tCWYH\",\"fGSQQds3A8gP6rc5h\",\"xEX3TDY6C2h82dJTn\",\"khdCaD6AGBiR6txLQ\",\"w2HyZ7rTY3HGJwDxN\",\"uw47663LqPME8btaA\",\"gZj6HTKJdPGJwPe2D\",\"srJ34BaybkQh3qRkM\",\"nSLvkGEpiYCtcBLaa\",\"GSgr8hLGHeZPde7WJ\",\"BcLXzKWQpnj5NoXYd\",\"DEDniTrstQYGounXT\",\"yr822PZmmiDDenxpB\",\"afvP29FhRou2bTaav\",\"KMR6vNzvSKMA2cXnK\",\"RsujLHaML6L3KinzK\",\"NioGGZL9KCn5Ln96t\",\"ckQwFFWyLXmDQAaCn\",\"5LDvZHCDJqePeBrCg\",\"unqzSsxpxj9sZ7rbD\",\"9du58gNDkWQEWivbB\",\"F8dA24AosSC8XXb7D\",\"6kB5qypxcm62PHsEJ\",\"Phbde4TpadcFDWtgN\",\"eXQziXGcpwekMyABQ\",\"nFbmNzMQ38TncmfQX\",\"x2Cz7S8rCKJqCE3Xe\"],\"quality\":[5,5,5,5,3,5,5,5,5,5,5,5,5,5,3,5,5,5,5,5,5,4,5,5,5,4,5,5,5,5,5,5,5,4,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"isHidden\":false,\"quality\":4.8,\"isFree\":false,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"vzwwjNAYgEeLG2inD\",\"language\":\"cpp\"},{\"_id\":\"ynZfn2LifKN25fP84\",\"language\":\"csharp\"},{\"_id\":\"Hu3HxFH3Gnv2CwCeH\",\"language\":\"java\"},{\"_id\":\"c23dFfNiKbnguSQtq\",\"language\":\"javascript\"},{\"_id\":\"ZaEFRDBZ7ZMTiSEce\",\"language\":\"python3\"},{\"_id\":\"xRLGurN85GHvbYoBr\",\"language\":\"ruby\"}]}}"]