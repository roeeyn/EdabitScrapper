a["{\"msg\":\"result\",\"id\":\"457\",\"result\":{\"_id\":\"Wr5YbkQakb6qh8Gax\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n\\tpublic static int letterDistance(String str1, String str2) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":1.6428571428571428,\"familyId\":\"u7FZxq2M57yyELkA7\",\"instructions\":\"Given two words, the **letter distance** is calculated by taking the absolute value of the difference in character codes and summing up the difference.\\n\\nIf one word is longer than another, add the difference in lengths towards the score.\\n\\nTo illustrate:\\n\\n```\\nletterDistance(\\\"house\\\", \\\"fly\\\") = dist(\\\"h\\\", \\\"f\\\") + dist(\\\"o\\\", \\\"l\\\") + dist(\\\"u\\\", \\\"y\\\") + dist(house.length, fly.length)\\n\\n= |104 - 102| + |111 - 108| + |117 - 121| + |5 - 3|\\n= 2 + 3 + 4 + 2\\n= 11\\n```\\n\\n### Examples\\n```\\nletterDistance(\\\"sharp\\\", \\\"sharq\\\") ➞ 1\\n\\nletterDistance(\\\"abcde\\\", \\\"Abcde\\\") ➞ 32\\n\\nletterDistance(\\\"abcde\\\", \\\"bcdef\\\") ➞ 5\\n```\\n\\n### Notes\\n- Always start comparing the two strings from their first letter.\\n- Excess letters are not counted towards distance.\\n- Capital letters are included.\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(11, Challenge.letterDistance(\\\"house\\\", \\\"fly\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(1, Challenge.letterDistance(\\\"sharp\\\", \\\"sharq\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(5, Challenge.letterDistance(\\\"abcde\\\", \\\"bcdef\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(4, Challenge.letterDistance(\\\"abcde\\\", \\\"a\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(8, Challenge.letterDistance(\\\"abcde\\\", \\\"e\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(32, Challenge.letterDistance(\\\"abcde\\\", \\\"Abcde\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(36, Challenge.letterDistance(\\\"abcde\\\", \\\"A\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n    assertEquals(67, Challenge.letterDistance(\\\"very\\\", \\\"fragile\\\"));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"Given two words, the letter distance is calculated by taking the absolute value of the difference in character codes and summing up the difference.\\n\\nIf one word is longer than another, add the difference in lengths towards the score.\\n\\nTo illustrate:\\n\\nletterDistance(\\\"house\\\", \\\"fly\\\") = dist(\\\"h\\\", \\\"f\\\") + dist(\\\"o\\\", \\\"l\\\") + dist(\\\"u\\\", \\\"y\\\") + dist(house.length, fly.leng\",\"tags\":[\"strings\",\"loops\"],\"timestamp\":{\"$date\":1568489981865},\"title\":\"Letter Distance\",\"stats\":{\"completed\":{\"total\":90,\"ratings\":[2,2,2,2,2,2,2,1,1,2,3,3,3,1,3,2,2,1,0,1,2,3,2,0,3,3,2,2,3,0,3,3,0,1,2,0,2,3,2,1,0,1,0,2,2,2,0,2,1,2,0,1,1,2,0,1,2,2,2,2,0,1,1,2,2,1,1,2,2,3,1,2,1,2,2,2,1,2,2,2,2,1,2,2],\"rators\":[\"3pdgguqZgNDSAJSGm\",\"Lkoo57Q2GJXjBnyMR\",\"sxci7DYKNa6q22Sjq\",\"WchA4bbn7Kjauvosp\",\"b6FsghMrEP6CuAPX4\",\"9qjYEXN6rW6CXr9u3\",\"gF93kzKNiqpKjsRsQ\",\"YF79LnTdprobbYY5v\",\"t2kdBPj9qQAXY2Ehd\",\"zbQp6JhznkqyyLJTZ\",\"5RmeMX9HfLQeA5iLG\",\"eXW8reZCCZHQzJjQi\",\"NCB3RaRBonefnHBJD\",\"8J2Dqqz9PaFufQzwY\",\"W4jpCs2jekeg5qAwc\",\"nYSebjpPsiBXiho7y\",\"o2F4ykzNB5etBnuY9\",\"CYt2jTCEuK9dYWruk\",\"XbBsZ7vSHdw88tibi\",\"qJZsi5rhRnWA38FbA\",\"qRhXvCaA7qgDoeFnr\",\"2NJuDfSqdrF8kHHni\",\"CLmJduqJHX83dM4Pd\",\"Y4s5LuGr288y4QrN8\",\"yazNfwgLx7jSAZ8Tv\",\"kSK8CxBknnMZJCHzz\",\"AQTXw9h7upAhjwz3L\",\"rehehi2Tr2mwaEoJE\",\"fxaS5K7ZXo4FbTe36\",\"r9hHZYPQAqJ9DbwLX\",\"oDZaopxpPAdqWXLqz\",\"wtYNfAfra3q5bcfM2\",\"XA2QfKNqbWYPcvoCH\",\"SGhPxX5bHGL8zZqtt\",\"YLwJkF2wuL3n9o6a2\",\"gtk73irY4QdFpS2v9\",\"QPSwhNevikT7q8mz8\",\"J9zJq7PMGb6mqzcHW\",\"Es4eX2stRpyoXeC7f\",\"4RHx3H8EwP2oboW8e\",\"XPDqgbh7XuX7Yfpuq\",\"vRXuYYBNuHEQ29fbm\",\"hB5mgzMwQSnhBzi7P\",\"82weQfHHmno4Mq4X7\",\"Kso7rzAKB4TTCPKgM\",\"fZjkX29nhRTWWb75k\",\"jyoLggHk8xQKZuoQC\",\"5seiNqw6ZXoF2GRRd\",\"TrquEHytntLKHA4m2\",\"WZujpe8yQAyZmpWHg\",\"etoSR23iELGGgs9rA\",\"htXCitorobtqYymjN\",\"mfm3gB39arY8Rjb2y\",\"y6kfyYmydcD8tkBk7\",\"DzvdGwHEjqsX7wyKr\",\"g4NCSxxHqHCGMpWwT\",\"jRqY4i8gPemsZMBGf\",\"Yom3RzkMYpweE8cbS\",\"yXGiiSAR5nBHnH3yr\",\"gXTAie79kiw28tx5u\",\"8qtXF58mQryPRwvJC\",\"jb9RLyyuo565bKDzN\",\"8Xx8nWXRydHDBGfQf\",\"jXTnL3JatkKjoifyb\",\"mQKWauR6b252TmdX4\",\"7iF6656DqFsKnDzpP\",\"QTJvghkPpGKnKvZ5R\",\"a49eNnfRwSMxsDJXf\",\"bur3yQ8s34zqKGEro\",\"DkSMZ3jZLkwviKb9g\",\"buX4mCQhtXCfBjeno\",\"4ySzqKC5s3ZRpG9di\",\"wXhexS9kbNouykipc\",\"rhS8qXRjZcpDXkwnE\",\"KMR6vNzvSKMA2cXnK\",\"rWhXHhzF4W8bea6LP\",\"wFRLGjA56kj7xyhmv\",\"unqzSsxpxj9sZ7rbD\",\"FxPDKKibxnZjGJLs6\",\"23gxHrrXiriKXnggo\",\"uw47663LqPME8btaA\"],\"quality\":[5,4]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"isHidden\":false,\"quality\":4.5,\"family\":[{\"_id\":\"5Xo5fBrQui9opFWH5\",\"language\":\"cpp\"},{\"_id\":\"X6zTfuS9eZ4Ft6GLm\",\"language\":\"csharp\"},{\"_id\":\"Wr5YbkQakb6qh8Gax\",\"language\":\"java\"},{\"_id\":\"SgmaKy8e8X7ibaGYM\",\"language\":\"javascript\"},{\"_id\":\"XsqET8hSTBG2AR5kM\",\"language\":\"python3\"},{\"_id\":\"dqYajYDEh48TCjBrv\",\"language\":\"ruby\"},{\"_id\":\"pghEMhBC5B5wPs5mQ\",\"language\":\"swift\"}]}}"]