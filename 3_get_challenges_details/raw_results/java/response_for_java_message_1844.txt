a["{\"msg\":\"result\",\"id\":\"479\",\"result\":{\"_id\":\"D33ry6zNZzRyuQRPF\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class Times {\\n\\tpublic static String hoursPassed(String t1, String t2) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.7058823529411764,\"familyId\":\"QeM9NibxG888hLgZf\",\"instructions\":\"Write a function that takes time `t1` and time `t2` and returns the numbers of hours passed between the two times.\\n\\n### Examples\\n```\\nhoursPassed(\\\"3:00 AM\\\", \\\"9:00 AM\\\") ➞ \\\"6 hours\\\"\\n\\nhoursPassed(\\\"2:00 PM\\\", \\\"4:00 PM\\\") ➞ \\\"2 hours\\\"\\n\\nhoursPassed(\\\"1:00 AM\\\", \\\"3:00 PM\\\") ➞ \\\"14 hours\\\"\\n```\\n\\n### Notes\\n- Time `t1` will always be the starting time and `t2`, the ending time. \\n- Return the string `\\\"No time has passed.\\\"` if `t1` is equal to `t2`.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"import static org.junit.Assert.assertEquals;\\nimport org.junit.Test;\\n\\npublic class TimesTests {\\n\\tprivate String[][] strVector = new String[][] {\\n\\t\\t{\\\"3:00 AM\\\", \\\"9:00 AM\\\"}, {\\\"2:00 PM\\\", \\\"4:00 PM\\\"}, {\\\"1:00 AM\\\", \\\"3:00 PM\\\"}, {\\\"2:00 AM\\\", \\\"3:00 PM\\\"},\\n\\t\\t{\\\"8:00 AM\\\", \\\"8:00 PM\\\"}, {\\\"12:00 AM\\\", \\\"10:00 PM\\\"}, {\\\"1:00 AM\\\", \\\"1:00 AM\\\"}, {\\\"12:00 PM\\\", \\\"12:00 PM\\\"}\\n\\t};\\n\\tprivate String[] resVector = new String[] {\\n\\t\\t\\\"6 hours\\\", \\\"2 hours\\\", \\\"14 hours\\\", \\\"13 hours\\\", \\\"12 hours\\\", \\\"22 hours\\\", \\\"No time has passed.\\\", \\\"No time has passed.\\\"\\n\\t};\\n\\t\\n\\t@Test\\n\\tpublic void test01() {\\n\\t\\tassertEquals(Times.hoursPassed(strVector[0][0], strVector[0][1]), resVector[0]);\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() {\\n\\t\\tassertEquals(Times.hoursPassed(strVector[1][0], strVector[1][1]), resVector[1]);\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() {\\n\\t\\tassertEquals(Times.hoursPassed(strVector[2][0], strVector[2][1]), resVector[2]);\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() {\\n\\t\\tassertEquals(Times.hoursPassed(strVector[3][0], strVector[3][1]), resVector[3]);\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() {\\n\\t\\tassertEquals(Times.hoursPassed(strVector[4][0], strVector[4][1]), resVector[4]);\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() {\\n\\t\\tassertEquals(Times.hoursPassed(strVector[5][0], strVector[5][1]), resVector[5]);\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() {\\n\\t\\tassertEquals(Times.hoursPassed(strVector[6][0], strVector[6][1]), resVector[6]);\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() {\\n\\t\\tassertEquals(Times.hoursPassed(strVector[7][0], strVector[7][1]), resVector[7]);\\n\\t}\\n}\",\"language\":\"java\",\"quality\":0,\"summary\":\"Write a function that takes time t1 and time t2 and returns the numbers of hours passed between the two times.\\n\\nExamples\\nhoursPassed(\\\"3:00 AM\\\", \\\"9:00 AM\\\") ➞ \\\"6 hours\\\"\\n\\nhoursPassed(\\\"2:00 PM\\\", \\\"4:00 PM\\\") ➞ \\\"2 hours\\\"\\n\\nhoursPassed(\\\"1:00 AM\\\", \\\"3:00 PM\\\") ➞ \\\"14 hours\\\"\\n\\nNotes\\nTime t1 will always be the starting time and t2, the ending time.\\nReturn the string \\\"No time\",\"tags\":[\"strings\",\"dates\"],\"timestamp\":{\"$date\":1603224901287},\"title\":\"Hours Passed\",\"stats\":{\"completed\":{\"total\":29,\"ratings\":[1,1,1,1,1,1,3,2,2,1,2,1,2,2,3,2,2,2,2,3,2,1,2,0,3,2,2,2,2,1,1,2,1,2],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"C9yBWYcZsjmJYww3K\",\"Es4eX2stRpyoXeC7f\",\"TrquEHytntLKHA4m2\",\"etoSR23iELGGgs9rA\",\"yd5PakB2z33q2JrTZ\",\"AeJSxRqw2dJZuGvdk\",\"jb9RLyyuo565bKDzN\",\"azAzSkvJd7eyXY9x9\",\"DzvdGwHEjqsX7wyKr\",\"FTHXj9Rfx9wdujSzy\",\"jyoLggHk8xQKZuoQC\",\"jXTnL3JatkKjoifyb\",\"gXTAie79kiw28tx5u\",\"mDWNyaaQ9hvPCRzSd\",\"qaPjAANdnxFnWfj5d\",\"a49eNnfRwSMxsDJXf\",\"srJ34BaybkQh3qRkM\",\"vRXuYYBNuHEQ29fbm\",\"htXCitorobtqYymjN\",\"wFRLGjA56kj7xyhmv\",\"sxci7DYKNa6q22Sjq\",\"KMR6vNzvSKMA2cXnK\",\"unqzSsxpxj9sZ7rbD\",\"PJu3WcTpfRrvHfQiS\",\"FxPDKKibxnZjGJLs6\",\"rWhXHhzF4W8bea6LP\",\"uw47663LqPME8btaA\",\"wMY6G2GLpcTJCe74o\"]},\"flags\":0},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"mujPkjKZL6b7yfykp\",\"language\":\"cpp\"},{\"_id\":\"D33ry6zNZzRyuQRPF\",\"language\":\"java\"},{\"_id\":\"6dp2xWaQbN9KuKp8P\",\"language\":\"javascript\"},{\"_id\":\"cgyHTJDW5brpXGDy6\",\"language\":\"python3\"},{\"_id\":\"vPSX4YK3NxLJPqcFx\",\"language\":\"ruby\"}]}}"]