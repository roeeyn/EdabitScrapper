a["{\"msg\":\"result\",\"id\":\"563\",\"result\":{\"_id\":\"Tzwb5uASZbKuESHhJ\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class Extremities {\\n  public static int[][] pairs(int[] arr) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":2.1470588235294117,\"familyId\":\"FzNgWsFwCEopaooy3\",\"instructions\":\"Write a function that pairs the first number in an array with the last, the second number with the second to last, etc.\\n\\n### Examples\\n```\\npairs([1, 1, 1, 1, 7, 2, 3, 2]) ➞ [[1, 2], [1, 3], [1, 2], [1, 7]]\\n\\npairs([5, 4, 4, 6, 6, 6, 4]) ➞ [[5, 4], [4, 6], [4, 6], [6, 6]]\\n\\npairs([1, 2, 3, 4, 5, 6, 7]) ➞ [[1, 7], [2, 6], [3, 5], [4, 4]]\\n\\npairs([1, 2, 3, 4, 5, 6]) ➞ [[1, 6], [2, 5], [3, 4]]\\n\\npairs([5, 9, 8, 1, 2]) ➞ [[5, 2], [9, 1], [8, 8]]\\n\\npairs([]) ➞ []\\n```\\n\\n### Notes\\n- If the array has an **odd length**, repeat the middle element twice for the last pair.\\n- Return an empty array if the input is an empty array.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"/** \\n================================= \\nTestGen 3.1 for JUnit 4.13.0 \\t\\t\\nTest Case: Extremities::pairs \\nTimestamp: 12/11/2020 01:08:16 AM \\n--------------------------------- \\n® DARKKO 2020 © \\n================================= \\n\\n**/ \\n\\nimport static org.junit.Assert.assertArrayEquals; \\nimport org.junit.Test; \\n\\npublic class ExtremitiesTest { \\n\\t\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertArrayEquals(new int[][] {{1, 2}, {1, 3}, {1, 2}, {1, 7}}, Extremities.pairs(new int[] {1, 1, 1, 1, 7, 2, 3, 2}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertArrayEquals(new int[][] {{5, 4}, {4, 6}, {4, 6}, {6, 6}}, Extremities.pairs(new int[] {5, 4, 4, 6, 6, 6, 4}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertArrayEquals(new int[][] {{1, 7}, {2, 6}, {3, 5}, {4, 4}}, Extremities.pairs(new int[] {1, 2, 3, 4, 5, 6, 7}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertArrayEquals(new int[][] {{1, 6}, {2, 5}, {3, 4}}, Extremities.pairs(new int[] {1, 2, 3, 4, 5, 6}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertArrayEquals(new int[][] {{5, 2}, {9, 1}, {8, 8}}, Extremities.pairs(new int[] {5, 9, 8, 1, 2}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertArrayEquals(new int[][] {{5, 7}, {6, 6}}, Extremities.pairs(new int[] {5, 6, 7}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertArrayEquals(new int[][] {{1, 5}, {1, 5}, {4, 4}}, Extremities.pairs(new int[] {1, 1, 4, 4, 5, 5}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertArrayEquals(new int[][] {{9, 9}, {9, 3}, {9, 3}, {9, 9}}, Extremities.pairs(new int[] {9, 9, 9, 9, 3, 3, 9}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test09() { \\n\\t\\tassertArrayEquals(new int[][] {{5, 6}}, Extremities.pairs(new int[] {5, 6}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test10() { \\n\\t\\tassertArrayEquals(new int[][] {{5, 5}}, Extremities.pairs(new int[] {5}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test11() { \\n\\t\\tassertArrayEquals(new int[][] {}, Extremities.pairs(new int[] {}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test12() { \\n\\t\\tassertArrayEquals(new int[][] {{1, 6}, {9, 7}, {8, 8}}, Extremities.pairs(new int[] {1, 9, 8, 7, 6}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test13() { \\n\\t\\tassertArrayEquals(new int[][] {{5, 3}, {2, 1}, {4, 9}}, Extremities.pairs(new int[] {5, 2, 4, 9, 1, 3}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test14() { \\n\\t\\tassertArrayEquals(new int[][] {{9, 1}, {5, 7}, {6, 8}}, Extremities.pairs(new int[] {9, 5, 6, 8, 7, 1}));\\n\\t}\\n\\n}\\n// end of tests\",\"language\":\"java\",\"quality\":0,\"summary\":\"Write a function that pairs the first number in an array with the last, the second number with the second to last, etc.\\n\\nExamples\\npairs([1, 1, 1, 1, 7, 2, 3, 2]) ➞ [[1, 2], [1, 3], [1, 2], [1, 7]]\\n\\npairs([5, 4, 4, 6, 6, 6, 4]) ➞ [[5, 4], [4, 6], [4, 6], [6, 6]]\\n\\npairs([1, 2, 3, 4, 5, 6, 7]) ➞ [[1, 7], [2, 6], [3, 5], [4, 4]]\\n\\npairs([1, 2, 3, 4, 5, 6]) ➞ [[1, 6\",\"tags\":[\"arrays\",\"loops\"],\"timestamp\":{\"$date\":1607620376759},\"title\":\"Beginning And End Pairs\",\"stats\":{\"completed\":{\"total\":30,\"ratings\":[2,2,2,2,2,3,3,3,2,0,3,1,3,0,1,3,2,3,3,3,2,2,1,2,1,2,2,2,3,2,3,3,3,2],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"azAzSkvJd7eyXY9x9\",\"gXTAie79kiw28tx5u\",\"Yx9tWxJaqHnzGC83X\",\"jyoLggHk8xQKZuoQC\",\"LNCb5rksJLJ43L4Nw\",\"buX4mCQhtXCfBjeno\",\"GaJNJwcdyB9ueYFst\",\"KgrtpAQRXCBDhpiSJ\",\"HsFc9PgmpP2X9Fwh9\",\"jyeZPhmfLtysXHswN\",\"zZfMwLuoERGmybgib\",\"qx6yvahdH8aw4Jnm7\",\"qaPjAANdnxFnWfj5d\",\"mfm3gB39arY8Rjb2y\",\"rhS8qXRjZcpDXkwnE\",\"CggGfsERnPKGupFWp\",\"jCjCvyhqhpebkJn34\",\"a49eNnfRwSMxsDJXf\",\"htXCitorobtqYymjN\",\"6waJRR7JPunYF8DhS\",\"wFRLGjA56kj7xyhmv\",\"9vyjn4WyWtJ6o2wop\",\"sxci7DYKNa6q22Sjq\",\"mcoHczCqRrNEX7Xih\",\"KMR6vNzvSKMA2cXnK\",\"rWhXHhzF4W8bea6LP\",\"uw47663LqPME8btaA\"]},\"flags\":0},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"K22SRDn3HmoWcp63B\",\"language\":\"cpp\"},{\"_id\":\"Tzwb5uASZbKuESHhJ\",\"language\":\"java\"},{\"_id\":\"yoRh3uocRGRYgmqHJ\",\"language\":\"javascript\"},{\"_id\":\"HZfbCv7QtL5JGYELe\",\"language\":\"php\"},{\"_id\":\"HrCuzAKE6skEYgDmf\",\"language\":\"python3\"},{\"_id\":\"Q2KcJoBBn3NNYj4Mi\",\"language\":\"ruby\"}]}}"]