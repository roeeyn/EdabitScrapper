a["{\"msg\":\"result\",\"id\":\"384\",\"result\":{\"_id\":\"tvaT25krB65pYtghq\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class LetterAverage {\\n  public static double averageIndex(String[] arr) {\\n\\t\\t\\n  }\\n}\\t\",\"difficulty\":1.5106382978723405,\"familyId\":\"naNHs6eTZs5G9oyMD\",\"instructions\":\"Create a function that returns the average of an array composed of letters. First, find the number of the letter in the alphabet in order to find the average of the array.\\n\\n```\\nA = 1\\nB = 2\\nC = 3\\nD = 4\\nE = 5\\n```\\n\\n```\\naverage = total sum of all numbers / number of item in the set\\n```\\n\\nReturn the result rounded to two decimal points.\\n\\n### Examples\\n```\\naverageIndex([\\\"f\\\", \\\"o\\\", \\\"r\\\", \\\"t\\\", \\\"h\\\", \\\"e\\\", \\\"l\\\", \\\"o\\\", \\\"v\\\", \\\"e\\\", \\\"o\\\", \\\"f\\\", \\\"t\\\", \\\"e\\\", \\\"s\\\", \\\"h\\\"]) ➞ 12.44\\n\\naverageIndex([\\\"m\\\", \\\"y\\\", \\\"t\\\", \\\"e\\\", \\\"s\\\", \\\"h\\\"]) ➞ 15.0\\n\\naverageIndex([\\\"m\\\", \\\"y\\\", \\\"w\\\", \\\"o\\\", \\\"r\\\", \\\"l\\\", \\\"d\\\"]) ➞ 15.71\\n\\naverageIndex([\\\"y\\\", \\\"o\\\", \\\"u\\\", \\\"a\\\", \\\"r\\\", \\\"e\\\", \\\"t\\\", \\\"h\\\", \\\"e\\\", \\\"b\\\", \\\"e\\\", \\\"s\\\", \\\"t\\\"]) ➞ 12.62\\n```\\n\\n### Notes\\nLetters given will always be lowercase.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"import static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class LetterAverageTest {\\n\\t@Test\\n\\tpublic void test1() { \\n\\t\\tassertEquals(12.44, LetterAverage.averageIndex(new String[] {\\\"f\\\", \\\"o\\\", \\\"r\\\", \\\"t\\\", \\\"h\\\", \\\"e\\\", \\\"l\\\", \\\"o\\\", \\\"v\\\", \\\"e\\\", \\\"o\\\", \\\"f\\\", \\\"t\\\", \\\"e\\\", \\\"s\\\", \\\"h\\\"}), 6);\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test2() { \\n\\t\\tassertEquals(15, LetterAverage.averageIndex(new String[] {\\\"m\\\", \\\"y\\\", \\\"t\\\", \\\"e\\\", \\\"s\\\", \\\"h\\\"}), 6);\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test3() { \\n\\t\\tassertEquals(15.71, LetterAverage.averageIndex(new String[] {\\\"m\\\", \\\"y\\\", \\\"w\\\", \\\"o\\\", \\\"r\\\", \\\"l\\\", \\\"d\\\"}), 6);\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test4() { \\n\\t\\tassertEquals(3.75, LetterAverage.averageIndex(new String[] {\\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"i\\\"}), 6);\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test5() { \\n\\t\\tassertEquals(6.83, LetterAverage.averageIndex(new String[] {\\\"e\\\", \\\"d\\\", \\\"a\\\", \\\"b\\\", \\\"i\\\", \\\"t\\\"}), 6);\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test6() { \\n\\t\\tassertEquals(11.67, LetterAverage.averageIndex(new String[] {\\\"o\\\", \\\"m\\\", \\\"g\\\"}), 6);\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test7() { \\n\\t\\tassertEquals(13, LetterAverage.averageIndex(new String[] {\\\"o\\\", \\\"h\\\", \\\"n\\\", \\\"o\\\"}), 6);\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test8() { \\n\\t\\tassertEquals(17.83, LetterAverage.averageIndex(new String[] {\\\"t\\\", \\\"w\\\", \\\"e\\\", \\\"n\\\", \\\"t\\\", \\\"y\\\", \\\"t\\\", \\\"w\\\", \\\"e\\\", \\\"n\\\", \\\"t\\\", \\\"y\\\"}), 6);\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test9() { \\n\\t\\tassertEquals(12.62, LetterAverage.averageIndex(new String[] {\\\"y\\\", \\\"o\\\", \\\"u\\\", \\\"a\\\", \\\"r\\\", \\\"e\\\", \\\"t\\\", \\\"h\\\", \\\"e\\\", \\\"b\\\", \\\"e\\\", \\\"s\\\", \\\"t\\\"}), 6);\\n\\t}\\n}\",\"language\":\"java\",\"quality\":4,\"summary\":\"Create a function that returns the average of an array composed of letters. First, find the number of the letter in the alphabet in order to find the average of the array.\\n\\nA = 1\\nB = 2\\nC = 3\\nD = 4\\nE = 5\\n\\naverage = total sum of all numbers / number of item in the set\\n\\nReturn the result rounded to two decimal points.\\n\\nExamples\\naverageIndex([\\\"f\\\", \\\"o\\\", \\\"r\\\", \\\"t\\\", \\\"\",\"tags\":[\"arrays\",\"loops\",\"math\"],\"timestamp\":{\"$date\":1611464770906},\"title\":\"Find the Average of the Letters \ud83d\udcca\",\"stats\":{\"completed\":{\"total\":97,\"ratings\":[1,1,1,1,1,0,2,1,3,2,2,0,0,3,2,1,1,3,2,2,2,1,1,1,0,0,2,3,2,0,2,1,3,2,2,3,2,2,2,2,1,2,1,0,1,1,2,1,2,0,2,2,2,2,0,0,1,2,1,2,2,0,2,0,1,0,1,2,2,0,2,2,2,2,2,2,2,2,1,1,2,2,2,2,2,2,2,2,2,2,1,1,3,2],\"quality\":[4,3,4,5],\"rators\":[\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"LCuvvWMwiGuqTwNRi\",\"ZSFeffCQa4w327kPY\",\"Wi4H6ayKsNDWWQCG5\",\"RgDdJYqxMqBcQ7vGC\",\"pi76g3eRpnKrhee2a\",\"AeJSxRqw2dJZuGvdk\",\"C9yBWYcZsjmJYww3K\",\"XbkPkuaJRZTBYj9uN\",\"DbGqnKakhW4EJnLM5\",\"KDgErX6M764e8Pgbt\",\"yzpq4encC7jY2ZGv9\",\"gXTAie79kiw28tx5u\",\"zHSbLcbw8Z8WcFaba\",\"RGN3QTb5LXj4ZPPkj\",\"qaPjAANdnxFnWfj5d\",\"82weQfHHmno4Mq4X7\",\"a49eNnfRwSMxsDJXf\",\"vRXuYYBNuHEQ29fbm\",\"etoSR23iELGGgs9rA\",\"E8L6AFJSNuEPhs4qq\",\"HPkqYgjNtESED9Z88\",\"p8qqFdJ3FSk5x9z3G\",\"gBGjCfJvPHswDM5JQ\",\"RmFaEddcQhYYiwaNr\",\"jDwhb7L6hf7CiGmds\",\"H3errpSWnQ38kpNqs\",\"7hArNpzvuL3HCfZya\",\"rPYYRMqhAoADHNetw\",\"YLwJkF2wuL3n9o6a2\",\"GkYtSbQuheBF4Enys\",\"mG8HqKiAQFTdRZthG\",\"bur3yQ8s34zqKGEro\",\"buX4mCQhtXCfBjeno\",\"Ag5fRrZ9MrAZc9vpj\",\"DkSMZ3jZLkwviKb9g\",\"jyoLggHk8xQKZuoQC\",\"zZfMwLuoERGmybgib\",\"sxci7DYKNa6q22Sjq\",\"rhS8qXRjZcpDXkwnE\",\"mfm3gB39arY8Rjb2y\",\"Yohr2MmAyaWGMbB35\",\"wFRLGjA56kj7xyhmv\",\"hhxjQREtmHSheH9Pj\",\"HsFc9PgmpP2X9Fwh9\",\"G4bm9KybYK5avPyaq\",\"JFodQijHHdRkkrZvT\",\"xEX3TDY6C2h82dJTn\",\"srJ34BaybkQh3qRkM\",\"htXCitorobtqYymjN\",\"vGZdntJ2SjrkFfPkM\",\"Wg3AxAXHwnWmByxeb\",\"J9zJq7PMGb6mqzcHW\",\"jCjCvyhqhpebkJn34\",\"RsujLHaML6L3KinzK\",\"WNAstuoBy6yyd2YLp\",\"E6r2kaBT45TfvfN7y\",\"PJu3WcTpfRrvHfQiS\",\"h2SBrR4pTkki94kC2\",\"J7epB3qSQJ2E8vWkY\",\"gSrqu8MsZMFSxxWAZ\",\"cR3ibTMxLyEdDFCHY\",\"3ES4qyewSQiFz8Wm7\",\"B4pxRqzo43M7S8FbP\",\"wTc283wowqsFisKNC\",\"pE96BvByNhAAEupM5\",\"mmHR9EazNjJ3cCnxK\",\"rEkuPnv5nXq6PQLMH\",\"ZDqPHY2Lr9Zjd34Y7\",\"9vyjn4WyWtJ6o2wop\",\"ociS5FqneHvsDvgNu\",\"2jM9aGNuupgPiPXWH\",\"XhXY36h3dNiHNEj67\",\"6wSDRXXLqLh6KYSy6\",\"oNkSFeDPhG9SnspiK\",\"PPdaczxSt2u5cmZYG\",\"XkNS8KEhsJGBALGLW\",\"yr822PZmmiDDenxpB\",\"mTF6oWX2WhFR4M3QK\",\"563onSvqgjToY79ah\",\"rWhXHhzF4W8bea6LP\",\"2NJZbusRvu3eJ4tHu\",\"KMR6vNzvSKMA2cXnK\",\"xW9nC9h6p77YT2iso\",\"znjRoRZ6twJvtdHmB\",\"GRSgodNrGhekHtCun\",\"unqzSsxpxj9sZ7rbD\",\"mgXbnxqifQCZmyd6f\",\"FxPDKKibxnZjGJLs6\",\"uw47663LqPME8btaA\",\"XH6378Zm3WBm679yx\",\"nFbmNzMQ38TncmfQX\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"tvaT25krB65pYtghq\",\"language\":\"java\"},{\"_id\":\"xn3DTHgvGspvQxmRQ\",\"language\":\"javascript\"},{\"_id\":\"SAkcjY9j27mZgf3GP\",\"language\":\"php\"},{\"_id\":\"X4i7hHGhKYbGkcHx6\",\"language\":\"python3\"},{\"_id\":\"HDwDZo2nwcHD8BRf2\",\"language\":\"ruby\"}]}}"]