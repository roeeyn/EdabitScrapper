a["{\"msg\":\"result\",\"id\":\"609\",\"result\":{\"_id\":\"akLRnxrtrAsnyYuZb\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class ReversibleListRanges {\\n  public static int[] reversibleInclusiveList(int start,int end) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":2.230769230769231,\"familyId\":\"ybYMEamrx7BAuSwpL\",\"instructions\":\"Write a function that, given the `start` and `end` values, returns an array containing all the numbers **inclusive** to that range. See examples below.\\n\\n\\n### Examples\\n```\\nreversibleInclusiveList(1, 5) ➞ [1, 2, 3, 4, 5]\\n\\nreversibleInclusiveList(2, 8) ➞ [2, 3, 4, 5, 6, 7, 8]\\n\\nreversibleInclusiveList(10, 20) ➞[10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\\n\\nreversibleInclusiveList(24, 17) ➞[24, 23, 22, 21, 20, 19, 18, 17]\\n```\\n\\n\\n### Notes\\n- The sort order of the resulting array is dependent of the input values.\\n- All inputs provided in the test scenarios are valid.\\n- If `start` is greater than `end`, return a **descendingly** sorted array, otherwise, **ascendingly** sorted.\\n- A recursive version of this challenge can be found in [here](https://edabit.com/challenge/LKTiopxKdDRARMvri).\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"/** \\n======================================================== \\nTestGen 2.3 for JUnit 4.13.0 \\t\\t\\nTest Case: ReversibleListRanges::reversibleInclusiveList \\nTimestamp: 11/8/2020 6:21:09 AM\\n-------------------------------------------------------- \\n® DARKKO 2020 © \\n========================================================\\n**/ \\n\\nimport static org.junit.Assert.assertArrayEquals; \\nimport org.junit.Test; \\n\\npublic class ReversibleListRangesTest {\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertArrayEquals(new int[] {5, 4, 3, 2, 1}, ReversibleListRanges.reversibleInclusiveList(5, 1));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertArrayEquals(new int[] {6, 5, 4, 3, 2}, ReversibleListRanges.reversibleInclusiveList(6, 2));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertArrayEquals(new int[] {10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20}, ReversibleListRanges.reversibleInclusiveList(10, 20));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertArrayEquals(new int[] {24, 23, 22, 21, 20, 19, 18, 17}, ReversibleListRanges.reversibleInclusiveList(24, 17));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertArrayEquals(new int[] {40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50}, ReversibleListRanges.reversibleInclusiveList(40, 50));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertArrayEquals(new int[] {51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41}, ReversibleListRanges.reversibleInclusiveList(51, 41));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertArrayEquals(new int[] {11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66}, ReversibleListRanges.reversibleInclusiveList(11, 66));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertArrayEquals(new int[] {9, 8, 7, 6, 5, 4, 3}, ReversibleListRanges.reversibleInclusiveList(9, 3));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test09() { \\n\\t\\tassertArrayEquals(new int[] {6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16}, ReversibleListRanges.reversibleInclusiveList(6, 16));\\n\\t}\\n}\",\"language\":\"java\",\"quality\":0,\"summary\":\"Write a function that, given the start and end values, returns an array containing all the numbers inclusive to that range. See examples below.\\n\\nExamples\\nreversibleInclusiveList(1, 5) ➞ [1, 2, 3, 4, 5]\\n\\nreversibleInclusiveList(2, 8) ➞ [2, 3, 4, 5, 6, 7, 8]\\n\\nreversibleInclusiveList(10, 20) ➞[10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\\n\\nreversibleInclusiveList(2\",\"tags\":[\"math\",\"numbers\",\"scope\",\"loops\"],\"timestamp\":{\"$date\":1604917171229},\"title\":\"Reversible Inclusive List Ranges\",\"stats\":{\"completed\":{\"total\":22,\"ratings\":[2,2,2,2,2,2,4,2,3,2,3,2,2,3,3,2,2,2,1,3,0,2,1,3,3,3],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"gXTAie79kiw28tx5u\",\"azAzSkvJd7eyXY9x9\",\"mkA6Hh3DPvdkP36kG\",\"Nb6LYPoQP6KJZt8mz\",\"jm4tNFjsgYKW5TZfp\",\"jyoLggHk8xQKZuoQC\",\"buX4mCQhtXCfBjeno\",\"BPeLYkcXdyaum3owN\",\"R5un6859a2YfHM5sR\",\"rhS8qXRjZcpDXkwnE\",\"wFRLGjA56kj7xyhmv\",\"xEX3TDY6C2h82dJTn\",\"qaPjAANdnxFnWfj5d\",\"vRXuYYBNuHEQ29fbm\",\"2NJZbusRvu3eJ4tHu\",\"sxci7DYKNa6q22Sjq\",\"KMR6vNzvSKMA2cXnK\",\"htXCitorobtqYymjN\",\"rWhXHhzF4W8bea6LP\"]},\"flags\":0},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"akLRnxrtrAsnyYuZb\",\"language\":\"java\"},{\"_id\":\"2HZ8DqCaZxLHN6cP6\",\"language\":\"javascript\"},{\"_id\":\"zW9JME7XNew4tgCCE\",\"language\":\"python3\"}]}}"]