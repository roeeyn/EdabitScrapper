a["{\"msg\":\"result\",\"id\":\"793\",\"result\":{\"_id\":\"r2gd399TcG56Bvim5\",\"author\":\"Brendan Campbell-hartzell\",\"authorId\":\"xmMqX6Dkh7yxb7ycH\",\"code\":\"public class BishopChallenge {\\n\\tpublic static boolean bishop(String start, String end, int n)\\t{\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":3.466666666666667,\"familyId\":\"bgnsYYgY4tFb5e5qi\",\"instructions\":\"Your chess teacher wants to know if a bishop can reach a certain spot on the board in the given amount of moves.\\n\\nGiven a starting square `start`, ending square `end` and the maximum number of moves allowed `n`. Return `true` if the ending square can be reached from the starting square within the given amount of moves. Keep in mind the chessboard goes from a1 to h8 (8x8).\\n\\n### Examples\\n```\\nbishop(\\\"a1\\\", \\\"b4\\\", 2) ➞ true\\n\\nbishop(\\\"a1\\\", \\\"b5\\\", 5) ➞ false\\n\\nbishop(\\\"f1\\\", \\\"f1\\\", 0) ➞ true\\n```\\n\\n### Notes\\n- Chessboard is always empty (only the bishop is there).\\n- Bishop can move in any direction diagonally.\\n- If the starting and ending square are the same, return `true` (even if the move is 0).\\n- Square names will always be lowercase and valid.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class BishopChallengeTest {\\n\\t@Test\\n\\tpublic void test1() {\\n\\t\\tassertBishop(\\\"a1\\\", \\\"b4\\\", 2, true);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test2() {\\n\\t\\tassertBishop(\\\"a1\\\", \\\"b5\\\", 5, false);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test3() {\\n\\t\\tassertBishop(\\\"f1\\\", \\\"f1\\\", 0, true);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test4() {\\n\\t\\tassertBishop(\\\"e6\\\", \\\"a1\\\", 2, false);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test5() {\\n\\t\\tassertBishop(\\\"h2\\\", \\\"a2\\\", 1, false);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test6() {\\n\\t\\tassertBishop(\\\"d1\\\", \\\"a3\\\", 1, false);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test7() {\\n\\t\\tassertBishop(\\\"b2\\\", \\\"a4\\\", 2, false);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test8() {\\n\\t\\tassertBishop(\\\"c6\\\", \\\"a8\\\", 2, true);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test9() {\\n\\t\\tassertBishop(\\\"e5\\\", \\\"b2\\\", 2, true);\\n\\t}\\n\\t\\n\\tprivate static void assertBishop(String start, String end, int n, boolean expected)\\n\\t{\\n\\t\\tassertEquals(expected, BishopChallenge.bishop(start, end, n));\\n\\t}\\n}\",\"language\":\"java\",\"quality\":0,\"summary\":\"Your chess teacher wants to know if a bishop can reach a certain spot on the board in the given amount of moves.\\n\\nGiven a starting square start, ending square end and the maximum number of moves allowed n. Return true if the ending square can be reached from the starting square within the given amount of moves. Keep in mind the chessboard goes from a1 to h8 (8\",\"tags\":[\"algorithms\",\"math\",\"games\",\"validation\"],\"timestamp\":{\"$date\":1609206814342},\"title\":\"Bishop Challenge\",\"stats\":{\"completed\":{\"total\":14,\"ratings\":[3,3,3,3,3,3,5,5,5,2,5,5,1,1,5],\"quality\":[],\"rators\":[\"4ThmYBWvyCK5H9qjr\",\"iq55QasecYJXKz8rx\",\"cqdhdH7Bi7uXnH4tB\",\"rvGT3pJECfbjX9z9n\",\"3fFQ4XkdL2WywELg9\",\"a777e8chPvJkY3tKa\",\"xBQC5uQdx6WndJ3iM\",\"uw47663LqPME8btaA\",\"MKYW5M2WxHdMubMCF\",\"s4StnonMoWxe2ECrh\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"DuDYRr7JLtqrvpLa9\",\"language\":\"cpp\"},{\"_id\":\"r2gd399TcG56Bvim5\",\"language\":\"java\"},{\"_id\":\"6gkY9f4hNauYgwMpt\",\"language\":\"javascript\"},{\"_id\":\"maj2uLxrdXmBN7QDa\",\"language\":\"python3\"},{\"_id\":\"5RRuX9iYAReZNMxZb\",\"language\":\"ruby\"}]}}"]