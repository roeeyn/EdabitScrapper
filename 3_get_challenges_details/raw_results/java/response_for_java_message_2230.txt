a["{\"msg\":\"result\",\"id\":\"672\",\"result\":{\"_id\":\"a242aPZGmmx8xhiuy\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n  public static boolean isPalindromePossible(String str) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":2.607476635514019,\"familyId\":\"9Q6DJZcMjh65rtEih\",\"instructions\":\"Given a word, create a function which returns whether or not it's possible to **create a palindrome** by *rearranging the letters in the word*.\\n\\n### Examples\\n```\\nisPalindromePossible(\\\"rearcac\\\") ➞ true\\n// You can make \\\"racecar\\\"\\n\\nisPalindromePossible(\\\"suhbeusheff\\\") ➞ true\\n// You can make \\\"sfuehbheufs\\\" (not a real word but still a palindrome)\\n\\nisPalindromePossible(\\\"palindrome\\\") ➞ false\\n// It's impossible\\n```\\n\\n### Notes\\n- Trivially, words which are already palindromes return `true`.\\n- Words are given in all *lowercase*.\",\"isHidden\":false,\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(true, Challenge.isPalindromePossible(\\\"rearcac\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(true, Challenge.isPalindromePossible(\\\"suhbeusheff\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(false, Challenge.isPalindromePossible(\\\"palindrome\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(false, Challenge.isPalindromePossible(\\\"yagnx\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(false, Challenge.isPalindromePossible(\\\"zgzqxljjp\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(false, Challenge.isPalindromePossible(\\\"tgmqkpdhnhatoco\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(true, Challenge.isPalindromePossible(\\\"akyka\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n    assertEquals(false, Challenge.isPalindromePossible(\\\"kjyyrftnbsbq\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test9() {\\n    assertEquals(false, Challenge.isPalindromePossible(\\\"jynmynqhcy\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test10() {\\n    assertEquals(false, Challenge.isPalindromePossible(\\\"hfe\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test11() {\\n    assertEquals(true, Challenge.isPalindromePossible(\\\"noon\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test12() {\\n    assertEquals(false, Challenge.isPalindromePossible(\\\"azmkallbanpu\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test13() {\\n    assertEquals(true, Challenge.isPalindromePossible(\\\"drrede\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test14() {\\n    assertEquals(false, Challenge.isPalindromePossible(\\\"xmhwcocldjdnqvv\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test15() {\\n    assertEquals(true, Challenge.isPalindromePossible(\\\"reparpe\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test16() {\\n    assertEquals(false, Challenge.isPalindromePossible(\\\"jnavz\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test17() {\\n    assertEquals(true, Challenge.isPalindromePossible(\\\"orort\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test18() {\\n    assertEquals(false, Challenge.isPalindromePossible(\\\"mel\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test19() {\\n    assertEquals(false, Challenge.isPalindromePossible(\\\"jdxknf\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test20() {\\n    assertEquals(false, Challenge.isPalindromePossible(\\\"qo\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test21() {\\n    assertEquals(true, Challenge.isPalindromePossible(\\\"neett\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test22() {\\n    assertEquals(true, Challenge.isPalindromePossible(\\\"wow\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test23() {\\n    assertEquals(true, Challenge.isPalindromePossible(\\\"avkkiaapiusuapspiip\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test24() {\\n    assertEquals(true, Challenge.isPalindromePossible(\\\"aann\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test25() {\\n    assertEquals(true, Challenge.isPalindromePossible(\\\"iivcc\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test26() {\\n    assertEquals(true, Challenge.isPalindromePossible(\\\"akyka\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test27() {\\n    assertEquals(true, Challenge.isPalindromePossible(\\\"eelvl\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test28() {\\n    assertEquals(true, Challenge.isPalindromePossible(\\\"damam\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test29() {\\n    assertEquals(true, Challenge.isPalindromePossible(\\\"mmo\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test30() {\\n    assertEquals(false, Challenge.isPalindromePossible(\\\"ge\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test31() {\\n    assertEquals(true, Challenge.isPalindromePossible(\\\"arrad\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test32() {\\n    assertEquals(false, Challenge.isPalindromePossible(\\\"bq\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test33() {\\n    assertEquals(false, Challenge.isPalindromePossible(\\\"djufyllynldw\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test34() {\\n    assertEquals(true, Challenge.isPalindromePossible(\\\"reparpe\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test35() {\\n    assertEquals(true, Challenge.isPalindromePossible(\\\"ttraoor\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test36() {\\n    assertEquals(true, Challenge.isPalindromePossible(\\\"orort\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test37() {\\n    assertEquals(true, Challenge.isPalindromePossible(\\\"asgas\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test38() {\\n    assertEquals(true, Challenge.isPalindromePossible(\\\"t\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test39() {\\n    assertEquals(true, Challenge.isPalindromePossible(\\\"tstsa\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test40() {\\n    assertEquals(true, Challenge.isPalindromePossible(\\\"neett\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test41() {\\n    assertEquals(false, Challenge.isPalindromePossible(\\\"wndnwrkpkihup\\\"));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"Given a word, create a function which returns whether or not it's possible to create a palindrome by rearranging the letters in the word.\\n\\nExamples\\nisPalindromePossible(\\\"rearcac\\\") ➞ true\\n// You can make \\\"racecar\\\"\\n\\nisPalindromePossible(\\\"suhbeusheff\\\") ➞ true\\n// You can make \\\"sfuehbheufs\\\" (not a real word but still a palindrome)\\n\\nisPalindromePossible(\\\"palindrome\\\"\",\"tags\":[\"algorithms\",\"strings\",\"validation\"],\"timestamp\":{\"$date\":1580691925806},\"title\":\"Palindromic Anagrams\",\"stats\":{\"completed\":{\"total\":125,\"ratings\":[3,3,3,3,3,5,0,1,2,3,2,2,4,4,1,2,4,2,3,3,3,2,1,4,4,2,2,3,1,4,4,2,0,3,4,3,2,2,2,2,2,2,4,0,2,1,1,2,4,1,4,3,1,4,4,1,2,2,3,4,3,3,3,4,2,3,4,2,2,3,4,3,2,4,3,3,2,1,4,2,4,4,2,4,3,3,2,3,2,4,2,3,2,3,2,2,2,3,1,2,2,1,3,4,3,3,3],\"rators\":[\"AraFx3EGW7PsqMPWt\",\"8J2Dqqz9PaFufQzwY\",\"J9zJq7PMGb6mqzcHW\",\"8Nzt6imoS9Rvpd6it\",\"zLqaZ66ka2YSKjTcg\",\"fZky27mpbfX7soJKa\",\"AvkuNSaBw4vPM6Kae\",\"3pdgguqZgNDSAJSGm\",\"jBbd6xWgNR82H68vR\",\"YLwJkF2wuL3n9o6a2\",\"DD5a6RAAY8GbXvbow\",\"AyrEvM2GLX2jqM772\",\"2PR653L4KSN97r534\",\"Es4eX2stRpyoXeC7f\",\"D7dpRtRQDmteDSAXv\",\"YF79LnTdprobbYY5v\",\"NnABYtupgRNquKSy4\",\"rehehi2Tr2mwaEoJE\",\"73LN453oCGd2QepJz\",\"gGnDsJz5hr2t9MKCF\",\"rTj67TTydxqkpwFtN\",\"kpn2TawqhsR9cNvPY\",\"imoNrk36ozReP939p\",\"iWQBC4rxuCBazvLqC\",\"eXW8reZCCZHQzJjQi\",\"Wh7DKfxkYbMYjE3xw\",\"oMLSgpSFQnY4ui8cB\",\"dDP6nt8ihp6FPeT27\",\"Gu3qBdQH5RFdHgRWQ\",\"TrquEHytntLKHA4m2\",\"v45DvHysSNhhiv925\",\"DkSMZ3jZLkwviKb9g\",\"jyoLggHk8xQKZuoQC\",\"HiD9tdPXAJhZp9j6C\",\"rwETZ6XCNoHCEyB66\",\"BEjoBzgdBkGbGHJkv\",\"uuN5sdoMNjtRZwXiL\",\"spyiYN7CNunMaNvp2\",\"pBMXMQem6BpSeooYT\",\"5WQZzuHZBGqFeNQi3\",\"k63LjKkX5p7SYng7C\",\"NzJKK8Cuf3bcqZfcw\",\"SfhMTK5ykctdKbCSp\",\"osXNzc2aCxspRwheS\",\"GaMuEuNYSuw3H4WM7\",\"Nb6LYPoQP6KJZt8mz\",\"AxWLAsQ9dKQTeSvA5\",\"9xbzMAFjLngNefQF4\",\"XTuxCoKrN9DZ7zaQx\",\"nchwCYoYGxS4MPsiF\",\"koK7PLamY4TC5J52J\",\"o55mqHkfqkL9sSJQ2\",\"gm79qnnKS3xxPro84\",\"hPx9H3YM8j2k94DNW\",\"hxeKTpLc8vjMd8TMp\",\"jvPmRfcxMNSkskRSg\",\"QS45qu2DFXcCqpAnB\",\"GM7Pgq5Jvh2FiMLmY\",\"mGaEDPw5FsDb3vdnq\",\"jRqY4i8gPemsZMBGf\",\"HfHX644FWoTbifSCX\",\"5Rr75sFqhpkowFk3k\",\"FzXZHmji9hCtRk9QK\",\"Ym8AjbKGSJooun3nt\",\"yiHCqsJuZLL6eMNuF\",\"4gsam6sAAtEPiafzc\",\"iN2eQoEbsJ6XRL5Np\",\"49caJ2EMfEnPSEYZj\",\"gXTAie79kiw28tx5u\",\"qMds9ppJy2Tn9wxEp\",\"xu2Zm9ktz45LtiJZr\",\"FCkjDL4WAu3d6rAkC\",\"mQKWauR6b252TmdX4\",\"DqZMjeKpfjDrjhEPo\",\"ymqdHfJYMuxfsYo6R\",\"2CLvCKwQvRQC8NHXp\",\"rWhXHhzF4W8bea6LP\",\"feavP3mGDve6obsQa\",\"jm4tNFjsgYKW5TZfp\",\"hAyMFGbDEaqyHCFev\",\"azAzSkvJd7eyXY9x9\",\"f4zCPbQHwBfi9YueC\",\"3mqwov5TxpQY3Xcb8\",\"zop6c2vDgHfJuXGub\",\"p2woPCQKXuWJCwffJ\",\"iq55QasecYJXKz8rx\",\"7hB2m3m7BXnjDoJ7E\",\"zza5WjC8QrHcoDZBF\",\"MqyvPyccJ2XMrQYg4\",\"LNCb5rksJLJ43L4Nw\",\"XbbcA7iXFz9y2XneB\",\"nHj7SC5cnmkTApbgY\",\"NQYXW9iva8z9qR5Px\",\"p6fkM3tu4g4mLe9PT\",\"iAkFghEnCswmTmgwN\",\"pCbFsvyiooabCFEgd\",\"XKfTKW43MXDBZLCLs\",\"nAuhwzeaxm62fF6Mi\",\"dvqtXvh3qKT3HbgJz\",\"rhS8qXRjZcpDXkwnE\",\"7w5WfNiZxZhsZNoKm\",\"htXCitorobtqYymjN\",\"b9iSg6CvRnHuLtQA5\",\"WN9Gn8fyStG57qzGC\",\"mS4t7GChGHwJ65Lfk\",\"2NJZbusRvu3eJ4tHu\",\"DmfS648aGGhQwkpoZ\",\"sxci7DYKNa6q22Sjq\",\"hptzhvoqzWEbtLyY5\",\"ZBC3PiCvwzvcRZaFy\",\"e4WhfhAzzRt22JbP2\",\"KMR6vNzvSKMA2cXnK\",\"buX4mCQhtXCfBjeno\",\"zRJnj5pW4JvhFkCWp\",\"Q8qS75yq55qS2SYKF\"],\"quality\":[5,5,3,5,5,5,5,4,4,5,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":4.6923076923076925,\"family\":[{\"_id\":\"iJpPHkrQ5FxeXZyNN\",\"language\":\"cpp\"},{\"_id\":\"a242aPZGmmx8xhiuy\",\"language\":\"java\"},{\"_id\":\"8wqJTmobdGWuQKFmy\",\"language\":\"javascript\"},{\"_id\":\"eyJ4mN6RpyiRTvSob\",\"language\":\"python3\"},{\"_id\":\"yDzdgoqQJyDzHBDBd\",\"language\":\"ruby\"}]}}"]