a["{\"msg\":\"result\",\"id\":\"625\",\"result\":{\"_id\":\"aL3SuicAGjAwgqY2d\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class Halves {\\n  public static int halveCount(int a, int b) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":2.260869565217391,\"editorId\":\"a777e8chPvJkY3tKa\",\"familyId\":\"wEZMuB35LYb8jwmDM\",\"instructions\":\"Given two integers `a` and `b`, return how many times `a` can be halved while still being greater than `b`.\\n\\n\\n### Examples\\n```\\nhalveCount(4666, 544) ➞ 3\\n// (4666 -> 2333 -> 1166.5 -> 583.25)\\n\\nhalveCount(466, 54) ➞ 3\\n// (466 -> 233 -> 116.5 -> 58.25)\\n\\nhalveCount(1324, 98) ➞ 3\\n// (1324 -> 662 -> 331 -> 165.5)\\n\\nhalveCount(624, 8) ➞ 6\\n// (624 -> 312 -> 156 -> 78 -> 39 -> 19.5 -> 9.75)\\n\\nhalveCount(1000, 3) ➞ 8\\n// (1000 -> 500 -> 250 -> 125 -> 62.5 -> 31.25 -> 15.625 -> 7.8125 -> 3.90625)\\n```\\n\\n\\n### Notes\\n- Integer `a` will always be (at least) greater than the _twice_ of `b`.\\n- You are expected to solve this challenge via a **recursive** approach.\\n- A **collection** of challenges in _recursion_ can be found via this [link](https://edabit.com/collection/Yx78jEBrKppHBNsoQ).\",\"isFree\":false,\"isHidden\":false,\"lab\":\"/** \\n================================= \\nTestGen 3.1 for JUnit 4.13.0 \\t\\t\\nTest Case: Halves::halveCount \\nTimestamp: 11/05/2020 09:41:32 PM \\n--------------------------------- \\n® DARKKO 2020 © \\n================================= \\n\\n**/ \\n\\nimport static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class HalvesTest { \\n\\t\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertEquals(3, Halves.halveCount(4666, 544));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertEquals(3, Halves.halveCount(466, 54));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertEquals(1, Halves.halveCount(8, 2));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertEquals(8, Halves.halveCount(1891, 4));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertEquals(6, Halves.halveCount(1756, 14));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertEquals(11, Halves.halveCount(7764, 2));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertEquals(4, Halves.halveCount(1118, 47));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertEquals(1, Halves.halveCount(161, 79));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test09() { \\n\\t\\tassertEquals(7, Halves.halveCount(8573, 35));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test10() { \\n\\t\\tassertEquals(12, Halves.halveCount(4123, 1));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test11() { \\n\\t\\tassertEquals(4, Halves.halveCount(1348, 60));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test12() { \\n\\t\\tassertEquals(7, Halves.halveCount(7549, 31));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test13() { \\n\\t\\tassertEquals(9, Halves.halveCount(4469, 5));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test14() { \\n\\t\\tassertEquals(3, Halves.halveCount(1123, 98));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test15() { \\n\\t\\tassertEquals(6, Halves.halveCount(8197, 85));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test16() { \\n\\t\\tassertEquals(4, Halves.halveCount(1199, 56));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test17() { \\n\\t\\tassertEquals(11, Halves.halveCount(8845, 4));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test18() { \\n\\t\\tassertEquals(3, Halves.halveCount(606, 67));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test19() { \\n\\t\\tassertEquals(9, Halves.halveCount(3375, 6));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test20() { \\n\\t\\tassertEquals(9, Halves.halveCount(7085, 10));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test21() { \\n\\t\\tassertEquals(5, Halves.halveCount(299, 5));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test22() { \\n\\t\\tassertEquals(3, Halves.halveCount(1208, 82));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test23() { \\n\\t\\tassertEquals(5, Halves.halveCount(3635, 73));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test24() { \\n\\t\\tassertEquals(9, Halves.halveCount(2382, 3));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test25() { \\n\\t\\tassertEquals(1, Halves.halveCount(320, 80));\\n\\t}\\n\\n}\\n// end of tests\",\"language\":\"java\",\"quality\":4.428571428571429,\"stats\":{\"completed\":{\"ratings\":[3,3,3,3,3,3,4,2,0,2,3,1,4,4,2,2,3,3,1,1,4,3,2,2,2,1,1,3,3,2,2,1,0,2,3,3,2,1,2,3,1,2,2,3,2,2],\"quality\":[5,5,4,4,3,5,5],\"rators\":[\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"cJmmvnmJSXvBXtydi\",\"A3sCeFiyP6qEkhviG\",\"gXTAie79kiw28tx5u\",\"mGaEDPw5FsDb3vdnq\",\"zTM2NbjE6q5Q2HSeF\",\"Ym8AjbKGSJooun3nt\",\"QfjvAWZnumxpSYpzQ\",\"bTCq6CQ3SGjrRfZeQ\",\"Yp7uvStL97cC9fKkY\",\"azAzSkvJd7eyXY9x9\",\"2g9DndhBotcaKDiFD\",\"ng6HiP4FaPD39csb4\",\"FTHXj9Rfx9wdujSzy\",\"2xFvy6u3hE4LtCXMD\",\"rWhXHhzF4W8bea6LP\",\"wpvJWmW9TxQQAZk4J\",\"RAEFpazbe6mhx3PLb\",\"j5QzY7Rc4fqdTdxuv\",\"5Mk9r84xypgC5eWq5\",\"48QACpmrJCrpvcxJP\",\"nuYLTchLGxHW65zwF\",\"EFqhE7GRf6PSKMSg6\",\"henkXNsBPpiwZxqmu\",\"btabi3PdyisuY5tn9\",\"foytX6kH9wiSYqLtT\",\"LrgQT4bdiLbHrprXu\",\"N9MasTz5XmtXEWx7j\",\"3YDbbC8ZR6QJg9gKp\",\"tn9LJD37iaKTHNLpt\",\"T2vhHPhRR96hRizq8\",\"QGQtHT2rYPorw49no\",\"cutZ239QJMor3Mr9w\",\"xa3CFkeyE66qrfTZ9\",\"wT5gGgvjKc5wz59AQ\",\"nHj7SC5cnmkTApbgY\",\"jyoLggHk8xQKZuoQC\",\"rhS8qXRjZcpDXkwnE\",\"2NJZbusRvu3eJ4tHu\",\"JWc6EhGQp6A6megLe\",\"KMR6vNzvSKMA2cXnK\",\"sxci7DYKNa6q22Sjq\",\"ZxPXe8qsZ92rvZyK2\",\"htXCitorobtqYymjN\",\"xEX3TDY6C2h82dJTn\",\"PAEWysAAFheYiYPBp\",\"wFRLGjA56kj7xyhmv\"],\"total\":50},\"flags\":1},\"summary\":\"Given two integers a and b, return how many times a can be halved while still being greater than b.\\n\\nExamples\\nhalveCount(4666, 544) ➞ 3\\n// (4666 -> 2333 -> 1166.5 -> 583.25)\\n\\nhalveCount(466, 54) ➞ 3\\n// (466 -> 233 -> 116.5 -> 58.25)\\n\\nhalveCount(1324, 98) ➞ 3\\n// (1324 -> 662 -> 331 -> 165.5)\\n\\nhalveCount(624, 8) ➞ 6\\n// (624 -> 312 -> 156 -> 78 -> 39 -> 19.5 -> 9\",\"tags\":[\"recursion\",\"numbers\"],\"timestamp\":{\"$date\":1604584260371},\"title\":\"Recursion: Halve and Halve Again\",\"family\":[{\"_id\":\"aL3SuicAGjAwgqY2d\",\"language\":\"java\"},{\"_id\":\"nbLgTS3tCHTJcQfA5\",\"language\":\"javascript\"},{\"_id\":\"htpi99zeTsvjWNujz\",\"language\":\"python3\"}]}}"]