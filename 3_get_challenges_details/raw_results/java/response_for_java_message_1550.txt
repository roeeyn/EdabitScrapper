a["{\"msg\":\"result\",\"id\":\"334\",\"result\":{\"_id\":\"ynzo3DeHCmAXLtpwe\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n\\tpublic static String inatorInator(String inv) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.4819277108433735,\"familyId\":\"AmnDzfrYpxnSwArYB\",\"instructions\":\"Create a function that takes a single word string and does the following:\\n\\n1. Concatenates `inator` to the end if the word ends with a consonant otherwise, concatenate `-inator` instead.\\n\\n2. Adds the word length of the original word to the end, supplied with '000'.\\n\\nThe examples should make this clear.\\n\\n### Examples\\n```\\ninatorInator(\\\"Shrink\\\") ➞ \\\"Shrinkinator 6000\\\"\\n\\ninatorInator(\\\"Doom\\\") ➞ \\\"Doominator 4000\\\"\\n\\ninatorInator(\\\"EvilClone\\\") ➞ \\\"EvilClone-inator 9000\\\"\\n```\\n\\n### Notes\\nN/A\",\"isHidden\":false,\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(\\\"Shrinkinator 6000\\\", Challenge.inatorInator(\\\"Shrink\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(\\\"Doominator 4000\\\", Challenge.inatorInator(\\\"Doom\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(\\\"EvilClone-inator 9000\\\", Challenge.inatorInator(\\\"EvilClone\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(\\\"Destroyinator 7000\\\", Challenge.inatorInator(\\\"Destroy\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(\\\"a-inator 1000\\\", Challenge.inatorInator(\\\"a\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(\\\"Shrekinator 5000\\\", Challenge.inatorInator(\\\"Shrek\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(\\\"bEE-inator 3000\\\", Challenge.inatorInator(\\\"bEE\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n    assertEquals(\\\"CAPITALISE-inator 10000\\\", Challenge.inatorInator(\\\"CAPITALISE\\\"));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"Create a function that takes a single word string and does the following:\\n\\nConcatenates inator to the end if the word ends with a consonant otherwise, concatenate -inator instead.\\n\\nAdds the word length of the original word to the end, supplied with '000'.\\n\\nThe examples should make this clear.\\n\\nExamples\\ninatorInator(\\\"Shrink\\\") ➞ \\\"Shrinkinator 6000\\\"\\n\\ninatorInator\",\"tags\":[\"formatting\",\"strings\"],\"timestamp\":{\"$date\":1580419842908},\"title\":\"Functioninator 8000\",\"stats\":{\"completed\":{\"total\":365,\"ratings\":[1,1,1,1,1,0,1,1,1,2,2,2,1,1,1,1,1,2,2,0,1,2,1,2,2,1,1,1,1,2,2,3,2,2,2,2,2,2,1,2,1,2,2,2,1,2,0,1,1,2,2,0,1,2,2,3,2,0,2,0,1,1,2,1,2,1,2,1,2,3,0,2,1,2,2,1,1,0,2,1,2,2,2,2,2,2,2,0,1,2,0,0,1,0,2,2,0,3,0,0,1,1,2,2,2,1,0,1,2,2,1,1,2,1,2,2,1,1,2,1,2,2,1,1,2,2,2,2,1,1,2,2,2,1,2,1,1,2,1,1,1,2,0,2,2,0,2,2,2,2,1,1,2,1,2,0,2,1,2,2,0,2,1,2,2,1,2,1,0,2,0,1,2,0,2,2,2,2,0,0,3,3,2,1,3,3,2,0,2,3,2,2,2,1,1,2,1,2,5,3,1,2,2,1,1,1,2,2,1,1,2,0,1,2,2,1,2,1,2,2,2,1,1,2,2,0,2,1,1,1,2,2,2,1,2,2,2,2,2,2,2,2,2,1,1,2,2,1,2],\"rators\":[\"8J2Dqqz9PaFufQzwY\",\"3KjxQu9RZ8ZSywvLz\",\"KowhvsYvaqPMAf9Sf\",\"fxaS5K7ZXo4FbTe36\",\"WX3S3CFjEdfceCtKZ\",\"J9zJq7PMGb6mqzcHW\",\"8JyqsSbN2FJXPr3cw\",\"qJZsi5rhRnWA38FbA\",\"Yohr2MmAyaWGMbB35\",\"HBgPTjhMkJ2WCcBP7\",\"u4yanfWeeZsN3xWgc\",\"FSSM3xcaTXGcxqYGz\",\"C9yBWYcZsjmJYww3K\",\"AyrEvM2GLX2jqM772\",\"nx5kpw8WLtZwDhnqC\",\"a49eNnfRwSMxsDJXf\",\"qx9XHErKygcLiFGhX\",\"rWhXHhzF4W8bea6LP\",\"5TaPWyRv9DZWWodp8\",\"yK7zzK2aGJwuWKHRL\",\"izbnbqmdaXH88jzTw\",\"Zxna6SCXWtvWuLuPs\",\"W347YkKWzfvMbkuHr\",\"qb2DTmzQj4vNfq5K7\",\"2cdvd8yuPLSwvGj9w\",\"tyNrtjfTi56j5Hw9b\",\"tw5p3m3Dump7FwYN7\",\"TxD5qx2hqQa6pixAP\",\"LgDic4cD77oG8XtwP\",\"r9hHZYPQAqJ9DbwLX\",\"Xwu7yQJzMsErCa9X7\",\"qEGfmqbNLrs2Qrva8\",\"4rLc4TEXDA2MbFhzx\",\"jDuY4gx4aJRp8SHbm\",\"eXW8reZCCZHQzJjQi\",\"qjTCEuEhBCYE9xbRD\",\"4RHx3H8EwP2oboW8e\",\"T6X7tJkQYJjiiuT8i\",\"k9GXNo9HLAnPSitui\",\"Es4eX2stRpyoXeC7f\",\"4hYyZnCuvgfuxhd7e\",\"wYYMNPe8nSiJFbvJw\",\"NsQ8qYQQ47gSPtQkK\",\"cjxsqXfkAPoadmppi\",\"Gg7NxiHxaDbW42eXL\",\"wbSLghDxkTjiYJrEH\",\"fbYN9Jp46RqBqCd2K\",\"jRqY4i8gPemsZMBGf\",\"JFodQijHHdRkkrZvT\",\"gGnDsJz5hr2t9MKCF\",\"yHNuGqmFHi7hnA5j7\",\"crNg7rukHiCBEGXzF\",\"mdEQJ2fmGmkbhbvNw\",\"Kso7rzAKB4TTCPKgM\",\"fZjkX29nhRTWWb75k\",\"YLwJkF2wuL3n9o6a2\",\"hB5mgzMwQSnhBzi7P\",\"ZqjP4M6dzu32To33K\",\"jDTGwryGygbZiqCEg\",\"mfm3gB39arY8Rjb2y\",\"5seiNqw6ZXoF2GRRd\",\"TrquEHytntLKHA4m2\",\"jyoLggHk8xQKZuoQC\",\"GEzaJZ2cPjENT4ERQ\",\"8zZ6xmzpiFair25qr\",\"WZujpe8yQAyZmpWHg\",\"rvojHhKH3DaxotefQ\",\"etoSR23iELGGgs9rA\",\"aKKf3ak3ZHPgYApTW\",\"av5QexsdPza9FsRCq\",\"htXCitorobtqYymjN\",\"DePiAS7u5Pk9d6SLr\",\"B4pxRqzo43M7S8FbP\",\"Yp7uvStL97cC9fKkY\",\"y6kfyYmydcD8tkBk7\",\"Witn99Xo8Anbjpakg\",\"Yom3RzkMYpweE8cbS\",\"aukemxRJPgJjJWgAx\",\"DzvdGwHEjqsX7wyKr\",\"DRjqgdcSkz58yiqea\",\"dpJTai3i9aNkCS3sa\",\"AZk6qAmJw6h2ciPbR\",\"m3yxpYRW43zBKvGSy\",\"DkSMZ3jZLkwviKb9g\",\"dcW9oK2uRo8h8mBe2\",\"zwruFCmuHkwJTpYqg\",\"pBMXMQem6BpSeooYT\",\"Ha5J49rhojBRy3BaM\",\"g4NCSxxHqHCGMpWwT\",\"H5sfMFuQo6yHE8GFL\",\"PR7Ch7hTRQmGmy7wQ\",\"muXMnzQwGLzN6j2Jr\",\"aApsjW8B3Ecggumuo\",\"4CryJmbEsruAELrDt\",\"AeJSxRqw2dJZuGvdk\",\"9pqtNWrsTJdZcRbEZ\",\"YcjwCvYut6834Jzd8\",\"osXNzc2aCxspRwheS\",\"S6n5P7pGiEu2mQuFD\",\"tnYXC3cGqycxRzCgT\",\"S5n2zNbhQYZvxBunh\",\"QAr6AxMvrPhKaMA8N\",\"n5wubRfh6zh8QRymN\",\"qbGWFzcYKChXfZBtc\",\"nLb2L7vY7vd9k5L4w\",\"j428nMyNKY8g2dcCi\",\"Fd9765rksgPK4E2Zy\",\"5p6bwXayfAp7Y4WQ7\",\"kiRkuN7JXqvWBa4SG\",\"2jH5PTxFP9bguXT4G\",\"B59ANYuNBPaEhMJGq\",\"TLgJebKMDSvJFbWrD\",\"sJaSeR649EEMX9F4v\",\"MCjdtAAjL6sGLukPr\",\"qraDA47Ewou5mzvrL\",\"87otmbdqNT3bHsQFu\",\"f6uGKbmMdBYCjrMBh\",\"KxLMWekCxzy2Eem7u\",\"5CCnjmvaBuuCibuTn\",\"Ym8AjbKGSJooun3nt\",\"WEtPmWe7czqEYpp27\",\"Moa2JSbg9NjdbcAoG\",\"YFHkjbM6obMSj24zi\",\"oMZovHkR6QqNvQwyc\",\"NjnPrCrnMkqYTjK2Y\",\"vfrmS4AEwWKrh8j2D\",\"zTEKMLMevG8xfxEj6\",\"azAzSkvJd7eyXY9x9\",\"i6djEp3SMRGHryCpH\",\"8c8P2NGJisyn2QepD\",\"yHvCCNugSDhWTmiEJ\",\"fRYcPHuyEdqngMzC4\",\"jb9RLyyuo565bKDzN\",\"yXGiiSAR5nBHnH3yr\",\"kQRtmSZfHdSzFserc\",\"gXTAie79kiw28tx5u\",\"3GAHtEe5sPNEKNy6J\",\"F7bTaaT22JsbPTNHK\",\"yd5PakB2z33q2JrTZ\",\"mG8HqKiAQFTdRZthG\",\"JszPst3958te56jFk\",\"oMfq73A434YWhSuWQ\",\"Tf7TJFSPktJBgLA4k\",\"P5BhjZxyeHQYTNyB9\",\"BbcH2NLjE4tKAZ3wR\",\"jXTnL3JatkKjoifyb\",\"8Xx8nWXRydHDBGfQf\",\"rGpPd6PvpzLaqps4g\",\"YL9pqyCu8xsds8J49\",\"sBL7qwL5mn2DZSDRR\",\"hDeaTsprkH6CmvSAR\",\"unNqQjSHzkb4pCzEu\",\"a777e8chPvJkY3tKa\",\"vGMyM3QjLCMcPLi6D\",\"gBGjCfJvPHswDM5JQ\",\"2bemiz7sjLjCbA5ui\",\"udHFfcqNNej6udnpP\",\"62qNJjtmkRYvX5kKB\",\"69K8S2NbzkqE9pAe5\",\"eL4ZiEd4Yx7N3yHSs\",\"kh7Tw42Li3AW5Jej4\",\"p2woPCQKXuWJCwffJ\",\"Yqj3KwhnDCzKwEsom\",\"QYqK32Y6AxvT74Aaa\",\"fJAnQriWjfZA5EFCK\",\"tyLS9T6YMfg9fMtYJ\",\"zE46SymvixkeFJmPM\",\"W56bWmpQeLJ9JEDsa\",\"mQKWauR6b252TmdX4\",\"JeSHEyHLRmScypBNw\",\"hD6sfDtntpqT8NR2o\",\"kabqCExooax4JEQHE\",\"NNMT6RQgtgCYawgr3\",\"giMraHbGbKDoi9qFg\",\"iEznWykKmfsxDmtFi\",\"pgaNRv22jpbCzDoQA\",\"RGN3QTb5LXj4ZPPkj\",\"YLqdr7bYjwew2KM4N\",\"E8Q6h8ogLP679bvGA\",\"Q4RHqbSCspLCPqvHe\",\"pi76g3eRpnKrhee2a\",\"J7epB3qSQJ2E8vWkY\",\"Hhvy3EGqWBXt3nFPA\",\"NSvSyX3rvsfA3JgAH\",\"p5QkcqbZ5sHXoQMt8\",\"XAEZwNdFPMswpR5Rj\",\"rBdHpG9m3SKN7qu2Q\",\"uFfEio8nzDvL8emhp\",\"TCTZucJN3tJh5t7MB\",\"eQXwk5zGckM8tCWYH\",\"Wi4H6ayKsNDWWQCG5\",\"iumiEEzgPfm2oJSA2\",\"2cMqsHnrvuTYNMBeE\",\"9pCPyhvQmbkWyD2LL\",\"QTJvghkPpGKnKvZ5R\",\"LZtsE3W4Rjy3bkFNK\",\"APBiZdihJCi5JSnPL\",\"JDFcgywBAbJpHZjaB\",\"LFSASkxgw9hr3KqmC\",\"TdLgkQcBZiw6ZczsT\",\"ZicXG4BSsqePSN49p\",\"adoi8Fo5DKYBGGvDj\",\"255zPcwpXMLBAZ28m\",\"p8qqFdJ3FSk5x9z3G\",\"Dkc8pZ2yXsLM4Ejwj\",\"hSGA99ySG5ePGK7CJ\",\"r2Cr74L2qNRW8oXJB\",\"79JPDiquvpzdc8it8\",\"GkYtSbQuheBF4Enys\",\"arYTBQRHzzwY6GjJc\",\"HPfFF7bmMBfeozz37\",\"RPhgk5Ku7YyzFARZ9\",\"3fFQ4XkdL2WywELg9\",\"LpbgPidnNf2rPSzCb\",\"B857XNDN6GDcQhYXL\",\"4pagg6vw2Cjepv7tN\",\"KwcjmyzmmxAjoPbdK\",\"mtMBckCxzcuMjTSWq\",\"4CwytSwJXZbJxvRyt\",\"YuTmWchYrh725Cfbs\",\"9DeENPmCSjRsXv4Wo\",\"DxZXs4rQwFHBkXW8B\",\"LPt8WWo9vGouKvZzb\",\"fagfwZYYKokt5swAu\",\"bur3yQ8s34zqKGEro\",\"ghiN5Yuub6La8kbPq\",\"xhBmKfR8bBWtAqBM9\",\"ZMd8it647JSYTvx8Z\",\"iYnx2beiFn93iSpRM\",\"ZbFqBWMdtCys3K4JE\",\"jed9ehesiSMYgtBes\",\"gPxdhHsQXpXmH5356\",\"ru26Mtog8jp56CptL\",\"4NBjGwGhv3mt8kszG\",\"WygMSJCsQ52d7gN9h\",\"Qy9iR759KepTnfxjW\",\"tct2AT3szFyhp7Hd9\",\"c2KDufFGPes2gHEJG\",\"WgWGBYoEmKtXC59Hm\",\"7DLmsibbFQKcmeP5E\",\"hhxjQREtmHSheH9Pj\",\"wB47dmNBe3aFZZcFr\",\"6DyWxLuLh6zECgtuJ\",\"qXLSLcLZao5ubQe9P\",\"Po3v3dHCk6wYGKMwi\",\"9y54YZsFZt4Fgd6op\",\"a4zLHHMuHz4D3N6HH\",\"9XN2u65cXqeSgsrF3\",\"XNgW94PSq5kkXhojm\",\"pp44Kr8HM6tSfqcvk\",\"rn7ZuBes8NzCrBP26\",\"Qo8Z5w8oxWAX649to\",\"QRv96jmNaYsWkxQEG\",\"8NmFoJK2o27Ex3rCX\",\"4ySzqKC5s3ZRpG9di\",\"buX4mCQhtXCfBjeno\",\"zZfMwLuoERGmybgib\",\"anKN2WNgfQhdiv4DN\",\"KsxNzL79fCfCdvaZe\",\"AW2XYamqy3DDvM7oY\",\"Ag5fRrZ9MrAZc9vpj\",\"xuNYWdXut4gbG7KJF\",\"LAdTyvsotBQPvBJnK\",\"XHDfgrpqcvCJKSPt9\",\"vXgBScp6gcZFFCNyQ\",\"dovsbscLsbpX3wkm3\",\"dpBWvbfiCuCE2gw4Q\",\"Tg2ehikHDmuimuz4R\",\"hnPmCMcx6ra9Jx6L2\",\"nHj7SC5cnmkTApbgY\",\"HF3qXDKwsAfPqHroJ\",\"Afr4nfCZwmAPDcues\",\"uJwuWbc2PnyH6rFPX\",\"w8zohGaRRJ7hQqS7n\",\"vg2wBRPo4RdodaRGw\",\"HsFc9PgmpP2X9Fwh9\",\"ZfpLtKMWjd8fJp7yF\",\"sxci7DYKNa6q22Sjq\",\"wFRLGjA56kj7xyhmv\",\"rhS8qXRjZcpDXkwnE\",\"HXbTKW3jmmyRAsKrr\",\"hvQX8vATP6SbuzhJQ\",\"uw47663LqPME8btaA\",\"vWH3AqmNsydCi6d7k\",\"srJ34BaybkQh3qRkM\",\"xEX3TDY6C2h82dJTn\",\"XmWJPAXHZLbvsk9r3\",\"TA9dwvnSdta7rTynz\",\"yaZ7HC2tKbtCwqzNv\",\"e5oMyDNNNTLCQFZmT\",\"QNPufjZ9GhfDaZGgz\",\"gj87yXyoJxhoQLetq\",\"Qi5MiHmrg9ZqodsPP\",\"NGSQAm6jTyfenaMQ6\",\"KLFCeAdRJqHmLuzue\",\"DZvz6WY5bQEneYzvv\",\"pZQmgMDdoi8YB7iKh\",\"hkaM9GprPofiQJosp\",\"PJu3WcTpfRrvHfQiS\",\"4za87fFyw9qxkD936\",\"8b7kswLypEnXrswkw\",\"9yegb3yvroNMdFnyo\",\"9N5yEu7ho8ZZgjSoq\",\"PciPnjemCFtD4wQS2\",\"AHmgsYBy6A66bDQFC\",\"QwkJidQW7vvEY6TLp\",\"478iCTPiXNjoHXwHD\",\"jCjCvyhqhpebkJn34\",\"RsujLHaML6L3KinzK\",\"563onSvqgjToY79ah\",\"KMR6vNzvSKMA2cXnK\",\"2NJZbusRvu3eJ4tHu\",\"xW9nC9h6p77YT2iso\",\"SxWfaNpkxLLcSuZFk\",\"AeSmk2XWGcTLHB7PJ\",\"uLqaQvmvFbhBia4fD\",\"unqzSsxpxj9sZ7rbD\",\"FxPDKKibxnZjGJLs6\",\"SE5G2Caf3btnuGmz6\",\"5HGyJtoZ3AffzAZAv\",\"nFbmNzMQ38TncmfQX\",\"AZcCyHXDS99an8snH\",\"ckQwFFWyLXmDQAaCn\"],\"quality\":[5,3,5,5,5,4,4,4,5,5,5,5,5,4,5,4,5,5,4,5,5,5,5,5,5,5,5,4,5,5,5,4,5,5,5,4,3,5,5,4,4,5,5,5,5,5,4,4,4,5,5,5,5,3,5,3,5,5,3,5,5,5,5,5,5,5,5,4,4,4,2,5,4,5,5,5,4,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"quality\":4.594936708860759,\"family\":[{\"_id\":\"rtWB9o6vghtkPDMFX\",\"language\":\"cpp\"},{\"_id\":\"ynzo3DeHCmAXLtpwe\",\"language\":\"java\"},{\"_id\":\"xpGPz3QCAhtsZrWeW\",\"language\":\"javascript\"},{\"_id\":\"88RHBqSA84yT3fdLM\",\"language\":\"python3\"},{\"_id\":\"sHs4XGTL95R2KGT9i\",\"language\":\"ruby\"}]}}"]