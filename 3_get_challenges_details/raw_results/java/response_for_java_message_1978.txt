a["{\"msg\":\"result\",\"id\":\"546\",\"result\":{\"_id\":\"vNszi3mbJA5BhgGFX\",\"archived\":false,\"author\":\"kochug\",\"authorId\":\"vQEmjTRgmdGNYB7yk\",\"code\":\"public class Program {\\n\\tpublic static String[] filterArray(String[] str) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":2.1194029850746268,\"familyId\":\"aQF5DWZZexaWKaHDF\",\"instructions\":\"Create a function that takes an array of non-negative **integers** and **strings** and return a new array without the strings.\\n\\n### Examples\\n```\\nfilterArray([1, 2, \\\"a\\\", \\\"b\\\"]) ➞ [1, 2]\\n\\nfilterArray([1, \\\"a\\\", \\\"b\\\", 0, 15]) ➞ [1, 0, 15]\\n\\nfilterArray([1, 2, \\\"aasf\\\", \\\"1\\\", \\\"123\\\", 123]) ➞ [1, 2, 123]\\n```\\n\\n### Notes\\n- Zero is a non-negative integer.\\n- The given array only has integers and strings.\\n- Numbers in the array should not repeat.\\n- The original order must be maintained.\",\"lab\":\"import static org.hamcrest.core.Is.is;\\nimport org.junit.Test;\\nimport static org.junit.Assert.assertThat;\\n\\npublic class ChallengeTests {\\n\\t@Test\\n\\tpublic void test1() {\\n\\t\\tassertThat(Program.filterArray(new String[]{\\\"1\\\", \\\"2\\\", \\\"a\\\", \\\"b\\\"}), is(new String[]{\\\"1\\\", \\\"2\\\"}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test2() {\\n\\t\\tassertThat(Program.filterArray(new String[]{\\\"1\\\", \\\"a\\\", \\\"b\\\", \\\"0\\\", \\\"15\\\"}), is(new String[]{\\\"1\\\", \\\"0\\\", \\\"15\\\"}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test3() {\\n\\t\\tassertThat(Program.filterArray(new String[]{\\\"1\\\", \\\"2\\\", \\\"aasf\\\", \\\"1\\\", \\\"123\\\", \\\"123\\\"}), is(new String[]{\\\"1\\\", \\\"2\\\", \\\"123\\\"}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test4() {\\n\\t\\tassertThat(Program.filterArray(new String[]{\\\"jsyt\\\", \\\"4\\\", \\\"yt\\\", \\\"6\\\"}), is(new String[]{\\\"4\\\",\\\"6\\\"}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test5() {\\n\\t\\tassertThat(Program.filterArray(new String[]{\\\"r\\\", \\\"5\\\", \\\"y\\\", \\\"e\\\", \\\"8\\\", \\\"9\\\"}), is(new String[]{\\\"5\\\", \\\"8\\\", \\\"9\\\"}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test6() {\\n\\t\\tassertThat(Program.filterArray(new String[]{\\\"a\\\", \\\"e\\\", \\\"i\\\", \\\"o\\\", \\\"u\\\"}), is(new String[]{}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test7() {\\n\\t\\tassertThat(Program.filterArray(new String[]{\\\"4\\\", \\\"z\\\", \\\"f\\\", \\\"5\\\"}), is(new String[]{\\\"4\\\", \\\"5\\\"}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test8() {\\n\\t\\tassertThat(Program.filterArray(new String[]{\\\"abc\\\", \\\"123\\\"}), is(new String[]{\\\"123\\\"}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test9() {\\n\\t\\tassertThat(Program.filterArray(new String[]{\\\"$%^\\\", \\\"567\\\", \\\"&&&\\\"}), is(new String[]{\\\"567\\\"}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test10() {\\n\\t\\tassertThat(Program.filterArray(new String[]{\\\"w\\\", \\\"r\\\", \\\"u\\\", \\\"43\\\", \\\"s\\\", \\\"a\\\", \\\"76\\\", \\\"d\\\", \\\"88\\\"}), is(new String[]{\\\"43\\\", \\\"76\\\", \\\"88\\\"}));\\n\\t}\\n}\",\"language\":\"java\",\"summary\":\"Create a function that takes an array of non-negative integers and strings and return a new array without the strings.\\n\\nExamples\\nfilterArray([1, 2, \\\"a\\\", \\\"b\\\"]) ➞ [1, 2]\\n\\nfilterArray([1, \\\"a\\\", \\\"b\\\", 0, 15]) ➞ [1, 0, 15]\\n\\nfilterArray([1, 2, \\\"aasf\\\", \\\"1\\\", \\\"123\\\", 123]) ➞ [1, 2, 123]\\n\\nNotes\\nZero is a non-negative integer.\\nThe given array only has integers and strings.\",\"tags\":[\"loops\",\"arrays\",\"formatting\"],\"timestamp\":{\"$date\":1523719664169},\"title\":\"Filter out Strings from an Array\",\"stats\":{\"completed\":{\"total\":242,\"ratings\":[1,1,1,1,1,3,2,2,2,1,2,2,1,1,1,2,2,2,1,3,2,1,1,5,2,2,2,0,2,2,0,3,3,2,2,2,1,2,2,2,1,3,2,3,3,1,2,3,3,2,1,3,2,4,3,2,0,3,1,0,2,3,5,3,2,2,1,2,2,2,3,3,1,3,3,3,3,3,2,1,2,1,3,0,3,1,2,2,2,2,3,1,3,2,2,1,3,3,3,1,3,2,2,3,2,2,2,3,2,3,3,3,3,3,1,0,2,3,2,2,2,2,2,1,4,2,3,3,1,1,0,1,3,2,3,0,1,1,2,2,2,2,2,3,1,1,2,3,2,3,0,2,2,2,2,1,3,2,2,3,1,2,3,2,1,3,2,1,4,2,3,2,3,3,3,3,1,2,3,2,3,3,3,3,3,3,2,2,4,3,1,3,2,3,2,3,3,3,3,2,3],\"rators\":[\"vQEmjTRgmdGNYB7yk\",\"hcti8afrkC4abdpqe\",\"6sz7hLqsn3oY7ksdq\",\"wYnrDtjcB3RbGFgbF\",\"8qrDwGdKLsFqoeudF\",\"kDnyAfo56YxmJN7MH\",\"z2crWv2athzYWTBMa\",\"CotyEj3eY9CbwBs2t\",\"M3mkzSYXCpCt2HhC3\",\"vz5LbqWPwpxAejP5k\",\"hKZCo3exwfkhfcty8\",\"D8NKkx5pYSqZxNrp2\",\"iumiEEzgPfm2oJSA2\",\"zMEyen5f2qNu44YaN\",\"Xw9Z48yXjCcPqxYc7\",\"ZuSpr3RhJsLyYzQLJ\",\"GRZzKCbeb4xKHFCrZ\",\"79ZbLzp7xepvkonoh\",\"kxP2G9dmiRzxLuYoB\",\"WXLd6Yr7iWjTpJDRA\",\"fskHo2C2gMKZxPZ5i\",\"zSR2dEYe9MRd5xdrb\",\"rQpthoJte6rreQd4j\",\"fbNWxXTqZy2mXNbGJ\",\"8AJQH2pDjMkmbQexF\",\"TQr37GYEacW9neZES\",\"x5JEs23Tc8ZWw3YAY\",\"GqKjzNcrGScdx86Dv\",\"zzg4QeHq3uzsB4Fde\",\"6iHAmxhqXctKMFBz4\",\"KufLCdP3Ec2iYRyHD\",\"ddfeZ4pbbcXFXqZmY\",\"tW2XYfMDPBbMknTmo\",\"Pgt2dt7kYaQmp2vHC\",\"fvoXRAyhq8WbuRwsS\",\"NYKB5WchQLfjoi4qn\",\"Yu9KG3cvnBTk6jp6h\",\"vB3v3B6kz6Bi7vxez\",\"CcxmWHycy45nGX2cY\",\"LbuPYnqGrL8aa6gHn\",\"6txZnj8BuNWvnZacj\",\"YGYf9GKzaF8CWnDHE\",\"69veWW3FDuprf7ezj\",\"YaAtcMQGvDcF7Nc7F\",\"myrwrpTHtYXiL3kPz\",\"sBAQgme9imkPrH2Xm\",\"mmbsiZPMbsF9t48tH\",\"J5eCfhbLujhmn6JNE\",\"Kc2foqht8pXCDuQPh\",\"StRujMc9NR5upghP4\",\"ubfgmBgcjh55nMaAf\",\"3riR3H5ei3T86EEzz\",\"htc72whTJFZgLzyA4\",\"Bnd6eTsoQyeZcTeFs\",\"qzFMJGxMErfBhExMm\",\"YLqdr7bYjwew2KM4N\",\"uK99RLh3CQ3yur6BQ\",\"epQGqxtyKN5zYJFWP\",\"h4gA73xrDsK6fQmGj\",\"GLWXzMK4cT9iBMaRu\",\"j8SaMv8EimiGAwqug\",\"icHDAhxJaEpdu4XRR\",\"x6riNDuCHM857RP7f\",\"4cWekTSW6skJy43dj\",\"evC88a8DJEtzeNxcN\",\"u437YTqDGSjh49fsY\",\"erJWHqarGkGtPJ3C4\",\"GJXFSHfvKE7qPW2C4\",\"yJyjT7Z2PPQmzzWpP\",\"ye4QaoZY96k76jXB7\",\"dWRyk3Eswtg2L6Qaj\",\"DXS2HfvHG3ozACfnb\",\"z6gRoaKmajaC6FgYb\",\"Dob8Wq6Th4TdwygJq\",\"9dQKfbBJ74tdayzQD\",\"L8KR8FTXXY4o6ynRW\",\"iFZ9ksE5WZHEkNjxt\",\"Zr2pbysK4SeF4B9mu\",\"CwBBXa8awfz8ePtwe\",\"QS5RGoPnapStFD5Gi\",\"QdMda8ZPeux6FcasR\",\"ydos8Ba8nZdYRNJpS\",\"XhzKztoQYYQzZ2c7o\",\"yhk8G8cM3p9JAbfJN\",\"Rwu4rBMXZGWreJdpH\",\"dRpSwgukY2jHSxuwq\",\"a6b7tDTfcvkoGnjL5\",\"5znpaFDoToJtAtF3h\",\"29s9dWyag5m6phKrM\",\"eKEh8g38b5Mmq8dfP\",\"4MWMwGbthkTMu3dkb\",\"a49eNnfRwSMxsDJXf\",\"rJszvdQWvgMvay4dG\",\"XudqK9kvR5ABCypLN\",\"LTHCxsdjqzXpaXShT\",\"vRXuYYBNuHEQ29fbm\",\"quqRRFpj7wirwAd73\",\"3pdgguqZgNDSAJSGm\",\"ZYT9LjgocbP4hzQK5\",\"cG4PEDMMx8jXhWP8T\",\"eXW8reZCCZHQzJjQi\",\"iWCigk2YgWuAcxD9D\",\"HtyyugGP3FnEFv69u\",\"CYt2jTCEuK9dYWruk\",\"zRS8NrFkW6Fv5Cyuj\",\"qRhXvCaA7qgDoeFnr\",\"2NJuDfSqdrF8kHHni\",\"HsFc9PgmpP2X9Fwh9\",\"qvwMoDM9979uimTkC\",\"r9hHZYPQAqJ9DbwLX\",\"rehehi2Tr2mwaEoJE\",\"J9zJq7PMGb6mqzcHW\",\"fZky27mpbfX7soJKa\",\"DkrRKbukuPjeMndgx\",\"xnhBi4BCdJNAXXRvk\",\"Es4eX2stRpyoXeC7f\",\"4RHx3H8EwP2oboW8e\",\"2PR653L4KSN97r534\",\"wbSLghDxkTjiYJrEH\",\"cjxsqXfkAPoadmppi\",\"D9tfoBpEAnP7BSDZb\",\"JFodQijHHdRkkrZvT\",\"C9yBWYcZsjmJYww3K\",\"gGnDsJz5hr2t9MKCF\",\"imoNrk36ozReP939p\",\"etoSR23iELGGgs9rA\",\"jyoLggHk8xQKZuoQC\",\"5seiNqw6ZXoF2GRRd\",\"uYv96ZSpA7tBHoAGX\",\"Wf7nCHS4Gq5tx659h\",\"TrquEHytntLKHA4m2\",\"pBMXMQem6BpSeooYT\",\"f98H9XF8BxpCEcihb\",\"k63LjKkX5p7SYng7C\",\"mfm3gB39arY8Rjb2y\",\"y6kfyYmydcD8tkBk7\",\"rA5nhfhFwfqvmJb6M\",\"q2tzvkrLASvSjkek9\",\"dcW9oK2uRo8h8mBe2\",\"rvojHhKH3DaxotefQ\",\"yv7c4H2jimSKHEjtG\",\"Ym8AjbKGSJooun3nt\",\"hx3ZWiCKNtqwMWFCt\",\"DzvdGwHEjqsX7wyKr\",\"vpeNBjX7zz8rhSWa2\",\"thA79neuEcM3J8ZHr\",\"gXTAie79kiw28tx5u\",\"yXGiiSAR5nBHnH3yr\",\"2xFvy6u3hE4LtCXMD\",\"GiqPq82is4HGWdZHA\",\"rWhXHhzF4W8bea6LP\",\"P5BhjZxyeHQYTNyB9\",\"mQKWauR6b252TmdX4\",\"8Xx8nWXRydHDBGfQf\",\"4NHyP9TLFudCGghZQ\",\"jXTnL3JatkKjoifyb\",\"WA78YvYQLmYo3uoDp\",\"LrgQT4bdiLbHrprXu\",\"MxAhB2af3z3XkSZZn\",\"SExX3m5YftBWmsk2e\",\"pvCNGWe6wKmPsy8u9\",\"cRXX4tFmtXEfjdHk5\",\"T2vhHPhRR96hRizq8\",\"dLoBr8jKECvwKzJXi\",\"738w5PhcgyQQdnza9\",\"DrkR35NqnP9NDLbq6\",\"YqwTDpXzZxtpStdQY\",\"qb2DTmzQj4vNfq5K7\",\"74H6JGSiskcQdvvX6\",\"2Q9WFfMZsWCFyoSsB\",\"uvb3PvJKi7sYziP3N\",\"dA8GpKad7GnQxoBgP\",\"qkzFDd47Exc34jWzm\",\"ojmmLWL7Hvi6yYWeJ\",\"RGN3QTb5LXj4ZPPkj\",\"tDjDygopNyXLZnjAH\",\"QD7mPMD8gmTP56nPv\",\"49caJ2EMfEnPSEYZj\",\"82weQfHHmno4Mq4X7\",\"pCbFsvyiooabCFEgd\",\"eQXwk5zGckM8tCWYH\",\"LNCb5rksJLJ43L4Nw\",\"jyeZPhmfLtysXHswN\",\"tjdXb3Sg5gSxTNeqs\",\"D7dpRtRQDmteDSAXv\",\"Ag5fRrZ9MrAZc9vpj\",\"mRMjjCx5PEbJTec2M\",\"rLSB6bqHgB7ScnFLH\",\"DkSMZ3jZLkwviKb9g\",\"qoH4v8Pie5kfAzKJT\",\"CkDupbJZZZZdhBdr2\",\"zZfMwLuoERGmybgib\",\"s4StnonMoWxe2ECrh\",\"YsMT67aKF2jmFKqur\",\"nek28gfxXJFKKP4LL\",\"tdinF6MRzC6AdNX8g\",\"K3hHFPcX2K5g86XiZ\",\"HXbTKW3jmmyRAsKrr\",\"9j3MDLXnvJZLp3PYk\",\"wTc283wowqsFisKNC\",\"9uEseGvf6zRdfz7tb\",\"563onSvqgjToY79ah\",\"buX4mCQhtXCfBjeno\",\"csRoCgJx5NBJzW8pX\",\"bYHebSRMMihkub2KM\",\"HiNssuYc9Nvyn8A3R\",\"CoQTHAsXDxn6oot3H\",\"wFRLGjA56kj7xyhmv\",\"srJ34BaybkQh3qRkM\",\"htXCitorobtqYymjN\",\"9vyjn4WyWtJ6o2wop\",\"xW9nC9h6p77YT2iso\",\"KMR6vNzvSKMA2cXnK\",\"6rvJwN4mcX7iYGjY7\",\"unqzSsxpxj9sZ7rbD\",\"PAEWysAAFheYiYPBp\",\"CggGfsERnPKGupFWp\",\"uw47663LqPME8btaA\"],\"quality\":[3,4,5,5,4,5,3,3,5,5,5,3,2,5,5,2,4,5,4,3,5]},\"complaints\":{\"total\":0,\"reasons\":[],\"skippers\":[\"vQEmjTRgmdGNYB7yk\"]},\"instructions\":{\"score\":24.29999999999999,\"voters\":[\"dL7gLQfTc7RXFdq7H\",\"hKZCo3exwfkhfcty8\",\"cpqmoNnxDdT9QWHm2\",\"wsqQHPQ4v3XtX7mN7\",\"dpdEQ3HsniHr5Wuac\",\"rWTtR5BFBYQMBSq7G\",\"9nRurh3vGSqKaFJCX\",\"ZJXTnu5WqBhxAubae\",\"kkahSiwvuQkvaFnFq\",\"iyqE74xiDxrxqvstb\",\"vRk3MFN39eaWR2FC2\",\"j9gg82Bp2L7nw7DyJ\",\"sycRNJqHQhyZi3ZmL\",\"WXLd6Yr7iWjTpJDRA\",\"dYXHck6zbpzPTx8K4\",\"qewwiCsG7BaJ43AC6\",\"d5NFDcC6QDphni9Lh\",\"GqKjzNcrGScdx86Dv\",\"2orPWFEdPd2w2xfSM\",\"3gYTrsvXf3SFNGvXs\",\"6iHAmxhqXctKMFBz4\",\"qaR8DnWrTk8Mus5Q2\",\"JccusyWj3uE3oYCGk\",\"YBJiLdHcBPvpEYSJR\",\"yfX9auesPmnc8XYkR\",\"iQhzzoG4PjdjgMuj6\",\"3cSQG4BSRj2iiaSLa\",\"LbuPYnqGrL8aa6gHn\",\"53uZsHpDSXjZ6K8eo\",\"4QHj4RGQ7CgGdYBzq\",\"J3RFGrYLugHTTDxww\",\"mmbsiZPMbsF9t48tH\",\"d4L3YHKMQQhmY6mK5\",\"HEzjAEfEfhHZwJ8Q2\",\"d3zKMRAjK86NW9PHW\",\"jRJF4XfvgawAdXFuR\",\"oKNBTJTFR5uwyEdQ4\",\"NQ287FZrfSY9Swn2F\",\"yN2rtCqLi6Mzm2872\",\"oqjvLAFcBq8cM393J\",\"AjjMuRENxxeK5Xhmv\",\"u9sWR2smqsEG9TPBy\",\"bNhS7nqFdaMRAYMQh\",\"ebndzZQAJZFykHqiE\",\"GLWXzMK4cT9iBMaRu\"]},\"tests\":{\"score\":0,\"voters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.0476190476190474,\"family\":[{\"_id\":\"WMWtKrTpCDGzEcNKi\",\"language\":\"cpp\"},{\"_id\":\"4eSei6t8emzpyMwvu\",\"language\":\"csharp\"},{\"_id\":\"vNszi3mbJA5BhgGFX\",\"language\":\"java\"},{\"_id\":\"b2NdDSdkjqFnCTfS8\",\"language\":\"javascript\"},{\"_id\":\"hxtMWdbQ8M5HeSxd2\",\"language\":\"php\"},{\"_id\":\"nunJurLEibCyn8fzn\",\"language\":\"python3\"},{\"_id\":\"fedJkrTk4pN7L2xeT\",\"language\":\"ruby\"},{\"_id\":\"2HRumptAucPmFFm2n\",\"language\":\"swift\"}]}}"]