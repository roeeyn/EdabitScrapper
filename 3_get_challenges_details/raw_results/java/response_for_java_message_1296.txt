a["{\"msg\":\"result\",\"id\":\"207\",\"result\":{\"_id\":\"NrMGhrarTfpYSbr84\",\"archived\":false,\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"class Challenge {\\n  public static String getMiddle(String word) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":1.0985915492957747,\"familyId\":\"JvuDXcRoTK4ZdCCPS\",\"instructions\":\"Create a function that takes a string and returns the middle character(s). If the word's length is odd, return the middle character. If the word's length is even, return the middle two characters.\\n\\n### Examples\\n```\\ngetMiddle(\\\"test\\\") ➞ \\\"es\\\"\\n\\ngetMiddle(\\\"testing\\\") ➞ \\\"t\\\"\\n\\ngetMiddle(\\\"middle\\\") ➞ \\\"dd\\\"\\n\\ngetMiddle(\\\"A\\\") ➞ \\\"A\\\"\\n```\\n\\n### Notes\\nAll test cases contain a single word (as a string).\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\nimport java.util.Random;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n\\t\\tassertEquals(\\\"es\\\", Challenge.getMiddle(\\\"test\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n\\t\\tassertEquals(\\\"t\\\", Challenge.getMiddle(\\\"testing\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n\\t\\tassertEquals(\\\"dd\\\", Challenge.getMiddle(\\\"middle\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n\\t\\tassertEquals(\\\"A\\\", Challenge.getMiddle(\\\"A\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n\\t\\tassertEquals(\\\"bi\\\", Challenge.getMiddle(\\\"inhabitant\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n\\t\\tassertEquals(\\\"o\\\", Challenge.getMiddle(\\\"brown\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n\\t\\tassertEquals(\\\"aw\\\", Challenge.getMiddle(\\\"pawn\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n\\t\\tassertEquals(\\\"i\\\", Challenge.getMiddle(\\\"cabinet\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test9() {\\n\\t\\tassertEquals(\\\"e\\\", Challenge.getMiddle(\\\"fresh\\\"));\\n  }\\n  \\n  private String middle(String word) {\\n    int mid = word.length() / 2;\\n    return (word.length() % 2 == 1 ? word.substring(mid, mid+1) : word.substring(mid-1, mid+1));\\n  }\\n  \\n  @Test\\n  public void randTests() {\\n    Random randGen = new Random();\\n    String alph = \\\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\\";\\n    for (int i = 0; i < 50; i++) {\\n      int randLength = randGen.nextInt(1000)+1;\\n      String testWord = \\\"\\\";\\n      for (int e = 0; e < randLength; e++) {\\n        int alphI = randGen.nextInt(alph.length());\\n        testWord += alph.substring(alphI, alphI+1);\\n      }\\n      String expected = middle(testWord);\\n      String actual = Challenge.getMiddle(testWord);\\n      assertEquals(\\\"Middle of \\\" + testWord + \\\" is \\\" + expected + \\\" not \\\" + actual, expected, actual);\\n    }\\n  }\\n}\",\"language\":\"java\",\"summary\":\"Create a function that takes a string and returns the middle character(s). If the word's length is odd, return the middle character. If the word's length is even, return the middle two characters.\\n\\nExamples\\ngetMiddle(\\\"test\\\") ➞ \\\"es\\\"\\n\\ngetMiddle(\\\"testing\\\") ➞ \\\"t\\\"\\n\\ngetMiddle(\\\"middle\\\") ➞ \\\"dd\\\"\\n\\ngetMiddle(\\\"A\\\") ➞ \\\"A\\\"\\n\\nNotes\\nAll test cases contain a single word (as a st\",\"tags\":[\"strings\",\"formatting\",\"math\",\"regex\"],\"timestamp\":{\"$date\":1494731186948},\"title\":\"Return the Middle Character(s) of a String\",\"stats\":{\"completed\":{\"total\":578,\"ratings\":[1,1,1,1,1,0,0,0,2,1,2,1,0,1,0,1,1,1,1,0,1,1,2,2,1,1,0,0,1,1,1,0,2,1,1,1,2,1,0,2,0,1,1,1,0,1,0,0,2,1,0,0,1,1,1,0,1,2,1,2,3,2,1,1,1,1,0,1,1,1,1,2,1,1,2,0,1,2,0,1,2,1,1,0,1,2,1,1,0,0,1,3,0,2,0,1,1,2,0,2,4,1,2,1,1,1,3,1,2,1,1,0,2,1,1,2,0,1,1,1,1,1,1,1,1,1,1,2,2,2,2,1,1,1,1,2,0,2,2,1,2,0,0,1,1,1,1,1,0,0,1,1,0,1,0,1,1,5,1,1,1,2,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,2,1,2,0,1,0,0,1,0,2,2,0,1,1,0,0,2,0,1,2,1,2,1,1,2,1,1,2,0,1,0,1,1,2,0,2,1,2,0,2,2,2,1,1,1,1,0,2,2,1,2,2,2,1,0,3,0,1,1,0,1,0,4,2,0,2,1,1,1,1,2,2,1,1,3,1,1,2,1,2,0,0,1,2,0,0,0,2,1,3,1,1,2,2,1,0,1,0,2,2,1,0,1,1,1,1,1,1,1,3,0,1,1,1,1,3,0,1,1,0,1,1,1,1,0,1,0,1,2,1,1,1,0,1,2,1,1,0,1,0,3,0,2,0,1,2,1,1,2,1,1,1,0,0,1,2,1,2,1,0,0,0,2,1,2,5,0,1,0,1,1,2,1,3,0,4,1,3,2,0,0,2,0,3,2,1,1,1,3,2,1,0,0,0,5,1,1,2,1,1,1,1,1,2,1,0,0,1,1,2,1,0,2,2,1,2,1,1,1,3,2,2,0,3,1,1,1,1,2,0,0,2,2,0,1,1,2,1,1,0,2,2,1,1,2,1,1,3,1,1,2,0,1,1,0,0,1,0,1,0,2,0,2,2,0,1,0,0,1,1,2,3,2,1,1,0,1,1,1,1,1,2,0,2,1,1,1,1,1,0,1,1,0,2,1,1,2,1,1,1,2,1,1,1,1,1,0,0,1,1,1,1,1,1,2,0,1],\"rators\":[\"BkPgkDQGHm66X4Qai\",\"hi7Hvtq2mJfkXEGF2\",\"BZDQAHr9Lxqmc98FW\",\"p44eSxaNvwqkHx4jf\",\"szBiDxoXfvrtSjik3\",\"Q8PSC64qrcGNgo2D6\",\"wAhJniPifkcpCwLmw\",\"JNt3ncscg6azXj56L\",\"stfP2bqdanX6R2QvH\",\"sYvTftg3JdM4HJAtg\",\"XHngE5iScvztMpnR2\",\"htKWbyp6jyY8CuW3q\",\"iuCxiyQ5MPcfviXa3\",\"2cpi4cuAohhFJavZq\",\"fbNWxXTqZy2mXNbGJ\",\"stWaQ9rjvsRR6EjiJ\",\"2PyMJyvMYLJG2zjZq\",\"9kH3aCBwKmRTqnvD7\",\"AHuPZEaTZJE2gwhWY\",\"dbzJrP2PqEDckBnbN\",\"nrE4mJLrGXJMhsX6K\",\"jjmQj9dXEjkQvvb55\",\"Rj7KFCRk5tn5hXL28\",\"z6nQSSKTnJoTJG6GR\",\"inivfJNAvXbZS5Qdk\",\"hcti8afrkC4abdpqe\",\"sBAQgme9imkPrH2Xm\",\"RkXfoeQFNzfw5rdug\",\"ZPScFrqNxhoD6ScEm\",\"ib9Ajq6QMmKFiysB2\",\"ZuSpr3RhJsLyYzQLJ\",\"5PXxhR3Bctqox3PE6\",\"agtC5JGNqaWBAWCzz\",\"z2crWv2athzYWTBMa\",\"iRgkGNCNtoPKC25EY\",\"ogAtfiy94gCF9742d\",\"dJcfh6gASjPCWEBoe\",\"JTHtJPYJp4ypAxfNj\",\"KSHwLv3Ryafvy2eS6\",\"tX4WcqvYS7vkoKHKm\",\"iumiEEzgPfm2oJSA2\",\"CXtgfPRAYL3PZ6JeK\",\"BgQpycHDeTFCKmdkN\",\"hfxANdjdEaDpumi4g\",\"sb9xfoLgHivsTTFCN\",\"7zaKZkjCwfsqrmZFW\",\"QiKGftY3qFAsv8GCG\",\"vz5LbqWPwpxAejP5k\",\"Ad2qqicM2QQpdHDh3\",\"M3mkzSYXCpCt2HhC3\",\"JxzjEmkSWioPkNrmq\",\"bP2GcW9sGX8q2DsER\",\"7LrgrixSzJxiGaF66\",\"ZxAFKJ29xP69WNuhq\",\"6gKgLfS6kC9GQgDJn\",\"GRZzKCbeb4xKHFCrZ\",\"PrNvovCJijRvdek6z\",\"AD6gXTWYwsPZjATKx\",\"BuFw8zHWYAsMvz7k8\",\"PWMTnS7MfowscMscr\",\"rQpthoJte6rreQd4j\",\"fskHo2C2gMKZxPZ5i\",\"R3Yvf7z4HzQo2fBFb\",\"79ZbLzp7xepvkonoh\",\"CaoBNxekPwAD9Lsyc\",\"eFyhwsTXfCzMKfyyM\",\"HMsNcmKfuahhGChMf\",\"7Zv73zfjMQGfryRPm\",\"RdBk3B6fYhT5AR25b\",\"zSR2dEYe9MRd5xdrb\",\"we32tFXq3AoRuprwd\",\"64nBzk3rHDtM7MT3r\",\"DNhy6nWDiWRP2c6as\",\"x5JEs23Tc8ZWw3YAY\",\"z3HbZkmL5echimwFQ\",\"EysbGKHq74r3yw8gC\",\"GqKjzNcrGScdx86Dv\",\"GKzvo4KZ3pbaW2MxL\",\"9eGzCN2guDdJYrw7m\",\"RvMvX95stjaNoEgf8\",\"4ybZ8kecZ2ojyAQBp\",\"ddfeZ4pbbcXFXqZmY\",\"Sm2J8ZvpXARgFy9WJ\",\"sjngWfShdeS3jYEpZ\",\"pzNideH44affosJNy\",\"7yTWwspi6f7maXWRj\",\"tW2XYfMDPBbMknTmo\",\"AfiYSAkd4PtCAq6MF\",\"sCwKN9uQ36AQc24jb\",\"LmSG3XB2Nw7cCMrZb\",\"rGaSpN5mGX7om5Rh9\",\"74zXNB4jwSQ7agXCe\",\"79x9hFu3rkQXNRpG4\",\"szu9z8g37TgJxoNZS\",\"KMdpTq6EfLsCFGZE4\",\"xGJnf5K4RWz9cozQk\",\"6txZnj8BuNWvnZacj\",\"zovXwG27gzSSW7cia\",\"CcxmWHycy45nGX2cY\",\"aSvAujPRADKbk9p8A\",\"9w8LWqMrSHrxxZXZx\",\"acQqozPi6NiCFqMGY\",\"7KME3Qy3At9mJvFgs\",\"GDD2d2pG5ZzABaKnp\",\"RHr6NLgaGSGh6NWea\",\"vTxMZ7yTfdSqGovhZ\",\"AGxRwYsJcb463YnHy\",\"YGYf9GKzaF8CWnDHE\",\"8AJQH2pDjMkmbQexF\",\"bGHDgwkiAp7RjBiYo\",\"Kc2foqht8pXCDuQPh\",\"zP84vhK6yKs3q7xtk\",\"JvcakCu2TnmozRSMA\",\"9hK6CreMyf3LNiRrf\",\"xRdr58dKJxmmu6NXG\",\"LmXivLsFQQkrDDtBJ\",\"uigcF8wgYBpc9c6bs\",\"CDc255P9KitqXNeXr\",\"ZrJwpZKQoWygGAHvy\",\"vtosp2wmv3bJ9Qgio\",\"qzFMJGxMErfBhExMm\",\"ycoKGsjQAFtZTJ73A\",\"oHhfYkiMoGNwEhAcr\",\"SGi4g8438DQRjJ859\",\"FvMmXyRahRGCkqvsE\",\"uK99RLh3CQ3yur6BQ\",\"EJFJQdyqNvcH3zBS4\",\"QSmj9J8McjsH3FM7N\",\"L8TD5m6QcbJG7FzjG\",\"hCoyBFeNMdaC88ZFi\",\"fpJdrQR7mHDis5xGx\",\"ywgSbAqkCj38KuaW8\",\"g4K6nM72TtXLKog5x\",\"q9sgRRE2tTGe89YKs\",\"29s9dWyag5m6phKrM\",\"niz9xRvhYCLYvGJnW\",\"mNMQvcxKSSvqqMYCH\",\"yJyjT7Z2PPQmzzWpP\",\"erJWHqarGkGtPJ3C4\",\"Ss6c4XQXgxD5kS3wW\",\"FzuDgejj4nf9M2Zwq\",\"uvDqouJjQp2P3zeM6\",\"2uaNy5h4xatNb5Mww\",\"34rKGZYu7vEdoCu7d\",\"3PWKkaQ34Mwpje73F\",\"6akGaXW83HnSC5PSy\",\"5znpaFDoToJtAtF3h\",\"vew4EJaM4jGBsvnTp\",\"QS5RGoPnapStFD5Gi\",\"T6j7qdvD37y8DLKzT\",\"ydos8Ba8nZdYRNJpS\",\"CDkkdvDdqjDihTcFS\",\"veu3fKkK2DSkKTkb2\",\"cp3X8hk8yNME7qoD9\",\"JSSLvJPs8JebyfeS9\",\"vRXuYYBNuHEQ29fbm\",\"ZzwR8m8Q6Gozo9ofz\",\"qGFqqzbwxiz7kZkPW\",\"a49eNnfRwSMxsDJXf\",\"LQ9T6dPa3nXcZdbZq\",\"8J2Dqqz9PaFufQzwY\",\"aMNhTh35QQAs33ycQ\",\"o5H3aMNucmwhnsWdL\",\"Yt3hCM2SdzhMYRqHj\",\"Yohr2MmAyaWGMbB35\",\"H5QAneaQBQvpHrmmh\",\"mrKDTFeqRM7r9ZPJv\",\"3pdgguqZgNDSAJSGm\",\"sxci7DYKNa6q22Sjq\",\"9c8n7ti5vCjTRgiGN\",\"FocLpCB2WEiK2gGni\",\"jb9RLyyuo565bKDzN\",\"t2kdBPj9qQAXY2Ehd\",\"3gxJoNp59B4eoyyed\",\"vMXAzjzvfPaM6NejG\",\"cG4PEDMMx8jXhWP8T\",\"teCeoNkdeQEciPZ7H\",\"Ha5J49rhojBRy3BaM\",\"8rF6PHMSaybTDsvXr\",\"LvPcgns5Ec7wyMbMv\",\"phA6MomRzh9oz3eqn\",\"sb7Nh56pPFtPxLogT\",\"ZBDiEMi7dbjRL55LB\",\"Eqt2WZ9iPdhM6Ma9Q\",\"jNcwk4jksmPTcAoTu\",\"jbWjmMTs5iJY93mhy\",\"viQwZYpKbEFmfjpTe\",\"yazNfwgLx7jSAZ8Tv\",\"uHcTzHHNNKJefPQ9y\",\"ZiozQXopCXKLkQMfC\",\"8nwZg8kkbZfKYH6vg\",\"SPwToBogcJmdYmFyG\",\"3EQS5uiiiPqzdYPNE\",\"ho2xwFjGfg6WwQArS\",\"tuw4ns5eG9WKzrddC\",\"8gJEpXHctGqC9ngcJ\",\"gXMfzkYnoTZXXemY8\",\"WPWBKqdkzkeGpgFR2\",\"mKSsw54bbAX8WcPYx\",\"Gq9x9GKbssg4NjXcj\",\"iR6YHZipKvHtAiR6m\",\"qjh9QdweLqQDP9NHP\",\"C6SHNpJDxTRmF4cs3\",\"C5CX97m3ZizGcFzJ8\",\"pXQRvJWB6NLzYmy2D\",\"p4KXbYG8ddyCQrbAs\",\"SY53jSpd7FA4RJX7L\",\"bBF9vJ98jqe7zpFjW\",\"3HdKybo55cAutdxB2\",\"XJsankyB4bBeK2eJv\",\"pr4Cm4A369tC9gSeT\",\"CLmJduqJHX83dM4Pd\",\"ybKny9NBc3i9fATk6\",\"7p3Btn9oRNStAZ8G6\",\"n6N2dYX8MghgDtjx7\",\"AbRtpsS7PDMMLuAfp\",\"3KjxQu9RZ8ZSywvLz\",\"zh9GGSpmAnDvdARMv\",\"kSK8CxBknnMZJCHzz\",\"3XvbdaPm47SaJtzrC\",\"aXoxeoMC74i7NiqAB\",\"8JyqsSbN2FJXPr3cw\",\"nWviytG3HcAYxGjg7\",\"63mo47CoSdyJs3Dgm\",\"iJnqYBp3CLPXhHxpY\",\"8yAeQA7QyQCvqKXRC\",\"J9zJq7PMGb6mqzcHW\",\"CggGfsERnPKGupFWp\",\"Dedjx9nWmegK4nfKR\",\"Xwu7yQJzMsErCa9X7\",\"s2G7xhbjaNdkGbhRX\",\"Xf5mRzAb6BoGp7daC\",\"supEsRyet9ow5W6qg\",\"qJZsi5rhRnWA38FbA\",\"Md3zwe6ZCp4vqdx5j\",\"4TjQnBEsnXWDcDytr\",\"u4yanfWeeZsN3xWgc\",\"s8o9ptNnpNGktBWdX\",\"4L8YoXiEWJuYaedDa\",\"C9yBWYcZsjmJYww3K\",\"tmcjBArYTgRPxCWpM\",\"5TaPWyRv9DZWWodp8\",\"fxaS5K7ZXo4FbTe36\",\"cwfpQQAowCJCE3zME\",\"mQqXtagpD5iMw64Hf\",\"rWhXHhzF4W8bea6LP\",\"AyrEvM2GLX2jqM772\",\"qx9XHErKygcLiFGhX\",\"yfjeCXWoRnXQhJAvk\",\"x9A83cZkyA7E7utn3\",\"D3ASM3aWpcQ8gvnin\",\"2cdvd8yuPLSwvGj9w\",\"gp77RykRkHQtqbE9C\",\"JMh7pkAJMA3P5B9uu\",\"Z988BnMH9vd8epArK\",\"rux435qWn8kcEAvG8\",\"fZjkX29nhRTWWb75k\",\"uw47663LqPME8btaA\",\"W347YkKWzfvMbkuHr\",\"EdX9XJTJjEDaqPDfp\",\"5RcAXjQAbqQtWppy6\",\"YLwJkF2wuL3n9o6a2\",\"ko7oJ85JMftgcbkrr\",\"M5n9zd5LtuuwJr668\",\"5Kf9z3G9QBs9fkvLs\",\"PqAepaMciyBb7QQRK\",\"PJK5oeYq4rJNtTRbH\",\"EZNT8B7yQnnZmuwCf\",\"i5QeAsrM4m6hzPTku\",\"gJYHiyyMv6mhqFehP\",\"jRqY4i8gPemsZMBGf\",\"uqNAu5PZnSDRqZKoN\",\"WuAkXKpcrQy867yCw\",\"S8NaYMWB3aZXgRdvH\",\"xA7nZb76wDpxmHSt4\",\"eZjHwgBfkQPCxmutr\",\"Es4eX2stRpyoXeC7f\",\"oeEDPQaCwHFFXsrny\",\"xEuitW7gMaqzhq6x8\",\"j2hKJg9sh9m3HWFgo\",\"khoPgLrt7u5BeXywg\",\"gGnDsJz5hr2t9MKCF\",\"DzvdGwHEjqsX7wyKr\",\"g3MReD5ntBtecotoa\",\"PgSrAtgBYoKNgYJtS\",\"f6uGKbmMdBYCjrMBh\",\"wYYMNPe8nSiJFbvJw\",\"x3mXE5b2Rk523ZF54\",\"PXBjtEAAwibHxNZXq\",\"XPhLf7JYc6mmBYR9A\",\"ye5Krzmpgt8keXCnx\",\"eWaq9hCBYq4oQYgEx\",\"uYv96ZSpA7tBHoAGX\",\"rTj67TTydxqkpwFtN\",\"Xc4m9Hst8SgXswpTh\",\"mdEQJ2fmGmkbhbvNw\",\"jDTGwryGygbZiqCEg\",\"cGebawowzCKcFn8gq\",\"aGmi6SaZpcYsu5MQb\",\"Kso7rzAKB4TTCPKgM\",\"YFHkjbM6obMSj24zi\",\"Zvu2nty8qKdBDBvM4\",\"bw6kHP3k8dP2qBa5v\",\"82weQfHHmno4Mq4X7\",\"SpRzG9KcCxQWoHbpP\",\"cdcYSPc8rGJZrMnfS\",\"hB5mgzMwQSnhBzi7P\",\"GEzaJZ2cPjENT4ERQ\",\"jyoLggHk8xQKZuoQC\",\"5seiNqw6ZXoF2GRRd\",\"8zZ6xmzpiFair25qr\",\"Yp7uvStL97cC9fKkY\",\"tqSJxy6E4vaTyECkh\",\"PaSg9dpK6JHre7hGF\",\"DzLdw6wEL2Nt5mrsp\",\"B4pxRqzo43M7S8FbP\",\"TrquEHytntLKHA4m2\",\"WZujpe8yQAyZmpWHg\",\"F4synR7Ea8yS2L576\",\"3qggY3TrN3xNaMDBp\",\"DePiAS7u5Pk9d6SLr\",\"P7zedbjaFw8YDzLz7\",\"zeE9TvhkPfebAq9n8\",\"meS77LKqRswhF5LAy\",\"htXCitorobtqYymjN\",\"etoSR23iELGGgs9rA\",\"5CqetHYvJ5Zb2uzmB\",\"y6kfyYmydcD8tkBk7\",\"zwruFCmuHkwJTpYqg\",\"ZQEo2nzPtJHGx2cM7\",\"Yom3RzkMYpweE8cbS\",\"DkSMZ3jZLkwviKb9g\",\"rvojHhKH3DaxotefQ\",\"GEDsDpNX4QMhZAxtJ\",\"hhxjQREtmHSheH9Pj\",\"EcKPDmD4GmeFJGDTL\",\"45FXSeKSLChn3gEhc\",\"AeJSxRqw2dJZuGvdk\",\"8SabHk4meXzHQWaLb\",\"cR3ibTMxLyEdDFCHY\",\"q2tzvkrLASvSjkek9\",\"ymEurxGmZjyRwqt4E\",\"yyNpL4ogJHEtWHfyP\",\"Ctuq7Wc8QPQmzwPK3\",\"Zhy5X7BZnqk8hacEw\",\"QXkrEiAuhuXaZmL4C\",\"PHkmuovANGzadceGW\",\"8paynGt66tAKJivFF\",\"osXNzc2aCxspRwheS\",\"3unLGuwC6Tnoy8BtK\",\"g4NCSxxHqHCGMpWwT\",\"9KAbm9niQ9Cv9LefP\",\"muXMnzQwGLzN6j2Jr\",\"ZMd8it647JSYTvx8Z\",\"DAQX9mhHdMTqyYbvh\",\"5k2ij6wHTSzBpgCky\",\"vEN56nHw7hTxbyHhp\",\"7Wq4ZNz5c3irDR6br\",\"9pCPyhvQmbkWyD2LL\",\"w8nt7MwYJg95RuuZd\",\"hx3ZWiCKNtqwMWFCt\",\"jLv4ckjWQwHRAiYKT\",\"KxLMWekCxzy2Eem7u\",\"YcjwCvYut6834Jzd8\",\"BxQgimG6o9YY3irvR\",\"ZXWDtCrM9ev3439oi\",\"myPiB7Efg4e8kLtkx\",\"uqnjMLLae4heAZNNe\",\"Fd9765rksgPK4E2Zy\",\"ENPyXmYYuQuZZAgRz\",\"ZiN6yB9rACMaYgseC\",\"hPx9H3YM8j2k94DNW\",\"3gsee8akczMZGhihG\",\"fRYcPHuyEdqngMzC4\",\"35FLKaQ7LJdA7pJZG\",\"yb8T3nuL4evaeJW6k\",\"kQRtmSZfHdSzFserc\",\"pi76g3eRpnKrhee2a\",\"RLpAS54SrhbbZFTwq\",\"8AvGnwLnDrHXAwX38\",\"G5gK5FP7JWFwxdiri\",\"qTXNwXBDtH3j6t7hw\",\"bjKYBdDcGMRTfooBs\",\"zTEKMLMevG8xfxEj6\",\"ydF8Re5wK8MmaDbLh\",\"a777e8chPvJkY3tKa\",\"SfmXqCfDksMb883DC\",\"ygmKmjF4ja52BrNMR\",\"J7epB3qSQJ2E8vWkY\",\"hDeaTsprkH6CmvSAR\",\"JszPst3958te56jFk\",\"bHrbD9BgxEiLgDFnM\",\"ZjEdErENicjeqKZ8g\",\"gXTAie79kiw28tx5u\",\"7F3i3uNDxhZM6mckM\",\"6ehQMeGtrhnhot5zK\",\"9amCEoE43AdSneJZ7\",\"ttmhui2Euek65eYhe\",\"2KGpTFehTWcFASuRj\",\"h8TPaYSrD6pkrazpJ\",\"xv5obFhsxY93mqR5S\",\"7gBLtxKryhTryH5zb\",\"bWWFscsAr66ZWHo28\",\"NdLzb3BZ5J8ftnCkS\",\"THTnW75kBggw2qqta\",\"cJmmvnmJSXvBXtydi\",\"32uy2LgegdmLGpebX\",\"PmfzvaX5ZJscpvHXc\",\"cueHAmTrcWuowXf58\",\"QRWdqFpjPr4etPwdi\",\"P5BhjZxyeHQYTNyB9\",\"jXTnL3JatkKjoifyb\",\"mG8HqKiAQFTdRZthG\",\"oMfq73A434YWhSuWQ\",\"8Xx8nWXRydHDBGfQf\",\"Tf7TJFSPktJBgLA4k\",\"Ym8AjbKGSJooun3nt\",\"tyLS9T6YMfg9fMtYJ\",\"aHqxyQCEtWZgczYEv\",\"gGa78GqXuPgmhqaGo\",\"LcupLYmJYLitWy35W\",\"eyvHBQ3fpSHwKniZP\",\"eQXwk5zGckM8tCWYH\",\"NQ4btGLfcvAnXjAyP\",\"zTM2NbjE6q5Q2HSeF\",\"8wkQj36S6ZCH5u8d3\",\"mQKWauR6b252TmdX4\",\"3EfDGZ9Sgz5zxzD7a\",\"rcvmayp8iSXxxEyMj\",\"ikxSkiQjCjYPsFwMT\",\"47PyFbZyxWuP9Bgga\",\"CNc6rmwhbxkxEhHAp\",\"fD2vkjhwWmxbs3aAn\",\"zZJnquegZvRuvFvep\",\"uNK8tLSseShR8wcA4\",\"oth47e7A8TopBYdjr\",\"PAiLeppKXAZDuRokt\",\"mYtKxYPbLLnePeJH3\",\"W56bWmpQeLJ9JEDsa\",\"AK74g2wkFLuAqmnbx\",\"m8RTLuXqmythXHYZt\",\"LrgQT4bdiLbHrprXu\",\"RGN3QTb5LXj4ZPPkj\",\"44arJN5SYx3HyfetA\",\"FrorBN8wRAoptuxtR\",\"5jDgvkGd4JwatrYXg\",\"Yj7ftjzyP67R5NFrH\",\"oS2hDNjCMAkogigEK\",\"dW5zPnx7c4jwuid3k\",\"uFfEio8nzDvL8emhp\",\"XcLNNDa5gDSyrgKtv\",\"LCuvvWMwiGuqTwNRi\",\"PJu3WcTpfRrvHfQiS\",\"Wi4H6ayKsNDWWQCG5\",\"7LzbahrBpunnAMg4M\",\"h96FRTLbu79gbRLZv\",\"gGwDyEJeAMCrbhprW\",\"GDQNakhHMtureqf3c\",\"kaSirKnRwXvGfe6ru\",\"nhppnmu2Nn2bxmLph\",\"WMnB4KYRg37wEXxMG\",\"hibYcdCWPdTvsoudG\",\"tTLCwQx2SYwPXSgq6\",\"aBQAJwaHTY4pLzzYt\",\"M7xA5ssDdWrkvaFkj\",\"NTKM7uBiackQQKrmN\",\"KNXNybZDXDXLDPTb5\",\"FbaQoMJPTNFFRLcd5\",\"jH6j2X4HFKuyGFyRp\",\"vh8Bcpmy4J9cy648m\",\"JYsASoJtjpG6yiesT\",\"Y6N5mCB4KjcLeFFDK\",\"Mmi7ByNfsjNBBo6uQ\",\"rSpyFwaEPSCZMryBS\",\"gcao6ZiaECyZG7F9W\",\"3SgSNoAB3sxaYeT3w\",\"eExcg2NZs4EvioZ4p\",\"N3tyYcBfjKQmSmDvf\",\"QaQqGZwvNzeh98HoE\",\"yd5PakB2z33q2JrTZ\",\"CZPjJRnvSC59BB5Lw\",\"D9Xr9gFZYwWrqL2Wa\",\"j2Nrig4mibTepABEq\",\"d6wdwygWKkCLuDdij\",\"MGojDC6LGPeeMb39r\",\"NnymXePpDaZnp2fRd\",\"Pnv2sDh2Q9FCgkM4s\",\"FDDHFt62oyCbw7QWE\",\"iY7Hu2p3miMKsCbrn\",\"Ln5Ktpm8Zgxgdtgww\",\"AuhEnvXWL72cDtAQQ\",\"btabi3PdyisuY5tn9\",\"e4mqBe8LCCoNhjXeh\",\"f3RAbWvE6uESq7KE5\",\"QywqY9us8Xjsck6gH\",\"W8PoYTfKfNwzCWbui\",\"P5qFWmHtGZip3KyHr\",\"zZfMwLuoERGmybgib\",\"BbPpwoHJuDnw5Qb9v\",\"GkYtSbQuheBF4Enys\",\"QRv96jmNaYsWkxQEG\",\"E2hpke7mHxAWsw5t9\",\"buX4mCQhtXCfBjeno\",\"a6fgDQTddtZCKfnzR\",\"xEX3TDY6C2h82dJTn\",\"8qNSPHZBpmjSTt3tH\",\"4ySzqKC5s3ZRpG9di\",\"tdinF6MRzC6AdNX8g\",\"nAuhwzeaxm62fF6Mi\",\"SgPjF69J25jT3dn4X\",\"HsFc9PgmpP2X9Fwh9\",\"HXbTKW3jmmyRAsKrr\",\"GaJNJwcdyB9ueYFst\",\"5LDvZHCDJqePeBrCg\",\"rhS8qXRjZcpDXkwnE\",\"TCvpT4EPb8qNssNB7\",\"zTtKiCbLWzaf2Yjo4\",\"mfm3gB39arY8Rjb2y\",\"wTc283wowqsFisKNC\",\"mfC226SFKrTCKDJGR\",\"pYonfGP4u9HNL9Z32\",\"wFRLGjA56kj7xyhmv\",\"srJ34BaybkQh3qRkM\",\"jCjCvyhqhpebkJn34\",\"nSLvkGEpiYCtcBLaa\",\"Wuqu3gekPrAqMiMHa\",\"afvP29FhRou2bTaav\",\"uiNKqQKw6TzB3kAju\",\"KMR6vNzvSKMA2cXnK\",\"JdC3h24bKrW6KDZX5\",\"KPz93xbvJ9x7okGs6\",\"yr822PZmmiDDenxpB\",\"RsujLHaML6L3KinzK\",\"PPdaczxSt2u5cmZYG\",\"MFXS4qNtxJw9XmZZh\",\"c7uBxu2rgY77H5d79\",\"5HGyJtoZ3AffzAZAv\",\"dCNJAT6r8CDuobBi8\",\"QMcxci638CgTJ54bH\",\"FNYPC36yqPmTKDaqR\",\"XH6378Zm3WBm679yx\",\"ckQwFFWyLXmDQAaCn\",\"iLrtRGuyCBMzBot9X\",\"L2QnqXfSRF8Q3dgmP\",\"unqzSsxpxj9sZ7rbD\",\"ekzGKngknJdSLHM7P\",\"H3XLNCWB5yXt5YYXn\",\"974cv448kw6Wu2JF6\",\"aJLTQjSMpFy6dvom5\",\"eXQziXGcpwekMyABQ\",\"jTBjBTEWv8mSqTZBp\",\"AzzzwpNTQgGrMyatx\",\"nFbmNzMQ38TncmfQX\",\"3Gf7ikLijfoxabiPY\"],\"quality\":[5,4,5,5,5,5,5,5,5,5,5,4,5,4,5,5,5,4,5,5,5,5,5,5,5,3,5,4,3,5,5,5,5,5,5,3,5,4,3,5,5,5,5,5,3,5,4,5,5,5,5,5,5,5,5,5,4,5,5,5,5]},\"complaints\":{\"total\":3,\"reasons\":[[\"confusing\",\"bad_resources\",\"bug\",\"spam\"]],\"skippers\":[\"BkPgkDQGHm66X4Qai\",\"7jW2cbroTCixCLoBc\"]},\"instructions\":{\"score\":57.75000000000001,\"voters\":[\"dJcfh6gASjPCWEBoe\",\"JTHtJPYJp4ypAxfNj\",\"p3v3A4hWokCjW7vSf\",\"K7mLGFHeSPCMCtqG5\",\"dYXHck6zbpzPTx8K4\",\"Y4zyRFBYCJE2n4hAk\",\"rWTtR5BFBYQMBSq7G\",\"j9gg82Bp2L7nw7DyJ\",\"muXapDQzqtqsguWxp\",\"wZRTRNEGZfSzv5njp\",\"aC8WyBWcTGCemdta3\",\"hCRQLxQFiuH6cTWA9\",\"4QHj4RGQ7CgGdYBzq\",\"9qoWqLcHGiDX429rE\",\"nxCRcZQknHp8wP2v4\",\"duR8GTEnnG35B5CjK\",\"AeSmk2XWGcTLHB7PJ\",\"vv9J9NpWozSETF9pu\"]},\"tests\":{\"score\":0,\"voters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.704918032786885,\"isFree\":false,\"family\":[{\"_id\":\"p3SCSXaWQLWpvqCYZ\",\"language\":\"cpp\"},{\"_id\":\"JF25KTZEcPzXhBvpM\",\"language\":\"csharp\"},{\"_id\":\"NrMGhrarTfpYSbr84\",\"language\":\"java\"},{\"_id\":\"R3649PDvoFf6wGxyg\",\"language\":\"javascript\"},{\"_id\":\"Y4j7QxYEvAMWT8vxF\",\"language\":\"php\"},{\"_id\":\"527uLRjSofaTsMu36\",\"language\":\"python3\"},{\"_id\":\"XezofkC8SBQRozCvz\",\"language\":\"ruby\"},{\"_id\":\"n4T4H7GyY5TyDYY9b\",\"language\":\"swift\"}]}}"]