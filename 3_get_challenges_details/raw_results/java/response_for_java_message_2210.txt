a["{\"msg\":\"result\",\"id\":\"662\",\"result\":{\"_id\":\"JLQ4upWrq5LkzdhPE\",\"author\":\"Mateusz Mędrowski\",\"authorId\":\"hPx9H3YM8j2k94DNW\",\"code\":\"public class Challenge {\\n  public static int NumberOfDays(int cost, int savings, int start) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":2.542372881355932,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"EK49uoxP42fzTKy9A\",\"instructions\":\"John wants to save money for his first car. He puts money in his piggy bank **every day**. Every day, he puts in $1 more than the previous day. Every Monday he starts with a new value \u2060— $1 more than the previous Monday.\\n\\n#### Week 1 (starting at $1)\\nDay | Amount | Sum\\n:--- | --- | ---\\nMonday | $1 | $1\\nTuesday | $2 | $3\\nWednesday | $3 | $6\\nThursday | $4 | $10\\nFriday  | $5 | $15\\nSaturday  | $6 | $21\\nSunday | $7 | $28\\n\\n#### Week 2\\nDay | Amount | Sum\\n:--- | --- | ---\\nMonday | $2 | $30\\nTuesday | $3 | $33\\nWednesday | $4 | $37\\n\\netc ...\\n\\nWrite a function that returns the number of days he needs to buy his first car `cost`. John had some `savings` (include it before counting). On the first Monday, he puts the `start` amount into his piggy bank.\\n\\n### Examples\\n```\\nChallenge.NumberOfDays(2050, 1200, 10) ➞ 53\\n// 2050: cost of car, 1200: savings, 10: start amount \\n// After 53 days he can buy a car.\\n\\nChallenge.NumberOfDays(10000, 2500, 50) ➞ 123\\n// After 123 days he can buy a car.\\n\\nChallenge.NumberOfDays(500, 300, 50) ➞ 4\\n// After 4 days he can buy a car.\\n```\\n\\n### Notes\\n- The first day is always Monday.\\n- To buy a car, he needs money greater than or equal to `cost`.\\n- All given numbers will be greater than 0.\\n- BONUS: Try not adding the sum every day!\",\"isFree\":false,\"isHidden\":false,\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(53, Challenge.NumberOfDays(2050, 1200, 10));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(123, Challenge.NumberOfDays(10000, 2500, 50));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(75, Challenge.NumberOfDays(3333, 1111, 22));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(97, Challenge.NumberOfDays(1000, 100, 0));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(409, Challenge.NumberOfDays(19999, 5000, 5));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(4, Challenge.NumberOfDays(500, 300, 50));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(2, Challenge.NumberOfDays(7000, 6500, 250));\\n  }\\n}\",\"language\":\"java\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,3,0,2,3,2,3,3,4,3,1,1,2,2,2,2,3,3,3,3,2,3,3,3,3,3,3,2,3,3,2,3,4,3,4,3,3,3,2,2,3,4,3,2,4,2,2,1,3,2,3,2,2,3],\"rators\":[\"TrquEHytntLKHA4m2\",\"jyoLggHk8xQKZuoQC\",\"k63LjKkX5p7SYng7C\",\"LmMjbzgdKybKRs7m6\",\"jRqY4i8gPemsZMBGf\",\"9pCPyhvQmbkWyD2LL\",\"2NJuDfSqdrF8kHHni\",\"qRhXvCaA7qgDoeFnr\",\"xdS2Wao3BYiWTo4H2\",\"Es4eX2stRpyoXeC7f\",\"B7EHmyWMEWytXnKaH\",\"rehehi2Tr2mwaEoJE\",\"gXTAie79kiw28tx5u\",\"mQKWauR6b252TmdX4\",\"NsbHPeWBtAonYNXZc\",\"SEX5AGLMFRSainDmC\",\"SdK5h6x8wu7th28nx\",\"i29588QzAyKBuAhah\",\"KbGAgauBQRkLEzckz\",\"c7uBxu2rgY77H5d79\",\"rhS8qXRjZcpDXkwnE\",\"uw47663LqPME8btaA\",\"qaPjAANdnxFnWfj5d\",\"buX4mCQhtXCfBjeno\",\"RsujLHaML6L3KinzK\",\"KMR6vNzvSKMA2cXnK\",\"sxci7DYKNa6q22Sjq\",\"wFRLGjA56kj7xyhmv\",\"htXCitorobtqYymjN\",\"jGjGWp7kipdDj4suc\",\"4JRoWMWuX5JzdQThp\",\"8fSFAtkXfHm64DWZq\",\"5u8dcepWiJ3AZCxwm\",\"ooEHTqqR26zokzMwW\",\"s4F6YEWyWbSAcAdBw\",\"C4zfJMAz2dWLaMfMh\",\"svhCKS2fi2eo58P5a\",\"LAtZJQCWsqQGxMceP\",\"7ASDvPPs5Z7d5Camw\",\"EnyESbifaDdgWJnh6\",\"zRJnj5pW4JvhFkCWp\",\"muGBEdcs6qwKRhbjs\",\"d5tncjcqJXwwsMWAC\",\"xYJTY8Tv8ZzPQfhP2\",\"rWhXHhzF4W8bea6LP\",\"pWZ2Pq8poM8m5eiPZ\",\"bg4G79DdkMaDxXvdv\",\"S6uYrmiuiLkxwXQKu\",\"rvojHhKH3DaxotefQ\",\"emk493xRkq5kPATnJ\",\"YqH6PYMPXJotEuudw\",\"B46GRBJmNSejfkiW7\",\"iMHrN3Wiefh9Ame38\",\"ompzzoXiFiYsWmHXr\"],\"total\":61,\"quality\":[]},\"flags\":0},\"summary\":\"John wants to save money for his first car. He puts money in his piggy bank every day. Every day, he puts in $1 more than the previous day. Every Monday he starts with a new value \u2060— $1 more than the previous Monday.\\n\\nWeek 1 (starting at $1)\\nDay | Amount | Sum\\n:--- | --- | ---\\nMonday | $1 | $1\\nTuesday | $2 | $3\\nWednesday | $3 | $6\\nThursday | $4 | $10\\nFriday  |\",\"tags\":[\"algebra\",\"math\",\"loops\"],\"timestamp\":{\"$date\":1598212364700},\"title\":\"Piggy Bank\",\"quality\":0,\"family\":[{\"_id\":\"csMnvdwqXQDcAET9P\",\"language\":\"cpp\"},{\"_id\":\"JLQ4upWrq5LkzdhPE\",\"language\":\"java\"},{\"_id\":\"R47nHwvmDetfFbgpz\",\"language\":\"javascript\"},{\"_id\":\"dMcvdFzSvvqdLJBEC\",\"language\":\"python3\"},{\"_id\":\"3Er5NTxrMCrodybcT\",\"language\":\"ruby\"}]}}"]