a["{\"msg\":\"result\",\"id\":\"330\",\"result\":{\"_id\":\"xrPSrroKFC9uciA6H\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"import java.util.function.Function;\\n\\npublic class Functions {\\n  public static String whichIsLarger(int j, int k, \\n  \\t\\t\\t Function<Integer, Integer> f, Function<Integer, Integer> g) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.4807692307692308,\"familyId\":\"3GZsbgpAW499Hikpe\",\"instructions\":\"Write a function that will be passed with two integer values, `j` and `k` and two functions, `f` and `g`, that don't take any parameters. Your function has  to call them (and use the two integer values, accordingly), and returns a string that indicates which function has returned the larger number.\\n\\n- If `f` returns the larger number, return the string `f`.\\n- If `g` returns the larger number, return the string `g`.\\n- If both functions return the same number, return the string `neither`.\\n\\n### Examples\\n```\\nwhichIsLarger(5, 10, f -> f, g -> g) ➞ \\\"g\\\"\\n\\nwhichIsLarger(25, 25, f -> f, g -> g) ➞ \\\"neither\\\"\\n\\nwhichIsLarger(505050, 5050, f -> f, g -> g) ➞ \\\"f\\\"\\n```\\n\\n### Notes\\n- This exercise is designed as an introduction to _higher order functions_ (functions which use other functions to do their work).\\n- Function `f` takes variable `j` as its parameter and `g` takes `k` as these functions are invoked inside your function.\\n- Check out the **Resources** tab for more details about _higher order functions_.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"import static org.junit.Assert.assertEquals;\\nimport org.junit.Test; \\n\\npublic class FunctionsTest {\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertEquals(\\\"g\\\", Functions.whichIsLarger(40, 50, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertEquals(\\\"neither\\\", Functions.whichIsLarger(675, 675, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertEquals(\\\"f\\\", Functions.whichIsLarger(34, 32, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertEquals(\\\"f\\\", Functions.whichIsLarger(505050, 5050, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertEquals(\\\"neither\\\", Functions.whichIsLarger(25, 25, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertEquals(\\\"g\\\", Functions.whichIsLarger(5, 10, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertEquals(\\\"g\\\", Functions.whichIsLarger(123000, 123300, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertEquals(\\\"neither\\\", Functions.whichIsLarger(120000, 120000, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test09() { \\n\\t\\tassertEquals(\\\"neither\\\", Functions.whichIsLarger(12, 12, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test10() { \\n\\t\\tassertEquals(\\\"f\\\", Functions.whichIsLarger(544, 466, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test11() { \\n\\t\\tassertEquals(\\\"g\\\", Functions.whichIsLarger(1213, 1217, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test12() { \\n\\t\\tassertEquals(\\\"f\\\", Functions.whichIsLarger(2000, 1979, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test13() { \\n\\t\\tassertEquals(\\\"f\\\", Functions.whichIsLarger(859, 640, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test14() { \\n\\t\\tassertEquals(\\\"g\\\", Functions.whichIsLarger(583, 931, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test15() { \\n\\t\\tassertEquals(\\\"g\\\", Functions.whichIsLarger(745, 859, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test16() { \\n\\t\\tassertEquals(\\\"g\\\", Functions.whichIsLarger(782, 826, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test17() { \\n\\t\\tassertEquals(\\\"f\\\", Functions.whichIsLarger(904, 742, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test18() { \\n\\t\\tassertEquals(\\\"f\\\", Functions.whichIsLarger(573, 525, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test19() { \\n\\t\\tassertEquals(\\\"f\\\", Functions.whichIsLarger(916, 849, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test20() { \\n\\t\\tassertEquals(\\\"g\\\", Functions.whichIsLarger(511, 549, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test21() { \\n\\t\\tassertEquals(\\\"g\\\", Functions.whichIsLarger(799, 930, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test22() { \\n\\t\\tassertEquals(\\\"g\\\", Functions.whichIsLarger(774, 895, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test23() { \\n\\t\\tassertEquals(\\\"g\\\", Functions.whichIsLarger(888, 897, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test24() { \\n\\t\\tassertEquals(\\\"f\\\", Functions.whichIsLarger(744, 549, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test25() { \\n\\t\\tassertEquals(\\\"g\\\", Functions.whichIsLarger(553, 937, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test26() { \\n\\t\\tassertEquals(\\\"g\\\", Functions.whichIsLarger(561, 991, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test27() { \\n\\t\\tassertEquals(\\\"g\\\", Functions.whichIsLarger(628, 929, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test28() { \\n\\t\\tassertEquals(\\\"g\\\", Functions.whichIsLarger(624, 661, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test29() { \\n\\t\\tassertEquals(\\\"g\\\", Functions.whichIsLarger(601, 683, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test30() { \\n\\t\\tassertEquals(\\\"neither\\\", Functions.whichIsLarger(935, 935, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test31() { \\n\\t\\tassertEquals(\\\"g\\\", Functions.whichIsLarger(810, 916, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test32() { \\n\\t\\tassertEquals(\\\"g\\\", Functions.whichIsLarger(706, 845, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test33() { \\n\\t\\tassertEquals(\\\"neither\\\", Functions.whichIsLarger(975, 975, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test34() { \\n\\t\\tassertEquals(\\\"g\\\", Functions.whichIsLarger(500, 676, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test35() { \\n\\t\\tassertEquals(\\\"f\\\", Functions.whichIsLarger(869, 566, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test36() { \\n\\t\\tassertEquals(\\\"g\\\", Functions.whichIsLarger(532, 891, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test37() { \\n\\t\\tassertEquals(\\\"g\\\", Functions.whichIsLarger(791, 815, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test38() { \\n\\t\\tassertEquals(\\\"g\\\", Functions.whichIsLarger(582, 686, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test39() { \\n\\t\\tassertEquals(\\\"g\\\", Functions.whichIsLarger(506, 822, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test40() { \\n\\t\\tassertEquals(\\\"f\\\", Functions.whichIsLarger(753, 530, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test41() { \\n\\t\\tassertEquals(\\\"f\\\", Functions.whichIsLarger(689, 565, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test42() { \\n\\t\\tassertEquals(\\\"f\\\", Functions.whichIsLarger(933, 617, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test43() { \\n\\t\\tassertEquals(\\\"g\\\", Functions.whichIsLarger(841, 974, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test44() { \\n\\t\\tassertEquals(\\\"g\\\", Functions.whichIsLarger(623, 955, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test45() { \\n\\t\\tassertEquals(\\\"f\\\", Functions.whichIsLarger(956, 887, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test46() { \\n\\t\\tassertEquals(\\\"g\\\", Functions.whichIsLarger(755, 947, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test47() { \\n\\t\\tassertEquals(\\\"f\\\", Functions.whichIsLarger(974, 858, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test48() { \\n\\t\\tassertEquals(\\\"f\\\", Functions.whichIsLarger(851, 818, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test49() { \\n\\t\\tassertEquals(\\\"g\\\", Functions.whichIsLarger(704, 921, f -> f, g -> g));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test50() { \\n\\t\\tassertEquals(\\\"f\\\", Functions.whichIsLarger(770, 590, f -> f, g -> g));\\n\\t}\\n}\",\"language\":\"java\",\"quality\":0,\"summary\":\"Write a function that will be passed with two integer values, j and k and two functions, f and g, that don't take any parameters. Your function has  to call them (and use the two integer values, accordingly), and returns a string that indicates which function has returned the larger number.\\n\\nIf f returns the larger number, return the string f.\\nIf g returns the\",\"tags\":[\"higher_order_functions\",\"language_fundamentals\",\"numbers\"],\"timestamp\":{\"$date\":1608583975730},\"title\":\"Which Function Returns The Larger Number?\",\"stats\":{\"completed\":{\"total\":47,\"ratings\":[1,1,1,1,1,4,2,2,1,1,2,2,1,1,1,2,2,1,3,1,1,1,1,2,0,0,2,2,2,2,1,2,1,2,1,2,2,2,1,2,0,0,1,2,2,2,2,1,2,0,2,3],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"gXTAie79kiw28tx5u\",\"yHsRgPbDc2voiTfvN\",\"CezNirjCQL2BSr4g2\",\"bur3yQ8s34zqKGEro\",\"jyoLggHk8xQKZuoQC\",\"a49eNnfRwSMxsDJXf\",\"DkSMZ3jZLkwviKb9g\",\"dMRiNtLdaas5yzZqk\",\"sxci7DYKNa6q22Sjq\",\"buX4mCQhtXCfBjeno\",\"p5ZshR8zhTqmdhKDc\",\"rhS8qXRjZcpDXkwnE\",\"wFRLGjA56kj7xyhmv\",\"htXCitorobtqYymjN\",\"89aYYDJA5tEqvBd2w\",\"PJu3WcTpfRrvHfQiS\",\"KMR6vNzvSKMA2cXnK\",\"gLYqmHDt8hijZx6iG\",\"Egc4E8QQSDDyW3aqk\",\"nDDNHWdGDaR83aysS\",\"TjEfsEyuxhqADbD2M\",\"CYdpG37XFpHudffE3\",\"wsGRbXwp2gyLY3oN4\",\"YMo3MectGtSdTcWcB\",\"FNYPC36yqPmTKDaqR\",\"hhxjQREtmHSheH9Pj\",\"B4pxRqzo43M7S8FbP\",\"SE5G2Caf3btnuGmz6\",\"5JuFzSyvT4BN9rSnW\",\"SxWfaNpkxLLcSuZFk\",\"unqzSsxpxj9sZ7rbD\",\"FxPDKKibxnZjGJLs6\",\"uw47663LqPME8btaA\",\"cpa27icC4AhqeJ8BM\",\"Yohr2MmAyaWGMbB35\",\"PAEWysAAFheYiYPBp\",\"5HGyJtoZ3AffzAZAv\",\"6e7EwhH7NHxnjr78S\",\"XH6378Zm3WBm679yx\",\"6EKjQGhH23tmPtba8\",\"RdjHaaZjRDvsSWLcH\",\"NnymXePpDaZnp2fRd\",\"nFbmNzMQ38TncmfQX\",\"MLar5tzRdfSgCpGNr\",\"NjHK6iDsbc3ipaFqh\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"xrPSrroKFC9uciA6H\",\"language\":\"java\"},{\"_id\":\"o7TwicAHWuMkjbDqQ\",\"language\":\"javascript\"},{\"_id\":\"GjxNQx5iEYKw5ve54\",\"language\":\"php\"},{\"_id\":\"Rg26hsPPXXqpho3g2\",\"language\":\"python3\"},{\"_id\":\"4QBQWvbM2iWiDvFgm\",\"language\":\"ruby\"},{\"_id\":\"oorptmxnX4sxfWF6p\",\"language\":\"swift\"}]}}"]