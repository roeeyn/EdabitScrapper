a["{\"msg\":\"result\",\"id\":\"615\",\"result\":{\"_id\":\"ChqsAuCYkGm7x2Jyw\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n  public static boolean anaStrStr(String needle, String haystack) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":2.25,\"familyId\":\"e3SzP7uq6qqNdKRAm\",\"instructions\":\"Create a function that takes two strings and determines if an anagram of the first string is in the second string. Anagrams of \\\"bag\\\" are \\\"bag\\\", \\\"bga\\\", \\\"abg\\\", \\\"agb\\\", \\\"gab\\\", \\\"gba\\\". Since none of those anagrams are in \\\"grab\\\", the answer is false. A \\\"g\\\", \\\"a\\\", and \\\"b\\\" are in the string \\\"grab\\\", but they're split up by the \\\"r\\\".\\n\\n### Examples\\n```\\nanaStrStr(\\\"car\\\", \\\"race\\\") ➞ true\\n\\nanaStrStr(\\\"nod\\\", \\\"done\\\") ➞ true\\n\\nanaStrStr(\\\"bag\\\", \\\"grab\\\") ➞ false\\n```\\n\\n### Notes\\n- Inputs will be valid strings in all lowercase letters.\\n- There exists a linear time algorithm for this.\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(true, Challenge.anaStrStr(\\\"car\\\", \\\"race\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(true, Challenge.anaStrStr(\\\"nod\\\", \\\"done\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(false, Challenge.anaStrStr(\\\"bag\\\", \\\"grab\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(true, Challenge.anaStrStr(\\\"sap\\\", \\\"spatula\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(false, Challenge.anaStrStr(\\\"sat\\\", \\\"spatula\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(true, Challenge.anaStrStr(\\\"vein\\\", \\\"universal\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(false, Challenge.anaStrStr(\\\"salt\\\", \\\"universal\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n    assertEquals(true, Challenge.anaStrStr(\\\"roast\\\", \\\"pastoral\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test9() {\\n    assertEquals(false, Challenge.anaStrStr(\\\"altar\\\", \\\"pastoral\\\"));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"Create a function that takes two strings and determines if an anagram of the first string is in the second string. Anagrams of \\\"bag\\\" are \\\"bag\\\", \\\"bga\\\", \\\"abg\\\", \\\"agb\\\", \\\"gab\\\", \\\"gba\\\". Since none of those anagrams are in \\\"grab\\\", the answer is false. A \\\"g\\\", \\\"a\\\", and \\\"b\\\" are in the string \\\"grab\\\", but they're split up by the \\\"r\\\".\\n\\nExamples\\nanaStrStr(\\\"car\\\", \\\"race\\\") ➞ tr\",\"tags\":[\"strings\",\"validation\",\"regex\"],\"timestamp\":{\"$date\":1568352898854},\"title\":\"Find an Anagram of a String in Another String\",\"stats\":{\"completed\":{\"total\":34,\"ratings\":[2,2,2,2,2,4,0,3,1,0,3,4,3,2,4,3,0,1,2,1,2,3,3,3,3,3,2,3],\"rators\":[\"3pdgguqZgNDSAJSGm\",\"SnY7WidXJoAyyuPuA\",\"sxci7DYKNa6q22Sjq\",\"yazNfwgLx7jSAZ8Tv\",\"rehehi2Tr2mwaEoJE\",\"PjdJM67P7XNoorhFo\",\"qJZsi5rhRnWA38FbA\",\"r9hHZYPQAqJ9DbwLX\",\"J9zJq7PMGb6mqzcHW\",\"Es4eX2stRpyoXeC7f\",\"rTj67TTydxqkpwFtN\",\"8J2Dqqz9PaFufQzwY\",\"cjxsqXfkAPoadmppi\",\"jyoLggHk8xQKZuoQC\",\"5seiNqw6ZXoF2GRRd\",\"k63LjKkX5p7SYng7C\",\"mfm3gB39arY8Rjb2y\",\"yv5NdD4gS38t98fRL\",\"Ym8AjbKGSJooun3nt\",\"yXGiiSAR5nBHnH3yr\",\"PytNZK9mNiRiZxPrm\",\"2sZrwmQcNFJG3d3HW\",\"2NJZbusRvu3eJ4tHu\",\"KMR6vNzvSKMA2cXnK\",\"a49eNnfRwSMxsDJXf\",\"rWhXHhzF4W8bea6LP\"],\"quality\":[4,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"isHidden\":false,\"quality\":4.666666666666667,\"family\":[{\"_id\":\"JLfEg4J8xSKCNKdEp\",\"language\":\"cpp\"},{\"_id\":\"ybAba6PYxnGNW7w5r\",\"language\":\"csharp\"},{\"_id\":\"ChqsAuCYkGm7x2Jyw\",\"language\":\"java\"},{\"_id\":\"q577i4KiZRFKyPLJf\",\"language\":\"javascript\"},{\"_id\":\"LF6LyPmjcuLnSjgiL\",\"language\":\"python3\"},{\"_id\":\"KjMSPAEyH8FJeeDv4\",\"language\":\"ruby\"},{\"_id\":\"HXdzrscvR4MBvea2m\",\"language\":\"swift\"}]}}"]