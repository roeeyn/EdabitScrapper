a["{\"msg\":\"result\",\"id\":\"358\",\"result\":{\"_id\":\"auwAWq4MXmXFwWrHf\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n  public static boolean parityAnalysis(int num) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":1.4915254237288136,\"familyId\":\"XjBQWqjhuttuzhz9w\",\"instructions\":\"Create a function that takes a number as input and returns `true` if the sum of its digits has the same parity as the entire number. Otherwise, return `false`.\\n\\n### Examples\\n```\\nparityAnalysis(243) ➞ true\\n// 243 is odd and so is 9 (2 + 4 + 3)\\n\\nparityAnalysis(12) ➞ false\\n// 12 is even but 3 is odd (1 + 2)\\n\\nparityAnalysis(3) ➞ true\\n// 3 is odd and 3 is odd and 3 is odd (3)\\n```\\n\\n### Notes\\n- Parity is whether a number is even or odd. If the sum of the digits is even and the number itself is even, return `true`. The same goes if the number is odd and so is the sum of its digits.\\n- Single digits will obviously have the same parities (see example #3).\",\"isHidden\":false,\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(true, Challenge.parityAnalysis(243));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(false, Challenge.parityAnalysis(12));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(true, Challenge.parityAnalysis(3));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(true, Challenge.parityAnalysis(5));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(true, Challenge.parityAnalysis(4));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(true, Challenge.parityAnalysis(3453));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(true, Challenge.parityAnalysis(0));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n    assertEquals(true, Challenge.parityAnalysis(123456789));\\n  }\\n\\t\\n\\t@Test\\n  public void test9() {\\n    assertEquals(true, Challenge.parityAnalysis(987654321));\\n  }\\n\\t\\n\\t@Test\\n  public void test10() {\\n    assertEquals(false, Challenge.parityAnalysis(13));\\n  }\\n\\t\\n\\t@Test\\n  public void test11() {\\n    assertEquals(false, Challenge.parityAnalysis(37));\\n  }\\n\\t\\n\\t@Test\\n  public void test12() {\\n    assertEquals(false, Challenge.parityAnalysis(182));\\n  }\\n\\t\\n\\t@Test\\n  public void test13() {\\n    assertEquals(false, Challenge.parityAnalysis(133331));\\n  }\\n}\\n\\n// made by @Joshua Señoron\",\"language\":\"java\",\"summary\":\"Create a function that takes a number as input and returns true if the sum of its digits has the same parity as the entire number. Otherwise, return false.\\n\\nExamples\\nparityAnalysis(243) ➞ true\\n// 243 is odd and so is 9 (2 + 4 + 3)\\n\\nparityAnalysis(12) ➞ false\\n// 12 is even but 3 is odd (1 + 2)\\n\\nparityAnalysis(3) ➞ true\\n// 3 is odd and 3 is odd and 3 is odd (3)\\n\",\"tags\":[\"conditions\",\"language_fundamentals\",\"validation\"],\"timestamp\":{\"$date\":1580424337413},\"title\":\"Same Parity?\",\"stats\":{\"completed\":{\"total\":258,\"ratings\":[1,1,1,1,1,2,1,0,3,2,0,2,2,2,2,0,1,2,2,2,1,0,2,0,2,3,1,2,2,2,2,1,2,0,2,1,2,2,1,2,2,1,2,2,2,0,1,2,1,2,2,1,1,1,0,2,1,1,2,0,1,1,2,2,2,1,1,2,2,2,2,0,2,1,1,2,2,1,2,2,0,1,1,1,2,2,3,2,1,2,2,2,2,2,0,2,0,2,0,2,2,1,0,0,1,1,1,1,2,1,1,2,1,0,2,2,2,1,2,2,2,2,1,2,1,2,2,1,2,0,2,1,1,2,2,2,2,0,2,2,2,2,2,2,0,2,2,1,2,2,1,1,5,2,1,1,1,3,1,1,1,2,1,2,2,2,1,2,2,2,2,2,2,1,2,2,2],\"rators\":[\"3XvbdaPm47SaJtzrC\",\"8JyqsSbN2FJXPr3cw\",\"s2G7xhbjaNdkGbhRX\",\"3KjxQu9RZ8ZSywvLz\",\"fxaS5K7ZXo4FbTe36\",\"vsCr2J4yakyFov2eQ\",\"ZDbtCzQttEPCTwkTR\",\"Md3zwe6ZCp4vqdx5j\",\"phA6MomRzh9oz3eqn\",\"S6PMMoyZiyso5Bd9x\",\"8J2Dqqz9PaFufQzwY\",\"Mk89FbBPdRGNuJnjD\",\"8hEyMLasHdooTNnJQ\",\"FxrwKFzNnQFEc62hn\",\"r9hHZYPQAqJ9DbwLX\",\"Yohr2MmAyaWGMbB35\",\"eXW8reZCCZHQzJjQi\",\"z2crWv2athzYWTBMa\",\"vRXuYYBNuHEQ29fbm\",\"aLpuDx72trwPQ5Aua\",\"SABv2iDKz5N7w7fZg\",\"a49eNnfRwSMxsDJXf\",\"toZsDEaLL7ptnFskQ\",\"k3me5arScJpqjtnjG\",\"2cdvd8yuPLSwvGj9w\",\"o2F4ykzNB5etBnuY9\",\"HBgPTjhMkJ2WCcBP7\",\"u4yanfWeeZsN3xWgc\",\"J9zJq7PMGb6mqzcHW\",\"x9A83cZkyA7E7utn3\",\"efaPWoJJbpmgvoqQ2\",\"qEGfmqbNLrs2Qrva8\",\"AyrEvM2GLX2jqM772\",\"ggRcNtx4xeRC2jmbZ\",\"n8jm3w32BSJW8GMBp\",\"C9yBWYcZsjmJYww3K\",\"9gJsF5apWJGWZJprn\",\"4RHx3H8EwP2oboW8e\",\"3pdgguqZgNDSAJSGm\",\"Es4eX2stRpyoXeC7f\",\"wYYMNPe8nSiJFbvJw\",\"cjxsqXfkAPoadmppi\",\"Pu83yaC2TfNSf6k6k\",\"NsQ8qYQQ47gSPtQkK\",\"TxD5qx2hqQa6pixAP\",\"5TaPWyRv9DZWWodp8\",\"wbSLghDxkTjiYJrEH\",\"jRqY4i8gPemsZMBGf\",\"rWhXHhzF4W8bea6LP\",\"mdEQJ2fmGmkbhbvNw\",\"u8ornSPgkX6zjRQmL\",\"JfW3LXkB26obGCDrg\",\"jDTGwryGygbZiqCEg\",\"Kso7rzAKB4TTCPKgM\",\"fZjkX29nhRTWWb75k\",\"YLwJkF2wuL3n9o6a2\",\"hB5mgzMwQSnhBzi7P\",\"mfm3gB39arY8Rjb2y\",\"hAfyZS5tx4r7m5cAS\",\"ZqjP4M6dzu32To33K\",\"5seiNqw6ZXoF2GRRd\",\"jyoLggHk8xQKZuoQC\",\"TrquEHytntLKHA4m2\",\"FJzZTZo7CmAyN5ajr\",\"uYv96ZSpA7tBHoAGX\",\"Wf7nCHS4Gq5tx659h\",\"Zhy5X7BZnqk8hacEw\",\"c7sE7kceskbYy3KmA\",\"B4pxRqzo43M7S8FbP\",\"WZujpe8yQAyZmpWHg\",\"rvojHhKH3DaxotefQ\",\"6ZxpGyg7iviX9cPAy\",\"Yp7uvStL97cC9fKkY\",\"av5QexsdPza9FsRCq\",\"9ZEjexQc4vpN7SHcC\",\"etoSR23iELGGgs9rA\",\"meS77LKqRswhF5LAy\",\"htXCitorobtqYymjN\",\"bTLeuhN23c6ETYa6N\",\"y6kfyYmydcD8tkBk7\",\"Ctuq7Wc8QPQmzwPK3\",\"dcW9oK2uRo8h8mBe2\",\"Witn99Xo8Anbjpakg\",\"dpJTai3i9aNkCS3sa\",\"5gAhkR6af8SbnDopR\",\"DzvdGwHEjqsX7wyKr\",\"JQGw9jsJPEasdwhNJ\",\"zxRHFTwSLu5m5Tr8Y\",\"fEFZag7uK6ig4EeGf\",\"pBMXMQem6BpSeooYT\",\"5Rr75sFqhpkowFk3k\",\"zwruFCmuHkwJTpYqg\",\"H5sfMFuQo6yHE8GFL\",\"g4NCSxxHqHCGMpWwT\",\"Ha5J49rhojBRy3BaM\",\"k2tXkx7AyX77tQDRo\",\"Cq5yKkSK6aDFhqytM\",\"Fd9765rksgPK4E2Zy\",\"muXMnzQwGLzN6j2Jr\",\"YcjwCvYut6834Jzd8\",\"kh7Tw42Li3AW5Jej4\",\"Ym8AjbKGSJooun3nt\",\"azAzSkvJd7eyXY9x9\",\"YFHkjbM6obMSj24zi\",\"S6n5P7pGiEu2mQuFD\",\"nLb2L7vY7vd9k5L4w\",\"8qNSPHZBpmjSTt3tH\",\"oMZovHkR6QqNvQwyc\",\"zTEKMLMevG8xfxEj6\",\"LptSig9RyERquRNFn\",\"ydF8Re5wK8MmaDbLh\",\"ZTwkwr5nLpvh6MZdb\",\"AjmnEyaZt9w4ANc3m\",\"aH9yER5QQ4bFBN8SR\",\"k5THhJEZy7oASc5oL\",\"sW4SaDcqGDfhTWtsd\",\"jb9RLyyuo565bKDzN\",\"yHvCCNugSDhWTmiEJ\",\"jyhPF98zPA9DQpwEe\",\"fRYcPHuyEdqngMzC4\",\"zXu67TSfBWxX7cJmx\",\"yXGiiSAR5nBHnH3yr\",\"gSmf26ac9rrmXLxwN\",\"gpd8yji9GXJruAtje\",\"yd5PakB2z33q2JrTZ\",\"gXTAie79kiw28tx5u\",\"J7epB3qSQJ2E8vWkY\",\"kK4TRTy8sWhCmDN9o\",\"BSJAuSLSs5Sv5SYAf\",\"H5hi5mBu2LaQFxZE7\",\"vs3bG9isJYKeqF43m\",\"fJAnQriWjfZA5EFCK\",\"x3WsGCnE38anLjJqh\",\"qJ2TgHitgMYZRTZ5d\",\"bC49w5JpRaqtjd3Rt\",\"BbcH2NLjE4tKAZ3wR\",\"mG8HqKiAQFTdRZthG\",\"sAdpvrN5y9fNJhQQv\",\"kabqCExooax4JEQHE\",\"P5BhjZxyeHQYTNyB9\",\"8Xx8nWXRydHDBGfQf\",\"jXTnL3JatkKjoifyb\",\"BWqQ68pvNedARDcBN\",\"hDeaTsprkH6CmvSAR\",\"qicBKyqSkusj8jEvr\",\"unNqQjSHzkb4pCzEu\",\"udHFfcqNNej6udnpP\",\"tyLS9T6YMfg9fMtYJ\",\"zE46SymvixkeFJmPM\",\"RBJ84PMP5vguNXGYQ\",\"W56bWmpQeLJ9JEDsa\",\"mQKWauR6b252TmdX4\",\"hD6sfDtntpqT8NR2o\",\"gBGjCfJvPHswDM5JQ\",\"Q4RHqbSCspLCPqvHe\",\"Lfvci9N2AAPzncy5M\",\"pi76g3eRpnKrhee2a\",\"DrkR35NqnP9NDLbq6\",\"9vyjn4WyWtJ6o2wop\",\"qeY2Gpf6pGZ9yoNPB\",\"9X8aTMJ4dsm2Y9dDh\",\"p8qqFdJ3FSk5x9z3G\",\"E2hpke7mHxAWsw5t9\",\"GkYtSbQuheBF4Enys\",\"ZMd8it647JSYTvx8Z\",\"bur3yQ8s34zqKGEro\",\"uFfEio8nzDvL8emhp\",\"WgWGBYoEmKtXC59Hm\",\"wB47dmNBe3aFZZcFr\",\"9XN2u65cXqeSgsrF3\",\"gJD2mhxE28i5sfAXN\",\"4ySzqKC5s3ZRpG9di\",\"8NmFoJK2o27Ex3rCX\",\"buX4mCQhtXCfBjeno\",\"Qy9iR759KepTnfxjW\",\"L2ZicYhibFcuxfwPd\",\"cyffsaMGoowRrRMyp\",\"zZfMwLuoERGmybgib\",\"W4TtzLajjmS8QPK3c\",\"7AHkoNaT8ABxame4g\",\"N7vpEM6gnyAxtDaKJ\",\"jNKMr5w3e97k7aKY9\",\"hqvExZcs9dqew7Bm2\",\"qb2DTmzQj4vNfq5K7\",\"KsxNzL79fCfCdvaZe\",\"3uSLboG77z54u8ZtZ\",\"Ag5fRrZ9MrAZc9vpj\",\"JWMdYcewDGTmwPNgp\",\"btabi3PdyisuY5tn9\",\"vXgBScp6gcZFFCNyQ\",\"6rvJwN4mcX7iYGjY7\",\"2Ek36ydpqCBTMipn5\",\"dovsbscLsbpX3wkm3\",\"nHj7SC5cnmkTApbgY\",\"4z7TRYesTZXX3Z3mH\",\"K9MTQh5vZ7meSykes\",\"Tz8TGTQnjWz8STkhs\",\"hhxjQREtmHSheH9Pj\",\"tdxi2QkC26vf5P3vG\",\"pFMEy8z5h7A9yRW7a\",\"ivwcFTPLxBixotu2F\",\"rhS8qXRjZcpDXkwnE\",\"sxci7DYKNa6q22Sjq\",\"ybXuwvrytgEph66ea\",\"fcFy3r8FNMvPCbeYG\",\"wFRLGjA56kj7xyhmv\",\"xEX3TDY6C2h82dJTn\",\"uw47663LqPME8btaA\",\"AvBTHa9c5RF55sygh\",\"njdThwiLCKhH246r2\",\"YkRtNxs3nqT9dW2Dg\",\"rSpDgJwqwiomRFiiP\",\"srJ34BaybkQh3qRkM\",\"jCjCvyhqhpebkJn34\",\"LMvYBfB9njmZzyZyM\",\"zTtKiCbLWzaf2Yjo4\",\"563onSvqgjToY79ah\",\"KMR6vNzvSKMA2cXnK\",\"CJNyy2qPh76QbXr94\",\"unqzSsxpxj9sZ7rbD\",\"FxPDKKibxnZjGJLs6\",\"DZvz6WY5bQEneYzvv\",\"Qv2jEtTnFCXX7cdd3\",\"XH6378Zm3WBm679yx\"],\"quality\":[2,2,5,4,4,5,5,2,3,4,5,4,3,5,5,5,5,4,5,5,4,3,5,5,4,5,5,5,5,4,5,4,5,5,5,5,5,5,4,4,4,5,3,4,4,5,4,5,5,5,4,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"quality\":4.365384615384615,\"family\":[{\"_id\":\"9DC6kHPJNTdP4cRX8\",\"language\":\"cpp\"},{\"_id\":\"auwAWq4MXmXFwWrHf\",\"language\":\"java\"},{\"_id\":\"NH7uN8JRgPz23GSNq\",\"language\":\"javascript\"},{\"_id\":\"emTBRW8xqBJX2oqDH\",\"language\":\"php\"},{\"_id\":\"jzCGNwLpmrHQKmtyJ\",\"language\":\"python3\"},{\"_id\":\"7GsJQRC5oGeQRzhuN\",\"language\":\"ruby\"}]}}"]