a["{\"msg\":\"result\",\"id\":\"389\",\"result\":{\"_id\":\"bzgkfePPbHyAyTdN3\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n\\tpublic static int minSwaps(String s1, String s2) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":1.5104166666666667,\"familyId\":\"ST7FRo3kv8DJZYdqN\",\"instructions\":\"Write a function that returns the minimum number of swaps to convert the first binary string into the second.\\n\\n### Examples\\n```\\nminSwaps(\\\"1100\\\", \\\"1001\\\") ➞ 1\\n\\nminSwaps(\\\"110011\\\", \\\"010111\\\") ➞ 1\\n\\nminSwaps(\\\"10011001\\\", \\\"01100110\\\") ➞ 4\\n```\\n\\n### Notes\\n- Both binary strings will be of equal length.\\n- Both binary strings will have an equal number of zeroes and ones.\\n- A swap is switching two elements in a string (swaps do **not** have to be adjacent).\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(0, Challenge.minSwaps(\\\"1001\\\", \\\"1001\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(1, Challenge.minSwaps(\\\"1100\\\", \\\"1001\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(1, Challenge.minSwaps(\\\"110011\\\", \\\"010111\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(2, Challenge.minSwaps(\\\"1100\\\", \\\"0011\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(2, Challenge.minSwaps(\\\"110011\\\", \\\"001111\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(3, Challenge.minSwaps(\\\"10011001\\\", \\\"01100101\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(3, Challenge.minSwaps(\\\"11111000001100\\\", \\\"10110010100110\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n    assertEquals(3, Challenge.minSwaps(\\\"01100100100111\\\", \\\"10110010100110\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test9() {\\n    assertEquals(3, Challenge.minSwaps(\\\"11110011001\\\", \\\"01100110111\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test10() {\\n    assertEquals(3, Challenge.minSwaps(\\\"100110001\\\", \\\"010100110\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test11() {\\n    assertEquals(3, Challenge.minSwaps(\\\"100101011\\\", \\\"011001101\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test12() {\\n    assertEquals(4, Challenge.minSwaps(\\\"10011001\\\", \\\"01100110\\\"));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"Write a function that returns the minimum number of swaps to convert the first binary string into the second.\\n\\nExamples\\nminSwaps(\\\"1100\\\", \\\"1001\\\") ➞ 1\\n\\nminSwaps(\\\"110011\\\", \\\"010111\\\") ➞ 1\\n\\nminSwaps(\\\"10011001\\\", \\\"01100110\\\") ➞ 4\\n\\nNotes\\nBoth binary strings will be of equal length.\\nBoth binary strings will have an equal number of zeroes and ones.\\nA swap is switching two\",\"tags\":[\"strings\",\"logic\",\"recursion\",\"loops\"],\"timestamp\":{\"$date\":1568079291470},\"title\":\"Converting One Binary String to Another\",\"stats\":{\"completed\":{\"total\":120,\"ratings\":[2,2,2,2,2,2,2,1,2,3,2,2,0,1,1,2,1,2,0,2,1,0,0,2,2,2,2,2,1,0,1,2,2,0,1,2,2,0,3,0,1,1,1,1,1,2,0,2,1,2,1,1,2,2,0,0,2,1,1,1,0,1,2,2,2,1,3,2,3,2,1,2,1,2,2,2,3,2,2,2,2,2,2,1,0,2,2,1,2,1,3,2,2,2,1,2],\"rators\":[\"sxci7DYKNa6q22Sjq\",\"3pdgguqZgNDSAJSGm\",\"uai7Zu58EAo6AQCC6\",\"YF79LnTdprobbYY5v\",\"27CbQy6BcxBvHpvsP\",\"ct699TXH59y7Fhyh4\",\"jkys684AAfPRxrYaD\",\"SnY7WidXJoAyyuPuA\",\"Ha5J49rhojBRy3BaM\",\"6KcnCdQ3zEnARWogF\",\"r9c6nf3p3tjr9PLRK\",\"gofo35rKkbyPH9jFq\",\"CLmJduqJHX83dM4Pd\",\"eXW8reZCCZHQzJjQi\",\"phA6MomRzh9oz3eqn\",\"3He89pPPSCfuvZF7g\",\"J9zJq7PMGb6mqzcHW\",\"uw47663LqPME8btaA\",\"C9yBWYcZsjmJYww3K\",\"AyrEvM2GLX2jqM772\",\"8JyqsSbN2FJXPr3cw\",\"Es4eX2stRpyoXeC7f\",\"HawgpaWZnHrBtve4P\",\"GpeGZDixv2t6adRG7\",\"8J2Dqqz9PaFufQzwY\",\"82weQfHHmno4Mq4X7\",\"hB5mgzMwQSnhBzi7P\",\"Kso7rzAKB4TTCPKgM\",\"fZjkX29nhRTWWb75k\",\"5seiNqw6ZXoF2GRRd\",\"jyoLggHk8xQKZuoQC\",\"TrquEHytntLKHA4m2\",\"Zhy5X7BZnqk8hacEw\",\"8zZ6xmzpiFair25qr\",\"WZujpe8yQAyZmpWHg\",\"etoSR23iELGGgs9rA\",\"htXCitorobtqYymjN\",\"B4pxRqzo43M7S8FbP\",\"Yp7uvStL97cC9fKkY\",\"cjxsqXfkAPoadmppi\",\"pWR5uhd9dirgnvexP\",\"yNa2KfyrokkiqLnW3\",\"DzvdGwHEjqsX7wyKr\",\"DkSMZ3jZLkwviKb9g\",\"dcW9oK2uRo8h8mBe2\",\"CggGfsERnPKGupFWp\",\"osXNzc2aCxspRwheS\",\"eFDqwp8hu5hq6g4YX\",\"5WQZzuHZBGqFeNQi3\",\"pBMXMQem6BpSeooYT\",\"MCw7uAcoWcSTBTmr3\",\"Csvsf2sztmZLYatxm\",\"muXMnzQwGLzN6j2Jr\",\"R6MCGv6W8g3dpRbhf\",\"jodKTXrYJL6MMjrPw\",\"g4NCSxxHqHCGMpWwT\",\"BskFSShTyXhLHYXEZ\",\"XDYmZd6da7sAwRcJe\",\"hmn6qe4B7Nrh6oSGn\",\"tnYXC3cGqycxRzCgT\",\"a49eNnfRwSMxsDJXf\",\"QXkrEiAuhuXaZmL4C\",\"FN3Yac9P6EKBAmkpa\",\"ZMd8it647JSYTvx8Z\",\"k2tXkx7AyX77tQDRo\",\"Yom3RzkMYpweE8cbS\",\"aH9yER5QQ4bFBN8SR\",\"Fd9765rksgPK4E2Zy\",\"qNLv2R8DeTEHW8vvQ\",\"Nb6LYPoQP6KJZt8mz\",\"Ym8AjbKGSJooun3nt\",\"pzQKDh47YoBNhJCiG\",\"AeJSxRqw2dJZuGvdk\",\"azAzSkvJd7eyXY9x9\",\"yXGiiSAR5nBHnH3yr\",\"gXTAie79kiw28tx5u\",\"EGbsmztBKTxQnNsSi\",\"jb9RLyyuo565bKDzN\",\"mG8HqKiAQFTdRZthG\",\"unNqQjSHzkb4pCzEu\",\"8ijuzRE9zvBS68JMd\",\"JFodQijHHdRkkrZvT\",\"6eGNbCnp6kneyAdRT\",\"c7uBxu2rgY77H5d79\",\"pi76g3eRpnKrhee2a\",\"Azbtwe84HAD6RmnHp\",\"bur3yQ8s34zqKGEro\",\"buX4mCQhtXCfBjeno\",\"4ySzqKC5s3ZRpG9di\",\"srJ34BaybkQh3qRkM\",\"rhS8qXRjZcpDXkwnE\",\"xEX3TDY6C2h82dJTn\",\"6rvJwN4mcX7iYGjY7\",\"zTtKiCbLWzaf2Yjo4\",\"J7epB3qSQJ2E8vWkY\",\"KMR6vNzvSKMA2cXnK\",\"hhxjQREtmHSheH9Pj\",\"KrqMQduPwCQm8Ra8b\",\"eXME6AmouMmTezHmN\",\"rWhXHhzF4W8bea6LP\",\"unqzSsxpxj9sZ7rbD\",\"iLfdDdTxf3FGRbr7e\",\"nFbmNzMQ38TncmfQX\"],\"quality\":[3,4,5,1,5,4,5,1,5,5,5,3]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"isHidden\":false,\"quality\":3.8333333333333335,\"family\":[{\"_id\":\"WzxsBTbMEM9j3E7nN\",\"language\":\"cpp\"},{\"_id\":\"bzgkfePPbHyAyTdN3\",\"language\":\"java\"},{\"_id\":\"HZcpmfBg6NstB5soN\",\"language\":\"javascript\"},{\"_id\":\"dxxefmaXYQcbcSpfJ\",\"language\":\"php\"},{\"_id\":\"AjZBGWyPaA7rXFhi6\",\"language\":\"python3\"},{\"_id\":\"MjXv4DxKsTdri6D5r\",\"language\":\"ruby\"}]}}"]