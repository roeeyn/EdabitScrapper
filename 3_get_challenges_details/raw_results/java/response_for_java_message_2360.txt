a["{\"msg\":\"result\",\"id\":\"736\",\"result\":{\"_id\":\"wqvzvSroyNwifv35B\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class LeapYear {\\n  public static boolean isLeapYear(int y) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":2.8620689655172415,\"familyId\":\"JrLyALRhCDmq4G5ap\",\"instructions\":\"In a calendar year, it is exactly 365.25 days. But, eventually, this will lead to confusion because humans normally count by exact divisibility of 1 and not with decimal points. So, to avoid the latter, it was decided to add up all 0.25 days every four-year cycle and give that year 366 days (including February 29 as an intercalary day) and call it a **leap year**. The other three years in the four-year cycle would only contain 365 days and **wouldn't be leap years**.\\n\\nIn this challenge, though quite repetitive, we'll take it to a new level, where you are to determine if it's a leap year or not without the use of the `Date()` class, **switch** statements, **if blocks**, **if-else blocks** or **ternary operation** (`x == 1 ? a : b`) nor the logical operators **AND** (`&&`) and **OR** (`||`) with the exemption of the **NOT** (`!`) operator.\\n\\nReturn `true` if it's a leap year, `false` otherwise.\\n\\n### Examples\\n```\\nisLeapYear(1979) ➞ false\\n\\nisLeapYear(2000) ➞ true\\n\\nisLeapYear(1521) ➞ false\\n\\nisLeapYear(1996) ➞ true\\n\\nisLeapYear(1800) ➞ false\\n\\nisLeapYear(2016) ➞ true\\n```\\n\\n### Notes\\nYou can't use the **Date** class, **switch statements**, **if statements** in general, the **ternary operator**, or the **logical operators** (`&&`, `||`).\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"import static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class LeapYearTest {\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertEquals(true, LeapYear.isLeapYear(2016));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertEquals(true, LeapYear.isLeapYear(1996));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertEquals(true, LeapYear.isLeapYear(1600));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertEquals(true, LeapYear.isLeapYear(2020));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertEquals(true, LeapYear.isLeapYear(2000));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertEquals(true, LeapYear.isLeapYear(2008));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertEquals(false, LeapYear.isLeapYear(1521));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertEquals(false, LeapYear.isLeapYear(1800));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test09() { \\n\\t\\tassertEquals(false, LeapYear.isLeapYear(2007));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test10() { \\n\\t\\tassertEquals(false, LeapYear.isLeapYear(2002));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test11() { \\n\\t\\tassertEquals(false, LeapYear.isLeapYear(1979));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test12() { \\n\\t\\tassertEquals(false, LeapYear.isLeapYear(2006));\\n\\t}\\n}\",\"language\":\"java\",\"quality\":0,\"summary\":\"In a calendar year, it is exactly 365.25 days. But, eventually, this will lead to confusion because humans normally count by exact divisibility of 1 and not with decimal points. So, to avoid the latter, it was decided to add up all 0.25 days every four-year cycle and give that year 366 days (including February 29 as an intercalary day) and call it a leap year.\",\"tags\":[\"algorithms\",\"math\",\"numbers\",\"validation\"],\"timestamp\":{\"$date\":1611219172495},\"title\":\"Is It a Leap Year?\",\"stats\":{\"completed\":{\"total\":27,\"ratings\":[3,3,3,3,3,4,4,2,4,3,2,3,5,3,1,1,5,2,5,4,1,3,0,3,4,3,0,4,2],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"QTieDiq7DcTzf4KCM\",\"gXTAie79kiw28tx5u\",\"kWmPsBxgPFEeHnFrL\",\"ach4yTbEQnAAYfaun\",\"RmFaEddcQhYYiwaNr\",\"xa3CFkeyE66qrfTZ9\",\"4Jh5kQvHdvxkiyQf4\",\"9pqtNWrsTJdZcRbEZ\",\"KeTCJ5wZiJCx8anJu\",\"M3mkzSYXCpCt2HhC3\",\"eFg7EjFwJTEP8RFZ2\",\"XTuxCoKrN9DZ7zaQx\",\"p6fkM3tu4g4mLe9PT\",\"pqhqgW7XCoat3E8o3\",\"8wPJG2ZRAPWR9g8c6\",\"GKc4zpFhvdYyrNGHZ\",\"zsbH6srQjcrLKJKiv\",\"htXCitorobtqYymjN\",\"KMR6vNzvSKMA2cXnK\",\"y2TSaX898ZdwFhAQA\",\"5YP4TxGhcKxRWWhzP\",\"rWhXHhzF4W8bea6LP\",\"sxci7DYKNa6q22Sjq\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"wqvzvSroyNwifv35B\",\"language\":\"java\"},{\"_id\":\"nNtYHuSDgnCq8gFvh\",\"language\":\"javascript\"},{\"_id\":\"YLf984Eod74ha4Tok\",\"language\":\"python3\"}]}}"]