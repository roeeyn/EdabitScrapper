a["{\"msg\":\"result\",\"id\":\"568\",\"result\":{\"_id\":\"ZoDHtyWfFPttuTiQR\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n  public static boolean overlap(String str1, String str2) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":2.152173913043478,\"familyId\":\"8siAs5ra43CqJTfru\",\"instructions\":\"Create a function that takes two strings and returns `true` if either of the strings appears at the very end of the other string. Return `false` otherwise. The character `*` is a wildcard, so it can take the place of any character.\\n\\n### Examples\\n```\\noverlap(\\\"ABC\\\", \\\"Ican'tsingmyABC\\\") ➞ true\\n\\noverlap(\\\"abc\\\", \\\"Ican'tsingmyABC\\\") ➞ true\\n\\noverlap(\\\"Ican'tsingmyABC\\\", \\\"abc\\\") ➞ true\\n\\noverlap(\\\"hello world\\\", \\\"hello\\\") ➞ false\\n\\noverlap(\\\"+=\\\", \\\"this should work too +=\\\") ➞ true\\n\\noverlap(\\\"hey\\\", \\\"*********\\\") ➞ true\\n```\\n\\n### Notes\\nYour function should NOT be case sensitive (see example #2).\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(true, Challenge.overlap(\\\"ABC\\\", \\\"Ican'tsingmyABC\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(true, Challenge.overlap(\\\"abc\\\", \\\"Ican'tsingmyABC\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(true, Challenge.overlap(\\\"Ican'tsingmyABC\\\", \\\"abc\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(true, Challenge.overlap(\\\"*bc\\\", \\\"Ican'tsingmyABC\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(true, Challenge.overlap(\\\"abc\\\", \\\"Ican'tsingmy***\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(false, Challenge.overlap(\\\"ab\\\", \\\"Ican'tsingmy**c\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(false, Challenge.overlap(\\\"hello world\\\", \\\"hello\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n    assertEquals(true, Challenge.overlap(\\\"+=\\\", \\\"this should work too +=\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test9() {\\n    assertEquals(true, Challenge.overlap(\\\"don't forget hyphens-\\\", \\\"-\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test10() {\\n    assertEquals(false, Challenge.overlap(\\\"don't forget periods \\\", \\\".\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test11() {\\n    assertEquals(true, Challenge.overlap(\\\"this will always be true\\\", \\\"*\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test12() {\\n    assertEquals(false, Challenge.overlap(\\\"this will always be false\\\", \\\"F\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test13() {\\n    assertEquals(true, Challenge.overlap(\\\"hey\\\", \\\"*********\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test14() {\\n    assertEquals(true, Challenge.overlap(\\\"a*c\\\", \\\"*b*\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test15() {\\n    assertEquals(true, Challenge.overlap(\\\"last test\\\", \\\"congrats you passed the last test\\\"));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"Create a function that takes two strings and returns true if either of the strings appears at the very end of the other string. Return false otherwise. The character * is a wildcard, so it can take the place of any character.\\n\\nExamples\\noverlap(\\\"ABC\\\", \\\"Ican'tsingmyABC\\\") ➞ true\\n\\noverlap(\\\"abc\\\", \\\"Ican'tsingmyABC\\\") ➞ true\\n\\noverlap(\\\"Ican'tsingmyABC\\\", \\\"abc\\\") ➞ true\",\"tags\":[\"conditions\",\"logic\",\"strings\",\"validation\"],\"timestamp\":{\"$date\":1568148837956},\"title\":\"Is One String in the Other?\",\"stats\":{\"completed\":{\"total\":54,\"ratings\":[2,2,2,2,2,3,3,2,2,3,3,2,2,0,5,2,1,2,2,4,3,2,0,1,3,1,0,3,2,3,3,0,3,3,3,2,2,1,2,3,2,1,3,3,1,3],\"rators\":[\"sxci7DYKNa6q22Sjq\",\"3pdgguqZgNDSAJSGm\",\"gXMfzkYnoTZXXemY8\",\"gofo35rKkbyPH9jFq\",\"CLmJduqJHX83dM4Pd\",\"fxaS5K7ZXo4FbTe36\",\"Es4eX2stRpyoXeC7f\",\"J9zJq7PMGb6mqzcHW\",\"8J2Dqqz9PaFufQzwY\",\"AraFx3EGW7PsqMPWt\",\"b4kvtfR2SqyBfbraY\",\"wYYMNPe8nSiJFbvJw\",\"gJbvbqosimaP4ZAYb\",\"uYv96ZSpA7tBHoAGX\",\"TrquEHytntLKHA4m2\",\"4RHx3H8EwP2oboW8e\",\"jyoLggHk8xQKZuoQC\",\"rwETZ6XCNoHCEyB66\",\"5seiNqw6ZXoF2GRRd\",\"kLkhLEtCFsKfGv7kg\",\"rehehi2Tr2mwaEoJE\",\"pBMXMQem6BpSeooYT\",\"imoNrk36ozReP939p\",\"k63LjKkX5p7SYng7C\",\"iq55QasecYJXKz8rx\",\"mfm3gB39arY8Rjb2y\",\"4CryJmbEsruAELrDt\",\"4RsakkyRXyYGwFxEa\",\"ZTrxKac4acZkiinwe\",\"azAzSkvJd7eyXY9x9\",\"gXTAie79kiw28tx5u\",\"jXTnL3JatkKjoifyb\",\"RGN3QTb5LXj4ZPPkj\",\"buX4mCQhtXCfBjeno\",\"LNCb5rksJLJ43L4Nw\",\"rhS8qXRjZcpDXkwnE\",\"vRXuYYBNuHEQ29fbm\",\"CggGfsERnPKGupFWp\",\"2NJZbusRvu3eJ4tHu\",\"wFRLGjA56kj7xyhmv\",\"Mou3PxQu4QqbDGpb2\",\"rWhXHhzF4W8bea6LP\",\"KMR6vNzvSKMA2cXnK\",\"a49eNnfRwSMxsDJXf\",\"htXCitorobtqYymjN\"],\"quality\":[2,4,4,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":3.75,\"family\":[{\"_id\":\"G3vh6eg7xYutMJYCb\",\"language\":\"cpp\"},{\"_id\":\"cdXXsXprvy9Ghdu7Y\",\"language\":\"csharp\"},{\"_id\":\"ZoDHtyWfFPttuTiQR\",\"language\":\"java\"},{\"_id\":\"taDMEiBjokE9AymBb\",\"language\":\"javascript\"},{\"_id\":\"rShXJNT2WQQiSiRx6\",\"language\":\"python3\"},{\"_id\":\"69ryFEWBvfZEffSjf\",\"language\":\"ruby\"},{\"_id\":\"naoBNFQRKDxrkQPKG\",\"language\":\"swift\"}]}}"]