a["{\"msg\":\"result\",\"id\":\"718\",\"result\":{\"_id\":\"ze68rGX45ajtjuBNX\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n\\tpublic static int maxPossible(int n1, int n2) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":2.764705882352941,\"familyId\":\"haZoPf5c9ixyrq4ac\",\"instructions\":\"Write a function that makes the **first number as large as possible** by swapping out its digits for digits in the second number.\\n\\nTo illustrate:\\n```\\nmaxPossible(9328, 456) ➞ 9658\\n// 9658 is the largest possible number built from swaps from 456.\\n// 3 replaced with 6 and 2 replaced with 5.\\n```\\n\\n### Examples\\n```\\nmaxPossible(523, 76) ➞ 763\\n\\nmaxPossible(9132, 5564) ➞ 9655\\n\\nmaxPossible(8732, 91255) ➞ 9755\\n```\\n\\n### Notes\\n- Each digit in the second number can only be used once.\\n- Zero to all digits in the second number may be used.\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(9658, Challenge.maxPossible(9328, 456));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(763, Challenge.maxPossible(523, 76));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(9655, Challenge.maxPossible(9132, 5564));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(9755, Challenge.maxPossible(8732, 91255));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(789, Challenge.maxPossible(589, 777));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(1, Challenge.maxPossible(1, 0));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(9, Challenge.maxPossible(8, 9));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n    assertEquals(98, Challenge.maxPossible(28, 19));\\n  }\\n\\t\\n\\t@Test\\n  public void test9() {\\n    assertEquals(42345, Challenge.maxPossible(12345, 4));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"Write a function that makes the first number as large as possible by swapping out its digits for digits in the second number.\\n\\nTo illustrate:\\nmaxPossible(9328, 456) ➞ 9658\\n// 9658 is the largest possible number built from swaps from 456.\\n// 3 replaced with 6 and 2 replaced with 5.\\n\\nExamples\\nmaxPossible(523, 76) ➞ 763\\n\\nmaxPossible(9132, 5564) ➞ 9655\\n\\nmaxPossibl\",\"tags\":[\"higher_order_functions\",\"strings\"],\"timestamp\":{\"$date\":1568568015141},\"title\":\"Maximize the First Number\",\"stats\":{\"completed\":{\"total\":81,\"ratings\":[2,2,2,2,2,3,3,3,3,3,4,4,0,4,1,3,4,2,3,2,2,2,3,3,4,2,4,0,4,4,1,2,4,3,2,2,4,3,4,3,2,4,4,2,3,2,1,2,2,5,2,3,3,4,2,2,2,4,3,4,3,4,2,2,4,3,4,2],\"rators\":[\"3pdgguqZgNDSAJSGm\",\"ZYT9LjgocbP4hzQK5\",\"sxci7DYKNa6q22Sjq\",\"CLmJduqJHX83dM4Pd\",\"Prw5Jq38wrSoj5QSF\",\"dGscPdzKKe2p4qYzs\",\"sy8qpAykttp6nMDyY\",\"XbBsZ7vSHdw88tibi\",\"YF79LnTdprobbYY5v\",\"vRXuYYBNuHEQ29fbm\",\"W4jpCs2jekeg5qAwc\",\"wpvJWmW9TxQQAZk4J\",\"oDZaopxpPAdqWXLqz\",\"YLwJkF2wuL3n9o6a2\",\"J9zJq7PMGb6mqzcHW\",\"cCrirxZEzgAwQt2T9\",\"Es4eX2stRpyoXeC7f\",\"W347YkKWzfvMbkuHr\",\"na8FNmNBXefqJSgqr\",\"FP33dtDWeBD64hHq3\",\"ko7oJ85JMftgcbkrr\",\"ngRNQYczN4QJ2tDN8\",\"kXEfD7xxEyWd7oxxL\",\"AyrEvM2GLX2jqM772\",\"D7dpRtRQDmteDSAXv\",\"rehehi2Tr2mwaEoJE\",\"2PR653L4KSN97r534\",\"7CRtTWC425yAMHdAp\",\"imoNrk36ozReP939p\",\"xnhBi4BCdJNAXXRvk\",\"zKPtimGM7CLYNYB4S\",\"gGnDsJz5hr2t9MKCF\",\"L6t3XwKxrTZtQWgKf\",\"2X8s2BDhbLy3YE93h\",\"gJbvbqosimaP4ZAYb\",\"82weQfHHmno4Mq4X7\",\"Wh7DKfxkYbMYjE3xw\",\"TrquEHytntLKHA4m2\",\"jyoLggHk8xQKZuoQC\",\"rwETZ6XCNoHCEyB66\",\"htXCitorobtqYymjN\",\"DkSMZ3jZLkwviKb9g\",\"BEjoBzgdBkGbGHJkv\",\"4RsakkyRXyYGwFxEa\",\"i3TRCkidxKop3WtE2\",\"k63LjKkX5p7SYng7C\",\"NzJKK8Cuf3bcqZfcw\",\"jRqY4i8gPemsZMBGf\",\"NsbHPeWBtAonYNXZc\",\"Ym8AjbKGSJooun3nt\",\"mGaEDPw5FsDb3vdnq\",\"FTHXj9Rfx9wdujSzy\",\"C9yBWYcZsjmJYww3K\",\"gXTAie79kiw28tx5u\",\"hcFuudsqE6jKFyavN\",\"rWhXHhzF4W8bea6LP\",\"mQKWauR6b252TmdX4\",\"jm4tNFjsgYKW5TZfp\",\"t2CNnSbqCxZPuBzGN\",\"c7uBxu2rgY77H5d79\",\"psZB2zLasaMgtf3Tb\",\"SDNgGz5BdQHsE9z3R\",\"MqyvPyccJ2XMrQYg4\",\"LNCb5rksJLJ43L4Nw\",\"rhS8qXRjZcpDXkwnE\",\"buX4mCQhtXCfBjeno\",\"2NJZbusRvu3eJ4tHu\",\"KMR6vNzvSKMA2cXnK\",\"wFRLGjA56kj7xyhmv\"],\"quality\":[5,5,4,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"isHidden\":false,\"quality\":4.833333333333333,\"family\":[{\"_id\":\"keLCuThwQRFZb9D94\",\"language\":\"cpp\"},{\"_id\":\"ze68rGX45ajtjuBNX\",\"language\":\"java\"},{\"_id\":\"7vowiHDR5oYksAjqQ\",\"language\":\"javascript\"},{\"_id\":\"FeNrBCG9rSdNeJTuX\",\"language\":\"python3\"},{\"_id\":\"bw8isSuGNcnmsx9EQ\",\"language\":\"ruby\"}]}}"]