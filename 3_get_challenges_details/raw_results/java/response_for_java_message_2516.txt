a["{\"msg\":\"result\",\"id\":\"813\",\"result\":{\"_id\":\"BWm34MorRuaJXiaz6\",\"author\":\"Edward Clark\",\"authorId\":\"3pdgguqZgNDSAJSGm\",\"code\":\"public class Challenge {\\n\\tpublic static String vigenere(String text, String keyword) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":3.652173913043478,\"familyId\":\"D6WjcRpdNojzYvAui\",\"instructions\":\"The **Vigenere Cipher** is a poly-alphabetic substitution cipher that uses a set of shift ciphers and a keyword.\\n\\nOne of the simplest ciphers is the Caesar/shift cipher, where each letter in the plaintext message is replaced by the letter a particular number of positions up, or downstream in the alphabet. Shift 1 Caesar cipher:\\n\\n | | | | | | | | | | | | | | | | | | | | | | | | |\\n---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---\\nA|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z\\nB|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z|A\\n\\nThe Vigenere table is generated by doing a shift-1 Caesar cipher as many times as the number of letters in the alphabet (English alphabet, for this challenge).\\n\\n | | | | | | | | | | | | | | | | | | | | | | | | |\\n---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---\\nA|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z\\nB|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z|A\\nC|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z|A|B\\nD|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z|A|B|C\\nE|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z|A|B|C|D\\nF|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z|A|B|C|D|E\\nG|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z|A|B|C|D|E|F\\nH|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z|A|B|C|D|E|F|G\\nI|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z|A|B|C|D|E|F|G|H\\nJ|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z|A|B|C|D|E|F|G|H|I\\nK|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z|A|B|C|D|E|F|G|H|I|J\\nL|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z|A|B|C|D|E|F|G|H|I|J|K\\nM|N|O|P|Q|R|S|T|U|V|W|X|Y|Z|A|B|C|D|E|F|G|H|I|J|K|L\\nN|O|P|Q|R|S|T|U|V|W|X|Y|Z|A|B|C|D|E|F|G|H|I|J|K|L|M\\nO|P|Q|R|S|T|U|V|W|X|Y|Z|A|B|C|D|E|F|G|H|I|J|K|L|M|N\\nP|Q|R|S|T|U|V|W|X|Y|Z|A|B|C|D|E|F|G|H|I|J|K|L|M|N|O\\nQ|R|S|T|U|V|W|X|Y|Z|A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P\\nR|S|T|U|V|W|X|Y|Z|A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q\\nS|T|U|V|W|X|Y|Z|A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R\\nT|U|V|W|X|Y|Z|A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S\\nU|V|W|X|Y|Z|A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T\\nV|W|X|Y|Z|A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U\\nW|X|Y|Z|A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V\\nX|Y|Z|A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W\\nY|Z|A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X\\nZ|A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y\\n\\nTo encipher the message, first, spaces and punctuation are removed to create the plaintext. All characters are transformed to uppercase to match the table:\\n\\n```\\nmessage = \\\"Soylent Green is people.\\\"\\n\\nplaintext = \\\"SOYLENTGREENISPEOPLE\\\"\\n```\\n\\nA keyword is chosen, in this case, \\\"spoiler\\\" and repeated as many times as necessary to match the length of the plaintext:\\n\\n```\\nkey = \\\"SPOILERSPOILERSPOILE\\\"\\n```\\n\\nThe last \\\"r\\\" is dropped as the plaintext length has been reached.\\n\\nThe plaintext and key are lined up. To encipher the 1st letter, a search is done across the *first row* to find the column of the plaintext letter, in this case `\\\"S\\\"`, in the *19th column*. Then a search is done down the *first column* to locate the row of the 1st key letter, in this case also `\\\"S\\\"`, in the *19th row*. The letter at the intersection between column 19 and row 19, `\\\"K\\\"`,  will be the 1st letter in the ciphertext.\\n\\nThe 2nd plaintext letter `\\\"O\\\"` is at column 15, while the 2nd key letter `\\\"P\\\"` is at row 16. The letter at the intersection is `\\\"D\\\"`. And so on.\\n\\n | | | | | | | | | | | | | | | | | | | |\\n---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---\\nPlaintext    |S|O|Y|L|E|N|T|G|R|E|E|N|I|S|P|E|O|P|L|E\\nKey    |S|P|O|I|L|E|R|S|P|O|I|L|E|R|S|P|O|I|L|E\\nCiphertext    |K|D|M|T|P|R|K|Y|G|S|M|Y|M|J|H|T|C|X|W|I\\n\\nCreate a function that takes two strings: a message or ciphertext, and a keyword. Return the ciphertext if the input is a message, or the deciphered text (without spaces or punctuation) if the input is in ciphertext.\\n\\n### Examples\\n```\\nvigenere(\\\"Soylent Green is people.\\\", \\\"spoiler\\\") ➞ \\\"KDMTPRKYGSMYMJHTCXWI\\\"\\n\\nvigenere(\\\"Darth Vader is Luke's father.\\\", \\\"spoiler\\\") ➞ \\\"VPFBSZRVTFQDPLCTGNLXYWG\\\"\\n\\nvigenere(\\\"HMRSSAIEKLSAXQILCCAC\\\", \\\"python\\\") ➞ \\\"SOYLENTGREENISPEOPLE\\\"\\n```\\n\\n### Notes\\nN/A\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.*;\\n\\n/**\\n * @author edwardclark\\n**/\\n\\npublic class ChallengeText {\\n\\tfinal String t1 = \\\"Soylent Green is people.\\\";\\n\\tfinal String t2 = \\\"SOYLENTGREENISPEOPLE\\\";\\n\\tfinal String t3 = \\\"Darth Vader is Luke's father.\\\";\\n\\tfinal String t4 = \\\"TYLERDURDENWASHIMALLALONG\\\";\\n\\tfinal String t5 = \\\"Malcolm Crowe was dead the whole time.\\\";\\n\\tfinal String t6 = \\\"THEYWERETHEGHOSTSHAUNTINGTHEIROWNHOUSE\\\";\\n\\n\\t@Test\\n\\tpublic void test1() {\\n\\t\\tassertEquals(\\\"KDMTPRKYGSMYMJHTCXWI\\\", Challenge.vigenere(t1, \\\"spoiler\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test2() {\\n\\t\\tassertEquals(t2, Challenge.vigenere(\\\"HMRSSAIEKLSAXQILCCAC\\\", \\\"python\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test3() {\\n\\t\\tassertEquals(\\\"VPFBSZRVTFQDPLCTGNLXYWG\\\", Challenge.vigenere(t3, \\\"spoiler\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test4() {\\n\\t\\tassertEquals(t4, Challenge.vigenere(\\\"LNZMCVJFLPFLOASABOTWSACVR\\\", \\\"spoil\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test5() {\\n\\t\\tassertEquals(\\\"QDLDWEQFRPEXADSEMTHWHFEASOEUQFI\\\", Challenge.vigenere(t5, \\\"edabit\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test6() {\\n\\t\\tassertEquals(t6, Challenge.vigenere(\\\"FVZGAWDSOPIYTCNBWZMIIBMFSHCMMJAKIPSMES\\\", \\\"movies\\\"));\\n\\t}\\n}\",\"language\":\"java\",\"summary\":\"The Vigenere Cipher is a poly-alphabetic substitution cipher that uses a set of shift ciphers and a keyword.\\n\\nOne of the simplest ciphers is the Caesar/shift cipher, where each letter in the plaintext message is replaced by the letter a particular number of positions up, or downstream in the alphabet. Shift 1 Caesar cipher:\\n\\n | | | | | | | | | | | | | | | | |\",\"tags\":[\"arrays\",\"loops\",\"strings\",\"cryptography\"],\"timestamp\":{\"$date\":1571153962836},\"title\":\"Vigenere Cipher\",\"stats\":{\"completed\":{\"total\":23,\"ratings\":[4,4,4,4,4,5,3,1,5,0,5,4,4,2,4,5,3,5,5,2,3,5,3],\"rators\":[\"3pdgguqZgNDSAJSGm\",\"fZky27mpbfX7soJKa\",\"rehehi2Tr2mwaEoJE\",\"4RHx3H8EwP2oboW8e\",\"oMLSgpSFQnY4ui8cB\",\"TrquEHytntLKHA4m2\",\"rwETZ6XCNoHCEyB66\",\"pBMXMQem6BpSeooYT\",\"k63LjKkX5p7SYng7C\",\"2g9DndhBotcaKDiFD\",\"Ym8AjbKGSJooun3nt\",\"vTMyc3otxo9jPDpTZ\",\"QXR2qGcvrK5Xkxdea\",\"Es4eX2stRpyoXeC7f\",\"gXTAie79kiw28tx5u\",\"rhS8qXRjZcpDXkwnE\",\"hRJTCmZsPrYF8nAnf\",\"RsujLHaML6L3KinzK\"],\"quality\":[]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":0,\"family\":[{\"_id\":\"H4uneji9xSR6xfp5L\",\"language\":\"cpp\"},{\"_id\":\"BWm34MorRuaJXiaz6\",\"language\":\"java\"},{\"_id\":\"KoCfaavqqCqThDC6P\",\"language\":\"javascript\"},{\"_id\":\"k2aWnLjrFoXbvjJdb\",\"language\":\"python3\"},{\"_id\":\"sN7kuHR9oKNXuKbyf\",\"language\":\"ruby\"},{\"_id\":\"Hepd6NWEBTYouWGhz\",\"language\":\"swift\"}]}}"]