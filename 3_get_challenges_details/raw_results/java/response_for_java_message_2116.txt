a["{\"msg\":\"result\",\"id\":\"617\",\"result\":{\"_id\":\"cSfsSmpnGqeAEiN8a\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n\\tpublic static String kixCode(String addr) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":2.25,\"familyId\":\"rmNk6BDZnxJep5QGv\",\"instructions\":\"In The Netherlands we have PostNL, the postal company. They use KixCodes, a fast way to deliver letters and packages that can be scanned during the process.\\n\\n![Kix Code](https://edabit-challenges.s3.amazonaws.com/KIX-code-van-PostNL_tcm10-8633.gif)\\n\\nThe code is a combination of: \\\"Postal code\\\", \\\"House/box/call number\\\" and \\\"House appendage / suffix\\\"\\n\\nIf there is a character between the house number and the suffix, we need to replace that with an X. Eventually, the code will be printed in the KixCode font.\\n\\n### Examples\\n```\\nkixCode(\\\"PostNL, Postbus 30250, 2500 GG 's Gravenhage\\\") ➞ \\\"2500GG30250\\\"\\n\\nkixCode(\\\"Liesanne B Wilkens, Kogge 11-1, 1657 KA Abbekerk\\\") ➞ \\\"1657KA11X1\\\"\\n\\nkixCode(\\\"Dijk, Antwoordnummer 80430, 2130 VA Hoofddorp\\\") ➞ \\\"2130VA80430\\\"\\n```\\n\\n### Notes\\n- Your function will get an address line (string) separated by comma's.\\n- The input format will always be the same.\\n- Watch out for the different suffixes!\",\"isHidden\":false,\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(\\\"2500GG30250\\\", Challenge.kixCode(\\\"PostNL, Postbus 30250, 2500 GG 's Gravenhage\\\"));\\n  }\\n\\n\\t@Test\\n  public void test2() {\\n    assertEquals(\\\"1231FZ13XHS\\\", Challenge.kixCode(\\\"De Jong, Havendijk 13 hs, 1231 FZ POSTDAM\\\"));\\n  }\\n\\n\\t@Test\\n  public void test3() {\\n    assertEquals(\\\"9421MC46\\\", Challenge.kixCode(\\\"B. Bartelds, Boerheem 46, 9421 MC Bovensmilde\\\"));\\n  }\\n\\n\\t@Test\\n  public void test4() {\\n    assertEquals(\\\"3331CH182XB\\\", Challenge.kixCode(\\\"Huisman, Koninginneweg 182 B, 3331 CH Zwijndrecht\\\"));\\n  }\\n\\n\\t@Test\\n  public void test5() {\\n    assertEquals(\\\"1657KA11X1\\\", Challenge.kixCode(\\\"Liesanne B Wilkens, Kogge 11-1, 1657 KA Abbekerk\\\"));\\n  }\\n\\n\\t@Test\\n  public void test6() {\\n    assertEquals(\\\"2130VA80430\\\", Challenge.kixCode(\\\"Dijk, Antwoordnummer 80430, 2130 VA Hoofddorp\\\"));\\n  }\\n\\n\\t@Test\\n  public void test7() {\\n    assertEquals(\\\"5575BM200XA\\\", Challenge.kixCode(\\\"Van Eert, Dirk van Heinsbergstraat 200-A, 5575 BM Luyksgestel\\\"));\\n  }\\n\\n\\t@Test\\n  public void test8() {\\n    assertEquals(\\\"3847LN130B\\\", Challenge.kixCode(\\\"B.C. Dieker, Korhoenlaan 130b, 3847 LN Harderwijk\\\"));\\n  }\\n\\n\\t@Test\\n  public void test9() {\\n    assertEquals(\\\"8304DE31\\\", Challenge.kixCode(\\\"Mahir F Schipperen, IJsselmeerlaan 31, 8304 DE Emmeloord\\\"));\\n  }\\n\\n\\t@Test\\n  public void test10() {\\n    assertEquals(\\\"3522PG129X7\\\", Challenge.kixCode(\\\"Jet de Wit, Wielingenstraat 129/7, 3522 PG Utrecht\\\"));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"In The Netherlands we have PostNL, the postal company. They use KixCodes, a fast way to deliver letters and packages that can be scanned during the process.\\n\\nKix Code\\n\\nThe code is a combination of: \\\"Postal code\\\", \\\"House/box/call number\\\" and \\\"House appendage / suffix\\\"\\n\\nIf there is a character between the house number and the suffix, we need to replace that with\",\"tags\":[\"algorithms\",\"formatting\",\"regex\"],\"timestamp\":{\"$date\":1575458549102},\"title\":\"KixCodes in the Netherlands\",\"stats\":{\"completed\":{\"total\":36,\"ratings\":[2,2,2,2,2,2,0,3,2,0,1,2,5,3,0,3,2,3,1,2,2,3,4,2,3,2,3,3,3,3,2,3],\"rators\":[\"sxci7DYKNa6q22Sjq\",\"3gxJoNp59B4eoyyed\",\"Es4eX2stRpyoXeC7f\",\"qb2DTmzQj4vNfq5K7\",\"fbYN9Jp46RqBqCd2K\",\"8J2Dqqz9PaFufQzwY\",\"hB5mgzMwQSnhBzi7P\",\"jyoLggHk8xQKZuoQC\",\"TrquEHytntLKHA4m2\",\"fZjkX29nhRTWWb75k\",\"gJbvbqosimaP4ZAYb\",\"waz46PhT8QwnTWMBR\",\"WZujpe8yQAyZmpWHg\",\"5seiNqw6ZXoF2GRRd\",\"imoNrk36ozReP939p\",\"k63LjKkX5p7SYng7C\",\"mfm3gB39arY8Rjb2y\",\"dpJTai3i9aNkCS3sa\",\"4RsakkyRXyYGwFxEa\",\"yv5NdD4gS38t98fRL\",\"gXTAie79kiw28tx5u\",\"Ym8AjbKGSJooun3nt\",\"yXGiiSAR5nBHnH3yr\",\"azAzSkvJd7eyXY9x9\",\"Zt9w3SiJxSE4SfzRp\",\"2sZrwmQcNFJG3d3HW\",\"buX4mCQhtXCfBjeno\",\"KMR6vNzvSKMA2cXnK\",\"a49eNnfRwSMxsDJXf\",\"rWhXHhzF4W8bea6LP\"],\"quality\":[4,4,3]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":3.6666666666666665,\"family\":[{\"_id\":\"NcK52qoEXHCAeu4m6\",\"language\":\"cpp\"},{\"_id\":\"cSfsSmpnGqeAEiN8a\",\"language\":\"java\"},{\"_id\":\"o5zmKhLucmgnqBmWy\",\"language\":\"javascript\"},{\"_id\":\"XnByzPPcGo5CuTmZ4\",\"language\":\"python3\"},{\"_id\":\"68RX9D8HLsKdgofck\",\"language\":\"ruby\"}]}}"]