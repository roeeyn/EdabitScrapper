a["{\"msg\":\"result\",\"id\":\"262\",\"result\":{\"_id\":\"EmRPehwiJFk6rf2iD\",\"archived\":false,\"author\":\"kochug\",\"authorId\":\"vQEmjTRgmdGNYB7yk\",\"code\":\"public class Program {\\n\\tpublic static String[] isFourLetters(String[] s) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.125,\"familyId\":\"45cib5NYHNR9akoMB\",\"instructions\":\"Create a function that takes an array of strings and returns the words that are exactly four letters.\\n\\n### Examples\\n```\\nisFourLetters([\\\"Tomato\\\", \\\"Potato\\\", \\\"Pair\\\"]) ➞ [\\\"Pair\\\"]\\n\\nisFourLetters([\\\"Kangaroo\\\", \\\"Bear\\\", \\\"Fox\\\"]) ➞ [\\\"Bear\\\"]\\n\\nisFourLetters([\\\"Ryan\\\", \\\"Kieran\\\", \\\"Jason\\\", \\\"Matt\\\"]) ➞ [\\\"Ryan\\\", \\\"Matt\\\"]\\n```\\n\\n### Notes\\nYou can expect valid strings for all test cases.\",\"lab\":\"import static org.hamcrest.core.Is.is;\\nimport org.junit.Test;\\nimport static org.junit.Assert.assertThat;\\n\\npublic class ChallengeTests {\\n\\t@Test\\n\\tpublic void test1() {\\n\\t\\tassertThat(Program.isFourLetters(new String[]{\\\"Ryan\\\", \\\"Kieran\\\", \\\"Jason\\\", \\\"Matt\\\"}), is(new String[]{\\\"Ryan\\\", \\\"Matt\\\"}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test2() {\\n\\t\\tassertThat(Program.isFourLetters(new String[]{\\\"Tomato\\\", \\\"Potato\\\", \\\"Pair\\\"}), is(new String[]{\\\"Pair\\\"}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test3() {\\n\\t\\tassertThat(Program.isFourLetters(new String[]{\\\"Kangaroo\\\", \\\"Bear\\\", \\\"Fox\\\"}), is(new String[]{\\\"Bear\\\"}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test4() {\\n\\t\\tassertThat(Program.isFourLetters(new String[]{\\\"Red\\\", \\\"Blue\\\", \\\"Green\\\", \\\"Pink\\\"}), is(new String[]{\\\"Blue\\\", \\\"Pink\\\"}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test5() {\\n\\t\\tassertThat(Program.isFourLetters(new String[]{\\\"is\\\", \\\"up\\\", \\\"two\\\", \\\"elephant\\\"}), is(new String[]{}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test6() {\\n\\t\\tassertThat(Program.isFourLetters(new String[]{}), is(new String[]{}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test7() {\\n\\t\\tassertThat(Program.isFourLetters(new String[]{\\\"jazz\\\", \\\"quiz\\\", \\\"jump\\\"}), is(new String[]{\\\"jazz\\\", \\\"quiz\\\", \\\"jump\\\"}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test8() {\\n\\t\\tassertThat(Program.isFourLetters(new String[]{\\\"\\\"}), is(new String[]{}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test9() {\\n\\t\\tassertThat(Program.isFourLetters(new String[]{\\\"Broccoli\\\", \\\"Carrot\\\", \\\"Spinach\\\"}), is(new String[]{}));\\n\\t}\\n}\",\"language\":\"java\",\"summary\":\"Create a function that takes an array of strings and returns the words that are exactly four letters.\\n\\nExamples\\nisFourLetters([\\\"Tomato\\\", \\\"Potato\\\", \\\"Pair\\\"]) ➞ [\\\"Pair\\\"]\\n\\nisFourLetters([\\\"Kangaroo\\\", \\\"Bear\\\", \\\"Fox\\\"]) ➞ [\\\"Bear\\\"]\\n\\nisFourLetters([\\\"Ryan\\\", \\\"Kieran\\\", \\\"Jason\\\", \\\"Matt\\\"]) ➞ [\\\"Ryan\\\", \\\"Matt\\\"]\\n\\nNotes\\nYou can expect valid strings for all test cases.\",\"tags\":[\"strings\",\"arrays\",\"validation\",\"conditions\"],\"timestamp\":{\"$date\":1523648346554},\"title\":\"Return the Four Letter Strings\",\"stats\":{\"completed\":{\"total\":349,\"ratings\":[1,1,1,1,1,0,1,1,1,1,2,0,0,0,1,1,2,1,1,1,2,1,1,1,1,1,0,1,0,1,0,1,3,1,1,2,2,1,1,1,1,2,1,1,0,0,1,5,0,2,0,1,1,1,0,1,3,1,1,2,1,1,1,1,1,0,1,0,1,1,2,1,1,2,1,1,2,0,2,1,1,0,0,0,1,2,1,2,2,3,1,0,2,2,1,1,1,2,1,1,1,1,1,1,1,1,2,0,0,1,1,1,0,0,1,1,0,2,1,2,0,1,1,3,1,0,1,2,0,1,1,1,0,1,2,1,1,1,1,2,2,2,1,0,1,2,2,1,2,3,1,2,1,0,1,1,1,1,0,1,2,2,3,2,0,1,1,1,1,1,0,2,2,1,1,1,0,2,0,0,1,1,1,0,1,2,1,0,1,3,0,0,2,0,3,0,0,2,1,1,1,1,1,0,0,2,1,1,0,1,2,1,0,5,1,1,1,1,1,1,2,0,1,0,2,1,0,2,2,2,0,0,4,2,2,2,2,1,1,2,0,0,3,1,1,0,5,1,2,1,1,2,1,1,0,2,1,5,1,1,2,1,0,0,1,1,1,2,1,1,0,1,1,1,1,2,3,1,2,0,1,1,1,1,0,1,0,1,0,1,1,2,1,3,1,1,1,1,1,1,1,2,1,1],\"rators\":[\"vQEmjTRgmdGNYB7yk\",\"c5FoJ26xo6Jer46Cv\",\"zMEyen5f2qNu44YaN\",\"z6nQSSKTnJoTJG6GR\",\"hcti8afrkC4abdpqe\",\"sBAQgme9imkPrH2Xm\",\"P7mhJqcni22J6qdrz\",\"ZuSpr3RhJsLyYzQLJ\",\"RkXfoeQFNzfw5rdug\",\"Los3N4Y6EGJmfCTer\",\"5PXxhR3Bctqox3PE6\",\"RzFHd8P5vHPyg3wBY\",\"agtC5JGNqaWBAWCzz\",\"z2crWv2athzYWTBMa\",\"iRgkGNCNtoPKC25EY\",\"ogAtfiy94gCF9742d\",\"LqrptEcAZ3tbdZ8b4\",\"CXtgfPRAYL3PZ6JeK\",\"dJcfh6gASjPCWEBoe\",\"3PC2SXfqzr825AXKK\",\"KSHwLv3Ryafvy2eS6\",\"hFARF85KeXiAtX8aE\",\"uF5SXzwu7zEbcoCLM\",\"M3mkzSYXCpCt2HhC3\",\"BgQpycHDeTFCKmdkN\",\"hfxANdjdEaDpumi4g\",\"QiKGftY3qFAsv8GCG\",\"sb9xfoLgHivsTTFCN\",\"cXnNtKFWbCwyxpEwE\",\"7zaKZkjCwfsqrmZFW\",\"vz5LbqWPwpxAejP5k\",\"svTB2tjBRpbLtbq8w\",\"bP2GcW9sGX8q2DsER\",\"7LrgrixSzJxiGaF66\",\"6gKgLfS6kC9GQgDJn\",\"GRZzKCbeb4xKHFCrZ\",\"BuFw8zHWYAsMvz7k8\",\"kxP2G9dmiRzxLuYoB\",\"rQpthoJte6rreQd4j\",\"fskHo2C2gMKZxPZ5i\",\"79ZbLzp7xepvkonoh\",\"R3Yvf7z4HzQo2fBFb\",\"CaoBNxekPwAD9Lsyc\",\"WXLd6Yr7iWjTpJDRA\",\"fbNWxXTqZy2mXNbGJ\",\"we32tFXq3AoRuprwd\",\"z3HbZkmL5echimwFQ\",\"ddfeZ4pbbcXFXqZmY\",\"Sm2J8ZvpXARgFy9WJ\",\"sjngWfShdeS3jYEpZ\",\"7yTWwspi6f7maXWRj\",\"tW2XYfMDPBbMknTmo\",\"AfiYSAkd4PtCAq6MF\",\"74zXNB4jwSQ7agXCe\",\"zovXwG27gzSSW7cia\",\"6txZnj8BuNWvnZacj\",\"9w8LWqMrSHrxxZXZx\",\"acQqozPi6NiCFqMGY\",\"79x9hFu3rkQXNRpG4\",\"vTxMZ7yTfdSqGovhZ\",\"KMdpTq6EfLsCFGZE4\",\"YGYf9GKzaF8CWnDHE\",\"8AJQH2pDjMkmbQexF\",\"LmSG3XB2Nw7cCMrZb\",\"dYx4nRm7ynaYSgrxK\",\"ZrJwpZKQoWygGAHvy\",\"bGHDgwkiAp7RjBiYo\",\"Kc2foqht8pXCDuQPh\",\"eZQ7uz8hhE5gESjXH\",\"YF9fxqCgeoe6Mzee4\",\"ExxYybEidb7KfGpoy\",\"JvcakCu2TnmozRSMA\",\"9hK6CreMyf3LNiRrf\",\"uigcF8wgYBpc9c6bs\",\"vtosp2wmv3bJ9Qgio\",\"CDc255P9KitqXNeXr\",\"3riR3H5ei3T86EEzz\",\"DNmsdc9y6DQDWkJYR\",\"YLqdr7bYjwew2KM4N\",\"qzFMJGxMErfBhExMm\",\"hCoyBFeNMdaC88ZFi\",\"QSmj9J8McjsH3FM7N\",\"fpJdrQR7mHDis5xGx\",\"ywgSbAqkCj38KuaW8\",\"29s9dWyag5m6phKrM\",\"HEYQAxazfCRWFTDRr\",\"nyHk4TXrw3uqHm3qs\",\"niz9xRvhYCLYvGJnW\",\"uvDqouJjQp2P3zeM6\",\"94bW6m4Ckd5tWmvrK\",\"Ss6c4XQXgxD5kS3wW\",\"yJyjT7Z2PPQmzzWpP\",\"erJWHqarGkGtPJ3C4\",\"34rKGZYu7vEdoCu7d\",\"5znpaFDoToJtAtF3h\",\"vew4EJaM4jGBsvnTp\",\"ydos8Ba8nZdYRNJpS\",\"T6j7qdvD37y8DLKzT\",\"CDkkdvDdqjDihTcFS\",\"cp3X8hk8yNME7qoD9\",\"JSSLvJPs8JebyfeS9\",\"MDPYZzwYabGLcLKD7\",\"qGFqqzbwxiz7kZkPW\",\"a49eNnfRwSMxsDJXf\",\"vRXuYYBNuHEQ29fbm\",\"LTHCxsdjqzXpaXShT\",\"aMNhTh35QQAs33ycQ\",\"o5H3aMNucmwhnsWdL\",\"3pdgguqZgNDSAJSGm\",\"sxci7DYKNa6q22Sjq\",\"9c8n7ti5vCjTRgiGN\",\"Yohr2MmAyaWGMbB35\",\"p28tmk8bcHjXsxaAg\",\"FvWKuSqHdXZ7HM2sD\",\"t2kdBPj9qQAXY2Ehd\",\"imzXG2xpkAxZBanFS\",\"3gxJoNp59B4eoyyed\",\"teCeoNkdeQEciPZ7H\",\"8rF6PHMSaybTDsvXr\",\"ZexarDybriuFWGA5a\",\"sb7Nh56pPFtPxLogT\",\"ZBDiEMi7dbjRL55LB\",\"Eqt2WZ9iPdhM6Ma9Q\",\"viQwZYpKbEFmfjpTe\",\"jNcwk4jksmPTcAoTu\",\"yazNfwgLx7jSAZ8Tv\",\"fnCSoGvytLcNbjekC\",\"NnZDxyidwrk6T6cj7\",\"ho2xwFjGfg6WwQArS\",\"ZiozQXopCXKLkQMfC\",\"tuw4ns5eG9WKzrddC\",\"tfs6uiysC8atFan4t\",\"8gJEpXHctGqC9ngcJ\",\"6TDEhHv3uQCZLQeiH\",\"WPWBKqdkzkeGpgFR2\",\"Gq9x9GKbssg4NjXcj\",\"iR6YHZipKvHtAiR6m\",\"qjh9QdweLqQDP9NHP\",\"FCtas8YzE46B9BAyf\",\"w2s7fFG7zeKBfCTJZ\",\"rgEfWvescaWsyep2A\",\"CLmJduqJHX83dM4Pd\",\"ybKny9NBc3i9fATk6\",\"n6N2dYX8MghgDtjx7\",\"zh9GGSpmAnDvdARMv\",\"3KjxQu9RZ8ZSywvLz\",\"8JyqsSbN2FJXPr3cw\",\"onBbp8THHqaMMMAZD\",\"J9zJq7PMGb6mqzcHW\",\"s2G7xhbjaNdkGbhRX\",\"Xf5mRzAb6BoGp7daC\",\"qJZsi5rhRnWA38FbA\",\"Md3zwe6ZCp4vqdx5j\",\"u4yanfWeeZsN3xWgc\",\"s8o9ptNnpNGktBWdX\",\"FSSM3xcaTXGcxqYGz\",\"cwfpQQAowCJCE3zME\",\"qx9XHErKygcLiFGhX\",\"D3ASM3aWpcQ8gvnin\",\"YLwJkF2wuL3n9o6a2\",\"S47iwvGMEBQAKHWfd\",\"MrNyfG8SGjjBKLvgc\",\"5RcAXjQAbqQtWppy6\",\"AcK5ppXpcA2dtKREa\",\"M5n9zd5LtuuwJr668\",\"mRwxbzaBc4Fg5q9Hw\",\"ko7oJ85JMftgcbkrr\",\"5Kf9z3G9QBs9fkvLs\",\"PqAepaMciyBb7QQRK\",\"EZNT8B7yQnnZmuwCf\",\"gBGjCfJvPHswDM5JQ\",\"i5QeAsrM4m6hzPTku\",\"WuAkXKpcrQy867yCw\",\"Es4eX2stRpyoXeC7f\",\"uqNAu5PZnSDRqZKoN\",\"S8NaYMWB3aZXgRdvH\",\"j2hKJg9sh9m3HWFgo\",\"JFodQijHHdRkkrZvT\",\"gGnDsJz5hr2t9MKCF\",\"g3MReD5ntBtecotoa\",\"xEuitW7gMaqzhq6x8\",\"kSnwZCFe7kB2GteiJ\",\"DzvdGwHEjqsX7wyKr\",\"fbYN9Jp46RqBqCd2K\",\"HsFc9PgmpP2X9Fwh9\",\"f6uGKbmMdBYCjrMBh\",\"wYYMNPe8nSiJFbvJw\",\"fZjkX29nhRTWWb75k\",\"ye5Krzmpgt8keXCnx\",\"YFHkjbM6obMSj24zi\",\"eWaq9hCBYq4oQYgEx\",\"rTj67TTydxqkpwFtN\",\"uYv96ZSpA7tBHoAGX\",\"yaRxTMqSvrkWuNaNR\",\"mdEQJ2fmGmkbhbvNw\",\"2cdvd8yuPLSwvGj9w\",\"aGmi6SaZpcYsu5MQb\",\"Kso7rzAKB4TTCPKgM\",\"jDTGwryGygbZiqCEg\",\"bw6kHP3k8dP2qBa5v\",\"8J2Dqqz9PaFufQzwY\",\"PXBjtEAAwibHxNZXq\",\"hB5mgzMwQSnhBzi7P\",\"GEzaJZ2cPjENT4ERQ\",\"jyoLggHk8xQKZuoQC\",\"5seiNqw6ZXoF2GRRd\",\"8zZ6xmzpiFair25qr\",\"Yp7uvStL97cC9fKkY\",\"B4pxRqzo43M7S8FbP\",\"DzLdw6wEL2Nt5mrsp\",\"WZujpe8yQAyZmpWHg\",\"TrquEHytntLKHA4m2\",\"3mLC3gMWsjxynHgW2\",\"meS77LKqRswhF5LAy\",\"htXCitorobtqYymjN\",\"y6kfyYmydcD8tkBk7\",\"4CkQqXscLn5Wn9TRc\",\"zwruFCmuHkwJTpYqg\",\"DkSMZ3jZLkwviKb9g\",\"AeJSxRqw2dJZuGvdk\",\"rvojHhKH3DaxotefQ\",\"q2tzvkrLASvSjkek9\",\"TBamPvEAh6xARn8Kd\",\"EcKPDmD4GmeFJGDTL\",\"QXkrEiAuhuXaZmL4C\",\"osXNzc2aCxspRwheS\",\"g4NCSxxHqHCGMpWwT\",\"muXMnzQwGLzN6j2Jr\",\"9KAbm9niQ9Cv9LefP\",\"ZMd8it647JSYTvx8Z\",\"nbH6pjzJS9Z35JD9r\",\"DAQX9mhHdMTqyYbvh\",\"RhPg33AdzvSZmibXa\",\"ce5bSQrMmuRF9f8yi\",\"YcjwCvYut6834Jzd8\",\"uqnjMLLae4heAZNNe\",\"ZXWDtCrM9ev3439oi\",\"Fd9765rksgPK4E2Zy\",\"7Wq4ZNz5c3irDR6br\",\"yXGiiSAR5nBHnH3yr\",\"ZkvBs5oddaBfKj28G\",\"KCEsMas5BbmiD2Q9K\",\"ZiN6yB9rACMaYgseC\",\"fRYcPHuyEdqngMzC4\",\"gpd8yji9GXJruAtje\",\"BRKt83mz4JeoepSpm\",\"a777e8chPvJkY3tKa\",\"zTEKMLMevG8xfxEj6\",\"pi76g3eRpnKrhee2a\",\"ydF8Re5wK8MmaDbLh\",\"fADAnmvM4LibcQWTr\",\"6ehQMeGtrhnhot5zK\",\"gXTAie79kiw28tx5u\",\"J7epB3qSQJ2E8vWkY\",\"9amCEoE43AdSneJZ7\",\"JszPst3958te56jFk\",\"NdLzb3BZ5J8ftnCkS\",\"izdAHuFQcWY2pa3YG\",\"xv5obFhsxY93mqR5S\",\"P5BhjZxyeHQYTNyB9\",\"mG8HqKiAQFTdRZthG\",\"Tf7TJFSPktJBgLA4k\",\"7gBLtxKryhTryH5zb\",\"jXTnL3JatkKjoifyb\",\"8Xx8nWXRydHDBGfQf\",\"tyLS9T6YMfg9fMtYJ\",\"hDeaTsprkH6CmvSAR\",\"Ym8AjbKGSJooun3nt\",\"BWqQ68pvNedARDcBN\",\"32uy2LgegdmLGpebX\",\"R6MCGv6W8g3dpRbhf\",\"ikxSkiQjCjYPsFwMT\",\"fD2vkjhwWmxbs3aAn\",\"uNK8tLSseShR8wcA4\",\"cJmmvnmJSXvBXtydi\",\"47PyFbZyxWuP9Bgga\",\"3EfDGZ9Sgz5zxzD7a\",\"rcvmayp8iSXxxEyMj\",\"5jDgvkGd4JwatrYXg\",\"YL4rQWKadY7sGGtGG\",\"44arJN5SYx3HyfetA\",\"W56bWmpQeLJ9JEDsa\",\"RGN3QTb5LXj4ZPPkj\",\"hhxjQREtmHSheH9Pj\",\"PJu3WcTpfRrvHfQiS\",\"LCuvvWMwiGuqTwNRi\",\"Wi4H6ayKsNDWWQCG5\",\"Mmi7ByNfsjNBBo6uQ\",\"3SgSNoAB3sxaYeT3w\",\"uFfEio8nzDvL8emhp\",\"rNAtHTutzkDkhATPu\",\"btabi3PdyisuY5tn9\",\"kuxkd9Rj2ejfusa7G\",\"E2hpke7mHxAWsw5t9\",\"QRv96jmNaYsWkxQEG\",\"zZfMwLuoERGmybgib\",\"buX4mCQhtXCfBjeno\",\"yb8T3nuL4evaeJW6k\",\"a6fgDQTddtZCKfnzR\",\"4ySzqKC5s3ZRpG9di\",\"xEX3TDY6C2h82dJTn\",\"HXbTKW3jmmyRAsKrr\",\"tdinF6MRzC6AdNX8g\",\"rhS8qXRjZcpDXkwnE\",\"pYonfGP4u9HNL9Z32\",\"XaK5PzFcConAq9WXJ\",\"zTtKiCbLWzaf2Yjo4\",\"uw47663LqPME8btaA\",\"wFRLGjA56kj7xyhmv\",\"srJ34BaybkQh3qRkM\",\"cR3ibTMxLyEdDFCHY\",\"5LDvZHCDJqePeBrCg\",\"jCjCvyhqhpebkJn34\",\"TCTZucJN3tJh5t7MB\",\"afvP29FhRou2bTaav\",\"KMR6vNzvSKMA2cXnK\",\"tjFkD8gLHEWEpEuNL\",\"KPz93xbvJ9x7okGs6\",\"RsujLHaML6L3KinzK\",\"FNYPC36yqPmTKDaqR\",\"unqzSsxpxj9sZ7rbD\",\"FxPDKKibxnZjGJLs6\",\"nSLvkGEpiYCtcBLaa\",\"ckQwFFWyLXmDQAaCn\",\"5HGyJtoZ3AffzAZAv\",\"x5CeTiD474ZHYF5t2\",\"H3XLNCWB5yXt5YYXn\",\"nFbmNzMQ38TncmfQX\",\"3Gf7ikLijfoxabiPY\",\"Q2TD7GcXaL5F3d2LM\"],\"quality\":[5,5,5,5,4,5,4,5,5,5,3,5,5,5,5,4,4,5,5,5,5,5,5,5,5,5,5,5,3,5]},\"complaints\":{\"total\":0,\"reasons\":[],\"skippers\":[\"vQEmjTRgmdGNYB7yk\"]},\"instructions\":{\"score\":50.7,\"voters\":[\"LkFGtKuTEnKHnrRYB\",\"9xG86hGxbRupBcA6S\",\"AP7JjYajNdGHFXBze\",\"BYJkzdLzDhmcnLgK4\",\"ucM6BpuAs4WcNWt4B\",\"LTgf3Z6igYRGyg4K4\",\"aW8Qb8d3hAsWp2rWn\",\"BgQpycHDeTFCKmdkN\",\"SEuqKmAXRTmfRREJu\",\"TnCNDXN7FkjmFihL8\",\"3upByfH6Nyusw3xEr\",\"9mqB7A6qRRBzNoaZv\",\"bANp4fGrBZdiPwxB5\",\"48cHZMkjiopmJJxAM\",\"v9zmtRARfWL5TB9iM\",\"cpqmoNnxDdT9QWHm2\",\"wsqQHPQ4v3XtX7mN7\",\"kkahSiwvuQkvaFnFq\",\"TnLbbRSCNvmSDKdmK\",\"Fqx8xT9hhAkAAbJ3k\",\"vRk3MFN39eaWR2FC2\",\"8ShTPp8oqaXm4hKQ5\",\"oDWHiqYwB4YaReM2j\",\"j9gg82Bp2L7nw7DyJ\",\"iE4X9ub7EQg564NcG\",\"nHEyhkMKAJKaEHko4\",\"ZsW7N7iy7eL7u57cd\",\"X8PZJrQyrAz7Kucvo\",\"Hig73oSSA2qgRAXwG\",\"bZ23veWavLvibi3fD\",\"ZnYGbpKvunbuSQMJ7\",\"eq6bWgNCAXLkFj4tx\",\"KMdbLgWfJhHarmrb4\",\"ojBu2mio43qKcHjJt\",\"siHFeme47qn38H7Ef\",\"g2mqHYvQmr78mET8i\",\"3gYTrsvXf3SFNGvXs\",\"xwGiZ6bC6jBoAdGrv\",\"hkAA3goC8xQ7ZkLP3\",\"3SrbQGCATms6rwDoM\",\"Hkqhc5fs5uiudFL7E\",\"kPXQbugZ9PetvHDck\",\"ThtxrPug9Zm7ioTmh\",\"jbH5tDYmskk7BpqtL\",\"yveayT7oPFiPwzKaC\",\"KmpCqC7osXEW6FNab\",\"oTMnmPJ9pEgnKAkuE\",\"DYWynP9ucv9vbF5q9\",\"tnPPxtymGuj4i8mKP\",\"RMPzQ7PANCoh7siFw\",\"FjLPxCcT7urtALbos\",\"AbYWZCmDvm3YMbfsM\",\"yfX9auesPmnc8XYkR\",\"BExYZ2yjcLBjBid3r\",\"aXkMcTt29DDgjK489\",\"p37ge2aAd3zBh47cN\",\"m7GJyJa4NdvkAFoKQ\",\"Rahiy2zv8bRFQGtML\",\"HomhCL68K3P7P6bfX\",\"9Wz3yj2R3MsAMFsc6\",\"RfbfNQMG265XKBc7u\",\"q5n48oYdxBcoKhd6p\",\"JpwZb5XwcZwaaEEcC\",\"c8k6w3hCJgKXnDbz6\",\"cnniKZMFo5euKDewx\",\"HEzjAEfEfhHZwJ8Q2\",\"ifEWWQbpcw7o592XS\",\"RTqdNzvG993P4CYz2\",\"hCoyBFeNMdaC88ZFi\",\"Bshi8KJRAqdkDk8ZS\",\"ihcPFHJohFfAcWd5C\",\"qoCWusobDthZB2crh\",\"ALxvyT4zd5cq8eg8H\",\"sjpPPSu9aaebBHmqM\",\"EwhH3danDnqTssBgh\",\"p84tJYwMaLu6HiitA\",\"4Qtt3LCsrE7CtF73E\",\"SX9rs2vBtJYRyxrqz\",\"PukYKEEFpGrQLRsyp\",\"Yi325hzLfZeXsbkJP\",\"gEtGeZ2i8rFZv2N4o\",\"ebndzZQAJZFykHqiE\"]},\"tests\":{\"score\":0,\"voters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.733333333333333,\"family\":[{\"_id\":\"3HEY2ZfqMXyZsA87i\",\"language\":\"cpp\"},{\"_id\":\"W4x4o2M7ny6Cqkfhn\",\"language\":\"csharp\"},{\"_id\":\"EmRPehwiJFk6rf2iD\",\"language\":\"java\"},{\"_id\":\"havnWL4BimvoaXNMn\",\"language\":\"javascript\"},{\"_id\":\"49Jj8gZqZhS9nWtwM\",\"language\":\"php\"},{\"_id\":\"WppCaiLw6QbvXhe6m\",\"language\":\"python3\"},{\"_id\":\"akTr7zWfMutBRWjHh\",\"language\":\"ruby\"},{\"_id\":\"nivxD2dpJGhQcG5at\",\"language\":\"swift\"}]}}"]