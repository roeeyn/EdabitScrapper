a["{\"msg\":\"result\",\"id\":\"637\",\"result\":{\"_id\":\"7TCtjPThGdrSDHQK5\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n\\tpublic static String abacabaPattern(int n) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":2.298507462686567,\"familyId\":\"pq4ForkMrkekiTome\",\"instructions\":\"The ABACABA pattern is a recursive fractal pattern that shows up in many places in the real world (such as in geometry, art, music, poetry, number systems, literature and higher dimensions).\\n\\nCreate a function that takes a number `n` as an argument and returns a `string` that represents the full pattern.\\n\\n### Examples\\n```\\nabacabaPattern(1) ➞ \\\"A\\\"\\n\\nabacabaPattern(2) ➞ \\\"ABA\\\"\\n\\nabacabaPattern(3) ➞ \\\"ABACABA\\\"\\n```\\n\\n### Notes\\n- Result should always be uppercase.\\n- Check the **Resources** tab for more info on the ABACABA pattern.\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(\\\"A\\\", Challenge.abacabaPattern(1));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(\\\"ABA\\\", Challenge.abacabaPattern(2));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(\\\"ABACABA\\\", Challenge.abacabaPattern(3));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(\\\"ABACABADABACABA\\\", Challenge.abacabaPattern(4));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(\\\"ABACABADABACABAEABACABADABACABA\\\", Challenge.abacabaPattern(5));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(\\\"ABACABADABACABAEABACABADABACABAFABACABADABACABAEABACABADABACABA\\\", Challenge.abacabaPattern(6));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(\\\"ABACABADABACABAEABACABADABACABAFABACABADABACABAEABACABADABACABAGABACABADABACABAEABACABADABACABAFABACABADABACABAEABACABADABACABA\\\", Challenge.abacabaPattern(7));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n    assertEquals(\\\"ABACABADABACABAEABACABADABACABAFABACABADABACABAEABACABADABACABAGABACABADABACABAEABACABADABACABAFABACABADABACABAEABACABADABACABAHABACABADABACABAEABACABADABACABAFABACABADABACABAEABACABADABACABAGABACABADABACABAEABACABADABACABAFABACABADABACABAEABACABADABACABA\\\", Challenge.abacabaPattern(8));\\n  }\\n\\t\\n\\t@Test\\n  public void test9() {\\n    assertEquals(\\\"ABACABADABACABAEABACABADABACABAFABACABADABACABAEABACABADABACABAGABACABADABACABAEABACABADABACABAFABACABADABACABAEABACABADABACABAHABACABADABACABAEABACABADABACABAFABACABADABACABAEABACABADABACABAGABACABADABACABAEABACABADABACABAFABACABADABACABAEABACABADABACABAIABACABADABACABAEABACABADABACABAFABACABADABACABAEABACABADABACABAGABACABADABACABAEABACABADABACABAFABACABADABACABAEABACABADABACABAHABACABADABACABAEABACABADABACABAFABACABADABACABAEABACABADABACABAGABACABADABACABAEABACABADABACABAFABACABADABACABAEABACABADABACABA\\\", Challenge.abacabaPattern(9));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"The ABACABA pattern is a recursive fractal pattern that shows up in many places in the real world (such as in geometry, art, music, poetry, number systems, literature and higher dimensions).\\n\\nCreate a function that takes a number n as an argument and returns a string that represents the full pattern.\\n\\nExamples\\nabacabaPattern(1) ➞ \\\"A\\\"\\n\\nabacabaPattern(2) ➞ \\\"ABA\\\"\",\"tags\":[\"recursion\",\"geometry\"],\"timestamp\":{\"$date\":1569103357965},\"title\":\"ABACABA Pattern\",\"stats\":{\"completed\":{\"total\":76,\"ratings\":[5,5,5,5,5,5,2,4,0,5,2,1,1,5,0,5,4,1,1,4,0,2,4,2,1,1,4,1,4,4,0,1,1,1,0,3,2,0,1,1,3,2,2,2,2,2,4,3,2,1,2,2,0,1,2,3,0,3,2,1,3,1,3,2,3,2,3],\"rators\":[\"3pdgguqZgNDSAJSGm\",\"ayRyk4SwCoAhgP8Pe\",\"hZr4qXRsSumkpJXK9\",\"SnY7WidXJoAyyuPuA\",\"tN66heiSDjKR9kFdK\",\"qgWvEan879XKFKiCA\",\"insmKHXTNAQSmdSfj\",\"k6gFxcu8xWXTFc649\",\"iiwbGPWTgCCT8xx36\",\"kXEfD7xxEyWd7oxxL\",\"AyrEvM2GLX2jqM772\",\"Es4eX2stRpyoXeC7f\",\"rehehi2Tr2mwaEoJE\",\"A9eMaKGSpao4bJTdi\",\"D7dpRtRQDmteDSAXv\",\"fbYN9Jp46RqBqCd2K\",\"TuDy7apLgWD8aQA9s\",\"NnZDxyidwrk6T6cj7\",\"2eAwdyT6n7og5EzdW\",\"QwkJidQW7vvEY6TLp\",\"rTj67TTydxqkpwFtN\",\"gGnDsJz5hr2t9MKCF\",\"8J2Dqqz9PaFufQzwY\",\"AX4myvP8gZRqw5avs\",\"TrquEHytntLKHA4m2\",\"pBMXMQem6BpSeooYT\",\"jyoLggHk8xQKZuoQC\",\"htXCitorobtqYymjN\",\"DkSMZ3jZLkwviKb9g\",\"i3TRCkidxKop3WtE2\",\"rA5nhfhFwfqvmJb6M\",\"zbGJGwm2a7un8F5T5\",\"62Q2HcfLE6SGphZkT\",\"k63LjKkX5p7SYng7C\",\"NzJKK8Cuf3bcqZfcw\",\"9rK2eEYTWWduLHG97\",\"SfhMTK5ykctdKbCSp\",\"6pm5Xq4rqAr7Dnmei\",\"zMgdmdfJesGcubnMB\",\"AxWLAsQ9dKQTeSvA5\",\"bSC6ngawTGgvzvjsx\",\"4Q8ph6FixDyQqpHKa\",\"QZjPkugGZF8SNjZ2L\",\"z6unNHGqyaP8ErxhD\",\"osXNzc2aCxspRwheS\",\"5vzstefjZFWgitMWB\",\"aH9yER5QQ4bFBN8SR\",\"P4ETSRBvdbH8NvCTT\",\"qNLv2R8DeTEHW8vvQ\",\"MBEwq8srjd2oA5W58\",\"gXTAie79kiw28tx5u\",\"hhxjQREtmHSheH9Pj\",\"NQf7CXM3ecoNE4uE2\",\"vEvLbY4C2ngaMJMtX\",\"mDWNyaaQ9hvPCRzSd\",\"YCSWRAzFhimAcHpWt\",\"buX4mCQhtXCfBjeno\",\"xEX3TDY6C2h82dJTn\",\"uw47663LqPME8btaA\",\"qaPjAANdnxFnWfj5d\",\"rhS8qXRjZcpDXkwnE\",\"gSrqu8MsZMFSxxWAZ\",\"sxci7DYKNa6q22Sjq\",\"KMR6vNzvSKMA2cXnK\",\"bWcnaBKmzWreQnJ7B\",\"PqAERJkQg4742eDXk\"],\"quality\":[5,4,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"isHidden\":false,\"quality\":4.75,\"family\":[{\"_id\":\"ipj3zGycaCtwWwXZ8\",\"language\":\"cpp\"},{\"_id\":\"7TCtjPThGdrSDHQK5\",\"language\":\"java\"},{\"_id\":\"ny6ErMLiGWeL6up3v\",\"language\":\"javascript\"},{\"_id\":\"MCsFLbBzZ9aGuh4G4\",\"language\":\"php\"},{\"_id\":\"FDzEFbNE2q3eKL8dm\",\"language\":\"python3\"},{\"_id\":\"JKXZ55e3NFu6bLpCP\",\"language\":\"ruby\"}]}}"]