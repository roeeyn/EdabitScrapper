a["{\"msg\":\"result\",\"id\":\"420\",\"result\":{\"_id\":\"yLjnDk7bJ3GYeSX9f\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n\\tpublic static String wordedMath(String expr) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.5538461538461539,\"familyId\":\"2N7Q26oGG6KvuPWzK\",\"instructions\":\"Create a function that outputs the result of a math expression in words.\\n\\n### Examples\\n```\\nwordedMath(\\\"One plus one\\\") ➞ \\\"Two\\\"\\n\\nwordedMath(\\\"zero Plus one\\\") ➞ \\\"One\\\"\\n\\nwordedMath(\\\"one minus one\\\") ➞ \\\"Zero\\\"\\n```\\n\\n### Notes\\n- Expect only the operations `plus` and `minus`.\\n- Expect to only get numbers and answers from `0` to `2`.\\n- The first letter of the answer must be capitalised.\",\"isHidden\":false,\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(\\\"Two\\\", Challenge.wordedMath(\\\"One plus one\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(\\\"One\\\", Challenge.wordedMath(\\\"zero Plus one\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(\\\"Zero\\\", Challenge.wordedMath(\\\"one minus one\\\"));\\n  }\\n}\\n\\n// made by @Joshua Señoron\",\"language\":\"java\",\"summary\":\"Create a function that outputs the result of a math expression in words.\\n\\nExamples\\nwordedMath(\\\"One plus one\\\") ➞ \\\"Two\\\"\\n\\nwordedMath(\\\"zero Plus one\\\") ➞ \\\"One\\\"\\n\\nwordedMath(\\\"one minus one\\\") ➞ \\\"Zero\\\"\\n\\nNotes\\nExpect only the operations plus and minus.\\nExpect to only get numbers and answers from 0 to 2.\\nThe first letter of the answer must be capitalised.\",\"tags\":[\"strings\",\"math\"],\"timestamp\":{\"$date\":1580420468126},\"title\":\"One Plus One\",\"stats\":{\"completed\":{\"total\":80,\"ratings\":[2,2,2,2,2,2,0,2,1,1,2,2,0,1,2,1,2,0,2,1,2,2,1,1,2,3,1,2,1,2,2,0,2,2,0,2,2,2,0,3,1,1,2,3,1,1,3,1,2,3,2,1,2,1,2,2,1,2,1,2,1,0,1,2,2],\"rators\":[\"phA6MomRzh9oz3eqn\",\"rehehi2Tr2mwaEoJE\",\"u4yanfWeeZsN3xWgc\",\"J9zJq7PMGb6mqzcHW\",\"Es4eX2stRpyoXeC7f\",\"3pdgguqZgNDSAJSGm\",\"4RHx3H8EwP2oboW8e\",\"8J2Dqqz9PaFufQzwY\",\"wYYMNPe8nSiJFbvJw\",\"TxD5qx2hqQa6pixAP\",\"hB5mgzMwQSnhBzi7P\",\"Kso7rzAKB4TTCPKgM\",\"fZjkX29nhRTWWb75k\",\"jyoLggHk8xQKZuoQC\",\"5seiNqw6ZXoF2GRRd\",\"TrquEHytntLKHA4m2\",\"mfm3gB39arY8Rjb2y\",\"82weQfHHmno4Mq4X7\",\"jDTGwryGygbZiqCEg\",\"uYv96ZSpA7tBHoAGX\",\"8zZ6xmzpiFair25qr\",\"WZujpe8yQAyZmpWHg\",\"av5QexsdPza9FsRCq\",\"etoSR23iELGGgs9rA\",\"meS77LKqRswhF5LAy\",\"htXCitorobtqYymjN\",\"gJbvbqosimaP4ZAYb\",\"DRjqgdcSkz58yiqea\",\"Yom3RzkMYpweE8cbS\",\"B4pxRqzo43M7S8FbP\",\"DzvdGwHEjqsX7wyKr\",\"rvojHhKH3DaxotefQ\",\"q2tzvkrLASvSjkek9\",\"g4NCSxxHqHCGMpWwT\",\"k2tXkx7AyX77tQDRo\",\"rWhXHhzF4W8bea6LP\",\"Fd9765rksgPK4E2Zy\",\"YFHkjbM6obMSj24zi\",\"azAzSkvJd7eyXY9x9\",\"eXW8reZCCZHQzJjQi\",\"yXGiiSAR5nBHnH3yr\",\"gXTAie79kiw28tx5u\",\"jb9RLyyuo565bKDzN\",\"oMZovHkR6QqNvQwyc\",\"AeJSxRqw2dJZuGvdk\",\"8Xx8nWXRydHDBGfQf\",\"jXTnL3JatkKjoifyb\",\"mQKWauR6b252TmdX4\",\"RGN3QTb5LXj4ZPPkj\",\"a49eNnfRwSMxsDJXf\",\"hhxjQREtmHSheH9Pj\",\"zHCvsprtbScc7qfCK\",\"bur3yQ8s34zqKGEro\",\"fCTfZSgeDbRbTvDY4\",\"DkSMZ3jZLkwviKb9g\",\"buX4mCQhtXCfBjeno\",\"4ySzqKC5s3ZRpG9di\",\"vRXuYYBNuHEQ29fbm\",\"srJ34BaybkQh3qRkM\",\"rhS8qXRjZcpDXkwnE\",\"wFRLGjA56kj7xyhmv\",\"uf6pJu3SGdnugtZtk\",\"sxci7DYKNa6q22Sjq\",\"KMR6vNzvSKMA2cXnK\",\"PJu3WcTpfRrvHfQiS\",\"unqzSsxpxj9sZ7rbD\",\"FxPDKKibxnZjGJLs6\",\"xEX3TDY6C2h82dJTn\",\"uw47663LqPME8btaA\",\"23gxHrrXiriKXnggo\",\"jyjKaFsAbJXdTCePh\"],\"quality\":[5,5,4,4,5,5,5,4,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":1},\"quality\":4.7272727272727275,\"family\":[{\"_id\":\"Gedj43MbcaJJ7MXv4\",\"language\":\"cpp\"},{\"_id\":\"yLjnDk7bJ3GYeSX9f\",\"language\":\"java\"},{\"_id\":\"ci52KkmCATSCbSbTP\",\"language\":\"javascript\"},{\"_id\":\"kzZD8Xp3EC7bipfxe\",\"language\":\"python3\"},{\"_id\":\"crkaNuREtgWtzd98u\",\"language\":\"ruby\"}]}}"]