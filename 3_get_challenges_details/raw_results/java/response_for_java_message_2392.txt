a["{\"msg\":\"result\",\"id\":\"752\",\"result\":{\"_id\":\"TXFh4mGekgo6Jgyzz\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n\\tpublic static String mixedNumber(String frac) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":2.9166666666666665,\"familyId\":\"vnAj9FcZbm2NsbDB8\",\"instructions\":\"Create a function that takes a string representing a fraction, and return a string representing that input as a mixed number.\\n\\n- Mixed numbers are of the form `1 2/3` — note the space between the whole number portion and the fraction portion.\\n- Resulting fractions should be fully reduced (see example #2).\\n- If a result is a whole number with no fractional remainder, return only the whole number portion (see example #3).\\n- If a result is only fractional with no whole number, return only the fractional portion (see example #4).\\n- If a result is negative, the whole number should carry the negative sign. If the result would not have a whole number portion, the numerator of the fractional portion should carry the negative sign (see examples #5 - #7).\\n\\n### Examples\\n```\\nmixedNumber(\\\"5/4\\\") ➞ \\\"1 1/4\\\"\\n\\nmixedNumber(\\\"6/4\\\") ➞ \\\"1 1/2\\\"\\n\\nmixedNumber(\\\"8/4\\\") ➞ \\\"2\\\"\\n\\nmixedNumber(\\\"4/6\\\") ➞ \\\"2/3\\\"\\n\\nmixedNumber(\\\"-1/4\\\") ➞ \\\"-1/4\\\"\\n\\nmixedNumber(\\\"-5/4\\\") ➞ \\\"-1 1/4\\\"\\n\\nmixedNumber(\\\"-8/4\\\") ➞ \\\"-2\\\"\\n```\\n\\n### Notes\\nAll provided inputs will be formatted similarly, negative numbers will be provided in the numerator portion only, and all inputs will contain no spaces, invalid characters, or zero denominators.\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(\\\"1 1/4\\\", Challenge.mixedNumber(\\\"5/4\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(\\\"1 1/2\\\", Challenge.mixedNumber(\\\"6/4\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(\\\"2\\\", Challenge.mixedNumber(\\\"8/4\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(\\\"2/3\\\", Challenge.mixedNumber(\\\"4/6\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(\\\"-1/4\\\", Challenge.mixedNumber(\\\"-1/4\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(\\\"-1 1/4\\\", Challenge.mixedNumber(\\\"-5/4\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(\\\"-2\\\", Challenge.mixedNumber(\\\"-8/4\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n    assertEquals(\\\"0\\\", Challenge.mixedNumber(\\\"0/32768\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test9() {\\n    assertEquals(\\\"14 3/5\\\", Challenge.mixedNumber(\\\"73/5\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test10() {\\n    assertEquals(\\\"257/59319\\\", Challenge.mixedNumber(\\\"3855/889785\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test11() {\\n    assertEquals(\\\"418\\\", Challenge.mixedNumber(\\\"82346/197\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test12() {\\n    assertEquals(\\\"-9987 1/2\\\", Challenge.mixedNumber(\\\"-2037450/204\\\"));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"Create a function that takes a string representing a fraction, and return a string representing that input as a mixed number.\\n\\nMixed numbers are of the form 1 2/3 — note the space between the whole number portion and the fraction portion.\\nResulting fractions should be fully reduced (see example #2).\\nIf a result is a whole number with no fractional remainder, r\",\"tags\":[\"math\",\"numbers\"],\"timestamp\":{\"$date\":1568665982161},\"title\":\"Fraction to Mixed Number\",\"stats\":{\"completed\":{\"total\":25,\"ratings\":[3,3,3,3,3,4,2,4,4,0,4,2,3,4,1,4,2,2,4,2,3,4,4,2],\"rators\":[\"hhkuWPyzP2k2pRcxZ\",\"vRXuYYBNuHEQ29fbm\",\"3pdgguqZgNDSAJSGm\",\"hZr4qXRsSumkpJXK9\",\"SnY7WidXJoAyyuPuA\",\"YF79LnTdprobbYY5v\",\"sxci7DYKNa6q22Sjq\",\"J9zJq7PMGb6mqzcHW\",\"AyrEvM2GLX2jqM772\",\"rehehi2Tr2mwaEoJE\",\"TrquEHytntLKHA4m2\",\"Ym8AjbKGSJooun3nt\",\"gXTAie79kiw28tx5u\",\"hFv4BuqgsJtNyvyNF\",\"fommzAP3nsb8dQrYn\",\"htXCitorobtqYymjN\",\"KMR6vNzvSKMA2cXnK\",\"rWhXHhzF4W8bea6LP\",\"wFRLGjA56kj7xyhmv\"],\"quality\":[]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"isHidden\":false,\"quality\":0,\"family\":[{\"_id\":\"9X9T7zPshHbqzdGHy\",\"language\":\"cpp\"},{\"_id\":\"TXFh4mGekgo6Jgyzz\",\"language\":\"java\"},{\"_id\":\"PvDfScDCnsY8qYvTq\",\"language\":\"javascript\"},{\"_id\":\"CzrTZKEdfHTvhRphg\",\"language\":\"python3\"},{\"_id\":\"uemTLQYXvy2N4mA3g\",\"language\":\"ruby\"}]}}"]