a["{\"msg\":\"result\",\"id\":\"549\",\"result\":{\"_id\":\"qE9gCJtrtcMurvQtT\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class NumberedCard {\\n\\tpublic static boolean winRound(int[] you, int[] opp) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":2.1228070175438596,\"familyId\":\"GGMn8Z37ev4EfEKpn\",\"instructions\":\"You have a pack of 5 randomly numbered cards, which can range from 0-9. You can win if you can produce a higher **two-digit** number from your cards than your opponent. Return `true` if your cards win that round.\\n\\n### Examples\\n```\\nwinRound([2, 5, 2, 6, 9], [3, 7, 3, 1, 2]) ➞ true\\n// Your cards can make the number 96\\n// Your opponent can make the number 73\\n// You win the round since 96 > 73\\n\\nwinRound([2, 5, 2, 6, 9], [3, 7, 3, 1, 2]) ➞ true\\n\\nwinRound([1, 2, 3, 4, 5], [9, 8, 7, 6, 5]) ➞ false\\n\\nwinRound([4, 3, 4, 4, 5], [3, 2, 5, 4, 1]) ➞ false\\n```\\n\\n### Notes\\nReturn `false` if you and your opponent reach the same maximum number (see example #4).\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"/** \\n================================= \\nTestGen 3.1 for JUnit 4.13.0 \\t\\t\\nTest Case: NumberedCard::winRound \\nTimestamp: 11/07/2020 12:51:51 AM \\n--------------------------------- \\n® DARKKO 2020 © \\n================================= \\n\\n**/ \\n\\nimport static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class NumberedCardTest { \\n\\t\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertEquals(true, NumberedCard.winRound(new int[] {2, 5, 2, 6, 9}, new int[] {3, 7, 3, 1, 2}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertEquals(false, NumberedCard.winRound(new int[] {1, 2, 3, 4, 5}, new int[] {9, 8, 7, 6, 5}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertEquals(false, NumberedCard.winRound(new int[] {4, 3, 4, 4, 5}, new int[] {3, 2, 5, 4, 1}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertEquals(true, NumberedCard.winRound(new int[] {3, 2, 8, 9, 4}, new int[] {0, 7, 9, 3, 1}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertEquals(true, NumberedCard.winRound(new int[] {1, 4, 9, 2, 1}, new int[] {3, 7, 7, 8, 7}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertEquals(true, NumberedCard.winRound(new int[] {6, 5, 5, 8, 5}, new int[] {6, 2, 5, 2, 5}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertEquals(false, NumberedCard.winRound(new int[] {5, 3, 5, 9, 2}, new int[] {5, 9, 2, 8, 0}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertEquals(false, NumberedCard.winRound(new int[] {3, 2, 0, 3, 5}, new int[] {7, 5, 8, 6, 2}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test09() { \\n\\t\\tassertEquals(true, NumberedCard.winRound(new int[] {4, 1, 0, 2, 9}, new int[] {3, 5, 5, 2, 8}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test10() { \\n\\t\\tassertEquals(true, NumberedCard.winRound(new int[] {9, 8, 7, 3, 4}, new int[] {5, 3, 4, 7, 9}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test11() { \\n\\t\\tassertEquals(true, NumberedCard.winRound(new int[] {3, 3, 3, 9, 9}, new int[] {9, 0, 0, 6, 6}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test12() { \\n\\t\\tassertEquals(false, NumberedCard.winRound(new int[] {3, 2, 8, 2, 0}, new int[] {8, 5, 4, 5, 7}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test13() { \\n\\t\\tassertEquals(false, NumberedCard.winRound(new int[] {6, 2, 6, 8, 0}, new int[] {7, 6, 3, 2, 9}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test14() { \\n\\t\\tassertEquals(true, NumberedCard.winRound(new int[] {8, 3, 5, 3, 5}, new int[] {5, 5, 4, 4, 6}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test15() { \\n\\t\\tassertEquals(false, NumberedCard.winRound(new int[] {4, 0, 7, 7, 7}, new int[] {8, 6, 7, 6, 3}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test16() { \\n\\t\\tassertEquals(false, NumberedCard.winRound(new int[] {5, 4, 8, 4, 8}, new int[] {6, 6, 9, 3, 6}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test17() { \\n\\t\\tassertEquals(false, NumberedCard.winRound(new int[] {8, 1, 2, 6, 5}, new int[] {2, 6, 7, 1, 8}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test18() { \\n\\t\\tassertEquals(true, NumberedCard.winRound(new int[] {9, 3, 8, 8, 6}, new int[] {3, 1, 7, 9, 3}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test19() { \\n\\t\\tassertEquals(false, NumberedCard.winRound(new int[] {7, 2, 3, 0, 3}, new int[] {1, 7, 9, 9, 9}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test20() { \\n\\t\\tassertEquals(true, NumberedCard.winRound(new int[] {2, 7, 4, 6, 5}, new int[] {2, 3, 1, 5, 6}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test21() { \\n\\t\\tassertEquals(false, NumberedCard.winRound(new int[] {1, 7, 6, 3, 3}, new int[] {8, 0, 7, 1, 1}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test22() { \\n\\t\\tassertEquals(true, NumberedCard.winRound(new int[] {5, 1, 6, 4, 7}, new int[] {0, 7, 0, 1, 0}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test23() { \\n\\t\\tassertEquals(true, NumberedCard.winRound(new int[] {6, 0, 9, 5, 9}, new int[] {4, 0, 3, 2, 5}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test24() { \\n\\t\\tassertEquals(true, NumberedCard.winRound(new int[] {1, 1, 7, 0, 5}, new int[] {0, 0, 4, 7, 2}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test25() { \\n\\t\\tassertEquals(false, NumberedCard.winRound(new int[] {3, 3, 8, 3, 8}, new int[] {8, 8, 4, 5, 5}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test26() { \\n\\t\\tassertEquals(false, NumberedCard.winRound(new int[] {4, 4, 2, 3, 4}, new int[] {3, 6, 1, 5, 7}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test27() { \\n\\t\\tassertEquals(false, NumberedCard.winRound(new int[] {4, 0, 4, 0, 1}, new int[] {2, 5, 1, 4, 1}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test28() { \\n\\t\\tassertEquals(false, NumberedCard.winRound(new int[] {5, 0, 1, 7, 5}, new int[] {6, 9, 7, 2, 7}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test29() { \\n\\t\\tassertEquals(false, NumberedCard.winRound(new int[] {6, 1, 1, 4, 2}, new int[] {6, 4, 7, 1, 2}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test30() { \\n\\t\\tassertEquals(false, NumberedCard.winRound(new int[] {8, 3, 5, 8, 4}, new int[] {0, 8, 7, 8, 7}));\\n\\t}\\n\\n}\\n// end of tests\",\"language\":\"java\",\"quality\":0,\"summary\":\"You have a pack of 5 randomly numbered cards, which can range from 0-9. You can win if you can produce a higher two-digit number from your cards than your opponent. Return true if your cards win that round.\\n\\nExamples\\nwinRound([2, 5, 2, 6, 9], [3, 7, 3, 1, 2]) ➞ true\\n// Your cards can make the number 96\\n// Your opponent can make the number 73\\n// You win the rou\",\"tags\":[\"arrays\",\"numbers\",\"games\",\"validation\"],\"timestamp\":{\"$date\":1604689063319},\"title\":\"Numbered Cards\",\"stats\":{\"completed\":{\"total\":58,\"ratings\":[2,2,2,2,2,2,3,2,3,3,0,3,2,0,1,2,2,2,4,3,2,3,2,2,2,3,1,1,3,2,2,0,2,2,3,2,3,3,3,3,1,1,3,2,2,3,1,3,2,3,1,2,1,2,3,3,2],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"gXTAie79kiw28tx5u\",\"DzvdGwHEjqsX7wyKr\",\"azAzSkvJd7eyXY9x9\",\"vRXuYYBNuHEQ29fbm\",\"FgEeQycsn67j9m7xK\",\"jyoLggHk8xQKZuoQC\",\"LNCb5rksJLJ43L4Nw\",\"Ag5fRrZ9MrAZc9vpj\",\"NnRaz2R2x7DH3DYE8\",\"tdxi2QkC26vf5P3vG\",\"rRLzNW4bS7PHwYYat\",\"vHXbz63uXiYZmGgMt\",\"gHLfSu6KuoBneHaZ6\",\"oMZovHkR6QqNvQwyc\",\"GKc4zpFhvdYyrNGHZ\",\"QN9kBxAMeR7Da8WNQ\",\"rhS8qXRjZcpDXkwnE\",\"mfm3gB39arY8Rjb2y\",\"qaPjAANdnxFnWfj5d\",\"wFRLGjA56kj7xyhmv\",\"xEX3TDY6C2h82dJTn\",\"HsFc9PgmpP2X9Fwh9\",\"TY2hHJczWaEtibXBq\",\"QD7mPMD8gmTP56nPv\",\"c7uBxu2rgY77H5d79\",\"a49eNnfRwSMxsDJXf\",\"J9RJf8bBmB7MpzF3m\",\"5K5ukYzF7JDaXKbcj\",\"p55AbbJig6dToniqC\",\"srJ34BaybkQh3qRkM\",\"2WH7NYPr36iTbQq7n\",\"grQaymzuXXfuPrTbj\",\"89vxqadYFaDgi4MTM\",\"jCjCvyhqhpebkJn34\",\"CggGfsERnPKGupFWp\",\"rWhXHhzF4W8bea6LP\",\"CkJWwnMHPCS3igtoQ\",\"2NJZbusRvu3eJ4tHu\",\"htXCitorobtqYymjN\",\"sxci7DYKNa6q22Sjq\",\"KMR6vNzvSKMA2cXnK\",\"6waJRR7JPunYF8DhS\",\"NjpEw7MtEXJjnT4GW\",\"MAipfC9SFPEFv5hF9\",\"nFxzyiogbsgGXoGgB\",\"WY2fBWwMPiGpopCNx\",\"6rvJwN4mcX7iYGjY7\",\"unqzSsxpxj9sZ7rbD\",\"PAEWysAAFheYiYPBp\",\"uw47663LqPME8btaA\"]},\"flags\":0},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"WKDLPg5MqXXMXAzhC\",\"language\":\"cpp\"},{\"_id\":\"qE9gCJtrtcMurvQtT\",\"language\":\"java\"},{\"_id\":\"JMht24XNt8Swf4MRL\",\"language\":\"javascript\"},{\"_id\":\"rnvBtoNMBtznXLhs8\",\"language\":\"python3\"},{\"_id\":\"fPg3kAJBNhphZKMsG\",\"language\":\"ruby\"}]}}"]