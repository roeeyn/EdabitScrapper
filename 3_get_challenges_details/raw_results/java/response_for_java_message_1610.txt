a["{\"msg\":\"result\",\"id\":\"364\",\"result\":{\"_id\":\"tunTJAdBeLgc8s4ap\",\"author\":\"Nguyen Phan Dang\",\"authorId\":\"YLqdr7bYjwew2KM4N\",\"code\":\"public class ChallengeTests {\\n\\tpublic static String[] identicalFilter(String[] arr) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.4954128440366972,\"familyId\":\"JRZ42Ghc79vRQfci9\",\"instructions\":\"Create a function that keeps only strings with repeating identical characters (in other words, it has a set size of 1).\\n\\n### Examples\\n```\\nidenticalFilter([\\\"aaaaaa\\\", \\\"bc\\\", \\\"d\\\", \\\"eeee\\\", \\\"xyz\\\"]) \\n➞ [\\\"aaaaaa\\\", \\\"d\\\", \\\"eeee\\\"]\\n\\nidenticalFilter([\\\"88\\\", \\\"999\\\", \\\"22\\\", \\\"545\\\", \\\"133\\\"]) \\n➞ [\\\"88\\\", \\\"999\\\", \\\"22\\\"]\\n\\nidenticalFilter([\\\"xxxxo\\\", \\\"oxo\\\", \\\"xox\\\", \\\"ooxxoo\\\", \\\"oxo\\\"]) \\n➞ []\\n```\\n\\n### Notes\\n- A string with a single character is trivially counted as a string with repeating identical characters.\\n- If there are no strings with repeating identical characters, return an empty array (see example #3).\",\"isHidden\":false,\"lab\":\"import static org.junit.Assert.assertEquals;\\n\\nimport org.junit.Test;\\n\\n@SuppressWarnings(\\\"deprecation\\\")\\npublic class ChallengeTestsIdenticalFilter {\\n\\t@Test\\n\\tpublic void test1() {\\n\\t\\tassertEquals(ChallengeTests.identicalFilter(new String[] { \\\"aaaaaa\\\", \\\"bc\\\", \\\"d\\\", \\\"eeee\\\", \\\"xyz\\\" }),\\n\\t\\t\\t\\tnew String[] { \\\"aaaaaa\\\", \\\"d\\\", \\\"eeee\\\" });\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test2() {\\n\\t\\tassertEquals(ChallengeTests.identicalFilter(new String[] { \\\"88\\\", \\\"999\\\", \\\"22\\\", \\\"545\\\", \\\"133\\\" }),\\n\\t\\t\\t\\tnew String[] { \\\"88\\\", \\\"999\\\", \\\"22\\\" });\\n\\t}\\n\\n@Test\\n\\tpublic void test3() {\\n\\t\\tassertEquals(ChallengeTests.identicalFilter(new String[] {\\\"xxxxo\\\", \\\"oxo\\\", \\\"xox\\\", \\\"ooxxoo\\\", \\\"oxo\\\"}), new String[] {});}\\n\\n\\t@Test\\n\\tpublic void test4() {\\n\\t\\tassertEquals(ChallengeTests.identicalFilter(new String[] { \\\"aa\\\", \\\"bb\\\", \\\"cc\\\", \\\"dd\\\", \\\"ee\\\" }),\\n\\t\\t\\t\\tnew String[] { \\\"aa\\\", \\\"bb\\\", \\\"cc\\\", \\\"dd\\\", \\\"ee\\\" });\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test5() {\\n\\t\\tassertEquals(ChallengeTests.identicalFilter(new String[] { \\\"aba\\\", \\\"bcb\\\", \\\"abb\\\", \\\"bcc\\\", \\\"eee\\\" }),\\n\\t\\t\\t\\tnew String[] { \\\"eee\\\" });\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test6() {\\n\\t\\tassertEquals(ChallengeTests.identicalFilter(new String[] { \\\"1\\\", \\\"2\\\", \\\"3\\\" }), new String[] { \\\"1\\\", \\\"2\\\", \\\"3\\\" });\\n\\t}\\n}\",\"language\":\"java\",\"summary\":\"Create a function that keeps only strings with repeating identical characters (in other words, it has a set size of 1).\\n\\nExamples\\nidenticalFilter([\\\"aaaaaa\\\", \\\"bc\\\", \\\"d\\\", \\\"eeee\\\", \\\"xyz\\\"])\\n➞ [\\\"aaaaaa\\\", \\\"d\\\", \\\"eeee\\\"]\\n\\nidenticalFilter([\\\"88\\\", \\\"999\\\", \\\"22\\\", \\\"545\\\", \\\"133\\\"])\\n➞ [\\\"88\\\", \\\"999\\\", \\\"22\\\"]\\n\\nidenticalFilter([\\\"xxxxo\\\", \\\"oxo\\\", \\\"xox\\\", \\\"ooxxoo\\\", \\\"oxo\\\"])\\n➞ []\\n\\nNotes\\nA strin\",\"tags\":[\"arrays\",\"strings\",\"loops\",\"language_fundamentals\"],\"timestamp\":{\"$date\":1592546112084},\"title\":\"Filter Repeating Character Strings\",\"stats\":{\"completed\":{\"total\":144,\"ratings\":[1,1,1,1,1,1,2,1,0,2,1,1,3,2,0,1,1,1,2,0,2,2,1,2,2,0,2,2,2,2,2,2,0,0,2,1,2,3,0,2,1,2,2,1,3,1,3,1,2,1,3,0,0,0,1,2,2,1,3,2,2,1,1,2,2,1,2,2,1,1,2,0,2,1,2,2,2,0,2,2,2,2,2,2,1,2,1,1,1,2,2,2,2,0,2,2,1,2,1,2,2,2,2,2,2,1,2,1,2],\"rators\":[\"B4pxRqzo43M7S8FbP\",\"jyoLggHk8xQKZuoQC\",\"mmGkJJBYiZGYX66kD\",\"8J2Dqqz9PaFufQzwY\",\"KD9nCGrRpZsQ9zFxr\",\"TrquEHytntLKHA4m2\",\"5seiNqw6ZXoF2GRRd\",\"8zZ6xmzpiFair25qr\",\"6ZxpGyg7iviX9cPAy\",\"cjxsqXfkAPoadmppi\",\"w2qoWcAnSmnduZs8C\",\"82weQfHHmno4Mq4X7\",\"Yp7uvStL97cC9fKkY\",\"etoSR23iELGGgs9rA\",\"mJCiwqTYfn4RfppAn\",\"htXCitorobtqYymjN\",\"Wf7nCHS4Gq5tx659h\",\"meS77LKqRswhF5LAy\",\"mfm3gB39arY8Rjb2y\",\"Ctuq7Wc8QPQmzwPK3\",\"YdK77dcrqqhWz8rrp\",\"k63LR5zQ8hLRafGH5\",\"CnywaqJCSWFSja8cD\",\"QmCfuyvM4TBCdvNxy\",\"GWfMkDvtawZFoFgES\",\"imoNrk36ozReP939p\",\"yNopTgW8n8JyT77nG\",\"oMLSgpSFQnY4ui8cB\",\"J9zJq7PMGb6mqzcHW\",\"gDSitfBNnLv7jdtAY\",\"DzvdGwHEjqsX7wyKr\",\"RWqwvDdMSWctvc8eJ\",\"ePzmFoJvWZQ8MoNGg\",\"wYYMNPe8nSiJFbvJw\",\"FBD3rFFMQqZ3qiMx9\",\"fFM526862y7RCzdjg\",\"Yohr2MmAyaWGMbB35\",\"tzgDktAnM7zLKqDy4\",\"mhMA6HGJQPaq5m3Bn\",\"C9yBWYcZsjmJYww3K\",\"a49eNnfRwSMxsDJXf\",\"dpJTai3i9aNkCS3sa\",\"DkSMZ3jZLkwviKb9g\",\"rvojHhKH3DaxotefQ\",\"q2tzvkrLASvSjkek9\",\"dcW9oK2uRo8h8mBe2\",\"vRXuYYBNuHEQ29fbm\",\"pBMXMQem6BpSeooYT\",\"g4NCSxxHqHCGMpWwT\",\"muXMnzQwGLzN6j2Jr\",\"28QJrwesEdbm666F3\",\"RhPg33AdzvSZmibXa\",\"rWhXHhzF4W8bea6LP\",\"Ddj8RHEHYRJTcAwa2\",\"7amNEuZodjynhaDQq\",\"jRqY4i8gPemsZMBGf\",\"YcjwCvYut6834Jzd8\",\"Fd9765rksgPK4E2Zy\",\"m3PZ7Z7xEGDuKQQmD\",\"Ym8AjbKGSJooun3nt\",\"k2tXkx7AyX77tQDRo\",\"YFHkjbM6obMSj24zi\",\"azAzSkvJd7eyXY9x9\",\"yv7c4H2jimSKHEjtG\",\"AeJSxRqw2dJZuGvdk\",\"Es4eX2stRpyoXeC7f\",\"8c8P2NGJisyn2QepD\",\"jb9RLyyuo565bKDzN\",\"yXGiiSAR5nBHnH3yr\",\"gXTAie79kiw28tx5u\",\"oMfq73A434YWhSuWQ\",\"mG8HqKiAQFTdRZthG\",\"8Xx8nWXRydHDBGfQf\",\"jXTnL3JatkKjoifyb\",\"P5BhjZxyeHQYTNyB9\",\"yd5PakB2z33q2JrTZ\",\"BbcH2NLjE4tKAZ3wR\",\"cufCWKKLntgt5vKtW\",\"unNqQjSHzkb4pCzEu\",\"udHFfcqNNej6udnpP\",\"kabqCExooax4JEQHE\",\"tyLS9T6YMfg9fMtYJ\",\"hDeaTsprkH6CmvSAR\",\"mQKWauR6b252TmdX4\",\"hD6sfDtntpqT8NR2o\",\"pi76g3eRpnKrhee2a\",\"RGN3QTb5LXj4ZPPkj\",\"mFfahhFdaoQPkzYdh\",\"W9taP3X4xztgWsS3e\",\"Po3v3dHCk6wYGKMwi\",\"QRv96jmNaYsWkxQEG\",\"eQXwk5zGckM8tCWYH\",\"bur3yQ8s34zqKGEro\",\"Gkt24LnG4KBrd2AfK\",\"buX4mCQhtXCfBjeno\",\"zZfMwLuoERGmybgib\",\"YLwJkF2wuL3n9o6a2\",\"oMZovHkR6QqNvQwyc\",\"4ySzqKC5s3ZRpG9di\",\"drAAhaSiMncZ2XcAk\",\"hhxjQREtmHSheH9Pj\",\"nHj7SC5cnmkTApbgY\",\"CkDupbJZZZZdhBdr2\",\"Ag5fRrZ9MrAZc9vpj\",\"BnaE25vvCGcfL3jiQ\",\"sxci7DYKNa6q22Sjq\",\"HXbTKW3jmmyRAsKrr\",\"rhS8qXRjZcpDXkwnE\",\"uw47663LqPME8btaA\",\"EMcYjNHvryYScwFZg\",\"9j3MDLXnvJZLp3PYk\",\"TKHmoBXKsWySF8rT3\",\"srJ34BaybkQh3qRkM\",\"ewPGFzszLXygWHMET\",\"xEX3TDY6C2h82dJTn\",\"WFt3NDxBaXBftzjHE\",\"563onSvqgjToY79ah\",\"wFRLGjA56kj7xyhmv\",\"5Kf9z3G9QBs9fkvLs\",\"jCjCvyhqhpebkJn34\",\"RsujLHaML6L3KinzK\",\"9vyjn4WyWtJ6o2wop\",\"KMR6vNzvSKMA2cXnK\",\"vAh63eGRwkuJtoP8v\",\"GRSgodNrGhekHtCun\",\"unqzSsxpxj9sZ7rbD\",\"FxPDKKibxnZjGJLs6\",\"XH6378Zm3WBm679yx\",\"nFbmNzMQ38TncmfQX\",\"Q2TD7GcXaL5F3d2LM\"],\"quality\":[2,4,5,5,5,5,4,5,5,4,5,5,5,5,5,5,5,4,5,3,2,5,4,3,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":4.423076923076923,\"family\":[{\"_id\":\"wB8iDapNTTa2wpiJN\",\"language\":\"cpp\"},{\"_id\":\"tunTJAdBeLgc8s4ap\",\"language\":\"java\"},{\"_id\":\"fxvceQdv7RHQzrx2J\",\"language\":\"javascript\"},{\"_id\":\"XJiro9X566JbqxWHH\",\"language\":\"php\"},{\"_id\":\"C4vbzpksgsTbw87NC\",\"language\":\"python3\"},{\"_id\":\"6feHRetZxQ2pHatkm\",\"language\":\"ruby\"},{\"_id\":\"SLneLgiMv8RPCZhMd\",\"language\":\"swift\"}]}}"]