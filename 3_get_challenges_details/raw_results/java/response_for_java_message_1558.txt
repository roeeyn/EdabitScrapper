a["{\"msg\":\"result\",\"id\":\"338\",\"result\":{\"_id\":\"g7dRyiCi5dpKxuFRa\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n  public static boolean magic(String str) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":1.4830508474576272,\"familyId\":\"izMzZJZRZfAq3wB4B\",\"instructions\":\"You are to read each part of the date into its own integer type variable. The year should be a 4 digit number. You can assume the user enters a correct date formatted **d m yyyy** (no error checking required).\\n\\nDetermine whether the entered date is a _magic date_. Here are the rules for a magic date:\\n\\n-  `mm * dd` is a 1-digit number that matches the last digit of `yyyy` *or*\\n-  `mm * dd` is a 2-digit number that matches the last 2 digits of `yyyy` *or*\\n-  `mm * dd` is a 3-digit number that matches the last 3 digits of `yyyy`\\n\\nThe program should then display `true` if the date is magic, or `false` if it is not.\\n\\n### Examples\\n```\\nMagic(\\\"1 1 2011\\\") ➞ true\\n\\nMagic(\\\"4 1 2001\\\") ➞ false\\n\\nMagic(\\\"5 2 2010\\\") ➞ true\\n\\nMagic(\\\"9 2 2011\\\") ➞ false\\n```\\n\\n### Notes\\nN/A\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(true, Challenge.magic(\\\"1 1 2011\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(false, Challenge.magic(\\\"4 1 2001\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(true, Challenge.magic(\\\"2 4 2008\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(true, Challenge.magic(\\\"3 3 2009\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(true, Challenge.magic(\\\"5 2 2010\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(false, Challenge.magic(\\\"1 2 2011\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(false, Challenge.magic(\\\"9 2 2011\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n    assertEquals(false, Challenge.magic(\\\"1 4 2011\\\"));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"You are to read each part of the date into its own integer type variable. The year should be a 4 digit number. You can assume the user enters a correct date formatted d m yyyy (no error checking required).\\n\\nDetermine whether the entered date is a magic date. Here are the rules for a magic date:\\n\\nmm * dd is a 1-digit number that matches the last digit of yyyy o\",\"tags\":[\"dates\",\"numbers\",\"validation\"],\"timestamp\":{\"$date\":1568147849283},\"title\":\"Magic Date\",\"stats\":{\"completed\":{\"total\":277,\"ratings\":[1,1,1,1,1,2,0,1,1,1,1,2,1,0,2,1,1,2,0,2,1,0,0,2,2,1,2,3,2,2,2,1,2,2,2,1,2,2,2,2,0,1,2,2,1,0,2,2,2,2,1,2,2,2,1,2,2,2,1,2,1,1,1,0,1,2,1,1,0,0,1,1,0,2,2,1,2,2,2,2,0,1,2,1,2,2,2,2,1,1,2,1,1,3,0,2,2,1,2,0,2,2,2,1,2,1,1,2,1,2,3,1,0,2,1,0,2,2,1,1,2,1,2,1,2,1,2,2,1,1,2,3,1,3,0,1,1,0,0,2,1,0,2,1,2,2,2,1,2,1,2,1,1,1,2,1,2,2,3,1,2,1,1,0,2,2,5,0,2,2,2,2,2,2,1,2,2,2,0,2,2,1,1,0,2,2,2,1,2,3,2,1,2,1,3,2,2,1,1,3,2,1,2,2,2,0,1,2,2,2,0,1,2,2,1,3,2,2,0,1,2,1,1,2,2,2,2,2,1,2,2,2,1,2,2,2],\"rators\":[\"LTHCxsdjqzXpaXShT\",\"3pdgguqZgNDSAJSGm\",\"sxci7DYKNa6q22Sjq\",\"cp3X8hk8yNME7qoD9\",\"FocLpCB2WEiK2gGni\",\"Yohr2MmAyaWGMbB35\",\"jb9RLyyuo565bKDzN\",\"t2kdBPj9qQAXY2Ehd\",\"3gxJoNp59B4eoyyed\",\"cG4PEDMMx8jXhWP8T\",\"Ha5J49rhojBRy3BaM\",\"P2S4ZfqrXKJc7pYZR\",\"8rF6PHMSaybTDsvXr\",\"79ZbLzp7xepvkonoh\",\"sb7Nh56pPFtPxLogT\",\"WPWBKqdkzkeGpgFR2\",\"a49eNnfRwSMxsDJXf\",\"pr4Cm4A369tC9gSeT\",\"XJsankyB4bBeK2eJv\",\"rgEfWvescaWsyep2A\",\"CLmJduqJHX83dM4Pd\",\"ybKny9NBc3i9fATk6\",\"3KjxQu9RZ8ZSywvLz\",\"8JyqsSbN2FJXPr3cw\",\"fxaS5K7ZXo4FbTe36\",\"S6PMMoyZiyso5Bd9x\",\"qJZsi5rhRnWA38FbA\",\"GgxxSd7k4CLfzkFMH\",\"aLpuDx72trwPQ5Aua\",\"C9yBWYcZsjmJYww3K\",\"wTKmTH949MvshrpM7\",\"W347YkKWzfvMbkuHr\",\"5NJWs4cAx7Kkqp9Hi\",\"r9hHZYPQAqJ9DbwLX\",\"CggGfsERnPKGupFWp\",\"8J2Dqqz9PaFufQzwY\",\"fBmfMBKNcbZ4zDuEq\",\"J67hC7LSEYS5JwhPj\",\"BmvBNcFB4eQe6gtug\",\"QPSwhNevikT7q8mz8\",\"gtk73irY4QdFpS2v9\",\"YLwJkF2wuL3n9o6a2\",\"JzGhD2tjX8RzqgNXt\",\"LfgqfkRm3TJQYLb9X\",\"toZsDEaLL7ptnFskQ\",\"7mpTbmAGbYkbHm4pv\",\"FSSM3xcaTXGcxqYGz\",\"mQqXtagpD5iMw64Hf\",\"2cdvd8yuPLSwvGj9w\",\"J9zJq7PMGb6mqzcHW\",\"Bo457Fm7HpxBzs5YT\",\"qEGfmqbNLrs2Qrva8\",\"AyrEvM2GLX2jqM772\",\"9gJsF5apWJGWZJprn\",\"4RHx3H8EwP2oboW8e\",\"6hsLDaXbCCEsiBr37\",\"xEuitW7gMaqzhq6x8\",\"rWhXHhzF4W8bea6LP\",\"4hYyZnCuvgfuxhd7e\",\"Es4eX2stRpyoXeC7f\",\"xFfjxt6vscAezQshy\",\"EZNT8B7yQnnZmuwCf\",\"AvEiDZKLHCEQ6n9Ma\",\"ZqjP4M6dzu32To33K\",\"wYYMNPe8nSiJFbvJw\",\"NsQ8qYQQ47gSPtQkK\",\"5Kf9z3G9QBs9fkvLs\",\"czBMGh6eheGuZTCgX\",\"CFQEuvs6nry4isLEZ\",\"TxD5qx2hqQa6pixAP\",\"wbSLghDxkTjiYJrEH\",\"hb3zxLXhR7Hgij23z\",\"gGnDsJz5hr2t9MKCF\",\"yHNuGqmFHi7hnA5j7\",\"Dvy75kgYTJ7Ltr7Rj\",\"fbYN9Jp46RqBqCd2K\",\"ML7bZJrM8gfGQJBJt\",\"j2hKJg9sh9m3HWFgo\",\"ujER6DyJuNvH7EMSR\",\"fiGvm9C6Pjir3Hb4B\",\"9RjPxa9gtAe8Rspre\",\"FJzZTZo7CmAyN5ajr\",\"8YCqERR78ERxmyyBp\",\"gBGjCfJvPHswDM5JQ\",\"QwkJidQW7vvEY6TLp\",\"4cnGYg4EhbGW5uLMg\",\"zRS8NrFkW6Fv5Cyuj\",\"pWR5uhd9dirgnvexP\",\"2DP9ho5CnBPwmNXGm\",\"mdEQJ2fmGmkbhbvNw\",\"gizR3Y8p9bGFZSAzs\",\"xzmfkwskjWqjsrRzb\",\"rTj67TTydxqkpwFtN\",\"Wf7nCHS4Gq5tx659h\",\"fZjkX29nhRTWWb75k\",\"TrquEHytntLKHA4m2\",\"Kso7rzAKB4TTCPKgM\",\"k9GXNo9HLAnPSitui\",\"hB5mgzMwQSnhBzi7P\",\"mfm3gB39arY8Rjb2y\",\"M8nN25q2n8YzCxaT8\",\"5seiNqw6ZXoF2GRRd\",\"c7sE7kceskbYy3KmA\",\"jyoLggHk8xQKZuoQC\",\"GEzaJZ2cPjENT4ERQ\",\"8zZ6xmzpiFair25qr\",\"WZujpe8yQAyZmpWHg\",\"B4pxRqzo43M7S8FbP\",\"6ZxpGyg7iviX9cPAy\",\"gDy7tg5NuCLbPaoiT\",\"cjxsqXfkAPoadmppi\",\"Ctuq7Wc8QPQmzwPK3\",\"Q4HXoXTabo2dKgxwy\",\"Yp7uvStL97cC9fKkY\",\"DePiAS7u5Pk9d6SLr\",\"kkyZ4oyYQC898Nttj\",\"htXCitorobtqYymjN\",\"RWqwvDdMSWctvc8eJ\",\"y6kfyYmydcD8tkBk7\",\"n9QAQiH35rBW6dZpS\",\"BmMA5FBX7NKpLj8ur\",\"DzvdGwHEjqsX7wyKr\",\"HJLovWP4xkuD4zFSX\",\"wsjr8C33NPyGYAqKu\",\"Bf5D7xm6E99zcM2er\",\"rvojHhKH3DaxotefQ\",\"tcSy5M22X8SGfmxN5\",\"DkSMZ3jZLkwviKb9g\",\"8yyfRwCsP5ovSFT5p\",\"zwruFCmuHkwJTpYqg\",\"5WQZzuHZBGqFeNQi3\",\"MCw7uAcoWcSTBTmr3\",\"muXMnzQwGLzN6j2Jr\",\"g4NCSxxHqHCGMpWwT\",\"ZMd8it647JSYTvx8Z\",\"9rK2eEYTWWduLHG97\",\"XDYmZd6da7sAwRcJe\",\"Ddj8RHEHYRJTcAwa2\",\"osXNzc2aCxspRwheS\",\"xeYtKtzKFm5RvEXMr\",\"tnYXC3cGqycxRzCgT\",\"5p6bwXayfAp7Y4WQ7\",\"kiRkuN7JXqvWBa4SG\",\"sJaSeR649EEMX9F4v\",\"ZPNk8KwpqXDgu3ALt\",\"j428nMyNKY8g2dcCi\",\"qraDA47Ewou5mzvrL\",\"MCjdtAAjL6sGLukPr\",\"5nugKwaWBJKTy6cL3\",\"87otmbdqNT3bHsQFu\",\"R24BMWbTh8rzh5zaw\",\"B59ANYuNBPaEhMJGq\",\"krm8MsaKFZH7yJwhc\",\"DcFnHfpg5TbMhMLP2\",\"jRqY4i8gPemsZMBGf\",\"yHvCCNugSDhWTmiEJ\",\"YcjwCvYut6834Jzd8\",\"9pqtNWrsTJdZcRbEZ\",\"Fd9765rksgPK4E2Zy\",\"kSnwZCFe7kB2GteiJ\",\"H5sfMFuQo6yHE8GFL\",\"k8WBPXnHFjCN2xcp3\",\"Ym8AjbKGSJooun3nt\",\"MGotcrxMowBDdpCAC\",\"AeJSxRqw2dJZuGvdk\",\"oMZovHkR6QqNvQwyc\",\"yXGiiSAR5nBHnH3yr\",\"azAzSkvJd7eyXY9x9\",\"8c8P2NGJisyn2QepD\",\"Eog3hCNjLgjsAGTCG\",\"Rn5YNvYdY468a7vRp\",\"QJWWgtwpAXay452XH\",\"uozaSJRDCJQ8kF7cw\",\"gXTAie79kiw28tx5u\",\"oMfq73A434YWhSuWQ\",\"mG8HqKiAQFTdRZthG\",\"rGpPd6PvpzLaqps4g\",\"P5BhjZxyeHQYTNyB9\",\"8Xx8nWXRydHDBGfQf\",\"jXTnL3JatkKjoifyb\",\"yd5PakB2z33q2JrTZ\",\"BbcH2NLjE4tKAZ3wR\",\"unNqQjSHzkb4pCzEu\",\"fJAnQriWjfZA5EFCK\",\"tyLS9T6YMfg9fMtYJ\",\"mQKWauR6b252TmdX4\",\"hD6sfDtntpqT8NR2o\",\"hDeaTsprkH6CmvSAR\",\"W56bWmpQeLJ9JEDsa\",\"udHFfcqNNej6udnpP\",\"pi76g3eRpnKrhee2a\",\"Hhvy3EGqWBXt3nFPA\",\"QTJvghkPpGKnKvZ5R\",\"GkYtSbQuheBF4Enys\",\"uFfEio8nzDvL8emhp\",\"Po3v3dHCk6wYGKMwi\",\"bur3yQ8s34zqKGEro\",\"eQXwk5zGckM8tCWYH\",\"mDWNyaaQ9hvPCRzSd\",\"buX4mCQhtXCfBjeno\",\"zZfMwLuoERGmybgib\",\"y3ZHAPcB5DDS9Dpnq\",\"nHj7SC5cnmkTApbgY\",\"HF3qXDKwsAfPqHroJ\",\"ZkgmMu8tZya9NdArp\",\"kmuz7z8uXFRGPPYFf\",\"Sq3gwSfug9TDaRjK9\",\"HsBAvstwRwkq9bmuF\",\"6rvJwN4mcX7iYGjY7\",\"Ag5fRrZ9MrAZc9vpj\",\"P9iAdQpAKG8JKEaGp\",\"tXbdfizierPihk9oH\",\"THfqTNRDCLHFRJey6\",\"mc7wRrHbq7QgShSTH\",\"uw47663LqPME8btaA\",\"SDnSk8mGaAg2e77Sb\",\"srJ34BaybkQh3qRkM\",\"wFRLGjA56kj7xyhmv\",\"4za87fFyw9qxkD936\",\"PCAcZdg2HmDcGyeXb\",\"T9qdZjNzPaESdJsdC\",\"563onSvqgjToY79ah\",\"PJu3WcTpfRrvHfQiS\",\"J7epB3qSQJ2E8vWkY\",\"jCjCvyhqhpebkJn34\",\"RsujLHaML6L3KinzK\",\"478iCTPiXNjoHXwHD\",\"5b3rz7nFjQ7rwtqkQ\",\"PPdaczxSt2u5cmZYG\",\"KMR6vNzvSKMA2cXnK\",\"xW9nC9h6p77YT2iso\",\"SE5G2Caf3btnuGmz6\",\"4hP6JDXcHtW3ErE9H\",\"hYA8Km925HGDBgQiy\",\"hhxjQREtmHSheH9Pj\",\"CHuC8mjQLn2KJxZSz\",\"FNYPC36yqPmTKDaqR\",\"kFMhaBXDFKwb35d5b\",\"dCNJAT6r8CDuobBi8\",\"sRPM2cDXPjE9TefSu\",\"9xzk7TQqCRBWcMHu9\",\"AeSmk2XWGcTLHB7PJ\",\"unqzSsxpxj9sZ7rbD\",\"CoaHWmqC5siYmi8dj\",\"Mh78na6pTJzMPthF2\",\"FxPDKKibxnZjGJLs6\",\"JDF2epP4JBSvyrHcu\",\"PAEWysAAFheYiYPBp\",\"XH6378Zm3WBm679yx\"],\"quality\":[2,5,5,5,2,5,5,4,5,3,5,5,3,5,3,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"isHidden\":false,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":4.277777777777778,\"family\":[{\"_id\":\"sCHkm7n4gyMaFJCR2\",\"language\":\"cpp\"},{\"_id\":\"g7dRyiCi5dpKxuFRa\",\"language\":\"java\"},{\"_id\":\"x6bADPfDJPMYyzpBa\",\"language\":\"javascript\"},{\"_id\":\"F6dNdo9CCh3WKi2xx\",\"language\":\"php\"},{\"_id\":\"GoGbZtXDYPDCfeBz8\",\"language\":\"python3\"},{\"_id\":\"cd6sTjbRLmQFEqXGX\",\"language\":\"ruby\"}]}}"]