a["{\"msg\":\"result\",\"id\":\"748\",\"result\":{\"_id\":\"y86z2FK3r3uLJrGvu\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class NumberSplit {\\n  public static int[] numSplit(int n) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":2.896551724137931,\"familyId\":\"n7iXq8wm6aqJv2B65\",\"instructions\":\"Create a function that takes a number `num` and returns each place value in the number.\\n\\n### Examples\\n```\\nnumSplit(39) ➞ [30, 9]\\n\\nnumSplit(-434) ➞ [-400, -30, -4]\\n\\nnumSplit(100) ➞ [100, 0, 0]\\n\\nnumSplit(121317) ➞ [100000, 20000, 1000, 300, 10, 7]\\n```\\n\\n### Notes\\nN/A\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"/** \\n================================= \\nTestGen 2.3 for JUnit 4.13.0 \\t\\t\\nTest Case: NumberSplit::numSplit \\nTimestamp: 11/13/2020 9:41:23 PM \\n--------------------------------- \\n® DARKKO 2020 © \\n=================================\\n**/ \\n\\nimport static org.junit.Assert.assertArrayEquals; \\nimport org.junit.Test; \\n\\npublic class NumberSplitTest {\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertArrayEquals(new int[] {30, 9}, NumberSplit.numSplit(39));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertArrayEquals(new int[] {-400, -30, -4}, NumberSplit.numSplit(-434));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertArrayEquals(new int[] {100, 0, 0}, NumberSplit.numSplit(100));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertArrayEquals(new int[] {3000, 900, 20, 9}, NumberSplit.numSplit(3929));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertArrayEquals(new int[] {10000, 0, 200, 90, 3}, NumberSplit.numSplit(10293));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertArrayEquals(new int[] {900, 0, 0}, NumberSplit.numSplit(900));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertArrayEquals(new int[] {-100, 0, 0}, NumberSplit.numSplit(-100));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertArrayEquals(new int[] {10000, 2000, 300, 40, 5}, NumberSplit.numSplit(12345));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test09() { \\n\\t\\tassertArrayEquals(new int[] {-90000, -8000, -700, -60, -5}, NumberSplit.numSplit(-98765));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test10() { \\n\\t\\tassertArrayEquals(new int[] {40000, 3000, 200, 10, 0}, NumberSplit.numSplit(43210));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test11() { \\n\\t\\tassertArrayEquals(new int[] {100000, 20000, 1000, 300, 10, 7}, NumberSplit.numSplit(121317));\\n\\t}\\n}\",\"language\":\"java\",\"quality\":0,\"summary\":\"Create a function that takes a number num and returns each place value in the number.\\n\\nExamples\\nnumSplit(39) ➞ [30, 9]\\n\\nnumSplit(-434) ➞ [-400, -30, -4]\\n\\nnumSplit(100) ➞ [100, 0, 0]\\n\\nnumSplit(121317) ➞ [100000, 20000, 1000, 300, 10, 7]\\n\\nNotes\\nN/A\",\"tags\":[\"arrays\",\"numbers\"],\"timestamp\":{\"$date\":1605279926402},\"title\":\"Splitting Up Numbers\",\"stats\":{\"completed\":{\"total\":29,\"ratings\":[3,3,3,3,3,2,4,3,3,2,5,5,4,0,2,3,5,2,2,3,2,2,2,2,3,2,4,2,5],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"jrFJmdAoN2yqgkp89\",\"bENHjCu6YW6Ev77zy\",\"gXTAie79kiw28tx5u\",\"Ym8AjbKGSJooun3nt\",\"fbgn5575LS3jsxABM\",\"jm4tNFjsgYKW5TZfp\",\"SExX3m5YftBWmsk2e\",\"Z96GhGMX4TytWoq8J\",\"CigveYoShKaXdbZoS\",\"F2YL5S7iw3tXDodBB\",\"x6ZTQwEt33anMCkyc\",\"zyHHSisus2MpibGkG\",\"bkTWNf4MMEvWghHWH\",\"5qjDvmKyDxg2uZTzJ\",\"mDWNyaaQ9hvPCRzSd\",\"vRXuYYBNuHEQ29fbm\",\"rhS8qXRjZcpDXkwnE\",\"htXCitorobtqYymjN\",\"sxci7DYKNa6q22Sjq\",\"rWhXHhzF4W8bea6LP\",\"wFRLGjA56kj7xyhmv\",\"KMR6vNzvSKMA2cXnK\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"DSoxf5rgtyzRP7svM\",\"language\":\"cpp\"},{\"_id\":\"y86z2FK3r3uLJrGvu\",\"language\":\"java\"},{\"_id\":\"TRemcJejARnQyd5xr\",\"language\":\"javascript\"},{\"_id\":\"vknrYW6JxGwiNsFJJ\",\"language\":\"php\"},{\"_id\":\"Wd9cCvFKC3fHzgqSx\",\"language\":\"python3\"},{\"_id\":\"LtoaEoneWyR7hTtEu\",\"language\":\"ruby\"}]}}"]