a["{\"msg\":\"result\",\"id\":\"691\",\"result\":{\"_id\":\"vCqkPQ2ATmpqxaDgT\",\"author\":\"Edward Clark\",\"authorId\":\"3pdgguqZgNDSAJSGm\",\"code\":\"public class Challenge {\\n  public static int squares(int a, int b) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":2.6956521739130435,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"GhEruj5pTSCTKekD4\",\"instructions\":\"Watson likes to challenge Sherlock's math ability. He will provide a starting and ending value describing a range of integers. Sherlock must determine the number of square integers within that range, inclusive of the endpoints (note that a square integer is an integer which is the square of an integer, e.g. `1, 4, 9, 16, 25, 36, 49`).\\n\\nFor example, the range is `a=24` and `b=49`, inclusive. There are three square integers in the range: `25, 36` and `49`.\\n\\nComplete the squares function that returns an integer representing the number of square integers in the inclusive range from `a`  to `b`.\\n\\n### Examples\\n```\\nsquares(3, 9) ➞ 2\\n\\nsquares(17, 24) ➞ 0\\n\\nsquares(1, 1000000000) ➞ 31622\\n```\\n\\n### Notes\\nYour solution must solve each problem in 1 second or less.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"/**\\n *\\n * @author edwardclark\\n */\\nimport static org.hamcrest.core.Is.is;\\nimport org.junit.Test;\\nimport static org.junit.Assert.assertThat;\\n\\npublic class ChallengeTests {    \\n    @Test\\n    public void test1() {\\n        assertThat(Challenge.squares(35, 70), is(3));\\n    }\\n    @Test(timeout = 1000)\\n    public void test2() {\\n        assertThat(Challenge.squares(100, 1000), is(22));           \\n    }\\n    @Test(timeout = 1000)\\n    public void test3() {\\n        assertThat(Challenge.squares(3, 9), is(2));           \\n    } \\n    @Test(timeout = 1000)\\n    public void test4() {\\n        assertThat(Challenge.squares(17, 24), is(0));           \\n    }      \\n    @Test(timeout = 1000)\\n    public void test5() {\\n        assertThat(Challenge.squares(433, 100000), is(296));           \\n    } \\n    @Test(timeout = 1000)\\n    public void test6() {\\n        assertThat(Challenge.squares(1, 1000000000), is(31622));           \\n    }  \\n    @Test(timeout = 1000)\\n    public void test7() {\\n        assertThat(Challenge.squares(89784519, 103811134), is(713));           \\n    } \\n    @Test(timeout = 1000)\\n    public void test8() {\\n        assertThat(Challenge.squares(50979851, 733216221), is(19937));           \\n    } \\n}\",\"language\":\"java\",\"stats\":{\"completed\":{\"ratings\":[5,5,5,5,5,1,4,1,0,5,1,0,2,4,3,2,3,1,3,4,5,2,2,2,3,2,1,2,2,3,2,3,0,2,3,1,3,3,3,2,4,3,4,3,3,2],\"rators\":[\"rehehi2Tr2mwaEoJE\",\"3pdgguqZgNDSAJSGm\",\"6dtkPMTDuoPwLtf43\",\"oMLSgpSFQnY4ui8cB\",\"TrquEHytntLKHA4m2\",\"62Q2HcfLE6SGphZkT\",\"J22GaPwwi3TL2pAkw\",\"D2iBuoupeNoDERPTr\",\"2xZKxug6EW2br2WBN\",\"PErEzX9YFvY2Yzfh2\",\"XuWAv9pC8zvZxjXAD\",\"PfrigoSen2vmWxCgB\",\"pSGuHsr75Pdy5zA4e\",\"9pCPyhvQmbkWyD2LL\",\"eoepTq5ES5tfgY9XT\",\"Nb6LYPoQP6KJZt8mz\",\"yiHCqsJuZLL6eMNuF\",\"AjzZS7MouArr5Zgdh\",\"wrqRhSigtz8MXeBaL\",\"mGaEDPw5FsDb3vdnq\",\"Ym8AjbKGSJooun3nt\",\"azAzSkvJd7eyXY9x9\",\"Es4eX2stRpyoXeC7f\",\"J48HzyrM4kmybqM48\",\"Yp7uvStL97cC9fKkY\",\"gXTAie79kiw28tx5u\",\"B8CsyH4butrtMChAq\",\"9o7Sp5AvxK75cQ3jD\",\"mQKWauR6b252TmdX4\",\"iq55QasecYJXKz8rx\",\"jDxmYReTXZD95QifJ\",\"LNCb5rksJLJ43L4Nw\",\"DkSMZ3jZLkwviKb9g\",\"rhS8qXRjZcpDXkwnE\",\"THoTJTpHE2D4TGWAJ\",\"C6fJvPAqKzJcetbAm\",\"ZXMCkXGYtPAHfipcX\",\"rEWbYF9mHh28oRvT9\",\"htXCitorobtqYymjN\",\"xMqYeXfGgKQSBQzf5\",\"bPRkGASs9fgjhvYA8\",\"KMR6vNzvSKMA2cXnK\",\"sxci7DYKNa6q22Sjq\",\"jCjCvyhqhpebkJn34\",\"uw47663LqPME8btaA\"],\"total\":48,\"quality\":[5,2,5,5]},\"flags\":0},\"summary\":\"Watson likes to challenge Sherlock's math ability. He will provide a starting and ending value describing a range of integers. Sherlock must determine the number of square integers within that range, inclusive of the endpoints (note that a square integer is an integer which is the square of an integer, e.g. 1, 4, 9, 16, 25, 36, 49).\\n\\nFor example, the range is\",\"tags\":[\"algorithms\",\"math\"],\"timestamp\":{\"$date\":1592749244512},\"title\":\"Sherlock and Squares\",\"quality\":4.25,\"family\":[{\"_id\":\"vCqkPQ2ATmpqxaDgT\",\"language\":\"java\"},{\"_id\":\"aHFBLwgCPKBoAcJAA\",\"language\":\"javascript\"},{\"_id\":\"yy2orcPr9CqAsrc24\",\"language\":\"python3\"},{\"_id\":\"sxChmzcWnJ8bZbowE\",\"language\":\"ruby\"}]}}"]