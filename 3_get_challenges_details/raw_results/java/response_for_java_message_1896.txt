a["{\"msg\":\"result\",\"id\":\"502\",\"result\":{\"_id\":\"Nwq8yK3Eq2DqbxDsL\",\"author\":\"bangyen\",\"authorId\":\"yv7c4H2jimSKHEjtG\",\"code\":\"public class Program {\\n\\tpublic static Object[][] peelLayer(Object[][] arr) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":2.074074074074074,\"quality\":0,\"familyId\":\"ygoHWv9MSAg7mQ35i\",\"instructions\":\"Given an array of object arrays, return a new array of object arrays containing every element, **except for the outer elements**.\\n\\n### Examples\\n```\\npeelLayer([\\n  ['a', 'b', 'c', 'd'],\\n  ['e', 'f', 'g', 'h'],\\n  ['i', 'j', 'k', 'l'],\\n  ['m', 'n', 'o', 'p']\\n]) ➞ [\\n  ['f', 'g'],\\n  ['j', 'k']\\n]\\n\\npeelLayer([\\n  [1, 2, 3, 4, 5],\\n  [6, 7, 8, 9, 10],\\n  [11, 12, 13, 14, 15],\\n  [16, 17, 18, 19, 20],\\n  [21, 22, 23, 24, 25],\\n  [26, 27, 28, 29, 30],\\n  [31, 32, 33, 34, 35]\\n]) ➞ [\\n  [7, 8, 9],\\n  [12, 13, 14],\\n  [17, 18, 19],\\n  [22, 23, 24],\\n  [27, 28, 29]\\n]\\n\\npeelLayer([\\n  [true, false, true],\\n  [false, false, true],\\n  [true, true, true]\\n]) ➞ [[false]]\\n\\npeel_layer_off([\\n  [\\\"hello\\\", \\\"world\\\"],\\n  [\\\"hello\\\", \\\"world\\\"]\\n]) ➞ []\\n```\\n\\n### Notes\\n- The 2D grid is always a rectangular/square shape.\\n- Always return some form of nested array, unless there are no elements. In that case, return an empty array.\",\"isHidden\":false,\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ProgramTest {\\n\\t@Test\\n\\tpublic void test1() {\\n\\t\\tassertEquals(\\n\\t\\t\\tnew Character[][]{\\n\\t\\t\\t\\t{'f', 'g'},\\n\\t\\t\\t\\t{'j', 'k'}\\n\\t\\t\\t},\\n\\t\\t\\tProgram.peelLayer(\\n\\t\\t\\t\\tnew Character[][]{\\n\\t\\t\\t\\t\\t{'a', 'b', 'c', 'd'},\\n\\t\\t\\t\\t\\t{'e', 'f', 'g', 'h'},\\n\\t\\t\\t\\t\\t{'i', 'j', 'k', 'l'},\\n\\t\\t\\t\\t\\t{'m', 'n', 'o', 'p'}\\n\\t\\t\\t\\t}\\n\\t\\t\\t)\\n\\t\\t);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test2() {\\n\\t\\tassertEquals(\\n\\t\\t\\tnew Integer[][]{\\n\\t\\t\\t\\t{7,  8,  9},\\n\\t\\t\\t\\t{12, 13, 14},\\n\\t\\t\\t\\t{17, 18, 19},\\n\\t\\t\\t\\t{22, 23, 24},\\n\\t\\t\\t\\t{27, 28, 29}\\n\\t\\t\\t},\\n\\t\\t\\tProgram.peelLayer(\\n\\t\\t\\t\\tnew Integer[][]{\\n\\t\\t\\t\\t\\t{1,  2,  3,  4, 5},\\n\\t\\t\\t\\t\\t{6,  7,  8,  9, 10},\\n\\t\\t\\t\\t\\t{11, 12, 13, 14, 15},\\n\\t\\t\\t\\t\\t{16, 17, 18, 19, 20},\\n\\t\\t\\t\\t\\t{21, 22, 23, 24, 25},\\n\\t\\t\\t\\t\\t{26, 27, 28, 29, 30},\\n\\t\\t\\t\\t\\t{31, 32, 33, 34, 35}\\n\\t\\t\\t\\t}\\n\\t\\t\\t)\\n\\t\\t);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test3() {\\n\\t\\tassertEquals(\\n\\t\\t\\tnew Boolean[][]{{false}},\\n\\t\\t\\tProgram.peelLayer(\\n\\t\\t\\t\\tnew Boolean[][]{\\n\\t\\t\\t\\t\\t{true, false, true},\\n\\t\\t\\t\\t\\t{false, false, true},\\n\\t\\t\\t\\t\\t{true, true, true}\\n\\t\\t\\t\\t}\\n\\t\\t\\t)\\n\\t\\t);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test4() {\\n\\t\\tassertEquals(\\n\\t\\t\\tnew String[0],\\n\\t\\t\\tProgram.peelLayer(\\n\\t\\t\\t\\tnew String[][]{\\n\\t\\t\\t\\t\\t{\\\"hello\\\", \\\"world\\\"},\\n\\t\\t\\t\\t\\t{\\\"hello\\\", \\\"world\\\"}\\n\\t\\t\\t\\t}\\n\\t\\t\\t)\\n\\t\\t);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test5() {\\n\\t\\tassertEquals(\\n\\t\\t\\tnew Object[][]{{false, true, 5, 6, 7}},\\n\\t\\t\\tProgram.peelLayer(\\n\\t\\t\\t\\tnew Object[][]{\\n\\t\\t\\t\\t\\t{true, false, true, 1, 2, 3, 4},\\n\\t\\t\\t\\t\\t{false, false, true, 5, 6, 7, 8},\\n\\t\\t\\t\\t\\t{true, true, true, 9, 10, 11, 12}\\n\\t\\t\\t\\t}\\n\\t\\t\\t)\\n\\t\\t);\\n\\t}\\n}\",\"language\":\"java\",\"summary\":\"Given an array of object arrays, return a new array of object arrays containing every element, except for the outer elements.\\n\\nExamples\\npeelLayer([\\n  ['a', 'b', 'c', 'd'],\\n  ['e', 'f', 'g', 'h'],\\n  ['i', 'j', 'k', 'l'],\\n  ['m', 'n', 'o', 'p']\\n]) ➞ [\\n  ['f', 'g'],\\n  ['j', 'k']\\n]\\n\\npeelLayer([\\n  [1, 2, 3, 4, 5],\\n  [6, 7, 8, 9, 10],\\n  [11, 12, 13, 14, 15],\\n  [16,\",\"tags\":[\"arrays\",\"loops\",\"language_fundamentals\"],\"timestamp\":{\"$date\":1600326587620},\"title\":\"Peeling off the Outer Layers\",\"stats\":{\"completed\":{\"total\":51,\"ratings\":[1,1,1,1,1,1,3,2,2,2,3,2,3,2,2,1,2,2,1,1,2,2,1,1,3,3,2,2,2,2,2,2,3,3,3,1,5,2,2,3,3,3,2,3,2,1,2,2,2,2,3,1,2,4],\"quality\":[],\"rators\":[\"yv7c4H2jimSKHEjtG\",\"GxzTqpqNwnouPaJES\",\"TgWxtdDENaq5K3FgH\",\"a49eNnfRwSMxsDJXf\",\"TrquEHytntLKHA4m2\",\"rvojHhKH3DaxotefQ\",\"PytNZK9mNiRiZxPrm\",\"Es4eX2stRpyoXeC7f\",\"yXGiiSAR5nBHnH3yr\",\"a777e8chPvJkY3tKa\",\"rehehi2Tr2mwaEoJE\",\"DzvdGwHEjqsX7wyKr\",\"gXTAie79kiw28tx5u\",\"etoSR23iELGGgs9rA\",\"8Xx8nWXRydHDBGfQf\",\"jyoLggHk8xQKZuoQC\",\"82weQfHHmno4Mq4X7\",\"c7uBxu2rgY77H5d79\",\"mG8HqKiAQFTdRZthG\",\"srJ34BaybkQh3qRkM\",\"htXCitorobtqYymjN\",\"sxci7DYKNa6q22Sjq\",\"KMR6vNzvSKMA2cXnK\",\"QLbMpCmJpFNrwWey3\",\"rWhXHhzF4W8bea6LP\",\"YrnFw8siCt7rDhTHW\",\"p8qqFdJ3FSk5x9z3G\",\"goCDAdQhhEBS9fsjw\",\"FqM5LAu594mH3Hdir\",\"HsFc9PgmpP2X9Fwh9\",\"xrGuYYAKBTvTSpfmh\",\"vbYJSsGG9ztZmGhZD\",\"e9NhiaGdEeGzhmPju\",\"ZZupKZ6tRRbkj6BAj\",\"usdJ6cTiwMnSoPevi\",\"dw9Kdr8ChJPBS9mne\",\"CMGb4DrqCRdc2FbMa\",\"7Fusn4Gp5y8sBe9LT\",\"6rvJwN4mcX7iYGjY7\",\"ZJxwm325fhZmQHBLQ\",\"FxPDKKibxnZjGJLs6\",\"5HGyJtoZ3AffzAZAv\",\"3CXSJHwL4Qihbi6LA\",\"f3iAzHWpLGLeYHiJ5\",\"ooEHTqqR26zokzMwW\",\"Bc74e6iknZDv3zTyv\",\"uw47663LqPME8btaA\",\"RCRz3knJMKQe4bDTn\",\"DmFttKbrvZXojQkPm\"]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"J74DckDe4qdcCTxfL\",\"family\":[{\"_id\":\"Nwq8yK3Eq2DqbxDsL\",\"language\":\"java\"},{\"_id\":\"mQznJjH2mtaybMCG8\",\"language\":\"javascript\"},{\"_id\":\"EWgdCtSDmRqJPrzoz\",\"language\":\"python3\"},{\"_id\":\"n8xstAeimSbRBcSsN\",\"language\":\"ruby\"}]}}"]