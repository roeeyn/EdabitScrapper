a["{\"msg\":\"result\",\"id\":\"411\",\"result\":{\"_id\":\"JPDNpqri6djiC8ptP\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class PairAndZip {\\n\\tpublic static String[][] zipIt(String[] women, String[] men) {\\n\\t\\n\\t}\\n}\",\"difficulty\":1.5106382978723405,\"familyId\":\"TtzLhkzMTAESC4zQD\",\"instructions\":\"Given an array of women and an array of men, either:\\n- Return `null` if the two arrays are of different sizes.\\n- If the sizes match, return an **array of pairs**, with the first woman paired with the first man, second woman paired with the second man, etc.\\n\\n### Examples\\n```\\nzipIt([[\\\"Tesha\\\", \\\"Tesh\\\", \\\"Shang\\\"], [\\\"Deep\\\", \\\"Xavier\\\", \\\"Dex\\\"]])\\n ➞ [[\\\"Tesha\\\", \\\"Deep\\\"],[\\\"Tesh\\\", \\\"Xavier\\\"],[\\\"Shang\\\", \\\"Dex\\\"]]\\n\\nzipIt([\\\"Elise\\\", \\\"Mary\\\"], [\\\"John\\\", \\\"Rick\\\"])\\n ➞ [[\\\"Elise\\\", \\\"John\\\"], [\\\"Mary\\\", \\\"Rick\\\"]]\\n\\nzipIt([\\\"Ana\\\", \\\"Amy\\\", \\\"Lisa\\\"], [\\\"Bob\\\", \\\"Josh\\\"]) ➞ null\\n\\nzipIt([\\\"Ana\\\", \\\"Amy\\\", \\\"Lisa\\\"], [\\\"Bob\\\", \\\"Josh\\\", \\\"Tim\\\"])\\n ➞ [[\\\"Ana\\\", \\\"Bob\\\"], [\\\"Amy\\\", \\\"Josh\\\"],[\\\"Lisa\\\", \\\"Tim\\\"]]\\n```\\n\\n### Notes\\nN/A\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"import static org.junit.Assert.assertArrayEquals; \\nimport org.junit.Test; \\n\\npublic class PairAndZipTest {\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertArrayEquals(new String[][] {{\\\"Tesha\\\", \\\"Deep\\\"}, {\\\"Tesh\\\", \\\"Xavier\\\"}, {\\\"Shang\\\", \\\"Dex\\\"}}, PairAndZip.zipIt(new String[] {\\\"Tesha\\\", \\\"Tesh\\\", \\\"Shang\\\"}, new String[] {\\\"Deep\\\", \\\"Xavier\\\", \\\"Dex\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertArrayEquals(new String[][] {{\\\"Elise\\\", \\\"John\\\"}, {\\\"Mary\\\", \\\"Rick\\\"}}, PairAndZip.zipIt(new String[] {\\\"Elise\\\", \\\"Mary\\\"}, new String[] {\\\"John\\\", \\\"Rick\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertArrayEquals(null, PairAndZip.zipIt(new String[] {\\\"Ana\\\", \\\"Amy\\\", \\\"Lisa\\\"}, new String[] {\\\"Bob\\\", \\\"Josh\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertArrayEquals(new String[][] {{\\\"Ana\\\", \\\"Bob\\\"}, {\\\"Amy\\\", \\\"Josh\\\"}, {\\\"Lisa\\\", \\\"Tim\\\"}}, PairAndZip.zipIt(new String[] {\\\"Ana\\\", \\\"Amy\\\", \\\"Lisa\\\"}, new String[] {\\\"Bob\\\", \\\"Josh\\\", \\\"Tim\\\"}));\\n\\t}\\n}\",\"language\":\"java\",\"quality\":5,\"summary\":\"Given an array of women and an array of men, either:\\nReturn null if the two arrays are of different sizes.\\nIf the sizes match, return an array of pairs, with the first woman paired with the first man, second woman paired with the second man, etc.\\n\\nExamples\\nzipIt([[\\\"Tesha\\\", \\\"Tesh\\\", \\\"Shang\\\"], [\\\"Deep\\\", \\\"Xavier\\\", \\\"Dex\\\"]])\\n ➞ [[\\\"Tesha\\\", \\\"Deep\\\"],[\\\"Tesh\\\", \\\"Xavier\\\"],[\",\"tags\":[\"arrays\",\"formatting\",\"sorting\"],\"timestamp\":{\"$date\":1607359408174},\"title\":\"Zip It, If You Can?\",\"stats\":{\"completed\":{\"total\":45,\"ratings\":[1,1,1,1,1,2,2,1,2,1,2,1,4,2,2,3,1,1,1,1,2,2,2,2,0,2,2,1,2,2,1,2,1,2,0,2,2,2,0,2,1,2,2,1,1,1,1],\"quality\":[5],\"rators\":[\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"L7vb79CJPprRuQQpw\",\"xv5obFhsxY93mqR5S\",\"SExX3m5YftBWmsk2e\",\"jXTnL3JatkKjoifyb\",\"XQS4jE76BQZxd8xqB\",\"vwksp3b3vgSDDpzJk\",\"gXTAie79kiw28tx5u\",\"hD6sfDtntpqT8NR2o\",\"C9yBWYcZsjmJYww3K\",\"T94DT5gxK2nW8ZeNa\",\"bastxCiPF9Wwtxwpb\",\"r6mkxEZEBtSaKdpge\",\"a49eNnfRwSMxsDJXf\",\"82weQfHHmno4Mq4X7\",\"mG8HqKiAQFTdRZthG\",\"buX4mCQhtXCfBjeno\",\"bur3yQ8s34zqKGEro\",\"jyoLggHk8xQKZuoQC\",\"DkSMZ3jZLkwviKb9g\",\"oMZovHkR6QqNvQwyc\",\"igv9nEmDQkYYDkYZz\",\"mfm3gB39arY8Rjb2y\",\"sxci7DYKNa6q22Sjq\",\"Sv9FJto8whz2sykHs\",\"rhS8qXRjZcpDXkwnE\",\"srJ34BaybkQh3qRkM\",\"xEX3TDY6C2h82dJTn\",\"wFRLGjA56kj7xyhmv\",\"J9zJq7PMGb6mqzcHW\",\"htXCitorobtqYymjN\",\"jCjCvyhqhpebkJn34\",\"KMR6vNzvSKMA2cXnK\",\"B4pxRqzo43M7S8FbP\",\"rWhXHhzF4W8bea6LP\",\"hhxjQREtmHSheH9Pj\",\"unqzSsxpxj9sZ7rbD\",\"JJFPy22rhWmioEDwN\",\"FxPDKKibxnZjGJLs6\",\"uw47663LqPME8btaA\",\"XH6378Zm3WBm679yx\",\"nFbmNzMQ38TncmfQX\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"xPoMrreMwxHmGaQ6K\",\"language\":\"cpp\"},{\"_id\":\"JPDNpqri6djiC8ptP\",\"language\":\"java\"},{\"_id\":\"4QZqtGxiqJbzkNesj\",\"language\":\"javascript\"},{\"_id\":\"BxKT4agPnm9ZNpDru\",\"language\":\"python3\"},{\"_id\":\"nFXBctgKiWAXWisrm\",\"language\":\"ruby\"}]}}"]