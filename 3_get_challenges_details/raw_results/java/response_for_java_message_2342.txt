a["{\"msg\":\"result\",\"id\":\"727\",\"result\":{\"_id\":\"KbLqgHtYt6TR2oCHQ\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class Products {\\n  public static int maxProduct(int[] r) {\\n\\t\\t\\n\\t}\\n\\n  public static int minProduct(int[] r) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":2.8,\"familyId\":\"rLHDjYuajkDZ7p8BL\",\"instructions\":\"Write **two** functions:\\n\\n1. One that returns the **maximum product** of three numbers in an array.\\n2. One that returns the **minimum product** of three numbers in an array.\\n\\n### Examples\\n```\\nmaxProduct([-8, -9, 1, 2, 7]) ➞ 504\\n\\nmaxProduct([-8, 1, 2, 7, 9]) ➞ 126\\n\\nminProduct([1, -1, 1, 1]) ➞ -1\\n\\nminProduct([-5, -3, -1, 0, 4]) ➞ -15\\n```\\n\\n### Notes\\nN/A\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"import static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class ProductsTest {\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertEquals(-1, Products.maxProduct(new int[] {1,-1, 1}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertEquals(1, Products.maxProduct(new int[] {1,-1, 1, 1}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertEquals(504, Products.maxProduct(new int[] {-8,-9, 1, 2, 7}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertEquals(126, Products.maxProduct(new int[] {-8, 1, 2, 7, 9}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertEquals(50, Products.maxProduct(new int[] {1, 1, 5, 1, 1,-10,-1}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertEquals(-210, Products.maxProduct(new int[] {-8,-7,-6,-5}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertEquals(56, Products.maxProduct(new int[] {-8,-7,-6,-5, 1}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertEquals(0, Products.maxProduct(new int[] {1, 0, 1, 0, 0}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test09() { \\n\\t\\tassertEquals(0, Products.maxProduct(new int[] {-5, 1, 10, 0, 0}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test10() { \\n\\t\\tassertEquals(0, Products.maxProduct(new int[] {-5,-1,-1, 0, 0}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test11() { \\n\\t\\tassertEquals(5, Products.maxProduct(new int[] {-5, 1,-1, 0, 0}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test12() { \\n\\t\\tassertEquals(60, Products.maxProduct(new int[] {-5,-3,-1, 0, 4}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test13() { \\n\\t\\tassertEquals(441, Products.maxProduct(new int[] {5, 3,-1, 0,-4, 7, 7, 9}));\\n\\t} \\n\\t\\n\\t@Test\\n\\tpublic void test14() { \\n\\t\\tassertEquals(-1, Products.minProduct(new int[] {1,-1, 1}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test15() { \\n\\t\\tassertEquals(-1, Products.minProduct(new int[] {1,-1, 1, 1}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test16() { \\n\\t\\tassertEquals(-126, Products.minProduct(new int[] {-8,-9, 1, 2, 7}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test17() { \\n\\t\\tassertEquals(-504, Products.minProduct(new int[] {-8, 1, 2, 7, 9}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test18() { \\n\\t\\tassertEquals(-50, Products.minProduct(new int[] {1, 1, 5, 1, 1,-10,-1}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test19() { \\n\\t\\tassertEquals(-336, Products.minProduct(new int[] {-8,-7,-6,-5}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test20() { \\n\\t\\tassertEquals(-336, Products.minProduct(new int[] {-8,-7,-6,-5, 1}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test21() { \\n\\t\\tassertEquals(0, Products.minProduct(new int[] {1, 0, 1, 0, 0}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test22() { \\n\\t\\tassertEquals(-50, Products.minProduct(new int[] {-5, 1, 10, 0, 0}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test23() { \\n\\t\\tassertEquals(-5, Products.minProduct(new int[] {-5,-1,-1, 0, 0}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test24() { \\n\\t\\tassertEquals(0, Products.minProduct(new int[] {-5, 1,-1, 0, 0}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test25() { \\n\\t\\tassertEquals(-15, Products.minProduct(new int[] {-5,-3,-1, 0, 4}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test26() { \\n\\t\\tassertEquals(-252, Products.minProduct(new int[] {5, 3,-1, 0,-4, 7, 7, 9}));\\n\\t}\\n}\",\"language\":\"java\",\"quality\":0,\"summary\":\"Write two functions:\\n\\nOne that returns the maximum product of three numbers in an array.\\nOne that returns the minimum product of three numbers in an array.\\n\\nExamples\\nmaxProduct([-8, -9, 1, 2, 7]) ➞ 504\\n\\nmaxProduct([-8, 1, 2, 7, 9]) ➞ 126\\n\\nminProduct([1, -1, 1, 1]) ➞ -1\\n\\nminProduct([-5, -3, -1, 0, 4]) ➞ -15\\n\\nNotes\\nN/A\",\"tags\":[\"numbers\",\"arrays\"],\"timestamp\":{\"$date\":1608301242423},\"title\":\"Maximum And Minimum Product Triplets\",\"stats\":{\"completed\":{\"total\":19,\"ratings\":[3,3,3,3,3,3,2,2,3,3,0,4,4,2,1,3,4,4,4,2],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"gXTAie79kiw28tx5u\",\"jaFRLTYgfrnHbutk3\",\"LNCb5rksJLJ43L4Nw\",\"vRXuYYBNuHEQ29fbm\",\"wRazYR9mxwbeeaZwB\",\"rpRETBr9s4hgFNtPb\",\"c7uBxu2rgY77H5d79\",\"rhS8qXRjZcpDXkwnE\",\"dTFWmBaz6QaPZxSAD\",\"xMqYeXfGgKQSBQzf5\",\"zck7hK3ve9nQ8KTEi\",\"KMR6vNzvSKMA2cXnK\",\"sxci7DYKNa6q22Sjq\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"5GXcpepqLahRxveWq\",\"language\":\"cpp\"},{\"_id\":\"KbLqgHtYt6TR2oCHQ\",\"language\":\"java\"},{\"_id\":\"zEFP5c8ZshTXRfgYb\",\"language\":\"javascript\"},{\"_id\":\"i747Wtc7pCukr8GRC\",\"language\":\"python3\"},{\"_id\":\"7Yi9RDahJ7m73mb5W\",\"language\":\"ruby\"}]}}"]