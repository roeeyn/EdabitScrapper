a["{\"msg\":\"result\",\"id\":\"804\",\"result\":{\"_id\":\"XPrHkBXC9XjsewuzC\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n\\tpublic static int nonRepeats(int radix) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":3.55,\"familyId\":\"qq5iwxGL2ESqMMFHY\",\"instructions\":\"Let's define a non-repeating integer as one whose digits are all distinct. 97653 is non-repeating while 97252 is not (it has two 2's). Among the binary numbers, there are only two positive non-repeating integers: 1 and 10. Ternary (base 3) has ten: 1, 2, 10, 20, 12, 21, 102, 201, 120, 210.\\n\\nWrite a function that has as it's argument the base or radix and returns the number of non-repeating positive integers in that base.\\n\\n### Examples\\n```\\nnonRepeats(2) ➞ 2\\n\\nnonRepeats(4) ➞ 48\\n\\nnonRepeats(5) ➞ 260\\n\\nnonRepeats(6) ➞ 1630\\n```\\n\\n### Notes\\nAssume a radix of 1 is not legitimate.\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(2, Challenge.nonRepeats(2));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(95900, Challenge.nonRepeats(8));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(8877690, Challenge.nonRepeats(10));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(10, Challenge.nonRepeats(3));\\n  }\\n\\t\\n\\t// @Test\\n  // public void test5() {\\n  //   assertEquals(53319412081140, Challenge.nonRepeats(16));\\n  // }\\n}\",\"language\":\"java\",\"summary\":\"Let's define a non-repeating integer as one whose digits are all distinct. 97653 is non-repeating while 97252 is not (it has two 2's). Among the binary numbers, there are only two positive non-repeating integers: 1 and 10. Ternary (base 3) has ten: 1, 2, 10, 20, 12, 21, 102, 201, 120, 210.\\n\\nWrite a function that has as it's argument the base or radix and retur\",\"tags\":[\"algorithms\",\"math\",\"numbers\"],\"timestamp\":{\"$date\":1568071397057},\"title\":\"Non-Repeating Integers\",\"stats\":{\"completed\":{\"total\":18,\"ratings\":[4,4,4,4,4,0,5,5,5,2,5,0,5,4,2,4,1,5,3,5],\"rators\":[\"SnY7WidXJoAyyuPuA\",\"jjWcYR9ZLEDxhQnzy\",\"Es4eX2stRpyoXeC7f\",\"TrquEHytntLKHA4m2\",\"htXCitorobtqYymjN\",\"jyoLggHk8xQKZuoQC\",\"J22GaPwwi3TL2pAkw\",\"QS45qu2DFXcCqpAnB\",\"QXR2qGcvrK5Xkxdea\",\"gXTAie79kiw28tx5u\",\"hFv4BuqgsJtNyvyNF\",\"rhS8qXRjZcpDXkwnE\",\"SdEQsNapyg24YATuh\",\"buX4mCQhtXCfBjeno\",\"aA42FZ2QiEgwHrvzz\"],\"quality\":[]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":0,\"family\":[{\"_id\":\"SJLZ6thTfCsFWgvYv\",\"language\":\"cpp\"},{\"_id\":\"XPrHkBXC9XjsewuzC\",\"language\":\"java\"},{\"_id\":\"LuJss4nkngH7cDDw3\",\"language\":\"javascript\"},{\"_id\":\"tfbKAYwHq2ot2FK3i\",\"language\":\"python3\"},{\"_id\":\"KH2rjMpArzx5BMsYM\",\"language\":\"ruby\"}]}}"]