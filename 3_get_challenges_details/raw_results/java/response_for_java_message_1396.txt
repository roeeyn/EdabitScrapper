a["{\"msg\":\"result\",\"id\":\"257\",\"result\":{\"_id\":\"AYQPBDjDbrrvJtjjc\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n  public static boolean isIsogram(String str) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":1.1217391304347826,\"familyId\":\"NtecppWq4zmgKY3cH\",\"instructions\":\"An isogram is a word that has no duplicate letters. Create a function that takes a string and returns either `true` or `false` depending on whether or not it's an \\\"isogram\\\".\\n\\n### Examples\\n```\\nisIsogram(\\\"Algorism\\\") ➞ true\\n\\nisIsogram(\\\"PasSword\\\") ➞ false\\n// Not case sensitive.\\n\\nisIsogram(\\\"Consecutive\\\") ➞ false\\n```\\n\\n### Notes\\n- Ignore letter case (should not be case sensitive).\\n- All test cases contain valid one word strings.\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(true, Challenge.isIsogram(\\\"Algorism\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(false, Challenge.isIsogram(\\\"PasSword\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(true, Challenge.isIsogram(\\\"Dermatoglyphics\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(true, Challenge.isIsogram(\\\"Cat\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(true, Challenge.isIsogram(\\\"Filmography\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(false, Challenge.isIsogram(\\\"Consecutive\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(true, Challenge.isIsogram(\\\"Bankruptcies\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n    assertEquals(true, Challenge.isIsogram(\\\"Unforgivable\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test9() {\\n    assertEquals(true, Challenge.isIsogram(\\\"Unpredictably\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test10() {\\n    assertEquals(false, Challenge.isIsogram(\\\"Moose\\\"));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"An isogram is a word that has no duplicate letters. Create a function that takes a string and returns either true or false depending on whether or not it's an \\\"isogram\\\".\\n\\nExamples\\nisIsogram(\\\"Algorism\\\") ➞ true\\n\\nisIsogram(\\\"PasSword\\\") ➞ false\\n// Not case sensitive.\\n\\nisIsogram(\\\"Consecutive\\\") ➞ false\\n\\nNotes\\nIgnore letter case (should not be case sensitive).\\nAll tes\",\"tags\":[\"strings\",\"validation\",\"loops\"],\"timestamp\":{\"$date\":1567967436659},\"title\":\"Is the Word an Isogram?\",\"stats\":{\"completed\":{\"total\":299,\"ratings\":[1,1,1,1,1,1,1,0,1,0,0,0,0,1,2,0,0,1,0,2,0,2,2,2,1,1,1,4,2,1,2,0,2,1,1,1,1,2,3,1,0,2,1,2,0,2,1,2,2,1,0,1,1,1,1,1,1,1,1,0,3,1,0,1,0,2,1,2,2,1,1,3,1,2,0,0,0,0,1,0,1,0,1,1,1,1,0,1,2,2,1,1,2,1,2,0,2,1,1,1,1,2,1,1,1,0,1,1,0,1,1,0,1,2,1,1,1,3,1,1,0,0,1,2,1,1,5,0,0,3,1,0,2,2,1,3,0,1,2,1,0,2,1,1,2,2,0,1,1,2,2,2,1,2,0,1,0,1,1,1,3,1,1,1,1,0,1,0,0,1,0,1,1,0,1,1,1,1,3,1,1,0,1,1,3,1,1,2,1,1,1,2,2,2,1,1,1,1,2,1,2,2,1,1,1,2,1,1,1,2,0,1,2,1,0,1,1,1,2,1,1,3,1,1,1,0,1,1,1,1],\"rators\":[\"mrKDTFeqRM7r9ZPJv\",\"Yt3hCM2SdzhMYRqHj\",\"cp3X8hk8yNME7qoD9\",\"FocLpCB2WEiK2gGni\",\"3pdgguqZgNDSAJSGm\",\"sxci7DYKNa6q22Sjq\",\"9c8n7ti5vCjTRgiGN\",\"ZBDiEMi7dbjRL55LB\",\"HTdEyxtkq87EJN2Aw\",\"jkBTJPGPb35c3ujbo\",\"t2kdBPj9qQAXY2Ehd\",\"3gxJoNp59B4eoyyed\",\"Ha5J49rhojBRy3BaM\",\"LvPcgns5Ec7wyMbMv\",\"Yohr2MmAyaWGMbB35\",\"a49eNnfRwSMxsDJXf\",\"pr4Cm4A369tC9gSeT\",\"3KjxQu9RZ8ZSywvLz\",\"7p3Btn9oRNStAZ8G6\",\"CLmJduqJHX83dM4Pd\",\"2cbTKYSPwFJBoEtay\",\"wnoeHFui3g3FXxxrL\",\"6hDCMSAfmNjnA9jvw\",\"orjXoGoi5WqKhkkTH\",\"dGscPdzKKe2p4qYzs\",\"n6N2dYX8MghgDtjx7\",\"XbBsZ7vSHdw88tibi\",\"zh9GGSpmAnDvdARMv\",\"SPwToBogcJmdYmFyG\",\"FAEfq35fCKotwhHe6\",\"LJkpoxkDu8D4y8p7Z\",\"3XvbdaPm47SaJtzrC\",\"nWviytG3HcAYxGjg7\",\"J9zJq7PMGb6mqzcHW\",\"8JyqsSbN2FJXPr3cw\",\"s2G7xhbjaNdkGbhRX\",\"3HdKybo55cAutdxB2\",\"Md3zwe6ZCp4vqdx5j\",\"qJZsi5rhRnWA38FbA\",\"s8o9ptNnpNGktBWdX\",\"u4yanfWeeZsN3xWgc\",\"FSSM3xcaTXGcxqYGz\",\"C9yBWYcZsjmJYww3K\",\"AyrEvM2GLX2jqM772\",\"rWhXHhzF4W8bea6LP\",\"YLwJkF2wuL3n9o6a2\",\"ko7oJ85JMftgcbkrr\",\"gBGjCfJvPHswDM5JQ\",\"5Kf9z3G9QBs9fkvLs\",\"EZNT8B7yQnnZmuwCf\",\"WuAkXKpcrQy867yCw\",\"Es4eX2stRpyoXeC7f\",\"jRqY4i8gPemsZMBGf\",\"j2hKJg9sh9m3HWFgo\",\"uqNAu5PZnSDRqZKoN\",\"we4DCPstpD5urDitR\",\"NsQ8qYQQ47gSPtQkK\",\"fbYN9Jp46RqBqCd2K\",\"xEuitW7gMaqzhq6x8\",\"wYYMNPe8nSiJFbvJw\",\"ye5Krzmpgt8keXCnx\",\"XPhLf7JYc6mmBYR9A\",\"MWLAcPoEWDSLrTi9p\",\"uPfkNA3maDhAoKtnb\",\"mdEQJ2fmGmkbhbvNw\",\"2cdvd8yuPLSwvGj9w\",\"uYv96ZSpA7tBHoAGX\",\"GvsEKiN8yRkosS28k\",\"PXBjtEAAwibHxNZXq\",\"8J2Dqqz9PaFufQzwY\",\"82weQfHHmno4Mq4X7\",\"rTj67TTydxqkpwFtN\",\"bw6kHP3k8dP2qBa5v\",\"Kso7rzAKB4TTCPKgM\",\"fZjkX29nhRTWWb75k\",\"jDTGwryGygbZiqCEg\",\"YFHkjbM6obMSj24zi\",\"hB5mgzMwQSnhBzi7P\",\"GEzaJZ2cPjENT4ERQ\",\"LZSxphM8vH4A6Deqn\",\"etoSR23iELGGgs9rA\",\"jyoLggHk8xQKZuoQC\",\"TrquEHytntLKHA4m2\",\"DzLdw6wEL2Nt5mrsp\",\"8SabHk4meXzHQWaLb\",\"P7zedbjaFw8YDzLz7\",\"5seiNqw6ZXoF2GRRd\",\"dRdMircMhPdSpQu9T\",\"hFX3n5qsp7cqsbbsG\",\"Witn99Xo8Anbjpakg\",\"vRXuYYBNuHEQ29fbm\",\"8zZ6xmzpiFair25qr\",\"tqSJxy6E4vaTyECkh\",\"Yp7uvStL97cC9fKkY\",\"B4pxRqzo43M7S8FbP\",\"WZujpe8yQAyZmpWHg\",\"DzvdGwHEjqsX7wyKr\",\"htXCitorobtqYymjN\",\"meS77LKqRswhF5LAy\",\"y6kfyYmydcD8tkBk7\",\"5CqetHYvJ5Zb2uzmB\",\"Yom3RzkMYpweE8cbS\",\"SmmkwyvSHT54PzB5B\",\"3qggY3TrN3xNaMDBp\",\"DkSMZ3jZLkwviKb9g\",\"sMMZEGp5gw9KS7MJv\",\"fADAnmvM4LibcQWTr\",\"AeJSxRqw2dJZuGvdk\",\"EcKPDmD4GmeFJGDTL\",\"45FXSeKSLChn3gEhc\",\"wMvNbysArkmmqZBy4\",\"q2X5hMejrpAGGd3hW\",\"smuLDcXt5RcXQQMKZ\",\"rvojHhKH3DaxotefQ\",\"q2tzvkrLASvSjkek9\",\"zwruFCmuHkwJTpYqg\",\"Zhy5X7BZnqk8hacEw\",\"myPiB7Efg4e8kLtkx\",\"osXNzc2aCxspRwheS\",\"QXkrEiAuhuXaZmL4C\",\"DGTrEDYMp756TdEXp\",\"MxmG8Gkti7L5kXYNL\",\"g4NCSxxHqHCGMpWwT\",\"muXMnzQwGLzN6j2Jr\",\"ZMd8it647JSYTvx8Z\",\"RhPg33AdzvSZmibXa\",\"9pCPyhvQmbkWyD2LL\",\"ubpGyYPvw8Qd3iix9\",\"hx3ZWiCKNtqwMWFCt\",\"jLv4ckjWQwHRAiYKT\",\"DAQX9mhHdMTqyYbvh\",\"f6uGKbmMdBYCjrMBh\",\"YcjwCvYut6834Jzd8\",\"w8nt7MwYJg95RuuZd\",\"hPx9H3YM8j2k94DNW\",\"ZXWDtCrM9ev3439oi\",\"Fd9765rksgPK4E2Zy\",\"M5n9zd5LtuuwJr668\",\"KxLMWekCxzy2Eem7u\",\"Tf7TJFSPktJBgLA4k\",\"35FLKaQ7LJdA7pJZG\",\"fRYcPHuyEdqngMzC4\",\"3unLGuwC6Tnoy8BtK\",\"kQRtmSZfHdSzFserc\",\"gpd8yji9GXJruAtje\",\"pi76g3eRpnKrhee2a\",\"oMZovHkR6QqNvQwyc\",\"8AvGnwLnDrHXAwX38\",\"azAzSkvJd7eyXY9x9\",\"SfmXqCfDksMb883DC\",\"a777e8chPvJkY3tKa\",\"zTEKMLMevG8xfxEj6\",\"J7epB3qSQJ2E8vWkY\",\"gXTAie79kiw28tx5u\",\"6ehQMeGtrhnhot5zK\",\"9amCEoE43AdSneJZ7\",\"ttmhui2Euek65eYhe\",\"WHSB76uqJrCf2XKsw\",\"JszPst3958te56jFk\",\"F7bTaaT22JsbPTNHK\",\"NdLzb3BZ5J8ftnCkS\",\"oMfq73A434YWhSuWQ\",\"P5BhjZxyeHQYTNyB9\",\"PmfzvaX5ZJscpvHXc\",\"8Xx8nWXRydHDBGfQf\",\"jXTnL3JatkKjoifyb\",\"PkAdXnvefx66ye3W7\",\"Ym8AjbKGSJooun3nt\",\"hDeaTsprkH6CmvSAR\",\"tyLS9T6YMfg9fMtYJ\",\"NQ4btGLfcvAnXjAyP\",\"cJmmvnmJSXvBXtydi\",\"zTM2NbjE6q5Q2HSeF\",\"8wkQj36S6ZCH5u8d3\",\"xv5obFhsxY93mqR5S\",\"bWWFscsAr66ZWHo28\",\"hhxjQREtmHSheH9Pj\",\"aHqxyQCEtWZgczYEv\",\"RZhnfbL35u4CtQuqp\",\"mQKWauR6b252TmdX4\",\"rcvmayp8iSXxxEyMj\",\"ZkvBs5oddaBfKj28G\",\"ikxSkiQjCjYPsFwMT\",\"CNc6rmwhbxkxEhHAp\",\"47PyFbZyxWuP9Bgga\",\"W56bWmpQeLJ9JEDsa\",\"YL4rQWKadY7sGGtGG\",\"uNK8tLSseShR8wcA4\",\"LrgQT4bdiLbHrprXu\",\"44arJN5SYx3HyfetA\",\"FrorBN8wRAoptuxtR\",\"m8RTLuXqmythXHYZt\",\"ZjEdErENicjeqKZ8g\",\"5jDgvkGd4JwatrYXg\",\"JhjDnd5WKgXy3hsi8\",\"oS2hDNjCMAkogigEK\",\"Yj7ftjzyP67R5NFrH\",\"KZDZZTSx8CDJ38QqB\",\"LCuvvWMwiGuqTwNRi\",\"XcLNNDa5gDSyrgKtv\",\"btabi3PdyisuY5tn9\",\"2cMqsHnrvuTYNMBeE\",\"uFfEio8nzDvL8emhp\",\"JFodQijHHdRkkrZvT\",\"8BFSTCnoe2QggN64c\",\"NPgpEtw6Ly8LToLco\",\"rAvf4buALZgGJPJgR\",\"PJu3WcTpfRrvHfQiS\",\"SE5G2Caf3btnuGmz6\",\"nXw9eTHFraWQtwJtY\",\"Wi4H6ayKsNDWWQCG5\",\"pDBjKHH2azj2js4SB\",\"TMhwgGLkkiTEaBZ9Z\",\"cfzcnq5jeC8HhCALL\",\"fCTfZSgeDbRbTvDY4\",\"3SgSNoAB3sxaYeT3w\",\"E2hpke7mHxAWsw5t9\",\"f3RAbWvE6uESq7KE5\",\"kuxkd9Rj2ejfusa7G\",\"GkYtSbQuheBF4Enys\",\"QRv96jmNaYsWkxQEG\",\"RGN3QTb5LXj4ZPPkj\",\"8BZohsk2K4udaSz69\",\"9vyjn4WyWtJ6o2wop\",\"eQXwk5zGckM8tCWYH\",\"NXtM3si2K3i4DySMn\",\"zZfMwLuoERGmybgib\",\"buX4mCQhtXCfBjeno\",\"xEX3TDY6C2h82dJTn\",\"gbAGaynei4oA7DtWs\",\"a6fgDQTddtZCKfnzR\",\"8qNSPHZBpmjSTt3tH\",\"4ySzqKC5s3ZRpG9di\",\"YGPjXEDwGkx95hHxA\",\"d7PjwEf5Ff8W5eD64\",\"t55QWHi8o4teZxqqE\",\"tdinF6MRzC6AdNX8g\",\"SgPjF69J25jT3dn4X\",\"GaJNJwcdyB9ueYFst\",\"HsFc9PgmpP2X9Fwh9\",\"HXbTKW3jmmyRAsKrr\",\"SxixyvDx2z4RpeEp9\",\"u5YCuEACALMZbF5gT\",\"rhS8qXRjZcpDXkwnE\",\"cCisAS7tXc9QYbDpA\",\"pYonfGP4u9HNL9Z32\",\"XaK5PzFcConAq9WXJ\",\"uw47663LqPME8btaA\",\"Qv2jEtTnFCXX7cdd3\",\"TA9dwvnSdta7rTynz\",\"srJ34BaybkQh3qRkM\",\"Dxk4GozARkHu66BNh\",\"eW9R2SCoYnY8HBAdL\",\"D3ASM3aWpcQ8gvnin\",\"cR3ibTMxLyEdDFCHY\",\"jCjCvyhqhpebkJn34\",\"TCTZucJN3tJh5t7MB\",\"AaAzAySpyo99siXzm\",\"afvP29FhRou2bTaav\",\"KMR6vNzvSKMA2cXnK\",\"WX5hR93N7nA2kMsJN\",\"RsujLHaML6L3KinzK\",\"FNYPC36yqPmTKDaqR\",\"5HGyJtoZ3AffzAZAv\",\"unqzSsxpxj9sZ7rbD\",\"GD9Jqmu93vB4LTT8F\",\"FxPDKKibxnZjGJLs6\",\"nSLvkGEpiYCtcBLaa\",\"ckQwFFWyLXmDQAaCn\",\"7smDHfW5LwRGrpfQ3\",\"H3XLNCWB5yXt5YYXn\",\"8Rau64SCERgjtFbFM\",\"KPz93xbvJ9x7okGs6\",\"nFbmNzMQ38TncmfQX\"],\"quality\":[5,4,5,5,4,5,2,5,4,5,5,5,5,5,5,4,5,3,5,5,5,4,5,5,5,5,4,5,5,5,5,5,4,5,2,5,2,5,4,5,5,5,5,5,5,5,3,4,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":1},\"isHidden\":false,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":4.551020408163265,\"family\":[{\"_id\":\"SEzYX5qtTR4WcZeR3\",\"language\":\"cpp\"},{\"_id\":\"aQWAAz6SiApZBA8A8\",\"language\":\"csharp\"},{\"_id\":\"AYQPBDjDbrrvJtjjc\",\"language\":\"java\"},{\"_id\":\"rJPgai5r5XdXeQmLg\",\"language\":\"javascript\"},{\"_id\":\"SNXohwYDdF8pN7gHj\",\"language\":\"php\"},{\"_id\":\"vTGXrd5ntYRk3t6Ma\",\"language\":\"python3\"},{\"_id\":\"4jMPW4HsGJ5uaYSNY\",\"language\":\"ruby\"},{\"_id\":\"a3oF6wCgu9FbDtCuE\",\"language\":\"swift\"}]}}"]