a["{\"msg\":\"result\",\"id\":\"491\",\"result\":{\"_id\":\"5mANMR3X6gEfWephD\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class ArrayMultiplier {\\n\\tpublic static Object[][] multiply(Object[] items) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.7797619047619047,\"familyId\":\"MsSq4Du8NDqXdTijK\",\"instructions\":\"Create a function that takes an array as an argument and returns a new nested array for each element in the original array. The nested array must be filled with the corresponding element (string or number) in the original array and each nested array has the same amount of elements as the original array.\\n\\n### Examples\\n```\\nmultiply([12, 13, \\\"TT\\\"]) ➞ [[12, 12, 12], [13, 13, 13], [\\\"TT\\\", \\\"TT\\\", \\\"TT\\\"]]\\n\\nmultiply([12, 17, \\\"DX\\\"]) ➞ [[12, 12, 12], [17, 17, 17], [\\\"DX\\\", \\\"DX\\\", \\\"DX\\\"]]\\n\\nmultiply([4, 5]) ➞ [[4, 4], [5, 5]]\\n\\nmultiply([\\\"T\\\", \\\"E\\\", \\\"S\\\", \\\"H\\\", \\\"A\\\"]) ➞ [[\\\"T\\\", \\\"T\\\", \\\"T\\\", \\\"T\\\", \\\"T\\\"], [\\\"E\\\", \\\"E\\\", \\\"E\\\", \\\"E\\\", \\\"E\\\"], [\\\"S\\\", \\\"S\\\", \\\"S\\\", \\\"S\\\", \\\"S\\\"], [\\\"H\\\", \\\"H\\\", \\\"H\\\", \\\"H\\\", \\\"H\\\"], [\\\"A\\\", \\\"A\\\", \\\"A\\\", \\\"A\\\", \\\"A\\\"]]\\n```\\n\\n### Notes\\nThe given array contains numbers or strings.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"/** \\n==================================== \\nTestGen 3.1 for JUnit 4.13.0 \\t\\t\\nTest Case: ArrayMultiplier::multiply\\nTimestamp: 10/27/2020 7:02:13 PM \\n------------------------------------ \\n® DARKKO 2020 © \\n==================================== \\n\\n**/ \\n\\nimport static org.junit.Assert.assertArrayEquals; \\nimport org.junit.Test; \\n\\npublic class ArrayMultiplierTest { \\n\\t\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertArrayEquals(new Object[][] {{12, 12, 12}, {13, 13, 13}, {\\\"TT\\\", \\\"TT\\\", \\\"TT\\\"}}, ArrayMultiplier.multiply(new Object[] {12, 13,\\\"TT\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertArrayEquals(new Object[][] {{12, 12, 12}, {17, 17, 17}, {\\\"DX\\\", \\\"DX\\\", \\\"DX\\\"}}, ArrayMultiplier.multiply(new Object[] {12, 17,\\\"DX\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertArrayEquals(new Object[][] {{\\\"d\\\", \\\"d\\\", \\\"d\\\"}, {\\\"x\\\", \\\"x\\\", \\\"x\\\"}, {\\\"t\\\", \\\"t\\\", \\\"t\\\"}}, ArrayMultiplier.multiply(new Object[] {\\\"d\\\", \\\"x\\\", \\\"t\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertArrayEquals(new Object[][] {{\\\"T\\\", \\\"T\\\", \\\"T\\\", \\\"T\\\", \\\"T\\\"}, {\\\"E\\\", \\\"E\\\", \\\"E\\\", \\\"E\\\", \\\"E\\\"}, {\\\"S\\\", \\\"S\\\", \\\"S\\\", \\\"S\\\", \\\"S\\\"}, {\\\"H\\\", \\\"H\\\", \\\"H\\\", \\\"H\\\", \\\"H\\\"}, {\\\"A\\\", \\\"A\\\", \\\"A\\\", \\\"A\\\", \\\"A\\\"}}, ArrayMultiplier.multiply(new Object[] {\\\"T\\\", \\\"E\\\", \\\"S\\\", \\\"H\\\", \\\"A\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertArrayEquals(new Object[][] {{\\\"A\\\", \\\"A\\\", \\\"A\\\", \\\"A\\\", \\\"A\\\"}, {\\\"B\\\", \\\"B\\\", \\\"B\\\", \\\"B\\\", \\\"B\\\"}, {\\\"C\\\", \\\"C\\\", \\\"C\\\", \\\"C\\\", \\\"C\\\"}, {\\\"D\\\", \\\"D\\\", \\\"D\\\", \\\"D\\\", \\\"D\\\"}, {\\\"E\\\", \\\"E\\\", \\\"E\\\", \\\"E\\\", \\\"E\\\"}}, ArrayMultiplier.multiply(new Object[] {\\\"A\\\", \\\"B\\\", \\\"C\\\", \\\"D\\\", \\\"E\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertArrayEquals(new Object[][] {{1}}, ArrayMultiplier.multiply(new Object[] {1}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertArrayEquals(new Object[][] {{1, 1}, {0, 0}}, ArrayMultiplier.multiply(new Object[] {1, 0}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertArrayEquals(new Object[][] {{\\\"*\\\", \\\"*\\\", \\\"*\\\"}, {\\\"%\\\", \\\"%\\\", \\\"%\\\"}, {\\\"$\\\", \\\"$\\\", \\\"$\\\"}}, ArrayMultiplier.multiply(new Object[] {\\\"*\\\", \\\"%\\\", \\\"$\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test09() { \\n\\t\\tassertArrayEquals(new Object[][] {{4, 4}, {5, 5}}, ArrayMultiplier.multiply(new Object[] {4, 5}));\\n\\t}\\n\\n}\\n// end of tests\",\"language\":\"java\",\"quality\":4.646551724137931,\"summary\":\"Create a function that takes an array as an argument and returns a new nested array for each element in the original array. The nested array must be filled with the corresponding element (string or number) in the original array and each nested array has the same amount of elements as the original array.\\n\\nExamples\\nmultiply([12, 13, \\\"TT\\\"]) ➞ [[12, 12, 12], [13,\",\"tags\":[\"arrays\",\"language_fundamentals\"],\"timestamp\":{\"$date\":1603796814329},\"title\":\"Array Multiplier\",\"stats\":{\"completed\":{\"total\":300,\"ratings\":[2,2,2,2,2,1,3,2,2,1,2,3,1,2,2,1,1,3,3,2,2,2,0,3,0,2,2,3,2,2,1,2,2,3,1,3,2,2,2,1,1,1,2,2,3,1,1,3,3,0,3,2,2,1,3,3,2,4,2,3,1,2,3,2,1,1,2,1,1,2,2,2,2,1,2,2,1,2,1,2,0,3,3,3,1,2,2,3,1,2,0,1,2,2,3,2,1,3,1,2,2,3,3,1,1,2,3,2,3,2,3,2,2,0,3,0,2,0,1,2,1,1,3,1,1,2,2,2,4,3,2,0,2,2,1,1,0,0,2,3,2,1,1,2,1,3,1,2,2,1,0,1,0,2,2,1,1,2,1,2,2,2,2,2,0,1,2,2],\"quality\":[5,5,4,5,5,3,5,4,5,5,5,3,5,4,5,5,5,4,5,4,4,5,4,5,5,5,4,5,5,4,3,5,5,4,5,5,5,4,5,5,5,5,5,5,5,5,4,5,4,5,5,5,5,5,5,5,4,5,5,5,4,5,3,5,5,4,4,5,5,5,4,5,5,5,5,5,5,5,5,1,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,4,5,5,4,4,5,4,5,3,4,4,5,4,5,5,4,5,5,5,5,5],\"rators\":[\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"yXGiiSAR5nBHnH3yr\",\"azAzSkvJd7eyXY9x9\",\"82weQfHHmno4Mq4X7\",\"gXTAie79kiw28tx5u\",\"e5c4uxBeto5PZN5Mg\",\"9fKpptgjg6ewGTstJ\",\"CSFyTcx8T5gM2iD5j\",\"Je49nhArBfADssxaR\",\"3uBTPjN6mDavuBYmt\",\"GiqPq82is4HGWdZHA\",\"qrMJvG3Jfs2BCQ7af\",\"PmfzvaX5ZJscpvHXc\",\"QfjvAWZnumxpSYpzQ\",\"cBMRy5CkLjpqHcDpn\",\"S2yQ6goAZCCjRapeA\",\"wrWSBhn6PoFcuYrzD\",\"fRyvgNyFsLGNKuECJ\",\"zTM2NbjE6q5Q2HSeF\",\"dcW9oK2uRo8h8mBe2\",\"p8qqFdJ3FSk5x9z3G\",\"7W8yYT7ktkAoNo3u8\",\"yuAHgMXRcbo2qBwEY\",\"rvojHhKH3DaxotefQ\",\"ud9y4zMKAYeZ9wyfa\",\"2xFvy6u3hE4LtCXMD\",\"FeCN9HXLdYFEzTC73\",\"CgzTCoqqyWMWxvoTE\",\"Ct26JeAWJuZZ7bt7u\",\"oMfq73A434YWhSuWQ\",\"wqctmuLWeXtFnB6Ks\",\"a5Y8ZA5qq2eupPK65\",\"mGaEDPw5FsDb3vdnq\",\"GSeuCQh8ueYPqZZsP\",\"sJuq37PFQozqB4C7k\",\"kabqCExooax4JEQHE\",\"pxJyeKQWL97wDJCkD\",\"sW4SaDcqGDfhTWtsd\",\"YL9pqyCu8xsds8J49\",\"bTCq6CQ3SGjrRfZeQ\",\"NQ4btGLfcvAnXjAyP\",\"JeHSt479ZYhBGcLhc\",\"Wf7nCHS4Gq5tx659h\",\"R9k3kpgzXHLgaQddY\",\"2Kzz5CubctKWfpPBp\",\"Qd5KQgNpzwhzBBFZk\",\"rGpPd6PvpzLaqps4g\",\"YcjwCvYut6834Jzd8\",\"9o7Sp5AvxK75cQ3jD\",\"iRPmeZh825mMac4rD\",\"8wkQj36S6ZCH5u8d3\",\"uBXohGxfESsk2qANp\",\"hseQSt2EJ5uvb2pQv\",\"Nu8yT4MHSneG8uWin\",\"uzbuvrbv7EXw8hkhC\",\"pSK5gtEje6Mod9kfQ\",\"87Q3XMWaxYqQfFJzm\",\"DrkR35NqnP9NDLbq6\",\"32dZpmzSHgC2ZY3pq\",\"qMds9ppJy2Tn9wxEp\",\"hcm8sL8mNJTSfTdgE\",\"ubxu9sQua2iYTdYhS\",\"vTkAh25siRQwqwBjc\",\"mTF6oWX2WhFR4M3QK\",\"dZ8Cec4BsW3PJKP9J\",\"mQKWauR6b252TmdX4\",\"SDSvWibEfFvh3mFaQ\",\"j489kCfYJhKWvPY2W\",\"FCkjDL4WAu3d6rAkC\",\"CkzRQbtwhkuXNLYRB\",\"EwXYEZ8cEtEThuTXC\",\"oth47e7A8TopBYdjr\",\"obp7gd5w8sCAPGjnr\",\"P5BhjZxyeHQYTNyB9\",\"jyhxmy36GoGkZB7vQ\",\"fhFZp6Frsw8higEJ6\",\"PzaWcT7vazN7eQ86Q\",\"C5x6MtLFJvaFA79MP\",\"rWhXHhzF4W8bea6LP\",\"EKQoY9xP6kHpLSye5\",\"kNM9TYEJhjApd2cHi\",\"x59EDsD46uXE62QHL\",\"8Xx8nWXRydHDBGfQf\",\"QuBz2FQ7o7STQQGYP\",\"jyoLggHk8xQKZuoQC\",\"yYqrttCm9atBo9BwM\",\"jXTnL3JatkKjoifyb\",\"ugPF9GbKWthHhW8AQ\",\"8paynGt66tAKJivFF\",\"rjW8KKnKFkRa6BPxz\",\"uYv96ZSpA7tBHoAGX\",\"FJNq5bNya43wzxkjd\",\"fRhyffuFFdj8dmJwX\",\"j5QzY7Rc4fqdTdxuv\",\"yd5PakB2z33q2JrTZ\",\"ymggGjk5woALZEbCC\",\"rLXCFPv7sbfogDSss\",\"4NHyP9TLFudCGghZQ\",\"YbNyqWfZvWZcPRuBX\",\"bkTWNf4MMEvWghHWH\",\"r3LXC9Z9sHHshTKtq\",\"tyLS9T6YMfg9fMtYJ\",\"p2woPCQKXuWJCwffJ\",\"fJAnQriWjfZA5EFCK\",\"bGcjjiNzY3ncqE5Ep\",\"EFqhE7GRf6PSKMSg6\",\"wbSLghDxkTjiYJrEH\",\"zE46SymvixkeFJmPM\",\"jybNggaCTZnT6TdFA\",\"ymqdHfJYMuxfsYo6R\",\"btabi3PdyisuY5tn9\",\"zyHHSisus2MpibGkG\",\"hD6sfDtntpqT8NR2o\",\"QSfn5gYYx6dHfCNxC\",\"JeSHEyHLRmScypBNw\",\"SExX3m5YftBWmsk2e\",\"Eaec6ZTLtcpW3Jobx\",\"4AQjnBK3ymoBDWT9F\",\"KZDZZTSx8CDJ38QqB\",\"henkXNsBPpiwZxqmu\",\"qTiZw7JHjDPXKMWcz\",\"SbdoSWYiyQfXJN4E9\",\"TnqBzp9J5WxuJ5XCi\",\"cRXX4tFmtXEfjdHk5\",\"8yyfRwCsP5ovSFT5p\",\"L23hXCKLuxXL6b9Et\",\"MCw7uAcoWcSTBTmr3\",\"9YGY6sGf5Mf9Pjvxf\",\"85aGpXyBnxud4apWT\",\"wKTJjrQmnjfBzZ8h9\",\"pzz8vFouna6JTTAiW\",\"T2vhHPhRR96hRizq8\",\"imoNrk36ozReP939p\",\"WDxnzcqQsyMSiAZXm\",\"vgqBX9xSytA2GuwhB\",\"w883snt8ALo793vDg\",\"u2bGhupf55dTSrTxp\",\"mMBuEpu4HJapyPECj\",\"xvQBgapEztkQFQKiJ\",\"gyTLe2ovDmGwSQuRf\",\"9mktneZJT3Ndya3hu\",\"YLqdr7bYjwew2KM4N\",\"jD3r3hMzLA9Ai45go\",\"Wcfj5749oy3SsBaQX\",\"Lq5euvCnyYGqoh8Mt\",\"AGsCwY5xbpYaCbvMH\",\"RhWecL96F9KJgrFwn\",\"geG5rf2eAukJudzow\",\"7bjY9vvESKqZRh8uf\",\"zWdW7xDEE9MDGNueG\",\"r9hHZYPQAqJ9DbwLX\",\"Bwn7fKNQ7doek3JWZ\",\"qb2DTmzQj4vNfq5K7\",\"JazMRqJS77pfKFH2t\",\"XqLRkScChkakbwd5z\",\"xZbb2aXroPDHqLN9D\",\"cvr6YL5nEJcMon484\",\"xMTGvXPJzyS8riT7Q\",\"dA8GpKad7GnQxoBgP\",\"9RjPxa9gtAe8Rspre\",\"YqwTDpXzZxtpStdQY\",\"4jyjy2MjCFYEc8E5D\",\"kbguXka4r4FcW2ttn\",\"kLMj98oTwmoibCY4v\",\"NP3JxveoZpoNf7NgK\",\"nEch95F4xGHfn7his\",\"ojmmLWL7Hvi6yYWeJ\",\"tDmiqQjmMAA77cj6G\",\"X42wZkk5sWHwRQaP5\",\"Baiqkev4b5geQdd5m\",\"KavJ3QCA4Wn8nB6sp\",\"LahkHxnePpRMWC56c\",\"p5QkcqbZ5sHXoQMt8\",\"ZtTRS7aCHhgcJtcvN\",\"FD3ftyBGYFs29Jsa5\",\"LGm76GJAvFL7ZiJSM\",\"9vyjn4WyWtJ6o2wop\",\"CyG2tbGu43tvXFp8P\",\"tSmf8qRPYfgJSAtrF\",\"4FYe2Q6Gh47nj2XPP\",\"zHSbLcbw8Z8WcFaba\",\"EcWa9Rh4MrsXi9LH2\",\"hzxrGwEsuGbpKDRYQ\",\"KSh8pW6vyo9dAddEz\",\"eExcg2NZs4EvioZ4p\",\"DNfqzcWoQsucbgeuc\",\"9pCPyhvQmbkWyD2LL\",\"Wwp9cMMggFBjHBZ7c\",\"j6m2FpEdsktpnEpYm\",\"3iM7dNRZKEQoEZA9K\",\"JeXXwDgxu4SsinAwf\",\"nKkhibWxbfcGtHaku\",\"D2uAPkBzH3mBpi3Tz\",\"krM8NvGFQNwfY9xEu\",\"QqRqJfzs9czad5Brx\",\"xAGrWcrXeeTNTEhLo\",\"eQXwk5zGckM8tCWYH\",\"fCTfZSgeDbRbTvDY4\",\"BGaT7Xu47hNjad9RW\",\"oMZovHkR6QqNvQwyc\",\"YmFJekuzPdbfHjNnj\",\"nnC9vXJRzKpnYgyyX\",\"ECA7kRTCkCTSQh48T\",\"2Q9WFfMZsWCFyoSsB\",\"FWjjXPuje5x3gZpSd\",\"mga8QWYnD62NSoozG\",\"FdsNxkWQ7kzfHdfyH\",\"8npaptC6sJGCb3f2k\",\"W4TtzLajjmS8QPK3c\",\"xYzzdvrDFG4xoJupg\",\"iBpjgY2BfBFMy7gWM\",\"Q8ef94JCRdFXXx6hH\",\"5shSNAtQ3fYDPKStF\",\"5Lqu3LCzJj9JKyJDb\",\"BCWcZpjWgCBXYBFuC\",\"yEDrzzFjReDWNt8By\",\"GByiumxWy7aWN63Bd\",\"YgJ73jeabEB8boSrr\",\"osXNzc2aCxspRwheS\",\"kJJMHqPM8mPGkjPKY\",\"Z5hmmWESTZjRZDne4\",\"EKPwzXXqxGix9rbkj\",\"hr9oSTBnxTDayq5Aa\",\"XtjApL8WopBPmwgNs\",\"NDFranBPXpjtB9pwa\",\"ewvz4G4ws88GB4Sir\",\"XcL8zqSMRAxi6vioX\",\"dik7wis3hBJJBkYwK\",\"hoHbBKgyoK4NgKajB\",\"oChsWBagrJCZFGBET\",\"LNCb5rksJLJ43L4Nw\",\"YPwfSh62Sz8eJMQm9\",\"ghHdMGhbCZxJhAYqW\",\"D6J3wu8fB5ksyoya6\",\"SWhse66Xi9RP3G8Rc\",\"wdhDRv4cvmPT5rfKn\",\"htRT4t3y65scKG9dn\",\"gBNyD9imKSugp2vGv\",\"b5doRyKagDgvie2Hd\",\"DWg3CtZdqQ3aASH6m\",\"pon2cYh2Hbbfj6559\",\"gYWkbC9XQRNAmAjoE\",\"ofRRZr4eFwst5w7uv\",\"C6iZZScoh8yLggyMa\",\"ai9BjZvYRcaKhCsRj\",\"jyeZPhmfLtysXHswN\",\"NXtM3si2K3i4DySMn\",\"qqMbsvMdByX2aDBXQ\",\"5qJbP2q8b5kbFGNgq\",\"qkzFDd47Exc34jWzm\",\"L5qPuy3KbgCScD5gw\",\"rNCNXw6Xynp2KGzp5\",\"sZDEL2ywd2smx2MBF\",\"HDA4Dor7DhHsH2KMJ\",\"nnKjQaFwcmpQyyJsZ\",\"gvD4PNCSEaQbbkjsv\",\"9JXXpJLvmWfLEM6ii\",\"P2argF68KWdHNaoDR\",\"XdzcqGdrfNs8ZSRo5\",\"hs6JNBfYGBqYM2u6H\",\"8CBqtfGGJKmCDMJXk\",\"EaNqWWZqaQ7FWsTBA\",\"NPNQNLQgfMTGFrrkw\",\"4RZSbFuYkXdE7eyQ4\",\"HcJX8gMFG7ghB3tGP\",\"QoaqyY7Jrscd4stfS\",\"a49eNnfRwSMxsDJXf\",\"mG8HqKiAQFTdRZthG\",\"wFRLGjA56kj7xyhmv\",\"htXCitorobtqYymjN\",\"sxci7DYKNa6q22Sjq\",\"KMR6vNzvSKMA2cXnK\",\"unqzSsxpxj9sZ7rbD\",\"ERH5ZF54qkAqeiD3K\",\"xEX3TDY6C2h82dJTn\",\"FxPDKKibxnZjGJLs6\",\"uw47663LqPME8btaA\",\"nFbmNzMQ38TncmfQX\"]},\"flags\":0},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"qQpSTm7uJv9kDMhpx\",\"language\":\"cpp\"},{\"_id\":\"5mANMR3X6gEfWephD\",\"language\":\"java\"},{\"_id\":\"7ZhszvZBs7wkEBncb\",\"language\":\"javascript\"},{\"_id\":\"8oNKM4osgxYyrFtGL\",\"language\":\"python3\"},{\"_id\":\"AoaWcqhehjsn5yEgN\",\"language\":\"ruby\"}]}}"]