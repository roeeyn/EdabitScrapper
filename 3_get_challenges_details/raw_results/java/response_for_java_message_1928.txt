a["{\"msg\":\"result\",\"id\":\"519\",\"result\":{\"_id\":\"LJDcfKERoPe8ERXG5\",\"author\":\"Mateusz Mędrowski\",\"authorId\":\"hPx9H3YM8j2k94DNW\",\"code\":\"public class Challenge {\\n  public static double perimeter(int[][] point) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":2.076923076923077,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"Du9r9Sne4KGczWRDR\",\"instructions\":\"Write a function that takes the coordinates of three points and returns the perimeter of the triangle. The given points are the vertices of a triangle on a two-dimensional plane.\\n\\n### Examples\\n```\\nperimeter(arr[0]={15, 7}, arr[1]={5, 22}, arr[2]={11, 1}) ➞ 47.08\\n\\nperimeter(arr[0]={0, 0}, arr[1]={0, 1}, arr[2]={1, 0}) ➞ 3.41\\n\\nperimeter(arr[0]={-10, -10}, arr[1]={10, 10}, arr[2]={-10, 10}) ➞ 68.28\\n```\\n\\n### Notes\\n- The given points always create a triangle.\\n- The numbers in the argument array can be positive or negative.\\n- There is 0.1 tolerance, so you don't need to round your result.\\n- This challenge is easier than it looks.\\n\\nCheck [my profile](https://edabit.com/user/hPx9H3YM8j2k94DNW) for other challenges in this series.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n\\t\\tint[][] arr = new int[3][2];\\n\\t\\tarr[0][0] = 0;\\n\\t\\tarr[0][1] = 0;\\n\\t\\tarr[1][0] = 1;\\n\\t\\tarr[1][1] = 0;\\n\\t\\tarr[2][0] = 0;\\n\\t\\tarr[2][1] = 1;\\n    assertEquals(3.42, Challenge.perimeter(arr),0.1);\\n  }\\n\\n\\t@Test\\n  public void test2() {\\t\\t\\n\\t\\tint[][] arr = new int[3][2];\\n\\t\\tarr[0][0] = 15;\\n\\t\\tarr[0][1] = 7;\\n\\t\\tarr[1][0] = 5;\\n\\t\\tarr[1][1] = 22;\\n\\t\\tarr[2][0] = 11;\\n\\t\\tarr[2][1] = 1;\\n    assertEquals(47.08, Challenge.perimeter(arr),0.1);\\n  }\\n\\n\\t@Test\\n  public void test3() {\\n    int[][] arr = new int[3][2];\\n\\t\\tarr[0][0] = 7;\\n\\t\\tarr[0][1] = 6;\\n\\t\\tarr[1][0] = 0;\\n\\t\\tarr[1][1] = 11;\\n\\t\\tarr[2][0] = 0;\\n\\t\\tarr[2][1] = -3;\\n    assertEquals(34.00, Challenge.perimeter(arr),0.1);\\n  }\\n\\n\\t@Test\\n  public void test4() {\\n\\t\\tint[][] arr = new int[3][2];\\n\\t\\tarr[0][0] = -10;\\n\\t\\tarr[0][1] = -10;\\n\\t\\tarr[1][0] = 10;\\n\\t\\tarr[1][1] = 10;\\n\\t\\tarr[2][0] = -10;\\n\\t\\tarr[2][1] = 10;\\n    assertEquals(68.28, Challenge.perimeter(arr),0.1);\\n  }\\n\\n\\t@Test\\n  public void test5() {\\n\\t\\tint[][] arr = new int[3][2];\\n\\t\\tarr[0][0] = 3;\\n\\t\\tarr[0][1] = 4;\\n\\t\\tarr[1][0] = 4;\\n\\t\\tarr[1][1] = 3;\\n\\t\\tarr[2][0] = 4;\\n\\t\\tarr[2][1] = 5;\\n    assertEquals(4.82, Challenge.perimeter(arr),0.1);\\n  }\\n\\n\\t@Test\\n  public void test6() {\\n\\t\\tint[][] arr = new int[3][2];\\n\\t\\tarr[0][0] = -10;\\n\\t\\tarr[0][1] = -20;\\n\\t\\tarr[1][0] = -30;\\n\\t\\tarr[1][1] = -40;\\n\\t\\tarr[2][0] = -50;\\n\\t\\tarr[2][1] = -60;\\n    assertEquals(113.13, Challenge.perimeter(arr),0.1);\\n  }\\n\\n\\t@Test\\n  public void test7() {\\n\\t\\tint[][] arr = new int[3][2];\\n\\t\\tarr[0][0] = 382;\\n\\t\\tarr[0][1] = 894;\\n\\t\\tarr[1][0] = 389;\\n\\t\\tarr[1][1] = 312;\\n\\t\\tarr[2][0] = 500;\\n\\t\\tarr[2][1] = 993;\\n    assertEquals(1426.05, Challenge.perimeter(arr),0.1);\\n  }\\n}\",\"language\":\"java\",\"stats\":{\"completed\":{\"ratings\":[3,3,3,3,3,3,0,1,2,3,1,2,2,1,1,0,3,2,3,2,2,1,1,2,3,1,2,1,3,3,3,3,2,2,3,2,3,1,2,1,4,1,2,3,2,3,3,2,0,3,2,1],\"rators\":[\"hPx9H3YM8j2k94DNW\",\"i3TRCkidxKop3WtE2\",\"4RsakkyRXyYGwFxEa\",\"aH9yER5QQ4bFBN8SR\",\"azAzSkvJd7eyXY9x9\",\"MBEwq8srjd2oA5W58\",\"ohsJnyfLcGDCWzEWM\",\"vRXuYYBNuHEQ29fbm\",\"Es4eX2stRpyoXeC7f\",\"gXTAie79kiw28tx5u\",\"QTi6fT3Y6z26McDv8\",\"hhxjQREtmHSheH9Pj\",\"btabi3PdyisuY5tn9\",\"eExcg2NZs4EvioZ4p\",\"p8qqFdJ3FSk5x9z3G\",\"qb2DTmzQj4vNfq5K7\",\"yXGiiSAR5nBHnH3yr\",\"krM8NvGFQNwfY9xEu\",\"gJbvbqosimaP4ZAYb\",\"DazcJZt3TwLtTWbKv\",\"Po3v3dHCk6wYGKMwi\",\"Aq7wRXeG9EChyLz2z\",\"trSd9XdspKTLX7wQa\",\"QD7mPMD8gmTP56nPv\",\"iAkFghEnCswmTmgwN\",\"9M384SbCW7eciE5zc\",\"iP7Hy5ggeXTsbSi4M\",\"osounBSYa7tg7PoEd\",\"tdinF6MRzC6AdNX8g\",\"72m5uJZhkRRJ4KL8p\",\"4mFePqunWNw3WwsNr\",\"xEX3TDY6C2h82dJTn\",\"6WYzd83SszbJTTZwD\",\"3gsWiPmwy8qEtXfZw\",\"nAuhwzeaxm62fF6Mi\",\"qx6yvahdH8aw4Jnm7\",\"t94tWQHw7FmJKffaJ\",\"kYytYCFjDXuQa4vu4\",\"HsFc9PgmpP2X9Fwh9\",\"rhS8qXRjZcpDXkwnE\",\"qaPjAANdnxFnWfj5d\",\"gXmjKF8FNhsQN2wGa\",\"mfm3gB39arY8Rjb2y\",\"NPYZ3P4dhayiqn778\",\"SNLHryxfRzMtHdKXW\",\"uw47663LqPME8btaA\",\"a49eNnfRwSMxsDJXf\",\"Bb9zKaogmFdD9vaLY\",\"dcW9oK2uRo8h8mBe2\",\"Su3vDnttRBpxeyDen\",\"buX4mCQhtXCfBjeno\",\"RsujLHaML6L3KinzK\",\"sxci7DYKNa6q22Sjq\",\"KMR6vNzvSKMA2cXnK\",\"htXCitorobtqYymjN\",\"FxPDKKibxnZjGJLs6\"],\"total\":68,\"quality\":[5,4,5,5,5,5,5,5,5]},\"flags\":0},\"summary\":\"Write a function that takes the coordinates of three points and returns the perimeter of the triangle. The given points are the vertices of a triangle on a two-dimensional plane.\\n\\nExamples\\nperimeter(arr[0]={15, 7}, arr[1]={5, 22}, arr[2]={11, 1}) ➞ 47.08\\n\\nperimeter(arr[0]={0, 0}, arr[1]={0, 1}, arr[2]={1, 0}) ➞ 3.41\\n\\nperimeter(arr[0]={-10, -10}, arr[1]={10, 10\",\"tags\":[\"algebra\",\"arrays\",\"geometry\",\"math\"],\"timestamp\":{\"$date\":1598755096081},\"title\":\"Geometry 3: Perimeter of a Triangle\",\"quality\":4.888888888888889,\"family\":[{\"_id\":\"eonGpwpbe8RhCo4Z3\",\"language\":\"cpp\"},{\"_id\":\"LJDcfKERoPe8ERXG5\",\"language\":\"java\"},{\"_id\":\"gFMNDo3TGGnA4ZuMB\",\"language\":\"javascript\"},{\"_id\":\"fNQEi9Y2adsERgn98\",\"language\":\"python3\"},{\"_id\":\"TYzTwxZYkDDpcze6q\",\"language\":\"ruby\"}]}}"]