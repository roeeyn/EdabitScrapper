a["{\"msg\":\"result\",\"id\":\"673\",\"result\":{\"_id\":\"acQwyrd5NcZvgGQhW\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class DoubleNumberExpansion {\\n  public static String expandedForm(double n) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":2.608695652173913,\"familyId\":\"izsb66EMeF6zgZ2ww\",\"instructions\":\"Create a function that expands a decimal number into a string as shown below:\\n\\n```\\n25.24 ➞ \\\"20 + 5 + 2/10 + 4/100\\\"\\n70701.05 ➞ \\\"70000 + 700 + 1 + 5/100\\\"\\n685.27 ➞ \\\"600 + 80 + 5 + 2/10 + 7/100\\\"\\n```\\n\\n### Examples\\n```\\nexpandedForm(5.44) ➞ \\\"5 + 4/10 + 4/100\\\"\\n\\nexpandedForm(46.66) ➞ \\\"40 + 6 + 6/10 + 6/100\\\"\\n\\nexpandedForm(87.04) ➞ \\\"80 + 7 + 4/100\\\"\\n\\nexpandedForm(123.025) ➞ \\\"100 + 20 + 3 + 2/100 + 5/1000\\\"\\n\\nexpandedForm(50.270) ➞ \\\"50 + 2/10 + 7/100\\\"\\n\\n```\\n\\n### Notes\\nN/A\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"/** \\n============================================== \\nTestGen 4.0 for JUnit 4.13.0 \\t\\t\\nTest Case: DoubleNumberExpansion::expandedForm \\nTimestamp: 03/15/2021 08:54:19 AM \\n---------------------------------------------- \\n® DARKKO 2021 © \\n============================================== \\n\\n**/ \\n\\nimport static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class DoubleNumberExpansionTest { \\n\\t\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertEquals(\\\"5 + 4/10 + 4/100\\\", DoubleNumberExpansion.expandedForm(5.44));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertEquals(\\\"40 + 6 + 6/10 + 6/100\\\", DoubleNumberExpansion.expandedForm(46.66));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertEquals(\\\"80 + 7 + 4/100\\\", DoubleNumberExpansion.expandedForm(87.04));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertEquals(\\\"100 + 20 + 3 + 2/100 + 5/1000\\\", DoubleNumberExpansion.expandedForm(123.025));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertEquals(\\\"50 + 2/10 + 7/100\\\", DoubleNumberExpansion.expandedForm(50.27));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertEquals(\\\"200 + 7 + 3/10 + 3/100 + 3/1000\\\", DoubleNumberExpansion.expandedForm(207.333));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertEquals(\\\"5/10 + 7/100\\\", DoubleNumberExpansion.expandedForm(0.57));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertEquals(\\\"100 + 40 + 2/100 + 3/1000\\\", DoubleNumberExpansion.expandedForm(140.023));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test09() { \\n\\t\\tassertEquals(\\\"90 + 9/10 + 9/100\\\", DoubleNumberExpansion.expandedForm(90.99));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test10() { \\n\\t\\tassertEquals(\\\"80 + 4 + 5/10\\\", DoubleNumberExpansion.expandedForm(84.5));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test11() { \\n\\t\\tassertEquals(\\\"70 + 6 + 2/100\\\", DoubleNumberExpansion.expandedForm(76.02));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test12() { \\n\\t\\tassertEquals(\\\"40 + 4 + 5/10\\\", DoubleNumberExpansion.expandedForm(44.5));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test13() { \\n\\t\\tassertEquals(\\\"30 + 7 + 4/10 + 9/100\\\", DoubleNumberExpansion.expandedForm(37.49));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test14() { \\n\\t\\tassertEquals(\\\"60 + 7/10000\\\", DoubleNumberExpansion.expandedForm(60.0007));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test15() { \\n\\t\\tassertEquals(\\\"20 + 9 + 2/10 + 2/100\\\", DoubleNumberExpansion.expandedForm(29.22));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test16() { \\n\\t\\tassertEquals(\\\"10 + 9/10 + 9/100\\\", DoubleNumberExpansion.expandedForm(10.99));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test17() { \\n\\t\\tassertEquals(\\\"60 + 3 + 9/100\\\", DoubleNumberExpansion.expandedForm(63.09));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test18() { \\n\\t\\tassertEquals(\\\"30 + 7 + 2/100 + 2/1000\\\", DoubleNumberExpansion.expandedForm(37.022));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test19() { \\n\\t\\tassertEquals(\\\"40 + 3 + 2/10 + 1/100\\\", DoubleNumberExpansion.expandedForm(43.21));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test20() { \\n\\t\\tassertEquals(\\\"300 + 9 + 2/100 + 8/1000\\\", DoubleNumberExpansion.expandedForm(309.028));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test21() { \\n\\t\\tassertEquals(\\\"400 + 40 + 7 + 3/10 + 3/100\\\", DoubleNumberExpansion.expandedForm(447.33));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test22() { \\n\\t\\tassertEquals(\\\"60 + 5 + 5/100\\\", DoubleNumberExpansion.expandedForm(65.05));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test23() { \\n\\t\\tassertEquals(\\\"40 + 7 + 3/10 + 4/100\\\", DoubleNumberExpansion.expandedForm(47.34));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test24() { \\n\\t\\tassertEquals(\\\"60 + 8 + 6/10 + 9/100 + 9/1000\\\", DoubleNumberExpansion.expandedForm(68.699));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test25() { \\n\\t\\tassertEquals(\\\"1 + 2/10 + 4/100\\\", DoubleNumberExpansion.expandedForm(1.24));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test26() { \\n\\t\\tassertEquals(\\\"4 + 2/10 + 8/100\\\", DoubleNumberExpansion.expandedForm(4.28));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test27() { \\n\\t\\tassertEquals(\\\"7 + 3/10 + 4/1000\\\", DoubleNumberExpansion.expandedForm(7.304));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test28() { \\n\\t\\tassertEquals(\\\"4/100\\\", DoubleNumberExpansion.expandedForm(0.04));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test29() { \\n\\t\\tassertEquals(\\\"1/10 + 2/100 + 3/1000 + 4/10000\\\", DoubleNumberExpansion.expandedForm(0.1234));\\n\\t}\\n\\n}\\n// end of tests\",\"language\":\"java\",\"quality\":0,\"summary\":\"Create a function that expands a decimal number into a string as shown below:\\n\\n25.24 ➞ \\\"20 + 5 + 2/10 + 4/100\\\"\\n70701.05 ➞ \\\"70000 + 700 + 1 + 5/100\\\"\\n685.27 ➞ \\\"600 + 80 + 5 + 2/10 + 7/100\\\"\\n\\nExamples\\nexpandedForm(5.44) ➞ \\\"5 + 4/10 + 4/100\\\"\\n\\nexpandedForm(46.66) ➞ \\\"40 + 6 + 6/10 + 6/100\\\"\\n\\nexpandedForm(87.04) ➞ \\\"80 + 7 + 4/100\\\"\\n\\nexpandedForm(123.025) ➞ \\\"100 + 20 + 3\",\"tags\":[\"algorithms\",\"language_fundamentals\",\"math\",\"numbers\",\"arrays\"],\"timestamp\":{\"$date\":1615770349567},\"title\":\"Expand a Number II\",\"stats\":{\"completed\":{\"total\":23,\"ratings\":[3,3,3,3,3,3,2,3,1,1,4,2,4,0,4,4,2,1,3,4,2,2,3],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"9pqtNWrsTJdZcRbEZ\",\"Yx9tWxJaqHnzGC83X\",\"LNCb5rksJLJ43L4Nw\",\"vRXuYYBNuHEQ29fbm\",\"dTFWmBaz6QaPZxSAD\",\"95BvwJssZCGtv76HS\",\"Q3HLKJ7ctEEJrkxCE\",\"ZBC3PiCvwzvcRZaFy\",\"KMR6vNzvSKMA2cXnK\",\"htXCitorobtqYymjN\",\"sxci7DYKNa6q22Sjq\",\"FEHmyaRvsAsNMMwkF\",\"hKcRpnfjgcBgHPvhA\",\"rWhXHhzF4W8bea6LP\",\"wFRLGjA56kj7xyhmv\",\"XH6378Zm3WBm679yx\",\"uw47663LqPME8btaA\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"acQwyrd5NcZvgGQhW\",\"language\":\"java\"},{\"_id\":\"hndKgmCRjrTuDsMaj\",\"language\":\"javascript\"},{\"_id\":\"cz4xp5ejvNxanYZej\",\"language\":\"php\"},{\"_id\":\"rBHTZ3HTCZQ6r5XP4\",\"language\":\"python3\"},{\"_id\":\"eLBA35nWMuDfex9Hb\",\"language\":\"ruby\"}]}}"]