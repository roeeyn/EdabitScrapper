a["{\"msg\":\"result\",\"id\":\"316\",\"result\":{\"_id\":\"7r4Hz8MvJq4sbHhXB\",\"archived\":false,\"author\":\"kochug\",\"authorId\":\"vQEmjTRgmdGNYB7yk\",\"code\":\"public class Program {\\n\\tpublic static boolean validateEmail(String s) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.4644351464435146,\"familyId\":\"gnkAQDRj8pynDSXug\",\"instructions\":\"Create a function that accepts a string, checks if it's a valid email address and returns either  `true` or `false`, depending on the evaluation.\\n\\n- The string must contain an `@` character.\\n- The string must contain a `.` character.\\n- The `@` must have at least one character in front of it.\\n  - e.g. `\\\"e@edabit.com\\\"` is valid while `\\\"@edabit.com\\\"` is invalid.\\n- The `.` and the `@` must be in the appropriate places.\\n  - e.g. `\\\"hello.email@com\\\"` is invalid while `\\\"john.smith@email.com\\\"` is valid.\\n\\nIf the string passes these tests, it's considered a valid email address.\\n\\n### Examples\\n```\\nvalidateEmail(\\\"@gmail.com\\\") ➞ false\\n\\nvalidateEmail(\\\"hello.gmail@com\\\") ➞ false\\n\\nvalidateEmail(\\\"gmail\\\") ➞ false\\n\\nvalidateEmail(\\\"hello@gmail\\\") ➞ false\\n\\nvalidateEmail(\\\"hello@edabit.com\\\") ➞ true\\n```\\n\\n### Notes\\n- Check the **Tests** tab to see exactly what's being evaluated.\\n- You can solve this challenge with RegEx, but it's intended to be solved with logic.\\n- Solutions using RegEx will be accepted but frowned upon :(\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(false, Program.validateEmail(\\\"@edabit.com\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(false, Program.validateEmail(\\\"@edabit\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(true, Program.validateEmail(\\\"matt@edabit.com\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(false, Program.validateEmail(\\\"\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(false, Program.validateEmail(\\\"hello.gmail@com\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(true, Program.validateEmail(\\\"bill.gates@microsoft.com\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(false, Program.validateEmail(\\\"hello@email\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n    assertEquals(false, Program.validateEmail(\\\"%^%$#%^%\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test9() {\\n    assertEquals(false, Program.validateEmail(\\\"www.email.com\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test10() {\\n    assertEquals(false, Program.validateEmail(\\\"email\\\"));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"Create a function that accepts a string, checks if it's a valid email address and returns either  true or false, depending on the evaluation.\\n\\nThe string must contain an @ character.\\nThe string must contain a . character.\\nThe @ must have at least one character in front of it.\\n  e.g. \\\"e@edabit.com\\\" is valid while \\\"@edabit.com\\\" is invalid.\\nThe . and the @ must b\",\"tags\":[\"validation\",\"strings\",\"logic\",\"regex\"],\"timestamp\":{\"$date\":1523686720285},\"title\":\"Basic E-Mail Validation\",\"stats\":{\"completed\":{\"total\":269,\"ratings\":[1,1,1,1,1,2,2,1,2,1,0,2,1,2,1,2,2,1,1,2,1,0,1,1,1,1,1,2,1,1,2,2,1,1,3,0,2,1,2,1,0,2,0,2,0,1,1,2,2,2,2,2,2,2,2,2,2,1,2,2,0,2,3,2,1,1,1,1,1,3,1,0,2,1,2,2,3,1,2,1,1,2,1,1,5,2,1,0,1,2,2,1,2,1,2,0,2,1,2,2,2,2,2,2,2,2,1,2,2,0,2,2,1,1,2,2,3,2,1,2,1,2,1,2,0,2,1,2,1,2,2,2,1,1,3,2,2,2,3,2,3,1,0,1,1,2,0,2,1,0,2,2,1,3,0,1,1,2,1,1,0,1,2,1,0,0,0,2,2,0,1,0,1,0,2,1,2,1,1,2,1,0,2,2,1,3,1,3,2,1,2,2,2,2,5,1,2,2,2,2,2,1,2,1,1,2,0,1,1,1,1,2,2,2,2,2,2,2,2,2,1,1,1,0,2,0,2,1,3,1,2,2,1,1,1,2,0,2,1],\"rators\":[\"vQEmjTRgmdGNYB7yk\",\"cGKgWB8ZZcidku3qj\",\"5PXxhR3Bctqox3PE6\",\"CotyEj3eY9CbwBs2t\",\"iFZ9ksE5WZHEkNjxt\",\"zMEyen5f2qNu44YaN\",\"iRgkGNCNtoPKC25EY\",\"iumiEEzgPfm2oJSA2\",\"M3mkzSYXCpCt2HhC3\",\"hKZCo3exwfkhfcty8\",\"cDntKduHa8xh8vZad\",\"7LrgrixSzJxiGaF66\",\"LkroXuaYSNFhsnw77\",\"GRZzKCbeb4xKHFCrZ\",\"79ZbLzp7xepvkonoh\",\"fskHo2C2gMKZxPZ5i\",\"rQpthoJte6rreQd4j\",\"fbNWxXTqZy2mXNbGJ\",\"x5JEs23Tc8ZWw3YAY\",\"y9D35PnnS9TTX2nat\",\"7aFiTKgeaqixEJDqR\",\"ddfeZ4pbbcXFXqZmY\",\"tW2XYfMDPBbMknTmo\",\"M2vL4CLzM6ePi2jF5\",\"zovXwG27gzSSW7cia\",\"YGYf9GKzaF8CWnDHE\",\"sBAQgme9imkPrH2Xm\",\"NQ287FZrfSY9Swn2F\",\"vtosp2wmv3bJ9Qgio\",\"3riR3H5ei3T86EEzz\",\"uhar2QCK32zeRiBXr\",\"qzFMJGxMErfBhExMm\",\"uK99RLh3CQ3yur6BQ\",\"niz9xRvhYCLYvGJnW\",\"GJXFSHfvKE7qPW2C4\",\"u437YTqDGSjh49fsY\",\"2uaNy5h4xatNb5Mww\",\"8LmS3LoWdZj8YzBqC\",\"erJWHqarGkGtPJ3C4\",\"LHKxLdXALvquvPgEW\",\"yJyjT7Z2PPQmzzWpP\",\"yZ7xaZ7NNg6Y9EMsH\",\"XNKDAmoGXbZ3jW7fH\",\"W6yZAaatSn5apKLq7\",\"2tY9mv42frs6RWBpg\",\"fsC9crXHkTMRGaXjd\",\"vjh7xAmbYZoaYWeRL\",\"34rKGZYu7vEdoCu7d\",\"WJRMTgAZvNwLAwSzY\",\"mL4aTn2mfeypmYJc9\",\"4z4mkZCaheog6fpnm\",\"tpHtonenH2R6XtAW8\",\"BmqAHh8fTE8WhqnMm\",\"MDpoPq373YipvFuFt\",\"KhXrNsYYznFBzM9M6\",\"z6gRoaKmajaC6FgYb\",\"s3S5nDxH46TeY2wQu\",\"TG48zCjALDL8SXSjz\",\"k6ypT7JArDXfZ5CxZ\",\"TbbTQWFfnBweNtc9s\",\"hCoyBFeNMdaC88ZFi\",\"E8kxrkhNmubbNJTDT\",\"wLkbq9vZknXjLRdRu\",\"L8KR8FTXXY4o6ynRW\",\"AsizwTtPYncqZH3Qf\",\"jHXJPfu5WXh9YN97E\",\"Zr2pbysK4SeF4B9mu\",\"QS5RGoPnapStFD5Gi\",\"cGwqKDCYRv6AP4GPa\",\"ydos8Ba8nZdYRNJpS\",\"QdMda8ZPeux6FcasR\",\"yhk8G8cM3p9JAbfJN\",\"q3KPnThYcjYMpgzgA\",\"BpjtadAiqrAJM5cHW\",\"dRpSwgukY2jHSxuwq\",\"5znpaFDoToJtAtF3h\",\"4MWMwGbthkTMu3dkb\",\"aMNhTh35QQAs33ycQ\",\"a49eNnfRwSMxsDJXf\",\"vH5tKNTA8GJKHaCtT\",\"xHosFNDAqePRmpuNC\",\"ojAHJKn7eG5yeLfPc\",\"bCqD7uWqx3QkEDMca\",\"ZxT77KmWRWEpY9FXM\",\"vRXuYYBNuHEQ29fbm\",\"akxNNgvrAYwimn8cB\",\"PsJdRJN4Kz2mxrtQv\",\"Yt3hCM2SdzhMYRqHj\",\"TSiSTp6KqE2DYByLv\",\"hRrEJZCbQ5zhHgpWp\",\"9b8o8f4uNyagMj3W6\",\"3pdgguqZgNDSAJSGm\",\"qvuBh3w84NuQTXMdZ\",\"sxci7DYKNa6q22Sjq\",\"FocLpCB2WEiK2gGni\",\"RykozSgfaFDDRZ9AH\",\"YWnFYSYAv4jbY4Mmc\",\"xF2KaebJZekTjXDGF\",\"jkBTJPGPb35c3ujbo\",\"t2kdBPj9qQAXY2Ehd\",\"2oiE6qHMbW3cv7N74\",\"p28tmk8bcHjXsxaAg\",\"D2QY87i8yGntGEeM8\",\"9c8n7ti5vCjTRgiGN\",\"FvWKuSqHdXZ7HM2sD\",\"3gxJoNp59B4eoyyed\",\"YLqdr7bYjwew2KM4N\",\"cG4PEDMMx8jXhWP8T\",\"Ha5J49rhojBRy3BaM\",\"Yohr2MmAyaWGMbB35\",\"fnCSoGvytLcNbjekC\",\"mP3xxS7JxmPfbE2Hb\",\"WX3S3CFjEdfceCtKZ\",\"phA6MomRzh9oz3eqn\",\"gofo35rKkbyPH9jFq\",\"aLpuDx72trwPQ5Aua\",\"CLmJduqJHX83dM4Pd\",\"3KjxQu9RZ8ZSywvLz\",\"3XvbdaPm47SaJtzrC\",\"HsFc9PgmpP2X9Fwh9\",\"8J2Dqqz9PaFufQzwY\",\"C7XYK6hJjzSwiMBpL\",\"qvwMoDM9979uimTkC\",\"u4yanfWeeZsN3xWgc\",\"s7iqHMchmJLu3gRn6\",\"8JyqsSbN2FJXPr3cw\",\"3He89pPPSCfuvZF7g\",\"CggGfsERnPKGupFWp\",\"J9zJq7PMGb6mqzcHW\",\"2cdvd8yuPLSwvGj9w\",\"C9yBWYcZsjmJYww3K\",\"9gJsF5apWJGWZJprn\",\"4RHx3H8EwP2oboW8e\",\"xJXFnFGJJ5aeNSAgy\",\"AyrEvM2GLX2jqM772\",\"Es4eX2stRpyoXeC7f\",\"y7NyT6FnDzPhAzkjF\",\"NsQ8qYQQ47gSPtQkK\",\"wYYMNPe8nSiJFbvJw\",\"SY5wqJS9RJYYMJ6sy\",\"82weQfHHmno4Mq4X7\",\"hB5mgzMwQSnhBzi7P\",\"fZjkX29nhRTWWb75k\",\"Kso7rzAKB4TTCPKgM\",\"5seiNqw6ZXoF2GRRd\",\"jyoLggHk8xQKZuoQC\",\"TrquEHytntLKHA4m2\",\"mfm3gB39arY8Rjb2y\",\"Witn99Xo8Anbjpakg\",\"8zZ6xmzpiFair25qr\",\"WZujpe8yQAyZmpWHg\",\"etoSR23iELGGgs9rA\",\"htXCitorobtqYymjN\",\"meS77LKqRswhF5LAy\",\"y6kfyYmydcD8tkBk7\",\"fmNXmbqizQq4e3Jxd\",\"B4pxRqzo43M7S8FbP\",\"DRjqgdcSkz58yiqea\",\"DzvdGwHEjqsX7wyKr\",\"q2tzvkrLASvSjkek9\",\"pBMXMQem6BpSeooYT\",\"zwruFCmuHkwJTpYqg\",\"RhPg33AdzvSZmibXa\",\"rvojHhKH3DaxotefQ\",\"dcW9oK2uRo8h8mBe2\",\"g4NCSxxHqHCGMpWwT\",\"DcFnHfpg5TbMhMLP2\",\"Fd9765rksgPK4E2Zy\",\"YcjwCvYut6834Jzd8\",\"muXMnzQwGLzN6j2Jr\",\"H5sfMFuQo6yHE8GFL\",\"Ym8AjbKGSJooun3nt\",\"PytNZK9mNiRiZxPrm\",\"YFHkjbM6obMSj24zi\",\"AeJSxRqw2dJZuGvdk\",\"azAzSkvJd7eyXY9x9\",\"yXGiiSAR5nBHnH3yr\",\"gXTAie79kiw28tx5u\",\"DkSMZ3jZLkwviKb9g\",\"oMfq73A434YWhSuWQ\",\"Tf7TJFSPktJBgLA4k\",\"mG8HqKiAQFTdRZthG\",\"RRcPB8Si2eJSYLZKR\",\"P5BhjZxyeHQYTNyB9\",\"8Xx8nWXRydHDBGfQf\",\"yd5PakB2z33q2JrTZ\",\"jXTnL3JatkKjoifyb\",\"CQrLMPjz7gn82rySP\",\"69K8S2NbzkqE9pAe5\",\"SfmXqCfDksMb883DC\",\"tyLS9T6YMfg9fMtYJ\",\"mQKWauR6b252TmdX4\",\"hD6sfDtntpqT8NR2o\",\"gBGjCfJvPHswDM5JQ\",\"62qNJjtmkRYvX5kKB\",\"iq55QasecYJXKz8rx\",\"a777e8chPvJkY3tKa\",\"Q4RHqbSCspLCPqvHe\",\"RGN3QTb5LXj4ZPPkj\",\"pi76g3eRpnKrhee2a\",\"mDWNyaaQ9hvPCRzSd\",\"GkYtSbQuheBF4Enys\",\"uFfEio8nzDvL8emhp\",\"bur3yQ8s34zqKGEro\",\"wB47dmNBe3aFZZcFr\",\"XTjxohEJAzNyG5SHs\",\"zZfMwLuoERGmybgib\",\"buX4mCQhtXCfBjeno\",\"rGpPd6PvpzLaqps4g\",\"27qiJtdrfNjcePhwp\",\"drAAhaSiMncZ2XcAk\",\"hhxjQREtmHSheH9Pj\",\"4ySzqKC5s3ZRpG9di\",\"nHj7SC5cnmkTApbgY\",\"GaJNJwcdyB9ueYFst\",\"SgPjF69J25jT3dn4X\",\"upHSi2uyi88KP4Jrw\",\"mpQZxp9sKmn2WoTG6\",\"kam5k2Je32achSgqT\",\"wFRLGjA56kj7xyhmv\",\"uw47663LqPME8btaA\",\"srJ34BaybkQh3qRkM\",\"iYqFnCqDwPb25CuuY\",\"xEX3TDY6C2h82dJTn\",\"Su3vDnttRBpxeyDen\",\"jCjCvyhqhpebkJn34\",\"cR3ibTMxLyEdDFCHY\",\"J7epB3qSQJ2E8vWkY\",\"PJu3WcTpfRrvHfQiS\",\"5b3rz7nFjQ7rwtqkQ\",\"PPdaczxSt2u5cmZYG\",\"335vfhEhjduPYp8fs\",\"rWhXHhzF4W8bea6LP\",\"KMR6vNzvSKMA2cXnK\",\"SE5G2Caf3btnuGmz6\",\"c7uBxu2rgY77H5d79\",\"SxWfaNpkxLLcSuZFk\",\"563onSvqgjToY79ah\",\"unqzSsxpxj9sZ7rbD\",\"3B7M9nT4YejsZTRSh\",\"FxPDKKibxnZjGJLs6\",\"YLwJkF2wuL3n9o6a2\",\"AnRpBhjGrjYNyG29S\",\"4XfzP4FKxLJew8N9P\",\"GSgr8hLGHeZPde7WJ\",\"jjCunLhNy6hd65NSu\",\"974cv448kw6Wu2JF6\",\"kZL6dYN5mre8vGEBj\",\"qPJwwb5w8eASXeBHB\",\"PAEWysAAFheYiYPBp\",\"XH6378Zm3WBm679yx\",\"TChRosWp9uBbSrJN3\",\"5HGyJtoZ3AffzAZAv\",\"nFbmNzMQ38TncmfQX\",\"A5pJCwj9BhMNacBNY\",\"RJ6mfGK5N6pRrGRm9\",\"E2hpke7mHxAWsw5t9\",\"Q2TD7GcXaL5F3d2LM\"],\"quality\":[4,2,5,5,5,2,5,4,5,5,4,5,5,5,4,5,4,5,5,4,2,5,4]},\"complaints\":{\"total\":0,\"reasons\":[],\"skippers\":[\"vQEmjTRgmdGNYB7yk\"]},\"instructions\":{\"score\":24.400000000000002,\"voters\":[\"BkPgkDQGHm66X4Qai\",\"a7NjEyhks9t3YYgjj\",\"Y4zyRFBYCJE2n4hAk\",\"dYXHck6zbpzPTx8K4\",\"j9gg82Bp2L7nw7DyJ\",\"PKJWzgQKwneuaS3Ap\",\"SFyvFvFdWpzu4WExt\",\"9qoWqLcHGiDX429rE\",\"cnniKZMFo5euKDewx\",\"AeSmk2XWGcTLHB7PJ\",\"uWkQkDiJkaxt35sfC\",\"M2EoafwKrvwudNP58\"]},\"tests\":{\"score\":1.7999999999999998,\"voters\":[\"nMgXTuMfHXZSAixRh\",\"NQ287FZrfSY9Swn2F\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.304347826086956,\"family\":[{\"_id\":\"SJFpboG5pTixXQFAA\",\"language\":\"cpp\"},{\"_id\":\"egy6LWExtnR6JkwBg\",\"language\":\"csharp\"},{\"_id\":\"7r4Hz8MvJq4sbHhXB\",\"language\":\"java\"},{\"_id\":\"8rC8cbEonMKbHeLTx\",\"language\":\"javascript\"},{\"_id\":\"sG2nytFRmcWLiDP69\",\"language\":\"php\"},{\"_id\":\"TBCujkw9D8hrEgFc4\",\"language\":\"python3\"},{\"_id\":\"cL3vzC5fF9s7MM3hu\",\"language\":\"ruby\"},{\"_id\":\"idLbxK97g5Nh2eMQ8\",\"language\":\"swift\"}]}}"]