a["{\"msg\":\"result\",\"id\":\"740\",\"result\":{\"_id\":\"xxig52timWewkiJxY\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n\\tpublic static String numToEng(int n) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":2.872340425531915,\"familyId\":\"xpJ97WNcWChskWYed\",\"instructions\":\"Write a function that accepts a positive integer between `0` and `999` inclusive and returns a string representation of that integer written in English.\\n\\n### Examples\\n```\\nnumToEng(0) ➞ \\\"zero\\\"\\n\\nnumToEng(18) ➞ \\\"eighteen\\\"\\n\\nnumToEng(126) ➞ \\\"one hundred twenty six\\\"\\n\\nnumToEng(909) ➞ \\\"nine hundred nine\\\"\\n```\\n\\n### Notes\\n- There are no hyphens used (e.g. \\\"thirty five\\\" not \\\"thirty-five\\\").\\n- The word \\\"and\\\" is not used (e.g. \\\"one hundred one\\\" not \\\"one hundred and one\\\").\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(\\\"zero\\\", Challenge.numToEng(0));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(\\\"twenty six\\\", Challenge.numToEng(26));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(\\\"five hundred nineteen\\\", Challenge.numToEng(519));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(\\\"one hundred six\\\", Challenge.numToEng(106));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(\\\"nine hundred ninety nine\\\", Challenge.numToEng(999));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"Write a function that accepts a positive integer between 0 and 999 inclusive and returns a string representation of that integer written in English.\\n\\nExamples\\nnumToEng(0) ➞ \\\"zero\\\"\\n\\nnumToEng(18) ➞ \\\"eighteen\\\"\\n\\nnumToEng(126) ➞ \\\"one hundred twenty six\\\"\\n\\nnumToEng(909) ➞ \\\"nine hundred nine\\\"\\n\\nNotes\\nThere are no hyphens used (e.g. \\\"thirty five\\\" not \\\"thirty-five\\\").\\nThe\",\"tags\":[\"algorithms\",\"data_structures\",\"strings\"],\"timestamp\":{\"$date\":1568258919657},\"title\":\"Numbers to English\",\"stats\":{\"completed\":{\"total\":60,\"ratings\":[3,3,3,3,3,1,3,4,2,3,4,4,2,3,1,1,3,2,3,2,4,4,1,3,2,4,4,3,3,4,0,4,2,4,3,2,2,4,2,2,3,3,4,3,4,3,5],\"rators\":[\"tPQ9zR2BYE8edYnJR\",\"3pdgguqZgNDSAJSGm\",\"hhkuWPyzP2k2pRcxZ\",\"fQCHGFe43dEtqjEFT\",\"2cbTKYSPwFJBoEtay\",\"hZr4qXRsSumkpJXK9\",\"sxci7DYKNa6q22Sjq\",\"ZBDiEMi7dbjRL55LB\",\"YF79LnTdprobbYY5v\",\"gXMfzkYnoTZXXemY8\",\"5MuT2gPpME6LbfwoY\",\"pzz8vFouna6JTTAiW\",\"Prw5Jq38wrSoj5QSF\",\"eXW8reZCCZHQzJjQi\",\"J9zJq7PMGb6mqzcHW\",\"AzERMCwmKzy5zXJ3S\",\"ngRNQYczN4QJ2tDN8\",\"rehehi2Tr2mwaEoJE\",\"uqNAu5PZnSDRqZKoN\",\"KXYHpCQvmTtpbGXYg\",\"Es4eX2stRpyoXeC7f\",\"LZSxphM8vH4A6Deqn\",\"8tujqLqi5XWe2vry8\",\"TrquEHytntLKHA4m2\",\"B6zAaB9EW2zNCKgac\",\"pBMXMQem6BpSeooYT\",\"jyoLggHk8xQKZuoQC\",\"DkSMZ3jZLkwviKb9g\",\"csRoCgJx5NBJzW8pX\",\"htXCitorobtqYymjN\",\"KgaNktx83boDbbSzM\",\"NzJKK8Cuf3bcqZfcw\",\"QS45qu2DFXcCqpAnB\",\"k63LjKkX5p7SYng7C\",\"gJbvbqosimaP4ZAYb\",\"Ym8AjbKGSJooun3nt\",\"TBSwdsjpop5PNM2Fh\",\"gXTAie79kiw28tx5u\",\"DqZMjeKpfjDrjhEPo\",\"fbgn5575LS3jsxABM\",\"jm4tNFjsgYKW5TZfp\",\"rWhXHhzF4W8bea6LP\",\"mQKWauR6b252TmdX4\",\"vs78fRQErHJZWFaTc\",\"buX4mCQhtXCfBjeno\",\"9y54YZsFZt4Fgd6op\",\"c7uBxu2rgY77H5d79\",\"ZmPeQs5ZrXvbC8Rym\",\"cWf3ew5aDexbfSHgS\",\"KMR6vNzvSKMA2cXnK\"],\"quality\":[3,5,4,4,5,4,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"isHidden\":false,\"quality\":4.375,\"family\":[{\"_id\":\"EwJeurw9P2hksr7E4\",\"language\":\"cpp\"},{\"_id\":\"xxig52timWewkiJxY\",\"language\":\"java\"},{\"_id\":\"PFH9yEZXSbAngQm7T\",\"language\":\"javascript\"},{\"_id\":\"mZqMnS3FsL2MPyFMg\",\"language\":\"python3\"},{\"_id\":\"2qkJpGip5tWzrYC9J\",\"language\":\"ruby\"}]}}"]