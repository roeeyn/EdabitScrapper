a["{\"msg\":\"result\",\"id\":\"744\",\"result\":{\"_id\":\"BfLgSs2YAtjDYEyJM\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class PronicNumber {\\n\\tpublic static boolean isHeteromecic(int n) {\\n\\t\\t// your recursive solution here\\n\\t}\\n}\",\"difficulty\":2.8852459016393444,\"quality\":4,\"editorId\":\"a777e8chPvJkY3tKa\",\"familyId\":\"nCtWyzLBsiGKFgE3c\",\"instructions\":\"A **pronic** number (or otherwise called as **heteromecic**) is a number which is a *product of two consecutive integers*, that is, a number of the form `n(n + 1)`.\\n\\nCreate a function that determines whether a number is pronic or not.\\n\\n\\n### Examples\\n```\\nisHeteromecic(0) ➞ true\\n// 0 * (0 + 1) = 0 * 1 = 0\\n \\nisHeteromecic(2) ➞ true\\n// 1 * (1 + 1) = 1 * 2 = 2\\n \\nisHeteromecic(7) ➞ false\\n\\nisHeteromecic(110) ➞ true\\n// 10 * (10 + 1) = 10 * 11 = 110\\n\\nisHeteromecic(136) ➞ false\\n\\nisHeteromecic(156) ➞ true\\n```\\n\\n\\n### Notes\\n- You are expected to solve this challenge via **recursion**.\\n- You can check on the **Resources** tab for more details about *recursion* in Java.\\n- An **iterative** version of this challenge can be found via this  [link](https://edabit.com/challenge/mMc9D6vB4iPiiAK7k).\\n- A **collection** of challenges in **recursion** can be found via this  [link](https://edabit.com/collection/Yx78jEBrKppHBNsoQ).\",\"isFree\":false,\"isHidden\":false,\"lab\":\"import static org.junit.Assert.assertEquals;\\nimport org.junit.Test;\\n\\npublic class PronicNumberTests {\\n\\tprivate int[] numVector = new int[] {0, 2, 7, 110, 136, 156, 182, 218, 250, 272, 306, 362, 380, 422, 462, 600};\\n\\tprivate boolean[] resVector = new boolean[] {true, true, false, true, false, true, true, false, false, true, true, false, true, false, true, true};\\n\\t\\n\\t@Test\\n\\tpublic void test01() {\\n\\t\\tassertEquals(PronicNumber.isHeteromecic(numVector[0]), resVector[0]);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test02() {\\n\\t\\tassertEquals(PronicNumber.isHeteromecic(numVector[1]), resVector[1]);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test03() {\\n\\t\\tassertEquals(PronicNumber.isHeteromecic(numVector[2]), resVector[2]);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test04() {\\n\\t\\tassertEquals(PronicNumber.isHeteromecic(numVector[3]), resVector[3]);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test05() {\\n\\t\\tassertEquals(PronicNumber.isHeteromecic(numVector[4]), resVector[4]);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test06() {\\n\\t\\tassertEquals(PronicNumber.isHeteromecic(numVector[5]), resVector[5]);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test07() {\\n\\t\\tassertEquals(PronicNumber.isHeteromecic(numVector[6]), resVector[6]);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test08() {\\n\\t\\tassertEquals(PronicNumber.isHeteromecic(numVector[7]), resVector[7]);\\n\\t}\\n\\t@Test\\n\\tpublic void test09() {\\n\\t\\tassertEquals(PronicNumber.isHeteromecic(numVector[8]), resVector[8]);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test10() {\\n\\t\\tassertEquals(PronicNumber.isHeteromecic(numVector[9]), resVector[9]);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test11() {\\n\\t\\tassertEquals(PronicNumber.isHeteromecic(numVector[10]), resVector[10]);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test12() {\\n\\t\\tassertEquals(PronicNumber.isHeteromecic(numVector[11]), resVector[11]);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test13() {\\n\\t\\tassertEquals(PronicNumber.isHeteromecic(numVector[12]), resVector[12]);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test14() {\\n\\t\\tassertEquals(PronicNumber.isHeteromecic(numVector[13]), resVector[13]);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test15() {\\n\\t\\tassertEquals(PronicNumber.isHeteromecic(numVector[14]), resVector[14]);\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test16() {\\n\\t\\tassertEquals(PronicNumber.isHeteromecic(numVector[15]), resVector[15]);\\n\\t}\\n}\",\"language\":\"java\",\"stats\":{\"completed\":{\"ratings\":[4,4,4,4,4,4,5,1,2,5,3,1,5,2,5,2,1,2,3,1,5,3,5,1,1,2,1,5,5,2,5,1,5,5,4,2,5,2,2,4,2,2,3,3,1,4,5,0,3,2,5,3,2,1,4,1,0,2,3,0,3],\"quality\":[3,5],\"rators\":[\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"rehehi2Tr2mwaEoJE\",\"azAzSkvJd7eyXY9x9\",\"Ym8AjbKGSJooun3nt\",\"3pdgguqZgNDSAJSGm\",\"J48HzyrM4kmybqM48\",\"QXR2qGcvrK5Xkxdea\",\"ecyYaPZLMBMGGrfrJ\",\"RQL2PAWda9Bh79GNi\",\"gXTAie79kiw28tx5u\",\"bTCq6CQ3SGjrRfZeQ\",\"owzLfow4poTz55Ss2\",\"ydos8Ba8nZdYRNJpS\",\"Pi7w8y24NWgekms6F\",\"ctKmyqt7eAahx3BoF\",\"4ThmYBWvyCK5H9qjr\",\"pvCNGWe6wKmPsy8u9\",\"RSSrWo6AiSDRNAy5K\",\"Y7HWYoHyZ7GiLox9K\",\"BbPpwoHJuDnw5Qb9v\",\"xbjEPk4aQLbfdGCHX\",\"CbaaJQpF7bHhEGFzx\",\"nHj7SC5cnmkTApbgY\",\"DkSMZ3jZLkwviKb9g\",\"jmc73sMDwsj24PthD\",\"jTcJhZ6JPaPLNymNo\",\"h6exQtjB22pabWmvE\",\"C7eNLJEFb2Gc9vSkw\",\"pFMEy8z5h7A9yRW7a\",\"KwiibqBMo2vgQXhWX\",\"cqLEjfmmutsrc6KXZ\",\"rhS8qXRjZcpDXkwnE\",\"sZNyyAF4C36ncsvCC\",\"gbrc78MCqToq7pxCG\",\"Gp2QREYH9H6rdbWGH\",\"jg64RAk9RJAwEeP87\",\"nSQh85oi5P26GsCew\",\"H2TNggjJLpTbGXuDF\",\"myoNW9ijrq5bEaFQJ\",\"GvLLKHi7NwAjutdDk\",\"HHfJWu56BNQAdSzMf\",\"nTrWAav8aziQmqkuS\",\"ZmPeQs5ZrXvbC8Rym\",\"2Aipco2qtXtLuWb2S\",\"nygha5sCGnexJtfr5\",\"CuXeZN3q4yS2S7xPi\",\"nfs7YZayhCypa3FXQ\",\"NTRvXrjLxcH7KZHok\",\"GFeav8mBfjzweBnaZ\",\"DgtxkgTMERQSwfSga\",\"R7Xwk52SRibtNL6TF\",\"xBWgAnw4KKvWNgav2\",\"d9GKe8uPMkWiYhubo\",\"Wuqu3gekPrAqMiMHa\",\"tBA9CkMHtykuMrdp6\",\"h9ReqbS5EMiH7j2we\",\"sxci7DYKNa6q22Sjq\"],\"total\":65},\"flags\":0},\"summary\":\"A pronic number (or otherwise called as heteromecic) is a number which is a product of two consecutive integers, that is, a number of the form n(n + 1).\\n\\nCreate a function that determines whether a number is pronic or not.\\n\\nExamples\\nisHeteromecic(0) ➞ true\\n// 0 * (0 + 1) = 0 * 1 = 0\\n\\nisHeteromecic(2) ➞ true\\n// 1 * (1 + 1) = 1 * 2 = 2\\n\\nisHeteromecic(7) ➞ false\",\"tags\":[\"recursion\",\"numbers\",\"math\",\"validation\"],\"timestamp\":{\"$date\":1601824361805},\"title\":\"Recursion: Pronic Number\",\"family\":[{\"_id\":\"v6QmCNrboDPYavd43\",\"language\":\"cpp\"},{\"_id\":\"BfLgSs2YAtjDYEyJM\",\"language\":\"java\"},{\"_id\":\"rtYE79GzaQp4RccFC\",\"language\":\"javascript\"},{\"_id\":\"hoxv8zaQJNMWJqnt3\",\"language\":\"python3\"},{\"_id\":\"NrBKf4XQdLuXkuxCr\",\"language\":\"ruby\"}]}}"]