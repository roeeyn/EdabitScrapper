a["{\"msg\":\"result\",\"id\":\"347\",\"result\":{\"_id\":\"jtFNMktij8FcH6zna\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class Puzzle {\\n  public static boolean puzzlePieces(int[][] n) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":1.4931506849315068,\"familyId\":\"PvB5EdrRSSphJ3YRX\",\"instructions\":\"Write a function that takes two arrays and adds the first element in the first array with the first element in the second array, the second element in the first array with the second element in the second array, etc, etc. Return `true` if all element combinations add up to the same number. Otherwise, return `false`.\\n\\n### Examples\\n```\\npuzzlePieces([1, 2, 3, 4], [4, 3, 2, 1]) ➞ true\\n// 1 + 4 = 5;  2 + 3 = 5;  3 + 2 = 5;  4 + 1 = 5\\n// Both arrays sum to [5, 5, 5, 5]\\n\\npuzzlePieces([1, 8, 5, 0, -1, 7], [0, -7, -4, 1, 2, -6]) ➞ true\\n\\npuzzlePieces([1, 2], [-1, -1]) ➞ false\\n\\npuzzlePieces([9, 8, 7], [7, 8, 9, 10]) ➞ false\\n```\\n\\n### Notes\\n- Each array will have at least one element.\\n- Return `false` if both arrays are of different lengths.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"import static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class PuzzleTest {\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertEquals(true, Puzzle.puzzlePieces(new int[][] {{1, 2, 3, 4}, {4, 3, 2, 1}}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertEquals(true, Puzzle.puzzlePieces(new int[][] {{1, 8, 5, 0, -1, 7}, {0, -7, -4, 1, 2, -6}}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertEquals(true, Puzzle.puzzlePieces(new int[][] {{2, 1, 1}, {-2, -1, -1}}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertEquals(true, Puzzle.puzzlePieces(new int[][] {{2}, {-2}}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertEquals(true, Puzzle.puzzlePieces(new int[][] {{5, -1}, {-6, 0}}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertEquals(true, Puzzle.puzzlePieces(new int[][] {{0, 0, 0, 0, 0}, {1, 1, 1, 1, 1}}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertEquals(false, Puzzle.puzzlePieces(new int[][] {{1, 2}, {-1, -1}}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertEquals(false, Puzzle.puzzlePieces(new int[][] {{9, 8, 7}, {7, 8, 9, 10}}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test09() { \\n\\t\\tassertEquals(false, Puzzle.puzzlePieces(new int[][] {{9, 8, 7}, {7, 8, 9, 16}}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test10() { \\n\\t\\tassertEquals(false, Puzzle.puzzlePieces(new int[][] {{1, 1, 1}, {1, 1, 2}}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test11() { \\n\\t\\tassertEquals(false, Puzzle.puzzlePieces(new int[][] {{1, 8, 1}, {1, -8, -1}}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test12() { \\n\\t\\tassertEquals(false, Puzzle.puzzlePieces(new int[][] {{0, 0, 0, 0, 0}, {1, 1, 0, 1, 1}}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test13() { \\n\\t\\tassertEquals(false, Puzzle.puzzlePieces(new int[][] {{0, 0, 0, 0, 0}, {1, 1, 1, 1}}));\\n\\t}\\n}\",\"language\":\"java\",\"quality\":4.5,\"summary\":\"Write a function that takes two arrays and adds the first element in the first array with the first element in the second array, the second element in the first array with the second element in the second array, etc, etc. Return true if all element combinations add up to the same number. Otherwise, return false.\\n\\nExamples\\npuzzlePieces([1, 2, 3, 4], [4, 3, 2, 1\",\"tags\":[\"arrays\",\"higher_order_functions\",\"validation\",\"loops\"],\"timestamp\":{\"$date\":1608288486143},\"title\":\"Puzzle Pieces\",\"stats\":{\"completed\":{\"total\":77,\"ratings\":[1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,0,0,2,0,2,2,2,2,1,0,2,3,2,1,2,1,1,1,1,2,1,2,1,1,2,1,2,0,1,2,1,2,1,3,2,2,2,2,1,0,2,2,3,0,2,1,2,2,1,1,2,1,0,2,2,2,2,2],\"quality\":[3,5,5,5],\"rators\":[\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"uYv96ZSpA7tBHoAGX\",\"oaAQrSKk3QhpCjocn\",\"aRTLFCvovQ9MfSRsP\",\"iq55QasecYJXKz8rx\",\"C9yBWYcZsjmJYww3K\",\"gXTAie79kiw28tx5u\",\"6eGNbCnp6kneyAdRT\",\"Cczga7ES9qthpBPBf\",\"a49eNnfRwSMxsDJXf\",\"AeJSxRqw2dJZuGvdk\",\"GkYtSbQuheBF4Enys\",\"gBGjCfJvPHswDM5JQ\",\"yM49HwBqgXwp6Nai9\",\"Cc4d6DCohzmysu3Eg\",\"dcW9oK2uRo8h8mBe2\",\"r6mkxEZEBtSaKdpge\",\"82weQfHHmno4Mq4X7\",\"Po3v3dHCk6wYGKMwi\",\"rn7ZuBes8NzCrBP26\",\"bur3yQ8s34zqKGEro\",\"mG8HqKiAQFTdRZthG\",\"buX4mCQhtXCfBjeno\",\"zZfMwLuoERGmybgib\",\"jyoLggHk8xQKZuoQC\",\"DkSMZ3jZLkwviKb9g\",\"bfAZWWJ7cp7nNhDJ6\",\"4ySzqKC5s3ZRpG9di\",\"sxci7DYKNa6q22Sjq\",\"mfm3gB39arY8Rjb2y\",\"rhS8qXRjZcpDXkwnE\",\"xEX3TDY6C2h82dJTn\",\"6rvJwN4mcX7iYGjY7\",\"uw47663LqPME8btaA\",\"rNAtHTutzkDkhATPu\",\"AvBTHa9c5RF55sygh\",\"W8QowCxZGiWTqmCuw\",\"TY2hHJczWaEtibXBq\",\"i7rfeX5GyYifByYfm\",\"9azx6pJHMGK7dvDzQ\",\"QyJn8axbkgXJ9fKTp\",\"CggGfsERnPKGupFWp\",\"D49KybvhAEwK2iDRK\",\"Yohr2MmAyaWGMbB35\",\"YL9rRMNgqNdGPQ23o\",\"7Fk3NHfzvKeaq3E29\",\"3Z6qkgsBm29D77qPi\",\"zTtKiCbLWzaf2Yjo4\",\"sBZLCqR94yhavtT2R\",\"srJ34BaybkQh3qRkM\",\"s7kgsgnTYGspwBYb5\",\"wFRLGjA56kj7xyhmv\",\"J9zJq7PMGb6mqzcHW\",\"DZvz6WY5bQEneYzvv\",\"htXCitorobtqYymjN\",\"Q3ywGXg38hvj5TsfM\",\"jCjCvyhqhpebkJn34\",\"9vyjn4WyWtJ6o2wop\",\"J7epB3qSQJ2E8vWkY\",\"rWhXHhzF4W8bea6LP\",\"KMR6vNzvSKMA2cXnK\",\"hhxjQREtmHSheH9Pj\",\"B4pxRqzo43M7S8FbP\",\"unqzSsxpxj9sZ7rbD\",\"FxPDKKibxnZjGJLs6\",\"YLwJkF2wuL3n9o6a2\",\"RwyCNgJocHpsLMseB\",\"2mTYrwqEabB4NHPCY\",\"HsFc9PgmpP2X9Fwh9\",\"YTRAyZFtn9m68HBLK\",\"nFbmNzMQ38TncmfQX\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"bu3x5wTGYAnia6Kt6\",\"language\":\"cpp\"},{\"_id\":\"jtFNMktij8FcH6zna\",\"language\":\"java\"},{\"_id\":\"Zu4LyLXhd9e49krFP\",\"language\":\"javascript\"},{\"_id\":\"izfXy5SGfeekmKExH\",\"language\":\"python3\"},{\"_id\":\"dpX5QuqTgkzpoc5yY\",\"language\":\"ruby\"}]}}"]