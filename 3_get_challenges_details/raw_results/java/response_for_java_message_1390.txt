a["{\"msg\":\"result\",\"id\":\"254\",\"result\":{\"_id\":\"xH7uvX2MoH8e85aYS\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n\\tpublic static String binary(int decimal) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.1215277777777777,\"familyId\":\"LesDkLBteJGBFTGe6\",\"instructions\":\"Create a function that returns a base-2 (binary) representation of a base-10 (decimal) string number. To convert is simple: ((2) means base-2 and (10) means base-10) 010101001(2) = 1 + 8 + 32 + 128.\\n\\nGoing from right to left, the value of the most right bit is 1, now from that every bit to the left will be x2 the value, value of an 8 bit binary numbers are (256, 128, 64, 32, 16, 8, 4, 2, 1).\\n\\n### Examples\\n```\\nbinary(1) ➞ \\\"1\\\"\\n// 1*1 = 1\\n\\nbinary(5) ➞ \\\"101\\\"\\n// 1*1 + 1*4 = 5\\n\\nbinary(10) ➞ \\\"1010\\\"\\n// 1*2 + 1*8 = 10\\n```\\n\\n### Notes\\n- Numbers will always be below 1024 (not including 1024).\\n- The `&&` operator could be useful.\\n- The strings will always go to the length at which the most left bit's value gets bigger than the number in `decimal`.\\n- If a binary conversion for `0` is attempted, return `\\\"0\\\"`.\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(\\\"1100100\\\", Challenge.binary(100));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(\\\"1\\\", Challenge.binary(1));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(\\\"0\\\", Challenge.binary(0));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(\\\"1000101\\\", Challenge.binary(69));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(\\\"1111111111\\\", Challenge.binary(1023));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(\\\"111111111\\\", Challenge.binary(511));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(\\\"1010011010\\\", Challenge.binary(666));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n    assertEquals(\\\"1111011\\\", Challenge.binary(123));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"Create a function that returns a base-2 (binary) representation of a base-10 (decimal) string number. To convert is simple: ((2) means base-2 and (10) means base-10) 010101001(2) = 1 + 8 + 32 + 128.\\n\\nGoing from right to left, the value of the most right bit is 1, now from that every bit to the left will be x2 the value, value of an 8 bit binary numbers are (25\",\"tags\":[\"bit_operations\",\"logic\",\"numbers\",\"loops\"],\"timestamp\":{\"$date\":1568322948660},\"title\":\"Convert a Number to Base-2\",\"stats\":{\"completed\":{\"total\":330,\"ratings\":[1,1,1,1,1,0,0,0,1,1,0,1,0,0,0,0,1,0,0,2,0,2,1,1,0,1,2,1,2,1,2,1,0,2,1,2,3,3,3,2,1,3,2,1,3,0,1,1,1,0,0,2,2,2,1,1,2,0,3,2,1,1,0,1,2,0,1,0,0,0,0,0,0,1,0,2,1,1,0,1,1,0,1,3,2,1,1,1,2,3,1,0,0,0,1,1,0,1,1,1,1,1,3,4,0,2,3,0,1,0,0,0,2,0,1,2,1,0,1,2,0,0,0,1,1,1,1,0,0,0,2,1,0,1,1,1,0,1,0,0,2,3,1,2,2,0,1,2,1,2,2,1,1,0,1,1,1,2,0,1,0,2,1,0,1,1,1,2,1,2,1,1,1,1,1,2,1,2,0,2,1,0,3,1,1,1,2,2,3,3,1,3,2,0,1,3,1,1,0,2,2,2,1,0,1,2,0,1,3,0,5,0,1,2,2,2,0,2,1,0,3,0,1,2,2,1,1,0,1,2,1,3,1,2,1,1,1,1,0,0,2,0,1,0,1,2,1,2,0,1,1,0,1,1,1,1,1,1,2,0,1,1,3,1,1,2,0,3,2,1,1,5,2,0,1,1,2,1,1,0,1,1,1,1,1,1,1,0],\"rators\":[\"sxci7DYKNa6q22Sjq\",\"FocLpCB2WEiK2gGni\",\"cp3X8hk8yNME7qoD9\",\"3pdgguqZgNDSAJSGm\",\"PHkmuovANGzadceGW\",\"9c8n7ti5vCjTRgiGN\",\"Yohr2MmAyaWGMbB35\",\"ZBDiEMi7dbjRL55LB\",\"Gxm6CjQLyYkpv7bW4\",\"qgc3hgPcSduWfwkSj\",\"4jQxwAkA5xpWbPwMz\",\"2wS9Wm3Nj5ZFcMnfA\",\"3gxJoNp59B4eoyyed\",\"YLkzzEZ5JuRkqhK8x\",\"SnY7WidXJoAyyuPuA\",\"7yTWwspi6f7maXWRj\",\"ZX3CM3MunZD2THxvs\",\"mjAvzTMdYBxHcSnDM\",\"7v5XEd4wjiJjwSHio\",\"LvPcgns5Ec7wyMbMv\",\"kQJ5og4KFuLC7Pniu\",\"NCB3RaRBonefnHBJD\",\"a49eNnfRwSMxsDJXf\",\"pr4Cm4A369tC9gSeT\",\"3KjxQu9RZ8ZSywvLz\",\"7p3Btn9oRNStAZ8G6\",\"TtHL4YeiDJx7ZtxrX\",\"CLmJduqJHX83dM4Pd\",\"p4KXbYG8ddyCQrbAs\",\"NnWFGmyzAtiGs2ffR\",\"jXvF9KLBisysx3wG2\",\"bXFAFC4kwcNvYJrSx\",\"i8XDCsB7phE5NTLSh\",\"AgFac67AGuAuuYDTd\",\"zh9GGSpmAnDvdARMv\",\"8JyqsSbN2FJXPr3cw\",\"FAEfq35fCKotwhHe6\",\"L9tMjw3jqWtJ4LibE\",\"3XvbdaPm47SaJtzrC\",\"J9zJq7PMGb6mqzcHW\",\"s2G7xhbjaNdkGbhRX\",\"supEsRyet9ow5W6qg\",\"qJZsi5rhRnWA38FbA\",\"u4yanfWeeZsN3xWgc\",\"s8o9ptNnpNGktBWdX\",\"JFodQijHHdRkkrZvT\",\"C9yBWYcZsjmJYww3K\",\"cwfpQQAowCJCE3zME\",\"AyrEvM2GLX2jqM772\",\"5RcAXjQAbqQtWppy6\",\"W347YkKWzfvMbkuHr\",\"YLwJkF2wuL3n9o6a2\",\"ko7oJ85JMftgcbkrr\",\"5Kf9z3G9QBs9fkvLs\",\"EZNT8B7yQnnZmuwCf\",\"Es4eX2stRpyoXeC7f\",\"mCZc7AN54Y77RAJs9\",\"wYYMNPe8nSiJFbvJw\",\"DNvEv5A3JcWR5MdBJ\",\"uPfkNA3maDhAoKtnb\",\"8J2Dqqz9PaFufQzwY\",\"Kso7rzAKB4TTCPKgM\",\"rTj67TTydxqkpwFtN\",\"bw6kHP3k8dP2qBa5v\",\"fZjkX29nhRTWWb75k\",\"YFHkjbM6obMSj24zi\",\"82weQfHHmno4Mq4X7\",\"hB5mgzMwQSnhBzi7P\",\"GEzaJZ2cPjENT4ERQ\",\"TrquEHytntLKHA4m2\",\"FJzZTZo7CmAyN5ajr\",\"SvjHtnPsFwHMmyTpQ\",\"zKPtimGM7CLYNYB4S\",\"jyoLggHk8xQKZuoQC\",\"etoSR23iELGGgs9rA\",\"9xJpSQm6BFmgL3ee9\",\"xxxhm6QEkRpah4k94\",\"s36kjeSbP3n582KfG\",\"sA5fB2CwNgtz7xdwf\",\"Ctuq7Wc8QPQmzwPK3\",\"DzvdGwHEjqsX7wyKr\",\"rW8P2PA4vnT73BWmn\",\"5seiNqw6ZXoF2GRRd\",\"8zZ6xmzpiFair25qr\",\"hAfyZS5tx4r7m5cAS\",\"PaSg9dpK6JHre7hGF\",\"Yp7uvStL97cC9fKkY\",\"Zhy5X7BZnqk8hacEw\",\"B4pxRqzo43M7S8FbP\",\"tqSJxy6E4vaTyECkh\",\"DePiAS7u5Pk9d6SLr\",\"KxLMWekCxzy2Eem7u\",\"Y8fG59oLxqYKDNSsH\",\"uwkPQ7ZYQyyg6Qyre\",\"SmmkwyvSHT54PzB5B\",\"F4synR7Ea8yS2L576\",\"udjSmfH6yRHNtPM3o\",\"eWaq9hCBYq4oQYgEx\",\"AfMFW7KGW22bHWuuz\",\"WZujpe8yQAyZmpWHg\",\"tx8SEv7RZFhv7yPBi\",\"zeE9TvhkPfebAq9n8\",\"htXCitorobtqYymjN\",\"y6kfyYmydcD8tkBk7\",\"oMLSgpSFQnY4ui8cB\",\"zwruFCmuHkwJTpYqg\",\"sMMZEGp5gw9KS7MJv\",\"DkSMZ3jZLkwviKb9g\",\"GEDsDpNX4QMhZAxtJ\",\"Yom3RzkMYpweE8cbS\",\"RWqwvDdMSWctvc8eJ\",\"kWobGYgZWJxN6ZddF\",\"2b6HF4pYFGfAgxiut\",\"AeJSxRqw2dJZuGvdk\",\"P7zedbjaFw8YDzLz7\",\"Bj9Qvjt7MX2mGSuN7\",\"q2X5hMejrpAGGd3hW\",\"cR3ibTMxLyEdDFCHY\",\"yLPK3JbpNb4PrRdfa\",\"zundgKNvZNTNBuqyA\",\"4iMe865JrPvg2uaqA\",\"x33hp9hDFgNvFvcZL\",\"smuLDcXt5RcXQQMKZ\",\"wMvNbysArkmmqZBy4\",\"nW5WedCX7xLrM3Rzt\",\"osXNzc2aCxspRwheS\",\"LHJFnB3x2tX2gcnGW\",\"XDKtS2FxqtDkdXY5P\",\"yNjFvrdCksuKQCwwB\",\"MGCFdPCMFSvYjyuEf\",\"XYjJPoYXrkaHGWhZn\",\"BYNY9LLqCBykgMJsq\",\"9tZPMf8Ro5cimh22z\",\"RJs9HvrPhGkPoorL7\",\"AQg7HHPiSGpsT9PmY\",\"zbREcJDMGFPwDCww4\",\"Wjueam6YTQJtzokaj\",\"Xk2g4CNFAnYcvxiSr\",\"ck3hNJMAZn4esHvYT\",\"SFGosgfANS7JGZM5y\",\"unqDvXZkyrMDJ487f\",\"o2F4ykzNB5etBnuY9\",\"aCCr8Sja3Rdu2XWwM\",\"mBtSsKTHdQniYAfsZ\",\"SE5G2Caf3btnuGmz6\",\"vZssdJx9nMXaYyhMP\",\"TBamPvEAh6xARn8Kd\",\"YRzFyQomjuQxgRkqm\",\"yb8T3nuL4evaeJW6k\",\"BmMA5FBX7NKpLj8ur\",\"kuxkd9Rj2ejfusa7G\",\"yWpST7X3Jz4k7Xxxe\",\"ZXtJGFQN2pZMFFwQX\",\"yukjTWJFZvtb7oRLn\",\"C4XGWDw7Az87r29sa\",\"SGfN8fbMKsE9cisiD\",\"sfcLWja9uqmWkKRtT\",\"JPyytHLqTHJJquce8\",\"4CNt7akpT8YxgaPNp\",\"PTRYb5rBAmcdP4q87\",\"9wbf3G93EgpqMjN4s\",\"zCGb97rE5P7cZdfZq\",\"xE7ai8mCdSzBHc9Wn\",\"NHFup3ej5gJNbEkEL\",\"xLTGN8Mg7Q6mDWYDi\",\"c6r48kLhf9TGdgEcs\",\"RtGQTJYN5ToH3pnGT\",\"sNz6BLZnpKwgcTpkq\",\"Dyn6Mpjb2PzYxf2yn\",\"vYbiixSo94XccW3bB\",\"ZC7eHEmMYrJoojxx2\",\"SY5wqJS9RJYYMJ6sy\",\"pWp9qaqWFwmtmzvfr\",\"9pCPyhvQmbkWyD2LL\",\"HaMagR9t89nmjpRkk\",\"xAcWGSbMrDPthhBBs\",\"NKdW8Mc6fBe2BqRcZ\",\"fmNXmbqizQq4e3Jxd\",\"7htK223C8C2htMmsE\",\"Q4HXoXTabo2dKgxwy\",\"62Q2HcfLE6SGphZkT\",\"ZqjP4M6dzu32To33K\",\"Xav2ECWNwZgjnihdr\",\"K76HuQECiiihsmXP9\",\"8paynGt66tAKJivFF\",\"myPiB7Efg4e8kLtkx\",\"tcSy5M22X8SGfmxN5\",\"QXkrEiAuhuXaZmL4C\",\"g4NCSxxHqHCGMpWwT\",\"muXMnzQwGLzN6j2Jr\",\"ZMd8it647JSYTvx8Z\",\"o7kxgQupXQCTusjZo\",\"YcjwCvYut6834Jzd8\",\"5k2ij6wHTSzBpgCky\",\"DAQX9mhHdMTqyYbvh\",\"RhPg33AdzvSZmibXa\",\"vEN56nHw7hTxbyHhp\",\"kGukLA3PXkaiaXfbk\",\"f6uGKbmMdBYCjrMBh\",\"KbL2vGnn8ijcsQY5t\",\"uqnjMLLae4heAZNNe\",\"ENPyXmYYuQuZZAgRz\",\"cGebawowzCKcFn8gq\",\"zyi5hztfAPRFnazGR\",\"ZXWDtCrM9ev3439oi\",\"ZiN6yB9rACMaYgseC\",\"Fd9765rksgPK4E2Zy\",\"rWhXHhzF4W8bea6LP\",\"35FLKaQ7LJdA7pJZG\",\"EcKPDmD4GmeFJGDTL\",\"gpd8yji9GXJruAtje\",\"8AvGnwLnDrHXAwX38\",\"pi76g3eRpnKrhee2a\",\"bjKYBdDcGMRTfooBs\",\"ydF8Re5wK8MmaDbLh\",\"a777e8chPvJkY3tKa\",\"J7epB3qSQJ2E8vWkY\",\"7F3i3uNDxhZM6mckM\",\"6ehQMeGtrhnhot5zK\",\"gXTAie79kiw28tx5u\",\"JszPst3958te56jFk\",\"jdhRdQv6mESvDHuuC\",\"7gBLtxKryhTryH5zb\",\"NdLzb3BZ5J8ftnCkS\",\"cJmmvnmJSXvBXtydi\",\"PmfzvaX5ZJscpvHXc\",\"oMfq73A434YWhSuWQ\",\"mG8HqKiAQFTdRZthG\",\"P5BhjZxyeHQYTNyB9\",\"hhxjQREtmHSheH9Pj\",\"xv5obFhsxY93mqR5S\",\"jXTnL3JatkKjoifyb\",\"SfmXqCfDksMb883DC\",\"Q2u7eLt9YmNXjD9J7\",\"8Xx8nWXRydHDBGfQf\",\"unNqQjSHzkb4pCzEu\",\"tyLS9T6YMfg9fMtYJ\",\"gGa78GqXuPgmhqaGo\",\"Ym8AjbKGSJooun3nt\",\"RZhnfbL35u4CtQuqp\",\"BWqQ68pvNedARDcBN\",\"NQ4btGLfcvAnXjAyP\",\"gBGjCfJvPHswDM5JQ\",\"JwBT2xYDafcNG9eKr\",\"CNc6rmwhbxkxEhHAp\",\"M9fYmJcbxAvDWAaE9\",\"47PyFbZyxWuP9Bgga\",\"bWWFscsAr66ZWHo28\",\"uNK8tLSseShR8wcA4\",\"RsyMdtJZrD3drc5ex\",\"W56bWmpQeLJ9JEDsa\",\"m8RTLuXqmythXHYZt\",\"44arJN5SYx3HyfetA\",\"Yj7ftjzyP67R5NFrH\",\"2cdvd8yuPLSwvGj9w\",\"6eGNbCnp6kneyAdRT\",\"LCuvvWMwiGuqTwNRi\",\"ckXJ3aoagQg84P8Ah\",\"Wi4H6ayKsNDWWQCG5\",\"3SgSNoAB3sxaYeT3w\",\"btabi3PdyisuY5tn9\",\"f3RAbWvE6uESq7KE5\",\"QRv96jmNaYsWkxQEG\",\"GkYtSbQuheBF4Enys\",\"6jTDBK66k7qJunnJ4\",\"CFa83w8i4ymn4BEdC\",\"HbYLNEiTzigioYfT8\",\"zZfMwLuoERGmybgib\",\"buX4mCQhtXCfBjeno\",\"a6fgDQTddtZCKfnzR\",\"gbAGaynei4oA7DtWs\",\"xEX3TDY6C2h82dJTn\",\"d7PjwEf5Ff8W5eD64\",\"tdinF6MRzC6AdNX8g\",\"GaJNJwcdyB9ueYFst\",\"HsFc9PgmpP2X9Fwh9\",\"HXbTKW3jmmyRAsKrr\",\"5LDvZHCDJqePeBrCg\",\"4ySzqKC5s3ZRpG9di\",\"cCisAS7tXc9QYbDpA\",\"mfm3gB39arY8Rjb2y\",\"pYonfGP4u9HNL9Z32\",\"mfC226SFKrTCKDJGR\",\"wSWMpAHQ44G3AZhfA\",\"TA9dwvnSdta7rTynz\",\"D3ASM3aWpcQ8gvnin\",\"uw47663LqPME8btaA\",\"srJ34BaybkQh3qRkM\",\"rhS8qXRjZcpDXkwnE\",\"9WRAZh4hz26oAifhu\",\"uw8E83imJYpQiiPpP\",\"Cdj86NRxENM4jTXRD\",\"jCjCvyhqhpebkJn34\",\"Qv2jEtTnFCXX7cdd3\",\"emup3hXzjyYwX6Ekh\",\"qkxihbvqsxK3zYq4c\",\"afvP29FhRou2bTaav\",\"KMR6vNzvSKMA2cXnK\",\"Wqmbwt4n4CCxSL5Tt\",\"4otMMRJ9PJDHJGcfh\",\"KBfJFkYQ2RbnYd3hL\",\"3AmkPEiGKNaSFi9Ji\",\"unqzSsxpxj9sZ7rbD\",\"5HGyJtoZ3AffzAZAv\",\"nSLvkGEpiYCtcBLaa\",\"ckQwFFWyLXmDQAaCn\",\"JdHDJLKy4HoLtgFF4\",\"H3XLNCWB5yXt5YYXn\",\"nFbmNzMQ38TncmfQX\",\"YSKwko4rGTuY94R8Z\",\"r72oFMcCQh4rBsKHb\"],\"quality\":[5,5,4,5,5,5,5,5,5,4,5,5,5,3,5,4,5,5,5,5,5,3,5,5,5,5,3,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.678571428571429,\"family\":[{\"_id\":\"frC62bCthyjKKL9et\",\"language\":\"cpp\"},{\"_id\":\"xH7uvX2MoH8e85aYS\",\"language\":\"java\"},{\"_id\":\"3kcrnpHk7krNZdnKK\",\"language\":\"javascript\"},{\"_id\":\"4h4PuhPW9zffcXMfC\",\"language\":\"php\"},{\"_id\":\"2hsyXkzDRewGSPpPE\",\"language\":\"python3\"},{\"_id\":\"4SyG3CoQegWJ3Fjqc\",\"language\":\"ruby\"}]}}"]