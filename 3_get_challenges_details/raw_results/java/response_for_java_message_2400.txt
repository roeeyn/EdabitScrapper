a["{\"msg\":\"result\",\"id\":\"756\",\"result\":{\"_id\":\"jLbdG6YvkYCizS662\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n  public static boolean validName(String str) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":2.9411764705882355,\"familyId\":\"RtAkDWWtweqB4tj6i\",\"instructions\":\"For this exercise, keep in mind the following definitions:\\n\\n1. A **term** is either an **initials** or **word**.\\n2. **initials** = 1 character\\n3. **words** = 2+ characters (no dots allowed)\\n\\nA **valid name** is a name written in one of the following ways:\\n\\n- H. Wells\\n- H. G. Wells\\n- Herbert G. Wells\\n- Herbert George Wells\\n\\nThe following names are **invalid**:\\n\\n- Herbert  or Wells (single names not allowed)\\n- H Wells or H. G Wells (initials must end with dot)\\n- h. Wells or H. wells or h. g. Wells (incorrect capitalization)\\n- H. George Wells (middle name expanded, while first still left as initial)\\n- H. G. W. (last name is not a word)\\n- Herb. G. Wells (dot only allowed after initial, not word)\\n\\n### Rules\\n1. Both initials and words must be capitalized.\\n2. Initials must end with a dot.\\n3. A name must be either 2 or 3 terms long.\\n4. If the name is 3 words long, you can expand the first and middle name or expand the first name only. You **cannot** keep the first name as an initial and expand the middle name only.\\n5. The last name must be a word (not an initial).\\n\\nYour task is to write a function that determines whether a name is valid or not. Return `true` if the name is valid, `false` otherwise.\\n\\n### Examples\\n```\\nvalidName(\\\"H. Wells\\\") ➞ true\\n\\nvalidName(\\\"H. G. Wells\\\") ➞ true\\n\\nvalidName(\\\"Herbert G. Wells\\\") ➞ true\\n\\nvalidName(\\\"Herbert\\\") ➞ false\\n// Must be 2 or 3 words\\n\\nvalidName(\\\"h. Wells\\\") ➞ false\\n// Incorrect capitalization\\n\\nvalidName(\\\"H Wells\\\") ➞ false\\n// Missing dot after initial\\n\\nvalidName(\\\"H. George Wells\\\") ➞ false\\n// Cannot have: initial first name + word middle name\\n\\nvalidName(\\\"H. George W.\\\") ➞ false\\n// Last name cannot be initial\\n\\nvalidName(\\\"Herb. George Wells\\\") ➞ false\\n// Words cannot end with a dot (only initials can)\\n```\\n\\n### Notes\\n- A **term** is either an **initial** or **word**.\\n- **Initials** and **words** are disjoint sets.\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(true, Challenge.validName(\\\"H. Wells\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(true, Challenge.validName(\\\"H. G. Wells\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(true, Challenge.validName(\\\"Herbert G. Wells\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(true, Challenge.validName(\\\"Herbert George Wells\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n\\t\\tSystem.out.println(\\\"Name must be 2 or 3 words.\\\");\\n    assertEquals(false, Challenge.validName(\\\"Herbert\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n\\t\\tSystem.out.println(\\\"Name must be 2 or 3 words.\\\");\\n    assertEquals(false, Challenge.validName(\\\"Herbert W. G. Wells\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n\\t\\tSystem.out.println(\\\"Incorrect capitalization.\\\");\\n    assertEquals(false, Challenge.validName(\\\"h. Wells\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n\\t\\tSystem.out.println(\\\"Incorrect capitalization.\\\");\\n    assertEquals(false, Challenge.validName(\\\"herbert G. Wells\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test9() {\\n\\t\\tSystem.out.println(\\\"Initials must end with a dot.\\\");\\n    assertEquals(false, Challenge.validName(\\\"H Wells\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test10() {\\n\\t\\tSystem.out.println(\\\"Words cannot end with a dot.\\\");\\n    assertEquals(false, Challenge.validName(\\\"Herb. Wells\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test11() {\\n\\t\\tSystem.out.println(\\\"First name is initial but middle name is word.\\\");\\n    assertEquals(false, Challenge.validName(\\\"H. George Wells\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test12() {\\n\\t\\tSystem.out.println(\\\"Last name cannot be an initial.\\\");\\n    assertEquals(false, Challenge.validName(\\\"Herbert George W.\\\"));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"For this exercise, keep in mind the following definitions:\\n\\nA term is either an initials or word.\\ninitials = 1 character\\nwords = 2+ characters (no dots allowed)\\n\\nA valid name is a name written in one of the following ways:\\n\\nH. Wells\\nH. G. Wells\\nHerbert G. Wells\\nHerbert George Wells\\n\\nThe following names are invalid:\\n\\nHerbert  or Wells (single names not allowed)\",\"tags\":[\"regex\",\"conditions\",\"functional_programming\"],\"timestamp\":{\"$date\":1568058079162},\"title\":\"Valid Name\",\"stats\":{\"completed\":{\"total\":39,\"ratings\":[3,3,3,3,3,5,3,2,5,2,3,4,2,2,3,1,1,4,3,4,4,1,4,2,4,1,4,2,4,1,2,4,4,4],\"rators\":[\"FocLpCB2WEiK2gGni\",\"3pdgguqZgNDSAJSGm\",\"FvWKuSqHdXZ7HM2sD\",\"YWnFYSYAv4jbY4Mmc\",\"sxci7DYKNa6q22Sjq\",\"gofo35rKkbyPH9jFq\",\"ZiozQXopCXKLkQMfC\",\"CLmJduqJHX83dM4Pd\",\"ggR2uZsqfm3zqqxJy\",\"Md3zwe6ZCp4vqdx5j\",\"qzFMJGxMErfBhExMm\",\"J9zJq7PMGb6mqzcHW\",\"95AcxnRfyjcryzgmz\",\"XF53HNNeDGQCbThEb\",\"4RHx3H8EwP2oboW8e\",\"AyrEvM2GLX2jqM772\",\"rehehi2Tr2mwaEoJE\",\"Es4eX2stRpyoXeC7f\",\"kGGamksQeCehQDgop\",\"gGnDsJz5hr2t9MKCF\",\"auMqvWdfF3X9BPR8k\",\"TrquEHytntLKHA4m2\",\"62Q2HcfLE6SGphZkT\",\"jyoLggHk8xQKZuoQC\",\"pSe3nWbyAbZKEdZdB\",\"Ym8AjbKGSJooun3nt\",\"9RPK7inRF9bnkkuNd\",\"JXzLQnLRChtrgKDe8\",\"gXTAie79kiw28tx5u\",\"EwXYEZ8cEtEThuTXC\",\"6BHzuTwcZqaRtf7CH\",\"mDWNyaaQ9hvPCRzSd\",\"wicSXrux6WdgCdmY4\",\"KMR6vNzvSKMA2cXnK\"],\"quality\":[5,3,5,4,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"isHidden\":false,\"quality\":4.4,\"family\":[{\"_id\":\"aZBfsFhLZmE384E5m\",\"language\":\"cpp\"},{\"_id\":\"pcHzxfGheeNE4JDpR\",\"language\":\"csharp\"},{\"_id\":\"jLbdG6YvkYCizS662\",\"language\":\"java\"},{\"_id\":\"xPBFGvKQfRFEyy4vx\",\"language\":\"javascript\"},{\"_id\":\"28wYr5mXCa5hMimHZ\",\"language\":\"python3\"},{\"_id\":\"yhm3AinMBWtygkWYM\",\"language\":\"ruby\"},{\"_id\":\"qxa32yuNGHxiST8mj\",\"language\":\"swift\"}]}}"]