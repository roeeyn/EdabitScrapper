a["{\"msg\":\"result\",\"id\":\"193\",\"result\":{\"_id\":\"8hk27ha9CtqCQsYP8\",\"author\":\"Nathan Hohnbaum\",\"authorId\":\"Li55JB322ZcMFGna8\",\"code\":\"public class Challenge {\\n  public static boolean adjacent(int[][] graph, int node1, int node2) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":1.0899742930591259,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"cbPksJ5fxkCAmYxbJ\",\"instructions\":\"A graph is a set of nodes along with a set of edges connecting the nodes.\\n\\n![Graph Example](https://edabit-challenges.s3.amazonaws.com/adjacent_nodes_1+.png)\\n\\nGraphs can be directed or undirected. In a directed graph, each edge has a direction whereas, in an undirected graph, edges do not have direction. The graph above is an undirected graph.\\n\\nTwo nodes in a graph are adjacent if there is an edge between them. In the above example, nodes 0 and 1 are adjacent, but 0 and 2 are not adjacent.\\n\\nWe can encode graphs using an adjacency matrix. An adjacency matrix for a graph with \\\"n\\\" nodes is an \\\"n * n\\\" matrix where the entry at row \\\"i\\\" and column \\\"j\\\" is a 0 if nodes \\\"i\\\" and \\\"j\\\" are not adjacent, and 1 if nodes \\\"i\\\" and \\\"j\\\" are adjacent.\\n\\nIn the example above, the adjacency matrix looks like:\\n\\n```\\n{\\n  { 0, 1, 0, 0 },\\n  { 1, 0, 1, 1 },\\n  { 0, 1, 0, 1 },\\n  { 0, 1, 1, 0 }\\n}\\n```\\n\\nYour task is to determine if two nodes are adjacent in an undirected graph when given the adjacency matrix and the two nodes.\\n\\n### Examples\\n![Graph Example](https://edabit-challenges.s3.amazonaws.com/adjacent_nodes_2.png)\\n\\nAdjacency Matrix:\\n\\n```\\n{\\n  { 0, 1, 0, 0 },\\n  { 1, 0, 1, 1 },\\n  { 0, 1, 0, 1 },\\n  { 0, 1, 1, 0 }\\n}\\n```\\n\\n- Nodes `0,1` should return `true`.\\n- Nodes `0,2` should return `false`.\\n\\n![Graph Example 2](https://edabit-challenges.s3.amazonaws.com/adjacent_nodes_3.png)\\n\\n```\\n{\\n  { 0, 1, 0, 1, 1 },\\n  { 1, 0, 1, 0, 0 },\\n  { 0, 1, 0, 1, 0 },\\n  { 1, 0, 1, 0, 1 },\\n  { 1, 0, 0, 1, 0 }\\n}\\n```\\n\\n- Nodes `0,3` should return `true`.\\n- Nodes `1,4` should return `false`.\\n\\n### Notes\\n- Graphs may have between 0 and 25,000 nodes.\\n- Time Limit: 100 milliseconds.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"import org.junit.*;\\nimport static org.junit.Assert.*;\\n\\npublic class AdjacencyTest {\\n\\t\\n\\tprivate static int[][] graph1;\\n\\tprivate static int[][] graph2;\\n\\tprivate static int[][] singleNode;\\n\\tprivate static int[][] completeGraph;\\n\\tprivate static int[][] noEdgeGraph;\\n\\tprivate static int[][] largeGraph;\\n\\t\\n\\t@BeforeClass\\n\\tpublic static void setup() {\\n\\t\\tgraph1 = new int[][] {\\n\\t\\t\\t{0,1,0,0},\\n\\t\\t\\t{1,0,1,1},\\n\\t\\t\\t{0,1,0,1},\\n\\t\\t\\t{0,1,1,0}\\n\\t\\t};\\n\\t\\tgraph2 = new int[][] {\\n\\t\\t\\t{0,1,0,1,1},\\n\\t\\t\\t{1,0,1,0,0},\\n\\t\\t\\t{0,1,0,1,0},\\n\\t\\t\\t{1,0,1,0,1},\\n\\t\\t\\t{1,0,0,1,0}\\n\\t\\t};\\n\\t\\tsingleNode = new int[1][1];\\n\\t\\tcompleteGraph = new int[5][5];\\n\\t\\tfor (int i=0; i<5; i++) {\\n\\t\\t\\tfor (int j=0; j<5; j++) {\\n\\t\\t\\t\\tif (i != j) {\\n\\t\\t\\t\\tcompleteGraph[i][j]=1;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tnoEdgeGraph = new int[5][5];\\n\\t\\tlargeGraph = new int[25000][25000];\\n\\t\\tlargeGraph[5000][20000] = 1;\\n\\t\\tlargeGraph[20000][5000]=1;\\n\\t\\t\\n\\t}\\n\\t\\n\\t@Test(timeout=100)\\n\\tpublic void test1() {\\n\\t\\tassertTrue(Challenge.adjacent(graph1,0,1));\\n\\t}\\n\\t\\n\\t@Test(timeout=100)\\n\\tpublic void test2() {\\n\\t\\tassertFalse(Challenge.adjacent(graph2,0,2));\\n\\t}\\n\\t\\n\\t@Test(timeout=100)\\n\\tpublic void test3() {\\n\\t\\tassertTrue(Challenge.adjacent(graph2,3,0));\\n\\t}\\n\\t\\n\\t@Test(timeout=100)\\n\\tpublic void test4() {\\n\\t\\tassertFalse(Challenge.adjacent(graph2,4,1));\\n\\t}\\n\\t\\n\\t@Test(timeout=100)\\n\\tpublic void test5() {\\n\\t\\tassertFalse(Challenge.adjacent(graph2,0,0));\\n\\t}\\n\\t\\n\\t@Test(timeout=100)\\n\\tpublic void test6() {\\n\\t\\tassertFalse(Challenge.adjacent(singleNode,0,0));\\n\\t}\\n\\t\\n\\t@Test(timeout=100)\\n\\tpublic void test7() {\\n\\t\\tassertTrue(Challenge.adjacent(completeGraph,0,4));\\n\\t}\\n\\t\\n\\t@Test(timeout=100)\\n\\tpublic void test8() {\\n\\t\\tassertFalse(Challenge.adjacent(completeGraph,2,2));\\n\\t}\\n\\t\\n\\t@Test(timeout=100)\\n\\tpublic void test9() {\\n\\t\\tassertFalse(Challenge.adjacent(noEdgeGraph,4,0));\\n\\t}\\n\\t\\n\\t@Test(timeout=100)\\n\\tpublic void test10() {\\n\\t\\tassertTrue(Challenge.adjacent(largeGraph,5000,20000));\\n\\t}\\n\\t\\n\\t@Test(timeout=100)\\n\\tpublic void test11() {\\n\\t\\tassertFalse(Challenge.adjacent(largeGraph,21413,8079));\\n\\t}\\n}\",\"language\":\"java\",\"stats\":{\"completed\":{\"ratings\":[1,1,1,1,1,1,4,0,2,1,0,0,1,0,2,0,0,2,1,1,0,1,0,1,1,1,0,1,2,1,0,2,0,0,1,0,1,0,1,0,1,0,1,0,1,1,0,1,1,3,0,2,1,1,0,1,0,1,0,2,1,0,1,0,1,3,1,3,1,0,0,1,1,0,0,1,2,1,0,2,1,1,1,1,2,2,2,0,1,2,1,1,2,1,1,0,2,0,2,2,0,1,1,1,3,1,1,1,0,1,2,1,1,0,1,1,2,0,1,1,1,1,0,0,2,0,1,1,2,2,1,0,0,1,1,1,1,1,2,2,2,2,1,0,1,2,2,0,1,1,1,2,2,1,1,1,1,1,1,1,1,2,1,1,1,2,0,2,0,1,0,2,3,1,2,0,0,0,3,1,1,2,0,1,2,1,2,1,0,2,0,2,1,0,1,1,0,2,1,1,0,1,1,0,1,2,3,1,2,1,0,1,1,2,0,0,2,1,0,1,0,1,1,0,2,0,1,0,0,1,1,4,0,1,1,1,1,1,1,1,2,1,1,1,1,2,1,2,1,1,1,1,2,0,1,1,0,0,3,1,0,1,0,3,2,2,0,1,1,2,1,2,3,2,2,2,2,1,0,1,0,1,2,0,2,1,2,1,1,3,1,1,0,2,1,0,1,2,2,1,2,0,0,1,1,3,2,1,3,2,1,0,2,2,1,0,0,4,1,2,1,2,0,2,1,2,1,1,1,1,2,2,2,0,1,2,1,1,1,3,1,1,0,0,2,1,0,0,2,1,2,1,1,3,0,1,1,0,2,1,3,2,1,0,3,2,0,1,1,1,3,1,1,1,3,1,1,1,0,0,1,0,0,1,2,0,2,1,1],\"rators\":[\"Li55JB322ZcMFGna8\",\"NjnPrCrnMkqYTjK2Y\",\"YFHkjbM6obMSj24zi\",\"rvojHhKH3DaxotefQ\",\"a49eNnfRwSMxsDJXf\",\"g4NCSxxHqHCGMpWwT\",\"jyoLggHk8xQKZuoQC\",\"35FLKaQ7LJdA7pJZG\",\"Fd9765rksgPK4E2Zy\",\"pnfkp7Mx9Y7Zi32Xj\",\"cGebawowzCKcFn8gq\",\"hQDpXBtqZMzxF779Y\",\"YDu9cJ4koo6nqtqAt\",\"fEFZag7uK6ig4EeGf\",\"qvNk7pHSveLu3jqWw\",\"muXMnzQwGLzN6j2Jr\",\"ShehCDEoKewqBMToD\",\"Moa2JSbg9NjdbcAoG\",\"Yom3RzkMYpweE8cbS\",\"fRYcPHuyEdqngMzC4\",\"yXGiiSAR5nBHnH3yr\",\"AeJSxRqw2dJZuGvdk\",\"PmLBjHubwE8bn2era\",\"xv5obFhsxY93mqR5S\",\"K22DPvEdwdbAAgFP5\",\"DujoznBJ9GhJcykXk\",\"ik4NsAds8ENwKguMg\",\"n5wubRfh6zh8QRymN\",\"ym9QoPjcs5PGo6Dfw\",\"8AvGnwLnDrHXAwX38\",\"9ty3Xe2fBFtMvnyB6\",\"TrquEHytntLKHA4m2\",\"RBgg5FD3CusQFb3HH\",\"C9KWe7pLoD5x7bciE\",\"jZowfp9N5RdPmMhdw\",\"XXbMk3rFhMYLQ9zK6\",\"e9ehyXssQjM4xqCsK\",\"xF6XjdDHS5G2JYAvo\",\"bvPmwuN7mvNfesHGe\",\"z8J5tPSgqJpEYKus9\",\"CcrzjH2mK2rC4gvZP\",\"Wsoj7X4AhMwMqtYMC\",\"b4ij7gud8eWptYib8\",\"ew2x4gi9BTe7vH9vL\",\"Pax7QeaJfQD9Ctxx3\",\"B2ZFov4kmupYYzGav\",\"N87YWXcGYFCZg3Kfj\",\"ygmKmjF4ja52BrNMR\",\"72p63TZfPFQBZgQia\",\"5D5R22D4rv88Ks7Yn\",\"NdQYDnatGiSYeyCZs\",\"jgn6YAkQTzoNTcmxN\",\"XxxugWAZdnohdDSJD\",\"gpd8yji9GXJruAtje\",\"xEFEZ3gqjjfHWYDAy\",\"ywvgseH8iGoqTccyd\",\"ArJyxuBsNRvZbnkZ4\",\"HfHX644FWoTbifSCX\",\"YiCzzqH8jq5jNmE6K\",\"sRhBxRrbfHMGBYuf9\",\"u4dahDL298kihkfyX\",\"ByQ389Li8FDs2zxpt\",\"rSQ3XWHnKATFediza\",\"kpkFfDRqNfz4AQaTp\",\"atoaueKH9frkBNCqA\",\"Za3F5gGPy2Rzp4rfG\",\"cGXpNXagsz9LCqMBS\",\"ckTX8vkiMnYbriLvu\",\"eE2sRJZKiDNvGs2gR\",\"BxgFErrhhNWtBfLRm\",\"NxG2NCG4XdxYgaH6b\",\"kTZHvzFwJEiRGK5iH\",\"XqCezh9tkEKaKJopQ\",\"FzXZHmji9hCtRk9QK\",\"Hmm3rbADK2G34p574\",\"eJdPmGAiAkRQft4hk\",\"zKdb3cDytehHruckw\",\"dREm4JW8CqKBX3XpZ\",\"tgA58ryNTT4MLe857\",\"4sA7sbNviGRdkApYa\",\"Jispny3zgXyWsReWX\",\"RWEG66jLaG4jBXqCJ\",\"jucDqRKCYsNNysJBP\",\"CGdPn7sK5oq3tqEs8\",\"p2fmZdcTvnC7657Et\",\"dvJ32uSZr75WmnXuS\",\"2ZyE8mq3cJWTWSH8v\",\"j57vzDjAtSAewsyTz\",\"cLa38sZL6ir75dX63\",\"mPMyydAz2ajbDTefp\",\"HHgPSwC2M4j3QJG8i\",\"cZEvkT8Jucj9ioxTz\",\"ZgW8KbHPhP2ziczLd\",\"QTxZPwJg5GPmgpGFH\",\"44arJN5SYx3HyfetA\",\"QjS3SRXLfnbj9auo2\",\"JszPst3958te56jFk\",\"waWqFC5W8QpFZjSv7\",\"p5HusDDANd3XPK8ua\",\"jNpjA7aEHotyGsyDp\",\"yiHCqsJuZLL6eMNuF\",\"NmXQLCQrGuEdJMqj2\",\"hFRCFsDkDEmC4CkdZ\",\"x8fFYdCTnNHtW8yht\",\"anCnFcEPYrWMEErtm\",\"dKm9fMwWTBcQCn8kN\",\"znAEtihFCYiPRpSQP\",\"zqQgmN5oecQ6whQ4q\",\"eHTHv5FyLkpGTBJJr\",\"LdXtS99v6KwYcFxSY\",\"EfrK7Prsam9RWKYKf\",\"wqxfB3eHCHtywtG6w\",\"mp8TamfHqphgK8Ytx\",\"vBgCh6uvCZXscLEoZ\",\"4JetgdEAwnerdziCR\",\"ihckPFaJPsSZjByCq\",\"jDAJ3yWXk8j3msFAi\",\"EQiGGAAZTLtn2Do2X\",\"RBuDCwKpz3ET9ghLL\",\"6asyTYvz7kMPee8Tz\",\"7RZ4NjEY7khHvEesM\",\"cueHAmTrcWuowXf58\",\"E3rny3dwRZGhcBQcm\",\"d2opZwudxKaK2QSna\",\"D4yfH3PX6Pgo4Gguz\",\"j7T4xdwLPdWW3ChTg\",\"prm3hfqgfiH8P7Khg\",\"Es4eX2stRpyoXeC7f\",\"tigw3HA9nYyrx9a53\",\"axeiA5Qid9sTTQ69K\",\"JsxTdpYGs6cotoPgF\",\"GD3he8rG7mstnb5Z5\",\"wbrbxRHH2MXLNEXhv\",\"nxiDPaEz3apW62P7h\",\"xyMMce5wWheTLJMzP\",\"RGA2pQiwWZWGXceSK\",\"oth47e7A8TopBYdjr\",\"rJJJ2Aai6q7xh6m8B\",\"dZXEio7Dpzhk3hwdq\",\"vMZA3Y9P6gm2cfnKD\",\"HvEjeFnHuLq4FypyK\",\"J7epB3qSQJ2E8vWkY\",\"hhxjQREtmHSheH9Pj\",\"gBGjCfJvPHswDM5JQ\",\"xccpBNqmFPiimbfe7\",\"5rgjF7DuBHfv2iLe7\",\"B6Ptdi8TGQNdmP6SE\",\"hW7qdHPQe7iGi4LaZ\",\"Zs2ozzZQJk6h88o3H\",\"78QQHCFX9sGMp9964\",\"E2F9MvLJvQ7TNPwHR\",\"26g7ueRP2WSNSz3j5\",\"NHmE6iMcaZXkwD6ER\",\"imoBtf38GfT2yANWt\",\"NXv3589SCemdtvCf4\",\"6ehQMeGtrhnhot5zK\",\"HoikYeWdWCBFtKK2p\",\"dPeaG87LMdYeD5xLB\",\"x3WsGCnE38anLjJqh\",\"eq6bWgNCAXLkFj4tx\",\"X3PHKSLvHR5DEo8G5\",\"xumDNDGLDkyEdWKEB\",\"k2BARimRgT876KPyy\",\"2xFvy6u3hE4LtCXMD\",\"j8SR6Gnb5eNqjgPRg\",\"WCzQQBMRed529mo8S\",\"w2AvcG3pYjn5Kz3WG\",\"2cdvd8yuPLSwvGj9w\",\"8wkQj36S6ZCH5u8d3\",\"q4sXticYdEySnqh9D\",\"bEjYKwjys76i5AhSm\",\"QDmwxadNbnh9K9wuE\",\"WBH6KXHfWKt9hugHB\",\"WmHdrDgZfzSZwr2Ak\",\"M36xbxu8MRjCBdSk4\",\"wQ47dfWNd3bkckEyF\",\"8ZuiZCcHw2fHyxdED\",\"qvRjcYceudwRSz7hk\",\"incG8tH2dwThHg35f\",\"7gBLtxKryhTryH5zb\",\"RMFRyHbB3HKYnEAmZ\",\"aZnFdJMvjZK7e9z8R\",\"7k7Dhxkjbb4nYfkQc\",\"Rn5YNvYdY468a7vRp\",\"macWj75ys6WK4LHpN\",\"32uy2LgegdmLGpebX\",\"P55SmDXh6b4eiRJsf\",\"GpRqxKWAj3L5bZPwS\",\"2gigq5ge95e4u7akH\",\"hKXdFwrcGY3kTX22j\",\"rcvmayp8iSXxxEyMj\",\"pEhomqRL5nDRcvbYo\",\"498ezAGjFmzRPgJav\",\"izdAHuFQcWY2pa3YG\",\"CoL9uMhyPh8GCLjF2\",\"s6CePt3SrZTSzxy5s\",\"EiMiWQuPKQmWLt3yy\",\"pH6LbLZqi8swjKNwc\",\"vksEpAe2hsFaPeQw3\",\"M5aoXxZt2SSszvfus\",\"bgL969emuaMZPnpeQ\",\"zgEo6Cw4AapDcBrtv\",\"HaWYTmbC3CuQdjw6B\",\"Go5CNXfgCMACyHNa6\",\"FZpkzRYd2bCqB8DEi\",\"QMSZe5EBKFKSkRPv4\",\"Bh4q4XStLFDXh4Tsj\",\"dCPjhoqq2wgxC4L5v\",\"Fqkiyu658SqKjw2zw\",\"k8yJnkTqSWfgKAfZW\",\"M3fTYWJX2hb3vuEGJ\",\"3oZKDoY9FdANBZJqM\",\"EuG5ESgzcJ5itKf8q\",\"FeCN9HXLdYFEzTC73\",\"GPHWiGTpSapGCN5tv\",\"thA79neuEcM3J8ZHr\",\"nrvsg4NzCr6myezF5\",\"etoSR23iELGGgs9rA\",\"AdmEZ3hvEs4bfwofu\",\"agReopRiQqrFmPMrS\",\"2NukYXAoNkuK6PBsK\",\"okRHHcgPnZcTgGoqf\",\"CoEamPmmpgNQY3uSo\",\"hPsKex7yhvKyu3qSR\",\"vmKG9psxmRcoZMtow\",\"DM6xrFP5pzY7SimbS\",\"wb2TgNPXdATasXZh9\",\"cJmmvnmJSXvBXtydi\",\"j4PjysAFWwvqM4dBR\",\"RFHHHZ4ET4vpWijRe\",\"xr2jJsTNfRgxkCRLu\",\"wZ5BAzSENtS2jn3n4\",\"RQL2PAWda9Bh79GNi\",\"fEyo577DvG6E3Gdeg\",\"YuRnAAhqjaHg8ZcRT\",\"7tS92WxCDr2TxY6nZ\",\"NdLzb3BZ5J8ftnCkS\",\"GJ2EZBh34pMwjNANw\",\"KnPDaXuCY5iwrXBne\",\"5hKzt94TfMaCkz5eT\",\"SjinC2jbSfuCEshuC\",\"E89C9aYgA6Lenwjau\",\"JXzLQnLRChtrgKDe8\",\"SjtxFcT7wzJdQeonE\",\"sJuq37PFQozqB4C7k\",\"wWQeqN3yeyS26twni\",\"k66Tx5vNCHFXgkMAG\",\"mG8HqKiAQFTdRZthG\",\"2WWDDLRAJFMkFfzxC\",\"jhEgpqsboiWai8sLJ\",\"PmfzvaX5ZJscpvHXc\",\"yuAHgMXRcbo2qBwEY\",\"A7jCWrFZzCATJ3Qgm\",\"GjEqfC7sJTTuJfdjn\",\"p8qqFdJ3FSk5x9z3G\",\"pwhZRJxqCK6kBgSNP\",\"KnHhyinXZRDb4zQib\",\"vvyFd3Kz5LytomJhm\",\"2Kzz5CubctKWfpPBp\",\"GvGvDGdGKPB4cgz4k\",\"cwLWyW66XPpNvYbCB\",\"YfBGoG6ta4DJDjxdo\",\"ytPP5DYuxAJgEX9Qu\",\"8Xx8nWXRydHDBGfQf\",\"Bu8oeMDSEwDXA2xcN\",\"vDw7QfSKk7sM6zgek\",\"P5BhjZxyeHQYTNyB9\",\"LP9R3NfPdHviZb4Wz\",\"zTM2NbjE6q5Q2HSeF\",\"n4WMs2BHoBQ8xnhJP\",\"PMGmgmdauMwmryRyZ\",\"S2yQ6goAZCCjRapeA\",\"2wS9Wm3Nj5ZFcMnfA\",\"Jqff6k8u47t5uHq6W\",\"Yp7uvStL97cC9fKkY\",\"47PyFbZyxWuP9Bgga\",\"oRQHhfzngBcShmRd4\",\"tzw3HZGwwPNYeWKFb\",\"wjZniEPaDGdPQMCAa\",\"d2WEAvExAn8wkAhFq\",\"MMKdMr5kMQTJyi9H7\",\"JcWcc4CxsewFPfse6\",\"F7LpNcPfPaTCnLFAk\",\"Dbh3nKmTYgS4uY9hi\",\"zE46SymvixkeFJmPM\",\"ARZHaFWfam7cBfGXu\",\"974cv448kw6Wu2JF6\",\"TyFjnDYYPehGGyePy\",\"rRzbwZJnDBojLfHh9\",\"bTR7uwnYaoQEmtNuC\",\"KyCooJCyenw9NaZ37\",\"2oawLd6i6tW5iJiGk\",\"kc8THAGNAT2Xt4nMj\",\"gjSJcfrWyf2dfBmwt\",\"arsuGN4JCiHmLuwve\",\"iQdFYSK9Zrq3hNDL4\",\"6rzGhrRNt4Z9d7heN\",\"pxJyeKQWL97wDJCkD\",\"Ae7ohkKXDQnFaKrCZ\",\"B4iApGZBzBAER3Ndu\",\"JgZ8F69FQfxYHn8dY\",\"89m2vBbM7Ngi2iStZ\",\"QkXrXMbMmXwrp4a9G\",\"sKfrD9gjCDHuqLzSk\",\"a777e8chPvJkY3tKa\",\"agfffmPm5ed9N46qe\",\"pSLDXFAgYgB2dRSGM\",\"BDMzcwipsJSLoaRKx\",\"nBM3DL5domLDNPthy\",\"wGbuZ9Es3tMmiQcjp\",\"R9k3kpgzXHLgaQddY\",\"BB67ccn9NqbXnAJMg\",\"aacopePWbY2oMo28G\",\"uSN9hAGJcPWLtxrWW\",\"Qaegdr4mEd9CGKwD6\",\"ikxSkiQjCjYPsFwMT\",\"fhFZp6Frsw8higEJ6\",\"gXMa6htD76huKZjoX\",\"mC2wc4yBvPDyLKnrZ\",\"o5ckv3jbn6EqSsn8J\",\"ezc3WTkPc24CdmC5w\",\"7v5XEd4wjiJjwSHio\",\"re7hXtKBaTY3NhiiH\",\"cDPaq58eA3vg3vBs8\",\"4nMm5uxZxCriJaoHP\",\"Y8W44pthtdrCbQD9i\",\"AnrHfMhXM8yFYWk8q\",\"LJGFQaQRtypPdnDJ9\",\"v3ixrvrFAvmyKEJ9Y\",\"DkSMZ3jZLkwviKb9g\",\"JrP9JvEzaKGbtwXYn\",\"vYPswsdQTRnNQnTZ6\",\"GkfnGwihxN9vG7XtC\",\"9o7Sp5AvxK75cQ3jD\",\"qJTbsuToGEtaYnGxn\",\"xurSB9eih5YAbTBRk\",\"9BfaYoy8PtvLn5oNA\",\"CNc6rmwhbxkxEhHAp\",\"WA78YvYQLmYo3uoDp\",\"pj56bybZeAa4Xbdn4\",\"pSK5gtEje6Mod9kfQ\",\"SDSvWibEfFvh3mFaQ\",\"aYJiRW3nmx5Bvbt3c\",\"cYcENRkajQioCLH9u\",\"JwBT2xYDafcNG9eKr\",\"p2woPCQKXuWJCwffJ\",\"FPTgjq42wh6PqpqSE\",\"mQCQNauuBvtmnrCLT\",\"Se5eNsjL4k6GywDzb\",\"RAEFpazbe6mhx3PLb\",\"MPSCWfTKsxWsG35hS\",\"FCkjDL4WAu3d6rAkC\",\"serop9pWd2qGEvmiG\",\"QDvk9vypcH3q2Gn2q\",\"KC26mKfGmDeRmZgYC\",\"AJHZbRMz4rG6XzzhR\",\"GSEzKfHb2Lb8hrPTp\",\"ofp27oRTiTbr2hMkD\",\"6YAeQueNMLugbc7P6\",\"uNK8tLSseShR8wcA4\",\"ckMvGF5TAyCwcxJBm\",\"vTkAh25siRQwqwBjc\",\"xu2Zm9ktz45LtiJZr\",\"NkNpfZLmo7hM3s9ZC\",\"G2s27Cj4754ctPnjb\",\"c2JD4t5wsGyucJXrd\",\"mcEqgH8rRyFtzGMhm\",\"uvjojfu9nKd5s4eLW\",\"avhzK4MrvB5jw3YDN\",\"hseQSt2EJ5uvb2pQv\",\"mYtKxYPbLLnePeJH3\",\"LyjAXuPdiJgBJo8MK\",\"pDnsPxgLcDA3zo37q\",\"8g84R5E4vx4YTJeF7\",\"PRTz2tCSYtrHkmr6w\",\"rgdtzmKuRpMz8qDti\",\"EzE4vJXrBCZJM35nF\",\"kHxzdqRMW2KCCDYAJ\",\"udHFfcqNNej6udnpP\",\"2ptN2mhjFwFcHyPZd\",\"b9CM7WADtLCiRZnAk\",\"kNM9TYEJhjApd2cHi\",\"myB4BS5fxL5TwtezK\",\"mktrnDtbDBckRAqyf\",\"RacQhqA4J8rPW8Yto\",\"QAeGp6MWj6fMBMyrE\",\"xKa6YPfNbpdEoMk2X\",\"8DfhSneJpsw5uqLeM\",\"NMQa4G7a3mXnrEbRA\",\"AK74g2wkFLuAqmnbx\",\"bc2GyS4wrrowsz4yi\",\"GxuWob6iRRhKWMqum\",\"m8RTLuXqmythXHYZt\",\"d8wAPmRmMs9BHq6HD\",\"4sgk6upoqFaTfExYq\",\"8n4ajMrpA6Mhb66Y9\",\"bWWFscsAr66ZWHo28\",\"3Qm6aPSprCpZCBRLw\",\"SGqPNztY2XdkjMWjS\",\"wrYbGuhfFbNjwEtim\",\"Ls7bnXHpaz6c35kgm\",\"XBMHYkiqQFz6CA8rQ\",\"b4G4kQ8LCw5T74pJP\",\"MSa5iqebmdK5C3Bpx\",\"2bemiz7sjLjCbA5ui\",\"STAZWrmtsNXun5pGd\",\"LrgQT4bdiLbHrprXu\",\"tjNvx4RRdFoxErX2x\",\"2CLvCKwQvRQC8NHXp\",\"7neGYbwRAanLxXYTw\",\"ZWts9XuY6A8frD4q5\",\"6TYA325y68cEZjSvJ\",\"YzLMKaHE2cyZYKxLe\",\"n5wDeHeT4fvkm9a6x\",\"oAkFsPut4ffdJgE7b\",\"MR7L45kztFJ7S4u7p\",\"awz3fmxRHXYuvuzNA\",\"K3aEDvyi6QkyL6EAM\",\"z3uqxi6bAeP44KvQm\",\"829hjxML68bmghqGs\",\"GocWWCw6sQHtWLQdP\",\"BuSF8Y4Xhk4zruWxX\",\"FWZDMMbSHrd7mheWR\",\"h6N5uf2uwfyYgf7eJ\",\"6ZAczeJ2FMhP2FTyA\",\"ErK367e2yFdpomoeb\",\"sQAwWBiEa4KfczqQt\",\"btabi3PdyisuY5tn9\",\"uFfEio8nzDvL8emhp\",\"rLXCFPv7sbfogDSss\",\"vckHpeQtdEAajXb2E\",\"8KA5vySzM635xBATM\",\"neNNSEbgzx79GYshu\",\"FszrsxxfriszqeeoJ\",\"JeSHEyHLRmScypBNw\",\"XeShbwrTgMvwkyFbv\",\"aXGZ3jouhzNhHkRTG\",\"W7y7LSAarf7etXxga\",\"8BFSTCnoe2QggN64c\",\"ZLQ7dapjoCMPDr2Eg\",\"aq2YAsdDwNLr85KTZ\",\"P3ySXanZGxGkPHHuT\",\"2ZFoLTxcCARhwc8xX\",\"KZDZZTSx8CDJ38QqB\",\"g5Nzyt998GBpW7ciK\",\"WogXRtWnLCYKs6XbH\",\"GBLXSzmKSde6y2bsy\",\"dQsSP7QzCtDSM2iqz\",\"zgLP69wEHy63DapBe\",\"2cMqsHnrvuTYNMBeE\",\"L7vb79CJPprRuQQpw\",\"BLYfHaSKNdPhSKCjp\",\"8QG9gozitGWcmqgXe\",\"XQS4jE76BQZxd8xqB\",\"AFnzzwCbnFvtQaAp9\",\"cdtMyz6o7hi2ASfgr\",\"g7HQ9qzY83f47MrSL\",\"oGA9Dj9za4aRmnLpK\",\"itfX4vQ9aLXNrkBwg\",\"omdomFs6EQoKCMMzr\",\"5jDgvkGd4JwatrYXg\",\"8j5gcF5Fu33LvKA3x\",\"eJ4nohNtyiQFCJ2o3\",\"QhYG37edWtehvshzd\",\"xfNJ8uWuj6nneEfJt\",\"bQrQGrN9iC8sbjjAM\",\"ySe2gbL7rP9vZDogb\",\"z9ssmjASrcpHJrKRC\",\"anq3JnjtaL2womsbR\",\"tgqTBGHBy2nB9fEon\",\"TNuJxad2jXuh78TYd\",\"6eZLvPooEzhfPJBy3\",\"4EizPDtdbCn7hLDx6\",\"sacPXRKX59BE495oz\",\"umcNKSZ597NfCXiyy\",\"H9YkLf82TZF2GrX6B\",\"3YDbbC8ZR6QJg9gKp\",\"W56bWmpQeLJ9JEDsa\",\"DF2bz8fZZ49wqgW8J\",\"Ds4Cdd24aQSQWHkrp\",\"9wSq4p6kYKuGjJrQk\",\"rojdHfAAuAYxoaEXp\",\"GjJFtGztzQNjjoekY\",\"Yj7ftjzyP67R5NFrH\",\"TabstYjpXgjJvTLQT\",\"Jk9R4Lggki2cJz6LN\",\"QQYCfamcynoin9T3f\",\"fXRH495qKgySzoyqH\",\"NPgpEtw6Ly8LToLco\",\"RsyMdtJZrD3drc5ex\",\"mXtRKcoTz5LWyJayE\",\"6xtT3SgrxHEefSes9\",\"BRoNBDrS5qXTPkh7G\",\"sWNr3Mf46ME9RrGXD\",\"64MtvjxAc2CiMP3o6\",\"a9DfHLLXjLvuNLW4A\",\"ncgvphhMo9vyuHZnC\",\"DW2wuHbosLqhnGwJf\",\"yKQuoK4KApPSziTJk\",\"MLEZAdNmQkL7Tf5hP\",\"gGCqFbivgiE2oJ7GX\",\"G9S9h6X777FZ9vkcB\",\"AzrTAFAXhhkQsvj8A\",\"fkYXCyuk8yQjrDRvm\",\"XQ53ja3k4657jznjS\",\"dZg7Q8ACGfQH2zKLB\",\"J7rcxnkPyXj2A5HMa\",\"9YGY6sGf5Mf9Pjvxf\",\"nNfrqcYXjkreaBNLe\",\"97cJgz4uwctLvv9wX\",\"adfGZ5Egd2Sb887jf\",\"sYFKfgwrB5Dpx2zzZ\",\"Hj3RJSopq2NDd4Ca9\",\"WEDcpeapzW9H6R9ko\",\"CeSBJwRdMvqbe66ii\",\"SqK2CmgjMZkzFbCqp\",\"JdXTkt2Fk2DtkDLW3\",\"WDxnzcqQsyMSiAZXm\",\"7eYLq3irWKKoAwa79\",\"teeDNxXNcDS9HFZs5\",\"WXPEf7bKTdF4JXvQX\",\"TF3pZmuQoYAjRcgBw\",\"kPW5tShKywvrNaB4d\",\"Km9wzTx6KLYSrKzLN\",\"mrwhdFcnurRCrCMHh\",\"A3KrxZk4FiSymY6f2\",\"mMBuEpu4HJapyPECj\",\"iaBakrrPJcyecakum\",\"rC9QhiC7Wc5kMtXpe\",\"rNAtHTutzkDkhATPu\",\"MjPE7qis9c2Sfsh7y\",\"KJYF87v4n4kzXmAPM\",\"v5xEYNh9QpfNqHK8C\",\"g2Bw5cvCubPvwiqi7\",\"JAezJEx3rhCeb8vjE\",\"BW7yZsmxRR9kQwQpE\",\"KRrEXnGqe8pFSGQN6\",\"ysrsrL93dES7Rpnuq\",\"EAxJxDw66W6jrbo82\",\"tTLCwQx2SYwPXSgq6\",\"ZZkFzKvmRE9isZve2\",\"t2CNnSbqCxZPuBzGN\",\"jCf58C2qtL6aNkSHb\",\"67pNfXxJ2a9QR9pEp\",\"arc5D2FuHweJfLtAk\",\"nL8E6BBc6hY8mJqYX\",\"epXKHavqkvD5Hp3Hu\",\"aPrXxYdTbFAWLEHgQ\",\"JbHwwHSNSMPgBFQaC\",\"u63p6XuZ86fLosY7w\",\"R2bubpHLo5hPGZaop\",\"Fe85wXDZrHKZfpy3y\",\"xZbb2aXroPDHqLN9D\",\"xPmq5PuxmqMfy8L6T\",\"XHJ6mL2rmbaybYFjm\",\"fwpnu6PnnYhtxSwmj\",\"6YzZ4rMJdXLSBWpNN\",\"Tuii9AJkPZdFfEqnT\",\"D4FSNrczzvZMjuDyX\",\"6k46WoSbN4cJp9SCr\",\"LK7m4ZroSRPzXRjs3\",\"fL6uRc6ZRcNJL9ZqC\",\"7L5jsMcckuboG6Wuc\",\"umE8dRTGWzrZFp755\",\"ZifTCWt6c6a6kZ4a5\",\"XAFm6eHkparQzLjx7\",\"DvLp7FpxSTnQ3mbns\",\"DZWWtRgpenFDyJa9L\",\"4N7bT2NwYhxkt32Hh\",\"2rip7TnekJmHpWzKa\",\"HbphweJuzDKsWGuvj\",\"WSWzBty4MsTvNMBi8\",\"Wi4H6ayKsNDWWQCG5\",\"A8dCwfZz5dvfMAkoY\",\"R79bHqj8bsu4NnC2n\",\"bxkRNFtSfQyFdog2v\",\"dAjsJdMKaoDSv5Hbs\",\"Xpo58roLMSmAzdX7k\",\"Dyivr2hJKDBKnZ7EJ\",\"L5BdseFprSQq4GE4R\",\"Pq4GJNjpZeEFYkTXe\",\"hxT5gWw2hiJQ6fpK8\",\"Baiqkev4b5geQdd5m\",\"8JzXX6uxRhucnLX5Z\",\"33kxjp5qQ3jD6eDb7\",\"fCTfZSgeDbRbTvDY4\",\"EmXN9QThJ984dRYEB\",\"LGm76GJAvFL7ZiJSM\",\"fS2Ros5yXcijS3TWj\",\"T4GS5Gu5bsLwJH5KZ\",\"cwafRc8PeiDJXdefD\",\"ripgD9JqLJGhaPdnD\",\"9vP9Sg4nyzQT4ED9C\",\"jyeZPhmfLtysXHswN\",\"CzYYMyxkamBm44p74\",\"3eRfYkTEsuSEXHX2a\",\"Js96td8e5TSiS8oYZ\",\"RB8qWXZtEvEntQYke\",\"ZSFeffCQa4w327kPY\",\"XN5sN8S44kA34Ytqz\",\"4qa6CRmkyjqNZkop4\",\"A5g5hadDQNuyWciCs\",\"MBB7P2iY7QWp3MuoM\",\"WPzyMvdEjFjZYLMrT\",\"YGPjXEDwGkx95hHxA\",\"EcZD6KcvgghwPGgBG\",\"km9jYwmuPbaZbuPeC\",\"8Z4rovtFGhqBKiqD3\",\"v29XdiDMddp2yHaH7\",\"j5gu7BsuqJfwkQBMM\",\"pPYFfqW6X8syPjTXZ\",\"RuyrWz2Fo5SwqxKcZ\",\"JtKfFxuC97wnyTtHs\",\"Mfad6C9294neMvB4B\",\"DL9u2E62pT3icjTy2\",\"3SgSNoAB3sxaYeT3w\",\"gcao6ZiaECyZG7F9W\",\"BF9EMmPRKaBdB2Xcx\",\"PQA3B8tbtczqELpXg\",\"Xv5Tvdh3s3Jw8bQ67\",\"ZWBHHboD6dgbeHGWs\",\"LxouMuLudzG9dr7rN\",\"QRv96jmNaYsWkxQEG\",\"xT4MRtBmYimZAPH5D\",\"254vHBtuu4Y6Di2B5\",\"4x3RFNTna6bbr7D3T\",\"dPjq5Lh7CzShMt5YJ\",\"pHp9XWwL6QBTRSWPY\",\"FHj4Ewd4Bz8q6ioJq\",\"ncCZ7HDcD5Du6Eefu\",\"r5K6ndXy4APuhfXxh\",\"Lk9aWwX9unZ8NLrer\",\"nTfzXWc9xAXg4CAzC\",\"T8decCyKuBCbh3mtc\",\"WYuk2NhLmw33turqz\",\"ijzZ9DoxMi5akwSw4\",\"TDrnt3dWtQzYNKLEM\",\"Km83tGBqR3mdiefid\",\"MGojDC6LGPeeMb39r\",\"qeY2Gpf6pGZ9yoNPB\",\"fE5Cv4GSCY9uPHxQv\",\"2f3Dqzgy5qJFtiAtm\",\"xCLSMpsmRyQXefBSo\",\"Hrvp9grPRDPcxwQQz\",\"Mfjs8heXmMWStNkMa\",\"hSGA99ySG5ePGK7CJ\",\"kCE9JknwngM6oqpSF\",\"KfiC26uKTajpaKj75\",\"anq687oY8v8nNGtsM\",\"fxGzWCmLiCc5t6Nrz\",\"qYWdZJXam94wdbBdH\",\"uEnisaeADfbQaor3u\",\"FyhfsKHFsuL4Bmote\",\"JRhkYgxsSfNEkYXGd\",\"guZEoHAJfAk9fM6YK\",\"LHKSSS9McMQbmgAMj\",\"MDpoPq373YipvFuFt\",\"KQvo4FSXeYdHnzbsZ\",\"Xx6yRa457CMu555vS\",\"7iSJ4f64Zy9K447SE\",\"eCfKwb4939Ruo7F84\",\"7mXLb7zF8qNpxjjvB\",\"tMR4hKEGyefPGiAoP\",\"gLxbEDzD5YoTFqsM6\",\"6oYxTrWL5JYd3bXxd\",\"Sea8DQTHSYmzQupSH\",\"so45d7HeD72SD3sf2\",\"zZfMwLuoERGmybgib\",\"WGBHCtYhQ2txE8h6s\",\"mmCeBwojwidAPoNbg\",\"735KKShp36dPEP76m\",\"fagfwZYYKokt5swAu\",\"srJ34BaybkQh3qRkM\",\"qimCuzcbrPx9CTzr5\",\"oMZovHkR6QqNvQwyc\",\"mDWNyaaQ9hvPCRzSd\",\"Ag5fRrZ9MrAZc9vpj\",\"t55QWHi8o4teZxqqE\",\"2K9wmPC5yik6TYev3\",\"tdinF6MRzC6AdNX8g\",\"GaJNJwcdyB9ueYFst\",\"mar9WgdXs5Sf7mkcX\",\"DTZaTwEAnLfuue6gR\",\"HXbTKW3jmmyRAsKrr\",\"sxci7DYKNa6q22Sjq\",\"ZoJZHjFKYEaZYuno6\",\"pYonfGP4u9HNL9Z32\",\"phY2REwt7Txyidww7\",\"N3HuJnF4ESFqBtYzm\",\"HsFc9PgmpP2X9Fwh9\",\"mfm3gB39arY8Rjb2y\",\"P2Q7zqgggR4shffar\",\"uw47663LqPME8btaA\",\"7K3hTeJsrpN7n2NAw\",\"TCTZucJN3tJh5t7MB\",\"koiWD7t6JdfYckgnd\",\"D3ASM3aWpcQ8gvnin\",\"eW9R2SCoYnY8HBAdL\",\"uw8E83imJYpQiiPpP\",\"AeSmk2XWGcTLHB7PJ\",\"rhS8qXRjZcpDXkwnE\",\"jCjCvyhqhpebkJn34\",\"Dxk4GozARkHu66BNh\",\"5Kf9z3G9QBs9fkvLs\",\"cR3ibTMxLyEdDFCHY\",\"B3HZwpiinQermAhZa\",\"nSLvkGEpiYCtcBLaa\",\"vMa3s68vdoyJFEmad\",\"htXCitorobtqYymjN\",\"KMR6vNzvSKMA2cXnK\",\"PPdaczxSt2u5cmZYG\",\"5HGyJtoZ3AffzAZAv\",\"FNYPC36yqPmTKDaqR\",\"ckQwFFWyLXmDQAaCn\",\"RnY25enEBE8T9P5GS\",\"GD9Jqmu93vB4LTT8F\",\"unqzSsxpxj9sZ7rbD\",\"H3XLNCWB5yXt5YYXn\",\"ekzGKngknJdSLHM7P\",\"4kqniB4HY4nQwK2yd\",\"AgZX2Ju9YAKdohCFy\",\"jWw66KtJcFoiQraHT\",\"AzzzwpNTQgGrMyatx\",\"nFbmNzMQ38TncmfQX\",\"3xGMym7YZPeoAjsfz\",\"zMoKegpJDApvauEgD\",\"W4EhA7Q2ts3LqtPqo\"],\"total\":762,\"quality\":[5,3,5,5,4,5,5,5,5,5,4,4,4,3,5,3,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,3,5,5,5,4,5,5,5,5,3,4,5,5,4,5,3,2,5,4,4,3,4,5,5,4,5,5,5,4,4,4,4,5,5,4,4,5,5,5,5,5,3,5,5,1,5,1,4,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,3,5,5,4,3,2,5,5,5,5,5,3,4,5,5,5,4,5,5,5,5,5,5,3,4,5,5,5,5,5,5,5,5,4,4,5,5,5,5,5,4,3,4,5,4,5,5,5,5,3,5,5,5,5,5,4,3,3,4,4,5,5,5,5,5,5,5,4,3,5,5,5,5,5,5,5,4,5,3,4,4,5,5,5,4,5,4,5,5,4,5,4,5,5,5,5,5,5,3,4,5,5,5,5,4,5,5,4,3,5,5,5,5,5,3,5,5,4,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,4,5,4,5,5,4,4,5,5,3,5,4,5,4,5,5,5,5,5,4,2,4,5,5,5,5,4,4,4,5,3,4,5,5,4,4,5,4,5,4,4,5,5,5,5,5,5,5,4,5,4,5,4,4,5,5,4,5,3,4,5,5,4,3,5,4,5,5,5,4,4,4,5,5,5,5,5,4,4,4,5,5,4,5,5,5,5,4,4,5,5,5,5,5,5,5,5,5,4,5,4,5,4,5,3,5,5,4,5]},\"flags\":0},\"summary\":\"A graph is a set of nodes along with a set of edges connecting the nodes.\\n\\nGraph Example\\n\\nGraphs can be directed or undirected. In a directed graph, each edge has a direction whereas, in an undirected graph, edges do not have direction. The graph above is an undirected graph.\\n\\nTwo nodes in a graph are adjacent if there is an edge between them. In the above exa\",\"tags\":[\"arrays\",\"algorithms\",\"math\",\"validation\",\"data_structures\"],\"timestamp\":{\"$date\":1598402302581},\"title\":\"Adjacent Nodes\",\"quality\":4.551020408163265,\"family\":[{\"_id\":\"WHcPbDDRvQGHQsZFs\",\"language\":\"cpp\"},{\"_id\":\"8hk27ha9CtqCQsYP8\",\"language\":\"java\"},{\"_id\":\"N7PGFudDcNh5aueS3\",\"language\":\"javascript\"},{\"_id\":\"3DAkZHv2LZjgqWbvW\",\"language\":\"python3\"},{\"_id\":\"oej5qcfHMa9RvAzy6\",\"language\":\"ruby\"}]}}"]