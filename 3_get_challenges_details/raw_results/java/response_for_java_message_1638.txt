a["{\"msg\":\"result\",\"id\":\"378\",\"result\":{\"_id\":\"u7prkNxFxqartAfiG\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"public class Challenge {\\n\\tpublic static int sumTwoSmallestNums(int[] arr) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.50253807106599,\"familyId\":\"N75hKKY9Lu8Npypsv\",\"instructions\":\"Create a function that takes an array of numbers and returns the sum of the two lowest **positive** numbers.\\n\\n### Examples\\n```\\nsumTwoSmallestNums([19, 5, 42, 2, 77]) ➞ 7\\n\\nsumTwoSmallestNums([2, 9, 6, -1]) ➞ 8\\n\\nsumTwoSmallestNums([879, 953, 694, -847, 342, 221, -91, -723, 791, -587]) ➞ 563\\n\\nsumTwoSmallestNums([3683, 2902, 3951, -475, 1617, -2385]) ➞ 4519\\n```\\n\\n### Notes\\n- Don't count negative numbers.\\n- Floats and empty arrays will not be used in any of the test cases.\",\"lab\":\"import static org.hamcrest.core.Is.is;\\nimport org.junit.Test;\\nimport static org.junit.Assert.assertThat;\\n\\npublic class ChallengeTests {\\n\\t@Test \\n\\tpublic void test1() {\\n\\t\\tassertThat(Challenge.sumTwoSmallestNums(new int[]{19, 5, 42, 2, 77}), is(7));\\n\\t}\\n\\t\\n\\t@Test \\n\\tpublic void test2() {\\n\\t\\tassertThat(Challenge.sumTwoSmallestNums(new int[]{2, 9, 6, -1}), is(8));\\n\\t}\\n\\t\\n\\t@Test \\n\\tpublic void test3() {\\n\\t\\tassertThat(Challenge.sumTwoSmallestNums(new int[]{879, 953, 694, -847, 342, 221, -91, -723, 791, -587}), is(563));\\n\\t}\\n\\t\\n\\t@Test \\n\\tpublic void test4() {\\n\\t\\tassertThat(Challenge.sumTwoSmallestNums(new int[]{3683, 2902, 3951, -475, 1617, -2385}), is(4519));\\n\\t}\\n\\t\\n\\t@Test \\n\\tpublic void test5() {\\n\\t\\tassertThat(Challenge.sumTwoSmallestNums(new int[]{280, 134, 108}), is(242));\\n\\t}\\n\\t\\n\\t@Test \\n\\tpublic void test6() {\\n\\t\\tassertThat(Challenge.sumTwoSmallestNums(new int[]{280, 134, 108, 1}), is(109));\\n\\t}\\n\\t\\n\\t@Test \\n\\tpublic void test7() {\\n\\t\\tassertThat(Challenge.sumTwoSmallestNums(new int[]{321, 406, -176}), is(727));\\n\\t}\\n\\t\\n\\t@Test \\n\\tpublic void test8() {\\n\\t\\tassertThat(Challenge.sumTwoSmallestNums(new int[]{1, 1, 1, 1}), is(2));\\n\\t}\\n\\t\\n\\t@Test \\n\\tpublic void test9() {\\n\\t\\tassertThat(Challenge.sumTwoSmallestNums(new int[]{-1, -1, 1, 1}), is(2));\\n\\t}\\n}\",\"language\":\"java\",\"summary\":\"Create a function that takes an array of numbers and returns the sum of the two lowest positive numbers.\\n\\nExamples\\nsumTwoSmallestNums([19, 5, 42, 2, 77]) ➞ 7\\n\\nsumTwoSmallestNums([2, 9, 6, -1]) ➞ 8\\n\\nsumTwoSmallestNums([879, 953, 694, -847, 342, 221, -91, -723, 791, -587]) ➞ 563\\n\\nsumTwoSmallestNums([3683, 2902, 3951, -475, 1617, -2385]) ➞ 4519\\n\\nNotes\\nDon't count\",\"tags\":[\"arrays\",\"math\",\"numbers\"],\"timestamp\":{\"$date\":1556053853488},\"title\":\"Return the Sum of the Two Smallest Numbers\",\"stats\":{\"completed\":{\"total\":233,\"ratings\":[1,1,1,1,1,1,1,1,1,1,0,1,3,2,0,1,1,0,2,1,1,2,1,1,1,2,1,1,0,1,1,2,1,1,0,2,1,1,1,0,0,1,1,2,3,1,2,1,1,1,3,2,1,2,2,2,2,1,0,2,2,3,3,1,2,2,2,2,2,0,2,2,2,3,1,2,2,1,2,1,3,2,1,2,2,3,2,1,2,2,2,1,2,2,2,2,1,2,1,2,2,0,1,3,2,1,1,0,2,2,2,1,1,2,2,2,0,1,3,2,1,1,1,2,1,2,1,0,2,2,2,0,2,1,1,2,0,1,2,2,0,1,1,1,2,2,2,2,2,1,1,1,1,1,1,1,1,2,1,1,2,2,2,2,2,2,2,1,2,2,2,3,2,2,3,2,2,2,2,2,1,2,1,2,2,0,2,2,2,2,3,1,1,2,2,2,1],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"yJyjT7Z2PPQmzzWpP\",\"34rKGZYu7vEdoCu7d\",\"BmqAHh8fTE8WhqnMm\",\"5znpaFDoToJtAtF3h\",\"QS5RGoPnapStFD5Gi\",\"CDkkdvDdqjDihTcFS\",\"veu3fKkK2DSkKTkb2\",\"ydos8Ba8nZdYRNJpS\",\"T6j7qdvD37y8DLKzT\",\"cp3X8hk8yNME7qoD9\",\"yhk8G8cM3p9JAbfJN\",\"JSSLvJPs8JebyfeS9\",\"vRXuYYBNuHEQ29fbm\",\"a49eNnfRwSMxsDJXf\",\"LTHCxsdjqzXpaXShT\",\"aMNhTh35QQAs33ycQ\",\"Yt3hCM2SdzhMYRqHj\",\"o5H3aMNucmwhnsWdL\",\"3pdgguqZgNDSAJSGm\",\"sxci7DYKNa6q22Sjq\",\"9c8n7ti5vCjTRgiGN\",\"fg7aXENdFheSh7ymy\",\"t2kdBPj9qQAXY2Ehd\",\"Yohr2MmAyaWGMbB35\",\"3gxJoNp59B4eoyyed\",\"gBGjCfJvPHswDM5JQ\",\"Ha5J49rhojBRy3BaM\",\"8rF6PHMSaybTDsvXr\",\"Eqt2WZ9iPdhM6Ma9Q\",\"ZBDiEMi7dbjRL55LB\",\"oYKSeBviFTPSbbn2Z\",\"phA6MomRzh9oz3eqn\",\"79ZbLzp7xepvkonoh\",\"L2rsm2HX7L8jiQuLo\",\"Dedjx9nWmegK4nfKR\",\"tfs6uiysC8atFan4t\",\"gXMfzkYnoTZXXemY8\",\"QPSwhNevikT7q8mz8\",\"6TDEhHv3uQCZLQeiH\",\"FCtas8YzE46B9BAyf\",\"CLmJduqJHX83dM4Pd\",\"3KjxQu9RZ8ZSywvLz\",\"8JyqsSbN2FJXPr3cw\",\"bk6Sjnh52qNCYNggH\",\"u4yanfWeeZsN3xWgc\",\"J9zJq7PMGb6mqzcHW\",\"AyrEvM2GLX2jqM772\",\"eXW8reZCCZHQzJjQi\",\"8J2Dqqz9PaFufQzwY\",\"C9yBWYcZsjmJYww3K\",\"rux435qWn8kcEAvG8\",\"2cdvd8yuPLSwvGj9w\",\"x9A83cZkyA7E7utn3\",\"W347YkKWzfvMbkuHr\",\"Gg7NxiHxaDbW42eXL\",\"ggRcNtx4xeRC2jmbZ\",\"JMh7pkAJMA3P5B9uu\",\"r9hHZYPQAqJ9DbwLX\",\"dm4ki3fhfE52M3AJL\",\"MJMEESuirNXM2diop\",\"qEGfmqbNLrs2Qrva8\",\"4YhrrzZRjq2EgAJv6\",\"4rLc4TEXDA2MbFhzx\",\"Zk4jvK2nkvnhpzoLR\",\"qx9XHErKygcLiFGhX\",\"DHpJ7aLaPzHBJzN3z\",\"TvnzBJ22X3jPQpMte\",\"vuMBgKQRnA4HsuWjR\",\"5TaPWyRv9DZWWodp8\",\"yK7zzK2aGJwuWKHRL\",\"TxD5qx2hqQa6pixAP\",\"YLqdr7bYjwew2KM4N\",\"rWhXHhzF4W8bea6LP\",\"i5QeAsrM4m6hzPTku\",\"DkrRKbukuPjeMndgx\",\"xEuitW7gMaqzhq6x8\",\"MrNyfG8SGjjBKLvgc\",\"heqZodGeGNNQW5wbv\",\"Xbf4MXGxT6xkmDt2X\",\"4RHx3H8EwP2oboW8e\",\"HsFc9PgmpP2X9Fwh9\",\"mRwxbzaBc4Fg5q9Hw\",\"JFodQijHHdRkkrZvT\",\"bsXDWXhsuqgaZYCCv\",\"D7dpRtRQDmteDSAXv\",\"Es4eX2stRpyoXeC7f\",\"uKMMttrfjdqPjcAWr\",\"4hYyZnCuvgfuxhd7e\",\"NsQ8qYQQ47gSPtQkK\",\"jDTGwryGygbZiqCEg\",\"gGnDsJz5hr2t9MKCF\",\"fbYN9Jp46RqBqCd2K\",\"wYYMNPe8nSiJFbvJw\",\"fiGvm9C6Pjir3Hb4B\",\"FbaQoMJPTNFFRLcd5\",\"eJxMBZBhiHyJYWkH2\",\"v8RN8p2B6xdebkXAY\",\"fZjkX29nhRTWWb75k\",\"Kso7rzAKB4TTCPKgM\",\"hB5mgzMwQSnhBzi7P\",\"M3sPbyvBvjTu8Nga8\",\"yv7c4H2jimSKHEjtG\",\"5seiNqw6ZXoF2GRRd\",\"jyoLggHk8xQKZuoQC\",\"TrquEHytntLKHA4m2\",\"mfm3gB39arY8Rjb2y\",\"Zhy5X7BZnqk8hacEw\",\"KHiSyCFP4SLMXcvfx\",\"8zZ6xmzpiFair25qr\",\"rvojHhKH3DaxotefQ\",\"WZujpe8yQAyZmpWHg\",\"etoSR23iELGGgs9rA\",\"htXCitorobtqYymjN\",\"y7NyT6FnDzPhAzkjF\",\"meS77LKqRswhF5LAy\",\"Yom3RzkMYpweE8cbS\",\"y6kfyYmydcD8tkBk7\",\"cjxsqXfkAPoadmppi\",\"aukemxRJPgJjJWgAx\",\"DzvdGwHEjqsX7wyKr\",\"dcW9oK2uRo8h8mBe2\",\"B4pxRqzo43M7S8FbP\",\"Wf7nCHS4Gq5tx659h\",\"q2tzvkrLASvSjkek9\",\"zwruFCmuHkwJTpYqg\",\"P7zedbjaFw8YDzLz7\",\"g4NCSxxHqHCGMpWwT\",\"jRqY4i8gPemsZMBGf\",\"k2tXkx7AyX77tQDRo\",\"f6uGKbmMdBYCjrMBh\",\"muXMnzQwGLzN6j2Jr\",\"Fd9765rksgPK4E2Zy\",\"YcjwCvYut6834Jzd8\",\"YFHkjbM6obMSj24zi\",\"Ym8AjbKGSJooun3nt\",\"AeJSxRqw2dJZuGvdk\",\"pzQKDh47YoBNhJCiG\",\"zTEKMLMevG8xfxEj6\",\"yXGiiSAR5nBHnH3yr\",\"jb9RLyyuo565bKDzN\",\"zXu67TSfBWxX7cJmx\",\"rXgnzn3u6nrMc3X58\",\"gXTAie79kiw28tx5u\",\"Tf7TJFSPktJBgLA4k\",\"oMfq73A434YWhSuWQ\",\"R6MCGv6W8g3dpRbhf\",\"mG8HqKiAQFTdRZthG\",\"jXTnL3JatkKjoifyb\",\"8Xx8nWXRydHDBGfQf\",\"P5BhjZxyeHQYTNyB9\",\"usuyZtrRPRFTqW9jj\",\"hKXdFwrcGY3kTX22j\",\"yd5PakB2z33q2JrTZ\",\"BbcH2NLjE4tKAZ3wR\",\"RGN3QTb5LXj4ZPPkj\",\"kabqCExooax4JEQHE\",\"hDeaTsprkH6CmvSAR\",\"H26mZ9JpKoBEsozjk\",\"s5qoCq4dYbkHcYxyz\",\"zE46SymvixkeFJmPM\",\"kh7Tw42Li3AW5Jej4\",\"unNqQjSHzkb4pCzEu\",\"udHFfcqNNej6udnpP\",\"fJAnQriWjfZA5EFCK\",\"qJ2TgHitgMYZRTZ5d\",\"tyLS9T6YMfg9fMtYJ\",\"W56bWmpQeLJ9JEDsa\",\"mQKWauR6b252TmdX4\",\"hD6sfDtntpqT8NR2o\",\"XukHrpzdTBvX57KFP\",\"YqCCpaAu6ecGxxwJ5\",\"a777e8chPvJkY3tKa\",\"pi76g3eRpnKrhee2a\",\"mFfahhFdaoQPkzYdh\",\"Cczga7ES9qthpBPBf\",\"9vyjn4WyWtJ6o2wop\",\"E2hpke7mHxAWsw5t9\",\"GkYtSbQuheBF4Enys\",\"uFfEio8nzDvL8emhp\",\"f2Loc3JDRtgBK8Dk5\",\"bur3yQ8s34zqKGEro\",\"QRv96jmNaYsWkxQEG\",\"buX4mCQhtXCfBjeno\",\"zZfMwLuoERGmybgib\",\"hhxjQREtmHSheH9Pj\",\"27qiJtdrfNjcePhwp\",\"8qNSPHZBpmjSTt3tH\",\"rLSB6bqHgB7ScnFLH\",\"DkSMZ3jZLkwviKb9g\",\"4ySzqKC5s3ZRpG9di\",\"BnaE25vvCGcfL3jiQ\",\"bdXCq7koLGHkjP4G4\",\"rhS8qXRjZcpDXkwnE\",\"6rvJwN4mcX7iYGjY7\",\"wFRLGjA56kj7xyhmv\",\"FSSM3xcaTXGcxqYGz\",\"xEX3TDY6C2h82dJTn\",\"G4bm9KybYK5avPyaq\",\"srJ34BaybkQh3qRkM\",\"jCjCvyhqhpebkJn34\",\"PJu3WcTpfRrvHfQiS\",\"KMR6vNzvSKMA2cXnK\",\"GRSgodNrGhekHtCun\",\"unqzSsxpxj9sZ7rbD\",\"563onSvqgjToY79ah\",\"FxPDKKibxnZjGJLs6\",\"uw47663LqPME8btaA\",\"qedWkBipPYmcQw7fq\",\"PAEWysAAFheYiYPBp\",\"XH6378Zm3WBm679yx\",\"nFbmNzMQ38TncmfQX\"],\"quality\":[5,3,5,5,5,4,5,4,5,5,1,4,5,5,5,5,5,5,5,5,5,5,3,5]},\"tests\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.541666666666667,\"family\":[{\"_id\":\"vqNktHakjQYr43YXo\",\"language\":\"cpp\"},{\"_id\":\"7F8ZhHpxeW7K65XRL\",\"language\":\"csharp\"},{\"_id\":\"u7prkNxFxqartAfiG\",\"language\":\"java\"},{\"_id\":\"GNgCfKHWfQwByBNqa\",\"language\":\"javascript\"},{\"_id\":\"RZPwRGaDLoMxe3szJ\",\"language\":\"php\"},{\"_id\":\"xYpG6ry6CLqgcwRWC\",\"language\":\"python3\"},{\"_id\":\"d3so2Ycre7wvkjX63\",\"language\":\"ruby\"},{\"_id\":\"hSpSbc5uQGRAuY2t7\",\"language\":\"swift\"}]}}"]