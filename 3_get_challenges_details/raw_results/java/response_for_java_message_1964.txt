a["{\"msg\":\"result\",\"id\":\"539\",\"result\":{\"_id\":\"mtrBW4w2Bkum4bGt5\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class Challenge {\\n\\tpublic static String unrepeated(String str) {\\n\\t\\n\\t}\\n}\",\"difficulty\":2.105769230769231,\"quality\":4.7560975609756095,\"familyId\":\"ezdxDi3nT7K87BaCx\",\"instructions\":\"Create a function that will remove any repeated character(s) in a word passed to the function. Not just consecutive characters, but characters repeating anywhere in the string.\\n\\n### Examples\\n```\\nunrepeated(\\\"teshahset\\\") ➞ \\\"tesha\\\"\\n\\nunrepeated(\\\"hello\\\") ➞ \\\"helo\\\"\\n\\nunrepeated(\\\"aaaaa\\\") ➞ \\\"a\\\"\\n\\nunrepeated(\\\"WWE!!!\\\") ➞ \\\"WE!\\\"\\n\\nunrepeated(\\\"call 911\\\") ➞ \\\"cal 91\\\"\\n```\\n\\n### Notes\\n- No more than two words will be passed.\\n- Notice that a string is iterable.\",\"isHidden\":false,\"lab\":\"/** \\n=================================\\nTestGen 3.1 for JUnit 4.13.0 \\t\\t\\nTest Case: Challenge::unrepeated \\nTimestamp: 10/23/2020 03:33:07 AM \\n---------------------------------\\n® DARKKO 2021 © \\n=================================\\n\\n**/ \\n\\nimport static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class RemoveRepeatsTest { \\n\\t\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertEquals(\\\"helo\\\", Challenge.unrepeated(\\\"hello\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertEquals(\\\"WE!\\\", Challenge.unrepeated(\\\"WWEE!!!\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertEquals(\\\"cal 91\\\", Challenge.unrepeated(\\\"call 911\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertEquals(\\\"a\\\", Challenge.unrepeated(\\\"aaaaaa\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertEquals(\\\"alwf tes\\\", Challenge.unrepeated(\\\"alwaff test\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertEquals(\\\"tesha\\\", Challenge.unrepeated(\\\"teshahset\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertEquals(\\\"porcuine\\\", Challenge.unrepeated(\\\"porcupine\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertEquals(\\\"alter go\\\", Challenge.unrepeated(\\\"alter ego\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test09() { \\n\\t\\tassertEquals(\\\"rejuvnat\\\", Challenge.unrepeated(\\\"rejuvenate\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test10() { \\n\\t\\tassertEquals(\\\"strau nimb\\\", Challenge.unrepeated(\\\"stratus nimbus\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test11() { \\n\\t\\tassertEquals(\\\"strageiz\\\", Challenge.unrepeated(\\\"stragegize\\\"));\\n\\t}\\n\\n}\\n// end of tests\",\"language\":\"java\",\"summary\":\"Create a function that will remove any repeated character(s) in a word passed to the function. Not just consecutive characters, but characters repeating anywhere in the string.\\n\\nExamples\\nunrepeated(\\\"teshahset\\\") ➞ \\\"tesha\\\"\\n\\nunrepeated(\\\"hello\\\") ➞ \\\"helo\\\"\\n\\nunrepeated(\\\"aaaaa\\\") ➞ \\\"a\\\"\\n\\nunrepeated(\\\"WWE!!!\\\") ➞ \\\"WE!\\\"\\n\\nunrepeated(\\\"call 911\\\") ➞ \\\"cal 91\\\"\\n\\nNotes\\nNo more than\",\"tags\":[\"strings\",\"data_structures\"],\"timestamp\":{\"$date\":1600628317648},\"title\":\"Remove Repeated Characters\",\"stats\":{\"completed\":{\"total\":158,\"ratings\":[2,2,2,2,2,1,3,1,1,2,1,2,2,2,0,2,2,2,3,2,3,2,1,3,3,1,1,1,3,3,3,2,3,2,3,2,1,0,1,3,3,3,3,5,1,3,2,3,0,2,2,2,2,2,2,1,0,3,3,2,1,3,2,2,3,3,3,3,2,2,2,1,3,4,3,2,1,3,2,1,3,1,3,2,3,2,1,2,3,2,3,3,3,3,0,3,0,1,2,3,2,3,2,2],\"quality\":[5,5,2,5,5,5,5,5,5,3,5,4,5,5,5,5,5,5,5,5,4,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,3,5,5,5,5],\"rators\":[\"a777e8chPvJkY3tKa\",\"mGaEDPw5FsDb3vdnq\",\"82weQfHHmno4Mq4X7\",\"YcjwCvYut6834Jzd8\",\"oMZovHkR6QqNvQwyc\",\"mtp9JCk27fTeLXXQR\",\"qaPjAANdnxFnWfj5d\",\"JFodQijHHdRkkrZvT\",\"YFHkjbM6obMSj24zi\",\"jyoLggHk8xQKZuoQC\",\"Es4eX2stRpyoXeC7f\",\"rvojHhKH3DaxotefQ\",\"yXGiiSAR5nBHnH3yr\",\"DzvdGwHEjqsX7wyKr\",\"gXTAie79kiw28tx5u\",\"Ym8AjbKGSJooun3nt\",\"2xFvy6u3hE4LtCXMD\",\"7k7Dhxkjbb4nYfkQc\",\"FeCN9HXLdYFEzTC73\",\"TrquEHytntLKHA4m2\",\"etoSR23iELGGgs9rA\",\"L5TMMQRmg8yyE8SKi\",\"QKwzvqWHTffHsNPu6\",\"6QHXQkQAcXMJ7C2kK\",\"npXPqbxqYXdxHu32q\",\"FBD3rFFMQqZ3qiMx9\",\"kabqCExooax4JEQHE\",\"wb2TgNPXdATasXZh9\",\"teCXwHEeoixDCPt9u\",\"eSewzYmhWeS4HWutm\",\"MgaGaw6gp5sfrAnRC\",\"RQL2PAWda9Bh79GNi\",\"YDBTpHqSd5gzf2g4v\",\"9pCPyhvQmbkWyD2LL\",\"oRi93mrm7DLdeiFjf\",\"thA79neuEcM3J8ZHr\",\"dPeaG87LMdYeD5xLB\",\"Xtozcw6AgdBbvuhbM\",\"dcW9oK2uRo8h8mBe2\",\"S2yQ6goAZCCjRapeA\",\"ahShRaM3SEFT33gvS\",\"GiqPq82is4HGWdZHA\",\"sW4SaDcqGDfhTWtsd\",\"bAnGmDZMY746J5k8W\",\"3uBTPjN6mDavuBYmt\",\"KCEsMas5BbmiD2Q9K\",\"TZk7ZK6ejLsTr6Bgz\",\"EKQoY9xP6kHpLSye5\",\"p8qqFdJ3FSk5x9z3G\",\"eBgN48uPauTRcPpRb\",\"vRXuYYBNuHEQ29fbm\",\"bTCq6CQ3SGjrRfZeQ\",\"Qd5KQgNpzwhzBBFZk\",\"jhEgpqsboiWai8sLJ\",\"mzxzJqrNwEQQBA9wz\",\"rWhXHhzF4W8bea6LP\",\"9o7Sp5AvxK75cQ3jD\",\"zTM2NbjE6q5Q2HSeF\",\"rGpPd6PvpzLaqps4g\",\"C9yBWYcZsjmJYww3K\",\"P5BhjZxyeHQYTNyB9\",\"Nu8yT4MHSneG8uWin\",\"AtWN4ZwnjPei34Cdo\",\"DrkR35NqnP9NDLbq6\",\"mQKWauR6b252TmdX4\",\"FCkjDL4WAu3d6rAkC\",\"8Xx8nWXRydHDBGfQf\",\"JDPS2gioHDcZsERYb\",\"T2vhHPhRR96hRizq8\",\"uYv96ZSpA7tBHoAGX\",\"4HkdAw6YFXZRsGvZ2\",\"a8egTkSCssTfQpWze\",\"RGN3QTb5LXj4ZPPkj\",\"ptrYGaoYYLhNPARK2\",\"LNCb5rksJLJ43L4Nw\",\"qb2DTmzQj4vNfq5K7\",\"C5x6MtLFJvaFA79MP\",\"QD7mPMD8gmTP56nPv\",\"R6Br35rEWAquiTjuN\",\"PJpdjpt777gBJSmfn\",\"jp6i6ZnYiXcCDei34\",\"vEN56nHw7hTxbyHhp\",\"buX4mCQhtXCfBjeno\",\"RvRRKdS7KAsuMg4RZ\",\"eotsnqC2X8GhZbyv9\",\"Ag5fRrZ9MrAZc9vpj\",\"72m5uJZhkRRJ4KL8p\",\"EuoWypJvMvgbJAdqT\",\"pHp9XWwL6QBTRSWPY\",\"dQXE857oKWAcbD6xh\",\"DuWZ3k6eb46D6HtGd\",\"osounBSYa7tg7PoEd\",\"BC2ELQgWt9f3c2rCb\",\"2G8hBzG3ax2BNcLWE\",\"qx6yvahdH8aw4Jnm7\",\"rLMeCAzEE9Grp3yce\",\"tdinF6MRzC6AdNX8g\",\"nAuhwzeaxm62fF6Mi\",\"BnaE25vvCGcfL3jiQ\",\"pCbFsvyiooabCFEgd\",\"N735m9s7a53x3oFf3\",\"zZfMwLuoERGmybgib\",\"pjA2TjPMR9o76zc5P\",\"9RGf5tSzEwSmBkAjq\",\"xBJzaBeZ4pEgWaF6y\",\"543nSRBoM8rvtKXRT\",\"zQswJpknkTEgsPET7\",\"sxci7DYKNa6q22Sjq\",\"mFwqSKyDPwd3RSduj\",\"jyeZPhmfLtysXHswN\",\"HsFc9PgmpP2X9Fwh9\",\"e4jWeRW5xSbmqkxP2\",\"rhS8qXRjZcpDXkwnE\",\"4ySzqKC5s3ZRpG9di\",\"95BvwJssZCGtv76HS\",\"wFRLGjA56kj7xyhmv\",\"nd5YxxrRzSdn3nee9\",\"CggGfsERnPKGupFWp\",\"grQaymzuXXfuPrTbj\",\"KnWn34iNbNAMtdfpD\",\"nMxZsNQ6btmmevxfj\",\"htXCitorobtqYymjN\",\"jCjCvyhqhpebkJn34\",\"a49eNnfRwSMxsDJXf\",\"2NJZbusRvu3eJ4tHu\",\"xW9nC9h6p77YT2iso\",\"zoGQmWbkctdKgJLzf\",\"KMR6vNzvSKMA2cXnK\",\"yX6xDmDvqfugvCHiB\",\"GttCrAdrNvAw8r3kk\",\"dLaYTPZpqfysNQyoi\",\"nFxzyiogbsgGXoGgB\",\"5YP4TxGhcKxRWWhzP\",\"cWf3ew5aDexbfSHgS\",\"PAEWysAAFheYiYPBp\",\"bQux2ZGCx5RPSPceo\",\"unqzSsxpxj9sZ7rbD\",\"6rvJwN4mcX7iYGjY7\",\"JdHDJLKy4HoLtgFF4\",\"uw47663LqPME8btaA\"]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"a8DqXYPWWJAqGrfxs\",\"language\":\"cpp\"},{\"_id\":\"mtrBW4w2Bkum4bGt5\",\"language\":\"java\"},{\"_id\":\"cgSmKhr3Hzez2Pt9n\",\"language\":\"javascript\"},{\"_id\":\"5fjAbvQwW3akZDior\",\"language\":\"python3\"},{\"_id\":\"Yf6M9whZrk9NcAtms\",\"language\":\"ruby\"}]}}"]