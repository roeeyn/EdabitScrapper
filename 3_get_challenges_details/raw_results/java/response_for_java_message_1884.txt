a["{\"msg\":\"result\",\"id\":\"499\",\"result\":{\"_id\":\"v96NThCRg5M5MLGfq\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class CaveMinerals {\\n\\tpublic static String mineralFormation(int[][] form) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":2.0217391304347827,\"quality\":0,\"familyId\":\"ksio8nY8zBaDsprtc\",\"instructions\":\"**Stalactites** hang from the ceiling of a cave while **stalagmites** grow from the floor.\\n\\nCreate a function that determines whether the input represents `\\\"stalactites\\\"` or `\\\"stalagmites\\\"`. If it represents both, return `\\\"both\\\"`. Input will be a 2D array, with `1` representing a piece of rock, and `0` representing air space.\\n\\n### Examples\\n```\\nmineralFormation([\\n  [0, 1, 0, 1],\\n  [0, 1, 0, 1],\\n  [0, 0, 0, 1],\\n  [0, 0, 0, 0]\\n]) ➞ \\\"stalactites\\\"\\n\\nmineralFormation([\\n  [0, 0, 0, 0],\\n  [0, 1, 0, 1],\\n  [0, 1, 1, 1],\\n  [0, 1, 1, 1]\\n]) ➞ \\\"stalagmites\\\"\\n\\nmineralFormation([\\n  [1, 0, 1, 0],\\n  [1, 1, 0, 1],\\n  [0, 1, 1, 1],\\n  [0, 1, 1, 1]\\n]) ➞ \\\"both\\\"\\n```\\n\\n### Notes\\n- There won't be any examples where both stalactites and stalagmites meet (because those are called pillars).\\n- There won't be any example of neither stalactites nor stalagmites.\\n- In other words, if the first array has 1s, return `\\\"stalactites\\\"`. If the last array has 1s, return `\\\"stalagmites\\\"`. If both have them, return `\\\"both\\\"`.\",\"isHidden\":false,\"lab\":\"/** \\n========================================= \\nTestGen 3.1 for JUnit 4.13.0 \\t\\t\\nTest Case: CaveMinerals::mineralFormation \\nTimestamp: 09/26/2020 04:03:54 PM \\n----------------------------------------- \\n® DARKKO 2020 © \\n========================================= \\n\\n**/ \\n\\n\\nimport static org.junit.Assert.assertEquals;\\nimport org.junit.Test;\\n\\npublic class CaveMineralsTests {\\n\\n\\t@Test\\n\\tpublic void test01() {\\n\\t\\tassertEquals(\\\"stalactites\\\", CaveMinerals.mineralFormation(new int[][] {\\n\\t\\t\\t{0, 1, 0, 1},\\n\\t\\t\\t{0, 1, 0, 1},\\n\\t\\t\\t{0, 0, 0, 1},\\n\\t\\t\\t{0, 0, 0, 0}\\n\\t\\t}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test02() {\\n\\t\\tassertEquals(\\\"stalagmites\\\", CaveMinerals.mineralFormation(new int[][] {\\n\\t\\t\\t{0, 0, 0, 0},\\n\\t\\t\\t{0, 1, 0, 1},\\n\\t\\t\\t{0, 1, 1, 1},\\n\\t\\t\\t{0, 1, 1, 1}\\n\\t\\t}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test03() {\\n\\t\\tassertEquals(\\\"both\\\", CaveMinerals.mineralFormation(new int[][] {\\n\\t\\t\\t{1, 0, 1, 0},\\n\\t\\t\\t{1, 1, 0, 1},\\n\\t\\t\\t{0, 1, 1, 1},\\n\\t\\t\\t{0, 1, 1, 1}\\n\\t\\t}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test04() {\\n\\t\\tassertEquals(\\\"stalactites\\\", CaveMinerals.mineralFormation(new int[][] {\\n\\t\\t\\t{1}, {1}, {0}, {0}\\n\\t\\t}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test05() {\\n\\t\\tassertEquals(\\\"both\\\", CaveMinerals.mineralFormation(new int[][] {\\n\\t\\t\\t{1}, {1}, {0}, {1}\\n\\t\\t}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test06() {\\n\\t\\tassertEquals(\\\"both\\\", CaveMinerals.mineralFormation(new int[][] {\\n\\t\\t\\t{0, 1},\\n\\t\\t\\t{1, 1},\\n\\t\\t\\t{1, 1},\\n\\t\\t\\t{1, 0}\\n\\t\\t}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test07() {\\n\\t\\tassertEquals(\\\"stalagmites\\\", CaveMinerals.mineralFormation(new int[][] {\\n\\t\\t\\t{0, 0},\\n\\t\\t\\t{1, 1}\\n\\t\\t}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test08() {\\n\\t\\tassertEquals(\\\"stalactites\\\", CaveMinerals.mineralFormation(new int[][] {\\n\\t\\t\\t{1, 1},\\n\\t\\t\\t{0, 0}\\n\\t\\t}));\\n\\t}\\n}\",\"language\":\"java\",\"summary\":\"Stalactites hang from the ceiling of a cave while stalagmites grow from the floor.\\n\\nCreate a function that determines whether the input represents \\\"stalactites\\\" or \\\"stalagmites\\\". If it represents both, return \\\"both\\\". Input will be a 2D array, with 1 representing a piece of rock, and 0 representing air space.\\n\\nExamples\\nmineralFormation([\\n  [0, 1, 0, 1],\\n  [0, 1\",\"tags\":[\"arrays\",\"validation\"],\"timestamp\":{\"$date\":1601099899664},\"title\":\"Stalactites or Stalagmites?\",\"stats\":{\"completed\":{\"total\":46,\"ratings\":[2,2,2,2,2,2,3,2,1,2,2,2,2,2,1,3,3,2,2,2,3,1,3,1,3,2,4,2,1,1,2,3,2,1,3,2,1,3,2,2,3,1,1,2,2,1],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"rvojHhKH3DaxotefQ\",\"Es4eX2stRpyoXeC7f\",\"rehehi2Tr2mwaEoJE\",\"zJn2J5xqR7ipuNbTz\",\"2xFvy6u3hE4LtCXMD\",\"vpeNBjX7zz8rhSWa2\",\"x3WsGCnE38anLjJqh\",\"gXTAie79kiw28tx5u\",\"etoSR23iELGGgs9rA\",\"yXGiiSAR5nBHnH3yr\",\"jhEgpqsboiWai8sLJ\",\"jyoLggHk8xQKZuoQC\",\"8Xx8nWXRydHDBGfQf\",\"jXTnL3JatkKjoifyb\",\"xSfiyJQux3iYF6wkr\",\"mfm3gB39arY8Rjb2y\",\"HsFc9PgmpP2X9Fwh9\",\"rhS8qXRjZcpDXkwnE\",\"mL4Jm5RpmjgKnZoAE\",\"EtLpopwsya39oXZjE\",\"yEqvr83bTr5vMu4cx\",\"buX4mCQhtXCfBjeno\",\"CggGfsERnPKGupFWp\",\"a49eNnfRwSMxsDJXf\",\"8wfGN5GjE7icNwieN\",\"2NJZbusRvu3eJ4tHu\",\"jCjCvyhqhpebkJn34\",\"sxci7DYKNa6q22Sjq\",\"KMR6vNzvSKMA2cXnK\",\"j25HLQp2M4rfbpdDN\",\"EQrbrQdcwkkjJMa2y\",\"rWhXHhzF4W8bea6LP\",\"e9NhiaGdEeGzhmPju\",\"htXCitorobtqYymjN\",\"unqzSsxpxj9sZ7rbD\",\"FxPDKKibxnZjGJLs6\",\"uw47663LqPME8btaA\",\"Bc74e6iknZDv3zTyv\",\"5HGyJtoZ3AffzAZAv\",\"bg4G79DdkMaDxXvdv\"]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"fNYoqHY5bKL27CGGr\",\"language\":\"cpp\"},{\"_id\":\"v96NThCRg5M5MLGfq\",\"language\":\"java\"},{\"_id\":\"wGwXLHQCYXnjJ9DW9\",\"language\":\"javascript\"},{\"_id\":\"n5Ar5F2CJMpGRXz3o\",\"language\":\"python3\"},{\"_id\":\"52RYXb5c8rGukwD3k\",\"language\":\"ruby\"}]}}"]