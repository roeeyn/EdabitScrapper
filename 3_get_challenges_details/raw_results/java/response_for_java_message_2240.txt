a["{\"msg\":\"result\",\"id\":\"677\",\"result\":{\"_id\":\"8dFqh23xMpfFf85Wb\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n\\tpublic static int ecgSequenceIndex(int n) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":2.625,\"familyId\":\"xbogK9f2zhaHZW6xD\",\"instructions\":\"In the ECG Sequence (that always starts with the numbers 1 and 2), every number that succeeds is the smallest not already present in the sequence and that shares a factor (excluding 1) with its preceding number. Every number in the ECG Sequence (besides 1 and 2) has a different index from its natural index in a normal numeric sequence. See the example below to establish the ECG Sequence Index of number 3.\\n\\n```\\n// Find the smallest number that is not in sequence...\\n// This number shares a factor with the preceding?\\n\\nSEQUENCE = [1, 2]\\n\\n3 = no factors shared with 2\\n4 = shares factor 2 with number 2\\n\\nSEQUENCE = [1, 2, 4]\\n\\n3 = no factors shared with 4\\n5 = no factors shared with 4\\n6 = shares factor 2 with number 4\\n\\nSEQUENCE = [1, 2, 4, 6]\\n\\n3 = shares factor 3 with number 6\\n\\nSEQUENCE = [1, 2, 4, 6, 3]\\n\\nNumber 3 is at index 4 in the ECG Sequence.\\n```\\n\\nGiven an integer `n` implement a function that returns its ECG Sequence Index.\\n\\n### Examples\\n```\\necgSeqIndex(3) ➞ 4\\n\\necgSeqIndex(5) ➞ 9\\n\\necgSeqIndex(7) ➞ 13\\n```\\n\\n### Notes\\n- ECG is the acronym for the electrocardiogram: if you try to graphically represent the trend of the sequence, a similar scheme appears.\\n- Curiosity: every odd prime `p` in the sequence is preceded by `2p` and followed by `3p`.\",\"isHidden\":false,\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(4, Challenge.ecgSequenceIndex(3));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(9, Challenge.ecgSequenceIndex(5));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(13, Challenge.ecgSequenceIndex(7));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(11, Challenge.ecgSequenceIndex(18));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(20, Challenge.ecgSequenceIndex(33));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(40, Challenge.ecgSequenceIndex(44));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(43, Challenge.ecgSequenceIndex(69));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n    assertEquals(68, Challenge.ecgSequenceIndex(75));\\n  }\\n\\t\\n\\t@Test\\n  public void test9() {\\n    assertEquals(188, Challenge.ecgSequenceIndex(101));\\n  }\\n\\t\\n\\t@Test\\n  public void test10() {\\n    assertEquals(199, Challenge.ecgSequenceIndex(208));\\n  }\\n\\t\\n\\t@Test\\n  public void test11() {\\n    assertEquals(281, Challenge.ecgSequenceIndex(300));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"In the ECG Sequence (that always starts with the numbers 1 and 2), every number that succeeds is the smallest not already present in the sequence and that shares a factor (excluding 1) with its preceding number. Every number in the ECG Sequence (besides 1 and 2) has a different index from its natural index in a normal numeric sequence. See the example below to\",\"tags\":[\"numbers\",\"math\"],\"timestamp\":{\"$date\":1572661192240},\"title\":\"The ECG Sequence\",\"stats\":{\"completed\":{\"total\":24,\"ratings\":[2,2,2,2,2,3,1,3,3,1,3,5,4,3,4,2,3,4,2,2,2,3,2,3],\"rators\":[\"J9zJq7PMGb6mqzcHW\",\"rehehi2Tr2mwaEoJE\",\"cjxsqXfkAPoadmppi\",\"Es4eX2stRpyoXeC7f\",\"8J2Dqqz9PaFufQzwY\",\"TrquEHytntLKHA4m2\",\"pBMXMQem6BpSeooYT\",\"DkSMZ3jZLkwviKb9g\",\"htXCitorobtqYymjN\",\"CodX5WjK3NraJKdmk\",\"k63LjKkX5p7SYng7C\",\"NzJKK8Cuf3bcqZfcw\",\"mGaEDPw5FsDb3vdnq\",\"gXTAie79kiw28tx5u\",\"2HgHueLXxCZjXiEyy\",\"LNCb5rksJLJ43L4Nw\",\"rhS8qXRjZcpDXkwnE\",\"ZmPeQs5ZrXvbC8Rym\",\"sxci7DYKNa6q22Sjq\"],\"quality\":[]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"quality\":0,\"family\":[{\"_id\":\"TMBiGb2Thd86Kpvjp\",\"language\":\"cpp\"},{\"_id\":\"8dFqh23xMpfFf85Wb\",\"language\":\"java\"},{\"_id\":\"9DjLa5TbT7X73hj5n\",\"language\":\"javascript\"},{\"_id\":\"9Px2rkc9TPhK54wDb\",\"language\":\"python3\"},{\"_id\":\"sLPByuNq7tn5pTWN3\",\"language\":\"ruby\"}]}}"]