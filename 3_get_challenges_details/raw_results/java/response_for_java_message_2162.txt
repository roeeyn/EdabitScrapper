a["{\"msg\":\"result\",\"id\":\"638\",\"result\":{\"_id\":\"2seaqQz4fvLDCLJz2\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"import java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class Bunches {\\n\\tpublic static List<Fruit> splitBunches(List<Fruit> bunches) {\\n\\t\\t\\n\\t}\\n}\\n\\nclass Fruit {\\n\\tprivate String name;\\n\\tprivate int quantity;\\n\\t\\n\\tpublic Fruit(String name, int quantity) {\\n\\t\\tthis.name = name;\\n\\t\\tthis.quantity = quantity;\\n\\t}\\n\\t\\n\\tpublic void setName(String name) { this.name = name; }\\n\\tpublic void setQuantity(int quantity) { this.quantity = quantity; }\\n\\tpublic String getName() { return this.name; }\\n\\tpublic int getQuantity() { return this.quantity; }\\n\\tpublic String toString() { \\n\\t\\treturn String.format(\\\"{name: %s, quantity: %d}\\\", this.name, this.quantity); \\n\\t}\\n}\",\"difficulty\":2.303030303030303,\"familyId\":\"JMrQcuAA9rkvK29L9\",\"instructions\":\"You bought a few bunches of fruit over the weekend. Create a function that splits a bunch into singular objects inside an array.\\n\\n### Examples\\n```\\nsplitBunches([\\n  {name: \\\"grapes\\\", quantity: 2}\\n]) ➞ [\\n  {name: \\\"grapes\\\", quantity: 1},\\n  {name: \\\"grapes\\\", quantity: 1}\\n]\\n\\n\\nsplitBunches([\\n  {name: \\\"currants\\\", quantity: 1},\\n  {name: \\\"grapes\\\", quantity: 2},\\n  {name: \\\"bananas\\\", quantity: 2}\\n]) ➞ [\\n  {name: \\\"currants\\\", quantity: 1},\\n  {name: \\\"grapes\\\", quantity: 1},\\n  {name: \\\"grapes\\\", quantity: 1},\\n  {name: \\\"bananas\\\", quantity: 1},\\n  {name: \\\"bananas\\\", quantity: 1}\\n]\\n```\\n\\n### Notes\\n- The input array will never be empty.\\n- Objects will always have a `name` and `quantity` over `0`.\\n- The returned object should have each fruit in the same order as the original.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"/** \\n================================= \\nTestGen 3.1 for JUnit 4.13.0 \\t\\t\\nTest Case: Bunches::splitBunches \\nTimestamp: 10/24/2020 12:58:25 AM \\n---------------------------------\\n® DARKKO 2020 © \\n================================= \\n\\n**/ \\n\\nimport static org.junit.Assert.assertEquals;\\nimport org.junit.Test;\\nimport java.util.ArrayList;\\nimport java.util.List;\\n\\npublic class BunchesTest {\\n\\t\\n\\t@Test\\n\\tpublic void test01() {\\n\\t\\tList<Fruit> b = new ArrayList<Fruit>();\\n\\t\\tb.add(new Fruit(\\\"bananas\\\", 1));\\n\\t\\tList<Fruit> r = new ArrayList<Fruit>();\\n\\t\\tb.forEach((f) -> { for(int i = 0; i < f.getQuantity(); i++) r.add(new Fruit(f.getName(), 1)); });\\n\\t\\tassertEquals(r.toString(), Bunches.splitBunches(b).toString());\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() {\\n\\t\\tList<Fruit> b = new ArrayList<Fruit>();\\n\\t\\tb.add(new Fruit(\\\"bananas\\\", 2));\\n\\t\\tList<Fruit> r = new ArrayList<Fruit>();\\n\\t\\tb.forEach((f) -> { for(int i = 0; i < f.getQuantity(); i++) r.add(new Fruit(f.getName(), 1)); });\\n\\t\\tassertEquals(r.toString(), Bunches.splitBunches(b).toString());\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test03() {\\n\\t\\tList<Fruit> b = new ArrayList<Fruit>();\\n\\t\\tString[] fruit = new String[] {\\\"bananas\\\", \\\"grapes\\\"};\\n\\t\\tint[] quantity = new int[] {2, 2};\\n\\t\\tfor(int i = 0; i < fruit.length; i++) b.add(new Fruit(fruit[i], quantity[i]));\\n\\t\\tList<Fruit> r = new ArrayList<Fruit>();\\n\\t\\tb.forEach((f) -> { for(int i = 0; i < f.getQuantity(); i++) r.add(new Fruit(f.getName(), 1)); });\\n\\t\\tassertEquals(r.toString(), Bunches.splitBunches(b).toString());\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test04() {\\n\\t\\tList<Fruit> b = new ArrayList<Fruit>();\\n\\t\\tString[] fruit = new String[] {\\\"cherry tomatoes\\\", \\\"bananas\\\", \\\"grapes\\\", \\\"cherry tomatoes\\\"};\\n\\t\\tint[] quantity = new int[] {2, 1, 2, 3};\\n\\t\\tfor(int i = 0; i < fruit.length; i++) b.add(new Fruit(fruit[i], quantity[i]));\\n\\t\\tList<Fruit> r = new ArrayList<Fruit>();\\n\\t\\tb.forEach((f) -> { for(int i = 0; i < f.getQuantity(); i++) r.add(new Fruit(f.getName(), 1)); });\\n\\t\\tassertEquals(r.toString(), Bunches.splitBunches(b).toString());\\n\\t}\\n\\t\\n}\\n// end of tests\",\"language\":\"java\",\"quality\":0,\"summary\":\"You bought a few bunches of fruit over the weekend. Create a function that splits a bunch into singular objects inside an array.\\n\\nExamples\\nsplitBunches([\\n  {name: \\\"grapes\\\", quantity: 2}\\n]) ➞ [\\n  {name: \\\"grapes\\\", quantity: 1},\\n  {name: \\\"grapes\\\", quantity: 1}\\n]\\n\\nsplitBunches([\\n  {name: \\\"currants\\\", quantity: 1},\\n  {name: \\\"grapes\\\", quantity: 2},\\n  {name: \\\"bananas\\\"\",\"tags\":[\"arrays\",\"objects\",\"loops\"],\"timestamp\":{\"$date\":1603345415675},\"title\":\"Splitting Objects Inside An Array\",\"stats\":{\"completed\":{\"total\":33,\"ratings\":[3,3,3,3,3,3,3,0,2,2,3,3,3,3,3,4,3,4,2,2,0,3,4,2,0,3,0,2,1,1,2,1,2],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"crgMgiGjwcp8Wnbpt\",\"N3HLmYG9RSbwEbnv8\",\"gXTAie79kiw28tx5u\",\"QfjvAWZnumxpSYpzQ\",\"tuKfJSqccPhjfe8ER\",\"GRpEkxhCBeoZrGfuP\",\"mTF6oWX2WhFR4M3QK\",\"j5QzY7Rc4fqdTdxuv\",\"feavP3mGDve6obsQa\",\"4fpPZ59wamBBPuBdz\",\"H5KSDzxwGtgftsuik\",\"dpPdS4oKeYRmATFoH\",\"XbbcA7iXFz9y2XneB\",\"LNCb5rksJLJ43L4Nw\",\"jyoLggHk8xQKZuoQC\",\"nAuhwzeaxm62fF6Mi\",\"c7uBxu2rgY77H5d79\",\"WFt3NDxBaXBftzjHE\",\"rEWbYF9mHh28oRvT9\",\"yLLXKANX9yv4o7aPo\",\"Su3vDnttRBpxeyDen\",\"Z3JZpmrNTwzgpob2n\",\"Ac6nvFJKAddyEYG5T\",\"uGbczREzepLDPrt4i\",\"wFRLGjA56kj7xyhmv\",\"sxci7DYKNa6q22Sjq\"]},\"flags\":0},\"editorId\":\"a777e8chPvJkY3tKa\",\"family\":[{\"_id\":\"2seaqQz4fvLDCLJz2\",\"language\":\"java\"},{\"_id\":\"FrFkH5BPnqz4pYpqD\",\"language\":\"javascript\"},{\"_id\":\"zXACKeaEzLK9XwBwp\",\"language\":\"python3\"}]}}"]