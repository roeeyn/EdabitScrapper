a["{\"msg\":\"result\",\"id\":\"754\",\"result\":{\"_id\":\"RdwGosFoQQT6Z82sm\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class CaseIndexInverter {\\n\\tpublic static String invert(String s) {\\n\\t\\t// your recursive solution here\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":2.9375,\"editorId\":\"a777e8chPvJkY3tKa\",\"familyId\":\"u3YZXRAXMjictjSzW\",\"instructions\":\"Write a **recursive** function that takes a string input and returns the string in a *reversed* **case** and **order**.\\n\\n### Examples\\n```\\ninvert(\\\"dLROW YM sI HsEt\\\") ➞ \\\"TeSh iS my worlD\\\"\\n\\ninvert(\\\"ytInIUgAsnOc\\\") ➞ \\\"CoNSaGuiNiTY\\\"\\n\\ninvert(\\\"step on NO PETS\\\") ➞ \\\"step on NO PETS\\\"\\n\\ninvert(\\\"XeLPMoC YTiReTXeD\\\") ➞ \\\"dExtErIty cOmplEx\\\"\\n```\\n\\n### Notes\\n- No empty strings and will neither contain special characters nor punctuation.\\n- You are expected to solve this challenge using a **recursive** approach.\\n- You can check on the **Resources** tab for more details about *recursion* in Java.\\n- An iterative version of this challenge can be found via this [link](https://edabit.com/challenge/n63bWFSAxgh3Qwhvn).\\n- A collection of  challenges in recursion can be found via this [link](https://edabit.com/collection/Yx78jEBrKppHBNsoQ).\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"/** \\n==================================== \\nTestGen 2.3 for JUnit 4.13.0 \\t\\t\\nTest Case: CaseIndexInverter::invert \\nTimestamp: 10/12/2020 2:19:33 AM \\n------------------------------------ \\n® DARKKO 2020 © \\n==================================== \\n\\n**/ \\n\\nimport static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class CaseIndexInverterTest { \\n\\t\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertEquals(\\\"TeSh iS my worlD\\\", CaseIndexInverter.invert(\\\"dLROW YM sI HsEt\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertEquals(\\\"DESREVER xedni DNA esac SI GNIRTS SIHt\\\", CaseIndexInverter.invert(\\\"This string is CASE and INDEX reversed\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertEquals(\\\"ElBiSrEvEr\\\", CaseIndexInverter.invert(\\\"ReVeRsIbLe\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertEquals(\\\"nOiTaCiFiMaR\\\", CaseIndexInverter.invert(\\\"rAmIfIcAtIoN\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertEquals(\\\"sLAUTCELLETNi\\\", CaseIndexInverter.invert(\\\"IntellectualS\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertEquals(\\\"This string is CASE and INDEX reversed\\\", CaseIndexInverter.invert(\\\"DESREVER xedni DNA esac SI GNIRTS SIHt\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertEquals(\\\"ReVeRsIbLe\\\", CaseIndexInverter.invert(\\\"ElBiSrEvEr\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertEquals(\\\"rAmIfIcAtIoN\\\", CaseIndexInverter.invert(\\\"nOiTaCiFiMaR\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test09() { \\n\\t\\tassertEquals(\\\"IntellectualS\\\", CaseIndexInverter.invert(\\\"sLAUTCELLETNi\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test10() { \\n\\t\\tassertEquals(\\\"ytInIUgAsnOc\\\", CaseIndexInverter.invert(\\\"CoNSaGuiNiTY\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test11() { \\n\\t\\tassertEquals(\\\"step on NO PETS\\\", CaseIndexInverter.invert(\\\"step on NO PETS\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test12() { \\n\\t\\tassertEquals(\\\"XeLPMoC YTiReTXeD\\\", CaseIndexInverter.invert(\\\"dExtErIty cOmplEx\\\"));\\n\\t}\\n\\n}\\n// end of tests\",\"language\":\"java\",\"quality\":0,\"stats\":{\"completed\":{\"ratings\":[5,5,5,5,5,5,4,1,5,3,2,2,5,2,0,3,2,5,3,3,0,2,3,0,4,5,3,3,2,2,4,4,2,2,2,2,3,5,2,2,5,4,1,2,1,1,1,4],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"rehehi2Tr2mwaEoJE\",\"Ym8AjbKGSJooun3nt\",\"cJmmvnmJSXvBXtydi\",\"azAzSkvJd7eyXY9x9\",\"FTHXj9Rfx9wdujSzy\",\"RQL2PAWda9Bh79GNi\",\"gXTAie79kiw28tx5u\",\"T2vhHPhRR96hRizq8\",\"7YbGHKwApShJ7J4NK\",\"fv2pFy78rfLWyjz8T\",\"nHj7SC5cnmkTApbgY\",\"p22yLbgtHim2rJxrE\",\"rhS8qXRjZcpDXkwnE\",\"LNCb5rksJLJ43L4Nw\",\"Gt2rpDwTdj9jfXNQ4\",\"GvLLKHi7NwAjutdDk\",\"CuXeZN3q4yS2S7xPi\",\"LFscDZ9jmDM4fAgky\",\"Su3vDnttRBpxeyDen\",\"htXCitorobtqYymjN\",\"rauwH7yancr84Lris\",\"7ZA3noZZ3LhNTHBcq\",\"nuZktSPhsfpnW3T6f\",\"HYWqw7MkdgdFNdEL6\",\"zHECHZJhJpeCgDp7Q\",\"cHRQrTjHyCcmMnNXz\",\"ENKzDHDo4YFmztrDN\",\"Z3JZpmrNTwzgpob2n\",\"iXpqypRdDsPC7Pbdf\",\"oakQmzaYNePndFFCB\",\"FuaodNxtos7fAELza\",\"aswAjfzzoqEnnsXvT\",\"yv2QLxoywSnwSZkWw\",\"QMbzJWCjNYHXessxx\",\"2jFreoQFExajzQqEJ\",\"LjoaufncfAdw5ZaoA\",\"WN9Gn8fyStG57qzGC\",\"yajQSrNPFXEaJTuBt\",\"aqhzzoK9fofcL3mJQ\",\"sxci7DYKNa6q22Sjq\",\"KMR6vNzvSKMA2cXnK\"],\"total\":49},\"flags\":0},\"summary\":\"Write a recursive function that takes a string input and returns the string in a reversed case and order.\\n\\nExamples\\ninvert(\\\"dLROW YM sI HsEt\\\") ➞ \\\"TeSh iS my worlD\\\"\\n\\ninvert(\\\"ytInIUgAsnOc\\\") ➞ \\\"CoNSaGuiNiTY\\\"\\n\\ninvert(\\\"step on NO PETS\\\") ➞ \\\"step on NO PETS\\\"\\n\\ninvert(\\\"XeLPMoC YTiReTXeD\\\") ➞ \\\"dExtErIty cOmplEx\\\"\\n\\nNotes\\nNo empty strings and will neither contain special ch\",\"tags\":[\"recursion\",\"strings\",\"validation\"],\"timestamp\":{\"$date\":1602441154361},\"title\":\"Recursion: Case and Index Inverter\",\"family\":[{\"_id\":\"RdwGosFoQQT6Z82sm\",\"language\":\"java\"},{\"_id\":\"eRLRgKyLWkPjdNN9G\",\"language\":\"javascript\"},{\"_id\":\"hmt2HMc4XNYrwPkDh\",\"language\":\"python3\"}]}}"]