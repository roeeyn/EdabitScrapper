a["{\"msg\":\"result\",\"id\":\"579\",\"result\":{\"_id\":\"f72omtBYFEBotgdEX\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n\\tpublic static String expand(long int num) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":2.1639344262295084,\"familyId\":\"MQiG8cWkgMDNqeorq\",\"instructions\":\"Create a function that takes a _number_ and return a _string_ with the number in expanded notation (AKA expanded form). See the resources tab for details on expanded notation.\\n\\n### Examples\\n```\\nexpand(13) ➞ \\\"10 + 3\\\"\\n\\nexpand(86) ➞ \\\"80 + 6\\\"\\n\\nexpand(17000000) ➞ \\\"10000000 + 7000000\\\"\\n\\nexpand(5325) ➞ \\\"5000 + 300 + 20 + 5\\\"\\n```\\n\\n### Notes\\nYou can expect only whole numbers greater than 0 as test input.\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(\\\"10 + 3\\\", Challenge.expand(13));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(\\\"80 + 6\\\", Challenge.expand(86));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(\\\"10000000 + 7000000\\\", Challenge.expand(17000000));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(\\\"400000000 + 20000000 + 300000 + 70000 + 20 + 2\\\", Challenge.expand(420370022));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(\\\"70000 + 300 + 4\\\", Challenge.expand(70304));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(\\\"9000000\\\", Challenge.expand(9000000));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(\\\"5000 + 300 + 20 + 5\\\", Challenge.expand(5325));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n    assertEquals(\\\"2000000000000 + 90000000000 + 6000000000 + 30000000 + 9000000 + 400000 + 80000 + 5000 + 200 + 90 + 3\\\", Challenge.expand(2096039485293L));\\n  }\\n\\t\\n\\t@Test\\n  public void test9() {\\n    assertEquals(\\\"90000000000000 + 2000000000000 + 90000000000 + 3000000000 + 400000000 + 3000000 + 30000 + 4000 + 500 + 70 + 3\\\", Challenge.expand(92093403034573L));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"Create a function that takes a number and return a string with the number in expanded notation (AKA expanded form). See the resources tab for details on expanded notation.\\n\\nExamples\\nexpand(13) ➞ \\\"10 + 3\\\"\\n\\nexpand(86) ➞ \\\"80 + 6\\\"\\n\\nexpand(17000000) ➞ \\\"10000000 + 7000000\\\"\\n\\nexpand(5325) ➞ \\\"5000 + 300 + 20 + 5\\\"\\n\\nNotes\\nYou can expect only whole numbers greater than 0\",\"tags\":[\"math\",\"algorithms\",\"strings\",\"numbers\"],\"timestamp\":{\"$date\":1567993002449},\"title\":\"Express Number in Expanded Notation\",\"stats\":{\"completed\":{\"total\":70,\"ratings\":[2,2,2,2,2,3,2,1,2,1,3,2,0,3,3,1,3,2,1,2,2,1,2,2,3,1,2,3,4,3,3,2,3,2,2,0,3,2,5,3,1,0,2,2,3,2,1,4,2,3,3,3,1,2,1,3,2,3,2,2,3],\"rators\":[\"3pdgguqZgNDSAJSGm\",\"sxci7DYKNa6q22Sjq\",\"d8uQHFeaYzMevb3iH\",\"eXW8reZCCZHQzJjQi\",\"8J2Dqqz9PaFufQzwY\",\"W4jpCs2jekeg5qAwc\",\"vqmnzoMrts32Bx2J9\",\"yazNfwgLx7jSAZ8Tv\",\"qRhXvCaA7qgDoeFnr\",\"2NJuDfSqdrF8kHHni\",\"rehehi2Tr2mwaEoJE\",\"r9hHZYPQAqJ9DbwLX\",\"J9zJq7PMGb6mqzcHW\",\"kXEfD7xxEyWd7oxxL\",\"D6J3wu8fB5ksyoya6\",\"fZky27mpbfX7soJKa\",\"yK7zzK2aGJwuWKHRL\",\"qb2DTmzQj4vNfq5K7\",\"wF857z4NWzmonCPNe\",\"xqA8zqyXwS76MKEm9\",\"ko7oJ85JMftgcbkrr\",\"B2FfgKcrkEpjywk5s\",\"oeEDPQaCwHFFXsrny\",\"ngRNQYczN4QJ2tDN8\",\"4RHx3H8EwP2oboW8e\",\"AyrEvM2GLX2jqM772\",\"xnhBi4BCdJNAXXRvk\",\"Es4eX2stRpyoXeC7f\",\"wYYMNPe8nSiJFbvJw\",\"rTj67TTydxqkpwFtN\",\"cjxsqXfkAPoadmppi\",\"SB7E6rYCcezLZgfHs\",\"gJbvbqosimaP4ZAYb\",\"jyoLggHk8xQKZuoQC\",\"TrquEHytntLKHA4m2\",\"5seiNqw6ZXoF2GRRd\",\"pBMXMQem6BpSeooYT\",\"k63LjKkX5p7SYng7C\",\"jRqY4i8gPemsZMBGf\",\"mfm3gB39arY8Rjb2y\",\"4RsakkyRXyYGwFxEa\",\"etoSR23iELGGgs9rA\",\"yXGiiSAR5nBHnH3yr\",\"gXTAie79kiw28tx5u\",\"Ym8AjbKGSJooun3nt\",\"mxjrvQP2vPFBjAGxu\",\"vEN56nHw7hTxbyHhp\",\"rWhXHhzF4W8bea6LP\",\"mQKWauR6b252TmdX4\",\"jXTnL3JatkKjoifyb\",\"8Xx8nWXRydHDBGfQf\",\"sgKJeTKjP9Y94CEAP\",\"buX4mCQhtXCfBjeno\",\"vRXuYYBNuHEQ29fbm\",\"CggGfsERnPKGupFWp\",\"jCjCvyhqhpebkJn34\",\"2NJZbusRvu3eJ4tHu\",\"wFRLGjA56kj7xyhmv\",\"KMR6vNzvSKMA2cXnK\",\"a49eNnfRwSMxsDJXf\",\"htXCitorobtqYymjN\",\"uw47663LqPME8btaA\"],\"quality\":[4,3,3,5,4,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4,\"family\":[{\"_id\":\"aYmZ4TycBKmgow9t6\",\"language\":\"cpp\"},{\"_id\":\"f72omtBYFEBotgdEX\",\"language\":\"java\"},{\"_id\":\"fiXLsemkYTK9oKuDC\",\"language\":\"javascript\"},{\"_id\":\"ohhdxGnSMFbr2Y2Qu\",\"language\":\"php\"},{\"_id\":\"W8QKA4YpzmeLeZWMX\",\"language\":\"python3\"},{\"_id\":\"Buk2bs3cX9HshgygY\",\"language\":\"ruby\"}]}}"]