a["{\"msg\":\"result\",\"id\":\"395\",\"result\":{\"_id\":\"g3zwGCJN5Ti8TSSbh\",\"archived\":false,\"author\":\"kochug\",\"authorId\":\"vQEmjTRgmdGNYB7yk\",\"code\":\"public class Program {\\n\\tpublic static boolean isCircleCollision(int[] c1, int[] c2) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.5120481927710843,\"familyId\":\"8t2Kzue8xm5ePy9eM\",\"instructions\":\"Create a method that returns `true` if the given circles are intersecting, otherwise return `false`. The circles are given as two arrays containing the values in the following order:\\n\\n1. Radius of the circle.\\n2. Center position on the x-axis.\\n3. Center position on the y-axis.\\n\\n### Examples\\n```\\nisCircleCollision([10, 0, 0], [10, 10, 10]) ➞ true\\n\\nisCircleCollision([1, 0, 0], [1, 10, 10]) ➞ false\\n```\\n\\n###  Notes\\n- You can expect useable input and positive radii.\\n- The given coordinates are the centers of the circles.\\n- We are looking for intersecting areas, not intersection outlines.\\n- Check the **Resources** tab for help.\",\"lab\":\"import static org.hamcrest.core.Is.is;\\nimport org.junit.Test;\\nimport static org.junit.Assert.assertThat;\\n\\npublic class ChallengeTests {\\n\\t@Test\\n\\tpublic void test1() {\\n\\t\\tassertThat(Program.isCircleCollision(new int[]{10,0,0}, new int[]{10,10,10}), is(true));\\n\\t}\\n\\t@Test\\n\\tpublic void test2() {\\n\\t\\tassertThat(Program.isCircleCollision(new int[]{10,0,0}, new int[]{5,0,0}), is(true));\\n\\t}\\n\\t@Test\\n\\tpublic void test3() {\\n\\t\\tassertThat(Program.isCircleCollision(new int[]{1,0,0}, new int[]{1,0,0}), is(true));\\n\\t}\\n\\t@Test\\n\\tpublic void test4() {\\n\\t\\tassertThat(Program.isCircleCollision(new int[]{5,0,0}, new int[]{5,10,10}), is(false));\\n\\t}\\n\\t@Test\\n\\tpublic void test5() {\\n\\t\\tassertThat(Program.isCircleCollision(new int[]{1,0,0}, new int[]{1,10,10}), is(false));\\n\\t}\\n}\",\"language\":\"java\",\"summary\":\"Create a method that returns true if the given circles are intersecting, otherwise return false. The circles are given as two arrays containing the values in the following order:\\n\\nRadius of the circle.\\nCenter position on the x-axis.\\nCenter position on the y-axis.\\n\\nExamples\\nisCircleCollision([10, 0, 0], [10, 10, 10]) ➞ true\\n\\nisCircleCollision([1, 0, 0], [1, 10,\",\"tags\":[\"games\",\"algebra\",\"algorithms\",\"math\"],\"timestamp\":{\"$date\":1523647924347},\"title\":\"Simple Circle Collision Detection\",\"stats\":{\"completed\":{\"total\":181,\"ratings\":[1,1,1,1,1,2,2,2,1,2,3,2,0,2,1,1,1,2,1,2,1,0,5,3,1,2,3,2,2,1,1,5,1,0,2,2,1,5,1,2,2,0,2,1,5,0,1,2,1,1,1,2,0,3,1,2,1,2,2,2,1,1,2,2,1,2,2,2,0,1,2,2,2,1,2,2,1,1,0,2,1,1,1,1,1,2,2,3,1,2,0,2,1,1,1,2,1,1,0,1,2,1,1,2,1,2,2,2,1,1,5,0,2,0,3,2,2,1,2,2,1,0,0,1,1,1,2,2,2,1,3,2,1,1,0,2,1,0,0,2,1,0,1,1,1,2,2,2,2,2,2,2,2,1,3,2,2,2,0,2,1,2,2,1,1,1],\"rators\":[\"vQEmjTRgmdGNYB7yk\",\"cGKgWB8ZZcidku3qj\",\"ZBnnBBK59wo5CBeE2\",\"iFZ9ksE5WZHEkNjxt\",\"X4ww4EcFsrfbmgMdD\",\"MjXsCQoYHxBs8mFPZ\",\"CotyEj3eY9CbwBs2t\",\"noeTi3wBya2KHanHD\",\"iRgkGNCNtoPKC25EY\",\"BDTuWZJJFGbbmojEH\",\"ejBpWKzcnB2w4FWSb\",\"M3mkzSYXCpCt2HhC3\",\"hKZCo3exwfkhfcty8\",\"D8NKkx5pYSqZxNrp2\",\"vz5LbqWPwpxAejP5k\",\"cDntKduHa8xh8vZad\",\"GRZzKCbeb4xKHFCrZ\",\"79ZbLzp7xepvkonoh\",\"WXLd6Yr7iWjTpJDRA\",\"iumiEEzgPfm2oJSA2\",\"fbNWxXTqZy2mXNbGJ\",\"8AJQH2pDjMkmbQexF\",\"vYv5Sv9jRe4JHZ9YG\",\"GqKjzNcrGScdx86Dv\",\"KufLCdP3Ec2iYRyHD\",\"ddfeZ4pbbcXFXqZmY\",\"tW2XYfMDPBbMknTmo\",\"qKQjAsy2947bW5s8y\",\"M2vL4CLzM6ePi2jF5\",\"ZWhyHTM2L4sD4He7S\",\"wgY8cFN3574E6hbTr\",\"vB3v3B6kz6Bi7vxez\",\"YGYf9GKzaF8CWnDHE\",\"T5JDgJdY7wXDH3WN6\",\"StRujMc9NR5upghP4\",\"myrwrpTHtYXiL3kPz\",\"SuMxWqB59zviw3z8u\",\"qzFMJGxMErfBhExMm\",\"LtS23waWHDCmXYQxi\",\"BjkKdLkSJTQsfbW8x\",\"g4K6nM72TtXLKog5x\",\"CfZddq38roHL9JGwt\",\"A53zTzyfGh4cYiKo2\",\"QubhaGZKhYJr9z8AC\",\"CXNPqTLgbHGhsMG6P\",\"2gtgcQNxiefp2zP76\",\"uJri5bCXEeANQXHcu\",\"u437YTqDGSjh49fsY\",\"yJyjT7Z2PPQmzzWpP\",\"vjh7xAmbYZoaYWeRL\",\"z6gRoaKmajaC6FgYb\",\"Dob8Wq6Th4TdwygJq\",\"bRQmYWjmSHRrEaNxr\",\"E8kxrkhNmubbNJTDT\",\"L8KR8FTXXY4o6ynRW\",\"5Sjz9M9f7yQzkpQeQ\",\"ydos8Ba8nZdYRNJpS\",\"yhk8G8cM3p9JAbfJN\",\"nfqNLaZm5h4cqT8yC\",\"PXZYTbHM8AZpb7m3w\",\"a49eNnfRwSMxsDJXf\",\"owXQGRSP8DS8Eypkm\",\"gyeE4Dypk4d2rLLdN\",\"aMNhTh35QQAs33ycQ\",\"vRXuYYBNuHEQ29fbm\",\"MxAEjgYwezXcM4euN\",\"ZxT77KmWRWEpY9FXM\",\"SocjAuHjWDPdH4wQ3\",\"p28tmk8bcHjXsxaAg\",\"sxci7DYKNa6q22Sjq\",\"9c8n7ti5vCjTRgiGN\",\"2oiE6qHMbW3cv7N74\",\"FvWKuSqHdXZ7HM2sD\",\"t2kdBPj9qQAXY2Ehd\",\"3gxJoNp59B4eoyyed\",\"fuFHzKFx9xAYL67XW\",\"FCRaETQNre8kMedXq\",\"gBGjCfJvPHswDM5JQ\",\"6TDEhHv3uQCZLQeiH\",\"CLmJduqJHX83dM4Pd\",\"oeEDPQaCwHFFXsrny\",\"rJFJrMGrHJ9SRt5PL\",\"phA6MomRzh9oz3eqn\",\"3KjxQu9RZ8ZSywvLz\",\"DgMxY7D8yr8htiPZo\",\"Es4eX2stRpyoXeC7f\",\"J9zJq7PMGb6mqzcHW\",\"stFzw945NadNHC2ap\",\"i5QeAsrM4m6hzPTku\",\"mfdAK3AxsrRZa3WDd\",\"e44E3oydKuLtgTysA\",\"n2DdqY5Ae45RunSDh\",\"S8NaYMWB3aZXgRdvH\",\"y7NyT6FnDzPhAzkjF\",\"wYYMNPe8nSiJFbvJw\",\"8JyqsSbN2FJXPr3cw\",\"cGebawowzCKcFn8gq\",\"wbSLghDxkTjiYJrEH\",\"RLdk87iKTTNEx4yF7\",\"gGnDsJz5hr2t9MKCF\",\"zAyH659RXP97NePBJ\",\"yHNuGqmFHi7hnA5j7\",\"etoSR23iELGGgs9rA\",\"TrquEHytntLKHA4m2\",\"hB5mgzMwQSnhBzi7P\",\"5seiNqw6ZXoF2GRRd\",\"jyoLggHk8xQKZuoQC\",\"fZjkX29nhRTWWb75k\",\"Kso7rzAKB4TTCPKgM\",\"WZujpe8yQAyZmpWHg\",\"8zZ6xmzpiFair25qr\",\"hMAhaSSq6nT7wRMmr\",\"htXCitorobtqYymjN\",\"DePiAS7u5Pk9d6SLr\",\"LECeLHSZqfPKjvTa9\",\"mfm3gB39arY8Rjb2y\",\"y6kfyYmydcD8tkBk7\",\"kXEfD7xxEyWd7oxxL\",\"g4NCSxxHqHCGMpWwT\",\"pBpocskXP3ZEy2vKQ\",\"B4pxRqzo43M7S8FbP\",\"QS45qu2DFXcCqpAnB\",\"rvojHhKH3DaxotefQ\",\"cfvb8CCN3kQBqorRR\",\"ew2x4gi9BTe7vH9vL\",\"Fd9765rksgPK4E2Zy\",\"YFHkjbM6obMSj24zi\",\"DzvdGwHEjqsX7wyKr\",\"B7EHmyWMEWytXnKaH\",\"yXGiiSAR5nBHnH3yr\",\"gXTAie79kiw28tx5u\",\"rWhXHhzF4W8bea6LP\",\"jb9RLyyuo565bKDzN\",\"sJuq37PFQozqB4C7k\",\"mG8HqKiAQFTdRZthG\",\"8Xx8nWXRydHDBGfQf\",\"AeJSxRqw2dJZuGvdk\",\"jXTnL3JatkKjoifyb\",\"BbcH2NLjE4tKAZ3wR\",\"azAzSkvJd7eyXY9x9\",\"unNqQjSHzkb4pCzEu\",\"pi76g3eRpnKrhee2a\",\"mQKWauR6b252TmdX4\",\"hhxjQREtmHSheH9Pj\",\"sF2AbeWbdtwbeMohB\",\"bur3yQ8s34zqKGEro\",\"DkSMZ3jZLkwviKb9g\",\"osounBSYa7tg7PoEd\",\"rhS8qXRjZcpDXkwnE\",\"4ySzqKC5s3ZRpG9di\",\"buX4mCQhtXCfBjeno\",\"HXbTKW3jmmyRAsKrr\",\"uw47663LqPME8btaA\",\"srJ34BaybkQh3qRkM\",\"x7kR2T5qazEsNnvHA\",\"6rvJwN4mcX7iYGjY7\",\"e3qkjJeHjijERWfeg\",\"KsYk4jsRLMz2ToPco\",\"dcW9oK2uRo8h8mBe2\",\"a7NwjdLTMgHZS72fA\",\"xEX3TDY6C2h82dJTn\",\"KMR6vNzvSKMA2cXnK\",\"PJu3WcTpfRrvHfQiS\",\"EQrbrQdcwkkjJMa2y\",\"6waJRR7JPunYF8DhS\",\"unqzSsxpxj9sZ7rbD\",\"FxPDKKibxnZjGJLs6\",\"nFbmNzMQ38TncmfQX\"],\"quality\":[5,5,4,4,5,5]},\"complaints\":{\"total\":0,\"reasons\":[],\"skippers\":[\"vQEmjTRgmdGNYB7yk\"]},\"instructions\":{\"score\":-35.45,\"voters\":[\"ZQEd4q4GpGy7gh9py\",\"BkPgkDQGHm66X4Qai\",\"LfR9Bopm57BMNNnkp\",\"G9zQ7P8uJCuAXGRmK\",\"J3RFGrYLugHTTDxww\",\"mwDqARRdYyKeKBPxX\",\"SfdDzsZSwmLudopjk\"]},\"tests\":{\"score\":0,\"voters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.666666666666667,\"family\":[{\"_id\":\"WNabvHFSL4ivNkDbg\",\"language\":\"cpp\"},{\"_id\":\"g3zwGCJN5Ti8TSSbh\",\"language\":\"java\"},{\"_id\":\"qMKzp256C9Ng9pGYc\",\"language\":\"javascript\"},{\"_id\":\"egWRSXEE8dbKujvHw\",\"language\":\"python3\"},{\"_id\":\"7ub4K9yvgcgcGYEDG\",\"language\":\"ruby\"},{\"_id\":\"aXQQ6dowoJDqSAumN\",\"language\":\"swift\"}]}}"]