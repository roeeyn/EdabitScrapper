a["{\"msg\":\"result\",\"id\":\"137\",\"result\":{\"_id\":\"EzH6jaQPGTR6e8Wfg\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n  public static boolean lastDig(int a, int b, int c) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":0.596,\"familyId\":\"LmALx7RuSsdWYahaZ\",\"instructions\":\"Your job is to create a function, that takes 3 numbers: `a, b, c` and returns `true` if the last digit of `a * b` = the last digit of `c`. Check the examples below for an explanation.\\n\\n### Examples\\n```\\nlastDig(25, 21, 125) ➞ true\\n// The last digit of 25 is 5, the last digit of 21 is 1, and the last\\n// digit of 125 is 5, and the last digit of 5*1 = 5, which is equal\\n// to the last digit of 125(5).\\n\\nlastDig(55, 226, 5190) ➞ true\\n// The last digit of 55 is 5, the last digit of 226 is 6, and the last\\n// digit of 5190 is 0, and the last digit of 5*6 = 30 is 0, which is\\n// equal to the last digit of 5190(0).\\n\\nlastDig(12, 215, 2142) ➞ false\\n// The last digit of 12 is 2, the last digit of 215 is 5, and the last\\n// digit of 2142 is 2, and the last digit of 2*5 = 10 is 0, which is\\n// not equal to the last digit of 2142(2).\\n```\\n\\n### Notes\\nNumbers can be negative.\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(true, Challenge.lastDig(1, 1, 1));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(true, Challenge.lastDig(12, 15, 10));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(true, Challenge.lastDig(15228, 9209, 72162));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(false, Challenge.lastDig(15, 1, 1));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(false, Challenge.lastDig(123, 15, 10));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(false, Challenge.lastDig(5213, 99219, 6165));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(false, Challenge.lastDig(1523, 513, 512));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n\\t\\tSystem.out.println(\\\"Should work with negative numbers.\\\");\\n    assertEquals(false, Challenge.lastDig(-15, 1, 1));\\n  }\\n\\t\\n\\t@Test\\n  public void test9() {\\n\\t\\tSystem.out.println(\\\"Should work with negative numbers.\\\");\\n    assertEquals(false, Challenge.lastDig(123, -15, 10));\\n  }\\n\\t\\n\\t@Test\\n  public void test10() {\\n\\t\\tSystem.out.println(\\\"Should work with negative numbers.\\\");\\n    assertEquals(true, Challenge.lastDig(-12, 15, -10));\\n  }\\n\\n  @Test\\n  public void test11() {\\n\\t\\tSystem.out.println(\\\"Should work with negative numbers.\\\");\\n    assertEquals(true, Challenge.lastDig(15228, -9209, -72162));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"Your job is to create a function, that takes 3 numbers: a, b, c and returns true if the last digit of a * b = the last digit of c. Check the examples below for an explanation.\\n\\nExamples\\nlastDig(25, 21, 125) ➞ true\\n// The last digit of 25 is 5, the last digit of 21 is 1, and the last\\n// digit of 125 is 5, and the last digit of 5*1 = 5, which is equal\\n// to the\",\"tags\":[\"algebra\",\"logic\",\"validation\",\"numbers\"],\"timestamp\":{\"$date\":1568271023363},\"title\":\"Last Digit Ultimate\",\"stats\":{\"completed\":{\"total\":322,\"ratings\":[1,1,1,1,1,0,0,0,0,1,0,3,1,0,1,0,0,0,0,0,0,1,0,0,0,0,1,2,2,2,0,0,0,0,2,2,1,0,0,0,1,2,1,0,2,0,0,0,2,2,1,0,3,1,1,0,1,2,1,0,0,0,0,1,1,1,0,0,0,0,0,2,1,1,0,0,1,0,2,1,1,3,1,0,1,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,0,1,0,1,0,1,2,0,1,0,0,0,0,1,0,1,1,1,3,1,0,1,1,2,1,1,0,2,0,0,0,0,0,1,0,0,0,2,2,1,1,1,0,0,5,1,0,0,2,0,0,0,0,1,0,0,0,1,2,0,1,0,1,1,2,0,0,0,0,0,0,1,0,0,0,0,0,2,1,1,0,2,0,0,1,1,0,1,0,0,2,2,0,1,1,1,0,1,0,0,0,0,0,2,1,0,0,2,0,0,0,0,0,1,0,1,1,1,0,2,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,1,0],\"rators\":[\"vRXuYYBNuHEQ29fbm\",\"FocLpCB2WEiK2gGni\",\"cp3X8hk8yNME7qoD9\",\"sxci7DYKNa6q22Sjq\",\"gBGjCfJvPHswDM5JQ\",\"PHkmuovANGzadceGW\",\"XpNumWaEXgMGnafLH\",\"Yohr2MmAyaWGMbB35\",\"MrNyfG8SGjjBKLvgc\",\"HTdEyxtkq87EJN2Aw\",\"t2kdBPj9qQAXY2Ehd\",\"3gxJoNp59B4eoyyed\",\"ZBDiEMi7dbjRL55LB\",\"a49eNnfRwSMxsDJXf\",\"7v5XEd4wjiJjwSHio\",\"Fdq6CxMWZL8WZiNaM\",\"Jwu3i2k565y77L4aK\",\"RsmJDXdjPLxXiDfQo\",\"45zNYikBk2Wsrn2eM\",\"LvPcgns5Ec7wyMbMv\",\"Ha5J49rhojBRy3BaM\",\"kfDtq2Kf2EfGntYcF\",\"a8MrxisHp6dTXbap8\",\"w6kXe437YHJqaCSEx\",\"qJZsi5rhRnWA38FbA\",\"scqzugAbB4y4By9Tw\",\"9aYyBYbm8MkpeBrFG\",\"NCB3RaRBonefnHBJD\",\"HCctnwWLhMHfXPd7i\",\"C7XYK6hJjzSwiMBpL\",\"HdZ55zdNW4gQ45q5R\",\"5HGq6zCGzX54MMbJS\",\"5TaPWyRv9DZWWodp8\",\"pr4Cm4A369tC9gSeT\",\"7p3Btn9oRNStAZ8G6\",\"5QN8R22z43SrwoHDz\",\"3KjxQu9RZ8ZSywvLz\",\"HsFc9PgmpP2X9Fwh9\",\"s2ZMtR9deh6Kia7pb\",\"D3ASM3aWpcQ8gvnin\",\"bx7ecQAzDDrszmfew\",\"BTAZq3s992yrnbPqz\",\"qgc3hgPcSduWfwkSj\",\"hSrFWemiugfHeL9Fm\",\"tQatuCqYXLqvQ2rDh\",\"mQ2xmpo9H6JvN4oar\",\"bk6Sjnh52qNCYNggH\",\"MoRjLzmh6opQ2ARcm\",\"qAby4AWXmTNeusvg3\",\"rWhXHhzF4W8bea6LP\",\"8JyqsSbN2FJXPr3cw\",\"XPhLf7JYc6mmBYR9A\",\"2cdvd8yuPLSwvGj9w\",\"gp77RykRkHQtqbE9C\",\"m5MkyWuoD4uF8sLGM\",\"uw47663LqPME8btaA\",\"5RcAXjQAbqQtWppy6\",\"fX88wbEuJRZxti6Ji\",\"YYuJBHfJsbhDoSG4g\",\"gJYHiyyMv6mhqFehP\",\"njhNmS8vivtvBFBoz\",\"S47iwvGMEBQAKHWfd\",\"ur2v2gqNn9YGcwEtB\",\"sbEQDGeo3mvLJCZrE\",\"SdMTrmB3qSGBwHTKo\",\"BrCi2652orwjKHZPi\",\"n2DdqY5Ae45RunSDh\",\"EZNT8B7yQnnZmuwCf\",\"NsQ8qYQQ47gSPtQkK\",\"n5wubRfh6zh8QRymN\",\"WuAkXKpcrQy867yCw\",\"MWLAcPoEWDSLrTi9p\",\"TFHfNrmG9a3m6tbKo\",\"uPfkNA3maDhAoKtnb\",\"pCmeZpDvn4Y9Xczwk\",\"Es4eX2stRpyoXeC7f\",\"9XxsZapHq9HDnxkNb\",\"bSh7hsfWHXwnQhDsy\",\"wYYMNPe8nSiJFbvJw\",\"pfQ6Hz5pdgrF8CWat\",\"jDTGwryGygbZiqCEg\",\"sMMZEGp5gw9KS7MJv\",\"mdEQJ2fmGmkbhbvNw\",\"Jhiv9GSSx7NTZKGqJ\",\"Kso7rzAKB4TTCPKgM\",\"8J2Dqqz9PaFufQzwY\",\"3EfDGZ9Sgz5zxzD7a\",\"82weQfHHmno4Mq4X7\",\"6bXrZ8TeBveMQ5kjT\",\"GEzaJZ2cPjENT4ERQ\",\"hB5mgzMwQSnhBzi7P\",\"jyoLggHk8xQKZuoQC\",\"st6dHoprA7daEGcQr\",\"T5xwzaagJoXziNLpk\",\"ZqjP4M6dzu32To33K\",\"TrquEHytntLKHA4m2\",\"yMawoYJBB3Q6JPS7C\",\"e85WYqSpXbCb3iH4H\",\"PaSg9dpK6JHre7hGF\",\"ZQEo2nzPtJHGx2cM7\",\"Yp7uvStL97cC9fKkY\",\"B4pxRqzo43M7S8FbP\",\"DNCu9XRru4zJTMF8r\",\"odEDhaxWuAGXxEswA\",\"EXFQFCRRRfdazM9uJ\",\"TnBqAgXfztW5mshwC\",\"F4synR7Ea8yS2L576\",\"GbZMSzydgNZKYoQ3c\",\"SmmkwyvSHT54PzB5B\",\"n4G4b5PABdGHCaHNH\",\"Yom3RzkMYpweE8cbS\",\"WZujpe8yQAyZmpWHg\",\"4nFXeGakoCjm5GXYa\",\"AeJSxRqw2dJZuGvdk\",\"Bj9Qvjt7MX2mGSuN7\",\"goH2MmhrAjGxiebRX\",\"PfYwiN9h9vHXT2393\",\"A4PkKCWXffBTbMJdP\",\"htXCitorobtqYymjN\",\"ojmmLWL7Hvi6yYWeJ\",\"YuA7rdrQTzpfFLGJq\",\"kSnwZCFe7kB2GteiJ\",\"hhxjQREtmHSheH9Pj\",\"GEDsDpNX4QMhZAxtJ\",\"meS77LKqRswhF5LAy\",\"bCLgcPTHSkG82r5o7\",\"xLTGN8Mg7Q6mDWYDi\",\"cR3ibTMxLyEdDFCHY\",\"puWkZTjbBBnJXH9Rd\",\"45MHqHC33PyeZfzhA\",\"Fs5LERLmurcKXP4N5\",\"Mbmx3ErK8qQdJvcpc\",\"PTRYb5rBAmcdP4q87\",\"8FfxA3PL2fxDYtpKR\",\"kDfdhZS5NsaKtPNWz\",\"tPf5nXX3wPbdTewqX\",\"SGfN8fbMKsE9cisiD\",\"xygLZ8zXLzsKkvSRW\",\"g4NCSxxHqHCGMpWwT\",\"kGukLA3PXkaiaXfbk\",\"6asyTYvz7kMPee8Tz\",\"639dcNXwna5uYfwPx\",\"FrorBN8wRAoptuxtR\",\"3gHMcqnyskbFQ9w63\",\"qCF8rNBcy4P4xcCLs\",\"nbH6pjzJS9Z35JD9r\",\"SbDRsLR6yfZXETyKN\",\"MxmG8Gkti7L5kXYNL\",\"Tf7TJFSPktJBgLA4k\",\"SFjyHZBEqzthL9Bzy\",\"CweSNtrMCbkZLY2Zj\",\"unNqQjSHzkb4pCzEu\",\"tXs5TC9nT27sFCjov\",\"rvojHhKH3DaxotefQ\",\"sYKPxZX5xJZ2GTp6Q\",\"MSa5iqebmdK5C3Bpx\",\"8AvGnwLnDrHXAwX38\",\"ikxSkiQjCjYPsFwMT\",\"E7voFAg53LKaW9Gbj\",\"3PttJMEMgnEdCZ9xv\",\"AtJPPiuzzGYPNEXPe\",\"S7o2pqtFA8jhG2ZRf\",\"umcNKSZ597NfCXiyy\",\"jZowfp9N5RdPmMhdw\",\"yXGiiSAR5nBHnH3yr\",\"72p63TZfPFQBZgQia\",\"YctvR52hXQQzKhYqX\",\"KCEsMas5BbmiD2Q9K\",\"f6uGKbmMdBYCjrMBh\",\"6akKZDu2YSFbdwhPj\",\"McT2pR4g3ptnWNoWq\",\"Fd9765rksgPK4E2Zy\",\"HHXf2G47cyoEmQuiB\",\"3mXBfmwykLEuqR9cC\",\"JXnf7Lz3zotPN365m\",\"7AiqDzNLBQzFsafew\",\"rqq7L69PdSusM6YY5\",\"avXoZmD8SSpqsLST2\",\"kQRtmSZfHdSzFserc\",\"akFPNxXGBK3ceYXpg\",\"9ty3Xe2fBFtMvnyB6\",\"mLPfS53i3c4Yf3jQ3\",\"TTgP9jcqGxCfKotZ3\",\"Rn5YNvYdY468a7vRp\",\"zxRHFTwSLu5m5Tr8Y\",\"6BMT9zBSrAEbCwbYw\",\"6NWx8rGpnZvZ7f4hz\",\"qgZDuH7BceDWrpT36\",\"hPx9H3YM8j2k94DNW\",\"w2rPvPbskuhndnDRG\",\"f2YG3BX7hCfPpw79g\",\"79Wo8iNbhEr7BvrNE\",\"44arJN5SYx3HyfetA\",\"GER4cDdQbugFLAdoj\",\"M3fTYWJX2hb3vuEGJ\",\"2xFvy6u3hE4LtCXMD\",\"J7epB3qSQJ2E8vWkY\",\"kNxEA78KouS78DWaP\",\"WHSB76uqJrCf2XKsw\",\"5ij6scpyYDWiqCZPS\",\"cueHAmTrcWuowXf58\",\"3gsee8akczMZGhihG\",\"7gBLtxKryhTryH5zb\",\"yBeWtGNg9yuECLqGQ\",\"HTHTaRGeFB6tGKRCJ\",\"2wS9Wm3Nj5ZFcMnfA\",\"izdAHuFQcWY2pa3YG\",\"ENtEccBrSYd7oZKFZ\",\"jXTnL3JatkKjoifyb\",\"etoSR23iELGGgs9rA\",\"8Xx8nWXRydHDBGfQf\",\"47PyFbZyxWuP9Bgga\",\"9uvY36FiJRWxRpE7e\",\"ZkvBs5oddaBfKj28G\",\"9FXFESPtZf7KWKH3u\",\"JwBT2xYDafcNG9eKr\",\"CNc6rmwhbxkxEhHAp\",\"4SBj9cygDMHj6PPRP\",\"fD2vkjhwWmxbs3aAn\",\"2X23EB8EciTGTm4dZ\",\"9ShXSwHycr8XCNWzo\",\"W56bWmpQeLJ9JEDsa\",\"m8RTLuXqmythXHYZt\",\"vn6nR36mdfY8z2zKx\",\"bWWFscsAr66ZWHo28\",\"neNNSEbgzx79GYshu\",\"YL4rQWKadY7sGGtGG\",\"8DfhSneJpsw5uqLeM\",\"uFfEio8nzDvL8emhp\",\"rojdHfAAuAYxoaEXp\",\"PtGprKjgzCDqyrp6d\",\"sacPXRKX59BE495oz\",\"pi76g3eRpnKrhee2a\",\"5jDgvkGd4JwatrYXg\",\"hseQSt2EJ5uvb2pQv\",\"2ScA9s5nu35nSMDpt\",\"Yj7ftjzyP67R5NFrH\",\"PJu3WcTpfRrvHfQiS\",\"A3KrxZk4FiSymY6f2\",\"Wi4H6ayKsNDWWQCG5\",\"8WeJLyNE4h6nJ2dNh\",\"btabi3PdyisuY5tn9\",\"3SgSNoAB3sxaYeT3w\",\"QRv96jmNaYsWkxQEG\",\"HCfkcKnPs9mrJojdG\",\"kiq3z4o9ABhQd7aXJ\",\"b6PEkvr66YeCamroN\",\"GkYtSbQuheBF4Enys\",\"srJ34BaybkQh3qRkM\",\"eQXwk5zGckM8tCWYH\",\"c96gH88NsjR3MycAj\",\"dD3Aja8PZSMXMFSDY\",\"buX4mCQhtXCfBjeno\",\"8qNSPHZBpmjSTt3tH\",\"gbAGaynei4oA7DtWs\",\"t55QWHi8o4teZxqqE\",\"xEX3TDY6C2h82dJTn\",\"zkHMTSGrJ8BEKReYE\",\"khdCaD6AGBiR6txLQ\",\"tBj8qDkX8HpFjHRgu\",\"rhS8qXRjZcpDXkwnE\",\"w2HyZ7rTY3HGJwDxN\",\"5LDvZHCDJqePeBrCg\",\"9RJpt5ec2KMLuac4w\",\"Qv2jEtTnFCXX7cdd3\",\"nSLvkGEpiYCtcBLaa\",\"FjJWRjjaW9NqyMAWD\",\"nXw9eTHFraWQtwJtY\",\"LTeL83boRDBnKnWfD\",\"fdyejapW3NWN7utPX\",\"DEDniTrstQYGounXT\",\"ckQwFFWyLXmDQAaCn\",\"NioGGZL9KCn5Ln96t\",\"afvP29FhRou2bTaav\",\"KMR6vNzvSKMA2cXnK\",\"zfyRY2ZoTpJmy6EHu\",\"RsujLHaML6L3KinzK\",\"XNgW94PSq5kkXhojm\",\"unqzSsxpxj9sZ7rbD\",\"9du58gNDkWQEWivbB\",\"9ttuKgRkXr8nryMKC\",\"F8dA24AosSC8XXb7D\",\"6kB5qypxcm62PHsEJ\",\"CHvzhtXnv8HTbPQ56\",\"r72oFMcCQh4rBsKHb\",\"4To7THbHADdtXbewx\",\"nFbmNzMQ38TncmfQX\",\"5kMuNZuxiFcNRDkG4\",\"3Gf7ikLijfoxabiPY\"],\"quality\":[5,5,5,5,5,5,5,4,4,4,5,5,5,4,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,4,5,5,5,5,5,4,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"isHidden\":false,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"quality\":4.818181818181818,\"family\":[{\"_id\":\"9SmzmeTpHdDoKTqco\",\"language\":\"cpp\"},{\"_id\":\"gFiX2TwoCKi6NZz5H\",\"language\":\"csharp\"},{\"_id\":\"EzH6jaQPGTR6e8Wfg\",\"language\":\"java\"},{\"_id\":\"RQtF47HMPbHDGBeW6\",\"language\":\"javascript\"},{\"_id\":\"dNh6xifznKZknjkeu\",\"language\":\"php\"},{\"_id\":\"7PtLRCT5aL9uiqxPs\",\"language\":\"python3\"},{\"_id\":\"f85pwLWPb9Ric9a9y\",\"language\":\"ruby\"},{\"_id\":\"HsmAsuQ8LD4QjgPyY\",\"language\":\"swift\"}]}}"]