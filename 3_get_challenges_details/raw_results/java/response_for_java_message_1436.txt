a["{\"msg\":\"result\",\"id\":\"279\",\"result\":{\"_id\":\"ce3CbX2KwdwaJxxra\",\"archived\":false,\"author\":\"kochug\",\"authorId\":\"vQEmjTRgmdGNYB7yk\",\"code\":\"public class Program {\\n\\tpublic static String maskify(String s) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.1373239436619718,\"familyId\":\"4jLsmTwy6iG5XFD4T\",\"instructions\":\"Usually when you sign up for an account to buy something, your credit card number, phone number or answer to a secret question is partially obscured in some way. Since someone could look over your shoulder, you don't want that shown on your screen. Hence, the website masks these strings.\\n\\nYour task is to create a method that takes a string, transforms all but the last four characters into \\\"#\\\" and returns the new masked string.\\n\\n### Examples\\n```\\nmaskify(\\\"4556364607935616\\\") ➞ \\\"############5616\\\"\\n\\nmaskify(\\\"64607935616\\\") ➞ \\\"#######5616\\\"\\n\\nmaskify(\\\"1\\\") ➞ \\\"1\\\"\\n\\nmaskify(\\\"\\\") ➞ \\\"\\\"\\n```\\n\\n### Notes\\n- The maskify function must accept a string of any length.\\n- An empty string should return an empty string (fourth example above).\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(\\\"############5616\\\", Program.maskify(\\\"4556364607935616\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(\\\"#######5616\\\", Program.maskify(\\\"64607935616\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(\\\"1\\\", Program.maskify(\\\"1\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(\\\"\\\", Program.maskify(\\\"\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(\\\"################;C~H\\\", Program.maskify(\\\"tBy>L/cMe+?<j:6n;C~H\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(\\\"12\\\", Program.maskify(\\\"12\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(\\\"##########################j7vJ\\\", Program.maskify(\\\"8Ikhlf6yoxPOwi5cB014eWbRumj7vJ\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n    assertEquals(\\\"123\\\", Program.maskify(\\\"123\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test9() {\\n    assertEquals(\\\"######=e\\\\\\\"_\\\", Program.maskify(\\\")E$aCU=e\\\\\\\"_\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test10() {\\n    assertEquals(\\\"######1408\\\", Program.maskify(\\\"2673951408\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test11() {\\n    assertEquals(\\\"1234\\\", Program.maskify(\\\"1234\\\"));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"Usually when you sign up for an account to buy something, your credit card number, phone number or answer to a secret question is partially obscured in some way. Since someone could look over your shoulder, you don't want that shown on your screen. Hence, the website masks these strings.\\n\\nYour task is to create a method that takes a string, transforms all but\",\"tags\":[\"strings\",\"formatting\",\"validation\"],\"timestamp\":{\"$date\":1523652468349},\"title\":\"Maskify the String\",\"stats\":{\"completed\":{\"total\":320,\"ratings\":[1,1,1,1,1,2,0,1,1,0,0,1,1,1,2,1,2,1,1,2,1,1,1,1,1,1,1,0,1,1,5,0,0,2,1,0,1,1,3,1,1,3,1,1,2,0,1,1,2,1,0,1,1,1,0,2,1,2,1,0,1,1,1,1,1,0,1,1,2,1,1,1,0,1,1,1,2,1,1,1,0,1,1,1,1,0,1,2,0,0,2,3,2,2,1,0,0,2,0,3,2,2,2,1,0,1,1,0,2,2,2,1,1,1,3,1,0,1,2,1,1,1,1,2,0,0,1,0,1,0,0,1,1,3,1,1,1,0,0,3,1,1,1,0,1,1,1,1,0,2,1,1,1,1,0,1,3,0,1,1,1,0,2,2,2,0,1,1,1,1,0,1,1,1,0,1,0,3,1,1,1,1,2,1,1,0,3,1,1,1,0,1,0,0,1,1,2,1,1,1,2,5,0,1,0,2,3,2,0,1,2,1,2,0,3,1,0,2,1,2,1,1,0,1,1,1,2,2,0,1,5,1,2,0,2,1,2,3,1,2,1,1,0,2,2,1,2,1,5,0,1,1,2,3,1,1,2,1,1,3,1,1,0,2,0,1,1,2,0,1,2,1,1,0,1,0,1,1,1,1,1,1,1,1],\"rators\":[\"vQEmjTRgmdGNYB7yk\",\"5PXxhR3Bctqox3PE6\",\"CotyEj3eY9CbwBs2t\",\"iRgkGNCNtoPKC25EY\",\"ogAtfiy94gCF9742d\",\"dJcfh6gASjPCWEBoe\",\"JTHtJPYJp4ypAxfNj\",\"3PC2SXfqzr825AXKK\",\"k5wcq6mz7RNhATECz\",\"M3mkzSYXCpCt2HhC3\",\"h5dBXPfvLbWBMHNfg\",\"uF5SXzwu7zEbcoCLM\",\"agtC5JGNqaWBAWCzz\",\"KSHwLv3Ryafvy2eS6\",\"CXtgfPRAYL3PZ6JeK\",\"yDaAgJicmKMejSXPb\",\"vz5LbqWPwpxAejP5k\",\"7LrgrixSzJxiGaF66\",\"6gKgLfS6kC9GQgDJn\",\"GRZzKCbeb4xKHFCrZ\",\"BuFw8zHWYAsMvz7k8\",\"rQpthoJte6rreQd4j\",\"fskHo2C2gMKZxPZ5i\",\"79ZbLzp7xepvkonoh\",\"kxP2G9dmiRzxLuYoB\",\"CaoBNxekPwAD9Lsyc\",\"WXLd6Yr7iWjTpJDRA\",\"fbNWxXTqZy2mXNbGJ\",\"z3HbZkmL5echimwFQ\",\"x5JEs23Tc8ZWw3YAY\",\"sBAQgme9imkPrH2Xm\",\"ddfeZ4pbbcXFXqZmY\",\"tW2XYfMDPBbMknTmo\",\"Sm2J8ZvpXARgFy9WJ\",\"AfiYSAkd4PtCAq6MF\",\"KMdpTq6EfLsCFGZE4\",\"acQqozPi6NiCFqMGY\",\"6txZnj8BuNWvnZacj\",\"sjngWfShdeS3jYEpZ\",\"79x9hFu3rkQXNRpG4\",\"LzFwBKhNZ4imxcH6B\",\"YGYf9GKzaF8CWnDHE\",\"t5ALANSbbRcaL7kn9\",\"bGHDgwkiAp7RjBiYo\",\"JvcakCu2TnmozRSMA\",\"vtosp2wmv3bJ9Qgio\",\"qzFMJGxMErfBhExMm\",\"3riR3H5ei3T86EEzz\",\"uK99RLh3CQ3yur6BQ\",\"ywgSbAqkCj38KuaW8\",\"niz9xRvhYCLYvGJnW\",\"29s9dWyag5m6phKrM\",\"hCoyBFeNMdaC88ZFi\",\"yJyjT7Z2PPQmzzWpP\",\"v5wWsQtdTSEcXEWWS\",\"erJWHqarGkGtPJ3C4\",\"34rKGZYu7vEdoCu7d\",\"vnAs3y7hJY7X6JE6j\",\"5znpaFDoToJtAtF3h\",\"vew4EJaM4jGBsvnTp\",\"CDkkdvDdqjDihTcFS\",\"ydos8Ba8nZdYRNJpS\",\"veu3fKkK2DSkKTkb2\",\"JSSLvJPs8JebyfeS9\",\"qGFqqzbwxiz7kZkPW\",\"a49eNnfRwSMxsDJXf\",\"aMNhTh35QQAs33ycQ\",\"mrKDTFeqRM7r9ZPJv\",\"3pdgguqZgNDSAJSGm\",\"sxci7DYKNa6q22Sjq\",\"9c8n7ti5vCjTRgiGN\",\"3KyZcHpTtp3ETCocW\",\"h7R7HQfnAWjPtRF3S\",\"knL2G536WWm6WLCm9\",\"Yohr2MmAyaWGMbB35\",\"t2kdBPj9qQAXY2Ehd\",\"3gxJoNp59B4eoyyed\",\"Ha5J49rhojBRy3BaM\",\"8rF6PHMSaybTDsvXr\",\"sb7Nh56pPFtPxLogT\",\"phA6MomRzh9oz3eqn\",\"jNcwk4jksmPTcAoTu\",\"Eqt2WZ9iPdhM6Ma9Q\",\"jbWjmMTs5iJY93mhy\",\"ZBDiEMi7dbjRL55LB\",\"yazNfwgLx7jSAZ8Tv\",\"L2rsm2HX7L8jiQuLo\",\"vMXAzjzvfPaM6NejG\",\"ZiozQXopCXKLkQMfC\",\"WPWBKqdkzkeGpgFR2\",\"8gJEpXHctGqC9ngcJ\",\"vRXuYYBNuHEQ29fbm\",\"W4jpCs2jekeg5qAwc\",\"FCtas8YzE46B9BAyf\",\"pr4Cm4A369tC9gSeT\",\"CLmJduqJHX83dM4Pd\",\"3KjxQu9RZ8ZSywvLz\",\"8JyqsSbN2FJXPr3cw\",\"CggGfsERnPKGupFWp\",\"J9zJq7PMGb6mqzcHW\",\"s2G7xhbjaNdkGbhRX\",\"qJZsi5rhRnWA38FbA\",\"u4yanfWeeZsN3xWgc\",\"s8o9ptNnpNGktBWdX\",\"C9yBWYcZsjmJYww3K\",\"AyrEvM2GLX2jqM772\",\"qx9XHErKygcLiFGhX\",\"rWhXHhzF4W8bea6LP\",\"HBgPTjhMkJ2WCcBP7\",\"YLwJkF2wuL3n9o6a2\",\"D3ASM3aWpcQ8gvnin\",\"jDuY4gx4aJRp8SHbm\",\"ko7oJ85JMftgcbkrr\",\"5Kf9z3G9QBs9fkvLs\",\"PqAepaMciyBb7QQRK\",\"gBGjCfJvPHswDM5JQ\",\"EZNT8B7yQnnZmuwCf\",\"WuAkXKpcrQy867yCw\",\"jRqY4i8gPemsZMBGf\",\"Es4eX2stRpyoXeC7f\",\"j2hKJg9sh9m3HWFgo\",\"fbYN9Jp46RqBqCd2K\",\"xEuitW7gMaqzhq6x8\",\"wYYMNPe8nSiJFbvJw\",\"rTj67TTydxqkpwFtN\",\"uYv96ZSpA7tBHoAGX\",\"mdEQJ2fmGmkbhbvNw\",\"2cdvd8yuPLSwvGj9w\",\"jDTGwryGygbZiqCEg\",\"xA7nZb76wDpxmHSt4\",\"cGebawowzCKcFn8gq\",\"82weQfHHmno4Mq4X7\",\"Kso7rzAKB4TTCPKgM\",\"bw6kHP3k8dP2qBa5v\",\"8J2Dqqz9PaFufQzwY\",\"PXBjtEAAwibHxNZXq\",\"fZjkX29nhRTWWb75k\",\"Zvu2nty8qKdBDBvM4\",\"cdcYSPc8rGJZrMnfS\",\"YFHkjbM6obMSj24zi\",\"GEzaJZ2cPjENT4ERQ\",\"hB5mgzMwQSnhBzi7P\",\"etoSR23iELGGgs9rA\",\"5seiNqw6ZXoF2GRRd\",\"jyoLggHk8xQKZuoQC\",\"8zZ6xmzpiFair25qr\",\"Yp7uvStL97cC9fKkY\",\"tqSJxy6E4vaTyECkh\",\"Dwg87a7awYWRiXFSH\",\"DzLdw6wEL2Nt5mrsp\",\"B4pxRqzo43M7S8FbP\",\"DzvdGwHEjqsX7wyKr\",\"LZSxphM8vH4A6Deqn\",\"WZujpe8yQAyZmpWHg\",\"F4synR7Ea8yS2L576\",\"ZqjP4M6dzu32To33K\",\"TrquEHytntLKHA4m2\",\"3qggY3TrN3xNaMDBp\",\"DePiAS7u5Pk9d6SLr\",\"P7zedbjaFw8YDzLz7\",\"htXCitorobtqYymjN\",\"y6kfyYmydcD8tkBk7\",\"Yom3RzkMYpweE8cbS\",\"DkSMZ3jZLkwviKb9g\",\"SmmkwyvSHT54PzB5B\",\"DRjqgdcSkz58yiqea\",\"ZQEo2nzPtJHGx2cM7\",\"cR3ibTMxLyEdDFCHY\",\"rvojHhKH3DaxotefQ\",\"wMvNbysArkmmqZBy4\",\"AeJSxRqw2dJZuGvdk\",\"EcKPDmD4GmeFJGDTL\",\"45FXSeKSLChn3gEhc\",\"smuLDcXt5RcXQQMKZ\",\"q2tzvkrLASvSjkek9\",\"KxLMWekCxzy2Eem7u\",\"Ctuq7Wc8QPQmzwPK3\",\"SE5G2Caf3btnuGmz6\",\"osXNzc2aCxspRwheS\",\"fEFZag7uK6ig4EeGf\",\"NHj7tZQMAZc947RzW\",\"gJbvbqosimaP4ZAYb\",\"EXFQFCRRRfdazM9uJ\",\"jLv4ckjWQwHRAiYKT\",\"QXkrEiAuhuXaZmL4C\",\"nbH6pjzJS9Z35JD9r\",\"ZrXkPD45QRS4oXJmA\",\"MqfT64wJfnjB4vRF8\",\"yb8T3nuL4evaeJW6k\",\"sYKPxZX5xJZ2GTp6Q\",\"FhZ9yojoBiSLg7xKc\",\"XcLNNDa5gDSyrgKtv\",\"5ax3WdxtrqTiwbz6x\",\"tcSy5M22X8SGfmxN5\",\"D8wATn6Q9oLqQPZkx\",\"3unLGuwC6Tnoy8BtK\",\"Wjueam6YTQJtzokaj\",\"MxmG8Gkti7L5kXYNL\",\"g4NCSxxHqHCGMpWwT\",\"62Q2HcfLE6SGphZkT\",\"muXMnzQwGLzN6j2Jr\",\"vEN56nHw7hTxbyHhp\",\"ZMd8it647JSYTvx8Z\",\"RhPg33AdzvSZmibXa\",\"5k2ij6wHTSzBpgCky\",\"QAr6AxMvrPhKaMA8N\",\"DAQX9mhHdMTqyYbvh\",\"YcjwCvYut6834Jzd8\",\"hx3ZWiCKNtqwMWFCt\",\"f6uGKbmMdBYCjrMBh\",\"TCTZucJN3tJh5t7MB\",\"uqnjMLLae4heAZNNe\",\"ENPyXmYYuQuZZAgRz\",\"ZXWDtCrM9ev3439oi\",\"k2tXkx7AyX77tQDRo\",\"hPx9H3YM8j2k94DNW\",\"QjLAPemXmmRwFrfRe\",\"w8nt7MwYJg95RuuZd\",\"Fd9765rksgPK4E2Zy\",\"M5n9zd5LtuuwJr668\",\"aT4e5PXghY4r4nFto\",\"fRYcPHuyEdqngMzC4\",\"TF56N5G8CGnCTy23E\",\"7Wq4ZNz5c3irDR6br\",\"QqTP27sC79gmiQdzS\",\"35FLKaQ7LJdA7pJZG\",\"ZiN6yB9rACMaYgseC\",\"yXGiiSAR5nBHnH3yr\",\"azAzSkvJd7eyXY9x9\",\"ce5bSQrMmuRF9f8yi\",\"pi76g3eRpnKrhee2a\",\"bjKYBdDcGMRTfooBs\",\"qTXNwXBDtH3j6t7hw\",\"zTEKMLMevG8xfxEj6\",\"ydF8Re5wK8MmaDbLh\",\"jb9RLyyuo565bKDzN\",\"a777e8chPvJkY3tKa\",\"J7epB3qSQJ2E8vWkY\",\"gXTAie79kiw28tx5u\",\"9amCEoE43AdSneJZ7\",\"JszPst3958te56jFk\",\"NdLzb3BZ5J8ftnCkS\",\"oMfq73A434YWhSuWQ\",\"hDeaTsprkH6CmvSAR\",\"PmfzvaX5ZJscpvHXc\",\"8Xx8nWXRydHDBGfQf\",\"mG8HqKiAQFTdRZthG\",\"P5BhjZxyeHQYTNyB9\",\"unNqQjSHzkb4pCzEu\",\"jXTnL3JatkKjoifyb\",\"Q2u7eLt9YmNXjD9J7\",\"Yj7ftjzyP67R5NFrH\",\"xv5obFhsxY93mqR5S\",\"Ym8AjbKGSJooun3nt\",\"tyLS9T6YMfg9fMtYJ\",\"BWqQ68pvNedARDcBN\",\"5YcHZbmJ8uc8G5wZ5\",\"uNK8tLSseShR8wcA4\",\"W56bWmpQeLJ9JEDsa\",\"69K8S2NbzkqE9pAe5\",\"cJmmvnmJSXvBXtydi\",\"47PyFbZyxWuP9Bgga\",\"3EfDGZ9Sgz5zxzD7a\",\"5jDgvkGd4JwatrYXg\",\"LrgQT4bdiLbHrprXu\",\"Y6N5mCB4KjcLeFFDK\",\"uFfEio8nzDvL8emhp\",\"Wi4H6ayKsNDWWQCG5\",\"PJu3WcTpfRrvHfQiS\",\"Mmi7ByNfsjNBBo6uQ\",\"3SgSNoAB3sxaYeT3w\",\"GkYtSbQuheBF4Enys\",\"QRv96jmNaYsWkxQEG\",\"dD3Aja8PZSMXMFSDY\",\"hhxjQREtmHSheH9Pj\",\"zZfMwLuoERGmybgib\",\"buX4mCQhtXCfBjeno\",\"d7PjwEf5Ff8W5eD64\",\"4ySzqKC5s3ZRpG9di\",\"btabi3PdyisuY5tn9\",\"HXbTKW3jmmyRAsKrr\",\"bBpSeYMrTXyBfDSzq\",\"rhS8qXRjZcpDXkwnE\",\"xEX3TDY6C2h82dJTn\",\"pYonfGP4u9HNL9Z32\",\"c7uBxu2rgY77H5d79\",\"mwCevFK3TmHpw6J6N\",\"uw47663LqPME8btaA\",\"srJ34BaybkQh3qRkM\",\"kNFJQmAqtbPGs6BMH\",\"jCjCvyhqhpebkJn34\",\"wFRLGjA56kj7xyhmv\",\"afvP29FhRou2bTaav\",\"KMR6vNzvSKMA2cXnK\",\"3AmkPEiGKNaSFi9Ji\",\"unqzSsxpxj9sZ7rbD\",\"FxPDKKibxnZjGJLs6\",\"nSLvkGEpiYCtcBLaa\",\"ckQwFFWyLXmDQAaCn\",\"3Gf7ikLijfoxabiPY\",\"H3XLNCWB5yXt5YYXn\"],\"quality\":[5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,4,5,3,5,5,5]},\"complaints\":{\"total\":0,\"reasons\":[],\"skippers\":[\"vQEmjTRgmdGNYB7yk\"]},\"instructions\":{\"score\":28.150000000000002,\"voters\":[\"aW8Qb8d3hAsWp2rWn\",\"agtC5JGNqaWBAWCzz\",\"mgJoduE8pStdjNmPD\",\"rpuygptqKkMvhtd8C\",\"rWTtR5BFBYQMBSq7G\",\"xrjxjvJJvXYJun6Xm\",\"kTdthSEZvrBsz9QxW\",\"8ShTPp8oqaXm4hKQ5\",\"muXapDQzqtqsguWxp\",\"yPFjYWAKibvfgSHDD\",\"kbZC35KPbfCpeg69v\",\"qaR8DnWrTk8Mus5Q2\",\"vaR5khDypH6CXE2pi\",\"MRmvGhL4yA7yi58Jn\"]},\"tests\":{\"score\":0,\"voters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.809523809523809,\"family\":[{\"_id\":\"2MAr9P4TTGooXS8Xa\",\"language\":\"cpp\"},{\"_id\":\"RFeBL2TzSf7mRMNJi\",\"language\":\"csharp\"},{\"_id\":\"ce3CbX2KwdwaJxxra\",\"language\":\"java\"},{\"_id\":\"32mN4NsXypmqtuYkA\",\"language\":\"javascript\"},{\"_id\":\"ARHXBf6tcKJqrARXJ\",\"language\":\"php\"},{\"_id\":\"xRzyWsdzMEeGqsJMK\",\"language\":\"python3\"},{\"_id\":\"uGFBmrTc5mNmpEPoN\",\"language\":\"ruby\"},{\"_id\":\"mFMs6aBxeZCW6vnRJ\",\"language\":\"swift\"}]}}"]