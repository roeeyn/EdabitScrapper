a["{\"msg\":\"result\",\"id\":\"393\",\"result\":{\"_id\":\"sF6Lm5LQsy6u2ZKeZ\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n\\tpublic static String toCamelCase(String str) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.5175438596491229,\"familyId\":\"X2BzLnXFy2Pi8RgDx\",\"instructions\":\"Create a function that converts dash/underscore delimited words into camel casing. The first word within the output should be capitalized only if the original word was capitalized.\\n\\n### Examples\\n```\\ntoCamelCase(\\\"A-B-C\\\") ➞ \\\"ABC\\\"\\n\\ntoCamelCase(\\\"the-stealth-warrior\\\") ➞ \\\"theStealthWarrior\\\"\\n\\ntoCamelCase(\\\"The_Stealth_Warrior\\\") ➞ \\\"TheStealthWarrior\\\"\\n```\\n\\n### Notes\\nAn empty string as input `\\\"\\\"` should return an empty string.\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(\\\"theStealthWarrior\\\", Challenge.toCamelCase(\\\"the_stealth_warrior\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(\\\"TheStealthWarrior\\\", Challenge.toCamelCase(\\\"The-Stealth-Warrior\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(\\\"ABC\\\", Challenge.toCamelCase(\\\"A-B-C\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(\\\"\\\", Challenge.toCamelCase(\\\"\\\"));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"Create a function that converts dash/underscore delimited words into camel casing. The first word within the output should be capitalized only if the original word was capitalized.\\n\\nExamples\\ntoCamelCase(\\\"A-B-C\\\") ➞ \\\"ABC\\\"\\n\\ntoCamelCase(\\\"the-stealth-warrior\\\") ➞ \\\"theStealthWarrior\\\"\\n\\ntoCamelCase(\\\"TheStealthWarrior\\\") ➞ \\\"TheStealthWarrior\\\"\\n\\nNotes\\nAn empty string as in\",\"tags\":[\"strings\",\"formatting\",\"regex\"],\"timestamp\":{\"$date\":1568150540654},\"title\":\"Convert String to camelCase\",\"stats\":{\"completed\":{\"total\":149,\"ratings\":[2,2,2,2,2,0,1,1,2,2,1,0,2,3,1,1,2,1,1,1,1,2,1,2,2,2,2,2,2,2,0,2,2,0,2,3,1,2,2,1,1,1,2,0,2,1,1,2,3,0,0,1,2,1,2,0,2,0,1,2,3,1,2,0,2,1,1,0,0,2,2,1,1,2,2,1,1,0,3,2,2,1,0,2,3,2,2,1,2,2,2,3,2,3,2,2,2,2,2,1,2,0,2,2,2,1,2,2,1,1,2,2,1,2],\"rators\":[\"vRXuYYBNuHEQ29fbm\",\"3pdgguqZgNDSAJSGm\",\"sxci7DYKNa6q22Sjq\",\"9c8n7ti5vCjTRgiGN\",\"aMNhTh35QQAs33ycQ\",\"t2kdBPj9qQAXY2Ehd\",\"3gxJoNp59B4eoyyed\",\"vnAs3y7hJY7X6JE6j\",\"cG4PEDMMx8jXhWP8T\",\"gofo35rKkbyPH9jFq\",\"yazNfwgLx7jSAZ8Tv\",\"Ha5J49rhojBRy3BaM\",\"Yohr2MmAyaWGMbB35\",\"QPSwhNevikT7q8mz8\",\"a49eNnfRwSMxsDJXf\",\"phA6MomRzh9oz3eqn\",\"ymYMxcgsvDaN8o33p\",\"Rwu4rBMXZGWreJdpH\",\"o2F4ykzNB5etBnuY9\",\"CYt2jTCEuK9dYWruk\",\"CLmJduqJHX83dM4Pd\",\"qJZsi5rhRnWA38FbA\",\"3KjxQu9RZ8ZSywvLz\",\"YLwJkF2wuL3n9o6a2\",\"u4yanfWeeZsN3xWgc\",\"J9zJq7PMGb6mqzcHW\",\"2cdvd8yuPLSwvGj9w\",\"8JyqsSbN2FJXPr3cw\",\"8J2Dqqz9PaFufQzwY\",\"AyrEvM2GLX2jqM772\",\"C9yBWYcZsjmJYww3K\",\"9gJsF5apWJGWZJprn\",\"4RHx3H8EwP2oboW8e\",\"Es4eX2stRpyoXeC7f\",\"WsPRfodiv9wB3dfp8\",\"82weQfHHmno4Mq4X7\",\"hB5mgzMwQSnhBzi7P\",\"TrquEHytntLKHA4m2\",\"fZjkX29nhRTWWb75k\",\"Kso7rzAKB4TTCPKgM\",\"jyoLggHk8xQKZuoQC\",\"5seiNqw6ZXoF2GRRd\",\"mfm3gB39arY8Rjb2y\",\"8zZ6xmzpiFair25qr\",\"av5QexsdPza9FsRCq\",\"WZujpe8yQAyZmpWHg\",\"etoSR23iELGGgs9rA\",\"htXCitorobtqYymjN\",\"meS77LKqRswhF5LAy\",\"rvojHhKH3DaxotefQ\",\"cjxsqXfkAPoadmppi\",\"DzvdGwHEjqsX7wyKr\",\"y6kfyYmydcD8tkBk7\",\"B4pxRqzo43M7S8FbP\",\"dcW9oK2uRo8h8mBe2\",\"dpJTai3i9aNkCS3sa\",\"q2tzvkrLASvSjkek9\",\"8yyfRwCsP5ovSFT5p\",\"zwruFCmuHkwJTpYqg\",\"CggGfsERnPKGupFWp\",\"sSLCfQq6WTHJnpKF8\",\"DkSMZ3jZLkwviKb9g\",\"pBMXMQem6BpSeooYT\",\"g4NCSxxHqHCGMpWwT\",\"nbH6pjzJS9Z35JD9r\",\"hx3ZWiCKNtqwMWFCt\",\"muXMnzQwGLzN6j2Jr\",\"rWhXHhzF4W8bea6LP\",\"XcLNNDa5gDSyrgKtv\",\"jRqY4i8gPemsZMBGf\",\"YcjwCvYut6834Jzd8\",\"Fd9765rksgPK4E2Zy\",\"f6uGKbmMdBYCjrMBh\",\"B59ANYuNBPaEhMJGq\",\"AeJSxRqw2dJZuGvdk\",\"iq55QasecYJXKz8rx\",\"LHYDvisy4Brk4mQ5c\",\"YFHkjbM6obMSj24zi\",\"H5sfMFuQo6yHE8GFL\",\"azAzSkvJd7eyXY9x9\",\"zTEKMLMevG8xfxEj6\",\"JFodQijHHdRkkrZvT\",\"yXGiiSAR5nBHnH3yr\",\"gXTAie79kiw28tx5u\",\"3GAHtEe5sPNEKNy6J\",\"thA79neuEcM3J8ZHr\",\"mt4kmXdCCGcbatAaZ\",\"CpCDwypyvfaZZbkBK\",\"yd5PakB2z33q2JrTZ\",\"3uBTPjN6mDavuBYmt\",\"sAdpvrN5y9fNJhQQv\",\"mG8HqKiAQFTdRZthG\",\"oMfq73A434YWhSuWQ\",\"TZk7ZK6ejLsTr6Bgz\",\"Tf7TJFSPktJBgLA4k\",\"P5BhjZxyeHQYTNyB9\",\"s5qoCq4dYbkHcYxyz\",\"8Xx8nWXRydHDBGfQf\",\"jXTnL3JatkKjoifyb\",\"unNqQjSHzkb4pCzEu\",\"hDeaTsprkH6CmvSAR\",\"FTHXj9Rfx9wdujSzy\",\"tyLS9T6YMfg9fMtYJ\",\"mQKWauR6b252TmdX4\",\"qJ2TgHitgMYZRTZ5d\",\"oMZovHkR6QqNvQwyc\",\"RGN3QTb5LXj4ZPPkj\",\"pi76g3eRpnKrhee2a\",\"9vyjn4WyWtJ6o2wop\",\"yEDrzzFjReDWNt8By\",\"bur3yQ8s34zqKGEro\",\"buX4mCQhtXCfBjeno\",\"zZfMwLuoERGmybgib\",\"2qFwhDM9aiqt45uMs\",\"4ySzqKC5s3ZRpG9di\",\"rhS8qXRjZcpDXkwnE\",\"hvQX8vATP6SbuzhJQ\",\"6rvJwN4mcX7iYGjY7\",\"srJ34BaybkQh3qRkM\",\"wFRLGjA56kj7xyhmv\",\"KsYk4jsRLMz2ToPco\",\"xEX3TDY6C2h82dJTn\",\"joD2yWS8EEvBCnmts\",\"KMR6vNzvSKMA2cXnK\",\"PJu3WcTpfRrvHfQiS\",\"hhxjQREtmHSheH9Pj\",\"eXME6AmouMmTezHmN\",\"unqzSsxpxj9sZ7rbD\",\"FxPDKKibxnZjGJLs6\",\"uw47663LqPME8btaA\",\"PAEWysAAFheYiYPBp\",\"Lfq2dzmGyoyMigP6f\",\"XH6378Zm3WBm679yx\",\"nFbmNzMQ38TncmfQX\"],\"quality\":[5,2,4,5,4,2,5,5,4,5,5,1,5,5,5,5,4,5,5,5,5,5,5,5,4]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"isHidden\":false,\"quality\":4.4,\"family\":[{\"_id\":\"9PsMWfD9Zr66Lgoot\",\"language\":\"cpp\"},{\"_id\":\"sF6Lm5LQsy6u2ZKeZ\",\"language\":\"java\"},{\"_id\":\"xt4CMLpfFRuDTsJgC\",\"language\":\"javascript\"},{\"_id\":\"4bX7qAqELq9XJeB26\",\"language\":\"python3\"},{\"_id\":\"fytyzsQXmHCNw6Nhn\",\"language\":\"ruby\"}]}}"]