a["{\"msg\":\"result\",\"id\":\"421\",\"result\":{\"_id\":\"yeewrR3MB9PZprwPT\",\"archived\":false,\"author\":\"kochug\",\"authorId\":\"vQEmjTRgmdGNYB7yk\",\"code\":\"public class Program {\\n\\tpublic static boolean isAnagram(String s1, String s2) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.5593220338983051,\"familyId\":\"ALJ3zdewZTmi2Js8F\",\"instructions\":\"Create a function that takes two strings and returns either `true` or `false` depending on whether they're anagrams or not.\\n\\n### Examples\\n```\\nisAnagram(\\\"cristian\\\", \\\"Cristina\\\") ➞ true\\n\\nisAnagram(\\\"Dave Barry\\\", \\\"Ray Adverb\\\") ➞ true\\n\\nisAnagram(\\\"Nope\\\", \\\"Note\\\") ➞ false\\n```\\n\\n### Notes\\n- Should be case insensitive.\\n- The two given strings can be of different lengths.\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n\\t@Test\\n\\tpublic void test1() {\\n\\t\\tassertEquals(true, Program.isAnagram(\\\"cristian\\\", \\\"Cristina\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test2() {\\n\\t\\tassertEquals(true, Program.isAnagram(\\\"Dave Barry\\\", \\\"Ray Adverb\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test3() {\\n\\t\\tassertEquals(false, Program.isAnagram(\\\"Nope\\\", \\\"Note\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test4() {\\n\\t\\tassertEquals(false, Program.isAnagram(\\\"Apple\\\", \\\"Appeal\\\"));\\n\\t}\\n}\",\"language\":\"java\",\"summary\":\"Create a function that takes two strings and returns either true or false depending on whether they're anagrams or not.\\n\\nExamples\\nisAnagram(\\\"cristian\\\", \\\"Cristina\\\") ➞ true\\n\\nisAnagram(\\\"Dave Barry\\\", \\\"Ray Adverb\\\") ➞ true\\n\\nisAnagram(\\\"Nope\\\", \\\"Note\\\") ➞ false\\n\\nNotes\\nShould be case insensitive.\\nThe two given strings can be of different lengths.\",\"tags\":[\"strings\",\"math\",\"validation\",\"interview\"],\"timestamp\":{\"$date\":1523687665702},\"title\":\"Check for Anagrams\",\"stats\":{\"completed\":{\"total\":197,\"ratings\":[1,1,1,1,1,1,2,0,2,1,1,2,2,1,1,1,3,1,2,2,1,1,1,1,1,1,1,1,1,1,0,3,0,2,3,3,2,2,5,1,3,2,5,1,1,1,0,1,2,0,2,0,2,2,4,2,1,1,2,2,2,2,1,2,0,2,1,1,2,1,2,1,2,1,1,2,2,1,2,2,2,2,2,2,1,1,2,1,0,1,2,2,2,2,0,2,2,1,0,1,2,2,2,2,3,2,0,1,2,3,2,2,2,2,1,2,1,1,2,0,2,1,2,1,2,1,3,1,2,2,3,1,2,0,2,2,1,1,1,1,2,2,2,0,2,2,3,2,2,2,1,1,1,3,1,2,0,2,1,2,3,2,1,2,0,1,0,2,2,2,2,1,2,2,3,1,2],\"rators\":[\"vQEmjTRgmdGNYB7yk\",\"cGKgWB8ZZcidku3qj\",\"5PXxhR3Bctqox3PE6\",\"iRgkGNCNtoPKC25EY\",\"RkXfoeQFNzfw5rdug\",\"CotyEj3eY9CbwBs2t\",\"3PC2SXfqzr825AXKK\",\"dJcfh6gASjPCWEBoe\",\"hKZCo3exwfkhfcty8\",\"zMEyen5f2qNu44YaN\",\"M3mkzSYXCpCt2HhC3\",\"vz5LbqWPwpxAejP5k\",\"JP9J4tgPArp6sppGL\",\"7LrgrixSzJxiGaF66\",\"GRZzKCbeb4xKHFCrZ\",\"kxP2G9dmiRzxLuYoB\",\"79ZbLzp7xepvkonoh\",\"fskHo2C2gMKZxPZ5i\",\"BuFw8zHWYAsMvz7k8\",\"rQpthoJte6rreQd4j\",\"fbNWxXTqZy2mXNbGJ\",\"h3cMyEyB72ygAQnx4\",\"7aFiTKgeaqixEJDqR\",\"6iHAmxhqXctKMFBz4\",\"ddfeZ4pbbcXFXqZmY\",\"tW2XYfMDPBbMknTmo\",\"GzHduZhEZYEyxpzzk\",\"R2LPSuiqtYoS8j7z8\",\"RGxN2RRfHof7AiGFc\",\"6wKGtyyJEe4XZMKmi\",\"Le2c3r4z48jumBjJn\",\"5KjrdJCWWwXjkh8Yo\",\"JDRqKjfgvegnXRdwG\",\"acQqozPi6NiCFqMGY\",\"2XPSxbjbkM9NRcxZT\",\"yQcBCGmYBa7Ze8N9B\",\"JPZuMjAxQn3aGqRAN\",\"vB3v3B6kz6Bi7vxez\",\"yn2uW7RgHc8dAYvS6\",\"3beBRHqPRT3Q72arL\",\"YGYf9GKzaF8CWnDHE\",\"sBAQgme9imkPrH2Xm\",\"YaAtcMQGvDcF7Nc7F\",\"ku26TmJRnzyCujgbe\",\"3riR3H5ei3T86EEzz\",\"qzFMJGxMErfBhExMm\",\"uK99RLh3CQ3yur6BQ\",\"zWkoBzosokym4fcQB\",\"GLWXzMK4cT9iBMaRu\",\"QubhaGZKhYJr9z8AC\",\"mNMQvcxKSSvqqMYCH\",\"u437YTqDGSjh49fsY\",\"yJyjT7Z2PPQmzzWpP\",\"ye4QaoZY96k76jXB7\",\"erJWHqarGkGtPJ3C4\",\"vjh7xAmbYZoaYWeRL\",\"z6gRoaKmajaC6FgYb\",\"E8kxrkhNmubbNJTDT\",\"L8KR8FTXXY4o6ynRW\",\"K6PrjGAWmQ9Mhfp6i\",\"QS5RGoPnapStFD5Gi\",\"ydos8Ba8nZdYRNJpS\",\"QdMda8ZPeux6FcasR\",\"XhzKztoQYYQzZ2c7o\",\"yhk8G8cM3p9JAbfJN\",\"cp3X8hk8yNME7qoD9\",\"hCoyBFeNMdaC88ZFi\",\"MDPYZzwYabGLcLKD7\",\"dRpSwgukY2jHSxuwq\",\"5znpaFDoToJtAtF3h\",\"LQ9T6dPa3nXcZdbZq\",\"4MWMwGbthkTMu3dkb\",\"nfqNLaZm5h4cqT8yC\",\"7nqobGBA5GN5zGGrx\",\"aMNhTh35QQAs33ycQ\",\"a49eNnfRwSMxsDJXf\",\"Eg2jWWehb4yFbdLye\",\"9rf9Q2pPyhCac2Rkn\",\"odvdreQgo82xsTpsF\",\"gyeE4Dypk4d2rLLdN\",\"vRXuYYBNuHEQ29fbm\",\"Yohr2MmAyaWGMbB35\",\"WbimjzKAKfeEkvWqb\",\"KBnNisBF9FoPJDGL6\",\"3pdgguqZgNDSAJSGm\",\"sxci7DYKNa6q22Sjq\",\"9c8n7ti5vCjTRgiGN\",\"FocLpCB2WEiK2gGni\",\"YWnFYSYAv4jbY4Mmc\",\"t2kdBPj9qQAXY2Ehd\",\"3gxJoNp59B4eoyyed\",\"FQCssquPFc6mn67PD\",\"fg7aXENdFheSh7ymy\",\"Ha5J49rhojBRy3BaM\",\"yazNfwgLx7jSAZ8Tv\",\"pr4Cm4A369tC9gSeT\",\"r9hHZYPQAqJ9DbwLX\",\"CLmJduqJHX83dM4Pd\",\"vuMBgKQRnA4HsuWjR\",\"fxaS5K7ZXo4FbTe36\",\"3KjxQu9RZ8ZSywvLz\",\"u4yanfWeeZsN3xWgc\",\"J9zJq7PMGb6mqzcHW\",\"8JyqsSbN2FJXPr3cw\",\"2cdvd8yuPLSwvGj9w\",\"AyrEvM2GLX2jqM772\",\"C9yBWYcZsjmJYww3K\",\"gJbvbqosimaP4ZAYb\",\"4RHx3H8EwP2oboW8e\",\"Es4eX2stRpyoXeC7f\",\"9gJsF5apWJGWZJprn\",\"JFodQijHHdRkkrZvT\",\"wYYMNPe8nSiJFbvJw\",\"82weQfHHmno4Mq4X7\",\"hB5mgzMwQSnhBzi7P\",\"fZjkX29nhRTWWb75k\",\"Kso7rzAKB4TTCPKgM\",\"5seiNqw6ZXoF2GRRd\",\"Fdq6CxMWZL8WZiNaM\",\"jyoLggHk8xQKZuoQC\",\"TrquEHytntLKHA4m2\",\"WZujpe8yQAyZmpWHg\",\"8zZ6xmzpiFair25qr\",\"etoSR23iELGGgs9rA\",\"mfm3gB39arY8Rjb2y\",\"htXCitorobtqYymjN\",\"8iE3Jh5s9AGw2vfW8\",\"meS77LKqRswhF5LAy\",\"DzvdGwHEjqsX7wyKr\",\"g4NCSxxHqHCGMpWwT\",\"rvojHhKH3DaxotefQ\",\"jRqY4i8gPemsZMBGf\",\"Yom3RzkMYpweE8cbS\",\"Fd9765rksgPK4E2Zy\",\"YcjwCvYut6834Jzd8\",\"azAzSkvJd7eyXY9x9\",\"yXGiiSAR5nBHnH3yr\",\"pGHoBJ6FfdScqTTwF\",\"gXTAie79kiw28tx5u\",\"y7rfKEhb3Zaj5WrPA\",\"AeJSxRqw2dJZuGvdk\",\"fM4YcC7zFryGp3nhJ\",\"8Xx8nWXRydHDBGfQf\",\"jXTnL3JatkKjoifyb\",\"cufCWKKLntgt5vKtW\",\"dcW9oK2uRo8h8mBe2\",\"QhYG37edWtehvshzd\",\"BbcH2NLjE4tKAZ3wR\",\"mQKWauR6b252TmdX4\",\"7wATRJ843bxwHuqPp\",\"hD6sfDtntpqT8NR2o\",\"2FTx4NfE9LFzdmGG6\",\"fCTfZSgeDbRbTvDY4\",\"RGN3QTb5LXj4ZPPkj\",\"E2nAwyubcNWBcPZJP\",\"saf3nERNrf7iQJi95\",\"buX4mCQhtXCfBjeno\",\"bur3yQ8s34zqKGEro\",\"hhxjQREtmHSheH9Pj\",\"DkSMZ3jZLkwviKb9g\",\"EBTHjFAoBhJxb9FcP\",\"zZfMwLuoERGmybgib\",\"wFRLGjA56kj7xyhmv\",\"rhS8qXRjZcpDXkwnE\",\"xEX3TDY6C2h82dJTn\",\"srJ34BaybkQh3qRkM\",\"6rvJwN4mcX7iYGjY7\",\"387qpAxxutDJcrcoD\",\"Qv2jEtTnFCXX7cdd3\",\"KMR6vNzvSKMA2cXnK\",\"PJu3WcTpfRrvHfQiS\",\"qegGRWTqFWv2NrEPw\",\"B4pxRqzo43M7S8FbP\",\"rWhXHhzF4W8bea6LP\",\"y6u8RrAyrZGjpJBJA\",\"unqzSsxpxj9sZ7rbD\",\"GttCrAdrNvAw8r3kk\",\"JJFPy22rhWmioEDwN\",\"FxPDKKibxnZjGJLs6\",\"uw47663LqPME8btaA\",\"7k2cWoyesGz4BsrjC\",\"PAEWysAAFheYiYPBp\",\"xDbPdGhwLb5Cwdpoe\",\"nFbmNzMQ38TncmfQX\",\"XH6378Zm3WBm679yx\"],\"quality\":[2,5,4,5,5,5,5,5,5,5,5,5]},\"complaints\":{\"total\":0,\"reasons\":[],\"skippers\":[\"vQEmjTRgmdGNYB7yk\"]},\"instructions\":{\"score\":20.999999999999996,\"voters\":[\"aW8Qb8d3hAsWp2rWn\",\"p3v3A4hWokCjW7vSf\",\"Zd6DKQnFcyN4bgHJQ\",\"nZ58gDWFhqXiZpmZQ\",\"tuyDaJzFy78jxvhCY\",\"xSFGYcLPYZCfWx88j\",\"48cHZMkjiopmJJxAM\",\"rWTtR5BFBYQMBSq7G\",\"7FdkrNpazJMdzttxm\",\"95vqAcqExYNBEmBfD\",\"8ShTPp8oqaXm4hKQ5\",\"dYXHck6zbpzPTx8K4\",\"j9gg82Bp2L7nw7DyJ\",\"Ji5ATH9YsjqjJPJdn\",\"XBmvGz2a28Wtuhj3N\",\"yhZR2YiYZ8EFzztBz\",\"PKJWzgQKwneuaS3Ap\",\"8s7BRJYLyiwjggFNN\",\"MDdvwtDzQACBGzC4k\",\"FPkESBrrZwYqkeRBT\",\"6wKGtyyJEe4XZMKmi\",\"RGxN2RRfHof7AiGFc\",\"wgY8cFN3574E6hbTr\",\"q8oorLqY3v33ToYR7\",\"nxCRcZQknHp8wP2v4\",\"XbxHXmh5ZmRN2gw3K\",\"idySLWpkxeMFtG88A\",\"FYtLEugSD5dQ3Pzet\",\"g4K6nM72TtXLKog5x\",\"7ZgPmxrKL5Ko8T5xL\",\"vKkth3F3Kwj9Bc4X6\",\"ebndzZQAJZFykHqiE\"]},\"tests\":{\"score\":0.6,\"voters\":[\"QGEbLWn3Z7A8ESq2R\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.666666666666667,\"family\":[{\"_id\":\"pnaZxLP8gbgPnMwgM\",\"language\":\"cpp\"},{\"_id\":\"nQfF2nB5EB7e2aPbt\",\"language\":\"csharp\"},{\"_id\":\"yeewrR3MB9PZprwPT\",\"language\":\"java\"},{\"_id\":\"FPamWj3Ky7ep9ApBz\",\"language\":\"javascript\"},{\"_id\":\"CzaDoQogAr8xXG35z\",\"language\":\"php\"},{\"_id\":\"763oGpb5JvctX5tAc\",\"language\":\"python3\"},{\"_id\":\"KxMhvMGgeXK3aMCGn\",\"language\":\"ruby\"},{\"_id\":\"2q4mFuMD2gcj3a7Sy\",\"language\":\"swift\"}]}}"]