a["{\"msg\":\"result\",\"id\":\"733\",\"result\":{\"_id\":\"EiemTcctcJXCn6eJa\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n\\tpublic static int minSwaps(String str) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":2.8461538461538463,\"familyId\":\"bamPbvbRDHun3NvxY\",\"instructions\":\"Write a function that returns the minimum number of **swaps** to create an alternating binary string. The input will have the same number of zeroes and ones.\\n\\n### Examples\\n```\\nminSwaps(\\\"101010\\\") ➞ 0\\n\\nminSwaps(\\\"10001110\\\") ➞ 1\\n// Swap the 0 at index 2 for the 1 at index 5.\\n\\nminSwaps(\\\"11110000\\\") ➞ 2\\n```\\n\\n### Notes\\nN/A\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(0, Challenge.minSwaps(\\\"10\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(0, Challenge.minSwaps(\\\"0101\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(0, Challenge.minSwaps(\\\"101010\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(1, Challenge.minSwaps(\\\"1100\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(1, Challenge.minSwaps(\\\"111000\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(1, Challenge.minSwaps(\\\"100101\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(1, Challenge.minSwaps(\\\"100011\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n    assertEquals(1, Challenge.minSwaps(\\\"010110\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test9() {\\n    assertEquals(1, Challenge.minSwaps(\\\"10001110\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test10() {\\n    assertEquals(2, Challenge.minSwaps(\\\"11001100\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test11() {\\n    assertEquals(2, Challenge.minSwaps(\\\"11110000\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test12() {\\n    assertEquals(2, Challenge.minSwaps(\\\"1001001011\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test13() {\\n    assertEquals(3, Challenge.minSwaps(\\\"100100100111\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test14() {\\n    assertEquals(3, Challenge.minSwaps(\\\"101100000111\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test15() {\\n    assertEquals(3, Challenge.minSwaps(\\\"111000000111\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test16() {\\n    assertEquals(3, Challenge.minSwaps(\\\"111111000000\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test17() {\\n    assertEquals(3, Challenge.minSwaps(\\\"11000000011111\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test18() {\\n    assertEquals(3, Challenge.minSwaps(\\\"11111110000000\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test19() {\\n    assertEquals(4, Challenge.minSwaps(\\\"1111111100000000\\\"));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"Write a function that returns the minimum number of swaps to create an alternating binary string. The input will have the same number of zeroes and ones.\\n\\nExamples\\nminSwaps(\\\"101010\\\") ➞ 0\\n\\nminSwaps(\\\"10001110\\\") ➞ 1\\n// Swap the 0 at index 2 for the 1 at index 5.\\n\\nminSwaps(\\\"11110000\\\") ➞ 2\\n\\nNotes\\nN/A\",\"tags\":[\"strings\",\"loops\"],\"timestamp\":{\"$date\":1568504710652},\"title\":\"Minimum Swaps to Alternate a Binary String\",\"stats\":{\"completed\":{\"total\":27,\"ratings\":[2,2,2,2,2,5,4,4,2,4,5,1,1,4,1,0,4,4,4,2,3,2,5,2,3,4],\"rators\":[\"3pdgguqZgNDSAJSGm\",\"rnysdJMvAJTDkHo7j\",\"Zzp8oNRSgmBgLD9Zd\",\"sxci7DYKNa6q22Sjq\",\"YF79LnTdprobbYY5v\",\"tN66heiSDjKR9kFdK\",\"oYKSeBviFTPSbbn2Z\",\"J9zJq7PMGb6mqzcHW\",\"AyrEvM2GLX2jqM772\",\"rehehi2Tr2mwaEoJE\",\"oMLSgpSFQnY4ui8cB\",\"TrquEHytntLKHA4m2\",\"csRoCgJx5NBJzW8pX\",\"DkSMZ3jZLkwviKb9g\",\"jyoLggHk8xQKZuoQC\",\"htXCitorobtqYymjN\",\"5WQZzuHZBGqFeNQi3\",\"oBCStgAyNK7z8C4WA\",\"Es4eX2stRpyoXeC7f\",\"gXTAie79kiw28tx5u\",\"buX4mCQhtXCfBjeno\",\"KMR6vNzvSKMA2cXnK\"],\"quality\":[5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"isHidden\":false,\"quality\":5,\"family\":[{\"_id\":\"NuhEnRuobzB2oDFqi\",\"language\":\"cpp\"},{\"_id\":\"EiemTcctcJXCn6eJa\",\"language\":\"java\"},{\"_id\":\"zTKt7exq3R5idX4RY\",\"language\":\"javascript\"},{\"_id\":\"2EK5GMSqSEv436Tc8\",\"language\":\"python3\"},{\"_id\":\"9kheXQu8JhDmZvQbY\",\"language\":\"ruby\"}]}}"]