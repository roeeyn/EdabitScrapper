a["{\"msg\":\"result\",\"id\":\"217\",\"result\":{\"_id\":\"hgHMhpJjyFxYJMMXp\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class DirectoryPath {\\n  public static String getFilename(String path) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":1.1006711409395973,\"familyId\":\"ZSSASiB4nnarhT942\",\"instructions\":\"Create a function that returns the selected **filename** from a path including the file **extension**.\\n\\n### Examples\\n```\\ngetFilename(\\\"C:/Projects/pil_tests/ascii/edabit.txt\\\") ➞ \\\"edabit.txt\\\"\\n\\ngetFilename(\\\"C:/Users/johnsmith/Music/Beethoven_5.mp3\\\") ➞ \\\"Beethoven_5.mp3\\\"\\n\\ngetFilename(\\\"ffprobe.exe\\\") ➞ \\\"ffprobe.exe\\\"\\n```\\n\\n### Notes\\n- Tests will include both absolute and relative paths.\\n- For simplicity, all paths will only include forward slashes.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"/** \\n--------------------------------------- \\nTestGen 2.1 for JUnit 4.13.0 \\t\\t\\nTest Case: DirectoryPath::getFilename \\nTimestamp: 11/4/2020 1:41:16 AM \\n--------------------------------------- \\n® DARKKO 2020 © \\n**/ \\n\\nimport static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class DirectoryPathTest { \\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertEquals(\\\"edabit.txt\\\", DirectoryPath.getFilename(\\\"C:/Projects/pil_tests/ascii/edabit.txt\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertEquals(\\\"Beethoven_5.mp3\\\", DirectoryPath.getFilename(\\\"C:/Users/johnsmith/Music/Beethoven_5.mp3\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertEquals(\\\"ffprobe.exe\\\", DirectoryPath.getFilename(\\\"ffprobe.exe\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertEquals(\\\"unfinished2.midi\\\", DirectoryPath.getFilename(\\\"Music/Drafts/unfinished2.midi\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertEquals(\\\"Atom.lnk\\\", DirectoryPath.getFilename(\\\"C:/Users/chad/OneDrive/Desktop/Atom.lnk\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertEquals(\\\"DDLC.exe\\\", DirectoryPath.getFilename(\\\"senoron/OneDrive/Desktop/DDLC-1.1.1-pc/lib/windows-i686/DDLC.exe\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertEquals(\\\"lombok.jar\\\", DirectoryPath.getFilename(\\\"Users/darkko/Downloads/lombok.jar\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertEquals(\\\"geo_count.pdf\\\", DirectoryPath.getFilename(\\\"D:/Math/geometry/Lessons/1/geo_count.pdf\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test09() { \\n\\t\\tassertEquals(\\\"bed_of_roses.mp3\\\", DirectoryPath.getFilename(\\\"Users/Music/Albums/Unplugged/JonBonJovi/bed_of_roses.mp3\\\"));\\n\\t}\\n}\",\"language\":\"java\",\"quality\":4.773584905660377,\"summary\":\"Create a function that returns the selected filename from a path including the file extension.\\n\\nExamples\\ngetFilename(\\\"C:/Projects/pil_tests/ascii/edabit.txt\\\") ➞ \\\"edabit.txt\\\"\\n\\ngetFilename(\\\"C:/Users/johnsmith/Music/Beethoven5.mp3\\\") ➞ \\\"Beethoven5.mp3\\\"\\n\\ngetFilename(\\\"ffprobe.exe\\\") ➞ \\\"ffprobe.exe\\\"\\n\\nNotes\\nTests will include both absolute and relative paths.\\nFor simpl\",\"tags\":[\"regex\",\"language_fundamentals\",\"arrays\"],\"timestamp\":{\"$date\":1604428065542},\"title\":\"Get the File Name\",\"stats\":{\"completed\":{\"total\":207,\"ratings\":[1,1,1,1,1,1,2,1,2,2,1,1,1,2,2,3,2,3,1,0,2,1,1,1,2,2,0,2,2,2,1,0,2,1,1,2,2,1,0,1,0,1,1,0,2,1,2,1,1,1,1,1,1,0,1,1,2,1,0,2,1,1,2,2,1,2,0,2,0,1,1,0,1,0,0,1,1,1,0,0,1,1,1,1,2,1,1,0,2,0,1,2,1,0,1,2,1,1,1,1,0,1,1,1,1,0,1,0,1,2,1,2,1,0,2,0,1,2,1,1,1,3,1,1,1,0,1,1,1,1,1,1,0,1,0,2,2,1,1,1,2,1,0,1,2,2,1,1,1],\"quality\":[5,5,5,5,5,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,3,5,5,5,5,5,4,4,5,5,4,5,5,4,5,5,5,5,3,5,5,5,5,5,5,5,5,5,4],\"rators\":[\"a777e8chPvJkY3tKa\",\"gjSJcfrWyf2dfBmwt\",\"Es4eX2stRpyoXeC7f\",\"gXTAie79kiw28tx5u\",\"p8qqFdJ3FSk5x9z3G\",\"3twSyH9zesmkhvih8\",\"6rzGhrRNt4Z9d7heN\",\"P5BhjZxyeHQYTNyB9\",\"BHFXCohd4ShwnwRik\",\"mG8HqKiAQFTdRZthG\",\"Ym8AjbKGSJooun3nt\",\"sAdpvrN5y9fNJhQQv\",\"DzvdGwHEjqsX7wyKr\",\"ENtEccBrSYd7oZKFZ\",\"AeJSxRqw2dJZuGvdk\",\"azAzSkvJd7eyXY9x9\",\"DkSMZ3jZLkwviKb9g\",\"oMfq73A434YWhSuWQ\",\"jb9RLyyuo565bKDzN\",\"YL9pqyCu8xsds8J49\",\"C9yBWYcZsjmJYww3K\",\"8Xx8nWXRydHDBGfQf\",\"oMZovHkR6QqNvQwyc\",\"jXTnL3JatkKjoifyb\",\"Fdq6CxMWZL8WZiNaM\",\"jyoLggHk8xQKZuoQC\",\"DqZMjeKpfjDrjhEPo\",\"BbcH2NLjE4tKAZ3wR\",\"CQrLMPjz7gn82rySP\",\"yd5PakB2z33q2JrTZ\",\"qaPjAANdnxFnWfj5d\",\"dcW9oK2uRo8h8mBe2\",\"hDeaTsprkH6CmvSAR\",\"zE46SymvixkeFJmPM\",\"RafJDKxrFhne2kmEh\",\"unNqQjSHzkb4pCzEu\",\"kabqCExooax4JEQHE\",\"tyLS9T6YMfg9fMtYJ\",\"gBGjCfJvPHswDM5JQ\",\"62qNJjtmkRYvX5kKB\",\"zwruFCmuHkwJTpYqg\",\"L7vb79CJPprRuQQpw\",\"bmsDTBJAPBpGjfhHj\",\"SExX3m5YftBWmsk2e\",\"iYFv7MrQywiTNHvMz\",\"XQS4jE76BQZxd8xqB\",\"QGpkEinvqWKqKTERq\",\"4ocXv6asMQDvx9N5D\",\"B59ANYuNBPaEhMJGq\",\"btabi3PdyisuY5tn9\",\"JeSHEyHLRmScypBNw\",\"W56bWmpQeLJ9JEDsa\",\"ZJLAEFYxd5Eim72J9\",\"eD4MK9Q8xaciZm4Es\",\"284sqtkPMfivDqR3j\",\"8gRwcAqPftCN4ifgf\",\"g7HQ9qzY83f47MrSL\",\"3PdseRsKtLRmMKcwo\",\"jguXexk36SCqLC7Pg\",\"5gDtsWqDjXaJyLFiW\",\"NNMT6RQgtgCYawgr3\",\"ymqdHfJYMuxfsYo6R\",\"FWZDMMbSHrd7mheWR\",\"N3tyYcBfjKQmSmDvf\",\"tgqTBGHBy2nB9fEon\",\"GocWWCw6sQHtWLQdP\",\"hD6sfDtntpqT8NR2o\",\"vs78fRQErHJZWFaTc\",\"mQKWauR6b252TmdX4\",\"a6G3w4hPzY5xGELnR\",\"ArPXEm9cPXvgftgJb\",\"kBBiaQM4y5q5kgyNt\",\"ySe2gbL7rP9vZDogb\",\"5WEQKMQZeYEqz2sib\",\"fhFZp6Frsw8higEJ6\",\"p5QkcqbZ5sHXoQMt8\",\"YLqdr7bYjwew2KM4N\",\"FWjjXPuje5x3gZpSd\",\"EFqhE7GRf6PSKMSg6\",\"LFSASkxgw9hr3KqmC\",\"6etwWBTiBYhiwd2oF\",\"Qr9ZDLPcHQWSeo8Ju\",\"xv5obFhsxY93mqR5S\",\"P5qFWmHtGZip3KyHr\",\"6eZLvPooEzhfPJBy3\",\"xGtxQz9WnAPPKJZxK\",\"TNMAJidLpPdH4kmBv\",\"7FKwxbwYkAywfpshB\",\"KZDZZTSx8CDJ38QqB\",\"H9YkLf82TZF2GrX6B\",\"bQrQGrN9iC8sbjjAM\",\"2ScA9s5nu35nSMDpt\",\"Wg6PF8ir7QbKnYywB\",\"CigveYoShKaXdbZoS\",\"obp7gd5w8sCAPGjnr\",\"x3uded3jGz5Jvm549\",\"2wS9Wm3Nj5ZFcMnfA\",\"pi76g3eRpnKrhee2a\",\"QhYG37edWtehvshzd\",\"Z96GhGMX4TytWoq8J\",\"Jk9R4Lggki2cJz6LN\",\"fBmkeEeAREuzzLg5p\",\"Ec7nnpNGLhW9jTB6b\",\"bc2GyS4wrrowsz4yi\",\"BJpN2MvopuwizLreT\",\"7wATRJ843bxwHuqPp\",\"ScQRM8htc5fB6rH5t\",\"5ArazQEtmbJA3GzMd\",\"XQ53ja3k4657jznjS\",\"PhnFFP5EiY4TeDXRi\",\"nPLCodfvAk69hipay\",\"NQ4btGLfcvAnXjAyP\",\"hseQSt2EJ5uvb2pQv\",\"qSbYAMwsRo5NyWyue\",\"uYv96ZSpA7tBHoAGX\",\"a49eNnfRwSMxsDJXf\",\"2cdvd8yuPLSwvGj9w\",\"J7epB3qSQJ2E8vWkY\",\"Wi4H6ayKsNDWWQCG5\",\"PJu3WcTpfRrvHfQiS\",\"uFfEio8nzDvL8emhp\",\"82weQfHHmno4Mq4X7\",\"E2hpke7mHxAWsw5t9\",\"QRv96jmNaYsWkxQEG\",\"GkYtSbQuheBF4Enys\",\"Yohr2MmAyaWGMbB35\",\"dD3Aja8PZSMXMFSDY\",\"hhxjQREtmHSheH9Pj\",\"P7zedbjaFw8YDzLz7\",\"3SgSNoAB3sxaYeT3w\",\"zZfMwLuoERGmybgib\",\"BdLcWEA24injbAawz\",\"buX4mCQhtXCfBjeno\",\"8qNSPHZBpmjSTt3tH\",\"4ySzqKC5s3ZRpG9di\",\"xEX3TDY6C2h82dJTn\",\"HXbTKW3jmmyRAsKrr\",\"vRXuYYBNuHEQ29fbm\",\"sxci7DYKNa6q22Sjq\",\"pYonfGP4u9HNL9Z32\",\"9RJpt5ec2KMLuac4w\",\"wrKqfRcDJNGSxFK6p\",\"zTtKiCbLWzaf2Yjo4\",\"uw47663LqPME8btaA\",\"wFRLGjA56kj7xyhmv\",\"srJ34BaybkQh3qRkM\",\"rhS8qXRjZcpDXkwnE\",\"TA9dwvnSdta7rTynz\",\"cR3ibTMxLyEdDFCHY\",\"jCjCvyhqhpebkJn34\",\"zfyRY2ZoTpJmy6EHu\",\"TCTZucJN3tJh5t7MB\",\"htXCitorobtqYymjN\",\"B4pxRqzo43M7S8FbP\",\"TWZabB8LPeRzBA5cx\",\"afvP29FhRou2bTaav\",\"xrqK8P7zH83wjo3L4\",\"AeSmk2XWGcTLHB7PJ\",\"uiNKqQKw6TzB3kAju\",\"yGDSvLJXXz5ZmaS4h\",\"KMR6vNzvSKMA2cXnK\",\"PPdaczxSt2u5cmZYG\",\"Wqmbwt4n4CCxSL5Tt\",\"ksYKipM57WDXYHNmA\",\"RsujLHaML6L3KinzK\",\"XNgW94PSq5kkXhojm\",\"vRfhB7mCKLAFSsPu3\",\"MFXS4qNtxJw9XmZZh\",\"5HGyJtoZ3AffzAZAv\",\"FNYPC36yqPmTKDaqR\",\"XH6378Zm3WBm679yx\",\"nXw9eTHFraWQtwJtY\",\"GD9Jqmu93vB4LTT8F\",\"unqzSsxpxj9sZ7rbD\",\"ckQwFFWyLXmDQAaCn\",\"nSLvkGEpiYCtcBLaa\",\"ekzGKngknJdSLHM7P\",\"rWhXHhzF4W8bea6LP\",\"H3XLNCWB5yXt5YYXn\",\"iLrtRGuyCBMzBot9X\",\"dqCuz3u9wLLRcJrva\",\"M4Jyjssy7yQSH7KNP\",\"GSgr8hLGHeZPde7WJ\",\"x2wZJTe89rguovy97\",\"mBjXJu7NARTx839BP\",\"974cv448kw6Wu2JF6\",\"eXQziXGcpwekMyABQ\",\"aJLTQjSMpFy6dvom5\",\"KPz93xbvJ9x7okGs6\",\"fdyejapW3NWN7utPX\",\"r72oFMcCQh4rBsKHb\",\"6kB5qypxcm62PHsEJ\",\"nFbmNzMQ38TncmfQX\",\"AzzzwpNTQgGrMyatx\",\"3Gf7ikLijfoxabiPY\",\"SodKuFgHKxxS8i7aD\",\"Q2TD7GcXaL5F3d2LM\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"xzWM9imvHoSd36iv7\",\"language\":\"csharp\"},{\"_id\":\"hgHMhpJjyFxYJMMXp\",\"language\":\"java\"},{\"_id\":\"mN98zKeSSLnXwKz8C\",\"language\":\"javascript\"},{\"_id\":\"EYojuPCtvSzF2chkZ\",\"language\":\"python3\"},{\"_id\":\"X5J7MZ5ZeiJDaGByH\",\"language\":\"ruby\"}]}}"]