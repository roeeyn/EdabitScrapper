a["{\"msg\":\"result\",\"id\":\"306\",\"result\":{\"_id\":\"4r33Yd2HuEireb3Sm\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class IntegerDigits {\\n\\tpublic static int count(int n) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.4031007751937985,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"A29AKfHJEJwaXDQtd\",\"instructions\":\"Create a function that *counts* the integer's **number of digits**.\\n\\n### Examples\\n```\\ncount(4666) ➞ 4\\n\\ncount(544) ➞ 3\\n\\ncount(318) ➞ 3\\n \\ncount(-92563) ➞ 5\\n \\ncount(-314890) ➞ 6\\n\\ncount(654321) ➞ 6\\n\\ncount(638476) ➞ 6\\n```\\n\\n### Notes\\n- For an added challenge, try to solve this without using strings.\\n- Alternatively, you can solve this via a recursive approach.\\n- A recursive version of this challenge can be found via this [link](https://edabit.com/challenge/dreQhsnZJ7HGtsts5).\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"import static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class IntegerDigitsTest {\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertEquals(4, IntegerDigits.count(4666));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertEquals(3, IntegerDigits.count(544));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertEquals(1, IntegerDigits.count(0));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertEquals(3, IntegerDigits.count(318));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertEquals(5, IntegerDigits.count(-92563));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertEquals(6, IntegerDigits.count(314890));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertEquals(6, IntegerDigits.count(654321));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertEquals(6, IntegerDigits.count(638476));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test09() { \\n\\t\\tassertEquals(5, IntegerDigits.count(12345));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test10() { \\n\\t\\tassertEquals(7, IntegerDigits.count(1289396));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test11() { \\n\\t\\tassertEquals(7, IntegerDigits.count(-1232323));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test12() { \\n\\t\\tassertEquals(8, IntegerDigits.count(12839393));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test13() { \\n\\t\\tassertEquals(9, IntegerDigits.count(-231273683));\\n\\t}\\n}\",\"language\":\"java\",\"quality\":4.833333333333333,\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,2,3,1,2,2,0,2,2,3,1,1,3,1,1,1,1,2,0,2,0,2,1,2,3,1,0,1,2,1,1,1,0,2,2,1,2,2,2,2,1,1,2,1,1,1,2,2,0,2,2,0,1,1,0,2,2,2,2,0,0,3,3,0,2,2,2,1,1,2,1,1,2,0,0,1,1,2,1,1,0,2,1,0,2,2,2,2,3,1,1,0,2,2,2,1,2,3,2,2,2,2,1,0,1,0,2,2,1,2,1,2,2,2,2,1,0,2,0,1,0,0,1,1],\"quality\":[5,5,5,5,5,5,5,5,5,5,3,5],\"rators\":[\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"vekfxCbwbZZ9RNd5c\",\"Q8FHsZRii9Tbfb8AB\",\"2NJuDfSqdrF8kHHni\",\"rWhXHhzF4W8bea6LP\",\"wrqRhSigtz8MXeBaL\",\"SKHn7wgr8k4FCtZLi\",\"azAzSkvJd7eyXY9x9\",\"RvfeiaoPQGgmrCYTA\",\"J48HzyrM4kmybqM48\",\"9Ct9EYenTi6JXEaWW\",\"HoikYeWdWCBFtKK2p\",\"fccrKwbWwoByniQct\",\"mQSstzTk7yQaTy7kM\",\"KdbZLuYKW8de2JqHT\",\"Fdq6CxMWZL8WZiNaM\",\"yXGiiSAR5nBHnH3yr\",\"GER4cDdQbugFLAdoj\",\"rvojHhKH3DaxotefQ\",\"6QHXQkQAcXMJ7C2kK\",\"gXTAie79kiw28tx5u\",\"etoSR23iELGGgs9rA\",\"TrquEHytntLKHA4m2\",\"DzvdGwHEjqsX7wyKr\",\"jb9RLyyuo565bKDzN\",\"zZJnquegZvRuvFvep\",\"8Xx8nWXRydHDBGfQf\",\"jXTnL3JatkKjoifyb\",\"jyoLggHk8xQKZuoQC\",\"AeJSxRqw2dJZuGvdk\",\"dhNprHzrpYYfsNSNt\",\"vn6nR36mdfY8z2zKx\",\"Nb6LYPoQP6KJZt8mz\",\"BWqQ68pvNedARDcBN\",\"mQKWauR6b252TmdX4\",\"qaPjAANdnxFnWfj5d\",\"82weQfHHmno4Mq4X7\",\"B5fXQ7YzZcrJ9bjZb\",\"mzLQmxr7TjimwggGA\",\"a49eNnfRwSMxsDJXf\",\"vRXuYYBNuHEQ29fbm\",\"mG8HqKiAQFTdRZthG\",\"oAHPbMMdHJGSmuFBb\",\"buX4mCQhtXCfBjeno\",\"bur3yQ8s34zqKGEro\",\"CndGHCb8s2wwjABJG\",\"zZfMwLuoERGmybgib\",\"hhxjQREtmHSheH9Pj\",\"DkSMZ3jZLkwviKb9g\",\"RyBCJ8q8eTBDYEGSb\",\"4ySzqKC5s3ZRpG9di\",\"sxci7DYKNa6q22Sjq\",\"rhS8qXRjZcpDXkwnE\",\"mfm3gB39arY8Rjb2y\",\"c7uBxu2rgY77H5d79\",\"wFRLGjA56kj7xyhmv\",\"xEX3TDY6C2h82dJTn\",\"srJ34BaybkQh3qRkM\",\"MpfytGFYF77emJ3cT\",\"J9zJq7PMGb6mqzcHW\",\"htXCitorobtqYymjN\",\"JFodQijHHdRkkrZvT\",\"jCjCvyhqhpebkJn34\",\"a9Cgz9sckLNDmnAJr\",\"PJu3WcTpfRrvHfQiS\",\"J7epB3qSQJ2E8vWkY\",\"2NJZbusRvu3eJ4tHu\",\"zTtKiCbLWzaf2Yjo4\",\"KMR6vNzvSKMA2cXnK\",\"563onSvqgjToY79ah\",\"B4pxRqzo43M7S8FbP\",\"Egc4E8QQSDDyW3aqk\",\"cBFcsC4G9NdPc7kh5\",\"xW9nC9h6p77YT2iso\",\"R8uAJk89MupgKqyJS\",\"vAh63eGRwkuJtoP8v\",\"9xzk7TQqCRBWcMHu9\",\"unqzSsxpxj9sZ7rbD\",\"FxPDKKibxnZjGJLs6\",\"YLwJkF2wuL3n9o6a2\",\"eYHYzacm2S4tkzQw9\",\"uw47663LqPME8btaA\",\"pf9XmkWS3RNJnC9Na\",\"DZvz6WY5bQEneYzvv\",\"bLJZFxCSvjHHuQWuQ\",\"329Qq4BmraTimfkAs\",\"eQXwk5zGckM8tCWYH\",\"ckQwFFWyLXmDQAaCn\",\"Hwy56FJ4nfTvrPTbQ\",\"hF9icm7GxAnAGSjAD\",\"PAEWysAAFheYiYPBp\",\"M7SavHuYgKmHz64un\",\"yRnnH5XhgnATwracB\",\"5HGyJtoZ3AffzAZAv\",\"vQ5hLK96ptfC2GvM9\",\"9TiKefupYpRGzxgNH\",\"6e7EwhH7NHxnjr78S\",\"w3AwebBQjoRsnpZSp\",\"BBBZrYxsyA3c7Ad4K\",\"KYpCWXuddyhFyAgND\",\"KPz93xbvJ9x7okGs6\",\"jjnn9QHFh6mietn4S\",\"fEKYxcHjk7rvpjSRJ\",\"P39wWWfGZExHRdE96\",\"nFbmNzMQ38TncmfQX\",\"E49fagKgXbsTB9wJr\",\"GHGsnYu3yQFnrNMKc\",\"GmJGiamLWKCZKJbXz\",\"WuAZDtKZaEJZiLRBi\",\"S4DAs9YLbxmGFzNxm\",\"PqzzqqjP4NJwc9JsH\",\"6DyWxLuLh6zECgtuJ\",\"Qv2jEtTnFCXX7cdd3\",\"NnymXePpDaZnp2fRd\",\"cCPvPqGF4queA5vvb\",\"zJSJkkarPx4xGBAJy\",\"MLar5tzRdfSgCpGNr\",\"6XZcNTkX7TsdhB3oh\",\"HTz9nRyzAw4BCi7xD\",\"4LvaNEj7Rcwwuk74w\",\"jz5z6Pkmd6EyknhNx\",\"bg4G79DdkMaDxXvdv\",\"AzzzwpNTQgGrMyatx\",\"XNgW94PSq5kkXhojm\",\"54CoZWW7575tRvrEK\",\"E2hpke7mHxAWsw5t9\",\"BYcLTueiCeWKHujEg\",\"RJ6mfGK5N6pRrGRm9\",\"YS2vn4mFRcHprdtWC\",\"66vmtsF8xtaCJypwL\",\"5eDE9KCDnDnqBqLEK\",\"mmHR9EazNjJ3cCnxK\",\"wpMM3YxaTpgfAtNg3\",\"hJJWP5mvnF7JEsQHq\",\"JLwK4Bvwe9nbefDoQ\"],\"total\":145},\"flags\":0},\"summary\":\"Create a function that counts the integer's number of digits.\\n\\nExamples\\ncount(4666) ➞ 4\\n\\ncount(544) ➞ 3\\n\\ncount(318) ➞ 3\\n\\ncount(-92563) ➞ 5\\n\\ncount(-314890) ➞ 6\\n\\ncount(654321) ➞ 6\\n\\ncount(638476) ➞ 6\\n\\nNotes\\nFor an added challenge, try to solve this without using strings.\\nAlternatively, you can solve this via a recursive approach.\\nA recursive version of this chall\",\"tags\":[\"math\",\"numbers\",\"loops\"],\"timestamp\":{\"$date\":1601909648486},\"title\":\"Integer Digits Count\",\"family\":[{\"_id\":\"4r33Yd2HuEireb3Sm\",\"language\":\"java\"},{\"_id\":\"wv6p5WR648oG6mTZx\",\"language\":\"javascript\"},{\"_id\":\"sLq6GDa4NzDWRD9hY\",\"language\":\"python3\"},{\"_id\":\"yd2YChPgwLWSzjWxT\",\"language\":\"swift\"}]}}"]