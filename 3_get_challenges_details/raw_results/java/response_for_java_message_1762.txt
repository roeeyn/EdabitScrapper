a["{\"msg\":\"result\",\"id\":\"438\",\"result\":{\"_id\":\"XgFuNXpXAENpZiDaw\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"public class Challenge {\\n\\tpublic static int mysteryFunc(int num) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.6065573770491803,\"familyId\":\"hG9TxeGc7nhhEWRkr\",\"instructions\":\"This is a **reverse coding challenge**. Normally you're given explicit directions with how to create a function. Here, you must generate your own function to satisfy the relationship between the inputs and outputs.\\n\\nYour task is to create a function that, when fed the inputs below, produces the sample outputs shown.\\n\\n### Examples\\n```\\nmysteryFunc(152) ➞ 10\\n\\nmysteryFunc(832) ➞ 48\\n\\nmysteryFunc(19) ➞ 9\\n\\nmysteryFunc(133) ➞ 9\\n```\\n\\n### Notes\\nN/A\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(10, Challenge.mysteryFunc(152));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(48, Challenge.mysteryFunc(832));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(25, Challenge.mysteryFunc(5511));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(9, Challenge.mysteryFunc(19));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(9, Challenge.mysteryFunc(133));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"This is a reverse coding challenge. Normally you're given explicit directions with how to create a function. Here, you must generate your own function to satisfy the relationship between the inputs and outputs.\\n\\nYour task is to create a function that, when fed the inputs below, produces the sample outputs shown.\\n\\nExamples\\nmysteryFunc(152) ➞ 10\\n\\nmysteryFunc(832\",\"tags\":[\"numbers\",\"loops\",\"algorithms\"],\"timestamp\":{\"$date\":1555873784991},\"title\":\"Reverse Coding Challenge #6\",\"stats\":{\"completed\":{\"total\":128,\"ratings\":[2,2,2,2,2,2,2,2,2,2,0,2,2,1,2,3,1,2,3,1,3,2,3,2,2,2,0,2,3,0,2,1,3,1,5,2,3,1,3,1,1,1,0,0,2,0,2,3,2,3,2,1,1,3,1,1,3,3,2,2,3,0,2,1,1,3,1,3,0,2,0,1,1,0,1,2,2,2,2,1,1,0,0,4,2,1,2,1,2,1,1,2,2,1,1,0,0,0,1,2,2,2,0,2,2,2,1,1,1,2,1,4,1,2,1,2,0,2,1,1,2,1],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"yJyjT7Z2PPQmzzWpP\",\"ye4QaoZY96k76jXB7\",\"epdk8ksBZEc3yfqC8\",\"pyobBgKGbSTsK28uh\",\"z6gRoaKmajaC6FgYb\",\"vjh7xAmbYZoaYWeRL\",\"DifrecYA4Z6upGuA9\",\"H7cFySq3zJp4xBxi7\",\"k6ypT7JArDXfZ5CxZ\",\"XTCebLPQLaxTt8N7C\",\"o3bEaQNMnDGX9FmqZ\",\"5sX3BS7mMGANQmKTa\",\"azThPZS9WYk22P4cQ\",\"9dQKfbBJ74tdayzQD\",\"iumiEEzgPfm2oJSA2\",\"3eDTSFoE7kn3d4Lb4\",\"PMT66oc5aR4LpqHMZ\",\"E8kxrkhNmubbNJTDT\",\"LmMBSoPoi27hooMnC\",\"L8KR8FTXXY4o6ynRW\",\"H8kBiNw9dK3HDPSww\",\"Cds5rmeFDxZLdpAGq\",\"dghzoJoET6QpQKRXB\",\"XeFeCwRmkwfQrhuCo\",\"JMDx2cfKatEdXHbLf\",\"bMkeE2sjmYBskYndR\",\"CwBBXa8awfz8ePtwe\",\"QS5RGoPnapStFD5Gi\",\"cGwqKDCYRv6AP4GPa\",\"QdMda8ZPeux6FcasR\",\"ydos8Ba8nZdYRNJpS\",\"DXFbm8EzFzqmhv93e\",\"bE8E6gZ5ThCuNDg62\",\"rRZyfZERqirPg7M9S\",\"rJFJrMGrHJ9SRt5PL\",\"cp3X8hk8yNME7qoD9\",\"yhk8G8cM3p9JAbfJN\",\"iwBsM6JXT3ZRryfwG\",\"xkZwNtWvBTBSSg5qo\",\"JRpaxdRrAaE6EXBY3\",\"BgP7LFjSWhPvp547w\",\"5znpaFDoToJtAtF3h\",\"yja7jBLd9GwM4tZBy\",\"a6b7tDTfcvkoGnjL5\",\"eKEh8g38b5Mmq8dfP\",\"LQ9T6dPa3nXcZdbZq\",\"4MWMwGbthkTMu3dkb\",\"aMNhTh35QQAs33ycQ\",\"hzwyTgdJ6Ana6uYFG\",\"a49eNnfRwSMxsDJXf\",\"gyJZ9i7phhRH5PpbA\",\"oMZovHkR6QqNvQwyc\",\"vH5tKNTA8GJKHaCtT\",\"wNwFfk4beypxgvLve\",\"MRYZPuz75jjFew5HN\",\"gTLRukZhA3zjp46va\",\"ZxT77KmWRWEpY9FXM\",\"XudqK9kvR5ABCypLN\",\"FHSJnAYTbcsKFgeQa\",\"LTHCxsdjqzXpaXShT\",\"Ruu6cyHhkZD52TWs5\",\"nzC8nRp7RxAGQWv66\",\"SocjAuHjWDPdH4wQ3\",\"ikKEiiBj7bkd5yH2r\",\"sxci7DYKNa6q22Sjq\",\"wk2BkjuvmLPinSvLw\",\"t2kdBPj9qQAXY2Ehd\",\"9c8n7ti5vCjTRgiGN\",\"PYgmZTBbyAdt95Daa\",\"CLmJduqJHX83dM4Pd\",\"Yohr2MmAyaWGMbB35\",\"J9zJq7PMGb6mqzcHW\",\"8J2Dqqz9PaFufQzwY\",\"AyrEvM2GLX2jqM772\",\"Es4eX2stRpyoXeC7f\",\"hB5mgzMwQSnhBzi7P\",\"Kso7rzAKB4TTCPKgM\",\"5seiNqw6ZXoF2GRRd\",\"jyoLggHk8xQKZuoQC\",\"WZujpe8yQAyZmpWHg\",\"etoSR23iELGGgs9rA\",\"TrquEHytntLKHA4m2\",\"DePiAS7u5Pk9d6SLr\",\"htXCitorobtqYymjN\",\"Witn99Xo8Anbjpakg\",\"QihbqGthCHiz3eqkg\",\"g4NCSxxHqHCGMpWwT\",\"6kz7jjJS8W4tikYQT\",\"Yom3RzkMYpweE8cbS\",\"YcjwCvYut6834Jzd8\",\"k2tXkx7AyX77tQDRo\",\"DzvdGwHEjqsX7wyKr\",\"Fdq6CxMWZL8WZiNaM\",\"82weQfHHmno4Mq4X7\",\"YFHkjbM6obMSj24zi\",\"azAzSkvJd7eyXY9x9\",\"yXGiiSAR5nBHnH3yr\",\"gXTAie79kiw28tx5u\",\"rWhXHhzF4W8bea6LP\",\"8Xx8nWXRydHDBGfQf\",\"jXTnL3JatkKjoifyb\",\"bhLWf4ccRYTdQcaCZ\",\"buX4mCQhtXCfBjeno\",\"bur3yQ8s34zqKGEro\",\"DkSMZ3jZLkwviKb9g\",\"rhS8qXRjZcpDXkwnE\",\"wFRLGjA56kj7xyhmv\",\"srJ34BaybkQh3qRkM\",\"xEX3TDY6C2h82dJTn\",\"vX7XgmNgn5qXd3fcw\",\"ZBgQ5FSRY7DQsQbkF\",\"KMR6vNzvSKMA2cXnK\",\"c7uBxu2rgY77H5d79\",\"fdKfNH2BH9z9cb5xP\",\"AHccFyf5Xzk9qEcvR\",\"unqzSsxpxj9sZ7rbD\",\"FxPDKKibxnZjGJLs6\",\"uw47663LqPME8btaA\",\"23gxHrrXiriKXnggo\",\"nFbmNzMQ38TncmfQX\"],\"quality\":[5,4,5,5,5,2,4,5]},\"tests\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.375,\"family\":[{\"_id\":\"XHSqdNGMug9ieiJmj\",\"language\":\"cpp\"},{\"_id\":\"NRAbyiQP9ZNa4bDRT\",\"language\":\"csharp\"},{\"_id\":\"XgFuNXpXAENpZiDaw\",\"language\":\"java\"},{\"_id\":\"igEBCD9MzBfKfEMog\",\"language\":\"javascript\"},{\"_id\":\"QCXxnDHsfF7gtkxze\",\"language\":\"python3\"},{\"_id\":\"iNgQtYPE7EoE9KDZG\",\"language\":\"ruby\"},{\"_id\":\"ZyRJac8X5JAxfdjXF\",\"language\":\"swift\"}]}}"]