a["{\"msg\":\"result\",\"id\":\"463\",\"result\":{\"_id\":\"DPyBbBDqziAdo9DRJ\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n\\tpublic static int digitOccurrences(int min, int max, int digit) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":1.6533333333333333,\"familyId\":\"mq4NwwGDTpQruoEns\",\"instructions\":\"Write a function that counts the number of times a specific digit occurs in a range (**inclusive**). The function will look like:\\n\\n```\\ndigitOccurrences(min, max, digit) ➞ number of times digit occurs\\n```\\n\\n### Examples\\n```\\ndigitOccurrences(51, 55, 5) ➞ 6\\n// [51, 52, 53, 54, 55] : 5 occurs 6 times\\n\\ndigitOccurrences(1, 8, 9) ➞ 0\\n\\ndigitOccurrences(-8, -1, 8) ➞ 1\\n\\ndigitOccurrences(71, 77, 2) ➞ 1\\n```\\n\\n### Notes\\n- Ranges can be negative.\\n- `min <= max`\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(6, Challenge.digitOccurrences(51, 55, 5));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(0, Challenge.digitOccurrences(1, 8, 9));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(1, Challenge.digitOccurrences(71, 77, 2));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(2, Challenge.digitOccurrences(1, 14, 4));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(11, Challenge.digitOccurrences(20, 30, 2));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(10, Challenge.digitOccurrences(18, 37, 3));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(63, Challenge.digitOccurrences(5, 335, 6));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n    assertEquals(3, Challenge.digitOccurrences(-19, 19, 0));\\n  }\\n\\t\\n\\t@Test\\n  public void test9() {\\n    assertEquals(1, Challenge.digitOccurrences(-8, -1, 8));\\n  }\\n\\t\\n\\t@Test\\n  public void test10() {\\n    assertEquals(0, Challenge.digitOccurrences(-5, -5, 4));\\n  }\\n\\t\\n\\t@Test\\n  public void test11() {\\n    assertEquals(1, Challenge.digitOccurrences(-5, -5, 5));\\n  }\\n\\t\\n\\t@Test\\n  public void test12() {\\n    assertEquals(5, Challenge.digitOccurrences(-50, -45, 4));\\n  }\\n\\t\\n\\t@Test\\n  public void test13() {\\n    assertEquals(190, Challenge.digitOccurrences(-500, -45, 4));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"Write a function that counts the number of times a specific digit occurs in a range (inclusive). The function will look like:\\n\\ndigitOccurrences(min, max, digit) ➞ number of times digit occurs\\n\\nExamples\\ndigitOccurrences(51, 55, 5) ➞ 6\\n// [51, 52, 53, 54, 55] : 5 occurs 6 times\\n\\ndigitOccurrences(1, 8, 9) ➞ 0\\n\\ndigitOccurrences(-8, -1, 8) ➞ 1\\n\\ndigitOccurrences(71,\",\"tags\":[\"numbers\",\"strings\"],\"timestamp\":{\"$date\":1568084125462},\"title\":\"Count a Specific Digit\",\"stats\":{\"completed\":{\"total\":86,\"ratings\":[2,2,2,2,2,3,1,1,2,2,2,2,1,1,2,3,2,2,0,1,2,2,2,0,1,1,0,3,2,2,2,2,2,1,2,2,2,1,0,0,3,1,1,1,1,2,2,1,2,2,0,3,1,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,1,1,1,2,2],\"rators\":[\"3pdgguqZgNDSAJSGm\",\"vRXuYYBNuHEQ29fbm\",\"sxci7DYKNa6q22Sjq\",\"SbCR7PHqEG4dnBtLN\",\"xF2KaebJZekTjXDGF\",\"ew8GGiEeELhoxPLE3\",\"CX2KrNqcrfk3NKZo8\",\"3wDky236gbaDb6ph9\",\"iuxbPXMaKCPzQP2si\",\"t2kdBPj9qQAXY2Ehd\",\"YF79LnTdprobbYY5v\",\"ct699TXH59y7Fhyh4\",\"2cbTKYSPwFJBoEtay\",\"3gxJoNp59B4eoyyed\",\"gXMfzkYnoTZXXemY8\",\"Yohr2MmAyaWGMbB35\",\"zzhpW9beZnjwaHk5D\",\"u4yanfWeeZsN3xWgc\",\"J9zJq7PMGb6mqzcHW\",\"eXW8reZCCZHQzJjQi\",\"9gJsF5apWJGWZJprn\",\"8J2Dqqz9PaFufQzwY\",\"AyrEvM2GLX2jqM772\",\"gZSriaDFxXTsGRzbM\",\"Es4eX2stRpyoXeC7f\",\"HawgpaWZnHrBtve4P\",\"4RHx3H8EwP2oboW8e\",\"wYYMNPe8nSiJFbvJw\",\"82weQfHHmno4Mq4X7\",\"tDN3QKmtBpdNA4C52\",\"hB5mgzMwQSnhBzi7P\",\"Kso7rzAKB4TTCPKgM\",\"5seiNqw6ZXoF2GRRd\",\"fZjkX29nhRTWWb75k\",\"jyoLggHk8xQKZuoQC\",\"TrquEHytntLKHA4m2\",\"WZujpe8yQAyZmpWHg\",\"etoSR23iELGGgs9rA\",\"yjGjZJuGsNoCBqypZ\",\"DePiAS7u5Pk9d6SLr\",\"htXCitorobtqYymjN\",\"mfm3gB39arY8Rjb2y\",\"y6kfyYmydcD8tkBk7\",\"DzvdGwHEjqsX7wyKr\",\"gcb9qj4cti5vcw66t\",\"g4NCSxxHqHCGMpWwT\",\"k2tXkx7AyX77tQDRo\",\"Yom3RzkMYpweE8cbS\",\"c7uBxu2rgY77H5d79\",\"rvojHhKH3DaxotefQ\",\"azAzSkvJd7eyXY9x9\",\"yXGiiSAR5nBHnH3yr\",\"C9yBWYcZsjmJYww3K\",\"gXTAie79kiw28tx5u\",\"oMZovHkR6QqNvQwyc\",\"8Xx8nWXRydHDBGfQf\",\"jXTnL3JatkKjoifyb\",\"RGN3QTb5LXj4ZPPkj\",\"a49eNnfRwSMxsDJXf\",\"EoWnr4ab9B9ou3Lcz\",\"buX4mCQhtXCfBjeno\",\"bur3yQ8s34zqKGEro\",\"DkSMZ3jZLkwviKb9g\",\"mG8HqKiAQFTdRZthG\",\"rhS8qXRjZcpDXkwnE\",\"4ySzqKC5s3ZRpG9di\",\"wFRLGjA56kj7xyhmv\",\"srJ34BaybkQh3qRkM\",\"KMR6vNzvSKMA2cXnK\",\"rWhXHhzF4W8bea6LP\",\"jCjCvyhqhpebkJn34\",\"unqzSsxpxj9sZ7rbD\",\"xEX3TDY6C2h82dJTn\",\"FxPDKKibxnZjGJLs6\",\"uw47663LqPME8btaA\",\"jyjKaFsAbJXdTCePh\",\"PAEWysAAFheYiYPBp\"],\"quality\":[5,2,5,4,5,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.428571428571429,\"family\":[{\"_id\":\"FsG7JrxTyPyoeWT4Q\",\"language\":\"cpp\"},{\"_id\":\"DPyBbBDqziAdo9DRJ\",\"language\":\"java\"},{\"_id\":\"dqSPYsWFtsCLeeZC2\",\"language\":\"javascript\"},{\"_id\":\"tNRvtHKZxvqPRnAeF\",\"language\":\"python3\"},{\"_id\":\"caGgrRpAPcQ43ynnZ\",\"language\":\"ruby\"}]}}"]