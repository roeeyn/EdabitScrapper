a["{\"msg\":\"result\",\"id\":\"828\",\"result\":{\"_id\":\"5tNkD75pLSkAqBFnD\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class StickyKeys {\\n  public static boolean isLongPressed(String base, String typed) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":3.857142857142857,\"familyId\":\"6BfrWWhbyidPuJJuy\",\"instructions\":\"Someone is typing on the sticky keyboard. Occasionally a key gets stuck and more than intended number of characters of a particular letter is being added into the string. The function input contains `original` and `typed` strings. Determine if the `typed` string has been made from the `original`. Return `true` if it is and `false` if the typed string cannot have been made from the `original`.\\n\\n### Examples\\n```\\nisLongPressed(\\\"leellee\\\", \\\"lleeelee\\\") ➞ false\\n\\nisLongPressed(\\\"deep\\\", \\\"dddeeeppp\\\") ➞ true\\n\\nisLongPressed(\\\"teshaa\\\", \\\"ttteeeesssshhhaaaaa\\\") ➞ true\\n\\nisLongPressed(\\\"xavier\\\", \\\"xavvviieerr\\\") ➞ true\\n\\nisLongPressed(\\\"Tokyo\\\", \\\"TTokkyoh\\\") ➞ false\\n\\nisLongPressed(\\\"laiden\\\", \\\"laiden\\\") ➞ true\\n```\\n\\n### Notes\\nN/A\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"/** \\n==================================== \\nTestGen 2.3 for JUnit 4.13.0 \\t\\t\\nTest Case: StickyKeys::isLongPressed \\nTimestamp: 11/23/2020 10:15:56 PM \\n------------------------------------ \\n® DARKKO 2020 © \\n====================================\\n**/ \\n\\nimport static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class StickyKeysTest {\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertEquals(true, StickyKeys.isLongPressed(\\\"deep\\\", \\\"dddeeeppp\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertEquals(true, StickyKeys.isLongPressed(\\\"teshaaa\\\", \\\"ttteeeesssshhhaaaaa\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertEquals(true, StickyKeys.isLongPressed(\\\"alex\\\", \\\"aaleex\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertEquals(false, StickyKeys.isLongPressed(\\\"saeed\\\", \\\"ssaaedd\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertEquals(true, StickyKeys.isLongPressed(\\\"leelee\\\", \\\"lleeelee\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertEquals(false, StickyKeys.isLongPressed(\\\"Tokyo\\\", \\\"TTokkyoh\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertEquals(true, StickyKeys.isLongPressed(\\\"laiden\\\", \\\"laiden\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertEquals(true, StickyKeys.isLongPressed(\\\"Tesh is a complete package.\\\", \\\"Tesshh iiss a compleeeeete pacckkaaggge.\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test09() { \\n\\t\\tassertEquals(true, StickyKeys.isLongPressed(\\\"xavier\\\", \\\"xavvviieerr\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test10() { \\n\\t\\tassertEquals(false, StickyKeys.isLongPressed(\\\"He rose to prominence following his starring role as Michael Scofield in the Fox series Prison Break\\\", \\\"Hee rose to prominence following his starring role as Michael Scofield in  the Foxx series Prisons Break\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test11() { \\n\\t\\tassertEquals(true, StickyKeys.isLongPressed(\\\"Posts identified as harmful by the algorithm can be referred to human moderators,  who choose whether to take further action\\\", \\\"Possts identifiedd ass harmmmmful byy the algorithhm caaaan be referrrrred to human mmmoderators,,  wwhoo chooose whettheer too take furrther actiiionn\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test12() { \\n\\t\\tassertEquals(false, StickyKeys.isLongPressed(\\\"Manufacturers spend huge sums developing their latest four-wheeled fantasies,  laden with up-to-the-minute electronic gizmos,  which apparently will do everything for you except brush your teeth.\\\", \\\"Manufacturers spend huge sums developing their latest ffour-wheeled fantasies,  ladeen with up--to-the--minute electronic gizmos,  whiich apparently willl ddo everything for you exept brush your teeth..\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test13() { \\n\\t\\tassertEquals(false, StickyKeys.isLongPressed(\\\"Four years ago,  Volkswagen was a very different company.\\\", \\\"Four years ago Volkswagen waas a veery differentt company.\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test14() { \\n\\t\\tassertEquals(true, StickyKeys.isLongPressed(\\\"She threw his clothes out the window.\\\", \\\"Shhe ttttthrew hiis ccclothes   ouut thee winnndowww.\\\"));\\n\\t}\\n}\",\"language\":\"java\",\"quality\":0,\"summary\":\"Someone is typing on the sticky keyboard. Occasionally a key gets stuck and more than intended number of characters of a particular letter is being added into the string. The function input contains original and typed strings. Determine if the typed string has been made from the original. Return true if it is and false if the typed string cannot have been made\",\"tags\":[\"conditions\",\"logic\",\"strings\",\"validation\"],\"timestamp\":{\"$date\":1606290351583},\"title\":\"Sticky Keys Typing\",\"stats\":{\"completed\":{\"total\":14,\"ratings\":[4,4,4,4,4,4,4,3,2,5,5,4,5,2],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"2g9DndhBotcaKDiFD\",\"gXTAie79kiw28tx5u\",\"h6exQtjB22pabWmvE\",\"Y7o8JNxKAA5JThBsD\",\"RMtJwtpPvKr6FZc7E\",\"KMR6vNzvSKMA2cXnK\",\"sxci7DYKNa6q22Sjq\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"JEDiEy3CooF2ayM2Y\",\"language\":\"cpp\"},{\"_id\":\"5tNkD75pLSkAqBFnD\",\"language\":\"java\"},{\"_id\":\"Xh5eFAn7tKQtDiwnB\",\"language\":\"javascript\"},{\"_id\":\"xFQrHSHYAzw9hYECy\",\"language\":\"python3\"},{\"_id\":\"z5dAv43D3hWtskz8o\",\"language\":\"ruby\"}]}}"]