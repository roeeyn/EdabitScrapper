a["{\"msg\":\"result\",\"id\":\"462\",\"result\":{\"_id\":\"g7mkKpAtZZ7mnuFQX\",\"archived\":false,\"author\":\"kochug\",\"authorId\":\"vQEmjTRgmdGNYB7yk\",\"code\":\"public class Program {\\n\\tpublic static int[] timeSum(String[] s) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.6484375,\"familyId\":\"Wk5piq2io72aafD2i\",\"instructions\":\"Create a function that takes an array of strings representing times (`'hours:minutes:seconds'`) and returns their sum as an array of integers (`[hours, minutes, seconds]`).\\n\\n### Examples\\n```\\ntimeSum([\\\"1:23:45\\\"]) ➞ [1, 23, 45]\\n\\ntimeSum([\\\"1:03:45\\\", \\\"1:23:05\\\"]) ➞ [2, 26, 50]\\n\\ntimeSum([\\\"5:39:42\\\", \\\"10:02:08\\\", \\\"8:26:33\\\"]) ➞ [24, 8, 23]\\n```\\n\\n### Notes\\nIf the input is an empty array, return `[0, 0, 0]`\",\"lab\":\"import static org.hamcrest.core.Is.is;\\nimport org.junit.Test;\\nimport static org.junit.Assert.assertThat;\\n\\npublic class ChallengeTests {\\n\\t@Test\\n\\tpublic void test1(){\\n\\t\\tassertThat(Program.timeSum(new String[]{}), is(new int[]{0,0,0}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test2(){\\n\\t\\tassertThat(Program.timeSum(new String[]{\\\"1:23:45\\\"}), is(new int[]{1, 23, 45}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test3(){\\n\\t\\tassertThat(Program.timeSum(new String[]{\\\"1:03:45\\\", \\\"1:23:05\\\"}), is(new int[]{2, 26, 50}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test4(){\\n\\t\\tassertThat(Program.timeSum(new String[]{\\\"18:54:02\\\", \\\"0:26:28\\\", \\\"11:48:22\\\", \\\"22:26:16\\\", \\\"7:17:05\\\", \\\"8:01:44\\\", \\\"0:35:24\\\", \\\"16:25:11\\\", \\\"9:11:24\\\", \\\"18:30:46\\\", \\\"3:31:51\\\", \\\"16:55:32\\\", \\\"17:59:00\\\", \\\"11:29:30\\\", \\\"3:19:58\\\", \\\"9:12:27\\\", \\\"22:03:34\\\", \\\"1:06:12\\\", \\\"0:44:07\\\", \\\"4:47:46\\\", \\\"10:38:00\\\", \\\"14:26:51\\\", \\\"10:09:07\\\", \\\"5:08:29\\\", \\\"5:29:57\\\", \\\"22:15:03\\\", \\\"20:52:28\\\", \\\"8:42:20\\\", \\\"17:36:32\\\", \\\"9:36:17\\\"}), is(new int[]{329, 41, 43}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test5(){\\n\\t\\tassertThat(Program.timeSum(new String[]{\\\"5:39:42\\\", \\\"10:02:08\\\", \\\"8:26:33\\\"}), is(new int[]{24, 8, 23}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test6(){\\n\\t\\tassertThat(Program.timeSum(new String[]{\\\"10:11:02\\\", \\\"8:57:30\\\", \\\"10:58:56\\\", \\\"4:04:17\\\", \\\"3:01:13\\\"}), is(new int[]{37, 12, 58}));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test7(){\\n\\t\\tassertThat(Program.timeSum(new String[]{\\\"1:23:45\\\", \\\"0:00:00\\\"}), is(new int[]{1, 23, 45}));\\n\\t}\\n}\",\"language\":\"java\",\"summary\":\"Create a function that takes an array of strings representing times ('hours:minutes:seconds') and returns their sum as an array of integers ([hours, minutes, seconds]).\\n\\nExamples\\ntimeSum([\\\"1:23:45\\\"]) ➞ [1, 23, 45]\\n\\ntimeSum([\\\"1:03:45\\\", \\\"1:23:05\\\"]) ➞ [2, 26, 50]\\n\\ntimeSum([\\\"5:39:42\\\", \\\"10:02:08\\\", \\\"8:26:33\\\"]) ➞ [24, 8, 23]\\n\\nNotes\\nIf the input is an empty array, ret\",\"tags\":[\"arrays\",\"loops\",\"algorithms\"],\"timestamp\":{\"$date\":1523686162195},\"title\":\"Sum of an Array of Times\",\"stats\":{\"completed\":{\"total\":135,\"ratings\":[1,1,1,1,1,3,1,1,1,2,2,1,2,1,1,2,2,1,2,2,0,2,2,1,0,2,2,0,2,0,1,3,2,1,2,2,2,1,1,2,0,2,0,2,1,2,1,2,1,1,3,2,2,2,2,2,3,2,2,2,2,2,0,2,1,2,1,3,2,0,2,2,2,1,2,3,2,3,3,2,0,2,2,2,2,0,2,2,2,1,2,1,0,1,1,3,2,2,2,2,1,2,0,1,3,2,1,2,2,2,1,2,2,3,2,2,2,2,2,2,2,2,2,2,2,3,2,1],\"rators\":[\"vQEmjTRgmdGNYB7yk\",\"cGKgWB8ZZcidku3qj\",\"CotyEj3eY9CbwBs2t\",\"iRgkGNCNtoPKC25EY\",\"M3mkzSYXCpCt2HhC3\",\"7LrgrixSzJxiGaF66\",\"GRZzKCbeb4xKHFCrZ\",\"79ZbLzp7xepvkonoh\",\"uWPJJnsq4afDdDC9T\",\"rQpthoJte6rreQd4j\",\"fbNWxXTqZy2mXNbGJ\",\"ddfeZ4pbbcXFXqZmY\",\"pPHgjRTcpeDB9mgzY\",\"Ceb5FZtQAahq3GJ57\",\"2XPSxbjbkM9NRcxZT\",\"3beBRHqPRT3Q72arL\",\"YGYf9GKzaF8CWnDHE\",\"sBAQgme9imkPrH2Xm\",\"Kc2foqht8pXCDuQPh\",\"5PXxhR3Bctqox3PE6\",\"qzFMJGxMErfBhExMm\",\"uK99RLh3CQ3yur6BQ\",\"u437YTqDGSjh49fsY\",\"yJyjT7Z2PPQmzzWpP\",\"NbSWtQTTB5jPTzXZo\",\"vjh7xAmbYZoaYWeRL\",\"KxasCAYQ7vb2KEkb2\",\"9LaJbSjKjWNPanvqv\",\"z6gRoaKmajaC6FgYb\",\"hCoyBFeNMdaC88ZFi\",\"y4cxfkgCREQRfBrjm\",\"TbbTQWFfnBweNtc9s\",\"E8kxrkhNmubbNJTDT\",\"L8KR8FTXXY4o6ynRW\",\"Zr2pbysK4SeF4B9mu\",\"vRXuYYBNuHEQ29fbm\",\"QS5RGoPnapStFD5Gi\",\"cGwqKDCYRv6AP4GPa\",\"ydos8Ba8nZdYRNJpS\",\"n58FsZcd8vamq2zio\",\"cp3X8hk8yNME7qoD9\",\"yhk8G8cM3p9JAbfJN\",\"5znpaFDoToJtAtF3h\",\"LTHCxsdjqzXpaXShT\",\"4MWMwGbthkTMu3dkb\",\"a49eNnfRwSMxsDJXf\",\"aMNhTh35QQAs33ycQ\",\"nfqNLaZm5h4cqT8yC\",\"ZQSaYjBtF23phS7rM\",\"PQ6tuAd6h728pAcHK\",\"gyeE4Dypk4d2rLLdN\",\"g2aFJXH7mo7Myu2oF\",\"Y23A46NPHAkrkzq2L\",\"sxci7DYKNa6q22Sjq\",\"RykozSgfaFDDRZ9AH\",\"9c8n7ti5vCjTRgiGN\",\"FocLpCB2WEiK2gGni\",\"t2kdBPj9qQAXY2Ehd\",\"3gxJoNp59B4eoyyed\",\"vnAs3y7hJY7X6JE6j\",\"4W4Qd5D3W5XHFReRj\",\"cG4PEDMMx8jXhWP8T\",\"yazNfwgLx7jSAZ8Tv\",\"tQatuCqYXLqvQ2rDh\",\"Yohr2MmAyaWGMbB35\",\"mXLKrgwZAxjwZefQJ\",\"phA6MomRzh9oz3eqn\",\"3KjxQu9RZ8ZSywvLz\",\"HsFc9PgmpP2X9Fwh9\",\"J9zJq7PMGb6mqzcHW\",\"bSh7hsfWHXwnQhDsy\",\"r9hHZYPQAqJ9DbwLX\",\"YLqdr7bYjwew2KM4N\",\"C9yBWYcZsjmJYww3K\",\"AyrEvM2GLX2jqM772\",\"8JyqsSbN2FJXPr3cw\",\"8J2Dqqz9PaFufQzwY\",\"Es4eX2stRpyoXeC7f\",\"4RHx3H8EwP2oboW8e\",\"cGebawowzCKcFn8gq\",\"wYYMNPe8nSiJFbvJw\",\"eJxMBZBhiHyJYWkH2\",\"X8iWCqQ7mQG3DJ5Wr\",\"TrquEHytntLKHA4m2\",\"hB5mgzMwQSnhBzi7P\",\"5seiNqw6ZXoF2GRRd\",\"Kso7rzAKB4TTCPKgM\",\"jyoLggHk8xQKZuoQC\",\"fZjkX29nhRTWWb75k\",\"WZujpe8yQAyZmpWHg\",\"etoSR23iELGGgs9rA\",\"8zZ6xmzpiFair25qr\",\"htXCitorobtqYymjN\",\"mD9cXTn8XxrDgoD8r\",\"DzvdGwHEjqsX7wyKr\",\"q2tzvkrLASvSjkek9\",\"82weQfHHmno4Mq4X7\",\"fLYvNNhG9ERCaEsD9\",\"g4NCSxxHqHCGMpWwT\",\"ePioboaTtHBoYMPE7\",\"k2tXkx7AyX77tQDRo\",\"rvojHhKH3DaxotefQ\",\"Yom3RzkMYpweE8cbS\",\"Fd9765rksgPK4E2Zy\",\"yXGiiSAR5nBHnH3yr\",\"gXTAie79kiw28tx5u\",\"azAzSkvJd7eyXY9x9\",\"jXTnL3JatkKjoifyb\",\"mQKWauR6b252TmdX4\",\"7iF6656DqFsKnDzpP\",\"buX4mCQhtXCfBjeno\",\"bur3yQ8s34zqKGEro\",\"DkSMZ3jZLkwviKb9g\",\"JWdhp42Lsm2m3JPwL\",\"4ySzqKC5s3ZRpG9di\",\"srJ34BaybkQh3qRkM\",\"KMR6vNzvSKMA2cXnK\",\"rWhXHhzF4W8bea6LP\",\"9H7iRF4Fqihm4zb6W\",\"wFRLGjA56kj7xyhmv\",\"unqzSsxpxj9sZ7rbD\",\"uw47663LqPME8btaA\",\"jyjKaFsAbJXdTCePh\",\"PAEWysAAFheYiYPBp\",\"nFbmNzMQ38TncmfQX\",\"Q2TD7GcXaL5F3d2LM\"],\"quality\":[5,3]},\"complaints\":{\"total\":0,\"reasons\":[],\"skippers\":[\"vQEmjTRgmdGNYB7yk\"]},\"instructions\":{\"score\":2.5500000000000007,\"voters\":[\"4NnRqrPwSGKGKT4Nb\",\"nZ58gDWFhqXiZpmZQ\",\"pPHgjRTcpeDB9mgzY\",\"Ceb5FZtQAahq3GJ57\"]},\"tests\":{\"score\":0,\"voters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4,\"family\":[{\"_id\":\"opnjFpTXTc4cBxkj3\",\"language\":\"cpp\"},{\"_id\":\"g7mkKpAtZZ7mnuFQX\",\"language\":\"java\"},{\"_id\":\"BP82XMfoRoREMRxLw\",\"language\":\"javascript\"},{\"_id\":\"wyr9gCiBtFM7YLauK\",\"language\":\"python3\"},{\"_id\":\"ZZcynQCEFD62phCAg\",\"language\":\"ruby\"}]}}"]