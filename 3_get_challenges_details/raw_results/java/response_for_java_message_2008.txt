a["{\"msg\":\"result\",\"id\":\"561\",\"result\":{\"_id\":\"phxxGdTJraPEQmKdq\",\"author\":\"Edward Clark\",\"authorId\":\"3pdgguqZgNDSAJSGm\",\"code\":\"public class Challenge {\\n\\tpublic static String overTime(double[] arr) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":2.141304347826087,\"familyId\":\"gLciasniigZ265QBw\",\"instructions\":\"Write a function that calculates overtime and pay associated with overtime.\\n- Working 9 to 5: regular hours\\n- After 5pm is overtime\\n\\nYour function gets an array with 4 values:\\n- Start of working day, in decimal format, (24-hour day notation)\\n- End of working day. (Same format)\\n- Hourly rate\\n- Overtime multiplier\\n\\nYour function should spit out:\\n- `$` + earned that day (rounded to the nearest hundreth)\\n\\n### Examples\\n```\\noverTime([9, 17, 30, 1.5]) ➞ \\\"$240.00\\\"\\n\\noverTime([16, 18, 30, 1.8]) ➞ \\\"$84.00\\\"\\n\\noverTime([13.25, 15, 30, 1.5]) ➞ \\\"$52.50\\\"\\n```\\n\\n2nd example explained:\\n- From 16 to 17 is regular, so `1 * 30` = 30\\n- From 17 to 18 is overtime, so `1 * 30 * 1.8` = 54\\n- `30 + 54` = $84.00\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTest {\\n\\t@Test\\n\\tpublic void test1() {\\n\\t\\tassertEquals(\\\"$240.00\\\", Challenge.overTime(new double[]{9, 17, 30, 1.5}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test2() {\\n\\t\\tassertEquals(\\\"$400.00\\\", Challenge.overTime(new double[]{9, 18, 40, 2}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test3() {\\n\\t\\tassertEquals(\\\"$325.00\\\", Challenge.overTime(new double[]{13, 20, 32.5, 2}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test4() {\\n\\t\\tassertEquals(\\\"$100.00\\\", Challenge.overTime(new double[]{9, 13, 25, 1.5}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test5() {\\n\\t\\tassertEquals(\\\"$364.00\\\", Challenge.overTime(new double[]{11.5, 19, 40, 1.8}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test6() {\\n\\t\\tassertEquals(\\\"$210.00\\\", Challenge.overTime(new double[]{10, 17, 30, 1.5}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test7() {\\n\\t\\tassertEquals(\\\"$209.63\\\", Challenge.overTime(new double[]{10.5, 17, 32.25, 1.5}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test8() {\\n\\t\\tassertEquals(\\\"$84.00\\\", Challenge.overTime(new double[]{16, 18, 30, 1.8}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test9() {\\n\\t\\tassertEquals(\\\"$130.00\\\", Challenge.overTime(new double[]{18, 20, 32.5, 2}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test10() {\\n\\t\\tassertEquals(\\\"$52.50\\\", Challenge.overTime(new double[]{13.25, 15, 30, 1.5}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test11() {\\n\\t\\tassertEquals(\\\"$432.32\\\", Challenge.overTime(new double[]{13, 21, 38.6, 1.8}));\\n\\t}\\n}\",\"language\":\"java\",\"summary\":\"Write a function that calculates overtime and pay associated with overtime.\\nWorking 9 to 5: regular hours\\nAfter 5pm is overtime\\n\\nYour function gets an array with 4 values:\\nStart of working day, in decimal format, (24-hour day notation)\\nEnd of working day. (Same format)\\nHourly rate\\nOvertime multiplier\\n\\nYour function should spit out:\\n$ + earned that day (rounded\",\"tags\":[\"algebra\",\"arrays\",\"math\",\"numbers\"],\"timestamp\":{\"$date\":1570430379307},\"title\":\"Working 9 to 5\",\"stats\":{\"completed\":{\"total\":106,\"ratings\":[2,2,2,2,2,3,2,2,0,2,2,2,1,2,3,2,3,3,2,0,3,0,1,3,2,1,1,3,1,2,3,2,2,2,2,2,2,2,2,4,2,2,3,1,1,3,3,2,2,3,2,3,3,1,2,2,3,2,3,1,5,2,2,3,3,2,2,0,3,1,2,2,1,2,3,3,2,2,3,2,3,4,2,2,2,3,2,1,2,3,3,2],\"rators\":[\"3pdgguqZgNDSAJSGm\",\"sxci7DYKNa6q22Sjq\",\"ZYT9LjgocbP4hzQK5\",\"eXW8reZCCZHQzJjQi\",\"pzz8vFouna6JTTAiW\",\"jYWQBr8A2NiTy5hSX\",\"Prw5Jq38wrSoj5QSF\",\"BSDtieYGg6H7evesT\",\"uHcTzHHNNKJefPQ9y\",\"kb2HgA7hfM8f7GS2y\",\"QXnvCBR5ooy3pbJDe\",\"k6gFxcu8xWXTFc649\",\"CLmJduqJHX83dM4Pd\",\"zRS8NrFkW6Fv5Cyuj\",\"yazNfwgLx7jSAZ8Tv\",\"qRhXvCaA7qgDoeFnr\",\"rehehi2Tr2mwaEoJE\",\"8scj4s85cYpgjRexb\",\"HsFc9PgmpP2X9Fwh9\",\"PjdJM67P7XNoorhFo\",\"oDZaopxpPAdqWXLqz\",\"gtk73irY4QdFpS2v9\",\"XA2QfKNqbWYPcvoCH\",\"J9zJq7PMGb6mqzcHW\",\"AzERMCwmKzy5zXJ3S\",\"W347YkKWzfvMbkuHr\",\"XgL7TXhBKNZpSvnRW\",\"RZgcCR2xvgZ9BB2t3\",\"QHxoA3woXpEtigAAc\",\"9aHkSrEhWL7Tp928N\",\"xoRREYmoXavSCzJ3P\",\"kMY2FBpZHYT2RgZbr\",\"DjXeYHz8w7ywi84zx\",\"yK7zzK2aGJwuWKHRL\",\"C9yBWYcZsjmJYww3K\",\"MrNyfG8SGjjBKLvgc\",\"YLqdr7bYjwew2KM4N\",\"4RHx3H8EwP2oboW8e\",\"fZky27mpbfX7soJKa\",\"XfKYEHYxwqCQQwQ6b\",\"6hsLDaXbCCEsiBr37\",\"AyrEvM2GLX2jqM772\",\"xFfjxt6vscAezQshy\",\"Es4eX2stRpyoXeC7f\",\"D7dpRtRQDmteDSAXv\",\"wYYMNPe8nSiJFbvJw\",\"7zjmTSno2cai7nRyT\",\"wbSLghDxkTjiYJrEH\",\"cjxsqXfkAPoadmppi\",\"XC9nQxxqYS46pgHTK\",\"hNkWcSqAjS9iE9HPq\",\"y7NyT6FnDzPhAzkjF\",\"TrquEHytntLKHA4m2\",\"iq55QasecYJXKz8rx\",\"5seiNqw6ZXoF2GRRd\",\"jyoLggHk8xQKZuoQC\",\"DePiAS7u5Pk9d6SLr\",\"etoSR23iELGGgs9rA\",\"gJbvbqosimaP4ZAYb\",\"hMAhaSSq6nT7wRMmr\",\"45FXSeKSLChn3gEhc\",\"k63LjKkX5p7SYng7C\",\"pBMXMQem6BpSeooYT\",\"rA5nhfhFwfqvmJb6M\",\"4RsakkyRXyYGwFxEa\",\"9rK2eEYTWWduLHG97\",\"nzmGPn6f2ceHnqFPE\",\"6fWwjSDuMGwbDDAkD\",\"jRqY4i8gPemsZMBGf\",\"oBCStgAyNK7z8C4WA\",\"rvojHhKH3DaxotefQ\",\"Ym8AjbKGSJooun3nt\",\"azAzSkvJd7eyXY9x9\",\"DzvdGwHEjqsX7wyKr\",\"yXGiiSAR5nBHnH3yr\",\"rGeN7HYDjNzBwCN8A\",\"gXTAie79kiw28tx5u\",\"PytNZK9mNiRiZxPrm\",\"mQKWauR6b252TmdX4\",\"jXTnL3JatkKjoifyb\",\"oRi93mrm7DLdeiFjf\",\"SdK5h6x8wu7th28nx\",\"GByiumxWy7aWN63Bd\",\"buX4mCQhtXCfBjeno\",\"RBGgeqf6Hiv9XaaML\",\"xEX3TDY6C2h82dJTn\",\"uw47663LqPME8btaA\",\"rhS8qXRjZcpDXkwnE\",\"RsujLHaML6L3KinzK\",\"xW9nC9h6p77YT2iso\",\"hhxjQREtmHSheH9Pj\",\"a49eNnfRwSMxsDJXf\",\"KMR6vNzvSKMA2cXnK\",\"rWhXHhzF4W8bea6LP\",\"htXCitorobtqYymjN\"],\"quality\":[4,4,3,5,3,5,5,4]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.125,\"family\":[{\"_id\":\"P7MY8AsFPtDCtLDhg\",\"language\":\"cpp\"},{\"_id\":\"rkzH6YsPNgoJjn75i\",\"language\":\"csharp\"},{\"_id\":\"phxxGdTJraPEQmKdq\",\"language\":\"java\"},{\"_id\":\"kYwxQo9tqLpFYTMY6\",\"language\":\"javascript\"},{\"_id\":\"jDjDgRPpp9cTEPkKH\",\"language\":\"python3\"},{\"_id\":\"H45ofA47ha2W8h7Kg\",\"language\":\"ruby\"},{\"_id\":\"ocWEvQnS9AspndjTf\",\"language\":\"swift\"}]}}"]