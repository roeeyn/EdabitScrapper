a["{\"msg\":\"result\",\"id\":\"388\",\"result\":{\"_id\":\"EFFCkmQcYTFkt3FxC\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class WordVowels {\\n  public static String extendVowels(String w, int n) {\\n    \\n  }\\n}\",\"difficulty\":1.52,\"familyId\":\"nnyRigcoqTjXexnkS\",\"instructions\":\"Create a function that takes a `word` and extends all vowels by a number `num`.\\n\\n### Examples\\n```\\nextendVowels(\\\"Xavier\\\", 6) ➞ \\\"Xaaaaaaaviiiiiiieeeeeeer\\\"\\n\\nextendVowels(\\\"Loves\\\", 4) ➞ \\\"Loooooveeeees\\\"\\n\\nextendVowels(\\\"Tesha\\\", 5) ➞ \\\"Teeeeeeshaaaaaa\\\"\\n```\\n\\n### Notes\\nReturn `\\\"invalid\\\"` if `num` is not a positive integer or 0.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"/** \\n=================================== \\nTestGen 3.1 for JUnit 4.13.0 \\t\\t\\nTest Case: WordVowels::extendVowels \\nTimestamp: 11/29/2020 02:41:01 PM \\n----------------------------------- \\n® DARKKO 2020 © \\n=================================== \\n\\n**/ \\n\\nimport static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class WordVowelsTest { \\n\\t\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertEquals(\\\"Teeeeeeshaaaaaa\\\", WordVowels.extendVowels(\\\"Tesha\\\", 5));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertEquals(\\\"Looooveeees\\\", WordVowels.extendVowels(\\\"Loves\\\", 3));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertEquals(\\\"Xaaaaaaaviiiiiiieeeeeeer\\\", WordVowels.extendVowels(\\\"Xavier\\\", 6));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertEquals(\\\"Heeeeeelloooooo\\\", WordVowels.extendVowels(\\\"Hello\\\", 5));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertEquals(\\\"EEEEdaaaabiiiit\\\", WordVowels.extendVowels(\\\"Edabit\\\", 3));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertEquals(\\\"Extend\\\", WordVowels.extendVowels(\\\"Extend\\\", 0));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertEquals(\\\"invalid\\\", WordVowels.extendVowels(\\\"Shorten\\\", -3));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertEquals(\\\"Teeeeesh\\\", WordVowels.extendVowels(\\\"Tesh\\\", 4));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test09() { \\n\\t\\tassertEquals(\\\"Feels\\\", WordVowels.extendVowels(\\\"Feels\\\", 0));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test10() { \\n\\t\\tassertEquals(\\\"Deeeeeeeeeep\\\", WordVowels.extendVowels(\\\"Deep\\\", 4));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test11() { \\n\\t\\tassertEquals(\\\"invalid\\\", WordVowels.extendVowels(\\\"Concise\\\", -5));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test12() { \\n\\t\\tassertEquals(\\\"Woooooooorld\\\", WordVowels.extendVowels(\\\"World\\\", 7));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test13() { \\n\\t\\tassertEquals(\\\"Coooodiiiing\\\", WordVowels.extendVowels(\\\"Coding\\\", 3));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test14() { \\n\\t\\tassertEquals(\\\"Waaaiiitiiing\\\", WordVowels.extendVowels(\\\"Waiting\\\", 2));\\n\\t}\\n\\n}\\n// end of tests\",\"language\":\"java\",\"quality\":0,\"summary\":\"Create a function that takes a word and extends all vowels by a number num.\\n\\nExamples\\nextendVowels(\\\"Xavier\\\", 6) ➞ \\\"Xaaaaaaaviiiiiiieeeeeeer\\\"\\n\\nextendVowels(\\\"Loves\\\", 4) ➞ \\\"Loooooveeeees\\\"\\n\\nextendVowels(\\\"Tesha\\\", 5) ➞ \\\"Teeeeeeshaaaaaa\\\"\\n\\nNotes\\nReturn \\\"invalid\\\" if num is not a positive integer or 0.\",\"tags\":[\"strings\",\"regex\"],\"timestamp\":{\"$date\":1606632901129},\"title\":\"Extend the Vowels\",\"stats\":{\"completed\":{\"total\":49,\"ratings\":[1,1,1,1,1,2,2,2,1,2,2,2,2,3,1,1,2,2,2,2,2,1,2,0,1,2,0,1,1,2,1,1,2,1,2,1,2,1,2,2,2,2,1,1,1,1,2,2,2,2],\"quality\":[],\"rators\":[\"Es4eX2stRpyoXeC7f\",\"jXTnL3JatkKjoifyb\",\"a777e8chPvJkY3tKa\",\"unNqQjSHzkb4pCzEu\",\"tBAQcHxxsrbutSyCr\",\"azAzSkvJd7eyXY9x9\",\"gXTAie79kiw28tx5u\",\"jyoLggHk8xQKZuoQC\",\"DzvdGwHEjqsX7wyKr\",\"82weQfHHmno4Mq4X7\",\"qaPjAANdnxFnWfj5d\",\"mG8HqKiAQFTdRZthG\",\"a49eNnfRwSMxsDJXf\",\"mDWNyaaQ9hvPCRzSd\",\"buX4mCQhtXCfBjeno\",\"4ySzqKC5s3ZRpG9di\",\"rhS8qXRjZcpDXkwnE\",\"srJ34BaybkQh3qRkM\",\"J9zJq7PMGb6mqzcHW\",\"wFRLGjA56kj7xyhmv\",\"htXCitorobtqYymjN\",\"vRXuYYBNuHEQ29fbm\",\"jCjCvyhqhpebkJn34\",\"J7epB3qSQJ2E8vWkY\",\"rWhXHhzF4W8bea6LP\",\"sxci7DYKNa6q22Sjq\",\"PJu3WcTpfRrvHfQiS\",\"KMR6vNzvSKMA2cXnK\",\"hhxjQREtmHSheH9Pj\",\"bX6tpTCjwoi6XMMbK\",\"mfm3gB39arY8Rjb2y\",\"c7uBxu2rgY77H5d79\",\"B4pxRqzo43M7S8FbP\",\"563onSvqgjToY79ah\",\"6rvJwN4mcX7iYGjY7\",\"eXME6AmouMmTezHmN\",\"unqzSsxpxj9sZ7rbD\",\"FxPDKKibxnZjGJLs6\",\"uw47663LqPME8btaA\",\"xEX3TDY6C2h82dJTn\",\"M7SavHuYgKmHz64un\",\"PAEWysAAFheYiYPBp\",\"hBTgEJimW5mwApiTs\",\"XH6378Zm3WBm679yx\",\"nFbmNzMQ38TncmfQX\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"n2Xdw3jdm6tpBLxS6\",\"language\":\"cpp\"},{\"_id\":\"EFFCkmQcYTFkt3FxC\",\"language\":\"java\"},{\"_id\":\"P4zxwFNwZPGeiDwKy\",\"language\":\"javascript\"},{\"_id\":\"3HBvZfjfNs2oYagZ4\",\"language\":\"php\"},{\"_id\":\"nrrrYN8ZwhYjhvtS4\",\"language\":\"python3\"},{\"_id\":\"iAsNnkXhxp2PudQdx\",\"language\":\"ruby\"}]}}"]