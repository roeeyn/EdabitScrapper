a["{\"msg\":\"result\",\"id\":\"792\",\"result\":{\"_id\":\"Sj2kws46RQfxdv6Wj\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class Repitition {\\n  public static Map<Object, Integer> countRepititions(Object[] e) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":3.4642857142857144,\"familyId\":\"PXLEY8HDQo9Csie38\",\"instructions\":\"Given an array, create a function that returns an object detailing how many times each element was repeated. Sort the object by value in descending order.\\n\\n### Examples\\n```\\ncountRepetitions([\\\"cat\\\", \\\"dog\\\", \\\"cat\\\", \\\"cow\\\", \\\"cow\\\", \\\"cow\\\"]) ➞ {\\\"cow\\\"=3, \\\"cat\\\"=2, \\\"dog\\\"=1}\\n\\ncountRepetitions([1, 5, 5, 5, 12, 12, 0, 0, 0, 0, 0, 0]) ➞ {0=6, 5=3, 12=2, 1=1}\\n\\ncountRepetitions([\\\"Infinity\\\", \\\"null\\\", \\\"Infinity\\\", \\\"null\\\", \\\"null\\\"]) ➞ {\\\"null\\\"=3, \\\"Infinity\\\"=2}\\n```\\n\\n### Notes\\n- The array elements can be anything from string to numeric types.\\n- The returned map object should be sorted in descending order by value.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"/** \\n======================================== \\nTestGen 2.3 for JUnit 4.13.0 \\t\\t\\nTest Case: Repitition::countRepitition \\nTimestamp: 11/8/2020 8:04:29 PM \\n---------------------------------------- \\n® DARKKO 2020 © \\n======================================== \\n**/ \\n\\nimport static org.junit.Assert.assertTrue;\\nimport org.junit.Test;\\nimport java.util.LinkedHashMap;\\nimport java.util.Map;\\n\\npublic class RepititionTest {\\n\\t@Test\\n\\tpublic void test01() {\\n\\t\\tMap<Object, Integer> hashMap = new LinkedHashMap<>();\\n\\t\\thashMap.put(\\\"cow\\\", 3);\\n\\t\\thashMap.put(\\\"cat\\\", 2);\\n\\t\\thashMap.put(\\\"dog\\\", 1);\\n\\t\\tassertTrue(\\\"Map should be sorted in descending order by value!\\\", CompareMaps.equals(hashMap, Repitition.countRepititions(new Object[] {\\\"cat\\\", \\\"dog\\\", \\\"cat\\\", \\\"cow\\\", \\\"cow\\\", \\\"cow\\\"})));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test02() {\\n\\t\\tMap<Object, Integer> hashMap = new LinkedHashMap<>();\\n\\t\\thashMap.put(0, 6);\\n\\t\\thashMap.put(5, 3);\\n\\t\\thashMap.put(12, 2);\\n\\t\\thashMap.put(1, 1);\\n\\t\\tassertTrue(\\\"Map should be sorted in descending order by value!\\\", CompareMaps.equals(hashMap, Repitition.countRepititions(new Object[] {1, 5, 5, 5, 12, 12, 0, 0, 0, 0, 0, 0})));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test03() {\\n\\t\\tMap<Object, Integer> hashMap = new LinkedHashMap<>();\\n\\t\\thashMap.put(\\\"null\\\", 3);\\n\\t\\thashMap.put(\\\"Infinity\\\", 2);\\n\\t\\tassertTrue(\\\"Map should be sorted in descending order by value!\\\", CompareMaps.equals(hashMap, Repitition.countRepititions(new Object[] {\\\"Infinity\\\", \\\"null\\\", \\\"Infinity\\\", \\\"null\\\", \\\"null\\\"})));\\n\\t}\\n\\t\\n\\t@Test\\n\\tpublic void test04() {\\n\\t\\tMap<Object, Integer> hashMap = new LinkedHashMap<>();\\n\\t\\thashMap.put('E', 3);\\n\\t\\thashMap.put('D', 1);\\n\\t\\thashMap.put('P', 1);\\n\\t\\thashMap.put('X', 1);\\n\\t\\thashMap.put('A', 1);\\n\\t\\thashMap.put('V', 1);\\n\\t\\thashMap.put('I', 1);\\n\\t\\thashMap.put('R', 1);\\n\\t\\tassertTrue(\\\"Map should be sorted in descending order by value!\\\", CompareMaps.equals(hashMap, Repitition.countRepititions(new Object[] {'D', 'E', 'E', 'P', 'X', 'A', 'V', 'I', 'E', 'R'})));\\n\\t}\\n}\\n\\nclass CompareMaps {\\n\\tpublic static boolean equals(Map<Object, Integer> a, Map<Object, Integer> b) {\\n\\t\\tint[] x = a.values().stream().mapToInt(Integer::new).toArray(),\\n\\t\\t\\t\\t\\ty = b.values().stream().mapToInt(Integer::new).toArray();\\n\\t\\tObject[] k = a.keySet().stream().toArray(),\\n\\t\\t\\t\\t\\t\\t l = b.keySet().stream().toArray();\\n\\t\\tfor (int i = 0; i < x.length; i++) {\\n\\t\\t\\tif (x[i] != y[i] || !k[i].toString().equals(l[i].toString())) return false;\\n\\t\\t}\\n\\t\\treturn true;\\n\\t}\\n}\",\"language\":\"java\",\"quality\":0,\"summary\":\"Given an array, create a function that returns an object detailing how many times each element was repeated. Sort the object by value in descending order.\\n\\nExamples\\ncountRepetitions([\\\"cat\\\", \\\"dog\\\", \\\"cat\\\", \\\"cow\\\", \\\"cow\\\", \\\"cow\\\"]) ➞ {\\\"cow\\\"=3, \\\"cat\\\"=2, \\\"dog\\\"=1}\\n\\ncountRepetitions([1, 5, 5, 5, 12, 12, 0, 0, 0, 0, 0, 0]) ➞ {0=6, 5=3, 12=2, 1=1}\\n\\ncountRepetitions([\\\"Infi\",\"tags\":[\"arrays\",\"objects\",\"numbers\",\"loops\"],\"timestamp\":{\"$date\":1604839396665},\"title\":\"Count How Many Times An Element Is Repeated\",\"stats\":{\"completed\":{\"total\":27,\"ratings\":[3,3,3,3,3,5,4,2,5,1,5,2,2,5,2,1,5,3,3,5,3,5,5,3,5,5,2,4],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"gXTAie79kiw28tx5u\",\"2Zx9x8doWtoREADt4\",\"S5WbTkKMCiPQKiRdp\",\"b3pFGJ5jWFdoAh4wp\",\"9pqtNWrsTJdZcRbEZ\",\"vRXuYYBNuHEQ29fbm\",\"4pagg6vw2Cjepv7tN\",\"LNCb5rksJLJ43L4Nw\",\"XbbcA7iXFz9y2XneB\",\"hzRBBqHDGQDWXP3Dx\",\"pA7zsEWeNuRCJK8An\",\"uf6YSFh4MZtMzJXJe\",\"DkSMZ3jZLkwviKb9g\",\"9M384SbCW7eciE5zc\",\"HsFc9PgmpP2X9Fwh9\",\"GKc4zpFhvdYyrNGHZ\",\"kAmYWuL3vjpZhfRAm\",\"Su3vDnttRBpxeyDen\",\"9vyjn4WyWtJ6o2wop\",\"wFRLGjA56kj7xyhmv\",\"sxci7DYKNa6q22Sjq\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"Sj2kws46RQfxdv6Wj\",\"language\":\"java\"},{\"_id\":\"XWXprtaTWYCWBGAax\",\"language\":\"javascript\"},{\"_id\":\"gDtHS9cAy8Fs2X7pH\",\"language\":\"python3\"},{\"_id\":\"thpXmHcyKvLzEzHMN\",\"language\":\"ruby\"}]}}"]