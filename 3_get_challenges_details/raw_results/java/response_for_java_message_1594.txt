a["{\"msg\":\"result\",\"id\":\"356\",\"result\":{\"_id\":\"yFtCbCJBpoZM2rEqP\",\"author\":\"Timothy Cahill\",\"authorId\":\"tyLS9T6YMfg9fMtYJ\",\"code\":\"public class Challenge {\\n\\tpublic static int counterpartCharCode(char ch) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.490909090909091,\"familyId\":\"juHoMPbWFFdsZuK3Z\",\"instructions\":\"Create a function that takes a single character as an argument and returns the char code of its lowercased / uppercased counterpart.\\n\\n### Examples\\n```\\nGiven that:\\n  - \\\"A\\\" char code is: 65\\n  - \\\"a\\\" char code is: 97\\n\\ncounterpartCharCode(\\\"A\\\") ➞ 97\\n\\ncounterpartCharCode(\\\"a\\\") ➞ 65\\n```\\n\\n### Notes\\n- The argument will always be a single character.\\n- Not all inputs will have a counterpart (e.g. numbers), in which case return the input's char code.\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n\\t// Normal letters.\\n\\t@Test\\n\\tpublic void test1() {\\n\\t\\tassertEquals(65,Challenge.counterpartCharCode('a'));\\n\\t}\\n\\t@Test\\n\\tpublic void test2() {\\n\\t\\tassertEquals(97,Challenge.counterpartCharCode('A'));\\n\\t}\\n\\t@Test\\n\\tpublic void test3() {\\n\\t\\tassertEquals(76,Challenge.counterpartCharCode('l'));\\n\\t}\\n\\t@Test\\n\\tpublic void test4() {\\n\\t\\tassertEquals(108,Challenge.counterpartCharCode('L'));\\n\\t}\\n\\t@Test\\n\\tpublic void test5() {\\n\\t\\tassertEquals(90,Challenge.counterpartCharCode('z'));\\n\\t}\\n\\t@Test\\n\\tpublic void test6() {\\n\\t\\tassertEquals(122,Challenge.counterpartCharCode('Z'));\\n\\t}\\n\\t// These don't have a counterpart, you should return the input's char code.\\n\\t@Test\\n\\tpublic void test7() {\\n\\t\\tassertEquals(53,Challenge.counterpartCharCode('5'));\\n\\t}\\n\\t@Test\\n\\tpublic void test8() {\\n\\t\\tassertEquals(36,Challenge.counterpartCharCode('$'));\\n\\t}\\t\\n}\",\"language\":\"java\",\"quality\":0,\"summary\":\"Create a function that takes a single character as an argument and returns the char code of its lowercased / uppercased counterpart.\\n\\nExamples\\nGiven that:\\n  \\\"A\\\" char code is: 65\\n  \\\"a\\\" char code is: 97\\n\\ncounterpartCharCode(\\\"A\\\") ➞ 97\\n\\ncounterpartCharCode(\\\"a\\\") ➞ 65\\n\\nNotes\\nThe argument will always be a single character.\\nNot all inputs will have a counterpart (e.g.\",\"tags\":[\"strings\",\"formatting\"],\"timestamp\":{\"$date\":1607380437290},\"title\":\"Find ASCII Charcode of Inverse Case Character\",\"stats\":{\"completed\":{\"total\":53,\"ratings\":[1,1,1,1,1,1,1,2,2,3,2,1,2,2,2,2,0,2,3,1,1,2,2,2,2,2,0,2,1,3,2,0,2,1,1,2,0,1,2,1,2,2,3,0,2,2,0,1,0,2,1,2,1,2,2],\"quality\":[],\"rators\":[\"tyLS9T6YMfg9fMtYJ\",\"GBLXSzmKSde6y2bsy\",\"gjtp8wv2PQcJQXCo4\",\"jXTnL3JatkKjoifyb\",\"hDeaTsprkH6CmvSAR\",\"Es4eX2stRpyoXeC7f\",\"fD2vkjhwWmxbs3aAn\",\"qJ2TgHitgMYZRTZ5d\",\"BWqQ68pvNedARDcBN\",\"gXTAie79kiw28tx5u\",\"mQKWauR6b252TmdX4\",\"BbcH2NLjE4tKAZ3wR\",\"Fdq6CxMWZL8WZiNaM\",\"azAzSkvJd7eyXY9x9\",\"qaPjAANdnxFnWfj5d\",\"a49eNnfRwSMxsDJXf\",\"mG8HqKiAQFTdRZthG\",\"mDWNyaaQ9hvPCRzSd\",\"buX4mCQhtXCfBjeno\",\"bur3yQ8s34zqKGEro\",\"jyoLggHk8xQKZuoQC\",\"DkSMZ3jZLkwviKb9g\",\"4ySzqKC5s3ZRpG9di\",\"sxci7DYKNa6q22Sjq\",\"zZfMwLuoERGmybgib\",\"wFRLGjA56kj7xyhmv\",\"rhS8qXRjZcpDXkwnE\",\"srJ34BaybkQh3qRkM\",\"wXhexS9kbNouykipc\",\"J9zJq7PMGb6mqzcHW\",\"jEfGxSSmxvNTzBoRc\",\"vRXuYYBNuHEQ29fbm\",\"htXCitorobtqYymjN\",\"JFodQijHHdRkkrZvT\",\"xEX3TDY6C2h82dJTn\",\"PJu3WcTpfRrvHfQiS\",\"KMR6vNzvSKMA2cXnK\",\"8hyeQH9fY2k822RWT\",\"B4pxRqzo43M7S8FbP\",\"rWhXHhzF4W8bea6LP\",\"JJFPy22rhWmioEDwN\",\"unqzSsxpxj9sZ7rbD\",\"FxPDKKibxnZjGJLs6\",\"uw47663LqPME8btaA\",\"DZvz6WY5bQEneYzvv\",\"hhxjQREtmHSheH9Pj\",\"PAEWysAAFheYiYPBp\",\"XH6378Zm3WBm679yx\",\"nFbmNzMQ38TncmfQX\",\"QL4tWC2WNoJvxvMhn\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"9KcAjGW83oQAzesSA\",\"language\":\"cpp\"},{\"_id\":\"zaokQWNdEudmFWpk7\",\"language\":\"csharp\"},{\"_id\":\"yFtCbCJBpoZM2rEqP\",\"language\":\"java\"},{\"_id\":\"fbaLZPNjTvYtY444B\",\"language\":\"javascript\"},{\"_id\":\"krf53j5ZdKpH86YS8\",\"language\":\"php\"},{\"_id\":\"QFXMcwaQZ8FTAuEtg\",\"language\":\"python3\"},{\"_id\":\"rznnhTyxpJcQgjAq6\",\"language\":\"ruby\"}]}}"]