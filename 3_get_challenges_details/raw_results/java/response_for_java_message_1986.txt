a["{\"msg\":\"result\",\"id\":\"552\",\"result\":{\"_id\":\"c4kGNF83S6Mzb75x9\",\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class Challenge {\\n  public static boolean isModest(int num) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":2.125,\"familyId\":\"pfxGh7F4s47AwunPp\",\"instructions\":\"In this challenge, you have to establish if a positive integer is a Modest number, accordingly to the following algorithm:\\n- Divide the number into two left and right partitions.\\n- For each combination of left and right parts, you have to check if a condition is true: **the remainder of the number divided by the right part is equal to the left part**.\\n- If at least a combination of two parts satisfies the above condition, the number is Modest, otherwise, it's not.\\n\\nGiven an integer `num`, implement a function that returns `true` if `num` is a Modest number, or `false` if it's not.\\n\\n### Example #1\\n```\\nisModest(2036) ➞ true\\n\\nCombination 1:\\nLeft = 2 | Right = 036 = 36 (Leading zeros are not considered)\\nNumber (2036) % Right (36) =  20 != Left (2)\\n\\nCombination 2:\\nLeft = 20 | Right = 36\\nNumber (2036) % Right (36) = 20 = Left (20)\\n\\n// At least a combination satisfies the condition\\n// It's a Modest number\\n```\\n\\n### Example #2\\n```\\nisModest(3412) ➞ false\\n\\nCombination 1:\\nLeft = 3 | Right = 412\\n3412 % 412 = 116 != Left\\n\\nCombination 2:\\nLeft = 34 | Right = 12\\n3412 % 12 = 4 != Left\\n\\nCombination 3:\\nLeft = 341 | Right = 2\\n3412 % 2 = 0 != Left\\n\\n// It's not a Modest number\\n// Notice how left and right parts are made:\\n// They are not permutations or combinations...\\n// ...but partitions of consecutive digits.\\n```\\n\\n### Example #3\\n```\\nisModest(21333) ➞ true\\n\\nCombination 1:\\nLeft = 2 | Right = 1333\\n21333 % 1333 = 5 != Left\\n\\nCombination 2:\\nLeft = 21 | Right = 333\\n21333 % 333 = 21 = Left\\n\\n// At least a combination satisfies the condition\\n// It's a Modest number\\n```\\n\\n### Example #4\\n```\\nisModest(8) ➞ false\\n// An integer with less than two digits can't be partitioned.\\n```\\n\\n### Notes\\n- In the right part, leading zeros are not considered (see example #1).\\n- Remember to not confuse partitions with permutations or combinations. In the Instructions, \\\"combination\\\" is related to a combination of the left and the right part containing consecutive digits (see example #2, where is reported each combination of possible partitions).\\n- Trivially, every positive integer lower than 10 can't be partitioned into two parts and it's not a Modest number (see example #4).\",\"isHidden\":false,\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(true, Challenge.isModest(2036));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(false, Challenge.isModest(3412));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(true, Challenge.isModest(21333));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(false, Challenge.isModest(8));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(true, Challenge.isModest(13));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(false, Challenge.isModest(329));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(true, Challenge.isModest(433));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n    assertEquals(true, Challenge.isModest(2037));\\n  }\\n\\t\\n\\t@Test\\n  public void test9() {\\n    assertEquals(false, Challenge.isModest(2038));\\n  }\\n\\t\\n\\t@Test\\n  public void test10() {\\n    assertEquals(true, Challenge.isModest(12036));\\n  }\\n\\t\\n\\t@Test\\n  public void test11() {\\n    assertEquals(false, Challenge.isModest(20010));\\n  }\\n\\t\\n\\t@Test\\n  public void test12() {\\n    assertEquals(true, Challenge.isModest(450810));\\n  }\\n\\t\\n\\t@Test\\n  public void test13() {\\n    assertEquals(false, Challenge.isModest(4221344));\\n  }\\n\\t\\n\\t@Test\\n  public void test14() {\\n    assertEquals(true, Challenge.isModest(9111111));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"In this challenge, you have to establish if a positive integer is a Modest number, accordingly to the following algorithm:\\nDivide the number into two left and right partitions.\\nFor each combination of left and right parts, you have to check if a condition is true: the remainder of the number divided by the right part is equal to the left part.\\nIf at least a co\",\"tags\":[\"numbers\",\"algorithms\",\"loops\",\"validation\"],\"timestamp\":{\"$date\":1576138613875},\"title\":\"The Humble Sequence of the Modest Numbers\",\"stats\":{\"completed\":{\"total\":68,\"ratings\":[2,2,2,2,2,2,2,3,2,2,0,0,1,2,4,1,3,1,2,2,2,3,3,5,3,3,2,3,2,1,1,1,1,3,0,3,2,1,1,3,5,3,2,3,0,3,3,3,2,3,1,1,3,2,3,2],\"rators\":[\"sxci7DYKNa6q22Sjq\",\"Prw5Jq38wrSoj5QSF\",\"qRhXvCaA7qgDoeFnr\",\"tQatuCqYXLqvQ2rDh\",\"fxaS5K7ZXo4FbTe36\",\"8J2Dqqz9PaFufQzwY\",\"rehehi2Tr2mwaEoJE\",\"J9zJq7PMGb6mqzcHW\",\"eXW8reZCCZHQzJjQi\",\"AyrEvM2GLX2jqM772\",\"xnhBi4BCdJNAXXRvk\",\"2PR653L4KSN97r534\",\"qb2DTmzQj4vNfq5K7\",\"6hsLDaXbCCEsiBr37\",\"uqNAu5PZnSDRqZKoN\",\"D6J3wu8fB5ksyoya6\",\"oyiRm8AzFKQyrmyza\",\"YF79LnTdprobbYY5v\",\"4ThmYBWvyCK5H9qjr\",\"Es4eX2stRpyoXeC7f\",\"3pdgguqZgNDSAJSGm\",\"wbSLghDxkTjiYJrEH\",\"LZSxphM8vH4A6Deqn\",\"cjxsqXfkAPoadmppi\",\"rwETZ6XCNoHCEyB66\",\"jyoLggHk8xQKZuoQC\",\"5seiNqw6ZXoF2GRRd\",\"etoSR23iELGGgs9rA\",\"TrquEHytntLKHA4m2\",\"pBMXMQem6BpSeooYT\",\"hxeKTpLc8vjMd8TMp\",\"k63LjKkX5p7SYng7C\",\"4RsakkyRXyYGwFxEa\",\"RroghSsW6MgCNEcFz\",\"dcW9oK2uRo8h8mBe2\",\"T2gcdNvTZN5jTgsY6\",\"azAzSkvJd7eyXY9x9\",\"gXTAie79kiw28tx5u\",\"Ym8AjbKGSJooun3nt\",\"yXGiiSAR5nBHnH3yr\",\"mxjrvQP2vPFBjAGxu\",\"mQKWauR6b252TmdX4\",\"xGtxQz9WnAPPKJZxK\",\"jXTnL3JatkKjoifyb\",\"buX4mCQhtXCfBjeno\",\"LNCb5rksJLJ43L4Nw\",\"qx6yvahdH8aw4Jnm7\",\"rhS8qXRjZcpDXkwnE\",\"jwQWPLoqLqwBhkpPG\",\"wFRLGjA56kj7xyhmv\",\"KMR6vNzvSKMA2cXnK\",\"DmfS648aGGhQwkpoZ\",\"a49eNnfRwSMxsDJXf\",\"htXCitorobtqYymjN\",\"jCjCvyhqhpebkJn34\",\"rWhXHhzF4W8bea6LP\",\"uw47663LqPME8btaA\"],\"quality\":[2,4,3,4,4,4]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"quality\":3.5,\"family\":[{\"_id\":\"Q7XYBfmgLHgyLCQfE\",\"language\":\"cpp\"},{\"_id\":\"c4kGNF83S6Mzb75x9\",\"language\":\"java\"},{\"_id\":\"Z5tC9uqQrNioT2dLm\",\"language\":\"javascript\"},{\"_id\":\"5XNKfyxBosjSXCWLn\",\"language\":\"python3\"},{\"_id\":\"zi79L3dND73768p7d\",\"language\":\"ruby\"}]}}"]