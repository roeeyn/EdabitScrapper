a["{\"msg\":\"result\",\"id\":\"580\",\"result\":{\"_id\":\"63GZYcgtT7XiSjsKL\",\"author\":\"Edward Clark\",\"authorId\":\"3pdgguqZgNDSAJSGm\",\"code\":\"public class Challenge {\\n\\tpublic static String word_rank(String str) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":2.164383561643836,\"familyId\":\"G4ic6cGb9gEyv86eZ\",\"instructions\":\"Create a function that takes a string of words and returns the highest scoring word. Each letter of a word scores points according to it's position in the alphabet: a = 1, b = 2, c = 3, etc.\\n\\n### Examples\\n```\\nword_rank(\\\"The quick brown fox.\\\") ➞ \\\"brown\\\"\\n\\nword_rank(\\\"Nancy is very pretty.\\\") ➞ \\\"pretty\\\"\\n\\nword_rank(\\\"Check back tomorrow, man!\\\") ➞ \\\"tomorrow\\\"\\n\\nword_rank(\\\"Wednesday is hump day.\\\") ➞ \\\"Wednesday\\\"\\n```\\n\\n### Notes\\n- If two words score the same, return the word that appears first in the original string.\\n- The returned string should only contain alphabetic characters (a-z).\\n- Preserve case in the returned string (see 4th example above).\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTest {\\n  @Test\\n  public void test1() {\\n    assertEquals(\\\"chocolate\\\", Challenge.word_rank(\\\"If the Easter Bunny and the Tooth Fairy had babies would they take your teeth and leave chocolate for you?\\\"));\\n  }\\n\\t\\n  @Test\\n  public void test2() {\\n    assertEquals(\\\"memory\\\", Challenge.word_rank(\\\"The memory we used to share is no longer coherent.\\\"));\\n  }\\n\\t\\n  @Test\\n  public void test3() {\\n    assertEquals(\\\"dentist\\\", Challenge.word_rank(\\\"He didn't want to go to the dentist, yet he went anyway.\\\"));\\n  }\\n\\t\\n  @Test\\n  public void test4() {\\n    assertEquals(\\\"consumption\\\", Challenge.word_rank(\\\"What was the person thinking when they discovered cow's milk was fine for human consumption... and why did they do it in the first place!?\\\"));\\n  }\\n\\t\\n  @Test\\n  public void test5() {\\n    assertEquals(\\\"plays\\\", Challenge.word_rank(\\\"Mary plays the piano.\\\"));\\n  }\\n\\t\\n  @Test\\n  public void test6() {\\n    assertEquals(\\\"pretty\\\", Challenge.word_rank(\\\"I hear that Nancy is very pretty.\\\"));\\n  }\\n\\t\\n  @Test\\n  public void test7() {\\n    assertEquals(\\\"sounds\\\", Challenge.word_rank(\\\"If you like tuna and tomato sauce- try combining the two. It's really not as bad as it sounds.\\\"));\\n  }\\n\\t\\n  @Test\\n  public void test8() {\\n    assertEquals(\\\"works\\\", Challenge.word_rank(\\\"She works two jobs to make ends meet; at least, that was her reason for not having time to join us.\\\"));\\n  }\\n\\t\\n  @Test\\n  public void test9() {\\n    assertEquals(\\\"Wednesday\\\", Challenge.word_rank(\\\"Wednesday is hump day, but has anyone asked the camel if he's happy about it?\\\"));\\n  }\\n\\n  @Test\\n  public void test10() {\\n    assertEquals(\\\"metaphysics\\\", Challenge.word_rank(\\\"The body may perhaps compensates for the loss of a true metaphysics.\\\"));\\n  }\\n\\n  @Test\\n  public void test11() {\\n    assertEquals(\\\"different\\\", Challenge.word_rank(\\\"The clock within this blog and the clock on my laptop are 1 hour different from each other.\\\"));\\n  }\\n\\n  @Test\\n  public void test12() {\\n    assertEquals(\\\"tomorrow\\\", Challenge.word_rank(\\\"Check back tomorrow; I will see if the book has arrived.\\\"));\\n  }  \\n}\",\"language\":\"java\",\"summary\":\"Create a function that takes a string of words and returns the highest scoring word. Each letter of a word scores points according to it's position in the alphabet: a = 1, b = 2, c = 3, etc.\\n\\nExamples\\nword_rank(\\\"The quick brown fox.\\\") ➞ \\\"brown\\\"\\n\\nword_rank(\\\"Nancy is very pretty.\\\") ➞ \\\"pretty\\\"\\n\\nword_rank(\\\"Check back tomorrow, man!\\\") ➞ \\\"tomorrow\\\"\\n\\nword_rank(\\\"Wedne\",\"tags\":[\"algorithms\",\"strings\",\"arrays\",\"numbers\"],\"timestamp\":{\"$date\":1570373568921},\"title\":\"WordRank Scoring System\",\"stats\":{\"completed\":{\"total\":81,\"ratings\":[2,2,2,2,2,3,3,0,2,1,1,1,2,1,2,3,3,0,4,3,2,3,3,3,1,3,2,1,4,3,2,1,3,3,3,0,3,3,3,2,1,0,2,3,1,3,2,1,1,3,2,3,2,3,2,0,3,3,2,3,1,2,1,3,2,3,3,3,3,2,2,4,2],\"rators\":[\"3pdgguqZgNDSAJSGm\",\"sxci7DYKNa6q22Sjq\",\"3gxJoNp59B4eoyyed\",\"eXW8reZCCZHQzJjQi\",\"Prw5Jq38wrSoj5QSF\",\"BSDtieYGg6H7evesT\",\"gXMfzkYnoTZXXemY8\",\"CLmJduqJHX83dM4Pd\",\"AzERMCwmKzy5zXJ3S\",\"phA6MomRzh9oz3eqn\",\"u4yanfWeeZsN3xWgc\",\"3xMGAo7DPjfFyb3iw\",\"rehehi2Tr2mwaEoJE\",\"C9yBWYcZsjmJYww3K\",\"r9hHZYPQAqJ9DbwLX\",\"J9zJq7PMGb6mqzcHW\",\"qRhXvCaA7qgDoeFnr\",\"fZky27mpbfX7soJKa\",\"YLqdr7bYjwew2KM4N\",\"yNa2KfyrokkiqLnW3\",\"4RHx3H8EwP2oboW8e\",\"Es4eX2stRpyoXeC7f\",\"8J2Dqqz9PaFufQzwY\",\"AyrEvM2GLX2jqM772\",\"wbSLghDxkTjiYJrEH\",\"2PR653L4KSN97r534\",\"cjxsqXfkAPoadmppi\",\"gGnDsJz5hr2t9MKCF\",\"XPDqgbh7XuX7Yfpuq\",\"XC9nQxxqYS46pgHTK\",\"vRXuYYBNuHEQ29fbm\",\"imoNrk36ozReP939p\",\"TrquEHytntLKHA4m2\",\"rwETZ6XCNoHCEyB66\",\"jyoLggHk8xQKZuoQC\",\"5seiNqw6ZXoF2GRRd\",\"pBMXMQem6BpSeooYT\",\"k63LjKkX5p7SYng7C\",\"mfm3gB39arY8Rjb2y\",\"4RsakkyRXyYGwFxEa\",\"nzmGPn6f2ceHnqFPE\",\"q2tzvkrLASvSjkek9\",\"6kz7jjJS8W4tikYQT\",\"etoSR23iELGGgs9rA\",\"rvojHhKH3DaxotefQ\",\"Ym8AjbKGSJooun3nt\",\"gXTAie79kiw28tx5u\",\"yXGiiSAR5nBHnH3yr\",\"mxjrvQP2vPFBjAGxu\",\"rWhXHhzF4W8bea6LP\",\"mQKWauR6b252TmdX4\",\"xGtxQz9WnAPPKJZxK\",\"jXTnL3JatkKjoifyb\",\"8Xx8nWXRydHDBGfQf\",\"LNCb5rksJLJ43L4Nw\",\"HsFc9PgmpP2X9Fwh9\",\"buX4mCQhtXCfBjeno\",\"c7uBxu2rgY77H5d79\",\"q747RicCtRjuE8Zqz\",\"CggGfsERnPKGupFWp\",\"htXCitorobtqYymjN\",\"wFRLGjA56kj7xyhmv\",\"bGQ28M4RKBqRwrwca\",\"a49eNnfRwSMxsDJXf\",\"jCjCvyhqhpebkJn34\",\"9vyjn4WyWtJ6o2wop\",\"2NJZbusRvu3eJ4tHu\",\"KMR6vNzvSKMA2cXnK\",\"DmfS648aGGhQwkpoZ\",\"utfSZCFSPmMXrPEmZ\",\"QgoeBJZcb3hGyAFv4\",\"PAEWysAAFheYiYPBp\"],\"quality\":[4,4,5,4]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.25,\"family\":[{\"_id\":\"uhEf4gR9me5YvM6yk\",\"language\":\"cpp\"},{\"_id\":\"63GZYcgtT7XiSjsKL\",\"language\":\"java\"},{\"_id\":\"sZZ4gr9RNN8JpMaEv\",\"language\":\"javascript\"},{\"_id\":\"fXS3JYMnk3yupk5En\",\"language\":\"python3\"},{\"_id\":\"eRwBkk2BxRJkgMkZr\",\"language\":\"ruby\"}]}}"]