a["{\"msg\":\"result\",\"id\":\"92\",\"result\":{\"_id\":\"ZfZMvwTzcTTG2QRzA\",\"author\":\"Mubashir Hassan \",\"authorId\":\"T6iBEE2jp7f7iEF2P\",\"code\":\"public class Program {\\n\\tpublic static String amazingEdabit(String str) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":0.5564516129032258,\"familyId\":\"MqFpuNp89FwDGKnAL\",\"instructions\":\"Create a function that takes a string and changes the word **amazing** to **not amazing**. Return the string without any change if the word **edabit** is part of the string.\\n\\n### Examples\\n```\\namazingEdabit(\\\"edabit is amazing.\\\") ➞ \\\"edabit is amazing.\\\"\\n\\namazingEdabit(\\\"Mubashir is amazing.\\\") ➞ \\\"Mubashir is not amazing.\\\"\\n\\namazingEdabit(\\\"Infinity is amazing.\\\") ➞ \\\"Infinity is not amazing.\\\"\\n```\\n\\n### Notes\\nEdabit is amazing :)\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ProgramTest {\\n\\t\\t@Test \\n\\tpublic void test1(){\\n\\t  assertEquals(\\\"edabit is amazing.\\\", Program.amazingEdabit(\\\"edabit is amazing.\\\"));\\n\\t}\\n\\t\\t@Test \\n\\tpublic void test2(){assertEquals(\\\"Mubashir is not amazing.\\\", Program.amazingEdabit(\\\"Mubashir is amazing.\\\"));\\n\\t}\\n\\t\\t@Test \\n\\tpublic void test3() {\\n\\t  assertEquals(\\\"Trump is not amazing.\\\", Program.amazingEdabit(\\\"Trump is amazing.\\\"));\\n\\t}\\n\\t\\t@Test \\n\\tpublic void test4() {\\n\\t  assertEquals(\\\"Infinity is not amazing.\\\", Program.amazingEdabit(\\\"Infinity is amazing.\\\"));\\n\\t}\\n\\t\\t@Test \\n\\tpublic void test5() {\\n\\t  assertEquals(\\\"Mubashir and edabit are amazing.\\\", Program.amazingEdabit(\\\"Mubashir and edabit are amazing.\\\"));\\n\\t}\\n\\t\\t@Test \\n\\tpublic void test6(){assertEquals(\\\"Matt is not amazing.\\\", Program.amazingEdabit(\\\"Matt is amazing.\\\"));\\n\\t}\\n\\t\\t@Test \\n\\tpublic void test7(){assertEquals(\\\"Helen is not amazing.\\\", Program.amazingEdabit(\\\"Helen is amazing.\\\"));\\n\\t}\\n\\t\\t@Test \\n\\tpublic void test8(){assertEquals(\\\"Python and edabit are amazing.\\\", Program.amazingEdabit(\\\"Python and edabit are amazing.\\\"));\\n\\t}\\n\\t\\t@Test \\n\\tpublic void test9(){assertEquals(\\\"C++ is not amazing.\\\", Program.amazingEdabit(\\\"C++ is amazing.\\\"));\\n\\t}\\n\\t\\t@Test \\n\\tpublic void test10(){assertEquals(\\\"javascript is not amazing.\\\", Program.amazingEdabit(\\\"javascript is amazing.\\\"));}\\n  \\n\\t\\t@Test \\n\\tpublic void test11(){assertEquals(\\\"java is not amazing.\\\", Program.amazingEdabit(\\\"java is amazing.\\\"));\\n\\t}\\n\\t\\t@Test \\n\\tpublic void test12(){assertEquals(\\\"ruby is not amazing.\\\", Program.amazingEdabit(\\\"ruby is amazing.\\\"));\\n\\t}\\n\\t\\t@Test \\n\\tpublic void test13(){assertEquals(\\\"SQL is not amazing.\\\", Program.amazingEdabit(\\\"SQL is amazing.\\\"));\\n\\t }\\n\\t\\t@Test \\n\\tpublic void test14(){assertEquals(\\\"CSS is not amazing.\\\", Program.amazingEdabit(\\\"CSS is amazing.\\\"));\\n\\t}\\n\\t\\t@Test \\n\\tpublic void test15(){assertEquals(\\\"Pakistan is amazing. edabit\\\", Program.amazingEdabit(\\\"Pakistan is amazing. edabit\\\"));\\n\\t}\\n\\t\\t@Test \\n\\tpublic void test16(){assertEquals(\\\"You and edabit are amazing.\\\", Program.amazingEdabit(\\\"You and edabit are amazing.\\\"));\\n\\t}\\n\\t\\t@Test \\n\\tpublic void test17(){assertEquals(\\\"Matt and edabit are amazing.\\\", Program.amazingEdabit(\\\"Matt and edabit are amazing.\\\"));\\n\\t}\\n\\t\\t@Test \\n\\tpublic void test18(){assertEquals(\\\"Helen and edabit are amazing.\\\", Program.amazingEdabit(\\\"Helen and edabit are amazing.\\\"));\\n\\t}\\n\\t\\t@Test \\n\\tpublic void test19(){assertEquals(\\\"Everyone is not amazing.\\\", Program.amazingEdabit(\\\"Everyone is amazing.\\\"));\\n\\t}\\n\\t\\t@Test \\n\\tpublic void test20(){assertEquals(\\\"Swift and edabit are amazing.\\\", Program.amazingEdabit(\\\"Swift and edabit are amazing.\\\"));\\n\\t}\\n  }\",\"language\":\"java\",\"quality\":4.8,\"summary\":\"Create a function that takes a string and changes the word amazing to not amazing. Return the string without any change if the word edabit is part of the string.\\n\\nExamples\\namazingEdabit(\\\"edabit is amazing.\\\") ➞ \\\"edabit is amazing.\\\"\\n\\namazingEdabit(\\\"Mubashir is amazing.\\\") ➞ \\\"Mubashir is not amazing.\\\"\\n\\namazingEdabit(\\\"Infinity is amazing.\\\") ➞ \\\"Infinity is not amazi\",\"tags\":[\"strings\",\"validation\",\"regex\"],\"timestamp\":{\"$date\":1606624652517},\"title\":\"Amazing Edabit!\",\"stats\":{\"completed\":{\"total\":168,\"ratings\":[1,1,1,1,1,2,1,1,0,1,0,1,0,1,0,0,0,0,1,0,1,0,1,2,1,0,0,1,0,0,0,0,0,1,1,0,1,1,0,0,1,0,0,1,0,1,2,0,0,0,0,0,1,1,0,0,1,0,1,1,1,1,0,0,1,0,0,0,0,1,1,0,1,1,1,0,0,0,1,1,2,0,1,0,5,1,0,2,0,0,0,0,1,0,0,1,0,1,0,0,1,2,0,0,1,0,1,0,0,1,0,0,1,1,0,0,1,0,1,1,1,0,0,0],\"quality\":[5,5,3,5,5,5,5,5,4,4,5,5,5,5,3,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5],\"rators\":[\"jXTnL3JatkKjoifyb\",\"Es4eX2stRpyoXeC7f\",\"W56bWmpQeLJ9JEDsa\",\"AeJSxRqw2dJZuGvdk\",\"fD2vkjhwWmxbs3aAn\",\"jyoLggHk8xQKZuoQC\",\"FWZDMMbSHrd7mheWR\",\"M3fTYWJX2hb3vuEGJ\",\"m8RTLuXqmythXHYZt\",\"bWWFscsAr66ZWHo28\",\"Rn5YNvYdY468a7vRp\",\"ZjEdErENicjeqKZ8g\",\"uFfEio8nzDvL8emhp\",\"4SBj9cygDMHj6PPRP\",\"Nb6LYPoQP6KJZt8mz\",\"FrorBN8wRAoptuxtR\",\"rojdHfAAuAYxoaEXp\",\"neNNSEbgzx79GYshu\",\"2wS9Wm3Nj5ZFcMnfA\",\"47PyFbZyxWuP9Bgga\",\"8DfhSneJpsw5uqLeM\",\"J7epB3qSQJ2E8vWkY\",\"hhxjQREtmHSheH9Pj\",\"44arJN5SYx3HyfetA\",\"beJamknPRLyfB3nL3\",\"8Xx8nWXRydHDBGfQf\",\"TrXjXkRvrLAzeqAgu\",\"5jDgvkGd4JwatrYXg\",\"7ypuw2RbuSADSg4kN\",\"rWhXHhzF4W8bea6LP\",\"EbRM39k7fJpTnMezH\",\"hseQSt2EJ5uvb2pQv\",\"dBexp26HAHeucxKP7\",\"dAPrAmeeaMKNdRsSE\",\"NioGGZL9KCn5Ln96t\",\"a49eNnfRwSMxsDJXf\",\"XZCWhj8dfcs5wnkMx\",\"Yj7ftjzyP67R5NFrH\",\"N3tyYcBfjKQmSmDvf\",\"rGQobbzGMbumfHfCh\",\"pi76g3eRpnKrhee2a\",\"5ij6scpyYDWiqCZPS\",\"CggGfsERnPKGupFWp\",\"sYKPxZX5xJZ2GTp6Q\",\"btabi3PdyisuY5tn9\",\"SbDRsLR6yfZXETyKN\",\"w2rPvPbskuhndnDRG\",\"cueHAmTrcWuowXf58\",\"rkRgHfmzcby3CNBbu\",\"LCuvvWMwiGuqTwNRi\",\"oMZovHkR6QqNvQwyc\",\"A3KrxZk4FiSymY6f2\",\"gBGjCfJvPHswDM5JQ\",\"9gx3GGfLHWJXKRHDo\",\"2cdvd8yuPLSwvGj9w\",\"8WeJLyNE4h6nJ2dNh\",\"Wi4H6ayKsNDWWQCG5\",\"3SgSNoAB3sxaYeT3w\",\"QRv96jmNaYsWkxQEG\",\"Jgxjf5Dm7qLSAhGne\",\"fCTfZSgeDbRbTvDY4\",\"NXtM3si2K3i4DySMn\",\"HCfkcKnPs9mrJojdG\",\"82weQfHHmno4Mq4X7\",\"DovtrH78NMjjpDNGg\",\"u6KspJ68EjcR5RF6x\",\"kiq3z4o9ABhQd7aXJ\",\"RSombfrtxS5PSXnyJ\",\"Q7fQT4XeoY23TpkW7\",\"b6PEkvr66YeCamroN\",\"umE8dRTGWzrZFp755\",\"6MgG8N9rkmAZKYrJ3\",\"GkYtSbQuheBF4Enys\",\"zkHMTSGrJ8BEKReYE\",\"vRXuYYBNuHEQ29fbm\",\"XNgW94PSq5kkXhojm\",\"dD3Aja8PZSMXMFSDY\",\"KPz93xbvJ9x7okGs6\",\"srJ34BaybkQh3qRkM\",\"c96gH88NsjR3MycAj\",\"buX4mCQhtXCfBjeno\",\"MYaqDq32HkAjdYEbo\",\"XTjxohEJAzNyG5SHs\",\"8qNSPHZBpmjSTt3tH\",\"x9CWxL7Q7yCHdrAmq\",\"nXw9eTHFraWQtwJtY\",\"6rvJwN4mcX7iYGjY7\",\"mLddeuzkCBDgcRAKD\",\"FEGpESiobxcqjMqF3\",\"t55QWHi8o4teZxqqE\",\"umN7yuemgaF8MLo6x\",\"fGSQQds3A8gP6rc5h\",\"xEX3TDY6C2h82dJTn\",\"AQSqD9oNv2uPfxZCR\",\"jtzNdgDCzsekkdpxA\",\"4ySzqKC5s3ZRpG9di\",\"p8hkfoXChHNEFDNbM\",\"khdCaD6AGBiR6txLQ\",\"KdYQN3KAT2DyTzT2a\",\"Reyq7sSccAZJvJrmB\",\"dQd664XYR6QKHFvHW\",\"2ptN2mhjFwFcHyPZd\",\"Kn5jGPkzjMTaFTCxH\",\"xxT6dr6je7bsPTqqc\",\"TCvpT4EPb8qNssNB7\",\"sxci7DYKNa6q22Sjq\",\"Yohr2MmAyaWGMbB35\",\"fdyejapW3NWN7utPX\",\"rhS8qXRjZcpDXkwnE\",\"3qgJpdhyi4tKuqMdm\",\"8BFSTCnoe2QggN64c\",\"krYm4tDix6dKg6oWu\",\"9RJpt5ec2KMLuac4w\",\"H469XosMjfNu8Fop7\",\"D3ASM3aWpcQ8gvnin\",\"uw47663LqPME8btaA\",\"Gn8rShvWCKLX3cxzx\",\"gZj6HTKJdPGJwPe2D\",\"nSLvkGEpiYCtcBLaa\",\"i6MDC9kdTmCvtFPy7\",\"cR3ibTMxLyEdDFCHY\",\"96nwjKacnHHPDLid2\",\"mAYRXjKDkXauHcATL\",\"2v8daNMFLCPvSNaX5\",\"ckQwFFWyLXmDQAaCn\",\"htXCitorobtqYymjN\",\"DEDniTrstQYGounXT\",\"aoB3vhvsrFhwALLm8\",\"afvP29FhRou2bTaav\",\"5b3rz7nFjQ7rwtqkQ\",\"KMR6vNzvSKMA2cXnK\",\"JXYvMawaDwnTLuf5F\",\"6waJRR7JPunYF8DhS\",\"RsujLHaML6L3KinzK\",\"K9sQFTWhKP4nkPQcb\",\"rmzRsT4bsghb5SLpP\",\"5QN8R22z43SrwoHDz\",\"GD9Jqmu93vB4LTT8F\",\"unqzSsxpxj9sZ7rbD\",\"6kB5qypxcm62PHsEJ\",\"F8dA24AosSC8XXb7D\",\"9du58gNDkWQEWivbB\",\"eXQziXGcpwekMyABQ\",\"x2Cz7S8rCKJqCE3Xe\",\"h6q2JS8Mwtk5KoRve\",\"5HGyJtoZ3AffzAZAv\",\"w99WfQNYsNAyJRM4C\",\"NwczjpfNN8jXy5RF6\",\"5kMuNZuxiFcNRDkG4\",\"4To7THbHADdtXbewx\",\"bCruaEbKiLzqK2Bj9\",\"r72oFMcCQh4rBsKHb\",\"nFbmNzMQ38TncmfQX\",\"9moo5f7g8KrZieT2K\"]},\"flags\":1},\"family\":[{\"_id\":\"NNyBcvfCstX3jeYGR\",\"language\":\"cpp\"},{\"_id\":\"vgnjdTQvARhbuihTc\",\"language\":\"csharp\"},{\"_id\":\"ZfZMvwTzcTTG2QRzA\",\"language\":\"java\"},{\"_id\":\"bCMai3bYsRpikCyrh\",\"language\":\"javascript\"},{\"_id\":\"eM3FYsnnyGEFmzyNb\",\"language\":\"php\"},{\"_id\":\"hegqYg42GC9FR927g\",\"language\":\"python3\"},{\"_id\":\"g8XMK4Gw95x57e6E9\",\"language\":\"ruby\"},{\"_id\":\"WRmbxpE5pZ8ussLw2\",\"language\":\"swift\"}]}}"]