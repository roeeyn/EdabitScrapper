a["{\"msg\":\"result\",\"id\":\"401\",\"result\":{\"_id\":\"aG8byPZcEj9yLKxA3\",\"archived\":false,\"author\":\"kochug\",\"authorId\":\"vQEmjTRgmdGNYB7yk\",\"code\":\"public class Program {\\n\\tpublic static String reverse(String s) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.5257142857142858,\"familyId\":\"zTnQWWP9MLPvqAJSh\",\"instructions\":\"Write a method that takes a string of one or more words as an argument and returns the same string, but with all five or more letter words reversed. Strings passed in will consist of only letters and spaces. Spaces will be included only when more than one word is present.\\n\\n### Examples\\n```\\nreverse(\\\"Reverse\\\") ➞ \\\"esreveR\\\"\\n\\nreverse(\\\"This is a typical sentence.\\\") ➞ \\\"This is a lacipyt .ecnetnes\\\"\\n\\nreverse(\\\"The dog is big.\\\") ➞ \\\"The dog is big.\\\"\\n```\\n\\n### Notes\\nYou can expect a valid string to be provided for each test case.\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(\\\"esreveR\\\", Program.reverse(\\\"Reverse\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(\\\"This is a lacipyt .ecnetnes\\\", Program.reverse(\\\"This is a typical sentence.\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(\\\"The dog is big.\\\", Program.reverse(\\\"The dog is big.\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(\\\"esreveR the redro of yreve word retaerg than or lauqe to five .sretcarahc\\\", Program.reverse(\\\"Reverse the order of every word greater than or equal to five characters.\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(\\\"Lets all be euqinu rehtegot litnu we esilaer we are all the .emas\\\", Program.reverse(\\\"Lets all be unique together until we realise we are all the same.\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(\\\"The old elppa slever in its .ytirohtua\\\", Program.reverse(\\\"The old apple revels in its authority.\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(\\\"The retoohs says eybdoog to his .evol\\\", Program.reverse(\\\"The shooter says goodbye to his love.\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n    assertEquals(\\\"esaelP wait edistuo of the .esuoh\\\", Program.reverse(\\\"Please wait outside of the house.\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test9() {\\n    assertEquals(\\\"Two staes were .tnacav\\\", Program.reverse(\\\"Two seats were vacant.\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test10() {\\n    assertEquals(\\\"ruoF-ytxiS semoc gniksa for .daerb\\\", Program.reverse(\\\"Sixty-Four comes asking for bread.\\\"));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"Write a method that takes a string of one or more words as an argument and returns the same string, but with all five or more letter words reversed. Strings passed in will consist of only letters and spaces. Spaces will be included only when more than one word is present.\\n\\nExamples\\nreverse(\\\"Reverse\\\") ➞ \\\"esreveR\\\"\\n\\nreverse(\\\"This is a typical sentence.\\\") ➞ \\\"This\",\"tags\":[\"formatting\",\"sorting\",\"strings\",\"regex\",\"loops\"],\"timestamp\":{\"$date\":1523687409672},\"title\":\"Reverse the Order of Words with Five Letters or More\",\"stats\":{\"completed\":{\"total\":198,\"ratings\":[1,1,1,1,1,1,2,1,0,2,1,1,1,1,1,1,1,1,0,1,1,1,1,3,1,1,1,3,1,1,1,1,3,2,0,0,3,5,3,2,1,3,2,2,0,2,0,2,2,1,2,2,2,0,2,2,2,3,1,1,2,2,0,1,1,1,1,1,2,1,2,2,2,2,1,2,2,2,1,0,2,2,2,2,2,2,0,2,2,3,1,2,2,0,2,2,2,2,2,0,2,1,2,1,1,2,3,2,3,1,2,2,2,1,2,2,2,2,2,1,1,2,0,3,1,1,0,1,2,3,2,3,0,0,2,2,0,2,1,1,1,1,1,1,2,2,2,2,1,0,1,1,2,2,2,3,2,1,2,3,2,0,2,0,2,2,2,1,2,1,2,2,3,1,2],\"rators\":[\"vQEmjTRgmdGNYB7yk\",\"rFY6niSkrNQGbuBmJ\",\"ZuSpr3RhJsLyYzQLJ\",\"5PXxhR3Bctqox3PE6\",\"RkXfoeQFNzfw5rdug\",\"ogAtfiy94gCF9742d\",\"dJcfh6gASjPCWEBoe\",\"uF5SXzwu7zEbcoCLM\",\"vz5LbqWPwpxAejP5k\",\"M3mkzSYXCpCt2HhC3\",\"7LrgrixSzJxiGaF66\",\"6gKgLfS6kC9GQgDJn\",\"GRZzKCbeb4xKHFCrZ\",\"79ZbLzp7xepvkonoh\",\"fskHo2C2gMKZxPZ5i\",\"kxP2G9dmiRzxLuYoB\",\"CaoBNxekPwAD9Lsyc\",\"R3Yvf7z4HzQo2fBFb\",\"bP2GcW9sGX8q2DsER\",\"WXLd6Yr7iWjTpJDRA\",\"rQpthoJte6rreQd4j\",\"CXtgfPRAYL3PZ6JeK\",\"fbNWxXTqZy2mXNbGJ\",\"x5JEs23Tc8ZWw3YAY\",\"sBAQgme9imkPrH2Xm\",\"ddfeZ4pbbcXFXqZmY\",\"tW2XYfMDPBbMknTmo\",\"74zXNB4jwSQ7agXCe\",\"R2LPSuiqtYoS8j7z8\",\"Le2c3r4z48jumBjJn\",\"aiv3BLB6YF3495o8H\",\"RGxN2RRfHof7AiGFc\",\"6wKGtyyJEe4XZMKmi\",\"JPZuMjAxQn3aGqRAN\",\"3beBRHqPRT3Q72arL\",\"wgY8cFN3574E6hbTr\",\"zovXwG27gzSSW7cia\",\"5KjrdJCWWwXjkh8Yo\",\"JDRqKjfgvegnXRdwG\",\"yQcBCGmYBa7Ze8N9B\",\"YGYf9GKzaF8CWnDHE\",\"YaAtcMQGvDcF7Nc7F\",\"qzFMJGxMErfBhExMm\",\"3riR3H5ei3T86EEzz\",\"uK99RLh3CQ3yur6BQ\",\"u9sWR2smqsEG9TPBy\",\"E3sWGMpG54yKzY4R4\",\"MX8fhMdfBXBjhdezS\",\"u437YTqDGSjh49fsY\",\"yJyjT7Z2PPQmzzWpP\",\"vjh7xAmbYZoaYWeRL\",\"z6gRoaKmajaC6FgYb\",\"s3S5nDxH46TeY2wQu\",\"L8TD5m6QcbJG7FzjG\",\"TbbTQWFfnBweNtc9s\",\"K6PrjGAWmQ9Mhfp6i\",\"E8kxrkhNmubbNJTDT\",\"wLkbq9vZknXjLRdRu\",\"L8KR8FTXXY4o6ynRW\",\"Zr2pbysK4SeF4B9mu\",\"QS5RGoPnapStFD5Gi\",\"5znpaFDoToJtAtF3h\",\"ydos8Ba8nZdYRNJpS\",\"hCoyBFeNMdaC88ZFi\",\"yhk8G8cM3p9JAbfJN\",\"cp3X8hk8yNME7qoD9\",\"Rwu4rBMXZGWreJdpH\",\"vRXuYYBNuHEQ29fbm\",\"LQ9T6dPa3nXcZdbZq\",\"4MWMwGbthkTMu3dkb\",\"a49eNnfRwSMxsDJXf\",\"aMNhTh35QQAs33ycQ\",\"TSiSTp6KqE2DYByLv\",\"LTHCxsdjqzXpaXShT\",\"sxci7DYKNa6q22Sjq\",\"3pdgguqZgNDSAJSGm\",\"FocLpCB2WEiK2gGni\",\"9c8n7ti5vCjTRgiGN\",\"2oiE6qHMbW3cv7N74\",\"xF2KaebJZekTjXDGF\",\"t2kdBPj9qQAXY2Ehd\",\"XTuxCoKrN9DZ7zaQx\",\"3gxJoNp59B4eoyyed\",\"FQCssquPFc6mn67PD\",\"YLqdr7bYjwew2KM4N\",\"cG4PEDMMx8jXhWP8T\",\"Yohr2MmAyaWGMbB35\",\"6nrGZRgAkXMKmTfyA\",\"gofo35rKkbyPH9jFq\",\"yazNfwgLx7jSAZ8Tv\",\"phA6MomRzh9oz3eqn\",\"PYgmZTBbyAdt95Daa\",\"CYt2jTCEuK9dYWruk\",\"r9hHZYPQAqJ9DbwLX\",\"3KjxQu9RZ8ZSywvLz\",\"8J2Dqqz9PaFufQzwY\",\"u4yanfWeeZsN3xWgc\",\"YLwJkF2wuL3n9o6a2\",\"2cdvd8yuPLSwvGj9w\",\"8JyqsSbN2FJXPr3cw\",\"J9zJq7PMGb6mqzcHW\",\"tQatuCqYXLqvQ2rDh\",\"ggRcNtx4xeRC2jmbZ\",\"C9yBWYcZsjmJYww3K\",\"AyrEvM2GLX2jqM772\",\"9gJsF5apWJGWZJprn\",\"4RHx3H8EwP2oboW8e\",\"Es4eX2stRpyoXeC7f\",\"NsQ8qYQQ47gSPtQkK\",\"S8NaYMWB3aZXgRdvH\",\"JFodQijHHdRkkrZvT\",\"gGnDsJz5hr2t9MKCF\",\"82weQfHHmno4Mq4X7\",\"hB5mgzMwQSnhBzi7P\",\"Kso7rzAKB4TTCPKgM\",\"5seiNqw6ZXoF2GRRd\",\"jyoLggHk8xQKZuoQC\",\"TrquEHytntLKHA4m2\",\"fZjkX29nhRTWWb75k\",\"8zZ6xmzpiFair25qr\",\"WZujpe8yQAyZmpWHg\",\"etoSR23iELGGgs9rA\",\"oMLSgpSFQnY4ui8cB\",\"htXCitorobtqYymjN\",\"Yom3RzkMYpweE8cbS\",\"WkBmufs74SDQMo9Gr\",\"Witn99Xo8Anbjpakg\",\"dcW9oK2uRo8h8mBe2\",\"wYYMNPe8nSiJFbvJw\",\"B4pxRqzo43M7S8FbP\",\"DzvdGwHEjqsX7wyKr\",\"rvojHhKH3DaxotefQ\",\"g4NCSxxHqHCGMpWwT\",\"ovqx6WjgmuvhNaiQR\",\"q2tzvkrLASvSjkek9\",\"jRqY4i8gPemsZMBGf\",\"6kz7jjJS8W4tikYQT\",\"rWhXHhzF4W8bea6LP\",\"Fd9765rksgPK4E2Zy\",\"YcjwCvYut6834Jzd8\",\"k2tXkx7AyX77tQDRo\",\"azAzSkvJd7eyXY9x9\",\"yXGiiSAR5nBHnH3yr\",\"gXTAie79kiw28tx5u\",\"AeJSxRqw2dJZuGvdk\",\"mG8HqKiAQFTdRZthG\",\"oMfq73A434YWhSuWQ\",\"BbcH2NLjE4tKAZ3wR\",\"xv5obFhsxY93mqR5S\",\"8Xx8nWXRydHDBGfQf\",\"jXTnL3JatkKjoifyb\",\"P5BhjZxyeHQYTNyB9\",\"udHFfcqNNej6udnpP\",\"PtGprKjgzCDqyrp6d\",\"mQKWauR6b252TmdX4\",\"hDeaTsprkH6CmvSAR\",\"hD6sfDtntpqT8NR2o\",\"RGN3QTb5LXj4ZPPkj\",\"bastxCiPF9Wwtxwpb\",\"9vyjn4WyWtJ6o2wop\",\"uFfEio8nzDvL8emhp\",\"bur3yQ8s34zqKGEro\",\"buX4mCQhtXCfBjeno\",\"zZfMwLuoERGmybgib\",\"DkSMZ3jZLkwviKb9g\",\"4ySzqKC5s3ZRpG9di\",\"eraq2x97jXgvkuWCt\",\"wFRLGjA56kj7xyhmv\",\"rhS8qXRjZcpDXkwnE\",\"srJ34BaybkQh3qRkM\",\"xEX3TDY6C2h82dJTn\",\"p6tGJ9dN7HZQipR2B\",\"jCjCvyhqhpebkJn34\",\"KMR6vNzvSKMA2cXnK\",\"PJu3WcTpfRrvHfQiS\",\"c7uBxu2rgY77H5d79\",\"hhxjQREtmHSheH9Pj\",\"eXME6AmouMmTezHmN\",\"osdjybMdDnQDtYrYQ\",\"unqzSsxpxj9sZ7rbD\",\"uw47663LqPME8btaA\",\"J9pvE5zxYRzvEhaYh\",\"PAEWysAAFheYiYPBp\",\"XH6378Zm3WBm679yx\"],\"quality\":[4,5,5,5,5,5,5,5,5,5,5,3,5]},\"complaints\":{\"total\":0,\"reasons\":[],\"skippers\":[\"vQEmjTRgmdGNYB7yk\"]},\"instructions\":{\"score\":-2.350000000000002,\"voters\":[\"BkPgkDQGHm66X4Qai\",\"LfR9Bopm57BMNNnkp\",\"aW8Qb8d3hAsWp2rWn\",\"RQYjen5v9ABxpwsn8\",\"kTdthSEZvrBsz9QxW\",\"2QyYGBCJXABrDoHS4\",\"yPFjYWAKibvfgSHDD\",\"zHspp9joDdaCvc4pk\",\"WLAKBSnNZrpkkpbL2\",\"sSHDbTZQrmatWbiNy\",\"d2PuPtTWQac8SexuC\",\"aqyiYoemWzRKgF9BP\",\"vv9J9NpWozSETF9pu\",\"Kc2foqht8pXCDuQPh\",\"seEcADyWkszKWBZ7j\",\"LsZ6LRTu8uKnHabd5\"]},\"tests\":{\"score\":0,\"voters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.769230769230769,\"family\":[{\"_id\":\"fzgiGqP8Mz49Yy4QM\",\"language\":\"cpp\"},{\"_id\":\"mxDncdiseARvSJA5E\",\"language\":\"csharp\"},{\"_id\":\"aG8byPZcEj9yLKxA3\",\"language\":\"java\"},{\"_id\":\"wPNzJEJebN2mewcqY\",\"language\":\"javascript\"},{\"_id\":\"uS8tMvEyvTXD88wps\",\"language\":\"python3\"},{\"_id\":\"Zxc5HaQ6hKSsuPqsK\",\"language\":\"ruby\"},{\"_id\":\"jgn7zL6gS57Kk9RFS\",\"language\":\"swift\"}]}}"]