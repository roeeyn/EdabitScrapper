a["{\"msg\":\"result\",\"id\":\"619\",\"result\":{\"_id\":\"CR7uvWLiKNaZeoj4R\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class CommonMultiple {\\n  public static int lcmOfThree(int[] arr) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":2.25,\"familyId\":\"3v4p2nByS8HCBNyYr\",\"instructions\":\"Create a function that takes an array of three numbers and returns the **Least Common Multiple** (LCM).\\n\\nThe LCM is the smallest positive number that is a multiple of two or more numbers. In our case, we are dealing with three numbers.\\n\\n- Multiples of 3 are: 3, 6, 9, 12, and so on.\\n- Multiples of 4 are: 4, 8,12, and so on.\\n- Multiples of 12 are: 12, 24, 36, and so on.\\n\\nThus, the least common multiple of 3, 4, and 12 is 12.\\n\\n### Examples\\n```\\nlcmThree([9, 18, 27]) ➞ 54\\n\\nlcmThree([23, 46, 2]) ➞ 46\\n\\nlcmThree([5, 7, 13]) ➞ 455\\n\\nlcmThree([104, 105, 107]) ➞ 1168440\\n\\nlcmThree([19, 47, 43]) ➞ 38399\\n```\\n\\n### Notes\\nN/A\",\"isFlagged\":false,\"isFree\":false,\"isHidden\":false,\"lab\":\"import static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class CommonMultipleTest {\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertEquals(60, CommonMultiple.lcmOfThree(new int[] {4, 5, 6}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertEquals(690, CommonMultiple.lcmOfThree(new int[] {6, 5, 46}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertEquals(54, CommonMultiple.lcmOfThree(new int[] {9, 18, 27}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertEquals(46, CommonMultiple.lcmOfThree(new int[] {2, 46, 23}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertEquals(455, CommonMultiple.lcmOfThree(new int[] {5, 7, 13}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertEquals(1168440, CommonMultiple.lcmOfThree(new int[] {104, 105, 107}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertEquals(38399, CommonMultiple.lcmOfThree(new int[] {19, 47, 43}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertEquals(12, CommonMultiple.lcmOfThree(new int[] {3, 4, 12}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test09() { \\n\\t\\tassertEquals(1392, CommonMultiple.lcmOfThree(new int[] {6, 16, 348}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test10() { \\n\\t\\tassertEquals(3007291, CommonMultiple.lcmOfThree(new int[] {97, 103, 301}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test11() { \\n\\t\\tassertEquals(29109409, CommonMultiple.lcmOfThree(new int[] {97, 997, 301}));\\n\\t}\\n}\\n//credit goes to the original author/publisher @Raka Raka\",\"language\":\"java\",\"quality\":0,\"summary\":\"Create a function that takes an array of three numbers and returns the Least Common Multiple (LCM).\\n\\nThe LCM is the smallest positive number that is a multiple of two or more numbers. In our case, we are dealing with three numbers.\\n\\nMultiples of 3 are: 3, 6, 9, 12, and so on.\\nMultiples of 4 are: 4, 8,12, and so on.\\nMultiples of 12 are: 12, 24, 36, and so on.\",\"tags\":[\"arrays\",\"algorithms\",\"numbers\",\"math\"],\"timestamp\":{\"$date\":1612930137666},\"title\":\"Find the LCM of Three Numbers\",\"stats\":{\"completed\":{\"total\":17,\"ratings\":[2,2,2,2,2,2,3,3,3,2,3,2,2,0,1,3,3,3,3,2],\"quality\":[],\"rators\":[\"a777e8chPvJkY3tKa\",\"p8qqFdJ3FSk5x9z3G\",\"Es4eX2stRpyoXeC7f\",\"buX4mCQhtXCfBjeno\",\"rhS8qXRjZcpDXkwnE\",\"qaPjAANdnxFnWfj5d\",\"gXTAie79kiw28tx5u\",\"wFRLGjA56kj7xyhmv\",\"T2vhHPhRR96hRizq8\",\"vRXuYYBNuHEQ29fbm\",\"rWhXHhzF4W8bea6LP\",\"2NJZbusRvu3eJ4tHu\",\"sxci7DYKNa6q22Sjq\",\"KMR6vNzvSKMA2cXnK\",\"uw47663LqPME8btaA\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"family\":[{\"_id\":\"HK2DWRHZKTznLWXW8\",\"language\":\"cpp\"},{\"_id\":\"CR7uvWLiKNaZeoj4R\",\"language\":\"java\"},{\"_id\":\"yHDcevx6KfjqiXcMg\",\"language\":\"javascript\"},{\"_id\":\"7kZhB4FpJfYHnQYBq\",\"language\":\"python3\"},{\"_id\":\"ukSvFa6JkpscRF5sp\",\"language\":\"ruby\"}]}}"]