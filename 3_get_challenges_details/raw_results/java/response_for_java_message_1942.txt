a["{\"msg\":\"result\",\"id\":\"528\",\"result\":{\"_id\":\"4hZ9cHgvkZ94sr2ae\",\"author\":\"Edward Clark\",\"authorId\":\"3pdgguqZgNDSAJSGm\",\"code\":\"public class Challenge {\\n\\tpublic static String missingLetter(String[] arr) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":2.0852713178294575,\"familyId\":\"9PXLWjCYdZtx6RQbp\",\"instructions\":\"Create a function that takes an array of increasing letters and return the missing letter.\\n\\n### Examples\\n```\\nmissingLetter([\\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"e\\\", \\\"f\\\", \\\"g\\\"]) ➞ \\\"d\\\"\\n\\nmissingLetter([\\\"O\\\", \\\"Q\\\", \\\"R\\\", \\\"S\\\"]) ➞ \\\"P\\\"\\n\\nmissingLetter([\\\"t\\\", \\\"u\\\", \\\"v\\\", \\\"w\\\", \\\"x\\\", \\\"z\\\"]) ➞ \\\"y\\\"\\n\\nmissingLetter([\\\"m\\\", \\\"o\\\"]) ➞ \\\"n\\\"\\n```\\n\\n### Notes\\n- Tests will always have exactly one letter missing.\\n- The length of the test array will always be at least two.\\n- Tests will be in one particular case (upper or lower but never both).\",\"lab\":\"import static org.hamcrest.core.Is.is;\\nimport org.junit.Test;\\nimport static org.junit.Assert.assertThat;\\n\\npublic class ChallengeTest {\\n\\t@Test\\n\\tpublic void test1() {\\n\\t\\tassertThat(Challenge.missingLetter(new String[]{\\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"e\\\", \\\"f\\\", \\\"g\\\"}), is(\\\"d\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test2() {\\n\\t\\tassertThat(Challenge.missingLetter(new String[]{\\\"O\\\", \\\"Q\\\", \\\"R\\\", \\\"S\\\"}), is(\\\"P\\\"));            \\n\\t}\\n\\n\\t@Test\\n\\tpublic void test3() {\\n\\t\\tassertThat(Challenge.missingLetter(new String[]{\\\"t\\\", \\\"u\\\", \\\"v\\\", \\\"w\\\", \\\"x\\\", \\\"z\\\"}), is(\\\"y\\\"));            \\n\\t} \\n\\n\\t@Test\\n\\tpublic void test4() {\\n\\t\\tassertThat(Challenge.missingLetter(new String[]{\\\"m\\\", \\\"o\\\"}), is(\\\"n\\\"));            \\n\\t}      \\n\\n\\t@Test\\n\\tpublic void test5() {\\n\\t\\tassertThat(Challenge.missingLetter(new String[]{\\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"d\\\", \\\"e\\\", \\\"f\\\", \\\"g\\\", \\\"h\\\", \\\"j\\\", \\\"k\\\", \\\"l\\\", \\\"m\\\", \\\"n\\\", \\\"o\\\", \\\"p\\\", \\\"q\\\", \\\"r\\\", \\\"s\\\", \\\"t\\\", \\\"u\\\", \\\"v\\\", \\\"w\\\", \\\"x\\\", \\\"y\\\", \\\"z\\\"}), is(\\\"i\\\"));            \\n\\t}\\n\\n\\t@Test\\n\\tpublic void test6() {\\n\\t\\tassertThat(Challenge.missingLetter(new String[]{\\\"q\\\", \\\"s\\\", \\\"t\\\"}), is(\\\"r\\\"));            \\n\\t}\\n\\n\\t@Test\\n\\tpublic void test7() {\\n\\t\\tassertThat(Challenge.missingLetter(new String[]{\\\"c\\\", \\\"d\\\", \\\"e\\\", \\\"f\\\", \\\"g\\\", \\\"h\\\", \\\"i\\\", \\\"k\\\", \\\"l\\\", \\\"m\\\", \\\"n\\\"}), is(\\\"j\\\"));            \\n\\t}\\n\\n\\t@Test\\n\\tpublic void test8() {\\n\\t\\tassertThat(Challenge.missingLetter(new String[]{\\\"e\\\", \\\"f\\\", \\\"g\\\", \\\"h\\\", \\\"i\\\", \\\"j\\\", \\\"k\\\", \\\"m\\\", \\\"n\\\", \\\"o\\\", \\\"p\\\"}), is(\\\"l\\\"));            \\n\\t}\\n\\n\\t@Test\\n\\tpublic void test9() {\\n\\t\\tassertThat(Challenge.missingLetter(new String[]{\\\"t\\\", \\\"u\\\", \\\"w\\\", \\\"x\\\"}), is(\\\"v\\\"));            \\n\\t}\\n\\n\\t@Test\\n\\tpublic void test10() {\\n\\t\\tassertThat(Challenge.missingLetter(new String[]{\\\"B\\\", \\\"D\\\"}), is(\\\"C\\\"));            \\n\\t}\\n}\",\"language\":\"java\",\"summary\":\"Create a function that takes an array of increasing letters and return the missing letter.\\n\\nExamples\\nmissingLetter([\\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"e\\\", \\\"f\\\", \\\"g\\\"]) ➞ \\\"d\\\"\\n\\nmissingLetter([\\\"O\\\", \\\"Q\\\", \\\"R\\\", \\\"S\\\"]) ➞ \\\"P\\\"\\n\\nmissingLetter([\\\"t\\\", \\\"u\\\", \\\"v\\\", \\\"w\\\", \\\"x\\\", \\\"z\\\"]) ➞ \\\"y\\\"\\n\\nmissingLetter([\\\"m\\\", \\\"o\\\"]) ➞ \\\"n\\\"\\n\\nNotes\\nTests will always have exactly one letter missing.\\nThe length of the test\",\"tags\":[\"math\",\"arrays\",\"algorithms\"],\"timestamp\":{\"$date\":1570194758304},\"title\":\"Find the Missing Letter\",\"stats\":{\"completed\":{\"total\":362,\"ratings\":[2,2,2,2,2,3,2,3,0,2,3,3,2,0,3,2,0,3,0,2,3,2,3,2,1,0,2,2,2,2,0,3,2,3,2,2,0,2,3,3,2,3,3,2,2,1,2,4,1,4,0,3,3,2,1,0,2,4,2,1,3,2,3,2,2,3,1,2,0,3,0,2,0,2,2,1,2,1,1,1,3,2,1,1,0,3,2,1,3,2,2,3,3,2,3,2,2,2,0,1,3,3,2,3,2,3,1,4,2,2,2,2,2,1,0,2,3,3,1,1,2,3,0,3,1,2,3,2,1,2,1,2,2,2,3,2,2,3,0,1,3,1,2,3,1,3,1,2,3,3,3,2,0,3,2,1,2,2,2,3,2,2,2,1,3,1,3,2,2,2,1,3,3,2,1,2,2,3,3,3,2,2,3,4,0,3,2,4,3,1,3,2,2,2,2,2,3,3,3,3,3,3,1,3,3,4,2,2,4,3,3,3,3,2,1,2,1,1,2,3,3,2,3,3,3,2,5,3,3,2,1,3,3,3,2,0,2,2,3,3,2,1,3,2,2,0,2,0,3,3,1,3,3,2,2,3,1,2],\"rators\":[\"3pdgguqZgNDSAJSGm\",\"sxci7DYKNa6q22Sjq\",\"zbQp6JhznkqyyLJTZ\",\"vRXuYYBNuHEQ29fbm\",\"8rF6PHMSaybTDsvXr\",\"cG4PEDMMx8jXhWP8T\",\"eXW8reZCCZHQzJjQi\",\"6KcnCdQ3zEnARWogF\",\"8J2Dqqz9PaFufQzwY\",\"zRS8NrFkW6Fv5Cyuj\",\"CLmJduqJHX83dM4Pd\",\"yazNfwgLx7jSAZ8Tv\",\"qRhXvCaA7qgDoeFnr\",\"rehehi2Tr2mwaEoJE\",\"2NJuDfSqdrF8kHHni\",\"HsFc9PgmpP2X9Fwh9\",\"oDZaopxpPAdqWXLqz\",\"r9hHZYPQAqJ9DbwLX\",\"YLwJkF2wuL3n9o6a2\",\"kXEfD7xxEyWd7oxxL\",\"XA2QfKNqbWYPcvoCH\",\"J9zJq7PMGb6mqzcHW\",\"CwHv28Anpt4Wi5rDw\",\"cwfpQQAowCJCE3zME\",\"W347YkKWzfvMbkuHr\",\"s7iqHMchmJLu3gRn6\",\"2cdvd8yuPLSwvGj9w\",\"9aHkSrEhWL7Tp928N\",\"Zk4jvK2nkvnhpzoLR\",\"rux435qWn8kcEAvG8\",\"stFzw945NadNHC2ap\",\"dm4ki3fhfE52M3AJL\",\"D6J3wu8fB5ksyoya6\",\"Zxna6SCXWtvWuLuPs\",\"oaoDt3AH3wm3KGLus\",\"dq4BrC2PGLuisiT9J\",\"yK7zzK2aGJwuWKHRL\",\"D9tfoBpEAnP7BSDZb\",\"fZky27mpbfX7soJKa\",\"YLqdr7bYjwew2KM4N\",\"ko7oJ85JMftgcbkrr\",\"DkrRKbukuPjeMndgx\",\"TxD5qx2hqQa6pixAP\",\"wYYMNPe8nSiJFbvJw\",\"ngRNQYczN4QJ2tDN8\",\"yNa2KfyrokkiqLnW3\",\"4RHx3H8EwP2oboW8e\",\"AyrEvM2GLX2jqM772\",\"XfKYEHYxwqCQQwQ6b\",\"xnhBi4BCdJNAXXRvk\",\"FTJRgJAQA6F4f8cNp\",\"2PR653L4KSN97r534\",\"4ThmYBWvyCK5H9qjr\",\"Es4eX2stRpyoXeC7f\",\"cjxsqXfkAPoadmppi\",\"C9yBWYcZsjmJYww3K\",\"jRqY4i8gPemsZMBGf\",\"Bra3aJzavaT5XKYv6\",\"imoNrk36ozReP939p\",\"SB7E6rYCcezLZgfHs\",\"8YCqERR78ERxmyyBp\",\"zbGJGwm2a7un8F5T5\",\"feubnquqgyoq3sa3Q\",\"cf7XxBWEdAGXPDGf9\",\"ZXCJz6Add4aZAavhn\",\"dL9obibvQGocwXYxD\",\"FJzZTZo7CmAyN5ajr\",\"fZjkX29nhRTWWb75k\",\"9xJpSQm6BFmgL3ee9\",\"XC9nQxxqYS46pgHTK\",\"eJxMBZBhiHyJYWkH2\",\"uYv96ZSpA7tBHoAGX\",\"xzmfkwskjWqjsrRzb\",\"BEjoBzgdBkGbGHJkv\",\"9gJsF5apWJGWZJprn\",\"nXEg9buBEisxp8mZ3\",\"8dALcibyFh45NXXha\",\"EJQPgeRdECTFpBxQd\",\"etoSR23iELGGgs9rA\",\"EP6PPx5PntGnttWxb\",\"7CRtTWC425yAMHdAp\",\"iZFvoFSQ7qMcQPNjD\",\"QGpkEinvqWKqKTERq\",\"Ctuq7Wc8QPQmzwPK3\",\"LQQ8nfeqNbTJshWYy\",\"vhYcXcjHGgAhLaXmZ\",\"NTcaQZ6ZGXMXWGR7h\",\"kkyZ4oyYQC898Nttj\",\"Wf7nCHS4Gq5tx659h\",\"gBGjCfJvPHswDM5JQ\",\"TqWbfMWG2gx8z3LWJ\",\"zeE9TvhkPfebAq9n8\",\"k94ALWRy3xnyjyuav\",\"8mBMuvwCbW3iajMnf\",\"5xwMKc8FYM4sJyfab\",\"NaLEipHrg493EpHvC\",\"hhMAwBqndJn8K53DM\",\"Y8fG59oLxqYKDNSsH\",\"ujER6DyJuNvH7EMSR\",\"9RjPxa9gtAe8Rspre\",\"TrquEHytntLKHA4m2\",\"5seiNqw6ZXoF2GRRd\",\"AWZuA7uR388zWgBSo\",\"jyoLggHk8xQKZuoQC\",\"KxLMWekCxzy2Eem7u\",\"4CryJmbEsruAELrDt\",\"KD9nCGrRpZsQ9zFxr\",\"pWR5uhd9dirgnvexP\",\"WZujpe8yQAyZmpWHg\",\"pBMXMQem6BpSeooYT\",\"rwETZ6XCNoHCEyB66\",\"kWobGYgZWJxN6ZddF\",\"Bf5D7xm6E99zcM2er\",\"htXCitorobtqYymjN\",\"DkSMZ3jZLkwviKb9g\",\"mfm3gB39arY8Rjb2y\",\"k63LjKkX5p7SYng7C\",\"XuWAv9pC8zvZxjXAD\",\"dcW9oK2uRo8h8mBe2\",\"JwQviySv63dgkQdhQ\",\"9pCPyhvQmbkWyD2LL\",\"mwcjmxMW9msmCFibs\",\"tmT75sLPcLYrQswr8\",\"wsjr8C33NPyGYAqKu\",\"RtGQTJYN5ToH3pnGT\",\"4RsakkyRXyYGwFxEa\",\"y6kfyYmydcD8tkBk7\",\"9qgzstnjWXe7aMKEq\",\"rA5nhfhFwfqvmJb6M\",\"vZnqZqAz3vxZnQaNE\",\"MqfT64wJfnjB4vRF8\",\"q2tzvkrLASvSjkek9\",\"8TJGGGBCv3dstpXQ2\",\"62Q2HcfLE6SGphZkT\",\"fRyvgNyFsLGNKuECJ\",\"rvojHhKH3DaxotefQ\",\"i3TRCkidxKop3WtE2\",\"5WQZzuHZBGqFeNQi3\",\"Q4HXoXTabo2dKgxwy\",\"8yyfRwCsP5ovSFT5p\",\"hDeaTsprkH6CmvSAR\",\"Sua7Ywt5wsECCRaBR\",\"KgaNktx83boDbbSzM\",\"R8YWhHoXoasSsLJs4\",\"nbH6pjzJS9Z35JD9r\",\"5r8vhoA5DnyqduYNc\",\"xeYtKtzKFm5RvEXMr\",\"Ld44vf2YzdegYZ7Xk\",\"6fWwjSDuMGwbDDAkD\",\"nchwCYoYGxS4MPsiF\",\"QnMJpQ9efTeuR7uiG\",\"hpDwPvZNzMSfxBDcE\",\"rWhXHhzF4W8bea6LP\",\"hPx9H3YM8j2k94DNW\",\"hx3ZWiCKNtqwMWFCt\",\"osXNzc2aCxspRwheS\",\"9pqtNWrsTJdZcRbEZ\",\"k2tXkx7AyX77tQDRo\",\"KQTq9W7Pqg73ETYcK\",\"7amNEuZodjynhaDQq\",\"f6uGKbmMdBYCjrMBh\",\"mGaEDPw5FsDb3vdnq\",\"2nRgJ4nLmtDdBs9yh\",\"CYDSQKagEe3MPykRs\",\"Ym8AjbKGSJooun3nt\",\"4xMxQfXgNzFamMDBX\",\"n33j2QJZqZzbKLmYF\",\"QS45qu2DFXcCqpAnB\",\"bjKYBdDcGMRTfooBs\",\"cGXpNXagsz9LCqMBS\",\"dYjSGgBXNYK2GY9XH\",\"MBEwq8srjd2oA5W58\",\"DzvdGwHEjqsX7wyKr\",\"6QHXQkQAcXMJ7C2kK\",\"b4ZPA6nBNvyxMfFqD\",\"qTXNwXBDtH3j6t7hw\",\"ekPQ5TX8ePypSttjn\",\"nLb2L7vY7vd9k5L4w\",\"JFodQijHHdRkkrZvT\",\"KCEsMas5BbmiD2Q9K\",\"XqLRkScChkakbwd5z\",\"xdS2Wao3BYiWTo4H2\",\"yHvCCNugSDhWTmiEJ\",\"KooD342x6eT6YiQn8\",\"k8yJnkTqSWfgKAfZW\",\"h8mcCFfM8xNBbCjdB\",\"eqjXExxJKYth4CT8j\",\"YcjwCvYut6834Jzd8\",\"rRHnfRDRFfHRpRFvB\",\"XEkEcNqgaBDaXWxRY\",\"eBgN48uPauTRcPpRb\",\"x3WsGCnE38anLjJqh\",\"6Q5KWKF2QRm6trbK5\",\"mfCkM4jCiyZZeZrni\",\"yXGiiSAR5nBHnH3yr\",\"jCcuyxTCLTDFrsN4B\",\"XLvKNS9myZ7HBj9KC\",\"xGtxQz9WnAPPKJZxK\",\"iZhTdp2KS3SnZTncb\",\"gXTAie79kiw28tx5u\",\"2xFvy6u3hE4LtCXMD\",\"CoEamPmmpgNQY3uSo\",\"eSewzYmhWeS4HWutm\",\"thA79neuEcM3J8ZHr\",\"3uBTPjN6mDavuBYmt\",\"EKQoY9xP6kHpLSye5\",\"GiqPq82is4HGWdZHA\",\"fM4YcC7zFryGp3nhJ\",\"jhEgpqsboiWai8sLJ\",\"YL9pqyCu8xsds8J49\",\"jGGZ3bryxsN7q9Gna\",\"P5BhjZxyeHQYTNyB9\",\"obp7gd5w8sCAPGjnr\",\"qMds9ppJy2Tn9wxEp\",\"mQKWauR6b252TmdX4\",\"FCkjDL4WAu3d6rAkC\",\"DqZMjeKpfjDrjhEPo\",\"av5QexsdPza9FsRCq\",\"dZ8Cec4BsW3PJKP9J\",\"Yqj3KwhnDCzKwEsom\",\"8Xx8nWXRydHDBGfQf\",\"s2ZMtR9deh6Kia7pb\",\"y3g5d6BwAXTYSJZrQ\",\"jXTnL3JatkKjoifyb\",\"rjW8KKnKFkRa6BPxz\",\"fRhyffuFFdj8dmJwX\",\"QuBz2FQ7o7STQQGYP\",\"j5QzY7Rc4fqdTdxuv\",\"DirJTmgeqGTCobyyh\",\"bmsDTBJAPBpGjfhHj\",\"zGzQoSwgdwDi299KG\",\"zyHHSisus2MpibGkG\",\"SExX3m5YftBWmsk2e\",\"4n4gPJDy5pGLkZfBi\",\"KZDZZTSx8CDJ38QqB\",\"Eaec6ZTLtcpW3Jobx\",\"hD6sfDtntpqT8NR2o\",\"zE46SymvixkeFJmPM\",\"p2woPCQKXuWJCwffJ\",\"cRXX4tFmtXEfjdHk5\",\"btabi3PdyisuY5tn9\",\"w883snt8ALo793vDg\",\"DrkR35NqnP9NDLbq6\",\"dLoBr8jKECvwKzJXi\",\"jD3r3hMzLA9Ai45go\",\"9jasWuRGFtEtSYh76\",\"D7dpRtRQDmteDSAXv\",\"MurZ8WsvnNwJibbNt\",\"qb2DTmzQj4vNfq5K7\",\"YqwTDpXzZxtpStdQY\",\"74H6JGSiskcQdvvX6\",\"gJbvbqosimaP4ZAYb\",\"DNfqzcWoQsucbgeuc\",\"4yTCKNCCN4h2iGxBz\",\"D2uAPkBzH3mBpi3Tz\",\"GumHGHAj2uED8H3jg\",\"AsfQw3Yp7JxYNwS3b\",\"5qfcG54cbBC8ujxav\",\"oMZovHkR6QqNvQwyc\",\"h28wHSzPAjA8dt9DD\",\"W4TtzLajjmS8QPK3c\",\"9vyjn4WyWtJ6o2wop\",\"4m6FbMT2zM28gk88N\",\"TJKGcBJJQbnq7G8mo\",\"LNCb5rksJLJ43L4Nw\",\"qp4L4SgDqecMhDeEF\",\"QD7mPMD8gmTP56nPv\",\"pNtaczpPBxfN5Z9ee\",\"CRMSuRGAy3MgTBwA9\",\"eotsnqC2X8GhZbyv9\",\"pCbFsvyiooabCFEgd\",\"2QpQKbJFAcJhuEzHL\",\"3fFNDjDWHMfcvwidT\",\"wT5gGgvjKc5wz59AQ\",\"Aq7wRXeG9EChyLz2z\",\"GFCJ7dYeyTKWRXiaJ\",\"MnBormeR9svXZsiPx\",\"ojykfC9SjTkRstbbS\",\"tgDrXNKWSXeQmSWue\",\"buX4mCQhtXCfBjeno\",\"NnRaz2R2x7DH3DYE8\",\"qx6yvahdH8aw4Jnm7\",\"xBJzaBeZ4pEgWaF6y\",\"c7uBxu2rgY77H5d79\",\"8dwr4HxGKXYnJB3Pk\",\"Jj9kzmWpPPyWWT5dY\",\"KgrtpAQRXCBDhpiSJ\",\"pjA2TjPMR9o76zc5P\",\"tdinF6MRzC6AdNX8g\",\"zZfMwLuoERGmybgib\",\"wFRLGjA56kj7xyhmv\",\"jyeZPhmfLtysXHswN\",\"fc39bfkfrkMXpYv96\",\"mFwqSKyDPwd3RSduj\",\"rhS8qXRjZcpDXkwnE\",\"SNLHryxfRzMtHdKXW\",\"uw47663LqPME8btaA\",\"4ySzqKC5s3ZRpG9di\",\"CoQTHAsXDxn6oot3H\",\"CggGfsERnPKGupFWp\",\"xC9XKgdhp9AqDYngr\",\"C6fJvPAqKzJcetbAm\",\"wv6C9LxraYgqkAs2Z\",\"jCjCvyhqhpebkJn34\",\"swCqZwsjXhQvZu5pH\",\"a49eNnfRwSMxsDJXf\",\"xW9nC9h6p77YT2iso\",\"2NJZbusRvu3eJ4tHu\",\"KMR6vNzvSKMA2cXnK\",\"hSxo3nqEF5A9b4BB6\",\"DmfS648aGGhQwkpoZ\",\"JdHDJLKy4HoLtgFF4\",\"4pHPN4kfvpnnWabQw\",\"mtaMAmaHzDzYeiL5Z\",\"29SkuALTvZP92qb86\",\"nFxzyiogbsgGXoGgB\",\"5YP4TxGhcKxRWWhzP\",\"7oppJcFsu3yuYakRA\",\"okSnwPiYJxvSX3pad\",\"pjRgYYvFM8PDuEs6s\",\"unqzSsxpxj9sZ7rbD\",\"xN6DEYFtHpdLhimor\",\"PAEWysAAFheYiYPBp\",\"KnJsGtPq4McAfr23H\",\"6rvJwN4mcX7iYGjY7\",\"FxPDKKibxnZjGJLs6\",\"DKMDQytLAFWhYnhpS\"],\"quality\":[5,5,5,5,5,5,5,5,5,4,2,5,4,5,4,5,5,5,5,4,5,5,5,4,5,4,5,5,5,4,5,3,5,5,5,5,5,4,3,5,3,5,3,5,3,5,4,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,4,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.675675675675675,\"family\":[{\"_id\":\"f5WKGMQaYK2bABjpg\",\"language\":\"cpp\"},{\"_id\":\"4hZ9cHgvkZ94sr2ae\",\"language\":\"java\"},{\"_id\":\"g4dFuspeWuXLLu65B\",\"language\":\"javascript\"},{\"_id\":\"7sQka3q2iQw9DaYQd\",\"language\":\"php\"},{\"_id\":\"CqNoAPcQrckobTacs\",\"language\":\"python3\"},{\"_id\":\"sakze7J5pPZG2fy4y\",\"language\":\"ruby\"},{\"_id\":\"PG8i7jkfqTgid4Wgc\",\"language\":\"swift\"}]}}"]