a["{\"msg\":\"result\",\"id\":\"442\",\"result\":{\"_id\":\"JfertgG5phtnvDNpD\",\"archived\":false,\"author\":\"Matt\",\"authorId\":\"BkPgkDQGHm66X4Qai\",\"code\":\"public class DescendingOrder {\\n\\tpublic static int sortDesc(final int num) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.6163522012578617,\"familyId\":\"mMdBZDtZ2owF3hMcZ\",\"instructions\":\"Create a function that takes any non-negative number as an argument and return it with it's digits in descending order. Descending order is when you sort from highest to lowest.\\n\\n### Examples\\n```\\nsortDesc(123) ➞ 321\\n\\nsortDesc(1254859723) ➞ 9875543221\\n\\nsortDesc(73065) ➞ 76530\\n```\\n\\n### Notes\\nYou can expect non-negative numbers for all test cases.\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n\\t@Test\\n\\tpublic void test1() {\\n\\t\\tassertEquals(321, DescendingOrder.sortDesc(123));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test2() {\\n\\t\\tassertEquals(977766200, DescendingOrder.sortDesc(670276097));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test3() {\\n\\t\\tassertEquals(9865210, DescendingOrder.sortDesc(2619805));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test4() {\\n\\t\\tassertEquals(98421, DescendingOrder.sortDesc(81294));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test5() {\\n\\t\\tassertEquals(987654321, DescendingOrder.sortDesc(123495678));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test6() {\\n\\t\\tassertEquals(98421, DescendingOrder.sortDesc(81294));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test7() {\\n\\t\\tassertEquals(0000000, DescendingOrder.sortDesc(0000000));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test8() {\\n\\t\\tassertEquals(321, DescendingOrder.sortDesc(321));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test9() {\\n\\t\\tassertEquals(986420, DescendingOrder.sortDesc(628904));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test10() {\\n\\t\\tassertEquals(987653220, DescendingOrder.sortDesc(289327560));\\n\\t}\\n}\",\"language\":\"java\",\"summary\":\"Create a function that takes any non-negative number as an argument and return it with it's digits in descending order. Descending order is when you sort from highest to lowest.\\n\\nExamples\\nsortDesc(123) ➞ 321\\n\\nsortDesc(1254859723) ➞ 9875543221\\n\\nsortDesc(73065) ➞ 76530\\n\\nNotes\\nYou can expect non-negative numbers for all test cases.\",\"tags\":[\"formatting\",\"sorting\",\"numbers\"],\"timestamp\":{\"$date\":1494724230339},\"title\":\"Sort Numbers in Descending Order\",\"stats\":{\"completed\":{\"total\":183,\"ratings\":[1,1,1,1,1,1,1,3,1,1,1,0,2,2,2,3,1,1,1,2,2,1,2,2,1,1,2,0,3,1,2,2,1,5,2,3,1,1,2,3,2,1,2,0,2,3,2,1,2,2,2,2,1,0,1,2,0,1,2,2,1,2,3,3,3,2,1,2,2,2,0,0,0,2,2,1,2,2,2,2,1,0,3,2,0,2,2,1,2,1,2,1,2,2,2,2,2,2,0,2,2,2,1,3,1,2,2,2,2,1,1,0,1,1,3,1,2,2,1,2,1,0,3,1,1,2,2,2,1,2,2,2,2,2,1,2,1,2,2,2,2,2,2,2,3,2,2,2,2,1,1,2,0,2,2,1,2,1,2],\"rators\":[\"BkPgkDQGHm66X4Qai\",\"hi7Hvtq2mJfkXEGF2\",\"ShBWrg2dxXCrAvKwd\",\"d7rbAt9NtyzCGGXQy\",\"p44eSxaNvwqkHx4jf\",\"stfP2bqdanX6R2QvH\",\"htKWbyp6jyY8CuW3q\",\"YhbXLvFbFRX88Pgxh\",\"2cpi4cuAohhFJavZq\",\"2PyMJyvMYLJG2zjZq\",\"9kH3aCBwKmRTqnvD7\",\"dbzJrP2PqEDckBnbN\",\"Rj7KFCRk5tn5hXL28\",\"zMEyen5f2qNu44YaN\",\"cGKgWB8ZZcidku3qj\",\"9RaH5u5sDq6phy3gQ\",\"X4ww4EcFsrfbmgMdD\",\"X8C68DuW4eRC5YCrQ\",\"CotyEj3eY9CbwBs2t\",\"7kryWNLMzhDvGCsZr\",\"iRgkGNCNtoPKC25EY\",\"M3mkzSYXCpCt2HhC3\",\"h3cMyEyB72ygAQnx4\",\"hKZCo3exwfkhfcty8\",\"J7gnH8tH4jrkmPL9F\",\"7LrgrixSzJxiGaF66\",\"GRZzKCbeb4xKHFCrZ\",\"bmiPXmDZLsJSwS3eR\",\"79ZbLzp7xepvkonoh\",\"WXLd6Yr7iWjTpJDRA\",\"fskHo2C2gMKZxPZ5i\",\"nMgXTuMfHXZSAixRh\",\"zSR2dEYe9MRd5xdrb\",\"fbNWxXTqZy2mXNbGJ\",\"GqKjzNcrGScdx86Dv\",\"x5JEs23Tc8ZWw3YAY\",\"ddfeZ4pbbcXFXqZmY\",\"tW2XYfMDPBbMknTmo\",\"3beBRHqPRT3Q72arL\",\"fFRs96Ks98gpAZfMx\",\"2XPSxbjbkM9NRcxZT\",\"6txZnj8BuNWvnZacj\",\"8AJQH2pDjMkmbQexF\",\"YGYf9GKzaF8CWnDHE\",\"sBAQgme9imkPrH2Xm\",\"s2RehC5GkkXprjwpy\",\"YaAtcMQGvDcF7Nc7F\",\"i2t3QQXwin3YPms7n\",\"Kc2foqht8pXCDuQPh\",\"myrwrpTHtYXiL3kPz\",\"5PXxhR3Bctqox3PE6\",\"3riR3H5ei3T86EEzz\",\"htc72whTJFZgLzyA4\",\"qzFMJGxMErfBhExMm\",\"uK99RLh3CQ3yur6BQ\",\"u9sWR2smqsEG9TPBy\",\"CfZddq38roHL9JGwt\",\"GLWXzMK4cT9iBMaRu\",\"HtzcoozRfZvSobZHm\",\"x6riNDuCHM857RP7f\",\"2gtgcQNxiefp2zP76\",\"u437YTqDGSjh49fsY\",\"yJyjT7Z2PPQmzzWpP\",\"ngHsm8fwsC5zf6WkY\",\"z6gRoaKmajaC6FgYb\",\"E8kxrkhNmubbNJTDT\",\"L8KR8FTXXY4o6ynRW\",\"QS5RGoPnapStFD5Gi\",\"ydos8Ba8nZdYRNJpS\",\"cp3X8hk8yNME7qoD9\",\"hCoyBFeNMdaC88ZFi\",\"5znpaFDoToJtAtF3h\",\"LQ9T6dPa3nXcZdbZq\",\"4MWMwGbthkTMu3dkb\",\"7nqobGBA5GN5zGGrx\",\"a49eNnfRwSMxsDJXf\",\"vRXuYYBNuHEQ29fbm\",\"oMZovHkR6QqNvQwyc\",\"aMNhTh35QQAs33ycQ\",\"SocjAuHjWDPdH4wQ3\",\"3pdgguqZgNDSAJSGm\",\"sxci7DYKNa6q22Sjq\",\"9c8n7ti5vCjTRgiGN\",\"t2kdBPj9qQAXY2Ehd\",\"NGotTDJFqm2ftg2J7\",\"3gxJoNp59B4eoyyed\",\"gofo35rKkbyPH9jFq\",\"Ha5J49rhojBRy3BaM\",\"tQatuCqYXLqvQ2rDh\",\"CLmJduqJHX83dM4Pd\",\"r9hHZYPQAqJ9DbwLX\",\"phA6MomRzh9oz3eqn\",\"3KjxQu9RZ8ZSywvLz\",\"u4yanfWeeZsN3xWgc\",\"J9zJq7PMGb6mqzcHW\",\"AyrEvM2GLX2jqM772\",\"MWLAcPoEWDSLrTi9p\",\"Es4eX2stRpyoXeC7f\",\"9gJsF5apWJGWZJprn\",\"C9yBWYcZsjmJYww3K\",\"82weQfHHmno4Mq4X7\",\"hB5mgzMwQSnhBzi7P\",\"M3sPbyvBvjTu8Nga8\",\"Kso7rzAKB4TTCPKgM\",\"TrquEHytntLKHA4m2\",\"5seiNqw6ZXoF2GRRd\",\"jyoLggHk8xQKZuoQC\",\"fZjkX29nhRTWWb75k\",\"WZujpe8yQAyZmpWHg\",\"etoSR23iELGGgs9rA\",\"8zZ6xmzpiFair25qr\",\"DePiAS7u5Pk9d6SLr\",\"htXCitorobtqYymjN\",\"Yom3RzkMYpweE8cbS\",\"y6kfyYmydcD8tkBk7\",\"DzvdGwHEjqsX7wyKr\",\"EHwtsopzS3BTSuaAn\",\"g4NCSxxHqHCGMpWwT\",\"k2tXkx7AyX77tQDRo\",\"YcjwCvYut6834Jzd8\",\"Fd9765rksgPK4E2Zy\",\"YFHkjbM6obMSj24zi\",\"azAzSkvJd7eyXY9x9\",\"yXGiiSAR5nBHnH3yr\",\"gXTAie79kiw28tx5u\",\"rWhXHhzF4W8bea6LP\",\"8Xx8nWXRydHDBGfQf\",\"jXTnL3JatkKjoifyb\",\"xv5obFhsxY93mqR5S\",\"mQKWauR6b252TmdX4\",\"hD6sfDtntpqT8NR2o\",\"h96FRTLbu79gbRLZv\",\"oWQGSYwiDuQ542WbZ\",\"nhppnmu2Nn2bxmLph\",\"WMnB4KYRg37wEXxMG\",\"LrgQT4bdiLbHrprXu\",\"aBQAJwaHTY4pLzzYt\",\"hibYcdCWPdTvsoudG\",\"vh8Bcpmy4J9cy648m\",\"kaSirKnRwXvGfe6ru\",\"tTLCwQx2SYwPXSgq6\",\"rSpyFwaEPSCZMryBS\",\"JYsASoJtjpG6yiesT\",\"xiDWh3BpG467GzETd\",\"mERW5ujucBAykHPAs\",\"Y6N5mCB4KjcLeFFDK\",\"d6wdwygWKkCLuDdij\",\"MGojDC6LGPeeMb39r\",\"iY7Hu2p3miMKsCbrn\",\"AuhEnvXWL72cDtAQQ\",\"W8PoYTfKfNwzCWbui\",\"P5qFWmHtGZip3KyHr\",\"W9taP3X4xztgWsS3e\",\"bur3yQ8s34zqKGEro\",\"DkSMZ3jZLkwviKb9g\",\"4ySzqKC5s3ZRpG9di\",\"wFRLGjA56kj7xyhmv\",\"FrvPXDoFWFk4euDAo\",\"rhS8qXRjZcpDXkwnE\",\"srJ34BaybkQh3qRkM\",\"xEX3TDY6C2h82dJTn\",\"KMR6vNzvSKMA2cXnK\",\"unqzSsxpxj9sZ7rbD\",\"FxPDKKibxnZjGJLs6\",\"23gxHrrXiriKXnggo\",\"uw47663LqPME8btaA\",\"Lfq2dzmGyoyMigP6f\"],\"quality\":[5,5,5,5,5,5,5,5,5,4,5,5]},\"complaints\":{\"total\":0,\"reasons\":[],\"skippers\":[\"BkPgkDQGHm66X4Qai\"]},\"instructions\":{\"score\":21.599999999999994,\"voters\":[\"LfR9Bopm57BMNNnkp\",\"wFNPrwMtMZAJDRyAs\",\"rWTtR5BFBYQMBSq7G\",\"dYXHck6zbpzPTx8K4\",\"AyPYyvHzFFEKrEKrb\",\"xwGiZ6bC6jBoAdGrv\",\"w39LZ9jqKGcz9cRAv\",\"FPkESBrrZwYqkeRBT\",\"qaR8DnWrTk8Mus5Q2\",\"Z5dbmiK4W44d8gXi7\",\"nxCRcZQknHp8wP2v4\",\"vEHDjxx5FuYiPCaXs\",\"ukMGNti4cKTJBZqsg\",\"q8EdjfGRqRpzZxmBG\"]},\"tests\":{\"score\":0,\"voters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.916666666666667,\"isFree\":false,\"family\":[{\"_id\":\"aR45RpXY7YHdfEQWa\",\"language\":\"cpp\"},{\"_id\":\"N5G33s49LDXdhLdsT\",\"language\":\"csharp\"},{\"_id\":\"JfertgG5phtnvDNpD\",\"language\":\"java\"},{\"_id\":\"yaXQvCzAXJLe37Qie\",\"language\":\"javascript\"},{\"_id\":\"PvDjNE5kpbs3PKuFo\",\"language\":\"php\"},{\"_id\":\"B7rfWiJKrwft9yXXC\",\"language\":\"python3\"},{\"_id\":\"YdfyJydY85CJpfFak\",\"language\":\"ruby\"},{\"_id\":\"Bhccri8XYjjdTa7vB\",\"language\":\"swift\"}]}}"]