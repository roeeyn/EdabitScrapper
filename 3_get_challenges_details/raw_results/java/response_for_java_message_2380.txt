a["{\"msg\":\"result\",\"id\":\"746\",\"result\":{\"_id\":\"FToTLuiB7bmFngkjr\",\"author\":\"Edward Clark\",\"authorId\":\"3pdgguqZgNDSAJSGm\",\"code\":\"public class Challenge {\\n\\tstatic final String[] months = {\\\"\\\",\\\"A\\\",\\\"B\\\",\\\"C\\\",\\\"D\\\",\\\"E\\\",\\\"H\\\",\\\"L\\\",\\\"M\\\",\\\"P\\\",\\\"R\\\",\\\"S\\\",\\\"T\\\"};\\n\\n\\tpublic static String fiscalCode(String name, String surName, String gender, String dob) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":2.891891891891892,\"familyId\":\"Ds84ovYLFsJ4JH2Xf\",\"instructions\":\"Each person in Italy has an unique identifying ID code issued by the national tax office after the birth registration: the Fiscal Code (_Codice Fiscale_). Check the **Resources** tab for more info on this.\\n\\nGiven an object containing the personal data of a person (name, surname, gender and date of birth) return the 11 code characters as a string following these steps:\\n\\n- Generate 3 capital letters from the **surname**, if it has:\\n  - At least 3 consonants then the first three consonants are used. (_Newman -> NWM_).\\n  - Less than 3 consonants then vowels will replace missing characters in the same order they appear (_Fox -> FXO | Hope -> HPO_).\\n  - Less than three letters then \\\"X\\\" will take the third slot after the consonant and the vowel (_Yu -> YUX_).\\n\\n- Generate 3 capital letters from the **name**, if it has:\\n  - Exactly 3 consonants then consonants are used in the order they appear (_Matt -> MTT_).\\n  - More than 3 consonants then first, third and fourth consonant are used (_Samantha -> SNT | Thomas -> TMS_).\\n  - Less than 3 consonants then vowels will replace missing characters in the same order they appear (_Bob -> BBO | Paula -> PLA_).\\n  - Less than three letters then \\\"X\\\" will take the the third slot after the consonant and the vowel (_Al -> LAX_).\\n\\n- Generate 2 numbers, 1 letter and 2 numbers from **date of birth** and **gender**:\\n  - Take the last two digits of the year of birth (_1985 -> 85_).\\n  - Generate a letter corresponding to the month of birth (_January -> A | December -> T_) using the table for conversion included in the code.\\n  - For males take the day of birth adding one zero at the start if is less than 10 (_any 9th day -> 09 | any 20th day -> 20_).\\n  - For females take the day of birth and sum 40 to it (_any 9th day -> 49 | any 20th day -> 60_).\\n\\n### Examples\\n```\\nfiscalCode({\\n  name: \\\"Matt\\\",\\n  surname: \\\"Edabit\\\",\\n  gender: \\\"M\\\",\\n  dob: \\\"1/1/1900\\\"\\n}) ➞ \\\"DBTMTT00A01\\\"\\n\\nfiscalCode({\\n  name: \\\"Helen\\\",\\n  surname: \\\"Yu\\\",\\n  gender: \\\"F\\\",\\n  dob: \\\"1/12/1950\\\"\\n}) ➞ \\\"YUXHLN50T41\\\"\\n\\nfiscalCode({\\n  name: \\\"Mickey\\\",\\n  surname: \\\"Mouse\\\",\\n  gender: \\\"M\\\",\\n  dob: \\\"16/1/1928\\\"\\n}) ➞ \\\"MSOMKY28A16\\\"\\n```\\n\\n### Notes\\n- Code letters must be uppercase.\\n- Date of birth is given in D/M/YYYY format.\\n- The conversion table for months is already in the starting code.\\n- Y is not a vowel.\",\"lab\":\"import static org.junit.Assert.assertEquals;\\nimport org.junit.Test;\\n\\n/**\\n * @author edwardclark\\n**/\\n\\npublic class ChallengeTest {\\n\\t@Test\\n\\tpublic void test1() {\\n\\t\\tassertEquals(\\\"CHEBND61T01\\\", Challenge.fiscalCode(\\\"Brendan\\\", \\\"Eich\\\", \\\"M\\\", \\\"1/12/1961\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test2() {\\n\\t\\tassertEquals(\\\"YUXHLN50T41\\\", Challenge.fiscalCode(\\\"Helen\\\", \\\"Yu\\\", \\\"F\\\", \\\"1/12/1950\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test3() {\\n\\t\\tassertEquals(\\\"CPNLAX99A17\\\", Challenge.fiscalCode(\\\"Al\\\", \\\"Capone\\\", \\\"M\\\", \\\"17/1/1899\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test4() {\\n\\t\\tassertEquals(\\\"MSOMKY28A16\\\", Challenge.fiscalCode(\\\"Mickey\\\", \\\"Mouse\\\", \\\"M\\\", \\\"16/1/1928\\\"));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test5() {\\n\\t\\tassertEquals(\\\"CRUMRA67S47\\\", Challenge.fiscalCode(\\\"Marie\\\", \\\"Curie\\\", \\\"F\\\", \\\"7/11/1867\\\"));\\n\\t}\\n}\",\"language\":\"java\",\"summary\":\"Each person in Italy has an unique identifying ID code issued by the national tax office after the birth registration: the Fiscal Code (Codice Fiscale). Check the Resources tab for more info on this.\\n\\nGiven an object containing the personal data of a person (name, surname, gender and date of birth) return the 11 code characters as a string following these step\",\"tags\":[\"strings\",\"algorithms\",\"formatting\",\"objects\"],\"timestamp\":{\"$date\":1571087400428},\"title\":\"The Fiscal Code\",\"stats\":{\"completed\":{\"total\":42,\"ratings\":[3,3,3,3,3,5,0,4,3,0,4,4,4,1,2,3,4,4,2,2,0,4,3,3,2,3,3,4,4,4,3,3,2,5,3,2,2],\"rators\":[\"3pdgguqZgNDSAJSGm\",\"Zzp8oNRSgmBgLD9Zd\",\"YF79LnTdprobbYY5v\",\"DhZCh65tYzJMrZ6W9\",\"SnY7WidXJoAyyuPuA\",\"W4jpCs2jekeg5qAwc\",\"CLmJduqJHX83dM4Pd\",\"qgWvEan879XKFKiCA\",\"Prw5Jq38wrSoj5QSF\",\"J9zJq7PMGb6mqzcHW\",\"NrSqKXXpaus7PGdiy\",\"Es4eX2stRpyoXeC7f\",\"jHXJPfu5WXh9YN97E\",\"feubnquqgyoq3sa3Q\",\"wYYMNPe8nSiJFbvJw\",\"8J2Dqqz9PaFufQzwY\",\"TrquEHytntLKHA4m2\",\"jyoLggHk8xQKZuoQC\",\"DkSMZ3jZLkwviKb9g\",\"k63LjKkX5p7SYng7C\",\"ecyYaPZLMBMGGrfrJ\",\"ZF6rwQdrRf8JXn7Kb\",\"gXTAie79kiw28tx5u\",\"a777e8chPvJkY3tKa\",\"DqZMjeKpfjDrjhEPo\",\"mQKWauR6b252TmdX4\",\"5qjDvmKyDxg2uZTzJ\",\"iq55QasecYJXKz8rx\",\"6BHzuTwcZqaRtf7CH\",\"mDWNyaaQ9hvPCRzSd\",\"4uCrYsikuWm6ivLKB\",\"Gr7KpxsZKDD8nAoc6\",\"DQPk5eW93bbf4uEEW\",\"LFscDZ9jmDM4fAgky\",\"bnKmc3HbxNT9GuEiD\",\"ZjcnQRWsHkavrosjC\",\"sxci7DYKNa6q22Sjq\"],\"quality\":[4,4,4,5,5]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.4,\"family\":[{\"_id\":\"FToTLuiB7bmFngkjr\",\"language\":\"java\"},{\"_id\":\"Pa2rHJ6KeRBTF28Pg\",\"language\":\"javascript\"},{\"_id\":\"L24crt5ZA3rdjcmxv\",\"language\":\"python3\"},{\"_id\":\"gqpKQMdhNh7YEAxRw\",\"language\":\"ruby\"}]}}"]