a["{\"msg\":\"result\",\"id\":\"287\",\"result\":{\"_id\":\"mkxS3CnW98Ci3kwCh\",\"archived\":false,\"author\":\"kochug\",\"authorId\":\"vQEmjTRgmdGNYB7yk\",\"code\":\"public class Program {\\n\\tpublic static String makeTitle(String s) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.1631799163179917,\"familyId\":\"ysvxGEFYv7k4m4Q3s\",\"instructions\":\"Create a method that takes a string as an argument and converts the first character of each word to uppercase. Return the newly formatted string.\\n\\n### Examples\\n```\\nmakeTitle(\\\"This is a title\\\") ➞ \\\"This Is A Title\\\"\\n\\nmakeTitle(\\\"capitalize every word\\\") ➞ \\\"Capitalize Every Word\\\"\\n\\nmakeTitle(\\\"I Like Pizza\\\") ➞ \\\"I Like Pizza\\\"\\n\\nmakeTitle(\\\"PIZZA PIZZA PIZZA\\\") ➞ \\\"PIZZA PIZZA PIZZA\\\"\\n```\\n\\n### Notes\\n- You can expect a valid string for each test case.\\n- Some words may contain more than one uppercase letter (see example #4).\",\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(\\\"I Am A Title\\\", Program.makeTitle(\\\"I am a title\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test2() {\\n    assertEquals(\\\"I AM A TITLE\\\", Program.makeTitle(\\\"I AM A TITLE\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test3() {\\n    assertEquals(\\\"I AM A TITLE\\\", Program.makeTitle(\\\"i aM a tITLE\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test4() {\\n    assertEquals(\\\"The First Letter Of Every Word Is Capitalized\\\", Program.makeTitle(\\\"the first letter of every word is capitalized\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test5() {\\n    assertEquals(\\\"I Like Pizza\\\", Program.makeTitle(\\\"I Like Pizza\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test6() {\\n    assertEquals(\\\"Don't Count Your ChiCKens BeFore They HatCh\\\", Program.makeTitle(\\\"Don't count your ChiCKens BeFore They HatCh\\\"));\\n  }\\n\\t\\n\\t\\n\\t@Test\\n  public void test7() {\\n    assertEquals(\\\"All Generalizations Are False, Including This One\\\", Program.makeTitle(\\\"All generalizations are false, including this one\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test8() {\\n    assertEquals(\\\"Me And My Wife Lived Happily For Twenty Years And Then We Met.\\\", Program.makeTitle(\\\"Me and my wife lived happily for twenty years and then we met.\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test9() {\\n    assertEquals(\\\"There Are No Stupid Questions, Just Stupid People.\\\", Program.makeTitle(\\\"There are no stupid questions, just stupid people.\\\"));\\n  }\\n\\t\\n\\t@Test\\n  public void test10() {\\n    assertEquals(\\\"1f You C4n R34d 7h15, You R34lly N33d 2 G37 L41d\\\", Program.makeTitle(\\\"1f you c4n r34d 7h15, you r34lly n33d 2 g37 l41d\\\"));\\n  }\\n}\",\"language\":\"java\",\"summary\":\"Create a method that takes a string as an argument and converts the first character of each word to uppercase. Return the newly formatted string.\\n\\nExamples\\nmakeTitle(\\\"This is a title\\\") ➞ \\\"This Is A Title\\\"\\n\\nmakeTitle(\\\"capitalize every word\\\") ➞ \\\"Capitalize Every Word\\\"\\n\\nmakeTitle(\\\"I Like Pizza\\\") ➞ \\\"I Like Pizza\\\"\\n\\nmakeTitle(\\\"PIZZA PIZZA PIZZA\\\") ➞ \\\"PIZZA PIZZA PIZZ\",\"tags\":[\"formatting\",\"strings\",\"loops\",\"regex\"],\"timestamp\":{\"$date\":1523684929292},\"title\":\"Capitalize the First Letter of Each Word\",\"stats\":{\"completed\":{\"total\":275,\"ratings\":[1,1,1,1,1,1,0,1,0,0,2,1,1,1,2,2,2,1,0,2,1,1,1,1,1,2,0,1,1,1,2,1,1,0,1,2,2,0,0,1,1,1,1,2,1,2,1,1,1,1,1,1,3,1,1,0,2,1,0,1,1,0,1,1,1,4,1,3,1,0,2,1,1,1,1,1,1,1,0,1,2,1,1,1,0,1,1,1,1,0,2,1,3,2,0,0,1,1,1,1,1,2,4,2,0,1,1,2,0,2,1,2,3,1,1,1,1,1,2,1,1,1,0,1,1,1,0,0,0,1,1,0,1,2,2,0,0,1,1,1,0,1,0,0,2,1,1,1,0,3,0,2,3,1,1,2,1,0,2,0,0,1,1,0,1,1,1,0,2,2,2,1,2,2,0,0,3,1,2,2,1,5,0,3,3,0,0,5,1,2,2,2,1,1,2,1,1,1,1,1,1,1,1,1,3,1,1,0,1,1,1,0,2,0,1,2,1,2,1,2,1,1,3,2,1,1,2,0,1,1,1,1,2,2,1,1,2,1,1],\"rators\":[\"vQEmjTRgmdGNYB7yk\",\"zMEyen5f2qNu44YaN\",\"z6nQSSKTnJoTJG6GR\",\"hcti8afrkC4abdpqe\",\"ZuSpr3RhJsLyYzQLJ\",\"Los3N4Y6EGJmfCTer\",\"5PXxhR3Bctqox3PE6\",\"Pzr8kyR3iqbSsCoFA\",\"RzFHd8P5vHPyg3wBY\",\"z2crWv2athzYWTBMa\",\"iRgkGNCNtoPKC25EY\",\"ogAtfiy94gCF9742d\",\"CXtgfPRAYL3PZ6JeK\",\"dJcfh6gASjPCWEBoe\",\"uF5SXzwu7zEbcoCLM\",\"5StjZHG4mCJTpLZFj\",\"vz5LbqWPwpxAejP5k\",\"M3mkzSYXCpCt2HhC3\",\"7LrgrixSzJxiGaF66\",\"6gKgLfS6kC9GQgDJn\",\"GRZzKCbeb4xKHFCrZ\",\"AD6gXTWYwsPZjATKx\",\"79ZbLzp7xepvkonoh\",\"fskHo2C2gMKZxPZ5i\",\"kxP2G9dmiRzxLuYoB\",\"CaoBNxekPwAD9Lsyc\",\"BuFw8zHWYAsMvz7k8\",\"rQpthoJte6rreQd4j\",\"38ojcc9tzLFftxDRQ\",\"ACv5PdwjQvqLQPGou\",\"fbNWxXTqZy2mXNbGJ\",\"we32tFXq3AoRuprwd\",\"x5JEs23Tc8ZWw3YAY\",\"64nBzk3rHDtM7MT3r\",\"z3HbZkmL5echimwFQ\",\"sBAQgme9imkPrH2Xm\",\"ddfeZ4pbbcXFXqZmY\",\"7yTWwspi6f7maXWRj\",\"tW2XYfMDPBbMknTmo\",\"AfiYSAkd4PtCAq6MF\",\"pzNideH44affosJNy\",\"GEsPJxMjAL3iWYZRy\",\"74zXNB4jwSQ7agXCe\",\"xGJnf5K4RWz9cozQk\",\"sjngWfShdeS3jYEpZ\",\"zovXwG27gzSSW7cia\",\"9w8LWqMrSHrxxZXZx\",\"79x9hFu3rkQXNRpG4\",\"6txZnj8BuNWvnZacj\",\"KMdpTq6EfLsCFGZE4\",\"vTxMZ7yTfdSqGovhZ\",\"YGYf9GKzaF8CWnDHE\",\"bGHDgwkiAp7RjBiYo\",\"JvcakCu2TnmozRSMA\",\"vtosp2wmv3bJ9Qgio\",\"CDc255P9KitqXNeXr\",\"3riR3H5ei3T86EEzz\",\"qzFMJGxMErfBhExMm\",\"ycoKGsjQAFtZTJ73A\",\"7qmjDoxbHX5e3knRX\",\"uigcF8wgYBpc9c6bs\",\"tZGkwb8PeHaKTW597\",\"uK99RLh3CQ3yur6BQ\",\"FvMmXyRahRGCkqvsE\",\"hCoyBFeNMdaC88ZFi\",\"niz9xRvhYCLYvGJnW\",\"mNMQvcxKSSvqqMYCH\",\"yJyjT7Z2PPQmzzWpP\",\"erJWHqarGkGtPJ3C4\",\"34rKGZYu7vEdoCu7d\",\"vnAs3y7hJY7X6JE6j\",\"vew4EJaM4jGBsvnTp\",\"5znpaFDoToJtAtF3h\",\"ydos8Ba8nZdYRNJpS\",\"QS5RGoPnapStFD5Gi\",\"CDkkdvDdqjDihTcFS\",\"T6j7qdvD37y8DLKzT\",\"a49eNnfRwSMxsDJXf\",\"vRXuYYBNuHEQ29fbm\",\"aMNhTh35QQAs33ycQ\",\"3pdgguqZgNDSAJSGm\",\"sxci7DYKNa6q22Sjq\",\"9c8n7ti5vCjTRgiGN\",\"Yohr2MmAyaWGMbB35\",\"t2kdBPj9qQAXY2Ehd\",\"3gxJoNp59B4eoyyed\",\"Ha5J49rhojBRy3BaM\",\"8rF6PHMSaybTDsvXr\",\"sb7Nh56pPFtPxLogT\",\"Ytye5oMhk6r5aaBvg\",\"jNcwk4jksmPTcAoTu\",\"yazNfwgLx7jSAZ8Tv\",\"phA6MomRzh9oz3eqn\",\"tfs6uiysC8atFan4t\",\"WPWBKqdkzkeGpgFR2\",\"pr4Cm4A369tC9gSeT\",\"CLmJduqJHX83dM4Pd\",\"n6N2dYX8MghgDtjx7\",\"3KjxQu9RZ8ZSywvLz\",\"8JyqsSbN2FJXPr3cw\",\"s2G7xhbjaNdkGbhRX\",\"qJZsi5rhRnWA38FbA\",\"HBgPTjhMkJ2WCcBP7\",\"yeTxrFJ9aKjWi4HA9\",\"s8o9ptNnpNGktBWdX\",\"u4yanfWeeZsN3xWgc\",\"J9zJq7PMGb6mqzcHW\",\"C9yBWYcZsjmJYww3K\",\"5TaPWyRv9DZWWodp8\",\"qx9XHErKygcLiFGhX\",\"cdcYSPc8rGJZrMnfS\",\"YLwJkF2wuL3n9o6a2\",\"ko7oJ85JMftgcbkrr\",\"M5n9zd5LtuuwJr668\",\"5Kf9z3G9QBs9fkvLs\",\"gBGjCfJvPHswDM5JQ\",\"EZNT8B7yQnnZmuwCf\",\"Es4eX2stRpyoXeC7f\",\"WuAkXKpcrQy867yCw\",\"jRqY4i8gPemsZMBGf\",\"hi87TtGy4Y5wPpS6n\",\"j2hKJg9sh9m3HWFgo\",\"fbYN9Jp46RqBqCd2K\",\"wYYMNPe8nSiJFbvJw\",\"mdEQJ2fmGmkbhbvNw\",\"jDTGwryGygbZiqCEg\",\"uYv96ZSpA7tBHoAGX\",\"8J2Dqqz9PaFufQzwY\",\"Kso7rzAKB4TTCPKgM\",\"PXBjtEAAwibHxNZXq\",\"rTj67TTydxqkpwFtN\",\"82weQfHHmno4Mq4X7\",\"bw6kHP3k8dP2qBa5v\",\"hB5mgzMwQSnhBzi7P\",\"etoSR23iELGGgs9rA\",\"GEzaJZ2cPjENT4ERQ\",\"YFHkjbM6obMSj24zi\",\"5seiNqw6ZXoF2GRRd\",\"fZjkX29nhRTWWb75k\",\"jyoLggHk8xQKZuoQC\",\"8zZ6xmzpiFair25qr\",\"Yp7uvStL97cC9fKkY\",\"DzvdGwHEjqsX7wyKr\",\"tqSJxy6E4vaTyECkh\",\"B4pxRqzo43M7S8FbP\",\"eWaq9hCBYq4oQYgEx\",\"WZujpe8yQAyZmpWHg\",\"F4synR7Ea8yS2L576\",\"hAGv4fuq3tj8aLBau\",\"TrquEHytntLKHA4m2\",\"DePiAS7u5Pk9d6SLr\",\"htXCitorobtqYymjN\",\"meS77LKqRswhF5LAy\",\"dDP6nt8ihp6FPeT27\",\"P7zedbjaFw8YDzLz7\",\"oMLSgpSFQnY4ui8cB\",\"zwruFCmuHkwJTpYqg\",\"Yom3RzkMYpweE8cbS\",\"DkSMZ3jZLkwviKb9g\",\"3qggY3TrN3xNaMDBp\",\"EcKPDmD4GmeFJGDTL\",\"rvojHhKH3DaxotefQ\",\"cR3ibTMxLyEdDFCHY\",\"AeJSxRqw2dJZuGvdk\",\"8SabHk4meXzHQWaLb\",\"q2tzvkrLASvSjkek9\",\"GEDsDpNX4QMhZAxtJ\",\"zbREcJDMGFPwDCww4\",\"QXkrEiAuhuXaZmL4C\",\"osXNzc2aCxspRwheS\",\"g4NCSxxHqHCGMpWwT\",\"muXMnzQwGLzN6j2Jr\",\"ZMd8it647JSYTvx8Z\",\"nbH6pjzJS9Z35JD9r\",\"RhPg33AdzvSZmibXa\",\"DAQX9mhHdMTqyYbvh\",\"jLv4ckjWQwHRAiYKT\",\"MxmG8Gkti7L5kXYNL\",\"f6uGKbmMdBYCjrMBh\",\"9KAbm9niQ9Cv9LefP\",\"w8nt7MwYJg95RuuZd\",\"Fd9765rksgPK4E2Zy\",\"ZXWDtCrM9ev3439oi\",\"ZiN6yB9rACMaYgseC\",\"yXGiiSAR5nBHnH3yr\",\"KCEsMas5BbmiD2Q9K\",\"fRYcPHuyEdqngMzC4\",\"gpd8yji9GXJruAtje\",\"kQRtmSZfHdSzFserc\",\"a777e8chPvJkY3tKa\",\"pi76g3eRpnKrhee2a\",\"jb9RLyyuo565bKDzN\",\"J7epB3qSQJ2E8vWkY\",\"gXTAie79kiw28tx5u\",\"Eog3hCNjLgjsAGTCG\",\"Qb45Di9b6tvejFpQK\",\"Rn5YNvYdY468a7vRp\",\"WHSB76uqJrCf2XKsw\",\"9amCEoE43AdSneJZ7\",\"azAzSkvJd7eyXY9x9\",\"JszPst3958te56jFk\",\"mG8HqKiAQFTdRZthG\",\"P5BhjZxyeHQYTNyB9\",\"BDMzcwipsJSLoaRKx\",\"8Xx8nWXRydHDBGfQf\",\"jXTnL3JatkKjoifyb\",\"tyLS9T6YMfg9fMtYJ\",\"xv5obFhsxY93mqR5S\",\"Ym8AjbKGSJooun3nt\",\"hDeaTsprkH6CmvSAR\",\"BWqQ68pvNedARDcBN\",\"W56bWmpQeLJ9JEDsa\",\"cJmmvnmJSXvBXtydi\",\"3EfDGZ9Sgz5zxzD7a\",\"2cdvd8yuPLSwvGj9w\",\"c7uBxu2rgY77H5d79\",\"Wi4H6ayKsNDWWQCG5\",\"PJu3WcTpfRrvHfQiS\",\"3SgSNoAB3sxaYeT3w\",\"Y6N5mCB4KjcLeFFDK\",\"GkYtSbQuheBF4Enys\",\"QRv96jmNaYsWkxQEG\",\"uFfEio8nzDvL8emhp\",\"hhxjQREtmHSheH9Pj\",\"dD3Aja8PZSMXMFSDY\",\"E2hpke7mHxAWsw5t9\",\"zZfMwLuoERGmybgib\",\"buX4mCQhtXCfBjeno\",\"8qNSPHZBpmjSTt3tH\",\"a6fgDQTddtZCKfnzR\",\"d7PjwEf5Ff8W5eD64\",\"4ySzqKC5s3ZRpG9di\",\"xEX3TDY6C2h82dJTn\",\"btabi3PdyisuY5tn9\",\"CAkEZWqFQrk6eSs39\",\"LNCb5rksJLJ43L4Nw\",\"rhS8qXRjZcpDXkwnE\",\"pYonfGP4u9HNL9Z32\",\"NiyZLgSs7iXFQzFzw\",\"GpXpLCQwaAvbGhQ7L\",\"uw47663LqPME8btaA\",\"Dxk4GozARkHu66BNh\",\"srJ34BaybkQh3qRkM\",\"XsuHwQSpiG7WYanW6\",\"TCTZucJN3tJh5t7MB\",\"HXbTKW3jmmyRAsKrr\",\"wFRLGjA56kj7xyhmv\",\"jCjCvyhqhpebkJn34\",\"Qv2jEtTnFCXX7cdd3\",\"afvP29FhRou2bTaav\",\"KMR6vNzvSKMA2cXnK\",\"GDNsAq2snvJuwFa88\",\"unqzSsxpxj9sZ7rbD\",\"FxPDKKibxnZjGJLs6\",\"3h5TBs8o7enGGrh3X\",\"x5CeTiD474ZHYF5t2\",\"ckQwFFWyLXmDQAaCn\",\"6kB5qypxcm62PHsEJ\",\"nFbmNzMQ38TncmfQX\",\"H3XLNCWB5yXt5YYXn\",\"3Gf7ikLijfoxabiPY\"],\"quality\":[5,5,5,5,5,4,4,5,4,4,4,5,5,5,5,4,5,4,5,5,5,5,5,5,5,5]},\"complaints\":{\"total\":0,\"reasons\":[],\"skippers\":[\"vQEmjTRgmdGNYB7yk\"]},\"instructions\":{\"score\":22.799999999999997,\"voters\":[\"LfR9Bopm57BMNNnkp\",\"aW8Qb8d3hAsWp2rWn\",\"eund9JckY6u2A96db\",\"rWTtR5BFBYQMBSq7G\",\"j9gg82Bp2L7nw7DyJ\",\"XAzJo8NGF3NrdtcGj\",\"qQwgxBijwJ85M5zSi\",\"7yTWwspi6f7maXWRj\",\"RRPkRwPbTkXxEhisg\",\"qaR8DnWrTk8Mus5Q2\",\"Jwoe6heepP8r77Doj\",\"ZCpaoRQRMcPgkwjGh\",\"wtQ46Com9qs8ZCqHD\",\"nxCRcZQknHp8wP2v4\",\"9qoWqLcHGiDX429rE\",\"jGnJuSPc5RDhEkEjT\",\"KD5ReboBJyYA5fQtE\"]},\"tests\":{\"score\":0,\"voters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.730769230769231,\"family\":[{\"_id\":\"dxBJS348pZ3nESr4w\",\"language\":\"cpp\"},{\"_id\":\"uz4r69EHHSQMosT8D\",\"language\":\"csharp\"},{\"_id\":\"mkxS3CnW98Ci3kwCh\",\"language\":\"java\"},{\"_id\":\"LvtsCQNpx7CwHGubf\",\"language\":\"javascript\"},{\"_id\":\"2NTQThuixnqwYJPAr\",\"language\":\"php\"},{\"_id\":\"hxr3ZyPw2bZzrHEsf\",\"language\":\"python3\"},{\"_id\":\"Ja2LdzES4jxEwxECv\",\"language\":\"ruby\"},{\"_id\":\"cXdyCn3vEudJjECR8\",\"language\":\"swift\"}]}}"]