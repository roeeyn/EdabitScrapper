a["{\"msg\":\"result\",\"id\":\"413\",\"result\":{\"_id\":\"KGhmvXpF6iK8mAqgj\",\"author\":\"Edward Clark\",\"authorId\":\"3pdgguqZgNDSAJSGm\",\"code\":\"public class Challenge {\\n\\tpublic static String[] numInStr(String[] arr) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":1.5376344086021505,\"familyId\":\"TkMN6PQq5q6CZjNM4\",\"instructions\":\"Create a function that takes an array of strings and returns an array with only the strings that have numbers in them. If there are no strings containing numbers, return an empty array.\\n\\n### Examples\\n```\\nnumInStr([\\\"1a\\\", \\\"a\\\", \\\"2b\\\", \\\"b\\\"]) ➞ [\\\"1a\\\", \\\"2b\\\"]\\n\\nnumInStr([\\\"abc\\\", \\\"abc10\\\"]) ➞ [\\\"abc10\\\"]\\n\\nnumInStr([\\\"abc\\\", \\\"ab10c\\\", \\\"a10bc\\\", \\\"bcd\\\"]) ➞ [\\\"ab10c\\\", \\\"a10bc\\\"]\\n\\nnumInStr([\\\"this is a test\\\", \\\"test1\\\"]) ➞ [\\\"test1\\\"]\\n```\\n\\n### Notes\\n- The strings can contain white spaces or any type of characters.\\n- **Bonus:** Try solving this without RegEx.\",\"lab\":\"import static org.hamcrest.core.Is.is;\\nimport org.junit.Test;\\nimport static org.junit.Assert.assertThat;\\n\\npublic class ChallengeTest {\\n\\t@Test\\n\\tpublic void test1() {\\n\\t\\tassertThat(Challenge.numInStr(new String[]{\\\"abc\\\", \\\"abc10\\\"}), is(new String[]{\\\"abc10\\\"}));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test2() {\\n\\t\\tassertThat(Challenge.numInStr(new String[]{\\\"abc\\\", \\\"ab10c\\\", \\\"a10bc\\\", \\\"bcd\\\"}), is(new String[]{\\\"ab10c\\\", \\\"a10bc\\\"}));            \\n\\t}\\n\\n\\t@Test\\n\\tpublic void test3() {\\n\\t\\tassertThat(Challenge.numInStr(new String[]{\\\"1\\\", \\\"a\\\" , \\\" \\\" ,\\\"b\\\"}), is(new String[]{\\\"1\\\"}));            \\n\\t}\\n\\n\\t@Test\\n\\tpublic void test4() {\\n\\t\\tassertThat(Challenge.numInStr(new String[]{\\\"rct\\\", \\\"ABC\\\", \\\"Test\\\", \\\"xYz\\\"}), is(new String[]{}));            \\n\\t}\\n\\n\\t@Test\\n\\tpublic void test5() {\\n\\t\\tassertThat(Challenge.numInStr(new String[]{\\\"this IS\\\",\\\"10xYZ\\\", \\\"xy2K77\\\", \\\"Z1K2W0\\\", \\\"xYz\\\"}), is(new String[]{\\\"10xYZ\\\", \\\"xy2K77\\\", \\\"Z1K2W0\\\"}));            \\n\\t}\\n\\n\\tpublic void test6() {\\n\\t\\tassertThat(Challenge.numInStr(new String[]{\\\"-/>\\\", \\\"10bc\\\", \\\"abc \\\"}), is(new String[]{\\\"10bc\\\"}));            \\n\\t}\\n}\",\"language\":\"java\",\"summary\":\"Create a function that takes an array of strings and returns an array with only the strings that have numbers in them. If there are no strings containing numbers, return an empty array.\\n\\nExamples\\nnumInStr([\\\"1a\\\", \\\"a\\\", \\\"2b\\\", \\\"b\\\"]) ➞ [\\\"1a\\\", \\\"2b\\\"]\\n\\nnumInStr([\\\"abc\\\", \\\"abc10\\\"]) ➞ [\\\"abc10\\\"]\\n\\nnumInStr([\\\"abc\\\", \\\"ab10c\\\", \\\"a10bc\\\", \\\"bcd\\\"]) ➞ [\\\"ab10c\\\", \\\"a10bc\\\"]\\n\\nnumInStr([\\\"t\",\"tags\":[\"arrays\",\"numbers\",\"strings\",\"loops\",\"regex\"],\"timestamp\":{\"$date\":1570190988123},\"title\":\"Numbers in Strings\",\"stats\":{\"completed\":{\"total\":115,\"ratings\":[2,2,2,2,2,3,0,2,0,2,2,3,1,2,2,0,2,0,1,0,2,2,1,3,1,1,2,2,1,2,2,1,2,0,2,1,2,2,1,2,3,0,3,1,1,1,2,2,3,0,2,1,2,0,2,0,2,1,2,2,0,2,1,1,2,2,1,1,2,2,3,1,2,1,1,0,2,2,2,2,2,2,0,2,2,1,2,2,2,1,2,2,1],\"rators\":[\"3pdgguqZgNDSAJSGm\",\"vRXuYYBNuHEQ29fbm\",\"pnELRkCFDc3or7Hid\",\"sxci7DYKNa6q22Sjq\",\"jb9RLyyuo565bKDzN\",\"9c8n7ti5vCjTRgiGN\",\"aLpuDx72trwPQ5Aua\",\"yazNfwgLx7jSAZ8Tv\",\"u4yanfWeeZsN3xWgc\",\"Zk4jvK2nkvnhpzoLR\",\"J9zJq7PMGb6mqzcHW\",\"phA6MomRzh9oz3eqn\",\"yK7zzK2aGJwuWKHRL\",\"HBgPTjhMkJ2WCcBP7\",\"8J2Dqqz9PaFufQzwY\",\"AyrEvM2GLX2jqM772\",\"2cdvd8yuPLSwvGj9w\",\"YLqdr7bYjwew2KM4N\",\"C9yBWYcZsjmJYww3K\",\"9gJsF5apWJGWZJprn\",\"8JyqsSbN2FJXPr3cw\",\"4RHx3H8EwP2oboW8e\",\"bsXDWXhsuqgaZYCCv\",\"mRwxbzaBc4Fg5q9Hw\",\"JFodQijHHdRkkrZvT\",\"Es4eX2stRpyoXeC7f\",\"wYYMNPe8nSiJFbvJw\",\"hB5mgzMwQSnhBzi7P\",\"fZjkX29nhRTWWb75k\",\"Kso7rzAKB4TTCPKgM\",\"5seiNqw6ZXoF2GRRd\",\"TrquEHytntLKHA4m2\",\"jyoLggHk8xQKZuoQC\",\"82weQfHHmno4Mq4X7\",\"uYv96ZSpA7tBHoAGX\",\"RWCHB5XBKFvDahMMR\",\"WZujpe8yQAyZmpWHg\",\"8zZ6xmzpiFair25qr\",\"htXCitorobtqYymjN\",\"DePiAS7u5Pk9d6SLr\",\"meS77LKqRswhF5LAy\",\"m3yxpYRW43zBKvGSy\",\"Yom3RzkMYpweE8cbS\",\"yf8xb9NWzAyEX56k7\",\"B4pxRqzo43M7S8FbP\",\"DzvdGwHEjqsX7wyKr\",\"q2tzvkrLASvSjkek9\",\"rvojHhKH3DaxotefQ\",\"g4NCSxxHqHCGMpWwT\",\"k2tXkx7AyX77tQDRo\",\"Fd9765rksgPK4E2Zy\",\"Yohr2MmAyaWGMbB35\",\"YcjwCvYut6834Jzd8\",\"azAzSkvJd7eyXY9x9\",\"YFHkjbM6obMSj24zi\",\"xPqMCDSckCDNwZusv\",\"8c8P2NGJisyn2QepD\",\"yXGiiSAR5nBHnH3yr\",\"gXTAie79kiw28tx5u\",\"oMZovHkR6QqNvQwyc\",\"AeJSxRqw2dJZuGvdk\",\"rWhXHhzF4W8bea6LP\",\"mG8HqKiAQFTdRZthG\",\"8Xx8nWXRydHDBGfQf\",\"jXTnL3JatkKjoifyb\",\"BbcH2NLjE4tKAZ3wR\",\"unNqQjSHzkb4pCzEu\",\"mQKWauR6b252TmdX4\",\"hD6sfDtntpqT8NR2o\",\"a49eNnfRwSMxsDJXf\",\"RGN3QTb5LXj4ZPPkj\",\"mzLQmxr7TjimwggGA\",\"Y6N5mCB4KjcLeFFDK\",\"zHCvsprtbScc7qfCK\",\"buX4mCQhtXCfBjeno\",\"bur3yQ8s34zqKGEro\",\"zZfMwLuoERGmybgib\",\"DkSMZ3jZLkwviKb9g\",\"4ySzqKC5s3ZRpG9di\",\"c7uBxu2rgY77H5d79\",\"rhS8qXRjZcpDXkwnE\",\"xEX3TDY6C2h82dJTn\",\"GKc4zpFhvdYyrNGHZ\",\"srJ34BaybkQh3qRkM\",\"wFRLGjA56kj7xyhmv\",\"6rvJwN4mcX7iYGjY7\",\"MpfytGFYF77emJ3cT\",\"49BpSbbPwJBpfHkMg\",\"jCjCvyhqhpebkJn34\",\"KMR6vNzvSKMA2cXnK\",\"PJu3WcTpfRrvHfQiS\",\"hhxjQREtmHSheH9Pj\",\"XJtKkp8feEJwcsXfA\",\"unqzSsxpxj9sZ7rbD\",\"JJFPy22rhWmioEDwN\",\"uw47663LqPME8btaA\",\"PAEWysAAFheYiYPBp\",\"nFbmNzMQ38TncmfQX\",\"XH6378Zm3WBm679yx\"],\"quality\":[5,5,5,5,4,4,4,1,5,5,3]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.181818181818182,\"family\":[{\"_id\":\"yGJwwpjwHZLmXSuuk\",\"language\":\"cpp\"},{\"_id\":\"KGhmvXpF6iK8mAqgj\",\"language\":\"java\"},{\"_id\":\"eCPim4XcssdZdvs32\",\"language\":\"javascript\"},{\"_id\":\"XYYdtkhGPXXJ3QQNB\",\"language\":\"python3\"},{\"_id\":\"XfMdBGuPFgLxi5aH2\",\"language\":\"ruby\"},{\"_id\":\"9H4NL9eLfupAL3Kh6\",\"language\":\"swift\"}]}}"]