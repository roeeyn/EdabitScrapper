a["{\"msg\":\"result\",\"id\":\"645\",\"result\":{\"_id\":\"7PSvBgGjiA252WdiN\",\"author\":\"_fluffyy\",\"authorId\":\"foytX6kH9wiSYqLtT\",\"code\":\"public class Challenge {\\n  public static boolean isAutobiographical(int n) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":2.3333333333333335,\"quality\":4.555555555555555,\"familyId\":\"YEuFxy2cw6ERYJsXi\",\"instructions\":\"If a number is **autobiographical**, then the number's digits describe itself. The first digit is the amount of times the digit 0 appears, the second digit is the amount of times the digit 1 appears, the third digit is the amount of times the digit 2 appears, etc. **This repeats for all digits of the number.** The number `6210001000` is autobiographical, because it has six 0's, two 1's, one 2, zero 3's, zero 4's, zero 5's, one 6, zero 7's, zero 8's, and zero 9's.\\n\\nCreate a function that takes an integer `n` and returns whether or not `n` is an autobiographical number.\\n\\n### Examples\\n```\\nisAutobiographical(12345) ➞ false\\n\\nisAutobiographical(1210) ➞ true\\n// one 0, two 1's, one 2, zero 3's\\n\\nisAutobiographical(638) ➞ false\\n\\nisAutobiographical(0) ➞ false\\n// claims no zeroes, however zero is the first digit\\n```\\n\\n### Notes\\n- Numbers with more than 10 digits should always return `false` (9 is the highest digit in base 10, so you can't go higher than 9,999,999,999).\\n- `n` is always >= 0 and is always an integer.\",\"isHidden\":false,\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\npublic class Tests {\\n  @Test\\n  public void test1() {\\n\\tassertEquals(Challenge.isAutobiographical(12345), false);\\n  }\\n  @Test\\n  public void test2() {\\n\\tassertEquals(Challenge.isAutobiographical(1210), true);\\n  }\\n  @Test\\n  public void test3() {\\n\\tassertEquals(Challenge.isAutobiographical(638), false);\\n  }\\n  @Test\\n  public void test4() {\\n\\tassertEquals(Challenge.isAutobiographical(0), false);\\n  }\\n  \\n  @Test\\n  public void test5() {\\n\\tassertEquals(Challenge.isAutobiographical(2020), true);\\n  }\\n  @Test\\n  public void test6() {\\n\\tassertEquals(Challenge.isAutobiographical(3211000), true);\\n  }\\n  @Test\\n  public void test7() {\\n\\tassertEquals(Challenge.isAutobiographical(3434343), false);\\n  }\\n  @Test\\n  public void test8() {\\n\\tassertEquals(Challenge.isAutobiographical(2100), false);\\n  }\\n}\",\"language\":\"java\",\"summary\":\"If a number is autobiographical, then the number's digits describe itself. The first digit is the amount of times the digit 0 appears, the second digit is the amount of times the digit 1 appears, the third digit is the amount of times the digit 2 appears, etc. This repeats for all digits of the number. The number 6210001000 is autobiographical, because it has\",\"tags\":[\"numbers\",\"conditions\",\"loops\",\"validation\"],\"timestamp\":{\"$date\":1599175987835},\"title\":\"Numbers That are Also Writers\",\"stats\":{\"completed\":{\"total\":39,\"ratings\":[2,2,2,2,2,1,2,3,3,0,2,3,2,3,2,3,3,3,2,4,3,3,1,3],\"quality\":[5,5,4,5,5,5,4,3,5],\"rators\":[\"MBEwq8srjd2oA5W58\",\"jrFJmdAoN2yqgkp89\",\"ekQh3jzgGLsEMbKo3\",\"DzvdGwHEjqsX7wyKr\",\"vRXuYYBNuHEQ29fbm\",\"vTMyc3otxo9jPDpTZ\",\"qTXNwXBDtH3j6t7hw\",\"7Se68pdoZetKc3kGS\",\"Es4eX2stRpyoXeC7f\",\"R8YWhHoXoasSsLJs4\",\"Wzt4NP4ntCseopm8r\",\"BSJAuSLSs5Sv5SYAf\",\"gXTAie79kiw28tx5u\",\"xGtxQz9WnAPPKJZxK\",\"PytNZK9mNiRiZxPrm\",\"mQKWauR6b252TmdX4\",\"8Xx8nWXRydHDBGfQf\",\"jXTnL3JatkKjoifyb\",\"Zt9w3SiJxSE4SfzRp\",\"2sZrwmQcNFJG3d3HW\",\"RGN3QTb5LXj4ZPPkj\",\"buX4mCQhtXCfBjeno\",\"rhS8qXRjZcpDXkwnE\",\"qaPjAANdnxFnWfj5d\",\"KMR6vNzvSKMA2cXnK\",\"sxci7DYKNa6q22Sjq\",\"wFRLGjA56kj7xyhmv\",\"rWhXHhzF4W8bea6LP\"]},\"instructions\":{\"upvoters\":[],\"downvoters\":[]},\"flags\":0},\"editorId\":\"foytX6kH9wiSYqLtT\",\"family\":[{\"_id\":\"7PSvBgGjiA252WdiN\",\"language\":\"java\"},{\"_id\":\"LZcvkTGzhNfvxukPP\",\"language\":\"javascript\"},{\"_id\":\"guYAC7xacyWEaTq7X\",\"language\":\"python3\"},{\"_id\":\"G9S7kwB5Q3EYKBAvv\",\"language\":\"ruby\"}]}}"]