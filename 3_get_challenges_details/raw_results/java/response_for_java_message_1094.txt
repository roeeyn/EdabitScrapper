a["{\"msg\":\"result\",\"id\":\"107\",\"result\":{\"_id\":\"TfL74CMecNnmtABNg\",\"author\":\"Helen Yu\",\"authorId\":\"mNMQvcxKSSvqqMYCH\",\"code\":\"public class Challenge {\\n\\tpublic static int[] mysteryFunc(int[] arr, int num) {\\n\\t\\t\\n\\t}\\n}\",\"difficulty\":0.5747800586510264,\"familyId\":\"9vKFEauu6Johr2ETN\",\"instructions\":\"This is a **reverse coding challenge**. Normally you're given explicit directions with how to create a function. Here, you must generate your own function to satisfy the relationship between the inputs and outputs.\\n\\nYour task is to create a function that, when fed the inputs below, produces the sample outputs shown.\\n\\n### Examples\\n```\\n[5, 7, 8, 2, 1], 2 ➞ [1, 1, 0, 0, 1]\\n\\n[9, 8, 16, 47], 4 ➞ [1, 0, 0, 3]\\n\\n[17, 11, 99, 55, 23, 1], 5 ➞ [2, 1, 4, 0, 3, 1]\\n\\n[6, 1], 7 ➞ [6, 1]\\n\\n[3, 2, 9], 3 ➞ [0, 2, 0]\\n\\n[48, 22, 0, 19, 33, 100], 10 ➞ [8, 2, 0, 9, 3, 0]\\n```\\n\\n### Notes\\nIf you get stuck, see **Comments** for a hint.\",\"lab\":\"import static org.hamcrest.core.Is.is;\\nimport org.junit.Test;\\nimport static org.junit.Assert.assertThat;\\n\\npublic class ChallengeTests {\\n\\t@Test \\n\\tpublic void test1() {\\n\\t\\tassertThat(Challenge.mysteryFunc(new int[]{5, 7, 8, 2, 1}, 2), is(new int[]{1, 1, 0, 0, 1}));\\n\\t}\\n\\t\\n\\t@Test \\n\\tpublic void test2() {\\n\\t\\tassertThat(Challenge.mysteryFunc(new int[]{9, 8, 16, 47}, 4), is(new int[]{1, 0, 0, 3}));\\n\\t}\\n\\t\\n\\t@Test \\n\\tpublic void test3() {\\n\\t\\tassertThat(Challenge.mysteryFunc(new int[]{17, 11, 99, 55, 23, 1}, 5), is(new int[]{2, 1, 4, 0, 3, 1}));\\n\\t}\\n\\t\\n\\t@Test \\n\\tpublic void test4() {\\n\\t\\tassertThat(Challenge.mysteryFunc(new int[]{6, 1}, 7), is(new int[]{6, 1}));\\n\\t}\\n\\t\\n\\t@Test \\n\\tpublic void test5() {\\n\\t\\tassertThat(Challenge.mysteryFunc(new int[]{3, 2, 9}, 3), is(new int[]{0, 2, 0}));\\n\\t}\\n\\t\\n\\t@Test \\n\\tpublic void test6() {\\n\\t\\tassertThat(Challenge.mysteryFunc(new int[]{48, 22, 0, 19, 33, 100}, 10), is(new int[]{8, 2, 0, 9, 3, 0}));\\n\\t}\\n}\",\"language\":\"java\",\"summary\":\"This is a reverse coding challenge. Normally you're given explicit directions with how to create a function. Here, you must generate your own function to satisfy the relationship between the inputs and outputs.\\n\\nYour task is to create a function that, when fed the inputs below, produces the sample outputs shown.\\n\\nExamples\\n[5, 7, 8, 2, 1], 2 ➞ [1, 1, 0, 0, 1]\",\"tags\":[\"arrays\",\"math\",\"loops\"],\"timestamp\":{\"$date\":1555143082717},\"title\":\"Reverse Coding Challenge #3\",\"stats\":{\"completed\":{\"total\":458,\"ratings\":[1,1,1,1,1,1,1,1,1,1,0,5,0,0,1,1,0,0,1,1,0,1,0,0,1,0,2,0,0,2,1,0,1,0,1,0,1,0,0,0,0,0,0,2,0,3,0,0,1,1,0,0,1,0,0,1,2,2,1,0,1,0,0,0,1,0,1,1,0,0,1,0,0,0,1,5,1,0,0,0,1,2,2,1,0,0,1,0,2,0,0,1,1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,1,0,0,1,1,2,0,0,1,2,0,2,1,1,3,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,1,2,2,1,0,1,5,0,0,0,0,0,2,0,1,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,1,1,1,2,2,0,0,1,1,1,2,0,1,1,0,0,0,1,0,1,1,0,0,0,0,0,0,1,2,0,1,0,0,0,0,0,2,0,0,0,0,0,1,0,1,0,0,2,2,1,0,1,2,0,2,0,0,0,0,1,0,0,0,0,0,1,0,2,0,1,1,0,0,1,1,0,2,0,2,0,0,0,0,1,1,0,0,0,0,2,1,0,0,0,1,0,0,1,0,1,0,2,0,1,1,0,2,1,1,1,0,1,1,0,2,0,0,0,0,1,0,0,1,2,0,1,0,0,0,0,1,1,0,1,1,0,0,1,0,1,1,0,0],\"rators\":[\"mNMQvcxKSSvqqMYCH\",\"erJWHqarGkGtPJ3C4\",\"FzuDgejj4nf9M2Zwq\",\"yJyjT7Z2PPQmzzWpP\",\"oMZovHkR6QqNvQwyc\",\"6akGaXW83HnSC5PSy\",\"5znpaFDoToJtAtF3h\",\"vew4EJaM4jGBsvnTp\",\"n5wubRfh6zh8QRymN\",\"T6j7qdvD37y8DLKzT\",\"ydos8Ba8nZdYRNJpS\",\"kkzm6azmuRYvjJfSr\",\"CDkkdvDdqjDihTcFS\",\"veu3fKkK2DSkKTkb2\",\"a49eNnfRwSMxsDJXf\",\"yhk8G8cM3p9JAbfJN\",\"JSSLvJPs8JebyfeS9\",\"WAMxBrgasiphg5QPL\",\"cp3X8hk8yNME7qoD9\",\"qGFqqzbwxiz7kZkPW\",\"7nqobGBA5GN5zGGrx\",\"rjPTba7pjdYonCHoN\",\"PrJSgrHEdSs8rs78K\",\"FocLpCB2WEiK2gGni\",\"Lkoo57Q2GJXjBnyMR\",\"mrKDTFeqRM7r9ZPJv\",\"sxci7DYKNa6q22Sjq\",\"9c8n7ti5vCjTRgiGN\",\"Yohr2MmAyaWGMbB35\",\"p28tmk8bcHjXsxaAg\",\"t2kdBPj9qQAXY2Ehd\",\"3gxJoNp59B4eoyyed\",\"ZBDiEMi7dbjRL55LB\",\"Ha5J49rhojBRy3BaM\",\"teCeoNkdeQEciPZ7H\",\"hhxjQREtmHSheH9Pj\",\"NCB3RaRBonefnHBJD\",\"pr4Cm4A369tC9gSeT\",\"mQCQNauuBvtmnrCLT\",\"7p3Btn9oRNStAZ8G6\",\"3KjxQu9RZ8ZSywvLz\",\"oMADehRvromktWpjh\",\"qJZsi5rhRnWA38FbA\",\"5HGq6zCGzX54MMbJS\",\"9aYyBYbm8MkpeBrFG\",\"PHkmuovANGzadceGW\",\"tmcjBArYTgRPxCWpM\",\"D3ASM3aWpcQ8gvnin\",\"CggGfsERnPKGupFWp\",\"BTAZq3s992yrnbPqz\",\"HBgPTjhMkJ2WCcBP7\",\"KowhvsYvaqPMAf9Sf\",\"bk6Sjnh52qNCYNggH\",\"qAby4AWXmTNeusvg3\",\"8JyqsSbN2FJXPr3cw\",\"B8HnNjKPuX2GKayQS\",\"s2ZMtR9deh6Kia7pb\",\"2cdvd8yuPLSwvGj9w\",\"XPhLf7JYc6mmBYR9A\",\"gp77RykRkHQtqbE9C\",\"m5MkyWuoD4uF8sLGM\",\"bSh7hsfWHXwnQhDsy\",\"5RcAXjQAbqQtWppy6\",\"fX88wbEuJRZxti6Ji\",\"ur2v2gqNn9YGcwEtB\",\"gJYHiyyMv6mhqFehP\",\"yK7zzK2aGJwuWKHRL\",\"njhNmS8vivtvBFBoz\",\"MrNyfG8SGjjBKLvgc\",\"sbEQDGeo3mvLJCZrE\",\"SdMTrmB3qSGBwHTKo\",\"EZNT8B7yQnnZmuwCf\",\"NsQ8qYQQ47gSPtQkK\",\"T6X7tJkQYJjiiuT8i\",\"WuAkXKpcrQy867yCw\",\"TFHfNrmG9a3m6tbKo\",\"9n7GHdsgHeHZ4QRPR\",\"Es4eX2stRpyoXeC7f\",\"pCmeZpDvn4Y9Xczwk\",\"9XxsZapHq9HDnxkNb\",\"YFHkjbM6obMSj24zi\",\"wYYMNPe8nSiJFbvJw\",\"pfQ6Hz5pdgrF8CWat\",\"iR9GnwoEQEbasYLjC\",\"YLqdr7bYjwew2KM4N\",\"jDTGwryGygbZiqCEg\",\"mdEQJ2fmGmkbhbvNw\",\"Jhiv9GSSx7NTZKGqJ\",\"LvPcgns5Ec7wyMbMv\",\"DzLdw6wEL2Nt5mrsp\",\"Kso7rzAKB4TTCPKgM\",\"P7zedbjaFw8YDzLz7\",\"3EfDGZ9Sgz5zxzD7a\",\"8J2Dqqz9PaFufQzwY\",\"82weQfHHmno4Mq4X7\",\"6bXrZ8TeBveMQ5kjT\",\"GEzaJZ2cPjENT4ERQ\",\"hB5mgzMwQSnhBzi7P\",\"sMMZEGp5gw9KS7MJv\",\"jyoLggHk8xQKZuoQC\",\"T5xwzaagJoXziNLpk\",\"ZqjP4M6dzu32To33K\",\"e85WYqSpXbCb3iH4H\",\"ZQEo2nzPtJHGx2cM7\",\"Yp7uvStL97cC9fKkY\",\"Gnz7fQmGAHp7Mup3d\",\"B4pxRqzo43M7S8FbP\",\"n4G4b5PABdGHCaHNH\",\"SmmkwyvSHT54PzB5B\",\"GbZMSzydgNZKYoQ3c\",\"Yom3RzkMYpweE8cbS\",\"Yah35yz79RLcfMmgJ\",\"WZujpe8yQAyZmpWHg\",\"4nFXeGakoCjm5GXYa\",\"iYfvPgCeNeQFbBhpb\",\"WctuJ66yb3q8MfkB6\",\"Bj9Qvjt7MX2mGSuN7\",\"AeJSxRqw2dJZuGvdk\",\"ZxS3JjsysyertLJ86\",\"TrquEHytntLKHA4m2\",\"PfYwiN9h9vHXT2393\",\"t8emmEP5fc6nZk2aS\",\"SGfN8fbMKsE9cisiD\",\"TmTDpa3d5shpStkCM\",\"htXCitorobtqYymjN\",\"ojmmLWL7Hvi6yYWeJ\",\"Aaexb5GnhdJJLm2YT\",\"ZjEdErENicjeqKZ8g\",\"KSacRDqFGCYFuKxB3\",\"kSnwZCFe7kB2GteiJ\",\"tMFAMHJevqqa79MBL\",\"6asyTYvz7kMPee8Tz\",\"bCLgcPTHSkG82r5o7\",\"JpGTbK8kYLeRCaybb\",\"xLTGN8Mg7Q6mDWYDi\",\"meS77LKqRswhF5LAy\",\"kDfdhZS5NsaKtPNWz\",\"cR3ibTMxLyEdDFCHY\",\"puWkZTjbBBnJXH9Rd\",\"PTRYb5rBAmcdP4q87\",\"Wahy3ckB7M4GrdAgu\",\"kGukLA3PXkaiaXfbk\",\"45MHqHC33PyeZfzhA\",\"tPf5nXX3wPbdTewqX\",\"aR3q6iF25TfSpJLca\",\"SbDRsLR6yfZXETyKN\",\"FrorBN8wRAoptuxtR\",\"E8GY8AqZqc2Xwj6Xy\",\"3gHMcqnyskbFQ9w63\",\"aukemxRJPgJjJWgAx\",\"rvojHhKH3DaxotefQ\",\"g4NCSxxHqHCGMpWwT\",\"zxRHFTwSLu5m5Tr8Y\",\"4XYtb6wNqvGfpBbDX\",\"qbGWFzcYKChXfZBtc\",\"8AvGnwLnDrHXAwX38\",\"8H5LfgtXtEHDNGnCP\",\"qCF8rNBcy4P4xcCLs\",\"Tf7TJFSPktJBgLA4k\",\"sYbo3462sc8StxzRW\",\"TBamPvEAh6xARn8Kd\",\"JZAWh63GC4gKbgPpA\",\"MxmG8Gkti7L5kXYNL\",\"nbH6pjzJS9Z35JD9r\",\"639dcNXwna5uYfwPx\",\"SFjyHZBEqzthL9Bzy\",\"tXs5TC9nT27sFCjov\",\"CweSNtrMCbkZLY2Zj\",\"unNqQjSHzkb4pCzEu\",\"sYKPxZX5xJZ2GTp6Q\",\"v9qTRmiCsjoeAAiyc\",\"4Np3uu6Jj67L2CxiR\",\"MSa5iqebmdK5C3Bpx\",\"3mXBfmwykLEuqR9cC\",\"p3tkuLoxm3TzJNj2D\",\"go52WcqTcPzmpRtJ8\",\"f6uGKbmMdBYCjrMBh\",\"JXnf7Lz3zotPN365m\",\"Rm3HaRKsfwRGhaE7j\",\"YctvR52hXQQzKhYqX\",\"ikxSkiQjCjYPsFwMT\",\"umcNKSZ597NfCXiyy\",\"MCw7uAcoWcSTBTmr3\",\"3PttJMEMgnEdCZ9xv\",\"eoepTq5ES5tfgY9XT\",\"7AiqDzNLBQzFsafew\",\"QNcxRqu3Zd8XAyepu\",\"SArZ9kHt53x36pioa\",\"yCtsitRvwFCaLDAyM\",\"jZowfp9N5RdPmMhdw\",\"h5tTQs7aTtBaQX6o7\",\"xYzuYMW8qpZaq9fYS\",\"72p63TZfPFQBZgQia\",\"6NWx8rGpnZvZ7f4hz\",\"RpM8KceZhkk9ybHra\",\"yXGiiSAR5nBHnH3yr\",\"sQJMxdw2pDG4TGbcs\",\"Fd9765rksgPK4E2Zy\",\"ZfL4WtzTa3B9yzQoZ\",\"eSPLEwfjRnJshpQvX\",\"6akKZDu2YSFbdwhPj\",\"YkSoXpkYNafHSzG6g\",\"aEPtzErKbARA3q3Jm\",\"HHXf2G47cyoEmQuiB\",\"mLPfS53i3c4Yf3jQ3\",\"McT2pR4g3ptnWNoWq\",\"9ty3Xe2fBFtMvnyB6\",\"pJHhT6RzmA2CWqWLz\",\"vxqtK4M8pRzGrhN3e\",\"pkwf45aYKzZvJ5ndN\",\"4yD673SJmg2A9ouFv\",\"rqq7L69PdSusM6YY5\",\"kQRtmSZfHdSzFserc\",\"avXoZmD8SSpqsLST2\",\"79wYKX3wpNhCepTMD\",\"yb8T3nuL4evaeJW6k\",\"moR2hh2QtWK5CLmwu\",\"GWpMXmRGEtfaBmMfK\",\"iwJYWTreKLWnqLWWg\",\"5CWZcR3uZjF7ZFQY5\",\"hPx9H3YM8j2k94DNW\",\"ahAg7BF8qMmSR3cbv\",\"puCobPgduCEZMXu69\",\"MyTgCkLfG3A79Pubj\",\"ydF8Re5wK8MmaDbLh\",\"wQ47dfWNd3bkckEyF\",\"DEDniTrstQYGounXT\",\"84PnX6PD8izkkTcxT\",\"qgZDuH7BceDWrpT36\",\"8uuSya4kk73WQh7N4\",\"NvjQDrN5oK7yiKitJ\",\"94XQj7wutz9ySewYC\",\"79Wo8iNbhEr7BvrNE\",\"kzuyivcF6EzcAmZjE\",\"TTgP9jcqGxCfKotZ3\",\"uD86CBz3A3yjirhGG\",\"hibYcdCWPdTvsoudG\",\"GPXQSD4R2D2xmhjkv\",\"ymggGjk5woALZEbCC\",\"arRhfHrZ6R76SFZqv\",\"EfrK7Prsam9RWKYKf\",\"4sA7sbNviGRdkApYa\",\"8uKQQw9RDpz6TCjMX\",\"w2rPvPbskuhndnDRG\",\"3uTJ8TDeZi2LphYBs\",\"2xFvy6u3hE4LtCXMD\",\"CBRiWyfmtC9xzCTf4\",\"44arJN5SYx3HyfetA\",\"GztmgRTkTTdxqv3Ep\",\"MBEwq8srjd2oA5W58\",\"QjS3SRXLfnbj9auo2\",\"M9fYmJcbxAvDWAaE9\",\"WuEaQmoR5swzmr6BQ\",\"sfeeJr28qAH5d4TxC\",\"J7epB3qSQJ2E8vWkY\",\"cueHAmTrcWuowXf58\",\"FiegHuLFA8sbCoPWw\",\"tyeHaiw6zNeBPSBfD\",\"u7i7WPM63n42r8R8o\",\"PPHFum3dvD8pzLnGz\",\"WHSB76uqJrCf2XKsw\",\"eQXwk5zGckM8tCWYH\",\"2zqCLYa6Mxs4ysdPJ\",\"9uvY36FiJRWxRpE7e\",\"bWWFscsAr66ZWHo28\",\"2X23EB8EciTGTm4dZ\",\"32uy2LgegdmLGpebX\",\"7gBLtxKryhTryH5zb\",\"jqkZtB4n2ZgLbt5t5\",\"HTHTaRGeFB6tGKRCJ\",\"izdAHuFQcWY2pa3YG\",\"yBeWtGNg9yuECLqGQ\",\"2wS9Wm3Nj5ZFcMnfA\",\"ATCbF72Lo628BKgac\",\"47PyFbZyxWuP9Bgga\",\"jXTnL3JatkKjoifyb\",\"etoSR23iELGGgs9rA\",\"GT9Qq2tC7dNhgHwEw\",\"4SBj9cygDMHj6PPRP\",\"9FXFESPtZf7KWKH3u\",\"KnPDaXuCY5iwrXBne\",\"ShrPRFW2oBeDiHpEX\",\"BdZTCHrjGayimdiMX\",\"8Xx8nWXRydHDBGfQf\",\"ofm86SimLSXQivs6y\",\"gBGjCfJvPHswDM5JQ\",\"7W8yYT7ktkAoNo3u8\",\"JwBT2xYDafcNG9eKr\",\"9ShXSwHycr8XCNWzo\",\"qWEz8tGrQeTexjyxA\",\"qkxmwQPzuiCNB4eB8\",\"XAKPNhDp64QT5rPWW\",\"CNc6rmwhbxkxEhHAp\",\"jtwXnqgBtW84HqNpB\",\"jZnryXuqhJFwusWTW\",\"NioGGZL9KCn5Ln96t\",\"fD2vkjhwWmxbs3aAn\",\"8DfhSneJpsw5uqLeM\",\"uFfEio8nzDvL8emhp\",\"hseQSt2EJ5uvb2pQv\",\"m8RTLuXqmythXHYZt\",\"neNNSEbgzx79GYshu\",\"RAEFpazbe6mhx3PLb\",\"TuoCjRBc7HaFtdg4C\",\"a2LqH6puhNvLCXjxj\",\"z8QYbZkEFptEYMnaH\",\"dAPrAmeeaMKNdRsSE\",\"9gx3GGfLHWJXKRHDo\",\"69K8S2NbzkqE9pAe5\",\"sacPXRKX59BE495oz\",\"QmCvNjXAaYsdF7hFT\",\"bWXyzXXm3dnAZ9Cwv\",\"7ypuw2RbuSADSg4kN\",\"PtGprKjgzCDqyrp6d\",\"2ScA9s5nu35nSMDpt\",\"kaSirKnRwXvGfe6ru\",\"dBexp26HAHeucxKP7\",\"Wg6PF8ir7QbKnYywB\",\"bQrQGrN9iC8sbjjAM\",\"5jDgvkGd4JwatrYXg\",\"pRJ4S2bFKo6XKiH59\",\"W56bWmpQeLJ9JEDsa\",\"pi76g3eRpnKrhee2a\",\"EbRM39k7fJpTnMezH\",\"XZCWhj8dfcs5wnkMx\",\"mwzNRK5zfFtABDXS2\",\"N3tyYcBfjKQmSmDvf\",\"Yj7ftjzyP67R5NFrH\",\"Ln5Ktpm8Zgxgdtgww\",\"XukHrpzdTBvX57KFP\",\"8WeJLyNE4h6nJ2dNh\",\"btabi3PdyisuY5tn9\",\"9tuiSCiHBmGrFx7FD\",\"WRqKDm2tkM9bL9A5B\",\"A3KrxZk4FiSymY6f2\",\"nXw9eTHFraWQtwJtY\",\"Wi4H6ayKsNDWWQCG5\",\"LCuvvWMwiGuqTwNRi\",\"EcBw39vkywQsT3Y2Z\",\"QRv96jmNaYsWkxQEG\",\"3SgSNoAB3sxaYeT3w\",\"HCfkcKnPs9mrJojdG\",\"kiq3z4o9ABhQd7aXJ\",\"b6PEkvr66YeCamroN\",\"GkYtSbQuheBF4Enys\",\"RSombfrtxS5PSXnyJ\",\"x9CWxL7Q7yCHdrAmq\",\"buX4mCQhtXCfBjeno\",\"dD3Aja8PZSMXMFSDY\",\"srJ34BaybkQh3qRkM\",\"c96gH88NsjR3MycAj\",\"MYaqDq32HkAjdYEbo\",\"umE8dRTGWzrZFp755\",\"6rvJwN4mcX7iYGjY7\",\"FEGpESiobxcqjMqF3\",\"t55QWHi8o4teZxqqE\",\"qat6GsLjQbgGc96JD\",\"xEX3TDY6C2h82dJTn\",\"Jbgtqh3TTASWyWdR9\",\"ztrfkKRfYBWokFwkf\",\"khdCaD6AGBiR6txLQ\",\"5LDvZHCDJqePeBrCg\",\"2ptN2mhjFwFcHyPZd\",\"tejkzX5N5NeBgjdke\",\"wFRLGjA56kj7xyhmv\",\"7e595f8a4urN7ijum\",\"rhS8qXRjZcpDXkwnE\",\"R9uaMzX2Y4ND8Cosm\",\"g3aT3LDch4qAxwP5c\",\"TCvpT4EPb8qNssNB7\",\"3qgJpdhyi4tKuqMdm\",\"Qv2jEtTnFCXX7cdd3\",\"nSLvkGEpiYCtcBLaa\",\"uw47663LqPME8btaA\",\"gZj6HTKJdPGJwPe2D\",\"Gn8rShvWCKLX3cxzx\",\"8BFSTCnoe2QggN64c\",\"fdyejapW3NWN7utPX\",\"afvP29FhRou2bTaav\",\"9E3eZeMb98LrA9F88\",\"zfyRY2ZoTpJmy6EHu\",\"AaAzAySpyo99siXzm\",\"f6CBJntX2RFd2zAjR\",\"hXTw4u6AuufEQHBSA\",\"KMR6vNzvSKMA2cXnK\",\"JXYvMawaDwnTLuf5F\",\"RsujLHaML6L3KinzK\",\"7D6LAX2sg2NMt7ZcY\",\"2ujydfqkBeL9uL4Ld\",\"unqzSsxpxj9sZ7rbD\",\"6kB5qypxcm62PHsEJ\",\"9du58gNDkWQEWivbB\",\"F8dA24AosSC8XXb7D\",\"eXQziXGcpwekMyABQ\",\"i5QeAsrM4m6hzPTku\",\"x2Cz7S8rCKJqCE3Xe\",\"NwczjpfNN8jXy5RF6\",\"5HGyJtoZ3AffzAZAv\",\"4To7THbHADdtXbewx\",\"5kMuNZuxiFcNRDkG4\",\"xLy94bAjaLwokPcZZ\",\"svHoRdg5sR9CLzZLC\",\"r72oFMcCQh4rBsKHb\",\"nFbmNzMQ38TncmfQX\",\"3Gf7ikLijfoxabiPY\"],\"quality\":[5,3,3,5,5,5,5,4,5,5,5,5,5,2,5,5,5,5,5,5,5,4,3,4,4,5,5,4,4,5,5,5,5,4,5,3,4,5,3,5,5,5,4,5,5,5,5,3,5,4,5,5,5,5,5,5,4,5,5,4,5,5,5,5,5,2,5,5,5,5,5,5,5]},\"tests\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"instructions\":{\"score\":0,\"rators\":[\"mNMQvcxKSSvqqMYCH\"]},\"flags\":0},\"editorId\":\"BkPgkDQGHm66X4Qai\",\"isHidden\":false,\"quality\":4.589041095890411,\"family\":[{\"_id\":\"ZK7TGkgmBxHKw8vsy\",\"language\":\"cpp\"},{\"_id\":\"TfL74CMecNnmtABNg\",\"language\":\"java\"},{\"_id\":\"bADsAhtb5g6pu5WYM\",\"language\":\"javascript\"},{\"_id\":\"CuPDWCCSyoFAECQy8\",\"language\":\"php\"},{\"_id\":\"RixixSPn6psQKYpnP\",\"language\":\"python3\"},{\"_id\":\"jyLpLXQsohkiY6NQE\",\"language\":\"ruby\"},{\"_id\":\"Rx6xAJgEhPiv4nwWx\",\"language\":\"swift\"}]}}"]