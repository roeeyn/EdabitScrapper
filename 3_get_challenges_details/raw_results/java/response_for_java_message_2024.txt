a["{\"msg\":\"result\",\"id\":\"569\",\"result\":{\"_id\":\"dreQhsnZJ7HGtsts5\",\"author\":\"Deep Xavier\",\"authorId\":\"a777e8chPvJkY3tKa\",\"code\":\"public class IntegerDigits {\\n\\tpublic static int count(int n) {\\n\\t\\t// your recursive solution in here\\n\\t}\\n}\\n\",\"difficulty\":2.1538461538461537,\"quality\":4.777777777777778,\"editorId\":\"a777e8chPvJkY3tKa\",\"familyId\":\"99w67mApk7uLFejNG\",\"instructions\":\"Create a function that *recursively* counts the integer's number of digits.\\n\\n\\n### Examples\\n```\\ncount(318) ➞ 3\\n \\ncount(-92563) ➞ 5\\n \\ncount(4666) ➞ 4\\n\\ncount(-314890) ➞ 6\\n\\ncount(654321) ➞ 6\\n\\ncount(638476) ➞ 6\\n```\\n\\n\\n### Notes\\n- You are expected to solve this challenge via **recursion**.\\n- You can check on the **Resources** tab for more details about *recursion* in Java.\\n- An iterative version of this challenge can be found via this [link](https://edabit.com/challenge/4r33Yd2HuEireb3Sm).\\n- A collection of challenges in recursion can be found via this [link](https://edabit.com/collection/Yx78jEBrKppHBNsoQ).\",\"isFree\":false,\"isHidden\":false,\"lab\":\"/** \\n================================= \\nTestGen 3.1 for JUnit 4.13.0 \\t\\t\\nTest Case: IntegerDigits::count \\nTimestamp: 10/05/2020 01:32:15 PM \\n--------------------------------- \\n® DARKKO 2020 © \\n================================= \\n\\n**/ \\n\\nimport static org.junit.Assert.assertEquals; \\nimport org.junit.Test; \\n\\npublic class IntegerDigitsTest { \\n\\t\\n\\t@Test\\n\\tpublic void test01() { \\n\\t\\tassertEquals(4, IntegerDigits.count(4666));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test02() { \\n\\t\\tassertEquals(3, IntegerDigits.count(544));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test03() { \\n\\t\\tassertEquals(1, IntegerDigits.count(0));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test04() { \\n\\t\\tassertEquals(3, IntegerDigits.count(318));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test05() { \\n\\t\\tassertEquals(5, IntegerDigits.count(-92563));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test06() { \\n\\t\\tassertEquals(6, IntegerDigits.count(314890));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test07() { \\n\\t\\tassertEquals(6, IntegerDigits.count(654321));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test08() { \\n\\t\\tassertEquals(6, IntegerDigits.count(638476));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test09() { \\n\\t\\tassertEquals(5, IntegerDigits.count(12345));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test10() { \\n\\t\\tassertEquals(7, IntegerDigits.count(1289396));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test11() { \\n\\t\\tassertEquals(7, IntegerDigits.count(-1232323));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test12() { \\n\\t\\tassertEquals(8, IntegerDigits.count(12839393));\\n\\t}\\n\\n\\t@Test\\n\\tpublic void test13() { \\n\\t\\tassertEquals(9, IntegerDigits.count(-231273683));\\n\\t}\\n\\n}\\n// end of tests\",\"language\":\"java\",\"stats\":{\"completed\":{\"ratings\":[3,3,3,3,3,3,4,2,2,1,0,2,4,1,2,3,1,2,2,0,1,2,2,3,2,2,1,1,2,2,2,3,5,3,4,3,3,1,1,1,3,3,1,3,1,2,1,3,2,2,2,1],\"quality\":[5,5,5,5,5,5,4,5,4],\"rators\":[\"a777e8chPvJkY3tKa\",\"Es4eX2stRpyoXeC7f\",\"Zs2ozzZQJk6h88o3H\",\"azAzSkvJd7eyXY9x9\",\"rehehi2Tr2mwaEoJE\",\"J48HzyrM4kmybqM48\",\"Ym8AjbKGSJooun3nt\",\"eqjXExxJKYth4CT8j\",\"6QHXQkQAcXMJ7C2kK\",\"Dfi5TiKaasaHsfFSo\",\"i5HXaHv7mmfq5LYLN\",\"9RPK7inRF9bnkkuNd\",\"Yp7uvStL97cC9fKkY\",\"gXTAie79kiw28tx5u\",\"bTCq6CQ3SGjrRfZeQ\",\"RAEFpazbe6mhx3PLb\",\"CkzRQbtwhkuXNLYRB\",\"jyoLggHk8xQKZuoQC\",\"QYqK32Y6AxvT74Aaa\",\"beSt5pzrK2WWpJpna\",\"oMZovHkR6QqNvQwyc\",\"2sZrwmQcNFJG3d3HW\",\"2FTx4NfE9LFzdmGG6\",\"T2vhHPhRR96hRizq8\",\"fCTfZSgeDbRbTvDY4\",\"yXGiiSAR5nBHnH3yr\",\"xa3CFkeyE66qrfTZ9\",\"CRMSuRGAy3MgTBwA9\",\"QRv96jmNaYsWkxQEG\",\"pCbFsvyiooabCFEgd\",\"LNCb5rksJLJ43L4Nw\",\"2QpQKbJFAcJhuEzHL\",\"wT5gGgvjKc5wz59AQ\",\"mDWNyaaQ9hvPCRzSd\",\"WhAhzuHiAzwyh3jBq\",\"zza5WjC8QrHcoDZBF\",\"nHj7SC5cnmkTApbgY\",\"srJ34BaybkQh3qRkM\",\"uNbmzzmop6Ebp3xTu\",\"tdinF6MRzC6AdNX8g\",\"buX4mCQhtXCfBjeno\",\"rhS8qXRjZcpDXkwnE\",\"Yohr2MmAyaWGMbB35\",\"TCvpT4EPb8qNssNB7\",\"qaPjAANdnxFnWfj5d\",\"zLGFGHBjCBYHg3XuQ\",\"sxci7DYKNa6q22Sjq\",\"KMR6vNzvSKMA2cXnK\",\"htXCitorobtqYymjN\",\"8RXqrsAh8aAdKCrgC\",\"a49eNnfRwSMxsDJXf\",\"rWhXHhzF4W8bea6LP\",\"PAEWysAAFheYiYPBp\",\"uw47663LqPME8btaA\",\"xNwRx7v44XnPwa3qm\",\"wFRLGjA56kj7xyhmv\"],\"total\":63},\"flags\":1},\"summary\":\"Create a function that recursively counts the integer's number of digits.\\n\\nExamples\\ncount(318) ➞ 3\\n\\ncount(-92563) ➞ 5\\n\\ncount(4666) ➞ 4\\n\\ncount(-314890) ➞ 6\\n\\ncount(654321) ➞ 6\\n\\ncount(638476) ➞ 6\\n\\nNotes\\nYou are expected to solve this challenge via recursion.\\nYou can check on the Resources tab for more details about recursion in Java.\\nAn iterative version of this\",\"tags\":[\"recursion\",\"math\"],\"timestamp\":{\"$date\":1601836315842},\"title\":\"Recursion: Integer Digits Count\",\"family\":[{\"_id\":\"dreQhsnZJ7HGtsts5\",\"language\":\"java\"},{\"_id\":\"SRat7mpAZBRR5RruZ\",\"language\":\"javascript\"},{\"_id\":\"ntJXZh4W8khX9nLPG\",\"language\":\"python3\"}]}}"]