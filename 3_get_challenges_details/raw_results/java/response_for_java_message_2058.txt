a["{\"msg\":\"result\",\"id\":\"584\",\"result\":{\"_id\":\"YPgPqMa7adXdh2svk\",\"author\":\"Mateusz Mędrowski\",\"authorId\":\"hPx9H3YM8j2k94DNW\",\"code\":\"public class Challenge {\\n  public static String javelinThrow(double v, int a) {\\n\\t\\t\\n  }\\n}\",\"difficulty\":2.176470588235294,\"editorId\":\"BkPgkDQGHm66X4Qai\",\"familyId\":\"jew93kFk8v29h88wY\",\"instructions\":\"Write a function that takes initial speed (`v` in m/s) and throw angle (`a` in degrees) and returns the maximum height and maximum range reached by javelin as a string.\\n\\n### Examples\\n```\\njavelinThrow(36.7, 45) ➞ \\\"Ymax=34m, Xmax=137m\\\"\\n\\njavelinThrow(51.3, 20) ➞ \\\"Ymax=16m, Xmax=172m\\\"\\n\\njavelinThrow(100.1, 89) ➞ \\\"Ymax=511m, Xmax=36m\\\"\\n```\\n\\n### Notes\\n- Javelin starts moving at `h=0m`.\\n- Gravitational acceleration is `g=9.81 m/s^2`.\\n- All results should be rounded to the nearest whole number.\\n- You can find all mathematical equations in **Resources**.\\n- Remember that `Math.sin()` and `Math.cos()` methods don't take degree as an argument.\",\"isFree\":false,\"isHidden\":false,\"lab\":\"import org.junit.Test;\\nimport static org.junit.Assert.assertEquals;\\n\\npublic class ChallengeTests {\\n  @Test\\n  public void test1() {\\n    assertEquals(\\\"Ymax=185m, Xmax=980m\\\", Challenge.javelinThrow(100.0,37));\\n  }\\n\\n\\t@Test\\n  public void test2() {\\n    assertEquals(\\\"Ymax=34m, Xmax=137m\\\", Challenge.javelinThrow(36.7,45));\\n  }\\n\\n\\t@Test\\n  public void test3() {\\n    assertEquals(\\\"Ymax=16m, Xmax=172m\\\", Challenge.javelinThrow(51.3,20));\\n  }\\n\\n\\t@Test\\n  public void test4() {\\n    assertEquals(\\\"Ymax=1m, Xmax=10m\\\", Challenge.javelinThrow(11.1,25));\\n  }\\n\\n\\t@Test\\n  public void test5() {\\n    assertEquals(\\\"Ymax=120m, Xmax=572m\\\", Challenge.javelinThrow(75.5,40));\\n  }\\n\\n\\t@Test\\n  public void test6() {\\n    assertEquals(\\\"Ymax=1426m, Xmax=6336m\\\", Challenge.javelinThrow(250.0,42));\\n  }\\n\\n\\t@Test\\n  public void test7() {\\n    assertEquals(\\\"Ymax=511m, Xmax=36m\\\", Challenge.javelinThrow(100.1,89));\\n  }\\n}\",\"language\":\"java\",\"stats\":{\"completed\":{\"ratings\":[2,2,2,2,2,2,1,3,2,3,2,2,5,1,1,2,3],\"rators\":[\"hPx9H3YM8j2k94DNW\",\"5seiNqw6ZXoF2GRRd\",\"4H7gXq7yqMbDNAgJ3\",\"Hjb6PnqW8HyRupjz5\",\"eN9PSgutrq2hjTYMX\",\"azAzSkvJd7eyXY9x9\",\"gXTAie79kiw28tx5u\",\"Es4eX2stRpyoXeC7f\",\"hhxjQREtmHSheH9Pj\",\"xEX3TDY6C2h82dJTn\",\"uw47663LqPME8btaA\",\"KMR6vNzvSKMA2cXnK\"],\"total\":20,\"quality\":[]},\"flags\":0},\"summary\":\"Write a function that takes initial speed (v in m/s) and throw angle (a in degrees) and returns the maximum height and maximum range reached by javelin as a string.\\n\\nExamples\\njavelinThrow(36.7, 45) ➞ \\\"Ymax=34m, Xmax=137m\\\"\\n\\njavelinThrow(51.3, 20) ➞ \\\"Ymax=16m, Xmax=172m\\\"\\n\\njavelinThrow(100.1, 89) ➞ \\\"Ymax=511m, Xmax=36m\\\"\\n\\nNotes\\nJavelin starts moving at h=0m.\\nGravi\",\"tags\":[\"physics\",\"math\"],\"timestamp\":{\"$date\":1598568959962},\"title\":\"Javelin Parabolic Throw\",\"quality\":0,\"family\":[{\"_id\":\"cS48jymeLrkjhDZ8x\",\"language\":\"cpp\"},{\"_id\":\"YPgPqMa7adXdh2svk\",\"language\":\"java\"},{\"_id\":\"8mSYeF49nHhxoT2Yw\",\"language\":\"javascript\"},{\"_id\":\"p5zThyFbZQMKmthxJ\",\"language\":\"python3\"},{\"_id\":\"4eSCrsTKk3vXrGCJA\",\"language\":\"ruby\"}]}}"]