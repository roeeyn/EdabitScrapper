[
  {
    "_id": "L7z5EW4MSoGBi6cXP",
    "difficulty": 0.20308393201331698,
    "language": "java",
    "summary": "This is an introduction to how challenges on Edabit work. In the Code tab above you'll see a starter function that looks like this:\n\npublic static boolean returnTrue() {\n\n}\n\nAll you have to do is type return true; between the curly braces { } and then click the Check button. If you did this correctly, the button will turn red and say SUBMIT FINAL. Click it and",
    "tags": [
      "validation",
      "strings",
      "language_fundamentals"
    ],
    "title": "How Edabit Works"
  },
  {
    "_id": "8Ty2vq2YtcBp6CFc8",
    "difficulty": 0.2670361917182915,
    "language": "java",
    "summary": "Create a method that takes two integers as arguments and returns their sum.\n\nExamples\nSumOfTwoNumbers(3, 2) ➞ 5\n\nSumOfTwoNumbers(-3, -6) ➞ -9\n\nSumOfTwoNumbers(7, 3) ➞ 10\n\nNotes\nDon't forget to return the result.\nIf you get stuck on a challenge, find help in the Resources tab.\nIf you're really stuck, unlock solutions in the Solutions tab.",
    "tags": [
      "algebra",
      "math",
      "numbers",
      "language_fundamentals"
    ],
    "title": "Return the Sum of Two Numbers"
  },
  {
    "_id": "2t8JDxF7wLrg7yJ5E",
    "difficulty": 0.2809004875250932,
    "language": "java",
    "summary": "Write a function that takes an integer minutes and converts it to seconds.\n\nExamples\nconvert(5) ➞ 300\n\nconvert(3) ➞ 180\n\nconvert(2) ➞ 120\n\nNotes\nDon't forget to return the result.\nIf you get stuck on a challenge, find help in the Resources tab.\nIf you're really stuck, unlock solutions in the Solutions tab.",
    "tags": [
      "language_fundamentals",
      "math",
      "numbers"
    ],
    "title": "Convert Minutes into Seconds"
  },
  {
    "_id": "Qir2pQ2Qp3uwrfJNZ",
    "difficulty": 0.328879753340185,
    "language": "java",
    "summary": "Create a function that takes a number as an argument, increments the number by +1 and returns the result.\n\nExamples\naddition(0) ➞ 1\n\naddition(9) ➞ 10\n\naddition(-3) ➞ -2\n\nNotes\nDon't forget to return the result.\nIf you get stuck on a challenge, find help in the Resources tab.\nIf you're really stuck, unlock solutions in the Solutions tab.",
    "tags": [
      "math",
      "numbers",
      "algebra"
    ],
    "title": "Return the Next Number from the Integer Passed"
  },
  {
    "_id": "5gpukjfi5rAH8MvKF",
    "difficulty": 0.334081436357807,
    "language": "java",
    "summary": "Create a function that returns true when num1 is equal to num2; otherwise return false.\n\nExamples\nisSameNum(4, 8) ➞ false\n\nisSameNum(2, 2) ➞  true\n\nisSameNum(42, 32) ➞  false\n\nNotes\nDon't forget to return the result.",
    "tags": [
      "numbers",
      "language_fundamentals",
      "conditions",
      "validation"
    ],
    "title": "Are the Numbers Equal?"
  },
  {
    "_id": "XJxu5LCnqN9K8SXm5",
    "difficulty": 0.3406060606060606,
    "language": "java",
    "summary": "Given an object containing counts of both upvotes and downvotes, return what vote count should be displayed. This is calculated by subtracting the number of downvotes from upvotes.\n\nExamples\ngetVoteCount({ upvotes: 13, downvotes: 0 }) ➞ 13\n\ngetVoteCount({ upvotes: 2, downvotes: 33 }) ➞ -31\n\ngetVoteCount({ upvotes: 132, downvotes: 132 }) ➞ 0\n\nNotes\nYou can expe",
    "tags": [
      "language_fundamentals",
      "arrays",
      "numbers",
      "objects"
    ],
    "title": "Upvotes vs Downvotes"
  },
  {
    "_id": "DmFnzAQzWhyRWdKPi",
    "difficulty": 0.34329845540607873,
    "language": "java",
    "summary": "Write a function that converts hours into seconds.\n\nExamples\nhowManySeconds(2) ➞ 7200\n\nhowManySeconds(10) ➞ 36000\n\nhowManySeconds(24) ➞ 86400\n\nNotes\n60 seconds in a minute, 60 minutes in an hour\nDon't forget to return your answer.",
    "tags": [
      "math",
      "numbers",
      "language_fundamentals"
    ],
    "title": "Convert Hours into Seconds"
  },
  {
    "_id": "cMKLM7ExBd3TFJwPA",
    "difficulty": 0.34927015020097313,
    "language": "java",
    "summary": "Create a function that takes length and width and finds the perimeter of a rectangle.\n\nExamples\nfindPerimeter(6, 7) ➞ 26\n\nfindPerimeter(20, 10) ➞ 60\n\nfindPerimeter(2, 9) ➞ 22\n\nNotes\nDon't forget to return the result.\nIf you're stuck, find help in the Resources tab.\nIf you're really stuck, find solutions in the Solutions tab.",
    "tags": [
      "math",
      "language_fundamentals",
      "numbers",
      "geometry"
    ],
    "title": "Find the Perimeter of a Rectangle"
  },
  {
    "_id": "6MTtawFBLqDRSqiSf",
    "difficulty": 0.34981458590852904,
    "language": "java",
    "summary": "Create a function that takes voltage and current  and returns the calculated power.\n\nExamples\npower(230, 10) ➞ 2300\n\npower(110, 3) ➞ 330\n\npower(480, 20) ➞ 9600\n\nNotes\nN/A",
    "tags": [
      "numbers",
      "math"
    ],
    "title": "Power Calculator"
  },
  {
    "_id": "gdRGePvnZDfQGDS8g",
    "difficulty": 0.35135135135135137,
    "language": "java",
    "summary": "Create a function that takes two integers and checks if they are equal.\n\nExamples\nisEqual(5, 6) ➞ false\n\nisEqual(1, 1) ➞ true\n\nisEqual(36, 35) ➞ false\n\nNotes\nN/A",
    "tags": [
      "conditions",
      "logic",
      "language_fundamentals"
    ],
    "title": "Are the Numbers Equal?"
  },
  {
    "_id": "zBhuXyFeSQdizC5LW",
    "difficulty": 0.3515315029360419,
    "language": "java",
    "summary": "Create a function that finds the maximum range of a triangle's third edge, where the side lengths are all integers.\n\nExamples\nnextEdge(8, 10) ➞ 17\n\nnextEdge(5, 7) ➞ 11\n\nnextEdge(9, 2) ➞ 10\n\nNotes\n(side1 + side2) - 1 = maximum range of third edge.\nThe side lengths of the triangle are positive integers.\nDon't forget to return the result.",
    "tags": [
      "algorithms",
      "math",
      "numbers"
    ],
    "title": "Maximum Edge of a Triangle"
  },
  {
    "_id": "B4HjZbBh9yuELmjna",
    "difficulty": 0.35211721139913055,
    "language": "java",
    "summary": "Write a function that takes the base and height of a triangle and return its area.\n\nExamples\ntriArea(3, 2) ➞ 3\n\ntriArea(7, 4) ➞ 14\n\ntriArea(10, 10) ➞ 50\n\nNotes\nThe area of a triangle is: (base * height) / 2\nDon't forget to return the result.\nIf you get stuck on a challenge, find help in the Resources tab.\nIf you're really stuck, unlock solutions in the Solutio",
    "tags": [
      "math",
      "numbers",
      "geometry"
    ],
    "title": "Area of a Triangle"
  },
  {
    "_id": "EP66YmuNMWhRZdniY",
    "difficulty": 0.3616319184040798,
    "language": "java",
    "summary": "Create a method that takes an integer as its only argument and returns true if it's less than or equal to zero, otherwise return false.\n\nExamples\nlessThanOrEqualToZero(5) ➞ false\n\nlessThanOrEqualToZero(0) ➞ true\n\nlessThanOrEqualToZero(-2) ➞ true\n\nNotes\nDon't forget to return the result.\nIf you get stuck on a challenge, find help in the Resources tab.\nIf you're",
    "tags": [
      "conditions",
      "validation",
      "language_fundamentals"
    ],
    "title": "Is the Number Less than or Equal to Zero?"
  },
  {
    "_id": "RNMKdSEhxdxf2fWsa",
    "difficulty": 0.3635257301808067,
    "language": "java",
    "summary": "There is a single operator in Java, capable of providing the remainder of a division operation. Two numbers are passed as parameters. The first parameter divided by the second parameter will have a remainder, possibly zero. Return that value.\n\nExamples\nremainder(1, 3) ➞ 1\n\nremainder(3, 4) ➞ 3\n\nremainder(-9, 45) ➞ -9\n\nremainder(5, 5) ➞ 0\n\nNotes\nThe tests only u",
    "tags": [
      "math",
      "numbers"
    ],
    "title": "Return the Remainder from Two Numbers"
  },
  {
    "_id": "ZuoKAgmH8G2vHtLzi",
    "difficulty": 0.36529041287613717,
    "language": "java",
    "summary": "Write a function that returns the string \"something\" joined with a space \" \" and the given argument a.\n\nExamples\ngiveMeSomething(\"is better than nothing\") ➞ \"something is better than nothing\"\n\ngiveMeSomething(\"Bob Jane\") ➞ \"something Bob Jane\"\n\ngiveMeSomething(\"something\") ➞ \"something something\"\n\nNotes\nAssume an input is given.",
    "tags": [
      "language_fundamentals",
      "strings"
    ],
    "title": "Return Something to Me!"
  },
  {
    "_id": "BeW6HMLCfGzHxkzbe",
    "difficulty": 0.3663003663003663,
    "language": "java",
    "summary": "Fix the code in the Code tab so the function returns true if and only if x is equal to 7.\n\nExamples\nChallenge.isSeven(4) ➞ false\n\nChallenge.isSeven(9) ➞ false\n\nChallenge.isSeven(7) ➞ true\n\nNotes\nThe bug can be hard to find, so look closely!",
    "tags": [
      "bugs",
      "language_fundamentals",
      "validation"
    ],
    "title": "Fix the Expression"
  },
  {
    "_id": "Phy3ESenwRH6KNytm",
    "difficulty": 0.3679417122040073,
    "language": "java",
    "summary": "A student learning Java was trying to make a function. His code should concatenate a passed string name with string \"Edabit\" and store it in a variable called result. He needs your help to fix this code.\n\nExamples\nnameString(\"Mubashir\") ➞ \"MubashirEdabit\"\n\nnameString(\"Matt\") ➞ \"MattEdabit\"\n\nnameString(\"java\") ➞ \"javaEdabit\"\n\nNotes\nDon't forget to return the re",
    "tags": [
      "bugs",
      "functional_programming",
      "language_fundamentals",
      "strings"
    ],
    "title": "Basic Variable Assignment"
  },
  {
    "_id": "eqcCH2WbEXFLDyiQi",
    "difficulty": 0.37045203969129,
    "language": "java",
    "summary": "Create a function that takes the age in years and returns the age in days.\n\nExamples\ncalcAge(65) ➞ 23725\n\ncalcAge(0) ➞ 0\n\ncalcAge(20) ➞ 7300\n\nNotes\nUse 365 days as the length of a year for this challenge.\nIgnore leap years and days between last birthday and now.\nExpect only positive integer inputs.",
    "tags": [
      "algebra",
      "algorithms",
      "math"
    ],
    "title": "Convert Age to Days"
  },
  {
    "_id": "FSKb2sKrGoejfJLrd",
    "difficulty": 0.3723404255319149,
    "language": "java",
    "summary": "Given two numbers, return true if the sum of both numbers is less than 100. Otherwise return false.\n\nExamples\nlessThan100(22, 15) ➞ true\n// 22 + 15 = 37\n\nlessThan100(83, 34) ➞ false\n// 83 + 34 = 117\n\nlessThan100(3, 77) ➞ true\n\nNotes\nN/A",
    "tags": [
      "math",
      "validation",
      "language_fundamentals"
    ],
    "title": "Less Than 100?"
  },
  {
    "_id": "JAtN6KLtahAkmT3n3",
    "difficulty": 0.3731540084388186,
    "language": "java",
    "summary": "Create a function that takes a name and returns a greeting in the form of a string.\n\nExamples\nhelloName(\"Gerald\") ➞ \"Hello Gerald!\"\n\nhelloName(\"Tiffany\") ➞ \"Hello Tiffany!\"\n\nhelloName(\"Ed\") ➞ \"Hello Ed!\"\n\nNotes\nThe input is always a name (as string).\nDon't forget the exclamation mark!\nIf you get stuck on a challenge, find help in the Resources tab.\nIf you're r",
    "tags": [
      "strings",
      "language_fundamentals",
      "formatting"
    ],
    "title": "Name Greeting!"
  },
  {
    "_id": "ZdHBAkK9qfFCNKfPQ",
    "difficulty": 0.37318840579710144,
    "language": "java",
    "summary": "Given an n-sided regular polygon n, return the total sum of internal angles (in degrees).\n\nExamples\nsumOfAngles(3) ➞ 180\n\nsumOfAngles(4) ➞ 360\n\nsumOfAngles(6) ➞ 720\n\nNotes\nn will always be greater than 2.\nThe formula (n - 2) x 180 gives the sum of all the measures of the angles of an n-sided polygon.",
    "tags": [
      "math",
      "numbers",
      "functional_programming"
    ],
    "title": "Sum Of Polygon Angles"
  },
  {
    "_id": "eKRNd9YqFNAXKuGxd",
    "difficulty": 0.37549407114624506,
    "language": "java",
    "summary": "In this challenge, a farmer is asking you to tell him how many legs can be counted among all his animals. The farmer breeds three species:\n\nchickens = 2 legs\ncows = 4 legs\npigs = 4 legs\n\nThe farmer has counted his animals and he gives you a subtotal for each species. You have to implement a function that returns the total number of legs of all the animals.\n\nEx",
    "tags": [
      "algorithms",
      "math",
      "language_fundamentals"
    ],
    "title": "The Farm Problem"
  },
  {
    "_id": "wWsD84bEGZgWp6NN5",
    "difficulty": 0.3760217983651226,
    "language": "java",
    "summary": "Create a function that takes the number of wins, draws and losses and calculates the number of points a football team has obtained so far.\n\nwins get 3 points\ndraws get 1 point\nlosses get 0 points\n\nExamples\nfootballPoints(3, 4, 2) ➞ 13\n\nfootballPoints(5, 0, 2) ➞ 15\n\nfootballPoints(0, 0, 1) ➞ 0\n\nNotes\nInputs will be numbers greater than or equal to 0.",
    "tags": [
      "algebra",
      "numbers",
      "math"
    ],
    "title": "Football Points"
  },
  {
    "_id": "L53ZXmSb32TCSkciE",
    "difficulty": 0.37681159420289856,
    "language": "java",
    "summary": "Create a function that accepts a measurement value in inches and returns the equivalent of the measurement value in feet.\n\nExamples\ninchestofeet(324) ➞ 27\n\ninchestofeet(12) ➞ 1\n\ninchestofeet(36) ➞ 3\n\nNotes\nIf inches are under 12, return 0.\n12 inches = 1 foot.",
    "tags": [
      "math",
      "language_fundamentals"
    ],
    "title": "Inches to Feet"
  },
  {
    "_id": "3MqevrgExMbgmBrLG",
    "difficulty": 0.37735849056603776,
    "language": "java",
    "summary": "You are counting points for a basketball game, given the amount of 2-pointers scored and 3-pointers scored, find the final points for the team and return that value.\n\nExamples\npoints(13, 12) ➞ 62\n\npoints(17, 12) ➞ 70\n\npoints(38, 8) ➞ 100\n\nNotes\nN/A",
    "tags": [
      "math",
      "numbers",
      "language_fundamentals"
    ],
    "title": "Basketball Points"
  },
  {
    "_id": "XjYMguBCEf7WqEu8M",
    "difficulty": 0.37778333750312737,
    "language": "java",
    "summary": "Create a function that returns true if an integer is evenly divisible by 5, and false otherwise.\n\nExamples\ndivisibleByFive(5) ➞ true\n\ndivisibleByFive(-55) ➞ true\n\ndivisibleByFive(37) ➞ false\n\nNotes\nDon't forget to return the result.\nIf you get stuck on a challenge, find help in the Resources tab.\nIf you're really stuck, unlock solutions in the Solutions tab.",
    "tags": [
      "numbers",
      "math",
      "validation"
    ],
    "title": "Check if an Integer is Divisible By Five"
  },
  {
    "_id": "78n7cFZqNLMzE2DKZ",
    "difficulty": 0.37886178861788616,
    "language": "java",
    "summary": "Write a function that takes two integers (hours, minutes), converts them to seconds, and adds them.\n\nExamples\nconvert(1, 3) ➞ 3780\n\nconvert(2, 0) ➞ 7200\n\nconvert(0, 0) ➞ 0\n\nNotes\nDon't forget to return the result.\nIf you get stuck on a challenge, find help in the Resources tab.\nIf you're really stuck, unlock solutions in the Solutions tab.",
    "tags": [
      "language_fundamentals",
      "math"
    ],
    "title": "Convert Hours and Minutes into Seconds"
  },
  {
    "_id": "SquoES5RxWr4CyX6G",
    "difficulty": 0.3791755508173419,
    "language": "java",
    "summary": "Create a function that takes an array containing only numbers and return the first element.\n\nExamples\ngetFirstValue([1, 2, 3]) ➞ 1\n\ngetFirstValue([80, 5, 100]) ➞ 80\n\ngetFirstValue([-500, 0, 50]) ➞ -500\n\nNotes\nThe first element in an array always has an index of 0.",
    "tags": [
      "arrays",
      "language_fundamentals"
    ],
    "title": "Return the First Element of an Array"
  },
  {
    "_id": "KWRQP86jxzM9SZmRM",
    "difficulty": 0.38275963518681966,
    "language": "java",
    "summary": "Create a function that reverses a boolean value.\n\nExamples\nreverse(true) ➞ false\n\nreverse(false) ➞ true\n\nNotes\nDon't forget to return the result.\nIf you get stuck on a challenge, find help in the Resources tab.\nIf you're really stuck, unlock solutions in the Solutions tab.",
    "tags": [
      "logic",
      "conditions",
      "language_fundamentals"
    ],
    "title": "Flip the Boolean"
  },
  {
    "_id": "NhwrwfjHZ9Dpz2J5K",
    "difficulty": 0.38475499092558985,
    "language": "java",
    "summary": "Java has a logical operator &&. The && operator takes two boolean values, and returns true if both values are true.\n\nConsider a && b:\n\na is checked if it is true or false.\nIf a is false,  false is returned.\nb is checked if it is true or false.\nIf b is false, false is returned.\nOtherwise, true is returned (as both a and b are therefore true ).\n\nThe && operator",
    "tags": [
      "logic",
      "language_fundamentals",
      "validation"
    ],
    "title": "Using the \"&&\" Operator"
  },
  {
    "_id": "KnRj8TSD63JBpzDfi",
    "difficulty": 0.3875476493011436,
    "language": "java",
    "summary": "Create a function that takes an integer and returns true if it's divisible by 100, otherwise return false.\n\nExamples\ndivisible(1) ➞ false\n\ndivisible(1000) ➞ true\n\ndivisible(100) ➞ true\nNotes\nDon't forget to return the result.\nIf you get stuck on a challenge, find help in the Resources tab.\nIf you're really stuck, unlock solutions in the Solutions tab.",
    "tags": [
      "algebra",
      "conditions",
      "math",
      "validation"
    ],
    "title": "Multiple of 100"
  },
  {
    "_id": "EnkJmMjFaivQ5txdW",
    "difficulty": 0.3881019830028329,
    "language": "java",
    "summary": "Make a function that returns an int boolean opposite of an int boolean given (flip the int boolean).\n\nExamples\nflipIntBool(1) ➞ 0\n\nflipIntBool(0) ➞ 1\n\nNotes\nN/A",
    "tags": [
      "logic",
      "language_fundamentals",
      "conditions",
      "validation"
    ],
    "title": "Flip the int Boolean"
  },
  {
    "_id": "pwDhjNEqDFWGzELLS",
    "difficulty": 0.3995943204868154,
    "language": "java",
    "summary": "Create a method that returns the number of frames shown in a given number of minutes for a certain FPS.\n\nExamples\nframes(1, 1) ➞ 60\n\nframes(10, 1) ➞ 600\n\nframes(10, 25) ➞ 15000\n\nNotes\nFPS stands for \"frames per second\" and it's the number of frames a computer screen shows every second.",
    "tags": [
      "algorithms",
      "language_fundamentals",
      "math",
      "numbers"
    ],
    "title": "Frames Per Second"
  },
  {
    "_id": "dLXXzJ5hkLAzkyDCm",
    "difficulty": 0.40401002506265665,
    "language": "java",
    "summary": "Given two integers, a and b, return true if a can be divided evenly by b. Return false otherwise.\n\nExamples\ndividesEvenly(98, 7) ➞ true\n// 98/7 = 14\n\ndividesEvenly(85, 4) ➞ false\n// 85/4 = 21.25\n\nNotes\na will always be greater than or equal to b.",
    "tags": [
      "math",
      "validation",
      "numbers"
    ],
    "title": "Divides Evenly"
  },
  {
    "_id": "uG3DEHwC5xMtHnCdm",
    "difficulty": 0.408622305529522,
    "language": "java",
    "summary": "Fix the code in the code tab to pass this challenge (only syntax errors). Look at the examples below to get an idea of what the function should do.\n\nExamples\nsquared(5) ➞ 25\n\nsquared(9) ➞ 81\n\nsquared(100) ➞ 10000\n\nNotes\nREAD EVERY WORD CAREFULLY, CHARACTER BY CHARACTER!\nDon't overthink this challenge; it's not supposed to be hard.",
    "tags": [
      "bugs",
      "language_fundamentals",
      "algebra"
    ],
    "title": "Correct the Mistakes"
  },
  {
    "_id": "kewawqtmmyXiiA9B6",
    "difficulty": 0.4106753812636166,
    "language": "java",
    "summary": "Create a function that takes three arguments prob, prize, pay and returns true if prob * prize > pay; otherwise return false.\n\nTo illustrate:\n\nprofitableGamble(0.2, 50, 9)\n\n... should yield true, since the net profit is 1 (0.2 * 50 - 9), and 1 > 0.\n\nExamples\nprofitableGamble(0.2, 50, 9) ➞ true\n\nprofitableGamble(0.9, 1, 2) ➞ false\n\nprofitableGamble(0.9, 3, 2) ➞",
    "tags": [
      "math",
      "validation",
      "conditions"
    ],
    "title": "Profitable Gamble"
  },
  {
    "_id": "djMjmJMbeEFxEsPiH",
    "difficulty": 0.4197267292912041,
    "language": "java",
    "summary": "Given two strings, firstName and lastName, return a single string in the format \"last, first\".\n\nExamples\nconcatName(\"First\", \"Last\") ➞ \"Last, First\"\n\nconcatName(\"John\", \"Doe\") ➞ \"Doe, John\"\n\nconcatName(\"Mary\", \"Jane\") ➞ \"Jane, Mary\"\n\nNotes\nDon't forget to return the result.\nIf you get stuck on a challenge, find help in the Resources tab.\nIf you're really stuck",
    "tags": [
      "strings",
      "formatting",
      "language_fundamentals"
    ],
    "title": "Concatenate First and Last Name into One String"
  },
  {
    "_id": "wr8zTBNNeLtspmLLT",
    "difficulty": 0.41977544367982617,
    "language": "java",
    "summary": "Create a function that returns true if a string is empty and false otherwise.\n\nExamples\nisEmpty(\"\") ➞ true\n\nisEmpty(\" \") ➞ false\n\nisEmpty(\"a\") ➞ false\n\nNotes\nA string containing only whitespaces \" \" does not count as empty.\nDon't forget to return the result.\nIf you get stuck on a challenge, find help in the Resources tab.\nIf you're really stuck, unlock solutio",
    "tags": [
      "strings",
      "validation",
      "language_fundamentals"
    ],
    "title": "Is the String Empty?"
  },
  {
    "_id": "f4Bndq3nGd69krdAe",
    "difficulty": 0.4217687074829932,
    "language": "java",
    "summary": "Create a function that calculates the area of a rectangle. If the arguments are invalid, your function must return -1.\n\nExamples\narea(3, 4) ➞ 12\n\narea(10, 11) ➞ 110\n\narea(-1, 5) ➞ -1\n\narea(0, 2) ➞ -1\n\nNotes\nN/A",
    "tags": [
      "algebra",
      "geometry",
      "math"
    ],
    "title": "Area of a Rectangle"
  },
  {
    "_id": "fY3bzat74jGhLMepS",
    "difficulty": 0.42276422764227645,
    "language": "java",
    "summary": "Emmy has written a function that returns a greeting to users. However, she's in love with Mubashir, and would like to greet him slightly differently. She added a special case in her function, but she made a mistake.\n\nCan you help her?\n\nExamples\ngreeting(\"Matt\") ➞ \"Hello, Matt!\"\n\ngreeting(\"Helen\") ➞ \"Hello, Helen!\"\n\ngreeting(\"Mubashir\") ➞ \"Hello, my Love!\"\n\nNot",
    "tags": [
      "strings",
      "bugs",
      "conditions"
    ],
    "title": "Buggy Code (Part 4)"
  },
  {
    "_id": "jMnHZ4ywxG8WGvDqC",
    "difficulty": 0.4306930693069307,
    "language": "java",
    "summary": "The Math.abs() function returns the absolute value of a number. This means that it returns a number's positive value. You can think of it as the distance away from zero.\n\nCreate a function that recreates this functionality.\n\nExamples\nabsolute(-1.217197940) ➞ 1.21719794\n\nabsolute(-12.1320) ➞ 12.132\n\nabsolute(-544.0) ➞ 544.0\n\nabsolute(4666) ➞ 4666.0\n\nabsolute(-3",
    "tags": [
      "language_fundamentals",
      "numbers",
      "math"
    ],
    "title": "Recreating the abs() Function"
  },
  {
    "_id": "b3wgTSBnd2HH44qzr",
    "difficulty": 0.437984496124031,
    "language": "java",
    "summary": "Create a function that takes a number as an argument and returns negative of that number. Return negative numbers without any change.\n\nExamples\nreturnNegative(4) ➞ -4\n\nreturnNegative(5) ➞ -5\n\nreturnNegative(-54) ➞ -54\n\nreturnNegative(0) ➞ 0\n\nNotes\nN/A",
    "tags": [
      "numbers",
      "logic",
      "language_fundamentals"
    ],
    "title": "Return Negative"
  },
  {
    "_id": "4PGHC3nqN9gH2svby",
    "difficulty": 0.4382716049382716,
    "language": "java",
    "summary": "A vehicle needs 10 times the amount of fuel than the distance it travels. However, it must always carry a minimum of 100 fuel before setting off.\n\nCreate a function which calculates the amount of fuel it needs, given the distance.\n\nExamples\ncalculateFuel(15) ➞ 150\n\ncalculateFuel(23.5) ➞ 235\n\ncalculateFuel(3) ➞ 100\n\nNotes\nDistance will be a number greater than",
    "tags": [
      "language_fundamentals",
      "numbers",
      "control_flow"
    ],
    "title": "Let's Fuel Up!"
  },
  {
    "_id": "umRwYETG7ogToZhSi",
    "difficulty": 0.4386836386215461,
    "language": "java",
    "summary": "Create a method that takes an integer as an argument and returns \"even\" for even integers and \"odd\" for odd integers.\n\nExamples\nisEvenOrOdd(3) ➞ \"odd\"\n\nisEvenOrOdd(146) ➞ \"even\"\n\nisEvenOrOdd(19) ➞ \"odd\"\n\nNotes\nDont forget to return the result.\nInput will always be a valid integer.\nExpect negative integers (whole numbers).\nTests are case sensitive (return \"even",
    "tags": [
      "math",
      "validation",
      "numbers",
      "conditions"
    ],
    "title": "Is the Number Even or Odd?"
  },
  {
    "_id": "xTqLduZ9McaZ3bE2j",
    "difficulty": 0.449438202247191,
    "language": "java",
    "summary": "Create a function that takes a number n and returns the nth even number beginning with 0 as the first.\n\nExamples\neven(1) ➞ 0\n// 0 is first even number\n\neven(2) ➞ 2\n// 2 is second even number\n\neven(100) ➞ 198\n\nNotes\nN/A",
    "tags": [
      "math",
      "numbers",
      "language_fundamentals"
    ],
    "title": "Nth Even Number"
  },
  {
    "_id": "sn9KfW72BBoT7eesC",
    "difficulty": 0.44966442953020136,
    "language": "java",
    "summary": "Mubashir created an infinite loop! Help him by fixing the code in the code tab to pass this challenge. Look at the examples below to get an idea of what the function should do.\n\nExamples\nPrintArray(1) ➞ [1]\n\nPrintArray(3) ➞ [1, 2, 3]\n\nPrintArray(6) ➞ [1, 2, 3, 4, 5, 6]\n\nNotes\nREAD EVERY WORD CAREFULLY, CHARACTER BY CHARACTER!\nDon't overthink this challenge; it",
    "tags": [
      "loops",
      "bugs",
      "numbers",
      "data_structures"
    ],
    "title": "Buggy Code (Part 5)"
  },
  {
    "_id": "u7y8wBK7Z5woycKa6",
    "difficulty": 0.45161290322580644,
    "language": "java",
    "summary": "Create a function that takes an object argument sizes (contains width, length, height keys) and returns the volume of the box.\n\nExamples\nvolumeOfBox({ width: 2, length: 5, height: 1 }) ➞ 10\n\nvolumeOfBox({ width: 4, length: 2, height: 2 }) ➞ 16\n\nvolumeOfBox({ width: 1, length: 2, height: 3 }) ➞ 6\n\nNotes\nDon't forget to return the result.\nRemember that the value",
    "tags": [
      "math",
      "objects",
      "geometry"
    ],
    "title": "Volume of a Box"
  },
  {
    "_id": "Nz6AzC4v8jyMCH2Tu",
    "difficulty": 0.4594594594594595,
    "language": "java",
    "summary": "Create a function that takes two arguments. Both arguments are integers, a and b. Return true if one of them is 10 or if their sum is 10.\n\nExamples\nmakesTen(9, 10) ➞ true\n\nmakesTen(9, 9) ➞ false\n\nmakesTen(1, 9) ➞ true\n\nNotes\nDon't forget to return the result.",
    "tags": [
      "algorithms",
      "conditions",
      "validation"
    ],
    "title": "Two Makes Ten"
  },
  {
    "_id": "ssHiWN2GD4oy7swEg",
    "difficulty": 0.45947556615017876,
    "language": "java",
    "summary": "Here's an image of four models. Some of the cubes are hidden behind other cubes. Model one consists of one cube. Model two consists of four cubes, and so on...\n\nStack the Boxes\n\nWrite a function that takes a number n and returns the number of stacked boxes in a model n levels high, visible and invisible.\n\nExamples\nstackBoxes(1) ➞ 1\n\nstackBoxes(2) ➞ 4\n\nstackBox",
    "tags": [
      "math",
      "numbers",
      "algebra",
      "algorithms",
      "logic"
    ],
    "title": "Stack the Boxes"
  },
  {
    "_id": "a9Shdt64Ak2Hwq7oP",
    "difficulty": 0.4595605423094904,
    "language": "java",
    "summary": "Create a function that takes two strings as arguments and return either true or false depending on whether the total number of characters in the first string is equal to the total number of characters in the second string.\n\nExamples\ncomp(\"AB\", \"CD\") ➞ true\n\ncomp(\"ABC\", \"DE\") ➞ false\n\ncomp(\"hello\", \"edabit\") ➞ false\n\nNotes\nDon't forget to return the result.\nIf",
    "tags": [
      "strings",
      "conditions",
      "validation"
    ],
    "title": "Compare Strings by Count of Characters"
  },
  {
    "_id": "FAw6mykprqcsBW5Gr",
    "difficulty": 0.4631043256997455,
    "language": "java",
    "summary": "Given two arguments, return an array which contains these two arguments.\n\nExamples\nmakePair(1, 2) ➞ [1, 2]\n\nmakePair(51, 21) ➞ [51, 21]\n\nmakePair(512124, 215) ➞ [512124, 215]\n\nNotes\nN/A",
    "tags": [
      "language_fundamentals",
      "arrays"
    ],
    "title": "Pair Management"
  },
  {
    "_id": "Zyq5wqkxMFJFSWQ36",
    "difficulty": 0.4684385382059801,
    "language": "java",
    "summary": "Given a Rubik's Cube with a side length of n, return the number of individual stickers that are needed to cover the whole cube.\n\nPictures of Rubik's Cubes\n\nThe Rubik's cube of side length 1 has 6 stickers.\nThe Rubik's cube of side length 2 has 24 stickers.\nThe Rubik's cube of side length 3 has 54 stickers.\n\nExamples\nhowManyStickers(1) ➞ 6\n\nhowManyStickers(2) ➞",
    "tags": [
      "math",
      "algebra"
    ],
    "title": "Number of Stickers"
  },
  {
    "_id": "d7zedhqw2WKhqYm2C",
    "difficulty": 0.472020725388601,
    "language": "java",
    "summary": "Create a function that determines whether or not it's possible to split a pie fairly given these three parameters:\n\nTotal number of slices.\nNumber of recipients.\nHow many slices each person gets.\n\nThe function will be in this form:\n\nequalSlices(total slices, no. recipients, slices each)\n\nExamples\nequalSlices(11, 5, 2) ➞ true\n// 5 people x 2 slices each = 10 sl",
    "tags": [
      "algebra",
      "math",
      "validation"
    ],
    "title": "Slice of Pie"
  },
  {
    "_id": "MvBYeGybFo4iEpWyp",
    "difficulty": 0.4724264705882353,
    "language": "java",
    "summary": "Write a function that checks whether a person can watch an MA15+ rated movie. One of the following two conditions is required for admittance:\n\nThe person is at least 15 years old.\nThey have parental supervision.\n\nThe function accepts two parameters, age and isSupervised. Return a boolean.\n\nExamples\nacceptIntoMovie(14, true) ➞ true\n\nacceptIntoMovie(14, false) ➞",
    "tags": [
      "conditions",
      "algorithms",
      "validation"
    ],
    "title": "Movie Theatre Admittance"
  },
  {
    "_id": "fvhabpSbe4vjWS9rP",
    "difficulty": 0.48220064724919093,
    "language": "java",
    "summary": "Write a function that validates whether a number n is  within the lower and upper bounds. Return true if so, false otherwise.\n\nExamples\nintWithinBounds(3, 1, 9) ➞ true\n\nintWithinBounds(6, 1, 6) ➞ false\n\nintWithinBounds(3, 3, 8) ➞ true\n\nNotes\nThe term \"within bounds\" means, that, a number is considered greater than or  equal to the lower bound but lesser than t",
    "tags": [
      "language_fundamentals",
      "validation",
      "numbers",
      "conditions"
    ],
    "title": "Integer in Range?"
  },
  {
    "_id": "7nsM8Lm243axLE2ei",
    "difficulty": 0.4854368932038835,
    "language": "java",
    "summary": "I have a bucket containing an amount of navy blue paint and I'd like to paint as many walls as possible. Create a function that returns the number of complete walls that I can paint, before I need to head to the shops to buy more.\n\nn is the number of square meters I can paint.\nw and h are the widths and heights of a single wall in meters.\n\nExamples\nhowManyWall",
    "tags": [
      "numbers",
      "math"
    ],
    "title": "I'd Like A New Shade Of Blue, Please"
  },
  {
    "_id": "dGK2bxcojgLzbEZjp",
    "difficulty": 0.48915065096094235,
    "language": "java",
    "summary": "Write a function that returns the length of a string. Make your function recursive.\n\nExamples\nlength(\"apple\") ➞ 5\n\nlength(\"make\") ➞ 4\n\nlength(\"a\") ➞ 1\n\nlength(\"\") ➞ 0\n\nNotes\nCheck the Resources tab for info on recursion.",
    "tags": [
      "recursion",
      "strings",
      "language_fundamentals"
    ],
    "title": "Recursion: Length of a String"
  },
  {
    "_id": "hdT772EaY6ofm4ef4",
    "difficulty": 0.49466192170818507,
    "language": "java",
    "summary": "Create a function which validates whether a bridge is safe to walk on (i.e. has no gaps in it to fall through).\n\nExamples\nisSafeBridge(\"####\") ➞ true\n\nisSafeBridge(\"## ####\") ➞ false\n\nisSafeBridge(\"#\") ➞ true\n\nisSafeBridge(\"### ####\") ➞ false\n\nisSafeBridge(\"#####\") ➞ true\n\nNotes\nYou can expect the bridge's ends are connected to its surrounding.",
    "tags": [
      "language_fundamentals",
      "strings",
      "validation"
    ],
    "title": "Broken Bridge"
  },
  {
    "_id": "pybneyJ7Gmox2mYhM",
    "difficulty": 0.49523809523809526,
    "language": "java",
    "summary": "Create a function that takes an angle in radians and converts it into degrees.\n\nExamples\ntoDegree(Math.PI) ➞ 180.0\n\ntoDegree(Math.PI/2) ➞ 90.0\n\ntoDegree(Math.PI/4) ➞ 45.0\n\nNotes\nThe input angles are in radians.\nYou will need to decide the data types for the input and output of the function.\nCheck out the Resources tab.\nThere are 360 degrees and 2 pi radians in",
    "tags": [
      "math",
      "language_fundamentals"
    ],
    "title": "Radian to Degree"
  },
  {
    "_id": "RvRwNMPXYjFcWQD2G",
    "difficulty": 0.5034106412005457,
    "language": "java",
    "summary": "Create a function that takes a string and returns it as an integer.\n\nExamples\nstringInt(\"6\") ➞ 6\n\nstringInt(\"1000\") ➞ 1000\n\nstringInt(\"12\") ➞ 12\n\nNotes\nAll numbers will be whole.\nAll numbers will be positive.",
    "tags": [
      "strings",
      "numbers",
      "language_fundamentals"
    ],
    "title": "Return a String as an Integer"
  },
  {
    "_id": "vzhWSMR2A6wDyFK2o",
    "difficulty": 0.5071090047393365,
    "language": "java",
    "summary": "Given two arrays, which represent two sandwiches, return whether both sandwiches use the same type of bread. The bread will always be found at the start and end of the array.\n\nExamples\nhasSameBread(\n  [\"white bread\", \"lettuce\", \"white bread\"],\n  [\"white bread\", \"tomato\", \"white bread\"]\n) ➞ true\n\nhasSameBread(\n  [\"brown bread\", \"chicken\", \"brown bread\"],\n  [\"wh",
    "tags": [
      "arrays",
      "language_fundamentals",
      "validation",
      "logic"
    ],
    "title": "Similar Bread"
  },
  {
    "_id": "AWcHJdDbjMLT74FfX",
    "difficulty": 0.5074074074074074,
    "language": "java",
    "summary": "Write a function that returns true if both numbers are:\n\nSmaller than 0, OR ...\nGreater than 0, OR ...\nExactly 0\n\nOtherwise, return false.\n\nExamples\nboth(6, 2) ➞ true\n\nboth(0, 0) ➞ true\n\nboth(-1, 2) ➞ false\n\nboth(0, 2) ➞ false\n\nNotes\nInputs will always be two numbers.",
    "tags": [
      "numbers",
      "math",
      "validation",
      "conditions"
    ],
    "title": "Both Zero, Negative or Positive"
  },
  {
    "_id": "i8bDeBaQtZg6wDGYL",
    "difficulty": 0.513177159590044,
    "language": "java",
    "summary": "Create a function that returns true if a string contains any spaces.\n\nExamples\nhasSpaces(\"hello\") ➞ false\n\nhasSpaces(\"hello, world\") ➞ true\n\nhasSpaces(\" \") ➞ true\n\nhasSpaces(\"\") ➞ false\n\nhasSpaces(\",./!@#\") ➞ false\n\nNotes\nAn empty string does not contain any spaces.\nTry doing this without RegEx.",
    "tags": [
      "strings",
      "validation"
    ],
    "title": "Check String for Spaces"
  },
  {
    "_id": "vRBrS8n6M5fgLz28H",
    "difficulty": 0.5159106296547055,
    "language": "java",
    "summary": "Create a function that returns the ASCII value of the passed in character.\n\nExamples\nctoa('A') ➞ 65\n\nctoa('m') ➞ 109\n\nctoa('[') ➞ 91\n\nctoa('\\') ➞ 92\n\nNotes\nDon't forget to return the result.\nIf you get stuck on a challenge, find help in the Resources tab.\nIf you're really stuck, unlock solutions in the Solutions tab.",
    "tags": [
      "numbers",
      "algorithms",
      "strings"
    ],
    "title": "Char-to-ASCII"
  },
  {
    "_id": "9FXkWr6AAc3rFHnyL",
    "difficulty": 0.5192307692307693,
    "language": "java",
    "summary": "Backpack Bill and Wallet Will set off for the annual festival. As they approach the stalls, Bill retorts that he'll be able to bring home more stuff than Will. Taking this as a challenge, Will refutes and a competition spurs into action.\n\nBackpack Bill has an infinite inventory space, but a limited number of coins.\nWallet Will has an infinite number of coins,",
    "tags": [
      "numbers",
      "logic",
      "conditions"
    ],
    "title": "A Day at the Market"
  },
  {
    "_id": "GDWatbfCLg9H7uPMF",
    "difficulty": 0.5206882425235559,
    "language": "java",
    "summary": "Create a method that accepts an array and returns the last item in the array.\n\nExamples\ngetLastItem([1, 2, 3]) ➞ 3\n\ngetLastItem([0]) ➞ 0\n\ngetLastItem([-1, -3]) ➞ -3\n\nNotes\nDon't forget to return the result.\nIf you get stuck on a challenge, find help in the Resources tab.\nIf you're really stuck, unlock solutions in the Solutions tab.",
    "tags": [
      "arrays",
      "validation",
      "language_fundamentals"
    ],
    "title": "Return the Last Element in an Array"
  },
  {
    "_id": "ZGzabS3xzpPcT55E6",
    "difficulty": 0.5225806451612903,
    "language": "java",
    "summary": "As you complete challenges on Edabit, you gain experience points depending on the level of difficulty of the challenge. The points for each level of difficulty are as follows:\n\nDifficulty | Experience Points\n--- | ---\nVery Easy | 5XP\nEasy | 10XP\nMedium | 20XP\nHard | 40XP\nVery Hard | 80XP\n\nGiven an array of how many challenges a person has completed per level o",
    "tags": [
      "arrays",
      "numbers",
      "strings"
    ],
    "title": "Edabit Experience Points"
  },
  {
    "_id": "R5ZkenxiDWShEfFCy",
    "difficulty": 0.523094688221709,
    "language": "java",
    "summary": "For each of the 6 coffee cups I buy, I get a 7th cup free. In total, I get 7 cups. Create a function that takes n cups bought and return as an integer the total number of cups I would get.\n\nExamples\ntotalCups(6) ➞ 7\n\ntotalCups(12) ➞ 14\n\ntotalCups(213) ➞ 248\n\nNotes\nNumber of cups I bought + number of cups I got for free.\nOnly valid inputs will be given.",
    "tags": [
      "math",
      "logic",
      "numbers",
      "algorithms"
    ],
    "title": "Free Coffee Cups"
  },
  {
    "_id": "6KjJ7PB6iTqDbShyF",
    "difficulty": 0.5238095238095238,
    "language": "java",
    "summary": "Given an array and an index, return the value of the array with the given index.\n\nExamples\nvalueAt([1, 2, 3, 4, 5, 6], 10 / 2) ➞ 6\n\nvalueAt([1, 2, 3, 4, 5, 6], 8 / 2) ➞ 5\n\nvalueAt([1, 2, 3, 4], 6.535355314 / 2) ➞ 4\n\nNotes\nMath.floor() can be helpful.",
    "tags": [
      "language_fundamentals",
      "arrays"
    ],
    "title": "Array Indexing"
  },
  {
    "_id": "XMWWPeZYeYDfd25Ys",
    "difficulty": 0.5243243243243243,
    "language": "java",
    "summary": "Create a function that will work as the modulus operator % without using the modulus operator. The modulus operator is a way to determine the remainder of a division operation. Instead of returning the result of the division, the modulo operation returns the whole number remainder.\n\nExamples\nmod(5, 2) ➞ 1\n\nmod(218, 5) ➞ 3\n\nmod(6, 3) ➞ 0\n\nNotes\nDon't use the %",
    "tags": [
      "functional_programming"
    ],
    "title": "The Modulus Operator Function"
  },
  {
    "_id": "pzLMEsMpbCLsPXqy2",
    "difficulty": 0.5273876404494382,
    "language": "java",
    "summary": "Create a function that takes in a word and determines whether or not it is plural. A plural word is one that ends in \"s\".\n\nExamples\nisPlural(\"changes\") ➞ true\n\nisPlural(\"change\") ➞ false\n\nisPlural(\"dudes\") ➞ true\n\nisPlural(\"magic\") ➞ false\n\nNotes\nDon't forget to return the result.\nRemember that return true (boolean) is not the same as return \"true\" (string).\nT",
    "tags": [
      "strings",
      "validation",
      "conditions"
    ],
    "title": "Is the Word Singular or Plural?"
  },
  {
    "_id": "D6Lcut2s2gEzdCPvv",
    "difficulty": 0.5282861896838602,
    "language": "java",
    "summary": "Write a function that validates whether two strings are identical. Make it case insensitive.\n\nExamples\nmatch(\"hello\", \"hELLo\") ➞ true\n\nmatch(\"motive\", \"emotive\") ➞ false\n\nmatch(\"venom\", \"VENOM\") ➞ true\n\nmatch(\"mask\", \"mAskinG\") ➞ false\n\nNotes\nN/A",
    "tags": [
      "strings",
      "validation",
      "language_fundamentals"
    ],
    "title": "Case Insensitive Comparison"
  },
  {
    "_id": "2fYkAMh9cGn5FpSZ9",
    "difficulty": 0.5283806343906511,
    "language": "java",
    "summary": "Write a function that takes two numbers and returns if they should be added, subtracted, multiplied or divided to get 24. If none of the operations can give 24, return \"none\".\n\nExamples\noperation(15, 9) ➞ \"added\"\n\noperation(26, 2) ➞ \"subtracted\"\n\noperation(11, 11) ➞ \"none\"\n\nNotes\nOnly integers are used as test input.\nNumbers should be added, subtracted, divide",
    "tags": [
      "math",
      "numbers"
    ],
    "title": "Add, Subtract, Multiply or Divide?"
  },
  {
    "_id": "yX3pRAE63JLW9Nz6D",
    "difficulty": 0.531986531986532,
    "language": "java",
    "summary": "Create a function that returns how many possible arrangements can come from a certain number of switches (on / off). In other words, for a given number of switches, how many different patterns of on and off can we have?\n\nExamples\nposCom(1) ➞ 2\n\nposCom(3) ➞ 8\n\nposCom(10) ➞ 1024\n\nNotes\nAll numbers will be whole and positive.",
    "tags": [
      "algebra",
      "math",
      "logic"
    ],
    "title": "On/Off Switches"
  },
  {
    "_id": "SQC525f4Wqn6F4LNC",
    "difficulty": 0.5333333333333333,
    "language": "java",
    "summary": "Create a function that takes an array and returns the sum of all numbers in the array.\n\nExamples\nsum([2, 7, 4]) ➞ 13\n\nsum([45, 3, 0]) ➞ 48\n\nsum([-2, 84, 23]) ➞ 105\n\nNotes\nN/A",
    "tags": [
      "arrays",
      "language_fundamentals",
      "math",
      "numbers"
    ],
    "title": "Get the Sum of All Array Elements"
  },
  {
    "_id": "3m2Xtr3vwYgrmra7t",
    "difficulty": 0.5376827896512936,
    "language": "java",
    "summary": "Write a function that returns true if k^k == n for input (n, k) and return false otherwise.\n\nExamples\nkToK(4, 2) ➞ true\n\nkToK(387420489, 9) ➞ true\n// 9^9 == 387420489\n\nkToK(3124, 5) ➞ false\n\nkToK(17, 3) ➞ false\n\nNotes\nThe ^ operator refers to exponentiation operation, not the bitwise XOR operation.",
    "tags": [
      "numbers",
      "math",
      "validation",
      "bit_operations"
    ],
    "title": "Testing K^K == N?"
  },
  {
    "_id": "JLdbbsyogfpFHmeLS",
    "difficulty": 0.5400696864111498,
    "language": "java",
    "summary": "Create a function that takes two numbers and a mathematical operator and returns the result.\n\nExamples\ncalculate(4, 9, \"+\") ➞ 13\n\ncalculate(12, 5, \"-\") ➞ 7\n\ncalculate(6, 3, \"*\") ➞ 18\n\ncalculate(25, 5, \"/\") ➞ 5\n\ncalculate(14, 3, \"%\") ➞ 2\n\nNotes\nNumbers can be negative.\nThe only operations used are those in the examples above.",
    "tags": [
      "strings",
      "math",
      "algebra"
    ],
    "title": "Calculate Using String Operation"
  },
  {
    "_id": "AvebYmr8f3ECRWEWc",
    "difficulty": 0.5402298850574713,
    "language": "java",
    "summary": "Create a method that takes a positive integer n and returns the nth \"star number\".\n\nA star number is a centered figurate number that represents a centered hexagram (six-pointed star), such as the one that Chinese checkers is played on.\n\nstar numbers for 1, 2 and 3\n\nExamples\nstarNumber(2) ➞ 13\n// n = 2\n// 2nd star number = 13\n\nstarNumber(3) ➞ 37\n// n = 3\n// 3rd",
    "tags": [
      "algebra",
      "math"
    ],
    "title": "Nth Star Number"
  },
  {
    "_id": "rhxxyrHreLDm6qJLu",
    "difficulty": 0.5419847328244275,
    "language": "java",
    "summary": "Create a function that inverts the rgb values in an array.\n\nExamples\ninvertColor([255, 255, 255]) ➞ [0, 0, 0]\n// [255, 255, 255] is the color white.\n// The opposite is [0, 0, 0], which is black.\n\ninvertColor([12, 13, 200]) ➞ [243, 242, 55]\n\ninvertColor([12, 17, 197]) ➞ [243, 238, 58]\n\ninvertColor([243, 242, 235]) ➞ [12, 13, 20]\n\ninvertColor([0, 0, 0]) ➞ [255,",
    "tags": [
      "data_structures",
      "algebra"
    ],
    "title": "Invert Colors"
  },
  {
    "_id": "YTGuwJBQjE4csZtLW",
    "difficulty": 0.5441176470588235,
    "language": "java",
    "summary": "Create a function that takes a string t and a number n and returns the repeated string n number of times.\n\nReturn \"Not a string!\" if given argument t is not a string,\n\nExamples\nrepeatString(\"Tesha\", 2) ➞ \"TeshaTesha\"\n\nrepeatString(\"Deep\", 3) ➞ \"DeepDeepDeep\"\n\nrepeatString(\"Matt\", 4) ➞ \"MattMattMattMatt\"\n\nrepeatString(2000, 7) ➞ \"Not a string!\"\n\nNotes\nIf you ge",
    "tags": [
      "strings",
      "conditions",
      "logic",
      "language_fundamentals"
    ],
    "title": "Repeat String"
  },
  {
    "_id": "3NTH452EBsJZ2ARsu",
    "difficulty": 0.5444444444444444,
    "language": "java",
    "summary": "Create a function that will put the first argument, a character, between every word in the second argument, a string.\n\nExamples\nadd(\"❤\", \"I love Tesh!\") ➞ \"I❤love❤Tesh!\"\n\nadd(\"👍\", \"Java is a lot of fun.\") ➞ \"Java👍is👍a👍lot👍of👍fun.\"\n\nadd(\"#\", \"hello world!\") ➞ \"hello#world!\"\n\nadd(\"&\", \"you me world\") ➞ \"you&me&world\"\n\nNotes\nMake sure there are no spaces be",
    "tags": [
      "strings",
      "formatting"
    ],
    "title": "WordCharWord"
  },
  {
    "_id": "LYAuwTojeNTyEiHgC",
    "difficulty": 0.5454545454545454,
    "language": "java",
    "summary": "A snail goes up the stairs. Every step, he must go up (distance = height of step), then go to the next step (distance =  length of step). He wants to reach the top of the tower (tower height = tower).\n\nWrite a function that returns the distance the snail must travel to the top of the tower.\n\nExamples\nTotalDistance(0.2, 0.4, 100.0) ➞ 300.0\n// Total distance is",
    "tags": [
      "algebra",
      "loops",
      "math",
      "numbers"
    ],
    "title": "Snail Goes Up the Stairs"
  },
  {
    "_id": "qGrtkvLkAZg3oARbN",
    "difficulty": 0.549127640036731,
    "language": "java",
    "summary": "You are given 2 out of 3 angles in a triangle, in degrees.\n\nWrite a function that classifies the missing angle as either \"acute\", \"right\", or \"obtuse\" based on its degrees.\n\nAn acute angle is less than 90 degrees.\nA right angle is exactly 90 degrees.\nAn obtuse angle is greater than 90 degrees (but less than 180 degrees).\n\nFor example: missingAngle(11, 20) shou",
    "tags": [
      "algebra",
      "numbers",
      "math"
    ],
    "title": "Missing Third Angle"
  },
  {
    "_id": "qaKffo5AZo2RMcKyN",
    "difficulty": 0.550761421319797,
    "language": "java",
    "summary": "Create a function that takes a array of two numbers and checks if the square root of the first number is equal to the cube root of the second number.\n\nExamples\ncheckSquareAndCube([4, 8]) ➞ true\n\ncheckSquareAndCube([16, 48]) ➞ false\n\ncheckSquareAndCube([9, 27]) ➞ true\n\nNotes\nRemember to return either true or false.\nAll arrays contain two positive numbers.",
    "tags": [
      "math",
      "numbers",
      "arrays",
      "validation",
      "geometry"
    ],
    "title": "Squares and Cubes"
  },
  {
    "_id": "32iWpCcttQSaGB7xS",
    "difficulty": 0.5526613816534541,
    "language": "java",
    "summary": "Create a function that takes a base number and an exponent number and returns the calculation.\n\nExamples\ncalculateExponent(5, 5) ➞ 3125\n\ncalculateExponent(10, 10) ➞ 10000000000\n\ncalculateExponent(3, 3) ➞ 27\n\nNotes\nAll test inputs will be positive integers.\nDon't forget to return the result.\nIf you get stuck on a challenge, find help in the Resources tab.\nIf yo",
    "tags": [
      "logic",
      "loops",
      "math",
      "numbers"
    ],
    "title": "To the Power of _____"
  },
  {
    "_id": "JawiuQQuLkhcRQ2Hh",
    "difficulty": 0.5553914327917282,
    "language": "java",
    "summary": "Write a function that takes an integer and:\nIf the number is a multiple of 3, return \"Hello\".\nIf the number is a multiple of 5, return \"World\".\nIf the number is a multiple of both 3 and 5, return \"Hello World\".\n\nExamples\nhelloWorld(3) ➞ \"Hello\"\n\nhelloWorld(5) ➞ \"World\"\n\nhelloWorld(15) ➞ \"Hello World\"\n\nNotes\nDon't forget to return the result.",
    "tags": [
      "math",
      "conditions",
      "strings"
    ],
    "title": "Hello; Hello World; World"
  },
  {
    "_id": "peRoJ3SoSYgsRkFzc",
    "difficulty": 0.5562422744128553,
    "language": "java",
    "summary": "Write two functions:\n\ntoInt() : A function to convert a string to an integer.\ntoStr() : A function to convert an integer to a string.\n\nExamples\ntoInt(\"77\") ➞ 77\n\ntoInt(\"532\") ➞ 532\n\ntoStr(77) ➞ \"77\"\n\ntoStr(532) ➞ \"532\"\n\nNotes\nDon't forget to return the result.\nIf you get stuck on a challenge, find help in the Resources tab.\nIf you're really stuck, unlock solut",
    "tags": [
      "strings",
      "language_fundamentals"
    ],
    "title": "String to Integer and Vice Versa"
  },
  {
    "_id": "ZfZMvwTzcTTG2QRzA",
    "difficulty": 0.5564516129032258,
    "language": "java",
    "summary": "Create a function that takes a string and changes the word amazing to not amazing. Return the string without any change if the word edabit is part of the string.\n\nExamples\namazingEdabit(\"edabit is amazing.\") ➞ \"edabit is amazing.\"\n\namazingEdabit(\"Mubashir is amazing.\") ➞ \"Mubashir is not amazing.\"\n\namazingEdabit(\"Infinity is amazing.\") ➞ \"Infinity is not amazi",
    "tags": [
      "strings",
      "validation",
      "regex"
    ],
    "title": "Amazing Edabit!"
  },
  {
    "_id": "6ECfG93f3izMagjkP",
    "difficulty": 0.5578512396694215,
    "language": "java",
    "summary": "Write a function that takes the last number of a consecutive list of numbers and returns the total of all numbers up to and including it.\n\nExamples\naddUpTo(3) ➞ 6\n// 1 + 2 + 3 = 6\n\naddUpTo(10) ➞ 55\n// 1 + 2 + 3 + ... + 10 = 55\n\naddUpTo(7) ➞ 28\n// 1 + 2 + 3 + ... + 7 = 28\n\nNotes\nYou will only be given valid inputs.\nThere are various ways of doing this; try find",
    "tags": [
      "math",
      "numbers",
      "loops"
    ],
    "title": "Add a Consecutive List of Numbers"
  },
  {
    "_id": "Pqmoa94kK9JgHo8mr",
    "difficulty": 0.56,
    "language": "java",
    "summary": "Create a function that takes a number as an argument and returns the square root of that number cubed.\n\nExamples\ncubeSquareRoot (81) ➞ 729\n\ncubeSquareRoot (1646089) ➞ 2111932187\n\ncubeSquareRoot (695556) ➞ 580093704\n\nNotes\nAll numbers will evenly square root, so don't worry about decimal numbers.",
    "tags": [
      "algebra",
      "math",
      "numbers"
    ],
    "title": "Cube the Square Root"
  },
  {
    "_id": "r7q9G5qadSpb8976G",
    "difficulty": 0.5603448275862069,
    "language": "java",
    "summary": "Create a function that returns the string \"Burp\" with the amount of \"r's\" determined by the input parameters of the function.\n\nExamples\nlongBurp(3) ➞ \"Burrrp\"\n\nlongBurp(5) ➞ \"Burrrrrp\"\n\nlongBurp(9) ➞ \"Burrrrrrrrrp\"\n\nNotes\nExpect num to always be >= 1.\nRemember to use a capital \"B\".\nDon't forget to return the result.",
    "tags": [
      "math",
      "strings"
    ],
    "title": "Burrrrrrrp"
  },
  {
    "_id": "6DanWfqmfYun2sNBf",
    "difficulty": 0.5605815831987075,
    "language": "java",
    "summary": "A leap year has one day added to February for being synchronized with the seasonal year. A leap year appears with a regular frequency, which is determined by the rule below:\n\nA year must either be divisible by 400 or divisible by 4 and not 100.\n\nGiven a year you must implement a function that returns true if it's a leap year, or false if it's not.\n\nExamples\nis",
    "tags": [
      "math",
      "validation",
      "logic",
      "dates"
    ],
    "title": "Leap Years"
  },
  {
    "_id": "YMLm3DpuZXHFDAnou",
    "difficulty": 0.5649606299212598,
    "language": "java",
    "summary": "Return the sum of all items in an array, where each item is multiplied by its index (zero-based). For empty arrays, return 0.\n\nExamples\nindexMultiplier([1, 2, 3, 4, 5]) ➞ 40\n// (10 + 21 + 32 + 43 + 5*4)\n\nindexMultiplier([-3, 0, 8, -6]) ➞ -2\n// (-30 + 01 + 82 + -63)\n\nNotes\nN/A",
    "tags": [
      "arrays",
      "numbers"
    ],
    "title": "Index Multiplier"
  },
  {
    "_id": "govh9K8oJDzYgXAkY",
    "difficulty": 0.565,
    "language": "java",
    "summary": "Create a function to calculate the determinant of a 2 * 2 matrix. The determinant of the following matrix is: ad - bc:\n\n[[a, b], [c, d]]\n\nExamples\ncalcDeterminant([\n  [1, 2],\n  [3, 4]\n]) ➞ -2\n\ncalcDeterminant([\n  [5, 3],\n  [3, 1]\n]) ➞ -4\n\ncalcDeterminant([\n  [1, 1],\n  [1, 1]\n]) ➞ 0\n\nNotes\nMatrix will be in 2 * 2 form only.",
    "tags": [
      "math",
      "arrays"
    ],
    "title": "Calculate Determinant of a 2x2 Matrix"
  },
  {
    "_id": "iXN3vagpLRSwxRYvx",
    "difficulty": 0.567398119122257,
    "language": "java",
    "summary": "Create a function that takes a number (from 1 to 12) and returns its corresponding month name as a string. For example, if you're given 3 as input, your function should return \"March\", because March is the 3rd month.\n\nNumber | Month Name\n--- | ---\n1 | January\n2 | February\n3 | March\n4 | April\n5 | May\n6 | June\n7 | July\n8 | August\n9 | September\n10 | October\n11 |",
    "tags": [
      "arrays",
      "dates",
      "conditions",
      "formatting"
    ],
    "title": "Convert Number to Corresponding Month Name"
  },
  {
    "_id": "Py6fFcpDMJNWyTxRD",
    "difficulty": 0.5675675675675675,
    "language": "java",
    "summary": "Create a function that counts how many characters make up a rectangular shape. You will be given an array of strings.\n\nExamples\ncountCharacters([\n  \"###\",\n  \"###\",\n  \"###\"\n]) ➞ 9\n\ncountCharacters([\n  \"22222222\",\n  \"22222222\",\n]) ➞ 16\n\ncountCharacters([\n  \"------------------\"\n]) ➞ 18\n\ncountCharacters([]) ➞ 0\n\ncountCharacters([\"\", \"\"]) ➞ 0\n\nNotes\nReturn 0 if the",
    "tags": [
      "strings",
      "arrays",
      "language_fundamentals"
    ],
    "title": "Characters in Shapes"
  },
  {
    "_id": "hAtARtyLzAHb2TEP5",
    "difficulty": 0.5681198910081744,
    "language": "java",
    "summary": "Write a function to check if an array contains a particular number.\n\nExamples\ncheck([1, 2, 3, 4, 5], 3) ➞ true\n\ncheck([1, 1, 2, 1, 1], 3) ➞ false\n\ncheck([5, 5, 5, 6], 5) ➞ true\n\ncheck([], 5) ➞ false\n\nNotes\nDon't forget to return the result.\nIf you get stuck on a challenge, find help in the Resources tab.\nIf you're really stuck, unlock solutions in the Solution",
    "tags": [
      "arrays",
      "validation",
      "language_fundamentals"
    ],
    "title": "Check if an Array Contains a Given Number"
  },
  {
    "_id": "KGybTr2AxDsBtYTrY",
    "difficulty": 0.5727272727272728,
    "language": "java",
    "summary": "You will be given an array, showing how far James travels away from his home for each day. He may choose to travel towards or away from his house, so negative values are to be expected.\n\nCreate a function that calculates what distance James must walk to get back home.\n\nExamples\ndistanceHome([2, 4, 2, 5]) ➞ 13\n\ndistanceHome([-1, -4, -3, -2]) ➞ 10\n\ndistanceHome(",
    "tags": [
      "numbers",
      "math"
    ],
    "title": "Make My Way Home"
  },
  {
    "_id": "KsowZk9crJSRd9uko",
    "difficulty": 0.5728155339805825,
    "language": "java",
    "summary": "Create a function that counts how many D's are in a sentence.\n\nExamples\ncountDs(\"My friend Dylan got distracted in school.\") ➞ 4\n\ncountDs(\"Debris was scattered all over the yard.\") ➞ 3\n\ncountDs(\"The rodents hibernated in their den.\") ➞ 3\n\nNotes\nYour function must be case-insensitive.\nRemember to return the result.\nCheck the Resources for help.",
    "tags": [
      "algorithms",
      "strings",
      "language_fundamentals"
    ],
    "title": "How Many D's Are There?"
  },
  {
    "_id": "dWpuMsnxdJsBZqj8P",
    "difficulty": 0.5728155339805825,
    "language": "java",
    "summary": "Create a function that takes an array of hurdle heights and a jumper's jump height, and determine whether or not the hurdler can clear all the hurdles.\n\nA hurdler can clear a hurdle if their jump height is greater than or equal to the hurdle height.\n\nExamples\nhurdleJump([1, 2, 3, 4, 5], 5) ➞ true\n\nhurdleJump([5, 5, 3, 4, 5], 3) ➞ false\n\nhurdleJump([5, 4, 5, 6]",
    "tags": [
      "arrays",
      "conditions",
      "control_flow",
      "validation"
    ],
    "title": "Hurdle Jump"
  },
  {
    "_id": "oqMBTbwcxMDodEbWs",
    "difficulty": 0.5731414868105515,
    "language": "java",
    "summary": "Write a function that takes an integer and returns a string with the given number of \"a\"s in Edabit.\n\nExamples\nhowManyTimes(5) ➞ \"Edaaaaabit\"\n\nhowManyTimes(0) ➞ \"Edbit\"\n\nhowManyTimes(12) ➞ \"Edaaaaaaaaaaaabit\"\n\nNotes\nThe string must start with \"Ed\" and end with \"bit\".\nYou'll only be given integers as test input.",
    "tags": [
      "formatting",
      "strings",
      "loops"
    ],
    "title": "Edaaaaabit"
  },
  {
    "_id": "ZYfF9BDSSKeCEtkiC",
    "difficulty": 0.5740740740740741,
    "language": "java",
    "summary": "Tesha is getting old but she wants to celebrate her 20th or 21st birthday only. It is possible with some basic maths skills. She just needs to select the correct number base with your help!\n\nFor example, if her current age is 22, that's exactly 20 - in base 11.  Similarly, 65 is exactly 21 - in base 32 and so on.\n\nCreate a function that takes her current age a",
    "tags": [
      "algorithms",
      "logic",
      "math",
      "numbers"
    ],
    "title": "Happy Birthday! 🍩"
  },
  {
    "_id": "TfL74CMecNnmtABNg",
    "difficulty": 0.5747800586510264,
    "language": "java",
    "summary": "This is a reverse coding challenge. Normally you're given explicit directions with how to create a function. Here, you must generate your own function to satisfy the relationship between the inputs and outputs.\n\nYour task is to create a function that, when fed the inputs below, produces the sample outputs shown.\n\nExamples\n[5, 7, 8, 2, 1], 2 ➞ [1, 1, 0, 0, 1]",
    "tags": [
      "arrays",
      "math",
      "loops"
    ],
    "title": "Reverse Coding Challenge #3"
  },
  {
    "_id": "bGJX47L8tXXtzGRio",
    "difficulty": 0.5756880733944955,
    "language": "java",
    "summary": "Create a function that takes a number as an argument and returns the amount of digits it has.\n\nExamples\nfindDigitAmount(123) ➞ 3\n\nfindDigitAmount(56) ➞ 2\n\nfindDigitAmount(7154) ➞ 4\n\nfindDigitAmount(61217311514) ➞ 11\n\nfindDigitAmount(0) ➞ 1\n\nNotes\nIf you get stuck on a challenge, find help in the Resources tab.\nIf you're really stuck, unlock solutions in the So",
    "tags": [
      "math",
      "numbers"
    ],
    "title": "Find the Total Number of Digits the Given Number Has"
  },
  {
    "_id": "rj5u8J5cn4CoEG3rY",
    "difficulty": 0.5760869565217391,
    "language": "java",
    "summary": "Create a function that takes an array of strings and return the first and last elements as a new array.\n\nExamples\nfirstLast([\"one\", \"two\"]) ➞ [\"one\", \"two\"]\n\nfirstLast([\"edabit\", \"13\", \"true\"]) ➞ [\"edabit\", \"true\"]\n\nfirstLast([\"zero\"]) ➞ [\"zero\"]\n\nNotes\nTest input will always contain a minimum of two elements within the array.\nDon't forget to return the result",
    "tags": [
      "arrays",
      "validation",
      "language_fundamentals"
    ],
    "title": "Return the First and Last Elements in an Array"
  },
  {
    "_id": "yNGGdbWigsLXwPMqY",
    "difficulty": 0.5767284991568297,
    "language": "java",
    "summary": "Create a function that takes in an array of numbers and returns the sum of its cubes.\n\nExamples\nsumOfCubes([1, 5, 9]) ➞ 855\n// Since 1^3 + 5^3 + 9^3 = 1 + 125 + 729 = 855\n\nsumOfCubes([3, 4, 5]) ➞ 216\n\nsumOfCubes([2]) ➞ 8\n\nsumOfCubes([]) ➞ 0\n\nNotes\nIf given an empty array, return 0.",
    "tags": [
      "algebra",
      "arrays",
      "math",
      "loops",
      "geometry"
    ],
    "title": "Sum of Cubes"
  },
  {
    "_id": "2gFHh4REnB2F2bb3E",
    "difficulty": 0.5769230769230769,
    "language": "java",
    "summary": "If two or more resistors are connected in parallel, the overall resistance of the circuit reduces. It is possible to calculate the total resistance of a parallel circuit by using this formula:\n\n1/RTotal = 1/R1 + 1/R2 + 1/R3 ...\n\nCreate a function that takes an array of parallel resistance values, and calculates the total resistance of the circuit.\n\nWorked Exam",
    "tags": [
      "math",
      "physics",
      "loops",
      "arrays"
    ],
    "title": "Sum of Resistance in Parallel Circuits"
  },
  {
    "_id": "MhH32ydsoJKkjFjyz",
    "difficulty": 0.5771812080536913,
    "language": "java",
    "summary": "Create a function that takes a number (from 1 - 60) and returns a corresponding string of hyphens.\n\nExamples\nGo(1) ➞ \"-\"\n\nGo(5) ➞ \"-----\"\n\nGo(3) ➞ \"---\"\n\nNotes\nYou will be provided integers ranging from 1 to 60.\nDon't forget to return your result as a string.\nIf you get stuck on a challenge, find help in the Resources tab.\nIf you're really stuck, unlock soluti",
    "tags": [
      "loops",
      "strings",
      "numbers"
    ],
    "title": "Convert Number to String of Dashes"
  },
  {
    "_id": "BMzs2RZDgFvyLWn29",
    "difficulty": 0.5794392523364486,
    "language": "java",
    "summary": "Given a letter and an array of words, return whether the letter does not appear in any of the words.\n\nExamples\nforbiddenLetter(\"m\", [\"deep\", \"loves\", \"tesh\"]) ➞ true\n\nforbiddenLetter(\"r\", [\"rock\", \"paper\", \"scissors\"]) ➞ false\n\nforbiddenLetter(\"a\", [\"spoon\", \"fork\", \"knife\"]) ➞ true\n\nforbiddenLetter(\"m\", []) ➞ true\n\nNotes\nAll inputs given will be in lowercase.",
    "tags": [
      "arrays",
      "strings",
      "loops",
      "validation"
    ],
    "title": "The Forbidden Letter"
  },
  {
    "_id": "B5u9LiN7cZHLkJzXa",
    "difficulty": 0.5800376647834274,
    "language": "java",
    "summary": "Create a function that goes through the array, incrementing (+1) for each odd-valued number and decrementing (-1) for each even-valued number.\n\nExamples\ntransform([1, 2, 3, 4, 5]) ➞ [2, 1, 4, 3, 6]\n\ntransform([3, 3, 4, 3]) ➞ [4, 4, 3, 4]\n\ntransform([2, 2, 0, 8, 10]) ➞ [1, 1, -1, 7, 9]\n\nNotes\nN/A",
    "tags": [
      "arrays",
      "control_flow",
      "numbers",
      "language_fundamentals",
      "loops"
    ],
    "title": "Odd Up, Even Down"
  },
  {
    "_id": "eBQoq8LDPL6dM3Riz",
    "difficulty": 0.580078125,
    "language": "java",
    "summary": "Write a function that calculates the factorial of a number recursively.\n\nExamples\nfactorial(5) ➞ 120\n\nfactorial(3) ➞ 6\n\nfactorial(1) ➞ 1\n\nfactorial(0) ➞ 1\n\nNotes\nN/A",
    "tags": [
      "recursion",
      "numbers"
    ],
    "title": "Recursion: Factorials"
  },
  {
    "_id": "Mr48aLdKMXpGrdTXK",
    "difficulty": 0.5800807537012113,
    "language": "java",
    "summary": "Create a function to multiply all of the values in an array by the amount of values in the given array.\n\nExamples\nMultiplyByLength([2, 3, 1, 0]) ➞ [8, 12, 4, 0]\n\nMultiplyByLength([4, 1, 1]) ➞ ([12, 3, 3])\n\nMultiplyByLength([1, 0, 3, 3, 7, 2, 1]) ➞  [7, 0, 21, 21, 49, 14, 7]\n\nMultiplyByLength([0]) ➞ ([0])\n\nNotes\nAll of the values given are numbers.\nAll arrays w",
    "tags": [
      "arrays",
      "algorithms",
      "math",
      "loops"
    ],
    "title": "Multiply by Length"
  },
  {
    "_id": "oseKrpJdL8knnm4NT",
    "difficulty": 0.581021897810219,
    "language": "java",
    "summary": "A number added with its additive inverse equals zero. Create a function that returns an array of additive inverses.\n\nExamples\nadditiveInverse([5, -7, 8, 3]) ➞ [-5, 7, -8, -3]\n\nadditiveInverse([1, 1, 1, 1, 1]) ➞ [-1, -1, -1, -1, -1]\n\nadditiveInverse([-5, -25, 35]) ➞ [5, 25, -35]\n\nNotes\nDon't forget to return the result.\nIf you get stuck on a challenge, find hel",
    "tags": [
      "arrays",
      "math",
      "higher_order_functions",
      "loops"
    ],
    "title": "Additive Inverse"
  },
  {
    "_id": "nMbE2g7MB5yFcTzoB",
    "difficulty": 0.5811965811965812,
    "language": "java",
    "summary": "Write a function that recursively finds the sum of the first n natural numbers.\n\nExamples\nsum(5) ➞ 15\n// 1 + 2 + 3 + 4 + 5 = 15\n\nsum(1) ➞ 1\n\nsum(12) ➞ 78\n\nNotes\nAssume the input number is always positive.\nCheck the Resources tab for info on recursion.",
    "tags": [
      "recursion",
      "math",
      "numbers",
      "language_fundamentals"
    ],
    "title": "Recursion:  Sum"
  },
  {
    "_id": "EhGqjXhY9zS7MHjWd",
    "difficulty": 0.5812395309882747,
    "language": "java",
    "summary": "Create a function that takes an integer and returns the factorial of that integer. That is, the integer multiplied by all positive lower integers.\n\nExamples\nfactorial(3) ➞ 6\n\nfactorial(5) ➞ 120\n\nfactorial(12) ➞ 479001600\n\nNotes\nAssume all inputs are greater than or equal to 0.",
    "tags": [
      "algebra",
      "math",
      "numbers",
      "recursion"
    ],
    "title": "Return the Factorial"
  },
  {
    "_id": "ZLbP9bodP2yxgcuz4",
    "difficulty": 0.5815485996705108,
    "language": "java",
    "summary": "Create a function that finds the index of a given item.\n\nExamples\nsearch([1, 5, 3], 5) ➞ 1\n\nsearch([9, 8, 3], 3) ➞ 2\n\nsearch([1, 2, 3], 4) ➞ -1\n\nNotes\nIf the item is not present, return -1.",
    "tags": [
      "arrays",
      "language_fundamentals",
      "loops"
    ],
    "title": "Find the Index (Part 1)"
  },
  {
    "_id": "n22eru9bm8LMcBdYt",
    "difficulty": 0.5817091454272864,
    "language": "java",
    "summary": "Create a function that adds a string ending to each member in an array.\n\nExamples\naddEnding([\"clever\", \"meek\", \"hurried\", \"nice\"], \"ly\")\n➞ [\"cleverly\", \"meekly\", \"hurriedly\", \"nicely\"]\n\naddEnding([\"new\", \"pander\", \"scoop\"], \"er\")\n➞ [\"newer\", \"panderer\", \"scooper\"]\n\naddEnding([\"bend\", \"sharpen\", \"mean\"], \"ing\")\n➞ [\"bending\", \"sharpening\", \"meaning\"]\n\nNotes\nDon'",
    "tags": [
      "arrays",
      "higher_order_functions",
      "loops",
      "strings"
    ],
    "title": "Word Endings"
  },
  {
    "_id": "3NowS55XTdfWtKh9n",
    "difficulty": 0.5821812596006144,
    "language": "java",
    "summary": "Create a function that searches for the index of a given item in an array. If the item is present, it should return the index, otherwise, it should return -1.\n\nExamples\nsearch([1, 2, 3, 4], 3) ➞ 2\n\nsearch([2, 4, 6, 8, 10], 8) ➞ 3\n\nsearch([1, 3, 5, 7, 9], 11) ➞ -1\n\nNotes\nIf the item is not present, return -1.",
    "tags": [
      "recursion",
      "arrays",
      "language_fundamentals"
    ],
    "title": "Find the Index (Part #2)"
  },
  {
    "_id": "HDWqr2HdC3dwHYeBx",
    "difficulty": 0.5826235093696763,
    "language": "java",
    "summary": "Create a function that counts the number of syllables a word has. Each syllable is separated with a dash -.\n\nExamples\nnumberSyllables(\"buf-fet\") ➞ 2\n\nnumberSyllables(\"beau-ti-ful\") ➞ 3\n\nnumberSyllables(\"mon-u-men-tal\") ➞ 4\n\nnumberSyllables(\"on-o-mat-o-poe-ia\") ➞ 6\n\nNotes\nDon't forget to return the result.\nIf you get stuck on a challenge, find help in the Resou",
    "tags": [
      "strings",
      "language_fundamentals"
    ],
    "title": "Count Syllables"
  },
  {
    "_id": "YG5hYruH8TfqeZ3dc",
    "difficulty": 0.5829662261380323,
    "language": "java",
    "summary": "Create a function that takes an array and a string as arguments and returns the index of the string.\n\nExamples\nfindIndex(new String[]{\"hi\", \"edabit\", \"fgh\", \"abc\"}, \"fgh\") ➞ 2\n\nfindIndex(new String[]{\"Red\", \"blue\", \"Blue\", \"Green\"}, \"blue\") ➞ 1\n\nfindIndex(new String[]{\"a\", \"g\", \"y\", \"d\"}, \"d\") ➞ 3\n\nfindIndex(new String[]{\"Pineapple\", \"Orange\", \"Grape\", \"Apple\"",
    "tags": [
      "arrays",
      "strings",
      "language_fundamentals",
      "loops"
    ],
    "title": "Find the Index"
  },
  {
    "_id": "mkAsw6owW6F7h2sfy",
    "difficulty": 0.5833333333333334,
    "language": "java",
    "summary": "Write a function that returns true if all integers in an array are factors of a number, and false otherwise.\n\nExamples\ncheckFactors([2, 3, 4], 12) ➞ true\n// Since 2, 3, and 4 are all factors of 12.\n\ncheckFactors([1, 2, 3, 8], 12) ➞ false\n// 8 is not a factor of 12.\n\ncheckFactors([1, 2, 50], 100) ➞ true\n\ncheckFactors([3, 6], 9) ➞ false\n\nNotes\nN/A",
    "tags": [
      "arrays",
      "validation",
      "loops"
    ],
    "title": "Check Factors"
  },
  {
    "_id": "nuKniCXYbaCfrmjgX",
    "difficulty": 0.5854545454545454,
    "language": "java",
    "summary": "Create a function that takes a sentence and turns every \"i\" into \"wi\" and \"e\" into \"we\", and add \"owo\" at the end.\n\nExamples\nowofied(\"I'm gonna ride 'til I can't no more\")\n➞ \"I'm gonna rwidwe 'twil I can't no morwe owo\"\n\nowofied(\"Do you ever feel like a plastic bag\")\n➞ \"Do you wevwer fwewel lwikwe a plastwic bag owo\"\n\nowofied(\"Cause baby you're a firework\")\n➞",
    "tags": [
      "strings",
      "regex",
      "formatting"
    ],
    "title": "Owofied a Sentence"
  },
  {
    "_id": "fDE9uvkfAXgBN6mWZ",
    "difficulty": 0.5861182519280206,
    "language": "java",
    "summary": "I'm trying to watch some lectures to study for my next exam but I keep getting distracted by meme compilations, vine compilations, anime, and more on my favorite video platform.\n\nYour job is to help me create a function that takes a string and checks to see if it contains the following words or phrases:\n\n\"anime\"\n\"meme\"\n\"vines\"\n\"roasts\"\n\"Danny DeVito\"\n\nIf it do",
    "tags": [
      "strings",
      "conditions",
      "loops"
    ],
    "title": "Hot Pics of Danny DeVito!"
  },
  {
    "_id": "kPHNYy2E6EijPLDja",
    "difficulty": 0.5862944162436549,
    "language": "java",
    "summary": "You're in the midst of creating a typing game.\n\nCreate a function that takes in two arrays: the array of user-typed words, and the array of correctly-typed words and outputs an array containing 1s (correctly-typed words) and -1s (incorrectly-typed words).\nInputs:\nUser-typed Array: [\"cat\", \"blue\", \"skt\", \"umbrells\", \"paddy\"]\nCorrect Array: [\"cat\", \"blue\", \"sky\"",
    "tags": [
      "arrays",
      "loops",
      "games"
    ],
    "title": "Typing Game"
  },
  {
    "_id": "bvSnDWbJtMPimpsFT",
    "difficulty": 0.5872340425531914,
    "language": "java",
    "summary": "Create a function that removes the first and last characters from a string.\n\nExamples\nremoveFirstLast(\"hello\") ➞ \"ell\"\n\nremoveFirstLast(\"maybe\") ➞ \"ayb\"\n\nremoveFirstLast(\"benefit\") ➞ \"enefi\"\n\nremoveFirstLast(\"a\") ➞ \"a\"\n\nNotes\nIf the string is 2 or fewer characters long, return the string itself (See example #4).",
    "tags": [
      "strings",
      "formatting",
      "language_fundamentals"
    ],
    "title": "Remove the First and Last Characters"
  },
  {
    "_id": "Pbbu6wDPnqbbzXwTG",
    "difficulty": 0.5882352941176471,
    "language": "java",
    "summary": "Create a function that returns a converted  array of boolean values from a given bit string. Basically, a bit character 1 is true,  otherwise, it's false.\n\nExamples\nintegerBoolean(\"0110\") ➞ [false, true, true, false]\n\nintegerBoolean(\"100101\") ➞ [true, false, false, true, false, true]\n\nintegerBoolean(\"10\") ➞ [true, false]\n\nintegerBoolean(\"001\") ➞ [false, false,",
    "tags": [
      "data_structures",
      "strings",
      "arrays",
      "loops"
    ],
    "title": "True Ones, False Zeros"
  },
  {
    "_id": "wFPAkqT72h4WGEuYN",
    "difficulty": 0.5897435897435898,
    "language": "java",
    "summary": "Create a function that takes a string as an argument and returns a coded (h4ck3r 5p34k) version of the string.\n\nExamples\nhackerSpeak(\"javascript is cool\") ➞ \"j4v45cr1pt 15 c00l\"\n\nhackerSpeak(\"programming is fun\") ➞ \"pr0gr4mm1ng 15 fun\"\n\nhackerSpeak(\"become a coder\") ➞ \"b3c0m3 4 c0d3r\"\n\nNotes\nIn order to work properly, the function should replace all \"a\"s with",
    "tags": [
      "arrays",
      "functional_programming",
      "control_flow",
      "conditions"
    ],
    "title": "H4ck3r Sp34k"
  },
  {
    "_id": "nn65XKhviizSgwW2k",
    "difficulty": 0.5899137358991373,
    "language": "java",
    "summary": "Create a method that takes an integer as an argument. Add up all the numbers from 1 to the number you passed to the function. For example, if the input is 4 then your function should return 10 because 1 + 2 + 3 + 4 = 10.\n\nExamples\naddUp(4) ➞ 10\n\naddUp(13) ➞ 91\n\naddUp(600) ➞ 180300\n\nNotes\nExpect any positive number between 1 and 1000.",
    "tags": [
      "algorithms",
      "math",
      "recursion",
      "numbers"
    ],
    "title": "Add up the Numbers from a Single Number"
  },
  {
    "_id": "42TaSuEe8tzepCK75",
    "difficulty": 0.5913312693498453,
    "language": "java",
    "summary": "Create a function, that will for a given a, b, c, do the following:\n\nAdd a to itself b times.\nCheck if the result is divisible by c.\n\nExamples\nabcmath(42, 5, 10) ➞ false\n// 42+42 = 84,84+84 = 168,168+168 = 336,336+336 = 672, 672+672 = 1344\n// 1344 is not divisible by 10\n\nabcmath(5, 2, 1) ➞ true\n\nabcmath(1, 2, 3) ➞ false\n\nNotes\nIn the first step of the function",
    "tags": [
      "algebra",
      "math",
      "validation",
      "loops"
    ],
    "title": "Multi-division"
  },
  {
    "_id": "bSNQDQpy3EPMTFogQ",
    "difficulty": 0.592,
    "language": "java",
    "summary": "Create a function that returns the smaller number.\n\nExamples\nsmallerNum(\"21\", \"44\") ➞ \"21\"\n\nsmallerNum(\"1500\", \"1\") ➞ \"1\"\n\nsmallerNum(\"5\", \"5\") ➞ \"5\"\n\nNotes\nNumbers will be represented as strings, and your output should also be a string.\nIf both numbers tie, return either number.\nNumbers will be positive.\nBonus: See if you can do this without converting to int",
    "tags": [
      "strings",
      "language_fundamentals"
    ],
    "title": "Smaller String Number"
  },
  {
    "_id": "RXpy6CSczRnuE7r2q",
    "difficulty": 0.5935162094763092,
    "language": "java",
    "summary": "Create a function that returns the minimum number of removals to make the sum of all elements in an array even.\n\nExamples\nminimumRemovals([1, 2, 3, 4, 5]) ➞ 1\n\nminimumRemovals([5, 7, 9, 11]) ➞ 0\n\nminimumRemovals([5, 7, 9, 12]) ➞ 1\n\nNotes\nIf the sum is already even, return 0 (see example #2).\nThe output will be either 0 or 1.",
    "tags": [
      "arrays",
      "higher_order_functions",
      "loops"
    ],
    "title": "Minimum Removals to Make Sum Even"
  },
  {
    "_id": "wmXdzBSsoT4QvEY3S",
    "difficulty": 0.5935483870967742,
    "language": "java",
    "summary": "Given an array of integers, return the difference between the largest and smallest integers in the array.\n\nExamples\ndifference([10, 15, 20, 2, 10, 6]) ➞ 18\n20 - 2 = 18\n\ndifference([-3, 4, -9, -1, -2, 15]) ➞ 24\n15 - (-9) = 24\n\ndifference([4, 17, 12, 2, 10, 2]) ➞ 15\n\nNotes\nN/A",
    "tags": [
      "arrays",
      "math",
      "numbers"
    ],
    "title": "Maximum Difference"
  },
  {
    "_id": "EzH6jaQPGTR6e8Wfg",
    "difficulty": 0.596,
    "language": "java",
    "summary": "Your job is to create a function, that takes 3 numbers: a, b, c and returns true if the last digit of a * b = the last digit of c. Check the examples below for an explanation.\n\nExamples\nlastDig(25, 21, 125) ➞ true\n// The last digit of 25 is 5, the last digit of 21 is 1, and the last\n// digit of 125 is 5, and the last digit of 5*1 = 5, which is equal\n// to the",
    "tags": [
      "algebra",
      "logic",
      "validation",
      "numbers"
    ],
    "title": "Last Digit Ultimate"
  },
  {
    "_id": "wWRKKJNppJXwocprL",
    "difficulty": 0.596078431372549,
    "language": "java",
    "summary": "Create a function that converts a date formatted as MM/DD/YYYY to  YYYYDDMM.\n\nExamples\nformatDate(\"11/12/2019\") ➞ \"20191211\"\n\nformatDate(\"12/31/2019\") ➞ \"20193112\"\n\nformatDate(\"01/15/2019\") ➞ \"20191501\"\n\nNotes\nReturn value should be a string.",
    "tags": [
      "formatting",
      "dates",
      "arrays"
    ],
    "title": "Date Format"
  },
  {
    "_id": "72yxSzSevYhvY5Dbu",
    "difficulty": 0.596244131455399,
    "language": "java",
    "summary": "Create a function that takes a character and a string as arguments and returns the number of times the character is found in the string.\n\nExamples\ncharCount('a', \"edabit\") ➞ 1\n\ncharCount('c', \"Chamber of secrets\") ➞ 1\n\ncharCount('b', \"big fat bubble\") ➞ 4\n\nNotes\nYour output must be case-sensitive (see second example).",
    "tags": [
      "loops",
      "strings",
      "language_fundamentals",
      "interview"
    ],
    "title": "Count Instances of a Character in a String"
  },
  {
    "_id": "ocqRdAXXniLS4ea3h",
    "difficulty": 0.5980392156862745,
    "language": "java",
    "summary": "In this challenge, you must verify the equality of two different values given the parameters a and b.\n\nBoth the value and  type of the parameters need to be equal. The possible types of the given parameters are:\nNumbers\nStrings\nBooleans (false or true)\nSpecial values: null\n\nWhat have you learned so far that will permit you to do two different checks (value and",
    "tags": [
      "logic",
      "language_fundamentals",
      "validation"
    ],
    "title": "Equality Check"
  },
  {
    "_id": "7JBbNzmBuBEX7KPoH",
    "difficulty": 0.6,
    "language": "java",
    "summary": "Create a function that takes in an array (slot machine outcome) and returns true if all elements in the array are identical, and false otherwise. The array will contain 4 elements.\n\nExamples\ntestJackpot([\"@\", \"@\", \"@\", \"@\"]) ➞ true\n\ntestJackpot([\"abc\", \"abc\", \"abc\", \"abc\"]) ➞ true\n\ntestJackpot([\"SS\", \"SS\", \"SS\", \"SS\"]) ➞ true\n\ntestJackpot([\"&&\", \"&\", \"&&&\", \"&",
    "tags": [
      "arrays",
      "control_flow",
      "strings",
      "games"
    ],
    "title": "Hitting the Jackpot"
  },
  {
    "_id": "RwrKgxmoMbm5NDFxW",
    "difficulty": 0.6,
    "language": "java",
    "summary": "Parity bits are used as a very simple checksum to ensure that binary data isn't corrupted during transit. Here's how they work:\n\nIf a binary string has an odd number of 1's, the parity bit is a 1.\nIf a binary string has an even number of 1's, the parity bit is a 0.\nThe parity bit is appended to the end of the binary string.\n\nCreate a function that adds the cor",
    "tags": [
      "strings",
      "numbers",
      "logic"
    ],
    "title": "Adding Parity Bits"
  },
  {
    "_id": "aNty236u5wtfsBayy",
    "difficulty": 0.6004842615012107,
    "language": "java",
    "summary": "Create a function that takes two parameters (start, stop), and returns the sum of all even numbers in the range.\n\nExamples\nsumEvenNumsInRange(10, 20) ➞ 90\n// 10, 12, 14, 16, 18, 20\n\nsumEvenNumsInRange(51, 150) ➞ 5050\n\nsumEvenNumsInRange(63, 97) ➞ 1360\n\nNotes\nRemember that the start and stop values are inclusive.",
    "tags": [
      "loops",
      "math",
      "numbers"
    ],
    "title": "Give Me the Even Numbers"
  },
  {
    "_id": "kADGssuyM6vTEwS8p",
    "difficulty": 0.601593625498008,
    "language": "java",
    "summary": "Create a function that returns true if an input string contains only uppercase or only lowercase letters.\n\nExamples\nsameCase(\"hello\") ➞ true\n\nsameCase(\"HELLO\") ➞ true\n\nsameCase(\"Hello\") ➞ false\n\nsameCase(\"ketcHUp\") ➞ false\n\nNotes\nN/A",
    "tags": [
      "strings",
      "validation"
    ],
    "title": "Check if the Same Case"
  },
  {
    "_id": "mftGnKMaNpZhBeNBF",
    "difficulty": 0.6016949152542372,
    "language": "java",
    "summary": "Hamming distance is the number of characters that differ between two strings.\n\nTo illustrate:\nString1: \"abcbba\"\nString2: \"abcbda\"\n\nHamming Distance: 1 - \"b\" vs. \"d\" is the only difference.\n\nCreate a function that computes the hamming distance between two strings.\n\nExamples\nhammingDistance(\"abcde\", \"bcdef\") ➞ 5\n\nhammingDistance(\"abcde\", \"abcde\") ➞ 0\n\nhammingDis",
    "tags": [
      "strings",
      "loops"
    ],
    "title": "Hamming Distance"
  },
  {
    "_id": "5hDW8NdjYLR4ncuMW",
    "difficulty": 0.6042154566744731,
    "language": "java",
    "summary": "Welcome to the beginning of this collection on Computer Science Algorithms. Admittedly there are other challenges on Edabit that deal with recursion and algorithmic processes, but these particular challenges are designed to give examples and to educate users on the topics being covered.\n\nRecursion\nIn computer science, \"recursion\" is the act of writing a functi",
    "tags": [
      "algorithms",
      "logic",
      "recursion",
      "math"
    ],
    "title": "Algorithms I: Introduction to Recursion"
  },
  {
    "_id": "RLaRiNL6H7P2viWgk",
    "difficulty": 0.6046128500823723,
    "language": "java",
    "summary": "This challenge will help you interpret mathematical relationships both algebraically and geometrically.\n\nMatchstick Houses, Steps 1, 2 and 3\n\nCreate a function that takes a number (step) as an argument and returns the number of matchsticks in that step. See step 1, 2 and 3 in the image above.\n\nExamples\nmatchHouses(1) ➞ 6\n\nmatchHouses(4) ➞ 21\n\nmatchHouses(87) ➞",
    "tags": [
      "algebra",
      "logic",
      "math"
    ],
    "title": "Matchstick Houses"
  },
  {
    "_id": "ztcwYfydBxRGQAKPk",
    "difficulty": 0.6052631578947368,
    "language": "java",
    "summary": "Imagine a circle and two squares: a smaller and a bigger one. For the smaller one, the circle is a circumcircle and for the bigger one, an incircle.\n\nScale\n\nCreate a function, that takes an integer (radius of the circle) and returns the difference of the areas of the two squares.\n\nExamples\nsquareAreasDifference(5) ➞ 50\n\nsquareAreasDifference(6) ➞ 72\n\nsquareAre",
    "tags": [
      "algebra",
      "math",
      "geometry"
    ],
    "title": "A Circle and Two Squares"
  },
  {
    "_id": "rq4AeNEFm7uBsoDDn",
    "difficulty": 0.6068292682926829,
    "language": "java",
    "summary": "Take an array of integers (positive or negative or both) and return the sum of the absolute value of each element.\n\nExamples\ngetAbsSum([2, -1, 4, 8, 10]) ➞ 25\n\ngetAbsSum([-3, -4, -10, -2, -3]) ➞ 22\n\ngetAbsSum([2, 4, 6, 8, 10]) ➞ 30\n\ngetAbsSum([-1]) ➞ 1\n\nNotes\nThe term \"absolute value\" means to remove any negative sign in front of a number, and to think of all",
    "tags": [
      "arrays",
      "math",
      "numbers",
      "loops"
    ],
    "title": "Absolute Sum"
  },
  {
    "_id": "3Tn5HZgBzdTHPp9zT",
    "difficulty": 0.6071428571428571,
    "language": "java",
    "summary": "Syncopation means an emphasis on a weak beat of a bar of music; most commonly, beats 2 and 4 (and all other even-numbered beats if applicable).\n\nYou will be given a string representing beats, where hashtags # represent emphasized beats. Create a function that returns if the line of music contains any syncopation, and false otherwise.\n\nExamples\nhasSyncopation(\"",
    "tags": [
      "strings",
      "loops",
      "validation"
    ],
    "title": "Syncopated Rhythm"
  },
  {
    "_id": "WejGaR5mK4eECuDLZ",
    "difficulty": 0.6129032258064516,
    "language": "java",
    "summary": "Mubashir  has started his journey from home. Given a string of directions (N=North, W=West, S=South, E=East), he will walk for one minute in each direction. Determine whether a set of directions will lead him back to the starting position or not.\n\nExamples\nbackToHome(\"NEWE\") ➞ false\n\nbackToHome(\"NENESSWW\") ➞ true\n\nbackToHome(\"NEESSW\") ➞ false\n\nNotes\nN/A",
    "tags": [
      "logic",
      "validation",
      "arrays",
      "strings"
    ],
    "title": "Back to Home?"
  },
  {
    "_id": "kTY7T75TP5qDgHYab",
    "difficulty": 0.6233062330623306,
    "language": "java",
    "summary": "Write a function that returns true if all characters in a string are identical and false otherwise.\n\nExamples\nisIdentical(\"aaaaaa\") ➞ true\n\nisIdentical(\"aabaaa\") ➞ false\n\nisIdentical(\"ccccca\") ➞ false\n\nisIdentical(\"kk\") ➞ true\n\nNotes\nN/A",
    "tags": [
      "strings",
      "validation"
    ],
    "title": "Check if a String Contains only Identical Characters"
  },
  {
    "_id": "F3ssniE3KnCpDFJqP",
    "difficulty": 0.625,
    "language": "java",
    "summary": "A decimal number can be represented as a sequence of bits. To illustrate:\n\n6 = 00000110\n23 = 00010111\n\nFrom the bitwise representation of numbers, we can calculate the bitwise AND, bitwise OR and bitwise XOR. Using the example above:\n\nbitwiseAND(6, 23) ➞ 00000110\n\nbitwiseOR(6, 23) ➞ 00010111\n\nbitwiseXOR(6, 23) ➞ 00010001\n\nWrite three functions to calculate the",
    "tags": [
      "language_fundamentals",
      "logic",
      "bit_operations"
    ],
    "title": "Bitwise Operations"
  },
  {
    "_id": "5yCvczJJbq68Pavky",
    "difficulty": 0.6276276276276276,
    "language": "java",
    "summary": "Create a method that takes an array of integers. Return the largest integer in the array.\n\nExamples\nfindLargestNum([4, 5, 1, 3]) ➞ 5\n\nfindLargestNum([300, 200, 600, 150]) ➞ 600\n\nfindLargestNum([1000, 1001, 857, 1]) ➞ 1001\n\nNotes\nExpect either a positive number or zero (there are no negative numbers).\nIf you get stuck on a challenge, find help in the Resources",
    "tags": [
      "arrays",
      "sorting",
      "numbers",
      "loops"
    ],
    "title": "Find the Largest Number in an Array"
  },
  {
    "_id": "utCRd99E6E3FRS4Rz",
    "difficulty": 0.6345311130587205,
    "language": "java",
    "summary": "Create a method that takes an array of integers and returns the smallest number in the set.\n\nExamples\nfindSmallestNum([34, 15, 88, 2]) ➞ 2\n\nfindSmallestNum([34, -345, -1, 100]) ➞ -345\n\nfindSmallestNum([7, 7, 7]) ➞ 7\n\nNotes\nTest cases contain only positive and negative numbers.\nIf you get stuck on a challenge, find help in the Resources tab.\nIf you're really st",
    "tags": [
      "arrays",
      "loops",
      "sorting",
      "numbers"
    ],
    "title": "Find the Smallest Number in an Array"
  },
  {
    "_id": "vprfA75LFy9hcHBXY",
    "difficulty": 0.6366559485530546,
    "language": "java",
    "summary": "Create a function that takes a string of lowercase characters and returns that string reversed and in upper case.\n\nExamples\nreverseCapitalize(\"abc\") ➞ \"CBA\"\n\nreverseCapitalize(\"hellothere\") ➞ \"EREHTOLLEH\"\n\nreverseCapitalize(\"input\") ➞ \"TUPNI\"\n\nNotes\nN/A",
    "tags": [
      "strings",
      "functional_programming"
    ],
    "title": "Reverse and Capitalize"
  },
  {
    "_id": "baHpa6BQTYyrWL35e",
    "difficulty": 0.673469387755102,
    "language": "java",
    "summary": "Create a function which takes a number and returns the maximum value by rearranging its digits.\n\nExamples\nrotateMaxNumber(\"1213\") ➞ 3211\n\nrotateMaxNumber(\"1217\") ➞ 7211\n\nrotateMaxNumber(\"123\") ➞ 321\n\nrotateMaxNumber(\"001\") ➞ 100\n\nrotateMaxNumber(\"999\") ➞ 999\n\nNotes\nN/A",
    "tags": [
      "language_fundamentals",
      "logic",
      "math",
      "numbers"
    ],
    "title": "Rotate Max Number"
  },
  {
    "_id": "8HB8AB873TYGukT6J",
    "difficulty": 0.675,
    "language": "java",
    "summary": "Create a function that takes a number as an argument and returns an array of numbers counting down from this number to zero.\n\nExamples\ncountdown(5) ➞ [5, 4, 3, 2, 1, 0]\n\ncountdown(1) ➞ [1, 0]\n\ncountdown(0) ➞ [0]\n\nNotes\nThe argument will always be greater than or equal to zero.",
    "tags": [
      "arrays",
      "loops"
    ],
    "title": "Generate a Countdown of Numbers in an Array"
  },
  {
    "_id": "s8q6rQPs37zjkdya2",
    "difficulty": 0.675,
    "language": "java",
    "summary": "A directed graph is like an undirected graph except that edges have direction.  Each edge goes from a source node to a target node.\n\nExamples\nGraph 1\n\nHere, node 0 is adjacent to node 1, but node 1 is not adjacent to node 0, for example. Here is what the graph above would look like if it were undirected:\n\nGraph 2\n\nIn directed graphs, the edge direction matters",
    "tags": [
      "algorithms",
      "math",
      "arrays"
    ],
    "title": "Adjacent Nodes (Directed Graph)"
  },
  {
    "_id": "Hu3HxFH3Gnv2CwCeH",
    "difficulty": 0.7303921568627451,
    "language": "java",
    "summary": "You're given a string of words. You need to find the word \"Nemo\", and return a string like this: \"I found Nemo at [the order of the word you find Nemo]!\".\n\nIf you can't find Nemo, return \"I can't find Nemo :(\".\n\nExamples\nfindNemo(\"I am finding Nemo !\") ➞ \"I found Nemo at 4!\"\n\nfindNemo(\"Nemo is me\") ➞ \"I found Nemo at 1!\"\n\nfindNemo(\"I Nemo am\") ➞ \"I found Nemo",
    "tags": [
      "arrays",
      "formatting",
      "strings"
    ],
    "title": "Finding Nemo"
  },
  {
    "_id": "fLc7y5ke7ZLkZk9sv",
    "difficulty": 0.8035714285714286,
    "language": "java",
    "summary": "Create a function that always returns true for every item in a given array. However, if an element is the word \"flick\", switch to always returning the opposite boolean value.\n\nExamples\nswitches([\"edabit\", \"flick\", \"eda\", \"bit\"]) ➞ [true, false, false, false]\n\nswitches([\"flick\", 11037, 3.14, 53]) ➞ [false, false, false, false]\n\nswitches([false, false, \"flick\",",
    "tags": [
      "arrays",
      "logic",
      "loops"
    ],
    "title": "Flick Switch"
  },
  {
    "_id": "GEreBiJFJaTMb5wye",
    "difficulty": 0.8407224958949097,
    "language": "java",
    "summary": "Write a function that searches a list of names (unsorted) for the name \"Bob\" and returns the location in the list. If Bob is not in the array, return -1.\n\nExamples\nfind_bob([\"Jimmy\", \"Layla\", \"Bob\"]) ➞ 2\n\nfind_bob([\"Bob\", \"Layla\", \"Kaitlyn\", \"Patricia\"]) ➞ 0\n\nfind_bob([\"Jimmy\", \"Layla\", \"James\"]) ➞ -1\n\nNotes\nAssume all names start with a capital letter and are",
    "tags": [
      "data_structures",
      "language_fundamentals",
      "arrays"
    ],
    "title": "Where is Bob!?!"
  },
  {
    "_id": "odJPfYRD3kSpE45Jf",
    "difficulty": 0.9095513748191028,
    "language": "java",
    "summary": "Create a function that takes a whole number as input and returns the shape with that number's amount of sides. Here are the expected outputs to get from these inputs.\n\nInputs | Outputs\n--- | ---\n1 | \"circle\"\n2 | \"semi-circle\"\n3 | \"triangle\"\n4 | \"square\"\n5 | \"pentagon\"\n6 | \"hexagon\"\n7 | \"heptagon\"\n8 | \"octagon\"\n9 | \"nonagon\"\n10 | \"decagon\"\n\nExamples\nnSidedShape",
    "tags": [
      "math",
      "arrays",
      "geometry",
      "objects"
    ],
    "title": "Shapes With N Sides"
  },
  {
    "_id": "vKpGt4ufSKmEJ3Xjd",
    "difficulty": 0.9527925531914894,
    "language": "java",
    "summary": "Create a function which returns the number of true values there are in an array.\n\nExamples\ncountTrue([true, false, false, true, false]) ➞ 2\n\ncountTrue([false, false, false, false]) ➞ 0\n\ncountTrue([]) ➞ 0\n\nNotes\nReturn 0 if given an empty array.\nAll array items are of the type bool (true or false).",
    "tags": [
      "arrays",
      "language_fundamentals"
    ],
    "title": "How Much is True?"
  },
  {
    "_id": "5LnycSd2xT4uwZCpi",
    "difficulty": 0.9659477866061293,
    "language": "java",
    "summary": "Create a method that takes a string and returns the word count. The string will be a sentence.\n\nExamples\ncountWords(\"Just an example here move along\") ➞ 6\n\ncountWords(\"This is a test\") ➞ 4\n\ncountWords(\"What an easy task, right\") ➞ 5\n\nNotes\nIf you get stuck on a challenge, find help in the Resources tab.\nIf you're really stuck, unlock solutions in the Solutions",
    "tags": [
      "strings",
      "math",
      "numbers"
    ],
    "title": "Get Word Count"
  },
  {
    "_id": "PZnwXraqBPYv7w4Sm",
    "difficulty": 1.004696673189824,
    "language": "java",
    "summary": "Create a function that takes two strings and returns true if the first string ends with the second string; otherwise return false.\n\nExamples\ncheckEnding(\"abc\", \"bc\") ➞ true\n\ncheckEnding(\"abc\", \"d\") ➞ false\n\ncheckEnding(\"samurai\", \"zi\") ➞ false\n\ncheckEnding(\"feminine\", \"nine\") ➞ true\n\ncheckEnding(\"convention\", \"tio\") ➞ false\n\nNotes\nAll test cases are valid one",
    "tags": [
      "validation",
      "strings"
    ],
    "title": "Check if String Ending Matches Second String"
  },
  {
    "_id": "4kEHkvobTA4i6AQRE",
    "difficulty": 1.0463832136940916,
    "language": "java",
    "summary": "This Triangular Number Sequence is generated from a pattern of dots that form a triangle. The first 5 numbers of the sequence, or dots, are:\n\n1, 3, 6, 10, 15\n\nThis means that the first triangle has just one dot, the second one has three dots, the third one has 6 dots and so on.\n\nWrite a function that returns the number of dots when given its corresponding tria",
    "tags": [
      "algorithms",
      "loops",
      "math",
      "algebra"
    ],
    "title": "Triangular Number Sequence"
  },
  {
    "_id": "gyfsGx7KrGLscxFrD",
    "difficulty": 1.048803378695448,
    "language": "java",
    "summary": "Create a function that takes two numbers and a mathematical operator + - / * and will perform a calculation with the given numbers.\n\nExamples\ncalculator(2, '+', 2) ➞ 4\n\ncalculator(2, '*', 2) ➞ 4\n\ncalculator(4, '/', 2) ➞ 2\n\nNotes\nIf the input tries to divide by 0, return 0.",
    "tags": [
      "algebra",
      "math",
      "numbers"
    ],
    "title": "Basic Calculator"
  },
  {
    "_id": "aWzxPLibBLJgn8AbZ",
    "difficulty": 1.057915057915058,
    "language": "java",
    "summary": "Write a function that returns true if there exists at least one number that is larger than or equal to n.\n\nExamples\nexistsHigher([5, 3, 15, 22, 4], 10) ➞ true\n\nexistsHigher([1, 2, 3, 4, 5], 8) ➞ false\n\nexistsHigher([4, 3, 3, 3, 2, 2, 2], 4) ➞ true\n\nexistsHigher([], 5) ➞ false\n\nNotes\nReturn false for an empty array [].",
    "tags": [
      "higher_order_functions",
      "arrays",
      "validation"
    ],
    "title": "Exists a Number Higher?"
  },
  {
    "_id": "8WBpaPzLP7piuHNeR",
    "difficulty": 1.0595439189189189,
    "language": "java",
    "summary": "Create a method that accepts a string (of a person's first and last name) and returns a string with the first and last name swapped.\n\nExamples\nnameShuffle(\"Donald Trump\") ➞ \"Trump Donald\"\n\nnameShuffle(\"Rosie O'Donnell\") ➞ \"O'Donnell Rosie\"\n\nnameShuffle(\"Seymour Butts\") ➞ \"Butts Seymour\"\n\nNotes\nThere will be exactly one space between the first and last name.\nIf",
    "tags": [
      "strings",
      "sorting"
    ],
    "title": "Shuffle the Name"
  },
  {
    "_id": "Wci9YChXWRj6JBeFP",
    "difficulty": 1.0627376425855513,
    "language": "java",
    "summary": "Create a function that takes two arguments: the original price and the discount percentage as integers and returns the final price after the discount.\n\nAlternative Text\n\nExamples\ndiscount(1500, 50) ➞ 750\n\ndiscount(89, 20) ➞ 71.2\n\ndiscount(100, 75) ➞ 25\n\nNotes\nYour answer should be rounded to two decimal places.",
    "tags": [
      "math",
      "numbers"
    ],
    "title": "Find the Discount"
  },
  {
    "_id": "yzfiD6ZXt84qL3v2e",
    "difficulty": 1.0670926517571886,
    "language": "java",
    "summary": "Write a function that stutters a word as if someone is struggling to read it. The first two letters are repeated twice with an ellipsis ... and space after each, and then the word is pronounced with a question mark ?.\n\nExamples\nstutter(\"incredible\") ➞ \"in... in... incredible?\"\n\nstutter(\"enthusiastic\") ➞ \"en... en... enthusiastic?\"\n\nstutter(\"outstanding\") ➞ \"ou",
    "tags": [
      "algorithms",
      "formatting",
      "strings",
      "language_fundamentals"
    ],
    "title": "Stuttering Function"
  },
  {
    "_id": "rYD9NTBmNhaPM6wx2",
    "difficulty": 1.0683473389355742,
    "language": "java",
    "summary": "Write a function that returns true if two rooks can attack each other, and false otherwise.\n\nExamples\ncanCapture([\"A8\", \"E8\"]) ➞ true\n\ncanCapture([\"A1\", \"B2\"]) ➞ false\n\ncanCapture([\"H4\", \"H3\"]) ➞ true\n\ncanCapture([\"F5\", \"C8\"]) ➞ false\n\nNotes\nAssume no blocking pieces.\nTwo rooks can attack each other if they share the same row (letter) or column (number).",
    "tags": [
      "arrays",
      "games",
      "validation",
      "conditions"
    ],
    "title": "Capture the Rook"
  },
  {
    "_id": "QCgoxbd32BqFr6AY7",
    "difficulty": 1.0735294117647058,
    "language": "java",
    "summary": "Create a function that takes a number as an argument and returns \"Fizz\", \"Buzz\" or \"FizzBuzz\".\n\nIf the number is a multiple of 3 the output should be \"Fizz\".\nIf the number given is a multiple of 5, the output should be \"Buzz\".\nIf the number given is a multiple of both 3 and 5, the output should be \"FizzBuzz\".\nIf the number is not a multiple of either 3 or 5, t",
    "tags": [
      "math",
      "sorting",
      "logic",
      "language_fundamentals",
      "interview"
    ],
    "title": "FizzBuzz Interview Question"
  },
  {
    "_id": "jfquehNLzpXW5ZQu5",
    "difficulty": 1.0760180995475113,
    "language": "java",
    "summary": "Given a total due and an array representing the amount of change in your pocket, determine whether or not you are able to pay for the item. Change will always be represented in the following order: quarters, dimes, nickels, pennies.\n\nTo illustrate: changeEnough([25, 20, 5, 0], 4.25) should yield true, since having 25 quarters, 20 dimes, 5 nickels and 0 pennies",
    "tags": [
      "arrays",
      "math",
      "numbers"
    ],
    "title": "Convenience Store"
  },
  {
    "_id": "hymPkXdhmDQLe87QT",
    "difficulty": 1.0772727272727274,
    "language": "java",
    "summary": "Create a function that takes an array and returns the difference between the biggest and smallest numbers.\n\nExamples\ndifferenceMaxMin([10, 4, 1, 4, -10, -50, 32, 21]) ➞ 82\n// Smallest number is -50, biggest is 32.\n\ndifferenceMaxMin([44, 32, 86, 19]) ➞ 67\n// Smallest number is 19, biggest is 86.\n\nNotes\nN/A",
    "tags": [
      "arrays",
      "numbers",
      "math",
      "loops"
    ],
    "title": "Difference of Max and Min Numbers in Array"
  },
  {
    "_id": "nfc7H9CQFqJp54uEh",
    "difficulty": 1.0791311093871219,
    "language": "java",
    "summary": "Create a function that takes three integer arguments (a, b, c)  and returns the amount of integers which are of equal value.\n\nExamples\nequal(3, 4, 3) ➞ 2\n\nequal(1, 1, 1) ➞ 3\n\nequal(3, 4, 1) ➞ 0\n\nNotes\nYour function must return 0, 2 or 3.",
    "tags": [
      "algorithms",
      "conditions",
      "numbers"
    ],
    "title": "Equality of 3 Values"
  },
  {
    "_id": "5gPCp7v7iDWZvb4YQ",
    "difficulty": 1.0795246800731262,
    "language": "java",
    "summary": "Create a method that takes a string as its argument and returns the string in reversed order.\n\nExamples\nreverse(\"Hello World\") ➞ \"dlroW olleH\"\n\nreverse(\"The quick brown fox.\") ➞ \".xof nworb kciuq ehT\"\n\nreverse(\"Edabit is really helpful!\") ➞ \"!lufpleh yllaer si tibadE\"\n\nNotes\nYou can expect a valid string for all test cases.",
    "tags": [
      "strings",
      "formatting",
      "sorting"
    ],
    "title": "Reverse the Order of a String"
  },
  {
    "_id": "R3PnRquBPADEqDxZg",
    "difficulty": 1.0800889877641824,
    "language": "java",
    "summary": "A word has been split into a left part and a right part. Re-form the word by adding both halves together, changing the first character to an uppercase letter.\n\nExamples\ngetWord(\"seas\", \"onal\") ➞ \"Seasonal\"\n\ngetWord(\"comp\", \"lete\") ➞ \"Complete\"\n\ngetWord(\"lang\", \"uage\") ➞ \"Language\"\n\nNotes\nN/A",
    "tags": [
      "strings",
      "language_fundamentals",
      "formatting"
    ],
    "title": "Re-Form the Word"
  },
  {
    "_id": "akHQKSkHT26TuA7Ka",
    "difficulty": 1.0806451612903225,
    "language": "java",
    "summary": "You hired three programmers and you (hopefully) pay them. Create a function that takes three numbers (the hourly wages of each programmer) and returns the difference between the highest-paid programmer and the lowest-paid.\n\nExamples\nprogrammers(147, 33, 526) ➞ 493\n\nprogrammers(33, 72, 74) ➞ 41\n\nprogrammers(1, 5, 9) ➞ 8\n\nNotes\nDon't forget to return the result.",
    "tags": [
      "math",
      "algorithms",
      "numbers"
    ],
    "title": "The 3 Programmers Problem"
  },
  {
    "_id": "sPz2LcPZyAiBHRgwX",
    "difficulty": 1.0810372771474879,
    "language": "java",
    "summary": "Create a method that takes an array of 10 integers (between 0 and 9) and returns a string of those numbers formatted as a phone number (e.g. (555) 555-5555).\n\nExamples\nformatPhoneNumber([1, 2, 3, 4, 5, 6, 7, 8, 9, 0]) ➞ \"(123) 456-7890\"\n\nformatPhoneNumber([5, 1, 9, 5, 5, 5, 4, 4, 6, 8]) ➞ \"(519) 555-4468\"\n\nformatPhoneNumber([3, 4, 5, 5, 0, 1, 2, 5, 2, 7]) ➞ \"(",
    "tags": [
      "formatting",
      "arrays",
      "numbers"
    ],
    "title": "Phone Number Formatting"
  },
  {
    "_id": "H2MT5bAZ8Guj52zxK",
    "difficulty": 1.0816,
    "language": "java",
    "summary": "Write a function that finds the word \"bomb\" in the given string (not case sensitive). Return \"DUCK!\" if found, otherwise,\"Relax, there's no bomb.\".\n\nExamples\nbomb(\"There is a bomb.\") ➞ \"DUCK!\"\n\nbomb(\"Hey, did you think there is a BOMB?\") ➞ \"DUCK!\"\n\nbomb(\"This goes boom!!!\") ➞ \"Relax, there's no bomb.\"\n\nNotes\nThe string \"bomb\" may appear in different character",
    "tags": [
      "regex",
      "language_fundamentals",
      "strings"
    ],
    "title": "Find the Bomb"
  },
  {
    "_id": "y4QqLgKXXxqZnemAm",
    "difficulty": 1.0825958702064897,
    "language": "java",
    "summary": "Some basic arithmetic operators are +, -, *, /, and %. In this challenge you will be given three parameters, num1, num2, and an operator. Use the operator on number 1 and 2.\n\nExamples\noperate(1, 2, \"+\") ➞ 3\n// 1 + 2 = 3\n\noperate(7, 10, \"-\") ➞ -3\n// 7 - 10 = -3\n\noperate(20, 10, \"%\") ➞ 0\n// 20 % 10 = 0\n\nNotes\nThere will no division by zero.",
    "tags": [
      "math",
      "language_fundamentals"
    ],
    "title": "Many Operators!"
  },
  {
    "_id": "GBKphScsmDi9ek3ra",
    "difficulty": 1.083186877562976,
    "language": "java",
    "summary": "Create a function that takes a string and returns the number (count) of vowels contained within it.\n\nExamples\ncountVowels(\"Celebration\") ➞ 5\n\ncountVowels(\"Palm\") ➞ 1\n\ncountVowels(\"Prediction\") ➞ 4\n\nNotes\na, e, i, o, u are considered vowels (not y).\nAll test cases are one word and only contain letters.",
    "tags": [
      "regex",
      "strings",
      "loops",
      "interview"
    ],
    "title": "How Many Vowels?"
  },
  {
    "_id": "bkFqwEP5Gej23didA",
    "difficulty": 1.0842245989304813,
    "language": "java",
    "summary": "Create a function that takes a string, checks if it has the same number of x's and  o's and returns either true or false.\n\nRules\n\nReturn a boolean value (true or false).\nThe string can contain any character.\nWhen \"x\" and \"o\" are not in the string, return true.\n\nExamples\n\ngetXO(\"ooxx\") ➞ true\n\ngetXO(\"xooxx\") ➞ false\n\ngetXO(\"ooxXm\") ➞ true\n// Case insensitive.",
    "tags": [
      "strings",
      "conditions",
      "language_fundamentals",
      "validation",
      "regex"
    ],
    "title": "Xs and Os, Nobody Knows"
  },
  {
    "_id": "WM5s7vuHnXdcKCEjS",
    "difficulty": 1.0846846846846847,
    "language": "java",
    "summary": "Create a method that takes an array of integers and returns a new array, sorted in ascending order (smallest to biggest).\n\nSort integer array in ascending order.\nIf the function's argument is null, an empty array, or undefined; return an empty array.\nReturn a new array of sorted numbers.\n\nExamples\nsortNumsAscending([1, 2, 10, 50, 5]) ➞ [1, 2, 5, 10, 50]\n\nsortN",
    "tags": [
      "sorting",
      "arrays",
      "numbers"
    ],
    "title": "Sort Numbers in Ascending Order"
  },
  {
    "_id": "pbK6j5Try2TuDeSwK",
    "difficulty": 1.0851063829787233,
    "language": "java",
    "summary": "Create a function that will remove the letters \"a\", \"b\" and \"c\" from the given string and return the modified version. If the given string does not contain \"a\", \"b\", or \"c\", return null.\n\nExamples\nremoveABC(\"Tesha is my world\") ➞ \"Tesh is my world\"\n\nremoveABC(\"This might be a bit hard\") ➞ \"This might e  it hrd\"\n\nremoveABC(\"hello world!\") ➞ null\n\nremoveABC(\"\") ",
    "tags": [
      "strings",
      "loops",
      "regex"
    ],
    "title": "Remove The Letters ABC"
  },
  {
    "_id": "2tXKcSr4fZKMQToui",
    "difficulty": 1.0851063829787233,
    "language": "java",
    "summary": "You stutter when you talk with continued repetition of sounds almost unknowingly, especially with the initial consonants of a word. Or at times when we're frightened, it causes us to stutter.\n\nCreate a function that mimics the stuttering of a spoken word. The function will repeat the first two letters of the word followed by an ellipses (...) plus a space char",
    "tags": [
      "strings",
      "formatting",
      "validation"
    ],
    "title": "Stuttering As We Speak"
  },
  {
    "_id": "oMCKfdMqgt9kxqA2M",
    "difficulty": 1.0856031128404668,
    "language": "java",
    "summary": "Create a function that takes a string and returns a new string with all vowels removed.\n\nExamples\nremoveVowels(\"I have never seen a thin person drinking Diet Coke.\")\n➞ \" hv nvr sn  thn prsn drnkng Dt Ck.\"\n\nremoveVowels(\"We're gonna build a wall!\")\n➞ \"W'r gnn bld  wll!\"\n\nremoveVowels(\"Happy Thanksgiving to all--even the haters and losers!\")\n➞ \"Hppy Thnksgvng t",
    "tags": [
      "formatting",
      "regex",
      "strings"
    ],
    "title": "Remove Every Vowel from a String"
  },
  {
    "_id": "FRtmuYD26pcQWFR7k",
    "difficulty": 1.0857142857142856,
    "language": "java",
    "summary": "Andy, Ben and Charlotte are playing a board game. The three of them decided to come up with a new scoring system. A player's first initial (\"A\", \"B\" or \"C\") denotes that player scoring a single point. Given a string of capital letters, return an array of the players' scores.\n\nFor instance, if ABBACCCCAC is written when the game is over, then Andy scored 3 poin",
    "tags": [
      "strings",
      "numbers"
    ],
    "title": "Scoring System"
  },
  {
    "_id": "KeX3ZcaPo3sEqXTYb",
    "difficulty": 1.0861968549796157,
    "language": "java",
    "summary": "Create a method that takes a string and returns a string in which each character is repeated once.\n\nExamples\ndoubleChar(\"String\") ➞ \"SSttrriinngg\"\n\ndoubleChar(\"Hello World!\") ➞ \"HHeelllloo  WWoorrlldd!!\"\n\ndoubleChar(\"1234!_ \") ➞ \"11223344!!__  \"\n\nNotes\nAll test cases contain valid strings. Don't worry about spaces, special characters or numbers. They're all co",
    "tags": [
      "strings",
      "formatting"
    ],
    "title": "Repeating Letters"
  },
  {
    "_id": "SvptD77rYQJgjDvZY",
    "difficulty": 1.0891472868217054,
    "language": "java",
    "summary": "A factor chain is an array where each previous element is a factor of the next  consecutive element. The following is a factor chain:\n\n[3, 6, 12, 36]\n\n// 3 is a factor of 6\n// 6 is a factor of 12\n// 12 is a factor of 36\n\nCreate a function that determines whether or not an array is a factor chain.\n\nExamples\nfactorChain([1, 2, 4, 8, 16, 32]) ➞ true\n\nfactorChain(",
    "tags": [
      "arrays",
      "loops",
      "validation"
    ],
    "title": "Factor Chain"
  },
  {
    "_id": "8hk27ha9CtqCQsYP8",
    "difficulty": 1.0899742930591259,
    "language": "java",
    "summary": "A graph is a set of nodes along with a set of edges connecting the nodes.\n\nGraph Example\n\nGraphs can be directed or undirected. In a directed graph, each edge has a direction whereas, in an undirected graph, edges do not have direction. The graph above is an undirected graph.\n\nTwo nodes in a graph are adjacent if there is an edge between them. In the above exa",
    "tags": [
      "arrays",
      "algorithms",
      "math",
      "validation",
      "data_structures"
    ],
    "title": "Adjacent Nodes"
  },
  {
    "_id": "MwYW3sRdZxno5hXAF",
    "difficulty": 1.0906976744186045,
    "language": "java",
    "summary": "Count the amount of ones in the binary representation of an integer. For example, since 12 is 1100 in binary, the return value should be 2.\n\nExamples\ncountOnes(0) ➞ 0\n\ncountOnes(100) ➞ 3\n\ncountOnes(999) ➞ 8\n\nNotes\nThe input will always be a valid integer (number).",
    "tags": [
      "formatting",
      "numbers"
    ],
    "title": "Count Ones in Binary Representation of Integer"
  },
  {
    "_id": "EaWY5d2pYBckrkAnS",
    "difficulty": 1.091182364729459,
    "language": "java",
    "summary": "Create a function that takes a word and returns true if the word has two consecutive identical letters.\n\nExamples\ndoubleLetters(\"loop\") ➞ true\n\ndoubleLetters(\"yummy\") ➞ true\n\ndoubleLetters(\"orange\") ➞ false\n\ndoubleLetters(\"munchkin\") ➞ false\n\nNotes\nN/A",
    "tags": [
      "strings",
      "regex",
      "validation"
    ],
    "title": "Double Letters"
  },
  {
    "_id": "zFccarRuia5zq4rhP",
    "difficulty": 1.0921409214092141,
    "language": "java",
    "summary": "Write a function that takes a string name and a number num (either 0 or 1) and return \"Hello\" + name if  num is 1, otherwise return \"Bye\" + name.\n\nExamples\nsayHelloBye(\"alon\", 1) ➞ \"Hello Alon\"\n\nsayHelloBye(\"Tomi\", 0) ➞ \"Bye Tomi\"\n\nsayHelloBye(\"jose\", 0) ➞ \"Bye Jose\"\n\nNotes\nThe name you return must be capitalized.",
    "tags": [
      "strings",
      "control_flow",
      "conditions"
    ],
    "title": "Say \"Hello\" Say \"Bye\""
  },
  {
    "_id": "paaguQWznz2cPNCiA",
    "difficulty": 1.0923076923076922,
    "language": "java",
    "summary": "Create a function that checks if the argument is an integer or a string. Return \"int\" if it's an integer and \"str\" if it's a string.\n\nExamples\nintOrString(8) ➞ \"int\"\n\nintOrString(\"Hello\") ➞ \"str\"\n\nintOrString(9843532) ➞ \"int\"\n\nNotes\nInput will either be an integer or a string.",
    "tags": [
      "numbers",
      "strings",
      "language_fundamentals",
      "validation"
    ],
    "title": "String or Integer?"
  },
  {
    "_id": "tQ26d2JJkxpjszfsk",
    "difficulty": 1.0932203389830508,
    "language": "java",
    "summary": "Create a function that takes an array of items and checks if the last item matches the rest of the array concatenated together.\n\nExamples\nmatchLastItem([\"i\", \"love\", \"tesh\", \"ilovetesh\"]) ➞ true\n// The last item is the rest joined.\n matchLastItem([\"i\", \"am\", \"into\", \"her\", \"world\", \"iamintoherworld\"]) ➞ true\n// The last item is the rest joined.\n\nmatchLastItem(",
    "tags": [
      "arrays",
      "validation",
      "strings"
    ],
    "title": "Match the Last Item"
  },
  {
    "_id": "ffhxMdssQfq5e9NkE",
    "difficulty": 1.0940860215053763,
    "language": "java",
    "summary": "Given a 10x10 grid of numbers 1-100, return the Spotlight Sum, given a number n. The spotlight sum can be defined as the total of the 8 numbers immediately surrounding the number n on the grid, including n in the total.\n\nWorked Example\n[\n  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n  [11, 12, 13, 14, 15, 16, 17, 18, 19, 20],\n  [21, 22, 23, 24, 25, 26, 27, 28, 29, 30],",
    "tags": [
      "math",
      "numbers"
    ],
    "title": "Spotlight Sum"
  },
  {
    "_id": "yk7GqGcCpFgQrk8fH",
    "difficulty": 1.0941043083900226,
    "language": "java",
    "summary": "Create a function that takes an array as an argument and returns true or false depending on whether the average of all elements in the array is a whole number or not.\n\nExamples\nisAvgWhole([1, 3]) ➞ true\n\nisAvgWhole([1, 2, 3, 4]) ➞ false\n\nisAvgWhole([1, 5, 6]) ➞ true\n\nisAvgWhole([1, 1, 1]) ➞ true\n\nisAvgWhole([9, 2, 2, 5]) ➞ false\n\nNotes\nN/A",
    "tags": [
      "math",
      "arrays",
      "validation",
      "loops"
    ],
    "title": "Is the Average of All Elements a Whole Number?"
  },
  {
    "_id": "pKmR5HRabYPkdGunz",
    "difficulty": 1.0941176470588236,
    "language": "java",
    "summary": "Create a method that takes an array of names and returns an array where only the first letter of each name is capitalized.\n\nExamples\ncapMe([\"mavis\", \"senaida\", \"letty\"]) ➞ [\"Mavis\", \"Senaida\", \"Letty\"]\n\ncapMe([\"samuel\", \"MABELLE\", \"letitia\", \"meridith\"]) ➞ [\"Samuel\", \"Mabelle\", \"Letitia\", \"Meridith\"]\n\ncapMe([\"Slyvia\", \"Kristal\", \"Sharilyn\", \"Calista\"]) ➞ [\"Sly",
    "tags": [
      "loops",
      "arrays",
      "formatting"
    ],
    "title": "Capitalize the Names"
  },
  {
    "_id": "kQZH2EDsn7LYvXk9S",
    "difficulty": 1.0945121951219512,
    "language": "java",
    "summary": "Create a function that returns the number of decimal places a number (given as a string) has. Any zeros after the decimal point count towards the number of decimal places.\n\nExamples\ngetDecimalPlaces(\"43.20\") ➞ 2\n\ngetDecimalPlaces(\"400\") ➞ 0\n\ngetDecimalPlaces(\"3.1\") ➞ 1\n\nNotes\nReturn 0 if the number doesn't have any decimal places (see example #2).",
    "tags": [
      "numbers",
      "strings",
      "regex"
    ],
    "title": "How Many Decimal Places?"
  },
  {
    "_id": "D7PZ7rcKGRiCvcm7C",
    "difficulty": 1.095948827292111,
    "language": "java",
    "summary": "Write a function that returns true if the binary string can be rearranged to form a string of alternating 0s and 1s.\n\nExamples\ncanAlternate(\"0001111\") ➞ true\n// Can make: \"1010101\"\n\ncanAlternate(\"01001\") ➞ true\n// Can make: \"01010\"\n\ncanAlternate(\"010001\") ➞ false\n\ncanAlternate(\"1111\") ➞ false\n\nNotes\nNo substring of the output may contain more than one consecut",
    "tags": [
      "strings",
      "validation",
      "logic"
    ],
    "title": "Alternating Ones and Zeroes"
  },
  {
    "_id": "P4sy69B7cqggNmtmm",
    "difficulty": 1.0966292134831461,
    "language": "java",
    "summary": "Return true if the sum of ASCII values of the first string is same as the sum of ASCII values of the second string, otherwise return false.\n\nExamples\nsameAscii(\"a\", \"a\") ➞ true\n\nsameAscii(\"AA\", \"B@\") ➞ true\n\nsameAscii(\"EdAbIt\", \"EDABIT\") ➞ false\n\nNotes\nIf you need some help with ASCII codes, check the Resources tab for an image of all ASCII codes used in this",
    "tags": [
      "strings",
      "validation"
    ],
    "title": "Same ASCII?"
  },
  {
    "_id": "J4Yop3GjeZELWeoqT",
    "difficulty": 1.097902097902098,
    "language": "java",
    "summary": "Create a function that takes an array of numbers and return both the minimum and maximum numbers, in that order.\n\nExamples\nminMax([1, 2, 3, 4, 5]) ➞ [1, 5]\n\nminMax([2334454, 5]) ➞ [5, 2334454]\n\nminMax([1]) ➞ [1, 1]\n\nNotes\nAll test arrays will have at least one element and are valid.",
    "tags": [
      "arrays",
      "numbers",
      "language_fundamentals"
    ],
    "title": "Find the Smallest and Biggest Numbers"
  },
  {
    "_id": "iW7rtor54mbFQ2RrZ",
    "difficulty": 1.0980392156862746,
    "language": "java",
    "summary": "Create a function that replaces all the vowels in a string with a specified character.\n\nExamples\nreplaceVowels(\"the aardvark\", '#') ➞ \"th# ##rdv#rk\"\n\nreplaceVowels(\"minnie mouse\", '?') ➞ \"m?nn?? m??s?\"\n\nreplaceVowels(\"shakespeare\", '') ➞ \"shkspr\"\n\nNotes\nAll characters will be in lower case.",
    "tags": [
      "strings",
      "regex"
    ],
    "title": "Vowel Replacer"
  },
  {
    "_id": "NrMGhrarTfpYSbr84",
    "difficulty": 1.0985915492957747,
    "language": "java",
    "summary": "Create a function that takes a string and returns the middle character(s). If the word's length is odd, return the middle character. If the word's length is even, return the middle two characters.\n\nExamples\ngetMiddle(\"test\") ➞ \"es\"\n\ngetMiddle(\"testing\") ➞ \"t\"\n\ngetMiddle(\"middle\") ➞ \"dd\"\n\ngetMiddle(\"A\") ➞ \"A\"\n\nNotes\nAll test cases contain a single word (as a st",
    "tags": [
      "strings",
      "formatting",
      "math",
      "regex"
    ],
    "title": "Return the Middle Character(s) of a String"
  },
  {
    "_id": "s8RHRY9hfmvYMuaeC",
    "difficulty": 1.0992268041237114,
    "language": "java",
    "summary": "Create a function that returns the number of hashes and pluses in a string.\n\nExamples\nhashPlusCount(\"###+\") ➞ [3, 1]\n\nhashPlusCount(\"##+++#\") ➞ [3, 3]\n\nhashPlusCount(\"#+++#+#++#\") ➞ [4, 6]\n\nhashPlusCount(\"\") ➞ [0, 0]\n\nNotes\nReturn [0, 0] for an empty string.\nReturn in the order of [hashes, pluses].",
    "tags": [
      "strings",
      "loops",
      "regex"
    ],
    "title": "Hashes and Pluses"
  },
  {
    "_id": "TM5f33Mpu52m2jcat",
    "difficulty": 1.1,
    "language": "java",
    "summary": "Given an array of 10 numbers, return the maximum possible total made by summing just  5 of the 10 numbers.\n\nExamples\nmaxTotal([1, 1, 0, 1, 3, 10, 10, 10, 10, 1]) ➞ 43\n\nmaxTotal([0, 0, 0, 0, 0, 0, 0, 0, 0, 100]) ➞ 100\n\nmaxTotal([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) ➞ 40\n\nNotes\nYou can select any 5 numbers from the given array to form maximum possible total.",
    "tags": [
      "arrays",
      "language_fundamentals",
      "sorting"
    ],
    "title": "Maximum Possible Total"
  },
  {
    "_id": "YmeiRhzaiR3MCPBiT",
    "difficulty": 1.1,
    "language": "java",
    "summary": "An array is special if every even index contains an even number and every odd index contains an odd number. Create a function that returns true if an array is special, and false otherwise.\n\nExamples\nisSpecialArray([2, 7, 4, 9, 6, 1, 6, 3]) ➞ true\n// Even indices: [2, 4, 6, 6]; Odd indices: [7, 9, 1, 3]\n\nisSpecialArray([2, 7, 9, 1, 6, 1, 6, 3]) ➞ false\n// Index",
    "tags": [
      "arrays",
      "validation",
      "higher_order_functions",
      "conditions",
      "loops"
    ],
    "title": "Special Arrays"
  },
  {
    "_id": "ryEdPW2eqyngyWayy",
    "difficulty": 1.100204498977505,
    "language": "java",
    "summary": "Create a function that takes a string and returns a string with spaces in between all of the characters.\n\nExamples\nspaceMeOut(\"space\") ➞ \"s p a c e\"\n\nspaceMeOut(\"far out\") ➞ \"f a r   o u t\"\n\nspaceMeOut(\"elongated musk\") ➞ \"e l o n g a t e d   m u s k\"\n\nNotes\nTreat a space as its own character (i.e. leave three spaces between words).",
    "tags": [
      "strings",
      "formatting",
      "language_fundamentals",
      "arrays"
    ],
    "title": "Spaces Between Each Character"
  },
  {
    "_id": "Xf7PqJnzukWe2WxqB",
    "difficulty": 1.1006944444444444,
    "language": "java",
    "summary": "Write a function that takes an array of numbers and returns the second largest number.\n\nExamples\nsecondLargest([10, 40, 30, 20, 50]) ➞ 40\n\nsecondLargest([25, 143, 89, 13, 105]) ➞ 105\n\nsecondLargest([54, 23, 11, 17, 10]) ➞ 23\n\nNotes\nThere will be at least two numbers in the array.",
    "tags": [
      "numbers",
      "arrays",
      "language_fundamentals"
    ],
    "title": "Find The Second Largest Number"
  },
  {
    "_id": "HDk4PC9w6KPS3X25W",
    "difficulty": 1.1007371007371007,
    "language": "java",
    "summary": "Create a function that repeats each character in a string n times.\n\nExamples\nrepeat(\"mice\", 5) ➞ \"mmmmmiiiiiccccceeeee\"\n\nrepeat(\"hello\", 3) ➞ \"hhheeellllllooo\"\n\nrepeat(\"stop\", 1) ➞ \"stop\"\n\nNotes\nN/A",
    "tags": [
      "strings",
      "loops",
      "language_fundamentals"
    ],
    "title": "Repeating Letters N Times"
  },
  {
    "_id": "2eWypgBrG9yerbjFd",
    "difficulty": 1.1015625,
    "language": "java",
    "summary": "Create a function that takes the number of daily average recovered cases recovers, daily average newCases, current activeCases,  and returns the number of days it will take to reach zero cases.\n\nExamples\nendCorona(4000, 2000, 77000) ➞ 39\n\nendCorona(3000, 2000, 50699) ➞ 51\n\nendCorona(30000, 25000, 390205) ➞ 79\n\nNotes\nDaily recovered cases are always greater tha",
    "tags": [
      "numbers",
      "math"
    ],
    "title": "End Corona!"
  },
  {
    "_id": "CDuD3xGtWRhnFzAP2",
    "difficulty": 1.1016949152542372,
    "language": "java",
    "summary": "Write a function that receives two portions of a path and joins them. The portions will be joined with the \"/\" separator. There could be only one separator and if it is not present it should be added.\n\nExamples\njoinPath(\"portion1\", \"portion2\") ➞ \"portion1/portion2\"\n\njoinPath(\"portion1/\", \"portion2\") ➞ \"portion1/portion2\"\n\njoinPath(\"portion1\", \"/portion2\") ➞ \"p",
    "tags": [
      "strings",
      "language_fundamentals"
    ],
    "title": "Join Two Portions of a Path"
  },
  {
    "_id": "M8ZEHjhwCDCjYeY3n",
    "difficulty": 1.1019607843137256,
    "language": "java",
    "summary": "Create a function that takes a number (step) as an argument and returns the amount of boxes in that step of the sequence.\n\nBox Sequence Image\n\nStep 0: Start with 0\nStep 1: Add 3\nStep 2: Subtract 1\nRepeat Step 1 & 2 ...\n\nExamples\nboxSeq(0) ➞ 0\n\nboxSeq(1) ➞ 3\n\nboxSeq(2) ➞ 2\n\nNotes\nStep (the input) is always a positive integer (or zero).",
    "tags": [
      "algebra",
      "algorithms",
      "loops"
    ],
    "title": "Algebra Sequence — Boxes"
  },
  {
    "_id": "hgHMhpJjyFxYJMMXp",
    "difficulty": 1.1020408163265305,
    "language": "java",
    "summary": "Create a function that returns the selected filename from a path including the file extension.\n\nExamples\ngetFilename(\"C:/Projects/pil_tests/ascii/edabit.txt\") ➞ \"edabit.txt\"\n\ngetFilename(\"C:/Users/johnsmith/Music/Beethoven5.mp3\") ➞ \"Beethoven5.mp3\"\n\ngetFilename(\"ffprobe.exe\") ➞ \"ffprobe.exe\"\n\nNotes\nTests will include both absolute and relative paths.\nFor simpl",
    "tags": [
      "regex",
      "language_fundamentals",
      "arrays"
    ],
    "title": "Get the File Name"
  },
  {
    "_id": "jnrPtFbstb2cB3Raj",
    "difficulty": 1.1020408163265305,
    "language": "java",
    "summary": "Create two functions: isPrefix(word, prefix-) and isSuffix(word, -suffix).\n\nisPrefix should return true if it begins with the prefix argument.\nisSuffix should return true if it ends with the suffix argument.\n\nOtherwise return false.\n\nExamples\nisPrefix(\"automation\", \"auto-\") ➞ true\n\nisSuffix(\"arachnophobia\", \"-phobia\") ➞ true\n\nisPrefix(\"retrospect\", \"sub-\") ➞ f",
    "tags": [
      "strings",
      "regex",
      "validation"
    ],
    "title": "Prefixes vs. Suffixes"
  },
  {
    "_id": "MsJzAHPmmmcwF4iCr",
    "difficulty": 1.1022222222222222,
    "language": "java",
    "summary": "Create a function that returns the index of the first vowel in a string.\n\nExamples\nfirstVowel(\"apple\") ➞ 0\n\nfirstVowel(\"hello\") ➞ 1\n\nfirstVowel(\"STRAWBERRY\") ➞ 3\n\nfirstVowel(\"pInEaPPLe\") ➞ 1\n\nNotes\nInput will be single words.\nCharacters in words will be upper or lower case.\n\"y\" is not considered a vowel.\nInput always contains a vowel.",
    "tags": [
      "strings",
      "language_fundamentals",
      "loops",
      "regex"
    ],
    "title": "Return the Index of the First Vowel"
  },
  {
    "_id": "kzALnF5nT9YCbGMMm",
    "difficulty": 1.1025641025641026,
    "language": "java",
    "summary": "Create a function to find NaN in an array of numbers. The return value should be the index where NaN is found. If NaN is not found in the array, then return -1.\n\nExamples\nfindNaN([1, 2, NaN]) ➞ 2\n\nfindNaN([NaN, 1, 2, 3, 4]) ➞ 0\n\nfindNaN([0, 1, 2, 3, 4]) ➞ -1\n\nNotes\nNaN will occur in the input array only once.",
    "tags": [
      "arrays",
      "numbers"
    ],
    "title": "Find NaN in an Array"
  },
  {
    "_id": "xkD7RBBDiWuDHTiXE",
    "difficulty": 1.1027667984189724,
    "language": "java",
    "summary": "Create a function that returns true if the first array can be nested inside the second.\n\narr1 can be nested inside arr2 if:\n\narr1's min is greater than arr2's min.\narr1's max is less than arr2's max.\n\nExamples\ncanNest([1, 2, 3, 4], [0, 6]) ➞ true\n\ncanNest([3, 1], [4, 0]) ➞ true\n\ncanNest([9, 9, 8], [8, 9]) ➞ false\n\ncanNest([1, 2, 3, 4], [2, 3]) ➞ false\n\nNotes\nN",
    "tags": [
      "arrays",
      "validation"
    ],
    "title": "Check if One Array can be Nested in Another"
  },
  {
    "_id": "XsJnE47kiTt39t3da",
    "difficulty": 1.1031746031746033,
    "language": "java",
    "summary": "Create the function that takes an array with objects and returns the sum of people's budgets.\n\nExamples\ngetBudgets([\n  { name: \"John\", age: 21, budget: 23000 },\n  { name: \"Steve\",  age: 32, budget: 40000 },\n  { name: \"Martin\",  age: 16, budget: 2700 }\n]) ➞ 65700\n\ngetBudgets([\n  { name: \"John\",  age: 21, budget: 29000 },\n  { name: \"Steve\",  age: 32, budget: 320",
    "tags": [
      "objects",
      "logic",
      "arrays"
    ],
    "title": "Get Sum of People's Budget"
  },
  {
    "_id": "8s2jBHWKXCrT5oQ63",
    "difficulty": 1.103225806451613,
    "language": "java",
    "summary": "Consider the following operation on an arbitrary positive integer:\nIf n is even -> n / 2\nIf n is odd -> n * 3 + 1\n\nCreate a function to repeatedly evaluate these operations, until reaching 1. Return the number of steps it took.\n\nSee the following example, using 10 as the input, with 6 steps:\n\n10 is even - 10 / 2 = 5\n5 is odd - 5 * 3 + 1 = 16\n16 is even - 16 /",
    "tags": [
      "algebra",
      "algorithms",
      "numbers",
      "loops",
      "recursion"
    ],
    "title": "The Collatz Conjecture"
  },
  {
    "_id": "Jr7ueGQMEthBFYpB6",
    "difficulty": 1.1049180327868853,
    "language": "java",
    "summary": "Write a function that takes a two-digit number and determines if it's the largest of two possible digit swaps.\n\nTo illustrate:\nlargestSwap(27) ➞ false\n\nlargestSwap(43) ➞ true\n\nIf 27 is our input, we should return false because swapping the digits gives us 72, and 72 > 27. On the other hand, swapping 43 gives us 34, and 43 > 34.\n\nExamples\nlargestSwap(14) ➞ fals",
    "tags": [
      "numbers",
      "logic",
      "validation"
    ],
    "title": "Largest Swap"
  },
  {
    "_id": "jwXx478haGbZpRCWQ",
    "difficulty": 1.105263157894737,
    "language": "java",
    "summary": "Create a function that finds all even numbers from 1 to the given number.\n\nExamples\nfindEvenNums(8) ➞ [2, 4, 6, 8]\n\nfindEvenNums(4) ➞ [2, 4]\n\nfindEvenNums(2) ➞ [2]\n\nNotes\nIf there are no even numbers, return an empty array.",
    "tags": [
      "arrays",
      "conditions",
      "numbers"
    ],
    "title": "Even Number Generator"
  },
  {
    "_id": "BZzAm9KXuB993p35r",
    "difficulty": 1.1054545454545455,
    "language": "java",
    "summary": "Write a function  that takes all even-indexed characters and odd-indexed characters from a string and concatenates them together.\n\nTo illustrate:\nindexShuffle(\"abcd\") ➞ \"acbd\"\n// \"ac\" (even-indexed) + \"bd\" (odd-indexed)\n\nExamples\nindexShuffle(\"abcdefg\") ➞ \"acegbdf\"\n\nindexShuffle(\"holiday\") ➞ \"hldyoia\"\n\nindexShuffle(\"maybe\") ➞ \"myeab\"\n\nNotes\n0 should be treated",
    "tags": [
      "strings",
      "loops"
    ],
    "title": "Index Shuffle"
  },
  {
    "_id": "zgBjnxQw9MHTBHLED",
    "difficulty": 1.1057692307692308,
    "language": "java",
    "summary": "Given an unsorted array, create a function that returns the nth smallest integer (the smallest integer is the first smallest, the second smallest integer is the second smallest, etc).\n\nExamples\nnthSmallest([1, 3, 5, 7], 1) ➞ 1\n\nnthSmallest([1, 3, 5, 7], 3) ➞ 5\n\nnthSmallest([1, 3, 5, 7], 5) ➞ -1\n\nnthSmallest([7, 3, 5, 1], 2) ➞ 3\n\nNotes\nn will always be >= 1.\nEa",
    "tags": [
      "arrays",
      "sorting",
      "language_fundamentals",
      "logic"
    ],
    "title": "Nth Smallest Integer"
  },
  {
    "_id": "6gDTBRgZKpotCsgib",
    "difficulty": 1.1064814814814814,
    "language": "java",
    "summary": "When creating variables, the variable name must always start with a letter and cannot contain spaces, though numbers and underscores are allowed to be contained in it also.\n\nCreate a function which returns true if a given variable name is valid, otherwise return false.\n\nExamples\nvariableValid(\"result\") ➞ true\n\nvariableValid(\"odd_nums\") ➞ true\n\nvariableValid(\"2",
    "tags": [
      "conditions",
      "strings",
      "validation",
      "regex"
    ],
    "title": "Valid Variable Names"
  },
  {
    "_id": "H4smHFuL5wn58imFK",
    "difficulty": 1.1067961165048543,
    "language": "java",
    "summary": "In semantic versioning a piece of software can be represented in a format like this example: 6.1.9.\n\nThe first number is the major version.\nThe second number is the minor version.\nThe third number is the patch (bug fixes).\n\nWrite three separate functions, one to retrieve each element in the semantic versioning specification.\n\nExamples\n// 6.1.9\nretrieveMajor(\"6",
    "tags": [
      "strings",
      "formatting"
    ],
    "title": "Semantic Versioning"
  },
  {
    "_id": "tgcyRZECD5tqHvTWi",
    "difficulty": 1.1070110701107012,
    "language": "java",
    "summary": "Given a fraction as a string, return whether or not it is greater than 1 when evaluated.\n\nExamples\ngreaterThanOne(\"1/2\") ➞ false\n\ngreaterThanOne(\"7/4\") ➞ true\n\ngreaterThanOne(\"10/10\") ➞ false\n\nNotes\nFractions must be strictly greater than 1 (see example #3).",
    "tags": [
      "language_fundamentals",
      "strings",
      "validation",
      "math"
    ],
    "title": "Fraction Greater Than One"
  },
  {
    "_id": "zr7BBJbeYikNBN2hf",
    "difficulty": 1.1071428571428572,
    "language": "java",
    "summary": "A group of friends have decided to start a secret society. The name will be the first letter of each of their names, sorted in alphabetical order.\n\nCreate a function that takes in an array of names and returns the name of the secret society.\n\nExamples\nsocietyName([\"Adam\", \"Sarah\", \"Malcolm\"]) ➞ \"AMS\"\n\nsocietyName([\"Harry\", \"Newt\", \"Luna\", \"Cho\"]) ➞ \"CHLN\"\n\nsoc",
    "tags": [
      "strings",
      "arrays"
    ],
    "title": "Secret Society"
  },
  {
    "_id": "LmiWWX2kdWn2Z5aZv",
    "difficulty": 1.1075418994413408,
    "language": "java",
    "summary": "Create a method that takes an array of integers and returns an array where each integer is the sum of itself + all previous numbers in the array.\n\nExamples\ncumulativeSum([1, 2, 3]) ➞ [1, 3, 6]\n\ncumulativeSum([1, -2, 3]) ➞ [1, -1, 2]\n\ncumulativeSum([3, 3, -2, 408, 3, 3]) ➞ [3, 6, 4, 412, 415, 418]\n\nNotes\nReturn an empty array if the input is an empty array.",
    "tags": [
      "arrays",
      "math",
      "numbers",
      "loops"
    ],
    "title": "Cumulative Array Sum"
  },
  {
    "_id": "SmKPaHy5uY2gMk9na",
    "difficulty": 1.1078167115902966,
    "language": "java",
    "summary": "Zip codes consist of 5 consecutive digits. Given a string, write a function to determine whether the input is a valid zip code. A valid zip code is as follows:\n\nMust only contain numbers (no non-digits allowed).\nMust not contain any spaces.\nMust not be greater than 5 digits in length.\n\nExamples\nisValid(\"59001\") ➞ true\n\nisValid(\"853a7\") ➞ false\n\nisValid(\"732 32",
    "tags": [
      "strings",
      "regex",
      "validation"
    ],
    "title": "Valid Zip Code"
  },
  {
    "_id": "yRFLwNAw5wJkHsNgS",
    "difficulty": 1.108433734939759,
    "language": "java",
    "summary": "Create a function that takes two vectors as arrays and checks if the two vectors are orthogonal or not. The return value is boolean. Two vectors a and b are orthogonal if their dot product is equal to zero.\n\nExamples\nisOrthogonal([1, 2], [2, -1]) ➞ true\n\nisOrthogonal([3, -1], [7, 5]) ➞ false\n\nisOrthogonal([1, 2, 0], [2, -1, 10]) ➞ true\n\nNotes\nThe two arrays wi",
    "tags": [
      "math",
      "language_fundamentals",
      "validation"
    ],
    "title": "Orthogonal Vector"
  },
  {
    "_id": "jwzMsyo2tbgn2KbGQ",
    "difficulty": 1.1089385474860336,
    "language": "java",
    "summary": "Write a function that transforms all letters from [a, m] to 0 and letters from [n, z] to 1 in a string.\n\nExamples\nconvertBinary(\"house\") ➞ \"01110\"\n\nconvertBinary(\"excLAIM\") ➞ \"0100000\"\n\nconvertBinary(\"moon\") ➞ \"0111\"\n\nNotes\nConversion should be case insensitive (see example #2).",
    "tags": [
      "strings",
      "regex"
    ],
    "title": "Transforming Words into Binary Strings"
  },
  {
    "_id": "n6bgfrTFfNZt4yWkJ",
    "difficulty": 1.1089494163424125,
    "language": "java",
    "summary": "Christmas Eve is almost upon us, so naturally we need to prepare some milk and cookies for Santa! Create a method that accepts a GregorianCalendar object and returns true if it's Christmas Eve (December 24th) and false otherwise.\n\nExamples\nGregorianCalendar(2013, 11, 24) ➞ true\n\nGregorianCalendar(2013, 0, 23) ➞ false\n\nGregorianCalendar(3000, 11, 24) ➞ true\n\nNo",
    "tags": [
      "validation",
      "dates"
    ],
    "title": "Is it Time for Milk and Cookies?"
  },
  {
    "_id": "HtruskPio7ricRvuG",
    "difficulty": 1.1090909090909091,
    "language": "java",
    "summary": "Create a function that returns the total number of steps it takes to transform each element to the maximal element in the array. Each step consists of incrementing a digit by one.\n\nExamples\nincrementToTop([3, 4, 5]) ➞ 3\n// Maximal element in the array is 5.\n// To transform 3 to 5 requires 2 steps: 3 -> 4, 4 -> 5.\n// To transform 4 to 5 requires 1 step: 4 -> 5.",
    "tags": [
      "arrays",
      "logic",
      "loops"
    ],
    "title": "Increment to Top"
  },
  {
    "_id": "cwLnTvxpBX5espEgs",
    "difficulty": 1.1092564491654022,
    "language": "java",
    "summary": "A palindrome is a word that is identical forward and backwards.\n\nmom\nracecar\nkayak\n\nGiven a word, create a function that checks whether it is a palindrome.\n\nExamples\ncheckPalindrome(\"mom\") ➞ true\n\ncheckPalindrome(\"scary\") ➞ false\n\ncheckPalindrome(\"reviver\") ➞ true\n\ncheckPalindrome(\"stressed\") ➞ false\n\nNotes\nAll test input is lower cased.",
    "tags": [
      "strings",
      "validation",
      "loops",
      "interview"
    ],
    "title": "Is the String a Palindrome?"
  },
  {
    "_id": "8ZFob4Juk8jzHMAHA",
    "difficulty": 1.110091743119266,
    "language": "java",
    "summary": "Write a function that takes a credit card number and only displays the last four characters. The rest of the card number must be replaced by **.\n\nExamples\ncardHide(\"1234123456785678\") ➞ \"**5678\"\n\ncardHide(\"8754456321113213\") ➞ \"**3213\"\n\ncardHide(\"35123413355523\") ➞ \"**5523\"\n\nExamples\nEnsure you return a string.\nThe length of the string must remain the same as ",
    "tags": [
      "strings",
      "numbers",
      "formatting"
    ],
    "title": "Hiding the Card Number"
  },
  {
    "_id": "bL2E8p5DGWSNmEtAE",
    "difficulty": 1.1102150537634408,
    "language": "java",
    "summary": "ATM machines allow 4 or 6 digit PIN codes and PIN codes cannot contain anything but exactly 4 digits or exactly 6 digits. Your task is to create a method that takes a string and returns true if the PIN is valid and false if it's not.\n\nExamples\nvalidatePIN(\"1234\") ➞ true\n\nvalidatePIN(\"12345\") ➞ false\n\nvalidatePIN(\"a234\") ➞ false\n\nvalidatePIN(\"\") ➞ false\n\nNotes",
    "tags": [
      "regex",
      "validation"
    ],
    "title": "ATM PIN Code Validation"
  },
  {
    "_id": "2zKtCWQM2rSxMQqLX",
    "difficulty": 1.1102941176470589,
    "language": "java",
    "summary": "Create a method that takes a string  and returns a string with its letters in alphabetical order.\n\nExamples\nAlphabetSoup(\"hello\") ➞ \"ehllo\"\n\nAlphabetSoup(\"edabit\") ➞ \"abdeit\"\n\nAlphabetSoup(\"hacker\") ➞ \"acehkr\"\n\nAlphabetSoup(\"geek\") ➞ \"eegk\"\n\nAlphabetSoup(\"javascript\") ➞ \"aacijprstv\"\n\nNotes\nYou can assume numbers and punctuation symbols won't be included in tes",
    "tags": [
      "strings",
      "sorting",
      "formatting"
    ],
    "title": "Alphabet Soup"
  },
  {
    "_id": "t3NThQjrcbjhiF5zt",
    "difficulty": 1.1105398457583548,
    "language": "java",
    "summary": "Create a function that, given a number, returns the corresponding Fibonacci number.\n\nExamples\nFibonacci(3) ➞ 3\n\nFibonacci(7) ➞ 21\n\nFibonacci(12) ➞ 233\n\nNotes\nThe first number in the sequence starts at 1 (not 0).",
    "tags": [
      "algebra",
      "algorithms",
      "loops",
      "recursion"
    ],
    "title": "The Fibonacci Number"
  },
  {
    "_id": "oB67n674gwdTi33P4",
    "difficulty": 1.1128608923884515,
    "language": "java",
    "summary": "Create a function that takes a number a and finds the missing exponent x so that a when raised to the power of x is equal to b.\n\nExamples\nsolveForExp(4, 1024) ➞ 5\n\nsolveForExp(2, 1024) ➞ 10\n\nsolveForExp(9, 3486784401) ➞ 10\n\nNotes\na is raised to the power of what in order to equal b?",
    "tags": [
      "algorithms",
      "numbers",
      "math"
    ],
    "title": "Solving Exponential Equations With Logarithms"
  },
  {
    "_id": "RSbXRKoom6ED9Xe9i",
    "difficulty": 1.1131386861313868,
    "language": "java",
    "summary": "A pair of strings form a strange pair if both of the following are true:\n\nThe 1st string's first letter = 2nd string's last letter.\nThe 1st string's last letter = 2nd string's first letter.\n\nCreate a function that returns true if a pair of strings constitutes a strange pair, and false otherwise.\n\nExamples\nisStrangePair(\"ratio\", \"orator\") ➞ true\n// \"ratio\" ends",
    "tags": [
      "strings",
      "language_fundamentals",
      "validation"
    ],
    "title": "Strange Pair"
  },
  {
    "_id": "7LAsTPRvRH8sX6vD5",
    "difficulty": 1.1139896373056994,
    "language": "java",
    "summary": "Write a function that returns true if an integer is a power of 2, and false otherwise.\n\nExamples\npowerOfTwo(32) ➞ true\n\npowerOfTwo(1) ➞ true\n\npowerOfTwo(-7) ➞ false\n\npowerOfTwo(18) ➞ false\n\nNotes\nN/A",
    "tags": [
      "numbers",
      "math",
      "validation"
    ],
    "title": "Power of Two"
  },
  {
    "_id": "CCRmCv3huDnBsqmR7",
    "difficulty": 1.1151079136690647,
    "language": "java",
    "summary": "Imagine a messaging device with only one button. For the letter A, you press the button one time, for E, you press it five times, for G, it's pressed seven times, etc, etc.\n\nWrite a function that takes a string (the message) and returns the total number of times the button is pressed.\n\nExamples\nhowManyTimes(\"abde\") ➞ 12\n\nhowManyTimes(\"azy\") ➞ 52\n\nhowManyTimes(",
    "tags": [
      "logic",
      "math",
      "loops"
    ],
    "title": "One Button Messaging Device"
  },
  {
    "_id": "iJSAYBTLZvLuqAnN4",
    "difficulty": 1.1162790697674418,
    "language": "java",
    "summary": "Try to imagine a world in which you might have to stay home for 14 days at any given time. Do you have enough TP to make it through?\n\nAlthough the number of squares per roll of TP varies significantly, we'll assume each roll has 500 sheets, and the average person uses 57 sheets per day.\n\nCreate a function that will accept the following parameters:\npeople ⁠— Nu",
    "tags": [
      "objects",
      "math",
      "conditions"
    ],
    "title": "Can You Spare A Square?"
  },
  {
    "_id": "gDikYnoenX7rKFMQm",
    "difficulty": 1.116504854368932,
    "language": "java",
    "summary": "POV:* You are in an exam and time has just run out. While the teacher's back is turned, you hastily take the opportunity to finish scribbling down the last few words of the conclusion.*\n\nFor this challenge, it takes 0.5 seconds to write a character (not including spaces). Given the full sentence and the unfinished sentence as inputs, return the time it takes t",
    "tags": [
      "strings",
      "loops"
    ],
    "title": "Finish The Sentence You're On!"
  },
  {
    "_id": "mvHZK6Dy3ZF8EFoG3",
    "difficulty": 1.1167192429022081,
    "language": "java",
    "summary": "Create a function that returns the mean of all digits.\n\nExamples\nmean(42) ➞ 3\n\nmean(12345) ➞ 3\n\nmean(666) ➞ 6\n\nNotes\nThe mean of all digits is the sum of digits / how many digits there are (e.g. mean of digits in 512 is (5+1+2)/3(number of digits) = 8/3=2).\nThe mean will always be an integer.",
    "tags": [
      "loops",
      "logic",
      "algorithms",
      "math"
    ],
    "title": "Find the Mean of All Digits"
  },
  {
    "_id": "ePj2zup56kZrRbhDX",
    "difficulty": 1.1172413793103448,
    "language": "java",
    "summary": "Create a function that returns true if a number is prime, and false otherwise. A prime number is any positive integer that is evenly divisible by only two divisors: 1 and itself.\n\nThe first ten prime numbers are:\n\n2, 3, 5, 7, 11, 13, 17, 19, 23, 29\n\nExamples\nisPrime(31) ➞ true\n\nisPrime(18) ➞ false\n\nisPrime(11) ➞ true\n\nNotes\nA prime number has no other factors",
    "tags": [
      "math",
      "validation"
    ],
    "title": "Check if a Number is Prime"
  },
  {
    "_id": "mDM9eJXqjL7kJc3hh",
    "difficulty": 1.1173708920187793,
    "language": "java",
    "summary": "Create a method that accepts an array of two strings and checks if the letters in the second string are present in the first string.\n\nExamples\nletterCheck([\"trances\", \"nectar\"]) ➞ true\n\nletterCheck([\"compadres\", \"DRAPES\"]) ➞ true\n\nletterCheck([\"parses\", \"parsecs\"]) ➞ false\n\nNotes\nFunction should not be case sensitive (as indicated in the second example).\nBoth",
    "tags": [
      "strings",
      "validation",
      "regex"
    ],
    "title": "Are Letters in the Second String Present in the First?"
  },
  {
    "_id": "XD6bQFpCZWiAMPanQ",
    "difficulty": 1.119914346895075,
    "language": "java",
    "summary": "Create a function that takes an integer and returns an array from 1 to the given number, where:\n\nIf the number can be divided evenly by 4, amplify it by 10 (i.e. return 10 times the number).\nIf the number cannot be divided evenly by 4, simply return the number.\n\nExamples\namplify(4) ➞ [1, 2, 3, 40]\n\namplify(3) ➞ [1, 2, 3]\n\namplify(25) ➞ [1, 2, 3, 40, 5, 6, 7, 8",
    "tags": [
      "algebra",
      "arrays",
      "math",
      "loops"
    ],
    "title": "Amplify the Multiples of Four"
  },
  {
    "_id": "YjeGKZwXsdCo3sr7a",
    "difficulty": 1.1209302325581396,
    "language": "java",
    "summary": "Write a function that takes three string arguments (first, last, and word) and returns true if word is found between first and last in the dictionary, otherwise false.\n\nExamples\nisBetween(\"apple\", \"banana\", \"azure\") ➞ true\n\nisBetween(\"monk\", \"monument\", \"monkey\") ➞ true\n\nisBetween(\"bookend\", \"boolean\", \"boost\") ➞ false\n\nNotes\nAll letters will be in lowercase.",
    "tags": [
      "strings",
      "validation"
    ],
    "title": "Between Words"
  },
  {
    "_id": "xH7uvX2MoH8e85aYS",
    "difficulty": 1.1215277777777777,
    "language": "java",
    "summary": "Create a function that returns a base-2 (binary) representation of a base-10 (decimal) string number. To convert is simple: ((2) means base-2 and (10) means base-10) 010101001(2) = 1 + 8 + 32 + 128.\n\nGoing from right to left, the value of the most right bit is 1, now from that every bit to the left will be x2 the value, value of an 8 bit binary numbers are (25",
    "tags": [
      "bit_operations",
      "logic",
      "numbers",
      "loops"
    ],
    "title": "Convert a Number to Base-2"
  },
  {
    "_id": "gzjQoZY6mYRBwDv2Q",
    "difficulty": 1.1216216216216217,
    "language": "java",
    "summary": "Create a function that takes a number as an argument and returns true or false depending on whether the number is symmetrical or not. A number is symmetrical when it is the same as its reverse.\n\nExamples\nisSymmetrical(7227) ➞ true\n\nisSymmetrical(12567) ➞ false\n\nisSymmetrical(44444444) ➞ true\n\nisSymmetrical(9939) ➞ false\n\nisSymmetrical(1112111) ➞ true\n\nNotes\nN/",
    "tags": [
      "conditions",
      "numbers",
      "validation"
    ],
    "title": "Is the Number Symmetrical?"
  },
  {
    "_id": "DtTdXqwFQYTf6ZE3J",
    "difficulty": 1.1216730038022813,
    "language": "java",
    "summary": "Write a function that recursively returns the number of vowels in a string.\n\nExamples\ncountVowels(\"apple\") ➞ 2\n\ncountVowels(\"cheesecake\") ➞ 5\n\ncountVowels(\"bbb\") ➞ 0\n\ncountVowels(\"\") ➞ 0\n\nNotes\nAll letters will be in lower case.\nVowels are: a, e, i, o, u.",
    "tags": [
      "recursion",
      "strings",
      "regex"
    ],
    "title": "Recursion: Count Vowels"
  },
  {
    "_id": "AYQPBDjDbrrvJtjjc",
    "difficulty": 1.1217391304347826,
    "language": "java",
    "summary": "An isogram is a word that has no duplicate letters. Create a function that takes a string and returns either true or false depending on whether or not it's an \"isogram\".\n\nExamples\nisIsogram(\"Algorism\") ➞ true\n\nisIsogram(\"PasSword\") ➞ false\n// Not case sensitive.\n\nisIsogram(\"Consecutive\") ➞ false\n\nNotes\nIgnore letter case (should not be case sensitive).\nAll tes",
    "tags": [
      "strings",
      "validation",
      "loops"
    ],
    "title": "Is the Word an Isogram?"
  },
  {
    "_id": "ENNmwseEab73TMoBc",
    "difficulty": 1.1219512195121952,
    "language": "java",
    "summary": "Write a function that maps files to their extension names.\n\nExamples\ngetExtension([\"code.html\", \"code.css\"])\n➞ [\"html\", \"css\"]\n\ngetExtension([\"project1.jpg\", \"project1.pdf\", \"project1.mp3\"])\n➞ [\"jpg\", \"pdf\", \"mp3\"]\n\ngetExtension([\"ruby.rb\", \"cplusplus.cpp\", \"python.py\", \"javascript.js\"])\n➞ [\"rb\", \"cpp\", \"py\", \"js\"]\n\nNotes\nN/A",
    "tags": [
      "strings",
      "higher_order_functions",
      "arrays"
    ],
    "title": "Get the File Extension"
  },
  {
    "_id": "phaa2KFqeiM9hZeSK",
    "difficulty": 1.1219512195121952,
    "language": "java",
    "summary": "Write a function that takes a string as an argument and returns the left most digit in the string.\n\nExamples\nleftDigit(\"TrAdE2W1n95!\") ➞ 2\n\nleftDigit(\"V3r1ta$\") ➞ 3\n\nleftDigit(\"U//DertHe1nflu3nC3\") ➞ 1\n\nleftDigit(\"J@v@5cR1PT\") ➞ 5\n\nNotes\nEach string will have at least two numbers.\nReturn the result as an integer.",
    "tags": [
      "strings",
      "sorting",
      "numbers"
    ],
    "title": "Most Left Digit"
  },
  {
    "_id": "N3ZBDe99aq8Piar8n",
    "difficulty": 1.123456790123457,
    "language": "java",
    "summary": "Create a function that returns \"even\" if a number has an even number of factors and \"odd\" if a number has an odd number of factors.\n\nExamples\nfactorGroup(33) ➞ \"even\"\n\nfactorGroup(36) ➞ \"odd\"\n\nfactorGroup(7) ➞ \"even\"\n\nNotes\nYou don't need to actually calculate the factors to solve this problem.\nThink about why a number would have an odd number of factors.",
    "tags": [
      "math",
      "validation",
      "logic"
    ],
    "title": "Even or Odd Number of Factors"
  },
  {
    "_id": "LJh54oryEc3tkagzD",
    "difficulty": 1.125,
    "language": "java",
    "summary": "Additional spaces have been added to a sentence. Return the correct sentence by removing them. All words should be separated by one space, and there should be no spaces at the beginning or end of the sentence.\n\nExamples\ncorrectSpacing(\"The film   starts       at      midnight. \")\n➞ \"The film starts at midnight.\"\n\ncorrectSpacing(\"The     waves were crashing  on",
    "tags": [
      "strings",
      "formatting"
    ],
    "title": "Fix the Spacing"
  },
  {
    "_id": "EmRPehwiJFk6rf2iD",
    "difficulty": 1.1254125412541254,
    "language": "java",
    "summary": "Create a function that takes an array of strings and returns the words that are exactly four letters.\n\nExamples\nisFourLetters([\"Tomato\", \"Potato\", \"Pair\"]) ➞ [\"Pair\"]\n\nisFourLetters([\"Kangaroo\", \"Bear\", \"Fox\"]) ➞ [\"Bear\"]\n\nisFourLetters([\"Ryan\", \"Kieran\", \"Jason\", \"Matt\"]) ➞ [\"Ryan\", \"Matt\"]\n\nNotes\nYou can expect valid strings for all test cases.",
    "tags": [
      "strings",
      "arrays",
      "validation",
      "conditions"
    ],
    "title": "Return the Four Letter Strings"
  },
  {
    "_id": "NgyZdeFBWJcBGXxjq",
    "difficulty": 1.12565445026178,
    "language": "java",
    "summary": "Write a function to return the city from each of these vacation spots.\n\nExamples\ngrabCity(\"[Last Day!] Beer Festival [Munich]\") ➞ \"Munich\"\n\ngrabCity(\"Cheese Factory Tour [Portland]\") ➞ \"Portland\"\n\ngrabCity(\"50% Off! 5-Day Trip to Onsen [Kyoto]\") ➞ \"Kyoto\"\n\nNotes\nThere may be additional brackets, but the city will always be in the last bracket pair.",
    "tags": [
      "regex",
      "strings"
    ],
    "title": "Grab the City"
  },
  {
    "_id": "FHJ7SPdj7hChTS5LW",
    "difficulty": 1.125748502994012,
    "language": "java",
    "summary": "Given two strings, create a function that returns the total number of unique characters from the combined string.\n\nExamples\ncountUnique(\"apple\", \"play\") ➞ 5\n// \"appleplay\" has 5 unique characters:\n// \"a\", \"e\", \"l\", \"p\", \"y\"\n\ncountUnique(\"sore\", \"zebra\") ➞ 7\n\ncountUnique(\"a\", \"soup\") ➞ 5\n\nNotes\nEach word will contain at least one letter.\nAll words will be lower",
    "tags": [
      "strings",
      "data_structures"
    ],
    "title": "Total Number of Unique Characters"
  },
  {
    "_id": "BN7hYwzFACGoDZux7",
    "difficulty": 1.1284916201117319,
    "language": "java",
    "summary": "Create a function that takes a number as an argument and returns a string formatted to separate thousands.\n\nExamples\nformatNum(1000) ➞ \"1,000\"\n\nformatNum(100000) ➞ \"100,000\"\n\nformatNum(20) ➞ \"20\"\n\nNotes\nYou can expect a valid number for all test cases.",
    "tags": [
      "formatting",
      "numbers",
      "strings",
      "regex"
    ],
    "title": "Format Number with Comma(s) Separating Thousands"
  },
  {
    "_id": "DfaTrBDZKjso6HBXs",
    "difficulty": 1.1288343558282208,
    "language": "java",
    "summary": "A palindrome is a word, phrase, number or other sequence of characters which reads the same backward or forward, such as madam or kayak.\n\nWrite a function that takes a string and determines whether it's a palindrome or not. The function should return a boolean (true or false value).\n\nExamples\nisPalindrome(\"Neuquen\") ➞ true\n\nisPalindrome(\"Not a palindrome\") ➞ f",
    "tags": [
      "strings",
      "validation"
    ],
    "title": "Check if the String is a Palindrome"
  },
  {
    "_id": "EiGazR6eGXHMx3hTy",
    "difficulty": 1.129496402877698,
    "language": "java",
    "summary": "Create a function which takes in a sentence str and a string of characters chars and return the sentence but with all the specified characters removed.\n\nExamples\nstripSentence(\"the quick brown fox jumps over the lazy dog\", \"aeiou\") ➞ \"th qck brwn fx jmps vr th lzy dg\"\n\nstripSentence(\"the hissing snakes sinisterly slither across the rustling leaves\", \"s\") ➞ \"th",
    "tags": [
      "strings",
      "language_fundamentals",
      "formatting"
    ],
    "title": "Stripping a Sentence Down"
  },
  {
    "_id": "FQPo8iZ8vuPEj2dKB",
    "difficulty": 1.1295336787564767,
    "language": "java",
    "summary": "Given two integers a and b, return how many times a can be halved while still being greater than b.\n\nExamples\nhalveCount(1324, 98) ➞ 3\n// (1324 -> 662 -> 331 -> 165.5)\n\nhalveCount(624, 8) ➞ 6\n// (624 -> 312 -> 156 -> 78 -> 39 -> 19.5 -> 9.75)\n\nhalveCount(1000, 3) ➞ 8\n// (1000 -> 500 -> 250 -> 125 -> 62.5 -> 31.25 -> 15.625 -> 7.8125 -> 3.90625)\n\nNotes\nInteger",
    "tags": [
      "math",
      "numbers"
    ],
    "title": "Halve and Halve Again"
  },
  {
    "_id": "S6ScbuTciqryqTAAg",
    "difficulty": 1.1323529411764706,
    "language": "java",
    "summary": "Given an array of numbers, remove the largest and smallest numbers, and calculate the average of the remaining numbers.\n\nExamples\ntrimmedAverages([4, 5, 7, 100]) ➞ 6\n// Average of 5 and 7\n\ntrimmedAverages([10, 25, 5, 15, 20]) ➞ 15\n// Average of 10, 15 and 20\n\ntrimmedAverages([1, 1, 1]) ➞ 1\n// 1\n\ntrimmedAverages([5, 4, 54, 4, 6, 46, 56]) ➞ 23\n\nNotes\nRound to th",
    "tags": [
      "numbers",
      "math",
      "arrays"
    ],
    "title": "Trimmed Averages"
  },
  {
    "_id": "HPcr7REWMLTosoXME",
    "difficulty": 1.132404181184669,
    "language": "java",
    "summary": "Write a function that removes any non-letters from a string, returning a well-known film title.\n\nExamples\nlettersOnly(\"R!=:~0o0./c&}9k`60=y\") ➞ \"Rocky\"\n\nlettersOnly(\"^,]%4B|@56a![0{2m>b1&4i4\") ➞ \"Bambi\"\n\nlettersOnly(\"^U)6$22>8p).\") ➞ \"Up\"\n\nNotes\nN/A",
    "tags": [
      "strings",
      "regex",
      "formatting"
    ],
    "title": "Letters Only"
  },
  {
    "_id": "z5hQaDNPSSqP9bN5t",
    "difficulty": 1.1324200913242009,
    "language": "java",
    "summary": "Write a function that calculates the GCD (Greatest Common Divisor) of two numbers recursively.\n\nExamples\ngcd(10, 20) ➞ 10\n\ngcd(1, 3) ➞ 1\n\ngcd(5, 7) ➞ 1\n\ngcd(2, 6) ➞ 2\n\nNotes\nN/A",
    "tags": [
      "recursion",
      "math"
    ],
    "title": "Recursion: GCD"
  },
  {
    "_id": "E2WdAPmgNJnbL5RvF",
    "difficulty": 1.1325648414985592,
    "language": "java",
    "summary": "Create a function to concatenate two integer arrays.\n\nExamples\nconcat([1, 3, 5], [2, 6, 8]) ➞ [1, 3, 5, 2, 6, 8]\n\nconcat([7, 8], [10, 9, 1, 1, 2]) ➞ [7, 8, 10, 9, 1, 1, 2]\n\nconcat([4, 5, 1], [3, 3, 3, 3, 3]) ➞ [4, 5, 1, 3, 3, 3, 3, 3]\n\nNotes\nDon't forget to return the result.\nSee Resources tab for more info.",
    "tags": [
      "arrays",
      "language_fundamentals",
      "numbers"
    ],
    "title": "Concatenating Two Integer Arrays"
  },
  {
    "_id": "AwHcrbtX9vXXbARmX",
    "difficulty": 1.1333333333333333,
    "language": "java",
    "summary": "Write a function that filters an array of numbers based on the criteria set for the number of digits.\n\nExamples\nfilterByLength([12, 2000, 13, 1979, 12, 17], 2)  ➞ [12, 13, 12, 17]\n// An array of only the numbers with 2 digits.\n\nfilterByLength([88, 232, 4, 9721, 555], 3) ➞ [232, 555]\n// An array of only the numbers with 3 digits.\n\nfilterByLength([2, 7, 8, 9, 10",
    "tags": [
      "arrays",
      "higher_order_functions",
      "numbers"
    ],
    "title": "Filter by Digit Length"
  },
  {
    "_id": "YNQQynxnFeoKNiqTM",
    "difficulty": 1.1350210970464134,
    "language": "java",
    "summary": "Create a method that takes a string, removes all \"special\" characters (e.g. ., !, @, #, $, %, ^, &, \\, *, (, )) and returns the new string. The only non-alphanumeric characters allowed are dashes -, underscores _ and spaces.\n\nExamples\nremoveSpecialCharacters(\"The quick brown fox!\") ➞ \"The quick brown fox\"\n\nremoveSpecialCharacters(\"%fd76$fd(-)6GvKlO.\") ➞ \"fd76f",
    "tags": [
      "strings",
      "formatting",
      "regex",
      "arrays"
    ],
    "title": "Remove All Special Characters from a String"
  },
  {
    "_id": "NWtZJ2wHGB7hz9iSd",
    "difficulty": 1.135135135135135,
    "language": "java",
    "summary": "Create a method that accepts a string and returns true if it's in the format of a proper phone number and false if it's not. Assume any number between 0-9 (in the appropriate spots) will produce a valid phone number.\n\nThis is what a valid phone number looks like:\n\n(123) 456-7890\n\nExamples\nisValidPhoneNumber(\"(123) 456-7890\") ➞ true\n\nisValidPhoneNumber(\"1111)55",
    "tags": [
      "strings",
      "validation",
      "regex",
      "formatting"
    ],
    "title": "Is the Phone Number Formatted Correctly?"
  },
  {
    "_id": "H5Tabm7omS9ia8Rce",
    "difficulty": 1.1370716510903427,
    "language": "java",
    "summary": "Fibonacci numbers are created in the following way:\n\nF(0) = 0\nF(1) = 1\n...\nF(n) = F(n-2) + F(n-1)\n\nWrite a function that calculates the nth Fibonacci number.\n\nExamples\nfib(0) ➞ 0\n\nfib(1) ➞ 1\n\nfib(2) ➞ 1\n\nfib(8) ➞ 21\n\nNotes\nN/A",
    "tags": [
      "numbers",
      "recursion"
    ],
    "title": "Recursion: Fibonacci Numbers"
  },
  {
    "_id": "jrh488nh4CyDmwMre",
    "difficulty": 1.1372549019607843,
    "language": "java",
    "summary": "Write a function that returns the greatest common divisor (GCD) of two integers.\n\nExamples\ngcd(32, 8) ➞ 8\n\ngcd(8, 12) ➞ 4\n\ngcd(17, 13) ➞ 1\n\nNotes\nBoth values will be positive.\nThe GCD is the largest factor that divides both numbers.",
    "tags": [
      "numbers",
      "math",
      "recursion"
    ],
    "title": "GCD of Two Numbers"
  },
  {
    "_id": "SSiwbDE337QvJ9FCZ",
    "difficulty": 1.1375661375661377,
    "language": "java",
    "summary": "Create a function which returns the word in the string, but with all the fog letters removed. However, if the string is clear from fog, return \"It's a clear day!\".\n\nExamples\nclearFog(\"sky\") ➞ \"It's a clear day!\"\n\nclearFog(\"fogfogFFfoooofftogffreogffesGgfOogfog\") ➞ \"trees\"\n\nclearFog(\"fogFogFogffoObirdsanffodthebffoeffoesGGGfOgFog\") ➞ \"birdsandthebees\"\n\nNotes\nHi",
    "tags": [
      "formatting",
      "strings",
      "regex"
    ],
    "title": "Clear the Fog"
  },
  {
    "_id": "ce3CbX2KwdwaJxxra",
    "difficulty": 1.137809187279152,
    "language": "java",
    "summary": "Usually when you sign up for an account to buy something, your credit card number, phone number or answer to a secret question is partially obscured in some way. Since someone could look over your shoulder, you don't want that shown on your screen. Hence, the website masks these strings.\n\nYour task is to create a method that takes a string, transforms all but",
    "tags": [
      "strings",
      "formatting",
      "validation"
    ],
    "title": "Maskify the String"
  },
  {
    "_id": "gPWZDe6rciBzYdz3B",
    "difficulty": 1.1428571428571428,
    "language": "java",
    "summary": "The \"Reverser\" takes a string as input and returns that string in reverse order, with the opposite case.\n\nExamples\nreverse(\"Hello World\") ➞ \"DLROw OLLEh\"\n\nreverse(\"ReVeRsE\") ➞ \"eSrEvEr\"\n\nreverse(\"Java compiler\") ➞ \"RELIPMOC AVAj\"\n\nNotes\nThere will be no punctuation in any of the test cases.",
    "tags": [
      "strings",
      "formatting",
      "language_fundamentals"
    ],
    "title": "The Reverser!"
  },
  {
    "_id": "KpAxNFuZj79KzLDc5",
    "difficulty": 1.1445427728613569,
    "language": "java",
    "summary": "The left shift operation is similar to multiplication by powers of two.\n\nSample calculation using the left shift operator ( << ):\n10 << 3 = 10 * 2^3 = 10 * 8 = 80\n-32 << 2 = -32 * 2^2 = -32 * 4 = -128\n5 << 2 = 5 * 2^2 = 5 * 4 = 20\n\nWrite a function that mimics (without the use of <<) the left shift operator and returns the result from the two given integers.",
    "tags": [
      "bit_operations",
      "numbers",
      "math"
    ],
    "title": "Left Shift by Powers of Two"
  },
  {
    "_id": "dDjLzbMh2JqjTtG8J",
    "difficulty": 1.144927536231884,
    "language": "java",
    "summary": "Write a function that takes the number of seconds and returns the digital format clock time as a string. Time should be counted from 00:00:00.\n\nExamples\ndigitalClock(5025) ➞ \"01:23:45\"\n// 5025 seconds is 1 hour, 23 mins, 45 secs.\n\ndigitalClock(61201) ➞ \"17:00:01\"\n// No AM/PM. 24h format.\n\ndigitalClock(87000) ➞ \"00:10:00\"\n// It's 00:10 next day.\n\nNotes\nseconds",
    "tags": [
      "algebra",
      "strings",
      "math",
      "numbers"
    ],
    "title": "Time Conversion"
  },
  {
    "_id": "j5mm8HjTZGZagrnz8",
    "difficulty": 1.1449814126394051,
    "language": "java",
    "summary": "Write a function to reverse an array.\n\nExamples\nreverse([1, 2, 3, 4]) ➞ [4, 3, 2, 1]\n\nreverse([9, 9, 2, 3, 4]) ➞ [4, 3, 2, 9, 9]\n\nreverse([]) ➞ []\n\nNotes\nDon't forget to return the result.\nIf you get stuck on a challenge, find help in the Resources tab.\nIf you're really stuck, unlock solutions in the Solutions tab.",
    "tags": [
      "arrays",
      "numbers",
      "language_fundamentals"
    ],
    "title": "Reverse an Array"
  },
  {
    "_id": "vs7xj6PwALtfpjkmX",
    "difficulty": 1.146341463414634,
    "language": "java",
    "summary": "Create a function that moves all capital letters to the front of a word.\n\nExamples\ncapToFront(\"hApPy\") ➞ \"APhpy\"\n\ncapToFront(\"moveMENT\") ➞ \"MENTmove\"\n\ncapToFront(\"shOrtCAKE\") ➞ \"OCAKEshrt\"\n\nNotes\nKeep the original relative order of the upper and lower case letters the same.",
    "tags": [
      "strings",
      "formatting",
      "regex"
    ],
    "title": "Move Capital Letters to the Front"
  },
  {
    "_id": "CC7f9DpPfMMqmkfvC",
    "difficulty": 1.1573033707865168,
    "language": "java",
    "summary": "A fruit juice company tags their fruit juices by concatenating the first three letters of the words in a flavor's name and its capacity.\n\nCreate a function that creates the product IDs for the variety of fruit juices.\n\nExamples\ngetDrinkID(\"apple\", \"500ml\") ➞ \"APP500\"\n\ngetDrinkID(\"pineapple\", \"45ml\") ➞ \"PIN45\"\n\ngetDrinkID(\"passion fruit\", \"750ml\") ➞ \"PASFRU750\"",
    "tags": [
      "strings",
      "loops"
    ],
    "title": "Fruit Juices"
  },
  {
    "_id": "FDauhMn4rAcsW7Goh",
    "difficulty": 1.16,
    "language": "java",
    "summary": "Write a function that finds the largest even number in an array and returns -1 if not found.\n\nExamples\nprobe([3, 7, 2, 1, 7, 9, 10, 13]) ➞ 10\n\nprobe([1, 3, 5, 7]) ➞ -1\n\nprobe([0, 19, 18973623]) ➞ 0\n\nNotes\nConsider using the modulo operator % or the bitwise and operator &.\nThe use of built-in methods, such as Math.max(),Stream.sorted(),  IntStream.of(), and eve",
    "tags": [
      "algorithms",
      "numbers",
      "loops"
    ],
    "title": "Find The Largest Even Number"
  },
  {
    "_id": "mkxS3CnW98Ci3kwCh",
    "difficulty": 1.1638655462184875,
    "language": "java",
    "summary": "Create a method that takes a string as an argument and converts the first character of each word to uppercase. Return the newly formatted string.\n\nExamples\nmakeTitle(\"This is a title\") ➞ \"This Is A Title\"\n\nmakeTitle(\"capitalize every word\") ➞ \"Capitalize Every Word\"\n\nmakeTitle(\"I Like Pizza\") ➞ \"I Like Pizza\"\n\nmakeTitle(\"PIZZA PIZZA PIZZA\") ➞ \"PIZZA PIZZA PIZZ",
    "tags": [
      "formatting",
      "strings",
      "loops",
      "regex"
    ],
    "title": "Capitalize the First Letter of Each Word"
  },
  {
    "_id": "NjJ9gGNPGaQGxTxCc",
    "difficulty": 1.165137614678899,
    "language": "java",
    "summary": "Create a function that returns true if there's at least one prime number in the given range (n1 to n2 (inclusive)), false otherwise.\n\nExamples\nPrimeNumberInRange(10, 15) ➞ true\n// Prime numbers in range: 11, 13\n\nPrimeNumberInRange(62, 66) ➞ false\n// No prime numbers in range.\n\nPrimeNumberInRange(3, 5) ➞ true\n// Prime numbers in range: 3, 5\n\nNotes\nn2 is always",
    "tags": [
      "algebra",
      "algorithms",
      "math",
      "numbers"
    ],
    "title": "Any Prime Number in Range"
  },
  {
    "_id": "vENakDEYEDKFGPSEb",
    "difficulty": 1.1657142857142857,
    "language": "java",
    "summary": "Write a function that takes a string, and returns a new string with any duplicate consecutive letters removed.\n\nExamples\nunstretch(\"ppoeemm\") ➞ \"poem\"\n\nunstretch(\"wiiiinnnnd\") ➞ \"wind\"\n\nunstretch(\"ttiiitllleeee\") ➞ \"title\"\n\nunstretch(\"cccccaaarrrbbonnnnn\") ➞ \"carbon\"\n\nNotes\nFinal strings won't include words with double letters (e.g. \"passing\", \"lottery\").",
    "tags": [
      "strings",
      "formatting",
      "loops"
    ],
    "title": "Stretched Words"
  },
  {
    "_id": "3ZooM5R5P63w5bPCv",
    "difficulty": 1.1666666666666667,
    "language": "java",
    "summary": "Create a method that takes a single string as argument and returns an ordered array containing the indices of all capital letters in the string.\n\nExamples\nindexOfCaps(\"eDaBiT\") ➞ [1, 3, 5]\n\nindexOfCaps(\"eQuINoX\") ➞ [1, 3, 4, 6]\n\nindexOfCaps(\"determine\") ➞ []\n\nindexOfCaps(\"STRIKE\") ➞ [0, 1, 2, 3, 4, 5]\n\nindexOfCaps(\"sUn\") ➞ [1]\n\nNotes\nReturn an empty array if n",
    "tags": [
      "strings",
      "formatting"
    ],
    "title": "Return the Index of All Capital Letters"
  },
  {
    "_id": "7eoAWhG46SrA3tvLK",
    "difficulty": 1.1827956989247312,
    "language": "java",
    "summary": "Create a method that takes a Map and return the values as a separate array. Return the keys sorted alphabetically, and their corresponding values in the same order.\n\nExamples\ngetValues({ \"a\": \"1\", \"b\": \"2\", \"c\": \"3\" } )\n➞ [\"1\", \"2\", \"3\"]\n\ngetValues({ \"a\": \"Apple\", \"b\": \"Microsoft\", \"c\": \"Google\" })\n➞ [\"Apple\", \"Microsoft\", \"Google\"]\n\ngetValues({ \"key1\": \"true\"",
    "tags": [
      "objects",
      "formatting",
      "language_fundamentals"
    ],
    "title": "Return the Objects Keys and Values"
  },
  {
    "_id": "Rs23pTNpM6k5M2ThH",
    "difficulty": 1.2792127921279213,
    "language": "java",
    "summary": "A quadratic equation a x² + b x + c = 0 has either 0, 1, or 2 distinct solutions for real values of x. Given a, b and c, you should return the number of solutions to the equation.\n\nExamples\nsolutions(1, 0, -1) ➞ 2\n// x² - 1 = 0 has two solutions (x = 1 and x = -1).\n\nsolutions(1, 0, 0) ➞ 1\n// x² = 0 has one solution (x = 0).\n\nsolutions(1, 0, 1) ➞ 0\n// x² + 1 =",
    "tags": [
      "algebra",
      "math",
      "algorithms"
    ],
    "title": "How Many Solutions Does This Quadratic Have?"
  },
  {
    "_id": "rzpucPyoyEtXPo2BG",
    "difficulty": 1.309324399776661,
    "language": "java",
    "summary": "Create a function that takes two numbers as arguments (num, length) and returns an array of multiples of num until the array length reaches length.\n\nExamples\narrayOfMultiples(7, 5) ➞ [7, 14, 21, 28, 35]\n\narrayOfMultiples(12, 10) ➞ [12, 24, 36, 48, 60, 72, 84, 96, 108, 120]\n\narrayOfMultiples(17, 6) ➞ [17, 34, 51, 68, 85, 102]\n\nNotes\nNotice that num is also incl",
    "tags": [
      "arrays",
      "numbers",
      "math",
      "loops"
    ],
    "title": "Array of Multiples"
  },
  {
    "_id": "7fHsizQrTLXsPWMyH",
    "difficulty": 1.3513513513513513,
    "language": "java",
    "summary": "There's a great war between the even and odd numbers. Many numbers already lost their lives in this war and it's your task to end this. You have to determine which group sums larger: the evens, or the odds. The larger group wins.\n\nCreate a function that takes an array of integers, sums the even and odd numbers separately, then returns the difference between th",
    "tags": [
      "arrays",
      "loops",
      "numbers",
      "higher_order_functions"
    ],
    "title": "War of Numbers"
  },
  {
    "_id": "7Tb7qMDQHtz3xpydd",
    "difficulty": 1.3668965517241378,
    "language": "java",
    "summary": "Create a function that takes an integer and outputs an n x n square solely consisting of the integer n.\n\nExamples\nsquarePatch(3) ➞ [\n  [3, 3, 3],\n  [3, 3, 3],\n  [3, 3, 3]\n]\n\nsquarePatch(5) ➞ [\n  [5, 5, 5, 5, 5],\n  [5, 5, 5, 5, 5],\n  [5, 5, 5, 5, 5],\n  [5, 5, 5, 5, 5],\n  [5, 5, 5, 5, 5]\n]\n\nsquarePatch(1) ➞ [\n  [1]\n]\n\nsquarePatch(0) ➞ []\n\nNotes\nn >= 0.\nIf n = 0,",
    "tags": [
      "arrays",
      "loops",
      "language_fundamentals"
    ],
    "title": "Perfect Square Patch"
  },
  {
    "_id": "J26bZ6Fv6bWEisDYj",
    "difficulty": 1.3691683569979716,
    "language": "java",
    "summary": "Given the shortest side of a 30° by 60° by 90° triangle, find out the other two sides. Return the longest side and medium-length side in that order.\n\nExamples\notherSides(1) ➞ [2.0, 1.73]\n\notherSides(12) ➞ [24.0, 20.0]\n\notherSides(2) ➞ [4.0, 3.46]\n\notherSides(3) ➞ [6.0, 5.2]\n\nNotes\n30° by 60° by 90° triangles always follow this rule: let's say the shortest side",
    "tags": [
      "geometry",
      "math"
    ],
    "title": "Find the Other Two Side Lengths"
  },
  {
    "_id": "hf2THAoQRQbAx2jc9",
    "difficulty": 1.3712021136063408,
    "language": "java",
    "summary": "Write a function that finds the sum of an array. Make your function recursive.\n\nExamples\nsum([1, 2, 3, 4]) ➞ 10\n\nsum([1, 2]) ➞ 3\n\nsum([1]) ➞ 1\n\nsum([]) ➞ 0\n\nNotes\nReturn 0 for an empty array.\nCheck the Resources tab for info on recursion.",
    "tags": [
      "recursion",
      "numbers",
      "arrays",
      "language_fundamentals"
    ],
    "title": "Recursion: Array Sum"
  },
  {
    "_id": "7bupZ6FmuAQwJE6CL",
    "difficulty": 1.4042553191489362,
    "language": "java",
    "summary": "Mubashir created a function that takes two numbers a and b and an operator o. His function should return the result of the corresponding mathematical function on both numbers. If the operator is not one of the specified characters +, -, /, *, or if there is a division by zero, the function should return null. Help him by fixing the code in the code tab to pass",
    "tags": [
      "bugs",
      "functional_programming",
      "numbers",
      "language_fundamentals"
    ],
    "title": "Fix Basic Calculator"
  },
  {
    "_id": "Sej5nsmmjBAXv6hHv",
    "difficulty": 1.4074074074074074,
    "language": "java",
    "summary": "Create a function that counts the number of times a particular letter shows up in the word search.\n\nExamples\nletterCounter([\n  [\"D\", \"E\", \"Y\", \"H\", \"A\", \"D\"],\n  [\"C\", \"B\", \"Z\", \"Y\", \"J\", \"K\"],\n  [\"D\", \"B\", \"C\", \"A\", \"M\", \"N\"],\n  [\"F\", \"G\", \"G\", \"R\", \"S\", \"R\"],\n  [\"V\", \"X\", \"H\", \"A\", \"S\", \"S\"]\n], \"D\") ➞ 3\n\n// \"D\" shows up 3 times: twice in the first row, once i",
    "tags": [
      "arrays",
      "higher_order_functions"
    ],
    "title": "Count Letters in a Word Search"
  },
  {
    "_id": "eHA9jMjzADDo6PhuJ",
    "difficulty": 1.4176470588235295,
    "language": "java",
    "summary": "Write a function that does the following for the given values: add, subtract, divide and multiply . This is simply referred to as the basic arithmetic operations. The variables have to be defined, but in this challenge, it will be defined for you. All you have to do, is to check the variables, do some string to integer conversion, use some if conditions, and a",
    "tags": [
      "conditions",
      "language_fundamentals",
      "math"
    ],
    "title": "Basic Arithmetic Operations"
  },
  {
    "_id": "vFLhYANAZQGKTtxA2",
    "difficulty": 1.4208955223880597,
    "language": "java",
    "summary": "Create a function that takes two number strings and returns their sum as a string.\n\nExamples\nadd(\"111\", \"111\") ➞ \"222\"\n\nadd(\"10\", \"80\") ➞ \"90\"\n\nadd(\"\", \"20\") ➞ \"Invalid Operation\"\n\nNotes\nReturn \"Invalid Operation\" If either input is \"\" or null.",
    "tags": [
      "math",
      "numbers",
      "conditions"
    ],
    "title": "Adding Numbers"
  },
  {
    "_id": "3S8XppR6Yf5mXPxij",
    "difficulty": 1.4264305177111716,
    "language": "java",
    "summary": "Create a function which simulates the game \"rock, paper, scissors\". The function takes the input of both players (rock, paper or scissors), first parameter from first player, second from second player. The function returns the result as such:\n\n\"Player 1 wins\"\n\"Player 2 wins\"\n\"TIE\" (if both inputs are the same)\n\nThe rules of rock, paper, scissors, if not known:",
    "tags": [
      "data_structures",
      "games"
    ],
    "title": "Simulate the Game \"Rock,  Paper,  Scissors\""
  },
  {
    "_id": "sBRPyEAjBfWKsnTaZ",
    "difficulty": 1.440347071583514,
    "language": "java",
    "summary": "Create a function to find only the root value of x in any quadratic equation ax^2 + bx  + c. The function will take three arguments:\n\na as the coefficient of x^2\nb as the coefficient of x\nc as the constant term\n\nExamples\nquadraticEquation(1, 2, -3) ➞ 1\n\nquadraticEquation(2, -7, 3) ➞ 3\n\nquadraticEquation(1, -12, -28) ➞ 14\n\nNotes\nQuadratic equation is always gua",
    "tags": [
      "algebra",
      "conditions",
      "math"
    ],
    "title": "Quadratic Equation"
  },
  {
    "_id": "jfRHGwHMZcnzZm9JL",
    "difficulty": 1.448780487804878,
    "language": "java",
    "summary": "Write a function that takes a string, breaks it up and returns it with vowels first, consonants second. For any character that's not a vowel (like special characters or spaces), treat them like consonants.\n\nExamples\nsplit(\"abcde\") ➞ \"aebcd\"\n\nsplit(\"Hello!\") ➞ \"eoHll!\"\n\nsplit(\"What's the time?\") ➞ \"aeieWht's th tm?\"\n\nNotes\nVowels are a, e, i, o, u.\nDefine a sep",
    "tags": [
      "control_flow",
      "conditions",
      "functional_programming",
      "regex"
    ],
    "title": "Split a String Based on Vowels and Consonants"
  },
  {
    "_id": "3GvRKZPF2NRPz3DgQ",
    "difficulty": 1.449612403100775,
    "language": "java",
    "summary": "In the image below, squares are either empty or filled with a circle.\n\nSteps vs Empty Squarest\n\nCreate a function that takes a number step (which equals HALF the width of a square) and returns the amount of empty squares. The image shows the squares with step 1, 2 and 3. The return value is the number of cells not on a diagonal, which is 0 for the first square",
    "tags": [
      "algebra",
      "math",
      "validation"
    ],
    "title": "The Empty Square Sequence"
  },
  {
    "_id": "4r33Yd2HuEireb3Sm",
    "difficulty": 1.4545454545454546,
    "language": "java",
    "summary": "Create a function that counts the integer's number of digits.\n\nExamples\ncount(4666) ➞ 4\n\ncount(544) ➞ 3\n\ncount(318) ➞ 3\n\ncount(-92563) ➞ 5\n\ncount(-314890) ➞ 6\n\ncount(654321) ➞ 6\n\ncount(638476) ➞ 6\n\nNotes\nFor an added challenge, try to solve this without using strings.\nAlternatively, you can solve this via a recursive approach.\nA recursive version of this chall",
    "tags": [
      "math",
      "numbers",
      "loops"
    ],
    "title": "Integer Digits Count"
  },
  {
    "_id": "BxnxYJGQ9MMQn2EfR",
    "difficulty": 1.46045197740113,
    "language": "java",
    "summary": "NOTE FROM TRANSLATOR:\nThis code is a direct translation from the Python version of this challenge to a Java version. However, because of the differences between the languages and how they function, the Java code is much harder to understand\n\nFor example, the short, easy to read statment in Python int(userScore[:-1]) becomes Integer.parseInt(userScore.substring",
    "tags": [
      "bugs",
      "conditions",
      "logic"
    ],
    "title": "You FAILEDPASSED the Exam"
  },
  {
    "_id": "KWbrmP9uYSnYtwkAB",
    "difficulty": 1.461352657004831,
    "language": "java",
    "summary": "Create a function that takes a string and returns true or false, depending on whether the characters are in order or not.\n\nExamples\nisInOrder(\"abc\") ➞ true\n\nisInOrder(\"edabit\") ➞ false\n\nisInOrder(\"123\") ➞ true\n\nisInOrder(\"xyzz\") ➞ true\n\nNotes\nYou don't have to handle empty strings.",
    "tags": [
      "logic",
      "strings",
      "validation"
    ],
    "title": "Is the String in Order?"
  },
  {
    "_id": "ev5oH5FSzb9oF6skT",
    "difficulty": 1.464705882352941,
    "language": "java",
    "summary": "Write a function that returns the first n vowels of a string.\n\nExamples\nfirstNVowels(\"sharpening skills\", 3) ➞ \"aei\"\n\nfirstNVowels(\"major league\", 5) ➞ \"aoeau\"\n\nfirstNVowels(\"hostess\", 5) ➞ \"invalid\"\n\nNotes\nReturn \"invalid\" if the n exceeds the number of vowels in a string.\nVowels are: a, e, i, o, u",
    "tags": [
      "strings",
      "regex",
      "loops"
    ],
    "title": "First N Vowels"
  },
  {
    "_id": "A2M6aC7BR2P4Qj2Kr",
    "difficulty": 1.4672364672364673,
    "language": "java",
    "summary": "A train has a maximum capacity of n passengers overall, which means each carriage's capacity will share an equal proportion of the maximum capacity.\n\nCreate a function which returns the index of the first carriage which holds 50% or less of its maximum capacity. If no such carriage exists, return -1.\n\nWorked Examples\nfindSeat(200, [35, 23, 18, 10, 40]) ➞ 2\n//",
    "tags": [
      "loops",
      "numbers",
      "interview"
    ],
    "title": "Crowded Carriage Capacity"
  },
  {
    "_id": "L5uwyF4SsAG4DmPpJ",
    "difficulty": 1.4676258992805755,
    "language": "java",
    "summary": "Given a list of directions to spin, \"left\" or \"right\", return an integer of how many full 360° rotations were made. Note that each word in the array counts as a 90° rotation in that direction.\n\nExamples\nspinAround([\"right\", \"right\", \"right\", \"right\", \"left\", \"right\"]) ➞ 1\nYou spun right 4 times (90 * 4 = 360)\nYou spun left once (360 - 90 = 270)\nBut you spun ri",
    "tags": [
      "arrays",
      "language_fundamentals"
    ],
    "title": "Spin Around, Touch the Ground"
  },
  {
    "_id": "HmicQW4LMYyNHXRzT",
    "difficulty": 1.4680851063829787,
    "language": "java",
    "summary": "Welcome to part two of the collection for  Computer Science Algorithms. This challenge will deal further with writing recursive functions by covering the Euclidean Algorithm. The \"Euclidean Algorithm\" is a method for finding the greatest common divisor (GCD) of two numbers. It was originally described by the Greek mathematician Euclid.\n\nAlgorithm\nFor the sake",
    "tags": [
      "algorithms",
      "math",
      "logic",
      "recursion"
    ],
    "title": "Algorithms II: The Euclidean Algorithm"
  },
  {
    "_id": "zSqXDoWS8PuhbbPrL",
    "difficulty": 1.4681724845995894,
    "language": "java",
    "summary": "Write a function that reverses a string. Make your function recursive.\n\nExamples\nreverse(\"hello\") ➞ \"olleh\"\n\nreverse(\"world\") ➞ \"dlrow\"\n\nreverse(\"a\") ➞ \"a\"\n\nreverse(\"\") ➞ \"\"\n\nNotes\nFor non-base cases, your function must call itself at least once.\nCheck the Resources tab for info on recursion.",
    "tags": [
      "recursion",
      "strings",
      "language_fundamentals"
    ],
    "title": "Recursion: Reverse a String"
  },
  {
    "_id": "c52kNwPuWo5kp9x4H",
    "difficulty": 1.4684466019417475,
    "language": "java",
    "summary": "Create a function that takes a string and returns a new string with its first and last characters swapped, except under three conditions:\n\nIf the length of the string is less than two, return \"Incompatible.\".\nIf the first and last characters are the same, return \"Two's a pair.\".\n\nExamples\nflipEndChars(\"Cat, dog, and mouse.\") ➞ \".at, dog, and mouseC\"\n\nflipEndCh",
    "tags": [
      "strings",
      "arrays",
      "conditions",
      "validation"
    ],
    "title": "Switcharoo"
  },
  {
    "_id": "vXYP24qRoQQijc834",
    "difficulty": 1.4696707105719238,
    "language": "java",
    "summary": "Create a function that tests whether or not an integer is a perfect number. A perfect number is a number that can be written as the sum of its factors, (equal to sum of its proper divisors) excluding the number itself.\n\nFor example, 6 is a perfect number, since 1 + 2 + 3 = 6, where 1, 2, and 3 are all factors of 6. Similarly, 28 is a perfect number, since 1 +",
    "tags": [
      "numbers",
      "math",
      "validation"
    ],
    "title": "Perfect Number"
  },
  {
    "_id": "7r4Hz8MvJq4sbHhXB",
    "difficulty": 1.4703389830508475,
    "language": "java",
    "summary": "Create a function that accepts a string, checks if it's a valid email address and returns either  true or false, depending on the evaluation.\n\nThe string must contain an @ character.\nThe string must contain a . character.\nThe @ must have at least one character in front of it.\n  e.g. \"e@edabit.com\" is valid while \"@edabit.com\" is invalid.\nThe . and the @ must b",
    "tags": [
      "validation",
      "strings",
      "logic",
      "regex"
    ],
    "title": "Basic E-Mail Validation"
  },
  {
    "_id": "aAMcXEH67BLzJfyZz",
    "difficulty": 1.4725274725274726,
    "language": "java",
    "summary": "Create a function that will count the number of digits of a number. Conversion of the number to a string is not allowed, thus, the approach is either recursive or iterative.\n\nExamples\ndigitsCount(4666) ➞ 4\n\ndigitsCount(544) ➞ 3\n\ndigitsCount(121317) ➞ 6\n\ndigitsCount(0) ➞ 1\n\ndigitsCount(12345) ➞ 5\n\ndigitsCount(1289396387328L) ➞ 13\n\nNotes\nA recursive version of t",
    "tags": [
      "numbers",
      "logic"
    ],
    "title": "Count the Digits"
  },
  {
    "_id": "r7JegKpMpntfDyy6D",
    "difficulty": 1.472972972972973,
    "language": "java",
    "summary": "Create a function which concatenates the number 7 to the end of every chord in an array. Ignore all chords which already end with 7.\n\nExamples\njazzify([\"G\", \"F\", \"C\"]) ➞ [\"G7\", \"F7\", \"C7\"]\n\njazzify([\"Dm\", \"G\", \"E\", \"A\"]) ➞ [\"Dm7\", \"G7\", \"E7\", \"A7\"]\n\njazzify([\"F7\", \"E7\", \"A7\", \"Ab7\", \"Gm7\", \"C7\"]) ➞ [\"F7\", \"E7\", \"A7\", \"Ab7\", \"Gm7\", \"C7\"]\n\njazzify([]) ➞ []\n\nNote",
    "tags": [
      "language_fundamentals",
      "loops",
      "arrays"
    ],
    "title": "Instant JAZZ"
  },
  {
    "_id": "r2csEmtFvoa3tDWB4",
    "difficulty": 1.4736842105263157,
    "language": "java",
    "summary": "Create a function that determines whether a number is Oddish or Evenish. A number is Oddish if the sum of all of its digits is odd, and a number is Evenish if the sum of all of its digits is even. If a number is Oddish, return \"Oddish\". Otherwise, return \"Evenish\".\n\nFor example, oddishOrEvenish(121) should return \"Evenish\", since 1 + 2 + 1 = 4. oddishOrEvenish",
    "tags": [
      "numbers",
      "math",
      "validation",
      "conditions"
    ],
    "title": "Oddish vs. Evenish"
  },
  {
    "_id": "XFhvhZhfA7TfPk87D",
    "difficulty": 1.4738675958188154,
    "language": "java",
    "summary": "Create a function that takes three numbers — the width and height of a rectangle, and the radius of a circle — and returns true if the rectangle can fit inside the circle, false if it can't.\n\nExamples\nrectangleInCircle(8, 6, 5) ➞ true\n\nrectangleInCircle(5, 9, 5) ➞ false\n\nrectangleInCircle(4, 7, 4) ➞ false\n\nNotes\nN/A",
    "tags": [
      "math",
      "validation",
      "geometry"
    ],
    "title": "Rectangle in Circle"
  },
  {
    "_id": "tiyPFonvAJ8e6H9jS",
    "difficulty": 1.4746543778801844,
    "language": "java",
    "summary": "Create a function that takes an integer n and reverses it.\n\nExamples\nrev(5121) ➞ \"1215\"\n\nrev(69) ➞ \"96\"\n\nrev(-122157) ➞ \"751221\"\n\nNotes\nThis challenge is about using two operators that are related to division.\nIf the number is negative, treat it like it's positive.",
    "tags": [
      "math",
      "numbers",
      "formatting"
    ],
    "title": "Reverse the Number"
  },
  {
    "_id": "iaCSbqngin2AXriyB",
    "difficulty": 1.475177304964539,
    "language": "java",
    "summary": "Create a method that accepts a string of space separated numbers and returns the highest and lowest number (as a string).\n\nExamples\n\nhighLow(\"1 2 3 4 5\") ➞ \"5 1\"\n\nhighLow(\"1 2 -3 4 5\") ➞ \"5 -3\"\n\nhighLow(\"1 9 3 4 -5\") ➞ \"9 -5\"\n\nhighLow(\"13\") ➞ \"13 13\"\n\nNotes\n\nAll numbers are valid Int32, no need to validate them.\nThere will always be at least one number in the",
    "tags": [
      "math",
      "sorting",
      "algorithms",
      "numbers"
    ],
    "title": "Return the Highest and Lowest Numbers"
  },
  {
    "_id": "GJh9FraKutcnHoruX",
    "difficulty": 1.4755351681957187,
    "language": "java",
    "summary": "Create a method that takes an array of integers between 1 and 10 (excluding one number) and returns the missing number.\n\nExamples\nmissingNum([1, 2, 3, 4, 6, 7, 8, 9, 10]) ➞ 5\n\nmissingNum([7, 2, 3, 6, 5, 9, 1, 4, 8]) ➞ 10\n\nmissingNum([10, 5, 1, 2, 4, 6, 8, 3, 9]) ➞ 7\n\nNotes\nThe array of numbers will be unsorted (not in order).\nOnly one number will be missing.",
    "tags": [
      "sorting",
      "algorithms",
      "math",
      "numbers",
      "interview"
    ],
    "title": "Find the Missing Number"
  },
  {
    "_id": "aPmfBKu7ixcsYYKaZ",
    "difficulty": 1.4757281553398058,
    "language": "java",
    "summary": "Transcribe the given DNA strand into corresponding mRNA - a type of RNA,  that will be formed from DNA after transcription. DNA has the bases A, T, G and C, while RNA converts to U, A, C and G respectively.\n\nExamples\ndnaToRna(\"ATTAGCGCGATATACGCGTAC\") ➞ \"UAAUCGCGCUAUAUGCGCAUG\"\n\ndnaToRna(\"CGATATA\") ➞ \"GCUAUAU\"\n\ndnaToRna(\"GTCATACGACGTA\") ➞ \"CAGUAUGCUGCAU\"\n\nNotes",
    "tags": [
      "algorithms",
      "conditions",
      "language_fundamentals",
      "strings"
    ],
    "title": "Transcribe To mRNA"
  },
  {
    "_id": "W64jA8hmGCmjbR7Fb",
    "difficulty": 1.4764044943820225,
    "language": "java",
    "summary": "Create a function that takes an array of numbers and returns the mean (average) of all those numbers.\n\nExamples\nmean([1, 0, 4, 5, 2, 4, 1, 2, 3, 3, 3]) ➞ 2.55\n\nmean([2, 3, 2, 3]) ➞ 2.50\n\nmean([3, 3, 3, 3, 3]) ➞ 3.00\n\nNotes\nRound to two decimal places.\nYou can expect a number ranging from 0 to 10,000.",
    "tags": [
      "math",
      "numbers"
    ],
    "title": "Calculate the Mean"
  },
  {
    "_id": "9zBJYnBekqAo52zEp",
    "difficulty": 1.4776119402985075,
    "language": "java",
    "summary": "Create a function that determines whether a string is a valid hex code.\n\nA hex code must begin with a pound key # and is exactly 6 characters in length. Each character must be a digit from 0-9 or an alphabetic character from A-F. All alphabetic characters may be uppercase or lowercase.\n\nExamples\nisValidHexCode(\"#CD5C5C\") ➞ true\n\nisValidHexCode(\"#EAECEE\") ➞ tru",
    "tags": [
      "strings",
      "regex",
      "validation"
    ],
    "title": "Valid Hex Code"
  },
  {
    "_id": "QLz5aGfChHhndKWMv",
    "difficulty": 1.4790697674418605,
    "language": "java",
    "summary": "Create a function that takes an array of arrays with numbers. Return a new (single) array with the largest numbers of each.\n\nExamples\nfindLargestNums([[4, 2, 7, 1], [20, 70, 40, 90], [1, 2, 0]]) ➞ [7, 90, 2]\n\nfindLargestNums([[-34, -54, -74], [-32, -2, -65], [-54, 7, -43]]) ➞ [-34, -2, 7]\n\nfindLargestNums([[0.4321, 0.7634, 0.652], [1.324, 9.32, 2.5423, 6.4314]",
    "tags": [
      "arrays",
      "sorting",
      "numbers",
      "loops"
    ],
    "title": "Find the Largest Numbers in a Group of Arrays"
  },
  {
    "_id": "u4YLReJ9Q3vAYJkCm",
    "difficulty": 1.4802431610942248,
    "language": "java",
    "summary": "Write a function that returns true if two arrays have the same number of unique elements, and false otherwise.\n\nTo illustrate:\n\narr1 = [1, 3, 4, 4, 4]\narr2 = [2, 5, 7]\n\nIn arr1, the number 4 appears three times, which means it contains three unique elements: [1, 3, 4]. Since arr1 and arr2 both contain the same number of unique elements, this example would retu",
    "tags": [
      "arrays",
      "language_fundamentals",
      "validation"
    ],
    "title": "Same Number of Unique Elements"
  },
  {
    "_id": "2Cbbs3pvH2gCMZMsg",
    "difficulty": 1.4804597701149425,
    "language": "java",
    "summary": "Write a function that changes every letter to the next letter:\n\n\"a\" becomes \"b\"\n\"b\" becomes \"c\"\n\"d\" becomes \"e\"\nand so on ...\n\nExamples\nmove(\"hello\") ➞ \"ifmmp\"\n\nmove(\"bye\") ➞ \"czf\"\n\nmove(\"welcome\") ➞ \"xfmdpnf\"\n\nNotes\nThere will be no z's in the tests.",
    "tags": [
      "strings",
      "formatting",
      "cryptography"
    ],
    "title": "Change Every Letter to the Next Letter"
  },
  {
    "_id": "xrPSrroKFC9uciA6H",
    "difficulty": 1.4807692307692308,
    "language": "java",
    "summary": "Write a function that will be passed with two integer values, j and k and two functions, f and g, that don't take any parameters. Your function has  to call them (and use the two integer values, accordingly), and returns a string that indicates which function has returned the larger number.\n\nIf f returns the larger number, return the string f.\nIf g returns the",
    "tags": [
      "higher_order_functions",
      "language_fundamentals",
      "numbers"
    ],
    "title": "Which Function Returns The Larger Number?"
  },
  {
    "_id": "9D39q2q9yAFCDM9da",
    "difficulty": 1.481283422459893,
    "language": "java",
    "summary": "You are given the length of a video in minutes. The format is mm:ss (e.g.: \"02:54\"). Create a function that takes the video length and return it in seconds.\n\nExamples\nminutesToSeconds(\"01:00\") ➞ 60\n\nminutesToSeconds(\"13:56\") ➞ 836\n\nminutesToSeconds(\"10:60\") ➞ -1\n\nNotes\nThe video length is given as a string.\nIf the number of seconds is 60 or over, return -1 (se",
    "tags": [
      "math",
      "strings",
      "numbers",
      "language_fundamentals"
    ],
    "title": "Video Length in Seconds"
  },
  {
    "_id": "A7mDjLb7DZL5bk8oz",
    "difficulty": 1.4817708333333333,
    "language": "java",
    "summary": "Create a function that takes an array of numbers and returns only the even values.\n\nExamples\nnoOdds([1, 2, 3, 4, 5, 6, 7, 8]) ➞ [2, 4, 6, 8]\n\nnoOdds([43, 65, 23, 89, 53, 9, 6]) ➞ [6]\n\nnoOdds([718, 991, 449, 644, 380, 440]) ➞ [718, 644, 380, 440]\n\nNotes\nReturn all even numbers in the order they were given.\nAll test cases contain valid numbers ranging from 1 to",
    "tags": [
      "arrays",
      "math",
      "validation",
      "numbers"
    ],
    "title": "Eliminate Odd Numbers within an Array"
  },
  {
    "_id": "fCkawrffCeWEH5xja",
    "difficulty": 1.4818652849740932,
    "language": "java",
    "summary": "Given a string, create a function to reverse the case. All lower-cased letters should be upper-cased, and vice versa.\n\nExamples\nreverseCase(\"Happy Birthday\") ➞ \"hAPPY bIRTHDAY\"\n\nreverseCase(\"MANY THANKS\") ➞ \"many thanks\"\n\nreverseCase(\"sPoNtAnEoUs\") ➞ \"SpOnTaNeOuS\"\n\nNotes\nN/A",
    "tags": [
      "strings",
      "formatting",
      "loops"
    ],
    "title": "Reverse the Case"
  },
  {
    "_id": "ynzo3DeHCmAXLtpwe",
    "difficulty": 1.4819277108433735,
    "language": "java",
    "summary": "Create a function that takes a single word string and does the following:\n\nConcatenates inator to the end if the word ends with a consonant otherwise, concatenate -inator instead.\n\nAdds the word length of the original word to the end, supplied with '000'.\n\nThe examples should make this clear.\n\nExamples\ninatorInator(\"Shrink\") ➞ \"Shrinkinator 6000\"\n\ninatorInator",
    "tags": [
      "formatting",
      "strings"
    ],
    "title": "Functioninator 8000"
  },
  {
    "_id": "q3hu6xr7eqBB3EKaB",
    "difficulty": 1.482213438735178,
    "language": "java",
    "summary": "Given three numbers, x, y and z, determine whether they are the edges of a right angled triangle.\n\nExamples\nrightTriangle(3, 4, 5) ➞ true\n// This is the classic example of a \"nice\" right angled triangle.\n\nrightTriangle(145, 105, 100) ➞ true\n// This is a less famous example.\n\nrightTriangle(70, 130, 110) ➞ false\n// This isn't a right angled triangle.\nNotes\nNotic",
    "tags": [
      "math",
      "algebra",
      "validation"
    ],
    "title": "Is This a Right Angled Triangle?"
  },
  {
    "_id": "E22KYTGMhwpYtjn8x",
    "difficulty": 1.4823008849557522,
    "language": "java",
    "summary": "Given a number, return a list containing the two halves of the number. If the number is odd, make the rightmost number higher.\n\nExamples\nnumberSplit(25) ➞ [12, 13]\n\nnumberSplit(4) ➞ [2, 2]\n\nnumberSplit(10) ➞ [5, 5]\n\nnumberSplit(11) ➞ [5, 6]\n\nnumberSplit(-9) ➞ [-5, -4]\n\nNotes\nAll numbers will be integers.\nYou can expect negative numbers too.",
    "tags": [
      "numbers",
      "arrays",
      "math"
    ],
    "title": "Number Split"
  },
  {
    "_id": "diiEDD4JQyysFR7zh",
    "difficulty": 1.4824561403508771,
    "language": "java",
    "summary": "Create a function which constructs a rectangular birthday cake, based on someone's name and age! Build it out of strings in an array and make sure to surround the birthday message with the character that fits the rule:\n\nIf the age is an even number, surround the message with \"#\".\nIf the age is an odd number, surround the message with \"*\".\n\nOther important rule",
    "tags": [
      "arrays",
      "formatting"
    ],
    "title": "Birthday Cake"
  },
  {
    "_id": "g7dRyiCi5dpKxuFRa",
    "difficulty": 1.4830508474576272,
    "language": "java",
    "summary": "You are to read each part of the date into its own integer type variable. The year should be a 4 digit number. You can assume the user enters a correct date formatted d m yyyy (no error checking required).\n\nDetermine whether the entered date is a magic date. Here are the rules for a magic date:\n\nmm * dd is a 1-digit number that matches the last digit of yyyy o",
    "tags": [
      "dates",
      "numbers",
      "validation"
    ],
    "title": "Magic Date"
  },
  {
    "_id": "Abq8d76QDQC2ocfX7",
    "difficulty": 1.4836065573770492,
    "language": "java",
    "summary": "Write the function that takes three dimensions of a brick: height(a), width(b) and depth(c) and returns true if this brick can fit into a hole with the width(w) and height(h).\n\nExamples\ndoesBrickFit(1, 1, 1, 1, 1) ➞ true\n\ndoesBrickFit(1, 2, 1, 1, 1) ➞ true\n\ndoesBrickFit(1, 2, 2, 1, 1) ➞ false\n\nNotes\nYou can turn the brick with any side towards the hole.\nWe ass",
    "tags": [
      "conditions",
      "validation",
      "math",
      "geometry"
    ],
    "title": "Check If the Brick Fits through the Hole"
  },
  {
    "_id": "5oJXKYGnG5hqbaaxK",
    "difficulty": 1.484076433121019,
    "language": "java",
    "summary": "Create a function that takes two numbers as arguments and return the LCM of the two numbers.\n\nExamples\nlcm(3, 5) ➞ 15\n\nlcm(14, 28) ➞ 28\n\nlcm(4, 6) ➞ 12\n\nNotes\nDon't forget to return the result.\nYou may want to use the GCD function to make this a little easier.\nLCM stands for least common multiple, the smallest multiple of both integers.",
    "tags": [
      "math",
      "numbers"
    ],
    "title": "GCD and LCM (Part 2)"
  },
  {
    "_id": "3mCJ3idbMqueRTa7b",
    "difficulty": 1.484732824427481,
    "language": "java",
    "summary": "Create a function that filters out an array of state names into two categories based on the second parameter.\n\nAbbreviations abb\nFull names full\n\nExamples\nfilterStateNames([\"Arizona\", \"CA\", \"NY\", \"Nevada\"], \"abb\")\n➞ [\"CA\", \"NY\"]\n\nfilterStateNames([\"Arizona\", \"CA\", \"NY\", \"Nevada\"], \"full\")\n➞ [\"Arizona\", \"Nevada\"]\n\nfilterStateNames([\"MT\", \"NJ\", \"TX\", \"ID\", \"IL\"]",
    "tags": [
      "arrays",
      "formatting",
      "loops"
    ],
    "title": "State Names and Abbreviations"
  },
  {
    "_id": "p3BhJuodwuhrNjQJ5",
    "difficulty": 1.4848484848484849,
    "language": "java",
    "summary": "Create a function that validates whether the three given integers form a Pythagorean triplet which is defined as the sum of the squares of the two smallest integers must be equal to the square of the largest integer.\n\nExamples\nisTriplet(3, 4, 5) ➞ true\n// 3² + 4² = 25\n// 5² = 25\n\nisTriplet(13, 5, 12) ➞ true\n// 5² + 12² = 169\n// 13² = 169\n\nisTriplet(1, 2, 3) ➞",
    "tags": [
      "math",
      "validation",
      "numbers",
      "geometry"
    ],
    "title": "Pythagorean Triplet"
  },
  {
    "_id": "9X8zLpBEcQsyerPgL",
    "difficulty": 1.485,
    "language": "java",
    "summary": "Create a function that takes a number as an argument and returns the highest digit in that number.\n\nExamples\nhighestDigit(4666) ➞ 6\n\nhighestDigit(544) ➞ 5\n\nhighestDigit(379) ➞ 9\n\nhighestDigit(2) ➞ 2\n\nhighestDigit(377401) ➞ 7\n\nNotes\nDon't forget to return the result.\nIf you get stuck on a challenge, find help in the Resources tab.\nIf you're really stuck, unlock",
    "tags": [
      "numbers",
      "language_fundamentals"
    ],
    "title": "Highest Digit"
  },
  {
    "_id": "ibJLbwfkTbP9229Kt",
    "difficulty": 1.4858757062146892,
    "language": "java",
    "summary": "Given an array of boxes, create a function that returns the total volume of all those boxes combined together. A box is represented by an array with three elements: length, width and height.\n\nFor instance, totalVolume([2, 3, 2], [6, 6, 7], [1, 2, 1]) should return 266 since  (2 x 3 x 2) + (6 x 6 x 7) + (1 x 2 x 1) = 12 + 252 + 2 = 266.\n\nExamples\ntotalVolume([4",
    "tags": [
      "arrays",
      "math",
      "geometry"
    ],
    "title": "Total Volume of All Boxes"
  },
  {
    "_id": "nXkhpafB9e5c7fNcg",
    "difficulty": 1.485981308411215,
    "language": "java",
    "summary": "A word nest is created by taking a starting word, and generating a new string by placing the word inside itself. This process is then repeated.\n\nNesting 3 times with the word \"incredible\":\n\nstart  = incredible\nfirst  = incre|incredible|dible\nsecond = increin|incredible|credibledible\nthird  = increinincr|incredible|ediblecredibledible\n\nThe final nest is \"increi",
    "tags": [
      "language_fundamentals",
      "strings"
    ],
    "title": "Word Nests"
  },
  {
    "_id": "xLHemSaX8jAc6Tyz9",
    "difficulty": 1.4861111111111112,
    "language": "java",
    "summary": "A number is said to be Harshad if it's exactly divisible by the sum of its digits. Create a function that determines whether a number is a Harshad or not.\n\nExamples\nisHarshad(75) ➞ false\n// 7 + 5 = 12\n// 75 is not exactly divisible by 12\n\nisHarshad(171) ➞ true\n// 1 + 7 + 1 = 9\n// 9 exactly divides 171\n\nisHarshad(481) ➞ true\n\nisHarshad(89) ➞ false\n\nisHarshad(51",
    "tags": [
      "math",
      "numbers",
      "strings",
      "loops"
    ],
    "title": "Harshad Number"
  },
  {
    "_id": "jtFNMktij8FcH6zna",
    "difficulty": 1.4861111111111112,
    "language": "java",
    "summary": "Write a function that takes two arrays and adds the first element in the first array with the first element in the second array, the second element in the first array with the second element in the second array, etc, etc. Return true if all element combinations add up to the same number. Otherwise, return false.\n\nExamples\npuzzlePieces([1, 2, 3, 4], [4, 3, 2, 1",
    "tags": [
      "arrays",
      "higher_order_functions",
      "validation",
      "loops"
    ],
    "title": "Puzzle Pieces"
  },
  {
    "_id": "MX8ikyoCnDWr33saY",
    "difficulty": 1.4866310160427807,
    "language": "java",
    "summary": "Given a integer n, write a function that returns PI to n decimal places.\n\nExamples\nmyPi(5) ➞ 3.14159\n\nmyPi(4) ➞ 3.1416\n\nmyPi(15) ➞ 3.141592653589793\n\nNotes\nn will not be above 15, to keep this challenge simple.\nRound up the last digit if the next digit in PI is greater or equal to 5 (see second example above).\nThe return value must be a number, not a string.",
    "tags": [
      "math",
      "numbers"
    ],
    "title": "Pi to N Decimal Places"
  },
  {
    "_id": "G9tAPeGEhR8r2DkH5",
    "difficulty": 1.4871794871794872,
    "language": "java",
    "summary": "Create a function that takes a number as its argument and returns an array of all its factors.\n\nExamples\nfactorize(12) ➞ [1, 2, 3, 4, 6, 12]\n\nfactorize(4) ➞ [1, 2, 4]\n\nfactorize(17) ➞ [1, 17]\n\nNotes\nThe input integer will be positive.\nA factor is a number that evenly divides into another number without leaving a remainder. The second example is a factor of 12,",
    "tags": [
      "math",
      "numbers",
      "control_flow",
      "loops"
    ],
    "title": "Factorize a Number"
  },
  {
    "_id": "px8DTp5gTmojeBLve",
    "difficulty": 1.488,
    "language": "java",
    "summary": "Write a function that returns the position of the second occurrence of \"zip\" in a string, or -1 if it does not occur at least twice. Your code should be general enough to pass every possible case where \"zip\" can occur in a string.\n\nExamples\nfindZip(\"all zip files are zipped\") ➞ 18\n\nfindZip(\"all zip files are compressed\") ➞ -1\n\nNotes\nUppercase \"Zip\" is not the",
    "tags": [
      "loops",
      "logic",
      "strings"
    ],
    "title": "Find the Second Occurrence of \"zip\" in a String"
  },
  {
    "_id": "FsgEcZdjC4BYG9gLj",
    "difficulty": 1.4887218045112782,
    "language": "java",
    "summary": "Create a function that takes two numbers as arguments and returns the Greatest Common Devisor (GCD) of the two numbers.\n\nExamples\ngcd(3, 5) ➞ 1\n\ngcd(14, 28) ➞ 14\n\ngcd(4, 18) ➞ 2\n\nNotes\nThe GCD is the highest number that can divide both arguments without a remainder.",
    "tags": [
      "math",
      "numbers"
    ],
    "title": "GCD and LCM ( Part 1)"
  },
  {
    "_id": "kgMghy3omychqLnXv",
    "difficulty": 1.4887218045112782,
    "language": "java",
    "summary": "Given an array of integers, write a method that returns an array that...\n\nHas all duplicate elements removed.\nIs sorted from least value to greatest value.\n\nExamples\nuniqueSort([1, 2, 4, 3]) ➞ [1, 2, 3, 4]\n\nuniqueSort([1, 4, 4, 4, 4, 4, 3, 2, 1, 2]) ➞ [1, 2, 3, 4]\n\nuniqueSort([6, 7, 3, 2, 1]) ➞ [1, 2, 3, 6, 7]\n\nNotes\nN/A",
    "tags": [
      "arrays",
      "data_structures",
      "sorting",
      "numbers",
      "loops"
    ],
    "title": "Purge and Organize"
  },
  {
    "_id": "GobCTBruAvA3ZDr4J",
    "difficulty": 1.488888888888889,
    "language": "java",
    "summary": "A number n is automorphic if n^2 ends in n.\n\nFor example: n=5, n^2=25\n\nCreate a function that takes a number and returns true if the number is automorphic, false if it isn't.\n\nExamples\nisAutomorphic(5) ➞ true\n\nisAutomorphic(8) ➞ false\n\nisAutomorphic(76) ➞ true\n\nNotes\nN/A",
    "tags": [
      "algebra",
      "validation",
      "numbers"
    ],
    "title": "Automorphic Numbers"
  },
  {
    "_id": "H6eTNH6NW36MHqkjb",
    "difficulty": 1.489247311827957,
    "language": "java",
    "summary": "Write a function that takes a positive integer num and calculates how many dots exist in a pentagonal shape around the center dot on the Nth iteration.\n\nIn the image below you can see the first iteration is only a single dot. On the second, there are 6 dots. On the third, there are 16 dots, and on the fourth there are 31 dots.\n\nalt text\n\nReturn the number of d",
    "tags": [
      "logic",
      "recursion",
      "numbers",
      "geometry"
    ],
    "title": "Pentagonal Number"
  },
  {
    "_id": "n7kbvMp5zHRmRbFQF",
    "difficulty": 1.490909090909091,
    "language": "java",
    "summary": "Create a function that takes an array of positive and negative numbers. Return an array where the first element is the count of positive numbers and the second element is the sum of negative numbers.\n\nExamples\ncountPositivesSumNegatives([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15]) ➞ [10, -65]\n// There are a total of 10 positive numbers.\n// The sum",
    "tags": [
      "arrays",
      "conditions",
      "numbers"
    ],
    "title": "Positive Count / Negative Sum"
  },
  {
    "_id": "yFtCbCJBpoZM2rEqP",
    "difficulty": 1.490909090909091,
    "language": "java",
    "summary": "Create a function that takes a single character as an argument and returns the char code of its lowercased / uppercased counterpart.\n\nExamples\nGiven that:\n  \"A\" char code is: 65\n  \"a\" char code is: 97\n\ncounterpartCharCode(\"A\") ➞ 97\n\ncounterpartCharCode(\"a\") ➞ 65\n\nNotes\nThe argument will always be a single character.\nNot all inputs will have a counterpart (e.g.",
    "tags": [
      "strings",
      "formatting"
    ],
    "title": "Find ASCII Charcode of Inverse Case Character"
  },
  {
    "_id": "WHuKTT4wm6vnr8o3n",
    "difficulty": 1.4911242603550297,
    "language": "java",
    "summary": "A pandigital number contains all digits (0-9) at least once. Write a function that takes an integer, returning true if the integer is pandigital, and false otherwise.\n\nExamples\nisPandigital(98140723568910) ➞ true\n\nisPandigital(90864523148909) ➞ false\n// 7 is missing.\n\nisPandigital(112233445566778899) ➞ false\n\nNotes\nThink about the properties of a pandigital nu",
    "tags": [
      "numbers",
      "math",
      "validation"
    ],
    "title": "Pandigital Numbers"
  },
  {
    "_id": "auwAWq4MXmXFwWrHf",
    "difficulty": 1.4915254237288136,
    "language": "java",
    "summary": "Create a function that takes a number as input and returns true if the sum of its digits has the same parity as the entire number. Otherwise, return false.\n\nExamples\nparityAnalysis(243) ➞ true\n// 243 is odd and so is 9 (2 + 4 + 3)\n\nparityAnalysis(12) ➞ false\n// 12 is even but 3 is odd (1 + 2)\n\nparityAnalysis(3) ➞ true\n// 3 is odd and 3 is odd and 3 is odd (3)\n",
    "tags": [
      "conditions",
      "language_fundamentals",
      "validation"
    ],
    "title": "Same Parity?"
  },
  {
    "_id": "kZZDAMCjekgBdWgJy",
    "difficulty": 1.4918032786885247,
    "language": "java",
    "summary": "Suppose that you add all of the page numbers in a book.  If the total is 21, the book could only have 6 pages because 1 + 2 + 3 + 4 + 5 + 6 = 21.  If I had said the total were 25,\nthat would be impossible because the next number in the series is 28 (21 + 7).\n\nCreate a function that, given the total number of pages as an argument, returns\ntrue if it is a valid",
    "tags": [
      "numbers",
      "math",
      "validation"
    ],
    "title": "Pages in a Book"
  },
  {
    "_id": "faMvfHSZ6r6DbGYAc",
    "difficulty": 1.4931506849315068,
    "language": "java",
    "summary": "In this challenge, you must build a function that inflects an infinitive regular Italian verb of the first conjugation form to the present tense, including the personal subjective pronoun.\n\nAll first conjugation Italian verbs share the same suffix: ARE. The first thing to do is separate the verb root from the suffix.\nRoot of \"programmare\" (to code) = \"programm",
    "tags": [
      "strings",
      "formatting",
      "conditions"
    ],
    "title": "Italian Grammar: Present Tense of First Conjugation Verbs"
  },
  {
    "_id": "Xbrab5yY9zaknqDjQ",
    "difficulty": 1.4942528735632183,
    "language": "java",
    "summary": "Create a function which adds spaces before every capital in a word. Uncapitalize the whole string afterwards.\n\nExamples\ncapSpace(\"helloWorld\") ➞ \"hello world\"\n\ncapSpace(\"iLoveMyTeapot\") ➞ \"i love my teapot\"\n\ncapSpace(\"stayIndoors\") ➞ \"stay indoors\"\n\nNotes\nThe first letter will stay uncapitalized.",
    "tags": [
      "strings",
      "loops"
    ],
    "title": "Capital Split"
  },
  {
    "_id": "tgjFboGwDEHY4Wn5S",
    "difficulty": 1.4944444444444445,
    "language": "java",
    "summary": "Create a function that takes a string and returns a new string with each new character accumulating by +1. Separate each set with a dash.\n\nExamples\naccum(\"abcd\") ➞ \"A-Bb-Ccc-Dddd\"\n\naccum(\"RqaEzty\") ➞ \"R-Qq-Aaa-Eeee-Zzzzz-Tttttt-Yyyyyyy\"\n\naccum(\"cwAt\") ➞ \"C-Ww-Aaa-Tttt\"\n\nNotes\nCapitalize the first letter of each set.\nAll tests contain valid strings with alphabe",
    "tags": [
      "strings",
      "formatting",
      "loops"
    ],
    "title": "Compounding Letters"
  },
  {
    "_id": "ijNrhCjfS2ZMtNkXS",
    "difficulty": 1.4946808510638299,
    "language": "java",
    "summary": "Create a function that takes a string's characters as ASCII and returns each character's hexadecimal value as a string.\n\nExamples\ntoHex(\"hello world\") ➞ \"68 65 6c 6c 6f 20 77 6f 72 6c 64\"\n\ntoHex(\"Big Boi\") ➞ \"42 69 67 20 42 6f 69\"\n\ntoHex(\"Marty Poppinson\") ➞ \"4d 61 72 74 79 20 50 6f 70 70 69 6e 73 6f 6e\"\n\nNotes\nEach byte must be seperated by a space.\nAll alpha",
    "tags": [
      "loops",
      "logic",
      "strings"
    ],
    "title": "Convert to Hex"
  },
  {
    "_id": "tunTJAdBeLgc8s4ap",
    "difficulty": 1.4953271028037383,
    "language": "java",
    "summary": "Create a function that keeps only strings with repeating identical characters (in other words, it has a set size of 1).\n\nExamples\nidenticalFilter([\"aaaaaa\", \"bc\", \"d\", \"eeee\", \"xyz\"])\n➞ [\"aaaaaa\", \"d\", \"eeee\"]\n\nidenticalFilter([\"88\", \"999\", \"22\", \"545\", \"133\"])\n➞ [\"88\", \"999\", \"22\"]\n\nidenticalFilter([\"xxxxo\", \"oxo\", \"xox\", \"ooxxoo\", \"oxo\"])\n➞ []\n\nNotes\nA strin",
    "tags": [
      "arrays",
      "strings",
      "loops",
      "language_fundamentals"
    ],
    "title": "Filter Repeating Character Strings"
  },
  {
    "_id": "z9ofdqhTYi9tdCj5T",
    "difficulty": 1.4954128440366972,
    "language": "java",
    "summary": "Create a function that will return an integer number corresponding to the amount of digits in the given integer num.\n\nExamples\nnumOfDigits(1000) ➞ 4\n\nnumOfDigits(12) ➞ 2\n\nnumOfDigits(1305981031) ➞ 10\n\nnumOfDigits(0) ➞ 1\n\nNotes\nTry to solve this challenge without using strings!",
    "tags": [
      "math",
      "numbers",
      "regex"
    ],
    "title": "Find Number of Digits in Number"
  },
  {
    "_id": "Tyzp6S67dtXPAAQan",
    "difficulty": 1.4957264957264957,
    "language": "java",
    "summary": "A Primorial is a product of the first n prime numbers (e.g. 2 x 3 x 5 = 30). 2, 3, 5, 7, 11, 13 are prime numbers. If n was 3, you'd multiply 2 x 3 x 5 = 30 or Primorial = 30.\n\nCreate a function that returns the Primorial of a number.\n\nExamples\nprimorial(1) ➞ 2\n\nprimorial(2) ➞ 6\n\nprimorial(8) ➞ 9699690\n\nNotes\nN/A",
    "tags": [
      "algorithms",
      "loops",
      "numbers"
    ],
    "title": "Find the Primorial"
  },
  {
    "_id": "nC9oD566JRp9cnth9",
    "difficulty": 1.4970414201183433,
    "language": "java",
    "summary": "Given an integer, return \"odd\" if the sum of all odd digits is greater than the sum of all even digits. Return \"even\" if the sum of even digits is greater than the sum of odd digits, and \"equal\" if both sums are the same.\n\nExamples\noddsVsEvens(97428) ➞ \"odd\"\n// odd = 16 (9+7)\n// even = 14 (4+2+8)\n\noddsVsEvens(81961) ➞ \"even\"\n// odd = 11 (1+9+1)\n// even = 14 (8",
    "tags": [
      "language_fundamentals",
      "math"
    ],
    "title": "Odds vs. Evens"
  },
  {
    "_id": "5aGCby28ZfsSZr4cH",
    "difficulty": 1.5,
    "language": "java",
    "summary": "Given a string worm create a function that takes the length of the worm and converts it into millimeters. Each - represents one centimeter.\n\nExamples\nwormLength(\"----------\") ➞ \"100 mm.\"\n\nwormLength(\"\") ➞ \"invalid\"\n\nwormLength(\"----_---\") ➞ \"invalid\"\n\nNotes\nReturn \"invalid\" if an empty string is given or if the string has characters other than -.",
    "tags": [
      "strings"
    ],
    "title": "Length of Worm"
  },
  {
    "_id": "6cBQuxkvN4f2Qn8x9",
    "difficulty": 1.5,
    "language": "java",
    "summary": "Write a function that takes fuel (liters), fuelUsage (liters/100km), passengers, airConditioner (boolean) and returns maximum distance that car can travel.\n\nfuel is the number of liters of fuel in the fuel tank.\nfuelUsage is basic fuel consumption per 100 km (with the driver inside only).\nEvery additional passenger is increasing basic fuel consumption by 5%.\nI",
    "tags": [
      "algebra",
      "algorithms",
      "math",
      "numbers"
    ],
    "title": "Maximum Distance"
  },
  {
    "_id": "CKH5qJdtcFGNsdAfp",
    "difficulty": 1.5,
    "language": "java",
    "summary": "Create a function that takes a string and returns dashes on both sides of every vowel (a e i o u).\n\nExamples\ndashed(\"Edabit\") ➞ \"-E-d-a-b-i-t\"\n\ndashed(\"Carpe Diem\") ➞ \"C-a-rp-e- D-i--e-m\"\n\ndashed(\"Fight for your right to party!\") ➞ \"F-i-ght f-o-r y-o--u-r r-i-ght t-o- p-a-rty!\"\n\nNotes\nA string can contain uppercase and lowercase vowels.\nY is not considered a v",
    "tags": [
      "strings",
      "logic",
      "formatting",
      "regex"
    ],
    "title": "Dashed Vowels"
  },
  {
    "_id": "CYm9fzo63bQNbWfnN",
    "difficulty": 1.5,
    "language": "java",
    "summary": "Create a function that capitalizes the last letter of every word.\n\nExamples\ncapLast(\"hello\") ➞ \"hellO\"\n\ncapLast(\"My Name Is Edabit\") ➞ \"MY NamE IS EdabiT\"\n\ncapLast(\"HELp THe LASt LETTERs CAPITALISe\") ➞ \"HELP THE LAST LETTERS CAPITALISE\"\n\nNotes\nThere won't be any cases of punctuation in the tests.",
    "tags": [
      "strings",
      "formatting",
      "language_fundamentals"
    ],
    "title": "Capitalize the Last Letter"
  },
  {
    "_id": "DwMxxFrzZ5eZfBSGL",
    "difficulty": 1.5,
    "language": "java",
    "summary": "Write a function that, given the start startNum and end endNum values, return an array containing all the numbers inclusive to that range. See examples below.\n\nExamples\ninclusiveArray(1, 5) ➞ [1, 2, 3, 4, 5]\n\ninclusiveArray(2, 8) ➞ [2, 3, 4, 5, 6, 7, 8]\n\ninclusiveArray(10, 20) ➞ [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n\ninclusiveArray(17, 5) ➞ [17]\n\nNotes",
    "tags": [
      "arrays",
      "numbers",
      "math"
    ],
    "title": "Inclusive Array Ranges"
  },
  {
    "_id": "WrHfLyMXCMuGjxf2s",
    "difficulty": 1.5,
    "language": "java",
    "summary": "Create a function that takes two inputs: idx (an array of integers) and str (a string). The function should return another string with the letters of str at each index in idx in order.\n\nExamples\nindexFilter([7, -1, 5, 1], \"She is the love of my love\") ➞ \"tesh\"\n\nindexFilter([4, -7, -13, -11, -2, 0], \"Relax and stay calm to avoid failures\") ➞ \"xavier\"\n\nindexFilt",
    "tags": [
      "arrays",
      "strings"
    ],
    "title": "Index Filtering"
  },
  {
    "_id": "ZY7b6LA5BeWQJnJX5",
    "difficulty": 1.5,
    "language": "java",
    "summary": "A value is omnipresent if it exists in every subarray inside the main array.\n\nTo illustrate:\n\n[[3, 4], [8, 3, 2], [3], [9, 3], [5, 3], [4, 3]]\n// 3 exists in every element inside this array, so is omnipresent.\n\nCreate a function that determines whether an input value is omnipresent for a given array.\n\nExamples\nomnipresent([[1, 1], [1, 3], [5, 1], [6, 1]], 1) ➞",
    "tags": [
      "arrays",
      "validation",
      "loops",
      "algorithms"
    ],
    "title": "Omnipresent Value"
  },
  {
    "_id": "a5onNYqzuKiGjWMQu",
    "difficulty": 1.5,
    "language": "java",
    "summary": "Write a function that returns the smallest N-digit number which is a multiple of the specified value.\n\nExamples\nsmallest(3, 8) ➞ 104\n// Smallest 3-digit integer that is a multiple of 8\n\nsmallest(5, 12) ➞ 10008\n\nsmallest(7, 1) ➞ 1000000\n\nsmallest(2, 3) ➞ 12\n\nNotes\nN/A",
    "tags": [
      "numbers",
      "math"
    ],
    "title": "Smallest N Digit Number"
  },
  {
    "_id": "usRLjLkxmg8SeYius",
    "difficulty": 1.5,
    "language": "java",
    "summary": "Write a program that takes a temperature input in celsius and converts it to Fahrenheit and Kelvin. Return an array of the converted values.\n\nThe conversion formula:\n\nF = C*9/5 +32 // Celsius to Fahrenheit\n\nK = C + 273.15  // Celsius to Kelvin\n\nExamples\nconvertToTemps(0) ➞ [32.0, 273.15]\n// 0°C is equal to 32°F and 273.15 K.\n\nconvertToTemps(100) ➞ [212.0, 373.",
    "tags": [
      "numbers",
      "math"
    ],
    "title": "Temperature Conversion"
  },
  {
    "_id": "7cugwZK74ciMmFqHe",
    "difficulty": 1.5,
    "language": "java",
    "summary": "Create a function that takes a string and returns the sum of vowels, where some vowels are considered numbers.\n\nVowel | Number\n:--- | ---\nA | 4\nE | 3\nI | 1\nO | 0\n\nExamples\nsumOfVowels(\"My world evolves around Tesha's.\") ➞ 17\n\nsumOfVowels(\"Apparently, a heart that beats for no one, but for Tesh.\") ➞ 39\n\nsumOfVowels(\"I will be forever yours, babe.\") ➞ 18\n\nsumOfV",
    "tags": [
      "logic",
      "numbers",
      "math",
      "language_fundamentals"
    ],
    "title": "Sum 0f v0w3ls"
  },
  {
    "_id": "u7prkNxFxqartAfiG",
    "difficulty": 1.50253807106599,
    "language": "java",
    "summary": "Create a function that takes an array of numbers and returns the sum of the two lowest positive numbers.\n\nExamples\nsumTwoSmallestNums([19, 5, 42, 2, 77]) ➞ 7\n\nsumTwoSmallestNums([2, 9, 6, -1]) ➞ 8\n\nsumTwoSmallestNums([879, 953, 694, -847, 342, 221, -91, -723, 791, -587]) ➞ 563\n\nsumTwoSmallestNums([3683, 2902, 3951, -475, 1617, -2385]) ➞ 4519\n\nNotes\nDon't count",
    "tags": [
      "arrays",
      "math",
      "numbers"
    ],
    "title": "Return the Sum of the Two Smallest Numbers"
  },
  {
    "_id": "uYS6jZBk5sQ6qQyrK",
    "difficulty": 1.5034482758620689,
    "language": "java",
    "summary": "Write a function that takes a list of hours and returns the total weekly salary.\n\nThe input list hours is listed sequentially, ordered from Monday to Sunday.\nA worker earns $10 an hour for the first 8 hours.\nFor every overtime hour, he earns $15.\nOn weekends, the employer pays double the usual rate, regardless how many hours were worked previously that week. F",
    "tags": [
      "algebra",
      "arrays",
      "math",
      "numbers"
    ],
    "title": "Weekly Salary"
  },
  {
    "_id": "4DKpZPfSgyExdwirC",
    "difficulty": 1.5039370078740157,
    "language": "java",
    "summary": "Create a function that returns the value of x (the \"unknown\" in the equation). Each equation will be formatted like this:\n\nx + 6 = 12\n\nExamples\nsolveEquation(\"x + 43 = 50\") ➞ 7\n\nsolveEquation(\"x - 9 = 10\") ➞ 19\n\nsolveEquation(\"x + 300 = 100\") ➞ -200\n\nNotes\n\"x\" will always be in the same place (you will not find an equation like 6 + x = 12).\nEvery equation will",
    "tags": [
      "math",
      "algebra"
    ],
    "title": "Solve a Linear Equation"
  },
  {
    "_id": "LzY7r73f9xKhKvtki",
    "difficulty": 1.504201680672269,
    "language": "java",
    "summary": "Write a function that finds the longest word in a sentence. If two or more words are found, return the first longest word. Characters such as apostrophe, comma, period (and the like) count as part of the word (e.g. O'Connor is 8 characters long).\n\nExamples\nlongestWord(\"Margaret's toy is a pretty doll.\") ➞ \"Margaret's\"\n\nlongestWord(\"A thing of beauty is a joy f",
    "tags": [
      "arrays",
      "language_fundamentals",
      "strings"
    ],
    "title": "Longest Word"
  },
  {
    "_id": "tfD8Ct9niGcvS5usN",
    "difficulty": 1.5051546391752577,
    "language": "java",
    "summary": "Tesha was walking through a straight street with exactly n identical houses on both sides. House numbers in the street look like this:\n\n1 |   | 6\n\n3 |   | 4\n\n5 |   | 2\n\nShe noticed that even numbered houses increases on the right while odd numbered houses decreases on the left.\n\nCreate a function that takes a house number house and length of the street n and r",
    "tags": [
      "math",
      "numbers",
      "logic",
      "interview"
    ],
    "title": "Opposite House 🏘️"
  },
  {
    "_id": "YLwQGrA24g9TmiGXf",
    "difficulty": 1.5052631578947369,
    "language": "java",
    "summary": "Write a function that creates histograms. Every bar needs to be on a new line and its length corresponds to the numbers in the array passed as an argument. The  second argument represents the symbol to be used to represent the bar.\n\nExamples\nhistogram([1, 3, 4], \"#\") ➞ \"#\\n###\\n####\"\n\nhistogram([6, 2, 15, 3], \"=\") ➞ \"======\\n==\\n===============\\n===\"\n\nhistogra",
    "tags": [
      "data_structures",
      "logic",
      "strings"
    ],
    "title": "Histogram Function"
  },
  {
    "_id": "tvaT25krB65pYtghq",
    "difficulty": 1.5053763440860215,
    "language": "java",
    "summary": "Create a function that returns the average of an array composed of letters. First, find the number of the letter in the alphabet in order to find the average of the array.\n\nA = 1\nB = 2\nC = 3\nD = 4\nE = 5\n\naverage = total sum of all numbers / number of item in the set\n\nReturn the result rounded to two decimal points.\n\nExamples\naverageIndex([\"f\", \"o\", \"r\", \"t\", \"",
    "tags": [
      "arrays",
      "loops",
      "math"
    ],
    "title": "Find the Average of the Letters 📊"
  },
  {
    "_id": "w9mNwtPZX7qimRzJr",
    "difficulty": 1.507936507936508,
    "language": "java",
    "summary": "Write a DECIMATOR* function which takes a string and decimates* it (i.e. it removes the last 1/10 of the characters).\n\nAlways round up: if the string has 21 characters, 1/10 of the characters would be 2.1 characters, hence the DECIMATOR* removes 3 characters. The DECIMATOR* shows no mercy!\n\nExamples\ndecimator(\"1234567890\") ➞ \"123456789\"\n// 10 characters, remov",
    "tags": [
      "strings",
      "language_fundamentals"
    ],
    "title": "The DECIMATOR"
  },
  {
    "_id": "KESQCRf5mJd7x6Rfh",
    "difficulty": 1.5085714285714287,
    "language": "java",
    "summary": "Create a method that takes an array of strings or integers, removes all duplicate items and returns a new array in the same sequential order as the old array (minus duplicates).\n\nExamples\nremoveDups([1, 0, 1, 0]) ➞ [1, 0]\n\nremoveDups([\"The\", \"big\", \"cat\"]) ➞ [\"The\", \"big\", \"cat\"]\n\nremoveDups([\"John\", \"Taylor\", \"John\"]) ➞ [\"John\", \"Taylor\"]\n\nNotes\n\nTests contai",
    "tags": [
      "arrays",
      "strings",
      "interview",
      "language_fundamentals"
    ],
    "title": "Remove Duplicates from an Array"
  },
  {
    "_id": "qjY6B7fHSRZBSiG7o",
    "difficulty": 1.509433962264151,
    "language": "java",
    "summary": "Write a function that returns the least common multiple (LCM) of two integers.\n\nExamples\nlcm(9, 18) ➞ 18\n\nlcm(8, 5) ➞ 40\n\nlcm(17, 11) ➞ 187\n\nNotes\nBoth values will be positive.\nThe LCM is the smallest integer that divides both numbers such that the remainder is zero.",
    "tags": [
      "math",
      "numbers"
    ],
    "title": "LCM of Two Numbers"
  },
  {
    "_id": "EFFCkmQcYTFkt3FxC",
    "difficulty": 1.510204081632653,
    "language": "java",
    "summary": "Create a function that takes a word and extends all vowels by a number num.\n\nExamples\nextendVowels(\"Xavier\", 6) ➞ \"Xaaaaaaaviiiiiiieeeeeeer\"\n\nextendVowels(\"Loves\", 4) ➞ \"Loooooveeeees\"\n\nextendVowels(\"Tesha\", 5) ➞ \"Teeeeeeshaaaaaa\"\n\nNotes\nReturn \"invalid\" if num is not a positive integer or 0.",
    "tags": [
      "strings",
      "regex"
    ],
    "title": "Extend the Vowels"
  },
  {
    "_id": "bzgkfePPbHyAyTdN3",
    "difficulty": 1.5104166666666667,
    "language": "java",
    "summary": "Write a function that returns the minimum number of swaps to convert the first binary string into the second.\n\nExamples\nminSwaps(\"1100\", \"1001\") ➞ 1\n\nminSwaps(\"110011\", \"010111\") ➞ 1\n\nminSwaps(\"10011001\", \"01100110\") ➞ 4\n\nNotes\nBoth binary strings will be of equal length.\nBoth binary strings will have an equal number of zeroes and ones.\nA swap is switching two",
    "tags": [
      "strings",
      "logic",
      "recursion",
      "loops"
    ],
    "title": "Converting One Binary String to Another"
  },
  {
    "_id": "qPtcAMm4RhBmGG7XE",
    "difficulty": 1.5104166666666667,
    "language": "java",
    "summary": "A number is narcissistic when the sum of its digits, with each digit raised to the power of digits quantity, is equal to the number itself.\n\n153 ➞ 3 digits ➞ 1³ + 5³ + 3³ = 1 + 125 + 27 = 153 ➞ Narcissistic\n84 ➞ 2 digits ➞ 8² + 4² = 64 + 16 = 80 ➞ Not narcissistic\n\nGiven a positive integer n, implement a function that returns true if the number is narcissistic",
    "tags": [
      "numbers",
      "language_fundamentals",
      "validation"
    ],
    "title": "Narcissistic Numbers"
  },
  {
    "_id": "9Y83kppxQeMbvtDtF",
    "difficulty": 1.5113636363636365,
    "language": "java",
    "summary": "Create a method that alternates the case of the letters in a string (known as Spongecase).\n\nExamples\nalternatingCaps(\"Hello\") ➞ \"HeLlO\"\n\nalternatingCaps(\"How are you?\") ➞ \"HoW aRe YoU?\"\n\nalternatingCaps(\"OMG this website is awesome!\") ➞ \"OmG tHiS wEbSiTe Is AwEsOmE!\"\n\nNotes\nThe first letter should always be UPPERCASE.\nIgnore spaces.",
    "tags": [
      "conditions",
      "formatting",
      "strings"
    ],
    "title": "AlTeRnAtInG cApS"
  },
  {
    "_id": "CnCvL9vmjYtFG785t",
    "difficulty": 1.513157894736842,
    "language": "java",
    "summary": "Write a function that retrieves the last n elements from an array.\n\nExamples\nlast([1, 2, 3, 4, 5], 1) ➞ [5]\n\nlast([4, 3, 9, 9, 7, 6], 3) ➞ [9, 7, 6]\n\nlast([1, 2, 3, 4, 5], 7) ➞ null\n\nlast([1, 2, 3, 4, 5], 0) ➞ []\n\nNotes\nReturn null if n exceeds the length of the array.\nReturn an empty array if n == 0.",
    "tags": [
      "arrays",
      "language_fundamentals"
    ],
    "title": "Retrieve the Last N Elements"
  },
  {
    "_id": "sF6Lm5LQsy6u2ZKeZ",
    "difficulty": 1.5132743362831858,
    "language": "java",
    "summary": "Create a function that converts dash/underscore delimited words into camel casing. The first word within the output should be capitalized only if the original word was capitalized.\n\nExamples\ntoCamelCase(\"A-B-C\") ➞ \"ABC\"\n\ntoCamelCase(\"the-stealth-warrior\") ➞ \"theStealthWarrior\"\n\ntoCamelCase(\"TheStealthWarrior\") ➞ \"TheStealthWarrior\"\n\nNotes\nAn empty string as in",
    "tags": [
      "strings",
      "formatting",
      "regex"
    ],
    "title": "Convert String to camelCase"
  },
  {
    "_id": "zmbR8SKveCgJ6KB5G",
    "difficulty": 1.5141242937853108,
    "language": "java",
    "summary": "Create a function that returns the amount of duplicate characters in a string. It will be case sensitive and spaces are included. If there are no duplicates, return 0.\n\nExamples\nduplicates(\"Hello World!\") ➞ 3\n// \"o\" = 2, \"l\" = 3.\n// \"o\" is duplicated 1 extra time and \"l\" is duplicated 2 extra times.\n// Hence 1 + 2 = 3\n\nduplicates(\"foobar\") ➞ 1\n\nduplicates(\"hel",
    "tags": [
      "arrays",
      "strings",
      "loops"
    ],
    "title": "Count the Number of Duplicate Characters"
  },
  {
    "_id": "g3zwGCJN5Ti8TSSbh",
    "difficulty": 1.5151515151515151,
    "language": "java",
    "summary": "Create a method that returns true if the given circles are intersecting, otherwise return false. The circles are given as two arrays containing the values in the following order:\n\nRadius of the circle.\nCenter position on the x-axis.\nCenter position on the y-axis.\n\nExamples\nisCircleCollision([10, 0, 0], [10, 10, 10]) ➞ true\n\nisCircleCollision([1, 0, 0], [1, 10,",
    "tags": [
      "games",
      "algebra",
      "algorithms",
      "math"
    ],
    "title": "Simple Circle Collision Detection"
  },
  {
    "_id": "hEbyZPTpxt4AtmmhP",
    "difficulty": 1.5151515151515151,
    "language": "java",
    "summary": "A number sequence is as follows:\n\n5, 100, 6, 200, 7, 400, 8, 800, 9, 1600, 10, 3200, ...\n\nGiven that 5 is at position 1, create a function that returns the number found at position n in the sequence.\n\nExamples\nlittleBig(4) ➞ 200\n\nlittleBig(5) ➞ 7\n\nlittleBig(28) ➞ 819200\n\nNotes\nYou can expect to be only given valid inputs.",
    "tags": [
      "math",
      "numbers",
      "loops"
    ],
    "title": "Little Big Sequence"
  },
  {
    "_id": "KMggZFnrWJGxk2tvn",
    "difficulty": 1.5164835164835164,
    "language": "java",
    "summary": "Parity bits are used as very simple checksum to ensure that binary data isn't corrupted during transit. Here's how they work:\n\nIf a binary string has an odd number of 1's, the parity bit is a 1.\nIf a binary string has an even number of 1's, the parity bit is a 0.\nThe parity bit is appended to the end of the binary string.\n\nCreate a function that validates whet",
    "tags": [
      "validation",
      "numbers",
      "strings"
    ],
    "title": "Parity Bit Validation"
  },
  {
    "_id": "vYQogxrcQBEMr7y3F",
    "difficulty": 1.5172413793103448,
    "language": "java",
    "summary": "Given an integer, create a function that returns the next prime. If the number is prime, return the number itself.\n\nExamples\nnextPrime(12) ➞ 13\n\nnextPrime(24) ➞ 29\n\nnextPrime(11) ➞ 11\n// 11 is a prime, so we return the number itself.\n\nNotes\nN/A",
    "tags": [
      "math",
      "numbers",
      "loops"
    ],
    "title": "Next Prime"
  },
  {
    "_id": "2rJAhXLRaRB3gjwaC",
    "difficulty": 1.5185185185185186,
    "language": "java",
    "summary": "Create a function that replaces \"the\" in the sentence with \"an\" or \"a\". Remember that if the next word begins with a vowel, use \"an\". In the case of a consonant, use \"a\".\n\nExamples\nreplaceThe(\"the dog and the envelope\") ➞ \"a dog and an envelope\"\n\nreplaceThe(\"the boy ran at the wall\") ➞ \"a boy ran at a wall\"\n\nreplaceThe(\"the egg, the spoon and the espionage\") ➞",
    "tags": [
      "strings",
      "formatting",
      "regex"
    ],
    "title": "Substituting the The"
  },
  {
    "_id": "99k6HcWYvvbZirkDW",
    "difficulty": 1.5214285714285714,
    "language": "java",
    "summary": "Write a function that recursively determines if a string is a palindrome.\n\nExamples\nisPalindrome(\"abcba\") ➞ true\n\nisPalindrome(\"b\") ➞ true\n\nisPalindrome(\"\") ➞ true\n\nisPalindrome(\"ad\") ➞ false\n\nNotes\nAn empty string counts as a palindrome.",
    "tags": [
      "recursion",
      "strings",
      "validation"
    ],
    "title": "Recursion: String Palindromes"
  },
  {
    "_id": "aG8byPZcEj9yLKxA3",
    "difficulty": 1.5229885057471264,
    "language": "java",
    "summary": "Write a method that takes a string of one or more words as an argument and returns the same string, but with all five or more letter words reversed. Strings passed in will consist of only letters and spaces. Spaces will be included only when more than one word is present.\n\nExamples\nreverse(\"Reverse\") ➞ \"esreveR\"\n\nreverse(\"This is a typical sentence.\") ➞ \"This",
    "tags": [
      "formatting",
      "sorting",
      "strings",
      "regex",
      "loops"
    ],
    "title": "Reverse the Order of Words with Five Letters or More"
  },
  {
    "_id": "FtoNXq7DTCAiZ3z9T",
    "difficulty": 1.5233644859813085,
    "language": "java",
    "summary": "Carlos is a huge fan of something he calls smooth sentences.\n\nA smooth sentence is one where the last letter of each word is identical to the first letter the following word (and not case sensitive, so \"A\" would be the same as \"a\").\n\nThe following would be a smooth sentence \"Carlos swam masterfully\" because \"Carlos\" ends with an \"s\" and swam begins with an \"s\"",
    "tags": [
      "strings",
      "validation"
    ],
    "title": "Smooth Sentences"
  },
  {
    "_id": "Djo98NonxGxvDgPde",
    "difficulty": 1.524390243902439,
    "language": "java",
    "summary": "Create a function that takes a string and replaces each letter with its appropriate position in the alphabet. \"a\" is 1, \"b\" is 2, \"c\" is 3, etc, etc.\n\nExamples\nalphabetIndex(\"Wow, does that work?\")\n➞ \"23 15 23 4 15 5 19 20 8 1 20 23 15 18 11\"\n\nalphabetIndex(\"The river stole the gods.\")\n➞ \"20 8 5 18 9 22 5 18 19 20 15 12 5 20 8 5 7 15 4 19\"\n\nalphabetIndex(\"We h",
    "tags": [
      "strings",
      "formatting"
    ],
    "title": "Replace Letters With Position In Alphabet"
  },
  {
    "_id": "qY9s6qK4WpbPBxQES",
    "difficulty": 1.524390243902439,
    "language": "java",
    "summary": "Given a positive number x, if all the positive divisors of x (excluding x) add up to x, then x is said to be a perfect number.\n\nFor example, the set of positive divisors of 6 excluding 6 itself is (1, 2, 3). The sum of this set is 6. Therefore, 6 is a perfect number.\n\nGiven a positive number x, if all the positive divisors of x add up to a second number y, and",
    "tags": [
      "conditions",
      "math",
      "numbers"
    ],
    "title": "Perfect or Amicable?"
  },
  {
    "_id": "Sj3pLPPLpnF8DNGQD",
    "difficulty": 1.5245901639344261,
    "language": "java",
    "summary": "Create a function that sums the total number of digits between two numbers, inclusive. For example, between the numbers 19 and 22 we have:\n\n// 19, 20, 21, 22\n(1 + 9) + (2 + 0) + (2 + 1) + (2 + 2) = 19\n\nExamples\nsumDigits(7, 8) ➞ 15\n\nsumDigits(17, 20) ➞ 29\n\nsumDigits(10, 12) ➞ 6\n\nNotes\nN/A",
    "tags": [
      "numbers",
      "loops"
    ],
    "title": "Sum of Digits Between Two Numbers"
  },
  {
    "_id": "jt6TWkTcYdWcRXbds",
    "difficulty": 1.5271317829457365,
    "language": "java",
    "summary": "Someone has attempted to censor my strings by replacing every vowel with a `, lk* th*s`. Luckily, I've been able to find the vowels that were removed.\n\nGiven a censored string and a string of the censored vowels, return the original uncensored string.\n\nExample\nuncensor(\"Whr dd my vwls g?\", \"eeioeo\") ➞ \"Where did my vowels go?\"\n\nuncensor(\"abcd\", \"\") ➞ \"abcd\"\n\nu",
    "tags": [
      "strings",
      "formatting",
      "algorithms"
    ],
    "title": "C*ns*r*d Str*ngs"
  },
  {
    "_id": "T3zjJiXoNRqXqEx9u",
    "difficulty": 1.528301886792453,
    "language": "java",
    "summary": "The Code tab has a code which attempts to add a clone of an array to itself. There is no error message, but the results are not as expected. Can you fix the code?\n\nExamples\nclone([5, 44]) ➞ [5, 44, [5, 44]]\n\nclone([4, 666]) ➞ [4, 666, [4, 666]]\n\nclone([1, 1]) ➞ [1, 1, [1, 1]]\n\nclone([1, 2, 3]) ➞ [1, 2, 3, [1, 2, 3]]\n\nclone([\"x\", \"y\"]) ➞ [\"x\", \"y\", [\"x\", \"y\"]]",
    "tags": [
      "bugs",
      "arrays"
    ],
    "title": "Clone An Array"
  },
  {
    "_id": "FTWQaZdMqYph5umsu",
    "difficulty": 1.53,
    "language": "java",
    "summary": "Create a function that takes an input (e.g. \"5 + 4\") and returns true if it's a mathematical expression or false if not.\n\nExamples\nmathExpr(\"4 + 5\") ➞ true\n\nmathExpr(\"4*6\") ➞ true\n\nmathExpr(\"4*no\") ➞ false\n\nNotes\nShould only work with the following operations: +, -, *, /, %\nYou don't need to test for floats.\nint1 and int2 will only be from 0-9.",
    "tags": [
      "regex",
      "validation",
      "strings"
    ],
    "title": "Check if a String is a Mathematical Expression"
  },
  {
    "_id": "954ZMB8AKKJBEnvDu",
    "difficulty": 1.5303030303030303,
    "language": "java",
    "summary": "Create a function that returns a capitalized version of the string passed. The first letter of each word in the string should be capitalized while the rest should be in lowercase.\n\nExamples\nemphasize(\"hello world!\") ➞ \"Hello World!\"\n\nemphasize(\"GOOD MORNING!\") ➞ \"Good Morning!\"\n\nemphasize(\"I AM, BUT aLL yOuRs, TESH!\")  ➞ \"I Am, But All Yours, Tesh!\"\n\nemphasize",
    "tags": [
      "strings",
      "loops",
      "regex"
    ],
    "title": "Emphasize The Words"
  },
  {
    "_id": "p5PsoKc2z8QaYNjNG",
    "difficulty": 1.5324675324675325,
    "language": "java",
    "summary": "A floor plan is arranged as follows:\nFour rooms, which all lead into the hallway.\nIt's impossible to move between rooms without first going into the hallway.\n\nRoom\n\nCreate a function which validates whether the path between rooms is possible. The hallway will be given as the letter \"H\".\n\nExamples\npossiblePath([1, \"H\", 2, \"H\", 3, \"H\", 4]) ➞ true\n\npossiblePath([",
    "tags": [
      "loops",
      "algorithms",
      "validation"
    ],
    "title": "Hall Monitor"
  },
  {
    "_id": "JPDNpqri6djiC8ptP",
    "difficulty": 1.5333333333333334,
    "language": "java",
    "summary": "Given an array of women and an array of men, either:\nReturn null if the two arrays are of different sizes.\nIf the sizes match, return an array of pairs, with the first woman paired with the first man, second woman paired with the second man, etc.\n\nExamples\nzipIt([[\"Tesha\", \"Tesh\", \"Shang\"], [\"Deep\", \"Xavier\", \"Dex\"]])\n ➞ [[\"Tesha\", \"Deep\"],[\"Tesh\", \"Xavier\"],[",
    "tags": [
      "arrays",
      "formatting",
      "sorting"
    ],
    "title": "Zip It, If You Can?"
  },
  {
    "_id": "NYq5PTgKa6C97qdLw",
    "difficulty": 1.5357142857142858,
    "language": "java",
    "summary": "Create a function that returns the sum of missing numbers.\n\nExamples\nsumMissing([1, 3, 5, 7, 10]) ➞ 29\n// 2 + 4 + 6 + 8 + 9\n\nsumMissing([10, 7, 5, 3, 1]) ➞ 29\n\nsumMissing([10, 20, 30, 40, 50, 60]) ➞ 1575\n\nNotes\nThe minimum and maximum value of the given array are the inclusive bounds of the numeric range to consider when searching for missing numbers.",
    "tags": [
      "math",
      "numbers",
      "sorting"
    ],
    "title": "Sum of Missing Numbers"
  },
  {
    "_id": "KGhmvXpF6iK8mAqgj",
    "difficulty": 1.5384615384615385,
    "language": "java",
    "summary": "Create a function that takes an array of strings and returns an array with only the strings that have numbers in them. If there are no strings containing numbers, return an empty array.\n\nExamples\nnumInStr([\"1a\", \"a\", \"2b\", \"b\"]) ➞ [\"1a\", \"2b\"]\n\nnumInStr([\"abc\", \"abc10\"]) ➞ [\"abc10\"]\n\nnumInStr([\"abc\", \"ab10c\", \"a10bc\", \"bcd\"]) ➞ [\"ab10c\", \"a10bc\"]\n\nnumInStr([\"t",
    "tags": [
      "arrays",
      "numbers",
      "strings",
      "loops",
      "regex"
    ],
    "title": "Numbers in Strings"
  },
  {
    "_id": "yPQ26h7KYpqsftRPY",
    "difficulty": 1.5393258426966292,
    "language": "java",
    "summary": "Write a function that takes an integer n, reverses the binary representation of that integer, and returns the new integer from the reversed binary.\n\nExamples\nreversedBinaryInteger(10) ➞ 5\n// 10 = 1010 -> 0101 = 5\n\nreversedBinaryInteger(12) ➞ 3\n// 12 = 1100 -> 0011 = 3\n\nreversedBinaryInteger(25) ➞ 19\n// 25 = 11001 -> 10011 = 19\n\nreversedBinaryInteger(45) ➞ 45\n/",
    "tags": [
      "bit_operations",
      "language_fundamentals"
    ],
    "title": "Reversing a Binary String"
  },
  {
    "_id": "jXvNMQRZPwKmex4nG",
    "difficulty": 1.54,
    "language": "java",
    "summary": "Given a string containing unique letters, return a sorted string with the letters that don't appear in the string.\n\nExamples\ngetMissing(\"abcdefgpqrstuvwxyz\") ➞ \"hijklmno\"\n\ngetMissing(\"zyxwvutsrq\") ➞ \"abcdefghijklmnop\"\n\ngetMissing(\"abc\") ➞ \"defghijklmnopqrstuvwxyz\"\n\ngetMissing(\"abcdefghijklmnopqrstuvwxyz\") ➞ \"\"\n\nNotes\nThe combination of both strings should be 2",
    "tags": [
      "strings",
      "loops"
    ],
    "title": "Missing Letters"
  },
  {
    "_id": "SmL32HnRnmsCqGC5g",
    "difficulty": 1.546875,
    "language": "java",
    "summary": "Make a function that encrypts a given input with these steps:\n\nInput: \"apple\"\n\nStep 1: Reverse the input: \"elppa\"\n\nStep 2: Replace all vowels using the following chart:\n\na => 0\ne => 1\ni => 2\no => 2\nu => 3\n\n// \"1lpp0\"\n\nStep 3: Add \"aca\" to the end of the word: \"1lpp0aca\"\n\nOutput: \"1lpp0aca\"\n\nExamples\nencrypt(\"banana\") ➞ \"0n0n0baca\"\n\nencrypt(\"karaca\") ➞ \"0c0r0ka",
    "tags": [
      "algorithms",
      "formatting",
      "cryptography",
      "regex"
    ],
    "title": "The Karaca's Encryption Algorithm"
  },
  {
    "_id": "sRC7wLW7g6gw24Muq",
    "difficulty": 1.5490196078431373,
    "language": "java",
    "summary": "Given a string of letters in the English alphabet, return the letter that's missing from the string. The missing letter will make the string be in alphabetical order (from A to Z).\n\nIf there are no missing letters in the string, return \"No Missing Letter\".\n\nExamples\nmissingLetter(\"abdefg\") ➞ \"c\"\n\nmissingLetter(\"mnopqs\") ➞ \"r\"\n\nmissingLetter(\"tuvxyz\") ➞ \"w\"\n\nmi",
    "tags": [
      "loops",
      "strings",
      "validation"
    ],
    "title": "What's the Missing Letter?"
  },
  {
    "_id": "Stu2gesXeETdxxGBY",
    "difficulty": 1.55,
    "language": "java",
    "summary": "Write a function that returns the longest sequence of consecutive zeroes in a binary string.\n\nExamples\nlongestZero(\"01100001011000\") ➞ \"0000\"\n\nlongestZero(\"100100100\") ➞ \"00\"\n\nlongestZero(\"11111\") ➞ \"\"\n\nNotes\nIf no zeroes exist in the input, return an empty string.",
    "tags": [
      "strings",
      "loops",
      "language_fundamentals"
    ],
    "title": "Longest Sequence of Consecutive Zeroes"
  },
  {
    "_id": "o9nESkofDnfXJ5m7a",
    "difficulty": 1.553191489361702,
    "language": "java",
    "summary": "Wurst is the best. Create a method that takes a string and replaces every mention of any type of sausage with the German word \"Wurst,\" unless—of course—the sausage is already a type of German \"Wurst\" (i.e. \"Bratwurst\", see below), then leave the sausage name unchanged.\n\nGerman Wursts   | Convert to Wurst\n--- | ---\nBratwurst | Kielbasa\nKochwurst | Chorizo\nLeber",
    "tags": [
      "regex",
      "strings"
    ],
    "title": "Wurst Is Better"
  },
  {
    "_id": "yLjnDk7bJ3GYeSX9f",
    "difficulty": 1.5538461538461539,
    "language": "java",
    "summary": "Create a function that outputs the result of a math expression in words.\n\nExamples\nwordedMath(\"One plus one\") ➞ \"Two\"\n\nwordedMath(\"zero Plus one\") ➞ \"One\"\n\nwordedMath(\"one minus one\") ➞ \"Zero\"\n\nNotes\nExpect only the operations plus and minus.\nExpect to only get numbers and answers from 0 to 2.\nThe first letter of the answer must be capitalised.",
    "tags": [
      "strings",
      "math"
    ],
    "title": "One Plus One"
  },
  {
    "_id": "yeewrR3MB9PZprwPT",
    "difficulty": 1.5568181818181819,
    "language": "java",
    "summary": "Create a function that takes two strings and returns either true or false depending on whether they're anagrams or not.\n\nExamples\nisAnagram(\"cristian\", \"Cristina\") ➞ true\n\nisAnagram(\"Dave Barry\", \"Ray Adverb\") ➞ true\n\nisAnagram(\"Nope\", \"Note\") ➞ false\n\nNotes\nShould be case insensitive.\nThe two given strings can be of different lengths.",
    "tags": [
      "strings",
      "math",
      "validation",
      "interview"
    ],
    "title": "Check for Anagrams"
  },
  {
    "_id": "6THnWXvQrhRrEErtb",
    "difficulty": 1.5588235294117647,
    "language": "java",
    "summary": "Given what is supposed to be typed and what is actually typed, write a function that returns the broken key(s). The function looks like:\n\nfindBrokenKeys(correct phrase, what you actually typed)\n\nExamples\nfindBrokenKeys(\"happy birthday\", \"hawwy birthday\") ➞ [\"p\"]\n\nfindBrokenKeys(\"starry night\", \"starrq light\") ➞ [\"y\", \"n\"]\n\nfindBrokenKeys(\"beethoven\", \"affthoif",
    "tags": [
      "strings",
      "arrays"
    ],
    "title": "Broken Keyboard"
  },
  {
    "_id": "crZ8ADEeMticeNjBo",
    "difficulty": 1.5593220338983051,
    "language": "java",
    "summary": "This is a reverse coding challenge.\n\nYour task is to create a function that, when fed the inputs below, produce the sample outputs shown.\n\nExamples\n3 ➞ 21\n\n9 ➞ 2221\n\n17 ➞ 22221\n\n24 ➞ 22228\n\nNotes\nIf you get stuck, check the Comments for help.",
    "tags": [
      "math",
      "numbers"
    ],
    "title": "Reverse Coding Challenge #2"
  },
  {
    "_id": "uiNKhxnvuaJ7ikoKX",
    "difficulty": 1.56,
    "language": "java",
    "summary": "Write a function that returns all the elements in an array that are strictly greater than their adjacent left and right neighbors.\n\nExamples\nminiPeaks([4, 5, 2, 1, 4, 9, 7, 2]) ➞ [5, 9]\n// 5 has neighbours 4 and 2, both are less than 5.\n\nminiPeaks([1, 2, 1, 1, 3, 2, 5, 4, 4]) ➞ [2, 3, 5]\n\nminiPeaks([1, 2, 3, 4, 5, 6]) ➞ []\n\nNotes\nDo not count boundary numbers,",
    "tags": [
      "arrays",
      "loops"
    ],
    "title": "Mini Peaks"
  },
  {
    "_id": "xix4GjLCpXmetXGca",
    "difficulty": 1.5625,
    "language": "java",
    "summary": "Create a function that takes a string and censors words over four characters with *.\n\nExamples\ncensor(\"The code is fourty\") ➞ \"The code is **\"\n\ncensor(\"Two plus three is five\") ➞ \"Two plus * is five\"\n\ncensor(\"aaaa aaaaa 1234 12345\") ➞ \"aaaa * 1234 *\"\n\nNotes\nDon't censor words with exactly four characters.\nIf all words have four characters or less, return the o",
    "tags": [
      "strings",
      "conditions"
    ],
    "title": "Censor Words Longer Than Four Characters"
  },
  {
    "_id": "9xSy9uu6MaEKS4kPC",
    "difficulty": 1.5673758865248226,
    "language": "java",
    "summary": "There are three towers. The objective of the game is to move all the disks over to tower #3, but you can't place a larger disk onto a smaller disk. To play the game or learn more about the Tower of Hanoi, check the Resources tab.\n\nTower of Hanoi\n\nCreate a function that takes a number discs as an argument and returns the minimum amount of steps needed to comple",
    "tags": [
      "algorithms",
      "math",
      "numbers",
      "games",
      "interview"
    ],
    "title": "Tower of Hanoi"
  },
  {
    "_id": "WzE2id9w5mNfXozKL",
    "difficulty": 1.5701754385964912,
    "language": "java",
    "summary": "A boomerang is a V-shaped sequence that is either upright or upside down. Specifically, a boomerang can be defined as: sub-array of length 3, with the first and last digits being the same and the middle digit being different.\n\nSome boomerang examples:\n\n[3, 7, 3], [1, -1, 1], [5, 6, 5]\n\nCreate a function that returns the total number of  boomerangs in an array.",
    "tags": [
      "arrays",
      "loops"
    ],
    "title": "Number of Boomerangs"
  },
  {
    "_id": "9To632EycoudpkgHM",
    "difficulty": 1.5714285714285714,
    "language": "java",
    "summary": "Create a function that takes an integer and returns it as an ordinal number. An Ordinal Number is a number that tells the position of something in a list, such as 1st, 2nd, 3rd, 4th, 5th, etc.\n\nExamples\nreturnTheEndOfNumber(553) ➞ \"553-RD\"\n\nreturnTheEndOfNumber(34) ➞ \"34-TH\"\n\nreturnTheEndOfNumber(1231) ➞ \"1231-ST\"\n\nreturnTheEndOfNumber(22) ➞ \"22-ND\"\n\nreturnEnd",
    "tags": [
      "control_flow",
      "strings",
      "numbers"
    ],
    "title": "Return the End Letters of Numbers"
  },
  {
    "_id": "pkMPzrmsNN9RRnMqx",
    "difficulty": 1.5714285714285714,
    "language": "java",
    "summary": "There are three cups on a table, at positions A, B, and C. At the start, there is a ball hidden under the cup at position B.\n\nImage of cups where ball is under middle cup\n\nHowever, I perform several swaps on the cups, which is notated as two letters. For example, if I swap the cups at positions A and B, I could notate this as AB or BA.\n\nCreate a function that",
    "tags": [
      "algorithms",
      "logic",
      "interview"
    ],
    "title": "Cup Swapping"
  },
  {
    "_id": "ZiuuBqBWYBRtPaKKR",
    "difficulty": 1.5777777777777777,
    "language": "java",
    "summary": "Given two strings, repeatedly cycle through all of the letters in the first string until it is the same length as the second string.\n\nExamples\nstringCycling(\"abc\", \"hello\") ➞ \"abcab\"\n\nstringCycling(\"programming\", \"edabit\") ➞ \"progra\"\n\nstringCycling(\"the world in me evolves in hers\", \"i love Tesh, so much so\") ➞ \"the world in me evolves\"\n\nstringCycling(\"a thing",
    "tags": [
      "loops",
      "strings"
    ],
    "title": "Cycling Through Strings"
  },
  {
    "_id": "LzW7RxkLFFWphQWiK",
    "difficulty": 1.5820895522388059,
    "language": "java",
    "summary": "Create a function that takes in n,  a, b and returns the number of positive values raised to the nth power that lie in the range [a, b], inclusive.\n\nExamples\npowerRanger(2, 49, 65) ➞ 2\n// 2 squares (n^2) lie between 48 and 65, 49 (7^2) and 64 (8^2)\n\npowerRanger(3, 1, 27) ➞ 3\n// 3 cubes (n^3) lie between 1 and 27, 1 (1^3), 8 (2^3) and 27 (3^3)\n\npowerRanger(10,",
    "tags": [
      "math",
      "numbers"
    ],
    "title": "Power Ranger"
  },
  {
    "_id": "SNPLajmqXym6nFPQm",
    "difficulty": 1.5833333333333333,
    "language": "java",
    "summary": "Create a function that subtracts one positive integer from another, without using -.\n\nExamples\nmySub(5, 9) ➞ 4\n\nmySub(10, 30) ➞ 20\n\nmySub(0, 0) ➞ 0\n\nNotes\nDo not multiply by -1.\nUse bitwise operations.",
    "tags": [
      "numbers",
      "math",
      "bit_operations"
    ],
    "title": "Subtract Without Subtract"
  },
  {
    "_id": "mTKJRxrWNr9qrBxxG",
    "difficulty": 1.5833333333333333,
    "language": "java",
    "summary": "Given a string, return if a given letter always appears immediately before another given letter.\n\nExamples\nbestFriend(\"tesha has a pretty and a happy face\", \"h\", \"a\") ➞ true\n// all occurences of \"h\": [\"tesha\", \"has\", \"happy\"]\n// all occurences of \"h\" have an \"a\" after it.\n// return true\n\nbestFriend(\"i found an ounce with my hound\", \"o\", \"u\") ➞ true\n\nbestFriend",
    "tags": [
      "strings",
      "loops",
      "regex"
    ],
    "title": "A Letter's Best Friend"
  },
  {
    "_id": "iLwdf4yJjrSv9Pg25",
    "difficulty": 1.5894736842105264,
    "language": "java",
    "summary": "A Harshad number is a number which is divisible by the sum of its digits. For example, 132 is divisible by 6 (1+3+2).\n\nA subset of the Harshad numbers are the Moran numbers. Moran numbers yield a prime when divided by the sum of their digits. For example, 133 divided by 7 (1+3+3) yields 19, a prime.\n\nCreate a function that takes a number and returns \"M\" if the",
    "tags": [
      "algebra",
      "math",
      "numbers",
      "validation"
    ],
    "title": "Moran Numbers"
  },
  {
    "_id": "M7GmLubPNJEfQj78E",
    "difficulty": 1.5952380952380953,
    "language": "java",
    "summary": "Write a function that takes an array of strings and a pattern (string) and returns the strings that contain the pattern in alphabetical order. If the pattern is an empty string, return all the strings passed in the input array.\n\nExamples\ncmsSelector([\"WordPress\", \"Joomla\", \"Drupal\"], \"w\") ➞ [\"WordPress\"]\n\ncmsSelector([\"WordPress\", \"Joomla\", \"Drupal\", \"Magento\"",
    "tags": [
      "arrays",
      "strings",
      "formatting"
    ],
    "title": "CMS Selector Based on a Given String"
  },
  {
    "_id": "jRzY8tThBn7zp3jvy",
    "difficulty": 1.5952380952380953,
    "language": "java",
    "summary": "The Recamán Sequence is a numeric sequence that starts always with 0. The position of a positive integer in the sequence, or Recamán Index, can be established with the following algorithm:\n\nFor every number to find, two variables are considered: the value of the last element of the sequence (last element from now on), and the actual sequence length (length fro",
    "tags": [
      "algorithms",
      "loops",
      "numbers"
    ],
    "title": "The Recamán Sequence"
  },
  {
    "_id": "wp3vZEmhEgCY42WAZ",
    "difficulty": 1.6024096385542168,
    "language": "java",
    "summary": "Create a function that takes a variable number of arguments, each argument representing the number of items in a group. The function should return the number of permutations (combinations) of choices you would have if you selected one item from each group.\n\nExamples\ncombinations(2, 3) ➞ 6\n\ncombinations(3, 7, 4) ➞ 84\n\ncombinations(2, 3, 4, 5) ➞ 120\n\nNotes\nDon't",
    "tags": [
      "numbers",
      "algorithms"
    ],
    "title": "Combinations"
  },
  {
    "_id": "XgFuNXpXAENpZiDaw",
    "difficulty": 1.6115702479338843,
    "language": "java",
    "summary": "This is a reverse coding challenge. Normally you're given explicit directions with how to create a function. Here, you must generate your own function to satisfy the relationship between the inputs and outputs.\n\nYour task is to create a function that, when fed the inputs below, produces the sample outputs shown.\n\nExamples\nmysteryFunc(152) ➞ 10\n\nmysteryFunc(832",
    "tags": [
      "numbers",
      "loops",
      "algorithms"
    ],
    "title": "Reverse Coding Challenge #6"
  },
  {
    "_id": "JnGKayBeHJFDQ2oiu",
    "difficulty": 1.6119402985074627,
    "language": "java",
    "summary": "A block sequence in three dimensions. We can write a formula for this one:\n\nSequence Step 1 - 5\n\nCreate a function that takes a number (step) as an argument and returns the amount of blocks in that step.\n\nExamples\nblocks(1) ➞ 5\n\nblocks(5) ➞ 39\n\nblocks(2) ➞ 12\n\nNotes\nStep 0 obviously has to return 0.\nThe input is always a positive integer.\nCheck the Resources t",
    "tags": [
      "math",
      "numbers",
      "algorithms"
    ],
    "title": "3D Visual Block Sequence"
  },
  {
    "_id": "EatQ3W5eg39FmvGAf",
    "difficulty": 1.6136363636363635,
    "language": "java",
    "summary": "The 2nd of February 2020 is a palindromic date in both dd/mm/yyyy and mm/dd/yyyy format (02/02/2020). Given a date in dd/mm/yyyy format, return true if the date is palindromic in both date formats, otherwise return false.\n\nExamples\npalindromicDate(\"02/02/2020\") ➞ true\n\npalindromicDate(\"11/12/2019\") ➞ false\n\npalindromicDate(\"11/02/2011\") ➞ false\n// Although 11/",
    "tags": [
      "dates",
      "strings",
      "validation"
    ],
    "title": "Palindromic Dates"
  },
  {
    "_id": "n2haqkZN529Rr67vg",
    "difficulty": 1.6136363636363635,
    "language": "java",
    "summary": "Write a function to replace all instances of character c1 with character c2 and vice versa.\n\nExamples\ndoubleSwap( \"aabbccc\", 'a', 'b') ➞ \"bbaaccc\"\n\ndoubleSwap(\"random w#rds writt&n h&r&\", '#', '&')\n➞ \"random w&rds writt#n h#r#\"\n\ndoubleSwap(\"128 895 556 788 999\", '8', '9')\n➞ \"129 985 556 799 888\"\n\nNotes\nBoth characters will show up at least once in the string.",
    "tags": [
      "strings",
      "regex"
    ],
    "title": "Double Character Swap"
  },
  {
    "_id": "JfertgG5phtnvDNpD",
    "difficulty": 1.6163522012578617,
    "language": "java",
    "summary": "Create a function that takes any non-negative number as an argument and return it with it's digits in descending order. Descending order is when you sort from highest to lowest.\n\nExamples\nsortDesc(123) ➞ 321\n\nsortDesc(1254859723) ➞ 9875543221\n\nsortDesc(73065) ➞ 76530\n\nNotes\nYou can expect non-negative numbers for all test cases.",
    "tags": [
      "formatting",
      "sorting",
      "numbers"
    ],
    "title": "Sort Numbers in Descending Order"
  },
  {
    "_id": "XuhT6hazGTL9c4bwE",
    "difficulty": 1.619047619047619,
    "language": "java",
    "summary": "Write a function that takes coordinates of two points on a two-dimensional plane and returns the length of the line segment connecting those two points.\n\nExamples\nlineLength(arr[0]={15, 7}, arr[1]={22, 11}) ➞ 8.06\n\nlineLength(arr[0]={0, 0}, arr[1]={0, 0}) ➞ 0\n\nlineLength(arr[0]={0, 0}, arr[1]={1, 1}) ➞ 1.41\n\nNotes\nThe numbers in the argument array can be posit",
    "tags": [
      "arrays",
      "geometry",
      "math",
      "numbers"
    ],
    "title": "Geometry 1: Length of Line Segment"
  },
  {
    "_id": "mjzKvjg92ZGLuNPJ9",
    "difficulty": 1.619047619047619,
    "language": "java",
    "summary": "Write a function that accepts the width and height (m, n) and an optional proc s and generates an array with m elements. Each element is a string consisting of either:\n\nThe default character (hash #) repeating n times (if null is given).\nThe character passed in through the proc repeating n times.\n\nExamples\nmakeRug(2, 1, \"tct\") ➞ [\n  \"tct\",\n  \"tct\"\n]\n\nmakeRug(3",
    "tags": [
      "language_fundamentals",
      "arrays",
      "loops"
    ],
    "title": "Designing Rugs"
  },
  {
    "_id": "6ZPqDxQfGkX9rmPGg",
    "difficulty": 1.6216216216216217,
    "language": "java",
    "summary": "You will be given two extremely similar arrays, but exactly one of the items in an array will be valued slightly higher than its counterpart (which means that evaluating the value > the other value will return true).\n\nCreate a function that returns whether the first array is slightly superior to that of the second.\n\nExamples\nisFirstSuperior([1, 2, 4], [1, 2, 3",
    "tags": [
      "language_fundamentals",
      "objects"
    ],
    "title": "Slightly Superior"
  },
  {
    "_id": "9k87o8Y4yNt3fvcfB",
    "difficulty": 1.6296296296296295,
    "language": "java",
    "summary": "Write a function that takes an array of elements and returns only the ints.\n\nExamples\nreturnInts([9, 2, \"space\", \"car\", \"lion\", 16]) ➞ [9, 2, 16]\n\nreturnInts([\"hello\", 81, \"basketball\", 123, \"fox\"]) ➞ [81, 123]\n\nreturnInts([10, \"121\", 56, 20, \"car\", 3, \"lion\"]) ➞ [10, 56, 20, 3]\n\nreturnInts([\"String\",  true,  3.3,  1]) ➞ [1]\n\nNotes\nN/A",
    "tags": [
      "arrays",
      "sorting",
      "loops",
      "language_fundamentals"
    ],
    "title": "Return Only the Int"
  },
  {
    "_id": "HhExSRj4aXHxTQEgG",
    "difficulty": 1.631578947368421,
    "language": "java",
    "summary": "Write a function containing an expression, in terms of n, for the nth term of the sequence that has the following first six terms:\n\n2, 6, 13, 23, 36, 52 ...and the sequence continues.\n\nExamples\nseq(1) ➞ 2\n\nseq(2) ➞ 6\n\nseq(6) ➞ 52\n\nNotes\nThe parameter n is always >= 0.",
    "tags": [
      "math",
      "numbers",
      "loops"
    ],
    "title": "The Nth Term of the Sequence"
  },
  {
    "_id": "YaveE6sv8xGf4CNxk",
    "difficulty": 1.632183908045977,
    "language": "java",
    "summary": "Welcome to part three of the collection for Computer Science Algorithms. Once more we'll be delving into recursion by covering the topic of Binary Searches.\n\nA \"Binary Search\" is a search algorithm that is used on an already sorted array. It  compares the target value to the middle element of an array. If they don't match, the half in which the target cannot l",
    "tags": [
      "algorithms",
      "recursion",
      "arrays"
    ],
    "title": "Algorithms III: Binary Search"
  },
  {
    "_id": "KSX8nW7HdxLK2iFj5",
    "difficulty": 1.6326530612244898,
    "language": "java",
    "summary": "Given two unique integer arrays a and b, and an integer target value v, create a function to determine whether there is a pair of numbers that add up to the target value v, where one number comes from one array a and the other comes from the second array b.\n\nReturn true if there is a pair that adds up to the target value and false otherwise.\n\nExamples\nsumOfTwo",
    "tags": [
      "arrays",
      "validation",
      "numbers"
    ],
    "title": "Determine If Two Numbers Add up to a Target Value"
  },
  {
    "_id": "eQcTa2pBy5WiXpQFf",
    "difficulty": 1.6326530612244898,
    "language": "java",
    "summary": "Create a function that takes an array of integers and returns true if every number is prime. Otherwise, return false.\n\nExamples\nallPrime([7, 5, 2, 4, 6]) ➞ false\n\nallPrime([2, 3, 5, 7, 13, 17, 19, 23, 29]) ➞ true\n\nallPrime([1, 5, 3]) ➞ false\n\nNotes\n1 is not a prime number.",
    "tags": [
      "validation",
      "math",
      "arrays"
    ],
    "title": "All Numbers In Array Are Prime"
  },
  {
    "_id": "ujzBDWymfJ9fzSnfH",
    "difficulty": 1.6382978723404256,
    "language": "java",
    "summary": "In this challenge, you have to establish if a number is apocalyptic. A positive integer n greater than 0 is apocalyptic when 2 elevated to n contains one or more occurrences of 666 inside it.\n\nGiven an integer n, implement a function that returns:\n\"Safe\" if n is not apocalyptic.\n\"Single\" if inside 2^n there's a single occurrence of 666.\n\"Double\" if inside 2^n",
    "tags": [
      "numbers",
      "strings",
      "validation"
    ],
    "title": "Apocalyptic Numbers"
  },
  {
    "_id": "gvcJa987XYCxqf9xN",
    "difficulty": 1.6388888888888888,
    "language": "java",
    "summary": "Create a function that takes an initial word and extracts any words that start with the same letters as the initial word.\n\nExamples\ndictionary(\"bu\", [\"button\", \"breakfast\", \"border\"]) ➞ [\"button\"]\n\ndictionary(\"tri\", [\"triplet\", \"tries\", \"trip\", \"piano\", \"tree\"]) ➞ [\"triplet\", \"tries\", trip\"]\n\ndictionary(\"beau\", [\"pastry\", \"delicious\", \"name\", \"boring\"]) ➞ []",
    "tags": [
      "strings",
      "conditions"
    ],
    "title": "Little Dictionary"
  },
  {
    "_id": "9SxN2Mh85B5SBTFWP",
    "difficulty": 1.64,
    "language": "java",
    "summary": "Given a string of numbers separated by a comma and space, return the total sum of all the numbers.\n\nExamples\naddNums(\"2,  5,  1,  8,  4\") ➞ 20\n\naddNums(\"-12,  -13, 12, 17\") ➞ 4\n\naddNums(\"1,  2,  3,  4,  5,  6,  7\") ➞ 28\n\naddNums(\"10\") ➞ 10\n\nNotes\nNumbers will always be separated by a comma and space.\nYour function should accept negative numbers.",
    "tags": [
      "language_fundamentals",
      "numbers"
    ],
    "title": "Adding Numbers In A String"
  },
  {
    "_id": "fj6c32nSde3FfYoaC",
    "difficulty": 1.641025641025641,
    "language": "java",
    "summary": "The right shift operation is similar to floor division by powers of two.\n\nSample calculation using the right shift operator ( >> ):\n\n80 >> 3 = floor(80/2^3) = floor(80/8) = 10\n-24 >> 2 = floor(-24/2^2) = floor(-24/4) = -6\n-5 >> 1 = floor(-5/2^1) = floor(-5/2) = -3\n\nWrite a function that mimics (without the use of >>) the right shift operator and returns the re",
    "tags": [
      "bit_operations",
      "numbers"
    ],
    "title": "Right Shift by Division"
  },
  {
    "_id": "j7qh4xZNvLddnx4Gy",
    "difficulty": 1.6419753086419753,
    "language": "java",
    "summary": "Write a function that inserts a white space between every instance of a lower character followed immediately by an upper character.\n\nExamples\ninsertWhitespace(\"SheWalksToTheBeach\") ➞ \"She Walks To The Beach\"\n\ninsertWhitespace(\"MarvinTalksTooMuch\") ➞ \"Marvin Talks Too Much\"\n\ninsertWhitespace(\"TheGreatestUpsetInHistory\") ➞ \"The Greatest Upset In History\"\n\nNotes\n",
    "tags": [
      "regex",
      "formatting",
      "strings"
    ],
    "title": "White Spaces Between Lower and Uppercase Letters"
  },
  {
    "_id": "8YajvDynPYF6XG3nZ",
    "difficulty": 1.6428571428571428,
    "language": "java",
    "summary": "Given two arrays of two people's different interests, return whether both people have at least two things in common or have exact interests. Return true if there's a potential friend!\n\nExamples\nisPotentialFriend(\n  [\"sports\", \"music\", \"chess\"],\n  [\"coding\", \"music\", \"netflix\", \"chess\"]\n) ➞ true\n\nisPotentialFriend(\n  [\"cycling\", \"technology\", \"drawing\"],\n  [\"da",
    "tags": [
      "language_fundamentals",
      "arrays",
      "validation"
    ],
    "title": "Potential Friend?"
  },
  {
    "_id": "Wr5YbkQakb6qh8Gax",
    "difficulty": 1.6428571428571428,
    "language": "java",
    "summary": "Given two words, the letter distance is calculated by taking the absolute value of the difference in character codes and summing up the difference.\n\nIf one word is longer than another, add the difference in lengths towards the score.\n\nTo illustrate:\n\nletterDistance(\"house\", \"fly\") = dist(\"h\", \"f\") + dist(\"o\", \"l\") + dist(\"u\", \"y\") + dist(house.length, fly.leng",
    "tags": [
      "strings",
      "loops"
    ],
    "title": "Letter Distance"
  },
  {
    "_id": "C7eTh8XB3dERHYE9W",
    "difficulty": 1.6428571428571428,
    "language": "java",
    "summary": "Create a function that calculates the missing value of 3 inputs using Ohm's law. The inputs are v, r or i (aka: voltage, resistance and current).\n\nOhm's law:\nV = R * I\n\nReturn the missing value rounded to two decimal places.\n\nExamples\ncalculate(46.6, \"\", 54.4) ➞ 0.86\n\ncalculate(54.0, 46.0, \"\") ➞ 1.17\n\ncalculate(230.0, \"\", 2.0) ➞ 115.0\n\ncalculate(\"\", 220.0, 0.0",
    "tags": [
      "math",
      "physics"
    ],
    "title": "Calculate The Missing Value With Ohm's Law"
  },
  {
    "_id": "cAyse5aq4n4MagmYA",
    "difficulty": 1.6455696202531647,
    "language": "java",
    "summary": "Create a function that returns the number of palindrome numbers in a specified range (inclusive).\n\nFor example, between 8 and 34, there are 5 palindromes: 8, 9, 11, 22 and 33. Between 1550 and 1552 there is exactly one palindrome: 1551.\n\nExamples\ncountPalindromes(1, 10) ➞ 9\n\ncountPalindromes(555, 556) ➞ 1\n\ncountPalindromes(878, 898) ➞ 3\n\nNotes\nA palindrome num",
    "tags": [
      "strings",
      "control_flow",
      "numbers"
    ],
    "title": "Count Palindrome Numbers in a Range"
  },
  {
    "_id": "zRjZb4NXtfMjGAMGb",
    "difficulty": 1.6470588235294117,
    "language": "java",
    "summary": "Create a function that takes both a string and an array of numbers as arguments. Rearrange the letters in the string to be in the order specified by the index numbers. Return the \"remixed\" string.\n\nExamples\nremix(\"abcd\", [0, 3, 1, 2]) ➞ \"acdb\"\n\nThe string you'll be returning will have: \"a\" at index 0, \"b\" at index 3, \"c\" at index 1, \"d\" at index 2, because the",
    "tags": [
      "strings",
      "arrays",
      "formatting",
      "loops"
    ],
    "title": "Remix the String"
  },
  {
    "_id": "ZrsjThqzcwJYT95PQ",
    "difficulty": 1.65,
    "language": "java",
    "summary": "Create a function that counts the number of adverbs in a sentence. An adverb is a word that ends with ly.\n\nExamples\ncountAdverbs(\"She ran hurriedly towards the stadium.\") ➞ 1\n\ncountAdverbs(\"She ate the lasagna heartily and noisily.\") ➞ 2\n\ncountAdverbs(\"He hates potatoes.\") ➞ 0\n\ncountAdverbs(\"He was happily, crazily, foolishly over the moon.\") ➞ 3\n\nNotes\nDo NOT",
    "tags": [
      "strings",
      "regex",
      "loops"
    ],
    "title": "Counting Adverbs "
  },
  {
    "_id": "g7mkKpAtZZ7mnuFQX",
    "difficulty": 1.6507936507936507,
    "language": "java",
    "summary": "Create a function that takes an array of strings representing times ('hours:minutes:seconds') and returns their sum as an array of integers ([hours, minutes, seconds]).\n\nExamples\ntimeSum([\"1:23:45\"]) ➞ [1, 23, 45]\n\ntimeSum([\"1:03:45\", \"1:23:05\"]) ➞ [2, 26, 50]\n\ntimeSum([\"5:39:42\", \"10:02:08\", \"8:26:33\"]) ➞ [24, 8, 23]\n\nNotes\nIf the input is an empty array, ret",
    "tags": [
      "arrays",
      "loops",
      "algorithms"
    ],
    "title": "Sum of an Array of Times"
  },
  {
    "_id": "DPyBbBDqziAdo9DRJ",
    "difficulty": 1.6533333333333333,
    "language": "java",
    "summary": "Write a function that counts the number of times a specific digit occurs in a range (inclusive). The function will look like:\n\ndigitOccurrences(min, max, digit) ➞ number of times digit occurs\n\nExamples\ndigitOccurrences(51, 55, 5) ➞ 6\n// [51, 52, 53, 54, 55] : 5 occurs 6 times\n\ndigitOccurrences(1, 8, 9) ➞ 0\n\ndigitOccurrences(-8, -1, 8) ➞ 1\n\ndigitOccurrences(71,",
    "tags": [
      "numbers",
      "strings"
    ],
    "title": "Count a Specific Digit"
  },
  {
    "_id": "qbhH4bef2N275iQ2Z",
    "difficulty": 1.6595744680851063,
    "language": "java",
    "summary": "Given a string containing mostly spaces and one non-space character, return whether the character is positioned in the very centre of the string. This means that the number of spaces on both sides should be the same.\n\nExamples\nisCentered(\"  #  \") ➞ true\n\nisCentered(\" 2    \") ➞ false\n\nisCentered(\"@\") ➞ true\n\nNotes\nOnly one character other than spaces will be gi",
    "tags": [
      "strings",
      "validation"
    ],
    "title": "In the Centre?"
  },
  {
    "_id": "u8tkvqrMSqJetmNcz",
    "difficulty": 1.6603773584905661,
    "language": "java",
    "summary": "Write a function that swaps the X and Y coordinates in a string.\n\nExamples\nswapXY(\"(1, 2), (3, 4)\") ➞ \"(2, 1), (4, 3)\"\n\nswapXY(\"(11, 23), (43, 99)\") ➞ \"(23, 11), (99, 43)\"\n\nswapXY(\"(-5, -3), (7, 4)\") ➞ \"(-3, -5), (4, 7)\"\n\nNotes\nSome numbers have multiple digits.\nSome numbers will be negative.",
    "tags": [
      "strings",
      "regex"
    ],
    "title": "Swap X and Y Coordinates"
  },
  {
    "_id": "8yxthmRQsNu86PBy3",
    "difficulty": 1.6612903225806452,
    "language": "java",
    "summary": "Write a function that returns the longest common ending between two strings.\n\nExamples\nlongestCommonEnding(\"multiplication\", \"ration\") ➞ \"ation\"\n\nlongestCommonEnding(\"potent\", \"tent\") ➞ \"tent\"\n\nlongestCommonEnding(\"skyscraper\", \"carnivore\") ➞ \"\"\n\nNotes\nReturn an empty string if there exists no common ending.",
    "tags": [
      "strings",
      "loops"
    ],
    "title": "Longest Common Ending"
  },
  {
    "_id": "zSjd2EbBzBCuMjgrr",
    "difficulty": 1.6615384615384616,
    "language": "java",
    "summary": "When two numbers are added together, the strange Lunar arithmetic is used on the Moon. The Lunar sum of two numbers is not determined by the sum of their individual digits, but by the highest digit of the two taken into account at each step, in columnar form.\n\n2  4  6  +\n3  1  7  =\n\n3  4  7\n\n// 3 > 2 | 4 > 1 | 7 > 6\n\n1  3  4  +\n   5  4  =\n\n1  5  4\n\n//  1 > 0 |",
    "tags": [
      "math",
      "numbers",
      "arrays"
    ],
    "title": "Return the Sum of Two Numbers (on the Moon)"
  },
  {
    "_id": "M9eXE68jj9pxvmiuj",
    "difficulty": 1.670731707317073,
    "language": "java",
    "summary": "A Kaprekar Number is a positive integer that is equal to a number formed by first squaring, then splitting and summing its two lexicographical parts:\n\nIf the quantity of digits of the squared number is even, the left and right parts will have the same length.\nIf the quantity of digits of the squared number is odd, then the right part will be the longer half, w",
    "tags": [
      "numbers",
      "strings"
    ],
    "title": "Kaprekar Numbers"
  },
  {
    "_id": "9EAgG2hGidjo5BvCz",
    "difficulty": 1.6764705882352942,
    "language": "java",
    "summary": "You are given three inputs: a string, one letter, and a second letter.\nWrite a function that returns true if every instance of the first letter occurs before every instance of the second letter.\n\nExamples\nfirstBeforeSecond(\"a rabbit jumps joyfully\", \"a\", \"j\") ➞ true\n// every instance of \"a\" occurs before every instance of \"j\"\n\nfirstBeforeSecond(\"tesha is my wo",
    "tags": [
      "strings",
      "validation"
    ],
    "title": "First Before Second Letter"
  },
  {
    "_id": "mdJmXLuw8dLxxdGLc",
    "difficulty": 1.6825396825396826,
    "language": "java",
    "summary": "Given a common phrase, return false if any individual word in the phrase contains duplicate letters. Return true otherwise.\n\nExamples\nnoDuplicateLetters(\"Fortune favours the bold.\") ➞ true\n\nnoDuplicateLetters(\"You can lead a horse to water, but you can't make him drink.\") ➞ true\n\nnoDuplicateLetters(\"Look before you leap.\") ➞ false\n// Duplicate letters in \"Look",
    "tags": [
      "language_fundamentals",
      "strings",
      "validation",
      "loops"
    ],
    "title": "Words With Duplicate Letters"
  },
  {
    "_id": "NnpHPBhnnhdE3gLew",
    "difficulty": 1.6875,
    "language": "java",
    "summary": "Write a function that takes coordinates of two points on a three-dimensional plane and returns the length of the line segment connecting those two points.\n\nExamples\nlineLength(arr[0]={15, 7, 5}, arr[1]={22, 11, 1}) ➞ 8.06\n\nlineLength(arr[0]={0, 0, 0}, arr[1]={0, 0, 0}) ➞ 0\n\nlineLength(arr[0]={0, 0, 0}, arr[1]={1, 1, 1}) ➞ 1.41\n\nNotes\nNumbers in argument array",
    "tags": [
      "algebra",
      "math",
      "geometry",
      "arrays"
    ],
    "title": "Geometry 2: Length of Line Segment in 3D"
  },
  {
    "_id": "zCBrgDYqgfsd6THJd",
    "difficulty": 1.6896551724137931,
    "language": "java",
    "summary": "Given a positive integer n and if 1 plus 2 times n exactly divides 1 plus 2 raised to the power n, then n is said to be a Curzon number.\n\nWrite a function that determines whether a number is a Curzon number or not.\n\nExamples\nisCurzon(5) ➞ true\n// 2 ** 5 + 1 = 33\n// 2 * 5 + 1 = 11\n// 33 is a multiple of 11\n\nisCurzon(10) ➞ false\n// 2 ** 10 + 1 = 1025\n// 2 * 10 +",
    "tags": [
      "numbers",
      "math",
      "validation"
    ],
    "title": "Curzon Numbers"
  },
  {
    "_id": "dETRK2YLCtEPAMvMb",
    "difficulty": 1.6904761904761905,
    "language": "java",
    "summary": "Create a function that takes an old price oldPrice, a new price newPrice, and returns what percent the price decreased or increased. Round the percentage to the nearest whole percent.\n\nExamples\npercentageChanged(\"$800\", \"$600\") ➞ \"25% decrease\"\n\npercentageChanged(\"$1000\", \"$840\") ➞ \"16% decrease\"\n\npercentageChanged(\"$100\", \"$950\") ➞ \"850% increase\"\n\nNotes\nN/A",
    "tags": [
      "math"
    ],
    "title": "Percentage Changed"
  },
  {
    "_id": "ted7T8hrioompcZAn",
    "difficulty": 1.6938775510204083,
    "language": "java",
    "summary": "In number theory, a prime number is balanced if it is equidistant from the prime before it and the prime after it. It is therefore the arithmetic mean of those primes. For example, 5 is a balanced prime, two units away from 3, and two from 7. 211 is 12 units away from the previous prime, 199, and 12 away from the next, 223.\n\nA prime that is greater than the ar",
    "tags": [
      "math",
      "numbers",
      "validation"
    ],
    "title": "Primal Strength"
  },
  {
    "_id": "xzRcBmkYYNhoeBNv5",
    "difficulty": 1.6944444444444444,
    "language": "java",
    "summary": "Given a sentence, create a function that replaces every occurence of the article \"a\" with the verb phrase \"an absolute\". It should return the same string without any change if it doesn't have any article \"a\" present.\n\nExamples\nabsolute(\"Truly, a heart that beats for no one but for Tesh.\") ➞ \"Truly, an absolute heart that beats for no one but for Tesh.\"\n\nabsolu",
    "tags": [
      "regex",
      "conditions",
      "strings",
      "formatting"
    ],
    "title": "An Absolute"
  },
  {
    "_id": "uemLKqbbbfqvwB8ke",
    "difficulty": 1.6984126984126984,
    "language": "java",
    "summary": "Create a function that takes a string as the first argument, and a (string) specification as a second argument. If the specification is \"word\", return a string with each word reversed while maintaining their original order. If the specification is \"sentence\", reverse the order of the words in the string, while keeping the words intact.\n\nExamples\nstr = \"There's",
    "tags": [
      "language_fundamentals",
      "strings"
    ],
    "title": "String Flips"
  },
  {
    "_id": "4JMgg8Fbmb3qnzS8B",
    "difficulty": 1.7017543859649122,
    "language": "java",
    "summary": "If you take an integer and form the product of its individual digits, you get a smaller number. Keep doing this and eventually you end up with a single digit.\n\nThe number of steps it takes to reach this point is known as the integer's multiplicative persistence. For example, 347 has a persistence of 3: 347 = 84, 84 = 32, 32 = 6.\n\nDevise a function that returns",
    "tags": [
      "numbers",
      "math",
      "recursion"
    ],
    "title": "Persistence"
  },
  {
    "_id": "ACvNXRvMQPfMguQBH",
    "difficulty": 1.7027027027027026,
    "language": "java",
    "summary": "The Euler's phi function (from the Greek letter φ, also called Euler's totient function) counts the positive integers that are coprime of a given number n, from 1 to n - 1. Two numbers are coprime when their greater common divisor is equal to 1. Look at the example below.\n\ndivisors of 6 ➞ [1, 2, 3, 6]\n\ndivisors of 5 ➞ [1, 5] ➞ g.c.d. = 1\ndivisors of 4 ➞ [1, 2,",
    "tags": [
      "numbers",
      "algorithms",
      "math",
      "higher_order_functions"
    ],
    "title": "Euler's Phi Function"
  },
  {
    "_id": "D33ry6zNZzRyuQRPF",
    "difficulty": 1.7058823529411764,
    "language": "java",
    "summary": "Write a function that takes time t1 and time t2 and returns the numbers of hours passed between the two times.\n\nExamples\nhoursPassed(\"3:00 AM\", \"9:00 AM\") ➞ \"6 hours\"\n\nhoursPassed(\"2:00 PM\", \"4:00 PM\") ➞ \"2 hours\"\n\nhoursPassed(\"1:00 AM\", \"3:00 PM\") ➞ \"14 hours\"\n\nNotes\nTime t1 will always be the starting time and t2, the ending time.\nReturn the string \"No time",
    "tags": [
      "strings",
      "dates"
    ],
    "title": "Hours Passed"
  },
  {
    "_id": "Cqemt6ySdA883Td2F",
    "difficulty": 1.7115384615384615,
    "language": "java",
    "summary": "Write a function that returns true if the first string is the second string stretched, and false otherwise. A stretch is to repeat each character in a string the same number of times.\n\nExamples\nisStretched(\"pppaaannndddaaa\", \"panda\") ➞ true\n\nisStretched(\"sssshhiipp\", \"ship\") ➞ false\n\nisStretched(\"magnet\", \"magnet\") ➞ true\n\nisStretched(\"magneto\", \"magnet\") ➞ fa",
    "tags": [
      "strings",
      "validation"
    ],
    "title": "Is a String Stretched?"
  },
  {
    "_id": "bYP5z4ywiz2sa3TbA",
    "difficulty": 1.7142857142857142,
    "language": "java",
    "summary": "Write a function that repeats the shorter string until it is equal to the length of the longer string.\n\nExamples\nlengthen(\"abcdefg\", \"ab\") ➞ \"abababa\"\n\nlengthen(\"ingenius\", \"forest\") ➞ \"forestfo\"\n\nlengthen(\"clap\", \"skipping\") ➞ \"clapclap\"\n\nNotes\nBoth strings will differ in length.\nBoth strings will contain at least one character.\nEither of the two strings coul",
    "tags": [
      "strings",
      "loops"
    ],
    "title": "Repeat the Shorter String"
  },
  {
    "_id": "4Az2B8MYAH3GbbxX6",
    "difficulty": 1.7142857142857142,
    "language": "java",
    "summary": "Create a function that expands a number into a string as shown below:\n\n54 ➞ \"50 + 4\"\n70701 ➞ \"70000 + 700 + 1\"\n466 ➞ \"400 + 60 + 6\"\n\nExamples\nexpandedForm(544) ➞ \"500 + 40 + 4\"\n\nexpandedForm(4666) ➞ \"4000 + 600 + 60 + 6\"\n\nexpandedForm(70304) ➞ \"70000 + 300 + 4\"\n\nexpandedForm(1037903) ➞ \"1000000 + 30000 + 7000 + 900 + 3\"\n\nexpandedForm(802539) ➞ \"800000 + 2000 +",
    "tags": [
      "arrays",
      "language_fundamentals",
      "numbers",
      "math"
    ],
    "title": "Expand a Number I"
  },
  {
    "_id": "G4ZF3Ch8XyMk4p7Hp",
    "difficulty": 1.7209302325581395,
    "language": "java",
    "summary": "Write a function that takes time t1 and time t2 and returns the number of hours passed between the two times.\n\nExamples\nhoursPassed(\"3:00 AM\", \"9:00 AM\") ➞ \"6 hours\"\n\nhoursPassed(\"2:00 PM\", \"4:00 PM\") ➞ \"2 hours\"\n\nhoursPassed(\"1:00 AM\", \"3:00 PM\") ➞ \"14 hours\"\n\nNotes\nTime t1 will always be the starting time and t2, the ending time.\nReturn the string \"no time p",
    "tags": [
      "strings",
      "data_structures",
      "dates"
    ],
    "title": "Amateur Hour"
  },
  {
    "_id": "S28QATbZGq3BjDHZZ",
    "difficulty": 1.7222222222222223,
    "language": "java",
    "summary": "Fruit salads are served best when the fruits are sliced and diced into small chunks!\n\nFor this challenge, slice each fruit in half and sort the chunks alphabetically. This recipe tastes best when the chunks are joined together to make a string.\n\nExamples\nfruitSalad([\"apple\", \"pear\", \"grapes\"]) ➞ \"apargrapepesple\"\n// Chunks: [\"ap\", \"ple\", \"pe\", \"ar\", \"gra\", \"pe",
    "tags": [
      "arrays",
      "loops",
      "strings",
      "sorting"
    ],
    "title": "Fruit Salad 🍇🍓🍎"
  },
  {
    "_id": "tLmBirspM5N35xxuC",
    "difficulty": 1.725,
    "language": "java",
    "summary": "Write a function that returns the greatest common divisor of all array elements. If the greatest common divisor is 1, return 1.\n\nExamples\nGCD([10, 20, 40]) ➞ 10\n\nGCD([1, 2, 3, 100]) ➞ 1\n\nGCD([1024, 192, 2048, 512]) ➞ 64\n\nNotes\nArray elements are always greater than 0.\nThere is a minimum of two array elements given.\nIf you have any problems, check the Resources",
    "tags": [
      "algebra",
      "algorithms",
      "math",
      "numbers"
    ],
    "title": "Common Divisor of Array"
  },
  {
    "_id": "22reADPqtoTzmP6nD",
    "difficulty": 1.7352941176470589,
    "language": "java",
    "summary": "Create a function that, given a string str, finds a letter that has occurred only once. Return the letter in uppercase. If the input is empty, return an empty string \"\".\n\nExamples\nsingleOccurrence(\"TeEsShHAa\") ➞ \"T\"\n\nsingleOccurrence(\"LoOOvvVEEssS\") ➞ \"L\"\n\nsingleOccurrence(\"DeEPp\") ➞ \"D\"\n\nsingleOccurrence(\"EFFEAABbc\") ➞ \"C\"\n\nsingleOccurrence(\"AAAAVNNNNSS\") ➞ \"",
    "tags": [
      "language_fundamentals",
      "strings"
    ],
    "title": "Single Occurrence"
  },
  {
    "_id": "6RStzK9uub9vHDt53",
    "difficulty": 1.75,
    "language": "java",
    "summary": "Create a function that takes a string and returns a string ordered by the length of the words. From shortest to longest word. If there are words with the same amount of letters, order them alphabetically.\n\nExamples\nsortByLength(\"Hello my friend\") ➞ \"my Hello friend\"\n\nsortByLength(\"Have a wonderful day\") ➞ \"a day Have wonderful\"\n\nsortByLenght(\"My son loves pine",
    "tags": [
      "strings",
      "sorting",
      "arrays",
      "language_fundamentals"
    ],
    "title": "Sort by Length"
  },
  {
    "_id": "x2mxt5c6Qp4Nr5qDv",
    "difficulty": 1.75,
    "language": "java",
    "summary": "Given an array of cities and populations, return an array where all populations are rounded to the nearest million.\n\nExamples\nmillionsRounding([\n  [\"Nice\", 942208],\n  [\"Abu Dhabi\", 1482816],\n  [\"Naples\", 2186853],\n  [\"Vatican City\", 572]\n]) ➞ [\n  [\"Nice\", 1000000],\n  [\"Abu Dhabi\", 1000000],\n  [\"Naples\", 2000000],\n  [\"Vatican City\", 0]\n]\n\nmillionsRounding([\n  [",
    "tags": [
      "language_fundamentals",
      "loops",
      "numbers",
      "objects"
    ],
    "title": "Rounding In Millions"
  },
  {
    "_id": "LyytqgmYKzCgBGbxE",
    "difficulty": 1.76,
    "language": "java",
    "summary": "Let there be a square matrix, where each square is a rectangle, and a combination of more squares are also rectangles. To find the number of rectangles, Pete sat down and started counting... but that's highly inefficient.\n\nCreate a function that takes the order of the matrix as input and returns the number of rectangles in them.\n\nExamples\nrectangles(1) ➞ 1\n\nre",
    "tags": [
      "algorithms",
      "math",
      "numbers"
    ],
    "title": "How Many Rectangles?"
  },
  {
    "_id": "bfAeRfKacFSLuuXjv",
    "difficulty": 1.7738095238095237,
    "language": "java",
    "summary": "A \"magic square\" is a square divided into smaller squares each containing a number, such that the numbers in each vertical, horizontal, and diagonal row add up to the same value.\n\n3x3 Magic Square\n\nWrite a function that takes a 2D array, checks if it's a magic square and returns either true or false depending on the result.\n\nExamples\nisMagicSquare([\n  [8, 1, 6",
    "tags": [
      "algorithms",
      "arrays",
      "data_structures",
      "loops"
    ],
    "title": "Check Magic Square"
  },
  {
    "_id": "5mANMR3X6gEfWephD",
    "difficulty": 1.778443113772455,
    "language": "java",
    "summary": "Create a function that takes an array as an argument and returns a new nested array for each element in the original array. The nested array must be filled with the corresponding element (string or number) in the original array and each nested array has the same amount of elements as the original array.\n\nExamples\nmultiply([12, 13, \"TT\"]) ➞ [[12, 12, 12], [13,",
    "tags": [
      "arrays",
      "language_fundamentals"
    ],
    "title": "Array Multiplier"
  },
  {
    "_id": "FhsLkzfbEgb4TiJXA",
    "difficulty": 1.7802197802197801,
    "language": "java",
    "summary": "Write a function that creates an object with each (key, value) pair being the (lower case, upper case) versions of a letter, respectively.\n\nExamples\nmapping([\"x\", \"a\", \"v\", \"i\", \"e\", \"r\"]) ➞ { \"x\"=\"X\", \"a\"=\"A\", \"v\"=\"V\", \"i\"=\"I\", \"e\"=\"E\", \"r\"=\"R\" }\n\nmapping([\"t\", \"e\", \"s\", \"h\", \"a\"]) ➞ { t=T, e=E, s=S, h=H, a=A }\n\nmapping([\"p\", \"s\"]) ➞ { \"p\"=\"P\", \"s\"=\"S\" }\n\nmap",
    "tags": [
      "objects",
      "arrays",
      "language_fundamentals"
    ],
    "title": "Lowercase and Uppercase Map"
  },
  {
    "_id": "i3T6iJNinAq6quMXo",
    "difficulty": 1.7857142857142858,
    "language": "java",
    "summary": "YouTube currently displays a like and a dislike button, allowing you to express your opinions about particular content. It's set up in such a way that you cannot like and dislike a video at the same time.\n\nThere are two other interesting rules to be noted about the interface:\n\nPressing a button, which is already active, will undo your press.\nIf you press the l",
    "tags": [
      "loops",
      "arrays",
      "conditions",
      "logic"
    ],
    "title": "Likes vs. Dislikes"
  },
  {
    "_id": "mMc9D6vB4iPiiAK7k",
    "difficulty": 1.7980769230769231,
    "language": "java",
    "summary": "A pronic number (or otherwise called as heteromecic) is a number which is a product of two consecutive integers, that is, a number of the form n(n + 1). Create a function that determines whether a number is pronic or not.\n\nExamples\nisHeteromecic(0) ➞ true\n// 0 * (0 + 1) = 0 * 1 = 0\n\nisHeteromecic(2) ➞ true\n// 1 * (1 + 1) = 1 * 2 = 2\n\nisHeteromecic(7) ➞ false",
    "tags": [
      "math",
      "numbers",
      "loops",
      "validation"
    ],
    "title": "Pronic Number"
  },
  {
    "_id": "CKqfEowjmSTw2jsso",
    "difficulty": 1.845643153526971,
    "language": "java",
    "summary": "Create a function that takes an array of numbers and return \"Boom!\" if the number 7 appears in the array. Otherwise, return \"there is no 7 in the array\".\n\nExamples\nsevenBoom([1, 2, 3, 4, 5, 6, 7]) ➞ \"Boom!\"\n// 7 contains the number seven.\n\nsevenBoom([8, 6, 33, 100]) ➞ \"there is no 7 in the array\"\n// None of the items contain 7 within them.\n\nsevenBoom([2, 55, 6",
    "tags": [
      "arrays",
      "loops",
      "numbers",
      "regex"
    ],
    "title": "Seven Boom!"
  },
  {
    "_id": "DcatHxtrMfLxSWnDn",
    "difficulty": 1.9019607843137254,
    "language": "java",
    "summary": "Create a function that checks if a given integer is exactly the factorial of an integer or not. true if it is, false otherwise.\n\nExamples\nisFactorial(2) ➞ true\n// 2 = 2 * 1 = 2!\n\nisFactorial(27) ➞ false\n\nisFactorial(24) ➞ true\n// 24 = 4 * 3 * 2 * 1 = 4!\n\nNotes\nNo error handling is necessary. Inputs are all positive integers.\nAlternatively, you can solve this w",
    "tags": [
      "math",
      "loops",
      "validation",
      "recursion"
    ],
    "title": "Is the Input Factorial of an Integer?"
  },
  {
    "_id": "Md6usCHQ7Xsj2fQi3",
    "difficulty": 1.96,
    "language": "java",
    "summary": "Create a function that determines whether elements in an array can be re-arranged to form a consecutive list of numbers where each number appears exactly once.\n\nExamples\ncons([5, 1, 4, 3, 2]) ➞ true\n// Can be re-arranged to form [1, 2, 3, 4, 5]\n\ncons([5, 1, 4, 3, 2, 8]) ➞ false\n\ncons([5, 6, 7, 8, 9, 9]) ➞ false\n// 9 appears twice\n\nNotes\nN/A",
    "tags": [
      "arrays",
      "loops",
      "sorting",
      "validation"
    ],
    "title": "Consecutive Numbers"
  },
  {
    "_id": "qSJ5hZfG52Nf2hXWS",
    "difficulty": 1.9750692520775623,
    "language": "java",
    "summary": "Given an array of integers, return the largest gap between the sorted elements of the array.\n\nFor example, consider the array:\n[9, 4, 26, 26, 0, 0, 5, 20, 6, 25, 5]\n... in which, after sorting, the array becomes:\n\n[0, 0, 4, 5, 5, 6, 9, 20, 25, 26, 26]\n... so that we now see that the largest gap in the array is between 9 and 20 which is 11.\n\nExamples\nlargestGap",
    "tags": [
      "arrays",
      "sorting",
      "numbers",
      "math"
    ],
    "title": "Largest Gap"
  },
  {
    "_id": "v96NThCRg5M5MLGfq",
    "difficulty": 2.0217391304347827,
    "language": "java",
    "summary": "Stalactites hang from the ceiling of a cave while stalagmites grow from the floor.\n\nCreate a function that determines whether the input represents \"stalactites\" or \"stalagmites\". If it represents both, return \"both\". Input will be a 2D array, with 1 representing a piece of rock, and 0 representing air space.\n\nExamples\nmineralFormation([\n  [0, 1, 0, 1],\n  [0, 1",
    "tags": [
      "arrays",
      "validation"
    ],
    "title": "Stalactites or Stalagmites?"
  },
  {
    "_id": "7r3uQADjtXEk7qirj",
    "difficulty": 2.0294117647058822,
    "language": "java",
    "summary": "Given a number, return a string which is formatted into US Dollars and cents!\n\nRemember that:\nYou should round to two digits after the decimal point (even for integers).\nThousandths should be separated by commas.\n\nExamples\ndolladollaBills(10) ➞ \"$10.00\"\n\ndolladollaBills(1000000) ➞ \"$1,000,000.00\"\n\ndolladollaBills(-314159.2653) ➞ \"-$314,159.27\"\n\ndolladollaBills",
    "tags": [
      "formatting",
      "strings",
      "numbers"
    ],
    "title": "Money Formatting"
  },
  {
    "_id": "XxS3L2wDEKhi9Hw6W",
    "difficulty": 2.032258064516129,
    "language": "java",
    "summary": "Implement a method removeWord() that takes two string parameters:\nsentence - the sentence you are to remove a word from.\nword - the word you are to remove from the sentence.\n\nYour method should take a string, sentence and remove word from it. It will return a new string without word in the sentence.\n\nExamples\nremoveWord(\"One two three four\", \"two\") ➞ \"One thre",
    "tags": [
      "strings"
    ],
    "title": "Extract a Word From a Sentence"
  },
  {
    "_id": "Nwq8yK3Eq2DqbxDsL",
    "difficulty": 2.0377358490566038,
    "language": "java",
    "summary": "Given an array of object arrays, return a new array of object arrays containing every element, except for the outer elements.\n\nExamples\npeelLayer([\n  ['a', 'b', 'c', 'd'],\n  ['e', 'f', 'g', 'h'],\n  ['i', 'j', 'k', 'l'],\n  ['m', 'n', 'o', 'p']\n]) ➞ [\n  ['f', 'g'],\n  ['j', 'k']\n]\n\npeelLayer([\n  [1, 2, 3, 4, 5],\n  [6, 7, 8, 9, 10],\n  [11, 12, 13, 14, 15],\n  [16,",
    "tags": [
      "arrays",
      "loops",
      "language_fundamentals"
    ],
    "title": "Peeling off the Outer Layers"
  },
  {
    "_id": "sCP58J9vcexchgwo7",
    "difficulty": 2.0406976744186047,
    "language": "java",
    "summary": "Create a function that will test if a string is a valid PIN or not via a regular expression.\n\nA valid PIN has:\nExactly 4 or 6 characters.\nOnly numeric characters (0-9).\nNo whitespace.\n\nExamples\nvalidate(\"121317\") ➞ true\n\nvalidate(\"1234\") ➞ true\n\nvalidate(\"45135\") ➞ false\n\nvalidate(\"89abc1\") ➞ false\n\nvalidate(\"900876\") ➞ true\n\nvalidate(\" 4983\") ➞ false\n\nNotes\nE",
    "tags": [
      "regex",
      "validation",
      "strings"
    ],
    "title": "RegEx: Validate PIN"
  },
  {
    "_id": "z8vvSdWjAPu5ufBuR",
    "difficulty": 2.046280991735537,
    "language": "java",
    "summary": "Create a function that finds how many prime numbers there are, up to the given integer.\n\nExamples\nprimeNumbers(10) ➞ 4\n// 2, 3, 5 and 7\n\nprimeNumbers(20) ➞ 8\n// 2, 3, 5, 7, 11, 13, 17 and 19\n\nprimeNumbers(30) ➞ 10\n// 2, 3, 5, 7, 11, 13, 17, 19, 23 and 29\n\nNotes\nN/A",
    "tags": [
      "algebra",
      "algorithms",
      "conditions",
      "math",
      "loops"
    ],
    "title": "How Many \"Prime Numbers\" Are There?"
  },
  {
    "_id": "KgR2JhEuGD7onbMLx",
    "difficulty": 2.0483870967741935,
    "language": "java",
    "summary": "Create a function that takes a number and returns one digit that is the result of summing all the digits of the input number. When the sum of the digits consists of more than one digit, repeat summing until you get one digit.\n\nExamples\nrootDigit(123) ➞ 6\n// 1 + 2 + 3 = 6\n\nrootDigit(999888777L) ➞ 9\n\nrootDigit(1238763636555555555L) ➞ 6\n\nNotes\nRecursion is allowe",
    "tags": [
      "numbers",
      "recursion",
      "strings",
      "math"
    ],
    "title": "Digits Sum Root"
  },
  {
    "_id": "GjCgCugvh4eorPmgM",
    "difficulty": 2.048611111111111,
    "language": "java",
    "summary": "A number is said to be Disarium if the sum of its digits raised to their respective positions is the number itself.\n\nCreate a function that determines whether a number is a Disarium or not.\n\nExamples\nisDisarium(75) ➞ false\n// 7^1 + 5^2 = 7 + 25 = 32\n\nisDisarium(135) ➞ true\n// 1^1 + 3^2 + 5^3 = 1 + 9 + 125 = 135\n\nisDisarium(544) ➞ false\n\nisDisarium(518) ➞ true",
    "tags": [
      "numbers",
      "loops",
      "strings",
      "validation",
      "math"
    ],
    "title": "Disarium Number"
  },
  {
    "_id": "8NZaLdJBkhZCgNBc7",
    "difficulty": 2.0517711171662127,
    "language": "java",
    "summary": "Create a program that converts a phone number with letters to one with only numbers.\n\nNumber | Letter\n--- | ---\n0 | none\n1 | none\n2 | ABC\n3 | DEF\n4 | GHI\n5 | JKL\n6 | MNO\n7 | PQRS\n8 | TUV\n9 | WXYZ\n\nExamples\ntextToNum(\"123-647-EYES\") ➞ \"123-647-3937\"\n\ntextToNum(\"(325)444-TEST\") ➞ \"(325)444-8378\"\n\ntextToNum(\"653-TRY-THIS\") ➞ \"653-879-8447\"\n\ntextToNum(\"435-224-761",
    "tags": [
      "formatting",
      "language_fundamentals",
      "strings",
      "regex"
    ],
    "title": "Phone Number Word Decoder"
  },
  {
    "_id": "jbQDEAk7viqz2x4AX",
    "difficulty": 2.0555555555555554,
    "language": "java",
    "summary": "Given an array of numbers, return whether it is possible to make the number 7 by adding any three different numbers together.\n\nExamples\nluckySeven([2, 4, 3, 8, 9, 1]) ➞ true\n\nluckySeven([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) ➞ true\n\nluckySeven([0, 0, 0, 2, 3]) ➞ false\n// You cannot repeat the same number to make 2 + 2 + 3 = 7\n\nluckySeven([4,, 3]) ➞ false\n// You need",
    "tags": [
      "numbers",
      "loops",
      "algorithms",
      "validation"
    ],
    "title": "Lucky Seven"
  },
  {
    "_id": "4JjCN4RksJs763EGg",
    "difficulty": 2.056179775280899,
    "language": "java",
    "summary": "Given any number, we can create a new number by adding the sums of squares of digits of that number. For example, given 203, our new number is 4 + 0 + 9 = 13. If we repeat this process, we get a sequence of numbers:\n\n203 -> 13 -> 10 -> 1 -> 1\n\nSometimes, like with 203, the sequence reaches (and stays at) 1. Numbers like this are called happy.\n\nNot all numbers ",
    "tags": [
      "loops",
      "validation"
    ],
    "title": "Happy Numbers"
  },
  {
    "_id": "EjQM5woRAhYEmuGFp",
    "difficulty": 2.058139534883721,
    "language": "java",
    "summary": "Write a function that returns true if you can partition an array into one element and the rest, such that this element is equal to the product of all other elements excluding itself.\n\nExamples\ncanPartition([2, 8, 4, 1]) ➞ true\n// 8 = 2 x 4 x 1\n\ncanPartition([-1, -10, 1, -2, 20]) ➞ false\n\ncanPartition([-1, -20, 5, -1, -2, 2]) ➞ true\n\nNotes\nThe array may contain",
    "tags": [
      "arrays",
      "logic",
      "loops"
    ],
    "title": "Product of Remaining Elements"
  },
  {
    "_id": "zi3zKpBLYHqtmSf5m",
    "difficulty": 2.0625,
    "language": "java",
    "summary": "An array is positive dominant if it contains strictly more unique positive values than unique negative values. Write a function that returns true if an array is positive dominant, false, otherwise.\n\nExamples\nisPositiveDominant([1, 1, 1, 1, -3, -4]) ➞ false\n// There is only 1 unique positive value (1).\n// There are 2 unique negative values (-3, -4).\n\nisPositive",
    "tags": [
      "arrays",
      "validation"
    ],
    "title": "Positive Dominant"
  },
  {
    "_id": "p5kyThBZDR7oJhjR7",
    "difficulty": 2.0632911392405062,
    "language": "java",
    "summary": "Given a string, reverse all the words which have odd length. The even length words are not changed.\n\nExamples\nreverseOdd(\"Bananas\") ➞ \"sananaB\"\n\nreverseOdd(\"One two three four\") ➞ \"enO owt eerht four\"\n\nreverseOdd(\"Make sure uoy only esrever sdrow of ddo length\")\n➞ \"Make sure you only reverse words of odd length\"\n\nNotes\nThere is exactly one space between each w",
    "tags": [
      "strings",
      "loops",
      "formatting"
    ],
    "title": "Reverse the Odd Length Words"
  },
  {
    "_id": "XRAGxXj4KtakkvD3F",
    "difficulty": 2.0677966101694913,
    "language": "java",
    "summary": "lPaeesh le pemu mnxit ehess rtnisg! Oh, sorry, that was supposed to say: Please help me unmix these strings!\n\nSomehow my strings have all become mixed up; every pair of characters has been swapped. Help me undo this so I can understand my strings again.\n\nExamples\nunmix(\"123456\") ➞ \"214365\"\n\nunmix(\"hTsii  s aimex dpus rtni.g\") ➞ \"This is a mixed up string.\"\n\nun",
    "tags": [
      "strings",
      "formatting"
    ],
    "title": "Unmix My Strings"
  },
  {
    "_id": "yX9Jd6s9eF75ZK43K",
    "difficulty": 2.0714285714285716,
    "language": "java",
    "summary": "For this challenge, you will be given an array as the following:\n\n[[3], 4, [2], [5], 1, 6]\n\nBy definition, the array has elements that's either an integer or an array containing an integer. We can clearly see that this array can reasonably be sorted according to \"the content of the elements\" as:\n\n[1, [2],  [3], 4, [5], 6]\n\nCreate a function that, given an arra",
    "tags": [
      "sorting",
      "arrays",
      "language_fundamentals"
    ],
    "title": "Sort The Unsortable"
  },
  {
    "_id": "EiTYFd9jwghDz3aoG",
    "difficulty": 2.0729166666666665,
    "language": "java",
    "summary": "Create a function that reorders the digits of each numerical element in an array based on ascending (asc) or descending (desc) order.\n\nExamples\nreorderDigits([515, 341, 98, 44, 211], \"asc\") ➞ [155, 134, 89, 44, 112]\n\nreorderDigits([515, 341, 98, 44, 211], \"desc\") ➞ [551, 431, 98, 44, 211]\n\nreorderDigits([63251, 78221], \"asc\") ➞ [12356, 12278]\n\nreorderDigits([6",
    "tags": [
      "functional_programming",
      "higher_order_functions",
      "arrays",
      "sorting"
    ],
    "title": "Reorder Digits"
  },
  {
    "_id": "E9AHcnWg7fDfardLF",
    "difficulty": 2.0748129675810474,
    "language": "java",
    "summary": "A string is an almost-palindrome if, by changing only one character, you can make it a palindrome. Create a function that returns true if a string is an almost-palindrome and false otherwise.\n\nExamples\nalmostPalindrome(\"abcdcbg\") ➞ true\n// Transformed to \"abcdcba\" by changing \"g\" to \"a\".\n\nalmostPalindrome(\"abccia\") ➞ true\n// Transformed to \"abccba\" by changing",
    "tags": [
      "strings",
      "validation"
    ],
    "title": "Almost Palindrome"
  },
  {
    "_id": "hYq8J8HJM3pwCFKiZ",
    "difficulty": 2.075,
    "language": "java",
    "summary": "Create a function which validates whether a given array alternates between positive and negative numbers.\n\nExamples\nalternateSign([3, -2, 5, -5, 2, -8]) ➞ true\n\nalternateSign([-6, 1, -1, 4, -3]) ➞ true\n\nalternateSign([4, 4, -2, 3, -6, 10]) ➞ false\n\nNotes\n Lists can be of any length.\n It doesn't matter if an array begins/ends with a positive or negative, as lon",
    "tags": [
      "arrays",
      "numbers",
      "loops",
      "validation"
    ],
    "title": "Positives and Negatives"
  },
  {
    "_id": "gBNu2G5Lk5iv22pye",
    "difficulty": 2.075268817204301,
    "language": "java",
    "summary": "Create a function that converts Celsius to Fahrenheit and vice versa.\n\nExamples\nconvert(\"35C\") ➞ \"95F\"\n\nconvert(\"19F\") ➞ \"-7C\"\n\nconvert(\"33\") ➞ \"Error\"\n\nNotes\nRound to the nearest integer.\nIf the input is incorrect, return \"Error\".\nFor the formulae to convert back and forth, check the Resources tab.",
    "tags": [
      "algorithms",
      "numbers",
      "math",
      "control_flow"
    ],
    "title": "Temperature Converter"
  },
  {
    "_id": "LJDcfKERoPe8ERXG5",
    "difficulty": 2.076923076923077,
    "language": "java",
    "summary": "Write a function that takes the coordinates of three points and returns the perimeter of the triangle. The given points are the vertices of a triangle on a two-dimensional plane.\n\nExamples\nperimeter(arr[0]={15, 7}, arr[1]={5, 22}, arr[2]={11, 1}) ➞ 47.08\n\nperimeter(arr[0]={0, 0}, arr[1]={0, 1}, arr[2]={1, 0}) ➞ 3.41\n\nperimeter(arr[0]={-10, -10}, arr[1]={10, 10",
    "tags": [
      "algebra",
      "arrays",
      "geometry",
      "math"
    ],
    "title": "Geometry 3: Perimeter of a Triangle"
  },
  {
    "_id": "v9YKCBnGLJh8ZobKj",
    "difficulty": 2.076923076923077,
    "language": "java",
    "summary": "Write a method that accepts two integer parameters rows and cols. The output is a comma-separated grid of numbers displayed in column-major order, meaning the numbers shown increase sequentially down each column and wrap to the top of the next column to the right once the bottom of the current column is reached.\n\nExamples\nprintGrid(3, 6) ➞ \"\n  1, 4, 7, 10, 13,",
    "tags": [
      "loops",
      "language_fundamentals"
    ],
    "title": "Print Grid"
  },
  {
    "_id": "sjsHWXs7fNStCdrNr",
    "difficulty": 2.0779220779220777,
    "language": "java",
    "summary": "A number is said to be Harshad if it's exactly divisible by the sum of its digits. Create a function that determines whether a number is a Harshad or not.\n\nExamples\nisHarshad(75) ➞ false\n// 7 + 5 = 12\n// 75 is not exactly divisible by 12\n\nisHarshad(171) ➞ true\n// 1 + 7 + 1 = 9\n// 9 exactly divides 171\n\nisHarshad(481) ➞ true\n\nisHarshad(89) ➞ false\n\nisHarshad(51",
    "tags": [
      "recursion",
      "strings",
      "numbers",
      "math",
      "validation"
    ],
    "title": "Recursion: Harshad Number"
  },
  {
    "_id": "g5n85W62rJqZakMry",
    "difficulty": 2.078014184397163,
    "language": "java",
    "summary": "Create a function which replaces all the x's in the string in the following ways:\n\nReplace all x's with \"cks\" UNLESS:\nThe word begins with \"x\", therefore replace it with \"z\".\nThe word is just the letter \"x\", therefore replace it with \"ecks\".\n\nExamples\nxPronounce(\"Inside the box was a xylophone\") ➞ \"Inside the bocks was a zylophone\"\n\nxPronounce(\"The x ray is ex",
    "tags": [
      "strings",
      "formatting",
      "conditions",
      "regex"
    ],
    "title": "Pronouncing the Xs"
  },
  {
    "_id": "zZxPQRjn8q2iB9Biv",
    "difficulty": 2.0789473684210527,
    "language": "java",
    "summary": "Create a function that takes a number and returns its multiplicative persistence, which is the number of times you must multiply the digits in num until you reach a single digit.\n\nExamples\nbugger(39) ➞ 3\n// Because 3 * 9 = 27, 2 * 7 = 14, 1 * 4 = 4 and 4 has only one digit.\n\nbugger(999) ➞ 4\n// Because 9 * 9 * 9 = 729, 7 * 2 * 9 = 126, 1 * 2 * 6 = 12, and final",
    "tags": [
      "numbers",
      "math",
      "loops",
      "recursion"
    ],
    "title": "Persistent Little Bugger"
  },
  {
    "_id": "NGnsMw8CG8gxEFW7w",
    "difficulty": 2.0792079207920793,
    "language": "java",
    "summary": "We can assign a value to each character in a word, based on their position in the alphabet (a = 1, b = 2, ... , z = 26).  A balanced word is one where the sum of values on the left-hand side of the word equals the sum of values on the right-hand side. For odd length words, the middle character (balance point) is ignored.\n\nWrite a function that returns true if ",
    "tags": [
      "strings",
      "validation"
    ],
    "title": "Balanced Words"
  },
  {
    "_id": "vuxkHGZg8fuWCivPH",
    "difficulty": 2.0795454545454546,
    "language": "java",
    "summary": "Write a function that returns true if you can use the letters of the first string to create the second string. Letters are case sensitive.\n\nExamples\ncanBuild(\"aPPleAL\", \"PAL\") ➞ true\n\ncanBuild(\"aPPleAL\", \"apple\") ➞ false\n\ncanBuild(\"shortCAKE\", \"cakey\") ➞ false\n\ncanBuild(\"a\", \"\") ➞ true\n\nNotes\nN/A",
    "tags": [
      "strings",
      "validation"
    ],
    "title": "Ransom Letter"
  },
  {
    "_id": "jc7nh6xMSZTBYvndz",
    "difficulty": 2.0833333333333335,
    "language": "java",
    "summary": "A word is alphabetically sorted if all of the letters in it are in consecutive alphabetical order. Some examples of alphabetically sorted words: abhors (a is before b, b is before h, h is before o, etc.), ghost, accent, hoop.\n\nCreate a function that takes in a sentence as input and returns true if there is at least one alphabetically sorted word inside that ha",
    "tags": [
      "sorting",
      "strings",
      "validation",
      "regex"
    ],
    "title": "Alphabetically Sorted"
  },
  {
    "_id": "mc6KcMGkrSWP88dGu",
    "difficulty": 2.0833333333333335,
    "language": "java",
    "summary": "Create a function that takes in a number as a string n and returns the number without trailing and leading zeros.\n\nTrailing Zeros are the zeros after a decimal point which don't affect the value\n(e.g. the last three zeros in 3.4000 and 3.04000).\nLeading Zeros are the zeros before a whole number which don't affect the value (e.g. the first three zeros in 000234",
    "tags": [
      "strings",
      "formatting",
      "regex",
      "numbers"
    ],
    "title": "Remove Trailing and Leading Zeros"
  },
  {
    "_id": "4hZ9cHgvkZ94sr2ae",
    "difficulty": 2.085603112840467,
    "language": "java",
    "summary": "Create a function that takes an array of increasing letters and return the missing letter.\n\nExamples\nmissingLetter([\"a\", \"b\", \"c\", \"e\", \"f\", \"g\"]) ➞ \"d\"\n\nmissingLetter([\"O\", \"Q\", \"R\", \"S\"]) ➞ \"P\"\n\nmissingLetter([\"t\", \"u\", \"v\", \"w\", \"x\", \"z\"]) ➞ \"y\"\n\nmissingLetter([\"m\", \"o\"]) ➞ \"n\"\n\nNotes\nTests will always have exactly one letter missing.\nThe length of the test",
    "tags": [
      "math",
      "arrays",
      "algorithms"
    ],
    "title": "Find the Missing Letter"
  },
  {
    "_id": "33tRK98geLPcf73PF",
    "difficulty": 2.0859375,
    "language": "java",
    "summary": "Create a function that transforms sentences ending  with multiple question marks ? or exclamation marks ! into a sentence only ending with one.\n\nExamples\nnoYelling(\"What went wrong?????????\") ➞ \"What went wrong?\"\n\nnoYelling(\"Oh my goodness!!!\") ➞ \"Oh my goodness!\"\n\nnoYelling(\"I just!!! can!!! not!!! believe!!! it!!!\") ➞ \"I just!!! can!!! not!!! believe!!! it!\"",
    "tags": [
      "strings",
      "regex",
      "recursion"
    ],
    "title": "No Yelling"
  },
  {
    "_id": "Bt6tuyqL7ESZHpsec",
    "difficulty": 2.08955223880597,
    "language": "java",
    "summary": "Write a function that swaps the first pair (1st and 2nd characters) with the second pair (3rd and 4th characters) for every quadruplet substring.\n\nExamples\nswapTwo(\"ABCDEFGH\") ➞ \"CDABGHEF\"\n\nswapTwo(\"AABBCCDDEEFF\") ➞ \"BBAADDCCFFEE\"\n\nswapTwo(\"munchkins\") ➞ \"ncmuinhks\"\n\nswapTwo(\"FFGGHHI\") ➞ \"GGFFHHI\"\n\nNotes\nKeep leftover strings in the same order.",
    "tags": [
      "regex",
      "strings"
    ],
    "title": "Swapping Two by Two"
  },
  {
    "_id": "AudsydHhvWpCCSuaN",
    "difficulty": 2.090909090909091,
    "language": "java",
    "summary": "Given two strings, s1 and s2, select only the characters in each string where the character in the same position in the other string is in uppercase. Return these as a single string.\n\nTo illustrate, given the strings s1 = \"heLLo\" and s2 = \"GUlp\", we select the letters \"he\" from s1, because \"G\" and \"U\" are uppercase. We then select \"lp\" from s2, because \"LL\" is",
    "tags": [
      "strings",
      "formatting"
    ],
    "title": "A Capital Challenge"
  },
  {
    "_id": "MRArkoYdmsxeGAu2s",
    "difficulty": 2.0930232558139537,
    "language": "java",
    "summary": "You prepare a list to send to the insurance company. As you finish, you notice you misformatted it. Given an object with at least one key/value pair, convert all the values to numbers.\n\nExamples\nconvertToNumber({ \"piano\"=\"200\" }) ➞ { \"piano\"=200 }\n\nconvertToNumber({ \"piano\"=\"200\", \"tv\"=\"300\" }) ➞ { \"piano\"=200, \"tv\"=300 }\n\nconvertToNumber({ \"piano\"=\"200\", \"tv\"",
    "tags": [
      "objects",
      "loops",
      "arrays",
      "numbers"
    ],
    "title": "Burglary Series (06): Convert to Number"
  },
  {
    "_id": "8SHAyg8kdX8y72S3z",
    "difficulty": 2.0943396226415096,
    "language": "java",
    "summary": "Create a function that takes an array and finds the integer which appears an odd number of times.\n\nExamples\nfindOdd([1, 1, 2, -2, 5, 2, 4, 4, -1, -2, 5]) ➞ -1\n\nfindOdd([20, 1, 1, 2, 2, 3, 3, 5, 5, 4, 20, 4, 5]) ➞ 5\n\nfindOdd([10]) ➞ 10\n\nNotes\nThere will always only be one integer that appears an odd number of times.",
    "tags": [
      "math",
      "loops",
      "arrays",
      "bit_operations"
    ],
    "title": "Find the Odd Integer"
  },
  {
    "_id": "HjvecTb3aFMjJ59sB",
    "difficulty": 2.095890410958904,
    "language": "java",
    "summary": "Create two functions toCamelCase() and toSnakeCase() that each take a single string and convert it into either camelCase or snake_case. If you're not sure what these terms mean, check the Resources tab above.\n\nExamples\ntoCamelCase(\"hello_edabit\") ➞ \"helloEdabit\"\n\ntoSnakeCase(\"helloEdabit\") ➞ \"hello_edabit\"\n\ntoCamelCase(\"ismodalopen\") ➞ \"isModalOpen\"\n\ntoSnakeCa",
    "tags": [
      "algorithms",
      "regex",
      "formatting",
      "strings"
    ],
    "title": "camelCase  ⇄  snake_case"
  },
  {
    "_id": "n3Sw2MEa4TkEhthgB",
    "difficulty": 2.0961538461538463,
    "language": "java",
    "summary": "Hermione has come up with a precise formula for determining whether or not a phrase was ssspoken by a parssseltongue (a reference from the Harry Potter universe; the language of ssserpents and those who can converse with them).\n\nEach word in a sssentence must contain either:\n\nTwo or more consecutive instances of the letter \"s\" (i.e. must be together ss..), or.",
    "tags": [
      "strings",
      "validation",
      "regex"
    ],
    "title": "Parseltongue"
  },
  {
    "_id": "F2Kizgj7QxSab7R7p",
    "difficulty": 2.1,
    "language": "java",
    "summary": "Write a function that returns the closest palindrome number to an integer. If two palindrome numbers tie in absolute distance, return the smaller number.\n\nExamples\nclosestPalindrome(887) ➞ 888\n\nclosestPalindrome(100) ➞ 99\n// 99 and 101 are equally distant, so we return the smaller palindrome.\n\nclosestPalindrome(888) ➞ 888\n\nclosestPalindrome(27) ➞ 22\n\nNotes\nIf ",
    "tags": [
      "numbers",
      "loops"
    ],
    "title": "Closest Palindrome Number"
  },
  {
    "_id": "AkQseRG6jtznJH9bb",
    "difficulty": 2.1012658227848102,
    "language": "java",
    "summary": "Body Mass Index (BMI) is found by taking your weight in kilograms and dividing by the square of your height in meters. The BMI categories are:\n\nUnderweight: <18.5\nNormal weight: 18.5–24.9\nOverweight: 25–29.9\nObesity: BMI of 30 or greater\n\nCreate a function that will accept weight and height (in kilos, pounds, meters, or inches) and return the BMI and the assoc",
    "tags": [
      "strings",
      "math"
    ],
    "title": "Body Mass Index"
  },
  {
    "_id": "Eiyu2SZk9rgdp5gZd",
    "difficulty": 2.1018518518518516,
    "language": "java",
    "summary": "You are given an input list of strings, ordered by ascending length.\n\nWrite a function that returns True if, for each pair of consecutive strings, the second string can be formed from the first by adding a single letter either at the beginning or end.\n\nExamples\ncan_build([\"a\", \"at\", \"ate\", \"late\", \"plate\", \"plates\"]) ➞ True\n\ncan_build([\"a\", \"at\", \"ate\", \"late\"",
    "tags": [
      "strings",
      "validation",
      "arrays"
    ],
    "title": "Building up a Word"
  },
  {
    "_id": "mtrBW4w2Bkum4bGt5",
    "difficulty": 2.105769230769231,
    "language": "java",
    "summary": "Create a function that will remove any repeated character(s) in a word passed to the function. Not just consecutive characters, but characters repeating anywhere in the string.\n\nExamples\nunrepeated(\"teshahset\") ➞ \"tesha\"\n\nunrepeated(\"hello\") ➞ \"helo\"\n\nunrepeated(\"aaaaa\") ➞ \"a\"\n\nunrepeated(\"WWE!!!\") ➞ \"WE!\"\n\nunrepeated(\"call 911\") ➞ \"cal 91\"\n\nNotes\nNo more than",
    "tags": [
      "strings",
      "data_structures"
    ],
    "title": "Remove Repeated Characters"
  },
  {
    "_id": "xhhLGZzhwvkN6AR29",
    "difficulty": 2.106060606060606,
    "language": "java",
    "summary": "Find the index of a string within a hex encoded string.\n\nYou will be given a string which needs to be found in another string which has previously been translated into hex. You will need to return the first index of the needle within the hex encoded string.\n\nExamples\nfirstIndex(\"68 65 6c 6c 6f 20 77 6f 72 6c 64\", \"world\") ➞ 6\n\nfirstIndex(\"47 6f 6f 64 62 79 65",
    "tags": [
      "formatting",
      "functional_programming"
    ],
    "title": "Needle in a Hex String"
  },
  {
    "_id": "Ly8iQqDfaouRLgKNb",
    "difficulty": 2.111111111111111,
    "language": "java",
    "summary": "Create a recursive function that determines whether a word is a palindrome or not.\n\nExamples\nisPalindrome(\"madam\") ➞ true\n\nisPalindrome(\"adieu\") ➞ false\n\nisPalindrome(\"rotor\") ➞ true\n\nNotes\nAll inputs are in lowercase.\nYou are expected to solve this challenge via recursion.\nYou can check on the Resources tab for more details about recursion in Java.\nIf you thi",
    "tags": [
      "recursion",
      "strings",
      "validation"
    ],
    "title": "Recursion: Palindrome Word"
  },
  {
    "_id": "vtW558tXEYFQGv27S",
    "difficulty": 2.1125,
    "language": "java",
    "summary": "Create a function that returns true if a given inequality expression is correct and false otherwise.\n\nExamples\ncorrectSigns(\"3  44 > 33 > 1\") ➞ false\n\ncorrectSigns(\"1  3\") ➞ true\n\nNotes\nN/A",
    "tags": [
      "strings",
      "regex",
      "validation"
    ],
    "title": "Correct Inequality Signs"
  },
  {
    "_id": "6mLZjPrNFrfGfdwqa",
    "difficulty": 2.1149425287356323,
    "language": "java",
    "summary": "A magic sigil is a glyph which represents a desire one wishes to manifest in their lives. There are many ways to create a sigil, but the most common is to write out a specific desire (e.g. \"I HAVE WONDERFUL FRIENDS WHO LOVE ME\"), remove all vowels, remove any duplicate letters (keeping the last occurence), and then design a glyph from what remains.\n\nUsing the",
    "tags": [
      "strings",
      "loops",
      "formatting",
      "regex"
    ],
    "title": "Magic Sigil Generator"
  },
  {
    "_id": "jfeWP9tjtwNeRu4WG",
    "difficulty": 2.1153846153846154,
    "language": "java",
    "summary": "Create two functions:\n\nThe first is isOdd() to check if a given number is odd using bitwise operator.\nThe second is isEven() to check if a given input is even using regular expressions.\n\nIMPORTANT\nThe use of the modulo (%) operator is not allowed.\n\nExamples\nisOdd(3) ➞ \"Yes\"\n// Use Bitwise Operator\n\nisOdd(58) ➞ \"No\"\n// Use Bitwise Operator\n\nisEven(\"0\") ➞ \"Yes\"",
    "tags": [
      "conditions",
      "regex",
      "bit_operations",
      "validation"
    ],
    "title": "Bitwise Operator to Check Odd, Regular Expression to Check Even"
  },
  {
    "_id": "YuZYMkwnJpALmHELB",
    "difficulty": 2.118279569892473,
    "language": "java",
    "summary": "Write a function that returns the number of ways a person can climb n stairs, where the person may only climb 1 or 2 steps at a time.\n\nTo illustrate, if n = 4 there are 5 ways to climb:\n[1, 1, 1, 1]\n[2, 1, 1]\n[1, 2, 1]\n[1, 1, 2]\n[2, 2]\n\nExamples\nwaysToClimb(1) ➞ 1\n\nwaysToClimb(2) ➞ 2\n\nwaysToClimb(5) ➞ 8\n\nNotes\nA staircase of height 0 should return 1.",
    "tags": [
      "recursion",
      "algorithms"
    ],
    "title": "Staircase of Recursion"
  },
  {
    "_id": "vNszi3mbJA5BhgGFX",
    "difficulty": 2.1194029850746268,
    "language": "java",
    "summary": "Create a function that takes an array of non-negative integers and strings and return a new array without the strings.\n\nExamples\nfilterArray([1, 2, \"a\", \"b\"]) ➞ [1, 2]\n\nfilterArray([1, \"a\", \"b\", 0, 15]) ➞ [1, 0, 15]\n\nfilterArray([1, 2, \"aasf\", \"1\", \"123\", 123]) ➞ [1, 2, 123]\n\nNotes\nZero is a non-negative integer.\nThe given array only has integers and strings.",
    "tags": [
      "loops",
      "arrays",
      "formatting"
    ],
    "title": "Filter out Strings from an Array"
  },
  {
    "_id": "42DtofyzmZXjWXCtw",
    "difficulty": 2.120879120879121,
    "language": "java",
    "summary": "Starting from the left side of an integer, adjacent digits pair up in \"battle\" and the larger digit wins. If two digits are the same, they both lose. A lone digit automatically wins.\n\nCreate a function that returns the victorious digits.\n\nTo illustrate:\nbattleOutcome(578921445) ➞ 7925\n// [57]: 7 wins; [89] 9 wins; [21] 2 wins;\n// [44] neither wins; 5 (automati",
    "tags": [
      "numbers",
      "games",
      "loops"
    ],
    "title": "Digits Battle!"
  },
  {
    "_id": "5snfPLPbvjAsZ5kjo",
    "difficulty": 2.121495327102804,
    "language": "java",
    "summary": "Write a function that returns the number of times you must carry a digit when you sum together two integers.\n\nExamples\ncarryDigits(36, 135) ➞ 1\n// You carry the 1 when you sum 6 and 5 together.\n\ncarryDigits(671, 329) ➞ 3\n\ncarryDigits(1111, 3333) ➞ 0\n\ncarryDigits(53214, 56905) ➞ 3\n\nNotes\nCount all carry operations (even those on leading digits).",
    "tags": [
      "numbers",
      "math",
      "control_flow"
    ],
    "title": "Carrying the Digits"
  },
  {
    "_id": "qE9gCJtrtcMurvQtT",
    "difficulty": 2.1228070175438596,
    "language": "java",
    "summary": "You have a pack of 5 randomly numbered cards, which can range from 0-9. You can win if you can produce a higher two-digit number from your cards than your opponent. Return true if your cards win that round.\n\nExamples\nwinRound([2, 5, 2, 6, 9], [3, 7, 3, 1, 2]) ➞ true\n// Your cards can make the number 96\n// Your opponent can make the number 73\n// You win the rou",
    "tags": [
      "arrays",
      "numbers",
      "games",
      "validation"
    ],
    "title": "Numbered Cards"
  },
  {
    "_id": "ENozFXdPz9YTTHdps",
    "difficulty": 2.124031007751938,
    "language": "java",
    "summary": "Create a function that takes a string and returns the number of alphanumeric characters that occur more than once.\n\nExamples\nduplicateCount(\"abcde\") ➞ 0\n\nduplicateCount(\"aabbcde\") ➞ 2\n\nduplicateCount(\"Indivisibilities\") ➞ 2\n\nduplicateCount(\"Aa\") ➞ 0\n// Case sensitive\n\nNotes\nDuplicate characters are case sensitive.\nThe input string will contain only alphanumeri",
    "tags": [
      "strings",
      "validation",
      "interview"
    ],
    "title": "Count the Number of Duplicate Characters"
  },
  {
    "_id": "AQr6ZPvSWzJ2cPTGt",
    "difficulty": 2.125,
    "language": "java",
    "summary": "Create a function that reverses letters in a string but keeps digits in their current order.\n\nExamples\nreverse(\"ab89c\") ➞ \"cb89a\"\n\nreverse(\"jkl5mn923o\") ➞ \"onm5lk923j\"\n\nreverse(\"123a45\") ➞ \"123a45\"\n\nNotes\nN/A",
    "tags": [
      "strings",
      "logic",
      "formatting",
      "loops"
    ],
    "title": "Reverse Letters, Keep Numbers in Place"
  },
  {
    "_id": "c4kGNF83S6Mzb75x9",
    "difficulty": 2.125,
    "language": "java",
    "summary": "In this challenge, you have to establish if a positive integer is a Modest number, accordingly to the following algorithm:\nDivide the number into two left and right partitions.\nFor each combination of left and right parts, you have to check if a condition is true: the remainder of the number divided by the right part is equal to the left part.\nIf at least a co",
    "tags": [
      "numbers",
      "algorithms",
      "loops",
      "validation"
    ],
    "title": "The Humble Sequence of the Modest Numbers"
  },
  {
    "_id": "hYKyiwgw9Ni5ELtDL",
    "difficulty": 2.125,
    "language": "java",
    "summary": "Suppose a hash # represents the BACKSPACE key being pressed. Write a function that transforms a string containing # into a string without any #.\n\nExamples\nerase(\"he##l#hel#llo\") ➞ \"hello\"\n\nerase(\"major# spar##ks\") ➞ \"majo spks\"\n\nerase(\"si###t boy\") ➞ \"t boy\"\n\nerase(\"####\") ➞ \"\"\n\nNotes\nIn addition to characters, backspaces can also remove whitespaces.\nIf the nu",
    "tags": [
      "strings",
      "regex",
      "scope"
    ],
    "title": "Backspace Attack"
  },
  {
    "_id": "ka4Mk98LW4TEbcqzH",
    "difficulty": 2.126984126984127,
    "language": "java",
    "summary": "Create a function that takes a string as an argument and returns true if each letter in the string is surrounded by a plus sign.  Return false otherwise.\n\nExamples\nplusSign(\"+f+d+c+#+f+\") ➞ true\n\nplusSign(\"+d+=3=+s+\") ➞ true\n\nplusSign(\"f++d+g+8+\") ➞ false\n\nplusSign(\"+s+7+fg+r+8+\") ➞ false\n\nNotes\nFor clarity, each letter must have a plus sign on both sides.",
    "tags": [
      "regex",
      "strings",
      "conditions",
      "validation"
    ],
    "title": "Know Your Neighbor"
  },
  {
    "_id": "AGoRjorDpas63gqt6",
    "difficulty": 2.129032258064516,
    "language": "java",
    "summary": "You are given two inputs:\n\nAn array of abbreviations.\nAn array of words.\n\nWrite a function that returns true if each abbreviation uniquely identifies a word, and false otherwise.\n\nExamples\nuniquely([\"ho\", \"h\", \"ha\"], [\"house\", \"hope\", \"happy\"]) ➞ false\n// \"ho\" and \"h\" are ambiguous and can identify either \"house\" or \"hope\"\n\nuniquely([\"x\", \"l\", \"t\"], [\"xavier\",",
    "tags": [
      "strings",
      "higher_order_functions"
    ],
    "title": "Abbreviations Unique?"
  },
  {
    "_id": "YHa95Qi8yXTu8oQLL",
    "difficulty": 2.130434782608696,
    "language": "java",
    "summary": "Create a function which counts the cardinality of  lone 1s  in a given number. Lone means the number doesn't appear more than once in a row.\n\nExamples\ncountLoneOnes(101) ➞ 2\n\ncountLoneOnes(1191) ➞ 1\n\ncountLoneOnes(1111) ➞ 0\n\ncountLoneOnes(462) ➞ 0\n\nNotes\nTests will only include positive whole numbers.",
    "tags": [
      "algorithms",
      "loops",
      "numbers",
      "regex"
    ],
    "title": "Count the Lone Ones"
  },
  {
    "_id": "buctumjkfFWGx5iP6",
    "difficulty": 2.130434782608696,
    "language": "java",
    "summary": "Write a function that removes the last vowel in each word in a sentence.\n\nExamples\nremoveLastVowel(\"Those who dare to fail miserably can achieve greatly.\")\n➞ \"Thos wh dar t fal miserbly cn achiev gretly.\"\n\nremoveLastVowel(\"Love is a serious mental disease.\")\n➞ \"Lov s  serios mentl diseas\"\n\nremoveLastVowel(\"Get busy living or get busy dying.\")\n➞ \"Gt bsy livng r",
    "tags": [
      "formatting",
      "strings"
    ],
    "title": "Remove the Last Vowel"
  },
  {
    "_id": "qaMkkFAaTJzbmkwwe",
    "difficulty": 2.1315789473684212,
    "language": "java",
    "summary": "Write a Java program that produces the following outputs.\n\nExamples\npyramid(2) ➞\n////\\\\\\\\\n\npyramid(3) ➞\n////////\\\\\\\\\\\\\\\\\n////**\\\\\\\\\n\npyramid(4) ➞\n////////////\\\\\\\\\\\\\\\\\\\\\\\\\n////////**\\\\\\\\\\\\\\\\\n////**\\\\\\\\\n\nNotes\nOnly positive integers >= 2.\nLast line ending should contain \\n",
    "tags": [
      "loops",
      "language_fundamentals"
    ],
    "title": "Shapes #1: Pyramid Figure"
  },
  {
    "_id": "BJkkDwsZrB8SFTAQ2",
    "difficulty": 2.1382978723404253,
    "language": "java",
    "summary": "Create a function that takes a string and replaces every letter with the letter following it in the alphabet (\"c\" becomes \"d\", \"z\" becomes \"a\", \"b\" becomes \"c\", etc). Then capitalize every vowel (a, e, i, o, u) and return the new modified string.\n\nExamples\nmangle(\"Fun times!\") ➞ \"GvO Ujnft!\"\n\nmangle(\"The quick brown fox.\") ➞ \"UIf rvjdl cspxO gpy.\"\n\nmangle(\"Ome",
    "tags": [
      "strings",
      "formatting",
      "regex"
    ],
    "title": "Mangle the String"
  },
  {
    "_id": "sHWvPRwcY93w6qGNB",
    "difficulty": 2.13953488372093,
    "language": "java",
    "summary": "Create a function that takes in a sentence as input and returns the most common last vowel in the sentence as a single character string.\n\nExamples\ncommonLastVowel(\"Hello World!\") ➞ \"o\"\n\ncommonLastVowel(\"Watch the characters dance!\") ➞ \"e\"\n\ncommonLastVowel(\"OOI UUI EEI AAI\") ➞ \"i\"\n\nNotes\nThere will only be one common last vowel in each sentence.\nIf the word has",
    "tags": [
      "strings",
      "algorithms"
    ],
    "title": "Most Common Last Vowel"
  },
  {
    "_id": "phxxGdTJraPEQmKdq",
    "difficulty": 2.141304347826087,
    "language": "java",
    "summary": "Write a function that calculates overtime and pay associated with overtime.\nWorking 9 to 5: regular hours\nAfter 5pm is overtime\n\nYour function gets an array with 4 values:\nStart of working day, in decimal format, (24-hour day notation)\nEnd of working day. (Same format)\nHourly rate\nOvertime multiplier\n\nYour function should spit out:\n$ + earned that day (rounded",
    "tags": [
      "algebra",
      "arrays",
      "math",
      "numbers"
    ],
    "title": "Working 9 to 5"
  },
  {
    "_id": "gskWj3Zj45ovAomTb",
    "difficulty": 2.1463414634146343,
    "language": "java",
    "summary": "Create a function which takes in an encoded string and returns an object according to the following example:\n\nExamples\nparseCode(\"Tesha000Deep00014344\") ➞ {\n  \"firstName\"=\"Tesha\",\n  \"lastName\"=\"Deep\",\n  \"id\"=\"14344\"\n}\n\nparseCode(\"John000Doe000123\") ➞ {\n  \"firstName\"=\"John\",\n  \"lastName\"=\"Doe\",\n  \"id\"=\"123\"\n}\n\nparseCode(\"kevin0smith004331\") ➞ {\n  \"firstName\"=\"k",
    "tags": [
      "strings",
      "formatting",
      "sorting",
      "objects"
    ],
    "title": "Encoded String Parse"
  },
  {
    "_id": "Tzwb5uASZbKuESHhJ",
    "difficulty": 2.1470588235294117,
    "language": "java",
    "summary": "Write a function that pairs the first number in an array with the last, the second number with the second to last, etc.\n\nExamples\npairs([1, 1, 1, 1, 7, 2, 3, 2]) ➞ [[1, 2], [1, 3], [1, 2], [1, 7]]\n\npairs([5, 4, 4, 6, 6, 6, 4]) ➞ [[5, 4], [4, 6], [4, 6], [6, 6]]\n\npairs([1, 2, 3, 4, 5, 6, 7]) ➞ [[1, 7], [2, 6], [3, 5], [4, 4]]\n\npairs([1, 2, 3, 4, 5, 6]) ➞ [[1, 6",
    "tags": [
      "arrays",
      "loops"
    ],
    "title": "Beginning And End Pairs"
  },
  {
    "_id": "zcobRojF5p8DWkfiC",
    "difficulty": 2.1491228070175437,
    "language": "java",
    "summary": "Write a function that returns a character mapping from a word.\n\nExamples\ncharacterMapping(\"abcd\") ➞ [0, 1, 2, 3]\n\ncharacterMapping(\"abb\") ➞ [0, 1, 1]\n\ncharacterMapping(\"babbcb\") ➞ [0, 1, 0, 0, 2, 0]\n\ncharacterMapping(\"hmmmmm\") ➞ [0, 1, 1, 1, 1, 1]\n\nNotes\nStart your counter at 0, and increment by 1 each time you encounter a new character.\nIdentical characters s",
    "tags": [
      "data_structures",
      "strings"
    ],
    "title": "Unique Character Mapping"
  },
  {
    "_id": "ayvtiYuzTxkphRBxB",
    "difficulty": 2.15,
    "language": "java",
    "summary": "Create a function that converts 12-hour time to 24-hour time or vice versa. Return the output as a string.\n\nExamples\nconvertTime(\"12:00 am\") ➞ \"0:00\"\n\nconvertTime(\"6:20 pm\") ➞ \"18:20\"\n\nconvertTime(\"21:00\") ➞ \"9:00 pm\"\n\nconvertTime(\"5:05\") ➞ \"5:05 am\"\n\nNotes\nA 12-hour time input will be denoted with an am or pm suffix.\nA 24-hour input time contains no suffix.",
    "tags": [
      "strings",
      "dates",
      "formatting"
    ],
    "title": "12 vs 24 Hours"
  },
  {
    "_id": "PkqSq3ea2bfJvF6Tk",
    "difficulty": 2.150943396226415,
    "language": "java",
    "summary": "Given a string, return a sorted array of words formed from the first three letters, then the next three letters, shifting by only one.\n\nWorked Example\nthreeLetterCollection(\"edabit\") ➞ [\"abi\", \"bit\", \"dab\", \"eda\"]\n// 1st word: \"eda\"\n// 2nd word: \"dab\"\n// 3rd word: \"abi\"\n// 4th word: \"bit\"\n// Remember to sort the array!\n\nExamples\nthreeLetterCollection(\"tesha\")",
    "tags": [
      "loops",
      "strings",
      "arrays",
      "algorithms"
    ],
    "title": "Triple Letter Groupings"
  },
  {
    "_id": "BMpe6n3BSciWnt3fu",
    "difficulty": 2.1515151515151514,
    "language": "java",
    "summary": "Find out if a right-angled triangle can be made given some facts about the shape.\n\nGiven varying information about a shape, create a function that returns true if the shape could be a right-angle triangle and false if not.\nYou will be given an array of numbers and a string stating whether the numbers are angles or sides.\nThe information may indicate more than",
    "tags": [
      "math",
      "validation",
      "geometry"
    ],
    "title": "Is It A Right-Angled Triangle?"
  },
  {
    "_id": "ZoDHtyWfFPttuTiQR",
    "difficulty": 2.152173913043478,
    "language": "java",
    "summary": "Create a function that takes two strings and returns true if either of the strings appears at the very end of the other string. Return false otherwise. The character * is a wildcard, so it can take the place of any character.\n\nExamples\noverlap(\"ABC\", \"Ican'tsingmyABC\") ➞ true\n\noverlap(\"abc\", \"Ican'tsingmyABC\") ➞ true\n\noverlap(\"Ican'tsingmyABC\", \"abc\") ➞ true",
    "tags": [
      "conditions",
      "logic",
      "strings",
      "validation"
    ],
    "title": "Is One String in the Other?"
  },
  {
    "_id": "dreQhsnZJ7HGtsts5",
    "difficulty": 2.1538461538461537,
    "language": "java",
    "summary": "Create a function that recursively counts the integer's number of digits.\n\nExamples\ncount(318) ➞ 3\n\ncount(-92563) ➞ 5\n\ncount(4666) ➞ 4\n\ncount(-314890) ➞ 6\n\ncount(654321) ➞ 6\n\ncount(638476) ➞ 6\n\nNotes\nYou are expected to solve this challenge via recursion.\nYou can check on the Resources tab for more details about recursion in Java.\nAn iterative version of this",
    "tags": [
      "recursion",
      "math"
    ],
    "title": "Recursion: Integer Digits Count"
  },
  {
    "_id": "gdiL9PHcySFP74mnK",
    "difficulty": 2.1551724137931036,
    "language": "java",
    "summary": "Create a function that returns true if two lines rhyme and false otherwise. For the purposes of this exercise, two lines rhyme if the last word from each sentence contains the same vowels.\n\nExamples\ndoesRhyme(\"Sam I am!\", \"Green eggs and ham.\") ➞ true\n\ndoesRhyme(\"Sam I am!\", \"Green eggs and HAM.\") ➞ true\n// Capitalization and punctuation should not matter.\n\ndo",
    "tags": [
      "strings",
      "regex",
      "validation"
    ],
    "title": "Rhyme Time"
  },
  {
    "_id": "3xsxMziiw587r7xry",
    "difficulty": 2.156862745098039,
    "language": "java",
    "summary": "Write a function that takes a number n and a string s as arguments and returns the nth term of the Red/Yellow sequence. s will ask the function what to return, all, red or yellow.\n\nalt text\n\nExamples\nrySeq(2, \"all\") ➞ 5\n\nrySeq(3, \"yellow\") ➞ 8\n\nrySeq(28, \"red\") ➞ 55\n\nrySeq(1, \"blue\") ➞ -1\n\nNotes\nIf s is not \"all\", \"yellow\" or \"red\", return -1.\nIf n is 0, retur",
    "tags": [
      "algebra",
      "math",
      "numbers"
    ],
    "title": "The Red/Yellow Sequence"
  },
  {
    "_id": "Yr2kTTb6zf5PNx6DE",
    "difficulty": 2.156862745098039,
    "language": "java",
    "summary": "Create a function that takes a string and replaces every nth instance of oldchar with newchar. Your function will have four parameters:\n\ntxt — The original input text to be processed.\nnth — The nth instance to be replaced.\nold_char — The character being replaced.\nnewchar — The character replacing oldchar.\n\nIn other words, if txt is \"abababa\", nth is 3, oldchar",
    "tags": [
      "algorithms",
      "strings",
      "formatting",
      "regex"
    ],
    "title": "Replace Every Nth Instance of a Character"
  },
  {
    "_id": "8Je7AoNP8NxPDobm8",
    "difficulty": 2.1578947368421053,
    "language": "java",
    "summary": "Write a function that returns true if it's possible to build a phrase s1 using only the characters from another phrase s2.\n\nExamples\ncanBuild(\"got 2 go\", \"gogogo 2 today\") ➞ true\n\ncanBuild(\"sit on top\", \"its a moo point\") ➞ true\n\ncanBuild(\"long high add or\", \"highway road go long\") ➞ false\n\ncanBuild(\"fill tuck mid\", \"truck falls dim\") ➞ false\n\nNotes\nAll letter",
    "tags": [
      "strings",
      "validation"
    ],
    "title": "Fridge Poetry"
  },
  {
    "_id": "ACHoZjkBGijBvwbDP",
    "difficulty": 2.158536585365854,
    "language": "java",
    "summary": "Given a positive number x:\np = (p1, p2, …)\n// Set of prime factors of x\nIf the square of every item in p is also a factor of x, then x is said to be a powerful number.\n\nCreate a function that takes a number and returns true if it's powerful, false if it's not.\n\nExamples\nisPowerful(36) ➞ true\n// p = (2, 3) (prime factors of 36)\n// 2^2 = 4 (factor of 36)\n// 3^2 ",
    "tags": [
      "conditions",
      "math",
      "numbers",
      "validation"
    ],
    "title": "Powerful Numbers"
  },
  {
    "_id": "axspsW5aide7vzpnh",
    "difficulty": 2.161290322580645,
    "language": "java",
    "summary": "This is a reverse coding challenge. Normally you're given explicit directions with how to create a function. Here, you must generate your own function to satisfy the relationship between the inputs and outputs.\n\nYour task is to create a function that, when fed the inputs below, produce the sample outputs shown.\n\nExamples\n832 ➞ 594\n\n51 ➞ 36\n\n7977 ➞ 198\n\n1 ➞ 0\n\n",
    "tags": [
      "numbers",
      "math",
      "logic"
    ],
    "title": "Reverse Coding Challenge #5"
  },
  {
    "_id": "drRFWCuz8jWAPmFRj",
    "difficulty": 2.161290322580645,
    "language": "java",
    "summary": "Write a function that returns true if two arrays, when combined, form a consecutive sequence. A consecutive sequence is a sequence without any gaps in the integers, e.g. 1, 2, 3, 4, 5 is a consecutive sequence, but 1, 2, 4, 5 is not.\n\nExamples\nconsecutiveCombo([12, 13, 17, 19], [14, 16, 15, 18]) ➞ true\n\nconsecutiveCombo([7, 4, 5, 1], [2, 3, 6]) ➞ true\n\nconsecu",
    "tags": [
      "arrays",
      "validation"
    ],
    "title": "Combined Consecutive Sequence"
  },
  {
    "_id": "cb8wqy9qZjrq5wmp8",
    "difficulty": 2.1621621621621623,
    "language": "java",
    "summary": "Musical instruments have a range of notes to play, some instruments having a much larger range than others.\n\nGiven the following ranges for the instrument, create a function that returns true if a given note is within a given instrument's range. Otherwise, return false.\n\nInstrument | Range\n--- | ---\nPiccolo | D4-C7\nTuba | D1-F4\nGuitar | E3-E6\nPiano | A0-C8\nVio",
    "tags": [
      "conditions",
      "validation"
    ],
    "title": "Musical Instrument Note Ranges"
  },
  {
    "_id": "4HRk9MkZm4wNR6PZJ",
    "difficulty": 2.1621621621621623,
    "language": "java",
    "summary": "For this challenge, forget how to add two numbers together. The best explanation on what to do for this function is this meme:\n\nAlternative Text\n\nExamples\nmemeSum(26, 39) ➞ 515\n// 2+3 = 5, 6+9 = 15\n// 26 + 39 = 515\n\nmemeSum(122, 81) ➞ 1103\n// 1+0 = 1, 2+8 = 10, 2+1 = 3\n// 122 + 81 = 1103\n\nmemeSum(1222, 30277) ➞ 31499\n\nNotes\nN/A",
    "tags": [
      "numbers",
      "math"
    ],
    "title": "Meme Sum :)"
  },
  {
    "_id": "f72omtBYFEBotgdEX",
    "difficulty": 2.1639344262295084,
    "language": "java",
    "summary": "Create a function that takes a number and return a string with the number in expanded notation (AKA expanded form). See the resources tab for details on expanded notation.\n\nExamples\nexpand(13) ➞ \"10 + 3\"\n\nexpand(86) ➞ \"80 + 6\"\n\nexpand(17000000) ➞ \"10000000 + 7000000\"\n\nexpand(5325) ➞ \"5000 + 300 + 20 + 5\"\n\nNotes\nYou can expect only whole numbers greater than 0",
    "tags": [
      "math",
      "algorithms",
      "strings",
      "numbers"
    ],
    "title": "Express Number in Expanded Notation"
  },
  {
    "_id": "63GZYcgtT7XiSjsKL",
    "difficulty": 2.1666666666666665,
    "language": "java",
    "summary": "Create a function that takes a string of words and returns the highest scoring word. Each letter of a word scores points according to it's position in the alphabet: a = 1, b = 2, c = 3, etc.\n\nExamples\nword_rank(\"The quick brown fox.\") ➞ \"brown\"\n\nword_rank(\"Nancy is very pretty.\") ➞ \"pretty\"\n\nword_rank(\"Check back tomorrow, man!\") ➞ \"tomorrow\"\n\nword_rank(\"Wedne",
    "tags": [
      "algorithms",
      "strings",
      "arrays",
      "numbers"
    ],
    "title": "WordRank Scoring System"
  },
  {
    "_id": "GqqYA3RKuok5Pw2Bx",
    "difficulty": 2.1666666666666665,
    "language": "java",
    "summary": "Create a function that takes a string of 1's and 0's (binary) as an argument and return the equivalent decoded ASCII text. Characters can be in the range of \"00000000\" to \"11111111\", which means every eight digits of binary input represents a single character.\n\na = 01100001\nb = 01100010\nc = 01100011\n\nIf you were to combine these characters into the string \"abc",
    "tags": [
      "strings",
      "formatting"
    ],
    "title": "Binary To ASCII Conversion"
  },
  {
    "_id": "oXXBnHjXLAHKcvqXN",
    "difficulty": 2.169491525423729,
    "language": "java",
    "summary": "This challenge involves a series that can start with any string of digits. The next term in the series is found by adding the digits of the previous term, appending that sum to the previous term, and then truncating the leftmost digits so that the number of digits in the terms is always the same.\n\nLet's start with \"1234\". The sum of the digits is 10. Appending",
    "tags": [
      "loops",
      "strings"
    ],
    "title": "A Periodic Series"
  },
  {
    "_id": "NkatKxjHtPed4J3EF",
    "difficulty": 2.173076923076923,
    "language": "java",
    "summary": "What do the digits 0, 4, 6, 8, and 9 have in common? Well, they are whole numbers... and they are also hole numbers (not actually a thing until now). Hole numbers are numbers with holes in their shapes (8 is special in that it contains two holes).\n\n14 is a hole number with one hole. 88 is a hole number with four holes.\n\nYour task is to create a function with a",
    "tags": [
      "numbers",
      "strings",
      "algorithms"
    ],
    "title": "Hole Number Sequence"
  },
  {
    "_id": "YPgPqMa7adXdh2svk",
    "difficulty": 2.176470588235294,
    "language": "java",
    "summary": "Write a function that takes initial speed (v in m/s) and throw angle (a in degrees) and returns the maximum height and maximum range reached by javelin as a string.\n\nExamples\njavelinThrow(36.7, 45) ➞ \"Ymax=34m, Xmax=137m\"\n\njavelinThrow(51.3, 20) ➞ \"Ymax=16m, Xmax=172m\"\n\njavelinThrow(100.1, 89) ➞ \"Ymax=511m, Xmax=36m\"\n\nNotes\nJavelin starts moving at h=0m.\nGravi",
    "tags": [
      "physics",
      "math"
    ],
    "title": "Javelin Parabolic Throw"
  },
  {
    "_id": "mPJzNuYJoJmMiAWhh",
    "difficulty": 2.176470588235294,
    "language": "java",
    "summary": "Create a function that returns the whole of the first sentence which contains a specific word. Include the full stop at the end of the sentence.\n\nExamples\nfinal String str1 = \"For the love of Tesh. She is the love of my life. I am all hers.\";\nfinal String str2 = \"I have a cat. I have a mat. Things are going swell.\";\n\nsentenceSearcher(str1, \"LOVE\") ➞ \"For the l",
    "tags": [
      "strings",
      "regex",
      "loops"
    ],
    "title": "Sentence Searcher"
  },
  {
    "_id": "WmGeYLJbud69ezCew",
    "difficulty": 2.176470588235294,
    "language": "java",
    "summary": "Let's say that there exists a machine that gives out free coins, but with a twist!\n\nSeparating two people is a wall, and this machine is placed in such a way that both people are able to access it. Spending a coin in this machine will give the person on the other side 3 coins and vice versa.\n\nIf both people continually spend coins for each other (SHARING), the",
    "tags": [
      "loops",
      "algorithms",
      "interview",
      "language_fundamentals"
    ],
    "title": "Coin Co-Operation"
  },
  {
    "_id": "FTxGaCEDJaidPqs3Z",
    "difficulty": 2.1785714285714284,
    "language": "java",
    "summary": "A fulcrum of a list is an integer such that all elements to the left of it and all elements to the right of it sum to the same value. Write a function that finds the fulcrum of a list.\n\nTo illustrate:\nfindFulcrum([3, 1, 5, 2, 4, 6, -1]) ➞ 2\n// Since [3, 1, 5] and [4, 6, -1] both sum to 9\n\nExamples\nfindFulcrum([1, 2, 4, 9, 10, -10, -9, 3]) ➞ 4\n\nfindFulcrum([9,",
    "tags": [
      "arrays",
      "loops"
    ],
    "title": "Find The Fulcrum"
  },
  {
    "_id": "Cu6euwD8Mi2c7BAHd",
    "difficulty": 2.1818181818181817,
    "language": "java",
    "summary": "Brackets and parentheses in mathematical expressions have to conform to certain logical rules. Every opening bracket must have a closing mate somewhere further down the line. Although brackets can be nested, different types cannot overlap:\n\n([+3]-1) makes sense because each set of brackets contains or is contained by another set.\n([+3)-1] makes no sense becaus",
    "tags": [
      "logic",
      "validation"
    ],
    "title": "Bracket Logic"
  },
  {
    "_id": "rEuWBDwABDMo2rTSt",
    "difficulty": 2.183333333333333,
    "language": "java",
    "summary": "There are two types of potions:\n\nGrowing potion: \"A\"\nShrinking potion: \"B\"\n\nIf \"A\" immediately follows a digit, add 1 to the digit.\nIf \"B\" immediately follows a digit, subtract 1 from the digit.\n\nCreate a function that returns a string according to these rules, removing the potions once they've been consumed.\n\nExamples\nafterPotion(\"3A78B51\") ➞ \"47751\"\n// 3 gro",
    "tags": [
      "strings",
      "higher_order_functions"
    ],
    "title": "Growing and Shrinking Potions"
  },
  {
    "_id": "whdNuCbR69fpLhbBv",
    "difficulty": 2.1842105263157894,
    "language": "java",
    "summary": "The left shift operation is similar to multiplication by powers of two, thus, the process is repetitive and can be done recursively.\n\nSample calculation using the left shift operator ( << ):\n10 << 3 = 10 * 2^3 = 10 * 8 = 80\n-32 << 2 = -32 * 2^2 = -32 * 4 = -128\n5 << 2 = 5 * 2^2 = 5 * 4 = 20\n\nWrite a recursive function that mimics (without the use of <<) the le",
    "tags": [
      "recursion",
      "bit_operations",
      "numbers"
    ],
    "title": "Recursion: Left Shift by Powers of Two"
  },
  {
    "_id": "MfiTruQj2gtABxw5y",
    "difficulty": 2.1875,
    "language": "java",
    "summary": "Write a function that returns the closest chapter to the current page you are at. If two chapters are similarly close, return whichever has the higher page.\n\nExamples\nclosestToPage(new ArrayList >(\n  Arrays.asList(\n      new SimpleEntry(\"Chapter 1\", 1),\n      new SimpleEntry(\"Chapter 2\", 15),\n      new SimpleEntry(\"Chapter 3\", 37)\n)), 10) ➞ \"Chapter 2\"\n\ncloses",
    "tags": [
      "arrays",
      "strings",
      "numbers",
      "validation"
    ],
    "title": "Pages and Chapters"
  },
  {
    "_id": "rCkeAiRCpduosZ4Hj",
    "difficulty": 2.1923076923076925,
    "language": "java",
    "summary": "Create a function that returns true if each pair of adjacent numbers in an array shares at least one digit and false otherwise.\n\nExamples\nsharedDigits([12, 13, 17, 19, 79]) ➞ true\n// 12 and 13 share 1, 13 and 17 share 1 and etc.\n\nsharedDigits([33, 53, 6351, 12, 2242, 44]) ➞ true\n// 33 and 53 share 3, 53 and 6351 share 3 and 5, etc.\n\nsharedDigits([33, 44, 55, 6",
    "tags": [
      "arrays",
      "strings",
      "validation"
    ],
    "title": "Shared Digits"
  },
  {
    "_id": "5XfpX2EEgRGWQELEx",
    "difficulty": 2.2,
    "language": "java",
    "summary": "You will be given a collection of five cards (representing a player's hand in poker). If your hand contains at least one pair, return the card number of the highest pair (trivial if there only exists a single pair). Else, return \"\".\n\nExamples\nhighestPair([\"A\", \"A\", \"Q\", \"Q\", \"6\" ]) ➞ \"A\"\n\nhighestPair([\"J\", \"6\", \"3\", \"10\", \"8\"]) ➞ \"\"\n\nhighestPair([\"K\", \"7\", \"3\"",
    "tags": [
      "arrays",
      "conditions",
      "games",
      "loops"
    ],
    "title": "Highest Pair"
  },
  {
    "_id": "TSKay7qmB2KyrDwnK",
    "difficulty": 2.2,
    "language": "java",
    "summary": "A spoonerism is when the first letters / sounds of two words are transposed onto one another. Create a function that takes a two-word string and performs a spoonerism on the phrase.\n\nExamples\nspoonerise(\"history lecture\") ➞ \"listory hecture\"\n\nspoonerise(\"loud noises\") ➞ \"noud loises\"\n\nspoonerise(\"chow mein\") ➞ \"mow chein\"\n\nspoonerise(\"edabit rules!\") ➞ \"redabi",
    "tags": [
      "strings",
      "conditions",
      "regex"
    ],
    "title": "Spoonerisms"
  },
  {
    "_id": "q5tAZPFbLzuERDybw",
    "difficulty": 2.2,
    "language": "java",
    "summary": "In this challenge, you have to implement an algorithm to establish if a given positive integer num is a Happy number, and how many steps of the algorithm are needed to establish it.\n\nYou have to repeatedly transform the given num into the sum of its squared digits:\nIf after the transformation the new number is equal to 1, num is a Happy number and the algorith",
    "tags": [
      "algorithms",
      "numbers",
      "loops",
      "recursion"
    ],
    "title": "The Happy Function"
  },
  {
    "_id": "bmwpoeCybNWnBxn7M",
    "difficulty": 2.207547169811321,
    "language": "java",
    "summary": "Create a function that returns the simplified version of a fraction.\n\nExamples\nsimplify(\"4/6\") ➞ \"2/3\"\n\nsimplify(\"10/11\") ➞ \"10/11\"\n\nsimplify(\"100/400\") ➞ \"1/4\"\n\nsimplify(\"8/4\") ➞ \"2\"\n\nNotes\nA fraction is simplified if there are no common factors (except 1) between the numerator and the denominator. For example, 4/6 is not simplified, since 4 and 6 both share ",
    "tags": [
      "math",
      "strings",
      "validation"
    ],
    "title": "Simplified Fractions"
  },
  {
    "_id": "GPAXxz5EPgSMby3fd",
    "difficulty": 2.2083333333333335,
    "language": "java",
    "summary": "Write a function that returns true if every consecutive sequence of ones is followed by a consecutive sequence of zeroes of the same length.\n\nExamples\nsameLength(\"110011100010\") ➞ true\n\nsameLength(\"101010110\") ➞ false\n\nsameLength(\"111100001100\") ➞ true\n\nsameLength(\"111\") ➞ false\n\nNotes\nN/A",
    "tags": [
      "strings",
      "loops",
      "regex",
      "validation"
    ],
    "title": "Ones and Zeroes"
  },
  {
    "_id": "BdLPEtbChBG6nvYT6",
    "difficulty": 2.210526315789474,
    "language": "java",
    "summary": "A logarithm is kind of like reverse exponents. There is a base and a number in a logarithm. The point of a logarithm is to find out what power you have to raise for the base to get the number next to the base. For example:\n\nlog base 5 of 25 = x\n\nThis is the same thing as saying 5 raised to the power of x is 25, which is 2 (so x would be 2). Using this example,",
    "tags": [
      "algebra",
      "numbers",
      "math"
    ],
    "title": "Logarithms - Basic"
  },
  {
    "_id": "WbNwkvFJf63rTutWo",
    "difficulty": 2.212121212121212,
    "language": "java",
    "summary": "A Fibonacci string is a precedence of the Fibonacci series. It works with any two characters of the English alphabet (as opposed to the numbers 0 and 1 in the Fibonacci series) as its initial items and concatenates them together as it progresses similarly to that of the Fibonacci series.\n\nExamples\ngenerateString(3, [\"j\", \"h\"]) ➞ \"j, h, hj\"\n\ngenerateString(5, [",
    "tags": [
      "arrays",
      "strings"
    ],
    "title": "Fibonacci String"
  },
  {
    "_id": "bPSi354LyfXhA6RXf",
    "difficulty": 2.212121212121212,
    "language": "java",
    "summary": "Write a function that receives the time in 12-hour AM/PM format and returns a string representation of the time in military (24-hour) format.\n\nExamples\nconvertTime(“07:05:45PM”) ➞ “19:05:45”\n\nconvertTime(“12:40:22AM”) ➞ “00:40:22”\n\nconvertTime(“12:45:54PM”) ➞ “12:45:54”\n\nNotes\nMidnight is 12:00:00AM on a 12-hour clock, and 00:00:00 on a 24-hour clock.\nNoon is",
    "tags": [
      "strings",
      "numbers",
      "dates"
    ],
    "title": "24-Hour Time"
  },
  {
    "_id": "kAJBH9WexWMdfLFHT",
    "difficulty": 2.2127659574468086,
    "language": "java",
    "summary": "Excel row names are in the following format:\n\nA, B, ..., Z, AA, ..., AZ, BA, ..., ZZ, AAA, AAB, ...\n\nWrite a function that returns the row number from the row name.\n\nExamples\nrow(\"A\") ➞ 1\n\nrow(\"Z\") ➞ 26\n\nrow(\"AA\") ➞ 27\n\nrow(\"BA\") ➞ 53\n\nNotes\nN/A",
    "tags": [
      "loops",
      "strings"
    ],
    "title": "Get the Excel Column"
  },
  {
    "_id": "MNJ4Mx5duvtZJa8ks",
    "difficulty": 2.2142857142857144,
    "language": "java",
    "summary": "Write a function that takes a string of brackets and checks whether they're balanced or not.\n\nThe sequence is balanced if:\nIt contains no unmatched brackets.\nThe subset of brackets enclosed within the confines of a matched pair of brackets is also balanced.\n\nExamples\nisBalanced(\"{[()]}\") ➞ true\n\nisBalanced(\"[()]{}\") ➞ true\n\nisBalanced(\"{[([)]]}\") ➞ false\n\nNote",
    "tags": [
      "logic",
      "strings",
      "validation"
    ],
    "title": "Balanced Brackets"
  },
  {
    "_id": "mB5LofGBxARkoYhRR",
    "difficulty": 2.2142857142857144,
    "language": "java",
    "summary": "A semiprime is a composite number that is the product of two primes. Apart from these two primes, its only other proper (non-self) divisor is 1.\n\nThe two prime factors of a semiprime can be the same number (e.g. the semiprime 49 is the product of 7x7). A semiprime that has two distinct prime factors is called a squarefree semiprime.\n\nCreate a function that tak",
    "tags": [
      "math",
      "validation",
      "numbers"
    ],
    "title": "Semiprimes"
  },
  {
    "_id": "pnhcp4FraYQDeqRGt",
    "difficulty": 2.2162162162162162,
    "language": "java",
    "summary": "In early recorded Chinese history, time was reckoned using the sexagenary (60-year) cycle, generated from two subcycles:\n\nFive heavenly stems (elements) in this order: wood, fire, earth, metal, water. The stems change every two years.\nTwelve earthly branches (animals) in this order: rat, ox, tiger, rabbit, dragon, snake, horse, sheep, monkey, rooster, dog, pig",
    "tags": [
      "language_fundamentals",
      "loops"
    ],
    "title": "Sexagenary Cycle (Chinese Zodiac)"
  },
  {
    "_id": "27h4mwAKD3hhy6onh",
    "difficulty": 2.22,
    "language": "java",
    "summary": "Create a function that takes two integers and returns true if a digit repeats three times in a row at any place in num1 AND that same digit repeats two times in a row in num2.\n\nExamples\ntrouble(451999277, 41177722899) ➞ True\n\ntrouble(1222345, 12345) ➞ False\n\ntrouble(666789, 12345667) ➞ True\n\ntrouble(33789, 12345337) ➞ False\n\nNotes\nYou can expect every test cas",
    "tags": [
      "validation",
      "algorithms",
      "regex"
    ],
    "title": "Triple + Double = So Much Trouble"
  },
  {
    "_id": "5Jw7K2fvuaAqRPPtJ",
    "difficulty": 2.2222222222222223,
    "language": "java",
    "summary": "In this challenge, you have to establish if a given number is Brilliant. A Brilliant number is a semiprime that can be obtained only by multiplicating two, and only two, different primes with the same number of digits.\n\nA semiprime can be:\n\nA composite number equal to the product of two different primes.\nA composite number equal to the square of a prime.\n\nGive",
    "tags": [
      "higher_order_functions",
      "numbers",
      "math",
      "loops"
    ],
    "title": "Shiny Semiprimes: Brilliant Numbers"
  },
  {
    "_id": "EhX7SGqPTyxQc4pb2",
    "difficulty": 2.2222222222222223,
    "language": "java",
    "summary": "Create a function that returns the sum of the digits formed from the first and last digits, all the way to the center of the number.\n\nWorked Example\nclosingInSum(2520) ➞ 72\n\n// The first and last digits are 2 and 0.\n// 2 and 0 form 20.\n// The second digit is 5 and the second to last digit is 2.\n// 5 and 2 form 52.\n\n// 20 + 52 = 72\n\nExamples\nclosingInSum(121) ➞",
    "tags": [
      "algorithms",
      "recursion",
      "loops",
      "numbers"
    ],
    "title": "Closing in Sum"
  },
  {
    "_id": "YGFhsF3veFwqKyp4x",
    "difficulty": 2.2285714285714286,
    "language": "java",
    "summary": "In this challenge, you have to obtain a sentence from the elements of a given matrix. In the matrix, each word of the sentence follows a columnar order from the top to the bottom, instead of the usual left-to-right order: it's time for transposition!\n\nGiven a matrix mtx, implement a function that returns the complete sentence as a string, with the words separa",
    "tags": [
      "arrays",
      "strings",
      "formatting"
    ],
    "title": "Enter the Matrix"
  },
  {
    "_id": "akLRnxrtrAsnyYuZb",
    "difficulty": 2.230769230769231,
    "language": "java",
    "summary": "Write a function that, given the start and end values, returns an array containing all the numbers inclusive to that range. See examples below.\n\nExamples\nreversibleInclusiveList(1, 5) ➞ [1, 2, 3, 4, 5]\n\nreversibleInclusiveList(2, 8) ➞ [2, 3, 4, 5, 6, 7, 8]\n\nreversibleInclusiveList(10, 20) ➞[10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n\nreversibleInclusiveList(2",
    "tags": [
      "math",
      "numbers",
      "scope",
      "loops"
    ],
    "title": "Reversible Inclusive List Ranges"
  },
  {
    "_id": "y93Q6YRPwFgZx84Xj",
    "difficulty": 2.230769230769231,
    "language": "java",
    "summary": "In each input array, every number repeats at least once, except for two. Write a function that returns the two unique numbers.\n\nExamples\nreturnUnique([5, 4, 5, 1, 4, 3, 4, 6, 6, 6]) ➞ [1, 3]\n\nreturnUnique([1, 2, 1, 3, 1, 7, 1, 9, 7, 9]) ➞ [2, 3]\n\nreturnUnique([9, 5, 6, 8, 7, 7, 1, 1, 1, 1, 1, 9, 8]) ➞ [5, 6]\n\nNotes\nKeep the same ordering in the output.",
    "tags": [
      "loops",
      "arrays",
      "conditions"
    ],
    "title": "Two Distinct Elements"
  },
  {
    "_id": "hro2Zbdcr2hsQ5B8v",
    "difficulty": 2.235294117647059,
    "language": "java",
    "summary": "Create a function that flips a horizontal array into a vertical array, and a vertical array into a horizontal array.\n\nIn other words, take an 1 x n array (1 row + n columns) and flip it into a n x 1 array (n rows and 1 column), and vice versa.\n\nExamples\nflipArray([1, 2, 3, 4]) ➞ [[1], [2], [3], [4]]\n// Take a horizontal array and flip it vertical.\n\nflipArray([",
    "tags": [
      "arrays",
      "formatting",
      "loops"
    ],
    "title": "Flip The Array"
  },
  {
    "_id": "WXTuWJ5nSEzjcakQJ",
    "difficulty": 2.238095238095238,
    "language": "java",
    "summary": "Create a function that takes a string (the string to truncate) and a number (the maximum length of the truncated string) as arguments and returns the truncated string at the given length.\n\nExamples\ntruncate(\"Lorem ipsum dolor sit amet.\", 11) ➞ \"Lorem ipsum\"\n\ntruncate(\"Lorem ipsum dolor sit amet.\", 16) ➞ \"Lorem ipsum\"\n\ntruncate(\"Lorem ipsum dolor sit amet.\", 17",
    "tags": [
      "strings",
      "formatting"
    ],
    "title": "Truncate String at a Given Length"
  },
  {
    "_id": "GGijTCgukXqkYWX9Q",
    "difficulty": 2.239130434782609,
    "language": "java",
    "summary": "In this challenge, you must think about words as elastics. What happens when do you tend an elastic applying a constant traction force at both ends? Every part (or letter, in this case) of the elastic will expand, with the minimum expansion at the ends, and the maximum expansion in the center.\n\nIf the word has an odd length, the effective central character of ",
    "tags": [
      "strings",
      "formatting"
    ],
    "title": "Elastic Words"
  },
  {
    "_id": "aMazRiPPk9pAniYMF",
    "difficulty": 2.24,
    "language": "java",
    "summary": "In JavaScript, there are two types of comments:\n\nSingle-line comments start with //\nMulti-line or inline comments start with / and end with /\n\nThe input will be a sequence of //, / and /. Every / must have a / that immediately follows it. To add, there can be no single-line comments in between multi-line comments in between the / and /.\n\nCreate a function that",
    "tags": [
      "strings",
      "regex",
      "validation"
    ],
    "title": "Valid JavaScript Comments"
  },
  {
    "_id": "ChqsAuCYkGm7x2Jyw",
    "difficulty": 2.25,
    "language": "java",
    "summary": "Create a function that takes two strings and determines if an anagram of the first string is in the second string. Anagrams of \"bag\" are \"bag\", \"bga\", \"abg\", \"agb\", \"gab\", \"gba\". Since none of those anagrams are in \"grab\", the answer is false. A \"g\", \"a\", and \"b\" are in the string \"grab\", but they're split up by the \"r\".\n\nExamples\nanaStrStr(\"car\", \"race\") ➞ tr",
    "tags": [
      "strings",
      "validation",
      "regex"
    ],
    "title": "Find an Anagram of a String in Another String"
  },
  {
    "_id": "LH2sxGLLLvnJbL6tZ",
    "difficulty": 2.25,
    "language": "java",
    "summary": "You are driving in a roundabout. At the moment you enter, you don't know which one of the exits you have to take. At the moment your GPS (or the person next to you) shouts that you should leave the roundabout, there's a moment of time where you need to react, turn on your indicator light, and exit the roundabout.\n\nAssuming the roundabouts are of equal size, th",
    "tags": [
      "algorithms",
      "math",
      "numbers"
    ],
    "title": "Roundabout"
  },
  {
    "_id": "cSfsSmpnGqeAEiN8a",
    "difficulty": 2.25,
    "language": "java",
    "summary": "In The Netherlands we have PostNL, the postal company. They use KixCodes, a fast way to deliver letters and packages that can be scanned during the process.\n\nKix Code\n\nThe code is a combination of: \"Postal code\", \"House/box/call number\" and \"House appendage / suffix\"\n\nIf there is a character between the house number and the suffix, we need to replace that with",
    "tags": [
      "algorithms",
      "formatting",
      "regex"
    ],
    "title": "KixCodes in the Netherlands"
  },
  {
    "_id": "fEtBbju4zCmYKFAwH",
    "difficulty": 2.25,
    "language": "java",
    "summary": "Tesha needs your help to find out a wrong number in a 2D array.\n\nImagine a 2D array of numbers given below:\n\nvar arr = [\n  [1, 2, 3, 6 ],\n  [4, 5, 6, 15],\n  [7, 8, 9, 24],\n  [12,15,18,45]\n]\n\nYou can notice that:\nThe end number of each row is the sum of each row's previous numbers.\nThe end number of each column is the sum of each column's previous numbers.\n\nSee",
    "tags": [
      "algorithms",
      "math",
      "numbers",
      "loops"
    ],
    "title": "Wrong Number"
  },
  {
    "_id": "CR7uvWLiKNaZeoj4R",
    "difficulty": 2.25,
    "language": "java",
    "summary": "Create a function that takes an array of three numbers and returns the Least Common Multiple (LCM).\n\nThe LCM is the smallest positive number that is a multiple of two or more numbers. In our case, we are dealing with three numbers.\n\nMultiples of 3 are: 3, 6, 9, 12, and so on.\nMultiples of 4 are: 4, 8,12, and so on.\nMultiples of 12 are: 12, 24, 36, and so on.",
    "tags": [
      "arrays",
      "algorithms",
      "numbers",
      "math"
    ],
    "title": "Find the LCM of Three Numbers"
  },
  {
    "_id": "PRWwoRZnnh5eyyRbD",
    "difficulty": 2.25531914893617,
    "language": "java",
    "summary": "The look-and-say sequence is generated by describing each group of identical digits in the previous term. If we start at \"1\", the first five terms in the sequence are:\n\n\"1\" = \"one 1\" = \"11\"\n\"11\" = \"two 1's\" = \"21\"\n\"21\" = \"one 2, one 1\" = \"1211\"\n\"1211\" = \"one 1, one 2, two 1's\" = \"111221\"\n\"111221\" = \"three 1's, two 2's, one 1\" = \"312211\"\n\nGiven a term (as a str",
    "tags": [
      "language_fundamentals",
      "strings"
    ],
    "title": "Look-And-Say Sequence"
  },
  {
    "_id": "hLF2GH3SxbsFew3bC",
    "difficulty": 2.25531914893617,
    "language": "java",
    "summary": "An ice cream sandwich is a string that is formed by two identical ends and a different middle.\n\nSome examples of ice cream sandwiches:\n\"AABBBAA\"\n\n\"3&&3\"\n\n\"yyyyymmmmmmmmyyyyy\"\n\n\"hhhhhhhhmhhhhhhhh\"\n\nNotice how left and right ends of the sandwich are identical in both length and in repeating character. The middle section is distinctly different.\n\nNot ice cream sa",
    "tags": [
      "strings",
      "language_fundamentals",
      "validation"
    ],
    "title": "Ice Cream Sandwich"
  },
  {
    "_id": "5RvoqBgeykwy2Xqdb",
    "difficulty": 2.2580645161290325,
    "language": "java",
    "summary": "Write a function that returns an array of strings populated from the slices of n-length characters of the given word (a slice after another while n-length applies onto the word).\n\nExamples\ncollect(\"intercontinentalisationalism\", 6)\n➞ [\"ationa\", \"interc\", \"ntalis\", \"ontine\"]\n\ncollect(\"strengths\", 3)\n➞ [\"eng\", \"str\", \"ths\"]\n\ncollect(\"pneumonoultramicroscopicsili",
    "tags": [
      "arrays",
      "sorting",
      "strings"
    ],
    "title": "N-Length Letter Groups"
  },
  {
    "_id": "w7DJWs97E83ntRgYf",
    "difficulty": 2.2580645161290325,
    "language": "java",
    "summary": "Given a list of words in the singular form, return a set of those words in the plural form if they appear more than once in the list.\n\nExamples\npluralize([\"cow\", \"pig\", \"cow\", \"cow\"]) ➞ [\"cows\", \"pig\"]\n\npluralize([\"table\", \"table\", \"table\"]) ➞ [\"tables\"]\n\npluralize([\"chair\", \"pencil\", \"arm\"]) ➞ [\"chair\", \"pencil\", \"arm\"]\n\nNotes\nThis is an oversimplification of",
    "tags": [
      "strings",
      "arrays",
      "loops"
    ],
    "title": "Pluralize!"
  },
  {
    "_id": "99yALJGy4ZmFzaqvr",
    "difficulty": 2.259259259259259,
    "language": "java",
    "summary": "Create a function that extracts the items from a unique array, given as parameter arr, filtered by positional parity (odd or even), given as parameter par.\nReturn an array of items on odd positions (... 5, 3, 1) and on even positions (... 6, 4, 2) starting from the last item in the array.\n\nExamples\ncharAtPos([2, 4, 6, 8, 10], \"even\") ➞ [4, 8]\n// 4 & 8 occupy t",
    "tags": [
      "algorithms",
      "arrays",
      "logic"
    ],
    "title": "Oddly or Evenly Positioned from Last"
  },
  {
    "_id": "aL3SuicAGjAwgqY2d",
    "difficulty": 2.260869565217391,
    "language": "java",
    "summary": "Given two integers a and b, return how many times a can be halved while still being greater than b.\n\nExamples\nhalveCount(4666, 544) ➞ 3\n// (4666 -> 2333 -> 1166.5 -> 583.25)\n\nhalveCount(466, 54) ➞ 3\n// (466 -> 233 -> 116.5 -> 58.25)\n\nhalveCount(1324, 98) ➞ 3\n// (1324 -> 662 -> 331 -> 165.5)\n\nhalveCount(624, 8) ➞ 6\n// (624 -> 312 -> 156 -> 78 -> 39 -> 19.5 -> 9",
    "tags": [
      "recursion",
      "numbers"
    ],
    "title": "Recursion: Halve and Halve Again"
  },
  {
    "_id": "THuuakBitThtL6rmq",
    "difficulty": 2.263157894736842,
    "language": "java",
    "summary": "Write a function that returns the items from an array (given as parameter r) on odd or even positions, depending on it's specifier (given as parameters) as being the parity. The final array will contain \"odd\" items on odd positions (1, 3, 5, ...) and \"even\" for items on even positions (2, 4, 6, ...).\n\nExamples\ncharAtPos([2, 4, 6, 8, 10], \"even\") ➞ [4, 8]\n// 4",
    "tags": [
      "arrays",
      "functional_programming",
      "validation"
    ],
    "title": "Oddly Or Evenly Positioned"
  },
  {
    "_id": "MYtinBHDSk4Bk7HnH",
    "difficulty": 2.264705882352941,
    "language": "java",
    "summary": "Write a recursive function that will return the longest word in a sentence. In cases where more than one word is found, return the first one.\n\nExamples\nfindLongest(\"I will and ever will be gratefully and perpetually loving you Tesh!😘\") ➞ \"perpetually\"\n\nfindLongest(\"A thing of beauty is a joy forever.\") ➞ \"forever\"\n\nfindLongest(\"Forgetfulness is by all means p",
    "tags": [
      "arrays",
      "strings",
      "validation",
      "recursion"
    ],
    "title": "Find The Longest Word"
  },
  {
    "_id": "SnZ5y2hyxjZnWrMec",
    "difficulty": 2.27027027027027,
    "language": "java",
    "summary": "Write a sorting function that takes in an array of names and sorts them by last name either alphabetically (ASC) or reverse-alphabetically (DESC).\n\nExamples\nsortContacts([\n  \"John Locke\",\n  \"Thomas Aquinas\",\n  \"David Hume\",\n  \"Rene Descartes\"\n], \"ASC\") ➞ [\n  \"Thomas Aquinas\",\n  \"Rene Descartes\",\n  \"David Hume\",\n  \"John Locke\"\n]\n\n// Aquinas (A)  Erdos (ER) > Eu",
    "tags": [
      "sorting",
      "arrays"
    ],
    "title": "Contact List"
  },
  {
    "_id": "n63bWFSAxgh3Qwhvn",
    "difficulty": 2.27027027027027,
    "language": "java",
    "summary": "Write a function that takes a string input and returns the string in a reversed case and order.\n\nExamples\ninvert(\"dLROW YM sI HsEt\") ➞ \"TeSh iS my worlD\"\n\ninvert(\"ytInIUgAsnOc\") ➞ \"CoNSaGuiNiTY\"\n\ninvert(\"step on NO PETS\") ➞ \"step on NO PETS\"\n\ninvert(\"XeLPMoC YTiReTXeD\") ➞ \"dExtErIty cOmplEx\"\n\nNotes\nNo empty strings and will neither contain special characters n",
    "tags": [
      "arrays",
      "strings",
      "loops",
      "language_fundamentals"
    ],
    "title": "Case and Index Inverter"
  },
  {
    "_id": "hTWrPnnCScgSsoN9A",
    "difficulty": 2.272727272727273,
    "language": "java",
    "summary": "Create a  function that tests if a number is the exact upper bound of the factorial of n. If so, return an array of the exact factorial bound and n, or otherwise, an empty array.\n\nExamples\nisExact(6) ➞ [6, 3]\n\nisExact(24) ➞ [24, 4]\n\nisExact(125) ➞ []\n\nisExact(720) ➞ [720, 6]\n\nisExact(1024) ➞ []\n\nisExact(40320) ➞ [40320, 8]\n\nNotes\nAlternatively, you can solve t",
    "tags": [
      "loops",
      "numbers",
      "validation"
    ],
    "title": "Exact Factorial Bounds"
  },
  {
    "_id": "XgaeYwf9NRx4f4iY7",
    "difficulty": 2.272727272727273,
    "language": "java",
    "summary": "Goldbach's Conjecture is amongst the oldest and well-known unsolved mathematical problems. In correspondence with Leonhard Euler in 1742, German mathematician Christian Goldbach made a conjecture, which states:\n\n\"Every even whole number greater than 2 is the sum of two prime numbers.\"\n\nEven though it's been thoroughly tested and analyzed and seems to be true,",
    "tags": [
      "arrays",
      "math",
      "numbers",
      "logic"
    ],
    "title": "Goldbach Conjecture"
  },
  {
    "_id": "jQzopNeMisCmY4Fum",
    "difficulty": 2.2758620689655173,
    "language": "java",
    "summary": "Create a function based on the input and output. Look at the examples, there is a pattern.\n\nExamples\nsecret(24) ➞ 8\n\nsecret(42) ➞ 8\n\nsecret(15) ➞ -4\n\nsecret(52) ➞ 15\n\nNotes\nnum >= 10 and  num <= 52\nMath.pow, * and - can be helpful.",
    "tags": [
      "logic",
      "language_fundamentals",
      "numbers",
      "math"
    ],
    "title": "Secret Function"
  },
  {
    "_id": "dPeRoAK4HDhQfuk4n",
    "difficulty": 2.2777777777777777,
    "language": "java",
    "summary": "Heading off to the Tree Arboretum of Various Heights, I bring along my camera to snap up a few photos. Ideally, I'd want to take a picture of as many trees as possible, but the taller trees may cover up the shorter trees behind it.\n\nA tree is hidden if it is shorter or the same height as the tree in front.\n\nGiven an array of tree heights, create a function whi",
    "tags": [
      "algorithms",
      "loops",
      "arrays",
      "numbers"
    ],
    "title": "Tree Photography"
  },
  {
    "_id": "WC9acAYzqvPk2MjGj",
    "difficulty": 2.2857142857142856,
    "language": "java",
    "summary": "A Fibonacci Word is a specific sequence of binary digits (or symbols from any two-letter alphabet). The Fibonacci Word is formed by repeated concatenation in the same way that the Fibonacci numbers are formed by repeated addition.\n\nCreate a function that takes a number n as an argument and returns the first n elements of the Fibonacci Word sequence.\n\nIf n < 2,",
    "tags": [
      "numbers",
      "math",
      "strings"
    ],
    "title": "Fibonacci Word"
  },
  {
    "_id": "j3pBTZLXSo7JJ2iAy",
    "difficulty": 2.2857142857142856,
    "language": "java",
    "summary": "The right shift operation is similar to floor division by powers of two, thus, the process is repetitive and can be done recursively.\n\nSample calculation using the right shift operator ( >> ):\n80 >> 3 = floor(80/2^3) = floor(80/8) = 10\n-24 >> 2 = floor(-24/2^2) = floor(-24/4) = -6\n-5 >> 1 = floor(-5/2^1) = floor(-5/2) = -3\n\nWrite a function that mimics (withou",
    "tags": [
      "recursion",
      "numbers",
      "bit_operations"
    ],
    "title": "Recursion: Right Shift by Division"
  },
  {
    "_id": "vpSCPsQKcQwnFdMS4",
    "difficulty": 2.289719626168224,
    "language": "java",
    "summary": "Create a function that will recursively count the number of digits of a number. Conversion of the number to a string is not allowed, thus, the approach is recursive.\n\nExamples\ndigitsCount(4666) ➞ 4\n\ndigitsCount(544) ➞ 3\n\ndigitsCount(121317) ➞ 6\n\ndigitsCount(0) ➞ 1\n\ndigitsCount(12345) ➞ 5\n\ndigitsCount(1289396387328L) ➞ 13\n\nNotes\nYou are expected to solve this c",
    "tags": [
      "recursion",
      "numbers",
      "math"
    ],
    "title": "Recursion: Count The Digits"
  },
  {
    "_id": "7TCtjPThGdrSDHQK5",
    "difficulty": 2.298507462686567,
    "language": "java",
    "summary": "The ABACABA pattern is a recursive fractal pattern that shows up in many places in the real world (such as in geometry, art, music, poetry, number systems, literature and higher dimensions).\n\nCreate a function that takes a number n as an argument and returns a string that represents the full pattern.\n\nExamples\nabacabaPattern(1) ➞ \"A\"\n\nabacabaPattern(2) ➞ \"ABA\"",
    "tags": [
      "recursion",
      "geometry"
    ],
    "title": "ABACABA Pattern"
  },
  {
    "_id": "2seaqQz4fvLDCLJz2",
    "difficulty": 2.303030303030303,
    "language": "java",
    "summary": "You bought a few bunches of fruit over the weekend. Create a function that splits a bunch into singular objects inside an array.\n\nExamples\nsplitBunches([\n  {name: \"grapes\", quantity: 2}\n]) ➞ [\n  {name: \"grapes\", quantity: 1},\n  {name: \"grapes\", quantity: 1}\n]\n\nsplitBunches([\n  {name: \"currants\", quantity: 1},\n  {name: \"grapes\", quantity: 2},\n  {name: \"bananas\"",
    "tags": [
      "arrays",
      "objects",
      "loops"
    ],
    "title": "Splitting Objects Inside An Array"
  },
  {
    "_id": "kJu2Hvsr4L2BRZqHW",
    "difficulty": 2.3043478260869565,
    "language": "java",
    "summary": "Write a function that returns true if the phone number is in a valid format. Valid formats are as follows:\n\nWith Country Code | Without Country Code\n--- | ---\n+1-892-445-7663 | 892-445-7663\n1-892-445-7663 | (892) 445-7663\n1 (892) 445-7663 | 892.567.8901\n1.892.567.8901 | 1/892/567/8901\n1 892 567 8901 | 892/567/8901\n18925678901 | 892 567 8901\n\nExamples\nvalidate(",
    "tags": [
      "regex",
      "strings",
      "validation"
    ],
    "title": "Validate Phone Numbers"
  },
  {
    "_id": "3yzvdLMYJbczD548d",
    "difficulty": 2.306451612903226,
    "language": "java",
    "summary": "A string contains the word \"edabit\" if a subsequence of its characters spell \"edabit\".\n\nWrite a function that accepts a string and returns “YES” if the string contains a subsequence of the word edabit or \"NO\" if it does not.\n\nExamples\nedabitInString(“eddaaabt”) ➞ “NO”\n\nedabitInString(“edwardisabletodoit”) ➞ “YES”\n\nedabitInString(“abecdfghijklmnopqrstuvwxyz”) ➞",
    "tags": [
      "strings",
      "validation"
    ],
    "title": "Is Edabit in the String?"
  },
  {
    "_id": "3SdTEG59DAA4cPBFR",
    "difficulty": 2.3076923076923075,
    "language": "java",
    "summary": "Given an array of strings and an original string, write a function to output an array of boolean values - true if the word can be formed from the original word by swapping two letters only once and false otherwise.\n\nExamples\nvalidateSwaps([\"BACDE\", \"EBCDA\", \"BCDEA\", \"ACBED\"], \"ABCDE\")\n➞ [true, true, false, false]\n\n// Swap \"A\" and \"B\" from \"ABCDE\" to get \"BACDE",
    "tags": [
      "arrays",
      "validation",
      "loops"
    ],
    "title": "Single Letter Swaps"
  },
  {
    "_id": "6KPGPdQDCXsHYaQTL",
    "difficulty": 2.3076923076923075,
    "language": "java",
    "summary": "Write a function that converts a string into star shorthand. If a character is repeated n times, convert it into character*n.\n\nExamples\ntoStarShorthand(\"abbccc\") ➞ \"ab2c3\"\n\ntoStarShorthand(\"77777geff\") ➞ \"75gef2\"\n\ntoStarShorthand(\"abc\") ➞ \"abc\"\n\ntoStarShorthand(\"\") ➞ \"\"\n\nNotes\nLeave lone occurrences of a character as is.\nReturn an empty string if given an empt",
    "tags": [
      "strings",
      "regex",
      "formatting",
      "loops"
    ],
    "title": "Star Shorthand"
  },
  {
    "_id": "MfkWhtu67fD5d5YM2",
    "difficulty": 2.311111111111111,
    "language": "java",
    "summary": "Create a function that determines whether it is possible to build a palindrome from the characters in a string.\n\nExamples\npossiblePalindrome(\"acabbaa\") ➞ true\n// Can make the following palindrome: \"aabcbaa\"\n\npossiblePalindrome(\"aacbdbc\") ➞ true\n// Can make the following palindrome: \"abcdcba\"\n\npossiblePalindrome(\"aacbdb\") ➞ false\n\npossiblePalindrome(\"abacbb\") ➞",
    "tags": [
      "strings",
      "regex",
      "validation"
    ],
    "title": "Possible Palindrome"
  },
  {
    "_id": "kHLmnk3RhekGKe7fP",
    "difficulty": 2.3142857142857145,
    "language": "java",
    "summary": "Create a function that takes a string (IPv4 address in standard dot-decimal format) and returns true if the IP is valid or false if it's not. For information on IPv4 formatting, please refer to the resources in the Resources tab.\n\nExamples\nisValidIP(\"1.2.3.4\") ➞ true\n\nisValidIP(\"1.2.3\") ➞ false\n\nisValidIP(\"1.2.3.4.5\") ➞ false\n\nisValidIP(\"123.45.67.89\") ➞ true",
    "tags": [
      "validation",
      "algorithms",
      "regex",
      "strings"
    ],
    "title": "IPv4 Validation"
  },
  {
    "_id": "7PSvBgGjiA252WdiN",
    "difficulty": 2.3333333333333335,
    "language": "java",
    "summary": "If a number is autobiographical, then the number's digits describe itself. The first digit is the amount of times the digit 0 appears, the second digit is the amount of times the digit 1 appears, the third digit is the amount of times the digit 2 appears, etc. This repeats for all digits of the number. The number 6210001000 is autobiographical, because it has",
    "tags": [
      "numbers",
      "conditions",
      "loops",
      "validation"
    ],
    "title": "Numbers That are Also Writers"
  },
  {
    "_id": "P2aqoBtZj6GCsdFsY",
    "difficulty": 2.3333333333333335,
    "language": "java",
    "summary": "Create a function that returns the minimum number of swaps it takes to transform a binary string into a string of alternating 0s and 1s. A swap is switching from a 0 to a 1 or vice versa.\n\nExamples\nminSwaps(\"010010111\") ➞ 4\n\n// Two possible conversions:\n//   1. \"101010101\" (4 swaps)\n//   2. \"010101010\" (5 swaps)\n\nminSwaps(\"10101010\") ➞ 0\n\nminSwaps(\"10010\") ➞ 2",
    "tags": [
      "strings",
      "loops"
    ],
    "title": "Minimum Swaps to Alternate a Binary String"
  },
  {
    "_id": "jzECwjcK3LZ3YXhXC",
    "difficulty": 2.3333333333333335,
    "language": "java",
    "summary": "Write a function that returns true if all parameters are truthy, and false otherwise.\n\nExamples\nallTruthy(\"t\", \"te\", \"tes\", \"tesh\", \"tesha\") ➞ true\n\nallTruthy(true, true, true) ➞ true\n\nallTruthy(true, false, true) ➞ false\n\nallTruthy(5, 4, 3, 2, 1, 0) ➞ false\n\nNotes\nFalsy values include false, 0, \"\" (empty string), null, POSITIVEINFINITY, NEGATIVEINFINITY and N",
    "tags": [
      "arrays",
      "loops",
      "validation"
    ],
    "title": "Check if All Values Are True"
  },
  {
    "_id": "u7hFpEuA2oFoaxwsi",
    "difficulty": 2.3333333333333335,
    "language": "java",
    "summary": "In this challenge, you have to establish if a given number is undulating. A number n is undulating when the following conditions are all true:\n\nn has at least three digits.\nn has exactly two different digits.\nThe two digits of n are alternating without repeating groups.\n\nIf we think at the first digit of an undulating number as an \"A\", and to its  second digit",
    "tags": [
      "numbers",
      "conditions",
      "regex",
      "validation"
    ],
    "title": "ABA Integers: The Undulating Numbers"
  },
  {
    "_id": "BqiQJWgrntvEKhgPS",
    "difficulty": 2.3333333333333335,
    "language": "java",
    "summary": "Write a function that counts how many concentric layers a rug has.\n\nExamples\ncountLayers([\n \"TTTTTTTTTTTTTT\",\n \"TEEEEEEEEEEEET\",\n \"TESSSSSSSSSSET\",\n \"TESHHHHHHHHSET\",\n \"TESHAAAAAAHSET\",\n \"TESHHHHHHHHSET\",\n \"TESSSSSSSSSSET\",\n \"TEEEEEEEEEEEET\",\n \"TTTTTTTTTTTTTT\"\n]) ➞ 5\n\ncountLayers([\n  \"AAAA\",\n  \"ABBA\",\n  \"AAAA\"\n]) ➞ 2\n\ncountLayers([\n  \"AAAAAAAAA\",\n  \"ABBBBBBBA\"",
    "tags": [
      "strings",
      "logic"
    ],
    "title": "Layers in a Rug"
  },
  {
    "_id": "kKQPf5xTAdnBjqvZ8",
    "difficulty": 2.3454545454545452,
    "language": "java",
    "summary": "Write a function that groups a string into parentheses clusters. Each cluster should be balanced.\n\nExamples\nsplit(\"()()()\") ➞ [\"()\", \"()\", \"()\"]\n\nsplit(\"((()))\") ➞ [\"((()))\"]\n\nsplit(\"((()))(())()()(()())\") ➞ [\"((()))\", \"(())\", \"()\", \"()\", \"(()())\"]\n\nsplit(\"((())())(()(()()))\") ➞ [\"((())())\", \"(()(()()))\"]\n\nNotes\nAll input strings will only contain parentheses.",
    "tags": [
      "strings",
      "data_structures"
    ],
    "title": "Parentheses Clusters"
  },
  {
    "_id": "W8zoCps44yDxckivb",
    "difficulty": 2.347826086956522,
    "language": "java",
    "summary": "Write a function that returns true if a given name can generate an array of words.\n\nExamples\nanagram(\"Tesha Xavier\", [\"six\", \"have\", \"rate\"]) ➞ true\n\nanagram(\"Natalie Portman\", [\"ornamental\", \"pita\"]) ➞ true\n\nanagram(\"Chris Pratt\", [\"chirps\", \"rat\"]) ➞ false\n// Not all letters are used\n\nanagram(\"Jeff Goldblum\", [\"jog\", \"meld\", \"bluffs\"]) ➞ false\n// \"s\" does no",
    "tags": [
      "strings",
      "arrays",
      "validation"
    ],
    "title": "Generating Words From Names"
  },
  {
    "_id": "GZzE4tix4JutSyp4S",
    "difficulty": 2.3548387096774195,
    "language": "java",
    "summary": "The Christian holiday of Easter Sunday is a movable feast. It can occur on any date from March 22 to April 25. The date depends on the timing between the Paschal Full Moon and the spring equinox. It wasn't until the late 19th century that a formula was developed to accurately predict Easter's date for a given year.\n\nYour task is to use this formula, also known",
    "tags": [
      "algorithms",
      "math"
    ],
    "title": "Dates of Easter"
  },
  {
    "_id": "FRMkLfEBFM7bykHEt",
    "difficulty": 2.357142857142857,
    "language": "java",
    "summary": "Create two functions that convert a word to a bitstring and then to a boolean array based on the following criteria:\n\nLocate the position of the letter in the English alphabet (from 1 to 26).\nOdd positions will be represented as 1 and even positions will be represented as 0.\nConvert the represented positions to boolean values, 1 for true and 0 for false.\nStore",
    "tags": [
      "strings",
      "objects",
      "arrays"
    ],
    "title": "Word to Bitstring to Boolean Array"
  },
  {
    "_id": "tA2pDTyaW7MeTK5rD",
    "difficulty": 2.358974358974359,
    "language": "java",
    "summary": "Write a function that returns the most frequent character in an array of words.\n\nExamples\nmostFrequentChar([\"apple\", \"bandage\", \"yodel\", \"make\"])\n➞ [\"a\", \"e\"]\n\nmostFrequentChar([\"music\", \"madness\", \"maniac\", \"motion\"])\n➞ [\"m\"]\n\nmostFrequentChar([\"the\", \"hills\", \"are\", \"alive\", \"with\", \"the\", \"sound\", \"of\", \"music\"])\n➞ [\"e\", \"h\", \"i\"]\n\nNotes\nIf multiple charact",
    "tags": [
      "arrays",
      "strings",
      "regex"
    ],
    "title": "Return the Most Frequent Character"
  },
  {
    "_id": "7DRLdMehCk9eWFWyR",
    "difficulty": 2.3636363636363638,
    "language": "java",
    "summary": "Two players draw a pair of numbered cards so that both players can form a 2 digit number. A winner can be decided if one player's number is larger than the other.\n\nHowever, there is a rule where a player can swap any one of their cards with any one of the other player's cards in a gamble to get a higher number! Note that it is illegal to swap the order of your",
    "tags": [
      "games",
      "numbers",
      "algorithms",
      "validation"
    ],
    "title": "Swapping Cards"
  },
  {
    "_id": "a68pt3brD2hGF2Mqe",
    "difficulty": 2.371794871794872,
    "language": "java",
    "summary": "A number is gapful if it is at least 3 digits long and is divisible by the number formed by stringing the first and last numbers together. The smallest number that fits this description is 100. First digit is 1, last digit is 0, forming 10, which is a factor of 100. Therefore, 100 is gapful.\n\nCreate a function that takes a number n and returns the closest gapf",
    "tags": [
      "algebra",
      "math",
      "numbers"
    ],
    "title": "Mind  the Gap"
  },
  {
    "_id": "iqEb9gZi2jgNR99At",
    "difficulty": 2.371794871794872,
    "language": "java",
    "summary": "Write a function which increments a string to create a new string.\n\nIf the string ends with a number, the number should be incremented by 1.\nIf the string doesn't end with a number, 1 should be added to the new string.\nIf the number has leading zeros, the amount of digits should be considered.\n\nExamples\nincrementString(\"foo\") ➞ \"foo1\"\n\nincrementString(\"foobar0",
    "tags": [
      "strings",
      "arrays"
    ],
    "title": "String Incrementer"
  },
  {
    "_id": "5GGu4JKvSBPyhAbry",
    "difficulty": 2.393939393939394,
    "language": "java",
    "summary": "Create a function that takes an array and a number and selectively reverse the order of the array based on the number you're given (second argument). If you're given the arguments [1,2,3,4,5,6] and 2, you would return the array [2,1, 4,3, 6,5].\n\nExamples\nselReverse([1,2,3,4,5,6], 2) ➞ [2,1, 4,3, 6,5]\n\nselReverse([2,4,6,8,10,12,14,16], 3) ➞ [6,4,2, 12,10,8, 16,",
    "tags": [
      "algorithms",
      "arrays",
      "numbers"
    ],
    "title": "Selective Array Reversal"
  },
  {
    "_id": "WtxvjezcFYGQo2v48",
    "difficulty": 2.4357798165137616,
    "language": "java",
    "summary": "Create a function that returns which chapter is nearest to the page you're on. If two chapters are equidistant, return the chapter with the higher page number.\n\nExamples\nnearestChapter(new Chapter[] {\n  new Chapter(\"Chapter 1\", 1),\n  new Chapter(\"Chapter 2\", 15),\n  new Chapter(\"Chapter 3\", 37)\n}, 10) ➞ \"Chapter 2\"\n\nnearestChapter(new Chapter[] {\n  new Chapter(",
    "tags": [
      "classes",
      "loops",
      "math"
    ],
    "title": "Nearest Chapter"
  },
  {
    "_id": "tJNLCKPzNg3e9Whdt",
    "difficulty": 2.5,
    "language": "java",
    "summary": "Bessie the cow is working on an essay for her writing class. Since her handwriting is quite bad, she decides to type the essay using a word processor. The essay contains N words (1≤N≤100), separated by spaces. Each word is between 1 and 15 characters long, inclusive, and consists only of uppercase or lowercase letters.\n\nAccording to the instructions for the as",
    "tags": [
      "algorithms",
      "formatting"
    ],
    "title": "Word Processor (USACO)"
  },
  {
    "_id": "KXs93N4RX6jNSsgCr",
    "difficulty": 2.5384615384615383,
    "language": "java",
    "summary": "In Spartans Cipher, encoding is done by writing the text horizontally, across the strap in the plaintext word of a message. In ancient times, Spartans and Greeks invented an interesting way of encryption called Scytale.\n\nThe ancient Greeks, and the Spartans in particular, are said to have used this cipher to communicate during military campaigns.\n\nCreate a fun",
    "tags": [
      "algorithms",
      "cryptography",
      "strings",
      "logic"
    ],
    "title": "Spartans Cipher"
  },
  {
    "_id": "JLQ4upWrq5LkzdhPE",
    "difficulty": 2.5535714285714284,
    "language": "java",
    "summary": "John wants to save money for his first car. He puts money in his piggy bank every day. Every day, he puts in $1 more than the previous day. Every Monday he starts with a new value ⁠— $1 more than the previous Monday.\n\nWeek 1 (starting at $1)\nDay | Amount | Sum\n:--- | --- | ---\nMonday | $1 | $1\nTuesday | $2 | $3\nWednesday | $3 | $6\nThursday | $4 | $10\nFriday  |",
    "tags": [
      "algebra",
      "math",
      "loops"
    ],
    "title": "Piggy Bank"
  },
  {
    "_id": "JmuM2cP5MvruRjr6c",
    "difficulty": 2.569672131147541,
    "language": "java",
    "summary": "The Atbash cipher is an encryption method in which each letter of a word is replaced with its \"mirror\" letter in the alphabet: A  Z; B  Y; C  X; etc.\n\nCreate a function that takes a string and applies the Atbash cipher to it.\n\nExamples\natbash(\"apple\") ➞ \"zkkov\"\n\natbash(\"Hello world!\") ➞ \"Svool dliow!\"\n\natbash(\"Christmas is the 25th of December\") ➞ \"Xsirhgnzh r",
    "tags": [
      "strings",
      "formatting",
      "cryptography"
    ],
    "title": "Atbash Cipher"
  },
  {
    "_id": "KZrmicjc8zCZyGNee",
    "difficulty": 2.5753424657534247,
    "language": "java",
    "summary": "It's time to send and receive secret messages.\n\nCreate two functions that take a string and an array and returns a coded or decoded message.\n\nThe first letter of the string, or the first element of the array represents the Character Code of that letter. The next elements are the differences between the characters:\ne.g. A +3 --> C or z -1 --> y.\n\nExamples\nencry",
    "tags": [
      "strings",
      "arrays",
      "loops",
      "cryptography"
    ],
    "title": "Difference Cipher"
  },
  {
    "_id": "kCAnEEzWdbYr3ps2c",
    "difficulty": 2.577777777777778,
    "language": "java",
    "summary": "Given a YouTube URL, extract the video ID and return it as a string.\n\nExamples\nyoutubeId(\"https://www.youtube.com/watch?v=XPEr1cArWRg\") ➞ \"XPEr1cArWRg\"\n\nyoutubeId(\"https://youtu.be/BCDEDi5gDPo\") ➞ \"BCDEDi5gDPo\"\n\nyoutubeId(\"https://youtube.com/watch?t=4m40s&v=vxP3bY-XxY4\") ➞ \"vxP3bY-XxY4\"\n\nNotes\nAll input are valid YouTube links.",
    "tags": [
      "regex",
      "strings"
    ],
    "title": "YouTube Video ID Extractor"
  },
  {
    "_id": "fKZ6m9rDHDvgp6aeu",
    "difficulty": 2.5849056603773586,
    "language": "java",
    "summary": "The additive persistence of an integer, n, is the number of times you have to replace n with the sum of its digits until n becomes a single digit integer.\n\nThe multiplicative persistence of an integer, n, is the number of times you have to replace n with the product of its digits until n becomes a single digit integer.\n\nCreate two functions that take an intege",
    "tags": [
      "math",
      "numbers",
      "loops"
    ],
    "title": "Persistence"
  },
  {
    "_id": "5DAuj96xupYTbFTXw",
    "difficulty": 2.588235294117647,
    "language": "java",
    "summary": "Tesh needs your help to find out the increasing or decreasing numbers for a given range.\n\nIncreasing Numbers\nNumbers whose digits, when read from left to right, are never less than the previous digit. See below some examples of increasing numbers:\n\n1111\n123456\n125788999\n\nDecreasing Numbers\nNumbers whose digits, when read from left to right, are never greater t",
    "tags": [
      "algorithms",
      "numbers",
      "loops",
      "logic"
    ],
    "title": "Increasing or Decreasing Numbers"
  },
  {
    "_id": "PZh6svj6RjiQishTG",
    "difficulty": 2.5964912280701755,
    "language": "java",
    "summary": "Create a function that takes numbers as arguments, adds them together, and returns the product of digits until the answer is only 1 digit long.\n\nExamples\nsumDigProd(16, 28) ➞ 6\n// 16 + 28 = 44\n// 4 * 4 =  16\n// 1 * 6 = 6\n\nsumDigProd(0) ➞ 0\n\nsumDigProd(1, 2, 3, 4, 5, 6) ➞ 2\n\nNotes\nThe input of the function is at least one number.",
    "tags": [
      "math",
      "arrays",
      "numbers"
    ],
    "title": "Product of Digits of Sum"
  },
  {
    "_id": "DhwkubnGy7mwZ2xt9",
    "difficulty": 2.6,
    "language": "java",
    "summary": "Create a function that returns true if two strings share the same letter pattern, and false otherwise.\n\nExamples\nsameLetterPattern(\"ABAB\", \"CDCD\") ➞ true\n\nsameLetterPattern(\"ABCBA\", \"BCDCB\") ➞ true\n\nsameLetterPattern(\"FFGG\", \"CDCD\") ➞ false\n\nsameLetterPattern(\"FFFF\", \"ABCD\") ➞ false\n\nNotes\nN/A",
    "tags": [
      "strings",
      "validation",
      "regex"
    ],
    "title": "Same Letter Patterns"
  },
  {
    "_id": "t9S9nNr79pLqjXgqb",
    "difficulty": 2.6022099447513813,
    "language": "java",
    "summary": "An input string can be completed if additional letters can be added and no letters need to be taken away to match the word. Furthermore, the order of the letters in the input string must be the same as the order of letters in the final word.\n\nCreate a function that, given an input string, determines if the word can be completed.\n\nExamples\ncanComplete(\"butl\", \"",
    "tags": [
      "strings",
      "validation",
      "regex",
      "loops"
    ],
    "title": "Complete the Word"
  },
  {
    "_id": "44bnzeLuDh3ofHxXi",
    "difficulty": 2.6037735849056602,
    "language": "java",
    "summary": "Create a function that takes an array of more than three numbers and returns the Least Common Multiple (LCM).\n\nExamples\nlcmOfArray([5, 4, 6, 46, 54, 12, 13, 17]) ➞ 2744820\n\nlcmOfArray([46, 54, 466, 544]) ➞ 78712992\n\nlcmOfArray([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) ➞ 2520\n\nlcmOfArray([13, 6, 17, 18, 19, 20, 37]) ➞ 27965340\n\nNotes\nThe LCM of an array of numbers is th",
    "tags": [
      "numbers",
      "math"
    ],
    "title": "LCM of More Than Three Numbers"
  },
  {
    "_id": "a242aPZGmmx8xhiuy",
    "difficulty": 2.607476635514019,
    "language": "java",
    "summary": "Given a word, create a function which returns whether or not it's possible to create a palindrome by rearranging the letters in the word.\n\nExamples\nisPalindromePossible(\"rearcac\") ➞ true\n// You can make \"racecar\"\n\nisPalindromePossible(\"suhbeusheff\") ➞ true\n// You can make \"sfuehbheufs\" (not a real word but still a palindrome)\n\nisPalindromePossible(\"palindrome\"",
    "tags": [
      "algorithms",
      "strings",
      "validation"
    ],
    "title": "Palindromic Anagrams"
  },
  {
    "_id": "acQwyrd5NcZvgGQhW",
    "difficulty": 2.608695652173913,
    "language": "java",
    "summary": "Create a function that expands a decimal number into a string as shown below:\n\n25.24 ➞ \"20 + 5 + 2/10 + 4/100\"\n70701.05 ➞ \"70000 + 700 + 1 + 5/100\"\n685.27 ➞ \"600 + 80 + 5 + 2/10 + 7/100\"\n\nExamples\nexpandedForm(5.44) ➞ \"5 + 4/10 + 4/100\"\n\nexpandedForm(46.66) ➞ \"40 + 6 + 6/10 + 6/100\"\n\nexpandedForm(87.04) ➞ \"80 + 7 + 4/100\"\n\nexpandedForm(123.025) ➞ \"100 + 20 + 3",
    "tags": [
      "algorithms",
      "language_fundamentals",
      "math",
      "numbers",
      "arrays"
    ],
    "title": "Expand a Number II"
  },
  {
    "_id": "4CyrhFrHGFkFvyk4b",
    "difficulty": 2.6129032258064515,
    "language": "java",
    "summary": "A lucky number is a number of a sequence generated by a sieve algorithm: if a number in the positive integers series survives to the sieve filtering algorithm, it's lucky and survives, otherwise it disappears from the sequence.\n\nFirst you must obtain an array of numbers, from 1 to the needed size.\nFirst number is 1 and it survives: next to him there is number",
    "tags": [
      "algorithms",
      "numbers",
      "math"
    ],
    "title": "Get the Lucky Number"
  },
  {
    "_id": "CxQRCDQHv5Ps8HnR6",
    "difficulty": 2.619047619047619,
    "language": "java",
    "summary": "An out-shuffle, also known as an out faro shuffle or a perfect shuffle, is a controlled method for shuffling playing cards. It is performed by splitting the deck into two equal halves and interleaving them together perfectly, with the condition that the top card of the deck remains in place.\n\nUsing an array to represent a deck of cards, an out-shuffle looks li",
    "tags": [
      "loops",
      "logic",
      "validation"
    ],
    "title": "The Out-Shuffle"
  },
  {
    "_id": "qRRYmmyTRBhJJNMwq",
    "difficulty": 2.622950819672131,
    "language": "java",
    "summary": "A word nest is created by taking a starting word, and generating a new string by placing the word inside itself. This process is then repeated.\n\nNesting 3 times with the word \"incredible\":\n\nstart  = incredible\nfirst  = incre(incredible)dible\nsecond = increin(incredible)credibledible\nthird  = increinincr(incredible)ediblecredibledible\n\nThe final nest is increin",
    "tags": [
      "conditions",
      "strings",
      "language_fundamentals",
      "regex"
    ],
    "title": "Word Nests (Part 2)"
  },
  {
    "_id": "8dFqh23xMpfFf85Wb",
    "difficulty": 2.625,
    "language": "java",
    "summary": "In the ECG Sequence (that always starts with the numbers 1 and 2), every number that succeeds is the smallest not already present in the sequence and that shares a factor (excluding 1) with its preceding number. Every number in the ECG Sequence (besides 1 and 2) has a different index from its natural index in a normal numeric sequence. See the example below to",
    "tags": [
      "numbers",
      "math"
    ],
    "title": "The ECG Sequence"
  },
  {
    "_id": "iaKJJoxdk5GNDqzJC",
    "difficulty": 2.65,
    "language": "java",
    "summary": "Write a function that sorts the given array of band names discounting the articles \"the\", \"a\", \"an\" if the first word of the band name categorically belongs to.\n\nExamples\nsortWithoutArticles([\"The New Yardbirds\", \"The Beatles\", \"The Square Roots\", \"On A Friday\", \"An Irony\"])\n➞ [\"The Beatles\", \"An Irony\", \"The New Yardbirds\", \"On A Friday\", \"The Square Roots\"]",
    "tags": [
      "arrays",
      "regex",
      "strings"
    ],
    "title": "Sorting Band Names Without Articles"
  },
  {
    "_id": "9P6yDuSZxYTihMtT6",
    "difficulty": 2.6506024096385543,
    "language": "java",
    "summary": "Write a function that select all words that have all the same vowels (in any order and/or number) as the first word, including the first word.\n\nExamples\nsameVowelGroup([\"toe\", \"ocelot\", \"maniac\"]) ➞ [\"toe\", \"ocelot\"]\n\nsameVowelGroup([\"many\", \"carriage\", \"emit\", \"apricot\", \"animal\"]) ➞ [\"many\"]\n\nsameVowelGroup([\"hoops\", \"chuff\", \"bot\", \"bottom\"]) ➞ [\"hoops\", \"b",
    "tags": [
      "objects",
      "strings",
      "sorting"
    ],
    "title": "Vowel Families"
  },
  {
    "_id": "FPemghc8ut9xfaMGo",
    "difficulty": 2.6511627906976742,
    "language": "java",
    "summary": "Given a sentence with numbers representing a word's location embedded within each word, return the sorted sentence.\n\nExamples\nrearrange(\"Tesh3 th5e 1I lov2e way6 she7 j4ust i8s.\") ➞ \"I love Tesh just the way she is.\"\n\nrearrange(\"the4 t3o man5 Happ1iest of6 no7 birt2hday steel8!\") ➞ \"Happiest birthday to the man of no steel!\"\n\nrearrange(\"is2 Thi1s T4est 3a\") ➞",
    "tags": [
      "algorithms",
      "logic",
      "sorting",
      "strings"
    ],
    "title": "Rearrange the Sentence"
  },
  {
    "_id": "QwGgDuvWtFmDTeRHw",
    "difficulty": 2.6547619047619047,
    "language": "java",
    "summary": "Write a function that adds two numbers. The catch, however, is that the numbers will be strings.\n\nExamples\naddStrNums(\"4\", \"5\") ➞ \"9\"\n\naddStrNums(\"abcdefg\", \"3\") ➞ \"-1\"\n\naddStrNums(\"1\", \"\") ➞ \"1\"\n\naddStrNums(\"1874682736267235927359283579235789257\", \"32652983572985729\") ➞ \"1874682736267235927391936562808774986\"\n\nNotes\nIf there are any non-numerical characters,",
    "tags": [
      "strings",
      "numbers",
      "language_fundamentals",
      "math"
    ],
    "title": "Add Two String Numbers"
  },
  {
    "_id": "G6dgZvzjWjoDsqECg",
    "difficulty": 2.65625,
    "language": "java",
    "summary": "Postfix notation is a mathematical notation in which operators follow their operands. In other words, pfexp1 pfexp2 op, where pfexp1 and pfexp2 are both postfix expressions.\n\nSome examples:\n2 2 + is the postfix notation of the expression 2 + 2.\n2 3 * 1 - 5 / is the postfix notation of the expression ((2 * 3) - 1) / 5.\n\nHere you have to compute the result from",
    "tags": [
      "data_structures",
      "language_fundamentals",
      "math"
    ],
    "title": "Postfix Notation"
  },
  {
    "_id": "DeZSpmYFRDzqsP7Qi",
    "difficulty": 2.6595744680851063,
    "language": "java",
    "summary": "Create a function that returns the product of two integers. This process of multiplication can be achieved via repetitive addition, thus, the process can be done recursively.\n\nExamples\nmultiply(10, 2) ➞ 20\n\nmultiply(-51, -4) ➞ 204\n\nmultiply(3, 9) ➞ 27\n\nmultiply(-21, 5) ➞ -105\n\nmultiply(1024, 7) ➞ 7168\n\nmultiply(273, -6) ➞ -1638\n\nNotes\nYou are expected to solve",
    "tags": [
      "recursion",
      "math"
    ],
    "title": "Recursion: Multiplication by Addition"
  },
  {
    "_id": "RvxGLMzoPoBgXhcaC",
    "difficulty": 2.663157894736842,
    "language": "java",
    "summary": "Create a function that takes a number as an argument and returns true if the number is a valid credit card number, false otherwise.\n\nCredit card numbers must be between 14-19 digits in length, and pass the Luhn test, described below:\n\nRemove the last digit (this is the \"check digit\").\nReverse the number.\nDouble the value of each digit in odd-numbered positions",
    "tags": [
      "validation",
      "numbers"
    ],
    "title": "Validate Credit Card Number"
  },
  {
    "_id": "JYaLkHy8cHgCPXAvy",
    "difficulty": 2.6666666666666665,
    "language": "java",
    "summary": "You are given two strings s and t.\n\nString t is generated by randomly shuffling string s and then adding one more letter at a random position.\n\nReturn the letter that was added to t.\n\nExamples\nfindTheDifference(\"bcefg\", \"bcdefg\") ➞ 'd'\n\nfindTheDifference(\"abcd\", \"abcde\") ➞ 'e'\n\nfindTheDifference(\"aiou\", \"aeiou\") ➞ 'e'\n\nfindTheDifference(\"mnoqrst\", \"mnopqrst\")",
    "tags": [
      "algorithms",
      "strings"
    ],
    "title": "Find the Difference"
  },
  {
    "_id": "xAe7W7WctsNkF5BwW",
    "difficulty": 2.6666666666666665,
    "language": "java",
    "summary": "Create a function that takes an array of numbers and returns the greatest common factor of those numbers.\n\nExamples\ngcd({84, 70, 42, 56}) ➞ 14\n\ngcd({19, 38, 76, 133}) ➞ 19\n\ngcd({120, 300, 95, 425, 625}) ➞ 5\n\nNotes\nThe GCD is the largest factor that divides all numbers in the array.",
    "tags": [
      "numbers",
      "arrays",
      "math"
    ],
    "title": "Find Greatest Common Divisor of N Numbers"
  },
  {
    "_id": "jvyJ6xmPyrWab2MeX",
    "difficulty": 2.6666666666666665,
    "language": "java",
    "summary": "Write a function that takes in three parameters: r, c, i, where:\n\nr and c are the number of rows and columns to initialize a zero matrix.\ni represents the array of incrementing operations (+1).\n\nAnd returns the resulting matrix after applying all the increment operations. Each increment operation will add 1 to the rows or columns specified in the incrementing",
    "tags": [
      "arrays",
      "higher_order_functions"
    ],
    "title": "Incrementing Rows and Columns"
  },
  {
    "_id": "SSxwbYon9Y7GjSD4k",
    "difficulty": 2.6744186046511627,
    "language": "java",
    "summary": "In this challenge, the goal is recomposing scrambled strings made of two or more words.\n\nEvery string has to be reversed not in its totality, but by vowels or consonants clusters in the order they are found; after splitting the string in groups, and reversing every group with more than a letter, you'll obtain the correct sequence:\n\nString = \"KiKdaola\"\n\nSeparat",
    "tags": [
      "strings",
      "regex",
      "formatting",
      "arrays"
    ],
    "title": "Recomposing Strings"
  },
  {
    "_id": "iT6NpDYyCycHuc2L3",
    "difficulty": 2.689655172413793,
    "language": "java",
    "summary": "Suppose a pair of identical characters serve as book ends for all characters in between them. Write a function that returns the total number of unique characters (books, so to speak) between all pairs of book ends.\n\nThe function will look like:\n\ncountUniqueBooks(\"stringSequence\", \"bookEnd\")\n\nExamples\ncountUniqueBooks(\"AZYWABBCATTTA\", 'A') ➞ 4\n\n// 1st bookend g",
    "tags": [
      "strings",
      "regex",
      "higher_order_functions"
    ],
    "title": "Books and Book Ends"
  },
  {
    "_id": "S5y88pjHnpr3qd5BD",
    "difficulty": 2.6923076923076925,
    "language": "java",
    "summary": "A happy number is a number which yields a 1 by repeatedly summing up the square of its digits. If such a process results in an endless cycle of numbers containing 4, the number is said to be an unhappy number.\n\nCreate a function that accepts a number and determines whether the number is a happy number or not. Return true if so, false otherwise.\n\nExamples\nisHap",
    "tags": [
      "strings",
      "arrays",
      "loops",
      "math",
      "validation"
    ],
    "title": "Happy Number"
  },
  {
    "_id": "vCqkPQ2ATmpqxaDgT",
    "difficulty": 2.6956521739130435,
    "language": "java",
    "summary": "Watson likes to challenge Sherlock's math ability. He will provide a starting and ending value describing a range of integers. Sherlock must determine the number of square integers within that range, inclusive of the endpoints (note that a square integer is an integer which is the square of an integer, e.g. 1, 4, 9, 16, 25, 36, 49).\n\nFor example, the range is",
    "tags": [
      "algorithms",
      "math"
    ],
    "title": "Sherlock and Squares"
  },
  {
    "_id": "2aajqTB69y7ZSSo9v",
    "difficulty": 2.696969696969697,
    "language": "java",
    "summary": "Create a function that takes a string of words and moves the first letter of each word to the end of it, then adds \"ay\" to the end of the word. This is called \"Pig Latin\" and it gets more complicated than the rules in this particular challenge. I've intentionally kept things simple, otherwise this would turn into an extremely tedious challenge.\n\nMove the first",
    "tags": [
      "algorithms",
      "strings",
      "formatting",
      "regex"
    ],
    "title": "Basic Pig Latin Translation"
  },
  {
    "_id": "x6vucQsSp6yA3ay4M",
    "difficulty": 2.7,
    "language": "java",
    "summary": "In Paul Cipher, only alpha characters will be encoded with the following rules:\n\nAll alpha characters will be treated as uppercase letters.\nThe first alpha character will not change (except for switching to upper case).\nAll subsequent alpha characters will be shifted toward \"Z\" by the alphabetical position of the previous alpha character (wrap back to \"A\" if \"",
    "tags": [
      "cryptography",
      "functional_programming",
      "math",
      "algorithms"
    ],
    "title": "Paul Cipher"
  },
  {
    "_id": "NwSd26PwgggJquov3",
    "difficulty": 2.7027027027027026,
    "language": "java",
    "summary": "A consecutive-run is a list of adjacent, consecutive integers. This list can be either increasing or decreasing. Create a function that takes an array of numbers and returns the length of the longest consecutive-run.\n\nTo illustrate:\n\nlongestRun([1, 2, 3, 5, 6, 7, 8, 9]) ➞ 5\n// Two consecutive runs: [1, 2, 3] and [5, 6, 7, 8, 9] (longest).\n\nExamples\nlongestRun(",
    "tags": [
      "arrays",
      "control_flow",
      "logic",
      "loops"
    ],
    "title": "Longest Consecutive Run"
  },
  {
    "_id": "hj5YbZ7u7cAWzEvCB",
    "difficulty": 2.7037037037037037,
    "language": "java",
    "summary": "Create a function that determines the minimum number of characters needed to make a strong password.\n\nA password is considered strong if it satisfies the following criteria:\n\nIts length is at least 6.\nIt contains at least one digit.\nIt contains at least one lowercase English character.\nIt contains at least one uppercase English character.\nIt contains at least",
    "tags": [
      "validation",
      "strings"
    ],
    "title": "Strong Password"
  },
  {
    "_id": "d9DKamDvmX6TiSd5u",
    "difficulty": 2.7058823529411766,
    "language": "java",
    "summary": "In this challenge, the goal is to calculate what time it is in two different cities. You're given a string cityA and the related string timestamp (time in cityA) with the date formatted in full U.S. notation, as in this example:\n\n\"July 21, 1983 23:01\"\n\nYou have to return a new timestamp with date and corresponding time in cityB, formatted as in this example:",
    "tags": [
      "dates",
      "formatting"
    ],
    "title": "Time Around the World"
  },
  {
    "_id": "3iDnqHWoSgKzYerPZ",
    "difficulty": 2.707692307692308,
    "language": "java",
    "summary": "In Text Twist, players try to score points by forming words using the letters from a 6-letter scrambled word. They win the round if they can successfully unscramble the 6-letter word.\n\nCreate a function that takes in an array of already-guessed words, the unscrambled 6-letter word and returns the total number of points the player scored in a particular round u",
    "tags": [
      "strings",
      "higher_order_functions",
      "games"
    ],
    "title": "Text Twist!"
  },
  {
    "_id": "D3MvMGRxTsN3mtNkH",
    "difficulty": 2.7111111111111112,
    "language": "java",
    "summary": "Given an integer value, return a new integer according to the rules below:\n\nSplit the number into groups of two digit numbers. If the number has an odd number of digits, return -1.\nFor each group of two digit numbers, concatenate the last digit to a new string the same number of times as the value of the first digit.\nReturn the result as an integer.\n\nlookAndSa",
    "tags": [
      "math",
      "numbers",
      "algorithms"
    ],
    "title": "Look And Say Numbers"
  },
  {
    "_id": "A8xQZTqzkn88cLCmj",
    "difficulty": 2.7142857142857144,
    "language": "java",
    "summary": "Create a function that takes the name of a chess piece, its position and a target position. The function should return true if the piece can move to the target and false if it can't.\n\nThe possible inputs are \"Pawn\", \"Knight\", \"Bishop\", \"Rook\", \"Queen\" and \"King\".\n\nExamples\ncanMove(\"Rook\", \"A8\", \"H8\") ➞ true\n\ncanMove(\"Bishop\", \"A7\", \"G1\") ➞ true\n\ncanMove(\"Queen",
    "tags": [
      "games",
      "logic",
      "algorithms",
      "validation"
    ],
    "title": "Chess Pieces"
  },
  {
    "_id": "GnspyiCzpSMJuobmP",
    "difficulty": 2.7142857142857144,
    "language": "java",
    "summary": "Create a function that returns a number which can block the player from reaching 3 in a row in a game of Tic Tac Toe. The number given as an argument will correspond to a grid of Tic Tac Toe: topleft is 0, topright is 2, bottomleft is 6, and bottomright is 8.\n\nCreate a function that takes two numbers a, b and returns another number.\nThis number should be the f",
    "tags": [
      "logic",
      "games",
      "algorithms"
    ],
    "title": "Block the Square in Tic Tac Toe"
  },
  {
    "_id": "YMT2d6RFcsvNv58cd",
    "difficulty": 2.7142857142857144,
    "language": "java",
    "summary": "In the garden, we have a house. We don't know how big the house is going to get. The garden is 50' x 50'. If you want to walk around the house, you'll need 3 feet so the house cannot be bigger than the width & depth of the garden minus the path to walk around it.\n\nWe Have a House\n\nIn this example you can see the arguments your function is going to get (in red)",
    "tags": [
      "algorithms",
      "math",
      "numbers"
    ],
    "title": "We Have a House"
  },
  {
    "_id": "ccKJ7Rvu7hsxMTYcw",
    "difficulty": 2.72,
    "language": "java",
    "summary": "Create a function that takes the memory size (ms is a string type) as an argument and returns the actual memory size.\n\nExamples\nactualMemorySize(\"32GB\") ➞ \"29.76GB\"\n\nactualMemorySize(\"2GB\") ➞ \"1.86GB\"\n\nactualMemorySize(\"512MB\") ➞ \"476MB\"\n\nNotes\nThe actual storage loss on a USB device is 7% of the overall memory size!\nIf the actual memory size was greater than",
    "tags": [
      "algebra",
      "strings",
      "math"
    ],
    "title": "The Actual Memory Size of Your USB Flash Drive"
  },
  {
    "_id": "6CkRcCdGAmCGPZnyb",
    "difficulty": 2.7294117647058824,
    "language": "java",
    "summary": "Create a function that takes an array and string. The function should remove the letters in the string from the array, and return the array.\n\nExamples\nremoveLetters([\"s\", \"t\", \"r\", \"i\", \"n\", \"g\", \"w\"], \"string\") ➞ [\"w\"]\n\nremoveLetters([\"b\", \"b\", \"l\", \"l\", \"g\", \"n\", \"o\", \"a\", \"w\"], \"balloon\") ➞ [\"b\", \"g\", \"w\"]\n\nremoveLetters([\"d\", \"b\", \"t\", \"e\", \"a\", \"i\"], \"eda",
    "tags": [
      "arrays",
      "logic",
      "strings"
    ],
    "title": "Remove The Word!"
  },
  {
    "_id": "bpqfCQ7zumf5Ep24Z",
    "difficulty": 2.730337078651685,
    "language": "java",
    "summary": "Write a function that returns true if exactly one word in the array differs in length from the rest. Return false in all other cases.\n\nExamples\noddOneOut([\"silly\", \"mom\", \"let\", \"the\"]) ➞ true\n\noddOneOut([\"swanky\", \"rhino\", \"moment\"]) ➞ true\n\noddOneOut([\"the\", \"them\", \"theme\"]) ➞ false\n\noddOneOut([\"very\", \"to\", \"an\", \"some\"]) ➞ false\n\nNotes\nThe length of the a",
    "tags": [
      "arrays",
      "validation"
    ],
    "title": "Odd One Out"
  },
  {
    "_id": "d5FL6or864rxqhATT",
    "difficulty": 2.730769230769231,
    "language": "java",
    "summary": "Given a number, insert duplicate digits on both sides of all digits which appear in a group of one.\n\nExamples\nnumbersNeedFriendsToo(22733) ➞ 2277733\n// The number can be split into groups 22, 7, and 33.\n// 7 appears on its own.\n// Put 7s on both sides to create 777.\n// Put the numbers together and return the result.\n\nnumbersNeedFriendsToo(4666) ➞ 444666\n\nnumbe",
    "tags": [
      "numbers",
      "loops",
      "regex"
    ],
    "title": "Lonely Numbers"
  },
  {
    "_id": "i3vx6M7poKZoZi8iK",
    "difficulty": 2.736842105263158,
    "language": "java",
    "summary": "A left-truncatable prime is a prime number that contains no 0 digits and, when the first digit is successively removed, the result is always prime.\n\nA right-truncatable prime is a prime number that contains no 0 digits and, when the last digit is successively removed, the result is always prime.\n\nCreate a function that takes an integer as an argument and:\n\nIf",
    "tags": [
      "math",
      "numbers",
      "loops"
    ],
    "title": "Truncatable Primes"
  },
  {
    "_id": "HssePSisNvLpv72zD",
    "difficulty": 2.739130434782609,
    "language": "java",
    "summary": "Travelling through Europe one needs to pay attention to how the license plate in the given country is displayed. When crossing the border you need to park on the shoulder, unscrew the plate, re-group the characters according to the local regulations, attach it back and proceed with the journey.\n\nCreate a solution that can format the dmv number into a plate num",
    "tags": [
      "formatting",
      "strings"
    ],
    "title": "License Plate"
  },
  {
    "_id": "2j6h73ixjYW9FdtP2",
    "difficulty": 2.75,
    "language": "java",
    "summary": "In numbers theory, a positive composite integer is a Smith number if its digital root is equal to the digital root of the sum of its prime factors, with factors being counted by multiplicity. Trivially, every prime is also a Smith number, having just one prime factor that is equal to itself. If two Smith numbers are consecutive in the integer series, then they",
    "tags": [
      "numbers",
      "math",
      "higher_order_functions",
      "loops"
    ],
    "title": "The Smiths"
  },
  {
    "_id": "7gaPYwZiZzAwQvi2q",
    "difficulty": 2.75,
    "language": "java",
    "summary": "An out-shuffle, also known as an out Faro shuffle or a perfect shuffle, is a controlled method for shuffling playing cards. It is performed by splitting the deck into two equal halves and interleaving them together perfectly, with the condition that the top card of the deck remains in place.\n\nUsing an array to represent a deck of cards, an out-shuffle looks li",
    "tags": [
      "arrays",
      "math",
      "loops"
    ],
    "title": "How Many Shuffles?"
  },
  {
    "_id": "JyskomdFw4tYgAELT",
    "difficulty": 2.75,
    "language": "java",
    "summary": "A new number is a number that is not a permutation of any smaller number.  869 is not a new number because it is just a permutation of smaller numbers, 689 and 698. 509 is a new number because it can't be formed by a permutation of any smaller number (leading zeros not allowed).\n\nWrite a function that takes a non-negative integer and returns true if the intege",
    "tags": [
      "numbers",
      "validation",
      "math"
    ],
    "title": "New Numbers"
  },
  {
    "_id": "QdENiEqqhHtYFrk5A",
    "difficulty": 2.75,
    "language": "java",
    "summary": "A number is Zygodrome if it can be partitioned into clusters of repeating digits with a length equals or greater than two (as to say that repeating digits need to be placed as  an adjacent pair or a greater group, and that no single digits are allowed).\n\nGiven a non-negative integer num, implement a function that returns true if num is a Zygodrome number, or f",
    "tags": [
      "numbers",
      "validation"
    ],
    "title": "Zygodromes"
  },
  {
    "_id": "zjEdKiuKbmhXMx993",
    "difficulty": 2.75,
    "language": "java",
    "summary": "What is the percentage you can score on a test, which single-handedly brings down the class average by 5%? Given an array of your classmates scores, create a function that returns the answer. Round to the nearest percent.\n\nExamples\ntakeDownAverage([\"95%\", \"83%\", \"90%\", \"87%\", \"88%\", \"93%\"]) ➞ \"54%\"\n\ntakeDownAverage([\"10%\"]) ➞ \"0%\"\n\ntakeDownAverage([\"53%\", \"79%",
    "tags": [
      "arrays",
      "math",
      "numbers"
    ],
    "title": "Bring Down The Class Average"
  },
  {
    "_id": "Jtufg4A5WJMDk4FRT",
    "difficulty": 2.75,
    "language": "java",
    "summary": "Arun is obsessed with primes, especially five. He considers a number to be luckiest if it has the highest number of five in it. If two numbers have the same frequency of five, Arun considers the larger of them to be luckiest, and if there is no five in any number, the first given number is considered luckiest. Help him choose the luckiest number.\n\nExamples\nget",
    "tags": [
      "algorithms",
      "arrays"
    ],
    "title": "Count 5s And Win"
  },
  {
    "_id": "8Pgn2HjatQgF9Rdu8",
    "difficulty": 2.75,
    "language": "java",
    "summary": "A spider web is defined by rings numbered from 0-4 from the center and radials labeled clock-wise from the top as A-H.\n\nCreate a function that takes the coordinates of spider and fly and returns the shortest path for the spider to get to the fly.\n\nIt's worth noting that the shortest path should be calculated \"geometrically\", not by counting the number of point",
    "tags": [
      "algorithms",
      "logic",
      "strings",
      "validation"
    ],
    "title": "Spider🕷️vs. 🦟 Fly"
  },
  {
    "_id": "jH4wEAk4gXZommdfo",
    "difficulty": 2.7586206896551726,
    "language": "java",
    "summary": "A word value can be established summing up all the numeric values of every single character (excluding spaces and punctuation): a value from 1 (\"a\") to 26 (\"z\") is given to letters, while numbers have their literal values, from 0 to 9. The sentence value is the sum of the values of the words.\n\nsentence = \"ABC ! abc ... @ 123\"\n// Remove spaces, punctuation and",
    "tags": [
      "strings",
      "numbers",
      "validation",
      "scope"
    ],
    "title": "Sentence Primeness"
  },
  {
    "_id": "QdrLgb37ZZwYMKXwi",
    "difficulty": 2.760869565217391,
    "language": "java",
    "summary": "Create a function that takes a string and returns the reversed string. However there's a few rules to follow in order to make the challenge interesting:\n\nThe UPPERCASE/lowercase positions must be kept in the same order as the original string (see example #1 and #2).\nSpaces must be kept in the same order as the original string (see example #3).\n\nExamples\nspecia",
    "tags": [
      "strings",
      "formatting"
    ],
    "title": "Reverse the String (with a catch)"
  },
  {
    "_id": "De5e8kdsCFmKvc6w8",
    "difficulty": 2.761904761904762,
    "language": "java",
    "summary": "Given a string of digits, return the longest substring with alternating odd/even or even/odd digits. If two or more substrings have the same length, return the substring that occurs first.\n\nExamples\nlongestSubstring(\"225424272163254474441338664823\") ➞ \"272163254\"\n// substrings = 254, 272163254, 474, 41, 38, 23\n\nlongestSubstring(\"594127169973391692147228678476\"",
    "tags": [
      "language_fundamentals",
      "math",
      "regex"
    ],
    "title": "Longest Alternating Substring"
  },
  {
    "_id": "ze68rGX45ajtjuBNX",
    "difficulty": 2.764705882352941,
    "language": "java",
    "summary": "Write a function that makes the first number as large as possible by swapping out its digits for digits in the second number.\n\nTo illustrate:\nmaxPossible(9328, 456) ➞ 9658\n// 9658 is the largest possible number built from swaps from 456.\n// 3 replaced with 6 and 2 replaced with 5.\n\nExamples\nmaxPossible(523, 76) ➞ 763\n\nmaxPossible(9132, 5564) ➞ 9655\n\nmaxPossibl",
    "tags": [
      "higher_order_functions",
      "strings"
    ],
    "title": "Maximize the First Number"
  },
  {
    "_id": "njGTBhXa7zP3pvsnp",
    "difficulty": 2.765957446808511,
    "language": "java",
    "summary": "Given an input string, reverse the string word by word.\n\nExamples\nreverseWords(\"the sky is blue\") ➞ \"blue is sky the\"\n\nreverseWords(\"  hello world!  \") ➞ \"world! hello\"\n\nreverseWords(\"a good   example\") ➞ \"example good a\"\n\nNotes\nA word is defined as a sequence of non-space characters.\nThe input string may contain leading or trailing spaces. However, your rever",
    "tags": [
      "strings",
      "formatting"
    ],
    "title": "Reverse Words in a String"
  },
  {
    "_id": "jGYvAq5bpZhicYMWW",
    "difficulty": 2.769230769230769,
    "language": "java",
    "summary": "Write a function that receives an array of x integers and returns an array of x integers in the Nth term of a quadratic number sequence (where x is the length of the incoming array). Your function should return the continuation of the quadratic sequence of the length equal to the length of the given array.\n\nExamples\nquadSequence([48, 65, 84]) ➞ [105, 128, 153]",
    "tags": [
      "algebra",
      "math",
      "numbers"
    ],
    "title": "Quad Sequence"
  },
  {
    "_id": "uqZD99bDGx3LnSv6w",
    "difficulty": 2.769230769230769,
    "language": "java",
    "summary": "Write a function that, given the start startNum and end endNum values, return an array containing all the numbers inclusive to that range. See examples below.\n\nExamples\ninclusiveArray(1, 5) ➞ [1, 2, 3, 4, 5]\n\ninclusiveArray(2, 8) ➞ [2, 3, 4, 5, 6, 7, 8]\n\ninclusiveArray(10, 20) ➞ [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n\ninclusiveArray(17, 5) ➞ [17]\n\nIMPORT",
    "tags": [
      "recursion",
      "arrays",
      "sorting"
    ],
    "title": "Recursion: Inclusive Array Ranges"
  },
  {
    "_id": "tNKWXJZPgRHZAc9Ja",
    "difficulty": 2.774193548387097,
    "language": "java",
    "summary": "Java offers some bit operations but not bit rotation. To complete that, create a function that takes three parameters:\n\nn: Integer, which in binary representaion should be rotated.\nm:  Number of rotation steps that should be performed.\nd: Boolean value; true = rotation right, false = rotation left.\n\nYour function should return an integer as a result of its rot",
    "tags": [
      "bit_operations",
      "strings"
    ],
    "title": "Bit Rotation"
  },
  {
    "_id": "H3TMp2swn3Q3sCxpv",
    "difficulty": 2.789473684210526,
    "language": "java",
    "summary": "Create a function that takes an integer argument and returns an array of prime numbers found in the decimal representation of that number (not factors).\n\nFor example, extractPrimes(1717) returns [7, 7, 17, 17, 71].\n\nThe array should be in ascending order. If a prime number appears more than once, every occurrence should be listed. If no prime numbers are found",
    "tags": [
      "numbers",
      "algorithms",
      "math",
      "cryptography"
    ],
    "title": "Find All Prime Numbers In Decimal Integer"
  },
  {
    "_id": "HJSpyCG7we27Afkqn",
    "difficulty": 2.7916666666666665,
    "language": "java",
    "summary": "Create a recursive function that tests if a number is the exact upper bound of the factorial of n. If so, return an array of the exact factorial bound and n, or otherwise, an empty array.\n\nExamples\nisExact(6) ➞ [6, 3]\n\nisExact(24) ➞ [24, 4]\n\nisExact(125) ➞ []\n\nisExact(720) ➞ [720, 6]\n\nisExact(1024) ➞ []\n\nisExact(40320) ➞ [40320, 8]\n\nNotes\nYou are expected to s",
    "tags": [
      "recursion",
      "numbers",
      "math"
    ],
    "title": "Recursion: Exact Factorial Bounds"
  },
  {
    "_id": "hkKL3KuKpAcgcKdp3",
    "difficulty": 2.8,
    "language": "java",
    "summary": "A depth-first search of a graph is one way of traversing the nodes of the graph along edges.  When DFS reaches a node for the first time, it marks the node as being reached and then checks its neighbors. Once all of a node's neighbors have been checked, the node is marked as done.  If the starting node is marked as done before all nodes of a graph are reached,",
    "tags": [
      "math",
      "algorithms",
      "data_structures"
    ],
    "title": "Depth First Traversal"
  },
  {
    "_id": "mdimqTJv7pRS3sYZu",
    "difficulty": 2.8,
    "language": "java",
    "summary": "Given a slope of a line, calculate and return the value of the angle of line (relative to the y -axis). For example, a horizontal line would be 90 degrees.\n\nExamples\nconvert(1) ➞ 45\n\nconvert(0) ➞ 90\n\nconvert(-1) ➞ 135\n\nNotes\nAll values returned should be in degrees.\nAll values returned should be rounded to the nearest whole number.\nThe value to return must be ",
    "tags": [
      "algebra",
      "math",
      "numbers"
    ],
    "title": "Slope to Angle Conversion"
  },
  {
    "_id": "KbLqgHtYt6TR2oCHQ",
    "difficulty": 2.8,
    "language": "java",
    "summary": "Write two functions:\n\nOne that returns the maximum product of three numbers in an array.\nOne that returns the minimum product of three numbers in an array.\n\nExamples\nmaxProduct([-8, -9, 1, 2, 7]) ➞ 504\n\nmaxProduct([-8, 1, 2, 7, 9]) ➞ 126\n\nminProduct([1, -1, 1, 1]) ➞ -1\n\nminProduct([-5, -3, -1, 0, 4]) ➞ -15\n\nNotes\nN/A",
    "tags": [
      "numbers",
      "arrays"
    ],
    "title": "Maximum And Minimum Product Triplets"
  },
  {
    "_id": "gDYfzq68mthtmX4Q5",
    "difficulty": 2.8,
    "language": "java",
    "summary": "Given a name, return the letter with the highest index in alphabetical order, with its corresponding index, in the form of a string. You are prohibited to use max() nor is reassigning a value to the alphabet array.\n\nExamples\nalphabet = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\",",
    "tags": [
      "numbers",
      "language_fundamentals",
      "sorting"
    ],
    "title": "Highest Index (With a Twist)"
  },
  {
    "_id": "inPpSzkuRCocLM3x2",
    "difficulty": 2.8181818181818183,
    "language": "java",
    "summary": "Create a function that takes an array arr and a number n and returns an array of two integers from arr whose product is that of the number n of the following form:\n\n[valueatlowerindex, valueathigherindex]\n\nMake sure that you return an array of two integers that exactly divides n (product of n) and that the indices coincide the above format. The sorting of the",
    "tags": [
      "loops",
      "conditions",
      "data_structures",
      "math"
    ],
    "title": "Two Product Problem"
  },
  {
    "_id": "qBueZpCx5YfQYj5j2",
    "difficulty": 2.823529411764706,
    "language": "java",
    "summary": "Wait, a very hard challenge for returning the sum of two numbers? Well in this one, the numbers can have 1000 digits!\n\nSo, what's the twist? You have to do the summation as if you're doing it manually on a piece of paper, thus, the conversion of the numeric string to numeric literal is basically disallowed.\n\nCreate a function that:\nTakes two numbers as strings",
    "tags": [
      "math",
      "algorithms",
      "numbers"
    ],
    "title": "Return the Sum of Two Numbers (With a Twist)"
  },
  {
    "_id": "MvFCbkJeZ8Ydq3sPp",
    "difficulty": 2.8260869565217392,
    "language": "java",
    "summary": "Given an RGB(A) CSS color, determine whether its format is valid or not. Create a function that takes a string (e.g. \"rgb(0, 0, 0)\") and return true if it's format is correct, otherwise return false.\n\nExamples\nvalidColor(\"rgb(0,0,0)\") ➞ true\n\nvalidColor(\"rgb(0,,0)\") ➞ false\n\nvalidColor(\"rgb(255,256,255)\") ➞ false\n\nvalidColor(\"rgba(0,0,0,0.123456789)\") ➞ true",
    "tags": [
      "regex",
      "conditions",
      "validation"
    ],
    "title": "Is It a Valid RGB(A) Color?"
  },
  {
    "_id": "qafJTrENQeMq6apgy",
    "difficulty": 2.84,
    "language": "java",
    "summary": "Traveling through Europe one needs to pay attention to how the license plate in the given country is displayed. When crossing the border you need to park on the shoulder, unscrew the plate, re-group the characters according to the local regulations, attach it back and proceed with the journey.\n\nCreate a solution that can format the dmv number into a plate numb",
    "tags": [
      "recursion",
      "strings",
      "regex",
      "logic"
    ],
    "title": "Recursion: License Plate"
  },
  {
    "_id": "EiemTcctcJXCn6eJa",
    "difficulty": 2.8461538461538463,
    "language": "java",
    "summary": "Write a function that returns the minimum number of swaps to create an alternating binary string. The input will have the same number of zeroes and ones.\n\nExamples\nminSwaps(\"101010\") ➞ 0\n\nminSwaps(\"10001110\") ➞ 1\n// Swap the 0 at index 2 for the 1 at index 5.\n\nminSwaps(\"11110000\") ➞ 2\n\nNotes\nN/A",
    "tags": [
      "strings",
      "loops"
    ],
    "title": "Minimum Swaps to Alternate a Binary String"
  },
  {
    "_id": "9qSNiDpyqipHFmdwp",
    "difficulty": 2.849056603773585,
    "language": "java",
    "summary": "Julius Caesar protected his confidential information by encrypting it using a cipher. Caesar's cipher (check Resources tab for more info) shifts each letter by a number of letters. If the shift takes you past the end of the alphabet, just rotate back to the front of the alphabet. In the case of a rotation by 3, w, x, y and z would map to z, a, b and c.\n\nCreate",
    "tags": [
      "algorithms",
      "strings",
      "cryptography"
    ],
    "title": "Caesar's Cipher"
  },
  {
    "_id": "NPJYA7qfRsPxDiaNz",
    "difficulty": 2.857142857142857,
    "language": "java",
    "summary": "Given a column title as it appears in an Excel sheet return its corresponding column number.\n\nThe number is computed in the following way:\n\nA -> 1\nB -> 2\nC -> 3\n...\nZ -> 26\nAA -> 27\nAB -> 28\n...\n\nExamples\ntitleToNumber(\"A\") ➞ 1\n\ntitleToNumber(\"R\") ➞ 18\n\ntitleToNumber(\"AB\") ➞ 28\n\nNotes\n1 <= len(s) <= 7\ns consists only of uppercase English letters.",
    "tags": [
      "language_fundamentals",
      "numbers",
      "strings"
    ],
    "title": "Excel Sheet Column Number"
  },
  {
    "_id": "wqvzvSroyNwifv35B",
    "difficulty": 2.8620689655172415,
    "language": "java",
    "summary": "In a calendar year, it is exactly 365.25 days. But, eventually, this will lead to confusion because humans normally count by exact divisibility of 1 and not with decimal points. So, to avoid the latter, it was decided to add up all 0.25 days every four-year cycle and give that year 366 days (including February 29 as an intercalary day) and call it a leap year.",
    "tags": [
      "algorithms",
      "math",
      "numbers",
      "validation"
    ],
    "title": "Is It a Leap Year?"
  },
  {
    "_id": "iWRbMto8cT7D3Rppx",
    "difficulty": 2.8666666666666667,
    "language": "java",
    "summary": "N-bonacci numbers are generalisations of the fibonacci sequence, where the next term is always the sum of the previous N terms. By convention, the first (N-1) terms are all 0 and the Nth term is 1.\n\nThe initial 10 terms of the first 5 N-bonacci sequences are therefore:\n\n1-bonacci = 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...\n2-bonacci = 0, 1, 1, 2, 3, 5, 8, 13, 21, 34,",
    "tags": [
      "math",
      "numbers"
    ],
    "title": "N-bonacci Numbers"
  },
  {
    "_id": "Ebw8nnRzgFcWgY5p8",
    "difficulty": 2.8666666666666667,
    "language": "java",
    "summary": "Write a function that returns true if the knights are placed on a chessboard such that no knight can capture another knight. Here, 0's represent empty squares and 1's represent knights.\n\nExamples\ncannotCapture([\n  [0, 0, 0, 1, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 1, 0, 0, 0, 1, 0, 0],\n  [0, 0, 0, 0, 1, 0, 1, 0],\n  [0, 1, 0, 0, 0, 1, 0, 0],\n  [0, 0, 0",
    "tags": [
      "validation",
      "arrays",
      "games"
    ],
    "title": "Knights On A Board"
  },
  {
    "_id": "C8EQJybQWzv6WsQdd",
    "difficulty": 2.869565217391304,
    "language": "java",
    "summary": "Each year has 365 or 366 days. Given a string date representing a Gregorian calendar date formatted as mm/dd/yyyy, return the day-number of the year.\n\nExamples\ndayOfYear(\"12/13/2020\") ➞ 348\n\ndayOfYear(\"12/17/2020\") ➞ 352\n\ndayOfYear(\"11/16/2020\") ➞ 321\n\ndayOfYear(\"01/09/2019\") ➞ 9\n\ndayOfYear(\"03/01/2004\") ➞ 61\n\ndayOfYear(\"12/31/2000\") ➞ 366\n\nNotes\nAll input str",
    "tags": [
      "dates",
      "formatting",
      "numbers",
      "strings"
    ],
    "title": "Day Number Of The Year"
  },
  {
    "_id": "xxig52timWewkiJxY",
    "difficulty": 2.872340425531915,
    "language": "java",
    "summary": "Write a function that accepts a positive integer between 0 and 999 inclusive and returns a string representation of that integer written in English.\n\nExamples\nnumToEng(0) ➞ \"zero\"\n\nnumToEng(18) ➞ \"eighteen\"\n\nnumToEng(126) ➞ \"one hundred twenty six\"\n\nnumToEng(909) ➞ \"nine hundred nine\"\n\nNotes\nThere are no hyphens used (e.g. \"thirty five\" not \"thirty-five\").\nThe",
    "tags": [
      "algorithms",
      "data_structures",
      "strings"
    ],
    "title": "Numbers to English"
  },
  {
    "_id": "cwyHz8adjAg6dpxce",
    "difficulty": 2.875,
    "language": "java",
    "summary": "Write a recursive function that transforms a multi-dimensional array into a single-dimensional array.\n\nExamples\nflatten([[17.2, 500, \"code\"], \"generate\"]) ➞ [17.2, 500, \"code\", \"generate\"]\n\nflatten([[[[[2, 14, \"core\"]]], 2, 3, 4]]) ➞ [2, 14, \"core\", 2, 3, 4]\n\nflatten([[\"dimension\"], \"vertical\", [[\"objective\"]]]) ➞ [\"dimension\", \"vertical\", \"objective\"]\n\nflatte",
    "tags": [
      "recursion",
      "arrays",
      "objects"
    ],
    "title": "Multi-Dimensional Array Into Single-Dimensional Array"
  },
  {
    "_id": "f7KeKyNK9BRm9DuCX",
    "difficulty": 2.883720930232558,
    "language": "java",
    "summary": "Create a function that takes a string with at least one sentence in it and returns a string with the part(s) after the comma at the beginning of the sentence(s).\n\nExamples\nreverseLegoYoda(\"Hit you with my stick, I shall.\")\n➞ \"I shall hit you with my stick.\"\n\nreverseLegoYoda(\"Rejected me, my crush has. Ketamine, I need.\")\n➞ \"My crush has rejected me. I need ket",
    "tags": [
      "strings",
      "formatting"
    ],
    "title": "Reverse LEGO Yoda"
  },
  {
    "_id": "zjpgz6YswDeLKfrAA",
    "difficulty": 2.8846153846153846,
    "language": "java",
    "summary": "About a month ago I stumbled upon an interesting problem — something called the 25 split. In the problem, you had to break up 25 into parts, and, from those parts that add to it, try to create the biggest product.\n\nFor example, 3 * 22 = 66 or 5 * 5 * 5 * 5 * 5 = 3125. With this first part, return the value of the biggest product possible using natural number p",
    "tags": [
      "algebra",
      "math",
      "numbers",
      "control_flow"
    ],
    "title": "Split 25 (Part 1)"
  },
  {
    "_id": "BfLgSs2YAtjDYEyJM",
    "difficulty": 2.8852459016393444,
    "language": "java",
    "summary": "A pronic number (or otherwise called as heteromecic) is a number which is a product of two consecutive integers, that is, a number of the form n(n + 1).\n\nCreate a function that determines whether a number is pronic or not.\n\nExamples\nisHeteromecic(0) ➞ true\n// 0 * (0 + 1) = 0 * 1 = 0\n\nisHeteromecic(2) ➞ true\n// 1 * (1 + 1) = 1 * 2 = 2\n\nisHeteromecic(7) ➞ false",
    "tags": [
      "recursion",
      "numbers",
      "math",
      "validation"
    ],
    "title": "Recursion: Pronic Number"
  },
  {
    "_id": "Zsjvvf7Kir8wJr8vM",
    "difficulty": 2.888888888888889,
    "language": "java",
    "summary": "A Fibonacci word is a specific sequence of binary digits (or symbols from any two-letter alphabet). The Fibonacci word is formed via repeated concatenation in the same fashion that the Fibonacci numbers are formed via repeated addition.\n\nCreate a function that takes a number n as an argument and returns the first n elements of the Fibonacci word sequence.\n\nExa",
    "tags": [
      "arrays",
      "recursion",
      "strings"
    ],
    "title": "Recursion: Fibonacci Word"
  },
  {
    "_id": "FToTLuiB7bmFngkjr",
    "difficulty": 2.891891891891892,
    "language": "java",
    "summary": "Each person in Italy has an unique identifying ID code issued by the national tax office after the birth registration: the Fiscal Code (Codice Fiscale). Check the Resources tab for more info on this.\n\nGiven an object containing the personal data of a person (name, surname, gender and date of birth) return the 11 code characters as a string following these step",
    "tags": [
      "strings",
      "algorithms",
      "formatting",
      "objects"
    ],
    "title": "The Fiscal Code"
  },
  {
    "_id": "KnpqDdkibon22Eexa",
    "difficulty": 2.891891891891892,
    "language": "java",
    "summary": "Create a function that takes an Arabic number and converts it into a Roman number.\n\nExamples\nconvertToRoman(2) ➞ \"II\"\n\nconvertToRoman(12) ➞ \"XII\"\n\nconvertToRoman(16) ➞ \"XVI\"\n\nNotes\nAll roman numerals should be returned as uppercase.\nThe largest number that can be represented in this notation is 3,999.",
    "tags": [
      "arrays",
      "data_structures",
      "numbers"
    ],
    "title": "Roman Numeral Converter"
  },
  {
    "_id": "y86z2FK3r3uLJrGvu",
    "difficulty": 2.896551724137931,
    "language": "java",
    "summary": "Create a function that takes a number num and returns each place value in the number.\n\nExamples\nnumSplit(39) ➞ [30, 9]\n\nnumSplit(-434) ➞ [-400, -30, -4]\n\nnumSplit(100) ➞ [100, 0, 0]\n\nnumSplit(121317) ➞ [100000, 20000, 1000, 300, 10, 7]\n\nNotes\nN/A",
    "tags": [
      "arrays",
      "numbers"
    ],
    "title": "Splitting Up Numbers"
  },
  {
    "_id": "powuANEDgMh8bxDry",
    "difficulty": 2.8974358974358974,
    "language": "java",
    "summary": "Write a function that returns the longest non-repeating substring for a string input.\n\nExamples\nlongestNonrepeatingSubstring(\"abcabcbb\") ➞ \"abc\"\n\nlongestNonrepeatingSubstring(\"aaaaaa\") ➞ \"a\"\n\nlongestNonrepeatingSubstring(\"abcde\") ➞ \"abcde\"\n\nlongestNonrepeatingSubstring(\"abcda\") ➞ \"abcd\"\n\nNotes\nIf multiple substrings tie in length, return the one which occurs f",
    "tags": [
      "strings",
      "loops"
    ],
    "title": "Longest Substring with Non-repeating Characters"
  },
  {
    "_id": "SrdMmMwXn5TAKTx9w",
    "difficulty": 2.909090909090909,
    "language": "java",
    "summary": "You will be given a string consisting of a list of integers and their relationships to their neighboring integers. For instance:\n\n\"-15-15=5\") ➞ false\n// This is false because 0 is not less than -5.\n\nvalidateTheRelationships(\"-159990, >=, <=`\nTests will not contain any spaces.",
    "tags": [
      "strings",
      "conditions",
      "validation"
    ],
    "title": "Validate the Relationships Between Integers in a String"
  },
  {
    "_id": "BbaB4feCYJWPtFmcg",
    "difficulty": 2.914285714285714,
    "language": "java",
    "summary": "The International Standard Book Number (ISBN) is a unique identifying number given to each published book. ISBNs assigned after January 2007 are 13 digits long (ISBN-13), however books with 10-digit ISBNs are still in wide use.\n\nAn ISBN-10 is verified this way:\n\nisbn10 = \"0330301624\"\n\nLine up the digits with the numbers 10 to 1:\n\n| | | | | | | | | | |\n---|---|",
    "tags": [
      "algorithms",
      "validation",
      "loops"
    ],
    "title": "International Standard Book Numbers"
  },
  {
    "_id": "TXFh4mGekgo6Jgyzz",
    "difficulty": 2.9166666666666665,
    "language": "java",
    "summary": "Create a function that takes a string representing a fraction, and return a string representing that input as a mixed number.\n\nMixed numbers are of the form 1 2/3 — note the space between the whole number portion and the fraction portion.\nResulting fractions should be fully reduced (see example #2).\nIf a result is a whole number with no fractional remainder, r",
    "tags": [
      "math",
      "numbers"
    ],
    "title": "Fraction to Mixed Number"
  },
  {
    "_id": "XXF7YysFvEqv4FJ8n",
    "difficulty": 2.923076923076923,
    "language": "java",
    "summary": "Write a function that accepts an array of numbers (where each number appears three times except for one which appears only once) and finds that unique number in the array and returns it.\n\nExamples\nsingleNumber([2, 2, 3, 2]) ➞ 3\n\nsingleNumber([0, 1, 0, 1, 0, 1, 99]) ➞ 99\n\nsingleNumber([-1, 2, -4, 20, -1, 2, -4, -4, 2, -1]) ➞ 20\n\nNotes\nThe function needs to be e",
    "tags": [
      "arrays",
      "algorithms",
      "conditions",
      "numbers"
    ],
    "title": "Find the Single Number"
  },
  {
    "_id": "RdwGosFoQQT6Z82sm",
    "difficulty": 2.9375,
    "language": "java",
    "summary": "Write a recursive function that takes a string input and returns the string in a reversed case and order.\n\nExamples\ninvert(\"dLROW YM sI HsEt\") ➞ \"TeSh iS my worlD\"\n\ninvert(\"ytInIUgAsnOc\") ➞ \"CoNSaGuiNiTY\"\n\ninvert(\"step on NO PETS\") ➞ \"step on NO PETS\"\n\ninvert(\"XeLPMoC YTiReTXeD\") ➞ \"dExtErIty cOmplEx\"\n\nNotes\nNo empty strings and will neither contain special ch",
    "tags": [
      "recursion",
      "strings",
      "validation"
    ],
    "title": "Recursion: Case and Index Inverter"
  },
  {
    "_id": "p38KD5Far2g72fv3d",
    "difficulty": 2.9393939393939394,
    "language": "java",
    "summary": "When two blocks of the same \"type\" are adjacent to each other, the entire contiguous block disappears (pops off). If this occurs, this can allow previously separated blocks to be in contact with each other, setting off a chain reaction. This will continue until each block is surrounded by a different block.\n\nHere's a demonstration:\n['A', 'B', 'C', 'C', 'B', 'D",
    "tags": [
      "games",
      "arrays",
      "regex",
      "loops"
    ],
    "title": "Popping Blocks"
  },
  {
    "_id": "jLbdG6YvkYCizS662",
    "difficulty": 2.9411764705882355,
    "language": "java",
    "summary": "For this exercise, keep in mind the following definitions:\n\nA term is either an initials or word.\ninitials = 1 character\nwords = 2+ characters (no dots allowed)\n\nA valid name is a name written in one of the following ways:\n\nH. Wells\nH. G. Wells\nHerbert G. Wells\nHerbert George Wells\n\nThe following names are invalid:\n\nHerbert  or Wells (single names not allowed)",
    "tags": [
      "regex",
      "conditions",
      "functional_programming"
    ],
    "title": "Valid Name"
  },
  {
    "_id": "kJpXCjfuWjpLGdc5g",
    "difficulty": 2.943396226415094,
    "language": "java",
    "summary": "Write a function that takes a string and returns a string with the correct case for character titles in the Game of Thrones series.\nThe words and, the, of and in should be lowercase.\nAll other words should have the first character as uppercase and the rest lowercase.\n\nExamples\ncorrectTitle(\"jOn SnoW, kINg IN thE noRth.\")\n➞ \"Jon Snow, King in the North.\"\n\ncorre",
    "tags": [
      "strings",
      "formatting",
      "language_fundamentals"
    ],
    "title": "Game of Thrones: Character Titles"
  },
  {
    "_id": "DbqdoQDMv88NHSgi4",
    "difficulty": 2.9523809523809526,
    "language": "java",
    "summary": "Write a function that returns an array of strings populated from the slices of n-length characters of the given word (a slice after another while n-length applies onto the word).\n\nExamples\ncollect(\"intercontinentalisationalism\", 6)\n➞ [\"ationa\", \"interc\", \"ntalis\", \"ontine\"]\n\ncollect(\"strengths\", 3)\n➞ [\"eng\", \"str\", \"ths\"]\n\ncollect(\"pneumonoultramicroscopicsili",
    "tags": [
      "recursion",
      "sorting",
      "strings",
      "arrays"
    ],
    "title": "Recursion: N-Length Letter Groups"
  },
  {
    "_id": "YPqsC4RCQ99REvQAn",
    "difficulty": 2.953488372093023,
    "language": "java",
    "summary": "Write a function that retrieves the top 3 longest words of a newspaper headline and transforms them into hashtags. If multiple words tie for the same length, retrieve the word that occurs first.\n\nExamples\ngetHashTags(\"How the Avocado Became the Fruit of the Global Trade\")\n➞ [\"#avocado\", \"#became\", \"#global\"]\n\ngetHashTags(\"Why You Will Probably Pay More for You",
    "tags": [
      "strings",
      "sorting",
      "regex"
    ],
    "title": "Headline Hash Tags"
  },
  {
    "_id": "rqum6rzyZQrC43Ldv",
    "difficulty": 2.955223880597015,
    "language": "java",
    "summary": "This challenge is an English twist on the Japanese word game Shiritori. The basic premise is to follow two rules:\n\nFirst character of next word must match last character of previous word.\nThe word must not have already been said.\n\nBelow is an example of a Shiritori game:\n[\"word\", \"dowry\", \"yodel\", \"leader\", \"righteous\", \"serpent\"]  // valid!\n\n[\"motive\", \"beach",
    "tags": [
      "control_flow",
      "games",
      "classes",
      "strings"
    ],
    "title": "Shiritori Game"
  },
  {
    "_id": "8b6hgBwoRAzqbAbYA",
    "difficulty": 2.9558823529411766,
    "language": "java",
    "summary": "Write a function that returns true if the given number num is a product of any two prime numbers.\n\nExamples\nproductOfPrimes(2059) ➞ true\n// 29*71=2059\n\nproductOfPrimes(10) ➞ true\n// 2*5=10\n\nproductOfPrimes(25) ➞ true\n// 5*5=25\n\nproductOfPrimes(999) ➞ false\n// There are no prime numbers.\n\nNotes\nnum is always greater than 0.\n0 and 1 aren't prime numbers.",
    "tags": [
      "algebra",
      "math",
      "numbers",
      "validation"
    ],
    "title": "Product of Two Prime Numbers"
  },
  {
    "_id": "Sk3DXY6ZdwAKj6r8d",
    "difficulty": 2.9743589743589745,
    "language": "java",
    "summary": "Edward has a string s of lowercase English letters that he repeated infinitely many times. Given an integer n, find and print the number of letter \"a\"s in the first n letters of Edward's infinite string. For example, if the string s=abcac and n=10, the substring we consider is abcacabcac, the first 10 characters of his infinite string. There are 4 occurrences",
    "tags": [
      "math",
      "strings"
    ],
    "title": "Repeated String"
  },
  {
    "_id": "Mo8ErS2pcwNakKsAF",
    "difficulty": 2.982142857142857,
    "language": "java",
    "summary": "A number is said to be Disarium if the sum of its digits raised to their respective positions is the number itself. Create a function that determines whether a number is a Disarium or not.\n\nExamples\nisDisarium(75) ➞ false\n// 7^1 + 5^2 = 7 + 25 = 32\n\nisDisarium(135) ➞ true\n// 1^1 + 3^2 + 5^3 = 1 + 9 + 125 = 135\n\nisDisarium(518) ➞ false\n\nisDisarium(518) ➞ true",
    "tags": [
      "recursion",
      "numbers",
      "math",
      "validation"
    ],
    "title": "Recursion: Disarium Number"
  },
  {
    "_id": "sLasdN8jqehbeqHtT",
    "difficulty": 3,
    "language": "java",
    "summary": "“To the future or to the past, to a time when thought is free, when men are different from one another and do not live alone — to a time when truth exists and what is done cannot be undone: From the age of uniformity, from the age of solitude, from the age of Big Brother, from the age of doublethink — greetings!” ⁠— Winston Smith's secret writings in George Or",
    "tags": [
      "cryptography",
      "numbers",
      "strings",
      "formatting"
    ],
    "title": "One Time Pad Training Program, Pt. 1"
  },
  {
    "_id": "eBkknBKXvMm8bDo8M",
    "difficulty": 3.0757575757575757,
    "language": "java",
    "summary": "6174 is known as one of Kaprekar's constants, after the Indian mathematician D. R. Kaprekar. Number 6174  is notable for the following rule:\n\nTake any four-digit number, using at least two different digits (leading zeros are allowed).\nArrange the digits in descending and then in ascending order to get two four-digit numbers, adding leading zeros if necessary.",
    "tags": [
      "sorting",
      "recursion",
      "numbers",
      "arrays"
    ],
    "title": "Kaprekar's Constant"
  },
  {
    "_id": "k3pg4uMgKcDA95sqb",
    "difficulty": 3.0789473684210527,
    "language": "java",
    "summary": "Write a class called CoffeeShop, which has three instance variables:\n\nname : a string (basically, of the shop)\nmenu : an array of items (of type MenuItem), with each item containing the item (name of the item), type (whether a food or a drink) and price.\norders : an empty array\n\nand seven methods:\n\naddOrder: adds the name of the item to the end of the orders a",
    "tags": [
      "classes",
      "objects"
    ],
    "title": "Coffee Shop"
  },
  {
    "_id": "mDbeein6NJgDjYy3c",
    "difficulty": 3.0833333333333335,
    "language": "java",
    "summary": "A group of n prisoners stand in a circle awaiting execution. Starting from an arbitrary position(0), the executioner kills every kth person until one person remains standing, who is then granted freedom (see examples).\n\nCreate a function that takes 2 arguments — the number of people to be executed n, and the step size k, and returns the original position (inde",
    "tags": [
      "loops",
      "recursion",
      "math"
    ],
    "title": "Josephus Permutation"
  },
  {
    "_id": "ctWQp4tZCf7J4zmo2",
    "difficulty": 3.1621621621621623,
    "language": "java",
    "summary": "Write a function that will return true if a given string (divided and grouped into a size) will contain a set of consecutive ascending numbers, otherwise, return false.\n\nExamples\nascending(\"123124125\") ➞ true\n// Contains a set of consecutive ascending numbers\n// if grouped into 3's : 123, 124, 125\n\nascending(\"101112131415\") ➞ true\n// Contains a set of consecut",
    "tags": [
      "arrays",
      "sorting",
      "strings",
      "validation"
    ],
    "title": "Consecutive Ascending Numbers"
  },
  {
    "_id": "YzWb77MowQpixfpWh",
    "difficulty": 3.1923076923076925,
    "language": "java",
    "summary": "Write a function that returns true if a string consists of ascending or ascending AND consecutive numbers.\n\nExamples\nascending(\"232425\") ➞ true\n// Consecutive numbers 23, 24, 25\n\nascending(\"2324256\") ➞ false\n// No matter how this string is divided, the numbers are not consecutive.\n\nascending(\"444445\") ➞ true\n// Consecutive numbers 444 and 445.\n\nNotes\nA number",
    "tags": [
      "strings",
      "functional_programming",
      "loops"
    ],
    "title": "Ascending Consecutive Numbers"
  },
  {
    "_id": "2MR6qaWfxR4pYpGGo",
    "difficulty": 3.2083333333333335,
    "language": "java",
    "summary": "A Fibonacci string is a precedence of the Fibonacci series. It works with any two characters of the English alphabet (as opposed to the numbers 0 and 1 in the Fibonacci series) as its initial items and concatenates them together as it progresses similarly to that of the Fibonacci series.\n\nExamples\ngenerate(3, [\"j\", \"h\"]) ➞ \"j, h, hj\"\n\ngenerate(5, [\"e\", \"a\"]) ➞",
    "tags": [
      "recursion",
      "strings"
    ],
    "title": "Recursion: Fibonacci String"
  },
  {
    "_id": "W7juRdtzze5ZbrfbJ",
    "difficulty": 3.235294117647059,
    "language": "java",
    "summary": "Create a function that takes a URL (string), removes duplicate query parameters and parameters specified within the 2nd argument (which will be an optional array).\n\nExamples\nstripUrlParams(\"https://edabit.com?a=1&b=2&a=2\") ➞ \"https://edabit.com?a=2&b=2\"\n\nstripUrlParams(\"https://edabit.com?a=1&b=2&a=2\", [\"b\"]) ➞ \"https://edabit.com?a=2\"\n\nstripUrlParams(\"https:/",
    "tags": [
      "regex",
      "strings",
      "algorithms"
    ],
    "title": "Strip URL Query Parameters"
  },
  {
    "_id": "jfCsugyp9BSLYEtwb",
    "difficulty": 3.2452830188679247,
    "language": "java",
    "summary": "An English text needs to be encrypted using Edabit’s encryption scheme. First, the spaces are removed from the text. Let L be the length of this text. Then, characters are written into a grid, whose rows and columns have the following constraints:\n\nFor example, the sentence \"if man was meant to stay on the ground god would have given us roots\", after removing",
    "tags": [
      "cryptography",
      "strings",
      "validation"
    ],
    "title": "Edabit's Encryption Scheme"
  },
  {
    "_id": "3FAMXz4wAYGqpCtDR",
    "difficulty": 3.2470588235294118,
    "language": "java",
    "summary": "Write a function that divides a phrase into word buckets, with each bucket containing n or fewer characters. Only include full words inside each bucket.\n\nExamples\nbucketize(\"she sells sea shells by the sea\", 10)\n➞ [\"she sells\", \"sea shells\", \"by the sea\"]\n\nbucketize(\"the mouse jumped over the cheese\", 7)\n➞ [\"the\", \"mouse\", \"jumped\", \"over\", \"the\", \"cheese\"]\n\nb",
    "tags": [
      "strings",
      "control_flow"
    ],
    "title": "Word Buckets"
  },
  {
    "_id": "Mgrj26S3LwM8CLAdL",
    "difficulty": 3.260869565217391,
    "language": "java",
    "summary": "Sherlock considers a string to be valid if all characters of the string appear the same number of times. It is also valid if he can remove just 1 character at 1 index in the string, and the remaining characters will occur the same number of times. Given a string str, determine if it is valid. If so, return \"YES\", otherwise return \"NO\".\n\nFor example, If str = \"",
    "tags": [
      "algorithms",
      "strings",
      "validation"
    ],
    "title": "Sherlock and the Valid String"
  },
  {
    "_id": "rNYqwDqDFZwjZ6A4g",
    "difficulty": 3.2666666666666666,
    "language": "java",
    "summary": "Create a function that returns the sentence that contains the word at index n. Remember to include the full stop at the end.\n\nWorked Example\nfinal String txt = \"I love Tesh. My world evolves in hers. My love for life.\";\n\nsentenceSearcher(txt, 4) ➞ \"My world evolves in hers.\"\n// The word at index 4 is \"world\".\n// The full sentence that contains the word at inde",
    "tags": [
      "loops",
      "strings"
    ],
    "title": "Sentence Searcher II"
  },
  {
    "_id": "8zSSCYQRKC9wWWbkN",
    "difficulty": 3.287671232876712,
    "language": "java",
    "summary": "A number may not be a palindrome, but its descendant can be. A number's direct child is created by summing each pair of adjacent digits to create the digits of the next number.\n\nFor instance, 123312 is not a palindrome, but its next child 363 is, where: 3 = 1 + 2; 6 = 3 + 3; 3 = 1 + 2.\n\nCreate a function that returns true if the number itself is a palindrome o",
    "tags": [
      "arrays",
      "recursion",
      "higher_order_functions",
      "validation"
    ],
    "title": "Palindrome Descendant"
  },
  {
    "_id": "9f6TiyJsgxAstgNLg",
    "difficulty": 3.2962962962962963,
    "language": "java",
    "summary": "As stated on the On-Line Encyclopedia of Integer Sequences:\n\n> The hexagonal lattice is the familiar 2-dimensional lattice in which each point has 6 neighbors.\n\nA centered hexagonal number is a centered figurate number that represents a hexagon with a dot in the center and all other dots surrounding the center dot in a hexagonal lattice.\n\nAt the end of that we",
    "tags": [
      "numbers",
      "strings",
      "formatting"
    ],
    "title": "Centered Hexagonal Number"
  },
  {
    "_id": "YLdgd8dav2joTpXbn",
    "difficulty": 3.2962962962962963,
    "language": "java",
    "summary": "Performing division on a fraction often results in an infinitely repeating decimal.\n\n1/3=.3333333...  1/7=.142857142857...\nCreate a function that takes a decimal in string form with the repeating part in parentheses and returns the equivalent fraction in string form and in lowest terms.\n\nExamples\nfractions(\"0.(6)\") ➞ \"2/3\"\n\nfractions(\"1.(1)\") ➞ \"10/9\"\n\nfractio",
    "tags": [
      "math",
      "strings",
      "numbers"
    ],
    "title": "Repeating Decimals to Fractions"
  },
  {
    "_id": "Fy2ySuj6XK5mxrsgR",
    "difficulty": 3.296875,
    "language": "java",
    "summary": "In this challenge, transform a string into a series of words (or sequences of characters) separated by a single space, with each word having the same length given by the first 15 digits of the decimal representation of Pi:\n\n3.14159265358979\n\nIf a string contains more characters than the total quantity given by the sum of the Pi digits, the unused characters ar",
    "tags": [
      "strings",
      "formatting",
      "algorithms"
    ],
    "title": "Pilish Strings"
  },
  {
    "_id": "gvfWZYpmkAu99TKWt",
    "difficulty": 3.3157894736842106,
    "language": "java",
    "summary": "Create a function that takes two strings. The first string contains a sentence containing the letters of the second string in a consecutive sequence but in a different order. The hidden anagram must contain all the letters, including duplicates, from the second string in any order and must not contain any other alphabetic characters.\n\nWrite a function to find",
    "tags": [
      "arrays",
      "formatting",
      "loops",
      "sorting"
    ],
    "title": "Hidden Anagram"
  },
  {
    "_id": "Rarq6J9wR8FsN2qQ4",
    "difficulty": 3.3333333333333335,
    "language": "java",
    "summary": "The Bell number is the number of ways an array of n items can be partitioned into non-empty subarrays. See the resources section for an in-depth explanation.\n\nCreate a function that takes a number n and returns the corresponding Bell number.\n\nExamples\nbell(1) ➞ 1\n// sampleArr = [1]\n// possiblePartitions = [[[1]]]\n\nbell(2) ➞ 2\n// sampleArr = [1, 2]\n// possibleP",
    "tags": [
      "loops",
      "math"
    ],
    "title": "Bell Number"
  },
  {
    "_id": "3Xc4sz3PpyWPDw5b3",
    "difficulty": 3.3333333333333335,
    "language": "java",
    "summary": "Write a function that will return true if a given string (divided and grouped into a size) will contain a set of consecutive numbers (regardless of orientation: whether ascending or descending), otherwise, return false.\n\nExamples\nisConsecutive(\"121314151617\") ➞ true\n// Contains a set of consecutive ascending numbers\n// if grouped into 2's : 12, 13, 14, 15, 16,",
    "tags": [
      "arrays",
      "loops",
      "numbers",
      "sorting",
      "validation"
    ],
    "title": "Consecutive Number Series"
  },
  {
    "_id": "ABgaWqqn2XDjBqwKy",
    "difficulty": 3.34375,
    "language": "java",
    "summary": "We define super digit of an integer x using the following rules:\n\nIf x has only 1 digit, then its super digit is x.\nOtherwise, the super digit of x is equal to the super digit of the sum of the digits of x.\n\nFor example, the super digit of x will be calculated as:\n\n  superDigit(9875)    9+8+7+5 = 29\n  superDigit(29)      2 + 9 = 11\n  superDigit(11)      1 + 1",
    "tags": [
      "recursion",
      "math",
      "numbers",
      "algorithms"
    ],
    "title": "Recursive Digit"
  },
  {
    "_id": "Y6hNbTncED6dp6gFu",
    "difficulty": 3.357142857142857,
    "language": "java",
    "summary": "Build a Class that will store and manipulate the data of a simplified clone of the popular strategy game, Battleship.\n\nThe game is played on a 5x5-sized board. The rows of the grid are identified by the uppercase letters A to E (top to bottom), and the columns are identified by the numbers 1 to 5 (left to right).\n\nRules of the Game\nThere are two types of ship:",
    "tags": [
      "classes",
      "arrays",
      "data_structures",
      "games"
    ],
    "title": "Do Classes Dream Of Electric Ship?"
  },
  {
    "_id": "iZNdGSDXyRMmHrNNn",
    "difficulty": 3.3703703703703702,
    "language": "java",
    "summary": "Write a function that sorts the words in a given string lexicographically (lexical sort) and by length in reverse order.\n\nExamples\nreverseSort(\"You've rocked the pragmatic world in the making!\")\n ➞ \"pragmatic making! You've rocked world the the in\"\n\nreverseSort(\"Tesh makes my world worth enjoying and living for.\")\n ➞ \"enjoying living worth world makes Tesh for",
    "tags": [
      "sorting",
      "strings"
    ],
    "title": "Reverse Sort: Lexical and Length"
  },
  {
    "_id": "RkicZ4kkcSx8K3d4e",
    "difficulty": 3.3859649122807016,
    "language": "java",
    "summary": "The Ulam sequence starts with:\n\nulam = [1, 2]\n\nThe next number in the sequence is the smallest positive number that is equal to the sum of 2 distinct numbers (that are already in the sequence) exactly one way. Trivially, this is 3, as there are only 2 numbers in the starting sequence.\n\nulam = [1, 2, 3]\n\nThe next number is 4, which is the sum of 3+1. 4 is also ",
    "tags": [
      "loops",
      "numbers",
      "logic",
      "algebra"
    ],
    "title": "Ulam Sequence"
  },
  {
    "_id": "qN7mnqKz6Y7WeMnLo",
    "difficulty": 3.395348837209302,
    "language": "java",
    "summary": "A centrifuge, as you probably know, is a laboratory device used to separate fluids based on density. The separation is achieved through centripetal force by spinning a collection of test tubes at high speeds. This means, the configuration needs to be in balance.\n\nCreate a function that takes two numbers as arguments n and k and returns true if the configuratio",
    "tags": [
      "algorithms",
      "math",
      "numbers",
      "validation"
    ],
    "title": "The Centrifuge Problem"
  },
  {
    "_id": "oibF2LtNoiGsJuj6b",
    "difficulty": 3.409090909090909,
    "language": "java",
    "summary": "A happy number is a number which yields a 1 by repeatedly summing up the square of its digit. If such a process results in an endless cycle of numbers containing 4, the number is said to be an unhappy number.\n\nCreate a function that accepts a number and determines whether the number is a happy number or not. Return true if so, false otherwise.\n\nExamples\nisHapp",
    "tags": [
      "arrays",
      "recursion",
      "validation"
    ],
    "title": "Recursion: Happy Number"
  },
  {
    "_id": "9obr3kYYua78Lw6yH",
    "difficulty": 3.409090909090909,
    "language": "java",
    "summary": "Create a function to generate all nonconsecutive binary strings where nonconsecutive is defined as a string where no consecutive ones are present, and where n governs the length of each binary string.\n\nExamples\ngenerateNonconsecutive(1) ➞ \"0 1\"\n\ngenerateNonconsecutive(2) ➞ \"00 01 10\"\n\ngenerateNonconsecutive(3) ➞ \"000 001 010 100 101\"\n\ngenerateNonconsecutive(4)",
    "tags": [
      "formatting",
      "loops",
      "strings",
      "interview"
    ],
    "title": "Generate All Nonconsecutive Binary Strings"
  },
  {
    "_id": "zZCARMRzJ2sHLbgwe",
    "difficulty": 3.425,
    "language": "java",
    "summary": "Write a function that connects each previous word to the next word by the shared letters. Return the resulting string (removing duplicate characters in the overlap) and the minimum number of shared letters across all pairs of strings.\n\nExamples\njoin([\"oven\", \"envier\", \"erase\", \"serious\"]) ➞ [\"ovenvieraserious\", \"2\"]\n\njoin([\"move\", \"over\", \"very\"]) ➞ [\"movery\",",
    "tags": [
      "strings",
      "higher_order_functions",
      "loops"
    ],
    "title": "Connecting Words"
  },
  {
    "_id": "M69ui5BrdTjACd3R3",
    "difficulty": 3.44,
    "language": "java",
    "summary": "Write a function that converts a bitmap image of a digital clock (represented as a string of the form: hh:mm) into its representational bit string. A bitmap image is a by-product of parsing bits (0's and 1's) from a canvas which is basically an image in black on a white background, where 0 represents the white background and 1 represents the black pixel (it's",
    "tags": [
      "strings",
      "validation",
      "regex"
    ],
    "title": "Bitmap Image Conversion"
  },
  {
    "_id": "Sj2kws46RQfxdv6Wj",
    "difficulty": 3.4642857142857144,
    "language": "java",
    "summary": "Given an array, create a function that returns an object detailing how many times each element was repeated. Sort the object by value in descending order.\n\nExamples\ncountRepetitions([\"cat\", \"dog\", \"cat\", \"cow\", \"cow\", \"cow\"]) ➞ {\"cow\"=3, \"cat\"=2, \"dog\"=1}\n\ncountRepetitions([1, 5, 5, 5, 12, 12, 0, 0, 0, 0, 0, 0]) ➞ {0=6, 5=3, 12=2, 1=1}\n\ncountRepetitions([\"Infi",
    "tags": [
      "arrays",
      "objects",
      "numbers",
      "loops"
    ],
    "title": "Count How Many Times An Element Is Repeated"
  },
  {
    "_id": "r2gd399TcG56Bvim5",
    "difficulty": 3.466666666666667,
    "language": "java",
    "summary": "Your chess teacher wants to know if a bishop can reach a certain spot on the board in the given amount of moves.\n\nGiven a starting square start, ending square end and the maximum number of moves allowed n. Return true if the ending square can be reached from the starting square within the given amount of moves. Keep in mind the chessboard goes from a1 to h8 (8",
    "tags": [
      "algorithms",
      "math",
      "games",
      "validation"
    ],
    "title": "Bishop Challenge"
  },
  {
    "_id": "TcLfFXvBvDqRL82a2",
    "difficulty": 3.5,
    "language": "java",
    "summary": "Write a recursive function that filters the items in an array (given as parameter arr) by positional parity (odd or even), given as parameter par, starting from the opposite end.\nReturn an array of items on odd positions (... 5, 3, 1) or on even positions (... 6, 4, 2) and counting from the last item in the array.\n\nExamples\ngetItemsAt([2, 4, 6, 8, 10], \"odd\")",
    "tags": [
      "recursion",
      "strings",
      "arrays"
    ],
    "title": "Recursion: Reversed List Index"
  },
  {
    "_id": "2caPynMewSbRfRZ7X",
    "difficulty": 3.5,
    "language": "java",
    "summary": "Write a function that, for a given array of words and a new alphabet (English letters in different order), determines if the array of words is sorted lexicographically based on the new reordered set of alphabet. The given array of words will only contains lower case letters.\n\nExamples\nisSorted([\"tesh\", \"love\", \"of\", \"my\", \"life\", \"and\", \"my\", \"world\", \"entirel",
    "tags": [
      "arrays",
      "conditions",
      "sorting",
      "strings",
      "validation"
    ],
    "title": "Sorted Array of Words"
  },
  {
    "_id": "owwJbMCXJBv9n5FJD",
    "difficulty": 3.5084745762711864,
    "language": "java",
    "summary": "This classic problem dates back to Roman times. There are 41 soldiers arranged in a circle. Every third soldier is to be killed by their captors, continuing around the circle until only one soldier remains. He is to be freed. Assuming you would like to stay alive, at what position in the circle would you stand?\n\nGeneralize this problem by creating a function t",
    "tags": [
      "loops",
      "recursion",
      "algorithms"
    ],
    "title": "The Josephus Problem"
  },
  {
    "_id": "6dEDvruWbEDqXb7dk",
    "difficulty": 3.5098039215686274,
    "language": "java",
    "summary": "Pig latin has two very simple rules:\n\nIf a word starts with a consonant move the first letter(s) of the word, till you reach a vowel, to the end of the word and add \"ay\" to the end.\n   have ➞ avehay\n   cram ➞ amcray\n   take ➞ aketay\n   cat ➞ atcay\n   shrimp ➞ impshray\n   trebuchet ➞ ebuchettray\nIf a word starts with a vowel add \"yay\" to the end of the word.",
    "tags": [
      "algorithms",
      "loops",
      "logic",
      "strings"
    ],
    "title": "English to Pig Latin Translator"
  },
  {
    "_id": "hbHJdMv4HubYs5TRv",
    "difficulty": 3.5172413793103448,
    "language": "java",
    "summary": "Let's update our previous word-chain definition. In this 2.0 version, a word-chain is an array of words, where the next word is formed by either:\n\nChanging exactly one letter from the previous word.\nAdding or subtracting one letter.\n\nExamples\nisWordChain([\"row\", \"crow\", \"crown\", \"brown\", \"brawn\"]) ➞ true\n// add \"c\" to \"row\" to get \"crow\", \"n\" to get \"crown\", e",
    "tags": [
      "arrays",
      "strings",
      "validation"
    ],
    "title": "Word Chain 2.0"
  },
  {
    "_id": "EtW6o2eH88C89NYzw",
    "difficulty": 3.5277777777777777,
    "language": "java",
    "summary": "Write a function that returns the next number that can be created from the same digits as the input.\n\nExamples\nnextNumber(19) ➞ 91\n\nnextNumber(3542) ➞ 4235\n\nnextNumber(5432) ➞ 5432\n\nnextNumber(58943) ➞ 59348\n\nNotes\nIf no larger number can be formed, return the number itself.\nBonus: See if you can do this without generating all digit permutations.",
    "tags": [
      "numbers",
      "sorting"
    ],
    "title": "Next Largest Number"
  },
  {
    "_id": "e3GaeWuJQ38fsFKS2",
    "difficulty": 3.5384615384615383,
    "language": "java",
    "summary": "Write a recursive function that will return the longest word in a sentence. In cases where more than one word is found, return the first one.\n\nExamples\nfindLongest(\"I will and ever will be gratefully and perpetually loving you Tesh!😘\") ➞ \"perpetually\"\n\nfindLongest(\"A thing of beauty is a joy forever.\") ➞ \"forever\"\n\nfindLongest(\"Forgetfulness is by all means p",
    "tags": [
      "recursion",
      "sorting",
      "strings",
      "arrays"
    ],
    "title": "Recursion: Find The Longest Word"
  },
  {
    "_id": "m8TRkJiYwahSR58dX",
    "difficulty": 3.5384615384615383,
    "language": "java",
    "summary": "Given a positive number as a string, multiply the number by 11 and also return it as a string. However, there is a catch:\n\nYou are NOT ALLOWED to simply cast the numeric string into an integer!\n\nNow, how is this challenge even possible? Despite this, there is still a way to solve it, and it involves thinking about how someone might multiply by 11 in their head",
    "tags": [
      "loops",
      "algorithms",
      "numbers",
      "math",
      "logic"
    ],
    "title": "Multiply By 11"
  },
  {
    "_id": "CsTELuWcqFAQYhwpY",
    "difficulty": 3.5384615384615383,
    "language": "java",
    "summary": "The function is given an array of characters. Compress the array into a string using the following rules. For each group of consecutively repeating characters:\nIf the number of repeating characters is one, append the string with only this character.\nIf the number n of repeating characters x is greater than one, append the string with \"x\" + n.\n\nExamples\ncompres",
    "tags": [
      "arrays",
      "control_flow",
      "language_fundamentals",
      "strings"
    ],
    "title": "String Compression from Character Array"
  },
  {
    "_id": "HH3FuLpBAf6gkb9L4",
    "difficulty": 3.5454545454545454,
    "language": "java",
    "summary": "You will be given the location of a knight, and an end location. The knight can move in a \"L\" shape. \"L\" shape movement means that the knight can change it's x coordinate by 2 and it's y coordinate by 1 or it can change it's y coordinate by 2 and it's x coordinate by 1 (you can add and subtract from the x/y).\n\nFor example, if the knight is at the position (0, ",
    "tags": [
      "algorithms",
      "games"
    ],
    "title": "BFS Chess!"
  },
  {
    "_id": "XPrHkBXC9XjsewuzC",
    "difficulty": 3.55,
    "language": "java",
    "summary": "Let's define a non-repeating integer as one whose digits are all distinct. 97653 is non-repeating while 97252 is not (it has two 2's). Among the binary numbers, there are only two positive non-repeating integers: 1 and 10. Ternary (base 3) has ten: 1, 2, 10, 20, 12, 21, 102, 201, 120, 210.\n\nWrite a function that has as it's argument the base or radix and retur",
    "tags": [
      "algorithms",
      "math",
      "numbers"
    ],
    "title": "Non-Repeating Integers"
  },
  {
    "_id": "SYTk43tp4y6oA5zGn",
    "difficulty": 3.5588235294117645,
    "language": "java",
    "summary": "Given an incomplete palindrome as a string, return the minimum letters needed to be added on to the end to make the string a palindrome.\n\nExamples\nminPalindromeSteps(\"race\") ➞ 3\n// Add 3 letters: \"car\" to make \"racecar\"\n\nminPalindromeSteps(\"mada\") ➞ 1\n// Add 1 letter: \"m\" to make \"madam\"\n\nminPalindromeSteps(\"mirror\") ➞ 3\n// Add 3 letters: \"rim\" to make \"mirror",
    "tags": [
      "strings",
      "algorithms"
    ],
    "title": "Minimum Steps to a Palindrome"
  },
  {
    "_id": "Bs8bX5B5NT22YB9zh",
    "difficulty": 3.5833333333333335,
    "language": "java",
    "summary": "Figure out the pattern.\n\nExamples\nmethod(1) ➞ false\n\nmethod(2) ➞ true\n\nmethod(14) ➞ null\n\nNotes\nIf you have no idea, check the Comments for a hint.",
    "tags": [
      "algorithms",
      "cryptography",
      "math"
    ],
    "title": "Reverse Coding Challenge"
  },
  {
    "_id": "iY6e9fMQSWi38J699",
    "difficulty": 3.588235294117647,
    "language": "java",
    "summary": "A palindrome is a series of letters or numbers that reads equivocally backwards.\n\nWrite a recursive function that determines whether a given string is a palindrome or not.\n\nExamples\nisPalindrome(\"Maneuquenam\") ➞ true\n\nisPalindrome(\"This phrase, surely, is not a palindrome!\") ➞ false\n\nisPalindrome(\"Eva, can I see bees in a cave?\") ➞ true\n\nNotes\nSymbols and spec",
    "tags": [
      "recursion",
      "strings",
      "validation",
      "logic"
    ],
    "title": "Recursion: Palindrome Phrase"
  },
  {
    "_id": "MLzJD3iHnYZo566nA",
    "difficulty": 3.6,
    "language": "java",
    "summary": "Create a function that takes a string and returns true or false depending on whether or not the formula is correct.\n\nExamples\nformula(\"6 * 4 = 24\") ➞ true\n\nformula(\"18 / 17 = 2\") ➞ false\n\nformula(\"16 * 10 = 160 = 14 + 120\") ➞ false\n\nNotes\nYou have to figure out what a is.\nYou do not need to dynamically find the value of a (it's a constant and the same accross",
    "tags": [
      "algebra",
      "math",
      "numbers",
      "validation"
    ],
    "title": "Check if the Formula is Correct"
  },
  {
    "_id": "3niLvRRFXTRsZ27yF",
    "difficulty": 3.6,
    "language": "java",
    "summary": "Create a function that gets every pair of numbers from an array that sums up to eight and returns it as an array of pairs (sorted ascendingly). See the following examples for more details.\n\nExamples\nsumsUp({1, 2, 3, 4, 5}) ➞ {{3, 5}}\n\nsumsUp({1, 2, 3, 7, 9}) ➞ {1, 7}}\n\nsumsUp({10, 9, 7, 2, 8}) ➞ {}\n\nsumsUp({1, 6, 5, 4, 8, 2, 3, 7}) ➞ {{2, 6}, {3, 5}, {1, 7}}\n/",
    "tags": [
      "arrays",
      "algorithms",
      "numbers",
      "objects"
    ],
    "title": "Eight Sums Up"
  },
  {
    "_id": "XRXcuP6QjH9CuqqwY",
    "difficulty": 3.6153846153846154,
    "language": "java",
    "summary": "Write a function that groups words by the number of capital letters and returns an array of object entries whose keys are the number of capital letters and the values are the groups.\n\nExamples\ngrouping([\"HaPPy\", \"mOOdy\", \"yummy\", \"mayBE\"]) ➞ {\n  0=[\"yummy\"], 2=[\"mayBE\", \"mOOdy\"], 3=[\"HaPPy\"]\n}\n\ngrouping([\"eeny\", \"meeny\", \"miny\", \"moe\"]) ➞ {\n  0=[\"eeny\", \"meeny",
    "tags": [
      "sorting",
      "strings",
      "arrays"
    ],
    "title": "Capitalization Families"
  },
  {
    "_id": "9fu8xW6yQkPxyM6rG",
    "difficulty": 3.6363636363636362,
    "language": "java",
    "summary": "Write a function that receives an array of letters, an array of words (dictionary) and a mask.  Return an array of words, sorted alphabetically, that match the given mask.\n\nExamples\nscrambled(['e', 'c', 'd', 'r', 'e', 'e'], [”red”, “dee”, “cede”, “reed”, “creed”, “decree”], “re*”) ➞ [“creed”]\n\nscrambled(['e', 'c', 'd', 'r', 'e', 'e'], [”red”, “dee”, “cede”, “r",
    "tags": [
      "algorithms",
      "strings",
      "arrays",
      "loops"
    ],
    "title": "Scrambled Letters"
  },
  {
    "_id": "nWRGJeLJ3gvzMSGvS",
    "difficulty": 3.6363636363636362,
    "language": "java",
    "summary": "Create a function that takes a number maxDen and returns the total number of fully simplified proper fractions that exist with denominator less than or equal to maxDen.\n\nYou only need to return the number of fractions; NOT the fractions themselves. In the examples below, the fractions are enumerated for your reference.\n\nExamples\nsimPropFrac(10) ➞ 31\n// 1/2, 1/",
    "tags": [
      "math",
      "algorithms",
      "loops",
      "numbers"
    ],
    "title": "Simplified Proper Fractions"
  },
  {
    "_id": "BWm34MorRuaJXiaz6",
    "difficulty": 3.652173913043478,
    "language": "java",
    "summary": "The Vigenere Cipher is a poly-alphabetic substitution cipher that uses a set of shift ciphers and a keyword.\n\nOne of the simplest ciphers is the Caesar/shift cipher, where each letter in the plaintext message is replaced by the letter a particular number of positions up, or downstream in the alphabet. Shift 1 Caesar cipher:\n\n | | | | | | | | | | | | | | | | |",
    "tags": [
      "arrays",
      "loops",
      "strings",
      "cryptography"
    ],
    "title": "Vigenere Cipher"
  },
  {
    "_id": "7yhhtWf9xaP7LDtHz",
    "difficulty": 3.6538461538461537,
    "language": "java",
    "summary": "Write a function that mimics the following described arithmetic operations.\n\nStarting with either 3 or 5 and given these operations:\nadd 5\nmultiply by 3\n\nYou should say if it is possible to reach the target number n.\n\nExamples\nonly5and3(14) ➞ true\n// 14 = 3*3 + 5\n\nonly5and3(25) ➞ true\n// 25 = 5+5+5+5+5\n\nonly5and3(7) ➞ false\n// There exists no path to the targe",
    "tags": [
      "algebra",
      "algorithms",
      "recursion",
      "validation"
    ],
    "title": "Fives and Threes Only"
  },
  {
    "_id": "Q89oMEPgug3kpERBT",
    "difficulty": 3.6666666666666665,
    "language": "java",
    "summary": "Las Vegas style dice have 6 sides numbered 1 to 6. When rolling 2 dice, a six is 5 times more likely than a two because a six can be rolled 5 different ways (1 + 5, 5 + 1, 2 + 4, 4 + 2, 3 + 3), while a two can only be rolled 1 way (1 + 1).\n\nCreate a function that accepts two arguments:the number of dice rolled, and the outcome of the roll. The function returns",
    "tags": [
      "math",
      "numbers"
    ],
    "title": "Roll the Dice"
  },
  {
    "_id": "cDhtEXjmyrKj9etsZ",
    "difficulty": 3.6666666666666665,
    "language": "java",
    "summary": "The syllabic structure of the Persian language is CV(C)(C). C stands for Consonants and V stands for Vowels. The CV(C)(C) means that there are three types of syllables in Persian:\nCV\nCVC\nCVCC\n\nWrite a function that takes the phonetic transcription of a Persian word as an argument and returns the syllabified word based on the syllabic structure. In other words,",
    "tags": [
      "regex",
      "strings"
    ],
    "title": "Syllabification"
  },
  {
    "_id": "pxfkEdxgXPKgy7FEb",
    "difficulty": 3.6842105263157894,
    "language": "java",
    "summary": "Hash algorithms are easy to do one way, but essentially impossible to do in reverse. For example, if you hash something simple, like password123, it will give you a long code, unique to that word or phrase. Ideally, there's no way to do this in reverse. You can't take the hash code and go back to the word or phrase you started with.\n\nMake a function that retur",
    "tags": [
      "cryptography",
      "strings",
      "algorithms"
    ],
    "title": "Get SHA-256 Hash"
  },
  {
    "_id": "xCrsQ4E3qYkGvbeAw",
    "difficulty": 3.6923076923076925,
    "language": "java",
    "summary": "Write a function that takes coordinates of four points (A, B, C, D) on a two-dimensional plane and returns true if the segment AB intersects segment CD.\n\nExamples\nintersection(arr[0]={2, 4}, arr[1]={5, 1}, arr[2]={4, 1}, arr[3]={4, 4}) ➞ true\n\nintersection(arr[0]={1, 2}, arr[1]={3, 4}, arr[2]={5, 6}, arr[3]={7, 8}) ➞ false\n\nintersection(arr[0]={1, 1}, arr[1]={",
    "tags": [
      "algebra",
      "geometry",
      "numbers",
      "math"
    ],
    "title": "Geometry 4: Line Segments Intersection"
  },
  {
    "_id": "5s8AXfbk4X2Dmimrk",
    "difficulty": 3.7,
    "language": "java",
    "summary": "The nesting of arrays can be viewed indirectly as curves and barriers of the real data embedded in arrays, thus, defeats the very purpose of directly accessing them thru indexes and slices. Write a recursive function to flatten those curves (i.e. level, iron, compress, raze, topple) and expose those data as a single array other than an array of arrays.\n\nExampl",
    "tags": [
      "recursion",
      "arrays",
      "objects"
    ],
    "title": "Recursion: Flatten the Curves"
  },
  {
    "_id": "i4SSMeuxhnSR2QKtx",
    "difficulty": 3.7,
    "language": "java",
    "summary": "Create a function that takes a string (without spaces) and a word array, cleaves the string into words based on the array, and returns the correctly spaced version of the string (a sentence). If a section of the string is encountered that can't be found on the word array, return \"Cleaving stalled: Word not found\".\n\nExamples\nconst words = [\"about\", \"be\", \"hell\"",
    "tags": [
      "strings",
      "validation"
    ],
    "title": "String Cleaver"
  },
  {
    "_id": "gCzqqRMAScwWPSRoY",
    "difficulty": 3.7058823529411766,
    "language": "java",
    "summary": "Given two strings s and t, create a function to determine if they are isomorphic. Two strings are isomorphic if the characters in s can be replaced to get t. All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character but a character may map to itself.\n\nExample",
    "tags": [
      "conditions",
      "strings",
      "validation"
    ],
    "title": "Isomorphic Strings"
  },
  {
    "_id": "EDZj2oGeLTKgDSJzc",
    "difficulty": 3.7142857142857144,
    "language": "java",
    "summary": "Create a class that returns 32-bit pseudo-random numbers using the middle square algorithm.\n\nBackground\nComputers were built to be deterministic, which means every action it performs is 100% predictable. However, in the case of random number generation (RNG), this makes it hard to come up with \"random\" numbers. To circumvent this, many people have come up with",
    "tags": [
      "algorithms",
      "bit_operations",
      "numbers"
    ],
    "title": "Middle Square Algorithm (PRNG)"
  },
  {
    "_id": "ecR654j7ivFqs2WPi",
    "difficulty": 3.7333333333333334,
    "language": "java",
    "summary": "As a programmer in a forensic laboratory, you have been asked to write a function to decode a bitmap image of a digital clock to determine what time it was when the image was created. The bitmap image has been converted to a string of binary digits 0 or 1 where 0 represents a white background pixel and 1 represents a black pixel. You must convert this binary s",
    "tags": [
      "arrays",
      "data_structures",
      "strings"
    ],
    "title": "Character Recognition ⁠— What's The Time?"
  },
  {
    "_id": "Ls6pbLkC9wfYuaDgm",
    "difficulty": 3.75,
    "language": "java",
    "summary": "Write a function that takes in a string and for each character, returns the distance to the nearest vowel in the string. If the character is a vowel itself, return 0.\n\nExamples\ndistanceToNearestVowel(\"aaaaa\") ➞ [0, 0, 0, 0, 0]\n\ndistanceToNearestVowel(\"babbb\") ➞ [1, 0, 1, 2, 3]\n\ndistanceToNearestVowel(\"abcdabcd\") ➞ [0, 1, 2, 1, 0, 1, 2, 3]\n\ndistanceToNearestVow",
    "tags": [
      "strings",
      "loops"
    ],
    "title": "Distance to Nearest Vowel"
  },
  {
    "_id": "9PfRkNR2Ersu2CwTG",
    "difficulty": 3.7857142857142856,
    "language": "java",
    "summary": "In Nico Cipher, encoding is done by creating a numeric key and assigning each letter position of the message with the provided key.\n\nCreate a function that takes two arguments, message and key, and returns the encoded message.\n\nThere are some variations on the rules of encipherment. One version of the cipher rules are outlined below:\n\nmessage = \"mubashirhassan",
    "tags": [
      "cryptography",
      "logic",
      "strings",
      "algorithms"
    ],
    "title": "Nico Cipher"
  },
  {
    "_id": "eeXtztKiDe7sEYbZP",
    "difficulty": 3.8125,
    "language": "java",
    "summary": "Scoring plays in American football count as either 2, 3, 6, 7, or 8 points. Write a function that has as it's argument a football score and returns the number of possible ways that score can be achieved. Order is not important.\n\nExamples\nfootball(4) ➞ 1\n// 2+2\n\nfootball(6) ➞ 3\n// 2+2+2 or 3+3 or 6\n\nfootball(7) ➞ 2\n// 2+2+3 or 7\n\nfootball(9) ➞ 4\n// 2+2+2+3 or 3",
    "tags": [
      "algorithms",
      "numbers",
      "recursion"
    ],
    "title": "Football Scores"
  },
  {
    "_id": "h3rDzi2j5t2h7jtJi",
    "difficulty": 3.8461538461538463,
    "language": "java",
    "summary": "Write a function that, given the startOfRange and endOfRange values, returns an array containing all the numbers inclusive to that range. See examples below.\n\nExamples\nreversibleInclusiveList(1, 5) ➞ [1, 2, 3, 4, 5]\n\nreversibleInclusiveList(2, 8) ➞ [2, 3, 4, 5, 6, 7, 8]\n\nreversibleInclusiveList(10, 20) ➞ [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n\nreversible",
    "tags": [
      "recursion",
      "numbers",
      "logic",
      "math"
    ],
    "title": "Recursion: Reversible Inclusive List Ranges"
  },
  {
    "_id": "5tNkD75pLSkAqBFnD",
    "difficulty": 3.857142857142857,
    "language": "java",
    "summary": "Someone is typing on the sticky keyboard. Occasionally a key gets stuck and more than intended number of characters of a particular letter is being added into the string. The function input contains original and typed strings. Determine if the typed string has been made from the original. Return true if it is and false if the typed string cannot have been made",
    "tags": [
      "conditions",
      "logic",
      "strings",
      "validation"
    ],
    "title": "Sticky Keys Typing"
  },
  {
    "_id": "rwGzp85CNxvdCADAL",
    "difficulty": 3.8666666666666667,
    "language": "java",
    "summary": "Jim's Burgers has a line of hungry customers. Orders vary in the time it takes to prepare them. Determine the order the customers receive their orders. Start by numbering each of the customers from 1 to n, front of the line to the back. You will then be given an order number and a preparation time for each customer.\n\nThe time of delivery is calculated as the s",
    "tags": [
      "sorting"
    ],
    "title": "Jim and the Orders"
  },
  {
    "_id": "Zg5gHdtBMx2knzrdE",
    "difficulty": 3.875,
    "language": "java",
    "summary": "Create a function that takes an array of strings of arbitrary dimensionality (String], String[, String[], etc) and returns the sum of every separate number in each string in the array.\n\nExamples\nsum({\"1\", \"five\", \"2wenty\", \"thr33\"}) ➞ 36\n\nsum({\n  {\"1X2\", \"t3n\"},\n  {\"1024\", \"5\", \"64\"}\n}) ➞ 1099\n\nsum({\n  {\n    {\"0\", \"0x2\", \"z3r1\"},\n    {\"1\", \"55a46\"}\n  },\n  {",
    "tags": [
      "language_fundamentals",
      "objects",
      "recursion",
      "arrays"
    ],
    "title": "Deep Arithmetic"
  },
  {
    "_id": "745DLsFEmEQqdA6m3",
    "difficulty": 3.875,
    "language": "java",
    "summary": "Given a positive number as a string, multiply the number by 11 and also return it as a string. However, there is a catch:\n\nYou are NOT ALLOWED to simply cast the numeric string into an integer!\n\nNow, how is this challenge even possible? Despite this, there is still a way to solve it, and it involves thinking about how someone might multiply by 11 in their head",
    "tags": [
      "recursion",
      "strings",
      "logic",
      "math",
      "numbers"
    ],
    "title": "Recursion: Multiply By 11"
  },
  {
    "_id": "34xjPfMzkyYzJnzxw",
    "difficulty": 3.909090909090909,
    "language": "java",
    "summary": "An out-shuffle, also known as an out faro shuffle or a perfect shuffle, is a controlled method for shuffling playing cards. It is performed by splitting the deck into two equal halves and interleaving them together perfectly, with the condition that the top card of the deck remains in place.\nUsing an array to represent a deck of cards, an out-shuffle looks lik",
    "tags": [
      "recursion",
      "numbers",
      "logic"
    ],
    "title": "Recursion: The Out-Shuffle"
  },
  {
    "_id": "5X4wuS6eGsx2iz3cy",
    "difficulty": 4.04,
    "language": "java",
    "summary": "The goal of this challenge is to return Pascal's triangle up to number 29. Pascal's triangle is the sum of the two upper corners.\n\n   1 1\n  1 2 1\n 1 3 3 1\n\n// There will always be the 1 in the first\n// place and the row in the second.\n\nPascal's Triangle\n\nCreate a function that returns a row from Pascal's triangle. To find the row and column you can use n!/(k!*",
    "tags": [
      "algebra",
      "math",
      "algorithms",
      "loops"
    ],
    "title": "Pascal's Triangle"
  },
  {
    "_id": "Gqs4Rzdq5tXNH7RKX",
    "difficulty": 4.130434782608695,
    "language": "java",
    "summary": "The columnar cipher is a transposition cipher that works like this.\n\nStart with a secret message:\n\nmsg = \"Meet me by the lake at midnight. Bring shovel.\"\n\nTransform uppercase letters into lowercase and remove punctuation and spaces:\n\nmsg = \"meetmebythelakeatmidnightbringshovel\"\n\nThen, pick a keyword made out of distinct letters:\n\nkeyword = \"python\"\n\nBreak up t",
    "tags": [
      "arrays",
      "loops",
      "strings",
      "cryptography"
    ],
    "title": "Columnar Cipher"
  },
  {
    "_id": "HJCqdv4A3TMHrEvrk",
    "difficulty": 4.142857142857143,
    "language": "java",
    "summary": "A modified Kaprekar number is a positive whole number with a special property. If you square it, then split the number into two integers and sum those integers, you have the same value you started with.\n\nConsider a positive whole number n with d digits. We square n to arrive at a number that is either 2 * d digits long or (2 * d) - 1 digits long. Split the str",
    "tags": [
      "algorithms",
      "numbers"
    ],
    "title": "Modified Kaprekar Numbers"
  },
  {
    "_id": "2XSjprYKQMFpMqwJd",
    "difficulty": 4.181818181818182,
    "language": "java",
    "summary": "You will be given a polynomial expression in string form. The expression will contain any of the following operations, written using standard mathematical notation for a single variable, \"x\", as illustrated in the examples below:\naddition: x + 1\nsubtraction: x – 2\nmultiplication: 3x\ndivision: x / 4\nexponentation: x^5\nbrackets: x(x + 1)\n\nYour task is to write a",
    "tags": [
      "algebra",
      "strings"
    ],
    "title": "Evaluate Polynomials from String"
  },
  {
    "_id": "CDs32gcYBoqQpk44j",
    "difficulty": 4.25,
    "language": "java",
    "summary": "In Spartans Cipher, encoding is done by writing the text horizontally, across the strap in the plaintext word of a message. In ancient times, Spartans and Greeks invented interesting way of encryption called Scytale. The details of the encoding algorithm is described in this challenge. You are encouraged to solve that one first.\n\nIn this challenge, the functio",
    "tags": [
      "algorithms",
      "cryptography",
      "logic",
      "strings"
    ],
    "title": "Spartans Decipher"
  },
  {
    "_id": "kBguc5wSQtSoTyMyd",
    "difficulty": 4.333333333333333,
    "language": "java",
    "summary": "An anagram is a word formed by rearranging the letters of a different word using all the original letters exactly once.\n\nThe function is given two strings: s - to search in, p - a template word. Find the starting indexes of anagrams of p among substrings of the given s.\n\nExamples\nfindAnagrams(\"cbaebabacd\", \"abc\") ➞ [0, 6]\n// Anagrams: \"cba\", \"bac\"\n\nfindAnagram",
    "tags": [
      "algorithms",
      "logic",
      "strings"
    ],
    "title": "Find All Anagrams In A String"
  },
  {
    "_id": "zARWST6dTceWpoeA7",
    "difficulty": 4.363636363636363,
    "language": "java",
    "summary": "Given an instance of the NonSuspiciousObject class, return its secretVar attribute.\n\nExamples\ngetSecretVar(new NonSuspiciousObject(9)) ➞ 9\n\ngetSecretVar(new NonSuspiciousObject(31)) ➞ 31\n\ngetSecretVar(new NonSuspiciousObject(-497)) ➞ -497\n\nNotes\nThe secretVar attribute is private!\nThe tests are randomized; the challenge isn't to reverse engineer the PRNG.\nThe",
    "tags": [
      "language_fundamentals",
      "objects"
    ],
    "title": "It's a Secret... or is it?"
  },
  {
    "_id": "LGKApTn5MRT7wYkcc",
    "difficulty": 4.375,
    "language": "java",
    "summary": "Create a method that takes JavaScript code and returns the output of that code.\n\nExamples\nrunJS(\"3*3/2\") ➞ 4.5\n\nString code=\"\n  var a=10;\n  var b=20;\n  isGreater(a, b);\n  function isGreater(a, b) {\n    return a>b\n  }\";\nrunJS(code) ➞ false\n\nrunJS(\"var =13\") ➞ \"Error at line:1 col:4\"\n\nNotes\nCheck the Resources tab if you're stuck.",
    "tags": [
      "language_fundamentals",
      "strings",
      "validation"
    ],
    "title": "Run JavaScript Code"
  },
  {
    "_id": "SRSgm5r3P6tRZPRAy",
    "difficulty": 4.4,
    "language": "java",
    "summary": "Write a function that will return true if a given string (divided and grouped into a size) will contain a set of consecutive ascending numbers, otherwise, return false.\n\nExamples\nascending(\"123124125\") ➞ true\n// Contains a set of consecutive ascending numbers\n// if grouped into 3's : 123, 124, 125\n\nascending(\"101112131415\") ➞ true\n// Contains a set of consecut",
    "tags": [
      "recursion",
      "strings",
      "numbers",
      "arrays"
    ],
    "title": "Recursion: Consecutive Ascending Numbers"
  },
  {
    "_id": "xNoC5g5rnT5R8YJqb",
    "difficulty": 4.428571428571429,
    "language": "java",
    "summary": "The function is given a string representing an expression of many fractions addition and subtraction. Compute the arithmetic result and return the string in the form of an irreducible fraction. Even if the result is an integer, e.g. 3, return it as 3/1.\n\nExamples\nfractionsAddition(\"4/5-6/4\") ➞ \"-7/10\"\n\nfractionsAddition(\"5/4-6/6\") ➞ \"1/4\"\n\nfractionsAddition(\"-",
    "tags": [
      "algorithms",
      "numbers",
      "regex",
      "strings"
    ],
    "title": "Fractions Addition and Subtraction"
  },
  {
    "_id": "aBm55e7eoE8zYkgo5",
    "difficulty": 4.5,
    "language": "java",
    "summary": "Write a function that will return true if a given string (divided and grouped into a size) will contain a set of consecutive numbers (regardless of orientation: whether ascending or descending), otherwise, return false.\n\nExamples\nisConsecutive(\"121314151617\") ➞ true\n// Contains a set of consecutive ascending numbers\n// if grouped into 2's : 12, 13, 14, 15, 16,",
    "tags": [
      "recursion",
      "sorting",
      "strings",
      "numbers",
      "validation"
    ],
    "title": "Recursion: Consecutive Number Series"
  },
  {
    "_id": "6QmLJWeMazDnxeXaX",
    "difficulty": 4.5,
    "language": "java",
    "summary": "This is an \"expert\" challenge??!! Why is a sum of two numbers an \"expert\" challenge??!! Well, the numbers can have 1000 digits or even beyond such count...\n\nSo, what's the twist? You have to do the summation as if you're doing it manually on a piece of paper, thus, the conversion of the numeric string to numeric literal is basically disallowed.\n\nExamples\nsum(\"",
    "tags": [
      "recursion",
      "strings",
      "algorithms",
      "math"
    ],
    "title": "Recursion: Sum of Two Numbers (with a twist!)"
  },
  {
    "_id": "3BKwQipQry86wYwLo",
    "difficulty": 4.588235294117647,
    "language": "java",
    "summary": "The 2nd of February 2020 is a palindromic date in both dd/mm/yyyy and mm/dd/yyyy format (02/02/2020).\n\nFebruary 2, 2020 is the only 2-digit month and day palindromic date that will occur in the 21st century.  The next occurrence of a 2-digit month and day palindromic date will be December 12, 2121, which is exactly 101 years from the last occurrence.  101 is a",
    "tags": [
      "algorithms",
      "dates"
    ],
    "title": "Next Palindromic Date"
  },
  {
    "_id": "do3FXijRWDakuQART",
    "difficulty": 4.615384615384615,
    "language": "java",
    "summary": "This challenge makes use of a modified Baconian (Francis Bacon) cipher. The following is an example of a (modified) Baconian ciphertext:\n\nciphertext = \"KNowlEDgE ITsElf Is power.\"\n\nThe peculiar capitalisation might, at first glance, suggest that either the lowercase or uppercase letters contain, or code for, the hidden message (upper = \"KNEDEITEI\", lower = \"ow",
    "tags": [
      "conditions",
      "cryptography",
      "loops",
      "strings"
    ],
    "title": "Hidden in Plain Sight"
  },
  {
    "_id": "imM3Hz44BLEPCKoFe",
    "difficulty": 4.625,
    "language": "java",
    "summary": "The function is given an array of characters. Recursively compress the array into a string using the following rules. For each group of consecutively repeating characters:\nIf the number of repeating characters is one, append the string with only this character.\nIf the number n of repeating characters x is greater than one, append the string with \"x\" + n.\n\nExam",
    "tags": [
      "recursion",
      "strings",
      "arrays"
    ],
    "title": "Recursion: String Compression from Character Array"
  },
  {
    "_id": "Jfw8TqjNtNnq5jtkA",
    "difficulty": 4.666666666666667,
    "language": "java",
    "summary": "The Playfair cipher is a substitution cipher that uses digraphs (pairs of letters) instead of single letters, and makes use of symmetrical encryption.\n\nThere are some variations on the rules of encipherment. One version of the cipher\nrules is outlined below:\n\nA 5x5 Polybius square is constructed, deranged with a keyword.\n\nkeyword = python\n\n  First, fill in the",
    "tags": [
      "algorithms",
      "cryptography",
      "loops"
    ],
    "title": "Playfair Cipher"
  },
  {
    "_id": "SoyrGdNNwZLYSgwGe",
    "difficulty": 4.7272727272727275,
    "language": "java",
    "summary": "A Vampire Number is a positive integer greater than 99, that rearranged in all of its possible digits permutations, with every permutation being split into two parts, is equal to the product of at least one of its permutations.\n\nIf the number has an even quantity of digits, left and right parts will have the same length in every permutation;\nIf the number has",
    "tags": [
      "numbers",
      "algorithms",
      "recursion",
      "higher_order_functions"
    ],
    "title": "Vampire Numbers"
  },
  {
    "_id": "fSohszsuqKXYDDjGb",
    "difficulty": 4.7272727272727275,
    "language": "java",
    "summary": "Given a string, a move is made by either removing the substring \"actor\" or by removing the substring \"intact\".  Upon removing a substring, a new string is produced, and moves may be made from the new string until no more moves are possible.\n\nFor example, given the string \"inactortact\", one can first remove the substring \"actor\" to get \"intact\" and then remove",
    "tags": [
      "strings",
      "interview",
      "data_structures",
      "algorithms"
    ],
    "title": "Maximum Removals"
  },
  {
    "_id": "YdKPDaRgdxzhfdduR",
    "difficulty": 5,
    "language": "java",
    "summary": "The function is given two strings s1 and s2. Determine if one of the permutations of characters of s1 is a substring of s2, return true / false.\n\nExamples\ncheckInclusion(\"ab\", \"edabitbooo\") ➞ true\n// \"ab\" is in s2.\n\ncheckInclusion(\"ab\", \"edaoboat\") ➞ false\n// neither \"ab\" or \"ba\" is in s2.\n\ncheckInclusion(\"adc\", \"dcda\") ➞ true\n// \"cda\" is a permutation of \"adc",
    "tags": [
      "algorithms",
      "conditions",
      "loops",
      "strings"
    ],
    "title": "Inclusion of a Shuffled String Into another String"
  }
]