{"messages":[{"outgoing":"false","opcodeString":"TEXT","payloadLength":"1","payloadFragment":"o","thisId":"1","channelHost":"edabit.com","id":"1","opcode":"1","channelId":"2","timestamp":"1652648767354"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"81","payloadFragment":"[\"{\\\"msg\\\":\\\"connect\\\",\\\"version\\\":\\\"1\\\",\\\"support\\\":[\\\"1\\\",\\\"pre2\\\",\\\"pre1\\\"]}\"]","thisId":"2","channelHost":"edabit.com","id":"2","opcode":"1","channelId":"2","timestamp":"1652648767366"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"26","payloadFragment":"a[\"{\\\"server_id\\\":\\\"0\\\"}\"]","thisId":"3","channelHost":"edabit.com","id":"3","opcode":"1","channelId":"2","timestamp":"1652648767366"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"115","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"universe.i18n.setServerLocaleForConnection\\\",\\\"params\\\":[\\\"fr\\\"],\\\"id\\\":\\\"1\\\"}\"]","thisId":"4","channelHost":"edabit.com","id":"4","opcode":"1","channelId":"2","timestamp":"1652648767412"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"110","payloadFragment":"[\"{\\\"msg\\\":\\\"sub\\\",\\\"id\\\":\\\"G92KSrhSuX7aFQXhD\\\",\\\"name\\\":\\\"meteor.loginServiceConfiguration\\\",\\\"params\\\":[]}\"]","thisId":"5","channelHost":"edabit.com","id":"5","opcode":"1","channelId":"2","timestamp":"1652648767420"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"110","payloadFragment":"[\"{\\\"msg\\\":\\\"sub\\\",\\\"id\\\":\\\"gepHHNoXT479rRYMM\\\",\\\"name\\\":\\\"meteor_autoupdate_clientVersions\\\",\\\"params\\\":[]}\"]","thisId":"6","channelHost":"edabit.com","id":"6","opcode":"1","channelId":"2","timestamp":"1652648767436"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"96","payloadFragment":"[\"{\\\"msg\\\":\\\"sub\\\",\\\"id\\\":\\\"7ezoWzpRMZrvhtssy\\\",\\\"name\\\":\\\"notifications.user\\\",\\\"params\\\":[]}\"]","thisId":"7","channelHost":"edabit.com","id":"7","opcode":"1","channelId":"2","timestamp":"1652648767446"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"115","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"universe.i18n.setServerLocaleForConnection\\\",\\\"params\\\":[\\\"fr\\\"],\\\"id\\\":\\\"2\\\"}\"]","thisId":"8","channelHost":"edabit.com","id":"8","opcode":"1","channelId":"2","timestamp":"1652648767457"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"62","payloadFragment":"a[\"{\\\"msg\\\":\\\"connected\\\",\\\"session\\\":\\\"4enFaKJd8KF3ZGeB7\\\"}\"]","thisId":"9","channelHost":"edabit.com","id":"9","opcode":"1","channelId":"2","timestamp":"1652648767558"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"241","payloadFragment":"a[\"{\\\"msg\\\":\\\"added\\\",\\\"collection\\\":\\\"kadira_settings\\\",\\\"id\\\":\\\"fAjpznJWYf7WxHmM2\\\",\\\"fields\\\":{\\\"appId\\\":\\\"Mz7xd9SXTmvc2Cyw5\\\",\\\"endpoint\\\":\\\"https://apm-engine.meteor.com\\\",\\\"clientEngineSyncDelay\\\":10000,\\\"enableErrorTracking\\\":true}}\"]","thisId":"10","channelHost":"edabit.com","id":"10","opcode":"1","channelId":"2","timestamp":"1652648767565"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"46","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"1\\\"]}\"]","thisId":"11","channelHost":"edabit.com","id":"11","opcode":"1","channelId":"2","timestamp":"1652648767684"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"38","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"1\\\"}\"]","thisId":"12","channelHost":"edabit.com","id":"12","opcode":"1","channelId":"2","timestamp":"1652648767692"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"240","payloadFragment":"a[\"{\\\"msg\\\":\\\"added\\\",\\\"collection\\\":\\\"meteor_accounts_loginServiceConfiguration\\\",\\\"id\\\":\\\"8d8M7vyPZgdmNTu4Z\\\",\\\"fields\\\":{\\\"service\\\":\\\"google\\\",\\\"clientId\\\":\\\"410845566296-5rkg3ua48gi39gb2chrhtd0esifef7j6.apps.googleusercontent.com\\\"}}\"]","thisId":"13","channelHost":"edabit.com","id":"13","opcode":"1","channelId":"2","timestamp":"1652648767788"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"182","payloadFragment":"a[\"{\\\"msg\\\":\\\"added\\\",\\\"collection\\\":\\\"meteor_accounts_loginServiceConfiguration\\\",\\\"id\\\":\\\"YTQ6WTZZb2Xv5hRsX\\\",\\\"fields\\\":{\\\"service\\\":\\\"facebook\\\",\\\"appId\\\":\\\"389148292292510\\\"}}\"]","thisId":"14","channelHost":"edabit.com","id":"14","opcode":"1","channelId":"2","timestamp":"1652648767790"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"188","payloadFragment":"a[\"{\\\"msg\\\":\\\"added\\\",\\\"collection\\\":\\\"meteor_accounts_loginServiceConfiguration\\\",\\\"id\\\":\\\"Dxsep4WAaSLwBPxNr\\\",\\\"fields\\\":{\\\"service\\\":\\\"github\\\",\\\"clientId\\\":\\\"1569fb9ff72e6e8e116b\\\"}}\"]","thisId":"15","channelHost":"edabit.com","id":"15","opcode":"1","channelId":"2","timestamp":"1652648767796"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"57","payloadFragment":"a[\"{\\\"msg\\\":\\\"ready\\\",\\\"subs\\\":[\\\"G92KSrhSuX7aFQXhD\\\"]}\"]","thisId":"16","channelHost":"edabit.com","id":"16","opcode":"1","channelId":"2","timestamp":"1652648767798"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"57","payloadFragment":"a[\"{\\\"msg\\\":\\\"ready\\\",\\\"subs\\\":[\\\"gepHHNoXT479rRYMM\\\"]}\"]","thisId":"17","channelHost":"edabit.com","id":"17","opcode":"1","channelId":"2","timestamp":"1652648767928"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"133","payloadFragment":"a[\"{\\\"msg\\\":\\\"added\\\",\\\"collection\\\":\\\"meteor_autoupdate_clientVersions\\\",\\\"id\\\":\\\"version\\\",\\\"fields\\\":{\\\"version\\\":\\\"outdated\\\"}}\"]","thisId":"18","channelHost":"edabit.com","id":"18","opcode":"1","channelId":"2","timestamp":"1652648767939"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"145","payloadFragment":"a[\"{\\\"msg\\\":\\\"added\\\",\\\"collection\\\":\\\"meteor_autoupdate_clientVersions\\\",\\\"id\\\":\\\"version-refreshable\\\",\\\"fields\\\":{\\\"version\\\":\\\"outdated\\\"}}\"]","thisId":"19","channelHost":"edabit.com","id":"19","opcode":"1","channelId":"2","timestamp":"1652648767949"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"141","payloadFragment":"a[\"{\\\"msg\\\":\\\"added\\\",\\\"collection\\\":\\\"meteor_autoupdate_clientVersions\\\",\\\"id\\\":\\\"version-cordova\\\",\\\"fields\\\":{\\\"version\\\":\\\"outdated\\\"}}\"]","thisId":"20","channelHost":"edabit.com","id":"20","opcode":"1","channelId":"2","timestamp":"1652648767955"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"491","payloadFragment":"a[\"{\\\"msg\\\":\\\"added\\\",\\\"collection\\\":\\\"meteor_autoupdate_clientVersions\\\",\\\"id\\\":\\\"web.browser\\\",\\\"fields\\\":{\\\"version\\\":\\\"4c5f400ef296a1f363c2ac037bcca994a67c05a8\\\",\\\"versionRefreshable\\\":\\\"eabbe41e49f1cfb764e2a02a33e852728e7a26f0\\\",\\\"versionNonRefreshable\\\":\\\"799cb33096d2bcc3b00eb190b902cd6840ce9e86\\\",\\\"assets\\\":[{\\\"url\\\":\\\"/c039cef9b47481baf0e9a343e536154438171f0f.css?meteor_css_resource=true\\\"},{\\\"url\\\":\\\"/52f02f273b0d7fd6013f016f05c3645aa114c8e6.css?meteor_css_resource=true\\\"}]}}\"]","thisId":"21","channelHost":"edabit.com","id":"21","opcode":"1","channelId":"2","timestamp":"1652648767959"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"498","payloadFragment":"a[\"{\\\"msg\\\":\\\"added\\\",\\\"collection\\\":\\\"meteor_autoupdate_clientVersions\\\",\\\"id\\\":\\\"web.browser.legacy\\\",\\\"fields\\\":{\\\"version\\\":\\\"f45f0508d12468a843658947c98fad067be0fea6\\\",\\\"versionRefreshable\\\":\\\"eabbe41e49f1cfb764e2a02a33e852728e7a26f0\\\",\\\"versionNonRefreshable\\\":\\\"5fdcb5621ec7f5351fe9c6d265dc52791133253a\\\",\\\"assets\\\":[{\\\"url\\\":\\\"/c039cef9b47481baf0e9a343e536154438171f0f.css?meteor_css_resource=true\\\"},{\\\"url\\\":\\\"/52f02f273b0d7fd6013f016f05c3645aa114c8e6.css?meteor_css_resource=true\\\"}]}}\"]","thisId":"22","channelHost":"edabit.com","id":"22","opcode":"1","channelId":"2","timestamp":"1652648767989"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"57","payloadFragment":"a[\"{\\\"msg\\\":\\\"ready\\\",\\\"subs\\\":[\\\"7ezoWzpRMZrvhtssy\\\"]}\"]","thisId":"23","channelHost":"edabit.com","id":"23","opcode":"1","channelId":"2","timestamp":"1652648768040"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"46","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"2\\\"]}\"]","thisId":"24","channelHost":"edabit.com","id":"24","opcode":"1","channelId":"2","timestamp":"1652648768157"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"38","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"2\\\"}\"]","thisId":"25","channelHost":"edabit.com","id":"25","opcode":"1","channelId":"2","timestamp":"1652648768192"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"82","payloadFragment":"[\"{\\\"msg\\\":\\\"sub\\\",\\\"id\\\":\\\"yMpHX9MRGbmWjt8RF\\\",\\\"name\\\":\\\"user\\\",\\\"params\\\":[]}\"]","thisId":"26","channelHost":"edabit.com","id":"26","opcode":"1","channelId":"2","timestamp":"1652648769379"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"553","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallenges\\\",\\\"params\\\":[\\\"javascript\\\",{\\\"$gte\\\":0,\\\"$lt\\\":6},[\\\"algebra\\\",\\\"algorithms\\\",\\\"arrays\\\",\\\"bit_operations\\\",\\\"bugs\\\",\\\"closures\\\",\\\"conditions\\\",\\\"control_flow\\\",\\\"cryptography\\\",\\\"data_structures\\\",\\\"dates\\\",\\\"formatting\\\",\\\"functional_programming\\\",\\\"games\\\",\\\"geometry\\\",\\\"higher_order_functions\\\",\\\"interview\\\",\\\"language_fundamentals\\\",\\\"logic\\\",\\\"loops\\\",\\\"math\\\",\\\"numbers\\\",\\\"objects\\\",\\\"physics\\\",\\\"recursion\\\",\\\"regex\\\",\\\"scope\\\",\\\"sorting\\\",\\\"strings\\\",\\\"validation\\\"],20,[]],\\\"id\\\":\\\"3\\\"}\"]","thisId":"27","channelHost":"edabit.com","id":"27","opcode":"1","channelId":"2","timestamp":"1652648769397"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"57","payloadFragment":"a[\"{\\\"msg\\\":\\\"ready\\\",\\\"subs\\\":[\\\"yMpHX9MRGbmWjt8RF\\\"]}\"]","thisId":"28","channelHost":"edabit.com","id":"28","opcode":"1","channelId":"2","timestamp":"1652648769654"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"46","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"3\\\"]}\"]","thisId":"29","channelHost":"edabit.com","id":"29","opcode":"1","channelId":"2","timestamp":"1652648769823"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"11078","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"3\\\",\\\"result\\\":[{\\\"_id\\\":\\\"ARr5tA458o2tC9FTN\\\",\\\"difficulty\\\":0.21031489737086687,\\\"language\\\":\\\"javascript\\\",\\\"summary\\\":\\\"This is an introduction to how challenges on Edabit work. In the Code tab above you'll see a starter function that looks like this:\\\\n\\\\nfunction hello() {\\\\n\\\\n}\\\\n\\\\nAll you have to do is type return \\\\\\\"hello edabit.com\\\\\\\" between the curly braces { } and then click the Check button. If you did this correctly, the button will turn red and say SUBMIT FINAL. Click it and see\\\",\\\"tags\\\":[\\\"strings\\\",\\\"language_fundamentals\\\"],\\\"title\\\":\\\"How Edabit Works\\\"},{\\\"_id\\\":\\\"3LpBLgNRyaHMvNb4j\\\",\\\"difficulty\\\":0.2928802293519347,\\\"language\\\":\\\"javascript\\\",\\\"summary\\\":\\\"Create a function that takes two numbers as arguments and returns their sum.\\\\n\\\\nExamples\\\\naddition(3, 2) ➞ 5\\\\n\\\\naddition(-3, -6) ➞ -9\\\\n\\\\naddition(7, 3) ➞ 10\\\\n\\\\nNotes\\\\nDon't forget to return the result.\\\\nIf you get stuck on a challenge, find help in the Resources tab.\\\\nIf you're really ","thisId":"30","channelHost":"edabit.com","id":"30","opcode":"1","channelId":"2","timestamp":"1652648769842"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"104","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ARr5tA458o2tC9FTN\\\"],\\\"id\\\":\\\"4\\\"}\"]","thisId":"31","channelHost":"edabit.com","id":"31","opcode":"1","channelId":"2","timestamp":"1652648774620"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"46","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"4\\\"]}\"]","thisId":"32","channelHost":"edabit.com","id":"32","opcode":"1","channelId":"2","timestamp":"1652648775387"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"2002626","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"4\\\",\\\"result\\\":{\\\"_id\\\":\\\"ARr5tA458o2tC9FTN\\\",\\\"archived\\\":false,\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"function hello() {\\\\n\\\\t\\\\n}\\\",\\\"difficulty\\\":0.21031489737086687,\\\"editorId\\\":\\\"KcpfY4XZ7fNamyLd3\\\",\\\"familyId\\\":\\\"DfdQKmyXAiNb3A5DQ\\\",\\\"instructions\\\":\\\"This is an introduction to how challenges on Edabit work. In the **Code tab above** you'll see a starter function that looks like this:\\\\n\\\\n```\\\\nfunction hello() {\\\\n\\\\n}\\\\n```\\\\n\\\\nAll you have to do is type `return \\\\\\\"hello edabit.com\\\\\\\"` between the curly braces `{ }` and then click the **Check** button. If you did this correctly, the button will turn red and say **SUBMIT FINAL**. Click it and see what happens.\\\\n\\\\n### Notes\\\\n- The returned string must be in **all lowercase** letters.\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're *really* stuck, unlock solutions in the **Solutions** tab.\\\",\\\"lab\\\":\\\"Test.assertEquals(hello(), \\\\\\\"hello edabit.com\\\\","thisId":"33","channelHost":"edabit.com","id":"33","opcode":"1","channelId":"2","timestamp":"1652648775703"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"23","payloadFragment":"a[\"{\\\"msg\\\":\\\"ping\\\"}\"]","thisId":"34","channelHost":"edabit.com","id":"34","opcode":"1","channelId":"2","timestamp":"1652648797564"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"22","payloadFragment":"[\"{\\\"msg\\\":\\\"pong\\\"}\"]","thisId":"35","channelHost":"edabit.com","id":"35","opcode":"1","channelId":"2","timestamp":"1652648797593"},{"outgoing":"false","opcodeString":"PING","payloadLength":"0","payloadFragment":"","thisId":"36","channelHost":"edabit.com","id":"36","opcode":"9","channelId":"2","timestamp":"1652648812305"},{"outgoing":"true","opcodeString":"PONG","payloadLength":"0","payloadFragment":"","thisId":"37","channelHost":"edabit.com","id":"37","opcode":"10","channelId":"2","timestamp":"1652648812318"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"22","payloadFragment":"[\"{\\\"msg\\\":\\\"ping\\\"}\"]","thisId":"38","channelHost":"edabit.com","id":"38","opcode":"1","channelId":"2","timestamp":"1652648820081"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"23","payloadFragment":"a[\"{\\\"msg\\\":\\\"pong\\\"}\"]","thisId":"39","channelHost":"edabit.com","id":"39","opcode":"1","channelId":"2","timestamp":"1652648821108"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"104","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"2t8JDxF7wLrg7yJ5E\\\"],\\\"id\\\":\\\"7\\\"}\"]","thisId":"40","channelHost":"edabit.com","id":"40","opcode":"1","channelId":"2","timestamp":"1652648842391"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"104","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Qir2pQ2Qp3uwrfJNZ\\\"],\\\"id\\\":\\\"8\\\"}\"]","thisId":"41","channelHost":"edabit.com","id":"41","opcode":"1","channelId":"2","timestamp":"1652648842391"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"104","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"5gpukjfi5rAH8MvKF\\\"],\\\"id\\\":\\\"9\\\"}\"]","thisId":"42","channelHost":"edabit.com","id":"42","opcode":"1","channelId":"2","timestamp":"1652648842391"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"104","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"8Ty2vq2YtcBp6CFc8\\\"],\\\"id\\\":\\\"6\\\"}\"]","thisId":"43","channelHost":"edabit.com","id":"43","opcode":"1","channelId":"2","timestamp":"1652648842392"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"104","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"L7z5EW4MSoGBi6cXP\\\"],\\\"id\\\":\\\"5\\\"}\"]","thisId":"44","channelHost":"edabit.com","id":"44","opcode":"1","channelId":"2","timestamp":"1652648842392"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"XJxu5LCnqN9K8SXm5\\\"],\\\"id\\\":\\\"10\\\"}\"]","thisId":"45","channelHost":"edabit.com","id":"45","opcode":"1","channelId":"2","timestamp":"1652648842403"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"DmFnzAQzWhyRWdKPi\\\"],\\\"id\\\":\\\"11\\\"}\"]","thisId":"46","channelHost":"edabit.com","id":"46","opcode":"1","channelId":"2","timestamp":"1652648842409"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"cMKLM7ExBd3TFJwPA\\\"],\\\"id\\\":\\\"12\\\"}\"]","thisId":"47","channelHost":"edabit.com","id":"47","opcode":"1","channelId":"2","timestamp":"1652648842411"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"6MTtawFBLqDRSqiSf\\\"],\\\"id\\\":\\\"13\\\"}\"]","thisId":"48","channelHost":"edabit.com","id":"48","opcode":"1","channelId":"2","timestamp":"1652648842412"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"gdRGePvnZDfQGDS8g\\\"],\\\"id\\\":\\\"14\\\"}\"]","thisId":"49","channelHost":"edabit.com","id":"49","opcode":"1","channelId":"2","timestamp":"1652648842413"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"zBhuXyFeSQdizC5LW\\\"],\\\"id\\\":\\\"15\\\"}\"]","thisId":"50","channelHost":"edabit.com","id":"50","opcode":"1","channelId":"2","timestamp":"1652648842413"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"B4HjZbBh9yuELmjna\\\"],\\\"id\\\":\\\"16\\\"}\"]","thisId":"51","channelHost":"edabit.com","id":"51","opcode":"1","channelId":"2","timestamp":"1652648842414"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"EP66YmuNMWhRZdniY\\\"],\\\"id\\\":\\\"17\\\"}\"]","thisId":"52","channelHost":"edabit.com","id":"52","opcode":"1","channelId":"2","timestamp":"1652648842414"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ZuoKAgmH8G2vHtLzi\\\"],\\\"id\\\":\\\"19\\\"}\"]","thisId":"53","channelHost":"edabit.com","id":"53","opcode":"1","channelId":"2","timestamp":"1652648842429"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"RNMKdSEhxdxf2fWsa\\\"],\\\"id\\\":\\\"18\\\"}\"]","thisId":"54","channelHost":"edabit.com","id":"54","opcode":"1","channelId":"2","timestamp":"1652648842429"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"BeW6HMLCfGzHxkzbe\\\"],\\\"id\\\":\\\"20\\\"}\"]","thisId":"55","channelHost":"edabit.com","id":"55","opcode":"1","channelId":"2","timestamp":"1652648842429"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Phy3ESenwRH6KNytm\\\"],\\\"id\\\":\\\"21\\\"}\"]","thisId":"56","channelHost":"edabit.com","id":"56","opcode":"1","channelId":"2","timestamp":"1652648842429"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"eqcCH2WbEXFLDyiQi\\\"],\\\"id\\\":\\\"22\\\"}\"]","thisId":"57","channelHost":"edabit.com","id":"57","opcode":"1","channelId":"2","timestamp":"1652648842440"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"FSKb2sKrGoejfJLrd\\\"],\\\"id\\\":\\\"23\\\"}\"]","thisId":"58","channelHost":"edabit.com","id":"58","opcode":"1","channelId":"2","timestamp":"1652648842442"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"JAtN6KLtahAkmT3n3\\\"],\\\"id\\\":\\\"24\\\"}\"]","thisId":"59","channelHost":"edabit.com","id":"59","opcode":"1","channelId":"2","timestamp":"1652648842442"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ZdHBAkK9qfFCNKfPQ\\\"],\\\"id\\\":\\\"25\\\"}\"]","thisId":"60","channelHost":"edabit.com","id":"60","opcode":"1","channelId":"2","timestamp":"1652648842442"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"eKRNd9YqFNAXKuGxd\\\"],\\\"id\\\":\\\"26\\\"}\"]","thisId":"61","channelHost":"edabit.com","id":"61","opcode":"1","channelId":"2","timestamp":"1652648842443"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"wWsD84bEGZgWp6NN5\\\"],\\\"id\\\":\\\"27\\\"}\"]","thisId":"62","channelHost":"edabit.com","id":"62","opcode":"1","channelId":"2","timestamp":"1652648842443"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"L53ZXmSb32TCSkciE\\\"],\\\"id\\\":\\\"28\\\"}\"]","thisId":"63","channelHost":"edabit.com","id":"63","opcode":"1","channelId":"2","timestamp":"1652648842444"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"3MqevrgExMbgmBrLG\\\"],\\\"id\\\":\\\"29\\\"}\"]","thisId":"64","channelHost":"edabit.com","id":"64","opcode":"1","channelId":"2","timestamp":"1652648842448"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"78n7cFZqNLMzE2DKZ\\\"],\\\"id\\\":\\\"31\\\"}\"]","thisId":"65","channelHost":"edabit.com","id":"65","opcode":"1","channelId":"2","timestamp":"1652648842448"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"SquoES5RxWr4CyX6G\\\"],\\\"id\\\":\\\"32\\\"}\"]","thisId":"66","channelHost":"edabit.com","id":"66","opcode":"1","channelId":"2","timestamp":"1652648842448"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"XjYMguBCEf7WqEu8M\\\"],\\\"id\\\":\\\"30\\\"}\"]","thisId":"67","channelHost":"edabit.com","id":"67","opcode":"1","channelId":"2","timestamp":"1652648842448"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"KWRQP86jxzM9SZmRM\\\"],\\\"id\\\":\\\"33\\\"}\"]","thisId":"68","channelHost":"edabit.com","id":"68","opcode":"1","channelId":"2","timestamp":"1652648842448"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"NhwrwfjHZ9Dpz2J5K\\\"],\\\"id\\\":\\\"34\\\"}\"]","thisId":"69","channelHost":"edabit.com","id":"69","opcode":"1","channelId":"2","timestamp":"1652648842449"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"KnRj8TSD63JBpzDfi\\\"],\\\"id\\\":\\\"35\\\"}\"]","thisId":"70","channelHost":"edabit.com","id":"70","opcode":"1","channelId":"2","timestamp":"1652648842450"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"EnkJmMjFaivQ5txdW\\\"],\\\"id\\\":\\\"36\\\"}\"]","thisId":"71","channelHost":"edabit.com","id":"71","opcode":"1","channelId":"2","timestamp":"1652648842450"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"pwDhjNEqDFWGzELLS\\\"],\\\"id\\\":\\\"37\\\"}\"]","thisId":"72","channelHost":"edabit.com","id":"72","opcode":"1","channelId":"2","timestamp":"1652648842450"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"dLXXzJ5hkLAzkyDCm\\\"],\\\"id\\\":\\\"38\\\"}\"]","thisId":"73","channelHost":"edabit.com","id":"73","opcode":"1","channelId":"2","timestamp":"1652648842450"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"uG3DEHwC5xMtHnCdm\\\"],\\\"id\\\":\\\"39\\\"}\"]","thisId":"74","channelHost":"edabit.com","id":"74","opcode":"1","channelId":"2","timestamp":"1652648842451"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"kewawqtmmyXiiA9B6\\\"],\\\"id\\\":\\\"40\\\"}\"]","thisId":"75","channelHost":"edabit.com","id":"75","opcode":"1","channelId":"2","timestamp":"1652648842451"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"djMjmJMbeEFxEsPiH\\\"],\\\"id\\\":\\\"41\\\"}\"]","thisId":"76","channelHost":"edabit.com","id":"76","opcode":"1","channelId":"2","timestamp":"1652648842451"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"wr8zTBNNeLtspmLLT\\\"],\\\"id\\\":\\\"42\\\"}\"]","thisId":"77","channelHost":"edabit.com","id":"77","opcode":"1","channelId":"2","timestamp":"1652648842453"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"f4Bndq3nGd69krdAe\\\"],\\\"id\\\":\\\"43\\\"}\"]","thisId":"78","channelHost":"edabit.com","id":"78","opcode":"1","channelId":"2","timestamp":"1652648842455"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"fY3bzat74jGhLMepS\\\"],\\\"id\\\":\\\"44\\\"}\"]","thisId":"79","channelHost":"edabit.com","id":"79","opcode":"1","channelId":"2","timestamp":"1652648842465"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"umRwYETG7ogToZhSi\\\"],\\\"id\\\":\\\"48\\\"}\"]","thisId":"80","channelHost":"edabit.com","id":"80","opcode":"1","channelId":"2","timestamp":"1652648842478"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"jMnHZ4ywxG8WGvDqC\\\"],\\\"id\\\":\\\"45\\\"}\"]","thisId":"81","channelHost":"edabit.com","id":"81","opcode":"1","channelId":"2","timestamp":"1652648842479"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"4PGHC3nqN9gH2svby\\\"],\\\"id\\\":\\\"47\\\"}\"]","thisId":"82","channelHost":"edabit.com","id":"82","opcode":"1","channelId":"2","timestamp":"1652648842479"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"b3wgTSBnd2HH44qzr\\\"],\\\"id\\\":\\\"46\\\"}\"]","thisId":"83","channelHost":"edabit.com","id":"83","opcode":"1","channelId":"2","timestamp":"1652648842479"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"xTqLduZ9McaZ3bE2j\\\"],\\\"id\\\":\\\"49\\\"}\"]","thisId":"84","channelHost":"edabit.com","id":"84","opcode":"1","channelId":"2","timestamp":"1652648842482"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"sn9KfW72BBoT7eesC\\\"],\\\"id\\\":\\\"50\\\"}\"]","thisId":"85","channelHost":"edabit.com","id":"85","opcode":"1","channelId":"2","timestamp":"1652648842483"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Nz6AzC4v8jyMCH2Tu\\\"],\\\"id\\\":\\\"52\\\"}\"]","thisId":"86","channelHost":"edabit.com","id":"86","opcode":"1","channelId":"2","timestamp":"1652648842483"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ssHiWN2GD4oy7swEg\\\"],\\\"id\\\":\\\"53\\\"}\"]","thisId":"87","channelHost":"edabit.com","id":"87","opcode":"1","channelId":"2","timestamp":"1652648842483"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"u7y8wBK7Z5woycKa6\\\"],\\\"id\\\":\\\"51\\\"}\"]","thisId":"88","channelHost":"edabit.com","id":"88","opcode":"1","channelId":"2","timestamp":"1652648842484"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"FAw6mykprqcsBW5Gr\\\"],\\\"id\\\":\\\"55\\\"}\"]","thisId":"89","channelHost":"edabit.com","id":"89","opcode":"1","channelId":"2","timestamp":"1652648842485"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"a9Shdt64Ak2Hwq7oP\\\"],\\\"id\\\":\\\"54\\\"}\"]","thisId":"90","channelHost":"edabit.com","id":"90","opcode":"1","channelId":"2","timestamp":"1652648842485"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Zyq5wqkxMFJFSWQ36\\\"],\\\"id\\\":\\\"56\\\"}\"]","thisId":"91","channelHost":"edabit.com","id":"91","opcode":"1","channelId":"2","timestamp":"1652648842485"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"d7zedhqw2WKhqYm2C\\\"],\\\"id\\\":\\\"57\\\"}\"]","thisId":"92","channelHost":"edabit.com","id":"92","opcode":"1","channelId":"2","timestamp":"1652648842485"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"MvBYeGybFo4iEpWyp\\\"],\\\"id\\\":\\\"58\\\"}\"]","thisId":"93","channelHost":"edabit.com","id":"93","opcode":"1","channelId":"2","timestamp":"1652648842485"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"fvhabpSbe4vjWS9rP\\\"],\\\"id\\\":\\\"59\\\"}\"]","thisId":"94","channelHost":"edabit.com","id":"94","opcode":"1","channelId":"2","timestamp":"1652648842486"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"7nsM8Lm243axLE2ei\\\"],\\\"id\\\":\\\"60\\\"}\"]","thisId":"95","channelHost":"edabit.com","id":"95","opcode":"1","channelId":"2","timestamp":"1652648842486"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"dGK2bxcojgLzbEZjp\\\"],\\\"id\\\":\\\"61\\\"}\"]","thisId":"96","channelHost":"edabit.com","id":"96","opcode":"1","channelId":"2","timestamp":"1652648842487"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"hdT772EaY6ofm4ef4\\\"],\\\"id\\\":\\\"62\\\"}\"]","thisId":"97","channelHost":"edabit.com","id":"97","opcode":"1","channelId":"2","timestamp":"1652648842487"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"pybneyJ7Gmox2mYhM\\\"],\\\"id\\\":\\\"63\\\"}\"]","thisId":"98","channelHost":"edabit.com","id":"98","opcode":"1","channelId":"2","timestamp":"1652648842488"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"RvRwNMPXYjFcWQD2G\\\"],\\\"id\\\":\\\"64\\\"}\"]","thisId":"99","channelHost":"edabit.com","id":"99","opcode":"1","channelId":"2","timestamp":"1652648842488"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"vzhWSMR2A6wDyFK2o\\\"],\\\"id\\\":\\\"65\\\"}\"]","thisId":"100","channelHost":"edabit.com","id":"100","opcode":"1","channelId":"2","timestamp":"1652648842489"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"AWcHJdDbjMLT74FfX\\\"],\\\"id\\\":\\\"66\\\"}\"]","thisId":"101","channelHost":"edabit.com","id":"101","opcode":"1","channelId":"2","timestamp":"1652648842489"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"i8bDeBaQtZg6wDGYL\\\"],\\\"id\\\":\\\"67\\\"}\"]","thisId":"102","channelHost":"edabit.com","id":"102","opcode":"1","channelId":"2","timestamp":"1652648842489"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"vRBrS8n6M5fgLz28H\\\"],\\\"id\\\":\\\"68\\\"}\"]","thisId":"103","channelHost":"edabit.com","id":"103","opcode":"1","channelId":"2","timestamp":"1652648842490"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"GDWatbfCLg9H7uPMF\\\"],\\\"id\\\":\\\"70\\\"}\"]","thisId":"104","channelHost":"edabit.com","id":"104","opcode":"1","channelId":"2","timestamp":"1652648842520"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"9FXkWr6AAc3rFHnyL\\\"],\\\"id\\\":\\\"69\\\"}\"]","thisId":"105","channelHost":"edabit.com","id":"105","opcode":"1","channelId":"2","timestamp":"1652648842521"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"6KjJ7PB6iTqDbShyF\\\"],\\\"id\\\":\\\"73\\\"}\"]","thisId":"106","channelHost":"edabit.com","id":"106","opcode":"1","channelId":"2","timestamp":"1652648842521"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ZGzabS3xzpPcT55E6\\\"],\\\"id\\\":\\\"71\\\"}\"]","thisId":"107","channelHost":"edabit.com","id":"107","opcode":"1","channelId":"2","timestamp":"1652648842521"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"R5ZkenxiDWShEfFCy\\\"],\\\"id\\\":\\\"72\\\"}\"]","thisId":"108","channelHost":"edabit.com","id":"108","opcode":"1","channelId":"2","timestamp":"1652648842522"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"XMWWPeZYeYDfd25Ys\\\"],\\\"id\\\":\\\"74\\\"}\"]","thisId":"109","channelHost":"edabit.com","id":"109","opcode":"1","channelId":"2","timestamp":"1652648842522"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"pzLMEsMpbCLsPXqy2\\\"],\\\"id\\\":\\\"75\\\"}\"]","thisId":"110","channelHost":"edabit.com","id":"110","opcode":"1","channelId":"2","timestamp":"1652648842523"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"D6Lcut2s2gEzdCPvv\\\"],\\\"id\\\":\\\"76\\\"}\"]","thisId":"111","channelHost":"edabit.com","id":"111","opcode":"1","channelId":"2","timestamp":"1652648842525"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"yX3pRAE63JLW9Nz6D\\\"],\\\"id\\\":\\\"78\\\"}\"]","thisId":"112","channelHost":"edabit.com","id":"112","opcode":"1","channelId":"2","timestamp":"1652648842525"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"2fYkAMh9cGn5FpSZ9\\\"],\\\"id\\\":\\\"77\\\"}\"]","thisId":"113","channelHost":"edabit.com","id":"113","opcode":"1","channelId":"2","timestamp":"1652648842525"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"SQC525f4Wqn6F4LNC\\\"],\\\"id\\\":\\\"79\\\"}\"]","thisId":"114","channelHost":"edabit.com","id":"114","opcode":"1","channelId":"2","timestamp":"1652648842526"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"3m2Xtr3vwYgrmra7t\\\"],\\\"id\\\":\\\"80\\\"}\"]","thisId":"115","channelHost":"edabit.com","id":"115","opcode":"1","channelId":"2","timestamp":"1652648842526"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"JLdbbsyogfpFHmeLS\\\"],\\\"id\\\":\\\"81\\\"}\"]","thisId":"116","channelHost":"edabit.com","id":"116","opcode":"1","channelId":"2","timestamp":"1652648842526"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"AvebYmr8f3ECRWEWc\\\"],\\\"id\\\":\\\"82\\\"}\"]","thisId":"117","channelHost":"edabit.com","id":"117","opcode":"1","channelId":"2","timestamp":"1652648842527"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"rhxxyrHreLDm6qJLu\\\"],\\\"id\\\":\\\"83\\\"}\"]","thisId":"118","channelHost":"edabit.com","id":"118","opcode":"1","channelId":"2","timestamp":"1652648842527"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"YTGuwJBQjE4csZtLW\\\"],\\\"id\\\":\\\"84\\\"}\"]","thisId":"119","channelHost":"edabit.com","id":"119","opcode":"1","channelId":"2","timestamp":"1652648842528"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"3NTH452EBsJZ2ARsu\\\"],\\\"id\\\":\\\"85\\\"}\"]","thisId":"120","channelHost":"edabit.com","id":"120","opcode":"1","channelId":"2","timestamp":"1652648842545"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"LYAuwTojeNTyEiHgC\\\"],\\\"id\\\":\\\"86\\\"}\"]","thisId":"121","channelHost":"edabit.com","id":"121","opcode":"1","channelId":"2","timestamp":"1652648842545"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"qGrtkvLkAZg3oARbN\\\"],\\\"id\\\":\\\"87\\\"}\"]","thisId":"122","channelHost":"edabit.com","id":"122","opcode":"1","channelId":"2","timestamp":"1652648842546"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"qaKffo5AZo2RMcKyN\\\"],\\\"id\\\":\\\"88\\\"}\"]","thisId":"123","channelHost":"edabit.com","id":"123","opcode":"1","channelId":"2","timestamp":"1652648842546"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"32iWpCcttQSaGB7xS\\\"],\\\"id\\\":\\\"89\\\"}\"]","thisId":"124","channelHost":"edabit.com","id":"124","opcode":"1","channelId":"2","timestamp":"1652648842546"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"JawiuQQuLkhcRQ2Hh\\\"],\\\"id\\\":\\\"90\\\"}\"]","thisId":"125","channelHost":"edabit.com","id":"125","opcode":"1","channelId":"2","timestamp":"1652648842546"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"peRoJ3SoSYgsRkFzc\\\"],\\\"id\\\":\\\"91\\\"}\"]","thisId":"126","channelHost":"edabit.com","id":"126","opcode":"1","channelId":"2","timestamp":"1652648842546"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ZfZMvwTzcTTG2QRzA\\\"],\\\"id\\\":\\\"92\\\"}\"]","thisId":"127","channelHost":"edabit.com","id":"127","opcode":"1","channelId":"2","timestamp":"1652648842547"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"6ECfG93f3izMagjkP\\\"],\\\"id\\\":\\\"93\\\"}\"]","thisId":"128","channelHost":"edabit.com","id":"128","opcode":"1","channelId":"2","timestamp":"1652648842547"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Pqmoa94kK9JgHo8mr\\\"],\\\"id\\\":\\\"94\\\"}\"]","thisId":"129","channelHost":"edabit.com","id":"129","opcode":"1","channelId":"2","timestamp":"1652648842547"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"r7q9G5qadSpb8976G\\\"],\\\"id\\\":\\\"95\\\"}\"]","thisId":"130","channelHost":"edabit.com","id":"130","opcode":"1","channelId":"2","timestamp":"1652648842548"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"6DanWfqmfYun2sNBf\\\"],\\\"id\\\":\\\"96\\\"}\"]","thisId":"131","channelHost":"edabit.com","id":"131","opcode":"1","channelId":"2","timestamp":"1652648842548"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"YMLm3DpuZXHFDAnou\\\"],\\\"id\\\":\\\"97\\\"}\"]","thisId":"132","channelHost":"edabit.com","id":"132","opcode":"1","channelId":"2","timestamp":"1652648842550"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"govh9K8oJDzYgXAkY\\\"],\\\"id\\\":\\\"98\\\"}\"]","thisId":"133","channelHost":"edabit.com","id":"133","opcode":"1","channelId":"2","timestamp":"1652648842550"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"105","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"iXN3vagpLRSwxRYvx\\\"],\\\"id\\\":\\\"99\\\"}\"]","thisId":"134","channelHost":"edabit.com","id":"134","opcode":"1","channelId":"2","timestamp":"1652648842551"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Py6fFcpDMJNWyTxRD\\\"],\\\"id\\\":\\\"100\\\"}\"]","thisId":"135","channelHost":"edabit.com","id":"135","opcode":"1","channelId":"2","timestamp":"1652648842551"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"hAtARtyLzAHb2TEP5\\\"],\\\"id\\\":\\\"101\\\"}\"]","thisId":"136","channelHost":"edabit.com","id":"136","opcode":"1","channelId":"2","timestamp":"1652648842575"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"KGybTr2AxDsBtYTrY\\\"],\\\"id\\\":\\\"102\\\"}\"]","thisId":"137","channelHost":"edabit.com","id":"137","opcode":"1","channelId":"2","timestamp":"1652648842575"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"KsowZk9crJSRd9uko\\\"],\\\"id\\\":\\\"103\\\"}\"]","thisId":"138","channelHost":"edabit.com","id":"138","opcode":"1","channelId":"2","timestamp":"1652648842575"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"dWpuMsnxdJsBZqj8P\\\"],\\\"id\\\":\\\"104\\\"}\"]","thisId":"139","channelHost":"edabit.com","id":"139","opcode":"1","channelId":"2","timestamp":"1652648842575"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"oqMBTbwcxMDodEbWs\\\"],\\\"id\\\":\\\"105\\\"}\"]","thisId":"140","channelHost":"edabit.com","id":"140","opcode":"1","channelId":"2","timestamp":"1652648842576"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ZYfF9BDSSKeCEtkiC\\\"],\\\"id\\\":\\\"106\\\"}\"]","thisId":"141","channelHost":"edabit.com","id":"141","opcode":"1","channelId":"2","timestamp":"1652648842577"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"TfL74CMecNnmtABNg\\\"],\\\"id\\\":\\\"107\\\"}\"]","thisId":"142","channelHost":"edabit.com","id":"142","opcode":"1","channelId":"2","timestamp":"1652648842578"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"bGJX47L8tXXtzGRio\\\"],\\\"id\\\":\\\"108\\\"}\"]","thisId":"143","channelHost":"edabit.com","id":"143","opcode":"1","channelId":"2","timestamp":"1652648842578"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"rj5u8J5cn4CoEG3rY\\\"],\\\"id\\\":\\\"109\\\"}\"]","thisId":"144","channelHost":"edabit.com","id":"144","opcode":"1","channelId":"2","timestamp":"1652648842578"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"yNGGdbWigsLXwPMqY\\\"],\\\"id\\\":\\\"110\\\"}\"]","thisId":"145","channelHost":"edabit.com","id":"145","opcode":"1","channelId":"2","timestamp":"1652648842579"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"2gFHh4REnB2F2bb3E\\\"],\\\"id\\\":\\\"111\\\"}\"]","thisId":"146","channelHost":"edabit.com","id":"146","opcode":"1","channelId":"2","timestamp":"1652648842579"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"MhH32ydsoJKkjFjyz\\\"],\\\"id\\\":\\\"112\\\"}\"]","thisId":"147","channelHost":"edabit.com","id":"147","opcode":"1","channelId":"2","timestamp":"1652648842579"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"BMzs2RZDgFvyLWn29\\\"],\\\"id\\\":\\\"113\\\"}\"]","thisId":"148","channelHost":"edabit.com","id":"148","opcode":"1","channelId":"2","timestamp":"1652648842580"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"B5u9LiN7cZHLkJzXa\\\"],\\\"id\\\":\\\"114\\\"}\"]","thisId":"149","channelHost":"edabit.com","id":"149","opcode":"1","channelId":"2","timestamp":"1652648842580"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"eBQoq8LDPL6dM3Riz\\\"],\\\"id\\\":\\\"115\\\"}\"]","thisId":"150","channelHost":"edabit.com","id":"150","opcode":"1","channelId":"2","timestamp":"1652648842580"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Mr48aLdKMXpGrdTXK\\\"],\\\"id\\\":\\\"116\\\"}\"]","thisId":"151","channelHost":"edabit.com","id":"151","opcode":"1","channelId":"2","timestamp":"1652648842581"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"oseKrpJdL8knnm4NT\\\"],\\\"id\\\":\\\"117\\\"}\"]","thisId":"152","channelHost":"edabit.com","id":"152","opcode":"1","channelId":"2","timestamp":"1652648842606"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"EhGqjXhY9zS7MHjWd\\\"],\\\"id\\\":\\\"119\\\"}\"]","thisId":"153","channelHost":"edabit.com","id":"153","opcode":"1","channelId":"2","timestamp":"1652648842606"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ZLbP9bodP2yxgcuz4\\\"],\\\"id\\\":\\\"120\\\"}\"]","thisId":"154","channelHost":"edabit.com","id":"154","opcode":"1","channelId":"2","timestamp":"1652648842606"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"nMbE2g7MB5yFcTzoB\\\"],\\\"id\\\":\\\"118\\\"}\"]","thisId":"155","channelHost":"edabit.com","id":"155","opcode":"1","channelId":"2","timestamp":"1652648842606"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"n22eru9bm8LMcBdYt\\\"],\\\"id\\\":\\\"121\\\"}\"]","thisId":"156","channelHost":"edabit.com","id":"156","opcode":"1","channelId":"2","timestamp":"1652648842606"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"3NowS55XTdfWtKh9n\\\"],\\\"id\\\":\\\"122\\\"}\"]","thisId":"157","channelHost":"edabit.com","id":"157","opcode":"1","channelId":"2","timestamp":"1652648842612"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"HDWqr2HdC3dwHYeBx\\\"],\\\"id\\\":\\\"123\\\"}\"]","thisId":"158","channelHost":"edabit.com","id":"158","opcode":"1","channelId":"2","timestamp":"1652648842613"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"YG5hYruH8TfqeZ3dc\\\"],\\\"id\\\":\\\"124\\\"}\"]","thisId":"159","channelHost":"edabit.com","id":"159","opcode":"1","channelId":"2","timestamp":"1652648842613"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"mkAsw6owW6F7h2sfy\\\"],\\\"id\\\":\\\"125\\\"}\"]","thisId":"160","channelHost":"edabit.com","id":"160","opcode":"1","channelId":"2","timestamp":"1652648842613"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"nuKniCXYbaCfrmjgX\\\"],\\\"id\\\":\\\"126\\\"}\"]","thisId":"161","channelHost":"edabit.com","id":"161","opcode":"1","channelId":"2","timestamp":"1652648842614"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"fDE9uvkfAXgBN6mWZ\\\"],\\\"id\\\":\\\"127\\\"}\"]","thisId":"162","channelHost":"edabit.com","id":"162","opcode":"1","channelId":"2","timestamp":"1652648842614"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"kPHNYy2E6EijPLDja\\\"],\\\"id\\\":\\\"128\\\"}\"]","thisId":"163","channelHost":"edabit.com","id":"163","opcode":"1","channelId":"2","timestamp":"1652648842614"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"bvSnDWbJtMPimpsFT\\\"],\\\"id\\\":\\\"129\\\"}\"]","thisId":"164","channelHost":"edabit.com","id":"164","opcode":"1","channelId":"2","timestamp":"1652648842615"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Pbbu6wDPnqbbzXwTG\\\"],\\\"id\\\":\\\"130\\\"}\"]","thisId":"165","channelHost":"edabit.com","id":"165","opcode":"1","channelId":"2","timestamp":"1652648842615"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"wFPAkqT72h4WGEuYN\\\"],\\\"id\\\":\\\"131\\\"}\"]","thisId":"166","channelHost":"edabit.com","id":"166","opcode":"1","channelId":"2","timestamp":"1652648842617"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"nn65XKhviizSgwW2k\\\"],\\\"id\\\":\\\"132\\\"}\"]","thisId":"167","channelHost":"edabit.com","id":"167","opcode":"1","channelId":"2","timestamp":"1652648842619"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"RXpy6CSczRnuE7r2q\\\"],\\\"id\\\":\\\"135\\\"}\"]","thisId":"168","channelHost":"edabit.com","id":"168","opcode":"1","channelId":"2","timestamp":"1652648842633"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"wmXdzBSsoT4QvEY3S\\\"],\\\"id\\\":\\\"136\\\"}\"]","thisId":"169","channelHost":"edabit.com","id":"169","opcode":"1","channelId":"2","timestamp":"1652648842633"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"42TaSuEe8tzepCK75\\\"],\\\"id\\\":\\\"133\\\"}\"]","thisId":"170","channelHost":"edabit.com","id":"170","opcode":"1","channelId":"2","timestamp":"1652648842633"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"EzH6jaQPGTR6e8Wfg\\\"],\\\"id\\\":\\\"137\\\"}\"]","thisId":"171","channelHost":"edabit.com","id":"171","opcode":"1","channelId":"2","timestamp":"1652648842633"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"bSNQDQpy3EPMTFogQ\\\"],\\\"id\\\":\\\"134\\\"}\"]","thisId":"172","channelHost":"edabit.com","id":"172","opcode":"1","channelId":"2","timestamp":"1652648842633"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"wWRKKJNppJXwocprL\\\"],\\\"id\\\":\\\"138\\\"}\"]","thisId":"173","channelHost":"edabit.com","id":"173","opcode":"1","channelId":"2","timestamp":"1652648842633"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"72yxSzSevYhvY5Dbu\\\"],\\\"id\\\":\\\"139\\\"}\"]","thisId":"174","channelHost":"edabit.com","id":"174","opcode":"1","channelId":"2","timestamp":"1652648842633"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ocqRdAXXniLS4ea3h\\\"],\\\"id\\\":\\\"140\\\"}\"]","thisId":"175","channelHost":"edabit.com","id":"175","opcode":"1","channelId":"2","timestamp":"1652648842634"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"7JBbNzmBuBEX7KPoH\\\"],\\\"id\\\":\\\"141\\\"}\"]","thisId":"176","channelHost":"edabit.com","id":"176","opcode":"1","channelId":"2","timestamp":"1652648842634"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"RwrKgxmoMbm5NDFxW\\\"],\\\"id\\\":\\\"142\\\"}\"]","thisId":"177","channelHost":"edabit.com","id":"177","opcode":"1","channelId":"2","timestamp":"1652648842636"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"aNty236u5wtfsBayy\\\"],\\\"id\\\":\\\"143\\\"}\"]","thisId":"178","channelHost":"edabit.com","id":"178","opcode":"1","channelId":"2","timestamp":"1652648842637"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"kADGssuyM6vTEwS8p\\\"],\\\"id\\\":\\\"144\\\"}\"]","thisId":"179","channelHost":"edabit.com","id":"179","opcode":"1","channelId":"2","timestamp":"1652648842637"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"mftGnKMaNpZhBeNBF\\\"],\\\"id\\\":\\\"145\\\"}\"]","thisId":"180","channelHost":"edabit.com","id":"180","opcode":"1","channelId":"2","timestamp":"1652648842637"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"5hDW8NdjYLR4ncuMW\\\"],\\\"id\\\":\\\"146\\\"}\"]","thisId":"181","channelHost":"edabit.com","id":"181","opcode":"1","channelId":"2","timestamp":"1652648842638"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"RLaRiNL6H7P2viWgk\\\"],\\\"id\\\":\\\"147\\\"}\"]","thisId":"182","channelHost":"edabit.com","id":"182","opcode":"1","channelId":"2","timestamp":"1652648842638"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ztcwYfydBxRGQAKPk\\\"],\\\"id\\\":\\\"148\\\"}\"]","thisId":"183","channelHost":"edabit.com","id":"183","opcode":"1","channelId":"2","timestamp":"1652648842639"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"rq4AeNEFm7uBsoDDn\\\"],\\\"id\\\":\\\"149\\\"}\"]","thisId":"184","channelHost":"edabit.com","id":"184","opcode":"1","channelId":"2","timestamp":"1652648842659"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"3Tn5HZgBzdTHPp9zT\\\"],\\\"id\\\":\\\"150\\\"}\"]","thisId":"185","channelHost":"edabit.com","id":"185","opcode":"1","channelId":"2","timestamp":"1652648842659"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"WejGaR5mK4eECuDLZ\\\"],\\\"id\\\":\\\"151\\\"}\"]","thisId":"186","channelHost":"edabit.com","id":"186","opcode":"1","channelId":"2","timestamp":"1652648842659"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"kTY7T75TP5qDgHYab\\\"],\\\"id\\\":\\\"152\\\"}\"]","thisId":"187","channelHost":"edabit.com","id":"187","opcode":"1","channelId":"2","timestamp":"1652648842659"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"F3ssniE3KnCpDFJqP\\\"],\\\"id\\\":\\\"153\\\"}\"]","thisId":"188","channelHost":"edabit.com","id":"188","opcode":"1","channelId":"2","timestamp":"1652648842659"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"5yCvczJJbq68Pavky\\\"],\\\"id\\\":\\\"154\\\"}\"]","thisId":"189","channelHost":"edabit.com","id":"189","opcode":"1","channelId":"2","timestamp":"1652648842660"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"utCRd99E6E3FRS4Rz\\\"],\\\"id\\\":\\\"155\\\"}\"]","thisId":"190","channelHost":"edabit.com","id":"190","opcode":"1","channelId":"2","timestamp":"1652648842661"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"vprfA75LFy9hcHBXY\\\"],\\\"id\\\":\\\"156\\\"}\"]","thisId":"191","channelHost":"edabit.com","id":"191","opcode":"1","channelId":"2","timestamp":"1652648842661"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"baHpa6BQTYyrWL35e\\\"],\\\"id\\\":\\\"157\\\"}\"]","thisId":"192","channelHost":"edabit.com","id":"192","opcode":"1","channelId":"2","timestamp":"1652648842661"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"8HB8AB873TYGukT6J\\\"],\\\"id\\\":\\\"158\\\"}\"]","thisId":"193","channelHost":"edabit.com","id":"193","opcode":"1","channelId":"2","timestamp":"1652648842661"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"s8q6rQPs37zjkdya2\\\"],\\\"id\\\":\\\"159\\\"}\"]","thisId":"194","channelHost":"edabit.com","id":"194","opcode":"1","channelId":"2","timestamp":"1652648842662"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Hu3HxFH3Gnv2CwCeH\\\"],\\\"id\\\":\\\"160\\\"}\"]","thisId":"195","channelHost":"edabit.com","id":"195","opcode":"1","channelId":"2","timestamp":"1652648842662"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"fLc7y5ke7ZLkZk9sv\\\"],\\\"id\\\":\\\"161\\\"}\"]","thisId":"196","channelHost":"edabit.com","id":"196","opcode":"1","channelId":"2","timestamp":"1652648842664"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"GEreBiJFJaTMb5wye\\\"],\\\"id\\\":\\\"162\\\"}\"]","thisId":"197","channelHost":"edabit.com","id":"197","opcode":"1","channelId":"2","timestamp":"1652648842665"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"odJPfYRD3kSpE45Jf\\\"],\\\"id\\\":\\\"163\\\"}\"]","thisId":"198","channelHost":"edabit.com","id":"198","opcode":"1","channelId":"2","timestamp":"1652648842665"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"vKpGt4ufSKmEJ3Xjd\\\"],\\\"id\\\":\\\"164\\\"}\"]","thisId":"199","channelHost":"edabit.com","id":"199","opcode":"1","channelId":"2","timestamp":"1652648842665"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"5LnycSd2xT4uwZCpi\\\"],\\\"id\\\":\\\"165\\\"}\"]","thisId":"200","channelHost":"edabit.com","id":"200","opcode":"1","channelId":"2","timestamp":"1652648842686"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"PZnwXraqBPYv7w4Sm\\\"],\\\"id\\\":\\\"166\\\"}\"]","thisId":"201","channelHost":"edabit.com","id":"201","opcode":"1","channelId":"2","timestamp":"1652648842686"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"4kEHkvobTA4i6AQRE\\\"],\\\"id\\\":\\\"167\\\"}\"]","thisId":"202","channelHost":"edabit.com","id":"202","opcode":"1","channelId":"2","timestamp":"1652648842686"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"gyfsGx7KrGLscxFrD\\\"],\\\"id\\\":\\\"168\\\"}\"]","thisId":"203","channelHost":"edabit.com","id":"203","opcode":"1","channelId":"2","timestamp":"1652648842686"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"aWzxPLibBLJgn8AbZ\\\"],\\\"id\\\":\\\"169\\\"}\"]","thisId":"204","channelHost":"edabit.com","id":"204","opcode":"1","channelId":"2","timestamp":"1652648842686"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"8WBpaPzLP7piuHNeR\\\"],\\\"id\\\":\\\"170\\\"}\"]","thisId":"205","channelHost":"edabit.com","id":"205","opcode":"1","channelId":"2","timestamp":"1652648842690"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Wci9YChXWRj6JBeFP\\\"],\\\"id\\\":\\\"171\\\"}\"]","thisId":"206","channelHost":"edabit.com","id":"206","opcode":"1","channelId":"2","timestamp":"1652648842692"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"yzfiD6ZXt84qL3v2e\\\"],\\\"id\\\":\\\"172\\\"}\"]","thisId":"207","channelHost":"edabit.com","id":"207","opcode":"1","channelId":"2","timestamp":"1652648842692"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"rYD9NTBmNhaPM6wx2\\\"],\\\"id\\\":\\\"173\\\"}\"]","thisId":"208","channelHost":"edabit.com","id":"208","opcode":"1","channelId":"2","timestamp":"1652648842693"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"QCgoxbd32BqFr6AY7\\\"],\\\"id\\\":\\\"174\\\"}\"]","thisId":"209","channelHost":"edabit.com","id":"209","opcode":"1","channelId":"2","timestamp":"1652648842693"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"jfquehNLzpXW5ZQu5\\\"],\\\"id\\\":\\\"175\\\"}\"]","thisId":"210","channelHost":"edabit.com","id":"210","opcode":"1","channelId":"2","timestamp":"1652648842693"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"hymPkXdhmDQLe87QT\\\"],\\\"id\\\":\\\"176\\\"}\"]","thisId":"211","channelHost":"edabit.com","id":"211","opcode":"1","channelId":"2","timestamp":"1652648842694"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"nfc7H9CQFqJp54uEh\\\"],\\\"id\\\":\\\"177\\\"}\"]","thisId":"212","channelHost":"edabit.com","id":"212","opcode":"1","channelId":"2","timestamp":"1652648842694"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"5gPCp7v7iDWZvb4YQ\\\"],\\\"id\\\":\\\"178\\\"}\"]","thisId":"213","channelHost":"edabit.com","id":"213","opcode":"1","channelId":"2","timestamp":"1652648842695"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"R3PnRquBPADEqDxZg\\\"],\\\"id\\\":\\\"179\\\"}\"]","thisId":"214","channelHost":"edabit.com","id":"214","opcode":"1","channelId":"2","timestamp":"1652648842695"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"akHQKSkHT26TuA7Ka\\\"],\\\"id\\\":\\\"180\\\"}\"]","thisId":"215","channelHost":"edabit.com","id":"215","opcode":"1","channelId":"2","timestamp":"1652648842695"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"sPz2LcPZyAiBHRgwX\\\"],\\\"id\\\":\\\"181\\\"}\"]","thisId":"216","channelHost":"edabit.com","id":"216","opcode":"1","channelId":"2","timestamp":"1652648842716"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"y4QqLgKXXxqZnemAm\\\"],\\\"id\\\":\\\"183\\\"}\"]","thisId":"217","channelHost":"edabit.com","id":"217","opcode":"1","channelId":"2","timestamp":"1652648842716"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"H2MT5bAZ8Guj52zxK\\\"],\\\"id\\\":\\\"182\\\"}\"]","thisId":"218","channelHost":"edabit.com","id":"218","opcode":"1","channelId":"2","timestamp":"1652648842716"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"GBKphScsmDi9ek3ra\\\"],\\\"id\\\":\\\"184\\\"}\"]","thisId":"219","channelHost":"edabit.com","id":"219","opcode":"1","channelId":"2","timestamp":"1652648842716"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"bkFqwEP5Gej23didA\\\"],\\\"id\\\":\\\"185\\\"}\"]","thisId":"220","channelHost":"edabit.com","id":"220","opcode":"1","channelId":"2","timestamp":"1652648842716"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"WM5s7vuHnXdcKCEjS\\\"],\\\"id\\\":\\\"186\\\"}\"]","thisId":"221","channelHost":"edabit.com","id":"221","opcode":"1","channelId":"2","timestamp":"1652648842720"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"pbK6j5Try2TuDeSwK\\\"],\\\"id\\\":\\\"187\\\"}\"]","thisId":"222","channelHost":"edabit.com","id":"222","opcode":"1","channelId":"2","timestamp":"1652648842721"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"2tXKcSr4fZKMQToui\\\"],\\\"id\\\":\\\"188\\\"}\"]","thisId":"223","channelHost":"edabit.com","id":"223","opcode":"1","channelId":"2","timestamp":"1652648842721"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"oMCKfdMqgt9kxqA2M\\\"],\\\"id\\\":\\\"189\\\"}\"]","thisId":"224","channelHost":"edabit.com","id":"224","opcode":"1","channelId":"2","timestamp":"1652648842722"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"FRtmuYD26pcQWFR7k\\\"],\\\"id\\\":\\\"190\\\"}\"]","thisId":"225","channelHost":"edabit.com","id":"225","opcode":"1","channelId":"2","timestamp":"1652648842722"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"KeX3ZcaPo3sEqXTYb\\\"],\\\"id\\\":\\\"191\\\"}\"]","thisId":"226","channelHost":"edabit.com","id":"226","opcode":"1","channelId":"2","timestamp":"1652648842722"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"SvptD77rYQJgjDvZY\\\"],\\\"id\\\":\\\"192\\\"}\"]","thisId":"227","channelHost":"edabit.com","id":"227","opcode":"1","channelId":"2","timestamp":"1652648842723"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"8hk27ha9CtqCQsYP8\\\"],\\\"id\\\":\\\"193\\\"}\"]","thisId":"228","channelHost":"edabit.com","id":"228","opcode":"1","channelId":"2","timestamp":"1652648842723"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"MwYW3sRdZxno5hXAF\\\"],\\\"id\\\":\\\"194\\\"}\"]","thisId":"229","channelHost":"edabit.com","id":"229","opcode":"1","channelId":"2","timestamp":"1652648842724"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"EaWY5d2pYBckrkAnS\\\"],\\\"id\\\":\\\"195\\\"}\"]","thisId":"230","channelHost":"edabit.com","id":"230","opcode":"1","channelId":"2","timestamp":"1652648842724"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"zFccarRuia5zq4rhP\\\"],\\\"id\\\":\\\"196\\\"}\"]","thisId":"231","channelHost":"edabit.com","id":"231","opcode":"1","channelId":"2","timestamp":"1652648842725"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"46","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"9\\\"]}\"]","thisId":"232","channelHost":"edabit.com","id":"232","opcode":"1","channelId":"2","timestamp":"1652648842726"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"146749","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"9\\\",\\\"result\\\":{\\\"_id\\\":\\\"5gpukjfi5rAH8MvKF\\\",\\\"author\\\":\\\"Erik Jacob\\\",\\\"authorId\\\":\\\"62Q2HcfLE6SGphZkT\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static boolean isSameNum(int x, int y) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.334081436357807,\\\"familyId\\\":\\\"sWrFsTaDceTjEz93R\\\",\\\"instructions\\\":\\\"Create a function that returns `true` when `x` is equal to `y`; otherwise return `false`.\\\\n\\\\n### Examples\\\\n```\\\\nisSameNum(4, 8) ➞ false\\\\n\\\\nisSameNum(2, 2) ➞  true\\\\n\\\\nisSameNum(42, 32) ➞  false\\\\n```\\\\n\\\\n### Notes\\\\nDon't forget to `return` the result.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ProgramTest {\\\\n\\\\n    @Test\\\\n    public void test1(){\\\\n        assertEquals(true, Program.isSameNum(2,2));\\\\n    }\\\\n\\\\t @Test\\\\n    public void test2(){\\\\n        assertEquals(false, Program.isSameNum(0, 6));\\\\n    }\\\\n\\\\t @Test\\\\n    public void test3(){\\\\n        assertEquals(false, Program.isSameNum(4","thisId":"233","channelHost":"edabit.com","id":"233","opcode":"1","channelId":"2","timestamp":"1652648842742"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"paaguQWznz2cPNCiA\\\"],\\\"id\\\":\\\"197\\\"}\"]","thisId":"234","channelHost":"edabit.com","id":"234","opcode":"1","channelId":"2","timestamp":"1652648842747"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"tQ26d2JJkxpjszfsk\\\"],\\\"id\\\":\\\"198\\\"}\"]","thisId":"235","channelHost":"edabit.com","id":"235","opcode":"1","channelId":"2","timestamp":"1652648842747"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ffhxMdssQfq5e9NkE\\\"],\\\"id\\\":\\\"199\\\"}\"]","thisId":"236","channelHost":"edabit.com","id":"236","opcode":"1","channelId":"2","timestamp":"1652648842747"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"yk7GqGcCpFgQrk8fH\\\"],\\\"id\\\":\\\"200\\\"}\"]","thisId":"237","channelHost":"edabit.com","id":"237","opcode":"1","channelId":"2","timestamp":"1652648842747"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"pKmR5HRabYPkdGunz\\\"],\\\"id\\\":\\\"201\\\"}\"]","thisId":"238","channelHost":"edabit.com","id":"238","opcode":"1","channelId":"2","timestamp":"1652648842747"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"kQZH2EDsn7LYvXk9S\\\"],\\\"id\\\":\\\"202\\\"}\"]","thisId":"239","channelHost":"edabit.com","id":"239","opcode":"1","channelId":"2","timestamp":"1652648842759"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"D7PZ7rcKGRiCvcm7C\\\"],\\\"id\\\":\\\"203\\\"}\"]","thisId":"240","channelHost":"edabit.com","id":"240","opcode":"1","channelId":"2","timestamp":"1652648842765"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"P4sy69B7cqggNmtmm\\\"],\\\"id\\\":\\\"204\\\"}\"]","thisId":"241","channelHost":"edabit.com","id":"241","opcode":"1","channelId":"2","timestamp":"1652648842765"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"J4Yop3GjeZELWeoqT\\\"],\\\"id\\\":\\\"205\\\"}\"]","thisId":"242","channelHost":"edabit.com","id":"242","opcode":"1","channelId":"2","timestamp":"1652648842766"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"iW7rtor54mbFQ2RrZ\\\"],\\\"id\\\":\\\"206\\\"}\"]","thisId":"243","channelHost":"edabit.com","id":"243","opcode":"1","channelId":"2","timestamp":"1652648842766"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"NrMGhrarTfpYSbr84\\\"],\\\"id\\\":\\\"207\\\"}\"]","thisId":"244","channelHost":"edabit.com","id":"244","opcode":"1","channelId":"2","timestamp":"1652648842766"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"s8RHRY9hfmvYMuaeC\\\"],\\\"id\\\":\\\"208\\\"}\"]","thisId":"245","channelHost":"edabit.com","id":"245","opcode":"1","channelId":"2","timestamp":"1652648842768"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"TM5f33Mpu52m2jcat\\\"],\\\"id\\\":\\\"209\\\"}\"]","thisId":"246","channelHost":"edabit.com","id":"246","opcode":"1","channelId":"2","timestamp":"1652648842769"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"YmeiRhzaiR3MCPBiT\\\"],\\\"id\\\":\\\"210\\\"}\"]","thisId":"247","channelHost":"edabit.com","id":"247","opcode":"1","channelId":"2","timestamp":"1652648842770"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ryEdPW2eqyngyWayy\\\"],\\\"id\\\":\\\"211\\\"}\"]","thisId":"248","channelHost":"edabit.com","id":"248","opcode":"1","channelId":"2","timestamp":"1652648842771"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Xf7PqJnzukWe2WxqB\\\"],\\\"id\\\":\\\"212\\\"}\"]","thisId":"249","channelHost":"edabit.com","id":"249","opcode":"1","channelId":"2","timestamp":"1652648842771"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"HDk4PC9w6KPS3X25W\\\"],\\\"id\\\":\\\"213\\\"}\"]","thisId":"250","channelHost":"edabit.com","id":"250","opcode":"1","channelId":"2","timestamp":"1652648842777"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"2eWypgBrG9yerbjFd\\\"],\\\"id\\\":\\\"214\\\"}\"]","thisId":"251","channelHost":"edabit.com","id":"251","opcode":"1","channelId":"2","timestamp":"1652648842777"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"CDuD3xGtWRhnFzAP2\\\"],\\\"id\\\":\\\"215\\\"}\"]","thisId":"252","channelHost":"edabit.com","id":"252","opcode":"1","channelId":"2","timestamp":"1652648842777"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"hgHMhpJjyFxYJMMXp\\\"],\\\"id\\\":\\\"217\\\"}\"]","thisId":"253","channelHost":"edabit.com","id":"253","opcode":"1","channelId":"2","timestamp":"1652648842777"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"M8ZEHjhwCDCjYeY3n\\\"],\\\"id\\\":\\\"216\\\"}\"]","thisId":"254","channelHost":"edabit.com","id":"254","opcode":"1","channelId":"2","timestamp":"1652648842777"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"jnrPtFbstb2cB3Raj\\\"],\\\"id\\\":\\\"218\\\"}\"]","thisId":"255","channelHost":"edabit.com","id":"255","opcode":"1","channelId":"2","timestamp":"1652648842777"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"MsJzAHPmmmcwF4iCr\\\"],\\\"id\\\":\\\"219\\\"}\"]","thisId":"256","channelHost":"edabit.com","id":"256","opcode":"1","channelId":"2","timestamp":"1652648842777"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"kzALnF5nT9YCbGMMm\\\"],\\\"id\\\":\\\"220\\\"}\"]","thisId":"257","channelHost":"edabit.com","id":"257","opcode":"1","channelId":"2","timestamp":"1652648842778"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"xkD7RBBDiWuDHTiXE\\\"],\\\"id\\\":\\\"221\\\"}\"]","thisId":"258","channelHost":"edabit.com","id":"258","opcode":"1","channelId":"2","timestamp":"1652648842778"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"XsJnE47kiTt39t3da\\\"],\\\"id\\\":\\\"222\\\"}\"]","thisId":"259","channelHost":"edabit.com","id":"259","opcode":"1","channelId":"2","timestamp":"1652648842778"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"8s2jBHWKXCrT5oQ63\\\"],\\\"id\\\":\\\"223\\\"}\"]","thisId":"260","channelHost":"edabit.com","id":"260","opcode":"1","channelId":"2","timestamp":"1652648842779"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Jr7ueGQMEthBFYpB6\\\"],\\\"id\\\":\\\"224\\\"}\"]","thisId":"261","channelHost":"edabit.com","id":"261","opcode":"1","channelId":"2","timestamp":"1652648842779"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"jwXx478haGbZpRCWQ\\\"],\\\"id\\\":\\\"225\\\"}\"]","thisId":"262","channelHost":"edabit.com","id":"262","opcode":"1","channelId":"2","timestamp":"1652648842779"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"BZzAm9KXuB993p35r\\\"],\\\"id\\\":\\\"226\\\"}\"]","thisId":"263","channelHost":"edabit.com","id":"263","opcode":"1","channelId":"2","timestamp":"1652648842780"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"zgBjnxQw9MHTBHLED\\\"],\\\"id\\\":\\\"227\\\"}\"]","thisId":"264","channelHost":"edabit.com","id":"264","opcode":"1","channelId":"2","timestamp":"1652648842782"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"6gDTBRgZKpotCsgib\\\"],\\\"id\\\":\\\"228\\\"}\"]","thisId":"265","channelHost":"edabit.com","id":"265","opcode":"1","channelId":"2","timestamp":"1652648842784"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"H4smHFuL5wn58imFK\\\"],\\\"id\\\":\\\"229\\\"}\"]","thisId":"266","channelHost":"edabit.com","id":"266","opcode":"1","channelId":"2","timestamp":"1652648842807"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"tgcyRZECD5tqHvTWi\\\"],\\\"id\\\":\\\"230\\\"}\"]","thisId":"267","channelHost":"edabit.com","id":"267","opcode":"1","channelId":"2","timestamp":"1652648842807"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"zr7BBJbeYikNBN2hf\\\"],\\\"id\\\":\\\"231\\\"}\"]","thisId":"268","channelHost":"edabit.com","id":"268","opcode":"1","channelId":"2","timestamp":"1652648842807"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"LmiWWX2kdWn2Z5aZv\\\"],\\\"id\\\":\\\"232\\\"}\"]","thisId":"269","channelHost":"edabit.com","id":"269","opcode":"1","channelId":"2","timestamp":"1652648842807"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"SmKPaHy5uY2gMk9na\\\"],\\\"id\\\":\\\"233\\\"}\"]","thisId":"270","channelHost":"edabit.com","id":"270","opcode":"1","channelId":"2","timestamp":"1652648842807"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"yRFLwNAw5wJkHsNgS\\\"],\\\"id\\\":\\\"234\\\"}\"]","thisId":"271","channelHost":"edabit.com","id":"271","opcode":"1","channelId":"2","timestamp":"1652648842811"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"jwzMsyo2tbgn2KbGQ\\\"],\\\"id\\\":\\\"235\\\"}\"]","thisId":"272","channelHost":"edabit.com","id":"272","opcode":"1","channelId":"2","timestamp":"1652648842812"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"n6bgfrTFfNZt4yWkJ\\\"],\\\"id\\\":\\\"236\\\"}\"]","thisId":"273","channelHost":"edabit.com","id":"273","opcode":"1","channelId":"2","timestamp":"1652648842812"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"HtruskPio7ricRvuG\\\"],\\\"id\\\":\\\"237\\\"}\"]","thisId":"274","channelHost":"edabit.com","id":"274","opcode":"1","channelId":"2","timestamp":"1652648842813"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"cwLnTvxpBX5espEgs\\\"],\\\"id\\\":\\\"238\\\"}\"]","thisId":"275","channelHost":"edabit.com","id":"275","opcode":"1","channelId":"2","timestamp":"1652648842813"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"8ZFob4Juk8jzHMAHA\\\"],\\\"id\\\":\\\"239\\\"}\"]","thisId":"276","channelHost":"edabit.com","id":"276","opcode":"1","channelId":"2","timestamp":"1652648842814"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"bL2E8p5DGWSNmEtAE\\\"],\\\"id\\\":\\\"240\\\"}\"]","thisId":"277","channelHost":"edabit.com","id":"277","opcode":"1","channelId":"2","timestamp":"1652648842814"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"2zKtCWQM2rSxMQqLX\\\"],\\\"id\\\":\\\"241\\\"}\"]","thisId":"278","channelHost":"edabit.com","id":"278","opcode":"1","channelId":"2","timestamp":"1652648842815"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"t3NThQjrcbjhiF5zt\\\"],\\\"id\\\":\\\"242\\\"}\"]","thisId":"279","channelHost":"edabit.com","id":"279","opcode":"1","channelId":"2","timestamp":"1652648842816"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"oB67n674gwdTi33P4\\\"],\\\"id\\\":\\\"243\\\"}\"]","thisId":"280","channelHost":"edabit.com","id":"280","opcode":"1","channelId":"2","timestamp":"1652648842817"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"RSbXRKoom6ED9Xe9i\\\"],\\\"id\\\":\\\"244\\\"}\"]","thisId":"281","channelHost":"edabit.com","id":"281","opcode":"1","channelId":"2","timestamp":"1652648842817"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"7LAsTPRvRH8sX6vD5\\\"],\\\"id\\\":\\\"245\\\"}\"]","thisId":"282","channelHost":"edabit.com","id":"282","opcode":"1","channelId":"2","timestamp":"1652648842836"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"iJSAYBTLZvLuqAnN4\\\"],\\\"id\\\":\\\"247\\\"}\"]","thisId":"283","channelHost":"edabit.com","id":"283","opcode":"1","channelId":"2","timestamp":"1652648842837"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"gDikYnoenX7rKFMQm\\\"],\\\"id\\\":\\\"248\\\"}\"]","thisId":"284","channelHost":"edabit.com","id":"284","opcode":"1","channelId":"2","timestamp":"1652648842837"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"CCRmCv3huDnBsqmR7\\\"],\\\"id\\\":\\\"246\\\"}\"]","thisId":"285","channelHost":"edabit.com","id":"285","opcode":"1","channelId":"2","timestamp":"1652648842837"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"mvHZK6Dy3ZF8EFoG3\\\"],\\\"id\\\":\\\"249\\\"}\"]","thisId":"286","channelHost":"edabit.com","id":"286","opcode":"1","channelId":"2","timestamp":"1652648842837"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ePj2zup56kZrRbhDX\\\"],\\\"id\\\":\\\"250\\\"}\"]","thisId":"287","channelHost":"edabit.com","id":"287","opcode":"1","channelId":"2","timestamp":"1652648842845"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"mDM9eJXqjL7kJc3hh\\\"],\\\"id\\\":\\\"251\\\"}\"]","thisId":"288","channelHost":"edabit.com","id":"288","opcode":"1","channelId":"2","timestamp":"1652648842846"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"XD6bQFpCZWiAMPanQ\\\"],\\\"id\\\":\\\"252\\\"}\"]","thisId":"289","channelHost":"edabit.com","id":"289","opcode":"1","channelId":"2","timestamp":"1652648842846"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"YjeGKZwXsdCo3sr7a\\\"],\\\"id\\\":\\\"253\\\"}\"]","thisId":"290","channelHost":"edabit.com","id":"290","opcode":"1","channelId":"2","timestamp":"1652648842847"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"xH7uvX2MoH8e85aYS\\\"],\\\"id\\\":\\\"254\\\"}\"]","thisId":"291","channelHost":"edabit.com","id":"291","opcode":"1","channelId":"2","timestamp":"1652648842848"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"gzjQoZY6mYRBwDv2Q\\\"],\\\"id\\\":\\\"255\\\"}\"]","thisId":"292","channelHost":"edabit.com","id":"292","opcode":"1","channelId":"2","timestamp":"1652648842848"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"DtTdXqwFQYTf6ZE3J\\\"],\\\"id\\\":\\\"256\\\"}\"]","thisId":"293","channelHost":"edabit.com","id":"293","opcode":"1","channelId":"2","timestamp":"1652648842848"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"AYQPBDjDbrrvJtjjc\\\"],\\\"id\\\":\\\"257\\\"}\"]","thisId":"294","channelHost":"edabit.com","id":"294","opcode":"1","channelId":"2","timestamp":"1652648842849"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ENNmwseEab73TMoBc\\\"],\\\"id\\\":\\\"258\\\"}\"]","thisId":"295","channelHost":"edabit.com","id":"295","opcode":"1","channelId":"2","timestamp":"1652648842849"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"phaa2KFqeiM9hZeSK\\\"],\\\"id\\\":\\\"259\\\"}\"]","thisId":"296","channelHost":"edabit.com","id":"296","opcode":"1","channelId":"2","timestamp":"1652648842849"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"N3ZBDe99aq8Piar8n\\\"],\\\"id\\\":\\\"260\\\"}\"]","thisId":"297","channelHost":"edabit.com","id":"297","opcode":"1","channelId":"2","timestamp":"1652648842850"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"LJh54oryEc3tkagzD\\\"],\\\"id\\\":\\\"261\\\"}\"]","thisId":"298","channelHost":"edabit.com","id":"298","opcode":"1","channelId":"2","timestamp":"1652648842869"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"FHJ7SPdj7hChTS5LW\\\"],\\\"id\\\":\\\"264\\\"}\"]","thisId":"299","channelHost":"edabit.com","id":"299","opcode":"1","channelId":"2","timestamp":"1652648842870"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"EmRPehwiJFk6rf2iD\\\"],\\\"id\\\":\\\"262\\\"}\"]","thisId":"300","channelHost":"edabit.com","id":"300","opcode":"1","channelId":"2","timestamp":"1652648842870"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"BN7hYwzFACGoDZux7\\\"],\\\"id\\\":\\\"265\\\"}\"]","thisId":"301","channelHost":"edabit.com","id":"301","opcode":"1","channelId":"2","timestamp":"1652648842870"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"NgyZdeFBWJcBGXxjq\\\"],\\\"id\\\":\\\"263\\\"}\"]","thisId":"302","channelHost":"edabit.com","id":"302","opcode":"1","channelId":"2","timestamp":"1652648842870"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"DfaTrBDZKjso6HBXs\\\"],\\\"id\\\":\\\"266\\\"}\"]","thisId":"303","channelHost":"edabit.com","id":"303","opcode":"1","channelId":"2","timestamp":"1652648842882"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"EiGazR6eGXHMx3hTy\\\"],\\\"id\\\":\\\"267\\\"}\"]","thisId":"304","channelHost":"edabit.com","id":"304","opcode":"1","channelId":"2","timestamp":"1652648842882"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"FQPo8iZ8vuPEj2dKB\\\"],\\\"id\\\":\\\"268\\\"}\"]","thisId":"305","channelHost":"edabit.com","id":"305","opcode":"1","channelId":"2","timestamp":"1652648842882"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"S6ScbuTciqryqTAAg\\\"],\\\"id\\\":\\\"269\\\"}\"]","thisId":"306","channelHost":"edabit.com","id":"306","opcode":"1","channelId":"2","timestamp":"1652648842882"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"HPcr7REWMLTosoXME\\\"],\\\"id\\\":\\\"270\\\"}\"]","thisId":"307","channelHost":"edabit.com","id":"307","opcode":"1","channelId":"2","timestamp":"1652648842882"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"z5hQaDNPSSqP9bN5t\\\"],\\\"id\\\":\\\"271\\\"}\"]","thisId":"308","channelHost":"edabit.com","id":"308","opcode":"1","channelId":"2","timestamp":"1652648842885"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"E2WdAPmgNJnbL5RvF\\\"],\\\"id\\\":\\\"272\\\"}\"]","thisId":"309","channelHost":"edabit.com","id":"309","opcode":"1","channelId":"2","timestamp":"1652648842885"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"AwHcrbtX9vXXbARmX\\\"],\\\"id\\\":\\\"273\\\"}\"]","thisId":"310","channelHost":"edabit.com","id":"310","opcode":"1","channelId":"2","timestamp":"1652648842886"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"YNQQynxnFeoKNiqTM\\\"],\\\"id\\\":\\\"274\\\"}\"]","thisId":"311","channelHost":"edabit.com","id":"311","opcode":"1","channelId":"2","timestamp":"1652648842886"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"NWtZJ2wHGB7hz9iSd\\\"],\\\"id\\\":\\\"275\\\"}\"]","thisId":"312","channelHost":"edabit.com","id":"312","opcode":"1","channelId":"2","timestamp":"1652648842886"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"H5Tabm7omS9ia8Rce\\\"],\\\"id\\\":\\\"276\\\"}\"]","thisId":"313","channelHost":"edabit.com","id":"313","opcode":"1","channelId":"2","timestamp":"1652648842887"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"jrh488nh4CyDmwMre\\\"],\\\"id\\\":\\\"277\\\"}\"]","thisId":"314","channelHost":"edabit.com","id":"314","opcode":"1","channelId":"2","timestamp":"1652648842898"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ce3CbX2KwdwaJxxra\\\"],\\\"id\\\":\\\"279\\\"}\"]","thisId":"315","channelHost":"edabit.com","id":"315","opcode":"1","channelId":"2","timestamp":"1652648842898"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"gPWZDe6rciBzYdz3B\\\"],\\\"id\\\":\\\"280\\\"}\"]","thisId":"316","channelHost":"edabit.com","id":"316","opcode":"1","channelId":"2","timestamp":"1652648842898"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"KpAxNFuZj79KzLDc5\\\"],\\\"id\\\":\\\"281\\\"}\"]","thisId":"317","channelHost":"edabit.com","id":"317","opcode":"1","channelId":"2","timestamp":"1652648842898"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"SSiwbDE337QvJ9FCZ\\\"],\\\"id\\\":\\\"278\\\"}\"]","thisId":"318","channelHost":"edabit.com","id":"318","opcode":"1","channelId":"2","timestamp":"1652648842898"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"dDjLzbMh2JqjTtG8J\\\"],\\\"id\\\":\\\"282\\\"}\"]","thisId":"319","channelHost":"edabit.com","id":"319","opcode":"1","channelId":"2","timestamp":"1652648842899"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"j5mm8HjTZGZagrnz8\\\"],\\\"id\\\":\\\"283\\\"}\"]","thisId":"320","channelHost":"edabit.com","id":"320","opcode":"1","channelId":"2","timestamp":"1652648842899"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"vs7xj6PwALtfpjkmX\\\"],\\\"id\\\":\\\"284\\\"}\"]","thisId":"321","channelHost":"edabit.com","id":"321","opcode":"1","channelId":"2","timestamp":"1652648842899"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"CC7f9DpPfMMqmkfvC\\\"],\\\"id\\\":\\\"285\\\"}\"]","thisId":"322","channelHost":"edabit.com","id":"322","opcode":"1","channelId":"2","timestamp":"1652648842900"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"FDauhMn4rAcsW7Goh\\\"],\\\"id\\\":\\\"286\\\"}\"]","thisId":"323","channelHost":"edabit.com","id":"323","opcode":"1","channelId":"2","timestamp":"1652648842900"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"mkxS3CnW98Ci3kwCh\\\"],\\\"id\\\":\\\"287\\\"}\"]","thisId":"324","channelHost":"edabit.com","id":"324","opcode":"1","channelId":"2","timestamp":"1652648842901"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"NjJ9gGNPGaQGxTxCc\\\"],\\\"id\\\":\\\"288\\\"}\"]","thisId":"325","channelHost":"edabit.com","id":"325","opcode":"1","channelId":"2","timestamp":"1652648842902"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"vENakDEYEDKFGPSEb\\\"],\\\"id\\\":\\\"289\\\"}\"]","thisId":"326","channelHost":"edabit.com","id":"326","opcode":"1","channelId":"2","timestamp":"1652648842902"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"3ZooM5R5P63w5bPCv\\\"],\\\"id\\\":\\\"290\\\"}\"]","thisId":"327","channelHost":"edabit.com","id":"327","opcode":"1","channelId":"2","timestamp":"1652648842903"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"7eoAWhG46SrA3tvLK\\\"],\\\"id\\\":\\\"291\\\"}\"]","thisId":"328","channelHost":"edabit.com","id":"328","opcode":"1","channelId":"2","timestamp":"1652648842903"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Rs23pTNpM6k5M2ThH\\\"],\\\"id\\\":\\\"292\\\"}\"]","thisId":"329","channelHost":"edabit.com","id":"329","opcode":"1","channelId":"2","timestamp":"1652648842906"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"rzpucPyoyEtXPo2BG\\\"],\\\"id\\\":\\\"293\\\"}\"]","thisId":"330","channelHost":"edabit.com","id":"330","opcode":"1","channelId":"2","timestamp":"1652648842929"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"7Tb7qMDQHtz3xpydd\\\"],\\\"id\\\":\\\"295\\\"}\"]","thisId":"331","channelHost":"edabit.com","id":"331","opcode":"1","channelId":"2","timestamp":"1652648842929"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"J26bZ6Fv6bWEisDYj\\\"],\\\"id\\\":\\\"296\\\"}\"]","thisId":"332","channelHost":"edabit.com","id":"332","opcode":"1","channelId":"2","timestamp":"1652648842929"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"7fHsizQrTLXsPWMyH\\\"],\\\"id\\\":\\\"294\\\"}\"]","thisId":"333","channelHost":"edabit.com","id":"333","opcode":"1","channelId":"2","timestamp":"1652648842929"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"hf2THAoQRQbAx2jc9\\\"],\\\"id\\\":\\\"297\\\"}\"]","thisId":"334","channelHost":"edabit.com","id":"334","opcode":"1","channelId":"2","timestamp":"1652648842929"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"7bupZ6FmuAQwJE6CL\\\"],\\\"id\\\":\\\"298\\\"}\"]","thisId":"335","channelHost":"edabit.com","id":"335","opcode":"1","channelId":"2","timestamp":"1652648842930"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Sej5nsmmjBAXv6hHv\\\"],\\\"id\\\":\\\"299\\\"}\"]","thisId":"336","channelHost":"edabit.com","id":"336","opcode":"1","channelId":"2","timestamp":"1652648842930"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"eHA9jMjzADDo6PhuJ\\\"],\\\"id\\\":\\\"300\\\"}\"]","thisId":"337","channelHost":"edabit.com","id":"337","opcode":"1","channelId":"2","timestamp":"1652648842930"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"vFLhYANAZQGKTtxA2\\\"],\\\"id\\\":\\\"301\\\"}\"]","thisId":"338","channelHost":"edabit.com","id":"338","opcode":"1","channelId":"2","timestamp":"1652648842931"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"3S8XppR6Yf5mXPxij\\\"],\\\"id\\\":\\\"302\\\"}\"]","thisId":"339","channelHost":"edabit.com","id":"339","opcode":"1","channelId":"2","timestamp":"1652648842931"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"sBRPyEAjBfWKsnTaZ\\\"],\\\"id\\\":\\\"303\\\"}\"]","thisId":"340","channelHost":"edabit.com","id":"340","opcode":"1","channelId":"2","timestamp":"1652648842931"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"jfRHGwHMZcnzZm9JL\\\"],\\\"id\\\":\\\"304\\\"}\"]","thisId":"341","channelHost":"edabit.com","id":"341","opcode":"1","channelId":"2","timestamp":"1652648842932"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"3GvRKZPF2NRPz3DgQ\\\"],\\\"id\\\":\\\"305\\\"}\"]","thisId":"342","channelHost":"edabit.com","id":"342","opcode":"1","channelId":"2","timestamp":"1652648842932"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"4r33Yd2HuEireb3Sm\\\"],\\\"id\\\":\\\"306\\\"}\"]","thisId":"343","channelHost":"edabit.com","id":"343","opcode":"1","channelId":"2","timestamp":"1652648842933"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"BxnxYJGQ9MMQn2EfR\\\"],\\\"id\\\":\\\"307\\\"}\"]","thisId":"344","channelHost":"edabit.com","id":"344","opcode":"1","channelId":"2","timestamp":"1652648842933"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"KWbrmP9uYSnYtwkAB\\\"],\\\"id\\\":\\\"308\\\"}\"]","thisId":"345","channelHost":"edabit.com","id":"345","opcode":"1","channelId":"2","timestamp":"1652648842934"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ev5oH5FSzb9oF6skT\\\"],\\\"id\\\":\\\"309\\\"}\"]","thisId":"346","channelHost":"edabit.com","id":"346","opcode":"1","channelId":"2","timestamp":"1652648842959"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"A2M6aC7BR2P4Qj2Kr\\\"],\\\"id\\\":\\\"310\\\"}\"]","thisId":"347","channelHost":"edabit.com","id":"347","opcode":"1","channelId":"2","timestamp":"1652648842959"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"L5uwyF4SsAG4DmPpJ\\\"],\\\"id\\\":\\\"311\\\"}\"]","thisId":"348","channelHost":"edabit.com","id":"348","opcode":"1","channelId":"2","timestamp":"1652648842959"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"HmicQW4LMYyNHXRzT\\\"],\\\"id\\\":\\\"312\\\"}\"]","thisId":"349","channelHost":"edabit.com","id":"349","opcode":"1","channelId":"2","timestamp":"1652648842959"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"zSqXDoWS8PuhbbPrL\\\"],\\\"id\\\":\\\"313\\\"}\"]","thisId":"350","channelHost":"edabit.com","id":"350","opcode":"1","channelId":"2","timestamp":"1652648842959"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"c52kNwPuWo5kp9x4H\\\"],\\\"id\\\":\\\"314\\\"}\"]","thisId":"351","channelHost":"edabit.com","id":"351","opcode":"1","channelId":"2","timestamp":"1652648842960"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"vXYP24qRoQQijc834\\\"],\\\"id\\\":\\\"315\\\"}\"]","thisId":"352","channelHost":"edabit.com","id":"352","opcode":"1","channelId":"2","timestamp":"1652648842960"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"7r4Hz8MvJq4sbHhXB\\\"],\\\"id\\\":\\\"316\\\"}\"]","thisId":"353","channelHost":"edabit.com","id":"353","opcode":"1","channelId":"2","timestamp":"1652648842961"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"aAMcXEH67BLzJfyZz\\\"],\\\"id\\\":\\\"317\\\"}\"]","thisId":"354","channelHost":"edabit.com","id":"354","opcode":"1","channelId":"2","timestamp":"1652648842961"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"r7JegKpMpntfDyy6D\\\"],\\\"id\\\":\\\"318\\\"}\"]","thisId":"355","channelHost":"edabit.com","id":"355","opcode":"1","channelId":"2","timestamp":"1652648842961"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"r2csEmtFvoa3tDWB4\\\"],\\\"id\\\":\\\"319\\\"}\"]","thisId":"356","channelHost":"edabit.com","id":"356","opcode":"1","channelId":"2","timestamp":"1652648842962"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"XFhvhZhfA7TfPk87D\\\"],\\\"id\\\":\\\"320\\\"}\"]","thisId":"357","channelHost":"edabit.com","id":"357","opcode":"1","channelId":"2","timestamp":"1652648842962"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"tiyPFonvAJ8e6H9jS\\\"],\\\"id\\\":\\\"321\\\"}\"]","thisId":"358","channelHost":"edabit.com","id":"358","opcode":"1","channelId":"2","timestamp":"1652648842962"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"iaCSbqngin2AXriyB\\\"],\\\"id\\\":\\\"322\\\"}\"]","thisId":"359","channelHost":"edabit.com","id":"359","opcode":"1","channelId":"2","timestamp":"1652648842965"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"GJh9FraKutcnHoruX\\\"],\\\"id\\\":\\\"323\\\"}\"]","thisId":"360","channelHost":"edabit.com","id":"360","opcode":"1","channelId":"2","timestamp":"1652648842965"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"aPmfBKu7ixcsYYKaZ\\\"],\\\"id\\\":\\\"324\\\"}\"]","thisId":"361","channelHost":"edabit.com","id":"361","opcode":"1","channelId":"2","timestamp":"1652648842965"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"QLz5aGfChHhndKWMv\\\"],\\\"id\\\":\\\"327\\\"}\"]","thisId":"362","channelHost":"edabit.com","id":"362","opcode":"1","channelId":"2","timestamp":"1652648842989"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"W64jA8hmGCmjbR7Fb\\\"],\\\"id\\\":\\\"325\\\"}\"]","thisId":"363","channelHost":"edabit.com","id":"363","opcode":"1","channelId":"2","timestamp":"1652648842989"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"u4YLReJ9Q3vAYJkCm\\\"],\\\"id\\\":\\\"328\\\"}\"]","thisId":"364","channelHost":"edabit.com","id":"364","opcode":"1","channelId":"2","timestamp":"1652648842989"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"2Cbbs3pvH2gCMZMsg\\\"],\\\"id\\\":\\\"329\\\"}\"]","thisId":"365","channelHost":"edabit.com","id":"365","opcode":"1","channelId":"2","timestamp":"1652648842989"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"9zBJYnBekqAo52zEp\\\"],\\\"id\\\":\\\"326\\\"}\"]","thisId":"366","channelHost":"edabit.com","id":"366","opcode":"1","channelId":"2","timestamp":"1652648842989"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"xrPSrroKFC9uciA6H\\\"],\\\"id\\\":\\\"330\\\"}\"]","thisId":"367","channelHost":"edabit.com","id":"367","opcode":"1","channelId":"2","timestamp":"1652648842990"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"9D39q2q9yAFCDM9da\\\"],\\\"id\\\":\\\"331\\\"}\"]","thisId":"368","channelHost":"edabit.com","id":"368","opcode":"1","channelId":"2","timestamp":"1652648842991"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"A7mDjLb7DZL5bk8oz\\\"],\\\"id\\\":\\\"332\\\"}\"]","thisId":"369","channelHost":"edabit.com","id":"369","opcode":"1","channelId":"2","timestamp":"1652648842991"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"fCkawrffCeWEH5xja\\\"],\\\"id\\\":\\\"333\\\"}\"]","thisId":"370","channelHost":"edabit.com","id":"370","opcode":"1","channelId":"2","timestamp":"1652648842991"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ynzo3DeHCmAXLtpwe\\\"],\\\"id\\\":\\\"334\\\"}\"]","thisId":"371","channelHost":"edabit.com","id":"371","opcode":"1","channelId":"2","timestamp":"1652648842991"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"q3hu6xr7eqBB3EKaB\\\"],\\\"id\\\":\\\"335\\\"}\"]","thisId":"372","channelHost":"edabit.com","id":"372","opcode":"1","channelId":"2","timestamp":"1652648842992"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"E22KYTGMhwpYtjn8x\\\"],\\\"id\\\":\\\"336\\\"}\"]","thisId":"373","channelHost":"edabit.com","id":"373","opcode":"1","channelId":"2","timestamp":"1652648842993"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"diiEDD4JQyysFR7zh\\\"],\\\"id\\\":\\\"337\\\"}\"]","thisId":"374","channelHost":"edabit.com","id":"374","opcode":"1","channelId":"2","timestamp":"1652648842993"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"g7dRyiCi5dpKxuFRa\\\"],\\\"id\\\":\\\"338\\\"}\"]","thisId":"375","channelHost":"edabit.com","id":"375","opcode":"1","channelId":"2","timestamp":"1652648842993"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Abq8d76QDQC2ocfX7\\\"],\\\"id\\\":\\\"339\\\"}\"]","thisId":"376","channelHost":"edabit.com","id":"376","opcode":"1","channelId":"2","timestamp":"1652648842993"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"5oJXKYGnG5hqbaaxK\\\"],\\\"id\\\":\\\"340\\\"}\"]","thisId":"377","channelHost":"edabit.com","id":"377","opcode":"1","channelId":"2","timestamp":"1652648842993"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"3mCJ3idbMqueRTa7b\\\"],\\\"id\\\":\\\"341\\\"}\"]","thisId":"378","channelHost":"edabit.com","id":"378","opcode":"1","channelId":"2","timestamp":"1652648843019"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"p3BhJuodwuhrNjQJ5\\\"],\\\"id\\\":\\\"342\\\"}\"]","thisId":"379","channelHost":"edabit.com","id":"379","opcode":"1","channelId":"2","timestamp":"1652648843019"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"9X8zLpBEcQsyerPgL\\\"],\\\"id\\\":\\\"343\\\"}\"]","thisId":"380","channelHost":"edabit.com","id":"380","opcode":"1","channelId":"2","timestamp":"1652648843019"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ibJLbwfkTbP9229Kt\\\"],\\\"id\\\":\\\"344\\\"}\"]","thisId":"381","channelHost":"edabit.com","id":"381","opcode":"1","channelId":"2","timestamp":"1652648843019"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"nXkhpafB9e5c7fNcg\\\"],\\\"id\\\":\\\"345\\\"}\"]","thisId":"382","channelHost":"edabit.com","id":"382","opcode":"1","channelId":"2","timestamp":"1652648843019"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"xLHemSaX8jAc6Tyz9\\\"],\\\"id\\\":\\\"346\\\"}\"]","thisId":"383","channelHost":"edabit.com","id":"383","opcode":"1","channelId":"2","timestamp":"1652648843020"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"jtFNMktij8FcH6zna\\\"],\\\"id\\\":\\\"347\\\"}\"]","thisId":"384","channelHost":"edabit.com","id":"384","opcode":"1","channelId":"2","timestamp":"1652648843021"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"MX8ikyoCnDWr33saY\\\"],\\\"id\\\":\\\"348\\\"}\"]","thisId":"385","channelHost":"edabit.com","id":"385","opcode":"1","channelId":"2","timestamp":"1652648843021"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"G9tAPeGEhR8r2DkH5\\\"],\\\"id\\\":\\\"349\\\"}\"]","thisId":"386","channelHost":"edabit.com","id":"386","opcode":"1","channelId":"2","timestamp":"1652648843022"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"px8DTp5gTmojeBLve\\\"],\\\"id\\\":\\\"350\\\"}\"]","thisId":"387","channelHost":"edabit.com","id":"387","opcode":"1","channelId":"2","timestamp":"1652648843022"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"FsgEcZdjC4BYG9gLj\\\"],\\\"id\\\":\\\"351\\\"}\"]","thisId":"388","channelHost":"edabit.com","id":"388","opcode":"1","channelId":"2","timestamp":"1652648843024"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"kgMghy3omychqLnXv\\\"],\\\"id\\\":\\\"352\\\"}\"]","thisId":"389","channelHost":"edabit.com","id":"389","opcode":"1","channelId":"2","timestamp":"1652648843025"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"GobCTBruAvA3ZDr4J\\\"],\\\"id\\\":\\\"353\\\"}\"]","thisId":"390","channelHost":"edabit.com","id":"390","opcode":"1","channelId":"2","timestamp":"1652648843025"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"H6eTNH6NW36MHqkjb\\\"],\\\"id\\\":\\\"354\\\"}\"]","thisId":"391","channelHost":"edabit.com","id":"391","opcode":"1","channelId":"2","timestamp":"1652648843026"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"n7kbvMp5zHRmRbFQF\\\"],\\\"id\\\":\\\"355\\\"}\"]","thisId":"392","channelHost":"edabit.com","id":"392","opcode":"1","channelId":"2","timestamp":"1652648843026"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"yFtCbCJBpoZM2rEqP\\\"],\\\"id\\\":\\\"356\\\"}\"]","thisId":"393","channelHost":"edabit.com","id":"393","opcode":"1","channelId":"2","timestamp":"1652648843026"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"WHuKTT4wm6vnr8o3n\\\"],\\\"id\\\":\\\"357\\\"}\"]","thisId":"394","channelHost":"edabit.com","id":"394","opcode":"1","channelId":"2","timestamp":"1652648843050"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"faMvfHSZ6r6DbGYAc\\\"],\\\"id\\\":\\\"360\\\"}\"]","thisId":"395","channelHost":"edabit.com","id":"395","opcode":"1","channelId":"2","timestamp":"1652648843050"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"auwAWq4MXmXFwWrHf\\\"],\\\"id\\\":\\\"358\\\"}\"]","thisId":"396","channelHost":"edabit.com","id":"396","opcode":"1","channelId":"2","timestamp":"1652648843050"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"kZZDAMCjekgBdWgJy\\\"],\\\"id\\\":\\\"359\\\"}\"]","thisId":"397","channelHost":"edabit.com","id":"397","opcode":"1","channelId":"2","timestamp":"1652648843050"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Xbrab5yY9zaknqDjQ\\\"],\\\"id\\\":\\\"361\\\"}\"]","thisId":"398","channelHost":"edabit.com","id":"398","opcode":"1","channelId":"2","timestamp":"1652648843050"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"tgjFboGwDEHY4Wn5S\\\"],\\\"id\\\":\\\"362\\\"}\"]","thisId":"399","channelHost":"edabit.com","id":"399","opcode":"1","channelId":"2","timestamp":"1652648843051"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ijNrhCjfS2ZMtNkXS\\\"],\\\"id\\\":\\\"363\\\"}\"]","thisId":"400","channelHost":"edabit.com","id":"400","opcode":"1","channelId":"2","timestamp":"1652648843051"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"tunTJAdBeLgc8s4ap\\\"],\\\"id\\\":\\\"364\\\"}\"]","thisId":"401","channelHost":"edabit.com","id":"401","opcode":"1","channelId":"2","timestamp":"1652648843051"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"z9ofdqhTYi9tdCj5T\\\"],\\\"id\\\":\\\"365\\\"}\"]","thisId":"402","channelHost":"edabit.com","id":"402","opcode":"1","channelId":"2","timestamp":"1652648843052"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Tyzp6S67dtXPAAQan\\\"],\\\"id\\\":\\\"366\\\"}\"]","thisId":"403","channelHost":"edabit.com","id":"403","opcode":"1","channelId":"2","timestamp":"1652648843052"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"nC9oD566JRp9cnth9\\\"],\\\"id\\\":\\\"367\\\"}\"]","thisId":"404","channelHost":"edabit.com","id":"404","opcode":"1","channelId":"2","timestamp":"1652648843052"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"5aGCby28ZfsSZr4cH\\\"],\\\"id\\\":\\\"368\\\"}\"]","thisId":"405","channelHost":"edabit.com","id":"405","opcode":"1","channelId":"2","timestamp":"1652648843052"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"6cBQuxkvN4f2Qn8x9\\\"],\\\"id\\\":\\\"369\\\"}\"]","thisId":"406","channelHost":"edabit.com","id":"406","opcode":"1","channelId":"2","timestamp":"1652648843053"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"CKH5qJdtcFGNsdAfp\\\"],\\\"id\\\":\\\"370\\\"}\"]","thisId":"407","channelHost":"edabit.com","id":"407","opcode":"1","channelId":"2","timestamp":"1652648843053"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"CYm9fzo63bQNbWfnN\\\"],\\\"id\\\":\\\"371\\\"}\"]","thisId":"408","channelHost":"edabit.com","id":"408","opcode":"1","channelId":"2","timestamp":"1652648843053"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"DwMxxFrzZ5eZfBSGL\\\"],\\\"id\\\":\\\"372\\\"}\"]","thisId":"409","channelHost":"edabit.com","id":"409","opcode":"1","channelId":"2","timestamp":"1652648843055"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"WrHfLyMXCMuGjxf2s\\\"],\\\"id\\\":\\\"373\\\"}\"]","thisId":"410","channelHost":"edabit.com","id":"410","opcode":"1","channelId":"2","timestamp":"1652648843080"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ZY7b6LA5BeWQJnJX5\\\"],\\\"id\\\":\\\"374\\\"}\"]","thisId":"411","channelHost":"edabit.com","id":"411","opcode":"1","channelId":"2","timestamp":"1652648843080"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"a5onNYqzuKiGjWMQu\\\"],\\\"id\\\":\\\"375\\\"}\"]","thisId":"412","channelHost":"edabit.com","id":"412","opcode":"1","channelId":"2","timestamp":"1652648843080"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"usRLjLkxmg8SeYius\\\"],\\\"id\\\":\\\"376\\\"}\"]","thisId":"413","channelHost":"edabit.com","id":"413","opcode":"1","channelId":"2","timestamp":"1652648843080"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"7cugwZK74ciMmFqHe\\\"],\\\"id\\\":\\\"377\\\"}\"]","thisId":"414","channelHost":"edabit.com","id":"414","opcode":"1","channelId":"2","timestamp":"1652648843080"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"u7prkNxFxqartAfiG\\\"],\\\"id\\\":\\\"378\\\"}\"]","thisId":"415","channelHost":"edabit.com","id":"415","opcode":"1","channelId":"2","timestamp":"1652648843081"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"uYS6jZBk5sQ6qQyrK\\\"],\\\"id\\\":\\\"379\\\"}\"]","thisId":"416","channelHost":"edabit.com","id":"416","opcode":"1","channelId":"2","timestamp":"1652648843081"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"4DKpZPfSgyExdwirC\\\"],\\\"id\\\":\\\"380\\\"}\"]","thisId":"417","channelHost":"edabit.com","id":"417","opcode":"1","channelId":"2","timestamp":"1652648843082"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"LzY7r73f9xKhKvtki\\\"],\\\"id\\\":\\\"381\\\"}\"]","thisId":"418","channelHost":"edabit.com","id":"418","opcode":"1","channelId":"2","timestamp":"1652648843082"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"tfD8Ct9niGcvS5usN\\\"],\\\"id\\\":\\\"382\\\"}\"]","thisId":"419","channelHost":"edabit.com","id":"419","opcode":"1","channelId":"2","timestamp":"1652648843083"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"YLwQGrA24g9TmiGXf\\\"],\\\"id\\\":\\\"383\\\"}\"]","thisId":"420","channelHost":"edabit.com","id":"420","opcode":"1","channelId":"2","timestamp":"1652648843083"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"tvaT25krB65pYtghq\\\"],\\\"id\\\":\\\"384\\\"}\"]","thisId":"421","channelHost":"edabit.com","id":"421","opcode":"1","channelId":"2","timestamp":"1652648843084"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"w9mNwtPZX7qimRzJr\\\"],\\\"id\\\":\\\"385\\\"}\"]","thisId":"422","channelHost":"edabit.com","id":"422","opcode":"1","channelId":"2","timestamp":"1652648843084"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"KESQCRf5mJd7x6Rfh\\\"],\\\"id\\\":\\\"386\\\"}\"]","thisId":"423","channelHost":"edabit.com","id":"423","opcode":"1","channelId":"2","timestamp":"1652648843085"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"qjY6B7fHSRZBSiG7o\\\"],\\\"id\\\":\\\"387\\\"}\"]","thisId":"424","channelHost":"edabit.com","id":"424","opcode":"1","channelId":"2","timestamp":"1652648843085"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"EFFCkmQcYTFkt3FxC\\\"],\\\"id\\\":\\\"388\\\"}\"]","thisId":"425","channelHost":"edabit.com","id":"425","opcode":"1","channelId":"2","timestamp":"1652648843088"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"46","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"7\\\"]}\"]","thisId":"426","channelHost":"edabit.com","id":"426","opcode":"1","channelId":"2","timestamp":"1652648843100"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"sF6Lm5LQsy6u2ZKeZ\\\"],\\\"id\\\":\\\"393\\\"}\"]","thisId":"427","channelHost":"edabit.com","id":"427","opcode":"1","channelId":"2","timestamp":"1652648843115"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"9Y83kppxQeMbvtDtF\\\"],\\\"id\\\":\\\"391\\\"}\"]","thisId":"428","channelHost":"edabit.com","id":"428","opcode":"1","channelId":"2","timestamp":"1652648843115"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"bzgkfePPbHyAyTdN3\\\"],\\\"id\\\":\\\"389\\\"}\"]","thisId":"429","channelHost":"edabit.com","id":"429","opcode":"1","channelId":"2","timestamp":"1652648843115"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"qPtcAMm4RhBmGG7XE\\\"],\\\"id\\\":\\\"390\\\"}\"]","thisId":"430","channelHost":"edabit.com","id":"430","opcode":"1","channelId":"2","timestamp":"1652648843115"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"CnCvL9vmjYtFG785t\\\"],\\\"id\\\":\\\"392\\\"}\"]","thisId":"431","channelHost":"edabit.com","id":"431","opcode":"1","channelId":"2","timestamp":"1652648843115"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"244703","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"7\\\",\\\"result\\\":{\\\"_id\\\":\\\"2t8JDxF7wLrg7yJ5E\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int convert(int minutes) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.2809004875250932,\\\"familyId\\\":\\\"4JfY9tqXkgM597aAg\\\",\\\"instructions\\\":\\\"Write a function that takes an integer `minutes` and converts it to seconds.\\\\n\\\\n### Examples\\\\n```\\\\nconvert(5) ➞ 300\\\\n\\\\nconvert(3) ➞ 180\\\\n\\\\nconvert(2) ➞ 120\\\\n```\\\\n\\\\n### Notes\\\\n- Don't forget to `return` the result.\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're *really* stuck, unlock solutions in the **Solutions** tab.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(360, Challenge.convert(6));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(240, Challenge.convert(4));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  publi","thisId":"432","channelHost":"edabit.com","id":"432","opcode":"1","channelId":"2","timestamp":"1652648843121"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"zmbR8SKveCgJ6KB5G\\\"],\\\"id\\\":\\\"394\\\"}\"]","thisId":"433","channelHost":"edabit.com","id":"433","opcode":"1","channelId":"2","timestamp":"1652648843122"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"KMggZFnrWJGxk2tvn\\\"],\\\"id\\\":\\\"397\\\"}\"]","thisId":"434","channelHost":"edabit.com","id":"434","opcode":"1","channelId":"2","timestamp":"1652648843122"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"g3zwGCJN5Ti8TSSbh\\\"],\\\"id\\\":\\\"395\\\"}\"]","thisId":"435","channelHost":"edabit.com","id":"435","opcode":"1","channelId":"2","timestamp":"1652648843122"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"hEbyZPTpxt4AtmmhP\\\"],\\\"id\\\":\\\"396\\\"}\"]","thisId":"436","channelHost":"edabit.com","id":"436","opcode":"1","channelId":"2","timestamp":"1652648843122"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"vYQogxrcQBEMr7y3F\\\"],\\\"id\\\":\\\"398\\\"}\"]","thisId":"437","channelHost":"edabit.com","id":"437","opcode":"1","channelId":"2","timestamp":"1652648843122"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"2rJAhXLRaRB3gjwaC\\\"],\\\"id\\\":\\\"399\\\"}\"]","thisId":"438","channelHost":"edabit.com","id":"438","opcode":"1","channelId":"2","timestamp":"1652648843123"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"99k6HcWYvvbZirkDW\\\"],\\\"id\\\":\\\"400\\\"}\"]","thisId":"439","channelHost":"edabit.com","id":"439","opcode":"1","channelId":"2","timestamp":"1652648843123"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"aG8byPZcEj9yLKxA3\\\"],\\\"id\\\":\\\"401\\\"}\"]","thisId":"440","channelHost":"edabit.com","id":"440","opcode":"1","channelId":"2","timestamp":"1652648843123"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"FtoNXq7DTCAiZ3z9T\\\"],\\\"id\\\":\\\"402\\\"}\"]","thisId":"441","channelHost":"edabit.com","id":"441","opcode":"1","channelId":"2","timestamp":"1652648843124"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Djo98NonxGxvDgPde\\\"],\\\"id\\\":\\\"403\\\"}\"]","thisId":"442","channelHost":"edabit.com","id":"442","opcode":"1","channelId":"2","timestamp":"1652648843124"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"qY9s6qK4WpbPBxQES\\\"],\\\"id\\\":\\\"404\\\"}\"]","thisId":"443","channelHost":"edabit.com","id":"443","opcode":"1","channelId":"2","timestamp":"1652648843125"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"jt6TWkTcYdWcRXbds\\\"],\\\"id\\\":\\\"406\\\"}\"]","thisId":"444","channelHost":"edabit.com","id":"444","opcode":"1","channelId":"2","timestamp":"1652648843141"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"T3zjJiXoNRqXqEx9u\\\"],\\\"id\\\":\\\"407\\\"}\"]","thisId":"445","channelHost":"edabit.com","id":"445","opcode":"1","channelId":"2","timestamp":"1652648843141"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"954ZMB8AKKJBEnvDu\\\"],\\\"id\\\":\\\"409\\\"}\"]","thisId":"446","channelHost":"edabit.com","id":"446","opcode":"1","channelId":"2","timestamp":"1652648843141"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"FTWQaZdMqYph5umsu\\\"],\\\"id\\\":\\\"408\\\"}\"]","thisId":"447","channelHost":"edabit.com","id":"447","opcode":"1","channelId":"2","timestamp":"1652648843141"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Sj3pLPPLpnF8DNGQD\\\"],\\\"id\\\":\\\"405\\\"}\"]","thisId":"448","channelHost":"edabit.com","id":"448","opcode":"1","channelId":"2","timestamp":"1652648843142"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"p5PsoKc2z8QaYNjNG\\\"],\\\"id\\\":\\\"410\\\"}\"]","thisId":"449","channelHost":"edabit.com","id":"449","opcode":"1","channelId":"2","timestamp":"1652648843144"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"JPDNpqri6djiC8ptP\\\"],\\\"id\\\":\\\"411\\\"}\"]","thisId":"450","channelHost":"edabit.com","id":"450","opcode":"1","channelId":"2","timestamp":"1652648843144"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"NYq5PTgKa6C97qdLw\\\"],\\\"id\\\":\\\"412\\\"}\"]","thisId":"451","channelHost":"edabit.com","id":"451","opcode":"1","channelId":"2","timestamp":"1652648843146"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"KGhmvXpF6iK8mAqgj\\\"],\\\"id\\\":\\\"413\\\"}\"]","thisId":"452","channelHost":"edabit.com","id":"452","opcode":"1","channelId":"2","timestamp":"1652648843146"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"yPQ26h7KYpqsftRPY\\\"],\\\"id\\\":\\\"414\\\"}\"]","thisId":"453","channelHost":"edabit.com","id":"453","opcode":"1","channelId":"2","timestamp":"1652648843147"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"jXvNMQRZPwKmex4nG\\\"],\\\"id\\\":\\\"415\\\"}\"]","thisId":"454","channelHost":"edabit.com","id":"454","opcode":"1","channelId":"2","timestamp":"1652648843147"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"SmL32HnRnmsCqGC5g\\\"],\\\"id\\\":\\\"416\\\"}\"]","thisId":"455","channelHost":"edabit.com","id":"455","opcode":"1","channelId":"2","timestamp":"1652648843147"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"sRC7wLW7g6gw24Muq\\\"],\\\"id\\\":\\\"417\\\"}\"]","thisId":"456","channelHost":"edabit.com","id":"456","opcode":"1","channelId":"2","timestamp":"1652648843148"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Stu2gesXeETdxxGBY\\\"],\\\"id\\\":\\\"418\\\"}\"]","thisId":"457","channelHost":"edabit.com","id":"457","opcode":"1","channelId":"2","timestamp":"1652648843148"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"o9nESkofDnfXJ5m7a\\\"],\\\"id\\\":\\\"419\\\"}\"]","thisId":"458","channelHost":"edabit.com","id":"458","opcode":"1","channelId":"2","timestamp":"1652648843148"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"yLjnDk7bJ3GYeSX9f\\\"],\\\"id\\\":\\\"420\\\"}\"]","thisId":"459","channelHost":"edabit.com","id":"459","opcode":"1","channelId":"2","timestamp":"1652648843148"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"yeewrR3MB9PZprwPT\\\"],\\\"id\\\":\\\"421\\\"}\"]","thisId":"460","channelHost":"edabit.com","id":"460","opcode":"1","channelId":"2","timestamp":"1652648843173"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"6THnWXvQrhRrEErtb\\\"],\\\"id\\\":\\\"422\\\"}\"]","thisId":"461","channelHost":"edabit.com","id":"461","opcode":"1","channelId":"2","timestamp":"1652648843173"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"crZ8ADEeMticeNjBo\\\"],\\\"id\\\":\\\"423\\\"}\"]","thisId":"462","channelHost":"edabit.com","id":"462","opcode":"1","channelId":"2","timestamp":"1652648843173"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"uiNKhxnvuaJ7ikoKX\\\"],\\\"id\\\":\\\"424\\\"}\"]","thisId":"463","channelHost":"edabit.com","id":"463","opcode":"1","channelId":"2","timestamp":"1652648843173"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"xix4GjLCpXmetXGca\\\"],\\\"id\\\":\\\"425\\\"}\"]","thisId":"464","channelHost":"edabit.com","id":"464","opcode":"1","channelId":"2","timestamp":"1652648843173"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"9xSy9uu6MaEKS4kPC\\\"],\\\"id\\\":\\\"426\\\"}\"]","thisId":"465","channelHost":"edabit.com","id":"465","opcode":"1","channelId":"2","timestamp":"1652648843174"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"WzE2id9w5mNfXozKL\\\"],\\\"id\\\":\\\"427\\\"}\"]","thisId":"466","channelHost":"edabit.com","id":"466","opcode":"1","channelId":"2","timestamp":"1652648843175"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"9To632EycoudpkgHM\\\"],\\\"id\\\":\\\"428\\\"}\"]","thisId":"467","channelHost":"edabit.com","id":"467","opcode":"1","channelId":"2","timestamp":"1652648843175"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"pkMPzrmsNN9RRnMqx\\\"],\\\"id\\\":\\\"429\\\"}\"]","thisId":"468","channelHost":"edabit.com","id":"468","opcode":"1","channelId":"2","timestamp":"1652648843175"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ZiuuBqBWYBRtPaKKR\\\"],\\\"id\\\":\\\"430\\\"}\"]","thisId":"469","channelHost":"edabit.com","id":"469","opcode":"1","channelId":"2","timestamp":"1652648843176"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"LzW7RxkLFFWphQWiK\\\"],\\\"id\\\":\\\"431\\\"}\"]","thisId":"470","channelHost":"edabit.com","id":"470","opcode":"1","channelId":"2","timestamp":"1652648843176"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"SNPLajmqXym6nFPQm\\\"],\\\"id\\\":\\\"432\\\"}\"]","thisId":"471","channelHost":"edabit.com","id":"471","opcode":"1","channelId":"2","timestamp":"1652648843178"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"mTKJRxrWNr9qrBxxG\\\"],\\\"id\\\":\\\"433\\\"}\"]","thisId":"472","channelHost":"edabit.com","id":"472","opcode":"1","channelId":"2","timestamp":"1652648843178"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"iLwdf4yJjrSv9Pg25\\\"],\\\"id\\\":\\\"434\\\"}\"]","thisId":"473","channelHost":"edabit.com","id":"473","opcode":"1","channelId":"2","timestamp":"1652648843179"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"M7GmLubPNJEfQj78E\\\"],\\\"id\\\":\\\"435\\\"}\"]","thisId":"474","channelHost":"edabit.com","id":"474","opcode":"1","channelId":"2","timestamp":"1652648843179"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"jRzY8tThBn7zp3jvy\\\"],\\\"id\\\":\\\"436\\\"}\"]","thisId":"475","channelHost":"edabit.com","id":"475","opcode":"1","channelId":"2","timestamp":"1652648843179"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"XgFuNXpXAENpZiDaw\\\"],\\\"id\\\":\\\"438\\\"}\"]","thisId":"476","channelHost":"edabit.com","id":"476","opcode":"1","channelId":"2","timestamp":"1652648843201"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"wp3vZEmhEgCY42WAZ\\\"],\\\"id\\\":\\\"437\\\"}\"]","thisId":"477","channelHost":"edabit.com","id":"477","opcode":"1","channelId":"2","timestamp":"1652648843201"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"JnGKayBeHJFDQ2oiu\\\"],\\\"id\\\":\\\"439\\\"}\"]","thisId":"478","channelHost":"edabit.com","id":"478","opcode":"1","channelId":"2","timestamp":"1652648843201"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"EatQ3W5eg39FmvGAf\\\"],\\\"id\\\":\\\"440\\\"}\"]","thisId":"479","channelHost":"edabit.com","id":"479","opcode":"1","channelId":"2","timestamp":"1652648843201"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"n2haqkZN529Rr67vg\\\"],\\\"id\\\":\\\"441\\\"}\"]","thisId":"480","channelHost":"edabit.com","id":"480","opcode":"1","channelId":"2","timestamp":"1652648843201"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"JfertgG5phtnvDNpD\\\"],\\\"id\\\":\\\"442\\\"}\"]","thisId":"481","channelHost":"edabit.com","id":"481","opcode":"1","channelId":"2","timestamp":"1652648843202"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"XuhT6hazGTL9c4bwE\\\"],\\\"id\\\":\\\"443\\\"}\"]","thisId":"482","channelHost":"edabit.com","id":"482","opcode":"1","channelId":"2","timestamp":"1652648843202"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"mjzKvjg92ZGLuNPJ9\\\"],\\\"id\\\":\\\"444\\\"}\"]","thisId":"483","channelHost":"edabit.com","id":"483","opcode":"1","channelId":"2","timestamp":"1652648843202"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"6ZPqDxQfGkX9rmPGg\\\"],\\\"id\\\":\\\"445\\\"}\"]","thisId":"484","channelHost":"edabit.com","id":"484","opcode":"1","channelId":"2","timestamp":"1652648843203"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"9k87o8Y4yNt3fvcfB\\\"],\\\"id\\\":\\\"446\\\"}\"]","thisId":"485","channelHost":"edabit.com","id":"485","opcode":"1","channelId":"2","timestamp":"1652648843203"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"HhExSRj4aXHxTQEgG\\\"],\\\"id\\\":\\\"447\\\"}\"]","thisId":"486","channelHost":"edabit.com","id":"486","opcode":"1","channelId":"2","timestamp":"1652648843203"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"YaveE6sv8xGf4CNxk\\\"],\\\"id\\\":\\\"448\\\"}\"]","thisId":"487","channelHost":"edabit.com","id":"487","opcode":"1","channelId":"2","timestamp":"1652648843203"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"KSX8nW7HdxLK2iFj5\\\"],\\\"id\\\":\\\"449\\\"}\"]","thisId":"488","channelHost":"edabit.com","id":"488","opcode":"1","channelId":"2","timestamp":"1652648843204"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"eQcTa2pBy5WiXpQFf\\\"],\\\"id\\\":\\\"450\\\"}\"]","thisId":"489","channelHost":"edabit.com","id":"489","opcode":"1","channelId":"2","timestamp":"1652648843204"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ujzBDWymfJ9fzSnfH\\\"],\\\"id\\\":\\\"451\\\"}\"]","thisId":"490","channelHost":"edabit.com","id":"490","opcode":"1","channelId":"2","timestamp":"1652648843204"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"gvcJa987XYCxqf9xN\\\"],\\\"id\\\":\\\"452\\\"}\"]","thisId":"491","channelHost":"edabit.com","id":"491","opcode":"1","channelId":"2","timestamp":"1652648843206"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"9SxN2Mh85B5SBTFWP\\\"],\\\"id\\\":\\\"453\\\"}\"]","thisId":"492","channelHost":"edabit.com","id":"492","opcode":"1","channelId":"2","timestamp":"1652648843231"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"fj6c32nSde3FfYoaC\\\"],\\\"id\\\":\\\"454\\\"}\"]","thisId":"493","channelHost":"edabit.com","id":"493","opcode":"1","channelId":"2","timestamp":"1652648843231"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"j7qh4xZNvLddnx4Gy\\\"],\\\"id\\\":\\\"455\\\"}\"]","thisId":"494","channelHost":"edabit.com","id":"494","opcode":"1","channelId":"2","timestamp":"1652648843231"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"8YajvDynPYF6XG3nZ\\\"],\\\"id\\\":\\\"456\\\"}\"]","thisId":"495","channelHost":"edabit.com","id":"495","opcode":"1","channelId":"2","timestamp":"1652648843231"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Wr5YbkQakb6qh8Gax\\\"],\\\"id\\\":\\\"457\\\"}\"]","thisId":"496","channelHost":"edabit.com","id":"496","opcode":"1","channelId":"2","timestamp":"1652648843231"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"C7eTh8XB3dERHYE9W\\\"],\\\"id\\\":\\\"458\\\"}\"]","thisId":"497","channelHost":"edabit.com","id":"497","opcode":"1","channelId":"2","timestamp":"1652648843232"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"cAyse5aq4n4MagmYA\\\"],\\\"id\\\":\\\"459\\\"}\"]","thisId":"498","channelHost":"edabit.com","id":"498","opcode":"1","channelId":"2","timestamp":"1652648843232"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"zRjZb4NXtfMjGAMGb\\\"],\\\"id\\\":\\\"460\\\"}\"]","thisId":"499","channelHost":"edabit.com","id":"499","opcode":"1","channelId":"2","timestamp":"1652648843233"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ZrsjThqzcwJYT95PQ\\\"],\\\"id\\\":\\\"461\\\"}\"]","thisId":"500","channelHost":"edabit.com","id":"500","opcode":"1","channelId":"2","timestamp":"1652648843233"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"g7mkKpAtZZ7mnuFQX\\\"],\\\"id\\\":\\\"462\\\"}\"]","thisId":"501","channelHost":"edabit.com","id":"501","opcode":"1","channelId":"2","timestamp":"1652648843234"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"DPyBbBDqziAdo9DRJ\\\"],\\\"id\\\":\\\"463\\\"}\"]","thisId":"502","channelHost":"edabit.com","id":"502","opcode":"1","channelId":"2","timestamp":"1652648843234"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"qbhH4bef2N275iQ2Z\\\"],\\\"id\\\":\\\"464\\\"}\"]","thisId":"503","channelHost":"edabit.com","id":"503","opcode":"1","channelId":"2","timestamp":"1652648843234"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"u8tkvqrMSqJetmNcz\\\"],\\\"id\\\":\\\"465\\\"}\"]","thisId":"504","channelHost":"edabit.com","id":"504","opcode":"1","channelId":"2","timestamp":"1652648843236"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"8yxthmRQsNu86PBy3\\\"],\\\"id\\\":\\\"466\\\"}\"]","thisId":"505","channelHost":"edabit.com","id":"505","opcode":"1","channelId":"2","timestamp":"1652648843237"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"zSjd2EbBzBCuMjgrr\\\"],\\\"id\\\":\\\"467\\\"}\"]","thisId":"506","channelHost":"edabit.com","id":"506","opcode":"1","channelId":"2","timestamp":"1652648843237"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"M9eXE68jj9pxvmiuj\\\"],\\\"id\\\":\\\"468\\\"}\"]","thisId":"507","channelHost":"edabit.com","id":"507","opcode":"1","channelId":"2","timestamp":"1652648843238"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"NnpHPBhnnhdE3gLew\\\"],\\\"id\\\":\\\"471\\\"}\"]","thisId":"508","channelHost":"edabit.com","id":"508","opcode":"1","channelId":"2","timestamp":"1652648843259"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"mdJmXLuw8dLxxdGLc\\\"],\\\"id\\\":\\\"470\\\"}\"]","thisId":"509","channelHost":"edabit.com","id":"509","opcode":"1","channelId":"2","timestamp":"1652648843259"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"zCBrgDYqgfsd6THJd\\\"],\\\"id\\\":\\\"472\\\"}\"]","thisId":"510","channelHost":"edabit.com","id":"510","opcode":"1","channelId":"2","timestamp":"1652648843259"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"9EAgG2hGidjo5BvCz\\\"],\\\"id\\\":\\\"469\\\"}\"]","thisId":"511","channelHost":"edabit.com","id":"511","opcode":"1","channelId":"2","timestamp":"1652648843259"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"dETRK2YLCtEPAMvMb\\\"],\\\"id\\\":\\\"473\\\"}\"]","thisId":"512","channelHost":"edabit.com","id":"512","opcode":"1","channelId":"2","timestamp":"1652648843259"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ted7T8hrioompcZAn\\\"],\\\"id\\\":\\\"474\\\"}\"]","thisId":"513","channelHost":"edabit.com","id":"513","opcode":"1","channelId":"2","timestamp":"1652648843271"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"xzRcBmkYYNhoeBNv5\\\"],\\\"id\\\":\\\"475\\\"}\"]","thisId":"514","channelHost":"edabit.com","id":"514","opcode":"1","channelId":"2","timestamp":"1652648843273"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"uemLKqbbbfqvwB8ke\\\"],\\\"id\\\":\\\"476\\\"}\"]","thisId":"515","channelHost":"edabit.com","id":"515","opcode":"1","channelId":"2","timestamp":"1652648843274"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"4JMgg8Fbmb3qnzS8B\\\"],\\\"id\\\":\\\"477\\\"}\"]","thisId":"516","channelHost":"edabit.com","id":"516","opcode":"1","channelId":"2","timestamp":"1652648843274"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ACvNXRvMQPfMguQBH\\\"],\\\"id\\\":\\\"478\\\"}\"]","thisId":"517","channelHost":"edabit.com","id":"517","opcode":"1","channelId":"2","timestamp":"1652648843275"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"D33ry6zNZzRyuQRPF\\\"],\\\"id\\\":\\\"479\\\"}\"]","thisId":"518","channelHost":"edabit.com","id":"518","opcode":"1","channelId":"2","timestamp":"1652648843275"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Cqemt6ySdA883Td2F\\\"],\\\"id\\\":\\\"480\\\"}\"]","thisId":"519","channelHost":"edabit.com","id":"519","opcode":"1","channelId":"2","timestamp":"1652648843276"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"bYP5z4ywiz2sa3TbA\\\"],\\\"id\\\":\\\"481\\\"}\"]","thisId":"520","channelHost":"edabit.com","id":"520","opcode":"1","channelId":"2","timestamp":"1652648843276"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"4Az2B8MYAH3GbbxX6\\\"],\\\"id\\\":\\\"482\\\"}\"]","thisId":"521","channelHost":"edabit.com","id":"521","opcode":"1","channelId":"2","timestamp":"1652648843277"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"G4ZF3Ch8XyMk4p7Hp\\\"],\\\"id\\\":\\\"483\\\"}\"]","thisId":"522","channelHost":"edabit.com","id":"522","opcode":"1","channelId":"2","timestamp":"1652648843277"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"S28QATbZGq3BjDHZZ\\\"],\\\"id\\\":\\\"484\\\"}\"]","thisId":"523","channelHost":"edabit.com","id":"523","opcode":"1","channelId":"2","timestamp":"1652648843278"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"tLmBirspM5N35xxuC\\\"],\\\"id\\\":\\\"485\\\"}\"]","thisId":"524","channelHost":"edabit.com","id":"524","opcode":"1","channelId":"2","timestamp":"1652648843289"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"22reADPqtoTzmP6nD\\\"],\\\"id\\\":\\\"486\\\"}\"]","thisId":"525","channelHost":"edabit.com","id":"525","opcode":"1","channelId":"2","timestamp":"1652648843289"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"6RStzK9uub9vHDt53\\\"],\\\"id\\\":\\\"487\\\"}\"]","thisId":"526","channelHost":"edabit.com","id":"526","opcode":"1","channelId":"2","timestamp":"1652648843289"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"x2mxt5c6Qp4Nr5qDv\\\"],\\\"id\\\":\\\"488\\\"}\"]","thisId":"527","channelHost":"edabit.com","id":"527","opcode":"1","channelId":"2","timestamp":"1652648843289"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"LyytqgmYKzCgBGbxE\\\"],\\\"id\\\":\\\"489\\\"}\"]","thisId":"528","channelHost":"edabit.com","id":"528","opcode":"1","channelId":"2","timestamp":"1652648843289"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"bfAeRfKacFSLuuXjv\\\"],\\\"id\\\":\\\"490\\\"}\"]","thisId":"529","channelHost":"edabit.com","id":"529","opcode":"1","channelId":"2","timestamp":"1652648843291"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"5mANMR3X6gEfWephD\\\"],\\\"id\\\":\\\"491\\\"}\"]","thisId":"530","channelHost":"edabit.com","id":"530","opcode":"1","channelId":"2","timestamp":"1652648843291"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"FhsLkzfbEgb4TiJXA\\\"],\\\"id\\\":\\\"492\\\"}\"]","thisId":"531","channelHost":"edabit.com","id":"531","opcode":"1","channelId":"2","timestamp":"1652648843291"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"i3T6iJNinAq6quMXo\\\"],\\\"id\\\":\\\"493\\\"}\"]","thisId":"532","channelHost":"edabit.com","id":"532","opcode":"1","channelId":"2","timestamp":"1652648843291"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"mMc9D6vB4iPiiAK7k\\\"],\\\"id\\\":\\\"494\\\"}\"]","thisId":"533","channelHost":"edabit.com","id":"533","opcode":"1","channelId":"2","timestamp":"1652648843292"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"CKqfEowjmSTw2jsso\\\"],\\\"id\\\":\\\"495\\\"}\"]","thisId":"534","channelHost":"edabit.com","id":"534","opcode":"1","channelId":"2","timestamp":"1652648843292"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"DcatHxtrMfLxSWnDn\\\"],\\\"id\\\":\\\"496\\\"}\"]","thisId":"535","channelHost":"edabit.com","id":"535","opcode":"1","channelId":"2","timestamp":"1652648843292"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Md6usCHQ7Xsj2fQi3\\\"],\\\"id\\\":\\\"497\\\"}\"]","thisId":"536","channelHost":"edabit.com","id":"536","opcode":"1","channelId":"2","timestamp":"1652648843293"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"qSJ5hZfG52Nf2hXWS\\\"],\\\"id\\\":\\\"498\\\"}\"]","thisId":"537","channelHost":"edabit.com","id":"537","opcode":"1","channelId":"2","timestamp":"1652648843293"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"v96NThCRg5M5MLGfq\\\"],\\\"id\\\":\\\"499\\\"}\"]","thisId":"538","channelHost":"edabit.com","id":"538","opcode":"1","channelId":"2","timestamp":"1652648843293"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"7r3uQADjtXEk7qirj\\\"],\\\"id\\\":\\\"500\\\"}\"]","thisId":"539","channelHost":"edabit.com","id":"539","opcode":"1","channelId":"2","timestamp":"1652648843294"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"XxS3L2wDEKhi9Hw6W\\\"],\\\"id\\\":\\\"501\\\"}\"]","thisId":"540","channelHost":"edabit.com","id":"540","opcode":"1","channelId":"2","timestamp":"1652648843315"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"sCP58J9vcexchgwo7\\\"],\\\"id\\\":\\\"503\\\"}\"]","thisId":"541","channelHost":"edabit.com","id":"541","opcode":"1","channelId":"2","timestamp":"1652648843315"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Nwq8yK3Eq2DqbxDsL\\\"],\\\"id\\\":\\\"502\\\"}\"]","thisId":"542","channelHost":"edabit.com","id":"542","opcode":"1","channelId":"2","timestamp":"1652648843315"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"z8vvSdWjAPu5ufBuR\\\"],\\\"id\\\":\\\"504\\\"}\"]","thisId":"543","channelHost":"edabit.com","id":"543","opcode":"1","channelId":"2","timestamp":"1652648843315"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"KgR2JhEuGD7onbMLx\\\"],\\\"id\\\":\\\"505\\\"}\"]","thisId":"544","channelHost":"edabit.com","id":"544","opcode":"1","channelId":"2","timestamp":"1652648843315"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"GjCgCugvh4eorPmgM\\\"],\\\"id\\\":\\\"506\\\"}\"]","thisId":"545","channelHost":"edabit.com","id":"545","opcode":"1","channelId":"2","timestamp":"1652648843316"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"8NZaLdJBkhZCgNBc7\\\"],\\\"id\\\":\\\"507\\\"}\"]","thisId":"546","channelHost":"edabit.com","id":"546","opcode":"1","channelId":"2","timestamp":"1652648843317"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"jbQDEAk7viqz2x4AX\\\"],\\\"id\\\":\\\"508\\\"}\"]","thisId":"547","channelHost":"edabit.com","id":"547","opcode":"1","channelId":"2","timestamp":"1652648843319"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"4JjCN4RksJs763EGg\\\"],\\\"id\\\":\\\"509\\\"}\"]","thisId":"548","channelHost":"edabit.com","id":"548","opcode":"1","channelId":"2","timestamp":"1652648843320"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"EjQM5woRAhYEmuGFp\\\"],\\\"id\\\":\\\"510\\\"}\"]","thisId":"549","channelHost":"edabit.com","id":"549","opcode":"1","channelId":"2","timestamp":"1652648843320"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"zi3zKpBLYHqtmSf5m\\\"],\\\"id\\\":\\\"511\\\"}\"]","thisId":"550","channelHost":"edabit.com","id":"550","opcode":"1","channelId":"2","timestamp":"1652648843321"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"p5kyThBZDR7oJhjR7\\\"],\\\"id\\\":\\\"512\\\"}\"]","thisId":"551","channelHost":"edabit.com","id":"551","opcode":"1","channelId":"2","timestamp":"1652648843321"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"XRAGxXj4KtakkvD3F\\\"],\\\"id\\\":\\\"513\\\"}\"]","thisId":"552","channelHost":"edabit.com","id":"552","opcode":"1","channelId":"2","timestamp":"1652648843321"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"yX9Jd6s9eF75ZK43K\\\"],\\\"id\\\":\\\"514\\\"}\"]","thisId":"553","channelHost":"edabit.com","id":"553","opcode":"1","channelId":"2","timestamp":"1652648843321"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"EiTYFd9jwghDz3aoG\\\"],\\\"id\\\":\\\"515\\\"}\"]","thisId":"554","channelHost":"edabit.com","id":"554","opcode":"1","channelId":"2","timestamp":"1652648843321"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"E9AHcnWg7fDfardLF\\\"],\\\"id\\\":\\\"516\\\"}\"]","thisId":"555","channelHost":"edabit.com","id":"555","opcode":"1","channelId":"2","timestamp":"1652648843323"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"hYq8J8HJM3pwCFKiZ\\\"],\\\"id\\\":\\\"517\\\"}\"]","thisId":"556","channelHost":"edabit.com","id":"556","opcode":"1","channelId":"2","timestamp":"1652648843365"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"gBNu2G5Lk5iv22pye\\\"],\\\"id\\\":\\\"518\\\"}\"]","thisId":"557","channelHost":"edabit.com","id":"557","opcode":"1","channelId":"2","timestamp":"1652648843368"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"LJDcfKERoPe8ERXG5\\\"],\\\"id\\\":\\\"519\\\"}\"]","thisId":"558","channelHost":"edabit.com","id":"558","opcode":"1","channelId":"2","timestamp":"1652648843368"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"v9YKCBnGLJh8ZobKj\\\"],\\\"id\\\":\\\"520\\\"}\"]","thisId":"559","channelHost":"edabit.com","id":"559","opcode":"1","channelId":"2","timestamp":"1652648843368"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"sjsHWXs7fNStCdrNr\\\"],\\\"id\\\":\\\"521\\\"}\"]","thisId":"560","channelHost":"edabit.com","id":"560","opcode":"1","channelId":"2","timestamp":"1652648843368"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"g5n85W62rJqZakMry\\\"],\\\"id\\\":\\\"522\\\"}\"]","thisId":"561","channelHost":"edabit.com","id":"561","opcode":"1","channelId":"2","timestamp":"1652648843376"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"zZxPQRjn8q2iB9Biv\\\"],\\\"id\\\":\\\"523\\\"}\"]","thisId":"562","channelHost":"edabit.com","id":"562","opcode":"1","channelId":"2","timestamp":"1652648843376"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"NGnsMw8CG8gxEFW7w\\\"],\\\"id\\\":\\\"524\\\"}\"]","thisId":"563","channelHost":"edabit.com","id":"563","opcode":"1","channelId":"2","timestamp":"1652648843376"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"vuxkHGZg8fuWCivPH\\\"],\\\"id\\\":\\\"525\\\"}\"]","thisId":"564","channelHost":"edabit.com","id":"564","opcode":"1","channelId":"2","timestamp":"1652648843376"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"jc7nh6xMSZTBYvndz\\\"],\\\"id\\\":\\\"526\\\"}\"]","thisId":"565","channelHost":"edabit.com","id":"565","opcode":"1","channelId":"2","timestamp":"1652648843376"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"mc6KcMGkrSWP88dGu\\\"],\\\"id\\\":\\\"527\\\"}\"]","thisId":"566","channelHost":"edabit.com","id":"566","opcode":"1","channelId":"2","timestamp":"1652648843376"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"4hZ9cHgvkZ94sr2ae\\\"],\\\"id\\\":\\\"528\\\"}\"]","thisId":"567","channelHost":"edabit.com","id":"567","opcode":"1","channelId":"2","timestamp":"1652648843377"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"33tRK98geLPcf73PF\\\"],\\\"id\\\":\\\"529\\\"}\"]","thisId":"568","channelHost":"edabit.com","id":"568","opcode":"1","channelId":"2","timestamp":"1652648843377"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Bt6tuyqL7ESZHpsec\\\"],\\\"id\\\":\\\"530\\\"}\"]","thisId":"569","channelHost":"edabit.com","id":"569","opcode":"1","channelId":"2","timestamp":"1652648843378"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"AudsydHhvWpCCSuaN\\\"],\\\"id\\\":\\\"531\\\"}\"]","thisId":"570","channelHost":"edabit.com","id":"570","opcode":"1","channelId":"2","timestamp":"1652648843378"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"MRArkoYdmsxeGAu2s\\\"],\\\"id\\\":\\\"532\\\"}\"]","thisId":"571","channelHost":"edabit.com","id":"571","opcode":"1","channelId":"2","timestamp":"1652648843378"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"8SHAyg8kdX8y72S3z\\\"],\\\"id\\\":\\\"533\\\"}\"]","thisId":"572","channelHost":"edabit.com","id":"572","opcode":"1","channelId":"2","timestamp":"1652648843399"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"HjvecTb3aFMjJ59sB\\\"],\\\"id\\\":\\\"534\\\"}\"]","thisId":"573","channelHost":"edabit.com","id":"573","opcode":"1","channelId":"2","timestamp":"1652648843401"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"n3Sw2MEa4TkEhthgB\\\"],\\\"id\\\":\\\"535\\\"}\"]","thisId":"574","channelHost":"edabit.com","id":"574","opcode":"1","channelId":"2","timestamp":"1652648843401"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"F2Kizgj7QxSab7R7p\\\"],\\\"id\\\":\\\"536\\\"}\"]","thisId":"575","channelHost":"edabit.com","id":"575","opcode":"1","channelId":"2","timestamp":"1652648843401"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"AkQseRG6jtznJH9bb\\\"],\\\"id\\\":\\\"537\\\"}\"]","thisId":"576","channelHost":"edabit.com","id":"576","opcode":"1","channelId":"2","timestamp":"1652648843401"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Eiyu2SZk9rgdp5gZd\\\"],\\\"id\\\":\\\"538\\\"}\"]","thisId":"577","channelHost":"edabit.com","id":"577","opcode":"1","channelId":"2","timestamp":"1652648843401"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"mtrBW4w2Bkum4bGt5\\\"],\\\"id\\\":\\\"539\\\"}\"]","thisId":"578","channelHost":"edabit.com","id":"578","opcode":"1","channelId":"2","timestamp":"1652648843402"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"xhhLGZzhwvkN6AR29\\\"],\\\"id\\\":\\\"540\\\"}\"]","thisId":"579","channelHost":"edabit.com","id":"579","opcode":"1","channelId":"2","timestamp":"1652648843402"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Ly8iQqDfaouRLgKNb\\\"],\\\"id\\\":\\\"541\\\"}\"]","thisId":"580","channelHost":"edabit.com","id":"580","opcode":"1","channelId":"2","timestamp":"1652648843402"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"vtW558tXEYFQGv27S\\\"],\\\"id\\\":\\\"542\\\"}\"]","thisId":"581","channelHost":"edabit.com","id":"581","opcode":"1","channelId":"2","timestamp":"1652648843403"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"6mLZjPrNFrfGfdwqa\\\"],\\\"id\\\":\\\"543\\\"}\"]","thisId":"582","channelHost":"edabit.com","id":"582","opcode":"1","channelId":"2","timestamp":"1652648843403"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"jfeWP9tjtwNeRu4WG\\\"],\\\"id\\\":\\\"544\\\"}\"]","thisId":"583","channelHost":"edabit.com","id":"583","opcode":"1","channelId":"2","timestamp":"1652648843404"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"YuZYMkwnJpALmHELB\\\"],\\\"id\\\":\\\"545\\\"}\"]","thisId":"584","channelHost":"edabit.com","id":"584","opcode":"1","channelId":"2","timestamp":"1652648843404"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"vNszi3mbJA5BhgGFX\\\"],\\\"id\\\":\\\"546\\\"}\"]","thisId":"585","channelHost":"edabit.com","id":"585","opcode":"1","channelId":"2","timestamp":"1652648843404"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"42DtofyzmZXjWXCtw\\\"],\\\"id\\\":\\\"547\\\"}\"]","thisId":"586","channelHost":"edabit.com","id":"586","opcode":"1","channelId":"2","timestamp":"1652648843406"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"5snfPLPbvjAsZ5kjo\\\"],\\\"id\\\":\\\"548\\\"}\"]","thisId":"587","channelHost":"edabit.com","id":"587","opcode":"1","channelId":"2","timestamp":"1652648843406"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"qE9gCJtrtcMurvQtT\\\"],\\\"id\\\":\\\"549\\\"}\"]","thisId":"588","channelHost":"edabit.com","id":"588","opcode":"1","channelId":"2","timestamp":"1652648843407"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ENozFXdPz9YTTHdps\\\"],\\\"id\\\":\\\"550\\\"}\"]","thisId":"589","channelHost":"edabit.com","id":"589","opcode":"1","channelId":"2","timestamp":"1652648843431"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"AQr6ZPvSWzJ2cPTGt\\\"],\\\"id\\\":\\\"551\\\"}\"]","thisId":"590","channelHost":"edabit.com","id":"590","opcode":"1","channelId":"2","timestamp":"1652648843431"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"c4kGNF83S6Mzb75x9\\\"],\\\"id\\\":\\\"552\\\"}\"]","thisId":"591","channelHost":"edabit.com","id":"591","opcode":"1","channelId":"2","timestamp":"1652648843431"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"hYKyiwgw9Ni5ELtDL\\\"],\\\"id\\\":\\\"553\\\"}\"]","thisId":"592","channelHost":"edabit.com","id":"592","opcode":"1","channelId":"2","timestamp":"1652648843431"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ka4Mk98LW4TEbcqzH\\\"],\\\"id\\\":\\\"554\\\"}\"]","thisId":"593","channelHost":"edabit.com","id":"593","opcode":"1","channelId":"2","timestamp":"1652648843431"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"AGoRjorDpas63gqt6\\\"],\\\"id\\\":\\\"555\\\"}\"]","thisId":"594","channelHost":"edabit.com","id":"594","opcode":"1","channelId":"2","timestamp":"1652648843432"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"YHa95Qi8yXTu8oQLL\\\"],\\\"id\\\":\\\"556\\\"}\"]","thisId":"595","channelHost":"edabit.com","id":"595","opcode":"1","channelId":"2","timestamp":"1652648843433"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"buctumjkfFWGx5iP6\\\"],\\\"id\\\":\\\"557\\\"}\"]","thisId":"596","channelHost":"edabit.com","id":"596","opcode":"1","channelId":"2","timestamp":"1652648843433"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"qaMkkFAaTJzbmkwwe\\\"],\\\"id\\\":\\\"558\\\"}\"]","thisId":"597","channelHost":"edabit.com","id":"597","opcode":"1","channelId":"2","timestamp":"1652648843434"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"BJkkDwsZrB8SFTAQ2\\\"],\\\"id\\\":\\\"559\\\"}\"]","thisId":"598","channelHost":"edabit.com","id":"598","opcode":"1","channelId":"2","timestamp":"1652648843434"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"sHWvPRwcY93w6qGNB\\\"],\\\"id\\\":\\\"560\\\"}\"]","thisId":"599","channelHost":"edabit.com","id":"599","opcode":"1","channelId":"2","timestamp":"1652648843435"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"phxxGdTJraPEQmKdq\\\"],\\\"id\\\":\\\"561\\\"}\"]","thisId":"600","channelHost":"edabit.com","id":"600","opcode":"1","channelId":"2","timestamp":"1652648843438"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"gskWj3Zj45ovAomTb\\\"],\\\"id\\\":\\\"562\\\"}\"]","thisId":"601","channelHost":"edabit.com","id":"601","opcode":"1","channelId":"2","timestamp":"1652648843439"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Tzwb5uASZbKuESHhJ\\\"],\\\"id\\\":\\\"563\\\"}\"]","thisId":"602","channelHost":"edabit.com","id":"602","opcode":"1","channelId":"2","timestamp":"1652648843439"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"zcobRojF5p8DWkfiC\\\"],\\\"id\\\":\\\"564\\\"}\"]","thisId":"603","channelHost":"edabit.com","id":"603","opcode":"1","channelId":"2","timestamp":"1652648843439"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ayvtiYuzTxkphRBxB\\\"],\\\"id\\\":\\\"565\\\"}\"]","thisId":"604","channelHost":"edabit.com","id":"604","opcode":"1","channelId":"2","timestamp":"1652648843440"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"PkqSq3ea2bfJvF6Tk\\\"],\\\"id\\\":\\\"566\\\"}\"]","thisId":"605","channelHost":"edabit.com","id":"605","opcode":"1","channelId":"2","timestamp":"1652648843460"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"BMpe6n3BSciWnt3fu\\\"],\\\"id\\\":\\\"567\\\"}\"]","thisId":"606","channelHost":"edabit.com","id":"606","opcode":"1","channelId":"2","timestamp":"1652648843460"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ZoDHtyWfFPttuTiQR\\\"],\\\"id\\\":\\\"568\\\"}\"]","thisId":"607","channelHost":"edabit.com","id":"607","opcode":"1","channelId":"2","timestamp":"1652648843460"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"dreQhsnZJ7HGtsts5\\\"],\\\"id\\\":\\\"569\\\"}\"]","thisId":"608","channelHost":"edabit.com","id":"608","opcode":"1","channelId":"2","timestamp":"1652648843460"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"gdiL9PHcySFP74mnK\\\"],\\\"id\\\":\\\"570\\\"}\"]","thisId":"609","channelHost":"edabit.com","id":"609","opcode":"1","channelId":"2","timestamp":"1652648843460"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"3xsxMziiw587r7xry\\\"],\\\"id\\\":\\\"571\\\"}\"]","thisId":"610","channelHost":"edabit.com","id":"610","opcode":"1","channelId":"2","timestamp":"1652648843461"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Yr2kTTb6zf5PNx6DE\\\"],\\\"id\\\":\\\"572\\\"}\"]","thisId":"611","channelHost":"edabit.com","id":"611","opcode":"1","channelId":"2","timestamp":"1652648843461"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"8Je7AoNP8NxPDobm8\\\"],\\\"id\\\":\\\"573\\\"}\"]","thisId":"612","channelHost":"edabit.com","id":"612","opcode":"1","channelId":"2","timestamp":"1652648843461"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ACHoZjkBGijBvwbDP\\\"],\\\"id\\\":\\\"574\\\"}\"]","thisId":"613","channelHost":"edabit.com","id":"613","opcode":"1","channelId":"2","timestamp":"1652648843461"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"axspsW5aide7vzpnh\\\"],\\\"id\\\":\\\"575\\\"}\"]","thisId":"614","channelHost":"edabit.com","id":"614","opcode":"1","channelId":"2","timestamp":"1652648843462"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"drRFWCuz8jWAPmFRj\\\"],\\\"id\\\":\\\"576\\\"}\"]","thisId":"615","channelHost":"edabit.com","id":"615","opcode":"1","channelId":"2","timestamp":"1652648843462"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"cb8wqy9qZjrq5wmp8\\\"],\\\"id\\\":\\\"577\\\"}\"]","thisId":"616","channelHost":"edabit.com","id":"616","opcode":"1","channelId":"2","timestamp":"1652648843462"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"4HRk9MkZm4wNR6PZJ\\\"],\\\"id\\\":\\\"578\\\"}\"]","thisId":"617","channelHost":"edabit.com","id":"617","opcode":"1","channelId":"2","timestamp":"1652648843463"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"f72omtBYFEBotgdEX\\\"],\\\"id\\\":\\\"579\\\"}\"]","thisId":"618","channelHost":"edabit.com","id":"618","opcode":"1","channelId":"2","timestamp":"1652648843463"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"63GZYcgtT7XiSjsKL\\\"],\\\"id\\\":\\\"580\\\"}\"]","thisId":"619","channelHost":"edabit.com","id":"619","opcode":"1","channelId":"2","timestamp":"1652648843463"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"GqqYA3RKuok5Pw2Bx\\\"],\\\"id\\\":\\\"581\\\"}\"]","thisId":"620","channelHost":"edabit.com","id":"620","opcode":"1","channelId":"2","timestamp":"1652648843463"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"oXXBnHjXLAHKcvqXN\\\"],\\\"id\\\":\\\"582\\\"}\"]","thisId":"621","channelHost":"edabit.com","id":"621","opcode":"1","channelId":"2","timestamp":"1652648843486"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"YPgPqMa7adXdh2svk\\\"],\\\"id\\\":\\\"584\\\"}\"]","thisId":"622","channelHost":"edabit.com","id":"622","opcode":"1","channelId":"2","timestamp":"1652648843486"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"NkatKxjHtPed4J3EF\\\"],\\\"id\\\":\\\"583\\\"}\"]","thisId":"623","channelHost":"edabit.com","id":"623","opcode":"1","channelId":"2","timestamp":"1652648843486"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"mPJzNuYJoJmMiAWhh\\\"],\\\"id\\\":\\\"585\\\"}\"]","thisId":"624","channelHost":"edabit.com","id":"624","opcode":"1","channelId":"2","timestamp":"1652648843486"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"WmGeYLJbud69ezCew\\\"],\\\"id\\\":\\\"586\\\"}\"]","thisId":"625","channelHost":"edabit.com","id":"625","opcode":"1","channelId":"2","timestamp":"1652648843486"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"FTxGaCEDJaidPqs3Z\\\"],\\\"id\\\":\\\"587\\\"}\"]","thisId":"626","channelHost":"edabit.com","id":"626","opcode":"1","channelId":"2","timestamp":"1652648843487"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Cu6euwD8Mi2c7BAHd\\\"],\\\"id\\\":\\\"588\\\"}\"]","thisId":"627","channelHost":"edabit.com","id":"627","opcode":"1","channelId":"2","timestamp":"1652648843487"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"rEuWBDwABDMo2rTSt\\\"],\\\"id\\\":\\\"589\\\"}\"]","thisId":"628","channelHost":"edabit.com","id":"628","opcode":"1","channelId":"2","timestamp":"1652648843488"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"whdNuCbR69fpLhbBv\\\"],\\\"id\\\":\\\"590\\\"}\"]","thisId":"629","channelHost":"edabit.com","id":"629","opcode":"1","channelId":"2","timestamp":"1652648843488"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"MfiTruQj2gtABxw5y\\\"],\\\"id\\\":\\\"591\\\"}\"]","thisId":"630","channelHost":"edabit.com","id":"630","opcode":"1","channelId":"2","timestamp":"1652648843489"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"rCkeAiRCpduosZ4Hj\\\"],\\\"id\\\":\\\"592\\\"}\"]","thisId":"631","channelHost":"edabit.com","id":"631","opcode":"1","channelId":"2","timestamp":"1652648843491"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"5XfpX2EEgRGWQELEx\\\"],\\\"id\\\":\\\"593\\\"}\"]","thisId":"632","channelHost":"edabit.com","id":"632","opcode":"1","channelId":"2","timestamp":"1652648843491"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"TSKay7qmB2KyrDwnK\\\"],\\\"id\\\":\\\"594\\\"}\"]","thisId":"633","channelHost":"edabit.com","id":"633","opcode":"1","channelId":"2","timestamp":"1652648843491"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"q5tAZPFbLzuERDybw\\\"],\\\"id\\\":\\\"595\\\"}\"]","thisId":"634","channelHost":"edabit.com","id":"634","opcode":"1","channelId":"2","timestamp":"1652648843492"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"bmwpoeCybNWnBxn7M\\\"],\\\"id\\\":\\\"596\\\"}\"]","thisId":"635","channelHost":"edabit.com","id":"635","opcode":"1","channelId":"2","timestamp":"1652648843492"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"GPAXxz5EPgSMby3fd\\\"],\\\"id\\\":\\\"597\\\"}\"]","thisId":"636","channelHost":"edabit.com","id":"636","opcode":"1","channelId":"2","timestamp":"1652648843493"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"46","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"8\\\"]}\"]","thisId":"637","channelHost":"edabit.com","id":"637","opcode":"1","channelId":"2","timestamp":"1652648843508"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"BdLPEtbChBG6nvYT6\\\"],\\\"id\\\":\\\"598\\\"}\"]","thisId":"638","channelHost":"edabit.com","id":"638","opcode":"1","channelId":"2","timestamp":"1652648843516"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"WbNwkvFJf63rTutWo\\\"],\\\"id\\\":\\\"599\\\"}\"]","thisId":"639","channelHost":"edabit.com","id":"639","opcode":"1","channelId":"2","timestamp":"1652648843516"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"bPSi354LyfXhA6RXf\\\"],\\\"id\\\":\\\"600\\\"}\"]","thisId":"640","channelHost":"edabit.com","id":"640","opcode":"1","channelId":"2","timestamp":"1652648843516"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"kAJBH9WexWMdfLFHT\\\"],\\\"id\\\":\\\"601\\\"}\"]","thisId":"641","channelHost":"edabit.com","id":"641","opcode":"1","channelId":"2","timestamp":"1652648843516"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"MNJ4Mx5duvtZJa8ks\\\"],\\\"id\\\":\\\"602\\\"}\"]","thisId":"642","channelHost":"edabit.com","id":"642","opcode":"1","channelId":"2","timestamp":"1652648843516"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"mB5LofGBxARkoYhRR\\\"],\\\"id\\\":\\\"603\\\"}\"]","thisId":"643","channelHost":"edabit.com","id":"643","opcode":"1","channelId":"2","timestamp":"1652648843517"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"pnhcp4FraYQDeqRGt\\\"],\\\"id\\\":\\\"604\\\"}\"]","thisId":"644","channelHost":"edabit.com","id":"644","opcode":"1","channelId":"2","timestamp":"1652648843517"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"27h4mwAKD3hhy6onh\\\"],\\\"id\\\":\\\"605\\\"}\"]","thisId":"645","channelHost":"edabit.com","id":"645","opcode":"1","channelId":"2","timestamp":"1652648843517"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"5Jw7K2fvuaAqRPPtJ\\\"],\\\"id\\\":\\\"606\\\"}\"]","thisId":"646","channelHost":"edabit.com","id":"646","opcode":"1","channelId":"2","timestamp":"1652648843517"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"EhX7SGqPTyxQc4pb2\\\"],\\\"id\\\":\\\"607\\\"}\"]","thisId":"647","channelHost":"edabit.com","id":"647","opcode":"1","channelId":"2","timestamp":"1652648843518"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"YGFhsF3veFwqKyp4x\\\"],\\\"id\\\":\\\"608\\\"}\"]","thisId":"648","channelHost":"edabit.com","id":"648","opcode":"1","channelId":"2","timestamp":"1652648843519"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"akLRnxrtrAsnyYuZb\\\"],\\\"id\\\":\\\"609\\\"}\"]","thisId":"649","channelHost":"edabit.com","id":"649","opcode":"1","channelId":"2","timestamp":"1652648843519"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"y93Q6YRPwFgZx84Xj\\\"],\\\"id\\\":\\\"610\\\"}\"]","thisId":"650","channelHost":"edabit.com","id":"650","opcode":"1","channelId":"2","timestamp":"1652648843519"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"hro2Zbdcr2hsQ5B8v\\\"],\\\"id\\\":\\\"611\\\"}\"]","thisId":"651","channelHost":"edabit.com","id":"651","opcode":"1","channelId":"2","timestamp":"1652648843520"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"WXTuWJ5nSEzjcakQJ\\\"],\\\"id\\\":\\\"612\\\"}\"]","thisId":"652","channelHost":"edabit.com","id":"652","opcode":"1","channelId":"2","timestamp":"1652648843523"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"GGijTCgukXqkYWX9Q\\\"],\\\"id\\\":\\\"613\\\"}\"]","thisId":"653","channelHost":"edabit.com","id":"653","opcode":"1","channelId":"2","timestamp":"1652648843523"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"235191","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"8\\\",\\\"result\\\":{\\\"_id\\\":\\\"Qir2pQ2Qp3uwrfJNZ\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int addition(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.328879753340185,\\\"familyId\\\":\\\"aMYaPXoM6Bf6a3wvx\\\",\\\"instructions\\\":\\\"Create a function that takes a number as an argument, increments the number by +1 and returns the result.\\\\n\\\\n### Examples\\\\n```\\\\naddition(0) ➞ 1\\\\n\\\\naddition(9) ➞ 10\\\\n\\\\naddition(-3) ➞ -2\\\\n```\\\\n\\\\n### Notes\\\\n- Don't forget to `return` the result.\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're *really* stuck, unlock solutions in the **Solutions** tab.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class Tests {\\\\n\\\\t@Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tSystem.out.println(\\\\\\\"2 plus 1 equals 3.\\\\\\\"); \\\\n\\\\t\\\\tassertEquals(3, Challenge.addition(2));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test\\\\n\\\\tpublic void test2(","thisId":"654","channelHost":"edabit.com","id":"654","opcode":"1","channelId":"2","timestamp":"1652648843525"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"aMazRiPPk9pAniYMF\\\"],\\\"id\\\":\\\"614\\\"}\"]","thisId":"655","channelHost":"edabit.com","id":"655","opcode":"1","channelId":"2","timestamp":"1652648843546"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ChqsAuCYkGm7x2Jyw\\\"],\\\"id\\\":\\\"615\\\"}\"]","thisId":"656","channelHost":"edabit.com","id":"656","opcode":"1","channelId":"2","timestamp":"1652648843546"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"LH2sxGLLLvnJbL6tZ\\\"],\\\"id\\\":\\\"616\\\"}\"]","thisId":"657","channelHost":"edabit.com","id":"657","opcode":"1","channelId":"2","timestamp":"1652648843546"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"cSfsSmpnGqeAEiN8a\\\"],\\\"id\\\":\\\"617\\\"}\"]","thisId":"658","channelHost":"edabit.com","id":"658","opcode":"1","channelId":"2","timestamp":"1652648843546"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"fEtBbju4zCmYKFAwH\\\"],\\\"id\\\":\\\"618\\\"}\"]","thisId":"659","channelHost":"edabit.com","id":"659","opcode":"1","channelId":"2","timestamp":"1652648843546"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"CR7uvWLiKNaZeoj4R\\\"],\\\"id\\\":\\\"619\\\"}\"]","thisId":"660","channelHost":"edabit.com","id":"660","opcode":"1","channelId":"2","timestamp":"1652648843552"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"PRWwoRZnnh5eyyRbD\\\"],\\\"id\\\":\\\"620\\\"}\"]","thisId":"661","channelHost":"edabit.com","id":"661","opcode":"1","channelId":"2","timestamp":"1652648843554"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"hLF2GH3SxbsFew3bC\\\"],\\\"id\\\":\\\"621\\\"}\"]","thisId":"662","channelHost":"edabit.com","id":"662","opcode":"1","channelId":"2","timestamp":"1652648843555"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"5RvoqBgeykwy2Xqdb\\\"],\\\"id\\\":\\\"622\\\"}\"]","thisId":"663","channelHost":"edabit.com","id":"663","opcode":"1","channelId":"2","timestamp":"1652648843555"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"w7DJWs97E83ntRgYf\\\"],\\\"id\\\":\\\"623\\\"}\"]","thisId":"664","channelHost":"edabit.com","id":"664","opcode":"1","channelId":"2","timestamp":"1652648843556"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"99yALJGy4ZmFzaqvr\\\"],\\\"id\\\":\\\"624\\\"}\"]","thisId":"665","channelHost":"edabit.com","id":"665","opcode":"1","channelId":"2","timestamp":"1652648843556"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"aL3SuicAGjAwgqY2d\\\"],\\\"id\\\":\\\"625\\\"}\"]","thisId":"666","channelHost":"edabit.com","id":"666","opcode":"1","channelId":"2","timestamp":"1652648843556"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"THuuakBitThtL6rmq\\\"],\\\"id\\\":\\\"626\\\"}\"]","thisId":"667","channelHost":"edabit.com","id":"667","opcode":"1","channelId":"2","timestamp":"1652648843561"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"MYtinBHDSk4Bk7HnH\\\"],\\\"id\\\":\\\"627\\\"}\"]","thisId":"668","channelHost":"edabit.com","id":"668","opcode":"1","channelId":"2","timestamp":"1652648843563"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"SnZ5y2hyxjZnWrMec\\\"],\\\"id\\\":\\\"628\\\"}\"]","thisId":"669","channelHost":"edabit.com","id":"669","opcode":"1","channelId":"2","timestamp":"1652648843564"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"n63bWFSAxgh3Qwhvn\\\"],\\\"id\\\":\\\"629\\\"}\"]","thisId":"670","channelHost":"edabit.com","id":"670","opcode":"1","channelId":"2","timestamp":"1652648843564"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"hTWrPnnCScgSsoN9A\\\"],\\\"id\\\":\\\"630\\\"}\"]","thisId":"671","channelHost":"edabit.com","id":"671","opcode":"1","channelId":"2","timestamp":"1652648843576"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"jQzopNeMisCmY4Fum\\\"],\\\"id\\\":\\\"632\\\"}\"]","thisId":"672","channelHost":"edabit.com","id":"672","opcode":"1","channelId":"2","timestamp":"1652648843576"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"XgaeYwf9NRx4f4iY7\\\"],\\\"id\\\":\\\"631\\\"}\"]","thisId":"673","channelHost":"edabit.com","id":"673","opcode":"1","channelId":"2","timestamp":"1652648843576"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"dPeRoAK4HDhQfuk4n\\\"],\\\"id\\\":\\\"633\\\"}\"]","thisId":"674","channelHost":"edabit.com","id":"674","opcode":"1","channelId":"2","timestamp":"1652648843576"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"WC9acAYzqvPk2MjGj\\\"],\\\"id\\\":\\\"634\\\"}\"]","thisId":"675","channelHost":"edabit.com","id":"675","opcode":"1","channelId":"2","timestamp":"1652648843576"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"j3pBTZLXSo7JJ2iAy\\\"],\\\"id\\\":\\\"635\\\"}\"]","thisId":"676","channelHost":"edabit.com","id":"676","opcode":"1","channelId":"2","timestamp":"1652648843576"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"vpSCPsQKcQwnFdMS4\\\"],\\\"id\\\":\\\"636\\\"}\"]","thisId":"677","channelHost":"edabit.com","id":"677","opcode":"1","channelId":"2","timestamp":"1652648843577"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"7TCtjPThGdrSDHQK5\\\"],\\\"id\\\":\\\"637\\\"}\"]","thisId":"678","channelHost":"edabit.com","id":"678","opcode":"1","channelId":"2","timestamp":"1652648843577"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"2seaqQz4fvLDCLJz2\\\"],\\\"id\\\":\\\"638\\\"}\"]","thisId":"679","channelHost":"edabit.com","id":"679","opcode":"1","channelId":"2","timestamp":"1652648843578"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"kJu2Hvsr4L2BRZqHW\\\"],\\\"id\\\":\\\"639\\\"}\"]","thisId":"680","channelHost":"edabit.com","id":"680","opcode":"1","channelId":"2","timestamp":"1652648843578"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"3yzvdLMYJbczD548d\\\"],\\\"id\\\":\\\"640\\\"}\"]","thisId":"681","channelHost":"edabit.com","id":"681","opcode":"1","channelId":"2","timestamp":"1652648843578"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"3SdTEG59DAA4cPBFR\\\"],\\\"id\\\":\\\"641\\\"}\"]","thisId":"682","channelHost":"edabit.com","id":"682","opcode":"1","channelId":"2","timestamp":"1652648843580"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"6KPGPdQDCXsHYaQTL\\\"],\\\"id\\\":\\\"642\\\"}\"]","thisId":"683","channelHost":"edabit.com","id":"683","opcode":"1","channelId":"2","timestamp":"1652648843580"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"MfkWhtu67fD5d5YM2\\\"],\\\"id\\\":\\\"643\\\"}\"]","thisId":"684","channelHost":"edabit.com","id":"684","opcode":"1","channelId":"2","timestamp":"1652648843581"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"kHLmnk3RhekGKe7fP\\\"],\\\"id\\\":\\\"644\\\"}\"]","thisId":"685","channelHost":"edabit.com","id":"685","opcode":"1","channelId":"2","timestamp":"1652648843581"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"7PSvBgGjiA252WdiN\\\"],\\\"id\\\":\\\"645\\\"}\"]","thisId":"686","channelHost":"edabit.com","id":"686","opcode":"1","channelId":"2","timestamp":"1652648843581"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"P2aqoBtZj6GCsdFsY\\\"],\\\"id\\\":\\\"646\\\"}\"]","thisId":"687","channelHost":"edabit.com","id":"687","opcode":"1","channelId":"2","timestamp":"1652648843607"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"jzECwjcK3LZ3YXhXC\\\"],\\\"id\\\":\\\"647\\\"}\"]","thisId":"688","channelHost":"edabit.com","id":"688","opcode":"1","channelId":"2","timestamp":"1652648843612"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"u7hFpEuA2oFoaxwsi\\\"],\\\"id\\\":\\\"648\\\"}\"]","thisId":"689","channelHost":"edabit.com","id":"689","opcode":"1","channelId":"2","timestamp":"1652648843613"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"BqiQJWgrntvEKhgPS\\\"],\\\"id\\\":\\\"649\\\"}\"]","thisId":"690","channelHost":"edabit.com","id":"690","opcode":"1","channelId":"2","timestamp":"1652648843613"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"kKQPf5xTAdnBjqvZ8\\\"],\\\"id\\\":\\\"650\\\"}\"]","thisId":"691","channelHost":"edabit.com","id":"691","opcode":"1","channelId":"2","timestamp":"1652648843613"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"W8zoCps44yDxckivb\\\"],\\\"id\\\":\\\"651\\\"}\"]","thisId":"692","channelHost":"edabit.com","id":"692","opcode":"1","channelId":"2","timestamp":"1652648843613"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"GZzE4tix4JutSyp4S\\\"],\\\"id\\\":\\\"652\\\"}\"]","thisId":"693","channelHost":"edabit.com","id":"693","opcode":"1","channelId":"2","timestamp":"1652648843614"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"FRMkLfEBFM7bykHEt\\\"],\\\"id\\\":\\\"653\\\"}\"]","thisId":"694","channelHost":"edabit.com","id":"694","opcode":"1","channelId":"2","timestamp":"1652648843614"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"tA2pDTyaW7MeTK5rD\\\"],\\\"id\\\":\\\"654\\\"}\"]","thisId":"695","channelHost":"edabit.com","id":"695","opcode":"1","channelId":"2","timestamp":"1652648843615"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"7DRLdMehCk9eWFWyR\\\"],\\\"id\\\":\\\"655\\\"}\"]","thisId":"696","channelHost":"edabit.com","id":"696","opcode":"1","channelId":"2","timestamp":"1652648843615"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"a68pt3brD2hGF2Mqe\\\"],\\\"id\\\":\\\"656\\\"}\"]","thisId":"697","channelHost":"edabit.com","id":"697","opcode":"1","channelId":"2","timestamp":"1652648843615"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"iqEb9gZi2jgNR99At\\\"],\\\"id\\\":\\\"657\\\"}\"]","thisId":"698","channelHost":"edabit.com","id":"698","opcode":"1","channelId":"2","timestamp":"1652648843616"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"5GGu4JKvSBPyhAbry\\\"],\\\"id\\\":\\\"658\\\"}\"]","thisId":"699","channelHost":"edabit.com","id":"699","opcode":"1","channelId":"2","timestamp":"1652648843616"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"WtxvjezcFYGQo2v48\\\"],\\\"id\\\":\\\"659\\\"}\"]","thisId":"700","channelHost":"edabit.com","id":"700","opcode":"1","channelId":"2","timestamp":"1652648843617"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"tJNLCKPzNg3e9Whdt\\\"],\\\"id\\\":\\\"660\\\"}\"]","thisId":"701","channelHost":"edabit.com","id":"701","opcode":"1","channelId":"2","timestamp":"1652648843618"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"KXs93N4RX6jNSsgCr\\\"],\\\"id\\\":\\\"661\\\"}\"]","thisId":"702","channelHost":"edabit.com","id":"702","opcode":"1","channelId":"2","timestamp":"1652648843618"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"JLQ4upWrq5LkzdhPE\\\"],\\\"id\\\":\\\"662\\\"}\"]","thisId":"703","channelHost":"edabit.com","id":"703","opcode":"1","channelId":"2","timestamp":"1652648843618"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"JmuM2cP5MvruRjr6c\\\"],\\\"id\\\":\\\"663\\\"}\"]","thisId":"704","channelHost":"edabit.com","id":"704","opcode":"1","channelId":"2","timestamp":"1652648843642"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"KZrmicjc8zCZyGNee\\\"],\\\"id\\\":\\\"664\\\"}\"]","thisId":"705","channelHost":"edabit.com","id":"705","opcode":"1","channelId":"2","timestamp":"1652648843642"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"kCAnEEzWdbYr3ps2c\\\"],\\\"id\\\":\\\"665\\\"}\"]","thisId":"706","channelHost":"edabit.com","id":"706","opcode":"1","channelId":"2","timestamp":"1652648843642"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"fKZ6m9rDHDvgp6aeu\\\"],\\\"id\\\":\\\"666\\\"}\"]","thisId":"707","channelHost":"edabit.com","id":"707","opcode":"1","channelId":"2","timestamp":"1652648843642"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"5DAuj96xupYTbFTXw\\\"],\\\"id\\\":\\\"667\\\"}\"]","thisId":"708","channelHost":"edabit.com","id":"708","opcode":"1","channelId":"2","timestamp":"1652648843642"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"PZh6svj6RjiQishTG\\\"],\\\"id\\\":\\\"668\\\"}\"]","thisId":"709","channelHost":"edabit.com","id":"709","opcode":"1","channelId":"2","timestamp":"1652648843644"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"DhwkubnGy7mwZ2xt9\\\"],\\\"id\\\":\\\"669\\\"}\"]","thisId":"710","channelHost":"edabit.com","id":"710","opcode":"1","channelId":"2","timestamp":"1652648843644"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"t9S9nNr79pLqjXgqb\\\"],\\\"id\\\":\\\"670\\\"}\"]","thisId":"711","channelHost":"edabit.com","id":"711","opcode":"1","channelId":"2","timestamp":"1652648843644"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"44bnzeLuDh3ofHxXi\\\"],\\\"id\\\":\\\"671\\\"}\"]","thisId":"712","channelHost":"edabit.com","id":"712","opcode":"1","channelId":"2","timestamp":"1652648843645"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"a242aPZGmmx8xhiuy\\\"],\\\"id\\\":\\\"672\\\"}\"]","thisId":"713","channelHost":"edabit.com","id":"713","opcode":"1","channelId":"2","timestamp":"1652648843645"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"acQwyrd5NcZvgGQhW\\\"],\\\"id\\\":\\\"673\\\"}\"]","thisId":"714","channelHost":"edabit.com","id":"714","opcode":"1","channelId":"2","timestamp":"1652648843646"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"4CyrhFrHGFkFvyk4b\\\"],\\\"id\\\":\\\"674\\\"}\"]","thisId":"715","channelHost":"edabit.com","id":"715","opcode":"1","channelId":"2","timestamp":"1652648843648"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"CxQRCDQHv5Ps8HnR6\\\"],\\\"id\\\":\\\"675\\\"}\"]","thisId":"716","channelHost":"edabit.com","id":"716","opcode":"1","channelId":"2","timestamp":"1652648843648"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"qRRYmmyTRBhJJNMwq\\\"],\\\"id\\\":\\\"676\\\"}\"]","thisId":"717","channelHost":"edabit.com","id":"717","opcode":"1","channelId":"2","timestamp":"1652648843649"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"8dFqh23xMpfFf85Wb\\\"],\\\"id\\\":\\\"677\\\"}\"]","thisId":"718","channelHost":"edabit.com","id":"718","opcode":"1","channelId":"2","timestamp":"1652648843649"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"iaKJJoxdk5GNDqzJC\\\"],\\\"id\\\":\\\"678\\\"}\"]","thisId":"719","channelHost":"edabit.com","id":"719","opcode":"1","channelId":"2","timestamp":"1652648843649"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"9P6yDuSZxYTihMtT6\\\"],\\\"id\\\":\\\"679\\\"}\"]","thisId":"720","channelHost":"edabit.com","id":"720","opcode":"1","channelId":"2","timestamp":"1652648843672"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"FPemghc8ut9xfaMGo\\\"],\\\"id\\\":\\\"680\\\"}\"]","thisId":"721","channelHost":"edabit.com","id":"721","opcode":"1","channelId":"2","timestamp":"1652648843672"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"QwGgDuvWtFmDTeRHw\\\"],\\\"id\\\":\\\"681\\\"}\"]","thisId":"722","channelHost":"edabit.com","id":"722","opcode":"1","channelId":"2","timestamp":"1652648843673"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"G6dgZvzjWjoDsqECg\\\"],\\\"id\\\":\\\"682\\\"}\"]","thisId":"723","channelHost":"edabit.com","id":"723","opcode":"1","channelId":"2","timestamp":"1652648843673"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"DeZSpmYFRDzqsP7Qi\\\"],\\\"id\\\":\\\"683\\\"}\"]","thisId":"724","channelHost":"edabit.com","id":"724","opcode":"1","channelId":"2","timestamp":"1652648843673"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"RvxGLMzoPoBgXhcaC\\\"],\\\"id\\\":\\\"684\\\"}\"]","thisId":"725","channelHost":"edabit.com","id":"725","opcode":"1","channelId":"2","timestamp":"1652648843673"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"JYaLkHy8cHgCPXAvy\\\"],\\\"id\\\":\\\"685\\\"}\"]","thisId":"726","channelHost":"edabit.com","id":"726","opcode":"1","channelId":"2","timestamp":"1652648843674"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"xAe7W7WctsNkF5BwW\\\"],\\\"id\\\":\\\"686\\\"}\"]","thisId":"727","channelHost":"edabit.com","id":"727","opcode":"1","channelId":"2","timestamp":"1652648843674"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"jvyJ6xmPyrWab2MeX\\\"],\\\"id\\\":\\\"687\\\"}\"]","thisId":"728","channelHost":"edabit.com","id":"728","opcode":"1","channelId":"2","timestamp":"1652648843675"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"SSxwbYon9Y7GjSD4k\\\"],\\\"id\\\":\\\"688\\\"}\"]","thisId":"729","channelHost":"edabit.com","id":"729","opcode":"1","channelId":"2","timestamp":"1652648843675"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"iT6NpDYyCycHuc2L3\\\"],\\\"id\\\":\\\"689\\\"}\"]","thisId":"730","channelHost":"edabit.com","id":"730","opcode":"1","channelId":"2","timestamp":"1652648843675"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"S5y88pjHnpr3qd5BD\\\"],\\\"id\\\":\\\"690\\\"}\"]","thisId":"731","channelHost":"edabit.com","id":"731","opcode":"1","channelId":"2","timestamp":"1652648843676"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"vCqkPQ2ATmpqxaDgT\\\"],\\\"id\\\":\\\"691\\\"}\"]","thisId":"732","channelHost":"edabit.com","id":"732","opcode":"1","channelId":"2","timestamp":"1652648843676"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"2aajqTB69y7ZSSo9v\\\"],\\\"id\\\":\\\"692\\\"}\"]","thisId":"733","channelHost":"edabit.com","id":"733","opcode":"1","channelId":"2","timestamp":"1652648843677"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"x6vucQsSp6yA3ay4M\\\"],\\\"id\\\":\\\"693\\\"}\"]","thisId":"734","channelHost":"edabit.com","id":"734","opcode":"1","channelId":"2","timestamp":"1652648843677"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"NwSd26PwgggJquov3\\\"],\\\"id\\\":\\\"694\\\"}\"]","thisId":"735","channelHost":"edabit.com","id":"735","opcode":"1","channelId":"2","timestamp":"1652648843677"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"hj5YbZ7u7cAWzEvCB\\\"],\\\"id\\\":\\\"695\\\"}\"]","thisId":"736","channelHost":"edabit.com","id":"736","opcode":"1","channelId":"2","timestamp":"1652648843701"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"d9DKamDvmX6TiSd5u\\\"],\\\"id\\\":\\\"696\\\"}\"]","thisId":"737","channelHost":"edabit.com","id":"737","opcode":"1","channelId":"2","timestamp":"1652648843701"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"3iDnqHWoSgKzYerPZ\\\"],\\\"id\\\":\\\"697\\\"}\"]","thisId":"738","channelHost":"edabit.com","id":"738","opcode":"1","channelId":"2","timestamp":"1652648843701"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"D3MvMGRxTsN3mtNkH\\\"],\\\"id\\\":\\\"698\\\"}\"]","thisId":"739","channelHost":"edabit.com","id":"739","opcode":"1","channelId":"2","timestamp":"1652648843701"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"A8xQZTqzkn88cLCmj\\\"],\\\"id\\\":\\\"699\\\"}\"]","thisId":"740","channelHost":"edabit.com","id":"740","opcode":"1","channelId":"2","timestamp":"1652648843701"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"GnspyiCzpSMJuobmP\\\"],\\\"id\\\":\\\"700\\\"}\"]","thisId":"741","channelHost":"edabit.com","id":"741","opcode":"1","channelId":"2","timestamp":"1652648843702"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"YMT2d6RFcsvNv58cd\\\"],\\\"id\\\":\\\"701\\\"}\"]","thisId":"742","channelHost":"edabit.com","id":"742","opcode":"1","channelId":"2","timestamp":"1652648843703"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ccKJ7Rvu7hsxMTYcw\\\"],\\\"id\\\":\\\"702\\\"}\"]","thisId":"743","channelHost":"edabit.com","id":"743","opcode":"1","channelId":"2","timestamp":"1652648843703"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"6CkRcCdGAmCGPZnyb\\\"],\\\"id\\\":\\\"703\\\"}\"]","thisId":"744","channelHost":"edabit.com","id":"744","opcode":"1","channelId":"2","timestamp":"1652648843703"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"bpqfCQ7zumf5Ep24Z\\\"],\\\"id\\\":\\\"704\\\"}\"]","thisId":"745","channelHost":"edabit.com","id":"745","opcode":"1","channelId":"2","timestamp":"1652648843704"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"d5FL6or864rxqhATT\\\"],\\\"id\\\":\\\"705\\\"}\"]","thisId":"746","channelHost":"edabit.com","id":"746","opcode":"1","channelId":"2","timestamp":"1652648843704"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"i3vx6M7poKZoZi8iK\\\"],\\\"id\\\":\\\"706\\\"}\"]","thisId":"747","channelHost":"edabit.com","id":"747","opcode":"1","channelId":"2","timestamp":"1652648843705"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"HssePSisNvLpv72zD\\\"],\\\"id\\\":\\\"707\\\"}\"]","thisId":"748","channelHost":"edabit.com","id":"748","opcode":"1","channelId":"2","timestamp":"1652648843705"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"2j6h73ixjYW9FdtP2\\\"],\\\"id\\\":\\\"708\\\"}\"]","thisId":"749","channelHost":"edabit.com","id":"749","opcode":"1","channelId":"2","timestamp":"1652648843705"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"7gaPYwZiZzAwQvi2q\\\"],\\\"id\\\":\\\"709\\\"}\"]","thisId":"750","channelHost":"edabit.com","id":"750","opcode":"1","channelId":"2","timestamp":"1652648843706"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"JyskomdFw4tYgAELT\\\"],\\\"id\\\":\\\"710\\\"}\"]","thisId":"751","channelHost":"edabit.com","id":"751","opcode":"1","channelId":"2","timestamp":"1652648843706"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"QdENiEqqhHtYFrk5A\\\"],\\\"id\\\":\\\"711\\\"}\"]","thisId":"752","channelHost":"edabit.com","id":"752","opcode":"1","channelId":"2","timestamp":"1652648843731"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"zjEdKiuKbmhXMx993\\\"],\\\"id\\\":\\\"712\\\"}\"]","thisId":"753","channelHost":"edabit.com","id":"753","opcode":"1","channelId":"2","timestamp":"1652648843731"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Jtufg4A5WJMDk4FRT\\\"],\\\"id\\\":\\\"713\\\"}\"]","thisId":"754","channelHost":"edabit.com","id":"754","opcode":"1","channelId":"2","timestamp":"1652648843731"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"8Pgn2HjatQgF9Rdu8\\\"],\\\"id\\\":\\\"714\\\"}\"]","thisId":"755","channelHost":"edabit.com","id":"755","opcode":"1","channelId":"2","timestamp":"1652648843731"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"jH4wEAk4gXZommdfo\\\"],\\\"id\\\":\\\"715\\\"}\"]","thisId":"756","channelHost":"edabit.com","id":"756","opcode":"1","channelId":"2","timestamp":"1652648843731"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"QdrLgb37ZZwYMKXwi\\\"],\\\"id\\\":\\\"716\\\"}\"]","thisId":"757","channelHost":"edabit.com","id":"757","opcode":"1","channelId":"2","timestamp":"1652648843732"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"De5e8kdsCFmKvc6w8\\\"],\\\"id\\\":\\\"717\\\"}\"]","thisId":"758","channelHost":"edabit.com","id":"758","opcode":"1","channelId":"2","timestamp":"1652648843733"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ze68rGX45ajtjuBNX\\\"],\\\"id\\\":\\\"718\\\"}\"]","thisId":"759","channelHost":"edabit.com","id":"759","opcode":"1","channelId":"2","timestamp":"1652648843734"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"njGTBhXa7zP3pvsnp\\\"],\\\"id\\\":\\\"719\\\"}\"]","thisId":"760","channelHost":"edabit.com","id":"760","opcode":"1","channelId":"2","timestamp":"1652648843734"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"jGYvAq5bpZhicYMWW\\\"],\\\"id\\\":\\\"720\\\"}\"]","thisId":"761","channelHost":"edabit.com","id":"761","opcode":"1","channelId":"2","timestamp":"1652648843735"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"uqZD99bDGx3LnSv6w\\\"],\\\"id\\\":\\\"721\\\"}\"]","thisId":"762","channelHost":"edabit.com","id":"762","opcode":"1","channelId":"2","timestamp":"1652648843737"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"tNKWXJZPgRHZAc9Ja\\\"],\\\"id\\\":\\\"722\\\"}\"]","thisId":"763","channelHost":"edabit.com","id":"763","opcode":"1","channelId":"2","timestamp":"1652648843737"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"H3TMp2swn3Q3sCxpv\\\"],\\\"id\\\":\\\"723\\\"}\"]","thisId":"764","channelHost":"edabit.com","id":"764","opcode":"1","channelId":"2","timestamp":"1652648843738"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"HJSpyCG7we27Afkqn\\\"],\\\"id\\\":\\\"724\\\"}\"]","thisId":"765","channelHost":"edabit.com","id":"765","opcode":"1","channelId":"2","timestamp":"1652648843738"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"hkKL3KuKpAcgcKdp3\\\"],\\\"id\\\":\\\"725\\\"}\"]","thisId":"766","channelHost":"edabit.com","id":"766","opcode":"1","channelId":"2","timestamp":"1652648843738"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"mdimqTJv7pRS3sYZu\\\"],\\\"id\\\":\\\"726\\\"}\"]","thisId":"767","channelHost":"edabit.com","id":"767","opcode":"1","channelId":"2","timestamp":"1652648843738"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"KbLqgHtYt6TR2oCHQ\\\"],\\\"id\\\":\\\"727\\\"}\"]","thisId":"768","channelHost":"edabit.com","id":"768","opcode":"1","channelId":"2","timestamp":"1652648843759"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"inPpSzkuRCocLM3x2\\\"],\\\"id\\\":\\\"729\\\"}\"]","thisId":"769","channelHost":"edabit.com","id":"769","opcode":"1","channelId":"2","timestamp":"1652648843759"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"gDYfzq68mthtmX4Q5\\\"],\\\"id\\\":\\\"728\\\"}\"]","thisId":"770","channelHost":"edabit.com","id":"770","opcode":"1","channelId":"2","timestamp":"1652648843759"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"qBueZpCx5YfQYj5j2\\\"],\\\"id\\\":\\\"730\\\"}\"]","thisId":"771","channelHost":"edabit.com","id":"771","opcode":"1","channelId":"2","timestamp":"1652648843759"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"MvFCbkJeZ8Ydq3sPp\\\"],\\\"id\\\":\\\"731\\\"}\"]","thisId":"772","channelHost":"edabit.com","id":"772","opcode":"1","channelId":"2","timestamp":"1652648843759"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"qafJTrENQeMq6apgy\\\"],\\\"id\\\":\\\"732\\\"}\"]","thisId":"773","channelHost":"edabit.com","id":"773","opcode":"1","channelId":"2","timestamp":"1652648843760"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"EiemTcctcJXCn6eJa\\\"],\\\"id\\\":\\\"733\\\"}\"]","thisId":"774","channelHost":"edabit.com","id":"774","opcode":"1","channelId":"2","timestamp":"1652648843760"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"9qSNiDpyqipHFmdwp\\\"],\\\"id\\\":\\\"734\\\"}\"]","thisId":"775","channelHost":"edabit.com","id":"775","opcode":"1","channelId":"2","timestamp":"1652648843760"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"NPJYA7qfRsPxDiaNz\\\"],\\\"id\\\":\\\"735\\\"}\"]","thisId":"776","channelHost":"edabit.com","id":"776","opcode":"1","channelId":"2","timestamp":"1652648843761"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"wqvzvSroyNwifv35B\\\"],\\\"id\\\":\\\"736\\\"}\"]","thisId":"777","channelHost":"edabit.com","id":"777","opcode":"1","channelId":"2","timestamp":"1652648843761"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"iWRbMto8cT7D3Rppx\\\"],\\\"id\\\":\\\"737\\\"}\"]","thisId":"778","channelHost":"edabit.com","id":"778","opcode":"1","channelId":"2","timestamp":"1652648843761"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Ebw8nnRzgFcWgY5p8\\\"],\\\"id\\\":\\\"738\\\"}\"]","thisId":"779","channelHost":"edabit.com","id":"779","opcode":"1","channelId":"2","timestamp":"1652648843761"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"C8EQJybQWzv6WsQdd\\\"],\\\"id\\\":\\\"739\\\"}\"]","thisId":"780","channelHost":"edabit.com","id":"780","opcode":"1","channelId":"2","timestamp":"1652648843762"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"xxig52timWewkiJxY\\\"],\\\"id\\\":\\\"740\\\"}\"]","thisId":"781","channelHost":"edabit.com","id":"781","opcode":"1","channelId":"2","timestamp":"1652648843762"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"cwyHz8adjAg6dpxce\\\"],\\\"id\\\":\\\"741\\\"}\"]","thisId":"782","channelHost":"edabit.com","id":"782","opcode":"1","channelId":"2","timestamp":"1652648843764"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"f7KeKyNK9BRm9DuCX\\\"],\\\"id\\\":\\\"742\\\"}\"]","thisId":"783","channelHost":"edabit.com","id":"783","opcode":"1","channelId":"2","timestamp":"1652648843764"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"zjpgz6YswDeLKfrAA\\\"],\\\"id\\\":\\\"743\\\"}\"]","thisId":"784","channelHost":"edabit.com","id":"784","opcode":"1","channelId":"2","timestamp":"1652648843789"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"BfLgSs2YAtjDYEyJM\\\"],\\\"id\\\":\\\"744\\\"}\"]","thisId":"785","channelHost":"edabit.com","id":"785","opcode":"1","channelId":"2","timestamp":"1652648843789"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Zsjvvf7Kir8wJr8vM\\\"],\\\"id\\\":\\\"745\\\"}\"]","thisId":"786","channelHost":"edabit.com","id":"786","opcode":"1","channelId":"2","timestamp":"1652648843789"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"FToTLuiB7bmFngkjr\\\"],\\\"id\\\":\\\"746\\\"}\"]","thisId":"787","channelHost":"edabit.com","id":"787","opcode":"1","channelId":"2","timestamp":"1652648843789"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"KnpqDdkibon22Eexa\\\"],\\\"id\\\":\\\"747\\\"}\"]","thisId":"788","channelHost":"edabit.com","id":"788","opcode":"1","channelId":"2","timestamp":"1652648843789"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"y86z2FK3r3uLJrGvu\\\"],\\\"id\\\":\\\"748\\\"}\"]","thisId":"789","channelHost":"edabit.com","id":"789","opcode":"1","channelId":"2","timestamp":"1652648843791"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"powuANEDgMh8bxDry\\\"],\\\"id\\\":\\\"749\\\"}\"]","thisId":"790","channelHost":"edabit.com","id":"790","opcode":"1","channelId":"2","timestamp":"1652648843792"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"SrdMmMwXn5TAKTx9w\\\"],\\\"id\\\":\\\"750\\\"}\"]","thisId":"791","channelHost":"edabit.com","id":"791","opcode":"1","channelId":"2","timestamp":"1652648843792"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"BbaB4feCYJWPtFmcg\\\"],\\\"id\\\":\\\"751\\\"}\"]","thisId":"792","channelHost":"edabit.com","id":"792","opcode":"1","channelId":"2","timestamp":"1652648843792"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"TXFh4mGekgo6Jgyzz\\\"],\\\"id\\\":\\\"752\\\"}\"]","thisId":"793","channelHost":"edabit.com","id":"793","opcode":"1","channelId":"2","timestamp":"1652648843793"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"XXF7YysFvEqv4FJ8n\\\"],\\\"id\\\":\\\"753\\\"}\"]","thisId":"794","channelHost":"edabit.com","id":"794","opcode":"1","channelId":"2","timestamp":"1652648843793"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"RdwGosFoQQT6Z82sm\\\"],\\\"id\\\":\\\"754\\\"}\"]","thisId":"795","channelHost":"edabit.com","id":"795","opcode":"1","channelId":"2","timestamp":"1652648843795"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"p38KD5Far2g72fv3d\\\"],\\\"id\\\":\\\"755\\\"}\"]","thisId":"796","channelHost":"edabit.com","id":"796","opcode":"1","channelId":"2","timestamp":"1652648843796"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"jLbdG6YvkYCizS662\\\"],\\\"id\\\":\\\"756\\\"}\"]","thisId":"797","channelHost":"edabit.com","id":"797","opcode":"1","channelId":"2","timestamp":"1652648843796"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"kJpXCjfuWjpLGdc5g\\\"],\\\"id\\\":\\\"757\\\"}\"]","thisId":"798","channelHost":"edabit.com","id":"798","opcode":"1","channelId":"2","timestamp":"1652648843797"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"DbqdoQDMv88NHSgi4\\\"],\\\"id\\\":\\\"758\\\"}\"]","thisId":"799","channelHost":"edabit.com","id":"799","opcode":"1","channelId":"2","timestamp":"1652648843797"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"YPqsC4RCQ99REvQAn\\\"],\\\"id\\\":\\\"759\\\"}\"]","thisId":"800","channelHost":"edabit.com","id":"800","opcode":"1","channelId":"2","timestamp":"1652648843818"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"rqum6rzyZQrC43Ldv\\\"],\\\"id\\\":\\\"760\\\"}\"]","thisId":"801","channelHost":"edabit.com","id":"801","opcode":"1","channelId":"2","timestamp":"1652648843818"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"8b6hgBwoRAzqbAbYA\\\"],\\\"id\\\":\\\"761\\\"}\"]","thisId":"802","channelHost":"edabit.com","id":"802","opcode":"1","channelId":"2","timestamp":"1652648843818"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Mo8ErS2pcwNakKsAF\\\"],\\\"id\\\":\\\"763\\\"}\"]","thisId":"803","channelHost":"edabit.com","id":"803","opcode":"1","channelId":"2","timestamp":"1652648843818"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Sk3DXY6ZdwAKj6r8d\\\"],\\\"id\\\":\\\"762\\\"}\"]","thisId":"804","channelHost":"edabit.com","id":"804","opcode":"1","channelId":"2","timestamp":"1652648843818"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"sLasdN8jqehbeqHtT\\\"],\\\"id\\\":\\\"764\\\"}\"]","thisId":"805","channelHost":"edabit.com","id":"805","opcode":"1","channelId":"2","timestamp":"1652648843819"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"eBkknBKXvMm8bDo8M\\\"],\\\"id\\\":\\\"765\\\"}\"]","thisId":"806","channelHost":"edabit.com","id":"806","opcode":"1","channelId":"2","timestamp":"1652648843819"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"k3pg4uMgKcDA95sqb\\\"],\\\"id\\\":\\\"766\\\"}\"]","thisId":"807","channelHost":"edabit.com","id":"807","opcode":"1","channelId":"2","timestamp":"1652648843820"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"mDbeein6NJgDjYy3c\\\"],\\\"id\\\":\\\"767\\\"}\"]","thisId":"808","channelHost":"edabit.com","id":"808","opcode":"1","channelId":"2","timestamp":"1652648843820"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ctWQp4tZCf7J4zmo2\\\"],\\\"id\\\":\\\"768\\\"}\"]","thisId":"809","channelHost":"edabit.com","id":"809","opcode":"1","channelId":"2","timestamp":"1652648843820"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"YzWb77MowQpixfpWh\\\"],\\\"id\\\":\\\"769\\\"}\"]","thisId":"810","channelHost":"edabit.com","id":"810","opcode":"1","channelId":"2","timestamp":"1652648843821"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"2MR6qaWfxR4pYpGGo\\\"],\\\"id\\\":\\\"770\\\"}\"]","thisId":"811","channelHost":"edabit.com","id":"811","opcode":"1","channelId":"2","timestamp":"1652648843821"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"W7juRdtzze5ZbrfbJ\\\"],\\\"id\\\":\\\"771\\\"}\"]","thisId":"812","channelHost":"edabit.com","id":"812","opcode":"1","channelId":"2","timestamp":"1652648843822"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"jfCsugyp9BSLYEtwb\\\"],\\\"id\\\":\\\"772\\\"}\"]","thisId":"813","channelHost":"edabit.com","id":"813","opcode":"1","channelId":"2","timestamp":"1652648843824"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"3FAMXz4wAYGqpCtDR\\\"],\\\"id\\\":\\\"773\\\"}\"]","thisId":"814","channelHost":"edabit.com","id":"814","opcode":"1","channelId":"2","timestamp":"1652648843825"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Mgrj26S3LwM8CLAdL\\\"],\\\"id\\\":\\\"774\\\"}\"]","thisId":"815","channelHost":"edabit.com","id":"815","opcode":"1","channelId":"2","timestamp":"1652648843825"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"rNYqwDqDFZwjZ6A4g\\\"],\\\"id\\\":\\\"775\\\"}\"]","thisId":"816","channelHost":"edabit.com","id":"816","opcode":"1","channelId":"2","timestamp":"1652648843846"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"8zSSCYQRKC9wWWbkN\\\"],\\\"id\\\":\\\"776\\\"}\"]","thisId":"817","channelHost":"edabit.com","id":"817","opcode":"1","channelId":"2","timestamp":"1652648843846"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"9f6TiyJsgxAstgNLg\\\"],\\\"id\\\":\\\"777\\\"}\"]","thisId":"818","channelHost":"edabit.com","id":"818","opcode":"1","channelId":"2","timestamp":"1652648843846"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"YLdgd8dav2joTpXbn\\\"],\\\"id\\\":\\\"778\\\"}\"]","thisId":"819","channelHost":"edabit.com","id":"819","opcode":"1","channelId":"2","timestamp":"1652648843846"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Fy2ySuj6XK5mxrsgR\\\"],\\\"id\\\":\\\"779\\\"}\"]","thisId":"820","channelHost":"edabit.com","id":"820","opcode":"1","channelId":"2","timestamp":"1652648843846"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"gvfWZYpmkAu99TKWt\\\"],\\\"id\\\":\\\"780\\\"}\"]","thisId":"821","channelHost":"edabit.com","id":"821","opcode":"1","channelId":"2","timestamp":"1652648843848"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Rarq6J9wR8FsN2qQ4\\\"],\\\"id\\\":\\\"781\\\"}\"]","thisId":"822","channelHost":"edabit.com","id":"822","opcode":"1","channelId":"2","timestamp":"1652648843848"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"3Xc4sz3PpyWPDw5b3\\\"],\\\"id\\\":\\\"782\\\"}\"]","thisId":"823","channelHost":"edabit.com","id":"823","opcode":"1","channelId":"2","timestamp":"1652648843848"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ABgaWqqn2XDjBqwKy\\\"],\\\"id\\\":\\\"783\\\"}\"]","thisId":"824","channelHost":"edabit.com","id":"824","opcode":"1","channelId":"2","timestamp":"1652648843849"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Y6hNbTncED6dp6gFu\\\"],\\\"id\\\":\\\"784\\\"}\"]","thisId":"825","channelHost":"edabit.com","id":"825","opcode":"1","channelId":"2","timestamp":"1652648843849"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"iZNdGSDXyRMmHrNNn\\\"],\\\"id\\\":\\\"785\\\"}\"]","thisId":"826","channelHost":"edabit.com","id":"826","opcode":"1","channelId":"2","timestamp":"1652648843849"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"RkicZ4kkcSx8K3d4e\\\"],\\\"id\\\":\\\"786\\\"}\"]","thisId":"827","channelHost":"edabit.com","id":"827","opcode":"1","channelId":"2","timestamp":"1652648843850"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"qN7mnqKz6Y7WeMnLo\\\"],\\\"id\\\":\\\"787\\\"}\"]","thisId":"828","channelHost":"edabit.com","id":"828","opcode":"1","channelId":"2","timestamp":"1652648843850"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"oibF2LtNoiGsJuj6b\\\"],\\\"id\\\":\\\"788\\\"}\"]","thisId":"829","channelHost":"edabit.com","id":"829","opcode":"1","channelId":"2","timestamp":"1652648843850"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"9obr3kYYua78Lw6yH\\\"],\\\"id\\\":\\\"789\\\"}\"]","thisId":"830","channelHost":"edabit.com","id":"830","opcode":"1","channelId":"2","timestamp":"1652648843851"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"zZCARMRzJ2sHLbgwe\\\"],\\\"id\\\":\\\"790\\\"}\"]","thisId":"831","channelHost":"edabit.com","id":"831","opcode":"1","channelId":"2","timestamp":"1652648843851"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"M69ui5BrdTjACd3R3\\\"],\\\"id\\\":\\\"791\\\"}\"]","thisId":"832","channelHost":"edabit.com","id":"832","opcode":"1","channelId":"2","timestamp":"1652648843876"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Sj2kws46RQfxdv6Wj\\\"],\\\"id\\\":\\\"792\\\"}\"]","thisId":"833","channelHost":"edabit.com","id":"833","opcode":"1","channelId":"2","timestamp":"1652648843876"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"r2gd399TcG56Bvim5\\\"],\\\"id\\\":\\\"793\\\"}\"]","thisId":"834","channelHost":"edabit.com","id":"834","opcode":"1","channelId":"2","timestamp":"1652648843876"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"TcLfFXvBvDqRL82a2\\\"],\\\"id\\\":\\\"794\\\"}\"]","thisId":"835","channelHost":"edabit.com","id":"835","opcode":"1","channelId":"2","timestamp":"1652648843876"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"2caPynMewSbRfRZ7X\\\"],\\\"id\\\":\\\"795\\\"}\"]","thisId":"836","channelHost":"edabit.com","id":"836","opcode":"1","channelId":"2","timestamp":"1652648843876"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"owwJbMCXJBv9n5FJD\\\"],\\\"id\\\":\\\"796\\\"}\"]","thisId":"837","channelHost":"edabit.com","id":"837","opcode":"1","channelId":"2","timestamp":"1652648843880"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"6dEDvruWbEDqXb7dk\\\"],\\\"id\\\":\\\"797\\\"}\"]","thisId":"838","channelHost":"edabit.com","id":"838","opcode":"1","channelId":"2","timestamp":"1652648843881"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"hbHJdMv4HubYs5TRv\\\"],\\\"id\\\":\\\"798\\\"}\"]","thisId":"839","channelHost":"edabit.com","id":"839","opcode":"1","channelId":"2","timestamp":"1652648843881"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"EtW6o2eH88C89NYzw\\\"],\\\"id\\\":\\\"799\\\"}\"]","thisId":"840","channelHost":"edabit.com","id":"840","opcode":"1","channelId":"2","timestamp":"1652648843882"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"e3GaeWuJQ38fsFKS2\\\"],\\\"id\\\":\\\"800\\\"}\"]","thisId":"841","channelHost":"edabit.com","id":"841","opcode":"1","channelId":"2","timestamp":"1652648843882"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"m8TRkJiYwahSR58dX\\\"],\\\"id\\\":\\\"801\\\"}\"]","thisId":"842","channelHost":"edabit.com","id":"842","opcode":"1","channelId":"2","timestamp":"1652648843884"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"CsTELuWcqFAQYhwpY\\\"],\\\"id\\\":\\\"802\\\"}\"]","thisId":"843","channelHost":"edabit.com","id":"843","opcode":"1","channelId":"2","timestamp":"1652648843885"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"HH3FuLpBAf6gkb9L4\\\"],\\\"id\\\":\\\"803\\\"}\"]","thisId":"844","channelHost":"edabit.com","id":"844","opcode":"1","channelId":"2","timestamp":"1652648843885"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"XPrHkBXC9XjsewuzC\\\"],\\\"id\\\":\\\"804\\\"}\"]","thisId":"845","channelHost":"edabit.com","id":"845","opcode":"1","channelId":"2","timestamp":"1652648843885"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"SYTk43tp4y6oA5zGn\\\"],\\\"id\\\":\\\"805\\\"}\"]","thisId":"846","channelHost":"edabit.com","id":"846","opcode":"1","channelId":"2","timestamp":"1652648843885"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Bs8bX5B5NT22YB9zh\\\"],\\\"id\\\":\\\"806\\\"}\"]","thisId":"847","channelHost":"edabit.com","id":"847","opcode":"1","channelId":"2","timestamp":"1652648843886"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"iY6e9fMQSWi38J699\\\"],\\\"id\\\":\\\"807\\\"}\"]","thisId":"848","channelHost":"edabit.com","id":"848","opcode":"1","channelId":"2","timestamp":"1652648843903"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"MLzJD3iHnYZo566nA\\\"],\\\"id\\\":\\\"808\\\"}\"]","thisId":"849","channelHost":"edabit.com","id":"849","opcode":"1","channelId":"2","timestamp":"1652648843903"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"3niLvRRFXTRsZ27yF\\\"],\\\"id\\\":\\\"809\\\"}\"]","thisId":"850","channelHost":"edabit.com","id":"850","opcode":"1","channelId":"2","timestamp":"1652648843903"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"XRXcuP6QjH9CuqqwY\\\"],\\\"id\\\":\\\"810\\\"}\"]","thisId":"851","channelHost":"edabit.com","id":"851","opcode":"1","channelId":"2","timestamp":"1652648843903"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"9fu8xW6yQkPxyM6rG\\\"],\\\"id\\\":\\\"811\\\"}\"]","thisId":"852","channelHost":"edabit.com","id":"852","opcode":"1","channelId":"2","timestamp":"1652648843903"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"nWRGJeLJ3gvzMSGvS\\\"],\\\"id\\\":\\\"812\\\"}\"]","thisId":"853","channelHost":"edabit.com","id":"853","opcode":"1","channelId":"2","timestamp":"1652648843903"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"BWm34MorRuaJXiaz6\\\"],\\\"id\\\":\\\"813\\\"}\"]","thisId":"854","channelHost":"edabit.com","id":"854","opcode":"1","channelId":"2","timestamp":"1652648843904"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"7yhhtWf9xaP7LDtHz\\\"],\\\"id\\\":\\\"814\\\"}\"]","thisId":"855","channelHost":"edabit.com","id":"855","opcode":"1","channelId":"2","timestamp":"1652648843904"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Q89oMEPgug3kpERBT\\\"],\\\"id\\\":\\\"815\\\"}\"]","thisId":"856","channelHost":"edabit.com","id":"856","opcode":"1","channelId":"2","timestamp":"1652648843905"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"cDhtEXjmyrKj9etsZ\\\"],\\\"id\\\":\\\"816\\\"}\"]","thisId":"857","channelHost":"edabit.com","id":"857","opcode":"1","channelId":"2","timestamp":"1652648843905"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"pxfkEdxgXPKgy7FEb\\\"],\\\"id\\\":\\\"817\\\"}\"]","thisId":"858","channelHost":"edabit.com","id":"858","opcode":"1","channelId":"2","timestamp":"1652648843905"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"xCrsQ4E3qYkGvbeAw\\\"],\\\"id\\\":\\\"818\\\"}\"]","thisId":"859","channelHost":"edabit.com","id":"859","opcode":"1","channelId":"2","timestamp":"1652648843906"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"5s8AXfbk4X2Dmimrk\\\"],\\\"id\\\":\\\"819\\\"}\"]","thisId":"860","channelHost":"edabit.com","id":"860","opcode":"1","channelId":"2","timestamp":"1652648843906"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"i4SSMeuxhnSR2QKtx\\\"],\\\"id\\\":\\\"820\\\"}\"]","thisId":"861","channelHost":"edabit.com","id":"861","opcode":"1","channelId":"2","timestamp":"1652648843906"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"gCzqqRMAScwWPSRoY\\\"],\\\"id\\\":\\\"821\\\"}\"]","thisId":"862","channelHost":"edabit.com","id":"862","opcode":"1","channelId":"2","timestamp":"1652648843908"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"EDZj2oGeLTKgDSJzc\\\"],\\\"id\\\":\\\"822\\\"}\"]","thisId":"863","channelHost":"edabit.com","id":"863","opcode":"1","channelId":"2","timestamp":"1652648843909"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Ls6pbLkC9wfYuaDgm\\\"],\\\"id\\\":\\\"824\\\"}\"]","thisId":"864","channelHost":"edabit.com","id":"864","opcode":"1","channelId":"2","timestamp":"1652648843933"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"ecR654j7ivFqs2WPi\\\"],\\\"id\\\":\\\"823\\\"}\"]","thisId":"865","channelHost":"edabit.com","id":"865","opcode":"1","channelId":"2","timestamp":"1652648843933"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"9PfRkNR2Ersu2CwTG\\\"],\\\"id\\\":\\\"825\\\"}\"]","thisId":"866","channelHost":"edabit.com","id":"866","opcode":"1","channelId":"2","timestamp":"1652648843933"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"eeXtztKiDe7sEYbZP\\\"],\\\"id\\\":\\\"826\\\"}\"]","thisId":"867","channelHost":"edabit.com","id":"867","opcode":"1","channelId":"2","timestamp":"1652648843933"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"h3rDzi2j5t2h7jtJi\\\"],\\\"id\\\":\\\"827\\\"}\"]","thisId":"868","channelHost":"edabit.com","id":"868","opcode":"1","channelId":"2","timestamp":"1652648843933"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"5tNkD75pLSkAqBFnD\\\"],\\\"id\\\":\\\"828\\\"}\"]","thisId":"869","channelHost":"edabit.com","id":"869","opcode":"1","channelId":"2","timestamp":"1652648843935"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"rwGzp85CNxvdCADAL\\\"],\\\"id\\\":\\\"829\\\"}\"]","thisId":"870","channelHost":"edabit.com","id":"870","opcode":"1","channelId":"2","timestamp":"1652648843935"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Zg5gHdtBMx2knzrdE\\\"],\\\"id\\\":\\\"830\\\"}\"]","thisId":"871","channelHost":"edabit.com","id":"871","opcode":"1","channelId":"2","timestamp":"1652648843935"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"745DLsFEmEQqdA6m3\\\"],\\\"id\\\":\\\"831\\\"}\"]","thisId":"872","channelHost":"edabit.com","id":"872","opcode":"1","channelId":"2","timestamp":"1652648843936"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"34xjPfMzkyYzJnzxw\\\"],\\\"id\\\":\\\"832\\\"}\"]","thisId":"873","channelHost":"edabit.com","id":"873","opcode":"1","channelId":"2","timestamp":"1652648843936"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"5X4wuS6eGsx2iz3cy\\\"],\\\"id\\\":\\\"833\\\"}\"]","thisId":"874","channelHost":"edabit.com","id":"874","opcode":"1","channelId":"2","timestamp":"1652648843936"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Gqs4Rzdq5tXNH7RKX\\\"],\\\"id\\\":\\\"834\\\"}\"]","thisId":"875","channelHost":"edabit.com","id":"875","opcode":"1","channelId":"2","timestamp":"1652648843936"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"HJCqdv4A3TMHrEvrk\\\"],\\\"id\\\":\\\"835\\\"}\"]","thisId":"876","channelHost":"edabit.com","id":"876","opcode":"1","channelId":"2","timestamp":"1652648843939"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"2XSjprYKQMFpMqwJd\\\"],\\\"id\\\":\\\"836\\\"}\"]","thisId":"877","channelHost":"edabit.com","id":"877","opcode":"1","channelId":"2","timestamp":"1652648843949"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"CDs32gcYBoqQpk44j\\\"],\\\"id\\\":\\\"837\\\"}\"]","thisId":"878","channelHost":"edabit.com","id":"878","opcode":"1","channelId":"2","timestamp":"1652648843949"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"kBguc5wSQtSoTyMyd\\\"],\\\"id\\\":\\\"838\\\"}\"]","thisId":"879","channelHost":"edabit.com","id":"879","opcode":"1","channelId":"2","timestamp":"1652648843950"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"zARWST6dTceWpoeA7\\\"],\\\"id\\\":\\\"839\\\"}\"]","thisId":"880","channelHost":"edabit.com","id":"880","opcode":"1","channelId":"2","timestamp":"1652648843961"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"LGKApTn5MRT7wYkcc\\\"],\\\"id\\\":\\\"840\\\"}\"]","thisId":"881","channelHost":"edabit.com","id":"881","opcode":"1","channelId":"2","timestamp":"1652648843961"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"xNoC5g5rnT5R8YJqb\\\"],\\\"id\\\":\\\"842\\\"}\"]","thisId":"882","channelHost":"edabit.com","id":"882","opcode":"1","channelId":"2","timestamp":"1652648843961"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"SRSgm5r3P6tRZPRAy\\\"],\\\"id\\\":\\\"841\\\"}\"]","thisId":"883","channelHost":"edabit.com","id":"883","opcode":"1","channelId":"2","timestamp":"1652648843961"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"aBm55e7eoE8zYkgo5\\\"],\\\"id\\\":\\\"843\\\"}\"]","thisId":"884","channelHost":"edabit.com","id":"884","opcode":"1","channelId":"2","timestamp":"1652648843961"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"6QmLJWeMazDnxeXaX\\\"],\\\"id\\\":\\\"844\\\"}\"]","thisId":"885","channelHost":"edabit.com","id":"885","opcode":"1","channelId":"2","timestamp":"1652648843967"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"3BKwQipQry86wYwLo\\\"],\\\"id\\\":\\\"845\\\"}\"]","thisId":"886","channelHost":"edabit.com","id":"886","opcode":"1","channelId":"2","timestamp":"1652648843973"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"do3FXijRWDakuQART\\\"],\\\"id\\\":\\\"846\\\"}\"]","thisId":"887","channelHost":"edabit.com","id":"887","opcode":"1","channelId":"2","timestamp":"1652648843973"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"imM3Hz44BLEPCKoFe\\\"],\\\"id\\\":\\\"847\\\"}\"]","thisId":"888","channelHost":"edabit.com","id":"888","opcode":"1","channelId":"2","timestamp":"1652648843973"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"Jfw8TqjNtNnq5jtkA\\\"],\\\"id\\\":\\\"848\\\"}\"]","thisId":"889","channelHost":"edabit.com","id":"889","opcode":"1","channelId":"2","timestamp":"1652648843974"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"SoyrGdNNwZLYSgwGe\\\"],\\\"id\\\":\\\"849\\\"}\"]","thisId":"890","channelHost":"edabit.com","id":"890","opcode":"1","channelId":"2","timestamp":"1652648843974"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"fSohszsuqKXYDDjGb\\\"],\\\"id\\\":\\\"850\\\"}\"]","thisId":"891","channelHost":"edabit.com","id":"891","opcode":"1","channelId":"2","timestamp":"1652648843974"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"106","payloadFragment":"[\"{\\\"msg\\\":\\\"method\\\",\\\"method\\\":\\\"getChallengeData\\\",\\\"params\\\":[\\\"YdKPDaRgdxzhfdduR\\\"],\\\"id\\\":\\\"851\\\"}\"]","thisId":"892","channelHost":"edabit.com","id":"892","opcode":"1","channelId":"2","timestamp":"1652648843975"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"46","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"6\\\"]}\"]","thisId":"893","channelHost":"edabit.com","id":"893","opcode":"1","channelId":"2","timestamp":"1652648844042"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"318989","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"6\\\",\\\"result\\\":{\\\"_id\\\":\\\"8Ty2vq2YtcBp6CFc8\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class SumOfTwoNumbers {\\\\n    public static int sum(int a, int b) {\\\\n      \\\\n    }\\\\n}\\\",\\\"difficulty\\\":0.2670361917182915,\\\"familyId\\\":\\\"qRMZ4fgWxGAm6YaJK\\\",\\\"instructions\\\":\\\"Create a method that takes two integers as arguments and returns their sum.\\\\n\\\\n### Examples\\\\n```\\\\nSumOfTwoNumbers(3, 2) ➞ 5\\\\n\\\\nSumOfTwoNumbers(-3, -6) ➞ -9\\\\n\\\\nSumOfTwoNumbers(7, 3) ➞ 10\\\\n```\\\\n\\\\n### Notes\\\\n- Don't forget to `return` the result.\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're *really* stuck, unlock solutions in the **Solutions** tab.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class SumOfTwoNumbersTest {\\\\n\\\\n    @Test\\\\n    public void test1(){\\\\n        int expected = 5;\\\\n        int actual = SumOfTwoNumbers.sum(3, 2);\\\\n        assertEquals(expect","thisId":"894","channelHost":"edabit.com","id":"894","opcode":"1","channelId":"2","timestamp":"1652648844105"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"46","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"5\\\"]}\"]","thisId":"895","channelHost":"edabit.com","id":"895","opcode":"1","channelId":"2","timestamp":"1652648844592"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"381763","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"5\\\",\\\"result\\\":{\\\"_id\\\":\\\"L7z5EW4MSoGBi6cXP\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n    public static boolean returnTrue() {\\\\n      \\\\n    }\\\\n}\\\",\\\"difficulty\\\":0.20308393201331698,\\\"familyId\\\":\\\"DfdQKmyXAiNb3A5DQ\\\",\\\"instructions\\\":\\\"This is an introduction to how challenges on Edabit work. In the **Code tab above** you'll see a starter function that looks like this:\\\\n\\\\n```\\\\npublic static boolean returnTrue() {\\\\n\\\\n}\\\\n```\\\\n\\\\nAll you have to do is type `return true;` between the curly braces `{ }` and then click the **Check** button. If you did this correctly, the button will turn red and say **SUBMIT FINAL**. Click it and see what happens.\\\\n\\\\n### Notes\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're *really* stuck, unlock solutions in the **Solutions** tab.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class","thisId":"896","channelHost":"edabit.com","id":"896","opcode":"1","channelId":"2","timestamp":"1652648844618"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"10\\\"]}\"]","thisId":"897","channelHost":"edabit.com","id":"897","opcode":"1","channelId":"2","timestamp":"1652648845565"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"26440","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"10\\\",\\\"result\\\":{\\\"_id\\\":\\\"XJxu5LCnqN9K8SXm5\\\",\\\"author\\\":\\\"goodhero4u\\\",\\\"authorId\\\":\\\"GiqPq82is4HGWdZHA\\\",\\\"code\\\":\\\"public class Solution {\\\\n\\\\tpublic static int getVoteCount(int upvotes,int downvotes) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.3406060606060606,\\\"familyId\\\":\\\"ieenxLnQeFTJooLA6\\\",\\\"instructions\\\":\\\"Given an object containing counts of both upvotes and downvotes, return what vote count should be displayed. This is calculated by subtracting the number of downvotes from upvotes.\\\\n\\\\n### Examples\\\\n```\\\\ngetVoteCount({ upvotes: 13, downvotes: 0 }) ➞ 13\\\\n\\\\ngetVoteCount({ upvotes: 2, downvotes: 33 }) ➞ -31\\\\n\\\\ngetVoteCount({ upvotes: 132, downvotes: 132 }) ➞ 0\\\\n```\\\\n\\\\n### Notes\\\\nYou can expect only positive integers for vote counts.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\n\\\\npublic class TestSolution {\\\\n\\\\t@Test\\\\n\\\\tpublic  void test1(){\\\\n\\\\t\\\\tassert(Solution.getVoteCount(13,  0)== 13);\\\\n\\\\t}\\\\n\\\\t\\\\n","thisId":"898","channelHost":"edabit.com","id":"898","opcode":"1","channelId":"2","timestamp":"1652648845605"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"11\\\"]}\"]","thisId":"899","channelHost":"edabit.com","id":"899","opcode":"1","channelId":"2","timestamp":"1652648845909"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"212764","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"11\\\",\\\"result\\\":{\\\"_id\\\":\\\"DmFnzAQzWhyRWdKPi\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int howManySeconds(int hours) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.34329845540607873,\\\"familyId\\\":\\\"BqdWYtP7zT7tcNJKs\\\",\\\"instructions\\\":\\\"Write a function that converts `hours` into seconds.\\\\n\\\\n### Examples\\\\n```\\\\nhowManySeconds(2) ➞ 7200\\\\n\\\\nhowManySeconds(10) ➞ 36000\\\\n\\\\nhowManySeconds(24) ➞ 86400\\\\n```\\\\n\\\\n### Notes\\\\n- 60 seconds in a minute, 60 minutes in an hour\\\\n- Don't forget to `return` your answer.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(7200, Challenge.howManySeconds(2));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(36000, Challenge.howManySeconds(10));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test3() {\\\\n    assertEquals(86400, Challenge.howManySecond","thisId":"900","channelHost":"edabit.com","id":"900","opcode":"1","channelId":"2","timestamp":"1652648845925"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"12\\\"]}\"]","thisId":"901","channelHost":"edabit.com","id":"901","opcode":"1","channelId":"2","timestamp":"1652648846201"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"177482","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"12\\\",\\\"result\\\":{\\\"_id\\\":\\\"cMKLM7ExBd3TFJwPA\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int findPerimeter(int length, int width) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.34927015020097313,\\\"familyId\\\":\\\"R6yuNPRBnbT6cTZnb\\\",\\\"instructions\\\":\\\"Create a function that takes `length` and `width` and finds the perimeter of a rectangle.\\\\n\\\\n### Examples\\\\n```\\\\nfindPerimeter(6, 7) ➞ 26\\\\n\\\\nfindPerimeter(20, 10) ➞ 60\\\\n\\\\nfindPerimeter(2, 9) ➞ 22\\\\n```\\\\n\\\\n### Notes\\\\n- Don't forget to `return` the result.\\\\n- If you're stuck, find help in the **Resources** tab.\\\\n- If you're really stuck, find solutions in the **Solutions** tab.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(26, Challenge.findPerimeter(6, 7));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEqu","thisId":"902","channelHost":"edabit.com","id":"902","opcode":"1","channelId":"2","timestamp":"1652648846221"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"15\\\"]}\"]","thisId":"903","channelHost":"edabit.com","id":"903","opcode":"1","channelId":"2","timestamp":"1652648846444"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"214678","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"15\\\",\\\"result\\\":{\\\"_id\\\":\\\"zBhuXyFeSQdizC5LW\\\",\\\"author\\\":\\\"rubens\\\",\\\"authorId\\\":\\\"XhzKztoQYYQzZ2c7o\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int nextEdge(int side1, int side2) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.3515315029360419,\\\"familyId\\\":\\\"ydWDoBRpEJMDbCD2e\\\",\\\"instructions\\\":\\\"Create a function that finds the maximum range of a triangle's third edge, where the side lengths are all integers.\\\\n\\\\n### Examples\\\\n```\\\\nnextEdge(8, 10) ➞ 17\\\\n\\\\nnextEdge(5, 7) ➞ 11\\\\n\\\\nnextEdge(9, 2) ➞ 10\\\\n```\\\\n\\\\n### Notes\\\\n- `(side1 + side2) - 1` = maximum range of third edge.\\\\n- The side lengths of the triangle are positive integers.\\\\n- Don't forget to `return` the result.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTest {\\\\n\\\\t@Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertThat(Challenge.nextEdge(5, 4), is(8));\\\\n\\\\t}\\\\n\\\\n\\\\t@Test\\\\n\\\\tpublic void test2() {\\\\","thisId":"904","channelHost":"edabit.com","id":"904","opcode":"1","channelId":"2","timestamp":"1652648846496"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"14\\\"]}\"]","thisId":"905","channelHost":"edabit.com","id":"905","opcode":"1","channelId":"2","timestamp":"1652648846791"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"191642","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"14\\\",\\\"result\\\":{\\\"_id\\\":\\\"gdRGePvnZDfQGDS8g\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean isEqual(int num1, int num2) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.35135135135135137,\\\"familyId\\\":\\\"TEA7oMv4ttWFyvsNR\\\",\\\"instructions\\\":\\\"Create a function that takes two integers and checks if they are equal.\\\\n\\\\n### Examples\\\\n```\\\\nisEqual(5, 6) ➞ false\\\\n\\\\nisEqual(1, 1) ➞ true\\\\n\\\\nisEqual(36, 35) ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(true, Challenge.isEqual(2, 2));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(true, Challenge.isEqual(88, 88));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test3() {\\\\n    assertEquals(false, Challenge.isEqual(36, 35));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test4() {\\\\n    assertEquals(true, Ch","thisId":"906","channelHost":"edabit.com","id":"906","opcode":"1","channelId":"2","timestamp":"1652648846810"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"13\\\"]}\"]","thisId":"907","channelHost":"edabit.com","id":"907","opcode":"1","channelId":"2","timestamp":"1652648847016"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"72145","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"13\\\",\\\"result\\\":{\\\"_id\\\":\\\"6MTtawFBLqDRSqiSf\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Circuit {\\\\n\\\\tpublic static int power(int voltage, int current) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.34981458590852904,\\\"familyId\\\":\\\"TqGMEHd6ohb5YvKL5\\\",\\\"instructions\\\":\\\"Create a function that takes `voltage` and `current ` and returns the calculated **power**.\\\\n\\\\n### Examples\\\\n```\\\\npower(230, 10) ➞ 2300\\\\n\\\\npower(110, 3) ➞ 330\\\\n\\\\npower(480, 20) ➞ 9600\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals;\\\\nimport org.junit.Test;\\\\n\\\\npublic class CircuitTests {\\\\n\\\\t@Test\\\\n\\\\tpublic void test01() {\\\\n\\\\t\\\\tassertEquals(Circuit.power(230, 10), 2300);\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test\\\\n\\\\tpublic void test02() {\\\\n\\\\t\\\\tassertEquals(Circuit.power(110, 3), 330);\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test\\\\n\\\\tpublic void test03() {\\\\n\\\\t\\\\tassertEquals(Circuit.power(480, 20), 9","thisId":"908","channelHost":"edabit.com","id":"908","opcode":"1","channelId":"2","timestamp":"1652648847028"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"17\\\"]}\"]","thisId":"909","channelHost":"edabit.com","id":"909","opcode":"1","channelId":"2","timestamp":"1652648847149"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"212579","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"17\\\",\\\"result\\\":{\\\"_id\\\":\\\"EP66YmuNMWhRZdniY\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n    public static boolean lessThanOrEqualToZero(int num) {\\\\n      \\\\n    }\\\\n}\\\",\\\"difficulty\\\":0.3616319184040798,\\\"familyId\\\":\\\"9urbQf2Yg8G83Hj49\\\",\\\"instructions\\\":\\\"Create a method that takes an integer as its only argument and returns `true` if it's less than or equal to zero, otherwise return `false`.\\\\n\\\\n### Examples\\\\n```\\\\nlessThanOrEqualToZero(5) ➞ false\\\\n\\\\nlessThanOrEqualToZero(0) ➞ true\\\\n\\\\nlessThanOrEqualToZero(-2) ➞ true\\\\n```\\\\n\\\\n### Notes\\\\n- Don't forget to `return` the result.\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're *really* stuck, unlock solutions in the **Solutions** tab.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ProgramTest {\\\\n\\\\n    @Test\\\\n    public void test1(){\\\\n        assertEquals(fa","thisId":"910","channelHost":"edabit.com","id":"910","opcode":"1","channelId":"2","timestamp":"1652648847161"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"16\\\"]}\"]","thisId":"911","channelHost":"edabit.com","id":"911","opcode":"1","channelId":"2","timestamp":"1652648847306"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"208866","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"16\\\",\\\"result\\\":{\\\"_id\\\":\\\"B4HjZbBh9yuELmjna\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int triArea(int base, int height) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.35211721139913055,\\\"familyId\\\":\\\"8ccAzSfRFNwJ6aczX\\\",\\\"instructions\\\":\\\"Write a function that takes the base and height of a triangle and `return` its area.\\\\n\\\\n### Examples\\\\n```\\\\ntriArea(3, 2) ➞ 3\\\\n\\\\ntriArea(7, 4) ➞ 14\\\\n\\\\ntriArea(10, 10) ➞ 50\\\\n```\\\\n\\\\n### Notes\\\\n- The area of a triangle is: `(base * height) / 2`\\\\n- Don't forget to `return` the result.\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're *really* stuck, unlock solutions in the **Solutions** tab.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertEquals(3, Challenge.triArea(3, 2));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test \\\\n\\\\tpublic v","thisId":"912","channelHost":"edabit.com","id":"912","opcode":"1","channelId":"2","timestamp":"1652648847323"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"21\\\"]}\"]","thisId":"913","channelHost":"edabit.com","id":"913","opcode":"1","channelId":"2","timestamp":"1652648847444"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"26996","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"21\\\",\\\"result\\\":{\\\"_id\\\":\\\"Phy3ESenwRH6KNytm\\\",\\\"author\\\":\\\"Mubashir Hassan \\\",\\\"authorId\\\":\\\"T6iBEE2jp7f7iEF2P\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static String nameString(String name) {\\\\n\\\\t\\\\t  String b == \\\\\\\"Edabit\\\\\\\";\\\\n\\\\t\\\\t  String result == name + b;\\\\n\\\\t\\\\t  return result;\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.3679417122040073,\\\"familyId\\\":\\\"mGcyu48RuYhfa8rSx\\\",\\\"instructions\\\":\\\"A student learning Java was trying to make a function. His code should concatenate a passed string `name` with string `\\\\\\\"Edabit\\\\\\\"` and store it in a variable called `result`. He needs your help to fix this code.\\\\n\\\\n### Examples\\\\n```\\\\nnameString(\\\\\\\"Mubashir\\\\\\\") ➞ \\\\\\\"MubashirEdabit\\\\\\\"\\\\n\\\\nnameString(\\\\\\\"Matt\\\\\\\") ➞ \\\\\\\"MattEdabit\\\\\\\"\\\\n\\\\nnameString(\\\\\\\"java\\\\\\\") ➞ \\\\\\\"javaEdabit\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Don't forget to return the result.\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're _really_ stuck, unlock solutions in the **Solu","thisId":"914","channelHost":"edabit.com","id":"914","opcode":"1","channelId":"2","timestamp":"1652648847452"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"20\\\"]}\"]","thisId":"915","channelHost":"edabit.com","id":"915","opcode":"1","channelId":"2","timestamp":"1652648847574"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"26064","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"20\\\",\\\"result\\\":{\\\"_id\\\":\\\"BeW6HMLCfGzHxkzbe\\\",\\\"author\\\":\\\"_fluffyy\\\",\\\"authorId\\\":\\\"foytX6kH9wiSYqLtT\\\",\\\"code\\\":\\\"public final class Challenge {\\\\n  public static boolean isSeven(int x) {\\\\n\\\\treturn x = 7;\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.3663003663003663,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"bmLjrPvmWwiY8Pvwn\\\",\\\"instructions\\\":\\\"Fix the code in the **Code** tab so the function returns `true` *if and only if* `x` is equal to `7`.\\\\n\\\\n### Examples\\\\n```\\\\nChallenge.isSeven(4) ➞ false\\\\n\\\\nChallenge.isSeven(9) ➞ false\\\\n\\\\nChallenge.isSeven(7) ➞ true\\\\n```\\\\n\\\\n### Notes\\\\nThe bug can be hard to find, so look closely!\\\",\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\npublic final class Tests {                        @Test public void test1()\\\\n  { assertEquals(false, Challenge.isSeven(4)); }   @Test public void test2()\\\\n  { assertEquals(false, Challenge.isSeven(9)); }   @Test public void test3()\\","thisId":"916","channelHost":"edabit.com","id":"916","opcode":"1","channelId":"2","timestamp":"1652648847579"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"19\\\"]}\"]","thisId":"917","channelHost":"edabit.com","id":"917","opcode":"1","channelId":"2","timestamp":"1652648847685"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"75142","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"19\\\",\\\"result\\\":{\\\"_id\\\":\\\"ZuoKAgmH8G2vHtLzi\\\",\\\"author\\\":\\\"Caleb Miller\\\",\\\"authorId\\\":\\\"2QziknsznNeMPRh3g\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static String giveMeSomething(String a) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.36529041287613717,\\\"familyId\\\":\\\"d5jBYgrg7Dg5KiDt9\\\",\\\"instructions\\\":\\\"Write a function that returns the string `\\\\\\\"something\\\\\\\"` joined with a space `\\\\\\\" \\\\\\\"` and the given argument `a`.\\\\n\\\\n### Examples\\\\n```\\\\ngiveMeSomething(\\\\\\\"is better than nothing\\\\\\\") ➞ \\\\\\\"something is better than nothing\\\\\\\"\\\\n\\\\ngiveMeSomething(\\\\\\\"Bob Jane\\\\\\\") ➞ \\\\\\\"something Bob Jane\\\\\\\"\\\\n\\\\ngiveMeSomething(\\\\\\\"something\\\\\\\") ➞ \\\\\\\"something something\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nAssume an input is given.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ProgramTest {\\\\n\\\\t\\\\t@Test\\\\n\\\\t  public void test1() {\\\\n\\\\t\\\\t\\\\t  assertEquals(\\\\\\\"something a\\\\\\\", Program.giveMeSomething(\\\\\\\"a\\\\\\\"))","thisId":"918","channelHost":"edabit.com","id":"918","opcode":"1","channelId":"2","timestamp":"1652648847700"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"18\\\"]}\"]","thisId":"919","channelHost":"edabit.com","id":"919","opcode":"1","channelId":"2","timestamp":"1652648847832"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"181611","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"18\\\",\\\"result\\\":{\\\"_id\\\":\\\"RNMKdSEhxdxf2fWsa\\\",\\\"author\\\":\\\"username\\\",\\\"authorId\\\":\\\"sutFYfmbnfeZ43eh6\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static int remainder(int a, int b) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.3635257301808067,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"oZzshyq7aKsjPgrbR\\\",\\\"instructions\\\":\\\"There is a single operator in Java, capable of providing the remainder of a division operation. Two numbers are passed as parameters. The first parameter divided by the second parameter will have a remainder, possibly zero. Return that value.\\\\n\\\\n### Examples\\\\n```\\\\nremainder(1, 3) ➞ 1\\\\n\\\\nremainder(3, 4) ➞ 3\\\\n\\\\nremainder(-9, 45) ➞ -9\\\\n\\\\nremainder(5, 5) ➞ 0\\\\n```\\\\n\\\\n### Notes\\\\n- The tests only use positive and negative integers.\\\\n- Don't forget to `return` the result.\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're *really* stuck, unlock solutions in the **Solutions** tab.\\\",\\\"lab\\\":\\\"import org.junit","thisId":"920","channelHost":"edabit.com","id":"920","opcode":"1","channelId":"2","timestamp":"1652648847843"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"22\\\"]}\"]","thisId":"921","channelHost":"edabit.com","id":"921","opcode":"1","channelId":"2","timestamp":"1652648847963"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"65168","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"22\\\",\\\"result\\\":{\\\"_id\\\":\\\"eqcCH2WbEXFLDyiQi\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Age {\\\\n\\\\tpublic static int calcAge(int age) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.37045203969129,\\\"familyId\\\":\\\"qYgAb7wHSBrnHBha3\\\",\\\"instructions\\\":\\\"Create a function that takes the age in years and returns the age in days.\\\\n\\\\n### Examples\\\\n```\\\\ncalcAge(65) ➞ 23725\\\\n\\\\ncalcAge(0) ➞ 0\\\\n\\\\ncalcAge(20) ➞ 7300\\\\n```\\\\n\\\\n### Notes\\\\n- Use **365 days** as the length of a year for this challenge.\\\\n- Ignore leap years and days between last birthday and now.\\\\n- Expect only positive integer inputs.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals;\\\\nimport org.junit.Test;\\\\n\\\\npublic class AgeTests {\\\\n\\\\t@Test\\\\n\\\\tpublic void test01() {\\\\n\\\\t\\\\tassertEquals(Age.calcAge(10), 3650);\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test\\\\n\\\\tpublic void test02() {\\\\n\\\\t\\\\tassertEquals(Age.calcAge(0), 0);\\\\n\\\\t","thisId":"922","channelHost":"edabit.com","id":"922","opcode":"1","channelId":"2","timestamp":"1652648847975"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"23\\\"]}\"]","thisId":"923","channelHost":"edabit.com","id":"923","opcode":"1","channelId":"2","timestamp":"1652648848080"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"124853","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"23\\\",\\\"result\\\":{\\\"_id\\\":\\\"FSKb2sKrGoejfJLrd\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean lessThan100(int a, int b) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.3723404255319149,\\\"familyId\\\":\\\"KuwTEpA3kfX8mqrmu\\\",\\\"instructions\\\":\\\"Given two numbers, return `true` if the sum of both numbers is less than 100. Otherwise return `false`.\\\\n\\\\n### Examples\\\\n```\\\\nlessThan100(22, 15) ➞ true\\\\n// 22 + 15 = 37\\\\n\\\\nlessThan100(83, 34) ➞ false\\\\n// 83 + 34 = 117\\\\n\\\\nlessThan100(3, 77) ➞ true\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(true, Challenge.lessThan100(5, 57));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(false, Challenge.lessThan100(77, 30));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test3() {\\\\n    assertEquals(tru","thisId":"924","channelHost":"edabit.com","id":"924","opcode":"1","channelId":"2","timestamp":"1652648848087"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"24\\\"]}\"]","thisId":"925","channelHost":"edabit.com","id":"925","opcode":"1","channelId":"2","timestamp":"1652648848200"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"119237","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"24\\\",\\\"result\\\":{\\\"_id\\\":\\\"JAtN6KLtahAkmT3n3\\\",\\\"author\\\":\\\"rubens\\\",\\\"authorId\\\":\\\"XhzKztoQYYQzZ2c7o\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String helloName(String name) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.3731540084388186,\\\"familyId\\\":\\\"2G2RQQfN4CbPanr7T\\\",\\\"instructions\\\":\\\"Create a function that takes a name and returns a greeting in the form of a string.\\\\n\\\\n### Examples\\\\n```\\\\nhelloName(\\\\\\\"Gerald\\\\\\\") ➞ \\\\\\\"Hello Gerald!\\\\\\\"\\\\n\\\\nhelloName(\\\\\\\"Tiffany\\\\\\\") ➞ \\\\\\\"Hello Tiffany!\\\\\\\"\\\\n\\\\nhelloName(\\\\\\\"Ed\\\\\\\") ➞ \\\\\\\"Hello Ed!\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- The input is always a name (as string).\\\\n- Don't forget the exclamation mark!\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're *really* stuck, unlock solutions in the **Solutions** tab.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTest {\\\\n\\\\t@Test\\\\n  public ","thisId":"926","channelHost":"edabit.com","id":"926","opcode":"1","channelId":"2","timestamp":"1652648848215"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"25\\\"]}\"]","thisId":"927","channelHost":"edabit.com","id":"927","opcode":"1","channelId":"2","timestamp":"1652648848322"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"132076","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"25\\\",\\\"result\\\":{\\\"_id\\\":\\\"ZdHBAkK9qfFCNKfPQ\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Polygon { \\\\n\\\\tpublic static int sumOfAngles(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.37318840579710144,\\\"familyId\\\":\\\"dwbd9rk57jkMveMSx\\\",\\\"instructions\\\":\\\"Given an n-sided regular polygon `n`, return the total **sum of internal angles** (in degrees).\\\\n\\\\n### Examples\\\\n```\\\\nsumOfAngles(3) ➞ 180\\\\n\\\\nsumOfAngles(4) ➞ 360\\\\n\\\\nsumOfAngles(6) ➞ 720\\\\n```\\\\n\\\\n### Notes\\\\n- `n` will always be greater than 2.\\\\n- The formula **(n - 2) x 180** gives the sum of all the measures of the angles of an **n-sided** polygon.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals; \\\\nimport org.junit.Test; \\\\n\\\\npublic class PolygonTest {\\\\n\\\\t@Test\\\\n\\\\tpublic void test001() { \\\\n\\\\t\\\\tassertEquals(180, Polygon.sumOfAngles(3));\\\\n\\\\t}\\\\n\\\\n\\\\t@Test\\\\n\\\\tpublic void test002() { \\\\n\\\\t\\\\tassert","thisId":"928","channelHost":"edabit.com","id":"928","opcode":"1","channelId":"2","timestamp":"1652648848330"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"26\\\"]}\"]","thisId":"929","channelHost":"edabit.com","id":"929","opcode":"1","channelId":"2","timestamp":"1652648848433"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"130769","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"26\\\",\\\"result\\\":{\\\"_id\\\":\\\"eKRNd9YqFNAXKuGxd\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int animals(int chickens, int cows, int pigs) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.37549407114624506,\\\"familyId\\\":\\\"bSdQG75oLm9Bpo3au\\\",\\\"instructions\\\":\\\"In this challenge, a farmer is asking you to tell him how many legs can be counted among all his animals. The farmer breeds three species:\\\\n\\\\n- `chickens` = 2 legs\\\\n- `cows` = 4 legs\\\\n- `pigs` = 4 legs\\\\n\\\\nThe farmer has counted his animals and he gives you a subtotal for each species. You have to implement a function that returns the **total number of legs** of all the animals.\\\\n\\\\n### Examples\\\\n```\\\\nanimals(2, 3, 5) ➞ 36\\\\n\\\\nanimals(1, 2, 3) ➞ 22\\\\n\\\\nanimals(5, 2, 8) ➞ 50\\\\n```\\\\n\\\\n### Notes\\\\n- Don't forget to `return` the result.\\\\n- The order of animals passed is `animals(chickens, cows, pigs)`.\\\\n- Remember that the farmer wants to know the **tota","thisId":"930","channelHost":"edabit.com","id":"930","opcode":"1","channelId":"2","timestamp":"1652648848441"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"27\\\"]}\"]","thisId":"931","channelHost":"edabit.com","id":"931","opcode":"1","channelId":"2","timestamp":"1652648848567"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"70113","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"27\\\",\\\"result\\\":{\\\"_id\\\":\\\"wWsD84bEGZgWp6NN5\\\",\\\"author\\\":\\\"akhilrepalle\\\",\\\"authorId\\\":\\\"fADAnmvM4LibcQWTr\\\",\\\"code\\\":\\\"public class Program {\\\\n  public static int footballPoints(int wins, int draws, int loses) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.3760217983651226,\\\"familyId\\\":\\\"ZikxdN3kdP65h4bht\\\",\\\"instructions\\\":\\\"Create a function that takes the number of `wins`, `draws` and `losses` and calculates the number of points a football team has obtained so far.\\\\n\\\\n- `wins` get `3` points\\\\n- `draws` get `1` point\\\\n- `losses` get `0` points\\\\n\\\\n### Examples\\\\n```\\\\nfootballPoints(3, 4, 2) ➞ 13\\\\n\\\\nfootballPoints(5, 0, 2) ➞ 15\\\\n\\\\nfootballPoints(0, 0, 1) ➞ 0\\\\n```\\\\n\\\\n### Notes\\\\nInputs will be numbers greater than or equal to `0`.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ProgramTest {\\\\n\\\\t\\\\t@Test\\\\n\\\\t  public void test1() {\\\\n    \\\\tassertEquals(3, Program.footballPoints(1, 0, 0));\\\\n\\\\t\\\\","thisId":"932","channelHost":"edabit.com","id":"932","opcode":"1","channelId":"2","timestamp":"1652648848573"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"28\\\"]}\"]","thisId":"933","channelHost":"edabit.com","id":"933","opcode":"1","channelId":"2","timestamp":"1652648848672"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"20108","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"28\\\",\\\"result\\\":{\\\"_id\\\":\\\"L53ZXmSb32TCSkciE\\\",\\\"author\\\":\\\"Einy\\\",\\\"authorId\\\":\\\"5f6oSeq4r5WTXLdCQ\\\",\\\"code\\\":\\\"public class InchesToFeet { \\\\n\\\\tpublic static int convert(int inches) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.3776,\\\"familyId\\\":\\\"XYDYHvmGb5tsW7ZNW\\\",\\\"instructions\\\":\\\"Create a function that accepts a measurement value in inches and returns the equivalent of the measurement value in feet.\\\\n\\\\n### Examples\\\\n```\\\\ninches_to_feet(324) ➞ 27\\\\n\\\\ninches_to_feet(12) ➞ 1\\\\n\\\\ninches_to_feet(36) ➞ 3\\\\n```\\\\n\\\\n### Notes\\\\n- If inches are under 12, return `0`.\\\\n- 12 inches = 1 foot.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class InchesToFeetTest {\\\\n  @Test\\\\n  public void test1(){\\\\n    assertEquals(1, InchesToFeet.convert(12));\\\\n  }\\\\n\\\\n  @Test\\\\n  public void test2(){\\\\n\\\\t\\\\tassertEquals(30, InchesToFeet.convert(360));\\\\n  }\\\\n\\\\n\\\\t@Test\\\\n  public void t","thisId":"934","channelHost":"edabit.com","id":"934","opcode":"1","channelId":"2","timestamp":"1652648848676"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"29\\\"]}\"]","thisId":"935","channelHost":"edabit.com","id":"935","opcode":"1","channelId":"2","timestamp":"1652648848778"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"27087","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"29\\\",\\\"result\\\":{\\\"_id\\\":\\\"3MqevrgExMbgmBrLG\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class BasketballPoints { \\\\n\\\\tpublic static int points(int twos, int threes) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.37735849056603776,\\\"familyId\\\":\\\"Wc4HJd2vkfn6MpEPB\\\",\\\"instructions\\\":\\\"You are counting points for a basketball game, given the amount of 2-pointers scored and 3-pointers scored, find the final points for the team and return that value.\\\\n\\\\n### Examples\\\\n```\\\\npoints(13, 12) ➞ 62\\\\n\\\\npoints(17, 12) ➞ 70\\\\n\\\\npoints(38, 8) ➞ 100\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals; \\\\nimport org.junit.Test; \\\\n\\\\npublic class BasketballPointsTest {\\\\n\\\\t@Test\\\\n\\\\tpublic void test01() { \\\\n\\\\t\\\\tassertEquals(5, BasketballPoints.points(1, 1));\\\\n\\\\t}\\\\n\\\\n\\\\t@Test\\\\n\\\\tpublic void test02() { \\\\n\\\\t\\\\tassertEquals(29, BasketballPoints.points(7, 5));\\\\","thisId":"936","channelHost":"edabit.com","id":"936","opcode":"1","channelId":"2","timestamp":"1652648848784"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"30\\\"]}\"]","thisId":"937","channelHost":"edabit.com","id":"937","opcode":"1","channelId":"2","timestamp":"1652648848940"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"114918","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"30\\\",\\\"result\\\":{\\\"_id\\\":\\\"XjYMguBCEf7WqEu8M\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean divisibleByFive(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.37778333750312737,\\\"familyId\\\":\\\"oJzX8FKA9t54fWJMg\\\",\\\"instructions\\\":\\\"Create a function that returns `true` if an integer is evenly divisible by 5, and `false` otherwise.\\\\n\\\\n### Examples\\\\n```\\\\ndivisibleByFive(5) ➞ true\\\\n\\\\ndivisibleByFive(-55) ➞ true\\\\n\\\\ndivisibleByFive(37) ➞ false\\\\n```\\\\n\\\\n### Notes\\\\n- Don't forget to `return` the result.\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're *really* stuck, unlock solutions in the **Solutions** tab.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class Tests {\\\\n\\\\t@Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tSystem.out.println(\\\\\\\"5 is divisible by 5.\\\\\\\");\\\\n\\\\t\\\\tassertEquals(true, Challenge.divisibleByFive(5","thisId":"938","channelHost":"edabit.com","id":"938","opcode":"1","channelId":"2","timestamp":"1652648848966"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"31\\\"]}\"]","thisId":"939","channelHost":"edabit.com","id":"939","opcode":"1","channelId":"2","timestamp":"1652648849069"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"105926","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"31\\\",\\\"result\\\":{\\\"_id\\\":\\\"78n7cFZqNLMzE2DKZ\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int convert(int hours, int minutes) {\\\\n\\\\t\\\\t \\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.37886178861788616,\\\"familyId\\\":\\\"7LixpDisWyDvBAskf\\\",\\\"instructions\\\":\\\"Write a function that takes two integers (`hours`, `minutes`), converts them to seconds, and adds them.\\\\n\\\\n### Examples\\\\n```\\\\nconvert(1, 3) ➞ 3780\\\\n\\\\nconvert(2, 0) ➞ 7200\\\\n\\\\nconvert(0, 0) ➞ 0\\\\n```\\\\n\\\\n### Notes\\\\n- Don't forget to `return` the result.\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're *really* stuck, unlock solutions in the **Solutions** tab.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(3600, Challenge.convert(1, 0));\\\\n  }\\\\n\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(3780, Cha","thisId":"940","channelHost":"edabit.com","id":"940","opcode":"1","channelId":"2","timestamp":"1652648849076"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"32\\\"]}\"]","thisId":"941","channelHost":"edabit.com","id":"941","opcode":"1","channelId":"2","timestamp":"1652648849182"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"88225","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"32\\\",\\\"result\\\":{\\\"_id\\\":\\\"SquoES5RxWr4CyX6G\\\",\\\"author\\\":\\\"Kálmán Vilisics\\\",\\\"authorId\\\":\\\"Es4eX2stRpyoXeC7f\\\",\\\"code\\\":\\\"public class Challenge{\\\\n\\\\tpublic static int getFirstValue(int[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.3791755508173419,\\\"familyId\\\":\\\"LGaJ5avYGfSmxrwZt\\\",\\\"instructions\\\":\\\"Create a function that takes an array containing only numbers and return the first element.\\\\n\\\\n### Examples\\\\n```\\\\ngetFirstValue([1, 2, 3]) ➞ 1\\\\n\\\\ngetFirstValue([80, 5, 100]) ➞ 80\\\\n\\\\ngetFirstValue([-500, 0, 50]) ➞ -500\\\\n```\\\\n\\\\n### Notes\\\\nThe first element in an array always has an index of 0.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test\\\\n  public void test1() {\\\\n\\\\t\\\\tassertThat(Challenge.getFirstValue(new int[]{1, 2, 3, 4}), is(1));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n\\\\t\\\\tassertThat(Challenge.getFirstValue","thisId":"942","channelHost":"edabit.com","id":"942","opcode":"1","channelId":"2","timestamp":"1652648849189"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"33\\\"]}\"]","thisId":"943","channelHost":"edabit.com","id":"943","opcode":"1","channelId":"2","timestamp":"1652648849332"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"95835","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"33\\\",\\\"result\\\":{\\\"_id\\\":\\\"KWRQP86jxzM9SZmRM\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean reverse(boolean b) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.38275963518681966,\\\"familyId\\\":\\\"R2mafqAbridfJic8o\\\",\\\"instructions\\\":\\\"Create a function that reverses a `boolean` value.\\\\n\\\\n### Examples\\\\n```\\\\nreverse(true) ➞ false\\\\n\\\\nreverse(false) ➞ true\\\\n```\\\\n\\\\n### Notes\\\\n- Don't forget to `return` the result.\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're *really* stuck, unlock solutions in the **Solutions** tab.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class Tests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\tassertEquals(true, Challenge.reverse(false));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test \\\\n\\\\tpublic void test2() {\\\\n\\\\tassertEquals(false, Challenge.reverse(true));\\\\n\\\\t}\\\\n}\\\",\\\"language\\\":\\\"java\\\",\\\"summary\\\":\\\"Create ","thisId":"944","channelHost":"edabit.com","id":"944","opcode":"1","channelId":"2","timestamp":"1652648849342"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"34\\\"]}\"]","thisId":"945","channelHost":"edabit.com","id":"945","opcode":"1","channelId":"2","timestamp":"1652648849450"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"26812","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"34\\\",\\\"result\\\":{\\\"_id\\\":\\\"NhwrwfjHZ9Dpz2J5K\\\",\\\"author\\\":\\\"Kálmán Vilisics\\\",\\\"authorId\\\":\\\"Es4eX2stRpyoXeC7f\\\",\\\"code\\\":\\\"public class Program {\\\\n  public static boolean and(boolean a, boolean b) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.38475499092558985,\\\"familyId\\\":\\\"2zY8CTHZrmLGj6Spd\\\",\\\"instructions\\\":\\\"Java has a logical operator `&&`. The `&&` operator takes two boolean values, and returns `true` if both values are `true`.\\\\n\\\\nConsider `a && b`:\\\\n\\\\n- `a` is checked if it is `true` or `false`.\\\\n- If `a` is `false`,  `false` is returned.\\\\n- `b` is checked if it is `true` or `false`.\\\\n- If `b` is `false`, `false` is returned.\\\\n- Otherwise, `true` is returned (as both `a` and `b` are therefore `true` ).\\\\n\\\\nThe `&&` operator will only return `true` for `true && true`.\\\\n\\\\nMake a function using the `&&` operator.\\\\n\\\\n### Examples\\\\n```\\\\nand(true, false) ➞ false\\\\n\\\\nand(true, true) ➞ true\\\\n\\\\nand(false, true) ➞ false\\\\n\\\\nand(false, false) ➞ false\\\\n```\\\\n\\\\n### ","thisId":"946","channelHost":"edabit.com","id":"946","opcode":"1","channelId":"2","timestamp":"1652648849454"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"35\\\"]}\"]","thisId":"947","channelHost":"edabit.com","id":"947","opcode":"1","channelId":"2","timestamp":"1652648849571"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"89350","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"35\\\",\\\"result\\\":{\\\"_id\\\":\\\"KnRj8TSD63JBpzDfi\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean divisible(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.3875476493011436,\\\"familyId\\\":\\\"ey4zxzhy3YGxh5YZf\\\",\\\"instructions\\\":\\\"Create a function that takes an integer and returns `true` if it's divisible by 100, otherwise return `false`.\\\\n\\\\n### Examples\\\\n```\\\\ndivisible(1) ➞ false\\\\n\\\\ndivisible(1000) ➞ true\\\\n\\\\ndivisible(100) ➞ true\\\\n```\\\\n### Notes\\\\n- Don't forget to `return` the result.\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're *really* stuck, unlock solutions in the **Solutions** tab.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class Tests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertEquals(false, Challenge.divisible(1));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test \\\\n\\\\tpublic void test2() {\\\\n\\\\t\\\\tassertEquals(t","thisId":"948","channelHost":"edabit.com","id":"948","opcode":"1","channelId":"2","timestamp":"1652648849587"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"36\\\"]}\"]","thisId":"949","channelHost":"edabit.com","id":"949","opcode":"1","channelId":"2","timestamp":"1652648849680"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"13715","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"36\\\",\\\"result\\\":{\\\"_id\\\":\\\"EnkJmMjFaivQ5txdW\\\",\\\"author\\\":\\\"K_3B\\\",\\\"authorId\\\":\\\"zE46SymvixkeFJmPM\\\",\\\"code\\\":\\\"public class Program{\\\\n  public static int flipIntBool(int intBool) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.38591549295774646,\\\"familyId\\\":\\\"EzsEkvM2KoW4D4FCX\\\",\\\"instructions\\\":\\\"Make a function that returns an int boolean opposite of an int boolean given (flip the int boolean).\\\\n\\\\n### Examples\\\\n```\\\\nflipIntBool(1) ➞ 0\\\\n\\\\nflipIntBool(0) ➞ 1\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(1, Program.flipIntBool(0));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(0, Program.flipIntBool(1));\\\\n  }\\\\n}\\\",\\\"language\\\":\\\"java\\\",\\\"quality\\\":4.627586206896551,\\\"summary\\\":\\\"Make a function that returns an int boolean opposite of an int boolean ","thisId":"950","channelHost":"edabit.com","id":"950","opcode":"1","channelId":"2","timestamp":"1652648849684"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"37\\\"]}\"]","thisId":"951","channelHost":"edabit.com","id":"951","opcode":"1","channelId":"2","timestamp":"1652648849765"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"26795","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"37\\\",\\\"result\\\":{\\\"_id\\\":\\\"pwDhjNEqDFWGzELLS\\\",\\\"author\\\":\\\"MegaLoser\\\",\\\"authorId\\\":\\\"kWobGYgZWJxN6ZddF\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int frames(int min, int fps) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.3995943204868154,\\\"quality\\\":4.423828125,\\\"familyId\\\":\\\"5zWLAzFAQhEY9ugBX\\\",\\\"instructions\\\":\\\"Create a method that returns the number of frames shown in a given number of minutes for a certain FPS.\\\\n\\\\n### Examples\\\\n```\\\\nframes(1, 1) ➞ 60\\\\n\\\\nframes(10, 1) ➞ 600\\\\n\\\\nframes(10, 25) ➞ 15000\\\\n```\\\\n\\\\n### Notes\\\\nFPS stands for \\\\\\\"frames per second\\\\\\\" and it's the number of frames a computer screen shows every second.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class Tests {\\\\n  @Test\\\\n  public void test1(){\\\\n\\\\t\\\\tassertEquals(Challenge.frames(1, 1), 60);\\\\n  }\\\\n\\\\t\\\\n  @Test\\\\n  public void test2(){\\\\n\\\\t\\\\tassertEquals(Challenge.frames(10, 1), 600);\\\\n  }\\\\n\\\\t\\\\n\\\\t@Tes","thisId":"952","channelHost":"edabit.com","id":"952","opcode":"1","channelId":"2","timestamp":"1652648849769"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"38\\\"]}\"]","thisId":"953","channelHost":"edabit.com","id":"953","opcode":"1","channelId":"2","timestamp":"1652648849895"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"61585","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"38\\\",\\\"result\\\":{\\\"_id\\\":\\\"dLXXzJ5hkLAzkyDCm\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean dividesEvenly(int a, int b) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.40401002506265665,\\\"familyId\\\":\\\"JFxnfR3ebPvZyCAro\\\",\\\"instructions\\\":\\\"Given two integers, `a` and `b`, return `true` if `a` can be divided evenly by `b`. Return `false` otherwise.\\\\n\\\\n### Examples\\\\n```\\\\ndividesEvenly(98, 7) ➞ true\\\\n// 98/7 = 14\\\\n\\\\ndividesEvenly(85, 4) ➞ false\\\\n// 85/4 = 21.25\\\\n```\\\\n\\\\n### Notes\\\\n`a` will always be greater than or equal to `b`.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(true, Challenge.dividesEvenly(98, 7));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(false, Challenge.dividesEvenly(87, 49));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test3()","thisId":"954","channelHost":"edabit.com","id":"954","opcode":"1","channelId":"2","timestamp":"1652648849900"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"39\\\"]}\"]","thisId":"955","channelHost":"edabit.com","id":"955","opcode":"1","channelId":"2","timestamp":"1652648850012"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"63607","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"39\\\",\\\"result\\\":{\\\"_id\\\":\\\"uG3DEHwC5xMtHnCdm\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int squaed(int b) {\\\\n\\\\t\\\\treturn a * a\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.408622305529522,\\\"familyId\\\":\\\"jRgJC7TfSDfxoPtic\\\",\\\"instructions\\\":\\\"Fix the code in the code tab to pass this challenge (only syntax errors). Look at the examples below to get an idea of what the function should do.\\\\n\\\\n### Examples\\\\n```\\\\nsquared(5) ➞ 25\\\\n\\\\nsquared(9) ➞ 81\\\\n\\\\nsquared(100) ➞ 10000\\\\n```\\\\n\\\\n### Notes\\\\n- **READ EVERY WORD CAREFULLY, CHARACTER BY CHARACTER!**\\\\n- Don't overthink this challenge; it's not supposed to be hard.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(100, Challenge.squared(10));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(4761, Challenge.squared(","thisId":"956","channelHost":"edabit.com","id":"956","opcode":"1","channelId":"2","timestamp":"1652648850017"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"40\\\"]}\"]","thisId":"957","channelHost":"edabit.com","id":"957","opcode":"1","channelId":"2","timestamp":"1652648850121"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"79684","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"40\\\",\\\"result\\\":{\\\"_id\\\":\\\"kewawqtmmyXiiA9B6\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean profitableGamble(double prob, double prize, double pay) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.4106753812636166,\\\"familyId\\\":\\\"rW3mQTiTRikQ49AuX\\\",\\\"instructions\\\":\\\"Create a function that takes three arguments `prob`, `prize`, `pay` and returns `true` if `prob * prize > pay`; otherwise return `false`.\\\\n\\\\nTo illustrate:\\\\n\\\\n```\\\\nprofitableGamble(0.2, 50, 9)\\\\n```\\\\n\\\\n... should yield `true`, since the net profit is 1 (0.2 * 50 - 9), and 1 > 0.\\\\n\\\\n### Examples\\\\n```\\\\nprofitableGamble(0.2, 50, 9) ➞ true\\\\n\\\\nprofitableGamble(0.9, 1, 2) ➞ false\\\\n\\\\nprofitableGamble(0.9, 3, 2) ➞ true\\\\n```\\\\n\\\\n### Notes\\\\nA profitable gamble is a game that yields a positive net profit, where net profit is calculated in the following manner: net_outcome = probability_of_winning * prize - cost_of_playing.\\\",\\\"lab\\\":\\\"impor","thisId":"958","channelHost":"edabit.com","id":"958","opcode":"1","channelId":"2","timestamp":"1652648850127"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"41\\\"]}\"]","thisId":"959","channelHost":"edabit.com","id":"959","opcode":"1","channelId":"2","timestamp":"1652648850266"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"66800","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"41\\\",\\\"result\\\":{\\\"_id\\\":\\\"djMjmJMbeEFxEsPiH\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String concatName(String firstName, String lastName) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.4197267292912041,\\\"familyId\\\":\\\"D9um96ji5RkSLjxcX\\\",\\\"instructions\\\":\\\"Given two strings, `firstName` and `lastName`, return a single string in the format \\\\\\\"last, first\\\\\\\".\\\\n\\\\n### Examples\\\\n```\\\\nconcatName(\\\\\\\"First\\\\\\\", \\\\\\\"Last\\\\\\\") ➞ \\\\\\\"Last, First\\\\\\\"\\\\n\\\\nconcatName(\\\\\\\"John\\\\\\\", \\\\\\\"Doe\\\\\\\") ➞ \\\\\\\"Doe, John\\\\\\\"\\\\n\\\\nconcatName(\\\\\\\"Mary\\\\\\\", \\\\\\\"Jane\\\\\\\") ➞ \\\\\\\"Jane, Mary\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Don't forget to `return` the result.\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're *really* stuck, unlock solutions in the **Solutions** tab.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class Tests {\\\\n\\\\t@Test \\\\n\\\\tpublic void ","thisId":"960","channelHost":"edabit.com","id":"960","opcode":"1","channelId":"2","timestamp":"1652648850273"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"42\\\"]}\"]","thisId":"961","channelHost":"edabit.com","id":"961","opcode":"1","channelId":"2","timestamp":"1652648850379"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"77853","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"42\\\",\\\"result\\\":{\\\"_id\\\":\\\"wr8zTBNNeLtspmLLT\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean isEmpty(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.41977544367982617,\\\"familyId\\\":\\\"x8AbaoSmHbPtjdEsx\\\",\\\"instructions\\\":\\\"Create a function that returns `true` if a string is empty and `false` otherwise.\\\\n\\\\n### Examples\\\\n```\\\\nisEmpty(\\\\\\\"\\\\\\\") ➞ true\\\\n\\\\nisEmpty(\\\\\\\" \\\\\\\") ➞ false\\\\n\\\\nisEmpty(\\\\\\\"a\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\n- A string containing only whitespaces `\\\\\\\" \\\\\\\"` does **not** count as empty.\\\\n- Don't forget to `return` the result.\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're *really* stuck, unlock solutions in the **Solutions** tab.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class Tests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertTha","thisId":"962","channelHost":"edabit.com","id":"962","opcode":"1","channelId":"2","timestamp":"1652648850383"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"43\\\"]}\"]","thisId":"963","channelHost":"edabit.com","id":"963","opcode":"1","channelId":"2","timestamp":"1652648850487"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"11952","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"43\\\",\\\"result\\\":{\\\"_id\\\":\\\"f4Bndq3nGd69krdAe\\\",\\\"author\\\":\\\"Einy\\\",\\\"authorId\\\":\\\"5f6oSeq4r5WTXLdCQ\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int getArea(int h, int w) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.4217687074829932,\\\"familyId\\\":\\\"EGrRXHAzdGgdDJnGJ\\\",\\\"instructions\\\":\\\"Create a function that calculates the area of a rectangle. If the arguments are invalid, your function must return `-1`.\\\\n\\\\n### Examples\\\\n```\\\\narea(3, 4) ➞ 12\\\\n\\\\narea(10, 11) ➞ 110\\\\n\\\\narea(-1, 5) ➞ -1\\\\n\\\\narea(0, 2) ➞ -1\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTest {\\\\n    @Test\\\\n    public void test1(){\\\\n        assertEquals(15, Challenge.getArea(5, 3));\\\\n    }\\\\n\\\\n    @Test\\\\n    public void test2(){\\\\n\\\\t\\\\t\\\\t\\\\tassertEquals(40, Challenge.getArea(8, 5));\\\\n    }\\\\n\\\\n    @Test\\\\n    public void test3(){\\\\n\\\\t\\\\t\\\\t\\\\tasser","thisId":"964","channelHost":"edabit.com","id":"964","opcode":"1","channelId":"2","timestamp":"1652648850493"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"44\\\"]}\"]","thisId":"965","channelHost":"edabit.com","id":"965","opcode":"1","channelId":"2","timestamp":"1652648850607"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"14307","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"44\\\",\\\"result\\\":{\\\"_id\\\":\\\"fY3bzat74jGhLMepS\\\",\\\"author\\\":\\\"Mubashir Hassan \\\",\\\"authorId\\\":\\\"T6iBEE2jp7f7iEF2P\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static String greeting(String name) {\\\\n\\\\t\\\\treturn \\\\\\\"Hello, \\\\\\\" + name + \\\\\\\"!\\\\\\\";  \\\\n\\\\t  if(name == \\\\\\\"Mubashir\\\\\\\") {\\\\n    \\\\t\\\\treturn \\\\\\\"Hello, my Love!\\\\\\\";\\\\n  \\\\t\\\\t}\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.42162162162162165,\\\"familyId\\\":\\\"T9EDhS5EnMKj8wyqS\\\",\\\"instructions\\\":\\\"Emmy has written a function that returns a greeting to users. However, she's in love with **Mubashir**, and would like to greet him slightly differently. She added a special case in her function, but she made a mistake.\\\\n\\\\nCan you help her?\\\\n\\\\n### Examples\\\\n```\\\\ngreeting(\\\\\\\"Matt\\\\\\\") ➞ \\\\\\\"Hello, Matt!\\\\\\\"\\\\n\\\\ngreeting(\\\\\\\"Helen\\\\\\\") ➞ \\\\\\\"Hello, Helen!\\\\\\\"\\\\n\\\\ngreeting(\\\\\\\"Mubashir\\\\\\\") ➞ \\\\\\\"Hello, my Love!\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- **READ EVERY WORD CAREFULLY, CHARACTER BY CHARACTER!**\\\\n- Don't overthink this challenge; it'","thisId":"966","channelHost":"edabit.com","id":"966","opcode":"1","channelId":"2","timestamp":"1652648850611"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"48\\\"]}\"]","thisId":"967","channelHost":"edabit.com","id":"967","opcode":"1","channelId":"2","timestamp":"1652648850716"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"90045","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"48\\\",\\\"result\\\":{\\\"_id\\\":\\\"umRwYETG7ogToZhSi\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n    public static String isEvenOrOdd(int num) {\\\\n     \\\\n    }\\\\n}\\\\n\\\",\\\"difficulty\\\":0.4386836386215461,\\\"familyId\\\":\\\"fN758T2mMbb2MLk3t\\\",\\\"instructions\\\":\\\"Create a method that takes an integer as an argument and returns` \\\\\\\"even\\\\\\\"` for even integers and `\\\\\\\"odd\\\\\\\"` for odd integers.\\\\n\\\\n### Examples\\\\n```\\\\nisEvenOrOdd(3) ➞ \\\\\\\"odd\\\\\\\"\\\\n\\\\nisEvenOrOdd(146) ➞ \\\\\\\"even\\\\\\\"\\\\n\\\\nisEvenOrOdd(19) ➞ \\\\\\\"odd\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Dont forget to `return` the result.\\\\n- Input will always be a valid integer.\\\\n- Expect negative integers (whole numbers).\\\\n- Tests are case sensitive (return `\\\\\\\"even\\\\\\\"` or `\\\\\\\"odd\\\\\\\"` in lowercase).\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ProgramTest {\\\\n\\\\n    @Test\\\\n    public void test1(){\\\\n      assertEquals(\\","thisId":"968","channelHost":"edabit.com","id":"968","opcode":"1","channelId":"2","timestamp":"1652648850722"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"47\\\"]}\"]","thisId":"969","channelHost":"edabit.com","id":"969","opcode":"1","channelId":"2","timestamp":"1652648850841"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"14262","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"47\\\",\\\"result\\\":{\\\"_id\\\":\\\"4PGHC3nqN9gH2svby\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class FuelUp {\\\\n\\\\tpublic static double calculateFuel(double n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.43558282208588955,\\\"familyId\\\":\\\"iZzBZFYaLMytXbJ4E\\\",\\\"instructions\\\":\\\"A vehicle needs 10 times the amount of fuel than the distance it travels. However, it must always carry a minimum of 100 fuel before setting off.\\\\n\\\\nCreate a function which calculates the amount of fuel it needs, given the distance.\\\\n\\\\n### Examples\\\\n```\\\\ncalculateFuel(15) ➞ 150\\\\n\\\\ncalculateFuel(23.5) ➞ 235\\\\n\\\\ncalculateFuel(3) ➞ 100\\\\n```\\\\n\\\\n### Notes\\\\n- Distance will be a number greater than zero.\\\\n- Return 100 if the calculated fuel turns out to be less than 100.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals; \\\\nimport org.junit.Test; \\\\n\\\\npublic class FuelUpTest {\\\\n\\\\t@Test\\\\n\\\\tpublic void test0","thisId":"970","channelHost":"edabit.com","id":"970","opcode":"1","channelId":"2","timestamp":"1652648850846"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"46\\\"]}\"]","thisId":"971","channelHost":"edabit.com","id":"971","opcode":"1","channelId":"2","timestamp":"1652648850933"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"10986","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"46\\\",\\\"result\\\":{\\\"_id\\\":\\\"b3wgTSBnd2HH44qzr\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Numeric { \\\\n\\\\tpublic static int returnNegative(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.4362934362934363,\\\"familyId\\\":\\\"q5Bp4cxk7EinT4GAA\\\",\\\"instructions\\\":\\\"Create a function that takes a number as an argument and returns negative of that number. Return negative numbers without any change.\\\\n\\\\n### Examples\\\\n```\\\\nreturnNegative(4) ➞ -4\\\\n\\\\nreturnNegative(5) ➞ -5\\\\n\\\\nreturnNegative(-54) ➞ -54\\\\n\\\\nreturnNegative(0) ➞ 0\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"/** \\\\n================================== \\\\nTestGen 3.1 for JUnit 4.13.0 \\\\t\\\\t\\\\nTest Case: Numeric::returnNegative \\\\nTimestamp: 02/08/2021 08:55:28 PM \\\\n---------------------------------- \\\\n® DARKKO 2021 © \\\\n================================== \\\\n\\\\n**/ \\\\n\\\\nimport static org.junit.Assert.assertEquals; \\\\nimport org.ju","thisId":"972","channelHost":"edabit.com","id":"972","opcode":"1","channelId":"2","timestamp":"1652648850942"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"45\\\"]}\"]","thisId":"973","channelHost":"edabit.com","id":"973","opcode":"1","channelId":"2","timestamp":"1652648851052"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"29234","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"45\\\",\\\"result\\\":{\\\"_id\\\":\\\"jMnHZ4ywxG8WGvDqC\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class NumberValue {\\\\n\\\\tpublic static double absolute(double n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.4275184275184275,\\\"familyId\\\":\\\"Mj9iqKhqt8qHzLGhT\\\",\\\"instructions\\\":\\\"The `Math.abs()` function returns the absolute value of a number. This means that it returns a number's positive value. You can think of it as the distance away from zero.\\\\n\\\\nCreate a function that recreates this functionality.\\\\n\\\\n### Examples\\\\n```\\\\nabsolute(-1.217197940) ➞ 1.21719794\\\\n\\\\nabsolute(-12.1320) ➞ 12.132\\\\n \\\\nabsolute(-544.0) ➞ 544.0\\\\n\\\\nabsolute(4666) ➞ 4666.0\\\\n\\\\nabsolute(-3.14) ➞ 3.14\\\\n\\\\nabsolute(250) ➞ 250\\\\n```\\\\n\\\\n### Notes\\\\n- Tests will only include valid numbers.\\\\n- Don't use the `Math.abs()` function  (it will defeat the purpose of the challenge).\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"/** \\\\n=======================","thisId":"974","channelHost":"edabit.com","id":"974","opcode":"1","channelId":"2","timestamp":"1652648851060"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"49\\\"]}\"]","thisId":"975","channelHost":"edabit.com","id":"975","opcode":"1","channelId":"2","timestamp":"1652648851128"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7664","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"49\\\",\\\"result\\\":{\\\"_id\\\":\\\"xTqLduZ9McaZ3bE2j\\\",\\\"author\\\":\\\"Mubashir Hassan \\\",\\\"authorId\\\":\\\"T6iBEE2jp7f7iEF2P\\\",\\\"code\\\":\\\"public class Nth {\\\\n\\\\tpublic static int even(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.449438202247191,\\\"familyId\\\":\\\"Pqh2LiyGj4ktJdc4Q\\\",\\\"instructions\\\":\\\"Create a function that takes a number `n` and returns the `n`th even number beginning with 0 as the first.\\\\n\\\\n### Examples\\\\n```\\\\neven(1) ➞ 0\\\\n// 0 is first even number\\\\n\\\\neven(2) ➞ 2\\\\n// 2 is second even number\\\\n\\\\neven(100) ➞ 198\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals;\\\\nimport org.junit.Test;\\\\n\\\\npublic class EvenTests {\\\\n\\\\t@Test\\\\n\\\\tpublic void test01() {\\\\n\\\\t\\\\tassertEquals(Nth.even(1), 0);\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test\\\\n\\\\tpublic void test02() {\\\\n\\\\t\\\\tassertEquals(Nth.even(2), 2);\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test\\\\n\\\\tpublic void test03() {\\\\n\\\\t\\\\tassertEquals(Nth.even(3), 4);\\\\n\\\\t}\\\\n ","thisId":"976","channelHost":"edabit.com","id":"976","opcode":"1","channelId":"2","timestamp":"1652648851146"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"50\\\"]}\"]","thisId":"977","channelHost":"edabit.com","id":"977","opcode":"1","channelId":"2","timestamp":"1652648851248"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"12106","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"50\\\",\\\"result\\\":{\\\"_id\\\":\\\"sn9KfW72BBoT7eesC\\\",\\\"author\\\":\\\"Mubashir Hassan \\\",\\\"authorId\\\":\\\"T6iBEE2jp7f7iEF2P\\\",\\\"code\\\":\\\"import java.util.*;\\\\n\\\\nclass Mubashir {\\\\n  public static List PrintArray(int number)\\\\n  {\\\\n    List array = new ArrayList<>();\\\\n    \\\\n    for(int count = 1; count <= number;)\\\\n    {\\\\n      array.add(count);\\\\n    }\\\\n    \\\\n    return array;\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.44666666666666666,\\\"familyId\\\":\\\"f3kDmMuoipBZ352MT\\\",\\\"instructions\\\":\\\"**Mubashir** created an infinite loop! Help him by fixing the code in the code tab to pass this challenge. Look at the examples below to get an idea of what the function should do.\\\\n\\\\n### Examples\\\\n```\\\\nPrintArray(1) ➞ [1]\\\\n\\\\nPrintArray(3) ➞ [1, 2, 3]\\\\n\\\\nPrintArray(6) ➞ [1, 2, 3, 4, 5, 6]\\\\n```\\\\n\\\\n### Notes\\\\n- **READ EVERY WORD CAREFULLY, CHARACTER BY CHARACTER!**\\\\n- Don't overthink this challenge; it's not supposed to be hard.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"imp","thisId":"978","channelHost":"edabit.com","id":"978","opcode":"1","channelId":"2","timestamp":"1652648851252"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"52\\\"]}\"]","thisId":"979","channelHost":"edabit.com","id":"979","opcode":"1","channelId":"2","timestamp":"1652648851343"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"14017","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"52\\\",\\\"result\\\":{\\\"_id\\\":\\\"Nz6AzC4v8jyMCH2Tu\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class PerValueOrSum {\\\\n  public static boolean makesTen(int a, int b) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.4594594594594595,\\\"familyId\\\":\\\"Msp6BDKof3v5YkxY7\\\",\\\"instructions\\\":\\\"Create a function that takes two arguments. Both arguments are integers, `a` and `b`. Return `true` if one of them is `10` or if their sum is `10`.\\\\n\\\\n### Examples\\\\n```\\\\nmakesTen(9, 10) ➞ true\\\\n\\\\nmakesTen(9, 9) ➞ false\\\\n\\\\nmakesTen(1, 9) ➞ true\\\\n```\\\\n\\\\n### Notes\\\\nDon't forget to `return` the result.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals; \\\\nimport org.junit.Test; \\\\n\\\\npublic class PerValueOrSumTest {\\\\n\\\\t@Test\\\\n\\\\tpublic void test01() { \\\\n\\\\t\\\\tassertEquals(true, PerValueOrSum.makesTen(9, 10));\\\\n\\\\t}\\\\n\\\\n\\\\t@Test\\\\n\\\\tpublic void test02() { \\\\n\\\\t\\\\tassertEquals(false, PerValueOrSum.m","thisId":"980","channelHost":"edabit.com","id":"980","opcode":"1","channelId":"2","timestamp":"1652648851348"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"53\\\"]}\"]","thisId":"981","channelHost":"edabit.com","id":"981","opcode":"1","channelId":"2","timestamp":"1652648851473"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"49779","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"53\\\",\\\"result\\\":{\\\"_id\\\":\\\"ssHiWN2GD4oy7swEg\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int stackBoxes(int n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.45947556615017876,\\\"familyId\\\":\\\"XMmQkgG3Dr7CzmoFb\\\",\\\"instructions\\\":\\\"Here's an image of four models. Some of the cubes are hidden behind other cubes. Model one consists of one cube. Model two consists of four cubes, and so on...\\\\n\\\\n![Stack the Boxes](https://edabit-challenges.s3.amazonaws.com/stack_the_boxes.png \\\\\\\"Stack the Boxes\\\\\\\")\\\\n\\\\nWrite a function that takes a number `n` and returns the number of stacked boxes in a model `n` levels high, visible and invisible.\\\\n\\\\n### Examples\\\\n```\\\\nstackBoxes(1) ➞ 1\\\\n\\\\nstackBoxes(2) ➞ 4\\\\n\\\\nstackBoxes(0) ➞ 0\\\\n```\\\\n\\\\n### Notes\\\\nStep `n` is a positive integer.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test","thisId":"982","channelHost":"edabit.com","id":"982","opcode":"1","channelId":"2","timestamp":"1652648851481"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"55\\\"]}\"]","thisId":"983","channelHost":"edabit.com","id":"983","opcode":"1","channelId":"2","timestamp":"1652648851597"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"16767","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"55\\\",\\\"result\\\":{\\\"_id\\\":\\\"FAw6mykprqcsBW5Gr\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Pairs {\\\\n\\\\tpublic static int[] makePair(int a, int b) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.4595959595959596,\\\"familyId\\\":\\\"TMpCxf66nCfMvZdFh\\\",\\\"instructions\\\":\\\"Given two arguments, return an **array** which contains these two arguments.\\\\n\\\\n### Examples\\\\n```\\\\nmakePair(1, 2) ➞ [1, 2]\\\\n\\\\nmakePair(51, 21) ➞ [51, 21]\\\\n\\\\nmakePair(512124, 215) ➞ [512124, 215]\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertArrayEquals; \\\\nimport org.junit.Test; \\\\n\\\\npublic class PairsTest {\\\\n\\\\t@Test\\\\n\\\\tpublic void test01() {\\\\n\\\\t\\\\tassertArrayEquals(new int[] {1,2}, Pairs.makePair(1, 2));\\\\n\\\\t}\\\\n\\\\n\\\\t@Test\\\\n\\\\tpublic void test02() {\\\\n\\\\t\\\\tassertArrayEquals(new int[] {15,35}, Pairs.makePair(15, 35));\\\\n\\\\t}\\\\n\\\\n\\\\t@Test\\\\n\\\\tpublic void test03() {\\\\n\\\\t\\\\tasser","thisId":"984","channelHost":"edabit.com","id":"984","opcode":"1","channelId":"2","timestamp":"1652648851601"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"56\\\"]}\"]","thisId":"985","channelHost":"edabit.com","id":"985","opcode":"1","channelId":"2","timestamp":"1652648851678"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"13962","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"56\\\",\\\"result\\\":{\\\"_id\\\":\\\"Zyq5wqkxMFJFSWQ36\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Rubiks {\\\\n\\\\tpublic static int howManyStickers(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.4684385382059801,\\\"familyId\\\":\\\"Ts4ijCZx6biwscidC\\\",\\\"instructions\\\":\\\"Given a Rubik's Cube with a side length of `n`, return the number of individual stickers that are needed to cover the whole cube.\\\\n\\\\n![Pictures of Rubik's Cubes](https://edabit-challenges.s3.amazonaws.com/rubrix.png \\\\\\\"Rubik's Cubes\\\\\\\")\\\\n\\\\n- The Rubik's cube of side length `1` has **6 stickers**.\\\\n- The Rubik's cube of side length `2` has **24 stickers**.\\\\n- The Rubik's cube of side length `3` has **54 stickers**.\\\\n\\\\n### Examples\\\\n```\\\\nhowManyStickers(1) ➞ 6\\\\n\\\\nhowManyStickers(2) ➞ 24\\\\n\\\\nhowManyStickers(3) ➞ 54\\\\n```\\\\n\\\\n### Notes\\\\n- Keep in mind there are 6 faces to keep track of.\\\\n- Expect only positive whole numbers.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHi","thisId":"986","channelHost":"edabit.com","id":"986","opcode":"1","channelId":"2","timestamp":"1652648851692"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"57\\\"]}\"]","thisId":"987","channelHost":"edabit.com","id":"987","opcode":"1","channelId":"2","timestamp":"1652648851786"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"54719","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"57\\\",\\\"result\\\":{\\\"_id\\\":\\\"d7zedhqw2WKhqYm2C\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean equalSlices(int total, int people, int each) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.472020725388601,\\\"familyId\\\":\\\"W9oxc8W8ZzyrSXXaJ\\\",\\\"instructions\\\":\\\"Create a function that determines whether or not it's possible to split a pie fairly given these three parameters:\\\\n\\\\n1. Total number of slices.\\\\n2. Number of recipients.\\\\n3. How many slices each person gets.\\\\n\\\\nThe function will be in this form:\\\\n\\\\n```\\\\nequalSlices(total slices, no. recipients, slices each)\\\\n```\\\\n\\\\n### Examples\\\\n```\\\\nequalSlices(11, 5, 2) ➞ true\\\\n// 5 people x 2 slices each = 10 slices < 11 slices\\\\n\\\\nequalSlices(11, 5, 3) ➞ false\\\\n// 5 people x 3 slices each = 15 slices > 11 slices\\\\n\\\\nequalSlices(8, 3, 2) ➞ true\\\\n\\\\nequalSlices(8, 3, 3) ➞ false\\\\n\\\\nequalSlices(24, 12, 2) ➞ true\\\\n```\\\\n\\\\n### Notes\\\\n- Return (trivially","thisId":"988","channelHost":"edabit.com","id":"988","opcode":"1","channelId":"2","timestamp":"1652648851806"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"54\\\"]}\"]","thisId":"989","channelHost":"edabit.com","id":"989","opcode":"1","channelId":"2","timestamp":"1652648851921"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"60546","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"54\\\",\\\"result\\\":{\\\"_id\\\":\\\"a9Shdt64Ak2Hwq7oP\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean comp(String str1, String str2) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.4595605423094904,\\\"familyId\\\":\\\"Ev9BDRf75pTxybBQZ\\\",\\\"instructions\\\":\\\"Create a function that takes two strings as arguments and return either `true` or `false` depending on whether the total number of characters in the first string is equal to the total number of characters in the second string.\\\\n\\\\n### Examples\\\\n```\\\\ncomp(\\\\\\\"AB\\\\\\\", \\\\\\\"CD\\\\\\\") ➞ true\\\\n\\\\ncomp(\\\\\\\"ABC\\\\\\\", \\\\\\\"DE\\\\\\\") ➞ false\\\\n\\\\ncomp(\\\\\\\"hello\\\\\\\", \\\\\\\"edabit\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\n- Don't forget to `return` the result.\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're *really* stuck, unlock solutions in the **Solutions** tab.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npubl","thisId":"990","channelHost":"edabit.com","id":"990","opcode":"1","channelId":"2","timestamp":"1652648851933"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"51\\\"]}\"]","thisId":"991","channelHost":"edabit.com","id":"991","opcode":"1","channelId":"2","timestamp":"1652648852028"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"9466","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"51\\\",\\\"result\\\":{\\\"_id\\\":\\\"u7y8wBK7Z5woycKa6\\\",\\\"author\\\":\\\"DMiddendorf\\\",\\\"authorId\\\":\\\"hseQSt2EJ5uvb2pQv\\\",\\\"code\\\":\\\"public class Box {\\\\n\\\\tpublic static int volumeOfBox(int[] sizes) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n} \\\",\\\"difficulty\\\":0.45161290322580644,\\\"familyId\\\":\\\"CBBAM4vjQBDTiKQu8\\\",\\\"instructions\\\":\\\"Create a function that takes an object argument `sizes` (contains _width_, _length_, _height_ keys) and returns the volume of the box.\\\\n\\\\n### Examples\\\\n```\\\\nvolumeOfBox({ width: 2, length: 5, height: 1 }) ➞ 10\\\\n\\\\nvolumeOfBox({ width: 4, length: 2, height: 2 }) ➞ 16\\\\n\\\\nvolumeOfBox({ width: 1, length: 2, height: 3 }) ➞ 6\\\\n```\\\\n\\\\n### Notes\\\\n- Don't forget to `return` the result.\\\\n- Remember that the values are in an object.\\\\n- Volume is length \\\\\\\\* width \\\\\\\\* height.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals;\\\\nimport org.junit.Test;\\\\n\\\\npublic class BoxTests {\\\\n\\\\t@Test\\\\n\\\\tpublic void test01() {\\","thisId":"992","channelHost":"edabit.com","id":"992","opcode":"1","channelId":"2","timestamp":"1652648852050"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"58\\\"]}\"]","thisId":"993","channelHost":"edabit.com","id":"993","opcode":"1","channelId":"2","timestamp":"1652648852136"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"23256","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"58\\\",\\\"result\\\":{\\\"_id\\\":\\\"MvBYeGybFo4iEpWyp\\\",\\\"author\\\":\\\"Myles Newton\\\",\\\"authorId\\\":\\\"c69dbcvnNb8BB5294\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static boolean acceptIntoMovie(int age, boolean isSupervised) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.4706959706959707,\\\"familyId\\\":\\\"v6TkQCj9hgwvEYH8S\\\",\\\"instructions\\\":\\\"Write a function that checks whether a person can watch an MA15+ rated movie. One of the following two conditions is required for admittance:\\\\n\\\\n- The person is at least 15 years old.\\\\n- They have parental supervision.\\\\n\\\\nThe function accepts two parameters, `age` and `isSupervised`. Return a boolean.\\\\n\\\\n### Examples\\\\n```\\\\nacceptIntoMovie(14, true) ➞ true\\\\n\\\\nacceptIntoMovie(14, false) ➞ false\\\\n\\\\nacceptIntoMovie(16, false) ➞ true\\\\n```\\\\n\\\\n### Notes\\\\n- `age` is a decimal.\\\\n- `isSupervised` is a boolean.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class Tests {\\\\n\\\\t\\\\t@Te","thisId":"994","channelHost":"edabit.com","id":"994","opcode":"1","channelId":"2","timestamp":"1652648852148"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"59\\\"]}\"]","thisId":"995","channelHost":"edabit.com","id":"995","opcode":"1","channelId":"2","timestamp":"1652648852262"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"16464","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"59\\\",\\\"result\\\":{\\\"_id\\\":\\\"fvhabpSbe4vjWS9rP\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class IntegerInRange {\\\\n\\\\tpublic static boolean intWithinBounds(int n, int lower, int upper) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.48231511254019294,\\\"quality\\\":4.506550218340611,\\\"familyId\\\":\\\"ZfQu2vTs5tbKR2xXc\\\",\\\"instructions\\\":\\\"Write a function that validates whether a number `n` is  within the `lower` and `upper` bounds. Return `true` if so, `false` otherwise.\\\\n\\\\n### Examples\\\\n```\\\\nintWithinBounds(3, 1, 9) ➞ true\\\\n\\\\nintWithinBounds(6, 1, 6) ➞ false\\\\n\\\\nintWithinBounds(3, 3, 8) ➞ true\\\\n```\\\\n\\\\n### Notes\\\\n- The term \\\\\\\"within bounds\\\\\\\" means, that, a number is considered greater than or  equal to the lower bound but lesser than the upper bound, (see example #2).\\\\n- Bounds will always be given as integers.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals;\\\\nimport org.junit.Test;\\\\n\\\\npublic class IntegerIn","thisId":"996","channelHost":"edabit.com","id":"996","opcode":"1","channelId":"2","timestamp":"1652648852289"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"60\\\"]}\"]","thisId":"997","channelHost":"edabit.com","id":"997","opcode":"1","channelId":"2","timestamp":"1652648852360"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"10269","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"60\\\",\\\"result\\\":{\\\"_id\\\":\\\"7nsM8Lm243axLE2ei\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class BlueShade {\\\\n  public static int howManyWalls(int n, int w, int h) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.4854368932038835,\\\"familyId\\\":\\\"btXAYm27p6M5wNiK8\\\",\\\"instructions\\\":\\\"I have a bucket containing an amount of navy blue paint and I'd like to paint as many walls as possible. Create a function that returns the number of **complete walls** that I can paint, before I need to head to the shops to buy more.\\\\n\\\\n* `n` is the number of square meters I can paint.\\\\n* `w` and `h` are the widths and heights of a single wall in meters.\\\\n\\\\n### Examples\\\\n```\\\\nhowManyWalls(54, 1, 43) ➞ 1\\\\n\\\\nhowManyWalls(46, 5, 4) ➞ 2\\\\n\\\\nhowManyWalls(100, 4, 5) ➞ 5\\\\n\\\\nhowManyWalls(10, 15, 12) ➞ 0\\\\n\\\\nhowManyWalls(41, 3, 6) ➞ 2\\\\n```\\\\n\\\\n### Notes\\\\n* Don't count a wall if I don't manage to finish painting all of it before I run out of paint.\\\\n* All walls wi","thisId":"998","channelHost":"edabit.com","id":"998","opcode":"1","channelId":"2","timestamp":"1652648852364"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"61\\\"]}\"]","thisId":"999","channelHost":"edabit.com","id":"999","opcode":"1","channelId":"2","timestamp":"1652648852481"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"46410","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"61\\\",\\\"result\\\":{\\\"_id\\\":\\\"dGK2bxcojgLzbEZjp\\\",\\\"author\\\":\\\"rubens\\\",\\\"authorId\\\":\\\"XhzKztoQYYQzZ2c7o\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static int length(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.48915065096094235,\\\"familyId\\\":\\\"CAtTXyJ5vDoXheQod\\\",\\\"instructions\\\":\\\"Write a function that returns the length of a string. **Make your function recursive.**\\\\n\\\\n### Examples\\\\n```\\\\nlength(\\\\\\\"apple\\\\\\\") ➞ 5\\\\n\\\\nlength(\\\\\\\"make\\\\\\\") ➞ 4\\\\n\\\\nlength(\\\\\\\"a\\\\\\\") ➞ 1\\\\n\\\\nlength(\\\\\\\"\\\\\\\") ➞ 0\\\\n```\\\\n\\\\n### Notes\\\\nCheck the **Resources** tab for info on recursion.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ProgramTest {\\\\n\\\\t@Test\\\\n  public void test1() {\\\\n\\\\t\\\\tassertEquals(8, Program.length(\\\\\\\"shipment\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n\\\\t\\\\tassertEquals(5, Program.length(\\\\\\\"apple\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test3() {\\\\n\\\\t\\\\tassertEquals(4, Program.length","thisId":"1000","channelHost":"edabit.com","id":"1000","opcode":"1","channelId":"2","timestamp":"1652648852493"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"62\\\"]}\"]","thisId":"1001","channelHost":"edabit.com","id":"1001","opcode":"1","channelId":"2","timestamp":"1652648852615"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"14374","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"62\\\",\\\"result\\\":{\\\"_id\\\":\\\"hdT772EaY6ofm4ef4\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class BrokenBridge {\\\\n\\\\tpublic static boolean isSafeBridge(String bridge) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.49466192170818507,\\\"familyId\\\":\\\"uGTuRfaNL4mNKGTgK\\\",\\\"instructions\\\":\\\"Create a function which validates whether a bridge is safe to walk on (i.e. has no gaps in it to fall through).\\\\n\\\\n### Examples\\\\n```\\\\nisSafeBridge(\\\\\\\"####\\\\\\\") ➞ true\\\\n\\\\nisSafeBridge(\\\\\\\"## ####\\\\\\\") ➞ false\\\\n\\\\nisSafeBridge(\\\\\\\"#\\\\\\\") ➞ true\\\\n\\\\nisSafeBridge(\\\\\\\"### ####\\\\\\\") ➞ false\\\\n\\\\nisSafeBridge(\\\\\\\"#####\\\\\\\") ➞ true\\\\n```\\\\n\\\\n### Notes\\\\nYou can expect the bridge's ends are connected to its surrounding.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"/** \\\\n===================================== \\\\nTestGen 4.0 for JUnit 4.13.0 \\\\t\\\\t\\\\nTest Case: BrokenBridge::isSafeBridge \\\\nTimestamp: 10/15/2020 12:54:46 PM \\\\n-------------------","thisId":"1002","channelHost":"edabit.com","id":"1002","opcode":"1","channelId":"2","timestamp":"1652648852620"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"63\\\"]}\"]","thisId":"1003","channelHost":"edabit.com","id":"1003","opcode":"1","channelId":"2","timestamp":"1652648852736"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5743","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"63\\\",\\\"result\\\":{\\\"_id\\\":\\\"pybneyJ7Gmox2mYhM\\\",\\\"author\\\":\\\"JCoder00\\\",\\\"authorId\\\":\\\"YEMQNE333gAXhGE4c\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static ______ toDegree(______ num) {\\\\n\\\\t\\\\t//\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t^\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t ^\\\\n\\\\t\\\\t// Choose the best data types to use!\\\\n\\\\t\\\\t// Your code here...\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5,\\\"familyId\\\":\\\"AahHkAxxXgudpZonC\\\",\\\"instructions\\\":\\\"Create a function that takes an angle in radians and converts it into degrees.\\\\n\\\\n### Examples\\\\n```\\\\ntoDegree(Math.PI) ➞ 180.0\\\\n\\\\ntoDegree(Math.PI/2) ➞ 90.0\\\\n\\\\ntoDegree(Math.PI/4) ➞ 45.0\\\\n```\\\\n\\\\n### Notes\\\\n- The input angles are in radians.\\\\n- You will need to decide the **data types** for the `input` and `output` of the function.\\\\n- Check out the **Resources** tab.\\\\n- There are 360 degrees and 2 pi radians in a circle. So to convert degrees to radians, divide by 360 and multiply by 2 * pi (approx. 6.28). Or equivalently, divide by 180 and multiply by pi.\\\\n- Try","thisId":"1004","channelHost":"edabit.com","id":"1004","opcode":"1","channelId":"2","timestamp":"1652648852743"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"64\\\"]}\"]","thisId":"1005","channelHost":"edabit.com","id":"1005","opcode":"1","channelId":"2","timestamp":"1652648852853"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"23646","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"64\\\",\\\"result\\\":{\\\"_id\\\":\\\"RvRwNMPXYjFcWQD2G\\\",\\\"author\\\":\\\"bangyen\\\",\\\"authorId\\\":\\\"yv7c4H2jimSKHEjtG\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int stringInt(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.502724795640327,\\\"familyId\\\":\\\"XRAk528mmF5AvQsGZ\\\",\\\"instructions\\\":\\\"Create a function that takes a string and returns it as an integer.\\\\n\\\\n### Examples\\\\n```\\\\nstringInt(\\\\\\\"6\\\\\\\") ➞ 6\\\\n\\\\nstringInt(\\\\\\\"1000\\\\\\\") ➞ 1000\\\\n\\\\nstringInt(\\\\\\\"12\\\\\\\") ➞ 12\\\\n```\\\\n\\\\n### Notes\\\\n- All numbers will be whole.\\\\n- All numbers will be positive.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTest {\\\\n\\\\n    @Test\\\\n    public void test1(){\\\\n        int expected = 6;\\\\n        int actual = Challenge.stringInt(\\\\\\\"6\\\\\\\");\\\\n        assertEquals(expected, actual);\\\\n    }\\\\n\\\\n    @Test\\\\n    public void test2(){\\\\n        int expected = 2;\\\\n        int actual = Challenge.stringInt","thisId":"1006","channelHost":"edabit.com","id":"1006","opcode":"1","channelId":"2","timestamp":"1652648852860"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"65\\\"]}\"]","thisId":"1007","channelHost":"edabit.com","id":"1007","opcode":"1","channelId":"2","timestamp":"1652648853001"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"11507","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"65\\\",\\\"result\\\":{\\\"_id\\\":\\\"vzhWSMR2A6wDyFK2o\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Sandwiches {\\\\n\\\\tpublic static boolean hasSameBread(String[] a, String[] b) {\\\\n\\\\t\\\\t\\\\n\\\\t} \\\\n}\\\",\\\"difficulty\\\":0.5,\\\"familyId\\\":\\\"TsRRjzSGrMAKQnjsq\\\",\\\"instructions\\\":\\\"Given two arrays, which represent two sandwiches, return whether both sandwiches use the same type of bread. The bread will always be found at the start and end of the array.\\\\n\\\\n### Examples\\\\n```\\\\nhasSameBread(\\\\n  [\\\\\\\"white bread\\\\\\\", \\\\\\\"lettuce\\\\\\\", \\\\\\\"white bread\\\\\\\"],\\\\n  [\\\\\\\"white bread\\\\\\\", \\\\\\\"tomato\\\\\\\", \\\\\\\"white bread\\\\\\\"]\\\\n) ➞ true\\\\n\\\\nhasSameBread(\\\\n  [\\\\\\\"brown bread\\\\\\\", \\\\\\\"chicken\\\\\\\", \\\\\\\"brown bread\\\\\\\"],\\\\n  [\\\\\\\"white bread\\\\\\\", \\\\\\\"chicken\\\\\\\", \\\\\\\"white bread\\\\\\\"]\\\\n) ➞ false\\\\n\\\\nhasSameBread(\\\\n  [\\\\\\\"toast\\\\\\\", \\\\\\\"cheese\\\\\\\", \\\\\\\"toast\\\\\\\"],\\\\n  [\\\\\\\"brown bread\\\\\\\", \\\\\\\"cheese\\\\\\\", \\\\\\\"toast\\\\\\\"]\\\\n) ➞ false\\\\n```\\\\n\\\\n### Notes\\\\n- The a","thisId":"1008","channelHost":"edabit.com","id":"1008","opcode":"1","channelId":"2","timestamp":"1652648853006"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"66\\\"]}\"]","thisId":"1009","channelHost":"edabit.com","id":"1009","opcode":"1","channelId":"2","timestamp":"1652648853127"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"19895","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"66\\\",\\\"result\\\":{\\\"_id\\\":\\\"AWcHJdDbjMLT74FfX\\\",\\\"author\\\":\\\"bangyen\\\",\\\"authorId\\\":\\\"yv7c4H2jimSKHEjtG\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean both(int n1, int n2) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5074074074074074,\\\"familyId\\\":\\\"RC2qEshmnutvdwWKS\\\",\\\"instructions\\\":\\\"Write a function that returns `true` if both numbers are:\\\\n\\\\n- Smaller than `0`, OR ...\\\\n- Greater than `0`, OR ...\\\\n- Exactly `0`\\\\n\\\\nOtherwise, return `false`.\\\\n\\\\n### Examples\\\\n```\\\\nboth(6, 2) ➞ true\\\\n\\\\nboth(0, 0) ➞ true\\\\n\\\\nboth(-1, 2) ➞ false\\\\n\\\\nboth(0, 2) ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nInputs will always be two numbers.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class Tests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertEquals(true, Challenge.both(6, 2));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test \\\\n\\\\tpublic void test2() {\\\\n\\\\t\\\\tassertEquals(true, Challenge.both(-6, -9));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test \\\\n\\\\t","thisId":"1010","channelHost":"edabit.com","id":"1010","opcode":"1","channelId":"2","timestamp":"1652648853131"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"67\\\"]}\"]","thisId":"1011","channelHost":"edabit.com","id":"1011","opcode":"1","channelId":"2","timestamp":"1652648853279"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"40213","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"67\\\",\\\"result\\\":{\\\"_id\\\":\\\"i8bDeBaQtZg6wDGYL\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean hasSpaces(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.513177159590044,\\\"familyId\\\":\\\"aRgHE68dts4Wbef2j\\\",\\\"instructions\\\":\\\"Create a function that returns `true` if a string contains any spaces.\\\\n\\\\n### Examples\\\\n```\\\\nhasSpaces(\\\\\\\"hello\\\\\\\") ➞ false\\\\n\\\\nhasSpaces(\\\\\\\"hello, world\\\\\\\") ➞ true\\\\n\\\\nhasSpaces(\\\\\\\" \\\\\\\") ➞ true\\\\n\\\\nhasSpaces(\\\\\\\"\\\\\\\") ➞ false\\\\n\\\\nhasSpaces(\\\\\\\",./!@#\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\n- An empty string does not contain any spaces.\\\\n- Try doing this without RegEx.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class Tests {\\\\n\\\\t@Test\\\\n\\\\tpublic void contains_spaces_tests() {\\\\n\\\\t\\\\tSystem.out.println(\\\\\\\"Should work for strings containing spaces.\\\\\\\");\\\\n\\\\t\\\\tassertEquals(true, Challenge.hasSpaces(\\\\\\\"Foo bar\\\\\\\"));","thisId":"1012","channelHost":"edabit.com","id":"1012","opcode":"1","channelId":"2","timestamp":"1652648853285"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"68\\\"]}\"]","thisId":"1013","channelHost":"edabit.com","id":"1013","opcode":"1","channelId":"2","timestamp":"1652648853416"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"41736","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"68\\\",\\\"result\\\":{\\\"_id\\\":\\\"vRBrS8n6M5fgLz28H\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int ctoa(char c) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5159106296547055,\\\"familyId\\\":\\\"WEqJEvjzTapzZunkA\\\",\\\"instructions\\\":\\\"Create a function that returns the ASCII value of the passed in character.\\\\n\\\\n### Examples\\\\n```\\\\nctoa('A') ➞ 65\\\\n\\\\nctoa('m') ➞ 109\\\\n\\\\nctoa('[') ➞ 91\\\\n\\\\nctoa('\\\\\\\\') ➞ 92\\\\n```\\\\n\\\\n### Notes\\\\n- Don't forget to `return` the result.\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're *really* stuck, unlock solutions in the **Solutions** tab.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class Tests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertEquals(32, Challenge.ctoa(' '));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test \\\\n\\\\tpublic void test2() {\\\\n\\\\t\\\\tassertEquals(65, Challenge.ctoa('A'));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Te","thisId":"1014","channelHost":"edabit.com","id":"1014","opcode":"1","channelId":"2","timestamp":"1652648853421"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"69\\\"]}\"]","thisId":"1015","channelHost":"edabit.com","id":"1015","opcode":"1","channelId":"2","timestamp":"1652648853545"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6630","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"69\\\",\\\"result\\\":{\\\"_id\\\":\\\"9FXkWr6AAc3rFHnyL\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class MarketDay {\\\\n\\\\tpublic static String whoWinsTonight(int coins, int space, int price, int size) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5094339622641509,\\\"familyId\\\":\\\"yPSmHS28mHez3enGz\\\",\\\"instructions\\\":\\\"*Backpack Bill and Wallet Will set off for the annual festival. As they approach the stalls, Bill retorts that he'll be able to bring home more stuff than Will. Taking this as a challenge, Will refutes and a competition spurs into action.*\\\\n\\\\n* Backpack Bill has an infinite inventory space, but a limited number of coins.\\\\n* Wallet Will has an infinite number of coins, but a limited inventory space.\\\\n\\\\n**Create a function that returns the name of the man who can bring home the most items. The parameters are given as follows:**\\\\n\\\\n1. Bill's amount of money.\\\\n2. Will's amount of inventory space.\\\\n3. The item's price.\\\\n4. The item's size","thisId":"1016","channelHost":"edabit.com","id":"1016","opcode":"1","channelId":"2","timestamp":"1652648853549"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"70\\\"]}\"]","thisId":"1017","channelHost":"edabit.com","id":"1017","opcode":"1","channelId":"2","timestamp":"1652648853677"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"69317","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"70\\\",\\\"result\\\":{\\\"_id\\\":\\\"GDWatbfCLg9H7uPMF\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n    public static int getLastItem(int[] nums) {\\\\n      \\\\n    }\\\\n}\\\",\\\"difficulty\\\":0.5206882425235559,\\\"familyId\\\":\\\"NR2oQbQJurpC2DNiJ\\\",\\\"instructions\\\":\\\"Create a method that accepts an array and returns the last item in the array.\\\\n\\\\n### **Examples**\\\\n```\\\\ngetLastItem([1, 2, 3]) ➞ 3\\\\n\\\\ngetLastItem([0]) ➞ 0\\\\n\\\\ngetLastItem([-1, -3]) ➞ -3\\\\n```\\\\n\\\\n### Notes\\\\n- Don't forget to `return` the result.\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're *really* stuck, unlock solutions in the **Solutions** tab.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ProgramTest {\\\\n\\\\t@Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertThat(Program.getLastItem(new int[]{1, 2, 3}), is(3));\\\\n\\\\t}\\\\n\\\\t\\\\","thisId":"1018","channelHost":"edabit.com","id":"1018","opcode":"1","channelId":"2","timestamp":"1652648853682"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"73\\\"]}\"]","thisId":"1019","channelHost":"edabit.com","id":"1019","opcode":"1","channelId":"2","timestamp":"1652648853830"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7190","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"73\\\",\\\"result\\\":{\\\"_id\\\":\\\"6KjJ7PB6iTqDbShyF\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class ArrayIndex { \\\\n\\\\tpublic static int valueAt(int[] r, double i) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5302013422818792,\\\"familyId\\\":\\\"svznmhPuYB2JFuF9Z\\\",\\\"instructions\\\":\\\"Given an array and an index, return the value of the array with the given index.\\\\n\\\\n### Examples\\\\n```\\\\nvalueAt([1, 2, 3, 4, 5, 6], 10 / 2) ➞ 6\\\\n\\\\nvalueAt([1, 2, 3, 4, 5, 6], 8 / 2) ➞ 5\\\\n\\\\nvalueAt([1, 2, 3, 4], 6.535355314 / 2) ➞ 4\\\\n```\\\\n\\\\n### Notes\\\\n`Math.floor()` can be helpful.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals; \\\\nimport org.junit.Test; \\\\n\\\\npublic class ArrayIndexTest {\\\\n\\\\t@Test\\\\n\\\\tpublic void test01() { \\\\n\\\\t\\\\tassertEquals(6, ArrayIndex.valueAt(new int[] {1, 2, 3, 4, 5, 6}, 10 / 2));\\\\n\\\\t}\\\\n\\\\n\\\\t@Test\\\\n\\\\tpublic void test02() { \\\\n\\\\t\\\\tassertEquals(4, ArrayIndex.valueAt","thisId":"1020","channelHost":"edabit.com","id":"1020","opcode":"1","channelId":"2","timestamp":"1652648853834"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"72\\\"]}\"]","thisId":"1021","channelHost":"edabit.com","id":"1021","opcode":"1","channelId":"2","timestamp":"1652648853963"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"27448","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"72\\\",\\\"result\\\":{\\\"_id\\\":\\\"R5ZkenxiDWShEfFCy\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int totalCups(int n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.523094688221709,\\\"familyId\\\":\\\"xSP8rE4EAq9gHtZ53\\\",\\\"instructions\\\":\\\"For each of the 6 coffee cups I buy, I get a 7th cup free. In total, I get 7 cups. Create a function that takes `n` cups bought and return as an integer the total number of cups I would get.\\\\n\\\\n### Examples\\\\n```\\\\ntotalCups(6) ➞ 7\\\\n\\\\ntotalCups(12) ➞ 14\\\\n\\\\ntotalCups(213) ➞ 248\\\\n```\\\\n\\\\n### Notes\\\\n- Number of cups I bought + number of cups I got for free.\\\\n- Only valid inputs will be given.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(7, Challenge.totalCups(6));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(3, Challenge.t","thisId":"1022","channelHost":"edabit.com","id":"1022","opcode":"1","channelId":"2","timestamp":"1652648853969"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"71\\\"]}\"]","thisId":"1023","channelHost":"edabit.com","id":"1023","opcode":"1","channelId":"2","timestamp":"1652648854072"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7406","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"71\\\",\\\"result\\\":{\\\"_id\\\":\\\"ZGzabS3xzpPcT55E6\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class ExperiencePoints {\\\\n\\\\tpublic static String getXP(int[] c) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\t\\\\n}\\\",\\\"difficulty\\\":0.535031847133758,\\\"familyId\\\":\\\"FWt59ngtn6ktkxgLd\\\",\\\"instructions\\\":\\\"As you complete challenges on Edabit, you gain experience points depending on the level of difficulty of the challenge. The points for each level of difficulty are as follows:\\\\n\\\\nDifficulty | Experience Points\\\\n--- | ---\\\\nVery Easy | 5XP\\\\nEasy | 10XP\\\\nMedium | 20XP\\\\nHard | 40XP\\\\nVery Hard | 80XP\\\\n\\\\nGiven an array of how many challenges a person has completed per level of difficulty, return **how many experience points** they'll have.\\\\n\\\\n### Examples\\\\n```\\\\ngetXP([89, 77, 30, 4, 1]) ➞ \\\\\\\"2055XP\\\\\\\"\\\\n// Very Easy: 89 * 5 = 445\\\\n// Easy: 77 * 10 = 770\\\\n// Medium: 30 * 20 = 600\\\\n// Hard: 4 * 40 = 160\\\\n// Very Hard: 1 * 80 = 80\\\\n// 445 + 770 + 600 + 160 + 80 = 2","thisId":"1024","channelHost":"edabit.com","id":"1024","opcode":"1","channelId":"2","timestamp":"1652648854076"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"74\\\"]}\"]","thisId":"1025","channelHost":"edabit.com","id":"1025","opcode":"1","channelId":"2","timestamp":"1652648854181"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8045","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"74\\\",\\\"result\\\":{\\\"_id\\\":\\\"XMWWPeZYeYDfd25Ys\\\",\\\"author\\\":\\\"Einy\\\",\\\"authorId\\\":\\\"5f6oSeq4r5WTXLdCQ\\\",\\\"code\\\":\\\"public class ModulusOperator {\\\\n\\\\tpublic static int mod(int a, int b) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5243243243243243,\\\"familyId\\\":\\\"oqqwZZeQRKidjmRx7\\\",\\\"instructions\\\":\\\"Create a function that will work as the modulus operator `%` without using the modulus operator. The modulus operator is a way to determine the remainder of a division operation. Instead of returning the result of the division, the modulo operation returns the whole number remainder.\\\\n\\\\n### Examples\\\\n```\\\\nmod(5, 2) ➞ 1\\\\n\\\\nmod(218, 5) ➞ 3\\\\n\\\\nmod(6, 3) ➞ 0\\\\n```\\\\n\\\\n### Notes\\\\nDon't use the `%` operator to return the results.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals;\\\\nimport org.junit.Test; \\\\n\\\\npublic class ModulusOperatorTest {\\\\n    @Test\\\\n    public void test1(){\\\\n        assertEquals(0, ModulusOperat","thisId":"1026","channelHost":"edabit.com","id":"1026","opcode":"1","channelId":"2","timestamp":"1652648854185"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"75\\\"]}\"]","thisId":"1027","channelHost":"edabit.com","id":"1027","opcode":"1","channelId":"2","timestamp":"1652648854309"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"41897","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"75\\\",\\\"result\\\":{\\\"_id\\\":\\\"pzLMEsMpbCLsPXqy2\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean isPlural(String word) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5273876404494382,\\\"familyId\\\":\\\"XiKQZGFFAhbjmPeKz\\\",\\\"instructions\\\":\\\"Create a function that takes in a word and determines whether or not it is plural. A plural word is one that ends in \\\\\\\"s\\\\\\\".\\\\n\\\\n### Examples\\\\n```\\\\nisPlural(\\\\\\\"changes\\\\\\\") ➞ true\\\\n\\\\nisPlural(\\\\\\\"change\\\\\\\") ➞ false\\\\n\\\\nisPlural(\\\\\\\"dudes\\\\\\\") ➞ true\\\\n\\\\nisPlural(\\\\\\\"magic\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\n- Don't forget to `return` the result.\\\\n- Remember that return `true` (_boolean_) is not the same as return `\\\\\\\"true\\\\\\\"` (_string_).\\\\n- This is an oversimplification of the English language. We are ignoring edge cases like \\\\\\\"goose\\\\\\\" and \\\\\\\"geese\\\\\\\", \\\\\\\"fungus\\\\\\\" and \\\\\\\"fungi\\\\\\\", etc.\\\\n- If you get stuck on a challenge, find help in the **Resources** t","thisId":"1028","channelHost":"edabit.com","id":"1028","opcode":"1","channelId":"2","timestamp":"1652648854314"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"78\\\"]}\"]","thisId":"1029","channelHost":"edabit.com","id":"1029","opcode":"1","channelId":"2","timestamp":"1652648854421"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"12122","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"78\\\",\\\"result\\\":{\\\"_id\\\":\\\"yX3pRAE63JLW9Nz6D\\\",\\\"author\\\":\\\"Caleb Miller\\\",\\\"authorId\\\":\\\"2QziknsznNeMPRh3g\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static int posCom(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5335570469798657,\\\"familyId\\\":\\\"9dTg3eL4GFbHbnPbC\\\",\\\"instructions\\\":\\\"Create a function that returns how many possible arrangements can come from a certain number of switches (on / off). In other words, for a given number of switches, how many different patterns of **on** and **off** can we have?\\\\n\\\\n### Examples\\\\n```\\\\nposCom(1) ➞ 2\\\\n\\\\nposCom(3) ➞ 8\\\\n\\\\nposCom(10) ➞ 1024\\\\n```\\\\n\\\\n### Notes\\\\nAll numbers will be whole and positive.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class PosComTest {\\\\n\\\\t@Test\\\\n  public void basicTests() {\\\\n\\\\t\\\\tassertEquals(32, Program.posCom(5));\\\\n\\\\t\\\\tassertEquals(16, Program.posCom(4));\\\\n\\\\t\\\\tassertEquals(8, Program.posCom(3));\\\\n\\\\t\\\\tassertEqua","thisId":"1030","channelHost":"edabit.com","id":"1030","opcode":"1","channelId":"2","timestamp":"1652648854425"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"79\\\"]}\"]","thisId":"1031","channelHost":"edabit.com","id":"1031","opcode":"1","channelId":"2","timestamp":"1652648854531"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"17994","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"79\\\",\\\"result\\\":{\\\"_id\\\":\\\"SQC525f4Wqn6F4LNC\\\",\\\"author\\\":\\\"bangyen\\\",\\\"authorId\\\":\\\"yv7c4H2jimSKHEjtG\\\",\\\"code\\\":\\\"public class Program {\\\\n  public static int arraySum(int[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.53315649867374,\\\"quality\\\":4.710344827586207,\\\"familyId\\\":\\\"4gephTy6ACnucpFpF\\\",\\\"instructions\\\":\\\"Create a function that takes an array and returns the sum of all numbers in the array.\\\\n\\\\n### Examples\\\\n```\\\\nsum([2, 7, 4]) ➞ 13\\\\n\\\\nsum([45, 3, 0]) ➞ 48\\\\n\\\\nsum([-2, 84, 23]) ➞ 105\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ProgramTest {\\\\n    @Test\\\\n    public void test1(){\\\\n        assertEquals(13, Program.arraySum(new int[]{2, 7, 4}));\\\\n    }\\\\n    @Test\\\\n    public void test2(){\\\\n        assertEquals(48, Program.arraySum(new int[]{45, 3, 0}));\\\\n    }\\\\n    @Test\\\\n    public void test3(){\\\\n        assertEquals(105, Program.arraySum(new int[]{-2","thisId":"1032","channelHost":"edabit.com","id":"1032","opcode":"1","channelId":"2","timestamp":"1652648854534"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"76\\\"]}\"]","thisId":"1033","channelHost":"edabit.com","id":"1033","opcode":"1","channelId":"2","timestamp":"1652648854641"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"35769","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"76\\\",\\\"result\\\":{\\\"_id\\\":\\\"D6Lcut2s2gEzdCPvv\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean match(String str1, String str2) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.5282861896838602,\\\"familyId\\\":\\\"fnBkcjXkE5zZoTd4T\\\",\\\"instructions\\\":\\\"Write a function that validates whether two strings are identical. Make it case insensitive.\\\\n\\\\n### Examples\\\\n```\\\\nmatch(\\\\\\\"hello\\\\\\\", \\\\\\\"hELLo\\\\\\\") ➞ true\\\\n\\\\nmatch(\\\\\\\"motive\\\\\\\", \\\\\\\"emotive\\\\\\\") ➞ false\\\\n\\\\nmatch(\\\\\\\"venom\\\\\\\", \\\\\\\"VENOM\\\\\\\") ➞ true\\\\n\\\\nmatch(\\\\\\\"mask\\\\\\\", \\\\\\\"mAskinG\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(true, Challenge.match(\\\\\\\"hello\\\\\\\", \\\\\\\"hELLo\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(true, Challenge.match(\\\\\\\"hey\\\\\\\", \\\\\\\"hey\\\\\\\"));\\\\n","thisId":"1034","channelHost":"edabit.com","id":"1034","opcode":"1","channelId":"2","timestamp":"1652648854646"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"77\\\"]}\"]","thisId":"1035","channelHost":"edabit.com","id":"1035","opcode":"1","channelId":"2","timestamp":"1652648854763"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"35185","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"77\\\",\\\"result\\\":{\\\"_id\\\":\\\"2fYkAMh9cGn5FpSZ9\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String operation(int num1, int num2) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5283806343906511,\\\"familyId\\\":\\\"EK6hZ2jbPak68tDQq\\\",\\\"instructions\\\":\\\"Write a function that takes two numbers and returns if they should be added, subtracted, multiplied or divided to get 24. If none of the operations can give 24, return `\\\\\\\"none\\\\\\\"`.\\\\n\\\\n### Examples\\\\n```\\\\noperation(15, 9) ➞ \\\\\\\"added\\\\\\\"\\\\n\\\\noperation(26, 2) ➞ \\\\\\\"subtracted\\\\\\\"\\\\n\\\\noperation(11, 11) ➞ \\\\\\\"none\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Only integers are used as test input.\\\\n- Numbers should be added, subtracted, divided or multiplied in the order they appear in the parameters.\\\\n- The function should return either `\\\\\\\"added\\\\\\\"`, `\\\\\\\"subtracted\\\\\\\"`, `\\\\\\\"divided\\\\\\\"`, `\\\\\\\"multiplied\\\\\\\"` or `\\\\\\\"none\\\\\\\"`.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.j","thisId":"1036","channelHost":"edabit.com","id":"1036","opcode":"1","channelId":"2","timestamp":"1652648854770"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"80\\\"]}\"]","thisId":"1037","channelHost":"edabit.com","id":"1037","opcode":"1","channelId":"2","timestamp":"1652648854869"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"26418","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"80\\\",\\\"result\\\":{\\\"_id\\\":\\\"3m2Xtr3vwYgrmra7t\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean kToK(int n, int k) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.5382022471910113,\\\"familyId\\\":\\\"bxWaMhozxp6u3QmHf\\\",\\\"instructions\\\":\\\"Write a function that returns `true` if `k^k == n` for input `(n, k)` and return `false` otherwise.\\\\n\\\\n### Examples\\\\n```\\\\nkToK(4, 2) ➞ true\\\\n\\\\nkToK(387420489, 9) ➞ true\\\\n// 9^9 == 387420489\\\\n\\\\nkToK(3124, 5) ➞ false\\\\n\\\\nkToK(17, 3) ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nThe `^` operator refers to exponentiation operation, not the bitwise XOR operation.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(true, Challenge.kToK(4, 2));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(true, Challenge.kToK(387420489, 9));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public vo","thisId":"1038","channelHost":"edabit.com","id":"1038","opcode":"1","channelId":"2","timestamp":"1652648854880"},{"outgoing":"false","opcodeString":"PING","payloadLength":"0","payloadFragment":"","thisId":"1039","channelHost":"edabit.com","id":"1039","opcode":"9","channelId":"2","timestamp":"1652648857284"},{"outgoing":"true","opcodeString":"PONG","payloadLength":"0","payloadFragment":"","thisId":"1040","channelHost":"edabit.com","id":"1040","opcode":"10","channelId":"2","timestamp":"1652648857294"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"81\\\"]}\"]","thisId":"1041","channelHost":"edabit.com","id":"1041","opcode":"1","channelId":"2","timestamp":"1652648857697"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"12909","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"81\\\",\\\"result\\\":{\\\"_id\\\":\\\"JLdbbsyogfpFHmeLS\\\",\\\"author\\\":\\\"KingzzPlayzz\\\",\\\"authorId\\\":\\\"DRjqgdcSkz58yiqea\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static int calculate(int num1, int num2, String operation) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.5400696864111498,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"cubuGgDqvwNQywrvp\\\",\\\"instructions\\\":\\\"Create a function that takes two numbers and a mathematical operator and returns the result.\\\\n\\\\n### Examples\\\\n```\\\\ncalculate(4, 9, \\\\\\\"+\\\\\\\") ➞ 13\\\\n\\\\ncalculate(12, 5, \\\\\\\"-\\\\\\\") ➞ 7\\\\n\\\\ncalculate(6, 3, \\\\\\\"*\\\\\\\") ➞ 18\\\\n\\\\ncalculate(25, 5, \\\\\\\"/\\\\\\\") ➞ 5\\\\n\\\\ncalculate(14, 3, \\\\\\\"%\\\\\\\") ➞ 2\\\\n```\\\\n\\\\n### Notes\\\\n- Numbers can be negative.\\\\n- The only operations used are those in the examples above.\\\",\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ProgramTest {\\\\n\\\\t@Test\\\\n\\\\tpublic void test1(){\\\\n\\\\t\\\\tassertEquals(-76, Challe","thisId":"1042","channelHost":"edabit.com","id":"1042","opcode":"1","channelId":"2","timestamp":"1652648857701"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"82\\\"]}\"]","thisId":"1043","channelHost":"edabit.com","id":"1043","opcode":"1","channelId":"2","timestamp":"1652648858310"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"12303","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"82\\\",\\\"result\\\":{\\\"_id\\\":\\\"AvebYmr8f3ECRWEWc\\\",\\\"author\\\":\\\"BijogFc24\\\",\\\"authorId\\\":\\\"Nb6LYPoQP6KJZt8mz\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static int starNumber(int n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.54,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"ooWY6rAXYPBgHqcbG\\\",\\\"instructions\\\":\\\"Create a method that takes a positive integer `n` and returns the `n`th \\\\\\\"star number\\\\\\\".\\\\n\\\\nA star number is a centered figurate number that represents a centered hexagram (six-pointed star), such as the one that Chinese checkers is played on.\\\\n\\\\n![star numbers for 1, 2 and 3](https://edabit-challenges.s3.amazonaws.com/nth-star.png)\\\\n\\\\n### Examples\\\\n```\\\\nstarNumber(2) ➞ 13\\\\n// n = 2\\\\n// 2nd star number = 13\\\\n\\\\nstarNumber(3) ➞ 37\\\\n// n = 3\\\\n// 3rd star number = 37\\\\n\\\\nstarNumber(5) ➞ 121\\\\n// n = 5\\\\n// 5th star number = 121\\\\n```\\\\n\\\\n### Notes\\\\n- `n` will always be a positive integer.\\\\n- The `n`th term of a star number can be represented as `6n(n-","thisId":"1044","channelHost":"edabit.com","id":"1044","opcode":"1","channelId":"2","timestamp":"1652648858323"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"83\\\"]}\"]","thisId":"1045","channelHost":"edabit.com","id":"1045","opcode":"1","channelId":"2","timestamp":"1652648858540"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"16367","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"83\\\",\\\"result\\\":{\\\"_id\\\":\\\"rhxxyrHreLDm6qJLu\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class RgbColor {\\\\n\\\\tpublic static int[] invertColor(int[] rgb) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5338345864661654,\\\"familyId\\\":\\\"RBiPnMGELK8iuye52\\\",\\\"instructions\\\":\\\"Create a function that inverts the `rgb` values in an array.\\\\n\\\\n### Examples\\\\n```\\\\ninvertColor([255, 255, 255]) ➞ [0, 0, 0]\\\\n// [255, 255, 255] is the color white.\\\\n// The opposite is [0, 0, 0], which is black.\\\\n\\\\ninvertColor([12, 13, 200]) ➞ [243, 242, 55]\\\\n\\\\ninvertColor([12, 17, 197]) ➞ [243, 238, 58]\\\\n\\\\ninvertColor([243, 242, 235]) ➞ [12, 13, 20]\\\\n\\\\ninvertColor([0, 0, 0]) ➞ [255, 255, 255]\\\\n\\\\ninvertColor([165, 170, 221]) ➞ [90, 85, 34]\\\\n```\\\\n\\\\n### Notes\\\\n255 is the max value of a single color channel.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"/** \\\\n================================= \\\\nTestGen 2.3 for JUnit 4.13.0 \\\\t\\\\t\\\\nTest Cas","thisId":"1046","channelHost":"edabit.com","id":"1046","opcode":"1","channelId":"2","timestamp":"1652648858548"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"84\\\"]}\"]","thisId":"1047","channelHost":"edabit.com","id":"1047","opcode":"1","channelId":"2","timestamp":"1652648858878"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5627","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"84\\\",\\\"result\\\":{\\\"_id\\\":\\\"YTGuwJBQjE4csZtLW\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class RedundantString {\\\\n\\\\tpublic static String repeatString(Object t, int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5571428571428572,\\\"familyId\\\":\\\"TjPfdRgaCipwSenhh\\\",\\\"instructions\\\":\\\"Create a function that takes a string `t` and a number `n` and returns the repeated string **n number of times**.\\\\n\\\\nReturn `\\\\\\\"Not a string!\\\\\\\"` if given argument `t` is not a string,\\\\n\\\\n### Examples\\\\n```\\\\nrepeatString(\\\\\\\"Tesha\\\\\\\", 2) ➞ \\\\\\\"TeshaTesha\\\\\\\"\\\\n\\\\nrepeatString(\\\\\\\"Deep\\\\\\\", 3) ➞ \\\\\\\"DeepDeepDeep\\\\\\\"\\\\n\\\\nrepeatString(\\\\\\\"Matt\\\\\\\", 4) ➞ \\\\\\\"MattMattMattMatt\\\\\\\"\\\\n\\\\nrepeatString(2000, 7) ➞ \\\\\\\"Not a string!\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're _really_ stuck, unlock solutions in the **Solutions** tab.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"","thisId":"1048","channelHost":"edabit.com","id":"1048","opcode":"1","channelId":"2","timestamp":"1652648858882"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"87\\\"]}\"]","thisId":"1049","channelHost":"edabit.com","id":"1049","opcode":"1","channelId":"2","timestamp":"1652648859047"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"32467","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"87\\\",\\\"result\\\":{\\\"_id\\\":\\\"qGrtkvLkAZg3oARbN\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String missingAngle(int angle1, int angle2) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.549127640036731,\\\"familyId\\\":\\\"8GS54pHPf3aWfg9Mw\\\",\\\"instructions\\\":\\\"You are given 2 out of 3 angles in a triangle, in degrees.\\\\n\\\\nWrite a function that classifies the missing angle as either `\\\\\\\"acute\\\\\\\"`, `\\\\\\\"right\\\\\\\"`, or `\\\\\\\"obtuse\\\\\\\"` based on its degrees.\\\\n\\\\n- An **acute** angle is less than 90 degrees.\\\\n- A **right** angle is exactly 90 degrees.\\\\n- An **obtuse** angle is greater than 90 degrees (but less than 180 degrees).\\\\n\\\\nFor example: `missingAngle(11, 20)` should return `\\\\\\\"obtuse\\\\\\\"`, since the missing angle would be 149 degrees, which makes it obtuse.\\\\n\\\\n### Examples\\\\n```\\\\nmissingAngle(27, 59) ➞ \\\\\\\"obtuse\\\\\\\"\\\\n\\\\nmissingAngle(135, 11) ➞ \\\\\\\"acute\\\\\\\"\\\\n\\\\nmissingAngle(45, 45) ➞ \\\\\\\"right\\\\\\\"\\\\n```\\\\n","thisId":"1050","channelHost":"edabit.com","id":"1050","opcode":"1","channelId":"2","timestamp":"1652648859052"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"89\\\"]}\"]","thisId":"1051","channelHost":"edabit.com","id":"1051","opcode":"1","channelId":"2","timestamp":"1652648859245"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"26581","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"89\\\",\\\"result\\\":{\\\"_id\\\":\\\"32iWpCcttQSaGB7xS\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int calculateExponent(int num, int exp) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5520361990950227,\\\"familyId\\\":\\\"xmznFj979Nb8cXQpp\\\",\\\"instructions\\\":\\\"Create a function that takes a base number and an exponent number and returns the calculation.\\\\n\\\\n### Examples\\\\n```\\\\ncalculateExponent(5, 5) ➞ 3125\\\\n\\\\ncalculateExponent(10, 10) ➞ 10000000000\\\\n\\\\ncalculateExponent(3, 3) ➞ 27\\\\n```\\\\n\\\\n### Notes\\\\n- All test inputs will be positive integers.\\\\n- Don't forget to `return` the result.\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're *really* stuck, unlock solutions in the **Solutions** tab.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class Tests {\\\\n\\\\t@Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tSystem.out.println(\\\\\\\"5^5 should equal","thisId":"1052","channelHost":"edabit.com","id":"1052","opcode":"1","channelId":"2","timestamp":"1652648859254"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"88\\\"]}\"]","thisId":"1053","channelHost":"edabit.com","id":"1053","opcode":"1","channelId":"2","timestamp":"1652648859454"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"15325","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"88\\\",\\\"result\\\":{\\\"_id\\\":\\\"qaKffo5AZo2RMcKyN\\\",\\\"author\\\":\\\"DanielosC\\\",\\\"authorId\\\":\\\"vn6nR36mdfY8z2zKx\\\",\\\"code\\\":\\\"public class Challenge{\\\\n\\\\tpublic static boolean squaresAndCubes(int[] arr) {\\\\n\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.549367088607595,\\\"familyId\\\":\\\"dHPffDSG5Jisk4QHB\\\",\\\"instructions\\\":\\\"Create a function that takes an array of two numbers and checks if the **square root** of the first number is equal to the **cube root** of the second number.\\\\n\\\\n### Examples\\\\n```\\\\ncheckSquareAndCube([4, 8]) ➞ true\\\\n\\\\ncheckSquareAndCube([16, 48]) ➞ false\\\\n\\\\ncheckSquareAndCube([9, 27]) ➞ true\\\\n```\\\\n\\\\n### Notes\\\\n- Remember to return either `true` or `false`.\\\\n- All arrays contain _two positive numbers_.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.hamcrest.core.Is.is;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertThat(Challenge.squaresAndCubes(new int[]{4, 8})","thisId":"1054","channelHost":"edabit.com","id":"1054","opcode":"1","channelId":"2","timestamp":"1652648859458"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"86\\\"]}\"]","thisId":"1055","channelHost":"edabit.com","id":"1055","opcode":"1","channelId":"2","timestamp":"1652648859586"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"9127","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"86\\\",\\\"result\\\":{\\\"_id\\\":\\\"LYAuwTojeNTyEiHgC\\\",\\\"author\\\":\\\"Mateusz Mędrowski\\\",\\\"authorId\\\":\\\"hPx9H3YM8j2k94DNW\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static double TotalDistance(double height, double length, double tower) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.5483870967741935,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"Dh4b3NR6sugC9pzpt\\\",\\\"instructions\\\":\\\"A snail goes up the stairs. Every step, he must go up (distance = `height` of step), then go to the next step (distance = ` length` of step). He wants to reach the top of the tower (tower height = `tower`).\\\\n\\\\nWrite a function that returns the distance the snail must travel to the top of the tower.\\\\n\\\\n### Examples\\\\n```\\\\nTotalDistance(0.2, 0.4, 100.0) ➞ 300.0\\\\n// Total distance is 300.\\\\n\\\\nTotalDistance(0.3, 0.2, 25.0) ➞ 41.7\\\\n\\\\nTotalDistance(0.1, 0.1, 6.0) ➞ 12\\\\n```\\\\n\\\\n### Notes\\\\n- All given values are greater than `0`.\\\\n- Tolerance of returned value is `0.1`.\\\\n- Number of steps determined","thisId":"1056","channelHost":"edabit.com","id":"1056","opcode":"1","channelId":"2","timestamp":"1652648859591"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"85\\\"]}\"]","thisId":"1057","channelHost":"edabit.com","id":"1057","opcode":"1","channelId":"2","timestamp":"1652648859701"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"9506","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"85\\\",\\\"result\\\":{\\\"_id\\\":\\\"3NTH452EBsJZ2ARsu\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class CharBetweenWords {\\\\n\\\\tpublic static String add(String c, String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5414364640883977,\\\"familyId\\\":\\\"yMNswgcj7CarqXdTP\\\",\\\"instructions\\\":\\\"Create a function that will put the first argument, a character, between every word in the second argument, a string.\\\\n\\\\n### Examples\\\\n```\\\\nadd(\\\\\\\"❤\\\\\\\", \\\\\\\"I love Tesh!\\\\\\\") ➞ \\\\\\\"I❤love❤Tesh!\\\\\\\"\\\\n\\\\nadd(\\\\\\\"\\ud83d\\udc4d\\\\\\\", \\\\\\\"Java is a lot of fun.\\\\\\\") ➞ \\\\\\\"Java\\ud83d\\udc4dis\\ud83d\\udc4da\\ud83d\\udc4dlot\\ud83d\\udc4dof\\ud83d\\udc4dfun.\\\\\\\"\\\\n\\\\nadd(\\\\\\\"#\\\\\\\", \\\\\\\"hello world!\\\\\\\") ➞ \\\\\\\"hello#world!\\\\\\\"\\\\n\\\\nadd(\\\\\\\"&\\\\\\\", \\\\\\\"you me world\\\\\\\") ➞ \\\\\\\"you&me&world\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nMake sure there are no spaces between words when returning the function.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"/** \\\\n======================","thisId":"1058","channelHost":"edabit.com","id":"1058","opcode":"1","channelId":"2","timestamp":"1652648859706"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"90\\\"]}\"]","thisId":"1059","channelHost":"edabit.com","id":"1059","opcode":"1","channelId":"2","timestamp":"1652648859795"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"20765","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"90\\\",\\\"result\\\":{\\\"_id\\\":\\\"JawiuQQuLkhcRQ2Hh\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String helloWorld(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5553914327917282,\\\"familyId\\\":\\\"QHJorSuw9eQsBrDJ5\\\",\\\"instructions\\\":\\\"Write a function that takes an integer and:\\\\n- If the number is a multiple of 3, return `\\\\\\\"Hello\\\\\\\"`.\\\\n- If the number is a multiple of 5, return `\\\\\\\"World\\\\\\\"`.\\\\n- If the number is a multiple of both 3 and 5, return `\\\\\\\"Hello World\\\\\\\"`.\\\\n\\\\n### Examples\\\\n```\\\\nhelloWorld(3) ➞ \\\\\\\"Hello\\\\\\\"\\\\n\\\\nhelloWorld(5) ➞ \\\\\\\"World\\\\\\\"\\\\n\\\\nhelloWorld(15) ➞ \\\\\\\"Hello World\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nDon't forget to `return` the result.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"Hello\\\\\\\", Challenge.helloWorld(3));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\","thisId":"1060","channelHost":"edabit.com","id":"1060","opcode":"1","channelId":"2","timestamp":"1652648859800"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"91\\\"]}\"]","thisId":"1061","channelHost":"edabit.com","id":"1061","opcode":"1","channelId":"2","timestamp":"1652648859901"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"25403","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"91\\\",\\\"result\\\":{\\\"_id\\\":\\\"peRoJ3SoSYgsRkFzc\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class StringNumber {\\\\n\\\\tpublic static int toInt(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\tpublic static String toStr(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5567901234567901,\\\"familyId\\\":\\\"eMyxjPCY5EZaSRn5B\\\",\\\"instructions\\\":\\\"Write two functions:\\\\n\\\\n1. `toInt()` : A function to convert a string to an integer.\\\\n2. `toStr()` : A function to convert an integer to a string.\\\\n\\\\n### Examples\\\\n```\\\\ntoInt(\\\\\\\"77\\\\\\\") ➞ 77\\\\n\\\\ntoInt(\\\\\\\"532\\\\\\\") ➞ 532\\\\n\\\\ntoStr(77) ➞ \\\\\\\"77\\\\\\\"\\\\n\\\\ntoStr(532) ➞ \\\\\\\"532\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Don't forget to `return` the result.\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're *really* stuck, unlock solutions in the **Solutions** tab.\\\",\\\"lab\\\":\\\"import org.junit.Test; \\\\nimport static org.junit.Assert.assertEquals; \\\\nimport static org.junit.Assert.assertNotEquals; ","thisId":"1062","channelHost":"edabit.com","id":"1062","opcode":"1","channelId":"2","timestamp":"1652648859907"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"92\\\"]}\"]","thisId":"1063","channelHost":"edabit.com","id":"1063","opcode":"1","channelId":"2","timestamp":"1652648860006"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8890","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"92\\\",\\\"result\\\":{\\\"_id\\\":\\\"ZfZMvwTzcTTG2QRzA\\\",\\\"author\\\":\\\"Mubashir Hassan \\\",\\\"authorId\\\":\\\"T6iBEE2jp7f7iEF2P\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static String amazingEdabit(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5564516129032258,\\\"familyId\\\":\\\"MqFpuNp89FwDGKnAL\\\",\\\"instructions\\\":\\\"Create a function that takes a string and changes the word **amazing** to **not amazing**. Return the string without any change if the word **edabit** is part of the string.\\\\n\\\\n### Examples\\\\n```\\\\namazingEdabit(\\\\\\\"edabit is amazing.\\\\\\\") ➞ \\\\\\\"edabit is amazing.\\\\\\\"\\\\n\\\\namazingEdabit(\\\\\\\"Mubashir is amazing.\\\\\\\") ➞ \\\\\\\"Mubashir is not amazing.\\\\\\\"\\\\n\\\\namazingEdabit(\\\\\\\"Infinity is amazing.\\\\\\\") ➞ \\\\\\\"Infinity is not amazing.\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nEdabit is amazing :)\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ProgramTest {\\\\n\\\\t\\\\t@Test \\\\n\\\\tpublic ","thisId":"1064","channelHost":"edabit.com","id":"1064","opcode":"1","channelId":"2","timestamp":"1652648860009"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"93\\\"]}\"]","thisId":"1065","channelHost":"edabit.com","id":"1065","opcode":"1","channelId":"2","timestamp":"1652648860127"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"22707","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"93\\\",\\\"result\\\":{\\\"_id\\\":\\\"6ECfG93f3izMagjkP\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int addUpTo(int n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.5570839064649243,\\\"familyId\\\":\\\"mgA3LoG6hzCHhawmq\\\",\\\"instructions\\\":\\\"Write a function that takes the last number of a consecutive list of numbers and returns the total of all numbers up to and including it.\\\\n\\\\n### Examples\\\\n```\\\\naddUpTo(3) ➞ 6\\\\n// 1 + 2 + 3 = 6\\\\n\\\\naddUpTo(10) ➞ 55\\\\n// 1 + 2 + 3 + ... + 10 = 55\\\\n\\\\naddUpTo(7) ➞ 28\\\\n// 1 + 2 + 3 + ... + 7 = 28\\\\n```\\\\n\\\\n### Notes\\\\n- You will only be given valid inputs.\\\\n- There are various ways of doing this; try finding them!\\\\n- Remember to `return` the result.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(6, Challenge.addUpTo(3));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  ","thisId":"1066","channelHost":"edabit.com","id":"1066","opcode":"1","channelId":"2","timestamp":"1652648860134"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"94\\\"]}\"]","thisId":"1067","channelHost":"edabit.com","id":"1067","opcode":"1","channelId":"2","timestamp":"1652648860239"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"11730","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"94\\\",\\\"result\\\":{\\\"_id\\\":\\\"Pqmoa94kK9JgHo8mr\\\",\\\"author\\\":\\\"Bonunu\\\",\\\"authorId\\\":\\\"av5QexsdPza9FsRCq\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static int cubeSquareRoot(int num) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.5581395348837209,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"mhnNCqRNR56Rx9xQ3\\\",\\\"instructions\\\":\\\"Create a function that takes a number as an argument and returns the **square root** of that number **cubed**.\\\\n\\\\n### Examples\\\\n```\\\\ncubeSquareRoot (81) ➞ 729\\\\n\\\\ncubeSquareRoot (1646089) ➞ 2111932187\\\\n\\\\ncubeSquareRoot (695556) ➞ 580093704\\\\n```\\\\n\\\\n### Notes\\\\nAll numbers will evenly square root, so don't worry about decimal numbers.\\\",\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(729, Challenge.cubeSquareRoot(81));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(211","thisId":"1068","channelHost":"edabit.com","id":"1068","opcode":"1","channelId":"2","timestamp":"1652648860243"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"97\\\"]}\"]","thisId":"1069","channelHost":"edabit.com","id":"1069","opcode":"1","channelId":"2","timestamp":"1652648860352"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"18364","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"97\\\",\\\"result\\\":{\\\"_id\\\":\\\"YMLm3DpuZXHFDAnou\\\",\\\"author\\\":\\\"Kálmán Vilisics\\\",\\\"authorId\\\":\\\"Es4eX2stRpyoXeC7f\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int indexMultiplier(int[] arr) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.5649606299212598,\\\"familyId\\\":\\\"47eBhuyTszGrtLYbE\\\",\\\"instructions\\\":\\\"Return the sum of all items in an array, where each item is multiplied by its index (zero-based). For empty arrays, return `0`.\\\\n\\\\n### Examples\\\\n```\\\\nindexMultiplier([1, 2, 3, 4, 5]) ➞ 40\\\\n// (1*0 + 2*1 + 3*2 + 4*3 + 5*4)\\\\n\\\\nindexMultiplier([-3, 0, 8, -6]) ➞ -2\\\\n// (-3*0 + 0*1 + 8*2 + -6*3)\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(-4, Challenge.indexMultiplier(new int[]{9, 3, 7, -7}));\\\\n  }\\\\n  @Test\\\\n  public void test2() {\\\\n    assertEquals(8, Challenge.indexMultiplier(new int[]{3, 8,","thisId":"1070","channelHost":"edabit.com","id":"1070","opcode":"1","channelId":"2","timestamp":"1652648860355"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"98\\\"]}\"]","thisId":"1071","channelHost":"edabit.com","id":"1071","opcode":"1","channelId":"2","timestamp":"1652648860465"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"18239","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"98\\\",\\\"result\\\":{\\\"_id\\\":\\\"govh9K8oJDzYgXAkY\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int calcDeterminant(int[][] matrix) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.565,\\\"familyId\\\":\\\"BQMd7J42aWWSuJC26\\\",\\\"instructions\\\":\\\"Create a function to calculate the determinant of a `2 * 2` matrix. The determinant of the following matrix is: `ad - bc`:\\\\n\\\\n```\\\\n[[a, b], [c, d]]\\\\n```\\\\n\\\\n### Examples\\\\n```\\\\ncalcDeterminant([\\\\n  [1, 2],\\\\n  [3, 4]\\\\n]) ➞ -2\\\\n\\\\ncalcDeterminant([\\\\n  [5, 3],\\\\n  [3, 1]\\\\n]) ➞ -4\\\\n\\\\ncalcDeterminant([\\\\n  [1, 1],\\\\n  [1, 1]\\\\n]) ➞ 0\\\\n```\\\\n\\\\n### Notes\\\\nMatrix will be in `2 * 2` form only.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class Tests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertThat(Challenge.calcDeterminant(new int[][]{{1, 2}, {3, 4}}), is(-2));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Te","thisId":"1072","channelHost":"edabit.com","id":"1072","opcode":"1","channelId":"2","timestamp":"1652648860469"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"99\\\"]}\"]","thisId":"1073","channelHost":"edabit.com","id":"1073","opcode":"1","channelId":"2","timestamp":"1652648860609"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"21467","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"99\\\",\\\"result\\\":{\\\"_id\\\":\\\"iXN3vagpLRSwxRYvx\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String monthName(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5665101721439749,\\\"familyId\\\":\\\"isjcBFo45L2KNy2bE\\\",\\\"instructions\\\":\\\"Create a function that takes a number (from 1 to 12) and returns its corresponding month name as a string. For example, if you're given `3` as input, your function should return `\\\\\\\"March\\\\\\\"`, because March is the 3rd month.\\\\n\\\\nNumber | Month Name\\\\n--- | ---\\\\n1 | January\\\\n2 | February\\\\n3 | March\\\\n4 | April\\\\n5 | May\\\\n6 | June\\\\n7 | July\\\\n8 | August\\\\n9 | September\\\\n10 | October\\\\n11 | November\\\\n12 | December\\\\n\\\\n### Examples\\\\n```\\\\nmonthName(3) ➞ \\\\\\\"March\\\\\\\"\\\\n\\\\nmonthName(12) ➞ \\\\\\\"December\\\\\\\"\\\\n\\\\nmonthName(6) ➞ \\\\\\\"June\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- You can expect only integers ranging from 1 to 12 as test input.\\\\n- If you get stuck on a challenge, find help in th","thisId":"1074","channelHost":"edabit.com","id":"1074","opcode":"1","channelId":"2","timestamp":"1652648860614"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"95\\\"]}\"]","thisId":"1075","channelHost":"edabit.com","id":"1075","opcode":"1","channelId":"2","timestamp":"1652648860729"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6149","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"95\\\",\\\"result\\\":{\\\"_id\\\":\\\"r7q9G5qadSpb8976G\\\",\\\"author\\\":\\\"K_3B\\\",\\\"authorId\\\":\\\"zE46SymvixkeFJmPM\\\",\\\"code\\\":\\\"public class Program {\\\\n  public static String longBurp(int n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.5508474576271186,\\\"familyId\\\":\\\"BF4ra8ovBiLjsXbeJ\\\",\\\"instructions\\\":\\\"Create a function that returns the string \\\\\\\"Burp\\\\\\\" with the amount of \\\\\\\"r's\\\\\\\" determined by the input parameters of the function.\\\\n\\\\n### Examples\\\\n```\\\\nlongBurp(3) ➞ \\\\\\\"Burrrp\\\\\\\"\\\\n\\\\nlongBurp(5) ➞ \\\\\\\"Burrrrrp\\\\\\\"\\\\n\\\\nlongBurp(9) ➞ \\\\\\\"Burrrrrrrrrp\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Expect `num` to always be >= 1.\\\\n- Remember to use a capital \\\\\\\"B\\\\\\\".\\\\n- Don't forget to `return` the result.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ProgramTest {\\\\n\\\\n    @Test\\\\n    public void test1(){\\\\n        assertEquals(\\\\\\\"Burrrp\\\\\\\", Program.longBurp(3));\\\\n    }\\\\n\\\\t @Test\\\\n ","thisId":"1076","channelHost":"edabit.com","id":"1076","opcode":"1","channelId":"2","timestamp":"1652648860736"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"96\\\"]}\"]","thisId":"1077","channelHost":"edabit.com","id":"1077","opcode":"1","channelId":"2","timestamp":"1652648860848"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"19990","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"96\\\",\\\"result\\\":{\\\"_id\\\":\\\"6DanWfqmfYun2sNBf\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean isLeap(int year) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.5605815831987075,\\\"familyId\\\":\\\"6SPMnWy7zgDZi3rfZ\\\",\\\"instructions\\\":\\\"A leap year has one day added to February for being synchronized with the seasonal year. A leap year appears with a regular frequency, which is determined by the rule below:\\\\n\\\\n- A year must **either** be divisible by 400 **or** divisible by 4 **and not** 100.\\\\n\\\\nGiven a `year` you must implement a function that returns `true` if it's a leap year, or `false` if it's not.\\\\n\\\\n### Examples\\\\n```\\\\nisLeap(2020) ➞ true\\\\n// Exactly divided by 4 and not by 100.\\\\n\\\\nisLeap(1800) ➞ false\\\\n// Exactly divided by 4, but is also exactly divided by 100.\\\\n\\\\nisLeap(2000) ➞ true\\\\n// Exactly divided by 400.\\\\n\\\\nisLeap(2019) ➞ false\\\\n// It can't be exactly divided by 400 or by 4.\\\\n```\\\\n\\\\n### N","thisId":"1078","channelHost":"edabit.com","id":"1078","opcode":"1","channelId":"2","timestamp":"1652648860852"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"100\\\"]}\"]","thisId":"1079","channelHost":"edabit.com","id":"1079","opcode":"1","channelId":"2","timestamp":"1652648860954"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"9156","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"100\\\",\\\"result\\\":{\\\"_id\\\":\\\"Py6fFcpDMJNWyTxRD\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int countCharacters(String[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5675675675675675,\\\"quality\\\":4.5,\\\"familyId\\\":\\\"RvoR9bHet8ihpQiH6\\\",\\\"instructions\\\":\\\"Create a function to calculate how many characters in total are needed to make up the shape. You will be given an array of strings which make up a shape in the compiler (i.e. a square, a rectangle or a line).\\\\n\\\\n### Examples\\\\n```\\\\ncountCharacters([\\\\n  \\\\\\\"###\\\\\\\",\\\\n  \\\\\\\"###\\\\\\\",\\\\n  \\\\\\\"###\\\\\\\"\\\\n]) ➞ 9\\\\n\\\\ncountCharacters([\\\\n  \\\\\\\"22222222\\\\\\\",\\\\n  \\\\\\\"22222222\\\\\\\",\\\\n]) ➞ 16\\\\n\\\\ncountCharacters([\\\\n  \\\\\\\"------------------\\\\\\\"\\\\n]) ➞ 18\\\\n\\\\ncountCharacters([]) ➞ 0\\\\n\\\\ncountCharacters([\\\\\\\"\\\\\\\", \\\\\\\"\\\\\\\"]) ➞ 0\\\\n```\\\\n\\\\n### Notes\\\\nReturn `0` if the given array is empty.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\ni","thisId":"1080","channelHost":"edabit.com","id":"1080","opcode":"1","channelId":"2","timestamp":"1652648860960"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"102\\\"]}\"]","thisId":"1081","channelHost":"edabit.com","id":"1081","opcode":"1","channelId":"2","timestamp":"1652648861058"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8492","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"102\\\",\\\"result\\\":{\\\"_id\\\":\\\"KGybTr2AxDsBtYTrY\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Home {\\\\n\\\\tpublic static int distanceHome(int[] dist) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5727272727272728,\\\"quality\\\":4.744186046511628,\\\"familyId\\\":\\\"kc7zKBdoEoE2KbcPN\\\",\\\"instructions\\\":\\\"You will be given an array, showing how far James travels away from his home for each day. He may choose to travel towards or away from his house, so negative values are to be expected.\\\\n\\\\nCreate a function that calculates what distance James must walk to get back home.\\\\n\\\\n### Examples\\\\n```\\\\ndistanceHome([2, 4, 2, 5]) ➞ 13\\\\n\\\\ndistanceHome([-1, -4, -3, -2]) ➞ 10\\\\n\\\\ndistanceHome([3, 4, -5, -2]) ➞ 0\\\\n```\\\\n\\\\n### Notes\\\\n- Assume that James only travels in a straight line.\\\\n- Distance is always a positive number.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"/** \\\\n================================= \\\\nTestGen 2.1 for JUnit 4.13.0 \\\\t\\\\t\\\\nTest Case: Home::dis","thisId":"1082","channelHost":"edabit.com","id":"1082","opcode":"1","channelId":"2","timestamp":"1652648861061"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"103\\\"]}\"]","thisId":"1083","channelHost":"edabit.com","id":"1083","opcode":"1","channelId":"2","timestamp":"1652648861175"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6894","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"103\\\",\\\"result\\\":{\\\"_id\\\":\\\"KsowZk9crJSRd9uko\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class FourthLetter {\\\\n\\\\tpublic static int countDs(String s) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5769230769230769,\\\"quality\\\":4.840579710144928,\\\"familyId\\\":\\\"HfPCPd9TqixAkwPGu\\\",\\\"instructions\\\":\\\"Create a function that counts how many D's are in a sentence.\\\\n\\\\n### Examples\\\\n```\\\\ncountDs(\\\\\\\"My friend Dylan got distracted in school.\\\\\\\") ➞ 4\\\\n\\\\ncountDs(\\\\\\\"Debris was scattered all over the yard.\\\\\\\") ➞ 3\\\\n\\\\ncountDs(\\\\\\\"The rodents hibernated in their den.\\\\\\\") ➞ 3\\\\n```\\\\n\\\\n### Notes\\\\n- Your function must be case-insensitive.\\\\n- Remember to `return` the result.\\\\n- Check the **Resources** for help.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals;\\\\n\\\\nimport org.junit.Test;\\\\n\\\\npublic class FourthLetterTests {\\\\n\\\\tprivate String[] sentences = new String[] {\\\\n\\\\t\\\\t\\\\\\\"My friend Dylan got distracted in sch","thisId":"1084","channelHost":"edabit.com","id":"1084","opcode":"1","channelId":"2","timestamp":"1652648861183"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"105\\\"]}\"]","thisId":"1085","channelHost":"edabit.com","id":"1085","opcode":"1","channelId":"2","timestamp":"1652648861283"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"13794","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"105\\\",\\\"result\\\":{\\\"_id\\\":\\\"oqMBTbwcxMDodEbWs\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String howManyTimes(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5731414868105515,\\\"familyId\\\":\\\"p3jy2eFFmkPnFJsNw\\\",\\\"instructions\\\":\\\"Write a function that takes an integer and returns a string with the given number of `\\\\\\\"a\\\\\\\"`s in Edabit.\\\\n\\\\n### Examples\\\\n```\\\\nhowManyTimes(5) ➞ \\\\\\\"Edaaaaabit\\\\\\\"\\\\n\\\\nhowManyTimes(0) ➞ \\\\\\\"Edbit\\\\\\\"\\\\n\\\\nhowManyTimes(12) ➞ \\\\\\\"Edaaaaaaaaaaaabit\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- The string must start with \\\\\\\"Ed\\\\\\\" and end with \\\\\\\"bit\\\\\\\".\\\\n- You'll only be given integers as test input.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"Edaaaaabit\\\\\\\", Challenge.howManyTimes(5));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(\\\\\\\"Edaa","thisId":"1086","channelHost":"edabit.com","id":"1086","opcode":"1","channelId":"2","timestamp":"1652648861287"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"101\\\"]}\"]","thisId":"1087","channelHost":"edabit.com","id":"1087","opcode":"1","channelId":"2","timestamp":"1652648861410"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"22373","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"101\\\",\\\"result\\\":{\\\"_id\\\":\\\"hAtARtyLzAHb2TEP5\\\",\\\"author\\\":\\\"rubens\\\",\\\"authorId\\\":\\\"XhzKztoQYYQzZ2c7o\\\",\\\"code\\\":\\\"public class Program {\\\\n    public static boolean check(int[] arr, int el) {\\\\n\\\\t\\\\t\\\\t\\\\n    }\\\\n}\\\",\\\"difficulty\\\":0.5681198910081744,\\\"familyId\\\":\\\"TfGePb5pZApy9ndAj\\\",\\\"instructions\\\":\\\"Write a function to check if an array contains a particular number.\\\\n\\\\n### Examples\\\\n```\\\\ncheck([1, 2, 3, 4, 5], 3) ➞ true\\\\n\\\\ncheck([1, 1, 2, 1, 1], 3) ➞ false\\\\n\\\\ncheck([5, 5, 5, 6], 5) ➞ true\\\\n\\\\ncheck([], 5) ➞ false\\\\n```\\\\n\\\\n### Notes\\\\n- Don't forget to `return` the result.\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're *really* stuck, unlock solutions in the **Solutions** tab.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(true, Program.check(new int[]{1, 2, 3, 4, 5}, 3));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n ","thisId":"1088","channelHost":"edabit.com","id":"1088","opcode":"1","channelId":"2","timestamp":"1652648861415"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"104\\\"]}\"]","thisId":"1089","channelHost":"edabit.com","id":"1089","opcode":"1","channelId":"2","timestamp":"1652648861527"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"13777","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"104\\\",\\\"result\\\":{\\\"_id\\\":\\\"dWpuMsnxdJsBZqj8P\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean hurdleJump(int[] hurdles, int h) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5728155339805825,\\\"familyId\\\":\\\"AkNb8Ys88KkDEkyXF\\\",\\\"instructions\\\":\\\"Create a function that takes an array of hurdle heights and a jumper's jump height, and determine whether or not the hurdler can clear all the hurdles.\\\\n\\\\nA hurdler can clear a hurdle if their jump height is **greater than or equal to** the hurdle height.\\\\n\\\\n### Examples\\\\n```\\\\nhurdleJump([1, 2, 3, 4, 5], 5) ➞ true\\\\n\\\\nhurdleJump([5, 5, 3, 4, 5], 3) ➞ false\\\\n\\\\nhurdleJump([5, 4, 5, 6], 10) ➞ true\\\\n\\\\nhurdleJump([1, 2, 1], 1) ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nReturn `true` for the edge case of an empty array of hurdles. (Zero hurdles means that any jump height can clear them).\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npu","thisId":"1090","channelHost":"edabit.com","id":"1090","opcode":"1","channelId":"2","timestamp":"1652648861531"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"106\\\"]}\"]","thisId":"1091","channelHost":"edabit.com","id":"1091","opcode":"1","channelId":"2","timestamp":"1652648861654"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5594","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"106\\\",\\\"result\\\":{\\\"_id\\\":\\\"ZYfF9BDSSKeCEtkiC\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class BaseNumberAge {\\\\n  public static String happyBirthday(int age) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.5740740740740741,\\\"familyId\\\":\\\"nasKN43eZddrMwaed\\\",\\\"instructions\\\":\\\"**Tesha** is getting old but she wants to celebrate her **20th** or **21st** birthday only. It is possible with some basic maths skills. She just needs to select the correct number base with your help!\\\\n\\\\nFor example, if her current age is 22, that's exactly 20 - in base 11.  Similarly, 65 is exactly 21 - in base 32 and so on.\\\\n\\\\nCreate a function that takes her current `age` and returns the given age **20 (or 21) years, with number base** in the format specified in the below examples.\\\\n\\\\n### Examples\\\\n```\\\\nhappyBirthday(54) ➞ \\\\\\\"Tesha is just 20, in base 27!\\\\\\\"\\\\n\\\\nhappyBirthday(46) ➞ \\\\\\\"Tesha is just 20, in base 23!\\\\\\\"\\\\n\\\\nhappyBirthday(65) ➞ \\\\\\\"Tesha is jus","thisId":"1092","channelHost":"edabit.com","id":"1092","opcode":"1","channelId":"2","timestamp":"1652648861895"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"107\\\"]}\"]","thisId":"1093","channelHost":"edabit.com","id":"1093","opcode":"1","channelId":"2","timestamp":"1652648861922"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"13059","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"107\\\",\\\"result\\\":{\\\"_id\\\":\\\"TfL74CMecNnmtABNg\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int[] mysteryFunc(int[] arr, int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5747800586510264,\\\"familyId\\\":\\\"9vKFEauu6Johr2ETN\\\",\\\"instructions\\\":\\\"This is a **reverse coding challenge**. Normally you're given explicit directions with how to create a function. Here, you must generate your own function to satisfy the relationship between the inputs and outputs.\\\\n\\\\nYour task is to create a function that, when fed the inputs below, produces the sample outputs shown.\\\\n\\\\n### Examples\\\\n```\\\\n[5, 7, 8, 2, 1], 2 ➞ [1, 1, 0, 0, 1]\\\\n\\\\n[9, 8, 16, 47], 4 ➞ [1, 0, 0, 3]\\\\n\\\\n[17, 11, 99, 55, 23, 1], 5 ➞ [2, 1, 4, 0, 3, 1]\\\\n\\\\n[6, 1], 7 ➞ [6, 1]\\\\n\\\\n[3, 2, 9], 3 ➞ [0, 2, 0]\\\\n\\\\n[48, 22, 0, 19, 33, 100], 10 ➞ [8, 2, 0, 9, 3, 0]\\\\n```\\\\n\\\\n### Notes\\\\nIf you get stuck, see **Comments** for a hint.\\\",\\\"lab\\\":\\\"import static","thisId":"1094","channelHost":"edabit.com","id":"1094","opcode":"1","channelId":"2","timestamp":"1652648861927"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"108\\\"]}\"]","thisId":"1095","channelHost":"edabit.com","id":"1095","opcode":"1","channelId":"2","timestamp":"1652648861931"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"15109","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"108\\\",\\\"result\\\":{\\\"_id\\\":\\\"bGJX47L8tXXtzGRio\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int findDigitAmount(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5766590389016019,\\\"familyId\\\":\\\"6MYjbvtZHaLapBSW3\\\",\\\"instructions\\\":\\\"Create a function that takes a number as an argument and returns the amount of digits it has.\\\\n\\\\n### Examples\\\\n```\\\\nfindDigitAmount(123) ➞ 3\\\\n\\\\nfindDigitAmount(56) ➞ 2\\\\n\\\\nfindDigitAmount(7154) ➞ 4\\\\n\\\\nfindDigitAmount(61217311514) ➞ 11\\\\n\\\\nfindDigitAmount(0) ➞ 1\\\\n```\\\\n\\\\n### Notes\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're *really* stuck, unlock solutions in the **Solutions** tab.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tSystem.out.println(\\\\\\\"Should work with one digit.\\\\\\\"); \\\\n\\\\t\\\\tassertEquals(1, Chall","thisId":"1096","channelHost":"edabit.com","id":"1096","opcode":"1","channelId":"2","timestamp":"1652648861941"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"109\\\"]}\"]","thisId":"1097","channelHost":"edabit.com","id":"1097","opcode":"1","channelId":"2","timestamp":"1652648861964"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"15747","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"109\\\",\\\"result\\\":{\\\"_id\\\":\\\"rj5u8J5cn4CoEG3rY\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String[] firstLast(String[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5760869565217391,\\\"familyId\\\":\\\"ftsJ6X5DGufHsXRc7\\\",\\\"instructions\\\":\\\"Create a function that takes an array of strings and return the **first** and **last** elements as a new array.\\\\n\\\\n### Examples\\\\n```\\\\nfirstLast([\\\\\\\"one\\\\\\\", \\\\\\\"two\\\\\\\"]) ➞ [\\\\\\\"one\\\\\\\", \\\\\\\"two\\\\\\\"]\\\\n\\\\nfirstLast([\\\\\\\"edabit\\\\\\\", \\\\\\\"13\\\\\\\", \\\\\\\"true\\\\\\\"]) ➞ [\\\\\\\"edabit\\\\\\\", \\\\\\\"true\\\\\\\"]\\\\n\\\\nfirstLast([\\\\\\\"zero\\\\\\\"]) ➞ [\\\\\\\"zero\\\\\\\"]\\\\n```\\\\n\\\\n### Notes\\\\n- Test input will always contain a minimum of two elements within the array.\\\\n- Don't forget to `return` the result.\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're *really* stuck, unlock solutions in the **Solutions** tab.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\n","thisId":"1098","channelHost":"edabit.com","id":"1098","opcode":"1","channelId":"2","timestamp":"1652648861969"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"110\\\"]}\"]","thisId":"1099","channelHost":"edabit.com","id":"1099","opcode":"1","channelId":"2","timestamp":"1652648862078"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"18561","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"110\\\",\\\"result\\\":{\\\"_id\\\":\\\"yNGGdbWigsLXwPMqY\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int sumOfCubes(int[] nums) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5767284991568297,\\\"familyId\\\":\\\"5Awys6gb4SJ2PfQF9\\\",\\\"instructions\\\":\\\"Create a function that takes in an array of numbers and returns the sum of its cubes.\\\\n\\\\n### Examples\\\\n```\\\\nsumOfCubes([1, 5, 9]) ➞ 855\\\\n// Since 1^3 + 5^3 + 9^3 = 1 + 125 + 729 = 855\\\\n\\\\nsumOfCubes([3, 4, 5]) ➞ 216\\\\n\\\\nsumOfCubes([2]) ➞ 8\\\\n\\\\nsumOfCubes([]) ➞ 0\\\\n```\\\\n\\\\n### Notes\\\\nIf given an empty array, return `0`.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class Tests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertThat(Challenge.sumOfCubes(new int[]{1, 5, 9}), is(855));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test \\\\n\\\\tpublic void test2() {\\\\n\\\\t\\\\tassertThat(Challenge.sumOfCubes(new int[]{3","thisId":"1100","channelHost":"edabit.com","id":"1100","opcode":"1","channelId":"2","timestamp":"1652648862083"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"111\\\"]}\"]","thisId":"1101","channelHost":"edabit.com","id":"1101","opcode":"1","channelId":"2","timestamp":"1652648862190"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5018","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"111\\\",\\\"result\\\":{\\\"_id\\\":\\\"2gFHh4REnB2F2bb3E\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class TotalResistance {\\\\n  public static double parallelResistance(int[] r) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5769230769230769,\\\"familyId\\\":\\\"tyCYvnnWZW6s3Jvv9\\\",\\\"instructions\\\":\\\"If two or more resistors are connected in parallel, the overall resistance of the circuit reduces. It is possible to calculate the total resistance of a parallel circuit by using this formula:\\\\n\\\\n![1/RTotal = 1/R1 + 1/R2 + 1/R3 ...](https://edabit-challenges.s3.amazonaws.com/VUqSzKSyFRpK7yA3MziSe7E67UIajN0A2RKrY5g0wEqGY_RkznFxqQwTTZykw9ua-UXF-uzRRY92AjTPvj90V5Ln3T8ORk5fqh92.png)\\\\n\\\\nCreate a function that takes an array of parallel resistance values, and calculates the total resistance of the circuit.\\\\n\\\\n### Worked Example\\\\n```\\\\nparallelResistance([6, 3, 6]) ➞ 1.5\\\\n\\\\n// 1/RTotal = 1/6 + 1/3 + 1/6\\\\n// 1/RTotal = 2/3\\\\n// RTotal = 3/2 = 1.5\\\\n```\\\\n\\\\n### Exa","thisId":"1102","channelHost":"edabit.com","id":"1102","opcode":"1","channelId":"2","timestamp":"1652648862206"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"112\\\"]}\"]","thisId":"1103","channelHost":"edabit.com","id":"1103","opcode":"1","channelId":"2","timestamp":"1652648862289"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"18674","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"112\\\",\\\"result\\\":{\\\"_id\\\":\\\"MhH32ydsoJKkjFjyz\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String Go(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5771812080536913,\\\"familyId\\\":\\\"PFYuuRMoSykfjrRN9\\\",\\\"instructions\\\":\\\"Create a function that takes a number (from 1 - 60) and returns a corresponding `string` of hyphens.\\\\n\\\\n### Examples\\\\n```\\\\nGo(1) ➞ \\\\\\\"-\\\\\\\"\\\\n\\\\nGo(5) ➞ \\\\\\\"-----\\\\\\\"\\\\n\\\\nGo(3) ➞ \\\\\\\"---\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- You will be provided integers ranging from 1 to 60.\\\\n- Don't forget to return your result as a `string`.\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're *really* stuck, unlock solutions in the **Solutions** tab.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertEquals(\\\\\\\"-\\\\\\\", Challenge.Go(1));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@","thisId":"1104","channelHost":"edabit.com","id":"1104","opcode":"1","channelId":"2","timestamp":"1652648862293"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"113\\\"]}\"]","thisId":"1105","channelHost":"edabit.com","id":"1105","opcode":"1","channelId":"2","timestamp":"1652648862383"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6385","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"113\\\",\\\"result\\\":{\\\"_id\\\":\\\"BMzs2RZDgFvyLWn29\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class LetterInArray {\\\\n  public static boolean forbiddenLetter(String ch, String[] words) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.5794392523364486,\\\"familyId\\\":\\\"MARtN7sMXoHTMawQf\\\",\\\"instructions\\\":\\\"Given a letter and an array of words, return whether the letter **does not appear** in any of the words.\\\\n\\\\n### Examples\\\\n```\\\\nforbiddenLetter(\\\\\\\"m\\\\\\\", [\\\\\\\"deep\\\\\\\", \\\\\\\"loves\\\\\\\", \\\\\\\"tesh\\\\\\\"]) ➞ true\\\\n\\\\nforbiddenLetter(\\\\\\\"r\\\\\\\", [\\\\\\\"rock\\\\\\\", \\\\\\\"paper\\\\\\\", \\\\\\\"scissors\\\\\\\"]) ➞ false\\\\n\\\\nforbiddenLetter(\\\\\\\"a\\\\\\\", [\\\\\\\"spoon\\\\\\\", \\\\\\\"fork\\\\\\\", \\\\\\\"knife\\\\\\\"]) ➞ true\\\\n\\\\nforbiddenLetter(\\\\\\\"m\\\\\\\", []) ➞ true\\\\n```\\\\n\\\\n### Notes\\\\n* All inputs given will be in lowercase.\\\\n* You will always be given a **forbidden letter**, but there may be **empty arrays**.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static o","thisId":"1106","channelHost":"edabit.com","id":"1106","opcode":"1","channelId":"2","timestamp":"1652648862388"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"114\\\"]}\"]","thisId":"1107","channelHost":"edabit.com","id":"1107","opcode":"1","channelId":"2","timestamp":"1652648862494"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"16441","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"114\\\",\\\"result\\\":{\\\"_id\\\":\\\"B5u9LiN7cZHLkJzXa\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int[] transform(int[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5800376647834274,\\\"familyId\\\":\\\"iM9Dvyd668cqszb5v\\\",\\\"instructions\\\":\\\"Create a function that goes through the array, **incrementing (+1)** for each odd-valued number and **decrementing (-1)** for each even-valued number.\\\\n\\\\n### Examples\\\\n```\\\\ntransform([1, 2, 3, 4, 5]) ➞ [2, 1, 4, 3, 6]\\\\n\\\\ntransform([3, 3, 4, 3]) ➞ [4, 4, 3, 4]\\\\n\\\\ntransform([2, 2, 0, 8, 10]) ➞ [1, 1, -1, 7, 9]\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertThat(Challenge.transform(new int[]{1, 2, 3, 4, 5}), is(new int[]{2, 1, 4, 3, 6}));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test \\\\n\\\\tpublic void test2() {\\\\n","thisId":"1108","channelHost":"edabit.com","id":"1108","opcode":"1","channelId":"2","timestamp":"1652648862534"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"115\\\"]}\"]","thisId":"1109","channelHost":"edabit.com","id":"1109","opcode":"1","channelId":"2","timestamp":"1652648862753"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"15424","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"115\\\",\\\"result\\\":{\\\"_id\\\":\\\"eBQoq8LDPL6dM3Riz\\\",\\\"author\\\":\\\"rubens\\\",\\\"authorId\\\":\\\"XhzKztoQYYQzZ2c7o\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static int factorial(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5828460038986355,\\\"familyId\\\":\\\"auEwyAmevmr4aQo4k\\\",\\\"instructions\\\":\\\"Write a function that calculates the **factorial** of a number **recursively**.\\\\n\\\\n### Examples\\\\n```\\\\nfactorial(5) ➞ 120\\\\n\\\\nfactorial(3) ➞ 6\\\\n\\\\nfactorial(1) ➞ 1\\\\n\\\\nfactorial(0) ➞ 1\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertEquals(120, Program.factorial(5));\\\\n\\\\t}\\\\n\\\\n\\\\t@Test\\\\n\\\\tpublic void test2() {\\\\n\\\\t\\\\tassertEquals(6, Program.factorial(3));\\\\n\\\\t}\\\\n\\\\n\\\\t@Test\\\\n\\\\tpublic void test3() {\\\\n\\\\t\\\\tassertEquals(1, Program.factorial(1));\\\\n\\\\t}\\\\n\\\\n\\\\t@Test\\\\n\\\\tpublic void test4() {\\\\n\\\\t\\\\tassertEquals(1, Program.factorial","thisId":"1110","channelHost":"edabit.com","id":"1110","opcode":"1","channelId":"2","timestamp":"1652648862760"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"116\\\"]}\"]","thisId":"1111","channelHost":"edabit.com","id":"1111","opcode":"1","channelId":"2","timestamp":"1652648862767"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"22123","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"116\\\",\\\"result\\\":{\\\"_id\\\":\\\"Mr48aLdKMXpGrdTXK\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int[] MultiplyByLength(int[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5800807537012113,\\\"familyId\\\":\\\"G6zGBxaDP5ezE9K4X\\\",\\\"instructions\\\":\\\"Create a function to multiply all of the values in an array by the amount of values in the given array.\\\\n\\\\n### Examples\\\\n```\\\\nMultiplyByLength([2, 3, 1, 0]) ➞ [8, 12, 4, 0]\\\\n\\\\nMultiplyByLength([4, 1, 1]) ➞ ([12, 3, 3])\\\\n\\\\nMultiplyByLength([1, 0, 3, 3, 7, 2, 1]) ➞  [7, 0, 21, 21, 49, 14, 7]\\\\n\\\\nMultiplyByLength([0]) ➞ ([0])\\\\n```\\\\n\\\\n### Notes\\\\n- All of the values given are numbers.\\\\n- All arrays will have at least one element.\\\\n- Don't forget to `return` the result.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class Tests {\\\\n\\\\t@Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertT","thisId":"1112","channelHost":"edabit.com","id":"1112","opcode":"1","channelId":"2","timestamp":"1652648862812"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"121\\\"]}\"]","thisId":"1113","channelHost":"edabit.com","id":"1113","opcode":"1","channelId":"2","timestamp":"1652648862829"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"21301","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"121\\\",\\\"result\\\":{\\\"_id\\\":\\\"n22eru9bm8LMcBdYt\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String[] addEnding(String[] arr, String ending) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5817091454272864,\\\"familyId\\\":\\\"NLYjQKMWKouFasR3P\\\",\\\"instructions\\\":\\\"Create a function that adds a string ending to each member in an array.\\\\n\\\\n### Examples\\\\n```\\\\naddEnding([\\\\\\\"clever\\\\\\\", \\\\\\\"meek\\\\\\\", \\\\\\\"hurried\\\\\\\", \\\\\\\"nice\\\\\\\"], \\\\\\\"ly\\\\\\\")\\\\n➞ [\\\\\\\"cleverly\\\\\\\", \\\\\\\"meekly\\\\\\\", \\\\\\\"hurriedly\\\\\\\", \\\\\\\"nicely\\\\\\\"]\\\\n\\\\naddEnding([\\\\\\\"new\\\\\\\", \\\\\\\"pander\\\\\\\", \\\\\\\"scoop\\\\\\\"], \\\\\\\"er\\\\\\\")\\\\n➞ [\\\\\\\"newer\\\\\\\", \\\\\\\"panderer\\\\\\\", \\\\\\\"scooper\\\\\\\"]\\\\n\\\\naddEnding([\\\\\\\"bend\\\\\\\", \\\\\\\"sharpen\\\\\\\", \\\\\\\"mean\\\\\\\"], \\\\\\\"ing\\\\\\\")\\\\n➞ [\\\\\\\"bending\\\\\\\", \\\\\\\"sharpening\\\\\\\", \\\\\\\"meaning\\\\\\\"]\\\\n```\\\\n\\\\n### Notes\\\\n- Don't forget to `return` the result.\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're *r","thisId":"1114","channelHost":"edabit.com","id":"1114","opcode":"1","channelId":"2","timestamp":"1652648862834"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"120\\\"]}\"]","thisId":"1115","channelHost":"edabit.com","id":"1115","opcode":"1","channelId":"2","timestamp":"1652648862959"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"18725","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"120\\\",\\\"result\\\":{\\\"_id\\\":\\\"ZLbP9bodP2yxgcuz4\\\",\\\"author\\\":\\\"rubens\\\",\\\"authorId\\\":\\\"XhzKztoQYYQzZ2c7o\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static int search(int[] arr, int item) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.5815485996705108,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"6Snb7LwEC5d2yC3qA\\\",\\\"instructions\\\":\\\"Create a function that finds the index of a given item.\\\\n\\\\n### Examples\\\\n```\\\\nsearch([1, 5, 3], 5) ➞ 1\\\\n\\\\nsearch([9, 8, 3], 3) ➞ 2\\\\n\\\\nsearch([1, 2, 3], 4) ➞ -1\\\\n```\\\\n\\\\n### Notes\\\\nIf the item is not present, return `-1`.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test\\\\n  public void test1() {\\\\n\\\\t\\\\tassertThat(Challenge.search(new int[]{1, 5, 3}, 5), is(1));\\\\n\\\\t}\\\\n\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n\\\\t\\\\tassertThat(Challenge.search(new int[]{9, 8, 3}, 3), is(2));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test3()","thisId":"1116","channelHost":"edabit.com","id":"1116","opcode":"1","channelId":"2","timestamp":"1652648862978"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"118\\\"]}\"]","thisId":"1117","channelHost":"edabit.com","id":"1117","opcode":"1","channelId":"2","timestamp":"1652648863075"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"21085","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"118\\\",\\\"result\\\":{\\\"_id\\\":\\\"nMbE2g7MB5yFcTzoB\\\",\\\"author\\\":\\\"rubens\\\",\\\"authorId\\\":\\\"XhzKztoQYYQzZ2c7o\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static int sum(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5809659090909091,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"GHrznW9q33tzZrx3D\\\",\\\"instructions\\\":\\\"Write a function that **recursively** finds the sum of the first `n` natural numbers.\\\\n\\\\n### Examples\\\\n```\\\\nsum(5) ➞ 15\\\\n// 1 + 2 + 3 + 4 + 5 = 15\\\\n\\\\nsum(1) ➞ 1\\\\n\\\\nsum(12) ➞ 78\\\\n```\\\\n\\\\n### Notes\\\\n- Assume the input number is always positive.\\\\n- Check the **Resources** tab for info on recursion.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(1, Challenge.sum(1));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(15, Challenge.sum(5));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test3() {\\\\n    assertEquals(28, Chal","thisId":"1118","channelHost":"edabit.com","id":"1118","opcode":"1","channelId":"2","timestamp":"1652648863079"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"117\\\"]}\"]","thisId":"1119","channelHost":"edabit.com","id":"1119","opcode":"1","channelId":"2","timestamp":"1652648863160"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"20698","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"117\\\",\\\"result\\\":{\\\"_id\\\":\\\"oseKrpJdL8knnm4NT\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int[] additiveInverse(int[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.581021897810219,\\\"familyId\\\":\\\"znJg9eGu5e3XEw9sF\\\",\\\"instructions\\\":\\\"A number added with its **additive inverse** equals zero. Create a function that returns an array of additive inverses.\\\\n\\\\n### Examples\\\\n```\\\\nadditiveInverse([5, -7, 8, 3]) ➞ [-5, 7, -8, -3]\\\\n\\\\nadditiveInverse([1, 1, 1, 1, 1]) ➞ [-1, -1, -1, -1, -1]\\\\n\\\\nadditiveInverse([-5, -25, 35]) ➞ [5, 25, -35]\\\\n```\\\\n\\\\n### Notes\\\\n- Don't forget to `return` the result.\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're *really* stuck, unlock solutions in the **Solutions** tab.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test \\\\n\\","thisId":"1120","channelHost":"edabit.com","id":"1120","opcode":"1","channelId":"2","timestamp":"1652648863242"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"119\\\"]}\"]","thisId":"1121","channelHost":"edabit.com","id":"1121","opcode":"1","channelId":"2","timestamp":"1652648863272"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"18311","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"119\\\",\\\"result\\\":{\\\"_id\\\":\\\"EhGqjXhY9zS7MHjWd\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int factorial(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5812395309882747,\\\"familyId\\\":\\\"Yf6e3ojERknBuvzx4\\\",\\\"instructions\\\":\\\"Create a function that takes an integer and returns the factorial of that integer. That is, the integer multiplied by all positive lower integers.\\\\n\\\\n### Examples\\\\n```\\\\nfactorial(3) ➞ 6\\\\n\\\\nfactorial(5) ➞ 120\\\\n\\\\nfactorial(12) ➞ 479001600\\\\n```\\\\n\\\\n### Notes\\\\nAssume all inputs are greater than or equal to 0.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertEquals(2, Challenge.factorial(2));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test \\\\n\\\\tpublic void test2() {\\\\n\\\\t\\\\tassertEquals(720, Challenge.factorial(6));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test \\\\n\\\\tpublic void test3() {\\\\n\\\\t\\\\tassertEqu","thisId":"1122","channelHost":"edabit.com","id":"1122","opcode":"1","channelId":"2","timestamp":"1652648863283"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"122\\\"]}\"]","thisId":"1123","channelHost":"edabit.com","id":"1123","opcode":"1","channelId":"2","timestamp":"1652648863386"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"19575","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"122\\\",\\\"result\\\":{\\\"_id\\\":\\\"3NowS55XTdfWtKh9n\\\",\\\"author\\\":\\\"rubens\\\",\\\"authorId\\\":\\\"XhzKztoQYYQzZ2c7o\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static int search(int arr[], int item) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5821812596006144,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"M3f4cYcX2QSCBeJer\\\",\\\"instructions\\\":\\\"Create a function that searches for the index of a given item in an array. If the item is present, it should return the index, otherwise, it should return `-1`.\\\\n\\\\n### Examples\\\\n```\\\\nsearch([1, 2, 3, 4], 3) ➞ 2\\\\n\\\\nsearch([2, 4, 6, 8, 10], 8) ➞ 3\\\\n\\\\nsearch([1, 3, 5, 7, 9], 11) ➞ -1\\\\n```\\\\n\\\\n### Notes\\\\n- If the item is not present, return `-1`.\\\\n- The given array is ordered.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test\\\\n  public void test1() {\\\\n\\\\t\\\\tassertThat(Challenge.search(new int[]{1, 2, 3, 4}, 3), is(2));\\\\n","thisId":"1124","channelHost":"edabit.com","id":"1124","opcode":"1","channelId":"2","timestamp":"1652648863397"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"124\\\"]}\"]","thisId":"1125","channelHost":"edabit.com","id":"1125","opcode":"1","channelId":"2","timestamp":"1652648863521"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"22071","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"124\\\",\\\"result\\\":{\\\"_id\\\":\\\"YG5hYruH8TfqeZ3dc\\\",\\\"author\\\":\\\"morrle\\\",\\\"authorId\\\":\\\"GEsPJxMjAL3iWYZRy\\\",\\\"code\\\":\\\"class FindIndex {\\\\n\\\\tpublic static int findIndex(String[] arr,String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5829662261380323,\\\"familyId\\\":\\\"WML2HxacZbj3shkHK\\\",\\\"instructions\\\":\\\"Create a function that takes an array and a string as arguments and returns the index of the string.\\\\n\\\\n### Examples\\\\n```\\\\nfindIndex(new String[]{\\\\\\\"hi\\\\\\\", \\\\\\\"edabit\\\\\\\", \\\\\\\"fgh\\\\\\\", \\\\\\\"abc\\\\\\\"}, \\\\\\\"fgh\\\\\\\") ➞ 2\\\\n\\\\nfindIndex(new String[]{\\\\\\\"Red\\\\\\\", \\\\\\\"blue\\\\\\\", \\\\\\\"Blue\\\\\\\", \\\\\\\"Green\\\\\\\"}, \\\\\\\"blue\\\\\\\") ➞ 1\\\\n\\\\nfindIndex(new String[]{\\\\\\\"a\\\\\\\", \\\\\\\"g\\\\\\\", \\\\\\\"y\\\\\\\", \\\\\\\"d\\\\\\\"}, \\\\\\\"d\\\\\\\") ➞ 3\\\\n\\\\nfindIndex(new String[]{\\\\\\\"Pineapple\\\\\\\", \\\\\\\"Orange\\\\\\\", \\\\\\\"Grape\\\\\\\", \\\\\\\"Apple\\\\\\\"}, \\\\\\\"Pineapple\\\\\\\") ➞ 0\\\\n```\\\\n\\\\n### Notes\\\\n- Don't forget to `return` the result.\\\\n- If you are stuck, find help in the **Resources** tab.\\\",\\\"lab\\\":\\\"import static org.hamcrest","thisId":"1126","channelHost":"edabit.com","id":"1126","opcode":"1","channelId":"2","timestamp":"1652648863528"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"123\\\"]}\"]","thisId":"1127","channelHost":"edabit.com","id":"1127","opcode":"1","channelId":"2","timestamp":"1652648863622"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"18406","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"123\\\",\\\"result\\\":{\\\"_id\\\":\\\"HDWqr2HdC3dwHYeBx\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int numberSyllables(String word) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5826235093696763,\\\"familyId\\\":\\\"tjLHp34LAqsnNezJe\\\",\\\"instructions\\\":\\\"Create a function that counts the number of syllables a word has. Each syllable is separated with a dash `-`.\\\\n\\\\n### Examples\\\\n```\\\\nnumberSyllables(\\\\\\\"buf-fet\\\\\\\") ➞ 2\\\\n\\\\nnumberSyllables(\\\\\\\"beau-ti-ful\\\\\\\") ➞ 3\\\\n\\\\nnumberSyllables(\\\\\\\"mon-u-men-tal\\\\\\\") ➞ 4\\\\n\\\\nnumberSyllables(\\\\\\\"on-o-mat-o-poe-ia\\\\\\\") ➞ 6\\\\n```\\\\n\\\\n### Notes\\\\n- Don't forget to `return` the result.\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're *really* stuck, unlock solutions in the **Solutions** tab.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class Tests {\\\\n\\\\t@Test\\\\n\\\\tpublic void TestSuite() {\\\\n\\\\t\\\\t","thisId":"1128","channelHost":"edabit.com","id":"1128","opcode":"1","channelId":"2","timestamp":"1652648863625"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"125\\\"]}\"]","thisId":"1129","channelHost":"edabit.com","id":"1129","opcode":"1","channelId":"2","timestamp":"1652648863728"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"15146","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"125\\\",\\\"result\\\":{\\\"_id\\\":\\\"mkAsw6owW6F7h2sfy\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean checkFactors(int[] factors, int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5833333333333334,\\\"familyId\\\":\\\"aoskMLkXmTa4Xihx3\\\",\\\"instructions\\\":\\\"Write a function that returns `true` if all integers in an array are factors of a number, and `false` otherwise.\\\\n\\\\n### Examples\\\\n```\\\\ncheckFactors([2, 3, 4], 12) ➞ true\\\\n// Since 2, 3, and 4 are all factors of 12.\\\\n\\\\ncheckFactors([1, 2, 3, 8], 12) ➞ false\\\\n// 8 is not a factor of 12.\\\\n\\\\ncheckFactors([1, 2, 50], 100) ➞ true\\\\n\\\\ncheckFactors([3, 6], 9) ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertThat(Challenge.checkFactors(new int[]{2, 3, 4}, 12), is(true));\\","thisId":"1130","channelHost":"edabit.com","id":"1130","opcode":"1","channelId":"2","timestamp":"1652648863731"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"126\\\"]}\"]","thisId":"1131","channelHost":"edabit.com","id":"1131","opcode":"1","channelId":"2","timestamp":"1652648863836"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"10748","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"126\\\",\\\"result\\\":{\\\"_id\\\":\\\"nuKniCXYbaCfrmjgX\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String owofied(String sentence) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5854545454545454,\\\"familyId\\\":\\\"GHdR4YcHSwhrCYtMb\\\",\\\"instructions\\\":\\\"Create a function that takes a sentence and turns every \\\\\\\"i\\\\\\\" into \\\\\\\"wi\\\\\\\" and \\\\\\\"e\\\\\\\" into \\\\\\\"we\\\\\\\", and add \\\\\\\"owo\\\\\\\" at the end.\\\\n\\\\n### Examples\\\\n```\\\\nowofied(\\\\\\\"I'm gonna ride 'til I can't no more\\\\\\\")\\\\n➞ \\\\\\\"I'm gonna rwidwe 'twil I can't no morwe owo\\\\\\\"\\\\n\\\\nowofied(\\\\\\\"Do you ever feel like a plastic bag\\\\\\\")\\\\n➞ \\\\\\\"Do you wevwer fwewel lwikwe a plastwic bag owo\\\\\\\"\\\\n\\\\nowofied(\\\\\\\"Cause baby you're a firework\\\\\\\")\\\\n➞ \\\\\\\"Causwe baby you'rwe a fwirwework owo\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Don't forget to return the value!\\\\n- There's a **space** in front of **owo**!\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.as","thisId":"1132","channelHost":"edabit.com","id":"1132","opcode":"1","channelId":"2","timestamp":"1652648863843"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"127\\\"]}\"]","thisId":"1133","channelHost":"edabit.com","id":"1133","opcode":"1","channelId":"2","timestamp":"1652648863940"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"13318","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"127\\\",\\\"result\\\":{\\\"_id\\\":\\\"fDE9uvkfAXgBN6mWZ\\\",\\\"author\\\":\\\"Neha Krishnakumar\\\",\\\"authorId\\\":\\\"tiETrb6KmarBWK5fD\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static String preventDistractions(String args) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\t\\\\t\\\\n}\\\",\\\"difficulty\\\":0.5861182519280206,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"xwem8bdDp6X42BFpw\\\",\\\"instructions\\\":\\\"I'm trying to watch some lectures to study for my next exam but I keep getting distracted by meme compilations, vine compilations, anime, and more on my favorite video platform.\\\\n\\\\nYour job is to help me create a function that takes a string and checks to see if it contains the following words or phrases:\\\\n\\\\n- \\\\\\\"anime\\\\\\\"\\\\n- \\\\\\\"meme\\\\\\\"\\\\n- \\\\\\\"vines\\\\\\\"\\\\n- \\\\\\\"roasts\\\\\\\"\\\\n- \\\\\\\"Danny DeVito\\\\\\\"\\\\n\\\\nIf it does, return `\\\\\\\"NO!\\\\\\\"`. Otherwise, return `\\\\\\\"Safe watching!\\\\\\\"`.\\\\n\\\\n### Examples\\\\n```\\\\npreventDistractions(\\\\\\\"vines that butter my eggroll\\\\\\\") ➞ \\\\\\\"NO!\\\\\\\"\\\\n\\\\npreventDistractions(\\\\\\\"Hot picture","thisId":"1134","channelHost":"edabit.com","id":"1134","opcode":"1","channelId":"2","timestamp":"1652648863943"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"128\\\"]}\"]","thisId":"1135","channelHost":"edabit.com","id":"1135","opcode":"1","channelId":"2","timestamp":"1652648864048"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"14106","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"128\\\",\\\"result\\\":{\\\"_id\\\":\\\"kPHNYy2E6EijPLDja\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int[] correctStream(String[] user, String[] correct) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5862944162436549,\\\"familyId\\\":\\\"8NAP4iKEapKebdyfX\\\",\\\"instructions\\\":\\\"You're in the midst of creating a typing game.\\\\n\\\\nCreate a function that takes in two arrays: the array of **user-typed words**, and the array of **correctly-typed words** and outputs an array containing `1`s (correctly-typed words) and `-1`s (incorrectly-typed words).\\\\n```\\\\nInputs:\\\\nUser-typed Array: [\\\\\\\"cat\\\\\\\", \\\\\\\"blue\\\\\\\", \\\\\\\"skt\\\\\\\", \\\\\\\"umbrells\\\\\\\", \\\\\\\"paddy\\\\\\\"]\\\\nCorrect Array: [\\\\\\\"cat\\\\\\\", \\\\\\\"blue\\\\\\\", \\\\\\\"sky\\\\\\\", \\\\\\\"umbrella\\\\\\\", \\\\\\\"paddy\\\\\\\"]\\\\n\\\\nOutput: [1, 1, -1, -1, 1]\\\\n```\\\\n\\\\n### Examples\\\\n```\\\\ncorrectStream(\\\\n  [\\\\\\\"it\\\\\\\", \\\\\\\"is\\\\\\\", \\\\\\\"find\\\\\\\"],\\\\n  [\\\\\\\"it\\\\\\\", \\\\\\\"is\\\\\\\", \\\\\\\"fine\\\\\\\"]\\\\n) ➞ [1, 1, -1]\\\\n\\\\ncorre","thisId":"1136","channelHost":"edabit.com","id":"1136","opcode":"1","channelId":"2","timestamp":"1652648864067"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"129\\\"]}\"]","thisId":"1137","channelHost":"edabit.com","id":"1137","opcode":"1","channelId":"2","timestamp":"1652648864170"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"15464","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"129\\\",\\\"result\\\":{\\\"_id\\\":\\\"bvSnDWbJtMPimpsFT\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String removeFirstLast(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5872340425531914,\\\"familyId\\\":\\\"8kkMdRJeZRrpf6hrw\\\",\\\"instructions\\\":\\\"Create a function that removes the first and last characters from a string.\\\\n\\\\n### Examples\\\\n```\\\\nremoveFirstLast(\\\\\\\"hello\\\\\\\") ➞ \\\\\\\"ell\\\\\\\"\\\\n\\\\nremoveFirstLast(\\\\\\\"maybe\\\\\\\") ➞ \\\\\\\"ayb\\\\\\\"\\\\n\\\\nremoveFirstLast(\\\\\\\"benefit\\\\\\\") ➞ \\\\\\\"enefi\\\\\\\"\\\\n\\\\nremoveFirstLast(\\\\\\\"a\\\\\\\") ➞ \\\\\\\"a\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nIf the string is 2 or fewer characters long, return the string itself (See example #4).\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertEquals(\\\\\\\"ell\\\\\\\", Challenge.removeFirstLast(\\\\\\\"hello\\\\\\\"));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test \\\\n\\\\tpublic void te","thisId":"1138","channelHost":"edabit.com","id":"1138","opcode":"1","channelId":"2","timestamp":"1652648864176"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"130\\\"]}\"]","thisId":"1139","channelHost":"edabit.com","id":"1139","opcode":"1","channelId":"2","timestamp":"1652648864311"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7553","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"130\\\",\\\"result\\\":{\\\"_id\\\":\\\"Pbbu6wDPnqbbzXwTG\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class TrueOnesFalseZeroes {\\\\n\\\\tpublic static boolean[] integerBoolean(String bits) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5865384615384616,\\\"quality\\\":4.744186046511628,\\\"familyId\\\":\\\"LkKWEH9KT3TPyGYqg\\\",\\\"instructions\\\":\\\"Create a function that returns a converted  array of boolean values from a given **bit string**. Basically, a bit character `1` is `true`,  otherwise, it's `false`.\\\\n\\\\n### Examples\\\\n```\\\\nintegerBoolean(\\\\\\\"0110\\\\\\\") ➞ [false, true, true, false]\\\\n\\\\nintegerBoolean(\\\\\\\"100101\\\\\\\") ➞ [true, false, false, true, false, true]\\\\n\\\\nintegerBoolean(\\\\\\\"10\\\\\\\") ➞ [true, false]\\\\n\\\\nintegerBoolean(\\\\\\\"001\\\\\\\") ➞ [false, false, true]\\\\n```\\\\n\\\\n### Notes\\\\nCharacters in the given bit string are absolutely 1's and 0's only.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"/** \\\\n============================================== \\\\nTestGen 3.1 for JUnit 4.13.","thisId":"1140","channelHost":"edabit.com","id":"1140","opcode":"1","channelId":"2","timestamp":"1652648864316"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"131\\\"]}\"]","thisId":"1141","channelHost":"edabit.com","id":"1141","opcode":"1","channelId":"2","timestamp":"1652648864450"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"12456","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"131\\\",\\\"result\\\":{\\\"_id\\\":\\\"wFPAkqT72h4WGEuYN\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String hackerSpeak(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5897435897435898,\\\"familyId\\\":\\\"hhNPqXLfPNoo2Ty7B\\\",\\\"instructions\\\":\\\"Create a function that takes a string as an argument and returns a coded (h4ck3r 5p34k) version of the string.\\\\n\\\\n### Examples\\\\n```\\\\nhackerSpeak(\\\\\\\"javascript is cool\\\\\\\") ➞ \\\\\\\"j4v45cr1pt 15 c00l\\\\\\\"\\\\n\\\\nhackerSpeak(\\\\\\\"programming is fun\\\\\\\") ➞ \\\\\\\"pr0gr4mm1ng 15 fun\\\\\\\"\\\\n\\\\nhackerSpeak(\\\\\\\"become a coder\\\\\\\") ➞ \\\\\\\"b3c0m3 4 c0d3r\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nIn order to work properly, the function should replace all \\\\\\\"a\\\\\\\"s with 4, \\\\\\\"e\\\\\\\"s with 3, \\\\\\\"i\\\\\\\"s with 1, \\\\\\\"o\\\\\\\"s with 0, and \\\\\\\"s\\\\\\\"s with 5.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\","thisId":"1142","channelHost":"edabit.com","id":"1142","opcode":"1","channelId":"2","timestamp":"1652648864452"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"132\\\"]}\"]","thisId":"1143","channelHost":"edabit.com","id":"1143","opcode":"1","channelId":"2","timestamp":"1652648864558"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"45226","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"132\\\",\\\"result\\\":{\\\"_id\\\":\\\"nn65XKhviizSgwW2k\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n    public static int addUp(int num) {\\\\n      \\\\n    }\\\\n}\\\",\\\"difficulty\\\":0.5899137358991373,\\\"familyId\\\":\\\"pAJYnogbePQHrsDY2\\\",\\\"instructions\\\":\\\"Create a method that takes an integer as an argument. Add up all the numbers from 1 to the number you passed to the function. For example, if the input is 4 then your function should return 10 because 1 + 2 + 3 + 4 = 10.\\\\n\\\\n### **Examples**\\\\n```\\\\naddUp(4) ➞ 10\\\\n\\\\naddUp(13) ➞ 91\\\\n\\\\naddUp(600) ➞ 180300\\\\n```\\\\n\\\\n### Notes\\\\nExpect any positive number between 1 and 1000.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(10, Program.addUp(4));\\\\n  }\\\\n\\\\n  @Test\\\\n  public void test2() {\\\\n    assertEquals(91, Program.addUp(13));\\\\n  }\\\\n\\\\n  @Test\\","thisId":"1144","channelHost":"edabit.com","id":"1144","opcode":"1","channelId":"2","timestamp":"1652648864564"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"135\\\"]}\"]","thisId":"1145","channelHost":"edabit.com","id":"1145","opcode":"1","channelId":"2","timestamp":"1652648864674"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"13927","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"135\\\",\\\"result\\\":{\\\"_id\\\":\\\"RXpy6CSczRnuE7r2q\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int minimumRemovals(int[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5935162094763092,\\\"familyId\\\":\\\"oauebsNKFF4oBCLmN\\\",\\\"instructions\\\":\\\"Create a function that returns the minimum number of removals to make the sum of all elements in an array even.\\\\n\\\\n### Examples\\\\n```\\\\nminimumRemovals([1, 2, 3, 4, 5]) ➞ 1\\\\n\\\\nminimumRemovals([5, 7, 9, 11]) ➞ 0\\\\n\\\\nminimumRemovals([5, 7, 9, 12]) ➞ 1\\\\n```\\\\n\\\\n### Notes\\\\n- If the sum is already even, return `0` (see example #2).\\\\n- The output will be either `0` or `1`.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertThat(Challenge.minimumRemovals(new int[]{1, 2, 3, 4, 5}), is(1));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test \\\\n\\\\tpub","thisId":"1146","channelHost":"edabit.com","id":"1146","opcode":"1","channelId":"2","timestamp":"1652648864678"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"133\\\"]}\"]","thisId":"1147","channelHost":"edabit.com","id":"1147","opcode":"1","channelId":"2","timestamp":"1652648864780"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"11564","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"133\\\",\\\"result\\\":{\\\"_id\\\":\\\"42TaSuEe8tzepCK75\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean abcmath(int a, int b, int c) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.5925925925925926,\\\"familyId\\\":\\\"xrYKJxAusKXMKBYxo\\\",\\\"instructions\\\":\\\"Create a function, that will for a given `a, b, c`, do the following:\\\\n\\\\n- Add `a` to itself `b` times.\\\\n- Check if the result is divisible by `c`.\\\\n\\\\n### Examples\\\\n```\\\\nabcmath(42, 5, 10) ➞ false\\\\n// 42+42 = 84,84+84 = 168,168+168 = 336,336+336 = 672, 672+672 = 1344\\\\n// 1344 is not divisible by 10\\\\n\\\\nabcmath(5, 2, 1) ➞ true\\\\n\\\\nabcmath(1, 2, 3) ➞ false\\\\n```\\\\n\\\\n### Notes\\\\n- In the first step of the function, `a` doesn't always refer to the original `a`.\\\\n- \\\\\\\"if the result is divisible by `c`\\\\\\\", means that if you divide the result and `c`, you will get an integer (5, and not 4.5314).\\\\n- **The second test is correct.**\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimp","thisId":"1148","channelHost":"edabit.com","id":"1148","opcode":"1","channelId":"2","timestamp":"1652648864895"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"136\\\"]}\"]","thisId":"1149","channelHost":"edabit.com","id":"1149","opcode":"1","channelId":"2","timestamp":"1652648864904"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"13495","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"136\\\",\\\"result\\\":{\\\"_id\\\":\\\"wmXdzBSsoT4QvEY3S\\\",\\\"author\\\":\\\"bangyen\\\",\\\"authorId\\\":\\\"yv7c4H2jimSKHEjtG\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int difference(int[] nums) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5935483870967742,\\\"familyId\\\":\\\"Tt7EPC9xbs5b34Cai\\\",\\\"instructions\\\":\\\"Given an array of integers, return the _difference_ between the largest and smallest integers in the array.\\\\n\\\\n### Examples\\\\n```\\\\ndifference([10, 15, 20, 2, 10, 6]) ➞ 18\\\\n# 20 - 2 = 18\\\\n\\\\ndifference([-3, 4, -9, -1, -2, 15]) ➞ 24\\\\n# 15 - (-9) = 24\\\\n\\\\ndifference([4, 17, 12, 2, 10, 2]) ➞ 15\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertEquals(24, Challenge.difference(new int[]{-9, -8, 6, -9, 15, 6}));\\\\n\\\\t}\\\\n\\\\t@Test\\\\n\\\\tpublic void test2() {\\\\n\\\\t\\\\tassertEquals(23, Challenge.difference(new int[]{-5, 6, 18,","thisId":"1150","channelHost":"edabit.com","id":"1150","opcode":"1","channelId":"2","timestamp":"1652648864909"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"137\\\"]}\"]","thisId":"1151","channelHost":"edabit.com","id":"1151","opcode":"1","channelId":"2","timestamp":"1652648865032"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"11023","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"137\\\",\\\"result\\\":{\\\"_id\\\":\\\"EzH6jaQPGTR6e8Wfg\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean lastDig(int a, int b, int c) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.596,\\\"familyId\\\":\\\"LmALx7RuSsdWYahaZ\\\",\\\"instructions\\\":\\\"Your job is to create a function, that takes 3 numbers: `a, b, c` and returns `true` if the last digit of `a * b` = the last digit of `c`. Check the examples below for an explanation.\\\\n\\\\n### Examples\\\\n```\\\\nlastDig(25, 21, 125) ➞ true\\\\n// The last digit of 25 is 5, the last digit of 21 is 1, and the last\\\\n// digit of 125 is 5, and the last digit of 5*1 = 5, which is equal\\\\n// to the last digit of 125(5).\\\\n\\\\nlastDig(55, 226, 5190) ➞ true\\\\n// The last digit of 55 is 5, the last digit of 226 is 6, and the last\\\\n// digit of 5190 is 0, and the last digit of 5*6 = 30 is 0, which is\\\\n// equal to the last digit of 5190(0).\\\\n\\\\nlastDig(12, 215, 2142) ➞ false\\\\n// The last digit of 12 is 2","thisId":"1152","channelHost":"edabit.com","id":"1152","opcode":"1","channelId":"2","timestamp":"1652648865035"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"134\\\"]}\"]","thisId":"1153","channelHost":"edabit.com","id":"1153","opcode":"1","channelId":"2","timestamp":"1652648865135"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"13034","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"134\\\",\\\"result\\\":{\\\"_id\\\":\\\"bSNQDQpy3EPMTFogQ\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String smallerNum(String n1, String n2) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.592,\\\"familyId\\\":\\\"wZaKhGMafx7czKCwf\\\",\\\"instructions\\\":\\\"Create a function that returns the smaller number.\\\\n\\\\n### Examples\\\\n```\\\\nsmallerNum(\\\\\\\"21\\\\\\\", \\\\\\\"44\\\\\\\") ➞ \\\\\\\"21\\\\\\\"\\\\n\\\\nsmallerNum(\\\\\\\"1500\\\\\\\", \\\\\\\"1\\\\\\\") ➞ \\\\\\\"1\\\\\\\"\\\\n\\\\nsmallerNum(\\\\\\\"5\\\\\\\", \\\\\\\"5\\\\\\\") ➞ \\\\\\\"5\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Numbers will be represented as strings, and your output should also be a string.\\\\n- If both numbers tie, return either number.\\\\n- Numbers will be positive.\\\\n- **Bonus**: See if you can do this **without** converting to integers.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"21\\\\\\\", Challenge.smallerNum(\\\\\\\"2","thisId":"1154","channelHost":"edabit.com","id":"1154","opcode":"1","channelId":"2","timestamp":"1652648865152"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"138\\\"]}\"]","thisId":"1155","channelHost":"edabit.com","id":"1155","opcode":"1","channelId":"2","timestamp":"1652648865268"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"9098","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"138\\\",\\\"result\\\":{\\\"_id\\\":\\\"wWRKKJNppJXwocprL\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String formatDate(String date) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.596078431372549,\\\"familyId\\\":\\\"m8THwv7b8rGTzGrSx\\\",\\\"instructions\\\":\\\"Create a function that converts a date formatted as **MM/DD/YYYY** to  **YYYYDDMM**.\\\\n\\\\n### Examples\\\\n```\\\\nformatDate(\\\\\\\"11/12/2019\\\\\\\") ➞ \\\\\\\"20191211\\\\\\\"\\\\n\\\\nformatDate(\\\\\\\"12/31/2019\\\\\\\") ➞ \\\\\\\"20193112\\\\\\\"\\\\n\\\\nformatDate(\\\\\\\"01/15/2019\\\\\\\") ➞ \\\\\\\"20191501\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nReturn value should be a string.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"20191211\\\\\\\", Challenge.formatDate(\\\\\\\"11/12/2019\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(\\\\\\\"20193112\\\\\\\", Challenge.formatDate(\\\\\\\"12","thisId":"1156","channelHost":"edabit.com","id":"1156","opcode":"1","channelId":"2","timestamp":"1652648865271"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"139\\\"]}\"]","thisId":"1157","channelHost":"edabit.com","id":"1157","opcode":"1","channelId":"2","timestamp":"1652648865367"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"19953","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"139\\\",\\\"result\\\":{\\\"_id\\\":\\\"72yxSzSevYhvY5Dbu\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int charCount(char c, String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5953125,\\\"familyId\\\":\\\"Cm3KMX32YPjs2n3Ca\\\",\\\"instructions\\\":\\\"Create a function that takes a character and a string as arguments and returns the number of times the character is found in the string.\\\\n\\\\n### Examples\\\\n```\\\\ncharCount('a', \\\\\\\"edabit\\\\\\\") ➞ 1\\\\n\\\\ncharCount('c', \\\\\\\"Chamber of secrets\\\\\\\") ➞ 1\\\\n\\\\ncharCount('b', \\\\\\\"big fat bubble\\\\\\\") ➞ 4\\\\n```\\\\n\\\\n### Notes\\\\nYour output must be case-sensitive (see second example).\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertEquals(1, Challenge.charCount('a', \\\\\\\"edabit\\\\\\\"));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test \\\\n\\\\tpublic void test2() {\\\\n\\\\t\\\\tassertEquals(4, Challenge.charCo","thisId":"1158","channelHost":"edabit.com","id":"1158","opcode":"1","channelId":"2","timestamp":"1652648865372"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"140\\\"]}\"]","thisId":"1159","channelHost":"edabit.com","id":"1159","opcode":"1","channelId":"2","timestamp":"1652648865514"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6488","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"140\\\",\\\"result\\\":{\\\"_id\\\":\\\"ocqRdAXXniLS4ea3h\\\",\\\"author\\\":\\\"matheos96\\\",\\\"authorId\\\":\\\"83Poou2ztv2hF9pLn\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static boolean checkEquality(Object a, Object b) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.5980392156862745,\\\"familyId\\\":\\\"fbnLuaRaGHudwzSsq\\\",\\\"instructions\\\":\\\"In this challenge, you must verify the equality of two different values given the parameters `a` and `b`.\\\\n\\\\nBoth the _value_ and  _type_ of the parameters need to be equal. The possible types of the given parameters are:\\\\n- Numbers\\\\n- Strings\\\\n- Booleans (`false` or `true`)\\\\n- Special values: `null`\\\\n\\\\nWhat have you learned so far that will permit you to do two different checks (value **and** type) with a single statement?\\\\n\\\\nImplement a function that returns `true` if the parameters are equal, and `false` if they are not.\\\\n\\\\n### Examples\\\\n```\\\\ncheckEquality(1, true) ➞ false\\\\n// A number and a boolean: the value and type are different.\\\\n\\\\ncheckEqualit","thisId":"1160","channelHost":"edabit.com","id":"1160","opcode":"1","channelId":"2","timestamp":"1652648865539"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"141\\\"]}\"]","thisId":"1161","channelHost":"edabit.com","id":"1161","opcode":"1","channelId":"2","timestamp":"1652648865626"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"13502","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"141\\\",\\\"result\\\":{\\\"_id\\\":\\\"7JBbNzmBuBEX7KPoH\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean testJackpot(String[] result) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.6,\\\"familyId\\\":\\\"5duyrSnAhrBMeqy5c\\\",\\\"instructions\\\":\\\"Create a function that takes in an array (slot machine outcome) and returns `true` if all elements in the array are identical, and `false` otherwise. The array will contain 4 elements.\\\\n\\\\n### Examples\\\\n```\\\\ntestJackpot([\\\\\\\"@\\\\\\\", \\\\\\\"@\\\\\\\", \\\\\\\"@\\\\\\\", \\\\\\\"@\\\\\\\"]) ➞ true\\\\n\\\\ntestJackpot([\\\\\\\"abc\\\\\\\", \\\\\\\"abc\\\\\\\", \\\\\\\"abc\\\\\\\", \\\\\\\"abc\\\\\\\"]) ➞ true\\\\n\\\\ntestJackpot([\\\\\\\"SS\\\\\\\", \\\\\\\"SS\\\\\\\", \\\\\\\"SS\\\\\\\", \\\\\\\"SS\\\\\\\"]) ➞ true\\\\n\\\\ntestJackpot([\\\\\\\"&&\\\\\\\", \\\\\\\"&\\\\\\\", \\\\\\\"&&&\\\\\\\", \\\\\\\"&&&&\\\\\\\"]) ➞ false\\\\n\\\\ntestJackpot([\\\\\\\"SS\\\\\\\", \\\\\\\"SS\\\\\\\", \\\\\\\"SS\\\\\\\", \\\\\\\"Ss\\\\\\\"]) ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nThe elements must be exactly identical for there to be a jackpot.\\\",\\\"lab\\\":\\\"import static o","thisId":"1162","channelHost":"edabit.com","id":"1162","opcode":"1","channelId":"2","timestamp":"1652648865636"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"142\\\"]}\"]","thisId":"1163","channelHost":"edabit.com","id":"1163","opcode":"1","channelId":"2","timestamp":"1652648865726"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7364","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"142\\\",\\\"result\\\":{\\\"_id\\\":\\\"RwrKgxmoMbm5NDFxW\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class BinaryChecksum {\\\\n\\\\tpublic static String addParityBit(String bits) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.6,\\\"familyId\\\":\\\"Zm7Fn2KBofz74oeTv\\\",\\\"instructions\\\":\\\"Parity bits are used as a very simple checksum to ensure that binary data isn't corrupted during transit. Here's how they work:\\\\n\\\\n* If a binary string has an **odd** number of **1**'s, the parity bit is a **1**.\\\\n* If a binary string has an **even** number of **1**'s, the parity bit is a **0**.\\\\n* The parity bit is appended to the **end** of the binary string.\\\\n\\\\nCreate a function that adds the correct parity bit to a binary string.\\\\n\\\\n### Examples\\\\n```\\\\naddParityBit(\\\\\\\"1011011\\\\\\\") ➞ \\\\\\\"10110111\\\\\\\"\\\\n\\\\n// There are five 1's.\\\\n// Since five is odd, the parity bit should be a 1.\\\\n// Add the parity bit to the end of the string.\\\\n// Return the result.\\\\n\\\\naddParityBit","thisId":"1164","channelHost":"edabit.com","id":"1164","opcode":"1","channelId":"2","timestamp":"1652648865736"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"143\\\"]}\"]","thisId":"1165","channelHost":"edabit.com","id":"1165","opcode":"1","channelId":"2","timestamp":"1652648865832"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"13530","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"143\\\",\\\"result\\\":{\\\"_id\\\":\\\"aNty236u5wtfsBayy\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int sumEvenNumsInRange(int start, int stop) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.6014492753623188,\\\"familyId\\\":\\\"9LEnJ3mJrTwF3YDnA\\\",\\\"instructions\\\":\\\"Create a function that takes two parameters (`start`, `stop`), and returns the sum of all even numbers in the range.\\\\n\\\\n### Examples\\\\n```\\\\nsumEvenNumsInRange(10, 20) ➞ 90\\\\n// 10, 12, 14, 16, 18, 20\\\\n\\\\nsumEvenNumsInRange(51, 150) ➞ 5050\\\\n\\\\nsumEvenNumsInRange(63, 97) ➞ 1360\\\\n```\\\\n\\\\n### Notes\\\\nRemember that the `start` and `stop` values are inclusive.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(5050, Challenge.sumEvenNumsInRange(51, 150));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(1360, Chal","thisId":"1166","channelHost":"edabit.com","id":"1166","opcode":"1","channelId":"2","timestamp":"1652648865848"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"144\\\"]}\"]","thisId":"1167","channelHost":"edabit.com","id":"1167","opcode":"1","channelId":"2","timestamp":"1652648865964"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"9718","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"144\\\",\\\"result\\\":{\\\"_id\\\":\\\"kADGssuyM6vTEwS8p\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean sameCase(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.601593625498008,\\\"familyId\\\":\\\"fdsGBgyKyFcDXHzMo\\\",\\\"instructions\\\":\\\"Create a function that returns `true` if an input string contains only uppercase or only lowercase letters.\\\\n\\\\n### Examples\\\\n```\\\\nsameCase(\\\\\\\"hello\\\\\\\") ➞ true\\\\n\\\\nsameCase(\\\\\\\"HELLO\\\\\\\") ➞ true\\\\n\\\\nsameCase(\\\\\\\"Hello\\\\\\\") ➞ false\\\\n\\\\nsameCase(\\\\\\\"ketcHUp\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertEquals(true, Challenge.sameCase(\\\\\\\"HELLO\\\\\\\"));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test \\\\n\\\\tpublic void test2() {\\\\n\\\\t\\\\tassertEquals(false, Challenge.sameCase(\\\\\\\"HEllo\\\\\\\"));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test \\\\n\\\\tpublic void test3() {","thisId":"1168","channelHost":"edabit.com","id":"1168","opcode":"1","channelId":"2","timestamp":"1652648865970"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"145\\\"]}\"]","thisId":"1169","channelHost":"edabit.com","id":"1169","opcode":"1","channelId":"2","timestamp":"1652648866067"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"14925","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"145\\\",\\\"result\\\":{\\\"_id\\\":\\\"mftGnKMaNpZhBeNBF\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int hammingDistance(String str1, String str2) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.6025369978858351,\\\"familyId\\\":\\\"GgJizkqtZ8oY4xCyt\\\",\\\"instructions\\\":\\\"**Hamming distance** is the number of characters that differ between two strings.\\\\n\\\\nTo illustrate:\\\\n```\\\\nString1: \\\\\\\"abcbba\\\\\\\"\\\\nString2: \\\\\\\"abcbda\\\\\\\"\\\\n\\\\nHamming Distance: 1 - \\\\\\\"b\\\\\\\" vs. \\\\\\\"d\\\\\\\" is the only difference.\\\\n```\\\\n\\\\nCreate a function that computes the **hamming distance** between two strings.\\\\n\\\\n### Examples\\\\n```\\\\nhammingDistance(\\\\\\\"abcde\\\\\\\", \\\\\\\"bcdef\\\\\\\") ➞ 5\\\\n\\\\nhammingDistance(\\\\\\\"abcde\\\\\\\", \\\\\\\"abcde\\\\\\\") ➞ 0\\\\n\\\\nhammingDistance(\\\\\\\"strong\\\\\\\", \\\\\\\"strung\\\\\\\") ➞ 1\\\\n```\\\\n\\\\n### Notes\\\\nBoth strings will have the same length.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic cla","thisId":"1170","channelHost":"edabit.com","id":"1170","opcode":"1","channelId":"2","timestamp":"1652648866100"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"146\\\"]}\"]","thisId":"1171","channelHost":"edabit.com","id":"1171","opcode":"1","channelId":"2","timestamp":"1652648866181"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"16226","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"146\\\",\\\"result\\\":{\\\"_id\\\":\\\"5hDW8NdjYLR4ncuMW\\\",\\\"author\\\":\\\"rubens\\\",\\\"authorId\\\":\\\"XhzKztoQYYQzZ2c7o\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int factorial(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.6037296037296037,\\\"familyId\\\":\\\"BCwXEmrpvx5CCAxum\\\",\\\"instructions\\\":\\\"Welcome to the beginning of this collection on _Computer Science Algorithms_. Admittedly there are other challenges on Edabit that deal with recursion and algorithmic processes, but these particular challenges are designed to give examples and to educate users on the topics being covered.\\\\n\\\\n### Recursion\\\\nIn computer science, \\\\\\\"recursion\\\\\\\" is the act of writing a function that calls itself from within its own code. The function below better helps explain and illustrate recursion by simply counting down from a given number to zero:\\\\n\\\\n```\\\\npublic static void countdown(int num) {\\\\n  int targetNumber = 0;\\\\n  if (num == targetNumber) {\\\\n    System.out.println(\\\\\\\"Countdown compl","thisId":"1172","channelHost":"edabit.com","id":"1172","opcode":"1","channelId":"2","timestamp":"1652648866185"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"147\\\"]}\"]","thisId":"1173","channelHost":"edabit.com","id":"1173","opcode":"1","channelId":"2","timestamp":"1652648866292"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"20193","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"147\\\",\\\"result\\\":{\\\"_id\\\":\\\"RLaRiNL6H7P2viWgk\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int matchHouses(int step) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.6026272577996716,\\\"familyId\\\":\\\"x5GBkmKoh4FdmEgaT\\\",\\\"instructions\\\":\\\"This challenge will help you interpret mathematical relationships both algebraically and geometrically.\\\\n\\\\n![Matchstick Houses, Steps 1, 2 and 3](https://edabit-challenges.s3.amazonaws.com/matchstick_houses.png \\\\\\\"Matchstick Houses, Steps 1, 2 and 3\\\\\\\")\\\\n\\\\nCreate a function that takes a number (step) as an argument and returns the number of matchsticks in that step. See step 1, 2 and 3 in the image above.\\\\n\\\\n### Examples\\\\n```\\\\nmatchHouses(1) ➞ 6\\\\n\\\\nmatchHouses(4) ➞ 21\\\\n\\\\nmatchHouses(87) ➞ 436\\\\n```\\\\n\\\\n### Notes\\\\n- Step 0 returns `0` matchsticks.\\\\n- The input (step) will always be a non-negative integer.\\\\n- Think of the input (step) as the total number of houses that hav","thisId":"1174","channelHost":"edabit.com","id":"1174","opcode":"1","channelId":"2","timestamp":"1652648866296"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"148\\\"]}\"]","thisId":"1175","channelHost":"edabit.com","id":"1175","opcode":"1","channelId":"2","timestamp":"1652648866377"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"11590","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"148\\\",\\\"result\\\":{\\\"_id\\\":\\\"ztcwYfydBxRGQAKPk\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int squareAreasDifference(int r) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.6034985422740525,\\\"isHidden\\\":false,\\\"familyId\\\":\\\"rosv9hKuDuXn6AG6d\\\",\\\"instructions\\\":\\\"Imagine a circle and two squares: a smaller and a bigger one. For the smaller one, the circle is a circumcircle and for the bigger one, an incircle.\\\\n\\\\n![Scale](https://edabit-challenges.s3.amazonaws.com/scale.png)\\\\n\\\\nCreate a function, that takes an integer (radius of the circle) and returns the difference of the areas of the two squares.\\\\n\\\\n### Examples\\\\n```\\\\nsquareAreasDifference(5) ➞ 50\\\\n\\\\nsquareAreasDifference(6) ➞ 72\\\\n\\\\nsquareAreasDifference(7) ➞ 98\\\\n```\\\\n\\\\n### Notes\\\\nUse only positive integer parameters.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public ","thisId":"1176","channelHost":"edabit.com","id":"1176","opcode":"1","channelId":"2","timestamp":"1652648866381"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"149\\\"]}\"]","thisId":"1177","channelHost":"edabit.com","id":"1177","opcode":"1","channelId":"2","timestamp":"1652648866540"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"30724","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"149\\\",\\\"result\\\":{\\\"_id\\\":\\\"rq4AeNEFm7uBsoDDn\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static int getAbsSum(int[] nums) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.6068292682926829,\\\"familyId\\\":\\\"Qka4zafiQDF7yRmTy\\\",\\\"instructions\\\":\\\"Take an array of integers (positive or negative or both) and return the sum of the absolute value of each element.\\\\n\\\\n### Examples\\\\n```\\\\ngetAbsSum([2, -1, 4, 8, 10]) ➞ 25\\\\n\\\\ngetAbsSum([-3, -4, -10, -2, -3]) ➞ 22\\\\n\\\\ngetAbsSum([2, 4, 6, 8, 10]) ➞ 30\\\\n\\\\ngetAbsSum([-1]) ➞ 1\\\\n```\\\\n\\\\n### Notes\\\\n- The term \\\\\\\"absolute value\\\\\\\" means to remove any negative sign in front of a number, and to think of all numbers as positive (or zero).\\\\n- All the elements in the given array are integers.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test\\\\n\\\\tpublic","thisId":"1178","channelHost":"edabit.com","id":"1178","opcode":"1","channelId":"2","timestamp":"1652648866550"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"151\\\"]}\"]","thisId":"1179","channelHost":"edabit.com","id":"1179","opcode":"1","channelId":"2","timestamp":"1652648866596"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4188","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"151\\\",\\\"result\\\":{\\\"_id\\\":\\\"WejGaR5mK4eECuDLZ\\\",\\\"author\\\":\\\"Einy\\\",\\\"authorId\\\":\\\"5f6oSeq4r5WTXLdCQ\\\",\\\"code\\\":\\\"public class Program \\\\n{\\\\n    public static boolean backToHome(String direction)\\\\n    {\\\\n\\\\t\\\\t\\\\t\\\\n    }\\\\n}\\\",\\\"difficulty\\\":0.6031746031746031,\\\"familyId\\\":\\\"Z9BDkGHCRCQDSeCH4\\\",\\\"instructions\\\":\\\"**Mubashir**  has started his journey from home. Given a string of `directions` (N=North, W=West, S=South, E=East), he will walk for one minute in each direction. Determine whether a set of directions will lead him back to the starting position or not.\\\\n\\\\n### Examples\\\\n```\\\\nbackToHome(\\\\\\\"NEWE\\\\\\\") ➞ false\\\\n\\\\nbackToHome(\\\\\\\"NENESSWW\\\\\\\") ➞ true\\\\n\\\\nbackToHome(\\\\\\\"NEESSW\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ProgramTest {\\\\n    @Test\\\\n    public void test1(){\\\\n        assertEquals(false, Program.backTo","thisId":"1180","channelHost":"edabit.com","id":"1180","opcode":"1","channelId":"2","timestamp":"1652648866599"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"153\\\"]}\"]","thisId":"1181","channelHost":"edabit.com","id":"1181","opcode":"1","channelId":"2","timestamp":"1652648866702"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"12715","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"153\\\",\\\"result\\\":{\\\"_id\\\":\\\"F3ssniE3KnCpDFJqP\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int bitwiseAND(int n1, int n2) {\\\\n\\\\t\\\\t\\\\n  }\\\\n\\\\t\\\\n\\\\tpublic static int bitwiseOR(int n1, int n2) {\\\\n\\\\t\\\\t\\\\n  }\\\\n\\\\t\\\\n\\\\tpublic static int bitwiseXOR(int n1, int n2) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.6242774566473989,\\\"familyId\\\":\\\"Q7Sz6iyCBXzugsE5L\\\",\\\"instructions\\\":\\\"A decimal number can be represented as a sequence of bits. To illustrate:\\\\n\\\\n```\\\\n6 = 00000110\\\\n23 = 00010111\\\\n```\\\\n\\\\nFrom the bitwise representation of numbers, we can calculate the **bitwise AND**, **bitwise OR** and **bitwise XOR**. Using the example above:\\\\n\\\\n```\\\\nbitwiseAND(6, 23) ➞ 00000110\\\\n\\\\nbitwiseOR(6, 23) ➞ 00010111\\\\n\\\\nbitwiseXOR(6, 23) ➞ 00010001\\\\n```\\\\n\\\\nWrite three functions to calculate the **bitwise AND**, **bitwise OR** and **bitwise XOR** of two numbers.\\\\n\\\\n### Examples\\\\n```\\\\nbitwiseAND(7, 12) ➞ 4\\\\n\\\\nb","thisId":"1182","channelHost":"edabit.com","id":"1182","opcode":"1","channelId":"2","timestamp":"1652648866708"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"152\\\"]}\"]","thisId":"1183","channelHost":"edabit.com","id":"1183","opcode":"1","channelId":"2","timestamp":"1652648866899"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"12255","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"152\\\",\\\"result\\\":{\\\"_id\\\":\\\"kTY7T75TP5qDgHYab\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean isIdentical(String str) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.6233062330623306,\\\"familyId\\\":\\\"mmrsSxZxj7PiJYw5f\\\",\\\"instructions\\\":\\\"Write a function that returns `true` if all characters in a string are identical and `false` otherwise.\\\\n\\\\n### Examples\\\\n```\\\\nisIdentical(\\\\\\\"aaaaaa\\\\\\\") ➞ true\\\\n\\\\nisIdentical(\\\\\\\"aabaaa\\\\\\\") ➞ false\\\\n\\\\nisIdentical(\\\\\\\"ccccca\\\\\\\") ➞ false\\\\n\\\\nisIdentical(\\\\\\\"kk\\\\\\\") ➞ true\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(true, Challenge.isIdentical(\\\\\\\"kkkkk\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(false, Challenge.isIdentical(\\\\\\\"ckkkk\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test3() {\\\\n","thisId":"1184","channelHost":"edabit.com","id":"1184","opcode":"1","channelId":"2","timestamp":"1652648866902"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"150\\\"]}\"]","thisId":"1185","channelHost":"edabit.com","id":"1185","opcode":"1","channelId":"2","timestamp":"1652648867129"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5132","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"150\\\",\\\"result\\\":{\\\"_id\\\":\\\"3Tn5HZgBzdTHPp9zT\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Rhythm {\\\\n\\\\tpublic static boolean hasSyncopation(String s) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.6071428571428571,\\\"familyId\\\":\\\"RxZ87rPRaeuZwKWT3\\\",\\\"instructions\\\":\\\"**Syncopation** means an emphasis on a weak beat of a bar of music; most commonly, **beats 2 and 4** (and all other *even-numbered* beats if applicable).\\\\n\\\\nYou will be given a string representing beats, where hashtags `#` represent emphasized beats. Create a function that returns if the line of music contains **any** *syncopation*, and `false` otherwise.\\\\n\\\\n### Examples\\\\n```\\\\nhasSyncopation(\\\\\\\".#.#.#.#\\\\\\\") ➞ true\\\\n// There are Hash signs in the second, fourth, sixth and\\\\n// eighth positions of the string.\\\\n\\\\nhasSyncopation(\\\\\\\"#.#...#.\\\\\\\") ➞ false\\\\n// There are no Hash signs in the second, fourth, sixth or\\\\n// eighth positions of the string.\\\\n\\\\nhasSyncopation","thisId":"1186","channelHost":"edabit.com","id":"1186","opcode":"1","channelId":"2","timestamp":"1652648867132"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"154\\\"]}\"]","thisId":"1187","channelHost":"edabit.com","id":"1187","opcode":"1","channelId":"2","timestamp":"1652648867324"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"30950","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"154\\\",\\\"result\\\":{\\\"_id\\\":\\\"5yCvczJJbq68Pavky\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static int findLargestNum(int[] nums) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.6276276276276276,\\\"familyId\\\":\\\"QxpnhkhYkCQAKPCuN\\\",\\\"instructions\\\":\\\"Create a method that takes an array of integers. Return the largest integer in the array.\\\\n\\\\n### Examples\\\\n```\\\\nfindLargestNum([4, 5, 1, 3]) ➞ 5\\\\n\\\\nfindLargestNum([300, 200, 600, 150]) ➞ 600\\\\n\\\\nfindLargestNum([1000, 1001, 857, 1]) ➞ 1001\\\\n```\\\\n\\\\n### Notes\\\\n- Expect either a positive number or zero (there are no negative numbers).\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're *really* stuck, unlock solutions in the **Solutions** tab.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test\\\\n\\\\tpublic voi","thisId":"1188","channelHost":"edabit.com","id":"1188","opcode":"1","channelId":"2","timestamp":"1652648867332"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"155\\\"]}\"]","thisId":"1189","channelHost":"edabit.com","id":"1189","opcode":"1","channelId":"2","timestamp":"1652648867521"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"34842","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"155\\\",\\\"result\\\":{\\\"_id\\\":\\\"utCRd99E6E3FRS4Rz\\\",\\\"archived\\\":false,\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class SmallestIntegerFinder {\\\\n    public static int findSmallestInt(int[] args) {\\\\n\\\\t\\\\t\\\\t\\\\n    }\\\\n}\\\",\\\"difficulty\\\":0.6345311130587205,\\\"familyId\\\":\\\"L9F3ekF3WsHrvmgwc\\\",\\\"instructions\\\":\\\"Create a method that takes an array of integers and returns the smallest number in the set.\\\\n\\\\n### Examples\\\\n```\\\\nfindSmallestNum([34, 15, 88, 2]) ➞ 2\\\\n\\\\nfindSmallestNum([34, -345, -1, 100]) ➞ -345\\\\n\\\\nfindSmallestNum([7, 7, 7]) ➞ 7\\\\n```\\\\n\\\\n### Notes\\\\n- Test cases contain only positive and negative numbers.\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're *really* stuck, unlock solutions in the **Solutions** tab.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertEquals(2, SmallestI","thisId":"1190","channelHost":"edabit.com","id":"1190","opcode":"1","channelId":"2","timestamp":"1652648867572"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"156\\\"]}\"]","thisId":"1191","channelHost":"edabit.com","id":"1191","opcode":"1","channelId":"2","timestamp":"1652648867713"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"11004","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"156\\\",\\\"result\\\":{\\\"_id\\\":\\\"vprfA75LFy9hcHBXY\\\",\\\"author\\\":\\\"Pickle\\\",\\\"authorId\\\":\\\"zzaD2EtTFR7PK52kY\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String reverseCapitalize(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.6366559485530546,\\\"familyId\\\":\\\"sJYN5HduFFLeNuR7G\\\",\\\"instructions\\\":\\\"Create a function that takes a string of lowercase characters and returns that string reversed and in upper case.\\\\n\\\\n### Examples\\\\n```\\\\nreverseCapitalize(\\\\\\\"abc\\\\\\\") ➞ \\\\\\\"CBA\\\\\\\"\\\\n\\\\nreverseCapitalize(\\\\\\\"hellothere\\\\\\\") ➞ \\\\\\\"EREHTOLLEH\\\\\\\"\\\\n\\\\nreverseCapitalize(\\\\\\\"input\\\\\\\") ➞ \\\\\\\"TUPNI\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"TIBADE\\\\\\\", Challenge.reverseCapitalize(\\\\\\\"edabit\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(\\\\\\\"CBA\\\\\\\", Challenge.reverseCa","thisId":"1192","channelHost":"edabit.com","id":"1192","opcode":"1","channelId":"2","timestamp":"1652648867718"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"157\\\"]}\"]","thisId":"1193","channelHost":"edabit.com","id":"1193","opcode":"1","channelId":"2","timestamp":"1652648867906"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4322","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"157\\\",\\\"result\\\":{\\\"_id\\\":\\\"baHpa6BQTYyrWL35e\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class NumberRotation {\\\\n\\\\tpublic static int rotateMaxNumber(String num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.673469387755102,\\\"familyId\\\":\\\"Nxjk4LwbTf5deBg8o\\\",\\\"instructions\\\":\\\"Create a function which takes a number and returns the maximum value by rearranging its digits.\\\\n\\\\n### Examples\\\\n```\\\\nrotateMaxNumber(\\\\\\\"1213\\\\\\\") ➞ 3211\\\\n\\\\nrotateMaxNumber(\\\\\\\"1217\\\\\\\") ➞ 7211\\\\n\\\\nrotateMaxNumber(\\\\\\\"123\\\\\\\") ➞ 321\\\\n\\\\nrotateMaxNumber(\\\\\\\"001\\\\\\\") ➞ 100\\\\n\\\\nrotateMaxNumber(\\\\\\\"999\\\\\\\") ➞ 999\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals; \\\\nimport org.junit.Test; \\\\n\\\\npublic class NumberRotationTest {\\\\n\\\\t@Test\\\\n\\\\tpublic void test01() { \\\\n\\\\t\\\\tassertEquals(732111, NumberRotation.rotateMaxNumber(\\\\\\\"121317\\\\\\\"));\\\\n\\\\t}\\\\n\\\\n\\\\t@Test\\\\n\\\\tpublic v","thisId":"1194","channelHost":"edabit.com","id":"1194","opcode":"1","channelId":"2","timestamp":"1652648867912"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"158\\\"]}\"]","thisId":"1195","channelHost":"edabit.com","id":"1195","opcode":"1","channelId":"2","timestamp":"1652648868096"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"10692","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"158\\\",\\\"result\\\":{\\\"_id\\\":\\\"8HB8AB873TYGukT6J\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int[] countdown(int start) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.675,\\\"familyId\\\":\\\"9MQHW97mywsRd3Tej\\\",\\\"instructions\\\":\\\"Create a function that takes a number as an argument and returns an array of numbers counting down from this number to zero.\\\\n\\\\n### Examples\\\\n```\\\\ncountdown(5) ➞ [5, 4, 3, 2, 1, 0]\\\\n\\\\ncountdown(1) ➞ [1, 0]\\\\n\\\\ncountdown(0) ➞ [0]\\\\n```\\\\n\\\\n### Notes\\\\nThe argument will always be greater than or equal to zero.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertThat(Challenge.countdown(3), is(new int[]{3, 2, 1, 0}));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test\\\\n\\\\tpublic void test2() {\\\\n\\\\t\\\\tassertThat(Challenge.countdown(20), is(new int[]{20, 19, 18, 1","thisId":"1196","channelHost":"edabit.com","id":"1196","opcode":"1","channelId":"2","timestamp":"1652648868099"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"159\\\"]}\"]","thisId":"1197","channelHost":"edabit.com","id":"1197","opcode":"1","channelId":"2","timestamp":"1652648868191"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7833","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"159\\\",\\\"result\\\":{\\\"_id\\\":\\\"s8q6rQPs37zjkdya2\\\",\\\"author\\\":\\\"Nathan Hohnbaum\\\",\\\"authorId\\\":\\\"Li55JB322ZcMFGna8\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean adjacent(int[][] graph, int node1, int node2) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.675,\\\"quality\\\":4.5,\\\"editorId\\\":\\\"Li55JB322ZcMFGna8\\\",\\\"familyId\\\":\\\"A68Y3j7bAd3dy458S\\\",\\\"instructions\\\":\\\"A directed graph is like an undirected graph except that edges have direction.  Each edge goes from a source node to a target node.\\\\n\\\\n### Examples\\\\n![Graph 1](https://edabit-challenges.s3.amazonaws.com/1_qFfswEI.png)\\\\n\\\\nHere, node 0 is adjacent to node 1, but node 1 is not adjacent to node 0, for example. Here is what the graph above would look like if it were undirected:\\\\n\\\\n![Graph 2](https://edabit-challenges.s3.amazonaws.com/2_VzUVh2D.png)\\\\n\\\\nIn directed graphs, the edge direction matters.  For example, the following two graphs are different:\\\\n\\\\n![Graph 3A](https://edabit-challenges.s3.amazonaws.co","thisId":"1198","channelHost":"edabit.com","id":"1198","opcode":"1","channelId":"2","timestamp":"1652648868195"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"160\\\"]}\"]","thisId":"1199","channelHost":"edabit.com","id":"1199","opcode":"1","channelId":"2","timestamp":"1652648868305"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"9040","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"160\\\",\\\"result\\\":{\\\"_id\\\":\\\"Hu3HxFH3Gnv2CwCeH\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String findNemo(String sentence) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.7317073170731707,\\\"familyId\\\":\\\"YuoEPMDc4kuhtYkJY\\\",\\\"instructions\\\":\\\"You're given a string of words. You need to find the word \\\\\\\"Nemo\\\\\\\", and return a string like this: `\\\\\\\"I found Nemo at [the order of the word you find Nemo]!\\\\\\\"`.\\\\n\\\\nIf you can't find Nemo, return `\\\\\\\"I can't find Nemo :(\\\\\\\"`.\\\\n\\\\n### Examples\\\\n```\\\\nfindNemo(\\\\\\\"I am finding Nemo !\\\\\\\") ➞ \\\\\\\"I found Nemo at 4!\\\\\\\"\\\\n\\\\nfindNemo(\\\\\\\"Nemo is me\\\\\\\") ➞ \\\\\\\"I found Nemo at 1!\\\\\\\"\\\\n\\\\nfindNemo(\\\\\\\"I Nemo am\\\\\\\") ➞ \\\\\\\"I found Nemo at 2!\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- `! , ? .` are always separated from the last word.\\\\n- Nemo will always look like _Nemo_, and not _NeMo_ or other capital variations.\\\\n- _Nemo's_, or anything that says _Nemo_ with something behind it, doesn'","thisId":"1200","channelHost":"edabit.com","id":"1200","opcode":"1","channelId":"2","timestamp":"1652648868308"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"161\\\"]}\"]","thisId":"1201","channelHost":"edabit.com","id":"1201","opcode":"1","channelId":"2","timestamp":"1652648868411"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4972","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"161\\\",\\\"result\\\":{\\\"_id\\\":\\\"fLc7y5ke7ZLkZk9sv\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Flick {\\\\n  public static Boolean[] switches(Object[] t) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":0.8035714285714286,\\\"familyId\\\":\\\"GwXKbG2b8oPELEtuY\\\",\\\"instructions\\\":\\\"Create a function that always returns `true` for every item in a given array. However, if an element is the word `\\\\\\\"flick\\\\\\\"`, switch to always returning the opposite boolean value.\\\\n\\\\n### Examples\\\\n```\\\\nswitches([\\\\\\\"edabit\\\\\\\", \\\\\\\"flick\\\\\\\", \\\\\\\"eda\\\\\\\", \\\\\\\"bit\\\\\\\"]) ➞ [true, false, false, false]\\\\n\\\\nswitches([\\\\\\\"flick\\\\\\\", 11037, 3.14, 53]) ➞ [false, false, false, false]\\\\n\\\\nswitches([false, false, \\\\\\\"flick\\\\\\\", \\\\\\\"sheep\\\\\\\", \\\\\\\"flick\\\\\\\"]) ➞ [true, true, false, false, true]\\\\n```\\\\n\\\\n### Notes\\\\n- `\\\\\\\"flick\\\\\\\"` will always be given in lowercase.\\\\n- An array may contain multiple flicks.\\\\n- Switch the boolean value on the same element as the flick itself.\\\",\\\"","thisId":"1202","channelHost":"edabit.com","id":"1202","opcode":"1","channelId":"2","timestamp":"1652648868416"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"162\\\"]}\"]","thisId":"1203","channelHost":"edabit.com","id":"1203","opcode":"1","channelId":"2","timestamp":"1652648868539"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"26005","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"162\\\",\\\"result\\\":{\\\"_id\\\":\\\"GEreBiJFJaTMb5wye\\\",\\\"author\\\":\\\"Yevhen B\\\",\\\"authorId\\\":\\\"HnoDeuYM8h3PkXtSz\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static int find_bob(String[] names) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.840983606557377,\\\"familyId\\\":\\\"NHLkWE9bwZuxTXof7\\\",\\\"instructions\\\":\\\"Write a function that searches a list of names (unsorted) for the name _\\\\\\\"Bob\\\\\\\"_ and returns the location in the list. If Bob is not in the array, return `-1`.\\\\n\\\\n### Examples\\\\n```\\\\nfind_bob([\\\\\\\"Jimmy\\\\\\\", \\\\\\\"Layla\\\\\\\", \\\\\\\"Bob\\\\\\\"]) ➞ 2\\\\n\\\\nfind_bob([\\\\\\\"Bob\\\\\\\", \\\\\\\"Layla\\\\\\\", \\\\\\\"Kaitlyn\\\\\\\", \\\\\\\"Patricia\\\\\\\"]) ➞ 0\\\\n\\\\nfind_bob([\\\\\\\"Jimmy\\\\\\\", \\\\\\\"Layla\\\\\\\", \\\\\\\"James\\\\\\\"]) ➞ -1\\\\n```\\\\n\\\\n### Notes\\\\nAssume all names start with a capital letter and are lowercase thereafter (i.e. don't worry about finding \\\\\\\"BOB\\\\\\\" or \\\\\\\"bob\\\\\\\").\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Assert;\\\\nimport org.junit.Test;\\\\n\\\\npublic class ChallengeTests {\\\\n    @Test\\\\n    pub","thisId":"1204","channelHost":"edabit.com","id":"1204","opcode":"1","channelId":"2","timestamp":"1652648868544"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"163\\\"]}\"]","thisId":"1205","channelHost":"edabit.com","id":"1205","opcode":"1","channelId":"2","timestamp":"1652648868660"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"44634","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"163\\\",\\\"result\\\":{\\\"_id\\\":\\\"odJPfYRD3kSpE45Jf\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String nSidedShape(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.9095513748191028,\\\"familyId\\\":\\\"md5rQEy8ZZJ2uEAFS\\\",\\\"instructions\\\":\\\"Create a function that takes a **whole number** as input and returns the shape with that number's amount of sides. Here are the expected outputs to get from these inputs.\\\\n\\\\nInputs | Outputs\\\\n--- | ---\\\\n1 | \\\\\\\"circle\\\\\\\"\\\\n2 | \\\\\\\"semi-circle\\\\\\\"\\\\n3 | \\\\\\\"triangle\\\\\\\"\\\\n4 | \\\\\\\"square\\\\\\\"\\\\n5 | \\\\\\\"pentagon\\\\\\\"\\\\n6 | \\\\\\\"hexagon\\\\\\\"\\\\n7 | \\\\\\\"heptagon\\\\\\\"\\\\n8 | \\\\\\\"octagon\\\\\\\"\\\\n9 | \\\\\\\"nonagon\\\\\\\"\\\\n10 | \\\\\\\"decagon\\\\\\\"\\\\n\\\\n### Examples\\\\n```\\\\nnSidedShape(3) ➞ \\\\\\\"triangle\\\\\\\"\\\\n\\\\nnSidedShape(1) ➞ \\\\\\\"circle\\\\\\\"\\\\n\\\\nnSidedShape(9) ➞ \\\\\\\"nonagon\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- There won't be any tests with a number below 1 or greater than 10.\\\\n- Return the output in *lowercase*.\\","thisId":"1206","channelHost":"edabit.com","id":"1206","opcode":"1","channelId":"2","timestamp":"1652648868664"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"164\\\"]}\"]","thisId":"1207","channelHost":"edabit.com","id":"1207","opcode":"1","channelId":"2","timestamp":"1652648868764"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"78082","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"164\\\",\\\"result\\\":{\\\"_id\\\":\\\"vKpGt4ufSKmEJ3Xjd\\\",\\\"author\\\":\\\"Nguyen Phan Dang\\\",\\\"authorId\\\":\\\"YLqdr7bYjwew2KM4N\\\",\\\"code\\\":\\\"import java.util.stream.IntStream;\\\\n\\\\npublic class Challenge {\\\\n\\\\tpublic static int countTrue(boolean[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.9527925531914894,\\\"familyId\\\":\\\"wRmJEqj4TmDdhsk26\\\",\\\"instructions\\\":\\\"Create a function which returns the number of `true` values there are in an array.\\\\n\\\\n### Examples\\\\n```\\\\ncountTrue([true, false, false, true, false]) ➞ 2\\\\n\\\\ncountTrue([false, false, false, false]) ➞ 0\\\\n\\\\ncountTrue([]) ➞ 0\\\\n```\\\\n\\\\n### Notes\\\\n- Return `0` if given an empty array.\\\\n- All array items are of the type bool (`true` or `false`).\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n    @Test\\\\n    public void test1() {\\\\n        assertThat(Chall","thisId":"1208","channelHost":"edabit.com","id":"1208","opcode":"1","channelId":"2","timestamp":"1652648868771"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"168\\\"]}\"]","thisId":"1209","channelHost":"edabit.com","id":"1209","opcode":"1","channelId":"2","timestamp":"1652648868924"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"76038","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"168\\\",\\\"result\\\":{\\\"_id\\\":\\\"gyfsGx7KrGLscxFrD\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int calculator(int num1, char operator, int num2) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.048803378695448,\\\"familyId\\\":\\\"iLRWptGWQRPAaY54a\\\",\\\"instructions\\\":\\\"Create a function that takes two numbers and a mathematical operator `+ - / *` and will perform a calculation with the given numbers.\\\\n\\\\n### Examples\\\\n```\\\\ncalculator(2, '+', 2) ➞ 4\\\\n\\\\ncalculator(2, '*', 2) ➞ 4\\\\n\\\\ncalculator(4, '/', 2) ➞ 2\\\\n\\\\n```\\\\n### Notes\\\\nIf the input tries to divide by 0, return `0`.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(1, Challenge.calculator(2, '/', 2));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(3, Challenge.calculator(10, '-', 7));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void te","thisId":"1210","channelHost":"edabit.com","id":"1210","opcode":"1","channelId":"2","timestamp":"1652648868928"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"166\\\"]}\"]","thisId":"1211","channelHost":"edabit.com","id":"1211","opcode":"1","channelId":"2","timestamp":"1652648869041"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"90361","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"166\\\",\\\"result\\\":{\\\"_id\\\":\\\"PZnwXraqBPYv7w4Sm\\\",\\\"archived\\\":false,\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean checkEnding(String str1, String str2) {\\\\n    \\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.004696673189824,\\\"familyId\\\":\\\"KBPeesR4uAWNiJ4hF\\\",\\\"instructions\\\":\\\"Create a function that takes two strings and returns `true` if the first string ends with the second string; otherwise return `false`.\\\\n\\\\n### Examples\\\\n```\\\\ncheckEnding(\\\\\\\"abc\\\\\\\", \\\\\\\"bc\\\\\\\") ➞ true\\\\n\\\\ncheckEnding(\\\\\\\"abc\\\\\\\", \\\\\\\"d\\\\\\\") ➞ false\\\\n\\\\ncheckEnding(\\\\\\\"samurai\\\\\\\", \\\\\\\"zi\\\\\\\") ➞ false\\\\n\\\\ncheckEnding(\\\\\\\"feminine\\\\\\\", \\\\\\\"nine\\\\\\\") ➞ true\\\\n\\\\ncheckEnding(\\\\\\\"convention\\\\\\\", \\\\\\\"tio\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nAll test cases are valid one word strings.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertEqual","thisId":"1212","channelHost":"edabit.com","id":"1212","opcode":"1","channelId":"2","timestamp":"1652648869049"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"165\\\"]}\"]","thisId":"1213","channelHost":"edabit.com","id":"1213","opcode":"1","channelId":"2","timestamp":"1652648869171"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"102258","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"165\\\",\\\"result\\\":{\\\"_id\\\":\\\"5LnycSd2xT4uwZCpi\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static int countWords(String s) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":0.9659477866061293,\\\"familyId\\\":\\\"knwhYh2Bxqozhvcqk\\\",\\\"instructions\\\":\\\"Create a method that takes a string and returns the word count. The string will be a sentence.\\\\n\\\\n### Examples\\\\n```\\\\ncountWords(\\\\\\\"Just an example here move along\\\\\\\") ➞ 6\\\\n\\\\ncountWords(\\\\\\\"This is a test\\\\\\\") ➞ 4\\\\n\\\\ncountWords(\\\\\\\"What an easy task, right\\\\\\\") ➞ 5\\\\n```\\\\n\\\\n### Notes\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're *really* stuck, unlock solutions in the **Solutions** tab.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertEquals(3, Program.countWords(\\\\\\\"It's high noon\\\\\\\"));\\\\n\\\\t}\\\\n\\\\n","thisId":"1214","channelHost":"edabit.com","id":"1214","opcode":"1","channelId":"2","timestamp":"1652648869178"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"167\\\"]}\"]","thisId":"1215","channelHost":"edabit.com","id":"1215","opcode":"1","channelId":"2","timestamp":"1652648869301"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"69222","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"167\\\",\\\"result\\\":{\\\"_id\\\":\\\"4kEHkvobTA4i6AQRE\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int triangle(int n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.0463832136940916,\\\"familyId\\\":\\\"DRGu4u8CA3iKDRDnD\\\",\\\"instructions\\\":\\\"This Triangular Number Sequence is generated from a pattern of dots that form a triangle. The first 5 numbers of the sequence, or dots, are:\\\\n\\\\n```\\\\n1, 3, 6, 10, 15\\\\n```\\\\n\\\\nThis means that the first triangle has just one dot, the second one has three dots, the third one has 6 dots and so on.\\\\n\\\\nWrite a function that returns the number of dots when given its corresponding triangle number of the sequence.\\\\n\\\\n### Examples\\\\n```\\\\ntriangle(1) ➞ 1\\\\n\\\\ntriangle(6) ➞ 21\\\\n\\\\ntriangle(215) ➞ 23220\\\\n```\\\\n\\\\n### Notes\\\\n Check the **Resources** for info on triangular number sequence.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npub","thisId":"1216","channelHost":"edabit.com","id":"1216","opcode":"1","channelId":"2","timestamp":"1652648869309"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"169\\\"]}\"]","thisId":"1217","channelHost":"edabit.com","id":"1217","opcode":"1","channelId":"2","timestamp":"1652648869414"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"27913","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"169\\\",\\\"result\\\":{\\\"_id\\\":\\\"aWzxPLibBLJgn8AbZ\\\",\\\"author\\\":\\\"Andrew Sun\\\",\\\"authorId\\\":\\\"btabi3PdyisuY5tn9\\\",\\\"code\\\":\\\"public class ExistsANumberHigher {\\\\n\\\\tpublic static boolean existsHigher(int[] arr, int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.057915057915058,\\\"familyId\\\":\\\"fae8bj7s37xF7ZzMX\\\",\\\"instructions\\\":\\\"Write a function that returns `true` if there exists **at least one number** that is **larger than or equal to** `n`.\\\\n\\\\n### Examples\\\\n```\\\\nexistsHigher([5, 3, 15, 22, 4], 10) ➞ true\\\\n\\\\nexistsHigher([1, 2, 3, 4, 5], 8) ➞ false\\\\n\\\\nexistsHigher([4, 3, 3, 3, 2, 2, 2], 4) ➞ true\\\\n\\\\nexistsHigher([], 5) ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nReturn `false` for an empty array `[]`.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertTrue;\\\\nimport static org.junit.Assert.assertFalse;\\\\n\\\\npublic class ExistsANumberHigherTest {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertTrue(ExistsANu","thisId":"1218","channelHost":"edabit.com","id":"1218","opcode":"1","channelId":"2","timestamp":"1652648869429"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"170\\\"]}\"]","thisId":"1219","channelHost":"edabit.com","id":"1219","opcode":"1","channelId":"2","timestamp":"1652648869538"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"82349","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"170\\\",\\\"result\\\":{\\\"_id\\\":\\\"8WBpaPzLP7piuHNeR\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n    public static String nameShuffle(String s) {\\\\n      \\\\n    }\\\\n}\\\",\\\"difficulty\\\":1.0595439189189189,\\\"familyId\\\":\\\"dSMvn7McJZSkpaoNm\\\",\\\"instructions\\\":\\\"Create a method that accepts a string (of a person's first and last name) and returns a string with the first and last name swapped.\\\\n\\\\n### Examples\\\\n```\\\\nnameShuffle(\\\\\\\"Donald Trump\\\\\\\") ➞ \\\\\\\"Trump Donald\\\\\\\"\\\\n\\\\nnameShuffle(\\\\\\\"Rosie O'Donnell\\\\\\\") ➞ \\\\\\\"O'Donnell Rosie\\\\\\\"\\\\n\\\\nnameShuffle(\\\\\\\"Seymour Butts\\\\\\\") ➞ \\\\\\\"Butts Seymour\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- There will be exactly one space between the first and last name.\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're *really* stuck, unlock solutions in the **Solutions** tab.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\np","thisId":"1220","channelHost":"edabit.com","id":"1220","opcode":"1","channelId":"2","timestamp":"1652648869544"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"171\\\"]}\"]","thisId":"1221","channelHost":"edabit.com","id":"1221","opcode":"1","channelId":"2","timestamp":"1652648869654"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"32146","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"171\\\",\\\"result\\\":{\\\"_id\\\":\\\"Wci9YChXWRj6JBeFP\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Sales {\\\\n\\\\tpublic static double discount(int price, int percentage) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n} \\\",\\\"difficulty\\\":1.0627376425855513,\\\"familyId\\\":\\\"i6rpBeLcH6qEXNfiX\\\",\\\"instructions\\\":\\\"Create a function that takes two arguments: the original `price` and the `discount` percentage as integers and returns the final price after the discount.\\\\n\\\\n![Alternative Text](https://edabit-challenges.s3.amazonaws.com/discounts-300x230.jpg)\\\\n\\\\n### Examples\\\\n```\\\\ndiscount(1500, 50) ➞ 750\\\\n\\\\ndiscount(89, 20) ➞ 71.2\\\\n\\\\ndiscount(100, 75) ➞ 25\\\\n```\\\\n\\\\n### Notes\\\\nYour answer should be rounded to two decimal places.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals;\\\\nimport org.junit.Test;\\\\n\\\\npublic class SalesTests {\\\\n\\\\t@Test\\\\n\\\\tpublic void test01() {\\\\n\\\\t\\\\tassertEquals(25, Sales.discou","thisId":"1222","channelHost":"edabit.com","id":"1222","opcode":"1","channelId":"2","timestamp":"1652648869659"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"172\\\"]}\"]","thisId":"1223","channelHost":"edabit.com","id":"1223","opcode":"1","channelId":"2","timestamp":"1652648869765"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"29368","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"172\\\",\\\"result\\\":{\\\"_id\\\":\\\"yzfiD6ZXt84qL3v2e\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Stuttering {\\\\n\\\\tpublic static String stutter(String word) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.0670926517571886,\\\"quality\\\":4.651715039577836,\\\"familyId\\\":\\\"rJekWXGsZnZJMvLrb\\\",\\\"instructions\\\":\\\"Write a function that stutters a word as if someone is struggling to read it. The first two letters are repeated twice with an ellipsis `...` and space after each, and then the word is pronounced with a question mark `?`.\\\\n\\\\n### Examples\\\\n```\\\\nstutter(\\\\\\\"incredible\\\\\\\") ➞ \\\\\\\"in... in... incredible?\\\\\\\"\\\\n\\\\nstutter(\\\\\\\"enthusiastic\\\\\\\") ➞ \\\\\\\"en... en... enthusiastic?\\\\\\\"\\\\n\\\\nstutter(\\\\\\\"outstanding\\\\\\\") ➞ \\\\\\\"ou... ou... outstanding?\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Assume all inputs are in lower case and at least two-character long.\\\\n- Check on the **Resources** tab for more helpful tips on String formatting in Java.\\\",\\\"isHidden\\\":false,\\\"la","thisId":"1224","channelHost":"edabit.com","id":"1224","opcode":"1","channelId":"2","timestamp":"1652648869771"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"173\\\"]}\"]","thisId":"1225","channelHost":"edabit.com","id":"1225","opcode":"1","channelId":"2","timestamp":"1652648869900"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"63297","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"173\\\",\\\"result\\\":{\\\"_id\\\":\\\"rYD9NTBmNhaPM6wx2\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean canCapture(String[] rooks) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.0683473389355742,\\\"familyId\\\":\\\"y9itY7mjhHhPJskKy\\\",\\\"instructions\\\":\\\"Write a function that returns `true` if two rooks can attack each other, and `false` otherwise.\\\\n\\\\n### Examples\\\\n```\\\\ncanCapture([\\\\\\\"A8\\\\\\\", \\\\\\\"E8\\\\\\\"]) ➞ true\\\\n\\\\ncanCapture([\\\\\\\"A1\\\\\\\", \\\\\\\"B2\\\\\\\"]) ➞ false\\\\n\\\\ncanCapture([\\\\\\\"H4\\\\\\\", \\\\\\\"H3\\\\\\\"]) ➞ true\\\\n\\\\ncanCapture([\\\\\\\"F5\\\\\\\", \\\\\\\"C8\\\\\\\"]) ➞ false\\\\n```\\\\n\\\\n### Notes\\\\n- Assume no blocking pieces.\\\\n- Two rooks can attack each other if they share the same row (letter) or column (number).\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertThat(Challenge.","thisId":"1226","channelHost":"edabit.com","id":"1226","opcode":"1","channelId":"2","timestamp":"1652648869907"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"174\\\"]}\"]","thisId":"1227","channelHost":"edabit.com","id":"1227","opcode":"1","channelId":"2","timestamp":"1652648870011"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"26808","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"174\\\",\\\"result\\\":{\\\"_id\\\":\\\"QCgoxbd32BqFr6AY7\\\",\\\"author\\\":\\\"_fluffyy\\\",\\\"authorId\\\":\\\"foytX6kH9wiSYqLtT\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static String fizzBuzz(int n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.069364161849711,\\\"familyId\\\":\\\"BQ5fjhgXXYJJ3nPny\\\",\\\"instructions\\\":\\\"Create a function that takes a number as an argument and returns `\\\\\\\"Fizz\\\\\\\"`, `\\\\\\\"Buzz\\\\\\\"` or `\\\\\\\"FizzBuzz\\\\\\\"`.\\\\n\\\\n- If the number is a multiple of 3 the output should be `\\\\\\\"Fizz\\\\\\\"`.\\\\n- If the number given is a multiple of 5, the output should be `\\\\\\\"Buzz\\\\\\\"`.\\\\n- If the number given is a multiple of both 3 and 5, the output should be `\\\\\\\"FizzBuzz\\\\\\\"`.\\\\n- If the number is not a multiple of either 3 or 5, the number should be output on its own as shown in the examples below.\\\\n- The output should always be a string even if it is not a multiple of 3 or 5.\\\\n\\\\n### Examples\\\\n```\\\\nfizzBuzz(3) ➞ \\\\\\\"Fizz\\\\\\\"\\\\n\\\\nfizzBuzz(5) ➞ \\\\\\\"Buzz\\\\\\\"\\\\n\\\\nfizzBuzz(15) ➞ \\\\\\\"FizzBuzz\\\\","thisId":"1228","channelHost":"edabit.com","id":"1228","opcode":"1","channelId":"2","timestamp":"1652648870015"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"175\\\"]}\"]","thisId":"1229","channelHost":"edabit.com","id":"1229","opcode":"1","channelId":"2","timestamp":"1652648870105"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"44382","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"175\\\",\\\"result\\\":{\\\"_id\\\":\\\"jfquehNLzpXW5ZQu5\\\",\\\"author\\\":\\\"Nguyen Phan Dang\\\",\\\"authorId\\\":\\\"YLqdr7bYjwew2KM4N\\\",\\\"code\\\":\\\"import java.util.stream.IntStream;\\\\n\\\\npublic class Program {\\\\t\\\\t\\\\n\\\\tpublic static boolean changeEnough(int[] change, double amountDue) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\t\\\\n}\\\",\\\"difficulty\\\":1.0760180995475113,\\\"familyId\\\":\\\"f8aqzSBXtYmg95GSr\\\",\\\"instructions\\\":\\\"Given a total due and an array representing the amount of change in your pocket, determine whether or not you are able to pay for the item. Change will always be represented in the following order: quarters, dimes, nickels, pennies.\\\\n\\\\nTo illustrate: `changeEnough([25, 20, 5, 0], 4.25)` should yield `true`, since having 25 quarters, 20 dimes, 5 nickels and 0 pennies gives you 6.25 + 2 + .25 + 0 = 8.50.\\\\n\\\\n### Examples\\\\n```\\\\nchangeEnough([2, 100, 0, 0], 14.11) ➞ false\\\\n\\\\nchangeEnough([0, 0, 20, 5], 0.75) ➞ true\\\\n\\\\nchangeEnough([30, 40, 20, 5], 12.55) ➞ true\\\\n\\\\nchangeEnough([10, 0, 0, 50], 3.8","thisId":"1230","channelHost":"edabit.com","id":"1230","opcode":"1","channelId":"2","timestamp":"1652648870110"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"176\\\"]}\"]","thisId":"1231","channelHost":"edabit.com","id":"1231","opcode":"1","channelId":"2","timestamp":"1652648870223"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"54845","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"176\\\",\\\"result\\\":{\\\"_id\\\":\\\"hymPkXdhmDQLe87QT\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int differenceMaxMin(int[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.0772727272727274,\\\"familyId\\\":\\\"edFv4urXqEfijCi96\\\",\\\"instructions\\\":\\\"Create a function that takes an array and returns the **difference** between the biggest and smallest numbers.\\\\n\\\\n### Examples\\\\n```\\\\ndifferenceMaxMin([10, 4, 1, 4, -10, -50, 32, 21]) ➞ 82\\\\n// Smallest number is -50, biggest is 32.\\\\n\\\\ndifferenceMaxMin([44, 32, 86, 19]) ➞ 67\\\\n// Smallest number is 19, biggest is 86.\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertThat(Challenge.differenceMaxMin(new int[]{10, 4, 1, 2, 8, 91}), is(90));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test \\\\n\\\\tpublic void test2() {\\\\","thisId":"1232","channelHost":"edabit.com","id":"1232","opcode":"1","channelId":"2","timestamp":"1652648870227"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"177\\\"]}\"]","thisId":"1233","channelHost":"edabit.com","id":"1233","opcode":"1","channelId":"2","timestamp":"1652648870328"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47328","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"177\\\",\\\"result\\\":{\\\"_id\\\":\\\"nfc7H9CQFqJp54uEh\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int equal(int a, int b, int c) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.0791311093871219,\\\"familyId\\\":\\\"ZinhSuuYxpNSLpNKZ\\\",\\\"instructions\\\":\\\"Create a function that takes three integer arguments `(a, b, c) ` and returns the amount of integers which are of equal value.\\\\n\\\\n### Examples\\\\n```\\\\nequal(3, 4, 3) ➞ 2\\\\n\\\\nequal(1, 1, 1) ➞ 3\\\\n\\\\nequal(3, 4, 1) ➞ 0\\\\n```\\\\n\\\\n### Notes\\\\nYour function must return 0, 2 or 3.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tSystem.out.println(\\\\\\\"Should work if no values are the same.\\\\\\\"); \\\\n\\\\t\\\\tassertEquals(0, Challenge.equal(2, 3, 4));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test \\\\n\\\\tpublic void test2() {\\\\n\\\\t\\\\tSystem.out.println(\\\\\\\"Should work if no values are the same.\\\\","thisId":"1234","channelHost":"edabit.com","id":"1234","opcode":"1","channelId":"2","timestamp":"1652648870336"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"178\\\"]}\"]","thisId":"1235","channelHost":"edabit.com","id":"1235","opcode":"1","channelId":"2","timestamp":"1652648870434"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"70601","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"178\\\",\\\"result\\\":{\\\"_id\\\":\\\"5gPCp7v7iDWZvb4YQ\\\",\\\"archived\\\":false,\\\"author\\\":\\\"Theodore\\\",\\\"authorId\\\":\\\"hi7Hvtq2mJfkXEGF2\\\",\\\"code\\\":\\\"public class ReverseOrder {\\\\n  public static String reverse(final String str) {\\\\n    \\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.0795246800731262,\\\"familyId\\\":\\\"MySiaRBeLe8XE7hbm\\\",\\\"instructions\\\":\\\"Create a method that takes a string as its argument and returns the string in reversed order.\\\\n\\\\n### Examples\\\\n```\\\\nreverse(\\\\\\\"Hello World\\\\\\\") ➞ \\\\\\\"dlroW olleH\\\\\\\"\\\\n\\\\nreverse(\\\\\\\"The quick brown fox.\\\\\\\") ➞ \\\\\\\".xof nworb kciuq ehT\\\\\\\"\\\\n\\\\nreverse(\\\\\\\"Edabit is really helpful!\\\\\\\") ➞ \\\\\\\"!lufpleh yllaer si tibadE\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nYou can expect a valid string for all test cases.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertEquals(\\\\\\\"Think different.\\\\\\\", ReverseOrder.reverse(\\\\\\\".tnereffid knihT\\\\\\\"));\\\\n\\\\t}\\\\n\\\\t\\\\","thisId":"1236","channelHost":"edabit.com","id":"1236","opcode":"1","channelId":"2","timestamp":"1652648870439"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"180\\\"]}\"]","thisId":"1237","channelHost":"edabit.com","id":"1237","opcode":"1","channelId":"2","timestamp":"1652648870562"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"44585","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"180\\\",\\\"result\\\":{\\\"_id\\\":\\\"akHQKSkHT26TuA7Ka\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int programmers(int one, int two, int three) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.0806451612903225,\\\"familyId\\\":\\\"D2ifcWTsiwkdQQeth\\\",\\\"instructions\\\":\\\"You hired three programmers and you (hopefully) pay them. Create a function that takes three numbers (the hourly wages of each programmer) and returns the difference between the highest-paid programmer and the lowest-paid.\\\\n\\\\n## Examples\\\\n```\\\\nprogrammers(147, 33, 526) ➞ 493\\\\n\\\\nprogrammers(33, 72, 74) ➞ 41\\\\n\\\\nprogrammers(1, 5, 9) ➞ 8\\\\n```\\\\n\\\\n## Notes\\\\n- Don't forget to `return` the result.\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're really stuck, unlock solutions in the **Solutions** tab.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n","thisId":"1238","channelHost":"edabit.com","id":"1238","opcode":"1","channelId":"2","timestamp":"1652648870568"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"179\\\"]}\"]","thisId":"1239","channelHost":"edabit.com","id":"1239","opcode":"1","channelId":"2","timestamp":"1652648870659"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"36106","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"179\\\",\\\"result\\\":{\\\"_id\\\":\\\"R3PnRquBPADEqDxZg\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String getWord(String left, String right) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.0800889877641824,\\\"familyId\\\":\\\"cb72FZzRzPQ8FXNzr\\\",\\\"instructions\\\":\\\"A word has been split into a `left` part and a `right` part. Re-form the word by adding both halves together, changing the *first* character to an uppercase letter.\\\\n\\\\n### Examples\\\\n```\\\\ngetWord(\\\\\\\"seas\\\\\\\", \\\\\\\"onal\\\\\\\") ➞ \\\\\\\"Seasonal\\\\\\\"\\\\n\\\\ngetWord(\\\\\\\"comp\\\\\\\", \\\\\\\"lete\\\\\\\") ➞ \\\\\\\"Complete\\\\\\\"\\\\n\\\\ngetWord(\\\\\\\"lang\\\\\\\", \\\\\\\"uage\\\\\\\") ➞ \\\\\\\"Language\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"Magazine\\\\\\\", Challenge.getWord(\\\\\\\"maga\\\\\\\", \\\\\\\"zine\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\","thisId":"1240","channelHost":"edabit.com","id":"1240","opcode":"1","channelId":"2","timestamp":"1652648870664"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"181\\\"]}\"]","thisId":"1241","channelHost":"edabit.com","id":"1241","opcode":"1","channelId":"2","timestamp":"1652648870780"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"39726","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"181\\\",\\\"result\\\":{\\\"_id\\\":\\\"sPz2LcPZyAiBHRgwX\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static String formatPhoneNumber(int[] nums) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.0810372771474879,\\\"familyId\\\":\\\"mcWffbbswbjX2J9cN\\\",\\\"instructions\\\":\\\"Create a method that takes an array of 10 integers (between 0 and 9) and returns a string of those numbers formatted as a phone number (e.g. **(555) 555-5555**).\\\\n\\\\n### Examples\\\\n```\\\\nformatPhoneNumber([1, 2, 3, 4, 5, 6, 7, 8, 9, 0]) ➞ \\\\\\\"(123) 456-7890\\\\\\\"\\\\n\\\\nformatPhoneNumber([5, 1, 9, 5, 5, 5, 4, 4, 6, 8]) ➞ \\\\\\\"(519) 555-4468\\\\\\\"\\\\n\\\\nformatPhoneNumber([3, 4, 5, 5, 0, 1, 2, 5, 2, 7]) ➞ \\\\\\\"(345) 501-2527\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nDon't forget the space after the closing parenthesis.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test","thisId":"1242","channelHost":"edabit.com","id":"1242","opcode":"1","channelId":"2","timestamp":"1652648870791"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"185\\\"]}\"]","thisId":"1243","channelHost":"edabit.com","id":"1243","opcode":"1","channelId":"2","timestamp":"1652648870931"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"45022","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"185\\\",\\\"result\\\":{\\\"_id\\\":\\\"bkFqwEP5Gej23didA\\\",\\\"archived\\\":false,\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class XO {\\\\n  public static boolean getXO (String str) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.0842245989304813,\\\"familyId\\\":\\\"dz24ChsTyYbKt8izi\\\",\\\"instructions\\\":\\\"Create a function that takes a string, checks if it has the same number of x's and  o's and returns either `true` or `false`.\\\\n\\\\n### Rules\\\\n- Return a boolean value (`true` or `false`).\\\\n- Return `true` if the amount of x's and o's are the same.\\\\n- Return `false` if they aren't the same amount.\\\\n- The string can contain any character.\\\\n- When \\\\\\\"x\\\\\\\" and \\\\\\\"o\\\\\\\" are not in the string, return `true`.\\\\n\\\\n### Examples\\\\n```\\\\ngetXO(\\\\\\\"ooxx\\\\\\\") ➞ true\\\\n\\\\ngetXO(\\\\\\\"xooxx\\\\\\\") ➞ false\\\\n\\\\ngetXO(\\\\\\\"ooxXm\\\\\\\") ➞ true\\\\n// Case insensitive.\\\\n\\\\ngetXO(\\\\\\\"zpzpzpp\\\\\\\") ➞ true\\\\n// Returns true if no x and o.\\\\n\\\\ngetXO(\\\\\\\"zzoo\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\n- Re","thisId":"1244","channelHost":"edabit.com","id":"1244","opcode":"1","channelId":"2","timestamp":"1652648870934"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"184\\\"]}\"]","thisId":"1245","channelHost":"edabit.com","id":"1245","opcode":"1","channelId":"2","timestamp":"1652648871020"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"52567","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"184\\\",\\\"result\\\":{\\\"_id\\\":\\\"GBKphScsmDi9ek3ra\\\",\\\"archived\\\":false,\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Vowels {\\\\n  public static int getCount(String str) {\\\\n    int vowelsCount = 0;\\\\n    // Your code here\\\\n    \\\\n    return vowelsCount;\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.083186877562976,\\\"familyId\\\":\\\"phijScmq3QwBsevrn\\\",\\\"instructions\\\":\\\"Create a function that takes a string and returns the number (count) of vowels contained within it.\\\\n\\\\n### Examples\\\\n```\\\\ncountVowels(\\\\\\\"Celebration\\\\\\\") ➞ 5\\\\n\\\\ncountVowels(\\\\\\\"Palm\\\\\\\") ➞ 1\\\\n\\\\ncountVowels(\\\\\\\"Prediction\\\\\\\") ➞ 4\\\\n```\\\\n\\\\n### Notes\\\\n- a, e, i, o, u are considered vowels (not y).\\\\n- All test cases are one word and only contain letters.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertEquals(\\\\\\\"Nope!\\\\\\\", 5, Vowels.getCount(\\\\\\\"Celebration\\\\\\\"));\\\\n\\\\t}\\\\n","thisId":"1246","channelHost":"edabit.com","id":"1246","opcode":"1","channelId":"2","timestamp":"1652648871023"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"182\\\"]}\"]","thisId":"1247","channelHost":"edabit.com","id":"1247","opcode":"1","channelId":"2","timestamp":"1652648871126"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"23126","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"182\\\",\\\"result\\\":{\\\"_id\\\":\\\"H2MT5bAZ8Guj52zxK\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class FindTheBomb {\\\\n\\\\tpublic static String bomb(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.087719298245614,\\\"familyId\\\":\\\"BPWZtkP2TFrcCRuuF\\\",\\\"instructions\\\":\\\"Write a function that finds the word `\\\\\\\"bomb\\\\\\\"` in the given string (not case sensitive). Return `\\\\\\\"DUCK!\\\\\\\"` if found, otherwise,`\\\\\\\"Relax, there's no bomb.\\\\\\\"`.\\\\n\\\\n### Examples\\\\n```\\\\nbomb(\\\\\\\"There is a bomb.\\\\\\\") ➞ \\\\\\\"DUCK!\\\\\\\"\\\\n\\\\nbomb(\\\\\\\"Hey, did you think there is a BOMB?\\\\\\\") ➞ \\\\\\\"DUCK!\\\\\\\"\\\\n\\\\nbomb(\\\\\\\"This goes boom!!!\\\\\\\") ➞ \\\\\\\"Relax, there's no bomb.\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- The string `\\\\\\\"bomb\\\\\\\"` may appear in different character cases (i.e. *uppercase, lowercase, mixed*).\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals;\\\\nimport org.junit.Test;\\\\n\\\\npublic class FindTheBombTests {","thisId":"1248","channelHost":"edabit.com","id":"1248","opcode":"1","channelId":"2","timestamp":"1652648871141"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"183\\\"]}\"]","thisId":"1249","channelHost":"edabit.com","id":"1249","opcode":"1","channelId":"2","timestamp":"1652648871228"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"19900","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"183\\\",\\\"result\\\":{\\\"_id\\\":\\\"y4QqLgKXXxqZnemAm\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class ArithmeticOps {\\\\n  public static int operate(int a, int b, String op) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.0823529411764705,\\\"familyId\\\":\\\"a7w7NHmxkEMLCfLmy\\\",\\\"instructions\\\":\\\"Some basic arithmetic operators are `+`, `-`, `*`, `/`, and `%`. In this challenge you will be given three parameters, `num1`, `num2`, and an `operator`. Use the operator on number 1 and 2.\\\\n\\\\n### Examples\\\\n```\\\\noperate(1, 2, \\\\\\\"+\\\\\\\") ➞ 3\\\\n// 1 + 2 = 3\\\\n\\\\noperate(7, 10, \\\\\\\"-\\\\\\\") ➞ -3\\\\n// 7 - 10 = -3\\\\n\\\\noperate(20, 10, \\\\\\\"%\\\\\\\") ➞ 0\\\\n// 20 % 10 = 0\\\\n```\\\\n\\\\n### Notes\\\\nThere will no division by zero.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals; \\\\nimport org.junit.Test; \\\\n\\\\npublic class ArithmeticOpsTest {\\\\n\\\\t@Test\\\\n\\\\tpublic void test01() { \\\\n\\\\t\\\\tassertEquals(2, ArithmeticOps","thisId":"1250","channelHost":"edabit.com","id":"1250","opcode":"1","channelId":"2","timestamp":"1652648871240"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"186\\\"]}\"]","thisId":"1251","channelHost":"edabit.com","id":"1251","opcode":"1","channelId":"2","timestamp":"1652648871340"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"35863","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"186\\\",\\\"result\\\":{\\\"_id\\\":\\\"WM5s7vuHnXdcKCEjS\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static int[] sortNumsAscending(int[] nums) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.0846846846846847,\\\"familyId\\\":\\\"TyRHda8M5Myq9Pvsc\\\",\\\"instructions\\\":\\\"Create a method that takes an array of integers and returns a new array, sorted in ascending order (smallest to biggest).\\\\n\\\\n- Sort integer array in ascending order.\\\\n- If the function's argument is `null`, an empty array, or `undefined`; return an empty array.\\\\n- Return a new array of sorted numbers.\\\\n\\\\n### Examples\\\\n```\\\\nsortNumsAscending([1, 2, 10, 50, 5]) ➞ [1, 2, 5, 10, 50]\\\\n\\\\nsortNumsAscending([80, 29, 4, -95, -24, 85]) ➞ [-95, -24, 4, 29, 80, 85]\\\\n\\\\nsortNumsAscending(null) ➞ []\\\\n\\\\nsortNumsAscending([]) ➞ []\\\\n```\\\\n\\\\n### Notes\\\\nTest input can be positive or negative.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.","thisId":"1252","channelHost":"edabit.com","id":"1252","opcode":"1","channelId":"2","timestamp":"1652648871344"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"187\\\"]}\"]","thisId":"1253","channelHost":"edabit.com","id":"1253","opcode":"1","channelId":"2","timestamp":"1652648871449"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6739","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"187\\\",\\\"result\\\":{\\\"_id\\\":\\\"pbK6j5Try2TuDeSwK\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class RemoveLetters {\\\\n  public static String removeABC(String words) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.07,\\\"familyId\\\":\\\"FyH7wYpXjLiGYxPuT\\\",\\\"instructions\\\":\\\"Create a function that will remove the letters \\\\\\\"a\\\\\\\", \\\\\\\"b\\\\\\\" and \\\\\\\"c\\\\\\\" from the given string and return the modified version. If the given string does not contain \\\\\\\"a\\\\\\\", \\\\\\\"b\\\\\\\", or \\\\\\\"c\\\\\\\", return `null`.\\\\n\\\\n### Examples\\\\n```\\\\nremoveABC(\\\\\\\"Tesha is my world\\\\\\\") ➞ \\\\\\\"Tesh is my world\\\\\\\"\\\\n\\\\nremoveABC(\\\\\\\"This might be a bit hard\\\\\\\") ➞ \\\\\\\"This might e  it hrd\\\\\\\"\\\\n\\\\nremoveABC(\\\\\\\"hello world!\\\\\\\") ➞ null\\\\n\\\\nremoveABC(\\\\\\\"\\\\\\\") ➞ null\\\\n```\\\\n\\\\n### Notes\\\\nIf the given string does not contain \\\\\\\"a\\\\\\\", \\\\\\\"b\\\\\\\", or \\\\\\\"c\\\\\\\", return `null`.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"\\\\n/** \\\\n=================================== ","thisId":"1254","channelHost":"edabit.com","id":"1254","opcode":"1","channelId":"2","timestamp":"1652648871457"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"188\\\"]}\"]","thisId":"1255","channelHost":"edabit.com","id":"1255","opcode":"1","channelId":"2","timestamp":"1652648871558"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"10117","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"188\\\",\\\"result\\\":{\\\"_id\\\":\\\"2tXKcSr4fZKMQToui\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Speak {\\\\n  public static String stuttering(String word) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.0793650793650793,\\\"editorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"familyId\\\":\\\"cXdvmvQTLEiJCc5mi\\\",\\\"instructions\\\":\\\"You stutter when you talk with continued repetition of sounds almost unknowingly, especially with the initial consonants of a word. Or at times when we're frightened, it causes us to stutter.\\\\n\\\\nCreate a function that mimics the stuttering of a spoken word. The function will repeat the **first two letters** of the word followed by an **ellipses** (**...**) plus a **space** character, for twice in a row, and finally, the word ending with an exclamation point.\\\\n\\\\n### Examples\\\\n```\\\\nstuttering(\\\\\\\"astonishing\\\\\\\") ➞ \\\\\\\"as... as... astonishing!\\\\\\\"\\\\n\\\\nstuttering(\\\\\\\"enticing\\\\\\\") ➞ \\\\\\\"en... en... enticing!\\\\\\\"\\\\n\\\\nstuttering(\\\\\\\"dazzling\\\\\\","thisId":"1256","channelHost":"edabit.com","id":"1256","opcode":"1","channelId":"2","timestamp":"1652648871561"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"189\\\"]}\"]","thisId":"1257","channelHost":"edabit.com","id":"1257","opcode":"1","channelId":"2","timestamp":"1652648871680"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"27467","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"189\\\",\\\"result\\\":{\\\"_id\\\":\\\"oMCKfdMqgt9kxqA2M\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static String removeVowels(String s) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.08419689119171,\\\"familyId\\\":\\\"nbhiWRLi4jAbGroJo\\\",\\\"instructions\\\":\\\"Create a function that takes a string and returns a new string with all vowels removed.\\\\n\\\\n### Examples\\\\n```\\\\nremoveVowels(\\\\\\\"I have never seen a thin person drinking Diet Coke.\\\\\\\")\\\\n➞ \\\\\\\" hv nvr sn  thn prsn drnkng Dt Ck.\\\\\\\"\\\\n\\\\nremoveVowels(\\\\\\\"We're gonna build a wall!\\\\\\\")\\\\n➞ \\\\\\\"W'r gnn bld  wll!\\\\\\\"\\\\n\\\\nremoveVowels(\\\\\\\"Happy Thanksgiving to all--even the haters and losers!\\\\\\\")\\\\n➞ \\\\\\\"Hppy Thnksgvng t ll--vn th htrs nd lsrs!\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- \\\\\\\"y\\\\\\\" is not considered a vowel.\\\\n- Expect a valid string for all test cases.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests","thisId":"1258","channelHost":"edabit.com","id":"1258","opcode":"1","channelId":"2","timestamp":"1652648871703"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"190\\\"]}\"]","thisId":"1259","channelHost":"edabit.com","id":"1259","opcode":"1","channelId":"2","timestamp":"1652648871820"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"24666","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"190\\\",\\\"result\\\":{\\\"_id\\\":\\\"FRtmuYD26pcQWFR7k\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int[] calculateScores(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.08419689119171,\\\"familyId\\\":\\\"yQf2MofjwKgmGfHYe\\\",\\\"instructions\\\":\\\"Andy, Ben and Charlotte are playing a board game. The three of them decided to come up with a new scoring system. A player's first initial (\\\\\\\"A\\\\\\\", \\\\\\\"B\\\\\\\" or \\\\\\\"C\\\\\\\") denotes that player scoring a single point. Given a string of capital letters, return an array of the players' scores.\\\\n\\\\nFor instance, if `ABBACCCCAC` is written when the game is over, then Andy scored **3 points**, Ben scored **2 points**, and Charlotte scored **5 points**, since there are 3 instances of letter A, 2 instances of letter B, and 5 instances of letter C. So the array `[3, 2, 5]` should be returned.\\\\n\\\\n### Examples\\\\n```\\\\ncalculateScores(\\\\\\\"A\\\\\\\") ➞ [1, 0, 0]\\\\n\\\\ncalculateScores(\\\\","thisId":"1260","channelHost":"edabit.com","id":"1260","opcode":"1","channelId":"2","timestamp":"1652648871825"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"191\\\"]}\"]","thisId":"1261","channelHost":"edabit.com","id":"1261","opcode":"1","channelId":"2","timestamp":"1652648871936"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"53510","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"191\\\",\\\"result\\\":{\\\"_id\\\":\\\"KeX3ZcaPo3sEqXTYb\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n    public static String doubleChar(String s) {\\\\n      \\\\n    }\\\\n}\\\",\\\"difficulty\\\":1.0861968549796157,\\\"familyId\\\":\\\"Bieb4Q6kczPDSGnKf\\\",\\\"instructions\\\":\\\"Create a method that takes a string and returns a string in which each character is repeated once.\\\\n\\\\n### Examples\\\\n```\\\\ndoubleChar(\\\\\\\"String\\\\\\\") ➞ \\\\\\\"SSttrriinngg\\\\\\\"\\\\n\\\\ndoubleChar(\\\\\\\"Hello World!\\\\\\\") ➞ \\\\\\\"HHeelllloo  WWoorrlldd!!\\\\\\\"\\\\n\\\\ndoubleChar(\\\\\\\"1234!_ \\\\\\\") ➞ \\\\\\\"11223344!!__  \\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nAll test cases contain valid strings. Don't worry about spaces, special characters or numbers. They're all considered valid characters.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"SSttrriinngg\\\\\\\", Program.double","thisId":"1262","channelHost":"edabit.com","id":"1262","opcode":"1","channelId":"2","timestamp":"1652648871939"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"192\\\"]}\"]","thisId":"1263","channelHost":"edabit.com","id":"1263","opcode":"1","channelId":"2","timestamp":"1652648872053"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"10270","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"192\\\",\\\"result\\\":{\\\"_id\\\":\\\"SvptD77rYQJgjDvZY\\\",\\\"author\\\":\\\"Nguyen Phan Dang\\\",\\\"authorId\\\":\\\"YLqdr7bYjwew2KM4N\\\",\\\"code\\\":\\\"public class ChallengeTests {\\\\t\\\\n\\\\tpublic static boolean factorChain(int[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.0846153846153845,\\\"familyId\\\":\\\"YkAA8rkSc3jYiLHec\\\",\\\"instructions\\\":\\\"A **factor chain** is an array where each previous element is a factor of the next  consecutive element. The following is a factor chain: \\\\n\\\\n```\\\\n[3, 6, 12, 36]\\\\n\\\\n// 3 is a factor of 6\\\\n// 6 is a factor of 12\\\\n// 12 is a factor of 36\\\\n```\\\\n\\\\nCreate a function that determines whether or not an array is a factor chain. \\\\n\\\\n### Examples\\\\n```\\\\nfactorChain([1, 2, 4, 8, 16, 32]) ➞ true\\\\n\\\\nfactorChain([1, 1, 1, 1, 1, 1]) ➞ true\\\\n\\\\nfactorChain([2, 4, 6, 7, 12]) ➞ false\\\\n\\\\nfactorChain([10, 1]) ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals;\\\\n\\\\nimport org.junit.Test;\\\\n\\\\npublic class Ch","thisId":"1264","channelHost":"edabit.com","id":"1264","opcode":"1","channelId":"2","timestamp":"1652648872056"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"193\\\"]}\"]","thisId":"1265","channelHost":"edabit.com","id":"1265","opcode":"1","channelId":"2","timestamp":"1652648872171"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"23131","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"193\\\",\\\"result\\\":{\\\"_id\\\":\\\"8hk27ha9CtqCQsYP8\\\",\\\"author\\\":\\\"Nathan Hohnbaum\\\",\\\"authorId\\\":\\\"Li55JB322ZcMFGna8\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean adjacent(int[][] graph, int node1, int node2) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.0899742930591259,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"cbPksJ5fxkCAmYxbJ\\\",\\\"instructions\\\":\\\"A graph is a set of nodes along with a set of edges connecting the nodes.\\\\n\\\\n![Graph Example](https://edabit-challenges.s3.amazonaws.com/adjacent_nodes_1+.png)\\\\n\\\\nGraphs can be directed or undirected. In a directed graph, each edge has a direction whereas, in an undirected graph, edges do not have direction. The graph above is an undirected graph.\\\\n\\\\nTwo nodes in a graph are adjacent if there is an edge between them. In the above example, nodes 0 and 1 are adjacent, but 0 and 2 are not adjacent.\\\\n\\\\nWe can encode graphs using an adjacency matrix. An adjacency matrix for a graph with \\\\\\\"n\\\\\\\" nodes is an \\\\\\\"n","thisId":"1266","channelHost":"edabit.com","id":"1266","opcode":"1","channelId":"2","timestamp":"1652648872173"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"194\\\"]}\"]","thisId":"1267","channelHost":"edabit.com","id":"1267","opcode":"1","channelId":"2","timestamp":"1652648872274"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"15965","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"194\\\",\\\"result\\\":{\\\"_id\\\":\\\"MwYW3sRdZxno5hXAF\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static int countOnes(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.0904872389791183,\\\"familyId\\\":\\\"MLejLm4swLE8McvzB\\\",\\\"instructions\\\":\\\"Count the amount of ones in the *binary representation* of an integer. For example, since 12 is _1100_ in binary, the return value should be `2`.\\\\n\\\\n### Examples\\\\n```\\\\ncountOnes(0) ➞ 0\\\\n\\\\ncountOnes(100) ➞ 3\\\\n\\\\ncountOnes(999) ➞ 8\\\\n```\\\\n\\\\n### Notes\\\\nThe input will always be a valid integer (number).\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(2, Program.countOnes(12));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(0, Program.countOnes(0));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test3() {\\\\n    assertEquals(3, Program","thisId":"1268","channelHost":"edabit.com","id":"1268","opcode":"1","channelId":"2","timestamp":"1652648872278"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"195\\\"]}\"]","thisId":"1269","channelHost":"edabit.com","id":"1269","opcode":"1","channelId":"2","timestamp":"1652648872357"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"31062","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"195\\\",\\\"result\\\":{\\\"_id\\\":\\\"EaWY5d2pYBckrkAnS\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean doubleLetters(String word) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.091182364729459,\\\"familyId\\\":\\\"imkKsm92MKYQdMH2c\\\",\\\"instructions\\\":\\\"Create a function that takes a word and returns `true` if the word has two consecutive identical letters.\\\\n\\\\n### Examples\\\\n```\\\\ndoubleLetters(\\\\\\\"loop\\\\\\\") ➞ true\\\\n\\\\ndoubleLetters(\\\\\\\"yummy\\\\\\\") ➞ true\\\\n\\\\ndoubleLetters(\\\\\\\"orange\\\\\\\") ➞ false\\\\n\\\\ndoubleLetters(\\\\\\\"munchkin\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertEquals(true, Challenge.doubleLetters(\\\\\\\"loop\\\\\\\"));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test \\\\n\\\\tpublic void test2() {\\\\n\\\\t\\\\tassertEquals(true, Challenge.doubleLetters(\\\\\\\"meeting\\\\\\\"));\\\\n\\\\t}\\\\n\\\\t\\\\n\\","thisId":"1270","channelHost":"edabit.com","id":"1270","opcode":"1","channelId":"2","timestamp":"1652648872359"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"196\\\"]}\"]","thisId":"1271","channelHost":"edabit.com","id":"1271","opcode":"1","channelId":"2","timestamp":"1652648872463"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"23026","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"196\\\",\\\"result\\\":{\\\"_id\\\":\\\"zFccarRuia5zq4rhP\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String sayHelloBye(String name, int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.0918918918918918,\\\"familyId\\\":\\\"rtZv8cqwDFdg3NscG\\\",\\\"instructions\\\":\\\"Write a function that takes a string `name` and a number `num` (either 0 or 1) and return \\\\\\\"Hello\\\\\\\" + `name` if  `num` is 1, otherwise return \\\\\\\"Bye\\\\\\\" + `name`.\\\\n\\\\n### Examples\\\\n```\\\\nsayHelloBye(\\\\\\\"alon\\\\\\\", 1) ➞ \\\\\\\"Hello Alon\\\\\\\"\\\\n\\\\nsayHelloBye(\\\\\\\"Tomi\\\\\\\", 0) ➞ \\\\\\\"Bye Tomi\\\\\\\"\\\\n\\\\nsayHelloBye(\\\\\\\"jose\\\\\\\", 0) ➞ \\\\\\\"Bye Jose\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nThe name you return must be capitalized.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"Hello Jose\\\\\\\", Challenge.sayHelloBye(\\\\\\\"jose\\\\\\\", 1));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public ","thisId":"1272","channelHost":"edabit.com","id":"1272","opcode":"1","channelId":"2","timestamp":"1652648872468"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"197\\\"]}\"]","thisId":"1273","channelHost":"edabit.com","id":"1273","opcode":"1","channelId":"2","timestamp":"1652648872586"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"10474","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"197\\\",\\\"result\\\":{\\\"_id\\\":\\\"paaguQWznz2cPNCiA\\\",\\\"author\\\":\\\"bangyen\\\",\\\"authorId\\\":\\\"yv7c4H2jimSKHEjtG\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static String intOrString(Object var) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.0916030534351144,\\\"quality\\\":4.653846153846154,\\\"familyId\\\":\\\"weRKdafF4epkqEuHH\\\",\\\"instructions\\\":\\\"Create a function that checks if the argument is an integer or a string. Return `\\\\\\\"int\\\\\\\"` if it's an integer and `\\\\\\\"str\\\\\\\"` if it's a string.\\\\n\\\\n### Examples\\\\n```\\\\nintOrString(8) ➞ \\\\\\\"int\\\\\\\"\\\\n\\\\nintOrString(\\\\\\\"Hello\\\\\\\") ➞ \\\\\\\"str\\\\\\\"\\\\n\\\\nintOrString(9843532) ➞ \\\\\\\"int\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nInput will either be an integer or a string.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ProgramTest {\\\\n\\\\t@Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertEquals(\\\\\\\"int\\\\\\\", Program.intOrString(1));\\\\n\\\\t}\\\\n\\\\t@Test\\\\n\\\\tpublic void test2() {\\\\n\\\\t\\\\tassertEquals(\\\\\\\"st","thisId":"1274","channelHost":"edabit.com","id":"1274","opcode":"1","channelId":"2","timestamp":"1652648872599"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"23","payloadFragment":"a[\"{\\\"msg\\\":\\\"ping\\\"}\"]","thisId":"1275","channelHost":"edabit.com","id":"1275","opcode":"1","channelId":"2","timestamp":"1652648872603"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"22","payloadFragment":"[\"{\\\"msg\\\":\\\"pong\\\"}\"]","thisId":"1276","channelHost":"edabit.com","id":"1276","opcode":"1","channelId":"2","timestamp":"1652648872607"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"201\\\"]}\"]","thisId":"1277","channelHost":"edabit.com","id":"1277","opcode":"1","channelId":"2","timestamp":"1652648872702"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"16456","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"201\\\",\\\"result\\\":{\\\"_id\\\":\\\"pKmR5HRabYPkdGunz\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static String[] capMe(String[] s) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.0934579439252337,\\\"familyId\\\":\\\"TPdYfQvn2wS3bBMK2\\\",\\\"instructions\\\":\\\"Create a method that takes an array of names and returns an array where only the first letter of each name is capitalized.\\\\n\\\\n### Examples\\\\n```\\\\ncapMe([\\\\\\\"mavis\\\\\\\", \\\\\\\"senaida\\\\\\\", \\\\\\\"letty\\\\\\\"]) ➞ [\\\\\\\"Mavis\\\\\\\", \\\\\\\"Senaida\\\\\\\", \\\\\\\"Letty\\\\\\\"]\\\\n\\\\ncapMe([\\\\\\\"samuel\\\\\\\", \\\\\\\"MABELLE\\\\\\\", \\\\\\\"letitia\\\\\\\", \\\\\\\"meridith\\\\\\\"]) ➞ [\\\\\\\"Samuel\\\\\\\", \\\\\\\"Mabelle\\\\\\\", \\\\\\\"Letitia\\\\\\\", \\\\\\\"Meridith\\\\\\\"]\\\\n\\\\ncapMe([\\\\\\\"Slyvia\\\\\\\", \\\\\\\"Kristal\\\\\\\", \\\\\\\"Sharilyn\\\\\\\", \\\\\\\"Calista\\\\\\\"]) ➞ [\\\\\\\"Slyvia\\\\\\\", \\\\\\\"Kristal\\\\\\\", \\\\\\\"Sharilyn\\\\\\\", \\\\\\\"Calista\\\\\\\"]\\\\n```\\\\n\\\\n### Notes\\\\n- Don't change the order of the original array.\\\\n- Notice in the second example above, \\\\\\\"MAB","thisId":"1278","channelHost":"edabit.com","id":"1278","opcode":"1","channelId":"2","timestamp":"1652648872710"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"199\\\"]}\"]","thisId":"1279","channelHost":"edabit.com","id":"1279","opcode":"1","channelId":"2","timestamp":"1652648872822"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"22201","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"199\\\",\\\"result\\\":{\\\"_id\\\":\\\"ffhxMdssQfq5e9NkE\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Spotlight {\\\\n\\\\tpublic static int spotlightSum(int n) {\\\\t\\\\n\\\\t\\\\t\\\\n\\\\t} \\\\n}\\\",\\\"difficulty\\\":1.096514745308311,\\\"familyId\\\":\\\"gZjv2Qjk8HRTLrroP\\\",\\\"instructions\\\":\\\"Given a 10x10 grid of numbers 1-100, return the **Spotlight Sum**, given a number `n`. The spotlight sum can be defined as the total of the 8 numbers immediately surrounding the number `n` on the grid, including `n` in the total.\\\\n\\\\n### Worked Example\\\\n```\\\\n[\\\\n  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\\\\n  [11, 12, 13, 14, 15, 16, 17, 18, 19, 20],\\\\n  [21, 22, 23, 24, 25, 26, 27, 28, 29, 30],\\\\n  [31, 32, 33, 34, 35, 36, 37, 38, 39, 40],\\\\n  [41, 42, 43, 44, 45, 46, 47, 48, 49, 50],\\\\n  [51, 52, 53, 54, 55, 56, 57, 58, 59, 60],\\\\n  [61, 62, 63, 64, 65, 66, 67, 68, 69, 70],\\\\n  [71, 72, 73, 74, 75, 76, 77, 78, 79, 80],\\\\n  [81, 82, 83, 84, 85, 86, 87, 88, 89, 90],\\\\n  [91, 92, 93, 94","thisId":"1280","channelHost":"edabit.com","id":"1280","opcode":"1","channelId":"2","timestamp":"1652648872827"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"200\\\"]}\"]","thisId":"1281","channelHost":"edabit.com","id":"1281","opcode":"1","channelId":"2","timestamp":"1652648872940"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"27026","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"200\\\",\\\"result\\\":{\\\"_id\\\":\\\"yk7GqGcCpFgQrk8fH\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean isAvgWhole(int[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.0941043083900226,\\\"familyId\\\":\\\"Kzxp73dN6cRtbgvnq\\\",\\\"instructions\\\":\\\"Create a function that takes an array as an argument and returns `true` or `false` depending on whether the average of all elements in the array is a whole number or not.\\\\n\\\\n### Examples\\\\n```\\\\nisAvgWhole([1, 3]) ➞ true\\\\n\\\\nisAvgWhole([1, 2, 3, 4]) ➞ false\\\\n\\\\nisAvgWhole([1, 5, 6]) ➞ true\\\\n\\\\nisAvgWhole([1, 1, 1]) ➞ true\\\\n\\\\nisAvgWhole([9, 2, 2, 5]) ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertThat(Challenge.isAvgWhole(new int[]{3, 5, 9}), is(false));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test \\\\","thisId":"1282","channelHost":"edabit.com","id":"1282","opcode":"1","channelId":"2","timestamp":"1652648872944"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"198\\\"]}\"]","thisId":"1283","channelHost":"edabit.com","id":"1283","opcode":"1","channelId":"2","timestamp":"1652648873047"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8062","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"198\\\",\\\"result\\\":{\\\"_id\\\":\\\"tQ26d2JJkxpjszfsk\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class ArrayItems {\\\\n  public static boolean matchLastItem(String[] t) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.1,\\\"familyId\\\":\\\"ytrhfpe2v2HAaFnAT\\\",\\\"instructions\\\":\\\"Create a function that takes an array of items and checks if the last item matches the rest of the array concatenated together.\\\\n\\\\n### Examples\\\\n```\\\\nmatchLastItem([\\\\\\\"i\\\\\\\", \\\\\\\"love\\\\\\\", \\\\\\\"tesh\\\\\\\", \\\\\\\"ilovetesh\\\\\\\"]) ➞ true\\\\n// The last item is the rest joined.\\\\n * \\\\nmatchLastItem([\\\\\\\"i\\\\\\\", \\\\\\\"am\\\\\\\", \\\\\\\"into\\\\\\\", \\\\\\\"her\\\\\\\", \\\\\\\"world\\\\\\\", \\\\\\\"iamintoherworld\\\\\\\"]) ➞ true\\\\n// The last item is the rest joined.\\\\n\\\\nmatchLastItem([\\\\\\\"1\\\\\\\", \\\\\\\"1\\\\\\\", \\\\\\\"1\\\\\\\", \\\\\\\"11\\\\\\\"]) ➞ false\\\\n// The last item should be \\\\\\\"111\\\\\\\".\\\\n\\\\nmatchLastItem([\\\\\\\"12\\\\\\\", \\\\\\\"13\\\\\\\", \\\\\\\"17\\\\\\\", \\\\\\\"19\\\\\\\", \\\\\\\"20\\\\\\\", \\\\\\\"40\\\\\\\", \\\\\\\"121317192040\\\\\\\"]) ➞ true\\\\n```\\\\n\\\\n### Notes\\\\nTh","thisId":"1284","channelHost":"edabit.com","id":"1284","opcode":"1","channelId":"2","timestamp":"1652648873052"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"202\\\"]}\"]","thisId":"1285","channelHost":"edabit.com","id":"1285","opcode":"1","channelId":"2","timestamp":"1652648873172"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"11725","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"202\\\",\\\"result\\\":{\\\"_id\\\":\\\"kQZH2EDsn7LYvXk9S\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int getDecimalPlaces(String num) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.0911854103343466,\\\"familyId\\\":\\\"EYg7tWtWhxe2M3YXu\\\",\\\"instructions\\\":\\\"Create a function that returns the number of **decimal places** a number (given as a string) has. Any zeros after the decimal point count towards the number of decimal places.\\\\n\\\\n### Examples\\\\n```\\\\ngetDecimalPlaces(\\\\\\\"43.20\\\\\\\") ➞ 2\\\\n\\\\ngetDecimalPlaces(\\\\\\\"400\\\\\\\") ➞ 0\\\\n\\\\ngetDecimalPlaces(\\\\\\\"3.1\\\\\\\") ➞ 1\\\\n```\\\\n\\\\n### Notes\\\\nReturn `0` if the number doesn't have any decimal places (see example #2).\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(2, Challenge.getDecimalPlaces(\\\\\\\"3.22\\\\\\\"));\\\\n  }\\\\n\\\\n\\\\t@Test\\\\n  public void tes","thisId":"1286","channelHost":"edabit.com","id":"1286","opcode":"1","channelId":"2","timestamp":"1652648873175"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"203\\\"]}\"]","thisId":"1287","channelHost":"edabit.com","id":"1287","opcode":"1","channelId":"2","timestamp":"1652648873286"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"16365","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"203\\\",\\\"result\\\":{\\\"_id\\\":\\\"D7PZ7rcKGRiCvcm7C\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean canAlternate(String str) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.0936170212765957,\\\"familyId\\\":\\\"LLBjjKvRJggEECTAT\\\",\\\"instructions\\\":\\\"Write a function that returns `true` if the binary string can be rearranged to form a string of alternating `0`s and `1`s.\\\\n\\\\n### Examples\\\\n```\\\\ncanAlternate(\\\\\\\"0001111\\\\\\\") ➞ true\\\\n// Can make: \\\\\\\"1010101\\\\\\\"\\\\n\\\\ncanAlternate(\\\\\\\"01001\\\\\\\") ➞ true\\\\n// Can make: \\\\\\\"01010\\\\\\\"\\\\n\\\\ncanAlternate(\\\\\\\"010001\\\\\\\") ➞ false\\\\n\\\\ncanAlternate(\\\\\\\"1111\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\n- No substring of the output may contain more than one consecutive repeating character (e.g. `00` or `11` are not allowed).\\\\n- Return `false` if a string only contains `0`s or only contains `1`s.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class Cha","thisId":"1288","channelHost":"edabit.com","id":"1288","opcode":"1","channelId":"2","timestamp":"1652648873290"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"204\\\"]}\"]","thisId":"1289","channelHost":"edabit.com","id":"1289","opcode":"1","channelId":"2","timestamp":"1652648873513"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"16101","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"204\\\",\\\"result\\\":{\\\"_id\\\":\\\"P4sy69B7cqggNmtmm\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean sameAscii(String a, String b) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.0966292134831461,\\\"familyId\\\":\\\"JtLRiaGEydCuqzto5\\\",\\\"instructions\\\":\\\"Return `true` if the sum of ASCII values of the first string is same as the sum of ASCII values of the second string, otherwise return `false`.\\\\n\\\\n### Examples\\\\n```\\\\nsameAscii(\\\\\\\"a\\\\\\\", \\\\\\\"a\\\\\\\") ➞ true\\\\n\\\\nsameAscii(\\\\\\\"AA\\\\\\\", \\\\\\\"B@\\\\\\\") ➞ true\\\\n\\\\nsameAscii(\\\\\\\"EdAbIt\\\\\\\", \\\\\\\"EDABIT\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nIf you need some help with ASCII codes, check the **Resources** tab for an image of all ASCII codes used in this challenge.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(true, Challenge.sameAscii(\\\\\\\"a\\\\\\\", \\\\\\\"a\\\\\\\"));\\\\n  }","thisId":"1290","channelHost":"edabit.com","id":"1290","opcode":"1","channelId":"2","timestamp":"1652648873517"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"205\\\"]}\"]","thisId":"1291","channelHost":"edabit.com","id":"1291","opcode":"1","channelId":"2","timestamp":"1652648873694"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"23733","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"205\\\",\\\"result\\\":{\\\"_id\\\":\\\"J4Yop3GjeZELWeoqT\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static double[] minMax(double[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.0958333333333334,\\\"familyId\\\":\\\"z4uTFmegcLYf6ozJJ\\\",\\\"instructions\\\":\\\"Create a function that takes an array of numbers and return both the minimum and maximum numbers, in that order.\\\\n\\\\n### Examples\\\\n```\\\\nminMax([1, 2, 3, 4, 5]) ➞ [1, 5]\\\\n\\\\nminMax([2334454, 5]) ➞ [5, 2334454]\\\\n\\\\nminMax([1]) ➞ [1, 1]\\\\n```\\\\n\\\\n### Notes\\\\nAll test arrays will have at least one element and are valid.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertThat(Challenge.minMax(new double[]{14, 35, 6, 1, 34, 54}), is(new double[]{1, 54}));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test \\\\n\\\\tpublic void test2() {\\\\n\\\\t\\\\tassertThat","thisId":"1292","channelHost":"edabit.com","id":"1292","opcode":"1","channelId":"2","timestamp":"1652648873701"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"206\\\"]}\"]","thisId":"1293","channelHost":"edabit.com","id":"1293","opcode":"1","channelId":"2","timestamp":"1652648873875"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"24078","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"206\\\",\\\"result\\\":{\\\"_id\\\":\\\"iW7rtor54mbFQ2RrZ\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String replaceVowels(String str, char ch) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.0980392156862746,\\\"familyId\\\":\\\"zq6zM78AZoa9RsY7L\\\",\\\"instructions\\\":\\\"Create a function that replaces all the vowels in a string with a specified character.\\\\n\\\\n### Examples\\\\n```\\\\nreplaceVowels(\\\\\\\"the aardvark\\\\\\\", '#') ➞ \\\\\\\"th# ##rdv#rk\\\\\\\"\\\\n\\\\nreplaceVowels(\\\\\\\"minnie mouse\\\\\\\", '?') ➞ \\\\\\\"m?nn?? m??s?\\\\\\\"\\\\n\\\\nreplaceVowels(\\\\\\\"shakespeare\\\\\\\", '*') ➞ \\\\\\\"sh*k*sp**r*\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nAll characters will be in lower case.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"th# ##rdv#rk\\\\\\\", Challenge.replaceVowels(\\\\\\\"the aardvark\\\\\\\", '#'));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    ","thisId":"1294","channelHost":"edabit.com","id":"1294","opcode":"1","channelId":"2","timestamp":"1652648873879"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"207\\\"]}\"]","thisId":"1295","channelHost":"edabit.com","id":"1295","opcode":"1","channelId":"2","timestamp":"1652648874060"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"18137","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"207\\\",\\\"result\\\":{\\\"_id\\\":\\\"NrMGhrarTfpYSbr84\\\",\\\"archived\\\":false,\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"class Challenge {\\\\n  public static String getMiddle(String word) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.0985915492957747,\\\"familyId\\\":\\\"JvuDXcRoTK4ZdCCPS\\\",\\\"instructions\\\":\\\"Create a function that takes a string and returns the middle character(s). If the word's length is odd, return the middle character. If the word's length is even, return the middle two characters.\\\\n\\\\n### Examples\\\\n```\\\\ngetMiddle(\\\\\\\"test\\\\\\\") ➞ \\\\\\\"es\\\\\\\"\\\\n\\\\ngetMiddle(\\\\\\\"testing\\\\\\\") ➞ \\\\\\\"t\\\\\\\"\\\\n\\\\ngetMiddle(\\\\\\\"middle\\\\\\\") ➞ \\\\\\\"dd\\\\\\\"\\\\n\\\\ngetMiddle(\\\\\\\"A\\\\\\\") ➞ \\\\\\\"A\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nAll test cases contain a single word (as a string).\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\nimport java.util.Random;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n\\\\t\\\\tassertEquals(\\\\\\\"es\\\\\\\", Challeng","thisId":"1296","channelHost":"edabit.com","id":"1296","opcode":"1","channelId":"2","timestamp":"1652648874066"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"208\\\"]}\"]","thisId":"1297","channelHost":"edabit.com","id":"1297","opcode":"1","channelId":"2","timestamp":"1652648874178"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"25202","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"208\\\",\\\"result\\\":{\\\"_id\\\":\\\"s8RHRY9hfmvYMuaeC\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int[] hashPlusCount(String s) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.0992268041237114,\\\"familyId\\\":\\\"uiDD6ziXo9Lx9dzPz\\\",\\\"instructions\\\":\\\"Create a function that returns the number of hashes and pluses in a string.\\\\n\\\\n### Examples\\\\n```\\\\nhashPlusCount(\\\\\\\"###+\\\\\\\") ➞ [3, 1]\\\\n\\\\nhashPlusCount(\\\\\\\"##+++#\\\\\\\") ➞ [3, 3]\\\\n\\\\nhashPlusCount(\\\\\\\"#+++#+#++#\\\\\\\") ➞ [4, 6]\\\\n\\\\nhashPlusCount(\\\\\\\"\\\\\\\") ➞ [0, 0]\\\\n```\\\\n\\\\n### Notes\\\\n- Return `[0, 0]` for an empty string.\\\\n- Return in the order of `[hashes, pluses]`.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\n import org.junit.Test;\\\\n import static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengesTests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertThat(Challenge.hashPlusCount(\\\\\\\"####\\\\\\\"), is(new int[]{4, 0}));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test \\\\n\\\\tpu","thisId":"1298","channelHost":"edabit.com","id":"1298","opcode":"1","channelId":"2","timestamp":"1652648874186"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"209\\\"]}\"]","thisId":"1299","channelHost":"edabit.com","id":"1299","opcode":"1","channelId":"2","timestamp":"1652648874311"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"17517","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"209\\\",\\\"result\\\":{\\\"_id\\\":\\\"TM5f33Mpu52m2jcat\\\",\\\"author\\\":\\\"Nguyen Phan Dang\\\",\\\"authorId\\\":\\\"YLqdr7bYjwew2KM4N\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int maxTotal(int[] nums) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1,\\\"familyId\\\":\\\"9zWRLcYhQa2T5AWB5\\\",\\\"instructions\\\":\\\"Given an array of 10 numbers, return the **maximum possible total** made by summing just  **5 of the 10 numbers**.\\\\n\\\\n### Examples\\\\n```\\\\nmaxTotal([1, 1, 0, 1, 3, 10, 10, 10, 10, 1]) ➞ 43\\\\n\\\\nmaxTotal([0, 0, 0, 0, 0, 0, 0, 0, 0, 100]) ➞ 100\\\\n\\\\nmaxTotal([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) ➞ 40\\\\n```\\\\n\\\\n### Notes\\\\nYou can select any 5 numbers from the given array to form maximum possible total.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\n    @Test\\\\n    public void test1() {\\\\n        assertThat(Challenge.ma","thisId":"1300","channelHost":"edabit.com","id":"1300","opcode":"1","channelId":"2","timestamp":"1652648874332"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"210\\\"]}\"]","thisId":"1301","channelHost":"edabit.com","id":"1301","opcode":"1","channelId":"2","timestamp":"1652648874434"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"21485","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"210\\\",\\\"result\\\":{\\\"_id\\\":\\\"YmeiRhzaiR3MCPBiT\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean isSpecialArray(int[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1,\\\"familyId\\\":\\\"XHgCA2LWtCb8eBGCu\\\",\\\"instructions\\\":\\\"An array is **special** if every **even index** contains an **even number** and every **odd index** contains an **odd number**. Create a function that returns `true` if an array is **special**, and `false` otherwise.\\\\n\\\\n### Examples\\\\n```\\\\nisSpecialArray([2, 7, 4, 9, 6, 1, 6, 3]) ➞ true\\\\n// Even indices: [2, 4, 6, 6]; Odd indices: [7, 9, 1, 3]\\\\n\\\\nisSpecialArray([2, 7, 9, 1, 6, 1, 6, 3]) ➞ false\\\\n// Index 2 has an odd number 9.\\\\n\\\\nisSpecialArray([2, 7, 8, 8, 6, 1, 6, 3]) ➞ false\\\\n// Index 3 has an even number 8.\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class Challe","thisId":"1302","channelHost":"edabit.com","id":"1302","opcode":"1","channelId":"2","timestamp":"1652648874451"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"211\\\"]}\"]","thisId":"1303","channelHost":"edabit.com","id":"1303","opcode":"1","channelId":"2","timestamp":"1652648874557"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"16478","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"211\\\",\\\"result\\\":{\\\"_id\\\":\\\"ryEdPW2eqyngyWayy\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String spaceMeOut(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1,\\\"familyId\\\":\\\"qcpqqkSvboWXECmDj\\\",\\\"instructions\\\":\\\"Create a function that takes a string and returns a string with spaces in between all of the characters.\\\\n\\\\n### Examples\\\\n```\\\\nspaceMeOut(\\\\\\\"space\\\\\\\") ➞ \\\\\\\"s p a c e\\\\\\\"\\\\n\\\\nspaceMeOut(\\\\\\\"far out\\\\\\\") ➞ \\\\\\\"f a r   o u t\\\\\\\"\\\\n\\\\nspaceMeOut(\\\\\\\"elongated musk\\\\\\\") ➞ \\\\\\\"e l o n g a t e d   m u s k\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nTreat a space as its own character (i.e. leave three spaces between words).\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"s p a c e\\\\\\\", Challenge.spaceMeOut(\\\\\\\"space\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {","thisId":"1304","channelHost":"edabit.com","id":"1304","opcode":"1","channelId":"2","timestamp":"1652648874562"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"212\\\"]}\"]","thisId":"1305","channelHost":"edabit.com","id":"1305","opcode":"1","channelId":"2","timestamp":"1652648874680"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"13814","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"212\\\",\\\"result\\\":{\\\"_id\\\":\\\"Xf7PqJnzukWe2WxqB\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class NextToLargest {\\\\n\\\\tpublic static int secondLargest(int[] num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\\n\\\\t\\\",\\\"difficulty\\\":1.1003460207612457,\\\"familyId\\\":\\\"WXZmZvWa89BxT9Kee\\\",\\\"instructions\\\":\\\"Write a function that takes an array of numbers and returns the **second largest** number.\\\\n\\\\n### Examples\\\\n```\\\\nsecondLargest([10, 40, 30, 20, 50]) ➞ 40\\\\n\\\\nsecondLargest([25, 143, 89, 13, 105]) ➞ 105\\\\n\\\\nsecondLargest([54, 23, 11, 17, 10]) ➞ 23\\\\n```\\\\n\\\\n### Notes\\\\nThere will be at least two numbers in the array.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"/** \\\\n========================================= \\\\nTestGen 2.1 for JUnit 4.13.0 \\\\t\\\\t\\\\nTest Case: NextToLargest::secondLargest \\\\nTimestamp: 10/17/2020 11:11:19 AM \\\\n----------------------------------------- \\\\n® DARKKO 2020 © \\\\n========================================= \\\\n\\\\n*","thisId":"1306","channelHost":"edabit.com","id":"1306","opcode":"1","channelId":"2","timestamp":"1652648874688"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"213\\\"]}\"]","thisId":"1307","channelHost":"edabit.com","id":"1307","opcode":"1","channelId":"2","timestamp":"1652648874848"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"24740","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"213\\\",\\\"result\\\":{\\\"_id\\\":\\\"HDk4PC9w6KPS3X25W\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String repeat(String str, int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1007371007371007,\\\"familyId\\\":\\\"gjCa2WTaqKH74PSDe\\\",\\\"instructions\\\":\\\"Create a function that repeats each character in a string **n** times.\\\\n\\\\n### Examples\\\\n```\\\\nrepeat(\\\\\\\"mice\\\\\\\", 5) ➞ \\\\\\\"mmmmmiiiiiccccceeeee\\\\\\\"\\\\n\\\\nrepeat(\\\\\\\"hello\\\\\\\", 3) ➞ \\\\\\\"hhheeellllllooo\\\\\\\"\\\\n\\\\nrepeat(\\\\\\\"stop\\\\\\\", 1) ➞ \\\\\\\"stop\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"mmmmmiiiiiccccceeeee\\\\\\\", Challenge.repeat(\\\\\\\"mice\\\\\\\", 5));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(\\\\\\\"hhheeellllllooo\\\\\\\", Challenge.repeat(\\\\\\\"hello\\\\\\\", 3));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void","thisId":"1308","channelHost":"edabit.com","id":"1308","opcode":"1","channelId":"2","timestamp":"1652648874856"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"214\\\"]}\"]","thisId":"1309","channelHost":"edabit.com","id":"1309","opcode":"1","channelId":"2","timestamp":"1652648874998"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7445","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"214\\\",\\\"result\\\":{\\\"_id\\\":\\\"2eWypgBrG9yerbjFd\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class GoneCorona {\\\\n\\\\tpublic static int endCorona(int recovers, int newCases, int activeCases) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1015625,\\\"familyId\\\":\\\"mvJ2wxCkFkebkXFfX\\\",\\\"instructions\\\":\\\"Given the number of people that recover per day `recovers`, the number of new cases per day `newCases`, and the number of currently active cases `activeCases`, write a function to calculate the number of **days** needed to reach zero active cases.\\\\n\\\\n### Examples\\\\n```\\\\nendCorona(4000, 2000, 77000) ➞ 39\\\\n\\\\nendCorona(3000, 2000, 50699) ➞ 51\\\\n\\\\nendCorona(30000, 25000, 390205) ➞ 79\\\\n```\\\\n\\\\n### Notes\\\\n- The number of people who recover per day `recovers` will always be greater than daily `newCases`.\\\\n- Be conservative and round up the number of days needed.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.","thisId":"1310","channelHost":"edabit.com","id":"1310","opcode":"1","channelId":"2","timestamp":"1652648875017"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"215\\\"]}\"]","thisId":"1311","channelHost":"edabit.com","id":"1311","opcode":"1","channelId":"2","timestamp":"1652648875198"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"18937","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"215\\\",\\\"result\\\":{\\\"_id\\\":\\\"CDuD3xGtWRhnFzAP2\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String joinPath(String portion1, String portion2) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1016949152542372,\\\"familyId\\\":\\\"ey5EwjaM9iRGMRGdm\\\",\\\"instructions\\\":\\\"Write a function that receives two portions of a path and joins them. The portions will be joined with the \\\\\\\"/\\\\\\\" separator. There could be only one separator and if it is not present it should be added.\\\\n\\\\n### Examples\\\\n```\\\\njoinPath(\\\\\\\"portion1\\\\\\\", \\\\\\\"portion2\\\\\\\") ➞ \\\\\\\"portion1/portion2\\\\\\\"\\\\n\\\\njoinPath(\\\\\\\"portion1/\\\\\\\", \\\\\\\"portion2\\\\\\\") ➞ \\\\\\\"portion1/portion2\\\\\\\"\\\\n\\\\njoinPath(\\\\\\\"portion1\\\\\\\", \\\\\\\"/portion2\\\\\\\") ➞ \\\\\\\"portion1/portion2\\\\\\\"\\\\n\\\\njoinPath(\\\\\\\"portion1/\\\\\\\", \\\\\\\"/portion2\\\\\\\") ➞ \\\\\\\"portion1/portion2\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nTry not to solve this challenge using only `if-else` conditions.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimp","thisId":"1312","channelHost":"edabit.com","id":"1312","opcode":"1","channelId":"2","timestamp":"1652648875205"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"217\\\"]}\"]","thisId":"1313","channelHost":"edabit.com","id":"1313","opcode":"1","channelId":"2","timestamp":"1652648875324"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8593","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"217\\\",\\\"result\\\":{\\\"_id\\\":\\\"hgHMhpJjyFxYJMMXp\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class DirectoryPath {\\\\n  public static String getFilename(String path) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.1006711409395973,\\\"familyId\\\":\\\"ZSSASiB4nnarhT942\\\",\\\"instructions\\\":\\\"Create a function that returns the selected **filename** from a path including the file **extension**.\\\\n\\\\n### Examples\\\\n```\\\\ngetFilename(\\\\\\\"C:/Projects/pil_tests/ascii/edabit.txt\\\\\\\") ➞ \\\\\\\"edabit.txt\\\\\\\"\\\\n\\\\ngetFilename(\\\\\\\"C:/Users/johnsmith/Music/Beethoven_5.mp3\\\\\\\") ➞ \\\\\\\"Beethoven_5.mp3\\\\\\\"\\\\n\\\\ngetFilename(\\\\\\\"ffprobe.exe\\\\\\\") ➞ \\\\\\\"ffprobe.exe\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Tests will include both absolute and relative paths.\\\\n- For simplicity, all paths will only include forward slashes.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"/** \\\\n--------------------------------------- \\\\nTestGen 2.1 for JUnit 4.13.0 \\\\t\\\\t\\\\nTest Case: Director","thisId":"1314","channelHost":"edabit.com","id":"1314","opcode":"1","channelId":"2","timestamp":"1652648875327"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"216\\\"]}\"]","thisId":"1315","channelHost":"edabit.com","id":"1315","opcode":"1","channelId":"2","timestamp":"1652648875448"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"9121","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"216\\\",\\\"result\\\":{\\\"_id\\\":\\\"M8ZEHjhwCDCjYeY3n\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int boxSeq(int step) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.1019607843137256,\\\"familyId\\\":\\\"2C4vnC8RQNafe75WB\\\",\\\"instructions\\\":\\\"Create a function that takes a number (step) as an argument and returns the amount of boxes in that step of the sequence.\\\\n\\\\n![Box Sequence Image](https://edabit-challenges.s3.amazonaws.com/algebra_sequence_boxes.png \\\\\\\"Box Sequence\\\\\\\")\\\\n\\\\n- Step 0: Start with 0\\\\n- Step 1: Add 3\\\\n- Step 2: Subtract 1\\\\n- Repeat Step 1 & 2 ...\\\\n\\\\n### Examples\\\\n```\\\\nboxSeq(0) ➞ 0\\\\n\\\\nboxSeq(1) ➞ 3\\\\n\\\\nboxSeq(2) ➞ 2\\\\n```\\\\n\\\\n### Notes\\\\n- Step (the input) is always a positive integer (or zero).\\\\n- For an odd step add 3, for an even step subtract 1.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1()","thisId":"1316","channelHost":"edabit.com","id":"1316","opcode":"1","channelId":"2","timestamp":"1652648875452"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"218\\\"]}\"]","thisId":"1317","channelHost":"edabit.com","id":"1317","opcode":"1","channelId":"2","timestamp":"1652648875572"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"12786","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"218\\\",\\\"result\\\":{\\\"_id\\\":\\\"jnrPtFbstb2cB3Raj\\\",\\\"author\\\":\\\"Nguyen Phan Dang\\\",\\\"authorId\\\":\\\"YLqdr7bYjwew2KM4N\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static boolean isPrefix(String word, String prefix) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n\\\\n\\\\tpublic static boolean isSuffix(String word, String suffix) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1020408163265305,\\\"familyId\\\":\\\"vjgKD6RYxwr6Q6Nig\\\",\\\"instructions\\\":\\\"Create two functions: `isPrefix(word, prefix-)` and `isSuffix(word, -suffix)`.\\\\n\\\\n1. `isPrefix` should return `true` if it begins with the **prefix** argument.\\\\n2.  `isSuffix` should return `true` if it ends with the **suffix** argument.\\\\n\\\\nOtherwise return `false`.\\\\n\\\\n### Examples\\\\n```\\\\nisPrefix(\\\\\\\"automation\\\\\\\", \\\\\\\"auto-\\\\\\\") ➞ true\\\\n\\\\nisSuffix(\\\\\\\"arachnophobia\\\\\\\", \\\\\\\"-phobia\\\\\\\") ➞ true\\\\n\\\\nisPrefix(\\\\\\\"retrospect\\\\\\\", \\\\\\\"sub-\\\\\\\") ➞ false\\\\n\\\\nisSuffix(\\\\\\\"vocation\\\\\\\", \\\\\\\"-logy\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nThe `prefix` and `suffix` arguments ha","thisId":"1318","channelHost":"edabit.com","id":"1318","opcode":"1","channelId":"2","timestamp":"1652648875582"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"219\\\"]}\"]","thisId":"1319","channelHost":"edabit.com","id":"1319","opcode":"1","channelId":"2","timestamp":"1652648875691"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"15395","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"219\\\",\\\"result\\\":{\\\"_id\\\":\\\"MsJzAHPmmmcwF4iCr\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int firstVowel(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1022222222222222,\\\"familyId\\\":\\\"pjaMjJNNNQJhxnWPz\\\",\\\"instructions\\\":\\\"Create a function that returns the index of the first vowel in a string.\\\\n\\\\n### Examples\\\\n```\\\\nfirstVowel(\\\\\\\"apple\\\\\\\") ➞ 0\\\\n\\\\nfirstVowel(\\\\\\\"hello\\\\\\\") ➞ 1\\\\n\\\\nfirstVowel(\\\\\\\"STRAWBERRY\\\\\\\") ➞ 3\\\\n\\\\nfirstVowel(\\\\\\\"pInEaPPLe\\\\\\\") ➞ 1\\\\n```\\\\n\\\\n### Notes\\\\n- Input will be single words.\\\\n- Characters in words will be upper or lower case.\\\\n- \\\\\\\"y\\\\\\\" is not considered a vowel.\\\\n- Input always contains a vowel.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertEquals(1, Challenge.firstVowel(\\\\\\\"hello\\\\\\\"));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test \\\\n\\\\tpublic void test2(","thisId":"1320","channelHost":"edabit.com","id":"1320","opcode":"1","channelId":"2","timestamp":"1652648875700"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"220\\\"]}\"]","thisId":"1321","channelHost":"edabit.com","id":"1321","opcode":"1","channelId":"2","timestamp":"1652648875808"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5085","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"220\\\",\\\"result\\\":{\\\"_id\\\":\\\"kzALnF5nT9YCbGMMm\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class NotANumber {\\\\n  public static int findNaN(double[] n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.1012658227848102,\\\"familyId\\\":\\\"8RCCeRTjKY4WGEn6L\\\",\\\"instructions\\\":\\\"Create a function to find `NaN` in an array of numbers. The return value should be the index where `NaN` is found. If `NaN` is not found in the array, then return `-1`.\\\\n\\\\n### Examples\\\\n```\\\\nfindNaN([1, 2, NaN]) ➞ 2\\\\n\\\\nfindNaN([NaN, 1, 2, 3, 4]) ➞ 0\\\\n\\\\nfindNaN([0, 1, 2, 3, 4]) ➞ -1\\\\n```\\\\n\\\\n### Notes\\\\n`NaN` will occur in the input array only once.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals; \\\\nimport org.junit.Test; \\\\n\\\\npublic class NotANumberTest {\\\\n\\\\t@Test\\\\n\\\\tpublic void test01() { \\\\n\\\\t\\\\tassertEquals(2, NotANumber.findNaN(new double[] {1, 2, Double.NaN}));\\\\n\\\\t}\\\\n\\\\n\\\\t@Test\\\\n\\\\tpublic void ","thisId":"1322","channelHost":"edabit.com","id":"1322","opcode":"1","channelId":"2","timestamp":"1652648875811"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"221\\\"]}\"]","thisId":"1323","channelHost":"edabit.com","id":"1323","opcode":"1","channelId":"2","timestamp":"1652648875905"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"10010","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"221\\\",\\\"result\\\":{\\\"_id\\\":\\\"xkD7RBBDiWuDHTiXE\\\",\\\"author\\\":\\\"Nguyen Phan Dang\\\",\\\"authorId\\\":\\\"YLqdr7bYjwew2KM4N\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean canNest(int[] arr1, int[] arr2) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1062992125984252,\\\"familyId\\\":\\\"WGLGcwyzkxqBjw3W4\\\",\\\"instructions\\\":\\\"Create a function that returns `true` if the first array can be nested inside the second.\\\\n\\\\n`arr1` can be nested inside `arr2` if:\\\\n\\\\n1. `arr1`'s min is greater than `arr2`'s min.\\\\n2. `arr1`'s max is less than `arr2`'s max.\\\\n\\\\n### Examples\\\\n```\\\\ncanNest([1, 2, 3, 4], [0, 6]) ➞ true\\\\n\\\\ncanNest([3, 1], [4, 0]) ➞ true\\\\n\\\\ncanNest([9, 9, 8], [8, 9]) ➞ false\\\\n\\\\ncanNest([1, 2, 3, 4], [2, 3]) ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nNote the strict inequality (see example #3).\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\","thisId":"1324","channelHost":"edabit.com","id":"1324","opcode":"1","channelId":"2","timestamp":"1652648875908"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"222\\\"]}\"]","thisId":"1325","channelHost":"edabit.com","id":"1325","opcode":"1","channelId":"2","timestamp":"1652648876019"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"14529","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"222\\\",\\\"result\\\":{\\\"_id\\\":\\\"XsJnE47kiTt39t3da\\\",\\\"author\\\":\\\"Nguyen Phan Dang\\\",\\\"authorId\\\":\\\"YLqdr7bYjwew2KM4N\\\",\\\"code\\\":\\\"import java.util.Arrays;\\\\nimport java.util.stream.IntStream;\\\\n\\\\npublic class Program {\\\\t\\\\n\\\\tpublic static double getBudgets(Person[] persons) {\\\\n\\\\n\\\\t}\\\\n}\\\\t\\\\n\\\\nclass Person{\\\\n\\\\tprivate String name;\\\\n\\\\tprivate int age;\\\\n\\\\tprivate double budget;\\\\n\\\\t\\\\t\\\\n\\\\tpublic Person(String name, int age, double budget) {\\\\n\\\\t\\\\tsuper();\\\\n\\\\t\\\\tthis.name = name;\\\\n\\\\t\\\\tthis.age = age;\\\\n\\\\t\\\\tthis.budget = budget;\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t\\\\n\\\\tpublic String getName() {\\\\n\\\\t\\\\treturn name;\\\\n\\\\t}\\\\n\\\\tpublic void setName(String name) {\\\\n\\\\t\\\\tthis.name = name;\\\\n\\\\t}\\\\n\\\\tpublic int getAge() {\\\\n\\\\t\\\\treturn age;\\\\n\\\\t}\\\\n\\\\tpublic void setAge(int age) {\\\\n\\\\t\\\\tthis.age = age;\\\\n\\\\t}\\\\n\\\\tpublic double getBudget() {\\\\n\\\\t\\\\treturn budget;\\\\n\\\\t}\\\\n\\\\tpublic void setBudget(double budget) {\\\\n\\\\t\\\\tthis.budget = budget;\\\\n\\\\t}\\\\t\\\\n}\\\\n\\\\n\\\",\\\"difficul","thisId":"1326","channelHost":"edabit.com","id":"1326","opcode":"1","channelId":"2","timestamp":"1652648876024"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"224\\\"]}\"]","thisId":"1327","channelHost":"edabit.com","id":"1327","opcode":"1","channelId":"2","timestamp":"1652648876142"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"20230","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"224\\\",\\\"result\\\":{\\\"_id\\\":\\\"Jr7ueGQMEthBFYpB6\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean largestSwap(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1049180327868853,\\\"familyId\\\":\\\"BY3Rtjn4xigcKaLw2\\\",\\\"instructions\\\":\\\"Write a function that takes a **two-digit** number and determines if it's the largest of two possible digit swaps.\\\\n\\\\nTo illustrate:\\\\n```\\\\nlargestSwap(27) ➞ false\\\\n\\\\nlargestSwap(43) ➞ true\\\\n```\\\\n\\\\nIf **27** is our input, we should return `false` because swapping the digits gives us **72**, and **72 > 27**. On the other hand, swapping **43** gives us **34**, and **43 > 34**.\\\\n\\\\n### Examples\\\\n```\\\\nlargestSwap(14) ➞ false\\\\n\\\\nlargestSwap(53) ➞ true\\\\n\\\\nlargestSwap(99) ➞ true\\\\n```\\\\n\\\\n### Notes\\\\nNumbers with two identical digits (third example) should yield `true` (you can't do better).\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimp","thisId":"1328","channelHost":"edabit.com","id":"1328","opcode":"1","channelId":"2","timestamp":"1652648876146"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"225\\\"]}\"]","thisId":"1329","channelHost":"edabit.com","id":"1329","opcode":"1","channelId":"2","timestamp":"1652648876263"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"13134","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"225\\\",\\\"result\\\":{\\\"_id\\\":\\\"jwXx478haGbZpRCWQ\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int[] findEvenNums(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.105,\\\"familyId\\\":\\\"mm3x3C8MhAcndwWp9\\\",\\\"instructions\\\":\\\"Create a function that finds all even numbers from `1` to the given number.\\\\n\\\\n### Examples\\\\n```\\\\nfindEvenNums(8) ➞ [2, 4, 6, 8]\\\\n\\\\nfindEvenNums(4) ➞ [2, 4]\\\\n\\\\nfindEvenNums(2) ➞ [2]\\\\n```\\\\n\\\\n### Notes\\\\nIf there are no even numbers, return an empty array.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertThat(Challenge.findEvenNums(4), is(new int[]{2, 4}));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test \\\\n\\\\tpublic void test2() {\\\\n\\\\t\\\\tassertThat(Challenge.findEvenNums(8), is(new int[]{2, 4 ,6, 8}));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test \\\\n\\\\tpublic void test3(","thisId":"1330","channelHost":"edabit.com","id":"1330","opcode":"1","channelId":"2","timestamp":"1652648876268"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"226\\\"]}\"]","thisId":"1331","channelHost":"edabit.com","id":"1331","opcode":"1","channelId":"2","timestamp":"1652648876375"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"17733","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"226\\\",\\\"result\\\":{\\\"_id\\\":\\\"BZzAm9KXuB993p35r\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String indexShuffle(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1054545454545455,\\\"familyId\\\":\\\"pbDjmztiMTyg4NhgW\\\",\\\"instructions\\\":\\\"Write a function  that takes all even-indexed characters and odd-indexed characters from a string and concatenates them together.\\\\n\\\\nTo illustrate:\\\\n```\\\\nindexShuffle(\\\\\\\"abcd\\\\\\\") ➞ \\\\\\\"acbd\\\\\\\"\\\\n// \\\\\\\"ac\\\\\\\" (even-indexed) + \\\\\\\"bd\\\\\\\" (odd-indexed)\\\\n```\\\\n\\\\n### Examples\\\\n```\\\\nindexShuffle(\\\\\\\"abcdefg\\\\\\\") ➞ \\\\\\\"acegbdf\\\\\\\"\\\\n\\\\nindexShuffle(\\\\\\\"holiday\\\\\\\") ➞ \\\\\\\"hldyoia\\\\\\\"\\\\n\\\\nindexShuffle(\\\\\\\"maybe\\\\\\\") ➞ \\\\\\\"myeab\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n0 should be treated as an even number.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertEquals(\\\\\\\"ace","thisId":"1332","channelHost":"edabit.com","id":"1332","opcode":"1","channelId":"2","timestamp":"1652648876380"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"223\\\"]}\"]","thisId":"1333","channelHost":"edabit.com","id":"1333","opcode":"1","channelId":"2","timestamp":"1652648876483"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7192","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"223\\\",\\\"result\\\":{\\\"_id\\\":\\\"8s2jBHWKXCrT5oQ63\\\",\\\"author\\\":\\\"BijogFc24\\\",\\\"authorId\\\":\\\"Nb6LYPoQP6KJZt8mz\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int collatzConjecture(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.103225806451613,\\\"familyId\\\":\\\"Q69BXxFufp2nhLK5T\\\",\\\"instructions\\\":\\\"Consider the following operation on an arbitrary positive integer:\\\\n- If `n` is even -> `n / 2`\\\\n- If `n` is odd -> `n * 3 + 1`\\\\n\\\\nCreate a function to repeatedly evaluate these operations, until reaching 1. Return the number of steps it took.\\\\n\\\\nSee the following example, using `10` as the input, with 6 steps:\\\\n\\\\n1. 10 is even - 10 / 2 = 5\\\\n2. 5 is odd - 5 * 3 + 1 = 16\\\\n3. 16 is even - 16 / 2 = 8\\\\n4. 8 is even - 8 / 2 = 4\\\\n5. 4 is even - 4 / 2 = 2\\\\n6. 2 is even - 2 / 2 = 1 -> Reached 1, so return `6`\\\\n\\\\n### Examples\\\\n```\\\\ncollatzConjecture(2) ➞ 1\\\\n\\\\ncollatzConjecture(3) ➞ 7\\\\n\\\\ncollatzConjecture(10) ➞ 6\\\\n```\\\\n\\\\n### Notes\\\\nFor further information, check the","thisId":"1334","channelHost":"edabit.com","id":"1334","opcode":"1","channelId":"2","timestamp":"1652648876487"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"227\\\"]}\"]","thisId":"1335","channelHost":"edabit.com","id":"1335","opcode":"1","channelId":"2","timestamp":"1652648876608"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"17431","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"227\\\",\\\"result\\\":{\\\"_id\\\":\\\"zgBjnxQw9MHTBHLED\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int nthSmallest(int[] arr, int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1057692307692308,\\\"familyId\\\":\\\"WW2CRSdjkZjbn5dRh\\\",\\\"instructions\\\":\\\"Given an unsorted array, create a function that returns the **nth** smallest integer (the smallest integer is the **first smallest**, the second smallest integer is the **second smallest**, etc).\\\\n\\\\n### Examples\\\\n```\\\\nnthSmallest([1, 3, 5, 7], 1) ➞ 1\\\\n\\\\nnthSmallest([1, 3, 5, 7], 3) ➞ 5\\\\n\\\\nnthSmallest([1, 3, 5, 7], 5) ➞ -1\\\\n\\\\nnthSmallest([7, 3, 5, 1], 2) ➞ 3\\\\n```\\\\n\\\\n### Notes\\\\n- `n` will always be **>= 1**.\\\\n- Each number in the array will be distinct (there will be a clear ordering).\\\\n- Given an out of bounds parameter (e.g. an array is of size **k**), and you are asked to find the **m > k** smallest integer, return **-1**.\\\",\\\"lab\\\":\\\"import static org.hamcre","thisId":"1336","channelHost":"edabit.com","id":"1336","opcode":"1","channelId":"2","timestamp":"1652648876616"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"228\\\"]}\"]","thisId":"1337","channelHost":"edabit.com","id":"1337","opcode":"1","channelId":"2","timestamp":"1652648876720"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8645","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"228\\\",\\\"result\\\":{\\\"_id\\\":\\\"6gDTBRgZKpotCsgib\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean variableValid(String variable) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.1064814814814814,\\\"familyId\\\":\\\"gupkXD4LNyZoCBgN5\\\",\\\"instructions\\\":\\\"When creating variables, the variable name must **always start with a letter** and cannot contain spaces, though numbers and underscores are allowed to be contained in it also.\\\\n\\\\nCreate a function which returns `true` if a given variable name is valid, otherwise return `false`.\\\\n\\\\n### Examples\\\\n```\\\\nvariableValid(\\\\\\\"result\\\\\\\") ➞ true\\\\n\\\\nvariableValid(\\\\\\\"odd_nums\\\\\\\") ➞ true\\\\n\\\\nvariableValid(\\\\\\\"2TimesN\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\n- Inputs are given as strings.\\\\n- Variable names with spaces are not allowed.\\\\n- Although this question may seem like otherwise, you can't actually assign words with quotes around them as variables.\\\",\\\"isHidden\\\":false,\\\"lab\\\"","thisId":"1338","channelHost":"edabit.com","id":"1338","opcode":"1","channelId":"2","timestamp":"1652648876724"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"229\\\"]}\"]","thisId":"1339","channelHost":"edabit.com","id":"1339","opcode":"1","channelId":"2","timestamp":"1652648876833"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"12011","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"229\\\",\\\"result\\\":{\\\"_id\\\":\\\"H4smHFuL5wn58imFK\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String retrieveMajor(String semver) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n\\\\n\\\\tpublic static String retrieveMinor(String semver) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n\\\\n\\\\tpublic static String retrievePatch(String semver) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1067961165048543,\\\"familyId\\\":\\\"oyJx4JzjJSYZgfnpK\\\",\\\"instructions\\\":\\\"In **semantic versioning** a piece of software can be represented in a format like this example: `6.1.9`.\\\\n\\\\n1. The first number is the major version.\\\\n2. The second number is the minor version.\\\\n3. The third number is the patch (bug fixes).\\\\n\\\\nWrite three separate functions, one to retrieve each element in the semantic versioning specification.\\\\n\\\\n### Examples\\\\n```\\\\n// 6.1.9\\\\nretrieveMajor(\\\\\\\"6.1.9\\\\\\\") ➞ \\\\\\\"6\\\\\\\"\\\\n\\\\nretrieveMinor(\\\\\\\"6.1.9\\\\\\\") ➞ \\\\\\\"1\\\\\\\"\\\\n\\\\nretrievePatch(\\\\\\\"6.1.9\\\\\\\") ➞ \\\\\\\"9\\\\\\\"\\\\n\\\\n/","thisId":"1340","channelHost":"edabit.com","id":"1340","opcode":"1","channelId":"2","timestamp":"1652648876836"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"231\\\"]}\"]","thisId":"1341","channelHost":"edabit.com","id":"1341","opcode":"1","channelId":"2","timestamp":"1652648876974"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"10370","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"231\\\",\\\"result\\\":{\\\"_id\\\":\\\"zr7BBJbeYikNBN2hf\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String societyName(String[] friends) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1071428571428572,\\\"familyId\\\":\\\"euf5bzAHqf6ixRnoh\\\",\\\"instructions\\\":\\\"A group of friends have decided to start a secret society. The name will be the first letter of each of their names, sorted in alphabetical order.\\\\n\\\\nCreate a function that takes in an array of names and returns the name of the secret society.\\\\n\\\\n### Examples\\\\n```\\\\nsocietyName([\\\\\\\"Adam\\\\\\\", \\\\\\\"Sarah\\\\\\\", \\\\\\\"Malcolm\\\\\\\"]) ➞ \\\\\\\"AMS\\\\\\\"\\\\n\\\\nsocietyName([\\\\\\\"Harry\\\\\\\", \\\\\\\"Newt\\\\\\\", \\\\\\\"Luna\\\\\\\", \\\\\\\"Cho\\\\\\\"]) ➞ \\\\\\\"CHLN\\\\\\\"\\\\n\\\\nsocietyName([\\\\\\\"Phoebe\\\\\\\", \\\\\\\"Chandler\\\\\\\", \\\\\\\"Rachel\\\\\\\", \\\\\\\"Ross\\\\\\\", \\\\\\\"Monica\\\\\\\", \\\\\\\"Joey\\\\\\\"]) ➞ \\\\\\\"CJMPRR\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nThe secret society's name should be entirely uppercased.\\\",\\\"lab\\\":\\\"import static org.hamcr","thisId":"1342","channelHost":"edabit.com","id":"1342","opcode":"1","channelId":"2","timestamp":"1652648876996"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"233\\\"]}\"]","thisId":"1343","channelHost":"edabit.com","id":"1343","opcode":"1","channelId":"2","timestamp":"1652648877186"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"13669","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"233\\\",\\\"result\\\":{\\\"_id\\\":\\\"SmKPaHy5uY2gMk9na\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean isValid(String zip) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1078167115902966,\\\"familyId\\\":\\\"tpiBgWtgtAApeWenB\\\",\\\"instructions\\\":\\\"Zip codes consist of 5 consecutive digits. Given a string, write a function to determine whether the input is a valid zip code. A valid zip code is as follows:\\\\n\\\\n- Must only contain numbers (no non-digits allowed).\\\\n- Must not contain any spaces.\\\\n- Must not be greater than 5 digits in length.\\\\n\\\\n### Examples\\\\n```\\\\nisValid(\\\\\\\"59001\\\\\\\") ➞ true\\\\n\\\\nisValid(\\\\\\\"853a7\\\\\\\") ➞ false\\\\n\\\\nisValid(\\\\\\\"732 32\\\\\\\") ➞ false\\\\n\\\\nisValid(\\\\\\\"393939\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertEquals(true, Challenge.isVa","thisId":"1344","channelHost":"edabit.com","id":"1344","opcode":"1","channelId":"2","timestamp":"1652648877285"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"232\\\"]}\"]","thisId":"1345","channelHost":"edabit.com","id":"1345","opcode":"1","channelId":"2","timestamp":"1652648877299"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"23096","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"232\\\",\\\"result\\\":{\\\"_id\\\":\\\"LmiWWX2kdWn2Z5aZv\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static int[] cumulativeSum(int[] nums) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.107391910739191,\\\"familyId\\\":\\\"EFRaf9NW9ecQziEXY\\\",\\\"instructions\\\":\\\"Create a method that takes an array of integers and returns an array where each integer is the sum of itself + all previous numbers in the array.\\\\n\\\\n\\\\n### Examples\\\\n```\\\\ncumulativeSum([1, 2, 3]) ➞ [1, 3, 6]\\\\n\\\\ncumulativeSum([1, -2, 3]) ➞ [1, -1, 2]\\\\n\\\\ncumulativeSum([3, 3, -2, 408, 3, 3]) ➞ [3, 6, 4, 412, 415, 418]\\\\n```\\\\n\\\\n### Notes\\\\nReturn an empty array if the input is an empty array.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tSystem.out.println(\\\\\\\"Should return an empty array if given an empt","thisId":"1346","channelHost":"edabit.com","id":"1346","opcode":"1","channelId":"2","timestamp":"1652648877306"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"230\\\"]}\"]","thisId":"1347","channelHost":"edabit.com","id":"1347","opcode":"1","channelId":"2","timestamp":"1652648877399"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"11225","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"230\\\",\\\"result\\\":{\\\"_id\\\":\\\"tgcyRZECD5tqHvTWi\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean greaterThanOne(String frac) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.1070110701107012,\\\"familyId\\\":\\\"XqJSefKaXoiXnq5TW\\\",\\\"instructions\\\":\\\"Given a fraction as a string, return whether or not it is greater than 1 when evaluated.\\\\n\\\\n### Examples\\\\n```\\\\ngreaterThanOne(\\\\\\\"1/2\\\\\\\") ➞ false\\\\n\\\\ngreaterThanOne(\\\\\\\"7/4\\\\\\\") ➞ true\\\\n\\\\ngreaterThanOne(\\\\\\\"10/10\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nFractions must be strictly **greater** than 1 (see example #3).\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(false, Challenge.greaterThanOne(\\\\\\\"1/2\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(true, Challenge.greaterThanOne(\\\\\\\"7/4\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\","thisId":"1348","channelHost":"edabit.com","id":"1348","opcode":"1","channelId":"2","timestamp":"1652648877411"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"234\\\"]}\"]","thisId":"1349","channelHost":"edabit.com","id":"1349","opcode":"1","channelId":"2","timestamp":"1652648877515"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5688","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"234\\\",\\\"result\\\":{\\\"_id\\\":\\\"yRFLwNAw5wJkHsNgS\\\",\\\"author\\\":\\\"Nguyen Phan Dang\\\",\\\"authorId\\\":\\\"YLqdr7bYjwew2KM4N\\\",\\\"code\\\":\\\"public class ChallengeTests {\\\\n\\\\tpublic static boolean isOrthogonal(int[] arr1, int[] arr2) {\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.108433734939759,\\\"familyId\\\":\\\"Mkvz37SndKmhiY2Pu\\\",\\\"instructions\\\":\\\"Create a function that takes two vectors as arrays and checks if the two vectors are orthogonal or not. The return value is boolean. Two vectors a and b are orthogonal if their dot product is equal to zero.\\\\n\\\\n### Examples\\\\n```\\\\nisOrthogonal([1, 2], [2, -1]) ➞ true\\\\n\\\\nisOrthogonal([3, -1], [7, 5]) ➞ false\\\\n\\\\nisOrthogonal([1, 2, 0], [2, -1, 10]) ➞ true\\\\n```\\\\n\\\\n### Notes\\\\n- The two arrays will be of same length.\\\\n- Check out the **Resources** tab.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals;\\\\n\\\\nimport org.junit.Test;\\\\n\\\\npublic class ChallengeTestIsOrthogonal {\\\\n\\\\t\\\\n\\\\t@Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tasser","thisId":"1350","channelHost":"edabit.com","id":"1350","opcode":"1","channelId":"2","timestamp":"1652648877526"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"235\\\"]}\"]","thisId":"1351","channelHost":"edabit.com","id":"1351","opcode":"1","channelId":"2","timestamp":"1652648877624"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"12555","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"235\\\",\\\"result\\\":{\\\"_id\\\":\\\"jwzMsyo2tbgn2KbGQ\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String convertBinary(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1089385474860336,\\\"familyId\\\":\\\"oBHqMhZp63FTnQfvy\\\",\\\"instructions\\\":\\\"Write a function that transforms all letters from `[a, m]` to `0` and letters from `[n, z]` to `1` in a string.\\\\n\\\\n### Examples\\\\n```\\\\nconvertBinary(\\\\\\\"house\\\\\\\") ➞ \\\\\\\"01110\\\\\\\"\\\\n\\\\nconvertBinary(\\\\\\\"excLAIM\\\\\\\") ➞ \\\\\\\"0100000\\\\\\\"\\\\n\\\\nconvertBinary(\\\\\\\"moon\\\\\\\") ➞ \\\\\\\"0111\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nConversion should be case **insensitive** (see example #2).\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertEquals(\\\\\\\"01110\\\\\\\", Challenge.convertBinary(\\\\\\\"house\\\\\\\"));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test \\\\n\\\\tpublic void test2() {\\\\n\\\\t\\\\tassertEquals(\\\\\\\"0100000","thisId":"1352","channelHost":"edabit.com","id":"1352","opcode":"1","channelId":"2","timestamp":"1652648877633"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"236\\\"]}\"]","thisId":"1353","channelHost":"edabit.com","id":"1353","opcode":"1","channelId":"2","timestamp":"1652648877755"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"11976","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"236\\\",\\\"result\\\":{\\\"_id\\\":\\\"n6bgfrTFfNZt4yWkJ\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"import java.util.GregorianCalendar;\\\\n\\\\npublic class Program {\\\\n\\\\tpublic static boolean timeForMilkAndCookies(GregorianCalendar date) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1089494163424125,\\\"familyId\\\":\\\"LCGan8xJi3HrEhTXL\\\",\\\"instructions\\\":\\\"Christmas Eve is almost upon us, so naturally we need to prepare some milk and cookies for Santa! Create a method that accepts a `GregorianCalendar` object and returns `true` if it's Christmas Eve (December 24th) and `false` otherwise.\\\\n\\\\n### Examples\\\\n```\\\\nGregorianCalendar(2013, 11, 24) ➞ true\\\\n\\\\nGregorianCalendar(2013, 0, 23) ➞ false\\\\n\\\\nGregorianCalendar(3000, 11, 24) ➞ true\\\\n```\\\\n\\\\n### Notes\\\\n- Dates are zero based (see resources).\\\\n- All test cases contain valid dates.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertT","thisId":"1354","channelHost":"edabit.com","id":"1354","opcode":"1","channelId":"2","timestamp":"1652648877762"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"237\\\"]}\"]","thisId":"1355","channelHost":"edabit.com","id":"1355","opcode":"1","channelId":"2","timestamp":"1652648877831"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"9120","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"237\\\",\\\"result\\\":{\\\"_id\\\":\\\"HtruskPio7ricRvuG\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int incrementToTop(int[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1090909090909091,\\\"familyId\\\":\\\"jSEYLiqNfoXFo9aQv\\\",\\\"instructions\\\":\\\"Create a function that returns the total number of steps it takes to transform each element to the maximal element in the array. Each step consists of incrementing a digit by one.\\\\n\\\\n### Examples\\\\n```\\\\nincrementToTop([3, 4, 5]) ➞ 3\\\\n// Maximal element in the array is 5.\\\\n// To transform 3 to 5 requires 2 steps: 3 -> 4, 4 -> 5.\\\\n// To transform 4 to 5 requires 1 step: 4 -> 5.\\\\n// Total steps required is 3.\\\\n\\\\nincrementToTop([4, 3, 4]) ➞ 1\\\\n// Maximal element in the array is 4.\\\\n// To transform 3 to 4 requires 1 steps: 3 -> 4.\\\\n// Total steps required is 1.\\\\n\\\\nincrementToTop([3, 3, 3]) ➞ 0\\\\n\\\\nincrementToTop([3, 10, 3]) ➞ 14\\\\n```\\\\n\\\\n### Notes\\\\n- If the array con","thisId":"1356","channelHost":"edabit.com","id":"1356","opcode":"1","channelId":"2","timestamp":"1652648877837"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"238\\\"]}\"]","thisId":"1357","channelHost":"edabit.com","id":"1357","opcode":"1","channelId":"2","timestamp":"1652648877943"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"21637","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"238\\\",\\\"result\\\":{\\\"_id\\\":\\\"cwLnTvxpBX5espEgs\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean checkPalindrome(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1092564491654022,\\\"familyId\\\":\\\"gzuKEBnNbcAh3LRpY\\\",\\\"instructions\\\":\\\"A palindrome is a word that is identical forward and backwards.\\\\n\\\\n- mom\\\\n- racecar\\\\n- kayak\\\\n\\\\nGiven a word, create a function that checks whether it is a palindrome.\\\\n\\\\n### Examples\\\\n```\\\\ncheckPalindrome(\\\\\\\"mom\\\\\\\") ➞ true\\\\n\\\\ncheckPalindrome(\\\\\\\"scary\\\\\\\") ➞ false\\\\n\\\\ncheckPalindrome(\\\\\\\"reviver\\\\\\\") ➞ true\\\\n\\\\ncheckPalindrome(\\\\\\\"stressed\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nAll test input is lower cased.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertEquals(true, Challenge.checkPalindrome(\\\\\\\"mom\\\\\\\"));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test \\\\n\\\\tpu","thisId":"1358","channelHost":"edabit.com","id":"1358","opcode":"1","channelId":"2","timestamp":"1652648877949"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"239\\\"]}\"]","thisId":"1359","channelHost":"edabit.com","id":"1359","opcode":"1","channelId":"2","timestamp":"1652648878053"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8332","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"239\\\",\\\"result\\\":{\\\"_id\\\":\\\"8ZFob4Juk8jzHMAHA\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String cardHide(String card) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.110091743119266,\\\"familyId\\\":\\\"pfEJpSxtRnXK2DnMz\\\",\\\"instructions\\\":\\\"Write a function that takes a credit card number and only displays the last four characters. The rest of the card number must be replaced by `************`.\\\\n\\\\n### Examples\\\\n```\\\\ncardHide(\\\\\\\"1234123456785678\\\\\\\") ➞ \\\\\\\"************5678\\\\\\\"\\\\n\\\\ncardHide(\\\\\\\"8754456321113213\\\\\\\") ➞ \\\\\\\"************3213\\\\\\\"\\\\n\\\\ncardHide(\\\\\\\"35123413355523\\\\\\\") ➞ \\\\\\\"**********5523\\\\\\\"\\\\n```\\\\n\\\\n### Examples\\\\n- Ensure you return a string.\\\\n- The length of the string must remain the same as the input.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"****","thisId":"1360","channelHost":"edabit.com","id":"1360","opcode":"1","channelId":"2","timestamp":"1652648878057"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"240\\\"]}\"]","thisId":"1361","channelHost":"edabit.com","id":"1361","opcode":"1","channelId":"2","timestamp":"1652648878173"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"14765","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"240\\\",\\\"result\\\":{\\\"_id\\\":\\\"bL2E8p5DGWSNmEtAE\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static boolean validatePIN(String s) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1102150537634408,\\\"familyId\\\":\\\"XwQTQAFpgjWog9pr8\\\",\\\"instructions\\\":\\\"ATM machines allow 4 or 6 digit PIN codes and PIN codes cannot contain anything but exactly 4 digits or exactly 6 digits. Your task is to create a method that takes a string and returns `true` if the PIN is valid and `false` if it's not.\\\\n\\\\n### Examples\\\\n```\\\\nvalidatePIN(\\\\\\\"1234\\\\\\\") ➞ true\\\\n\\\\nvalidatePIN(\\\\\\\"12345\\\\\\\") ➞ false\\\\n\\\\nvalidatePIN(\\\\\\\"a234\\\\\\\") ➞ false\\\\n\\\\nvalidatePIN(\\\\\\\"\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\n- Some test cases contain special characters.\\\\n- Empty strings must return false.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n ","thisId":"1362","channelHost":"edabit.com","id":"1362","opcode":"1","channelId":"2","timestamp":"1652648878178"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"241\\\"]}\"]","thisId":"1363","channelHost":"edabit.com","id":"1363","opcode":"1","channelId":"2","timestamp":"1652648878277"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"16012","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"241\\\",\\\"result\\\":{\\\"_id\\\":\\\"2zKtCWQM2rSxMQqLX\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static String AlphabetSoup(String s) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1102941176470589,\\\"familyId\\\":\\\"agPNo2bh3FASFD5vw\\\",\\\"instructions\\\":\\\"Create a method that takes a string  and returns a string with its letters in alphabetical order.\\\\n\\\\n### Examples\\\\n```\\\\nAlphabetSoup(\\\\\\\"hello\\\\\\\") ➞ \\\\\\\"ehllo\\\\\\\"\\\\n\\\\nAlphabetSoup(\\\\\\\"edabit\\\\\\\") ➞ \\\\\\\"abdeit\\\\\\\"\\\\n\\\\nAlphabetSoup(\\\\\\\"hacker\\\\\\\") ➞ \\\\\\\"acehkr\\\\\\\"\\\\n\\\\nAlphabetSoup(\\\\\\\"geek\\\\\\\") ➞ \\\\\\\"eegk\\\\\\\"\\\\n\\\\nAlphabetSoup(\\\\\\\"javascript\\\\\\\") ➞ \\\\\\\"aacijprstv\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nYou can assume numbers and punctuation symbols won't be included in test cases. You'll only have to deal with single word, alphabetic characters.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\","thisId":"1364","channelHost":"edabit.com","id":"1364","opcode":"1","channelId":"2","timestamp":"1652648878282"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"242\\\"]}\"]","thisId":"1365","channelHost":"edabit.com","id":"1365","opcode":"1","channelId":"2","timestamp":"1652648878398"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"13612","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"242\\\",\\\"result\\\":{\\\"_id\\\":\\\"t3NThQjrcbjhiF5zt\\\",\\\"author\\\":\\\"Apple Rez\\\",\\\"authorId\\\":\\\"CZzsBrEqxy8Won2vL\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static int Fibonacci(int a)\\\\n\\\\t{\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1105398457583548,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"BraKXoYnHJArzSTcJ\\\",\\\"instructions\\\":\\\"Create a function that, given a number, returns the corresponding value of that index in the Fibonacci series.\\\\n\\\\nThe Fibonacci Sequence is the series of numbers:\\\\n\\\\n```\\\\n1, 1, 2, 3, 5, 8, 13, 21, 34, ...\\\\n```\\\\n\\\\nThe next number is found by adding the two numbers before it:\\\\n\\\\n- The 2 is found by adding the two numbers before it (1+1).\\\\n- The 3 is found by adding the two numbers before it (1+2).\\\\n- The 5 is (2+3), and so on!\\\\n\\\\n### Examples\\\\n```\\\\nFibonacci(3) ➞ 3\\\\n\\\\nFibonacci(7) ➞ 21\\\\n\\\\nFibonacci(12) ➞ 233\\\\n```\\\\n\\\\n### Notes\\\\nThe first number in the sequence starts at 1 (not 0).\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport stat","thisId":"1366","channelHost":"edabit.com","id":"1366","opcode":"1","channelId":"2","timestamp":"1652648878405"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"243\\\"]}\"]","thisId":"1367","channelHost":"edabit.com","id":"1367","opcode":"1","channelId":"2","timestamp":"1652648878478"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"14352","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"243\\\",\\\"result\\\":{\\\"_id\\\":\\\"oB67n674gwdTi33P4\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int solveForExp(int a, int b) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.1128608923884515,\\\"familyId\\\":\\\"eH7CuX87JbgYDr8sG\\\",\\\"instructions\\\":\\\"Create a function that takes a number `a` and finds the missing exponent _x_ so that `a` when raised to the power of _x_ is equal to `b`.\\\\n\\\\n### Examples\\\\n```\\\\nsolveForExp(4, 1024) ➞ 5\\\\n\\\\nsolveForExp(2, 1024) ➞ 10\\\\n\\\\nsolveForExp(9, 3486784401) ➞ 10\\\\n```\\\\n\\\\n### Notes\\\\n`a` is raised to the power of what in order to equal `b`?\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(5, Challenge.solveForExp(4, 1024));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(10, Challenge.solveForExp(2, 1024));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\","thisId":"1368","channelHost":"edabit.com","id":"1368","opcode":"1","channelId":"2","timestamp":"1652648878485"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"244\\\"]}\"]","thisId":"1369","channelHost":"edabit.com","id":"1369","opcode":"1","channelId":"2","timestamp":"1652648878595"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"12432","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"244\\\",\\\"result\\\":{\\\"_id\\\":\\\"RSbXRKoom6ED9Xe9i\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean isStrangePair(String s1, String s2) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1131386861313868,\\\"familyId\\\":\\\"xo5LwDBD9vNhPgPQH\\\",\\\"instructions\\\":\\\"A pair of strings form a **strange pair** if both of the following are true:\\\\n\\\\n- The 1st string's **first** letter = 2nd string's **last** letter.\\\\n- The 1st string's **last** letter = 2nd string's **first** letter.\\\\n\\\\nCreate a function that returns `true` if a pair of strings constitutes a **strange pair**, and `false` otherwise.\\\\n\\\\n### Examples\\\\n```\\\\nisStrangePair(\\\\\\\"ratio\\\\\\\", \\\\\\\"orator\\\\\\\") ➞ true\\\\n// \\\\\\\"ratio\\\\\\\" ends with \\\\\\\"o\\\\\\\" and \\\\\\\"orator\\\\\\\" starts with \\\\\\\"o\\\\\\\".\\\\n// \\\\\\\"ratio\\\\\\\" starts with \\\\\\\"r\\\\\\\" and \\\\\\\"orator\\\\\\\" ends with \\\\\\\"r\\\\\\\".\\\\n\\\\nisStrangePair(\\\\\\\"sparkling\\\\\\\", \\\\\\\"groups\\\\\\\") ➞ true\\\\n\\\\nisStrangePair(\\\\\\\"bush\\\\\\\", \\","thisId":"1370","channelHost":"edabit.com","id":"1370","opcode":"1","channelId":"2","timestamp":"1652648878601"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"245\\\"]}\"]","thisId":"1371","channelHost":"edabit.com","id":"1371","opcode":"1","channelId":"2","timestamp":"1652648878700"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7206","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"245\\\",\\\"result\\\":{\\\"_id\\\":\\\"7LAsTPRvRH8sX6vD5\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean powerOfTwo(int num) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.1139896373056994,\\\"familyId\\\":\\\"BJ5EF33rGHQxha5pf\\\",\\\"instructions\\\":\\\"Write a function that returns `true` if an integer can be expressed as a power of base value 2 and `false` otherwise.\\\\n\\\\n### Examples\\\\n```\\\\npowerOfTwo(32) ➞ true\\\\n\\\\npowerOfTwo(1) ➞ true\\\\n\\\\npowerOfTwo(-7) ➞ false\\\\n\\\\npowerOfTwo(18) ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(true, Challenge.powerOfTwo(32));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(true, Challenge.powerOfTwo(1));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test3() {\\\\n    assertEquals(false, Challenge.powerOfTwo(-7));\\\\n  }\\\\n\\\\t\\\\n","thisId":"1372","channelHost":"edabit.com","id":"1372","opcode":"1","channelId":"2","timestamp":"1652648878704"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"247\\\"]}\"]","thisId":"1373","channelHost":"edabit.com","id":"1373","opcode":"1","channelId":"2","timestamp":"1652648878823"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"15470","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"247\\\",\\\"result\\\":{\\\"_id\\\":\\\"iJSAYBTLZvLuqAnN4\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class SparedSquare {\\\\n  public static String tpChecker(int people, int tp) {\\\\n    \\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.1153846153846154,\\\"familyId\\\":\\\"j2tKNEKn8PkJfHPLY\\\",\\\"instructions\\\":\\\"Try to imagine a world in which you might have to stay home for 14 days at any given time. Do you have enough TP to make it through?\\\\n\\\\nAlthough the number of squares per roll of TP varies significantly, we'll assume each roll has 500 sheets, and the average person uses 57 sheets per day.\\\\n\\\\nCreate a function that will accept the following parameters:\\\\n- `people` \\u2060— Number of people in the household.\\\\n- `tp` \\u2060— Number of rolls.\\\\n\\\\nReturn a statement telling the user if they need to buy more TP!\\\\n\\\\n### Examples\\\\n```\\\\ntpChecker(4, 1) ➞ \\\\\\\"Your TP will only last 2 days, buy more!\\\\\\\"\\\\n\\\\ntpChecker(3, 20) ➞ \\\\\\\"Your TP will last 58 days, no need to pa","thisId":"1374","channelHost":"edabit.com","id":"1374","opcode":"1","channelId":"2","timestamp":"1652648878833"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"249\\\"]}\"]","thisId":"1375","channelHost":"edabit.com","id":"1375","opcode":"1","channelId":"2","timestamp":"1652648878926"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"11174","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"249\\\",\\\"result\\\":{\\\"_id\\\":\\\"mvHZK6Dy3ZF8EFoG3\\\",\\\"author\\\":\\\"rubens\\\",\\\"authorId\\\":\\\"XhzKztoQYYQzZ2c7o\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int mean(int a) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1167192429022081,\\\"familyId\\\":\\\"N9RkW3G2NXMx83Sds\\\",\\\"instructions\\\":\\\"Create a function that returns the mean of all digits.\\\\n\\\\n### Examples\\\\n```\\\\nmean(42) ➞ 3\\\\n\\\\nmean(12345) ➞ 3\\\\n\\\\nmean(666) ➞ 6\\\\n```\\\\n\\\\n### Notes\\\\n- The mean of all digits is the sum of digits / how many digits there are (e.g. mean of digits in 512 is `(5+1+2)/3(number of digits) = 8/3=2`).\\\\n- The mean will always be an integer.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test\\\\n  public void test1() {\\\\n  \\\\tassertThat(Challenge.mean(666), is(6));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n  \\\\tassertThat(Challenge.mean(80), is(4));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test\\\\n","thisId":"1376","channelHost":"edabit.com","id":"1376","opcode":"1","channelId":"2","timestamp":"1652648878931"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"246\\\"]}\"]","thisId":"1377","channelHost":"edabit.com","id":"1377","opcode":"1","channelId":"2","timestamp":"1652648879047"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"9924","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"246\\\",\\\"result\\\":{\\\"_id\\\":\\\"CCRmCv3huDnBsqmR7\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int howManyTimes(String msg) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.1151079136690647,\\\"familyId\\\":\\\"RKb63r2XT4DE3jD6P\\\",\\\"instructions\\\":\\\"Imagine a messaging device with only one button. For the letter **A**, you press the button **one time**, for **E**, you press it **five times**, for **G**, it's pressed **seven times**, etc, etc.\\\\n\\\\nWrite a function that takes a string (the message) and returns the total number of times the button is pressed.\\\\n\\\\n### Examples\\\\n```\\\\nhowManyTimes(\\\\\\\"abde\\\\\\\") ➞ 12\\\\n\\\\nhowManyTimes(\\\\\\\"azy\\\\\\\") ➞ 52\\\\n\\\\nhowManyTimes(\\\\\\\"qudusayo\\\\\\\") ➞ 123\\\\n```\\\\n\\\\n### Notes\\\\n- Ignore spaces.\\\\n- The given string argument will be in lower case.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() ","thisId":"1378","channelHost":"edabit.com","id":"1378","opcode":"1","channelId":"2","timestamp":"1652648879053"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"248\\\"]}\"]","thisId":"1379","channelHost":"edabit.com","id":"1379","opcode":"1","channelId":"2","timestamp":"1652648879171"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8107","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"248\\\",\\\"result\\\":{\\\"_id\\\":\\\"gDikYnoenX7rKFMQm\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Sentence {\\\\n\\\\tpublic static int timeToFinish(String full, String part) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.116504854368932,\\\"familyId\\\":\\\"PAocqsg2EJ5dNYCSx\\\",\\\"instructions\\\":\\\"**POV:*** You are in an exam and time has just run out. While the teacher's back is turned, you hastily take the opportunity to finish scribbling down the last few words of the conclusion.*\\\\n\\\\nFor this challenge, it takes **0.5 seconds** to write a character (**not including spaces**). Given the **full sentence** and the **unfinished sentence** as inputs, return the time it takes to finish writing in seconds.\\\\n\\\\n### Worked Example\\\\n```\\\\ntimeToFinish(\\\\n  \\\\\\\"I wanna tell the world Tesh, that I love you so!\\\\\\\", \\\\n  \\\\\\\"I wanna tell the world Tesh, that\\\\\\\"\\\\n) ➞ 5\\\\n\\\\n// \\\\\\\"I\\\\\\\" has 1 character\\\\n// \\\\\\\"love\\\\\\\" has 4 characters\\\\n// \\\\\\\"you\\\\\\\" has 3 char","thisId":"1380","channelHost":"edabit.com","id":"1380","opcode":"1","channelId":"2","timestamp":"1652648879174"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"250\\\"]}\"]","thisId":"1381","channelHost":"edabit.com","id":"1381","opcode":"1","channelId":"2","timestamp":"1652648879266"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"11250","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"250\\\",\\\"result\\\":{\\\"_id\\\":\\\"ePj2zup56kZrRbhDX\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean isPrime(int num) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.1172413793103448,\\\"familyId\\\":\\\"SuERizayAE5qs95rD\\\",\\\"instructions\\\":\\\"Create a function that returns `true` if a number is prime, and `false` otherwise. A prime number is any positive integer that is evenly divisible by only two divisors: 1 and itself.\\\\n\\\\nThe first ten prime numbers are:\\\\n\\\\n```\\\\n2, 3, 5, 7, 11, 13, 17, 19, 23, 29\\\\n```\\\\n\\\\n### Examples\\\\n```\\\\nisPrime(31) ➞ true\\\\n\\\\nisPrime(18) ➞ false\\\\n\\\\nisPrime(11) ➞ true\\\\n```\\\\n\\\\n### Notes\\\\n- A prime number has no other factors except 1 and itself.\\\\n- If a number is odd it is not divisible by an even number.\\\\n- 1 is not considered a prime number.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1","thisId":"1382","channelHost":"edabit.com","id":"1382","opcode":"1","channelId":"2","timestamp":"1652648879270"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"252\\\"]}\"]","thisId":"1383","channelHost":"edabit.com","id":"1383","opcode":"1","channelId":"2","timestamp":"1652648879371"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"20149","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"252\\\",\\\"result\\\":{\\\"_id\\\":\\\"XD6bQFpCZWiAMPanQ\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int[] amplify(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.119914346895075,\\\"familyId\\\":\\\"sKNY68bZ4wsYrqZfP\\\",\\\"instructions\\\":\\\"Create a function that takes an integer and returns an array from 1 to the given number, where:\\\\n\\\\n1. If the number **can be divided** evenly by 4, amplify it by 10 (i.e. return 10 times the number).\\\\n2. If the number **cannot be divided** evenly by 4, simply return the number.\\\\n\\\\n### Examples\\\\n```\\\\namplify(4) ➞ [1, 2, 3, 40]\\\\n\\\\namplify(3) ➞ [1, 2, 3]\\\\n\\\\namplify(25) ➞ [1, 2, 3, 40, 5, 6, 7, 80, 9, 10, 11, 120, 13, 14, 15, 160, 17, 18, 19, 200, 21, 22, 23, 240, 25]\\\\n```\\\\n\\\\n### Notes\\\\n- The given integer will always be equal to or greater than 1.\\\\n- Include the number (see example above).\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport s","thisId":"1384","channelHost":"edabit.com","id":"1384","opcode":"1","channelId":"2","timestamp":"1652648879375"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"251\\\"]}\"]","thisId":"1385","channelHost":"edabit.com","id":"1385","opcode":"1","channelId":"2","timestamp":"1652648879472"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"9482","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"251\\\",\\\"result\\\":{\\\"_id\\\":\\\"mDM9eJXqjL7kJc3hh\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static boolean letterCheck(String[] s) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1173708920187793,\\\"familyId\\\":\\\"uJoe2v2gfza3Pk4r2\\\",\\\"instructions\\\":\\\"Create a method that accepts an array of two strings and checks if the letters in the second string are present in the first string.\\\\n\\\\n### Examples\\\\n```\\\\nletterCheck([\\\\\\\"trances\\\\\\\", \\\\\\\"nectar\\\\\\\"]) ➞ true\\\\n\\\\nletterCheck([\\\\\\\"compadres\\\\\\\", \\\\\\\"DRAPES\\\\\\\"]) ➞ true\\\\n\\\\nletterCheck([\\\\\\\"parses\\\\\\\", \\\\\\\"parsecs\\\\\\\"]) ➞ false\\\\n```\\\\n\\\\n### Notes\\\\n- Function should not be case sensitive (as indicated in the second example).\\\\n- Both strings are presented as a single argument in the form of an array.\\\\n- **Bonus:** Solve this without RegEx.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertTha","thisId":"1386","channelHost":"edabit.com","id":"1386","opcode":"1","channelId":"2","timestamp":"1652648879489"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"253\\\"]}\"]","thisId":"1387","channelHost":"edabit.com","id":"1387","opcode":"1","channelId":"2","timestamp":"1652648879584"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"9708","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"253\\\",\\\"result\\\":{\\\"_id\\\":\\\"YjeGKZwXsdCo3sr7a\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean isBetween(String first, String last, String word) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.1209302325581396,\\\"familyId\\\":\\\"Bv2SHvBWJ6usGhKJu\\\",\\\"instructions\\\":\\\"Write a function that takes three string arguments (`first`, `last`, and `word`) and returns `true` if `word` is found between `first` and `last` in the dictionary, otherwise `false`.\\\\n\\\\n### Examples\\\\n```\\\\nisBetween(\\\\\\\"apple\\\\\\\", \\\\\\\"banana\\\\\\\", \\\\\\\"azure\\\\\\\") ➞ true\\\\n\\\\nisBetween(\\\\\\\"monk\\\\\\\", \\\\\\\"monument\\\\\\\", \\\\\\\"monkey\\\\\\\") ➞ true\\\\n\\\\nisBetween(\\\\\\\"bookend\\\\\\\", \\\\\\\"boolean\\\\\\\", \\\\\\\"boost\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\n- All letters will be in lowercase.\\\\n- All three words will be different.\\\\n- Remember that the string `word` is in the middle.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class","thisId":"1388","channelHost":"edabit.com","id":"1388","opcode":"1","channelId":"2","timestamp":"1652648879588"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"254\\\"]}\"]","thisId":"1389","channelHost":"edabit.com","id":"1389","opcode":"1","channelId":"2","timestamp":"1652648879694"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"10786","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"254\\\",\\\"result\\\":{\\\"_id\\\":\\\"xH7uvX2MoH8e85aYS\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String binary(int decimal) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1215277777777777,\\\"familyId\\\":\\\"LesDkLBteJGBFTGe6\\\",\\\"instructions\\\":\\\"Create a function that returns a base-2 (binary) representation of a base-10 (decimal) string number. To convert is simple: ((2) means base-2 and (10) means base-10) 010101001(2) = 1 + 8 + 32 + 128.\\\\n\\\\nGoing from right to left, the value of the most right bit is 1, now from that every bit to the left will be x2 the value, value of an 8 bit binary numbers are (256, 128, 64, 32, 16, 8, 4, 2, 1).\\\\n\\\\n### Examples\\\\n```\\\\nbinary(1) ➞ \\\\\\\"1\\\\\\\"\\\\n// 1*1 = 1\\\\n\\\\nbinary(5) ➞ \\\\\\\"101\\\\\\\"\\\\n// 1*1 + 1*4 = 5\\\\n\\\\nbinary(10) ➞ \\\\\\\"1010\\\\\\\"\\\\n// 1*2 + 1*8 = 10\\\\n```\\\\n\\\\n### Notes\\\\n- Numbers will always be below 1024 (not including 1024).\\\\n- The `&&` operator could be useful.\\\\n- The strings ","thisId":"1390","channelHost":"edabit.com","id":"1390","opcode":"1","channelId":"2","timestamp":"1652648879699"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"256\\\"]}\"]","thisId":"1391","channelHost":"edabit.com","id":"1391","opcode":"1","channelId":"2","timestamp":"1652648879806"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"10204","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"256\\\",\\\"result\\\":{\\\"_id\\\":\\\"DtTdXqwFQYTf6ZE3J\\\",\\\"author\\\":\\\"rubens\\\",\\\"authorId\\\":\\\"XhzKztoQYYQzZ2c7o\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static int countVowels(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.125,\\\"familyId\\\":\\\"LqAJzwJuD6dnZZeb8\\\",\\\"instructions\\\":\\\"Write a function that **recursively** returns the number of vowels in a string.\\\\n\\\\n### Examples\\\\n```\\\\ncountVowels(\\\\\\\"apple\\\\\\\") ➞ 2\\\\n\\\\ncountVowels(\\\\\\\"cheesecake\\\\\\\") ➞ 5\\\\n\\\\ncountVowels(\\\\\\\"bbb\\\\\\\") ➞ 0\\\\n\\\\ncountVowels(\\\\\\\"\\\\\\\") ➞ 0\\\\n```\\\\n\\\\n### Notes\\\\n- All letters will be in lower case.\\\\n- Vowels are: `a, e, i, o, u`.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(2, Program.countVowels(\\\\\\\"apple\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(5, Program.countVowels(\\\\\\\"cheesecake\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test3()","thisId":"1392","channelHost":"edabit.com","id":"1392","opcode":"1","channelId":"2","timestamp":"1652648879810"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"255\\\"]}\"]","thisId":"1393","channelHost":"edabit.com","id":"1393","opcode":"1","channelId":"2","timestamp":"1652648879934"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"13007","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"255\\\",\\\"result\\\":{\\\"_id\\\":\\\"gzjQoZY6mYRBwDv2Q\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean isSymmetrical(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1216216216216217,\\\"familyId\\\":\\\"azrT2vG9D8yypwMG9\\\",\\\"instructions\\\":\\\"Create a function that takes a number as an argument and returns `true` or `false` depending on whether the number is symmetrical or not. A number is symmetrical when it is the same as its reverse.\\\\n\\\\n### Examples\\\\n```\\\\nisSymmetrical(7227) ➞ true\\\\n\\\\nisSymmetrical(12567) ➞ false\\\\n\\\\nisSymmetrical(44444444) ➞ true\\\\n\\\\nisSymmetrical(9939) ➞ false\\\\n\\\\nisSymmetrical(1112111) ➞ true\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(false, Challenge.isSymmetrical(23));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertE","thisId":"1394","channelHost":"edabit.com","id":"1394","opcode":"1","channelId":"2","timestamp":"1652648879937"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"257\\\"]}\"]","thisId":"1395","channelHost":"edabit.com","id":"1395","opcode":"1","channelId":"2","timestamp":"1652648880064"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"9949","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"257\\\",\\\"result\\\":{\\\"_id\\\":\\\"AYQPBDjDbrrvJtjjc\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean isIsogram(String str) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.1217391304347826,\\\"familyId\\\":\\\"NtecppWq4zmgKY3cH\\\",\\\"instructions\\\":\\\"An isogram is a word that has no duplicate letters. Create a function that takes a string and returns either `true` or `false` depending on whether or not it's an \\\\\\\"isogram\\\\\\\".\\\\n\\\\n### Examples\\\\n```\\\\nisIsogram(\\\\\\\"Algorism\\\\\\\") ➞ true\\\\n\\\\nisIsogram(\\\\\\\"PasSword\\\\\\\") ➞ false\\\\n// Not case sensitive.\\\\n\\\\nisIsogram(\\\\\\\"Consecutive\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\n- Ignore letter case (should not be case sensitive).\\\\n- All test cases contain valid one word strings.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(true, Challenge.isIsogram(\\\\\\\"Algorism\\\\\\\"))","thisId":"1396","channelHost":"edabit.com","id":"1396","opcode":"1","channelId":"2","timestamp":"1652648880068"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"258\\\"]}\"]","thisId":"1397","channelHost":"edabit.com","id":"1397","opcode":"1","channelId":"2","timestamp":"1652648880170"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"10214","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"258\\\",\\\"result\\\":{\\\"_id\\\":\\\"ENNmwseEab73TMoBc\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String[] getExtension(String[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1244979919678715,\\\"familyId\\\":\\\"9zRg9Kw274aK8K83M\\\",\\\"instructions\\\":\\\"Write a function that maps files to their extension names.\\\\n\\\\n### Examples\\\\n```\\\\ngetExtension([\\\\\\\"code.html\\\\\\\", \\\\\\\"code.css\\\\\\\"])\\\\n➞ [\\\\\\\"html\\\\\\\", \\\\\\\"css\\\\\\\"]\\\\n\\\\ngetExtension([\\\\\\\"project1.jpg\\\\\\\", \\\\\\\"project1.pdf\\\\\\\", \\\\\\\"project1.mp3\\\\\\\"])\\\\n➞ [\\\\\\\"jpg\\\\\\\", \\\\\\\"pdf\\\\\\\", \\\\\\\"mp3\\\\\\\"]\\\\n\\\\ngetExtension([\\\\\\\"ruby.rb\\\\\\\", \\\\\\\"cplusplus.cpp\\\\\\\", \\\\\\\"python.py\\\\\\\", \\\\\\\"javascript.js\\\\\\\"])\\\\n➞ [\\\\\\\"rb\\\\\\\", \\\\\\\"cpp\\\\\\\", \\\\\\\"py\\\\\\\", \\\\\\\"js\\\\\\\"]\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t","thisId":"1398","channelHost":"edabit.com","id":"1398","opcode":"1","channelId":"2","timestamp":"1652648880174"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"259\\\"]}\"]","thisId":"1399","channelHost":"edabit.com","id":"1399","opcode":"1","channelId":"2","timestamp":"1652648880290"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"14429","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"259\\\",\\\"result\\\":{\\\"_id\\\":\\\"phaa2KFqeiM9hZeSK\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int leftDigit(String str) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.1219512195121952,\\\"familyId\\\":\\\"6jvi2ffbDgnyMZ63A\\\",\\\"instructions\\\":\\\"Write a function that takes a string as an argument and returns the left most digit in the string.\\\\n\\\\n### Examples\\\\n```\\\\nleftDigit(\\\\\\\"TrAdE2W1n95!\\\\\\\") ➞ 2\\\\n\\\\nleftDigit(\\\\\\\"V3r1ta$\\\\\\\") ➞ 3\\\\n\\\\nleftDigit(\\\\\\\"U//DertHe1nflu3nC3\\\\\\\") ➞ 1\\\\n\\\\nleftDigit(\\\\\\\"J@v@5cR1PT\\\\\\\") ➞ 5\\\\n```\\\\n\\\\n### Notes\\\\n- Each string will have at least two numbers.\\\\n- Return the result as an integer.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(2, Challenge.leftDigit(\\\\\\\"TrAdE2W1n95!\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(3, Challenge.leftDigi","thisId":"1400","channelHost":"edabit.com","id":"1400","opcode":"1","channelId":"2","timestamp":"1652648880293"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"260\\\"]}\"]","thisId":"1401","channelHost":"edabit.com","id":"1401","opcode":"1","channelId":"2","timestamp":"1652648880397"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"9307","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"260\\\",\\\"result\\\":{\\\"_id\\\":\\\"N3ZBDe99aq8Piar8n\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String factorGroup(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.123456790123457,\\\"familyId\\\":\\\"zoTBE6ibHoKcRLN7c\\\",\\\"instructions\\\":\\\"Create a function that returns `\\\\\\\"even\\\\\\\"` if a number has an even number of factors and `\\\\\\\"odd\\\\\\\"` if a number has an odd number of factors.\\\\n\\\\n### Examples\\\\n```\\\\nfactorGroup(33) ➞ \\\\\\\"even\\\\\\\"\\\\n\\\\nfactorGroup(36) ➞ \\\\\\\"odd\\\\\\\"\\\\n\\\\nfactorGroup(7) ➞ \\\\\\\"even\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- You don't need to actually calculate the factors to solve this problem.\\\\n- Think about _why_ a number would have an odd number of factors.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"even\\\\\\\", Challenge.factorGroup(33));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public voi","thisId":"1402","channelHost":"edabit.com","id":"1402","opcode":"1","channelId":"2","timestamp":"1652648880402"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"263\\\"]}\"]","thisId":"1403","channelHost":"edabit.com","id":"1403","opcode":"1","channelId":"2","timestamp":"1652648880528"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8005","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"263\\\",\\\"result\\\":{\\\"_id\\\":\\\"NgyZdeFBWJcBGXxjq\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String grabCity(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.12565445026178,\\\"familyId\\\":\\\"PwTdRJ7jZKknwmPWm\\\",\\\"instructions\\\":\\\"Write a function to return the city from each of these vacation spots.\\\\n\\\\n### Examples\\\\n```\\\\ngrabCity(\\\\\\\"[Last Day!] Beer Festival [Munich]\\\\\\\") ➞ \\\\\\\"Munich\\\\\\\"\\\\n\\\\ngrabCity(\\\\\\\"Cheese Factory Tour [Portland]\\\\\\\") ➞ \\\\\\\"Portland\\\\\\\"\\\\n\\\\ngrabCity(\\\\\\\"[50% Off!][Group Tours Included] 5-Day Trip to Onsen [Kyoto]\\\\\\\") ➞ \\\\\\\"Kyoto\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nThere may be additional brackets, but the city will always be in the last bracket pair.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"Munich\\\\\\\", Challenge.grabCity(\\\\\\\"[Last Day!] Beer Festival [Munich]","thisId":"1404","channelHost":"edabit.com","id":"1404","opcode":"1","channelId":"2","timestamp":"1652648880531"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"261\\\"]}\"]","thisId":"1405","channelHost":"edabit.com","id":"1405","opcode":"1","channelId":"2","timestamp":"1652648880636"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"11014","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"261\\\",\\\"result\\\":{\\\"_id\\\":\\\"LJh54oryEc3tkagzD\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String correctSpacing(String sentence) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.125,\\\"familyId\\\":\\\"7ZbWw6eYYZ4KpD9tr\\\",\\\"instructions\\\":\\\"Additional spaces have been added to a sentence. Return the correct sentence by removing them. All words should be separated by one space, and there should be no spaces at the beginning or end of the sentence.\\\\n\\\\n### Examples\\\\n```\\\\ncorrectSpacing(\\\\\\\"The film   starts       at      midnight. \\\\\\\")\\\\n➞ \\\\\\\"The film starts at midnight.\\\\\\\"\\\\n\\\\ncorrectSpacing(\\\\\\\"The     waves were crashing  on the     shore.   \\\\\\\")\\\\n➞ \\\\\\\"The waves were crashing on the shore.\\\\\\\"\\\\n\\\\ncorrectSpacing(\\\\\\\" Always look on    the bright   side of  life.\\\\\\\")\\\\n➞ \\\\\\\"Always look on the bright side of life.\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.","thisId":"1406","channelHost":"edabit.com","id":"1406","opcode":"1","channelId":"2","timestamp":"1652648880640"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"264\\\"]}\"]","thisId":"1407","channelHost":"edabit.com","id":"1407","opcode":"1","channelId":"2","timestamp":"1652648880756"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7425","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"264\\\",\\\"result\\\":{\\\"_id\\\":\\\"FHJ7SPdj7hChTS5LW\\\",\\\"author\\\":\\\"rubens\\\",\\\"authorId\\\":\\\"XhzKztoQYYQzZ2c7o\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static int countUnique(String s1, String s2) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.125748502994012,\\\"familyId\\\":\\\"tkhF63onqat5Hjspq\\\",\\\"instructions\\\":\\\"Given two strings, create a function that returns the total number of unique characters from the combined string.\\\\n\\\\n### Examples\\\\n```\\\\ncountUnique(\\\\\\\"apple\\\\\\\", \\\\\\\"play\\\\\\\") ➞ 5\\\\n// \\\\\\\"appleplay\\\\\\\" has 5 unique characters:\\\\n// \\\\\\\"a\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"l\\\\\\\", \\\\\\\"p\\\\\\\", \\\\\\\"y\\\\\\\"\\\\n\\\\ncountUnique(\\\\\\\"sore\\\\\\\", \\\\\\\"zebra\\\\\\\") ➞ 7\\\\n\\\\ncountUnique(\\\\\\\"a\\\\\\\", \\\\\\\"soup\\\\\\\") ➞ 5\\\\n```\\\\n\\\\n### Notes\\\\n- Each word will contain at least one letter.\\\\n- All words will be lower cased.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(5, Program.countUniqu","thisId":"1408","channelHost":"edabit.com","id":"1408","opcode":"1","channelId":"2","timestamp":"1652648880761"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"265\\\"]}\"]","thisId":"1409","channelHost":"edabit.com","id":"1409","opcode":"1","channelId":"2","timestamp":"1652648880865"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7179","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"265\\\",\\\"result\\\":{\\\"_id\\\":\\\"BN7hYwzFACGoDZux7\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String formatNum(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1284916201117319,\\\"familyId\\\":\\\"nLLn8sc4eWyoWQq5K\\\",\\\"instructions\\\":\\\"Create a function that takes a number as an argument and returns a string formatted to separate thousands.\\\\n\\\\n### Examples\\\\n```\\\\nformatNum(1000) ➞ \\\\\\\"1,000\\\\\\\"\\\\n\\\\nformatNum(100000) ➞ \\\\\\\"100,000\\\\\\\"\\\\n\\\\nformatNum(20) ➞ \\\\\\\"20\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nYou can expect a valid number for all test cases.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"1,000\\\\\\\", Challenge.formatNum(1000));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(\\\\\\\"1,000,000\\\\\\\", Challenge.formatNum(1000000));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test3() {","thisId":"1410","channelHost":"edabit.com","id":"1410","opcode":"1","channelId":"2","timestamp":"1652648880869"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"262\\\"]}\"]","thisId":"1411","channelHost":"edabit.com","id":"1411","opcode":"1","channelId":"2","timestamp":"1652648881030"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"13793","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"262\\\",\\\"result\\\":{\\\"_id\\\":\\\"EmRPehwiJFk6rf2iD\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static String[] isFourLetters(String[] s) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.125,\\\"familyId\\\":\\\"45cib5NYHNR9akoMB\\\",\\\"instructions\\\":\\\"Create a function that takes an array of strings and returns the words that are exactly four letters.\\\\n\\\\n### Examples\\\\n```\\\\nisFourLetters([\\\\\\\"Tomato\\\\\\\", \\\\\\\"Potato\\\\\\\", \\\\\\\"Pair\\\\\\\"]) ➞ [\\\\\\\"Pair\\\\\\\"]\\\\n\\\\nisFourLetters([\\\\\\\"Kangaroo\\\\\\\", \\\\\\\"Bear\\\\\\\", \\\\\\\"Fox\\\\\\\"]) ➞ [\\\\\\\"Bear\\\\\\\"]\\\\n\\\\nisFourLetters([\\\\\\\"Ryan\\\\\\\", \\\\\\\"Kieran\\\\\\\", \\\\\\\"Jason\\\\\\\", \\\\\\\"Matt\\\\\\\"]) ➞ [\\\\\\\"Ryan\\\\\\\", \\\\\\\"Matt\\\\\\\"]\\\\n```\\\\n\\\\n### Notes\\\\nYou can expect valid strings for all test cases.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassert","thisId":"1412","channelHost":"edabit.com","id":"1412","opcode":"1","channelId":"2","timestamp":"1652648881035"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"267\\\"]}\"]","thisId":"1413","channelHost":"edabit.com","id":"1413","opcode":"1","channelId":"2","timestamp":"1652648881161"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7881","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"267\\\",\\\"result\\\":{\\\"_id\\\":\\\"EiGazR6eGXHMx3hTy\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String stripSentence(String str, String chars) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.129496402877698,\\\"familyId\\\":\\\"koC4D9K44ijaHo6R9\\\",\\\"instructions\\\":\\\"Create a function which takes in a sentence `str` and a string of characters `chars` and return the sentence but with all the *specified characters* **removed**.\\\\n\\\\n### Examples\\\\n```\\\\nstripSentence(\\\\\\\"the quick brown fox jumps over the lazy dog\\\\\\\", \\\\\\\"aeiou\\\\\\\") ➞ \\\\\\\"th qck brwn fx jmps vr th lzy dg\\\\\\\"\\\\n\\\\nstripSentence(\\\\\\\"the hissing snakes sinisterly slither across the rustling leaves\\\\\\\", \\\\\\\"s\\\\\\\") ➞ \\\\\\\"the hiing nake initerly lither acro the rutling leave\\\\\\\"\\\\n\\\\nstripSentence(\\\\\\\"gone, reduced to atoms\\\\\\\", \\\\\\\"go, muscat nerd\\\\\\\") ➞ \\\\\\\"\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- You may be asked to remove punctuation and spaces.\\\\n- Return an *empty string* if ","thisId":"1414","channelHost":"edabit.com","id":"1414","opcode":"1","channelId":"2","timestamp":"1652648881164"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"268\\\"]}\"]","thisId":"1415","channelHost":"edabit.com","id":"1415","opcode":"1","channelId":"2","timestamp":"1652648881306"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"9471","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"268\\\",\\\"result\\\":{\\\"_id\\\":\\\"FQPo8iZ8vuPEj2dKB\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int halveCount(int a, int b) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.1295336787564767,\\\"familyId\\\":\\\"g7ZkuvvMTuFP3K765\\\",\\\"instructions\\\":\\\"Given two integers `a` and `b`, return how many times `a` can be **halved** while still being greater than `b`.\\\\n\\\\n### Examples\\\\n```\\\\nhalveCount(1324, 98) ➞ 3\\\\n// (1324 -> 662 -> 331 -> 165.5)\\\\n\\\\nhalveCount(624, 8) ➞ 6\\\\n// (624 -> 312 -> 156 -> 78 -> 39 -> 19.5 -> 9.75)\\\\n\\\\nhalveCount(1000, 3) ➞ 8\\\\n// (1000 -> 500 -> 250 -> 125 -> 62.5 -> 31.25 -> 15.625 -> 7.8125 -> 3.90625)\\\\n```\\\\n\\\\n### Notes\\\\nInteger `a` will always be able to be halved at least once in every test case.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(8, Challenge.halveCount(1891, 4","thisId":"1416","channelHost":"edabit.com","id":"1416","opcode":"1","channelId":"2","timestamp":"1652648881317"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"269\\\"]}\"]","thisId":"1417","channelHost":"edabit.com","id":"1417","opcode":"1","channelId":"2","timestamp":"1652648881433"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5213","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"269\\\",\\\"result\\\":{\\\"_id\\\":\\\"S6ScbuTciqryqTAAg\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Averages {\\\\n  public static int trimmedAverages(int[] arr) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.1323529411764706,\\\"familyId\\\":\\\"ptNr6WYWcYTCWmEQ7\\\",\\\"instructions\\\":\\\"Given an array of numbers, remove the largest and smallest numbers, and calculate the average of the remaining numbers.\\\\n\\\\n### Examples\\\\n```\\\\ntrimmedAverages([4, 5, 7, 100]) ➞ 6\\\\n// Average of 5 and 7\\\\n\\\\ntrimmedAverages([10, 25, 5, 15, 20]) ➞ 15\\\\n// Average of 10, 15 and 20\\\\n\\\\ntrimmedAverages([1, 1, 1]) ➞ 1\\\\n// 1\\\\n\\\\ntrimmedAverages([5, 4, 54, 4, 6, 46, 56]) ➞ 23\\\\n```\\\\n\\\\n### Notes\\\\n* Round to the nearest whole number.\\\\n* Array size is always greater than two.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals; \\\\nimport org.junit.Test; \\\\n\\\\npublic class AveragesTest {\\\\n\\\\t@Test\\\\n\\\\tpublic void test0","thisId":"1418","channelHost":"edabit.com","id":"1418","opcode":"1","channelId":"2","timestamp":"1652648881437"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"266\\\"]}\"]","thisId":"1419","channelHost":"edabit.com","id":"1419","opcode":"1","channelId":"2","timestamp":"1652648881554"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7014","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"266\\\",\\\"result\\\":{\\\"_id\\\":\\\"DfaTrBDZKjso6HBXs\\\",\\\"author\\\":\\\"rubens\\\",\\\"authorId\\\":\\\"XhzKztoQYYQzZ2c7o\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static boolean isPalindrome(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1288343558282208,\\\"familyId\\\":\\\"PQnKhpNLeSbknzwz3\\\",\\\"instructions\\\":\\\"A palindrome is a word, phrase, number or other sequence of characters which reads the same backward or forward, such as _madam_ or _kayak_.\\\\n\\\\nWrite a function that takes a string and determines whether it's a palindrome or not. The function should return a boolean (`true` or `false` value).\\\\n\\\\n### Examples\\\\n```\\\\nisPalindrome(\\\\\\\"Neuquen\\\\\\\") ➞ true\\\\n\\\\nisPalindrome(\\\\\\\"Not a palindrome\\\\\\\") ➞ false\\\\n\\\\nisPalindrome(\\\\\\\"A man, a plan, a cat, a ham, a yak, a yam, a hat, a canal-Panama!\\\\\\\") ➞ true\\\\n```\\\\n\\\\n### Notes\\\\n- Should be case insensitive.\\\\n- Special characters (punctuation or spaces) should be ignored.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.juni","thisId":"1420","channelHost":"edabit.com","id":"1420","opcode":"1","channelId":"2","timestamp":"1652648881564"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"270\\\"]}\"]","thisId":"1421","channelHost":"edabit.com","id":"1421","opcode":"1","channelId":"2","timestamp":"1652648881672"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"11028","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"270\\\",\\\"result\\\":{\\\"_id\\\":\\\"HPcr7REWMLTosoXME\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String lettersOnly(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.132404181184669,\\\"familyId\\\":\\\"WZ8Jb6NMpmtSXWG4v\\\",\\\"instructions\\\":\\\"Write a function that removes any non-letters from a string, returning a well-known film title.\\\\n\\\\n### Examples\\\\n```\\\\nlettersOnly(\\\\\\\"R!=:~0o0./c&}9k`60=y\\\\\\\") ➞ \\\\\\\"Rocky\\\\\\\"\\\\n\\\\nlettersOnly(\\\\\\\"^,]%4B|@56a![0{2m>b1&4i4\\\\\\\") ➞ \\\\\\\"Bambi\\\\\\\"\\\\n\\\\nlettersOnly(\\\\\\\"^U)6$22>8p).\\\\\\\") ➞ \\\\\\\"Up\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"Aladdin\\\\\\\", Challenge.lettersOnly(\\\\\\\",1|2))A^1<[_)?^]l[a`3+%!d@8-0_0d.*}i@&n?=\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(\\\\\\\"Up\\\\\\\", Challenge.lettersOnly(","thisId":"1422","channelHost":"edabit.com","id":"1422","opcode":"1","channelId":"2","timestamp":"1652648881676"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"271\\\"]}\"]","thisId":"1423","channelHost":"edabit.com","id":"1423","opcode":"1","channelId":"2","timestamp":"1652648881753"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8359","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"271\\\",\\\"result\\\":{\\\"_id\\\":\\\"z5hQaDNPSSqP9bN5t\\\",\\\"author\\\":\\\"rubens\\\",\\\"authorId\\\":\\\"XhzKztoQYYQzZ2c7o\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static int gcd(int a, int b) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1272727272727272,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"cHY5yw7RoTgy355D3\\\",\\\"instructions\\\":\\\"Write a function that calculates the **GCD** (Greatest Common Divisor) of two numbers **recursively**.\\\\n\\\\n### Examples\\\\n```\\\\ngcd(10, 20) ➞ 10\\\\n\\\\ngcd(1, 3) ➞ 1\\\\n\\\\ngcd(5, 7) ➞ 1\\\\n\\\\ngcd(2, 6) ➞ 2\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertThat(Challenge.gcd(10, 20), is(10));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test\\\\n\\\\tpublic void test2() {\\\\n\\\\t\\\\tassertThat(Challenge.gcd(1, 3), is(1));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test\\\\n\\\\tpublic void test3() {\\\\n\\\\t\\\\tassertThat(Challenge.gcd(5, 7),","thisId":"1424","channelHost":"edabit.com","id":"1424","opcode":"1","channelId":"2","timestamp":"1652648881756"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"272\\\"]}\"]","thisId":"1425","channelHost":"edabit.com","id":"1425","opcode":"1","channelId":"2","timestamp":"1652648881861"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"11966","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"272\\\",\\\"result\\\":{\\\"_id\\\":\\\"E2WdAPmgNJnbL5RvF\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int[] concat(int[] arr1, int[] arr2) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.132183908045977,\\\"familyId\\\":\\\"acWti5WtL9WMHySn9\\\",\\\"instructions\\\":\\\"Create a function to concatenate two integer arrays.\\\\n\\\\n### Examples\\\\n```\\\\nconcat([1, 3, 5], [2, 6, 8]) ➞ [1, 3, 5, 2, 6, 8]\\\\n\\\\nconcat([7, 8], [10, 9, 1, 1, 2]) ➞ [7, 8, 10, 9, 1, 1, 2]\\\\n\\\\nconcat([4, 5, 1], [3, 3, 3, 3, 3]) ➞ [4, 5, 1, 3, 3, 3, 3, 3]\\\\n```\\\\n\\\\n### Notes\\\\n- Don't forget to `return` the result.\\\\n- See **Resources** tab for more info.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertThat(Challenge.concat(new int[]{1, 3, 5}, new int[]{2, 6, 8}), is(new int[]{1, 3, 5, 2, 6, 8}));\\\\n\\\\t}\\\\n\\\\t\\\\","thisId":"1426","channelHost":"edabit.com","id":"1426","opcode":"1","channelId":"2","timestamp":"1652648881876"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"273\\\"]}\"]","thisId":"1427","channelHost":"edabit.com","id":"1427","opcode":"1","channelId":"2","timestamp":"1652648881988"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6516","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"273\\\",\\\"result\\\":{\\\"_id\\\":\\\"AwHcrbtX9vXXbARmX\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class FilterDigits {\\\\n\\\\tpublic static int[] filterByLength(int[] numbers, int length) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1333333333333333,\\\"familyId\\\":\\\"tngpkQi6mAEBCqrqn\\\",\\\"instructions\\\":\\\"Write a function that filters an array of numbers based on the criteria set for the number of digits.\\\\n\\\\n### Examples\\\\n```\\\\nfilterByLength([12, 2000, 13, 1979, 12, 17], 2)  ➞ [12, 13, 12, 17]\\\\n// An array of only the numbers with 2 digits.\\\\n\\\\nfilterByLength([88, 232, 4, 9721, 555], 3) ➞ [232, 555]\\\\n// An array of only the numbers with 3 digits.\\\\n\\\\nfilterByLength([2, 7, 8, 9, 1012], 1) ➞ [2, 7, 8, 9]\\\\n// An array of only the numbers with a single digit.\\\\n\\\\nfilterByLength([32, 88, 74, 91, 300, 4050], 1) ➞ []\\\\n// No numbers with only 1 digit exist, thus, an empty array.\\\\n\\\\nfilterByLength([5, 6, 8, 9], 1) ➞ [5, 6, 8, 9]\\\\n// All numbers in the ","thisId":"1428","channelHost":"edabit.com","id":"1428","opcode":"1","channelId":"2","timestamp":"1652648881993"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"274\\\"]}\"]","thisId":"1429","channelHost":"edabit.com","id":"1429","opcode":"1","channelId":"2","timestamp":"1652648882091"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"10220","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"274\\\",\\\"result\\\":{\\\"_id\\\":\\\"YNQQynxnFeoKNiqTM\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static String removeSpecialCharacters(String s) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1350210970464134,\\\"familyId\\\":\\\"LSWMsAZDoNXZPNXHF\\\",\\\"instructions\\\":\\\"Create a method that takes a string, removes all \\\\\\\"special\\\\\\\" characters (e.g. `., !, @, #, $, %, ^, &, \\\\\\\\, *, (, )`) and returns the new string. The only non-alphanumeric characters allowed are dashes `-`, underscores `_` and spaces.\\\\n\\\\n### Examples\\\\n```\\\\nremoveSpecialCharacters(\\\\\\\"The quick brown fox!\\\\\\\") ➞ \\\\\\\"The quick brown fox\\\\\\\"\\\\n\\\\nremoveSpecialCharacters(\\\\\\\"%fd76$fd(-)6GvKlO.\\\\\\\") ➞ \\\\\\\"fd76fd-6GvKlO\\\\\\\"\\\\n\\\\nremoveSpecialCharacters(\\\\\\\"D0n$c sed 0di0 du1\\\\\\\") ➞ \\\\\\\"D0nc sed 0di0 du1\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n","thisId":"1430","channelHost":"edabit.com","id":"1430","opcode":"1","channelId":"2","timestamp":"1652648882095"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"275\\\"]}\"]","thisId":"1431","channelHost":"edabit.com","id":"1431","opcode":"1","channelId":"2","timestamp":"1652648882218"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8331","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"275\\\",\\\"result\\\":{\\\"_id\\\":\\\"NWtZJ2wHGB7hz9iSd\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static boolean isValidPhoneNumber(String s) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1342281879194631,\\\"familyId\\\":\\\"k6RsurxMhkYxCCAPG\\\",\\\"instructions\\\":\\\"Create a method that accepts a string and returns `true` if it's in the format of a proper phone number and `false` if it's not. Assume any number between 0-9 (in the appropriate spots) will produce a valid phone number.\\\\n\\\\nThis is what a valid phone number looks like:\\\\n\\\\n```\\\\n(123) 456-7890\\\\n```\\\\n\\\\n### Examples\\\\n```\\\\nisValidPhoneNumber(\\\\\\\"(123) 456-7890\\\\\\\") ➞ true\\\\n\\\\nisValidPhoneNumber(\\\\\\\"1111)555 2345\\\\\\\") ➞ false\\\\n\\\\nisValidPhoneNumber(\\\\\\\"098) 123 4567\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nDon't forget the space after the closing parentheses.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class","thisId":"1432","channelHost":"edabit.com","id":"1432","opcode":"1","channelId":"2","timestamp":"1652648882222"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"276\\\"]}\"]","thisId":"1433","channelHost":"edabit.com","id":"1433","opcode":"1","channelId":"2","timestamp":"1652648882326"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"10771","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"276\\\",\\\"result\\\":{\\\"_id\\\":\\\"H5Tabm7omS9ia8Rce\\\",\\\"author\\\":\\\"rubens\\\",\\\"authorId\\\":\\\"XhzKztoQYYQzZ2c7o\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static int fib(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1370716510903427,\\\"familyId\\\":\\\"QJj3bsaHKSSRK7G3R\\\",\\\"instructions\\\":\\\"Fibonacci numbers are created in the following way:\\\\n\\\\n```\\\\nF(0) = 0\\\\nF(1) = 1\\\\n...\\\\nF(n) = F(n-2) + F(n-1)\\\\n```\\\\n\\\\nWrite a function that calculates the `nth` Fibonacci number.\\\\n\\\\n### Examples\\\\n```\\\\nfib(0) ➞ 0\\\\n\\\\nfib(1) ➞ 1\\\\n\\\\nfib(2) ➞ 1\\\\n\\\\nfib(8) ➞ 21\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(1, Program.fib(2));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(5, Program.fib(5));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test3() {\\\\n    assertEquals(21, Program.fib(8));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void ","thisId":"1434","channelHost":"edabit.com","id":"1434","opcode":"1","channelId":"2","timestamp":"1652648882329"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"279\\\"]}\"]","thisId":"1435","channelHost":"edabit.com","id":"1435","opcode":"1","channelId":"2","timestamp":"1652648882472"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"11563","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"279\\\",\\\"result\\\":{\\\"_id\\\":\\\"ce3CbX2KwdwaJxxra\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static String maskify(String s) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1373239436619718,\\\"familyId\\\":\\\"4jLsmTwy6iG5XFD4T\\\",\\\"instructions\\\":\\\"Usually when you sign up for an account to buy something, your credit card number, phone number or answer to a secret question is partially obscured in some way. Since someone could look over your shoulder, you don't want that shown on your screen. Hence, the website masks these strings.\\\\n\\\\nYour task is to create a method that takes a string, transforms all but the last four characters into \\\\\\\"#\\\\\\\" and returns the new masked string.\\\\n\\\\n### Examples\\\\n```\\\\nmaskify(\\\\\\\"4556364607935616\\\\\\\") ➞ \\\\\\\"############5616\\\\\\\"\\\\n\\\\nmaskify(\\\\\\\"64607935616\\\\\\\") ➞ \\\\\\\"#######5616\\\\\\\"\\\\n\\\\nmaskify(\\\\\\\"1\\\\\\\") ➞ \\\\\\\"1\\\\\\\"\\\\n\\\\nmaskify(\\\\\\\"\\\\\\\") ➞ \\\\\\\"\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n-","thisId":"1436","channelHost":"edabit.com","id":"1436","opcode":"1","channelId":"2","timestamp":"1652648882479"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"277\\\"]}\"]","thisId":"1437","channelHost":"edabit.com","id":"1437","opcode":"1","channelId":"2","timestamp":"1652648882574"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"9475","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"277\\\",\\\"result\\\":{\\\"_id\\\":\\\"jrh488nh4CyDmwMre\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int gcd(int n1, int n2) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.1372549019607843,\\\"familyId\\\":\\\"68av7urQAT94LRBoh\\\",\\\"instructions\\\":\\\"Write a function that returns the **greatest common divisor (GCD)** of two integers.\\\\n\\\\n### Examples\\\\n```\\\\ngcd(32, 8) ➞ 8\\\\n\\\\ngcd(8, 12) ➞ 4\\\\n\\\\ngcd(17, 13) ➞ 1\\\\n```\\\\n\\\\n### Notes\\\\n- Both values will be positive.\\\\n- The **GCD** is the largest factor that divides both numbers.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(8, Challenge.gcd(32, 8));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(4, Challenge.gcd(8, 12));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test3() {\\\\n    assertEquals(1, Challenge.gcd(17, 13));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n","thisId":"1438","channelHost":"edabit.com","id":"1438","opcode":"1","channelId":"2","timestamp":"1652648882578"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"281\\\"]}\"]","thisId":"1439","channelHost":"edabit.com","id":"1439","opcode":"1","channelId":"2","timestamp":"1652648882704"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"18148","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"281\\\",\\\"result\\\":{\\\"_id\\\":\\\"KpAxNFuZj79KzLDc5\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class LeftShift {\\\\n\\\\tpublic static int shiftToLeft(int x, int y) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1445427728613569,\\\"editorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"familyId\\\":\\\"cwbny3XmdhYffdA5H\\\",\\\"instructions\\\":\\\"The **left shift** operation is similar to **multiplication by powers of two**.\\\\n\\\\nSample calculation using the left shift operator (` << `):\\\\n```\\\\n10 << 3 = 10 * 2^3 = 10 * 8 = 80\\\\n-32 << 2 = -32 * 2^2 = -32 * 4 = -128\\\\n5 << 2 = 5 * 2^2 = 5 * 4 = 20\\\\n```\\\\n\\\\nWrite a function that **mimics** (without the use of **<<**) the left shift operator and returns the result from the two given integers.\\\\n\\\\n### Examples\\\\n```\\\\nshiftToLeft(5, 2) ➞ 20\\\\n\\\\nshiftToLeft(10, 3) ➞ 80\\\\n\\\\nshiftToLeft(-32, 2) ➞ -128\\\\n\\\\nshiftToLeft(-6, 5) ➞ -192\\\\n\\\\nshiftToLeft(12, 4) ➞ 192\\\\n\\\\nshiftToLeft(46, 6) ➞ 2944\\\\n```\\\\n\\\\n### Notes\\\\n- There will be no n","thisId":"1440","channelHost":"edabit.com","id":"1440","opcode":"1","channelId":"2","timestamp":"1652648882710"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"280\\\"]}\"]","thisId":"1441","channelHost":"edabit.com","id":"1441","opcode":"1","channelId":"2","timestamp":"1652648882889"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5224","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"280\\\",\\\"result\\\":{\\\"_id\\\":\\\"gPWZDe6rciBzYdz3B\\\",\\\"author\\\":\\\"Bonunu\\\",\\\"authorId\\\":\\\"av5QexsdPza9FsRCq\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static String reverse(String text) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.1428571428571428,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"YeMP6QRLrrhMA9D8Z\\\",\\\"instructions\\\":\\\"The \\\\\\\"Reverser\\\\\\\" takes a string as input and returns that string in reverse order, with the opposite case.\\\\n\\\\n### Examples\\\\n```\\\\nreverse(\\\\\\\"Hello World\\\\\\\") ➞ \\\\\\\"DLROw OLLEh\\\\\\\"\\\\n\\\\nreverse(\\\\\\\"ReVeRsE\\\\\\\") ➞ \\\\\\\"eSrEvEr\\\\\\\"\\\\n\\\\nreverse(\\\\\\\"Java compiler\\\\\\\") ➞ \\\\\\\"RELIPMOC AVAj\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nThere will be no punctuation in any of the test cases.\\\",\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"DLROw OLLEh\\\\\\\", Challenge.reverse(\\\\\\\"Hello World\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\","thisId":"1442","channelHost":"edabit.com","id":"1442","opcode":"1","channelId":"2","timestamp":"1652648882893"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"278\\\"]}\"]","thisId":"1443","channelHost":"edabit.com","id":"1443","opcode":"1","channelId":"2","timestamp":"1652648883171"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8771","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"278\\\",\\\"result\\\":{\\\"_id\\\":\\\"SSiwbDE337QvJ9FCZ\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String clearFog(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1375661375661377,\\\"familyId\\\":\\\"nBYvD9YTBZ73tFJx6\\\",\\\"instructions\\\":\\\"Create a function which returns the word in the string, but with all the `fog` letters removed. However, if the string is clear from fog, return `\\\\\\\"It's a clear day!\\\\\\\"`.\\\\n\\\\n### Examples\\\\n```\\\\nclearFog(\\\\\\\"sky\\\\\\\") ➞ \\\\\\\"It's a clear day!\\\\\\\"\\\\n\\\\nclearFog(\\\\\\\"fogfogFFfoooofftogffreogffesGgfOogfog\\\\\\\") ➞ \\\\\\\"trees\\\\\\\"\\\\n\\\\nclearFog(\\\\\\\"fogFogFogffoObirdsanffodthebffoeffoesGGGfOgFog\\\\\\\") ➞ \\\\\\\"birdsandthebees\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Hidden words won't include the letters `f`, `o` or `g`.\\\\n- Hidden words are always in lowercase.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n","thisId":"1444","channelHost":"edabit.com","id":"1444","opcode":"1","channelId":"2","timestamp":"1652648883175"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"282\\\"]}\"]","thisId":"1445","channelHost":"edabit.com","id":"1445","opcode":"1","channelId":"2","timestamp":"1652648883277"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4804","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"282\\\",\\\"result\\\":{\\\"_id\\\":\\\"dDjLzbMh2JqjTtG8J\\\",\\\"author\\\":\\\"Mateusz Mędrowski\\\",\\\"authorId\\\":\\\"hPx9H3YM8j2k94DNW\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static String digitalClock(int seconds) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.1428571428571428,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"5RnxudjTYuWBvJyg8\\\",\\\"instructions\\\":\\\"Write a function that takes the number of `seconds` and returns the digital format clock time as a string. Time should be counted from `00:00:00`.\\\\n\\\\n### Examples\\\\n```\\\\ndigitalClock(5025) ➞ \\\\\\\"01:23:45\\\\\\\"\\\\n// 5025 seconds is 1 hour, 23 mins, 45 secs.\\\\n\\\\ndigitalClock(61201) ➞ \\\\\\\"17:00:01\\\\\\\"\\\\n// No AM/PM. 24h format.\\\\n\\\\ndigitalClock(87000) ➞ \\\\\\\"00:10:00\\\\\\\"\\\\n// It's 00:10 next day.\\\\n```\\\\n\\\\n### Notes\\\\n- `seconds` is always greater than or equal to 0.\\\\n- Check the **Resources** tab if you get stuck.\\\",\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\","thisId":"1446","channelHost":"edabit.com","id":"1446","opcode":"1","channelId":"2","timestamp":"1652648883280"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"283\\\"]}\"]","thisId":"1447","channelHost":"edabit.com","id":"1447","opcode":"1","channelId":"2","timestamp":"1652648883396"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"9926","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"283\\\",\\\"result\\\":{\\\"_id\\\":\\\"j5mm8HjTZGZagrnz8\\\",\\\"author\\\":\\\"Kálmán Vilisics\\\",\\\"authorId\\\":\\\"Es4eX2stRpyoXeC7f\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int[] reverse(int[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1439114391143912,\\\"familyId\\\":\\\"tnTTsXzaz45X8cGK8\\\",\\\"instructions\\\":\\\"Write a function to reverse an array.\\\\n\\\\n### Examples\\\\n```\\\\nreverse([1, 2, 3, 4]) ➞ [4, 3, 2, 1]\\\\n\\\\nreverse([9, 9, 2, 3, 4]) ➞ [4, 3, 2, 9, 9]\\\\n\\\\nreverse([]) ➞ []\\\\n```\\\\n\\\\n### Notes\\\\n- Don't forget to `return` the result.\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're *really* stuck, unlock solutions in the **Solutions** tab.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertThat(Challenge.reverse(new int[]{5, -7, 8, 3}), is(new int[]{3, 8, -7, 5}));","thisId":"1448","channelHost":"edabit.com","id":"1448","opcode":"1","channelId":"2","timestamp":"1652648883402"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"284\\\"]}\"]","thisId":"1449","channelHost":"edabit.com","id":"1449","opcode":"1","channelId":"2","timestamp":"1652648883518"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"10154","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"284\\\",\\\"result\\\":{\\\"_id\\\":\\\"vs7xj6PwALtfpjkmX\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String capToFront(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.146341463414634,\\\"familyId\\\":\\\"gWwPnKrwZLEz2BXDu\\\",\\\"instructions\\\":\\\"Create a function that moves all capital letters to the front of a word.\\\\n\\\\n### Examples\\\\n```\\\\ncapToFront(\\\\\\\"hApPy\\\\\\\") ➞ \\\\\\\"APhpy\\\\\\\"\\\\n\\\\ncapToFront(\\\\\\\"moveMENT\\\\\\\") ➞ \\\\\\\"MENTmove\\\\\\\"\\\\n\\\\ncapToFront(\\\\\\\"shOrtCAKE\\\\\\\") ➞ \\\\\\\"OCAKEshrt\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nKeep the original relative order of the upper and lower case letters the same.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"APhpy\\\\\\\", Challenge.capToFront(\\\\\\\"hApPy\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(\\\\\\\"MENTmove\\\\\\\", Challenge.capToFront(\\\\\\\"moveME","thisId":"1450","channelHost":"edabit.com","id":"1450","opcode":"1","channelId":"2","timestamp":"1652648883522"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"285\\\"]}\"]","thisId":"1451","channelHost":"edabit.com","id":"1451","opcode":"1","channelId":"2","timestamp":"1652648883635"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6363","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"285\\\",\\\"result\\\":{\\\"_id\\\":\\\"CC7f9DpPfMMqmkfvC\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class FruitJuice {\\\\n\\\\tpublic static String getDrinkID(String flavor, String ml) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1573033707865168,\\\"quality\\\":4.638297872340425,\\\"familyId\\\":\\\"CcQiNuK9xxYQFvgCz\\\",\\\"instructions\\\":\\\"A fruit juice company tags their fruit juices by concatenating the first **three letters** of the words in a flavor's name and its **capacity**.\\\\n\\\\nCreate a function that creates the product IDs for the variety of fruit juices.\\\\n\\\\n### Examples\\\\n```\\\\ngetDrinkID(\\\\\\\"apple\\\\\\\", \\\\\\\"500ml\\\\\\\") ➞ \\\\\\\"APP500\\\\\\\"\\\\n\\\\ngetDrinkID(\\\\\\\"pineapple\\\\\\\", \\\\\\\"45ml\\\\\\\") ➞ \\\\\\\"PIN45\\\\\\\"\\\\n\\\\ngetDrinkID(\\\\\\\"passion fruit\\\\\\\", \\\\\\\"750ml\\\\\\\") ➞ \\\\\\\"PASFRU750\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Capacity will be given as a string and will always be given in **ml**.\\\\n- Return the product ID in **UPPERCASE**.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static or","thisId":"1452","channelHost":"edabit.com","id":"1452","opcode":"1","channelId":"2","timestamp":"1652648883638"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"286\\\"]}\"]","thisId":"1453","channelHost":"edabit.com","id":"1453","opcode":"1","channelId":"2","timestamp":"1652648883758"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7392","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"286\\\",\\\"result\\\":{\\\"_id\\\":\\\"FDauhMn4rAcsW7Goh\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class LargestEven {\\\\n\\\\tpublic static int probe(int[] r) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.16,\\\"familyId\\\":\\\"heardbZQqoTBPCxs6\\\",\\\"instructions\\\":\\\"Write a function that finds the **largest even number** in an array and returns `-1` if not found.\\\\n\\\\n### Examples\\\\n```\\\\nprobe([3, 7, 2, 1, 7, 9, 10, 13]) ➞ 10\\\\n\\\\nprobe([1, 3, 5, 7]) ➞ -1\\\\n\\\\nprobe([0, 19, 18973623]) ➞ 0\\\\n```\\\\n\\\\n### Notes\\\\n- Consider using the **modulo operator** `%` or the **bitwise and operator** `&`.\\\\n- The use of built-in methods, such as `Math.max()`,`Stream.sorted()`,  `IntStream.of()`, and even integer binary operators is favored.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals; \\\\nimport org.junit.Test; \\\\n\\\\npublic class LargestEvenTest {\\\\n\\\\t@Test\\\\n\\\\tpublic void test01() { \\\\n\\\\t\\\\tassertEquals(","thisId":"1454","channelHost":"edabit.com","id":"1454","opcode":"1","channelId":"2","timestamp":"1652648883761"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"287\\\"]}\"]","thisId":"1455","channelHost":"edabit.com","id":"1455","opcode":"1","channelId":"2","timestamp":"1652648883860"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"10929","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"287\\\",\\\"result\\\":{\\\"_id\\\":\\\"mkxS3CnW98Ci3kwCh\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static String makeTitle(String s) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1631799163179917,\\\"familyId\\\":\\\"ysvxGEFYv7k4m4Q3s\\\",\\\"instructions\\\":\\\"Create a method that takes a string as an argument and converts the first character of each word to uppercase. Return the newly formatted string.\\\\n\\\\n### Examples\\\\n```\\\\nmakeTitle(\\\\\\\"This is a title\\\\\\\") ➞ \\\\\\\"This Is A Title\\\\\\\"\\\\n\\\\nmakeTitle(\\\\\\\"capitalize every word\\\\\\\") ➞ \\\\\\\"Capitalize Every Word\\\\\\\"\\\\n\\\\nmakeTitle(\\\\\\\"I Like Pizza\\\\\\\") ➞ \\\\\\\"I Like Pizza\\\\\\\"\\\\n\\\\nmakeTitle(\\\\\\\"PIZZA PIZZA PIZZA\\\\\\\") ➞ \\\\\\\"PIZZA PIZZA PIZZA\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- You can expect a valid string for each test case.\\\\n- Some words may contain more than one uppercase letter (see example #4).\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n","thisId":"1456","channelHost":"edabit.com","id":"1456","opcode":"1","channelId":"2","timestamp":"1652648883865"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"288\\\"]}\"]","thisId":"1457","channelHost":"edabit.com","id":"1457","opcode":"1","channelId":"2","timestamp":"1652648883973"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7170","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"288\\\",\\\"result\\\":{\\\"_id\\\":\\\"NjJ9gGNPGaQGxTxCc\\\",\\\"author\\\":\\\"Mateusz Mędrowski\\\",\\\"authorId\\\":\\\"hPx9H3YM8j2k94DNW\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean PrimeNumberInRange(int n1, int n2) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.1711711711711712,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"3Wi4G53YsY29spEns\\\",\\\"instructions\\\":\\\"Create a function that returns `true` if there's at least one prime number in the given range (`n1` to `n2` (inclusive)), `false` otherwise.\\\\n\\\\n### Examples\\\\n```\\\\nPrimeNumberInRange(10, 15) ➞ true\\\\n// Prime numbers in range: 11, 13\\\\n\\\\nPrimeNumberInRange(62, 66) ➞ false\\\\n// No prime numbers in range.\\\\n\\\\nPrimeNumberInRange(3, 5) ➞ true\\\\n// Prime numbers in range: 3, 5\\\\n```\\\\n\\\\n### Notes\\\\n- `n2` is always greater than `n1`.\\\\n- `n1` and `n2` are always positive.\\\\n- 0 and 1 aren't prime numbers.\\\",\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\","thisId":"1458","channelHost":"edabit.com","id":"1458","opcode":"1","channelId":"2","timestamp":"1652648883977"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"289\\\"]}\"]","thisId":"1459","channelHost":"edabit.com","id":"1459","opcode":"1","channelId":"2","timestamp":"1652648884082"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"9441","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"289\\\",\\\"result\\\":{\\\"_id\\\":\\\"vENakDEYEDKFGPSEb\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String unstretch(String word) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1647727272727273,\\\"familyId\\\":\\\"eYCSuTL4mD6vwTRHj\\\",\\\"instructions\\\":\\\"Write a function that takes a string, and returns a new string with any duplicate *consecutive* letters removed.\\\\n\\\\n### Examples\\\\n```\\\\nunstretch(\\\\\\\"ppoeemm\\\\\\\") ➞ \\\\\\\"poem\\\\\\\"\\\\n\\\\nunstretch(\\\\\\\"wiiiinnnnd\\\\\\\") ➞ \\\\\\\"wind\\\\\\\"\\\\n\\\\nunstretch(\\\\\\\"ttiiitllleeee\\\\\\\") ➞ \\\\\\\"title\\\\\\\"\\\\n\\\\nunstretch(\\\\\\\"cccccaaarrrbbonnnnn\\\\\\\") ➞ \\\\\\\"carbon\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nFinal strings *won't* include words with double letters (e.g. \\\\\\\"passing\\\\\\\", \\\\\\\"lottery\\\\\\\").\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"lost\\\\\\\", Challenge.unstretch(\\\\\\\"llossttttt\\\\\\\"))","thisId":"1460","channelHost":"edabit.com","id":"1460","opcode":"1","channelId":"2","timestamp":"1652648884105"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"290\\\"]}\"]","thisId":"1461","channelHost":"edabit.com","id":"1461","opcode":"1","channelId":"2","timestamp":"1652648884222"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8892","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"290\\\",\\\"result\\\":{\\\"_id\\\":\\\"3ZooM5R5P63w5bPCv\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static int[] indexOfCaps(String s) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1666666666666667,\\\"familyId\\\":\\\"Nqc2tgbCzsfLQAsmM\\\",\\\"instructions\\\":\\\"Create a method that takes a single string as argument and returns an ordered array containing the indices of all capital letters in the string.\\\\n\\\\n### Examples\\\\n```\\\\nindexOfCaps(\\\\\\\"eDaBiT\\\\\\\") ➞ [1, 3, 5]\\\\n\\\\nindexOfCaps(\\\\\\\"eQuINoX\\\\\\\") ➞ [1, 3, 4, 6]\\\\n\\\\nindexOfCaps(\\\\\\\"determine\\\\\\\") ➞ []\\\\n\\\\nindexOfCaps(\\\\\\\"STRIKE\\\\\\\") ➞ [0, 1, 2, 3, 4, 5]\\\\n\\\\nindexOfCaps(\\\\\\\"sUn\\\\\\\") ➞ [1]\\\\n```\\\\n\\\\n### Notes\\\\n- Return an empty array if no uppercase letters are found in the string.\\\\n- Special characters ($#@%) and numbers will be included in some test cases.\\\\n- Assume all words do not have duplicate letters.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimpo","thisId":"1462","channelHost":"edabit.com","id":"1462","opcode":"1","channelId":"2","timestamp":"1652648884227"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"291\\\"]}\"]","thisId":"1463","channelHost":"edabit.com","id":"1463","opcode":"1","channelId":"2","timestamp":"1652648884324"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8754","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"291\\\",\\\"result\\\":{\\\"_id\\\":\\\"7eoAWhG46SrA3tvLK\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"import java.util.Map;\\\\n\\\\npublic class Program {\\\\n\\\\tpublic static String[] getValues(Map<String,String> dict) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.1871657754010696,\\\"familyId\\\":\\\"5f4FKbN6cdSbWAXzd\\\",\\\"instructions\\\":\\\"Create a method that takes a `Map<String, String>` and return the values as a separate array. Return the keys sorted alphabetically, and their corresponding values in the same order.\\\\n\\\\n### Examples\\\\n```\\\\ngetValues({ \\\\\\\"a\\\\\\\": \\\\\\\"1\\\\\\\", \\\\\\\"b\\\\\\\": \\\\\\\"2\\\\\\\", \\\\\\\"c\\\\\\\": \\\\\\\"3\\\\\\\" } )\\\\n➞ [\\\\\\\"1\\\\\\\", \\\\\\\"2\\\\\\\", \\\\\\\"3\\\\\\\"]\\\\n\\\\ngetValues({ \\\\\\\"a\\\\\\\": \\\\\\\"Apple\\\\\\\", \\\\\\\"b\\\\\\\": \\\\\\\"Microsoft\\\\\\\", \\\\\\\"c\\\\\\\": \\\\\\\"Google\\\\\\\" })\\\\n➞ [\\\\\\\"Apple\\\\\\\", \\\\\\\"Microsoft\\\\\\\", \\\\\\\"Google\\\\\\\"]\\\\n\\\\ngetValues({ \\\\\\\"key1\\\\\\\": \\\\\\\"true\\\\\\\", \\\\\\\"key2\\\\\\\": \\\\\\\"false\\\\\\\", \\\\\\\"key3\\\\\\\": \\\\\\\"undefined\\\\\\\" })\\\\n➞ [\\\\\\\"true\\\\\\\", \\\\\\\"false\\\\\\\", \\\\\\\"","thisId":"1464","channelHost":"edabit.com","id":"1464","opcode":"1","channelId":"2","timestamp":"1652648884327"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"292\\\"]}\"]","thisId":"1465","channelHost":"edabit.com","id":"1465","opcode":"1","channelId":"2","timestamp":"1652648884445"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"35368","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"292\\\",\\\"result\\\":{\\\"_id\\\":\\\"Rs23pTNpM6k5M2ThH\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int solutions(int a, int b, int c) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.2792127921279213,\\\"familyId\\\":\\\"WTn5v8oe6xtkpuZLY\\\",\\\"instructions\\\":\\\"A quadratic equation `a x² + b x + c = 0` has either 0, 1, or 2 distinct solutions for real values of `x`. Given `a`, `b` and `c`, you should return the number of solutions to the equation.\\\\n\\\\n### Examples\\\\n```\\\\nsolutions(1, 0, -1) ➞ 2\\\\n// x² - 1 = 0 has two solutions (x = 1 and x = -1).\\\\n\\\\nsolutions(1, 0, 0) ➞ 1\\\\n// x² = 0 has one solution (x = 0).\\\\n\\\\nsolutions(1, 0, 1) ➞ 0\\\\n// x² + 1 = 0 has no real solutions.\\\\n```\\\\n\\\\n### Notes\\\\n- You do not have to calculate the solutions, just return how many there are.\\\\n- `a` will always be non-zero.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\","thisId":"1466","channelHost":"edabit.com","id":"1466","opcode":"1","channelId":"2","timestamp":"1652648884450"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"296\\\"]}\"]","thisId":"1467","channelHost":"edabit.com","id":"1467","opcode":"1","channelId":"2","timestamp":"1652648884563"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"19629","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"296\\\",\\\"result\\\":{\\\"_id\\\":\\\"J26bZ6Fv6bWEisDYj\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class SideLengths {\\\\n  public static double[] otherSides(int n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.3612774451097804,\\\"familyId\\\":\\\"8t9p2grvH9AhYXFv4\\\",\\\"instructions\\\":\\\"Given the shortest side of a `30° by 60° by 90°` triangle, find out the other two sides. Return the longest side and medium-length side in that order.\\\\n\\\\n### Examples\\\\n```\\\\notherSides(1) ➞ [2.0, 1.73]\\\\n\\\\notherSides(12) ➞ [24.0, 20.0]\\\\n\\\\notherSides(2) ➞ [4.0, 3.46]\\\\n\\\\notherSides(3) ➞ [6.0, 5.2]\\\\n```\\\\n\\\\n### Notes\\\\n- `30° by 60° by 90°` triangles always follow this rule: let's say the shortest side length is x units, the hypotenuse would be 2x units and the other side would be x * square root of 3.\\\\n- The **results** in the **Tests** are rounded up to `2` decimal places.\\\\n- Return the **result** as an **array**.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":fal","thisId":"1468","channelHost":"edabit.com","id":"1468","opcode":"1","channelId":"2","timestamp":"1652648884597"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"293\\\"]}\"]","thisId":"1469","channelHost":"edabit.com","id":"1469","opcode":"1","channelId":"2","timestamp":"1652648884704"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"65618","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"293\\\",\\\"result\\\":{\\\"_id\\\":\\\"rzpucPyoyEtXPo2BG\\\",\\\"author\\\":\\\"Caleb Miller\\\",\\\"authorId\\\":\\\"2QziknsznNeMPRh3g\\\",\\\"code\\\":\\\"import java.util.*;\\\\n\\\\npublic class Program {\\\\n\\\\tpublic static int[] arrayOfMultiples(int num, int length) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.309324399776661,\\\"familyId\\\":\\\"GQsw4yAMRk5S5aB5u\\\",\\\"instructions\\\":\\\"Create a function that takes two numbers as arguments (`num`, `length`) and returns an array of multiples of `num` until the array length reaches `length`.\\\\n\\\\n### Examples\\\\n```\\\\narrayOfMultiples(7, 5) ➞ [7, 14, 21, 28, 35]\\\\n\\\\narrayOfMultiples(12, 10) ➞ [12, 24, 36, 48, 60, 72, 84, 96, 108, 120]\\\\n\\\\narrayOfMultiples(17, 6) ➞ [17, 34, 51, 68, 85, 102]\\\\n```\\\\n\\\\n### Notes\\\\nNotice that `num` is also included in the returned array.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertArrayEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n\\\\t\\\\tassertArrayEquals(new i","thisId":"1470","channelHost":"edabit.com","id":"1470","opcode":"1","channelId":"2","timestamp":"1652648884710"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"294\\\"]}\"]","thisId":"1471","channelHost":"edabit.com","id":"1471","opcode":"1","channelId":"2","timestamp":"1652648884828"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"27313","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"294\\\",\\\"result\\\":{\\\"_id\\\":\\\"7fHsizQrTLXsPWMyH\\\",\\\"author\\\":\\\"Erik Jacob\\\",\\\"authorId\\\":\\\"62Q2HcfLE6SGphZkT\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static int warOfNumbers(int[]numbers){\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.3513513513513513,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"xXMPGxkYuHZ67Fp7F\\\",\\\"instructions\\\":\\\"There's a great war between the even and odd numbers. Many numbers already lost their lives in this war and it's your task to end this. You have to determine which group sums larger: the evens, or the odds. The larger group wins.\\\\n\\\\nCreate a function that takes an array of integers, sums the even and odd numbers separately, then returns the difference between the sum of the even and odd numbers.\\\\n\\\\n### Examples\\\\n```\\\\nwarOfNumbers([2, 8, 7, 5]) ➞ 2\\\\n// 2 + 8 = 10\\\\n// 7 + 5 = 12\\\\n// 12 is larger than 10\\\\n// So we return 12 - 10 = 2\\\\n\\\\nwarOfNumbers([12, 90, 75]) ➞ 27\\\\n\\\\nwarOfNumbers([5, 9, 45, 6, 2, 7, 34, 8, 6, 90, 5, 243]) ➞ 168\\\\n`","thisId":"1472","channelHost":"edabit.com","id":"1472","opcode":"1","channelId":"2","timestamp":"1652648884832"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"297\\\"]}\"]","thisId":"1473","channelHost":"edabit.com","id":"1473","opcode":"1","channelId":"2","timestamp":"1652648884962"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"28692","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"297\\\",\\\"result\\\":{\\\"_id\\\":\\\"hf2THAoQRQbAx2jc9\\\",\\\"author\\\":\\\"rubens\\\",\\\"authorId\\\":\\\"XhzKztoQYYQzZ2c7o\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static int sum(int[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.3712021136063408,\\\"familyId\\\":\\\"Ag7qNJfvPwKoxuCXr\\\",\\\"instructions\\\":\\\"Write a function that finds the sum of an array. **Make your function recursive.**\\\\n\\\\n### Examples\\\\n```\\\\nsum([1, 2, 3, 4]) ➞ 10\\\\n\\\\nsum([1, 2]) ➞ 3\\\\n\\\\nsum([1]) ➞ 1\\\\n\\\\nsum([]) ➞ 0\\\\n```\\\\n\\\\n### Notes\\\\n- Return `0` for an empty array.\\\\n- Check the **Resources** tab for info on recursion.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertThat(Program.sum(new int[]{1, 2, 3, 4}), is(10));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test\\\\n\\\\tpublic void test2() {\\\\n\\\\t\\\\tassertThat(Program.sum(new int[]{-1, -1, -1}), is(-3));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test\\\\n\\\\tpu","thisId":"1474","channelHost":"edabit.com","id":"1474","opcode":"1","channelId":"2","timestamp":"1652648884987"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"295\\\"]}\"]","thisId":"1475","channelHost":"edabit.com","id":"1475","opcode":"1","channelId":"2","timestamp":"1652648885085"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"29747","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"295\\\",\\\"result\\\":{\\\"_id\\\":\\\"7Tb7qMDQHtz3xpydd\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int[][] squarePatch(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.3668965517241378,\\\"familyId\\\":\\\"ZcQfxYZR6buPjvfBh\\\",\\\"instructions\\\":\\\"Create a function that takes an integer and outputs an `n x n` square solely consisting of the integer `n`.\\\\n\\\\n### Examples\\\\n```\\\\nsquarePatch(3) ➞ [\\\\n  [3, 3, 3],\\\\n  [3, 3, 3],\\\\n  [3, 3, 3]\\\\n]\\\\n\\\\nsquarePatch(5) ➞ [\\\\n  [5, 5, 5, 5, 5],\\\\n  [5, 5, 5, 5, 5],\\\\n  [5, 5, 5, 5, 5],\\\\n  [5, 5, 5, 5, 5],\\\\n  [5, 5, 5, 5, 5]\\\\n]\\\\n\\\\nsquarePatch(1) ➞ [\\\\n  [1]\\\\n]\\\\n\\\\nsquarePatch(0) ➞ []\\\\n```\\\\n\\\\n### Notes\\\\n- `n >= 0`.\\\\n- If `n = 0`, return an empty array.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertThat(Challenge","thisId":"1476","channelHost":"edabit.com","id":"1476","opcode":"1","channelId":"2","timestamp":"1652648885107"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"298\\\"]}\"]","thisId":"1477","channelHost":"edabit.com","id":"1477","opcode":"1","channelId":"2","timestamp":"1652648885177"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8808","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"298\\\",\\\"result\\\":{\\\"_id\\\":\\\"7bupZ6FmuAQwJE6CL\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Calculator { \\\\n\\\\tpublic static Object basicCalculator(a, o, b) {\\\\n\\\\t\\\\tint result = 0;\\\\n\\\\t\\\\tif(O == \\\\\\\"+\\\\\\\") return a + b;\\\\n\\\\t\\\\tif(o != \\\\\\\"-\\\\\\\") return a - b;\\\\n\\\\t\\\\tif(o != \\\\\\\"/\\\\\\\" || b == 0) return a / b;\\\\n\\\\t\\\\tif(0 == \\\\\\\"*\\\\\\\") return a * b;\\\\n\\\\t\\\\treturn result;\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4257425742574257,\\\"familyId\\\":\\\"jHQmmRFwYCRxXqkdj\\\",\\\"instructions\\\":\\\"**Mubashir** created a function that takes two numbers `a` and `b` and an operator `o`. His function should return the result of the corresponding mathematical function on both numbers. If the operator is not one of the specified characters `+, -, /, *`, or if there is a division by zero, the function should return `null`. Help him by fixing the code in the code tab to pass this challenge.\\\\n\\\\nLook at the examples below to get an idea of what the function should d","thisId":"1478","channelHost":"edabit.com","id":"1478","opcode":"1","channelId":"2","timestamp":"1652648885189"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"299\\\"]}\"]","thisId":"1479","channelHost":"edabit.com","id":"1479","opcode":"1","channelId":"2","timestamp":"1652648885289"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8834","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"299\\\",\\\"result\\\":{\\\"_id\\\":\\\"Sej5nsmmjBAXv6hHv\\\",\\\"author\\\":\\\"K3B\\\",\\\"authorId\\\":\\\"zE46SymvixkeFJmPM\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static int letterCounter(char[][] arr, char c) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.3571428571428572,\\\"familyId\\\":\\\"xTcAhzahd9aXNYpPw\\\",\\\"instructions\\\":\\\"Create a function that counts the number of times a particular letter shows up in the word search.\\\\n\\\\n### Examples\\\\n```\\\\nletterCounter([\\\\n  [\\\\\\\"D\\\\\\\", \\\\\\\"E\\\\\\\", \\\\\\\"Y\\\\\\\", \\\\\\\"H\\\\\\\", \\\\\\\"A\\\\\\\", \\\\\\\"D\\\\\\\"],\\\\n  [\\\\\\\"C\\\\\\\", \\\\\\\"B\\\\\\\", \\\\\\\"Z\\\\\\\", \\\\\\\"Y\\\\\\\", \\\\\\\"J\\\\\\\", \\\\\\\"K\\\\\\\"],\\\\n  [\\\\\\\"D\\\\\\\", \\\\\\\"B\\\\\\\", \\\\\\\"C\\\\\\\", \\\\\\\"A\\\\\\\", \\\\\\\"M\\\\\\\", \\\\\\\"N\\\\\\\"],\\\\n  [\\\\\\\"F\\\\\\\", \\\\\\\"G\\\\\\\", \\\\\\\"G\\\\\\\", \\\\\\\"R\\\\\\\", \\\\\\\"S\\\\\\\", \\\\\\\"R\\\\\\\"],\\\\n  [\\\\\\\"V\\\\\\\", \\\\\\\"X\\\\\\\", \\\\\\\"H\\\\\\\", \\\\\\\"A\\\\\\\", \\\\\\\"S\\\\\\\", \\\\\\\"S\\\\\\\"]\\\\n], \\\\\\\"D\\\\\\\") ➞ 3\\\\n\\\\n// \\\\\\\"D\\\\\\\" shows up 3 times: twice in the first row, once in the third row.\\\\n\\\\nletterCounter([\\\\n  [\\\\\\\"D\\\\\\\", \\\\\\\"E\\\\\\\", \\\\\\\"Y\\\\\\\", \\\\\\\"H\\\\\\\", \\\\\\\"A\\\\\\\", \\","thisId":"1480","channelHost":"edabit.com","id":"1480","opcode":"1","channelId":"2","timestamp":"1652648885295"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"300\\\"]}\"]","thisId":"1481","channelHost":"edabit.com","id":"1481","opcode":"1","channelId":"2","timestamp":"1652648885407"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8863","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"300\\\",\\\"result\\\":{\\\"_id\\\":\\\"eHA9jMjzADDo6PhuJ\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class BasicOperation {\\\\n  public static int operation(String a, String b, String op) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.4189944134078212,\\\"familyId\\\":\\\"mE4oAdLWjPc8pZd2K\\\",\\\"instructions\\\":\\\"Write a function that does the following for the given values: **add**, **subtract**, **divide** and **multiply**. These are simply referred to as the **basic arithmetic operations**. The variables have to be defined, but in this challenge they will be defined for you. All you have to do is check the variables, do some string to integer conversions, use some `if` conditions, and apply the arithmetic operation.\\\\n\\\\n\\\\n### Examples\\\\n```\\\\noperation(\\\\\\\"1\\\\\\\",  \\\\\\\"2\\\\\\\",  \\\\\\\"add\\\\\\\" ) ➞ 3\\\\n\\\\noperation(\\\\\\\"4\\\\\\\",  \\\\\\\"5\\\\\\\",  \\\\\\\"subtract\\\\\\\") ➞ -1\\\\n\\\\noperation(\\\\\\\"6\\\\\\\",  \\\\\\\"3\\\\\\\",  \\\\\\\"divide\\\\\\\") ➞ 2\\\\n```\\\\n\\\\n\\\\n### Notes\\\\n- The numbers and operati","thisId":"1482","channelHost":"edabit.com","id":"1482","opcode":"1","channelId":"2","timestamp":"1652648885410"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"301\\\"]}\"]","thisId":"1483","channelHost":"edabit.com","id":"1483","opcode":"1","channelId":"2","timestamp":"1652648885549"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"12447","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"301\\\",\\\"result\\\":{\\\"_id\\\":\\\"vFLhYANAZQGKTtxA2\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class NumericString {\\\\n\\\\tpublic static String add(String a, String b) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4277456647398843,\\\"familyId\\\":\\\"KH66LYvN2KJJPymm4\\\",\\\"instructions\\\":\\\"Create a function that takes two number strings and returns their sum as a string.\\\\n\\\\n### Examples\\\\n```\\\\nadd(\\\\\\\"111\\\\\\\", \\\\\\\"111\\\\\\\") ➞ \\\\\\\"222\\\\\\\"\\\\n\\\\nadd(\\\\\\\"10\\\\\\\", \\\\\\\"80\\\\\\\") ➞ \\\\\\\"90\\\\\\\"\\\\n\\\\nadd(\\\\\\\"\\\\\\\", \\\\\\\"20\\\\\\\") ➞ \\\\\\\"Invalid Operation\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nReturn `\\\\\\\"Invalid Operation\\\\\\\"` If either input is `\\\\\\\"\\\\\\\"` or `null`.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals;\\\\nimport org.junit.Test;\\\\n\\\\npublic class NumericStringTests {\\\\n\\\\tprivate String[][] strVector = new String[][] {\\\\n\\\\t\\\\t{\\\\\\\"91\\\\\\\", \\\\\\\"19\\\\\\\"}, {\\\\\\\"123456789\\\\\\\", \\\\\\\"987654322\\\\\\\"}, {\\\\\\\"9999999\\\\\\\", \\","thisId":"1484","channelHost":"edabit.com","id":"1484","opcode":"1","channelId":"2","timestamp":"1652648885553"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"302\\\"]}\"]","thisId":"1485","channelHost":"edabit.com","id":"1485","opcode":"1","channelId":"2","timestamp":"1652648885650"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"27246","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"302\\\",\\\"result\\\":{\\\"_id\\\":\\\"3S8XppR6Yf5mXPxij\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String rps(String s1, String s2) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4264305177111716,\\\"familyId\\\":\\\"wogwZZTJhNuLT3ZfH\\\",\\\"instructions\\\":\\\"Create a function which simulates the game \\\\\\\"rock, paper, scissors\\\\\\\". The function takes the input of both players (rock, paper or scissors), first parameter from first player, second from second player. The function returns the result as such:\\\\n\\\\n- \\\\\\\"Player 1 wins\\\\\\\"\\\\n- \\\\\\\"Player 2 wins\\\\\\\"\\\\n- \\\\\\\"TIE\\\\\\\" (if both inputs are the same)\\\\n\\\\nThe rules of rock, paper, scissors, if not known:\\\\n\\\\n- Both players have to say either \\\\\\\"rock\\\\\\\", \\\\\\\"paper\\\\\\\" or \\\\\\\"scissors\\\\\\\" at the same time.\\\\n- Rock beats scissors, paper beats rock, scissors beat paper.\\\\n\\\\n### Examples\\\\n```\\\\nrps(\\\\\\\"rock\\\\\\\", \\\\\\\"paper\\\\\\\") ➞ \\\\\\\"Player 2 wins\\\\\\\"\\\\n\\\\nrps(\\\\\\\"paper\\\\\\\", \\\\\\\"rock","thisId":"1486","channelHost":"edabit.com","id":"1486","opcode":"1","channelId":"2","timestamp":"1652648885654"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"303\\\"]}\"]","thisId":"1487","channelHost":"edabit.com","id":"1487","opcode":"1","channelId":"2","timestamp":"1652648885764"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"16790","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"303\\\",\\\"result\\\":{\\\"_id\\\":\\\"sBRPyEAjBfWKsnTaZ\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int quadraticEquation(int a, int b, int c) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.4396551724137931,\\\"familyId\\\":\\\"qfWzP54oDKuHhiWG5\\\",\\\"instructions\\\":\\\"Create a function to find only the root value of `x` in any quadratic equation `ax^2 + bx  + c`. The function will take three arguments:\\\\n\\\\n- `a` as the coefficient of `x^2`\\\\n- `b` as the coefficient of `x`\\\\n- `c` as the constant term\\\\n\\\\n### Examples\\\\n```\\\\nquadraticEquation(1, 2, -3) ➞ 1\\\\n\\\\nquadraticEquation(2, -7, 3) ➞ 3\\\\n\\\\nquadraticEquation(1, -12, -28) ➞ 14\\\\n```\\\\n\\\\n### Notes\\\\n- Quadratic equation is always guaranteed to have a root.\\\\n- Check the **Resources** tab for more information on quadratic equations.\\\\n- Calculate only the root that sums the square root of the discriminant, not the one that subtracts it.\\\\n- Round the value / return only integer","thisId":"1488","channelHost":"edabit.com","id":"1488","opcode":"1","channelId":"2","timestamp":"1652648885768"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"304\\\"]}\"]","thisId":"1489","channelHost":"edabit.com","id":"1489","opcode":"1","channelId":"2","timestamp":"1652648885858"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8362","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"304\\\",\\\"result\\\":{\\\"_id\\\":\\\"jfRHGwHMZcnzZm9JL\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String split(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4444444444444444,\\\"familyId\\\":\\\"NztdqRP9nhzic3vno\\\",\\\"instructions\\\":\\\"Write a function that takes a string, breaks it up and returns it with vowels first, consonants second. For any character that's not a vowel (like special characters or spaces), treat them like consonants.\\\\n\\\\n### Examples\\\\n```\\\\nsplit(\\\\\\\"abcde\\\\\\\") ➞ \\\\\\\"aebcd\\\\\\\"\\\\n\\\\nsplit(\\\\\\\"Hello!\\\\\\\") ➞ \\\\\\\"eoHll!\\\\\\\"\\\\n\\\\nsplit(\\\\\\\"What's the time?\\\\\\\") ➞ \\\\\\\"aeieWht's th tm?\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Vowels are `a, e, i, o, u`.\\\\n- Define a separate `isVowel()` function for easier to read code (recommendation).\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"aebcd\\","thisId":"1490","channelHost":"edabit.com","id":"1490","opcode":"1","channelId":"2","timestamp":"1652648885863"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"305\\\"]}\"]","thisId":"1491","channelHost":"edabit.com","id":"1491","opcode":"1","channelId":"2","timestamp":"1652648886052"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"17472","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"305\\\",\\\"result\\\":{\\\"_id\\\":\\\"3GvRKZPF2NRPz3DgQ\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int emptySq(int step) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.4517374517374517,\\\"familyId\\\":\\\"39vshNdPxkphACq5y\\\",\\\"instructions\\\":\\\"In the image below, squares are either empty or filled with a circle.\\\\n\\\\n![Steps vs Empty Squarest](https://edabit-challenges.s3.amazonaws.com/empty_square_sequence.png \\\\\\\"Steps vs Empty Squares\\\\\\\")\\\\n\\\\nCreate a function that takes a number `step` (which equals HALF the width of a square) and returns the amount of empty squares. The image shows the squares with step 1, 2 and 3. The return value is the number of cells not on a diagonal, which is 0 for the first square, 8 for the second, and 24 for the third.\\\\n\\\\n### Examples\\\\n```\\\\nemptySq(1) ➞ 0\\\\n\\\\nemptySq(3) ➞ 24\\\\n\\\\nemptySq(10) ➞ 360\\\\n```\\\\n\\\\n### Notes\\\\n- Test input will always be a positive integer.\\\\n- The width of the square","thisId":"1492","channelHost":"edabit.com","id":"1492","opcode":"1","channelId":"2","timestamp":"1652648886055"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"306\\\"]}\"]","thisId":"1493","channelHost":"edabit.com","id":"1493","opcode":"1","channelId":"2","timestamp":"1652648886174"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6639","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"306\\\",\\\"result\\\":{\\\"_id\\\":\\\"4r33Yd2HuEireb3Sm\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class IntegerDigits {\\\\n\\\\tpublic static int count(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4031007751937985,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"A29AKfHJEJwaXDQtd\\\",\\\"instructions\\\":\\\"Create a function that *counts* the integer's **number of digits**.\\\\n\\\\n### Examples\\\\n```\\\\ncount(4666) ➞ 4\\\\n\\\\ncount(544) ➞ 3\\\\n\\\\ncount(318) ➞ 3\\\\n \\\\ncount(-92563) ➞ 5\\\\n \\\\ncount(-314890) ➞ 6\\\\n\\\\ncount(654321) ➞ 6\\\\n\\\\ncount(638476) ➞ 6\\\\n```\\\\n\\\\n### Notes\\\\n- For an added challenge, try to solve this without using strings.\\\\n- Alternatively, you can solve this via a recursive approach.\\\\n- A recursive version of this challenge can be found via this [link](https://edabit.com/challenge/dreQhsnZJ7HGtsts5).\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals; \\\\nimport org.junit.Test; \\","thisId":"1494","channelHost":"edabit.com","id":"1494","opcode":"1","channelId":"2","timestamp":"1652648886179"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"307\\\"]}\"]","thisId":"1495","channelHost":"edabit.com","id":"1495","opcode":"1","channelId":"2","timestamp":"1652648886303"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"16996","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"307\\\",\\\"result\\\":{\\\"_id\\\":\\\"BxnxYJGQ9MMQn2EfR\\\",\\\"author\\\":\\\"MASON KELLER\\\",\\\"authorId\\\":\\\"iMHrN3Wiefh9Ame38\\\",\\\"code\\\":\\\"public class Challenge{\\\\n  public static String gradePercentage(String userScore, String passScore){\\\\n\\\\tString s = \\\\\\\"\\\\\\\";\\\\n\\\\tif (Integer.parseInt(userScore.substring(0,userScore.length())) <= Integer.parseInt(passScore.substring(0,passScore.length()))){\\\\n\\\\t  s += \\\\\\\"PASSED\\\\\\\";\\\\n\\\\t}\\\\n\\\\tif (Integer.parseInt(userScore.substring(0,userScore.length())) >= Integer.parseInt(passScore.substring(0,passScore.length()))){\\\\n\\\\t  s += \\\\\\\"FAILED\\\\\\\";\\\\n\\\\t}\\\\n\\\\treturn \\\\\\\"You \\\\\\\" + s + \\\\\\\" the Exam\\\\\\\";\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4621848739495797,\\\"familyId\\\":\\\"xcnXMZ6eo6L3RWryH\\\",\\\"instructions\\\":\\\"### NOTE FROM TRANSLATOR: \\\\nThis code is a direct translation from the Python version of this challenge to a Java version. However, because of the differences between the languages and how they function, the Java code is much harder to understand\\\\n\\\\n","thisId":"1496","channelHost":"edabit.com","id":"1496","opcode":"1","channelId":"2","timestamp":"1652648886307"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"308\\\"]}\"]","thisId":"1497","channelHost":"edabit.com","id":"1497","opcode":"1","channelId":"2","timestamp":"1652648886431"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"18722","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"308\\\",\\\"result\\\":{\\\"_id\\\":\\\"KWbrmP9uYSnYtwkAB\\\",\\\"author\\\":\\\"K_3B\\\",\\\"authorId\\\":\\\"zE46SymvixkeFJmPM\\\",\\\"code\\\":\\\"public class Program{\\\\n  public static boolean isInOrder(String str){\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.4567307692307692,\\\"familyId\\\":\\\"qze2r5dwkTscfvwx5\\\",\\\"instructions\\\":\\\"Create a function that takes a string and returns `true` or `false`, depending on whether the characters are in order or not.\\\\n\\\\n### Examples\\\\n```\\\\nisInOrder(\\\\\\\"abc\\\\\\\") ➞ true\\\\n\\\\nisInOrder(\\\\\\\"edabit\\\\\\\") ➞ false\\\\n\\\\nisInOrder(\\\\\\\"123\\\\\\\") ➞ true\\\\n\\\\nisInOrder(\\\\\\\"xyzz\\\\\\\") ➞ true\\\\n```\\\\n\\\\n### Notes\\\\nYou don't have to handle empty strings.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ProgramTest {\\\\n    @Test\\\\n    public void test1(){\\\\n        assertEquals(true, Program.isInOrder(\\\\\\\"abc\\\\\\\"));\\\\n    }\\\\n\\\\t @Test\\\\n    public void test2(){\\\\n        assertEquals(fa","thisId":"1498","channelHost":"edabit.com","id":"1498","opcode":"1","channelId":"2","timestamp":"1652648886434"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"309\\\"]}\"]","thisId":"1499","channelHost":"edabit.com","id":"1499","opcode":"1","channelId":"2","timestamp":"1652648886573"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7980","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"309\\\",\\\"result\\\":{\\\"_id\\\":\\\"ev5oH5FSzb9oF6skT\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String firstNVowels(String str, int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4624277456647399,\\\"familyId\\\":\\\"zobQ5WxmycHPfanH3\\\",\\\"instructions\\\":\\\"Write a function that returns the first `n` vowels of a string.\\\\n\\\\n### Examples\\\\n```\\\\nfirstNVowels(\\\\\\\"sharpening skills\\\\\\\", 3) ➞ \\\\\\\"aei\\\\\\\"\\\\n\\\\nfirstNVowels(\\\\\\\"major league\\\\\\\", 5) ➞ \\\\\\\"aoeau\\\\\\\"\\\\n\\\\nfirstNVowels(\\\\\\\"hostess\\\\\\\", 5) ➞ \\\\\\\"invalid\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Return `\\\\\\\"invalid\\\\\\\"` if the `n` exceeds the number of vowels in a string.\\\\n- Vowels are: _a, e, i, o, u_\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"aei\\\\\\\", Challenge.firstNVowels(\\\\\\\"sharpening skills\\\\\\\", 3));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2()","thisId":"1500","channelHost":"edabit.com","id":"1500","opcode":"1","channelId":"2","timestamp":"1652648886576"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"313\\\"]}\"]","thisId":"1501","channelHost":"edabit.com","id":"1501","opcode":"1","channelId":"2","timestamp":"1652648886736"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"15371","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"313\\\",\\\"result\\\":{\\\"_id\\\":\\\"zSqXDoWS8PuhbbPrL\\\",\\\"author\\\":\\\"rubens\\\",\\\"authorId\\\":\\\"XhzKztoQYYQzZ2c7o\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static String reverse(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4662576687116564,\\\"familyId\\\":\\\"tRFjDJu3yg3PpeLbe\\\",\\\"instructions\\\":\\\"Write a function that reverses a string. **Make your function recursive.**\\\\n\\\\n### Examples\\\\n```\\\\nreverse(\\\\\\\"hello\\\\\\\") ➞ \\\\\\\"olleh\\\\\\\"\\\\n\\\\nreverse(\\\\\\\"world\\\\\\\") ➞ \\\\\\\"dlrow\\\\\\\"\\\\n\\\\nreverse(\\\\\\\"a\\\\\\\") ➞ \\\\\\\"a\\\\\\\"\\\\n\\\\nreverse(\\\\\\\"\\\\\\\") ➞ \\\\\\\"\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- For non-base cases, your function must call itself at least once.\\\\n- Check the **Resources** tab for info on recursion.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"olleh\\\\\\\", Program.reverse(\\\\\\\"hello\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(\\\\\\\"dlr","thisId":"1502","channelHost":"edabit.com","id":"1502","opcode":"1","channelId":"2","timestamp":"1652648886741"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"312\\\"]}\"]","thisId":"1503","channelHost":"edabit.com","id":"1503","opcode":"1","channelId":"2","timestamp":"1652648886860"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"12166","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"312\\\",\\\"result\\\":{\\\"_id\\\":\\\"HmicQW4LMYyNHXRzT\\\",\\\"author\\\":\\\"rubens\\\",\\\"authorId\\\":\\\"XhzKztoQYYQzZ2c7o\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int euclidean(int a, int b) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4628975265017667,\\\"familyId\\\":\\\"ppuxet8FmKMmooda9\\\",\\\"instructions\\\":\\\"Welcome to part two of the collection for  _Computer Science Algorithms_. This challenge will deal further with writing recursive functions by covering the Euclidean Algorithm. The \\\\\\\"Euclidean Algorithm\\\\\\\" is a method for finding the greatest common divisor (GCD) of two numbers. It was originally described by the Greek mathematician Euclid.\\\\n\\\\n### Algorithm\\\\nFor the sake of simplicity I'll refer to the first number as \\\\\\\"a\\\\\\\", the second number as \\\\\\\"b\\\\\\\", and the remainder as \\\\\\\"r\\\\\\\". The algorithm can be broken down into four steps:\\\\n\\\\n1. Ensure that \\\\\\\"a\\\\\\\" >= \\\\\\\"b\\\\\\\".  If \\\\\\\"a\\\\\\\" < \\\\\\\"b\\\\\\\", swap them.\\\\n2. Find the remainder. Divide \\\\\\\"a\\\\\\\" by \\\\\\\"b\\\\\\\" an","thisId":"1504","channelHost":"edabit.com","id":"1504","opcode":"1","channelId":"2","timestamp":"1652648886936"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"310\\\"]}\"]","thisId":"1505","channelHost":"edabit.com","id":"1505","opcode":"1","channelId":"2","timestamp":"1652648887060"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"13575","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"310\\\",\\\"result\\\":{\\\"_id\\\":\\\"A2M6aC7BR2P4Qj2Kr\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Carriage {\\\\n\\\\tpublic static int findSeat(int n, int[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\\t\\\\t\\\",\\\"difficulty\\\":1.46045197740113,\\\"familyId\\\":\\\"hkKz8z5LC5KkAQbtj\\\",\\\"instructions\\\":\\\"A train has a maximum capacity of `n` passengers overall, which means each carriage's capacity will share an equal proportion of the maximum capacity.\\\\n\\\\nCreate a function which returns the **index** of the first carriage which holds **50% or less** of its maximum capacity. If no such carriage exists, return `-1`.\\\\n\\\\n### Worked Examples\\\\n```\\\\nfindSeat(200, [35, 23, 18, 10, 40]) ➞ 2\\\\n// There are 5 carriages which each have a maximum capacity of 40 (200 / 5 = 40).\\\\n// Index 0's carriage is too full (35 is 87.5% of the maximum).\\\\n// Index 1's carriage is too full (23 is 57.5% of the maximum).\\\\n// Index 2's carriage is good enough (18 is 45% of the maximum).\\\\n// Re","thisId":"1506","channelHost":"edabit.com","id":"1506","opcode":"1","channelId":"2","timestamp":"1652648887064"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"311\\\"]}\"]","thisId":"1507","channelHost":"edabit.com","id":"1507","opcode":"1","channelId":"2","timestamp":"1652648887161"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"10148","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"311\\\",\\\"result\\\":{\\\"_id\\\":\\\"L5uwyF4SsAG4DmPpJ\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class NumberOfSpins {\\\\n\\\\tpublic static int spinAround(String[] turns) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4676258992805755,\\\"familyId\\\":\\\"EMfwAJ6r75Js6MDAQ\\\",\\\"instructions\\\":\\\"Given a list of directions to spin, `\\\\\\\"left\\\\\\\"` or `\\\\\\\"right\\\\\\\"`, return an integer of how many full **360°** rotations were made. Note that each word in the array counts as a **90°** rotation in that direction.\\\\n\\\\n### Examples\\\\n```\\\\nspinAround([\\\\\\\"right\\\\\\\", \\\\\\\"right\\\\\\\", \\\\\\\"right\\\\\\\", \\\\\\\"right\\\\\\\", \\\\\\\"left\\\\\\\", \\\\\\\"right\\\\\\\"]) ➞ 1\\\\n# You spun right 4 times (90 * 4 = 360)\\\\n# You spun left once (360 - 90 = 270)\\\\n# But you spun right once more to make a full rotation (270 + 90 = 360)\\\\n\\\\nspinAround([\\\\\\\"left\\\\\\\", \\\\\\\"right\\\\\\\", \\\\\\\"left\\\\\\\", \\\\\\\"right\\\\\\\"]) ➞ 0\\\\n\\\\nspinAround([\\\\\\\"right\\\\\\\", \\\\\\\"right\\\\\\\", \\\\\\\"right\\\\\\\", \\\\\\\"right\\\\\\\", \\\\\\\"right\\\\\\\", \\\\\\","thisId":"1508","channelHost":"edabit.com","id":"1508","opcode":"1","channelId":"2","timestamp":"1652648887165"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"314\\\"]}\"]","thisId":"1509","channelHost":"edabit.com","id":"1509","opcode":"1","channelId":"2","timestamp":"1652648887279"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"27637","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"314\\\",\\\"result\\\":{\\\"_id\\\":\\\"c52kNwPuWo5kp9x4H\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static String flipEndChars(String s) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4684466019417475,\\\"familyId\\\":\\\"fTGQYsFsKJXt7qQdD\\\",\\\"instructions\\\":\\\"Create a function that takes a string and returns a new string with its first and last characters swapped, except under two conditions:\\\\n\\\\n1. If the length of the string is less than two, return `\\\\\\\"Incompatible.\\\\\\\"`.\\\\n2. If the first and last characters are the same, return `\\\\\\\"Two's a pair.\\\\\\\"`.\\\\n\\\\n### Examples\\\\n```\\\\nflipEndChars(\\\\\\\"Cat, dog, and mouse.\\\\\\\") ➞ \\\\\\\".at, dog, and mouseC\\\\\\\"\\\\n\\\\nflipEndChars(\\\\\\\"ada\\\\\\\") ➞ \\\\\\\"Two's a pair.\\\\\\\"\\\\n\\\\nflipEndChars(\\\\\\\"Ada\\\\\\\") ➞ \\\\\\\"adA\\\\\\\"\\\\n\\\\nflipEndChars(\\\\\\\"z\\\\\\\") ➞ \\\\\\\"Incompatible.\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nTests are case sensitive (e.g. \\\\\\\"A\\\\\\\" and \\\\\\\"a\\\\\\\" are not the same character).\\\",\\\"lab","thisId":"1510","channelHost":"edabit.com","id":"1510","opcode":"1","channelId":"2","timestamp":"1652648887284"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"315\\\"]}\"]","thisId":"1511","channelHost":"edabit.com","id":"1511","opcode":"1","channelId":"2","timestamp":"1652648887398"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"18617","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"315\\\",\\\"result\\\":{\\\"_id\\\":\\\"vXYP24qRoQQijc834\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean checkPerfect(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4663212435233162,\\\"familyId\\\":\\\"Tgus7JsSQqJHvhSR8\\\",\\\"instructions\\\":\\\"Create a function that tests whether or not an integer is a **perfect number**. A perfect number is a number that can be written as the sum of its factors, (equal to sum of its proper divisors) excluding the number itself.\\\\n\\\\nFor example, 6 is a **perfect number**, since 1 + 2 + 3 = 6, where 1, 2, and 3 are all factors of 6. Similarly, 28 is a **perfect number**, since 1 + 2 + 4 + 7 + 14 = 28.\\\\n\\\\n### Examples\\\\n```\\\\ncheckPerfect(6) ➞ true\\\\n\\\\ncheckPerfect(28) ➞ true\\\\n\\\\ncheckPerfect(496) ➞ true\\\\n\\\\ncheckPerfect(12) ➞ false\\\\n\\\\ncheckPerfect(97) ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic ","thisId":"1512","channelHost":"edabit.com","id":"1512","opcode":"1","channelId":"2","timestamp":"1652648887404"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"316\\\"]}\"]","thisId":"1513","channelHost":"edabit.com","id":"1513","opcode":"1","channelId":"2","timestamp":"1652648887514"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"10696","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"316\\\",\\\"result\\\":{\\\"_id\\\":\\\"7r4Hz8MvJq4sbHhXB\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static boolean validateEmail(String s) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4644351464435146,\\\"familyId\\\":\\\"gnkAQDRj8pynDSXug\\\",\\\"instructions\\\":\\\"Create a function that accepts a string, checks if it's a valid email address and returns either  `true` or `false`, depending on the evaluation.\\\\n\\\\n- The string must contain an `@` character.\\\\n- The string must contain a `.` character.\\\\n- The `@` must have at least one character in front of it.\\\\n  - e.g. `\\\\\\\"e@edabit.com\\\\\\\"` is valid while `\\\\\\\"@edabit.com\\\\\\\"` is invalid.\\\\n- The `.` and the `@` must be in the appropriate places.\\\\n  - e.g. `\\\\\\\"hello.email@com\\\\\\\"` is invalid while `\\\\\\\"john.smith@email.com\\\\\\\"` is valid.\\\\n\\\\nIf the string passes these tests, it's considered a valid email address.\\\\n\\\\n### Examples\\\\n```\\\\nvalidateEmail(\\\\\\\"@gmail.com\\","thisId":"1514","channelHost":"edabit.com","id":"1514","opcode":"1","channelId":"2","timestamp":"1652648887519"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"317\\\"]}\"]","thisId":"1515","channelHost":"edabit.com","id":"1515","opcode":"1","channelId":"2","timestamp":"1652648887616"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5989","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"317\\\",\\\"result\\\":{\\\"_id\\\":\\\"aAMcXEH67BLzJfyZz\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class LongDigits {\\\\n\\\\tpublic static int digitsCount(long n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4387755102040816,\\\"familyId\\\":\\\"3kQSztnaycBR3vgSu\\\",\\\"instructions\\\":\\\"Create a function that will count the number of digits of a number. Conversion of the *number* to a *string* is **not allowed**, thus, the approach is either recursive or iterative.\\\\n\\\\n### Examples\\\\n```\\\\ndigitsCount(4666) ➞ 4\\\\n\\\\ndigitsCount(544) ➞ 3\\\\n\\\\ndigitsCount(121317) ➞ 6\\\\n\\\\ndigitsCount(0) ➞ 1\\\\n\\\\ndigitsCount(12345) ➞ 5\\\\n\\\\ndigitsCount(1289396387328L) ➞ 13\\\\n```\\\\n\\\\n### Notes\\\\n- A **recursive** version of this challenge can be found via this [link](https://edabit.com/challenge/vpSCPsQKcQwnFdMS4).\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"/** \\\\n================================== \\\\nTestGen 3.1 for JUnit 4.13.0 \\\\t\\\\t\\\\nTest Case: LongDigi","thisId":"1516","channelHost":"edabit.com","id":"1516","opcode":"1","channelId":"2","timestamp":"1652648887622"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"318\\\"]}\"]","thisId":"1517","channelHost":"edabit.com","id":"1517","opcode":"1","channelId":"2","timestamp":"1652648887713"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"11523","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"318\\\",\\\"result\\\":{\\\"_id\\\":\\\"r7JegKpMpntfDyy6D\\\",\\\"author\\\":\\\"Nguyen Phan Dang\\\",\\\"authorId\\\":\\\"YLqdr7bYjwew2KM4N\\\",\\\"code\\\":\\\"public class ChallengeTests {\\\\n\\\\tpublic static String[]  jazzify(String[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.468013468013468,\\\"familyId\\\":\\\"Qgd3gEv2WdmQYhdCM\\\",\\\"instructions\\\":\\\"Create a function which concatenates the number **7** to the end of every chord in an array. Ignore all chords which already end with 7.\\\\n\\\\n### Examples\\\\n```\\\\njazzify([\\\\\\\"G\\\\\\\", \\\\\\\"F\\\\\\\", \\\\\\\"C\\\\\\\"]) ➞ [\\\\\\\"G7\\\\\\\", \\\\\\\"F7\\\\\\\", \\\\\\\"C7\\\\\\\"]\\\\n\\\\njazzify([\\\\\\\"Dm\\\\\\\", \\\\\\\"G\\\\\\\", \\\\\\\"E\\\\\\\", \\\\\\\"A\\\\\\\"]) ➞ [\\\\\\\"Dm7\\\\\\\", \\\\\\\"G7\\\\\\\", \\\\\\\"E7\\\\\\\", \\\\\\\"A7\\\\\\\"]\\\\n\\\\njazzify([\\\\\\\"F7\\\\\\\", \\\\\\\"E7\\\\\\\", \\\\\\\"A7\\\\\\\", \\\\\\\"Ab7\\\\\\\", \\\\\\\"Gm7\\\\\\\", \\\\\\\"C7\\\\\\\"]) ➞ [\\\\\\\"F7\\\\\\\", \\\\\\\"E7\\\\\\\", \\\\\\\"A7\\\\\\\", \\\\\\\"Ab7\\\\\\\", \\\\\\\"Gm7\\\\\\\", \\\\\\\"C7\\\\\\\"]\\\\n\\\\njazzify([]) ➞ []\\\\n```\\\\n\\\\n### Notes\\\\n- Return an empty array if the given array is empty.\\\\n- You can expect all the tests to have valid chords","thisId":"1518","channelHost":"edabit.com","id":"1518","opcode":"1","channelId":"2","timestamp":"1652648887717"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"319\\\"]}\"]","thisId":"1519","channelHost":"edabit.com","id":"1519","opcode":"1","channelId":"2","timestamp":"1652648887834"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"9837","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"319\\\",\\\"result\\\":{\\\"_id\\\":\\\"r2csEmtFvoa3tDWB4\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String oddishOrEvenish(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4592274678111588,\\\"familyId\\\":\\\"6eu4sRzNAgt6bQfpd\\\",\\\"instructions\\\":\\\"Create a function that determines whether a number is **Oddish** or **Evenish**. A number is **Oddish** if the sum of all of its digits is odd, and a number is **Evenish** if the sum of all of its digits is even. If a number is **Oddish**, return `\\\\\\\"Oddish\\\\\\\"`. Otherwise, return `\\\\\\\"Evenish\\\\\\\"`.\\\\n\\\\nFor example, `oddishOrEvenish(121)` should return `\\\\\\\"Evenish\\\\\\\"`, since 1 + 2 + 1 = 4. `oddishOrEvenish(41)` should return `\\\\\\\"Oddish\\\\\\\"`, since 4 + 1 = 5.\\\\n\\\\n### Examples\\\\n```\\\\noddishOrEvenish(43) ➞ \\\\\\\"Oddish\\\\\\\"\\\\n// 4 + 3 = 7\\\\n// 7 % 2 = 1\\\\n\\\\noddishOrEvenish(373) ➞ \\\\\\\"Oddish\\\\\\\"\\\\n// 3 + 7 + 3 = 13\\\\n// 13 % 2 = 1\\\\n\\\\noddishOrEvenish(4433) ➞ \\\\\\\"Evenish\\\\\\\"\\\\n// ","thisId":"1520","channelHost":"edabit.com","id":"1520","opcode":"1","channelId":"2","timestamp":"1652648887838"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"320\\\"]}\"]","thisId":"1521","channelHost":"edabit.com","id":"1521","opcode":"1","channelId":"2","timestamp":"1652648887956"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"10745","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"320\\\",\\\"result\\\":{\\\"_id\\\":\\\"XFhvhZhfA7TfPk87D\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean rectangleInCircle(int w, int h, int radius) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.46875,\\\"familyId\\\":\\\"ufSdr5DmwL5Qk95YZ\\\",\\\"instructions\\\":\\\"Create a function that takes three numbers — the width and height of a rectangle, and the radius of a circle — and returns `true` if the rectangle can fit inside the circle, `false` if it can't.\\\\n\\\\n### Examples\\\\n```\\\\nrectangleInCircle(8, 6, 5) ➞ true\\\\n\\\\nrectangleInCircle(5, 9, 5) ➞ false\\\\n\\\\nrectangleInCircle(4, 7, 4) ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(true, Challenge.rectangleInCircle(5, 12, 7));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(false, Challenge.rectangleInCircle(","thisId":"1522","channelHost":"edabit.com","id":"1522","opcode":"1","channelId":"2","timestamp":"1652648887981"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"321\\\"]}\"]","thisId":"1523","channelHost":"edabit.com","id":"1523","opcode":"1","channelId":"2","timestamp":"1652648888054"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"15228","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"321\\\",\\\"result\\\":{\\\"_id\\\":\\\"tiyPFonvAJ8e6H9jS\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String rev(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4746543778801844,\\\"familyId\\\":\\\"YjFA6NDgrB47KTML5\\\",\\\"instructions\\\":\\\"Create a function that takes an integer `n` and reverses it.\\\\n\\\\n### Examples\\\\n```\\\\nrev(5121) ➞ \\\\\\\"1215\\\\\\\"\\\\n\\\\nrev(69) ➞ \\\\\\\"96\\\\\\\"\\\\n\\\\nrev(-122157) ➞ \\\\\\\"751221\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- This challenge is about using two operators that are related to division.\\\\n- If the number is negative, treat it like it's positive.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"512\\\\\\\", Challenge.rev(215));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(\\\\\\\"522221\\\\\\\", Challenge.rev(122225));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test3() {\\\\n    ass","thisId":"1524","channelHost":"edabit.com","id":"1524","opcode":"1","channelId":"2","timestamp":"1652648888059"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"322\\\"]}\"]","thisId":"1525","channelHost":"edabit.com","id":"1525","opcode":"1","channelId":"2","timestamp":"1652648888152"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"14750","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"322\\\",\\\"result\\\":{\\\"_id\\\":\\\"iaCSbqngin2AXriyB\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static String highLow(String s) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4705882352941178,\\\"familyId\\\":\\\"jLJpdfcRWEDXQPiPY\\\",\\\"instructions\\\":\\\"Create a method that accepts a string of space separated numbers and returns the highest and lowest number (as a string).\\\\n\\\\n### Examples\\\\n\\\\n```\\\\nhighLow(\\\\\\\"1 2 3 4 5\\\\\\\") ➞ \\\\\\\"5 1\\\\\\\"\\\\n\\\\nhighLow(\\\\\\\"1 2 -3 4 5\\\\\\\") ➞ \\\\\\\"5 -3\\\\\\\"\\\\n\\\\nhighLow(\\\\\\\"1 9 3 4 -5\\\\\\\") ➞ \\\\\\\"9 -5\\\\\\\"\\\\n\\\\nhighLow(\\\\\\\"13\\\\\\\") ➞ \\\\\\\"13 13\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n\\\\n- All numbers are valid Int32, no need to validate them.\\\\n- There will always be at least one number in the input string.\\\\n- Output string must be two numbers separated by a single space, and highest number is first.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class Chal","thisId":"1526","channelHost":"edabit.com","id":"1526","opcode":"1","channelId":"2","timestamp":"1652648888156"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"323\\\"]}\"]","thisId":"1527","channelHost":"edabit.com","id":"1527","opcode":"1","channelId":"2","timestamp":"1652648888267"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"20360","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"323\\\",\\\"result\\\":{\\\"_id\\\":\\\"GJh9FraKutcnHoruX\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static int missingNum(int[] nums) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4732824427480915,\\\"familyId\\\":\\\"xjoSxSqsaZZzpjxgT\\\",\\\"instructions\\\":\\\"Create a method that takes an array of integers between 1 and 10 (excluding one number) and returns the missing number.\\\\n\\\\n### Examples\\\\n```\\\\nmissingNum([1, 2, 3, 4, 6, 7, 8, 9, 10]) ➞ 5\\\\n\\\\nmissingNum([7, 2, 3, 6, 5, 9, 1, 4, 8]) ➞ 10\\\\n\\\\nmissingNum([10, 5, 1, 2, 4, 6, 8, 3, 9]) ➞ 7\\\\n```\\\\n\\\\n### Notes\\\\n- The array of numbers will be **unsorted** (not in order).\\\\n- Only one number will be missing.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertThat(Program.missingNum(new int[]{1, 2, 3, 4, 6, 7, 8, 9,","thisId":"1528","channelHost":"edabit.com","id":"1528","opcode":"1","channelId":"2","timestamp":"1652648888272"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"324\\\"]}\"]","thisId":"1529","channelHost":"edabit.com","id":"1529","opcode":"1","channelId":"2","timestamp":"1652648888380"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8677","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"324\\\",\\\"result\\\":{\\\"_id\\\":\\\"aPmfBKu7ixcsYYKaZ\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Transcription {\\\\n\\\\tpublic static String dnaToRna(String strand) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4757281553398058,\\\"familyId\\\":\\\"pCLRsE4aoR4WLpaSY\\\",\\\"instructions\\\":\\\"Transcribe the given DNA strand into corresponding mRNA - a type of RNA,  that will be formed from DNA after transcription. DNA has the bases A, T, G and C, while RNA converts to U, A, C and G respectively.\\\\n\\\\n### Examples\\\\n```\\\\ndnaToRna(\\\\\\\"ATTAGCGCGATATACGCGTAC\\\\\\\") ➞ \\\\\\\"UAAUCGCGCUAUAUGCGCAUG\\\\\\\"\\\\n\\\\ndnaToRna(\\\\\\\"CGATATA\\\\\\\") ➞ \\\\\\\"GCUAUAU\\\\\\\"\\\\n\\\\ndnaToRna(\\\\\\\"GTCATACGACGTA\\\\\\\") ➞ \\\\\\\"CAGUAUGCUGCAU\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Transcription is the process of making complementary strand.\\\\n- A, T, G and C in DNA converts to U, A, C and G respectively in mRNA.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"/** \\\\n===============================","thisId":"1530","channelHost":"edabit.com","id":"1530","opcode":"1","channelId":"2","timestamp":"1652648888384"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"327\\\"]}\"]","thisId":"1531","channelHost":"edabit.com","id":"1531","opcode":"1","channelId":"2","timestamp":"1652648888485"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8922","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"327\\\",\\\"result\\\":{\\\"_id\\\":\\\"QLz5aGfChHhndKWMv\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static double[] findLargestNums(double[][] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4792626728110598,\\\"familyId\\\":\\\"ePSC3BZHz4DEXnmG2\\\",\\\"instructions\\\":\\\"Create a function that takes an array of arrays with numbers. Return a new (single) array with the largest numbers of each.\\\\n\\\\n### Examples\\\\n```\\\\nfindLargestNums([[4, 2, 7, 1], [20, 70, 40, 90], [1, 2, 0]]) ➞ [7, 90, 2]\\\\n\\\\nfindLargestNums([[-34, -54, -74], [-32, -2, -65], [-54, 7, -43]]) ➞ [-34, -2, 7]\\\\n\\\\nfindLargestNums([[0.4321, 0.7634, 0.652], [1.324, 9.32, 2.5423, 6.4314], [9, 3, 6, 3]]) ➞ [0.7634, 9.32, 9]\\\\n```\\\\n\\\\n### Notes\\\\nWatch out for negative integers (numbers).\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test \\\\n\\\\tpublic void tes","thisId":"1532","channelHost":"edabit.com","id":"1532","opcode":"1","channelId":"2","timestamp":"1652648888488"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"328\\\"]}\"]","thisId":"1533","channelHost":"edabit.com","id":"1533","opcode":"1","channelId":"2","timestamp":"1652648888582"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"12400","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"328\\\",\\\"result\\\":{\\\"_id\\\":\\\"u4YLReJ9Q3vAYJkCm\\\",\\\"author\\\":\\\"rubens\\\",\\\"authorId\\\":\\\"XhzKztoQYYQzZ2c7o\\\",\\\"code\\\":\\\"public class Challenge {\\\\n    public static boolean same(int[] a1, int[] a2) {\\\\n\\\\t\\\\t\\\\t\\\\n\\\\t\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4787878787878788,\\\"familyId\\\":\\\"LaKeX2TCuyJWnvMp2\\\",\\\"instructions\\\":\\\"Write a function that returns `true` if two arrays have the same number of **unique** elements, and `false` otherwise.\\\\n\\\\nTo illustrate:\\\\n\\\\n```\\\\narr1 = [1, 3, 4, 4, 4]\\\\narr2 = [2, 5, 7]\\\\n```\\\\n\\\\nIn `arr1`, the number `4` appears three times, which means it contains three unique elements: `[1, 3, 4]`. Since `arr1` and `arr2` both contain the same number of **unique** elements, this example would return `true`.\\\\n\\\\n### Examples\\\\n```\\\\nsame([1, 3, 4, 4, 4], [2, 5, 7]) ➞ true\\\\n\\\\nsame([9, 8, 7, 6], [4, 4, 3, 1]) ➞ false\\\\n\\\\nsame([2], [3, 3, 3, 3, 3]) ➞ true\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimp","thisId":"1534","channelHost":"edabit.com","id":"1534","opcode":"1","channelId":"2","timestamp":"1652648888585"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"326\\\"]}\"]","thisId":"1535","channelHost":"edabit.com","id":"1535","opcode":"1","channelId":"2","timestamp":"1652648888693"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"9798","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"326\\\",\\\"result\\\":{\\\"_id\\\":\\\"9zBJYnBekqAo52zEp\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean isValidHexCode(String str) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.4776119402985075,\\\"familyId\\\":\\\"RxbrPHagQmyrWssuK\\\",\\\"instructions\\\":\\\"Create a function that determines whether a string is a valid hex code.\\\\n\\\\nA hex code must begin with a pound key `#` and is exactly 6 characters in length. Each character must be a digit from `0-9` or an alphabetic character from `A-F`. All alphabetic characters may be uppercase or lowercase.\\\\n\\\\n### Examples\\\\n```\\\\nisValidHexCode(\\\\\\\"#CD5C5C\\\\\\\") ➞ true\\\\n\\\\nisValidHexCode(\\\\\\\"#EAECEE\\\\\\\") ➞ true\\\\n\\\\nisValidHexCode(\\\\\\\"#eaecee\\\\\\\") ➞ true\\\\n\\\\nisValidHexCode(\\\\\\\"#CD5C58C\\\\\\\") ➞ false\\\\n// Length exceeds 6\\\\n\\\\nisValidHexCode(\\\\\\\"#CD5C5Z\\\\\\\") ➞ false\\\\n// Not all alphabetic characters in A-F\\\\n\\\\nisValidHexCode(\\\\\\\"#CD5C&C\\\\\\\") ➞ false\\\\n// Contains unacceptable character\\\\n","thisId":"1536","channelHost":"edabit.com","id":"1536","opcode":"1","channelId":"2","timestamp":"1652648888698"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"329\\\"]}\"]","thisId":"1537","channelHost":"edabit.com","id":"1537","opcode":"1","channelId":"2","timestamp":"1652648888827"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"14043","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"329\\\",\\\"result\\\":{\\\"_id\\\":\\\"2Cbbs3pvH2gCMZMsg\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String move(String word) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.482837528604119,\\\"familyId\\\":\\\"J6syGZ2x42P8tHNPE\\\",\\\"instructions\\\":\\\"Write a function that changes every letter to the next letter:\\\\n\\\\n- \\\\\\\"a\\\\\\\" becomes \\\\\\\"b\\\\\\\"\\\\n- \\\\\\\"b\\\\\\\" becomes \\\\\\\"c\\\\\\\"\\\\n- \\\\\\\"d\\\\\\\" becomes \\\\\\\"e\\\\\\\"\\\\n- and so on ...\\\\n\\\\n### Examples\\\\n```\\\\nmove(\\\\\\\"hello\\\\\\\") ➞ \\\\\\\"ifmmp\\\\\\\"\\\\n\\\\nmove(\\\\\\\"bye\\\\\\\") ➞ \\\\\\\"czf\\\\\\\"\\\\n\\\\nmove(\\\\\\\"welcome\\\\\\\") ➞ \\\\\\\"xfmdpnf\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nThere will be no z's in the tests.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"ifmmp\\\\\\\", Challenge.move(\\\\\\\"hello\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(\\\\\\\"mpm\\\\\\\", Challenge.move(\\","thisId":"1538","channelHost":"edabit.com","id":"1538","opcode":"1","channelId":"2","timestamp":"1652648888830"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"325\\\"]}\"]","thisId":"1539","channelHost":"edabit.com","id":"1539","opcode":"1","channelId":"2","timestamp":"1652648888961"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"15859","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"325\\\",\\\"result\\\":{\\\"_id\\\":\\\"W64jA8hmGCmjbR7Fb\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static double mean(int[] nums) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4764044943820225,\\\"familyId\\\":\\\"qhEEXfbLPLESvJy4L\\\",\\\"instructions\\\":\\\"Create a function that takes an array of numbers and returns the mean (average) of all those numbers.\\\\n\\\\n### Examples\\\\n```\\\\nmean([1, 0, 4, 5, 2, 4, 1, 2, 3, 3, 3]) ➞ 2.55\\\\n\\\\nmean([2, 3, 2, 3]) ➞ 2.50\\\\n\\\\nmean([3, 3, 3, 3, 3]) ➞ 3.00\\\\n```\\\\n\\\\n### Notes\\\\n- Round to two decimal places.\\\\n- You can expect a number ranging from 0 to 10,000.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertThat(Program.mean(new int[]{1, 0, 4, 5, 2, 4, 1, 2, 3, 3, 3}), is(2.55));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test\\\\n\\\\tpublic void test2() ","thisId":"1540","channelHost":"edabit.com","id":"1540","opcode":"1","channelId":"2","timestamp":"1652648888965"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"330\\\"]}\"]","thisId":"1541","channelHost":"edabit.com","id":"1541","opcode":"1","channelId":"2","timestamp":"1652648889085"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"10656","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"330\\\",\\\"result\\\":{\\\"_id\\\":\\\"xrPSrroKFC9uciA6H\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"import java.util.function.Function;\\\\n\\\\npublic class Functions {\\\\n  public static String whichIsLarger(int j, int k, \\\\n  \\\\t\\\\t\\\\t Function<Integer, Integer> f, Function<Integer, Integer> g) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4807692307692308,\\\"familyId\\\":\\\"3GZsbgpAW499Hikpe\\\",\\\"instructions\\\":\\\"Write a function that will be passed with two integer values, `j` and `k` and two functions, `f` and `g`, that don't take any parameters. Your function has  to call them (and use the two integer values, accordingly), and returns a string that indicates which function has returned the larger number.\\\\n\\\\n- If `f` returns the larger number, return the string `f`.\\\\n- If `g` returns the larger number, return the string `g`.\\\\n- If both functions return the same number, return the string `neither`.\\\\n\\\\n### Examples\\\\n```\\\\nwhichIsLarger(5, 10, f -> f, g -> g) ➞ ","thisId":"1542","channelHost":"edabit.com","id":"1542","opcode":"1","channelId":"2","timestamp":"1652648889090"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"331\\\"]}\"]","thisId":"1543","channelHost":"edabit.com","id":"1543","opcode":"1","channelId":"2","timestamp":"1652648889196"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8720","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"331\\\",\\\"result\\\":{\\\"_id\\\":\\\"9D39q2q9yAFCDM9da\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class VideoLength {\\\\n\\\\tpublic static int minutesToSeconds(String tm) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4787234042553192,\\\"familyId\\\":\\\"85NGDfHFahRs23iRZ\\\",\\\"instructions\\\":\\\"You are given the length of a video in minutes. The format is **mm:ss** (e.g.: `\\\\\\\"02:54\\\\\\\"`). Create a function that takes the *video length* and return it in **seconds**.\\\\n\\\\n### Examples\\\\n```\\\\nminutesToSeconds(\\\\\\\"01:00\\\\\\\") ➞ 60\\\\n\\\\nminutesToSeconds(\\\\\\\"13:56\\\\\\\") ➞ 836\\\\n\\\\nminutesToSeconds(\\\\\\\"10:60\\\\\\\") ➞ -1\\\\n```\\\\n\\\\n### Notes\\\\n- The video length is given as a string.\\\\n- If the number of seconds is **60 or over**, return `-1` (see example #3).\\\\n- You may get a number of minutes over 99 (e.g. `\\\\\\\"121:49\\\\\\\"` is perfectly **valid**).\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals;\\\\nimport or","thisId":"1544","channelHost":"edabit.com","id":"1544","opcode":"1","channelId":"2","timestamp":"1652648889201"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"332\\\"]}\"]","thisId":"1545","channelHost":"edabit.com","id":"1545","opcode":"1","channelId":"2","timestamp":"1652648889287"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"14721","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"332\\\",\\\"result\\\":{\\\"_id\\\":\\\"A7mDjLb7DZL5bk8oz\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static int[] noOdds(int[] nums) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4818652849740932,\\\"familyId\\\":\\\"Hjjpdh4zqqFpSDpDW\\\",\\\"instructions\\\":\\\"Create a function that takes an array of numbers and returns only the even values.\\\\n\\\\n### Examples\\\\n```\\\\nnoOdds([1, 2, 3, 4, 5, 6, 7, 8]) ➞ [2, 4, 6, 8]\\\\n\\\\nnoOdds([43, 65, 23, 89, 53, 9, 6]) ➞ [6]\\\\n\\\\nnoOdds([718, 991, 449, 644, 380, 440]) ➞ [718, 644, 380, 440]\\\\n```\\\\n\\\\n### Notes\\\\n- Return all even numbers in the order they were given.\\\\n- All test cases contain valid numbers ranging from 1 to 3000.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertThat(Program.noOdds(new int[]{1, 2, 3, 4, 5, 6, 7, 8}), ","thisId":"1546","channelHost":"edabit.com","id":"1546","opcode":"1","channelId":"2","timestamp":"1652648889300"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"333\\\"]}\"]","thisId":"1547","channelHost":"edabit.com","id":"1547","opcode":"1","channelId":"2","timestamp":"1652648889421"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"13802","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"333\\\",\\\"result\\\":{\\\"_id\\\":\\\"fCkawrffCeWEH5xja\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String reverseCase(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4806201550387597,\\\"familyId\\\":\\\"D37m2aF52NdkvsNjG\\\",\\\"instructions\\\":\\\"Given a string, create a function to reverse the case. All lower-cased letters should be upper-cased, and vice versa.\\\\n\\\\n### Examples\\\\n```\\\\nreverseCase(\\\\\\\"Happy Birthday\\\\\\\") ➞ \\\\\\\"hAPPY bIRTHDAY\\\\\\\"\\\\n\\\\nreverseCase(\\\\\\\"MANY THANKS\\\\\\\") ➞ \\\\\\\"many thanks\\\\\\\"\\\\n\\\\nreverseCase(\\\\\\\"sPoNtAnEoUs\\\\\\\") ➞ \\\\\\\"SpOnTaNeOuS\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertEquals(\\\\\\\"hAPPY bIRTHDAY\\\\\\\", Challenge.reverseCase(\\\\\\\"Happy Birthday\\\\\\\"));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test \\\\n\\\\tpublic void test2() {\\\\n\\\\t\\\\tassertEquals(\\\\\\\"many than","thisId":"1548","channelHost":"edabit.com","id":"1548","opcode":"1","channelId":"2","timestamp":"1652648889425"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"334\\\"]}\"]","thisId":"1549","channelHost":"edabit.com","id":"1549","opcode":"1","channelId":"2","timestamp":"1652648889527"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"10898","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"334\\\",\\\"result\\\":{\\\"_id\\\":\\\"ynzo3DeHCmAXLtpwe\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String inatorInator(String inv) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4819277108433735,\\\"familyId\\\":\\\"AmnDzfrYpxnSwArYB\\\",\\\"instructions\\\":\\\"Create a function that takes a single word string and does the following:\\\\n\\\\n1. Concatenates `inator` to the end if the word ends with a consonant otherwise, concatenate `-inator` instead.\\\\n\\\\n2. Adds the word length of the original word to the end, supplied with '000'.\\\\n\\\\nThe examples should make this clear.\\\\n\\\\n### Examples\\\\n```\\\\ninatorInator(\\\\\\\"Shrink\\\\\\\") ➞ \\\\\\\"Shrinkinator 6000\\\\\\\"\\\\n\\\\ninatorInator(\\\\\\\"Doom\\\\\\\") ➞ \\\\\\\"Doominator 4000\\\\\\\"\\\\n\\\\ninatorInator(\\\\\\\"EvilClone\\\\\\\") ➞ \\\\\\\"EvilClone-inator 9000\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\","thisId":"1550","channelHost":"edabit.com","id":"1550","opcode":"1","channelId":"2","timestamp":"1652648889532"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"335\\\"]}\"]","thisId":"1551","channelHost":"edabit.com","id":"1551","opcode":"1","channelId":"2","timestamp":"1652648889659"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"10226","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"335\\\",\\\"result\\\":{\\\"_id\\\":\\\"q3hu6xr7eqBB3EKaB\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean rightTriangle(int x, int y, int z) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.4823529411764707,\\\"familyId\\\":\\\"jdSDPRGDvv9XZCive\\\",\\\"instructions\\\":\\\"Given three numbers, `x`, `y` and `z`, determine whether they are the edges of a right angled triangle.\\\\n\\\\n### Examples\\\\n```\\\\nrightTriangle(3, 4, 5) ➞ true\\\\n// This is the classic example of a \\\\\\\"nice\\\\\\\" right angled triangle.\\\\n\\\\nrightTriangle(145, 105, 100) ➞ true\\\\n// This is a less famous example.\\\\n\\\\nrightTriangle(70, 130, 110) ➞ false\\\\n// This isn't a right angled triangle.\\\\n```\\\\n### Notes\\\\n- Notice the largest side of the triangle might not be the last one passed to the function.\\\\n- All numbers will be integers (whole numbers).\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test","thisId":"1552","channelHost":"edabit.com","id":"1552","opcode":"1","channelId":"2","timestamp":"1652648889687"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"336\\\"]}\"]","thisId":"1553","channelHost":"edabit.com","id":"1553","opcode":"1","channelId":"2","timestamp":"1652648889773"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"11422","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"336\\\",\\\"result\\\":{\\\"_id\\\":\\\"E22KYTGMhwpYtjn8x\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class HalfSplit {\\\\n\\\\tpublic static int[] numberSplit(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4801762114537445,\\\"familyId\\\":\\\"tu4dxDrt6Z5orDmQN\\\",\\\"instructions\\\":\\\"Given a number, return a list containing the two halves of the number. If the number is odd, make the **rightmost number higher**.\\\\n\\\\n### Examples\\\\n```\\\\nnumberSplit(25) ➞ [12, 13]\\\\n\\\\nnumberSplit(4) ➞ [2, 2]\\\\n\\\\nnumberSplit(10) ➞ [5, 5]\\\\n\\\\nnumberSplit(11) ➞ [5, 6]\\\\n\\\\nnumberSplit(-9) ➞ [-5, -4]\\\\n```\\\\n\\\\n### Notes\\\\n- All numbers will be integers.\\\\n- You can expect negative numbers too.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"/** \\\\n================================== \\\\nTestGen 3.1 for JUnit 4.13.0 \\\\t\\\\t\\\\nTest Case: HalfSplit::numberSplit \\\\nTimestamp: 10/13/2020, 08:38:59 AM \\\\n---------------------------------- \\\\n® DARKKO 2020 © \\\\n======","thisId":"1554","channelHost":"edabit.com","id":"1554","opcode":"1","channelId":"2","timestamp":"1652648889793"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"337\\\"]}\"]","thisId":"1555","channelHost":"edabit.com","id":"1555","opcode":"1","channelId":"2","timestamp":"1652648889872"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"25866","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"337\\\",\\\"result\\\":{\\\"_id\\\":\\\"diiEDD4JQyysFR7zh\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String[] getBirthdayCake(String name,int age) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4655172413793103,\\\"familyId\\\":\\\"cKv3Rx6ekXD5tkyug\\\",\\\"instructions\\\":\\\"Create a function which **constructs** a *rectangular* birthday cake, based on someone's `name` and `age`! Build it out of *strings* in an array and make sure to surround the birthday message with the character that fits the rule:\\\\n\\\\n- If the age is an **even number**, surround the message with \\\\\\\"#\\\\\\\".\\\\n- If the age is an **odd number**, surround the message with \\\\\\\"*\\\\\\\".\\\\n\\\\nOther important rules:\\\\n- The message should be in the format: **{age} Happy Birthday {name}! {age}**\\\\n- **Leave a space** between the edge of the cake and the age numbers.\\\\n\\\\n### Examples\\\\n```\\\\ngetBirthdayCake(\\\\\\\"Jack\\\\\\\", 10) ➞ [\\\\n  \\\\\\\"##############################\\\\\\","thisId":"1556","channelHost":"edabit.com","id":"1556","opcode":"1","channelId":"2","timestamp":"1652648889885"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"338\\\"]}\"]","thisId":"1557","channelHost":"edabit.com","id":"1557","opcode":"1","channelId":"2","timestamp":"1652648890009"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"9250","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"338\\\",\\\"result\\\":{\\\"_id\\\":\\\"g7dRyiCi5dpKxuFRa\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean magic(String str) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.4830508474576272,\\\"familyId\\\":\\\"izMzZJZRZfAq3wB4B\\\",\\\"instructions\\\":\\\"You are to read each part of the date into its own integer type variable. The year should be a 4 digit number. You can assume the user enters a correct date formatted **d m yyyy** (no error checking required).\\\\n\\\\nDetermine whether the entered date is a _magic date_. Here are the rules for a magic date:\\\\n\\\\n-  `mm * dd` is a 1-digit number that matches the last digit of `yyyy` *or*\\\\n-  `mm * dd` is a 2-digit number that matches the last 2 digits of `yyyy` *or*\\\\n-  `mm * dd` is a 3-digit number that matches the last 3 digits of `yyyy`\\\\n\\\\nThe program should then display `true` if the date is magic, or `false` if it is not.\\\\n\\\\n### Examples\\\\n```\\\\nMagic(\\\\\\\"1 1 2011\\\\\\\") ➞ true\\\\n\\\\nM","thisId":"1558","channelHost":"edabit.com","id":"1558","opcode":"1","channelId":"2","timestamp":"1652648890021"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"339\\\"]}\"]","thisId":"1559","channelHost":"edabit.com","id":"1559","opcode":"1","channelId":"2","timestamp":"1652648890132"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"11162","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"339\\\",\\\"result\\\":{\\\"_id\\\":\\\"Abq8d76QDQC2ocfX7\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"// (a,b,c) -- dimensions of the brick\\\\n// (w,h) -- dimensions of the hole\\\\npublic class Challenge {\\\\n  public static boolean doesBrickFit(int a, int b, int c,  int w, int h) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.4857142857142858,\\\"familyId\\\":\\\"5RBNrB8ksF4LuA8sp\\\",\\\"instructions\\\":\\\"Write the function that takes three dimensions of a brick: height(a), width(b) and depth(c) and returns `true` if this brick can fit into a hole with the width(w) and height(h).\\\\n\\\\n### Examples\\\\n```\\\\ndoesBrickFit(1, 1, 1, 1, 1) ➞ true\\\\n\\\\ndoesBrickFit(1, 2, 1, 1, 1) ➞ true\\\\n\\\\ndoesBrickFit(1, 2, 2, 1, 1) ➞ false\\\\n```\\\\n\\\\n### Notes\\\\n- You can turn the brick with any side towards the hole.\\\\n- We assume that the brick fits if its sizes equal the ones of the hole (i.e. brick size should be less than or equal to the size of the hole, not strictly less).\\\\n- You **can't** put a b","thisId":"1560","channelHost":"edabit.com","id":"1560","opcode":"1","channelId":"2","timestamp":"1652648890138"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"340\\\"]}\"]","thisId":"1561","channelHost":"edabit.com","id":"1561","opcode":"1","channelId":"2","timestamp":"1652648890245"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6400","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"340\\\",\\\"result\\\":{\\\"_id\\\":\\\"5oJXKYGnG5hqbaaxK\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int lcm(int a, int b) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.484076433121019,\\\"familyId\\\":\\\"vA26mdNnRuLrbPgz3\\\",\\\"instructions\\\":\\\"Create a function that takes two numbers as arguments and return the LCM of the two numbers.\\\\n\\\\n### Examples\\\\n```\\\\nlcm(3, 5) ➞ 15\\\\n\\\\nlcm(14, 28) ➞ 28\\\\n\\\\nlcm(4, 6) ➞ 12\\\\n```\\\\n\\\\n### Notes\\\\n- Don't forget to return the result.\\\\n- You may want to use the GCD function to make this a little easier.\\\\n- LCM stands for least common multiple, the smallest multiple of both integers.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(30, Challenge.lcm(6, 10));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(60, Challenge.lcm(30, 60));\\\\n  }\\\\n\\\\t\\\\n\\\\t@","thisId":"1562","channelHost":"edabit.com","id":"1562","opcode":"1","channelId":"2","timestamp":"1652648890250"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"341\\\"]}\"]","thisId":"1563","channelHost":"edabit.com","id":"1563","opcode":"1","channelId":"2","timestamp":"1652648890349"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"10756","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"341\\\",\\\"result\\\":{\\\"_id\\\":\\\"3mCJ3idbMqueRTa7b\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String[] filterStateNames(String[] arr, String type) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4866920152091254,\\\"familyId\\\":\\\"Rnnsx2mGNDFvjmWDN\\\",\\\"instructions\\\":\\\"Create a function that filters out an array of state names into two categories based on the second parameter.\\\\n\\\\n1. Abbreviations `abb`\\\\n2. Full names `full`\\\\n\\\\n### Examples\\\\n```\\\\nfilterStateNames([\\\\\\\"Arizona\\\\\\\", \\\\\\\"CA\\\\\\\", \\\\\\\"NY\\\\\\\", \\\\\\\"Nevada\\\\\\\"], \\\\\\\"abb\\\\\\\")\\\\n➞ [\\\\\\\"CA\\\\\\\", \\\\\\\"NY\\\\\\\"]\\\\n\\\\nfilterStateNames([\\\\\\\"Arizona\\\\\\\", \\\\\\\"CA\\\\\\\", \\\\\\\"NY\\\\\\\", \\\\\\\"Nevada\\\\\\\"], \\\\\\\"full\\\\\\\")\\\\n➞ [\\\\\\\"Arizona\\\\\\\", \\\\\\\"Nevada\\\\\\\"]\\\\n\\\\nfilterStateNames([\\\\\\\"MT\\\\\\\", \\\\\\\"NJ\\\\\\\", \\\\\\\"TX\\\\\\\", \\\\\\\"ID\\\\\\\", \\\\\\\"IL\\\\\\\"], \\\\\\\"abb\\\\\\\")\\\\n➞ [\\\\\\\"MT\\\\\\\", \\\\\\\"NJ\\\\\\\", \\\\\\\"TX\\\\\\\", \\\\\\\"ID\\\\\\\", \\\\\\\"IL\\\\\\\"]\\\\n\\\\nfilterStateNames([\\\\\\\"MT\\\\\\\", \\\\\\\"NJ\\\\\\\", \\\\\\\"TX\\\\\\\", \\\\\\\"ID","thisId":"1564","channelHost":"edabit.com","id":"1564","opcode":"1","channelId":"2","timestamp":"1652648890359"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"343\\\"]}\"]","thisId":"1565","channelHost":"edabit.com","id":"1565","opcode":"1","channelId":"2","timestamp":"1652648890456"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8159","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"343\\\",\\\"result\\\":{\\\"_id\\\":\\\"9X8zLpBEcQsyerPgL\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class HighestDigit {\\\\n  public static int highestDigit(int n) {\\\\n    \\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.485,\\\"familyId\\\":\\\"vr98naCoMkCKiLq66\\\",\\\"instructions\\\":\\\"Create a function that takes a number as an argument and returns the highest digit in that number.\\\\n\\\\n### Examples\\\\n```\\\\nhighestDigit(4666) ➞ 6\\\\n\\\\nhighestDigit(544) ➞ 5\\\\n\\\\nhighestDigit(379) ➞ 9\\\\n\\\\nhighestDigit(2) ➞ 2\\\\n\\\\nhighestDigit(377401) ➞ 7\\\\n```\\\\n\\\\n### Notes\\\\n- Don't forget to `return` the result.\\\\n- If you get stuck on a challenge, find help in the **Resources** tab.\\\\n- If you're really stuck, unlock solutions in the **Solutions** tab.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"/** \\\\n===================================== \\\\nTestGen 3.1 for JUnit 4.13.0 \\\\t\\\\t\\\\nTest Case: HighestDigit::highestDigit \\\\nTimestamp: 12/16/2020 09:03:49 PM \\\\n----------","thisId":"1566","channelHost":"edabit.com","id":"1566","opcode":"1","channelId":"2","timestamp":"1652648890459"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"342\\\"]}\"]","thisId":"1567","channelHost":"edabit.com","id":"1567","opcode":"1","channelId":"2","timestamp":"1652648890565"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6617","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"342\\\",\\\"result\\\":{\\\"_id\\\":\\\"p3BhJuodwuhrNjQJ5\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Pythagorean {\\\\t\\\\n\\\\tpublic static boolean isTriplet(int a, int b, int c) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4848484848484849,\\\"quality\\\":4.857142857142857,\\\"familyId\\\":\\\"oyBkQ79G7tL8K3k4m\\\",\\\"instructions\\\":\\\"Create a function that validates whether the three given integers form a **Pythagorean triplet** which is defined as the sum of the squares of the *two smallest integers* must be equal to the square of the *largest integer*.\\\\n\\\\n### Examples\\\\n```\\\\nisTriplet(3, 4, 5) ➞ true\\\\n// 3² + 4² = 25\\\\n// 5² = 25\\\\n\\\\nisTriplet(13, 5, 12) ➞ true\\\\n// 5² + 12² = 169\\\\n// 13² = 169\\\\n\\\\nisTriplet(1, 2, 3) ➞ false\\\\n// 1² + 2² = 5\\\\n// 3² = 9\\\\n\\\\nisTriplet(72, 54, 90) ➞ true\\\\n\\\\nisTriplet(54, 46, 77) ➞ false\\\\n\\\\nisTriplet(80, 48, 64) ➞ true\\\\n```\\\\n\\\\n### Notes\\\\n- Numbers may not be given in a sorted order.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"/","thisId":"1568","channelHost":"edabit.com","id":"1568","opcode":"1","channelId":"2","timestamp":"1652648890569"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"344\\\"]}\"]","thisId":"1569","channelHost":"edabit.com","id":"1569","opcode":"1","channelId":"2","timestamp":"1652648890697"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7917","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"344\\\",\\\"result\\\":{\\\"_id\\\":\\\"ibJLbwfkTbP9229Kt\\\",\\\"author\\\":\\\"Nguyen Phan Dang\\\",\\\"authorId\\\":\\\"YLqdr7bYjwew2KM4N\\\",\\\"code\\\":\\\"import java.util.Arrays;\\\\nimport java.util.stream.IntStream;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\tpublic static int totalVolume(int[][] part) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4887640449438202,\\\"familyId\\\":\\\"rkPTNN4SvxzHetZSu\\\",\\\"instructions\\\":\\\"Given an array of boxes, create a function that returns the total volume of all those boxes combined together. A box is represented by an array with three elements: length, width and height.\\\\n\\\\nFor instance, `totalVolume([2, 3, 2], [6, 6, 7], [1, 2, 1])` should return `266` since  (2 x 3 x 2) + (6 x 6 x 7) + (1 x 2 x 1) = 12 + 252 + 2 = 266.\\\\n\\\\n### Examples\\\\n```\\\\ntotalVolume([4, 2, 4], [3, 3, 3], [1, 1, 2], [2, 1, 1]) ➞ 63\\\\n\\\\ntotalVolume([2, 2, 2], [2, 1, 1]) ➞ 10\\\\n\\\\ntotalVolume([1, 1, 1]) ➞ 1\\\\n```\\\\n\\\\n### Notes\\\\n- You will be given at least one box.\\\\n- Each box will always have three di","thisId":"1570","channelHost":"edabit.com","id":"1570","opcode":"1","channelId":"2","timestamp":"1652648890701"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"345\\\"]}\"]","thisId":"1571","channelHost":"edabit.com","id":"1571","opcode":"1","channelId":"2","timestamp":"1652648890800"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8940","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"345\\\",\\\"result\\\":{\\\"_id\\\":\\\"nXkhpafB9e5c7fNcg\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int wordNest(String word, String nest) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.4954128440366972,\\\"familyId\\\":\\\"JDqAqLLscgbApeAoC\\\",\\\"instructions\\\":\\\"A word nest is created by taking a starting word, and generating a new string by placing the word _inside_ itself. This process is then repeated.\\\\n\\\\nNesting 3 times with the word \\\\\\\"incredible\\\\\\\":\\\\n\\\\n```\\\\nstart  = incredible\\\\nfirst  = incre|incredible|dible\\\\nsecond = increin|incredible|credibledible\\\\nthird  = increinincr|incredible|ediblecredibledible\\\\n```\\\\n\\\\nThe final nest is `\\\\\\\"increinincrincredibleediblecredibledible\\\\\\\"` (depth = 3).\\\\n\\\\nGiven a _starting word_ and the _final word nest_, return the _depth_ of the word nest.\\\\n\\\\n### Examples\\\\n```\\\\nwordNest(\\\\\\\"floor\\\\\\\", \\\\\\\"floor\\\\\\\") ➞ 0\\\\n\\\\nwordNest(\\\\\\\"code\\\\\\\", \\\\\\\"cocodccococodededeodeede\\\\\\\") ➞ 5","thisId":"1572","channelHost":"edabit.com","id":"1572","opcode":"1","channelId":"2","timestamp":"1652648890804"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"346\\\"]}\"]","thisId":"1573","channelHost":"edabit.com","id":"1573","opcode":"1","channelId":"2","timestamp":"1652648890902"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5284","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"346\\\",\\\"result\\\":{\\\"_id\\\":\\\"xLHemSaX8jAc6Tyz9\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class HarshadNumber {\\\\n\\\\tpublic static boolean isHarshad(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4931506849315068,\\\"quality\\\":4.857142857142857,\\\"editorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"familyId\\\":\\\"pYH85aFQeZjFWgqa5\\\",\\\"instructions\\\":\\\"A number is said to be **Harshad** if it's *exactly divisible* by the **sum** of its digits. Create a function that determines whether a number is a Harshad or not.\\\\n\\\\n### Examples\\\\n```\\\\nisHarshad(75) ➞ false\\\\n// 7 + 5 = 12\\\\n// 75 is not exactly divisible by 12\\\\n\\\\nisHarshad(171) ➞ true\\\\n// 1 + 7 + 1 = 9\\\\n// 9 exactly divides 171\\\\n\\\\nisHarshad(481) ➞ true\\\\n\\\\nisHarshad(89) ➞ false\\\\n\\\\nisHarshad(516) ➞ true\\\\n\\\\nisHarshad(200) ➞ true\\\\n```\\\\n\\\\n### Notes\\\\n- A recursive version of this challenge can be found [here](https://edabit.com/challenge/sjsHWXs7fNStCdrNr).\\\",\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"","thisId":"1574","channelHost":"edabit.com","id":"1574","opcode":"1","channelId":"2","timestamp":"1652648890906"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"347\\\"]}\"]","thisId":"1575","channelHost":"edabit.com","id":"1575","opcode":"1","channelId":"2","timestamp":"1652648891135"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5834","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"347\\\",\\\"result\\\":{\\\"_id\\\":\\\"jtFNMktij8FcH6zna\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Puzzle {\\\\n  public static boolean puzzlePieces(int[][] n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.4931506849315068,\\\"familyId\\\":\\\"PvB5EdrRSSphJ3YRX\\\",\\\"instructions\\\":\\\"Write a function that takes two arrays and adds the first element in the first array with the first element in the second array, the second element in the first array with the second element in the second array, etc, etc. Return `true` if all element combinations add up to the same number. Otherwise, return `false`.\\\\n\\\\n### Examples\\\\n```\\\\npuzzlePieces([1, 2, 3, 4], [4, 3, 2, 1]) ➞ true\\\\n// 1 + 4 = 5;  2 + 3 = 5;  3 + 2 = 5;  4 + 1 = 5\\\\n// Both arrays sum to [5, 5, 5, 5]\\\\n\\\\npuzzlePieces([1, 8, 5, 0, -1, 7], [0, -7, -4, 1, 2, -6]) ➞ true\\\\n\\\\npuzzlePieces([1, 2], [-1, -1]) ➞ false\\\\n\\\\npuzzlePieces([9, 8, 7], [7, 8, 9, 10]) ➞ false\\\\n```\\\\n\\\\n### Notes\\\\n- Each array will ha","thisId":"1576","channelHost":"edabit.com","id":"1576","opcode":"1","channelId":"2","timestamp":"1652648891139"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"348\\\"]}\"]","thisId":"1577","channelHost":"edabit.com","id":"1577","opcode":"1","channelId":"2","timestamp":"1652648891229"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"10112","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"348\\\",\\\"result\\\":{\\\"_id\\\":\\\"MX8ikyoCnDWr33saY\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static double myPi(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4893617021276595,\\\"familyId\\\":\\\"dH3QsY5WEW8LNi9RB\\\",\\\"instructions\\\":\\\"Given a integer `n`, write a function that returns PI to `n` decimal places.\\\\n\\\\n### Examples\\\\n```\\\\nmyPi(5) ➞ 3.14159\\\\n\\\\nmyPi(4) ➞ 3.1416\\\\n\\\\nmyPi(15) ➞ 3.141592653589793\\\\n```\\\\n\\\\n### Notes\\\\n- `n` will not be above 15, to keep this challenge simple.\\\\n- Round up the last digit if the next digit in PI is greater or equal to 5 (see second example above).\\\\n- The return value must be a number, not a string.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertThat(Program.myPi(0), is( 3.0));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  p","thisId":"1578","channelHost":"edabit.com","id":"1578","opcode":"1","channelId":"2","timestamp":"1652648891234"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"349\\\"]}\"]","thisId":"1579","channelHost":"edabit.com","id":"1579","opcode":"1","channelId":"2","timestamp":"1652648891340"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8984","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"349\\\",\\\"result\\\":{\\\"_id\\\":\\\"G9tAPeGEhR8r2DkH5\\\",\\\"author\\\":\\\"Kálmán Vilisics\\\",\\\"authorId\\\":\\\"Es4eX2stRpyoXeC7f\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int[] factorize(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4871794871794872,\\\"familyId\\\":\\\"NaFCystKBb5d8gwHr\\\",\\\"instructions\\\":\\\"Create a function that takes a number as its argument and returns an array of all its factors.\\\\n\\\\n### Examples\\\\n```\\\\nfactorize(12) ➞ [1, 2, 3, 4, 6, 12]\\\\n\\\\nfactorize(4) ➞ [1, 2, 4]\\\\n\\\\nfactorize(17) ➞ [1, 17]\\\\n```\\\\n\\\\n### Notes\\\\n- The input integer will be positive.\\\\n- A factor is a number that evenly divides into another number without leaving a remainder. The second example is a factor of 12, because 12 / 2 = 6, with remainder 0.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertThat(Cha","thisId":"1580","channelHost":"edabit.com","id":"1580","opcode":"1","channelId":"2","timestamp":"1652648891344"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"350\\\"]}\"]","thisId":"1581","channelHost":"edabit.com","id":"1581","opcode":"1","channelId":"2","timestamp":"1652648891473"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"9718","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"350\\\",\\\"result\\\":{\\\"_id\\\":\\\"px8DTp5gTmojeBLve\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int findZip(String str) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.488,\\\"familyId\\\":\\\"GGXMCRPFEWAvFMZnf\\\",\\\"instructions\\\":\\\"Write a function that returns the **position** of the **second occurrence** of \\\\\\\"zip\\\\\\\" in a string, or **-1** if it does not occur at least twice. Your code should be general enough to pass every possible case where \\\\\\\"zip\\\\\\\" can occur in a string.\\\\n\\\\n### Examples\\\\n```\\\\nfindZip(\\\\\\\"all zip files are zipped\\\\\\\") ➞ 18\\\\n\\\\nfindZip(\\\\\\\"all zip files are compressed\\\\\\\") ➞ -1\\\\n```\\\\n\\\\n### Notes\\\\nUppercase \\\\\\\"Zip\\\\\\\" is not the same as lowercase \\\\\\\"zip\\\\\\\".\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(18, Challenge.findZip(\\\\\\\"all zip files are zipped\\\\\\\"));\\\\n  }\\\\n\\\\t","thisId":"1582","channelHost":"edabit.com","id":"1582","opcode":"1","channelId":"2","timestamp":"1652648891479"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"351\\\"]}\"]","thisId":"1583","channelHost":"edabit.com","id":"1583","opcode":"1","channelId":"2","timestamp":"1652648891614"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"10368","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"351\\\",\\\"result\\\":{\\\"_id\\\":\\\"FsgEcZdjC4BYG9gLj\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int gcd(int a, int b) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.4906367041198503,\\\"familyId\\\":\\\"D3NonPZckE6fqEf9E\\\",\\\"instructions\\\":\\\"Create a function that takes two numbers as arguments and returns the Greatest Common Divisor (GCD) of the two numbers.\\\\n\\\\n### Examples\\\\n```\\\\ngcd(3, 5) ➞ 1\\\\n\\\\ngcd(14, 28) ➞ 14\\\\n\\\\ngcd(4, 18) ➞ 2\\\\n```\\\\n\\\\n### Notes\\\\nThe GCD is the highest number that can divide both arguments without a remainder.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(2, Challenge.gcd(6, 10));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(17, Challenge.gcd(17, 85));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test3() {\\\\n    assertEquals(9, Challenge.gcd(18, 153));\\\\n  ","thisId":"1584","channelHost":"edabit.com","id":"1584","opcode":"1","channelId":"2","timestamp":"1652648891618"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"352\\\"]}\"]","thisId":"1585","channelHost":"edabit.com","id":"1585","opcode":"1","channelId":"2","timestamp":"1652648891721"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"10309","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"352\\\",\\\"result\\\":{\\\"_id\\\":\\\"kgMghy3omychqLnXv\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static int[] uniqueSort(int[] nums) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4887218045112782,\\\"familyId\\\":\\\"PNKYzEfTeC6QRkrZr\\\",\\\"instructions\\\":\\\"Given an array of integers, write a method that returns an array that... \\\\n\\\\n1. Has all duplicate elements removed.\\\\n2. Is sorted from least value to greatest value.\\\\n\\\\n### Examples\\\\n```\\\\nuniqueSort([1, 2, 4, 3]) ➞ [1, 2, 3, 4]\\\\n\\\\nuniqueSort([1, 4, 4, 4, 4, 4, 3, 2, 1, 2]) ➞ [1, 2, 3, 4]\\\\n\\\\nuniqueSort([6, 7, 3, 2, 1]) ➞ [1, 2, 3, 6, 7]\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertThat(Program.uniqueSort(new int[]{1, 5, 8, 2, 3, 4, 4, 4, 10}), is(new int[]{1, 2, 3, 4, 5","thisId":"1586","channelHost":"edabit.com","id":"1586","opcode":"1","channelId":"2","timestamp":"1652648891725"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"353\\\"]}\"]","thisId":"1587","channelHost":"edabit.com","id":"1587","opcode":"1","channelId":"2","timestamp":"1652648891833"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7868","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"353\\\",\\\"result\\\":{\\\"_id\\\":\\\"GobCTBruAvA3ZDr4J\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean isAutomorphic(int n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.488888888888889,\\\"familyId\\\":\\\"oGpxPBch4aTxpbjMK\\\",\\\"instructions\\\":\\\"A number `n` is automorphic if `n^2` ends in `n`.\\\\n\\\\nFor example: n=5, n^2=2**5**\\\\n\\\\nCreate a function that takes a number and returns `true` if the number is automorphic, `false` if it isn't.\\\\n\\\\n### Examples\\\\n```\\\\nisAutomorphic(5) ➞ true\\\\n\\\\nisAutomorphic(8) ➞ false\\\\n\\\\nisAutomorphic(76) ➞ true\\\\n```\\\\n\\\\n### Notes\\\\nSquaring numbers can make them get quite large.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(true, Challenge.isAutomorphic(0));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(true, Challenge.isAutomorphic(1));\\\\n  }\\\\n","thisId":"1588","channelHost":"edabit.com","id":"1588","opcode":"1","channelId":"2","timestamp":"1652648891836"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"354\\\"]}\"]","thisId":"1589","channelHost":"edabit.com","id":"1589","opcode":"1","channelId":"2","timestamp":"1652648891939"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8281","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"354\\\",\\\"result\\\":{\\\"_id\\\":\\\"H6eTNH6NW36MHqkjb\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int pentagonal(int num) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.489247311827957,\\\"familyId\\\":\\\"RfvqD2CKspumRLKxy\\\",\\\"instructions\\\":\\\"Write a function that takes a positive integer `num` and calculates how many dots exist in a pentagonal shape around the center dot on the _Nth_ iteration.\\\\n\\\\nIn the image below you can see the first iteration is only a single dot. On the second, there are 6 dots. On the third, there are 16 dots, and on the fourth there are 31 dots.\\\\n\\\\n![alt text](https://edabit-challenges.s3.amazonaws.com/pentagonal_number.png \\\\\\\"Pentagonal Number\\\\\\\")\\\\n\\\\nReturn the number of dots that exist in the whole pentagon on the _Nth_ iteration.\\\\n\\\\n### Examples\\\\n```\\\\npentagonal(1) ➞ 1\\\\n\\\\npentagonal(2) ➞ 6\\\\n\\\\npentagonal(3) ➞ 16\\\\n\\\\npentagonal(8) ➞ 141\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.","thisId":"1590","channelHost":"edabit.com","id":"1590","opcode":"1","channelId":"2","timestamp":"1652648891946"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"355\\\"]}\"]","thisId":"1591","channelHost":"edabit.com","id":"1591","opcode":"1","channelId":"2","timestamp":"1652648892066"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"10563","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"355\\\",\\\"result\\\":{\\\"_id\\\":\\\"n7kbvMp5zHRmRbFQF\\\",\\\"archived\\\":false,\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Count {\\\\n  public static int[] countPositivesSumNegatives(int[] input) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.490909090909091,\\\"familyId\\\":\\\"nCbSzSZrvd2wYSTJR\\\",\\\"instructions\\\":\\\"Create a function that takes an array of positive and negative numbers. Return an array where the first element is the **count** of positive numbers and the second element is the **sum** of negative numbers.\\\\n\\\\n### Examples\\\\n```\\\\ncountPositivesSumNegatives([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15]) ➞ [10, -65]\\\\n// There are a total of 10 positive numbers.\\\\n// The sum of all negative numbers equals -65.\\\\n\\\\ncountPositivesSumNegatives([92, 6, 73, -77, 81, -90, 99, 8, -85, 34]) ➞ [7, -252]\\\\n\\\\ncountPositivesSumNegatives([91, -4, 80, -73, -28]) ➞ [2, -105]\\\\n\\\\ncountPositivesSumNegatives([]) ➞ []\\\\n```\\\\n\\\\n### Notes\\\\n- If given an empt","thisId":"1592","channelHost":"edabit.com","id":"1592","opcode":"1","channelId":"2","timestamp":"1652648892071"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"356\\\"]}\"]","thisId":"1593","channelHost":"edabit.com","id":"1593","opcode":"1","channelId":"2","timestamp":"1652648892167"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4330","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"356\\\",\\\"result\\\":{\\\"_id\\\":\\\"yFtCbCJBpoZM2rEqP\\\",\\\"author\\\":\\\"Timothy Cahill\\\",\\\"authorId\\\":\\\"tyLS9T6YMfg9fMtYJ\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int counterpartCharCode(char ch) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.490909090909091,\\\"familyId\\\":\\\"juHoMPbWFFdsZuK3Z\\\",\\\"instructions\\\":\\\"Create a function that takes a single character as an argument and returns the char code of its lowercased / uppercased counterpart.\\\\n\\\\n### Examples\\\\n```\\\\nGiven that:\\\\n  - \\\\\\\"A\\\\\\\" char code is: 65\\\\n  - \\\\\\\"a\\\\\\\" char code is: 97\\\\n\\\\ncounterpartCharCode(\\\\\\\"A\\\\\\\") ➞ 97\\\\n\\\\ncounterpartCharCode(\\\\\\\"a\\\\\\\") ➞ 65\\\\n```\\\\n\\\\n### Notes\\\\n- The argument will always be a single character.\\\\n- Not all inputs will have a counterpart (e.g. numbers), in which case return the input's char code.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t// Norm","thisId":"1594","channelHost":"edabit.com","id":"1594","opcode":"1","channelId":"2","timestamp":"1652648892172"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"359\\\"]}\"]","thisId":"1595","channelHost":"edabit.com","id":"1595","opcode":"1","channelId":"2","timestamp":"1652648892269"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8141","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"359\\\",\\\"result\\\":{\\\"_id\\\":\\\"kZZDAMCjekgBdWgJy\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean pagesInBook(int total) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.4918032786885247,\\\"familyId\\\":\\\"gLmJ34XdQvPCR8mXN\\\",\\\"instructions\\\":\\\"Suppose that you add all of the page numbers in a book.  If the total is 21, the book could only have 6 pages because 1 + 2 + 3 + 4 + 5 + 6 = 21.  If I had said the total were 25, that would be impossible because the next number in the series is 28 (21 + 7).\\\\n\\\\nCreate a function that, given the `total` number of pages as an argument, returns `true` if it is a valid total and `false` if it is not.\\\\n\\\\nCan you devise a solution that is more efficient than simply adding consecutive integers as I did above?\\\\n\\\\n### Examples\\\\n```\\\\npagesInBook(5) ➞ false\\\\n\\\\npagesInBook(4005) ➞ true\\\\n\\\\npagesInBook(9453) ➞ true\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport s","thisId":"1596","channelHost":"edabit.com","id":"1596","opcode":"1","channelId":"2","timestamp":"1652648892273"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"357\\\"]}\"]","thisId":"1597","channelHost":"edabit.com","id":"1597","opcode":"1","channelId":"2","timestamp":"1652648892397"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7857","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"357\\\",\\\"result\\\":{\\\"_id\\\":\\\"WHuKTT4wm6vnr8o3n\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean isPandigital(long num) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.4911242603550297,\\\"familyId\\\":\\\"eFFssNbtNAzf3eLgu\\\",\\\"instructions\\\":\\\"A **pandigital** number contains all digits (0-9) at least once. Write a function that takes an integer, returning `true` if the integer is pandigital, and `false` otherwise.\\\\n\\\\n### Examples\\\\n```\\\\nisPandigital(98140723568910) ➞ true\\\\n\\\\nisPandigital(90864523148909) ➞ false\\\\n// 7 is missing.\\\\n\\\\nisPandigital(112233445566778899) ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nThink about the properties of a pandigital number when all duplicates are removed.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(false, Challenge.isPandigital(84847473937L));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n","thisId":"1598","channelHost":"edabit.com","id":"1598","opcode":"1","channelId":"2","timestamp":"1652648892400"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"360\\\"]}\"]","thisId":"1599","channelHost":"edabit.com","id":"1599","opcode":"1","channelId":"2","timestamp":"1652648892519"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8304","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"360\\\",\\\"result\\\":{\\\"_id\\\":\\\"faMvfHSZ6r6DbGYAc\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String conjugate(String verb, int pronoun) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4931506849315068,\\\"familyId\\\":\\\"ksZtXzNZY9fA2gwNR\\\",\\\"instructions\\\":\\\"In this challenge, you must build a function that inflects an infinitive regular Italian verb of the first conjugation form to the present tense, including the personal subjective pronoun.\\\\n\\\\nAll first conjugation Italian verbs share the same suffix: **ARE**. The first thing to do is separate the verb root from the suffix.\\\\n- Root of \\\\\\\"programmare\\\\\\\" (_to code_) = \\\\\\\"programm\\\\\\\".\\\\n- Root of \\\\\\\"giocare\\\\\\\" (_to play_) = \\\\\\\"gioc\\\\\\\".\\\\n\\\\nFor each subjective pronoun the root is combined with a new suffix: see table below (pronouns are numbered for coding ease, in real grammar they are grouped in singular and plural, both from first to third):\\\\n\\\\n| # | Pronoun ","thisId":"1600","channelHost":"edabit.com","id":"1600","opcode":"1","channelId":"2","timestamp":"1652648892524"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"361\\\"]}\"]","thisId":"1601","channelHost":"edabit.com","id":"1601","opcode":"1","channelId":"2","timestamp":"1652648892617"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7754","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"361\\\",\\\"result\\\":{\\\"_id\\\":\\\"Xbrab5yY9zaknqDjQ\\\",\\\"author\\\":\\\"bangyen\\\",\\\"authorId\\\":\\\"yv7c4H2jimSKHEjtG\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String capSpace(String txt) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4914285714285713,\\\"familyId\\\":\\\"NW9FcYwc7ukyN8Ccf\\\",\\\"instructions\\\":\\\"Create a function which adds spaces before every capital in a word. Uncapitalize the whole string afterwards.\\\\n\\\\n### Examples\\\\n```\\\\ncapSpace(\\\\\\\"helloWorld\\\\\\\") ➞ \\\\\\\"hello world\\\\\\\"\\\\n\\\\ncapSpace(\\\\\\\"iLoveMyTeapot\\\\\\\") ➞ \\\\\\\"i love my teapot\\\\\\\"\\\\n\\\\ncapSpace(\\\\\\\"stayIndoors\\\\\\\") ➞ \\\\\\\"stay indoors\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nThe first letter will stay uncapitalized.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"hello world\\\\\\\", Challenge.capSpace(\\\\\\\"helloWorld\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEqu","thisId":"1602","channelHost":"edabit.com","id":"1602","opcode":"1","channelId":"2","timestamp":"1652648892622"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"358\\\"]}\"]","thisId":"1603","channelHost":"edabit.com","id":"1603","opcode":"1","channelId":"2","timestamp":"1652648892884"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"9057","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"358\\\",\\\"result\\\":{\\\"_id\\\":\\\"auwAWq4MXmXFwWrHf\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean parityAnalysis(int num) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.4915254237288136,\\\"familyId\\\":\\\"XjBQWqjhuttuzhz9w\\\",\\\"instructions\\\":\\\"Create a function that takes a number as input and returns `true` if the sum of its digits has the same parity as the entire number. Otherwise, return `false`.\\\\n\\\\n### Examples\\\\n```\\\\nparityAnalysis(243) ➞ true\\\\n// 243 is odd and so is 9 (2 + 4 + 3)\\\\n\\\\nparityAnalysis(12) ➞ false\\\\n// 12 is even but 3 is odd (1 + 2)\\\\n\\\\nparityAnalysis(3) ➞ true\\\\n// 3 is odd and 3 is odd and 3 is odd (3)\\\\n```\\\\n\\\\n### Notes\\\\n- Parity is whether a number is even or odd. If the sum of the digits is even and the number itself is even, return `true`. The same goes if the number is odd and so is the sum of its digits.\\\\n- Single digits will obviously have the same parities (see example #3).\\\",\\\"isH","thisId":"1604","channelHost":"edabit.com","id":"1604","opcode":"1","channelId":"2","timestamp":"1652648892903"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"362\\\"]}\"]","thisId":"1605","channelHost":"edabit.com","id":"1605","opcode":"1","channelId":"2","timestamp":"1652648892910"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8782","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"362\\\",\\\"result\\\":{\\\"_id\\\":\\\"tgjFboGwDEHY4Wn5S\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String accum(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4972375690607735,\\\"familyId\\\":\\\"FqjWqqW8pL8wwE9KJ\\\",\\\"instructions\\\":\\\"Create a function that takes a string and returns a new string with each new character accumulating by +1. Separate each set with a dash.\\\\n\\\\n### Examples\\\\n```\\\\naccum(\\\\\\\"abcd\\\\\\\") ➞ \\\\\\\"A-Bb-Ccc-Dddd\\\\\\\"\\\\n\\\\naccum(\\\\\\\"RqaEzty\\\\\\\") ➞ \\\\\\\"R-Qq-Aaa-Eeee-Zzzzz-Tttttt-Yyyyyyy\\\\\\\"\\\\n\\\\naccum(\\\\\\\"cwAt\\\\\\\") ➞ \\\\\\\"C-Ww-Aaa-Tttt\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Capitalize the first letter of each set.\\\\n- All tests contain valid strings with alphabetic characters (a-z, A-Z).\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertEquals(\\\\\\\"A-Bb-Ccc-Dddd\\\\\\\", Challenge.accum(\\\\\\\"ab","thisId":"1606","channelHost":"edabit.com","id":"1606","opcode":"1","channelId":"2","timestamp":"1652648892915"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"363\\\"]}\"]","thisId":"1607","channelHost":"edabit.com","id":"1607","opcode":"1","channelId":"2","timestamp":"1652648893032"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8911","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"363\\\",\\\"result\\\":{\\\"_id\\\":\\\"ijNrhCjfS2ZMtNkXS\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String toHex(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4946808510638299,\\\"familyId\\\":\\\"c6BgiqX6iCk5THxF7\\\",\\\"instructions\\\":\\\"Create a function that takes a string's characters as ASCII and returns each character's hexadecimal value as a string.\\\\n\\\\n### Examples\\\\n```\\\\ntoHex(\\\\\\\"hello world\\\\\\\") ➞ \\\\\\\"68 65 6c 6c 6f 20 77 6f 72 6c 64\\\\\\\"\\\\n\\\\ntoHex(\\\\\\\"Big Boi\\\\\\\") ➞ \\\\\\\"42 69 67 20 42 6f 69\\\\\\\"\\\\n\\\\ntoHex(\\\\\\\"Marty Poppinson\\\\\\\") ➞ \\\\\\\"4d 61 72 74 79 20 50 6f 70 70 69 6e 73 6f 6e\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Each byte must be seperated by a space.\\\\n- All alpha hex characters must be lowercase.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"42 69 67 20 42 6f 69\\\\\\\", Challenge.toHex(","thisId":"1608","channelHost":"edabit.com","id":"1608","opcode":"1","channelId":"2","timestamp":"1652648893039"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"364\\\"]}\"]","thisId":"1609","channelHost":"edabit.com","id":"1609","opcode":"1","channelId":"2","timestamp":"1652648893150"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7167","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"364\\\",\\\"result\\\":{\\\"_id\\\":\\\"tunTJAdBeLgc8s4ap\\\",\\\"author\\\":\\\"Nguyen Phan Dang\\\",\\\"authorId\\\":\\\"YLqdr7bYjwew2KM4N\\\",\\\"code\\\":\\\"public class ChallengeTests {\\\\n\\\\tpublic static String[] identicalFilter(String[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4954128440366972,\\\"familyId\\\":\\\"JRZ42Ghc79vRQfci9\\\",\\\"instructions\\\":\\\"Create a function that keeps only strings with repeating identical characters (in other words, it has a set size of 1).\\\\n\\\\n### Examples\\\\n```\\\\nidenticalFilter([\\\\\\\"aaaaaa\\\\\\\", \\\\\\\"bc\\\\\\\", \\\\\\\"d\\\\\\\", \\\\\\\"eeee\\\\\\\", \\\\\\\"xyz\\\\\\\"]) \\\\n➞ [\\\\\\\"aaaaaa\\\\\\\", \\\\\\\"d\\\\\\\", \\\\\\\"eeee\\\\\\\"]\\\\n\\\\nidenticalFilter([\\\\\\\"88\\\\\\\", \\\\\\\"999\\\\\\\", \\\\\\\"22\\\\\\\", \\\\\\\"545\\\\\\\", \\\\\\\"133\\\\\\\"]) \\\\n➞ [\\\\\\\"88\\\\\\\", \\\\\\\"999\\\\\\\", \\\\\\\"22\\\\\\\"]\\\\n\\\\nidenticalFilter([\\\\\\\"xxxxo\\\\\\\", \\\\\\\"oxo\\\\\\\", \\\\\\\"xox\\\\\\\", \\\\\\\"ooxxoo\\\\\\\", \\\\\\\"oxo\\\\\\\"]) \\\\n➞ []\\\\n```\\\\n\\\\n### Notes\\\\n- A string with a single character is trivially counted as a string with repeating identical characters.\\\\n- If there are no strings wit","thisId":"1610","channelHost":"edabit.com","id":"1610","opcode":"1","channelId":"2","timestamp":"1652648893153"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"365\\\"]}\"]","thisId":"1611","channelHost":"edabit.com","id":"1611","opcode":"1","channelId":"2","timestamp":"1652648893272"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6162","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"365\\\",\\\"result\\\":{\\\"_id\\\":\\\"z9ofdqhTYi9tdCj5T\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Digits {\\\\n\\\\tpublic static int numOfDigits(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.4954128440366972,\\\"familyId\\\":\\\"rAcQDLNiGEfQbu7ii\\\",\\\"instructions\\\":\\\"Create a function that will return an integer number corresponding to the amount of digits in the given integer `num`.\\\\n\\\\n### Examples\\\\n```\\\\nnumOfDigits(1000) ➞ 4\\\\n\\\\nnumOfDigits(12) ➞ 2\\\\n\\\\nnumOfDigits(1305981031) ➞ 10\\\\n\\\\nnumOfDigits(0) ➞ 1\\\\n```\\\\n\\\\n### Notes\\\\nTry to solve this challenge without using strings!\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"/** \\\\n================================= \\\\nTestGen 3.1 for JUnit 4.13.0 \\\\t\\\\t\\\\nTest Case: Digits::numOfDigits \\\\nTimestamp: 12/16/2020 07:13:35 PM \\\\n--------------------------------- \\\\n® DARKKO 2020 © \\\\n================================= \\\\n\\\\n**/ \\\\n\\\\nimport static org.junit.Assert.assertEqual","thisId":"1612","channelHost":"edabit.com","id":"1612","opcode":"1","channelId":"2","timestamp":"1652648893276"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"366\\\"]}\"]","thisId":"1613","channelHost":"edabit.com","id":"1613","opcode":"1","channelId":"2","timestamp":"1652648893401"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5274","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"366\\\",\\\"result\\\":{\\\"_id\\\":\\\"Tyzp6S67dtXPAAQan\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int primorial(int n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.5,\\\"familyId\\\":\\\"bxDXq99phWuzopvLR\\\",\\\"instructions\\\":\\\"A _Primorial_ is a product of the first `n` prime numbers (e.g. `2 x 3 x 5 = 30`). `2, 3, 5, 7, 11, 13` are prime numbers. If `n` was `3`, you'd multiply `2 x 3 x 5 = 30` or Primorial = `30`.\\\\n\\\\nCreate a function that returns the Primorial of a number.\\\\n\\\\n### Examples\\\\n```\\\\nprimorial(1) ➞ 2\\\\n\\\\nprimorial(2) ➞ 6\\\\n\\\\nprimorial(8) ➞ 9699690\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(2, Challenge.primorial(1));\\\\n  }\\\\n\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(6, Challenge.primorial(2));\\\\n  }\\\\n\\\\n\\\\t@Test\\\\n  public","thisId":"1614","channelHost":"edabit.com","id":"1614","opcode":"1","channelId":"2","timestamp":"1652648893406"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"367\\\"]}\"]","thisId":"1615","channelHost":"edabit.com","id":"1615","opcode":"1","channelId":"2","timestamp":"1652648893521"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8969","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"367\\\",\\\"result\\\":{\\\"_id\\\":\\\"nC9oD566JRp9cnth9\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String oddsVsEvens(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.5,\\\"familyId\\\":\\\"pNNabMTDcKEjZK2Yv\\\",\\\"instructions\\\":\\\"Given an integer, return `\\\\\\\"odd\\\\\\\"` if the sum of all *odd* digits is greater than the sum of all *even* digits. Return `\\\\\\\"even\\\\\\\"` if the sum of *even* digits is greater than the sum of *odd* digits, and `\\\\\\\"equal\\\\\\\"` if both sums are the same.\\\\n\\\\n### Examples\\\\n```\\\\noddsVsEvens(97428) ➞ \\\\\\\"odd\\\\\\\"\\\\n// odd = 16 (9+7)\\\\n// even = 14 (4+2+8)\\\\n\\\\noddsVsEvens(81961) ➞ \\\\\\\"even\\\\\\\"\\\\n// odd = 11 (1+9+1)\\\\n// even = 14 (8+6)\\\\n\\\\noddsVsEvens(54870) ➞ \\\\\\\"equal\\\\\\\"\\\\n// odd = 12 (5+7)\\\\n// even = 12 (4+8+0)\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    as","thisId":"1616","channelHost":"edabit.com","id":"1616","opcode":"1","channelId":"2","timestamp":"1652648893539"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"368\\\"]}\"]","thisId":"1617","channelHost":"edabit.com","id":"1617","opcode":"1","channelId":"2","timestamp":"1652648893654"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4159","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"368\\\",\\\"result\\\":{\\\"_id\\\":\\\"5aGCby28ZfsSZr4cH\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String wormLength(String worm) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n} \\\",\\\"difficulty\\\":1.5084745762711864,\\\"familyId\\\":\\\"g4rRFr27u44gT7CQr\\\",\\\"instructions\\\":\\\"Given a string `worm` create a function that takes the length of the worm and converts it into millimeters. Each `-` represents one centimeter.\\\\n\\\\n### Examples\\\\n```\\\\nwormLength(\\\\\\\"----------\\\\\\\") ➞ \\\\\\\"100 mm.\\\\\\\"\\\\n\\\\nwormLength(\\\\\\\"\\\\\\\") ➞ \\\\\\\"invalid\\\\\\\"\\\\n\\\\nwormLength(\\\\\\\"---_-___---_\\\\\\\") ➞ \\\\\\\"invalid\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nReturn `\\\\\\\"invalid\\\\\\\"` if an empty string is given or if the string has characters other than `-`.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals;\\\\nimport org.junit.Test;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test\\\\n\\\\tpublic void test01() {\\\\n\\\\t\\\\tassertEquals(Challen","thisId":"1618","channelHost":"edabit.com","id":"1618","opcode":"1","channelId":"2","timestamp":"1652648893659"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"369\\\"]}\"]","thisId":"1619","channelHost":"edabit.com","id":"1619","opcode":"1","channelId":"2","timestamp":"1652648893747"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6680","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"369\\\",\\\"result\\\":{\\\"_id\\\":\\\"6cBQuxkvN4f2Qn8x9\\\",\\\"author\\\":\\\"Mateusz Mędrowski\\\",\\\"authorId\\\":\\\"hPx9H3YM8j2k94DNW\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static double totalDistance(double fuel, double fuelUsage, int passengers, boolean airConditioner) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.5104166666666667,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"K5SpCwfvjS6KSpmLP\\\",\\\"instructions\\\":\\\"Write a function that takes `fuel` (liters), `fuelUsage` (liters/100km), `passengers`, `airConditioner` (boolean) and returns maximum distance that car can travel.\\\\n\\\\n- `fuel` is the number of liters of fuel in the fuel tank.\\\\n- `fuelUsage` is basic fuel consumption per 100 km (with the driver inside only).\\\\n- Every additional passenger is increasing basic fuel consumption by 5%.\\\\n- If the air conditioner is ON `true`, its increasing total (not basic) fuel consumption by 10%.\\\\n\\\\n### Examples\\\\n```\\\\ntotalDistance(70.0, 7.0, 0, false) ➞ 1000.0\\\\n\\\\ntotalDistance(36.1, 8.6","thisId":"1620","channelHost":"edabit.com","id":"1620","opcode":"1","channelId":"2","timestamp":"1652648893771"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"370\\\"]}\"]","thisId":"1621","channelHost":"edabit.com","id":"1621","opcode":"1","channelId":"2","timestamp":"1652648893875"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6650","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"370\\\",\\\"result\\\":{\\\"_id\\\":\\\"CKH5qJdtcFGNsdAfp\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class DashedVowel {\\\\n\\\\tpublic static String dashed(String s) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.5,\\\"quality\\\":4.472222222222222,\\\"familyId\\\":\\\"iRAmz8BPnhdFLdniX\\\",\\\"instructions\\\":\\\"Create a function that takes a string and returns **dashes** on both sides of every vowel (_a e i o u_).\\\\n\\\\n### Examples\\\\n```\\\\ndashed(\\\\\\\"Edabit\\\\\\\") ➞ \\\\\\\"-E-d-a-b-i-t\\\\\\\"\\\\n\\\\ndashed(\\\\\\\"Carpe Diem\\\\\\\") ➞ \\\\\\\"C-a-rp-e- D-i--e-m\\\\\\\"\\\\n\\\\ndashed(\\\\\\\"Fight for your right to party!\\\\\\\") ➞ \\\\\\\"F-i-ght f-o-r y-o--u-r r-i-ght t-o- p-a-rty!\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- A string can contain uppercase and lowercase vowels.\\\\n- **Y** is not considered a vowel.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals;\\\\nimport org.junit.Test;\\\\n\\\\npublic class DashedVowelTests {\\\\n\\\\t@Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertEquals(DashedVowel.dashe","thisId":"1622","channelHost":"edabit.com","id":"1622","opcode":"1","channelId":"2","timestamp":"1652648893880"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"371\\\"]}\"]","thisId":"1623","channelHost":"edabit.com","id":"1623","opcode":"1","channelId":"2","timestamp":"1652648894001"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6207","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"371\\\",\\\"result\\\":{\\\"_id\\\":\\\"CYm9fzo63bQNbWfnN\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String capLast(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.5037037037037038,\\\"familyId\\\":\\\"yeNN2NhvgCQY9XaYN\\\",\\\"instructions\\\":\\\"Create a function that capitalizes the last letter of every word.\\\\n\\\\n### Examples\\\\n```\\\\ncapLast(\\\\\\\"hello\\\\\\\") ➞ \\\\\\\"hellO\\\\\\\"\\\\n\\\\ncapLast(\\\\\\\"My Name Is Edabit\\\\\\\") ➞ \\\\\\\"MY NamE IS EdabiT\\\\\\\"\\\\n\\\\ncapLast(\\\\\\\"HELp THe LASt LETTERs CAPITALISe\\\\\\\") ➞ \\\\\\\"HELP THE LAST LETTERS CAPITALISE\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nThere won't be any cases of punctuation in the tests.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"hellO\\\\\\\", Challenge.capLast(\\\\\\\"hello\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(\\\\\\\"MY NamE ","thisId":"1624","channelHost":"edabit.com","id":"1624","opcode":"1","channelId":"2","timestamp":"1652648894006"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"372\\\"]}\"]","thisId":"1625","channelHost":"edabit.com","id":"1625","opcode":"1","channelId":"2","timestamp":"1652648894141"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7252","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"372\\\",\\\"result\\\":{\\\"_id\\\":\\\"DwMxxFrzZ5eZfBSGL\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class ListRanges {\\\\n  public static int[] inclusiveArray(int startNum,int endNum) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.504201680672269,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"9259vjs5RSvYEifSa\\\",\\\"instructions\\\":\\\"Write a function that, given the start `startNum` and end `endNum` values, return an array containing all the numbers **inclusive** to that range. See examples below.\\\\n\\\\n### Examples\\\\n```\\\\ninclusiveArray(1, 5) ➞ [1, 2, 3, 4, 5]\\\\n\\\\ninclusiveArray(2, 8) ➞ [2, 3, 4, 5, 6, 7, 8]\\\\n\\\\ninclusiveArray(10, 20) ➞ [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\\\\n\\\\ninclusiveArray(17, 5) ➞ [17]\\\\n```\\\\n\\\\n### Notes\\\\n- The numbers in the array are sorted in ascending order.\\\\n- If `startNum` is greater than `endNum`, return an array with the higher value. See example #4.\\\\n- A recursive version of this challenge can be found [here](htt","thisId":"1626","channelHost":"edabit.com","id":"1626","opcode":"1","channelId":"2","timestamp":"1652648894145"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"373\\\"]}\"]","thisId":"1627","channelHost":"edabit.com","id":"1627","opcode":"1","channelId":"2","timestamp":"1652648894261"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4908","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"373\\\",\\\"result\\\":{\\\"_id\\\":\\\"WrHfLyMXCMuGjxf2s\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class StringIndexes {\\\\n\\\\tpublic static String indexFilter(int[] idx, String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\t\\\\n}\\\",\\\"difficulty\\\":1.5,\\\"familyId\\\":\\\"QkYu6DniT9k7KWoT6\\\",\\\"instructions\\\":\\\"Create a function that takes two inputs: `idx` (an array of integers) and `str` (a string). The function should return another string with the letters of `str` at each index in `idx` in order.\\\\n\\\\n### Examples\\\\n```\\\\nindexFilter([7, -1, 5, 1], \\\\\\\"She is the love of my love\\\\\\\") ➞ \\\\\\\"tesh\\\\\\\"\\\\n\\\\nindexFilter([4, -7, -13, -11, -2, 0], \\\\\\\"Relax and stay calm to avoid failures\\\\\\\") ➞ \\\\\\\"xavier\\\\\\\"\\\\n\\\\nindexFilter([9, -9, 2, 27, 36, 6, 5, 13, -1, 2, 0, 30, 2], \\\\n  \\\\\\\"That's life, I've got you under my skin\\\\\\\") ➞ \\\\\\\"frank sinatra\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Indexes may not be in order or may be negative (see examples).\\\\n- The output string must always be lowercase,","thisId":"1628","channelHost":"edabit.com","id":"1628","opcode":"1","channelId":"2","timestamp":"1652648894265"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"377\\\"]}\"]","thisId":"1629","channelHost":"edabit.com","id":"1629","opcode":"1","channelId":"2","timestamp":"1652648894369"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4910","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"377\\\",\\\"result\\\":{\\\"_id\\\":\\\"7cugwZK74ciMmFqHe\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class VowelSummation { \\\\n\\\\tpublic static int sumOfVowels(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.509090909090909,\\\"familyId\\\":\\\"MBw2prxnfX7rdBKZS\\\",\\\"instructions\\\":\\\"Create a function that takes a string and returns the **sum of vowels**, where some vowels are considered numbers.\\\\n\\\\nVowel | Number\\\\n:--- | ---\\\\nA | 4\\\\nE | 3\\\\nI | 1\\\\nO | 0\\\\n\\\\n### Examples\\\\n```\\\\nsumOfVowels(\\\\\\\"My world evolves around Tesha's.\\\\\\\") ➞ 17\\\\n\\\\nsumOfVowels(\\\\\\\"Apparently, a heart that beats for no one, but for Tesh.\\\\\\\") ➞ 39\\\\n\\\\nsumOfVowels(\\\\\\\"I will be forever yours, babe.\\\\\\\") ➞ 18\\\\n\\\\nsumOfVowels(\\\\\\\"To each, his own.\\\\\\\") ➞ 8\\\\n\\\\nsumOfVowels(\\\\\\\"I love edabit!\\\\\\\") ➞ 12\\\\n```\\\\n\\\\n### Notes\\\\nVowels are case-insensitive (_e.g. A = 4 and a = 4_).\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Asse","thisId":"1630","channelHost":"edabit.com","id":"1630","opcode":"1","channelId":"2","timestamp":"1652648894373"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"375\\\"]}\"]","thisId":"1631","channelHost":"edabit.com","id":"1631","opcode":"1","channelId":"2","timestamp":"1652648894478"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5426","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"375\\\",\\\"result\\\":{\\\"_id\\\":\\\"a5onNYqzuKiGjWMQu\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int smallest(int digits, int value) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.5047619047619047,\\\"familyId\\\":\\\"xsnWmG9bc9Z9ZhW2N\\\",\\\"instructions\\\":\\\"Write a function that returns the **smallest N-digit number** which is a **multiple** of the specified value.\\\\n\\\\n### Examples\\\\n```\\\\nsmallest(3, 8) ➞ 104\\\\n// Smallest 3-digit integer that is a multiple of 8\\\\n\\\\nsmallest(5, 12) ➞ 10008\\\\n\\\\nsmallest(7, 1) ➞ 1000000\\\\n\\\\nsmallest(2, 3) ➞ 12\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(104, Challenge.smallest(3, 8));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(10008, Challenge.smallest(5, 12));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test3() {\\\\n    ass","thisId":"1632","channelHost":"edabit.com","id":"1632","opcode":"1","channelId":"2","timestamp":"1652648894485"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"374\\\"]}\"]","thisId":"1633","channelHost":"edabit.com","id":"1633","opcode":"1","channelId":"2","timestamp":"1652648894604"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5638","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"374\\\",\\\"result\\\":{\\\"_id\\\":\\\"ZY7b6LA5BeWQJnJX5\\\",\\\"author\\\":\\\"bangyen\\\",\\\"authorId\\\":\\\"yv7c4H2jimSKHEjtG\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static boolean omnipresent(int[][] arr, int val) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.5066666666666666,\\\"quality\\\":4.8125,\\\"familyId\\\":\\\"au4mYrHe5HEoA9P4A\\\",\\\"instructions\\\":\\\"A value is **omnipresent** if it exists in every subarray inside the main array.\\\\n\\\\nTo illustrate:\\\\n\\\\n```\\\\n[[3, 4], [8, 3, 2], [3], [9, 3], [5, 3], [4, 3]]\\\\n// 3 exists in every element inside this array, so is omnipresent.\\\\n```\\\\n\\\\nCreate a function that determines whether an input value is **omnipresent** for a given array.\\\\n\\\\n### Examples\\\\n```\\\\nomnipresent([[1, 1], [1, 3], [5, 1], [6, 1]], 1) ➞ true\\\\n\\\\nomnipresent([[1, 1], [1, 3], [5, 1], [6, 1]], 6) ➞ false\\\\n\\\\nomnipresent([[5], [5], [5], [6, 5]], 5) ➞ true\\\\n\\\\nomnipresent([[5], [5], [5], [6, 5]], 6) ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nSub-arrays can be any length.\\\",\\\"isHidden\\\":false,\\","thisId":"1634","channelHost":"edabit.com","id":"1634","opcode":"1","channelId":"2","timestamp":"1652648894609"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"376\\\"]}\"]","thisId":"1635","channelHost":"edabit.com","id":"1635","opcode":"1","channelId":"2","timestamp":"1652648894739"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4742","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"376\\\",\\\"result\\\":{\\\"_id\\\":\\\"usRLjLkxmg8SeYius\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Centigrade {\\\\n\\\\tpublic static double[] convertToTemps(double celcius) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.509433962264151,\\\"familyId\\\":\\\"XfJan9dTZYpMxYD8E\\\",\\\"instructions\\\":\\\"Write a program that takes a temperature input in `celsius` and converts it to **Fahrenheit** and **Kelvin**. Return an array of the converted values.\\\\n\\\\n\\\\nThe conversion formula:\\\\n\\\\n```\\\\nF = C*9/5 +32 // Celsius to Fahrenheit\\\\n\\\\nK = C + 273.15  // Celsius to Kelvin\\\\n```\\\\n\\\\n### Examples\\\\n```\\\\nconvertToTemps(0) ➞ [32.0, 273.15]\\\\n// 0°C is equal to 32°F and 273.15 K.\\\\n\\\\nconvertToTemps(100) ➞ [212.0, 373.15]\\\\n\\\\nconvertToTemps(-10) ➞ [14.0, 263.15]\\\\n\\\\nconvertToTemps(300.4) ➞ [572.72, 573.55]\\\\n```\\\\n\\\\n### Notes\\\\n- Round off results to **two** decimal places.\\\\n- Return an **empty** array if K is **below  zero**.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":fals","thisId":"1636","channelHost":"edabit.com","id":"1636","opcode":"1","channelId":"2","timestamp":"1652648894744"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"378\\\"]}\"]","thisId":"1637","channelHost":"edabit.com","id":"1637","opcode":"1","channelId":"2","timestamp":"1652648894848"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8732","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"378\\\",\\\"result\\\":{\\\"_id\\\":\\\"u7prkNxFxqartAfiG\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int sumTwoSmallestNums(int[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.50253807106599,\\\"familyId\\\":\\\"N75hKKY9Lu8Npypsv\\\",\\\"instructions\\\":\\\"Create a function that takes an array of numbers and returns the sum of the two lowest **positive** numbers.\\\\n\\\\n### Examples\\\\n```\\\\nsumTwoSmallestNums([19, 5, 42, 2, 77]) ➞ 7\\\\n\\\\nsumTwoSmallestNums([2, 9, 6, -1]) ➞ 8\\\\n\\\\nsumTwoSmallestNums([879, 953, 694, -847, 342, 221, -91, -723, 791, -587]) ➞ 563\\\\n\\\\nsumTwoSmallestNums([3683, 2902, 3951, -475, 1617, -2385]) ➞ 4519\\\\n```\\\\n\\\\n### Notes\\\\n- Don't count negative numbers.\\\\n- Floats and empty arrays will not be used in any of the test cases.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test \\\\n\\\\tpublic void","thisId":"1638","channelHost":"edabit.com","id":"1638","opcode":"1","channelId":"2","timestamp":"1652648894852"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"379\\\"]}\"]","thisId":"1639","channelHost":"edabit.com","id":"1639","opcode":"1","channelId":"2","timestamp":"1652648894983"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8287","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"379\\\",\\\"result\\\":{\\\"_id\\\":\\\"uYS6jZBk5sQ6qQyrK\\\",\\\"author\\\":\\\"Mateusz Mędrowski\\\",\\\"authorId\\\":\\\"hPx9H3YM8j2k94DNW\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static int WeeklySalary(int[] hours) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.5068493150684932,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"agjuzaRdjdXnNJgHL\\\",\\\"instructions\\\":\\\"Write a function that takes a list of `hours` and returns the total weekly salary.\\\\n\\\\n- The input list `hours` is listed sequentially, ordered from Monday to Sunday.\\\\n- A worker earns $10 an hour for the first 8 hours.\\\\n- For every overtime hour, he earns $15.\\\\n- On weekends, the employer pays double the usual rate, _regardless how many hours were worked previously that week_. For instance, 10 hours worked on a weekday would pay 80+30 = $110, but on a weekend it would pay 160+60 = $220.\\\\n\\\\n### Examples\\\\n```\\\\nWeeklySalary([8, 8, 8, 8, 8, 0, 0]) ➞ 400\\\\n\\\\nWeeklySalary([10, 10, 10, 0, 8, 0, 0]) ➞ 410\\\\n\\\\nWeeklySalary([0, 0, 0, 0, ","thisId":"1640","channelHost":"edabit.com","id":"1640","opcode":"1","channelId":"2","timestamp":"1652648894995"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"380\\\"]}\"]","thisId":"1641","channelHost":"edabit.com","id":"1641","opcode":"1","channelId":"2","timestamp":"1652648895092"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6842","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"380\\\",\\\"result\\\":{\\\"_id\\\":\\\"4DKpZPfSgyExdwirC\\\",\\\"author\\\":\\\"Bonunu\\\",\\\"authorId\\\":\\\"av5QexsdPza9FsRCq\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static int solveEquation(String equation) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.5078125,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"4jHwtRKLLAvasrutF\\\",\\\"instructions\\\":\\\"Create a function that returns the value of x (the \\\\\\\"unknown\\\\\\\" in the equation). Each equation will be formatted like this:\\\\n\\\\n```\\\\nx + 6 = 12\\\\n```\\\\n\\\\n### Examples\\\\n```\\\\nsolveEquation(\\\\\\\"x + 43 = 50\\\\\\\") ➞ 7\\\\n\\\\nsolveEquation(\\\\\\\"x - 9 = 10\\\\\\\") ➞ 19\\\\n\\\\nsolveEquation(\\\\\\\"x + 300 = 100\\\\\\\") ➞ -200\\\\n```\\\\n\\\\n### Notes\\\\n- \\\\\\\"**x**\\\\\\\" will always be in the same place (you will *not* find an equation like ***6 + x = 12***).\\\\n- Every equation will include either subtraction (**-**) or addition (**+**).\\\\n- \\\\\\\"**x**\\\\\\\" may be negative.\\\",\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert","thisId":"1642","channelHost":"edabit.com","id":"1642","opcode":"1","channelId":"2","timestamp":"1652648895111"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"381\\\"]}\"]","thisId":"1643","channelHost":"edabit.com","id":"1643","opcode":"1","channelId":"2","timestamp":"1652648895243"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7517","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"381\\\",\\\"result\\\":{\\\"_id\\\":\\\"LzY7r73f9xKhKvtki\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class WordLengths {\\\\n\\\\tpublic static String longestWord(String phrase) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.5083333333333333,\\\"familyId\\\":\\\"kMK8BXPxqpoqpxXNZ\\\",\\\"instructions\\\":\\\"Write a function that finds the **longest word** in a sentence. If two or more words are found, return the first longest word. Characters such as apostrophe, comma, period (and the like) count as part of the word (e.g. _O'Connor_ is 8 characters long).\\\\n\\\\n### Examples\\\\n```\\\\nlongestWord(\\\\\\\"Margaret's toy is a pretty doll.\\\\\\\") ➞ \\\\\\\"Margaret's\\\\\\\"\\\\n\\\\nlongestWord(\\\\\\\"A thing of beauty is a joy forever.\\\\\\\") ➞ \\\\\\\"forever.\\\\\\\"\\\\n\\\\nlongestWord(\\\\\\\"Forgetfulness is by all means powerless!\\\\\\\") ➞ \\\\\\\"Forgetfulness\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- A **recursive** version of this challenge can be found via this  [link](https://edabit.com/challenge/e3GaeWuJQ38fsFKS2).\\\",\\\"isF","thisId":"1644","channelHost":"edabit.com","id":"1644","opcode":"1","channelId":"2","timestamp":"1652648895247"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"382\\\"]}\"]","thisId":"1645","channelHost":"edabit.com","id":"1645","opcode":"1","channelId":"2","timestamp":"1652648895375"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6484","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"382\\\",\\\"result\\\":{\\\"_id\\\":\\\"tfD8Ct9niGcvS5usN\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class HouseInFront { \\\\n\\\\tpublic static long oppositeHouse(long house, long n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.5,\\\"familyId\\\":\\\"EYxm2kYo8J2yk7CfB\\\",\\\"instructions\\\":\\\"**Tesha** was walking through a straight street with exactly `n` identical houses on both sides. House numbers in the street look like this:\\\\n\\\\n```\\\\n1 |   | 6\\\\n\\\\n3 |   | 4\\\\n\\\\n5 |   | 2\\\\n```\\\\n\\\\nShe noticed that **even numbered houses** increase on the _right_ while **odd numbered houses** decrease on the _left_.\\\\n\\\\nCreate a function that takes a house number `house` and length of the street `n` and returns the house number on the opposite side.\\\\n\\\\n### Examples\\\\n```\\\\noppositeHouse(1, 3) ➞ 6\\\\n\\\\noppositeHouse(2, 3) ➞ 5\\\\n\\\\noppositeHouse(3, 5) ➞ 8\\\\n\\\\noppositeHouse(5, 46) ➞ 88\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"l","thisId":"1646","channelHost":"edabit.com","id":"1646","opcode":"1","channelId":"2","timestamp":"1652648895379"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"383\\\"]}\"]","thisId":"1647","channelHost":"edabit.com","id":"1647","opcode":"1","channelId":"2","timestamp":"1652648895499"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6499","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"383\\\",\\\"result\\\":{\\\"_id\\\":\\\"YLwQGrA24g9TmiGXf\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Graph {\\\\n\\\\tpublic static String histogram(int[] arr, String chr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.5052631578947369,\\\"familyId\\\":\\\"mwyyCgYYjinsAv39Q\\\",\\\"instructions\\\":\\\"Write a function that creates histograms. Every bar needs to be on a new line and its length corresponds to the numbers in the array passed as an argument. The  second argument represents the symbol to be used to represent the bar.\\\\n\\\\n### Examples\\\\n```\\\\nhistogram([1, 3, 4], \\\\\\\"#\\\\\\\") ➞ \\\\\\\"#\\\\\\\\n###\\\\\\\\n####\\\\\\\"\\\\n\\\\n#\\\\n###\\\\n####\\\\n\\\\nhistogram([6, 2, 15, 3], \\\\\\\"=\\\\\\\") ➞ \\\\\\\"======\\\\\\\\n==\\\\\\\\n===============\\\\\\\\n===\\\\\\\"\\\\n\\\\n======\\\\n==\\\\n===============\\\\n===\\\\n\\\\nhistogram([1, 10], \\\\\\\"+\\\\\\\") ➞ \\\\\\\"+\\\\\\\\n++++++++++\\\\\\\"\\\\n\\\\n+\\\\n++++++++++\\\\n```\\\\n\\\\n### Notes\\\\nFor better understanding try printing out the result.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidd","thisId":"1648","channelHost":"edabit.com","id":"1648","opcode":"1","channelId":"2","timestamp":"1652648895503"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"384\\\"]}\"]","thisId":"1649","channelHost":"edabit.com","id":"1649","opcode":"1","channelId":"2","timestamp":"1652648895619"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6717","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"384\\\",\\\"result\\\":{\\\"_id\\\":\\\"tvaT25krB65pYtghq\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class LetterAverage {\\\\n  public static double averageIndex(String[] arr) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\\t\\\",\\\"difficulty\\\":1.5106382978723405,\\\"familyId\\\":\\\"naNHs6eTZs5G9oyMD\\\",\\\"instructions\\\":\\\"Create a function that returns the average of an array composed of letters. First, find the number of the letter in the alphabet in order to find the average of the array.\\\\n\\\\n```\\\\nA = 1\\\\nB = 2\\\\nC = 3\\\\nD = 4\\\\nE = 5\\\\n```\\\\n\\\\n```\\\\naverage = total sum of all numbers / number of item in the set\\\\n```\\\\n\\\\nReturn the result rounded to two decimal points.\\\\n\\\\n### Examples\\\\n```\\\\naverageIndex([\\\\\\\"f\\\\\\\", \\\\\\\"o\\\\\\\", \\\\\\\"r\\\\\\\", \\\\\\\"t\\\\\\\", \\\\\\\"h\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"l\\\\\\\", \\\\\\\"o\\\\\\\", \\\\\\\"v\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"o\\\\\\\", \\\\\\\"f\\\\\\\", \\\\\\\"t\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"s\\\\\\\", \\\\\\\"h\\\\\\\"]) ➞ 12.44\\\\n\\\\naverageIndex([\\\\\\\"m\\\\\\\", \\\\\\\"y\\\\\\\", \\\\\\\"t\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"s\\\\\\\", \\\\\\\"h\\\\\\\"]) ➞ 15","thisId":"1650","channelHost":"edabit.com","id":"1650","opcode":"1","channelId":"2","timestamp":"1652648895626"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"385\\\"]}\"]","thisId":"1651","channelHost":"edabit.com","id":"1651","opcode":"1","channelId":"2","timestamp":"1652648895714"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4875","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"385\\\",\\\"result\\\":{\\\"_id\\\":\\\"w9mNwtPZX7qimRzJr\\\",\\\"author\\\":\\\"bangyen\\\",\\\"authorId\\\":\\\"yv7c4H2jimSKHEjtG\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static String decimator(String s) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.507936507936508,\\\"quality\\\":5,\\\"familyId\\\":\\\"Mz6YRWn8tbKn2Zz2K\\\",\\\"instructions\\\":\\\"Write a **_DECIMATOR_** function which takes a string and **_decimates_** it (i.e. it removes the last 1/10 of the characters).\\\\n\\\\n_Always round up_: if the string has 21 characters, 1/10 of the characters would be 2.1 characters, hence the **_DECIMATOR_** removes 3 characters. The **_DECIMATOR_** shows no mercy!\\\\n\\\\n### Examples\\\\n```\\\\ndecimator(\\\\\\\"1234567890\\\\\\\") ➞ \\\\\\\"123456789\\\\\\\"\\\\n// 10 characters, removed 1.\\\\n\\\\ndecimator(\\\\\\\"1234567890AB\\\\\\\") ➞ \\\\\\\"1234567890\\\\\\\"\\\\n// 12 characters, removed 2.\\\\n\\\\ndecimator(\\\\\\\"123\\\\\\\") ➞ \\\\\\\"12\\\\\\\"\\\\n// 3 characters, removed 1.\\\\n\\\\ndecimator(\\\\\\\"123456789012345678901\\\\\\\") ➞ \\\\\\\"123456789012345678\\\\\\\"\\\\n// 21 characters, re","thisId":"1652","channelHost":"edabit.com","id":"1652","opcode":"1","channelId":"2","timestamp":"1652648895718"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"386\\\"]}\"]","thisId":"1653","channelHost":"edabit.com","id":"1653","opcode":"1","channelId":"2","timestamp":"1652648895816"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8856","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"386\\\",\\\"result\\\":{\\\"_id\\\":\\\"KESQCRf5mJd7x6Rfh\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static int[] removeDups(int[] nums) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n\\\\n\\\\tpublic static String[] removeDups(String[] str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.5085714285714287,\\\"familyId\\\":\\\"xn4e4Sdbd2Mtsgz5z\\\",\\\"instructions\\\":\\\"Create a method that takes an array of strings or integers, removes all duplicate items and returns a new array in the same sequential order as the old array (minus duplicates).\\\\n\\\\n### Examples\\\\n```\\\\nremoveDups([1, 0, 1, 0]) ➞ [1, 0]\\\\n\\\\nremoveDups([\\\\\\\"The\\\\\\\", \\\\\\\"big\\\\\\\", \\\\\\\"cat\\\\\\\"]) ➞ [\\\\\\\"The\\\\\\\", \\\\\\\"big\\\\\\\", \\\\\\\"cat\\\\\\\"]\\\\n\\\\nremoveDups([\\\\\\\"John\\\\\\\", \\\\\\\"Taylor\\\\\\\", \\\\\\\"John\\\\\\\"]) ➞ [\\\\\\\"John\\\\\\\", \\\\\\\"Taylor\\\\\\\"]\\\\n```\\\\n\\\\n### Notes\\\\n\\\\n- Tests contain arrays with both strings and integers.\\\\n- Tests are case sensitive.\\\\n- Each array item is unique.\\\",\\\"lab\\\":\\\"import static ","thisId":"1654","channelHost":"edabit.com","id":"1654","opcode":"1","channelId":"2","timestamp":"1652648895820"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"387\\\"]}\"]","thisId":"1655","channelHost":"edabit.com","id":"1655","opcode":"1","channelId":"2","timestamp":"1652648895930"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5187","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"387\\\",\\\"result\\\":{\\\"_id\\\":\\\"qjY6B7fHSRZBSiG7o\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int lcm(int n1, int n2) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.514018691588785,\\\"familyId\\\":\\\"tXBDzyZFrFzQWyHqh\\\",\\\"instructions\\\":\\\"Write a function that returns the **least common multiple (LCM)** of two integers.\\\\n\\\\n### Examples\\\\n```\\\\nlcm(9, 18) ➞ 18\\\\n\\\\nlcm(8, 5) ➞ 40\\\\n\\\\nlcm(17, 11) ➞ 187\\\\n```\\\\n\\\\n### Notes\\\\n- Both values will be positive.\\\\n- The **LCM** is the smallest integer that is divisible by both numbers such that the remainder is zero.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(18, Challenge.lcm(9, 18));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(40, Challenge.lcm(8, 5));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test3() {\\\\n    assertEquals(187, Chal","thisId":"1656","channelHost":"edabit.com","id":"1656","opcode":"1","channelId":"2","timestamp":"1652648895933"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"388\\\"]}\"]","thisId":"1657","channelHost":"edabit.com","id":"1657","opcode":"1","channelId":"2","timestamp":"1652648896042"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5205","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"388\\\",\\\"result\\\":{\\\"_id\\\":\\\"EFFCkmQcYTFkt3FxC\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class WordVowels {\\\\n  public static String extendVowels(String w, int n) {\\\\n    \\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.52,\\\"familyId\\\":\\\"nnyRigcoqTjXexnkS\\\",\\\"instructions\\\":\\\"Create a function that takes a `word` and extends all vowels by a number `num`.\\\\n\\\\n### Examples\\\\n```\\\\nextendVowels(\\\\\\\"Xavier\\\\\\\", 6) ➞ \\\\\\\"Xaaaaaaaviiiiiiieeeeeeer\\\\\\\"\\\\n\\\\nextendVowels(\\\\\\\"Loves\\\\\\\", 4) ➞ \\\\\\\"Loooooveeeees\\\\\\\"\\\\n\\\\nextendVowels(\\\\\\\"Tesha\\\\\\\", 5) ➞ \\\\\\\"Teeeeeeshaaaaaa\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nReturn `\\\\\\\"invalid\\\\\\\"` if `num` is not a positive integer or 0.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"/** \\\\n=================================== \\\\nTestGen 3.1 for JUnit 4.13.0 \\\\t\\\\t\\\\nTest Case: WordVowels::extendVowels \\\\nTimestamp: 11/29/2020 02:41:01 PM \\\\n----------------------------------- \\\\n® DARKKO 2020 © \\\\n=========================","thisId":"1658","channelHost":"edabit.com","id":"1658","opcode":"1","channelId":"2","timestamp":"1652648896045"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"389\\\"]}\"]","thisId":"1659","channelHost":"edabit.com","id":"1659","opcode":"1","channelId":"2","timestamp":"1652648896176"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6154","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"389\\\",\\\"result\\\":{\\\"_id\\\":\\\"bzgkfePPbHyAyTdN3\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int minSwaps(String s1, String s2) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.5104166666666667,\\\"familyId\\\":\\\"ST7FRo3kv8DJZYdqN\\\",\\\"instructions\\\":\\\"Write a function that returns the minimum number of swaps to convert the first binary string into the second.\\\\n\\\\n### Examples\\\\n```\\\\nminSwaps(\\\\\\\"1100\\\\\\\", \\\\\\\"1001\\\\\\\") ➞ 1\\\\n\\\\nminSwaps(\\\\\\\"110011\\\\\\\", \\\\\\\"010111\\\\\\\") ➞ 1\\\\n\\\\nminSwaps(\\\\\\\"10011001\\\\\\\", \\\\\\\"01100110\\\\\\\") ➞ 4\\\\n```\\\\n\\\\n### Notes\\\\n- Both binary strings will be of equal length.\\\\n- Both binary strings will have an equal number of zeroes and ones.\\\\n- A swap is switching two elements in a string (swaps do **not** have to be adjacent).\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(0, Cha","thisId":"1660","channelHost":"edabit.com","id":"1660","opcode":"1","channelId":"2","timestamp":"1652648896181"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"390\\\"]}\"]","thisId":"1661","channelHost":"edabit.com","id":"1661","opcode":"1","channelId":"2","timestamp":"1652648896274"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6070","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"390\\\",\\\"result\\\":{\\\"_id\\\":\\\"qPtcAMm4RhBmGG7XE\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean isNarcissistic(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.5204081632653061,\\\"familyId\\\":\\\"LkPphxa38y9N8ruZ2\\\",\\\"instructions\\\":\\\"A number is narcissistic when the sum of its digits, with each digit raised to the power of digits quantity, is equal to the number itself.\\\\n\\\\n```\\\\n153 ➞ 3 digits ➞ 1³ + 5³ + 3³ = 1 + 125 + 27 = 153 ➞ Narcissistic\\\\n84 ➞ 2 digits ➞ 8² + 4² = 64 + 16 = 80 ➞ Not narcissistic\\\\n```\\\\n\\\\nGiven a positive integer `n`, implement a function that returns `true` if the number is narcissistic, and `false` if it's not.\\\\n\\\\n### Examples\\\\n```\\\\nisNarcissistic(8208) ➞ true\\\\n// 8⁴ + 2⁴ + 0⁴ + 8⁴ = 8208\\\\n\\\\nisNarcissistic(22) ➞ false\\\\n// 2² + 2² = 8\\\\n\\\\nisNarcissistic(9) ➞ true\\\\n// 9¹ = 9\\\\n```\\\\n\\\\n### Notes\\\\n- Trivially, any number in the 1-9 range is narcissistic and any two-","thisId":"1662","channelHost":"edabit.com","id":"1662","opcode":"1","channelId":"2","timestamp":"1652648896278"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"393\\\"]}\"]","thisId":"1663","channelHost":"edabit.com","id":"1663","opcode":"1","channelId":"2","timestamp":"1652648896384"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5765","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"393\\\",\\\"result\\\":{\\\"_id\\\":\\\"sF6Lm5LQsy6u2ZKeZ\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String toCamelCase(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.5175438596491229,\\\"familyId\\\":\\\"X2BzLnXFy2Pi8RgDx\\\",\\\"instructions\\\":\\\"Create a function that converts dash/underscore delimited words into camel casing. The first word within the output should be capitalized only if the original word was capitalized.\\\\n\\\\n### Examples\\\\n```\\\\ntoCamelCase(\\\\\\\"A-B-C\\\\\\\") ➞ \\\\\\\"ABC\\\\\\\"\\\\n\\\\ntoCamelCase(\\\\\\\"the-stealth-warrior\\\\\\\") ➞ \\\\\\\"theStealthWarrior\\\\\\\"\\\\n\\\\ntoCamelCase(\\\\\\\"The_Stealth_Warrior\\\\\\\") ➞ \\\\\\\"TheStealthWarrior\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nAn empty string as input `\\\\\\\"\\\\\\\"` should return an empty string.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"theStealthWarrior\\\\\\\", Challe","thisId":"1664","channelHost":"edabit.com","id":"1664","opcode":"1","channelId":"2","timestamp":"1652648896387"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"391\\\"]}\"]","thisId":"1665","channelHost":"edabit.com","id":"1665","opcode":"1","channelId":"2","timestamp":"1652648896508"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6765","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"391\\\",\\\"result\\\":{\\\"_id\\\":\\\"9Y83kppxQeMbvtDtF\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static String alternatingCaps(String s) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.5168539325842696,\\\"familyId\\\":\\\"tX6Fhqn9hcyWwLwrz\\\",\\\"instructions\\\":\\\"Create a method that alternates the case of the letters in a string (known as **Spongecase**).\\\\n\\\\n### Examples\\\\n```\\\\nalternatingCaps(\\\\\\\"Hello\\\\\\\") ➞ \\\\\\\"HeLlO\\\\\\\"\\\\n\\\\nalternatingCaps(\\\\\\\"How are you?\\\\\\\") ➞ \\\\\\\"HoW aRe YoU?\\\\\\\"\\\\n\\\\nalternatingCaps(\\\\\\\"OMG this website is awesome!\\\\\\\") ➞ \\\\\\\"OmG tHiS wEbSiTe Is AwEsOmE!\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- The first letter should always be UPPERCASE.\\\\n- Ignore spaces.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"AlTeRnAtInG cApS\\\\\\\", Program.alternatingCaps(\\\\\\\"alternating caps\\\\\\\"));","thisId":"1666","channelHost":"edabit.com","id":"1666","opcode":"1","channelId":"2","timestamp":"1652648896534"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"392\\\"]}\"]","thisId":"1667","channelHost":"edabit.com","id":"1667","opcode":"1","channelId":"2","timestamp":"1652648896628"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4590","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"392\\\",\\\"result\\\":{\\\"_id\\\":\\\"CnCvL9vmjYtFG785t\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class LastElements {\\\\n  public static int[] last(int[] r,int n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.5194805194805194,\\\"familyId\\\":\\\"wdCKAK338JvgjXS4m\\\",\\\"instructions\\\":\\\"Write a function that retrieves the last `n` elements from an array.\\\\n\\\\n### Examples\\\\n```\\\\nlast([1, 2, 3, 4, 5], 1) ➞ [5]\\\\n\\\\nlast([4, 3, 9, 9, 7, 6], 3) ➞ [9, 7, 6]\\\\n\\\\nlast([1, 2, 3, 4, 5], 7) ➞ null\\\\n\\\\nlast([1, 2, 3, 4, 5], 0) ➞ []\\\\n```\\\\n\\\\n### Notes\\\\n- Return `null` if `n` exceeds the length of the array.\\\\n- Return an empty array if `n == 0`.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertArrayEquals; \\\\nimport org.junit.Test; \\\\n\\\\npublic class LastElementsTest {\\\\n\\\\t@Test\\\\n\\\\tpublic void test01() { \\\\n\\\\t\\\\tassertArrayEquals(new int[] {}, LastElements.last(new int[] {1, 2, 3, 4, 5}, 0));\\\\n\\\\t}\\\\n\\\\n\\\\t","thisId":"1668","channelHost":"edabit.com","id":"1668","opcode":"1","channelId":"2","timestamp":"1652648896632"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"394\\\"]}\"]","thisId":"1669","channelHost":"edabit.com","id":"1669","opcode":"1","channelId":"2","timestamp":"1652648896763"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"9031","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"394\\\",\\\"result\\\":{\\\"_id\\\":\\\"zmbR8SKveCgJ6KB5G\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int duplicates(String str) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.5168539325842696,\\\"familyId\\\":\\\"Qo2PyszA2tHbYnyYm\\\",\\\"instructions\\\":\\\"Create a function that returns the amount of duplicate characters in a string. It will be case sensitive and spaces are included. If there are no duplicates, return `0`.\\\\n\\\\n### Examples\\\\n```\\\\nduplicates(\\\\\\\"Hello World!\\\\\\\") ➞ 3\\\\n// \\\\\\\"o\\\\\\\" = 2, \\\\\\\"l\\\\\\\" = 3.\\\\n// \\\\\\\"o\\\\\\\" is duplicated 1 extra time and \\\\\\\"l\\\\\\\" is duplicated 2 extra times.\\\\n// Hence 1 + 2 = 3\\\\n\\\\nduplicates(\\\\\\\"foobar\\\\\\\") ➞ 1\\\\n\\\\nduplicates(\\\\\\\"helicopter\\\\\\\") ➞ 1\\\\n\\\\nduplicates(\\\\\\\"birthday\\\\\\\") ➞ 0\\\\n// If there are no duplicates, return 0\\\\n```\\\\n\\\\n### Notes\\\\nMake sure to only start counting the second time a character appears.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org","thisId":"1670","channelHost":"edabit.com","id":"1670","opcode":"1","channelId":"2","timestamp":"1652648896767"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"398\\\"]}\"]","thisId":"1671","channelHost":"edabit.com","id":"1671","opcode":"1","channelId":"2","timestamp":"1652648896871"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6648","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"398\\\",\\\"result\\\":{\\\"_id\\\":\\\"vYQogxrcQBEMr7y3F\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int nextPrime(int num) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.5238095238095237,\\\"familyId\\\":\\\"Ssm9DQg8pj4ahNs6R\\\",\\\"instructions\\\":\\\"Given an integer, create a function that returns the next prime. If the number is prime, return the number itself.\\\\n\\\\n### Examples\\\\n```\\\\nnextPrime(12) ➞ 13\\\\n\\\\nnextPrime(24) ➞ 29\\\\n\\\\nnextPrime(11) ➞ 11\\\\n// 11 is a prime, so we return the number itself.\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(13, Challenge.nextPrime(12));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(29, Challenge.nextPrime(24));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test3() {\\\\n    assertEquals(11, Challenge.nextPrime(11));\\\\n  }\\\\n\\\\t\\\\n\\","thisId":"1672","channelHost":"edabit.com","id":"1672","opcode":"1","channelId":"2","timestamp":"1652648896875"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"396\\\"]}\"]","thisId":"1673","channelHost":"edabit.com","id":"1673","opcode":"1","channelId":"2","timestamp":"1652648896992"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6860","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"396\\\",\\\"result\\\":{\\\"_id\\\":\\\"hEbyZPTpxt4AtmmhP\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class AltSequence {\\\\n\\\\tpublic static int littleBig(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.5151515151515151,\\\"familyId\\\":\\\"h3iEEPiLB8GyikmPz\\\",\\\"instructions\\\":\\\"A number sequence is as follows:\\\\n\\\\n```\\\\n5, 100, 6, 200, 7, 400, 8, 800, 9, 1600, 10, 3200, ...\\\\n```\\\\n\\\\nGiven that `5` is at position **1**, create a function that returns the number found at position `n` in the sequence.\\\\n\\\\n### Examples\\\\n```\\\\nlittleBig(4) ➞ 200\\\\n\\\\nlittleBig(5) ➞ 7\\\\n\\\\nlittleBig(28) ➞ 819200\\\\n```\\\\n\\\\n### Notes\\\\nYou can expect to be only given valid inputs.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals; \\\\nimport org.junit.Test; \\\\n\\\\npublic class AltSequenceTest {\\\\n\\\\t@Test\\\\n\\\\tpublic void test01() { \\\\n\\\\t\\\\tassertEquals(5, AltSequence.littleBig(1));\\\\n\\\\t}\\\\n\\\\n\\\\t@Test\\\\n\\\\tpublic ","thisId":"1674","channelHost":"edabit.com","id":"1674","opcode":"1","channelId":"2","timestamp":"1652648896995"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"395\\\"]}\"]","thisId":"1675","channelHost":"edabit.com","id":"1675","opcode":"1","channelId":"2","timestamp":"1652648897178"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7352","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"395\\\",\\\"result\\\":{\\\"_id\\\":\\\"g3zwGCJN5Ti8TSSbh\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static boolean isCircleCollision(int[] c1, int[] c2) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.5120481927710843,\\\"familyId\\\":\\\"8t2Kzue8xm5ePy9eM\\\",\\\"instructions\\\":\\\"Create a method that returns `true` if the given circles are intersecting, otherwise return `false`. The circles are given as two arrays containing the values in the following order:\\\\n\\\\n1. Radius of the circle.\\\\n2. Center position on the x-axis.\\\\n3. Center position on the y-axis.\\\\n\\\\n### Examples\\\\n```\\\\nisCircleCollision([10, 0, 0], [10, 10, 10]) ➞ true\\\\n\\\\nisCircleCollision([1, 0, 0], [1, 10, 10]) ➞ false\\\\n```\\\\n\\\\n###  Notes\\\\n- You can expect useable input and positive radii.\\\\n- The given coordinates are the centers of the circles.\\\\n- We are looking for intersecting areas, not intersection outlines.\\\\n- Check the **Resources** tab for h","thisId":"1676","channelHost":"edabit.com","id":"1676","opcode":"1","channelId":"2","timestamp":"1652648897183"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"397\\\"]}\"]","thisId":"1677","channelHost":"edabit.com","id":"1677","opcode":"1","channelId":"2","timestamp":"1652648897288"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6546","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"397\\\",\\\"result\\\":{\\\"_id\\\":\\\"KMggZFnrWJGxk2tvn\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class BinaryString {\\\\n  public static boolean validateBinary(String bits) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.5164835164835164,\\\"familyId\\\":\\\"34BYfjj3EtvGHCA4f\\\",\\\"instructions\\\":\\\"Parity bits are used as very simple checksum to ensure that binary data isn't corrupted during transit. Here's how they work:\\\\n\\\\n* If a binary string has an **odd** number of **1**'s, the parity bit is a **1**.\\\\n* If a binary string has an **even** number of **1**'s, the parity bit is a **0**.\\\\n* The parity bit is appended to the **end** of the binary string.\\\\n\\\\nCreate a function that validates whether a binary string is valid, using parity bits.\\\\n\\\\n### Examples\\\\n```\\\\nvalidateBinary(\\\\\\\"10110010\\\\\\\") ➞ true\\\\n// The last digit is the parity bit.\\\\n// 0 is the last digit.\\\\n// 0 means that there should be an even number of 1's.\\\\n// There are four 1's.\\\\n// Ret","thisId":"1678","channelHost":"edabit.com","id":"1678","opcode":"1","channelId":"2","timestamp":"1652648897293"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"399\\\"]}\"]","thisId":"1679","channelHost":"edabit.com","id":"1679","opcode":"1","channelId":"2","timestamp":"1652648897424"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6730","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"399\\\",\\\"result\\\":{\\\"_id\\\":\\\"2rJAhXLRaRB3gjwaC\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String replaceThe(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.524390243902439,\\\"familyId\\\":\\\"zcggT7BvEAsnySg7n\\\",\\\"instructions\\\":\\\"Create a function that **replaces \\\\\\\"the\\\\\\\"** in the sentence with **\\\\\\\"an\\\\\\\"** or **\\\\\\\"a\\\\\\\"**. Remember that if the *next word* begins with a *vowel*, use **\\\\\\\"an\\\\\\\"**. In the case of a *consonant*, use **\\\\\\\"a\\\\\\\"**.\\\\n\\\\n### Examples\\\\n```\\\\nreplaceThe(\\\\\\\"the dog and the envelope\\\\\\\") ➞ \\\\\\\"a dog and an envelope\\\\\\\"\\\\n\\\\nreplaceThe(\\\\\\\"the boy ran at the wall\\\\\\\") ➞ \\\\\\\"a boy ran at a wall\\\\\\\"\\\\n\\\\nreplaceThe(\\\\\\\"the egg, the spoon and the espionage\\\\\\\") ➞ \\\\\\\"an egg, a spoon and an espionage\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Sentences will always be in **lowercase**.\\\\n- The last word of the sentence will never be \\\\\\\"the\\\\\\\".\\\\n- This won't cover edge cases such as *\\\\\\\"an ho","thisId":"1680","channelHost":"edabit.com","id":"1680","opcode":"1","channelId":"2","timestamp":"1652648897430"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"400\\\"]}\"]","thisId":"1681","channelHost":"edabit.com","id":"1681","opcode":"1","channelId":"2","timestamp":"1652648897548"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6485","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"400\\\",\\\"result\\\":{\\\"_id\\\":\\\"99k6HcWYvvbZirkDW\\\",\\\"author\\\":\\\"rubens\\\",\\\"authorId\\\":\\\"XhzKztoQYYQzZ2c7o\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static boolean isPalindrome(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.5214285714285714,\\\"familyId\\\":\\\"cbWJKmFjGyKXv35cz\\\",\\\"instructions\\\":\\\"Write a function that **recursively** determines if a string is a palindrome.\\\\n\\\\n### Examples\\\\n```\\\\nisPalindrome(\\\\\\\"abcba\\\\\\\") ➞ true\\\\n\\\\nisPalindrome(\\\\\\\"b\\\\\\\") ➞ true\\\\n\\\\nisPalindrome(\\\\\\\"\\\\\\\") ➞ true\\\\n\\\\nisPalindrome(\\\\\\\"ad\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nAn empty string counts as a palindrome.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(true, Program.isPalindrome(\\\\\\\"abcba\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(true, Program.isPalindrome(\\\\\\\"abbba\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test3() {\\\\","thisId":"1682","channelHost":"edabit.com","id":"1682","opcode":"1","channelId":"2","timestamp":"1652648897551"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"401\\\"]}\"]","thisId":"1683","channelHost":"edabit.com","id":"1683","opcode":"1","channelId":"2","timestamp":"1652648897663"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8965","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"401\\\",\\\"result\\\":{\\\"_id\\\":\\\"aG8byPZcEj9yLKxA3\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static String reverse(String s) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.5257142857142858,\\\"familyId\\\":\\\"zTnQWWP9MLPvqAJSh\\\",\\\"instructions\\\":\\\"Write a method that takes a string of one or more words as an argument and returns the same string, but with all five or more letter words reversed. Strings passed in will consist of only letters and spaces. Spaces will be included only when more than one word is present.\\\\n\\\\n### Examples\\\\n```\\\\nreverse(\\\\\\\"Reverse\\\\\\\") ➞ \\\\\\\"esreveR\\\\\\\"\\\\n\\\\nreverse(\\\\\\\"This is a typical sentence.\\\\\\\") ➞ \\\\\\\"This is a lacipyt .ecnetnes\\\\\\\"\\\\n\\\\nreverse(\\\\\\\"The dog is big.\\\\\\\") ➞ \\\\\\\"The dog is big.\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nYou can expect a valid string to be provided for each test case.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic cl","thisId":"1684","channelHost":"edabit.com","id":"1684","opcode":"1","channelId":"2","timestamp":"1652648897666"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"402\\\"]}\"]","thisId":"1685","channelHost":"edabit.com","id":"1685","opcode":"1","channelId":"2","timestamp":"1652648897767"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6539","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"402\\\",\\\"result\\\":{\\\"_id\\\":\\\"FtoNXq7DTCAiZ3z9T\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean isSmooth(String sentence) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.5321100917431192,\\\"familyId\\\":\\\"yf3Cc9cyQJYcax2ZP\\\",\\\"instructions\\\":\\\"Carlos is a huge fan of something he calls **smooth sentences**.\\\\n\\\\nA smooth sentence is one where the last letter of each word is identical to the first letter the following word (and not case sensitive, so \\\\\\\"A\\\\\\\" would be the same as \\\\\\\"a\\\\\\\").\\\\n\\\\nThe following would be a smooth sentence _\\\\\\\"Carlos swam masterfully\\\\\\\"_ because \\\\\\\"Carlos\\\\\\\" ends with an \\\\\\\"s\\\\\\\" and swam begins with an \\\\\\\"s\\\\\\\" and swam ends with an \\\\\\\"m\\\\\\\" and masterfully begins with an \\\\\\\"m\\\\\\\".\\\\n\\\\nCreate a function that determines whether the input sentence is a smooth sentence, returning a boolean value `true` if it is, `false` if it is not.\\\\n\\\\n### Examples\\\\n```\\\\nisSmooth(\\\\\\\"Marta appre","thisId":"1686","channelHost":"edabit.com","id":"1686","opcode":"1","channelId":"2","timestamp":"1652648897770"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"403\\\"]}\"]","thisId":"1687","channelHost":"edabit.com","id":"1687","opcode":"1","channelId":"2","timestamp":"1652648897882"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6876","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"403\\\",\\\"result\\\":{\\\"_id\\\":\\\"Djo98NonxGxvDgPde\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String alphabetIndex(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.5301204819277108,\\\"familyId\\\":\\\"eubQSQC3FNnpLN2ej\\\",\\\"instructions\\\":\\\"Create a function that takes a string and replaces each letter with its appropriate position in the alphabet. \\\\\\\"a\\\\\\\" is 1, \\\\\\\"b\\\\\\\" is 2, \\\\\\\"c\\\\\\\" is 3, etc, etc.\\\\n\\\\n### Examples\\\\n```\\\\nalphabetIndex(\\\\\\\"Wow, does that work?\\\\\\\")\\\\n➞ \\\\\\\"23 15 23 4 15 5 19 20 8 1 20 23 15 18 11\\\\\\\"\\\\n\\\\nalphabetIndex(\\\\\\\"The river stole the gods.\\\\\\\")\\\\n➞ \\\\\\\"20 8 5 18 9 22 5 18 19 20 15 12 5 20 8 5 7 15 4 19\\\\\\\"\\\\n\\\\nalphabetIndex(\\\\\\\"We have a lot of rain in June.\\\\\\\")\\\\n➞ \\\\\\\"23 5 8 1 22 5 1 12 15 20 15 6 18 1 9 14 9 14 10 21 14 5\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nIf any character in the string isn't a letter, ignore it.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.asser","thisId":"1688","channelHost":"edabit.com","id":"1688","opcode":"1","channelId":"2","timestamp":"1652648897886"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"404\\\"]}\"]","thisId":"1689","channelHost":"edabit.com","id":"1689","opcode":"1","channelId":"2","timestamp":"1652648897996"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5544","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"404\\\",\\\"result\\\":{\\\"_id\\\":\\\"qY9s6qK4WpbPBxQES\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String numType(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.5301204819277108,\\\"familyId\\\":\\\"2MJv8MDbPRbKQeAT2\\\",\\\"instructions\\\":\\\"Given a positive number x, if all the positive divisors of x (excluding x) add up to x, then x is said to be a perfect number.\\\\n\\\\nFor example, the set of positive divisors of 6 excluding 6 itself is (1, 2, 3). The sum of this set is 6. Therefore, 6 is a *perfect* number.\\\\n\\\\nGiven a positive number x, if all the positive divisors of x add up to a second number y, and all the positive divisors of y add up to x, then x and y are said to be a pair of *amicable* numbers.\\\\n\\\\nCreate a function that takes a number and returns `\\\\\\\"Perfect\\\\\\\"` if the number is perfect, `\\\\\\\"Amicable\\\\\\\"` if the number is part of an amicable pair, or `\\\\\\\"Neither\\\\\\\"`.\\\\n\\\\n### Examples\\\\n```\\\\nnumType(6) ➞ \\","thisId":"1690","channelHost":"edabit.com","id":"1690","opcode":"1","channelId":"2","timestamp":"1652648898019"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"406\\\"]}\"]","thisId":"1691","channelHost":"edabit.com","id":"1691","opcode":"1","channelId":"2","timestamp":"1652648898132"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6738","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"406\\\",\\\"result\\\":{\\\"_id\\\":\\\"jt6TWkTcYdWcRXbds\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String uncensor(String str, String vowels) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.5378787878787878,\\\"familyId\\\":\\\"CeroYGG3geESdKTQJ\\\",\\\"instructions\\\":\\\"Someone has attempted to censor my strings by replacing every vowel with a `*`, `l*k* th*s`. Luckily, I've been able to find the vowels that were removed.\\\\n\\\\nGiven a censored string and a string of the censored vowels, return the original uncensored string.\\\\n\\\\n### Example\\\\n```\\\\nuncensor(\\\\\\\"Wh*r* d*d my v*w*ls g*?\\\\\\\", \\\\\\\"eeioeo\\\\\\\") ➞ \\\\\\\"Where did my vowels go?\\\\\\\"\\\\n\\\\nuncensor(\\\\\\\"abcd\\\\\\\", \\\\\\\"\\\\\\\") ➞ \\\\\\\"abcd\\\\\\\"\\\\n\\\\nuncensor(\\\\\\\"*PP*RC*S*\\\\\\\", \\\\\\\"UEAE\\\\\\\") ➞ \\\\\\\"UPPERCASE\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- The vowels are given in the correct order.\\\\n- The number of vowels will match the number of `*` characters in the censored string.\\\",\\\"lab\\\":\\\"import org.ju","thisId":"1692","channelHost":"edabit.com","id":"1692","opcode":"1","channelId":"2","timestamp":"1652648898140"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"407\\\"]}\"]","thisId":"1693","channelHost":"edabit.com","id":"1693","opcode":"1","channelId":"2","timestamp":"1652648898236"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4810","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"407\\\",\\\"result\\\":{\\\"_id\\\":\\\"T3zjJiXoNRqXqEx9u\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class CloneList {\\\\n\\\\tpublic static Object[] clone(Object[] arr) {\\\\n\\\\t\\\\treturn Arrays.copyOf(arr, arr.length + 1);\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.528301886792453,\\\"quality\\\":4.142857142857143,\\\"familyId\\\":\\\"SM2nJx593tPhqrjxG\\\",\\\"instructions\\\":\\\"The **Code** tab has a code which attempts to add a clone of an array to itself. There is no error message, but the results are not as expected. Can you fix the code?\\\\n\\\\n### Examples\\\\n```\\\\nclone([5, 44]) ➞ [5, 44, [5, 44]]\\\\n\\\\nclone([4, 666]) ➞ [4, 666, [4, 666]]\\\\n\\\\nclone([1, 1]) ➞ [1, 1, [1, 1]]\\\\n\\\\nclone([1, 2, 3]) ➞ [1, 2, 3, [1, 2, 3]]\\\\n\\\\nclone([\\\\\\\"x\\\\\\\", \\\\\\\"y\\\\\\\"]) ➞ [\\\\\\\"x\\\\\\\", \\\\\\\"y\\\\\\\", [\\\\\\\"x\\\\\\\", \\\\\\\"y\\\\\\\"]]\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"/** \\\\n================================= \\\\nTestGen 4.0 for JUnit 4.13.0 \\\\t\\\\t\\\\nTest Case: CloneList::clone \\\\nTimestamp:","thisId":"1694","channelHost":"edabit.com","id":"1694","opcode":"1","channelId":"2","timestamp":"1652648898240"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"405\\\"]}\"]","thisId":"1695","channelHost":"edabit.com","id":"1695","opcode":"1","channelId":"2","timestamp":"1652648898339"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5694","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"405\\\",\\\"result\\\":{\\\"_id\\\":\\\"Sj3pLPPLpnF8DNGQD\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int sumDigits(int a, int b) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.5203252032520325,\\\"familyId\\\":\\\"tDPDzHXFNnZLzkz4S\\\",\\\"instructions\\\":\\\"Create a function that sums the total number of digits between two numbers, **inclusive**. For example, between the numbers `19` and `22` we have:\\\\n\\\\n```\\\\n// 19, 20, 21, 22\\\\n(1 + 9) + (2 + 0) + (2 + 1) + (2 + 2) = 19\\\\n```\\\\n\\\\n### Examples\\\\n```\\\\nsumDigits(7, 8) ➞ 15\\\\n\\\\nsumDigits(17, 20) ➞ 29\\\\n\\\\nsumDigits(10, 12) ➞ 6\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(15, Challenge.sumDigits(7, 8));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(29, Challenge.sumDigits(17, 20));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public","thisId":"1696","channelHost":"edabit.com","id":"1696","opcode":"1","channelId":"2","timestamp":"1652648898343"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"408\\\"]}\"]","thisId":"1697","channelHost":"edabit.com","id":"1697","opcode":"1","channelId":"2","timestamp":"1652648898444"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5356","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"408\\\",\\\"result\\\":{\\\"_id\\\":\\\"FTWQaZdMqYph5umsu\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean mathExpr(String expr) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.5392156862745099,\\\"familyId\\\":\\\"6nqu7Winoyvq8JaxF\\\",\\\"instructions\\\":\\\"Create a function that takes an input (e.g. `\\\\\\\"5 + 4\\\\\\\"`) and returns `true` if it's a mathematical expression or `false` if not.\\\\n\\\\n### Examples\\\\n```\\\\nmathExpr(\\\\\\\"4 + 5\\\\\\\") ➞ true\\\\n\\\\nmathExpr(\\\\\\\"4*6\\\\\\\") ➞ true\\\\n\\\\nmathExpr(\\\\\\\"4*no\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\n- Should only work with the following operations: `+, -, *, /, %`\\\\n- You don't need to test for floats.\\\\n- int1 and int2 will only be from 0-9.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(true, Challenge.mathExpr(\\\\\\\"5+4\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public ","thisId":"1698","channelHost":"edabit.com","id":"1698","opcode":"1","channelId":"2","timestamp":"1652648898449"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"409\\\"]}\"]","thisId":"1699","channelHost":"edabit.com","id":"1699","opcode":"1","channelId":"2","timestamp":"1652648898569"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5463","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"409\\\",\\\"result\\\":{\\\"_id\\\":\\\"954ZMB8AKKJBEnvDu\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class WordEmphasis {\\\\n  public static String emphasize(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.537313432835821,\\\"familyId\\\":\\\"EM6fsRPhHf6kA3tEN\\\",\\\"instructions\\\":\\\"Create a function that returns a capitalized version of the string passed. The first letter of each word in the string should be capitalized while the rest should be in lowercase.\\\\n\\\\n### Examples\\\\n```\\\\nemphasize(\\\\\\\"hello world!\\\\\\\") ➞ \\\\\\\"Hello World!\\\\\\\"\\\\n\\\\nemphasize(\\\\\\\"GOOD MORNING!\\\\\\\") ➞ \\\\\\\"Good Morning!\\\\\\\"\\\\n\\\\nemphasize(\\\\\\\"I AM, BUT aLL yOuRs, TESH!\\\\\\\")  ➞ \\\\\\\"I Am, But All Yours, Tesh!\\\\\\\"\\\\n\\\\nemphasize(\\\\\\\"99 red balloons!\\\\\\\") ➞ \\\\\\\"99 Red Balloons!\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- You won't run into any issues when dealing with numbers in strings.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"/** \\\\n==================================== ","thisId":"1700","channelHost":"edabit.com","id":"1700","opcode":"1","channelId":"2","timestamp":"1652648898572"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"410\\\"]}\"]","thisId":"1701","channelHost":"edabit.com","id":"1701","opcode":"1","channelId":"2","timestamp":"1652648898679"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5685","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"410\\\",\\\"result\\\":{\\\"_id\\\":\\\"p5PsoKc2z8QaYNjNG\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class HallMonitor {\\\\n\\\\tpublic static boolean possiblePath(Object[] t) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\\t\\\",\\\"difficulty\\\":1.5324675324675325,\\\"familyId\\\":\\\"QPpY4MLDHgm5mamrJ\\\",\\\"instructions\\\":\\\"A floor plan is arranged as follows:\\\\n- Four rooms, which all lead into the hallway.\\\\n- It's impossible to move between rooms without first going into the hallway.\\\\n\\\\n![Room](https://edabit-challenges.s3.amazonaws.com/hdUYysBhbdS.png)\\\\n\\\\nCreate a function which validates whether the path between rooms is possible. The hallway will be given as the letter `\\\\\\\"H\\\\\\\"`.\\\\n\\\\n### Examples\\\\n```\\\\npossiblePath([1, \\\\\\\"H\\\\\\\", 2, \\\\\\\"H\\\\\\\", 3, \\\\\\\"H\\\\\\\", 4]) ➞ true\\\\n\\\\npossiblePath([\\\\\\\"H\\\\\\\", 3, \\\\\\\"H\\\\\\\"]) ➞ true\\\\n\\\\npossiblePath([1, 2, \\\\\\\"H\\\\\\\", 3]) ➞ false\\\\n```\\\\n\\\\n### Notes\\\\n- A route may begin or end in a hallway.\\\\n- All inputs are either numbers 1-4, or the","thisId":"1702","channelHost":"edabit.com","id":"1702","opcode":"1","channelId":"2","timestamp":"1652648898683"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"411\\\"]}\"]","thisId":"1703","channelHost":"edabit.com","id":"1703","opcode":"1","channelId":"2","timestamp":"1652648898782"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4634","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"411\\\",\\\"result\\\":{\\\"_id\\\":\\\"JPDNpqri6djiC8ptP\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class PairAndZip {\\\\n\\\\tpublic static String[][] zipIt(String[] women, String[] men) {\\\\n\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.5106382978723405,\\\"familyId\\\":\\\"TtzLhkzMTAESC4zQD\\\",\\\"instructions\\\":\\\"Given an array of women and an array of men, either:\\\\n- Return `null` if the two arrays are of different sizes.\\\\n- If the sizes match, return an **array of pairs**, with the first woman paired with the first man, second woman paired with the second man, etc.\\\\n\\\\n### Examples\\\\n```\\\\nzipIt([[\\\\\\\"Tesha\\\\\\\", \\\\\\\"Tesh\\\\\\\", \\\\\\\"Shang\\\\\\\"], [\\\\\\\"Deep\\\\\\\", \\\\\\\"Xavier\\\\\\\", \\\\\\\"Dex\\\\\\\"]])\\\\n ➞ [[\\\\\\\"Tesha\\\\\\\", \\\\\\\"Deep\\\\\\\"],[\\\\\\\"Tesh\\\\\\\", \\\\\\\"Xavier\\\\\\\"],[\\\\\\\"Shang\\\\\\\", \\\\\\\"Dex\\\\\\\"]]\\\\n\\\\nzipIt([\\\\\\\"Elise\\\\\\\", \\\\\\\"Mary\\\\\\\"], [\\\\\\\"John\\\\\\\", \\\\\\\"Rick\\\\\\\"])\\\\n ➞ [[\\\\\\\"Elise\\\\\\\", \\\\\\\"John\\\\\\\"], [\\\\\\\"Mary\\\\\\\", \\\\\\\"Rick\\\\\\\"]]\\\\n\\\\nzipIt([\\\\\\\"Ana\\\\\\\", \\\\\\\"Amy\\\\\\\", \\\\\\\"Lisa\\\\","thisId":"1704","channelHost":"edabit.com","id":"1704","opcode":"1","channelId":"2","timestamp":"1652648898786"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"412\\\"]}\"]","thisId":"1705","channelHost":"edabit.com","id":"1705","opcode":"1","channelId":"2","timestamp":"1652648898926"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5125","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"412\\\",\\\"result\\\":{\\\"_id\\\":\\\"NYq5PTgKa6C97qdLw\\\",\\\"author\\\":\\\"bangyen\\\",\\\"authorId\\\":\\\"yv7c4H2jimSKHEjtG\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int sumMissing(int[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.5411764705882354,\\\"familyId\\\":\\\"FgBHkTxWf8gz34gbZ\\\",\\\"instructions\\\":\\\"Create a function that returns the sum of missing numbers.\\\\n\\\\n### Examples\\\\n```java\\\\nsumMissing([1, 3, 5, 7, 10]) ➞ 29\\\\n// 2 + 4 + 6 + 8 + 9\\\\n\\\\nsumMissing([10, 7, 5, 3, 1]) ➞ 29\\\\n\\\\nsumMissing([10, 20, 30, 40, 50, 60]) ➞ 1575\\\\n```\\\\n\\\\n### Notes\\\\nThe minimum and maximum value of the given array are the inclusive bounds of the numeric range to consider when searching for missing numbers.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class SumMissingTest {\\\\n\\\\n\\\\t\\\\t@Test\\\\n\\\\t\\\\tpublic void test1() {\\\\n\\\\t\\\\t\\\\tassertEquals(29, Challenge.sumMissing(new int[]{1, 3, 5, 7, 10}));\\\\n\\\\t\\\\t}\\\\n\\\\t\\\\n\\\\t\\\\t@Test\\\\n","thisId":"1706","channelHost":"edabit.com","id":"1706","opcode":"1","channelId":"2","timestamp":"1652648898930"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"413\\\"]}\"]","thisId":"1707","channelHost":"edabit.com","id":"1707","opcode":"1","channelId":"2","timestamp":"1652648899047"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5991","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"413\\\",\\\"result\\\":{\\\"_id\\\":\\\"KGhmvXpF6iK8mAqgj\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String[] numInStr(String[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.5376344086021505,\\\"familyId\\\":\\\"TkMN6PQq5q6CZjNM4\\\",\\\"instructions\\\":\\\"Create a function that takes an array of strings and returns an array with only the strings that have numbers in them. If there are no strings containing numbers, return an empty array.\\\\n\\\\n### Examples\\\\n```\\\\nnumInStr([\\\\\\\"1a\\\\\\\", \\\\\\\"a\\\\\\\", \\\\\\\"2b\\\\\\\", \\\\\\\"b\\\\\\\"]) ➞ [\\\\\\\"1a\\\\\\\", \\\\\\\"2b\\\\\\\"]\\\\n\\\\nnumInStr([\\\\\\\"abc\\\\\\\", \\\\\\\"abc10\\\\\\\"]) ➞ [\\\\\\\"abc10\\\\\\\"]\\\\n\\\\nnumInStr([\\\\\\\"abc\\\\\\\", \\\\\\\"ab10c\\\\\\\", \\\\\\\"a10bc\\\\\\\", \\\\\\\"bcd\\\\\\\"]) ➞ [\\\\\\\"ab10c\\\\\\\", \\\\\\\"a10bc\\\\\\\"]\\\\n\\\\nnumInStr([\\\\\\\"this is a test\\\\\\\", \\\\\\\"test1\\\\\\\"]) ➞ [\\\\\\\"test1\\\\\\\"]\\\\n```\\\\n\\\\n### Notes\\\\n- The strings can contain white spaces or any type of characters.\\\\n- **Bonus:** Try solving this without RegEx.\\\",\\\"lab\\\":","thisId":"1708","channelHost":"edabit.com","id":"1708","opcode":"1","channelId":"2","timestamp":"1652648899052"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"414\\\"]}\"]","thisId":"1709","channelHost":"edabit.com","id":"1709","opcode":"1","channelId":"2","timestamp":"1652648899157"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6945","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"414\\\",\\\"result\\\":{\\\"_id\\\":\\\"yPQ26h7KYpqsftRPY\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int reversedBinaryInteger(int n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.5393258426966292,\\\"familyId\\\":\\\"H3ojsurboaTDJfAYZ\\\",\\\"instructions\\\":\\\"Write a function that takes an integer `n`, reverses the binary representation of that integer, and returns the new integer from the reversed binary.\\\\n\\\\n### Examples\\\\n```\\\\nreversedBinaryInteger(10) ➞ 5\\\\n// 10 = 1010 -> 0101 = 5\\\\n\\\\nreversedBinaryInteger(12) ➞ 3\\\\n// 12 = 1100 -> 0011 = 3\\\\n\\\\nreversedBinaryInteger(25) ➞ 19\\\\n// 25 = 11001 -> 10011 = 19\\\\n\\\\nreversedBinaryInteger(45) ➞ 45\\\\n// 45 = 101101 -> 101101 = 45\\\\n```\\\\n\\\\n### Notes\\\\nAll values of `n` will be positive.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(1, Challenge.reversedBinaryInt","thisId":"1710","channelHost":"edabit.com","id":"1710","opcode":"1","channelId":"2","timestamp":"1652648899161"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"415\\\"]}\"]","thisId":"1711","channelHost":"edabit.com","id":"1711","opcode":"1","channelId":"2","timestamp":"1652648899258"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6466","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"415\\\",\\\"result\\\":{\\\"_id\\\":\\\"jXvNMQRZPwKmex4nG\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class MissingLetters {\\\\n\\\\tpublic static String getMissing(String strLetters) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.5490196078431373,\\\"familyId\\\":\\\"vcGQrnZ5CF8mgrdF4\\\",\\\"instructions\\\":\\\"Given a string containing **unique** letters, return a sorted string with the letters that **don't appear in the string**.\\\\n\\\\n### Examples\\\\n```\\\\ngetMissing(\\\\\\\"abcdefgpqrstuvwxyz\\\\\\\") ➞ \\\\\\\"hijklmno\\\\\\\"\\\\n\\\\ngetMissing(\\\\\\\"zyxwvutsrq\\\\\\\") ➞ \\\\\\\"abcdefghijklmnop\\\\\\\"\\\\n\\\\ngetMissing(\\\\\\\"abc\\\\\\\") ➞ \\\\\\\"defghijklmnopqrstuvwxyz\\\\\\\"\\\\n\\\\ngetMissing(\\\\\\\"abcdefghijklmnopqrstuvwxyz\\\\\\\") ➞ \\\\\\\"\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- The combination of both strings should be **26 elements** long, including all the letters in the alphabet.\\\\n- Letters will be all in **lowercase**.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.asse","thisId":"1712","channelHost":"edabit.com","id":"1712","opcode":"1","channelId":"2","timestamp":"1652648899261"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"416\\\"]}\"]","thisId":"1713","channelHost":"edabit.com","id":"1713","opcode":"1","channelId":"2","timestamp":"1652648899366"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6621","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"416\\\",\\\"result\\\":{\\\"_id\\\":\\\"SmL32HnRnmsCqGC5g\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String encrypt(String word) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.550387596899225,\\\"familyId\\\":\\\"ZFCxavQdykCPv3hZj\\\",\\\"instructions\\\":\\\"Make a function that encrypts a given input with these steps:\\\\n\\\\nInput: `\\\\\\\"apple\\\\\\\"`\\\\n\\\\n**Step 1:** Reverse the input: `\\\\\\\"elppa\\\\\\\"`\\\\n\\\\n**Step 2:** Replace all vowels using the following chart:\\\\n\\\\n```\\\\na => 0\\\\ne => 1\\\\ni => 2\\\\no => 2\\\\nu => 3\\\\n\\\\n// \\\\\\\"1lpp0\\\\\\\"\\\\n```\\\\n\\\\n**Step 3:** Add \\\\\\\"aca\\\\\\\" to the end of the word: `\\\\\\\"1lpp0aca\\\\\\\"`\\\\n\\\\nOutput: `\\\\\\\"1lpp0aca\\\\\\\"`\\\\n\\\\n### Examples\\\\n```\\\\nencrypt(\\\\\\\"banana\\\\\\\") ➞ \\\\\\\"0n0n0baca\\\\\\\"\\\\n\\\\nencrypt(\\\\\\\"karaca\\\\\\\") ➞ \\\\\\\"0c0r0kaca\\\\\\\"\\\\n\\\\nencrypt(\\\\\\\"burak\\\\\\\") ➞ \\\\\\\"k0r3baca\\\\\\\"\\\\n\\\\nencrypt(\\\\\\\"alpaca\\\\\\\") ➞ \\\\\\\"0c0pl0aca\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nAll inputs are strings, no uppercases and all output must be s","thisId":"1714","channelHost":"edabit.com","id":"1714","opcode":"1","channelId":"2","timestamp":"1652648899370"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"417\\\"]}\"]","thisId":"1715","channelHost":"edabit.com","id":"1715","opcode":"1","channelId":"2","timestamp":"1652648899501"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6147","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"417\\\",\\\"result\\\":{\\\"_id\\\":\\\"sRC7wLW7g6gw24Muq\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String missingLetter(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.5576923076923077,\\\"familyId\\\":\\\"xTBwZ8GSjAFHWEQoG\\\",\\\"instructions\\\":\\\"Given a string of letters in the English alphabet, return the letter that's missing from the string. The missing letter will make the string be in alphabetical order (from A to Z).\\\\n\\\\nIf there are no missing letters in the string, return `\\\\\\\"No Missing Letter\\\\\\\"`.\\\\n\\\\n### Examples\\\\n```\\\\nmissingLetter(\\\\\\\"abdefg\\\\\\\") ➞ \\\\\\\"c\\\\\\\"\\\\n\\\\nmissingLetter(\\\\\\\"mnopqs\\\\\\\") ➞ \\\\\\\"r\\\\\\\"\\\\n\\\\nmissingLetter(\\\\\\\"tuvxyz\\\\\\\") ➞ \\\\\\\"w\\\\\\\"\\\\n\\\\nmissingLetter(\\\\\\\"ghijklmno\\\\\\\") ➞ \\\\\\\"No Missing Letter\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nThe given string will never have more than one missing letter.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\n","thisId":"1716","channelHost":"edabit.com","id":"1716","opcode":"1","channelId":"2","timestamp":"1652648899505"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"418\\\"]}\"]","thisId":"1717","channelHost":"edabit.com","id":"1717","opcode":"1","channelId":"2","timestamp":"1652648899615"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6010","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"418\\\",\\\"result\\\":{\\\"_id\\\":\\\"Stu2gesXeETdxxGBY\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String longestZero(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.5537190082644627,\\\"familyId\\\":\\\"rvDPhYSLoFZdmjwFP\\\",\\\"instructions\\\":\\\"Write a function that returns the longest sequence of consecutive zeroes in a binary string.\\\\n\\\\n### Examples\\\\n```\\\\nlongestZero(\\\\\\\"01100001011000\\\\\\\") ➞ \\\\\\\"0000\\\\\\\"\\\\n\\\\nlongestZero(\\\\\\\"100100100\\\\\\\") ➞ \\\\\\\"00\\\\\\\"\\\\n\\\\nlongestZero(\\\\\\\"11111\\\\\\\") ➞ \\\\\\\"\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nIf no zeroes exist in the input, return an empty string.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"0000\\\\\\\", Challenge.longestZero(\\\\\\\"01100001011000\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(\\\\\\\"00\\\\\\\", Challenge.longestZero(\\\\\\\"100100100","thisId":"1718","channelHost":"edabit.com","id":"1718","opcode":"1","channelId":"2","timestamp":"1652648899619"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"419\\\"]}\"]","thisId":"1719","channelHost":"edabit.com","id":"1719","opcode":"1","channelId":"2","timestamp":"1652648899719"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7892","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"419\\\",\\\"result\\\":{\\\"_id\\\":\\\"o9nESkofDnfXJ5m7a\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static String wurstIsBetter(String s) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.553191489361702,\\\"familyId\\\":\\\"j3JXuG4rRgF5PXaHf\\\",\\\"instructions\\\":\\\"Wurst is the best. Create a method that takes a string and replaces every mention of any type of sausage with the German word \\\\\\\"Wurst,\\\\\\\" unless—of course—the sausage is already a type of German \\\\\\\"Wurst\\\\\\\" (i.e. \\\\\\\"Bratwurst\\\\\\\", see below), then leave the sausage name unchanged.\\\\n\\\\nGerman Wursts   | Convert to Wurst\\\\n--- | ---\\\\nBratwurst | Kielbasa\\\\nKochwurst | Chorizo\\\\nLeberwurst | Moronga\\\\nMettwurst | Salami\\\\nRostbratwurst | Sausage\\\\n~ | Andouille\\\\n~ | Naem\\\\n~ | Merguez\\\\n~ | Gurka\\\\n~ | Snorkers\\\\n~ | Pepperoni\\\\n\\\\n### Rules\\\\n- Append sausages from the \\\\\\\"Convert to Wurst\\\\\\\" column with \\\\\\\"wurst\\\\\\\".\\\\n- Do not replace any German sausage ","thisId":"1720","channelHost":"edabit.com","id":"1720","opcode":"1","channelId":"2","timestamp":"1652648899722"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"420\\\"]}\"]","thisId":"1721","channelHost":"edabit.com","id":"1721","opcode":"1","channelId":"2","timestamp":"1652648899837"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4065","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"420\\\",\\\"result\\\":{\\\"_id\\\":\\\"yLjnDk7bJ3GYeSX9f\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String wordedMath(String expr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.5538461538461539,\\\"familyId\\\":\\\"2N7Q26oGG6KvuPWzK\\\",\\\"instructions\\\":\\\"Create a function that outputs the result of a math expression in words.\\\\n\\\\n### Examples\\\\n```\\\\nwordedMath(\\\\\\\"One plus one\\\\\\\") ➞ \\\\\\\"Two\\\\\\\"\\\\n\\\\nwordedMath(\\\\\\\"zero Plus one\\\\\\\") ➞ \\\\\\\"One\\\\\\\"\\\\n\\\\nwordedMath(\\\\\\\"one minus one\\\\\\\") ➞ \\\\\\\"Zero\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Expect only the operations `plus` and `minus`.\\\\n- Expect to only get numbers and answers from `0` to `2`.\\\\n- The first letter of the answer must be capitalised.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"Two\\\\\\\", Challenge.wordedMath(\\\\\\\"One plus one\\\\\\\"));\\\\","thisId":"1722","channelHost":"edabit.com","id":"1722","opcode":"1","channelId":"2","timestamp":"1652648899845"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"423\\\"]}\"]","thisId":"1723","channelHost":"edabit.com","id":"1723","opcode":"1","channelId":"2","timestamp":"1652648899953"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4063","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"423\\\",\\\"result\\\":{\\\"_id\\\":\\\"crZ8ADEeMticeNjBo\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int mysteryFunc(int num) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.5593220338983051,\\\"familyId\\\":\\\"kLCp8pP4tD22Fv7yH\\\",\\\"instructions\\\":\\\"This is a **reverse coding challenge**.\\\\n\\\\nYour task is to create a function that, when fed the inputs below, produce the sample outputs shown.\\\\n\\\\n### Examples\\\\n```\\\\n3 ➞ 21\\\\n\\\\n9 ➞ 2221\\\\n\\\\n17 ➞ 22221\\\\n\\\\n24 ➞ 22228\\\\n```\\\\n\\\\n### Notes\\\\nIf you get stuck, check the **Comments** for help.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(21, Challenge.mysteryFunc(3));\\\\n  }\\\\n\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(2221, Challenge.mysteryFunc(9));\\\\n  }\\\\n\\\\n\\\\t@Test\\\\n  public void test3() {\\\\n    assertEquals(2227, Challenge.mysteryFunc(15));","thisId":"1724","channelHost":"edabit.com","id":"1724","opcode":"1","channelId":"2","timestamp":"1652648899957"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"424\\\"]}\"]","thisId":"1725","channelHost":"edabit.com","id":"1725","opcode":"1","channelId":"2","timestamp":"1652648900061"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4141","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"424\\\",\\\"result\\\":{\\\"_id\\\":\\\"uiNKhxnvuaJ7ikoKX\\\",\\\"author\\\":\\\"K3B\\\",\\\"authorId\\\":\\\"zE46SymvixkeFJmPM\\\",\\\"code\\\":\\\"public class Program {\\\\n  public static int[] miniPeaks(int arr[]) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.5686274509803921,\\\"familyId\\\":\\\"j5HZumkLcawwwBehp\\\",\\\"instructions\\\":\\\"Write a function that returns all the elements in an array that are **strictly greater** than their adjacent left and right neighbors.\\\\n\\\\n### Examples\\\\n```\\\\nminiPeaks([4, 5, 2, 1, 4, 9, 7, 2]) ➞ [5, 9]\\\\n// 5 has neighbours 4 and 2, both are less than 5.\\\\n\\\\nminiPeaks([1, 2, 1, 1, 3, 2, 5, 4, 4]) ➞ [2, 3, 5]\\\\n\\\\nminiPeaks([1, 2, 3, 4, 5, 6]) ➞ []\\\\n```\\\\n\\\\n### Notes\\\\n- Do not count boundary numbers, since they only have **one** left/right neighbor. \\\\n- If no such numbers exist, return an empty array.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npub","thisId":"1726","channelHost":"edabit.com","id":"1726","opcode":"1","channelId":"2","timestamp":"1652648900066"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"425\\\"]}\"]","thisId":"1727","channelHost":"edabit.com","id":"1727","opcode":"1","channelId":"2","timestamp":"1652648900167"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5245","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"425\\\",\\\"result\\\":{\\\"_id\\\":\\\"xix4GjLCpXmetXGca\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String censor(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.5625,\\\"familyId\\\":\\\"f9rBBSjXu9uT4iDY7\\\",\\\"instructions\\\":\\\"Create a function that takes a string and censors words **over four characters** with `*`.\\\\n\\\\n### Examples\\\\n```\\\\ncensor(\\\\\\\"The code is fourty\\\\\\\") ➞ \\\\\\\"The code is ******\\\\\\\"\\\\n\\\\ncensor(\\\\\\\"Two plus three is five\\\\\\\") ➞ \\\\\\\"Two plus ***** is five\\\\\\\"\\\\n\\\\ncensor(\\\\\\\"aaaa aaaaa 1234 12345\\\\\\\") ➞ \\\\\\\"aaaa ***** 1234 *****\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Don't censor words with exactly four characters.\\\\n- If all words have four characters or less, return the original string.\\\\n- The amount of `*` is the same as the length of the word.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void tes","thisId":"1728","channelHost":"edabit.com","id":"1728","opcode":"1","channelId":"2","timestamp":"1652648900171"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"421\\\"]}\"]","thisId":"1729","channelHost":"edabit.com","id":"1729","opcode":"1","channelId":"2","timestamp":"1652648900278"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7994","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"421\\\",\\\"result\\\":{\\\"_id\\\":\\\"yeewrR3MB9PZprwPT\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static boolean isAnagram(String s1, String s2) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.5593220338983051,\\\"familyId\\\":\\\"ALJ3zdewZTmi2Js8F\\\",\\\"instructions\\\":\\\"Create a function that takes two strings and returns either `true` or `false` depending on whether they're anagrams or not.\\\\n\\\\n### Examples\\\\n```\\\\nisAnagram(\\\\\\\"cristian\\\\\\\", \\\\\\\"Cristina\\\\\\\") ➞ true\\\\n\\\\nisAnagram(\\\\\\\"Dave Barry\\\\\\\", \\\\\\\"Ray Adverb\\\\\\\") ➞ true\\\\n\\\\nisAnagram(\\\\\\\"Nope\\\\\\\", \\\\\\\"Note\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\n- Should be case insensitive.\\\\n- The two given strings can be of different lengths.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertEquals(true, Program.isAnagram(\\\\\\\"cristian\\\\\\\", \\\\\\\"Cristina\\\\\\\"));\\\\","thisId":"1730","channelHost":"edabit.com","id":"1730","opcode":"1","channelId":"2","timestamp":"1652648900282"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"422\\\"]}\"]","thisId":"1731","channelHost":"edabit.com","id":"1731","opcode":"1","channelId":"2","timestamp":"1652648900397"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6369","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"422\\\",\\\"result\\\":{\\\"_id\\\":\\\"6THnWXvQrhRrEErtb\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String[] findBrokenKeys(String str1, String str2) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.5588235294117647,\\\"familyId\\\":\\\"aTYQbPQinvLDPGwfT\\\",\\\"instructions\\\":\\\"Given what is supposed to be typed and what is actually typed, write a function that returns the broken key(s). The function looks like:\\\\n\\\\n```\\\\nfindBrokenKeys(correct phrase, what you actually typed)\\\\n```\\\\n\\\\n### Examples\\\\n```\\\\nfindBrokenKeys(\\\\\\\"happy birthday\\\\\\\", \\\\\\\"hawwy birthday\\\\\\\") ➞ [\\\\\\\"p\\\\\\\"]\\\\n\\\\nfindBrokenKeys(\\\\\\\"starry night\\\\\\\", \\\\\\\"starrq light\\\\\\\") ➞ [\\\\\\\"y\\\\\\\", \\\\\\\"n\\\\\\\"]\\\\n\\\\nfindBrokenKeys(\\\\\\\"beethoven\\\\\\\", \\\\\\\"affthoif5\\\\\\\") ➞ [\\\\\\\"b\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"v\\\\\\\", \\\\\\\"n\\\\\\\"]\\\\n```\\\\n\\\\n### Notes\\\\n- Broken keys should be ordered by when they first appear in the sentence.\\\\n- Only one broken key per letter should be listed.\\\\n- Le","thisId":"1732","channelHost":"edabit.com","id":"1732","opcode":"1","channelId":"2","timestamp":"1652648900401"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"426\\\"]}\"]","thisId":"1733","channelHost":"edabit.com","id":"1733","opcode":"1","channelId":"2","timestamp":"1652648900500"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6489","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"426\\\",\\\"result\\\":{\\\"_id\\\":\\\"9xSy9uu6MaEKS4kPC\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int towerHanoi(int discs) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.5673758865248226,\\\"familyId\\\":\\\"Xz5SBu8GktuccG95s\\\",\\\"instructions\\\":\\\"There are three towers. The objective of the game is to move all the disks over to tower #3, but you can't place a larger disk onto a smaller disk. To play the game or learn more about the Tower of Hanoi, check the **Resources** tab.\\\\n\\\\n![Tower of Hanoi](https://edabit-challenges.s3.amazonaws.com/tower_of_hanoi.gif \\\\\\\"Tower of Hanoi\\\\\\\")\\\\n\\\\nCreate a function that takes a number `discs` as an argument and returns the minimum amount of steps needed to complete the game.\\\\n\\\\n### Examples\\\\n```\\\\ntowerHanoi(3) ➞ 7\\\\n\\\\ntowerHanoi(5) ➞ 31\\\\n\\\\ntowerHanoi(0) ➞ 0\\\\n```\\\\n\\\\n### Notes\\\\n- The amount of discs is always a positive integer.\\\\n- 1 disc can be changed per move.\\\",\\\"lab\\\":\\\"impor","thisId":"1734","channelHost":"edabit.com","id":"1734","opcode":"1","channelId":"2","timestamp":"1652648900504"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"427\\\"]}\"]","thisId":"1735","channelHost":"edabit.com","id":"1735","opcode":"1","channelId":"2","timestamp":"1652648900622"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7870","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"427\\\",\\\"result\\\":{\\\"_id\\\":\\\"WzE2id9w5mNfXozKL\\\",\\\"author\\\":\\\"Nguyen Phan Dang\\\",\\\"authorId\\\":\\\"YLqdr7bYjwew2KM4N\\\",\\\"code\\\":\\\"public class ChallengeTests {\\\\n\\\\tpublic static int countBoomerangs(int[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.5701754385964912,\\\"familyId\\\":\\\"d7PjZjpTFTZgapdXW\\\",\\\"instructions\\\":\\\"A **boomerang** is a V-shaped sequence that is either upright or upside down. Specifically, a boomerang can be defined as: **sub-array of length 3, with the first and last digits being the same and the middle digit being different**.\\\\n\\\\nSome boomerang examples:\\\\n\\\\n```\\\\n[3, 7, 3], [1, -1, 1], [5, 6, 5]\\\\n```\\\\n\\\\nCreate a function that returns the total number of  **boomerangs** in an array.\\\\n\\\\nTo illustrate:\\\\n\\\\n```\\\\n[3, 7, 3, 2, 1, 5, 1, 2, 2, -2, 2]\\\\n// 3 boomerangs in this sequence:  [3, 7, 3], [1, 5, 1], [2, -2, 2]\\\\n```\\\\n\\\\nBe aware that boomerangs can overlap, like so:\\\\n\\\\n```\\\\n[1, 7, 1, 7, 1, 7, 1]\\\\n// 5 boomerangs (from left to right): [1, 7, 1","thisId":"1736","channelHost":"edabit.com","id":"1736","opcode":"1","channelId":"2","timestamp":"1652648900636"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"428\\\"]}\"]","thisId":"1737","channelHost":"edabit.com","id":"1737","opcode":"1","channelId":"2","timestamp":"1652648900704"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4269","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"428\\\",\\\"result\\\":{\\\"_id\\\":\\\"9To632EycoudpkgHM\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String returnTheEndOfNumber(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.58,\\\"familyId\\\":\\\"BFxh8rXTDHr2fx9LA\\\",\\\"instructions\\\":\\\"Create a function that takes an integer and returns it as an **ordinal number**. An Ordinal Number is a number that tells the position of something in a list, such as 1st, 2nd, 3rd, 4th, 5th, etc.\\\\n\\\\n### Examples\\\\n```\\\\nreturnTheEndOfNumber(553) ➞ \\\\\\\"553-RD\\\\\\\"\\\\n\\\\nreturnTheEndOfNumber(34) ➞ \\\\\\\"34-TH\\\\\\\"\\\\n\\\\nreturnTheEndOfNumber(1231) ➞ \\\\\\\"1231-ST\\\\\\\"\\\\n\\\\nreturnTheEndOfNumber(22) ➞ \\\\\\\"22-ND\\\\\\\"\\\\n\\\\nreturnEndOfNumber(412) ➞ \\\\\\\"412-TH\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nCheck the **Resources** tab for more info on _ordinal numbers_.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test\\\\n  public void test1() {\\\\n   ","thisId":"1738","channelHost":"edabit.com","id":"1738","opcode":"1","channelId":"2","timestamp":"1652648900708"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"429\\\"]}\"]","thisId":"1739","channelHost":"edabit.com","id":"1739","opcode":"1","channelId":"2","timestamp":"1652648900815"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5215","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"429\\\",\\\"result\\\":{\\\"_id\\\":\\\"pkMPzrmsNN9RRnMqx\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class CupSwaps {\\\\n  public static String cupSwapping(String[] cups) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.558139534883721,\\\"familyId\\\":\\\"2q6tBd4rWoKKet9FG\\\",\\\"instructions\\\":\\\"There are three cups on a table, at positions **A, B, and C.** At the start, there is a ball hidden under the cup at **position B**.\\\\n\\\\n![Image of cups where ball is under middle cup](https://edabit-challenges.s3.amazonaws.com/kfnerNJDNn.png)\\\\n\\\\nHowever, I perform several swaps on the cups, which is notated as two letters. For example, if I swap the cups at positions **A and B**, I could notate this as `AB` or `BA`.\\\\n\\\\nCreate a function that returns the letter position that the ball is at, once I finish swapping the cups. The swaps will be given to you as an array.\\\\n\\\\n### Worked Example\\\\n```\\\\ncupSwapping([\\\\\\\"AB\\\\\\\", \\\\\\\"CA\\\\\\\", \\\\\\\"AB\\\\\\\"]) ➞ \\\\\\\"C\\\\\\\"\\\\n\\\\n// Ball","thisId":"1740","channelHost":"edabit.com","id":"1740","opcode":"1","channelId":"2","timestamp":"1652648900821"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"430\\\"]}\"]","thisId":"1741","channelHost":"edabit.com","id":"1741","opcode":"1","channelId":"2","timestamp":"1652648900942"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5206","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"430\\\",\\\"result\\\":{\\\"_id\\\":\\\"ZiuuBqBWYBRtPaKKR\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class StringCycles {\\\\n  public static String stringCycling(String a, String b) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.5777777777777777,\\\"familyId\\\":\\\"qLnxWBnwqLcajaaRS\\\",\\\"instructions\\\":\\\"Given two strings, repeatedly cycle through all of the letters in the first string until it is the same length as the second string.\\\\n\\\\n### Examples\\\\n```\\\\nstringCycling(\\\\\\\"abc\\\\\\\", \\\\\\\"hello\\\\\\\") ➞ \\\\\\\"abcab\\\\\\\"\\\\n\\\\nstringCycling(\\\\\\\"programming\\\\\\\", \\\\\\\"edabit\\\\\\\") ➞ \\\\\\\"progra\\\\\\\"\\\\n\\\\nstringCycling(\\\\\\\"the world in me evolves in hers\\\\\\\", \\\\\\\"i love Tesh, so much so\\\\\\\") ➞ \\\\\\\"the world in me evolves\\\\\\\"\\\\n\\\\nstringCycling(\\\\\\\"a thing of beauty is a joy forever\\\\\\\", \\\\\\\"indulge me surely\\\\\\\") ➞ \\\\\\\"a thing of beauty\\\\\\\"\\\\n\\\\nstringCycling(\\\\\\\"to\\\\\\\", \\\\\\\"hide\\\\\\\") ➞ \\\\\\\"toto\\\\\\\"\\\\n\\\\nstringCycling(\\\\\\\"such a feeling coming over me\\\\\\\", \\\\\\\"top of the world","thisId":"1742","channelHost":"edabit.com","id":"1742","opcode":"1","channelId":"2","timestamp":"1652648900947"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"431\\\"]}\"]","thisId":"1743","channelHost":"edabit.com","id":"1743","opcode":"1","channelId":"2","timestamp":"1652648901033"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4786","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"431\\\",\\\"result\\\":{\\\"_id\\\":\\\"LzW7RxkLFFWphQWiK\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int powerRanger(int power, int min, int max) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.5735294117647058,\\\"familyId\\\":\\\"mheGGuf4K57Q99xXf\\\",\\\"instructions\\\":\\\"Create a function that takes in **n**,  **a**, **b** and returns the number of positive values raised to the **nth** power that lie in the range `[a, b]`, **inclusive**.\\\\n\\\\n### Examples\\\\n```\\\\npowerRanger(2, 49, 65) ➞ 2\\\\n// 2 squares (n^2) lie between 48 and 65, 49 (7^2) and 64 (8^2)\\\\n\\\\npowerRanger(3, 1, 27) ➞ 3\\\\n// 3 cubes (n^3) lie between 1 and 27, 1 (1^3), 8 (2^3) and 27 (3^3)\\\\n\\\\npowerRanger(10, 1, 5) ➞ 1\\\\n// 1 value raised to the 10th power lies between 1 and 5, 1 (1^10)\\\\n\\\\npowerRanger(5, 31, 33) ➞ 1\\\\n\\\\npowerRanger(4, 250, 1300) ➞ 3\\\\n```\\\\n\\\\n### Notes\\\\n- Remember that the range is inclusive.\\\\n- **a** < **b** will always be true.\\\",\\\"lab\\\":\\\"import","thisId":"1744","channelHost":"edabit.com","id":"1744","opcode":"1","channelId":"2","timestamp":"1652648901037"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"432\\\"]}\"]","thisId":"1745","channelHost":"edabit.com","id":"1745","opcode":"1","channelId":"2","timestamp":"1652648901133"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3790","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"432\\\",\\\"result\\\":{\\\"_id\\\":\\\"SNPLajmqXym6nFPQm\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int mySub(int a, int b) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.5833333333333333,\\\"familyId\\\":\\\"GFQ8YmzcCCig4cRHZ\\\",\\\"instructions\\\":\\\"Create a function that subtracts one positive integer from another, without using any arithmetic operators such as `-`, `%`, `/`, `+`, etc.\\\\n\\\\n### Examples\\\\n```\\\\nmySub(5, 9) ➞ 4\\\\n\\\\nmySub(10, 30) ➞ 20\\\\n\\\\nmySub(0, 0) ➞ 0\\\\n```\\\\n\\\\n### Notes\\\\n- Do not multiply by `-1`.\\\\n- Use bitwise operations only: `<<`, `|`, `~`, `&`, etc.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(4, Challenge.mySub(5, 9));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(20, Challenge.mySub(10, 30));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test3() {\\\\n    assertEqual","thisId":"1746","channelHost":"edabit.com","id":"1746","opcode":"1","channelId":"2","timestamp":"1652648901137"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"433\\\"]}\"]","thisId":"1747","channelHost":"edabit.com","id":"1747","opcode":"1","channelId":"2","timestamp":"1652648901234"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4324","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"433\\\",\\\"result\\\":{\\\"_id\\\":\\\"mTKJRxrWNr9qrBxxG\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class LetterFrom {\\\\n  public static boolean bestFriend(String s, String a, String b) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.5833333333333333,\\\"familyId\\\":\\\"Xy6ucLqMq3dq6vFLB\\\",\\\"instructions\\\":\\\"Given a string, return if a given letter **always** appears **immediately before** another given letter.\\\\n\\\\n### Examples\\\\n```\\\\nbestFriend(\\\\\\\"tesha has a pretty and a happy face\\\\\\\", \\\\\\\"h\\\\\\\", \\\\\\\"a\\\\\\\") ➞ true\\\\n// all occurences of \\\\\\\"h\\\\\\\": [\\\\\\\"tesha\\\\\\\", \\\\\\\"has\\\\\\\", \\\\\\\"happy\\\\\\\"]\\\\n// all occurences of \\\\\\\"h\\\\\\\" have an \\\\\\\"a\\\\\\\" after it.\\\\n// return true\\\\n\\\\nbestFriend(\\\\\\\"i found an ounce with my hound\\\\\\\", \\\\\\\"o\\\\\\\", \\\\\\\"u\\\\\\\") ➞ true\\\\n\\\\nbestFriend(\\\\\\\"we found your dynamite\\\\\\\", \\\\\\\"d\\\\\\\", \\\\\\\"y\\\\\\\") ➞ false\\\\n\\\\nbestFriend(\\\\\\\"tesh loves my messages\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"s\\\\\\\") ➞ true\\\\n```\\\\n\\\\n### Notes\\\\n- Don't count letters with spac","thisId":"1748","channelHost":"edabit.com","id":"1748","opcode":"1","channelId":"2","timestamp":"1652648901238"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"434\\\"]}\"]","thisId":"1749","channelHost":"edabit.com","id":"1749","opcode":"1","channelId":"2","timestamp":"1652648901344"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5427","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"434\\\",\\\"result\\\":{\\\"_id\\\":\\\"iLwdf4yJjrSv9Pg25\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String moran(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.59375,\\\"familyId\\\":\\\"FrK3ARfcooqjqc6hg\\\",\\\"instructions\\\":\\\"A **Harshad** number is a number which is divisible by the sum of its digits. For example, 132 is divisible by 6 (1+3+2).\\\\n\\\\nA subset of the Harshad numbers are the **Moran** numbers. Moran numbers yield a prime when divided by the sum of their digits. For example, 133 divided by 7 (1+3+3) yields 19, a prime.\\\\n\\\\nCreate a function that takes a number and returns `\\\\\\\"M\\\\\\\"` if the number is a Moran number, `\\\\\\\"H\\\\\\\"` if it is a (non-Moran) Harshad number, or `\\\\\\\"Neither\\\\\\\"`.\\\\n\\\\n### Examples\\\\n```\\\\nmoran(132) ➞ \\\\\\\"H\\\\\\\"\\\\n\\\\nmoran(133) ➞ \\\\\\\"M\\\\\\\"\\\\n\\\\nmoran(134) ➞ \\\\\\\"Neither\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npu","thisId":"1750","channelHost":"edabit.com","id":"1750","opcode":"1","channelId":"2","timestamp":"1652648901348"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"435\\\"]}\"]","thisId":"1751","channelHost":"edabit.com","id":"1751","opcode":"1","channelId":"2","timestamp":"1652648901454"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4105","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"435\\\",\\\"result\\\":{\\\"_id\\\":\\\"M7GmLubPNJEfQj78E\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class CMS {\\\\n\\\\tpublic static String[] cmsSelector(String[] cms, String re) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.5952380952380953,\\\"familyId\\\":\\\"2H4LrsMGshpDrZjTd\\\",\\\"instructions\\\":\\\"Write a function that takes an array of strings and a pattern (string) and returns the strings that contain the pattern in **alphabetical order**. If the pattern is an empty string, return all the strings passed in the input array.\\\\n\\\\n### Examples\\\\n```\\\\ncmsSelector([\\\\\\\"WordPress\\\\\\\", \\\\\\\"Joomla\\\\\\\", \\\\\\\"Drupal\\\\\\\"], \\\\\\\"w\\\\\\\") ➞ [\\\\\\\"WordPress\\\\\\\"]\\\\n\\\\ncmsSelector([\\\\\\\"WordPress\\\\\\\", \\\\\\\"Joomla\\\\\\\", \\\\\\\"Drupal\\\\\\\", \\\\\\\"Magento\\\\\\\"], \\\\\\\"ru\\\\\\\") ➞ [\\\\\\\"Drupal\\\\\\\"]\\\\n\\\\ncmsSelector([\\\\\\\"WordPress\\\\\\\", \\\\\\\"Joomla\\\\\\\", \\\\\\\"Drupal\\\\\\\", \\\\\\\"Magento\\\\\\\"], \\\\\\\"\\\\\\\") ➞ [\\\\\\\"Drupal\\\\\\\", \\\\\\\"Joomla\\\\\\\", \\\\\\\"Magento\\\\\\\", \\\\\\\"WordPress\\\\\\\"]\\\\n```\\\\n\\\\n### Notes\\\\n- The give","thisId":"1752","channelHost":"edabit.com","id":"1752","opcode":"1","channelId":"2","timestamp":"1652648901518"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"436\\\"]}\"]","thisId":"1753","channelHost":"edabit.com","id":"1753","opcode":"1","channelId":"2","timestamp":"1652648901621"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5507","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"436\\\",\\\"result\\\":{\\\"_id\\\":\\\"jRzY8tThBn7zp3jvy\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int recamanIndex(int n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.5952380952380953,\\\"familyId\\\":\\\"BMBNaufg9SbdYQN3K\\\",\\\"instructions\\\":\\\"The Recamán Sequence is a numeric sequence that starts always with 0. The position of a positive integer in the sequence, or Recamán Index, can be established with the following algorithm:\\\\n\\\\n- For every number to find, two variables are considered: the value of the last element of the sequence (last element from now on), and the actual sequence length (length from now on).\\\\n- If the subtraction of the length from the last element returns a number  **greater than 0 and not already present in the sequence**, it is added to the sequence.\\\\n- When the conditions of the above statement are not met, will be added always the sum of the last element plus the length (even if it is a number alrea","thisId":"1754","channelHost":"edabit.com","id":"1754","opcode":"1","channelId":"2","timestamp":"1652648901630"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"439\\\"]}\"]","thisId":"1755","channelHost":"edabit.com","id":"1755","opcode":"1","channelId":"2","timestamp":"1652648901668"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6779","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"439\\\",\\\"result\\\":{\\\"_id\\\":\\\"JnGKayBeHJFDQ2oiu\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int blocks(int step) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.6176470588235294,\\\"familyId\\\":\\\"YZAtG9Wf3wiWLrqEB\\\",\\\"instructions\\\":\\\"A block sequence in three dimensions. We can write a formula for this one:\\\\n\\\\n![Sequence Step 1 - 5](https://edabit-challenges.s3.amazonaws.com/3d_blocks.png \\\\\\\"Sequence Step 1 - 5\\\\\\\")\\\\n\\\\nCreate a function that takes a number (step) as an argument and returns the amount of blocks in that step.\\\\n\\\\n### Examples\\\\n```\\\\nblocks(1) ➞ 5\\\\n\\\\nblocks(5) ➞ 39\\\\n\\\\nblocks(2) ➞ 12\\\\n```\\\\n\\\\n### Notes\\\\n- Step 0 obviously has to return `0`.\\\\n- The input is always a positive integer.\\\\n- Check the **Resources** tab for a video on finding quadratic sequences.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public vo","thisId":"1756","channelHost":"edabit.com","id":"1756","opcode":"1","channelId":"2","timestamp":"1652648901672"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"440\\\"]}\"]","thisId":"1757","channelHost":"edabit.com","id":"1757","opcode":"1","channelId":"2","timestamp":"1652648901780"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6183","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"440\\\",\\\"result\\\":{\\\"_id\\\":\\\"EatQ3W5eg39FmvGAf\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean palindromicDate(String date) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.6136363636363635,\\\"familyId\\\":\\\"ZHLngccmyDMdzjRC3\\\",\\\"instructions\\\":\\\"The 2nd of February 2020 is a palindromic date in both _dd/mm/yyyy_ and _mm/dd/yyyy_ format (02/02/2020). Given a `date` in _dd/mm/yyyy_ format, return `true` if the date is **palindromic** in **both date formats**, otherwise return `false`.\\\\n\\\\n### Examples\\\\n```\\\\npalindromicDate(\\\\\\\"02/02/2020\\\\\\\") ➞ true\\\\n\\\\npalindromicDate(\\\\\\\"11/12/2019\\\\\\\") ➞ false\\\\n\\\\npalindromicDate(\\\\\\\"11/02/2011\\\\\\\") ➞ false\\\\n// Although 11/02/2011 is palindromic in dd/mm/yyyy format,\\\\n// it isn't in mm/dd/yyyy format (02/11/2011)\\\\n```\\\\n\\\\n### Notes\\\\n- All dates will be valid in both date formats.\\\\n- The `date` must be palindromic in **both** _dd/mm/yyyy_ and _mm/dd/yyyy_ formats to pass.\\\",\\","thisId":"1758","channelHost":"edabit.com","id":"1758","opcode":"1","channelId":"2","timestamp":"1652648901784"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"441\\\"]}\"]","thisId":"1759","channelHost":"edabit.com","id":"1759","opcode":"1","channelId":"2","timestamp":"1652648901882"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5816","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"441\\\",\\\"result\\\":{\\\"_id\\\":\\\"n2haqkZN529Rr67vg\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String doubleSwap(String str, char c1, char c2) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.6179775280898876,\\\"familyId\\\":\\\"zfCWM5CdPdkEtog8P\\\",\\\"instructions\\\":\\\"Write a function to replace all instances of character `c1` with character `c2` and vice versa.\\\\n\\\\n### Examples\\\\n```\\\\ndoubleSwap( \\\\\\\"aabbccc\\\\\\\", 'a', 'b') ➞ \\\\\\\"bbaaccc\\\\\\\"\\\\n\\\\ndoubleSwap(\\\\\\\"random w#rds writt&n h&r&\\\\\\\", '#', '&')\\\\n➞ \\\\\\\"random w&rds writt#n h#r#\\\\\\\"\\\\n\\\\ndoubleSwap(\\\\\\\"128 895 556 788 999\\\\\\\", '8', '9')\\\\n➞ \\\\\\\"129 985 556 799 888\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nBoth characters will show up at least once in the string.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"bbaaccc\\\\\\\", Challenge.doubleSwap(\\\\\\\"aabbccc\\\\\\\", '","thisId":"1760","channelHost":"edabit.com","id":"1760","opcode":"1","channelId":"2","timestamp":"1652648901887"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"438\\\"]}\"]","thisId":"1761","channelHost":"edabit.com","id":"1761","opcode":"1","channelId":"2","timestamp":"1652648901989"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5599","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"438\\\",\\\"result\\\":{\\\"_id\\\":\\\"XgFuNXpXAENpZiDaw\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int mysteryFunc(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.6065573770491803,\\\"familyId\\\":\\\"hG9TxeGc7nhhEWRkr\\\",\\\"instructions\\\":\\\"This is a **reverse coding challenge**. Normally you're given explicit directions with how to create a function. Here, you must generate your own function to satisfy the relationship between the inputs and outputs.\\\\n\\\\nYour task is to create a function that, when fed the inputs below, produces the sample outputs shown.\\\\n\\\\n### Examples\\\\n```\\\\nmysteryFunc(152) ➞ 10\\\\n\\\\nmysteryFunc(832) ➞ 48\\\\n\\\\nmysteryFunc(19) ➞ 9\\\\n\\\\nmysteryFunc(133) ➞ 9\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(10, Challenge.mysteryFunc(152));\\\\n  }\\\\n\\\\t\\\\","thisId":"1762","channelHost":"edabit.com","id":"1762","opcode":"1","channelId":"2","timestamp":"1652648901993"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"437\\\"]}\"]","thisId":"1763","channelHost":"edabit.com","id":"1763","opcode":"1","channelId":"2","timestamp":"1652648902087"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5196","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"437\\\",\\\"result\\\":{\\\"_id\\\":\\\"wp3vZEmhEgCY42WAZ\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int combinations(int num) {   \\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.5952380952380953,\\\"familyId\\\":\\\"ciLkGRbaWsvc2HqnM\\\",\\\"instructions\\\":\\\"Create a function that takes a variable number of arguments, each argument representing the number of items in a group. The function should return the number of permutations (combinations) of choices you would have if you selected one item from each group.\\\\n\\\\n### Examples\\\\n```\\\\ncombinations(2, 3) ➞ 6\\\\n\\\\ncombinations(3, 7, 4) ➞ 84\\\\n\\\\ncombinations(2, 3, 4, 5) ➞ 120\\\\n```\\\\n\\\\n### Notes\\\\n- Don't overthink this one.\\\\n- Input may include the number zero.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTest {\\\\n    @Test\\\\n  public void test1() {\\\\n    assertEquals(2, Challenge.combinations(2));\\\\n  }\\\\n\\\\t\\\\n   ","thisId":"1764","channelHost":"edabit.com","id":"1764","opcode":"1","channelId":"2","timestamp":"1652648902091"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"442\\\"]}\"]","thisId":"1765","channelHost":"edabit.com","id":"1765","opcode":"1","channelId":"2","timestamp":"1652648902204"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7669","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"442\\\",\\\"result\\\":{\\\"_id\\\":\\\"JfertgG5phtnvDNpD\\\",\\\"archived\\\":false,\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class DescendingOrder {\\\\n\\\\tpublic static int sortDesc(final int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.6163522012578617,\\\"familyId\\\":\\\"mMdBZDtZ2owF3hMcZ\\\",\\\"instructions\\\":\\\"Create a function that takes any non-negative number as an argument and return it with it's digits in descending order. Descending order is when you sort from highest to lowest.\\\\n\\\\n### Examples\\\\n```\\\\nsortDesc(123) ➞ 321\\\\n\\\\nsortDesc(1254859723) ➞ 9875543221\\\\n\\\\nsortDesc(73065) ➞ 76530\\\\n```\\\\n\\\\n### Notes\\\\nYou can expect non-negative numbers for all test cases.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertEquals(321, DescendingOrder.sortDesc(123));\\\\n\\\\t}\\\\n\\\\n\\\\t@Test\\\\n\\\\tpublic void test2() {\\\\n\\\\t\\\\tassertEquals(977766200, Desce","thisId":"1766","channelHost":"edabit.com","id":"1766","opcode":"1","channelId":"2","timestamp":"1652648902208"},{"outgoing":"false","opcodeString":"PING","payloadLength":"0","payloadFragment":"","thisId":"1767","channelHost":"edabit.com","id":"1767","opcode":"9","channelId":"2","timestamp":"1652648902287"},{"outgoing":"true","opcodeString":"PONG","payloadLength":"0","payloadFragment":"","thisId":"1768","channelHost":"edabit.com","id":"1768","opcode":"10","channelId":"2","timestamp":"1652648902292"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"443\\\"]}\"]","thisId":"1769","channelHost":"edabit.com","id":"1769","opcode":"1","channelId":"2","timestamp":"1652648902312"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5025","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"443\\\",\\\"result\\\":{\\\"_id\\\":\\\"XuhT6hazGTL9c4bwE\\\",\\\"author\\\":\\\"Mateusz Mędrowski\\\",\\\"authorId\\\":\\\"hPx9H3YM8j2k94DNW\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static double lineLength(int[][] point) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.619047619047619,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"4mRHKZpHFL3fFPHH6\\\",\\\"instructions\\\":\\\"Write a function that takes coordinates of two points on a two-dimensional plane and returns the length of the line segment connecting those two points.\\\\n\\\\n### Examples\\\\n```\\\\nlineLength(arr[0]={15, 7}, arr[1]={22, 11}) ➞ 8.06\\\\n\\\\nlineLength(arr[0]={0, 0}, arr[1]={0, 0}) ➞ 0\\\\n\\\\nlineLength(arr[0]={0, 0}, arr[1]={1, 1}) ➞ 1.41\\\\n```\\\\n\\\\n### Notes\\\\n- The numbers in the argument array can be positive or negative.\\\\n- The order of the given numbers is X, Y.\\\\n- There is 0.1 tolerance so you don't need to round your result.\\\\n- This challenge is easier than it looks.\\\",\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Tes","thisId":"1770","channelHost":"edabit.com","id":"1770","opcode":"1","channelId":"2","timestamp":"1652648902319"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"444\\\"]}\"]","thisId":"1771","channelHost":"edabit.com","id":"1771","opcode":"1","channelId":"2","timestamp":"1652648902412"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4184","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"444\\\",\\\"result\\\":{\\\"_id\\\":\\\"mjzKvjg92ZGLuNPJ9\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"import java.util.Optional;\\\\n\\\\npublic class RugDesign {\\\\n  public static String[] makeRug(int m, int n, Optional<String> s) {\\\\n    \\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.619047619047619,\\\"familyId\\\":\\\"d7oxcXcrjgP29jK5B\\\",\\\"instructions\\\":\\\"Write a function that accepts the width and height (`m, n`) and an optional **proc** `s` and generates an array with `m` elements. Each element is a string consisting of either:\\\\n\\\\n- The default character (hash `#`) repeating `n` times (if `null` is given).\\\\n- The character passed in through the **proc** repeating `n` times.\\\\n\\\\n### Examples\\\\n```\\\\nmakeRug(2, 1, \\\\\\\"tct\\\\\\\") ➞ [\\\\n  \\\\\\\"tct\\\\\\\",\\\\n  \\\\\\\"tct\\\\\\\"\\\\n]\\\\n\\\\nmakeRug(3, 5, null) ➞ [\\\\n  \\\\\\\"#####\\\\\\\",\\\\n  \\\\\\\"#####\\\\\\\",\\\\n  \\\\\\\"#####\\\\\\\"\\\\n]\\\\n\\\\nmakeRug(3, 5, \\\\\\\"$\\\\\\\")  ➞ [\\\\n  \\\\\\\"$$$$$\\\\\\\",\\\\n  \\\\\\\"$$$$$\\\\\\\",\\\\n  \\\\\\\"$$$$$\\\\\\\"\\\\n]\\\\n\\\\nmakeRug(2, 6, \\\\\\\"A\\\\\\\")","thisId":"1772","channelHost":"edabit.com","id":"1772","opcode":"1","channelId":"2","timestamp":"1652648902416"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"445\\\"]}\"]","thisId":"1773","channelHost":"edabit.com","id":"1773","opcode":"1","channelId":"2","timestamp":"1652648902506"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5459","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"445\\\",\\\"result\\\":{\\\"_id\\\":\\\"6ZPqDxQfGkX9rmPGg\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Superiority {\\\\n\\\\tpublic static boolean isFirstSuperior(Object[] a, Object[] b) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.6216216216216217,\\\"familyId\\\":\\\"LHDQzBtefA7uiqx88\\\",\\\"instructions\\\":\\\"You will be given two **extremely** similar arrays, but exactly one of the items in an array will be valued slightly higher than its counterpart (which means that evaluating **the value > the other value** will return `true`).\\\\n\\\\nCreate a function that returns whether the first array is *slightly superior* to that of the second.\\\\n\\\\n\\\\n### Examples\\\\n```\\\\nisFirstSuperior([1, 2, 4], [1, 2, 3]) ➞ true\\\\n// The pair of items at each index are compared in turn.\\\\n// 1 from the first array is the same as 1 from the second array.\\\\n// 2 is the same as 2.\\\\n// However, 4 is greater than 3, so first array is superior.\\\\n\\\\nisFirstSuperior([\\\\\\\"a\\\\\\\", \\\\\\\"d\\\\\\\",","thisId":"1774","channelHost":"edabit.com","id":"1774","opcode":"1","channelId":"2","timestamp":"1652648902510"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"23","payloadFragment":"a[\"{\\\"msg\\\":\\\"ping\\\"}\"]","thisId":"1775","channelHost":"edabit.com","id":"1775","opcode":"1","channelId":"2","timestamp":"1652648902597"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"22","payloadFragment":"[\"{\\\"msg\\\":\\\"pong\\\"}\"]","thisId":"1776","channelHost":"edabit.com","id":"1776","opcode":"1","channelId":"2","timestamp":"1652648902602"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"446\\\"]}\"]","thisId":"1777","channelHost":"edabit.com","id":"1777","opcode":"1","channelId":"2","timestamp":"1652648902610"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3859","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"446\\\",\\\"result\\\":{\\\"_id\\\":\\\"9k87o8Y4yNt3fvcfB\\\",\\\"author\\\":\\\"bangyen\\\",\\\"authorId\\\":\\\"yv7c4H2jimSKHEjtG\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static int[] returnInts(Object[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.6296296296296295,\\\"quality\\\":0,\\\"familyId\\\":\\\"J9FQQZopewSqpDHsh\\\",\\\"instructions\\\":\\\"Write a function that takes an array of elements and returns only the ints.\\\\n\\\\n### Examples\\\\n```\\\\nreturnInts([9, 2, \\\\\\\"space\\\\\\\", \\\\\\\"car\\\\\\\", \\\\\\\"lion\\\\\\\", 16]) ➞ [9, 2, 16]\\\\n\\\\nreturnInts([\\\\\\\"hello\\\\\\\", 81, \\\\\\\"basketball\\\\\\\", 123, \\\\\\\"fox\\\\\\\"]) ➞ [81, 123]\\\\n\\\\nreturnInts([10, \\\\\\\"121\\\\\\\", 56, 20, \\\\\\\"car\\\\\\\", 3, \\\\\\\"lion\\\\\\\"]) ➞ [10, 56, 20, 3]\\\\n\\\\nreturnInts([\\\\\\\"String\\\\\\\",  true,  3.3,  1]) ➞ [1]\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\nimport static org.hamcrest.core.Is.is;\\\\n\\\\npublic class ProgramTest {\\\\n\\\\t@Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertThat(Progr","thisId":"1778","channelHost":"edabit.com","id":"1778","opcode":"1","channelId":"2","timestamp":"1652648902620"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"447\\\"]}\"]","thisId":"1779","channelHost":"edabit.com","id":"1779","opcode":"1","channelId":"2","timestamp":"1652648902756"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4291","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"447\\\",\\\"result\\\":{\\\"_id\\\":\\\"HhExSRj4aXHxTQEgG\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int seq(int n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.631578947368421,\\\"familyId\\\":\\\"yfdnpuYNqkSJAHr6E\\\",\\\"instructions\\\":\\\"Write a function containing an expression, in terms of `n`, for the *n*th term of the sequence that has the following first six terms:\\\\n\\\\n`2, 6, 13, 23, 36, 52` ...and the sequence continues.\\\\n\\\\n### Examples\\\\n```\\\\nseq(1) ➞ 2\\\\n\\\\nseq(2) ➞ 6\\\\n\\\\nseq(6) ➞ 52\\\\n```\\\\n\\\\n### Notes\\\\nThe parameter `n` is always `>=` 0.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(2, Challenge.seq(1));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(6, Challenge.seq(2));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test3() {\\\\n\\\\t\\\\tSystem.out.println(\\\\\\\"If the formula is righ","thisId":"1780","channelHost":"edabit.com","id":"1780","opcode":"1","channelId":"2","timestamp":"1652648902763"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"448\\\"]}\"]","thisId":"1781","channelHost":"edabit.com","id":"1781","opcode":"1","channelId":"2","timestamp":"1652648902840"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7133","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"448\\\",\\\"result\\\":{\\\"_id\\\":\\\"YaveE6sv8xGf4CNxk\\\",\\\"author\\\":\\\"rubens\\\",\\\"authorId\\\":\\\"XhzKztoQYYQzZ2c7o\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean binarySearch(int arr[], int left, int right, int elem) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.632183908045977,\\\"familyId\\\":\\\"zBYDAAXna43wR5QoT\\\",\\\"instructions\\\":\\\"Welcome to part three of the collection for _Computer Science Algorithms_. Once more we'll be delving into recursion by covering the topic of Binary Searches.\\\\n\\\\nA \\\\\\\"Binary Search\\\\\\\" is a search algorithm that is used on an already sorted array. It  compares the target value to the middle element of an array. If they don't match, the half in which the target cannot lie is ignored and the search continues on the remaining half, again taking the middle element to compare to the target value, and repeating this until the target value is found. If the target value is not contained in the array eventually the left search index and the right search in","thisId":"1782","channelHost":"edabit.com","id":"1782","opcode":"1","channelId":"2","timestamp":"1652648902844"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"449\\\"]}\"]","thisId":"1783","channelHost":"edabit.com","id":"1783","opcode":"1","channelId":"2","timestamp":"1652648902950"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4819","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"449\\\",\\\"result\\\":{\\\"_id\\\":\\\"KSX8nW7HdxLK2iFj5\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class SumUpToValue {\\\\n\\\\tpublic static boolean sumOfTwo(int[] a, int[] b, int v) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.6326530612244898,\\\"quality\\\":5,\\\"familyId\\\":\\\"JFgCTmmy77rZ6jX9K\\\",\\\"instructions\\\":\\\"Given two unique integer arrays `a` and `b`, and an integer target value `v`, create a function to determine whether there is a pair of numbers that add up to the target value `v`, where one number comes from one array `a` and the other comes from the second array `b`.\\\\n\\\\nReturn `true` if there is a pair that adds up to the target value and `false` otherwise.\\\\n\\\\n### Examples\\\\n```\\\\nsumOfTwo([1, 2], [4, 5, 6], 5) ➞ true\\\\n\\\\nsumOfTwo([1, 2], [4, 5, 6], 8) ➞ true\\\\n\\\\nsumOfTwo([1, 2], [4, 5, 6], 3) ➞ false\\\\n\\\\nsumOfTwo([1, 2], [4, 5, 6], 9) ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEq","thisId":"1784","channelHost":"edabit.com","id":"1784","opcode":"1","channelId":"2","timestamp":"1652648902953"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"450\\\"]}\"]","thisId":"1785","channelHost":"edabit.com","id":"1785","opcode":"1","channelId":"2","timestamp":"1652648903065"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3939","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"450\\\",\\\"result\\\":{\\\"_id\\\":\\\"eQcTa2pBy5WiXpQFf\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class PrimesInArray {\\\\n  public static boolean allPrime(int[] arr) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.64,\\\"familyId\\\":\\\"g89rBpQRuSw8ai4eQ\\\",\\\"instructions\\\":\\\"Create a function that takes an array of integers and returns `true` if every number is prime. Otherwise, return `false`.\\\\n\\\\n### Examples\\\\n```\\\\nallPrime([7, 5, 2, 4, 6]) ➞ false\\\\n\\\\nallPrime([2, 3, 5, 7, 13, 17, 19, 23, 29]) ➞ true\\\\n\\\\nallPrime([1, 5, 3]) ➞ false\\\\n```\\\\n\\\\n### Notes\\\\n`1` is not a prime number.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"/** \\\\n================================== \\\\nTestGen 2.3 for JUnit 4.13.0 \\\\t\\\\t\\\\nTest Case: PrimesInArray::allPrime \\\\nTimestamp: 11/10/2020 6:43:08 PM \\\\n---------------------------------- \\\\n® DARKKO 2020 © \\\\n==================================\\\\n**/ \\\\n\\\\nimport static org.junit.Assert.assertEquals; \\\\nim","thisId":"1786","channelHost":"edabit.com","id":"1786","opcode":"1","channelId":"2","timestamp":"1652648903069"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"451\\\"]}\"]","thisId":"1787","channelHost":"edabit.com","id":"1787","opcode":"1","channelId":"2","timestamp":"1652648903182"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5169","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"451\\\",\\\"result\\\":{\\\"_id\\\":\\\"ujzBDWymfJ9fzSnfH\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String isApocalyptic(int number) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.6382978723404256,\\\"familyId\\\":\\\"jGrbP9GX9iP4nMmgQ\\\",\\\"instructions\\\":\\\"In this challenge, you have to establish if a number is apocalyptic. A positive integer `n` greater than 0 is apocalyptic when **2 elevated to `n`** contains one or more occurrences of **666** inside it.\\\\n\\\\nGiven an integer n, implement a function that returns:\\\\n- `\\\\\\\"Safe\\\\\\\"` if `n` is not apocalyptic.\\\\n- `\\\\\\\"Single\\\\\\\"` if inside `2^n` there's a single occurrence of 666.\\\\n- `\\\\\\\"Double\\\\\\\"` if inside `2^n` there are two occurrence of 666.\\\\n- `\\\\\\\"Triple\\\\\\\"` if inside `2^n` there are three occurrence of 666.\\\\n\\\\n### Examples\\\\n```\\\\nisApocalyptic(66) ➞ \\\\\\\"Safe\\\\\\\"\\\\n// 2^66 = 73786976294838206464\\\\n\\\\nisApocalyptic(157) ➞ \\\\\\\"Single\\\\\\\"\\\\n// 2^157 =\\\\n// 182687704|666","thisId":"1788","channelHost":"edabit.com","id":"1788","opcode":"1","channelId":"2","timestamp":"1652648903186"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"452\\\"]}\"]","thisId":"1789","channelHost":"edabit.com","id":"1789","opcode":"1","channelId":"2","timestamp":"1652648903274"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4715","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"452\\\",\\\"result\\\":{\\\"_id\\\":\\\"gvcJa987XYCxqf9xN\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Words {\\\\n  public static String[] dictionary(String s, String[] w) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.6388888888888888,\\\"familyId\\\":\\\"x2JaCvEnN5wfsyGoK\\\",\\\"instructions\\\":\\\"Create a function that takes an initial word and extracts any words that start with the same letters as the initial word.\\\\n\\\\n### Examples\\\\n```\\\\ndictionary(\\\\\\\"bu\\\\\\\", [\\\\\\\"button\\\\\\\", \\\\\\\"breakfast\\\\\\\", \\\\\\\"border\\\\\\\"]) ➞ [\\\\\\\"button\\\\\\\"]\\\\n\\\\ndictionary(\\\\\\\"tri\\\\\\\", [\\\\\\\"triplet\\\\\\\", \\\\\\\"tries\\\\\\\", \\\\\\\"trip\\\\\\\", \\\\\\\"piano\\\\\\\", \\\\\\\"tree\\\\\\\"]) ➞ [\\\\\\\"triplet\\\\\\\", \\\\\\\"tries\\\\\\\", trip\\\\\\\"]\\\\n\\\\ndictionary(\\\\\\\"beau\\\\\\\", [\\\\\\\"pastry\\\\\\\", \\\\\\\"delicious\\\\\\\", \\\\\\\"name\\\\\\\", \\\\\\\"boring\\\\\\\"]) ➞ []\\\\n```\\\\n\\\\n### Notes\\\\n- If none of the words match, return an empty array.\\\\n- Keep the filtered array in the same relative order as the original array of words.\\\",\\\"isFlagged\\\":fals","thisId":"1790","channelHost":"edabit.com","id":"1790","opcode":"1","channelId":"2","timestamp":"1652648903278"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"453\\\"]}\"]","thisId":"1791","channelHost":"edabit.com","id":"1791","opcode":"1","channelId":"2","timestamp":"1652648903384"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"12522","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"453\\\",\\\"result\\\":{\\\"_id\\\":\\\"9SxN2Mh85B5SBTFWP\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class StringAddition {\\\\n\\\\tpublic static int addNums(String nums) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.64,\\\"familyId\\\":\\\"BWxTxEyZZeu2wK8jn\\\",\\\"instructions\\\":\\\"Given a string of numbers separated by a *comma and space*, return the **total** sum of all the numbers.\\\\n\\\\n### Examples\\\\n```\\\\naddNums(\\\\\\\"2,  5,  1,  8,  4\\\\\\\") ➞ 20\\\\n\\\\naddNums(\\\\\\\"-12,  -13, 12, 17\\\\\\\") ➞ 4\\\\n\\\\naddNums(\\\\\\\"1,  2,  3,  4,  5,  6,  7\\\\\\\") ➞ 28\\\\n\\\\naddNums(\\\\\\\"10\\\\\\\") ➞ 10\\\\n```\\\\n\\\\n### Notes\\\\n- Numbers will always be separated by a comma and space.\\\\n- Your function should accept negative numbers.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals;\\\\nimport org.junit.Test; \\\\nimport java.util.stream.Collectors;\\\\nimport java.util.stream.IntStream;\\\\n\\\\npublic class StringAdditionTest {\\\\n\\\\t@Test\\\\n\\\\tpu","thisId":"1792","channelHost":"edabit.com","id":"1792","opcode":"1","channelId":"2","timestamp":"1652648903387"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"457\\\"]}\"]","thisId":"1793","channelHost":"edabit.com","id":"1793","opcode":"1","channelId":"2","timestamp":"1652648903490"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5472","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"457\\\",\\\"result\\\":{\\\"_id\\\":\\\"Wr5YbkQakb6qh8Gax\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int letterDistance(String str1, String str2) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.6428571428571428,\\\"familyId\\\":\\\"u7FZxq2M57yyELkA7\\\",\\\"instructions\\\":\\\"Given two words, the **letter distance** is calculated by taking the absolute value of the difference in character codes and summing up the difference.\\\\n\\\\nIf one word is longer than another, add the difference in lengths towards the score.\\\\n\\\\nTo illustrate:\\\\n\\\\n```\\\\nletterDistance(\\\\\\\"house\\\\\\\", \\\\\\\"fly\\\\\\\") = dist(\\\\\\\"h\\\\\\\", \\\\\\\"f\\\\\\\") + dist(\\\\\\\"o\\\\\\\", \\\\\\\"l\\\\\\\") + dist(\\\\\\\"u\\\\\\\", \\\\\\\"y\\\\\\\") + dist(house.length, fly.length)\\\\n\\\\n= |104 - 102| + |111 - 108| + |117 - 121| + |5 - 3|\\\\n= 2 + 3 + 4 + 2\\\\n= 11\\\\n```\\\\n\\\\n### Examples\\\\n```\\\\nletterDistance(\\\\\\\"sharp\\\\\\\", \\\\\\\"sharq\\\\\\\") ➞ 1\\\\n\\\\nletterDistance(\\\\\\\"abcde\\\\\\\", \\\\\\\"Abcde\\\\\\\") ➞ 32\\\\n\\\\nletterDistance(\\\\\\\"","thisId":"1794","channelHost":"edabit.com","id":"1794","opcode":"1","channelId":"2","timestamp":"1652648903499"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"456\\\"]}\"]","thisId":"1795","channelHost":"edabit.com","id":"1795","opcode":"1","channelId":"2","timestamp":"1652648903629"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5740","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"456\\\",\\\"result\\\":{\\\"_id\\\":\\\"8YajvDynPYF6XG3nZ\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Friend {\\\\n\\\\tpublic static boolean isPotentialFriend(String[] y, String[] o) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.6428571428571428,\\\"familyId\\\":\\\"NMPZvSWe8wxcjQ7NG\\\",\\\"instructions\\\":\\\"Given two arrays of two people's different interests, return whether both people have **at least two things in common** or have **exact interests**. Return `true` if there's a potential friend!\\\\n\\\\n### Examples\\\\n```\\\\nisPotentialFriend(\\\\n  [\\\\\\\"sports\\\\\\\", \\\\\\\"music\\\\\\\", \\\\\\\"chess\\\\\\\"],\\\\n  [\\\\\\\"coding\\\\\\\", \\\\\\\"music\\\\\\\", \\\\\\\"netflix\\\\\\\", \\\\\\\"chess\\\\\\\"]\\\\n) ➞ true\\\\n\\\\nisPotentialFriend(\\\\n  [\\\\\\\"cycling\\\\\\\", \\\\\\\"technology\\\\\\\", \\\\\\\"drawing\\\\\\\"],\\\\n  [\\\\\\\"dancing\\\\\\\", \\\\\\\"drawing\\\\\\\"]\\\\n) ➞ false\\\\n\\\\nisPotentialFriend(\\\\n  [\\\\\\\"history\\\\\\\"],\\\\n  [\\\\\\\"history\\\\\\\"]\\\\n) ➞ true\\\\n```\\\\n\\\\n### Notes\\\\nArrays of interests may have varied lengths.\\\",\\\"isFlagged\\\"","thisId":"1796","channelHost":"edabit.com","id":"1796","opcode":"1","channelId":"2","timestamp":"1652648903638"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"454\\\"]}\"]","thisId":"1797","channelHost":"edabit.com","id":"1797","opcode":"1","channelId":"2","timestamp":"1652648903747"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4553","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"454\\\",\\\"result\\\":{\\\"_id\\\":\\\"fj6c32nSde3FfYoaC\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class RightShift {\\\\n\\\\tpublic static int shiftToRight(int x, int y) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.641025641025641,\\\"editorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"familyId\\\":\\\"YMdNTA4uHb9AXbRYc\\\",\\\"instructions\\\":\\\"The **right shift** operation is similar to **floor division by powers of two**. \\\\n\\\\nSample calculation using the right shift operator ( `>>` ):\\\\n\\\\n```\\\\n80 >> 3 = floor(80/2^3) = floor(80/8) = 10\\\\n-24 >> 2 = floor(-24/2^2) = floor(-24/4) = -6\\\\n-5 >> 1 = floor(-5/2^1) = floor(-5/2) = -3\\\\n```\\\\n\\\\nWrite a function that **mimics** (without the use of **>>**) the right shift operator and returns the result from the two given integers.\\\\n\\\\n### Examples\\\\n```\\\\nshiftToRight(80, 3) ➞ 10\\\\n\\\\nshiftToRight(-24, 2) ➞ -6\\\\n\\\\nshiftToRight(-5, 1) ➞ -3\\\\n\\\\nshiftToRight(4666, 6) ➞ 72\\\\n\\\\nshiftToRight(3777, 6) ➞ 59\\\\n\\\\nshiftToRight(-512, 10) ➞ ","thisId":"1798","channelHost":"edabit.com","id":"1798","opcode":"1","channelId":"2","timestamp":"1652648903751"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"455\\\"]}\"]","thisId":"1799","channelHost":"edabit.com","id":"1799","opcode":"1","channelId":"2","timestamp":"1652648903841"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4954","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"455\\\",\\\"result\\\":{\\\"_id\\\":\\\"j7qh4xZNvLddnx4Gy\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String insertWhitespace(String s) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.6419753086419753,\\\"familyId\\\":\\\"zBXqgcPemy89icEGf\\\",\\\"instructions\\\":\\\"Write a function that inserts a white space between every instance of a lower character followed immediately by an upper character.\\\\n\\\\n### Examples\\\\n```\\\\ninsertWhitespace(\\\\\\\"SheWalksToTheBeach\\\\\\\") ➞ \\\\\\\"She Walks To The Beach\\\\\\\"\\\\n\\\\ninsertWhitespace(\\\\\\\"MarvinTalksTooMuch\\\\\\\") ➞ \\\\\\\"Marvin Talks Too Much\\\\\\\"\\\\n\\\\ninsertWhitespace(\\\\\\\"TheGreatestUpsetInHistory\\\\\\\") ➞ \\\\\\\"The Greatest Upset In History\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nEach word in the phrase will be at least two characters long.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"She Walks To","thisId":"1800","channelHost":"edabit.com","id":"1800","opcode":"1","channelId":"2","timestamp":"1652648903844"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"458\\\"]}\"]","thisId":"1801","channelHost":"edabit.com","id":"1801","opcode":"1","channelId":"2","timestamp":"1652648903965"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4304","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"458\\\",\\\"result\\\":{\\\"_id\\\":\\\"C7eTh8XB3dERHYE9W\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class OhmsLaw {\\\\n  public static Object calculate(Object v, Object r, Object i) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.6428571428571428,\\\"familyId\\\":\\\"MGbubvJf5PWitMSha\\\",\\\"instructions\\\":\\\"Create a function that calculates the missing value of 3 inputs using Ohm's law. The inputs are `v`, `r` or `i` (aka: voltage, resistance and current).\\\\n\\\\nOhm's law:\\\\n```\\\\nV = R * I\\\\n```\\\\n\\\\nReturn the missing value rounded to two decimal places.\\\\n\\\\n### Examples\\\\n```\\\\ncalculate(46.6, \\\\\\\"\\\\\\\", 54.4) ➞ 0.86\\\\n\\\\ncalculate(54.0, 46.0, \\\\\\\"\\\\\\\") ➞ 1.17\\\\n\\\\ncalculate(230.0, \\\\\\\"\\\\\\\", 2.0) ➞ 115.0\\\\n\\\\ncalculate(\\\\\\\"\\\\\\\", 220.0, 0.02) ➞ 4.4\\\\n\\\\ncalculate(\\\\\\\"\\\\\\\", \\\\\\\"\\\\\\\", 10.0) ➞ \\\\\\\"Invalid\\\\\\\"\\\\n\\\\ncalculate(500.0, 50.0, 10.0) ➞ \\\\\\\"Invalid\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Missing values will be presented as an empty string `\\\\\\\"\\\\\\\"`\\\\n- If there is more t","thisId":"1802","channelHost":"edabit.com","id":"1802","opcode":"1","channelId":"2","timestamp":"1652648903969"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"459\\\"]}\"]","thisId":"1803","channelHost":"edabit.com","id":"1803","opcode":"1","channelId":"2","timestamp":"1652648904076"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4774","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"459\\\",\\\"result\\\":{\\\"_id\\\":\\\"cAyse5aq4n4MagmYA\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int countPalindromes(int num1, int num2) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.6455696202531647,\\\"familyId\\\":\\\"MW2oRn4LxyjjeRZgK\\\",\\\"instructions\\\":\\\"Create a function that returns the number of **palindrome numbers** in a specified range (**inclusive**).\\\\n\\\\nFor example, between **8** and **34**, there are **5** palindromes: **8**, **9**, **11**, **22** and **33**. Between **1550** and **1552** there is exactly one palindrome: **1551**.\\\\n\\\\n### Examples\\\\n```\\\\ncountPalindromes(1, 10) ➞ 9\\\\n\\\\ncountPalindromes(555, 556) ➞ 1\\\\n\\\\ncountPalindromes(878, 898) ➞ 3\\\\n```\\\\n\\\\n### Notes\\\\n- A palindrome number is a number which remains the same when its digits are reversed. For example, 2552 reversed is still 2552. The reflectional symmetry of this number makes it a palindromic number.\\\\n- Single-digit numbers are trivially ","thisId":"1804","channelHost":"edabit.com","id":"1804","opcode":"1","channelId":"2","timestamp":"1652648904091"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"460\\\"]}\"]","thisId":"1805","channelHost":"edabit.com","id":"1805","opcode":"1","channelId":"2","timestamp":"1652648904205"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5333","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"460\\\",\\\"result\\\":{\\\"_id\\\":\\\"zRjZb4NXtfMjGAMGb\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String remix(String str, int[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.6521739130434783,\\\"familyId\\\":\\\"4pQLmi8347tj2bhA4\\\",\\\"instructions\\\":\\\"Create a function that takes both a string and an array of numbers as arguments. Rearrange the letters in the string to be in the order specified by the index numbers. Return the \\\\\\\"remixed\\\\\\\" string.\\\\n\\\\n### Examples\\\\n```\\\\nremix(\\\\\\\"abcd\\\\\\\", [0, 3, 1, 2]) ➞ \\\\\\\"acdb\\\\\\\"\\\\n```\\\\n\\\\nThe string you'll be returning will have: \\\\\\\"a\\\\\\\" at index 0, \\\\\\\"b\\\\\\\" at index 3, \\\\\\\"c\\\\\\\" at index 1, \\\\\\\"d\\\\\\\" at index 2, because the order of those characters maps to their corresponding numbers in the index array.\\\\n\\\\n```\\\\nremix(\\\\\\\"PlOt\\\\\\\", [1, 3, 0, 2]) ➞ \\\\\\\"OPtl\\\\\\\"\\\\n\\\\nremix(\\\\\\\"computer\\\\\\\", [0, 2, 1, 5, 3, 6, 7, 4]) ➞ \\\\\\\"cmourpte\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nBe sure ","thisId":"1806","channelHost":"edabit.com","id":"1806","opcode":"1","channelId":"2","timestamp":"1652648904209"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"461\\\"]}\"]","thisId":"1807","channelHost":"edabit.com","id":"1807","opcode":"1","channelId":"2","timestamp":"1652648904303"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5685","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"461\\\",\\\"result\\\":{\\\"_id\\\":\\\"ZrsjThqzcwJYT95PQ\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int countAdverbs(String sentence) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.65,\\\"familyId\\\":\\\"6bfpWnyhP7LAmRzzk\\\",\\\"instructions\\\":\\\"Create a function that counts the number of **adverbs** in a sentence. An adverb is a word that ends with `ly`.\\\\n\\\\n### Examples\\\\n```\\\\ncountAdverbs(\\\\\\\"She ran hurriedly towards the stadium.\\\\\\\") ➞ 1\\\\n\\\\ncountAdverbs(\\\\\\\"She ate the lasagna heartily and noisily.\\\\\\\") ➞ 2\\\\n\\\\ncountAdverbs(\\\\\\\"He hates potatoes.\\\\\\\") ➞ 0\\\\n\\\\ncountAdverbs(\\\\\\\"He was happily, crazily, foolishly over the moon.\\\\\\\") ➞ 3\\\\n```\\\\n\\\\n### Notes\\\\n- Do NOT count words where the `ly` is in the beginning or the middle (e.g. Lysol, Illya).\\\\n- For the purpose of this exercise, ignore the nuances of the English language (some adjectives also end in `ly`).\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Asse","thisId":"1808","channelHost":"edabit.com","id":"1808","opcode":"1","channelId":"2","timestamp":"1652648904307"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"462\\\"]}\"]","thisId":"1809","channelHost":"edabit.com","id":"1809","opcode":"1","channelId":"2","timestamp":"1652648904409"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6943","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"462\\\",\\\"result\\\":{\\\"_id\\\":\\\"g7mkKpAtZZ7mnuFQX\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static int[] timeSum(String[] s) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.6484375,\\\"familyId\\\":\\\"Wk5piq2io72aafD2i\\\",\\\"instructions\\\":\\\"Create a function that takes an array of strings representing times (`'hours:minutes:seconds'`) and returns their sum as an array of integers (`[hours, minutes, seconds]`).\\\\n\\\\n### Examples\\\\n```\\\\ntimeSum([\\\\\\\"1:23:45\\\\\\\"]) ➞ [1, 23, 45]\\\\n\\\\ntimeSum([\\\\\\\"1:03:45\\\\\\\", \\\\\\\"1:23:05\\\\\\\"]) ➞ [2, 26, 50]\\\\n\\\\ntimeSum([\\\\\\\"5:39:42\\\\\\\", \\\\\\\"10:02:08\\\\\\\", \\\\\\\"8:26:33\\\\\\\"]) ➞ [24, 8, 23]\\\\n```\\\\n\\\\n### Notes\\\\nIf the input is an empty array, return `[0, 0, 0]`\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test\\\\n\\\\tpublic void test1(){\\\\n\\\\t\\\\tassertThat(Program.timeSum(","thisId":"1810","channelHost":"edabit.com","id":"1810","opcode":"1","channelId":"2","timestamp":"1652648904413"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"463\\\"]}\"]","thisId":"1811","channelHost":"edabit.com","id":"1811","opcode":"1","channelId":"2","timestamp":"1652648904509"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5350","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"463\\\",\\\"result\\\":{\\\"_id\\\":\\\"DPyBbBDqziAdo9DRJ\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int digitOccurrences(int min, int max, int digit) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.6533333333333333,\\\"familyId\\\":\\\"mq4NwwGDTpQruoEns\\\",\\\"instructions\\\":\\\"Write a function that counts the number of times a specific digit occurs in a range (**inclusive**). The function will look like:\\\\n\\\\n```\\\\ndigitOccurrences(min, max, digit) ➞ number of times digit occurs\\\\n```\\\\n\\\\n### Examples\\\\n```\\\\ndigitOccurrences(51, 55, 5) ➞ 6\\\\n// [51, 52, 53, 54, 55] : 5 occurs 6 times\\\\n\\\\ndigitOccurrences(1, 8, 9) ➞ 0\\\\n\\\\ndigitOccurrences(-8, -1, 8) ➞ 1\\\\n\\\\ndigitOccurrences(71, 77, 2) ➞ 1\\\\n```\\\\n\\\\n### Notes\\\\n- Ranges can be negative.\\\\n- `min <= max`\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(6, Challeng","thisId":"1812","channelHost":"edabit.com","id":"1812","opcode":"1","channelId":"2","timestamp":"1652648904513"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"464\\\"]}\"]","thisId":"1813","channelHost":"edabit.com","id":"1813","opcode":"1","channelId":"2","timestamp":"1652648904641"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3990","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"464\\\",\\\"result\\\":{\\\"_id\\\":\\\"qbhH4bef2N275iQ2Z\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Center {\\\\t\\\\n\\\\tpublic static boolean isCentered(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.6458333333333333,\\\"quality\\\":0,\\\"familyId\\\":\\\"a96GgK556sKDfjPuJ\\\",\\\"instructions\\\":\\\"Given a string containing mostly spaces and *one* non-space character, return whether the character is positioned in the very centre of the string. This means that the number of spaces on both sides **should be the same**.\\\\n\\\\n### Examples\\\\n```\\\\nisCentered(\\\\\\\"  #  \\\\\\\") ➞ true\\\\n\\\\nisCentered(\\\\\\\" 2    \\\\\\\") ➞ false\\\\n\\\\nisCentered(\\\\\\\"@\\\\\\\") ➞ true\\\\n```\\\\n\\\\n### Notes\\\\nOnly one character other than spaces will be given at a time.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals;\\\\nimport org.junit.Test;\\\\n\\\\npublic class CenterTests {\\\\n\\\\t@Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertEquals(Center.isCentered(\\\\\\\"  #  \\\\\\\"), tru","thisId":"1814","channelHost":"edabit.com","id":"1814","opcode":"1","channelId":"2","timestamp":"1652648904645"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"465\\\"]}\"]","thisId":"1815","channelHost":"edabit.com","id":"1815","opcode":"1","channelId":"2","timestamp":"1652648904741"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3726","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"465\\\",\\\"result\\\":{\\\"_id\\\":\\\"u8tkvqrMSqJetmNcz\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String swapXY(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.6603773584905661,\\\"familyId\\\":\\\"ag3Ezq2J7rEHjWvww\\\",\\\"instructions\\\":\\\"Write a function that swaps the X and Y coordinates in a string.\\\\n\\\\n### Examples\\\\n```\\\\nswapXY(\\\\\\\"(1, 2), (3, 4)\\\\\\\") ➞ \\\\\\\"(2, 1), (4, 3)\\\\\\\"\\\\n\\\\nswapXY(\\\\\\\"(11, 23), (43, 99)\\\\\\\") ➞ \\\\\\\"(23, 11), (99, 43)\\\\\\\"\\\\n\\\\nswapXY(\\\\\\\"(-5, -3), (7, 4)\\\\\\\") ➞ \\\\\\\"(-3, -5), (4, 7)\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Some numbers have multiple digits.\\\\n- Some numbers will be negative.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"(2, 1), (4, 3)\\\\\\\", Challenge.swapXY(\\\\\\\"(1, 2), (3, 4)\\\\\\\"));\\\\n  }\\\\n\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(\\\\\\\"(23, 11), (9","thisId":"1816","channelHost":"edabit.com","id":"1816","opcode":"1","channelId":"2","timestamp":"1652648904744"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"466\\\"]}\"]","thisId":"1817","channelHost":"edabit.com","id":"1817","opcode":"1","channelId":"2","timestamp":"1652648904839"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4485","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"466\\\",\\\"result\\\":{\\\"_id\\\":\\\"8yxthmRQsNu86PBy3\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String longestCommonEnding(String str1, String str2) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.6612903225806452,\\\"familyId\\\":\\\"zBTJSYuDqMjJNZbay\\\",\\\"instructions\\\":\\\"Write a function that returns the **longest common ending** between two strings.\\\\n\\\\n### Examples\\\\n```\\\\nlongestCommonEnding(\\\\\\\"multiplication\\\\\\\", \\\\\\\"ration\\\\\\\") ➞ \\\\\\\"ation\\\\\\\"\\\\n\\\\nlongestCommonEnding(\\\\\\\"potent\\\\\\\", \\\\\\\"tent\\\\\\\") ➞ \\\\\\\"tent\\\\\\\"\\\\n\\\\nlongestCommonEnding(\\\\\\\"skyscraper\\\\\\\", \\\\\\\"carnivore\\\\\\\") ➞ \\\\\\\"\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nReturn an empty string if there exists no common ending.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"tiful\\\\\\\", Challenge.longestCommonEnding(\\\\\\\"pitiful\\\\\\\", \\\\\\\"beautiful\\\\\\\"));\\\\n  }\\","thisId":"1818","channelHost":"edabit.com","id":"1818","opcode":"1","channelId":"2","timestamp":"1652648904843"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"467\\\"]}\"]","thisId":"1819","channelHost":"edabit.com","id":"1819","opcode":"1","channelId":"2","timestamp":"1652648904951"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5325","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"467\\\",\\\"result\\\":{\\\"_id\\\":\\\"zSjd2EbBzBCuMjgrr\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int lunarSum(int number1, int number2) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.6615384615384616,\\\"familyId\\\":\\\"fPa6SKzfSB5pCbu7F\\\",\\\"instructions\\\":\\\"When two numbers are added together, the strange Lunar arithmetic is used on the Moon. The Lunar sum of two numbers is not determined by the sum of their individual digits, but by the highest digit of the two taken into account at each step, in columnar form.\\\\n\\\\n```\\\\n2  4  6  +\\\\n3  1  7  =\\\\n--------\\\\n3  4  7\\\\n\\\\n// 3 > 2 | 4 > 1 | 7 > 6\\\\n\\\\n1  3  4  +\\\\n   5  4  =\\\\n--------\\\\n1  5  4\\\\n\\\\n//  1 > 0 | 5 > 3 | 4 == 4\\\\n// Blank spots in the columnar form are equals to 0\\\\n\\\\n   2  0  +\\\\n1  4  0  =\\\\n-------\\\\n1  4  0\\\\n\\\\n// 1 > 0 | 4 > 2 | 0 == 0\\\\n```\\\\n\\\\nGiven two positive integers `number1` and `number2`, implement a function that returns their sum as a new integ","thisId":"1820","channelHost":"edabit.com","id":"1820","opcode":"1","channelId":"2","timestamp":"1652648904954"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"468\\\"]}\"]","thisId":"1821","channelHost":"edabit.com","id":"1821","opcode":"1","channelId":"2","timestamp":"1652648905117"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5976","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"468\\\",\\\"result\\\":{\\\"_id\\\":\\\"M9eXE68jj9pxvmiuj\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean isKaprekar(int n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.670731707317073,\\\"familyId\\\":\\\"mbmHKgkt8A4z3owfQ\\\",\\\"instructions\\\":\\\"A Kaprekar Number is a positive integer that is equal to a number formed by first squaring, then splitting and summing its two lexicographical parts:\\\\n\\\\n- If the quantity of digits of the squared number is even, the left and right parts will have the same length.\\\\n- If the quantity of digits of the squared number is odd, then the right part will be the longer half, with the left part being the shorter or equal to zero if the quantity of digits is equal to 1.\\\\n\\\\nGiven a positive integer `n` implement a function that returns `true` if it's a Kaprekar number, and `false` if it's not.\\\\n\\\\n### Examples\\\\n```\\\\nisKaprekar(3) ➞ false\\\\n// n² = \\\\\\\"9\\\\\\\"\\\\n// Left + Right = 0 + 9 = 9 ➞ 9 != 3","thisId":"1822","channelHost":"edabit.com","id":"1822","opcode":"1","channelId":"2","timestamp":"1652648905121"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"471\\\"]}\"]","thisId":"1823","channelHost":"edabit.com","id":"1823","opcode":"1","channelId":"2","timestamp":"1652648905199"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6053","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"471\\\",\\\"result\\\":{\\\"_id\\\":\\\"NnpHPBhnnhdE3gLew\\\",\\\"author\\\":\\\"Mateusz Mędrowski\\\",\\\"authorId\\\":\\\"hPx9H3YM8j2k94DNW\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static double lineLength(int[][] point) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.6875,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"aNXzrx7c8DGQJyLCf\\\",\\\"instructions\\\":\\\"Write a function that takes coordinates of two points on a three-dimensional plane and returns the length of the line segment connecting those two points.\\\\n\\\\n### Examples\\\\n```\\\\nlineLength(arr[0]={15, 7, 5}, arr[1]={22, 11, 1}) ➞ 8.06\\\\n\\\\nlineLength(arr[0]={0, 0, 0}, arr[1]={0, 0, 0}) ➞ 0\\\\n\\\\nlineLength(arr[0]={0, 0, 0}, arr[1]={1, 1, 1}) ➞ 1.41\\\\n```\\\\n\\\\n### Notes\\\\n- Numbers in argument array can be positive or negative.\\\\n- The order of the given numbers is X, Y, Z.\\\\n- There is 0.1 tolerance, so you don't need to round your result.\\\\n- This challenge is easier than it looks.\\\\n\\\\nCheck [my profile](https://edabit.com/user/hPx9H3YM8j2k94D","thisId":"1824","channelHost":"edabit.com","id":"1824","opcode":"1","channelId":"2","timestamp":"1652648905203"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"473\\\"]}\"]","thisId":"1825","channelHost":"edabit.com","id":"1825","opcode":"1","channelId":"2","timestamp":"1652648905306"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3364","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"473\\\",\\\"result\\\":{\\\"_id\\\":\\\"dETRK2YLCtEPAMvMb\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Price {\\\\n\\\\tpublic static String percentageChanged(String oldPrice, String newPrice) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.6904761904761905,\\\"quality\\\":0,\\\"familyId\\\":\\\"po3sxv3fg2g7SHdvM\\\",\\\"instructions\\\":\\\"Create a function that takes an old price `oldPrice`, a new price `newPrice`, and returns what percent the price decreased or increased. Round the percentage to the nearest whole percent.\\\\n\\\\n### Examples\\\\n```\\\\npercentageChanged(\\\\\\\"$800\\\\\\\", \\\\\\\"$600\\\\\\\") ➞ \\\\\\\"25% decrease\\\\\\\"\\\\n\\\\npercentageChanged(\\\\\\\"$1000\\\\\\\", \\\\\\\"$840\\\\\\\") ➞ \\\\\\\"16% decrease\\\\\\\"\\\\n\\\\npercentageChanged(\\\\\\\"$100\\\\\\\", \\\\\\\"$950\\\\\\\") ➞ \\\\\\\"850% increase\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals;\\\\nimport org.junit.Test;\\\\n\\\\npublic class PriceTests {\\\\n\\\\t@Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertEq","thisId":"1826","channelHost":"edabit.com","id":"1826","opcode":"1","channelId":"2","timestamp":"1652648905310"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"472\\\"]}\"]","thisId":"1827","channelHost":"edabit.com","id":"1827","opcode":"1","channelId":"2","timestamp":"1652648905442"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4639","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"472\\\",\\\"result\\\":{\\\"_id\\\":\\\"zCBrgDYqgfsd6THJd\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class CurzonNumber {\\\\n\\\\tpublic static boolean isCurzon(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.6896551724137931,\\\"quality\\\":0,\\\"familyId\\\":\\\"uToSq7uE566JqNiuH\\\",\\\"instructions\\\":\\\"Given a positive integer `n` and if `1` plus `2` times `n` exactly divides `1` plus `2` raised to the power `n`, then `n` is said to be a Curzon number.\\\\n\\\\nWrite a function that determines whether a number is a Curzon number or not.\\\\n\\\\n### Examples\\\\n```\\\\nisCurzon(5) ➞ true\\\\n// 2 ** 5 + 1 = 33\\\\n// 2 * 5 + 1 = 11\\\\n// 33 is a multiple of 11\\\\n\\\\nisCurzon(10) ➞ false\\\\n// 2 ** 10 + 1 = 1025\\\\n// 2 * 10 + 1 = 21\\\\n// 1025 is not a multiple of 21\\\\n\\\\nisCurzon(14) ➞ true\\\\n// 2 ** 14 + 1 = 16385\\\\n// 2 * 14 + 1 = 29\\\\n// 16385 is a multiple of 29\\\\n```\\\\n\\\\n### Notes\\\\n- Use `BigInteger` or `BigDecimal` classes to deal with extremely big numbers.\\\",\\\"isHidden\\\":f","thisId":"1828","channelHost":"edabit.com","id":"1828","opcode":"1","channelId":"2","timestamp":"1652648905447"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"470\\\"]}\"]","thisId":"1829","channelHost":"edabit.com","id":"1829","opcode":"1","channelId":"2","timestamp":"1652648905567"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7017","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"470\\\",\\\"result\\\":{\\\"_id\\\":\\\"mdJmXLuw8dLxxdGLc\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean noDuplicateLetters(String phrase) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.6825396825396826,\\\"familyId\\\":\\\"iqKAgZjKi8u6TPdWQ\\\",\\\"instructions\\\":\\\"Given a common phrase, return `false` if *any* individual word in the phrase contains _duplicate_ letters. Return `true` otherwise.\\\\n\\\\n### Examples\\\\n```\\\\nnoDuplicateLetters(\\\\\\\"Fortune favours the bold.\\\\\\\") ➞ true\\\\n\\\\nnoDuplicateLetters(\\\\\\\"You can lead a horse to water, but you can't make him drink.\\\\\\\") ➞ true\\\\n\\\\nnoDuplicateLetters(\\\\\\\"Look before you leap.\\\\\\\") ➞ false\\\\n// Duplicate letters in \\\\\\\"Look\\\\\\\" and \\\\\\\"before\\\\\\\".\\\\n\\\\nnoDuplicateLetters(\\\\\\\"An apple a day keeps the doctor away.\\\\\\\") ➞ false\\\\n// Duplicate letters in \\\\\\\"apple\\\\\\\", \\\\\\\"keeps\\\\\\\", \\\\\\\"doctor\\\\\\\", and \\\\\\\"away\\\\\\\".\\\\n```\\\\n\\\\n### Notes\\\\nLetter matches are case-insensitive.\\\",\\\"lab\\\":\\","thisId":"1830","channelHost":"edabit.com","id":"1830","opcode":"1","channelId":"2","timestamp":"1652648905571"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"469\\\"]}\"]","thisId":"1831","channelHost":"edabit.com","id":"1831","opcode":"1","channelId":"2","timestamp":"1652648905667"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5308","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"469\\\",\\\"result\\\":{\\\"_id\\\":\\\"9EAgG2hGidjo5BvCz\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class LetterOrder {\\\\n  public static boolean firstBeforeSecond(String t, String f, String s) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.6764705882352942,\\\"familyId\\\":\\\"ZhiHZfoq7CpWvWiZY\\\",\\\"instructions\\\":\\\"You are given three inputs: a string, one letter, and a second letter.\\\\nWrite a function that returns `true` if every instance of the first letter occurs **before** every instance of the second letter.\\\\n\\\\n### Examples\\\\n```\\\\nfirstBeforeSecond(\\\\\\\"a rabbit jumps joyfully\\\\\\\", \\\\\\\"a\\\\\\\", \\\\\\\"j\\\\\\\") ➞ true\\\\n// every instance of \\\\\\\"a\\\\\\\" occurs before every instance of \\\\\\\"j\\\\\\\"\\\\n\\\\nfirstBeforeSecond(\\\\\\\"tesha is my world\\\\\\\", \\\\\\\"y\\\\\\\", \\\\\\\"d\\\\\\\") ➞ true\\\\n\\\\nfirstBeforeSecond(\\\\\\\"knaves knew about waterfalls\\\\\\\", \\\\\\\"k\\\\\\\", \\\\\\\"w\\\\\\\") ➞  true\\\\n\\\\nfirstBeforeSecond(\\\\\\\"happy birthday\\\\\\\", \\\\\\\"a\\\\\\\", \\\\\\\"y\\\\\\\") ➞ false\\\\n// the \\\\\\\"a\\\\\\\" in \\\\\\\"bi","thisId":"1832","channelHost":"edabit.com","id":"1832","opcode":"1","channelId":"2","timestamp":"1652648905678"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"474\\\"]}\"]","thisId":"1833","channelHost":"edabit.com","id":"1833","opcode":"1","channelId":"2","timestamp":"1652648905775"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5004","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"474\\\",\\\"result\\\":{\\\"_id\\\":\\\"ted7T8hrioompcZAn\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String primalStrength(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.6938775510204083,\\\"familyId\\\":\\\"nyzn67wZZAJp2haj3\\\",\\\"instructions\\\":\\\"In number theory, a prime number is **_balanced_** if it is equidistant from the prime before it and the prime after it. It is therefore the arithmetic mean of those primes. For example, 5 is a balanced prime, two units away from 3, and two from 7. 211 is 12 units away from the previous prime, 199, and 12 away from the next, 223.\\\\n\\\\nA prime that is greater than the arithmetic mean of the primes before and after it is called a **_strong_** prime. It is closer to the prime after it than the one before it. For example, the strong prime 17 is closer to 19 than it is to 13 (see note at bottom).\\\\n\\\\nA prime that is lesser than the arithmetic mean of the primes before and after it is call","thisId":"1834","channelHost":"edabit.com","id":"1834","opcode":"1","channelId":"2","timestamp":"1652648905782"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"475\\\"]}\"]","thisId":"1835","channelHost":"edabit.com","id":"1835","opcode":"1","channelId":"2","timestamp":"1652648906001"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5899","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"475\\\",\\\"result\\\":{\\\"_id\\\":\\\"xzRcBmkYYNhoeBNv5\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Absoluteness {\\\\n  public static String absolute(String s) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.7027027027027026,\\\"familyId\\\":\\\"Z5rYz9kaga9LBoymQ\\\",\\\"instructions\\\":\\\"Given a sentence, create a function that replaces every occurence of the article \\\\\\\"**a**\\\\\\\" with the verb phrase \\\\\\\"**an absolute**\\\\\\\". It should return the same string without any change if it doesn't have any article \\\\\\\"a\\\\\\\" present.\\\\n\\\\n### Examples\\\\n```\\\\nabsolute(\\\\\\\"Truly, a heart that beats for no one but for Tesh.\\\\\\\") ➞ \\\\\\\"Truly, an absolute heart that beats for no one but for Tesh.\\\\\\\"\\\\n\\\\nabsolute(\\\\\\\"A world of hers where mine evolves.\\\\\\\") ➞ \\\\\\\"An absolute world of hers where mine evolves.\\\\\\\"\\\\n\\\\nabsolute(\\\\\\\"A spread of love, not hate.\\\\\\\") ➞ \\\\\\\"An absolute spread of love, not hate.\\\\\\\"\\\\n\\\\nabsolute(\\\\\\\"Tesha is a woman of true substance and a beauty","thisId":"1836","channelHost":"edabit.com","id":"1836","opcode":"1","channelId":"2","timestamp":"1652648906163"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"476\\\"]}\"]","thisId":"1837","channelHost":"edabit.com","id":"1837","opcode":"1","channelId":"2","timestamp":"1652648906191"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5543","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"476\\\",\\\"result\\\":{\\\"_id\\\":\\\"uemLKqbbbfqvwB8ke\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String flip(String str, String spec) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.703125,\\\"familyId\\\":\\\"F7qv5qgsAp3Pys3Xs\\\",\\\"instructions\\\":\\\"Create a function that takes a string as the first argument, and a (string) specification as a second argument. If the specification is `\\\\\\\"word\\\\\\\"`, return a string with each word reversed while maintaining their original order. If the specification is `\\\\\\\"sentence\\\\\\\"`, reverse the order of the words in the string, while keeping the words intact.\\\\n\\\\n### Examples\\\\n```\\\\nstr = \\\\\\\"There's never enough time to do all the nothing you want\\\\\\\"\\\\n\\\\n\\\\nflip(\\\\\\\"Hello\\\\\\\", \\\\\\\"word\\\\\\\") ➞ \\\\\\\"olleH\\\\\\\"\\\\n\\\\nflip(\\\\\\\"Hello\\\\\\\", \\\\\\\"sentence\\\\\\\") ➞ \\\\\\\"Hello\\\\\\\"\\\\n\\\\nflip(str, \\\\\\\"word\\\\\\\") ➞ \\\\\\\"s'erehT reven hguone emit ot od lla eht gnihton uoy tnaw\\\\\\\"\\\\n\\\\nflip(str, \\\\\\\"sentence\\\\\\\"","thisId":"1838","channelHost":"edabit.com","id":"1838","opcode":"1","channelId":"2","timestamp":"1652648906207"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"477\\\"]}\"]","thisId":"1839","channelHost":"edabit.com","id":"1839","opcode":"1","channelId":"2","timestamp":"1652648906227"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4948","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"477\\\",\\\"result\\\":{\\\"_id\\\":\\\"4JMgg8Fbmb3qnzS8B\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int persistence(long int num) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.7241379310344827,\\\"familyId\\\":\\\"3Lf2rq4kt9Snh5ZJx\\\",\\\"instructions\\\":\\\"If you take an integer and form the product of its individual digits, you get a smaller number. Keep doing this and eventually you end up with a single digit.\\\\n\\\\nThe number of steps it takes to reach this point is known as the integer's _multiplicative persistence_. For example, 347 has a persistence of 3: `3*4*7 = 84, 8*4 = 32, 3*2 = 6`.\\\\n\\\\nDevise a function that returns the persistence of an integer.\\\\n\\\\n### Examples\\\\n```\\\\npersistence(9) ➞ 0\\\\n\\\\npersistence(12) ➞ 1\\\\n\\\\npersistence(6788) ➞ 6\\\\n\\\\npersistence(678852) ➞ 2\\\\n```\\\\n\\\\n### Notes\\\\n- The smallest number with persistence 11 is 277777788888899.\\\\n- A number has never been found, no matter how large, that has a persi","thisId":"1840","channelHost":"edabit.com","id":"1840","opcode":"1","channelId":"2","timestamp":"1652648906235"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"478\\\"]}\"]","thisId":"1841","channelHost":"edabit.com","id":"1841","opcode":"1","channelId":"2","timestamp":"1652648906243"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4500","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"478\\\",\\\"result\\\":{\\\"_id\\\":\\\"ACvNXRvMQPfMguQBH\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int phi(int n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.7027027027027026,\\\"familyId\\\":\\\"GxdHZmd4jtLaMeTue\\\",\\\"instructions\\\":\\\"The **Euler's phi function** (from the Greek letter **φ**, also called _Euler's totient function_) counts the positive integers that are coprime of a given number `n`, from 1 to `n` - 1. Two numbers are coprime when their greater common divisor is equal to 1. Look at the example below.\\\\n\\\\n```\\\\ndivisors of 6 ➞ [1, 2, 3, 6]\\\\n\\\\ndivisors of 5 ➞ [1, 5] ➞ g.c.d. = 1\\\\ndivisors of 4 ➞ [1, 2, 4] ➞ g.c.d. = 2\\\\ndivisors of 3 ➞ [1, 3] ➞ g.c.d. = 3\\\\ndivisors of 2 ➞ [1, 2] ➞ g.c.d. = 2\\\\ndivisors of 1 ➞ [1] ➞ g.c.d. = 1\\\\n\\\\n1 and 5 are coprime of 6 ➞ phi(6) = 2\\\\n```\\\\nImplement a phi function that returns the count of coprime integers of a given positive integer `n`.\\\\n\\\\n### Examples\\\\n```\\\\nphi(1) ➞ 1","thisId":"1842","channelHost":"edabit.com","id":"1842","opcode":"1","channelId":"2","timestamp":"1652648906248"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"479\\\"]}\"]","thisId":"1843","channelHost":"edabit.com","id":"1843","opcode":"1","channelId":"2","timestamp":"1652648906310"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4477","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"479\\\",\\\"result\\\":{\\\"_id\\\":\\\"D33ry6zNZzRyuQRPF\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Times {\\\\n\\\\tpublic static String hoursPassed(String t1, String t2) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.7058823529411764,\\\"familyId\\\":\\\"QeM9NibxG888hLgZf\\\",\\\"instructions\\\":\\\"Write a function that takes time `t1` and time `t2` and returns the numbers of hours passed between the two times.\\\\n\\\\n### Examples\\\\n```\\\\nhoursPassed(\\\\\\\"3:00 AM\\\\\\\", \\\\\\\"9:00 AM\\\\\\\") ➞ \\\\\\\"6 hours\\\\\\\"\\\\n\\\\nhoursPassed(\\\\\\\"2:00 PM\\\\\\\", \\\\\\\"4:00 PM\\\\\\\") ➞ \\\\\\\"2 hours\\\\\\\"\\\\n\\\\nhoursPassed(\\\\\\\"1:00 AM\\\\\\\", \\\\\\\"3:00 PM\\\\\\\") ➞ \\\\\\\"14 hours\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Time `t1` will always be the starting time and `t2`, the ending time. \\\\n- Return the string `\\\\\\\"No time has passed.\\\\\\\"` if `t1` is equal to `t2`.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals;\\\\nimport org.junit.Test;\\\\n\\\\npublic class Time","thisId":"1844","channelHost":"edabit.com","id":"1844","opcode":"1","channelId":"2","timestamp":"1652648906333"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"480\\\"]}\"]","thisId":"1845","channelHost":"edabit.com","id":"1845","opcode":"1","channelId":"2","timestamp":"1652648906409"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4598","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"480\\\",\\\"result\\\":{\\\"_id\\\":\\\"Cqemt6ySdA883Td2F\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean isStretched(String str1, String str2) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.7169811320754718,\\\"familyId\\\":\\\"dty9Bj2TqvKKcPJ7D\\\",\\\"instructions\\\":\\\"Write a function that returns `true` if the first string is the second string **stretched**, and `false` otherwise. A stretch is to repeat each character in a string the **same number of times**.\\\\n\\\\n### Examples\\\\n```\\\\nisStretched(\\\\\\\"pppaaannndddaaa\\\\\\\", \\\\\\\"panda\\\\\\\") ➞ true\\\\n\\\\nisStretched(\\\\\\\"sssshhiipp\\\\\\\", \\\\\\\"ship\\\\\\\") ➞ false\\\\n\\\\nisStretched(\\\\\\\"magnet\\\\\\\", \\\\\\\"magnet\\\\\\\") ➞ true\\\\n\\\\nisStretched(\\\\\\\"magneto\\\\\\\", \\\\\\\"magnet\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\n- Both strings must contain the same letters in order for the stretch to be valid.\\\\n- All strings will be in lower case letters.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.ass","thisId":"1846","channelHost":"edabit.com","id":"1846","opcode":"1","channelId":"2","timestamp":"1652648906426"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"481\\\"]}\"]","thisId":"1847","channelHost":"edabit.com","id":"1847","opcode":"1","channelId":"2","timestamp":"1652648906527"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4338","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"481\\\",\\\"result\\\":{\\\"_id\\\":\\\"bYP5z4ywiz2sa3TbA\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String lengthen(String str1, String str2) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.7142857142857142,\\\"familyId\\\":\\\"P2vpju32Ftqp4Tnin\\\",\\\"instructions\\\":\\\"Write a function that repeats the shorter string until it is equal to the length of the longer string.\\\\n\\\\n### Examples\\\\n```\\\\nlengthen(\\\\\\\"abcdefg\\\\\\\", \\\\\\\"ab\\\\\\\") ➞ \\\\\\\"abababa\\\\\\\"\\\\n\\\\nlengthen(\\\\\\\"ingenius\\\\\\\", \\\\\\\"forest\\\\\\\") ➞ \\\\\\\"forestfo\\\\\\\"\\\\n\\\\nlengthen(\\\\\\\"clap\\\\\\\", \\\\\\\"skipping\\\\\\\") ➞ \\\\\\\"clapclap\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Both strings will differ in length.\\\\n- Both strings will contain at least one character.\\\\n- Either of the two strings could be the shortest in length.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"abababa\\\\","thisId":"1848","channelHost":"edabit.com","id":"1848","opcode":"1","channelId":"2","timestamp":"1652648906533"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"482\\\"]}\"]","thisId":"1849","channelHost":"edabit.com","id":"1849","opcode":"1","channelId":"2","timestamp":"1652648906635"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5680","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"482\\\",\\\"result\\\":{\\\"_id\\\":\\\"4Az2B8MYAH3GbbxX6\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class NumberExpansion {\\\\n  public static String expandedForm(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.7209302325581395,\\\"familyId\\\":\\\"aWkmTrRfyQPufNfvg\\\",\\\"instructions\\\":\\\"Create a function that expands a number into a string as shown below:\\\\n\\\\n```\\\\n54 ➞ \\\\\\\"50 + 4\\\\\\\"\\\\n70701 ➞ \\\\\\\"70000 + 700 + 1\\\\\\\"\\\\n466 ➞ \\\\\\\"400 + 60 + 6\\\\\\\"\\\\n```\\\\n\\\\n### Examples\\\\n```\\\\nexpandedForm(544) ➞ \\\\\\\"500 + 40 + 4\\\\\\\"\\\\n\\\\nexpandedForm(4666) ➞ \\\\\\\"4000 + 600 + 60 + 6\\\\\\\"\\\\n\\\\nexpandedForm(70304) ➞ \\\\\\\"70000 + 300 + 4\\\\\\\"\\\\n\\\\nexpandedForm(1037903) ➞ \\\\\\\"1000000 + 30000 + 7000 + 900 + 3\\\\\\\"\\\\n\\\\nexpandedForm(802539) ➞ \\\\\\\"800000 + 2000 + 500 + 30 + 9\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"/** \\\\n======================================== \\\\nTestGen 4.0 for JUnit 4.13.0 \\\\t\\\\t\\\\nTest Case: NumberExpan","thisId":"1850","channelHost":"edabit.com","id":"1850","opcode":"1","channelId":"2","timestamp":"1652648906642"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"483\\\"]}\"]","thisId":"1851","channelHost":"edabit.com","id":"1851","opcode":"1","channelId":"2","timestamp":"1652648906741"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4395","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"483\\\",\\\"result\\\":{\\\"_id\\\":\\\"G4ZF3Ch8XyMk4p7Hp\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Times {\\\\n\\\\tpublic static String hoursPassed(String t1, String t2) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.7209302325581395,\\\"familyId\\\":\\\"92fyoGMyQiLTEafvR\\\",\\\"instructions\\\":\\\"Write a function that takes time `t1` and time `t2` and returns the number of hours passed between the two times.\\\\n\\\\n### Examples\\\\n```\\\\nhoursPassed(\\\\\\\"3:00 AM\\\\\\\", \\\\\\\"9:00 AM\\\\\\\") ➞ \\\\\\\"6 hours\\\\\\\"\\\\n\\\\nhoursPassed(\\\\\\\"2:00 PM\\\\\\\", \\\\\\\"4:00 PM\\\\\\\") ➞ \\\\\\\"2 hours\\\\\\\"\\\\n\\\\nhoursPassed(\\\\\\\"1:00 AM\\\\\\\", \\\\\\\"3:00 PM\\\\\\\") ➞ \\\\\\\"14 hours\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Time `t1` will always be the starting time and `t2`, the ending time. \\\\n- Return the string `\\\\\\\"no time passed\\\\\\\"` if `t1` is equal to `t2`.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"/** \\\\n================================= \\\\nTestGen 3.1 for JUnit 4.13.0 \\\\t\\\\t\\\\nTest Case: Times","thisId":"1852","channelHost":"edabit.com","id":"1852","opcode":"1","channelId":"2","timestamp":"1652648906746"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"484\\\"]}\"]","thisId":"1853","channelHost":"edabit.com","id":"1853","opcode":"1","channelId":"2","timestamp":"1652648906836"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4545","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"484\\\",\\\"result\\\":{\\\"_id\\\":\\\"S28QATbZGq3BjDHZZ\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Fruits {\\\\n\\\\tpublic static String fruitSalad(String[] fruits) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.7297297297297298,\\\"familyId\\\":\\\"e3HASNbS7PWP9TTZZ\\\",\\\"instructions\\\":\\\"Fruit salads are served best when the fruits are sliced and diced into small chunks!\\\\n\\\\nFor this challenge, slice each fruit **in half** and sort the chunks **alphabetically.** This recipe tastes best when the chunks are **joined together to make a string.**\\\\n\\\\n### Examples\\\\n```\\\\nfruitSalad([\\\\\\\"apple\\\\\\\", \\\\\\\"pear\\\\\\\", \\\\\\\"grapes\\\\\\\"]) ➞ \\\\\\\"apargrapepesple\\\\\\\"\\\\n// Chunks: [\\\\\\\"ap\\\\\\\", \\\\\\\"ple\\\\\\\", \\\\\\\"pe\\\\\\\", \\\\\\\"ar\\\\\\\", \\\\\\\"gra\\\\\\\", \\\\\\\"pes\\\\\\\"]\\\\n// Sorted chunks: [\\\\\\\"ap\\\\\\\", \\\\\\\"ar\\\\\\\", \\\\\\\"gra\\\\\\\", \\\\\\\"pe\\\\\\\", \\\\\\\"pes\\\\\\\", \\\\\\\"ple\\\\\\\"]\\\\n// Final string: \\\\\\\"apargrapepesple\\\\\\\"\\\\n\\\\nfruitSalad([\\\\\\\"raspberries\\\\\\\", \\\\\\\"mango\\\\\\\"]) ➞ \\\\\\\"erriesmangoraspb\\\\\\\"\\\\n\\","thisId":"1854","channelHost":"edabit.com","id":"1854","opcode":"1","channelId":"2","timestamp":"1652648906840"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"485\\\"]}\"]","thisId":"1855","channelHost":"edabit.com","id":"1855","opcode":"1","channelId":"2","timestamp":"1652648906959"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3747","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"485\\\",\\\"result\\\":{\\\"_id\\\":\\\"tLmBirspM5N35xxuC\\\",\\\"author\\\":\\\"Mateusz Mędrowski\\\",\\\"authorId\\\":\\\"hPx9H3YM8j2k94DNW\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static int GCD(int[] array) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.7073170731707317,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"ycM46huR6otvGXcSi\\\",\\\"instructions\\\":\\\"Write a function that returns the greatest common divisor of all `array` elements. If the greatest common divisor is `1`, return `1`.\\\\n\\\\n### Examples\\\\n```\\\\nGCD([10, 20, 40]) ➞ 10\\\\n\\\\nGCD([1, 2, 3, 100]) ➞ 1\\\\n\\\\nGCD([1024, 192, 2048, 512]) ➞ 64\\\\n```\\\\n\\\\n### Notes\\\\n- Array elements are always greater than `0`.\\\\n- There is a minimum of two array elements given.\\\\n- If you have any problems, check the **Resources**.\\\",\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(10, Challenge.GCD(new","thisId":"1856","channelHost":"edabit.com","id":"1856","opcode":"1","channelId":"2","timestamp":"1652648906966"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"488\\\"]}\"]","thisId":"1857","channelHost":"edabit.com","id":"1857","opcode":"1","channelId":"2","timestamp":"1652648907082"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5301","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"488\\\",\\\"result\\\":{\\\"_id\\\":\\\"x2mxt5c6Qp4Nr5qDv\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class RoundToMillions {\\\\n  public static Object[] millionsRounding(Object[] cities) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.75,\\\"familyId\\\":\\\"gSxnr8EPkyeTP2FT6\\\",\\\"instructions\\\":\\\"Given an array of cities and populations, return an array where all populations are **rounded to the nearest million**.\\\\n\\\\n### Examples\\\\n```\\\\nmillionsRounding([\\\\n  [\\\\\\\"Nice\\\\\\\", 942208],\\\\n  [\\\\\\\"Abu Dhabi\\\\\\\", 1482816],\\\\n  [\\\\\\\"Naples\\\\\\\", 2186853],\\\\n  [\\\\\\\"Vatican City\\\\\\\", 572]\\\\n]) ➞ [\\\\n  [\\\\\\\"Nice\\\\\\\", 1000000],\\\\n  [\\\\\\\"Abu Dhabi\\\\\\\", 1000000],\\\\n  [\\\\\\\"Naples\\\\\\\", 2000000],\\\\n  [\\\\\\\"Vatican City\\\\\\\", 0]\\\\n]\\\\n\\\\nmillionsRounding([\\\\n  [\\\\\\\"Manila\\\\\\\", 13923452],\\\\n  [\\\\\\\"Kuala Lumpur\\\\\\\", 7996830],\\\\n  [\\\\\\\"Jakarta\\\\\\\", 10770487]\\\\n]) ➞ [\\\\n  [\\\\\\\"Manila\\\\\\\", 14000000],\\\\n  [\\\\\\\"Kuala Lumpur\\\\\\\", 8000000],\\\\n  [\\\\\\\"Jakarta\\\\\\\", 11000000]\\\\n]\\\\n```\\\\n\\\\n### N","thisId":"1858","channelHost":"edabit.com","id":"1858","opcode":"1","channelId":"2","timestamp":"1652648907086"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"489\\\"]}\"]","thisId":"1859","channelHost":"edabit.com","id":"1859","opcode":"1","channelId":"2","timestamp":"1652648907180"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6389","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"489\\\",\\\"result\\\":{\\\"_id\\\":\\\"LyytqgmYKzCgBGbxE\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int rectangles(int step) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.7623762376237624,\\\"familyId\\\":\\\"Ju44wvoo9BvrCuJGz\\\",\\\"instructions\\\":\\\"Let there be a square matrix, where each square is a rectangle, and a combination of more squares are also rectangles. To find the number of rectangles, Pete sat down and started counting... but that's highly inefficient.\\\\n\\\\nCreate a function that takes the order of the matrix as input and returns the number of rectangles in them.\\\\n\\\\n### Examples\\\\n```\\\\nrectangles(1) ➞ 1\\\\n\\\\nrectangles(2) ➞ 9\\\\n\\\\nrectangles(3) ➞ 36\\\\n```\\\\n\\\\n### Notes\\\\n- The input will always be an integer.\\\\n- Number of rectangles are given by: `((n(n+1))/2)^2`\\\\n- Watch the video listed in the **Resources** tab to get three different formulas.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static","thisId":"1860","channelHost":"edabit.com","id":"1860","opcode":"1","channelId":"2","timestamp":"1652648907184"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"487\\\"]}\"]","thisId":"1861","channelHost":"edabit.com","id":"1861","opcode":"1","channelId":"2","timestamp":"1652648907301"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3842","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"487\\\",\\\"result\\\":{\\\"_id\\\":\\\"6RStzK9uub9vHDt53\\\",\\\"author\\\":\\\"Zoark\\\",\\\"authorId\\\":\\\"62Q2HcfLE6SGphZkT\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static String sortByLength(String str) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.7567567567567568,\\\"editorId\\\":\\\"62Q2HcfLE6SGphZkT\\\",\\\"familyId\\\":\\\"y2bkLrWkGRzp4vbcB\\\",\\\"instructions\\\":\\\"Create a function that takes a string and returns a string ordered by the length of the words. From shortest to longest word. If there are words with the same amount of letters, order them alphabetically.\\\\n\\\\n### Examples\\\\n```\\\\nsortByLength(\\\\\\\"Hello my friend\\\\\\\") ➞ \\\\\\\"my Hello friend\\\\\\\"\\\\n\\\\nsortByLength(\\\\\\\"Have a wonderful day\\\\\\\") ➞ \\\\\\\"a day Have wonderful\\\\\\\"\\\\n\\\\nsortByLenght(\\\\\\\"My son loves pineapples\\\\\\\") ➞ \\\\\\\"My son loves pineapples\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nPunctuation (periods, commas, etc) belongs to the word in front of it.\\\",\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert","thisId":"1862","channelHost":"edabit.com","id":"1862","opcode":"1","channelId":"2","timestamp":"1652648907305"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"486\\\"]}\"]","thisId":"1863","channelHost":"edabit.com","id":"1863","opcode":"1","channelId":"2","timestamp":"1652648907397"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4286","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"486\\\",\\\"result\\\":{\\\"_id\\\":\\\"22reADPqtoTzmP6nD\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Occurrences {\\\\n  public static String singleOccurrence(String s) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.7352941176470589,\\\"familyId\\\":\\\"ne2XvRgJgQNoWnmFa\\\",\\\"instructions\\\":\\\"Create a function that, given a string `str`, finds a letter that has occurred only once. Return the letter in uppercase. If the input is empty, return an empty string `\\\\\\\"\\\\\\\"`.\\\\n\\\\n### Examples\\\\n```\\\\nsingleOccurrence(\\\\\\\"TeEsShHAa\\\\\\\") ➞ \\\\\\\"T\\\\\\\"\\\\n\\\\nsingleOccurrence(\\\\\\\"LoOOvvVEEssS\\\\\\\") ➞ \\\\\\\"L\\\\\\\"\\\\n\\\\nsingleOccurrence(\\\\\\\"DeEPp\\\\\\\") ➞ \\\\\\\"D\\\\\\\"\\\\n\\\\nsingleOccurrence(\\\\\\\"EFFEAABbc\\\\\\\") ➞ \\\\\\\"C\\\\\\\"\\\\n\\\\nsingleOccurrence(\\\\\\\"AAAAVNNNNSS\\\\\\\") ➞ \\\\\\\"V\\\\\\\"\\\\n\\\\nsingleOccurrence(\\\\\\\"S\\\\\\\") ➞ \\\\\\\"S\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nThe function will be case insensitive.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertE","thisId":"1864","channelHost":"edabit.com","id":"1864","opcode":"1","channelId":"2","timestamp":"1652648907400"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"490\\\"]}\"]","thisId":"1865","channelHost":"edabit.com","id":"1865","opcode":"1","channelId":"2","timestamp":"1652648907491"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5322","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"490\\\",\\\"result\\\":{\\\"_id\\\":\\\"bfAeRfKacFSLuuXjv\\\",\\\"author\\\":\\\"Loading\\\",\\\"authorId\\\":\\\"ydos8Ba8nZdYRNJpS\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean isMagicSquare(int[][] square) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":1.7738095238095237,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"5A9PXKwturB6EJDH7\\\",\\\"instructions\\\":\\\"A \\\\\\\"magic square\\\\\\\" is a square divided into smaller squares each containing a number, such that the numbers in each vertical, horizontal, and diagonal row add up to the same value.\\\\n\\\\n![3x3 Magic Square](https://edabit-challenges.s3.amazonaws.com/3x3magicsquare.png \\\\\\\"3x3 Magic Square\\\\\\\")\\\\n\\\\nWrite a function that takes a 2D array, checks if it's a magic square and returns either `true` or `false` depending on the result.\\\\n\\\\n### Examples\\\\n```\\\\nisMagicSquare([\\\\n  [8, 1, 6],\\\\n  [3, 5, 7],\\\\n  [4, 9, 2]\\\\n]) ➞ true\\\\n\\\\nisMagicSquare([\\\\n  [16,  3,  2, 13],\\\\n  [ 5, 10, 11,  8],\\\\n  [ 9,  6,  7, 12],\\\\n  [ 4, 15, 14,  1]\\\\n]) ➞ ","thisId":"1866","channelHost":"edabit.com","id":"1866","opcode":"1","channelId":"2","timestamp":"1652648907495"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"491\\\"]}\"]","thisId":"1867","channelHost":"edabit.com","id":"1867","opcode":"1","channelId":"2","timestamp":"1652648907598"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"11942","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"491\\\",\\\"result\\\":{\\\"_id\\\":\\\"5mANMR3X6gEfWephD\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class ArrayMultiplier {\\\\n\\\\tpublic static Object[][] multiply(Object[] items) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.7797619047619047,\\\"familyId\\\":\\\"MsSq4Du8NDqXdTijK\\\",\\\"instructions\\\":\\\"Create a function that takes an array as an argument and returns a new nested array for each element in the original array. The nested array must be filled with the corresponding element (string or number) in the original array and each nested array has the same amount of elements as the original array.\\\\n\\\\n### Examples\\\\n```\\\\nmultiply([12, 13, \\\\\\\"TT\\\\\\\"]) ➞ [[12, 12, 12], [13, 13, 13], [\\\\\\\"TT\\\\\\\", \\\\\\\"TT\\\\\\\", \\\\\\\"TT\\\\\\\"]]\\\\n\\\\nmultiply([12, 17, \\\\\\\"DX\\\\\\\"]) ➞ [[12, 12, 12], [17, 17, 17], [\\\\\\\"DX\\\\\\\", \\\\\\\"DX\\\\\\\", \\\\\\\"DX\\\\\\\"]]\\\\n\\\\nmultiply([4, 5]) ➞ [[4, 4], [5, 5]]\\\\n\\\\nmultiply([\\\\\\\"T\\\\\\\", \\\\\\\"E\\\\\\\", \\\\\\\"S\\\\\\\", \\\\\\\"H\\\\\\\", \\\\\\\"A\\\\\\\"]) ➞ [[\\\\\\\"T\\\\\\\", \\\\\\\"T\\\\\\\",","thisId":"1868","channelHost":"edabit.com","id":"1868","opcode":"1","channelId":"2","timestamp":"1652648907602"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"492\\\"]}\"]","thisId":"1869","channelHost":"edabit.com","id":"1869","opcode":"1","channelId":"2","timestamp":"1652648907723"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8881","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"492\\\",\\\"result\\\":{\\\"_id\\\":\\\"FhsLkzfbEgb4TiJXA\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"import java.util.stream.Stream;\\\\nimport java.util.*;\\\\n\\\\npublic class LetterCase {\\\\n  public static Map<String, String> mapping(String[] letters) {\\\\n\\\\t\\\\t\\\\n  }\\\\n} \\\",\\\"difficulty\\\":1.7717391304347827,\\\"familyId\\\":\\\"Nx35YYBEk4o9yLbZM\\\",\\\"instructions\\\":\\\"Write a function that creates an object with each **(key, value)** pair being the **(lower case, upper case)** versions of a letter, respectively.\\\\n\\\\n### Examples\\\\n```\\\\nmapping([\\\\\\\"x\\\\\\\", \\\\\\\"a\\\\\\\", \\\\\\\"v\\\\\\\", \\\\\\\"i\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"r\\\\\\\"]) ➞ { \\\\\\\"x\\\\\\\"=\\\\\\\"X\\\\\\\", \\\\\\\"a\\\\\\\"=\\\\\\\"A\\\\\\\", \\\\\\\"v\\\\\\\"=\\\\\\\"V\\\\\\\", \\\\\\\"i\\\\\\\"=\\\\\\\"I\\\\\\\", \\\\\\\"e\\\\\\\"=\\\\\\\"E\\\\\\\", \\\\\\\"r\\\\\\\"=\\\\\\\"R\\\\\\\" }\\\\n\\\\nmapping([\\\\\\\"t\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"s\\\\\\\", \\\\\\\"h\\\\\\\", \\\\\\\"a\\\\\\\"]) ➞ { t=T, e=E, s=S, h=H, a=A }\\\\n\\\\nmapping([\\\\\\\"p\\\\\\\", \\\\\\\"s\\\\\\\"]) ➞ { \\\\\\\"p\\\\\\\"=\\\\\\\"P\\\\\\\", \\\\\\\"s\\\\\\\"=\\\\\\\"S\\\\\\\" }\\\\n\\\\nmapping([\\\\\\\"a\\\\\\\", \\\\\\\"b\\\\\\\", \\\\\\\"c\\\\\\\"]","thisId":"1870","channelHost":"edabit.com","id":"1870","opcode":"1","channelId":"2","timestamp":"1652648907726"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"493\\\"]}\"]","thisId":"1871","channelHost":"edabit.com","id":"1871","opcode":"1","channelId":"2","timestamp":"1652648907829"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6222","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"493\\\",\\\"result\\\":{\\\"_id\\\":\\\"i3T6iJNinAq6quMXo\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Reaction {\\\\n\\\\tpublic static String likeOrDislike(String[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.793103448275862,\\\"familyId\\\":\\\"4cQgCewifHKwxd2Xv\\\",\\\"instructions\\\":\\\"YouTube currently displays a like and a dislike button, allowing you to express your opinions about particular content. It's set up in such a way that you cannot like and dislike a video at the same time.\\\\n\\\\nThere are two other interesting rules to be noted about the interface:\\\\n\\\\n1. Pressing a button, which is already active, will undo your press.\\\\n2. If you press the like button after pressing the dislike button, the like button overwrites the previous \\\\\\\"dislike\\\\\\\" state. The same is true for the other way round.\\\\n\\\\nCreate a function that takes an array of button inputs and returns the final state.\\\\n\\\\n### Examples\\\\n```\\\\nlikeOrDislike([\\\\\\\"Dislike\\\\\\\"]) ➞ \\\\\\","thisId":"1872","channelHost":"edabit.com","id":"1872","opcode":"1","channelId":"2","timestamp":"1652648907833"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"494\\\"]}\"]","thisId":"1873","channelHost":"edabit.com","id":"1873","opcode":"1","channelId":"2","timestamp":"1652648907936"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"9605","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"494\\\",\\\"result\\\":{\\\"_id\\\":\\\"mMc9D6vB4iPiiAK7k\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class PronicNumber {\\\\n\\\\tpublic static boolean isHeteromecic(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.799043062200957,\\\"quality\\\":4.818181818181818,\\\"editorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"familyId\\\":\\\"QwJteh9W46uYwpsDv\\\",\\\"instructions\\\":\\\"A **pronic** number (or otherwise called as **heteromecic**) is a number which is a *product of two consecutive integers*, that is, a number of the form `n(n + 1)`. Create a function that determines whether a number is pronic or not.\\\\n\\\\n### Examples\\\\n```\\\\nisHeteromecic(0) ➞ true\\\\n// 0 * (0 + 1) = 0 * 1 = 0\\\\n\\\\nisHeteromecic(2) ➞ true\\\\n// 1 * (1 + 1) = 1 * 2 = 2\\\\n\\\\nisHeteromecic(7) ➞ false\\\\n\\\\nisHeteromecic(110) ➞ true\\\\n// 10 * (10 + 1) = 10 * 11 = 110\\\\n\\\\nisHeteromecic(136) ➞ false\\\\n\\\\nisHeteromecic(156) ➞ true\\\\n```\\\\n\\\\n### Notes\\\\nA recursive version of this challenge can be found via this  [link","thisId":"1874","channelHost":"edabit.com","id":"1874","opcode":"1","channelId":"2","timestamp":"1652648907942"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"495\\\"]}\"]","thisId":"1875","channelHost":"edabit.com","id":"1875","opcode":"1","channelId":"2","timestamp":"1652648908045"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"45642","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"495\\\",\\\"result\\\":{\\\"_id\\\":\\\"CKqfEowjmSTw2jsso\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String sevenBoom(int[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.845643153526971,\\\"familyId\\\":\\\"PTcgvCkydQsnqCJ34\\\",\\\"instructions\\\":\\\"Create a function that takes an array of numbers and return `\\\\\\\"Boom!\\\\\\\"` if the digit 7 appears in the array. Otherwise, return `\\\\\\\"there is no 7 in the array\\\\\\\"`.\\\\n\\\\n### Examples\\\\n```\\\\nsevenBoom([1, 2, 3, 4, 5, 6, 7]) ➞ \\\\\\\"Boom!\\\\\\\"\\\\n// 7 contains the number seven.\\\\n\\\\nsevenBoom([8, 6, 33, 100]) ➞ \\\\\\\"there is no 7 in the array\\\\\\\"\\\\n// None of the items contain 7 within them.\\\\n\\\\nsevenBoom([2, 55, 60, 97, 86]) ➞ \\\\\\\"Boom!\\\\\\\"\\\\n// 97 contains the number seven.\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTest {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"Boom!","thisId":"1876","channelHost":"edabit.com","id":"1876","opcode":"1","channelId":"2","timestamp":"1652648908061"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"496\\\"]}\"]","thisId":"1877","channelHost":"edabit.com","id":"1877","opcode":"1","channelId":"2","timestamp":"1652648908177"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6936","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"496\\\",\\\"result\\\":{\\\"_id\\\":\\\"DcatHxtrMfLxSWnDn\\\",\\\"author\\\":\\\"TBriggs\\\",\\\"authorId\\\":\\\"9pCPyhvQmbkWyD2LL\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static boolean isFactorial(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.9470588235294117,\\\"familyId\\\":\\\"At6sXxd9juSDZzgwZ\\\",\\\"instructions\\\":\\\"Create a function that checks if a given integer is exactly the factorial of an integer or not. `true` if it is, `false` otherwise.\\\\n\\\\n### Examples\\\\n```\\\\nisFactorial(2) ➞ true\\\\n// 2 = 2 * 1 = 2!\\\\n\\\\nisFactorial(27) ➞ false\\\\n\\\\nisFactorial(24) ➞ true\\\\n// 24 = 4 * 3 * 2 * 1 = 4!\\\\n```\\\\n\\\\n### Notes\\\\n- No error handling is necessary. Inputs are all positive integers.\\\\n- Alternatively, you can solve this with a recursive approach.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ProgramTest {\\\\n  @Test\\\\n    public void test1(){\\\\n        assertEquals(true, Program.isFactorial(2));\\\\n    }\\\\n    @Test\\\\n    pu","thisId":"1878","channelHost":"edabit.com","id":"1878","opcode":"1","channelId":"2","timestamp":"1652648908182"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"497\\\"]}\"]","thisId":"1879","channelHost":"edabit.com","id":"1879","opcode":"1","channelId":"2","timestamp":"1652648908283"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"26730","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"497\\\",\\\"result\\\":{\\\"_id\\\":\\\"Md6usCHQ7Xsj2fQi3\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean cons(int[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.96,\\\"familyId\\\":\\\"MEG3LN8NSfKmZ2Nfo\\\",\\\"instructions\\\":\\\"Create a function that determines whether elements in an array can be re-arranged to form a consecutive list of numbers where **each number appears exactly once**.\\\\n\\\\n### Examples\\\\n```\\\\ncons([5, 1, 4, 3, 2]) ➞ true\\\\n// Can be re-arranged to form [1, 2, 3, 4, 5]\\\\n\\\\ncons([5, 1, 4, 3, 2, 8]) ➞ false\\\\n\\\\ncons([5, 6, 7, 8, 9, 9]) ➞ false\\\\n// 9 appears twice\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals;\\\\nimport org.junit.Test;\\\\n\\\\n/**\\\\n * @author edwardclark\\\\n**/\\\\n\\\\npublic class ChallengeTest {\\\\n\\\\t@Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertEquals(true, Challenge.cons(new int[]{5, 1, 4, 3, 2}));\\\\n\\\\t}\\\\n\\\\n\\\\t@Test\\\\n\\\\tpublic void test2() {\\\\","thisId":"1880","channelHost":"edabit.com","id":"1880","opcode":"1","channelId":"2","timestamp":"1652648908289"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"498\\\"]}\"]","thisId":"1881","channelHost":"edabit.com","id":"1881","opcode":"1","channelId":"2","timestamp":"1652648908382"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"13493","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"498\\\",\\\"result\\\":{\\\"_id\\\":\\\"qSJ5hZfG52Nf2hXWS\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Stretches {\\\\n\\\\tpublic static int largestGap(int[] numbers) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":1.9725274725274726,\\\"familyId\\\":\\\"qGvqiarf7YGZnTkRn\\\",\\\"instructions\\\":\\\"Given an array of integers, return the **largest gap** between the **sorted elements** of the array.\\\\n\\\\nFor example, consider the array:\\\\n```\\\\n[9, 4, 26, 26, 0, 0, 5, 20, 6, 25, 5]\\\\n```\\\\n... in which, after sorting, the array becomes:\\\\n\\\\n```\\\\n[0, 0, 4, 5, 5, 6, 9, 20, 25, 26, 26]\\\\n```\\\\n... so that we now see that the largest gap in the array is between 9 and 20 which is `11`.\\\\n\\\\n\\\\n### Examples\\\\n```\\\\nlargestGap([9, 4, 26, 26, 0, 0, 5, 20, 6, 25, 5]) ➞ 11\\\\n// After sorting: [0, 0, 4, 5, 5, 6, 9, 20, 25, 26, 26]\\\\n// Largest gap between 9 and 20 is 11\\\\n\\\\nlargestGap([14, 13, 7, 1, 4, 12, 3, 7, 7, 12, 11, 5, 7]) ➞ 4\\\\n// After sorting: [1, 3, 4, 5, 7, 7, 7, 7, 11","thisId":"1882","channelHost":"edabit.com","id":"1882","opcode":"1","channelId":"2","timestamp":"1652648908387"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"499\\\"]}\"]","thisId":"1883","channelHost":"edabit.com","id":"1883","opcode":"1","channelId":"2","timestamp":"1652648908493"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5636","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"499\\\",\\\"result\\\":{\\\"_id\\\":\\\"v96NThCRg5M5MLGfq\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class CaveMinerals {\\\\n\\\\tpublic static String mineralFormation(int[][] form) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.0217391304347827,\\\"quality\\\":0,\\\"familyId\\\":\\\"ksio8nY8zBaDsprtc\\\",\\\"instructions\\\":\\\"**Stalactites** hang from the ceiling of a cave while **stalagmites** grow from the floor.\\\\n\\\\nCreate a function that determines whether the input represents `\\\\\\\"stalactites\\\\\\\"` or `\\\\\\\"stalagmites\\\\\\\"`. If it represents both, return `\\\\\\\"both\\\\\\\"`. Input will be a 2D array, with `1` representing a piece of rock, and `0` representing air space.\\\\n\\\\n### Examples\\\\n```\\\\nmineralFormation([\\\\n  [0, 1, 0, 1],\\\\n  [0, 1, 0, 1],\\\\n  [0, 0, 0, 1],\\\\n  [0, 0, 0, 0]\\\\n]) ➞ \\\\\\\"stalactites\\\\\\\"\\\\n\\\\nmineralFormation([\\\\n  [0, 0, 0, 0],\\\\n  [0, 1, 0, 1],\\\\n  [0, 1, 1, 1],\\\\n  [0, 1, 1, 1]\\\\n]) ➞ \\\\\\\"stalagmites\\\\\\\"\\\\n\\\\nmineralFormation([\\\\n  [1, 0, 1, 0],\\\\n ","thisId":"1884","channelHost":"edabit.com","id":"1884","opcode":"1","channelId":"2","timestamp":"1652648908497"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"500\\\"]}\"]","thisId":"1885","channelHost":"edabit.com","id":"1885","opcode":"1","channelId":"2","timestamp":"1652648908589"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3948","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"500\\\",\\\"result\\\":{\\\"_id\\\":\\\"7r3uQADjtXEk7qirj\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class CurrencyFormat {\\\\n\\\\tpublic static String dolladollaBills(double money) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.0294117647058822,\\\"familyId\\\":\\\"hJhounx6TAeDgpYFQ\\\",\\\"instructions\\\":\\\"Given a number, return a string which is formatted into **US Dollars and cents!**\\\\n\\\\nRemember that:\\\\n- You should round to two digits after the decimal point (even for integers).\\\\n- Thousandths should be separated by commas.\\\\n\\\\n### Examples\\\\n```\\\\ndolladollaBills(10) ➞ \\\\\\\"$10.00\\\\\\\"\\\\n\\\\ndolladollaBills(1000000) ➞ \\\\\\\"$1,000,000.00\\\\\\\"\\\\n\\\\ndolladollaBills(-314159.2653) ➞ \\\\\\\"-$314,159.27\\\\\\\"\\\\n\\\\ndolladollaBills(-56.99) ➞ \\\\\\\"-$56.99\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nThere will be both negative and positive inputs.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals;\\\\nimport org.junit.Test;\\\\n\\\\npublic ","thisId":"1886","channelHost":"edabit.com","id":"1886","opcode":"1","channelId":"2","timestamp":"1652648908593"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"501\\\"]}\"]","thisId":"1887","channelHost":"edabit.com","id":"1887","opcode":"1","channelId":"2","timestamp":"1652648908686"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5120","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"501\\\",\\\"result\\\":{\\\"_id\\\":\\\"XxS3L2wDEKhi9Hw6W\\\",\\\"author\\\":\\\"Factor\\\",\\\"authorId\\\":\\\"Kk3jdrvAbPENkw5Ft\\\",\\\"code\\\":\\\"public class Program\\\\n{\\\\n  public static String removeWord(final String sentence, final String word) \\\\n\\\\t{\\\\n\\\\t\\\\treturn new String();\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.0531914893617023,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"eeK9xNQPeB4hCmQWF\\\",\\\"instructions\\\":\\\"Implement a method `removeWord()` that takes two string parameters:\\\\n- `sentence` - the sentence you are to remove a word from.\\\\n- `word` - the word you are to remove from the sentence.\\\\n\\\\nYour method should take a string, `sentence` and remove `word` from it. It will return a new string without `word` in the sentence.\\\\n\\\\n### Examples\\\\n```\\\\nremoveWord(\\\\\\\"One two three four\\\\\\\", \\\\\\\"two\\\\\\\") ➞ \\\\\\\"One three four\\\\\\\"\\\\n\\\\nremoveWord(\\\\\\\"Bob has a kid\\\\\\\", \\\\\\\"kid\\\\\\\") ➞ \\\\\\\"Bob has a\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nUse the **Resources** section if you need help.\\\",\\\"isFree\\\":false,\\\"isHidden\\","thisId":"1888","channelHost":"edabit.com","id":"1888","opcode":"1","channelId":"2","timestamp":"1652648908689"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"504\\\"]}\"]","thisId":"1889","channelHost":"edabit.com","id":"1889","opcode":"1","channelId":"2","timestamp":"1652648908786"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"20874","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"504\\\",\\\"result\\\":{\\\"_id\\\":\\\"z8vvSdWjAPu5ufBuR\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int primeNumbers(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.046280991735537,\\\"familyId\\\":\\\"kE7HQ9DxQiS3eHyf6\\\",\\\"instructions\\\":\\\"Create a function that finds how many prime numbers there are, up to the given integer.\\\\n\\\\n### Examples\\\\n```\\\\nprimeNumbers(10) ➞ 4\\\\n// 2, 3, 5 and 7\\\\n\\\\nprimeNumbers(20) ➞ 8\\\\n// 2, 3, 5, 7, 11, 13, 17 and 19\\\\n\\\\nprimeNumbers(30) ➞ 10\\\\n// 2, 3, 5, 7, 11, 13, 17, 19, 23 and 29\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(8, Challenge.primeNumbers(20));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(10, Challenge.primeNumbers(30));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test3() {\\\\n    assertEquals(25, Chal","thisId":"1890","channelHost":"edabit.com","id":"1890","opcode":"1","channelId":"2","timestamp":"1652648908791"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"505\\\"]}\"]","thisId":"1891","channelHost":"edabit.com","id":"1891","opcode":"1","channelId":"2","timestamp":"1652648908939"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4366","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"505\\\",\\\"result\\\":{\\\"_id\\\":\\\"KgR2JhEuGD7onbMLx\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Root {\\\\n\\\\tpublic static int digitRoot(long n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.0483870967741935,\\\"familyId\\\":\\\"NJ23htSdvKGC5jvTv\\\",\\\"instructions\\\":\\\"Create a function that takes a number and returns one digit that is the result of summing all the digits of the input number. When the sum of the digits consists of more than one digit, repeat summing until you get one digit.\\\\n\\\\n### Examples\\\\n```\\\\ndigitRoot(123) ➞ 6\\\\n// 1 + 2 + 3 = 6\\\\n\\\\ndigitRoot(999888777L) ➞ 9\\\\n\\\\ndigitRoot(1238763636555555555L) ➞ 9\\\\n```\\\\n\\\\n### Notes\\\\nRecursion is allowed.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals;\\\\nimport org.junit.Test;\\\\n\\\\npublic class RootTests {\\\\n\\\\tprivate long[] numVector = new long[] { \\\\n\\\\t\\\\t999888777, 1799877799877998777L, 9876546839792379L,\\\\n\\\\t\\\\t123876363","thisId":"1892","channelHost":"edabit.com","id":"1892","opcode":"1","channelId":"2","timestamp":"1652648908944"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"503\\\"]}\"]","thisId":"1893","channelHost":"edabit.com","id":"1893","opcode":"1","channelId":"2","timestamp":"1652648909029"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7578","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"503\\\",\\\"result\\\":{\\\"_id\\\":\\\"sCP58J9vcexchgwo7\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class PersonalIdNumber {\\\\n  public static boolean validate(String pin) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.0285714285714285,\\\"familyId\\\":\\\"5YLfKCfbn5rJMNpe3\\\",\\\"instructions\\\":\\\"Create a function that will test if a string is a valid PIN or not via a regular expression.\\\\n\\\\nA valid PIN has:\\\\n- Exactly 4 or 6 characters.\\\\n- Only numeric characters (0-9).\\\\n- No whitespace.\\\\n\\\\n### Examples\\\\n```\\\\nvalidate(\\\\\\\"121317\\\\\\\") ➞ true\\\\n\\\\nvalidate(\\\\\\\"1234\\\\\\\") ➞ true\\\\n\\\\nvalidate(\\\\\\\"45135\\\\\\\") ➞ false\\\\n\\\\nvalidate(\\\\\\\"89abc1\\\\\\\") ➞ false\\\\n\\\\nvalidate(\\\\\\\"900876\\\\\\\") ➞ true\\\\n\\\\nvalidate(\\\\\\\" 4983\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\n- Empty strings should return `false` when tested.\\\\n- If you need help, look into the **Resources** tab.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEqual","thisId":"1894","channelHost":"edabit.com","id":"1894","opcode":"1","channelId":"2","timestamp":"1652648909034"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"502\\\"]}\"]","thisId":"1895","channelHost":"edabit.com","id":"1895","opcode":"1","channelId":"2","timestamp":"1652648909121"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5727","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"502\\\",\\\"result\\\":{\\\"_id\\\":\\\"Nwq8yK3Eq2DqbxDsL\\\",\\\"author\\\":\\\"bangyen\\\",\\\"authorId\\\":\\\"yv7c4H2jimSKHEjtG\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static Object[][] peelLayer(Object[][] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.074074074074074,\\\"quality\\\":0,\\\"familyId\\\":\\\"ygoHWv9MSAg7mQ35i\\\",\\\"instructions\\\":\\\"Given an array of object arrays, return a new array of object arrays containing every element, **except for the outer elements**.\\\\n\\\\n### Examples\\\\n```\\\\npeelLayer([\\\\n  ['a', 'b', 'c', 'd'],\\\\n  ['e', 'f', 'g', 'h'],\\\\n  ['i', 'j', 'k', 'l'],\\\\n  ['m', 'n', 'o', 'p']\\\\n]) ➞ [\\\\n  ['f', 'g'],\\\\n  ['j', 'k']\\\\n]\\\\n\\\\npeelLayer([\\\\n  [1, 2, 3, 4, 5],\\\\n  [6, 7, 8, 9, 10],\\\\n  [11, 12, 13, 14, 15],\\\\n  [16, 17, 18, 19, 20],\\\\n  [21, 22, 23, 24, 25],\\\\n  [26, 27, 28, 29, 30],\\\\n  [31, 32, 33, 34, 35]\\\\n]) ➞ [\\\\n  [7, 8, 9],\\\\n  [12, 13, 14],\\\\n  [17, 18, 19],\\\\n  [22, 23, 24],\\\\n  [27, 28, 29]\\\\n]\\\\n\\\\npeelLayer([\\\\n  [true, false, true],\\\\n  [false, false, true],\\","thisId":"1896","channelHost":"edabit.com","id":"1896","opcode":"1","channelId":"2","timestamp":"1652648909126"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"506\\\"]}\"]","thisId":"1897","channelHost":"edabit.com","id":"1897","opcode":"1","channelId":"2","timestamp":"1652648909218"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8254","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"506\\\",\\\"result\\\":{\\\"_id\\\":\\\"GjCgCugvh4eorPmgM\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class DisariumNumber {\\\\n\\\\tpublic static boolean isDisarium(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.0860927152317883,\\\"quality\\\":4.5588235294117645,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"MRNBwrWbMRtrtuQB6\\\",\\\"instructions\\\":\\\"A number is said to be Disarium if the **sum** of its *digits raised to their respective positions* is the number itself.\\\\n\\\\nCreate a function that determines whether a number is a Disarium or not.\\\\n\\\\n### Examples\\\\n```\\\\nisDisarium(75) ➞ false\\\\n// 7^1 + 5^2 = 7 + 25 = 32\\\\n\\\\nisDisarium(135) ➞ true\\\\n// 1^1 + 3^2 + 5^3 = 1 + 9 + 125 = 135\\\\n\\\\nisDisarium(544) ➞ false\\\\n\\\\nisDisarium(518) ➞ true\\\\n\\\\nisDisarium(8) ➞ true\\\\n\\\\nisDisarium(466) ➞ false\\\\n```\\\\n\\\\n### Notes\\\\n- Position of the digit is 1-indexed.\\\\n- A recursive version of this challenge can be found via this [link](https://edabit.com/challeng","thisId":"1898","channelHost":"edabit.com","id":"1898","opcode":"1","channelId":"2","timestamp":"1652648909222"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"507\\\"]}\"]","thisId":"1899","channelHost":"edabit.com","id":"1899","opcode":"1","channelId":"2","timestamp":"1652648909336"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"13994","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"507\\\",\\\"result\\\":{\\\"_id\\\":\\\"8NZaLdJBkhZCgNBc7\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String textToNum(String phone) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.0517711171662127,\\\"familyId\\\":\\\"Zd5Bz2kqPMyDsDvkJ\\\",\\\"instructions\\\":\\\"Create a program that converts a phone number with letters to one with only numbers.\\\\n\\\\nNumber | Letter\\\\n--- | ---\\\\n0 | none\\\\n1 | none\\\\n2 | ABC\\\\n3 | DEF\\\\n4 | GHI\\\\n5 | JKL\\\\n6 | MNO\\\\n7 | PQRS\\\\n8 | TUV\\\\n9 | WXYZ\\\\n\\\\n### Examples\\\\n```\\\\ntextToNum(\\\\\\\"123-647-EYES\\\\\\\") ➞ \\\\\\\"123-647-3937\\\\\\\"\\\\n\\\\ntextToNum(\\\\\\\"(325)444-TEST\\\\\\\") ➞ \\\\\\\"(325)444-8378\\\\\\\"\\\\n\\\\ntextToNum(\\\\\\\"653-TRY-THIS\\\\\\\") ➞ \\\\\\\"653-879-8447\\\\\\\"\\\\n\\\\ntextToNum(\\\\\\\"435-224-7613\\\\\\\") ➞ \\\\\\\"435-224-7613\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- All inputs will be formatted as a string representing a proper phone number in the format `XXX-XXX-XXXX` or `(XXX)XXX-XXXX`, using numbers and capital letters.\\\\n- Check the **Resou","thisId":"1900","channelHost":"edabit.com","id":"1900","opcode":"1","channelId":"2","timestamp":"1652648909339"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"508\\\"]}\"]","thisId":"1901","channelHost":"edabit.com","id":"1901","opcode":"1","channelId":"2","timestamp":"1652648909448"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5914","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"508\\\",\\\"result\\\":{\\\"_id\\\":\\\"jbQDEAk7viqz2x4AX\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class NumbersTrio {\\\\n  public static boolean luckySeven(int[] r) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.025,\\\"familyId\\\":\\\"CjGsTaAXHhWCDR4oX\\\",\\\"instructions\\\":\\\"Given an array of numbers, return whether it is possible to make the number **7** by adding any *three different numbers* together.\\\\n\\\\n### Examples\\\\n```\\\\nluckySeven([2, 4, 3, 8, 9, 1]) ➞ true\\\\n\\\\nluckySeven([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) ➞ true\\\\n\\\\nluckySeven([0, 0, 0, 2, 3]) ➞ false\\\\n// You cannot repeat the same number to make 2 + 2 + 3 = 7\\\\n\\\\nluckySeven([4,, 3]) ➞ false\\\\n// You need three different numbers.\\\\n```\\\\n\\\\n### Notes\\\\n- Tests will only include numbers.\\\\n- Trivially, any array with a length of less than two automatically fails the test.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals; \\\\nimport org.jun","thisId":"1902","channelHost":"edabit.com","id":"1902","opcode":"1","channelId":"2","timestamp":"1652648909452"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"509\\\"]}\"]","thisId":"1903","channelHost":"edabit.com","id":"1903","opcode":"1","channelId":"2","timestamp":"1652648909542"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5880","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"509\\\",\\\"result\\\":{\\\"_id\\\":\\\"4JjCN4RksJs763EGg\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean happy(int num) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.056179775280899,\\\"familyId\\\":\\\"ucCfacTzhJuttvtNA\\\",\\\"instructions\\\":\\\"Given any number, we can create a new number by **adding the sums of squares of digits of that number**. For example, given `203`, our new number is `4 + 0 + 9 = 13`. If we repeat this process, we get a sequence of numbers:\\\\n\\\\n```\\\\n203 -> 13 -> 10 -> 1 -> 1\\\\n```\\\\n\\\\nSometimes, like with `203`, the sequence reaches (and stays at) `1`. Numbers like this are called **happy**.\\\\n\\\\nNot all numbers are happy. If we started with `11`, the sequence would be:\\\\n\\\\n```\\\\n11 -> 2 -> 4 -> 16 -> ...\\\\n```\\\\n\\\\nThis sequence will never reach `1`, and so the number `11` is called **unhappy**.\\\\n\\\\nGiven a positive whole number, you have to determine whether that number is happy or unhappy.\\\\n\\\\n### Exa","thisId":"1904","channelHost":"edabit.com","id":"1904","opcode":"1","channelId":"2","timestamp":"1652648909546"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"510\\\"]}\"]","thisId":"1905","channelHost":"edabit.com","id":"1905","opcode":"1","channelId":"2","timestamp":"1652648909645"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6633","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"510\\\",\\\"result\\\":{\\\"_id\\\":\\\"EjQM5woRAhYEmuGFp\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean canPartition(int[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.058139534883721,\\\"familyId\\\":\\\"Xspw3uxQ9zjYCwfwg\\\",\\\"instructions\\\":\\\"Write a function that returns `true` if you can partition an array into **one element and the rest**, such that this element is equal to the **product** of all other elements **excluding itself**.\\\\n\\\\n### Examples\\\\n```\\\\ncanPartition([2, 8, 4, 1]) ➞ true\\\\n// 8 = 2 x 4 x 1\\\\n\\\\ncanPartition([-1, -10, 1, -2, 20]) ➞ false\\\\n\\\\ncanPartition([-1, -20, 5, -1, -2, 2]) ➞ true\\\\n```\\\\n\\\\n### Notes\\\\n- The array may contain duplicates.\\\\n- Multiple solutions can exist, any solution is sufficient to return `true`.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTest {\\\\n\\\\t@Test\\\\n\\\\t","thisId":"1906","channelHost":"edabit.com","id":"1906","opcode":"1","channelId":"2","timestamp":"1652648909649"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"511\\\"]}\"]","thisId":"1907","channelHost":"edabit.com","id":"1907","opcode":"1","channelId":"2","timestamp":"1652648909762"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8180","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"511\\\",\\\"result\\\":{\\\"_id\\\":\\\"zi3zKpBLYHqtmSf5m\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Dominance {\\\\n  public static boolean isPositiveDominant(int[] n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.0625,\\\"familyId\\\":\\\"TS4PNSRZqqmyrS7AG\\\",\\\"instructions\\\":\\\"An array is **positive dominant** if it contains **strictly more** **unique** positive values than **unique** negative values. Write a function that returns `true` if an array is **positive dominant**, `false`, otherwise.\\\\n\\\\n### Examples\\\\n```\\\\nisPositiveDominant([1, 1, 1, 1, -3, -4]) ➞ false\\\\n// There is only 1 unique positive value (1).\\\\n// There are 2 unique negative values (-3, -4).\\\\n\\\\nisPositiveDominant([5, 99, 832, -3, -4]) ➞ true\\\\n\\\\nisPositiveDominant([5, 0]) ➞ true\\\\n\\\\nisPositiveDominant([0, -4, -1]) ➞ false\\\\n```\\\\n\\\\n### Notes\\\\n`0` counts as neither a positive nor a negative value.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static o","thisId":"1908","channelHost":"edabit.com","id":"1908","opcode":"1","channelId":"2","timestamp":"1652648909765"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"512\\\"]}\"]","thisId":"1909","channelHost":"edabit.com","id":"1909","opcode":"1","channelId":"2","timestamp":"1652648909866"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"10086","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"512\\\",\\\"result\\\":{\\\"_id\\\":\\\"p5kyThBZDR7oJhjR7\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String reverseOdd(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.0632911392405062,\\\"familyId\\\":\\\"RCT3Tw9NiS34d3ZXG\\\",\\\"instructions\\\":\\\"Given a string, reverse all the words which have odd length. The even length words are not changed.\\\\n\\\\n### Examples\\\\n```\\\\nreverseOdd(\\\\\\\"Bananas\\\\\\\") ➞ \\\\\\\"sananaB\\\\\\\"\\\\n\\\\nreverseOdd(\\\\\\\"One two three four\\\\\\\") ➞ \\\\\\\"enO owt eerht four\\\\\\\"\\\\n\\\\nreverseOdd(\\\\\\\"Make sure uoy only esrever sdrow of ddo length\\\\\\\")\\\\n➞ \\\\\\\"Make sure you only reverse words of odd length\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nThere is exactly one space between each word and no punctuation is used.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"enO owt eerht four\\\\\\\", Challenge.reverseOdd","thisId":"1910","channelHost":"edabit.com","id":"1910","opcode":"1","channelId":"2","timestamp":"1652648909869"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"513\\\"]}\"]","thisId":"1911","channelHost":"edabit.com","id":"1911","opcode":"1","channelId":"2","timestamp":"1652648909970"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"9778","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"513\\\",\\\"result\\\":{\\\"_id\\\":\\\"XRAGxXj4KtakkvD3F\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String unmix(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.0677966101694913,\\\"familyId\\\":\\\"mtnMTuMW3zpMBNeNj\\\",\\\"instructions\\\":\\\"_lPaeesh le pemu mnxit ehess rtnisg!_ Oh, sorry, that was supposed to say: _Please help me unmix these strings!_\\\\n\\\\nSomehow my strings have all become mixed up; every pair of characters has been swapped. Help me undo this so I can understand my strings again.\\\\n\\\\n### Examples\\\\n```\\\\nunmix(\\\\\\\"123456\\\\\\\") ➞ \\\\\\\"214365\\\\\\\"\\\\n\\\\nunmix(\\\\\\\"hTsii  s aimex dpus rtni.g\\\\\\\") ➞ \\\\\\\"This is a mixed up string.\\\\\\\"\\\\n\\\\nunmix(\\\\\\\"badce\\\\\\\") ➞ \\\\\\\"abcde\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nThe length of a string can be odd — in this case the last character is not altered (as there's nothing to swap it with).\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ","thisId":"1912","channelHost":"edabit.com","id":"1912","opcode":"1","channelId":"2","timestamp":"1652648909976"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"514\\\"]}\"]","thisId":"1913","channelHost":"edabit.com","id":"1913","opcode":"1","channelId":"2","timestamp":"1652648910069"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4955","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"514\\\",\\\"result\\\":{\\\"_id\\\":\\\"yX9Jd6s9eF75ZK43K\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class JaggedArray {\\\\n\\\\tpublic static Object[] sortIt(Object[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.0714285714285716,\\\"familyId\\\":\\\"tSkM7gieb5p3NcNyW\\\",\\\"instructions\\\":\\\"For this challenge, you will be given an array as the following:\\\\n\\\\n```\\\\n[[3], 4, [2], [5], 1, 6]\\\\n```\\\\n\\\\nBy definition, the array has elements that's _either an integer or an array containing an integer_. We can clearly see that this array can reasonably be sorted according to \\\\\\\"**the content of the elements**\\\\\\\" as:\\\\n\\\\n```\\\\n[1, [2],  [3], 4, [5], 6]\\\\n```\\\\n\\\\nCreate a function that, given an array similar to the above, sorts the array according to the \\\\\\\"content of the elements\\\\\\\".\\\\n\\\\n### Examples\\\\n```\\\\nsortIt([4, 1, 3]) ➞ [1, 3, 4]\\\\n\\\\nsortIt([[4], [1], [3]]) ➞ [[1], [3], [4]]\\\\n\\\\nsortIt([4, [1], 3]) ➞ [[1], 3, 4]\\\\n\\\\nsortIt([[4], 1, [3]]) ➞ [1, [3],","thisId":"1914","channelHost":"edabit.com","id":"1914","opcode":"1","channelId":"2","timestamp":"1652648910074"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"515\\\"]}\"]","thisId":"1915","channelHost":"edabit.com","id":"1915","opcode":"1","channelId":"2","timestamp":"1652648910191"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6357","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"515\\\",\\\"result\\\":{\\\"_id\\\":\\\"EiTYFd9jwghDz3aoG\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int[] reorderDigits(int[] arr, String orderBy) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.051546391752577,\\\"familyId\\\":\\\"JF4PE4KGH2fPLio2w\\\",\\\"instructions\\\":\\\"Create a function that reorders the digits of each numerical element in an array based on ascending (`asc`) or descending (`desc`) order.\\\\n\\\\n### Examples\\\\n```\\\\nreorderDigits([515, 341, 98, 44, 211], \\\\\\\"asc\\\\\\\") ➞ [155, 134, 89, 44, 112]\\\\n\\\\nreorderDigits([515, 341, 98, 44, 211], \\\\\\\"desc\\\\\\\") ➞ [551, 431, 98, 44, 211]\\\\n\\\\nreorderDigits([63251, 78221], \\\\\\\"asc\\\\\\\") ➞ [12356, 12278]\\\\n\\\\nreorderDigits([63251, 78221], \\\\\\\"desc\\\\\\\") ➞ [65321, 87221]\\\\n\\\\nreorderDigits([1, 2, 3, 4], \\\\\\\"asc\\\\\\\")  ➞ [1, 2, 3, 4]\\\\n\\\\nreorderDigits([1, 2, 3, 4], \\\\\\\"desc\\\\\\\") ➞ [1, 2, 3, 4]\\\\n```\\\\n\\\\n### Notes\\\\n- Single-digit numbers should be ordered the same regardless of ","thisId":"1916","channelHost":"edabit.com","id":"1916","opcode":"1","channelId":"2","timestamp":"1652648910195"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"516\\\"]}\"]","thisId":"1917","channelHost":"edabit.com","id":"1917","opcode":"1","channelId":"2","timestamp":"1652648910298"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"15607","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"516\\\",\\\"result\\\":{\\\"_id\\\":\\\"E9AHcnWg7fDfardLF\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean almostPalindrome(String str) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.0748129675810474,\\\"familyId\\\":\\\"4izvXQcJSuzwabryu\\\",\\\"instructions\\\":\\\"A string is an **almost-palindrome** if, by changing **only one character**, you can make it a palindrome. Create a function that returns `true` if a string is an **almost-palindrome** and `false` otherwise.\\\\n\\\\n### Examples\\\\n```\\\\nalmostPalindrome(\\\\\\\"abcdcbg\\\\\\\") ➞ true\\\\n// Transformed to \\\\\\\"abcdcba\\\\\\\" by changing \\\\\\\"g\\\\\\\" to \\\\\\\"a\\\\\\\".\\\\n\\\\nalmostPalindrome(\\\\\\\"abccia\\\\\\\") ➞ true\\\\n// Transformed to \\\\\\\"abccba\\\\\\\" by changing \\\\\\\"i\\\\\\\" to \\\\\\\"b\\\\\\\".\\\\n\\\\nalmostPalindrome(\\\\\\\"abcdaaa\\\\\\\") ➞ false\\\\n// Can't be transformed to a palindrome in exactly 1 turn.\\\\n\\\\nalmostPalindrome(\\\\\\\"1234312\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nReturn `false` if the string is already a pali","thisId":"1918","channelHost":"edabit.com","id":"1918","opcode":"1","channelId":"2","timestamp":"1652648910303"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"517\\\"]}\"]","thisId":"1919","channelHost":"edabit.com","id":"1919","opcode":"1","channelId":"2","timestamp":"1652648910401"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7386","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"517\\\",\\\"result\\\":{\\\"_id\\\":\\\"hYq8J8HJM3pwCFKiZ\\\",\\\"author\\\":\\\"bangyen\\\",\\\"authorId\\\":\\\"yv7c4H2jimSKHEjtG\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static boolean alternateSign(int[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.075,\\\"quality\\\":4.590909090909091,\\\"familyId\\\":\\\"6264vW8SQG5XFFXEm\\\",\\\"instructions\\\":\\\"Create a function which validates whether a given array **alternates** between *positive* and *negative* numbers.\\\\n\\\\n### Examples\\\\n```\\\\nalternateSign([3, -2, 5, -5, 2, -8]) ➞ true\\\\n\\\\nalternateSign([-6, 1, -1, 4, -3]) ➞ true\\\\n\\\\nalternateSign([4, 4, -2, 3, -6, 10]) ➞ false\\\\n```\\\\n\\\\n### Notes\\\\n - Lists can be of any length.\\\\n - It doesn't matter if an array begins/ends with a positive or negative, as long as it alternates.\\\\n- If a list contains 0, return `false` (as it is neither positive nor negative).\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ProgramTest {\\\\n\\\\t@Test\\\\n\\\\tpub","thisId":"1920","channelHost":"edabit.com","id":"1920","opcode":"1","channelId":"2","timestamp":"1652648910406"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"518\\\"]}\"]","thisId":"1921","channelHost":"edabit.com","id":"1921","opcode":"1","channelId":"2","timestamp":"1652648910522"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6501","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"518\\\",\\\"result\\\":{\\\"_id\\\":\\\"gBNu2G5Lk5iv22pye\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String convert(String deg) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.075268817204301,\\\"familyId\\\":\\\"YBQ5GieCskD67uSoK\\\",\\\"instructions\\\":\\\"Create a function that converts Celsius to Fahrenheit and vice versa.\\\\n\\\\n### Examples\\\\n```\\\\nconvert(\\\\\\\"35*C\\\\\\\") ➞ \\\\\\\"95*F\\\\\\\"\\\\n\\\\nconvert(\\\\\\\"19*F\\\\\\\") ➞ \\\\\\\"-7*C\\\\\\\"\\\\n\\\\nconvert(\\\\\\\"33\\\\\\\") ➞ \\\\\\\"Error\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Round to the nearest integer.\\\\n- If the input is incorrect, return `\\\\\\\"Error\\\\\\\"`.\\\\n- For the formulae to convert back and forth, check the **Resources** tab.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"95*F\\\\\\\", Challenge.convert(\\\\\\\"35*C\\\\\\\"));\\\\n  }\\\\n\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(\\\\\\\"64*F","thisId":"1922","channelHost":"edabit.com","id":"1922","opcode":"1","channelId":"2","timestamp":"1652648910527"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"521\\\"]}\"]","thisId":"1923","channelHost":"edabit.com","id":"1923","opcode":"1","channelId":"2","timestamp":"1652648910660"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5682","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"521\\\",\\\"result\\\":{\\\"_id\\\":\\\"sjsHWXs7fNStCdrNr\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class HarshadNumber {\\\\n\\\\tpublic static boolean isHarshad(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.076923076923077,\\\"quality\\\":4.666666666666667,\\\"editorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"familyId\\\":\\\"pzeJeTZv7aaa6yEiZ\\\",\\\"instructions\\\":\\\"A number is said to be **Harshad** if it's *exactly divisible* by the **sum** of its digits. Create a function that determines whether a number is a Harshad or not.\\\\n\\\\n### Examples\\\\n```\\\\nisHarshad(75) ➞ false\\\\n// 7 + 5 = 12\\\\n// 75 is not exactly divisible by 12\\\\n \\\\nisHarshad(171) ➞ true\\\\n// 1 + 7 + 1 = 9\\\\n// 9 exactly divides 171\\\\n \\\\nisHarshad(481) ➞ true\\\\n\\\\nisHarshad(89) ➞ false\\\\n\\\\nisHarshad(516) ➞ true\\\\n\\\\nisHarshad(200) ➞ true\\\\n```\\\\n\\\\n### Notes\\\\n- You are expected to solve this challenge via **recursion**.\\\\n- You can check on the **Resources** tab for more details about *recursion* in Java.","thisId":"1924","channelHost":"edabit.com","id":"1924","opcode":"1","channelId":"2","timestamp":"1652648910665"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"520\\\"]}\"]","thisId":"1925","channelHost":"edabit.com","id":"1925","opcode":"1","channelId":"2","timestamp":"1652648910772"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4658","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"520\\\",\\\"result\\\":{\\\"_id\\\":\\\"v9YKCBnGLJh8ZobKj\\\",\\\"author\\\":\\\"MrDrProfessor\\\",\\\"authorId\\\":\\\"Yohr2MmAyaWGMbB35\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String printGrid(int rows, int cols) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.076923076923077,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"jCypKbqSkaKTCjiG8\\\",\\\"instructions\\\":\\\"Write a method that accepts two integer parameters rows and cols. The output is a comma-separated grid of numbers displayed in column-major order, meaning the numbers shown increase sequentially down each column and wrap to the top of the next column to the right once the bottom of the current column is reached.\\\\n\\\\n### Examples\\\\n```\\\\nprintGrid(3, 6) ➞ \\\\\\\"\\\\n  1, 4, 7, 10, 13, 16\\\\n  2, 5, 8, 11, 14, 17\\\\n  3, 6, 9, 12, 15, 18\\\\n\\\\\\\"\\\\n\\\\nprintGrid(5, 3) ➞ \\\\\\\"\\\\n  1, 6, 11\\\\n  2, 7, 12\\\\n  3, 8, 13\\\\n  4, 9, 14\\\\n  5, 10, 15\\\\n\\\\\\\"\\\\n\\\\nprintGrid(4, 1) ➞ \\\\\\\"\\\\n  1\\\\n  2\\\\n  3\\\\n  4\\\\n\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Each row ends w","thisId":"1926","channelHost":"edabit.com","id":"1926","opcode":"1","channelId":"2","timestamp":"1652648910780"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"519\\\"]}\"]","thisId":"1927","channelHost":"edabit.com","id":"1927","opcode":"1","channelId":"2","timestamp":"1652648910876"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5633","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"519\\\",\\\"result\\\":{\\\"_id\\\":\\\"LJDcfKERoPe8ERXG5\\\",\\\"author\\\":\\\"Mateusz Mędrowski\\\",\\\"authorId\\\":\\\"hPx9H3YM8j2k94DNW\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static double perimeter(int[][] point) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.076923076923077,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"Du9r9Sne4KGczWRDR\\\",\\\"instructions\\\":\\\"Write a function that takes the coordinates of three points and returns the perimeter of the triangle. The given points are the vertices of a triangle on a two-dimensional plane.\\\\n\\\\n### Examples\\\\n```\\\\nperimeter(arr[0]={15, 7}, arr[1]={5, 22}, arr[2]={11, 1}) ➞ 47.08\\\\n\\\\nperimeter(arr[0]={0, 0}, arr[1]={0, 1}, arr[2]={1, 0}) ➞ 3.41\\\\n\\\\nperimeter(arr[0]={-10, -10}, arr[1]={10, 10}, arr[2]={-10, 10}) ➞ 68.28\\\\n```\\\\n\\\\n### Notes\\\\n- The given points always create a triangle.\\\\n- The numbers in the argument array can be positive or negative.\\\\n- There is 0.1 tolerance, so you don't need to round your result.\\\\n- This challenge is easie","thisId":"1928","channelHost":"edabit.com","id":"1928","opcode":"1","channelId":"2","timestamp":"1652648910879"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"522\\\"]}\"]","thisId":"1929","channelHost":"edabit.com","id":"1929","opcode":"1","channelId":"2","timestamp":"1652648911000"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7432","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"522\\\",\\\"result\\\":{\\\"_id\\\":\\\"g5n85W62rJqZakMry\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String xPronounce(String sentence) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.078014184397163,\\\"familyId\\\":\\\"hc4yfYnwYwfK2w9zg\\\",\\\"instructions\\\":\\\"Create a function which replaces all the x's in the string in the following ways:\\\\n\\\\nReplace all x's with \\\\\\\"cks\\\\\\\" **UNLESS**:\\\\n- The word begins with \\\\\\\"x\\\\\\\", therefore replace it with \\\\\\\"z\\\\\\\".\\\\n- The word is just the letter \\\\\\\"x\\\\\\\", therefore replace it with \\\\\\\"ecks\\\\\\\".\\\\n\\\\n### Examples\\\\n```\\\\nxPronounce(\\\\\\\"Inside the box was a xylophone\\\\\\\") ➞ \\\\\\\"Inside the bocks was a zylophone\\\\\\\"\\\\n\\\\nxPronounce(\\\\\\\"The x ray is excellent\\\\\\\") ➞ \\\\\\\"The ecks ray is eckscellent\\\\\\\"\\\\n\\\\nxPronounce(\\\\\\\"OMG x box unboxing video x D\\\\\\\") ➞ \\\\\\\"OMG ecks bocks unbocksing video ecks D\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- All x's are lowercase.\\\\n- I know that not all words with x's foll","thisId":"1930","channelHost":"edabit.com","id":"1930","opcode":"1","channelId":"2","timestamp":"1652648911004"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"526\\\"]}\"]","thisId":"1931","channelHost":"edabit.com","id":"1931","opcode":"1","channelId":"2","timestamp":"1652648911113"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6226","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"526\\\",\\\"result\\\":{\\\"_id\\\":\\\"jc7nh6xMSZTBYvndz\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean isAlphabeticallySorted(String sentence) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.0833333333333335,\\\"familyId\\\":\\\"D8HCBSFzYGxKpjM9m\\\",\\\"instructions\\\":\\\"A word is alphabetically sorted if all of the letters in it are in consecutive alphabetical order. Some examples of alphabetically sorted words: _abhors_ (_a_ is before _b_, _b_ is before _h_, _h_ is before _o_, etc.), _ghost_, _accent_, _hoop_.\\\\n\\\\nCreate a function that takes in a sentence as input and returns `true` if there is **at least one** alphabetically sorted word inside that has a **minimum length of 3**.\\\\n\\\\n### Examples\\\\n```\\\\nisAlphabeticallySorted(\\\\\\\"Paula has a French accent.\\\\\\\") ➞ true\\\\n// \\\\\\\"accent\\\\\\\" is alphabetically sorted.\\\\n\\\\nisAlphabeticallySorted(\\\\\\\"The biopsy returned negative results.\\\\\\\") ➞ true\\\\n// \\\\\\\"biopsy\\\\\\\" is alphabetical","thisId":"1932","channelHost":"edabit.com","id":"1932","opcode":"1","channelId":"2","timestamp":"1652648911130"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"525\\\"]}\"]","thisId":"1933","channelHost":"edabit.com","id":"1933","opcode":"1","channelId":"2","timestamp":"1652648911246"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6859","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"525\\\",\\\"result\\\":{\\\"_id\\\":\\\"vuxkHGZg8fuWCivPH\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean canBuild(String str1, String str2) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.0795454545454546,\\\"familyId\\\":\\\"6JsARhnCWPJWy6X9T\\\",\\\"instructions\\\":\\\"Write a function that returns `true` if you can use the letters of the first string to create the second string. Letters are **case sensitive**.\\\\n\\\\n### Examples\\\\n```\\\\ncanBuild(\\\\\\\"aPPleAL\\\\\\\", \\\\\\\"PAL\\\\\\\") ➞ true\\\\n\\\\ncanBuild(\\\\\\\"aPPleAL\\\\\\\", \\\\\\\"apple\\\\\\\") ➞ false\\\\n\\\\ncanBuild(\\\\\\\"a\\\\\\\", \\\\\\\"\\\\\\\") ➞ true\\\\n\\\\ncanBuild(\\\\\\\"aa\\\\\\\", \\\\\\\"aaa\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nLetters in the first string can be used only once.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(true, Challenge.canBuild(\\\\\\\"aPPleAL\\\\\\\", \\\\\\\"PAL\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@","thisId":"1934","channelHost":"edabit.com","id":"1934","opcode":"1","channelId":"2","timestamp":"1652648911250"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"523\\\"]}\"]","thisId":"1935","channelHost":"edabit.com","id":"1935","opcode":"1","channelId":"2","timestamp":"1652648911341"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"10449","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"523\\\",\\\"result\\\":{\\\"_id\\\":\\\"zZxPQRjn8q2iB9Biv\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int bugger(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.0789473684210527,\\\"familyId\\\":\\\"L5w2bPfeLij89LdW5\\\",\\\"instructions\\\":\\\"Create a function that takes a number and returns its **multiplicative persistence**, which is the number of times you must multiply the digits in `num` until you reach a single digit.\\\\n\\\\n### Examples\\\\n```\\\\nbugger(39) ➞ 3\\\\n// Because 3 * 9 = 27, 2 * 7 = 14, 1 * 4 = 4 and 4 has only one digit.\\\\n\\\\nbugger(999) ➞ 4\\\\n// Because 9 * 9 * 9 = 729, 7 * 2 * 9 = 126, 1 * 2 * 6 = 12, and finally 1 * 2 = 2.\\\\n\\\\nbugger(4) ➞ 0\\\\n// Because 4 is already a one-digit number.\\\\n ```\\\\n\\\\n ### Notes\\\\n N/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertEquals(3, Challenge.bugger(","thisId":"1936","channelHost":"edabit.com","id":"1936","opcode":"1","channelId":"2","timestamp":"1652648911345"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"524\\\"]}\"]","thisId":"1937","channelHost":"edabit.com","id":"1937","opcode":"1","channelId":"2","timestamp":"1652648911443"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8642","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"524\\\",\\\"result\\\":{\\\"_id\\\":\\\"NGnsMw8CG8gxEFW7w\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean balanced(String word) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.0792079207920793,\\\"familyId\\\":\\\"QFFSpvuhkhHX44wCF\\\",\\\"instructions\\\":\\\"We can assign a value to each character in a word, based on their position in the alphabet (a = 1, b = 2, ... , z = 26).  A **balanced word** is one where the sum of values on the left-hand side of the word equals the sum of values on the right-hand side. For odd length words, the middle character (balance point) is ignored.\\\\n\\\\nWrite a function that returns `true` if the word is balanced, and `false` if it's not.\\\\n\\\\n### Examples\\\\n```\\\\nbalanced(\\\\\\\"zips\\\\\\\") ➞ true\\\\n// \\\\\\\"zips\\\\\\\" = \\\\\\\"zi|ps\\\\\\\" = 26+9|16+19 = 35|35 = true\\\\n\\\\nbalanced(\\\\\\\"brake\\\\\\\") ➞ false\\\\n// \\\\\\\"brake\\\\\\\" = \\\\\\\"br|ke\\\\\\\" = 2+18|11+5 = 20|16 = false\\\\n```\\\\n\\\\n### Notes\\\\n- All words will be lowercase, and","thisId":"1938","channelHost":"edabit.com","id":"1938","opcode":"1","channelId":"2","timestamp":"1652648911447"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"527\\\"]}\"]","thisId":"1939","channelHost":"edabit.com","id":"1939","opcode":"1","channelId":"2","timestamp":"1652648911539"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5687","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"527\\\",\\\"result\\\":{\\\"_id\\\":\\\"mc6KcMGkrSWP88dGu\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String removeLeadingTrailing(String n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.0833333333333335,\\\"familyId\\\":\\\"LhoGexCsSgNjcYeni\\\",\\\"instructions\\\":\\\"Create a function that takes in a *number as a string* `n` and returns the number **without trailing and leading zeros**.\\\\n\\\\n- **Trailing Zeros** are the zeros *after* a decimal point which *don't affect the value*\\\\n(e.g. the *last three* zeros in `3.4000` and `3.04000`).\\\\n- **Leading Zeros** are the zeros *before* a whole number which *don't affect the value* (e.g. the *first three* zeros in `000234` and `000230`).\\\\n\\\\n### Examples\\\\n```\\\\nremoveLeadingTrailing(\\\\\\\"230.000\\\\\\\") ➞ \\\\\\\"230\\\\\\\"\\\\n\\\\nremoveLeadingTrailing(\\\\\\\"00402\\\\\\\") ➞ \\\\\\\"402\\\\\\\"\\\\n\\\\nremoveLeadingTrailing(\\\\\\\"03.1400\\\\\\\") ➞ \\\\\\\"3.14\\\\\\\"\\\\n\\\\nremoveLeadingTrailing(\\\\\\\"30\\\\\\\") ➞ \\\\\\\"30\\\\\\\"\\\\n```\\\\n\\\\n##","thisId":"1940","channelHost":"edabit.com","id":"1940","opcode":"1","channelId":"2","timestamp":"1652648911547"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"528\\\"]}\"]","thisId":"1941","channelHost":"edabit.com","id":"1941","opcode":"1","channelId":"2","timestamp":"1652648911680"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"12498","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"528\\\",\\\"result\\\":{\\\"_id\\\":\\\"4hZ9cHgvkZ94sr2ae\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String missingLetter(String[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.0852713178294575,\\\"familyId\\\":\\\"9PXLWjCYdZtx6RQbp\\\",\\\"instructions\\\":\\\"Create a function that takes an array of increasing letters and return the missing letter.\\\\n\\\\n### Examples\\\\n```\\\\nmissingLetter([\\\\\\\"a\\\\\\\", \\\\\\\"b\\\\\\\", \\\\\\\"c\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"f\\\\\\\", \\\\\\\"g\\\\\\\"]) ➞ \\\\\\\"d\\\\\\\"\\\\n\\\\nmissingLetter([\\\\\\\"O\\\\\\\", \\\\\\\"Q\\\\\\\", \\\\\\\"R\\\\\\\", \\\\\\\"S\\\\\\\"]) ➞ \\\\\\\"P\\\\\\\"\\\\n\\\\nmissingLetter([\\\\\\\"t\\\\\\\", \\\\\\\"u\\\\\\\", \\\\\\\"v\\\\\\\", \\\\\\\"w\\\\\\\", \\\\\\\"x\\\\\\\", \\\\\\\"z\\\\\\\"]) ➞ \\\\\\\"y\\\\\\\"\\\\n\\\\nmissingLetter([\\\\\\\"m\\\\\\\", \\\\\\\"o\\\\\\\"]) ➞ \\\\\\\"n\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Tests will always have exactly one letter missing.\\\\n- The length of the test array will always be at least two.\\\\n- Tests will be in one particular case (upper or lower but never both).\\\",\\\"lab\\\":\\\"import static","thisId":"1942","channelHost":"edabit.com","id":"1942","opcode":"1","channelId":"2","timestamp":"1652648911684"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"529\\\"]}\"]","thisId":"1943","channelHost":"edabit.com","id":"1943","opcode":"1","channelId":"2","timestamp":"1652648911784"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"11512","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"529\\\",\\\"result\\\":{\\\"_id\\\":\\\"33tRK98geLPcf73PF\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String noYelling(String phrase) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.0859375,\\\"familyId\\\":\\\"jcaYCsfYMdSvx83S4\\\",\\\"instructions\\\":\\\"Create a function that transforms sentences ending  with multiple question marks `?` or exclamation marks `!` into a sentence only ending with one without changing punctuation in the middle of the sentences.\\\\n\\\\n### Examples\\\\n```\\\\nnoYelling(\\\\\\\"What went wrong?????????\\\\\\\") ➞ \\\\\\\"What went wrong?\\\\\\\"\\\\n\\\\nnoYelling(\\\\\\\"Oh my goodness!!!\\\\\\\") ➞ \\\\\\\"Oh my goodness!\\\\\\\"\\\\n\\\\nnoYelling(\\\\\\\"I just!!! can!!! not!!! believe!!! it!!!\\\\\\\") ➞ \\\\\\\"I just!!! can!!! not!!! believe!!! it!\\\\\\\"\\\\n// Only change repeating punctuation at the end of the sentence.\\\\n\\\\nnoYelling(\\\\\\\"Oh my goodness!\\\\\\\") ➞ \\\\\\\"Oh my goodness!\\\\\\\"\\\\n// Do not change sentences where there exists only one or zero exclamation ma","thisId":"1944","channelHost":"edabit.com","id":"1944","opcode":"1","channelId":"2","timestamp":"1652648911788"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"530\\\"]}\"]","thisId":"1945","channelHost":"edabit.com","id":"1945","opcode":"1","channelId":"2","timestamp":"1652648911936"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6490","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"530\\\",\\\"result\\\":{\\\"_id\\\":\\\"Bt6tuyqL7ESZHpsec\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String swapTwo(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.08955223880597,\\\"familyId\\\":\\\"zeZXGL3oBKRPs3Pur\\\",\\\"instructions\\\":\\\"Write a function that swaps the first **pair** (1st and 2nd characters) with the second **pair** (3rd and 4th characters) for every quadruplet substring.\\\\n\\\\n### Examples\\\\n```\\\\nswapTwo(\\\\\\\"ABCDEFGH\\\\\\\") ➞ \\\\\\\"CDABGHEF\\\\\\\"\\\\n\\\\nswapTwo(\\\\\\\"AABBCCDDEEFF\\\\\\\") ➞ \\\\\\\"BBAADDCCFFEE\\\\\\\"\\\\n\\\\nswapTwo(\\\\\\\"munchkins\\\\\\\") ➞ \\\\\\\"ncmuinhks\\\\\\\"\\\\n\\\\nswapTwo(\\\\\\\"FFGGHHI\\\\\\\") ➞ \\\\\\\"GGFFHHI\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nKeep **leftover strings** in the same order.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"CDABGHEF\\\\\\\", Challenge.swapTwo(\\\\\\\"ABCDEFGH\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@","thisId":"1946","channelHost":"edabit.com","id":"1946","opcode":"1","channelId":"2","timestamp":"1652648911940"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"531\\\"]}\"]","thisId":"1947","channelHost":"edabit.com","id":"1947","opcode":"1","channelId":"2","timestamp":"1652648912029"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6050","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"531\\\",\\\"result\\\":{\\\"_id\\\":\\\"AudsydHhvWpCCSuaN\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String selectLetters(String s1, String s2) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.090909090909091,\\\"familyId\\\":\\\"44Pn69JnDESbzBFwn\\\",\\\"instructions\\\":\\\"Given two strings, `s1` and `s2`, select only the characters in each string where the character in the same position in the **other** string is in uppercase. Return these as a single string.\\\\n\\\\nTo illustrate, given the strings `s1 = \\\\\\\"heLLo\\\\\\\"` and `s2 = \\\\\\\"GUlp\\\\\\\"`, we select the letters \\\\\\\"he\\\\\\\" from `s1`, because \\\\\\\"G\\\\\\\" and \\\\\\\"U\\\\\\\" are uppercase. We then select \\\\\\\"lp\\\\\\\" from `s2`, because \\\\\\\"LL\\\\\\\" is in uppercase. Finally, we join these together and return `\\\\\\\"help\\\\\\\"`.\\\\n\\\\n### Examples\\\\n```\\\\nselectLetters(\\\\\\\"heLLO\\\\\\\", \\\\\\\"GUlp\\\\\\\") ➞ \\\\\\\"help\\\\\\\"\\\\n\\\\nselectLetters(\\\\\\\"1234567\\\\\\\", \\\\\\\"XxXxX\\\\\\\")  ➞ \\\\\\\"135\\\\\\\"\\\\n\\\\nselectLetters(\\\\\\\"EVERYTHIN","thisId":"1948","channelHost":"edabit.com","id":"1948","opcode":"1","channelId":"2","timestamp":"1652648912040"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"532\\\"]}\"]","thisId":"1949","channelHost":"edabit.com","id":"1949","opcode":"1","channelId":"2","timestamp":"1652648912123"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5274","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"532\\\",\\\"result\\\":{\\\"_id\\\":\\\"MRArkoYdmsxeGAu2s\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"import java.util.Map;\\\\n\\\\npublic class InsuranceList {\\\\n\\\\tpublic static Map<String,Integer> convertToNumber(Map<String,String> list) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.0930232558139537,\\\"familyId\\\":\\\"CQ7LJ6ck5BXMd3jRc\\\",\\\"instructions\\\":\\\"You prepare a list to send to the insurance company. As you finish, you notice you misformatted it. Given an object with at least one key/value pair, convert all the values to numbers.\\\\n\\\\n### Examples\\\\n```\\\\nconvertToNumber({ \\\\\\\"piano\\\\\\\"=\\\\\\\"200\\\\\\\" }) ➞ { \\\\\\\"piano\\\\\\\"=200 }\\\\n\\\\nconvertToNumber({ \\\\\\\"piano\\\\\\\"=\\\\\\\"200\\\\\\\", \\\\\\\"tv\\\\\\\"=\\\\\\\"300\\\\\\\" }) ➞ { \\\\\\\"piano\\\\\\\"=200, \\\\\\\"tv\\\\\\\"=300 }\\\\n\\\\nconvertToNumber({ \\\\\\\"piano\\\\\\\"=\\\\\\\"200\\\\\\\", \\\\\\\"tv\\\\\\\"=\\\\\\\"300\\\\\\\", \\\\\\\"stereo\\\\\\\"=\\\\\\\"400\\\\\\\" }) ➞ { \\\\\\\"piano\\\\\\\"=200, \\\\\\\"tv\\\\\\\"=300, \\\\\\\"stereo\\\\\\\"=400 }\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":f","thisId":"1950","channelHost":"edabit.com","id":"1950","opcode":"1","channelId":"2","timestamp":"1652648912127"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"533\\\"]}\"]","thisId":"1951","channelHost":"edabit.com","id":"1951","opcode":"1","channelId":"2","timestamp":"1652648912228"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"13057","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"533\\\",\\\"result\\\":{\\\"_id\\\":\\\"8SHAyg8kdX8y72S3z\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int findOdd(int[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.0943396226415096,\\\"familyId\\\":\\\"Lyh7DjHpxikGXEQB3\\\",\\\"instructions\\\":\\\"Create a function that takes an array and finds the integer which appears an odd number of times.\\\\n\\\\n### Examples\\\\n```\\\\nfindOdd([1, 1, 2, -2, 5, 2, 4, 4, -1, -2, 5]) ➞ -1\\\\n\\\\nfindOdd([20, 1, 1, 2, 2, 3, 3, 5, 5, 4, 20, 4, 5]) ➞ 5\\\\n\\\\nfindOdd([10]) ➞ 10\\\\n```\\\\n\\\\n### Notes\\\\nThere will always only be one integer that appears an odd number of times.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test \\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertThat(Challenge.findOdd(new int[]{20, 1, -1, 2, -2, 3, 3, 5, 5, 1, 2, 4, 20, 4, -1, -2, 5}), is(5));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test \\\\n\\\\","thisId":"1952","channelHost":"edabit.com","id":"1952","opcode":"1","channelId":"2","timestamp":"1652648912232"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"534\\\"]}\"]","thisId":"1953","channelHost":"edabit.com","id":"1953","opcode":"1","channelId":"2","timestamp":"1652648912331"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7684","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"534\\\",\\\"result\\\":{\\\"_id\\\":\\\"HjvecTb3aFMjJ59sB\\\",\\\"author\\\":\\\"Helen Yu\\\",\\\"authorId\\\":\\\"mNMQvcxKSSvqqMYCH\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String toCamelCase(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n\\\\n\\\\tpublic static String toSnakeCase(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.095890410958904,\\\"familyId\\\":\\\"rJeHMN6JMpfhyZGiy\\\",\\\"instructions\\\":\\\"Create two functions `toCamelCase()` and `toSnakeCase()` that each take a single string and convert it into either camelCase or snake_case. If you're not sure what these terms mean, check the **Resources** tab above.\\\\n\\\\n### Examples\\\\n```\\\\ntoCamelCase(\\\\\\\"hello_edabit\\\\\\\") ➞ \\\\\\\"helloEdabit\\\\\\\"\\\\n\\\\ntoSnakeCase(\\\\\\\"helloEdabit\\\\\\\") ➞ \\\\\\\"hello_edabit\\\\\\\"\\\\n\\\\ntoCamelCase(\\\\\\\"is_modal_open\\\\\\\") ➞ \\\\\\\"isModalOpen\\\\\\\"\\\\n\\\\ntoSnakeCase(\\\\\\\"getColor\\\\\\\") ➞ \\\\\\\"get_color\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nTest input will always be appropriately formatted as either camelCase or snake_case, depending on the function being ","thisId":"1954","channelHost":"edabit.com","id":"1954","opcode":"1","channelId":"2","timestamp":"1652648912334"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"535\\\"]}\"]","thisId":"1955","channelHost":"edabit.com","id":"1955","opcode":"1","channelId":"2","timestamp":"1652648912435"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4717","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"535\\\",\\\"result\\\":{\\\"_id\\\":\\\"n3Sw2MEa4TkEhthgB\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean isParselTongue(String sentence) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.0961538461538463,\\\"familyId\\\":\\\"2efqEqcFQTeSM6cC7\\\",\\\"instructions\\\":\\\"Hermione has come up with a precise formula for determining whether or not a phrase was ssspoken by a parssseltongue (_a reference from the Harry Potter universe; the language of ssserpents and those who can converse with them_).\\\\n\\\\n_Each word_ in a sssentence must contain either:\\\\n\\\\n1. Two or more consecutive instances of the letter \\\\\\\"s\\\\\\\" (i.e. must be together `ss..`), or...\\\\n2. Zero instances of the letter \\\\\\\"s\\\\\\\" by itself.\\\\n\\\\n### Examples\\\\n```\\\\nisParselTongue(\\\\\\\"Sshe ssselects to eat that apple. \\\\\\\") ➞ true\\\\n\\\\nisParselTongue(\\\\\\\"She ssselects to eat that apple. \\\\\\\") ➞ false\\\\n// \\\\\\\"She\\\\\\\" only contains one \\\\\\\"s\\\\\\\".\\\\n\\\\nisParselTongue(\\\\\\\"Beatrice","thisId":"1956","channelHost":"edabit.com","id":"1956","opcode":"1","channelId":"2","timestamp":"1652648912449"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"536\\\"]}\"]","thisId":"1957","channelHost":"edabit.com","id":"1957","opcode":"1","channelId":"2","timestamp":"1652648912550"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5090","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"536\\\",\\\"result\\\":{\\\"_id\\\":\\\"F2Kizgj7QxSab7R7p\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static long int closestPalindrome(int num) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.1,\\\"familyId\\\":\\\"k8afAfwnHKT6dKL74\\\",\\\"instructions\\\":\\\"Write a function that returns the closest palindrome number to an integer. If two palindrome numbers tie in absolute distance, return the **smaller number**.\\\\n\\\\n### Examples\\\\n```\\\\nclosestPalindrome(887) ➞ 888\\\\n\\\\nclosestPalindrome(100) ➞ 99\\\\n// 99 and 101 are equally distant, so we return the smaller palindrome.\\\\n\\\\nclosestPalindrome(888) ➞ 888\\\\n\\\\nclosestPalindrome(27) ➞ 22\\\\n```\\\\n\\\\n### Notes\\\\nIf the number itself is a palindrome, return that number.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(888, Challenge.closestPalindrome(887));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\","thisId":"1958","channelHost":"edabit.com","id":"1958","opcode":"1","channelId":"2","timestamp":"1652648912554"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"538\\\"]}\"]","thisId":"1959","channelHost":"edabit.com","id":"1959","opcode":"1","channelId":"2","timestamp":"1652648912662"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8890","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"538\\\",\\\"result\\\":{\\\"_id\\\":\\\"Eiyu2SZk9rgdp5gZd\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean canBuild(String[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.1018518518518516,\\\"familyId\\\":\\\"3DCF2Q2C2bgpSzffP\\\",\\\"instructions\\\":\\\"You are given an input list of strings, ordered by ascending length.\\\\n\\\\nWrite a function that returns `True` if, for each pair of consecutive strings, the second string can be formed from the first by adding a **single letter** either at the **beginning or end**.\\\\n\\\\n### Examples\\\\n```\\\\ncanBuild([\\\\\\\"a\\\\\\\", \\\\\\\"at\\\\\\\", \\\\\\\"ate\\\\\\\", \\\\\\\"late\\\\\\\", \\\\\\\"plate\\\\\\\", \\\\\\\"plates\\\\\\\"]) ➞ True\\\\n\\\\ncanBuild([\\\\\\\"a\\\\\\\", \\\\\\\"at\\\\\\\", \\\\\\\"ate\\\\\\\", \\\\\\\"late\\\\\\\", \\\\\\\"plate\\\\\\\", \\\\\\\"plater\\\\\\\", \\\\\\\"platter\\\\\\\"]) ➞ False\\\\n# \\\\\\\"platter\\\\\\\" is formed by adding \\\\\\\"t\\\\\\\" in the middle of \\\\\\\"plater\\\\\\\"\\\\n\\\\ncanBuild([\\\\\\\"it\\\\\\\", \\\\\\\"bit\\\\\\\", \\\\\\\"bite\\\\\\\", \\\\\\\"biters\\\\\\\"]) ➞ False\\\\n# \\\\\\\"b","thisId":"1960","channelHost":"edabit.com","id":"1960","opcode":"1","channelId":"2","timestamp":"1652648912666"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"537\\\"]}\"]","thisId":"1961","channelHost":"edabit.com","id":"1961","opcode":"1","channelId":"2","timestamp":"1652648912776"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4977","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"537\\\",\\\"result\\\":{\\\"_id\\\":\\\"AkQseRG6jtznJH9bb\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String BMI(String weight, String height) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.1012658227848102,\\\"familyId\\\":\\\"q2Ta9TCFgqqTJ8gWw\\\",\\\"instructions\\\":\\\"Body Mass Index (BMI) is found by taking your weight in kilograms and dividing by the square of your height in meters. The BMI categories are:\\\\n\\\\n- Underweight: <18.5\\\\n- Normal weight: 18.5–24.9\\\\n- Overweight: 25–29.9\\\\n- Obesity: BMI of 30 or greater\\\\n\\\\nCreate a function that will accept weight and height (in kilos, pounds, meters, or inches) and return the BMI and the associated category. Round the BMI to nearest tenth.\\\\n\\\\n### Examples\\\\n```\\\\nBMI(\\\\\\\"205 pounds\\\\\\\", \\\\\\\"73 inches\\\\\\\") ➞ \\\\\\\"27.0 Overweight\\\\\\\"\\\\n\\\\nBMI(\\\\\\\"55 kilos\\\\\\\", \\\\\\\"1.65 meters\\\\\\\") ➞ \\\\\\\"20.2 Normal weight\\\\\\\"\\\\n\\\\nBMI(\\\\\\\"154 pounds\\\\\\\", \\\\\\\"2 meters\\\\\\\") ➞ \\\\\\\"17.5 Underweight\\\\\\\"\\\\n`","thisId":"1962","channelHost":"edabit.com","id":"1962","opcode":"1","channelId":"2","timestamp":"1652648912780"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"539\\\"]}\"]","thisId":"1963","channelHost":"edabit.com","id":"1963","opcode":"1","channelId":"2","timestamp":"1652648912885"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7236","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"539\\\",\\\"result\\\":{\\\"_id\\\":\\\"mtrBW4w2Bkum4bGt5\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String unrepeated(String str) {\\\\n\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.105769230769231,\\\"quality\\\":4.7560975609756095,\\\"familyId\\\":\\\"ezdxDi3nT7K87BaCx\\\",\\\"instructions\\\":\\\"Create a function that will remove any repeated character(s) in a word passed to the function. Not just consecutive characters, but characters repeating anywhere in the string.\\\\n\\\\n### Examples\\\\n```\\\\nunrepeated(\\\\\\\"teshahset\\\\\\\") ➞ \\\\\\\"tesha\\\\\\\"\\\\n\\\\nunrepeated(\\\\\\\"hello\\\\\\\") ➞ \\\\\\\"helo\\\\\\\"\\\\n\\\\nunrepeated(\\\\\\\"aaaaa\\\\\\\") ➞ \\\\\\\"a\\\\\\\"\\\\n\\\\nunrepeated(\\\\\\\"WWE!!!\\\\\\\") ➞ \\\\\\\"WE!\\\\\\\"\\\\n\\\\nunrepeated(\\\\\\\"call 911\\\\\\\") ➞ \\\\\\\"cal 91\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- No more than two words will be passed.\\\\n- Notice that a string is iterable.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"/** \\\\n=================================\\\\nTestGen 3.1 for JUnit 4.13.0 \\\\t\\\\t\\\\nTest Case","thisId":"1964","channelHost":"edabit.com","id":"1964","opcode":"1","channelId":"2","timestamp":"1652648912890"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"540\\\"]}\"]","thisId":"1965","channelHost":"edabit.com","id":"1965","opcode":"1","channelId":"2","timestamp":"1652648913044"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4683","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"540\\\",\\\"result\\\":{\\\"_id\\\":\\\"xhhLGZzhwvkN6AR29\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int firstIndex(String hex, String needle) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.106060606060606,\\\"familyId\\\":\\\"mPb2zR5X7qMy4QD9r\\\",\\\"instructions\\\":\\\"Find the index of a string within a hex encoded string.\\\\n\\\\nYou will be given a string which needs to be found in another string which has previously been translated into hex. You will need to return the first index of the needle within the hex encoded string.\\\\n\\\\n### Examples\\\\n```\\\\nfirstIndex(\\\\\\\"68 65 6c 6c 6f 20 77 6f 72 6c 64\\\\\\\", \\\\\\\"world\\\\\\\") ➞ 6\\\\n\\\\nfirstIndex(\\\\\\\"47 6f 6f 64 62 79 65 20 77 6f 72 6c 64\\\\\\\", \\\\\\\"world\\\\\\\") ➞ 8\\\\n\\\\nfirstIndex(\\\\\\\"42 6f 72 65 64 20 77 6f 72 6c 64\\\\\\\", \\\\\\\"Bored\\\\\\\") ➞ 0\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  publ","thisId":"1966","channelHost":"edabit.com","id":"1966","opcode":"1","channelId":"2","timestamp":"1652648913048"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"541\\\"]}\"]","thisId":"1967","channelHost":"edabit.com","id":"1967","opcode":"1","channelId":"2","timestamp":"1652648913164"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4425","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"541\\\",\\\"result\\\":{\\\"_id\\\":\\\"Ly8iQqDfaouRLgKNb\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Word {\\\\n\\\\tpublic static boolean isPalindrome(String wrd) {\\\\n\\\\t\\\\t// your recursive solution here\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.111111111111111,\\\"editorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"familyId\\\":\\\"QgccuSCKEa7pdAB7m\\\",\\\"instructions\\\":\\\"Create a **recursive** function that determines whether a word is a **palindrome** or not.\\\\n\\\\n### Examples\\\\n```\\\\nisPalindrome(\\\\\\\"madam\\\\\\\") ➞ true\\\\n\\\\nisPalindrome(\\\\\\\"adieu\\\\\\\") ➞ false\\\\n\\\\nisPalindrome(\\\\\\\"rotor\\\\\\\") ➞ true\\\\n```\\\\n\\\\n### Notes\\\\n- All inputs are in lowercase.\\\\n- You are expected to solve this challenge via **recursion**.\\\\n- You can check on the **Resources** tab for more details about *recursion* in Java.\\\\n- If you think recursion is fun, a collection of those challenges can be found in [here](https://edabit.com/collection/Yx78jEBrKppHBNsoQ).\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"is","thisId":"1968","channelHost":"edabit.com","id":"1968","opcode":"1","channelId":"2","timestamp":"1652648913167"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"542\\\"]}\"]","thisId":"1969","channelHost":"edabit.com","id":"1969","opcode":"1","channelId":"2","timestamp":"1652648913263"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4975","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"542\\\",\\\"result\\\":{\\\"_id\\\":\\\"vtW558tXEYFQGv27S\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean correctSigns(String str) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.1125,\\\"familyId\\\":\\\"daTnZvL52o2PgXfND\\\",\\\"instructions\\\":\\\"Create a function that returns `true` if a given inequality expression is correct and `false` otherwise.\\\\n\\\\n### Examples\\\\n```\\\\ncorrectSigns(\\\\\\\"3 < 7 < 11\\\\\\\") ➞ true\\\\n\\\\ncorrectSigns(\\\\\\\"13 > 44 > 33 > 1\\\\\\\") ➞ false\\\\n\\\\ncorrectSigns(\\\\\\\"1 < 2 < 6 < 9 > 3\\\\\\\") ➞ true\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(true, Challenge.correctSigns(\\\\\\\"3 < 7 < 11\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(false, Challenge.correctSigns(\\\\\\\"13 > 44 > 33 > 1\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test3() {\\\\n ","thisId":"1970","channelHost":"edabit.com","id":"1970","opcode":"1","channelId":"2","timestamp":"1652648913267"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"543\\\"]}\"]","thisId":"1971","channelHost":"edabit.com","id":"1971","opcode":"1","channelId":"2","timestamp":"1652648913366"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6038","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"543\\\",\\\"result\\\":{\\\"_id\\\":\\\"6mLZjPrNFrfGfdwqa\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String sigilize(String desire) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.1149425287356323,\\\"familyId\\\":\\\"T9PZccBRMAfEQd7SC\\\",\\\"instructions\\\":\\\"A magic sigil is a glyph which represents a desire one wishes to manifest in their lives. There are many ways to create a sigil, but the most common is to write out a specific desire (e.g. \\\\\\\"_I HAVE WONDERFUL FRIENDS WHO LOVE ME_\\\\\\\"), remove all vowels, remove any duplicate letters (keeping the last occurence), and then design a glyph from what remains.\\\\n\\\\nUsing the sentence above as an example, we would remove duplicate letters:\\\\n\\\\n```\\\\nAUFRINDSWHLOVME\\\\n```\\\\n\\\\nAnd then remove all vowels, leaving us with:\\\\n\\\\n```\\\\nFRNDSWHLVM\\\\n```\\\\n\\\\nCreate a function that takes a string and removes its vowels and duplicate letters. The returned string should not contain any spaces an","thisId":"1972","channelHost":"edabit.com","id":"1972","opcode":"1","channelId":"2","timestamp":"1652648913372"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"544\\\"]}\"]","thisId":"1973","channelHost":"edabit.com","id":"1973","opcode":"1","channelId":"2","timestamp":"1652648913499"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4464","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"544\\\",\\\"result\\\":{\\\"_id\\\":\\\"jfeWP9tjtwNeRu4WG\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class ParityCheck {\\\\n\\\\tpublic static String isOdd(int number) {\\\\n\\\\t\\\\t// use bitwise operator \\\\n\\\\t\\\\t// modulo operator (%) is prohibited\\\\t\\\\n\\\\t}\\\\n\\\\n\\\\tpublic static String isEven(String number) {\\\\n\\\\t\\\\t// use regular expression \\\\n\\\\t\\\\t// modulo operator (%) is prohibited\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.1153846153846154,\\\"familyId\\\":\\\"Jyei5ywBKwz2NXSsS\\\",\\\"instructions\\\":\\\"Create two functions:\\\\n\\\\n1. The first is `isOdd()` to check if a given number is odd using **bitwise operator**.\\\\n2. The second is `isEven()` to check if a given input is even using **regular expressions**.\\\\n\\\\n### IMPORTANT\\\\nThe use of the **modulo** (`%`) operator is **not** allowed.\\\\n\\\\n### Examples\\\\n```\\\\nisOdd(3) ➞ \\\\\\\"Yes\\\\\\\"\\\\n// Use Bitwise Operator\\\\n\\\\nisOdd(58) ➞ \\\\\\\"No\\\\\\\"\\\\n// Use Bitwise Operator\\\\n\\\\nisEven(\\\\\\\"0\\\\\\\") ➞ \\\\\\\"Yes\\\\\\\"\\\\n// Use Regular E","thisId":"1974","channelHost":"edabit.com","id":"1974","opcode":"1","channelId":"2","timestamp":"1652648913507"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"545\\\"]}\"]","thisId":"1975","channelHost":"edabit.com","id":"1975","opcode":"1","channelId":"2","timestamp":"1652648913590"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5617","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"545\\\",\\\"result\\\":{\\\"_id\\\":\\\"YuZYMkwnJpALmHELB\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int waysToClimb(int num) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.118279569892473,\\\"familyId\\\":\\\"N9pDuxmGbkhZQHwAX\\\",\\\"instructions\\\":\\\"Write a function that returns the number of ways a person can climb **n stairs**, where the person may only climb **1** or **2** steps at a time.\\\\n\\\\nTo illustrate, if **n = 4** there are **5** ways to climb:\\\\n```\\\\n[1, 1, 1, 1]\\\\n[2, 1, 1]\\\\n[1, 2, 1]\\\\n[1, 1, 2]\\\\n[2, 2]\\\\n```\\\\n\\\\n### Examples\\\\n```\\\\nwaysToClimb(1) ➞ 1\\\\n\\\\nwaysToClimb(2) ➞ 2\\\\n\\\\nwaysToClimb(5) ➞ 8\\\\n```\\\\n\\\\n### Notes\\\\nA staircase of height `0` should return `1`.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(1, Challenge.waysToClimb(0));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n   ","thisId":"1976","channelHost":"edabit.com","id":"1976","opcode":"1","channelId":"2","timestamp":"1652648913595"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"546\\\"]}\"]","thisId":"1977","channelHost":"edabit.com","id":"1977","opcode":"1","channelId":"2","timestamp":"1652648913705"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"10739","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"546\\\",\\\"result\\\":{\\\"_id\\\":\\\"vNszi3mbJA5BhgGFX\\\",\\\"archived\\\":false,\\\"author\\\":\\\"kochug\\\",\\\"authorId\\\":\\\"vQEmjTRgmdGNYB7yk\\\",\\\"code\\\":\\\"public class Program {\\\\n\\\\tpublic static String[] filterArray(String[] str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.1194029850746268,\\\"familyId\\\":\\\"aQF5DWZZexaWKaHDF\\\",\\\"instructions\\\":\\\"Create a function that takes an array of non-negative **integers** and **strings** and return a new array without the strings.\\\\n\\\\n### Examples\\\\n```\\\\nfilterArray([1, 2, \\\\\\\"a\\\\\\\", \\\\\\\"b\\\\\\\"]) ➞ [1, 2]\\\\n\\\\nfilterArray([1, \\\\\\\"a\\\\\\\", \\\\\\\"b\\\\\\\", 0, 15]) ➞ [1, 0, 15]\\\\n\\\\nfilterArray([1, 2, \\\\\\\"aasf\\\\\\\", \\\\\\\"1\\\\\\\", \\\\\\\"123\\\\\\\", 123]) ➞ [1, 2, 123]\\\\n```\\\\n\\\\n### Notes\\\\n- Zero is a non-negative integer.\\\\n- The given array only has integers and strings.\\\\n- Numbers in the array should not repeat.\\\\n- The original order must be maintained.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n","thisId":"1978","channelHost":"edabit.com","id":"1978","opcode":"1","channelId":"2","timestamp":"1652648913709"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"547\\\"]}\"]","thisId":"1979","channelHost":"edabit.com","id":"1979","opcode":"1","channelId":"2","timestamp":"1652648913789"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5327","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"547\\\",\\\"result\\\":{\\\"_id\\\":\\\"42DtofyzmZXjWXCtw\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int battleOutcome(int num) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.120879120879121,\\\"familyId\\\":\\\"BgKtCS25o7sA4X7Cf\\\",\\\"instructions\\\":\\\"Starting from the left side of an integer, adjacent digits pair up in \\\\\\\"battle\\\\\\\" and the larger digit wins. If two digits are the same, they both lose. A lone digit automatically wins.\\\\n\\\\nCreate a function that returns the victorious digits.\\\\n\\\\nTo illustrate:\\\\n```\\\\nbattleOutcome(578921445) ➞ 7925\\\\n// [57]: 7 wins; [89] 9 wins; [21] 2 wins;\\\\n// [44] neither wins; 5 (automatically) wins\\\\n```\\\\n\\\\n### Examples\\\\n```\\\\nbattleOutcome(32531) ➞ 351\\\\n// 3 deffeats 2, 5 defeats 3, 1 is a single.\\\\n\\\\nbattleOutcome(111) ➞ 1\\\\n// 1 and 1 tie, so neither move on, last 1 is a single.\\\\n\\\\nbattleOutcome(78925) ➞ 895\\\\n```\\\\n\\\\n### Notes\\\\n- There are no winners in a battle with equal digi","thisId":"1980","channelHost":"edabit.com","id":"1980","opcode":"1","channelId":"2","timestamp":"1652648913792"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"548\\\"]}\"]","thisId":"1981","channelHost":"edabit.com","id":"1981","opcode":"1","channelId":"2","timestamp":"1652648913953"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5583","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"548\\\",\\\"result\\\":{\\\"_id\\\":\\\"5snfPLPbvjAsZ5kjo\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int carryDigits(int n1, int n2) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.121495327102804,\\\"familyId\\\":\\\"jRLFXAwQ28yjvf3AE\\\",\\\"instructions\\\":\\\"Write a function that returns the number of times you must carry a digit when you sum together two integers.\\\\n\\\\n### Examples\\\\n```\\\\ncarryDigits(36, 135) ➞ 1\\\\n// You carry the 1 when you sum 6 and 5 together.\\\\n\\\\ncarryDigits(671, 329) ➞ 3\\\\n\\\\ncarryDigits(1111, 3333) ➞ 0\\\\n\\\\ncarryDigits(53214, 56905) ➞ 3\\\\n```\\\\n\\\\n### Notes\\\\nCount all carry operations (even those on leading digits).\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(1, Challenge.carryDigits(36, 135));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(3, Challenge.carryDigit","thisId":"1982","channelHost":"edabit.com","id":"1982","opcode":"1","channelId":"2","timestamp":"1652648913957"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"549\\\"]}\"]","thisId":"1983","channelHost":"edabit.com","id":"1983","opcode":"1","channelId":"2","timestamp":"1652648914056"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8422","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"549\\\",\\\"result\\\":{\\\"_id\\\":\\\"qE9gCJtrtcMurvQtT\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class NumberedCard {\\\\n\\\\tpublic static boolean winRound(int[] you, int[] opp) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.1228070175438596,\\\"familyId\\\":\\\"GGMn8Z37ev4EfEKpn\\\",\\\"instructions\\\":\\\"You have a pack of 5 randomly numbered cards, which can range from 0-9. You can win if you can produce a higher **two-digit** number from your cards than your opponent. Return `true` if your cards win that round.\\\\n\\\\n### Examples\\\\n```\\\\nwinRound([2, 5, 2, 6, 9], [3, 7, 3, 1, 2]) ➞ true\\\\n// Your cards can make the number 96\\\\n// Your opponent can make the number 73\\\\n// You win the round since 96 > 73\\\\n\\\\nwinRound([2, 5, 2, 6, 9], [3, 7, 3, 1, 2]) ➞ true\\\\n\\\\nwinRound([1, 2, 3, 4, 5], [9, 8, 7, 6, 5]) ➞ false\\\\n\\\\nwinRound([4, 3, 4, 4, 5], [3, 2, 5, 4, 1]) ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nReturn `false` if you and your opponent reach the same maximum number (see e","thisId":"1984","channelHost":"edabit.com","id":"1984","opcode":"1","channelId":"2","timestamp":"1652648914061"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"552\\\"]}\"]","thisId":"1985","channelHost":"edabit.com","id":"1985","opcode":"1","channelId":"2","timestamp":"1652648914221"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6592","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"552\\\",\\\"result\\\":{\\\"_id\\\":\\\"c4kGNF83S6Mzb75x9\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean isModest(int num) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.125,\\\"familyId\\\":\\\"pfxGh7F4s47AwunPp\\\",\\\"instructions\\\":\\\"In this challenge, you have to establish if a positive integer is a Modest number, accordingly to the following algorithm:\\\\n- Divide the number into two left and right partitions.\\\\n- For each combination of left and right parts, you have to check if a condition is true: **the remainder of the number divided by the right part is equal to the left part**.\\\\n- If at least a combination of two parts satisfies the above condition, the number is Modest, otherwise, it's not.\\\\n\\\\nGiven an integer `num`, implement a function that returns `true` if `num` is a Modest number, or `false` if it's not.\\\\n\\\\n### Example #1\\\\n```\\\\nisModest(2036) ➞ true\\\\n\\\\nCombination 1:\\\\nLeft = 2 | Right = 036 = 36 (Leading zero","thisId":"1986","channelHost":"edabit.com","id":"1986","opcode":"1","channelId":"2","timestamp":"1652648914225"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"551\\\"]}\"]","thisId":"1987","channelHost":"edabit.com","id":"1987","opcode":"1","channelId":"2","timestamp":"1652648914255"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5240","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"551\\\",\\\"result\\\":{\\\"_id\\\":\\\"AQr6ZPvSWzJ2cPTGt\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String reverse(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.125,\\\"familyId\\\":\\\"tqJZDB6JXSsRuWsvL\\\",\\\"instructions\\\":\\\"Create a function that reverses letters in a string but keeps digits in their current order.\\\\n\\\\n### Examples\\\\n```\\\\nreverse(\\\\\\\"ab89c\\\\\\\") ➞ \\\\\\\"cb89a\\\\\\\"\\\\n\\\\nreverse(\\\\\\\"jkl5mn923o\\\\\\\") ➞ \\\\\\\"onm5lk923j\\\\\\\"\\\\n\\\\nreverse(\\\\\\\"123a45\\\\\\\") ➞ \\\\\\\"123a45\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"cb89a\\\\\\\", Challenge.reverse(\\\\\\\"ab89c\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(\\\\\\\"onm5lk923j\\\\\\\", Challenge.reverse(\\\\\\\"jkl5mn923o\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test3() {\\\\n    assertEquals(\\\\\\\"1","thisId":"1988","channelHost":"edabit.com","id":"1988","opcode":"1","channelId":"2","timestamp":"1652648914327"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"550\\\"]}\"]","thisId":"1989","channelHost":"edabit.com","id":"1989","opcode":"1","channelId":"2","timestamp":"1652648914389"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6693","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"550\\\",\\\"result\\\":{\\\"_id\\\":\\\"ENozFXdPz9YTTHdps\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int duplicateCount(String str) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.124031007751938,\\\"familyId\\\":\\\"auHSwGQs4vLBxyyNw\\\",\\\"instructions\\\":\\\"Create a function that takes a string and returns the number of alphanumeric characters that occur more than once.\\\\n\\\\n### Examples\\\\n```\\\\nduplicateCount(\\\\\\\"abcde\\\\\\\") ➞ 0\\\\n\\\\nduplicateCount(\\\\\\\"aabbcde\\\\\\\") ➞ 2\\\\n\\\\nduplicateCount(\\\\\\\"Indivisibilities\\\\\\\") ➞ 2\\\\n\\\\nduplicateCount(\\\\\\\"Aa\\\\\\\") ➞ 0\\\\n// Case sensitive\\\\n```\\\\n\\\\n### Notes\\\\n- Duplicate characters are case sensitive.\\\\n- The input string will contain only alphanumeric characters.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(0, Challenge.duplicateCount(\\\\\\\"abcde\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\","thisId":"1990","channelHost":"edabit.com","id":"1990","opcode":"1","channelId":"2","timestamp":"1652648914395"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"554\\\"]}\"]","thisId":"1991","channelHost":"edabit.com","id":"1991","opcode":"1","channelId":"2","timestamp":"1652648914514"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4255","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"554\\\",\\\"result\\\":{\\\"_id\\\":\\\"ka4Mk98LW4TEbcqzH\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean plusSign(String str) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.126984126984127,\\\"familyId\\\":\\\"tY8oocvZax58BJtTg\\\",\\\"instructions\\\":\\\"Create a function that takes a string as an argument and returns `true` if each letter in the string is surrounded by a plus sign.  Return `false` otherwise.\\\\n\\\\n### Examples\\\\n```\\\\nplusSign(\\\\\\\"+f+d+c+#+f+\\\\\\\") ➞ true\\\\n\\\\nplusSign(\\\\\\\"+d+=3=+s+\\\\\\\") ➞ true\\\\n\\\\nplusSign(\\\\\\\"f++d+g+8+\\\\\\\") ➞ false\\\\n\\\\nplusSign(\\\\\\\"+s+7+fg+r+8+\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nFor clarity, each **letter** must have a plus sign on both sides.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(true, Challenge.plusSign(\\\\\\\"+f+d+c+#+f+\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void te","thisId":"1992","channelHost":"edabit.com","id":"1992","opcode":"1","channelId":"2","timestamp":"1652648914518"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"553\\\"]}\"]","thisId":"1993","channelHost":"edabit.com","id":"1993","opcode":"1","channelId":"2","timestamp":"1652648914600"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5503","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"553\\\",\\\"result\\\":{\\\"_id\\\":\\\"hYKyiwgw9Ni5ELtDL\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String erase(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.125,\\\"familyId\\\":\\\"dsJEWkqH462sSeMKQ\\\",\\\"instructions\\\":\\\"Suppose a hash **#** represents the BACKSPACE key being pressed. Write a function that transforms a string containing **#** into a string without any **#**.\\\\n\\\\n### Examples\\\\n```\\\\nerase(\\\\\\\"he##l#hel#llo\\\\\\\") ➞ \\\\\\\"hello\\\\\\\"\\\\n\\\\nerase(\\\\\\\"major# spar##ks\\\\\\\") ➞ \\\\\\\"majo spks\\\\\\\"\\\\n\\\\nerase(\\\\\\\"si###t boy\\\\\\\") ➞ \\\\\\\"t boy\\\\\\\"\\\\n\\\\nerase(\\\\\\\"####\\\\\\\") ➞ \\\\\\\"\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- In addition to characters, backspaces can also remove whitespaces.\\\\n- If the number of hashes exceeds the previous characters, remove those previous characters entirely (see example #3).\\\\n- If there only exist backspaces, return an empty string (see example #4).\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static or","thisId":"1994","channelHost":"edabit.com","id":"1994","opcode":"1","channelId":"2","timestamp":"1652648914604"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"555\\\"]}\"]","thisId":"1995","channelHost":"edabit.com","id":"1995","opcode":"1","channelId":"2","timestamp":"1652648914714"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5113","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"555\\\",\\\"result\\\":{\\\"_id\\\":\\\"AGoRjorDpas63gqt6\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Abbreviated {\\\\n  public static boolean uniquely(String[] a, String[] w) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.129032258064516,\\\"familyId\\\":\\\"djrZHkcenA9vPg634\\\",\\\"instructions\\\":\\\"You are given two inputs:\\\\n\\\\n1. An array of abbreviations.\\\\n2. An array of words.\\\\n\\\\nWrite a function that returns `true` if each abbreviation **uniquely identifies** a word, and `false` otherwise.\\\\n\\\\n### Examples\\\\n```\\\\nuniquely([\\\\\\\"ho\\\\\\\", \\\\\\\"h\\\\\\\", \\\\\\\"ha\\\\\\\"], [\\\\\\\"house\\\\\\\", \\\\\\\"hope\\\\\\\", \\\\\\\"happy\\\\\\\"]) ➞ false\\\\n// \\\\\\\"ho\\\\\\\" and \\\\\\\"h\\\\\\\" are ambiguous and can identify either \\\\\\\"house\\\\\\\" or \\\\\\\"hope\\\\\\\"\\\\n\\\\nuniquely([\\\\\\\"x\\\\\\\", \\\\\\\"l\\\\\\\", \\\\\\\"t\\\\\\\"], [\\\\\\\"xavier\\\\\\\", \\\\\\\"loves\\\\\\\", \\\\\\\"tesh\\\\\\\"]) ➞ true\\\\n\\\\nuniquely([\\\\\\\"s\\\\\\\", \\\\\\\"t\\\\\\\", \\\\\\\"v\\\\\\\"], [\\\\\\\"stamina\\\\\\\", \\\\\\\"television\\\\\\\", \\\\\\\"vindaloo\\\\\\\"]) ➞ true\\\\n\\\\nuniquely([\\\\\\\"bi\\\\\\\", \\\\\\\"b","thisId":"1996","channelHost":"edabit.com","id":"1996","opcode":"1","channelId":"2","timestamp":"1652648914719"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"556\\\"]}\"]","thisId":"1997","channelHost":"edabit.com","id":"1997","opcode":"1","channelId":"2","timestamp":"1652648914853"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3914","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"556\\\",\\\"result\\\":{\\\"_id\\\":\\\"YHa95Qi8yXTu8oQLL\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int countLoneOnes(long n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.130434782608696,\\\"quality\\\":0,\\\"familyId\\\":\\\"uBGgHJMAosFcHKoZn\\\",\\\"instructions\\\":\\\"Create a function which *counts* the cardinality of  lone `1`s  in a given number. **Lone** means the number doesn't appear more than once in a row.\\\\n\\\\n### Examples\\\\n```\\\\ncountLoneOnes(101) ➞ 2\\\\n\\\\ncountLoneOnes(1191) ➞ 1\\\\n\\\\ncountLoneOnes(1111) ➞ 0\\\\n\\\\ncountLoneOnes(462) ➞ 0\\\\n```\\\\n\\\\n### Notes\\\\nTests will only include positive whole numbers.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals;\\\\nimport org.junit.Test;\\\\n\\\\npublic class ChallengeTests {\\\\n\\\\t@Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertEquals(Challenge.countLoneOnes(101), 2);\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test\\\\n\\\\tpublic void test2() {\\\\n\\\\t\\\\tassertEquals(Challenge.countLoneO","thisId":"1998","channelHost":"edabit.com","id":"1998","opcode":"1","channelId":"2","timestamp":"1652648914856"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"557\\\"]}\"]","thisId":"1999","channelHost":"edabit.com","id":"1999","opcode":"1","channelId":"2","timestamp":"1652648914959"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4459","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"557\\\",\\\"result\\\":{\\\"_id\\\":\\\"buctumjkfFWGx5iP6\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String removeLastVowel(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.130434782608696,\\\"familyId\\\":\\\"acWufK4L7azWLKP4w\\\",\\\"instructions\\\":\\\"Write a function that removes the last vowel in each word in a sentence.\\\\n\\\\n### Examples\\\\n```\\\\nremoveLastVowel(\\\\\\\"Those who dare to fail miserably can achieve greatly.\\\\\\\")\\\\n➞ \\\\\\\"Thos wh dar t fal miserbly cn achiev gretly.\\\\\\\"\\\\n\\\\nremoveLastVowel(\\\\\\\"Love is a serious mental disease.\\\\\\\")\\\\n➞ \\\\\\\"Lov s  serios mentl diseas\\\\\\\"\\\\n\\\\nremoveLastVowel(\\\\\\\"Get busy living or get busy dying.\\\\\\\")\\\\n➞ \\\\\\\"Gt bsy livng r gt bsy dyng\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nVowels are: `a, e, i, o, u` (both upper and lowercase).\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEq","thisId":"2000","channelHost":"edabit.com","id":"2000","opcode":"1","channelId":"2","timestamp":"1652648914963"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"558\\\"]}\"]","thisId":"2001","channelHost":"edabit.com","id":"2001","opcode":"1","channelId":"2","timestamp":"1652648915056"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5479","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"558\\\",\\\"result\\\":{\\\"_id\\\":\\\"qaMkkFAaTJzbmkwwe\\\",\\\"author\\\":\\\"MrDrProfessor\\\",\\\"authorId\\\":\\\"Yohr2MmAyaWGMbB35\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static String pyramid(int height) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.1315789473684212,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"go46CMxwoPkRYdkyt\\\",\\\"instructions\\\":\\\"Write a Java program that produces the following outputs.\\\\n\\\\n### Examples\\\\n```\\\\npyramid(2) ➞\\\\n////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n********\\\\n```\\\\n```\\\\npyramid(3) ➞\\\\n////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n////********\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n****************\\\\n```\\\\n```\\\\npyramid(4) ➞\\\\n////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n////////********\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n////****************\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n************************\\\\n```\\\\n\\\\n### Notes\\\\n- Only positive integers >= 2.\\\\n- Last line ending should contain `\\\\\\\\n`\\\",\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.","thisId":"2002","channelHost":"edabit.com","id":"2002","opcode":"1","channelId":"2","timestamp":"1652648915061"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"559\\\"]}\"]","thisId":"2003","channelHost":"edabit.com","id":"2003","opcode":"1","channelId":"2","timestamp":"1652648915156"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7035","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"559\\\",\\\"result\\\":{\\\"_id\\\":\\\"BJkkDwsZrB8SFTAQ2\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String mangle(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.1382978723404253,\\\"familyId\\\":\\\"m93mNjW5ecgfgBALy\\\",\\\"instructions\\\":\\\"Create a function that takes a string and replaces every letter with the letter following it in the alphabet (\\\\\\\"c\\\\\\\" becomes \\\\\\\"d\\\\\\\", \\\\\\\"z\\\\\\\" becomes \\\\\\\"a\\\\\\\", \\\\\\\"b\\\\\\\" becomes \\\\\\\"c\\\\\\\", etc). Then capitalize every vowel (a, e, i, o, u) and return the new modified string.\\\\n\\\\n### Examples\\\\n```\\\\nmangle(\\\\\\\"Fun times!\\\\\\\") ➞ \\\\\\\"GvO Ujnft!\\\\\\\"\\\\n\\\\nmangle(\\\\\\\"The quick brown fox.\\\\\\\") ➞ \\\\\\\"UIf rvjdl cspxO gpy.\\\\\\\"\\\\n\\\\nmangle(\\\\\\\"Omega\\\\\\\") ➞ \\\\\\\"Pnfhb\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- If a letter is **already uppercase**, return it as uppercase (regardless of being a vowel).\\\\n- \\\\\\\"y\\\\\\\" is not considered a vowel.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Asse","thisId":"2004","channelHost":"edabit.com","id":"2004","opcode":"1","channelId":"2","timestamp":"1652648915162"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"560\\\"]}\"]","thisId":"2005","channelHost":"edabit.com","id":"2005","opcode":"1","channelId":"2","timestamp":"1652648915272"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5135","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"560\\\",\\\"result\\\":{\\\"_id\\\":\\\"sHWvPRwcY93w6qGNB\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String commonLastVowel(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.13953488372093,\\\"familyId\\\":\\\"RPc3dEvcJuWs5jd4y\\\",\\\"instructions\\\":\\\"Create a function that takes in a sentence as input and returns the **most common last vowel** in the sentence as a single character string.\\\\n\\\\n### Examples\\\\n```\\\\ncommonLastVowel(\\\\\\\"Hello World!\\\\\\\") ➞ \\\\\\\"o\\\\\\\"\\\\n\\\\ncommonLastVowel(\\\\\\\"Watch the characters dance!\\\\\\\") ➞ \\\\\\\"e\\\\\\\"\\\\n\\\\ncommonLastVowel(\\\\\\\"OOI UUI EEI AAI\\\\\\\") ➞ \\\\\\\"i\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- There will only be one common last vowel in each sentence.\\\\n- If the word has one vowel, treat the vowel as the last one **even if it is at the start of the word**.\\\\n- The question asks you to compile all of the last vowels of each word and returns the vowel in the list which appears most often.\\\\n- **y** won't coun","thisId":"2006","channelHost":"edabit.com","id":"2006","opcode":"1","channelId":"2","timestamp":"1652648915276"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"561\\\"]}\"]","thisId":"2007","channelHost":"edabit.com","id":"2007","opcode":"1","channelId":"2","timestamp":"1652648915388"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6209","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"561\\\",\\\"result\\\":{\\\"_id\\\":\\\"phxxGdTJraPEQmKdq\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String overTime(double[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.141304347826087,\\\"familyId\\\":\\\"gLciasniigZ265QBw\\\",\\\"instructions\\\":\\\"Write a function that calculates overtime and pay associated with overtime.\\\\n- Working 9 to 5: regular hours\\\\n- After 5pm is overtime\\\\n\\\\nYour function gets an array with 4 values:\\\\n- Start of working day, in decimal format, (24-hour day notation)\\\\n- End of working day. (Same format)\\\\n- Hourly rate\\\\n- Overtime multiplier\\\\n\\\\nYour function should spit out:\\\\n- `$` + earned that day (rounded to the nearest hundreth)\\\\n\\\\n### Examples\\\\n```\\\\noverTime([9, 17, 30, 1.5]) ➞ \\\\\\\"$240.00\\\\\\\"\\\\n\\\\noverTime([16, 18, 30, 1.8]) ➞ \\\\\\\"$84.00\\\\\\\"\\\\n\\\\noverTime([13.25, 15, 30, 1.5]) ➞ \\\\\\\"$52.50\\\\\\\"\\\\n```\\\\n\\\\n2nd example explained:\\\\n- From 16 to 17 is regular, so `1 * 30` = 30\\\\n- ","thisId":"2008","channelHost":"edabit.com","id":"2008","opcode":"1","channelId":"2","timestamp":"1652648915393"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"562\\\"]}\"]","thisId":"2009","channelHost":"edabit.com","id":"2009","opcode":"1","channelId":"2","timestamp":"1652648915491"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6261","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"562\\\",\\\"result\\\":{\\\"_id\\\":\\\"gskWj3Zj45ovAomTb\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class StringParser {\\\\n\\\\tpublic static Map<String, String> parseCode(String s) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.1463414634146343,\\\"familyId\\\":\\\"kfkyD6DWgpSEvNf6h\\\",\\\"instructions\\\":\\\"Create a function which takes in an encoded string and returns an object according to the following example:\\\\n\\\\n### Examples\\\\n```\\\\nparseCode(\\\\\\\"Tesha000Deep00014344\\\\\\\") ➞ {\\\\n  \\\\\\\"firstName\\\\\\\"=\\\\\\\"Tesha\\\\\\\",\\\\n  \\\\\\\"lastName\\\\\\\"=\\\\\\\"Deep\\\\\\\",\\\\n  \\\\\\\"id\\\\\\\"=\\\\\\\"14344\\\\\\\"\\\\n}\\\\n\\\\nparseCode(\\\\\\\"John000Doe000123\\\\\\\") ➞ {\\\\n  \\\\\\\"firstName\\\\\\\"=\\\\\\\"John\\\\\\\",\\\\n  \\\\\\\"lastName\\\\\\\"=\\\\\\\"Doe\\\\\\\",\\\\n  \\\\\\\"id\\\\\\\"=\\\\\\\"123\\\\\\\"\\\\n}\\\\n\\\\nparseCode(\\\\\\\"kevin0smith004331\\\\\\\") ➞ {\\\\n  \\\\\\\"firstName\\\\\\\"=\\\\\\\"kevin\\\\\\\",\\\\n  \\\\\\\"lastName\\\\\\\"=\\\\\\\"smith\\\\\\\",\\\\n  \\\\\\\"id\\\\\\\"=\\\\\\\"4331\\\\\\\"\\\\n}\\\\n\\\\nparseCode(\\\\\\\"Thomas00LEE0000043\\\\\\\") ➞ {\\\\n  \\\\\\\"firstName\\\\\\\"=\\\\\\\"Thomas\\\\\\\",\\\\n  \\\\","thisId":"2010","channelHost":"edabit.com","id":"2010","opcode":"1","channelId":"2","timestamp":"1652648915495"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"563\\\"]}\"]","thisId":"2011","channelHost":"edabit.com","id":"2011","opcode":"1","channelId":"2","timestamp":"1652648915607"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5429","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"563\\\",\\\"result\\\":{\\\"_id\\\":\\\"Tzwb5uASZbKuESHhJ\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Extremities {\\\\n  public static int[][] pairs(int[] arr) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.1470588235294117,\\\"familyId\\\":\\\"FzNgWsFwCEopaooy3\\\",\\\"instructions\\\":\\\"Write a function that pairs the first number in an array with the last, the second number with the second to last, etc.\\\\n\\\\n### Examples\\\\n```\\\\npairs([1, 1, 1, 1, 7, 2, 3, 2]) ➞ [[1, 2], [1, 3], [1, 2], [1, 7]]\\\\n\\\\npairs([5, 4, 4, 6, 6, 6, 4]) ➞ [[5, 4], [4, 6], [4, 6], [6, 6]]\\\\n\\\\npairs([1, 2, 3, 4, 5, 6, 7]) ➞ [[1, 7], [2, 6], [3, 5], [4, 4]]\\\\n\\\\npairs([1, 2, 3, 4, 5, 6]) ➞ [[1, 6], [2, 5], [3, 4]]\\\\n\\\\npairs([5, 9, 8, 1, 2]) ➞ [[5, 2], [9, 1], [8, 8]]\\\\n\\\\npairs([]) ➞ []\\\\n```\\\\n\\\\n### Notes\\\\n- If the array has an **odd length**, repeat the middle element twice for the last pair.\\\\n- Return an empty array if the input is an empty array.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":fal","thisId":"2012","channelHost":"edabit.com","id":"2012","opcode":"1","channelId":"2","timestamp":"1652648915613"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"564\\\"]}\"]","thisId":"2013","channelHost":"edabit.com","id":"2013","opcode":"1","channelId":"2","timestamp":"1652648915720"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6933","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"564\\\",\\\"result\\\":{\\\"_id\\\":\\\"zcobRojF5p8DWkfiC\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int[] characterMapping(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.1478260869565218,\\\"familyId\\\":\\\"v2vXvSGhrs2owz3Nw\\\",\\\"instructions\\\":\\\"Write a function that returns a character mapping from a word.\\\\n\\\\n### Examples\\\\n```\\\\ncharacterMapping(\\\\\\\"abcd\\\\\\\") ➞ [0, 1, 2, 3]\\\\n\\\\ncharacterMapping(\\\\\\\"abb\\\\\\\") ➞ [0, 1, 1]\\\\n\\\\ncharacterMapping(\\\\\\\"babbcb\\\\\\\") ➞ [0, 1, 0, 0, 2, 0]\\\\n\\\\ncharacterMapping(\\\\\\\"hmmmmm\\\\\\\") ➞ [0, 1, 1, 1, 1, 1]\\\\n```\\\\n\\\\n### Notes\\\\n- Start your counter at 0, and increment by **1** each time you encounter a new character.\\\\n- Identical characters should share the same number.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengTest {\\\\n\\\\t@Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertThat","thisId":"2014","channelHost":"edabit.com","id":"2014","opcode":"1","channelId":"2","timestamp":"1652648915729"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"565\\\"]}\"]","thisId":"2015","channelHost":"edabit.com","id":"2015","opcode":"1","channelId":"2","timestamp":"1652648915828"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4138","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"565\\\",\\\"result\\\":{\\\"_id\\\":\\\"ayvtiYuzTxkphRBxB\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String convertTime(String time) {\\\\n\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.15,\\\"familyId\\\":\\\"Brk8AbRDiawqFYgQv\\\",\\\"instructions\\\":\\\"Create a function that converts 12-hour time to 24-hour time or vice versa. Return the output as a string.\\\\n\\\\n### Examples\\\\n```\\\\nconvertTime(\\\\\\\"12:00 am\\\\\\\") ➞ \\\\\\\"0:00\\\\\\\"\\\\n\\\\nconvertTime(\\\\\\\"6:20 pm\\\\\\\") ➞ \\\\\\\"18:20\\\\\\\"\\\\n\\\\nconvertTime(\\\\\\\"21:00\\\\\\\") ➞ \\\\\\\"9:00 pm\\\\\\\"\\\\n\\\\nconvertTime(\\\\\\\"5:05\\\\\\\") ➞ \\\\\\\"5:05 am\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- A 12-hour time input will be denoted with an **am** or **pm** suffix.\\\\n- A 24-hour input time contains no suffix.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"0:00\\\\\\\", Challenge.convertTime(\\\\\\\"12:00 am\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\","thisId":"2016","channelHost":"edabit.com","id":"2016","opcode":"1","channelId":"2","timestamp":"1652648915832"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"566\\\"]}\"]","thisId":"2017","channelHost":"edabit.com","id":"2017","opcode":"1","channelId":"2","timestamp":"1652648915928"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6680","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"566\\\",\\\"result\\\":{\\\"_id\\\":\\\"PkqSq3ea2bfJvF6Tk\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class LetterGroup {\\\\n\\\\tpublic static String[] threeLetterCollection(String s) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.150943396226415,\\\"familyId\\\":\\\"SsD52eFxbqXCZbcKz\\\",\\\"instructions\\\":\\\"Given a string, return a **sorted array** of words formed from the first three letters, then the next three letters, shifting by only one.\\\\n\\\\n### Worked Example\\\\n```\\\\nthreeLetterCollection(\\\\\\\"edabit\\\\\\\") ➞ [\\\\\\\"abi\\\\\\\", \\\\\\\"bit\\\\\\\", \\\\\\\"dab\\\\\\\", \\\\\\\"eda\\\\\\\"]\\\\n// 1st word: \\\\\\\"eda\\\\\\\"\\\\n// 2nd word: \\\\\\\"dab\\\\\\\"\\\\n// 3rd word: \\\\\\\"abi\\\\\\\"\\\\n// 4th word: \\\\\\\"bit\\\\\\\"\\\\n// Remember to sort the array!\\\\n```\\\\n\\\\n### Examples\\\\n```\\\\nthreeLetterCollection(\\\\\\\"tesha\\\\\\\") ➞ [\\\\\\\"esh\\\\\\\", \\\\\\\"sha\\\\\\\", \\\\\\\"tes\\\\\\\"]\\\\n\\\\nthreeLetterCollection(\\\\\\\"click\\\\\\\") ➞ [\\\\\\\"cli\\\\\\\", \\\\\\\"ick\\\\\\\", \\\\\\\"lic\\\\\\\"]\\\\n\\\\nthreeLetterCollection(\\\\\\\"cat\\\\\\\") ➞ [\\\\\\\"cat\\\\\\\"]\\\\n\\\\nthreeLetterC","thisId":"2018","channelHost":"edabit.com","id":"2018","opcode":"1","channelId":"2","timestamp":"1652648915932"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"570\\\"]}\"]","thisId":"2019","channelHost":"edabit.com","id":"2019","opcode":"1","channelId":"2","timestamp":"1652648916027"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5976","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"570\\\",\\\"result\\\":{\\\"_id\\\":\\\"gdiL9PHcySFP74mnK\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean doesRhyme(String str1, String str2) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.152542372881356,\\\"familyId\\\":\\\"p96T3yjgM6zWPptEd\\\",\\\"instructions\\\":\\\"Create a function that returns `true` if two lines **rhyme** and `false` otherwise. For the purposes of this exercise, two lines rhyme if the **last word** from each sentence contains the **same vowels**.\\\\n\\\\n### Examples\\\\n```\\\\ndoesRhyme(\\\\\\\"Sam I am!\\\\\\\", \\\\\\\"Green eggs and ham.\\\\\\\") ➞ true\\\\n\\\\ndoesRhyme(\\\\\\\"Sam I am!\\\\\\\", \\\\\\\"Green eggs and HAM.\\\\\\\") ➞ true\\\\n// Capitalization and punctuation should not matter.\\\\n\\\\ndoesRhyme(\\\\\\\"You are off to the races\\\\\\\", \\\\\\\"a splendid day.\\\\\\\") ➞ false\\\\n\\\\ndoesRhyme(\\\\\\\"and frequently do?\\\\\\\", \\\\\\\"you gotta move.\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\n- Case insensitive.\\\\n- Here we are disregarding cases like _\\\\\\\"thyme\\\\\\\"_ and","thisId":"2020","channelHost":"edabit.com","id":"2020","opcode":"1","channelId":"2","timestamp":"1652648916031"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"567\\\"]}\"]","thisId":"2021","channelHost":"edabit.com","id":"2021","opcode":"1","channelId":"2","timestamp":"1652648916132"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6297","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"567\\\",\\\"result\\\":{\\\"_id\\\":\\\"BMpe6n3BSciWnt3fu\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Triangle {\\\\n\\\\tpublic static boolean isRightAngle(int[] arr, String desc) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.1515151515151514,\\\"familyId\\\":\\\"xcj798jd5HXwLcLYD\\\",\\\"instructions\\\":\\\"Find out if a right-angled triangle can be made given some facts about the shape.\\\\n\\\\n- Given varying information about a shape, create a function that returns `true` if the shape could be a right-angle triangle and `false` if not.\\\\n- You will be given an array of numbers and a string stating whether the numbers are angles or sides.\\\\n- The information may indicate more than one possible shape, but we just need to know if these details could be found in a right-angled triangle.\\\\n\\\\n### Examples\\\\n```\\\\nisRightAngle([30, 60], \\\\\\\"angle\\\\\\\") ➞ true\\\\n// A third angle could be 90\\\\n\\\\nisRightAngle([20, 20, 20, 20], \\\\\\\"angle\\\\\\\") ➞ false\\\\n// More than 3 sides\\\\n","thisId":"2022","channelHost":"edabit.com","id":"2022","opcode":"1","channelId":"2","timestamp":"1652648916146"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"569\\\"]}\"]","thisId":"2023","channelHost":"edabit.com","id":"2023","opcode":"1","channelId":"2","timestamp":"1652648916248"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5100","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"569\\\",\\\"result\\\":{\\\"_id\\\":\\\"dreQhsnZJ7HGtsts5\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class IntegerDigits {\\\\n\\\\tpublic static int count(int n) {\\\\n\\\\t\\\\t// your recursive solution in here\\\\n\\\\t}\\\\n}\\\\n\\\",\\\"difficulty\\\":2.1538461538461537,\\\"quality\\\":4.777777777777778,\\\"editorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"familyId\\\":\\\"99w67mApk7uLFejNG\\\",\\\"instructions\\\":\\\"Create a function that *recursively* counts the integer's number of digits.\\\\n\\\\n\\\\n### Examples\\\\n```\\\\ncount(318) ➞ 3\\\\n \\\\ncount(-92563) ➞ 5\\\\n \\\\ncount(4666) ➞ 4\\\\n\\\\ncount(-314890) ➞ 6\\\\n\\\\ncount(654321) ➞ 6\\\\n\\\\ncount(638476) ➞ 6\\\\n```\\\\n\\\\n\\\\n### Notes\\\\n- You are expected to solve this challenge via **recursion**.\\\\n- You can check on the **Resources** tab for more details about *recursion* in Java.\\\\n- An iterative version of this challenge can be found via this [link](https://edabit.com/challenge/4r33Yd2HuEireb3Sm).\\\\n- A collection of challenges in recursion can be found via","thisId":"2024","channelHost":"edabit.com","id":"2024","opcode":"1","channelId":"2","timestamp":"1652648916252"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"568\\\"]}\"]","thisId":"2025","channelHost":"edabit.com","id":"2025","opcode":"1","channelId":"2","timestamp":"1652648916376"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5490","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"568\\\",\\\"result\\\":{\\\"_id\\\":\\\"ZoDHtyWfFPttuTiQR\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean overlap(String str1, String str2) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.152173913043478,\\\"familyId\\\":\\\"8siAs5ra43CqJTfru\\\",\\\"instructions\\\":\\\"Create a function that takes two strings and returns `true` if either of the strings appears at the very end of the other string. Return `false` otherwise. The character `*` is a wildcard, so it can take the place of any character.\\\\n\\\\n### Examples\\\\n```\\\\noverlap(\\\\\\\"ABC\\\\\\\", \\\\\\\"Ican'tsingmyABC\\\\\\\") ➞ true\\\\n\\\\noverlap(\\\\\\\"abc\\\\\\\", \\\\\\\"Ican'tsingmyABC\\\\\\\") ➞ true\\\\n\\\\noverlap(\\\\\\\"Ican'tsingmyABC\\\\\\\", \\\\\\\"abc\\\\\\\") ➞ true\\\\n\\\\noverlap(\\\\\\\"hello world\\\\\\\", \\\\\\\"hello\\\\\\\") ➞ false\\\\n\\\\noverlap(\\\\\\\"+=\\\\\\\", \\\\\\\"this should work too +=\\\\\\\") ➞ true\\\\n\\\\noverlap(\\\\\\\"hey\\\\\\\", \\\\\\\"*********\\\\\\\") ➞ true\\\\n```\\\\n\\\\n### Notes\\\\nYour function should NOT be case sensitive (see example #2)","thisId":"2026","channelHost":"edabit.com","id":"2026","opcode":"1","channelId":"2","timestamp":"1652648916394"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"571\\\"]}\"]","thisId":"2027","channelHost":"edabit.com","id":"2027","opcode":"1","channelId":"2","timestamp":"1652648916456"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4827","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"571\\\",\\\"result\\\":{\\\"_id\\\":\\\"3xsxMziiw587r7xry\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int rySeq(int n, String s) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.156862745098039,\\\"familyId\\\":\\\"X86oKvx6Ef4Aprpa2\\\",\\\"instructions\\\":\\\"Write a function that takes a number `n` and a string `s` as arguments and returns the *n*th term of the Red/Yellow sequence. `s` will ask the function what to return, all, red or yellow.\\\\n\\\\n![alt text](https://edabit-challenges.s3.amazonaws.com/red_yellow_sequence.png \\\\\\\"Red/Yellow Sequence\\\\\\\")\\\\n\\\\n### Examples\\\\n```\\\\nrySeq(2, \\\\\\\"all\\\\\\\") ➞ 5\\\\n\\\\nrySeq(3, \\\\\\\"yellow\\\\\\\") ➞ 8\\\\n\\\\nrySeq(28, \\\\\\\"red\\\\\\\") ➞ 55\\\\n\\\\nrySeq(1, \\\\\\\"blue\\\\\\\") ➞ -1\\\\n```\\\\n\\\\n### Notes\\\\n- If `s` is not \\\\\\\"all\\\\\\\", \\\\\\\"yellow\\\\\\\" or \\\\\\\"red\\\\\\\", return `-1`.\\\\n- If `n` is 0, return `0`.\\\\n- `n` is always a positive integer.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;","thisId":"2028","channelHost":"edabit.com","id":"2028","opcode":"1","channelId":"2","timestamp":"1652648916459"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"572\\\"]}\"]","thisId":"2029","channelHost":"edabit.com","id":"2029","opcode":"1","channelId":"2","timestamp":"1652648916560"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6809","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"572\\\",\\\"result\\\":{\\\"_id\\\":\\\"Yr2kTTb6zf5PNx6DE\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String replace_nth(String txt, int nth, String old_char, String new_char) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.156862745098039,\\\"familyId\\\":\\\"X7HLP42E78BJpqnDg\\\",\\\"instructions\\\":\\\"Create a function that takes a string and replaces every `nth` instance of `old_char` with `new_char`. Your function will have four parameters:\\\\n\\\\n- **txt** — The original input text to be processed.\\\\n- **nth** — The `nth` instance to be replaced.\\\\n- **old_char** — The character being replaced.\\\\n- **new_char** — The character replacing `old_char`.\\\\n\\\\nIn other words, if `txt` is \\\\\\\"abababa\\\\\\\", `nth` is 3, `old_char` is \\\\\\\"a\\\\\\\" and `new_char` is \\\\\\\"Z\\\\\\\", you would replace the 3rd insrtance of \\\\\\\"a\\\\\\\" with \\\\\\\"Z\\\\\\\", returning \\\\\\\"ababZba\\\\\\\".\\\\n\\\\n### Examples\\\\n```\\\\nreplace_nth(\\\\\\\"A glittering gem is not enough.\\\\\\\", ","thisId":"2030","channelHost":"edabit.com","id":"2030","opcode":"1","channelId":"2","timestamp":"1652648916578"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"573\\\"]}\"]","thisId":"2031","channelHost":"edabit.com","id":"2031","opcode":"1","channelId":"2","timestamp":"1652648916686"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5293","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"573\\\",\\\"result\\\":{\\\"_id\\\":\\\"8Je7AoNP8NxPDobm8\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean canBuild(String s1, String s2) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.1578947368421053,\\\"familyId\\\":\\\"MjjsY2mZTLCjKxAmr\\\",\\\"instructions\\\":\\\"Write a function that returns `true` if it's possible to build a phrase `s1` using only the characters from another phrase `s2`.\\\\n\\\\n### Examples\\\\n```\\\\ncanBuild(\\\\\\\"got 2 go\\\\\\\", \\\\\\\"gogogo 2 today\\\\\\\") ➞ true\\\\n\\\\ncanBuild(\\\\\\\"sit on top\\\\\\\", \\\\\\\"its a moo point\\\\\\\") ➞ true\\\\n\\\\ncanBuild(\\\\\\\"long high add or\\\\\\\", \\\\\\\"highway road go long\\\\\\\") ➞ false\\\\n\\\\ncanBuild(\\\\\\\"fill tuck mid\\\\\\\", \\\\\\\"truck falls dim\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\n- All letters will be in lower case.\\\\n- Numbers and special characters included.\\\\n- Ignore whitespaces.\\\\n- Do not count white space as a character.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n","thisId":"2032","channelHost":"edabit.com","id":"2032","opcode":"1","channelId":"2","timestamp":"1652648916690"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"574\\\"]}\"]","thisId":"2033","channelHost":"edabit.com","id":"2033","opcode":"1","channelId":"2","timestamp":"1652648916780"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5437","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"574\\\",\\\"result\\\":{\\\"_id\\\":\\\"ACHoZjkBGijBvwbDP\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean isPowerful(int num) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.158536585365854,\\\"familyId\\\":\\\"neEAHwKbD45zfJa96\\\",\\\"instructions\\\":\\\"Given a positive number x:\\\\n```\\\\np = (p1, p2, …)\\\\n// Set of *prime* factors of x\\\\n```\\\\nIf the square of every item in p is also a factor of x, then x is said to be a **_powerful_** number.\\\\n\\\\nCreate a function that takes a number and returns `true` if it's powerful, `false` if it's not.\\\\n\\\\n### Examples\\\\n```\\\\nisPowerful(36) ➞ true\\\\n// p = (2, 3) (prime factors of 36)\\\\n// 2^2 = 4 (factor of 36)\\\\n// 3^2 = 9 (factor of 36)\\\\n\\\\nisPowerful(27) ➞ true\\\\n\\\\nisPowerful(674) ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(true,","thisId":"2034","channelHost":"edabit.com","id":"2034","opcode":"1","channelId":"2","timestamp":"1652648916784"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"575\\\"]}\"]","thisId":"2035","channelHost":"edabit.com","id":"2035","opcode":"1","channelId":"2","timestamp":"1652648916879"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3353","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"575\\\",\\\"result\\\":{\\\"_id\\\":\\\"axspsW5aide7vzpnh\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int mysteryFunc(int num) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.161290322580645,\\\"familyId\\\":\\\"ZPfFYmmH8mKXHurQt\\\",\\\"instructions\\\":\\\"This is a **reverse coding challenge**. Normally you're given explicit directions with how to create a function. Here, you must generate your own function to satisfy the relationship between the inputs and outputs.\\\\n\\\\nYour task is to create a function that, when fed the inputs below, produce the sample outputs shown.\\\\n\\\\n### Examples\\\\n```\\\\n832 ➞ 594\\\\n\\\\n51 ➞ 36\\\\n\\\\n7977 ➞ 198\\\\n\\\\n1 ➞ 0\\\\n\\\\n665 ➞ 99\\\\n\\\\n149 ➞ 0\\\\n```\\\\n\\\\n### Notes\\\\nIf you get stuck, see **Comments** for a hint.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(594, Challenge.mysteryFunc(832));","thisId":"2036","channelHost":"edabit.com","id":"2036","opcode":"1","channelId":"2","timestamp":"1652648916883"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"576\\\"]}\"]","thisId":"2037","channelHost":"edabit.com","id":"2037","opcode":"1","channelId":"2","timestamp":"1652648919397"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4852","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"576\\\",\\\"result\\\":{\\\"_id\\\":\\\"drRFWCuz8jWAPmFRj\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Sequence {\\\\n  public static boolean consecutiveCombo(int[] r,int[] s) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.15625,\\\"familyId\\\":\\\"bNh9bz2qG9CSA2QvJ\\\",\\\"instructions\\\":\\\"Write a function that returns `true` if two arrays, when combined, form a **consecutive sequence**. A consecutive sequence is a sequence without any gaps in the integers, e.g. `1, 2, 3, 4, 5` is a consecutive sequence, but `1, 2, 4, 5` is not.\\\\n\\\\n### Examples\\\\n```\\\\nconsecutiveCombo([12, 13, 17, 19], [14, 16, 15, 18]) ➞ true\\\\n\\\\nconsecutiveCombo([7, 4, 5, 1], [2, 3, 6]) ➞ true\\\\n\\\\nconsecutiveCombo([1, 4, 6, 5], [2, 7, 8, 9]) ➞ false\\\\n\\\\nconsecutiveCombo([1, 4, 5, 6], [2, 3, 7, 8, 10]) ➞ false\\\\n\\\\nconsecutiveCombo([44, 46], [45]) ➞ true\\\\n```\\\\n\\\\n### Notes\\\\n- The input arrays will have unique values.\\\\n- The input arrays can be in any order.\\\",\\\"isFlagged\\\":false,\\\"isFre","thisId":"2038","channelHost":"edabit.com","id":"2038","opcode":"1","channelId":"2","timestamp":"1652648919403"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"577\\\"]}\"]","thisId":"2039","channelHost":"edabit.com","id":"2039","opcode":"1","channelId":"2","timestamp":"1652648920319"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4507","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"577\\\",\\\"result\\\":{\\\"_id\\\":\\\"cb8wqy9qZjrq5wmp8\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean instrumentRange(String instr, String note) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.1621621621621623,\\\"familyId\\\":\\\"JGNNKeEip9e8AmKTH\\\",\\\"instructions\\\":\\\"Musical instruments have a range of notes to play, some instruments having a much larger range than others.\\\\n\\\\nGiven the following ranges for the instrument, create a function that returns `true` if a given note is within a given instrument's range. Otherwise, return `false`.\\\\n\\\\nInstrument | Range\\\\n--- | ---\\\\nPiccolo | D4-C7\\\\nTuba | D1-F4\\\\nGuitar | E3-E6\\\\nPiano | A0-C8\\\\nViolin | G3-A7\\\\n\\\\n### Examples\\\\n```\\\\ninstrumentRange(\\\\\\\"Piccolo\\\\\\\", \\\\\\\"A3\\\\\\\") ➞ false\\\\n\\\\ninstrumentRange(\\\\\\\"Violin\\\\\\\", \\\\\\\"G6\\\\\\\") ➞ true\\\\n\\\\ninstrumentRange(\\\\\\\"Piano\\\\\\\", \\\\\\\"C8\\\\\\\") ➞ true\\\\n```\\\\n\\\\n### Notes\\\\n- Tests will only include natural notes (i.e. you will only de","thisId":"2040","channelHost":"edabit.com","id":"2040","opcode":"1","channelId":"2","timestamp":"1652648920324"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"578\\\"]}\"]","thisId":"2041","channelHost":"edabit.com","id":"2041","opcode":"1","channelId":"2","timestamp":"1652648920403"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3914","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"578\\\",\\\"result\\\":{\\\"_id\\\":\\\"4HRk9MkZm4wNR6PZJ\\\",\\\"author\\\":\\\"Mubashir Hassan \\\",\\\"authorId\\\":\\\"T6iBEE2jp7f7iEF2P\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int memeSum(int a, int b) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.1621621621621623,\\\"familyId\\\":\\\"2RS3oKiYpnDfzWDKo\\\",\\\"instructions\\\":\\\"For this challenge, forget how to add two numbers together. The best explanation on what to do for this function is this meme:\\\\n\\\\n![Alternative Text](https://edabit-challenges.s3.amazonaws.com/caf.jpg)\\\\n\\\\n### Examples\\\\n```\\\\nmemeSum(26, 39) ➞ 515\\\\n// 2+3 = 5, 6+9 = 15\\\\n// 26 + 39 = 515\\\\n\\\\nmemeSum(122, 81) ➞ 1103\\\\n// 1+0 = 1, 2+8 = 10, 2+1 = 3\\\\n// 122 + 81 = 1103\\\\n\\\\nmemeSum(1222, 30277) ➞ 31499\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport static org.junit.Assert.assertThat;\\\\n\\\\npublic class ChallengeTest {\\\\n\\\\t@Test \\\\n\\\\t\\\\tpublic void test1","thisId":"2042","channelHost":"edabit.com","id":"2042","opcode":"1","channelId":"2","timestamp":"1652648920410"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"579\\\"]}\"]","thisId":"2043","channelHost":"edabit.com","id":"2043","opcode":"1","channelId":"2","timestamp":"1652648920520"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4851","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"579\\\",\\\"result\\\":{\\\"_id\\\":\\\"f72omtBYFEBotgdEX\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String expand(long int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.1639344262295084,\\\"familyId\\\":\\\"MQiG8cWkgMDNqeorq\\\",\\\"instructions\\\":\\\"Create a function that takes a _number_ and return a _string_ with the number in expanded notation (AKA expanded form). See the resources tab for details on expanded notation.\\\\n\\\\n### Examples\\\\n```\\\\nexpand(13) ➞ \\\\\\\"10 + 3\\\\\\\"\\\\n\\\\nexpand(86) ➞ \\\\\\\"80 + 6\\\\\\\"\\\\n\\\\nexpand(17000000) ➞ \\\\\\\"10000000 + 7000000\\\\\\\"\\\\n\\\\nexpand(5325) ➞ \\\\\\\"5000 + 300 + 20 + 5\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nYou can expect only whole numbers greater than 0 as test input.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"10 + 3\\\\\\\", Challenge.expand(13));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public ","thisId":"2044","channelHost":"edabit.com","id":"2044","opcode":"1","channelId":"2","timestamp":"1652648920524"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"580\\\"]}\"]","thisId":"2045","channelHost":"edabit.com","id":"2045","opcode":"1","channelId":"2","timestamp":"1652648920637"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6324","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"580\\\",\\\"result\\\":{\\\"_id\\\":\\\"63GZYcgtT7XiSjsKL\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String word_rank(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.164383561643836,\\\"familyId\\\":\\\"G4ic6cGb9gEyv86eZ\\\",\\\"instructions\\\":\\\"Create a function that takes a string of words and returns the highest scoring word. Each letter of a word scores points according to it's position in the alphabet: a = 1, b = 2, c = 3, etc.\\\\n\\\\n### Examples\\\\n```\\\\nword_rank(\\\\\\\"The quick brown fox.\\\\\\\") ➞ \\\\\\\"brown\\\\\\\"\\\\n\\\\nword_rank(\\\\\\\"Nancy is very pretty.\\\\\\\") ➞ \\\\\\\"pretty\\\\\\\"\\\\n\\\\nword_rank(\\\\\\\"Check back tomorrow, man!\\\\\\\") ➞ \\\\\\\"tomorrow\\\\\\\"\\\\n\\\\nword_rank(\\\\\\\"Wednesday is hump day.\\\\\\\") ➞ \\\\\\\"Wednesday\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- If two words score the same, return the word that appears first in the original string.\\\\n- The returned string should only contain alphabetic characters (a-z).\\\\n- Preserve case in the ret","thisId":"2046","channelHost":"edabit.com","id":"2046","opcode":"1","channelId":"2","timestamp":"1652648920640"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"581\\\"]}\"]","thisId":"2047","channelHost":"edabit.com","id":"2047","opcode":"1","channelId":"2","timestamp":"1652648920751"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6293","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"581\\\",\\\"result\\\":{\\\"_id\\\":\\\"GqqYA3RKuok5Pw2Bx\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class BinaryConvert {\\\\n  public static String binaryConversion(String bin) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.1666666666666665,\\\"familyId\\\":\\\"ibACzTMt3sz9F6n6p\\\",\\\"instructions\\\":\\\"Create a function that takes a string of 1's and 0's (binary) as an argument and return the equivalent decoded ASCII text. Characters can be in the range of \\\\\\\"00000000\\\\\\\" to \\\\\\\"11111111\\\\\\\", which means every **eight digits** of binary input represents a single character.\\\\n\\\\n- a = 01100001\\\\n- b = 01100010\\\\n- c = 01100011\\\\n\\\\nIf you were to combine these characters into the string \\\\\\\"abc\\\\\\\", the corresponding binary would be 011000010110001001100011. Use the resources tab for more info on how to approach this.\\\\n\\\\n### Examples\\\\n```\\\\nbinaryConversion(\\\\\\\"010010010010000001101100011011110111011001100101001000000101010001100101011100110110100000100001\\\\\\\") \\\\","thisId":"2048","channelHost":"edabit.com","id":"2048","opcode":"1","channelId":"2","timestamp":"1652648920756"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"585\\\"]}\"]","thisId":"2049","channelHost":"edabit.com","id":"2049","opcode":"1","channelId":"2","timestamp":"1652648920854"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5878","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"585\\\",\\\"result\\\":{\\\"_id\\\":\\\"mPJzNuYJoJmMiAWhh\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class SentenceAtWord {\\\\n  public static String sentenceSearcher(String s, String w) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.176470588235294,\\\"familyId\\\":\\\"GYNqNkXsn8sdBms46\\\",\\\"instructions\\\":\\\"Create a function that returns the whole of the first sentence which contains a specific word. Include the full stop at the end of the sentence.\\\\n\\\\n### Examples\\\\n```\\\\nfinal String str1 = \\\\\\\"For the love of Tesh. She is the love of my life. I am all hers.\\\\\\\";\\\\nfinal String str2 = \\\\\\\"I have a cat. I have a mat. Things are going swell.\\\\\\\";\\\\n\\\\nsentenceSearcher(str1, \\\\\\\"LOVE\\\\\\\") ➞ \\\\\\\"For the love of Tesh.\\\\\\\"\\\\n\\\\nsentenceSearcher(str1, \\\\\\\"LIFE\\\\\\\") ➞ \\\\\\\"She is the love of my life.\\\\\\\"\\\\n\\\\nsentenceSearcher(str1, \\\\\\\"hers\\\\\\\") ➞ \\\\\\\"I am all hers.\\\\\\\"\\\\n\\\\nsentenceSearcher(str2, \\\\\\\"MAT\\\\\\\") ➞ \\\\\\\"I have a mat.\\\\\\\"\\\\n\\\\nsentenceSearcher(str2, \\\\\\\"thi","thisId":"2050","channelHost":"edabit.com","id":"2050","opcode":"1","channelId":"2","timestamp":"1652648920858"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"583\\\"]}\"]","thisId":"2051","channelHost":"edabit.com","id":"2051","opcode":"1","channelId":"2","timestamp":"1652648920976"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4483","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"583\\\",\\\"result\\\":{\\\"_id\\\":\\\"NkatKxjHtPed4J3EF\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int sumOfHoles(int N) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.173076923076923,\\\"familyId\\\":\\\"bLJs4iAZxiqnqfLpG\\\",\\\"instructions\\\":\\\"What do the digits 0, 4, 6, 8, and 9 have in common? Well, they are whole numbers... and they are also _hole_ numbers (not actually a thing until now). Hole numbers are numbers with holes in their shapes (8 is special in that it contains two holes).\\\\n\\\\n14 is a hole number with one hole. 88 is a hole number with four holes.\\\\n\\\\nYour task is to create a function with argument `N` that returns the sum of the holes for the integers _n_ in the range of range _0 < n <= N_.\\\\n\\\\nTo illustrate, `sumOfHoles(14)` returns `7`, because there are 7 holes in 4, 6, 8, 9, 10 and 14.\\\\n\\\\n### Examples\\\\n```\\\\nsumOfHoles(4) ➞ 1\\\\n\\\\nsumOfHoles(6) ➞ 2\\\\n\\\\nsumOfHoles(8) ➞ 4\\\\n\\\\nsumOfHoles(6259) ➞ 12345\\\\n```","thisId":"2052","channelHost":"edabit.com","id":"2052","opcode":"1","channelId":"2","timestamp":"1652648920980"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"586\\\"]}\"]","thisId":"2053","channelHost":"edabit.com","id":"2053","opcode":"1","channelId":"2","timestamp":"1652648921118"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7504","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"586\\\",\\\"result\\\":{\\\"_id\\\":\\\"WmGeYLJbud69ezCew\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class PrisonersDilemma {\\\\n  public static int[] getCoinBalances(String[] r, String[] b) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.176470588235294,\\\"familyId\\\":\\\"Wko2QX35PzCZasRnB\\\",\\\"instructions\\\":\\\"Let's say that there exists a machine that gives out free coins, but with a twist!\\\\n\\\\nSeparating two people is a wall, and this machine is placed in such a way that both people are able to access it. Spending a coin in this machine will give the person on the other side **3 coins** and vice versa.\\\\n\\\\nIf both people continually spend coins for each other (SHARING), then they'll both gain a net profit of **2 coins per turn.** However, there is always the possibility for someone to act selfishly (STEALING): they spend no coins, yet they still receive the generous **3 coin** gift from the other person!\\\\n\\\\n*Here's an example of Red taking advantage of Gree","thisId":"2054","channelHost":"edabit.com","id":"2054","opcode":"1","channelId":"2","timestamp":"1652648921122"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"582\\\"]}\"]","thisId":"2055","channelHost":"edabit.com","id":"2055","opcode":"1","channelId":"2","timestamp":"1652648921238"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4716","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"582\\\",\\\"result\\\":{\\\"_id\\\":\\\"oXXBnHjXLAHKcvqXN\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int periodic(String str) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.183333333333333,\\\"familyId\\\":\\\"r5HPvJFoKqYX8TfaG\\\",\\\"instructions\\\":\\\"This challenge involves a series that can start with any string of digits. The next term in the series is found by adding the digits of the previous term, appending that sum to the previous term, and then truncating the leftmost digits so that the number of digits in the terms is always the same.\\\\n\\\\nLet's start with \\\\\\\"1234\\\\\\\". The sum of the digits is 10. Appending gives us \\\\\\\"123410\\\\\\\", then truncating the left two digits results in \\\\\\\"3410\\\\\\\". The next three terms are \\\\\\\"4108\\\\\\\", \\\\\\\"0813\\\\\\\", \\\\\\\"1312\\\\\\\". The series becomes periodic when a term that previously appeared occurs again.\\\\n\\\\nExample:\\\\n\\\\n```\\\\n\\\\\\\"124\\\\\\\", \\\\\\\"247\\\\\\\", \\\\\\\"713\\\\\\\", \\\\\\\"311\\\\\\\", \\\\\\\"115\\\\\\\", \\\\\\\"","thisId":"2056","channelHost":"edabit.com","id":"2056","opcode":"1","channelId":"2","timestamp":"1652648921244"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"584\\\"]}\"]","thisId":"2057","channelHost":"edabit.com","id":"2057","opcode":"1","channelId":"2","timestamp":"1652648921315"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3394","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"584\\\",\\\"result\\\":{\\\"_id\\\":\\\"YPgPqMa7adXdh2svk\\\",\\\"author\\\":\\\"Mateusz Mędrowski\\\",\\\"authorId\\\":\\\"hPx9H3YM8j2k94DNW\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static String javelinThrow(double v, int a) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.176470588235294,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"jew93kFk8v29h88wY\\\",\\\"instructions\\\":\\\"Write a function that takes initial speed (`v` in m/s) and throw angle (`a` in degrees) and returns the maximum height and maximum range reached by javelin as a string.\\\\n\\\\n### Examples\\\\n```\\\\njavelinThrow(36.7, 45) ➞ \\\\\\\"Ymax=34m, Xmax=137m\\\\\\\"\\\\n\\\\njavelinThrow(51.3, 20) ➞ \\\\\\\"Ymax=16m, Xmax=172m\\\\\\\"\\\\n\\\\njavelinThrow(100.1, 89) ➞ \\\\\\\"Ymax=511m, Xmax=36m\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Javelin starts moving at `h=0m`.\\\\n- Gravitational acceleration is `g=9.81 m/s^2`.\\\\n- All results should be rounded to the nearest whole number.\\\\n- You can find all mathematical equations in **Resources**.\\\\n- Remember that `Math.sin()` and `Math.c","thisId":"2058","channelHost":"edabit.com","id":"2058","opcode":"1","channelId":"2","timestamp":"1652648921318"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"587\\\"]}\"]","thisId":"2059","channelHost":"edabit.com","id":"2059","opcode":"1","channelId":"2","timestamp":"1652648921440"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4541","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"587\\\",\\\"result\\\":{\\\"_id\\\":\\\"FTxGaCEDJaidPqs3Z\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Fulcrum {\\\\n  public static int findFulcrum(int[] arr) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.1785714285714284,\\\"familyId\\\":\\\"FTMWkhsN8EmuGqvTz\\\",\\\"instructions\\\":\\\"A **fulcrum** of a list is an integer such that all elements to the left of it and all elements to the right of it sum to the same value. Write a function that finds the **fulcrum** of a list.\\\\n\\\\nTo illustrate:\\\\n```\\\\nfindFulcrum([3, 1, 5, 2, 4, 6, -1]) ➞ 2\\\\n// Since [3, 1, 5] and [4, 6, -1] both sum to 9\\\\n```\\\\n\\\\n### Examples\\\\n```\\\\nfindFulcrum([1, 2, 4, 9, 10, -10, -9, 3]) ➞ 4\\\\n\\\\nfindFulcrum([9, 1, 9]) ➞ 1\\\\n\\\\nfindFulcrum([5, 4, 4, 4, 6, 6, 6]) ➞ -1\\\\n\\\\nfindFulcrum([7, -1, 0, -1, 1, 1, 2, 3]) ➞ 0\\\\n\\\\nfindFulcrum([8, 8, 8, 8]) ➞ -1\\\\n```\\\\n\\\\n### Notes\\\\n- If the fulcrum does not exist, return `-1` (see example #3).\\\\n- Exclude the leftmost and rightmost elements when co","thisId":"2060","channelHost":"edabit.com","id":"2060","opcode":"1","channelId":"2","timestamp":"1652648921444"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"588\\\"]}\"]","thisId":"2061","channelHost":"edabit.com","id":"2061","opcode":"1","channelId":"2","timestamp":"1652648921554"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4505","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"588\\\",\\\"result\\\":{\\\"_id\\\":\\\"Cu6euwD8Mi2c7BAHd\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean bracketLogic(String xp) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.1818181818181817,\\\"familyId\\\":\\\"hmtGPgNhHdukaTbh6\\\",\\\"instructions\\\":\\\"Brackets and parentheses in mathematical expressions have to conform to certain logical rules. Every opening bracket must have a closing mate somewhere further down the line. Although brackets can be nested, different types cannot overlap:\\\\n\\\\n- `([<x+y>+3]-1)` makes sense because each set of brackets contains or is contained by another set.\\\\n- `([<x+y>+3)-1]` makes no sense because the parentheses and the square brackets overlap.\\\\n\\\\nGiven a string expression that can contain four types of brackets: `() <> []  {}`, create a function that returns `true` if the bracket logic is valid and `false` if it is not.\\\\n\\\\n### Examples\\\\n```\\\\nbracketLogic(\\\\\\\"[<>()]\\\\\\\") ➞ true\\\\n\\\\nbracke","thisId":"2062","channelHost":"edabit.com","id":"2062","opcode":"1","channelId":"2","timestamp":"1652648921558"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"589\\\"]}\"]","thisId":"2063","channelHost":"edabit.com","id":"2063","opcode":"1","channelId":"2","timestamp":"1652648921667"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4665","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"589\\\",\\\"result\\\":{\\\"_id\\\":\\\"rEuWBDwABDMo2rTSt\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String afterPotion(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.180327868852459,\\\"familyId\\\":\\\"CBDx43DNiChGJ3k4H\\\",\\\"instructions\\\":\\\"There are two types of potions:\\\\n\\\\n1. **Growing potion**: `\\\\\\\"A\\\\\\\"`\\\\n2. **Shrinking potion**: `\\\\\\\"B\\\\\\\"`\\\\n\\\\n- If `\\\\\\\"A\\\\\\\"` immediately follows a **digit**, add 1 to the digit.\\\\n- If `\\\\\\\"B\\\\\\\"` immediately follows a **digit**, subtract 1 from the digit.\\\\n\\\\nCreate a function that returns a string according to these rules, removing the potions once they've been consumed.\\\\n\\\\n### Examples\\\\n```\\\\nafterPotion(\\\\\\\"3A78B51\\\\\\\") ➞ \\\\\\\"47751\\\\\\\"\\\\n// 3 grows to 4, 8 shrinks to 7\\\\n\\\\nafterPotion(\\\\\\\"9999B\\\\\\\") ➞ \\\\\\\"9998\\\\\\\"\\\\n\\\\nafterPotion(\\\\\\\"9A123\\\\\\\") ➞ \\\\\\\"10123\\\\\\\"\\\\n\\\\nafterPotion(\\\\\\\"567\\\\\\\") ➞ \\\\\\\"567\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Digits that do not have a potion on th","thisId":"2064","channelHost":"edabit.com","id":"2064","opcode":"1","channelId":"2","timestamp":"1652648921671"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"590\\\"]}\"]","thisId":"2065","channelHost":"edabit.com","id":"2065","opcode":"1","channelId":"2","timestamp":"1652648921768"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4604","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"590\\\",\\\"result\\\":{\\\"_id\\\":\\\"whdNuCbR69fpLhbBv\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class LeftShift {\\\\n\\\\tpublic static int shiftToLeft(int x, int y) {\\\\n\\\\t\\\\t// recursive code here\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.1842105263157894,\\\"editorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"familyId\\\":\\\"XFQD7n28AuFNqAuYp\\\",\\\"instructions\\\":\\\"The **left shift** operation is similar to **multiplication by powers of two**, thus, the process is _repetitive_ and can be done _recursively_.\\\\n\\\\nSample calculation using the left shift operator (` << `):\\\\n```\\\\n10 << 3 = 10 * 2^3 = 10 * 8 = 80\\\\n-32 << 2 = -32 * 2^2 = -32 * 4 = -128\\\\n5 << 2 = 5 * 2^2 = 5 * 4 = 20\\\\n```\\\\n\\\\nWrite a **recursive** function that **mimics** (without the use of **<<**) the left shift operator and returns the result from the two given integers.\\\\n\\\\n### Examples\\\\n```\\\\nshiftToLeft(5, 2) ➞ 20\\\\n\\\\nshiftToLeft(10, 3) ➞ 80\\\\n\\\\nshiftToLeft(-32, 2) ➞ -128\\\\n\\\\nshiftToLeft(-6, 5) ➞ -192\\\\n\\","thisId":"2066","channelHost":"edabit.com","id":"2066","opcode":"1","channelId":"2","timestamp":"1652648921773"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"591\\\"]}\"]","thisId":"2067","channelHost":"edabit.com","id":"2067","opcode":"1","channelId":"2","timestamp":"1652648921866"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8153","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"591\\\",\\\"result\\\":{\\\"_id\\\":\\\"MfiTruQj2gtABxw5y\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"import java.util.AbstractMap.SimpleEntry;\\\\nimport java.util.ArrayList;\\\\nimport java.util.Map;\\\\n\\\\npublic class PageChapter {\\\\n\\\\tpublic static String closestToPage(ArrayList<Map.Entry<String, Integer> > c, int p) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.2777777777777777,\\\"editorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"familyId\\\":\\\"nCbERvJLFP5iHW7iM\\\",\\\"instructions\\\":\\\"Write a function that returns the **closest chapter** to the current **page** you are at. If two chapters are **similarly close**, return whichever has the **higher** page.\\\\n\\\\n### Examples\\\\n```\\\\nclosestToPage(new ArrayList<Map.Entry<String, Integer> >(\\\\n  Arrays.asList(\\\\n      new SimpleEntry<String, Integer>(\\\\\\\"Chapter 1\\\\\\\", 1),\\\\n      new SimpleEntry<String, Integer>(\\\\\\\"Chapter 2\\\\\\\", 15),\\\\n      new SimpleEntry<String, Integer>(\\\\\\\"Chapter 3\\\\\\\", 37)  \\\\n)), 10) ➞ \\\\\\\"Chapter 2\\\\\\\"\\\\n\\\\n\\","thisId":"2068","channelHost":"edabit.com","id":"2068","opcode":"1","channelId":"2","timestamp":"1652648921875"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"592\\\"]}\"]","thisId":"2069","channelHost":"edabit.com","id":"2069","opcode":"1","channelId":"2","timestamp":"1652648921969"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4354","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"592\\\",\\\"result\\\":{\\\"_id\\\":\\\"rCkeAiRCpduosZ4Hj\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class DigitSharing {\\\\n\\\\tpublic static boolean sharedDigits(int[] num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.185185185185185,\\\"familyId\\\":\\\"qwSHMpB85jjTZM5TW\\\",\\\"instructions\\\":\\\"Create a function that returns `true` if each pair of adjacent numbers in an array shares **at least one digit** and `false` otherwise.\\\\n\\\\n### Examples\\\\n```\\\\nsharedDigits([12, 13, 17, 19, 79]) ➞ true\\\\n// 12 and 13 share 1, 13 and 17 share 1 and etc.\\\\n\\\\nsharedDigits([33, 53, 6351, 12, 2242, 44]) ➞ true\\\\n// 33 and 53 share 3, 53 and 6351 share 3 and 5, etc.\\\\n\\\\nsharedDigits([33, 44, 55, 66, 77]) ➞ false\\\\n\\\\nsharedDigits([1, 11, 12, 13, 14, 15, 16]) ➞ true\\\\n\\\\nsharedDigits([1, 12, 123, 1234, 1235, 6789]) ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"/** \\\\n===================================== \\\\nTestGen 2.3 ","thisId":"2070","channelHost":"edabit.com","id":"2070","opcode":"1","channelId":"2","timestamp":"1652648921972"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"593\\\"]}\"]","thisId":"2071","channelHost":"edabit.com","id":"2071","opcode":"1","channelId":"2","timestamp":"1652648922072"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4856","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"593\\\",\\\"result\\\":{\\\"_id\\\":\\\"5XfpX2EEgRGWQELEx\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String highestPair(String[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.196969696969697,\\\"familyId\\\":\\\"5a75Ndmf3firBve8t\\\",\\\"instructions\\\":\\\"You will be given a collection of five cards (representing a player's hand in poker). If your hand contains at least one pair, return the card number of the highest pair (trivial if there only exists a single pair). Else, return \\\\\\\"\\\\\\\".\\\\n\\\\n### Examples\\\\n```\\\\nhighestPair([\\\\\\\"A\\\\\\\", \\\\\\\"A\\\\\\\", \\\\\\\"Q\\\\\\\", \\\\\\\"Q\\\\\\\", \\\\\\\"6\\\\\\\" ]) ➞ \\\\\\\"A\\\\\\\"\\\\n\\\\nhighestPair([\\\\\\\"J\\\\\\\", \\\\\\\"6\\\\\\\", \\\\\\\"3\\\\\\\", \\\\\\\"10\\\\\\\", \\\\\\\"8\\\\\\\"]) ➞ \\\\\\\"\\\\\\\"\\\\n\\\\nhighestPair([\\\\\\\"K\\\\\\\", \\\\\\\"7\\\\\\\", \\\\\\\"3\\\\\\\", \\\\\\\"9\\\\\\\", \\\\\\\"3\\\\\\\"]) ➞ \\\\\\\"3\\\\\\\"\\\\n\\\\nhighestPair([\\\\\\\"K\\\\\\\", \\\\\\\"9\\\\\\\", \\\\\\\"10\\\\\\\", \\\\\\\"J\\\\\\\", \\\\\\\"Q\\\\\\\"]) ➞ \\\\\\\"\\\\\\\"\\\\n\\\\nhighestPair([\\\\\\\"3\\\\\\\", \\\\\\\"5\\\\\\\", \\\\\\\"5\\\\\\\", \\\\\\\"5\\\\\\\", \\\\\\\"5\\\\\\\"]) ➞ \\","thisId":"2072","channelHost":"edabit.com","id":"2072","opcode":"1","channelId":"2","timestamp":"1652648922077"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"594\\\"]}\"]","thisId":"2073","channelHost":"edabit.com","id":"2073","opcode":"1","channelId":"2","timestamp":"1652648922170"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3638","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"594\\\",\\\"result\\\":{\\\"_id\\\":\\\"TSKay7qmB2KyrDwnK\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String spoonerise(String phrase) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.2,\\\"familyId\\\":\\\"KAbFijFbR7Ez4QCPL\\\",\\\"instructions\\\":\\\"A spoonerism is when the first letters / sounds of two words are transposed onto one another. Create a function that takes a two-word string and performs a spoonerism on the phrase.\\\\n\\\\n### Examples\\\\n```\\\\nspoonerise(\\\\\\\"history lecture\\\\\\\") ➞ \\\\\\\"listory hecture\\\\\\\"\\\\n\\\\nspoonerise(\\\\\\\"loud noises\\\\\\\") ➞ \\\\\\\"noud loises\\\\\\\"\\\\n\\\\nspoonerise(\\\\\\\"chow mein\\\\\\\") ➞ \\\\\\\"mow chein\\\\\\\"\\\\n\\\\nspoonerise(\\\\\\\"edabit rules!\\\\\\\") ➞ \\\\\\\"redabit ules!\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Only two words will be parsed into the function. Don't worry about handling more than two.\\\\n- You won't always just have to swap the first letters, take care to notice which letters have been switched in the examples (notice the di","thisId":"2074","channelHost":"edabit.com","id":"2074","opcode":"1","channelId":"2","timestamp":"1652648922174"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"595\\\"]}\"]","thisId":"2075","channelHost":"edabit.com","id":"2075","opcode":"1","channelId":"2","timestamp":"1652648922283"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7973","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"595\\\",\\\"result\\\":{\\\"_id\\\":\\\"q5tAZPFbLzuERDybw\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String happyAlgorithm(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.215686274509804,\\\"familyId\\\":\\\"ZabXBMvQ95daB6rAZ\\\",\\\"instructions\\\":\\\"In this challenge, you have to implement an algorithm to establish if a given positive integer `num` is a Happy number, and how many steps of the algorithm are needed to establish it.\\\\n\\\\nYou have to repeatedly transform the given `num` into the sum of its squared digits:\\\\n- If after the transformation the new number is equal to `1`, `num` is a Happy number and the algorithm stops.\\\\n- If after the transformation, the new number is not equal to `1`, you have to transform it again.\\\\n\\\\n![Happy Numbers](https://edabit-challenges.s3.amazonaws.com/happyjcnc.png)\\\\n\\\\nIf a number can't be reduced to `1`, sooner or later the algorithm will enter into an infinitely repeating loop:\\\\n\\\\n`","thisId":"2076","channelHost":"edabit.com","id":"2076","opcode":"1","channelId":"2","timestamp":"1652648922286"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"596\\\"]}\"]","thisId":"2077","channelHost":"edabit.com","id":"2077","opcode":"1","channelId":"2","timestamp":"1652648922424"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4620","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"596\\\",\\\"result\\\":{\\\"_id\\\":\\\"bmwpoeCybNWnBxn7M\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String simplify(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.207547169811321,\\\"familyId\\\":\\\"hvrw8zyKZAJ4jAgto\\\",\\\"instructions\\\":\\\"Create a function that returns the simplified version of a fraction.\\\\n\\\\n### Examples\\\\n```\\\\nsimplify(\\\\\\\"4/6\\\\\\\") ➞ \\\\\\\"2/3\\\\\\\"\\\\n\\\\nsimplify(\\\\\\\"10/11\\\\\\\") ➞ \\\\\\\"10/11\\\\\\\"\\\\n\\\\nsimplify(\\\\\\\"100/400\\\\\\\") ➞ \\\\\\\"1/4\\\\\\\"\\\\n\\\\nsimplify(\\\\\\\"8/4\\\\\\\") ➞ \\\\\\\"2\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- A fraction is simplified if there are no common factors (except 1) between the numerator and the denominator. For example, `4/6` is **not** simplified, since `4` and `6` both share `2` as a factor.\\\\n- If improper fractions can be transformed into integers, do so in your code (see example #4).\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests ","thisId":"2078","channelHost":"edabit.com","id":"2078","opcode":"1","channelId":"2","timestamp":"1652648922428"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"597\\\"]}\"]","thisId":"2079","channelHost":"edabit.com","id":"2079","opcode":"1","channelId":"2","timestamp":"1652648922529"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4272","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"597\\\",\\\"result\\\":{\\\"_id\\\":\\\"GPAXxz5EPgSMby3fd\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean sameLength(String str) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.2083333333333335,\\\"familyId\\\":\\\"ptRGAHwH8ongcPwfx\\\",\\\"instructions\\\":\\\"Write a function that returns `true` if every consecutive sequence of **ones** is followed by a consecutive sequence of **zeroes** of the same length.\\\\n\\\\n### Examples\\\\n```\\\\nsameLength(\\\\\\\"110011100010\\\\\\\") ➞ true\\\\n\\\\nsameLength(\\\\\\\"101010110\\\\\\\") ➞ false\\\\n\\\\nsameLength(\\\\\\\"111100001100\\\\\\\") ➞ true\\\\n\\\\nsameLength(\\\\\\\"111\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(true, Challenge.sameLength(\\\\\\\"10\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(true, Challenge.sameLength(\\\\\\\"1010\\\\\\\"));\\","thisId":"2080","channelHost":"edabit.com","id":"2080","opcode":"1","channelId":"2","timestamp":"1652648922533"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"599\\\"]}\"]","thisId":"2081","channelHost":"edabit.com","id":"2081","opcode":"1","channelId":"2","timestamp":"1652648922631"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5535","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"599\\\",\\\"result\\\":{\\\"_id\\\":\\\"WbNwkvFJf63rTutWo\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class FibonacciString {\\\\n\\\\tpublic static String generateString(int n, String[] s) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.212121212121212,\\\"quality\\\":0,\\\"familyId\\\":\\\"3xMYyE96KKa6Bz7qv\\\",\\\"instructions\\\":\\\"A **Fibonacci string** is a precedence of the *Fibonacci series*. It works with any two characters of the English alphabet (as opposed to the numbers `0` and `1` in the Fibonacci series) as its initial items and concatenates them together as it progresses similarly to that of the Fibonacci series.\\\\n\\\\n### Examples\\\\n```\\\\ngenerateString(3, [\\\\\\\"j\\\\\\\", \\\\\\\"h\\\\\\\"]) ➞ \\\\\\\"j, h, hj\\\\\\\"\\\\n\\\\ngenerateString(5, [\\\\\\\"e\\\\\\\", \\\\\\\"a\\\\\\\"]) ➞ \\\\\\\"e, a, ae, aea, aeaae\\\\\\\"\\\\n\\\\ngenerateString(6, [\\\\\\\"n\\\\\\\", \\\\\\\"k\\\\\\\"]) ➞ \\\\\\\"n, k, kn, knk, knkkn, knkknknk\\\\\\\"\\\\n\\\\ngenerateString(1, [\\\\\\\"f\\\\\\\", \\\\\\\"g\\\\\\\"]) ➞ \\\\\\\"invalid\\\\\\\"\\\\n// return \\\\\\\"invalid\\\\\\\" if n is le","thisId":"2082","channelHost":"edabit.com","id":"2082","opcode":"1","channelId":"2","timestamp":"1652648922635"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"601\\\"]}\"]","thisId":"2083","channelHost":"edabit.com","id":"2083","opcode":"1","channelId":"2","timestamp":"1652648922722"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4193","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"601\\\",\\\"result\\\":{\\\"_id\\\":\\\"kAJBH9WexWMdfLFHT\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int row(String str) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.2083333333333335,\\\"familyId\\\":\\\"ePPdoNKaCp3u5pipx\\\",\\\"instructions\\\":\\\"Excel column names are in the following format:\\\\n\\\\n```\\\\nA, B, ..., Z, AA, ..., AZ, BA, ..., ZZ, AAA, AAB, ...\\\\n```\\\\n\\\\nWrite a function that returns the **column number** from the column name.\\\\n\\\\n### Examples\\\\n```\\\\ncolumn(\\\\\\\"A\\\\\\\") ➞ 1\\\\n\\\\ncolumn(\\\\\\\"Z\\\\\\\") ➞ 26\\\\n\\\\ncolumn(\\\\\\\"AA\\\\\\\") ➞ 27\\\\n\\\\ncolumn(\\\\\\\"BA\\\\\\\") ➞ 53\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(1, Challenge.row(\\\\\\\"A\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(2, Challenge.row(\\\\\\\"B\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test3","thisId":"2084","channelHost":"edabit.com","id":"2084","opcode":"1","channelId":"2","timestamp":"1652648922726"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"600\\\"]}\"]","thisId":"2085","channelHost":"edabit.com","id":"2085","opcode":"1","channelId":"2","timestamp":"1652648922839"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4473","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"600\\\",\\\"result\\\":{\\\"_id\\\":\\\"bPSi354LyfXhA6RXf\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String convertTime(String s) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.212121212121212,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"LLkxKDS6dkiEgsuye\\\",\\\"instructions\\\":\\\"Write a function that receives the time in 12-hour AM/PM format and returns a string representation of the time in military (24-hour) format.\\\\n\\\\n### Examples\\\\n```\\\\nconvertTime(“07:05:45PM”) ➞ “19:05:45”\\\\n\\\\nconvertTime(“12:40:22AM”) ➞ “00:40:22”\\\\n\\\\nconvertTime(“12:45:54PM”) ➞ “12:45:54”\\\\n\\\\n```\\\\n### Notes\\\\n- Midnight is 12:00:00AM on a 12-hour clock, and 00:00:00 on a 24-hour clock.\\\\n- Noon is 12:00:00PM on a 12-hour clock, and 12:00:00 on a 24-hour clock.\\\",\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals;\\\\nimport org.junit.Test;\\\\n\\\\n/**\\\\n * @author edwardclark\\\\n**/\\\\n\\\\npublic class ChallengeTest {\\\\n\\\\t@Test\\\\n\\\\tpublic v","thisId":"2086","channelHost":"edabit.com","id":"2086","opcode":"1","channelId":"2","timestamp":"1652648922844"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"598\\\"]}\"]","thisId":"2087","channelHost":"edabit.com","id":"2087","opcode":"1","channelId":"2","timestamp":"1652648922964"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4589","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"598\\\",\\\"result\\\":{\\\"_id\\\":\\\"BdLPEtbChBG6nvYT6\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class BasicLogarithm {\\\\n\\\\tpublic static Object logarithm(Object base, Object num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.25,\\\"familyId\\\":\\\"DrffSkH79cP3LsriW\\\",\\\"instructions\\\":\\\"A logarithm is kind of like reverse exponents. There is a base and a number in a logarithm. The point of a logarithm is to find out what power you have to raise for the base to get the number next to the base. For example:\\\\n\\\\n```\\\\nlog base 5 of 25 = x\\\\n```\\\\n\\\\nThis is the same thing as saying 5 raised to the power of `x` is 25, which is 2 (so `x` would be 2). Using this example, your function must take the 5 and 25 and returns 2.\\\\n\\\\n### Examples\\\\n```\\\\nlogarithm(5, 25) ➞ 2\\\\n\\\\nlogarithm(2, 64) ➞ 6\\\\n\\\\nlogarithm(2, 4) ➞ 2\\\\n```\\\\n\\\\n### Notes\\\\n- All inputs and their associated outputs are integers.\\\\n- Return `\\\\\\\"Invalid\\\\\\\"` for inputs outside of the domain.\\\",\\","thisId":"2088","channelHost":"edabit.com","id":"2088","opcode":"1","channelId":"2","timestamp":"1652648922968"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"602\\\"]}\"]","thisId":"2089","channelHost":"edabit.com","id":"2089","opcode":"1","channelId":"2","timestamp":"1652648923074"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4076","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"602\\\",\\\"result\\\":{\\\"_id\\\":\\\"MNJ4Mx5duvtZJa8ks\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean isBalanced(String str) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.206896551724138,\\\"familyId\\\":\\\"B9pozgpsCW4ojCRuR\\\",\\\"instructions\\\":\\\"Write a function that takes a string of brackets and checks whether they're balanced or not.\\\\n\\\\nThe sequence is balanced if:\\\\n- It contains no unmatched brackets.\\\\n- The subset of brackets enclosed within the confines of a matched pair of brackets is also balanced.\\\\n\\\\n### Examples\\\\n```\\\\nisBalanced(\\\\\\\"{[()]}\\\\\\\") ➞ true\\\\n\\\\nisBalanced(\\\\\\\"[()]{}\\\\\\\") ➞ true\\\\n\\\\nisBalanced(\\\\\\\"{[([)]]}\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(true, Challenge.isBalanced(\\\\\\\"()\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test","thisId":"2090","channelHost":"edabit.com","id":"2090","opcode":"1","channelId":"2","timestamp":"1652648923080"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"603\\\"]}\"]","thisId":"2091","channelHost":"edabit.com","id":"2091","opcode":"1","channelId":"2","timestamp":"1652648923202"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4198","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"603\\\",\\\"result\\\":{\\\"_id\\\":\\\"mB5LofGBxARkoYhRR\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String semiprime(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.2142857142857144,\\\"familyId\\\":\\\"w767jsTpe2nkr5yfj\\\",\\\"instructions\\\":\\\"A semiprime is a composite number that is the product of two primes. Apart from these two primes, its only other proper (non-self) divisor is 1.\\\\n\\\\nThe two prime factors of a semiprime can be the same number (e.g. the semiprime 49 is the product of 7x7). A semiprime that has two *distinct* prime factors is called a **_squarefree semiprime._**\\\\n\\\\nCreate a function that takes a number and returns `\\\\\\\"Squarefree Semiprime\\\\\\\"`, `\\\\\\\"Semiprime\\\\\\\"`, or `\\\\\\\"Neither\\\\\\\"`.\\\\n\\\\n### Examples\\\\n```\\\\nsemiprime(49) ➞ \\\\\\\"Semiprime\\\\\\\"\\\\n\\\\nsemiprime(15) ➞ \\\\\\\"Squarefree Semiprime\\\\\\\"\\\\n\\\\nsemiprime(97) ➞ \\\\\\\"Neither\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport sta","thisId":"2092","channelHost":"edabit.com","id":"2092","opcode":"1","channelId":"2","timestamp":"1652648923206"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"604\\\"]}\"]","thisId":"2093","channelHost":"edabit.com","id":"2093","opcode":"1","channelId":"2","timestamp":"1652648923314"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4788","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"604\\\",\\\"result\\\":{\\\"_id\\\":\\\"pnhcp4FraYQDeqRGt\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String sexagenary(int year) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.210526315789474,\\\"familyId\\\":\\\"KJyPPA5WuhTMyYYrg\\\",\\\"instructions\\\":\\\"In early recorded Chinese history, time was reckoned using the sexagenary (60-year) cycle, generated from two subcycles:\\\\n\\\\n1. Five heavenly stems (elements) in this order: wood, fire, earth, metal, water. The stems change every two years.\\\\n2. Twelve earthly branches (animals) in this order: rat, ox, tiger, rabbit, dragon, snake, horse, sheep, monkey, rooster, dog, pig. The branches change yearly.\\\\n\\\\nThe combinations between these two sub-cycles result in a 60-year cycle where no two years are the same — for example, the 5 years of the Rat have 5 different elements: 1924 Wood Rat, 1936 Fire Rat, 1948 Earth Rat, 1960 Metal Rat, 1972 Water Rat.\\\\n\\\\nThe first 14 years of the current ","thisId":"2094","channelHost":"edabit.com","id":"2094","opcode":"1","channelId":"2","timestamp":"1652648923323"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"605\\\"]}\"]","thisId":"2095","channelHost":"edabit.com","id":"2095","opcode":"1","channelId":"2","timestamp":"1652648923470"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4244","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"605\\\",\\\"result\\\":{\\\"_id\\\":\\\"27h4mwAKD3hhy6onh\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean trouble(long num1, long num2) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.22,\\\"familyId\\\":\\\"FGZK3PWHWdBaLai5L\\\",\\\"instructions\\\":\\\"Create a function that takes two integers and returns `true` if a digit repeats three times in a row at any place in `num1` **AND** that same digit repeats two times in a row in `num2`.\\\\n\\\\n### Examples\\\\n```\\\\ntrouble(451999277, 41177722899) ➞ True\\\\n\\\\ntrouble(1222345, 12345) ➞ False\\\\n\\\\ntrouble(666789, 12345667) ➞ True\\\\n\\\\ntrouble(33789, 12345337) ➞ False\\\\n```\\\\n\\\\n### Notes\\\\nYou can expect every test case to contain exactly two integers.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTest {\\\\n    @Test\\\\n  public void test1() {\\\\n    assertEquals(true, Challenge.trouble(451999277L, 41177722899L));\\\\n  }\\\\n\\\\t\\\\n","thisId":"2096","channelHost":"edabit.com","id":"2096","opcode":"1","channelId":"2","timestamp":"1652648923475"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"606\\\"]}\"]","thisId":"2097","channelHost":"edabit.com","id":"2097","opcode":"1","channelId":"2","timestamp":"1652648923558"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4931","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"606\\\",\\\"result\\\":{\\\"_id\\\":\\\"5Jw7K2fvuaAqRPPtJ\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean isBrilliant(int n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.2222222222222223,\\\"familyId\\\":\\\"nSTvCoj7wPfaPqFzw\\\",\\\"instructions\\\":\\\"In this challenge, you have to establish if a given number is _Brilliant_. A Brilliant number is a semiprime that can be obtained only by multiplicating two, and only two, different primes with the same number of digits.\\\\n\\\\nA semiprime can be:\\\\n\\\\n- A **composite** number equal to the **product of two different primes**.\\\\n- A **composite** number equal to the **square of a prime**.\\\\n\\\\nGiven an integer `n`, implement a function that returns `true` if `n` is a Brilliant number, or `false` if it's not.\\\\n\\\\n### Examples\\\\n```\\\\nisBrilliant(11) ➞ false\\\\n// 11 is a prime.\\\\n\\\\nisBrilliant(9) ➞ true\\\\n// 9 is equal to the square of a prime: 3²\\\\n\\\\nisBrilliant(21) ➞ true\\\\n// 21 is equal","thisId":"2098","channelHost":"edabit.com","id":"2098","opcode":"1","channelId":"2","timestamp":"1652648923562"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"607\\\"]}\"]","thisId":"2099","channelHost":"edabit.com","id":"2099","opcode":"1","channelId":"2","timestamp":"1652648923681"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5963","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"607\\\",\\\"result\\\":{\\\"_id\\\":\\\"EhX7SGqPTyxQc4pb2\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Centric {\\\\n  public static int closingInSum(long num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.2222222222222223,\\\"familyId\\\":\\\"dtjKua326LKEzxigY\\\",\\\"instructions\\\":\\\"Create a function that returns the sum of the digits formed from the first and last digits, all the way to the center of the number.\\\\n\\\\n### Worked Example\\\\n```\\\\nclosingInSum(2520) ➞ 72\\\\n\\\\n// The first and last digits are 2 and 0.\\\\n// 2 and 0 form 20.\\\\n// The second digit is 5 and the second to last digit is 2.\\\\n// 5 and 2 form 52.\\\\n\\\\n// 20 + 52 = 72\\\\n```\\\\n\\\\n### Examples\\\\n```\\\\nclosingInSum(121) ➞ 13\\\\n// 11 + 2\\\\n\\\\nclosingInSum(1039) ➞ 22\\\\n// 19 + 3\\\\n\\\\nclosingInSum(22225555) ➞ 100\\\\n// 25 + 25 + 25 + 25\\\\n```\\\\n\\\\n### Notes\\\\n- If the number has an **odd** number of digits, simply add on the single-digit number in the center (see example #1).\\\\n- Any number which ","thisId":"2100","channelHost":"edabit.com","id":"2100","opcode":"1","channelId":"2","timestamp":"1652648923686"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"608\\\"]}\"]","thisId":"2101","channelHost":"edabit.com","id":"2101","opcode":"1","channelId":"2","timestamp":"1652648923818"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4814","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"608\\\",\\\"result\\\":{\\\"_id\\\":\\\"YGFhsF3veFwqKyp4x\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Matrix {\\\\n  public static String transpose(String[][] m) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.2285714285714286,\\\"familyId\\\":\\\"uo3HcBe6cw6EBFZgh\\\",\\\"instructions\\\":\\\"In this challenge, you have to obtain a sentence from the elements of a given matrix. In the matrix, each word of the sentence follows a columnar order from the top to the bottom, instead of the usual left-to-right order: it's time for **transposition**!\\\\n\\\\nGiven a matrix `mtx`, implement a function that returns the complete sentence as a string, with the words separated by a space between them.\\\\n\\\\n### Examples\\\\n```\\\\ntransposeMatrix([\\\\n  [\\\\\\\"I\\\\\\\",\\\\\\\"Tesh\\\\\\\"],\\\\n  [\\\\\\\"so\\\\\\\",\\\\\\\"very\\\\\\\"],\\\\n  [\\\\\\\"love\\\\\\\",\\\\\\\"much!\\\\\\\"]\\\\n]) ➞ \\\\\\\"I so love Tesh very much!\\\\\\\"\\\\n\\\\ntransposeMatrix([\\\\n  [\\\\\\\"My\\\\\\\",\\\\\\\"evolves\\\\\\\",\\\\\\\"on\\\\\\\"],\\\\n  [\\\\\\\"world\\\\\\\",\\\\\\\"solely\\\\\\\",\\\\\\\"Tes","thisId":"2102","channelHost":"edabit.com","id":"2102","opcode":"1","channelId":"2","timestamp":"1652648923822"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"609\\\"]}\"]","thisId":"2103","channelHost":"edabit.com","id":"2103","opcode":"1","channelId":"2","timestamp":"1652648923957"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4911","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"609\\\",\\\"result\\\":{\\\"_id\\\":\\\"akLRnxrtrAsnyYuZb\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class ReversibleListRanges {\\\\n  public static int[] reversibleInclusiveList(int start,int end) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.230769230769231,\\\"familyId\\\":\\\"ybYMEamrx7BAuSwpL\\\",\\\"instructions\\\":\\\"Write a function that, given the `start` and `end` values, returns an array containing all the numbers **inclusive** to that range. See examples below.\\\\n\\\\n\\\\n### Examples\\\\n```\\\\nreversibleInclusiveList(1, 5) ➞ [1, 2, 3, 4, 5]\\\\n\\\\nreversibleInclusiveList(2, 8) ➞ [2, 3, 4, 5, 6, 7, 8]\\\\n\\\\nreversibleInclusiveList(10, 20) ➞[10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\\\\n\\\\nreversibleInclusiveList(24, 17) ➞[24, 23, 22, 21, 20, 19, 18, 17]\\\\n```\\\\n\\\\n\\\\n### Notes\\\\n- The sort order of the resulting array is dependent of the input values.\\\\n- All inputs provided in the test scenarios are valid.\\\\n- If `start` is greater than `end`, return a **descendin","thisId":"2104","channelHost":"edabit.com","id":"2104","opcode":"1","channelId":"2","timestamp":"1652648923961"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"610\\\"]}\"]","thisId":"2105","channelHost":"edabit.com","id":"2105","opcode":"1","channelId":"2","timestamp":"1652648924080"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4299","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"610\\\",\\\"result\\\":{\\\"_id\\\":\\\"y93Q6YRPwFgZx84Xj\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class DistinctElements {\\\\n  public static int[] returnUnique(int[] n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.225,\\\"familyId\\\":\\\"N3dyS4PcdrDByanQj\\\",\\\"instructions\\\":\\\"In each input array, every number **repeats at least once**, except for **two**. Write a function that returns the **two unique numbers**.\\\\n\\\\n### Examples\\\\n```\\\\nreturnUnique([5, 4, 5, 1, 4, 3, 4, 6, 6, 6]) ➞ [1, 3]\\\\n\\\\nreturnUnique([1, 2, 1, 3, 1, 7, 1, 9, 7, 9]) ➞ [2, 3]\\\\n\\\\nreturnUnique([9, 5, 6, 8, 7, 7, 1, 1, 1, 1, 1, 9, 8]) ➞ [5, 6]\\\\n```\\\\n\\\\n### Notes\\\\nKeep the same ordering in the output.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertArrayEquals; \\\\nimport org.junit.Test; \\\\n\\\\npublic class DistinctElementsTest {\\\\n\\\\t@Test\\\\n\\\\tpublic void test01() { \\\\n\\\\t\\\\tassertArrayEquals(new int[] {1, 3}, DistinctElements.","thisId":"2106","channelHost":"edabit.com","id":"2106","opcode":"1","channelId":"2","timestamp":"1652648924084"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"611\\\"]}\"]","thisId":"2107","channelHost":"edabit.com","id":"2107","opcode":"1","channelId":"2","timestamp":"1652648924188"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4274","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"611\\\",\\\"result\\\":{\\\"_id\\\":\\\"hro2Zbdcr2hsQ5B8v\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class ArrayFlip {\\\\n  public static Object[] flipArray(Object[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.235294117647059,\\\"familyId\\\":\\\"gvkHJJSgg4JCJA9ac\\\",\\\"instructions\\\":\\\"Create a function that flips a horizontal array into a vertical array, and a vertical array into a horizontal array.\\\\n\\\\nIn other words, take an `1 x n` array (1 row + n columns) and flip it into a `n x 1` array (n rows and 1 column), and vice versa.\\\\n\\\\n### Examples\\\\n```\\\\nflipArray([1, 2, 3, 4]) ➞ [[1], [2], [3], [4]]\\\\n// Take a horizontal array and flip it vertical.\\\\n\\\\nflipArray([[5], [6], [9]]) ➞ [5, 6, 9]\\\\n// Take a vertical array and flip it horizontal.\\\\n\\\\nflipArray([]) ➞ []\\\\n\\\\nflipArray([5, 4, 4]) ➞ [[5], [4], [4]]\\\\n\\\\nflipArray([[4], [6], [6], [6]]) ➞ [4, 6, 6, 6]\\\\n```\\\\n\\\\n### Notes\\\\nIf given an empty array `[]`, return an empty array `[]`.\\\",\\\"isFlagge","thisId":"2108","channelHost":"edabit.com","id":"2108","opcode":"1","channelId":"2","timestamp":"1652648924192"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"612\\\"]}\"]","thisId":"2109","channelHost":"edabit.com","id":"2109","opcode":"1","channelId":"2","timestamp":"1652648924291"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4698","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"612\\\",\\\"result\\\":{\\\"_id\\\":\\\"WXTuWJ5nSEzjcakQJ\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String truncate(String str, int length) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.238095238095238,\\\"familyId\\\":\\\"3YZi5mJC7qhEa4Gyv\\\",\\\"instructions\\\":\\\"Create a function that takes a string (the string to truncate) and a number (the *maximum* length of the truncated string) as arguments and returns the truncated string at the given length.\\\\n\\\\n### Examples\\\\n```\\\\ntruncate(\\\\\\\"Lorem ipsum dolor sit amet.\\\\\\\", 11) ➞ \\\\\\\"Lorem ipsum\\\\\\\"\\\\n\\\\ntruncate(\\\\\\\"Lorem ipsum dolor sit amet.\\\\\\\", 16) ➞ \\\\\\\"Lorem ipsum\\\\\\\"\\\\n\\\\ntruncate(\\\\\\\"Lorem ipsum dolor sit amet.\\\\\\\", 17) ➞ \\\\\\\"Lorem ipsum dolor\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- To \\\\\\\"truncate\\\\\\\" means _\\\\\\\"to shorten by cutting off the top or end\\\\\\\"_.\\\\n- If a word is truncated in the middle, discard it in the output (see 2nd example above).\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimp","thisId":"2110","channelHost":"edabit.com","id":"2110","opcode":"1","channelId":"2","timestamp":"1652648924307"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"613\\\"]}\"]","thisId":"2111","channelHost":"edabit.com","id":"2111","opcode":"1","channelId":"2","timestamp":"1652648924430"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6150","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"613\\\",\\\"result\\\":{\\\"_id\\\":\\\"GGijTCgukXqkYWX9Q\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String elasticize(String word) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.239130434782609,\\\"familyId\\\":\\\"BngkWreSYurkhSdFy\\\",\\\"instructions\\\":\\\"In this challenge, you must think about words as elastics. What happens when do you tend an elastic applying a constant traction force at both ends? Every part (or letter, in this case) of the elastic will expand, with the minimum expansion at the ends, and the maximum expansion in the center.\\\\n\\\\nIf the word has an odd length, the effective central character of the word will be the pivot that splits the word into two halves.\\\\n\\\\n```\\\\n\\\\\\\"ABC\\\\\\\" -> Left = \\\\\\\"A\\\\\\\" | Center = \\\\\\\"B\\\\\\\" | Right = \\\\\\\"C\\\\\\\"\\\\n```\\\\n\\\\nIf the word has an even length, you will consider two parts of equal length, with the last character of the left half and the first character of the right half being ","thisId":"2112","channelHost":"edabit.com","id":"2112","opcode":"1","channelId":"2","timestamp":"1652648924435"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"614\\\"]}\"]","thisId":"2113","channelHost":"edabit.com","id":"2113","opcode":"1","channelId":"2","timestamp":"1652648924540"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4714","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"614\\\",\\\"result\\\":{\\\"_id\\\":\\\"aMazRiPPk9pAniYMF\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean commentsCorrect(String str) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.24,\\\"familyId\\\":\\\"jbDT3qywfJiYwkHKS\\\",\\\"instructions\\\":\\\"In JavaScript, there are two types of comments:\\\\n\\\\n1. Single-line comments start with `//`\\\\n2. Multi-line or inline comments start with `/*` and end with `*/`\\\\n\\\\nThe input will be a sequence of `//`, `/*` and `*/`. **Every `/*` must have a `*/` that immediately follows it**. To add, there can be **no single-line comments in between multi-line comments** in between the `/*` and `*/`.\\\\n\\\\nCreate a function that returns `true` if comments are properly formatted, and `false` otherwise.\\\\n\\\\n### Examples\\\\n```\\\\ncommentsCorrect(\\\\\\\"//////\\\\\\\") ➞ true\\\\n// 3 single-line comments: [\\\\\\\"//\\\\\\\", \\\\\\\"//\\\\\\\", \\\\\\\"//\\\\\\\"]\\\\n\\\\ncommentsCorrect(\\\\\\\"/**//**////**/\\\\\\\") ➞ true\\\\n// 3 multi-line comments","thisId":"2114","channelHost":"edabit.com","id":"2114","opcode":"1","channelId":"2","timestamp":"1652648924544"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"617\\\"]}\"]","thisId":"2115","channelHost":"edabit.com","id":"2115","opcode":"1","channelId":"2","timestamp":"1652648924654"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4916","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"617\\\",\\\"result\\\":{\\\"_id\\\":\\\"cSfsSmpnGqeAEiN8a\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String kixCode(String addr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.25,\\\"familyId\\\":\\\"rmNk6BDZnxJep5QGv\\\",\\\"instructions\\\":\\\"In The Netherlands we have PostNL, the postal company. They use KixCodes, a fast way to deliver letters and packages that can be scanned during the process.\\\\n\\\\n![Kix Code](https://edabit-challenges.s3.amazonaws.com/KIX-code-van-PostNL_tcm10-8633.gif)\\\\n\\\\nThe code is a combination of: \\\\\\\"Postal code\\\\\\\", \\\\\\\"House/box/call number\\\\\\\" and \\\\\\\"House appendage / suffix\\\\\\\"\\\\n\\\\nIf there is a character between the house number and the suffix, we need to replace that with an X. Eventually, the code will be printed in the KixCode font.\\\\n\\\\n### Examples\\\\n```\\\\nkixCode(\\\\\\\"PostNL, Postbus 30250, 2500 GG 's Gravenhage\\\\\\\") ➞ \\\\\\\"2500GG30250\\\\\\\"\\\\n\\\\nkixCode(\\\\\\\"Liesanne B Wilkens, Kogge 11-1, 1657 KA Ab","thisId":"2116","channelHost":"edabit.com","id":"2116","opcode":"1","channelId":"2","timestamp":"1652648924658"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"615\\\"]}\"]","thisId":"2117","channelHost":"edabit.com","id":"2117","opcode":"1","channelId":"2","timestamp":"1652648924762"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4182","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"615\\\",\\\"result\\\":{\\\"_id\\\":\\\"ChqsAuCYkGm7x2Jyw\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean anaStrStr(String needle, String haystack) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.25,\\\"familyId\\\":\\\"e3SzP7uq6qqNdKRAm\\\",\\\"instructions\\\":\\\"Create a function that takes two strings and determines if an anagram of the first string is in the second string. Anagrams of \\\\\\\"bag\\\\\\\" are \\\\\\\"bag\\\\\\\", \\\\\\\"bga\\\\\\\", \\\\\\\"abg\\\\\\\", \\\\\\\"agb\\\\\\\", \\\\\\\"gab\\\\\\\", \\\\\\\"gba\\\\\\\". Since none of those anagrams are in \\\\\\\"grab\\\\\\\", the answer is false. A \\\\\\\"g\\\\\\\", \\\\\\\"a\\\\\\\", and \\\\\\\"b\\\\\\\" are in the string \\\\\\\"grab\\\\\\\", but they're split up by the \\\\\\\"r\\\\\\\".\\\\n\\\\n### Examples\\\\n```\\\\nanaStrStr(\\\\\\\"car\\\\\\\", \\\\\\\"race\\\\\\\") ➞ true\\\\n\\\\nanaStrStr(\\\\\\\"nod\\\\\\\", \\\\\\\"done\\\\\\\") ➞ true\\\\n\\\\nanaStrStr(\\\\\\\"bag\\\\\\\", \\\\\\\"grab\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\n- Inputs will be valid strings in all lowercase letters.\\\\n- There exists a linear time algorit","thisId":"2118","channelHost":"edabit.com","id":"2118","opcode":"1","channelId":"2","timestamp":"1652648924776"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"616\\\"]}\"]","thisId":"2119","channelHost":"edabit.com","id":"2119","opcode":"1","channelId":"2","timestamp":"1652648924875"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4699","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"616\\\",\\\"result\\\":{\\\"_id\\\":\\\"LH2sxGLLLvnJbL6tZ\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String roundabout(int siz, int dgr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.25,\\\"familyId\\\":\\\"y6LcpcZQMb4qzfG9X\\\",\\\"instructions\\\":\\\"You are driving in a roundabout. At the moment you enter, you don't know which one of the exits you have to take. At the moment your GPS (or the person next to you) shouts that you should leave the roundabout, there's a moment of time where you need to react, turn on your indicator light, and exit the roundabout.\\\\n\\\\nAssuming the roundabouts are of equal size, the exits are equally spaced and you're driving at the same speed, you need to figure out the exit you're taking. Your function will get the amount of exits of the roundabout. You're entering the roundabout on \\\\\\\"Exit 0\\\\\\\".\\\\n\\\\nThe next input will be the amount of degrees where you get the command to leave the roundabout. The time ","thisId":"2120","channelHost":"edabit.com","id":"2120","opcode":"1","channelId":"2","timestamp":"1652648924880"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"618\\\"]}\"]","thisId":"2121","channelHost":"edabit.com","id":"2121","opcode":"1","channelId":"2","timestamp":"1652648924998"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4448","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"618\\\",\\\"result\\\":{\\\"_id\\\":\\\"fEtBbju4zCmYKFAwH\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class FindNumber {\\\\n  public static int wrongNumber(int[][] m) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.25,\\\"familyId\\\":\\\"dcNw4w3hfx9sqmsgQ\\\",\\\"instructions\\\":\\\"**Tesha** needs your help to find out a wrong number in a 2D array.\\\\n\\\\nImagine a 2D array of numbers given below:\\\\n\\\\n```\\\\nvar arr = [\\\\n  [1, 2, 3, 6 ],\\\\n  [4, 5, 6, 15],\\\\n  [7, 8, 9, 24],\\\\n  [12,15,18,45]\\\\n]\\\\n```\\\\n\\\\nYou can notice that:\\\\n- The end number of each row is the sum of each row's previous numbers.\\\\n- The end number of each column is the sum of each column's previous numbers.\\\\n\\\\nSee below examples for a better understanding:\\\\n\\\\n```\\\\narr1 = [\\\\n  [2, 2, 3, 6 ],\\\\n  [4, 5, 6, 15],\\\\n  [7, 8, 9, 24],\\\\n  [12,15,18,45]\\\\n]\\\\n\\\\n// 2 is incorrect in the first row and first column.\\\\n// Replace it with 1.\\\\n\\\\narr2 = [\\\\n  [1, 2, 3, 7 ],\\\\n  [4, 5, 6, 15],\\\\n  [7, 8, 9, ","thisId":"2122","channelHost":"edabit.com","id":"2122","opcode":"1","channelId":"2","timestamp":"1652648925002"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"619\\\"]}\"]","thisId":"2123","channelHost":"edabit.com","id":"2123","opcode":"1","channelId":"2","timestamp":"1652648925101"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4017","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"619\\\",\\\"result\\\":{\\\"_id\\\":\\\"CR7uvWLiKNaZeoj4R\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class CommonMultiple {\\\\n  public static int lcmOfThree(int[] arr) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.25,\\\"familyId\\\":\\\"3v4p2nByS8HCBNyYr\\\",\\\"instructions\\\":\\\"Create a function that takes an array of three numbers and returns the **Least Common Multiple** (LCM).\\\\n\\\\nThe LCM is the smallest positive number that is a multiple of two or more numbers. In our case, we are dealing with three numbers.\\\\n\\\\n- Multiples of 3 are: 3, 6, 9, 12, and so on.\\\\n- Multiples of 4 are: 4, 8,12, and so on.\\\\n- Multiples of 12 are: 12, 24, 36, and so on.\\\\n\\\\nThus, the least common multiple of 3, 4, and 12 is 12.\\\\n\\\\n### Examples\\\\n```\\\\nlcmThree([9, 18, 27]) ➞ 54\\\\n\\\\nlcmThree([23, 46, 2]) ➞ 46\\\\n\\\\nlcmThree([5, 7, 13]) ➞ 455\\\\n\\\\nlcmThree([104, 105, 107]) ➞ 1168440\\\\n\\\\nlcmThree([19, 47, 43]) ➞ 38399\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":fal","thisId":"2124","channelHost":"edabit.com","id":"2124","opcode":"1","channelId":"2","timestamp":"1652648925106"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"620\\\"]}\"]","thisId":"2125","channelHost":"edabit.com","id":"2125","opcode":"1","channelId":"2","timestamp":"1652648925189"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5472","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"620\\\",\\\"result\\\":{\\\"_id\\\":\\\"PRWwoRZnnh5eyyRbD\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String lookAndSay(String term) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.25531914893617,\\\"familyId\\\":\\\"gLWwzZJcBSA2fH4bX\\\",\\\"instructions\\\":\\\"The look-and-say sequence is generated by _describing_ each group of identical digits in the previous term. If we start at \\\\\\\"1\\\\\\\", the first five terms in the sequence are:\\\\n\\\\n```\\\\n\\\\\\\"1\\\\\\\" = \\\\\\\"one 1\\\\\\\" = \\\\\\\"11\\\\\\\"\\\\n\\\\\\\"11\\\\\\\" = \\\\\\\"two 1's\\\\\\\" = \\\\\\\"21\\\\\\\"\\\\n\\\\\\\"21\\\\\\\" = \\\\\\\"one 2, one 1\\\\\\\" = \\\\\\\"1211\\\\\\\"\\\\n\\\\\\\"1211\\\\\\\" = \\\\\\\"one 1, one 2, two 1's\\\\\\\" = \\\\\\\"111221\\\\\\\"\\\\n\\\\\\\"111221\\\\\\\" = \\\\\\\"three 1's, two 2's, one 1\\\\\\\" = \\\\\\\"312211\\\\\\\"\\\\n```\\\\n\\\\nGiven a term (as a string), return the _next term_ in the sequence.\\\\n\\\\n### Examples\\\\n```\\\\nlookAndSay(\\\\\\\"1211\\\\\\\") ➞ \\\\\\\"111221\\\\\\\"\\\\n\\\\nlookAndSay(\\\\\\\"111221\\\\\\\") ➞ \\\\\\\"312211\\\\\\\"\\\\n\\\\nlookAndSay(\\\\\\\"31131211131221\\\\\\\") ➞ ","thisId":"2126","channelHost":"edabit.com","id":"2126","opcode":"1","channelId":"2","timestamp":"1652648925197"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"621\\\"]}\"]","thisId":"2127","channelHost":"edabit.com","id":"2127","opcode":"1","channelId":"2","timestamp":"1652648925306"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5717","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"621\\\",\\\"result\\\":{\\\"_id\\\":\\\"hLF2GH3SxbsFew3bC\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean isIcecreamSandwich(String str) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.25531914893617,\\\"familyId\\\":\\\"j88R4KsWK8tjxNk6k\\\",\\\"instructions\\\":\\\"An **ice cream sandwich** is a string that is formed by two identical ends and a different middle.\\\\n\\\\n#### Some examples of ice cream sandwiches:\\\\n```\\\\n\\\\\\\"AABBBAA\\\\\\\"\\\\n\\\\n\\\\\\\"3&&3\\\\\\\"\\\\n\\\\n\\\\\\\"yyyyymmmmmmmmyyyyy\\\\\\\"\\\\n\\\\n\\\\\\\"hhhhhhhhmhhhhhhhh\\\\\\\"\\\\n```\\\\n\\\\nNotice how **left** and **right** ends of the sandwich are identical in both **length** and in **repeating character**. The **middle** section is distinctly different.\\\\n\\\\n#### Not ice cream sandwiches:\\\\n```\\\\n\\\\\\\"BBBBB\\\\\\\"\\\\n// You can't have just plain icecream.\\\\n\\\\n\\\\\\\"AAACCCAA\\\\\\\"\\\\n// You can't have unequal sandwich ends.\\\\n\\\\n\\\\\\\"AACDCAA\\\\\\\"\\\\n// You can't have more than one filling.\\\\n\\\\n\\\\\\\"A\\\\\\\"\\\\n// You can","thisId":"2128","channelHost":"edabit.com","id":"2128","opcode":"1","channelId":"2","timestamp":"1652648925310"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"622\\\"]}\"]","thisId":"2129","channelHost":"edabit.com","id":"2129","opcode":"1","channelId":"2","timestamp":"1652648925404"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7491","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"622\\\",\\\"result\\\":{\\\"_id\\\":\\\"5RvoqBgeykwy2Xqdb\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class LetterGroups {\\\\n\\\\tpublic static String[] collect(String s, int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.2580645161290325,\\\"editorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"familyId\\\":\\\"SQbWpGWt6NwGW7wnN\\\",\\\"instructions\\\":\\\"Write a function that returns an array of strings populated from the slices of **n-length** characters of the given word (a slice after another while **n-length** applies onto the word).\\\\n\\\\n### Examples\\\\n```\\\\ncollect(\\\\\\\"intercontinentalisationalism\\\\\\\", 6)\\\\n➞ [\\\\\\\"ationa\\\\\\\", \\\\\\\"interc\\\\\\\", \\\\\\\"ntalis\\\\\\\", \\\\\\\"ontine\\\\\\\"]\\\\n\\\\ncollect(\\\\\\\"strengths\\\\\\\", 3)\\\\n➞ [\\\\\\\"eng\\\\\\\", \\\\\\\"str\\\\\\\", \\\\\\\"ths\\\\\\\"]\\\\n\\\\ncollect(\\\\\\\"pneumonoultramicroscopicsilicovolcanoconiosis\\\\\\\", 15)\\\\n➞ [\\\\\\\"croscopicsilico\\\\\\\", \\\\\\\"pneumonoultrami\\\\\\\", \\\\\\\"volcanoconiosis\\\\\\\"]\\\\n```\\\\n\\\\n### Notes\\\\n- Ensure that the resulting array is lexicographically ord","thisId":"2130","channelHost":"edabit.com","id":"2130","opcode":"1","channelId":"2","timestamp":"1652648925408"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"623\\\"]}\"]","thisId":"2131","channelHost":"edabit.com","id":"2131","opcode":"1","channelId":"2","timestamp":"1652648925504"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4220","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"623\\\",\\\"result\\\":{\\\"_id\\\":\\\"w7DJWs97E83ntRgYf\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class WordArray {\\\\n  public static String[] pluralize(String[] s) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.2580645161290325,\\\"familyId\\\":\\\"AwrcskesjaYrNcy4R\\\",\\\"instructions\\\":\\\"Given a list of words in the singular form, return a set of those words _in the plural form_ **if they appear more than once in the list.**\\\\n\\\\n### Examples\\\\n```\\\\npluralize([\\\\\\\"cow\\\\\\\", \\\\\\\"pig\\\\\\\", \\\\\\\"cow\\\\\\\", \\\\\\\"cow\\\\\\\"]) ➞ [\\\\\\\"cows\\\\\\\", \\\\\\\"pig\\\\\\\"]\\\\n\\\\npluralize([\\\\\\\"table\\\\\\\", \\\\\\\"table\\\\\\\", \\\\\\\"table\\\\\\\"]) ➞ [\\\\\\\"tables\\\\\\\"]\\\\n\\\\npluralize([\\\\\\\"chair\\\\\\\", \\\\\\\"pencil\\\\\\\", \\\\\\\"arm\\\\\\\"]) ➞ [\\\\\\\"chair\\\\\\\", \\\\\\\"pencil\\\\\\\", \\\\\\\"arm\\\\\\\"]\\\\n```\\\\n\\\\n### Notes\\\\n- This is an **oversimplification** of the English language so no edge cases will appear.\\\\n- Only focus on whether or not to add an **s** to the ends of words.\\\\n- All tests will be valid.\\\",\\\"isFlagged\\\":false,\\","thisId":"2132","channelHost":"edabit.com","id":"2132","opcode":"1","channelId":"2","timestamp":"1652648925509"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"624\\\"]}\"]","thisId":"2133","channelHost":"edabit.com","id":"2133","opcode":"1","channelId":"2","timestamp":"1652648925605"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6850","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"624\\\",\\\"result\\\":{\\\"_id\\\":\\\"99yALJGy4ZmFzaqvr\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class InverseParityIndex {\\\\n\\\\tpublic static Object[] charAtPos(Object[] arr, String par) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.259259259259259,\\\"familyId\\\":\\\"t75XWbLAZtLvQCeLh\\\",\\\"instructions\\\":\\\"Create a function that extracts the items from a **unique array**, given as parameter `arr`, filtered by **positional parity** (`odd` or `even`), given as parameter `par`.\\\\nReturn an array of items on **odd positions** (... 5, 3, 1) and on **even positions** (... 6, 4, 2) starting from the **last item** in the array.\\\\n\\\\n### Examples\\\\n```\\\\ncharAtPos([2, 4, 6, 8, 10], \\\\\\\"even\\\\\\\") ➞ [4, 8]\\\\n// 4 & 8 occupy the 4th & 2nd positions from right.\\\\n\\\\ncharAtPos(['E', 'D', 'A', 'B', 'I', 'T'], \\\\\\\"odd\\\\\\\") ➞ ['D', 'B', 'T']\\\\n// D, B and T occupy the 5th, 3rd and 1st positions from right.\\\\n\\\\ncharAtPos([\\\\\\\")\\\\\\\", \\\\\\\"(\\\\\\\", \\\\\\\"*\\\\\\\", \\\\\\\"&\\\\\\\", \\\\\\\"^\\\\","thisId":"2134","channelHost":"edabit.com","id":"2134","opcode":"1","channelId":"2","timestamp":"1652648925609"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"625\\\"]}\"]","thisId":"2135","channelHost":"edabit.com","id":"2135","opcode":"1","channelId":"2","timestamp":"1652648925736"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6265","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"625\\\",\\\"result\\\":{\\\"_id\\\":\\\"aL3SuicAGjAwgqY2d\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Halves {\\\\n  public static int halveCount(int a, int b) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.260869565217391,\\\"editorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"familyId\\\":\\\"wEZMuB35LYb8jwmDM\\\",\\\"instructions\\\":\\\"Given two integers `a` and `b`, return how many times `a` can be halved while still being greater than `b`.\\\\n\\\\n\\\\n### Examples\\\\n```\\\\nhalveCount(4666, 544) ➞ 3\\\\n// (4666 -> 2333 -> 1166.5 -> 583.25)\\\\n\\\\nhalveCount(466, 54) ➞ 3\\\\n// (466 -> 233 -> 116.5 -> 58.25)\\\\n\\\\nhalveCount(1324, 98) ➞ 3\\\\n// (1324 -> 662 -> 331 -> 165.5)\\\\n\\\\nhalveCount(624, 8) ➞ 6\\\\n// (624 -> 312 -> 156 -> 78 -> 39 -> 19.5 -> 9.75)\\\\n\\\\nhalveCount(1000, 3) ➞ 8\\\\n// (1000 -> 500 -> 250 -> 125 -> 62.5 -> 31.25 -> 15.625 -> 7.8125 -> 3.90625)\\\\n```\\\\n\\\\n\\\\n### Notes\\\\n- Integer `a` will always be (at least) greater than the _twice_ of `b`.\\\\n- You are expected to solve this","thisId":"2136","channelHost":"edabit.com","id":"2136","opcode":"1","channelId":"2","timestamp":"1652648925740"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"626\\\"]}\"]","thisId":"2137","channelHost":"edabit.com","id":"2137","opcode":"1","channelId":"2","timestamp":"1652648925833"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6105","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"626\\\",\\\"result\\\":{\\\"_id\\\":\\\"THuuakBitThtL6rmq\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class InverseParityIndex {\\\\n\\\\tpublic static Object[] charAtPos(Object[] arr, String par) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.263157894736842,\\\"familyId\\\":\\\"yjBXH2yyyK7xhSKxh\\\",\\\"instructions\\\":\\\"Write a function that returns the items from an array (given as parameter `r`) on odd or even positions, depending on it's specifier (given as parameter`s`) as being the parity. The final array will contain **\\\\\\\"odd\\\\\\\"** items on **odd positions** (1, 3, 5, ...) and **\\\\\\\"even\\\\\\\"** for items on **even positions** (2, 4, 6, ...).\\\\n\\\\n### Examples\\\\n```\\\\ncharAtPos([2, 4, 6, 8, 10], \\\\\\\"even\\\\\\\") ➞ [4, 8]\\\\n// 4 & 8 occupy the 4th & 2nd positions from right.\\\\n\\\\ncharAtPos(['E', 'D', 'A', 'B', 'I', 'T'], \\\\\\\"odd\\\\\\\") ➞ ['D', 'B', 'T']\\\\n// D, B and T occupy the 5th, 3rd and 1st positions from right.\\\\n\\\\ncharAtPos([\\\\\\\")\\\\\\\", \\\\\\\"(\\\\\\\", \\\\\\\"*\\\\\\\", \\\\\\\"","thisId":"2138","channelHost":"edabit.com","id":"2138","opcode":"1","channelId":"2","timestamp":"1652648925837"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"627\\\"]}\"]","thisId":"2139","channelHost":"edabit.com","id":"2139","opcode":"1","channelId":"2","timestamp":"1652648925947"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4677","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"627\\\",\\\"result\\\":{\\\"_id\\\":\\\"MYtinBHDSk4Bk7HnH\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class WordsInSentence {\\\\n\\\\tpublic static String findLongest(String sentence) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.257142857142857,\\\"familyId\\\":\\\"RNe4kWDMLPviBPFQ6\\\",\\\"instructions\\\":\\\"Write a **recursive** function that will return the longest word in a sentence. In cases where more than one word is found, return the first one.\\\\n\\\\n### Examples\\\\n```\\\\nfindLongest(\\\\\\\"I will and ever will be gratefully and perpetually loving you Tesh!\\ud83d\\ude18\\\\\\\") ➞ \\\\\\\"perpetually\\\\\\\"\\\\n\\\\nfindLongest(\\\\\\\"A thing of beauty is a joy forever.\\\\\\\") ➞ \\\\\\\"forever\\\\\\\"\\\\n\\\\nfindLongest(\\\\\\\"Forgetfulness is by all means powerless!\\\\\\\") ➞ \\\\\\\"forgetfulness\\\\\\\"\\\\n\\\\nfindLongest(\\\\\\\"The word strengths is the longest and most commonly used word with a single vowel.\\\\\\\") ➞ \\\\\\\"strengths\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Special characters and symbols *don't count* as part o","thisId":"2140","channelHost":"edabit.com","id":"2140","opcode":"1","channelId":"2","timestamp":"1652648925951"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"628\\\"]}\"]","thisId":"2141","channelHost":"edabit.com","id":"2141","opcode":"1","channelId":"2","timestamp":"1652648926056"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5129","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"628\\\",\\\"result\\\":{\\\"_id\\\":\\\"SnZ5y2hyxjZnWrMec\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String[] sortContacts(String[] arr, String sortBy) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.27027027027027,\\\"familyId\\\":\\\"boF9CobvmPifNngt6\\\",\\\"instructions\\\":\\\"Write a sorting function that takes in an array of names and sorts them **by last name** either alphabetically (`ASC`) or reverse-alphabetically (`DESC`).\\\\n\\\\n### Examples\\\\n```\\\\nsortContacts([\\\\n  \\\\\\\"John Locke\\\\\\\",\\\\n  \\\\\\\"Thomas Aquinas\\\\\\\",\\\\n  \\\\\\\"David Hume\\\\\\\",\\\\n  \\\\\\\"Rene Descartes\\\\\\\"\\\\n], \\\\\\\"ASC\\\\\\\") ➞ [\\\\n  \\\\\\\"Thomas Aquinas\\\\\\\",\\\\n  \\\\\\\"Rene Descartes\\\\\\\",\\\\n  \\\\\\\"David Hume\\\\\\\",\\\\n  \\\\\\\"John Locke\\\\\\\"\\\\n]\\\\n\\\\n// Aquinas (A) < Descartes (D) < Hume (H) < Locke (L)\\\\n\\\\nsortContacts([\\\\n  \\\\\\\"Paul Erdos\\\\\\\",\\\\n  \\\\\\\"Leonhard Euler\\\\\\\",\\\\n  \\\\\\\"Carl Gauss\\\\\\\"\\\\n], \\\\\\\"DESC\\\\\\\") ➞ [\\\\n  \\\\\\\"Carl Gauss\\\\\\\",\\\\n  \\\\\\\"Leonhard Euler\\\\\\\",\\\\n  \\\\\\\"","thisId":"2142","channelHost":"edabit.com","id":"2142","opcode":"1","channelId":"2","timestamp":"1652648926060"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"629\\\"]}\"]","thisId":"2143","channelHost":"edabit.com","id":"2143","opcode":"1","channelId":"2","timestamp":"1652648926163"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5004","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"629\\\",\\\"result\\\":{\\\"_id\\\":\\\"n63bWFSAxgh3Qwhvn\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class CaseIndexInverter {\\\\n\\\\tpublic static String invert(String s) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.27027027027027,\\\"editorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"familyId\\\":\\\"jEZuZzC3cRopKAwdH\\\",\\\"instructions\\\":\\\"Write a function that takes a string input and returns the string in a *reversed* **case** and **order**.\\\\n\\\\n### Examples\\\\n```\\\\ninvert(\\\\\\\"dLROW YM sI HsEt\\\\\\\") ➞ \\\\\\\"TeSh iS my worlD\\\\\\\"\\\\n\\\\ninvert(\\\\\\\"ytInIUgAsnOc\\\\\\\") ➞ \\\\\\\"CoNSaGuiNiTY\\\\\\\"\\\\n\\\\ninvert(\\\\\\\"step on NO PETS\\\\\\\") ➞ \\\\\\\"step on NO PETS\\\\\\\"\\\\n\\\\ninvert(\\\\\\\"XeLPMoC YTiReTXeD\\\\\\\") ➞ \\\\\\\"dExtErIty cOmplEx\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- No empty strings and will neither contain special characters nor punctuation.\\\\n- A recursive version of this challenge  can be found via this [link](https://edabit.com/challenge/RdwGosFoQQT6Z82sm).\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidd","thisId":"2144","channelHost":"edabit.com","id":"2144","opcode":"1","channelId":"2","timestamp":"1652648926168"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"630\\\"]}\"]","thisId":"2145","channelHost":"edabit.com","id":"2145","opcode":"1","channelId":"2","timestamp":"1652648926267"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4300","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"630\\\",\\\"result\\\":{\\\"_id\\\":\\\"hTWrPnnCScgSsoN9A\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class FactorialBound {\\\\n\\\\tpublic static long[] isExact(long n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.272727272727273,\\\"quality\\\":0,\\\"familyId\\\":\\\"YosHKnZpZgAE4KRyS\\\",\\\"instructions\\\":\\\"Create a  function that tests if a number is the **exact upper bound** of the factorial of `n`. If so, return an array of the **exact factorial bound** and `n`, or otherwise, an empty array.\\\\n\\\\n### Examples\\\\n```\\\\nisExact(6) ➞ [6, 3]\\\\n\\\\nisExact(24) ➞ [24, 4]\\\\n\\\\nisExact(125) ➞ []\\\\n\\\\nisExact(720) ➞ [720, 6]\\\\n\\\\nisExact(1024) ➞ []\\\\n\\\\nisExact(40320) ➞ [40320, 8]\\\\n```\\\\n\\\\n### Notes\\\\n- Alternatively, you can solve this challenge via recursion.\\\\n- A **recursive** version of this challenge can be found via this [link](https://edabit.com/challenge/HJSpyCG7we27Afkqn).\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertArrayEquals;\\\\nimport org","thisId":"2146","channelHost":"edabit.com","id":"2146","opcode":"1","channelId":"2","timestamp":"1652648926271"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"632\\\"]}\"]","thisId":"2147","channelHost":"edabit.com","id":"2147","opcode":"1","channelId":"2","timestamp":"1652648926369"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3185","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"632\\\",\\\"result\\\":{\\\"_id\\\":\\\"jQzopNeMisCmY4Fum\\\",\\\"author\\\":\\\"Nguyen Phan Dang\\\",\\\"authorId\\\":\\\"YLqdr7bYjwew2KM4N\\\",\\\"code\\\":\\\"public class ChallengeTests {\\\\t\\\\n\\\\tpublic static int secret(int i) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.2758620689655173,\\\"familyId\\\":\\\"68tepH8PkCt6qFwBP\\\",\\\"instructions\\\":\\\"Create a function based on the input and output. Look at the examples, there is a pattern.\\\\n\\\\n### Examples\\\\n```\\\\nsecret(24) ➞ 8\\\\n\\\\nsecret(42) ➞ 8\\\\n\\\\nsecret(15) ➞ -4\\\\n\\\\nsecret(52) ➞ 15\\\\n```\\\\n\\\\n### Notes\\\\n- `num` >= 10 and  `num` <= 52\\\\n- `Math.pow`, `*` and `-` can be helpful.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals;\\\\nimport org.junit.Test;\\\\n\\\\npublic class ChallengeTestSecret {\\\\n\\\\n\\\\t@Test\\\\n\\\\tpublic void test1() {\\\\n\\\\t\\\\tassertEquals(ChallengeTests.secret(24), 8);\\\\n\\\\t}\\\\n\\\\n\\\\t@Test\\\\n\\\\tpublic void test2() {\\\\n\\\\t\\\\tassertEquals(ChallengeTests.secret(32), 3);\\\\n\\\\t}\\\\n\\\\n\\\\t@Test\\\\n\\\\tpublic void test3() {\\\\n\\\\t\\\\tas","thisId":"2148","channelHost":"edabit.com","id":"2148","opcode":"1","channelId":"2","timestamp":"1652648926374"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"633\\\"]}\"]","thisId":"2149","channelHost":"edabit.com","id":"2149","opcode":"1","channelId":"2","timestamp":"1652648926467"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4864","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"633\\\",\\\"result\\\":{\\\"_id\\\":\\\"dPeRoAK4HDhQfuk4n\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class TreePhotography {\\\\n  public static String photograph(int[] trees) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.2777777777777777,\\\"familyId\\\":\\\"8qSc4nvgjuszG7sHS\\\",\\\"instructions\\\":\\\"Heading off to the **Tree Arboretum of Various Heights**, I bring along my camera to snap up a few photos. Ideally, I'd want to take a picture of as many trees as possible, but the taller trees may cover up the shorter trees behind it.\\\\n\\\\nA tree is hidden if it is **shorter** or the **same height** as the tree in front.\\\\n\\\\nGiven an array of tree heights, create a function which returns `\\\\\\\"left\\\\\\\"` or `\\\\\\\"right\\\\\\\"`, depending on which side allows me to see as many trees as possible.\\\\n\\\\n### Worked Example\\\\n```\\\\nphotograph([1, 3, 6, 5]) ➞ \\\\\\\"left\\\\\\\"\\\\n// If I stand on the left, I can see trees of heights 1, 3 and 6.\\\\n// If I stand on the right, I can see tree","thisId":"2150","channelHost":"edabit.com","id":"2150","opcode":"1","channelId":"2","timestamp":"1652648926471"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"631\\\"]}\"]","thisId":"2151","channelHost":"edabit.com","id":"2151","opcode":"1","channelId":"2","timestamp":"1652648926584"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4916","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"631\\\",\\\"result\\\":{\\\"_id\\\":\\\"XgaeYwf9NRx4f4iY7\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class EvenNumbers {\\\\n  public static int[] goldbachConjecture(int n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.272727272727273,\\\"familyId\\\":\\\"RN6NtvoYnLBz9pWxi\\\",\\\"instructions\\\":\\\"[Goldbach's Conjecture](https://en.wikipedia.org/wiki/Goldbach%27s_conjecture) is amongst the oldest and well-known unsolved mathematical problems. In correspondence with [Leonhard Euler](https://en.wikipedia.org/wiki/Leonhard_Euler) in 1742, German mathematician [Christian Goldbach](https://en.wikipedia.org/wiki/Christian_Goldbach) made a conjecture, which states:\\\\n\\\\n**\\\\\\\"Every even whole number greater than 2 is the sum of two prime numbers.\\\\\\\"**\\\\n\\\\nEven though it's been thoroughly tested and analyzed and seems to be true, it hasn't been proved yet (thus, remaining a conjecture.)\\\\n\\\\nCreate a function that takes a number and returns an array as per the following rule","thisId":"2152","channelHost":"edabit.com","id":"2152","opcode":"1","channelId":"2","timestamp":"1652648926648"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"634\\\"]}\"]","thisId":"2153","channelHost":"edabit.com","id":"2153","opcode":"1","channelId":"2","timestamp":"1652648926688"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"33120","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"634\\\",\\\"result\\\":{\\\"_id\\\":\\\"WC9acAYzqvPk2MjGj\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class FibonacciWord {\\\\n\\\\tpublic static String generate(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.310344827586207,\\\"quality\\\":0,\\\"familyId\\\":\\\"Wy53c2BnYARcb7aCJ\\\",\\\"instructions\\\":\\\"A Fibonacci Word is a specific sequence of binary digits (or symbols from any two-letter alphabet). The Fibonacci Word is formed by repeated concatenation in the same way that the Fibonacci numbers are formed by repeated addition.\\\\n\\\\nCreate a function that takes a number `n` as an argument and returns the first `n` elements of the Fibonacci Word sequence.\\\\n\\\\nIf `n < 2`, the function must return `\\\\\\\"invalid\\\\\\\"`.\\\\n\\\\n### Examples\\\\n```\\\\nfiboWord(1) ➞ \\\\\\\"invalid\\\\\\\"\\\\n\\\\nfiboWord(3) ➞ \\\\\\\"b, a, ab\\\\\\\"\\\\n\\\\nfiboWord(7) ➞ \\\\\\\"b, a, ab, aba, abaab, abaababa, abaababaabaab\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- You can **try** solving this challenge using a recursive approac","thisId":"2154","channelHost":"edabit.com","id":"2154","opcode":"1","channelId":"2","timestamp":"1652648926750"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"635\\\"]}\"]","thisId":"2155","channelHost":"edabit.com","id":"2155","opcode":"1","channelId":"2","timestamp":"1652648926788"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4611","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"635\\\",\\\"result\\\":{\\\"_id\\\":\\\"j3pBTZLXSo7JJ2iAy\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class RightShift {\\\\n\\\\tpublic static int shiftToRight(int x, int y) {\\\\n\\\\t\\\\t// recursive code here\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.2857142857142856,\\\"editorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"familyId\\\":\\\"zctwoeaiQAFAcbiE4\\\",\\\"instructions\\\":\\\"The **right shift** operation is similar to **floor division by powers of two**, thus, the process is _repetitive_ and can be done _recursively_. \\\\n\\\\nSample calculation using the right shift operator ( `>>` ):\\\\n```\\\\n80 >> 3 = floor(80/2^3) = floor(80/8) = 10\\\\n-24 >> 2 = floor(-24/2^2) = floor(-24/4) = -6\\\\n-5 >> 1 = floor(-5/2^1) = floor(-5/2) = -3\\\\n```\\\\n\\\\nWrite a function that **mimics** (without the use of **>>**) the right shift operator and returns the result from the two given integers.\\\\n\\\\n### Examples\\\\n```\\\\nshiftToRight(80, 3) ➞ 10\\\\n\\\\nshiftToRight(-24, 2) ➞ -6\\\\n\\\\nshiftToRight(-5, 1) ➞ -3\\\\n\\\\nshif","thisId":"2156","channelHost":"edabit.com","id":"2156","opcode":"1","channelId":"2","timestamp":"1652648926792"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"636\\\"]}\"]","thisId":"2157","channelHost":"edabit.com","id":"2157","opcode":"1","channelId":"2","timestamp":"1652648926885"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7774","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"636\\\",\\\"result\\\":{\\\"_id\\\":\\\"vpSCPsQKcQwnFdMS4\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class LongDigits {\\\\n\\\\tpublic static int digitsCount(long n) {\\\\n\\\\t\\\\t// recursive solution here\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.287037037037037,\\\"familyId\\\":\\\"dk6TvR3BPp7M89Cav\\\",\\\"instructions\\\":\\\"Create a function that will *recursively* count the number of digits of a number. Conversion of the number to a string is not allowed, thus, the approach is recursive.\\\\n\\\\n### Examples\\\\n```\\\\ndigitsCount(4666) ➞ 4\\\\n\\\\ndigitsCount(544) ➞ 3\\\\n\\\\ndigitsCount(121317) ➞ 6\\\\n\\\\ndigitsCount(0) ➞ 1\\\\n\\\\ndigitsCount(12345) ➞ 5\\\\n\\\\ndigitsCount(1289396387328L) ➞ 13\\\\n```\\\\n\\\\n### Notes\\\\n- You are expected to solve this challenge via **recursion**.\\\\n- You can check on the **Resources** tab for more details about *recursion* in Java.\\\\n- An **iterative** version of this challenge can be found via this [link](https://edabit.com/challenge/aAMcXEH67BLzJfyZz).\\\\n- A *","thisId":"2158","channelHost":"edabit.com","id":"2158","opcode":"1","channelId":"2","timestamp":"1652648926889"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"637\\\"]}\"]","thisId":"2159","channelHost":"edabit.com","id":"2159","opcode":"1","channelId":"2","timestamp":"1652648927027"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5674","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"637\\\",\\\"result\\\":{\\\"_id\\\":\\\"7TCtjPThGdrSDHQK5\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String abacabaPattern(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.298507462686567,\\\"familyId\\\":\\\"pq4ForkMrkekiTome\\\",\\\"instructions\\\":\\\"The ABACABA pattern is a recursive fractal pattern that shows up in many places in the real world (such as in geometry, art, music, poetry, number systems, literature and higher dimensions).\\\\n\\\\nCreate a function that takes a number `n` as an argument and returns a `string` that represents the full pattern.\\\\n\\\\n### Examples\\\\n```\\\\nabacabaPattern(1) ➞ \\\\\\\"A\\\\\\\"\\\\n\\\\nabacabaPattern(2) ➞ \\\\\\\"ABA\\\\\\\"\\\\n\\\\nabacabaPattern(3) ➞ \\\\\\\"ABACABA\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Result should always be uppercase.\\\\n- Check the **Resources** tab for more info on the ABACABA pattern.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n ","thisId":"2160","channelHost":"edabit.com","id":"2160","opcode":"1","channelId":"2","timestamp":"1652648927031"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"638\\\"]}\"]","thisId":"2161","channelHost":"edabit.com","id":"2161","opcode":"1","channelId":"2","timestamp":"1652648927158"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5849","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"638\\\",\\\"result\\\":{\\\"_id\\\":\\\"2seaqQz4fvLDCLJz2\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"import java.util.ArrayList;\\\\nimport java.util.List;\\\\n\\\\npublic class Bunches {\\\\n\\\\tpublic static List<Fruit> splitBunches(List<Fruit> bunches) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\\n\\\\nclass Fruit {\\\\n\\\\tprivate String name;\\\\n\\\\tprivate int quantity;\\\\n\\\\t\\\\n\\\\tpublic Fruit(String name, int quantity) {\\\\n\\\\t\\\\tthis.name = name;\\\\n\\\\t\\\\tthis.quantity = quantity;\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\tpublic void setName(String name) { this.name = name; }\\\\n\\\\tpublic void setQuantity(int quantity) { this.quantity = quantity; }\\\\n\\\\tpublic String getName() { return this.name; }\\\\n\\\\tpublic int getQuantity() { return this.quantity; }\\\\n\\\\tpublic String toString() { \\\\n\\\\t\\\\treturn String.format(\\\\\\\"{name: %s, quantity: %d}\\\\\\\", this.name, this.quantity); \\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.303030303030303,\\\"familyId\\\":\\\"JMrQcuAA9rkvK29L9\\\",\\\"instructions\\\":\\\"You bought a few bunches of fruit over th","thisId":"2162","channelHost":"edabit.com","id":"2162","opcode":"1","channelId":"2","timestamp":"1652648927162"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"639\\\"]}\"]","thisId":"2163","channelHost":"edabit.com","id":"2163","opcode":"1","channelId":"2","timestamp":"1652648927252"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6347","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"639\\\",\\\"result\\\":{\\\"_id\\\":\\\"kJu2Hvsr4L2BRZqHW\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean validate(String str) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.3043478260869565,\\\"familyId\\\":\\\"eiYwT38Ya7tMvCAcb\\\",\\\"instructions\\\":\\\"Write a function that returns `true` if the phone number is in a valid format. Valid formats are as follows:\\\\n\\\\n**With Country Code** | **Without Country Code**\\\\n--- | ---\\\\n+1-892-445-7663 | 892-445-7663\\\\n1-892-445-7663 | (892) 445-7663\\\\n1 (892) 445-7663 | 892.567.8901\\\\n1.892.567.8901 | 1/892/567/8901\\\\n1 892 567 8901 | 892/567/8901\\\\n18925678901 | 892 567 8901\\\\n\\\\n### Examples\\\\n```\\\\nvalidate(\\\\\\\"578-332-1114\\\\\\\") ➞ true\\\\n\\\\nvalidate(\\\\\\\"57-332-1114\\\\\\\") ➞ false\\\\n\\\\nvalidate(\\\\\\\"577 332  1114\\\\\\\") ➞ false\\\\n// More than one space in between digits clusters.\\\\n\\\\nvalidate(\\\\\\\"57 332 1114\\\\\\\") ➞ false\\\\n// Unacceptable digit cluster length.\\\\n\\\\nvalidate(\\\\\\\"157%332-1114\\\\\\\") ","thisId":"2164","channelHost":"edabit.com","id":"2164","opcode":"1","channelId":"2","timestamp":"1652648927265"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"640\\\"]}\"]","thisId":"2165","channelHost":"edabit.com","id":"2165","opcode":"1","channelId":"2","timestamp":"1652648927373"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4485","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"640\\\",\\\"result\\\":{\\\"_id\\\":\\\"3yzvdLMYJbczD548d\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String edabitInString(String s) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.306451612903226,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"Pfkv8Fvs7XgYvbqpe\\\",\\\"instructions\\\":\\\"A string contains the word \\\\\\\"edabit\\\\\\\" if a _subsequence_ of its characters spell \\\\\\\"edabit\\\\\\\".\\\\n\\\\nWrite a function that accepts a string and returns “YES” if the string contains a subsequence of the word edabit or \\\\\\\"NO\\\\\\\" if it does not.\\\\n\\\\n### Examples\\\\n```\\\\nedabitInString(“eddaaabt”) ➞ “NO”\\\\n\\\\nedabitInString(“edwardisabletodoit”) ➞ “YES”\\\\n\\\\nedabitInString(“abecdfghijklmnopqrstuvwxyz”) ➞ “NO”\\\\n```\\\\n\\\\n### Notes\\\\nCheck the **Resources** tab for more details on subsequence.\\\",\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals;\\\\nimport org.junit.Test;\\\\n\\\\n/**\\\\n * @author edwardclark\\\\n**/\\\\n\\\\npublic class Challenge","thisId":"2166","channelHost":"edabit.com","id":"2166","opcode":"1","channelId":"2","timestamp":"1652648927377"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"641\\\"]}\"]","thisId":"2167","channelHost":"edabit.com","id":"2167","opcode":"1","channelId":"2","timestamp":"1652648927453"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5341","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"641\\\",\\\"result\\\":{\\\"_id\\\":\\\"3SdTEG59DAA4cPBFR\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean[] validateSwaps(String[] arr, String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.3076923076923075,\\\"familyId\\\":\\\"WeAQt8coonWNKBRnT\\\",\\\"instructions\\\":\\\"Given an array of strings and an original string, write a function to output an array of boolean values - `true` if the word can be formed from the original word by swapping two letters **only once** and `false` otherwise.\\\\n\\\\n### Examples\\\\n```\\\\nvalidateSwaps([\\\\\\\"BACDE\\\\\\\", \\\\\\\"EBCDA\\\\\\\", \\\\\\\"BCDEA\\\\\\\", \\\\\\\"ACBED\\\\\\\"], \\\\\\\"ABCDE\\\\\\\")\\\\n➞ [true, true, false, false]\\\\n\\\\n// Swap \\\\\\\"A\\\\\\\" and \\\\\\\"B\\\\\\\" from \\\\\\\"ABCDE\\\\\\\" to get \\\\\\\"BACDE\\\\\\\".\\\\n// Swap \\\\\\\"A\\\\\\\" and \\\\\\\"E\\\\\\\" from \\\\\\\"ABCDE\\\\\\\" to get \\\\\\\"EBCDA\\\\\\\".\\\\n// Both \\\\\\\"BCDEA\\\\\\\" and \\\\\\\"ACBED\\\\\\\" cannot be formed from \\\\\\\"ABCDE\\\\\\\" using only a single swap.\\\\n\\\\nvalidateSwaps([\\\\\\\"32145\\\\\\\", \\","thisId":"2168","channelHost":"edabit.com","id":"2168","opcode":"1","channelId":"2","timestamp":"1652648927457"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"642\\\"]}\"]","thisId":"2169","channelHost":"edabit.com","id":"2169","opcode":"1","channelId":"2","timestamp":"1652648927557"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4129","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"642\\\",\\\"result\\\":{\\\"_id\\\":\\\"6KPGPdQDCXsHYaQTL\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String toStarShorthand(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.3076923076923075,\\\"familyId\\\":\\\"gaNLmNjExBo53hJxY\\\",\\\"instructions\\\":\\\"Write a function that converts a string into **star shorthand**. If a character is repeated `n` times, convert it into `character*n`.\\\\n\\\\n### Examples\\\\n```\\\\ntoStarShorthand(\\\\\\\"abbccc\\\\\\\") ➞ \\\\\\\"ab*2c*3\\\\\\\"\\\\n\\\\ntoStarShorthand(\\\\\\\"77777geff\\\\\\\") ➞ \\\\\\\"7*5gef*2\\\\\\\"\\\\n\\\\ntoStarShorthand(\\\\\\\"abc\\\\\\\") ➞ \\\\\\\"abc\\\\\\\"\\\\n\\\\ntoStarShorthand(\\\\\\\"\\\\\\\") ➞ \\\\\\\"\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Leave lone occurrences of a character as is.\\\\n- Return an empty string if given an empty string input.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"ab*2c*3\\\\\\\", Challenge.","thisId":"2170","channelHost":"edabit.com","id":"2170","opcode":"1","channelId":"2","timestamp":"1652648927561"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"643\\\"]}\"]","thisId":"2171","channelHost":"edabit.com","id":"2171","opcode":"1","channelId":"2","timestamp":"1652648927653"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4669","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"643\\\",\\\"result\\\":{\\\"_id\\\":\\\"MfkWhtu67fD5d5YM2\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean possiblePalindrome(String str) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.311111111111111,\\\"familyId\\\":\\\"jumBHWjcLaKjYowvv\\\",\\\"instructions\\\":\\\"Create a function that determines whether it is possible to build a palindrome from the characters in a string.\\\\n\\\\n### Examples\\\\n```\\\\npossiblePalindrome(\\\\\\\"acabbaa\\\\\\\") ➞ true\\\\n// Can make the following palindrome: \\\\\\\"aabcbaa\\\\\\\"\\\\n\\\\npossiblePalindrome(\\\\\\\"aacbdbc\\\\\\\") ➞ true\\\\n// Can make the following palindrome: \\\\\\\"abcdcba\\\\\\\"\\\\n\\\\npossiblePalindrome(\\\\\\\"aacbdb\\\\\\\") ➞ false\\\\n\\\\npossiblePalindrome(\\\\\\\"abacbb\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(true, Challenge.possiblePalindrome(\\\\\\\"acabbaa\\\\\\\"","thisId":"2172","channelHost":"edabit.com","id":"2172","opcode":"1","channelId":"2","timestamp":"1652648927666"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"644\\\"]}\"]","thisId":"2173","channelHost":"edabit.com","id":"2173","opcode":"1","channelId":"2","timestamp":"1652648927773"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6914","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"644\\\",\\\"result\\\":{\\\"_id\\\":\\\"kHLmnk3RhekGKe7fP\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean isValidIP(String str) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.3142857142857145,\\\"familyId\\\":\\\"eikCf83tZGeiGjok5\\\",\\\"instructions\\\":\\\"Create a function that takes a string (IPv4 address in standard dot-decimal format) and returns `true` if the IP is valid or `false` if it's not. For information on IPv4 formatting, please refer to the resources in the **Resources** tab.\\\\n\\\\n### Examples\\\\n```\\\\nisValidIP(\\\\\\\"1.2.3.4\\\\\\\") ➞ true\\\\n\\\\nisValidIP(\\\\\\\"1.2.3\\\\\\\") ➞ false\\\\n\\\\nisValidIP(\\\\\\\"1.2.3.4.5\\\\\\\") ➞ false\\\\n\\\\nisValidIP(\\\\\\\"123.45.67.89\\\\\\\") ➞ true\\\\n\\\\nisValidIP(\\\\\\\"123.456.78.90\\\\\\\") ➞ false\\\\n\\\\nisValidIP(\\\\\\\"123.045.067.089\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\n- IPv6 addresses are not valid.\\\\n- Leading zeros are not valid (`\\\\\\\"123.045.067.089\\\\\\\"` should return `false`).\\\\n- You can expect a single string for e","thisId":"2174","channelHost":"edabit.com","id":"2174","opcode":"1","channelId":"2","timestamp":"1652648927780"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"645\\\"]}\"]","thisId":"2175","channelHost":"edabit.com","id":"2175","opcode":"1","channelId":"2","timestamp":"1652648927871"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4051","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"645\\\",\\\"result\\\":{\\\"_id\\\":\\\"7PSvBgGjiA252WdiN\\\",\\\"author\\\":\\\"_fluffyy\\\",\\\"authorId\\\":\\\"foytX6kH9wiSYqLtT\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean isAutobiographical(int n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.3333333333333335,\\\"quality\\\":4.555555555555555,\\\"familyId\\\":\\\"YEuFxy2cw6ERYJsXi\\\",\\\"instructions\\\":\\\"If a number is **autobiographical**, then the number's digits describe itself. The first digit is the amount of times the digit 0 appears, the second digit is the amount of times the digit 1 appears, the third digit is the amount of times the digit 2 appears, etc. **This repeats for all digits of the number.** The number `6210001000` is autobiographical, because it has six 0's, two 1's, one 2, zero 3's, zero 4's, zero 5's, one 6, zero 7's, zero 8's, and zero 9's.\\\\n\\\\nCreate a function that takes an integer `n` and returns whether or not `n` is an autobiographical number.\\\\n\\\\n### Examples\\\\n```\\\\nisAutobiographical(12345) ➞ false\\\\n\\\\nisAutobiogra","thisId":"2176","channelHost":"edabit.com","id":"2176","opcode":"1","channelId":"2","timestamp":"1652648927875"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"646\\\"]}\"]","thisId":"2177","channelHost":"edabit.com","id":"2177","opcode":"1","channelId":"2","timestamp":"1652648927981"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3139","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"646\\\",\\\"result\\\":{\\\"_id\\\":\\\"P2aqoBtZj6GCsdFsY\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int minSwaps(String str) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.3333333333333335,\\\"familyId\\\":\\\"QjqTWiAqaoYAZYQFb\\\",\\\"instructions\\\":\\\"Create a function that returns the minimum number of **swaps** it takes to transform a **binary string** into a string of **alternating 0s and 1s**. A swap is switching from a 0 to a 1 or vice versa.\\\\n\\\\n### Examples\\\\n```\\\\nminSwaps(\\\\\\\"010010111\\\\\\\") ➞ 4\\\\n\\\\n// Two possible conversions:\\\\n//   1. \\\\\\\"101010101\\\\\\\" (4 swaps)\\\\n//   2. \\\\\\\"010101010\\\\\\\" (5 swaps)\\\\n\\\\nminSwaps(\\\\\\\"10101010\\\\\\\") ➞ 0\\\\n\\\\nminSwaps(\\\\\\\"10010\\\\\\\") ➞ 2\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(4, Challenge.minSwaps(\\\\\\\"010010111\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@T","thisId":"2178","channelHost":"edabit.com","id":"2178","opcode":"1","channelId":"2","timestamp":"1652648927984"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"647\\\"]}\"]","thisId":"2179","channelHost":"edabit.com","id":"2179","opcode":"1","channelId":"2","timestamp":"1652648928083"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4393","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"647\\\",\\\"result\\\":{\\\"_id\\\":\\\"jzECwjcK3LZ3YXhXC\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class TruthyOrFalsy {\\\\n  public static boolean allTruthy(Object... values) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.3333333333333335,\\\"familyId\\\":\\\"6e742Xdyk4TSakh8Q\\\",\\\"instructions\\\":\\\"Write a function that returns `true` if all parameters are truthy, and `false` otherwise.\\\\n\\\\n### Examples\\\\n```\\\\nallTruthy(\\\\\\\"t\\\\\\\", \\\\\\\"te\\\\\\\", \\\\\\\"tes\\\\\\\", \\\\\\\"tesh\\\\\\\", \\\\\\\"tesha\\\\\\\") ➞ true\\\\n\\\\nallTruthy(true, true, true) ➞ true\\\\n\\\\nallTruthy(true, false, true) ➞ false\\\\n\\\\nallTruthy(5, 4, 3, 2, 1, 0) ➞ false\\\\n```\\\\n\\\\n### Notes\\\\n- Falsy values include `false`, `0`, `\\\\\\\"\\\\\\\"` (empty string), `null`, `POSITIVE_INFINITY`, `NEGATIVE_INFINITY` and `NaN`, everything else is truthy.\\\\n- At least one parameter will be given.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"/** \\\\n=================================== \\\\nTestGen 2.3 for JUnit 4.1","thisId":"2180","channelHost":"edabit.com","id":"2180","opcode":"1","channelId":"2","timestamp":"1652648928104"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"648\\\"]}\"]","thisId":"2181","channelHost":"edabit.com","id":"2181","opcode":"1","channelId":"2","timestamp":"1652648928209"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4310","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"648\\\",\\\"result\\\":{\\\"_id\\\":\\\"u7hFpEuA2oFoaxwsi\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class RiseAndFall {\\\\n\\\\tpublic static boolean isUndulating(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\t\\\\n}\\\",\\\"difficulty\\\":2.3333333333333335,\\\"familyId\\\":\\\"uNf39zkXnGGajX9Cs\\\",\\\"instructions\\\":\\\"In this challenge, you have to establish if a given number is undulating. A number `n` is undulating when the following conditions are **all true**:\\\\n\\\\n- `n` has at least three digits.\\\\n- `n` has exactly two different digits.\\\\n- The two digits of `n` are alternating without repeating groups.\\\\n\\\\nIf we think at the first digit of an undulating number as an \\\\\\\"A\\\\\\\", and to its  second digit as a \\\\\\\"B\\\\\\\", we can notice a sequence of the form \\\\\\\"ABA\\\\\\\", that can repeat infinite times and ends either with an \\\\\\\"A\\\\\\\" or with a \\\\\\\"B\\\\\\\", but without clusters of \\\\\\\"AA\\\\\\\" or \\\\\\\"BB\\\\\\\" into it.\\\\n\\\\nGiven a positive integer `n`, implement a function that returns `tru","thisId":"2182","channelHost":"edabit.com","id":"2182","opcode":"1","channelId":"2","timestamp":"1652648928213"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"649\\\"]}\"]","thisId":"2183","channelHost":"edabit.com","id":"2183","opcode":"1","channelId":"2","timestamp":"1652648928317"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6973","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"649\\\",\\\"result\\\":{\\\"_id\\\":\\\"BqiQJWgrntvEKhgPS\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class SymmetricalRug {\\\\n  public static int countLayers(String[] rug) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.3333333333333335,\\\"familyId\\\":\\\"oSwPu4twBZ4Schqky\\\",\\\"instructions\\\":\\\"Write a function that counts how many concentric layers a rug has.\\\\n\\\\n### Examples\\\\n```\\\\ncountLayers([\\\\n \\\\\\\"TTTTTTTTTTTTTT\\\\\\\",\\\\n \\\\\\\"TEEEEEEEEEEEET\\\\\\\",\\\\n \\\\\\\"TESSSSSSSSSSET\\\\\\\",\\\\n \\\\\\\"TESHHHHHHHHSET\\\\\\\",\\\\n \\\\\\\"TESHAAAAAAHSET\\\\\\\",\\\\n \\\\\\\"TESHHHHHHHHSET\\\\\\\",\\\\n \\\\\\\"TESSSSSSSSSSET\\\\\\\",\\\\n \\\\\\\"TEEEEEEEEEEEET\\\\\\\",\\\\n \\\\\\\"TTTTTTTTTTTTTT\\\\\\\"\\\\n]) ➞ 5\\\\n\\\\ncountLayers([\\\\n  \\\\\\\"AAAA\\\\\\\",\\\\n  \\\\\\\"ABBA\\\\\\\",\\\\n  \\\\\\\"AAAA\\\\\\\"\\\\n]) ➞ 2\\\\n\\\\ncountLayers([\\\\n  \\\\\\\"AAAAAAAAA\\\\\\\",\\\\n  \\\\\\\"ABBBBBBBA\\\\\\\",\\\\n  \\\\\\\"ABBAAABBA\\\\\\\",\\\\n  \\\\\\\"ABBBBBBBA\\\\\\\",\\\\n  \\\\\\\"AAAAAAAAA\\\\\\\"\\\\n]) ➞ 3\\\\n\\\\ncountLayers([\\\\n  \\\\\\\"AAAAAAAAAAA\\\\\\\",\\\\n  \\\\\\\"AABBBBBBBAA\\\\\\\",\\\\n  \\\\\\\"AABCCCCCBAA\\\\\\\",\\\\n  \\\\\\","thisId":"2184","channelHost":"edabit.com","id":"2184","opcode":"1","channelId":"2","timestamp":"1652648928322"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"650\\\"]}\"]","thisId":"2185","channelHost":"edabit.com","id":"2185","opcode":"1","channelId":"2","timestamp":"1652648928415"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5374","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"650\\\",\\\"result\\\":{\\\"_id\\\":\\\"kKQPf5xTAdnBjqvZ8\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String[] split(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.3454545454545452,\\\"familyId\\\":\\\"5pcdZXF9zHT6m3XSe\\\",\\\"instructions\\\":\\\"Write a function that groups a string into **parentheses clusters**. Each cluster should be **balanced**.\\\\n\\\\n### Examples\\\\n```\\\\nsplit(\\\\\\\"()()()\\\\\\\") ➞ [\\\\\\\"()\\\\\\\", \\\\\\\"()\\\\\\\", \\\\\\\"()\\\\\\\"]\\\\n\\\\nsplit(\\\\\\\"((()))\\\\\\\") ➞ [\\\\\\\"((()))\\\\\\\"]\\\\n\\\\nsplit(\\\\\\\"((()))(())()()(()())\\\\\\\") ➞ [\\\\\\\"((()))\\\\\\\", \\\\\\\"(())\\\\\\\", \\\\\\\"()\\\\\\\", \\\\\\\"()\\\\\\\", \\\\\\\"(()())\\\\\\\"]\\\\n\\\\nsplit(\\\\\\\"((())())(()(()()))\\\\\\\") ➞ [\\\\\\\"((())())\\\\\\\", \\\\\\\"(()(()()))\\\\\\\"]\\\\n```\\\\n\\\\n### Notes\\\\n- All input strings will **only** contain parentheses.\\\\n- **Balanced**: Every opening parens `(` must exist with its matching closing parens `)` in the same cluster.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport stat","thisId":"2186","channelHost":"edabit.com","id":"2186","opcode":"1","channelId":"2","timestamp":"1652648928420"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"651\\\"]}\"]","thisId":"2187","channelHost":"edabit.com","id":"2187","opcode":"1","channelId":"2","timestamp":"1652648928515"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6062","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"651\\\",\\\"result\\\":{\\\"_id\\\":\\\"W8zoCps44yDxckivb\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class WordsFromNames {\\\\n  public static boolean anagram(String name, String[] words) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.347826086956522,\\\"familyId\\\":\\\"nGubb26XrCpCHau7S\\\",\\\"instructions\\\":\\\"Write a function that returns `true` if a given name can generate an array of words.\\\\n\\\\n### Examples\\\\n```\\\\nanagram(\\\\\\\"Tesha Xavier\\\\\\\", [\\\\\\\"six\\\\\\\", \\\\\\\"have\\\\\\\", \\\\\\\"rate\\\\\\\"]) ➞ true\\\\n\\\\nanagram(\\\\\\\"Natalie Portman\\\\\\\", [\\\\\\\"ornamental\\\\\\\", \\\\\\\"pita\\\\\\\"]) ➞ true\\\\n\\\\nanagram(\\\\\\\"Chris Pratt\\\\\\\", [\\\\\\\"chirps\\\\\\\", \\\\\\\"rat\\\\\\\"]) ➞ false\\\\n// Not all letters are used \\\\n\\\\nanagram(\\\\\\\"Jeff Goldblum\\\\\\\", [\\\\\\\"jog\\\\\\\", \\\\\\\"meld\\\\\\\", \\\\\\\"bluffs\\\\\\\"]) ➞ false\\\\n// \\\\\\\"s\\\\\\\" does not exist in the original name\\\\n\\\\nanagram(\\\\\\\"Justin Bieber\\\\\\\", [\\\\\\\"injures\\\\\\\", \\\\\\\"ebb\\\\\\\", \\\\\\\"it\\\\\\\"]) ➞ true\\\\n```\\\\n\\\\n### Notes\\\\n- Each letter in the name may only be used","thisId":"2188","channelHost":"edabit.com","id":"2188","opcode":"1","channelId":"2","timestamp":"1652648928528"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"652\\\"]}\"]","thisId":"2189","channelHost":"edabit.com","id":"2189","opcode":"1","channelId":"2","timestamp":"1652648928668"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4375","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"652\\\",\\\"result\\\":{\\\"_id\\\":\\\"GZzE4tix4JutSyp4S\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String easterDate(int y) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.3548387096774195,\\\"familyId\\\":\\\"u3NMgJMTEpuzpDxBt\\\",\\\"instructions\\\":\\\"The Christian holiday of Easter Sunday is a movable feast. It can occur on any date from March 22 to April 25. The date depends on the timing between the Paschal Full Moon and the spring equinox. It wasn't until the late 19th century that a formula was developed to accurately predict Easter's date for a given year.\\\\n\\\\nYour task is to use this formula, also known as Butcher's Algorithm, to write a function that will return the date of Easter for any year after 1600. See the **Resources** tab for a detailed description of the algorithm.\\\\n\\\\n### Examples\\\\n```\\\\neasterDate(1600) ➞ \\\\\\\"April 2\\\\\\\"\\\\n\\\\neasterDate(2020) ➞ \\\\\\\"April 12\\\\\\\"\\\\n\\\\neasterDate(1853) ➞ \\\\\\\"March 27\\\\\\\"\\\\n\\\\neaster","thisId":"2190","channelHost":"edabit.com","id":"2190","opcode":"1","channelId":"2","timestamp":"1652648928673"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"653\\\"]}\"]","thisId":"2191","channelHost":"edabit.com","id":"2191","opcode":"1","channelId":"2","timestamp":"1652648928778"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5443","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"653\\\",\\\"result\\\":{\\\"_id\\\":\\\"FRMkLfEBFM7bykHEt\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class BooleanWord {\\\\n\\\\tpublic static Boolean[] toBoolArray(String bits) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n\\\\n\\\\tpublic static String toBitString(String word) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.357142857142857,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"XovtyQdMvhWXfNYeY\\\",\\\"instructions\\\":\\\"Create two functions that convert a word to a bitstring and then to a boolean array based on the following criteria:\\\\n\\\\n1. Locate the position of the letter in the English alphabet (from 1 to 26).\\\\n2. Odd positions will be represented as `1` and even positions will be represented as `0`.\\\\n3. Convert the represented positions to boolean values, `1` for `true` and `0` for `false`.\\\\n4. Store the conversions into an array.\\\\n\\\\n### Examples\\\\n```\\\\ntoBoolArray(toBitString(\\\\\\\"deep\\\\\\\")) ➞ [false, true, true, false]\\\\n// deep converts to 0110\\\\n// d is the 4th alpha","thisId":"2192","channelHost":"edabit.com","id":"2192","opcode":"1","channelId":"2","timestamp":"1652648928783"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"654\\\"]}\"]","thisId":"2193","channelHost":"edabit.com","id":"2193","opcode":"1","channelId":"2","timestamp":"1652648928877"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4364","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"654\\\",\\\"result\\\":{\\\"_id\\\":\\\"tA2pDTyaW7MeTK5rD\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String[] mostFrequentChar(String[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.358974358974359,\\\"familyId\\\":\\\"in2WRs2qoHYvjfHav\\\",\\\"instructions\\\":\\\"Write a function that returns the most frequent character in an array of words.\\\\n\\\\n### Examples\\\\n```\\\\nmostFrequentChar([\\\\\\\"apple\\\\\\\", \\\\\\\"bandage\\\\\\\", \\\\\\\"yodel\\\\\\\", \\\\\\\"make\\\\\\\"])\\\\n➞ [\\\\\\\"a\\\\\\\", \\\\\\\"e\\\\\\\"]\\\\n\\\\nmostFrequentChar([\\\\\\\"music\\\\\\\", \\\\\\\"madness\\\\\\\", \\\\\\\"maniac\\\\\\\", \\\\\\\"motion\\\\\\\"])\\\\n➞ [\\\\\\\"m\\\\\\\"]\\\\n\\\\nmostFrequentChar([\\\\\\\"the\\\\\\\", \\\\\\\"hills\\\\\\\", \\\\\\\"are\\\\\\\", \\\\\\\"alive\\\\\\\", \\\\\\\"with\\\\\\\", \\\\\\\"the\\\\\\\", \\\\\\\"sound\\\\\\\", \\\\\\\"of\\\\\\\", \\\\\\\"music\\\\\\\"])\\\\n➞ [\\\\\\\"e\\\\\\\", \\\\\\\"h\\\\\\\", \\\\\\\"i\\\\\\\"]\\\\n```\\\\n\\\\n### Notes\\\\n- If multiple characters tie for most frequent, list all of them in alphabetical order.\\\\n- Words will be in lower case.\\\",\\\"lab\\\":\\\"import static o","thisId":"2194","channelHost":"edabit.com","id":"2194","opcode":"1","channelId":"2","timestamp":"1652648928881"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"655\\\"]}\"]","thisId":"2195","channelHost":"edabit.com","id":"2195","opcode":"1","channelId":"2","timestamp":"1652648928977"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6211","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"655\\\",\\\"result\\\":{\\\"_id\\\":\\\"7DRLdMehCk9eWFWyR\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class NumberedCards {\\\\n\\\\tpublic static boolean swapCards(int x, int y) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.3636363636363638,\\\"familyId\\\":\\\"93LoQsR482n3acWAg\\\",\\\"instructions\\\":\\\"Two players draw a pair of numbered cards so that both players can form a *2 digit number*. A winner can be decided if one player's number is larger than the other.\\\\n\\\\nHowever, there is a rule where a player can swap any one of their cards with any one of the other player's cards in a gamble to get a higher number! Note that it is illegal to swap the order of **your own cards**. That means if you draw a `1` then a `9`, you **cannot** swap them to get `91`.\\\\n\\\\n![Numbered Cards](https://edabit-challenges.s3.amazonaws.com/ffnIjMHhwK.png)\\\\n\\\\nPaul's strategy is to always swap his **lowest** number with the opponent's **ten's digit**. Return whether this results in Paul ","thisId":"2196","channelHost":"edabit.com","id":"2196","opcode":"1","channelId":"2","timestamp":"1652648928981"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"656\\\"]}\"]","thisId":"2197","channelHost":"edabit.com","id":"2197","opcode":"1","channelId":"2","timestamp":"1652648929103"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4626","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"656\\\",\\\"result\\\":{\\\"_id\\\":\\\"a68pt3brD2hGF2Mqe\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int gapful(int n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.3797468354430378,\\\"familyId\\\":\\\"ygWWej2Pq76sjaeoX\\\",\\\"instructions\\\":\\\"A number is **gapful** if it is at least 3 digits long and is divisible by the number formed by stringing the first and last numbers together. The smallest number that fits this description is 100. First digit is 1, last digit is 0, forming 10, which is a factor of 100. Therefore, 100 is gapful.\\\\n\\\\nCreate a function that takes a number `n` and returns the closest gapful number (including itself). If there are 2 gapful numbers that are equidistant to `n`, return the lower one.\\\\n\\\\n### Examples\\\\n```\\\\ngapful(25) ➞ 100\\\\n\\\\ngapful(100) ➞ 100\\\\n\\\\ngapful(103) ➞ 105\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class Challe","thisId":"2198","channelHost":"edabit.com","id":"2198","opcode":"1","channelId":"2","timestamp":"1652648929108"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"657\\\"]}\"]","thisId":"2199","channelHost":"edabit.com","id":"2199","opcode":"1","channelId":"2","timestamp":"1652648929192"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4548","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"657\\\",\\\"result\\\":{\\\"_id\\\":\\\"iqEb9gZi2jgNR99At\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String incrementString(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.371794871794872,\\\"familyId\\\":\\\"zkWAeD5t6XAjPqZSF\\\",\\\"instructions\\\":\\\"Write a function which increments a string to create a new string.\\\\n\\\\n- **If the string ends with a number**, the number should be incremented by `1`.\\\\n- **If the string doesn't end with a number**, `1` should be **added** to the new string.\\\\n- **If the number has leading zeros**, the amount of digits **should be considered**.\\\\n\\\\n### Examples\\\\n```\\\\nincrementString(\\\\\\\"foo\\\\\\\") ➞ \\\\\\\"foo1\\\\\\\"\\\\n\\\\nincrementString(\\\\\\\"foobar0009\\\\\\\") ➞ \\\\\\\"foobar0010\\\\\\\"\\\\n\\\\nincrementString(\\\\\\\"foo099\\\\\\\") ➞ \\\\\\\"foo100\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @T","thisId":"2200","channelHost":"edabit.com","id":"2200","opcode":"1","channelId":"2","timestamp":"1652648929196"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"658\\\"]}\"]","thisId":"2201","channelHost":"edabit.com","id":"2201","opcode":"1","channelId":"2","timestamp":"1652648929298"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4611","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"658\\\",\\\"result\\\":{\\\"_id\\\":\\\"5GGu4JKvSBPyhAbry\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int[] selReverse(int[] lst, int length) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.393939393939394,\\\"familyId\\\":\\\"GurDgjxJyrQZComYZ\\\",\\\"instructions\\\":\\\"Create a function that takes an array and a number and _selectively_ reverse the order of the array based on the number you're given (second argument). If you're given the arguments `[1,2,3,4,5,6]` and `2`, you would return the array `[2,1, 4,3, 6,5]`.\\\\n\\\\n### Examples\\\\n```\\\\nselReverse([1,2,3,4,5,6], 2) ➞ [2,1, 4,3, 6,5]\\\\n\\\\nselReverse([2,4,6,8,10,12,14,16], 3) ➞ [6,4,2, 12,10,8, 16,14]\\\\n\\\\nselReverse([5,7,2,6,0,4,6], 100) ➞ [6,4,0,6,2,7,5]\\\\n```\\\\n\\\\n### Notes\\\\n- If the array you're given can't be broken up into equal parts, just reverse the remaining numbers (see 2nd expample).\\\\n- If  `len` exceeds the array length, reverse everything.\\\\n- If  `len` is zero,","thisId":"2202","channelHost":"edabit.com","id":"2202","opcode":"1","channelId":"2","timestamp":"1652648929302"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"659\\\"]}\"]","thisId":"2203","channelHost":"edabit.com","id":"2203","opcode":"1","channelId":"2","timestamp":"1652648929400"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"11339","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"659\\\",\\\"result\\\":{\\\"_id\\\":\\\"WtxvjezcFYGQo2v48\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class BookChapter {\\\\n\\\\tpublic static String nearestChapter(Chapter[] chapter, int page) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\\n\\\\nclass Chapter {\\\\n\\\\tprivate String name;\\\\n\\\\tprivate int page;\\\\n\\\\t\\\\n\\\\tpublic Chapter(String name, int page) {\\\\n\\\\t\\\\tthis.name = name;\\\\n\\\\t\\\\tthis.page = page;\\\\n\\\\t}\\\\n\\\\tpublic String getName() { return name; }\\\\n\\\\tpublic void setName(String name) { this.name = name; }\\\\n\\\\tpublic int getPage() { return page; }\\\\n\\\\tpublic void setPage(int page) { this.page = page; }\\\\n}\\\",\\\"difficulty\\\":2.450892857142857,\\\"familyId\\\":\\\"EjkH89XENvuZXg8RL\\\",\\\"instructions\\\":\\\"Create a function that returns which chapter is **nearest** to the page you're on. If two chapters are equidistant, return the chapter with the **higher** page number.\\\\n\\\\n### Examples\\\\n```\\\\nnearestChapter(new Chapter[] {\\\\n  new Chapter(\\\\\\\"Chapter 1\\\\\\\", 1),\\\\n  new C","thisId":"2204","channelHost":"edabit.com","id":"2204","opcode":"1","channelId":"2","timestamp":"1652648929405"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"660\\\"]}\"]","thisId":"2205","channelHost":"edabit.com","id":"2205","opcode":"1","channelId":"2","timestamp":"1652648929510"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4214","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"660\\\",\\\"result\\\":{\\\"_id\\\":\\\"tJNLCKPzNg3e9Whdt\\\",\\\"author\\\":\\\"DedS3t\\\",\\\"authorId\\\":\\\"cPhuRqExptFTTPpgM\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static String wordprocessor(int n, int k, String e) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.52,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"QWhAierLgx3MtbyYr\\\",\\\"instructions\\\":\\\"Bessie the cow is working on an essay for her writing class. Since her handwriting is quite bad, she decides to type the essay using a word processor. The essay contains N words (1≤N≤100), separated by spaces. Each word is between 1 and 15 characters long, inclusive, and consists only of uppercase or lowercase letters.\\\\n\\\\nAccording to the instructions for the assignment, the essay has to be formatted in a very specific way: each line should contain no more than K (1≤K≤80) characters, not counting spaces. Fortunately, Bessie's word processor can handle this requirement, using the following strategy:\\\\n\\\\nIf Bessie types a word, and that word can f","thisId":"2206","channelHost":"edabit.com","id":"2206","opcode":"1","channelId":"2","timestamp":"1652648929514"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"661\\\"]}\"]","thisId":"2207","channelHost":"edabit.com","id":"2207","opcode":"1","channelId":"2","timestamp":"1652648929609"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5129","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"661\\\",\\\"result\\\":{\\\"_id\\\":\\\"KXs93N4RX6jNSsgCr\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class GreekSpartans {\\\\n  public static String cipher(String message, int nSlide) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.642857142857143,\\\"familyId\\\":\\\"WkwJY4pdqYMSdzqgt\\\",\\\"instructions\\\":\\\"In **Spartans Cipher**, encoding is done by writing the text horizontally, across the strap in the plaintext word of a message. In ancient times, Spartans and Greeks invented an interesting way of encryption called [Scytale](https://en.wikipedia.org/wiki/Scytale).\\\\n\\\\nThe ancient Greeks, and the Spartans in particular, are said to have used this cipher to communicate during military campaigns.\\\\n\\\\nCreate a function that takes two arguments, a number of slides `nSlide` and a string `message`, and returns the **encoded message**.\\\\n\\\\nThere are some variations on the rules of encipherment. One version of the cipher rules are outlined below:\\\\n\\\\n```\\\\nmessage = \\","thisId":"2208","channelHost":"edabit.com","id":"2208","opcode":"1","channelId":"2","timestamp":"1652648929613"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"662\\\"]}\"]","thisId":"2209","channelHost":"edabit.com","id":"2209","opcode":"1","channelId":"2","timestamp":"1652648929710"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4935","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"662\\\",\\\"result\\\":{\\\"_id\\\":\\\"JLQ4upWrq5LkzdhPE\\\",\\\"author\\\":\\\"Mateusz Mędrowski\\\",\\\"authorId\\\":\\\"hPx9H3YM8j2k94DNW\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static int NumberOfDays(int cost, int savings, int start) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.542372881355932,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"EK49uoxP42fzTKy9A\\\",\\\"instructions\\\":\\\"John wants to save money for his first car. He puts money in his piggy bank **every day**. Every day, he puts in $1 more than the previous day. Every Monday he starts with a new value \\u2060— $1 more than the previous Monday.\\\\n\\\\n#### Week 1 (starting at $1)\\\\nDay | Amount | Sum\\\\n:--- | --- | ---\\\\nMonday | $1 | $1\\\\nTuesday | $2 | $3\\\\nWednesday | $3 | $6\\\\nThursday | $4 | $10\\\\nFriday  | $5 | $15\\\\nSaturday  | $6 | $21\\\\nSunday | $7 | $28\\\\n\\\\n#### Week 2\\\\nDay | Amount | Sum\\\\n:--- | --- | ---\\\\nMonday | $2 | $30\\\\nTuesday | $3 | $33\\\\nWednesday | $4 | $37\\\\n\\\\netc ...\\\\n\\\\nWrite a function that returns the number","thisId":"2210","channelHost":"edabit.com","id":"2210","opcode":"1","channelId":"2","timestamp":"1652648929714"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"663\\\"]}\"]","thisId":"2211","channelHost":"edabit.com","id":"2211","opcode":"1","channelId":"2","timestamp":"1652648929822"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8835","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"663\\\",\\\"result\\\":{\\\"_id\\\":\\\"JmuM2cP5MvruRjr6c\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String atbash(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.565040650406504,\\\"familyId\\\":\\\"exrJdL7f6ktcvYC69\\\",\\\"instructions\\\":\\\"The Atbash cipher is an encryption method in which each letter of a word is replaced with its \\\\\\\"mirror\\\\\\\" letter in the alphabet: A <=> Z; B <=> Y; C <=> X; etc.\\\\n\\\\nCreate a function that takes a string and applies the Atbash cipher to it.\\\\n\\\\n### Examples\\\\n```\\\\natbash(\\\\\\\"apple\\\\\\\") ➞ \\\\\\\"zkkov\\\\\\\"\\\\n\\\\natbash(\\\\\\\"Hello world!\\\\\\\") ➞ \\\\\\\"Svool dliow!\\\\\\\"\\\\n\\\\natbash(\\\\\\\"Christmas is the 25th of December\\\\\\\") ➞ \\\\\\\"Xsirhgnzh rh gsv 25gs lu Wvxvnyvi\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Capitalisation should be retained.\\\\n- Non-alphabetic characters should not be altered.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n","thisId":"2212","channelHost":"edabit.com","id":"2212","opcode":"1","channelId":"2","timestamp":"1652648929827"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"665\\\"]}\"]","thisId":"2213","channelHost":"edabit.com","id":"2213","opcode":"1","channelId":"2","timestamp":"1652648929935"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4092","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"665\\\",\\\"result\\\":{\\\"_id\\\":\\\"kCAnEEzWdbYr3ps2c\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String youtubeId(String link) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.630434782608696,\\\"familyId\\\":\\\"ymtE8MiMZfehQeBE7\\\",\\\"instructions\\\":\\\"Given a YouTube URL, extract the video ID and return it as a string.\\\\n\\\\n## Examples\\\\n```\\\\nyoutubeId(\\\\\\\"https://www.youtube.com/watch?v=XPEr1cArWRg\\\\\\\") ➞ \\\\\\\"XPEr1cArWRg\\\\\\\"\\\\n\\\\nyoutubeId(\\\\\\\"https://youtu.be/BCDEDi5gDPo\\\\\\\") ➞ \\\\\\\"BCDEDi5gDPo\\\\\\\"\\\\n\\\\nyoutubeId(\\\\\\\"https://youtube.com/watch?t=4m40s&v=vxP3bY-XxY4\\\\\\\") ➞ \\\\\\\"vxP3bY-XxY4\\\\\\\"\\\\n```\\\\n\\\\n## Notes\\\\nAll input are valid YouTube links.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"XPEr1cArWRg\\\\\\\", Challenge.youtubeId(\\\\\\\"https://www.youtube.com/watch?v=XPEr1cArWRg\\\\\\\"));\\\\n  }\\\\n\\\\n\\\\t@Test\\","thisId":"2214","channelHost":"edabit.com","id":"2214","opcode":"1","channelId":"2","timestamp":"1652648929940"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"664\\\"]}\"]","thisId":"2215","channelHost":"edabit.com","id":"2215","opcode":"1","channelId":"2","timestamp":"1652648930040"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"12919","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"664\\\",\\\"result\\\":{\\\"_id\\\":\\\"KZrmicjc8zCZyGNee\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int[] encrypt(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n\\\\n\\\\tpublic static String decrypt(int[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.5714285714285716,\\\"familyId\\\":\\\"cJKsm3fPqiyCsFZ5b\\\",\\\"instructions\\\":\\\"It's time to send and receive secret messages.\\\\n\\\\nCreate two functions that take a string and an array and returns a coded or decoded message.\\\\n\\\\nThe first letter of the string, or the first element of the array represents the Character Code of that letter. The next elements are the differences between the characters:\\\\ne.g. `A` +3 --> `C` or `z` -1 --> `y`.\\\\n\\\\n### Examples\\\\n```\\\\nencrypt(\\\\\\\"Hello\\\\\\\") ➞ [72, 29, 7, 0, 3]\\\\n// H = 72, the difference between the H and e is 29 (upper- and lowercase).\\\\n// The difference between the two l's is obviously 0.\\\\n\\\\ndecrypt([ 72, 33, -73, 84, -12, -3, 13, -13, -68 ","thisId":"2216","channelHost":"edabit.com","id":"2216","opcode":"1","channelId":"2","timestamp":"1652648930047"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"666\\\"]}\"]","thisId":"2217","channelHost":"edabit.com","id":"2217","opcode":"1","channelId":"2","timestamp":"1652648930142"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8622","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"666\\\",\\\"result\\\":{\\\"_id\\\":\\\"fKZ6m9rDHDvgp6aeu\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int additivePersistence(int n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n\\\\n\\\\tpublic static long int multiplicativePersistence(int n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.5875,\\\"familyId\\\":\\\"3rsWepZCy6SHtbLuh\\\",\\\"instructions\\\":\\\"The additive persistence of an integer, `n`, is the number of times you have to replace `n` with the sum of its digits until `n` becomes a single digit integer.\\\\n\\\\nThe multiplicative persistence of an integer, `n`, is the number of times you have to replace `n` with the product of its digits until `n` becomes a single digit integer.\\\\n\\\\nCreate two functions that take an integer as an argument and:\\\\n\\\\n1. Return its additive persistence.\\\\n2. Return its multiplicative persistence.\\\\n\\\\n### Examples: Additive Persistence\\\\n```\\\\nadditivePersistence(1679583) ➞ 3\\\\n// 1 + 6 + 7 + 9 + 5 + 8 + 3 = 39\\\\n// 3 + 9 = 12\\\\","thisId":"2218","channelHost":"edabit.com","id":"2218","opcode":"1","channelId":"2","timestamp":"1652648930147"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"667\\\"]}\"]","thisId":"2219","channelHost":"edabit.com","id":"2219","opcode":"1","channelId":"2","timestamp":"1652648930261"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4316","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"667\\\",\\\"result\\\":{\\\"_id\\\":\\\"5DAuj96xupYTbFTXw\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class RisenOrFallen {\\\\n  public static int incDec(int n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.588235294117647,\\\"familyId\\\":\\\"sQLNLpLbDcm5gJ63P\\\",\\\"instructions\\\":\\\"**Tesh** needs your help to find out the **increasing** or **decreasing** numbers for a given range.\\\\n\\\\n### Increasing Numbers\\\\nNumbers whose digits, when read from left to right, are never **less** than the previous digit. See below some examples of increasing numbers:\\\\n\\\\n```\\\\n1111\\\\n123456\\\\n125788999\\\\n```\\\\n\\\\n### Decreasing Numbers\\\\nNumbers whose digits, when read from left to right, are never **greater** than the previous digit. See below some examples of decreasing numbers:\\\\n\\\\n```\\\\n1111\\\\n654321\\\\n999887521\\\\n```\\\\n\\\\nCreate a function that takes a number `n` and returns total occurrences of all the **increasing or decreasing numbers** in the range 1 - 10^n.\\\\n\\\\n### Exa","thisId":"2220","channelHost":"edabit.com","id":"2220","opcode":"1","channelId":"2","timestamp":"1652648930267"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"668\\\"]}\"]","thisId":"2221","channelHost":"edabit.com","id":"2221","opcode":"1","channelId":"2","timestamp":"1652648930375"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8468","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"668\\\",\\\"result\\\":{\\\"_id\\\":\\\"PZh6svj6RjiQishTG\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static long sumDigProd() {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.5988372093023258,\\\"familyId\\\":\\\"Lk2QAgB4m7RGRg6u4\\\",\\\"instructions\\\":\\\"Create a function that takes one, two or more numbers as arguments and adds them together to get a new number.  The function then repeatedly multiplies the digits of the new number by each other, yielding a new number, until the product is only 1 digit long. Return the final product.\\\\n\\\\n### Examples\\\\n```\\\\nsumDigProd(16, 28) ➞ 6\\\\n// 16 + 28 = 44\\\\n// 4 * 4 =  16\\\\n// 1 * 6 = 6\\\\n\\\\nsumDigProd(0) ➞ 0\\\\n\\\\nsumDigProd(1, 2, 3, 4, 5, 6) ➞ 2\\\\n```\\\\n\\\\n### Notes\\\\nThe input of the function is at least one number.\\\",\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals;\\\\nimport org.junit.Test;\\\\n\\\\n/**\\\\n * @author edwardclark\\\\n**/\\\\n\\\\npublic class ChallengeTest {\\\\n\\\\t@Test\\\\n\\\\tpublic","thisId":"2222","channelHost":"edabit.com","id":"2222","opcode":"1","channelId":"2","timestamp":"1652648930380"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"669\\\"]}\"]","thisId":"2223","channelHost":"edabit.com","id":"2223","opcode":"1","channelId":"2","timestamp":"1652648930488"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6575","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"669\\\",\\\"result\\\":{\\\"_id\\\":\\\"DhwkubnGy7mwZ2xt9\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean sameLetterPattern(String str1, String str2) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.5925925925925926,\\\"familyId\\\":\\\"dQCckjXR7TwHPqrhQ\\\",\\\"instructions\\\":\\\"Create a function that returns `true` if two strings share the same letter pattern, and `false` otherwise.\\\\n\\\\n### Examples\\\\n```\\\\nsameLetterPattern(\\\\\\\"ABAB\\\\\\\", \\\\\\\"CDCD\\\\\\\") ➞ true\\\\n\\\\nsameLetterPattern(\\\\\\\"ABCBA\\\\\\\", \\\\\\\"BCDCB\\\\\\\") ➞ true\\\\n\\\\nsameLetterPattern(\\\\\\\"FFGG\\\\\\\", \\\\\\\"CDCD\\\\\\\") ➞ false\\\\n\\\\nsameLetterPattern(\\\\\\\"FFFF\\\\\\\", \\\\\\\"ABCD\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(true, Challenge.sameLetterPattern(\\\\\\\"ABAB\\\\\\\", \\\\\\\"CDCD\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2(","thisId":"2224","channelHost":"edabit.com","id":"2224","opcode":"1","channelId":"2","timestamp":"1652648930493"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"670\\\"]}\"]","thisId":"2225","channelHost":"edabit.com","id":"2225","opcode":"1","channelId":"2","timestamp":"1652648930591"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"9752","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"670\\\",\\\"result\\\":{\\\"_id\\\":\\\"t9S9nNr79pLqjXgqb\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean canComplete(String initial, String word) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.6022099447513813,\\\"familyId\\\":\\\"FJBGtHMcvzbZx5dip\\\",\\\"instructions\\\":\\\"An input string can be completed if additional letters can be added and no letters need to be taken away to match the word. Furthermore, the order of the letters in the input string must be the same as the order of letters in the final word.\\\\n\\\\nCreate a function that, given an input string, determines if the word can be completed.\\\\n\\\\n### Examples\\\\n```\\\\ncanComplete(\\\\\\\"butl\\\\\\\", \\\\\\\"beautiful\\\\\\\") ➞ true\\\\n// We can add \\\\\\\"ea\\\\\\\" between \\\\\\\"b\\\\\\\" and \\\\\\\"u\\\\\\\", and \\\\\\\"ifu\\\\\\\" between \\\\\\\"t\\\\\\\" and \\\\\\\"l\\\\\\\".\\\\n\\\\ncanComplete(\\\\\\\"butlz\\\\\\\", \\\\\\\"beautiful\\\\\\\") ➞ false\\\\n// \\\\\\\"z\\\\\\\" does not exist in the word beautiful.\\\\n\\\\ncanComplete(\\\\\\\"tulb\\\\\\\", ","thisId":"2226","channelHost":"edabit.com","id":"2226","opcode":"1","channelId":"2","timestamp":"1652648930597"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"671\\\"]}\"]","thisId":"2227","channelHost":"edabit.com","id":"2227","opcode":"1","channelId":"2","timestamp":"1652648930729"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4215","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"671\\\",\\\"result\\\":{\\\"_id\\\":\\\"44bnzeLuDh3ofHxXi\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class CommonMultiple {\\\\n  public static int lcmOfArray(int[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.6037735849056602,\\\"familyId\\\":\\\"82ouehqWtbkXQxWW4\\\",\\\"instructions\\\":\\\"Create a function that takes an array of more than three numbers and returns the **Least Common Multiple** (LCM).\\\\n\\\\n### Examples\\\\n```\\\\nlcmOfArray([5, 4, 6, 46, 54, 12, 13, 17]) ➞ 2744820\\\\n\\\\nlcmOfArray([46, 54, 466, 544]) ➞ 78712992\\\\n\\\\nlcmOfArray([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) ➞ 2520\\\\n\\\\nlcmOfArray([13, 6, 17, 18, 19, 20, 37]) ➞ 27965340\\\\n```\\\\n\\\\n### Notes\\\\nThe LCM of an array of numbers is the smallest positive number that is divisible by each of the numbers in the array.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals; \\\\nimport org.junit.Test; \\\\n\\\\npublic class CommonMultipleTest {\\\\n\\\\t@Test\\\\n\\","thisId":"2228","channelHost":"edabit.com","id":"2228","opcode":"1","channelId":"2","timestamp":"1652648930735"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"672\\\"]}\"]","thisId":"2229","channelHost":"edabit.com","id":"2229","opcode":"1","channelId":"2","timestamp":"1652648930836"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"10045","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"672\\\",\\\"result\\\":{\\\"_id\\\":\\\"a242aPZGmmx8xhiuy\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean isPalindromePossible(String str) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.607476635514019,\\\"familyId\\\":\\\"9Q6DJZcMjh65rtEih\\\",\\\"instructions\\\":\\\"Given a word, create a function which returns whether or not it's possible to **create a palindrome** by *rearranging the letters in the word*.\\\\n\\\\n### Examples\\\\n```\\\\nisPalindromePossible(\\\\\\\"rearcac\\\\\\\") ➞ true\\\\n// You can make \\\\\\\"racecar\\\\\\\"\\\\n\\\\nisPalindromePossible(\\\\\\\"suhbeusheff\\\\\\\") ➞ true\\\\n// You can make \\\\\\\"sfuehbheufs\\\\\\\" (not a real word but still a palindrome)\\\\n\\\\nisPalindromePossible(\\\\\\\"palindrome\\\\\\\") ➞ false\\\\n// It's impossible\\\\n```\\\\n\\\\n### Notes\\\\n- Trivially, words which are already palindromes return `true`.\\\\n- Words are given in all *lowercase*.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;","thisId":"2230","channelHost":"edabit.com","id":"2230","opcode":"1","channelId":"2","timestamp":"1652648930851"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"673\\\"]}\"]","thisId":"2231","channelHost":"edabit.com","id":"2231","opcode":"1","channelId":"2","timestamp":"1652648930954"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7154","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"673\\\",\\\"result\\\":{\\\"_id\\\":\\\"acQwyrd5NcZvgGQhW\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class DoubleNumberExpansion {\\\\n  public static String expandedForm(double n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.608695652173913,\\\"familyId\\\":\\\"izsb66EMeF6zgZ2ww\\\",\\\"instructions\\\":\\\"Create a function that expands a decimal number into a string as shown below:\\\\n\\\\n```\\\\n25.24 ➞ \\\\\\\"20 + 5 + 2/10 + 4/100\\\\\\\"\\\\n70701.05 ➞ \\\\\\\"70000 + 700 + 1 + 5/100\\\\\\\"\\\\n685.27 ➞ \\\\\\\"600 + 80 + 5 + 2/10 + 7/100\\\\\\\"\\\\n```\\\\n\\\\n### Examples\\\\n```\\\\nexpandedForm(5.44) ➞ \\\\\\\"5 + 4/10 + 4/100\\\\\\\"\\\\n\\\\nexpandedForm(46.66) ➞ \\\\\\\"40 + 6 + 6/10 + 6/100\\\\\\\"\\\\n\\\\nexpandedForm(87.04) ➞ \\\\\\\"80 + 7 + 4/100\\\\\\\"\\\\n\\\\nexpandedForm(123.025) ➞ \\\\\\\"100 + 20 + 3 + 2/100 + 5/1000\\\\\\\"\\\\n\\\\nexpandedForm(50.270) ➞ \\\\\\\"50 + 2/10 + 7/100\\\\\\\"\\\\n\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"/** \\\\n=============================================","thisId":"2232","channelHost":"edabit.com","id":"2232","opcode":"1","channelId":"2","timestamp":"1652648930958"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"674\\\"]}\"]","thisId":"2233","channelHost":"edabit.com","id":"2233","opcode":"1","channelId":"2","timestamp":"1652648931065"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6383","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"674\\\",\\\"result\\\":{\\\"_id\\\":\\\"4CyrhFrHGFkFvyk4b\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int getLuckyNumber(int size, int nth) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.6129032258064515,\\\"familyId\\\":\\\"CtF5LHQ4uK2LLRnwk\\\",\\\"instructions\\\":\\\"A lucky number is a number of a sequence generated by a sieve algorithm: if a number in the positive integers series survives to the sieve filtering algorithm, it's lucky and survives, otherwise it disappears from the sequence.\\\\n\\\\n- First you must obtain an array of numbers, from 1 to the needed size.\\\\n- First number is 1 and it survives: next to him there is number 2, that becomes the sieve's filter: every second number in the list (counting from 1) has to be filtered (as to say every even number).\\\\n- After this step, the next number to survive after 1 is 3: eliminate every third number in the list (counting from 1).\\\\n- After this step, the next number to survive after 3","thisId":"2234","channelHost":"edabit.com","id":"2234","opcode":"1","channelId":"2","timestamp":"1652648931069"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"675\\\"]}\"]","thisId":"2235","channelHost":"edabit.com","id":"2235","opcode":"1","channelId":"2","timestamp":"1652648931183"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4294","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"675\\\",\\\"result\\\":{\\\"_id\\\":\\\"CxQRCDQHv5Ps8HnR6\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class OutShuffle {\\\\n\\\\tpublic static int shuffleCount(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.619047619047619,\\\"editorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"familyId\\\":\\\"BjxLmhy4tTJy75wgg\\\",\\\"instructions\\\":\\\"An **out-shuffle**, also known as an _out faro shuffle_ or a _perfect shuffle_, is a controlled method for shuffling playing cards. It is performed by splitting the deck into two equal halves and interleaving them together perfectly, with the condition that the top card of the deck remains in place.\\\\n\\\\nUsing an array to represent a deck of cards, an out-shuffle looks like:\\\\n\\\\n```\\\\n[1, 2, 3, 4, 5, 6, 7, 8] ➞ [1, 5, 2, 6, 3, 7, 4, 8]\\\\n// Card 1 remains in the first position.\\\\n```\\\\n\\\\nIf we repeat the process, the deck eventually returns to original order.\\\\n\\\\nShuffle 1:\\\\n```\\\\n[1, 2, 3, 4, 5, 6, 7, 8] ➞ [1, 5, 2, 6, 3, 7, 4, 8]\\\\n```\\\\n\\\\","thisId":"2236","channelHost":"edabit.com","id":"2236","opcode":"1","channelId":"2","timestamp":"1652648931187"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"676\\\"]}\"]","thisId":"2237","channelHost":"edabit.com","id":"2237","opcode":"1","channelId":"2","timestamp":"1652648931299"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"9225","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"676\\\",\\\"result\\\":{\\\"_id\\\":\\\"qRRYmmyTRBhJJNMwq\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean validWordNest(String word, String nest) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.622950819672131,\\\"familyId\\\":\\\"EAbQqeZkgna25J7Cs\\\",\\\"instructions\\\":\\\"A word nest is created by taking a starting word, and generating a new string by placing the word inside itself. This process is then repeated.\\\\n\\\\nNesting 3 times with the word \\\\\\\"incredible\\\\\\\":\\\\n\\\\n```\\\\nstart  = incredible\\\\nfirst  = incre(incredible)dible\\\\nsecond = increin(incredible)credibledible\\\\nthird  = increinincr(incredible)ediblecredibledible\\\\n```\\\\n\\\\nThe final nest is `increinincrincredibleediblecredibledible` (depth = 3)\\\\n\\\\nValid word nests can always be *collapsed* to show the starting word, by reversing the process above:\\\\n\\\\n```\\\\nword = \\\\\\\"incredible\\\\\\\"\\\\nnest = \\\\\\\"increinincrincredibleediblecredibledible\\\\\\\"\\\\n\\\\nSteps:\\\\n=> \\\\\\\"increini","thisId":"2238","channelHost":"edabit.com","id":"2238","opcode":"1","channelId":"2","timestamp":"1652648931303"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"677\\\"]}\"]","thisId":"2239","channelHost":"edabit.com","id":"2239","opcode":"1","channelId":"2","timestamp":"1652648931395"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4375","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"677\\\",\\\"result\\\":{\\\"_id\\\":\\\"8dFqh23xMpfFf85Wb\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int ecgSequenceIndex(int n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.625,\\\"familyId\\\":\\\"xbogK9f2zhaHZW6xD\\\",\\\"instructions\\\":\\\"In the ECG Sequence (that always starts with the numbers 1 and 2), every number that succeeds is the smallest not already present in the sequence and that shares a factor (excluding 1) with its preceding number. Every number in the ECG Sequence (besides 1 and 2) has a different index from its natural index in a normal numeric sequence. See the example below to establish the ECG Sequence Index of number 3.\\\\n\\\\n```\\\\n// Find the smallest number that is not in sequence...\\\\n// This number shares a factor with the preceding?\\\\n\\\\nSEQUENCE = [1, 2]\\\\n\\\\n3 = no factors shared with 2\\\\n4 = shares factor 2 with number 2\\\\n\\\\nSEQUENCE = [1, 2, 4]\\\\n\\\\n3 = no factors shared with 4\\\\n5 = no factors shared wit","thisId":"2240","channelHost":"edabit.com","id":"2240","opcode":"1","channelId":"2","timestamp":"1652648931400"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"678\\\"]}\"]","thisId":"2241","channelHost":"edabit.com","id":"2241","opcode":"1","channelId":"2","timestamp":"1652648931495"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6281","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"678\\\",\\\"result\\\":{\\\"_id\\\":\\\"iaKJJoxdk5GNDqzJC\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class BandNames {\\\\n\\\\tpublic static String[] sortWithoutArticles(String[] bands) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.7142857142857144,\\\"familyId\\\":\\\"Z8fRMJnJMHyNtAhDH\\\",\\\"instructions\\\":\\\"Write a function that sorts the given array of band names discounting the articles **\\\\\\\"the\\\\\\\", \\\\\\\"a\\\\\\\", \\\\\\\"an\\\\\\\"** if the first word of the band name categorically belongs to.\\\\n\\\\n### Examples\\\\n```\\\\nsortWithoutArticles([\\\\\\\"The New Yardbirds\\\\\\\", \\\\\\\"The Beatles\\\\\\\", \\\\\\\"The Square Roots\\\\\\\", \\\\\\\"On A Friday\\\\\\\", \\\\\\\"An Irony\\\\\\\"])\\\\n➞ [\\\\\\\"The Beatles\\\\\\\", \\\\\\\"An Irony\\\\\\\", \\\\\\\"The New Yardbirds\\\\\\\", \\\\\\\"On A Friday\\\\\\\", \\\\\\\"The Square Roots\\\\\\\"]\\\\n\\\\nsortWithoutArticles([\\\\\\\"The Platters\\\\\\\", \\\\\\\"A Yard of Yarn\\\\\\\", \\\\\\\"The Everly Brothers\\\\\\\", \\\\\\\"A Monster Effect\\\\\\\", \\\\\\\"The Sex Maggots\\\\\\\"])\\\\n➞ [\\\\\\\"The Everly Brothers\\\\\\\", \\\\\\\"A Monster Effect\\","thisId":"2242","channelHost":"edabit.com","id":"2242","opcode":"1","channelId":"2","timestamp":"1652648931499"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"680\\\"]}\"]","thisId":"2243","channelHost":"edabit.com","id":"2243","opcode":"1","channelId":"2","timestamp":"1652648931623"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5006","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"680\\\",\\\"result\\\":{\\\"_id\\\":\\\"FPemghc8ut9xfaMGo\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Rearrange {\\\\n  public static String rearrange(String s) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.659090909090909,\\\"familyId\\\":\\\"bELFAuLSxGyZe8tRZ\\\",\\\"instructions\\\":\\\"Given a sentence with numbers representing a word's location embedded within each word, return the sorted sentence.\\\\n\\\\n### Examples\\\\n```\\\\nrearrange(\\\\\\\"Tesh3 th5e 1I lov2e way6 she7 j4ust i8s.\\\\\\\") ➞ \\\\\\\"I love Tesh just the way she is.\\\\\\\"\\\\n\\\\nrearrange(\\\\\\\"the4 t3o man5 Happ1iest of6 no7 birt2hday steel8!\\\\\\\") ➞ \\\\\\\"Happiest birthday to the man of no steel!\\\\\\\"\\\\n\\\\nrearrange(\\\\\\\"is2 Thi1s T4est 3a\\\\\\\") ➞ \\\\\\\"This is a Test\\\\\\\"\\\\n\\\\nrearrange(\\\\\\\"4of Fo1r pe6ople g3ood th5e the2\\\\\\\") ➞ \\\\\\\"For the good of the people\\\\\\\"\\\\n\\\\nrearrange(\\\\\\\" \\\\\\\") ➞ \\\\\\\"\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nOnly the integers 1-9 will be used.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"l","thisId":"2244","channelHost":"edabit.com","id":"2244","opcode":"1","channelId":"2","timestamp":"1652648931628"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"683\\\"]}\"]","thisId":"2245","channelHost":"edabit.com","id":"2245","opcode":"1","channelId":"2","timestamp":"1652648931736"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4478","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"683\\\",\\\"result\\\":{\\\"_id\\\":\\\"DeZSpmYFRDzqsP7Qi\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class NumberMult {\\\\n\\\\tpublic static int multiply(int x, int y) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.6595744680851063,\\\"familyId\\\":\\\"ZitTsoCMLbfBHbS64\\\",\\\"instructions\\\":\\\"Create a function that returns the **product** of two integers. This process of multiplication can be achieved via repetitive addition, thus, the process can be done **recursively**.\\\\n\\\\n### Examples\\\\n```\\\\nmultiply(10, 2) ➞ 20\\\\n\\\\nmultiply(-51, -4) ➞ 204\\\\n\\\\nmultiply(3, 9) ➞ 27\\\\n\\\\nmultiply(-21, 5) ➞ -105\\\\n\\\\nmultiply(1024, 7) ➞ 7168\\\\n\\\\nmultiply(273, -6) ➞ -1638\\\\n```\\\\n\\\\n### Notes\\\\n- You are expected to solve this challenge via **recursion**.\\\\n- You can check on the **Resources** tab for more details about *recursion* in Java.\\\\n- If you think recursion is fun, a collection of those challenges can be found [here](https://edabit.com/collection/Yx78jEBrKppHBNsoQ).\\\",\\","thisId":"2246","channelHost":"edabit.com","id":"2246","opcode":"1","channelId":"2","timestamp":"1652648931741"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"682\\\"]}\"]","thisId":"2247","channelHost":"edabit.com","id":"2247","opcode":"1","channelId":"2","timestamp":"1652648931838"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3634","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"682\\\",\\\"result\\\":{\\\"_id\\\":\\\"G6dgZvzjWjoDsqECg\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int postfix(String expr) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.65625,\\\"familyId\\\":\\\"TKYLxrmT9d3KBWauW\\\",\\\"instructions\\\":\\\"Postfix notation is a mathematical notation in which operators follow their operands. In other words, `pfexp1 pfexp2 op`, where `pfexp1` and `pfexp2` are both postfix expressions.\\\\n\\\\nSome examples:\\\\n- `2 2 +` is the postfix notation of the expression `2 + 2`.\\\\n- `2 3 * 1 - 5 /` is the postfix notation of the expression `((2 * 3) - 1) / 5`.\\\\n\\\\nHere you have to compute the result from a postfix expression.\\\\n\\\\n### Examples\\\\n```\\\\npostfix(\\\\\\\"2 2 +\\\\\\\") ➞ 4\\\\n// 2 + 2 = 4\\\\n\\\\npostfix(\\\\\\\"2 3 * 1 - 5 /\\\\\\\") ➞ 1\\\\n// ((2 * 3) - 1) / 5 = (6 - 1) / 5 = 5 / 5 = 1\\\\n```\\\\n\\\\n### Note\\\\n- Operators and operands are separated by a space.\\\\n- The operators `+, -, *, /` may be supported.\\\",\\\"isHidden\\\":f","thisId":"2248","channelHost":"edabit.com","id":"2248","opcode":"1","channelId":"2","timestamp":"1652648931842"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"679\\\"]}\"]","thisId":"2249","channelHost":"edabit.com","id":"2249","opcode":"1","channelId":"2","timestamp":"1652648931942"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6407","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"679\\\",\\\"result\\\":{\\\"_id\\\":\\\"9P6yDuSZxYTihMtT6\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String[] sameVowelGroup(String[] words) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.6547619047619047,\\\"familyId\\\":\\\"yFKqrXYrftmXcNfQm\\\",\\\"instructions\\\":\\\"Write a function that selects all words that have all the same vowels (in any order and/or number) as the first word, including the first word.\\\\n\\\\n### Examples\\\\n```\\\\nsameVowelGroup([\\\\\\\"toe\\\\\\\", \\\\\\\"ocelot\\\\\\\", \\\\\\\"maniac\\\\\\\"]) ➞ [\\\\\\\"toe\\\\\\\", \\\\\\\"ocelot\\\\\\\"]\\\\n\\\\nsameVowelGroup([\\\\\\\"many\\\\\\\", \\\\\\\"carriage\\\\\\\", \\\\\\\"emit\\\\\\\", \\\\\\\"apricot\\\\\\\", \\\\\\\"animal\\\\\\\"]) ➞ [\\\\\\\"many\\\\\\\"]\\\\n\\\\nsameVowelGroup([\\\\\\\"hoops\\\\\\\", \\\\\\\"chuff\\\\\\\", \\\\\\\"bot\\\\\\\", \\\\\\\"bottom\\\\\\\"]) ➞ [\\\\\\\"hoops\\\\\\\", \\\\\\\"bot\\\\\\\", \\\\\\\"bottom\\\\\\\"]\\\\n```\\\\n\\\\n### Notes\\\\n- Words will contain only **lowercase letters**, and **may contain whitespaces**.\\\\n- Frequency **does not** matter (e.g. if the first word i","thisId":"2250","channelHost":"edabit.com","id":"2250","opcode":"1","channelId":"2","timestamp":"1652648931946"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"681\\\"]}\"]","thisId":"2251","channelHost":"edabit.com","id":"2251","opcode":"1","channelId":"2","timestamp":"1652648932065"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8107","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"681\\\",\\\"result\\\":{\\\"_id\\\":\\\"QwGgDuvWtFmDTeRHw\\\",\\\"author\\\":\\\"ChirpyBoat\\\",\\\"authorId\\\":\\\"FHSJnAYTbcsKFgeQa\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String addStrNums(String num1, String num2) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.6547619047619047,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"fko6mjjBJyW2PtYAC\\\",\\\"instructions\\\":\\\"Write a function that adds two numbers. The catch, however, is that the numbers will be strings.\\\\n\\\\n### Examples\\\\n```\\\\naddStrNums(\\\\\\\"4\\\\\\\", \\\\\\\"5\\\\\\\") ➞ \\\\\\\"9\\\\\\\"\\\\n\\\\naddStrNums(\\\\\\\"abcdefg\\\\\\\", \\\\\\\"3\\\\\\\") ➞ \\\\\\\"-1\\\\\\\"\\\\n\\\\naddStrNums(\\\\\\\"1\\\\\\\", \\\\\\\"\\\\\\\") ➞ \\\\\\\"1\\\\\\\"\\\\n\\\\naddStrNums(\\\\\\\"1874682736267235927359283579235789257\\\\\\\", \\\\\\\"32652983572985729\\\\\\\") ➞ \\\\\\\"1874682736267235927391936562808774986\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- If there are any non-numerical characters, return `\\\\\\\"-1\\\\\\\"`.\\\\n- An empty parameter should be treated as `\\\\\\\"0\\\\\\\"`.\\\\n- Your function should be able to add any size number.\\\\n- Your function does","thisId":"2252","channelHost":"edabit.com","id":"2252","opcode":"1","channelId":"2","timestamp":"1652648932068"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"684\\\"]}\"]","thisId":"2253","channelHost":"edabit.com","id":"2253","opcode":"1","channelId":"2","timestamp":"1652648932176"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6362","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"684\\\",\\\"result\\\":{\\\"_id\\\":\\\"RvxGLMzoPoBgXhcaC\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean validateCard(long num) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.663157894736842,\\\"familyId\\\":\\\"nHvWhQCohknQzEFLN\\\",\\\"instructions\\\":\\\"Create a function that takes a number as an argument and returns `true` if the number is a valid credit card number, `false` otherwise.\\\\n\\\\nCredit card numbers must be between 14-19 digits in length, and pass the Luhn test, described below:\\\\n\\\\n1.  Remove the last digit (this is the \\\\\\\"check digit\\\\\\\").\\\\n2.  Reverse the number.\\\\n3.  Double the value of each digit in odd-numbered positions. If the doubled value has more than 1 digit, add the digits together (e.g. 8 x 2 = 16  ➞ 1 + 6 = 7).\\\\n4.  Add all digits.\\\\n5.  Subtract the last digit of the sum (from step 4) from 10. The result should be equal to the check digit from step 1.\\\\n\\\\n### Examples\\\\n```\\\\nvalidateCard(123456789012","thisId":"2254","channelHost":"edabit.com","id":"2254","opcode":"1","channelId":"2","timestamp":"1652648932182"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"685\\\"]}\"]","thisId":"2255","channelHost":"edabit.com","id":"2255","opcode":"1","channelId":"2","timestamp":"1652648932418"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5933","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"685\\\",\\\"result\\\":{\\\"_id\\\":\\\"JYaLkHy8cHgCPXAvy\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class LetterDifference {\\\\n\\\\tpublic static char findTheDifference(String s, String t) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.6666666666666665,\\\"familyId\\\":\\\"ZQnvXJLHoyskAKCaD\\\",\\\"instructions\\\":\\\"You are given two strings `s` and `t`.\\\\n\\\\nString `t` is generated by randomly shuffling string `s` and then adding one more letter at a random position.\\\\n\\\\nReturn the letter that was added to `t`.\\\\n\\\\n### Examples\\\\n```\\\\nfindTheDifference(\\\\\\\"bcefg\\\\\\\", \\\\\\\"bcdefg\\\\\\\") ➞ 'd'\\\\n\\\\nfindTheDifference(\\\\\\\"abcd\\\\\\\", \\\\\\\"abcde\\\\\\\") ➞ 'e'\\\\n\\\\nfindTheDifference(\\\\\\\"aiou\\\\\\\", \\\\\\\"aeiou\\\\\\\") ➞ 'e'\\\\n\\\\nfindTheDifference(\\\\\\\"mnoqrst\\\\\\\", \\\\\\\"mnopqrst\\\\\\\") ➞ 'p'\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"/** \\\\n============================================== \\\\nTestGen 4.0 for JUnit 4.13.0 \\\\t\\\\t\\\\nTest Case: Le","thisId":"2256","channelHost":"edabit.com","id":"2256","opcode":"1","channelId":"2","timestamp":"1652648932551"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"686\\\"]}\"]","thisId":"2257","channelHost":"edabit.com","id":"2257","opcode":"1","channelId":"2","timestamp":"1652648932602"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3342","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"686\\\",\\\"result\\\":{\\\"_id\\\":\\\"xAe7W7WctsNkF5BwW\\\",\\\"author\\\":\\\"_fluffyy\\\",\\\"authorId\\\":\\\"foytX6kH9wiSYqLtT\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static int gcd(int[] arr) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.6666666666666665,\\\"familyId\\\":\\\"X5hRxWFrXRHzk8CQB\\\",\\\"instructions\\\":\\\"Create a function that takes an array of numbers and returns the _greatest common factor_ of those numbers.\\\\n\\\\n### Examples\\\\n```\\\\ngcd({84, 70, 42, 56}) ➞ 14\\\\n\\\\ngcd({19, 38, 76, 133}) ➞ 19\\\\n\\\\ngcd({120, 300, 95, 425, 625}) ➞ 5\\\\n```\\\\n\\\\n### Notes\\\\nThe GCD is the largest factor that divides all numbers in the array.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\npublic class Tests {\\\\n  @Test\\\\n  public void test1() {\\\\n\\\\tassertEquals(Challenge.gcd(new int[]{84, 70, 42, 56}), 14);\\\\n  }\\\\n  @Test\\\\n  public void test2() {\\\\n\\\\tassertEquals(Challenge.gcd(new int[]{19, 38, 76, 133}), 19);\\\\n  }\\","thisId":"2258","channelHost":"edabit.com","id":"2258","opcode":"1","channelId":"2","timestamp":"1652648932617"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"687\\\"]}\"]","thisId":"2259","channelHost":"edabit.com","id":"2259","opcode":"1","channelId":"2","timestamp":"1652648932624"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6124","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"687\\\",\\\"result\\\":{\\\"_id\\\":\\\"jvyJ6xmPyrWab2MeX\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class RowsAndColumns {\\\\n  public static int[][] increment(int r, int c, String[] i) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.6666666666666665,\\\"familyId\\\":\\\"Anv86bZgaeeGENgCL\\\",\\\"instructions\\\":\\\"Write a function that takes in three parameters: `r, c, i`, where:\\\\n\\\\n- `r` and `c` are the number of **rows** and **columns** to initialize a zero matrix.\\\\n- `i` represents the **array of incrementing operations** (+1).\\\\n\\\\nAnd returns the resulting matrix after applying all the increment operations. Each increment operation will **add 1** to the rows or columns specified in the **incrementing array**.\\\\n\\\\nTo illustrate:\\\\n```\\\\nfinal(3, 3, [\\\\\\\"2r\\\\\\\", \\\\\\\"2c\\\\\\\", \\\\\\\"1r\\\\\\\", \\\\\\\"0c\\\\\\\"])\\\\n\\\\n// Initialize a 3 x 3 matrix of zeroes.\\\\n\\\\n[\\\\n  [0, 0, 0],\\\\n  [0, 0, 0],\\\\n  [0, 0, 0]\\\\n]\\\\n\\\\n// Apply \\\\\\\"2r\\\\\\\" (increment index 2 row).\\\\n\\\\n[\\\\n  [0, 0","thisId":"2260","channelHost":"edabit.com","id":"2260","opcode":"1","channelId":"2","timestamp":"1652648932631"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"688\\\"]}\"]","thisId":"2261","channelHost":"edabit.com","id":"2261","opcode":"1","channelId":"2","timestamp":"1652648932636"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4927","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"688\\\",\\\"result\\\":{\\\"_id\\\":\\\"SSxwbYon9Y7GjSD4k\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String recompose(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.6744186046511627,\\\"familyId\\\":\\\"seb9uFkoY8mzRe4v8\\\",\\\"instructions\\\":\\\"In this challenge, the goal is recomposing scrambled strings made of two or more words.\\\\n\\\\nEvery string has to be reversed not in its totality, but by vowels or consonants clusters in the order they are found; after splitting the string in groups, and reversing every group with more than a letter, you'll obtain the correct sequence:\\\\n\\\\n```\\\\nString = \\\\\\\"KiKdaola\\\\\\\"\\\\n\\\\nSeparation vowels/consonants = K  i  Kd  ao  l  a\\\\n\\\\nReversing the groups = K  i  dK  oa  l  a\\\\n\\\\nNew string = KidKoala\\\\n```\\\\n\\\\nNow, you have to insert a space between the words. A word starts with a capital letter:\\\\n\\\\n```\\\\nString = \\\\\\\"KidKoala\\\\\\\"\\\\n\\\\nResult = \\\\\\\"Kid Koala\\\\\\\"\\\\n```\\\\n\\\\nGiven a `st","thisId":"2262","channelHost":"edabit.com","id":"2262","opcode":"1","channelId":"2","timestamp":"1652648932642"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"689\\\"]}\"]","thisId":"2263","channelHost":"edabit.com","id":"2263","opcode":"1","channelId":"2","timestamp":"1652648932713"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5721","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"689\\\",\\\"result\\\":{\\\"_id\\\":\\\"iT6NpDYyCycHuc2L3\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int countUniqueBooks(String str, char bookend) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.689655172413793,\\\"familyId\\\":\\\"xBQctkRqa6dWC7yvZ\\\",\\\"instructions\\\":\\\"Suppose a **pair of identical characters** serve as **book ends** for all characters in between them. Write a function that returns the **total number of unique characters** (books, so to speak) between all **pairs** of book ends.\\\\n\\\\nThe function will look like:\\\\n\\\\n```\\\\ncountUniqueBooks(\\\\\\\"stringSequence\\\\\\\", \\\\\\\"bookEnd\\\\\\\")\\\\n```\\\\n\\\\n### Examples\\\\n```\\\\ncountUniqueBooks(\\\\\\\"AZYWABBCATTTA\\\\\\\", 'A') ➞ 4\\\\n\\\\n// 1st bookend group: \\\\\\\"AZYWA\\\\\\\" : 3 unique books: \\\\\\\"Z\\\\\\\", \\\\\\\"Y\\\\\\\", \\\\\\\"W\\\\\\\"\\\\n// 2nd bookend group: \\\\\\\"ATTTA\\\\\\\": 1 unique book: \\\\\\\"T\\\\\\\"\\\\n// \\\\\\\"ABBCA\\\\\\\" not included since the first \\\\\\\"A\\\\\\\" was used in the 1st bookend group.\\\\n\\\\ncountUniq","thisId":"2264","channelHost":"edabit.com","id":"2264","opcode":"1","channelId":"2","timestamp":"1652648932736"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"690\\\"]}\"]","thisId":"2265","channelHost":"edabit.com","id":"2265","opcode":"1","channelId":"2","timestamp":"1652648932813"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4706","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"690\\\",\\\"result\\\":{\\\"_id\\\":\\\"S5y88pjHnpr3qd5BD\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class HappyNumber {\\\\n\\\\tpublic static boolean isHappy(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.6923076923076925,\\\"quality\\\":0,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"E9cqZE3HYjNDqWeT9\\\",\\\"instructions\\\":\\\"A **happy number** is a number which yields a `1` by repeatedly summing up the square of its digits. If such a process results in an endless cycle of numbers containing `4`, the number is said to be an **unhappy number**.\\\\n\\\\nCreate a function that accepts a number and determines whether the number is a *happy number* or not. Return `true` if so, `false` otherwise.\\\\n\\\\n### Examples\\\\n```\\\\nisHappy(67) ➞ false\\\\n\\\\nisHappy(89) ➞ false\\\\n\\\\nisHappy(139) ➞ true\\\\n\\\\nisHappy(1327) ➞ false\\\\n\\\\nisHappy(2871) ➞ false\\\\n\\\\nisHappy(3970) ➞ true\\\\n```\\\\n\\\\n### Notes\\\\n- **Hint**: Your loop terminates if the value of `n` is either `1` or `4`","thisId":"2266","channelHost":"edabit.com","id":"2266","opcode":"1","channelId":"2","timestamp":"1652648932824"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"691\\\"]}\"]","thisId":"2267","channelHost":"edabit.com","id":"2267","opcode":"1","channelId":"2","timestamp":"1652648932933"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4453","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"691\\\",\\\"result\\\":{\\\"_id\\\":\\\"vCqkPQ2ATmpqxaDgT\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static int squares(int a, int b) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.6956521739130435,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"GhEruj5pTSCTKekD4\\\",\\\"instructions\\\":\\\"Watson likes to challenge Sherlock's math ability. He will provide a starting and ending value describing a range of integers. Sherlock must determine the number of square integers within that range, inclusive of the endpoints (note that a square integer is an integer which is the square of an integer, e.g. `1, 4, 9, 16, 25, 36, 49`).\\\\n\\\\nFor example, the range is `a=24` and `b=49`, inclusive. There are three square integers in the range: `25, 36` and `49`.\\\\n\\\\nComplete the squares function that returns an integer representing the number of square integers in the inclusive range from `a`  to `b`.\\\\n\\\\n### Examples\\\\n```\\\\nsquares(3, 9) ➞ 2\\\\n\\\\n","thisId":"2268","channelHost":"edabit.com","id":"2268","opcode":"1","channelId":"2","timestamp":"1652648932940"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"692\\\"]}\"]","thisId":"2269","channelHost":"edabit.com","id":"2269","opcode":"1","channelId":"2","timestamp":"1652648933036"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5542","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"692\\\",\\\"result\\\":{\\\"_id\\\":\\\"2aajqTB69y7ZSSo9v\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String pigLatin(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.696969696969697,\\\"familyId\\\":\\\"rYLwDk9pCx9z9L9B7\\\",\\\"instructions\\\":\\\"Create a function that takes a string of words and moves the first letter of each word to the end of it, then adds \\\\\\\"ay\\\\\\\" to the end of the word. This is called \\\\\\\"Pig Latin\\\\\\\" and it gets more complicated than the rules in this particular challenge. I've intentionally kept things simple, otherwise this would turn into an extremely tedious challenge.\\\\n\\\\n- Move the first letter of each word to the end of the word.\\\\n- Add \\\\\\\"ay\\\\\\\" to the end of the word.\\\\n- Words starting with a vowel (A, E, I, O, U) simply have \\\\\\\"WAY\\\\\\\" appended to the end.\\\\n\\\\n### Examples\\\\n```\\\\npigLatin(\\\\\\\"Cats are great pets.\\\\\\\")\\\\n➞ \\\\\\\"Atscay areway reatgay etspay.\\\\\\\"\\\\n\\\\npigLatin(\\\\\\\"Tom got a","thisId":"2270","channelHost":"edabit.com","id":"2270","opcode":"1","channelId":"2","timestamp":"1652648933043"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"693\\\"]}\"]","thisId":"2271","channelHost":"edabit.com","id":"2271","opcode":"1","channelId":"2","timestamp":"1652648933142"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4785","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"693\\\",\\\"result\\\":{\\\"_id\\\":\\\"x6vucQsSp6yA3ay4M\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class CipherText {\\\\n  public static String paulCipher(String txt) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.7,\\\"familyId\\\":\\\"fut5kB4hiA5R8Cerf\\\",\\\"instructions\\\":\\\"In **Paul Cipher**, only alpha characters will be encoded with the following rules:\\\\n\\\\n- All alpha characters will be treated as uppercase letters.\\\\n- The first alpha character will not change (except for switching to upper case).\\\\n- All subsequent alpha characters will be shifted toward \\\\\\\"Z\\\\\\\" by the alphabetical position of the previous alpha character (wrap back to \\\\\\\"A\\\\\\\" if \\\\\\\"Z\\\\\\\" is passed).\\\\n\\\\n`he1lo` would be encoded as follows:\\\\n\\\\n```\\\\npaulCipher(\\\\\\\"he1lo\\\\\\\") ➞ \\\\\\\"HM1QA\\\\\\\"\\\\n\\\\nh -> H (First character to be changed to uppercase)\\\\ne -> M (H is the previous alpha character and the 8th letter in the alphabet. E + 8 = M)\\\\n1 -> 1 (Keep all characters other than alph","thisId":"2272","channelHost":"edabit.com","id":"2272","opcode":"1","channelId":"2","timestamp":"1652648933147"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"694\\\"]}\"]","thisId":"2273","channelHost":"edabit.com","id":"2273","opcode":"1","channelId":"2","timestamp":"1652648933287"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5426","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"694\\\",\\\"result\\\":{\\\"_id\\\":\\\"NwSd26PwgggJquov3\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int longestRun(int[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.7027027027027026,\\\"familyId\\\":\\\"Ymm75mEm9qZx3nsuF\\\",\\\"instructions\\\":\\\"A **consecutive-run** is a list of adjacent, consecutive integers. This list can be either increasing or decreasing. Create a function that takes an array of numbers and returns the length of the longest **consecutive-run**.\\\\n\\\\nTo illustrate:\\\\n\\\\n```\\\\nlongestRun([1, 2, 3, 5, 6, 7, 8, 9]) ➞ 5\\\\n// Two consecutive runs: [1, 2, 3] and [5, 6, 7, 8, 9] (longest).\\\\n```\\\\n\\\\n### Examples\\\\n```\\\\nlongestRun([1, 2, 3, 10, 11, 15]) ➞ 3\\\\n// Longest consecutive-run: [1, 2, 3].\\\\n\\\\nlongestRun([5, 4, 2, 1]) ➞ 2\\\\n// Longest consecutive-run: [5, 4] and [2, 1].\\\\n\\\\nlongestRun([3, 5, 7, 10, 15]) ➞ 1\\\\n// No consecutive runs, so we return 1.\\\\n```\\\\n\\\\n### Notes\\\\nIf there aren't any conse","thisId":"2274","channelHost":"edabit.com","id":"2274","opcode":"1","channelId":"2","timestamp":"1652648933292"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"697\\\"]}\"]","thisId":"2275","channelHost":"edabit.com","id":"2275","opcode":"1","channelId":"2","timestamp":"1652648933421"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5902","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"697\\\",\\\"result\\\":{\\\"_id\\\":\\\"3iDnqHWoSgKzYerPZ\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int totalPoints(String[] guesses, String word) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.707692307692308,\\\"familyId\\\":\\\"TEvw5FnKwqzwAwdzG\\\",\\\"instructions\\\":\\\"In **Text Twist**, players try to score points by forming words using the letters from a 6-letter scrambled word. They win the round if they can successfully unscramble the 6-letter word.\\\\n\\\\nCreate a function that takes in an array of **already-guessed words**, the **unscrambled 6-letter word** and returns the total number of points the player scored in a particular round using the following rubric:\\\\n\\\\n1. **3-letter** words are **1 pt**\\\\n2. **4-letter** words are **2 pts**\\\\n3. **5-letter** words are **3 pts**\\\\n4. **6-letter** words are **4 pts** + **50 pt bonus** (for unscrambling the word) \\\\n\\\\nRemember that **invalid words** (words that cannot be for","thisId":"2276","channelHost":"edabit.com","id":"2276","opcode":"1","channelId":"2","timestamp":"1652648933427"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"698\\\"]}\"]","thisId":"2277","channelHost":"edabit.com","id":"2277","opcode":"1","channelId":"2","timestamp":"1652648933531"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"18165","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"698\\\",\\\"result\\\":{\\\"_id\\\":\\\"D3MvMGRxTsN3mtNkH\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Numbers {\\\\n  public static BigInteger lookAndSay(long n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.6956521739130435,\\\"familyId\\\":\\\"uzS7M5WkANoSB3k3b\\\",\\\"instructions\\\":\\\"Given an integer value, return a new **integer** according to the rules below:\\\\n\\\\n- Split the number into groups of two digit numbers. If the number has an *odd* number of digits, return **`-1`**.\\\\n- For each group of two digit numbers, concatenate the *last digit* to a new string the same number of times as the value of the *first digit*.\\\\n- Return the result as an *integer*.\\\\n\\\\n```\\\\nlookAndSay(3132) ➞ 111222\\\\n\\\\n// By reading the number digit by digit, you get three \\\\\\\"1\\\\\\\" and three \\\\\\\"2\\\\\\\".\\\\n// Therefore, you put three ones and three two's together.\\\\n// Remember to return an integer value (i.e BigIntger class).\\\\n```\\\\n\\\\n### Examples\\\\n```\\\\nlookAndSay(121320001","thisId":"2278","channelHost":"edabit.com","id":"2278","opcode":"1","channelId":"2","timestamp":"1652648933536"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"696\\\"]}\"]","thisId":"2279","channelHost":"edabit.com","id":"2279","opcode":"1","channelId":"2","timestamp":"1652648933637"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5304","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"696\\\",\\\"result\\\":{\\\"_id\\\":\\\"d9DKamDvmX6TiSd5u\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String timeDifference(String cityA, String timestamp, String cityB) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.7058823529411766,\\\"familyId\\\":\\\"cmAGteXLYkK3asJws\\\",\\\"instructions\\\":\\\"In this challenge, the goal is to calculate what time it is in two different cities. You're given a string `cityA` and the related string `timestamp` (time in `cityA`) with the date formatted in full **U.S. notation**, as in this example:\\\\n\\\\n```\\\\n\\\\\\\"July 21, 1983 23:01\\\\\\\"\\\\n```\\\\n\\\\nYou have to return a new timestamp with date and corresponding time in `cityB`, formatted as in this example:\\\\n\\\\n```\\\\n\\\\\\\"1983-7-22 23:01\\\\\\\"\\\\n```\\\\n\\\\nSee the table below for a list of given cities and their **GMT** (_Greenwich Mean Time_) hours offsets.\\\\n\\\\n|GMT|City|\\\\n|---|---|\\\\n| - 08:00 | Los Angeles\\\\n| - 05:00 | New York\\\\n| - 04:30 | Caracas\\\\n| - ","thisId":"2280","channelHost":"edabit.com","id":"2280","opcode":"1","channelId":"2","timestamp":"1652648933641"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"699\\\"]}\"]","thisId":"2281","channelHost":"edabit.com","id":"2281","opcode":"1","channelId":"2","timestamp":"1652648933751"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4902","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"699\\\",\\\"result\\\":{\\\"_id\\\":\\\"A8xQZTqzkn88cLCmj\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean canMove(String piece, String current, String target) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.7142857142857144,\\\"familyId\\\":\\\"Fw5iKeZRJ53jey8hx\\\",\\\"instructions\\\":\\\"Create a function that takes the name of a chess piece, its position and a target position. The function should return `true` if the piece can move to the target and `false` if it can't.\\\\n\\\\nThe possible inputs are \\\\\\\"Pawn\\\\\\\", \\\\\\\"Knight\\\\\\\", \\\\\\\"Bishop\\\\\\\", \\\\\\\"Rook\\\\\\\", \\\\\\\"Queen\\\\\\\" and \\\\\\\"King\\\\\\\".\\\\n\\\\n### Examples\\\\n```\\\\ncanMove(\\\\\\\"Rook\\\\\\\", \\\\\\\"A8\\\\\\\", \\\\\\\"H8\\\\\\\") ➞ true\\\\n\\\\ncanMove(\\\\\\\"Bishop\\\\\\\", \\\\\\\"A7\\\\\\\", \\\\\\\"G1\\\\\\\") ➞ true\\\\n\\\\ncanMove(\\\\\\\"Queen\\\\\\\", \\\\\\\"C4\\\\\\\", \\\\\\\"D6\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\n- Do not include pawn capture moves and en passant.\\\\n- Do not include castling.\\\\n- Remember to include pawns' two-square move on th","thisId":"2282","channelHost":"edabit.com","id":"2282","opcode":"1","channelId":"2","timestamp":"1652648933755"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"695\\\"]}\"]","thisId":"2283","channelHost":"edabit.com","id":"2283","opcode":"1","channelId":"2","timestamp":"1652648933869"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5224","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"695\\\",\\\"result\\\":{\\\"_id\\\":\\\"hj5YbZ7u7cAWzEvCB\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int strongPassword(String password) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.7037037037037037,\\\"editorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"familyId\\\":\\\"kvea7rdsbPjtjrqTF\\\",\\\"instructions\\\":\\\"Create a function that determines the minimum number of characters needed to make a strong password.\\\\n\\\\nA password is considered _strong_ if it satisfies the following criteria:\\\\n\\\\n- Its length is at least 6.\\\\n- It contains at least one digit.\\\\n- It contains at least one lowercase English character.\\\\n- It contains at least one uppercase English character.\\\\n- It contains at least one special character: `!@#$%^&*()-+`\\\\n\\\\nTypes of characters in a form you can paste into your solution:\\\\n\\\\n```\\\\nstatic final String numbers = \\\\\\\"0123456789\\\\\\\";\\\\nstatic final String lower_case = \\\\\\\"abcdefghijklmnopqrstuvwxyz\\\\\\\";\\\\nstatic final","thisId":"2284","channelHost":"edabit.com","id":"2284","opcode":"1","channelId":"2","timestamp":"1652648933874"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"700\\\"]}\"]","thisId":"2285","channelHost":"edabit.com","id":"2285","opcode":"1","channelId":"2","timestamp":"1652648933982"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4152","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"700\\\",\\\"result\\\":{\\\"_id\\\":\\\"GnspyiCzpSMJuobmP\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class TicTacToe {\\\\n\\\\tpublic static int blockPlayer(int a, int b) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.7142857142857144,\\\"quality\\\":0,\\\"familyId\\\":\\\"f3AGJkwXxZ87gWvuA\\\",\\\"instructions\\\":\\\"Create a function that returns a number which can block the player from reaching 3 in a row in a game of Tic Tac Toe. The number given as an argument will correspond to a grid of Tic Tac Toe: topleft is 0, topright is 2, bottomleft is 6, and bottomright is 8.\\\\n\\\\n- Create a function that takes two numbers `a`, `b` and returns another number.\\\\n- This number should be the final one in a line to block the player from winning.\\\\n\\\\n### Examples\\\\n```\\\\nblockPlayer(0, 3) ➞ 6\\\\n\\\\nblockPlayer(0, 4) ➞ 8\\\\n\\\\nblockPlayer(3, 5) ➞ 4\\\\n```\\\\n\\\\n### Notes\\\\nThe values given will always have two filled squares in a line.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.juni","thisId":"2286","channelHost":"edabit.com","id":"2286","opcode":"1","channelId":"2","timestamp":"1652648933988"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"701\\\"]}\"]","thisId":"2287","channelHost":"edabit.com","id":"2287","opcode":"1","channelId":"2","timestamp":"1652648934083"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5758","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"701\\\",\\\"result\\\":{\\\"_id\\\":\\\"YMT2d6RFcsvNv58cd\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String weHaveHouse(int hh, int hw, int hd, int rh) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.7142857142857144,\\\"familyId\\\":\\\"kpvRcjS9ZFoiFG74H\\\",\\\"instructions\\\":\\\"In the garden, we have a house. We don't know how big the house is going to get. The garden is 50' x 50'. If you want to walk around the house, you'll need 3 feet so the house cannot be bigger than the width & depth of the garden minus the path to walk around it.\\\\n\\\\n![We Have a House](https://edabit-challenges.s3.amazonaws.com/we_have_house.png \\\\\\\"We Have a House\\\\\\\")\\\\n\\\\nIn this example you can see the arguments your function is going to get (in **red**). The measurements of the windows + door as well as the dark rim (against rain damage) are always the same (in **blue**). We put **One door** in the front and **Two windows** in each wall.\\\\n\\\\nWe don't have ","thisId":"2288","channelHost":"edabit.com","id":"2288","opcode":"1","channelId":"2","timestamp":"1652648934090"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"23","payloadFragment":"a[\"{\\\"msg\\\":\\\"ping\\\"}\"]","thisId":"2289","channelHost":"edabit.com","id":"2289","opcode":"1","channelId":"2","timestamp":"1652648934130"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"22","payloadFragment":"[\"{\\\"msg\\\":\\\"pong\\\"}\"]","thisId":"2290","channelHost":"edabit.com","id":"2290","opcode":"1","channelId":"2","timestamp":"1652648934137"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"702\\\"]}\"]","thisId":"2291","channelHost":"edabit.com","id":"2291","opcode":"1","channelId":"2","timestamp":"1652648934188"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3620","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"702\\\",\\\"result\\\":{\\\"_id\\\":\\\"ccKJ7Rvu7hsxMTYcw\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class FlashDrive {\\\\n  public static String actualMemorySize(String ms) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.72,\\\"familyId\\\":\\\"iBv8Lz88ZgxSZyqxk\\\",\\\"instructions\\\":\\\"Create a function that takes the memory size (`ms` is a string type) as an argument and returns the actual memory size.\\\\n\\\\n### Examples\\\\n```\\\\nactualMemorySize(\\\\\\\"32GB\\\\\\\") ➞ \\\\\\\"29.76GB\\\\\\\"\\\\n\\\\nactualMemorySize(\\\\\\\"2GB\\\\\\\") ➞ \\\\\\\"1.86GB\\\\\\\"\\\\n\\\\nactualMemorySize(\\\\\\\"512MB\\\\\\\") ➞ \\\\\\\"476MB\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- The actual storage loss on a USB device is 7% of the overall memory size!\\\\n- If the actual memory size was greater than 1 GB, round your result to two decimal places.\\\\n- If the memory size after adjustment is smaller then 1 GB, return the result in MB.\\\\n- For the purposes of this challenge, there are **1000 MB** in a **Gigabyte**.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":","thisId":"2292","channelHost":"edabit.com","id":"2292","opcode":"1","channelId":"2","timestamp":"1652648934194"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"703\\\"]}\"]","thisId":"2293","channelHost":"edabit.com","id":"2293","opcode":"1","channelId":"2","timestamp":"1652648934316"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5661","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"703\\\",\\\"result\\\":{\\\"_id\\\":\\\"6CkRcCdGAmCGPZnyb\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String[] removeLetters(String[] letters, String word) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.7294117647058824,\\\"familyId\\\":\\\"triWLj2qiuSebxd44\\\",\\\"instructions\\\":\\\"Create a function that takes an array and string. The function should remove the letters in the string from the array, and return the array.\\\\n\\\\n### Examples\\\\n```\\\\nremoveLetters([\\\\\\\"s\\\\\\\", \\\\\\\"t\\\\\\\", \\\\\\\"r\\\\\\\", \\\\\\\"i\\\\\\\", \\\\\\\"n\\\\\\\", \\\\\\\"g\\\\\\\", \\\\\\\"w\\\\\\\"], \\\\\\\"string\\\\\\\") ➞ [\\\\\\\"w\\\\\\\"]\\\\n\\\\nremoveLetters([\\\\\\\"b\\\\\\\", \\\\\\\"b\\\\\\\", \\\\\\\"l\\\\\\\", \\\\\\\"l\\\\\\\", \\\\\\\"g\\\\\\\", \\\\\\\"n\\\\\\\", \\\\\\\"o\\\\\\\", \\\\\\\"a\\\\\\\", \\\\\\\"w\\\\\\\"], \\\\\\\"balloon\\\\\\\") ➞ [\\\\\\\"b\\\\\\\", \\\\\\\"g\\\\\\\", \\\\\\\"w\\\\\\\"]\\\\n\\\\nremoveLetters([\\\\\\\"d\\\\\\\", \\\\\\\"b\\\\\\\", \\\\\\\"t\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"a\\\\\\\", \\\\\\\"i\\\\\\\"], \\\\\\\"edabit\\\\\\\") ➞ []\\\\n```\\\\n\\\\n### Notes\\\\n - If number of times a letter appears in the array is greater tha","thisId":"2294","channelHost":"edabit.com","id":"2294","opcode":"1","channelId":"2","timestamp":"1652648934323"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"704\\\"]}\"]","thisId":"2295","channelHost":"edabit.com","id":"2295","opcode":"1","channelId":"2","timestamp":"1652648934419"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5340","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"704\\\",\\\"result\\\":{\\\"_id\\\":\\\"bpqfCQ7zumf5Ep24Z\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean oddOneOut(String[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.7444444444444445,\\\"familyId\\\":\\\"oNMpTbyYmnsHFvb3W\\\",\\\"instructions\\\":\\\"Write a function that returns `true` if **exactly one word** in the array differs in length from the rest. Return `false` in all other cases.\\\\n\\\\n### Examples\\\\n```\\\\noddOneOut([\\\\\\\"silly\\\\\\\", \\\\\\\"mom\\\\\\\", \\\\\\\"let\\\\\\\", \\\\\\\"the\\\\\\\"]) ➞ true\\\\n\\\\noddOneOut([\\\\\\\"swanky\\\\\\\", \\\\\\\"rhino\\\\\\\", \\\\\\\"moment\\\\\\\"]) ➞ true\\\\n\\\\noddOneOut([\\\\\\\"the\\\\\\\", \\\\\\\"them\\\\\\\", \\\\\\\"theme\\\\\\\"]) ➞ false\\\\n\\\\noddOneOut([\\\\\\\"very\\\\\\\", \\\\\\\"to\\\\\\\", \\\\\\\"an\\\\\\\", \\\\\\\"some\\\\\\\"]) ➞ false\\\\n```\\\\n\\\\n### Notes\\\\nThe length of the array will always have at least **three or more** words.\\\",\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals;\\\\nimport org.junit.Test;\\\\n\\\\n/**\\\\n * @author edwardclark\\\\n**/\\\\n\\\\np","thisId":"2296","channelHost":"edabit.com","id":"2296","opcode":"1","channelId":"2","timestamp":"1652648934423"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"705\\\"]}\"]","thisId":"2297","channelHost":"edabit.com","id":"2297","opcode":"1","channelId":"2","timestamp":"1652648934518"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3841","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"705\\\",\\\"result\\\":{\\\"_id\\\":\\\"d5FL6or864rxqhATT\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class LonelyNumbers {\\\\n  public static long numbersNeedFriendsToo(int n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.730769230769231,\\\"familyId\\\":\\\"a4jFxt6Lfbh7x4vqi\\\",\\\"instructions\\\":\\\"Given a number, insert duplicate digits on both sides of all digits which appear in a group of one.\\\\n\\\\n### Examples\\\\n```\\\\nnumbersNeedFriendsToo(22733) ➞ 2277733\\\\n// The number can be split into groups 22, 7, and 33.\\\\n// 7 appears on its own.\\\\n// Put 7s on both sides to create 777.\\\\n// Put the numbers together and return the result.\\\\n\\\\nnumbersNeedFriendsToo(4666) ➞ 444666\\\\n\\\\nnumbersNeedFriendsToo(544) ➞ 55544\\\\n\\\\nnumbersNeedFriendsToo(123) ➞ 111222333\\\\n\\\\nnumbersNeedFriendsToo(56657) ➞ 55566555777\\\\n\\\\nnumbersNeedFriendsToo(33) ➞ 33\\\\n```\\\\n\\\\n### Notes\\\\nAll tests will include positive integers.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab","thisId":"2298","channelHost":"edabit.com","id":"2298","opcode":"1","channelId":"2","timestamp":"1652648934522"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"706\\\"]}\"]","thisId":"2299","channelHost":"edabit.com","id":"2299","opcode":"1","channelId":"2","timestamp":"1652648934624"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5449","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"706\\\",\\\"result\\\":{\\\"_id\\\":\\\"i3vx6M7poKZoZi8iK\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String truncatable(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.736842105263158,\\\"familyId\\\":\\\"gtdvFS5Lh3wpHCmJb\\\",\\\"instructions\\\":\\\"A left-truncatable prime is a prime number that contains no 0 digits and, when the first digit is successively removed, the result is always prime.\\\\n\\\\nA right-truncatable prime is a prime number that contains no 0 digits and, when the last digit is successively removed, the result is always prime.\\\\n\\\\nCreate a function that takes an integer as an argument and:\\\\n\\\\n- If the integer is only a left-truncatable prime, return `\\\\\\\"left\\\\\\\"`.\\\\n- If the integer is only a right-truncatable prime, return `\\\\\\\"right\\\\\\\"`.\\\\n- If the integer is both, return `\\\\\\\"both\\\\\\\"`.\\\\n- Otherwise, return `\\\\\\\"none\\\\\\\"`.\\\\n\\\\n### Examples\\\\n```\\\\ntruncatable(9137) ➞ \\\\\\\"left\\\\\\\"\\\\n// Because 9137, 137, ","thisId":"2300","channelHost":"edabit.com","id":"2300","opcode":"1","channelId":"2","timestamp":"1652648934628"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"707\\\"]}\"]","thisId":"2301","channelHost":"edabit.com","id":"2301","opcode":"1","channelId":"2","timestamp":"1652648934740"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4797","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"707\\\",\\\"result\\\":{\\\"_id\\\":\\\"HssePSisNvLpv72zD\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class PlateNumber {\\\\n  public static String licensePlate(String code, int group) {\\\\n  \\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.739130434782609,\\\"familyId\\\":\\\"EkwgzHy9TAtgwMt6T\\\",\\\"instructions\\\":\\\"Travelling through Europe one needs to pay attention to how the license plate in the given country is displayed. When crossing the border you need to park on the shoulder, unscrew the plate, re-group the characters according to the local regulations, attach it back and proceed with the journey.\\\\n\\\\nCreate a solution that can format the _dmv number_ into a plate number with correct grouping. The function input consists of string `s` and group length `n`. The output has to be upper case characters and digits. The new groups are made from right to left and connected by `-`. The original order of the _dmv number_ is preserved.\\\\n\\\\n### Examples\\\\n```\\\\nlicensePlate(\\\\\\\"5","thisId":"2302","channelHost":"edabit.com","id":"2302","opcode":"1","channelId":"2","timestamp":"1652648934745"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"708\\\"]}\"]","thisId":"2303","channelHost":"edabit.com","id":"2303","opcode":"1","channelId":"2","timestamp":"1652648934850"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5417","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"708\\\",\\\"result\\\":{\\\"_id\\\":\\\"2j6h73ixjYW9FdtP2\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String smithType(String number) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.75,\\\"familyId\\\":\\\"AFQPqGdu9MASrzMMG\\\",\\\"instructions\\\":\\\"In numbers theory, a positive composite integer is a Smith number if its digital root is equal to the digital root of the sum of its prime factors, with factors being counted by multiplicity. Trivially, every prime is also a Smith number, having just one prime factor that is equal to itself. If two Smith numbers are consecutive in the integer series, then they are Smith brothers. Any other number will not be a Smith.\\\\n\\\\nGiven a positive integer `number`, implement a function that returns:\\\\n- `\\\\\\\"Youngest Smith\\\\\\\"` if the given number is the lower element of a couple of Smith brothers.\\\\n- `\\\\\\\"Oldest Smith\\\\\\\"` if the given number is the higher element of a couple of Smith brothers.\\\\n- `\\\\","thisId":"2304","channelHost":"edabit.com","id":"2304","opcode":"1","channelId":"2","timestamp":"1652648934855"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"709\\\"]}\"]","thisId":"2305","channelHost":"edabit.com","id":"2305","opcode":"1","channelId":"2","timestamp":"1652648934945"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4807","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"709\\\",\\\"result\\\":{\\\"_id\\\":\\\"7gaPYwZiZzAwQvi2q\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class PerfectShuffle {\\\\n\\\\tpublic static int shuffleCount(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n} \\\",\\\"difficulty\\\":2.75,\\\"familyId\\\":\\\"f35PXuaSWQeNaHkno\\\",\\\"instructions\\\":\\\"An out-shuffle, also known as an out Faro shuffle or a perfect shuffle, is a controlled method for shuffling playing cards. It is performed by splitting the deck into two equal halves and interleaving them together perfectly, with the condition that the top card of the deck remains in place.\\\\n\\\\nUsing an array to represent a deck of cards, an out-shuffle looks like:\\\\n\\\\n```\\\\n[1, 2, 3, 4, 5, 6, 7, 8] ➞ [1, 5, 2, 6, 3, 7, 4, 8]\\\\n// Card 1 remains in the first position.\\\\n```\\\\n\\\\nIf we repeat the process, the deck eventually returns to original order:\\\\n\\\\nShuffle 1:\\\\n```\\\\n[1, 2, 3, 4, 5, 6, 7, 8] ➞ [1, 5, 2, 6, 3, 7, 4, 8]\\\\n```\\\\n\\\\nShuffle 2:\\\\n```\\\\n[1, 5, 2, 6, 3, 7, 4, 8] ➞ [1, ","thisId":"2306","channelHost":"edabit.com","id":"2306","opcode":"1","channelId":"2","timestamp":"1652648934953"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"710\\\"]}\"]","thisId":"2307","channelHost":"edabit.com","id":"2307","opcode":"1","channelId":"2","timestamp":"1652648935059"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3895","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"710\\\",\\\"result\\\":{\\\"_id\\\":\\\"JyskomdFw4tYgAELT\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean isNew(int num) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.75,\\\"familyId\\\":\\\"kPYtEn6nFXjjzg8A8\\\",\\\"instructions\\\":\\\"A new number is a number that is not a permutation of any smaller number.  869 is **not** a new number because it is just a permutation of smaller numbers, 689 and 698. 509 is a new number because it can't be formed by a permutation of any smaller number (leading zeros not allowed).\\\\n\\\\nWrite a function that takes a non-negative integer and returns `true` if the integer is a new number and `false` if it is not.\\\\n\\\\n### Examples\\\\n```\\\\nisNew(3) ➞ true\\\\n\\\\nisNew(30) ➞ true\\\\n\\\\nisNew(321) ➞ false\\\\n\\\\nisNew(123) ➞ true\\\\n```\\\\n\\\\n### Notes\\\\nA curious fact: out of the first one million integers, only 8002 are new.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npubl","thisId":"2308","channelHost":"edabit.com","id":"2308","opcode":"1","channelId":"2","timestamp":"1652648935063"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"713\\\"]}\"]","thisId":"2309","channelHost":"edabit.com","id":"2309","opcode":"1","channelId":"2","timestamp":"1652648935185"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3603","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"713\\\",\\\"result\\\":{\\\"_id\\\":\\\"Jtufg4A5WJMDk4FRT\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class CountFives { \\\\n\\\\tpublic static int getLuckiest(int[] r) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.75,\\\"familyId\\\":\\\"w3RvAbztcEvjbjjhS\\\",\\\"instructions\\\":\\\"Arun is obsessed with primes, especially five. He considers a number to be luckiest if it has the highest number of five in it. If two numbers have the same frequency of five, Arun considers the larger of them to be luckiest, and if there is no five in any number, the first given number is considered luckiest. Help him choose the luckiest number.\\\\n\\\\n### Examples\\\\n```\\\\ngetLuckiest([-544, 666, -645, -445]) ➞ -445\\\\n\\\\ngetLuckiest([5, 12, 55, 11]) ➞ 55\\\\n\\\\ngetLuckiest([5, 12, -55,  11]) ➞ -55\\\\n\\\\ngetLuckiest([515, 1255, -55,  1]) ➞ 1255\\\\n\\\\ngetLuckiest([44, 12, 7, 40]) ➞ 44\\\\n```\\\\n\\\\n### Notes\\\\nReturn `0` if given an **empty array**.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":fa","thisId":"2310","channelHost":"edabit.com","id":"2310","opcode":"1","channelId":"2","timestamp":"1652648935189"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"712\\\"]}\"]","thisId":"2311","channelHost":"edabit.com","id":"2311","opcode":"1","channelId":"2","timestamp":"1652648935285"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5387","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"712\\\",\\\"result\\\":{\\\"_id\\\":\\\"zjEdKiuKbmhXMx993\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class StudentAverage {\\\\n\\\\tpublic static String takeDownAverage(String[] scores) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.75,\\\"familyId\\\":\\\"48NKFGGib6tM9dyqF\\\",\\\"instructions\\\":\\\"What is the percentage you can score on a test, which **single-handedly** brings down the class average by **5%?** Given an array of your classmates scores, create a function that returns the answer. Round to the nearest percent.\\\\n\\\\n### Examples\\\\n```\\\\ntakeDownAverage([\\\\\\\"95%\\\\\\\", \\\\\\\"83%\\\\\\\", \\\\\\\"90%\\\\\\\", \\\\\\\"87%\\\\\\\", \\\\\\\"88%\\\\\\\", \\\\\\\"93%\\\\\\\"]) ➞ \\\\\\\"54%\\\\\\\"\\\\n\\\\ntakeDownAverage([\\\\\\\"10%\\\\\\\"]) ➞ \\\\\\\"0%\\\\\\\"\\\\n\\\\ntakeDownAverage([\\\\\\\"53%\\\\\\\", \\\\\\\"79%\\\\\\\"]) ➞ \\\\\\\"51%\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- No tests will include empty arrays or require negative percentages.\\\\n- Note that you need to return a string.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"/*","thisId":"2312","channelHost":"edabit.com","id":"2312","opcode":"1","channelId":"2","timestamp":"1652648935290"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"711\\\"]}\"]","thisId":"2313","channelHost":"edabit.com","id":"2313","opcode":"1","channelId":"2","timestamp":"1652648935399"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4693","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"711\\\",\\\"result\\\":{\\\"_id\\\":\\\"QdENiEqqhHtYFrk5A\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Zygodrome {\\\\n\\\\tpublic static boolean isZygodrome(long num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.75,\\\"familyId\\\":\\\"keXQuSRWkSABGLcEC\\\",\\\"instructions\\\":\\\"A number is Zygodrome if it can be partitioned into clusters of repeating digits with a length equals or greater than two (as to say that repeating digits need to be placed as  an adjacent pair or a greater group, and that no single digits are allowed).\\\\n\\\\nGiven a non-negative integer `num`, implement a function that returns `true` if `num` is a Zygodrome number, or `false` otherwise.\\\\n\\\\n### Examples\\\\n```\\\\nisZygodrome(11) ➞ true\\\\n// 11 is a pair of repeated digits\\\\n\\\\nisZygodrome(33322) ➞ true\\\\n// 333 is a triplet of repeated digits, and 22 is a pair\\\\n\\\\nisZygodrome(5) ➞ false\\\\n// 5 is a single digit, it doesn't form a pair\\\\n\\\\nisZygodrome(1001) ➞ false\\\\n// 00 is a pair, but th","thisId":"2314","channelHost":"edabit.com","id":"2314","opcode":"1","channelId":"2","timestamp":"1652648935405"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"714\\\"]}\"]","thisId":"2315","channelHost":"edabit.com","id":"2315","opcode":"1","channelId":"2","timestamp":"1652648935482"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4935","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"714\\\",\\\"result\\\":{\\\"_id\\\":\\\"8Pgn2HjatQgF9Rdu8\\\",\\\"author\\\":\\\"Mubashir Hassan \\\",\\\"authorId\\\":\\\"T6iBEE2jp7f7iEF2P\\\",\\\"code\\\":\\\"public class Mubashir {\\\\n  public static String spiderVsFly(String spider, String fly) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.75,\\\"familyId\\\":\\\"sgqbzcN9BAsHA6sD9\\\",\\\"instructions\\\":\\\"A spider web is defined by **rings** numbered from **0-4** from the center and **radials** labeled clock-wise from the top as **A-H**.\\\\n\\\\nCreate a function that takes the coordinates of `spider` and `fly` and returns the shortest path for the spider to get to the fly.\\\\n\\\\nIt's worth noting that the shortest path should be calculated \\\\\\\"geometrically\\\\\\\", not by counting the number of points that path goes through. We could arrange that:\\\\n- Angle between every pair of radials is the same (45 degrees).\\\\n- Distance between every pair of rings is always the same (let's say \\\\\\\"x\\\\\\\").\\\\n\\\\n![Mubashir](https://edabit-challenges.s3.amazonaws.com/aSAWPl0.png)\\\\n\\\\nIn the ab","thisId":"2316","channelHost":"edabit.com","id":"2316","opcode":"1","channelId":"2","timestamp":"1652648935487"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"715\\\"]}\"]","thisId":"2317","channelHost":"edabit.com","id":"2317","opcode":"1","channelId":"2","timestamp":"1652648935597"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6707","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"715\\\",\\\"result\\\":{\\\"_id\\\":\\\"jH4wEAk4gXZommdfo\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String sentencePrimeness(String sentence) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.7586206896551726,\\\"isHidden\\\":false,\\\"familyId\\\":\\\"8PozQrjPcyHtbgDmg\\\",\\\"instructions\\\":\\\"A word value can be established summing up all the numeric values of every single character (excluding spaces and punctuation): a value from 1 (\\\\\\\"a\\\\\\\") to 26 (\\\\\\\"z\\\\\\\") is given to letters, while numbers have their literal values, from 0 to 9. The sentence value is the sum of the values of the words.\\\\n\\\\n```\\\\nsentence = \\\\\\\"ABC ! abc ... @ 123\\\\\\\"\\\\n// Remove spaces, punctuation and any symbol.\\\\n\\\\nsentence = [\\\\\\\"ABC\\\\\\\", \\\\\\\"abc\\\\\\\", \\\\\\\"123\\\\\\\"]\\\\n\\\\nwords values = \\\\\\\"ABC\\\\\\\" = 1+2+3 = 6 | \\\\\\\"abc\\\\\\\" = 1+2+3 = 6 | \\\\\\\"123\\\\\\\" = 1+2+3 = 6\\\\n\\\\nsentence value = 6 + 6 + 6 = 18\\\\n```\\\\n\\\\nGiven a string `sentence` implement a function that retur","thisId":"2318","channelHost":"edabit.com","id":"2318","opcode":"1","channelId":"2","timestamp":"1652648935601"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"716\\\"]}\"]","thisId":"2319","channelHost":"edabit.com","id":"2319","opcode":"1","channelId":"2","timestamp":"1652648935694"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4330","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"716\\\",\\\"result\\\":{\\\"_id\\\":\\\"QdrLgb37ZZwYMKXwi\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String specialReverseString(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.760869565217391,\\\"familyId\\\":\\\"RJZNSmqZProqX63EE\\\",\\\"instructions\\\":\\\"Create a function that takes a string and returns the reversed string. However there's a few rules to follow in order to make the challenge interesting:\\\\n\\\\n- The UPPERCASE/lowercase positions must be kept in the same order as the original string (see example #1 and #2).\\\\n- Spaces must be kept in the same order as the original string (see example #3).\\\\n\\\\n### Examples\\\\n```\\\\nspecialReverseString(\\\\\\\"Edabit\\\\\\\") ➞ \\\\\\\"Tibade\\\\\\\"\\\\n\\\\nspecialReverseString(\\\\\\\"UPPER lower\\\\\\\") ➞ \\\\\\\"REWOL reppu\\\\\\\"\\\\n\\\\nspecialReverseString(\\\\\\\"1 23 456\\\\\\\") ➞ \\\\\\\"6 54 321\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\np","thisId":"2320","channelHost":"edabit.com","id":"2320","opcode":"1","channelId":"2","timestamp":"1652648935698"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"717\\\"]}\"]","thisId":"2321","channelHost":"edabit.com","id":"2321","opcode":"1","channelId":"2","timestamp":"1652648935789"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6449","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"717\\\",\\\"result\\\":{\\\"_id\\\":\\\"De5e8kdsCFmKvc6w8\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String longestSubstring(String digits) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.761904761904762,\\\"familyId\\\":\\\"d3tZz58ZqXrnkNvsd\\\",\\\"instructions\\\":\\\"Given a string of digits, return the longest substring with *alternating* odd/even or even/odd digits. If two or more substrings have the same length, return the substring that occurs first.\\\\n\\\\n### Examples\\\\n```\\\\nlongestSubstring(\\\\\\\"225424272163254474441338664823\\\\\\\") ➞ \\\\\\\"272163254\\\\\\\"\\\\n// substrings = 254, 272163254, 474, 41, 38, 23\\\\n\\\\nlongestSubstring(\\\\\\\"594127169973391692147228678476\\\\\\\") ➞ \\\\\\\"16921472\\\\\\\"\\\\n// substrings = 94127, 169, 16921472, 678, 476\\\\n\\\\nlongestSubstring(\\\\\\\"721449827599186159274227324466\\\\\\\") ➞ \\\\\\\"7214\\\\\\\"\\\\n// substrings = 7214, 498, 27, 18, 61, 9274, 27, 32\\\\n// 7214 and 9274 have same length, but 7214 occurs first.\\\\n```\\\\n\\\\n### Note","thisId":"2322","channelHost":"edabit.com","id":"2322","opcode":"1","channelId":"2","timestamp":"1652648935793"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"718\\\"]}\"]","thisId":"2323","channelHost":"edabit.com","id":"2323","opcode":"1","channelId":"2","timestamp":"1652648935892"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4702","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"718\\\",\\\"result\\\":{\\\"_id\\\":\\\"ze68rGX45ajtjuBNX\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int maxPossible(int n1, int n2) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.764705882352941,\\\"familyId\\\":\\\"haZoPf5c9ixyrq4ac\\\",\\\"instructions\\\":\\\"Write a function that makes the **first number as large as possible** by swapping out its digits for digits in the second number.\\\\n\\\\nTo illustrate:\\\\n```\\\\nmaxPossible(9328, 456) ➞ 9658\\\\n// 9658 is the largest possible number built from swaps from 456.\\\\n// 3 replaced with 6 and 2 replaced with 5.\\\\n```\\\\n\\\\n### Examples\\\\n```\\\\nmaxPossible(523, 76) ➞ 763\\\\n\\\\nmaxPossible(9132, 5564) ➞ 9655\\\\n\\\\nmaxPossible(8732, 91255) ➞ 9755\\\\n```\\\\n\\\\n### Notes\\\\n- Each digit in the second number can only be used once.\\\\n- Zero to all digits in the second number may be used.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  ","thisId":"2324","channelHost":"edabit.com","id":"2324","opcode":"1","channelId":"2","timestamp":"1652648935895"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"719\\\"]}\"]","thisId":"2325","channelHost":"edabit.com","id":"2325","opcode":"1","channelId":"2","timestamp":"1652648936009"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4576","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"719\\\",\\\"result\\\":{\\\"_id\\\":\\\"njGTBhXa7zP3pvsnp\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static String reverseWords(String s) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.765957446808511,\\\"quality\\\":4.909090909090909,\\\"editorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"familyId\\\":\\\"TqqDfFXZ2dFSgH5Q8\\\",\\\"instructions\\\":\\\"Given an input string, reverse the string word by word.\\\\n\\\\n### Examples\\\\n```\\\\nreverseWords(\\\\\\\"the sky is blue\\\\\\\") ➞ \\\\\\\"blue is sky the\\\\\\\"\\\\n\\\\nreverseWords(\\\\\\\"  hello world!  \\\\\\\") ➞ \\\\\\\"world! hello\\\\\\\"\\\\n\\\\nreverseWords(\\\\\\\"a good   example\\\\\\\") ➞ \\\\\\\"example good a\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- A word is defined as a sequence of non-space characters.\\\\n- The input string may contain leading or trailing spaces. However, your reversed string should not contain leading or trailing spaces.\\\\n- You need to reduce multiple spaces between two words to a single space in the reversed string.\\\\n- Try to solve this","thisId":"2326","channelHost":"edabit.com","id":"2326","opcode":"1","channelId":"2","timestamp":"1652648936016"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"720\\\"]}\"]","thisId":"2327","channelHost":"edabit.com","id":"2327","opcode":"1","channelId":"2","timestamp":"1652648936113"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3652","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"720\\\",\\\"result\\\":{\\\"_id\\\":\\\"jGYvAq5bpZhicYMWW\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int[] quadSequence(int... args) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.769230769230769,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"G2hEEw2qpdsNCn7Mh\\\",\\\"instructions\\\":\\\"Write a function that receives an array of _x_ integers and returns an array of _x_ integers in the Nth term of a quadratic number sequence (where _x_ is the length of the incoming array). Your function should return the continuation of the quadratic sequence of the length equal to the length of the given array.\\\\n\\\\n### Examples\\\\n```\\\\nquadSequence([48, 65, 84]) ➞ [105, 128, 153]\\\\n\\\\nquadSequence([0, 1, 6, 15, 28]) ➞ [45, 66, 91, 120, 153]\\\\n\\\\nquadSequence([9, 20, 33, 48]) ➞ [65, 84, 105, 128]\\\\n```\\\\n\\\\n### Notes\\\\nBoth positive and negative numbers are included in the test cases.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimp","thisId":"2328","channelHost":"edabit.com","id":"2328","opcode":"1","channelId":"2","timestamp":"1652648936118"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"721\\\"]}\"]","thisId":"2329","channelHost":"edabit.com","id":"2329","opcode":"1","channelId":"2","timestamp":"1652648936213"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5085","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"721\\\",\\\"result\\\":{\\\"_id\\\":\\\"uqZD99bDGx3LnSv6w\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class ListRanges {\\\\n  public static int[] inclusiveArray(int startNum,int endNum) {\\\\n    // recursive code here\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.769230769230769,\\\"editorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"familyId\\\":\\\"gCtDGWFi239KEnXkL\\\",\\\"instructions\\\":\\\"Write a function that, given the start `startNum` and end `endNum` values, return an array containing all the numbers **inclusive** to that range. See examples below.\\\\n\\\\n### Examples\\\\n```\\\\ninclusiveArray(1, 5) ➞ [1, 2, 3, 4, 5]\\\\n\\\\ninclusiveArray(2, 8) ➞ [2, 3, 4, 5, 6, 7, 8]\\\\n\\\\ninclusiveArray(10, 20) ➞ [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\\\\n\\\\ninclusiveArray(17, 5) ➞ [17]\\\\n```\\\\n\\\\n### IMPORTANT\\\\n- The use of `IntStream.range` and `IntStream.rangeClosed` is **totally unacceptable**, hence, recursion is the very purpose of this challenge.\\\\n\\\\n### Notes\\\\n- The numbers in the array are sorted","thisId":"2330","channelHost":"edabit.com","id":"2330","opcode":"1","channelId":"2","timestamp":"1652648936217"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"722\\\"]}\"]","thisId":"2331","channelHost":"edabit.com","id":"2331","opcode":"1","channelId":"2","timestamp":"1652648936323"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3953","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"722\\\",\\\"result\\\":{\\\"_id\\\":\\\"tNKWXJZPgRHZAc9Ja\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int bitRotate(int n, int m, boolean d) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.774193548387097,\\\"familyId\\\":\\\"ykieJmfF444Nacxas\\\",\\\"instructions\\\":\\\"Java offers some bit operations but not bit rotation. To complete that, create a function that takes three parameters:\\\\n\\\\n1. `n`: Integer, which in binary representaion should be rotated.\\\\n2. `m`:  Number of rotation steps that should be performed.\\\\n3. `d`: Boolean value; `true` = rotation right, `false` = rotation left.\\\\n\\\\nYour function should return an integer as a result of its rotated binary representation.\\\\n\\\\n### Examples\\\\n```\\\\nbitRotate(8, 1, true) ➞ 4\\\\n// 8 in bin: 1000, rotated 1 step to the right: 0100, in dec: 4\\\\n\\\\nbitRotate(16, 1, false) ➞ 1\\\\n// 16 in bin: 10000, rotated 1 step to the left: 00001, in dec: 1\\\\n\\\\nbitRotate(17, 2, false) ➞ 6\\\\n// 17 in b","thisId":"2332","channelHost":"edabit.com","id":"2332","opcode":"1","channelId":"2","timestamp":"1652648936333"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"723\\\"]}\"]","thisId":"2333","channelHost":"edabit.com","id":"2333","opcode":"1","channelId":"2","timestamp":"1652648936433"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4521","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"723\\\",\\\"result\\\":{\\\"_id\\\":\\\"H3TMp2swn3Q3sCxpv\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class PrimeExtracts {\\\\n\\\\tpublic static int[] extractPrimes(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.789473684210526,\\\"familyId\\\":\\\"czuWaSLo7tDvJpnq2\\\",\\\"instructions\\\":\\\"Create a function that takes an integer argument and returns an array of prime numbers found in the decimal representation of that number (not factors).\\\\n\\\\nFor example, `extractPrimes(1717)` returns `[7, 7, 17, 17, 71]`.\\\\n\\\\nThe array should be in ascending order. If a prime number appears more than once, every occurrence should be listed. If no prime numbers are found, return an empty array.\\\\n\\\\n### Examples\\\\n```\\\\nextractPrimes(1) ➞ []\\\\n\\\\nextractPrimes(7) ➞ [7]\\\\n\\\\nextractPrimes(73) ➞ [3, 7, 73]\\\\n\\\\nextractPrimes(1313) ➞ [3, 3, 13, 13, 31, 131, 313]\\\\n```\\\\n\\\\n### Notes\\\\n- All test cases are positive real integers.\\\\n- Some numbers will have leading zeros. For ex","thisId":"2334","channelHost":"edabit.com","id":"2334","opcode":"1","channelId":"2","timestamp":"1652648936437"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"724\\\"]}\"]","thisId":"2335","channelHost":"edabit.com","id":"2335","opcode":"1","channelId":"2","timestamp":"1652648936537"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4491","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"724\\\",\\\"result\\\":{\\\"_id\\\":\\\"HJSpyCG7we27Afkqn\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class FactorialBound {\\\\n\\\\tpublic static long[] isExact(long n) {\\\\n\\\\t\\\\t// your recursive solution here\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.7916666666666665,\\\"quality\\\":0,\\\"familyId\\\":\\\"neWhQdGFaHGu6PQgQ\\\",\\\"instructions\\\":\\\"Create a recursive function that tests if a number is the exact upper bound of the factorial of `n`. If so, return an array of **the exact factorial bound** and `n`, or otherwise, an empty array.\\\\n\\\\n### Examples\\\\n```\\\\nisExact(6) ➞ [6, 3]\\\\n\\\\nisExact(24) ➞ [24, 4]\\\\n\\\\nisExact(125) ➞ []\\\\n\\\\nisExact(720) ➞ [720, 6]\\\\n\\\\nisExact(1024) ➞ []\\\\n\\\\nisExact(40320) ➞ [40320, 8]\\\\n```\\\\n\\\\n### Notes\\\\n- You are expected to solve this challenge via recursion.\\\\n- You can check on the **Resources** tab for more details about recursion in Java.\\\\n- You might want to check the non-recursive version of this challenge in [here](https://edabit.c","thisId":"2336","channelHost":"edabit.com","id":"2336","opcode":"1","channelId":"2","timestamp":"1652648936541"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"725\\\"]}\"]","thisId":"2337","channelHost":"edabit.com","id":"2337","opcode":"1","channelId":"2","timestamp":"1652648936632"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6917","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"725\\\",\\\"result\\\":{\\\"_id\\\":\\\"hkKL3KuKpAcgcKdp3\\\",\\\"author\\\":\\\"Nathan Hohnbaum\\\",\\\"authorId\\\":\\\"Li55JB322ZcMFGna8\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int[][] depthFirstSearch(int[][] graph) {\\\\n\\\\t\\\\treturn new int[0][0];\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.8,\\\"quality\\\":0,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"Dcn6YKKekYnCpApvm\\\",\\\"instructions\\\":\\\"A depth-first search of a graph is one way of traversing the nodes of the graph along edges.  When DFS reaches a node for the first time, it marks the node as being reached and then checks its neighbors. Once all of a node's neighbors have been checked, the node is marked as done.  If the starting node is marked as done before all nodes of a graph are reached, an unmarked node is selected and the search continues. The order in which nodes are originally reached provides useful information about the graph.  Another useful source of information is the order in which nodes are marked as done.  This order is diff","thisId":"2338","channelHost":"edabit.com","id":"2338","opcode":"1","channelId":"2","timestamp":"1652648936638"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"726\\\"]}\"]","thisId":"2339","channelHost":"edabit.com","id":"2339","opcode":"1","channelId":"2","timestamp":"1652648936730"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3155","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"726\\\",\\\"result\\\":{\\\"_id\\\":\\\"mdimqTJv7pRS3sYZu\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int convert(int slope) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.8,\\\"familyId\\\":\\\"i4JfWu2ruSxfmf8YL\\\",\\\"instructions\\\":\\\"Given a slope of a line, calculate and return the value of the angle of line (relative to the y -axis). For example, a horizontal line would be 90 degrees.\\\\n\\\\n### Examples\\\\n```\\\\nconvert(1) ➞ 45\\\\n\\\\nconvert(0) ➞ 90\\\\n\\\\nconvert(-1) ➞ 135\\\\n```\\\\n\\\\n### Notes\\\\n- All values returned should be in degrees.\\\\n- All values returned should be rounded to the nearest whole number.\\\\n- The value to return must be strictly between 0 and 180.\\\\n- All inputs will be valid integer values.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(90, Challenge.convert(0));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  publ","thisId":"2340","channelHost":"edabit.com","id":"2340","opcode":"1","channelId":"2","timestamp":"1652648936734"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"727\\\"]}\"]","thisId":"2341","channelHost":"edabit.com","id":"2341","opcode":"1","channelId":"2","timestamp":"1652648936848"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5543","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"727\\\",\\\"result\\\":{\\\"_id\\\":\\\"KbLqgHtYt6TR2oCHQ\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Products {\\\\n  public static int maxProduct(int[] r) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n\\\\n  public static int minProduct(int[] r) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.8,\\\"familyId\\\":\\\"rLHDjYuajkDZ7p8BL\\\",\\\"instructions\\\":\\\"Write **two** functions:\\\\n\\\\n1. One that returns the **maximum product** of three numbers in an array.\\\\n2. One that returns the **minimum product** of three numbers in an array.\\\\n\\\\n### Examples\\\\n```\\\\nmaxProduct([-8, -9, 1, 2, 7]) ➞ 504\\\\n\\\\nmaxProduct([-8, 1, 2, 7, 9]) ➞ 126\\\\n\\\\nminProduct([1, -1, 1, 1]) ➞ -1\\\\n\\\\nminProduct([-5, -3, -1, 0, 4]) ➞ -15\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals; \\\\nimport org.junit.Test; \\\\n\\\\npublic class ProductsTest {\\\\n\\\\t@Test\\\\n\\\\tpublic void test01() { \\\\n\\\\t\\\\tassertEquals(-1, Products.maxProduct(","thisId":"2342","channelHost":"edabit.com","id":"2342","opcode":"1","channelId":"2","timestamp":"1652648936852"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"730\\\"]}\"]","thisId":"2343","channelHost":"edabit.com","id":"2343","opcode":"1","channelId":"2","timestamp":"1652648936947"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"12315","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"730\\\",\\\"result\\\":{\\\"_id\\\":\\\"qBueZpCx5YfQYj5j2\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class TwistedNumberSum {\\\\n  public static String sum(String a, String b) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.823529411764706,\\\"familyId\\\":\\\"WrLfXuaLLaDtKa4kx\\\",\\\"instructions\\\":\\\"Wait, a _very hard_ challenge for returning the sum of two numbers? Well in this one, the numbers can have 1000 digits!\\\\n\\\\nSo, what's the twist? You have to do the summation as if you're doing it manually on a piece of paper, thus, the conversion of the **numeric string** to **numeric literal** is basically **disallowed**.\\\\n\\\\nCreate a function that:\\\\n- Takes two numbers as strings.\\\\n- Calculates the sum of these two numbers.\\\\n- Returns the result as a string.\\\\n\\\\n### Examples\\\\n```\\\\nsum(\\\\\\\"12132000\\\\\\\", \\\\\\\"12171979\\\\\\\") ➞ \\\\\\\"24303979\\\\\\\"\\\\n\\\\nsum(\\\\\\\"4666\\\\\\\", \\\\\\\"544\\\\\\\") ➞ \\\\\\\"5210\\\\\\\"\\\\n\\\\nsum(\\\\\\\"1521512512512512515\\\\\\\", \\\\\\\"898989898989988998899898\\\\\\\") ➞","thisId":"2344","channelHost":"edabit.com","id":"2344","opcode":"1","channelId":"2","timestamp":"1652648936951"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"731\\\"]}\"]","thisId":"2345","channelHost":"edabit.com","id":"2345","opcode":"1","channelId":"2","timestamp":"1652648937061"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5777","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"731\\\",\\\"result\\\":{\\\"_id\\\":\\\"MvFCbkJeZ8Ydq3sPp\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean validColor(String color) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.8260869565217392,\\\"familyId\\\":\\\"6bvceAChk3gb63cot\\\",\\\"instructions\\\":\\\"Given an RGB(A) CSS color, determine whether its format is valid or not. Create a function that takes a string (e.g. `\\\\\\\"rgb(0, 0, 0)\\\\\\\"`) and return `true` if it's format is correct, otherwise return `false`.\\\\n\\\\n### Examples\\\\n```\\\\nvalidColor(\\\\\\\"rgb(0,0,0)\\\\\\\") ➞ true\\\\n\\\\nvalidColor(\\\\\\\"rgb(0,,0)\\\\\\\") ➞ false\\\\n\\\\nvalidColor(\\\\\\\"rgb(255,256,255)\\\\\\\") ➞ false\\\\n\\\\nvalidColor(\\\\\\\"rgba(0,0,0,0.123456789)\\\\\\\") ➞ true\\\\n```\\\\n\\\\n### Notes\\\\n- Alpha is between 0 and 1.\\\\n- There are a few edge cases (check out the **Tests** tab to know more).\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public vo","thisId":"2346","channelHost":"edabit.com","id":"2346","opcode":"1","channelId":"2","timestamp":"1652648937100"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"729\\\"]}\"]","thisId":"2347","channelHost":"edabit.com","id":"2347","opcode":"1","channelId":"2","timestamp":"1652648937201"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"27740","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"729\\\",\\\"result\\\":{\\\"_id\\\":\\\"inPpSzkuRCocLM3x2\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Product {\\\\n  public static int[] twoProduct(Integer[] arr, int n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.8181818181818183,\\\"familyId\\\":\\\"ETtN22Lvs2LqnYen7\\\",\\\"instructions\\\":\\\"Create a function that takes an array `arr` and a number `n` and returns an array of two integers from `arr` whose product is that of the number `n` of the following form:\\\\n\\\\n```\\\\n[value_at_lower_index, value_at_higher_index]\\\\n```\\\\n\\\\nMake sure that you return an array of two integers that exactly divides `n` (product of `n`) and that the indices coincide the above format. The sorting of the values therefore is based on the indices ascendingly.\\\\n\\\\n### Examples\\\\n```\\\\ntwoProduct([1, 2, 3, 9, 4, 5, 15, 3], 45) ➞ [9, 5]\\\\n// at index 5 which has the value 5 is  a full match \\\\n// to the value at index 3 which is 9\\\\n// the closest gap between indices that equates \\\\n","thisId":"2348","channelHost":"edabit.com","id":"2348","opcode":"1","channelId":"2","timestamp":"1652648937211"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"728\\\"]}\"]","thisId":"2349","channelHost":"edabit.com","id":"2349","opcode":"1","channelId":"2","timestamp":"1652648937321"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7876","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"728\\\",\\\"result\\\":{\\\"_id\\\":\\\"gDYfzq68mthtmX4Q5\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class HighestIndex {\\\\n  public static String alphabetIndex(String[] alphabet, String s) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.8,\\\"familyId\\\":\\\"CKnposQunJf3baqQY\\\",\\\"instructions\\\":\\\"Given a name, return the letter with the highest `index` in alphabetical order, with its corresponding index, in the form of a string. You are prohibited to use `max()` nor is reassigning a value to the alphabet array.\\\\n\\\\n### Examples\\\\n```\\\\nalphabet = [\\\\\\\"a\\\\\\\", \\\\\\\"b\\\\\\\", \\\\\\\"c\\\\\\\", \\\\\\\"d\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"f\\\\\\\", \\\\\\\"g\\\\\\\", \\\\\\\"h\\\\\\\", \\\\\\\"i\\\\\\\", \\\\\\\"j\\\\\\\", \\\\\\\"k\\\\\\\", \\\\\\\"l\\\\\\\", \\\\\\\"m\\\\\\\", \\\\\\\"n\\\\\\\", \\\\\\\"o\\\\\\\", \\\\\\\"p\\\\\\\", \\\\\\\"q\\\\\\\", \\\\\\\"r\\\\\\\", \\\\\\\"s\\\\\\\", \\\\\\\"t\\\\\\\", \\\\\\\"u\\\\\\\", \\\\\\\"v\\\\\\\", \\\\\\\"w\\\\\\\", \\\\\\\"x\\\\\\\", \\\\\\\"y\\\\\\\", \\\\\\\"z\\\\\\\"]\\\\n\\\\n\\\\nalphabetIndex(alphabet, \\\\\\\"Xavier\\\\\\\") ➞ \\\\\\\"24x\\\\\\\"\\\\n\\\\nalphabetIndex(alphabet, \\\\\\\"Tesha\\\\\\\") ➞ \\\\\\\"20t\\\\\\\"\\\\n\\\\nalphabetInd","thisId":"2350","channelHost":"edabit.com","id":"2350","opcode":"1","channelId":"2","timestamp":"1652648937334"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"732\\\"]}\"]","thisId":"2351","channelHost":"edabit.com","id":"2351","opcode":"1","channelId":"2","timestamp":"1652648937420"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4831","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"732\\\",\\\"result\\\":{\\\"_id\\\":\\\"qafJTrENQeMq6apgy\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class PlateNumber {\\\\n  public static String licensePlate(String code,int group) {\\\\n  \\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.84,\\\"editorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"familyId\\\":\\\"ynR3BHkizdkPhYMNw\\\",\\\"instructions\\\":\\\"Traveling through Europe one needs to pay attention to how the license plate in the given country is displayed. When crossing the border you need to park on the shoulder, unscrew the plate, re-group the characters according to the local regulations, attach it back and proceed with the journey.\\\\n\\\\nCreate a solution that can format the _dmv number_ into a plate number with correct grouping. The function input consists of string `s` and group length `n`. The output has to be upper case characters and digits. The new groups are made from right to left and connected by `-`. The original order of the _dmv number_ is preserved.\\\\n\\\\n### Examples\\\\n","thisId":"2352","channelHost":"edabit.com","id":"2352","opcode":"1","channelId":"2","timestamp":"1652648937424"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"733\\\"]}\"]","thisId":"2353","channelHost":"edabit.com","id":"2353","opcode":"1","channelId":"2","timestamp":"1652648937594"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4446","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"733\\\",\\\"result\\\":{\\\"_id\\\":\\\"EiemTcctcJXCn6eJa\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int minSwaps(String str) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.8461538461538463,\\\"familyId\\\":\\\"bamPbvbRDHun3NvxY\\\",\\\"instructions\\\":\\\"Write a function that returns the minimum number of **swaps** to create an alternating binary string. The input will have the same number of zeroes and ones.\\\\n\\\\n### Examples\\\\n```\\\\nminSwaps(\\\\\\\"101010\\\\\\\") ➞ 0\\\\n\\\\nminSwaps(\\\\\\\"10001110\\\\\\\") ➞ 1\\\\n// Swap the 0 at index 2 for the 1 at index 5.\\\\n\\\\nminSwaps(\\\\\\\"11110000\\\\\\\") ➞ 2\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(0, Challenge.minSwaps(\\\\\\\"10\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(0, Challenge.minSwaps(\\\\\\\"0101\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\","thisId":"2354","channelHost":"edabit.com","id":"2354","opcode":"1","channelId":"2","timestamp":"1652648937598"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"734\\\"]}\"]","thisId":"2355","channelHost":"edabit.com","id":"2355","opcode":"1","channelId":"2","timestamp":"1652648937636"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5501","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"734\\\",\\\"result\\\":{\\\"_id\\\":\\\"9qSNiDpyqipHFmdwp\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String caesarCipher(String s, int k) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.849056603773585,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"ZkWDggNMeZ9ZXvWZH\\\",\\\"instructions\\\":\\\"Julius Caesar protected his confidential information by encrypting it using a cipher. Caesar's cipher (check **Resources** tab for more info) shifts each letter by a number of letters. If the shift takes you past the end of the alphabet, just rotate back to the front of the alphabet. In the case of a rotation by `3`, _w, x, y_ and _z_ would map to _z, a, b_ and _c_.\\\\n\\\\nCreate a function that takes a string `s` (text to be encrypted) and an integer `k` (the rotation factor). It should return an encrypted string.\\\\n\\\\n### Examples\\\\n```\\\\ncaesarCipher(\\\\\\\"middle-Outz\\\\\\\", 2) ➞ \\\\\\\"okffng-Qwvb\\\\\\\"\\\\n\\\\n// m -> o\\\\n// i -> k\\\\n// d -> f\\\\","thisId":"2356","channelHost":"edabit.com","id":"2356","opcode":"1","channelId":"2","timestamp":"1652648937640"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"735\\\"]}\"]","thisId":"2357","channelHost":"edabit.com","id":"2357","opcode":"1","channelId":"2","timestamp":"1652648937739"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4423","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"735\\\",\\\"result\\\":{\\\"_id\\\":\\\"NPJYA7qfRsPxDiaNz\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class ExcelColumn {\\\\n  public static int titleToNumber(String s) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.857142857142857,\\\"familyId\\\":\\\"Zeekg5zcSrxfzaJEi\\\",\\\"instructions\\\":\\\"Given a column title as it appears in an Excel sheet return its corresponding column number.\\\\n\\\\nThe number is computed in the following way:\\\\n\\\\n```\\\\nA -> 1\\\\nB -> 2\\\\nC -> 3\\\\n...\\\\nZ -> 26\\\\nAA -> 27\\\\nAB -> 28\\\\n...\\\\n```\\\\n\\\\n### Examples\\\\n```\\\\ntitleToNumber(\\\\\\\"A\\\\\\\") ➞ 1\\\\n\\\\ntitleToNumber(\\\\\\\"R\\\\\\\") ➞ 18\\\\n\\\\ntitleToNumber(\\\\\\\"AB\\\\\\\") ➞ 28\\\\n```\\\\n\\\\n### Notes\\\\n- `1 <= len(s) <= 7`\\\\n- `s` consists only of uppercase English letters.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"/**\\\\n---------------------------------------\\\\nCodeGen 1.3 for JUnit 4.13.0\\\\nTest Case: ExcelColumn::titleToNumber\\\\nTimestamp: 10/30/2020 11:22:28 AM\\\\n--------------","thisId":"2358","channelHost":"edabit.com","id":"2358","opcode":"1","channelId":"2","timestamp":"1652648937743"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"736\\\"]}\"]","thisId":"2359","channelHost":"edabit.com","id":"2359","opcode":"1","channelId":"2","timestamp":"1652648937840"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4529","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"736\\\",\\\"result\\\":{\\\"_id\\\":\\\"wqvzvSroyNwifv35B\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class LeapYear {\\\\n  public static boolean isLeapYear(int y) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.8620689655172415,\\\"familyId\\\":\\\"JrLyALRhCDmq4G5ap\\\",\\\"instructions\\\":\\\"In a calendar year, it is exactly 365.25 days. But, eventually, this will lead to confusion because humans normally count by exact divisibility of 1 and not with decimal points. So, to avoid the latter, it was decided to add up all 0.25 days every four-year cycle and give that year 366 days (including February 29 as an intercalary day) and call it a **leap year**. The other three years in the four-year cycle would only contain 365 days and **wouldn't be leap years**.\\\\n\\\\nIn this challenge, though quite repetitive, we'll take it to a new level, where you are to determine if it's a leap year or not without the use of the `Date()` class, **switch** statements, **if blocks**, **if-else ","thisId":"2360","channelHost":"edabit.com","id":"2360","opcode":"1","channelId":"2","timestamp":"1652648937844"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"737\\\"]}\"]","thisId":"2361","channelHost":"edabit.com","id":"2361","opcode":"1","channelId":"2","timestamp":"1652648937963"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3776","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"737\\\",\\\"result\\\":{\\\"_id\\\":\\\"iWRbMto8cT7D3Rppx\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static long int bonacci(int N, int k) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.8666666666666667,\\\"familyId\\\":\\\"XuMcN7nTorSvn7B4Y\\\",\\\"instructions\\\":\\\"N-bonacci numbers are generalisations of the fibonacci sequence, where the next term is always the sum of the previous `N` terms. By convention, the first (N-1) terms are all 0 and the Nth term is 1.\\\\n\\\\nThe initial 10 terms of the first 5 N-bonacci sequences are therefore:\\\\n\\\\n- 1-bonacci = 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...\\\\n- 2-bonacci = 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, ...\\\\n- 3-bonacci = 0, 0, 1, 1, 2, 4, 7, 13, 24, 44, ...\\\\n- 4-bonaaci = 0, 0, 0, 1, 1, 2, 4, 8, 15, 29, ...\\\\n- 5-bonacci = 0, 0, 0, 0, 1, 1, 2, 4, 8, 16, ...\\\\n\\\\nWrite a function that returns the kth term of the N-bonacci sequence, for two integer arguments `N` and `k`.\\\\n\\\\n### Examples\\\\n```\\\\nbonacci(1, 10)","thisId":"2362","channelHost":"edabit.com","id":"2362","opcode":"1","channelId":"2","timestamp":"1652648937967"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"738\\\"]}\"]","thisId":"2363","channelHost":"edabit.com","id":"2363","opcode":"1","channelId":"2","timestamp":"1652648938071"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7960","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"738\\\",\\\"result\\\":{\\\"_id\\\":\\\"Ebw8nnRzgFcWgY5p8\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class ChessKnights {\\\\n  public static boolean cannotCapture(int[][] b) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.8666666666666667,\\\"familyId\\\":\\\"56hxdQkZWT6TQkiQq\\\",\\\"instructions\\\":\\\"Write a function that returns `true` if the knights are placed on a chessboard such that **no knight can capture another knight**. Here, `0`'s represent empty squares and `1`'s represent knights.\\\\n\\\\n### Examples\\\\n```\\\\ncannotCapture([\\\\n  [0, 0, 0, 1, 0, 0, 0, 0],\\\\n  [0, 0, 0, 0, 0, 0, 0, 0],\\\\n  [0, 1, 0, 0, 0, 1, 0, 0],\\\\n  [0, 0, 0, 0, 1, 0, 1, 0],\\\\n  [0, 1, 0, 0, 0, 1, 0, 0],\\\\n  [0, 0, 0, 0, 0, 0, 0, 0],\\\\n  [0, 1, 0, 0, 0, 0, 0, 1],\\\\n  [0, 0, 0, 0, 1, 0, 0, 0]\\\\n]) ➞ true\\\\n\\\\ncannotCapture([\\\\n  [1, 0, 1, 0, 1, 0, 1, 0],\\\\n  [0, 1, 0, 1, 0, 1, 0, 1],\\\\n  [0, 0, 0, 0, 1, 0, 1, 0],\\\\n  [0, 0, 1, 0, 0, 1, 0, 1],\\\\n  [1, 0, 0, 0, 1, 0, 1, 0],\\\\n  [0, 0, 0, 0, 0, 1","thisId":"2364","channelHost":"edabit.com","id":"2364","opcode":"1","channelId":"2","timestamp":"1652648938076"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"739\\\"]}\"]","thisId":"2365","channelHost":"edabit.com","id":"2365","opcode":"1","channelId":"2","timestamp":"1652648938172"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"12549","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"739\\\",\\\"result\\\":{\\\"_id\\\":\\\"C8EQJybQWzv6WsQdd\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class AnnualDay {\\\\n  public static int dayOfYear(String date) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.869565217391304,\\\"familyId\\\":\\\"3aH7ErXTzpLKwEdWB\\\",\\\"instructions\\\":\\\"Each year has 365 or 366 days. Given a string `date` representing a Gregorian calendar date formatted as `mm/dd/yyyy`, return the _day-number_ of the year.\\\\n\\\\n### Examples\\\\n```\\\\ndayOfYear(\\\\\\\"12/13/2020\\\\\\\") ➞ 348\\\\n\\\\ndayOfYear(\\\\\\\"12/17/2020\\\\\\\") ➞ 352\\\\n\\\\ndayOfYear(\\\\\\\"11/16/2020\\\\\\\") ➞ 321\\\\n\\\\ndayOfYear(\\\\\\\"01/09/2019\\\\\\\") ➞ 9\\\\n\\\\ndayOfYear(\\\\\\\"03/01/2004\\\\\\\") ➞ 61\\\\n\\\\ndayOfYear(\\\\\\\"12/31/2000\\\\\\\") ➞ 366\\\\n```\\\\n\\\\n### Notes\\\\nAll input strings in the tests are valid dates.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"/** \\\\n================================= \\\\nTestGen 2.3 for JUnit 4.13.0 \\\\t\\\\t\\\\nTest Case: AnnualDay::dayOfYear \\\\nTimestamp: 11/","thisId":"2366","channelHost":"edabit.com","id":"2366","opcode":"1","channelId":"2","timestamp":"1652648938176"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"740\\\"]}\"]","thisId":"2367","channelHost":"edabit.com","id":"2367","opcode":"1","channelId":"2","timestamp":"1652648938264"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3875","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"740\\\",\\\"result\\\":{\\\"_id\\\":\\\"xxig52timWewkiJxY\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String numToEng(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.872340425531915,\\\"familyId\\\":\\\"xpJ97WNcWChskWYed\\\",\\\"instructions\\\":\\\"Write a function that accepts a positive integer between `0` and `999` inclusive and returns a string representation of that integer written in English.\\\\n\\\\n### Examples\\\\n```\\\\nnumToEng(0) ➞ \\\\\\\"zero\\\\\\\"\\\\n\\\\nnumToEng(18) ➞ \\\\\\\"eighteen\\\\\\\"\\\\n\\\\nnumToEng(126) ➞ \\\\\\\"one hundred twenty six\\\\\\\"\\\\n\\\\nnumToEng(909) ➞ \\\\\\\"nine hundred nine\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- There are no hyphens used (e.g. \\\\\\\"thirty five\\\\\\\" not \\\\\\\"thirty-five\\\\\\\").\\\\n- The word \\\\\\\"and\\\\\\\" is not used (e.g. \\\\\\\"one hundred one\\\\\\\" not \\\\\\\"one hundred and one\\\\\\\").\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\","thisId":"2368","channelHost":"edabit.com","id":"2368","opcode":"1","channelId":"2","timestamp":"1652648938268"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"741\\\"]}\"]","thisId":"2369","channelHost":"edabit.com","id":"2369","opcode":"1","channelId":"2","timestamp":"1652648938375"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5003","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"741\\\",\\\"result\\\":{\\\"_id\\\":\\\"cwyHz8adjAg6dpxce\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class ListTransform {\\\\n\\\\tpublic static Object[] flatten(Object[] arr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.875,\\\"familyId\\\":\\\"adpyGoq7BBnACeYod\\\",\\\"instructions\\\":\\\"Write a **recursive** function that transforms a *multi-dimensional* array into a *single-dimensional* array.\\\\n\\\\n\\\\n### Examples\\\\n```\\\\nflatten([[17.2, 500, \\\\\\\"code\\\\\\\"], \\\\\\\"generate\\\\\\\"]) ➞ [17.2, 500, \\\\\\\"code\\\\\\\", \\\\\\\"generate\\\\\\\"]\\\\n\\\\nflatten([[[[[2, 14, \\\\\\\"core\\\\\\\"]]], 2, 3, 4]]) ➞ [2, 14, \\\\\\\"core\\\\\\\", 2, 3, 4]\\\\n\\\\nflatten([[\\\\\\\"dimension\\\\\\\"], \\\\\\\"vertical\\\\\\\", [[\\\\\\\"objective\\\\\\\"]]]) ➞ [\\\\\\\"dimension\\\\\\\", \\\\\\\"vertical\\\\\\\", \\\\\\\"objective\\\\\\\"]\\\\n\\\\nflatten([[[[[[\\\\\\\"construct\\\\\\\"]]]]]]) ➞ [\\\\\\\"construct\\\\\\\"]\\\\n```\\\\n\\\\n\\\\n### Notes\\\\n- Array contains at least one element.\\\\n- A **recursive** approach to solving this challenge is gretly advised and is more convenient than","thisId":"2370","channelHost":"edabit.com","id":"2370","opcode":"1","channelId":"2","timestamp":"1652648938380"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"742\\\"]}\"]","thisId":"2371","channelHost":"edabit.com","id":"2371","opcode":"1","channelId":"2","timestamp":"1652648938482"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3882","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"742\\\",\\\"result\\\":{\\\"_id\\\":\\\"f7KeKyNK9BRm9DuCX\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String reverseLegoYoda(String text) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.883720930232558,\\\"familyId\\\":\\\"jkTw4XtHZPrYQeLoA\\\",\\\"instructions\\\":\\\"Create a function that takes a string with at least one sentence in it and returns a string with the part(s) after the comma at the beginning of the sentence(s).\\\\n\\\\n### Examples\\\\n```\\\\nreverseLegoYoda(\\\\\\\"Hit you with my stick, I shall.\\\\\\\")\\\\n➞ \\\\\\\"I shall hit you with my stick.\\\\\\\"\\\\n\\\\nreverseLegoYoda(\\\\\\\"Rejected me, my crush has. Ketamine, I need.\\\\\\\")\\\\n➞ \\\\\\\"My crush has rejected me. I need ketamine.\\\\\\\"\\\\n\\\\nreverseLegoYoda(\\\\\\\"An alien, I am. Holding me captive in Area 51, the government is.\\\\\\\")\\\\n➞ \\\\\\\"I am an alien. The government is holding me captive in Area 51.\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Pay close attention to letter cases.\\\\n- Sentences will always end with ","thisId":"2372","channelHost":"edabit.com","id":"2372","opcode":"1","channelId":"2","timestamp":"1652648938486"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"747\\\"]}\"]","thisId":"2373","channelHost":"edabit.com","id":"2373","opcode":"1","channelId":"2","timestamp":"1652648938579"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4753","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"747\\\",\\\"result\\\":{\\\"_id\\\":\\\"KnpqDdkibon22Eexa\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String convertToRoman(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.891891891891892,\\\"familyId\\\":\\\"8tuF35tM4ZLCKhJ58\\\",\\\"instructions\\\":\\\"Create a function that takes an Arabic number and converts it into a Roman number.\\\\n\\\\n### Examples\\\\n```\\\\nconvertToRoman(2) ➞ \\\\\\\"II\\\\\\\"\\\\n\\\\nconvertToRoman(12) ➞ \\\\\\\"XII\\\\\\\"\\\\n\\\\nconvertToRoman(16) ➞ \\\\\\\"XVI\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- All roman numerals should be returned as uppercase.\\\\n- The largest number that can be represented in this notation is 3,999.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(\\\\\\\"II\\\\\\\", Challenge.convertToRoman(2));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(\\\\\\\"XII\\\\\\\", Challenge.convertToRoman(12));","thisId":"2374","channelHost":"edabit.com","id":"2374","opcode":"1","channelId":"2","timestamp":"1652648938583"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"743\\\"]}\"]","thisId":"2375","channelHost":"edabit.com","id":"2375","opcode":"1","channelId":"2","timestamp":"1652648938680"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3110","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"743\\\",\\\"result\\\":{\\\"_id\\\":\\\"zjpgz6YswDeLKfrAA\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int split(int num) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.8846153846153846,\\\"familyId\\\":\\\"2oGxJhQeGXrZJ89ew\\\",\\\"instructions\\\":\\\"About a month ago I stumbled upon an interesting problem — something called the 25 split. In the problem, you had to break up 25 into parts, and, from those parts that add to it, try to create the biggest product.\\\\n\\\\nFor example, `3 * 22 = 66` or `5 * 5 * 5 * 5 * 5 = 3125`. With this first part, return the value of the biggest product possible using natural number parts from a given number, _x_.\\\\n\\\\n### Examples\\\\n```\\\\nsplit(5) ➞ 6\\\\n// 3 times 2\\\\n\\\\nsplit(10) ➞ 36\\\\n// 3 * 3 * 4\\\\n\\\\nsplit(1) ➞ 1\\\\n```\\\\n\\\\n### Notes\\\\n3's are useful...\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n","thisId":"2376","channelHost":"edabit.com","id":"2376","opcode":"1","channelId":"2","timestamp":"1652648938684"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"744\\\"]}\"]","thisId":"2377","channelHost":"edabit.com","id":"2377","opcode":"1","channelId":"2","timestamp":"1652648938789"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6282","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"744\\\",\\\"result\\\":{\\\"_id\\\":\\\"BfLgSs2YAtjDYEyJM\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class PronicNumber {\\\\n\\\\tpublic static boolean isHeteromecic(int n) {\\\\n\\\\t\\\\t// your recursive solution here\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.8852459016393444,\\\"quality\\\":4,\\\"editorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"familyId\\\":\\\"nCtWyzLBsiGKFgE3c\\\",\\\"instructions\\\":\\\"A **pronic** number (or otherwise called as **heteromecic**) is a number which is a *product of two consecutive integers*, that is, a number of the form `n(n + 1)`.\\\\n\\\\nCreate a function that determines whether a number is pronic or not.\\\\n\\\\n\\\\n### Examples\\\\n```\\\\nisHeteromecic(0) ➞ true\\\\n// 0 * (0 + 1) = 0 * 1 = 0\\\\n \\\\nisHeteromecic(2) ➞ true\\\\n// 1 * (1 + 1) = 1 * 2 = 2\\\\n \\\\nisHeteromecic(7) ➞ false\\\\n\\\\nisHeteromecic(110) ➞ true\\\\n// 10 * (10 + 1) = 10 * 11 = 110\\\\n\\\\nisHeteromecic(136) ➞ false\\\\n\\\\nisHeteromecic(156) ➞ true\\\\n```\\\\n\\\\n\\\\n### Notes\\\\n- You are expected to solve this chal","thisId":"2378","channelHost":"edabit.com","id":"2378","opcode":"1","channelId":"2","timestamp":"1652648938795"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"746\\\"]}\"]","thisId":"2379","channelHost":"edabit.com","id":"2379","opcode":"1","channelId":"2","timestamp":"1652648938889"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5980","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"746\\\",\\\"result\\\":{\\\"_id\\\":\\\"FToTLuiB7bmFngkjr\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tstatic final String[] months = {\\\\\\\"\\\\\\\",\\\\\\\"A\\\\\\\",\\\\\\\"B\\\\\\\",\\\\\\\"C\\\\\\\",\\\\\\\"D\\\\\\\",\\\\\\\"E\\\\\\\",\\\\\\\"H\\\\\\\",\\\\\\\"L\\\\\\\",\\\\\\\"M\\\\\\\",\\\\\\\"P\\\\\\\",\\\\\\\"R\\\\\\\",\\\\\\\"S\\\\\\\",\\\\\\\"T\\\\\\\"};\\\\n\\\\n\\\\tpublic static String fiscalCode(String name, String surName, String gender, String dob) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.891891891891892,\\\"familyId\\\":\\\"Ds84ovYLFsJ4JH2Xf\\\",\\\"instructions\\\":\\\"Each person in Italy has an unique identifying ID code issued by the national tax office after the birth registration: the Fiscal Code (_Codice Fiscale_). Check the **Resources** tab for more info on this.\\\\n\\\\nGiven an object containing the personal data of a person (name, surname, gender and date of birth) return the 11 code characters as a string following these steps:\\\\n\\\\n- Generate 3 capital letters from the **surname**, if it has:\\\\n  - At least 3 consonants ","thisId":"2380","channelHost":"edabit.com","id":"2380","opcode":"1","channelId":"2","timestamp":"1652648938893"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"745\\\"]}\"]","thisId":"2381","channelHost":"edabit.com","id":"2381","opcode":"1","channelId":"2","timestamp":"1652648939006"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"32916","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"745\\\",\\\"result\\\":{\\\"_id\\\":\\\"Zsjvvf7Kir8wJr8vM\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class FibonacciWord {\\\\n\\\\tpublic static String generateWord(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.888888888888889,\\\"quality\\\":0,\\\"editorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"familyId\\\":\\\"kNgsiJBuwn2P28dH2\\\",\\\"instructions\\\":\\\"A **Fibonacci word** is a specific sequence of binary digits (or symbols from any two-letter alphabet). The Fibonacci word is formed via *repeated concatenation* in the same fashion that the Fibonacci numbers are formed via *repeated addition*.\\\\n\\\\nCreate a function that takes a number `n` as an argument and returns the first `n` elements of the Fibonacci word sequence.\\\\n\\\\n### Examples\\\\n```\\\\ngenerateWord(1) ➞ \\\\\\\"invalid\\\\\\\"\\\\n// if n < 2 then return \\\\\\\"invalid\\\\\\\".\\\\n\\\\ngenerateWord(3) ➞ \\\\\\\"b, a, ab\\\\\\\"\\\\n\\\\ngenerateWord(7) ➞ \\\\\\\"b, a, ab, aba, abaab, abaababa, abaababaabaab\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- You are expected ","thisId":"2382","channelHost":"edabit.com","id":"2382","opcode":"1","channelId":"2","timestamp":"1652648939011"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"748\\\"]}\"]","thisId":"2383","channelHost":"edabit.com","id":"2383","opcode":"1","channelId":"2","timestamp":"1652648939105"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4076","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"748\\\",\\\"result\\\":{\\\"_id\\\":\\\"y86z2FK3r3uLJrGvu\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class NumberSplit {\\\\n  public static int[] numSplit(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.896551724137931,\\\"familyId\\\":\\\"n7iXq8wm6aqJv2B65\\\",\\\"instructions\\\":\\\"Create a function that takes a number `num` and returns each place value in the number.\\\\n\\\\n### Examples\\\\n```\\\\nnumSplit(39) ➞ [30, 9]\\\\n\\\\nnumSplit(-434) ➞ [-400, -30, -4]\\\\n\\\\nnumSplit(100) ➞ [100, 0, 0]\\\\n\\\\nnumSplit(121317) ➞ [100000, 20000, 1000, 300, 10, 7]\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"/** \\\\n================================= \\\\nTestGen 2.3 for JUnit 4.13.0 \\\\t\\\\t\\\\nTest Case: NumberSplit::numSplit \\\\nTimestamp: 11/13/2020 9:41:23 PM \\\\n--------------------------------- \\\\n® DARKKO 2020 © \\\\n=================================\\\\n**/ \\\\n\\\\nimport static org.junit.Assert.assertArrayEquals; \\\\nimport org.junit.Test; ","thisId":"2384","channelHost":"edabit.com","id":"2384","opcode":"1","channelId":"2","timestamp":"1652648939110"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"749\\\"]}\"]","thisId":"2385","channelHost":"edabit.com","id":"2385","opcode":"1","channelId":"2","timestamp":"1652648939247"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5445","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"749\\\",\\\"result\\\":{\\\"_id\\\":\\\"powuANEDgMh8bxDry\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String longestNonrepeatingSubstring(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.8974358974358974,\\\"familyId\\\":\\\"ZeCYC3wPcY5oGNMeL\\\",\\\"instructions\\\":\\\"Write a function that returns the **longest non-repeating substring** for a string input.\\\\n\\\\n### Examples\\\\n```\\\\nlongestNonrepeatingSubstring(\\\\\\\"abcabcbb\\\\\\\") ➞ \\\\\\\"abc\\\\\\\"\\\\n\\\\nlongestNonrepeatingSubstring(\\\\\\\"aaaaaa\\\\\\\") ➞ \\\\\\\"a\\\\\\\"\\\\n\\\\nlongestNonrepeatingSubstring(\\\\\\\"abcde\\\\\\\") ➞ \\\\\\\"abcde\\\\\\\"\\\\n\\\\nlongestNonrepeatingSubstring(\\\\\\\"abcda\\\\\\\") ➞ \\\\\\\"abcd\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- If multiple substrings tie in length, return the one which occurs **first**.\\\\n- **Bonus**: Can you solve this problem in **linear time**?\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void","thisId":"2386","channelHost":"edabit.com","id":"2386","opcode":"1","channelId":"2","timestamp":"1652648939251"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"750\\\"]}\"]","thisId":"2387","channelHost":"edabit.com","id":"2387","opcode":"1","channelId":"2","timestamp":"1652648939344"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5010","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"750\\\",\\\"result\\\":{\\\"_id\\\":\\\"SrdMmMwXn5TAKTx9w\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean validateTheRelationships(String str) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.909090909090909,\\\"familyId\\\":\\\"X7BtG7syoZrtFTsoP\\\",\\\"instructions\\\":\\\"You will be given a string consisting of a list of integers and their relationships to their neighboring integers. For instance:\\\\n\\\\n```\\\\n\\\\\\\"-15<-10<=0=0<5\\\\\\\"\\\\n```\\\\n\\\\nTest to see that all the relationships between the integers in the string are true. If they are, return `true`. If they are not, return `false`.\\\\n\\\\n### Examples\\\\n```\\\\nvalidateTheRelationships(\\\\\\\"5>-1<0=0<-5>5=5\\\\\\\") ➞ false\\\\n// This is false because 0 is not less than -5.\\\\n\\\\nvalidateTheRelationships(\\\\\\\"-15<-10<=0=0<5\\\\\\\") ➞ true\\\\n\\\\nvalidateTheRelationships(\\\\\\\"0=807<1000<=1000>9990<-3605<=20\\\\\\\") ➞ false\\\\n// This is false because 0 is not equal to 807.\\\\n```\\\\n\\\\n### Notes\\\\n- This is a mo","thisId":"2388","channelHost":"edabit.com","id":"2388","opcode":"1","channelId":"2","timestamp":"1652648939350"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"751\\\"]}\"]","thisId":"2389","channelHost":"edabit.com","id":"2389","opcode":"1","channelId":"2","timestamp":"1652648939490"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5378","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"751\\\",\\\"result\\\":{\\\"_id\\\":\\\"BbaB4feCYJWPtFmcg\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String isbn13(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.914285714285714,\\\"familyId\\\":\\\"22ypoe8ihr3DD29p7\\\",\\\"instructions\\\":\\\"The International Standard Book Number (ISBN) is a unique identifying number given to each published book. ISBNs assigned after January 2007 are 13 digits long (ISBN-13), however books with 10-digit ISBNs are still in wide use.\\\\n\\\\nAn ISBN-10 is verified this way:\\\\n\\\\n```\\\\nisbn10 = \\\\\\\"0330301624\\\\\\\"\\\\n```\\\\n\\\\nLine up the digits with the numbers 10 to 1:\\\\n\\\\n| | | | | | | | | | |\\\\n---|---|---|---|---|---|---|---|---|---\\\\n0|3|3|0|3|0|1|6|2|4\\\\n10|9|8|7|6|5|4|3|2|1\\\\n\\\\nMultiply each digit with the number below it (the 10th digit in an ISBN can be an X. This last X simply means 10).\\\\n\\\\nSum up the products:\\\\n\\\\n```\\\\n0 + 27 + 24 + 0 + 18 + 0 + 4 + 18 + 4 + 4 = 99\\\\n```\\\\n\\\\nIf the ","thisId":"2390","channelHost":"edabit.com","id":"2390","opcode":"1","channelId":"2","timestamp":"1652648939495"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"752\\\"]}\"]","thisId":"2391","channelHost":"edabit.com","id":"2391","opcode":"1","channelId":"2","timestamp":"1652648939694"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4720","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"752\\\",\\\"result\\\":{\\\"_id\\\":\\\"TXFh4mGekgo6Jgyzz\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String mixedNumber(String frac) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.9166666666666665,\\\"familyId\\\":\\\"vnAj9FcZbm2NsbDB8\\\",\\\"instructions\\\":\\\"Create a function that takes a string representing a fraction, and return a string representing that input as a mixed number.\\\\n\\\\n- Mixed numbers are of the form `1 2/3` — note the space between the whole number portion and the fraction portion.\\\\n- Resulting fractions should be fully reduced (see example #2).\\\\n- If a result is a whole number with no fractional remainder, return only the whole number portion (see example #3).\\\\n- If a result is only fractional with no whole number, return only the fractional portion (see example #4).\\\\n- If a result is negative, the whole number should carry the negative sign. If the result would not have a whole number portion, the numerator of ","thisId":"2392","channelHost":"edabit.com","id":"2392","opcode":"1","channelId":"2","timestamp":"1652648939698"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"753\\\"]}\"]","thisId":"2393","channelHost":"edabit.com","id":"2393","opcode":"1","channelId":"2","timestamp":"1652648939845"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"47188","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"753\\\",\\\"result\\\":{\\\"_id\\\":\\\"XXF7YysFvEqv4FJ8n\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class NumberSearch {\\\\n  public static int singleNumber(int[] n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.923076923076923,\\\"familyId\\\":\\\"RKqyebgJkebHCN3iA\\\",\\\"instructions\\\":\\\"Write a function that accepts an array of numbers (where **each number** appears **three times** except for one which appears only **once**) and finds that unique number in the array and returns it.\\\\n\\\\n### Examples\\\\n```\\\\nsingleNumber([2, 2, 3, 2]) ➞ 3\\\\n\\\\nsingleNumber([0, 1, 0, 1, 0, 1, 99]) ➞ 99\\\\n\\\\nsingleNumber([-1, 2, -4, 20, -1, 2, -4, -4, 2, -1]) ➞ 20\\\\n```\\\\n\\\\n### Notes\\\\nThe function needs to be efficient in order to run under 12,000 milliseconds.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals;\\\\nimport org.junit.Test;\\\\n\\\\nimport java.util.ArrayList;\\\\nimport java.util.Arrays;\\\\nimport java.util.Collec","thisId":"2394","channelHost":"edabit.com","id":"2394","opcode":"1","channelId":"2","timestamp":"1652648939849"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"754\\\"]}\"]","thisId":"2395","channelHost":"edabit.com","id":"2395","opcode":"1","channelId":"2","timestamp":"1652648940046"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5593","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"754\\\",\\\"result\\\":{\\\"_id\\\":\\\"RdwGosFoQQT6Z82sm\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class CaseIndexInverter {\\\\n\\\\tpublic static String invert(String s) {\\\\n\\\\t\\\\t// your recursive solution here\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.9375,\\\"editorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"familyId\\\":\\\"u3YZXRAXMjictjSzW\\\",\\\"instructions\\\":\\\"Write a **recursive** function that takes a string input and returns the string in a *reversed* **case** and **order**.\\\\n\\\\n### Examples\\\\n```\\\\ninvert(\\\\\\\"dLROW YM sI HsEt\\\\\\\") ➞ \\\\\\\"TeSh iS my worlD\\\\\\\"\\\\n\\\\ninvert(\\\\\\\"ytInIUgAsnOc\\\\\\\") ➞ \\\\\\\"CoNSaGuiNiTY\\\\\\\"\\\\n\\\\ninvert(\\\\\\\"step on NO PETS\\\\\\\") ➞ \\\\\\\"step on NO PETS\\\\\\\"\\\\n\\\\ninvert(\\\\\\\"XeLPMoC YTiReTXeD\\\\\\\") ➞ \\\\\\\"dExtErIty cOmplEx\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- No empty strings and will neither contain special characters nor punctuation.\\\\n- You are expected to solve this challenge using a **recursive** approach.\\\\n- You can check on the **Resources** tab for ","thisId":"2396","channelHost":"edabit.com","id":"2396","opcode":"1","channelId":"2","timestamp":"1652648940087"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"755\\\"]}\"]","thisId":"2397","channelHost":"edabit.com","id":"2397","opcode":"1","channelId":"2","timestamp":"1652648940240"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5367","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"755\\\",\\\"result\\\":{\\\"_id\\\":\\\"p38KD5Far2g72fv3d\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static char[] finalResult(char[] letters) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.9393939393939394,\\\"familyId\\\":\\\"WAuW8SeF9LDaii6zQ\\\",\\\"instructions\\\":\\\"When two blocks of the same \\\\\\\"type\\\\\\\" are adjacent to each other, the entire contiguous block disappears (pops off). If this occurs, this can allow previously separated blocks to be in contact with each other, setting off a chain reaction. This will continue until each block is surrounded by a different block.\\\\n\\\\nHere's a demonstration:\\\\n```\\\\n['A', 'B', 'C', 'C', 'B', 'D', 'A']\\\\n// The two adjacent Cs pop off\\\\n\\\\n['A', 'B', 'B', 'D', 'A']\\\\n// Two adjacent Bs pop off\\\\n\\\\n['A', 'D', 'A']\\\\n// No more blocks can be popped off\\\\n```\\\\n\\\\nAnother demonstration:\\\\n```\\\\n['A', 'B', 'A', 'A', 'A', 'B', 'B']\\\\n// The three adjacent As will pop off\\\\n// (before the two ","thisId":"2398","channelHost":"edabit.com","id":"2398","opcode":"1","channelId":"2","timestamp":"1652648940246"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"756\\\"]}\"]","thisId":"2399","channelHost":"edabit.com","id":"2399","opcode":"1","channelId":"2","timestamp":"1652648940431"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6452","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"756\\\",\\\"result\\\":{\\\"_id\\\":\\\"jLbdG6YvkYCizS662\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean validName(String str) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.9411764705882355,\\\"familyId\\\":\\\"RtAkDWWtweqB4tj6i\\\",\\\"instructions\\\":\\\"For this exercise, keep in mind the following definitions:\\\\n\\\\n1. A **term** is either an **initials** or **word**.\\\\n2. **initials** = 1 character\\\\n3. **words** = 2+ characters (no dots allowed)\\\\n\\\\nA **valid name** is a name written in one of the following ways:\\\\n\\\\n- H. Wells\\\\n- H. G. Wells\\\\n- Herbert G. Wells\\\\n- Herbert George Wells\\\\n\\\\nThe following names are **invalid**:\\\\n\\\\n- Herbert  or Wells (single names not allowed)\\\\n- H Wells or H. G Wells (initials must end with dot)\\\\n- h. Wells or H. wells or h. g. Wells (incorrect capitalization)\\\\n- H. George Wells (middle name expanded, while first still left as initial)\\\\n- H. G. W. (last name is not a word)\\\\n- Herb. G. We","thisId":"2400","channelHost":"edabit.com","id":"2400","opcode":"1","channelId":"2","timestamp":"1652648940438"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"757\\\"]}\"]","thisId":"2401","channelHost":"edabit.com","id":"2401","opcode":"1","channelId":"2","timestamp":"1652648940607"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6869","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"757\\\",\\\"result\\\":{\\\"_id\\\":\\\"kJpXCjfuWjpLGdc5g\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String correctTitle(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.943396226415094,\\\"familyId\\\":\\\"AquXE888ENJLKzmg4\\\",\\\"instructions\\\":\\\"Write a function that takes a string and returns a string with the correct case for character titles in the Game of Thrones series.\\\\n- The words `and`, `the`, `of` and `in` should be lowercase.\\\\n- All other words should have the *first* character as uppercase and the rest lowercase.\\\\n\\\\n### Examples\\\\n```\\\\ncorrectTitle(\\\\\\\"jOn SnoW, kINg IN thE noRth.\\\\\\\")\\\\n➞ \\\\\\\"Jon Snow, King in the North.\\\\\\\"\\\\n\\\\ncorrectTitle(\\\\\\\"sansa stark, lady of winterfell.\\\\\\\")\\\\n➞ \\\\\\\"Sansa Stark, Lady of Winterfell.\\\\\\\"\\\\n\\\\ncorrectTitle(\\\\\\\"TYRION LANNISTER, HAND OF THE QUEEN.\\\\\\\")\\\\n➞ \\\\\\\"Tyrion Lannister, Hand of the Queen.\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Punctuation and spaces must remain in their ","thisId":"2402","channelHost":"edabit.com","id":"2402","opcode":"1","channelId":"2","timestamp":"1652648940612"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"758\\\"]}\"]","thisId":"2403","channelHost":"edabit.com","id":"2403","opcode":"1","channelId":"2","timestamp":"1652648940734"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7993","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"758\\\",\\\"result\\\":{\\\"_id\\\":\\\"DbqdoQDMv88NHSgi4\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class LetterGroups {\\\\n\\\\tpublic static String[] collect(String s, int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.9523809523809526,\\\"editorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"familyId\\\":\\\"D44GgRRjLqMtg2E9B\\\",\\\"instructions\\\":\\\"Write a function that returns an array of strings populated from the slices of **n-length** characters of the given word (a slice after another while **n-length** applies onto the word).\\\\n\\\\n\\\\n### Examples\\\\n```\\\\ncollect(\\\\\\\"intercontinentalisationalism\\\\\\\", 6) \\\\n➞ [\\\\\\\"ationa\\\\\\\", \\\\\\\"interc\\\\\\\", \\\\\\\"ntalis\\\\\\\", \\\\\\\"ontine\\\\\\\"]\\\\n\\\\ncollect(\\\\\\\"strengths\\\\\\\", 3) \\\\n➞ [\\\\\\\"eng\\\\\\\", \\\\\\\"str\\\\\\\", \\\\\\\"ths\\\\\\\"]\\\\n\\\\ncollect(\\\\\\\"pneumonoultramicroscopicsilicovolcanoconiosis\\\\\\\", 15) \\\\n➞ [\\\\\\\"croscopicsilico\\\\\\\", \\\\\\\"pneumonoultrami\\\\\\\", \\\\\\\"volcanoconiosis\\\\\\\"]\\\\n```\\\\n\\\\n\\\\n### Notes\\\\n- Ensure that the resulting array is lexicographi","thisId":"2404","channelHost":"edabit.com","id":"2404","opcode":"1","channelId":"2","timestamp":"1652648940740"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"760\\\"]}\"]","thisId":"2405","channelHost":"edabit.com","id":"2405","opcode":"1","channelId":"2","timestamp":"1652648940875"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"9031","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"760\\\",\\\"result\\\":{\\\"_id\\\":\\\"rqum6rzyZQrC43Ldv\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"class Shiritori {\\\\n\\\\t\\\\n}\\\",\\\"difficulty\\\":2.955223880597015,\\\"familyId\\\":\\\"HRraG5TEEebBMfEzr\\\",\\\"instructions\\\":\\\"This challenge is an English twist on the Japanese word game **Shiritori**. The basic premise is to follow two rules:\\\\n\\\\n1. **First character** of **next word** must match **last character** of **previous word**.\\\\n2. The word must not have already been said.\\\\n\\\\nBelow is an example of a **Shiritori** game:\\\\n```\\\\n[\\\\\\\"word\\\\\\\", \\\\\\\"dowry\\\\\\\", \\\\\\\"yodel\\\\\\\", \\\\\\\"leader\\\\\\\", \\\\\\\"righteous\\\\\\\", \\\\\\\"serpent\\\\\\\"]  // valid!\\\\n\\\\n[\\\\\\\"motive\\\\\\\", \\\\\\\"beach\\\\\\\"]  // invalid! - beach should start with \\\\\\\"e\\\\\\\"\\\\n\\\\n[\\\\\\\"hive\\\\\\\", \\\\\\\"eh\\\\\\\", \\\\\\\"hive\\\\\\\"]  // invalid! - \\\\\\\"hive\\\\\\\" has already been said\\\\n```\\\\n\\\\nWrite a **Shiritori class** that has **two instance properties**:\\\\n\\\\n- **words**: an array of words already said.\\\\n- **game_over*","thisId":"2406","channelHost":"edabit.com","id":"2406","opcode":"1","channelId":"2","timestamp":"1652648940880"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"762\\\"]}\"]","thisId":"2407","channelHost":"edabit.com","id":"2407","opcode":"1","channelId":"2","timestamp":"1652648941040"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6332","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"762\\\",\\\"result\\\":{\\\"_id\\\":\\\"Sk3DXY6ZdwAKj6r8d\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static long repeatedString(String s, long n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.9743589743589745,\\\"editorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"familyId\\\":\\\"p28KztmfeDvSBkrJ5\\\",\\\"instructions\\\":\\\"Edward has a string `s` of lowercase English letters that he repeated infinitely many times. Given an integer `n`, find and print the number of letter \\\\\\\"a\\\\\\\"s in the first `n` letters of Edward's infinite string. For example, if the string `s=abcac` and `n=10`, the substring we consider is `abcacabcac`, the first `10` characters of his infinite string. There are `4` occurrences of `a` in the substring.\\\\n\\\\nComplete the `repeatedString()` method. It should return an integer representing the number of occurrences of `a` in the prefix of length `n` in the infinitely repeating string.\\\\n\\\\n### Examples\\\\n```\\\\nrepeatedString(\\\\\\\"aba\\\\\\","thisId":"2408","channelHost":"edabit.com","id":"2408","opcode":"1","channelId":"2","timestamp":"1652648941045"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"761\\\"]}\"]","thisId":"2409","channelHost":"edabit.com","id":"2409","opcode":"1","channelId":"2","timestamp":"1652648941175"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4363","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"761\\\",\\\"result\\\":{\\\"_id\\\":\\\"8b6hgBwoRAzqbAbYA\\\",\\\"author\\\":\\\"Mateusz Mędrowski\\\",\\\"authorId\\\":\\\"hPx9H3YM8j2k94DNW\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean productOfPrimes(int num) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":2.9558823529411766,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"Txe46ngdPyFNBu4aF\\\",\\\"instructions\\\":\\\"Write a function that returns `true` if the given number `num` is a product of any two prime numbers.\\\\n\\\\n### Examples\\\\n```\\\\nproductOfPrimes(2059) ➞ true\\\\n// 29*71=2059\\\\n\\\\nproductOfPrimes(10) ➞ true\\\\n// 2*5=10\\\\n\\\\nproductOfPrimes(25) ➞ true\\\\n// 5*5=25\\\\n\\\\nproductOfPrimes(999) ➞ false\\\\n// There are no prime numbers.\\\\n```\\\\n\\\\n### Notes\\\\n- `num` is always greater than 0.\\\\n-  `0` and `1` aren't prime numbers.\\\",\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(true, Chall","thisId":"2410","channelHost":"edabit.com","id":"2410","opcode":"1","channelId":"2","timestamp":"1652648941179"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"763\\\"]}\"]","thisId":"2411","channelHost":"edabit.com","id":"2411","opcode":"1","channelId":"2","timestamp":"1652648941272"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5563","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"763\\\",\\\"result\\\":{\\\"_id\\\":\\\"Mo8ErS2pcwNakKsAF\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class DisariumNumber {\\\\n\\\\tpublic static boolean isDisarium(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.982142857142857,\\\"quality\\\":0,\\\"editorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"familyId\\\":\\\"S4TyjyDfb7jkfiZib\\\",\\\"instructions\\\":\\\"A number is said to be Disarium if the **sum** of its *digits raised to their respective positions* is the number itself. Create a function that determines whether a number is a Disarium or not.\\\\n\\\\n### Examples\\\\n```\\\\nisDisarium(75) ➞ false\\\\n// 7^1 + 5^2 = 7 + 25 = 32\\\\n\\\\nisDisarium(135) ➞ true\\\\n// 1^1 + 3^2 + 5^3 = 1 + 9 + 125 = 135\\\\n\\\\nisDisarium(518) ➞ false\\\\n\\\\nisDisarium(518) ➞ true\\\\n\\\\nisDisarium(544) ➞ false\\\\n\\\\nisDisarium(8) ➞ true\\\\n\\\\nisDisarium(466) ➞ false\\\\n```\\\\n\\\\n### Notes\\\\n- Position of the digit is not likely its index.\\\\n- You are expected to solve this challenge via **recursion**.\\\\n- You can check","thisId":"2412","channelHost":"edabit.com","id":"2412","opcode":"1","channelId":"2","timestamp":"1652648941276"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"759\\\"]}\"]","thisId":"2413","channelHost":"edabit.com","id":"2413","opcode":"1","channelId":"2","timestamp":"1652648941399"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6086","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"759\\\",\\\"result\\\":{\\\"_id\\\":\\\"YPqsC4RCQ99REvQAn\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String[] getHashTags(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":2.953488372093023,\\\"familyId\\\":\\\"SwkH3bCiNhgCJgaLM\\\",\\\"instructions\\\":\\\"Write a function that retrieves the **top 3** longest words of a newspaper headline and transforms them into hashtags. If multiple words tie for the same length, retrieve the word that occurs first.\\\\n\\\\n### Examples\\\\n```\\\\ngetHashTags(\\\\\\\"How the Avocado Became the Fruit of the Global Trade\\\\\\\")\\\\n➞ [\\\\\\\"#avocado\\\\\\\", \\\\\\\"#became\\\\\\\", \\\\\\\"#global\\\\\\\"]\\\\n\\\\ngetHashTags(\\\\\\\"Why You Will Probably Pay More for Your Christmas Tree This Year\\\\\\\")\\\\n➞ [\\\\\\\"#christmas\\\\\\\", \\\\\\\"#probably\\\\\\\", \\\\\\\"#will\\\\\\\"]\\\\n\\\\ngetHashTags(\\\\\\\"Hey Parents, Surprise, Fruit Juice Is Not Fruit\\\\\\\")\\\\n➞ [\\\\\\\"#surprise\\\\\\\", \\\\\\\"#parents\\\\\\\", \\\\\\\"#fruit\\\\\\\"]\\\\n\\\\ngetHashTags(\\\\\\\"Visualizing Science\\\\\\\"","thisId":"2414","channelHost":"edabit.com","id":"2414","opcode":"1","channelId":"2","timestamp":"1652648941405"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"764\\\"]}\"]","thisId":"2415","channelHost":"edabit.com","id":"2415","opcode":"1","channelId":"2","timestamp":"1652648941499"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8158","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"764\\\",\\\"result\\\":{\\\"_id\\\":\\\"sLasdN8jqehbeqHtT\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String encrypt(String plncode, String pad) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n\\\\n\\\\tpublic static String decrypt(String cypcode, String pad) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":3,\\\"familyId\\\":\\\"EfXFahrF5fCkdN8Yi\\\",\\\"instructions\\\":\\\"_“To the future or to the past, to a time when thought is free, when men are different from one another and do not live alone — to a time when truth exists and what is done cannot be undone: From the age of uniformity, from the age of solitude, from the age of Big Brother, from the age of doublethink — greetings!”_ \\u2060— Winston Smith's secret writings in George Orwell's novel \\\\\\\"1984\\\\\\\"\\\\n\\\\n#### ONE TIME PAD OPERATIONS MANUAL (CLASSIFIED \\u2060— DESTROY AFTER READING!)\\\\n\\\\nThis first part of the ONE TIME PAD OPERATIONS MANUAL has been designed to train party members within the purview of the Dzerzki","thisId":"2416","channelHost":"edabit.com","id":"2416","opcode":"1","channelId":"2","timestamp":"1652648941509"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"765\\\"]}\"]","thisId":"2417","channelHost":"edabit.com","id":"2417","opcode":"1","channelId":"2","timestamp":"1652648941602"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5628","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"765\\\",\\\"result\\\":{\\\"_id\\\":\\\"eBkknBKXvMm8bDo8M\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int kaprekar(int num) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":3.0597014925373136,\\\"familyId\\\":\\\"Qbrc3JBsa8AHC5P9N\\\",\\\"instructions\\\":\\\"6174 is known as one of Kaprekar's constants, after the Indian mathematician D. R. Kaprekar. Number 6174  is notable for the following rule:\\\\n\\\\n- Take any four-digit number, using at least two different digits (leading zeros are allowed).\\\\n- Arrange the digits in descending and then in ascending order to get two four-digit numbers, adding leading zeros if necessary.\\\\n-  Subtract the smaller number from the bigger number.\\\\n-  Go back to step 2 and repeat.\\\\n\\\\nThe above process, known as Kaprekar's routine, will always reach its fixed point, 6174, in at most 7 iterations. Once 6174 is reached, the process will continue yielding 7641 – 1467 = 6174. For example, choose 3524:\\\\n\\\\n```\\\\n5432","thisId":"2418","channelHost":"edabit.com","id":"2418","opcode":"1","channelId":"2","timestamp":"1652648941612"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"766\\\"]}\"]","thisId":"2419","channelHost":"edabit.com","id":"2419","opcode":"1","channelId":"2","timestamp":"1652648941689"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"11470","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"766\\\",\\\"result\\\":{\\\"_id\\\":\\\"k3pg4uMgKcDA95sqb\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class CoffeeShop {\\\\n\\\\t\\\\n}\\\\n\\\\nclass MenuItem {\\\\n\\\\tprivate String item;\\\\n\\\\tprivate String type;\\\\n\\\\tprivate double price;\\\\n\\\\t\\\\n\\\\tpublic MenuItem(String item, String type, double price) {\\\\n\\\\t\\\\tthis.item = item;\\\\n\\\\t\\\\tthis.type = type;\\\\n\\\\t\\\\tthis.price = price;\\\\n\\\\t}\\\\n\\\\n\\\\tpublic String getItem() { return item; }\\\\n\\\\tpublic String getType() { return type; }\\\\n\\\\tpublic double getPrice() { return price; }\\\\n}\\\",\\\"difficulty\\\":3.051282051282051,\\\"familyId\\\":\\\"98yLJQdHBTnwFLnbF\\\",\\\"instructions\\\":\\\"Write a **class** called **CoffeeShop**, which has **three instance variables**:\\\\n\\\\n1. **name** : a string (basically, of the shop)\\\\n2. **menu** : an array of items (of type MenuItem), with each item containing the **item** (name of the item), **type** (whether a _food_ or a _drink_) and **price**.\\\\n3. **orders** : an empty array\\\\n\\\\na","thisId":"2420","channelHost":"edabit.com","id":"2420","opcode":"1","channelId":"2","timestamp":"1652648941708"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"767\\\"]}\"]","thisId":"2421","channelHost":"edabit.com","id":"2421","opcode":"1","channelId":"2","timestamp":"1652648941815"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4290","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"767\\\",\\\"result\\\":{\\\"_id\\\":\\\"mDbeein6NJgDjYy3c\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int whoGoesFree(int n, int k) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":3.135135135135135,\\\"familyId\\\":\\\"BQRHjFzyyy4aSrGr3\\\",\\\"instructions\\\":\\\"A group of `n` prisoners stand in a circle awaiting execution. Starting from an arbitrary position(0), the executioner kills every `k`th person until one person remains standing, who is then granted freedom (see examples).\\\\n\\\\nCreate a function that takes 2 arguments — the number of people to be executed `n`, and the step size `k`, and returns the original position (index) of the person who survives.\\\\n\\\\n### Examples\\\\n```\\\\nwhoGoesFree(9, 2) ➞ 2\\\\n\\\\n// Prisoners = [0, 1, 2, 3, 4, 5, 6, 7, 8]\\\\n// Executed people replaced by - (a dash) for illustration purposes.\\\\n// 1st round of execution = [0, -, 2, -, 4, -, 6, -, 8]  -> [0, 2, 4, 6, 8]\\\\n// 2nd round = [-, 2, -, 6, -] -> [2, 6]  ","thisId":"2422","channelHost":"edabit.com","id":"2422","opcode":"1","channelId":"2","timestamp":"1652648941819"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"768\\\"]}\"]","thisId":"2423","channelHost":"edabit.com","id":"2423","opcode":"1","channelId":"2","timestamp":"1652648941916"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5678","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"768\\\",\\\"result\\\":{\\\"_id\\\":\\\"ctWQp4tZCf7J4zmo2\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class ConsecutiveNumbers {\\\\n\\\\tpublic static boolean ascending(String str) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":3.1621621621621623,\\\"editorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"familyId\\\":\\\"z72FnE8n6Ez3DDc6S\\\",\\\"instructions\\\":\\\"Write a function that will return `true` if a given string (divided and grouped into a size) will contain a set of **consecutive ascending** numbers, otherwise, return `false`.\\\\n\\\\n\\\\n### Examples\\\\n```\\\\nascending(\\\\\\\"123124125\\\\\\\") ➞ true\\\\n// Contains a set of consecutive ascending numbers\\\\n// if grouped into 3's : 123, 124, 125\\\\n\\\\nascending(\\\\\\\"101112131415\\\\\\\") ➞ true\\\\n// Contains a set of consecutive ascending numbers\\\\n// if grouped into 2's : 10, 11, 12, 13, 14, 15\\\\n\\\\nascending(\\\\\\\"32332432536\\\\\\\") ➞ false\\\\n// Regardless of the grouping size, the numbers can't be consecutive.\\\\n\\\\nascending(\\\\\\\"326325324323\\\\\\\") ➞ fals","thisId":"2424","channelHost":"edabit.com","id":"2424","opcode":"1","channelId":"2","timestamp":"1652648941921"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"769\\\"]}\"]","thisId":"2425","channelHost":"edabit.com","id":"2425","opcode":"1","channelId":"2","timestamp":"1652648942013"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6010","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"769\\\",\\\"result\\\":{\\\"_id\\\":\\\"YzWb77MowQpixfpWh\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean ascending(String str) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":3.1923076923076925,\\\"familyId\\\":\\\"oxA7DabCs4qxeTNXK\\\",\\\"instructions\\\":\\\"Write a function that returns `true` if a string consists of **ascending or ascending AND consecutive** numbers.\\\\n\\\\n### Examples\\\\n```\\\\nascending(\\\\\\\"232425\\\\\\\") ➞ true\\\\n// Consecutive numbers 23, 24, 25\\\\n\\\\nascending(\\\\\\\"2324256\\\\\\\") ➞ false\\\\n// No matter how this string is divided, the numbers are not consecutive.\\\\n\\\\nascending(\\\\\\\"444445\\\\\\\") ➞ true\\\\n// Consecutive numbers 444 and 445.\\\\n```\\\\n\\\\n### Notes\\\\nA **number** can consist of any number of digits, so long as the numbers are adjacent to each other, and the string has at least two of them.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n","thisId":"2426","channelHost":"edabit.com","id":"2426","opcode":"1","channelId":"2","timestamp":"1652648942016"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"770\\\"]}\"]","thisId":"2427","channelHost":"edabit.com","id":"2427","opcode":"1","channelId":"2","timestamp":"1652648942110"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5365","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"770\\\",\\\"result\\\":{\\\"_id\\\":\\\"2MR6qaWfxR4pYpGGo\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class FibonacciString {\\\\n\\\\tpublic static String generate(int n, String[] s) {\\\\n  \\\\t// recursive code here\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":3.2083333333333335,\\\"quality\\\":0,\\\"familyId\\\":\\\"W6uhfQfGmxKTBL32H\\\",\\\"instructions\\\":\\\"A **Fibonacci string** is a precedence of the *Fibonacci series*. It works with any two characters of the English alphabet (as opposed to the numbers `0` and `1` in the Fibonacci series) as its initial items and concatenates them together as it progresses similarly to that of the Fibonacci series.\\\\n\\\\n\\\\n### Examples\\\\n```\\\\ngenerate(3, [\\\\\\\"j\\\\\\\", \\\\\\\"h\\\\\\\"]) ➞ \\\\\\\"j, h, hj\\\\\\\"\\\\n\\\\ngenerate(5, [\\\\\\\"e\\\\\\\", \\\\\\\"a\\\\\\\"]) ➞ \\\\\\\"e, a, ae, aea, aeaae\\\\\\\"\\\\n\\\\ngenerate(6, [\\\\\\\"n\\\\\\\", \\\\\\\"k\\\\\\\"]) ➞ \\\\\\\"n, k, kn, knk, knkkn, knkknknk\\\\\\\"\\\\n\\\\ngenerate(1, [\\\\\\\"f\\\\\\\", \\\\\\\"g\\\\\\\"]) ➞ \\\\\\\"invalid\\\\\\\"\\\\n// return \\\\\\\"invalid\\\\\\\" if n is less th","thisId":"2428","channelHost":"edabit.com","id":"2428","opcode":"1","channelId":"2","timestamp":"1652648942123"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"771\\\"]}\"]","thisId":"2429","channelHost":"edabit.com","id":"2429","opcode":"1","channelId":"2","timestamp":"1652648942261"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6123","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"771\\\",\\\"result\\\":{\\\"_id\\\":\\\"W7juRdtzze5ZbrfbJ\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String stripUrlParams(String url, String[] paramsToStrip) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":3.235294117647059,\\\"familyId\\\":\\\"TLkd5ebQ8WnXQzzFb\\\",\\\"instructions\\\":\\\"Create a function that takes a URL (string), removes duplicate query parameters and parameters specified within the 2nd argument (which will be an _optional_ array).\\\\n\\\\n### Examples\\\\n```\\\\nstripUrlParams(\\\\\\\"https://edabit.com?a=1&b=2&a=2\\\\\\\") ➞ \\\\\\\"https://edabit.com?a=2&b=2\\\\\\\"\\\\n\\\\nstripUrlParams(\\\\\\\"https://edabit.com?a=1&b=2&a=2\\\\\\\", [\\\\\\\"b\\\\\\\"]) ➞ \\\\\\\"https://edabit.com?a=2\\\\\\\"\\\\n\\\\nstripUrlParams(\\\\\\\"https://edabit.com\\\\\\\", [\\\\\\\"b\\\\\\\"]) ➞ \\\\\\\"https://edabit.com\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- The 2nd argument `paramsToStrip` is optional.\\\\n- `paramsToStrip` can contain multiple params.\\\\n- If there are duplicate query parameters with differen","thisId":"2430","channelHost":"edabit.com","id":"2430","opcode":"1","channelId":"2","timestamp":"1652648942266"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"772\\\"]}\"]","thisId":"2431","channelHost":"edabit.com","id":"2431","opcode":"1","channelId":"2","timestamp":"1652648942367"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7789","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"772\\\",\\\"result\\\":{\\\"_id\\\":\\\"jfCsugyp9BSLYEtwb\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String encryption(String s) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":3.2429906542056073,\\\"editorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"familyId\\\":\\\"7w9HjdPf3fiYCLTdW\\\",\\\"instructions\\\":\\\"An English text needs to be encrypted using Edabit’s encryption scheme. First, the spaces are removed from the text. Let _L_ be the length of this text. Then, characters are written into a grid, whose rows and columns have the following constraints:\\\\n\\\\nFor example, the sentence \\\\\\\"_if man was meant to stay on the ground god would have given us roots_\\\\\\\", after removing spaces, is _54_ characters long.  The square root of 54 is between 7 and 8, so it is written in the form of a grid with 7 rows and 8 columns.\\\\n\\\\n```\\\\nifmanwas\\\\nmeanttos\\\\ntayonthe\\\\ngroundgo\\\\ndwouldha\\\\nvegivenu\\\\nsroots\\\\n```\\\\n\\\\n- Ensure that _rows x column >= L_\\\\n- ","thisId":"2432","channelHost":"edabit.com","id":"2432","opcode":"1","channelId":"2","timestamp":"1652648942372"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"774\\\"]}\"]","thisId":"2433","channelHost":"edabit.com","id":"2433","opcode":"1","channelId":"2","timestamp":"1652648942491"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5384","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"774\\\",\\\"result\\\":{\\\"_id\\\":\\\"Mgrj26S3LwM8CLAdL\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static String isValid(String str) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":3.234042553191489,\\\"editorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"familyId\\\":\\\"W4wK2qCR7tD8NdXDF\\\",\\\"instructions\\\":\\\"Sherlock considers a string to be valid if all characters of the string appear the same number of times. It is also valid if he can remove just 1 character at 1 index in the string, and the remaining characters will occur the same number of times. Given a string `str`, determine if it is valid. If so, return `\\\\\\\"YES\\\\\\\"`, otherwise return `\\\\\\\"NO\\\\\\\"`.\\\\n\\\\nFor example, If `str = \\\\\\\"abc\\\\\\\"`, the string is valid because the frequencies of characters are all the same.  If `str = \\\\\\\"abcc\\\\\\\"`, the string is also valid, because we can remove 1 \\\\\\\"c\\\\\\\" and have one of each character remaining in the string.  However, if `str = \\\\\\\"abccc\\\\\\\"`, the","thisId":"2434","channelHost":"edabit.com","id":"2434","opcode":"1","channelId":"2","timestamp":"1652648942496"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"773\\\"]}\"]","thisId":"2435","channelHost":"edabit.com","id":"2435","opcode":"1","channelId":"2","timestamp":"1652648942613"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"9678","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"773\\\",\\\"result\\\":{\\\"_id\\\":\\\"3FAMXz4wAYGqpCtDR\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String[] bucketize(String phrase, int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":3.2470588235294118,\\\"familyId\\\":\\\"Mku3TSW2u6dufvP8A\\\",\\\"instructions\\\":\\\"Write a function that divides a phrase into word buckets, with each bucket containing `n` or fewer characters. Only include full words inside each bucket.\\\\n\\\\n### Examples\\\\n```\\\\nbucketize(\\\\\\\"she sells sea shells by the sea\\\\\\\", 10)\\\\n➞ [\\\\\\\"she sells\\\\\\\", \\\\\\\"sea shells\\\\\\\", \\\\\\\"by the sea\\\\\\\"]\\\\n\\\\nbucketize(\\\\\\\"the mouse jumped over the cheese\\\\\\\", 7)\\\\n➞ [\\\\\\\"the\\\\\\\", \\\\\\\"mouse\\\\\\\", \\\\\\\"jumped\\\\\\\", \\\\\\\"over\\\\\\\", \\\\\\\"the\\\\\\\", \\\\\\\"cheese\\\\\\\"]\\\\n\\\\nbucketize(\\\\\\\"fairy dust coated the air\\\\\\\", 20)\\\\n➞ [\\\\\\\"fairy dust coated\\\\\\\", \\\\\\\"the air\\\\\\\"]\\\\n\\\\nbucketize(\\\\\\\"a b c d e\\\\\\\", 2)\\\\n➞ [\\\\\\\"a\\\\\\\", \\\\\\\"b\\\\\\\", \\\\\\\"c\\\\\\\", \\\\\\\"d\\\\\\\", \\\\\\\"e\\\\\\\"]\\\\n```\\\\n\\\\n### Notes\\","thisId":"2436","channelHost":"edabit.com","id":"2436","opcode":"1","channelId":"2","timestamp":"1652648942618"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"778\\\"]}\"]","thisId":"2437","channelHost":"edabit.com","id":"2437","opcode":"1","channelId":"2","timestamp":"1652648942737"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3638","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"778\\\",\\\"result\\\":{\\\"_id\\\":\\\"YLdgd8dav2joTpXbn\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String fractions(String decimal) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":3.2962962962962963,\\\"familyId\\\":\\\"rmCrwgiNt2FFic5As\\\",\\\"instructions\\\":\\\"Performing division on a fraction often results in an infinitely repeating decimal.\\\\n\\\\n```\\\\n1/3=.3333333...  1/7=.142857142857...\\\\n```\\\\nCreate a function that takes a decimal in string form with the repeating part in parentheses and returns the equivalent fraction in string form and in lowest terms.\\\\n\\\\n### Examples\\\\n```\\\\nfractions(\\\\\\\"0.(6)\\\\\\\") ➞ \\\\\\\"2/3\\\\\\\"\\\\n\\\\nfractions(\\\\\\\"1.(1)\\\\\\\") ➞ \\\\\\\"10/9\\\\\\\"\\\\n\\\\nfractions(\\\\\\\"3.(142857)\\\\\\\") ➞ \\\\\\\"22/7\\\\\\\"\\\\n\\\\nfractions(\\\\\\\"0.19(2367)\\\\\\\") ➞ \\\\\\\"5343/27775\\\\\\\"\\\\n\\\\nfractions(\\\\\\\"0.1097(3)\\\\\\\") ➞ \\\\\\\"823/7500\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\n","thisId":"2438","channelHost":"edabit.com","id":"2438","opcode":"1","channelId":"2","timestamp":"1652648942741"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"777\\\"]}\"]","thisId":"2439","channelHost":"edabit.com","id":"2439","opcode":"1","channelId":"2","timestamp":"1652648942839"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"27139","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"777\\\",\\\"result\\\":{\\\"_id\\\":\\\"9f6TiyJsgxAstgNLg\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String hexLattice(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":3.2962962962962963,\\\"familyId\\\":\\\"W2g6WSyXahkEjhaxD\\\",\\\"instructions\\\":\\\"As stated on the [On-Line Encyclopedia of Integer Sequences](https://oeis.org/A003215): \\\\n\\\\n> The hexagonal lattice is the familiar 2-dimensional lattice in which each point has 6 neighbors.\\\\n\\\\nA **centered hexagonal number** is a centered figurate number that represents a hexagon with a dot in the center and all other dots surrounding the center dot in a hexagonal lattice.\\\\n\\\\nAt the end of that web page the following illustration is shown:\\\\n\\\\n```\\\\nIllustration of initial terms:\\\\n.\\\\n.                                 o o o o\\\\n.                   o o o        o o o o o\\\\n.         o o      o o o o      o o o o o o\\\\n.   o    o o o    o o o o o    o o o o o o o\\\\n.         o o   ","thisId":"2440","channelHost":"edabit.com","id":"2440","opcode":"1","channelId":"2","timestamp":"1652648942846"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"779\\\"]}\"]","thisId":"2441","channelHost":"edabit.com","id":"2441","opcode":"1","channelId":"2","timestamp":"1652648942993"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"9066","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"779\\\",\\\"result\\\":{\\\"_id\\\":\\\"Fy2ySuj6XK5mxrsgR\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String pilish_string(String s) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":3.296875,\\\"familyId\\\":\\\"PCrF4BtAnHtKwJRRy\\\",\\\"instructions\\\":\\\"In this challenge, transform a string into a series of _words_ (or sequences of characters) separated by a single space, with each word having the same length given by the first 15 digits of the decimal representation of Pi:\\\\n\\\\n```\\\\n3.14159265358979\\\\n```\\\\n\\\\nIf a string contains more characters than the total quantity given by the sum of the Pi digits, the unused characters are discarded and you will use only those needed to form 15 words.\\\\n\\\\n```\\\\nString = \\\\\\\"HOWINEEDADRINKALCOHOLICINNATUREAFTERTHEHEAVYLECTURESINVOLVINGQUANTUMMECHANICSANDALLTHESECRETSOFTHEUNIVERSE\\\\\\\"\\\\n\\\\nPi String = \\\\\\\"HOW I NEED A DRINK ALCOHOLIC IN NATURE AFTER THE HEAVY LECTURES INVOLVING QUANTUM MECHAN","thisId":"2442","channelHost":"edabit.com","id":"2442","opcode":"1","channelId":"2","timestamp":"1652648942999"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"776\\\"]}\"]","thisId":"2443","channelHost":"edabit.com","id":"2443","opcode":"1","channelId":"2","timestamp":"1652648943114"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5695","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"776\\\",\\\"result\\\":{\\\"_id\\\":\\\"8zSSCYQRKC9wWWbkN\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean palindromeDescendant(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":3.287671232876712,\\\"familyId\\\":\\\"fSw95jpxxza9WawWc\\\",\\\"instructions\\\":\\\"A number may not be a palindrome, but its descendant can be. A number's direct child is created by summing each pair of adjacent digits to create the digits of the next number.\\\\n\\\\nFor instance, `123312` is not a palindrome, but its next child `363` is, where: `3 = 1 + 2; 6 = 3 + 3; 3 = 1 + 2`.\\\\n\\\\nCreate a function that returns `true` if the **number itself** is a palindrome or any of its **descendants down to the first 2 digit number** (a 1-digit number is trivially a palindrome).\\\\n\\\\n### Examples\\\\n```\\\\npalindromedescendant(11211230) ➞ true\\\\n// 11211230 ➞ 2333 ➞ 56 ➞ 11\\\\n\\\\npalindromeDescendant(13001120) ➞ true\\\\n// 13001120 ➞ 4022 ➞ 44\\\\n\\\\npalindromeDescenda","thisId":"2444","channelHost":"edabit.com","id":"2444","opcode":"1","channelId":"2","timestamp":"1652648943119"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"775\\\"]}\"]","thisId":"2445","channelHost":"edabit.com","id":"2445","opcode":"1","channelId":"2","timestamp":"1652648943212"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"14159","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"775\\\",\\\"result\\\":{\\\"_id\\\":\\\"rNYqwDqDFZwjZ6A4g\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class SentenceAtIndex {\\\\n  public static String sentenceSearcher(String str, int n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":3.2666666666666666,\\\"familyId\\\":\\\"2RCuNni2SLeHRt5df\\\",\\\"instructions\\\":\\\"Create a function that returns the sentence that contains the word at index `n`. Remember to include the full stop at the end.\\\\n\\\\n### Worked Example\\\\n```\\\\nfinal String txt = \\\\\\\"I love Tesh. My world evolves in hers. My love for life.\\\\\\\";\\\\n\\\\nsentenceSearcher(txt, 4) ➞ \\\\\\\"My world evolves in hers.\\\\\\\"\\\\n// The word at index 4 is \\\\\\\"world\\\\\\\".\\\\n// The full sentence that contains the word at index 4 is \\\\\\\"My world evolves in hers.\\\\\\\"\\\\n```\\\\n\\\\n### Examples\\\\n```\\\\nsentenceSearcher(txt, 2) ➞ \\\\\\\"I love Tesh.\\\\\\\"\\\\n\\\\nsentenceSearcher(txt, 5) ➞ \\\\\\\"My world evolves in hers.\\\\\\\"\\\\n\\\\nsentenceSearcher(txt, -1) ➞ \\\\\\\"My love for life.\\\\\\\"\\\\n// The index a","thisId":"2446","channelHost":"edabit.com","id":"2446","opcode":"1","channelId":"2","timestamp":"1652648943217"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"780\\\"]}\"]","thisId":"2447","channelHost":"edabit.com","id":"2447","opcode":"1","channelId":"2","timestamp":"1652648943313"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6455","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"780\\\",\\\"result\\\":{\\\"_id\\\":\\\"gvfWZYpmkAu99TKWt\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Anagram {\\\\n\\\\tpublic static String hiddenAnagram(String t, String p) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":3.3157894736842106,\\\"familyId\\\":\\\"3XyMFkPCm45dzrxo2\\\",\\\"instructions\\\":\\\"Create a function that takes two strings. The first string contains a sentence containing the letters of the second string in a consecutive sequence but in a different order. The hidden anagram must contain all the letters, including duplicates, from the second string in any order and must not contain any other alphabetic characters.\\\\n\\\\nWrite a function to find the anagram of the second string embedded somewhere in the first string. You should ignore character case, any spaces, and punctuation marks and return the anagram as a lower case string with no spaces or punctuation marks.\\\\n\\\\n### Examples\\\\n```\\\\nhiddenAnagram([\\\\\\\"My world evolves in a beautiful space cal","thisId":"2448","channelHost":"edabit.com","id":"2448","opcode":"1","channelId":"2","timestamp":"1652648943319"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"781\\\"]}\"]","thisId":"2449","channelHost":"edabit.com","id":"2449","opcode":"1","channelId":"2","timestamp":"1652648943412"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3637","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"781\\\",\\\"result\\\":{\\\"_id\\\":\\\"Rarq6J9wR8FsN2qQ4\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int bell(int n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":3.3333333333333335,\\\"familyId\\\":\\\"oRwyr8WnbKxdGZykE\\\",\\\"instructions\\\":\\\"The Bell number is the number of ways an array of `n` items can be partitioned into non-empty subarrays. See the resources section for an in-depth explanation.\\\\n\\\\nCreate a function that takes a number `n` and returns the corresponding Bell number.\\\\n\\\\n### Examples\\\\n```\\\\nbell(1) ➞ 1\\\\n// sampleArr = [1]\\\\n// possiblePartitions = [[[1]]]\\\\n\\\\nbell(2) ➞ 2\\\\n// sampleArr = [1, 2]\\\\n// possiblePartitions = [[[1, 2]], [[1], [2]]]\\\\n\\\\nbell(3) ➞ 5\\\\n// sampleArr = [1, 2, 3]\\\\n// possiblePartitions = [[[1, 2, 3]], [[1, 2], [3]], [[1], [2, 3]], [[1, 3], [2]], [[1], [2], [3]]]\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class C","thisId":"2450","channelHost":"edabit.com","id":"2450","opcode":"1","channelId":"2","timestamp":"1652648943473"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"782\\\"]}\"]","thisId":"2451","channelHost":"edabit.com","id":"2451","opcode":"1","channelId":"2","timestamp":"1652648943537"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6897","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"782\\\",\\\"result\\\":{\\\"_id\\\":\\\"3Xc4sz3PpyWPDw5b3\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class NumberSeries {\\\\n  public static boolean isConsecutive(String s) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":3.3333333333333335,\\\"editorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"familyId\\\":\\\"Fush7Zo8XcmSLrqso\\\",\\\"instructions\\\":\\\"Write a function that will return `true` if a given string (divided and grouped into a size) will contain a set of **consecutive** numbers (regardless of orientation: whether **ascending** or **descending**), otherwise, return `false`.\\\\n\\\\n### Examples\\\\n```\\\\nisConsecutive(\\\\\\\"121314151617\\\\\\\") ➞ true\\\\n// Contains a set of consecutive ascending numbers\\\\n// if grouped into 2's : 12, 13, 14, 15, 16, 17\\\\n\\\\nisConsecutive(\\\\\\\"123124125\\\\\\\") ➞ true\\\\n// Contains a set of consecutive ascending numbers\\\\n// if grouped into 3's : 123, 124, 125\\\\n\\\\nisConsecutive(\\\\\\\"32332432536\\\\\\\") ➞ false\\\\n// Regardless of the grouping size, the numbers ca","thisId":"2452","channelHost":"edabit.com","id":"2452","opcode":"1","channelId":"2","timestamp":"1652648943608"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"783\\\"]}\"]","thisId":"2453","channelHost":"edabit.com","id":"2453","opcode":"1","channelId":"2","timestamp":"1652648943640"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5361","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"783\\\",\\\"result\\\":{\\\"_id\\\":\\\"ABgaWqqn2XDjBqwKy\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static int superDigit(String n, int k) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":3.3333333333333335,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"6ZAHHNocQtgQKhpRJ\\\",\\\"instructions\\\":\\\"We define super digit of an integer `x` using the following rules:\\\\n\\\\n- If `x` has only `1` digit, then its super digit is `x`.\\\\n- Otherwise, the super digit of `x` is equal to the super digit of the sum of the digits of `x`.\\\\n\\\\nFor example, the super digit of `x` will be calculated as:\\\\n\\\\n```\\\\n  superDigit(9875)    9+8+7+5 = 29 \\\\n  superDigit(29)      2 + 9 = 11\\\\n  superDigit(11)      1 + 1 = 2\\\\n  superDigit(2) = 2\\\\n```\\\\n\\\\nYou are given two numbers `n` and `k`. The number `p` is created by concatenating the string `n`, `k` times. Continuing the above example where `n = 9875`, assume your value `k=4`. Your initial `p = 9875 987","thisId":"2454","channelHost":"edabit.com","id":"2454","opcode":"1","channelId":"2","timestamp":"1652648943645"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"784\\\"]}\"]","thisId":"2455","channelHost":"edabit.com","id":"2455","opcode":"1","channelId":"2","timestamp":"1652648943742"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"13932","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"784\\\",\\\"result\\\":{\\\"_id\\\":\\\"Y6hNbTncED6dp6gFu\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"/*\\\\nCHARACTERS SET\\\\n○    ➞ blank\\\\n●    ➞ ship\\\\n☼    ➞ miss\\\\n☀   ➞ hit\\\\n*/\\\\n\\\\npublic class Battleship {\\\\n\\\\tpublic Battleship(String[] scheme, String[] target) {}\\\\n\\\\tpublic int board() {}\\\\n\\\\tpublic int hits() {}\\\\n\\\\tpublic int sunk() {}\\\\n\\\\tpublic int points() {}\\\\n}\\\",\\\"difficulty\\\":3.357142857142857,\\\"familyId\\\":\\\"HbrXJjcPkCvLurujS\\\",\\\"instructions\\\":\\\"Build a `Class` that will store and manipulate the data of a simplified clone of the popular strategy game, **Battleship**.\\\\n\\\\nThe game is played on a **5x5**-sized board. The rows of the grid are identified by the uppercase letters **A to E** (top to bottom), and the columns are identified by the numbers **1 to 5** (left to right).\\\\n\\\\n### Rules of the Game\\\\n- There are two types of ship: the **Patrol** and the **Cruiser**. The Patrol occupies a single cell, the Cruiser occupies two cells, ","thisId":"2456","channelHost":"edabit.com","id":"2456","opcode":"1","channelId":"2","timestamp":"1652648943746"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"785\\\"]}\"]","thisId":"2457","channelHost":"edabit.com","id":"2457","opcode":"1","channelId":"2","timestamp":"1652648943851"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5484","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"785\\\",\\\"result\\\":{\\\"_id\\\":\\\"iZNdGSDXyRMmHrNNn\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class ReverseLexicalLengthSort {\\\\n  public static String reverseSort(String str) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":3.3703703703703702,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"dxeEXGPJfzsL64ic5\\\",\\\"instructions\\\":\\\"Write a function that **sorts the words** in a given string **lexicographically** (lexical sort) and by **length** in **reverse** order.\\\\n\\\\n### Examples\\\\n```\\\\nreverseSort(\\\\\\\"You've rocked the pragmatic world in the making!\\\\\\\") \\\\n ➞ \\\\\\\"pragmatic making! You've rocked world the the in\\\\\\\"\\\\n\\\\nreverseSort(\\\\\\\"Tesh makes my world worth enjoying and living for.\\\\\\\")\\\\n ➞ \\\\\\\"enjoying living worth world makes Tesh for. and my\\\\\\\"\\\\n\\\\nreverseSort(\\\\\\\"Shaken by the bloody truth and crazy lies.\\\\\\\")\\\\n ➞ \\\\\\\"Shaken bloody truth lies. crazy the and by\\\\\\\"\\\\n\\\\nreverseSort(\\\\\\\"Java streams and collections are fun to program with!","thisId":"2458","channelHost":"edabit.com","id":"2458","opcode":"1","channelId":"2","timestamp":"1652648943858"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"786\\\"]}\"]","thisId":"2459","channelHost":"edabit.com","id":"2459","opcode":"1","channelId":"2","timestamp":"1652648943970"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4813","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"786\\\",\\\"result\\\":{\\\"_id\\\":\\\"RkicZ4kkcSx8K3d4e\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int ulam(int n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":3.3859649122807016,\\\"familyId\\\":\\\"MJi4Qa6jmcH9CRdqG\\\",\\\"instructions\\\":\\\"The **Ulam sequence** starts with:\\\\n\\\\n```\\\\nulam = [1, 2]\\\\n```\\\\n\\\\nThe next number in the sequence is the smallest positive number that is equal to the *sum of 2 distinct numbers* (that are already in the sequence) *exactly one way*. Trivially, this is 3, as there are only 2 numbers in the starting sequence.\\\\n\\\\n```\\\\nulam = [1, 2, 3]\\\\n```\\\\n\\\\nThe next number is 4, which is the sum of 3+1. 4 is also 2+2, but this equation does not count, as the 2 addends have to be distinct.\\\\n\\\\n```\\\\nulam = [1, 2, 3, 4]\\\\n```\\\\n\\\\nThe next number *cannot be* 5, as 5 = 1 + 4, but also 5 = 2 + 3. There should only be one way to make an Ulam number from 2 distinct addends found in the sequence. The next numbe","thisId":"2460","channelHost":"edabit.com","id":"2460","opcode":"1","channelId":"2","timestamp":"1652648943985"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"787\\\"]}\"]","thisId":"2461","channelHost":"edabit.com","id":"2461","opcode":"1","channelId":"2","timestamp":"1652648944082"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5004","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"787\\\",\\\"result\\\":{\\\"_id\\\":\\\"qN7mnqKz6Y7WeMnLo\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean cFuge(int n, int k) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":3.395348837209302,\\\"familyId\\\":\\\"yK4muRpjxvuQipuKJ\\\",\\\"instructions\\\":\\\"A centrifuge, as you probably know, is a laboratory device used to separate fluids based on density. The separation is achieved through centripetal force by spinning a collection of test tubes at high speeds. This means, the configuration needs to be in balance.\\\\n\\\\nCreate a function that takes two numbers as arguments `n` and `k` and returns `true` if the configuration is balanced and `false` if it's not. To check out the formula, look at the **resources tab**.\\\\n\\\\n![The Centrifuge Problem with 6 Holes, n=6](https://edabit-challenges.s3.amazonaws.com/6_hole_centrifuge.png \\\\\\\"The Centrifuge Problem with 6 Holes, n=6\\\\\\\")\\\\n\\\\nHere are the valid configurations for *n* = 6, *k* = 2, 3, ","thisId":"2462","channelHost":"edabit.com","id":"2462","opcode":"1","channelId":"2","timestamp":"1652648944086"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"788\\\"]}\"]","thisId":"2463","channelHost":"edabit.com","id":"2463","opcode":"1","channelId":"2","timestamp":"1652648944187"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4734","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"788\\\",\\\"result\\\":{\\\"_id\\\":\\\"oibF2LtNoiGsJuj6b\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class HappyNumber {\\\\n\\\\tpublic static boolean isHappy(int n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":3.409090909090909,\\\"quality\\\":0,\\\"editorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"familyId\\\":\\\"49QQ7SqTT68etHGdA\\\",\\\"instructions\\\":\\\"A **happy number** is a number which yields a `1` by repeatedly summing up the square of its digit. If such a process results in an endless cycle of numbers containing `4`, the number is said to be an **unhappy number**.\\\\n\\\\nCreate a function that accepts a number and determines whether the number is a *happy number* or not. Return `true` if so, `false` otherwise.\\\\n\\\\n### Examples\\\\n```\\\\nisHappy(67) ➞ false\\\\n\\\\nisHappy(89) ➞ false\\\\n\\\\nisHappy(139) ➞ true\\\\n\\\\nisHappy(1327) ➞ false\\\\n\\\\nisHappy(2871) ➞ false\\\\n\\\\nisHappy(3970) ➞ true\\\\n```\\\\n\\\\n### Notes\\\\n- You are expected to solve this challenge via recursion.\\\\n- You can check","thisId":"2464","channelHost":"edabit.com","id":"2464","opcode":"1","channelId":"2","timestamp":"1652648944193"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"789\\\"]}\"]","thisId":"2465","channelHost":"edabit.com","id":"2465","opcode":"1","channelId":"2","timestamp":"1652648944293"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7205","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"789\\\",\\\"result\\\":{\\\"_id\\\":\\\"9obr3kYYua78Lw6yH\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class NonConsecutiveBits {\\\\n\\\\tpublic static String generate(int n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":3.409090909090909,\\\"familyId\\\":\\\"AgR9EkGrjcnR5KcJy\\\",\\\"instructions\\\":\\\"Create a function to generate all nonconsecutive binary strings where nonconsecutive is defined as a string where no consecutive ones are present, and where `n` governs the length of each binary string.\\\\n\\\\n### Examples\\\\n```\\\\ngenerateNonconsecutive(1) ➞ \\\\\\\"0 1\\\\\\\"\\\\n\\\\ngenerateNonconsecutive(2) ➞ \\\\\\\"00 01 10\\\\\\\"\\\\n\\\\ngenerateNonconsecutive(3) ➞ \\\\\\\"000 001 010 100 101\\\\\\\"\\\\n\\\\ngenerateNonconsecutive(4) ➞ \\\\\\\"0000 0001 0010 0100 0101 1000 1001 1010\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertEquals; \\\\nimport org.junit.Test; \\\\n\\\\npublic class NonConsecutiveBitsTest {\\\\n\\\\t@Test\\\\n\\","thisId":"2466","channelHost":"edabit.com","id":"2466","opcode":"1","channelId":"2","timestamp":"1652648944307"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"790\\\"]}\"]","thisId":"2467","channelHost":"edabit.com","id":"2467","opcode":"1","channelId":"2","timestamp":"1652648944423"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5124","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"790\\\",\\\"result\\\":{\\\"_id\\\":\\\"zZCARMRzJ2sHLbgwe\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String[] join(String[] letters) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":3.425,\\\"familyId\\\":\\\"bPFwjRkrZXBJkBfnZ\\\",\\\"instructions\\\":\\\"Write a function that connects each previous word to the next word by the shared letters. Return the resulting string (removing **duplicate characters** in the overlap) and the **minimum** number of shared letters across all pairs of strings.\\\\n\\\\n### Examples\\\\n```\\\\njoin([\\\\\\\"oven\\\\\\\", \\\\\\\"envier\\\\\\\", \\\\\\\"erase\\\\\\\", \\\\\\\"serious\\\\\\\"]) ➞ [\\\\\\\"ovenvieraserious\\\\\\\", \\\\\\\"2\\\\\\\"]\\\\n\\\\njoin([\\\\\\\"move\\\\\\\", \\\\\\\"over\\\\\\\", \\\\\\\"very\\\\\\\"]) ➞ [\\\\\\\"movery\\\\\\\", \\\\\\\"3\\\\\\\"]\\\\n\\\\njoin([\\\\\\\"to\\\\\\\", \\\\\\\"ops\\\\\\\", \\\\\\\"psy\\\\\\\", \\\\\\\"syllable\\\\\\\"]) ➞ [\\\\\\\"topsyllable\\\\\\\", \\\\\\\"1\\\\\\\"]\\\\n\\\\n// \\\\\\\"to\\\\\\\" and \\\\\\\"ops\\\\\\\" share \\\\\\\"o\\\\\\\" (1)\\\\n// \\\\\\\"ops\\\\\\\" and \\\\\\\"psy\\\\\\\" share \\\\\\\"ps\\\\\\\" (2)\\\\n// \\\\\\\"psy\\\\\\\" and ","thisId":"2468","channelHost":"edabit.com","id":"2468","opcode":"1","channelId":"2","timestamp":"1652648944427"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"794\\\"]}\"]","thisId":"2469","channelHost":"edabit.com","id":"2469","opcode":"1","channelId":"2","timestamp":"1652648944529"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7132","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"794\\\",\\\"result\\\":{\\\"_id\\\":\\\"TcLfFXvBvDqRL82a2\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class ReversedListIndex {\\\\n\\\\tpublic static Object[] getItemsAt(Object[] arr, String par) {\\\\n\\\\t\\\\t// recursive code here\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":3.5,\\\"editorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"familyId\\\":\\\"3GcZ4gL2XnqmtkxN6\\\",\\\"instructions\\\":\\\"Write a **recursive** function that filters the items in an array (given as parameter `arr`) by **positional parity** (`odd` or `even`), given as parameter `par`, starting from the **opposite end**.\\\\nReturn an array of items on **odd positions** (... 5, 3, 1) or on **even positions** (... 6, 4, 2) and counting from the **last item** in the array.\\\\n\\\\n\\\\n### Examples\\\\n```\\\\ngetItemsAt([2, 4, 6, 8, 10], \\\\\\\"odd\\\\\\\") ➞ [2, 6, 10]\\\\n// 2, 6 & 10 occupy the 5th, 3rd and 1st positions from right.\\\\n// Odd positions, hence the parity, and from the opposite.\\\\n\\\\ngetItemsAt(['E', 'D', 'A', 'B', 'I', 'T'], \\\\\\\"even\\\\\\","thisId":"2470","channelHost":"edabit.com","id":"2470","opcode":"1","channelId":"2","timestamp":"1652648944534"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"791\\\"]}\"]","thisId":"2471","channelHost":"edabit.com","id":"2471","opcode":"1","channelId":"2","timestamp":"1652648944640"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7581","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"791\\\",\\\"result\\\":{\\\"_id\\\":\\\"M69ui5BrdTjACd3R3\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class BitmapImage {\\\\n\\\\tpublic static String convertToBitstring(String time) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":3.44,\\\"familyId\\\":\\\"ZBbMfHp9GzXaTzim6\\\",\\\"instructions\\\":\\\"Write a function that converts a bitmap image of a digital clock (represented as a string of the form: `hh:mm`) into its representational bit string. A bitmap image is a by-product of parsing bits (`0`'s and `1`'s) from a canvas which is basically an image in black on a white background, where `0` represents the white background and `1` represents the black pixel (it's what an image is composed of, technically). The general idea of this challenge is to encode a bitstring that reflects the image of a digital clock (of this format: `hh:mm`). The images below are basic examples of how these are conceived.\\\\n\\\\nThe clock face shows the time in a black on white background where each c","thisId":"2472","channelHost":"edabit.com","id":"2472","opcode":"1","channelId":"2","timestamp":"1652648944645"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"795\\\"]}\"]","thisId":"2473","channelHost":"edabit.com","id":"2473","opcode":"1","channelId":"2","timestamp":"1652648944752"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"111982","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"795\\\",\\\"result\\\":{\\\"_id\\\":\\\"2caPynMewSbRfRZ7X\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class WordList {\\\\n  public static boolean isSorted(String[] w, String l) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":3.5,\\\"familyId\\\":\\\"kt7wagiNrjFbrAKWR\\\",\\\"instructions\\\":\\\"Write a function that, for a given array of words and a new alphabet (_**English letters** in different order_), determines if the array of words is **sorted lexicographically** based on the new reordered set of alphabet. The given array of words will only contains lower case letters.\\\\n\\\\n### Examples\\\\n```\\\\nisSorted([\\\\\\\"tesh\\\\\\\", \\\\\\\"love\\\\\\\", \\\\\\\"of\\\\\\\", \\\\\\\"my\\\\\\\", \\\\\\\"life\\\\\\\", \\\\\\\"and\\\\\\\", \\\\\\\"my\\\\\\\", \\\\\\\"world\\\\\\\", \\\\\\\"entirely\\\\\\\"], \\\\\\\"tlomawbdefghijknpqrscuvxyz\\\\\\\") ➞ false\\\\n\\\\nisSorted([\\\\\\\"hello\\\\\\\", \\\\\\\"edabitlot\\\\\\\"], \\\\\\\"hlabcdefgijkmnopqrstuvwxyz\\\\\\\") ➞ true\\\\n\\\\nisSorted([\\\\\\\"apple\\\\\\\", \\\\\\\"app\\\\\\\"], \\\\\\\"abcdefghijklmnopqrstuvwxyz\\\\\\\") ➞ false\\\\n\\\\nisSorted([\\\\\\\"dec","thisId":"2474","channelHost":"edabit.com","id":"2474","opcode":"1","channelId":"2","timestamp":"1652648944770"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"792\\\"]}\"]","thisId":"2475","channelHost":"edabit.com","id":"2475","opcode":"1","channelId":"2","timestamp":"1652648944886"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5556","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"792\\\",\\\"result\\\":{\\\"_id\\\":\\\"Sj2kws46RQfxdv6Wj\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Repitition {\\\\n  public static Map<Object, Integer> countRepititions(Object[] e) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":3.4642857142857144,\\\"familyId\\\":\\\"PXLEY8HDQo9Csie38\\\",\\\"instructions\\\":\\\"Given an array, create a function that returns an object detailing how many times each element was repeated. Sort the object by value in descending order.\\\\n\\\\n### Examples\\\\n```\\\\ncountRepetitions([\\\\\\\"cat\\\\\\\", \\\\\\\"dog\\\\\\\", \\\\\\\"cat\\\\\\\", \\\\\\\"cow\\\\\\\", \\\\\\\"cow\\\\\\\", \\\\\\\"cow\\\\\\\"]) ➞ {\\\\\\\"cow\\\\\\\"=3, \\\\\\\"cat\\\\\\\"=2, \\\\\\\"dog\\\\\\\"=1}\\\\n\\\\ncountRepetitions([1, 5, 5, 5, 12, 12, 0, 0, 0, 0, 0, 0]) ➞ {0=6, 5=3, 12=2, 1=1}\\\\n\\\\ncountRepetitions([\\\\\\\"Infinity\\\\\\\", \\\\\\\"null\\\\\\\", \\\\\\\"Infinity\\\\\\\", \\\\\\\"null\\\\\\\", \\\\\\\"null\\\\\\\"]) ➞ {\\\\\\\"null\\\\\\\"=3, \\\\\\\"Infinity\\\\\\\"=2}\\\\n```\\\\n\\\\n### Notes\\\\n- The array elements can be anything from string to numeric types.\\\\n- The returned map o","thisId":"2476","channelHost":"edabit.com","id":"2476","opcode":"1","channelId":"2","timestamp":"1652648944890"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"793\\\"]}\"]","thisId":"2477","channelHost":"edabit.com","id":"2477","opcode":"1","channelId":"2","timestamp":"1652648945000"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3737","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"793\\\",\\\"result\\\":{\\\"_id\\\":\\\"r2gd399TcG56Bvim5\\\",\\\"author\\\":\\\"Brendan Campbell-hartzell\\\",\\\"authorId\\\":\\\"xmMqX6Dkh7yxb7ycH\\\",\\\"code\\\":\\\"public class BishopChallenge {\\\\n\\\\tpublic static boolean bishop(String start, String end, int n)\\\\t{\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":3.466666666666667,\\\"familyId\\\":\\\"bgnsYYgY4tFb5e5qi\\\",\\\"instructions\\\":\\\"Your chess teacher wants to know if a bishop can reach a certain spot on the board in the given amount of moves.\\\\n\\\\nGiven a starting square `start`, ending square `end` and the maximum number of moves allowed `n`. Return `true` if the ending square can be reached from the starting square within the given amount of moves. Keep in mind the chessboard goes from a1 to h8 (8x8).\\\\n\\\\n### Examples\\\\n```\\\\nbishop(\\\\\\\"a1\\\\\\\", \\\\\\\"b4\\\\\\\", 2) ➞ true\\\\n\\\\nbishop(\\\\\\\"a1\\\\\\\", \\\\\\\"b5\\\\\\\", 5) ➞ false\\\\n\\\\nbishop(\\\\\\\"f1\\\\\\\", \\\\\\\"f1\\\\\\\", 0) ➞ true\\\\n```\\\\n\\\\n### Notes\\\\n- Chessboard is always empty (only the bishop is there).\\\\n- Bishop can move in any ","thisId":"2478","channelHost":"edabit.com","id":"2478","opcode":"1","channelId":"2","timestamp":"1652648945005"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"796\\\"]}\"]","thisId":"2479","channelHost":"edabit.com","id":"2479","opcode":"1","channelId":"2","timestamp":"1652648945108"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4319","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"796\\\",\\\"result\\\":{\\\"_id\\\":\\\"owwJbMCXJBv9n5FJD\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int josephus(int n, int i) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":3.5084745762711864,\\\"familyId\\\":\\\"e8Hr8vXski8QaHwmu\\\",\\\"instructions\\\":\\\"This classic problem dates back to Roman times. There are 41 soldiers arranged in a circle. Every third soldier is to be killed by their captors, continuing around the circle until only one soldier remains. He is to be freed. Assuming you would like to stay alive, at what position in the circle would you stand?\\\\n\\\\nGeneralize this problem by creating a function that accepts the number of soldiers `n` and the interval at which they are killed `i`, and returns the position of the fortunate survivor.\\\\n\\\\n### Examples\\\\n```\\\\njosephus(41, 3) ➞ 31\\\\n\\\\njosephus(35, 11) ➞ 18\\\\n\\\\njosephus(11, 1) ➞ 11\\\\n\\\\njosephus(2, 2) ➞ 1\\\\n```\\\\n\\\\n### Notes\\\\n- Assume the positions are numbered 1 to `n` ","thisId":"2480","channelHost":"edabit.com","id":"2480","opcode":"1","channelId":"2","timestamp":"1652648945114"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"797\\\"]}\"]","thisId":"2481","channelHost":"edabit.com","id":"2481","opcode":"1","channelId":"2","timestamp":"1652648945246"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6790","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"797\\\",\\\"result\\\":{\\\"_id\\\":\\\"6dEDvruWbEDqXb7dk\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String translateWord(String word) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n\\\\n\\\\tpublic static String translateSentence(String sentence) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":3.5098039215686274,\\\"familyId\\\":\\\"WcfQChLkyE6favvJx\\\",\\\"instructions\\\":\\\"Pig latin has two very simple rules:\\\\n\\\\n1. If a word starts with a consonant move the first letter(s) of the word, till you reach a vowel, to the end of the word and add \\\\\\\"ay\\\\\\\" to the end.\\\\n   - have ➞ avehay\\\\n   - cram ➞ amcray\\\\n   - take ➞ aketay\\\\n   - cat ➞ atcay\\\\n   - shrimp ➞ impshray\\\\n   - trebuchet ➞ ebuchettray\\\\n2. If a word starts with a vowel add \\\\\\\"yay\\\\\\\" to the end of the word.\\\\n   - ate ➞ ateyay\\\\n   - apple ➞ appleyay\\\\n   - oaken ➞ oakenyay\\\\n   - eagle ➞ eagleyay\\\\n\\\\nWrite two functions to make an English to pig latin translator. The first function `translateWord(wor","thisId":"2482","channelHost":"edabit.com","id":"2482","opcode":"1","channelId":"2","timestamp":"1652648945401"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"798\\\"]}\"]","thisId":"2483","channelHost":"edabit.com","id":"2483","opcode":"1","channelId":"2","timestamp":"1652648945407"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5042","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"798\\\",\\\"result\\\":{\\\"_id\\\":\\\"hbHJdMv4HubYs5TRv\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static boolean isWordChain(String[] words) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":3.5172413793103448,\\\"familyId\\\":\\\"diGZd2RYkdGzWsCqK\\\",\\\"instructions\\\":\\\"Let's update our previous **word-chain** definition. In this 2.0 version, a **word-chain** is an array of words, where the next word is formed by either:\\\\n\\\\n1. Changing exactly **one** letter from the previous word.\\\\n2. Adding or subtracting **one** letter.\\\\n\\\\n### Examples\\\\n```\\\\nisWordChain([\\\\\\\"row\\\\\\\", \\\\\\\"crow\\\\\\\", \\\\\\\"crown\\\\\\\", \\\\\\\"brown\\\\\\\", \\\\\\\"brawn\\\\\\\"]) ➞ true\\\\n// add \\\\\\\"c\\\\\\\" to \\\\\\\"row\\\\\\\" to get \\\\\\\"crow\\\\\\\", \\\\\\\"n\\\\\\\" to get \\\\\\\"crown\\\\\\\", etc.\\\\n\\\\nisWordChain([\\\\\\\"flew\\\\\\\", \\\\\\\"flaw\\\\\\\", \\\\\\\"flan\\\\\\\", \\\\\\\"flat\\\\\\\", \\\\\\\"fat\\\\\\\", \\\\\\\"rat\\\\\\\", \\\\\\\"rot\\\\\\\", \\\\\\\"tot\\\\\\\"]) ➞ true\\\\n\\\\nisWordChain([\\\\\\\"meek\\\\\\\", \\\\\\\"meet\\\\\\\", \\\\\\\"meat\\\\\\\", \\\\\\\"teal\\\\\\\"","thisId":"2484","channelHost":"edabit.com","id":"2484","opcode":"1","channelId":"2","timestamp":"1652648945411"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"799\\\"]}\"]","thisId":"2485","channelHost":"edabit.com","id":"2485","opcode":"1","channelId":"2","timestamp":"1652648945467"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4848","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"799\\\",\\\"result\\\":{\\\"_id\\\":\\\"EtW6o2eH88C89NYzw\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int nextNumber(int num) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":3.5277777777777777,\\\"familyId\\\":\\\"NNT4zpegoZHinMavS\\\",\\\"instructions\\\":\\\"Write a function that returns the next number that can be created from the same digits as the input.\\\\n\\\\n### Examples\\\\n```\\\\nnextNumber(19) ➞ 91\\\\n\\\\nnextNumber(3542) ➞ 4235\\\\n\\\\nnextNumber(5432) ➞ 5432\\\\n\\\\nnextNumber(58943) ➞ 59348\\\\n```\\\\n\\\\n### Notes\\\\n- If no larger number can be formed, return the number itself.\\\\n- **Bonus**: See if you can do this without generating all digit permutations.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(7, Challenge.nextNumber(7));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\\\n    assertEquals(91, Challenge.nextNumber(19","thisId":"2486","channelHost":"edabit.com","id":"2486","opcode":"1","channelId":"2","timestamp":"1652648945471"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"800\\\"]}\"]","thisId":"2487","channelHost":"edabit.com","id":"2487","opcode":"1","channelId":"2","timestamp":"1652648945572"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4653","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"800\\\",\\\"result\\\":{\\\"_id\\\":\\\"e3GaeWuJQ38fsFKS2\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class WordsInSentence {\\\\n\\\\tpublic static String findLongest(String sentence) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":3.5384615384615383,\\\"editorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"familyId\\\":\\\"79HEx3cwu4v4a4qge\\\",\\\"instructions\\\":\\\"Write a **recursive** function that will return the longest word in a sentence. In cases where more than one word is found, return the first one.\\\\n\\\\n### Examples\\\\n```\\\\nfindLongest(\\\\\\\"I will and ever will be gratefully and perpetually loving you Tesh!\\ud83d\\ude18\\\\\\\") ➞ \\\\\\\"perpetually\\\\\\\"\\\\n\\\\nfindLongest(\\\\\\\"A thing of beauty is a joy forever.\\\\\\\") ➞ \\\\\\\"forever\\\\\\\"\\\\n\\\\nfindLongest(\\\\\\\"Forgetfulness is by all means powerless!\\\\\\\") ➞ \\\\\\\"forgetfulness\\\\\\\"\\\\n\\\\nfindLongest(\\\\\\\"The word strengths is the longest and most commonly used word with a single vowel.\\\\\\\") ➞ \\\\\\\"strengths\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\n- Special characters","thisId":"2488","channelHost":"edabit.com","id":"2488","opcode":"1","channelId":"2","timestamp":"1652648945576"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"801\\\"]}\"]","thisId":"2489","channelHost":"edabit.com","id":"2489","opcode":"1","channelId":"2","timestamp":"1652648945687"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5474","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"801\\\",\\\"result\\\":{\\\"_id\\\":\\\"m8TRkJiYwahSR58dX\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class ElevenTimes {\\\\n  public static String multiplyBy11(String n) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":3.5384615384615383,\\\"familyId\\\":\\\"p6EphKTYLFj7Qim7T\\\",\\\"instructions\\\":\\\"Given a **positive** number as a string, multiply the number by **11** and also return it as a **string**. However, there is a catch:\\\\n\\\\n**You are NOT ALLOWED to simply cast the numeric string into an integer!**\\\\n\\\\nNow, how is this challenge even possible? Despite this, there is still a way to solve it, and it involves thinking about how someone might multiply by 11 in their head. See the tips below for guidance.\\\\n\\\\n### Examples\\\\n```\\\\nmultiplyBy11(\\\\\\\"11\\\\\\\") ➞ \\\\\\\"121\\\\\\\"\\\\n\\\\nmultiplyBy11(\\\\\\\"111111111\\\\\\\") ➞ \\\\\\\"1222222221\\\\\\\"\\\\n\\\\nmultiplyBy11(\\\\\\\"1213200020\\\\\\\") ➞ \\\\\\\"13345200220\\\\\\\"\\\\n\\\\nmultiplyBy11(\\\\\\\"1217197941\\\\\\\") ➞ \\\\\\\"13389177351\\\\\\\"\\\\n\\\\nmultiplyBy11(\\\\","thisId":"2490","channelHost":"edabit.com","id":"2490","opcode":"1","channelId":"2","timestamp":"1652648945692"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"802\\\"]}\"]","thisId":"2491","channelHost":"edabit.com","id":"2491","opcode":"1","channelId":"2","timestamp":"1652648945816"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"16188","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"802\\\",\\\"result\\\":{\\\"_id\\\":\\\"CsTELuWcqFAQYhwpY\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class CompressedChars {\\\\n\\\\tpublic static String compress(String[] ch) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":3.5384615384615383,\\\"familyId\\\":\\\"KTeMez2rh4JyoLgBj\\\",\\\"instructions\\\":\\\"The function is given an array of characters. Compress the array into a string using the following rules. For each group of consecutively repeating characters:\\\\n- If the number of repeating characters is one, append the string with only this character.\\\\n- If the number `n` of repeating characters `x` is greater than one, append the string with `\\\\\\\"x\\\\\\\" + n`.\\\\n\\\\n### Examples\\\\n```\\\\ncompress([\\\\\\\"t\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"s\\\\\\\", \\\\\\\"s\\\\\\\", \\\\\\\"s\\\\\\\", \\\\\\\"h\\\\\\\"]) ➞ \\\\\\\"te14s3h\\\\\\\"\\\\n\\\\ncompress([\\\\\\\"a\\\\\\\", \\\\\\\"a\\\\\\\", \\\\\\\"b\\\\\\\", \\\\\\","thisId":"2492","channelHost":"edabit.com","id":"2492","opcode":"1","channelId":"2","timestamp":"1652648945826"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"803\\\"]}\"]","thisId":"2493","channelHost":"edabit.com","id":"2493","opcode":"1","channelId":"2","timestamp":"1652648945921"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3560","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"803\\\",\\\"result\\\":{\\\"_id\\\":\\\"HH3FuLpBAf6gkb9L4\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int knightBFS(int a, int b, int c, int d) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":3.5454545454545454,\\\"familyId\\\":\\\"cC4AFxgmXNocekhhh\\\",\\\"instructions\\\":\\\"You will be given the location of a knight, and an end location. The knight can move in a \\\\\\\"L\\\\\\\" shape. \\\\\\\"L\\\\\\\" shape movement means that the knight can change it's `x` coordinate by 2 and it's `y` coordinate by 1 or it can change it's `y` coordinate by 2 and it's `x` coordinate by 1 (you can add and subtract from the x/y).\\\\n\\\\nFor example, if the knight is at the position (0, 0), it can move to:\\\\n\\\\n```\\\\n(1,2), (1,-2), (2,1), (2,-1), (-1,2), (-1,-2), (-2,1), (-2, -1)\\\\n```\\\\n\\\\nYour job is to return the least amount of steps needed to go from the position K (knight's start position) to E (end). You will only be given the knight starter coordinates (x1, y1) and the","thisId":"2494","channelHost":"edabit.com","id":"2494","opcode":"1","channelId":"2","timestamp":"1652648945928"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"804\\\"]}\"]","thisId":"2495","channelHost":"edabit.com","id":"2495","opcode":"1","channelId":"2","timestamp":"1652648946064"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"2979","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"804\\\",\\\"result\\\":{\\\"_id\\\":\\\"XPrHkBXC9XjsewuzC\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int nonRepeats(int radix) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":3.55,\\\"familyId\\\":\\\"qq5iwxGL2ESqMMFHY\\\",\\\"instructions\\\":\\\"Let's define a non-repeating integer as one whose digits are all distinct. 97653 is non-repeating while 97252 is not (it has two 2's). Among the binary numbers, there are only two positive non-repeating integers: 1 and 10. Ternary (base 3) has ten: 1, 2, 10, 20, 12, 21, 102, 201, 120, 210.\\\\n\\\\nWrite a function that has as it's argument the base or radix and returns the number of non-repeating positive integers in that base.\\\\n\\\\n### Examples\\\\n```\\\\nnonRepeats(2) ➞ 2\\\\n\\\\nnonRepeats(4) ➞ 48\\\\n\\\\nnonRepeats(5) ➞ 260\\\\n\\\\nnonRepeats(6) ➞ 1630\\\\n```\\\\n\\\\n### Notes\\\\nAssume a radix of 1 is not legitimate.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class C","thisId":"2496","channelHost":"edabit.com","id":"2496","opcode":"1","channelId":"2","timestamp":"1652648946083"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"805\\\"]}\"]","thisId":"2497","channelHost":"edabit.com","id":"2497","opcode":"1","channelId":"2","timestamp":"1652648946156"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4460","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"805\\\",\\\"result\\\":{\\\"_id\\\":\\\"SYTk43tp4y6oA5zGn\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int minPalindromeSteps(String str) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":3.5588235294117645,\\\"familyId\\\":\\\"igBcsC3Kbtgp9qHZa\\\",\\\"instructions\\\":\\\"Given an *incomplete palindrome* as a string, return the **minimum letters needed** to be added on to the **end** to make the string a **palindrome**.\\\\n\\\\n### Examples\\\\n```\\\\nminPalindromeSteps(\\\\\\\"race\\\\\\\") ➞ 3\\\\n// Add 3 letters: \\\\\\\"car\\\\\\\" to make \\\\\\\"racecar\\\\\\\"\\\\n\\\\nminPalindromeSteps(\\\\\\\"mada\\\\\\\") ➞ 1\\\\n// Add 1 letter: \\\\\\\"m\\\\\\\" to make \\\\\\\"madam\\\\\\\"\\\\n\\\\nminPalindromeSteps(\\\\\\\"mirror\\\\\\\") ➞ 3\\\\n// Add 3 letters: \\\\\\\"rim\\\\\\\" to make \\\\\\\"mirrorrim\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nTrivially, words which are already palindromes should return `0`.\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests ","thisId":"2498","channelHost":"edabit.com","id":"2498","opcode":"1","channelId":"2","timestamp":"1652648946160"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"806\\\"]}\"]","thisId":"2499","channelHost":"edabit.com","id":"2499","opcode":"1","channelId":"2","timestamp":"1652648946273"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"2957","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"806\\\",\\\"result\\\":{\\\"_id\\\":\\\"Bs8bX5B5NT22YB9zh\\\",\\\"author\\\":\\\"Kálmán Vilisics\\\",\\\"authorId\\\":\\\"Es4eX2stRpyoXeC7f\\\",\\\"code\\\":\\\"public class Challange {\\\\n  public static Object method(int n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":3.5833333333333335,\\\"editorId\\\":\\\"Es4eX2stRpyoXeC7f\\\",\\\"familyId\\\":\\\"8JHwPokZfAw5oivw6\\\",\\\"instructions\\\":\\\"Figure out the pattern.\\\\n\\\\n### Examples\\\\n```\\\\nmethod(1) ➞ false\\\\n\\\\nmethod(2) ➞ true\\\\n\\\\nmethod(14) ➞ null\\\\n```\\\\n\\\\n### Notes\\\\nIf you have no idea, check the **Comments** for a hint.\\\",\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ProgramTest {\\\\n\\\\t@Test\\\\n\\\\tpublic void test0(){\\\\n\\\\t\\\\tassertEquals(null, Challange.method(14));\\\\n\\\\t}\\\\n\\\\n  @Test\\\\n\\\\tpublic void test1(){\\\\n\\\\t\\\\tassertEquals(false, Challange.method(1));\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test\\\\n\\\\tpublic void test2(){\\\\n\\\\t\\\\tassertEquals(true, Challange.method(2));\\\\n\\\\t}\\\\n\\\\t\\\\n\\\\t@Test\\","thisId":"2500","channelHost":"edabit.com","id":"2500","opcode":"1","channelId":"2","timestamp":"1652648946278"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"808\\\"]}\"]","thisId":"2501","channelHost":"edabit.com","id":"2501","opcode":"1","channelId":"2","timestamp":"1652648946388"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4195","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"808\\\",\\\"result\\\":{\\\"_id\\\":\\\"MLzJD3iHnYZo566nA\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean formula(String str) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":3.6,\\\"familyId\\\":\\\"syEuMxy5GNioL8ooQ\\\",\\\"instructions\\\":\\\"Create a function that takes a string and returns `true` or `false` depending on whether or not the formula is correct.\\\\n\\\\n### Examples\\\\n```\\\\nformula(\\\\\\\"6 * 4 = 24\\\\\\\") ➞ true\\\\n\\\\nformula(\\\\\\\"18 / 17 = 2\\\\\\\") ➞ false\\\\n\\\\nformula(\\\\\\\"16 * 10 = 160 = 14 + 120\\\\\\\") ➞ false\\\\n```\\\\n\\\\n### Notes\\\\n- You have to figure out what `a` is.\\\\n- You do not need to dynamically find the value of `a` (it's a constant and the same accross all tests).\\\\n- Ignore the spaces.\\\",\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(true, Challenge.formula(\\\\\\\"6 * 4 = 24\\\\\\\"));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\","thisId":"2502","channelHost":"edabit.com","id":"2502","opcode":"1","channelId":"2","timestamp":"1652648946393"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"811\\\"]}\"]","thisId":"2503","channelHost":"edabit.com","id":"2503","opcode":"1","channelId":"2","timestamp":"1652648946496"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4976","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"811\\\",\\\"result\\\":{\\\"_id\\\":\\\"9fu8xW6yQkPxyM6rG\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String[] scrambled(char[] letters, String[] dict, String mask) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":3.6363636363636362,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"pufLSzEQAPtXEFbmn\\\",\\\"instructions\\\":\\\"Write a function that receives an array of letters, an array of words (dictionary) and a mask.  Return an array of words, sorted alphabetically, that match the given mask.\\\\n\\\\n### Examples\\\\n```\\\\nscrambled(['e', 'c', 'd', 'r', 'e', 'e'], [”red”, “dee”, “cede”, “reed”, “creed”, “decree”], “*re**”) ➞ [“creed”]\\\\n\\\\nscrambled(['e', 'c', 'd', 'r', 'e', 'e'], [”red”, “dee”, “cede”, “reed”, “creed”, “decree”], “***”) ➞ [“dee”, “ree”]\\\\n```\\\\n### Notes\\\\nThe length of a mask will never exceed the number of letters given (or the longest word in the dictionary).\\\",\\\"lab\\\":\\\"import java.util.LinkedHashSet;\\\\nimport st","thisId":"2504","channelHost":"edabit.com","id":"2504","opcode":"1","channelId":"2","timestamp":"1652648946500"},{"outgoing":"false","opcodeString":"PING","payloadLength":"0","payloadFragment":"","thisId":"2505","channelHost":"edabit.com","id":"2505","opcode":"9","channelId":"2","timestamp":"1652648948990"},{"outgoing":"true","opcodeString":"PONG","payloadLength":"0","payloadFragment":"","thisId":"2506","channelHost":"edabit.com","id":"2506","opcode":"10","channelId":"2","timestamp":"1652648948996"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"809\\\"]}\"]","thisId":"2507","channelHost":"edabit.com","id":"2507","opcode":"1","channelId":"2","timestamp":"1652648950117"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3641","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"809\\\",\\\"result\\\":{\\\"_id\\\":\\\"3niLvRRFXTRsZ27yF\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Eights {\\\\n  public static int[][] sumsUp(int[] n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":3.6,\\\"familyId\\\":\\\"PBHBPFqhNwd9Sduku\\\",\\\"instructions\\\":\\\"Create a function that gets every pair of numbers from an array that **sums up to eight** and returns it as an array of pairs (sorted ascendingly). See the following examples for more details.\\\\n\\\\n### Examples\\\\n```\\\\nsumsUp({1, 2, 3, 4, 5}) ➞ {{3, 5}}\\\\n\\\\nsumsUp({1, 2, 3, 7, 9}) ➞ {1, 7}}\\\\n\\\\nsumsUp({10, 9, 7, 2, 8}) ➞ {}\\\\n\\\\nsumsUp({1, 6, 5, 4, 8, 2, 3, 7}) ➞ {{2, 6}, {3, 5}, {1, 7}}\\\\n// [6, 2] first to complete the cycle (to sum up to 8)\\\\n// [5, 3] follows\\\\n// [1, 7] lastly\\\\n// the pair that completes the cycle is always found on the left\\\\n// [2, 6], [3, 5], [1, 7] sorted according to cycle completeness, then pair-wise.\\\\n```\\\\n\\\\n### Notes\\\\n- Remember the idea of _\\\\\\\"completes the cycle ","thisId":"2508","channelHost":"edabit.com","id":"2508","opcode":"1","channelId":"2","timestamp":"1652648950122"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"810\\\"]}\"]","thisId":"2509","channelHost":"edabit.com","id":"2509","opcode":"1","channelId":"2","timestamp":"1652648950208"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5361","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"810\\\",\\\"result\\\":{\\\"_id\\\":\\\"XRXcuP6QjH9CuqqwY\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class CapitalizationFamily {\\\\n  public static Map<Integer, List<String> > grouping(String[] w) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":3.6153846153846154,\\\"familyId\\\":\\\"TCfqhxjhvgo6rc88M\\\",\\\"instructions\\\":\\\"Write a function that groups words by the **number of capital letters** and returns an array of object entries whose keys are the **number of capital letters** and the values are the groups.\\\\n\\\\n### Examples\\\\n```\\\\ngrouping([\\\\\\\"HaPPy\\\\\\\", \\\\\\\"mOOdy\\\\\\\", \\\\\\\"yummy\\\\\\\", \\\\\\\"mayBE\\\\\\\"]) ➞ {\\\\n  0=[\\\\\\\"yummy\\\\\\\"], 2=[\\\\\\\"mayBE\\\\\\\", \\\\\\\"mOOdy\\\\\\\"], 3=[\\\\\\\"HaPPy\\\\\\\"]\\\\n}\\\\n\\\\ngrouping([\\\\\\\"eeny\\\\\\\", \\\\\\\"meeny\\\\\\\", \\\\\\\"miny\\\\\\\", \\\\\\\"moe\\\\\\\"]) ➞ {\\\\n  0=[\\\\\\\"eeny\\\\\\\", \\\\\\\"meeny\\\\\\\", \\\\\\\"miny\\\\\\\", \\\\\\\"moe\\\\\\\"]\\\\n}\\\\n\\\\ngrouping([\\\\\\\"FORe\\\\\\\", \\\\\\\"MoR\\\\\\\", \\\\\\\"bOR\\\\\\\", \\\\\\\"tOR\\\\\\\", \\\\\\\"sOr\\\\\\\", \\\\\\\"lor\\\\\\\"]) ➞ {\\\\n  0=[\\\\\\\"lor\\\\\\\"], 1=[\\\\\\\"sOr\\\\\\\"], 2=[\\\\\\","thisId":"2510","channelHost":"edabit.com","id":"2510","opcode":"1","channelId":"2","timestamp":"1652648950213"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"807\\\"]}\"]","thisId":"2511","channelHost":"edabit.com","id":"2511","opcode":"1","channelId":"2","timestamp":"1652648950314"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5705","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"807\\\",\\\"result\\\":{\\\"_id\\\":\\\"iY6e9fMQSWi38J699\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Phrase {\\\\n\\\\tpublic static boolean isPalindrome(String phrase) {\\\\n\\\\t\\\\t// recursive code here\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":3.588235294117647,\\\"editorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"familyId\\\":\\\"G9vRTHbTdfsfxqe75\\\",\\\"instructions\\\":\\\"A **palindrome** is a series of letters or numbers that reads _equivocally_ backwards.\\\\n\\\\nWrite a **recursive** function that determines whether a given string is a **palindrome** or not.\\\\n\\\\n### Examples\\\\n```\\\\nisPalindrome(\\\\\\\"Maneuquenam\\\\\\\") ➞ true\\\\n\\\\nisPalindrome(\\\\\\\"This phrase, surely, is not a palindrome!\\\\\\\") ➞ false\\\\n\\\\nisPalindrome(\\\\\\\"Eva, can I see bees in a cave?\\\\\\\") ➞ true\\\\n```\\\\n\\\\n### Notes\\\\n- Symbols and special characters should be ignored.\\\\n- You are expected to solve this challenge via **recursion**.\\\\n- You can check on the **Resources** tab for more details about *recursion* in Java.\\\\","thisId":"2512","channelHost":"edabit.com","id":"2512","opcode":"1","channelId":"2","timestamp":"1652648950318"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"812\\\"]}\"]","thisId":"2513","channelHost":"edabit.com","id":"2513","opcode":"1","channelId":"2","timestamp":"1652648950424"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4217","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"812\\\",\\\"result\\\":{\\\"_id\\\":\\\"nWRGJeLJ3gvzMSGvS\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class ProperFractions {\\\\n\\\\tpublic static int simPropFrac(int maxDen) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":3.6363636363636362,\\\"familyId\\\":\\\"MNxZKs2ywLhRDdbBv\\\",\\\"instructions\\\":\\\"Create a function that takes a number `maxDen` and returns the total number of fully simplified proper fractions that exist with denominator less than or equal to `maxDen`.\\\\n\\\\nYou only need to return the number of fractions; **NOT** the _fractions_ themselves. In the examples below, the _fractions_ are enumerated for your reference.\\\\n\\\\n### Examples\\\\n```\\\\nsimPropFrac(10) ➞ 31\\\\n// 1/2, 1/3, 2/3, 1/4, 3/4, 1/5, 2/5, 3/5, 4/5, 1/6, 5/6, 1/7, 2/7, 3/7, 4/7, 5/7, 6/7, 1/8, 3/8, 5/8, 7/8, 1/9, 2/9, 4/9, 5/9, 7/9, 8/9, 1/10, 3/10, 7/10, 9/10\\\\n\\\\nsimPropFrac(7) ➞ 17\\\\n// 1/2, 1/3, 2/3, 1/4, 3/4, 1/5, 2/5, 3/5, 4/5, 1/6, 5/6, 1/7, 2/7, 3/7, 4/7, 5/7, 6/7\\\\n```\\\\n\\\\n### Notes","thisId":"2514","channelHost":"edabit.com","id":"2514","opcode":"1","channelId":"2","timestamp":"1652648950430"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"813\\\"]}\"]","thisId":"2515","channelHost":"edabit.com","id":"2515","opcode":"1","channelId":"2","timestamp":"1652648950553"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7647","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"813\\\",\\\"result\\\":{\\\"_id\\\":\\\"BWm34MorRuaJXiaz6\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String vigenere(String text, String keyword) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":3.652173913043478,\\\"familyId\\\":\\\"D6WjcRpdNojzYvAui\\\",\\\"instructions\\\":\\\"The **Vigenere Cipher** is a poly-alphabetic substitution cipher that uses a set of shift ciphers and a keyword.\\\\n\\\\nOne of the simplest ciphers is the Caesar/shift cipher, where each letter in the plaintext message is replaced by the letter a particular number of positions up, or downstream in the alphabet. Shift 1 Caesar cipher:\\\\n\\\\n | | | | | | | | | | | | | | | | | | | | | | | | |\\\\n---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---\\\\nA|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z\\\\nB|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z|A\\\\n\\\\nThe Vigenere table is generated by doing a shift-1 Caesar cip","thisId":"2516","channelHost":"edabit.com","id":"2516","opcode":"1","channelId":"2","timestamp":"1652648950558"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"814\\\"]}\"]","thisId":"2517","channelHost":"edabit.com","id":"2517","opcode":"1","channelId":"2","timestamp":"1652648950676"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"19712","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"814\\\",\\\"result\\\":{\\\"_id\\\":\\\"7yhhtWf9xaP7LDtHz\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class FivesAndThrees {\\\\n\\\\tpublic static boolean only5and3(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":3.6538461538461537,\\\"familyId\\\":\\\"aFKzFERBygHygRp6D\\\",\\\"instructions\\\":\\\"Write a function that mimics the following described arithmetic operations.\\\\n\\\\nStarting with either `3` or `5` and given these operations:\\\\n- add `5`\\\\n- multiply by `3`\\\\n\\\\nYou should say if it is possible to reach the target number `n`.\\\\n\\\\n### Examples\\\\n```\\\\nonly5and3(14) ➞ true\\\\n// 14 = 3*3 + 5\\\\n\\\\nonly5and3(25) ➞ true\\\\n// 25 = 5+5+5+5+5\\\\n\\\\nonly5and3(7) ➞ false\\\\n// There exists no path to the target number 7\\\\n```\\\\n\\\\n### Notes\\\\n- Only **addition** and **multiplication** arithmetic operations are allowed.\\\\n- You can solve this problem **recursively** or **algebraically**.\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"/** \\\\n=========","thisId":"2518","channelHost":"edabit.com","id":"2518","opcode":"1","channelId":"2","timestamp":"1652648950681"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"815\\\"]}\"]","thisId":"2519","channelHost":"edabit.com","id":"2519","opcode":"1","channelId":"2","timestamp":"1652648950782"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4071","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"815\\\",\\\"result\\\":{\\\"_id\\\":\\\"Q89oMEPgug3kpERBT\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int diceRoll(int n, int outcome) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":3.6666666666666665,\\\"familyId\\\":\\\"FNEkBsJsTDwpGkWAp\\\",\\\"instructions\\\":\\\"Las Vegas style dice have 6 sides numbered 1 to 6. When rolling 2 dice, a six is 5 times more likely than a two because a six can be rolled 5 different ways (1 + 5, 5 + 1, 2 + 4, 4 + 2, 3 + 3), while a two can only be rolled 1 way (1 + 1).\\\\n\\\\nCreate a function that accepts two arguments:the number of dice rolled, and the outcome of the roll. The function returns the number of possible combinations that could produce that outcome. The number of dice can vary from 1 to 6.\\\\n\\\\nFor the example given above:\\\\n\\\\n- `diceRoll(2, 6)` would return `5`\\\\n- `diceRoll(2, 2)` would return `1`\\\\n\\\\n### Examples\\\\n```\\\\ndiceRoll(1, 3) ➞ 1\\\\n\\\\ndiceRoll(2, 5) ➞ 4\\\\n// 1 + 4, 4 + 1, 2 + 3, 3 + 2","thisId":"2520","channelHost":"edabit.com","id":"2520","opcode":"1","channelId":"2","timestamp":"1652648950786"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"816\\\"]}\"]","thisId":"2521","channelHost":"edabit.com","id":"2521","opcode":"1","channelId":"2","timestamp":"1652648950899"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4750","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"816\\\",\\\"result\\\":{\\\"_id\\\":\\\"cDhtEXjmyrKj9etsZ\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class PersianWord {\\\\n  public static String syllabification(String word) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":3.6666666666666665,\\\"familyId\\\":\\\"jxzaLNkECAdzroFDq\\\",\\\"instructions\\\":\\\"The syllabic structure of the Persian language is CV(C)(C). C stands for Consonants and V stands for Vowels. The CV(C)(C) means that there are three types of syllables in Persian:\\\\n- CV\\\\n- CVC\\\\n- CVCC\\\\n\\\\nWrite a function that takes the phonetic transcription of a Persian word as an argument and returns the syllabified word based on the syllabic structure. In other words, put a period between syllables.\\\\n\\\\n### Examples\\\\n```\\\\nsyllabification(\\\\\\\"tesh\\\\\\\") ➞ \\\\\\\"tesh\\\\\\\"\\\\n\\\\nsyllabification(\\\\\\\"kAr\\\\\\\") ➞ \\\\\\\"kAr\\\\\\\"\\\\n\\\\nsyllabification(\\\\\\\"bArAn\\\\\\\") ➞ \\\\\\\"bA.rAn\\\\\\\"\\\\n\\\\nsyllabification(\\\\\\\"tA\\\\\\\") ➞ \\\\\\\"tA\\\\\\\"\\\\n\\\\nsyllabification(\\\\\\\"deraxt\\\\\\\") ➞ \\\\\\\"de.raxt","thisId":"2522","channelHost":"edabit.com","id":"2522","opcode":"1","channelId":"2","timestamp":"1652648950903"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"817\\\"]}\"]","thisId":"2523","channelHost":"edabit.com","id":"2523","opcode":"1","channelId":"2","timestamp":"1652648951028"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3390","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"817\\\",\\\"result\\\":{\\\"_id\\\":\\\"pxfkEdxgXPKgy7FEb\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String getSha256Hash(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":3.6842105263157894,\\\"familyId\\\":\\\"zgMFXK9DJhegssPcG\\\",\\\"instructions\\\":\\\"Hash algorithms are easy to do one way, but essentially impossible to do in reverse. For example, if you hash something simple, like `password123`, it will give you a long code, unique to that word or phrase. Ideally, there's no way to do this in reverse. You can't take the hash code and go back to the word or phrase you started with.\\\\n\\\\nMake a function that returns the SHA-256 secure hash for a given string. The hash should be formatted in a hexadecimal digit string.\\\\n\\\\n### Examples\\\\n```\\\\ngetSha256Hash(\\\\\\\"password123\\\\\\\") ➞ \\\\\\\"ef92b778bafe771e89245b89ecbc08a44a4e166c06659911881f383d4473e94f\\\\\\\"\\\\n\\\\ngetSha256Hash(\\\\\\\"Fluffy@home\\\\\\\") ➞ \\\\\\\"dcc1ac3a7148a2d9f47b7dbe3d733040","thisId":"2524","channelHost":"edabit.com","id":"2524","opcode":"1","channelId":"2","timestamp":"1652648951033"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"818\\\"]}\"]","thisId":"2525","channelHost":"edabit.com","id":"2525","opcode":"1","channelId":"2","timestamp":"1652648951137"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4587","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"818\\\",\\\"result\\\":{\\\"_id\\\":\\\"xCrsQ4E3qYkGvbeAw\\\",\\\"author\\\":\\\"Mateusz Mędrowski\\\",\\\"authorId\\\":\\\"hPx9H3YM8j2k94DNW\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static boolean intersection(int[][] point) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":3.6923076923076925,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"P5HCLx75tNxL9a6kY\\\",\\\"instructions\\\":\\\"Write a function that takes coordinates of four points (A, B, C, D) on a two-dimensional plane and returns `true` if the segment AB intersects segment CD.\\\\n\\\\n### Examples\\\\n```\\\\nintersection(arr[0]={2, 4}, arr[1]={5, 1}, arr[2]={4, 1}, arr[3]={4, 4}) ➞ true\\\\n\\\\nintersection(arr[0]={1, 2}, arr[1]={3, 4}, arr[2]={5, 6}, arr[3]={7, 8}) ➞ false\\\\n\\\\nintersection(arr[0]={1, 1}, arr[1]={1, 7}, arr[2]={-3, 3}, arr[3]={6, 3}) ➞ true\\\\n```\\\\n\\\\n### Notes\\\\n- The given points always create two line segments.\\\\n- The order of the given numbers is X, Y.\\\\n- The numbers in the argument array can be positive or negative.\\\\n- This challenge is","thisId":"2526","channelHost":"edabit.com","id":"2526","opcode":"1","channelId":"2","timestamp":"1652648951145"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"819\\\"]}\"]","thisId":"2527","channelHost":"edabit.com","id":"2527","opcode":"1","channelId":"2","timestamp":"1652648951266"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7314","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"819\\\",\\\"result\\\":{\\\"_id\\\":\\\"5s8AXfbk4X2Dmimrk\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class MultidimensionArrays {\\\\n\\\\tpublic static Object[] flatten(Object[] r) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":3.7,\\\"familyId\\\":\\\"eu9ejyrePk6moD6xX\\\",\\\"instructions\\\":\\\"The nesting of arrays can be viewed indirectly as curves and barriers of the real data embedded in arrays, thus, defeats the very purpose of directly accessing them thru indexes and slices. Write a **recursive** function to **flatten those curves** (i.e. level, iron, compress, raze, topple) and expose those data as a **single array** other than an *array of arrays*.\\\\n\\\\n### Examples\\\\n```\\\\nflatten([\\\\\\\"Tesh\\\\\\\", 121317, [\\\\\\\"Love\\\\\\\", \\\\\\\"of\\\\\\\", [\\\\\\\"my\\\\\\\", [\\\\\\\"life\\\\\\\", [\\\\\\\"and\\\\\\\", \\\\\\\"my\\\\\\\", [\\\\\\\"world\\\\\\\"], \\\\\\\"entirely\\\\\\\"]]]]])\\\\n➞ [\\\\\\\"Tesh\\\\\\\", 121317, \\\\\\\"Love\\\\\\\", \\\\\\\"of\\\\\\\", \\\\\\\"my\\\\\\\", \\\\\\\"life\\\\\\\", \\\\\\\"and\\\\\\\", \\\\\\\"my\\\\\\\", \\\\\\\"world\\\\\\\", \\\\\\\"entirely\\\\\\\"]\\\\n\\\\nf","thisId":"2528","channelHost":"edabit.com","id":"2528","opcode":"1","channelId":"2","timestamp":"1652648951272"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"820\\\"]}\"]","thisId":"2529","channelHost":"edabit.com","id":"2529","opcode":"1","channelId":"2","timestamp":"1652648951367"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5332","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"820\\\",\\\"result\\\":{\\\"_id\\\":\\\"i4SSMeuxhnSR2QKtx\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String cleave(String str, String[] words) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":3.7,\\\"familyId\\\":\\\"STvRTZX5WRZua4DAv\\\",\\\"instructions\\\":\\\"Create a function that takes a string (without spaces) and a word array, cleaves the string into words based on the array, and returns the correctly spaced version of the string (a sentence). If a section of the string is encountered that can't be found on the word array, return `\\\\\\\"Cleaving stalled: Word not found\\\\\\\"`.\\\\n\\\\n### Examples\\\\n```\\\\nconst words = [\\\\\\\"about\\\\\\\", \\\\\\\"be\\\\\\\", \\\\\\\"hell\\\\\\\", \\\\\\\"if\\\\\\\", \\\\\\\"is\\\\\\\", \\\\\\\"it\\\\\\\", \\\\\\\"me\\\\\\\", \\\\\\\"other\\\\\\\", \\\\\\\"outer\\\\\\\", \\\\\\\"people\\\\\\\", \\\\\\\"the\\\\\\\", \\\\\\\"to\\\\\\\", \\\\\\\"up\\\\\\\", \\\\\\\"where\\\\\\\"]\\\\n\\\\n\\\\ncleave(\\\\\\\"ifitistobeitisuptome\\\\\\\", words) ➞ \\\\\\\"if it is to be it is up to me\\\\\\\"\\\\n\\\\ncleave(\\\\\\\"hellisotherpeople\\\\\\\", word","thisId":"2530","channelHost":"edabit.com","id":"2530","opcode":"1","channelId":"2","timestamp":"1652648951372"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"821\\\"]}\"]","thisId":"2531","channelHost":"edabit.com","id":"2531","opcode":"1","channelId":"2","timestamp":"1652648951482"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"77638","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"821\\\",\\\"result\\\":{\\\"_id\\\":\\\"gCzqqRMAScwWPSRoY\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class Isomorph {\\\\n\\\\tpublic static boolean isIsomorphic(String s, String t) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":3.7058823529411766,\\\"familyId\\\":\\\"8Zjy8ZDC8FcyEfThr\\\",\\\"instructions\\\":\\\"Given two strings `s` and `t`, create a function to determine if they are isomorphic. Two strings are isomorphic if the characters in `s` can be replaced to get `t`. All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character but a character may map to itself.\\\\n\\\\n### Examples\\\\n```\\\\nisIsomorphic(\\\\\\\"xade\\\\\\\", \\\\\\\"tesh\\\\\\\") ➞ true\\\\n\\\\nisIsomorphic(\\\\\\\"egg\\\\\\\", \\\\\\\"add\\\\\\\") ➞ true\\\\n\\\\nisIsomorphic(\\\\\\\"aba\\\\\\\", \\\\\\\"baa\\\\\\\") ➞ false\\\\n\\\\nisIsomorphic(\\\\\\\"paper\\\\\\\", \\\\\\\"title\\\\\\\") ➞ true\\\\n```\\\\n\\\\n### Notes\\\\nUse either string `s` or `t` as your mapping reference.\\\",","thisId":"2532","channelHost":"edabit.com","id":"2532","opcode":"1","channelId":"2","timestamp":"1652648951487"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"822\\\"]}\"]","thisId":"2533","channelHost":"edabit.com","id":"2533","opcode":"1","channelId":"2","timestamp":"1652648951597"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6041","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"822\\\",\\\"result\\\":{\\\"_id\\\":\\\"EDZj2oGeLTKgDSJzc\\\",\\\"author\\\":\\\"_fluffyy\\\",\\\"authorId\\\":\\\"foytX6kH9wiSYqLtT\\\",\\\"code\\\":\\\"public class MiddleSquarePRNG {\\\\n  public void seed(int newSeed) {\\\\n\\\\t\\\\t\\\\n  }\\\\n\\\\n  public int next() {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":3.7142857142857144,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"jnfhzK799aEfL3WwF\\\",\\\"instructions\\\":\\\"Create a class that returns 32-bit pseudo-random numbers using the middle square algorithm.\\\\n\\\\n### Background\\\\nComputers were built to be *deterministic*, which means every action it performs is 100% predictable. However, in the case of random number generation (RNG), this makes it hard to come up with \\\\\\\"random\\\\\\\" numbers. To circumvent this, many people have come up with *pseudo-random* number generators (PRNG) which generate numbers that *seem* random, but are still perfectly predictable if you know how the algorithm works. One of these algorithms is called the **middle square** algorithm.\\\\n\\\\nPRNGs typi","thisId":"2534","channelHost":"edabit.com","id":"2534","opcode":"1","channelId":"2","timestamp":"1652648951606"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"823\\\"]}\"]","thisId":"2535","channelHost":"edabit.com","id":"2535","opcode":"1","channelId":"2","timestamp":"1652648951701"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6990","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"823\\\",\\\"result\\\":{\\\"_id\\\":\\\"ecR654j7ivFqs2WPi\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class CharacterRecognition {\\\\n  public static String whatsTheTime(String bitmap) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":3.7333333333333334,\\\"familyId\\\":\\\"RQyeP8gRsoY7M7ZLc\\\",\\\"instructions\\\":\\\"As a programmer in a forensic laboratory, you have been asked to write a function to decode a bitmap image of a digital clock to determine what time it was when the image was created. The bitmap image has been converted to a string of binary digits `0` or `1` where `0` represents a white background pixel and `1` represents a black pixel. You must convert this binary string into a time in hours and minutes in the form `hh:mm` (e.g. `09:47`).\\\\n\\\\nThe clock face shows the time in a black on white background where each character is three cells wide and five cells deep. Notice there is a space between the numbers represented by a column of blank cells:\\\\n\\\\n![Time 21","thisId":"2536","channelHost":"edabit.com","id":"2536","opcode":"1","channelId":"2","timestamp":"1652648951706"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"827\\\"]}\"]","thisId":"2537","channelHost":"edabit.com","id":"2537","opcode":"1","channelId":"2","timestamp":"1652648951827"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5003","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"827\\\",\\\"result\\\":{\\\"_id\\\":\\\"h3rDzi2j5t2h7jtJi\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class ReversibleListRanges {\\\\n  public static int[] reversibleInclusiveList(int startOfRange, int endOfRange) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":3.8461538461538463,\\\"editorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"familyId\\\":\\\"x42gWRa66MB7y8SRb\\\",\\\"instructions\\\":\\\"Write a function that, given the `startOfRange` and `endOfRange` values, returns an array containing all the numbers **inclusive** to that range. See examples below.\\\\n\\\\n### Examples\\\\n```\\\\nreversibleInclusiveList(1, 5) ➞ [1, 2, 3, 4, 5]\\\\n\\\\nreversibleInclusiveList(2, 8) ➞ [2, 3, 4, 5, 6, 7, 8]\\\\n\\\\nreversibleInclusiveList(10, 20) ➞ [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\\\\n\\\\nreversibleInclusiveList(24, 17) ➞ [24, 23, 22, 21, 20, 19, 18, 17]\\\\n```\\\\n\\\\n### IMPORTANT\\\\n- The use of `IntStream.range` and `IntStream.rangeClosed` is **totally unacceptable**, hence, recursion is the very purpose","thisId":"2538","channelHost":"edabit.com","id":"2538","opcode":"1","channelId":"2","timestamp":"1652648951832"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"826\\\"]}\"]","thisId":"2539","channelHost":"edabit.com","id":"2539","opcode":"1","channelId":"2","timestamp":"1652648951966"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"2765","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"826\\\",\\\"result\\\":{\\\"_id\\\":\\\"eeXtztKiDe7sEYbZP\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int football(int score) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":3.8125,\\\"familyId\\\":\\\"kLKydFiohwiji2jvC\\\",\\\"instructions\\\":\\\"Scoring plays in American football count as either 2, 3, 6, 7, or 8 points. Write a function that has as it's argument a football score and returns the number of possible ways that score can be achieved. Order is not important.\\\\n\\\\n### Examples\\\\n```\\\\nfootball(4) ➞ 1\\\\n// 2+2\\\\n\\\\nfootball(6) ➞ 3\\\\n// 2+2+2 or 3+3 or 6\\\\n\\\\nfootball(7) ➞ 2\\\\n// 2+2+3 or 7\\\\n\\\\nfootball(9) ➞ 4\\\\n// 2+2+2+3 or 3+3+3 or 3+6 or 7+2\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ChallengeTests {\\\\n  @Test\\\\n  public void test1() {\\\\n    assertEquals(1, Challenge.football(0));\\\\n  }\\\\n\\\\t\\\\n\\\\t@Test\\\\n  public void test2() {\\","thisId":"2540","channelHost":"edabit.com","id":"2540","opcode":"1","channelId":"2","timestamp":"1652648951970"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"824\\\"]}\"]","thisId":"2541","channelHost":"edabit.com","id":"2541","opcode":"1","channelId":"2","timestamp":"1652648952114"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6038","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"824\\\",\\\"result\\\":{\\\"_id\\\":\\\"Ls6pbLkC9wfYuaDgm\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int[] distanceToNearestVowel(String str) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":3.75,\\\"familyId\\\":\\\"2o7BaS2YycW8LcQqy\\\",\\\"instructions\\\":\\\"Write a function that takes in a string and for each character, returns the distance to the nearest vowel in the string. If the character is a vowel itself, return `0`.\\\\n\\\\n### Examples\\\\n```\\\\ndistanceToNearestVowel(\\\\\\\"aaaaa\\\\\\\") ➞ [0, 0, 0, 0, 0]\\\\n\\\\ndistanceToNearestVowel(\\\\\\\"babbb\\\\\\\") ➞ [1, 0, 1, 2, 3]\\\\n\\\\ndistanceToNearestVowel(\\\\\\\"abcdabcd\\\\\\\") ➞ [0, 1, 2, 1, 0, 1, 2, 3]\\\\n\\\\ndistanceToNearestVowel(\\\\\\\"shopper\\\\\\\") ➞ [2, 1, 0, 1, 1, 0, 1]\\\\n```\\\\n\\\\n### Notes\\\\n- All input strings will contain **at least one vowel**.\\\\n- Strings will be lowercased.\\\\n- Vowels are: `a, e, i, o, u`.\\\",\\\"lab\\\":\\\"import static org.hamcrest.core.Is.is;\\\\nimport org.junit.Test;\\\\nimport sta","thisId":"2542","channelHost":"edabit.com","id":"2542","opcode":"1","channelId":"2","timestamp":"1652648952118"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"825\\\"]}\"]","thisId":"2543","channelHost":"edabit.com","id":"2543","opcode":"1","channelId":"2","timestamp":"1652648952225"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4689","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"825\\\",\\\"result\\\":{\\\"_id\\\":\\\"9PfRkNR2Ersu2CwTG\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class MessageEncrypt {\\\\n  public static String nicoCipher(String message, String key) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":3.7857142857142856,\\\"familyId\\\":\\\"796x8NMWNMite3aNA\\\",\\\"instructions\\\":\\\"In **Nico Cipher**, encoding is done by creating a numeric key and assigning each letter position of the message with the provided key.\\\\n\\\\nCreate a function that takes two arguments, `message` and `key`, and returns the **encoded message**.\\\\n\\\\nThere are some variations on the rules of encipherment. One version of the cipher rules are outlined below:\\\\n\\\\n```\\\\nmessage = \\\\\\\"mubashirhassan\\\\\\\"\\\\nkey = \\\\\\\"crazy\\\\\\\"\\\\n\\\\nnicoCipher(message, key) ➞ \\\\\\\"bmusarhiahass n\\\\\\\"\\\\n```\\\\n\\\\n**Step 1:** Assign numbers to sorted letters from the key:\\\\n\\\\n```\\\\n\\\\\\\"crazy\\\\\\\" = 23154\\\\n```\\\\n\\\\n**Step 2:** Assign numbers to the letters of the given message:\\\\n\\\\n```\\\\","thisId":"2544","channelHost":"edabit.com","id":"2544","opcode":"1","channelId":"2","timestamp":"1652648952231"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"828\\\"]}\"]","thisId":"2545","channelHost":"edabit.com","id":"2545","opcode":"1","channelId":"2","timestamp":"1652648952333"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5842","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"828\\\",\\\"result\\\":{\\\"_id\\\":\\\"5tNkD75pLSkAqBFnD\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class StickyKeys {\\\\n  public static boolean isLongPressed(String base, String typed) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":3.857142857142857,\\\"familyId\\\":\\\"6BfrWWhbyidPuJJuy\\\",\\\"instructions\\\":\\\"Someone is typing on the sticky keyboard. Occasionally a key gets stuck and more than intended number of characters of a particular letter is being added into the string. The function input contains `original` and `typed` strings. Determine if the `typed` string has been made from the `original`. Return `true` if it is and `false` if the typed string cannot have been made from the `original`.\\\\n\\\\n### Examples\\\\n```\\\\nisLongPressed(\\\\\\\"leellee\\\\\\\", \\\\\\\"lleeelee\\\\\\\") ➞ false\\\\n\\\\nisLongPressed(\\\\\\\"deep\\\\\\\", \\\\\\\"dddeeeppp\\\\\\\") ➞ true\\\\n\\\\nisLongPressed(\\\\\\\"teshaa\\\\\\\", \\\\\\\"ttteeeesssshhhaaaaa\\\\\\\") ➞ true\\\\n\\\\nisLongPressed(\\\\\\\"xavier\\\\\\\", \\\\\\\"xavvviieerr\\\\\\\") ➞ t","thisId":"2546","channelHost":"edabit.com","id":"2546","opcode":"1","channelId":"2","timestamp":"1652648952347"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"829\\\"]}\"]","thisId":"2547","channelHost":"edabit.com","id":"2547","opcode":"1","channelId":"2","timestamp":"1652648952459"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5129","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"829\\\",\\\"result\\\":{\\\"_id\\\":\\\"rwGzp85CNxvdCADAL\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static int[] jimOrders(int[][] orders) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":3.8666666666666667,\\\"quality\\\":0,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"awQDoRWkfyNrJN3QR\\\",\\\"instructions\\\":\\\"Jim's Burgers has a line of hungry customers. Orders vary in the time it takes to prepare them. Determine the order the customers receive their orders. Start by numbering each of the customers from `1` to `n`, front of the line to the back. You will then be given an order number and a preparation time for each customer.\\\\n\\\\nThe time of delivery is calculated as the sum of the order number and the preparation time. If two orders are delivered at the same time, assume they are delivered in ascending customer number order.\\\\n\\\\nFor example `n=5`, there are  customers in line. They each receive an order number `order[i]` and a pre","thisId":"2548","channelHost":"edabit.com","id":"2548","opcode":"1","channelId":"2","timestamp":"1652648952463"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"830\\\"]}\"]","thisId":"2549","channelHost":"edabit.com","id":"2549","opcode":"1","channelId":"2","timestamp":"1652648952569"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4343","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"830\\\",\\\"result\\\":{\\\"_id\\\":\\\"Zg5gHdtBMx2knzrdE\\\",\\\"author\\\":\\\"nihiltres\\\",\\\"authorId\\\":\\\"htXCitorobtqYymjN\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int sum() {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":3.875,\\\"editorId\\\":\\\"htXCitorobtqYymjN\\\",\\\"familyId\\\":\\\"2bibZsQFfN6HBic9Z\\\",\\\"instructions\\\":\\\"Create a function that takes an array of strings of arbitrary dimensionality (`String[]`, `String[][]`, `String[][][]`, etc) and returns the sum of every separate number in each string in the array.\\\\n\\\\n### Examples\\\\n```\\\\nsum({\\\\\\\"1\\\\\\\", \\\\\\\"five\\\\\\\", \\\\\\\"2wenty\\\\\\\", \\\\\\\"thr33\\\\\\\"}) ➞ 36\\\\n\\\\nsum({\\\\n  {\\\\\\\"1X2\\\\\\\", \\\\\\\"t3n\\\\\\\"},\\\\n  {\\\\\\\"1024\\\\\\\", \\\\\\\"5\\\\\\\", \\\\\\\"64\\\\\\\"}\\\\n}) ➞ 1099\\\\n\\\\nsum({\\\\n  {\\\\n    {\\\\\\\"0\\\\\\\", \\\\\\\"0x2\\\\\\\", \\\\\\\"z3r1\\\\\\\"},\\\\n    {\\\\\\\"1\\\\\\\", \\\\\\\"55a46\\\\\\\"}\\\\n  },\\\\n  {\\\\n    {\\\\\\\"1\\\\\\\", \\\\\\\"2\\\\\\\", \\\\\\\"4\\\\\\\"},\\\\n    {\\\\\\\"0x5fp-2\\\\\\\", \\\\\\\"nine\\\\\\\", \\\\\\\"9\\\\\\\"},\\\\n    {\\\\\\\"4\\\\\\\", \\\\\\\"4\\\\\\\", \\\\\\\"4\\\\\\\"}\\\\n  },\\\\n  {\\\\n    {\\\\\\\"03\\\\\\\"}\\\\n  },\\\\n  {}\\\\n}) ➞ 142","thisId":"2550","channelHost":"edabit.com","id":"2550","opcode":"1","channelId":"2","timestamp":"1652648952575"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"832\\\"]}\"]","thisId":"2551","channelHost":"edabit.com","id":"2551","opcode":"1","channelId":"2","timestamp":"1652648952679"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4798","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"832\\\",\\\"result\\\":{\\\"_id\\\":\\\"34xjPfMzkyYzJnzxw\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class OutShuffle {\\\\n\\\\tpublic static int shuffleCount(int num) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":3.909090909090909,\\\"familyId\\\":\\\"hRpierqDnNC6ErKGm\\\",\\\"instructions\\\":\\\"An **out-shuffle**, also known as an _out faro shuffle_ or a _perfect shuffle_, is a controlled method for shuffling playing cards. It is performed by splitting the deck into two equal halves and interleaving them together perfectly, with the condition that the top card of the deck remains in place.\\\\nUsing an array to represent a deck of cards, an out-shuffle looks like:\\\\n\\\\n```\\\\n[1, 2, 3, 4, 5, 6, 7, 8] ➞ [1, 5, 2, 6, 3, 7, 4, 8]\\\\n// Card 1 remains in the first position.\\\\n```\\\\nIf we repeat the process, the deck eventually returns to original order:\\\\nShuffle 1:\\\\n```\\\\n[1, 2, 3, 4, 5, 6, 7, 8] ➞ [1, 5, 2, 6, 3, 7, 4, 8]\\\\n```\\\\nShuffle 2:\\\\n```\\\\n[1, 5, 2, 6, 3, 7, 4, 8] ➞ ","thisId":"2552","channelHost":"edabit.com","id":"2552","opcode":"1","channelId":"2","timestamp":"1652648952683"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"831\\\"]}\"]","thisId":"2553","channelHost":"edabit.com","id":"2553","opcode":"1","channelId":"2","timestamp":"1652648952824"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5576","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"831\\\",\\\"result\\\":{\\\"_id\\\":\\\"745DLsFEmEQqdA6m3\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class ElevenTimes {\\\\n  public static String multiplyBy11(String n) {\\\\n\\\\t\\\\t// recursive code here\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":3.875,\\\"familyId\\\":\\\"f2L9aTQPqAsxHpb7F\\\",\\\"instructions\\\":\\\"Given a **positive** number as a string, multiply the number by **11** and also return it as a **string**. However, there is a catch:\\\\n\\\\n**You are NOT ALLOWED to simply cast the numeric string into an integer!**\\\\n\\\\nNow, how is this challenge even possible? Despite this, there is still a way to solve it, and it involves thinking about how someone might multiply by 11 in their head. See the tips below for guidance.\\\\n\\\\n### Examples\\\\n```\\\\nmultiplyBy11(\\\\\\\"11\\\\\\\") ➞ \\\\\\\"121\\\\\\\"\\\\n\\\\nmultiplyBy11(\\\\\\\"111111111\\\\\\\") ➞ \\\\\\\"1222222221\\\\\\\"\\\\n\\\\nmultiplyBy11(\\\\\\\"1213200020\\\\\\\") ➞ \\\\\\\"13345200220\\\\\\\"\\\\n\\\\nmultiplyBy11(\\\\\\\"1217197941\\\\\\\") ➞ \\\\\\\"13389177351\\\\\\\"\\\\n\\\\nmultip","thisId":"2554","channelHost":"edabit.com","id":"2554","opcode":"1","channelId":"2","timestamp":"1652648952828"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"833\\\"]}\"]","thisId":"2555","channelHost":"edabit.com","id":"2555","opcode":"1","channelId":"2","timestamp":"1652648952961"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"8333","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"833\\\",\\\"result\\\":{\\\"_id\\\":\\\"5X4wuS6eGsx2iz3cy\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String pascalsTriangle(String row) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":4.04,\\\"familyId\\\":\\\"qsBxhYxP2wbDCvMAt\\\",\\\"instructions\\\":\\\"The goal of this challenge is to return Pascal's triangle up to number 29. Pascal's triangle is the sum of the two upper corners.\\\\n\\\\n```\\\\n   1 1\\\\n  1 2 1\\\\n 1 3 3 1\\\\n\\\\n// There will always be the 1 in the first\\\\n// place and the row in the second.\\\\n```\\\\n\\\\n![Pascal's Triangle](https://edabit-challenges.s3.amazonaws.com/PascalTriangleAnimated2.gif \\\\\\\"Pascal's Triangle\\\\\\\")\\\\n\\\\nCreate a function that returns a row from Pascal's triangle. To find the row and column you can use `n!/(k!*(n-k)!)` where `n` is the row down and `k` is the column.\\\\n\\\\n### Examples\\\\n```\\\\npascalsTriangle(1) ➞ \\\\\\\"1 1\\\\\\\"\\\\n\\\\npascalsTriangle(4) ➞ \\\\\\\"1 4 6 4 1\\\\\\\"\\\\n\\\\npascalsTriangle(6) ➞ \\\\\\\"1 6 15 20 15","thisId":"2556","channelHost":"edabit.com","id":"2556","opcode":"1","channelId":"2","timestamp":"1652648952965"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"834\\\"]}\"]","thisId":"2557","channelHost":"edabit.com","id":"2557","opcode":"1","channelId":"2","timestamp":"1652648953064"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5094","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"834\\\",\\\"result\\\":{\\\"_id\\\":\\\"Gqs4Rzdq5tXNH7RKX\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String cipher(String msg, String keyword) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":4.130434782608695,\\\"familyId\\\":\\\"YCYvD7s8bZAJfcHtT\\\",\\\"instructions\\\":\\\"The columnar cipher is a transposition cipher that works like this.\\\\n\\\\nStart with a secret message:\\\\n\\\\n```\\\\nmsg = \\\\\\\"Meet me by the lake at midnight. Bring shovel.\\\\\\\"\\\\n```\\\\n\\\\nTransform uppercase letters into lowercase and remove punctuation and spaces:\\\\n\\\\n```\\\\nmsg = \\\\\\\"meetmebythelakeatmidnightbringshovel\\\\\\\"\\\\n```\\\\n\\\\nThen, pick a keyword made out of distinct letters:\\\\n\\\\n```\\\\nkeyword = \\\\\\\"python\\\\\\\"\\\\n```\\\\n\\\\nBreak up the message into chunks of the same length as the keyword, and write them in rows under the keyword. Then, number the columns based on the alphabetised order of the letters in the keyword:\\\\n\\\\np|y|t|h|o|n\\\\n| :---: | :---: | :---","thisId":"2558","channelHost":"edabit.com","id":"2558","opcode":"1","channelId":"2","timestamp":"1652648953072"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"835\\\"]}\"]","thisId":"2559","channelHost":"edabit.com","id":"2559","opcode":"1","channelId":"2","timestamp":"1652648953181"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4039","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"835\\\",\\\"result\\\":{\\\"_id\\\":\\\"HJCqdv4A3TMHrEvrk\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static String kaprekarNumbers(int p, int q) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":4.142857142857143,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"TAgrobTaSi4ENivk4\\\",\\\"instructions\\\":\\\"A modified Kaprekar number is a positive whole number with a special property. If you square it, then split the number into two integers and sum those integers, you have the same value you started with.\\\\n\\\\nConsider a positive whole number `n` with `d` digits. We square `n` to arrive at a number that is either `2 * d` digits long or `(2 * d) - 1` digits long. Split the string representation of the square into two parts, `l` and  `r`. The right-hand part, `r` must be `d` digits long. The left is the remaining substring. Convert those two substrings back to integers, add them and see if you get `n`.\\\\n\\\\nFor example, if `n=5`, `d=1`, then","thisId":"2560","channelHost":"edabit.com","id":"2560","opcode":"1","channelId":"2","timestamp":"1652648953186"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"836\\\"]}\"]","thisId":"2561","channelHost":"edabit.com","id":"2561","opcode":"1","channelId":"2","timestamp":"1652648953292"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3898","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"836\\\",\\\"result\\\":{\\\"_id\\\":\\\"2XSjprYKQMFpMqwJd\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static int evalPolynomial(String poly, int num) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":4.181818181818182,\\\"familyId\\\":\\\"yTL5BWCBvQcfYsKew\\\",\\\"instructions\\\":\\\"You will be given a polynomial expression in string form. The expression will contain any of the following operations, written using standard mathematical notation for a single variable, \\\\\\\"x\\\\\\\", as illustrated in the examples below:\\\\n- addition: x + 1\\\\n- subtraction: x – 2\\\\n- multiplication: 3x\\\\n- division: x / 4\\\\n- exponentation: x^5\\\\n- brackets: x(x + 1)\\\\n\\\\nYour task is to write a function that can evaluate such a polynomial for a given value of x. You will receive two arguments: the polynomial string and the input number.\\\\n\\\\nIf the mathematical expression contains an error, you should return `-1`.\\\\n\\\\n### Examples\\\\n```\\\\nevalPolynomial(\\\\\\\"x+1\\\\\\\", 5) ➞ 6\\\\","thisId":"2562","channelHost":"edabit.com","id":"2562","opcode":"1","channelId":"2","timestamp":"1652648953297"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"837\\\"]}\"]","thisId":"2563","channelHost":"edabit.com","id":"2563","opcode":"1","channelId":"2","timestamp":"1652648953409"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4173","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"837\\\",\\\"result\\\":{\\\"_id\\\":\\\"CDs32gcYBoqQpk44j\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class GreekSpartans2 {\\\\n  public static String decipher(String message, int nSlide) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":4.25,\\\"familyId\\\":\\\"gxAQQpWo8DFbMAY8W\\\",\\\"instructions\\\":\\\"In Spartans Cipher, encoding is done by writing the text horizontally, across the strap in the plaintext word of a message. In ancient times, Spartans and Greeks invented interesting way of encryption called _Scytale_. The details of the encoding algorithm is described in this [challenge](https://edabit.com/challenge/KXs93N4RX6jNSsgCr). You are encouraged to solve that one first.\\\\n\\\\nIn this challenge, the function is given the encoded message and the number of slides. Create a reversed solution to retrieve the original message.\\\\n\\\\n### Examples\\\\n```\\\\nspartansDecipher(\\\\\\\"IOHOIEAMIVTSMUNEHHSCLWTA\\\\\\\", 6) ➞ \\\\\\\"IAMSOMUCHINLOVEWITHTESHA\\\\\\\" \\\\n\\\\nspartansDecipher(\\\\\\\"T v","thisId":"2564","channelHost":"edabit.com","id":"2564","opcode":"1","channelId":"2","timestamp":"1652648953413"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"838\\\"]}\"]","thisId":"2565","channelHost":"edabit.com","id":"2565","opcode":"1","channelId":"2","timestamp":"1652648953523"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"30922","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"838\\\",\\\"result\\\":{\\\"_id\\\":\\\"kBguc5wSQtSoTyMyd\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class AnagramString {\\\\n  public static int[] findAnagrams(String s, String p) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":4.333333333333333,\\\"familyId\\\":\\\"nK3YbDvzuSMvfFZsL\\\",\\\"instructions\\\":\\\"An anagram is a word formed by rearranging the letters of a different word using all the original letters exactly once.\\\\n\\\\nThe function is given two strings: `s` - to search in, `p` - a template word. Find the starting indexes of anagrams of `p` among substrings of the given `s`.\\\\n\\\\n### Examples\\\\n```\\\\nfindAnagrams(\\\\\\\"cbaebabacd\\\\\\\", \\\\\\\"abc\\\\\\\") ➞ [0, 6]\\\\n// Anagrams: \\\\\\\"cba\\\\\\\", \\\\\\\"bac\\\\\\\"\\\\n\\\\nfindAnagrams(\\\\\\\"abab\\\\\\\", \\\\\\\"ab\\\\\\\") ➞ [0, 1, 2]\\\\n// Anagrams: \\\\\\\"ab\\\\\\\", \\\\\\\"ba\\\\\\\", \\\\\\\"ab\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import static org.junit.Assert.assertArrayEquals; \\\\nimport org.junit.","thisId":"2566","channelHost":"edabit.com","id":"2566","opcode":"1","channelId":"2","timestamp":"1652648953528"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"839\\\"]}\"]","thisId":"2567","channelHost":"edabit.com","id":"2567","opcode":"1","channelId":"2","timestamp":"1652648953638"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"2869","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"839\\\",\\\"result\\\":{\\\"_id\\\":\\\"zARWST6dTceWpoeA7\\\",\\\"author\\\":\\\"_fluffyy\\\",\\\"authorId\\\":\\\"foytX6kH9wiSYqLtT\\\",\\\"code\\\":\\\"import java.lang.reflect.Field;\\\\npublic final class Challenge {\\\\n  public static int getSecretVar(NonSuspiciousObject obj) {\\\\n\\\\treturn obj.secretVar;   // this will fail\\\\n  }\\\\n}\\\",\\\"difficulty\\\":4.363636363636363,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"hnRSJftaFwRPteMmL\\\",\\\"instructions\\\":\\\"Given an instance of the `NonSuspiciousObject` class, return its `secretVar` attribute.\\\\n\\\\n### Examples\\\\n```\\\\ngetSecretVar(new NonSuspiciousObject(9)) ➞ 9\\\\n\\\\ngetSecretVar(new NonSuspiciousObject(31)) ➞ 31\\\\n\\\\ngetSecretVar(new NonSuspiciousObject(-497)) ➞ -497\\\\n```\\\\n\\\\n### Notes\\\\n- **The `secretVar` attribute is private!**\\\\n- The tests are randomized; the challenge isn't to reverse engineer the PRNG.\\\\n- The import statement at the top of the \\\\\\\"Code\\\\\\\" tab should give you a hint.\\\\n- If you're stuck, try looking at the docs for the imported class ","thisId":"2568","channelHost":"edabit.com","id":"2568","opcode":"1","channelId":"2","timestamp":"1652648953645"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"841\\\"]}\"]","thisId":"2569","channelHost":"edabit.com","id":"2569","opcode":"1","channelId":"2","timestamp":"1652648953825"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"5334","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"841\\\",\\\"result\\\":{\\\"_id\\\":\\\"SRSgm5r3P6tRZPRAy\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class ConsecutiveNumbers {\\\\n\\\\tpublic static boolean ascending(String str) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":4.4,\\\"editorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"familyId\\\":\\\"vodSjrpyPTPaviSsr\\\",\\\"instructions\\\":\\\"Write a function that will return `true` if a given string (divided and grouped into a size) will contain a set of **consecutive ascending** numbers, otherwise, return `false`.\\\\n\\\\n\\\\n### Examples\\\\n```\\\\nascending(\\\\\\\"123124125\\\\\\\") ➞ true\\\\n// Contains a set of consecutive ascending numbers\\\\n// if grouped into 3's : 123, 124, 125\\\\n\\\\nascending(\\\\\\\"101112131415\\\\\\\") ➞ true\\\\n// Contains a set of consecutive ascending numbers\\\\n// if grouped into 2's : 10, 11, 12, 13, 14, 15\\\\n\\\\nascending(\\\\\\\"32332432536\\\\\\\") ➞ false\\\\n// Regardless of the grouping size, the numbers can't be consecutive.\\\\n\\\\nascending(\\\\\\\"326325324323\\\\\\\") ➞ false\\\\n// Though t","thisId":"2570","channelHost":"edabit.com","id":"2570","opcode":"1","channelId":"2","timestamp":"1652648953831"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"840\\\"]}\"]","thisId":"2571","channelHost":"edabit.com","id":"2571","opcode":"1","channelId":"2","timestamp":"1652648954128"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4137","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"840\\\",\\\"result\\\":{\\\"_id\\\":\\\"LGKApTn5MRT7wYkcc\\\",\\\"author\\\":\\\"Kálmán Vilisics\\\",\\\"authorId\\\":\\\"Es4eX2stRpyoXeC7f\\\",\\\"code\\\":\\\"public class Challange {\\\\n  public static Object runJS(String c) {\\\\n  \\\\t\\\\n  }\\\\t\\\\n}\\\",\\\"difficulty\\\":4.375,\\\"editorId\\\":\\\"Es4eX2stRpyoXeC7f\\\",\\\"familyId\\\":\\\"ht34dAdyi6pR3wyp6\\\",\\\"instructions\\\":\\\"Create a method that takes JavaScript code and returns the output of that code.\\\\n\\\\n### Examples\\\\n```\\\\nrunJS(\\\\\\\"3*3/2\\\\\\\") ➞ 4.5\\\\n\\\\nString code=\\\\\\\"\\\\n  var a=10;\\\\n  var b=20;\\\\n  isGreater(a, b);\\\\n  function isGreater(a, b) {\\\\n    return a>b\\\\n  }\\\\\\\";\\\\nrunJS(code) ➞ false\\\\n\\\\nrunJS(\\\\\\\"var =13\\\\\\\") ➞ \\\\\\\"Error at line:1 col:4\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nCheck the **Resources** tab if you're stuck.\\\",\\\"isFree\\\":false,\\\"isHidden\\\":false,\\\"lab\\\":\\\"import org.junit.Test;\\\\nimport static org.junit.Assert.assertEquals;\\\\n\\\\npublic class ProgramTest {\\\\n  @Test\\\\n\\\\tpublic void test1(){\\\\n\\\\t\\\\tassertEquals(4.5, Challange.runJS(\\\\\\\"3*3/2\\\\\\\"));\\\\n\\\\t}\\\\","thisId":"2572","channelHost":"edabit.com","id":"2572","opcode":"1","channelId":"2","timestamp":"1652648954133"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"842\\\"]}\"]","thisId":"2573","channelHost":"edabit.com","id":"2573","opcode":"1","channelId":"2","timestamp":"1652648954357"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"23431","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"842\\\",\\\"result\\\":{\\\"_id\\\":\\\"xNoC5g5rnT5R8YJqb\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class RealNumbers {\\\\n\\\\tpublic static String fractionsAddition(String expr) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":4.428571428571429,\\\"familyId\\\":\\\"TyhketkzXgWE487Xn\\\",\\\"instructions\\\":\\\"The function is given a string representing an expression of many fractions addition and subtraction. Compute the arithmetic result and return the string in the form of an irreducible fraction. Even if the result is an integer, e.g. `3`, return it as `3/1`.\\\\n\\\\n### Examples\\\\n```\\\\nfractionsAddition(\\\\\\\"4/5-6/4\\\\\\\") ➞ \\\\\\\"-7/10\\\\\\\"\\\\n\\\\nfractionsAddition(\\\\\\\"5/4-6/6\\\\\\\") ➞ \\\\\\\"1/4\\\\\\\"\\\\n\\\\nfractionsAddition(\\\\\\\"-1/2+1/2\\\\\\\") ➞ \\\\\\\"0/1\\\\\\\"\\\\n\\\\nfractionsAddition(\\\\\\\"-1/2+1/2+1/3\\\\\\\") ➞ \\\\\\\"1/3\\\\\\\"\\\\n\\\\nfractionsAddition(\\\\\\\"1/3-1/2\\\\\\\") ➞ \\\\\\\"-1/6\\\\\\\"\\\\n\\\\nfractionsAddition(\\\\\\\"5/3+1/3\\\\\\\") ➞ \\\\\\\"2/1\\\\\\\"\\\\n```\\\\n\\\\n### Notes\\\\nN/A\\\",\\\"isFlagged\\\":false,\\\"isFree\\\":fals","thisId":"2574","channelHost":"edabit.com","id":"2574","opcode":"1","channelId":"2","timestamp":"1652648954363"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"843\\\"]}\"]","thisId":"2575","channelHost":"edabit.com","id":"2575","opcode":"1","channelId":"2","timestamp":"1652648954481"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6602","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"843\\\",\\\"result\\\":{\\\"_id\\\":\\\"aBm55e7eoE8zYkgo5\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class NumberSeries {\\\\n  public static boolean isConsecutive(String s) {\\\\n\\\\t\\\\t// recursive code in here\\\\n  }\\\\n}\\\",\\\"difficulty\\\":4.5,\\\"editorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"familyId\\\":\\\"gjMAWi679jnXKTPyi\\\",\\\"instructions\\\":\\\"Write a function that will return `true` if a given string (divided and grouped into a size) will contain a set of **consecutive** numbers (regardless of orientation: whether **ascending** or **descending**), otherwise, return `false`.\\\\n\\\\n### Examples\\\\n```\\\\nisConsecutive(\\\\\\\"121314151617\\\\\\\") ➞ true\\\\n// Contains a set of consecutive ascending numbers\\\\n// if grouped into 2's : 12, 13, 14, 15, 16, 17\\\\n\\\\nisConsecutive(\\\\\\\"123124125\\\\\\\") ➞ true\\\\n// Contains a set of consecutive ascending numbers\\\\n// if grouped into 3's : 123, 124, 125\\\\n\\\\nisConsecutive(\\\\\\\"32332432536\\\\\\\") ➞ false\\\\n// Regardless of the grouping size, the ","thisId":"2576","channelHost":"edabit.com","id":"2576","opcode":"1","channelId":"2","timestamp":"1652648954486"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"844\\\"]}\"]","thisId":"2577","channelHost":"edabit.com","id":"2577","opcode":"1","channelId":"2","timestamp":"1652648954620"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"12086","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"844\\\",\\\"result\\\":{\\\"_id\\\":\\\"6QmLJWeMazDnxeXaX\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class TwistedNumberSum {\\\\n\\\\tpublic static String sum(String a, String b) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":4.5,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"3xfq5QPqSqiiczFmE\\\",\\\"instructions\\\":\\\"This is an \\\\\\\"**expert**\\\\\\\" challenge??!! Why is a sum of two numbers an \\\\\\\"**expert**\\\\\\\" challenge??!! Well, the numbers can have 1000 digits or even beyond such count...\\\\n\\\\nSo, what's the **twist**? You have to do the summation as if you're doing it manually on a piece of paper, thus, the conversion of the **numeric string** to **numeric literal** is basically **disallowed**.\\\\n\\\\n### Examples\\\\n```\\\\nsum(\\\\\\\"12132000\\\\\\\", \\\\\\\"12171979\\\\\\\") ➞ \\\\\\\"24303979\\\\\\\"\\\\n\\\\nsum(\\\\\\\"4666\\\\\\\", \\\\\\\"544\\\\\\\") ➞ \\\\\\\"5210\\\\\\\"\\\\n\\\\nsum(\\\\\\\"1521512512512512515\\\\\\\", \\\\\\\"898989898989988998899898\\\\\\\") ➞ \\\\\\\"898991420502501511412413\\\\\\\"\\\\n\\\\nsum(\\\\\\\"51255152155215","thisId":"2578","channelHost":"edabit.com","id":"2578","opcode":"1","channelId":"2","timestamp":"1652648954625"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"845\\\"]}\"]","thisId":"2579","channelHost":"edabit.com","id":"2579","opcode":"1","channelId":"2","timestamp":"1652648954726"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"3611","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"845\\\",\\\"result\\\":{\\\"_id\\\":\\\"3BKwQipQry86wYwLo\\\",\\\"author\\\":\\\"Edward Clark\\\",\\\"authorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String[] palindromicDates(String date, int years) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":4.588235294117647,\\\"editorId\\\":\\\"3pdgguqZgNDSAJSGm\\\",\\\"familyId\\\":\\\"bzmAXn9zC8NyB9x8C\\\",\\\"instructions\\\":\\\"The 2nd of February 2020 is a palindromic date in both _dd/mm/yyyy_ and _mm/dd/yyyy_ format (02/02/2020).\\\\n\\\\nFebruary 2, 2020 is the only 2-digit month and day palindromic date that will occur in the 21st century.  The next occurrence of a 2-digit month and day palindromic date will be December 12, 2121, which is exactly 101 years from the last occurrence.  101 is also a palindrome.  Between the years, 3030 and 9090, exactly 1010 years separate each occurrence of a 2-digit month and day palindromic date. \\\\n\\\\nGiven a date in _mm/dd/yyyy_ format and the number of years to scan, return an array containing palindromic dates","thisId":"2580","channelHost":"edabit.com","id":"2580","opcode":"1","channelId":"2","timestamp":"1652648954731"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"846\\\"]}\"]","thisId":"2581","channelHost":"edabit.com","id":"2581","opcode":"1","channelId":"2","timestamp":"1652648954851"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6502","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"846\\\",\\\"result\\\":{\\\"_id\\\":\\\"do3FXijRWDakuQART\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String baconify(String msg, String mask) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":4.615384615384615,\\\"familyId\\\":\\\"hPWbPtsqJS6zg3qJn\\\",\\\"instructions\\\":\\\"This challenge makes use of a modified **Baconian** (Francis Bacon) **cipher**. The following is an example of a (modified) Baconian ciphertext:\\\\n\\\\n```\\\\nciphertext = \\\\\\\"KNowlEDgE ITsElf Is power.\\\\\\\"\\\\n```\\\\n\\\\nThe peculiar capitalisation might, at first glance, suggest that either the lowercase or uppercase letters contain, or code for, the hidden message (upper = \\\\\\\"KNEDEITEI\\\\\\\", lower = \\\\\\\"owlgslfspower\\\\\\\").\\\\n\\\\nBut actually, the Baconian cipher is a *steganographic* method of hiding information. The hidden message is not in the content of the ciphertext, but rather in the *presentation*. It doesn't matter which letters are capitalised, just the order of the cap","thisId":"2582","channelHost":"edabit.com","id":"2582","opcode":"1","channelId":"2","timestamp":"1652648954858"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"847\\\"]}\"]","thisId":"2583","channelHost":"edabit.com","id":"2583","opcode":"1","channelId":"2","timestamp":"1652648954952"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"15980","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"847\\\",\\\"result\\\":{\\\"_id\\\":\\\"imM3Hz44BLEPCKoFe\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class CompressedChars {\\\\n  public static String compress(String[] c) {\\\\n \\\\t\\\\t// recursive code here\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":4.666666666666667,\\\"familyId\\\":\\\"GQHf8riMgyddYiXJi\\\",\\\"instructions\\\":\\\"The function is given an array of characters. **Recursively compress** the array into a string using the following rules. For each group of consecutively repeating characters:\\\\n- If the number of repeating characters is one, append the string with only this character.\\\\n- If the number `n` of repeating characters `x` is greater than one, append the string with `\\\\\\\"x\\\\\\\" + n`.\\\\n\\\\n### Examples\\\\n```\\\\ncompress([\\\\\\\"t\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"e\\\\\\\", \\\\\\\"s\\\\\\\", \\\\\\\"s\\\\\\\", \\\\\\\"s\\\\\\\", \\\\\\\"h\\\\\\\"]) ➞ \\\\\\\"te14s3h\\\\\\\"\\\\n\\\\ncompress([","thisId":"2584","channelHost":"edabit.com","id":"2584","opcode":"1","channelId":"2","timestamp":"1652648954959"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"848\\\"]}\"]","thisId":"2585","channelHost":"edabit.com","id":"2585","opcode":"1","channelId":"2","timestamp":"1652648955064"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"7001","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"848\\\",\\\"result\\\":{\\\"_id\\\":\\\"Jfw8TqjNtNnq5jtkA\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String playfair(String str, String keyword) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":4.666666666666667,\\\"familyId\\\":\\\"dqccR7SfvMq7bbBsQ\\\",\\\"instructions\\\":\\\"The **Playfair cipher** is a substitution cipher that uses digraphs (pairs of letters) instead of single letters, and makes use of symmetrical encryption.\\\\n\\\\nThere are some variations on the rules of encipherment. One version of the cipher\\\\nrules is outlined below:\\\\n\\\\n1.  A 5x5 *Polybius square* is constructed, *deranged* with a keyword.\\\\n\\\\n```\\\\nkeyword = python\\\\n```\\\\n\\\\n  - First, fill in the keyword at the top of the grid, omitting any duplicates (3rd example's keyword has two occurrences of \\\\\\\"h\\\\\\\". The second one should be omitted).\\\\n\\\\n  | | | | | |\\\\n  ---|---|---|---|---\\\\n  P|Y|T|H|O\\\\n  N| | | | |\\\\n  | | | | | |\\\\n  | | | | | |\\\\n  | | | | | |\\\\n\\\\","thisId":"2586","channelHost":"edabit.com","id":"2586","opcode":"1","channelId":"2","timestamp":"1652648955068"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"849\\\"]}\"]","thisId":"2587","channelHost":"edabit.com","id":"2587","opcode":"1","channelId":"2","timestamp":"1652648955170"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"4796","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"849\\\",\\\"result\\\":{\\\"_id\\\":\\\"SoyrGdNNwZLYSgwGe\\\",\\\"author\\\":\\\"Matt\\\",\\\"authorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"code\\\":\\\"public class Challenge {\\\\n\\\\tpublic static String isVampire(int n) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":4.7272727272727275,\\\"familyId\\\":\\\"sFiAJfNEHHNirGkxo\\\",\\\"instructions\\\":\\\"A Vampire Number is a positive integer greater than 99, that rearranged in all of its possible digits permutations, with every permutation being split into two parts, is equal to the product of at least one of its permutations.\\\\n\\\\n- If the number has an even quantity of digits, left and right parts will have the same length in every permutation;\\\\n- If the number has an odd quantity of digits and at least three digits, the left and right parts will present different lengths for every possible permutation, alternating between them in the range +1 and -1.\\\\n\\\\nGiven a positive integer `n`, implement a function that returns the type of `n` as a string:\\\\n\\\\n- `'Normal Number'` if `n` is lowe","thisId":"2588","channelHost":"edabit.com","id":"2588","opcode":"1","channelId":"2","timestamp":"1652648955175"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"850\\\"]}\"]","thisId":"2589","channelHost":"edabit.com","id":"2589","opcode":"1","channelId":"2","timestamp":"1652648955270"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"6029","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"850\\\",\\\"result\\\":{\\\"_id\\\":\\\"fSohszsuqKXYDDjGb\\\",\\\"author\\\":\\\"Nathan Hohnbaum\\\",\\\"authorId\\\":\\\"Li55JB322ZcMFGna8\\\",\\\"code\\\":\\\"public class Challenge {\\\\n  public static int moves(String start) {\\\\n\\\\t\\\\t\\\\n  }\\\\n}\\\",\\\"difficulty\\\":4.7272727272727275,\\\"editorId\\\":\\\"BkPgkDQGHm66X4Qai\\\",\\\"familyId\\\":\\\"4Yi8qcQHYuFCkQtH2\\\",\\\"instructions\\\":\\\"Given a string, a move is made by either removing the substring \\\\\\\"actor\\\\\\\" or by removing the substring \\\\\\\"intact\\\\\\\".  Upon removing a substring, a new string is produced, and moves may be made from the new string until no more moves are possible.\\\\n\\\\nFor example, given the string `\\\\\\\"inactortact\\\\\\\"`, one can first remove the substring `\\\\\\\"actor\\\\\\\"` to get `\\\\\\\"intact\\\\\\\"` and then remove the substring `\\\\\\\"intact\\\\\\\"` to get the empty string from which point, no more moves are possible.\\\\n\\\\nThe goal of this challenge is to determine the maximum number of moves that can be made from a starting string. Note that in some situations, more","thisId":"2590","channelHost":"edabit.com","id":"2590","opcode":"1","channelId":"2","timestamp":"1652648955274"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"48","payloadFragment":"a[\"{\\\"msg\\\":\\\"updated\\\",\\\"methods\\\":[\\\"851\\\"]}\"]","thisId":"2591","channelHost":"edabit.com","id":"2591","opcode":"1","channelId":"2","timestamp":"1652648955389"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"23538","payloadFragment":"a[\"{\\\"msg\\\":\\\"result\\\",\\\"id\\\":\\\"851\\\",\\\"result\\\":{\\\"_id\\\":\\\"YdKPDaRgdxzhfdduR\\\",\\\"author\\\":\\\"Deep Xavier\\\",\\\"authorId\\\":\\\"a777e8chPvJkY3tKa\\\",\\\"code\\\":\\\"public class ShuffledString {\\\\n\\\\tpublic static boolean checkInclusion(String s1, String s2) {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\",\\\"difficulty\\\":5,\\\"familyId\\\":\\\"erRHq7bkbvF3A32H8\\\",\\\"instructions\\\":\\\"The function is given two strings `s1` and `s2`. Determine if one of the permutations of characters of `s1` is a substring of `s2`, return `true` / `false`.\\\\n\\\\n### Examples\\\\n```\\\\ncheckInclusion(\\\\\\\"ab\\\\\\\", \\\\\\\"edabitbooo\\\\\\\") ➞ true\\\\n// \\\\\\\"ab\\\\\\\" is in s2.\\\\n\\\\ncheckInclusion(\\\\\\\"ab\\\\\\\", \\\\\\\"edaoboat\\\\\\\") ➞ false\\\\n// neither \\\\\\\"ab\\\\\\\" or \\\\\\\"ba\\\\\\\" is in s2.\\\\n\\\\ncheckInclusion(\\\\\\\"adc\\\\\\\", \\\\\\\"dcda\\\\\\\") ➞ true\\\\n// \\\\\\\"cda\\\\\\\" is a permutation of \\\\\\\"adc\\\\\\\" and it is in s2.\\\\n\\\\ncheckInclusion(\\\\\\\"sgyuws\\\\\\\", \\\\\\\"oldqwqdmlvsguswyfbj\\\\\\\") ➞ true\\\\n// \\\\\\\"sguswy\\\\\\\" is a permutation of s1 and it is in s2.\\\\n```\\\\n\\\\n### Notes\\\\nAll characters in both strings are low","thisId":"2592","channelHost":"edabit.com","id":"2592","opcode":"1","channelId":"2","timestamp":"1652648955394"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"23","payloadFragment":"a[\"{\\\"msg\\\":\\\"ping\\\"}\"]","thisId":"2593","channelHost":"edabit.com","id":"2593","opcode":"1","channelId":"2","timestamp":"1652648964452"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"22","payloadFragment":"[\"{\\\"msg\\\":\\\"pong\\\"}\"]","thisId":"2594","channelHost":"edabit.com","id":"2594","opcode":"1","channelId":"2","timestamp":"1652648964458"},{"outgoing":"false","opcodeString":"PING","payloadLength":"0","payloadFragment":"","thisId":"2595","channelHost":"edabit.com","id":"2595","opcode":"9","channelId":"2","timestamp":"1652648994067"},{"outgoing":"true","opcodeString":"PONG","payloadLength":"0","payloadFragment":"","thisId":"2596","channelHost":"edabit.com","id":"2596","opcode":"10","channelId":"2","timestamp":"1652648994100"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"23","payloadFragment":"a[\"{\\\"msg\\\":\\\"ping\\\"}\"]","thisId":"2597","channelHost":"edabit.com","id":"2597","opcode":"1","channelId":"2","timestamp":"1652648994476"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"22","payloadFragment":"[\"{\\\"msg\\\":\\\"pong\\\"}\"]","thisId":"2598","channelHost":"edabit.com","id":"2598","opcode":"1","channelId":"2","timestamp":"1652648994484"},{"outgoing":"true","opcodeString":"TEXT","payloadLength":"22","payloadFragment":"[\"{\\\"msg\\\":\\\"ping\\\"}\"]","thisId":"2599","channelHost":"edabit.com","id":"2599","opcode":"1","channelId":"2","timestamp":"1652649013488"},{"outgoing":"false","opcodeString":"TEXT","payloadLength":"23","payloadFragment":"a[\"{\\\"msg\\\":\\\"pong\\\"}\"]","thisId":"2600","channelHost":"edabit.com","id":"2600","opcode":"1","channelId":"2","timestamp":"1652649013680"}]}